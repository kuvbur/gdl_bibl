! const values for parameter: iDWDet2DDETLEVEL_DW2D_MVO     = 1DETLEVEL_DW2D_SCSENS  = 2DETLEVEL_DW2D_50      = 3DETLEVEL_DW2D_100     = 4DETLEVEL_DW2D_MIDDET  = 5DETLEVEL_DW2D_SMPL2L  = 6DETLEVEL_DW2D_200     = 7DETLEVEL_DW2D_OFF     = 8DETLEVEL_DW2D_MIDUSA  = 9DETLEVEL_DW2D_CHISMPL = 10DETLEVEL_DW2D_CHIDET  = 11DETLEVEL_DW2D_20      = 12! const values for parameter: iTypeDemolitionFillRENOVATION_FILL_EXIST      = 1RENOVATION_FILL_DEMOLISHED = 2RENOVATION_FILL_NEW        = 3! const values for parameter: iCornerConnTypeRightCONNECTION_TYPE_FRAME  = 1CONNECTION_TYPE_COLUMN = 2CONNECTION_TYPE_GLASS  = 3! const values for parameter: iCornerConnTypeLeftCONNECTION_TYPE_FRAME  = 1CONNECTION_TYPE_COLUMN = 2CONNECTION_TYPE_GLASS  = 3! const values for parameter: gs_SashText_typ_numMITERED_JOINT = 1BUTT_JOINT    = 2! Contact person: <SzL, NJ>EPS = 0.0001! gs_optype_mSASH_FIXED					= 1		! Fixed GlassSASH_FIXED_SCREW			= 2		! Fixed SashSASH_SIDE_HUNG				= 3		! Side HungSASH_SIDE_HUNG_M			= 4		! Side Hung MirroredSASH_TILT_TURN				= 5		! Tilt and TurnSASH_TILT_TURN_M			= 6		! Tilt and Turn MirroredSASH_BOTTOM_HUNG			= 7		! Bottom HungSASH_TOP_HUNG				= 8		! Top HungSASH_HOR_PIVOT				= 9		! Horizontal Pivot HungSASH_VER_PIVOT				= 10	! Vertical PivottedSASH_TILT_SLIDE				= 11	! Tilt and SlideSASH_LEFT_SLIDING			= 12	! Left SlidingSASH_RIGHT_SLIDING			= 13	! Right SlidingSASH_UP_SLIDING				= 14	! Sliding UpSASH_DOWN_SLIDING			= 15	! Sliding DownSASH_VER_PIVOT_M			= 16	! Vertical Pivotted MirroredSASH_FIXED_SLIDE			= 17	! Fixed Sliding SashSASH_DOUBLE_SIDE_HUNG		= 18	! Double SashSASH_DOUBLE_TILT_TURN		= 19	! Double Tilt and TurnSASH_DOUBLE_TILT_TURN_M		= 20	! Double Tilt and Turn MirroredSASH_SLIDING_HOR			= 21	! SlidingSASH_SLIDING_HOR_M			= 22	! Sliding MirroredSASH_DOUBLE_SLIDING_HOR		= 23	! Double SlidingSASH_DOUBLE_SLIDING_HOR_M	= 24	! Double Sliding MirroredSASH_SLIDING_VER			= 25	! Single HungSASH_DOUBLE_SLIDING_VER		= 26	! Double Hung! gs_iPanesConfigPANESCONFIG_UNIFORM		= 1PANESCONFIG_SYMM		= 2PANESCONFIG_ASYMM		= 3PANESCONFIG_UNIF_DOUBSASHES		= 4! iMullionStyleMULLION_NONE			= 1MULLION_HVGRID			= 2MULLION_EDITABLEGRID	= 3MULLION_CUSTOM			= 4MULLION_PRAIRIE			= 5MULLION_DIVIDED			= 6! iMullionPositionMULLION_OUTSIDE		= 1MULLION_INSIDE		= 2MULLION_THROUGHOUT	= 3! iSashType:SASHTYPE_INDEPENDENT	= 1SASHTYPE_DOUBLE_LEFT	= 2SASHTYPE_DOUBLE_RIGHT	= 3! iWindowType:WIN_W1							= 1WIN_WDoubleSash					= 2WIN_W2							= 3WIN_W2Sidelight					= 4WIN_W3							= 5WIN_W32Sidelights1				= 6WIN_W32Sidelights2				= 7WIN_WVariable					= 8WIN_WVariableDoubleSash			= 9WIN_HistoricWindowSingle2		= 10WIN_HistoricWindowSingle		= 11WIN_HistoricWindowDouble		= 12WIN_HistoricWindowTriple		= 13WIN_HistoricWindowSegmented		= 14WIN_HistoricWindowTripleArched	= 15WIN_W2HorizontalSlide			= 16WIN_W4HorizontalSlide			= 17WIN_Curved						= 18WIN_Bow							= 19WIN_SplayBay					= 20WIN_SquareBay					= 21WIN_Ribbon						= 22WIN_WSingleHung1				= 23WIN_WSingleHung2				= 24WIN_WSingleHung3				= 25WIN_WDoubleHung1				= 26WIN_WDoubleHung2				= 27WIN_WDoubleHung3				= 28WIN_WRound						= 29WIN_WOval						= 30WIN_WMultiside					= 31WIN_WHalfRound					= 32WIN_WQuarterRound 				= 33WIN_WPentagon					= 34WIN_WTriangle					= 35WIN_WEyebrows					= 36WIN_WArched						= 37WIN_WTrapezoid					= 38WIN_WTrapezoidDoubleSash		= 39WIN_VentWindow					= 40WIN_2SashSliding				= 41WIN_MultisashHorizontal			= 42WIN_MultisashVertical			= 43WIN_GlassBlock					= 44WIN_TerraceDoorSWE				= 45WIN_W3HorizontalSlide			= 46WIN_W6HorizontalSlide			= 47WIN_VentilationBrick			= 48WIN_Rhomb						= 49WIN_Skewed						= 50DOOR_NoSidelight				= 100DOOR_OneSidelight				= 101DOOR_TwoSidelight				= 102! iWindowClass:WINCLASS_NORMAL				= 1WINCLASS_HISTORIC			= 2WINCLASS_SINGLE_HUNG		= 3WINCLASS_DOUBLE_HUNG		= 4WINCLASS_HORIZONTAL_SLIDING	= 5WINCLASS_SPECIAL			= 6WINCLASS_DOORSASH			= 7WINCLASS_MULTISASH			= 8WINCLASS_SHELL				= 10! lod2D:DET2D_OFF				= 0DET2D_SCALESENS			= -1DET2D_SIMPLE_ONE		= 11DET2D_SIMPLE_TWO		= 12DET2D_MIDDLE			= 21DET2D_MIDDLE_USA		= 22DET2D_DETAILED			= 30DET2D_DETAILED_FIX_GRID	= 31DET2D_DETAILED_USA		= 32DET2D_SIMPLE_CHI		= 51DET2D_DETAILED_CHI		= 52! iLoD2DSYMBW_OFF					= 0SYMBW_SCALESENS				= 1SYMBW_S_1LINE				= 11SYMBW_S_2LINE				= 12SYMBW_S_CENTERLINE			= 13SYMBW_S_2LINE_ACC			= 14SYMBW_S_5					= 15SYMBW_S_6					= 16SYMBW_S_7					= 17SYMBW_S_8					= 18SYMBW_S_9					= 19SYMBW_M_2LINE_NOGLASS		= 21SYMBW_M_2LINE_GLASS			= 22SYMBW_M_FRAMESASH			= 23SYMBW_M_2LINE_FRAME			= 24SYMBW_M_5					= 25SYMBW_M_6					= 26SYMBW_M_7					= 27SYMBW_M_8					= 28SYMBW_M_9					= 29SYMBW_D_SGLASS				= 31SYMBW_D_2GLASS				= 32SYMBW_D_2LINE_HS			= 33SYMBW_D_NOGLASS				= 34SYMBW_D_REBATEONGLASS		= 35SYMBW_D_2GLASS_OVERLAP		= 36SYMBW_D_7					= 37SYMBW_D_8					= 38SYMBW_D_9					= 39! ifc_optype:WIN_OP_NOT_DEFINED				= 0WIN_OP_SINGLE_PANEL				= 1WIN_OP_DOUBLE_PANEL_VERTICAL	= 2WIN_OP_DOUBLE_PANEL_HORIZONTAL	= 3WIN_OP_TRIPLE_PANEL_VERTICAL	= 4WIN_OP_TRIPLE_PANEL_HORIZONTAL	= 5WIN_OP_TRIPLE_PANEL_BOTTOM		= 6WIN_OP_TRIPLE_PANEL_TOP			= 7WIN_OP_TRIPLE_PANEL_LEFT		= 8WIN_OP_TRIPLE_PANEL_RIGHT		= 9WIN_OP_USER_DEFINED				= 10! iVentilationProfileTypeVENTPROFILE_OVER_FRAME		= 2VENTPROFILE_OVER_GLAZING	= 3! =============================================================================! Uniform Sashes! =============================================================================iMullionStyleOriginal_01 = iMullionStyle_01iMullionStyleOriginal_02 = iMullionStyle_02iMullionStyleOriginal_03 = iMullionStyle_03iMullionStyleOriginal_04 = iMullionStyle_04iMullionStyleOriginal_05 = iMullionStyle_05iMullionStyleOriginal_06 = iMullionStyle_06iMullionStyleOriginal_07 = iMullionStyle_07iMullionStyleOriginal_08 = iMullionStyle_08iMullionStyleOriginal_09 = iMullionStyle_09iMullionStyleOriginal_10 = iMullionStyle_10iMullionStyleOriginal_11 = iMullionStyle_11if gs_sash_uniform then!	MainCasementID = 1	(values of CasementIDArray[2][2])	iMullionStyle_01 = iMullionStyle_00	iMullionStyle_02 = iMullionStyle_00	iMullionStyle_03 = iMullionStyle_00	iMullionStyle_04 = iMullionStyle_00	iMullionStyle_05 = iMullionStyle_00	iMullionStyle_06 = iMullionStyle_00	iMullionStyle_07 = iMullionStyle_00	iMullionStyle_08 = iMullionStyle_00	iMullionStyle_09 = iMullionStyle_00	iMullionStyle_10 = iMullionStyle_00	iMullionStyle_11 = iMullionStyle_00	gs_cust_panel_01 = gs_cust_panel_00	gs_cust_panel_02 = gs_cust_panel_00	gs_cust_panel_03 = gs_cust_panel_00	gs_cust_panel_04 = gs_cust_panel_00	gs_cust_panel_05 = gs_cust_panel_00	gs_cust_panel_06 = gs_cust_panel_00	gs_cust_panel_07 = gs_cust_panel_00	gs_cust_panel_08 = gs_cust_panel_00	gs_cust_panel_09 = gs_cust_panel_00	gs_cust_panel_10 = gs_cust_panel_00	gs_cust_panel_11 = gs_cust_panel_00	gs_cust_panel2_01 = gs_cust_panel_00	gs_cust_panel2_02 = gs_cust_panel_00	gs_cust_panel2_03 = gs_cust_panel_00	gs_cust_panel2_04 = gs_cust_panel_00	gs_cust_panel2_05 = gs_cust_panel_00	gs_cust_panel2_06 = gs_cust_panel_00	gs_cust_panel2_07 = gs_cust_panel_00	gs_cust_panel2_08 = gs_cust_panel_00	gs_cust_panel2_09 = gs_cust_panel_00	gs_cust_panel2_10 = gs_cust_panel_00	gs_cust_panel2_11 = gs_cust_panel_00	if	iWindowType = WIN_MultisashHorizontal	|\		iWindowType = WIN_MultisashVertical		then		if iMullionStyle_00 <> MULLION_DIVIDED then			vgn2_01 = vgn_01			hgn2_01 = hgn_01		endif		vgn_02	= vgn_01		hgn_02	= hgn_01		vgn2_02	= vgn2_01		hgn2_02	= hgn2_01		vgn_03	= vgn_01		hgn_03	= hgn_01		vgn2_03	= vgn2_01		hgn2_03	= hgn2_01		vgn_04	= vgn_01		hgn_04	= hgn_01		vgn2_04	= vgn2_01		hgn2_04	= hgn2_01		vgn_05	= vgn_01		hgn_05	= hgn_01		vgn2_05	= vgn2_01		hgn2_05	= hgn2_01		vgn_06	= vgn_01		hgn_06	= hgn_01		vgn2_06	= vgn2_01		hgn2_06	= hgn2_01		vgn_07	= vgn_01		hgn_07	= hgn_01		vgn2_07	= vgn2_01		hgn2_07	= hgn2_01		vgn_08	= vgn_01		hgn_08	= hgn_01		vgn2_08	= vgn2_01		hgn2_08	= hgn2_01		vgn_09	= vgn_01		hgn_09	= hgn_01		vgn2_09	= vgn2_01		hgn2_09	= hgn2_01		vgn_10	= vgn_01		hgn_10	= hgn_01		vgn2_10	= vgn2_01		hgn2_10	= hgn2_01		gs_horiz_div_height_02 = gs_horiz_div_height_01		gs_horiz_div_height_03 = gs_horiz_div_height_01		gs_horiz_div_height_04 = gs_horiz_div_height_01		gs_horiz_div_height_05 = gs_horiz_div_height_01		gs_horiz_div_height_06 = gs_horiz_div_height_01		gs_horiz_div_height_07 = gs_horiz_div_height_01		gs_horiz_div_height_08 = gs_horiz_div_height_01		gs_horiz_div_height_09 = gs_horiz_div_height_01		gs_horiz_div_height_10 = gs_horiz_div_height_01	else		for i = 1 to vardim1(CasementIDArray)			for j = 1 to vardim2(CasementIDArray)				if CasementIDArray[i][j] > 0 & (CasementIDArray[i][j] = CasementLinkArray[i][j]) & iMullionStyle_00 <> MULLION_DIVIDED then					if CasementIDArray[i][j] = 1 then						vgn2_01 = vgn_01						hgn2_01 = hgn_01					endif					if CasementIDArray[i][j] = 2 then						vgn2_02 = vgn_02						hgn2_02 = hgn_02					endif					if CasementIDArray[i][j] = 3 then						vgn2_03 = vgn_03						hgn2_03 = hgn_03					endif					if CasementIDArray[i][j] = 5 then						vgn2_05 = vgn_05						hgn2_05 = hgn_05					endif					if CasementIDArray[i][j] = 6 then						vgn2_06 = vgn_06						hgn2_06 = hgn_06					endif					if CasementIDArray[i][j] = 7 then						vgn2_07 = vgn_07						hgn2_07 = hgn_07					endif					if CasementIDArray[i][j] = 9 then						vgn2_09 = vgn_09						hgn2_09 = hgn_09					endif					if CasementIDArray[i][j] = 10 then						vgn2_10 = vgn_10						hgn2_10 = hgn_10					endif					if CasementIDArray[i][j] = 11 then						vgn2_11 = vgn_11						hgn2_11 = hgn_11					endif				endif			next j		next i		for i = 1 to vardim1(CasementIDArray)			for j = 1 to vardim2(CasementIDArray)				if CasementIDArray[i][j] > 0 & (CasementIDArray[i][j] <> CasementLinkArray[i][j]) then					if CasementLinkArray[i][j] = 1 then						vgn_linked	= vgn_01						hgn_linked	= hgn_01						vgn2_linked	= vgn2_01						hgn2_linked	= hgn2_01						gs_horiz_div_height_linked = gs_horiz_div_height_01					endif					if CasementLinkArray[i][j] = 2 then						vgn_linked	= vgn_02						hgn_linked	= hgn_02						vgn2_linked	= vgn2_02						hgn2_linked	= hgn2_02						gs_horiz_div_height_linked = gs_horiz_div_height_02					endif					if CasementLinkArray[i][j] = 3 then						vgn_linked	= vgn_03						hgn_linked	= hgn_03						vgn2_linked	= vgn2_03						hgn2_linked	= hgn2_03						gs_horiz_div_height_linked = gs_horiz_div_height_03					endif					if CasementLinkArray[i][j] = 5 then						vgn_linked	= vgn_05						hgn_linked	= hgn_05						vgn2_linked	= vgn2_05						hgn2_linked	= hgn2_05						gs_horiz_div_height_linked = gs_horiz_div_height_05					endif					if CasementLinkArray[i][j] = 6 then						vgn_linked	= vgn_06						hgn_linked	= hgn_06						vgn2_linked	= vgn2_06						hgn2_linked	= hgn2_06						gs_horiz_div_height_linked = gs_horiz_div_height_06					endif					if CasementLinkArray[i][j] = 7 then						vgn_linked	= vgn_07						hgn_linked	= hgn_07						vgn2_linked	= vgn2_07						hgn2_linked	= hgn2_07						gs_horiz_div_height_linked = gs_horiz_div_height_07					endif					if CasementLinkArray[i][j] = 9 then						vgn_linked	= vgn_09						hgn_linked	= hgn_09						vgn2_linked	= vgn2_09						hgn2_linked	= hgn2_09						gs_horiz_div_height_linked = gs_horiz_div_height_09					endif					if CasementLinkArray[i][j] = 10 then						vgn_linked	= vgn_10						hgn_linked	= hgn_10						vgn2_linked	= vgn2_10						hgn2_linked	= hgn2_10						gs_horiz_div_height_linked = gs_horiz_div_height_10					endif					if CasementLinkArray[i][j] = 11 then						vgn_linked	= vgn_11						hgn_linked	= hgn_11						vgn2_linked	= vgn2_11						hgn2_linked	= hgn2_11						gs_horiz_div_height_linked = gs_horiz_div_height_11					endif						if CasementIDArray[i][j] = 1 then						vgn_01	= vgn_linked						hgn_01	= hgn_linked						vgn2_01	= vgn2_linked						hgn2_01	= hgn2_linked						gs_horiz_div_height_01 = gs_horiz_div_height_linked					endif					if CasementIDArray[i][j] = 2 then						vgn_02	= vgn_linked						hgn_02	= hgn_linked						vgn2_02	= vgn2_linked						hgn2_02	= hgn2_linked						gs_horiz_div_height_02 = gs_horiz_div_height_linked					endif					if CasementIDArray[i][j] = 3 then						vgn_03	= vgn_linked						hgn_03	= hgn_linked						vgn2_03	= vgn2_linked						hgn2_03	= hgn2_linked						gs_horiz_div_height_03 = gs_horiz_div_height_linked					endif					if CasementIDArray[i][j] = 5 then						vgn_05	= vgn_linked						hgn_05	= hgn_linked						vgn2_05	= vgn2_linked						hgn2_05	= hgn2_linked						gs_horiz_div_height_05 = gs_horiz_div_height_linked					endif					if CasementIDArray[i][j] = 6 then						vgn_06	= vgn_linked						hgn_06	= hgn_linked						vgn2_06	= vgn2_linked						hgn2_06	= hgn2_linked						gs_horiz_div_height_06 = gs_horiz_div_height_linked					endif					if CasementIDArray[i][j] = 7 then						vgn_07	= vgn_linked						hgn_07	= hgn_linked						vgn2_07	= vgn2_linked						hgn2_07	= hgn2_linked						gs_horiz_div_height_07 = gs_horiz_div_height_linked					endif					if CasementIDArray[i][j] = 9 then						vgn_09	= vgn_linked						hgn_09	= hgn_linked						vgn2_09	= vgn2_linked						hgn2_09	= hgn2_linked						gs_horiz_div_height_09 = gs_horiz_div_height_linked					endif					if CasementIDArray[i][j] = 10 then						vgn_10	= vgn_linked						hgn_10	= hgn_linked						vgn2_10	= vgn2_linked						hgn2_10	= hgn2_linked						gs_horiz_div_height_10 = gs_horiz_div_height_linked					endif					if CasementIDArray[i][j] = 11 then						vgn_11	= vgn_linked						hgn_11	= hgn_linked						vgn2_11	= vgn2_linked						hgn2_11	= hgn2_linked						gs_horiz_div_height_11 = gs_horiz_div_height_linked					endif				endif			next j		next i	endifendif! =============================================================================! Double Sash - linked opening type parameters! =============================================================================if	iWindowType <> WIN_MultisashHorizontal	&\	iWindowType <> WIN_MultisashVertical	then	if GLOB_SCRIPT_TYPE = 2 | GLOB_SCRIPT_TYPE = 3 then		for i = 1 to vardim1(CasementTypeArray)			for j = 1 to vardim2(CasementTypeArray)				if CasementTypeArray[i][j] = SASHTYPE_DOUBLE_LEFT then					if CasementIDArray[i][j] = 1 then						if gs_optype_m_01 = SASH_TILT_TURN_M then							gs_optype_m_01 = SASH_TILT_TURN_M							gs_optype_m_05 = SASH_SIDE_HUNG						else							if gs_optype_m_01 = SASH_TILT_TURN then								gs_optype_m_01 = SASH_SIDE_HUNG_M								gs_optype_m_05 = SASH_TILT_TURN							else								gs_optype_m_01 = SASH_SIDE_HUNG_M								gs_optype_m_05 = SASH_SIDE_HUNG							endif						endif					endif					if CasementIDArray[i][j] = 2 then						if gs_optype_m_02 = SASH_TILT_TURN_M then							gs_optype_m_02 = SASH_TILT_TURN_M							gs_optype_m_06 = SASH_SIDE_HUNG						else							if gs_optype_m_02 = SASH_TILT_TURN then								gs_optype_m_02 = SASH_SIDE_HUNG_M								gs_optype_m_06 = SASH_TILT_TURN							else								gs_optype_m_02 = SASH_SIDE_HUNG_M								gs_optype_m_06 = SASH_SIDE_HUNG							endif						endif					endif					if CasementIDArray[i][j] = 3 then						if gs_optype_m_03 = SASH_TILT_TURN_M then							gs_optype_m_03 = SASH_TILT_TURN_M							gs_optype_m_07 = SASH_SIDE_HUNG						else							if gs_optype_m_03 = SASH_TILT_TURN then								gs_optype_m_03 = SASH_SIDE_HUNG_M								gs_optype_m_07 = SASH_TILT_TURN							else								gs_optype_m_03 = SASH_SIDE_HUNG_M								gs_optype_m_07 = SASH_SIDE_HUNG							endif						endif					endif					if CasementIDArray[i][j] = 9 then						if gs_optype_m_09 = SASH_TILT_TURN_M then							gs_optype_m_09 = SASH_TILT_TURN_M							gs_optype_m_01 = SASH_SIDE_HUNG						else							if gs_optype_m_09 = SASH_TILT_TURN then								gs_optype_m_09 = SASH_SIDE_HUNG_M								gs_optype_m_01 = SASH_TILT_TURN							else								gs_optype_m_09 = SASH_SIDE_HUNG_M								gs_optype_m_01 = SASH_SIDE_HUNG							endif						endif					endif					if CasementIDArray[i][j] = 10 then						if gs_optype_m_10 = SASH_TILT_TURN_M then							gs_optype_m_10 = SASH_TILT_TURN_M							gs_optype_m_02 = SASH_SIDE_HUNG						else							if gs_optype_m_10 = SASH_TILT_TURN then								gs_optype_m_10 = SASH_SIDE_HUNG_M								gs_optype_m_02 = SASH_TILT_TURN							else								gs_optype_m_10 = SASH_SIDE_HUNG_M								gs_optype_m_02 = SASH_SIDE_HUNG							endif						endif					endif					if CasementIDArray[i][j] = 11 then						if gs_optype_m_11 = SASH_TILT_TURN_M then							gs_optype_m_11 = SASH_TILT_TURN_M							gs_optype_m_03 = SASH_SIDE_HUNG						else							if gs_optype_m_11 = SASH_TILT_TURN then								gs_optype_m_11 = SASH_SIDE_HUNG_M								gs_optype_m_03 = SASH_TILT_TURN							else								gs_optype_m_11 = SASH_SIDE_HUNG_M								gs_optype_m_03 = SASH_SIDE_HUNG							endif						endif					endif				endif			next j		next i	endifendif! =============================================================================! Main Definitions! =============================================================================gs_fillFr	= gs_fillFr * gs_bFillsgs_fillSash	= gs_fillSash * gs_bFillsbCornerWindow	= (ac_cw_function & ac_corner_window)!!!**************************From String to Number for the Macros**********************************bFrCornerLeft = 1		! Frameif bLeftCornerFunction then	if iCornerConnTypeLeft = CONNECTION_TYPE_COLUMN then bFrCornerLeft = 2		! Corner Column	if iCornerConnTypeLeft = CONNECTION_TYPE_GLASS then bFrCornerLeft = 0		! GlassendifbFrCornerRight = 1		! Frameif bRightCornerFunction | bCornerWindow then	if iCornerConnTypeRight = CONNECTION_TYPE_COLUMN then bFrCornerRight = 2		! Corner Column	if iCornerConnTypeRight = CONNECTION_TYPE_GLASS then bFrCornerRight = 0		! Glassendifif bCornerWindow then	rightCornerAngle	= ac_corner_angleendifif iWindowType = WIN_MultisashHorizontal then	bLeftGlassCorner	= bLeftCornerFunction & (bFrCornerLeft = 0) & (optypeIDArray[1] = SASH_FIXED)	bRightGlassCorner	= (bRightCornerFunction | bCornerWindow) & (bFrCornerRight = 0) & (optypeIDArray[gs_panes_number] = SASH_FIXED)else	bLeftGlassCorner	= 0	bRightGlassCorner	= 0endif! =============================================================================! Arrays to Set of Mullion/Transom/Pane Width! =============================================================================dim validMullionID[]	validMullionID[1] = 0dim iMullionID[]	iMullionID[1] = 0dim stMullionName[]	stMullionName[1] = ""dim validTransomID[]	validTransomID[1] = 0dim iTransomID[]	iTransomID[1] = 0dim stTransomName[]	stTransomName[1] = ""dim validPaneID[]	validPaneID[1] = 0dim iPaneID[]	iPaneID[1] = 0dim stPaneName[]	stPaneName[1] = ""if	iWindowType = WIN_MultisashHorizontal	|\	iWindowType = WIN_MultisashVertical		then	if iWindowType = WIN_MultisashHorizontal then		iMullion	= 1		iValid		= 1		for i = 2 to 10			if i < gs_panes_number + 1 then				validMullionID[iValid]	= iValid				iMullionID[iMullion]	= iMullion				stMullionName[iMullion]	= gs_UI_WindowElevation[66+iMullion]				iValid = iValid + 1			else				iMullionID[iMullion]	= 0				stMullionName[iMullion]	= ""			endif			iMullion = iMullion + 1		next i		if gs_repeat_modules then			validMullionID[iValid]	= iMullion			iMullionID[iMullion]	= iMullion			stMullionName[iMullion]	= gs_UI_WindowElevation[45]	! Middle Mullion Width		else			iMullionID[iMullion]	= 0			stMullionName[iMullion]	= ""		endif	endif	if iWindowType = WIN_MultisashVertical then		iTransom	= 1		iValid		= 1		for i = 2 to 10			if i < gs_panes_number + 1 then				validTransomID[iValid]	= iValid				iTransomID[iTransom]	= iTransom				stTransomName[iTransom]	= gs_UI_WindowElevation[75+iTransom]				iValid = iValid + 1			else				iTransomID[iTransom]	= 0				stTransomName[iTransom]	= ""			endif			iTransom = iTransom + 1		next i		if gs_repeat_modules then			validTransomID[iValid]	= iTransom			iTransomID[iTransom]	= iTransom			stTransomName[iTransom]	= gs_UI_WindowElevation[46]	! Middle Transom Width		else			iTransomID[iTransom]	= 0			stTransomName[iTransom]	= ""		endif		iPane	= 1		iValid	= 1		for iPane = 1 to 10			if iPane < gs_panes_number + 1 then				validPaneID[iValid]	= iValid				iPaneID[iPane]		= iPane				stPaneName[iPane]	= gs_UI_WindowElevation[56+iPane]				iValid = iValid + 1			else				iPaneID[iPane]		= 0				stPaneName[iPane]	= ""			endif		next iPane	endifendifgs_frame_offset_left	= gs_frame_width_left - MullionWidth/2gs_frame_offset_right	= gs_frame_width - MullionWidth/2gs_frame_offset_upper	= gs_frame_width_upper - TransomWidth/2gs_frame_offset_lower	= gs_frame_width_lower - TransomWidth/2_RepeatNum = 1 + (gs_repeat_modules_number - 1) * gs_repeat_modules! =============================================================================! Panes Configuration! =============================================================================dim	NoRebateSashes[]	NoRebateSashes[ 1]	= SASH_HOR_PIVOT	NoRebateSashes[ 2]	= SASH_VER_PIVOT	NoRebateSashes[ 3]	= SASH_TILT_SLIDE	NoRebateSashes[ 4]	= SASH_LEFT_SLIDING	NoRebateSashes[ 5]	= SASH_RIGHT_SLIDING	NoRebateSashes[ 6]	= SASH_UP_SLIDING	NoRebateSashes[ 7]	= SASH_DOWN_SLIDING	NoRebateSashes[ 8]	= SASH_VER_PIVOT_M	NoRebateSashes[ 9]	= SASH_FIXED_SLIDE	NoRebateSashes[10]	= SASH_SLIDING_HOR	NoRebateSashes[11]	= SASH_SLIDING_HOR_M	NoRebateSashes[12]	= SASH_DOUBLE_SLIDING_HOR	NoRebateSashes[13]	= SASH_DOUBLE_SLIDING_HOR_M	NoRebateSashes[14]	= SASH_SLIDING_VER	NoRebateSashes[15]	= SASH_DOUBLE_SLIDING_VERGlassSashMod 		= 2 * (gs_sash_width - gs_rebate_width)GlassNoRebateMod 	= 2 * gs_sash_widthPaneWidth_Remain	= 0PaneHeight_Remain	= 0if	iWindowType = WIN_MultisashHorizontal	|\	iWindowType = WIN_MultisashVertical		then! =============================================================================! Panes Configuration Horizontal! =============================================================================	dim PaneWidthArray[10]		PaneWidthArray[1] = PaneWidth_01		PaneWidthArray[2] = PaneWidth_02		PaneWidthArray[3] = PaneWidth_03		PaneWidthArray[4] = PaneWidth_04		PaneWidthArray[5] = PaneWidth_05		PaneWidthArray[6] = PaneWidth_06		PaneWidthArray[7] = PaneWidth_07		PaneWidthArray[8] = PaneWidth_08		PaneWidthArray[9] = PaneWidth_09		PaneWidthArray[10] = 0	dim MullionWidthArray[9]		MullionWidthArray[1] = MullionWidth_01		MullionWidthArray[2] = MullionWidth_02		MullionWidthArray[3] = MullionWidth_03		MullionWidthArray[4] = MullionWidth_04		MullionWidthArray[5] = MullionWidth_05		MullionWidthArray[6] = MullionWidth_06		MullionWidthArray[7] = MullionWidth_07		MullionWidthArray[8] = MullionWidth_08		MullionWidthArray[9] = MullionWidth_09	if iWindowType = WIN_MultisashHorizontal then		dim GlassWidthMod[]		dim MinSashWidth[]		for iPane = 1 to gs_panes_number			GlassWidthMod[iPane] = 0			if optypeIDArray[iPane] <> SASH_FIXED then GlassWidthMod[iPane] = GlassSashMod			for i = 1 to vardim1(NoRebateSashes)				if optypeIDArray[iPane] = NoRebateSashes[i] then GlassWidthMod[iPane] = GlassNoRebateMod			next i			MinSashWidth[iPane] = GlassWidthMod[iPane] + 0.01		next iPane		if gs_iPanesConfig = PANESCONFIG_UNIFORM then			if gs_repeat_modules then				AllSashGlassWidth = gs_axis_distance - MullionWidth				for iPane = 1 to gs_panes_number					if iPane < gs_panes_number then						AllSashGlassWidth = AllSashGlassWidth - MullionWidthArray[iPane]					endif					AllSashGlassWidth = AllSashGlassWidth - GlassWidthMod[iPane]				next iPane				OneSashGlassWidth = AllSashGlassWidth / gs_panes_number				for iPane = 1 to gs_panes_number					if iPane = 1 then						PaneWidthArray[iPane] = OneSashGlassWidth + MullionWidth/2 + MullionWidthArray[iPane]/2 + GlassWidthMod[iPane]					else						if iPane = gs_panes_number then							PaneWidthArray[iPane] = OneSashGlassWidth + MullionWidth/2 + MullionWidthArray[iPane - 1]/2 + GlassWidthMod[iPane]						else							PaneWidthArray[iPane] = OneSashGlassWidth + MullionWidthArray[iPane - 1]/2  + MullionWidthArray[iPane]/2 + GlassWidthMod[iPane]						endif					endif				next iPane			else				AllSashGlassWidth = ac_unit_width - gs_frame_width_left - gs_frame_width				for iPane = 1 to gs_panes_number					if iPane < gs_panes_number then						AllSashGlassWidth = AllSashGlassWidth - MullionWidthArray[iPane]					endif					AllSashGlassWidth = AllSashGlassWidth - GlassWidthMod[iPane]				next iPane				OneSashGlassWidth = AllSashGlassWidth / gs_panes_number				for iPane = 1 to gs_panes_number					if iPane = 1 then						PaneWidthArray[iPane] = OneSashGlassWidth + gs_frame_width_left + MullionWidthArray[iPane]/2 + GlassWidthMod[iPane]					else						if iPane = gs_panes_number then							PaneWidthArray[iPane] = OneSashGlassWidth + gs_frame_width + MullionWidthArray[iPane - 1]/2 + GlassWidthMod[iPane]						else							PaneWidthArray[iPane] = OneSashGlassWidth + MullionWidthArray[iPane - 1]/2  + MullionWidthArray[iPane]/2 + GlassWidthMod[iPane]						endif					endif				next iPane			endif			PaneWidth_01 = PaneWidthArray[1]			PaneWidth_02 = PaneWidthArray[2]			PaneWidth_03 = PaneWidthArray[3]			PaneWidth_04 = PaneWidthArray[4]			PaneWidth_05 = PaneWidthArray[5]			PaneWidth_06 = PaneWidthArray[6]			PaneWidth_07 = PaneWidthArray[7]			PaneWidth_08 = PaneWidthArray[8]			PaneWidth_09 = PaneWidthArray[9]			parameters	PaneWidth_01 = PaneWidth_01,						PaneWidth_02 = PaneWidth_02,						PaneWidth_03 = PaneWidth_03,						PaneWidth_04 = PaneWidth_04,						PaneWidth_05 = PaneWidth_05,						PaneWidth_06 = PaneWidth_06,						PaneWidth_07 = PaneWidth_07,						PaneWidth_08 = PaneWidth_08,						PaneWidth_09 = PaneWidth_09		else			_sumPaneWidth = 0			for i=1 to gs_panes_number - 1				_sumPaneWidth = _sumPaneWidth + PaneWidthArray[i]			next i			if gs_repeat_modules then				PaneWidthArray[gs_panes_number] = (ac_unit_width - gs_frame_offset_left - gs_frame_offset_right) / gs_repeat_modules_number - _sumPaneWidth			else				PaneWidthArray[gs_panes_number] = ac_unit_width - _sumPaneWidth			endif		endif	endif	PaneWidth_Remain = PaneWidthArray[gs_panes_number]! =============================================================================! Panes Configuration Vertical! =============================================================================	dim PaneHeightArray[10]		PaneHeightArray[1] = PaneHeight_01		PaneHeightArray[2] = PaneHeight_02		PaneHeightArray[3] = PaneHeight_03		PaneHeightArray[4] = PaneHeight_04		PaneHeightArray[5] = PaneHeight_05		PaneHeightArray[6] = PaneHeight_06		PaneHeightArray[7] = PaneHeight_07		PaneHeightArray[8] = PaneHeight_08		PaneHeightArray[9] = PaneHeight_09		PaneHeightArray[10] = 0	dim TransomWidthArray[9]		TransomWidthArray[1] = TransomWidth_01		TransomWidthArray[2] = TransomWidth_02		TransomWidthArray[3] = TransomWidth_03		TransomWidthArray[4] = TransomWidth_04		TransomWidthArray[5] = TransomWidth_05		TransomWidthArray[6] = TransomWidth_06		TransomWidthArray[7] = TransomWidth_07		TransomWidthArray[8] = TransomWidth_08		TransomWidthArray[9] = TransomWidth_09	if iWindowType = WIN_MultisashVertical then		dim GlassHeightMod[]		dim MinSashHeight[]		for iPane = 1 to gs_panes_number			GlassHeightMod[iPane] = 0			if optypeIDArray[iPane] <> SASH_FIXED then GlassHeightMod[iPane] = GlassSashMod			for i = 1 to vardim1(NoRebateSashes)				if optypeIDArray[iPane] = NoRebateSashes[i] then GlassHeightMod[iPane] = GlassNoRebateMod			next i			MinSashHeight[iPane] = GlassHeightMod[iPane] + 0.01		next iPane		if gs_iPanesConfigVertical = PANESCONFIG_UNIFORM then			if gs_repeat_modules then				AllSashGlassHeight = gs_axis_distance - TransomWidth				for iPane = 1 to gs_panes_number					if iPane < gs_panes_number then						AllSashGlassHeight = AllSashGlassHeight - TransomWidthArray[iPane]					endif					AllSashGlassHeight = AllSashGlassHeight - GlassHeightMod[iPane]				next iPane				OneSashGlassHeight = AllSashGlassHeight / gs_panes_number				for iPane = 1 to gs_panes_number					if iPane = 1 then						PaneHeightArray[iPane] = OneSashGlassHeight + TransomWidth/2 + TransomWidthArray[iPane]/2 + GlassHeightMod[iPane]					else						if iPane = gs_panes_number then							PaneHeightArray[iPane] = OneSashGlassHeight + TransomWidth/2 + TransomWidthArray[iPane - 1]/2 + GlassHeightMod[iPane]						else							PaneHeightArray[iPane] = OneSashGlassHeight + TransomWidthArray[iPane - 1]/2  + TransomWidthArray[iPane]/2 + GlassHeightMod[iPane]						endif					endif				next iPane			else				AllSashGlassHeight = ac_unit_height - gs_frame_width_lower - gs_frame_width_upper				for iPane = 1 to gs_panes_number					if iPane < gs_panes_number then						AllSashGlassHeight = AllSashGlassHeight - TransomWidthArray[iPane]					endif					AllSashGlassHeight = AllSashGlassHeight - GlassHeightMod[iPane]				next iPane				OneSashGlassHeight = AllSashGlassHeight / gs_panes_number				for iPane = 1 to gs_panes_number					if iPane = 1 then						PaneHeightArray[iPane] = OneSashGlassHeight + gs_frame_width_lower + TransomWidthArray[iPane]/2 + GlassHeightMod[iPane]					else						if iPane = gs_panes_number then							PaneHeightArray[iPane] = OneSashGlassHeight + gs_frame_width_upper + TransomWidthArray[iPane - 1]/2 + GlassHeightMod[iPane]						else							PaneHeightArray[iPane] = OneSashGlassHeight + TransomWidthArray[iPane - 1]/2  + TransomWidthArray[iPane]/2 + GlassHeightMod[iPane]						endif					endif				next iPane			endif			PaneHeight_01 = PaneHeightArray[1]			PaneHeight_02 = PaneHeightArray[2]			PaneHeight_03 = PaneHeightArray[3]			PaneHeight_04 = PaneHeightArray[4]			PaneHeight_05 = PaneHeightArray[5]			PaneHeight_06 = PaneHeightArray[6]			PaneHeight_07 = PaneHeightArray[7]			PaneHeight_08 = PaneHeightArray[8]			PaneHeight_09 = PaneHeightArray[9]			parameters	PaneHeight_01 = PaneHeight_01,						PaneHeight_02 = PaneHeight_02,						PaneHeight_03 = PaneHeight_03,						PaneHeight_04 = PaneHeight_04,						PaneHeight_05 = PaneHeight_05,						PaneHeight_06 = PaneHeight_06,						PaneHeight_07 = PaneHeight_07,						PaneHeight_08 = PaneHeight_08,						PaneHeight_09 = PaneHeight_09		else			_sumPaneHeight = 0				for i=1 to gs_panes_number - 1				_sumPaneHeight = _sumPaneHeight + PaneHeightArray[i]			next i			if gs_repeat_modules then				PaneHeightArray[gs_panes_number] = (ac_unit_height - gs_frame_offset_upper - gs_frame_offset_lower) / gs_repeat_modules_number - _sumPaneHeight			else				PaneHeightArray[gs_panes_number] = ac_unit_height - _sumPaneHeight			endif		endif	endif	PaneHeight_Remain = PaneHeightArray[gs_panes_number]else! =============================================================================! Panes Configuration Horizontal! =============================================================================	bEnableMiddlePanelWidth	= 0	if	iWindowType = WIN_W32Sidelights1 |\		iWindowType = WIN_W32Sidelights2 |\		iWindowType = WIN_W3 |\		iWindowType = WIN_WVariableDoubleSash |\		iWindowType = WIN_WVariable |\		iWindowType = WIN_W2Sidelight |\		iWindowType = WIN_W1 |\		iWindowType = WIN_WDoubleHung2 |\		iWindowType = WIN_WDoubleHung3 |\		iWindowType = WIN_WDoubleHung1 |\		iWindowType = WIN_WSingleHung2 |\		iWindowType = WIN_WSingleHung3 |\		iWindowType = WIN_WSingleHung1 then		bEnableMiddlePanelWidth	= 1	endif	gs_LeftSLight_w = ac_unit_width - gs_SLight_w - gs_MidPane_w	bVariableDoubleSashWin = (iWindowType = WIN_WVariableDoubleSash)	if	gs_iPanesConfig = PANESCONFIG_UNIFORM	then		OnlyFixSashesWidth = ac_unit_width - gs_frame_width_left - gs_frame_width - gs_Mullion_w * gs_bSLight - gs_Mullion_w_left * gs_bLeftSLight * not(bVariableDoubleSashWin)		MainGlassWMod		= 0		SideLGlassWMod 		= 0		LeftSideLGlassWMod	= 0		if CasementIDArray[2][1] > 0 & gs_bLeftSLight & not(bVariableDoubleSashWin) then			if gs_optype_m_09 <> SASH_FIXED then LeftSideLGlassWMod	= GlassSashMod			for i = 1 to vardim1(NoRebateSashes)				if gs_optype_m_09 = NoRebateSashes[i] then LeftSideLGlassWMod	= GlassNoRebateMod			next i		endif		if gs_optype_m_01 <> SASH_FIXED then MainGlassWMod	= GlassSashMod		for i = 1 to vardim1(NoRebateSashes)			if gs_optype_m_01 = NoRebateSashes[i] then MainGlassWMod	= GlassNoRebateMod		next i		if CasementIDArray[2][3] > 0 & gs_bSLight then			if gs_optype_m_05 <> SASH_FIXED then SideLGlassWMod	= GlassSashMod			for i = 1 to vardim1(NoRebateSashes)				if gs_optype_m_05 = NoRebateSashes[i] then SideLGlassWMod	= GlassNoRebateMod			next i		endif		OneSashGlassWidth = (OnlyFixSashesWidth - MainGlassWMod - SideLGlassWMod - LeftSideLGlassWMod) / (1 + gs_bSLight + gs_bLeftSLight * not(bVariableDoubleSashWin))		gs_SLight_w = gs_frame_width + gs_Mullion_w/2 + OneSashGlassWidth + SideLGlassWMod		gs_LeftSLight_w = gs_frame_width_left + gs_Mullion_w_left/2 + OneSashGlassWidth + LeftSideLGlassWMod		if gs_bSLight then			gs_MidPane_w = ac_unit_width - gs_SLight_w - gs_LeftSLight_w		else			gs_MidPane_w = (ac_unit_width + gs_frame_width - gs_frame_width_left) / 2		endif		if bEnableMiddlePanelWidth then parameters gs_MidPane_w = gs_MidPane_w			if gs_bSLight 					then parameters	gs_SLight_w = gs_SLight_w	endif	if gs_iPanesConfig = PANESCONFIG_SYMM then		gs_LeftSLight_w	= gs_SLight_w		gs_MidPane_w	= ac_unit_width - gs_LeftSLight_w - gs_SLight_w		if bEnableMiddlePanelWidth then parameters gs_MidPane_w = gs_MidPane_w			if gs_bSLight & gs_bLeftSLight	then			lock "gs_MidPane_w"			hideparameter "gs_MidPane_w"		endif	endif	if gs_iPanesConfig = PANESCONFIG_UNIF_DOUBSASHES | (gs_iPanesConfig = PANESCONFIG_UNIFORM & bVariableDoubleSashWin) then		if gs_bSLight then			gs_MidPane_w = (ac_unit_width - gs_SLight_w - gs_Mullion_w/2 - gs_frame_width_left) / 2 + gs_Mullion_w/2		else			gs_MidPane_w = (ac_unit_width + gs_frame_width - gs_frame_width_left) / 2		endif		if bEnableMiddlePanelWidth then parameters gs_MidPane_w = gs_MidPane_w	endif	! =============================================================================	! Panes Configuration Vertical	! =============================================================================	OnlyFixSashesHeight = ac_unit_height - gs_frame_width_upper - gs_frame_width_lower - gs_UTrans_w * gs_UTrans - gs_LTrans_w * gs_LTrans	if gs_iPanesConfigVertical = PANESCONFIG_UNIFORM then		UppTransGlassHMod	= 0		MainGlassHMod 		= 0		LowTransGlassHMod	= 0		if gs_UTrans then			if CasementIDArray[1][1] > 0 & gs_UTrans_Div then				if gs_optype_m_10 <> SASH_FIXED then UppTransGlassHMod	= GlassSashMod				for i = 1 to vardim1(NoRebateSashes)					if gs_optype_m_10 = NoRebateSashes[i] then UppTransGlassHMod	= GlassNoRebateMod				next i			endif			if CasementIDArray[1][2] > 0 & UppTransGlassHMod < GlassNoRebateMod then				if gs_optype_m_02 <> SASH_FIXED then UppTransGlassHMod	= GlassSashMod				for i = 1 to vardim1(NoRebateSashes)					if gs_optype_m_02 = NoRebateSashes[i] then UppTransGlassHMod	= GlassNoRebateMod				next i			endif			if CasementIDArray[1][3] > 0 & gs_UTrans_Div & UppTransGlassHMod < GlassNoRebateMod then				if gs_optype_m_06 <> SASH_FIXED then UppTransGlassHMod	= GlassSashMod				for i = 1 to vardim1(NoRebateSashes)					if gs_optype_m_06 = NoRebateSashes[i] then UppTransGlassHMod	= GlassNoRebateMod				next i			endif		endif		if CasementIDArray[2][1] > 0 & gs_bLeftSLight then			if gs_optype_m_09 <> SASH_FIXED then MainGlassHMod	= GlassSashMod			for i = 1 to vardim1(NoRebateSashes)				if gs_optype_m_09 = NoRebateSashes[i] then MainGlassHMod	= GlassNoRebateMod			next i		endif		if MainGlassHMod < GlassNoRebateMod then			if gs_optype_m_01 <> SASH_FIXED then MainGlassHMod	= GlassSashMod			for i = 1 to vardim1(NoRebateSashes)				if gs_optype_m_01 = NoRebateSashes[i] then MainGlassHMod	= GlassNoRebateMod			next i		endif		if CasementIDArray[2][3] > 0 & gs_bSLight & MainGlassHMod < GlassNoRebateMod then			if gs_optype_m_05 <> SASH_FIXED	then MainGlassHMod	= GlassSashMod			for i = 1 to vardim1(NoRebateSashes)				if gs_optype_m_05 = NoRebateSashes[i] then MainGlassHMod	= GlassNoRebateMod			next i		endif		if gs_LTrans then			if CasementIDArray[3][1] > 0 & gs_LTrans_Div then				if gs_optype_m_11 <> SASH_FIXED then LowTransGlassHMod	= GlassSashMod				for i = 1 to vardim1(NoRebateSashes)					if gs_optype_m_11 = NoRebateSashes[i] then LowTransGlassHMod	= GlassNoRebateMod				next i			endif			if CasementIDArray[3][2] > 0 & LowTransGlassHMod < GlassNoRebateMod then				if gs_optype_m_03 <> SASH_FIXED then LowTransGlassHMod	= GlassSashMod				for i = 1 to vardim1(NoRebateSashes)					if gs_optype_m_03 = NoRebateSashes[i] then LowTransGlassHMod	= GlassNoRebateMod				next i			endif			if CasementIDArray[3][3] > 0 & gs_LTrans_Div & LowTransGlassHMod < GlassNoRebateMod then				if gs_optype_m_07 <> SASH_FIXED then LowTransGlassHMod	= GlassSashMod				for i = 1 to vardim1(NoRebateSashes)					if gs_optype_m_07 = NoRebateSashes[i] then LowTransGlassHMod	= GlassNoRebateMod				next i			endif		endif			OneSashGlassHeight = (OnlyFixSashesHeight - UppTransGlassHMod - MainGlassHMod - LowTransGlassHMod) / (1 + gs_UTrans + gs_LTrans)			gs_UTrans_h = ac_unit_height - gs_frame_width_upper - gs_UTrans_w/2 - OneSashGlassHeight - UppTransGlassHMod		gs_LTrans_h = gs_frame_width_lower + gs_LTrans_w/2 + OneSashGlassHeight + LowTransGlassHMod		parameters	gs_UTrans_h = gs_UTrans_h,					gs_LTrans_h = gs_LTrans_h		endif	if gs_iPanesConfigVertical = PANESCONFIG_SYMM & gs_UTrans & gs_LTrans then		if GLOB_MODPAR_NAME = "gs_UTrans_h" then			gs_LTrans_h	= ac_unit_height - gs_UTrans_h			parameters gs_LTrans_h	= gs_LTrans_h		else			gs_UTrans_h	= ac_unit_height - gs_LTrans_h			parameters gs_UTrans_h	= gs_UTrans_h		endif	endifendif! =============================================================================! Sash Sizes! =============================================================================dim MullionStyleArray[10]	MullionStyleArray[1] = iMullionStyle_01	MullionStyleArray[2] = iMullionStyle_02	MullionStyleArray[3] = iMullionStyle_03	MullionStyleArray[4] = iMullionStyle_04	MullionStyleArray[5] = iMullionStyle_05	MullionStyleArray[6] = iMullionStyle_06	MullionStyleArray[7] = iMullionStyle_07	MullionStyleArray[8] = iMullionStyle_08	MullionStyleArray[9] = iMullionStyle_09	MullionStyleArray[10] = iMullionStyle_10if	iWindowType = WIN_MultisashHorizontal	|\	iWindowType = WIN_MultisashVertical		then	dim sashWidthArray[1][]	dim sashHeightArray[1][]	dim sashPosXArray[1][]	dim sashPosYArray[1][]	for i = 1 to 10		sashWidthArray[1][i]	= 0		sashHeightArray[1][i]	= 0		sashPosXArray[1][i]		= 0		sashPosYArray[1][i]		= 0	next i	if iWindowType = WIN_MultisashHorizontal then		cavityTop		= ac_unit_height - gs_frame_width_upper + gs_rebate_width		cavityBottom	= gs_frame_width_lower - gs_rebate_width		_offsetX		= -ac_unit_width/2		iSash			= 1		for iModule = 1 to _RepeatNum			_ModuleLength			= ac_unit_width			_gs_frame_width			= gs_frame_width			_gs_frame_width_left	= gs_frame_width_left			if gs_repeat_modules then				if iModule = 1 then					_ModuleLength		= gs_axis_distance + gs_frame_offset_left					_gs_frame_width		= MullionWidth/2				else					if iModule = gs_repeat_modules_number then						_ModuleLength			= gs_axis_distance + gs_frame_offset_right						_gs_frame_width_left	= MullionWidth/2					else						_ModuleLength			= gs_axis_distance						_gs_frame_width			= MullionWidth/2						_gs_frame_width_left	= MullionWidth/2					endif				endif			endif			for iPane = 1 to gs_panes_number				if iPane = 1 then					cavityLeft = _offsetX + _gs_frame_width_left - gs_rebate_width				else					if iPane = 2 then						cavityLeft = cavityLeft + PaneWidthArray[iPane-1] + gs_frame_offset_left * gs_repeat_modules * (iModule = 1)\										-_gs_frame_width_left + MullionWidthArray[iPane-1]/2					else						cavityLeft = cavityLeft + PaneWidthArray[iPane-1] - MullionWidthArray[iPane-2]/2 + MullionWidthArray[iPane-1]/2					endif				endif				if iPane = gs_panes_number then					cavityRight	=  _offsetX + _ModuleLength - _gs_frame_width + gs_rebate_width				else					if iPane = 1 then						cavityRight	= cavityLeft + PaneWidthArray[iPane] + gs_frame_offset_left * gs_repeat_modules * (iModule = 1)\										-_gs_frame_width_left - MullionWidthArray[iPane]/2 + 2 * gs_rebate_width					else						cavityRight	=  cavityLeft + PaneWidthArray[iPane] - MullionWidthArray[iPane-1]/2 - MullionWidthArray[iPane]/2 + 2 * gs_rebate_width					endif				endif				if (iPane = 1) & (iModule = 1) & bLeftCornerFunction & (bFrCornerLeft = 0) & (optypeIDArray[iPane] = SASH_FIXED) then					leftFrameCorr = gs_frame_width_left + gs_frame_thk * abs(tan(90 - leftCornerAngle / 2))				else					leftFrameCorr = 0				endif				if ((gs_panes_number = 1) | (iPane = gs_panes_number)) & (iModule = _RepeatNum) & (bRightCornerFunction | bCornerWindow) & (bFrCornerRight = 0) & (optypeIDArray[iPane] = SASH_FIXED) then					rightFrameCorr = gs_frame_width + gs_frame_thk * abs(tan(90 - rightCornerAngle / 2))				else					rightFrameCorr = 0				endif				sashWidthArray[1][iSash]	= cavityRight - cavityLeft + leftFrameCorr + rightFrameCorr				sashHeightArray[1][iSash]	= cavityTop - cavityBottom				sashPosXArray[1][iSash]		= (cavityLeft + cavityRight - leftFrameCorr + rightFrameCorr)/2				sashPosYArray[1][iSash]		= cavityBottom				iSash						= iSash + 1			next iPane			_offsetX = _offsetX + _ModuleLength		next iModule	else		cavityLeft	= -ac_unit_width/2 + gs_frame_width_left - gs_rebate_width		cavityRight	=  ac_unit_width/2 - gs_frame_width + gs_rebate_width		_offsetY		= 0		iSash			= 1		for iModule = 1 to _RepeatNum			_ModuleHeight			= ac_unit_height			_gs_frame_width_upper	= gs_frame_width_upper			_gs_frame_width_lower	= gs_frame_width_lower			if gs_repeat_modules then				if iModule = 1 then					_ModuleHeight			= gs_axis_distance + gs_frame_offset_lower					_gs_frame_width_upper	= TransomWidth/2				else					if iModule = gs_repeat_modules_number then						_ModuleHeight			= gs_axis_distance + gs_frame_offset_upper						_gs_frame_width_lower	= TransomWidth/2					else						_ModuleHeight			= gs_axis_distance						_gs_frame_width_upper	= TransomWidth/2						_gs_frame_width_lower	= TransomWidth/2					endif				endif			endif			for iPane = 1 to gs_panes_number				if iPane = 1 then					cavityBottom = _offsetY + _gs_frame_width_lower - gs_rebate_width				else					if iPane = 2 then						cavityBottom = cavityBottom + PaneHeightArray[iPane-1] + gs_frame_offset_lower * gs_repeat_modules * (iModule = 1)\										-_gs_frame_width_lower + TransomWidthArray[iPane-1]/2					else						cavityBottom = cavityBottom + PaneHeightArray[iPane-1] - TransomWidthArray[iPane-2]/2 + TransomWidthArray[iPane-1]/2					endif				endif				if iPane = gs_panes_number then					cavityTop = _offsetY + _ModuleHeight - _gs_frame_width_upper + gs_rebate_width				else					if iPane = 1 then						cavityTop = cavityBottom + PaneHeightArray[iPane] + gs_frame_offset_lower * gs_repeat_modules * (iModule = 1)\									-_gs_frame_width_lower - TransomWidthArray[iPane]/2 + 2 * gs_rebate_width					else						cavityTop = cavityBottom + PaneHeightArray[iPane] - TransomWidthArray[iPane-1]/2 - TransomWidthArray[iPane]/2 + 2 * gs_rebate_width					endif				endif				sashWidthArray[1][iSash]	= cavityRight - cavityLeft				sashHeightArray[1][iSash]	= cavityTop - cavityBottom				sashPosXArray[1][iSash]		= (cavityLeft + cavityRight)/2				sashPosYArray[1][iSash]		= cavityBottom				iSash						= iSash + 1			next iPane			_offsetY = _offsetY + _ModuleHeight		next iModule	endifelse	dim sashWidthArray[3][3]	dim sashHeightArray[3][3]	dim sashPosXArray[3][3]	dim sashPosYArray[3][3]	for i=1 to 3		for j=1 to 3			sashWidthArray[i][j]	= 0			sashHeightArray[i][j]	= 0			sashPosXArray[i][j]		= 0			sashPosYArray[i][j]		= 0		next j	next i	! Transom Sashes ==============================================================	if gs_UTrans then		cavityHeight = ac_unit_height - gs_UTrans_h - gs_UTrans_w/2 - gs_frame_width_upper + 2*gs_rebate_width		cavityBottom = gs_UTrans_h + gs_UTrans_w/2 - gs_rebate_width		! Upper Left Sash -------------------------------------------------------------		if gs_UTransom_toLeft & gs_LeftMullion_Top  then			cavityLeft	= -ac_unit_width/2 + gs_frame_width_left - gs_rebate_width			cavityRight	= -ac_unit_width/2 + gs_LeftSLight_w - gs_Mullion_w_left/2 + gs_rebate_width			sashWidthArray[1][1]	= cavityRight - cavityLeft			sashHeightArray[1][1]	= cavityHeight			sashPosXArray[1][1]		= cavityLeft + (cavityRight - cavityLeft)/2			sashPosYArray[1][1]		= cavityBottom		endif		! Upper Middle Sash -----------------------------------------------------------		if gs_UTransom_Middle then			if gs_LeftMullion_Top then				cavityLeft	= -ac_unit_width/2 + gs_LeftSLight_w + gs_Mullion_w_left/2 - gs_rebate_width			else				cavityLeft	= -ac_unit_width/2 + gs_frame_width_left - gs_rebate_width			endif			if gs_Mullion_Top then				cavityRight	= ac_unit_width/2 - gs_SLight_w - gs_Mullion_w/2 + gs_rebate_width			else				cavityRight	= ac_unit_width/2 - gs_frame_width + gs_rebate_width			endif			if bLeftCornerFunction & bFrCornerLeft = 0 & (gs_optype_m_02 = SASH_FIXED) then				leftFrameCorr = gs_frame_width + gs_frame_thk * abs(tan(90 - leftCornerAngle / 2))			else				leftFrameCorr = 0			endif			if bRightCornerFunction & ((gs_bSLight & not(gs_Mullion_Top)) | not(gs_bSLight)) & bFrCornerRight = 0 & (gs_optype_m_02 = SASH_FIXED) then				rightFrameCorr = gs_frame_width + gs_frame_thk * abs(tan(90 - rightCornerAngle / 2))			else				rightFrameCorr = 0			endif			sashWidthArray[1][2]	= cavityRight - cavityLeft + leftFrameCorr + rightFrameCorr			sashHeightArray[1][2]	= cavityHeight			sashPosXArray[1][2]		= cavityLeft + (cavityRight - cavityLeft - leftFrameCorr + rightFrameCorr)/2			sashPosYArray[1][2]		= cavityBottom		endif		! Upper Right Sash ------------------------------------------------------------		if gs_UTransom_toRight & gs_Mullion_Top then			cavityLeft	= ac_unit_width/2 - gs_SLight_w + gs_Mullion_w/2 - gs_rebate_width			cavityRight	= ac_unit_width/2 - gs_frame_width + gs_rebate_width			sashWidthArray[1][3]	= cavityRight - cavityLeft			sashHeightArray[1][3]	= cavityHeight			sashPosXArray[1][3]		= cavityRight - (cavityRight - cavityLeft)/2			sashPosYArray[1][3]		= cavityBottom		endif	endif	! Main Sashes =================================================================	! Middle Left Sash ------------------------------------------------------------	if gs_bLeftSLight then		if gs_UTrans & gs_UTransom_toLeft then			cavityTop = gs_UTrans_h - gs_UTrans_w/2 + gs_rebate_width		else			cavityTop = ac_unit_height - gs_frame_width_upper + gs_rebate_width		endif		if gs_LTrans & gs_LTransom_toLeft then			cavityBottom = gs_LTrans_h + gs_LTrans_w/2 - gs_rebate_width		else			cavityBottom = gs_frame_width_lower - gs_rebate_width		endif		cavityLeft	= -ac_unit_width/2 + gs_frame_width_left - gs_rebate_width		if gs_LeftMullion_Middle then			cavityRight	= -ac_unit_width/2 + gs_LeftSLight_w - gs_Mullion_w_left/2 + gs_rebate_width		else			cavityRight	=  ac_unit_width/2 - gs_MidPane_w - gs_bSLight * gs_SLight_w		endif		sashWidthArray[2][1]	= cavityRight - cavityLeft		sashHeightArray[2][1]	= cavityTop - cavityBottom		sashPosXArray[2][1]		= cavityLeft + (cavityRight - cavityLeft)/2		sashPosYArray[2][1]		= cavityBottom	endif	! Middle Middle Sash ----------------------------------------------------------	if gs_UTrans & gs_UTransom_Middle then		cavityTop = gs_UTrans_h - gs_UTrans_w/2 + gs_rebate_width	else		cavityTop = ac_unit_height - gs_frame_width_upper + gs_rebate_width	endif	if gs_LTrans & gs_LTransom_Middle then		cavityBottom = gs_LTrans_h + gs_LTrans_w/2 - gs_rebate_width	else		cavityBottom = gs_frame_width_lower - gs_rebate_width	endif	if gs_bLeftSLight then		if gs_LeftMullion_Middle then			cavityLeft = -ac_unit_width/2 + gs_LeftSLight_w + gs_Mullion_w_left/2 - gs_rebate_width		else			cavityLeft	= ac_unit_width/2 - gs_MidPane_w - gs_bSLight * gs_SLight_w		endif	else		cavityLeft = -ac_unit_width/2 + gs_frame_width_left - gs_rebate_width	endif	if gs_bSLight then		if gs_RightMullion_Middle then			cavityRight = ac_unit_width/2 - gs_SLight_w - gs_Mullion_w/2 + gs_rebate_width		else			cavityRight = ac_unit_width/2 - gs_SLight_w		endif	else		cavityRight	=  ac_unit_width/2 - gs_frame_width + gs_rebate_width	endif	sashWidthArray[2][2]	= cavityRight - cavityLeft	sashHeightArray[2][2]	= cavityTop - cavityBottom	sashPosXArray[2][2]		= (cavityLeft + cavityRight)/2	sashPosYArray[2][2]		= cavityBottom	! Middle Right Sash -----------------------------------------------------------	if gs_bSLight then		if gs_UTrans & gs_UTransom_toRight then			cavityTop = gs_UTrans_h - gs_UTrans_w/2 + gs_rebate_width		else			cavityTop = ac_unit_height - gs_frame_width_upper + gs_rebate_width		endif		if gs_LTrans & gs_LTransom_toRight then			cavityBottom = gs_LTrans_h + gs_LTrans_w/2 - gs_rebate_width		else			cavityBottom = gs_frame_width_lower - gs_rebate_width		endif		if bRightCornerFunction & bFrCornerRight = 0 & (gs_optype_m_05 = SASH_FIXED) then			rightFrameCorr = gs_frame_width + gs_frame_thk * abs(tan(90 - rightCornerAngle / 2))		else			rightFrameCorr = 0		endif		if gs_RightMullion_Middle then			cavityLeft = ac_unit_width/2 - gs_SLight_w + gs_Mullion_w/2 - gs_rebate_width		else			cavityLeft = ac_unit_width/2 - gs_SLight_w		endif		cavityRight	= ac_unit_width/2 - gs_frame_width + gs_rebate_width		sashWidthArray[2][3]	= cavityRight - cavityLeft + rightFrameCorr		sashHeightArray[2][3]	= cavityTop - cavityBottom		sashPosXArray[2][3]		= cavityRight - (cavityRight - cavityLeft - rightFrameCorr)/2		sashPosYArray[2][3]		= cavityBottom	endif	! Lower Transom Sashes ========================================================	if gs_LTrans then		cavityHeight = gs_LTrans_h - gs_LTrans_w/2 - gs_frame_width_lower + 2*gs_rebate_width		cavityBottom = gs_frame_width_lower - gs_rebate_width		! Lower Left Sash -------------------------------------------------------------		if gs_LTransom_toLeft & gs_LeftMullion_Bott then			cavityLeft	= -ac_unit_width/2 + gs_frame_width_left - gs_rebate_width			cavityRight	= -ac_unit_width/2 + gs_LeftSLight_w - gs_Mullion_w_left/2 + gs_rebate_width				sashWidthArray[3][1]	= cavityRight - cavityLeft			sashHeightArray[3][1]	= cavityHeight			sashPosXArray[3][1]		= cavityLeft + (cavityRight - cavityLeft)/2			sashPosYArray[3][1]		= cavityBottom		endif		! Lower Middle Sash -----------------------------------------------------------		if gs_LTransom_Middle then			if gs_LeftMullion_Bott then				cavityLeft	= -ac_unit_width/2 + gs_LeftSLight_w + gs_Mullion_w_left/2 - gs_rebate_width			else				cavityLeft	= -ac_unit_width/2 + gs_frame_width_left - gs_rebate_width			endif			if gs_Mullion_Bott then				cavityRight	=  ac_unit_width/2 - gs_SLight_w - gs_Mullion_w/2 + gs_rebate_width			else				cavityRight	=  ac_unit_width/2 - gs_frame_width + gs_rebate_width			endif			if bLeftCornerFunction & bFrCornerLeft = 0 & (gs_optype_m_03 = SASH_FIXED) then				leftFrameCorr = gs_frame_width + gs_frame_thk * abs(tan(90 - leftCornerAngle/2))			else				leftFrameCorr = 0			endif			if bRightCornerFunction & ((gs_bSLight & not(gs_Mullion_Bott)) | not(gs_bSLight)) & bFrCornerRight = 0 & (gs_optype_m_03 = SASH_FIXED) then				rightFrameCorr = gs_frame_width + gs_frame_thk * abs(tan(90 - rightCornerAngle/2))			else				rightFrameCorr = 0			endif			sashWidthArray[3][2]	= cavityRight - cavityLeft + leftFrameCorr + rightFrameCorr			sashHeightArray[3][2]	= cavityHeight			sashPosXArray[3][2]		= (cavityLeft + cavityRight - leftFrameCorr + rightFrameCorr)/2			sashPosYArray[3][2]		= cavityBottom		endif		if gs_LTransom_toRight & gs_Mullion_Bott then			cavityLeft	= ac_unit_width/2 - gs_SLight_w + gs_Mullion_w/2 - gs_rebate_width			cavityRight	= ac_unit_width/2 - gs_frame_width + gs_rebate_width			sashWidthArray[3][3]	= cavityRight - cavityLeft			sashHeightArray[3][3]	= cavityHeight			sashPosXArray[3][3]		= cavityRight - (cavityRight - cavityLeft)/2			sashPosYArray[3][3]		= cavityBottom		endif	endifendif! =============================================================================! Ventilation Profile! =============================================================================if not(bEnableVentilationProfile & bVentilationProfile & (iVentilationProfileType = VENTPROFILE_OVER_GLAZING)) then	isVentilationProfileInSash_01	= 0	isVentilationProfileInSash_02	= 0	isVentilationProfileInSash_03	= 0	isVentilationProfileInSash_04	= 0	isVentilationProfileInSash_05	= 0	isVentilationProfileInSash_06	= 0	isVentilationProfileInSash_07	= 0	isVentilationProfileInSash_08	= 0	isVentilationProfileInSash_09	= 0	isVentilationProfileInSash_10	= 0	isVentilationProfileInSash_11	= 0endif