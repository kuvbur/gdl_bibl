! const values for parameter: iBoardInPolyWallBOARD_PARALLEL_WINDOW      = 1BOARD_PARALLEL_WALLPOLYGON = 2! const values for parameter: iCornerConnTypeRightCONNECTION_TYPE_FRAME  = 1CONNECTION_TYPE_COLUMN = 2CONNECTION_TYPE_GLASS  = 3! const values for parameter: iCornerConnTypeLeftCONNECTION_TYPE_FRAME  = 1CONNECTION_TYPE_COLUMN = 2CONNECTION_TYPE_GLASS  = 3! const values for parameter: iBrickSilldetlevelBRICKSILL_SIMPLE   = 1BRICKSILL_DETAILED = 2! Contact person: <NJ>EPS = 0.0001! iRevealType:REVEAL_EDGE				= 0REVEAL_NO				= 1REVEAL_POSITIVE			= 2REVEAL_NEGATIVE			= 3REVEAL_SLANTED			= 4REVEAL_SPLAYED			= 5REVEAL_HISTORIC			= 6REVEAL_DOUBLE			= 7REVEAL_DOUBLE_SPLAYED	= 8REVEAL_OUTSIDE_SPLAYED	= 9! iClosureType:CLOSURE_NO					= 0CLOSURE_TRADITIONAL			= 1CLOSURE_PREFABRICATED		= 2CLOSURE_CUSTOM				= 3CLOSURE_SOLID_WALL			= 4CLOSURE_STUD_WALL			= 5CLOSURE_STUD_WALL_SIDING	= 6CLOSURE_BRICK_VENEER		= 7CLOSURE_VARIABLE			= 8CLOSURE_PLASTER_REVEAL	 			= 9CLOSURE_INSULATED_REVEAL			= 10CLOSURE_INSULATED_FOR_RENOVATION	= 11CLOSURE_FINISH						= 12CLOSURE_AIR_SPACE					= 13CLOSURE_DUTCH_VARIABLE				= 14! Partial Stucture Display defines:STRUCTURE_ENTIRE_STRUCTURE	= 0STRUCTURE_CORE_ONLY			= 1STRUCTURE_WITHOUT_FINISHES	= 2! iWindowShape:SHAPE_RECTANGULAR			= 0SHAPE_ARCHED				= 1SHAPE_ROUND					= 2SHAPE_EYEBROWS				= 3SHAPE_HALFCIRCLE			= 4 	! straight side is horizontalSHAPE_MULTISIDE				= 5SHAPE_OCTAGONAL				= 6SHAPE_HALFARCH				= 7SHAPE_PENTAGON				= 8SHAPE_QUARTERROUND			= 9SHAPE_HALFROUND				= 10 	! straight side is verticalSHAPE_TRAPEZOID				= 11SHAPE_TRIANGLE				= 12SHAPE_GOTHICARCH			= 13SHAPE_ELLIPSEARCH			= 14SHAPE_ROMBUS				= 15SHAPE_HORSESHOE				= 16SHAPE_OGEECENTERED			= 17SHAPE_SARACENIC				= 18SHAPE_T						= 19SHAPE_HALF_T_LEFT			= 20SHAPE_ARCHED_T				= 21SHAPE_ARCHED_HALF_T_LEFT	= 22SHAPE_PARALLELOGRAM			= 23SHAPE_ELLIPSE				= 24SHAPE_CORNER_TRIANGLE		= 25SHAPE_QUARTERROUND_NOFRAME	= 26SHAPE_HALF_T_RIGHT			= 27SHAPE_ARCHED_HALF_T_RIGHT	= 28! const values for parameter: iSillTypeSILL_TIMBER			= 1SILL_BRICK			= 2SILL_STONE			= 3SILL_CERAMIC		= 4SILL_ETHERNIT		= 5SILL_CONCRETE_TUB	= 6SILL_ALUMINIUM		= 7SILL_SOLID_11		= 8SILL_SOLID_12		= 9SILL_SOLID_22		= 10SILL_METAL_1		= 11SILL_PARALLEL		= 12SILL_METAL_2		= 13SILL_PARALLEL_2		= 14SILL_SIMPLEBLOCK	= 15SILL_BLOCK			= 16SILL_DUTCH			= 17! gs_sunshade_iType:SUNSHADE_DECORATIVE		= 1SUNSHADE_SHUTTER		= 2SUNSHADE_FOLDING		= 3SUNSHADE_OUTFOLDING		= 4SUNSHADE_SLIDING		= 5SUNSHADE_ROLLING		= 6SUNSHADE_EXTVENETIAN	= 7SUNSHADE_VENETIAN		= 8SHUTROLL_ONFACADE = 1SHUTROLL_TOWINDOW = 2SHUTROLL_BEHIND = 3SHUTLAM_ONFACADE = 1SHUTLAM_TOWINDOW = 2SHUTLAM_BEHIND = 3! iThresholdType:TRESHOLD_OFF			= 1TRESHOLD_NORMAL			= 2TRESHOLD_EXTENDED		= 3TRESHOLD_BOTHEXTENDED	= 4TRESHOLD_BENEATHPANEL	= 5TRESHOLD_PROFILED		= 6TRESHOLD_FLAT			= 7		! NOR Flat TerskelTRESHOLD_ANSLAG			= 8		! NOR AnslagterskelTRESHOLD_GUMMI			= 9		! NOR Gummiterskel m SlepelistTRESHOLD_HEVE			= 10	! NOR HeveterskelTRESHOLD_HC				= 11	! NOR H-C TerskelTRESHOLD_BRANN			= 12	! NOR BrannterskelTRESHOLD_BADEROMS		= 13	! NOR BaderomsterskelTRESHOLD_AKKUSTIKK		= 14	! NOR AkkustikkterskelTRESHOLD_SIMPLE			= 15	! NED Simple thresholdTRESHOLD_SLOPINGEXT		= 16	! Sloping ExtendedTRESHOLD_METAL			= 17	! MetalTRESHOLD_EXTENDED_SWE	= 18	! SWE Extended to Opening SideTRESHOLD_NOTAVAILABLE	= -1	! Not Available! =============================================================================bTShapedOpening =  (iWindowShape = SHAPE_T |\					iWindowShape = SHAPE_HALF_T_LEFT |\					iWindowShape = SHAPE_HALF_T_RIGHT |\					iWindowShape = SHAPE_ARCHED_T |\					iWindowShape = SHAPE_ARCHED_HALF_T_LEFT |\					iWindowShape = SHAPE_ARCHED_HALF_T_RIGHT)bInclinedWall	= (abs(WALL_INCL) > EPS)curvedWall		= (abs(WIDO_ORIG_DIST) > EPS)wallIsLeft		= (SYMB_ROTANGLE > EPS) exor WIDO_REVEAL_SIDE! =============================================================================! Array index definitions! =============================================================================if not(bEnableThreshold) then	bThreshold = 0endif! =============================================================================! Polygon Wall Related Calculations! =============================================================================if AC_WallType = 2 then	id1 = AC_WindowInWallContour[1]	id2 = AC_WindowInWallContour[2]	id3 = AC_WindowInWallContour[3]	id4 = AC_WindowInWallContour[4]	if id1 > 0 & id2 > 0 & id3 > 0 & id4 > 0 & abs(id1 - id2) = 1 & abs(id3 - id4) = 1 then		if	abs(AC_WallContourPolygon[id1][2] - AC_WallContourPolygon[id2][2]) < EPS & \			abs(AC_WallContourPolygon[id2][3]) < EPS & \			abs(AC_WallContourPolygon[id3][2] - AC_WallContourPolygon[id4][2]) < EPS & \			abs(AC_WallContourPolygon[id4][3]) < EPS then			AC_WallType = 1		! Switch back to a simple case		endif	endifendif! ==============================================================================! Reveal Points Indexes! ==============================================================================idxSillStartPlasterLeft		= iRevealPointsIdx[7]idxSillStartPlasterRight	= iRevealPointsIdx[17]! =============================================================================! Definitions! =============================================================================bDrawOutsideTrim	= (gs_trim_outside)bDrawInsideTrim		= (gs_trim_inside)if bTShapedOpening then	bDrawSill		= (gs_sill_outside | gs_sill_outside_sl_left | gs_sill_outside_sl_right)	bDrawBoard		= (gs_board_inside_sl_left | gs_board_inside_sl_right)else	bDrawSill		= (gs_sill_outside)	bDrawBoard		= (gs_board_inside)endifbDrawThreshold		= (bThreshold)bDrawShutter		= (bSunshade)bMirrored = (bDisabeMirroring & SYMB_MIRRORED)if lod2D_Casing > 0 then	! USA hack	CasingInsLeftOutPoint	= -(bCasingTolerance & gs_trim_atframe_in) * gs_frame_width	CasingInsRightOutPoint	= -(bCasingTolerance & gs_trim_atframe_in) * gs_frame_width	CasingOutsLeftOutPoint	= -(bCasingTolerance & (gs_trim_atframe_out | WIDO_SILL < EPS)) * gs_frame_width	CasingOutsRightOutPoint	= -(bCasingTolerance & (gs_trim_atframe_out | WIDO_SILL < EPS)) * gs_frame_width	CasingInsLeftOutPoint	= CasingInsLeftOutPoint		- gs_trim_width_in  + gs_trim_offs_in  + gs_tw_left_in   - (bCasingTolerance * gs_tolerance_left)	CasingInsRightOutPoint	= CasingInsRightOutPoint	- gs_trim_width_in  + gs_trim_offs_in  + gs_tw_right_in  - (bCasingTolerance * gs_tolerance_right)	CasingOutsLeftOutPoint	= CasingOutsLeftOutPoint	- gs_trim_width_out + gs_trim_offs_out + gs_tw_left_out  - (bCasingTolerance * gs_tolerance_left)	CasingOutsRightOutPoint	= CasingOutsRightOutPoint	- gs_trim_width_out + gs_trim_offs_out + gs_tw_right_out - (bCasingTolerance * gs_tolerance_right)else	CasingInsLeftOutPoint	= 0	CasingInsRightOutPoint	= 0	CasingOutsLeftOutPoint	= 0	CasingOutsRightOutPoint	= 0endif! ==============================================================================! Partial Stucture Display related display options! ==============================================================================if GLOB_SCRIPT_TYPE = 2 | GLOB_SCRIPT_TYPE = 3 then	if GLOB_STRUCTURE_DISPLAY = STRUCTURE_CORE_ONLY & \	  (GLOB_CONTEXT = 2 | GLOB_CONTEXT = 22 | \		! Floor plan	   GLOB_CONTEXT = 3 | GLOB_CONTEXT = 23 | \		! 3D	   GLOB_CONTEXT = 4 | GLOB_CONTEXT = 24 | \		! Section	   (GLOB_PREVIEW_MODE = 2)  | \	! IS but not surface	   GLOB_CONTEXT = 8 | GLOB_CONTEXT = 28) then	! Layout		bDrawOutsideTrim	= 0		bDrawInsideTrim		= 0		bDrawSill			= 0		bDrawBoard			= 0	endifendif! ==============================================================================! Interactive Schedule and Listing related display options! ==============================================================================if GLOB_SCRIPT_TYPE = 2 | GLOB_SCRIPT_TYPE = 3 then	if GLOB_PREVIEW_MODE = 2 then	! IS but not surface		if not(bShowCasingOnLists)	then bDrawOutsideTrim	= 0		if not(bShowCasingOnLists)	then bDrawInsideTrim	= 0		if not(bShowSillOnLists)	then bDrawSill			= 0		if not(bShowBoardOnLists)	then bDrawBoard			= 0		bDrawThreshold		= 0		bDrawShutter		= 0	endifendif! ==============================================================================! Calculations for Trapezoid Walls! ==============================================================================if bInclinedWall then	bFactor = SYMB_MIRRORED exor WIDO_REVEAL_SIDE exor wallIsLeft	incFactor = not(bFactor) - bFactor	incX = incFactor * tan(WALL_INCL)	incY = incFactor * (1 / cos(WALL_INCL))	bInclDir = SYMB_MIRRORED exor (SYMB_ROTANGLE > EPS)	! (0 / 1)	iInclDir = not(bInclDir) - bInclDir					! (1 / -1)	incH = cos(WALL_INCL)	incV = sin(WALL_INCL) * iInclDir	incHor = tan(WALL_INCL)endif! ==============================================================================! Sill, Board and Casing Parameters Restrictions! ==============================================================================if bEnableSill then	if	gs_sill_outside & \		gs_trim_outside & \		iSillType <> SILL_SIMPLEBLOCK & \		iSillType <> SILL_BLOCK & \		iSillType <> SILL_DUTCH then		minSillNosing		= gs_trim_thk_out	else		minSillNosing		= 0	endif	if gs_sill_nosing < minSillNosing then		gs_sill_nosing = minSillNosing		parameters gs_sill_nosing = minSillNosing	endif	if gs_sill_ovhg_left < 0 then		gs_sill_ovhg_left = 0		parameters gs_sill_ovhg_left = 0	endif	if gs_sill_ovhg_right < 0 then		gs_sill_ovhg_right = 0		parameters gs_sill_ovhg_right = 0	endifendifif bEnableBoard then	if gs_board_inside and gs_trim_inside then		minBoardNosing		= gs_trim_thk_in		if bInclinedWall then			minBoardOvhgLeft	= 0		! gs_tw_left_in - (incX * gs_trim_thk_in + (gs_trim_width_in - gs_trim_offs_in) / incH)			minBoardOvhgRight	= 0		! gs_tw_right_in + (incX * gs_trim_thk_in - (gs_trim_width_in - gs_trim_offs_in) / incH)		else			minBoardOvhgLeft	= 0		! gs_tw_left_in  - gs_trim_width_in + gs_trim_offs_in			minBoardOvhgRight	= 0		! gs_tw_right_in - gs_trim_width_in + gs_trim_offs_in		endif	else		minBoardNosing		= 0		minBoardOvhgLeft	= 0		minBoardOvhgRight	= 0	endif	if gs_board_nosing < minBoardNosing then		gs_board_nosing = minBoardNosing		parameters gs_board_nosing = minBoardNosing	endif	if gs_board_ovhg_left < minBoardOvhgLeft then		gs_board_ovhg_left = minBoardOvhgLeft		parameters gs_board_ovhg_left = minBoardOvhgLeft	endif	if gs_board_ovhg_right < minBoardOvhgRight then		gs_board_ovhg_right = minBoardOvhgRight		parameters gs_board_ovhg_right = minBoardOvhgRight	endifendif! =============================================================================! Wallhole Geometry! =============================================================================bCornerWindow	= (ac_cw_function & ac_corner_window)if isWindow then	openingHeight	= ac_wallhole_height + overSizeLower + overSizeUpper - includeBoxHeightelse	openingHeight	= ac_wallhole_height - includeBoxHeightendifoffsY			= overSizeLower! =============================================================================! SunShade - Casing Set Back! =============================================================================SHUTROLL_ONCASING = 1SHUTROLL_ONWALL = 2SHUTLAM_ONCASING = 1SHUTLAM_ONWALL = 2casingSetBack2D_in	= 0casingSetBack2D_out = 0casingSetBack3D_in	= 0casingSetBack3D_out	= 0if bEnableShutter & bDrawShutter then	if gs_sunShade_iType = SUNSHADE_EXTVENETIAN then		if not(gs_shutLam_bRail) then			gs_shutLam_iRailPos = SHUTLAM_ONCASING		endif	endif	! Casing Set Back	isCutCasingOut = 0 : isCutCasingIn = 0	if not(gs_shutRoll_showCasingBehind) then		if gs_sunShade_iType = SUNSHADE_ROLLING & gs_shutRoll_iPlacement = SHUTROLL_BEHIND then			posRail = gs_shutRoll_railDepth			if posRail < WIDO_SILL then				isCutCasingOut = 1			else				isCutCasingIn = 1			endif		endif		if gs_sunShade_iType = SUNSHADE_EXTVENETIAN then			if gs_shutLam_iPlacement = SHUTLAM_TOWINDOW then isCutCasingOut = 1			if gs_shutLam_iPlacement = SHUTLAM_BEHIND then				posRail = gs_shutLam_coverWidth + gs_shutLam_boxWidth/2 + gs_shutLam_bRail * 0.025/2				if posRail < WIDO_SILL then					isCutCasingOut = 1				else					isCutCasingIn = 1				endif			endif		endif		if gs_sunShade_iType = SUNSHADE_VENETIAN then			if gs_shutLam2_distFromWindow > -gs_shutLam2_boxWidth/2 then				isCutCasingOut = 1			else				isCutCasingIn = 1			endif		endif		if isCutCasingOut then			casingSetBack3D_out = WIDO_SILL - posRail			if gs_sunShade_iType = SUNSHADE_EXTVENETIAN & gs_shutLam_iPlacement = SHUTLAM_TOWINDOW then				casingSetBack3D_out = gs_shutLam_boxWidth/2 - gs_shutLam_bRail * 0.025/2			endif			if gs_sunShade_iType = SUNSHADE_VENETIAN then				casingSetBack3D_out = gs_shutLam2_distFromWindow + gs_shutLam2_boxWidth/2			endif		endif		if isCutCasingIn then			casingSetBack3D_in = posRail - (WIDO_SILL + WIDO_FRAME_THICKNESS)			if gs_sunShade_iType = SUNSHADE_VENETIAN then				casingSetBack3D_in = -gs_shutLam2_distFromWindow - WIDO_FRAME_THICKNESS + gs_shutLam2_boxWidth/2			endif		endif		! 2D Casing Set Back		if (gs_sunShade_iType = SUNSHADE_ROLLING & gs_shutRoll_iRailPos = SHUTROLL_ONWALL) | \			(gs_sunShade_iType = SUNSHADE_EXTVENETIAN & gs_shutLam_iRailPos = SHUTLAM_ONWALL) then			casingSetBack2D_out = casingSetBack3D_out			casingSetBack2D_in = casingSetBack3D_in		endif	endifendif