! Contact person: <NJ>! =============================================================================! Set the Custom corner parameters! =============================================================================if bEnableCustomCornerLeft & bEnableCustomCornerRight then	if bLeftDiffConnWall = 0 then		parameters leftConnWallThk = WALL_THICKNESS		leftConnWallThk = WALL_THICKNESS		lock "leftConnWallThk"	endif	if bRightDiffConnWall = 0 then		parameters rightConnWallThk = WALL_THICKNESS		rightConnWallThk = WALL_THICKNESS		lock "rightConnWallThk"	endif	iCornerConnTypeRight = iCornerConnTypeLeft	parameters iCornerConnTypeRight = iCornerConnTypeRight	if iCornerConnTypeLeft = CONNECTION_TYPE_COLUMN then		gs_corner_column = 1		parameters gs_corner_column = 1	else		gs_corner_column = 0		parameters gs_corner_column = 0	endifendifif bEnableCustomCornerLeft & not(bEnableCustomCornerRight) then	if bLeftDiffConnWall = 0 then		parameters leftConnWallThk = WALL_THICKNESS		leftConnWallThk = WALL_THICKNESS		lock "leftConnWallThk"	endif	if iCornerConnTypeLeft = CONNECTION_TYPE_COLUMN then		gs_corner_column = 1		parameters gs_corner_column = 1	else		gs_corner_column = 0		parameters gs_corner_column = 0	endifendifif bEnableCustomCornerRight & not(bEnableCustomCornerLeft) then	if bRightDiffConnWall = 0 then		parameters rightConnWallThk = WALL_THICKNESS		rightConnWallThk = WALL_THICKNESS		lock "rightConnWallThk"	endif	if iCornerConnTypeRight = CONNECTION_TYPE_COLUMN then		gs_corner_column = 1		parameters gs_corner_column = 1	else		gs_corner_column = 0		parameters gs_corner_column = 0	endifendifif ac_cw_function & ac_corner_window then	lock	"bRightCornerFunction",			"bRightDiffConnWall",			"rightCornerAngle",			"rightConnWallThk"endif! =============================================================================! Do Casing and Sill Parameter Logic! =============================================================================if bEnableSill then	if abs(gs_sill_topWidth)  < EPS then parameters gs_sill_topWidth  = 0.01	if abs(gs_sill_topHeight) < EPS then parameters gs_sill_topHeight = 0.01endifif bEnableBoard then	if gs_stack_bottom then		lock "gs_board_inside", "gs_sill_outside"	endifendif! =============================================================================! Common Sill / Door - Window Mounting Oversize Parameter Locking! =============================================================================_bLockSillOvByMounting	= 0_bLockSillOvBySill		= 0if bEnableWindowMounting then	_bLockSillOvByMounting	= not(bWinMounting)endifif bEnableSill then	if bDoorWithSidelightSupport then		bHasAnySillOn = (gs_sill_outside | \						(gs_sidelight_left  & gs_sidelight_parapet_hgt_left > EPS  & gs_sill_outside_sl_left) | \						(gs_sidelight_right & gs_sidelight_parapet_hgt_right > EPS & gs_sill_outside_sl_right))	else		bHasAnySillOn = (gs_sill_outside)	endif	if not(bHasAnySillOn) | gs_stack_bottom then		! Off		if	bittest( gs_SillTypeEnable, 0) | \			! Timber Sill in Value list			bittest( gs_SillTypeEnable, 7) | \			! Solid Sill 1.1 / Massiv-Fensterbank 1.1 in Value list			bittest( gs_SillTypeEnable, 8) | \			! Solid Sill 1.2 / Massiv-Fensterbank 1.2 in Value list			bittest( gs_SillTypeEnable, 9) | \			! Solid Sill 2.2 / Massiv-Fensterbank 2.2 in Value list			bittest( gs_SillTypeEnable, 10) | \			! Metal Sheet / Metallfensterbank 1.1 in Value list			bittest( gs_SillTypeEnable, 11) | \			! Solid parallel / massiv parallel in Value list			bittest( gs_SillTypeEnable, 12) | \			! Metal Sheet 2 in Value list			bittest( gs_SillTypeEnable, 13) then		! Solid parallel 2 / massiv parallel in Value list				_bLockSillOvBySill	= 1		endif	else		if bHasAnySillOn then			! Outside, Both Sides			if	bittest( gs_SillTypeEnable, 0) | \			! Timber Sill in Value list				bittest( gs_SillTypeEnable, 7) | \			! Solid Sill 1.1 / Massiv-Fensterbank 1.1 in Value list				bittest( gs_SillTypeEnable, 8) | \			! Solid Sill 1.2 / Massiv-Fensterbank 1.2 in Value list				bittest( gs_SillTypeEnable, 9) | \			! Solid Sill 2.2 / Massiv-Fensterbank 2.2 in Value list				bittest( gs_SillTypeEnable, 10) | \			! Metal Sheet / Metallfensterbank 1.1 in Value list				bittest( gs_SillTypeEnable, 11) | \			! Solid parallel / massiv parallel in Value list				bittest( gs_SillTypeEnable, 12) | \			! Metal Sheet 2 in Value list				bittest( gs_SillTypeEnable, 13) then		! Solid parallel 2 / massiv parallel in Value list					if	iSillType = SILL_BRICK | \					iSillType = SILL_STONE | \					iSillType = SILL_CERAMIC | \					iSillType = SILL_ETHERNIT | \					iSillType = SILL_CONCRETE_TUB | \					iSillType = SILL_ALUMINIUM | \					iSillType = SILL_SIMPLEBLOCK | \					iSillType = SILL_BLOCK | \					iSillType = SILL_DUTCH then							_bLockSillOvBySill	= 1				endif			endif		endif	endifendifif _bLockSillOvByMounting & _bLockSillOvBySill then	hideparameter	"gs_sill_oversize"	lock			"gs_sill_oversize"endif! =============================================================================! Do Sill Parameter Logic! =============================================================================if bEnableSill then	call "Sill_kmod" parameters gs_macro_version = 12,		isWindow					= isWindow,		gs_IsCurved					= gs_IsCurved,		iWindowShape				= iWindowShape,		bEnableBoard				= bEnableBoard,		bEnableCasing				= bEnableCasing,		bDoorWithSidelightSupport	= bDoorWithSidelightSupport,	! --- Corner Functions		bLeftCornerFunction			= bLeftCornerFunction,		leftCornerAngle				= leftCornerAngle,		leftConnWallThk				= leftConnWallThk,		bRightCornerFunction		= bRightCornerFunction,		rightCornerAngle			= rightCornerAngle,		rightConnWallThk			= rightConnWallThk,	! --- Window Sizes		ac_reveal_height			= ac_reveal_height,	! --- Sidelight		gs_sidelight_left				= gs_sidelight_left,		gs_sidelight_parapet_hgt_left	= gs_sidelight_parapet_hgt_left,		gs_sidelight_right				= gs_sidelight_right,		gs_sidelight_parapet_hgt_right	= gs_sidelight_parapet_hgt_right,	! --- Casing ---		gs_trim_thk_out				= gs_trim_thk_out,		gs_trim_outside				= gs_trim_outside,	! --- Sill ---		gs_sill_outside				= gs_sill_outside,		gs_sill_outside_sl_left		= gs_sill_outside_sl_left,		gs_sill_outside_sl_right	= gs_sill_outside_sl_right,		gs_SillTypeEnable			= gs_SillTypeEnable,		iSillType 					= iSillType,		gs_sill_thk					= gs_sill_thk,		gs_sill_nosing				= gs_sill_nosing,		gs_sill_angle				= gs_sill_angle,		gs_sill_ovhg_left			= gs_sill_ovhg_left,		gs_sill_ovhg_right			= gs_sill_ovhg_right,		gs_sill_slip_in				= gs_sill_slip_in,		gs_sill_width				= gs_sill_width,		gs_sill_topWidth			= gs_sill_topWidth,		gs_sill_topHeight			= gs_sill_topHeight,		gs_sill_edge				= gs_sill_edge,		gs_sill_element_thk			= gs_sill_element_thk,		gs_sill_curved				= gs_sill_curved,		gs_board_thk				= gs_board_thk,		gs_board_slip_in			= gs_board_slip_in,		gs_sill_endthk				= gs_sill_endthk,		gs_sill_elev				= gs_sill_elev,		gs_sill_dripnos 			= gs_sill_dripnos,		gs_sill_dripwidth			= gs_sill_dripwidth,		gs_sill_ins_below			= gs_sill_ins_below,		gs_sill_ins_use_wall_skin 	= gs_sill_ins_use_wall_skin,		gs_reveal_bottom			= gs_reveal_bottom,		gs_reveal_outerBottom_angle	= gs_reveal_outerBottom_angle,		gs_mountingFrame			= gs_mountingFrame,		gs_mountingFrame_depth		= gs_mountingFrame_depth,		minSillNosing				= minSillNosing,	! --- Oversize ---		ac_right_oversize			= ac_right_oversize,	! --- Stacked Window		gs_stack_left				= gs_stack_left,		gs_stack_right				= gs_stack_right,		gs_stack_bottom				= gs_stack_bottom,	! --- String Resource ---		stSillTypes					= stSillTypes,		stBsilldetlevel 			= stBsilldetlevel,		iBrickSilldetlevel 			= iBrickSilldetlevel,		stSillEdge					= stSillEdge,	! --- Sill UI		bShowSillUICHE				= bShowSillUICHE,	! --- USA Parameters		bSillUSA					= bSillUSA,		gs_brick_sill				= gs_brick_sill,		gs_wt_m						= gs_wt_m,		gs_fsill					= gs_fsill,		gs_win_type					= gs_win_typeendif! =============================================================================! Do Board Parameter Logic! =============================================================================if bEnableBoard then	call "Board_kmod" parameters gs_macro_version = 12,		gs_IsCurved					= gs_IsCurved,		iWindowShape				= iWindowShape,		bDoorWithSidelightSupport	= bDoorWithSidelightSupport,	! --- Corner Functions		bLeftCornerFunction		= bLeftCornerFunction,		leftCornerAngle			= leftCornerAngle,		leftConnWallThk			= leftConnWallThk,		bRightCornerFunction	= bRightCornerFunction,		rightCornerAngle		= rightCornerAngle,		rightConnWallThk		= rightConnWallThk,	! --- Sidelight		gs_sidelight_left				= gs_sidelight_left,		gs_sidelight_parapet_hgt_left	= gs_sidelight_parapet_hgt_left,		gs_sidelight_right				= gs_sidelight_right,		gs_sidelight_parapet_hgt_right	= gs_sidelight_parapet_hgt_right,	! --- Sill ---		gs_sill_oversize		= gs_sill_oversize,		gs_sill_thk				= gs_sill_thk,		gs_board_inside			= gs_board_inside,		gs_board_inside_sl_left	= gs_board_inside_sl_left,		gs_board_inside_sl_right= gs_board_inside_sl_right,		gs_board_thk			= gs_board_thk,		gs_board_nosing			= gs_board_nosing,		gs_board_angle			= gs_board_angle,		gs_board_ovhg_left		= gs_board_ovhg_left,		gs_board_slip_in		= gs_board_slip_in,		gs_board_width			= gs_board_width,		gs_board_curved			= gs_board_curved,		bBoardInPolyWall		= bBoardInPolyWall,		minBoardNosing			= minBoardNosing,		minBoardOvhgLeft		= minBoardOvhgLeft,		minBoardOvhgRight		= minBoardOvhgRight,	! --- Splayed Reveal ---		gs_reveal_bottom_angle  = gs_reveal_bottom_angle,	! --- Oversize ---		ac_right_oversize		= ac_right_oversize,	! --- Stacked Window		gs_stack_left			= gs_stack_left,		gs_stack_right			= gs_stack_right,		gs_stack_bottom			= gs_stack_bottom,	! --- Wall Inset		gs_parapet_wall_inset	= gs_parapet_wall_inset,		stBoardInPolyWall		= stBoardInPolyWallendif! =============================================================================! Do Threshold Parameter Logic! =============================================================================if bEnableThreshold then	call "Threshold_kmod" parameters gs_macro_version = 12,		gs_IsCurved				= 0,		iWindowShape			= iWindowShape,		bEnableThreshold		= bEnableThreshold,		gs_wido_sill			= gs_wido_sill,		gs_fthk					= gs_fthk,		gs_frame_wthk			= gs_frame_wthk,		gs_frame_thkin			= gs_frame_thkin,		gs_frame_width_left		= gs_frame_width_left,		gs_frame_width_right	= gs_frame_width_right,		gs_rebate_depth			= gs_rebate_depth,		gs_rebate_width			= gs_rebate_width,		gs_leaf_thk				= gs_leaf_thk,	! --- Trim ---		gs_trim_outside			= gs_trim_outside,		gs_trim_width_out		= gs_trim_width_out,		gs_trim_inside			= gs_trim_inside,		gs_trim_width_in		= gs_trim_width_in,	! --- Threshold		bThreshold				= bThreshold,		iThresholdType			= iThresholdType,		gs_TresholdTypeEnable	= gs_TresholdTypeEnable,		gs_treshold_thk			= gs_treshold_thk,		gs_treshold_width		= gs_treshold_width,		gs_treshold_angle		= gs_treshold_angle,		gs_treshold_ext_hgt		= gs_treshold_ext_hgt,		gs_treshold_nosing		= gs_treshold_nosing,		gs_treshold_nosing_2	= gs_treshold_nosing_2,	! --- Stacked Window		gs_stack_left			= gs_stack_left,		gs_stack_right			= gs_stack_right,	! --- String Resource ---		stThresholdTypes		= stThresholdTypes,	! --- NOR Parameters		gs_threshold_nor		= gs_threshold_norelse	if not(isWindow) & not(isEmptyOpening) & gs_TresholdTypeEnable > 0 then		values{2} "iThresholdType" TRESHOLD_NOTAVAILABLE, " "		lock	"bThreshold",				"iThresholdType"	endifendif! =============================================================================! Do Casing Parameter Logic! =============================================================================if bEnableCasing then	call "Casing_kmod" parameters gs_macro_version = 12,		isWindow				= isWindow,		Suppress_isWindow		= Suppress_isWindow,		gs_IsCurved				= gs_IsCurved,		gs_CasingOutTypeEnable	= gs_CasingOutTypeEnable,		gs_CasingInTypeEnable	= gs_CasingInTypeEnable,		iWindowShape			= iWindowShape,		gs_frame_style_m		= iFrameStyle,		iDoorType				= iDoorType,		bEnableSwitchableBottomCasing	= bEnableSwitchableBottomCasing,	! --- Corner Functions		bLeftCornerFunction		= bLeftCornerFunction,		leftCornerAngle			= leftCornerAngle,		leftConnWallThk			= leftConnWallThk,		bRightCornerFunction	= bRightCornerFunction,		rightCornerAngle		= rightCornerAngle,		rightConnWallThk		= rightConnWallThk,	! --- Reveal Parameters		iRevealType				= iRevealType,	! --- Sidelight		gs_sidelight_parapet_hgt_left	= gs_sidelight_parapet_hgt_left,		gs_sidelight_parapet_hgt_right	= gs_sidelight_parapet_hgt_right,	! --- Trim ---		gs_trimtype_in			= gs_trimtype_in,		gs_trimtype_in_int		= gs_trimtype_in_int,		gs_trimtype_out			= gs_trimtype_out,		gs_trimtype_out_int		= gs_trimtype_out_int,		gs_trim_inside			= gs_trim_inside,		gs_trim_outside			= gs_trim_outside,		gs_trim_inside_uniform	= gs_trim_inside_uniform,		gs_trim_outside_uniform	= gs_trim_outside_uniform,		gs_trim_width_in		= gs_trim_width_in,		gs_trim_width_out		= gs_trim_width_out,		gs_trim_offs_in			= gs_trim_offs_in,		gs_trim_offs_out		= gs_trim_offs_out,		gs_trim_thk_in			= gs_trim_thk_in,		gs_trim_thk_out			= gs_trim_thk_out,		gs_tw_left_in			= gs_tw_left_in,		gs_tw_right_in			= gs_tw_right_in,		gs_tw_left_out			= gs_tw_left_out,		gs_tw_right_out			= gs_tw_right_out,		gs_trimov_top_left_out	= gs_trimov_top_left_out,		gs_trimov_top_right_out	= gs_trimov_top_right_out,		gs_trimov_bot_left_out	= gs_trimov_bot_left_out,		gs_trimov_bot_right_out	= gs_trimov_bot_right_out,		gs_trimov_top_left_in	= gs_trimov_top_left_in,		gs_trimov_top_right_in	= gs_trimov_top_right_in,		gs_trimov_bot_left_in	= gs_trimov_bot_left_in,		gs_trimov_bot_right_in	= gs_trimov_bot_right_in,		gs_trim_atframe_out		= gs_trim_atframe_out,		gs_trim_atframe_in		= gs_trim_atframe_in,		gs_trim_stack_left		= gs_trim_stack_left,		gs_trim_stack_right		= gs_trim_stack_right,		gs_trim_stack_bottom	= gs_trim_stack_bottom,		gs_trim_stack_top		= gs_trim_stack_top,		gs_trim_show_cover_in	= gs_trim_show_cover_in,		gs_trim_show_cover_out	= gs_trim_show_cover_out,		gs_trim_jambext_nosing_in	= gs_trim_jambext_nosing_in,		gs_trim_jambext_nosing_out	= gs_trim_jambext_nosing_out,		bCasingTolerance		= bCasingTolerance,		bLinkCasingSurfaces		= bLinkCasingSurfaces,		stored_material			= stored_material,		gs_trim_in_mat			= gs_trim_in_mat,		gs_trim_out_mat			= gs_trim_out_mat,	! --- Complex Casing ---		bArchitraveCapital		= bArchitraveCapital,	! --- Sill ---		bEnableSill				= bEnableSill,		gs_sill_outside			= gs_sill_outside,	! --- Apron ---		bEnableApron			= bEnableApron,		gs_apron				= gs_apron,		gs_apron_thk			= gs_apron_thk,		gs_apron_width			= gs_apron_width,		gs_apron_mat			= gs_apron_mat,	! --- Stacked Window		bEnableCasingAtGanging	= bEnableCasingAtGanging,		gs_stack_left			= gs_stack_left,		gs_stack_right			= gs_stack_right,		gs_stack_top			= gs_stack_top,		gs_stack_bottom			= gs_stack_bottom,	! --- String Resource ---		stCasingType			= stCasingType,		stCasingHeadType		= stCasingHeadType,		stArchitraveCapitalType	= stArchitraveCapitalType,		gs_frame_wthk			= gs_frame_wthk,	! --- USA Parameters ---		gs_wt_m					= gs_wt_m,		gs_frame_width			= gs_frame_width,		gs_sectgar				= gs_sectgar,		bCasingUSA				= bCasingUSA,	! --- NOR Parameters ---		gs_casing_nor			= gs_casing_nor,	! --- CHE Parameters ---		gs_casing_che			= gs_casing_cheendif! =============================================================================! Do Sunshading Parameter Logic! =============================================================================if bEnableShutter then	outfolding_innerPanelLeft = gs_outFoldingShutter_panelIn	outfolding_innerPanelRight = gs_outFoldingShutter_panelIn	if iRevealType = REVEAL_DOUBLE_SPLAYED | iRevealType = REVEAL_OUTSIDE_SPLAYED then		leftWallAngle	= gs_reveal_outerLeft_angle		* not(gs_stack_left)		rightWallAngle	= gs_reveal_outerRight_angle	* not(gs_stack_right)		topWallAngle	= gs_reveal_outerTop_angle		* not(gs_stack_top)		bottomWallAngle	= gs_reveal_outerBottom_angle	* not(gs_stack_bottom)	else		leftWallAngle	= 0		rightWallAngle	= 0		topWallAngle	= 0		bottomWallAngle	= 0	endif	bUseInnerRevealPoints = 0	if iRevealType = REVEAL_DOUBLE_SPLAYED | iRevealType = REVEAL_OUTSIDE_SPLAYED then		if gs_sunShade_iType = SUNSHADE_FOLDING | gs_sunShade_iType = SUNSHADE_OUTFOLDING then bUseInnerRevealPoints = 1		if gs_sunShade_iType = SUNSHADE_ROLLING & gs_shutRoll_iPlacement <> 1 then bUseInnerRevealPoints = 1		if gs_sunShade_iType = SUNSHADE_EXTVENETIAN & gs_shutLam_iPlacement <> 1 then bUseInnerRevealPoints = 1	endif	if bUseInnerRevealPoints then		leftCornerX		= leftWallFrameRevealPnts[idxSillStartPlasterLeft+1][1]		rightCornerX	=  rightWallFrameRevealPnts[idxSillStartPlasterRight+1][1]		leftX1		= leftWallFrameRevealPnts[idxSillStartPlasterLeft][1]		rightX1		= rightWallFrameRevealPnts[idxSillStartPlasterRight][1]		if WIDO_REVEAL_SIDE then			leftCornerY		= leftWallFrameRevealPnts[idxSillStartPlasterLeft][2] - WIDO_FRAME_THICKNESS			rightCornerY	= rightWallFrameRevealPnts[idxSillStartPlasterRight][2] - WIDO_FRAME_THICKNESS			leftY2	= leftWallFrameRevealPnts[idxSillStartPlasterLeft+1][2] - WIDO_FRAME_THICKNESS			rightY2	= rightWallFrameRevealPnts[idxSillStartPlasterRight+1][2] - WIDO_FRAME_THICKNESS		else			leftCornerY		= -leftWallFrameRevealPnts[idxSillStartPlasterLeft][2]			rightCornerY	= -rightWallFrameRevealPnts[idxSillStartPlasterRight][2]			leftY2	= -leftWallFrameRevealPnts[idxSillStartPlasterLeft+1][2]			rightY2	= -rightWallFrameRevealPnts[idxSillStartPlasterRight+1][2]		endif		if abs(leftWallAngle) < EPS then			outfolding_innerPanelLeft = WIDO_SILL - gs_reveal_outer_jamb_depth		else			outfolding_innerPanelLeft = sqr((leftCornerX - leftX1)^2 + (leftY2 - leftCornerY)^2)		endif		if abs(rightWallAngle) < EPS then			outfolding_innerPanelRight = WIDO_SILL - gs_reveal_outer_jamb_depth		else			outfolding_innerPanelRight = sqr((rightCornerX - rightX1)^2 + (rightY2 -rightCornerY)^2)		endif	else		leftCornerX		= leftWallFrameRevealPnts[idxSillStartPlasterLeft][1]		rightCornerX	= rightWallFrameRevealPnts[idxSillStartPlasterRight][1]		if WIDO_REVEAL_SIDE then			leftCornerY		= leftWallFrameRevealPnts[idxSillStartPlasterLeft][2] - WIDO_FRAME_THICKNESS			rightCornerY	= rightWallFrameRevealPnts[idxSillStartPlasterRight][2] - WIDO_FRAME_THICKNESS		else			leftCornerY		= -leftWallFrameRevealPnts[idxSillStartPlasterLeft][2]			rightCornerY	= -rightWallFrameRevealPnts[idxSillStartPlasterRight][2]		endif	endif	sunShadeLength = rightCornerX - leftCornerX	sunShadeLength3D = sunShadeLength	if not(gs_turn_plaster_show_3D) then		sunShadeLength3D = sunShadeLength + thkPlasterAtSillLeft * not(gs_stack_left) + thkPlasterAtSillRight * not(gs_stack_right)	endif	casingThkAtWindow	= 0	casingThkOnFacade	= 0	if gs_trim_outside then		casingThkAtWindow = gs_trim_width_out		if gs_shutRoll_iRailPos = 2 then		! ON WALL			casingThkAtWindow = 0		endif		if gs_shutLam_iRailPos = 2 then		! ON WALL			casingThkAtWindow = 0		endif		if gs_trim_show_cover_out then			casingThkOnFacade = gs_trim_thk_out		else			casingThkOnFacade = gs_trim_jambext_nosing_out		endif	endif	bottomCorrection		= 0	topCorrection			= 0	bottomCorrection3D		= 0	topCorrection3D			= 0	if gs_sunShade_bModifyRevealSize then	! DACH types		topCorrection = thkPlasterAtSillTop * not(gs_stack_top)		topCorrection3D = topCorrection * gs_turn_plaster_show_3D		if gs_sill_outside then			if gs_sill_oversize then				bottomCorrection = 0				bottomCorrection3D = bottomCorrection			else				if iSillType = SILL_BRICK | iSillType = SILL_STONE then					bottomCorrection = 0				else					bottomCorrection = gs_sill_thk				endif				bottomCorrection3D = bottomCorrection			endif		else			if gs_trim_outside then				bottomCorrection = 0			else				bottomCorrection = thkPlasterAtSillBottom * not(gs_stack_bottom)			endif			bottomCorrection3D = bottomCorrection * gs_turn_plaster_show_3D		endif		if iRevealType = REVEAL_DOUBLE_SPLAYED | iRevealType = REVEAL_OUTSIDE_SPLAYED then			elevateSunShadeBottom = not(gs_stack_bottom) * gs_sill_outside * gs_sill_element_thk / cos(gs_reveal_outerBottom_angle)			if gs_mountingFrame then				topCorrection	= elevateSunShadeBottom - gs_mountingFrame_width_top - gs_mountingFrame_width_bottom				topCorrection3D	= elevateSunShadeBottom - gs_mountingFrame_width_top - gs_mountingFrame_width_bottom			else				topCorrection	= 0				topCorrection3D	= 0			endif			if gs_sunShade_iType = SUNSHADE_SHUTTER then				slantedDepthTop		= max(0, WIDO_SILL - gs_shutter_closingDepth - gs_shutter_bExtraFrame * gs_shutter_extraFrameThk - gs_reveal_outer_jamb_depth)				slantedDepthBottom	= WIDO_SILL - gs_shutter_closingDepth - gs_shutter_bExtraFrame * gs_shutter_extraFrameThk - gs_mountingFrame * gs_mountingFrame_depth			else				slantedDepthTop		= WIDO_SILL - gs_reveal_outer_jamb_depth				slantedDepthBottom	= WIDO_SILL - gs_mountingFrame * gs_mountingFrame_depth			endif			slantedCorrectionTop	= not(gs_stack_top) * slantedDepthTop * tan(gs_reveal_outerTop_angle)			slantedCorrectionBottom	= not(gs_stack_bottom) * slantedDepthBottom * tan(gs_reveal_outerBottom_angle)			if not(bUseInnerRevealPoints) then				elevateSunShadeBottom = elevateSunShadeBottom - slantedCorrectionBottom				elevateSunShadeBottom = elevateSunShadeBottom + gs_stack_bottom * gs_sill_outside * gs_sill_oversize * gs_sill_element_thk / cos(gs_reveal_outerBottom_angle)			endif			if bUseInnerRevealPoints then				topCorrection = 0			else				topCorrection	= topCorrection - slantedCorrectionBottom - slantedCorrectionTop				topCorrection	= topCorrection - gs_stack_top * not(gs_mountingFrame) * gs_reveal_top			endif			topCorrection3D	= topCorrection			if bUseInnerRevealPoints then				bottomCorrection = 0			else				bottomCorrection	= not(gs_stack_bottom) * not(gs_mountingFrame) * gs_sill_outside * not(gs_sill_oversize) * gs_sill_element_thk / cos(gs_reveal_outerBottom_angle)			endif			bottomCorrection3D	= bottomCorrection		endif	else	! INT types		if gs_trim_outside then			topCorrection = gs_trim_width_out			topCorrection3D = topCorrection		else			topCorrection = thkPlasterAtSillTop * not(gs_stack_top)			topCorrection3D = topCorrection * gs_turn_plaster_show_3D		endif		if gs_sill_outside then			bSunshadeReachesFrame = (gs_sunShade_iType = SUNSHADE_FOLDING | gs_sunShade_iType = SUNSHADE_OUTFOLDING)			bottomCorrection = 0			if	iSillType = SILL_BRICK | \				iSillType = SILL_STONE | \				iSillType = SILL_CERAMIC | \				iSillType = SILL_ETHERNIT | \				iSillType = SILL_CONCRETE_TUB | \				iSillType = SILL_ALUMINIUM | \				iSillType = SILL_SIMPLEBLOCK | \				iSillType = SILL_BLOCK | \				iSillType = SILL_DUTCH then				if iSillType = SILL_BRICK		 then bottomCorrection = -(not(bSunshadeReachesFrame) * WIDO_SILL + gs_sill_slip_in) * tan(gs_sill_angle)				if iSillType = SILL_STONE		 then bottomCorrection = -(not(bSunshadeReachesFrame) * WIDO_SILL + gs_sill_slip_in - gs_sill_topWidth) * tan(gs_sill_angle) - gs_sill_topHeight				if iSillType = SILL_CERAMIC		 then bottomCorrection = -((gs_sill_thk - gs_sill_endthk) * cos(gs_sill_angle) + tan(gs_sill_angle) * (not(bSunshadeReachesFrame) * WIDO_SILL + gs_sill_slip_in))				if iSillType = SILL_ETHERNIT	 then bottomCorrection = -(not(bSunshadeReachesFrame) * WIDO_SILL + gs_sill_slip_in - gs_sill_topWidth) * tan(gs_sill_angle) - gs_sill_topHeight				if iSillType = SILL_CONCRETE_TUB then bottomCorrection = not(bSunshadeReachesFrame) * (0.17 * gs_sill_thk / 0.185 - gs_sill_thk)				if iSillType = SILL_ALUMINIUM	 then bottomCorrection = -(not(bSunshadeReachesFrame) * WIDO_SILL + gs_sill_slip_in - 0.002) * tan(gs_sill_angle) - 0.01				if iSillType = SILL_SIMPLEBLOCK	 then bottomCorrection = 0				if iSillType = SILL_BLOCK		 then bottomCorrection = -gs_sill_thk				if iSillType = SILL_DUTCH		 then bottomCorrection = -gs_sill_thk			else				if iSillType = SILL_TIMBER	 then bottomCorrection = -not(bSunshadeReachesFrame) * max(0, WIDO_SILL) * tan(gs_sill_angle)				if iSillType = SILL_SOLID_22 then bottomCorrection = - 0.01 - not(bSunshadeReachesFrame) * max(0, gs_sill_thk - gs_sill_endthk - gs_sill_elev - 0.01) + \					 max(0, gs_sill_thk - gs_sill_endthk - 0.01) / (max(0, WIDO_SILL) + gs_sill_nosing - 0.01) * gs_sill_nosing				if iSillType = SILL_METAL_1	 then bottomCorrection = - 0.01 - not(bSunshadeReachesFrame) * max(0, gs_sill_thk - gs_sill_endthk - 0.01)				if not(gs_sill_oversize) then					bottomCorrection = bottomCorrection + gs_sill_thk + (iSillType = SILL_SOLID_22) * gs_sill_elev				endif			endif			bottomCorrection3D = bottomCorrection		else			if gs_trim_outside then				bottomCorrection = gs_trim_width_out * isWindow				bottomCorrection3D = bottomCorrection			else				bottomCorrection = thkPlasterAtSillBottom * not(gs_stack_bottom) * isWindow				bottomCorrection3D = bottomCorrection * gs_turn_plaster_show_3D			endif		endif	endif	call "SunShade_kmod" parameters a		= sunShadeLength - casingThkAtWindow * 2,		b								= ac_reveal_height - bottomCorrection - topCorrection,		sunShadeLength3D				= sunShadeLength3D - casingThkAtWindow * 2,		sunShadeHeight3D				= ac_reveal_height - bottomCorrection3D - topCorrection3D,		bSunshade						= bSunshade,		gs_sunShade_iType				= gs_sunShade_iType,		gs_sunShade_typeEnable			= gs_sunShade_typeEnable,		gs_sunShade_iCashedEnableTypes	= gs_sunShade_iCashedEnableTypes,		gs_sunShade_bChangeEnabledTypes	= gs_sunShade_bChangeEnabledTypes,		gs_shutter_nPanels				= gs_shutter_nPanels,		gs_shutter_nPanels2				= gs_shutter_nPanels2,		gs_shutter_panelPos				= gs_shutter_panelPos,		gs_shutter_iPanelPos			= gs_shutter_iPanelPos,		gs_sunShade_bAutomaticHeight	= gs_sunShade_bAutomaticHeight,		gs_sunShade_height				= gs_sunShade_height,		gs_shutter_innerOffset			= gs_shutter_innerOffset,		gs_shutter_closingDepth			= gs_shutter_closingDepth,		gs_slidingShutter_cover			= gs_slidingShutter_cover,		gs_slidingShutter_iCover		= gs_slidingShutter_iCover,		gs_foldingShutter_stacking		= gs_foldingShutter_stacking,		gs_foldingShutter_iStacking		= gs_foldingShutter_iStacking,		gs_foldingShutter_ovhg			= gs_foldingShutter_ovhg,		gs_outFoldingShutter_panelIn	= gs_outFoldingShutter_panelIn,		gs_shutter_opLength				= gs_shutter_opLength,		gs_shutter_closedLength			= gs_shutter_closedLength,		gs_shutter_opLength_1			= gs_shutter_opLength_1,		gs_shutter_opLength_2			= gs_shutter_opLength_2,		gs_shutter_opHeight				= gs_shutter_opHeight,		gs_shutter_closedHeight			= gs_shutter_closedHeight,		gs_shutPanel_archHeight			= openingArchHeight,		gs_shutPanel_type				= gs_shutPanel_type,		gs_shutPanel_iType				= gs_shutPanel_iType,		gs_cust_shutterPanel			= gs_cust_shutterPanel,		gs_shutPanel_Thk				= gs_shutPanel_Thk,		gs_shutPanel_frameWidth			= gs_shutPanel_frameWidth,		gs_shutPanel_BDiffBottomFrame	= gs_shutPanel_BDiffBottomFrame,		gs_shutPanel_frameWidthBottom	= gs_shutPanel_frameWidthBottom,		gs_shutPanel_bAutomaticWidth	= gs_shutPanel_bAutomaticWidth,		gs_shutPanel_panelWidth			= gs_shutPanel_panelWidth,		gs_shutPanel_fieldThk			= gs_shutPanel_fieldThk,		gs_shutPanel_louverThk			= gs_shutPanel_louverThk,		gs_shutPanel_louverWidth		= gs_shutPanel_louverWidth,		gs_shutPanel_louverAngle		= gs_shutPanel_louverAngle,		gs_shutPanel_midFrameHorW		= gs_shutPanel_midFrameHorW,		gs_shutPanel_midFrameVertW		= gs_shutPanel_midFrameVertW,		gs_shutPanel_nHoleHor			= gs_shutPanel_nHoleHor,		gs_shutPanel_nHoleVert			= gs_shutPanel_nHoleVert,		gs_shutPanel_holeRadius			= gs_shutPanel_holeRadius,		gs_shutPanel_ZBoardW			= gs_shutPanel_ZBoardW,		gs_shutPanel_ZWidth				= gs_shutPanel_ZWidth,		gs_shutPanel_ZThk				= gs_shutPanel_ZThk,		gs_shutPanel_boardThkVert		= gs_shutPanel_boardThkVert,		gs_shutPanel_boardThkHor		= gs_shutPanel_boardThkHor,		gs_shutPanel_vertBoardW			= gs_shutPanel_vertBoardW,		gs_shutPanel_horBoardW			= gs_shutPanel_horBoardW,		gs_shutRoll_placement			= gs_shutRoll_placement,		gs_shutRoll_iPlacement			= gs_shutRoll_iPlacement,		gs_shutRoll_placementEnable		= gs_shutRoll_placementEnable,		gs_shutRoll_boxType				= gs_shutRoll_boxType,		gs_shutRoll_iBoxType			= gs_shutRoll_iBoxType,		gs_shutRoll_railPos				= gs_shutRoll_railPos,		gs_shutRoll_iRailPos			= gs_shutRoll_iRailPos,		gs_shutRoll_boxWidth			= gs_shutRoll_boxWidth,		gs_shutRoll_boxHeight			= gs_shutRoll_boxHeight,		gs_shutRoll_boxDefaultSize		= gs_shutRoll_boxDefaultSize,		gs_shutRoll_iBoxDefaultSize		= gs_shutRoll_iBoxDefaultSize,		gs_shutRoll_distFromHead		= gs_shutRoll_distFromHead,		gs_shutRoll_cutWallBehind		= gs_shutRoll_cutWallBehind,		gs_shutLam_placement			= gs_shutLam_placement,		gs_shutLam_iPlacement			= gs_shutLam_iPlacement,		gs_shutLam_railPos				= gs_shutLam_railPos,		gs_shutLam_iRailPos				= gs_shutLam_iRailPos,		gs_shutLam_placementEnable		= gs_shutLam_placementEnable,		gs_shutLam_boxHeight			= gs_shutLam_boxHeight,		gs_shutLam_distFromHead			= gs_shutLam_distFromHead,		gs_shutLam_bRail				= gs_shutLam_bRail,		gs_shutLam_cutWallBehind		= gs_shutLam_cutWallBehind,		gs_shutLam2_boxHeight			= gs_shutLam2_boxHeight,		gs_shutLam2_distFromHead		= gs_shutLam2_distFromHead,		gs_shutLam2_axisFromHead		= gs_shutLam2_axisFromHead,		stSunShadeTypes					= stSunShadeTypes,		stShutterPanelPos				= stShutterPanelPos,		stFoldingShutterStacking		= stFoldingShutterStacking,		stSlidingShutterCover			= stSlidingShutterCover,		stShutterPanelTypes				= stShutterPanelTypes,		stShutRollPlacement				= stShutRollPlacement,		stShutRollBoxType				= stShutRollBoxType,		stShutRollBoxDefaultSize		= stShutRollBoxDefaultSize,		stShutRollRailPos				= stShutRollRailPos,		stShutLamPlacement				= stShutLamPlacement,		stShutLamRailPos				= stShutLamRailPos,		radSill							= radSill,		radBoard						= radBoard,		iWindowShape					= iWindowShape,		bLeftCornerFunction				= bLeftCornerFunction,		bRightCornerFunction			= bRightCornerFunction,		gs_stack_left					= gs_stack_left,		gs_stack_right					= gs_stack_right,		iRevealType						= iRevealType,		gs_reveal_top					= gs_reveal_top,		leftWallAngle					= leftWallAngle,		rightWallAngle					= rightWallAngle,		topWallAngle					= topWallAngle,		bottomWallAngle					= bottomWallAngle		if (not(gs_trim_outside) & not(gs_trim_inside)) | not(bEnableCasing) then			lock 	"gs_shutRoll_railPos",					"gs_shutRoll_iRailPos",					"gs_shutRoll_showCasingBehind"			lock 	"gs_shutLam_railPos",					"gs_shutLam_iRailPos",					"gs_shutLam_showCasingBehind"			hideparameter 	"gs_shutRoll_railPos",							"gs_shutRoll_iRailPos",							"gs_shutRoll_showCasingBehind"			hideparameter 	"gs_shutLam_railPos",							"gs_shutLam_iRailPos",							"gs_shutLam_showCasingBehind"		endifendif! =============================================================================! Do Corner Column Parameter Logic! =============================================================================if bEnableCustomCornerLeft | bEnableCustomCornerRight then	call "Corner Column_kmod" parameters gs_macro_version = 12,	! --- Corner Column Geometry		bLeftCornerFunction		= bLeftCornerFunction,		bRightCornerFunction	= bRightCornerFunction,		gs_corner_column 		= gs_corner_column,		gs_cc_width				= gs_cc_width,		gs_cc_thk				= gs_cc_thk,		gs_cc_pr				= gs_cc_prendif