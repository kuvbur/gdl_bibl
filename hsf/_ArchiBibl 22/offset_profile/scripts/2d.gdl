hotspot2 0,0!!---------------------------start https://gdl.graphisoft.com/gdl_other_docs/profile-modelling-in-2d-with-attributes -------------for _iComp = 1 to _nComponents	if _bShowPart[_iComp] then		! --- Get contour pen ---		_pen = 1		n = REQUEST{4} ("Profile_component_info", myProfileIdx, _iComp, "gs_profile_outlinepen", _pen)		! --- Get building material and cut fill attributes ---		_bmat = 1		n = REQUEST{4} ("Profile_component_info", myProfileIdx, _iComp, "gs_profile_bmat", _bmat)		n = REQUEST{2} ("Building_Material_info", _bmat, "gs_bmat_cutfill_properties", _fillType, _fillPen, _fillBgPen)		! --- Get the pens and linetypes for the polygon edges ---		dim _currPens[]		dim _currLineTypes[]		n = REQUEST{4} ("Profile_component_info", myProfileIdx, _iComp, "gs_profile_comp_pens", _currPens)		n = REQUEST{4} ("Profile_component_info", myProfileIdx, _iComp, "gs_profile_comp_linetypes", _currLineTypes)		fill _fillType		pen _pen				! --- Store parameters for the poly command ---		_penLtIdx = 1		for _i = _idxStartPoints[_iComp] to _idxEndPoints[_iComp] step 5			put 	_profileGeometryRawData[_i],		! xn				_profileGeometryRawData[_i + 1],	! yn				_profileGeometryRawData[_i + 2] + _profileGeometryRawData[_i + 4],	! status values : edgeVisible + additionalStatus				_currPens[_penLtIdx],			! pen				_currLineTypes[_penLtIdx]		! linetype			_penLtIdx = _penLtIdx + 1		next _i		! --- Draw the component ---			poly2_b{6} (NSP/5), 1+2+4, 1, 0,	! cut fill, 0 distortion flag			_fillPen, _fillBgPen,			0, 0,				! fill origin			0.1, 0.1, 0.2, 0.2,		! mxx, mxy, myx, myy			0.1, 				! gradientInnerRadius			get (NSP)	endifnext _iComp!!---------------------------end https://gdl.graphisoft.com/gdl_other_docs/profile-modelling-in-2d-with-attributes -------------