! Contact person: <SzL, NJ>! =============================================================================lod3D = 0										! Don't draw anythingif (GLOB_VIEW_TYPE = 9 & GLOB_PREVIEW_MODE = 0) then	! in case of Surface IS Calculation	lod3D = 2	! Detailedelse	if iDWDet3D = DETLEVEL_DW3D_SIMPLE then lod3D = 1	! Simple	if iDWDet3D = DETLEVEL_DW3D_DETAILED then lod3D = 2	! Detailed	if iDWDet3D = DETLEVEL_DW3D_CHI_SIMPLE | iDWDet3D = DETLEVEL_DW3D_CHI_DETAILED then		if (GLOB_CONTEXT = 4 | GLOB_CONTEXT = 24 | GLOB_CONTEXT = 6) then			lod3D = 5								! Chinese		else			lod3D = 2		endif	endifendifgs_fillFr		= gs_bFills * gs_fillFrgs_penFr_fg		= gs_bFills * gs_penFr_fggs_penFr_bg		= gs_bFills * gs_penFr_bggs_fillSash		= gs_bFills * gs_fillSashgs_penSash_fg	= gs_bFills * gs_penSash_fggs_penSash_bg	= gs_bFills * gs_penSash_bgif not(gs_shadow) then shadow off! =============================================================================! GS Corner Window Functions! =============================================================================bMirroredOpening = 1call "GS Corner Window Functions",	parameters all	iWindowShape			= iWindowShape,					openingArchHeight		= openingArchHeight,					bMirroredOpening		= bMirroredOpening,					gs_IsCurved				= gs_IsCurved,					bParalellInCurvedWalls	= bParalellInCurvedWalls,					lod3D					= lod3D,					bDisabeMirroring		= bDisabeMirroring,					bLeftCornerFunction		= bLeftCornerFunction,					leftCornerAngle			= leftCornerAngle,					bLeftDiffConnWall		= bLeftDiffConnWall,					leftConnWallThk			= leftConnWallThk,					bRightCornerFunction	= bRightCornerFunction,					rightCornerAngle		= rightCornerAngle,					bRightDiffConnWall		= bRightDiffConnWall,					rightConnWallThk		= rightConnWallThk,					gs_frame_width_left		= gs_frame_width,	returned_parameters	ac_unit_width,						ac_unit_height,						gs_frame_ovhg_left_out,						gs_frame_ovhg_right_out,						gs_frame_ovhg_top_out,						gs_frame_ovhg_bottom_out,						gs_frame_ovhg_left_in,						gs_frame_ovhg_right_in,						gs_frame_ovhg_top_in,						gs_frame_ovhg_bottom_in,						bMirrored,						xform11, xform12, xform13, xform14,						xform21, xform22, xform23, xform24,						xform31, xform32, xform33, xform34,						bOplines3d, opLineType3dIn, opLineType3dOut, gs_opline_style_m, gs_opLinePen,						bShowAddHotspots, bShowAddHotspotsForIS, bShowUnitHotspots! =============================================================================! Block for operator mode! =============================================================================if GLOB_CONTEXT > 40 & GLOB_CONTEXT < 50 then	addy gs_tolerance_lower	prism_ 4, WIDO_FRAME_THICKNESS,		-ac_unit_width/2, 0, 15,		 ac_unit_width/2, 0, 15,		 ac_unit_width/2, gs_shoulderHeight - gs_tolerance_left - (gs_tolerance_left) / tan((90+topAngle)/2), 15,		-ac_unit_width/2, ac_unit_height + gs_tolerance_left - (gs_tolerance_left) / tan((90-topAngle)/2), 15	del 1	endendifif lod3D = 0 then endxform	xform11, xform12, xform13, xform14,		xform21, xform22, xform23, xform24,		xform31, xform32, xform33, xform34muly -1addy WIDO_FRAME_THICKNESStemp = gs_frame_ovhg_left_outgs_frame_ovhg_left_out = gs_frame_ovhg_left_ings_frame_ovhg_left_in = temptemp = gs_frame_ovhg_right_outgs_frame_ovhg_right_out = gs_frame_ovhg_right_ings_frame_ovhg_right_in = temptemp = gs_frame_ovhg_top_ings_frame_ovhg_top_in = gs_frame_ovhg_top_outgs_frame_ovhg_top_out = temptemp = gs_frame_ovhg_bottom_ings_frame_ovhg_bottom_in = gs_frame_ovhg_bottom_outgs_frame_ovhg_bottom_out = tempif lod3D = 5 then	! Chinese	fr_sect_fill_type	= gs_fillShCover	fr_sect_fill_fg		= gs_penShCov_fg	fr_sect_fill_bg		= gs_penShCov_bgelse	fr_sect_fill_type	= gs_fillFr	fr_sect_fill_fg		= gs_penFr_fg	fr_sect_fill_bg		= gs_penFr_bgendifA = ac_unit_widthB = ac_unit_height! =============================================================================! Draw window frame and sash! =============================================================================rotx 90if gs_frame_pen_cont < 1 then gs_frame_pen_cont = SYMB_SECT_PENif gs_fillFr   < 1 then gs_fillFr   = SYMB_FILLif gs_penFr_bg < 1 then gs_penFr_bg = SYMB_FBGD_PENif gs_penFr_fg < 1 then gs_penFr_fg = SYMB_FILL_PEN! =============================================================================! Unit Hotspots! =============================================================================if bShowUnitHotspots then	unID=100	hotspot a/2, 0, 0, unID		:unID=unID+1	hotspot -a/2, 0, 0, unID	:unID=unID+1	hotspot a/2, 0, gs_frame_thk, unID		:unID=unID+1	hotspot -a/2, 0, gs_frame_thk, unID	:unID=unID+1	hotspot a/2, gs_shoulderHeight, gs_frame_thk, unID		:unID=unID+1	hotspot -a/2, b, 0, unID		:unID=unID+1	hotspot -a/2, b, gs_frame_thk, unIDendif! =============================================================================! Shoulder Hotspots! =============================================================================if	iWinTopDefinition = TOPDEFINITION_TOTALHEIGHT_SHOULDER |\	iWinTopDefinition = TOPDEFINITION_ANGLE_SHOULDER then	unID=1350	hotspot a/2, 0,					0, unID, gs_shoulderHeight, 1+128	:unID=unID+1	hotspot a/2, -1,				0, unID, gs_shoulderHeight, 3		:unID=unID+1	hotspot a/2, gs_shoulderHeight, 0, unID, gs_shoulderHeight, 2		:unID=unID+1	hotspot a/2, 0,					gs_frame_thk, unID, gs_shoulderHeight, 1+128	:unID=unID+1	hotspot a/2, -1,				gs_frame_thk, unID, gs_shoulderHeight, 3		:unID=unID+1	hotspot a/2, gs_shoulderHeight, gs_frame_thk, unID, gs_shoulderHeight, 2		:unID=unID+1else	hotspot a/2, gs_shoulderHeight, 0, 				1352	hotspot a/2, gs_shoulderHeight, gs_frame_thk,	1355		:unID=unID+1endif! =============================================================================! Inclination Angle from Top Hotspots ! =============================================================================if iWinTopDefinition = TOPDEFINITION_ANGLE_TOTALHEIGHT then	unID=1380	_actRadWidth = a/(2 * cos(topAngle))	hotspot a/2,	b,	0,	unID,	topAngle,	4	:unID=unID+1	hotspot -a/2,	b,	0,	unID,	topAngle,	6	:unID=unID+1	hotspot -a/2,	b,	1,	unID,	topAngle,	7	:unID=unID+1	hotspot -a/2 + _actRadWidth * cos(topAngle),			 b- _actRadWidth * sin(topAngle),	0,	unID,	topAngle,	5	:unID=unID+1	hotspot a/2,	b,	gs_frame_thk,	unID,	topAngle,	4	:unID=unID+1	hotspot -a/2,	b,	gs_frame_thk,	unID,	topAngle,	6	:unID=unID+1	hotspot -a/2,	b,	gs_frame_thk+1,	unID,	topAngle,	7	:unID=unID+1	hotspot -a/2 + _actRadWidth * cos(topAngle),			 b - _actRadWidth * sin(topAngle),	gs_frame_thk,	unID,	topAngle,	5	:unID=unID+1endif! =============================================================================! Inclination Angle from Shoulder Hotspots! =============================================================================if iWinTopDefinition = TOPDEFINITION_ANGLE_SHOULDER then	unID=1380	_actRadWidth = a/(2 * cos(topAngle))	hotspot -a/2,	gs_shoulderHeight,	0,	unID,	topAngle,	4	:unID=unID+1	hotspot a/2,	gs_shoulderHeight,	0,	unID,	topAngle,	6	:unID=unID+1	hotspot a/2,	gs_shoulderHeight,	1,	unID,	topAngle,	7	:unID=unID+1	hotspot a/2 - _actRadWidth * cos(topAngle),			 gs_shoulderHeight + _actRadWidth * sin(topAngle),	0,	unID,	topAngle,	5	:unID=unID+1	hotspot -a/2,	gs_shoulderHeight,	gs_frame_thk,	unID,	topAngle,	4	:unID=unID+1	hotspot a/2,	gs_shoulderHeight,	gs_frame_thk,	unID,	topAngle,	6	:unID=unID+1	hotspot a/2,	gs_shoulderHeight,	gs_frame_thk+1,	unID,	topAngle,	7	:unID=unID+1	hotspot a/2 - _actRadWidth * cos(topAngle),			 gs_shoulderHeight + _actRadWidth * sin(topAngle),	gs_frame_thk,	unID,	topAngle,	5	:unID=unID+1endif! =============================================================================! Draw window frame and sash! =============================================================================leftOvhg	=	max(gs_frame_ovhg_left_out,		gs_frame_ovhg_left_in)rightOvhg	=	max(gs_frame_ovhg_right_out,	gs_frame_ovhg_right_in)topOvhg		=	max(gs_frame_ovhg_top_out,		gs_frame_ovhg_top_in)bottomOvhg	=	max(gs_frame_ovhg_bottom_out,	gs_frame_ovhg_bottom_in)bbb = ac_wallhole_height - gs_tolerance_lower - gs_tolerance_upper / cos(topAngle) - (ac_unit_width/2 + gs_tolerance_left) * tan(topAngle)call "Trapezoid_window_frame" parameters all A = ac_unit_width,	B 							= bbb,	topAngle					= topAngle,	gs_SLight_w					= ac_unit_width/2,	frame_toler 				= gs_tolerance_left,	lod3D 						= lod3D,	leftOvhg					= leftOvhg,	rightOvhg					= rightOvhg,	topOvhg						= topOvhg,	bottomOvhg					= bottomOvhg,	sash_num					= 1,	gs_optype_m_01				= gs_optype_m_01,	gs_optype_m_02				= gs_optype_m_02,	iMullionStyle_01			= iMullionStyle_01,	gs_SashText_typ_num 		= gs_SashText_typ_num,	gs_frame_ovhg_left_out		= gs_frame_ovhg_left_out,	gs_frame_ovhg_right_out		= gs_frame_ovhg_right_out,	gs_frame_ovhg_left_in		= gs_frame_ovhg_left_in,	gs_frame_ovhg_right_in		= gs_frame_ovhg_right_in,	gs_fillFr					= fr_sect_fill_type,	gs_penFr_fg					= fr_sect_fill_fg,	gs_penFr_bg					= fr_sect_fill_bg! =============================================================================! Draw Casement! =============================================================================if lod3D = 5 then	! Chinese	sh_sect_fill_type	= gs_fillShCover	sh_sect_fill_fg		= gs_penShCov_fg	sh_sect_fill_bg		= gs_penShCov_bgelse	sh_sect_fill_type	= gs_fillSash	sh_sect_fill_fg		= gs_penSash_fg	sh_sect_fill_bg		= gs_penSash_bgendifif gs_UTrans then	sh_unID = 2000	add sashPosXArray[2][2], sashPosYArray[2][2], gs_frame_thk	call "Casement_rectangular" parameters	A = sashWidthArray[2][2],											B = sashHeightArray[2][2],			CasementID 						= CasementIDArray[2][2],			lod3D							= lod3D,			bEdwardianSash					= 0,			gs_rebate_width					= gs_rebate_width,			gs_rebate_depth					= gs_rebate_depth,			gs_sash_thk						= gs_sash_thk,			gs_sash_width					= gs_sash_width,			gs_frame_thk					= gs_frame_thk,			iMullionStyle_01				= iMullionStyle_01,			iMullionPosition				= iMullionPosition,			gs_horiz_div_height_01			= gs_horiz_div_height_01,			gw								= gw,			gth								= gth,			gs_glass_thk					= gs_glass_thk,			vgn_01							= vgn_01,			hgn_01							= hgn_01,			vgn2_01							= vgn2_01,			hgn2_01							= hgn2_01,			vergrid_01						= vergrid_01,			horgrid_01						= horgrid_01,			vergrid2_01						= vergrid2_01,			horgrid2_01						= horgrid2_01,			gs_glass_pen					= gs_glass_pen,			gs_glass_pen_cont				= gs_frame_pen_cont,			ghe								= 0,			isVentilationProfileInSash_01	= isVentilationProfileInSash_01,			isVentilationProfileInSash_02	= 0,			isVentilationProfileInSash_03	= 0,			isVentilationProfileInSash_04	= 0,			isVentilationProfileInSash_05	= 0,			isVentilationProfileInSash_06	= 0,			isVentilationProfileInSash_07	= 0,			isVentilationProfileInSash_08	= 0,			isVentilationProfileInSash_09	= 0,			isVentilationProfileInSash_10	= 0,			isVentilationProfileInSash_11	= 0,			openingAngle_01					= openingAngle_01,			openingAngle2_01				= openingAngle2_01,			openingLength_01				= openingLength_01,			openingLength2_01				= openingLength2_01,			gs_optype_m_01					= gs_optype_m_01,			gs_full_edit					= gs_full_edit,			gs_frame_pen					= gs_frame_pen,			gs_sash_pen						= gs_sash_pen,			gs_sash_mat						= gs_sash_mat,			gs_sash_mat2					= gs_sash_mat2,			gs_grill_mat					= gs_grill_mat,			gs_grill_mat2					= gs_grill_mat2,			gs_glass_mat					= gs_glass_mat,			gs_panel_mat					= gs_panel_mat,			gs_panel_mat2					= gs_panel_mat2,			gs_ventProfile_mat				= gs_ventProfile_mat,			gs_sash_pen_cont				= gs_frame_pen_cont,			gs_fillSash						= sh_sect_fill_type,			gs_penSash_bg					= sh_sect_fill_bg,			gs_penSash_fg					= sh_sect_fill_fg,			gs_frame_pen_cont				= gs_frame_pen_cont,			gs_ventProfile_fill				= gs_ventProfile_fill,			gs_ventProfile_pen_fg			= gs_ventProfile_pen_fg,			gs_ventProfile_pen_bg			= gs_ventProfile_pen_bg,			bOpeningDirectionInside			= WIDO_REVEAL_SIDE,			gs_SashText_typ_num				= gs_SashText_typ_num,			gs_cust_panel_01				= gs_cust_panel_01,			gs_cust_panel2_01				= gs_cust_panel2_01,!			gs_bMirr_cust_panel_01			= gs_bMirr_cust_panel_01,!			gs_bMirr_cust_panel2_01			= gs_bMirr_cust_panel2_01,			sh_unID							= sh_unID,			bOplines3d						= bOplines3d,			opLineType3dIn					= opLineType3dIn,			opLineType3dOut					= opLineType3dOut,			gs_opline_style_m				= gs_opline_style_m,			gs_opLinePen					= gs_opLinePen,			iLouverStyle					= iLouverStyle,			gs_louver_thk					= gs_louver_thk,			gs_louver_width					= gs_louver_width,			gs_louver_opening_angle			= gs_louver_opening_angle,			gs_ventSashLouver_mat			= gs_ventSashLouver_mat	del 1	sh_unID		= 2400	add sashPosXArray[1][2], sashPosYArray[1][2], gs_frame_thk	call "Casement_Trapezoid" parameters	A = sashWidthArray[1][2],											B = sashHeightArray[1][2],			topAngle						= topAngle,			CasementID						= 2,			lod3D							= lod3D,			gs_rebate_width					= gs_rebate_width,			gs_rebate_depth					= gs_rebate_depth,			gs_sash_thk						= gs_sash_thk,			gs_sash_width					= gs_sash_width,			gs_frame_thk					= gs_frame_thk,			gs_full_edit					= gs_full_edit,			iMullionStyle_02				= iMullionStyle_02,			iMullionPosition				= iMullionPosition,			gw								= gw,			gth								= gth,			gs_glass_thk					= gs_glass_thk,			vgn_02							= vgn_02,			hgn_02							= hgn_02,			gs_glass_pen					= gs_glass_pen,			gs_optype_m_02					= gs_optype_m_02,			openingAngle_02					= openingAngle_02,			openingAngle2_02				= openingAngle2_02,			gs_frame_pen					= gs_sash_pen,			gs_frame_mat					= gs_sash_mat2,			gs_frame_mat2					= gs_sash_mat,			gs_grill_mat					= gs_grill_mat,			gs_grill_mat2					= gs_grill_mat2,			gs_glass_mat					= gs_glass_mat,			gs_panel_mat					= gs_panel_mat,			gs_panel_mat2					= gs_panel_mat2,			gs_fillSash						= sh_sect_fill_type,			gs_penSash_bg					= sh_sect_fill_bg,			gs_penSash_fg					= sh_sect_fill_fg,			gs_frame_pen_cont				= gs_frame_pen_cont,			bOpeningDirectionInside			= WIDO_REVEAL_SIDE,			gs_SashText_typ_num				= gs_SashText_typ_num,			gs_cust_panel_02				= gs_cust_panel_02,			sh_unID							= sh_unID,			bOplines3d						= bOplines3d,			opLineType3dIn					= opLineType3dIn,			opLineType3dOut					= opLineType3dOut,			gs_opline_style_m				= gs_opline_style_m,			gs_opLinePen					= gs_opLinePen	del 1else	sh_unID = 2000	add sashPosXArray[2][2], sashPosYArray[2][2], gs_frame_thk	call "Casement_Trapezoid" parameters	A = sashWidthArray[2][2],											B = sashHeightArray[2][2],			topAngle						= topAngle,			CasementID						= 1,			lod3D							= lod3D,			gs_rebate_width					= gs_rebate_width,			gs_rebate_depth					= gs_rebate_depth,			gs_sash_thk						= gs_sash_thk,			gs_sash_width					= gs_sash_width,			gs_frame_thk					= gs_frame_thk,			gs_full_edit					= gs_full_edit,			iMullionStyle_01				= iMullionStyle_01,			iMullionPosition				= iMullionPosition,			gw								= gw,			gth								= gth,			gs_glass_thk					= gs_glass_thk,			vgn_01							= vgn_01,			hgn_01							= hgn_01,			gs_glass_pen					= gs_glass_pen,			gs_optype_m_01					= gs_optype_m_01,			openingAngle_01					= openingAngle_01,			openingAngle2_01				= openingAngle2_01,			gs_frame_pen					= gs_sash_pen,			gs_frame_mat					= gs_sash_mat2,			gs_frame_mat2					= gs_sash_mat,			gs_grill_mat					= gs_grill_mat,			gs_grill_mat2					= gs_grill_mat2,			gs_glass_mat					= gs_glass_mat,			gs_panel_mat					= gs_panel_mat,			gs_panel_mat2					= gs_panel_mat2,			gs_fillSash						= sh_sect_fill_type,			gs_penSash_bg					= sh_sect_fill_bg,			gs_penSash_fg					= sh_sect_fill_fg,			gs_frame_pen_cont				= gs_frame_pen_cont,			bOpeningDirectionInside			= WIDO_REVEAL_SIDE,			gs_SashText_typ_num				= gs_SashText_typ_num,			gs_cust_panel_01				= gs_cust_panel_01,			sh_unID							= sh_unID,			bOplines3d						= bOplines3d,			opLineType3dIn					= opLineType3dIn,			opLineType3dOut					= opLineType3dOut,			gs_opline_style_m				= gs_opline_style_m,			gs_opLinePen					= gs_opLinePenendif