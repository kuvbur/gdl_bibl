!------------------------
! Reinforcement
! 2012, Eptar Kft.
!------------------------
call "Элемент" parameters all
if stirrupSubType<>ststirrupsubtype[5] then HIDEPARAMETER "__sp0"
_actlength=0
_maxstirrupangle=150
if istirrupsubtype<>type_stirrup_normal then
	call "ironMinMax" parameters bcomplex=0,
								_pointcoords=stirruppointcoords,
								_arccenter=_arccenter,
								_arcpoints=stirruparcpoints,
								_arcangle=_arcangle,
								_radiusdistance=_radiusdistance,
								minpolyx=minpolyx,
								maxpolyx=maxpolyx,
								minpolyy=minpolyy,
								maxpolyy=maxpolyy,
	returned_parameters minpolyx,maxpolyx,minpolyy,maxpolyy,pminpolyx,pmaxpolyx,pminpolyy,pmaxpolyy
	centerx=minpolyx+(maxpolyx-minpolyx)/2
	centery=minpolyy+(maxpolyy-minpolyy)/2
else
	centerx=hoopx/2
	centery=hoopy/2
	minpolyx=0
	minpolyy=0
	maxpolyx=hoopx
	maxpolyy=hoopy
	pminpolyx=0
	pmaxpolyx=hoopx
	pminpolyy=0
	pmaxpolyy=hoopy
endif
if glob_context=1|glob_context=5 then
	call "ui_irontabcontrol" parameters controltype=1,
										ntabs=5-bsectionelevationcontext
										call "ironGlobal" parameters bweight=1,
										d=d,
										irontype=iron_type_stirrup,
										weight=weight,
										bislisting=bislisting,
										penironstirrup=penironstirrup,
										matstirrup=matstirrup,
										bcustom2d=bcustom2d,
										bcustom3d=bcustom3d,
	returned_parameters bfound,weight
	call "ironLabel" parameters isigntype=isigntype,
								signtype=signtype,
								stylefont=stylefont,
								heightfont=heightfont,
								penfont=penfont,
								bonlysign=bonlysign
endif

values "positio" stposition
values "iPosition" 1,2

if glob_modpar_name="positio" then
	iposition=1
	for i=1 to vardim1(stposition)
		if positio=stposition[i] then
			iposition=i
			i=vardim1(stposition)
		endif
	next i
	if iposition=pos_ver then
		bironvertical=1
		bironhorizontal=0
	else
		bironvertical=0
		bironhorizontal=1
	endif
	parameters iposition=iposition,
				bironvertical=bironvertical,
				bironhorizontal=bironhorizontal
else
	if glob_modpar_name="bIronVertical" |glob_modpar_name="bIronHorizontal" then
		if glob_modpar_name="bIronVertical" then
			if bironvertical then
				bironhorizontal=0
				iposition=pos_ver
			else
				bironhorizontal=1
				iposition=pos_hor
			endif
		else
			if bironhorizontal then
				bironvertical=0
				iposition=pos_hor
			else
				bironvertical=1
				iposition=pos_ver
			endif
		endif
		parameters positio=stposition[iposition],
					iposition=iposition,
					bironvertical=bironvertical,
					bironhorizontal=bironhorizontal
	else
		iposition=max(min(iposition,vardim1(stposition) ),1)
		if iposition=pos_ver then
			bironvertical=1
			bironhorizontal=0
		else
			bironvertical=0
			bironhorizontal=1
		endif
		parameters positio=stposition[iposition],
					iposition=iposition,
					bironvertical=bironvertical,
					bironhorizontal=bironhorizontal
	endif
endif

parameters d = diam_arm
values "n" range[1,]
values "startDist" range[0,]
values "endDist" range[0,]

if massiv_off=1 then
	parameters disthoops=0
	parameters fulllength=0
	parameters n=1
	lock "fullLength"
	lock "distHoops"
	lock "n"
else
	min_svet = 0.05
	if fulllength-disthoops*round_int(fulllength/disthoops)<min_svet then
		n=round_int(fulllength/disthoops)
	else
		n=round_int(fulllength/disthoops)+1
	endif
	parameters n=n
!	if iedittype=editby_dist_n then
!		fulllength=(n-1)*disthoops
!		parameters fulllength=fulllength
!		lock "fullLength"
!	else
!		if iedittype=editby_l_n then
!			disthoops=fulllength/(n-1)
!			parameters disthoops=disthoops
!			lock "distHoops"
!		else
!			n=round_int(fulllength/disthoops)+1
!			disthoops=fulllength/(n-1)
!			parameters n=n,disthoops=disthoops
!			lock "n"
!		endif
!	endif
endif

str_simv1 = "qwertyuiopasdfghjklzxcvbnm"
str_simv2 = "йцукенгшщзхъфывапролджэячсмитьбю"
str_simv3 = "1234567890"
str_simv = str_simv1 + str_simv2 + str_simv3
n = 0
dim irondata[1][]
dim vedel[]
vedel[1] = diam_arm ! 1 Диаметр
control_sum = 0 : var = marka : gosub "addvar_ch"
vedel[2] = control_sum ! 2 Марка
control_sum = 0
vedel[3] = iStirrupSubType/1000 ! 3 Тип детали
vedel[4] = bClosedPolygon/1000 ! 4 Закрытый
vedel[5] = bStirrupBack1/1000 ! 5 Крюк 1
vedel[6] = stirrupAng1/1000 ! 6 Угол крюка 1
vedel[7] = bStirrupBack2/1000 ! 7 Крюк 2
vedel[8] = stirrupAng2/1000 ! 8 Угол крюка 2
vedel[9] = jointLength ! 9 Длина крюка
vedel[10] = bendRadius ! 10 Радиус гиба

irondata[1][1]=d
startidx=2
np=0
if istirrupsubtype<>type_stirrup_normal then istirrupsubtype=type_stirrup_polygon
if istirrupsubtype=type_stirrup_normal then
	irondata[1][startidx+1]=hoopy
	irondata[1][startidx]=hoopx 
	vedel[13] = hoopx
	vedel[14] = hoopy
	_actlength=2*hoopx+2*hoopy+2*jointlength
	nved = 2
endif
if istirrupsubtype=type_stirrup_polygon then
	np=min(nstirruppoint,vardim1(stirruppointcoords) )
	i = 12
	for in=1 to np
		i = i + 1 : vedel[i] = stirruppointcoords[in][1]
		i = i + 1 : vedel[i] = stirruppointcoords[in][2]
		i = i + 1 : vedel[i] = stirruppointcoords[in][3]
		i = i + 1 : vedel[i] = stirruparcpoints[in]
	next in
	nved = np
	for in=1 to min(np-not(bclosedpolygon),vardim1(_sidelength) )
		_actlength=_actlength+_sidelength[in]
	next in
	_actlength=_actlength+bstirrupback1*jointlength+bstirrupback2*jointlength
endif
vedel[11] = _actlength ! 11 Длина
vedel[12] = i/1000
parameters vedel = vedel

if glob_context=5|glob_context=1 then
	if bendradius<maxrad then parameters bendradius = maxrad
	if stirrupang1>_maxstirrupangle then
		stirrupang1=_maxstirrupangle
		parameters stirrupang1=stirrupang1
	endif
	if stirrupang1<-_maxstirrupangle then
		stirrupang1=-_maxstirrupangle
		parameters stirrupang1=stirrupang1
	endif
	if stirrupang2>_maxstirrupangle then
		stirrupang2=_maxstirrupangle
		parameters stirrupang2=stirrupang2
	endif
	if stirrupang2<-_maxstirrupangle then
		stirrupang2=-_maxstirrupangle
		parameters stirrupang2=stirrupang2
	endif
endif

parameters dlin_st_model = _actlength
parameters kol_vo_model = n

parameters rebarDist = maxrad
parameters rebarDistDiag = rebardist*sqr(2)

values "strEditType" stedittypes
values "iEditType" editby_dist_n,editby_l_n,editby_dist_l
if glob_modpar_name="strEditType" then
	iedittype=editby_dist_n
	if stredittype=stedittypes[2] then iedittype=editby_l_n
	if stredittype=stedittypes[3] then iedittype=editby_dist_l
	parameters iedittype=iedittype
else
	stredittype=stedittypes[1]
	if iedittype=editby_l_n then stredittype=stedittypes[2]
	if iedittype=editby_dist_l then stredittype=stedittypes[3]
	parameters stredittype=stredittype
endif

values "distHoops" range(d,)
parameters shag_ved = distHoops
values "fullLength" range(n*d,)
values "hoopX" range[10*d,)
values "hoopY" range[10*d,)
values "hoopCircle" range[10*d,)
values "nStirrupPoint" range[2+bclosedpolygon,]
!if not(benableback1) then
!	hideparameter "bStirrupBack1"
!	lock "bStirrupBack1"
!endif
!if not(benableback2) then
!	hideparameter "bStirrupBack2"
!	lock "bStirrupBack2"
!endif
!if not(benableang1)|bclosedpolygon|not(bstirrupback1) then
!	hideparameter "stirrupAng1"
!	lock "stirrupAng1"
!endif
!if not(benableang2)|bclosedpolygon|not(bstirrupback2) then
!	hideparameter "stirrupAng2"
!	lock "stirrupAng2"
!endif
if not(benableclose) then
	hideparameter "bClosedPolygon","iClosedPolygon"
	lock "bClosedPolygon","iClosedPolygon"
else
	values "iClosedPolygon" 0,1
	if glob_modpar_name="iClosedPolygon" then
		bclosedpolygon=iclosedpolygon
		parameters bclosedpolygon=bclosedpolygon
	else
		iclosedpolygon=bclosedpolygon
		parameters iclosedpolygon=iclosedpolygon
	endif
endif
if not(benablex) then
	hideparameter "hoopX"
	lock "hoopX"
endif
if not(benabley) then
	hideparameter "hoopY"
	lock "hoopY"
endif
if not(benablecircle) then
	hideparameter "hoopCircle","hoopCircle2"
	lock "hoopCircle","hoopCircle2"
else
	if glob_modpar_name="hoopCircle2" then
		hoopcircle=hoopcircle2*2
		parameters hoopcircle=hoopcircle
	else
		hoopcircle2=hoopcircle/2
		parameters hoopcircle2=hoopcircle2
	endif
endif
if not(benablepolynum) then
	hideparameter "nStirrupPoint"
	lock "nStirrupPoint"
endif
if not(benablepolyedit) then
	hideparameter "bEnableEdit"
	lock "bEnableEdit"
else
	gosub "polyCalc"
endif
if not(benabledist) then
	hideparameter "rebarDist"
	lock "rebarDist"
endif
if iposition=pos_hor then
	hideparameter "stirrupOffsetX","stirrupOffsetY"
	lock "stirrupOffsetX","stirrupOffsetY"
endif
if(iposition=pos_ver&not(bshoweditview)&not(bsectionelevationcontext) ) then
	hideparameter "bShowDimText"
	lock "bShowDimText"
endif
if glob_modpar_name="posTextFloorPlan" then
	ironx=maxpolyx-minpolyx
	irony=maxpolyy-minpolyy
	if iposition=pos_ver then
		if postextfloorplan[1][1]<-fulllength/2 then postextfloorplan[1][1]=-fulllength/2
		if postextfloorplan[1][1]>fulllength/2 then postextfloorplan[1][1]=fulllength/2
		if postextfloorplan[1][2]<-ironx/2 then postextfloorplan[1][2]=-ironx/2
		if postextfloorplan[1][2]>ironx/2 then postextfloorplan[1][2]=ironx/2
	else
		if bshoweditview then
			if postextfloorplan[1][2]<-ironx/2 then postextfloorplan[1][2]=-ironx/2
			if postextfloorplan[1][2]>ironx/2 then postextfloorplan[1][2]=ironx/2
			if postextfloorplan[1][1]<-fulllength/2 then postextfloorplan[1][1]=-fulllength/2
			if postextfloorplan[1][1]>fulllength/2 then postextfloorplan[1][1]=fulllength/2
		else
			if postextfloorplan[1][1]<-ironx then postextfloorplan[1][1]=-ironx
			if postextfloorplan[1][1]>0 then postextfloorplan[1][1]=0
			if postextfloorplan[1][2]<-irony/2 then postextfloorplan[1][2]=-irony/2
			if postextfloorplan[1][2]>irony/2 then postextfloorplan[1][2]=irony/2
		endif
	endif
	parameters postextfloorplan=postextfloorplan
endif
if glob_context=5|glob_context=1 then
	for i=1 to 255
		put i
	next i
	values "penIronStirrup" use(nsp)
	values "penFont" get(nsp)
endif
values "gs_resol" range[6,]
if sterzh = 0 then parameters idetlevel3d=2
if sterzh = 1 then parameters idetlevel3d=1

parameters homedb=homecontext
if bsectionelevationcontext then
	hideparameter "bIsListing",
	"gs_3D_representation",
	"detLevel3D",
	"iDetLevel3D",
	"gs_shadow",
	"gs_resol",
	"bCustom3D",
	"matStirrup",
	"bShow3DHotspots"
	lock "bIsListing",
	"gs_3D_representation",
	"detLevel3D",
	"iDetLevel3D",
	"gs_shadow",
	"gs_resol",
	"bCustom3D",
	"matStirrup",
	"bShow3DHotspots"
	if glob_modpar_name="bShowEditView" then
		bshowsection=1-bshoweditview
		parameters bshowsection=bshowsection
	else
		bshoweditview=1-bshowsection
		parameters bshoweditview=bshoweditview
	endif
	if not(bshowsection) then
		hideparameter "bShowDimText"
		lock "bShowDimText"
	endif
endif
parameters ironversion=version
dim symbpos[4][3]
if iposition=pos_hor then
	symbpos[1][1]=symb_pos_x+cos(symb_rotangle)*pminpolyx*imirrored-sin(symb_rotangle)*pminpolyy
	symbpos[1][2]=symb_pos_y+sin(symb_rotangle)*pminpolyx*imirrored+cos(symb_rotangle)*pminpolyy
	symbpos[1][3]=symb_pos_z
	symbpos[2][1]=symb_pos_x+cos(symb_rotangle)*pmaxpolyx*imirrored-sin(symb_rotangle)*pminpolyy
	symbpos[2][2]=symb_pos_y+sin(symb_rotangle)*pmaxpolyx*imirrored+cos(symb_rotangle)*pminpolyy
	symbpos[2][3]=symb_pos_z
	symbpos[3][1]=symb_pos_x+cos(symb_rotangle)*pmaxpolyx*imirrored-sin(symb_rotangle)*pmaxpolyy
	symbpos[3][2]=symb_pos_y+sin(symb_rotangle)*pmaxpolyx*imirrored+cos(symb_rotangle)*pmaxpolyy
	symbpos[3][3]=symb_pos_z
	symbpos[4][1]=symb_pos_x+cos(symb_rotangle)*pminpolyx*imirrored-sin(symb_rotangle)*pmaxpolyy
	symbpos[4][2]=symb_pos_y+sin(symb_rotangle)*pminpolyx*imirrored+cos(symb_rotangle)*pmaxpolyy
	symbpos[4][3]=symb_pos_z
else
	tlength=startdist+fulllength+enddist
	symbpos[1][1]=symb_pos_x+cos(symb_rotangle)*0*imirrored-sin(symb_rotangle)*pminpolyx
	symbpos[1][2]=symb_pos_y+sin(symb_rotangle)*0*imirrored+cos(symb_rotangle)*pminpolyx
	symbpos[1][3]=symb_pos_z-pminpolyy
	symbpos[2][1]=symb_pos_x+cos(symb_rotangle)*0*imirrored-sin(symb_rotangle)*pmaxpolyx
	symbpos[2][2]=symb_pos_y+sin(symb_rotangle)*0*imirrored+cos(symb_rotangle)*pmaxpolyx
	symbpos[2][3]=symb_pos_z-pminpolyy
	symbpos[3][1]=symb_pos_x+cos(symb_rotangle)*tlength*imirrored-sin(symb_rotangle)*pmaxpolyx
	symbpos[3][2]=symb_pos_y+sin(symb_rotangle)*tlength*imirrored+cos(symb_rotangle)*pmaxpolyx
	symbpos[3][3]=symb_pos_z-pminpolyy
	symbpos[4][1]=symb_pos_x+cos(symb_rotangle)*tlength*imirrored-sin(symb_rotangle)*pminpolyx
	symbpos[4][2]=symb_pos_y+sin(symb_rotangle)*tlength*imirrored+cos(symb_rotangle)*pminpolyx
	symbpos[4][3]=symb_pos_z-pminpolyy
endif
parameters symbpos=symbpos
parameters irondata=irondata
dim ironextradata[1][10]
ironextradata[1][10]=iposition
ironextradata[1][9]=0
ironextradata[1][8]=jointlength
ironextradata[1][7]=bendradius
ironextradata[1][6]=_actlength
ironextradata[1][5]=disthoops
ironextradata[1][4]=enddist
ironextradata[1][3]=startdist
ironextradata[1][2]=n
ironextradata[1][1]=fulllength
parameters ironextradata=ironextradata
dim irontype[1][4]
irontype[1][1]=iron_type_stirrup
irontype[1][2]=istirrupsubtype
irontype[1][3]=vardim2(irondata)
irontype[1][4]=(istirrupsubtype=type_stirrup_polygon)*np
parameters irontype=irontype
dim ironlistingdata[1][5]
ironlistingdata[1][1]=n
ironlistingdata[1][2]=_actlength
ironlistingdata[1][3]=_actlength
ironlistingdata[1][4]=_actlength*n
ironlistingdata[1][5]=ironlistingdata[1][4]*weight
parameters ironlistingdata=ironlistingdata
if iposition=pos_ver then
	posx=fulllength/2+startdist+postextfloorplan[1][1]
	posy=postextfloorplan[1][2]
else
	posx=hoopx+postextfloorplan[1][1]
	posy=hoopy/2+postextfloorplan[1][2]
endif
labelorigo[1][1]=posx
labelorigo[1][2]=posy
parameters labelorigo=labelorigo,labelmirrored=imirrored
call "Элемент" parameters all
end
"polyCalc":
if glob_modpar_name="stirrupPrevCoords" then
	movednumber=0
	for i=1 to _nstirruppoint
		if abs(stirruppointcoords[i][1]-stirrupprevcoords[i][1])>eps|abs(stirruppointcoords[i][2]-stirrupprevcoords[i][2])>eps then
			movednumber=i
			i=_nstirruppoint
		endif
	next i
	removenumber=0
	if movednumber>0 then
		for i=1 to _nstirruppoint
			if i<>movednumber then
				if abs(stirruppointcoords[i][1]-stirrupprevcoords[movednumber][1])<eps&abs(stirruppointcoords[i][2]-stirrupprevcoords[movednumber][2])<eps then
					removenumber=i
					i=_nstirruppoint
				endif
			endif
		next i
		if removenumber>0 then
			dim _stirruppointcoords[][3]
			dim _stirruparcpoints[]
			bvalid=1
			nremovedpoint=removenumber-movednumber
			nremovedpoint=abs(nremovedpoint)
			if movednumber<removenumber then
				for i=movednumber to 1 step-1
					_stirruppointcoords[i][1]=stirrupprevcoords[i][1]
					_stirruppointcoords[i][2]=stirrupprevcoords[i][2]
					_stirruppointcoords[i][3]=stirrupprevcoords[i][3]
					_stirruparcpoints[i]=stirruparcpoints[i]
				next i
				for i=_nstirruppoint to removenumber+1 step-1
					_stirruppointcoords[i-nremovedpoint][1]=stirrupprevcoords[i][1]
					_stirruppointcoords[i-nremovedpoint][2]=stirrupprevcoords[i][2]
					_stirruppointcoords[i-nremovedpoint][3]=stirrupprevcoords[i][3]
					_stirruparcpoints[i-nremovedpoint-1]=stirruparcpoints[i-1]
				next i
			else
				if _nstirruppoint-nremovedpoint<movednumber then bvalid=0
				for i=_nstirruppoint to movednumber+1 step-1
					_stirruppointcoords[i-nremovedpoint][1]=stirrupprevcoords[i][1]
					_stirruppointcoords[i-nremovedpoint][2]=stirrupprevcoords[i][2]
					_stirruppointcoords[i-nremovedpoint][3]=stirrupprevcoords[i][3]
					_stirruparcpoints[i-nremovedpoint]=stirruparcpoints[i]
				next i
				for i=removenumber to 1 step-1
					_stirruppointcoords[i][1]=stirrupprevcoords[i][1]
					_stirruppointcoords[i][2]=stirrupprevcoords[i][2]
					_stirruppointcoords[i][3]=stirrupprevcoords[i][3]
					_stirruparcpoints[i]=stirruparcpoints[i]
				next i
			endif
			dim stirruppointcoords[][3]
			dim stirruparcpoints[]
			_nstirruppoint=vardim1(_stirruppointcoords)
			for i=_nstirruppoint to 1 step-1
				stirruppointcoords[i][1]=_stirruppointcoords[i][1]
				stirruppointcoords[i][2]=_stirruppointcoords[i][2]
				stirruppointcoords[i][3]=_stirruppointcoords[i][3]
				stirruparcpoints[i]=_stirruparcpoints[i]
			next i
			nstirruppoint=_nstirruppoint
			parameters nstirruppoint=nstirruppoint,
			stirruppointcoords=stirruppointcoords,
			stirruparcpoints=stirruparcpoints
			if bvalid then
				dim stirrupprevcoords[][3]
				stirrupprevcoords=stirruppointcoords
				parameters stirrupprevcoords=stirrupprevcoords
			endif
		else
			dim stirruppointcoords[][3]
			stirruppointcoords=stirrupprevcoords
			parameters stirruppointcoords=stirruppointcoords
		endif
	endif
else
	dim stirrupprevcoords[][3]
	stirrupprevcoords=stirruppointcoords
	parameters stirrupprevcoords=stirrupprevcoords
endif
if nstirruppoint<>vardim1(stirruppointcoords)|vardim1(stirruppointcoords)<2 then
	_nstirruppoint=vardim1(stirruppointcoords)
	dim _stirruppointcoords[][3]
	dim _stirruparcpoints[]
	if nstirruppoint>_nstirruppoint then
		for i=_nstirruppoint to 1 step-1
			if i<_nstirruppoint then
				_stirruparcpoints[i]=stirruparcpoints[i]
			endif
			_stirruppointcoords[i][1]=stirruppointcoords[i][1]
			_stirruppointcoords[i][2]=stirruppointcoords[i][2]
			_stirruppointcoords[i][3]=stirruppointcoords[i][3]
		next i
		if _nstirruppoint>=2 then
			tempdeltax=stirruppointcoords[_nstirruppoint][1]-stirruppointcoords[_nstirruppoint-1][1]
			tempdeltay=stirruppointcoords[_nstirruppoint][2]-stirruppointcoords[_nstirruppoint-1][2]
			if abs(tempdeltax)<eps then
				if tempdeltay>0 then
					lastangle=270
				else
					lastangle=90
				endif
			else
				lastangle=atn(tempdeltay/tempdeltax)
				if tempdeltax>0 then lastangle=lastangle+180
			endif
		else
			lastangle=0
		endif
		for i=_nstirruppoint+1 to nstirruppoint
			_stirruparcpoints[i]=0.00
			_stirruppointcoords[i][1]=stirruppointcoords[_nstirruppoint][1]-(i-_nstirruppoint)*newedgelength*cos(lastangle)
			_stirruppointcoords[i][2]=stirruppointcoords[_nstirruppoint][2]-(i-_nstirruppoint)*newedgelength*sin(lastangle)
			_stirruppointcoords[i][3]=0
		next i
	else
		for i=nstirruppoint to 1 step-1
			_stirruparcpoints[i]=stirruparcpoints[i]
			_stirruppointcoords[i][1]=stirruppointcoords[i][1]
			_stirruppointcoords[i][2]=stirruppointcoords[i][2]
			_stirruppointcoords[i][3]=stirruppointcoords[i][3]
		next i
	endif
	dim stirruppointcoords[][3]
	dim stirruparcpoints[]
	stirruppointcoords=_stirruppointcoords
	stirruparcpoints=_stirruparcpoints
	parameters stirruppointcoords=stirruppointcoords,stirruparcpoints=stirruparcpoints
endif
if glob_modpar_name="stirrupNewPoint" &benableedit*benablepolyedit then
	insertionnumber=0
	for i=1 to _nstirruppoint
		if abs(stirrupnewpoint[i][1]-stirrupprevpoint[i][1])>eps|abs(stirrupnewpoint[i][2]-stirrupprevpoint[i][2])>eps then
			insertionnumber=i
			i=_nstirruppoint
		endif
	next i
	if insertionnumber>eps then
		dim _stirruppointcoords[][3]
		dim _stirruparcpoints[]
		for i=insertionnumber to 1 step-1
			_stirruppointcoords[i][1]=stirruppointcoords[i][1]
			_stirruppointcoords[i][2]=stirruppointcoords[i][2]
			_stirruppointcoords[i][3]=stirruppointcoords[i][3]
			_stirruparcpoints[i]=stirruparcpoints[i]
		next i
		_stirruppointcoords[insertionnumber+1][1]=stirrupnewpoint[insertionnumber][1]
		_stirruppointcoords[insertionnumber+1][2]=stirrupnewpoint[insertionnumber][2]
		_stirruppointcoords[insertionnumber+1][3]=0
		_stirruparcpoints[insertionnumber+1]=0
		for i=_nstirruppoint to insertionnumber+1 step-1
			_stirruppointcoords[i+1][1]=stirruppointcoords[i][1]
			_stirruppointcoords[i+1][2]=stirruppointcoords[i][2]
			_stirruppointcoords[i+1][3]=stirruppointcoords[i][3]
			_stirruparcpoints[i+1]=stirruparcpoints[i]
		next i
		dim stirruppointcoords[][3]
		dim stirruparcpoints[]
		for i=_nstirruppoint+1 to 1 step-1
			stirruppointcoords[i][1]=_stirruppointcoords[i][1]
			stirruppointcoords[i][2]=_stirruppointcoords[i][2]
			stirruppointcoords[i][3]=_stirruppointcoords[i][3]
			stirruparcpoints[i]=_stirruparcpoints[i]
		next i
		_nstirruppoint=_nstirruppoint+1
		nstirruppoint=_nstirruppoint
		parameters nstirruppoint=nstirruppoint,
		stirruppointcoords=stirruppointcoords,
		stirruparcpoints=stirruparcpoints
		gosub "NewPointsCalculation"
		for i=1 to vardim1(_newironpointhot)
			if i<>insertionnumber then
				stirrupnewpoint[i][1]=_newironpointhot[i][1]
				stirrupnewpoint[i][2]=_newironpointhot[i][2]
			endif
		next i
		parameters stirrupnewpoint=stirrupnewpoint,
		stirrupprevpoint=stirrupnewpoint
	endif
else
	dim stirrupnewpoint[][2]
	dim stirrupprevpoint[][2]
	for i=vardim1(_newironpointhot) to 1 step-1
		stirrupnewpoint[i][1]=_newironpointhot[i][1]
		stirrupnewpoint[i][2]=_newironpointhot[i][2]
	next i
	parameters stirrupnewpoint=stirrupnewpoint,
	stirrupprevpoint=stirrupnewpoint
endif
return

"addvar_ch":
	if vartype(var) = 1 then var = str("%.0",var)
	hash = 0
	for i = 1 to strlen(var)
		simv = STRSUB (var, i, 1)
		n = STRSTR (str_simv, simv)
		hash = hash + n
	next i
	control_sum = control_sum+hash
return
