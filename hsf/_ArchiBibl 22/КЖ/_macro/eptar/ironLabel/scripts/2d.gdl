!------------------------
! Reinforcement
! 2012, Éptár Kft.
!------------------------
if isigntype=sign_type_none then end
line_type 1
pen penfont
unid=unidstart
ntrans=0
if bsimplelabel then
line2 labelcorners[1][1],labelcorners[1][2],labelcorners[2][1],labelcorners[2][2]
labelcenterx=(labelcorners[2][1]-labelcorners[1][1])/2+labelcorners[1][1]
labelcentery=(labelcorners[2][2]-labelcorners[1][2])/2+labelcorners[1][2]
if abs(labelcorners[2][1]-labelcorners[1][1])>eps then
startangle=atn((labelcorners[2][2]-labelcorners[1][2])/(labelcorners[2][1]-labelcorners[1][1]) )
else
if labelcorners[2][1]>labelcorners[1][1] then
startangle=90
else
startangle=-90
endif
endif
ntrans=2
add2 labelcenterx,labelcentery
rot2 startangle
endif
readangle=90
angleviewrot=0
qq=request( "View_Rotangle","",angleviewrot)
totalrotate=(labelangle*not(bsimplelabel)+symb_rotangle*labelmirrored+startangle) mod 360
if totalrotate<-eps then totalrotate=totalrotate+360
textrotate=180*(totalrotate>(readangle+eps*labelmirrored)&totalrotate<(readangle+180+eps*labelmirrored) )
define style "styleID" stylefont,heightfont,5,1
style "styleID"
_idl=max(stw(strid),stw( "PP" ) )*paper_to_model
_idh=0
qq=request( "Height_of_style","styleID",_h,_descent,_leading)
if qq then _idh=_h*paper_to_model
_idrad=sqr(_idh^2+_idl^2)/2
if isigntype=sign_type_rect then
_idl=_idl+_idh*0.1
_idh=_idh*1.1
_idrad=_idl/2
endif
if not(bonlysign)|bsimplelabel then
if abs(textrotate)<eps then
brot=0
ianchor=7
else
brot=1
ianchor=9
endif
define style "styleText" stylefont,heightfont,ianchor,0
style "styleText"
if not(bonlysign) then
_textl1=stw(labeltext1)*paper_to_model
_textl2=stw(labeltext2)*paper_to_model
_textl=max(_textl1,_textl2)
_spacel=stw( " " )*paper_to_model
else
_textl=0
_spacel=0
endif
_texth=0
qq=request( "Height_of_style","styleText",_h,_descent,_leading)
if qq then _texth=_h*paper_to_model
_totl=_idrad+_spacel+_textl
else
_totl=_idrad
endif
if not(bsimplelabel) then
hotspot2 0,labelpos[1][2],unid,labelpos[1][1],1+128:unid=unid+1
hotspot2 labelpos[1][1],labelpos[1][2],unid,labelpos[1][1],2:unid=unid+1
hotspot2-1,labelpos[1][2],unid,labelpos[1][1],3:unid=unid+1
hotspot2 labelpos[1][1],0,unid,labelpos[1][2],1+128:unid=unid+1
hotspot2 labelpos[1][1],labelpos[1][2],unid,labelpos[1][2],2:unid=unid+1
hotspot2 labelpos[1][1],-1,unid,labelpos[1][2],3:unid=unid+1
if isigntype=sign_type_round then
vx=labelpos[1][1]
vy=labelpos[1][2]
gosub "directionAngle"
line2 0,0,labelpos[1][1]-cos(angle)*_idrad,labelpos[1][2]-sin(angle)*_idrad
else
borderidx=0
x11=0
y11=0
x12=labelpos[1][1]
y12=labelpos[1][2]
dim p[5][2]
p[1][1]=-_idl/2
p[1][2]=-_idh/2
p[2][1]=_idl/2
p[2][2]=-_idh/2
p[3][1]=_idl/2
p[3][2]=_idh/2
p[4][1]=-_idl/2
p[4][2]=_idh/2
p[5][1]=-_idl/2
p[5][2]=-_idh/2
dim an[4][2]
an[1][1]=270
an[1][2]=_idh/2
an[2][1]=0
an[2][2]=_idl/2
an[3][1]=90
an[3][2]=_idh/2
an[4][1]=180
an[4][2]=_idl/2
for i=1 to 4
x21=labelpos[1][1]+p[i][1]*cos(labelangle)-p[i][2]*sin(labelangle)
y21=labelpos[1][2]+p[i][1]*sin(labelangle)+p[i][2]*cos(labelangle)
x22=labelpos[1][1]+p[i+1][1]*cos(labelangle)-p[i+1][2]*sin(labelangle)
y22=labelpos[1][2]+p[i+1][1]*sin(labelangle)+p[i+1][2]*cos(labelangle)
gosub "intersection_Segment_Segment"
if state=3 then
borderidx=i
i=4
endif
next i
if borderidx then
line2 0,0,labelpos[1][1]+cos(an[borderidx][1]+labelangle)*an[borderidx][2],labelpos[1][2]+sin(an[borderidx][1]+labelangle)*an[borderidx][2]
endif
endif
add2 labelpos[1][1],labelpos[1][2]
hotspot2 0,0,unid,labelangle,6:unid=unid+1
hotspot2 _totl,0,unid,labelangle,4+128:unid=unid+1
hotspot2 _totl*cos(labelangle),_totl*sin(labelangle),unid,labelangle,5:unid=unid+1
rot2 labelangle
else
add2 0,_texth*labelmirrored
hotspot2 0,simplelabelpos[1][2],unid,simplelabelpos[1][1],1+128:unid=unid+1
hotspot2 simplelabelpos[1][1],simplelabelpos[1][2],unid,simplelabelpos[1][1],2:unid=unid+1
hotspot2-1,simplelabelpos[1][2],unid,simplelabelpos[1][1],3:unid=unid+1
hotspot2 simplelabelpos[1][1],0,unid,simplelabelpos[1][2],1+128:unid=unid+1
hotspot2 simplelabelpos[1][1],simplelabelpos[1][2],unid,simplelabelpos[1][2],2:unid=unid+1
hotspot2 simplelabelpos[1][1],-1,unid,simplelabelpos[1][2],3:unid=unid+1
add2 simplelabelpos[1][1],simplelabelpos[1][2]
endif
if isigntype=sign_type_round then
if(_idrad>eps) then
circle2 0,0,_idrad
endif
else
if _idh>eps&_idl>eps then
rect2-_idl/2,-_idh/2,_idl/2,_idh/2
endif
endif
rot2 textrotate
style "styleID"
text2 0,0,strid
del 1
if _textl>eps&not(bonlysign) then
style "styleText"
add2 _idrad+_spacel,0
if glob_context>20&glob_context<30 then
rect2 0,-_texth,_textl,_texth
else
rot2 textrotate
text2 0,0,labeltext1
text2 0,-_texth,labeltext2
del 1
endif
del 1
endif
del 1+ntrans
end
"intersection_Line_Line":
v1x=x11-x12
v2x=x21-x22
v1y=y11-y12
v2y=y21-y22
llidiv=v1x*v2y-v1y*v2x
temp1=x11*y12-y11*x12
temp2=x21*y22-y21*x22
if abs(llidiv)>eps then
tempx=temp1*v2x-v1x*temp2
tempy=temp1*v2y-v1y*temp2
state=1
cx=(tempx/llidiv)
cy=(tempy/llidiv)
else
cx=0
cy=0
if abs(abs(temp1)-abs(temp2) )<eps then
state=-1
else
state=0
endif
endif
return
"intersection_Segment_Segment":
gosub "intersection_Line_Line"
if state then
state=0
if abs(x11-x12)<eps then
if(y11-eps<=cy&cy<=y12+eps)|(y11+eps>=cy&cy>=y12-eps) then state=1
else
if(x11-eps<=cx&cx<=x12+eps)|(x11+eps>=cx&cx>=x12-eps) then state=1
endif
if abs(x21-x22)<eps then
if(y21-eps<=cy&cy<=y22+eps)|(y21+eps>=cy&cy>=y22-eps) then state=state+2
else
if(x21-eps<=cx&cx<=x22+eps)|(x21+eps>=cx&cx>=x22-eps) then state=state+2
endif
if state=0 then state=-1
endif
return
"directionAngle":
if abs(vx)<eps&abs(vy)<eps then
angle=0
return
endif
if abs(vx)<eps then
if vy>0 then
angle=90
else
angle=270
endif
else
angle=atn(vy/vx)
if vx>=0 then
if angle<0 then
angle=angle+360
endif
else
angle=180+angle
endif
endif
return
