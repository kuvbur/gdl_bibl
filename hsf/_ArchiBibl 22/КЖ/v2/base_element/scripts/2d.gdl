PAPER_TO_MODEL = GLOB_SCALE / 1000if GLOB_PREVIEW_MODE<>0 or GLOB_FEEDBACK_MODE=1 then show_2d_hotspot = 0gosub "set_2d"if not(is_call) then	hotspot2 0,0,0	hotspot2 A,0,0	hotspot2 0,B,0	hotspot2 A,B,0endif!hotspot2 0, 0, unID_arm : unID_arm = unID_arm + 1!hotspot2 0, 0, unID_el : unID_el = unID_el + 1if show_2d_hotspot then	if arm_array_1_dir>0 then add2 sx_1, sy_1	if arm_array_2_dir>0 then add2 sx_2, sy_2	add2 sx, sy	hotspot2 ex+ex_1+ex_2, ey+ey_1+ey_2, unID_el : unID_el = unID_el + 1	hotspot2 ex, ey+ey_1+ey_2, unID_el : unID_el = unID_el + 1	hotspot2 ex+ex_1+ex_2, ey, unID_el : unID_el = unID_el + 1	hotspot2 ex_1+ex_2, ey+ey_1+ey_2, unID_el : unID_el = unID_el + 1	hotspot2 ex+ex_1+ex_2, ey_1+ey_2, unID_el : unID_el = unID_el + 1	hotspot2 ex_1+ex_2, ey_1+ey_2, unID_el : unID_el = unID_el + 1	hotspot2 0, 0, unID_el : unID_el = unID_el + 1	del 1	if arm_array_1_dir>0 then del 1	if arm_array_2_dir>0 then del 1endifif show_type_2d=SHOW_GOST and arm_direction<>DIR_Z and ((arm_array_1_dir>0 and arm_array_1_dir<>DIR_Z) or (arm_array_2_dir>0 and arm_array_2_dir<>DIR_Z)) then	if arm_array_1_dir>0 then add2 sx_1, sy_1	if arm_array_2_dir>0 then add2 sx_2, sy_2	add2 sx, sy	put 0, 0, 1+32	put ex+ex_1+ex_2, 0, 1+32	put ex+ex_1+ex_2, ey+ey_1+ey_2, 1+32	put 0, ey+ey_1+ey_2, 1+32	fstr_vin = arm_pos + " " + str("%.0mm", arm_dlin_st)	sstr_vin = "d" + str("%.0mm", arm_diam) + arm_class + " шаг " + str("%.0mm", arm_step)	call "macro_vin" parameters all, inx_vin = arm_inx, fstr_vin = fstr_vin, sstr_vin = sstr_vin, use_hotspot = 0		circle2 coord_vin[arm_inx][1], coord_vin[arm_inx][2], 0.5 * PAPER_TO_MODEL		!Линия от-до	sx_zone = coord_vin[arm_inx][1]*(ex>EPS)	sy_zone = coord_vin[arm_inx][2]*(ey>EPS)	ex_zone = (ex+ex_1+ex_2)*(ex<EPS)+coord_vin[arm_inx][1]*(ex>EPS)	ey_zone = (ey+ey_1+ey_2)*(ey<EPS)+coord_vin[arm_inx][2]*(ey>EPS)	pen gs_cont_pen	line2 sx_zone, sy_zone, coord_vin[arm_inx][1], coord_vin[arm_inx][2]	line2 ex_zone, ey_zone, coord_vin[arm_inx][1], coord_vin[arm_inx][2]	!Стрелка	str_ = 3 * PAPER_TO_MODEL	strx_1 = str_	strx_2 = str_-2*str_*(ex>EPS)	stry_1 = str_	stry_2 = str_-2*str_*(ey>EPS)	line2 sx_zone+strx_1, sy_zone+stry_1, sx_zone, sy_zone	line2 ex_zone-strx_1, ey_zone-stry_1, ex_zone, ey_zone	line2 sx_zone+strx_2, sy_zone+stry_2, sx_zone, sy_zone	line2 ex_zone-strx_2, ey_zone-stry_2, ex_zone, ey_zone	!Линия стержня	PEN 41	sx_sterj = coord_vin[arm_inx][1]*(ex<EPS)	sy_sterj = coord_vin[arm_inx][2]*(ey<EPS)	ex_sterj = (ex+ex_1+ex_2)*(ex>EPS)+coord_vin[arm_inx][1]*(ex<EPS)	ey_sterj = (ey+ey_1+ey_2)*(ey>EPS)+coord_vin[arm_inx][2]*(ey<EPS)	gosub "gost_2d"	pen gs_cont_pen	fill gs_fill_type	POLY2_B NSP/3, 1+2+4+64, gs_fill_pen, gs_back_pen, get(NSP)else	if arm_array_1_dir>0 then		gosub "array_1"	else		if arm_array_2_dir>0 then			gosub "array_2"		else			gosub "body"		endif	endifendifend"gost_2d":	gosub "linear_2d"return"linear_2d":	line2 sx_sterj, sy_sterj, coord_vin[arm_inx][1], coord_vin[arm_inx][2]	line2 ex_sterj, ey_sterj, coord_vin[arm_inx][1], coord_vin[arm_inx][2]return"set_2d":	show_all_fon = 1	success = LIBRARYGLOBAL ("Libraryflobals-kzh", "show_all_fon", show_all_fon)	if not(show_all_fon) and arm_fon then end		show_all_plit = 1	success = LIBRARYGLOBAL ("Libraryflobals-kzh", "show_all_plit", show_all_plit)	if not(show_all_plit) and arm_plit then end		show_direction = 0	success = LIBRARYGLOBAL ("Libraryflobals-kzh", "show_direction", show_direction)	if show_direction<>arm_direction and show_direction then end		show_constr = 0	success = LIBRARYGLOBAL ("Libraryflobals-kzh", "show_constr", show_constr)	if show_constr<>arm_constr and show_constr then end	show_constr = 0	success = LIBRARYGLOBAL ("Libraryflobals-kzh", "show_constr", show_constr)	if show_constr<>arm_constr and show_constr then end	show_layer = 0	success = LIBRARYGLOBAL ("Libraryflobals-kzh", "show_layer", show_layer)	if show_layer<>arm_layer and show_layer then end	call "Показ_по_сборкам" PARAMETERS ALL subpos=subpos, pos=GLOB_ID RETURNED_PARAMETERS show_subpos, show_marker	if not(show_subpos) then end	success = LIBRARYGLOBAL ("Libraryflobals-kzh", "arm_mat", arm_mat)	overr_area = 0	success = LIBRARYGLOBAL ("Libraryflobals-kzh", "overr_area", overr_area)	if overr_area then		area_lvl = 1		success = LIBRARYGLOBAL ("Libraryflobals-kzh", "area_lvl", area_lvl)		dim area_arr[]		success = LIBRARYGLOBAL ("Libraryflobals-kzh", "area_arr", area_arr)		dim area_mat[]		success = LIBRARYGLOBAL ("Libraryflobals-kzh", "area_mat", area_mat)		flag = 0		if arm_area<=area_arr[1] then flag = 1		if arm_area>=area_arr[area_lvl] then flag = area_lvl		if not(flag) then			for i=2 to area_lvl				if arm_area>area_arr[i-1] and arm_area<=area_arr[i] then					flag = i					i = area_lvl				endif			next i		endif		if flag then arm_mat = area_mat[flag]	endif	n = REQUEST{2} ("Building_Material_info", arm_mat, "gs_bmat_cutfill_properties", gs_fill_type, gs_fill_pen, gs_back_pen)	if overr_area then gs_cont_pen = gs_fill_pen	pen gs_cont_penreturn"body":	add2 sx, sy	if arm_direction = DIR_Z then 		CIRCLE2 0,0,arm_r		if show_2d_hotspot_t then			hotspot2 0,0, unID_arm : unID_arm = unID_arm + 1			hotspot2 arm_r,0, unID_arm : unID_arm = unID_arm + 1			hotspot2 0,arm_r, unID_arm : unID_arm = unID_arm + 1			hotspot2 arm_r,arm_r, unID_arm : unID_arm = unID_arm + 1			hotspot2 -arm_r,0, unID_arm : unID_arm = unID_arm + 1			hotspot2 0,-arm_r, unID_arm : unID_arm = unID_arm + 1			hotspot2 -arm_r,-arm_r, unID_arm : unID_arm = unID_arm + 1		endif	else		if show_type_2d = SHOW_LINE then 			line2 0,0, ex, ey			if show_2d_hotspot_t then				hotspot2 0, 0, unID_arm : unID_arm = unID_arm + 1				hotspot2 ex, ey, unID_arm : unID_arm = unID_arm + 1			endif		endif		if show_type_2d = SHOW_SOLID or show_type_2d=SHOW_GOST then			line2 -arm_r*(ex<EPS),-arm_r*(ey<EPS), ex-arm_r*(ex<EPS), ey-arm_r*(ey<EPS)			line2 arm_r*(ex<EPS),arm_r*(ey<EPS), ex+arm_r*(ex<EPS), ey+arm_r*(ey<EPS)			line2 arm_r*(ex<EPS),arm_r*(ey<EPS), -arm_r*(ex<EPS), -arm_r*(ey<EPS)			line2 ex+arm_r*(ex<EPS),ey+arm_r*(ey<EPS), ex-arm_r*(ex<EPS), ey-arm_r*(ey<EPS)			if show_2d_hotspot_t then				hotspot2 0, 0, unID_arm : unID_arm = unID_arm + 1				hotspot2 ex, ey, unID_arm : unID_arm = unID_arm + 1				hotspot2 ex+arm_r*(ex<EPS),ey+arm_r*(ey<EPS), unID_arm : unID_arm = unID_arm + 1				hotspot2 ex-arm_r*(ex<EPS),ey-arm_r*(ey<EPS), unID_arm : unID_arm = unID_arm + 1				hotspot2 arm_r*(ex<EPS),arm_r*(ey<EPS), unID_arm : unID_arm = unID_arm + 1				hotspot2 -arm_r*(ex<EPS),-arm_r*(ey<EPS), unID_arm : unID_arm = unID_arm + 1			endif		endif	endif	del 1return"array_1":	dxe_1 = sx_1 : dye_1 = sy_1	add2 sx_1, sy_1	for i1=1 to qty_1		show_2d_hotspot_t = 0		if i1=1 then show_2d_hotspot_t = show_2d_hotspot		if i1=2 and abs(step_1_s-dx_1-dy_1)>EPS then show_2d_hotspot_t = show_2d_hotspot		if i1=qty_1-1 and abs(step_1_e-dx_1-dy_1)>EPS then show_2d_hotspot_t = show_2d_hotspot		if i1=qty_1 then show_2d_hotspot_t = show_2d_hotspot		if arm_array_2_dir>0 then			gosub "array_2"			add2 -dxe_2, -dye_2		else			gosub "body"		endif		if i1=1 then 			add2 step_1_s*(dx_1>EPS), step_1_s*(dy_1>EPS)			dxe_1 = dxe_1 + step_1_s*(dx_1>EPS) : dye_1 = dye_1 + step_1_s*(dy_1>EPS)		endif		if i1=qty_1-1 then			add2 step_1_e*(dx_1>EPS), step_1_e*(dy_1>EPS)			dxe_1 = dxe_1 + step_1_e*(dx_1>EPS) : dye_1 = dye_1 + step_1_e*(dy_1>EPS)		endif		if i1<>1 and i1<>qty_1-1 then			add2 dx_1, dy_1			dxe_1 = dxe_1 + dx_1 : dye_1 = dye_1 + dy_1		endif	next i1return"array_2":	dxe_2 = sx_2 : dye_2 = sx_2	add2 sx_2, sy_2	for i2=1 to qty_2		show_2d_hotspot_t = 0		if i2=1 then show_2d_hotspot_t = show_2d_hotspot		if i2=2 and abs(step_2_s-dx_2-dy_2)>EPS then show_2d_hotspot_t = show_2d_hotspot		if i2=qty_2-1 and abs(step_2_e-dx_2-dy_2)>EPS then show_2d_hotspot_t = show_2d_hotspot		if i2=qty_2 then show_2d_hotspot_t = show_2d_hotspot		gosub "body"		if i2=1 then 			add2 step_2_s*(dx_2>EPS), step_2_s*(dy_2>EPS)			dxe_2 = dxe_2 + step_2_s*(dx_2>EPS) : dye_2 = dye_2 + step_2_s*(dy_2>EPS)		endif		if i2=qty_2-1 then			add2 step_2_e*(dx_2>EPS), step_2_e*(dy_2>EPS)			dxe_2 = dxe_2 + step_2_e*(dx_2>EPS) : dye_2 = dye_2 + step_2_e*(dy_2>EPS)		endif		if i2<>1 and i2<>qty_2-1 then			add2 dx_2, dy_2			dxe_2 = dxe_2 + dx_2 : dye_2 = dye_2 + dy_2		endif	next i2return"clear_buff_2d":	if NSP>0 then tt = min(get(NSP))	if n_trans>0 then		del n_trans		n_trans = 0	endifreturn