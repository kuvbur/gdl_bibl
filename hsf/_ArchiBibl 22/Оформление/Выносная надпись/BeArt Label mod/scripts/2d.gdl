!Enjoy true Art. BeArt (beart@inbox.ru)!Edited by kuvbur@gmail.comif annot[1] = 0 then 	show  = 1else	show = 0	for i=1 to vardim1(annot)		if annot[i] = GLOB_SCALE then show = 1	next iendifif upr_rezhim = "Откл" then upr_n = -1if upr_rezhim = "Без отделки" then upr_n = 2if upr_rezhim = "Только ядро" then upr_n = 1if upr_rezhim = "Вся модель" then upr_n = 0if upr_rezhim_1 = "Откл" then upr_n_1 = -1if upr_rezhim_1 = "Без отделки" then upr_n_1 = 2if upr_rezhim_1 = "Только ядро" then upr_n_1 = 1if upr_rezhim_1 = "Вся модель" then upr_n_1 = 0if upr_n<>-1 then	if upr_n_1<>-1 then		if GLOB_STRUCTURE_DISPLAY <> upr_n and GLOB_STRUCTURE_DISPLAY <> upr_n_1 then end	else		if GLOB_STRUCTURE_DISPLAY <> upr_n then end	endifendifif not(show) then end!Определение видимости выноскиif param_name = "Отделка/модель/ядро" or param_name = "Параметры" then	type_spec=""	nd1 = request("Assoclp_parvalue", "type_spec", namindd1, typed1, flagd1, dim1d1, dim2d1, type_spec)	if type_spec<>"" then		success = LIBRARYGLOBAL ("Libraryflobals-km", "ignore_id", ignore_id)		success = LIBRARYGLOBAL ("Libraryflobals-km", "show_ingore", show_ingore)		show_spec = 0 : IF STRSTR (GLOB_ID, ignore_id, 1) > 0 THEN show_spec = 1		if not(show_ingore) and (type_spec="Не специфицировать" or show_spec) and show then show = 0	endif	dim el_views[20] : el_views[1]=""	nd1 = request("Assoclp_parvalue", "el_views", namindd1, typed1, flagd1, dim1d1, dim2d1, el_views)	if nd1 and show then		call "Показ_по_группам" PARAMETERS ALL el_views=el_views RETURNED_PARAMETERS show_el		show = show_el	endif	subpos = ""	nd1 = request("Assoclp_parvalue", "subpos", namindd1, typed1, flagd1, dim1d1, dim2d1, subpos)	if subpos<>"" and show then		call "Показ_по_сборкам" PARAMETERS ALL subpos=subpos, pos=GLOB_ID RETURNED_PARAMETERS show_subpos, show_marker		show = show_subpos*show_marker	endif	upr = 10	nd1 = request("Assoclp_parvalue", "upr", namindd1, typed1, flagd1, dim1d1, dim2d1, upr)	if upr<10 and show then		success = LIBRARYGLOBAL ("Libraryflobals-km", "show_connect", show_connect)		show = show_connect*upr + (upr=0)	endif	if type_spec<>"" and show then		success = LIBRARYGLOBAL ("Libraryflobals-km", "show_izd", show_izd)		success = LIBRARYGLOBAL ("Libraryflobals-km", "show_metall", show_metall)		if type_spec = "Металл" and not(show_metall) then show = 0		if type_spec = "Изделие" and not(show_izd) then show = 0	endif	syst_name = "*" : show_el = 1	nd1 = request("Assoclp_parvalue", "syst_name", namindd1, typed1, flagd1, dim1d1, dim2d1, syst_name)	if nd1 and show then		if syst_name = "!!!" or strlen(syst_name)<1 then			syst_name = "!!!"			DIM SystemStr[][]			ConToolType_1 = 0			nd1 = request("Assoclp_parvalue", "ConToolType_1", namindd1, typed1, flagd1, dim1d1, dim2d1, ConToolType_1)			if nd1 then				queryStr = "GetMEPSystems (" + STR(ConToolType_1, 1, 0) + ")"				isSystemQuery = APPLICATION_QUERY ("MEPSystem", queryStr, SystemStr)				num = VARDIM2(SystemStr)/2				dim MEP_StrConnectionData[][]				nd1 = request("Assoclp_parvalue", "MEP_StrConnectionData", namindd1, typed1, flagd1, dim1d1, dim2d1, MEP_StrConnectionData)				if nd1 then					FOR i = 2 TO num + 1						IF MEP_StrConnectionData[1][2] = SystemStr[1][(i-1)*2-1] THEN 							syst_name = SystemStr[1][(i-1)*2]							i = num + 1						endif					NEXT i					if syst_name = "!!!" then						queryStr = "GetMEPSystems (" + STR(2, 1, 0) + ")"						isSystemQuery = APPLICATION_QUERY ("MEPSystem", queryStr, SystemStr)						num = VARDIM2(SystemStr)/2						FOR i = 2 TO num + 1							IF MEP_StrConnectionData[1][2] = SystemStr[1][(i-1)*2-1] THEN 								syst_name = SystemStr[1][(i-1)*2]								i = num + 1							endif						NEXT i					endif				endif			endif		endif		gosub "show_mep"		if not(show_el) then show = 0	endif	el_type_view = 0	nd1 = request("Assoclp_parvalue", "el_type_view", namindd1, typed1, flagd1, dim1d1, dim2d1, el_type_view)	if nd1 and show then		show_if_vert=1 : show_if_gor=1 : show_if_ang=1		success = LIBRARYGLOBAL ("Libraryflobals-km", "show_if_vert", show_if_vert)		success = LIBRARYGLOBAL ("Libraryflobals-km", "show_if_gor", show_if_gor)		success = LIBRARYGLOBAL ("Libraryflobals-km", "show_if_ang", show_if_ang)		if el_type_view=1 and not(show_if_gor) and show then show = 0		if el_type_view=2 and not(show_if_vert) and show then show = 0		if el_type_view=3 and not(show_if_ang) and show then show = 0	endifendifif not(show) then endPAPER_TO_MODEL = GLOB_SCALE / 1000define style  "textstyle"  _LABEL_FONT_NAME, _LABEL_TEXT_SIZE, anchor, _LABEL_FONT_STYLErrt1 = "textstyle"SET STYLE rrt1rrr = request("Height_of_style",rrt1, txt_hgt)text_hgt = (txt_hgt*PAPER_TO_MODEL)text_hgt = text_hgt+text_hgt*0.3StrMax=0 : StrMaxLen = 0for i = 1 to n_rec	StrMax = max(StrMax,stw(str_txt[i][1])*PAPER_TO_MODEL)	StrMaxLen = max(StrMaxLen,strlen(str_txt[i][1]))next isss=request("Height_of_style", rrt1, height, descent, leading)dx = -(height/2-descent-leading-_LABEL_TEXT_SIZE/2)*PAPER_TO_MODELif StrMaxLen<EPS then end!!Подложка!if AC_LabelTextBgrPen <=0 then _LABEL_TEXT_BG_PEN = GLOB_DRAWING_BGD_PEN!if _LABEL_TEXT_BG_PEN>EPS then!	p=100-percentage!else!	p=0!endif!DEFINE TRANSLUCENT_FILL "podl" 1, 1, 1, 1, 1, 1, 1, 1, p!Автоматическое размещение выноски для различных видовif GLOB_VIEW_TYPE=2 then type_view = 0dim label_posxy[2]dim label_posxyz[3]dim label_posang[2]label_posxyz[1] = 0: label_posang[1] = 0 : label_posset = 0nd2 = request("Assoclp_parvalue", "label_posset", namindd1, typed1, flagd1, dim1d1, dim2d1, label_posset)if label_posset and use_pos then	nd1 = request("Assoclp_parvalue", "label_posxyz", namindd1, typed1, flagd1, dim1d1, dim2d1, label_posxyz)	nd2 = request("Assoclp_parvalue", "label_posang", namindd1, typed1, flagd1, dim1d1, dim2d1, label_posang)	if type_view = 0 then		label_posxy[1] = label_posxyz[1]		label_posxy[2] = label_posxyz[2]		if parall then ang_rot = label_posang[1]	endif	if type_view = 1 then		label_posxy[1] = label_posxyz[1]		label_posxy[2] = label_posxyz[3]		if parall then ang_rot = label_posang[2]	endif		if type_view = 2 then		label_posxy[1] = label_posxyz[2]		label_posxy[2] = label_posxyz[3]		if parall then ang_rot = label_posang[2]	endifelse	parall = 0	chent = 0endif!Читаемость выноскиsgnp = 1 : if SYMB_MIRRORED then sgnp = -1_totalRotate_ = (SYMB_ROTANGLE*sgnp+label_posang[1]+180*SYMB_MIRRORED) mod 360r = request ("View_Rotangle", "", _angleViewRot)_totalRotate	= (LABEL_ROTANGLE + _angleViewRot) MOD 360flag_mul2 = 0if label_posset and type_view < 4 and use_pos then	rot2 -_totalRotate	if chent then add2 -LABEL_POSITION [1][1], -LABEL_POSITION [1][2]	if type_view = 0 then		if chent then add2 SYMB_POS_X, SYMB_POS_Y		if SYMB_MIRRORED then 			mul2 -1,1			flag_mul2 = 1		endif		if chent then rot2 SYMB_ROTANGLE*sgnp		if chent then add2 label_posxy[1],label_posxy[2]		if SYMB_MIRRORED then 			mul2 -1,1			flag_mul2 = 1		endif		if parall then rot2 ang_rot		if (SYMB_ROTANGLE+ang_rot > (90 + EPS) & SYMB_ROTANGLE+ang_rot < (270 + EPS)) then rot2 180		if zerk_b then rot2 180	endif	if type_view = 1 then		isvert = 1 : if abs(_totalRotate_ mod 180)=90 then isvert = -1		if chent then add2 SYMB_POS_X, SYMB_POS_Z		sgnp1 = 1 : if (_totalRotate_ > (90 + EPS) & _totalRotate_ < (270 + EPS)) then sgnp1 = -1		sgnp2 = 1 : if (label_posang[1] > (90 + EPS) & label_posang[1] < (270 + EPS)) then sgnp2 = -1		if chent then add2 label_posxy[1]*sgnp2*sgnp1,label_posxy[2]		if parall then rot2 ang_rot*sgnp1*(isvert=1)+90*(isvert<>1)	endifendifif param_name = "Отделка/модель/ядро" then	inxpar = GLOB_STRUCTURE_DISPLAY+1	for i=1 to vardim1(str_txt)		str_txt[i][1] = str_txt[i][inxpar]	next iendifif strstr(param_name_out[1], "!!Профиль")>0 and (prof_fist_str or prof_sec_str) then show_prof=1if STRSTR(str_txt[1][1],"t=")>0 or STRSTR(str_txt[2][1],"t=")>0 then show_prof=0k = show_prof*GLOB_SCALE/7+(show_prof=0)*GLOB_SCALE/20add_for_prof_r = 0.03*kDRAWINDEX 50if autod then	if PosA<0 then PosA=-StrMax	if PosA>0 then PosA=StrMax	for i = 1 to n_rec		if STRSTR(str_txt[i][inxpar],"@")>0 then			space = "@" : var = str_txt[i][1] : gosub "trim_space2" : str_txt[i][1] = var		endif	next ielse	l_max = abs(PosA)+thk_alg_out	for i = 1 to n_rec		var = str_txt[i][1] : gosub "peren"		for m=1 to rs			str_txt[i][m] = text_r[m]		next m		kol_vo_str[i] = rs		for jj=1 to kol_vo_str[i]			if STRSTR(str_txt[i][jj],"@")>0 then				space = "@" : var = str_txt[i][jj] : gosub "trim_space2" : str_txt[i][jj] = var			endif		next jj	next iendifn = 0if n_rec=0 then 	SkinBegin=1 	SkinFinish =1	St=1else	if vin then n = -text_hgtendifIf _LABEL_CUSTOM_ARROW Then	parameters tx=LABEL_POSITION [2][1]	parameters ty=LABEL_POSITION [2][2]	parameters PosA=LABEL_POSITION [2][1]*sin(LABEL_ROTANGLE)	if not(chent) then add2  LABEL_POSITION [2][1]+LABEL_POSITION [3][1],LABEL_POSITION [2][2]+LABEL_POSITION [3][2]	sizeArrow = sizeArrow*PAPER_TO_MODEL	if gs_style_m=1 or gs_style_m=3 then j3=0	if gs_style_m=2 or gs_style_m=4 then j3=4	PEN _LABEL_ARROW_PEN	fill  GLOB_FILL_INDEX_SOLID	gosub "old"	if not(autod) then		HOTSPOT2 0,0, unID, PosA, 1+128, PosA:	unID=unID+1		HOTSPOT2 -1, 0, unID, PosA, 3+128, PosA: unID=unID+1		HOTSPOT2 PosA, 0, unID, PosA, 2, PosA: unID=unID+1	endif	if param_name = "Откл" then 		HOTSPOT2 PosA-sgn(PosA)*PAPER_TO_MODEL, 0.1, unID, thk_alg_out, 1+128, thk_alg_out:	unID=unID+1		HOTSPOT2 -1*sgn(PosA), 0.1, unID, thk_alg_out, 3+128, thk_alg_out: unID=unID+1		HOTSPOT2 PosA+thk_alg_out*sgn(PosA)-sgn(PosA)*PAPER_TO_MODEL, 0.1, unID, thk_alg_out, 2, thk_alg_out: unID=unID+1	endif	If PosA < 0 Then 		If anchor = 7 Then			txtPos = PosA			add_for_prof_sign=0		endif		If anchor = 9 Then			txtPos = 0			add_for_prof_sign=-0.004*k-StrMax		endif		If anchor = 8 Then			txtPos = PosA/2			add_for_prof_sign=-0.004*k-StrMax		endif		If anchor = 6 Then 			txtPos = 0			add_for_prof_sign=0		endif		If anchor = 4 Then txtPos = 0	else		If anchor = 7 Then 			txtPos = add_for_prof_r			add_for_prof_sign=0		endif		If anchor = 9 Then			txtPos = PosA+add_for_prof_r			add_for_prof_sign=-0.004*k-StrMax		endif		If anchor = 8 Then 			txtPos = PosA/2+add_for_prof_r			add_for_prof_sign=-0.004*k-StrMax		endif		If anchor = 6 Then txtPos = 0		If anchor = 4 Then txtPos = 0	endif	PEN _LABEL_ARROW_PEN	gosub "alg"	for nPos=SkinBegin to SkinFinish step St		PEN _LABEL_ARROW_PEN		if not(napd) and (not(vin) or (nPos=SkinFinish)) then 			line2 0,n,PosA+(add_for_prof_r+thk_alg_out-(thk_alg_out<>0)*PAPER_TO_MODEL)*sgn(PosA), n			hotline2 0,n,PosA+(add_for_prof_r+thk_alg_out-(thk_alg_out<>0)*PAPER_TO_MODEL)*sgn(PosA), n		endif		PEN _LABEL_TEXT_PEN		if nPos<=vardim1(kol_vo_str) then			for nstr = kol_vo_str[nPos] to 1 step -1				nprof = n				if param_name = "Параметры" and strstr(param_name_out[1], "!!Профиль")>0 and nstr = 1 then 					if nPos=1 and prof_fist_str then gosub "profile"					if nPos=2 and prof_sec_str then gosub "profile"				endif				text2 txtPos+add_for_prof_r*(nstr <> 1), n+dx, str_txt[nPos][nstr]				if nstr = kol_vo_str[nPos] then					if param_name = "Откл" then text2 PosA*(PosA>0)-stw(skinThktxtarr[nPos])*PAPER_TO_MODEL+thk_alg_out, n+dx, skinThktxtarr[nPos]				endif				n = n + text_hgt			next nstr		endif	next nPos	PEN _LABEL_ARROW_PEN	if n_rec<>0 then 		if AngleT=180 Then								if not(napd) then				line2 0,0,0,n-kol_vo_str[SkinFinish]*text_hgt				hotline2 0,0,0,n-kol_vo_str[SkinFinish]*text_hgt			endif		else			if n_rec<>1 and not(napd) then				line2 0,0,0,n-kol_vo_str[SkinFinish]*text_hgt				hotline2 0,0,0,n-kol_vo_str[SkinFinish]*text_hgt			endif		endif	endif	if strlen(add_param)>0 and add_param<>" " and param_name = "Откл" then		if Shrift_add_param<EPS then 			Shrift_add_param = _LABEL_FONT_STYLE		else			Shrift_add_param = Shrift_add_param - 1		endif		define style  "textstyle_add"  _LABEL_FONT_NAME, _LABEL_TEXT_SIZE, anchor, Shrift_add_param		SET STYLE "textstyle_add" 		rrr = request("Height_of_style","textstyle_add", txt_hgt_add)		text_hgt_add = (txt_hgt_add*PAPER_TO_MODEL)		text_hgt_add = text_hgt_add+text_hgt_add*0.3		if not(napd) then			PEN _LABEL_ARROW_PEN			line2 0,n,0, n-kol_vo_str[SkinFinish]*text_hgt			if abs(txtPos)>abs(STW(add_param)*PAPER_TO_MODEL) then				line2 0,n,PosA+(add_for_prof_r+thk_alg_out-(thk_alg_out<>0)*PAPER_TO_MODEL)*sgn(PosA), n			else				line2 0,n,add_for_prof_r+STW(add_param)*PAPER_TO_MODEL*sgn(PosA), n			endif		endif		PEN _LABEL_TEXT_PEN		text2 txtPos, n+dx, add_param		n = n + text_hgt_add		SET STYLE rrt1	endifelse	SET STYLE rrt1	PEN _LABEL_ARROW_PEN	if cos(LABEL_ROTANGLE)>0 then		If anchor = 4 Then			txtPos = -StrMax*cos(LABEL_ROTANGLE)			add_for_prof_sign=0		endif		If anchor = 5 Then			txtPos = -StrMax*cos(LABEL_ROTANGLE)/2			add_for_prof_sign=-0.03*k-0.5*stw(txt_vin)*PAPER_TO_MODEL		endif		If anchor = 6 Then			txtPos = 0			add_for_prof_sign=0		endif	else		If anchor = 4 Then			txtPos = 0			add_for_prof_sign=0		endif		If anchor = 5 Then			txtPos = -StrMax*cos(LABEL_ROTANGLE)/2			add_for_prof_sign=0		endif		If anchor = 6 Then			txtPos = -StrMax*cos(LABEL_ROTANGLE)			add_for_prof_sign=0		endif	endif	linex = -StrMax*cos(LABEL_ROTANGLE)	add_for_prof_sign = add_for_prof_sign*(prof_fist_str or prof_sec_str)*show_prof	gosub "alg"	for nPos = SkinBegin to SkinFinish step St		PEN _LABEL_TEXT_PEN		text2 txtPos+add_for_prof_sign, n+text_hgt/2+dx, str_txt[nPos][1]		if param_name = "Откл" then text2 txtPos*(abs(txtPos)<EPS) - stw(skinThktxtarr[nPos])*PAPER_TO_MODEL, n+text_hgt/2+dx, skinThktxtarr[nPos]		PEN _LABEL_ARROW_PEN		if not(vin) then 			line2 0, n, linex+add_for_prof_sign, n			hotline2 0, n, linex+add_for_prof_sign, n		endif		n = n + text_hgt	next nPos	if n_rec<3 then 		PEN _LABEL_TEXT_PEN		text2 txtPos+add_for_prof_sign, -text_hgt/2+dx, " "		PEN _LABEL_ARROW_PEN		line2 0, 0, linex+add_for_prof_sign, 0		hotline2 0, 0, linex+add_for_prof_sign, 0	endif	if not(vin) then		PEN _LABEL_ARROW_PEN		line2 linex, 0, linex, n-kol_vo_str[SkinFinish]*text_hgt		hotline2 linex, 0, linex, n-kol_vo_str[SkinFinish]*text_hgt		PEN _LABEL_TEXT_PEN		if _LABEL_ANCHOR_POS=1 then			line2 linex, SkinBegin*text_hgt, linex, (SkinBegin+St)*text_hgt			hotline2 linex, SkinBegin*text_hgt, linex, (SkinBegin+St)*text_hgt		endif	else		PEN _LABEL_ARROW_PEN		line2 0, 0, linex+add_for_prof_sign, 0		hotline2 0, 0, linex+add_for_prof_sign, 0	endifendif_LABEL_FRAME_OFFSET = _LABEL_FRAME_OFFSET*PAPER_TO_MODELIf _LABEL_CUSTOM_ARROW Then	x1 = -_LABEL_FRAME_OFFSET*sgn(PosA)	y1 = n + _LABEL_FRAME_OFFSET	y2 = 0 - _LABEL_FRAME_OFFSET	x2 = PosA+(PosA=0)*0.1+(add_for_prof_r+thk_alg_out-(thk_alg_out<>0)*PAPER_TO_MODEL)*sgn(PosA)+_LABEL_FRAME_OFFSET*sgn(PosA)	if n<>0 then y2 = 0 - _LABEL_FRAME_OFFSET	if vin and str_txt[2][1]<>"" then y2 = -text_hgt-_LABEL_FRAME_OFFSETelse	x1 = 0 : y1 = 0 : y2 = n	x2 = linex	if _LABEL_ANCHOR_POS=0 then 		y1=text_hgt	else		if second_str<>"" then 			y1 = text_hgt		endif	endif	if y2=0 then y2 = -text_hgtendifif abs(x1-x2)>EPS and abs(y1-y2)>EPS and (AC_bLabelFrame or AC_bLabelOpaqueFill) then	fill  GLOB_FILL_INDEX_SOLID	ffil = AC_bLabelFrame + 2 * AC_bLabelOpaqueFill + 4	hotspot2 x1, y1	hotspot2 x1, y2	hotspot2 x2, y2	hotspot2 x2, y1	PEN AC_LabelPointerPen	DRAWINDEX 0	POLY2_B    5, ffil, AC_LabelTextBgrPen, 0,		 x1, y1,0,		 x1, y2,0,		 x2, y2,0,		 x2, y1,0,		 x1, y1,-1endifPEN _LABEL_ARROW_PENend"lin":	if napd then return	for i = 1 to vardim1(pxx)		HOTSPOT2 0, pxx[i][2], unID, pxx[i][1], 1+128: unID=unID+1		HOTSPOT2 pxx[i][1], pxx[i][2], unID, pxx[i][1], 2: unID=unID+1		HOTSPOT2 -1, pxx[i][2], unID, pxx[i][1], 3: unID=unID+1		HOTSPOT2 pxx[i][1], 0, unID, pxx[i][2], 1+128: unID=unID+1		HOTSPOT2 pxx[i][1], pxx[i][2], unID, pxx[i][2], 2: unID=unID+1		HOTSPOT2 pxx[i][1], -1, unID, pxx[i][2], 3: unID=unID+1		if (abs(pxx[i][1]-start_px)>=0.01 or abs(pxx[i][2]-start_py)>=0.01) and (abs(pxx[i][1]-0.005)>=0.01 or abs(pxx[i][2]-0.005)>=0.01) then			tx_t=tx			if abs(ptx)<EPS and abs(ang_rot)<EPS then				if pxx[i][1]>=tx+PosA/2 and PosA>0 then tx_t=tx+PosA+0.03*k				if pxx[i][1]<=tx+PosA/2 and PosA<0 then tx_t=tx+PosA-0.03*k			endif			PEN _LABEL_ARROW_PEN			line2 tx_t , ty,pxx[i][1], pxx[i][2]			hotline2 tx_t , ty,pxx[i][1], pxx[i][2]			add2 pxx[i][1], pxx[i][2]			PEN LABEL_ARROWHEAD_PEN			txx = tx_t-pxx[i][1] : tyy= ty-pxx[i][2] : gosub "arrw"			del 1		endif	next ireturn"alg":	max_h = 0 	if n_rec = 0 then		add2 0,text_hgt	else		for nPos=1 to n_rec-1			for nstr = 1 to kol_vo_str[nPos]				max_h = max_h + text_hgt			next nstr		next nPos		if not(vin) then			if _LABEL_ANCHOR_POS=1 then add2 0,-max_h			if _LABEL_ANCHOR_POS=0 then add2 0,-max_h/2		endif	endifreturn"arrw":	if napd then return	if txx>EPS and tyy>EPS then AngleT=ATN(tyy/txx)	if txx>EPS and tyy<EPS then AngleT=ATN(tyy/txx)+360	if txx<EPS and abs(txx)>EPS then AngleT=ATN(tyy/txx)+180	if abs(txx)<EPS and tyy>EPS then AngleT=90	if abs(txx)<EPS and tyy<EPS then AngleT=270	AngleT=AngleT-90	rot2  AngleT	If gs_style_m=7 then		PEN LABEL_ARROWHEAD_PEN		if not(total_thk) or zast_mun then 			HOTSPOT2 sizeArrow, zast/2, unID,  PosArrow,  1+128   : unID=unID+1			HOTSPOT2 sizeArrow, PosArrow+zast/2, unID,  PosArrow,  2    : unID=unID+1			HOTSPOT2 sizeArrow, -1, unID,  PosArrow,  3    : unID=unID+1		else			PosArrow=total_thk			HOTSPOT2 sizeArrow, PosArrow+zast/2		endif		HOTSPOT2 sizeArrow, zast/2		if not(napd) then line2 sizeArrow,0, sizeArrow, PosArrow+zast	endif	If gs_style_m=1 or gs_style_m=2 then		PEN LABEL_ARROWHEAD_PEN		if not(napd) then POLY2  3, 1+j3/2+j3,				-sizeArrow *tan(15), sizeArrow,				0, 0,				sizeArrow *tan(15), sizeArrow 	endif	If gs_style_m=3 or gs_style_m = 4 then		if not(napd) then POLY2_  2,1+j3/2+j3, 0, 0, 900,sizeArrow/2, 360, 4001	endif	If gs_style_m = 6 then		if not(napd) then LINE2  0,0, -sizeArrow *tan(15), sizeArrow		if not(napd) then LINE2 0,0,  sizeArrow*tan(15), sizeArrow		if not(napd) then line2 0,sizeArrow *2/3,-sizeArrow *tan(15),sizeArrow 		if not(napd) then line2 0,sizeArrow *2/3,sizeArrow *tan(15),sizeArrow 		if not(napd) then POLY2_b 5, 2,LABEL_ARROWHEAD_PEN,gs_back_pen,				0,0,0,				sizeArrow *tan(15),sizeArrow,0,				0,2/3*sizeArrow,0,				-sizeArrow *tan(15),sizeArrow,0,				0,0,-1	endif	del 1return"old":	txx = tx : tyy= ty : gosub "arrw"	if not(chent) then del 1	if not(chent) then add2  LABEL_POSITION [2][1]+LABEL_POSITION [3][1],LABEL_POSITION [2][2]+LABEL_POSITION [3][2]	xn = 0	yn = 0	if not(napd) then HOTSPOT2 xn, yn	HOTSPOT2 0, ty, unID,  tx,  1+128   : unID=unID+1	HOTSPOT2  tx, ty, unID,  tx,  2    : unID=unID+1	HOTSPOT2 -1, ty, unID,  tx,  3    : unID=unID+1	HOTSPOT2  tx, 0, unID,  ty,  1+128      : unID=unID+1	HOTSPOT2   tx, ty, unID,  ty,  2       : unID=unID+1	HOTSPOT2  tx, -1, unID,  ty,  3       : unID=unID+1	PEN _LABEL_ARROW_PEN	if not(napd) then 		line2 xn, yn,tx,ty		hotline2 xn, yn,tx,ty	endif	gosub "lin"	add2 tx,ty	if not(parall) then		HOTSPOT2 PosA/2,	0, unID,	ang_rot,	4+128: unID=unID+1		HOTSPOT2 0,	0,	unID,	ang_rot,	6: unID=unID+1		HOTSPOT2 PosA*cos(ang_rot)/2,	PosA*sin(ang_rot)/2,	unID,	ang_rot, 5: unID=unID+1		rot2 ang_rot	endif	if chent then add2 -PosA/2,0	if not(napd) then		HOTSPOT2 0, 0.1, unID,  ptx,  1+128   : unID=unID+1		HOTSPOT2  -ptx*sgn(PosA), 0.1, unID,  ptx,  2    : unID=unID+1		HOTSPOT2 1*sgn(PosA), 0.1, unID,  ptx,  3    : unID=unID+1		if abs(ptx)>EPS then			line2 tx-ptx*sgn(PosA),0,0,0			hotline2 tx-ptx*sgn(PosA),0,0,0			add2 -ptx*sgn(PosA),0		endif	endifreturn"profile":if flag_mul2 then 	add2 -txtPos-add_for_prof_sign, nprof+0.005*kelse	add2 txtPos+add_for_prof_sign, nprof+0.005*kendif!!Прямоугольная труба	if pr2 or name_prof_i=2 then:		rect2 0,0,-0.02*k,0.02*k	endif!!Уголок	if pr5 or name_prof_i=5 or name_prof_i=8 then:		line2 0,0,-0.02*k,0		line2 -0.02*k,0,-0.02*k,0.02*k	endif!!Двутавр	if pr1 or name_prof_i=4 then:		line2 0,0,-0.02*k,0		line2 -0.01*k,0,-0.01*k,0.02*k		line2 0,0.02*k,-0.02*k,0.02*k	endif!!Швеллер	if pr6 or name_prof_i=3 or name_prof_i=9 then:		line2 -0.005,0,-0.02*k,0		line2 -0.02*k,0,-0.02*k,0.02*k		line2 -0.005,0.02*k,-0.02*k,0.02*k	endif!!Круглая труба	if pr3 or name_prof_i=1 then:		CIRCLE2 -0.01*k, 0.01*k, 0.01*k	endif	del 1return"trim_space2":	if STRSTR(var, space)>0 then		if vartype(var) = 2 and  vartype(space) = 2 then			ipr=1			out_str = ""			DO				is_trim = 0				in_str = var				find_str = space				replace_str = ""				gosub "str_replace2"				var = out_str				is_trim = STRSTR (var, space, 1)				ipr = ipr + 1			WHILE is_trim <> 0 and ipr<50		endif		var = out_str	endifreturn"str_replace2":	if vartype(in_str) = 2 and vartype(find_str) = 2 and vartype(replace_str) = 2 then		mrw_in_str = in_str		mrw_wordToReplace = find_str		mrw_newWord = replace_str		call "macro_replace_word" parameters mrw_in_str=mrw_in_str,											mrw_newWord=mrw_newWord,											mrw_wordToReplace = mrw_wordToReplace,											RETURNED_PARAMETERS mrw_out_str		out_str = mrw_out_str	endifreturn"peren":	mlb_in_str = var : mlb_l_max = l_max	dim mlb_out_str_arr[]	call "macro_line_break" parameters mlb_in_str=mlb_in_str, mlb_l_max=mlb_l_max,										RETURNED_PARAMETERS mlb_n_row, mlb_out_str, mlb_out_str_arr	text_r = mlb_out_str_arr	rs = mlb_n_row	txt = mlb_out_strreturn"show_mep":var_t=""show_all_system = 1 : success = LIBRARYGLOBAL ("Libraryflobals-mep", "show_all_system", show_all_system)show_el = 0if show_all_system then	show_el = 1	goto "end_show_mep"endifif strstr(syst_name,"!!!")>EPS then	show_el = 1	goto "end_show_mep"endifdim show_system[] : show_system[1] = ""success = LIBRARYGLOBAL ("Libraryflobals-mep", "show_system", show_system)n_sys=0dim syst_name_t[] : syst_name_t[1]=""if strlen(syst_name)>1 then	if STRSTR(syst_name, ",")>EPS then		txt_var = syst_name		max_iter = 1000		for i=1 to max_iter			n_t = STRSTR(txt_var, ",")			if n_t<EPS then 				i=max_iter				if STRSUB(txt_var, 1, 1) = " " then txt_var = STRSUB(txt_var, 2, STRLEN(txt_var))				if strlen(txt_var)>0 then					n_sys = n_sys + 1					syst_name_t[n_sys]=txt_var				endif			else				var_t = STRSUB(txt_var, 1, n_t-1)				if STRSUB(var_t, 1, 1) = " " then var_t = STRSUB(var_t, 2, STRLEN(var_t))				txt_var = STRSUB(txt_var, n_t+1, strlen(txt_var))				n_sys = n_sys + 1				syst_name_t[n_sys]=var_t			endif		next i	else		n_sys = 1		syst_name_t[n_sys]=syst_name	endifelse	show_el = 1	goto "end_show_mep"endiffor i=1 to vardim1(show_system)	if strlen(show_system[i])>0 and show_system[i]<>" " then		for k=1 to n_sys			sname = syst_name_t[k]			gosub 33		next k	endifnext i"end_show_mep":return33:	usl1 =(show_system[i]=sname)	if STRSUB(show_system[i], 1, 1) = "*" and not(usl1) then !Если сборка начинается с * - отсекаем, и ищем конец		findsp = STRSUB(show_system[i], 2, STRLEN(show_system[i]))		if STRLEN(sname)>=STRLEN(findsp) then !Если имя сборки меньше длины искомого текста - она явно не подходит			findsp_t = STRSUB(sname,STRLEN(sname)-STRLEN(findsp)+1,STRLEN(findsp))			usl1 = (findsp_t=findsp)		else			usl1 = 0		endif	endif	if STRSUB(show_system[i], STRLEN(show_system[i]), 1) = "*" and not(usl1) then !Если сборка заканчивается на * - отсекаем, и ищем начало		findsp = STRSUB(show_system[i], 1, STRLEN(show_system[i])-1)		if STRLEN(sname)>=STRLEN(findsp) then !Если имя сборки меньше длины искомого текста - она явно не подходит			findsp_t = STRSUB(sname,1,STRLEN(findsp))			usl1 = (findsp_t=findsp)		else			usl1 = 0		endif	endif	if STRSUB(show_system[i], 1, 1) = "*" and STRSUB(show_system[i], STRLEN(show_system[i]), 1) = "*" and not(usl1) then !Ищем вхождение		findsp = STRSUB(show_system[i], 2, STRLEN(show_system[i])-2)		usl1 = (STRSTR(sname, findsp, 1)>0)	endif	if STRSUB(show_system[i], 1, 1) = "*" and STRLEN(show_system[i])=1 and not(usl1) then !Все сборки		usl1 = 1	endif	if usl1 then 		show_el = 1		goto "end_show_mep"	endifreturn