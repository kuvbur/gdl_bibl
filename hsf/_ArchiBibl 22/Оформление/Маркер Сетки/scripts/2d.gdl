! ===== Story visibility =====n = REQUEST ("Home_story", "", home_s_index, homes_story_name)n = REQUEST ("Story", "", current_s_index, current_story_name)if AC_StoryVisibility_i = i_Current then	if home_s_index <> current_s_index then endelse	if AC_StoryVisibility_i = i_Selected then		was = 0		for i = 1 to AC_StoryNum			if AC_Stories[i] = current_s_index then				was = 1			endif		next i		if was = 0 then	end	endifendifhLineID = 1000hArcID	= 2000! --- Oriented View ------------------------------[rrr = REQUEST ("View_Rotangle", "", angleViewRot)totalRotate = (SYMB_ROTANGLE + angleViewRot)if totalRotate > 360 then totalRotate = totalRotate - 360! --- Oriented View ------------------------------]Marker_Diameter = GLOB_SCALE/1000*AC_MarkerSizemarker1Cx = 0marker1Cy = 0marker2Cx = 0marker2Cy = 0! ========= hotline2 and hotarc2 ID-s =========hLineID = 1000hArcID	= 2000! ========= normalized vectors tangent to the ends =========ve1x = 0.0ve1y = 0.0ve2x = 0.0ve2y = 0.0!AC_Extension = (AC_FullLength - AC_Length) / 2AC_HalfLength = AC_Length/2AC_SecHalf = AC_HalfLength - AC_Staggering - abs(AC_StaggerDist)SET LINE_TYPE AC_LineTypepen AC_LinePenif AC_Type_i = i_Line then	add2 AC_HalfLength, 0	if GLOB_CONTEXT<>30 then		HOTLINE2 -AC_SecHalf, 0, AC_SecHalf, 0, hLineID : hLineID = hLineID + 1		if AC_LineVisibility_i = i_Full then			line2 -AC_SecHalf, 0, AC_SecHalf, 0		else			if AC_LineVisibility_i = i_Short then				line2 -AC_SecHalf, 0, -AC_SecHalf + AC_VisLength, 0				line2 AC_SecHalf-AC_VisLength, 0, AC_SecHalf, 0			endif		endif	else		hLineID = hLineID + 1	endif	ve1x = -1	ve1y = 0	ve2x = 1	ve2y = 0	stag_dist  =  AC_HalfLength - AC_SecHalf - AC_Staggering - abs(AC_StaggerDist)	if AC_MarkerStart=1 then		stag_dist1 = stag_dist	else		stag_dist1 = AC_HalfLength - AC_SecHalf	endif	if AC_MarkerEnd=1 then		stag_dist2 = stag_dist	else		stag_dist2 = AC_HalfLength - AC_SecHalf	endif	AC_StartX = -AC_SecHalf	AC_StartY = 0	AC_EndX = AC_SecHalf	AC_EndY = 0else	add2 0, 0	angle1 = 0	angle2 = angle1 + AC_Angle	if GLOB_CONTEXT<>30 then		if AC_LineVisibility_i = i_Full then			hotarc2 0, 0, AC_Radius, angle1 , angle2, hArcID : hArcID = hArcID + 1			arc2 0, 0, AC_Radius, angle1 , angle2		else			hArcID = hArcID + 1			if AC_LineVisibility_i = i_Short then				lenAlfa = (AC_VisLength * 180) / (AC_Radius * PI)				hotarc2 0, 0, AC_Radius, angle1 , angle1 + lenAlfa, hArcID : hArcID = hArcID + 1				hotarc2  0, 0, AC_Radius, angle2-lenAlfa , angle2, hArcID : hArcID = hArcID + 1				arc2 0, 0, AC_Radius, angle1 , angle1 + lenAlfa				arc2 0, 0, AC_Radius, angle2-lenAlfa , angle2			endif		endif	else		hArcID = hArcID + 3	endif	AC_StartX = AC_Radius*cos(angle1)	AC_StartY = AC_Radius*sin(angle1)	AC_EndX = AC_Radius*cos(angle2)	AC_EndY = AC_Radius*sin(angle2)	AC_MidX = AC_Radius*cos((angle1+angle2)/2)	AC_MidY = sin((angle1+angle2)/2)*AC_Radius	ve1x = cos(angle1)	ve1y = sin(angle1)	veT = ve1x	ve1x = ve1y	ve1y = -veT	AC_EndX = AC_Radius*cos(angle2)	AC_EndY = sin(angle2)*AC_Radius	ve2x = cos(angle2)	ve2y = sin(angle2)	veT = ve2x	ve2x = -ve2y	ve2y = veT	stag_dist  =  AC_Extension - AC_Staggering - abs(AC_StaggerDist)	if AC_MarkerStart=1 then		stag_dist1 = stag_dist	else		stag_dist1 = AC_Extension - AC_Staggering	endif	if AC_MarkerEnd=1 then		stag_dist2 = stag_dist	else		stag_dist2 = AC_Extension - AC_Staggering	endifendif!SET LINE_TYPE 1! ========== Staggering start lines ==========marker1Cx = AC_StartX + ve1x * stag_dist1marker1Cy = AC_StartY + ve1y * stag_dist1if GLOB_CONTEXT<>30 then	line2 AC_StartX, AC_StartY, marker1Cx , marker1Cy	hotline2 AC_StartX, AC_StartY, marker1Cx , marker1Cy, hLineID : hLineID = hLineID + 1else	hLineID = hLineID + 1endifmex = marker1Cxmey = marker1Cy! ========== line end hotspot ==========hot5x = mexhot5y = meyax = mex + (ve1x * abs(AC_StaggerDist))ay = mey + (ve1y * abs(AC_StaggerDist))marker1Cx = mex + (ve1y * AC_StaggerDist) + (ve1x * abs(AC_StaggerDist))marker1Cy = mey + (-ve1x * AC_StaggerDist) + (ve1y * abs(AC_StaggerDist))if GLOB_CONTEXT<>30 and AC_MarkerStart=1 then	line2 mex, mey, marker1Cx, marker1Cy	hotline2 mex, mey, marker1Cx, marker1Cy, hLineID : hLineID = hLineID + 1else	hLineID = hLineID + 1endifmex = marker1Cxmey = marker1Cymarker1Cx = mex + (ve1x * AC_Staggering)marker1Cy = mey + (ve1y * AC_Staggering)if GLOB_CONTEXT<>30 and AC_MarkerStart=1 then	line2 mex, mey, marker1Cx, marker1Cy	hotline2 mex, mey, marker1Cx, marker1Cy, hLineID : hLineID = hLineID + 1else	hLineID = hLineID + 1endif!!for marker preview onlyif GLOB_CONTEXT = 30 then	line2 marker1Cx, marker1Cy, marker1Cx + 0.1, marker1Cy	hotline2 marker1Cx, marker1Cy, marker1Cx + 0.1, marker1Cy, hLineID : hLineID = hLineID + 1	markerSize = Marker_Diameter		! circle	if AC_MarkerType_i = i_square then		if AC_MarkerRot then			markerSize = Marker_Diameter / sqr(2)		else			markerSize = Marker_Diameter		endif	endif	if AC_MarkerType_i = i_pentagon then		markerSize = Marker_Diameter / 2 * (1 + cos(36))	endif	if AC_MarkerType_i = i_hexagon then		if AC_MarkerRot then			markerSize = Marker_Diameter * cos(30)		else			markerSize = Marker_Diameter		endif	endif	sss = request("Pen_of_RGB", "1 1 1", whitePen)	if sss then pen whitePen	line2 marker1Cx - markerSize, marker1Cy, marker1Cx - markerSize - 0.1, marker1Cy	pen AC_LinePenelse	hLineID = hLineID + 1endifhot4x = axhot4y = ayhot3x = mexhot3y = meyhot1x = marker1Cxhot1y = marker1Cymex = marker1Cxmey = marker1Cyax = ax + (ve1x * abs(AC_Staggering))ay = ay + (ve1y * abs(AC_Staggering))hot2x = axhot2y = aymarker1Cx = mex + (ve1x * Marker_Diameter/2)marker1Cy = mey + (ve1y * Marker_Diameter/2)! ========== Staggering end lines ==========marker2Cx = AC_EndX + ve2x * stag_dist2marker2Cy = AC_EndY + ve2y * stag_dist2if GLOB_CONTEXT<>30 then	line2 AC_EndX, AC_EndY, marker2Cx , marker2Cy	hotline2 AC_EndX, AC_EndY, marker2Cx , marker2Cy, hLineID : hLineID = hLineID + 1else	hLineID = hLineID + 1endifmex = marker2Cxmey = marker2Cy! ========== line end hotspot ==========	hot6x = mex	hot6y = mey	ax = mex + (ve2x * abs(AC_StaggerDist))	ay = mey + (ve2y * abs(AC_StaggerDist))	marker2Cx = mex + (-ve2y * AC_StaggerDist) + (ve2x * abs(AC_StaggerDist))	marker2Cy = mey + (ve2x * AC_StaggerDist) + (ve2y * abs(AC_StaggerDist))	if GLOB_CONTEXT<>30 and AC_MarkerEnd=1 then		line2 mex, mey, marker2Cx, marker2Cy		hotline2 mex, mey, marker2Cx, marker2Cy, hLineID : hLineID = hLineID + 1	else		hLineID = hLineID + 1	endif	mex = marker2Cx	mey = marker2Cy	marker2Cx = mex + (ve2x * AC_Staggering)	marker2Cy = mey + (ve2y * AC_Staggering)	if GLOB_CONTEXT<>30 and AC_MarkerEnd=1 then		line2 mex, mey, marker2Cx, marker2Cy		hotline2 mex, mey, marker2Cx, marker2Cy, hLineID : hLineID = hLineID + 1	else		hLineID = hLineID + 1	endif	hot7x = ax	hot7y = ay	hot8x = mex	hot8y = mey	hot10x = marker2Cx	hot10y = marker2Cy	mex = marker2Cx	mey = marker2Cy	ax = ax + (ve2x * abs(AC_Staggering))	ay = ay + (ve2y * abs(AC_Staggering))	hot9x = ax	hot9y = ay	marker2Cx = mex + (ve2x * Marker_Diameter/2)	marker2Cy = mey + (ve2y * Marker_Diameter/2)! make Paragraph & TextBlock! ------------------------------------------------------------------------------	define style{2} "textStyleName" AC_TextFont_1, AC_TextSize_1, AC_TextStyle_1	_parAlignment = 1 	! unecessary function for one row	_parLineSpace = 1 	! default	_blockAnchor = 2	! topCenter	_blockHeight = 1	! scale independent paper size	textStyleHeight = 0	textStyleDescent = 0	textStyleLeading = 0	req_id = REQUEST ("Height_of_style", "textStyleName", textStyleHeight, textStyleDescent, textStyleLeading)	textStyleAscent = (textStyleHeight - textStyleDescent - textStyleLeading) 	markerTextBlockPosY = (textStyleAscent - AC_TextSize_1 / 2) * GLOB_SCALE / 1000	PARAGRAPH "parName" _parAlignment, 0, 0, 0, _parLineSpace , 0		pen AC_TextPen_1		style "textStyleName"		AC_MarkerText_1	ENDPARAGRAPH	TEXTBLOCK "markerTextBlock" 0, _blockAnchor, 0, AC_TextCharWidthFactor_1, AC_TextCharSpaceFactor_1, _blockHeight, "parName"SET LINE_TYPE 1! ========== dimension hostposts /must be the first 2/ ==========if AC_Type_i = i_Line then	hotspot2 hot5x, hot5y, 31	hotspot2 hot6x, hot6y, 49else	hotspot2 AC_StartX, AC_StartY, 31	hotspot2 AC_EndX, AC_EndY, 49endifif (AC_MarkerStart = 1 OR GLOB_CONTEXT=30) then	ADD2 marker1Cx , marker1Cy	pen AC_MarkerPen	fill gs_fill_type	if AC_MarkerType_i = i_circle then		if not(shBackgroundFill) then			circle2 0 , 0 , Marker_Diameter/2		else			poly2_b 2, 1+2+4+64, gs_fill_pen, gs_back_pen,					0, 0, 901,					Marker_Diameter/2, 360, 4001		endif	else		alfa_m2=360/res_mark		dy=Marker_Diameter/2-Marker_Diameter/2*cos(alfa_m2/2)		if AC_Type_i = i_Arc then rot2 90		if AC_MarkerRot=1 then			add2 dy, 0			rot2 alfa_m2/2		endif		for m = 1 to res_mark+1			PUT (Marker_Diameter/2)*cos(alfa_m2*m), (Marker_Diameter/2)*sin(alfa_m2*m), 1		next m		poly2_b res_mark+1, 1+2*shBackgroundFill+4+64*shBackgroundFill, gs_fill_pen, gs_back_pen,			GET (NSP)		if AC_MarkerRot=1 then del 2		if AC_Type_i = i_Arc then del 1	endif	pen AC_TextPen_1	if AC_MarkerRot=1 then add2 dy*sgn(AC_Type_i = i_Line), dy*sgn(AC_Type_i = i_Arc)	ROT2 (-1+SYMB_MIRRORED*2)*totalRotate	richtext2 0, markerTextBlockPosY, "markerTextBlock"	hotspot2 0 , 0 , 61	DEL 2	if AC_MarkerRot=1 then del 1endifif (AC_MarkerEnd = 1 AND GLOB_CONTEXT<>30) then	ADD2 marker2Cx , marker2Cy	pen AC_MarkerPen	fill gs_fill_type	if AC_MarkerType_i = i_circle then		if not(shBackgroundFill) then			circle2 0 , 0 , Marker_Diameter/2		else			poly2_b 2, 1+2+4+64, gs_fill_pen, gs_back_pen,					0, 0, 901,					Marker_Diameter/2, 360, 4001		endif	else		alfa_m2=360/res_mark		dy=Marker_Diameter/2-Marker_Diameter/2*cos(alfa_m2/2)		if AC_Type_i = i_Arc then rot2 AC_Angle+90		if AC_MarkerRot=1 then			add2 -dy, 0			rot2 alfa_m2/2		endif		rot2 180		for m = 1 to res_mark+1			PUT (Marker_Diameter/2)*cos(alfa_m2*m), (Marker_Diameter/2)*sin(alfa_m2*m), 1		next m		poly2_b res_mark+1, 1+2*shBackgroundFill+4+64*shBackgroundFill, gs_fill_pen, gs_back_pen,			GET (NSP)		del 1		if AC_MarkerRot=1 then del 2		if AC_Type_i = i_Arc then del 1	endif	pen AC_TextPen_1	if AC_MarkerRot=1 then add2 -dy*sgn(AC_Type_i = i_Line) +dy*sin(AC_Angle)*sgn(AC_Type_i = i_Arc), -dy*cos(AC_Angle)*sgn(AC_Type_i = i_Arc)	ROT2 (-1+SYMB_MIRRORED*2)*totalRotate	richtext2 0, markerTextBlockPosY, "markerTextBlock"	hotspot2 0 , 0 , 62	DEL 2	if AC_MarkerRot=1 then del 1endif! =========================================================================! HotSpots from 1 - 10! =========================================================================if GLOB_CONTEXT<>30 then	if AC_MarkerStart=0 then		hot1x = hot5x		hot1y = hot5y	endif	if AC_MarkerEnd=0 then		hot10x = hot6x		hot10y = hot6y	endif	! ===== 1st half =====	! ===== staggering distance hotspots !end =====	if (AC_Staggering > Eps AND AC_MarkerStart=1) then		hotspot2 hot2x, hot2y, 22, AC_StaggerDist, 1+128		if (abs(hot2x - hot1x) > Eps OR abs(hot2y - hot1y) > Eps) then			hotspot2 hot2x, hot2y, 23, AC_StaggerDist, 3		else			hotspot2 hot2x-ve1y*0.0001, hot2y+((ve1x)*0.0001), 23, AC_StaggerDist, 3		endif		hotspot2 hot1x, hot1y, 24, AC_StaggerDist, 2	endif	if (AC_Type_i = i_Line OR (AC_Type_i = i_Arc AND AC_Extension > Eps)) AND AC_MarkerStart=1 then	! ===== staggering distance hotspots =====		hotspot2 hot3x, hot3y, 25, AC_StaggerDist, 2		if (abs(hot4x - hot3x) > Eps OR abs(hot4y - hot3y) > Eps) then			hotspot2 hot4x, hot4y, 26, AC_StaggerDist, 3		else			hotspot2 hot4x-(ve1y*0.0001), hot4y+((ve1x)*0.0001), 26, AC_StaggerDist, 3		endif		hotspot2 hot4x, hot4y, 27, AC_StaggerDist, 1+128	! ===== staggering length hotspots =====		hotspot2 hot3x, hot3y, 28, AC_Staggering, 2		!hotspot2 hot1x, hot1y, 29, AC_Staggering, 3		if (abs(hot1x - hot3x) > Eps OR abs(hot1y - hot3y) > Eps) then			hotspot2 hot1x, hot1y, 29, AC_Staggering, 3		else			hotspot2 hot1x+(ve1x*0.0001), hot1y+((ve1y)*0.0001), 29, AC_Staggering, 3		endif		hotspot2 hot1x, hot1y, 30, AC_Staggering, 1+128	endif	if AC_Type_i = i_Arc then		if (AC_Extension < Eps OR AC_Staggering > Eps OR AC_MarkerStart=0) then			hotspot2 hot1x-(ve1x*AC_Extension), hot1y - (ve1y*AC_Extension), 32, AC_Extension, 1+128			if (AC_Extension > Eps) then				hotspot2 hot1x-(ve1x*AC_Extension), hot1y - (ve1y*AC_Extension), 33, AC_Extension, 3			else				hotspot2 hot1x-(ve1x*0.0001), hot1y-((ve1y)*0.0001), 33, AC_Extension, 3			endif			hotspot2 hot1x, hot1y, 34, AC_Extension, 2		endif	endif	! ===== 2nd half =====	! ===== staggering distance hotspots end =====	if (AC_Staggering > Eps  AND AC_MarkerEnd=1) then		hotspot2 hot9x, hot9y, 40, AC_StaggerDist, 1+128		if (abs(hot9x - hot10x) > Eps OR abs(hot9y - hot10y) > Eps) then			hotspot2 hot9x, hot9y, 41, AC_StaggerDist, 3		else			hotspot2 hot9x+ve2y*0.0001, hot9y-ve2x*0.0001, 41, AC_StaggerDist, 3		endif		hotspot2 hot10x, hot10y, 42, AC_StaggerDist, 2	endif	if (AC_Type_i = i_Line OR (AC_Type_i = i_Arc AND AC_Extension > Eps)) AND AC_MarkerEnd=1 then	! ===== staggering length hotspots =====		hotspot2 hot8x, hot8y, 46, AC_Staggering, 2		if (abs(hot10x - hot8x) > Eps OR abs(hot10y - hot8y) > Eps) then			hotspot2 hot10x, hot10y, 47, AC_Staggering, 3		else			hotspot2 hot10x+(ve2x*0.0001), hot10y+((ve2y)*0.0001), 47, AC_Staggering, 3		endif		hotspot2 hot10x, hot10y, 48, AC_Staggering, 1+128	! ===== staggering distance hotspots =====		hotspot2 hot8x, hot8y, 43, AC_StaggerDist, 2		if (abs(hot7x - hot8x) > Eps OR abs(hot7y - hot8y) > Eps) then			hotspot2 hot7x, hot7y, 44, AC_StaggerDist, 3		else			hotspot2 hot7x+ve2y*0.0001, hot7y-ve2x*0.0001, 44, AC_StaggerDist, 3		endif		hotspot2 hot7x, hot7y, 45, AC_StaggerDist, 1+128	endif	if AC_Type_i = i_Arc then		if (AC_Extension < Eps OR AC_Staggering > Eps OR AC_MarkerEnd=0) then			hotspot2 hot10x-(ve2x*AC_Extension), hot10y - (ve2y*AC_Extension), 50, AC_Extension, 1+128			if (AC_Extension > Eps) then				hotspot2 hot10x-(ve2x*AC_Extension), hot10y - (ve2y*AC_Extension), 51, AC_Extension, 3			else				hotspot2 hot10x-(ve2x*0.0001), hot10y -((ve2y)*0.0001), 51, AC_Extension, 3			endif			hotspot2 hot10x, hot10y, 52, AC_Extension, 2		endif	endif! ===== Full line length edit =====	if AC_Type_i = i_Line then		if (AC_Staggering > Eps OR AC_MarkerEnd=0) then			hotspot2 hot10x, hot10y, 2, AC_Length, 2			hotspot2 hot10x-(ve2x*AC_Length), hot10y, 4, AC_Length, 1+128		endif		if (AC_Staggering > Eps OR AC_MarkerStart=0) then			hotspot2 hot1x, hot1y, 1, AC_Length, 1+256			hotspot2 hot1x-(ve1x*AC_Length), hot1y, 3, AC_Length, 2+128		endif	else		!hotspot2 0, 0, 12		hotspot2 0, 0, 70, AC_Radius, 1		hotspot2 0, 0, 71, AC_Radius, 3		hotspot2 AC_MidX , AC_MidY, 72, AC_Radius, 2		if (AC_Extension > Eps) then			hotspot2 AC_StartX, AC_StartY, 73, AC_Angle, 4+256			hotspot2 0, 0, 74, AC_Angle, 6			hotspot2 AC_MidX , AC_MidY, 75, AC_Angle, 7			hotspot2 AC_EndX , AC_EndY, 76, AC_Angle, 5		endif	endifendifDEL 1