if GLOB_VIEW_TYPE <> 2 or GLOB_PREVIEW_MODE <> 0 then endROOM_NUMBER = GLOB_IDDEFINE STYLE{2} "ROOM22" AC_TextFont_1, AC_TextSize_1, AC_TextStyle_1DEFINE STYLE{2} "ROOM22_pol" AC_TextFont_1, AC_TextSize_1*2, AC_TextStyle_1name_style_1 = "ROOM22"name_style_2 = "ROOM22_pol"name_style = name_style_1width_factor = AC_TextCharWidthFactor_1charspace_factor = AC_TextCharSpaceFactor_1 anchor = 5STYLE name_style_1area = str("%.2", room_area)paper_scale = GLOB_SCALE/1000!Выносная надписьgosub "vin"n_param = 1!"Номер в круге"if ishow_zone_type = 0 then 	gosub "hotspot_n_param"	txt_in_circle = GLOB_ID	gosub "txt_in_circle"endif!"Номер в круге"if ishow_zone_type = SHT_ID_CIRCLE then 	gosub "hotspot_n_param"	txt_in_circle = GLOB_ID	gosub "txt_in_circle"endif!"Название"if ishow_zone_type = SHT_NAME then 	gosub "hotspot_n_param"	txt_block = ROOM_NAME	gosub "txt_block"endif!"Только площадь"if ishow_zone_type = SHT_AREA then 	gosub "hotspot_n_param"	txt_in_line = area	gosub "txt_in_line"endif!"Название, номер и площадь"if ishow_zone_type = SHT_NAME_AREA_ID then 	gosub "hotspot_n_param"	txt_block = ROOM_NAME	gosub "txt_block"	gosub "hotspot_n_param"	txt_in_line = area	gosub "txt_in_line"	del 1endif!"Номер и тип отделки стен"if ishow_zone_type = SHT_OTD_1 then endif!"Воздухообмен"if ishow_zone_type = SHT_OV then 	gosub "hotspot_n_param"	txt_info = GLOB_ID	txt_info = txt_info + " " + ROOM_NAME	txt_info = txt_info + " " + ov_Temp_wint_txt+"/"+ov_Temp_summ_txt	txt_info = txt_info + " " + ov_System	txt_info = txt_info + " " + "П: "+ov_norm_In_txt+" "+ov_In_txt	txt_info = txt_info + " " + "В: "+ov_norm_Out_txt+" "+ov_Out_txt	txt_block = txt_info	gosub "txt_block"endif!"Номер в круге и площадь"if ishow_zone_type = SHT_ID_AREA then 	gosub "hotspot_n_param"	txt_in_circle = GLOB_ID	gosub "txt_in_circle"	gosub "hotspot_n_param"	txt_in_line = area	gosub "txt_in_line"	del 1endif!"Номер и кол-во человек"if ishow_zone_type = SHT_ID_PPL then 	gosub "hotspot_n_param"	txt_info = ROOM_NAME	if pb_user>0 then txt_info = txt_info + " (" + str("%.0",pb_user)+" чел.)"	txt_block = txt_info	gosub "txt_block"	del 1endif!"Категория зоны"if ishow_zone_type = SHT_CODE then endif!"Категория пож."if ishow_zone_type = SHT_PB then 	gosub "hotspot_n_param"	txt_in_circle = GLOB_ID	gosub "txt_in_circle"	gosub "hotspot_n_param"	txt_in_rect = U	gosub "txt_in_rect"	del 1endif!"Тип отделки"if ishow_zone_type = SHT_OTD_TYPE then 	gosub "hotspot_n_param"endif!"Данные БТИ"if ishow_zone_type = SHT_BTY then 	gosub "hotspot_n_param"endif!"Вывод свойств"if ishow_zone_type = SHT_PROPERTY then 	show_prop_text = 0 : prop_text = ""	success = LIBRARYGLOBAL ("Libraryflobals-as", "show_prop_text", show_prop_text)	if show_prop_text then success = LIBRARYGLOBAL ("Libraryflobals-as", "prop_text", prop_text)	if strlen(prop_text)>0 then		_stPropertyID = prop_text : gosub "getPropertyValue"		if strlen(_stPropertyValue)>0 and _stPropertyValue<>" " then			gosub "hotspot_n_param"			txt_block = _stPropertyValue			gosub "txt_block"		endif	endif	show_prop_rect = 0 : prop_rect = ""	success = LIBRARYGLOBAL ("Libraryflobals-as", "show_prop_rect", show_prop_rect)	if show_prop_rect then success = LIBRARYGLOBAL ("Libraryflobals-as", "prop_rect", prop_rect)	if strlen(prop_rect)>0 then		_stPropertyID = prop_rect : gosub "getPropertyValue"		if strlen(_stPropertyValue)>0 and _stPropertyValue<>" " then			gosub "hotspot_n_param"			txt_in_rect = _stPropertyValue			gosub "txt_in_rect"		endif	endif	show_prop_line = 0 : prop_line = ""	success = LIBRARYGLOBAL ("Libraryflobals-as", "show_prop_line", show_prop_line)	if show_prop_line then success = LIBRARYGLOBAL ("Libraryflobals-as", "prop_line", prop_line)	if strlen(prop_line)>0 then		_stPropertyID = prop_line : gosub "getPropertyValue"		if strlen(_stPropertyValue)>0 and _stPropertyValue<>" " then			gosub "hotspot_n_param"			txt_in_line = _stPropertyValue			gosub "txt_in_line"		endif	endif	show_prop_circle = 0 : prop_circle = ""	success = LIBRARYGLOBAL ("Libraryflobals-as", "show_prop_circle", show_prop_circle)	if show_prop_circle then success = LIBRARYGLOBAL ("Libraryflobals-as", "prop_circle", prop_circle)	if strlen(prop_circle)>0 then		_stPropertyID = prop_circle : gosub "getPropertyValue"		if strlen(_stPropertyValue)>0 and _stPropertyValue<>" " then			gosub "hotspot_n_param"			txt_in_circle = _stPropertyValue			gosub "txt_in_circle"		endif	endif	show_prop_triang = 0 : prop_triang = ""	success = LIBRARYGLOBAL ("Libraryflobals-as", "show_prop_triang", show_prop_triang)	if show_prop_triang then success = LIBRARYGLOBAL ("Libraryflobals-as", "prop_triang", prop_triang)	if strlen(prop_triang)>0 then		_stPropertyID = prop_triang : gosub "getPropertyValue"		if strlen(_stPropertyValue)>0 and _stPropertyValue<>" " then			gosub "hotspot_n_param"			txt_in_triangle = _stPropertyValue			gosub "txt_in_triangle"		endif	endifendifshow_pol = 0 : success = LIBRARYGLOBAL ("Libraryflobals-pokr", "show_pol", show_pol)if show_pol and tip_pol<>"Не задан" then	HOTSPOT2 pos_xv, 0, unID, pos_yv, 1+128: unID=unID+1	HOTSPOT2 pos_xv, pos_yv, unID, pos_yv, 2: unID=unID+1	HOTSPOT2 pos_xv, -1, unID, pos_yv, 3: unID=unID+1	HOTSPOT2 0, pos_yv, unID,pos_xv, 1+128: unID=unID+1	HOTSPOT2 pos_xv, pos_yv, unID, pos_xv, 2: unID=unID+1	HOTSPOT2 -1, pos_yv, unID, pos_xv, 3: unID=unID+1	DRAWINDEX 10	if SQR(pos_xv_pol*pos_xv_pol+pos_yv_pol*pos_yv_pol)>0.17 then line2 pos_xv, pos_yv, pos_xv_pol+pos_xv, pos_yv_pol+pos_yv	DRAWINDEX 30	add2 pos_xv,pos_yv	HOTSPOT2 pos_xv_pol, 0, unID, pos_yv_pol, 1+128: unID=unID+1	HOTSPOT2 pos_xv_pol, pos_yv_pol, unID, pos_yv_pol, 2: unID=unID+1	HOTSPOT2 pos_xv_pol, -1, unID, pos_yv_pol, 3: unID=unID+1	HOTSPOT2 0, pos_yv_pol, unID, pos_xv_pol, 1+128: unID=unID+1	HOTSPOT2 pos_xv_pol, pos_yv_pol, unID, pos_xv_pol, 2: unID=unID+1	HOTSPOT2 -1, pos_yv_pol, unID, pos_xv_pol, 3: unID=unID+1	add2 pos_xv_pol, pos_yv_pol	txt_in_triangle = tip_pol	gosub "txt_in_triangle"endif!Это я пока боюсь удалять, путь полежит.!txt = " "!txt2 = " "!if ishow_zone_type = 1 or ishow_zone_type = 5 or ishow_zone_type = 0 or ishow_zone_type = 7 or ishow_zone_type = 8 or ishow_zone_type = 10 then txt = GLOB_ID!if ishow_zone_type = 2 then txt = ROOM_NAME!if ishow_zone_type = 3 then txt = area!if ishow_zone_type = 9 then txt = name!if ishow_zone_type = 11 then !	txt = GLOB_ID + " " + area + "кв.м."!	txt2 = bti_ID + " " + str("%.2", bti_area_zone) + "кв.м."!endif!!end!!if show_h_pot or ishow_zone_type = 11 then!	success = LIBRARYGLOBAL ("Libraryflobals-pokr", "show_h_pot", show_h_pot)!	txt = ""!	txt = txt + "Hзоны: " + str("%.1mm",ROOM_HEIGHT) + "\n"!	if abs(hroom_pot)>EPS then !		txt = txt + "Hпом: " + str("%.1mm",hroom_pot) + "\n"!		txt = txt + "Hподв: " + str("%.1mm",ROOM_HEIGHT-hroom_pot) + "\n"!	endif!endif!!if ishow_zone_type = 11 then !	txt = txt + "Отделка: " + tip_otd + "\n"!	txt = txt + "Пол: " + tip_pol + "\n"!	txt = txt + "Потолок: " + tip_pot!	if germ_pot=1 then txt = txt + ", ГЕРМЕТИЧЕН"!	txt = txt + "\n"!endif!!i=0!!i = i-1 : text2 0,i,"ROOM_WALLS_SURF =" + str("%.2", ROOM_WALLS_SURF)!!i = i-1 : text2 0,i,"ROOM_BOUNDARY_SURF =" + str("%.2", ROOM_BOUNDARY_SURF)!!if ishow_zone_type = 9 then anchor = 4!!if vartype(txt)=1 then txt = str("%.0",txt)!txtv = txt : tblockname = "txt" : name_style = name_style_1 : gosub "get_block"!!if ishow_zone_type = 1 or ishow_zone_type = 5 or ishow_zone_type = 0 or ishow_zone_type = 7 or ishow_zone_type = 10 then!	DRAWINDEX 50!	RICHTEXT2 0, dx, tblockname!	DRAWINDEX 30!    if Rcir = 0 then!        CIRCLE2 0, 0, AC_TextSize_1 * 0.0012 * A_!		fill GLOB_FILL_INDEX_BACKGROUND!		POLY2_ 2,1+2+4,0,0,900,AC_TextSize_1*0.0012*A_,360,4000+1!    else!        CIRCLE2 0, 0, paper_scale * Rcir!		fill GLOB_FILL_INDEX_BACKGROUND!		POLY2_ 2,1+2+4,0,0,900,paper_scale*Rcir,360,4000+1!    endif!	if ishow_zone_type = 7 then !		del 1!		HOTSPOT2 pos_xy[ishow_zone_num+8][1], 0, unID, pos_xy[ishow_zone_num+8][2], 1+128: unID=unID+1!		HOTSPOT2 pos_xy[ishow_zone_num+8][1], pos_xy[ishow_zone_num+8][2], unID, pos_xy[ishow_zone_num+8][2], 2: unID=unID+1!		HOTSPOT2 pos_xy[ishow_zone_num+8][1], -1, unID, pos_xy[ishow_zone_num+8][2], 3: unID=unID+1!		HOTSPOT2 0, pos_xy[ishow_zone_num+8][2], unID, pos_xy[ishow_zone_num+8][1], 1+128: unID=unID+1!		HOTSPOT2 pos_xy[ishow_zone_num+8][1], pos_xy[ishow_zone_num+8][2], unID, pos_xy[ishow_zone_num+8][1], 2: unID=unID+1!		HOTSPOT2 -1, pos_xy[ishow_zone_num+8][2], unID, pos_xy[ishow_zone_num+8][1], 3: unID=unID+1!		add2 pos_xy[ishow_zone_num+8][1],pos_xy[ishow_zone_num+8][2]!!		txtv = area : tblockname = "txtar" : name_style = name_style_1 : gosub "get_block"!		RICHTEXT2 0, dx, area!		line2 -tbwidth/2, 0, tbwidth/2,0!	endif!endif!if ishow_zone_type = 5 then!	if tip_otd_sten<>"" and tip_otd_sten<>" " and tip_otd_pol<>"" and tip_otd_pol<>" " then!		HOTSPOT2 pos_xy[ishow_zone_num+8][1], 0, unID, pos_xy[ishow_zone_num+8][2], 1+128: unID=unID+1!		HOTSPOT2 pos_xy[ishow_zone_num+8][1], pos_xy[ishow_zone_num+8][2], unID, pos_xy[ishow_zone_num+8][2], 2: unID=unID+1!		HOTSPOT2 pos_xy[ishow_zone_num+8][1], -1, unID, pos_xy[ishow_zone_num+8][2], 3: unID=unID+1!		HOTSPOT2 0, pos_xy[ishow_zone_num+8][2], unID, pos_xy[ishow_zone_num+8][1], 1+128: unID=unID+1!		HOTSPOT2 pos_xy[ishow_zone_num+8][1], pos_xy[ishow_zone_num+8][2], unID, pos_xy[ishow_zone_num+8][1], 2: unID=unID+1!		HOTSPOT2 -1, pos_xy[ishow_zone_num+8][2], unID, pos_xy[ishow_zone_num+8][1], 3: unID=unID+1!		add2 pos_xy[ishow_zone_num+8][1],pos_xy[ishow_zone_num+8][2]!!		TEXTBLOCK "txt11" 0, anchor, 0, width_factor, charspace_factor, 1,tip_otd_sten!		TEXTBLOCK "txt22" 0, anchor, 0, width_factor, charspace_factor, 1,tip_otd_pol!		REQUEST("TEXTBLOCK_INFO", "txt11", width11, height11)!		REQUEST("TEXTBLOCK_INFO", "txt22", width11, height22)!		width33 = 0.9 * max(width11, width22) * paper_scale!!		if width33<0.4 then width33 = 0.4!		CIRCLE2 0, 0, width33!		line2 -width33, 0, width33,0!		RICHTEXT2 0, -theight*0.7, "txt11"!		RICHTEXT2 0, theight/4, "txt22"!	endif!endif!!if ishow_zone_type = 2 or ishow_zone_type = 11 then RICHTEXT2 0, -theight/4, "txt"!!if ishow_zone_type = 3 then!	RICHTEXT2 0, AC_TextSize_1*0.0007*A_, "txt"!	line2 -twidth/2, 0, twidth/2,0!endif!!if ishow_zone_type = 4 or ishow_zone_type = 6  then	!	text2 0, 0,GLOB_ID + " " + ROOM_NAME!	if ishow_zone_type = 4 then text2 0, -8*paper_scale, area + " " + "кв.м."!	if ishow_zone_type = 6 then !		htx = 0 : hty = 0!		htxt_1 = 3!		htx = htx + htxt_1 : text2 hty, -htx*paper_scale, ov_Temp_wint_txt+"/"+ov_Temp_summ_txt!		htx = htx + htxt_1 : text2 hty, -htx*paper_scale,  ov_System!		htx = htx + htxt_1 : text2 hty, -htx*paper_scale,  "П: "+ov_norm_In_txt+" "+ov_In_txt!		htx = htx + htxt_1 : text2 hty, -htx*paper_scale,  "В: "+ov_norm_Out_txt+" "+ov_Out_txt!	endif!endif!!if ishow_zone_type = 8 then!	RICHTEXT2 0, dx, "txt"!	if pb_user>0 then text2 0, -8*paper_scale, str("%.0",pb_user)+" чел."!endif!!if ishow_zone_type = 9 then RICHTEXT2 0, dx, "txt"!!if ishow_zone_type = 10 and U<>"" then!	xadd = tbheight!	txtv = U : tblockname = "U" : name_style = name_style_1 : gosub "get_block"!	xadd = xadd+tbheight*0.5!	add2 0, -xadd!	RICHTEXT2 0, dx, tblockname!	rect2 -tbwidth, -tbheight/1.9, tbwidth, tbheight/1.9!	del 1!endif!!if ishow_zone_type = 11 then!	TEXTBLOCK "txt_bti_1" 0, 5, 0, width_factor, charspace_factor, 1,txt!	TEXTBLOCK "txt_bti_2" 0, 5, 0, width_factor, charspace_factor, 1,txt2!	REQUEST("TEXTBLOCK_INFO", "txt_bti_1", width1, height)!	REQUEST("TEXTBLOCK_INFO", "txt_bti_2", width2, height)!	twidth = max(width1,width2) * paper_scale!	theight = height * paper_scale!	RICHTEXT2 0, theight/4, "txt_bti_1"!	RICHTEXT2 0, -theight/4, "txt_bti_2"!	line2 -twidth/2, 0, twidth/2,0!endif!!del 1!!show_pol = 0 : success = LIBRARYGLOBAL ("Libraryflobals-pokr", "show_pol", show_pol)!if show_pol and tip_pol<>"Не задан" then!	k_scale = 1!	HOTSPOT2 pos_xv, 0, unID, pos_yv, 1+128: unID=unID+1!	HOTSPOT2 pos_xv, pos_yv, unID, pos_yv, 2: unID=unID+1!	HOTSPOT2 pos_xv, -1, unID, pos_yv, 3: unID=unID+1!	HOTSPOT2 0, pos_yv, unID,pos_xv, 1+128: unID=unID+1!	HOTSPOT2 pos_xv, pos_yv, unID, pos_xv, 2: unID=unID+1!	HOTSPOT2 -1, pos_yv, unID, pos_xv, 3: unID=unID+1!	DRAWINDEX 30!	if SQR(pos_xv_pol*pos_xv_pol+pos_yv_pol*pos_yv_pol)>0.17 then line2 pos_xv, pos_yv, pos_xv_pol+pos_xv, pos_yv_pol+pos_yv!	add2 pos_xv,pos_yv!	HOTSPOT2 pos_xv_pol, 0, unID, pos_yv_pol, 1+128: unID=unID+1!	HOTSPOT2 pos_xv_pol, pos_yv_pol, unID, pos_yv_pol, 2: unID=unID+1!	HOTSPOT2 pos_xv_pol, -1, unID, pos_yv_pol, 3: unID=unID+1!	HOTSPOT2 0, pos_yv_pol, unID, pos_xv_pol, 1+128: unID=unID+1!	HOTSPOT2 pos_xv_pol, pos_yv_pol, unID, pos_xv_pol, 2: unID=unID+1!	HOTSPOT2 -1, pos_yv_pol, unID, pos_xv_pol, 3: unID=unID+1!	add2 pos_xv_pol, pos_yv_pol!	mashtab = GLOB_SCALE / 100!	MUL2 mashtab,mashtab!	k = 0.8!	MUL2 k,k!	DRAWINDEX 0!	txtv = tip_pol : tblockname = "tip_pol" : name_style = name_style_2 : gosub "get_block"!	RICHTEXT2 0.5*k_scale,0.3*0.87*k_scale+dx, tblockname!!	DRAWINDEX 40!	fill GLOB_FILL_INDEX_BACKGROUND!	POLY2_B 4,1+2+4,0,19, 0,0,1*k_scale,1*k_scale,0,1*k_scale,0.5*k_scale,0.87*k_scale,1*k_scale, 0,0,-1!	hotspot2 0.5*k_scale,0.87*k_scale/2,unID : unID=unID+1!	hotspot2 0.5*k_scale,0.87*k_scale,unID : unID=unID+1!	hotspot2 0,0,unID : unID=unID+1!	hotspot2 1*k_scale,0,unID : unID=unID+1!endifend"hotspot_n_param":	if NSP>EPS then del 1	HOTSPOT2 0, pos_xy[ishow_zone_num][n_param*2], unID, pos_xy[ishow_zone_num][n_param*2-1], 1+128: unID=unID+1	HOTSPOT2 pos_xy[ishow_zone_num][n_param*2-1], pos_xy[ishow_zone_num][n_param*2], unID, pos_xy[ishow_zone_num][n_param*2-1], 2: unID=unID+1	HOTSPOT2 -1, pos_xy[ishow_zone_num][n_param*2], unID, pos_xy[ishow_zone_num][n_param*2-1], 3: unID=unID+1	HOTSPOT2 pos_xy[ishow_zone_num][n_param*2-1], 0, unID, pos_xy[ishow_zone_num][n_param*2], 1+128: unID=unID+1	HOTSPOT2 pos_xy[ishow_zone_num][n_param*2-1], pos_xy[ishow_zone_num][n_param*2], unID, pos_xy[ishow_zone_num][n_param*2], 2: unID=unID+1	HOTSPOT2 pos_xy[ishow_zone_num][n_param*2-1], -1, unID, pos_xy[ishow_zone_num][n_param*2], 3: unID=unID+1	add2 pos_xy[ishow_zone_num][n_param*2-1],pos_xy[ishow_zone_num][n_param*2]	n_param = n_param + 1return"vin":	if vin_arr[ishow_zone_num] then		DRAWINDEX 10		if abs(pos_xy_vin[ishow_zone_num][2]) < EPS then pos_xy_vin[ishow_zone_num][2] = EPS		if abs(pos_xy_vin[ishow_zone_num][1]) < EPS then pos_xy_vin[ishow_zone_num][1] = EPS		HOTSPOT2 0, pos_xy_vin[ishow_zone_num][2], unID, pos_xy_vin[ishow_zone_num][1], 1+128: unID=unID+1		HOTSPOT2 pos_xy_vin[ishow_zone_num][1], pos_xy_vin[ishow_zone_num][2], unID, pos_xy_vin[ishow_zone_num][1], 2: unID=unID+1		HOTSPOT2 -1, pos_xy_vin[ishow_zone_num][2], unID, pos_xy_vin[ishow_zone_num][1], 3: unID=unID+1		HOTSPOT2 pos_xy_vin[ishow_zone_num][1], 0, unID, pos_xy_vin[ishow_zone_num][2], 1+128: unID=unID+1		HOTSPOT2 pos_xy_vin[ishow_zone_num][1], pos_xy_vin[ishow_zone_num][2], unID, pos_xy_vin[ishow_zone_num][2], 2: unID=unID+1		HOTSPOT2 pos_xy_vin[ishow_zone_num][1], -1, unID, pos_xy_vin[ishow_zone_num][2], 3: unID=unID+1		x1 = pos_xy[ishow_zone_num][1]		y1 = pos_xy[ishow_zone_num][2]		x2 = pos_xy_vin[ishow_zone_num][1]		y2 = pos_xy_vin[ishow_zone_num][2]		t_Rcir = Rcir * paper_scale		if Rcir < EPS then t_Rcir = paper_scale * 3		if sqr((x2-x1)*(x2-x1)+(y2-y1)*(y2-y1))-t_Rcir>EPS then		lmbd = t_Rcir/(sqr((x2-x1)*(x2-x1)+(y2-y1)*(y2-y1))-t_Rcir)ipx1 = (x1 + x2*lmbd) / (1 + lmbd)ipy1 = (y1 + y2*lmbd) / (1 + lmbd)hotspot2 ipx1, ipy1line2 x2, y2, ipx1, ipy1!!state = 0!!call "BasicGeometricCalc" parameters	iFunction	= INTERSECT_CIRCLE_LINE,!!					xo		= x1,!!					yo		= y1,!!					ro		= t_Rcir,!!					linePx		= x2,!!					linePy		= y2,!!					lineVx		= x1,!!					lineVy		= y1,!! 		returned_parameters	ipx1,!!					ipy1,!!					ipx2,!!					ipy2,!!					state!!if state>EPS then!!	line2 x1, y1, ipx1, ipy1!!else!	line2 x1, y1, x2, y2!!endif		endif	endifreturn"get_block":	if vartype(tblockname)<>2 then tblockname = "emp"	if vartype(txtv)<>2 then txtv = str("%.0",txtv)	paragraph tblockname+"p" 2,			0, 0, 0,			1			style name_style			txtv	endparagraph	TEXTBLOCK tblockname 0, anchor, 0, width_factor, charspace_factor, 1,tblockname+"p"	width = AC_TextSize_1 : height = AC_TextSize_1	n = REQUEST("TEXTBLOCK_INFO", tblockname, width, height)	tbwidth = width * paper_scale	tbheight = height * paper_scale	sss=request("Height_of_style", name_style, height, descent, leading)	dx_txt = (height/2-descent-leading-AC_TextSize_1/2)*paper_scale*0.5return"txt_in_circle":	if vartype(txt_in_circle)=1 then txt_in_circle = str("%.0", txt_in_circle)	txtv = txt_in_circle : tblockname = "txt_circle_t" : name_style = name_style_1 : gosub "get_block"	t_Rcir = Rcir * paper_scale	if Rcir < EPS then t_Rcir = paper_scale * 3	if t_Rcir*2 - max(tbwidth,tbheight) < paper_scale then		k_eff = (max(tbwidth,tbheight)+paper_scale)/(t_Rcir*2)		if k_ef>2 then charspace_factor = 0.95		width_factor = 1/min(2,k_eff)		txtv = txt_in_circle : tblockname = "txt_circle_k" : name_style = name_style_1 : gosub "get_block"!		if t_Rcir*2 - max(tbwidth,tbheight) < EPS then t_Rcir = max(paper_scale+max(tbwidth,tbheight)/2, t_Rcir)		width_factor = AC_TextCharWidthFactor_1		charspace_factor = AC_TextCharSpaceFactor_1 	endif	DRAWINDEX 50	text_area.block[n_param-1].abs_centr.x = pos_xy[ishow_zone_num][(n_param-1)*2-1]	text_area.block[n_param-1].abs_centr.y = pos_xy[ishow_zone_num][(n_param-1)*2]	text_area.block[n_param-1].rectarea.x1 = -t_Rcir	text_area.block[n_param-1].rectarea.x2 = t_Rcir	text_area.block[n_param-1].rectarea.y1 = -t_Rcir	text_area.block[n_param-1].rectarea.y2 = t_Rcir	text_area.block[n_param-1].centr.dx = 0	text_area.block[n_param-1].centr.dy = 0	gosub "is_empty_area"	add2 text_area.block[n_param-1].centr.dx, text_area.block[n_param-1].centr.dy	RICHTEXT2 0, dx_txt, tblockname	DRAWINDEX 30	CIRCLE2 0, 0, t_Rcir	fill GLOB_FILL_INDEX_BACKGROUND	POLY2_ 2,1+2+4,0,0,900,t_Rcir,360,4000+1	del 1return"txt_in_triangle":	if vartype(txt_in_triangle)=1 then txt_in_triangle = str("%.0", txt_in_triangle)	txtv = txt_in_triangle : tblockname = "txt_in_triangle" : name_style = name_style_1 : gosub "get_block"	t_Rcir = Rcir * paper_scale	if Rcir < EPS then t_Rcir = paper_scale * 5	a = sqr(3)*t_Rcir/1.5	if a - tbwidth < EPS then		k_eff = (tbwidth+paper_scale)/a		if k_ef>2 then charspace_factor = 0.95		width_factor = 1/min(2,k_eff)		txtv = txt_in_triangle : tblockname = "txt_in_triangle_k" : name_style = name_style_1 : gosub "get_block"		if a - tbwidth < EPS then t_Rcir = (paper_scale+tbwidth)*1.5/sqr(3)		width_factor = AC_TextCharWidthFactor_1		charspace_factor = AC_TextCharSpaceFactor_1 	endif	put cos(30)*t_Rcir, -sin(30)*t_Rcir, 1	put -cos(30)*t_Rcir, -sin(30)*t_Rcir, 1	put 0, t_Rcir, 1	DRAWINDEX 50	text_area.block[n_param-1].abs_centr.x = pos_xy[ishow_zone_num][(n_param-1)*2-1]	text_area.block[n_param-1].abs_centr.y = pos_xy[ishow_zone_num][(n_param-1)*2]	text_area.block[n_param-1].rectarea.x1 = -t_Rcir	text_area.block[n_param-1].rectarea.x2 = t_Rcir	text_area.block[n_param-1].rectarea.y1 = -t_Rcir	text_area.block[n_param-1].rectarea.y2 = t_Rcir	text_area.block[n_param-1].centr.dx = 0	text_area.block[n_param-1].centr.dy = 0	gosub "is_empty_area"	add2 text_area.block[n_param-1].centr.dx, text_area.block[n_param-1].centr.dy	RICHTEXT2 0, dx_txt-t_Rcir*0.1, tblockname	DRAWINDEX 30	fill GLOB_FILL_INDEX_BACKGROUND	POLY2_ NSP/3,1+2+4,get(NSP)	del 1return"txt_in_rect":	txt_block = txt_in_rect	s = 1 + 2 + 4	gosub "txt"	del 1return"txt_in_line":	txt_block = txt_in_line	s = 2 + 4	gosub "txt"	line2 -tbwidth/1.9, -tbheight/1.9, tbwidth/1.9, -tbheight/1.9	del 1return"txt_block":	s = 2 + 4	gosub "txt"	del 1return"txt":	gosub "peren"	DRAWINDEX 50	text_area.block[n_param-1].abs_centr.x = pos_xy[ishow_zone_num][(n_param-1)*2-1]	text_area.block[n_param-1].abs_centr.y = pos_xy[ishow_zone_num][(n_param-1)*2]	text_area.block[n_param-1].rectarea.x1 = -tbwidth/1.9	text_area.block[n_param-1].rectarea.x2 = tbwidth/1.9	text_area.block[n_param-1].rectarea.y1 = -tbheight/1.9	text_area.block[n_param-1].rectarea.y2 = tbheight/1.9	text_area.block[n_param-1].centr.dx = 0	text_area.block[n_param-1].centr.dy = 0	gosub "is_empty_area"	add2 text_area.block[n_param-1].centr.dx, text_area.block[n_param-1].centr.dy	RICHTEXT2 0, dx_txt, tblockname	DRAWINDEX 30	fill GLOB_FILL_INDEX_BACKGROUND	POLY2_ 4,s , -tbwidth/1.9, -tbheight/1.9, 1, -tbwidth/1.9, tbheight/1.9, 1, tbwidth/1.9, tbheight/1.9, 1, tbwidth/1.9, -tbheight/1.9, 1return"peren":	name_style = name_style_1	if vartype(txt_block)=1 then txt_block = str("%.0", txt_block)	txtv = txt_block : tblockname = "txt_block"+txt_block : gosub "get_block"	if STRSTR(txt_block, " ")>0 then		n_param_t = SHT_MAX-n_param		HOTSPOT2 0, 0, unID, pos_xy[ishow_zone_num][n_param_t*2-1], 1+128: unID=unID+1		HOTSPOT2 pos_xy[ishow_zone_num][n_param_t*2-1], 0, unID, pos_xy[ishow_zone_num][n_param_t*2-1], 2: unID=unID+1		HOTSPOT2 -1, 0, unID, pos_xy[ishow_zone_num][n_param_t*2-1], 3: unID=unID+1		mlb_l_max = pos_xy[ishow_zone_num][n_param_t*2-1]*2		if tbwidth-mlb_l_max>EPS then			dim mlb_out_str_arr[]			call "macro_line_break" parameters mlb_in_str=txt_block, mlb_l_max=mlb_l_max,												RETURNED_PARAMETERS mlb_n_row, mlb_out_str, mlb_out_str_arr			txtv = mlb_out_str : tblockname = "txt_block_peren"+txt_block : gosub "get_block"		endif	endifreturn"is_empty_area":	if haskey(text_area.block) and n_param>2 and auto_block then		m = n_param-1		for k=1 to n_param-1			if k<>m then				x_max_m = 0 : x_min_m = 0 : y_max_m = 0 : y_min_m = 0				if haskey(text_area.block[m]) then					if haskey(text_area.block[m].abs_centr) then						dx = text_area.block[m].centr.dx						dy = text_area.block[m].centr.dy						x_max_m = text_area.block[m].abs_centr.x + max(text_area.block[m].rectarea.x1, text_area.block[m].rectarea.x2) + dx						x_min_m = text_area.block[m].abs_centr.x + min(text_area.block[m].rectarea.x1, text_area.block[m].rectarea.x2) + dx						y_max_m = text_area.block[m].abs_centr.y + max(text_area.block[m].rectarea.y1, text_area.block[m].rectarea.y2) + dy						y_min_m = text_area.block[m].abs_centr.y + min(text_area.block[m].rectarea.y1, text_area.block[m].rectarea.y2) + dy					endif				endif				x_max_k = 0 : x_min_k = 0 : y_max_k = 0 : y_min_k = 0				if haskey(text_area.block[k]) then					if haskey(text_area.block[k].abs_centr) then						dx = text_area.block[k].centr.dx						dy = text_area.block[k].centr.dy							x_max_k = text_area.block[k].abs_centr.x + max(text_area.block[k].rectarea.x1, text_area.block[k].rectarea.x2) + dx						x_min_k = text_area.block[k].abs_centr.x + min(text_area.block[k].rectarea.x1, text_area.block[k].rectarea.x2) + dx						y_max_k = text_area.block[k].abs_centr.y + max(text_area.block[k].rectarea.y1, text_area.block[k].rectarea.y2) + dy						y_min_k = text_area.block[k].abs_centr.y + min(text_area.block[k].rectarea.y1, text_area.block[k].rectarea.y2) + dy					endif				endif				is_x_max = x_max_m<=x_max_k and x_max_m>x_min_k				is_x_min = x_min_m<=x_max_k and x_min_m>x_min_k				is_y_max = y_max_m<=y_max_k and y_max_m>y_min_k				is_y_min = y_min_m<=y_max_k and y_min_m>y_min_k				dx = 0 : dy = 0				if (is_x_max or is_x_min) and (is_y_max or is_y_min) then					if is_x_max and is_x_min then						if is_y_max then dy = y_min_k - y_max_m - paper_scale/2						if is_y_min then dy = y_max_k - y_min_m + paper_scale/2					else						if is_x_max then dx = x_min_k - x_max_m - paper_scale/2						if is_x_min then dx = x_max_k - x_min_m + paper_scale/2					endif					if abs(dx)>EPS then text_area.block[m].centr.dx = text_area.block[m].centr.dx + dx					if abs(dy)>EPS then text_area.block[m].centr.dy = text_area.block[m].centr.dy + dy				endif			endif		next k	endifreturn"getPropertyValue":	_stPropertyValue = ""	propInputIds.propertyIds[1].id = _stPropertyID	if HASKEY(propOutputVals.propertyValues) then t = REMOVEKEY(propOutputVals.propertyValues)	n = REQUEST ("Property_Values_Of_Parent", propInputIds, propOutputVals)	if propOutputVals.propertyValues[1].value_status = 1 then		_typeValue = propOutputVals.propertyValues[1].type		_value = 0		for j = 1 to vardim1(propOutputVals.propertyValues[1].value)			_value = propOutputVals.propertyValues[1].value[j]			flag_empty=0			if vartype(_value)=1 and _typeValue <> 1 then				if abs(_value)<EPS then					flag_empty=1				else					if _typeValue = 2 then _value = str("%.0", _value)					if _typeValue = 3 then _value = str("%.2", _value)					if _typeValue = 5 then _value = str("%.3", _value)					if _typeValue = 6 then _value = str("%.2", _value)					if _typeValue = 7 then _value = str("%.2", _value)				endif			endif			if _typeValue = 1 then				if propOutputVals.propertyValues[1].value[j]>EPS then					_value = "Да"				else					_value = "Нет"				endif			endif			if vartype(_value)=2 then				if strlen(_value)=0 or _value=" " then					flag_empty=1				endif			endif			if not(flag_empty) then				if j > 1 then					_stPropertyValue = _stPropertyValue + "; " + _value				else					_stPropertyValue = _value				endif			endif		next j	endif	if HASKEY(propInputIds.propertyIds) then t = REMOVEKEY(propInputIds.propertyIds)if vartype(_stPropertyValue)<>2 then	_stPropertyValue = ""	text2 0,0,_stPropertyValueendifreturn