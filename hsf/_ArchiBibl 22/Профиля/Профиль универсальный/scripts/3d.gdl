gosub "set_show_3d"if not(show) or det_lvl_3d=0 then endgosub "get_mat"gosub "set_mat"show_empty=1!HOTSPOT 0, 0,	0.6*l_pos_prof, unID, rot_surf,	4+128: unID=unID+1!HOTSPOT 0,	0,	0,	unID,	rot_surf,	6: unID=unID+1!HOTSPOT 0,	1,	0,	unID,	rot_surf,	7: unID=unID+1!roty rot_surfIF GLOB_CONTEXT=2 and not(iscall) and not(show_all_proj) THEN det_lvl_3d = 1if show_only_axsis then det_lvl_3d = 1if GLOB_PREVIEW_MODE=1 or GLOB_PREVIEW_MODE=2 or GLOB_FEEDBACK_MODE=1 then	gs_resol = 3	det_lvl_3d = 1else	if GLOB_SEO_TOOL_MODE = 1 then		gs_resol = 9		show_empty = 0	else		if gs_resol<10 then gs_resol=12	endifendifws = ws / 1000ds = ds / 1000wt = wt / 1000ft = ft / 1000rr = rr / 1000tr = tr / 1000dbf = dbf / 1000add pos_prof_call_xyz[ix], pos_prof_call_xyz[iy], pos_prof_call_xyz[iz]rotz phi_callroty etta_callif show_only_axsis=0 then	if type_coord=1 then gosub "hotspot3d_coord"	if type_coord=2 then gosub "hotspot3d_rphi"	gosub "line3d" !Линия между точками построенияendif!Подвинули и повернули СК в 3дadd pos_prof[is][ix], pos_prof[is][iy], pos_prof[is][iz]rotz ang_plroty anggosub "rot3d_axis"rotz ang_axisroty offset_angrotx offset_ang_pladd offset_prof[is][ix], offset_prof[is][iy],0max_0 = max(max_cut,offset_body_s,offset_body_e)+0.1 !Длина оператора, с запасомho = max(aa, bb)*2+0.1 !Высота оператора, с запасом!Отступы начала и концаHOTSPOT	aa/2,	bb/2,	0,	unID,	offset_s,	1+128: unID=unID+1HOTSPOT	aa/2,	bb/2,	offset_s,	unID,	offset_s,	2: unID=unID+1HOTSPOT	aa/2,	bb/2,	offset_s-1,	unID,	offset_s,	3: unID=unID+1HOTSPOT	aa/2,	bb/2,	offset_r,	unID,	offset_e,	1+128: unID=unID+1HOTSPOT	aa/2,	bb/2,	offset_r-offset_e,	unID,	offset_e,	2: unID=unID+1HOTSPOT	aa/2,	bb/2,	offset_r*2,	unID,	offset_e,	3: unID=unID+1if type_fin_s=3 then	if zagf_flange_left=1 then rotz -180	HOTSPOT	z_th_left,	0,	offset_s,	unID,	zagf_h_left,	1+128: unID=unID+1	HOTSPOT	z_th_left,	0,	zagf_h_left+offset_s,	unID,	zagf_h_left,	2: unID=unID+1	HOTSPOT	z_th_left,	0,	-1,	unID,	zagf_h_left,	3: unID=unID+1	if zagf_flange_left=1 then del 1endifif type_fin_e=3 then	if zagf_flange_right=1 then rotz -180	HOTSPOT	z_th_right,	0,	offset_r-offset_e,	unID,	zagf_h_right,	1+128: unID=unID+1	HOTSPOT	z_th_right,	0,	offset_r-zagf_h_right-offset_e,	unID,	zagf_h_right,	2: unID=unID+1	HOTSPOT	z_th_right,	0,	offset_r*2,	unID,	zagf_h_right,	3: unID=unID+1	if zagf_flange_right=1 then del 1endifif type_fin_s=3 and det_lvl_3d=2 then 	group "zagfs"		if zagf_flange_left=1 and type_cutf_s = 1 then rotz 180		if zagf_flange_left=2 and type_cutf_s = 2 then rotz 180		addz offset_body_s		rotx -90 		roty -90		jt=15		ji=1+5+8		type_weld = type_weld_s		type_weld_ang = 0		show_weld_line = 1		if type_cutf_s = 1 then			put	0,z_th_left-zagf_hoff_left*(zagf_hoff_left>EPS),jt			put	zf_b_left,z_th_left-zagf_hoff_left*(zagf_hoff_left>EPS),jt			put	zf_b_left,zf_h_left_l,jt			put	0,zagf_h_left+z_th_left,jt			put	-zf_b_left,zf_h_left_p,jt			put	-zf_b_left,z_th_left-zagf_hoff_left*(zagf_hoff_left>EPS),jt			ang_axis_weld = 180			pos_weld[is][ix]=zf_b_left : pos_weld[is][iy]=z_th_left : pos_weld[is][iz]=0			pos_weld[ie][ix]=-zf_b_left : pos_weld[ie][iy]=z_th_left : pos_weld[ie][iz]=0			gosub "set_weld"			ang_axis_weld = 0			pos_weld[is][ix]=-zf_b_left : pos_weld[is][iy]=z_th_left : pos_weld[is][iz]=-zagf_th_left			pos_weld[ie][ix]=zf_b_left : pos_weld[ie][iy]=z_th_left : pos_weld[ie][iz]=-zagf_th_left			gosub "set_weld"			if zagf_hoff_left>EPS then				ang_axis_weld = 90				pos_weld[is][ix]=bb : pos_weld[is][iy]=z_th_left : pos_weld[is][iz]=0				pos_weld[ie][ix]=bb : pos_weld[ie][iy]=-zagf_hoff_left+z_th_left : pos_weld[ie][iz]=0				gosub "set_weld"				ang_axis_weld = 0				pos_weld[is][ix]=bb : pos_weld[is][iy]=z_th_left : pos_weld[is][iz]=-zagf_th_left				pos_weld[ie][ix]=bb : pos_weld[ie][iy]=-zagf_hoff_left+z_th_left : pos_weld[ie][iz]=-zagf_th_left				gosub "set_weld"				ang_axis_weld = 180				pos_weld[is][ix]=-bb : pos_weld[is][iy]=z_th_left : pos_weld[is][iz]=0				pos_weld[ie][ix]=-bb : pos_weld[ie][iy]=-zagf_hoff_left+z_th_left : pos_weld[ie][iz]=0				gosub "set_weld"				ang_axis_weld = 270				pos_weld[is][ix]=-bb : pos_weld[is][iy]=z_th_left : pos_weld[is][iz]=-zagf_th_left				pos_weld[ie][ix]=-bb : pos_weld[ie][iy]=-zagf_hoff_left+z_th_left : pos_weld[ie][iz]=-zagf_th_left				gosub "set_weld"			endif		endif		if type_cutf_s = 2 then			roty 90			put	0,z_th_left-zagf_hoff_left*(zagf_hoff_left>EPS),jt			put	zf_a_left,z_th_left-zagf_hoff_left*(zagf_hoff_left>EPS),jt			put	zf_a_left,zf_h_left_v,jt			put	0,zagf_h_left+z_th_left,jt			put	-zf_a_left,zf_h_left_n,jt			put	-zf_a_left,z_th_left-zagf_hoff_left*(zagf_hoff_left>EPS),jt			ang_axis_weld = 180			pos_weld[is][ix]=zf_a_left : pos_weld[is][iy]=z_th_left : pos_weld[is][iz]=0			pos_weld[ie][ix]=-zf_a_left : pos_weld[ie][iy]=z_th_left : pos_weld[ie][iz]=0			gosub "set_weld"			ang_axis_weld = 0			pos_weld[is][ix]=-zf_a_left : pos_weld[is][iy]=z_th_left : pos_weld[is][iz]=-zagf_th_left			pos_weld[ie][ix]=zf_a_left : pos_weld[ie][iy]=z_th_left : pos_weld[ie][iz]=-zagf_th_left			gosub "set_weld"			if zagf_hoff_left>EPS then				ang_axis_weld = 90				pos_weld[is][ix]=aa : pos_weld[is][iy]=z_th_left : pos_weld[is][iz]=0				pos_weld[ie][ix]=aa : pos_weld[ie][iy]=-zagf_hoff_left+z_th_left : pos_weld[ie][iz]=0				gosub "set_weld"				ang_axis_weld = 0				pos_weld[is][ix]=aa : pos_weld[is][iy]=z_th_left : pos_weld[is][iz]=-zagf_th_left				pos_weld[ie][ix]=aa : pos_weld[ie][iy]=-zagf_hoff_left+z_th_left : pos_weld[ie][iz]=-zagf_th_left				gosub "set_weld"				ang_axis_weld = 180				pos_weld[is][ix]=-aa : pos_weld[is][iy]=z_th_left : pos_weld[is][iz]=0				pos_weld[ie][ix]=-aa : pos_weld[ie][iy]=-zagf_hoff_left+z_th_left : pos_weld[ie][iz]=0				gosub "set_weld"				ang_axis_weld = 270				pos_weld[is][ix]=-aa : pos_weld[is][iy]=z_th_left : pos_weld[is][iz]=-zagf_th_left				pos_weld[ie][ix]=-aa : pos_weld[ie][iy]=-zagf_hoff_left+z_th_left : pos_weld[ie][iz]=-zagf_th_left				gosub "set_weld"			endif		endif		PRISM_ nsp/3, -zagf_th_left, get(nsp)		if zagf_flange_left then			roty 90			addx zagf_th_left			addz -zagf_th_left/2			if type_cutf_s = 1 then				put	0,z_th_left,600+jt				put	zf_a_left-zagf_th_left,0,200+jt				put	zagf_h_left,90,200+jt				put	-zf_a_left+zagf_th_left,0,200+jt				put	0,z_th_left,jt				ang_axis_weld = 0				pos_weld[is][ix]=zagf_th_left : pos_weld[is][iy]=z_th_left : pos_weld[is][iz]=0				pos_weld[ie][ix]=zf_a_left-zagf_th_left : pos_weld[ie][iy]=z_th_left : pos_weld[ie][iz]=0				gosub "set_weld"				ang_axis_weld = 90				pos_weld[is][ix]=zagf_th_left : pos_weld[is][iy]=z_th_left : pos_weld[is][iz]=zagf_th_left				pos_weld[ie][ix]=zf_a_left-zagf_th_left: pos_weld[ie][iy]=z_th_left : pos_weld[ie][iz]=zagf_th_left				gosub "set_weld"			endif			if type_cutf_s = 2 then				put	0,z_th_left,600+jt				put	zf_b_left-zagf_th_left,0,200+jt				put	zagf_h_left,90,200+jt				put	-zf_b_left+zagf_th_left,0,200+jt				put	0,z_th_left,jt				ang_axis_weld = 0				pos_weld[is][ix]=zagf_th_left : pos_weld[is][iy]=z_th_left : pos_weld[is][iz]=0				pos_weld[ie][ix]=zf_b_left-zagf_th_left : pos_weld[ie][iy]=z_th_left : pos_weld[ie][iz]=0				gosub "set_weld"				ang_axis_weld = 90				pos_weld[is][ix]=zagf_th_left : pos_weld[is][iy]=z_th_left : pos_weld[is][iz]=zagf_th_left				pos_weld[ie][ix]=zf_b_left-zagf_th_left: pos_weld[ie][iy]=z_th_left : pos_weld[ie][iz]=zagf_th_left				gosub "set_weld"			endif			PRISM_ nsp/3, zagf_th_left, get(nsp)			del 3		endif		if type_cutf_s = 2 then del 1		del 3		if zagf_flange_left=1 then del 1	endgroupendifif type_fin_s=4 and det_lvl_3d=2 then	addz offset_body_s	gosub "zags_weld"	del 1endifif type_fin_e=4 and det_lvl_3d=2 then	addz offset_r-offset_body_e	gosub "zage_weld"	del 1endifif (type_fin_s=1 or (type_fin_s=3 and not(zagf_zag_left))) and det_lvl_3d=2 then	group "zags"		addz offset_body_s		gosub "zags_weld"		rotx -90 		roty -90		jc=15		ji=1+4+8		if type_cutf_s = 1 then			t_z = aa + out_left_vn			put	0,0,600+ji			put	z_b_left_l,-pos_cutf[is][il]*null_ang_s,200+jc			put	z_th_left,90-pos_cutf[is][il]*null_ang_s,200+jc			put	z_b_left_l-delta_th_left_l,180-pos_cutf[is][il]*null_ang_s,200+jc			put	z_b_left_p+delta_th_left_l,-pos_cutf[is][ip]*null_ang_s,200+jc			put	z_th_left,-90-pos_cutf[is][ip]*null_ang_s,200+jc			put	0,0,ji		endif		if type_cutf_s = 2 then			t_z = bb + out_left			roty 90			put	0,0,600+ji			put	z_a_left_v,-pos_cutf[is][iv]*null_ang_s,200+jc			put	z_th_left,90-pos_cutf[is][iv]*null_ang_s,200+jc			put	z_a_left_v-delta_th_left_n,180-pos_cutf[is][iv]*null_ang_s,200+jc			put	z_a_left_n+delta_th_left_n,-pos_cutf[is][in]*null_ang_s,200+jc			put	z_th_left,-90-pos_cutf[is][in]*null_ang_s,200+jc			put	0,0,ji		endif		hotspot 0,d_z_th_left,0		addz -t_z		PRISM_ nsp/3, t_z*2, get(nsp)		del 4	endgroup	if type_fin_s=3 then		zags_f = SUBGROUP("zags", "zagfs")		if show_list then placegroup zags_f		killgroup zags_f	else		if show_list then placegroup "zags"	endif	killgroup "zags"endifif type_fin_s=2 and det_lvl_3d=2 then 	group "pod_s"		addz offset_body_s		if type_cutf_s = 1 then			roty -90			rotx 90			roty pos_cutf[is][il]			t_z = abs((bb+pod_av_s)*tan(pos_cutf[is][il]))+abs((bb+pod_av_s)*cos(pos_cutf[is][il]))			if pod_av_s>0 then				put -0.01,0,15				put -0.01,2*aa+0.01,15				put pod_av_s*cos(pos_cutf[is][il]),2*aa+0.01,15				put pod_av_s*cos(pos_cutf[is][il]),pod_rn_s,15				if pod_rn_s>EPS then put pod_rn_s,-90,2000+15				put pod_av_s*cos(pos_cutf[is][il])-pod_rn_s,0,15				put -0.01,0,-1				addy pod_bv_s				addz -t_z				PRISM_ nsp/3, t_z*2, get(nsp)				del 2			endif			addy -pod_bn_s			t_z = abs((bb+pod_an_s)*tan(pos_cutf[is][il]))+abs((bb+pod_an_s)*cos(pos_cutf[is][il]))			if pod_an_s>0 then				put -0.01,0,15				put -0.01,-2*aa,15				put pod_an_s*cos(pos_cutf[is][il]),-2*aa,15				put pod_an_s*cos(pos_cutf[is][il]),-pod_rv_s,15				if pod_rv_s>EPS then put pod_rv_s,90,2000+15				put pod_an_s*cos(pos_cutf[is][il])-pod_rv_s,0,15				put -0.01,0,-1				addz -t_z				PRISM_ nsp/3, t_z*2, get(nsp)			endif		endif		if type_cutf_s = 2 then			roty -90			roty -pos_cutf[is][in]			t_z = abs((aa+pod_av_s)*tan(pos_cutf[is][iv]))+abs((aa+pod_av_s)*cos(pos_cutf[is][iv]))			if pod_av_s>0 then				put -0.01,0,15				put -0.01,2*bb+0.01,15				put pod_av_s*cos(pos_cutf[is][iv]),2*bb+0.01,15				put pod_av_s*cos(pos_cutf[is][iv]),pod_rn_s,15				if pod_rn_s>EPS then put pod_rn_s,-90,2000+15				put pod_av_s*cos(pos_cutf[is][iv])-pod_rn_s,0,15				put -0.01,0,-1				addy pod_bv_s				addz -t_z				PRISM_ nsp/3, t_z*2, get(nsp)				del 2			endif			addy -pod_bn_s			t_z = abs((aa+pod_an_s)*tan(pos_cutf[is][iv]))+abs((aa+pod_an_s)*cos(pos_cutf[is][iv]))			if pod_an_s>0 then				put -0.01,0,15				put -0.01,-2*bb,15				put pod_an_s*cos(pos_cutf[is][iv]),-2*bb,15				put pod_an_s*cos(pos_cutf[is][iv]),-pod_rv_s,15				if pod_rv_s>EPS then put pod_rv_s,90,2000+15				put pod_an_s*cos(pos_cutf[is][iv])-pod_rv_s,0,15				put -0.01,0,-1				addz -t_z				PRISM_ nsp/3, t_z*2, get(nsp)			endif		endif		del 1	endgroupendifif type_fin_e=2 and det_lvl_3d=2 then 	group "pod_e"		addz offset_r-offset_body_e		rotx 180		if type_cutf_e = 1 then			roty -90			rotx 90			roty -pos_cutf[ie][il]			t_z = abs((bb+pod_av_e)*tan(pos_cutf[ie][il]))+abs((bb+pod_av_e)*cos(pos_cutf[ie][il]))			if pod_av_e>0 then				put -0.01,0,15				put -0.01,2*aa+0.01,15				put pod_av_e*cos(pos_cutf[ie][il]),2*aa+0.01,15				put pod_av_e*cos(pos_cutf[ie][il]),pod_rv_e,15				if pod_rv_e>EPS then put pod_rv_e,-90,2000+15				put pod_av_e*cos(pos_cutf[ie][il])-pod_rv_e,0,15				put -0.01,0,-1				addy pod_bv_e				addz -t_z				PRISM_ nsp/3, t_z*2, get(nsp)				del 2			endif			addy -pod_bn_e			t_z = abs((bb+pod_an_e)*tan(pos_cutf[ie][il]))+abs((bb+pod_an_e)*cos(pos_cutf[ie][il]))			if pod_an_e>0 then				put -0.01,0,15				put -0.01,-2*aa,15				put pod_an_e*cos(pos_cutf[ie][il]),-2*aa,15				put pod_an_e*cos(pos_cutf[ie][il]),-pod_rn_e,15				if pod_rn_e>EPS then put pod_rn_e,90,2000+15				put pod_an_e*cos(pos_cutf[ie][il])-pod_rn_e,0,15				put -0.01,0,-1				addz -t_z				PRISM_ nsp/3, t_z*2, get(nsp)			endif		endif		if type_cutf_e = 2 then			roty -90			roty -pos_cutf[ie][in]			t_z = abs((aa+pod_av_e)*tan(pos_cutf[ie][iv]))+abs((aa+pod_av_e)*cos(pos_cutf[ie][iv]))			if pod_av_e>0 then				put -0.01,0,15				put -0.01,2*bb+0.01,15				put pod_av_e*cos(pos_cutf[ie][iv]),2*bb+0.01,15				put pod_av_e*cos(pos_cutf[ie][iv]),pod_rv_e,15				if pod_rv_e>EPS then put pod_rv_e,-90,2000+15				put pod_av_e*cos(pos_cutf[ie][iv])-pod_rv_e,0,15				put -0.01,0,-1				addy pod_bv_e				addz -t_z				PRISM_ nsp/3, t_z*2, get(nsp)				del 2			endif			addy -pod_bn_e			t_z = abs((aa+pod_an_e)*tan(pos_cutf[ie][iv]))+abs((aa+pod_an_e)*cos(pos_cutf[ie][iv]))			if pod_an_e>0 then				put -0.01,0,15				put -0.01,-2*bb,15				put pod_an_e*cos(pos_cutf[ie][iv]),-2*bb,15				put pod_an_e*cos(pos_cutf[ie][iv]),-pod_rn_e,15				if pod_rn_e>EPS then put pod_rn_e,90,2000+15				put pod_an_e*cos(pos_cutf[ie][iv])-pod_rn_e,0,15				put -0.01,0,-1				addz -t_z				PRISM_ nsp/3, t_z*2, get(nsp)			endif		endif	endgroupendifif type_fin_e=3 and det_lvl_3d=2 then 	group "zagfe"		type_weld = type_weld_e		if zagf_flange_right=1 then rotz 180		addz offset_r-offset_body_e		rotx 90 		roty -90		jt=15		ji=1+4+8		if type_cutf_e = 1 then			put	0,z_th_right-zagf_hoff_right*(zagf_hoff_right>EPS),jt			put	zf_b_right,z_th_right-zagf_hoff_right*(zagf_hoff_right>EPS),jt			put	zf_b_right,zf_h_right_p,jt			put	0,zagf_h_right+z_th_right,jt			put	-zf_b_right,zf_h_right_l,jt			put	-zf_b_right,z_th_right-zagf_hoff_right*(zagf_hoff_right>EPS),jt			ang_axis_weld = 180			pos_weld[is][ix]=zf_b_right : pos_weld[is][iy]=z_th_right : pos_weld[is][iz]=0			pos_weld[ie][ix]=-zf_b_right : pos_weld[ie][iy]=z_th_right : pos_weld[ie][iz]=0			gosub "set_weld"			ang_axis_weld = 0			pos_weld[is][ix]=-zf_b_right : pos_weld[is][iy]=z_th_right : pos_weld[is][iz]=-zagf_th_right			pos_weld[ie][ix]=zf_b_right : pos_weld[ie][iy]=z_th_right : pos_weld[ie][iz]=-zagf_th_right			gosub "set_weld"			if zagf_hoff_right>EPS then				ang_axis_weld = 90				pos_weld[is][ix]=bb : pos_weld[is][iy]=z_th_right : pos_weld[is][iz]=0				pos_weld[ie][ix]=bb : pos_weld[ie][iy]=-zagf_hoff_right+z_th_right : pos_weld[ie][iz]=0				gosub "set_weld"				ang_axis_weld = 0				pos_weld[is][ix]=bb : pos_weld[is][iy]=z_th_right : pos_weld[is][iz]=-zagf_th_right				pos_weld[ie][ix]=bb : pos_weld[ie][iy]=-zagf_hoff_right+z_th_right : pos_weld[ie][iz]=-zagf_th_right				gosub "set_weld"				ang_axis_weld = 180				pos_weld[is][ix]=-bb : pos_weld[is][iy]=z_th_right : pos_weld[is][iz]=0				pos_weld[ie][ix]=-bb : pos_weld[ie][iy]=-zagf_hoff_right+z_th_right : pos_weld[ie][iz]=0				gosub "set_weld"				ang_axis_weld = 270				pos_weld[is][ix]=-bb : pos_weld[is][iy]=z_th_right : pos_weld[is][iz]=-zagf_th_right				pos_weld[ie][ix]=-bb : pos_weld[ie][iy]=-zagf_hoff_right+z_th_right : pos_weld[ie][iz]=-zagf_th_right				gosub "set_weld"			endif		endif		if type_cutf_e = 2 then			roty -90			put	0,z_th_right-zagf_hoff_right*(zagf_hoff_right>EPS),jt			put	zf_a_right,z_th_right-zagf_hoff_right*(zagf_hoff_right>EPS),jt			put	zf_a_right,zf_h_right_v,jt			put	0,zagf_h_right+z_th_right,ji			put	-zf_a_right,zf_h_right_n,jt			put	-zf_a_right,z_th_right-zagf_hoff_right*(zagf_hoff_right>EPS),jt			ang_axis_weld = 180			pos_weld[is][ix]=zf_a_right : pos_weld[is][iy]=z_th_right : pos_weld[is][iz]=0			pos_weld[ie][ix]=-zf_a_right : pos_weld[ie][iy]=z_th_right : pos_weld[ie][iz]=0			gosub "set_weld"			ang_axis_weld = 0			pos_weld[is][ix]=-zf_a_right : pos_weld[is][iy]=z_th_right : pos_weld[is][iz]=-zagf_th_right			pos_weld[ie][ix]=zf_a_right : pos_weld[ie][iy]=z_th_right : pos_weld[ie][iz]=-zagf_th_right			gosub "set_weld"			if zagf_hoff_right>EPS then				ang_axis_weld = 90				pos_weld[is][ix]=aa : pos_weld[is][iy]=z_th_right : pos_weld[is][iz]=0				pos_weld[ie][ix]=aa : pos_weld[ie][iy]=-zagf_hoff_right+z_th_right : pos_weld[ie][iz]=0				gosub "set_weld"				ang_axis_weld = 0				pos_weld[is][ix]=aa : pos_weld[is][iy]=z_th_right : pos_weld[is][iz]=-zagf_th_right				pos_weld[ie][ix]=aa : pos_weld[ie][iy]=-zagf_hoff_right+z_th_right : pos_weld[ie][iz]=-zagf_th_right				gosub "set_weld"				ang_axis_weld = 180				pos_weld[is][ix]=-aa : pos_weld[is][iy]=z_th_right : pos_weld[is][iz]=0				pos_weld[ie][ix]=-aa : pos_weld[ie][iy]=-zagf_hoff_right+z_th_right : pos_weld[ie][iz]=0				gosub "set_weld"				ang_axis_weld = 270				pos_weld[is][ix]=-aa : pos_weld[is][iy]=z_th_right : pos_weld[is][iz]=-zagf_th_right				pos_weld[ie][ix]=-aa : pos_weld[ie][iy]=-zagf_hoff_right+z_th_right : pos_weld[ie][iz]=-zagf_th_right				gosub "set_weld"			endif		endif		PRISM_ nsp/3, -zagf_th_right, get(nsp)		if zagf_flange_right then			roty 90			addx zagf_th_right			addz -zagf_th_right/2			if type_cutf_e = 1 then				put	0,z_th_right,600+jt				put	zf_a_right-zagf_th_right,0,200+jt				put	zagf_h_right,90,200+jt				put	-zf_a_right+zagf_th_right,0,200+jt				put	0,z_th_right,jt				ang_axis_weld = 0				pos_weld[is][ix]=zagf_th_right : pos_weld[is][iy]=z_th_right : pos_weld[is][iz]=0				pos_weld[ie][ix]=zf_a_right-zagf_th_right : pos_weld[ie][iy]=z_th_right : pos_weld[ie][iz]=0				gosub "set_weld"				ang_axis_weld = 90				pos_weld[is][ix]=zagf_th_right : pos_weld[is][iy]=z_th_left : pos_weld[is][iz]=zagf_th_right				pos_weld[ie][ix]=zf_a_right-zagf_th_right: pos_weld[ie][iy]=z_th_right : pos_weld[ie][iz]=zagf_th_right				gosub "set_weld"			endif			if type_cutf_e = 2 then				put	0,z_th_right,600+jt				put	zf_b_right-zagf_th_right,0,200+jt				put	zagf_h_right,90,200+jt				put	-zf_b_right+zagf_th_right,0,200+jt				put	0,z_th_right,jt				ang_axis_weld = 0				pos_weld[is][ix]=zagf_th_right : pos_weld[is][iy]=z_th_right : pos_weld[is][iz]=0				pos_weld[ie][ix]=zf_b_left-zagf_th_right : pos_weld[ie][iy]=z_th_right : pos_weld[ie][iz]=0				gosub "set_weld"				ang_axis_weld = 90				pos_weld[is][ix]=zagf_th_right : pos_weld[is][iy]=z_th_right : pos_weld[is][iz]=zagf_th_right				pos_weld[ie][ix]=zf_b_right-zagf_th_right: pos_weld[ie][iy]=z_th_right : pos_weld[ie][iz]=zagf_th_right				gosub "set_weld"			endif			PRISM_ nsp/3, zagf_th_right, get(nsp)			del 3		endif		if type_cutf_e = 2 then del 1		if zagf_flange_right=1 then del 1		del 3	endgroupendifif (type_fin_e=1 or (type_fin_e=3 and not(zagf_zag_right))) and det_lvl_3d=2 then 	group "zage"		addz offset_r-offset_body_e		gosub "zage_weld"		rotx 90 		roty 90		jc=15		ji=1+4+8		if type_cutf_e = 1 then			t_z = aa + out_right_vn			put	0,0,600+ji			put	z_b_right_l,-pos_cutf[ie][il]*null_ang_e,200+jc			put	z_th_right,90-pos_cutf[ie][il]*null_ang_e,200+jc			put	z_b_right_l-delta_th_right_l,180-pos_cutf[ie][il]*null_ang_e,200+jc			put	z_b_right_p+delta_th_right_l,-pos_cutf[ie][ip]*null_ang_e,200+jc			put	z_th_right,-90-pos_cutf[ie][ip]*null_ang_e,200+jc			put	0,0,ji		endif		if type_cutf_e = 2 then			t_z = bb + out_right			roty -90			put	0,0,600+ji			put	z_a_right_v,-pos_cutf[ie][iv]*null_ang_e,200+jc			put	z_th_right,90-pos_cutf[ie][iv]*null_ang_e,200+jc			put	z_a_right_v-delta_th_right_n,180-pos_cutf[ie][iv]*null_ang_e,200+jc			put	z_a_right_n+delta_th_right_n,-pos_cutf[ie][in]*null_ang_e,200+jc			put	z_th_right,-90-pos_cutf[ie][in]*null_ang_e,200+jc			put	0,0,ji		endif		hotspot 0,z_th_right,0		addz -t_z		PRISM_ nsp/3, t_z*2, get(nsp)		del 2	endgroup	if type_fin_e=3 then		zage_f = SUBGROUP("zage", "zagfe")		if show_list then placegroup zage_f		killgroup zage_f	else		if show_list then placegroup "zage"	endif	killgroup "zage"endif!-- Собственно само тело с учётом удлинения на подрезкуgroup "body"	if mirror_axis=1 then mulx -1	if mirror_axis=2 then muly -1	if not(show_only_axsis) then		gosub "set_mat"		gosub "set_form"		gosub "set_path"		mask = 1+2+16+32		TUBE n_form, n_path, mask, USE(n_form*3+n_path*4)		if show_3d_hotspot then			xs = 0 : ys = 0 : xe=0 : ye = 0			for i=1 to n_form*3 step 3				x2=get(1) :	y2=get(1) :	s2=get(1)				if s2=jt then 					if s1=jt then						gosub "hotspot_prof"						if xs=xs and ys=ye then							xs = x1 : ys = y1						else							xe = x2 : ye = y2						endif					endif					x1=x2 : y1=y2 : s1=s2				else					x1=0 : y1=0 : s1=-20				endif			next i			x1 = xs : y1 = ys : x2 = xe : y2 = ye			gosub "hotspot_prof"		endif	endifendgroupif type_cutf_e = 1 then	rotz 180	addz offset_r-start_cut_e	gosub "cut3d_epl"	del 2	group "eop1"		material 77		addz offset_r-offset_body_e		roty 90		rotz angle_path/2		addz -ho/2		PRISM 5,ho,-max_0,bb, bb*tan(pos_cutf[ie][ip]*null_ang_e),bb, 0,0, -bb*tan(pos_cutf[ie][il]*null_ang_e),-bb, -max_0,-bb		del 3	endgroupendifif type_cutf_s = 1 then	addz start_cut_s	rotx -angle_path/2	gosub "cut3d_spl"	del 2	group "sop1"		addz offset_body_s		material 78		rotx -angle_path/2		roty 90		addz -ho/2		PRISM 5,ho,max_0,bb, -bb*tan(pos_cutf[is][ip]*null_ang_s),bb, 0,0, bb*tan(pos_cutf[is][il]*null_ang_s),-bb, max_0,-bb		del 4	endgroupendifif type_cutf_e = 2 then	rotz 180	addz offset_r-start_cut_e	rotx angle_path/2	gosub "cut3d_evn"	del 3	group "eop2"		material 48		addz offset_r-offset_body_e		rotx angle_path/2		rotx 90 		rotz -90		addz -ho/2		PRISM 5,ho,-max_0,aa, aa*tan(pos_cutf[ie][in]*null_ang_e),aa, 0,0, -aa*tan(pos_cutf[ie][iv]*null_ang_e),-aa, -max_0,-aa		del 5	endgroupendifif type_cutf_s = 2 then	addz start_cut_s	rotx -angle_path/2	gosub "cut3d_svn"	del 2	group "sop2"		material 9		addz offset_body_s		rotx -angle_path/2		rotx 90 		rotz -90		addz -ho/2		PRISM 5,ho,max_0,aa, -aa*tan(pos_cutf[is][in]*null_ang_s),aa, 0,0, aa*tan(pos_cutf[is][iv]*null_ang_s),-aa, max_0,-aa		del 5	endgroupendifgroup "dummy"	lin_ 0,0,0,0,0,0endgroupif type_cutf_s = 1 and type_cutf_e = 1 then 	group_op = ADDGROUP("sop1", "eop1")	killgroup "sop1"	killgroup "eop1"endifif type_cutf_s = 1 and type_cutf_e = 2 then	group_op = ADDGROUP("sop1", "eop2")	killgroup "sop1"	killgroup "eop2"endifif type_cutf_s = 2 and type_cutf_e = 2 then	group_op = ADDGROUP("sop2", "eop2")	killgroup "sop2"	killgroup "eop2"endifif type_cutf_s = 2 and type_cutf_e = 1 then	group_op = ADDGROUP("sop2", "eop1")	killgroup "sop2"	killgroup "eop1"endifif tshow_op then placegroup group_op! - Вычитаем, размещаемGroup_out = SUBGROUP("body", group_op)if type_fin_s=3 and det_lvl_3d=2 and show_list then	group_zagfs = SUBGROUP(Group_out, "zagfs")	Group_out = ADDGROUP(Group_out, "zagfs")	killgroup "zagfs"	killgroup group_zagfsendifif type_fin_e=3 and det_lvl_3d=2 and show_list then 	group_zagfe = SUBGROUP(Group_out, "zagfe")	Group_out = ADDGROUP(Group_out, "zagfe")	killgroup "zagfe"	killgroup group_zagfeendifif type_fin_s=2 and det_lvl_3d=2 then 	Group_out = SUBGROUP(Group_out, "pod_s")	if tshow_op then placegroup "pod_s"	killgroup "pod_s"endifif type_fin_e=2 and det_lvl_3d=2 then 	Group_out = SUBGROUP(Group_out, "pod_e")	if tshow_op then placegroup "pod_e"	killgroup "pod_e"endifmaterial col_matpen gs_cont_penfill gs_fill_type_secline_type gs_line_typeSECT_ATTRS gs_fill_type_sec, gs_back_pen, gs_fill_pen, gs_sec_pen, gs_line_typeplacegroup Group_outkillgroup Group_outkillgroup "body"killgroup group_opgosub "clear_buff"if mirror_axis=1 then mulx -1if mirror_axis=2 then muly -1gosub "axis3d" !Отображение оси в 3дdel topend"zags_weld":	type_weld = type_weld_s	type_weld_ang = 0	show_weld_line = 0	if (out_left>EPS or type_fin_s=4) and type_weld<2 then		ang_axis_weld = 90		if name_prof_i=2 then ang_axis_weld = 180		show_empty_t = show_empty		show_empty = 0		gosub "clear_buff"		jt = 15		gosub "set_form"		xs = 0 : ys = 0 : xe=0 : ye = 0 : zs = z1 : ze = z2		for i=1 to n_form*3 step 3			x2=get(1) :	y2=get(1) :	s2=get(1)			if s2=jt then 				if s1=jt then					ics = is					if type_fin_s<>3 then						dxc = x1 : dyc = y1 : gosub "coord_cut" : z1 = dzc						dxc = x2 : dyc = y2 : gosub "coord_cut" : z2 = dzc					endif					pos_weld[is][ix]=x1 : pos_weld[is][iy]=y1 : pos_weld[is][iz]=z1					pos_weld[ie][ix]=x2 : pos_weld[ie][iy]=y2 : pos_weld[ie][iz]=z2					gosub "set_weld"					if xs=xs and ys=ye then						xs = x1 : ys = y1 : zs = z1					else						xe = x2 : ye = y2 : ze = z2					endif				endif				x1=x2 : y1=y2 : s1=s2			else				x1=0 : y1=0 : s1=-20			endif		next i		if name_prof_i<>2 then			pos_weld[is][ix]=xe : pos_weld[is][iy]=ye : pos_weld[is][iz]=ze			pos_weld[ie][ix]=xs : pos_weld[ie][iy]=ys : pos_weld[ie][iz]=zs			gosub "set_weld"		endif		gosub "clear_buff"		show_empty = show_empty_t	else	endifreturn"zage_weld":	type_weld = type_weld_e	type_weld_ang = 0	show_weld_line = 0	if (out_right>EPS or type_fin_e=4) and type_weld<2 then		ang_axis_weld = 0		if name_prof_i=2 then ang_axis_weld = 270		show_empty_t = show_empty		show_empty = 0		gosub "clear_buff"		jt = 15		gosub "set_form"		xs = 0 : ys = 0 : xe=0 : ye = 0 : zs = 0 : ze = 0 : s1=0		for i=1 to n_form*3 step 3			x2=get(1) :	y2=get(1) :	s2=get(1)			if s2=jt then 				if s1=jt then					ics = ie					if type_fin_e<>3 then						dxc = x1 : dyc = y1 : gosub "coord_cut" : z1 = dzc						dxc = x2 : dyc = y2 : gosub "coord_cut" : z2 = dzc					endif					pos_weld[is][ix]=x1 : pos_weld[is][iy]=y1 : pos_weld[is][iz]=z1					pos_weld[ie][ix]=x2 : pos_weld[ie][iy]=y2 : pos_weld[ie][iz]=z2					gosub "set_weld"					if xs=xs and ys=ye then						xs = x1 : ys = y1 : zs = z1					else						xe = x2 : ye = y2 : ze = z2					endif				endif				x1=x2 : y1=y2 : s1=s2			else				x1=0 : y1=0 : s1=-20			endif		next i		if name_prof_i<>2 then			pos_weld[is][ix]=xe : pos_weld[is][iy]=ye : pos_weld[is][iz]=ze			pos_weld[ie][ix]=xs : pos_weld[ie][iy]=ys : pos_weld[ie][iz]=zs			gosub "set_weld"		endif		gosub "clear_buff"		show_empty = show_empty_t	else	endifreturn"set_weld":	dx = pos_weld[ie][ix] - pos_weld[is][ix]	dy = pos_weld[ie][iy] - pos_weld[is][iy]	dz = pos_weld[ie][iz] - pos_weld[is][iz]	r = SQR(dx*dx+dy*dy+dz*dz)	if r-EPS > t_sten*3-EPS then call "Сварка 3д" parameters type_weld=type_weld, type_weld_ang = type_weld_ang, show_weld_line=show_weld_line, pos_weld = pos_weld, ang_axis = ang_axis_weld, subpos=subpos, tip_konstr=tip_konstr	gosub "set_mat"return"hotspot3d_rphi":	add pos_prof[is][ix], pos_prof[is][iy], pos_prof[is][iz]	HOTSPOT 0.5*l_axis_2d, 0,	0.5*l_pos_prof*cos(ang), unID, ang_pl,	4+128: unID=unID+1	HOTSPOT 0,	0,	0.5*l_pos_prof*cos(ang),	unID,	ang_pl,	6: unID=unID+1	HOTSPOT 0,	0,	1,	unID,	ang_pl,	7: unID=unID+1	HOTSPOT 0.5*l_axis_2d*cos(ang_pl),	0.5*l_axis_2d*sin(ang_pl),	0.5*l_pos_prof*cos(ang),	unID, ang_pl, 5: unID=unID+1	rotz ang_pl	HOTSPOT 0, 0,	0.6*l_pos_prof, unID, ang,	4+128: unID=unID+1	HOTSPOT 0,	0,	0,	unID,	ang,	6: unID=unID+1	HOTSPOT 0,	1,	0,	unID,	ang,	7: unID=unID+1	HOTSPOT 0.6*l_pos_prof*sin(ang),0,	0.6*l_pos_prof*cos(ang),	unID, ang, 5: unID=unID+1	roty ang	HOTSPOT	0,	0,	0,	unID,	l_pos_prof,	1+128: unID=unID+1	HOTSPOT	0,	0,	l_pos_prof,	unID,	l_pos_prof,	2: unID=unID+1	HOTSPOT	0,	0,	-1,	unID,	l_pos_prof,	3: unID=unID+1	del 3	HOTSPOT	pos_prof[is][ix],	pos_prof[is][iy],	pos_prof[is][iz]	HOTSPOT	pos_prof[ie][ix],	pos_prof[ie][iy],	pos_prof[ie][iz]return"hotspot3d_coord":	!-- Редактирование длины в 3д --	p_name = paramname_coord[is][ix]	HOTSPOT	0,					pos_prof[is][iy],	pos_prof[is][iz],	unID,	pos_prof[is][ix],	1+128, pos_prof[is][ix], p_name: unID=unID+1	HOTSPOT	pos_prof[is][ix],	pos_prof[is][iy],	pos_prof[is][iz],	unID,	pos_prof[is][ix],	2, pos_prof[is][ix], p_name: unID=unID+1	HOTSPOT	-1,					pos_prof[is][iy],	pos_prof[is][iz],	unID,	pos_prof[is][ix],	3, pos_prof[is][ix], p_name: unID=unID+1	p_name = paramname_coord[is][iy]	HOTSPOT	pos_prof[is][ix],					0,	pos_prof[is][iz],	unID,	pos_prof[is][iy],	1+128, pos_prof[is][iy], p_name: unID=unID+1	HOTSPOT	pos_prof[is][ix],	pos_prof[is][iy],	pos_prof[is][iz],	unID,	pos_prof[is][iy],	2, pos_prof[is][iy], p_name: unID=unID+1	HOTSPOT	pos_prof[is][ix],	-1,					pos_prof[is][iz],	unID,	pos_prof[is][iy],	3, pos_prof[is][iy], p_name: unID=unID+1	p_name = paramname_coord[is][iz]	HOTSPOT	pos_prof[is][ix],	pos_prof[is][iy],	0,					unID,	pos_prof[is][iz],	1+128, pos_prof[is][iz], p_name: unID=unID+1	HOTSPOT	pos_prof[is][ix],	pos_prof[is][iy],	pos_prof[is][iz],	unID,	pos_prof[is][iz],	2, pos_prof[is][iz], p_name: unID=unID+1	HOTSPOT	pos_prof[is][ix],	pos_prof[is][iy],	-1,					unID,	pos_prof[is][iz],	3, pos_prof[is][iz], p_name: unID=unID+1	p_name = paramname_coord[ie][ix]	HOTSPOT	0,					pos_prof[ie][iy],	pos_prof[ie][iz],	unID,	pos_prof[ie][ix],	1+128, pos_prof[ie][ix], p_name: unID=unID+1	HOTSPOT	pos_prof[ie][ix],	pos_prof[ie][iy],	pos_prof[ie][iz],	unID,	pos_prof[ie][ix],	2, pos_prof[ie][ix], p_name: unID=unID+1	HOTSPOT	-1,					pos_prof[ie][iy],	pos_prof[ie][iz],	unID,	pos_prof[ie][ix],	3, pos_prof[ie][ix], p_name: unID=unID+1	p_name = paramname_coord[ie][iy]	HOTSPOT	pos_prof[ie][ix],					0,	pos_prof[ie][iz],	unID,	pos_prof[ie][iy],	1+128, pos_prof[ie][iy], p_name: unID=unID+1	HOTSPOT	pos_prof[ie][ix],	pos_prof[ie][iy],	pos_prof[ie][iz],	unID,	pos_prof[ie][iy],	2, pos_prof[ie][iy], p_name: unID=unID+1	HOTSPOT	pos_prof[ie][ix],	-1,					pos_prof[ie][iz],	unID,	pos_prof[ie][iy],	3, pos_prof[ie][iy], p_name: unID=unID+1	p_name = paramname_coord[ie][iz]	HOTSPOT	pos_prof[ie][ix],	pos_prof[ie][iy],	0,					unID,	pos_prof[ie][iz],	1+128, pos_prof[ie][iz], p_name: unID=unID+1	HOTSPOT	pos_prof[ie][ix],	pos_prof[ie][iy],	pos_prof[ie][iz],	unID,	pos_prof[ie][iz],	2, pos_prof[ie][iz], p_name: unID=unID+1	HOTSPOT	pos_prof[ie][ix],	pos_prof[ie][iy],	-1,					unID,	pos_prof[ie][iz],	3, pos_prof[ie][iz], p_name: unID=unID+1return"rot3d_axis":	addz l_pos_prof/2	HOTSPOT 0,	0, 0,	unID,	ang_axis,	6: unID=unID+1	HOTSPOT aa, 0, 0,	unID,	ang_axis,	4+128: unID=unID+1	HOTSPOT aa*cos(ang_axis), aa*sin(ang_axis), 0,	unID,	ang_axis, 5: unID=unID+1	HOTSPOT 0,	0, 1,	unID,	ang_axis,	7: unID=unID+1	del 1return"axis3d":!Отступы начала и конца	if show_empty = 0 then return	if show_only_axsis and show_axsis then		HOTSPOT	0,	0,	0,	unID,	add_l_axis_s,	1+128: unID=unID+1		HOTSPOT	0,	0,	add_l_axis_s,	unID,	add_l_axis_s,	2: unID=unID+1		HOTSPOT	0,	0,	add_l_axis_s-1,	unID,	add_l_axis_s,	3: unID=unID+1		HOTSPOT	0,	0,	offset_r,	unID,	add_l_axis_e,	1+128: unID=unID+1		HOTSPOT	0,	0,	offset_r-add_l_axis_e,	unID,	add_l_axis_e,	2: unID=unID+1		HOTSPOT	0,	0,	offset_r*2,	unID,	add_l_axis_e,	3: unID=unID+1	endif	if abs(dr)>EPS then	else		if abs(type_axis_pos)>EPS then 			call "macro_axsis" parameters ALL cx=offset_prof_arr[type_axis_pos+1][ix],												cy=offset_prof_arr[type_axis_pos+1][iy],												cz_s=add_l_axis_s,cz_e=add_l_axis_e,												axis=show_axsis,												A=offset_r,												only_axis=show_only_axsis,												axis_line_pen=only_axis_pen		else			call "macro_axsis" parameters ALL cx=offset_prof[is][ix],												cy=offset_prof[is][iy],												cz_s=add_l_axis_s,cz_e=add_l_axis_e,												axis=show_axsis,												A=offset_r,												only_axis=show_only_axsis,												axis_line_pen=only_axis_pen		endif	endifreturn"line3d":	hotline pos_prof[is][ix],pos_prof[is][iy],pos_prof[is][iz],pos_prof[ie][ix],pos_prof[ie][iy],pos_prof[ie][iz],unID: unID=unID+1	if show_line then lin_ pos_prof[is][ix],pos_prof[is][iy],pos_prof[is][iz],pos_prof[ie][ix],pos_prof[ie][iy],pos_prof[ie][iz]return"cut3d_spl":	!-- Подрезка слева/справа сечения в начале элемента --	if not(mirr_cutf_s) then		p_name = paramname_cut[is][il]		HOTSPOT bb*0.1, -bb,	0, unID, pos_cutf[is][il],	4+128, pos_cutf[is][il], p_name: unID=unID+1		HOTSPOT bb*0.1,	0,	0,	unID,	pos_cutf[is][il],	6, pos_cutf[is][il], p_name: unID=unID+1		HOTSPOT 1,	0,	0,	unID,	pos_cutf[is][il],	7, pos_cutf[is][il], p_name: unID=unID+1		HOTSPOT bb*0.1,	-bb,	-bb*tan(pos_cutf[is][il]),	unID,	pos_cutf[is][il], 5, pos_cutf[is][il], p_name: unID=unID+1	endif	p_name = paramname_cut[is][ip]	HOTSPOT bb*0.1, bb,	0, unID, pos_cutf[is][ip],	4+128, pos_cutf[is][ip], p_name: unID=unID+1	HOTSPOT bb*0.1,	0,	0,	unID,	pos_cutf[is][ip],	6+512, pos_cutf[is][ip], p_name: unID=unID+1	HOTSPOT 1,	0,	0,	unID,	pos_cutf[is][ip],	7, pos_cutf[is][ip], p_name: unID=unID+1	HOTSPOT bb*0.1,	bb,	bb*tan(pos_cutf[is][ip]),	unID,	pos_cutf[is][ip], 5, pos_cutf[is][ip], p_name: unID=unID+1return"cut3d_svn":	!-- Подрезка верха/низа сечения в начале элемента --	p_name = paramname_cut[is][in]	HOTSPOT aa,	aa*0.1,	0, unID, pos_cutf[is][in],	4+128, pos_cutf[is][in], p_name: unID=unID+1	HOTSPOT 0,	aa*0.1,	0,	unID,	pos_cutf[is][in],	6, pos_cutf[is][in], p_name: unID=unID+1	HOTSPOT 0,	-1,	0,	unID,	pos_cutf[is][in],	7, pos_cutf[is][in], p_name: unID=unID+1	HOTSPOT aa,	aa*0.1,aa*tan(pos_cutf[is][in]),	unID,	pos_cutf[is][in], 5, pos_cutf[is][in], p_name: unID=unID+1	if not(mirr_cutf_s) then		p_name = paramname_cut[is][iv]		HOTSPOT -aa,	aa*0.1,	0, unID, pos_cutf[is][iv],	4+128, pos_cutf[is][iv], p_name: unID=unID+1		HOTSPOT 0,	aa*0.1,	0,	unID,	pos_cutf[is][iv],	6+512, pos_cutf[is][iv], p_name: unID=unID+1		HOTSPOT 0,	-1,	0,	unID,	pos_cutf[is][iv],	7, pos_cutf[is][iv], p_name: unID=unID+1		HOTSPOT -aa,	aa*0.1,-aa*tan(pos_cutf[is][iv]),	unID,	pos_cutf[is][iv], 5, pos_cutf[is][iv], p_name: unID=unID+1	endifreturn"cut3d_evn":	!-- Подрезка верха/низа сечения в конце элемента --	if not(mirr_cutf_e) then		p_name = paramname_cut[ie][iv]		HOTSPOT aa,	aa*0.1,	0, unID, pos_cutf[ie][iv],	4+128, pos_cutf[ie][iv], p_name: unID=unID+1		HOTSPOT 0,	aa*0.1,	0,	unID,	pos_cutf[ie][iv],	6, pos_cutf[ie][iv], p_name: unID=unID+1		HOTSPOT 0,	-1,	0,	unID,	pos_cutf[ie][iv],	7, pos_cutf[ie][iv], p_name: unID=unID+1		HOTSPOT aa,	aa*0.1,aa*tan(pos_cutf[ie][iv]),	unID,	pos_cutf[ie][iv], 5, pos_cutf[ie][iv], p_name: unID=unID+1	endif	p_name = paramname_cut[ie][in]	HOTSPOT -aa,	aa*0.1,	0, unID, pos_cutf[ie][in],	4+128, pos_cutf[ie][in], p_name: unID=unID+1	HOTSPOT 0,	aa*0.1,	0,	unID,	pos_cutf[ie][in],	6+512, pos_cutf[ie][in], p_name: unID=unID+1	HOTSPOT 0,	-1,	0,	unID,	pos_cutf[ie][in],	7, pos_cutf[ie][in], p_name: unID=unID+1	HOTSPOT -aa,	aa*0.1,-aa*tan(pos_cutf[ie][in]),	unID,	pos_cutf[ie][in], 5, pos_cutf[ie][in], p_name: unID=unID+1return"cut3d_epl":	!-- Подрезка слева/справа сечения в конце элемента --	p_name = paramname_cut[ie][ip]	HOTSPOT bb*0.1, -bb,	0, unID, pos_cutf[ie][ip],	4+128, pos_cutf[ie][ip], p_name: unID=unID+1	HOTSPOT bb*0.1,	0,	0,	unID,	pos_cutf[ie][ip],	6, pos_cutf[ie][ip], p_name: unID=unID+1	HOTSPOT 1,	0,	0,	unID,	pos_cutf[ie][ip],	7, pos_cutf[ie][ip], p_name: unID=unID+1	HOTSPOT bb*0.1,	-bb,	-bb*tan(pos_cutf[ie][ip]),	unID,	pos_cutf[ie][ip], 5, pos_cutf[ie][ip], p_name: unID=unID+1	if not(mirr_cutf_e) then		p_name = paramname_cut[ie][il]		HOTSPOT bb*0.1, bb,	0, unID, pos_cutf[ie][il],	4+128, pos_cutf[ie][il], p_name: unID=unID+1		HOTSPOT bb*0.1,	0,	0,	unID,	pos_cutf[ie][il],	6+512, pos_cutf[ie][il], p_name: unID=unID+1		HOTSPOT 1,	0,	0,	unID,	pos_cutf[ie][il],	7, pos_cutf[ie][il], p_name: unID=unID+1		HOTSPOT bb*0.1,	bb,	bb*tan(pos_cutf[ie][il]),	unID,	pos_cutf[ie][il], 5, pos_cutf[ie][il], p_name: unID=unID+1	endifreturn"clear_buff":	if NSP>0 then tt = min(get(NSP))return"set_path":	n_path = 0	tstart = NSP	if abs(dr)>EPS then		xx = rad_path*COS(-alp_cut_s-0.01)		yy = rad_path*SIN(-alp_cut_s-0.01)		xx1 = xx*cos(-angle_path/2)-yy*sin(-angle_path/2)-rad_path+dr		yy1 = xx*sin(-angle_path/2)+yy*cos(-angle_path/2)+offset_r/2		PUT 0, xx1, yy1, ang_form_axis		xx = rad_path*COS(-alp_cut_s)		yy = rad_path*SIN(-alp_cut_s)		xx1 = xx*cos(-angle_path/2)-yy*sin(-angle_path/2)-rad_path+dr		yy1 = xx*sin(-angle_path/2)+yy*cos(-angle_path/2)+offset_r/2		PUT 0, xx1, yy1, ang_form_axis		TempArcResol=12		FOR i=0 TO TempArcResol+1 step 1			xx = rad_path*COS(angle_path*i/TempArcResol)			yy = rad_path*SIN(angle_path*i/TempArcResol)			xx1 = xx*cos(-angle_path/2)-yy*sin(-angle_path/2)-rad_path+dr			yy1 = xx*sin(-angle_path/2)+yy*cos(-angle_path/2)+offset_r/2			PUT 0, xx1, yy1, ang_form_axis		NEXT i		PUT 0, xx1, yy1, ang_form_axis	else		PUT 0, 0, -0.1-max_cut_s-add_offset_s, ang_form_axis		PUT 0, 0, -max_cut_s-add_offset_s, ang_form_axis		PUT 0, 0, 0, ang_form_axis		PUT 0, 0, offset_r, ang_form_axis		PUT 0, 0, offset_r+max_cut_e+add_offset_e, ang_form_axis		PUT 0, 0, offset_r+max_cut_e+0.1+add_offset_e, ang_form_axis	endif	tend = NSP	n_path = (tend - tstart)/4return"hotspot_prof":	addz offset_body_s	ics = is	if type_fin_s<>3 then		dxc = x1 : dyc = y1 : gosub "coord_cut" : z1 = dzc		dxc = x2 : dyc = y2 : gosub "coord_cut" : z2 = dzc	else		z1=0 : z2=0	endif	hotspot x1,y1,z1,unIDR : unIDR=unIDR+1	hotspot x2,y2,z2,unIDR : unIDR=unIDR+1	del 1	addz offset_r-offset_body_e	ics = ie	if type_fin_e<>3 then		dxc = x1 : dyc = y1 : gosub "coord_cut" : z1 = dzc		dxc = x2 : dyc = y2 : gosub "coord_cut" : z2 = dzc	else		z1=0 : z2=0	endif	hotspot x1,y1,z1,unIDR : unIDR=unIDR+1	hotspot x2,y2,z2,unIDR : unIDR=unIDR+1	del 1return"set_form":	n_form = 0	tstart = NSP	if det_lvl_3d_prof=0 then det_lvl_3d_prof = det_lvl_3d	if name_prof_i=1 then		gosub "prof_1det"	endif	if name_prof_i=2 then		if det_lvl_3d_prof = 2 then			gosub "prof_2det"		else			gosub "prof_2simp"		endif	endif	if name_prof_i=3 then		jt = 15		if det_lvl_3d_prof = 2 then			gosub "prof_3det"		else			gosub "prof_3simp"		endif	endif	if name_prof_i=4 then		if det_lvl_3d_prof = 2 then			gosub "prof_4det"		else			gosub "prof_4simp"		endif	endif	if name_prof_i=5 then		if det_lvl_3d_prof = 2 then			gosub "prof_5det"		else			gosub "prof_5simp"		endif	endif	if name_prof_i=8 then		if det_lvl_3d_prof = 2 then			gosub "prof_8det"		else			gosub "prof_8simp"		endif	endif	if name_prof_i=9 then		if det_lvl_3d_prof = 2 then			gosub "prof_9det"		else			gosub "prof_9simp"		endif	endif	tend = NSP	n_form = (tend - tstart)/3return"prof_1det": !"Круглая труба"	if show_empty and has_hole=1 then		put 0,0,900+jt		put ds/2,360,4000+jt		put ds/2-ws,360,4000+jt	else		put 0,0,900+jt		put ds/2,360,4000+jt	endifreturn"prof_2simp": !"Квадратная труба"	put -ws/2,-ds/2,jt	put 0,-ds/2,jt	put ws/2,-ds/2,jt	put ws/2,0,jt	put ws/2,ds/2,jt	put -ws/2,ds/2,jt	put -ws/2,0,jt	put -ws/2,-ds/2,-1	if show_empty and has_hole=1 then		put wt-ws/2,wt-ds/2,jt		put ws/2-wt,wt-ds/2,jt		put ws/2-wt,ds/2-wt,jt		put wt-ws/2,ds/2-wt,jt		put wt-ws/2,wt-ds/2,-1	endifreturn"prof_2det": !"Квадратная труба"	put -ws/2+ft,-ds/2,jt	put 0,-ds/2,jt	put ws/2-ft,-ds/2,jt	put ws/2-ft,-ds/2+ft,900+jt	put 0,90,4000+jt	put ws/2,-ds/2+ft,jt	put ws/2,0,jt	put ws/2,ds/2-ft,jt	put ws/2-ft,ds/2-ft,900+jt	put 0,90,4000+jt	put ws/2-ft,ds/2,jt	put 0,ds/2,jt	put -ws/2+ft,ds/2,jt	put -ws/2+ft,ds/2-ft,900+jt	put 0,90,4000+jt	put -ws/2,ds/2-ft,jt	put -ws/2,0,jt	put -ws/2,-ds/2+ft,jt	put -ws/2+ft,-ds/2+ft,900+jt	put 0,90,4000+jt	put -ws/2+ft,-ds/2,jt	put -ws/2+ft,-ds/2,-1	if show_empty and has_hole=1 then		put -ws/2+ft,-ds/2+wt,jt		put ws/2-ft,-ds/2+wt,jt		put ws/2-ft,-ds/2+ft,900+jt		put 0,90,4000+jt		put ws/2-wt,-ds/2+ft,jt		put ws/2-wt,ds/2-ft,jt		put ws/2-ft,ds/2-ft,900+jt		put 0,90,4000+jt		put ws/2-ft,ds/2-wt,jt		put -ws/2+ft,ds/2-wt,jt		put -ws/2+ft,ds/2-ft,900+jt		put 0,90,4000+jt		put -ws/2+wt,ds/2-ft,jt		put -ws/2+wt,-ds/2+ft,jt		put -ws/2+ft,-ds/2+ft,900+jt		put 0,90,4000+jt		put -ws/2+ft,-ds/2+wt,jt		put -ws/2+ft,-ds/2+wt,-1	endifreturn"prof_3simp": !"Швеллер"	put -ws*0.5,-ds*0.5,jt	put -ws*0.5,ds*0.5,jt	put ws*0.5,ds*0.5,jt	put ws*0.5,ds*0.5-ft,jt	put wt-ws*0.5,ds*0.5-ft,jt	put wt-ws*0.5,ft-ds*0.5,jt	put ws*0.5,ft-ds*0.5,jt	put ws*0.5,-ds*0.5,jt	put -ws*0.5,-ds*0.5,-1return"prof_3det": !"Швеллер"	put 0,-ds*0.5,jt	put -ws*0.5,-ds*0.5,jt	put -ws*0.5,0,jt	put -ws*0.5,ds*0.5,jt	put 0,ds*0.5,jt	put ws*0.5,ds*0.5,jt	put ws*0.5,ds*0.5-(ft-tr),jt	put tr,-90,2000+jt	put ws*0.5-tr,ds*0.5-ft,jt	put 0,ds*0.5-ft,jt	put -ws*0.5+wt+rr,ds*0.5-ft,jt	put rr,90,2000+jt	put -ws*0.5+wt,ds*0.5-ft-rr,jt	put -ws*0.5+wt,0,jt	put -ws*0.5+wt,-ds*0.5+ft+rr,jt	put rr,90,2000+jt	put -ws*0.5+wt+rr,-ds*0.5+ft,jt	put 0,-ds*0.5+ft,jt	put ws*0.5-tr,-ds*0.5+ft,jt	put tr,-90,2000+jt	put ws*0.5,-ds*0.5+ft-tr,jt	put ws*0.5,-ds*0.5,jt	put ws*0.5,-ds*0.5,-1return"prof_4simp": !"Двутавр"	put -ws*0.5,-ds*0.5,jt	put -ws*0.5,-ds*0.5+ft,jt	put -wt*0.5,-ds*0.5+ft,jt	put -wt*0.5,0,jt	put -wt*0.5,ds*0.5-ft,jt	put -ws*0.5,ds*0.5-ft,jt	put -ws*0.5,ds*0.5,jt	put ws*0.5,ds*0.5,jt	put ws*0.5,ds*0.5-ft,jt	put wt*0.5,ds*0.5-ft,jt	put wt*0.5,0,jt	put wt*0.5,-ds*0.5+ft,jt	put ws*0.5,-ds*0.5+ft,jt	put ws*0.5,-ds*0.5,jt	put -ws*0.5,-ds*0.5,-1return"prof_4det": !"Двутавр"	put -ws*0.5,-ds*0.5,jt	put -ws*0.5,-ds*0.5+(ft-tr),jt	put tr,-90,2000+jt	put -ws*0.5+tr,-ds*0.5+ft,jt	put -wt*0.5-rr,-ds*0.5+ft,jt	put rr,90,2000+jt	put -wt*0.5,-ds*0.5+ft+rr,jt	put -wt*0.5,0,jt	put -wt*0.5,ds*0.5-ft-rr,jt	put rr,90,2000+jt	put -wt*0.5-rr,ds*0.5-ft,jt	put -ws*0.5+tr,ds*0.5-ft,jt	put tr,-90,2000+jt	put -ws*0.5,ds*0.5-(ft-tr),jt	put -ws*0.5,ds*0.5,jt	put ws*0.5,ds*0.5,jt	put ws*0.5,ds*0.5-(ft-tr),jt	put tr,-90,2000+jt	put ws*0.5-tr,ds*0.5-ft,jt	put wt*0.5+rr,ds*0.5-ft,jt	put rr,90,2000+jt	put wt*0.5,ds*0.5-ft-rr,jt	put wt*0.5,0,jt	put wt*0.5,-ds*0.5+ft+rr,jt	put rr,90,2000+jt	put wt*0.5+rr,-ds*0.5+ft,jt	put ws*0.5-tr,-ds*0.5+ft,jt	put tr,-90,2000+jt	put ws*0.5,-ds*0.5+(ft-tr),jt	put ws*0.5,-ds*0.5,jt	put -ws*0.5,-ds*0.5,-1return"prof_5simp": !"Уголок"	put -ws*0.5,-ds*0.5,jt	put -ws*0.5,ds*0.5,jt	put -ws*0.5+wt,ds*0.5,jt	put -ws*0.5+wt,-ds*0.5+wt,jt	put ws*0.5,-ds*0.5+wt,jt	put ws*0.5,-ds*0.5,jt	put -ws*0.5,-ds*0.5,-1return"prof_5det": !"Уголок"	put 0,-ds*0.5,jt	put -ws*0.5,-ds*0.5,jt	put -ws*0.5,0,jt !	put -ws*0.5,ds*0.5,jt	put -ws*0.5+wt-rr,ds*0.5,jt	put rr,-90,2000+jt	put -ws*0.5+wt,ds*0.5-rr,jt	put -ws*0.5+wt,0,jt	put -ws*0.5+wt,-ds*0.5+wt+ft,jt	put ft,90,2000+jt	put -ws*0.5+wt+ft,-ds*0.5+wt,jt	put 0,-ds*0.5+wt,jt	put ws*0.5-rr,-ds*0.5+wt,jt	put rr,-90,2000+jt	put ws*0.5,-ds*0.5-rr+wt,jt	put ws*0.5,-ds*0.5,jt	put -ws*0.5,-ds*0.5,-1return"prof_8simp": !"Уголок гнутый"	put -ws*0.5,-ds*0.5,jt	put -ws*0.5,ds*0.5,jt	put -ws*0.5+wt,ds*0.5,jt	put -ws*0.5+wt,-ds*0.5+wt,jt	put ws*0.5,-ds*0.5+wt,jt	put ws*0.5,-ds*0.5,jt	put -ws*0.5,-ds*0.5,-1return"prof_8det": !"Уголок гнутый"	put ws*0.5,-ds*0.5,jt	put 0,-ds*0.5,jt	put -ws*0.5+wt+ft,-ds*0.5,jt	put wt+ft,-90,2000+jt	put -ws*0.5,-ds*0.5+wt+ft,jt	put -ws*0.5,0,jt	put -ws*0.5,ds*0.5,jt	put -ws*0.5+wt,ds*0.5,jt	put -ws*0.5+wt,0,jt	put -ws*0.5+wt,-ds*0.5+wt+ft,jt	put ft,90,2000+jt	put -ws*0.5+wt+ft,-ds*0.5+wt,jt	put 0,-ds*0.5+wt,jt	put ws*0.5,-ds*0.5+wt,jt	put ws*0.5,-ds*0.5,jt	put ws*0.5,-ds*0.5,-1return"prof_9simp": !"Швеллер гнутый"	put -ws*0.5,-ds*0.5,jt	put -ws*0.5,ds*0.5,jt	put ws*0.5,ds*0.5,jt	put ws*0.5,ds*0.5-wt,jt	put wt-ws*0.5,ds*0.5-wt,jt	put wt-ws*0.5,wt-ds*0.5,jt	put ws*0.5,wt-ds*0.5,jt	put ws*0.5,-ds*0.5,jt	put -ws*0.5,-ds*0.5,-1return"prof_9det": !"Швеллер гнутый"	put ws*0.5,-ds*0.5,jt	put 0,-ds*0.5,jt	put -ws*0.5+wt+ft,-ds*0.5,jt	put wt+ft,-90,2000+jt	put -ws*0.5,-ds*0.5+wt+ft,jt	put -ws*0.5,-0,jt	put -ws*0.5,ds*0.5-wt-ft,jt	put wt+ft,-90,2000+jt	put -ws*0.5+wt+ft,ds*0.5,jt	put 0,ds*0.5,jt	put ws*0.5,ds*0.5,jt	put ws*0.5,ds*0.5-wt,jt	put 0,ds*0.5-wt,jt	put -ws*0.5+wt+ft,ds*0.5-wt,jt	put ft,90,2000+jt	put -ws*0.5+wt,ds*0.5-wt-ft,jt	put -ws*0.5+wt,0,jt	put -ws*0.5+wt,-ds*0.5+wt+ft,jt	put ft,90,2000+jt	put -ws*0.5+wt+ft,-ds*0.5+wt,jt	put 0,-ds*0.5+wt,jt	put ws*0.5,-ds*0.5+wt,jt	put ws*0.5,-ds*0.5,-1return"set_show_3d":	success = LIBRARYGLOBAL ("Libraryflobals-km", "show_connect", show_connect)	show = 0	if show_connect and upr then show = 1	if not(upr) then show = 1	if show then 		call "Показ_по_типам" PARAMETERS tip_konstr=tip_konstr RETURNED_PARAMETERS show_type		show = show_type	endif	if show then 		call "Показ_по_группам" PARAMETERS ALL el_views=el_views RETURNED_PARAMETERS show_el		show = show_el	endif	if show then 		call "Показ_по_сборкам" PARAMETERS ALL subpos=subpos, pos=GLOB_ID RETURNED_PARAMETERS show_subpos, show_marker		show = show_subpos	endif	if show then		success = LIBRARYGLOBAL ("Libraryflobals-km", "show_izd", show_izd)		success = LIBRARYGLOBAL ("Libraryflobals-km", "show_metall", show_metall)		if type_spec = "Металл" and not(show_metall) then show = 0		if type_spec = "Изделие" and not(show_izd) then show = 0	endif	if show then		success = LIBRARYGLOBAL ("Libraryflobals-km", "ignore_id", ignore_id)		success = LIBRARYGLOBAL ("Libraryflobals-km", "show_ingore", show_ingore)		show_spec = 0 : IF STRSTR (GLOB_ID, ignore_id, 1) > 0 or type_spec="Не специфицировать" THEN show_spec = 1		if not(show_ingore) and show_spec then show = 0	endif	if show then		show_if_vert=1 : show_if_gor=1 : show_if_ang=1		success = LIBRARYGLOBAL ("Libraryflobals-km", "show_if_vert", show_if_vert)		success = LIBRARYGLOBAL ("Libraryflobals-km", "show_if_gor", show_if_gor)		success = LIBRARYGLOBAL ("Libraryflobals-km", "show_if_ang", show_if_ang)		if el_type_view=1 and not(show_if_gor) and show then show = 0		if el_type_view=2 and not(show_if_vert) and show then show = 0		if el_type_view=3 and not(show_if_ang) and show then show = 0	endif		if not(type_axis) then		success = LIBRARYGLOBAL ("Libraryflobals-km", "show_axsis", show_axsis)		success = LIBRARYGLOBAL ("Libraryflobals-km", "show_only_axsis", show_only_axsis)	else		if type_axis=1 then			show_axsis = 0			show_only_axsis = 0		endif		if type_axis=2 then			show_axsis = 1			show_only_axsis = 0		endif		if type_axis=3 then			show_axsis = 0			show_only_axsis = 1		endif	endif	if not(det_lvl) then		success = LIBRARYGLOBAL ("Libraryflobals-km", "gs_detlevel_3D", gs_detlevel_3D)		IF gs_detlevel_3D=`Простой` then			det_lvl_2d = 1			det_lvl_3d = 1		endif		IF gs_detlevel_3D=`Детальный` THEN			det_lvl_2d = 2			det_lvl_3d = 2		endif		IF gs_detlevel_3D=`Откл` THEN			det_lvl_2d = 2			det_lvl_3d = 0		endif	else		if det_lvl=1 then			det_lvl_2d = 2			det_lvl_3d = 2		endif		if det_lvl=2 then			det_lvl_2d = 1			det_lvl_3d = 1		endif		if det_lvl=3 then			det_lvl_2d = 2			det_lvl_3d = 0		endif		if det_lvl=4 then			det_lvl_2d = 0			det_lvl_3d = 2		endif	endif	show_list = 0 : success = LIBRARYGLOBAL ("Libraryflobals-km", "show_list", show_list)	if strlen(syst_name)>1 then		success = LIBRARYGLOBAL ("Libraryflobals-mep", "show_op", show_op)		call "Показ_систем" PARAMETERS All isMep=0, isEqp=1 RETURNED_PARAMETERS show_el		if show = 1 and show_el < EPS then show = 0		if show = 1 and show_op < EPS then show = 0		if show = 1 then CALL "MEP_m_RequestSystemGlobals" PARAMETERS ALL one_ConID=0 returned_parameters gs_cont_pe, sMat, gs_InsMat	endifreturn"get_mat":	success = LIBRARYGLOBAL ("Libraryflobals-km", "mat_by_type_code", mat_by_type_code)	is_mat_set = 0	if (show_spec or type_spec = "Не специфицировать") and not(is_mat_set) and mat_by_type_code<>1 then		ignore_mat = 0		success = LIBRARYGLOBAL ("Libraryflobals-km", "ignore_mat", ignore_mat)		col_mat = ignore_mat		is_mat_set = 1	endif	if mat_by_type_code<>1 and not(is_mat_set) then		if mat_by_type_code=2 then 			name_mat_arr = "cov_mat_arr"			inx_mat = cov_mat		endif		if mat_by_type_code=3 then			name_mat_arr = "fire_keep_mat_arr"			inx_mat = fire_keep_mat		endif		if mat_by_type_code=4 then			name_mat_arr = "konstr_mat_arr"			inx_mat = type_mat		endif		if mat_by_type_code=5 then			name_mat_arr = "fire_mat_arr"			inx_mat = fire_mat		endif		if mat_by_type_code=6 then			name_mat_arr = "stal_mat_arr"			inx_mat = stal_mat		endif		if mat_by_type_code=7 then			name_mat_arr = "type_spec_mat_arr"			inx_mat = type_spec_mat		endif		if mat_by_type_code=8 then			name_mat_arr = "connect_mat_arr"			inx_mat = upr_mat		endif		if inx_mat=99 or inx_mat<1 then 			col_mat = 0		else			dim cov_mat_arr[]			success = LIBRARYGLOBAL ("Libraryflobals-km", name_mat_arr, cov_mat_arr)			col_mat = cov_mat_arr[inx_mat]		endif		is_mat_set = 1	endif	if strlen(syst_name)>1 then col_mat = sMat	if gs_shadow=0 then		shadow off	else		shadow on	endifreturn"set_mat":	material col_mat	pen gs_cont_pen	fill gs_fill_type_sec	line_type gs_line_type	SECT_ATTRS gs_fill_type_sec, gs_back_pen, gs_fill_pen, gs_sec_pen, gs_line_typereturn"coord_cut":	!Определения координаты z конца профиля с учётом подрезки	!ics - начало/конец	if ics = is then		sgn_ang = 1		type_cutf_tm = type_cutf_s	endif	if ics = ie then		sgn_ang = -1		type_cutf_tm = type_cutf_e	endif	if dxc>0 and dyc>=0 then phic = atn(dyc/dxc)	if dxc>0 and dyc<0 then phic = atn(dyc/dxc)+360	if dxc<0 then phic = atn(dyc/dxc)+180	if dxc=0 and dyc>0 then phic = 90	if dxc=0 and dyc<0 then phic = 270	if dxc=0 and dyc=0 then phic = 0	if type_cutf_tm = 1 then		rc = dyc		icf = il		if phic>=0 and phic<=180 then icf = ip	endif	if type_cutf_tm = 2 then		rc = dxc		icf = in		if phic>=90 and phic<=270 then icf = iv	endif	dzc = sgn_ang * rc * tan(pos_cutf[ics][icf])return