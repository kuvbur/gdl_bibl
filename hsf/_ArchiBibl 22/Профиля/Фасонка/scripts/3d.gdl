if strlen(syst_name)>1 then	if show_el < EPS then end	IF show_op < EPS THEN END	CALL "MEP_m_RequestSystemGlobals" PARAMETERS ALL one_ConID=0 returned_parameters gs_cont_pe, sMat, gs_InsMatendifcall "Шаблон профиля" parameters allif not(show) then endsuccess = LIBRARYGLOBAL ("Libraryflobals-km", "mat_by_type_code", mat_by_type_code)is_mat_set = 0if (show_spec or type_spec = "Не специфицировать") and not(is_mat_set) and mat_by_type_code<>1 then	ignore_mat = 0	success = LIBRARYGLOBAL ("Libraryflobals-km", "ignore_mat", ignore_mat)	col_mat = ignore_mat	is_mat_set = 1endifif mat_by_type_code<>1 and not(is_mat_set) then	if mat_by_type_code=2 then 		name_mat_arr = "cov_mat_arr"		inx_mat = cov_mat	endif	if mat_by_type_code=3 then		name_mat_arr = "fire_keep_mat_arr"		inx_mat = fire_keep_mat	endif	if mat_by_type_code=4 then		name_mat_arr = "konstr_mat_arr"		inx_mat = type_mat	endif	if mat_by_type_code=5 then		name_mat_arr = "fire_mat_arr"		inx_mat = fire_mat	endif	if mat_by_type_code=6 then		name_mat_arr = "stal_mat_arr"		inx_mat = stal_mat	endif	if mat_by_type_code=7 then		name_mat_arr = "type_spec_mat_arr"		inx_mat = type_spec_mat	endif	if mat_by_type_code=8 then		name_mat_arr = "connect_mat_arr"		inx_mat = upr_mat	endif	if inx_mat=99 or inx_mat<1 then 		col_mat = 0	else		dim cov_mat_arr[]		success = LIBRARYGLOBAL ("Libraryflobals-km", name_mat_arr, cov_mat_arr)		col_mat = cov_mat_arr[inx_mat]	endif	is_mat_set = 1endifif strlen(syst_name)>1 then col_mat = sMatpen gs_cont_penfill gs_fill_type_secline_type gs_line_typeSECT_ATTRS gs_fill_type_sec, gs_back_pen, gs_fill_pen, gs_sec_pen, gs_line_typematerial col_matif gs_shadow=0 then	shadow offelse	shadow onendifdel toproty ryrotx rxrotz rzfor i = 1 to n_t	j = i - 1 : if i=1 then j = n_t	dx = kontur[j][1]-kontur[i][1]	dy = kontur[j][2]-kontur[i][2]	gosub "xytorphi3d"	gosub "change_3d"	if r-EPS > t_sten*3-EPS then		if weld_side[i]>EPS then			calltype_weld = weld_side[i]			ang_axis_weld = 0 : if calltype_weld = 2 or calltype_weld = 4 then ang_axis_weld = -90			pos_weld[is][ix]=kontur[i][1] : pos_weld[is][iy]=kontur[i][2] : pos_weld[is][iz]=0			pos_weld[ie][ix]=kontur[j][1] : pos_weld[ie][iy]=kontur[j][2] : pos_weld[ie][iz]=0			gosub "set_weld"		endif		if weld_side_up[i]>EPS then			calltype_weld = weld_side_up[i]			ang_axis_weld = 90 : if calltype_weld = 2 or calltype_weld = 4 then ang_axis_weld = 90			pos_weld[is][ix]=kontur[i][1] : pos_weld[is][iy]=kontur[i][2] : pos_weld[is][iz]=ZZYZX			pos_weld[ie][ix]=kontur[j][1] : pos_weld[ie][iy]=kontur[j][2] : pos_weld[ie][iz]=ZZYZX			gosub "set_weld"		endif	endif	put kontur[i][1], kontur[i][2]	hotline kontur[i][1], kontur[i][2], 0, kontur[i+1][1], kontur[i+1][2], 0, unID : unID=unID+1	hotline kontur[i][1], kontur[i][2], ZZYZX, kontur[i+1][1], kontur[i+1][2], ZZYZX, unID : unID=unID+1next iprism nsp/2,ZZYZX,get(nsp)end"set_weld":	call "Сварка 3д" parameters calltype_weld = calltype_weld, show_weld_line=show_weld_line, pos_weld = pos_weld, ang_axis = ang_axis_weld	pen gs_cont_pen	fill gs_fill_type_sec	line_type gs_line_type	SECT_ATTRS gs_fill_type_sec, gs_back_pen, gs_fill_pen, gs_sec_pen, gs_line_typereturn"change_3d":	HOTSPOT 0, kontur[i][2],0, unID, kontur[i][1], 1+128: unID=unID+1	HOTSPOT -1, kontur[i][2],0, unID, kontur[i][1], 3: unID=unID+1	HOTSPOT kontur[i][1], kontur[i][2],0, unID, kontur[i][1], 2,"gfgf": unID=unID+1	HOTSPOT kontur[i][1], 0,0, unID, kontur[i][2], 1+128: unID=unID+1	HOTSPOT kontur[i][1], -1,0, unID, kontur[i][2], 3: unID=unID+1	HOTSPOT kontur[i][1], kontur[i][2],0, unID, kontur[i][2], 2: unID=unID+1	HOTSPOT 0, kontur[i][2],ZZYZX, unID, kontur[i][1], 1+128: unID=unID+1	HOTSPOT -1, kontur[i][2],ZZYZX, unID, kontur[i][1], 3: unID=unID+1	HOTSPOT kontur[i][1], kontur[i][2],ZZYZX, unID, kontur[i][1], 2: unID=unID+1	HOTSPOT kontur[i][1], 0,ZZYZX, unID, kontur[i][2], 1+128: unID=unID+1	HOTSPOT kontur[i][1], kontur[i][2],ZZYZX, unID, kontur[i][2], 2: unID=unID+1	HOTSPOT kontur[i][1], -1,ZZYZX, unID, kontur[i][2], 3: unID=unID+1	add kontur[i][1], kontur[i][2], 0	rotz phi	addx r/3	HOTSPOT 0, 0,0, unID, weld_side_coord[i][1], 1+128, weld_side[i]: unID=unID+1	HOTSPOT 0, -1,0, unID, weld_side_coord[i][1], 3, weld_side[i]: unID=unID+1	HOTSPOT 0, weld_side_coord[i][1],0, unID, weld_side_coord[i][1], 2, weld_side[i], "Тип шва снизу": unID=unID+1	del 1	addx 2*r/3	HOTSPOT 0, 0,ZZYZX, unID, weld_side_coord[i][2], 1+128, weld_side_up[i]: unID=unID+1	HOTSPOT 0, -1,ZZYZX, unID, weld_side_coord[i][2], 3, weld_side_up[i]: unID=unID+1	HOTSPOT 0, weld_side_coord[i][2],ZZYZX, unID, weld_side_coord[i][2], 2, weld_side_up[i], "Тип шва сверху": unID=unID+1	del 3return"xytorphi3d":	r = SQR(dx*dx+dy*dy)	if dx>0 and dy>=0 then phi = atn(dy/dx)	if dx>0 and dy<0 then phi = atn(dy/dx)+360	if dx<0 then phi = atn(dy/dx)+180	if dx=0 and dy>0 then phi = 90	if dx=0 and dy<0 then phi = 270	if dx=0 and dy=0 then phi = 0return