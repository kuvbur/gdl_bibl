! Contact person: <NJ>! =============================================================================! Section detail level settings! =============================================================================lodSE = LODSE_20if GLOB_SCALE > 21  then lodSE = LODSE_50if GLOB_SCALE > 51  then lodSE = LODSE_100if GLOB_SCALE > 101 then lodSE = LODSE_200if GLOB_SCALE > 201 then lodSE = LODSE_500! =============================================================================! Request globals for Opening Lines! =============================================================================bOplines3d				= 0opLineType3dIn			= 1opLineType3dOut			= 1gs_opline_style_m		= 1gs_opLinePen			= 1call "OpeningOptions" parameters	gs_opening_dir_m	= 2,									bWindow				= 0,									bOverride_MVO_3D	= bOverride_MVO_3D,									or_bOplines3d		= or_bOplines3d,									or_iOpLineType3dIn	= or_iOpLineType3dIn,									or_iOpLineType3dOut	= or_iOpLineType3dOut,									or_iOplineStyle		= or_iOplineStyle,									or_opLinePen		= or_opLinePen,									bEnableSecondaryOpLineTypes = 0,						returned_parameters bOplines3d,											opLineType3dIn,											opLineType3dOut,											dummy,											gs_opline_style_m,											gs_opLinePen! -----------------------------------------------------------------------------! Hotspot Display Control! -----------------------------------------------------------------------------if GLOB_CONTEXT = 4 | GLOB_CONTEXT = 24 then	if lodSE = LODSE_200 | lodSE = LODSE_500 | \		(gs_highspeedgar & lod3D = 5) then		bShowUnitHotspots	= 0		bShowEgressHotspots	= 0		bShowLeafHotspots	= 0		bShowAddHotspots	= 0	else		bShowUnitHotspots	= (lodSE = LODSE_20 | lodSE = LODSE_50 | gs_unit_nominal)		bShowEgressHotspots	= gs_egress_nominal | ((lodSE = LODSE_20 | lodSE = LODSE_50) & bShowAddHotspots)		bShowLeafHotspots	= gs_leaf_nominal | ((lodSE = LODSE_20 | lodSE = LODSE_50) & bShowAddHotspots)	endifelse	bShowUnitHotspots	= 0	bShowEgressHotspots	= 0	bShowLeafHotspots	= 0	bShowAddHotspots	= 0endifif bShowAddHotspotsForIS then	bShowUnitHotspots	= 1	bShowEgressHotspots	= 1	bShowLeafHotspots	= 1	bShowAddHotspots	= 1endif! -----------------------------------------------------------------------------! Sunshading Detail Level control! -----------------------------------------------------------------------------LOD3D_SIMPLEPLANE = 1LOD3D_DETAILEDPLANE = 2LOD3D_SIMPLEPANEL = 3LOD3D_DETAILEDPANEL = 4lod3D_sunShade = 0if lod3D = 1 then lod3D_sunShade = LOD3D_SIMPLEPANEL		! Simple 3Dif lod3D = 2 then lod3D_sunShade = LOD3D_DETAILEDPANEL		! Detailed 3D! CHI Specific ================================================================if lod3D = 5 then  ! Trims , Sills and shutters dont appear in chinese 2D symbol	bEnableMasonryArch	= 0	bEnableSill = 0	bEnableBoard = 0	bEnableCasing = 0	bEnableShutter = 0	bEnableThreshold = 0endif! =============================================================================! Wallhole Structure! =============================================================================call "WallholeStructure" parameters all A = A,	refWidth				= refWidth,	leftWidth				= leftWallholeWidth,	rightWidth				= rightWallholeWidth,	iRevealType				= iRevealType,	iSillRevealType			= iSillRevealType,	iBoardRevealType		= iBoardRevealType,	leftWallholeRevealPnts	= leftWallholeRevealPnts,	rightWallholeRevealPnts	= rightWallholeRevealPnts,	iRevealPointsIdx		= iRevealPointsIdx,	revealInnerLeft			= revealInnerLeft,	revealInnerRight		= revealInnerRight,	iClosureType			= iClosureType,	radSill					= radSill,	radBoard				= radBoard,	WOD						= WOD,	overSizeLeft			= overSizeLeft,	overSizeRight			= overSizeRight,	overSizeUpper			= overSizeUpper,	overSizeLower			= overSizeLower,! --- Function Control Parameters	bEnableParapetInset		= bEnableParapetInset,	bEnableMasonryArch		= bEnableMasonryArch,	bEnableFaschen			= bEnableFaschen,! --- Macro Control Parameters	isWindow				= 0,	gs_IsCurved				= gs_IsCurved,	bParalellInCurvedWalls	= bParalellInCurvedWalls,! --- Corner Functions	bLeftCornerFunction		= bLeftCornerFunction,!	leftCornerAngle			= leftCornerAngle,!	leftConnWallThk			= leftConnWallThk,	bRightCornerFunction	= bRightCornerFunction,!	rightCornerAngle		= rightCornerAngle,!	rightConnWallThk		= rightConnWallThk,! --- sunShade wallhole size modification	includeBoxHeight		= _includeBoxHeight,! --- Turn Plaster	possibleSkinTurnIn				= possibleSkinTurnIn,	possibleSkinTurnOut				= possibleSkinTurnOut,	gs_turn_plaster_show_3D			= gs_turn_plaster_show_3D,	thkPlasterAtSillLeft			= thkPlasterAtSillLeft,	thkPlasterAtSillRight			= thkPlasterAtSillRight,	thkPlasterAtSillTop				= thkPlasterAtSillTop,	thkPlasterAtSillBottom			= thkPlasterAtSillBottom,	thkPlasterAtSillSlLeft			= thkPlasterAtSillSlLeft,	thkPlasterAtSillSlLeftBottom	= thkPlasterAtSillSlLeftBottom,	thkPlasterAtSillSlRight			= thkPlasterAtSillSlRight,	thkPlasterAtSillSlRightBottom	= thkPlasterAtSillSlRightBottom,	thkPlasterAtBoardLeft			= thkPlasterAtBoardLeft,	thkPlasterAtBoardRight			= thkPlasterAtBoardRight,	thkPlasterAtBoardTop			= thkPlasterAtBoardTop,	thkPlasterAtBoardBottom			= thkPlasterAtBoardBottom,	thkPlasterAtBoardSlLeft			= thkPlasterAtBoardSlLeft,	thkPlasterAtBoardSlLeftBottom	= thkPlasterAtBoardSlLeftBottom,	thkPlasterAtBoardSlRight		= thkPlasterAtBoardSlRight,	thkPlasterAtBoardSlRightBottom	= thkPlasterAtBoardSlRightBottom,! --- Window Sizes	gs_wallhole_hotspots	= 1,	gs_reveal_hotspots		= 1,! --- Casing	bDrawOutsideTrim		= bDrawOutsideTrim,	bDrawInsideTrim			= bDrawInsideTrim,! --- String Resources	stWallContourLine		= stWallContourLine,	stMasonryArchTypes		= stMasonryArchTypes,	stMasonryArchStructure	= stMasonryArchStructure,	bShowAddHotspotsForIS	= bShowAddHotspotsForIS! =============================================================================! Wallhole Framing! =============================================================================if lod3D > 0 then	gs_sill_pen_3D	= 0	gs_board_pen_3D	= 0	call "WallholeFraming" parameters all A = A,		refWidth				= refWidth,		leftWidth				= leftWidth,		rightWidth				= rightWidth,		iRevealType				= iRevealType,		iSillRevealType			= iSillRevealType,		leftWallFrameRevealPnts	= leftWallFrameRevealPnts,		rightWallFrameRevealPnts= rightWallFrameRevealPnts,		iRevealPointsIdx		= iRevealPointsIdx,		revealInnerLeft			= revealInnerLeft,		revealInnerRight		= revealInnerRight,		radSill					= radSill,		radBoard				= radBoard,		WOD						= WOD,		overSizeLeft			= overSizeLeft,		overSizeRight			= overSizeRight,		overSizeUpper			= overSizeUpper,		overSizeLower			= overSizeLower,	! --- Function Control Parameters		bEnableSill				= bEnableSill,		bEnableBoard			= bEnableBoard,		bEnableThreshold		= bEnableThreshold,		bEnableCasing			= bEnableCasing,		bEnableShutter			= bEnableShutter,		bEnableCustomCornerLeft		= bEnableCustomCornerLeft,		bEnableCustomCornerRight	= bEnableCustomCornerRight,		bDoorWithSidelightSupport	= bDoorWithSidelightSupport,	! --- Macro Control Parameters		isWindow				= 0,		gs_IsCurved				= gs_IsCurved,		bParalellInCurvedWalls	= bParalellInCurvedWalls,		bCasingTolerance		= 0,		bSillPlaneCut			= bSillPlaneCut,		bBoardPlaneCut			= bBoardPlaneCut,		iFrameStyle				= gs_frame_style_m,	! --- Corner Functions		bLeftCornerFunction		= bLeftCornerFunction,!		leftCornerAngle			= leftCornerAngle,!		leftConnWallThk			= leftConnWallThk,		bRightCornerFunction	= bRightCornerFunction,!		rightCornerAngle		= rightCornerAngle,!		rightConnWallThk		= rightConnWallThk,	! --- sunShade wallhole size modification		includeBoxHeight		= _includeBoxHeight,	! --- Turn Plaster		gs_turn_plaster_show_3D			= gs_turn_plaster_show_3D,		thkPlasterAtSillLeft			= thkPlasterAtSillLeft,		thkPlasterAtSillRight			= thkPlasterAtSillRight,		thkPlasterAtSillTop				= thkPlasterAtSillTop,		thkPlasterAtSillBottom			= thkPlasterAtSillBottom,		thkPlasterAtSillSlLeft			= thkPlasterAtSillSlLeft,		thkPlasterAtSillSlLeftBottom	= thkPlasterAtSillSlLeftBottom,		thkPlasterAtSillSlRight			= thkPlasterAtSillSlRight,		thkPlasterAtSillSlRightBottom	= thkPlasterAtSillSlRightBottom,		thkPlasterAtBoardLeft			= thkPlasterAtBoardLeft,		thkPlasterAtBoardRight			= thkPlasterAtBoardRight,		thkPlasterAtBoardTop			= thkPlasterAtBoardTop,		thkPlasterAtBoardBottom			= thkPlasterAtBoardBottom,		thkPlasterAtBoardSlLeft			= thkPlasterAtBoardSlLeft,		thkPlasterAtBoardSlLeftBottom	= thkPlasterAtBoardSlLeftBottom,		thkPlasterAtBoardSlRight		= thkPlasterAtBoardSlRight,		thkPlasterAtBoardSlRightBottom	= thkPlasterAtBoardSlRightBottom,	! --- Casing		gs_trim_below_board		= gs_trim_below_board,		bCasingBottomOutside	= bCasingBottomOutside,		gs_sill_outside			= gs_sill_outside,	! --- String Resources		stSillTypes				= stSillTypes,		stThresholdTypes		= stThresholdTypes,		stBsilldetlevel 		= stBsilldetlevel,		lod3D_sunShade			= lod3D_sunShadeendif! =============================================================================! Returned Parameters! =============================================================================if gs_stack_top then	gs_frame_ovhg_top_out	= 0	gs_frame_ovhg_top_in	= 0else	if iRevealType = REVEAL_SLANTED then		gs_frame_ovhg_top_out	= gs_tolerance_upper + VentilationProfileHeight * isVentilationOverFrame + WIDO_FRAME_THICKNESS * tan(gs_reveal_top_angle)		gs_frame_ovhg_top_in	= gs_tolerance_upper + VentilationProfileHeight * isVentilationOverFrame	else		gs_frame_ovhg_top_out	= gs_tolerance_upper + VentilationProfileHeight * isVentilationOverFrame		gs_frame_ovhg_top_in	= gs_tolerance_upper + VentilationProfileHeight * isVentilationOverFrame	endifendifif bDoorWithSidelightSupport then	if (gs_sidelight_left & gs_sill_outside_sl_left) | (gs_sidelight_right & gs_sill_outside_sl_right) then		if iSillType = 1 then			overSizeLower = gs_sill_oversize * gs_sill_thk		endif	endif	if iRevealType = REVEAL_SLANTED & (not(bDrawSill) & not(bDrawBoard)) then		gs_frame_ovhg_bottom_out	= overSizeLower! + gs_tolerance_lower + WIDO_FRAME_THICKNESS * tan(gs_reveal_bottom_angle)		gs_frame_ovhg_bottom_in		= overSizeLower! + gs_tolerance_lower	else		gs_frame_ovhg_bottom_out	= overSizeLower! + gs_tolerance_lower		gs_frame_ovhg_bottom_in		= overSizeLower! + gs_tolerance_lower	endifelse	gs_frame_ovhg_bottom_out = 0	gs_frame_ovhg_bottom_in	 = 0endifif iRevealType = REVEAL_SLANTED & not(WIDO_REVEAL_SIDE) then	temp = gs_frame_ovhg_top_in	gs_frame_ovhg_top_in = gs_frame_ovhg_top_out	gs_frame_ovhg_top_out = tempendif! =============================================================================addPrmX = offsWindowXaddPrmY = -(WIDO_REVEAL_SIDE - not(WIDO_REVEAL_SIDE)) * gs_frame_wthk * WIDO_SILL			!!!WIDO_FRAME_THICKNESSmulPrmX = not(bMirrored) - bMirroredmulPrmY = 1if not(bShowReveal) then	leftUnitWidth	= min(-leftWallFrameRevealPnts[idxFrameStartRevealLeft][1], -leftWallFrameRevealPnts[idxFrameEndRevealLeft][1])	rightUnitWidth	= min(rightWallFrameRevealPnts[idxFrameStartRevealRight][1], rightWallFrameRevealPnts[idxFrameEndRevealRight][1])	ac_unit_width = leftUnitWidth + rightUnitWidthendifend ac_unit_width,	ac_unit_height,	gs_frame_ovhg_left_out,	gs_frame_ovhg_right_out,	gs_frame_ovhg_top_out,	gs_frame_ovhg_bottom_out,	gs_frame_ovhg_left_in,	gs_frame_ovhg_right_in,	gs_frame_ovhg_top_in,	gs_frame_ovhg_bottom_in,	gs_frame_wthk,	gs_fthk,	gs_treshold_thk * (bThreshold & (iThresholdType > 3)),	bMirrored,	mulPrmX, 0,					 0,					 addPrmX,	0,		 mulPrmY * cos(-90),-sin(-90),			 0,	0,		 mulPrmY * sin(-90), mulPrmY * cos(-90),-addPrmY,	bOplines3d, opLineType3dIn, opLineType3dOut, gs_opline_style_m, gs_opLinePen,	bShowAddHotspots, bShowAddHotspotsForIS, bShowUnitHotspots, bShowEgressHotspots, bShowLeafHotspots,	! Extra Sizes for Pocket Doors	gs_unit_extra_left,	gs_unit_extra_right