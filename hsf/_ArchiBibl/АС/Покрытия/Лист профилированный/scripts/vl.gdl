dim tip_proflist_n[]
dim tip_proflist[][]
i=0

i=i+1
tip_proflist_n[i] = "Н75-750-0,7"
tip_proflist[i][1] = 7/10000 : tip_proflist[i][2] = 750/1000 : tip_proflist[i][3] = 9.8 : tip_proflist[i][4] = 560/1000
tip_proflist[i][5] = 7/1000 : tip_proflist[i][6] = 7/1000 : tip_proflist[i][7] = 7/1000 : tip_proflist[i][8] = 7/1000

i=i+1
tip_proflist_n[i] = "Н75-750-0,8"
tip_proflist[i][1] = 8/10000 : tip_proflist[i][2] = 750/1000 : tip_proflist[i][3] = 11.2 : tip_proflist[i][4] = 560/1000
tip_proflist[i][5] = 7/1000 : tip_proflist[i][6] = 7/1000 : tip_proflist[i][7] = 7/1000 : tip_proflist[i][8] = 7/1000

i=i+1
tip_proflist_n[i] = "Н114-750-0,8"
tip_proflist[i][1] = 8/10000 : tip_proflist[i][2] = 750/1000 : tip_proflist[i][3] = 12.5 : tip_proflist[i][4] = 560/1000
tip_proflist[i][5] = 7/1000 : tip_proflist[i][6] = 7/1000 : tip_proflist[i][7] = 7/1000 : tip_proflist[i][8] = 7/1000

i=i+1
tip_proflist_n[i] = "C21-1000-0,6"
tip_proflist[i][1] = 6/10000 : tip_proflist[i][2] = 1000/1000 : tip_proflist[i][3] = 6.4 : tip_proflist[i][4] = 900/1000
tip_proflist[i][5] = 7/1000 : tip_proflist[i][6] = 7/1000 : tip_proflist[i][7] = 7/1000 : tip_proflist[i][8] = 7/1000

i=i+1
tip_proflist_n[i] = "Н75-750-0,9"
tip_proflist[i][1] = 9/10000 : tip_proflist[i][2] = 750/1000 : tip_proflist[i][3] = 12.5 : tip_proflist[i][4] = 560/1000
tip_proflist[i][5] = 7/1000 : tip_proflist[i][6] = 7/1000 : tip_proflist[i][7] = 7/1000 : tip_proflist[i][8] = 7/1000

i=i+1
tip_proflist_n[i] = "Н114-750-1"
tip_proflist[i][1] = 10/10000 : tip_proflist[i][2] = 750/1000 : tip_proflist[i][3] = 12.5 : tip_proflist[i][4] = 560/1000
tip_proflist[i][5] = 7/1000 : tip_proflist[i][6] = 7/1000 : tip_proflist[i][7] = 7/1000 : tip_proflist[i][8] = 7/1000

values "stal_marka" "Ст3пс",CUSTOM 

values "mat_pokr_up" "Ц1",CUSTOM
values "mat_pokr_down" "Ц1",CUSTOM


values "tip_prof" tip_proflist_n
PARAMETERS tip_profile = tip_prof


for i = 1 to vardim1(tip_proflist)
	if tip_prof = tip_proflist_n[i] then
		n_list = CEIL ((B - 50/1000 )/ tip_proflist[i][4])
		parameters dlin_el = ROUND_INT((n_list * A + n_list * A * 0.05)*100)/100
		parameters ves_p = tip_proflist[i][3]
		parameters naen = tip_proflist_n[i] + " " + stal_marka + " " + mat_pokr_up + mat_pokr_down
		parameters thickness = tip_proflist[i][1]


	endif
next i


!values "thickness" range (0, )

PARAMETERS ves = ves_p*A*B + ves_p*A*B*0.05

dim tip_konstr_m[]
success = LIBRARYGLOBAL ("Libraryflobals-km", "konstr_type_arr", tip_konstr_m)
values "tip_konstr" tip_konstr_m, CUSTOM
dim type_spec_type_arr[]
success = LIBRARYGLOBAL ("Libraryflobals-km", "type_spec_type_arr", type_spec_type_arr)
values "type_spec" type_spec_type_arr

parameters obozn = "ГОСТ 24045-2016"



!call "FM_types" parameters

!values "gs_resol" range[3,)

!=============================================================================
! Profile types and sizes
!=============================================================================

values "profiles" stProfileTypes
values "iProfiles" 1, 2, 3, 4, 5

if GLOB_MODPAR_NAME = "profiles" then
	iProfiles = 1
	if profiles = stProfileTypes[2] then iProfiles = 2
	if profiles = stProfileTypes[3] then iProfiles = 3
	if profiles = stProfileTypes[4] then iProfiles = 4
	if profiles = stProfileTypes[5] then iProfiles = 5
	parameters iProfiles = iProfiles
else
	Profiles = stProfileTypes[1]
	if iprofiles = 2 then Profiles = stProfileTypes[2]
	if iprofiles = 3 then Profiles = stProfileTypes[3]
	if iprofiles = 4 then Profiles = stProfileTypes[4]
	if iprofiles = 5 then Profiles = stProfileTypes[5]
	parameters Profiles = Profiles
endif
!!!
!!!values "size" profileDefaults, `Специальный`
!!!
!!!if GLOB_MODPAR_NAME = "profiles" or GLOB_MODPAR_NAME = "iProfiles" then
!!!	if iProfiles = 1 then size = profileDefaults[1]
!!!	if iProfiles = 2 then size = profileDefaults[1]
!!!	if iProfiles = 3 then size = profileDefaults[3]
!!!	if iProfiles = 4 then size = profileDefaults[1]
!!!	if iProfiles = 5 then size = profileDefaults[3]
!!!	parameters size = size
!!!endif
!!!
!!!if GLOB_MODPAR_NAME = "size" or GLOB_MODPAR_NAME = "profiles" or GLOB_MODPAR_NAME = "iProfiles" then
!!!	for i = 1 to vardim1(enabledDefaults)
!!!		if enabledDefaults[i] > 0 then
!!!			if size = profileDefaults[enabledDefaults[i]] then
!!!				waveHeight = profileSizes[i][1]
!!!				waveLength = profileSizes[i][2]
!!!				parameters waveHeight = waveHeight, waveLength = waveLength
!!!
!!!				i = vardim1(enabledDefaults)		! break
!!!			endif
!!!		endif
!!!	next i
!!!else
!!!	actSize = str(sizeFormat, waveHeight) + strSeparatorCharacter + str(sizeFormat, waveLength)
!!!	bCustom = 1
!!!	for i = 1 to vardim1(profileDefaults)
!!!		if actSize = profileDefaults[i] then bCustom = 0
!!!	next i
!!!
!!!	if bCustom then
!!!		size = `Специальный`
!!!	else
!!!		size = actSize
!!!	endif
!!!	parameters size = size
!!!endif



!!!
!!!!=============================================================================
!!!! Profile wave upper and bottom defaults, ranges
!!!!=============================================================================
!!!
!!!if GLOB_MODPAR_NAME = "profiles" or GLOB_MODPAR_NAME = "iProfiles" or GLOB_MODPAR_NAME = "size" then
!!!	if iProfiles = 1 then
!!!		width_upper = 0.1225
!!!		width_bottom = 0.1875
!!!	endif
!!!
!!!	if iProfiles = 2 then
!!!		width_upper = 0.0625
!!!		width_bottom = 0.0285
!!!	endif
!!!
!!!	if iProfiles = 3 then
!!!		if size = profileDefaults[1] then
!!!			width_upper = waveLength-0.0270833
!!!			width_bottom = waveLength-0.018396
!!!		else
!!!			if size = profileDefaults[2] then
!!!				width_upper = waveLength-0.0425
!!!				width_bottom = waveLength-0.02545
!!!			else
!!!				if size = profileDefaults[3] then
!!!					width_upper = waveLength-0.04333
!!!					width_bottom = waveLength-0.02943
!!!				else
!!!					if size = profileDefaults[4] then
!!!						width_upper = waveLength-0.0635
!!!						width_bottom = waveLength-0.04445
!!!					else
!!!						if size = profileDefaults[5] then
!!!							width_upper = waveLength-0.06985
!!!							width_bottom = waveLength-0.0381
!!!						else
!!!							width_upper = waveLength-0.04333
!!!							width_bottom = waveLength-0.02943
!!!						endif
!!!					endif
!!!				endif
!!!			endif
!!!		endif
!!!	endif
!!!
!!!	if iProfiles = 4 then
!!!		if size = profileDefaults[1] then
!!!			width_upper = waveLength-0.063
!!!			width_bottom = waveLength-0.0428
!!!		else
!!!			width_upper = waveLength-0.04333
!!!			width_bottom = waveLength-0.02943
!!!		endif
!!!	endif
!!!
!!!	parameters width_upper = width_upper, width_bottom = width_bottom
!!!endif
!!!
!!!
!!!!--- Profile 1 ---
!!!
!!!if iProfiles = 1 then
!!!	values "width_bottom" range [width_upper, waveLength - 0.026]
!!!	values "width_upper" range (0, width_bottom]
!!!endif
!!!
!!!!--- Profile 2 ---
!!!
!!!if iProfiles = 2 then
!!!	values "width_bottom" range (0, width_upper]
!!!	values "width_upper" range [width_bottom, waveLength)
!!!endif
!!!
!!!!--- Profile 3, Profile 4 ---
!!!
!!!if iProfiles = 3 or iProfiles = 4 then
!!!	values "width_bottom" range [width_upper, waveLength)
!!!	values "width_upper" range (0, width_bottom]
!!!endif
!!!
!!!!--- Profile 5 ---
!!!
!!!if iProfiles = 5 then
!!!	lock "width_upper", "width_bottom"
!!!	hideparameter "width_upper", "width_bottom"
!!!endif


!=============================================================================
! Detail Levels
!=============================================================================

! ----------- STRING VALUES

values "gs_detlevel_3D" stDetlevel3DValues
values "gs_detlevel_2D" stDetlevel2DValues

values "gs_detlevel_3D_m"  DETLEVEL_3D_SIMPLE, DETLEVEL_3D_DETAILED, DETLEVEL_3D_OFF
values "gs_detlevel_2D_m"  DETLEVEL_2D_CONTOUR, DETLEVEL_2D_SIMPLE, DETLEVEL_2D_DETAILED

! ---------- STRING - INTEGER CONNECTION

if GLOB_MODPAR_NAME = "gs_detlevel_3D" then
	gs_detlevel_3D_m = DETLEVEL_3D_SIMPLE
	if gs_detlevel_3D = stDetlevel3DValues[2] then gs_detlevel_3D_m = DETLEVEL_3D_DETAILED
	if gs_detlevel_3D = stDetlevel3DValues[3] then gs_detlevel_3D_m = DETLEVEL_3D_OFF
	parameters gs_detlevel_3D_m = gs_detlevel_3D_m
else
	gs_detlevel_3D = stDetlevel3DValues[1]
	if gs_detlevel_3D_m = DETLEVEL_3D_DETAILED then gs_detlevel_3D = stDetlevel3DValues[2]
	if gs_detlevel_3D_m = DETLEVEL_3D_OFF then gs_detlevel_3D = stDetlevel3DValues[3]
	parameters gs_detlevel_3D = gs_detlevel_3D
endif

if GLOB_MODPAR_NAME = "gs_detlevel_2D" then
	gs_detlevel_2D_m = DETLEVEL_2D_CONTOUR
	if gs_detlevel_2D = stDetlevel2DValues[2] then gs_detlevel_2D_m = DETLEVEL_2D_SIMPLE
	if gs_detlevel_2D = stDetlevel2DValues[3] then gs_detlevel_2D_m = DETLEVEL_2D_DETAILED
	parameters gs_detlevel_2D_m = gs_detlevel_2D_m
else
	gs_detlevel_2D = stDetlevel2DValues[1]
	if gs_detlevel_2D_m = DETLEVEL_2D_SIMPLE then gs_detlevel_2D = stDetlevel2DValues[2]
	if gs_detlevel_2D_m = DETLEVEL_2D_DETAILED then gs_detlevel_2D = stDetlevel2DValues[3]
	parameters gs_detlevel_2D = gs_detlevel_2D
endif


!=============================================================================
! Sheet cutting
!=============================================================================

values "strTopCut" stCuttingTypes
values "strBottomCut" stCuttingTypes
values "iTopCut" 1, 2
values "iBottomCut" 1, 2

if GLOB_MODPAR_NAME = "strTopCut" then
	iTopCut = 1
	if strTopCut = stCuttingTypes[2] then iTopCut = 2
	parameters iTopCut = iTopCut
else
	strTopCut = stCuttingTypes[1]
	if iTopCut = 2 then strTopCut = stCuttingTypes[2]
	parameters strTopCut = strTopCut
endif

if GLOB_MODPAR_NAME = "strBottomCut" then
	iBottomCut = 1
	if strBottomCut = stCuttingTypes[2] then iBottomCut = 2
	parameters iBottomCut = iBottomCut
else
	strBottomCut = stCuttingTypes[1]
	if iBottomCut = 2 then strBottomCut = stCuttingTypes[2]
	parameters strBottomCut = strBottomCut
endif


!=============================================================================
! Cut parameters
!=============================================================================

values "rotation" range [-90,90]

if abs(rotation)<eps or abs(rotation-90) < eps then
	lock "strTopCut", "strBottomCut"
endif

if abs(angCut1)<eps then lock "cut_width_1"
if abs(angCut2)<eps then lock "cut_width_2"
if abs(angCut3)<eps then lock "cut_width_3"
if abs(angCut4)<eps then lock "cut_width_4"

values "angCut1" range [0, 90)
values "angCut2" range [0, 90)
values "angCut3" range [0, 90)
values "angCut4" range [0, 90)

values "cut_width_1" range [0, width]
values "cut_width_2" range [0, width-cut_width_1*(angCut1>0)]
values "cut_width_3" range [0, width]
values "cut_width_4" range [0, width-cut_width_3*(angCut3>0)]

values "waveLength" range (0, )
values "waveHeight" range (0, )


values "width" 	range (0, )
values "length" range (0, )
values "A2" 	range (0, )


! --- Sizes ---------------------------------------------------------------------

if abs(rotation-90) < eps or abs(rotation+90) < eps then
	A = waveHeight
	parameters A = A
else
	if GLOB_MODPAR_NAME = "A" then
		length = abs(A/cos(rotation) + waveHeight*abs(tan(rotation)))
		parameters length = length
	else
		A = abs((length-waveHeight*abs(tan(rotation))) * cos(rotation))
		parameters A = A
	endif
endif

if GLOB_MODPAR_NAME = "B" then
	width = B
	parameters width = width
else
	B = width
	parameters B = B
endif

if abs(rotation) < eps then
	parameters ZZYZX = waveHeight
	lock "ZZYZX"
else
	if GLOB_MODPAR_NAME = "ZZYZX" then
		length = abs((ZZYZX - waveHeight*cos(rotation)) / sin(rotation))
		parameters length = length
	else
		ZZYZX = abs(length*sin(rotation) + waveHeight*cos(rotation))
		parameters ZZYZX = ZZYZX
	endif
endif

if abs(rotation-90) < eps or abs(rotation+90) < eps then
	A2 = waveHeight
	parameters A2 = A2
else
	if GLOB_MODPAR_NAME = "A2" then
		length = A2/cos(rotation)
		parameters length = length
	else
		A2 = length * cos(rotation)
		parameters A2 = A2
	endif
endif


!=============================================================================
! User Interface
!=============================================================================

call "ui_tabcontrol" parameters controlType = 1,
								gs_ui_current_page = gs_ui_current_page,
								nTabs = nTabs


