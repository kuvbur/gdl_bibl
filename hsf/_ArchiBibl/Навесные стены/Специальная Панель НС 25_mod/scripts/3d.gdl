
if iDetlevel3D = DETLEVEL3D_MVO then
	iDetlevel3D = GLOB_MVO_CWPANEL_DETLEVEL 	! Schematic, Simple, Detailed
endif
if not(gs_shadow) then SHADOW OFF

hotspot centerX, centerY, 0

! No Detailed/Middle Model if panel is only in frame clamps
if	iDetlevel3D <> DETLEVEL3D_SCHEMATIC & vardim1(AC_clampFreeRegionCoords) < 3 then end

if iDetlevel3D = DETLEVEL3D_DETAILED then
	gosub "DetailedModel"
else
	dim boundaryCoords[][]
	if iDetlevel3D = DETLEVEL3D_SCHEMATIC then
		boundaryCoords = AC_FrameAxisCoords
	else
		boundaryCoords = AC_clampFreeRegionCoords
	endif

	_matPanel = matPanel
	if not(bOverrideSurface) then
		bSucceed = request{2} ("Building_Material_info", panelBMat, "gs_bmat_surface", _matPanel)
	endif

	call "SchematicCWSash" parameters 	iPanelType					= 0,			! FIX_PANEL
										iDetlevel3D 				= iDetlevel3D,
										boundaryCoords				= boundaryCoords,

								! --- Simple Model -------------------------------------------
										offsetPanel					= AC_clampWidth/2 - panelThk/2 - offsetPanel,	! default: panel center is on the axis
										panelThk					= panelThk,

								! --- Panel Attributes ---------------------------------------
										penPanelUncut				= penUnCut,
										penPanelCut					= penCut,
										panelBMat					= panelBMat,
										matPanel					= _matPanel


									
endif

!=============================================================================================================================
END ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end
!=============================================================================================================================

! ====================================================================================
"DetailedModel":
! ====================================================================================

if gs_cust_panel = "" then			! just a plane panel in case of no custom panel named
	building_material panelBMat
	if bOverrideSurface then material matPanel

	addz -AC_ClampWidth / 2 - offsetPanel
	for i = 1 to nCorners_in
		put AC_clampFreeRegionCoords [i][1], AC_clampFreeRegionCoords [i][2], 15
	next i

	prism_ nCorners_in, AC_Clampwidth,
			get (nsp)
	del 1
else
	addx (leftSide_X + rightSide_X) / 2
	addy (downSide_Y + upperSide_Y) / 2

	if GLOB_VIEW_TYPE = 3 then		! 3D view
		unID = 1
		r = min (leftSide_X + rightSide_X, downSide_Y + upperSide_Y) / 4
		hotspot 0, 							0, 							0, unID, gs_updirection, 6 : unID = unID +1 !center of angle
		hotspot 0, 							r,							0, unID, gs_updirection, 4+128 : unID = unID +1 !base hotspot
		hotspot r * sin (gs_updirection), 	r * cos (gs_updirection), 	0, unID, gs_updirection, 5 : unID = unID +1 !moving
		hotspot 0, 							0, 							-1, unID, gs_updirection, 7 : unID = unID +1 !center of angle
	endif

	rotz -gs_updirection

	if abs (gs_updirection) < eps then
		addx -(leftSide_X + rightSide_X) / 2 + leftSide_X
		addy -(downSide_Y + upperSide_Y) / 2 + downSide_Y
		panelWidth = rightSide_X - leftSide_X
		panelHeight = upperSide_Y - downSide_Y
	endif
	if abs (gs_updirection - 90) < eps then
		addx -(downSide_Y + upperSide_Y) / 2 + downSide_Y
		addy -(leftSide_X + rightSide_X) / 2 + leftSide_X
		panelHeight = rightSide_X - leftSide_X
		panelWidth = upperSide_Y - downSide_Y
	endif
	if abs (gs_updirection - 180) < eps then
		addx -(leftSide_X + rightSide_X) / 2 + leftSide_X
		addy -(downSide_Y + upperSide_Y) / 2 + downSide_Y
		panelWidth = rightSide_X - leftSide_X
		panelHeight = upperSide_Y - downSide_Y
	endif
	if abs (gs_updirection - 270) < eps then
		addx -(downSide_Y + upperSide_Y) / 2 + downSide_Y
		addy -(leftSide_X + rightSide_X) / 2 + leftSide_X
		panelHeight = rightSide_X - leftSide_X
		panelWidth = upperSide_Y - downSide_Y
	endif

	addz -panelThk + AC_ClampWidth / 2 - offsetPanel

	if bFlipped then
		addz panelThk
		mulz -1
	endif

	call "CW_Panel_Collection" parameters a = panelWidth,
							b 				= panelHeight,
							zzyzx			= panelThk,
							gs_ptype		= gs_cust_panel
endif

return

