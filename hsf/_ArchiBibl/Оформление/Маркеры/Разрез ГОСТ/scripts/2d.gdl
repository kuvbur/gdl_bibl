uncorrect_ang_1 = 0
ang_1 = int(SYMB_ROTANGLE/5)*5
if SYMB_ROTANGLE>ang_1 then ang_1 = ang_1+5
if abs(ang_1*1000-SYMB_ROTANGLE*1000)>0.000001 then uncorrect_ang_1 = 1
err_pen = 3
error_layer = 0 : if strstr(GLOB_LAYER, "ARCHICAD",1)<>0 then error_layer = 1
if uncorrect_ang_1=1 or error_layer then
	CS_Sline_Pen = err_pen
	CS_Arr_Pen = err_pen
	CS_Line_Pen = err_pen
endif
if annot[1] = 0 then 
	show  = 1
else
	show = 0
	for i=1 to vardim1(annot)
		if annot[i] = GLOB_SCALE then show = 1
	next i
endif
if upr_rezhim_show>EPS then
	if abs(GLOB_STRUCTURE_DISPLAY+1-upr_rezhim_show)>EPS then show = 0
else
	if upr_rezhim_hide>EPS then
		if abs(GLOB_STRUCTURE_DISPLAY+1-upr_rezhim_hide)<EPS then show = 0
	endif
endif
if not(show) then end

_txt = txt
IF mrr<0 THEN
	IF AS_SheetNoSide<>'Конечный маркер' THEN _txt = _txt + txt2
ELSE
	IF AS_SheetNoSide<>'Начальный маркер' THEN _txt = _txt + txt2
ENDIF

index = 0
story_name = ""
n = REQUEST ("Story", "", index, story_name)
DIM tmpel[]
n = REQUEST ("STORY_INFO", "", nr, tmpel)
inx = 1
FOR i = 1 TO nr
	tmp = tmpel [4 * (i - 1) + 1]
	if index = tmp then inx = i
NEXT i

PAPER_TO_MODEL = GLOB_SCALE / 1000	! Convert paper size to model size

angleViewRot = 0
rrr = REQUEST ("View_Rotangle", "", angleViewRot)
totalRotate = (SYMB_ROTANGLE + angleViewRot) MOD 360
_rotateAngleMirroredPos =  180 * SYMB_MIRRORED

MUL2 A_/1000, A_/1000 
DEFINE STYLE  "centerstyle"  AC_TextFont_1 , AC_TextSize_1 , 5, AC_TextStyle_1                ! centered
STYLE centerstyle

dummy = REQUEST("Height_of_style","centerstyle", hos, dsc, ldg)        ! height of style, descent, leading


IF mrr<0 THEN
	txtH=hos+dsc+2*AS_TxtVOffs
ELSE
	txtH=hos+ldg+2*AS_TxtVOffs
ENDIF
! ============== marker definition =====================================

FILL AC_MarkerFill
MUL2 1/(A_/1000), 1/(A_/1000) 
if not(is_sect) then
	if is_eq then
		IF mrr<0 THEN
			HOTSPOT2 0, 0, unID, pos_xvn, 1+128: unID=unID+1
			HOTSPOT2 -1, 0, unID, pos_xvn, 3: unID=unID+1
			HOTSPOT2 pos_xvn, 0, unID, pos_xvn, 2: unID=unID+1
			add2 pos_xvn, 0
		else
			HOTSPOT2 0, 0, unID, pos_xvn1, 1+128: unID=unID+1
			HOTSPOT2 -1, 0, unID, pos_xvn1, 3: unID=unID+1
			HOTSPOT2 pos_xvn1, 0, unID, pos_xvn1, 2: unID=unID+1
			add2 pos_xvn1, 0
		endif
	else
		IF mrr<0 THEN
			HOTSPOT2 0, 0, unID, pos[inx][1], 1+128: unID=unID+1
			HOTSPOT2 -1, 0, unID, pos[inx][1], 3: unID=unID+1
			HOTSPOT2 pos[inx][1], 0, unID, pos[inx][1], 2: unID=unID+1
			add2 pos[inx][1], 0
		else
			HOTSPOT2 0, 0, unID, pos[inx][2], 1+128: unID=unID+1
			HOTSPOT2 -1, 0, unID, pos[inx][2], 3: unID=unID+1
			HOTSPOT2 pos[inx][2], 0, unID, pos[inx][2], 2: unID=unID+1
			add2 pos[inx][2], 0
		endif
	endif
else
	coord_vin_s[inx_vin][1] = 0
	coord_vin_s[inx_vin][2] = 0
	coord_vin[inx_vin][1] = 0
	coord_vin[inx_vin][2] = 0
	fstr_vin = _txt
	IF mrr<0 THEN call "macro_vin" parameters fstr_vin = fstr_vin,sstr_vin = "", coord_vin=coord_vin, coord_vin_s=coord_vin_s, use_hotspot=1, Shrift=AC_TextFont_1 , Shrift_razm=AC_TextSize_1, Shrift_tip=AC_TextStyle_1
endif
MUL2 A_/1000, A_/1000 
IF CS_SLine_Show THEN
	!!! ---- ????? ??????? ----
	PEN CS_Sline_Pen
		 POLY2 4,7,
			   0, CS_SLine_Thk/2,
			   CS_SLine_Lenght, CS_SLine_Thk/2,
			   CS_SLine_Lenght,-CS_SLine_Thk/2,
			   0, -CS_SLine_Thk/2
	ADD2 0,-CS_SLine_Thk/2
	HOTSPOT2 CS_SLine_Lenght, 0
ENDIF

ADD2 AS_LineIndent,0

HOTSPOT2 0, 0

!txtW=STW (" ")+2*AS_LineOvs
!txtl2=STW(" ")
!!txt2w=STW(" ")+2*AS_LineOvs
!txtW2=txtW+STW(" ")+CS_TTOffset
!txtl=txtW2-2*AS_LineOvs

txtW=5
txtl2=5
txtW2=txtW+CS_TTOffset
txtl=txtW2-2*AS_LineOvs


alpha=SYMB_ROTANGLE-aa

arrLen=ABS(txtW2*SIN(alpha))+ABS(txtH*COS(alpha))

arrLen=5

arrLen2=arrLen/2+AC_MarkerSize
offsX=(-ABS(txtW2*COS(alpha))-ABS(txtH*SIN(alpha)))/2
offsY=-arrLen2

if not(is_sect) then 
	GOSUB 1015
	ADD2 offsX,offsY 
	GOSUB 2000
endif
DEL 1

END

1015:
!!! ---- стрелка ----
PEN CS_Arr_Pen
	 POLY2 3,7,
		   - CS_Arr_B/2, -AC_MarkerSize,
		   CS_Arr_B/2, -AC_MarkerSize,
		   0, 0
PEN CS_Line_Pen
	LINE2 0, -AC_MarkerSize,0, -AC_MarkerSize-arrLen

HOTSPOT2 0, -AC_MarkerSize-arrLen
RETURN

! ============= marker text definition ================================
2000:   
if is_sect then 
	line2 0,0,0, 0
else
	MUL2 1/(A_/1000), 1/(A_/1000) 
	if is_eq then
		IF mrr<0 THEN
			HOTSPOT2 pos_x1, 0, unID, pos_y1, 1+128: unID=unID+1
			HOTSPOT2 pos_x1, -1, unID, pos_y1, 3: unID=unID+1
			HOTSPOT2 pos_x1, pos_y1, unID, pos_y1, 2: unID=unID+1
			HOTSPOT2 0, pos_y1, unID, pos_x1, 1+128: unID=unID+1
			HOTSPOT2 -1, pos_y1, unID, pos_x1, 3: unID=unID+1
			HOTSPOT2 pos_x1, pos_y1, unID, pos_x1, 2: unID=unID+1
			add2 pos_x1, pos_y1
		ELSE
			HOTSPOT2 pos_x2, 0, unID, pos_y2, 1+128: unID=unID+1
			HOTSPOT2 pos_x2, -1, unID, pos_y2, 3: unID=unID+1
			HOTSPOT2 pos_x2, pos_y2, unID, pos_y2, 2: unID=unID+1
			HOTSPOT2 0, pos_y2, unID, pos_x2, 1+128: unID=unID+1
			HOTSPOT2 -1, pos_y2, unID, pos_x2, 3: unID=unID+1
			HOTSPOT2 pos_x2, pos_y2, unID, pos_x2, 2: unID=unID+1
			add2 pos_x2, pos_y2
		ENDIF
	else
		IF mrr<0 THEN
			HOTSPOT2 pos[inx][3], 0, unID, pos[inx][4], 1+128: unID=unID+1
			HOTSPOT2 pos[inx][3], -1, unID, pos[inx][4], 3: unID=unID+1
			HOTSPOT2 pos[inx][3], pos[inx][4], unID, pos[inx][4], 2: unID=unID+1
			HOTSPOT2 0, pos[inx][4], unID, pos[inx][3], 1+128: unID=unID+1
			HOTSPOT2 -1, pos[inx][4], unID, pos[inx][3], 3: unID=unID+1
			HOTSPOT2 pos[inx][3], pos[inx][4], unID, pos[inx][3], 2: unID=unID+1
			add2 pos[inx][3], pos[inx][4]
		ELSE
			HOTSPOT2 pos[inx][5], 0, unID, pos[inx][6], 1+128: unID=unID+1
			HOTSPOT2 pos[inx][5], -1, unID, pos[inx][6], 3: unID=unID+1
			HOTSPOT2 pos[inx][5], pos[inx][6], unID, pos[inx][6], 2: unID=unID+1
			HOTSPOT2 0, pos[inx][6], unID, pos[inx][5], 1+128: unID=unID+1
			HOTSPOT2 -1, pos[inx][6], unID, pos[inx][5], 3: unID=unID+1
			HOTSPOT2 pos[inx][5], pos[inx][6], unID, pos[inx][5], 2: unID=unID+1
			add2 pos[inx][5], pos[inx][6]
		ENDIF
	endif
endif
PEN AC_TextPen_1
!ROT2 SYMB_ROTANGLE * mrr
!IF SYMB_MIRRORED THEN MUL2 -1,1

rot2 totalRotate * (SYMB_MIRRORED - not(SYMB_MIRRORED))

DEFINE STYLE{2} "stl" AC_TextFont_1, AC_TextSize_1, AC_TextStyle_1
tblockname = ""
name_style = "stl"
width_factor = AC_TextCharWidthFactor_1
charspace_factor = AC_TextCharSpaceFactor_1
anchor = 5
txtv = _txt : tblockname = "1" : gosub "get_block"
RICHTEXT2 0, dx, "1"

if bFill then
	add2 0,dx
	DRAWINDEX 10
	pen 19
	FILL GLOB_FILL_INDEX_BACKGROUND
	ls = stw(" 10 (15) ") * PAPER_TO_MODEL
	poly2 4, 2+4, -ls/2,-tbheight/2,  ls/2,-tbheight/2, ls/2,tbheight/2, -ls/2,tbheight/2
	DRAWINDEX 50
	del 1
endif

!STYLE "centerstyle": TEXT2 0, 0 , _txt
DEL 1
IF SYMB_MIRRORED THEN DEL 1
return

"get_block":
	paragraph tblockname+"p" 2,
			0, 0, 0,
			1
			style name_style
			txtv
	endparagraph
	TEXTBLOCK tblockname 0, anchor, 0, width_factor, charspace_factor, 1,tblockname+"p"
	n = REQUEST("TEXTBLOCK_INFO", tblockname, width, height)
	tbwidth = width * PAPER_TO_MODEL
	tbheight = height * PAPER_TO_MODEL
	sss=request("Height_of_style", name_style, height, descent, leading)
	dx = (height/2-descent-leading-AC_TextSize_1/2)*PAPER_TO_MODEL*0.5
return
