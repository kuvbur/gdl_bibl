gosub "set_show_3d"
if not(show) or det_lvl_3d=0 then end
gosub "set_mat"
show_empty=1
IF GLOB_CONTEXT=2 and not(iscall) and not(show_all_proj) THEN det_lvl_3d = 1
if show_only_axsis then det_lvl_3d = 1
if GLOB_PREVIEW_MODE=1 or GLOB_PREVIEW_MODE=2 or GLOB_FEEDBACK_MODE=1 then
	gs_resol = 3
	det_lvl_3d = 1
else
	if GLOB_SEO_TOOL_MODE = 1 then
		gs_resol = 9
		show_empty = 0
	else
		if gs_resol<10 then gs_resol=12
	endif
endif
ws = ws / 1000
ds = ds / 1000
wt = wt / 1000
ft = ft / 1000
rr = rr / 1000
tr = tr / 1000
dbf = dbf / 1000

!-- Собственно само тело с учётом удлинения на подрезку
group "body"
	if mirror_axis=1 then mulx -1
	if mirror_axis=2 then muly -1
	if not(show_only_axsis) then
		material col_mat
		pen gs_cont_pen
		fill gs_fill_type_sec
		line_type gs_line_type
		SECT_ATTRS gs_fill_type_sec, gs_back_pen, gs_fill_pen, gs_sec_pen, gs_line_type
		gosub "set_form"
		gosub "set_path"
		mask = 1+2+16+32
		TUBE n_form, n_path, mask, USE(n_form*3+n_path*4)
	endif
endgroup

material col_mat
pen gs_cont_pen
fill gs_fill_type_sec
line_type gs_line_type
SECT_ATTRS gs_fill_type_sec, gs_back_pen, gs_fill_pen, gs_sec_pen, gs_line_type
placegroup "body"

gosub "clear_buff"

del top
end

"axis3d":
!Отступы начала и конца
	if show_empty = 0 then return
	PUT poly_point_xy [1][1],poly_point_xy [1][2],poly_point_xy [1][3]
	FOR x = 1 TO poly_n-1+poly_closed
		IF ABS(poly_3point_d [x]) < 0.0001  THEN 
			PUT poly_point_xy [x+1][1],poly_point_xy [x+1][2],poly_point_xy [x+1][3]
		ENDIF
		IF ABS(poly_3point_d [x]) > 0.0001 THEN 
			IF (ABS(poly_point_xy [x][1]-poly_point_xy [x+1][1]) > 0.0001) OR (ABS(poly_point_xy [x][2]-poly_point_xy [x+1][2]) > 0.0001) THEN
				poly_res_temp = poly_element_res [1][x]
				inc_temp = 0
				punto_arco_ang = ((poly_3point_angle [x][2]-poly_3point_angle [x][1])/poly_res_temp)
				punto_arco_dz = (poly_point_xy[x+1][3]-poly_point_xy[x][3])/poly_res_temp
				FOR g = 1 TO poly_res_temp+1
					IF poly_3point_d [x] > 0 THEN
						punto_arco_x = poly_3point_xy [x][1]+COS(poly_3point_angle [x][1]+punto_arco_ang *(g-1))*poly_3point_radius [x]
						punto_arco_y = poly_3point_xy [x][2]+SIN(poly_3point_angle [x][1]+punto_arco_ang *(g-1))*poly_3point_radius [x]
					ELSE
						punto_arco_x = poly_3point_xy [x][1]+COS(poly_3point_angle [x][2]-punto_arco_ang *(g-1))*poly_3point_radius [x]
						punto_arco_y = poly_3point_xy [x][2]+SIN(poly_3point_angle [x][2]-punto_arco_ang *(g-1))*poly_3point_radius [x]
					ENDIF
					punto_arco_z = poly_point_xy [x][3]+punto_arco_dz * (g-1)
					PUT punto_arco_x,punto_arco_y,punto_arco_z
				NEXT g
			ELSE
				PUT poly_point_xy [x+1][1],poly_point_xy [x+1][2],poly_point_xy [x+1][3]
			ENDIF
		ENDIF
	NEXT x
	if show_line then
		FOR x = 1 to NSP/3-1
			LIN_ GET(3),USE(3)
		NEXT x
	endif
	gosub "clear_buff"
return

"clear_buff":
	if NSP>0 then
		if n_clear>NSP then n_clear=NSP
		if n_clear=0 then n_clear=NSP
		tt = min(get(n_clear))
	endif
return

"set_path":
	n_path = 0
	tstart = NSP
	PUT poly_point_xy [1][1],poly_point_xy [1][2],poly_point_xy [1][3], ang_form_axis
	FOR x = 1 TO poly_n-1+poly_closed
		IF ABS(poly_3point_d [x]) < 0.0001  THEN 
			PUT poly_point_xy [x+1][1],poly_point_xy [x+1][2],poly_point_xy [x+1][3], ang_form_axis
		ENDIF
		IF ABS(poly_3point_d [x]) > 0.0001 THEN 
			IF (ABS(poly_point_xy [x][1]-poly_point_xy [x+1][1]) > 0.0001) OR (ABS(poly_point_xy [x][2]-poly_point_xy [x+1][2]) > 0.0001) THEN
				poly_res_temp = poly_element_res[1][x]
				inc_temp = 0
				punto_arco_ang = ((poly_3point_angle [x][2]-poly_3point_angle [x][1])/poly_res_temp)
				punto_arco_dz = (poly_point_xy[x+1][3]-poly_point_xy[x][3])/poly_res_temp
				FOR g = 1 TO poly_res_temp+1
					IF poly_3point_d [x] > 0 THEN
						punto_arco_x = poly_3point_xy [x][1]+COS(poly_3point_angle [x][1]+punto_arco_ang *(g-1))*poly_3point_radius [x]
						punto_arco_y = poly_3point_xy [x][2]+SIN(poly_3point_angle [x][1]+punto_arco_ang *(g-1))*poly_3point_radius [x]
					ELSE
						punto_arco_x = poly_3point_xy [x][1]+COS(poly_3point_angle [x][2]-punto_arco_ang *(g-1))*poly_3point_radius [x]
						punto_arco_y = poly_3point_xy [x][2]+SIN(poly_3point_angle [x][2]-punto_arco_ang *(g-1))*poly_3point_radius [x]
					ENDIF
					punto_arco_z = poly_point_xy [x][3]+punto_arco_dz * (g-1)
					PUT punto_arco_x,punto_arco_y,punto_arco_z, ang_form_axis
				NEXT g
			ELSE
				PUT poly_point_xy [x+1][1],poly_point_xy [x+1][2],poly_point_xy [x+1][3], ang_form_axis
			ENDIF
		ENDIF
	NEXT x
	tend = NSP
	n_path = (tend - tstart)/4
return

"set_form":
	n_form = 0
	tstart = NSP
	if name_prof_i=1 then
		gosub "prof_1det"
	endif
	if name_prof_i=2 then
		if det_lvl_3d = 2 then
			gosub "prof_2det"
		else
			gosub "prof_2simp"
		endif
	endif
	if name_prof_i=3 then
		jt = 15
		if det_lvl_3d = 2 then
			gosub "prof_3det"
		else
			gosub "prof_3simp"
		endif
	endif
	if name_prof_i=4 then
		if det_lvl_3d = 2 then
			gosub "prof_4det"
		else
			gosub "prof_4simp"
		endif
	endif
	if name_prof_i=5 then
		if det_lvl_3d = 2 then
			gosub "prof_5det"
		else
			gosub "prof_5simp"
		endif
	endif
	if name_prof_i=8 then
		if det_lvl_3d = 2 then
			gosub "prof_8det"
		else
			gosub "prof_8simp"
		endif
	endif
	if name_prof_i=9 then
		if det_lvl_3d = 2 then
			gosub "prof_9det"
		else
			gosub "prof_9simp"
		endif
	endif
	tend = NSP
	n_form = (tend - tstart)/3
	for kk = 1 to n_form
		x = get(1)
		y = get(1)
		st = get(1)
		if st<jt+EPS then
			x = x + offset_prof_arr[type_offset_prof_s+1][ix]
			y = y + offset_prof_arr[type_offset_prof_s+1][iy]
		endif
		put x, y, st
	next kk
return

"prof_1det":
	if show_empty and has_hole=1 then
		put 0,0,900+jt
		put ds/2,360,4000+jt
		put ds/2-ws,360,4000+jt
	else
		put 0,0,900+jt
		put ds/2,360,4000+jt
	endif
return

"prof_2simp":
	put -ws/2,-ds/2,jt
	put ws/2,-ds/2,jt
	put ws/2,ds/2,jt
	put -ws/2,ds/2,jt
	put -ws/2,-ds/2,-1
	if show_empty and has_hole=1 then
		put wt-ws/2,wt-ds/2,jt
		put ws/2-wt,wt-ds/2,jt
		put ws/2-wt,ds/2-wt,jt
		put wt-ws/2,ds/2-wt,jt
		put wt-ws/2,wt-ds/2,-1
	endif
return

"prof_2det":
	put -ws/2+ft,-ds/2,jt
	put ws/2-ft,-ds/2,jt
	put ws/2-ft,-ds/2+ft,900+jt
	put 0,90,4000+jt
	put ws/2,-ds/2+ft,jt
	put ws/2,ds/2-ft,jt
	put ws/2-ft,ds/2-ft,900+jt
	put 0,90,4000+jt
	put ws/2-ft,ds/2,jt
	put -ws/2+ft,ds/2,jt
	put -ws/2+ft,ds/2-ft,900+jt
	put 0,90,4000+jt
	put -ws/2,ds/2-ft,jt
	put -ws/2,-ds/2+ft,jt
	put -ws/2+ft,-ds/2+ft,900+jt
	put 0,90,4000+jt
	put -ws/2+ft,-ds/2,jt
	put -ws/2+ft,-ds/2,-1
	if show_empty and has_hole=1 then
		put -ws/2+ft,-ds/2+wt,jt
		put ws/2-ft,-ds/2+wt,jt
		put ws/2-ft,-ds/2+ft,900+jt
		put 0,90,4000+jt
		put ws/2-wt,-ds/2+ft,jt
		put ws/2-wt,ds/2-ft,jt
		put ws/2-ft,ds/2-ft,900+jt
		put 0,90,4000+jt
		put ws/2-ft,ds/2-wt,jt
		put -ws/2+ft,ds/2-wt,jt
		put -ws/2+ft,ds/2-ft,900+jt
		put 0,90,4000+jt
		put -ws/2+wt,ds/2-ft,jt
		put -ws/2+wt,-ds/2+ft,jt
		put -ws/2+ft,-ds/2+ft,900+jt
		put 0,90,4000+jt
		put -ws/2+ft,-ds/2+wt,jt
		put -ws/2+ft,-ds/2+wt,-1
	endif
return

"prof_3simp":
	put -ws*0.5,-ds*0.5,jt
	put -ws*0.5,ds*0.5,jt
	put ws*0.5,ds*0.5,jt
	put ws*0.5,ds*0.5-ft,jt
	put wt-ws*0.5,ds*0.5-ft,jt
	put wt-ws*0.5,ft-ds*0.5,jt
	put ws*0.5,ft-ds*0.5,jt
	put ws*0.5,-ds*0.5,jt
	put -ws*0.5,-ds*0.5,-1
return

"prof_3det":
	put -ws*0.5,-ds*0.5,jt
	put -ws*0.5,ds*0.5,jt
	put ws*0.5,ds*0.5,jt
	put ws*0.5,ds*0.5-(ft-tr),jt
	put tr,-90,2000+jt
	put ws*0.5-tr,ds*0.5-ft,jt
	put -ws*0.5+wt+rr,ds*0.5-ft,jt
	put rr,90,2000+jt
	put -ws*0.5+wt,ds*0.5-ft-rr,jt
	put -ws*0.5+wt,-ds*0.5+ft+rr,jt
	put rr,90,2000+jt
	put -ws*0.5+wt+rr,-ds*0.5+ft,jt
	put ws*0.5-tr,-ds*0.5+ft,jt
	put tr,-90,2000+jt
	put ws*0.5,-ds*0.5+ft-tr,jt
	put ws*0.5,-ds*0.5,jt
	put ws*0.5,-ds*0.5,-1
return

"prof_4simp":
	put -ws*0.5,-ds*0.5,jt
	put -ws*0.5,-ds*0.5+ft,jt
	put -wt*0.5,-ds*0.5+ft,jt
	put -wt*0.5,ds*0.5-ft,jt
	put -ws*0.5,ds*0.5-ft,jt
	put -ws*0.5,ds*0.5,jt
	put ws*0.5,ds*0.5,jt
	put ws*0.5,ds*0.5-ft,jt
	put wt*0.5,ds*0.5-ft,jt
	put wt*0.5,-ds*0.5+ft,jt
	put ws*0.5,-ds*0.5+ft,jt
	put ws*0.5,-ds*0.5,jt
	put -ws*0.5,-ds*0.5,-1
return

"prof_4det":
	put -ws*0.5,-ds*0.5,jt
	put -ws*0.5,-ds*0.5+(ft-tr),jt
	put tr,-90,2000+jt
	put -ws*0.5+tr,-ds*0.5+ft,jt
	put -wt*0.5-rr,-ds*0.5+ft,jt
	put rr,90,2000+jt
	put -wt*0.5,-ds*0.5+ft+rr,jt
	put -wt*0.5,ds*0.5-ft-rr,jt
	put rr,90,2000+jt
	put -wt*0.5-rr,ds*0.5-ft,jt
	put -ws*0.5+tr,ds*0.5-ft,jt
	put tr,-90,2000+jt
	put -ws*0.5,ds*0.5-(ft-tr),jt
	put -ws*0.5,ds*0.5,jt
	put ws*0.5,ds*0.5,jt
	put ws*0.5,ds*0.5-(ft-tr),jt
	put tr,-90,2000+jt
	put ws*0.5-tr,ds*0.5-ft,jt
	put wt*0.5+rr,ds*0.5-ft,jt
	put rr,90,2000+jt
	put wt*0.5,ds*0.5-ft-rr,jt
	put wt*0.5,-ds*0.5+ft+rr,jt
	put rr,90,2000+jt
	put wt*0.5+rr,-ds*0.5+ft,jt
	put ws*0.5-tr,-ds*0.5+ft,jt
	put tr,-90,2000+jt
	put ws*0.5,-ds*0.5+(ft-tr),jt
	put ws*0.5,-ds*0.5,jt
	put -ws*0.5,-ds*0.5,-1
return

"prof_5simp":
	put -ws*0.5,-ds*0.5,jt
	put -ws*0.5,ds*0.5,jt
	put -ws*0.5+wt,ds*0.5,jt
	put -ws*0.5+wt,-ds*0.5+wt,jt
	put ws*0.5,-ds*0.5+wt,jt
	put ws*0.5,-ds*0.5,jt
	put -ws*0.5,-ds*0.5,-1
return

"prof_5det":
	put -ws*0.5,-ds*0.5,jt
	put -ws*0.5,ds*0.5,jt
	put -ws*0.5+wt-rr,ds*0.5,jt
	put rr,-90,2000+jt
	put -ws*0.5+wt,ds*0.5-rr,jt
	put -ws*0.5+wt,-ds*0.5+wt+ft,jt
	put ft,90,2000+jt
	put -ws*0.5+wt+ft,-ds*0.5+wt,jt
	put ws*0.5-rr,-ds*0.5+wt,jt
	put rr,-90,2000+jt
	put ws*0.5,-ds*0.5-rr+wt,jt
	put ws*0.5,-ds*0.5,jt
	put -ws*0.5,-ds*0.5,-1
return

"prof_8simp":
	put -ws*0.5,-ds*0.5,jt
	put -ws*0.5,ds*0.5,jt
	put -ws*0.5+wt,ds*0.5,jt
	put -ws*0.5+wt,-ds*0.5+wt,jt
	put ws*0.5,-ds*0.5+wt,jt
	put ws*0.5,-ds*0.5,jt
	put -ws*0.5,-ds*0.5,-1
return
"prof_8det":
	put ws*0.5,-ds*0.5,jt
	put -ws*0.5+wt+ft,-ds*0.5,jt
	put wt+ft,-90,2000+jt
	put -ws*0.5,-ds*0.5+wt+ft,jt
	put -ws*0.5,ds*0.5,jt
	put -ws*0.5+wt,ds*0.5,jt
	put -ws*0.5+wt,-ds*0.5+wt+ft,jt
	put ft,90,2000+jt
	put -ws*0.5+wt+ft,-ds*0.5+wt,jt
	put ws*0.5,-ds*0.5+wt,jt
	put ws*0.5,-ds*0.5,jt
	put ws*0.5,-ds*0.5,-1
return
"prof_9simp":
	put -ws*0.5,-ds*0.5,jt
	put -ws*0.5,ds*0.5,jt
	put ws*0.5,ds*0.5,jt
	put ws*0.5,ds*0.5-wt,jt
	put wt-ws*0.5,ds*0.5-wt,jt
	put wt-ws*0.5,wt-ds*0.5,jt
	put ws*0.5,wt-ds*0.5,jt
	put ws*0.5,-ds*0.5,jt
	put -ws*0.5,-ds*0.5,-1
return
"prof_9det":
	put ws*0.5,-ds*0.5,jt
	put -ws*0.5+wt+ft,-ds*0.5,jt
	put wt+ft,-90,2000+jt
	put -ws*0.5,-ds*0.5+wt+ft,jt
	put -ws*0.5,ds*0.5-wt-ft,jt
	put wt+ft,-90,2000+jt
	put -ws*0.5+wt+ft,ds*0.5,jt
	put ws*0.5,ds*0.5,jt
	put ws*0.5,ds*0.5-wt,jt
	put -ws*0.5+wt+ft,ds*0.5-wt,jt
	put ft,90,2000+jt
	put -ws*0.5+wt,ds*0.5-wt-ft,jt
	put -ws*0.5+wt,-ds*0.5+wt+ft,jt
	put ft,90,2000+jt
	put -ws*0.5+wt+ft,-ds*0.5+wt,jt
	put ws*0.5,-ds*0.5+wt,jt
	put ws*0.5,-ds*0.5,-1
return

"set_show_3d":
	success = LIBRARYGLOBAL ("Libraryflobals-km", "show_connect", show_connect)
	show = 0
	if show_connect and upr then show = 1
	if not(upr) then show = 1
	call "Показ_по_группам" PARAMETERS ALL el_views=el_views RETURNED_PARAMETERS show_el
	call "Показ_по_сборкам" PARAMETERS ALL subpos=subpos, pos=GLOB_ID RETURNED_PARAMETERS show_subpos, show_marker
	if show=1 then show = show_subpos
	if show=1 then show = show_el
	if show then
		success = LIBRARYGLOBAL ("Libraryflobals-km", "show_izd", show_izd)
		success = LIBRARYGLOBAL ("Libraryflobals-km", "show_metall", show_metall)
		if type_spec = "Металл" and not(show_metall) then show = 0
		if type_spec = "Изделие" and not(show_izd) then show = 0
	endif
	success = LIBRARYGLOBAL ("Libraryflobals-km", "ignore_id", ignore_id)
	success = LIBRARYGLOBAL ("Libraryflobals-km", "show_ingore", show_ingore)
	show_spec = 0 : IF STRSTR (GLOB_ID, ignore_id, 1) > 0 or type_spec="Не специфицировать" THEN show_spec = 1
	if not(show_ingore) and show_spec then show = 0

	show_if_vert=1 : show_if_gor=1 : show_if_ang=1
	success = LIBRARYGLOBAL ("Libraryflobals-km", "show_if_vert", show_if_vert)
	success = LIBRARYGLOBAL ("Libraryflobals-km", "show_if_gor", show_if_gor)
	success = LIBRARYGLOBAL ("Libraryflobals-km", "show_if_ang", show_if_ang)
	is_ang = 1
	if abs((abs(ang + etta_call) mod 180) - 90)<EPS and not(show_if_gor) and show then
		is_ang = 0
		show = 0
	endif
	if abs(ang + etta_call) mod 180 < EPS and not(show_if_vert) and show then
		is_ang = 0
		show = 0
	endif
	if is_ang and not(show_if_ang) and show then show = 0
	
	if not(type_axis) then
		success = LIBRARYGLOBAL ("Libraryflobals-km", "show_axsis", show_axsis)
		success = LIBRARYGLOBAL ("Libraryflobals-km", "show_only_axsis", show_only_axsis)
	else
		if type_axis=1 then
			show_axsis = 0
			show_only_axsis = 0
		endif
		if type_axis=2 then
			show_axsis = 1
			show_only_axsis = 0
		endif
		if type_axis=3 then
			show_axsis = 0
			show_only_axsis = 1
		endif
	endif

	if not(det_lvl) then
		success = LIBRARYGLOBAL ("Libraryflobals-km", "gs_detlevel_3D", gs_detlevel_3D)
		IF gs_detlevel_3D=`Простой` then
			det_lvl_2d = 1
			det_lvl_3d = 1
		endif
		IF gs_detlevel_3D=`Детальный` THEN
			det_lvl_2d = 2
			det_lvl_3d = 2
		endif
		IF gs_detlevel_3D=`Откл` THEN
			det_lvl_2d = 2
			det_lvl_3d = 0
		endif
	else
		if det_lvl=1 then
			det_lvl_2d = 2
			det_lvl_3d = 2
		endif
		if det_lvl=2 then
			det_lvl_2d = 1
			det_lvl_3d = 1
		endif
		if det_lvl=3 then
			det_lvl_2d = 2
			det_lvl_3d = 0
		endif
		if det_lvl=4 then
			det_lvl_2d = 0
			det_lvl_3d = 2
		endif
	endif
	show_list = 0 : success = LIBRARYGLOBAL ("Libraryflobals-km", "show_list", show_list)
return

"set_mat":
	success = LIBRARYGLOBAL ("Libraryflobals-km", "mat_by_type_code", mat_by_type_code)
	is_mat_set = 0
	if (show_spec or type_spec = "Не специфицировать") and not(is_mat_set) and mat_by_type_code<>1 then
		ignore_mat = 0
		success = LIBRARYGLOBAL ("Libraryflobals-km", "ignore_mat", ignore_mat)
		col_mat = ignore_mat
		is_mat_set = 1
	endif
	if mat_by_type_code<>1 and not(is_mat_set) then
		if mat_by_type_code=2 then 
			name_mat_arr = "cov_mat_arr"
			inx_mat = cov_mat
		endif
		if mat_by_type_code=3 then
			name_mat_arr = "fire_keep_mat_arr"
			inx_mat = fire_keep_mat
		endif
		if mat_by_type_code=4 then
			name_mat_arr = "konstr_mat_arr"
			inx_mat = type_mat
		endif
		if mat_by_type_code=5 then
			name_mat_arr = "fire_mat_arr"
			inx_mat = fire_mat
		endif
		if mat_by_type_code=6 then
			name_mat_arr = "stal_mat_arr"
			inx_mat = stal_mat
		endif
		if mat_by_type_code=7 then
			name_mat_arr = "type_spec_mat_arr"
			inx_mat = type_spec_mat
		endif
		if mat_by_type_code=8 then
			name_mat_arr = "connect_mat_arr"
			inx_mat = upr_mat
		endif
		if inx_mat=99 or inx_mat<1 then 
			col_mat = 0
		else
			dim cov_mat_arr[]
			success = LIBRARYGLOBAL ("Libraryflobals-km", name_mat_arr, cov_mat_arr)
			col_mat = cov_mat_arr[inx_mat]
		endif
		is_mat_set = 1
	endif
	if gs_shadow=0 then
		shadow off
	else
		shadow on
	endif
return
