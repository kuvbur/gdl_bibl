! Contact person: <NJ>! ==============================================================================! This macro draws the Board! ------------------------------------------------------------------------------! Input parameters:!	A:						Window nominal width (length)!	B:						Window nominal height (length)!	gs_IsCurved:			Does the window follow the curvature of the wall? (0 / 1)!	iWindowShape:			Shape of the window (integer)!								0 = rectangular (default)!								1 = arched!							Note: only the rectangular shape can be a Corner Window! Corner Function --------------------------------------------------------------!	bLeftCornerFunction:		Turn macro in Corner Window mode at the left side (0 / 1)!	leftCornerAngle:		Angle between connected walls in case of Corner Window (angle)!	leftConnWallThk:		Thickness of the connected wall in case of Corner Window (length)!	bRightCornerFunction:	Turn macro in Corner Window mode at the right side (0 / 1)!	rightCornerAngle:		Angle between connected walls in case of Corner Window (angle)!	rightConnWallThk:		Thickness of the connected wall in case of Corner Window (length)! Oversize ---------------------------------------------------------------------!	ac_right_oversize:		Right opening oversize (length)! Sill -------------------------------------------------------------------------!	gs_sill_oversize:		Identifies the method as the macro handles the nominal!								opening sizes when Sill are turned on. (0 / 1)!	gs_sill_thk:			Thickness of the Sill. (length)!	gs_board_width:			Width of Board. (length)!	gs_board_thk:			Thickness of the Board. (length)!	gs_board_nosing:		Nosing of the Board. (length)!	gs_board_angle:			Board slope. (angle)!	gs_board_ovhg_left:		Board overhang on the left side. (length)!	gs_board_ovhg_right:	Board overhang on the right side. (length)!	gs_board_slip_in:		Slip in of the Board. Only effective when iSillType = 2 or iSillType = 3 (length)!	gs_board_curved:		Board edge is curved or straight. (0 / 1)! Ganging ----------------------------------------------------------------------!	gs_stack_left:			Align to door/window on left side (0 / 1)!	gs_stack_right:			Align to door/window on right side (0 / 1)!	gs_stack_bottom:		Align to door/window on bottom side (0 / 1)!	--- String Tables ---!! Related Global Variables:!	GLOB_SCRIPT_TYPE!	GLOB_CONTEXT!	WALL_THICKNESS!	WALL_INCL!	WIDO_FRAME_THICKNESS!	WIDO_SILL!	WIDO_LEFT_JAMB!	WIDO_RIGHT_JAMB!	WIDO_ORIG_DIST!	WIDO_REVEAL_SIDE!	SYMB_MIRRORED!	SYMB_ROTANGLE! ==============================================================================! ==============================================================================! Window Oversize Calculations! ==============================================================================if bDoorWithSidelightSupport then	if not(gs_sidelight_left & gs_sidelight_parapet_hgt_left > EPS) then		hideparameter "gs_board_inside_sl_left"		lock "gs_board_inside_sl_left"		if gs_sidelight_left & gs_sidelight_parapet_hgt_left < EPS then			gs_board_inside_sl_left = 0			parameters gs_board_inside_sl_left = 0		endif	endif	if not(gs_sidelight_right & gs_sidelight_parapet_hgt_right > EPS) then		hideparameter "gs_board_inside_sl_right"		lock "gs_board_inside_sl_right"		if gs_sidelight_right & gs_sidelight_parapet_hgt_right < EPS then			gs_board_inside_sl_right = 0			parameters gs_board_inside_sl_right = 0		endif	endifendifif not(bHasAnyBoardOn) | gs_stack_bottom then						! Off	hideparameter	"gs_board_thk",					"gs_board_width",					"gs_board_nosing",					"gs_board_angle",					"gs_board_angle",					"gs_board_ovhg_left",					"gs_board_ovhg_right",					"gs_board_slip_in",					"gs_board_curved",					"gs_board_pen_sectcont",					"gs_board_pen_3D",					"gs_board_fill",					"gs_board_pen_fg",					"gs_board_pen_bg",					"gs_board_mat",					"iBoardInPolyWall"	lock	"gs_board_thk",			"gs_board_width",			"gs_board_nosing",			"gs_board_angle",			"gs_board_angle",			"gs_board_ovhg_left",			"gs_board_ovhg_right",			"gs_board_slip_in",			"gs_board_curved",			"gs_board_pen_sectcont",			"gs_board_pen_3D",			"gs_board_fill",			"gs_board_pen_fg",			"gs_board_pen_bg",			"gs_board_mat",			"iBoardInPolyWall"else	if bHasAnyBoardOn & not(gs_sill_oversize) then		hideparameter	"gs_board_slip_in"	! Inside, Both Sides		lock 			"gs_board_slip_in"	endif	if gs_stack_left then		hideparameter "gs_board_ovhg_left"		lock "gs_board_ovhg_left"	endif	if gs_stack_right then		hideparameter "gs_board_ovhg_right"		lock "gs_board_ovhg_right"	endif	if bHasAnyBoardOn then			! Inside, Both Sides		values "gs_board_thk" range (0, ]		if maxBoardAngle > EPS then			if gs_board_angle > maxBoardAngle - EPS then				gs_board_angle = maxBoardAngle - EPS				parameters gs_board_angle = maxBoardAngle - EPS			endif			values "gs_board_angle" range[0, maxBoardAngle)		else			values "gs_board_angle" range[0,)		endif		values "gs_board_width"			range[WALL_THICKNESS + minBoardNosing - WIDO_SILL - WIDO_FRAME_THICKNESS, )		values "gs_board_nosing"		range[minBoardNosing,]		values "gs_board_ovhg_left"		range[minBoardOvhgLeft,]		values "gs_board_ovhg_right"	range[minBoardOvhgRight,]	endifendifvalues{2} "iBoardInPolyWall" 	BOARD_PARALLEL_WINDOW,		stBoardInPolyWall[1],								BOARD_PARALLEL_WALLPOLYGON,	stBoardInPolyWall[2]if abs(gs_board_angle) > EPS then	iBoardInPolyWall = BOARD_PARALLEL_WINDOW	parameters iBoardInPolyWall = iBoardInPolyWall	lock	"iBoardInPolyWall"endifif iRevealType = REVEAL_DOUBLE_SPLAYED then	if GLOB_MODPAR_NAME = "gs_board_width" then		gs_board_nosing = gs_board_width * cos(gs_reveal_bottom_angle) - (WALL_THICKNESS - WIDO_SILL - WIDO_FRAME_THICKNESS)		parameters gs_board_nosing = gs_board_nosing	else		gs_board_width = ((WALL_THICKNESS - WIDO_SILL - WIDO_FRAME_THICKNESS) + gs_board_nosing) / cos(gs_reveal_bottom_angle)		parameters gs_board_width = gs_board_width	endifelse	if GLOB_MODPAR_NAME = "gs_board_width" then		gs_board_nosing = gs_board_width - (WALL_THICKNESS - WIDO_SILL - WIDO_FRAME_THICKNESS)		parameters gs_board_nosing = gs_board_nosing	else		gs_board_width = gs_board_nosing + (WALL_THICKNESS - WIDO_SILL - WIDO_FRAME_THICKNESS)		parameters gs_board_width = gs_board_width	endifendif