
PanelGlassArea = 0
for i = 1 to 10
	if sashID[i][SASH_FUNCTION] > 0 then
		CasementID = sashID[i][SASH_ID]

		dim horgrid[][3]
		dim vergrid[][3]

		dim horgrid2[][3]
		dim vergrid2[][3]

		dim _horgrid[][3]
		dim _vergrid[][3]

! Sash identification
		gs_optype_m		= 0
		iMullionStyle	= 0
		NumHorGrills	= 0
		NumVerGrills	= 0
		b2SashWithIndependentVentilation	= 0
		isVentilationProfileInFirstSash		= 0
		isVentilationProfileInSecondSash	= 0
		if CasementID = 1 then
			gs_optype_m			= gs_optype_m_01
			iMullionStyle		= iMullionStyle_01
			isLedgeProfileInSash = bSashLedge
			NumHorGrills		= hgn_01 - 1
			NumVerGrills		= vgn_01 - 1
			NumHorGrills2		= hgn2_01 - 1
			NumVerGrills2		= vgn2_01 - 1
			horgrid				= horgrid_01
			vergrid				= vergrid_01
			horgrid2			= horgrid2_01
			vergrid2			= vergrid2_01
			gs_horiz_div_height	= gs_horiz_div_height_01
			isVentilationProfileInSash = isVentilationProfileInSash_01
		endif
		if CasementID = 2 then
			gs_optype_m			= gs_optype_m_02
			iMullionStyle		= iMullionStyle_02
			isLedgeProfileInSash = bSashLedge
			NumHorGrills		= hgn_02 - 1
			NumVerGrills		= vgn_02 - 1
			NumHorGrills2		= hgn2_02 - 1
			NumVerGrills2		= vgn2_02 - 1
			horgrid				= horgrid_02
			vergrid 			= vergrid_02
			horgrid2			= horgrid2_02
			vergrid2 			= vergrid2_02
			gs_horiz_div_height	= gs_horiz_div_height_02
			isVentilationProfileInSash = isVentilationProfileInSash_02
		endif
		if CasementID = 3 then
			gs_optype_m			= gs_optype_m_03
			iMullionStyle		= iMullionStyle_03
			isLedgeProfileInSash = bSashLedge
			NumHorGrills		= hgn_03 - 1
			NumVerGrills		= vgn_03 - 1
			NumHorGrills2		= hgn2_03 - 1
			NumVerGrills2		= vgn2_03 - 1
			horgrid				= horgrid_03
			vergrid				= vergrid_03
			horgrid2			= horgrid2_03
			vergrid2			= vergrid2_03
			gs_horiz_div_height	= gs_horiz_div_height_03
			isVentilationProfileInSash = isVentilationProfileInSash_03
		endif
		if CasementID = 4 then
			gs_optype_m			= gs_optype_m_04
			iMullionStyle		= iMullionStyle_04
			isLedgeProfileInSash = bSashLedge
			NumHorGrills		= hgn_04 - 1
			NumVerGrills		= vgn_04 - 1
			NumHorGrills2		= hgn2_04 - 1
			NumVerGrills2		= vgn2_04 - 1
			horgrid				= horgrid_04
			vergrid				= vergrid_04
			horgrid2			= horgrid2_04
			vergrid2			= vergrid2_04
			gs_horiz_div_height	= gs_horiz_div_height_04
			isVentilationProfileInSash = isVentilationProfileInSash_04
		endif
		if CasementID = 5 then
			gs_optype_m			= gs_optype_m_05
			iMullionStyle		= iMullionStyle_05
			isLedgeProfileInSash = bSashLedge
			NumHorGrills		= hgn_05 - 1
			NumVerGrills		= vgn_05 - 1
			NumHorGrills2		= hgn2_05 - 1
			NumVerGrills2		= vgn2_05 - 1
			horgrid				= horgrid_05
			vergrid				= vergrid_05
			horgrid2			= horgrid2_05
			vergrid2			= vergrid2_05
			gs_horiz_div_height	= gs_horiz_div_height_05
			isVentilationProfileInSash = isVentilationProfileInSash_05
		endif
		if CasementID = 6 then
			gs_optype_m 		= gs_optype_m_06
			iMullionStyle		= iMullionStyle_06
			isLedgeProfileInSash = bSashLedge
			NumHorGrills		= hgn_06 - 1
			NumVerGrills		= vgn_06 - 1
			NumHorGrills2		= hgn2_06 - 1
			NumVerGrills2		= vgn2_06 - 1
			horgrid				= horgrid_06
			vergrid				= vergrid_06
			horgrid2			= horgrid2_06
			vergrid2			= vergrid2_06
			gs_horiz_div_height	= gs_horiz_div_height_06
			isVentilationProfileInSash = isVentilationProfileInSash_06
		endif
		if CasementID = 7 then
			gs_optype_m 		= gs_optype_m_07
			iMullionStyle		= iMullionStyle_07
			isLedgeProfileInSash = bSashLedge
			NumHorGrills		= hgn_07 - 1
			NumVerGrills		= vgn_07 - 1
			NumHorGrills2		= hgn2_07 - 1
			NumVerGrills2		= vgn2_07 - 1
			horgrid				= horgrid_07
			vergrid				= vergrid_07
			horgrid2			= horgrid2_07
			vergrid2			= vergrid2_07
			gs_horiz_div_height	= gs_horiz_div_height_07
			isVentilationProfileInSash = isVentilationProfileInSash_07
		endif
		if CasementID = 8 then
			gs_optype_m			= gs_optype_m_08
			iMullionStyle		= iMullionStyle_08
			isLedgeProfileInSash = bSashLedge
			NumHorGrills		= hgn_08 - 1
			NumVerGrills		= vgn_08 - 1
			NumHorGrills2		= hgn2_08 - 1
			NumVerGrills2		= vgn2_08 - 1
			horgrid				= horgrid_08
			vergrid				= vergrid_08
			horgrid2			= horgrid2_08
			vergrid2			= vergrid2_08
			gs_horiz_div_height	= gs_horiz_div_height_08
			isVentilationProfileInSash = isVentilationProfileInSash_08
		endif
		if CasementID = 9 then
			gs_optype_m			= gs_optype_m_09
			iMullionStyle		= iMullionStyle_09
			isLedgeProfileInSash = bSashLedge
			NumHorGrills		= hgn_09 - 1
			NumVerGrills		= vgn_09 - 1
			NumHorGrills2		= hgn2_09 - 1
			NumVerGrills2		= vgn2_09 - 1
			horgrid				= horgrid_09
			vergrid				= vergrid_09
			horgrid2			= horgrid2_09
			vergrid2			= vergrid2_09
			gs_horiz_div_height	= gs_horiz_div_height_09
			isVentilationProfileInSash = isVentilationProfileInSash_09
		endif
		if CasementID = 10 then
			gs_optype_m			= gs_optype_m_10
			iMullionStyle		= iMullionStyle_10
			isLedgeProfileInSash = bSashLedge
			NumHorGrills		= hgn_10 - 1
			NumVerGrills		= vgn_10 - 1
			NumHorGrills2		= hgn2_10 - 1
			NumVerGrills2		= vgn2_10 - 1
			horgrid				= horgrid_10
			vergrid				= vergrid_10
			horgrid2			= horgrid2_10
			vergrid2			= vergrid2_10
			gs_horiz_div_height	= gs_horiz_div_height_10
			isVentilationProfileInSash = isVentilationProfileInSash_10
		endif
		if CasementID = 11 then
			gs_optype_m			= gs_optype_m_11
			iMullionStyle		= iMullionStyle_11
			isLedgeProfileInSash = bSashLedge
			NumHorGrills		= hgn_11 - 1
			NumVerGrills		= vgn_11 - 1
			NumHorGrills2		= hgn2_11 - 1
			NumVerGrills2		= vgn2_11 - 1
			horgrid				= horgrid_11
			vergrid				= vergrid_11
			horgrid2			= horgrid2_11
			vergrid2			= vergrid2_11
			gs_horiz_div_height	= gs_horiz_div_height_11
			isVentilationProfileInSash = isVentilationProfileInSash_11
		endif

		! Change ledge bool by mullion style and level of detail
		if	not(iMullionStyle = MULLION_NONE |\
				iMullionStyle = MULLION_HVGRID |\
				iMullionStyle = MULLION_EDITABLEGRID) then

			isLedgeProfileInSash = 0
		endif

		sashWidth	= sashID[i][SASH_WIDTH]
		sashHeight	= sashID[i][SASH_HEIGHT]
		sashShape	= sashID[i][SASH_SHAPE]
		bDoubleSash	= 0

		ratioLeft	= 1
		ratioRight	= 1
		ratioTop	= 1
		ratioBottom	= 1

		if sashShape = SASH_SHAPE_TRAPEZOID then
			ratioTop = 1 / cos(topAngle)
		endif

		if gs_optype_m = SASH_FIXED then
			glassWidth	= sashWidth  - (ratioLeft + ratioRight) * gs_rebate_width
			glassHeight	= sashHeight - (ratioTop + ratioBottom) * gs_rebate_width
		else
			! Change sash width size by mullion style
			if (iMullionStyle = MULLION_FRENCH_PANEL) then
				_sashFrameWidthLeft		= sashFrameWidth[1][i]
				_sashFrameWidthRight	= sashFrameWidth[2][i]
				_sashFrameWidthTop		= sashFrameWidth[3][i]
				_sashFrameWidthBottom	= sashFrameWidth[4][i]
			else
				_sashFrameWidthLeft		= gs_sash_width
				_sashFrameWidthRight	= gs_sash_width
				_sashFrameWidthTop		= gs_sash_width
				_sashFrameWidthBottom	= gs_sash_width
			endif

			if	gs_optype_m = SASH_HOR_PIVOT |\
				gs_optype_m = SASH_VER_PIVOT |\
				gs_optype_m = SASH_VER_PIVOT_M then
				glassWidth	= sashWidth  - ratioLeft * (gs_rebate_width + _sashFrameWidthLeft) - ratioRight * (gs_rebate_width + _sashFrameWidthRight)
				glassHeight	= sashHeight - ratioTop * (gs_rebate_width + _sashFrameWidthTop) - ratioBottom * (gs_rebate_width + _sashFrameWidthBottom)
			else
				glassWidth	= sashWidth  - ratioLeft * _sashFrameWidthLeft - ratioRight * _sashFrameWidthRight
				glassHeight	= sashHeight - ratioTop * _sashFrameWidthTop - ratioBottom * _sashFrameWidthBottom

				if	gs_optype_m = SASH_DOUBLE_SIDE_HUNG |\
					gs_optype_m = SASH_DOUBLE_TILT_TURN |\
					gs_optype_m = SASH_DOUBLE_TILT_TURN_M then
					glassWidth	= glassWidth / 2 - (_sashFrameWidthLeft + _sashFrameWidthRight)/2
					bDoubleSash	= 1
				endif
				if	gs_optype_m = SASH_SLIDING_HOR |\
					gs_optype_m = SASH_SLIDING_HOR_M |\
					gs_optype_m = SASH_DOUBLE_SLIDING_HOR |\
					gs_optype_m = SASH_DOUBLE_SLIDING_HOR_M then
					glassWidth	= (glassWidth - 2 * gs_rebate_width) / 2  - (max(_sashFrameWidthLeft, _sashFrameWidthRight))/2
					glassHeight	= glassHeight - 2 * gs_rebate_width
					bDoubleSash	= 1
				endif
				if	gs_optype_m = SASH_SLIDING_VER |\
					gs_optype_m = SASH_DOUBLE_SLIDING_VER then
					glassHeight	= (glassHeight - 2 * gs_rebate_width) / 2 - (max(_sashFrameWidthTop, _sashFrameWidthBottom))/2
					glassWidth	= glassWidth - 2 * gs_rebate_width
					bDoubleSash	= 1
				endif
			endif
		endif

		temp_glassHeight = glassHeight
		if b2SashWithIndependentVentilation then
			glassHeight	= glassHeight - VentilationProfileHeight * isVentilationProfileInFirstSash
		else
			glassHeight	= glassHeight - VentilationProfileHeight * isVentilationProfileInSash
		endif
		if isLedgeProfileInSash then glassHeight = glassHeight - sashLedgeHeight
		gosub "CalculateGlassArea"

		glassHeight = temp_glassHeight
		if bDoubleSash then
			if b2SashWithIndependentVentilation then
				glassHeight	= glassHeight - VentilationProfileHeight * isVentilationProfileInSecondSash
			else
				glassHeight	= glassHeight - VentilationProfileHeight * isVentilationProfileInSash
			endif
			if isLedgeProfileInSash then glassHeight = glassHeight - sashLedgeHeight			
			gosub "CalculateGlassArea"
		endif
	endif
next i

if	iWindowType = WIN_MultisashHorizontal	|\
	iWindowType = WIN_MultisashVertical		then
	if gs_repeat_modules then
		PanelGlassArea = PanelGlassArea * gs_repeat_modules_number
	endif
endif


! =============================================================================
! Grid Selection
! =============================================================================

dim validSashID[]
j = 1
numSashes = 0
numPossibleSashes = 0
bFoundNonMainSash = 0
bFoundFixMainSash = 0
bFoundNonFixMainSash = 0
bFoundNonRectShape = 0
bFoundNonArchedShape = 0
bFoundNonHalfarchShape = 0
for i = 1 to 10
	if sashID[i][SASH_FUNCTION] > 0 then
		validSashID[j] = sashID[i][SASH_FUNCTION]
		j = j + 1
		numSashes = numSashes + 1
		if sashID[i][SASH_ROLE] = SASHROLE_MAIN then
			CasementID = sashID[i][SASH_ID]
			if goptypeID[CasementID] = SASH_FIXED then
				bFoundFixMainSash = 1
			else
				bFoundNonFixMainSash = 1
			endif
		else
			bFoundNonMainSash = 1
		endif
		if not(isWindow) & sashID[i][SASH_ROLE] <> SASHROLE_UPPER_TRANSOM then
			gs_sash_width = gs_sl_sash_width
		endif
		if sashID[i][SASH_SHAPE] <> SASH_SHAPE_RECTANGULAR then
			bFoundNonRectShape = 1
		endif
		if sashID[i][SASH_SHAPE] <> SASH_SHAPE_ARCHED then
			bFoundNonArchedShape = 1
		endif
		if sashID[i][SASH_SHAPE] <> SASH_SHAPE_HALFROUND then
			bFoundNonHalfarchShape = 1
		endif
	endif

	if sashID[i][SASH_ID] > 0 then
		numPossibleSashes = numPossibleSashes + 1
	endif
next i

if vardim1(validSashID) > 0 then
	values "gs_sash_set_to_edit" validSashID
endif

if gs_sash_uniform then
	lock "gs_sash_set_to_edit"
	hideparameter "gs_sash_set_to_edit"
endif

if GLOB_MODPAR_NAME = "MullionPosition" then
	iMullionPosition = MULLION_OUTSIDE
	if MullionPosition = stMullionPosition[2] then iMullionPosition = MULLION_INSIDE
	if MullionPosition = stMullionPosition[3] then iMullionPosition = MULLION_THROUGHOUT
	parameters iMullionPosition = iMullionPosition
else
	MullionPosition = stMullionPosition[iMullionPosition]
	parameters MullionPosition = MullionPosition
endif

values "MullionPosition"	stMullionPosition
values "iMullionPosition"	MULLION_OUTSIDE,
							MULLION_INSIDE,
							MULLION_THROUGHOUT

if iWindowClass	<> WINCLASS_DOORSASH then
	values "FixGlassDir" stFixGlassDir
	values "FixGlassDir_m" 1, 2

	if GLOB_MODPAR_NAME = "FixGlassDir" then
		FixGlassDir_m = 1
		if FixGlassDir = stFixGlassDir[2]  then FixGlassDir_m =2
		parameters FixGlassDir_m = FixGlassDir_m
	else
		FixGlassDir = stFixGlassDir[1]
		if FixGlassDir_m = 2  then FixGlassDir = stFixGlassDir[2]
		parameters FixGlassDir = FixGlassDir
	endif
endif

dim gs_pt[]
call "Window_Panel_Collection_kmod" parameters returned_parameters gs_pt


! =============================================================================
! Common Parameters Handling
! =============================================================================

if numSashes < 2 then
	lock "gs_sash_uniform"
	hideparameter "gs_sash_uniform"
	gs_sash_uniform = 0
	parameters gs_sash_uniform = gs_sash_uniform
endif

call "casement_paramhandling_m_kmod" parameters	iWindowType			= iWindowType,
											gs_bLeftSLight		= gs_bLeftSLight,
											gs_bSLight			= gs_bSLight,
											gs_UTrans			= gs_UTrans,
											gs_UTrans_Div		= gs_UTrans_Div,
											gs_LTrans			= gs_LTrans,
											gs_LTrans_Div		= gs_LTrans_Div,
											gs_sash_uniform		= gs_sash_uniform,
											gs_panes_number		= gs_panes_number,
											CasementIDArray		= CasementIDArray,
											iMullionStyle_00	= iMullionStyle_00,
											iMullionStyle_01	= iMullionStyle_01,
											iMullionStyle_02	= iMullionStyle_02,
											iMullionStyle_03	= iMullionStyle_03,
											iMullionStyle_04	= iMullionStyle_04,
											iMullionStyle_05	= iMullionStyle_05,
											iMullionStyle_06	= iMullionStyle_06,
											iMullionStyle_07	= iMullionStyle_07,
											iMullionStyle_08	= iMullionStyle_08,
											iMullionStyle_09	= iMullionStyle_09,
											iMullionStyle_10	= iMullionStyle_10,
											iMullionStyle_11	= iMullionStyle_11,
											gs_optype_m_01		= gs_optype_m_01,
											gs_optype_m_02		= gs_optype_m_02,
											gs_optype_m_03		= gs_optype_m_03,
											gs_optype_m_04		= gs_optype_m_04,
											gs_optype_m_05		= gs_optype_m_05,
											gs_optype_m_06		= gs_optype_m_06,
											gs_optype_m_07		= gs_optype_m_07,
											gs_optype_m_08		= gs_optype_m_08,
											gs_optype_m_09		= gs_optype_m_09,
											gs_optype_m_10		= gs_optype_m_10,
											gs_optype_m_11		= gs_optype_m_11,
								returned_parameters bLockMullionParams,
													bLockMullionSizeParams,
													bLockGlassParams,
													bLockSashFrameParams,
													bLockSidelightDivisionParams,
													bLockSolidPanelParams,
													bLockVentPanelParams,
													dummy,
													dummy

if bLockMullionParams then
	lock			"gw", "gth", "iMullionPosition", "MullionPosition", "gs_grill_mat", "gs_grill_mat2"
	hideparameter	"gw", "gth", "iMullionPosition", "MullionPosition", "gs_grill_mat", "gs_grill_mat2"
endif

if bLockMullionSizeParams then
	lock			"gw", "gth", "iMullionPosition", "MullionPosition"
	hideparameter	"gw", "gth", "iMullionPosition", "MullionPosition"
endif

if bLockSidelightDivisionParams & not(isWindow) then
	lock			"gs_sidelight_div_width", "gs_sidelight_div_thk"
	hideparameter	"gs_sidelight_div_width", "gs_sidelight_div_thk"
endif

if bLockGlassParams then
	lock "gs_glass_mat", "gs_glass_pen"
	hideparameter "gs_glass_mat", "gs_glass_pen"
endif

if (numPossibleSashes > 0) & bLockSashFrameParams then
	lock "gs_sash_mat", "gs_sash_mat2"
	hideparameter "gs_sash_mat", "gs_sash_mat2"
endif

values "gw" range[0,)
values "gth" range[0,)


! =============================================================================
! Sash Specific Parameters Handling
! =============================================================================

bEnabledMullionDividedPanel_01 = 0
bEnabledMullionDividedPanel_02 = 0
bEnabledMullionDividedPanel_03 = 0
bEnabledMullionDividedPanel_04 = 0
bEnabledMullionDividedPanel_05 = 0
bEnabledMullionDividedPanel_06 = 0
bEnabledMullionDividedPanel_07 = 0
bEnabledMullionDividedPanel_08 = 0
bEnabledMullionDividedPanel_09 = 0
bEnabledMullionDividedPanel_10 = 0
bEnabledMullionDividedPanel_11 = 0

bEnableSlidingOpType_01 = 0
bEnableSlidingOpType_02 = 0
bEnableSlidingOpType_03 = 0
bEnableSlidingOpType_04 = 0
bEnableSlidingOpType_05 = 0
bEnableSlidingOpType_06 = 0
bEnableSlidingOpType_07 = 0
bEnableSlidingOpType_08 = 0
bEnableSlidingOpType_09 = 0
bEnableSlidingOpType_10 = 0
bEnableSlidingOpType_11 = 0

bEnableSlidingOpType2MovableSash_01 = 0
bEnableSlidingOpType2MovableSash_02 = 0
bEnableSlidingOpType2MovableSash_03 = 0
bEnableSlidingOpType2MovableSash_04 = 0
bEnableSlidingOpType2MovableSash_05 = 0
bEnableSlidingOpType2MovableSash_06 = 0
bEnableSlidingOpType2MovableSash_07 = 0
bEnableSlidingOpType2MovableSash_08 = 0
bEnableSlidingOpType2MovableSash_09 = 0
bEnableSlidingOpType2MovableSash_10 = 0
bEnableSlidingOpType2MovableSash_11 = 0

bEnableSecondCustPanel_01 = 0
bEnableSecondCustPanel_02 = 0
bEnableSecondCustPanel_03 = 0
bEnableSecondCustPanel_04 = 0
bEnableSecondCustPanel_05 = 0
bEnableSecondCustPanel_06 = 0
bEnableSecondCustPanel_07 = 0
bEnableSecondCustPanel_08 = 0
bEnableSecondCustPanel_09 = 0
bEnableSecondCustPanel_10 = 0
bEnableSecondCustPanel_11 = 0

bLockSashThk	 = 1
maxSashThk = 0

bEnabledMullionVentPanel = 0
bHideSashAttr = 1
bNeed2DOpeningAngle = 0
bNeed2DOpeningLength = 0
bHideFixGlassDir = 1
for ii = 1 to 10
	if sashID[ii][SASH_ID] > 0 then
		CasementID = sashID[ii][SASH_ID]

		if sashID[ii][SASH_FUNCTION] <> 0 then

			bLockMullion	= (gs_sash_uniform)
			isMainSash		= (sashID[ii][SASH_ROLE] = SASHROLE_MAIN)
			isUpTransomSash	= (sashID[ii][SASH_ROLE] = SASHROLE_UPPER_TRANSOM)
			iSashType		= sashID[ii][SASH_TYPE]
			sashWidth		= sashID[ii][SASH_WIDTH]
			sashHeight		= sashID[ii][SASH_HEIGHT]
			iSashShape		= sashID[ii][SASH_SHAPE]
			gosub "ValuesSashParameters"

			gosub "CheckMullionStyle"	! -> bNoMullion, bNoGlass, bDivided, bSolidGlazed
			if not(bNoMullion) then		! Have Grids
				b2SashWithIndependentVentilation	= 0
				isVentilationProfileInSash			= 0
				isVentilationProfileInFirstSash		= 0
				isVentilationProfileInSecondSash	= 0
				bResetMullions	= sashID[ii][SASH_RESET]
				gosub "ManageMullionParameters"
			endif

			gs_optype_m = 0
			if CasementID = 1 then gs_optype_m = gs_optype_m_01
			if CasementID = 2 then gs_optype_m = gs_optype_m_02
			if CasementID = 3 then gs_optype_m = gs_optype_m_03
			if CasementID = 4 then gs_optype_m = gs_optype_m_04
			if CasementID = 5 then gs_optype_m = gs_optype_m_05
			if CasementID = 6 then gs_optype_m = gs_optype_m_06
			if CasementID = 7 then gs_optype_m = gs_optype_m_07
			if CasementID = 8 then gs_optype_m = gs_optype_m_08
			if CasementID = 9 then gs_optype_m = gs_optype_m_09
			if CasementID = 10 then gs_optype_m = gs_optype_m_10
			if CasementID = 11 then gs_optype_m = gs_optype_m_11

			if	gs_optype_m <> SASH_TILT_SLIDE &\
				gs_optype_m <> SASH_LEFT_SLIDING &\
				gs_optype_m <> SASH_RIGHT_SLIDING &\
				gs_optype_m <> SASH_UP_SLIDING &\
				gs_optype_m <> SASH_DOWN_SLIDING &\
				gs_optype_m <> SASH_SLIDING_HOR &\
				gs_optype_m <> SASH_SLIDING_HOR_M &\
				gs_optype_m <> SASH_DOUBLE_SLIDING_HOR &\
				gs_optype_m <> SASH_DOUBLE_SLIDING_HOR_M &\
				gs_optype_m <> SASH_SLIDING_VER &\
				gs_optype_m <> SASH_DOUBLE_SLIDING_VER then bLockSashThk = 0

			if	gs_optype_m = SASH_HOR_PIVOT |\
				gs_optype_m = SASH_VER_PIVOT |\
				gs_optype_m = SASH_VER_PIVOT_M then maxSashThk = gs_frame_thk

			if	gs_optype_m = SASH_SLIDING_HOR |\
				gs_optype_m = SASH_SLIDING_HOR_M |\
				gs_optype_m = SASH_DOUBLE_SLIDING_HOR |\
				gs_optype_m = SASH_DOUBLE_SLIDING_HOR_M |\
				gs_optype_m = SASH_SLIDING_VER |\
				gs_optype_m = SASH_DOUBLE_SLIDING_VER then maxSashThk = gs_frame_thk / 2

			if sashID[ii][SASH_ROLE] = SASHROLE_MAIN then
				if	gs_optype_m = SASH_SIDE_HUNG |\
					gs_optype_m = SASH_SIDE_HUNG_M |\
					gs_optype_m = SASH_TILT_TURN |\
					gs_optype_m = SASH_TILT_TURN_M |\
					gs_optype_m = SASH_HOR_PIVOT |\
					gs_optype_m = SASH_VER_PIVOT |\
					gs_optype_m = SASH_VER_PIVOT_M |\
					gs_optype_m = SASH_DOUBLE_SIDE_HUNG |\
					gs_optype_m = SASH_DOUBLE_TILT_TURN |\
					gs_optype_m = SASH_DOUBLE_TILT_TURN_M then bNeed2DOpeningAngle = 1

				if	gs_optype_m = SASH_BOTTOM_HUNG |\
					gs_optype_m = SASH_TOP_HUNG |\
					gs_optype_m = SASH_HOR_PIVOT then bNeed2DOpeningLength = 1

				if gs_optype_m = SASH_FIXED then bHideFixGlassDir = 0
			endif


			bHideSashAttr = min(bHideSashAttr, (gs_optype_m = SASH_FIXED), ((iMullionStyle = MULLION_NONE | iMullionStyle = MULLION_CUSTOM)))

		endif
	endif
next ii

if iWindowClass	<> WINCLASS_DOORSASH & (bHideFixGlassDir | not(bShowRebateOnFixGlass)) then
	lock "FixGlassDir", "FixGlassDir_m"
	hideparameter "FixGlassDir", "FixGlassDir_m"
endif


if isWindow & (numPossibleSashes > 0) & bHideSashAttr then
	lock	"gs_fillSash",
			"gs_penSash_bg",
			"gs_penSash_fg",
			"gs_sash_pen"
	hideparameter	"gs_fillSash",
					"gs_penSash_bg",
					"gs_penSash_fg",
					"gs_sash_pen"
endif

if bLockSashThk & isWindow then
	lock "gs_sash_thk"
endif

if not(isWindow) & maxSashThk > EPS & gs_sash_thk > maxSashThk then
	gs_sash_thk = maxSashThk
	parameters gs_sash_thk = gs_sash_thk
endif

if isWindow then

	if bNEDOpLineSymbole &  not(iWindowClass = WINCLASS_HISTORIC |\
								iWindowClass = WINCLASS_SINGLE_HUNG |\
								iWindowClass = WINCLASS_DOUBLE_HUNG |\
								iWindowType = WIN_WDoubleSash |\
								iWindowType = WIN_WTrapezoidDoubleSash |\
								iWindowType = WIN_WMultiside |\
								iWindowType = WIN_WOval |\
								iWindowType = WIN_WPentagon |\
								iWindowType = WIN_WQuarterRound |\
								iWindowType = WIN_Rhomb |\
								iWindowType = WIN_WRound |\
								iWindowType = WIN_Skewed |\
								iWindowType = WIN_WEyebrows |\
								iWindowType = WIN_WTriangle) then

		if	iWindowType = WIN_MultisashHorizontal	|\
			iWindowType = WIN_MultisashVertical		then

			if iWindowType = WIN_MultisashHorizontal then
				_bTopBottomHung = 0
				for iPane = 1 to gs_panes_number
					_bTopBottomHung = (goptypeID[iPane] = SASH_BOTTOM_HUNG) | (goptypeID[iPane] = SASH_TOP_HUNG)
					if _bTopBottomHung then iPane = gs_panes_number			! exit loop
				next iPane
			else
				_bTopBottomHung = (goptypeID[1] = SASH_BOTTOM_HUNG) | (goptypeID[1] = SASH_TOP_HUNG)
			endif

			_openLengthLimit = sashHeightArray[1][1]
		else
			_bTopBottomHung =	(gs_optype_m_09 = SASH_BOTTOM_HUNG) | (gs_optype_m_09 = SASH_TOP_HUNG) |\
								(gs_optype_m_01 = SASH_BOTTOM_HUNG) | (gs_optype_m_01 = SASH_TOP_HUNG) |\
								(gs_optype_m_05 = SASH_BOTTOM_HUNG) | (gs_optype_m_05 = SASH_TOP_HUNG)

			_openLengthLimit = max(((gs_optype_m_09 = SASH_BOTTOM_HUNG) | (gs_optype_m_09 = SASH_TOP_HUNG) | (gs_optype_m_09 = SASH_HOR_PIVOT))*(sashHeightArray[2][1]),\
								   ((gs_optype_m_01 = SASH_BOTTOM_HUNG) | (gs_optype_m_01 = SASH_TOP_HUNG) | (gs_optype_m_01 = SASH_HOR_PIVOT))*(sashHeightArray[2][2]),\
								   ((gs_optype_m_05 = SASH_BOTTOM_HUNG) | (gs_optype_m_05 = SASH_TOP_HUNG) | (gs_optype_m_05 = SASH_HOR_PIVOT))*(sashHeightArray[2][3]))
		endif

		if (bNeed2DOpeningLength) then
			if not(_bTopBottomHung) then
				values "gs_openLength_2D" range [0, _openLengthLimit/2]
			else
				values "gs_openLength_2D" range [0, _openLengthLimit]
			endif
		else
			lock "gs_openLength_2D"
			hideparameter "gs_openLength_2D"
		endif
	endif

	if bNeed2DOpeningAngle	then
		values "gs_open_2D" range [0, 90]
	else
		lock "gs_open_2D"
		hideparameter "gs_open_2D"
	endif
endif

dim iMullionStyleEnabled[]
idx = 1
iMullionStyleEnabled[idx] = MULLION_NONE:		idx = idx + 1
iMullionStyleEnabled[idx] = MULLION_HVGRID:		idx = idx + 1
if not(bFoundNonRectShape | iWindowClass = WINCLASS_HISTORIC) then
	iMullionStyleEnabled[idx] = MULLION_EDITABLEGRID:	idx = idx + 1
else
	if iMullionStyle_00 = MULLION_EDITABLEGRID then
		iMullionStyle_00 = MULLION_HVGRID
		parameters iMullionStyle_00 = iMullionStyle_00
	endif
endif
if not(bFoundFixMainSash | bFoundNonMainSash | bFoundNonRectShape) & not(isWindow) then
	iMullionStyleEnabled[idx] = MULLION_FRENCH_PANEL:	idx = idx + 1
else
	if iMullionStyle_00 = MULLION_FRENCH_PANEL then
		iMullionStyle_00 = MULLION_HVGRID
		parameters iMullionStyle_00 = iMullionStyle_00
	endif
endif
bDisableDividedSash = (bFoundNonRectShape | iWindowClass = WINCLASS_HISTORIC | iWindowClass = WINCLASS_SINGLE_HUNG | iWindowClass = WINCLASS_DOUBLE_HUNG)
if not(bFoundFixMainSash | bFoundNonMainSash | bDisableDividedSash) then
	iMullionStyleEnabled[idx] = MULLION_DIVIDED:		idx = idx + 1
else
	if iMullionStyle_00 = MULLION_DIVIDED then
		iMullionStyle_00 = MULLION_NONE
		parameters iMullionStyle_00 = iMullionStyle_00
	endif
endif
if not(bFoundFixMainSash | bFoundNonMainSash | bDisableDividedSash) &\
	not(isWindow) then
		iMullionStyleEnabled[idx] = MULLION_SOLID_GLAZED:		idx = idx + 1
else
	if iMullionStyle_00 = MULLION_SOLID_GLAZED then
		iMullionStyle_00 = MULLION_NONE
		parameters iMullionStyle_00 = iMullionStyle_00
	endif
endif
if not(bFoundNonMainSash | bFoundNonFixMainSash) &\
	not(isWindow) then
		iMullionStyleEnabled[idx] = MULLION_DIVIDED_FRAME:	idx = idx + 1
else
	if iMullionStyle_00 = MULLION_DIVIDED_FRAME then
		iMullionStyle_00 = MULLION_HVGRID
		parameters iMullionStyle_00 = iMullionStyle_00
	endif
endif
iMullionStyleEnabled[idx] = MULLION_SOLID_PANEL:	idx = idx + 1

if not(bFoundNonRectShape | iWindowClass = WINCLASS_HISTORIC | iWindowClass = WINCLASS_HORIZONTAL_SLIDING) then
	iMullionStyleEnabled[idx] = MULLION_VENT_PANEL:		idx = idx + 1
	bEnabledMullionVentPanel = 1
else
	if iMullionStyle_00 = MULLION_VENT_PANEL then
		iMullionStyle_00 = MULLION_HVGRID
		parameters iMullionStyle_00 = iMullionStyle_00
	endif
endif

if not(bFoundNonArchedShape & bFoundNonHalfarchShape) then
	iMullionStyleEnabled[idx] = MULLION_SUNBURST_1:		idx = idx + 1
	iMullionStyleEnabled[idx] = MULLION_SUNBURST_2:		idx = idx + 1
	iMullionStyleEnabled[idx] = MULLION_SUNBURST_3:		idx = idx + 1
	iMullionStyleEnabled[idx] = MULLION_SUNBURST_4:		idx = idx + 1
	iMullionStyleEnabled[idx] = MULLION_SUNBURST_5:		idx = idx + 1
	if not(bFoundNonHalfarchShape) then
		iMullionStyleEnabled[idx] = MULLION_SUNBURST_6:		idx = idx + 1
	else
		if iMullionStyle_00 = MULLION_SUNBURST_6 then
			iMullionStyle_00 = MULLION_HVGRID
			parameters iMullionStyle_00 = iMullionStyle_00
		endif
	endif
else
	if	iMullionStyle_00 = MULLION_SUNBURST_1 |\
		iMullionStyle_00 = MULLION_SUNBURST_2 |\
		iMullionStyle_00 = MULLION_SUNBURST_3 |\
		iMullionStyle_00 = MULLION_SUNBURST_4 |\
		iMullionStyle_00 = MULLION_SUNBURST_5 |\
		iMullionStyle_00 = MULLION_SUNBURST_6 then

			iMullionStyle_00 = MULLION_HVGRID
			parameters iMullionStyle_00 = iMullionStyle_00
	endif
endif
iMullionStyleEnabled[idx] = MULLION_CUSTOM:		idx = idx + 1

dim MullionStyleEnabled[]
for i=1 to vardim1(iMullionStyleEnabled)
	MullionStyleEnabled[i] = stSashType[iMullionStyleEnabled[i]]
next i
values  "MullionStyle_00"	 MullionStyleEnabled
values "iMullionStyle_00"	iMullionStyleEnabled

if gs_sash_uniform then
	if GLOB_MODPAR_NAME = "MullionStyle_00" then
		iMullionStyle_00 = MULLION_NONE
		for i=2 to vardim1(stSashType)
			if MullionStyle_00 = stSashType[i] then iMullionStyle_00 = i
		next i
		parameters iMullionStyle_00 = iMullionStyle_00
	else
		MullionStyle_00 = stSashType[iMullionStyle_00]
		parameters MullionStyle_00 = MullionStyle_00
	endif
else
	lock "MullionStyle_00", "iMullionStyle_00"
	hideparameter "MullionStyle_00", "iMullionStyle_00"
endif

if iMullionStyle_00 = MULLION_CUSTOM & gs_sash_uniform then
	values "gs_cust_panel_00"  gs_pt
else
	if numPossibleSashes > 1 then
		lock "gs_cust_panel_00"
		hideparameter "gs_cust_panel_00"
	endif
endif


! =============================================================================
! Common Sash Parameters Handling
! =============================================================================

for ii = 1 to 10
	if sashID[ii][SASH_ID] > 0 then
		CasementID = sashID[ii][SASH_ID]

		if sashID[ii][SASH_FUNCTION] = 0 then
			gosub "LockSashParameters"
		endif
	endif
next ii

! =============================================================================
! Opening Special Parameter Handling
! =============================================================================

numSash = 0
for i = 1 to 10
	if sashID[i][SASH_FUNCTION] > 0 then numSash = numSash + 1
next i

if isWindow then
	if numSash > 7 then
		dim moreSashID[]
		if	iWindowType = WIN_MultisashHorizontal	|\
			iWindowType = WIN_MultisashVertical		then

			for i = 1 to gs_panes_number
				moreSashID[i] = i
			next i
		else
			j = 1
			for i = 1 to 10
				if sashID[i][SASH_FUNCTION] > 0 & sashID[i][SASH_ROLE] <> SASHROLE_MAIN then	! is Valid and not Main Sash
					moreSashID[j] = sashID[i][SASH_FUNCTION]
					j = j + 1
				endif
			next i
		endif
		values "gs_more_sash_set_to_edit" moreSashID
	endif
else
	if (numSash > 2) | (numSash = 2 & bSlidingUIalternative) then
		dim moreSashID[]
		j = 1
		for i = 1 to 10
			if sashID[i][SASH_FUNCTION] > 0 then	! is Valid Sash
				moreSashID[j] = sashID[i][SASH_FUNCTION]
				j = j + 1
			endif
		next i

		values "gs_more_sash_set_to_edit" moreSashID
	endif
endif

! =============================================================================
! Mullion Divided Frame Parameter Handling
! =============================================================================

if not(isWindow) then

	values "gs_sidelight_div_width"	range(0,)
	values "gs_sidelight_div_thk"	range(0,gs_frame_thk]

	if gs_sidelight_div_thk > gs_frame_thk then
		gs_sidelight_div_thk = gs_frame_thk
		parameters gs_sidelight_div_thk = gs_sidelight_div_thk
	else
		if gs_sash_uniform then
			bNumDividedFrame =	(iMullionStyle_00 = MULLION_DIVIDED_FRAME)
		else
			bNumDividedFrame =	(iMullionStyle_02 = MULLION_DIVIDED_FRAME) +\
								(iMullionStyle_05 = MULLION_DIVIDED_FRAME) +\
								(iMullionStyle_06 = MULLION_DIVIDED_FRAME) +\
								(iMullionStyle_09 = MULLION_DIVIDED_FRAME) +\
								(iMullionStyle_10 = MULLION_DIVIDED_FRAME)
		endif

		if bNumDividedFrame = 1 then
			if	((GLOB_MODPAR_NAME = "MullionStyle_00" | GLOB_MODPAR_NAME = "iMullionStyle_00") & iMullionStyle_00 = MULLION_DIVIDED_FRAME) |\
				((GLOB_MODPAR_NAME = "MullionStyle_02" | GLOB_MODPAR_NAME = "iMullionStyle_02") & iMullionStyle_02 = MULLION_DIVIDED_FRAME) |\
				((GLOB_MODPAR_NAME = "MullionStyle_05" | GLOB_MODPAR_NAME = "iMullionStyle_05") & iMullionStyle_05 = MULLION_DIVIDED_FRAME) |\
				((GLOB_MODPAR_NAME = "MullionStyle_06" | GLOB_MODPAR_NAME = "iMullionStyle_06") & iMullionStyle_06 = MULLION_DIVIDED_FRAME) |\
				((GLOB_MODPAR_NAME = "MullionStyle_09" | GLOB_MODPAR_NAME = "iMullionStyle_09") & iMullionStyle_09 = MULLION_DIVIDED_FRAME) |\
				((GLOB_MODPAR_NAME = "MullionStyle_10" | GLOB_MODPAR_NAME = "iMullionStyle_10") & iMullionStyle_10 = MULLION_DIVIDED_FRAME) then

				gs_sidelight_div_thk = gs_frame_thk
				parameters gs_sidelight_div_thk = gs_sidelight_div_thk
			endif
		endif
	endif
endif

! =============================================================================
! Vent Sash Parameter Handling
! =============================================================================

bFoundVentPanel = not(bLockVentPanelParams)
if bFoundVentPanel then
	values "gs_louver_thk"				range[0.005, ]
	values "gs_louver_width"			range[0.025, ]
	values "gs_louver_opening_angle"	range[0, 180]


	values "LouverStyle" stLouverStyles
	values "iLouverStyle" LOUVER_STRAIGHT, LOUVER_ZPROFILE

	if GLOB_MODPAR_NAME = "LouverStyle" then
		if LouverStyle = stLouverStyles[1] then
			iLouverStyle = LOUVER_STRAIGHT
		else
			iLouverStyle = LOUVER_ZPROFILE
		endif
		parameters iLouverStyle = iLouverStyle
	else
		if iLouverStyle = LOUVER_STRAIGHT then
			LouverStyle = stLouverStyles[1]
		else
			LouverStyle = stLouverStyles[2]
		endif
		parameters LouverStyle = LouverStyle
	endif
endif

if (numPossibleSashes > 0) & bLockSolidPanelParams then
	lock "gs_panel_mat", "gs_panel_mat2"
	hideparameter "gs_panel_mat", "gs_panel_mat2"
endif

if (numPossibleSashes > 0) & bEnabledMullionVentPanel & bLockVentPanelParams then
	lock	"LouverStyle",
			"iLouverStyle",
			"gs_louver_thk",
			"gs_louver_width",
			"gs_louver_opening_angle",
			"gs_ventSashLouver_mat"
	hideparameter 	"LouverStyle",
					"iLouverStyle",
					"gs_louver_thk",
					"gs_louver_width",
					"gs_louver_opening_angle",
					"gs_ventSashLouver_mat"
endif


! =============================================================================
! SWE Label sash ID handling
! =============================================================================

if	iWindowType <> WIN_MultisashHorizontal	&\
	iWindowType <> WIN_MultisashVertical	then

	call "winDoorCasIDmacro_kmod" parameters 	isSweDoorWindow			= 0,
											sashRowNum				= 0,
											sashColumnNum			= 0,
											iWindowType				= iWindowType,
											iWindowClass			= iWindowClass,
											gs_bLeftSLight			= gs_bLeftSLight,
											gs_bSLight				= gs_bSLight,
											gs_UTrans				= gs_UTrans,
											gs_LTrans				= gs_LTrans,
											gs_UTrans_Div			= gs_UTrans_Div,
											gs_LTrans_Div			= gs_LTrans_Div,
											nDinamicSash			= 0,
											CasementIDArray			= CasementIDArray,
											CasementTypeArray		= CasementTypeArray
else
	call "winDoorCasIDmacro_kmod" parameters 	isSweDoorWindow				= 0,
											sashRowNum					= 0,
											sashColumnNum				= 0,
											iWindowType					= iWindowType,
											iWindowClass				= iWindowClass,
											gs_bLeftSLight				= 0,
											gs_bSLight					= 0,
											gs_UTrans					= 0,
											gs_LTrans					= 0,
											gs_UTrans_Div				= 0,
											gs_LTrans_Div				= 0,
											nDinamicSash				= gs_panes_number,
											gs_repeat_modules_number	= 1 + (gs_repeat_modules_number - 1) * gs_repeat_modules,
											CasementIDArray				= CasementIDArray,
											CasementTypeArray			= CasementTypeArray,
											gs_iShowSashOnSymbol		= gs_iShowSashOnSymbol											
endif


! =============================================================================
! End
! =============================================================================
end bLockMullionParams,
	bLockGlassParams,
	PanelGlassArea


! =============================================================================
!
! -----------------------------------------------------------------------------
! CasementID:
! sashWidth:
! sashHeight:
! bResetMullions:
! bDivided:
! =============================================================================

"ManageMullionParameters":

	if CasementID = 1 then
		gs_optype_m = gs_optype_m_01
		gosub "GetSashNumber"	! gs_optype_m -> iSashNum
		vgn = vgn_01
		hgn = hgn_01
		vgn2 = vgn2_01
		hgn2 = hgn2_01
		bResetFirstSashMullions		= 0
		bResetSecondSashMullions	= 0
		if	gs_optype_m = SASH_SLIDING_VER |\
			gs_optype_m = SASH_DOUBLE_SLIDING_VER then
			if	((hgn + hgn2 > 2) & (horgrid_01[1][1] + 999999 < EPS)) | (max(1, (hgn + hgn2 - 2)) <> vardim1(horgrid_01)) |\
				((vgn + vgn2 > 2) & (vergrid_01[1][1] + 999999 < EPS)) | (max(1, (vgn + vgn2 - 2)) <> vardim1(vergrid_01)) then bResetMullions = 1
		else
			if not(bSolidGlazed) then
				if	((hgn > 1) & (horgrid_01[1][1] + 999999 < EPS)) | (max(1, iSashNum * (hgn - 1)) <> vardim1(horgrid_01)) |\
					((vgn > 1) & (vergrid_01[1][1] + 999999 < EPS)) | (max(1, iSashNum * (vgn - 1)) <> vardim1(vergrid_01)) then bResetMullions = 1
			endif
		endif
		if bDivided | bSolidGlazed then
			gs_horiz_div_height = gs_horiz_div_height_01
			if	((hgn2 > 1) & (horgrid2_01[1][1] + 999999 < EPS)) | (max(1, iSashNum * (hgn2 - 1)) <> vardim1(horgrid2_01)) |\
				((vgn2 > 1) & (vergrid2_01[1][1] + 999999 < EPS)) | (max(1, iSashNum * (vgn2 - 1)) <> vardim1(vergrid2_01)) then

				bResetMullions = 1
			endif
		endif
		if	GLOB_MODPAR_NAME = "MullionStyle_01" | \
			GLOB_MODPAR_NAME = "iMullionStyle_01" | \
			GLOB_MODPAR_NAME = "gs_optype_01" | \
			GLOB_MODPAR_NAME = "gs_optype_m_01" | \
			GLOB_MODPAR_NAME = "gs_horiz_div_height_01" | \
			GLOB_MODPAR_NAME = "vgn_01" | \
			GLOB_MODPAR_NAME = "hgn_01" | \
			GLOB_MODPAR_NAME = "vgn2_01" | \
			GLOB_MODPAR_NAME = "hgn2_01" then
		
			bResetMullions = 1
		endif

		if iVentilationProfileType = VENTPROFILE_OVER_GLAZING then
			isVentilationProfileInSash = isVentilationProfileInSash_01
			if	isVentilationProfileInSash & \
				(GLOB_MODPAR_NAME = "bVentilationProfile" | \
				 GLOB_MODPAR_NAME = "iVentilationProfileType" | \
				 GLOB_MODPAR_NAME = "VentilationProfileHeight") then bResetMullions = 1

			if GLOB_MODPAR_NAME = "isVentilationProfileInSash_01" then bResetMullions = 1
		endif
	endif
	if CasementID = 2 then
		gs_optype_m = gs_optype_m_02
		gosub "GetSashNumber"	! gs_optype_m -> iSashNum
		vgn = vgn_02
		hgn = hgn_02
		vgn2 = vgn2_02
		hgn2 = hgn2_02
		if	gs_optype_m = SASH_SLIDING_VER |\
			gs_optype_m = SASH_DOUBLE_SLIDING_VER then
			if	((hgn + hgn2 > 2) & (horgrid_02[1][1] + 999999 < EPS)) | (max(1, (hgn + hgn2 - 2)) <> vardim1(horgrid_02)) |\
				((vgn + vgn2 > 2) & (vergrid_02[1][1] + 999999 < EPS)) | (max(1, (vgn + vgn2 - 2)) <> vardim1(vergrid_02)) then bResetMullions = 1
		else
			if not(bSolidGlazed) then
				if	((hgn > 1) & (horgrid_02[1][1] + 999999 < EPS)) | (max(1, iSashNum * (hgn - 1)) <> vardim1(horgrid_02)) |\
					((vgn > 1) & (vergrid_02[1][1] + 999999 < EPS)) | (max(1, iSashNum * (vgn - 1)) <> vardim1(vergrid_02)) then bResetMullions = 1
			endif
		endif
		if bDivided | bSolidGlazed then
			gs_horiz_div_height = gs_horiz_div_height_02
			if	((hgn2 > 1) & (horgrid2_02[1][1] + 999999 < EPS)) | (max(1, iSashNum * (hgn2 - 1)) <> vardim1(horgrid2_02)) |\
				((vgn2 > 1) & (vergrid2_02[1][1] + 999999 < EPS)) | (max(1, iSashNum * (vgn2 - 1)) <> vardim1(vergrid2_02)) then bResetMullions = 1
		endif
		if	GLOB_MODPAR_NAME = "MullionStyle_02" | \
			GLOB_MODPAR_NAME = "iMullionStyle_02" | \
			GLOB_MODPAR_NAME = "gs_optype_02" | \
			GLOB_MODPAR_NAME = "gs_optype_m_02" | \
			GLOB_MODPAR_NAME = "gs_horiz_div_height_02" | \
			GLOB_MODPAR_NAME = "vgn_02" | \
			GLOB_MODPAR_NAME = "hgn_02" | \
			GLOB_MODPAR_NAME = "vgn2_02" | \
			GLOB_MODPAR_NAME = "hgn2_02" then bResetMullions = 1

		if bVentilationProfile & (iVentilationProfileType = VENTPROFILE_OVER_GLAZING) then
			isVentilationProfileInSash = isVentilationProfileInSash_02
			if	isVentilationProfileInSash & \
				(GLOB_MODPAR_NAME = "bVentilationProfile" | \
				 GLOB_MODPAR_NAME = "iVentilationProfileType" | \
				 GLOB_MODPAR_NAME = "VentilationProfileHeight") then bResetMullions = 1

			if GLOB_MODPAR_NAME = "isVentilationProfileInSash_02" then bResetMullions = 1
		endif
	endif
	if CasementID = 3 then
		gs_optype_m = gs_optype_m_03
		gosub "GetSashNumber"	! gs_optype_m -> iSashNum
		vgn = vgn_03
		hgn = hgn_03
		vgn2 = vgn2_03
		hgn2 = hgn2_03
		if	gs_optype_m = SASH_SLIDING_VER |\
			gs_optype_m = SASH_DOUBLE_SLIDING_VER then
			if	((hgn + hgn2 > 2) & (horgrid_03[1][1] + 999999 < EPS)) | (max(1, (hgn + hgn2 - 2)) <> vardim1(horgrid_03)) |\
				((vgn + vgn2 > 2) & (vergrid_03[1][1] + 999999 < EPS)) | (max(1, (vgn + vgn2 - 2)) <> vardim1(vergrid_03)) then bResetMullions = 1
		else
			if not(bSolidGlazed) then
				if	((hgn > 1) & (horgrid_03[1][1] + 999999 < EPS)) | (max(1, iSashNum * (hgn - 1)) <> vardim1(horgrid_03)) |\
					((vgn > 1) & (vergrid_03[1][1] + 999999 < EPS)) | (max(1, iSashNum * (vgn - 1)) <> vardim1(vergrid_03)) then bResetMullions = 1
			endif
		endif
		if bDivided | bSolidGlazed then
			gs_horiz_div_height = gs_horiz_div_height_03
			if	((hgn2 > 1) & (horgrid2_03[1][1] + 999999 < EPS)) | (max(1, iSashNum * (hgn2 - 1)) <> vardim1(horgrid2_03)) |\
				((vgn2 > 1) & (vergrid2_03[1][1] + 999999 < EPS)) | (max(1, iSashNum * (vgn2 - 1)) <> vardim1(vergrid2_03)) then bResetMullions = 1
		endif
		if	GLOB_MODPAR_NAME = "MullionStyle_03" | \
			GLOB_MODPAR_NAME = "iMullionStyle_03" | \
			GLOB_MODPAR_NAME = "gs_optype_03" | \
			GLOB_MODPAR_NAME = "gs_optype_m_03" | \
			GLOB_MODPAR_NAME = "gs_horiz_div_height_03" | \
			GLOB_MODPAR_NAME = "vgn_03" | \
			GLOB_MODPAR_NAME = "hgn_03" | \
			GLOB_MODPAR_NAME = "vgn2_03" | \
			GLOB_MODPAR_NAME = "hgn2_03" then bResetMullions = 1

		if bVentilationProfile & (iVentilationProfileType = VENTPROFILE_OVER_GLAZING) then
			isVentilationProfileInSash = isVentilationProfileInSash_03
			if	isVentilationProfileInSash & \
				(GLOB_MODPAR_NAME = "bVentilationProfile" | \
				 GLOB_MODPAR_NAME = "iVentilationProfileType" | \
				 GLOB_MODPAR_NAME = "VentilationProfileHeight") then bResetMullions = 1

			if GLOB_MODPAR_NAME = "isVentilationProfileInSash_03" then bResetMullions = 1
		endif
	endif
	if CasementID = 4 then
		gs_optype_m = gs_optype_m_04
		gosub "GetSashNumber"	! gs_optype_m -> iSashNum
		vgn = vgn_04
		hgn = hgn_04
		vgn2 = vgn2_04
		hgn2 = hgn2_04
		if	gs_optype_m = SASH_SLIDING_VER |\
			gs_optype_m = SASH_DOUBLE_SLIDING_VER then
			if	((hgn + hgn2 > 2) & (horgrid_04[1][1] + 999999 < EPS)) | (max(1, (hgn + hgn2 - 2)) <> vardim1(horgrid_04)) |\
				((vgn + vgn2 > 2) & (vergrid_04[1][1] + 999999 < EPS)) | (max(1, (vgn + vgn2 - 2)) <> vardim1(vergrid_04)) then bResetMullions = 1
		else
			if not(bSolidGlazed) then
				if	((hgn > 1) & (horgrid_04[1][1] + 999999 < EPS)) | (max(1, iSashNum * (hgn - 1)) <> vardim1(horgrid_04)) |\
					((vgn > 1) & (vergrid_04[1][1] + 999999 < EPS)) | (max(1, iSashNum * (vgn - 1)) <> vardim1(vergrid_04)) then bResetMullions = 1
			endif
		endif
		if bDivided | bSolidGlazed then
			gs_horiz_div_height = gs_horiz_div_height_04
			if	((hgn2 > 1) & (horgrid2_04[1][1] + 999999 < EPS)) | (max(1, iSashNum * (hgn2 - 1)) <> vardim1(horgrid2_04)) |\
				((vgn2 > 1) & (vergrid2_04[1][1] + 999999 < EPS)) | (max(1, iSashNum * (vgn2 - 1)) <> vardim1(vergrid2_04)) then bResetMullions = 1
		endif
		if	GLOB_MODPAR_NAME = "MullionStyle_04" | \
			GLOB_MODPAR_NAME = "iMullionStyle_04" | \
			GLOB_MODPAR_NAME = "gs_optype_04" | \
			GLOB_MODPAR_NAME = "gs_optype_m_04" | \
			GLOB_MODPAR_NAME = "gs_horiz_div_height_04" | \
			GLOB_MODPAR_NAME = "vgn_04" | \
			GLOB_MODPAR_NAME = "hgn_04" | \
			GLOB_MODPAR_NAME = "vgn2_04" | \
			GLOB_MODPAR_NAME = "hgn2_04" then bResetMullions = 1

		if bVentilationProfile & (iVentilationProfileType = VENTPROFILE_OVER_GLAZING) then
			isVentilationProfileInSash = isVentilationProfileInSash_04
			if	isVentilationProfileInSash & \
				(GLOB_MODPAR_NAME = "bVentilationProfile" | \
				 GLOB_MODPAR_NAME = "iVentilationProfileType" | \
				 GLOB_MODPAR_NAME = "VentilationProfileHeight") then bResetMullions = 1

			if GLOB_MODPAR_NAME = "isVentilationProfileInSash_04" then bResetMullions = 1
		endif
	endif
	if CasementID = 5 then
		gs_optype_m = gs_optype_m_05
		gosub "GetSashNumber"	! gs_optype_m -> iSashNum
		vgn = vgn_05
		hgn = hgn_05
		vgn2 = vgn2_05
		hgn2 = hgn2_05
		if	gs_optype_m = SASH_SLIDING_VER |\
			gs_optype_m = SASH_DOUBLE_SLIDING_VER then
			if	((hgn + hgn2 > 2) & (horgrid_05[1][1] + 999999 < EPS)) | (max(1, (hgn + hgn2 - 2)) <> vardim1(horgrid_05)) |\
				((vgn + vgn2 > 2) & (vergrid_05[1][1] + 999999 < EPS)) | (max(1, (vgn + vgn2 - 2)) <> vardim1(vergrid_05)) then bResetMullions = 1
		else
			if not(bSolidGlazed) then
				if	((hgn > 1) & (horgrid_05[1][1] + 999999 < EPS)) | (max(1, iSashNum * (hgn - 1)) <> vardim1(horgrid_05)) |\
					((vgn > 1) & (vergrid_05[1][1] + 999999 < EPS)) | (max(1, iSashNum * (vgn - 1)) <> vardim1(vergrid_05)) then bResetMullions = 1
			endif
		endif
		if bDivided | bSolidGlazed then
			gs_horiz_div_height = gs_horiz_div_height_05
			if	((hgn2 > 1) & (horgrid2_05[1][1] + 999999 < EPS)) | (max(1, iSashNum * (hgn2 - 1)) <> vardim1(horgrid2_05)) |\
				((vgn2 > 1) & (vergrid2_05[1][1] + 999999 < EPS)) | (max(1, iSashNum * (vgn2 - 1)) <> vardim1(vergrid2_05)) then bResetMullions = 1
		endif
		if	GLOB_MODPAR_NAME = "MullionStyle_05" | \
			GLOB_MODPAR_NAME = "iMullionStyle_05" | \
			GLOB_MODPAR_NAME = "gs_optype_05" | \
			GLOB_MODPAR_NAME = "gs_optype_m_05" | \
			GLOB_MODPAR_NAME = "gs_horiz_div_height_05" | \
			GLOB_MODPAR_NAME = "vgn_05" | \
			GLOB_MODPAR_NAME = "hgn_05" | \
			GLOB_MODPAR_NAME = "vgn2_05" | \
			GLOB_MODPAR_NAME = "hgn2_05" then bResetMullions = 1

		if bVentilationProfile & (iVentilationProfileType = VENTPROFILE_OVER_GLAZING) then
			isVentilationProfileInSash = isVentilationProfileInSash_05
			if	isVentilationProfileInSash & \
				(GLOB_MODPAR_NAME = "bVentilationProfile" | \
				 GLOB_MODPAR_NAME = "iVentilationProfileType" | \
				 GLOB_MODPAR_NAME = "VentilationProfileHeight") then bResetMullions = 1

			if GLOB_MODPAR_NAME = "isVentilationProfileInSash_05" then bResetMullions = 1
		endif
	endif
	if CasementID = 6 then
		gs_optype_m = gs_optype_m_06
		gosub "GetSashNumber"	! gs_optype_m -> iSashNum
		vgn = vgn_06
		hgn = hgn_06
		vgn2 = vgn2_06
		hgn2 = hgn2_06
		if	gs_optype_m = SASH_SLIDING_VER |\
			gs_optype_m = SASH_DOUBLE_SLIDING_VER then
			if	((hgn + hgn2 > 2) & (horgrid_06[1][1] + 999999 < EPS)) | (max(1, (hgn + hgn2 - 2)) <> vardim1(horgrid_06)) |\
				((vgn + vgn2 > 2) & (vergrid_06[1][1] + 999999 < EPS)) | (max(1, (vgn + vgn2 - 2)) <> vardim1(vergrid_06)) then bResetMullions = 1
		else
			if not(bSolidGlazed) then
				if	((hgn > 1) & (horgrid_06[1][1] + 999999 < EPS)) | (max(1, iSashNum * (hgn - 1)) <> vardim1(horgrid_06)) |\
					((vgn > 1) & (vergrid_06[1][1] + 999999 < EPS)) | (max(1, iSashNum * (vgn - 1)) <> vardim1(vergrid_06)) then bResetMullions = 1
			endif
		endif
		if bDivided | bSolidGlazed then
			gs_horiz_div_height = gs_horiz_div_height_06
			if	((hgn2 > 1) & (horgrid2_06[1][1] + 999999 < EPS)) | (max(1, iSashNum * (hgn2 - 1)) <> vardim1(horgrid2_06)) |\
				((vgn2 > 1) & (vergrid2_06[1][1] + 999999 < EPS)) | (max(1, iSashNum * (vgn2 - 1)) <> vardim1(vergrid2_06)) then bResetMullions = 1
		endif
		if	GLOB_MODPAR_NAME = "MullionStyle_06" | \
			GLOB_MODPAR_NAME = "iMullionStyle_06" | \
			GLOB_MODPAR_NAME = "gs_optype_06" | \
			GLOB_MODPAR_NAME = "gs_optype_m_06" | \
			GLOB_MODPAR_NAME = "gs_horiz_div_height_06" | \
			GLOB_MODPAR_NAME = "vgn_06" | \
			GLOB_MODPAR_NAME = "hgn_06" | \
			GLOB_MODPAR_NAME = "vgn2_06" | \
			GLOB_MODPAR_NAME = "hgn2_06" then bResetMullions = 1

		if bVentilationProfile & (iVentilationProfileType = VENTPROFILE_OVER_GLAZING) then
			isVentilationProfileInSash = isVentilationProfileInSash_06
			if	isVentilationProfileInSash & \
				(GLOB_MODPAR_NAME = "bVentilationProfile" | \
				 GLOB_MODPAR_NAME = "iVentilationProfileType" | \
				 GLOB_MODPAR_NAME = "VentilationProfileHeight") then bResetMullions = 1

			if GLOB_MODPAR_NAME = "isVentilationProfileInSash_06" then bResetMullions = 1
		endif
	endif
	if CasementID = 7 then
		gs_optype_m = gs_optype_m_07
		gosub "GetSashNumber"	! gs_optype_m -> iSashNum
		vgn = vgn_07
		hgn = hgn_07
		vgn2 = vgn2_07
		hgn2 = hgn2_07
		if	gs_optype_m = SASH_SLIDING_VER |\
			gs_optype_m = SASH_DOUBLE_SLIDING_VER then
			if	((hgn + hgn2 > 2) & (horgrid_07[1][1] + 999999 < EPS)) | (max(1, (hgn + hgn2 - 2)) <> vardim1(horgrid_07)) |\
				((vgn + vgn2 > 2) & (vergrid_07[1][1] + 999999 < EPS)) | (max(1, (vgn + vgn2 - 2)) <> vardim1(vergrid_07)) then bResetMullions = 1
		else
			if not(bSolidGlazed) then
				if	((hgn > 1) & (horgrid_07[1][1] + 999999 < EPS)) | (max(1, iSashNum * (hgn - 1)) <> vardim1(horgrid_07)) |\
					((vgn > 1) & (vergrid_07[1][1] + 999999 < EPS)) | (max(1, iSashNum * (vgn - 1)) <> vardim1(vergrid_07)) then bResetMullions = 1
			endif
		endif
		if bDivided | bSolidGlazed then
			gs_horiz_div_height = gs_horiz_div_height_07
			if	((hgn2 > 1) & (horgrid2_07[1][1] + 999999 < EPS)) | (max(1, iSashNum * (hgn2 - 1)) <> vardim1(horgrid2_07)) |\
				((vgn2 > 1) & (vergrid2_07[1][1] + 999999 < EPS)) | (max(1, iSashNum * (vgn2 - 1)) <> vardim1(vergrid2_07)) then bResetMullions = 1
		endif
		if	GLOB_MODPAR_NAME = "MullionStyle_07" | \
			GLOB_MODPAR_NAME = "iMullionStyle_07" | \
			GLOB_MODPAR_NAME = "gs_optype_07" | \
			GLOB_MODPAR_NAME = "gs_optype_m_07" | \
			GLOB_MODPAR_NAME = "gs_horiz_div_height_07" | \
			GLOB_MODPAR_NAME = "vgn_07" | \
			GLOB_MODPAR_NAME = "hgn_07" | \
			GLOB_MODPAR_NAME = "vgn2_07" | \
			GLOB_MODPAR_NAME = "hgn2_07" then bResetMullions = 1

		if bVentilationProfile & (iVentilationProfileType = VENTPROFILE_OVER_GLAZING) then
			isVentilationProfileInSash = isVentilationProfileInSash_07
			if	isVentilationProfileInSash & \
				(GLOB_MODPAR_NAME = "bVentilationProfile" | \
				 GLOB_MODPAR_NAME = "iVentilationProfileType" | \
				 GLOB_MODPAR_NAME = "VentilationProfileHeight") then bResetMullions = 1

			if GLOB_MODPAR_NAME = "isVentilationProfileInSash_07" then bResetMullions = 1
		endif
	endif
	if CasementID = 8 then
		gs_optype_m = gs_optype_m_08
		gosub "GetSashNumber"	! gs_optype_m -> iSashNum
		vgn = vgn_08
		hgn = hgn_08
		vgn2 = vgn2_08
		hgn2 = hgn2_08
		if	gs_optype_m = SASH_SLIDING_VER |\
			gs_optype_m = SASH_DOUBLE_SLIDING_VER then
			if	((hgn + hgn2 > 2) & (horgrid_08[1][1] + 999999 < EPS)) | (max(1, (hgn + hgn2 - 2)) <> vardim1(horgrid_08)) |\
				((vgn + vgn2 > 2) & (vergrid_08[1][1] + 999999 < EPS)) | (max(1, (vgn + vgn2 - 2)) <> vardim1(vergrid_08)) then bResetMullions = 1
		else
			if not(bSolidGlazed) then
				if	((hgn > 1) & (horgrid_08[1][1] + 999999 < EPS)) | (max(1, iSashNum * (hgn - 1)) <> vardim1(horgrid_08)) |\
					((vgn > 1) & (vergrid_08[1][1] + 999999 < EPS)) | (max(1, iSashNum * (vgn - 1)) <> vardim1(vergrid_08)) then bResetMullions = 1
			endif
		endif
		if bDivided | bSolidGlazed then
			gs_horiz_div_height = gs_horiz_div_height_08
			if	((hgn2 > 1) & (horgrid2_08[1][1] + 999999 < EPS)) | (max(1, iSashNum * (hgn2 - 1)) <> vardim1(horgrid2_08)) |\
				((vgn2 > 1) & (vergrid2_08[1][1] + 999999 < EPS)) | (max(1, iSashNum * (vgn2 - 1)) <> vardim1(vergrid2_08)) then bResetMullions = 1
		endif
		if	GLOB_MODPAR_NAME = "MullionStyle_08" | \
			GLOB_MODPAR_NAME = "iMullionStyle_08" | \
			GLOB_MODPAR_NAME = "gs_optype_08" | \
			GLOB_MODPAR_NAME = "gs_optype_m_08" | \
			GLOB_MODPAR_NAME = "gs_horiz_div_height_08" | \
			GLOB_MODPAR_NAME = "vgn_08" | \
			GLOB_MODPAR_NAME = "hgn_08" | \
			GLOB_MODPAR_NAME = "vgn2_08" | \
			GLOB_MODPAR_NAME = "hgn2_08" then bResetMullions = 1

		if bVentilationProfile & (iVentilationProfileType = VENTPROFILE_OVER_GLAZING) then
			isVentilationProfileInSash = isVentilationProfileInSash_08
			if	isVentilationProfileInSash & \
				(GLOB_MODPAR_NAME = "bVentilationProfile" | \
				 GLOB_MODPAR_NAME = "iVentilationProfileType" | \
				 GLOB_MODPAR_NAME = "VentilationProfileHeight") then bResetMullions = 1

			if GLOB_MODPAR_NAME = "isVentilationProfileInSash_08" then bResetMullions = 1
		endif
	endif
	if CasementID = 9 then
		gs_optype_m = gs_optype_m_09
		gosub "GetSashNumber"	! gs_optype_m -> iSashNum
		vgn = vgn_09
		hgn = hgn_09
		vgn2 = vgn2_09
		hgn2 = hgn2_09
		if	gs_optype_m = SASH_SLIDING_VER |\
			gs_optype_m = SASH_DOUBLE_SLIDING_VER then
			if	((hgn + hgn2 > 2) & (horgrid_09[1][1] + 999999 < EPS)) | (max(1, (hgn + hgn2 - 2)) <> vardim1(horgrid_09)) |\
				((vgn + vgn2 > 2) & (vergrid_09[1][1] + 999999 < EPS)) | (max(1, (vgn + vgn2 - 2)) <> vardim1(vergrid_09)) then bResetMullions = 1
		else
			if not(bSolidGlazed) then
				if	((hgn > 1) & (horgrid_09[1][1] + 999999 < EPS)) | (max(1, iSashNum * (hgn - 1)) <> vardim1(horgrid_09)) |\
					((vgn > 1) & (vergrid_09[1][1] + 999999 < EPS)) | (max(1, iSashNum * (vgn - 1)) <> vardim1(vergrid_09)) then bResetMullions = 1
			endif
		endif
		if bDivided | bSolidGlazed then
			gs_horiz_div_height = gs_horiz_div_height_09
			if	((hgn2 > 1) & (horgrid2_09[1][1] + 999999 < EPS)) | (max(1, iSashNum * (hgn2 - 1)) <> vardim1(horgrid2_09)) |\
				((vgn2 > 1) & (vergrid2_09[1][1] + 999999 < EPS)) | (max(1, iSashNum * (vgn2 - 1)) <> vardim1(vergrid2_09)) then bResetMullions = 1
		endif
		if	GLOB_MODPAR_NAME = "MullionStyle_09" | \
			GLOB_MODPAR_NAME = "iMullionStyle_09" | \
			GLOB_MODPAR_NAME = "gs_optype_09" | \
			GLOB_MODPAR_NAME = "gs_optype_m_09" | \
			GLOB_MODPAR_NAME = "gs_horiz_div_height_09" | \
			GLOB_MODPAR_NAME = "vgn_09" | \
			GLOB_MODPAR_NAME = "hgn_09" | \
			GLOB_MODPAR_NAME = "vgn2_09" | \
			GLOB_MODPAR_NAME = "hgn2_09" then bResetMullions = 1

		if bVentilationProfile & (iVentilationProfileType = VENTPROFILE_OVER_GLAZING) then
			isVentilationProfileInSash = isVentilationProfileInSash_09
			if	isVentilationProfileInSash & \
				(GLOB_MODPAR_NAME = "bVentilationProfile" | \
				 GLOB_MODPAR_NAME = "iVentilationProfileType" | \
				 GLOB_MODPAR_NAME = "VentilationProfileHeight") then bResetMullions = 1

			if GLOB_MODPAR_NAME = "isVentilationProfileInSash_09" then bResetMullions = 1
		endif
	endif
	if CasementID = 10 then
		gs_optype_m = gs_optype_m_10
		gosub "GetSashNumber"	! gs_optype_m -> iSashNum
		vgn = vgn_10
		hgn = hgn_10
		vgn2 = vgn2_10
		hgn2 = hgn2_10
		if	gs_optype_m = SASH_SLIDING_VER |\
			gs_optype_m = SASH_DOUBLE_SLIDING_VER then
			if	((hgn + hgn2 > 2) & (horgrid_10[1][1] + 999999 < EPS)) | (max(1, (hgn + hgn2 - 2)) <> vardim1(horgrid_10)) |\
				((vgn + vgn2 > 2) & (vergrid_10[1][1] + 999999 < EPS)) | (max(1, (vgn + vgn2 - 2)) <> vardim1(vergrid_10)) then bResetMullions = 1
		else
			if not(bSolidGlazed) then
				if	((hgn > 1) & (horgrid_10[1][1] + 999999 < EPS)) | (max(1, iSashNum * (hgn - 1)) <> vardim1(horgrid_10)) |\
					((vgn > 1) & (vergrid_10[1][1] + 999999 < EPS)) | (max(1, iSashNum * (vgn - 1)) <> vardim1(vergrid_10)) then bResetMullions = 1
			endif
		endif
		if bDivided | bSolidGlazed then
			gs_horiz_div_height = gs_horiz_div_height_10
			if	((hgn2 > 1) & (horgrid2_10[1][1] + 999999 < EPS)) | (max(1, iSashNum * (hgn2 - 1)) <> vardim1(horgrid2_10)) |\
				((vgn2 > 1) & (vergrid2_10[1][1] + 999999 < EPS)) | (max(1, iSashNum * (vgn2 - 1)) <> vardim1(vergrid2_10)) then bResetMullions = 1
		endif
		if	GLOB_MODPAR_NAME = "MullionStyle_10" | \
			GLOB_MODPAR_NAME = "iMullionStyle_10" | \
			GLOB_MODPAR_NAME = "gs_optype_10" | \
			GLOB_MODPAR_NAME = "gs_optype_m_10" | \
			GLOB_MODPAR_NAME = "gs_horiz_div_height_10" | \
			GLOB_MODPAR_NAME = "vgn_10" | \
			GLOB_MODPAR_NAME = "hgn_10" | \
			GLOB_MODPAR_NAME = "vgn2_10" | \
			GLOB_MODPAR_NAME = "hgn2_10" then bResetMullions = 1

		if bVentilationProfile & (iVentilationProfileType = VENTPROFILE_OVER_GLAZING) then
			isVentilationProfileInSash = isVentilationProfileInSash_10
			if	isVentilationProfileInSash & \
				(GLOB_MODPAR_NAME = "bVentilationProfile" | \
				 GLOB_MODPAR_NAME = "iVentilationProfileType" | \
				 GLOB_MODPAR_NAME = "VentilationProfileHeight") then bResetMullions = 1

			if GLOB_MODPAR_NAME = "isVentilationProfileInSash_10" then bResetMullions = 1
		endif
	endif
	if CasementID = 11 then
		gs_optype_m = gs_optype_m_11
		gosub "GetSashNumber"	! gs_optype_m -> iSashNum
		vgn = vgn_11
		hgn = hgn_11
		vgn2 = vgn2_11
		hgn2 = hgn2_11
		if	gs_optype_m = SASH_SLIDING_VER |\
			gs_optype_m = SASH_DOUBLE_SLIDING_VER then
			if	((hgn + hgn2 > 2) & (horgrid_11[1][1] + 999999 < EPS)) | (max(1, (hgn + hgn2 - 2)) <> vardim1(horgrid_11)) |\
				((vgn + vgn2 > 2) & (vergrid_11[1][1] + 999999 < EPS)) | (max(1, (vgn + vgn2 - 2)) <> vardim1(vergrid_11)) then bResetMullions = 1
		else
			if not(bSolidGlazed) then
				if	((hgn > 1) & (horgrid_11[1][1] + 999999 < EPS)) | (max(1, iSashNum * (hgn - 1)) <> vardim1(horgrid_11)) |\
					((vgn > 1) & (vergrid_11[1][1] + 999999 < EPS)) | (max(1, iSashNum * (vgn - 1)) <> vardim1(vergrid_11)) then bResetMullions = 1
			endif
		endif
		if bDivided | bSolidGlazed then
			gs_horiz_div_height = gs_horiz_div_height_11
			if	((hgn2 > 1) & (horgrid2_11[1][1] + 999999 < EPS)) | (max(1, iSashNum * (hgn2 - 1)) <> vardim1(horgrid2_11)) |\
				((vgn2 > 1) & (vergrid2_11[1][1] + 999999 < EPS)) | (max(1, iSashNum * (vgn2 - 1)) <> vardim1(vergrid2_11)) then bResetMullions = 1
		endif
		if	GLOB_MODPAR_NAME = "MullionStyle_11" | \
			GLOB_MODPAR_NAME = "iMullionStyle_11" | \
			GLOB_MODPAR_NAME = "gs_optype_11" | \
			GLOB_MODPAR_NAME = "gs_optype_m_11" | \
			GLOB_MODPAR_NAME = "gs_horiz_div_height_11" | \
			GLOB_MODPAR_NAME = "vgn_11" | \
			GLOB_MODPAR_NAME = "hgn_11" | \
			GLOB_MODPAR_NAME = "vgn2_11" | \
			GLOB_MODPAR_NAME = "hgn2_11" then bResetMullions = 1

		if bVentilationProfile & (iVentilationProfileType = VENTPROFILE_OVER_GLAZING) then
			isVentilationProfileInSash = isVentilationProfileInSash_11
			if	isVentilationProfileInSash & \
				(GLOB_MODPAR_NAME = "bVentilationProfile" | \
				 GLOB_MODPAR_NAME = "iVentilationProfileType" | \
				 GLOB_MODPAR_NAME = "VentilationProfileHeight") then bResetMullions = 1

			if GLOB_MODPAR_NAME = "isVentilationProfileInSash_11" then bResetMullions = 1
		endif
	endif

	if not(ghe) then bResetMullions = 1

	if not(bResetMullions) then return

	dim vergrid[][]
		vergrid[1][1] = -999999
		vergrid[1][2] = 0
		vergrid[1][3] = 0
	dim horgrid[][]
		horgrid[1][1] = -999999
		horgrid[1][2] = 0
		horgrid[1][3] = 0
	if bDivided | bSolidGlazed then
		dim vergrid2[][]
			vergrid2[1][1] = -999999
			vergrid2[1][2] = 0
			vergrid2[1][3] = 0
		dim horgrid2[][]
			horgrid2[1][1] = -999999
			horgrid2[1][2] = 0
			horgrid2[1][3] = 0
	endif

	if	gs_optype_m = SASH_FIXED |\
		gs_optype_m = SASH_FIXED_SCREW |\
		gs_optype_m = SASH_SIDE_HUNG |\
		gs_optype_m = SASH_SIDE_HUNG_M |\
		gs_optype_m = SASH_TILT_TURN |\
		gs_optype_m = SASH_TILT_TURN_M |\
		gs_optype_m = SASH_BOTTOM_HUNG |\
		gs_optype_m = SASH_TOP_HUNG |\
		gs_optype_m = SASH_HOR_PIVOT |\
		gs_optype_m = SASH_VER_PIVOT |\
		gs_optype_m = SASH_TILT_SLIDE |\
		gs_optype_m = SASH_LEFT_SLIDING |\
		gs_optype_m = SASH_RIGHT_SLIDING |\
		gs_optype_m = SASH_UP_SLIDING |\
		gs_optype_m = SASH_DOWN_SLIDING |\
		gs_optype_m = SASH_VER_PIVOT_M |\
		gs_optype_m = SASH_FIXED_SLIDE then

		pivotModify = (gs_optype_m = SASH_VER_PIVOT | gs_optype_m = SASH_HOR_PIVOT) * gs_rebate_width

		if gs_optype_m = SASH_FIXED then
			glassWidth	= sashWidth  - 2 * gs_rebate_width
			glassHeight	= sashHeight - 2 * gs_rebate_width - VentilationProfileHeight * isVentilationProfileInSash
			offset = 0
		else
			glassWidth	= sashWidth - 2 * (gs_sash_width + pivotModify)
			if bDivided | bSolidGlazed then
				glassHeight	= gs_horiz_div_height - gs_sash_width - dividerWidth
			else
				glassHeight	= sashHeight - 2 * gs_sash_width - VentilationProfileHeight * isVentilationProfileInSash
			endif
			offset = gs_sash_width
		endif

		for i=1 to max(0, vgn - 1)
			vergrid[i][1] = i * (glassWidth + gw) / vgn
			vergrid[i][2] = offset
			vergrid[i][3] = glassHeight + offset
		next i
		for i=1 to max(0, hgn - 1)
			horgrid[i][1] = i * (glassHeight + gw) / hgn
			horgrid[i][2] = offset
			horgrid[i][3] = glassWidth + offset
		next i

		if bDivided | bSolidGlazed then
			for i=1 to max(0, vgn2 - 1)
				vergrid2[i][1] = i * (glassWidth + gw) / vgn2
				vergrid2[i][2] = gs_horiz_div_height - gs_sash_width + offset
				vergrid2[i][3] = sashHeight - 2*gs_sash_width + offset - 2 * pivotModify - VentilationProfileHeight * isVentilationProfileInSash
			next i
			for i=1 to max(0, hgn2 - 1)
				horgrid2[i][1] = gs_horiz_div_height - gs_sash_width + i * (sashHeight - gs_sash_width - 2*pivotModify - gs_horiz_div_height + gw - VentilationProfileHeight * isVentilationProfileInSash) / hgn2
				horgrid2[i][2] = offset
				horgrid2[i][3] = glassWidth + offset
			next i
		endif
	endif

	if	gs_optype_m = SASH_DOUBLE_SIDE_HUNG |\
		gs_optype_m = SASH_DOUBLE_TILT_TURN |\
		gs_optype_m = SASH_DOUBLE_TILT_TURN_M |\
		gs_optype_m = SASH_SLIDING_HOR |\
		gs_optype_m = SASH_SLIDING_HOR_M |\
		gs_optype_m = SASH_DOUBLE_SLIDING_HOR |\
		gs_optype_m = SASH_DOUBLE_SLIDING_HOR_M |\
		gs_optype_m = SASH_SLIDING_VER |\
		gs_optype_m = SASH_DOUBLE_SLIDING_VER then

		slidingModify = (gs_optype_m = SASH_SLIDING_HOR |\
						 gs_optype_m = SASH_SLIDING_HOR_M |\
						 gs_optype_m = SASH_DOUBLE_SLIDING_HOR |\
						 gs_optype_m = SASH_DOUBLE_SLIDING_HOR_M |\
						 gs_optype_m = SASH_SLIDING_VER |\
						 gs_optype_m = SASH_DOUBLE_SLIDING_VER) * gs_rebate_width

		if	gs_optype_m = SASH_DOUBLE_SIDE_HUNG |\
			gs_optype_m = SASH_DOUBLE_TILT_TURN |\
			gs_optype_m = SASH_DOUBLE_TILT_TURN_M then
			glassWidth	= sashWidth/2 - 2 * gs_sash_width
		else
			if	gs_optype_m = SASH_SLIDING_VER |\
				gs_optype_m = SASH_DOUBLE_SLIDING_VER then
				glassWidth	= sashWidth - 2 * (gs_sash_width + slidingModify)
			else
				glassWidth	= sashWidth/2 - slidingModify - 1.5 * gs_sash_width
			endif
		endif
		if	gs_optype_m = SASH_SLIDING_VER |\
			gs_optype_m = SASH_DOUBLE_SLIDING_VER then
			glassHeight	= sashHeight/2 - slidingModify - 1.5 * gs_sash_width - VentilationProfileHeight * isVentilationProfileInSash
		else
			if bDivided | bSolidGlazed then
				glassHeight	= gs_horiz_div_height - 2 * gs_sash_width
			else
				glassHeight	= sashHeight - 2 * (gs_sash_width + slidingModify) - VentilationProfileHeight * isVentilationProfileInSash
			endif
		endif
		offset = gs_sash_width

		if	gs_optype_m = SASH_SLIDING_VER |\
			gs_optype_m = SASH_DOUBLE_SLIDING_VER then

			for i=1 to max(0, vgn - 1)
				vergrid[i][1] = i * (glassWidth + gw) / vgn
				vergrid[i][2] = offset
				vergrid[i][3] = glassHeight + offset
			next i
			for i=1 to max(0, vgn2 - 1)
				vergrid[i + max(0, vgn - 1)][1] = i * (glassWidth + gw) / vgn2
				vergrid[i + max(0, vgn - 1)][2] = offset
				vergrid[i + max(0, vgn - 1)][3] = glassHeight + offset
			next i
			for i=1 to max(0, hgn - 1)
				horgrid[i][1] = i * (glassHeight + gw) / hgn
				horgrid[i][2] = offset
				horgrid[i][3] = glassWidth + offset
			next i
			for i=1 to max(0, hgn2 - 1)
				horgrid[i + max(0, hgn - 1)][1] = i * (glassHeight + gw) / hgn2
				horgrid[i + max(0, hgn - 1)][2] = offset
				horgrid[i + max(0, hgn - 1)][3] = glassWidth + offset
			next i
		else
			if b2SashWithIndependentVentilation	then
				for i=1 to max(0, vgn - 1)
					if bResetFirstSashMullions then
						vergrid[i][1] = i * (glassWidth + gw) / vgn
						vergrid[i][2] = offset
						vergrid[i][3] = glassHeight + offset
					else
						vergrid[i][1] = vergrid_01[i][1] 
						vergrid[i][2] = vergrid_01[i][2] 
						vergrid[i][3] = vergrid_01[i][3]
					endif
					if bResetSecondSashMullions then
						vergrid[i + max(0, vgn - 1)][1] = i * (glassWidth + gw) / vgn
						vergrid[i + max(0, vgn - 1)][2] = offset
						vergrid[i + max(0, vgn - 1)][3] = glassHeight + offset
					else
						vergrid[i + max(0, vgn - 1)][1] = vergrid_01[i + max(0, vgn - 1)][1]
						vergrid[i + max(0, vgn - 1)][2] = vergrid_01[i + max(0, vgn - 1)][2]
						vergrid[i + max(0, vgn - 1)][3] = vergrid_01[i + max(0, vgn - 1)][3]
					endif
				next i
				for i=1 to max(0, hgn - 1)
					if bResetFirstSashMullions then
						horgrid[i][1] = i * (glassHeight + gw) / hgn
						horgrid[i][2] = offset
						horgrid[i][3] = glassWidth + offset
					else
						horgrid[i][1] = horgrid_01[i][1] 
						horgrid[i][2] = horgrid_01[i][2] 
						horgrid[i][3] = horgrid_01[i][3]
					endif
					if bResetSecondSashMullions then
						horgrid[i + max(0, hgn - 1)][1] = i * (glassHeight + gw) / hgn
						horgrid[i + max(0, hgn - 1)][2] = offset
						horgrid[i + max(0, hgn - 1)][3] = glassWidth + offset
					else
						horgrid[i + max(0, hgn - 1)][1] = horgrid_01[i + max(0, hgn - 1)][1]
						horgrid[i + max(0, hgn - 1)][2] = horgrid_01[i + max(0, hgn - 1)][2]
						horgrid[i + max(0, hgn - 1)][3] = horgrid_01[i + max(0, hgn - 1)][3]
					endif
				next i
			else
				for i=1 to max(0, vgn - 1)
					vergrid[i][1] = i * (glassWidth + gw) / vgn
					vergrid[i][2] = offset
					vergrid[i][3] = glassHeight + offset
	
					vergrid[i + max(0, vgn - 1)][1] = i * (glassWidth + gw) / vgn
					vergrid[i + max(0, vgn - 1)][2] = offset
					vergrid[i + max(0, vgn - 1)][3] = glassHeight + offset
				next i
				for i=1 to max(0, hgn - 1)
					horgrid[i][1] = i * (glassHeight + gw) / hgn
					horgrid[i][2] = offset
					horgrid[i][3] = glassWidth + offset

					horgrid[i + max(0, hgn - 1)][1] = i * (glassHeight + gw) / hgn
					horgrid[i + max(0, hgn - 1)][2] = offset
					horgrid[i + max(0, hgn - 1)][3] = glassWidth + offset
				next i
			endif

			if bDivided | bSolidGlazed then
				if b2SashWithIndependentVentilation	then
					glassHeight	= sashHeight - 2 * gs_sash_width + offset - 2 * slidingModify - VentilationProfileHeight * isVentilationProfileInFirstSash
					for i=1 to max(0, vgn2 - 1)
						vergrid2[i][1] = i * (glassWidth + gw) / vgn2
						vergrid2[i][2] = gs_horiz_div_height - gs_sash_width + offset
						vergrid2[i][3] = glassHeight
	
						vergrid2[i + max(0, vgn2 - 1)][1] = i * (glassWidth + gw) / vgn2
						vergrid2[i + max(0, vgn2 - 1)][2] = gs_horiz_div_height - gs_sash_width + offset
						vergrid2[i + max(0, vgn2 - 1)][3] = glassHeight
					next i
					glassHeight	= sashHeight - gs_sash_width - 2 * slidingModify - gs_horiz_div_height + gw - VentilationProfileHeight * isVentilationProfileInFirstSash
					for i=1 to max(0, hgn2 - 1)
						horgrid2[i][1] = gs_horiz_div_height - gs_sash_width + i * (glassHeight) / hgn2
						horgrid2[i][2] = offset
						horgrid2[i][3] = glassWidth + offset
	
						horgrid2[i + max(0, hgn2 - 1)][1] = gs_horiz_div_height - gs_sash_width + i * (glassHeight) / hgn2
						horgrid2[i + max(0, hgn2 - 1)][2] = offset
						horgrid2[i + max(0, hgn2 - 1)][3] = glassWidth + offset
					next i
				else
					glassHeight	= sashHeight - 2 * gs_sash_width + offset - 2 * slidingModify - VentilationProfileHeight * isVentilationProfileInSash
					for i=1 to max(0, vgn2 - 1)
						vergrid2[i][1] = i * (glassWidth + gw) / vgn2
						vergrid2[i][2] = gs_horiz_div_height - gs_sash_width + offset
						vergrid2[i][3] = glassHeight
	
						vergrid2[i + max(0, vgn2 - 1)][1] = i * (glassWidth + gw) / vgn2
						vergrid2[i + max(0, vgn2 - 1)][2] = gs_horiz_div_height - gs_sash_width + offset
						vergrid2[i + max(0, vgn2 - 1)][3] = glassHeight
					next i
					glassHeight	= sashHeight - gs_sash_width - 2 * slidingModify - gs_horiz_div_height + gw - VentilationProfileHeight * isVentilationProfileInSash
					for i=1 to max(0, hgn2 - 1)
						horgrid2[i][1] = gs_horiz_div_height - gs_sash_width + i * (glassHeight) / hgn2
						horgrid2[i][2] = offset
						horgrid2[i][3] = glassWidth + offset
	
						horgrid2[i + max(0, hgn2 - 1)][1] = gs_horiz_div_height - gs_sash_width + i * (glassHeight) / hgn2
						horgrid2[i + max(0, hgn2 - 1)][2] = offset
						horgrid2[i + max(0, hgn2 - 1)][3] = glassWidth + offset
					next i
				endif
			endif
		endif
	endif

	if CasementID = 1 then
		parameters vergrid_01 = vergrid
		parameters horgrid_01 = horgrid
		if bDivided | bSolidGlazed then
			parameters vergrid2_01 = vergrid2
			parameters horgrid2_01 = horgrid2
		endif
	endif
	if CasementID = 2 then
		parameters vergrid_02 = vergrid
		parameters horgrid_02 = horgrid
		if bDivided | bSolidGlazed then
			parameters vergrid2_02 = vergrid2
			parameters horgrid2_02 = horgrid2
		endif
	endif
	if CasementID = 3 then
		parameters vergrid_03 = vergrid
		parameters horgrid_03 = horgrid
		if bDivided | bSolidGlazed then
			parameters vergrid2_03 = vergrid2
			parameters horgrid2_03 = horgrid2
		endif
	endif
	if CasementID = 4 then
		parameters vergrid_04 = vergrid
		parameters horgrid_04 = horgrid
		if bDivided | bSolidGlazed then
			parameters vergrid2_04 = vergrid2
			parameters horgrid2_04 = horgrid2
		endif
	endif
	if CasementID = 5 then
		parameters vergrid_05 = vergrid
		parameters horgrid_05 = horgrid
		if bDivided | bSolidGlazed then
			parameters vergrid2_05 = vergrid2
			parameters horgrid2_05 = horgrid2
		endif
	endif
	if CasementID = 6 then
		parameters vergrid_06 = vergrid
		parameters horgrid_06 = horgrid
		if bDivided | bSolidGlazed then
			parameters vergrid2_06 = vergrid2
			parameters horgrid2_06 = horgrid2
		endif
	endif
	if CasementID = 7 then
		parameters vergrid_07 = vergrid
		parameters horgrid_07 = horgrid
		if bDivided | bSolidGlazed then
			parameters vergrid2_07 = vergrid2
			parameters horgrid2_07 = horgrid2
		endif
	endif
	if CasementID = 8 then
		parameters vergrid_08 = vergrid
		parameters horgrid_08 = horgrid
		if bDivided | bSolidGlazed then
			parameters vergrid2_08 = vergrid2
			parameters horgrid2_08 = horgrid2
		endif
	endif
	if CasementID = 9 then
		parameters vergrid_09 = vergrid
		parameters horgrid_09 = horgrid
		if bDivided | bSolidGlazed then
			parameters vergrid2_09 = vergrid2
			parameters horgrid2_09 = horgrid2
		endif
	endif
	if CasementID = 10 then
		parameters vergrid_10 = vergrid
		parameters horgrid_10 = horgrid
		if bDivided | bSolidGlazed then
			parameters vergrid2_10 = vergrid2
			parameters horgrid2_10 = horgrid2
		endif
	endif
	if CasementID = 11 then
		parameters vergrid_11 = vergrid
		parameters horgrid_11 = horgrid
		if bDivided | bSolidGlazed then
			parameters vergrid2_11 = vergrid2
			parameters horgrid2_11 = horgrid2
		endif
	endif
return


! =============================================================================
!
! =============================================================================

"GetSashNumber":
	iSashNum = (gs_optype_m = SASH_DOUBLE_SIDE_HUNG |\
				gs_optype_m = SASH_DOUBLE_TILT_TURN |\
				gs_optype_m = SASH_DOUBLE_TILT_TURN_M |\
				gs_optype_m = SASH_SLIDING_HOR |\
				gs_optype_m = SASH_SLIDING_HOR_M |\
				gs_optype_m = SASH_DOUBLE_SLIDING_HOR |\
				gs_optype_m = SASH_DOUBLE_SLIDING_HOR_M |\
				gs_optype_m = SASH_SLIDING_VER |\
				gs_optype_m = SASH_DOUBLE_SLIDING_VER) + 1
return


! =============================================================================
!
! =============================================================================

"ValuesSashParameters":
	if CasementID = 1 then

		bLockOptpyeParam = 0
		bEnableSecondCustPanel_01	= 0
		bEnableSlidingOpType_01		= 0
		bEnableSlidingOpType2MovableSash_01	= 0
		if iSashType = SASHTYPE_INDEPENDENT then
			dim iOpeningTypeEnabled[]
			gosub "IndependentOpeningTypeValues"
			bEnableSecondCustPanel_01 = bEnableSecondCustPanel
			bEnableSlidingOpType_01 = bEnableSlidingOpType
			bEnableSlidingOpType2MovableSash_01 = bEnableSlidingOpType2MovableSash
			dim OpeningTypeEnabled[]
			for i=1 to vardim1(iOpeningTypeEnabled)
				if iOpeningTypeEnabled[i] = 1 & iMullionStyle_01 = MULLION_VENT_PANEL then
					OpeningTypeEnabled[i] = stLouversinFrame
				else
					OpeningTypeEnabled[i] = stOpeningType[iOpeningTypeEnabled[i]]
				endif
			next i
			values  "gs_optype_01"	 OpeningTypeEnabled
			values "gs_optype_m_01"	iOpeningTypeEnabled
		endif
		if iSashType = SASHTYPE_DOUBLE_RIGHT then
			values "gs_optype_01"	stOpeningType[3]
			values "gs_optype_m_01"	SASH_SIDE_HUNG
			lock "gs_optype_01"
			hideparameter "gs_optype_01"
			if gs_sash_uniform then
				lock "vgn_01", "hgn_01"
				hideparameter "vgn_01", "hgn_01"
			endif
		endif
		if iSashType = SASHTYPE_DOUBLE_LEFT then
			if iWindowClass = WINCLASS_HISTORIC then
				values "gs_optype_01"	stOpeningType[3]
				values "gs_optype_m_01"	SASH_SIDE_HUNG
				bLockOptpyeParam = 1
			else
				values "gs_optype_01"	stOpeningType[3],
										stOpeningType[5],
										stOpeningType[6]

				values "gs_optype_m_01"	SASH_SIDE_HUNG,
										SASH_TILT_TURN,
										SASH_TILT_TURN_M
			endif
		endif

		if bLockOptpyeParam then
			lock	"gs_optype_01",
					"gs_optype_m_01"
		endif

		if GLOB_MODPAR_NAME = "gs_optype_01" then
			gs_optype_m_01 = SASH_FIXED
			for i=2 to vardim1(stOpeningType)
				if gs_optype_01 = stOpeningType[i] then gs_optype_m_01 = i
			next i

			parameters gs_optype_m_01 = gs_optype_m_01
		else
			gs_optype_01 = stOpeningType[gs_optype_m_01]
			parameters gs_optype_01 = gs_optype_01
		endif

		bDisableDividedSash	= (	gs_optype_m_01 = SASH_FIXED |\
								gs_optype_m_01 = SASH_SLIDING_VER |\
								gs_optype_m_01 = SASH_DOUBLE_SLIDING_VER)

		bDisableHVGrid2Sash = (gs_optype_m_01 <> SASH_FIXED)

		iMullionStyle = iMullionStyle_01
		iMullionStyleOriginal = iMullionStyleOriginal_01
		gosub "MullionStyleValues"
		bEnabledMullionDividedPanel_01 = bEnabledMullionDividedPanel

		dim MullionStyleEnabled[]
		for i=1 to vardim1(iMullionStyleEnabled)
			MullionStyleEnabled[i] = stSashType[iMullionStyleEnabled[i]]
		next i
		values  "MullionStyle_01"	 MullionStyleEnabled
		values "iMullionStyle_01"	iMullionStyleEnabled

		if iMullionStyle <> iMullionStyle_01 then
			iMullionStyle_01 = iMullionStyle
			parameters iMullionStyle_01 = iMullionStyle_01
		endif

		if bLockMullion then
			lock "MullionStyle_01", "iMullionStyle_01"
			hideparameter "MullionStyle_01", "iMullionStyle_01"
		else
			if GLOB_MODPAR_NAME = "MullionStyle_01" then
				iMullionStyle_01 = MULLION_NONE
				for i=2 to vardim1(stSashType)
					if MullionStyle_01 = stSashType[i] then iMullionStyle_01 = i
				next i
				parameters iMullionStyle_01 = iMullionStyle_01
			else
				MullionStyle_01 = stSashType[iMullionStyle_01]
				parameters MullionStyle_01 = MullionStyle_01
			endif
		endif

		if sashHeight > 2*gs_sash_width + dividerWidth then
			values "gs_horiz_div_height_01" range(gs_sash_width + dividerWidth, sashHeight - gs_sash_width - 2 * (gs_optype_m_01 = SASH_HOR_PIVOT | gs_optype_m_01 = SASH_VER_PIVOT | gs_optype_m_01 = SASH_VER_PIVOT_M) * gs_rebate_width)
		endif

		values "vgn_01"		range[1,]
		values "hgn_01"		range[1,]
		values "vgn2_01"	range[1,]
		values "hgn2_01"	range[1,]

		if gs_sash_uniform then
			iMullionStyle = iMullionStyle_00
		else
			iMullionStyle = iMullionStyle_01
		endif
		if	iMullionStyle = MULLION_NONE			|\
			iMullionStyle = MULLION_CUSTOM		|\
			iMullionStyle = MULLION_SOLID_PANEL	|\
			iMullionStyle = MULLION_VENT_PANEL	|\
			(iSashShape = SASH_SHAPE_HALFROUND		&\
			 (iMullionStyle = MULLION_SUNBURST_1	|\
			  iMullionStyle = MULLION_SUNBURST_2	|\
			  iMullionStyle = MULLION_SUNBURST_3	|\
			  iMullionStyle = MULLION_SUNBURST_4	|\
			  iMullionStyle = MULLION_SUNBURST_5	))	then

			lock "vgn_01", "hgn_01", "vgn2_01", "hgn2_01"
			hideparameter "vgn_01", "hgn_01", "vgn2_01", "hgn2_01"
		endif
		if iMullionStyle <> MULLION_DIVIDED & iMullionStyle <> MULLION_SOLID_GLAZED then
			if gs_sash_uniform | not(gs_optype_m_01 = SASH_SLIDING_VER | gs_optype_m_01 = SASH_DOUBLE_SLIDING_VER) then
				lock "vgn2_01", "hgn2_01"
				hideparameter "vgn2_01", "hgn2_01"
			endif

			if bEnabledMullionDividedPanel_01 then
				lock "gs_horiz_div_height_01"
				hideparameter "gs_horiz_div_height_01"
			endif
		endif

		if iMullionStyle = MULLION_CUSTOM & not(bLockMullion) then
			values "gs_cust_panel_01"  gs_pt
			if bEnableSecondCustPanel_01 then
				if	gs_optype_m_01 = SASH_DOUBLE_SIDE_HUNG		|\
					gs_optype_m_01 = SASH_DOUBLE_TILT_TURN		|\
					gs_optype_m_01 = SASH_DOUBLE_TILT_TURN_M	|\
					gs_optype_m_01 = SASH_SLIDING_VER			|\
					gs_optype_m_01 = SASH_DOUBLE_SLIDING_VER	|\
					gs_optype_m_01 = SASH_SLIDING_HOR			|\
					gs_optype_m_01 = SASH_SLIDING_HOR_M			|\
					gs_optype_m_01 = SASH_DOUBLE_SLIDING_HOR	|\
					gs_optype_m_01 = SASH_DOUBLE_SLIDING_HOR_M	then
					values "gs_cust_panel2_01"  gs_pt
				else
					lock "gs_cust_panel2_01"
					hideparameter "gs_cust_panel2_01"
				endif
			endif
		else
			lock "gs_cust_panel_01"
			hideparameter "gs_cust_panel_01"

			if bEnableSecondCustPanel_01 then
				lock "gs_cust_panel2_01"
				hideparameter "gs_cust_panel2_01"
			endif
		endif

		if GLOB_MODPAR_NAME = "openingAngle_01" then
			parameters openingAngle2_01 = 0
			openingAngle2_01 = 0
		endif
		if GLOB_MODPAR_NAME = "openingAngle2_01" then
			parameters openingAngle_01 = 0
			openingAngle_01 = 0
		endif
		if	gs_optype_m_01 = SASH_FIXED					|\
			gs_optype_m_01 = SASH_FIXED_SCREW			|\
			gs_optype_m_01 = SASH_SLIDING_VER			|\
			gs_optype_m_01 = SASH_DOUBLE_SLIDING_VER	|\
			gs_optype_m_01 = SASH_SLIDING_HOR			|\
			gs_optype_m_01 = SASH_SLIDING_HOR_M			|\
			gs_optype_m_01 = SASH_DOUBLE_SLIDING_HOR	|\
			gs_optype_m_01 = SASH_DOUBLE_SLIDING_HOR_M	then
			lock "openingAngle_01", "openingAngle2_01"
			hideparameter "openingAngle_01", "openingAngle2_01"
		endif
		if bEnableSlidingOpType_01 then
			if	(gs_optype_m_01 <> SASH_SLIDING_VER)			&\
				(gs_optype_m_01 <> SASH_DOUBLE_SLIDING_VER)		&\
				(gs_optype_m_01 <> SASH_SLIDING_HOR)			&\
				(gs_optype_m_01 <> SASH_SLIDING_HOR_M)			&\
				(gs_optype_m_01 <> SASH_DOUBLE_SLIDING_HOR)		&\
				(gs_optype_m_01 <> SASH_DOUBLE_SLIDING_HOR_M)	then
				lock "openingLength_01"
				hideparameter "openingLength_01"
			endif
		endif
		if bEnableSlidingOpType2MovableSash_01 then
			if	(gs_optype_m_01 <> SASH_DOUBLE_SLIDING_VER)		&\
				(gs_optype_m_01 <> SASH_DOUBLE_SLIDING_HOR)		&\
				(gs_optype_m_01 <> SASH_DOUBLE_SLIDING_HOR_M)	then
				lock "openingLength2_01"
				hideparameter "openingLength2_01"
			endif
		endif
		if	gs_optype_m_01 <> SASH_TILT_TURN &\
			gs_optype_m_01 <> SASH_TILT_TURN_M &\
			gs_optype_m_01 <> SASH_DOUBLE_TILT_TURN &\
			gs_optype_m_01 <> SASH_DOUBLE_TILT_TURN_M then
			openingAngle2_01 = 0
			parameters openingAngle2_01 = openingAngle2_01

			lock "openingAngle2_01"
			hideparameter "openingAngle2_01"
		else
			if abs(openingAngle2_01) < EPS then hideparameter "openingAngle2_01"
			if abs(openingAngle_01) < EPS & abs(openingAngle2_01) > EPS then hideparameter "openingAngle_01"
		endif

		values "openingAngle_01"	range[0,90]
		values "openingAngle2_01"	range[0,90]
		if	gs_optype_m_01 = SASH_SLIDING_VER			|\
			gs_optype_m_01 = SASH_DOUBLE_SLIDING_VER	then
			values "openingLength_01"	range[0,sashHeight/2 - gs_sash_width]
			values "openingLength2_01"	range[0,sashHeight/2 - gs_sash_width]
		endif
		if	gs_optype_m_01 = SASH_SLIDING_HOR			|\
			gs_optype_m_01 = SASH_SLIDING_HOR_M			|\
			gs_optype_m_01 = SASH_DOUBLE_SLIDING_HOR	|\
			gs_optype_m_01 = SASH_DOUBLE_SLIDING_HOR_M	then
			values "openingLength_01"	range[0,sashWidth/2 - gs_sash_width]
			values "openingLength2_01"	range[0,sashWidth/2 - gs_sash_width]
		endif
	endif

	if CasementID = 2 then

		bLockOptpyeParam = 0
		bEnableSecondCustPanel_02	= 0
		bEnableSlidingOpType_02		= 0
		bEnableSlidingOpType2MovableSash_02	= 0
		if iSashType = SASHTYPE_INDEPENDENT then
			dim iOpeningTypeEnabled[]
			gosub "IndependentOpeningTypeValues"
			bEnableSecondCustPanel_02 = bEnableSecondCustPanel
			bEnableSlidingOpType_02 = bEnableSlidingOpType
			bEnableSlidingOpType2MovableSash_02 = bEnableSlidingOpType2MovableSash
			dim OpeningTypeEnabled[]
			for i=1 to vardim1(iOpeningTypeEnabled)
				if iOpeningTypeEnabled[i] = 1 & iMullionStyle_02 = MULLION_VENT_PANEL then
					OpeningTypeEnabled[i] = stLouversinFrame
				else
					OpeningTypeEnabled[i] = stOpeningType[iOpeningTypeEnabled[i]]
				endif
			next i
			values  "gs_optype_02"	 OpeningTypeEnabled
			values "gs_optype_m_02"	iOpeningTypeEnabled
		endif
		if iSashType = SASHTYPE_DOUBLE_RIGHT then
			values "gs_optype_02"	stOpeningType[3]
			values "gs_optype_m_02"	SASH_SIDE_HUNG
			lock "gs_optype_02"
			hideparameter "gs_optype_02"
			if gs_sash_uniform then
				lock "vgn_02", "hgn_02"
				hideparameter "vgn_02", "hgn_02"
			endif
		endif
		if iSashType = SASHTYPE_DOUBLE_LEFT then
			if iWindowClass = WINCLASS_HISTORIC then
				values "gs_optype_02"	stOpeningType[3]
				values "gs_optype_m_02"	SASH_SIDE_HUNG
				bLockOptpyeParam = 1
			else
				values "gs_optype_02"	stOpeningType[3],
										stOpeningType[5],
										stOpeningType[6]

				values "gs_optype_m_02"	SASH_SIDE_HUNG,
										SASH_TILT_TURN,
										SASH_TILT_TURN_M
			endif
		endif

		if bLockOptpyeParam then
			lock	"gs_optype_02",
					"gs_optype_m_02"
		endif

		if GLOB_MODPAR_NAME = "gs_optype_02" then
			gs_optype_m_02 = SASH_FIXED
			for i=2 to vardim1(stOpeningType)
				if gs_optype_02 = stOpeningType[i] then gs_optype_m_02 = i
			next i
			parameters gs_optype_m_02 = gs_optype_m_02
		else
			gs_optype_02 = stOpeningType[gs_optype_m_02]
			parameters gs_optype_02 = gs_optype_02
		endif

		bDisableDividedSash	= (	gs_optype_m_02 = SASH_FIXED |\
								gs_optype_m_02 = SASH_SLIDING_VER |\
								gs_optype_m_02 = SASH_DOUBLE_SLIDING_VER)

		bDisableHVGrid2Sash = (gs_optype_m_02 <> SASH_FIXED)

		iMullionStyle = iMullionStyle_02
		iMullionStyleOriginal = iMullionStyleOriginal_02
		gosub "MullionStyleValues"
		bEnabledMullionDividedPanel_02 = bEnabledMullionDividedPanel

		dim MullionStyleEnabled[]
		for i=1 to vardim1(iMullionStyleEnabled)
			MullionStyleEnabled[i] = stSashType[iMullionStyleEnabled[i]]
		next i
		values  "MullionStyle_02"	 MullionStyleEnabled
		values "iMullionStyle_02"	iMullionStyleEnabled

		if iMullionStyle <> iMullionStyle_02 then
			iMullionStyle_02 = iMullionStyle
			parameters iMullionStyle_02 = iMullionStyle_02
		endif

		if bLockMullion then
			lock "MullionStyle_02", "iMullionStyle_02"
			hideparameter "MullionStyle_02", "iMullionStyle_02"
		else
			if GLOB_MODPAR_NAME = "MullionStyle_02" then
				iMullionStyle_02 = MULLION_NONE
				for i=2 to vardim1(stSashType)
					if MullionStyle_02 = stSashType[i] then iMullionStyle_02 = i
				next i
				parameters iMullionStyle_02 = iMullionStyle_02
			else
				MullionStyle_02 = stSashType[iMullionStyle_02]
				parameters MullionStyle_02 = MullionStyle_02
			endif
		endif

		if iSashShape <> SASH_SHAPE_HALFROUND & iSashShape <> SASH_SHAPE_ARCHED & sashHeight > 2*gs_sash_width + dividerWidth then
			values "gs_horiz_div_height_02" range(gs_sash_width + dividerWidth, sashHeight - gs_sash_width - 2 * (gs_optype_m_02 = SASH_HOR_PIVOT | gs_optype_m_02 = SASH_VER_PIVOT | gs_optype_m_02 = SASH_VER_PIVOT_M) * gs_rebate_width)
		endif

		values "vgn_02"		range[1,]
		values "hgn_02"		range[1,]
		values "vgn2_02"	range[1,]
		values "hgn2_02"	range[1,]

		if gs_sash_uniform then
			iMullionStyle = iMullionStyle_00
		else
			iMullionStyle = iMullionStyle_02
		endif
		if	iMullionStyle = MULLION_NONE			|\
			iMullionStyle = MULLION_CUSTOM		|\
			iMullionStyle = MULLION_SOLID_PANEL	|\
			iMullionStyle = MULLION_VENT_PANEL	|\
			(iSashShape = SASH_SHAPE_HALFROUND		&\
			 (iMullionStyle = MULLION_SUNBURST_1	|\
			  iMullionStyle = MULLION_SUNBURST_2	|\
			  iMullionStyle = MULLION_SUNBURST_3	|\
			  iMullionStyle = MULLION_SUNBURST_4	|\
			  iMullionStyle = MULLION_SUNBURST_5	))	then

			lock "vgn_02", "hgn_02", "vgn2_02", "hgn2_02"
			hideparameter "vgn_02", "hgn_02", "vgn2_02", "hgn2_02"
		endif
		if iMullionStyle <> MULLION_DIVIDED & iMullionStyle <> MULLION_SOLID_GLAZED then
			if gs_sash_uniform | not(gs_optype_m_02 = SASH_SLIDING_VER | gs_optype_m_02 = SASH_DOUBLE_SLIDING_VER) then
				lock "vgn2_02", "hgn2_02"
				hideparameter "vgn2_02", "hgn2_02"
			endif

			if bEnabledMullionDividedPanel_02 then
				lock "gs_horiz_div_height_02"
				hideparameter "gs_horiz_div_height_02"
			endif
		endif

		if iMullionStyle = MULLION_CUSTOM & not(bLockMullion) then
			values "gs_cust_panel_02"  gs_pt
			if bEnableSecondCustPanel_02 then
				if	gs_optype_m_02 = SASH_DOUBLE_SIDE_HUNG		|\
					gs_optype_m_02 = SASH_DOUBLE_TILT_TURN		|\
					gs_optype_m_02 = SASH_DOUBLE_TILT_TURN_M	|\
					gs_optype_m_02 = SASH_SLIDING_VER			|\
					gs_optype_m_02 = SASH_DOUBLE_SLIDING_VER	|\
					gs_optype_m_02 = SASH_SLIDING_HOR			|\
					gs_optype_m_02 = SASH_SLIDING_HOR_M			|\
					gs_optype_m_02 = SASH_DOUBLE_SLIDING_HOR	|\
					gs_optype_m_02 = SASH_DOUBLE_SLIDING_HOR_M	then
					values "gs_cust_panel2_02"  gs_pt
				else
					lock "gs_cust_panel2_02"
					hideparameter "gs_cust_panel2_02"
				endif
			endif
		else
			lock "gs_cust_panel_02"
			hideparameter "gs_cust_panel_02"

			if bEnableSecondCustPanel_02 then
				lock "gs_cust_panel2_02"
				hideparameter "gs_cust_panel2_02"
			endif
		endif

		if GLOB_MODPAR_NAME = "openingAngle_02" then
			parameters openingAngle2_02 = 0
			openingAngle2_02 = 0
		endif
		if GLOB_MODPAR_NAME = "openingAngle2_02" then
			parameters openingAngle_02 = 0
			openingAngle_02 = 0
		endif
		if	gs_optype_m_02 = SASH_FIXED					|\
			gs_optype_m_02 = SASH_FIXED_SCREW			|\
			gs_optype_m_02 = SASH_SLIDING_VER			|\
			gs_optype_m_02 = SASH_DOUBLE_SLIDING_VER	|\
			gs_optype_m_02 = SASH_SLIDING_HOR			|\
			gs_optype_m_02 = SASH_SLIDING_HOR_M			|\
			gs_optype_m_02 = SASH_DOUBLE_SLIDING_HOR	|\
			gs_optype_m_02 = SASH_DOUBLE_SLIDING_HOR_M	then
			lock "openingAngle_02", "openingAngle2_02"
			hideparameter "openingAngle_02", "openingAngle2_02"
		endif
		if bEnableSlidingOpType_02 then
			if	(gs_optype_m_02 <> SASH_SLIDING_VER)			&\
				(gs_optype_m_02 <> SASH_DOUBLE_SLIDING_VER)		&\
				(gs_optype_m_02 <> SASH_SLIDING_HOR)			&\
				(gs_optype_m_02 <> SASH_SLIDING_HOR_M)			&\
				(gs_optype_m_02 <> SASH_DOUBLE_SLIDING_HOR)		&\
				(gs_optype_m_02 <> SASH_DOUBLE_SLIDING_HOR_M)	then
				lock "openingLength_02"
				hideparameter "openingLength_02"
			endif
		endif
		if bEnableSlidingOpType2MovableSash_02 then
			if	(gs_optype_m_02 <> SASH_DOUBLE_SLIDING_VER)		&\
				(gs_optype_m_02 <> SASH_DOUBLE_SLIDING_HOR)		&\
				(gs_optype_m_02 <> SASH_DOUBLE_SLIDING_HOR_M)	then
				lock "openingLength2_02"
				hideparameter "openingLength2_02"
			endif
		endif
		if	gs_optype_m_02 <> SASH_TILT_TURN &\
			gs_optype_m_02 <> SASH_TILT_TURN_M &\
			gs_optype_m_02 <> SASH_DOUBLE_TILT_TURN &\
			gs_optype_m_02 <> SASH_DOUBLE_TILT_TURN_M then
			openingAngle2_02 = 0
			parameters openingAngle2_02 = openingAngle2_02

			lock "openingAngle2_02"
			hideparameter "openingAngle2_02"
		else
			if abs(openingAngle2_02) < EPS then hideparameter "openingAngle2_02"
			if abs(openingAngle_02) < EPS & abs(openingAngle2_02) > EPS then hideparameter "openingAngle_02"
		endif

		values "openingAngle_02"	range[0,90]
		values "openingAngle2_02"	range[0,90]
		if	gs_optype_m_02 = SASH_SLIDING_VER			|\
			gs_optype_m_02 = SASH_DOUBLE_SLIDING_VER	then
			values "openingLength_02"	range[0,sashHeight/2 - gs_sash_width]
			values "openingLength2_02"	range[0,sashHeight/2 - gs_sash_width]
		endif
		if	gs_optype_m_02 = SASH_SLIDING_HOR			|\
			gs_optype_m_02 = SASH_SLIDING_HOR_M			|\
			gs_optype_m_02 = SASH_DOUBLE_SLIDING_HOR	|\
			gs_optype_m_02 = SASH_DOUBLE_SLIDING_HOR_M	then
			values "openingLength_02"	range[0,sashWidth/2 - gs_sash_width]
			values "openingLength2_02"	range[0,sashWidth/2 - gs_sash_width]
		endif
	endif

	if CasementID = 3 then

		bLockOptpyeParam = 0
		bEnableSecondCustPanel_03	= 0
		bEnableSlidingOpType_03		= 0
		bEnableSlidingOpType2MovableSash_03	= 0
		if iSashType = SASHTYPE_INDEPENDENT then
			dim iOpeningTypeEnabled[]
			gosub "IndependentOpeningTypeValues"
			bEnableSecondCustPanel_03 = bEnableSecondCustPanel
			bEnableSlidingOpType_03 = bEnableSlidingOpType
			bEnableSlidingOpType2MovableSash_03 = bEnableSlidingOpType2MovableSash
			dim OpeningTypeEnabled[]
			for i=1 to vardim1(iOpeningTypeEnabled)
				if iOpeningTypeEnabled[i] = 1 & iMullionStyle_03 = MULLION_VENT_PANEL then
					OpeningTypeEnabled[i] = stLouversinFrame
				else
					OpeningTypeEnabled[i] = stOpeningType[iOpeningTypeEnabled[i]]
				endif
			next i
			values  "gs_optype_03"	 OpeningTypeEnabled
			values "gs_optype_m_03"	iOpeningTypeEnabled
		endif
		if iSashType = SASHTYPE_DOUBLE_RIGHT then
			values "gs_optype_03"	stOpeningType[3]
			values "gs_optype_m_03"	SASH_SIDE_HUNG
			lock "gs_optype_03"
			hideparameter "gs_optype_03"
			if gs_sash_uniform then
				lock "vgn_03", "hgn_03"
				hideparameter "vgn_03", "hgn_03"
			endif
		endif
		if iSashType = SASHTYPE_DOUBLE_LEFT then
			if iWindowClass = WINCLASS_HISTORIC then
				values "gs_optype_03"	stOpeningType[3]
				values "gs_optype_m_03"	SASH_SIDE_HUNG
				bLockOptpyeParam = 1
			else
				values "gs_optype_03"	stOpeningType[3],
										stOpeningType[5],
										stOpeningType[6]

				values "gs_optype_m_03"	SASH_SIDE_HUNG,
										SASH_TILT_TURN,
										SASH_TILT_TURN_M
			endif
		endif

		if bLockOptpyeParam then
			lock	"gs_optype_03",
					"gs_optype_m_03"
		endif

		if GLOB_MODPAR_NAME = "gs_optype_03" then
			gs_optype_m_03 = SASH_FIXED
			for i=2 to vardim1(stOpeningType)
				if gs_optype_03 = stOpeningType[i] then gs_optype_m_03 = i
			next i
			parameters gs_optype_m_03 = gs_optype_m_03
		else
			gs_optype_03 = stOpeningType[gs_optype_m_03]
			parameters gs_optype_03 = gs_optype_03
		endif

		bDisableDividedSash	= (	gs_optype_m_03 = SASH_FIXED |\
								gs_optype_m_03 = SASH_SLIDING_VER |\
								gs_optype_m_03 = SASH_DOUBLE_SLIDING_VER)

		bDisableHVGrid2Sash = (gs_optype_m_03 <> SASH_FIXED)

		iMullionStyle = iMullionStyle_03
		iMullionStyleOriginal = iMullionStyleOriginal_03
		gosub "MullionStyleValues"
		bEnabledMullionDividedPanel_03 = bEnabledMullionDividedPanel

		dim MullionStyleEnabled[]
		for i=1 to vardim1(iMullionStyleEnabled)
			MullionStyleEnabled[i] = stSashType[iMullionStyleEnabled[i]]
		next i
		values  "MullionStyle_03"	 MullionStyleEnabled
		values "iMullionStyle_03"	iMullionStyleEnabled

		if iMullionStyle <> iMullionStyle_03 then
			iMullionStyle_03 = iMullionStyle
			parameters iMullionStyle_03 = iMullionStyle_03
		endif

		if bLockMullion then
			lock "MullionStyle_03", "iMullionStyle_03"
			hideparameter "MullionStyle_03", "iMullionStyle_03"
		else
			if GLOB_MODPAR_NAME = "MullionStyle_03" then
				iMullionStyle_03 = MULLION_NONE
				for i=2 to vardim1(stSashType)
					if MullionStyle_03 = stSashType[i] then iMullionStyle_03 = i
				next i

				parameters iMullionStyle_03 = iMullionStyle_03
			else
				MullionStyle_03 = stSashType[iMullionStyle_03]
				parameters MullionStyle_03 = MullionStyle_03
			endif
		endif

		if sashHeight > 2*gs_sash_width + dividerWidth then
			values "gs_horiz_div_height_03" range(gs_sash_width + dividerWidth, sashHeight - gs_sash_width - 2 * (gs_optype_m_03 = SASH_HOR_PIVOT | gs_optype_m_03 = SASH_VER_PIVOT | gs_optype_m_03 = SASH_VER_PIVOT_M) * gs_rebate_width)
		endif

		values "vgn_03"		range[1,]
		values "hgn_03"		range[1,]
		values "vgn2_03"	range[1,]
		values "hgn2_03"	range[1,]

		if gs_sash_uniform then
			iMullionStyle = iMullionStyle_00
		else
			iMullionStyle = iMullionStyle_03
		endif
		if	iMullionStyle = MULLION_NONE			|\
			iMullionStyle = MULLION_CUSTOM		|\
			iMullionStyle = MULLION_SOLID_PANEL	|\
			iMullionStyle = MULLION_VENT_PANEL	|\
			(iSashShape = SASH_SHAPE_HALFROUND		&\
			 (iMullionStyle = MULLION_SUNBURST_1	|\
			  iMullionStyle = MULLION_SUNBURST_2	|\
			  iMullionStyle = MULLION_SUNBURST_3	|\
			  iMullionStyle = MULLION_SUNBURST_4	|\
			  iMullionStyle = MULLION_SUNBURST_5	))	then

			lock "vgn_03", "hgn_03", "vgn2_03", "hgn2_03"
			hideparameter "vgn_03", "hgn_03", "vgn2_03", "hgn2_03"
		endif
		if iMullionStyle <> MULLION_DIVIDED & iMullionStyle <> MULLION_SOLID_GLAZED then
			if gs_sash_uniform | not(gs_optype_m_03 = SASH_SLIDING_VER | gs_optype_m_03 = SASH_DOUBLE_SLIDING_VER) then
				lock "vgn2_03", "hgn2_03"
				hideparameter "vgn2_03", "hgn2_03"
			endif

			if bEnabledMullionDividedPanel_03 then
				lock "gs_horiz_div_height_03"
				hideparameter "gs_horiz_div_height_03"
			endif
		endif

		if iMullionStyle = MULLION_CUSTOM & not(bLockMullion) then
			values "gs_cust_panel_03"  gs_pt
			if bEnableSecondCustPanel_03 then
				if	gs_optype_m_03 = SASH_DOUBLE_SIDE_HUNG		|\
					gs_optype_m_03 = SASH_DOUBLE_TILT_TURN		|\
					gs_optype_m_03 = SASH_DOUBLE_TILT_TURN_M	|\
					gs_optype_m_03 = SASH_SLIDING_VER			|\
					gs_optype_m_03 = SASH_DOUBLE_SLIDING_VER	|\
					gs_optype_m_03 = SASH_SLIDING_HOR			|\
					gs_optype_m_03 = SASH_SLIDING_HOR_M			|\
					gs_optype_m_03 = SASH_DOUBLE_SLIDING_HOR	|\
					gs_optype_m_03 = SASH_DOUBLE_SLIDING_HOR_M	then
					values "gs_cust_panel2_03"  gs_pt
				else
					lock "gs_cust_panel2_03"
					hideparameter "gs_cust_panel2_03"
				endif
			endif
		else
			lock "gs_cust_panel_03"
			hideparameter "gs_cust_panel_03"

			if bEnableSecondCustPanel_03 then
				lock "gs_cust_panel2_03"
				hideparameter "gs_cust_panel2_03"
			endif
		endif

		if GLOB_MODPAR_NAME = "openingAngle_03" then
			parameters openingAngle2_03 = 0
			openingAngle2_03 = 0
		endif
		if GLOB_MODPAR_NAME = "openingAngle2_03" then
			parameters openingAngle_03 = 0
			openingAngle_03 = 0
		endif
		if	gs_optype_m_03 = SASH_FIXED					|\
			gs_optype_m_03 = SASH_FIXED_SCREW			|\
			gs_optype_m_03 = SASH_SLIDING_VER			|\
			gs_optype_m_03 = SASH_DOUBLE_SLIDING_VER	|\
			gs_optype_m_03 = SASH_SLIDING_HOR			|\
			gs_optype_m_03 = SASH_SLIDING_HOR_M			|\
			gs_optype_m_03 = SASH_DOUBLE_SLIDING_HOR	|\
			gs_optype_m_03 = SASH_DOUBLE_SLIDING_HOR_M	then
			lock "openingAngle_03", "openingAngle2_03"
			hideparameter "openingAngle_03", "openingAngle2_03"
		endif
		if bEnableSlidingOpType_03 then
			if	(gs_optype_m_03 <> SASH_SLIDING_VER)			&\
				(gs_optype_m_03 <> SASH_DOUBLE_SLIDING_VER)		&\
				(gs_optype_m_03 <> SASH_SLIDING_HOR)			&\
				(gs_optype_m_03 <> SASH_SLIDING_HOR_M)			&\
				(gs_optype_m_03 <> SASH_DOUBLE_SLIDING_HOR)		&\
				(gs_optype_m_03 <> SASH_DOUBLE_SLIDING_HOR_M)	then
				lock "openingLength_03"
				hideparameter "openingLength_03"
			endif
		endif
		if bEnableSlidingOpType2MovableSash_03 then
			if	(gs_optype_m_03 <> SASH_DOUBLE_SLIDING_VER)		&\
				(gs_optype_m_03 <> SASH_DOUBLE_SLIDING_HOR)		&\
				(gs_optype_m_03 <> SASH_DOUBLE_SLIDING_HOR_M)	then
				lock "openingLength2_03"
				hideparameter "openingLength2_03"
			endif
		endif
		if	gs_optype_m_03 <> SASH_TILT_TURN &\
			gs_optype_m_03 <> SASH_TILT_TURN_M &\
			gs_optype_m_03 <> SASH_DOUBLE_TILT_TURN &\
			gs_optype_m_03 <> SASH_DOUBLE_TILT_TURN_M then
			openingAngle2_03 = 0
			parameters openingAngle2_03 = openingAngle2_03

			lock "openingAngle2_03"
			hideparameter "openingAngle2_03"
		else
			if abs(openingAngle2_03) < EPS then hideparameter "openingAngle2_03"
			if abs(openingAngle_03) < EPS & abs(openingAngle2_03) > EPS then hideparameter "openingAngle_03"
		endif

		values "openingAngle_03"	range[0,90]
		values "openingAngle2_03"	range[0,90]
		if	gs_optype_m_03 = SASH_SLIDING_VER			|\
			gs_optype_m_03 = SASH_DOUBLE_SLIDING_VER	then
			values "openingLength_03"	range[0,sashHeight/2 - gs_sash_width]
			values "openingLength2_03"	range[0,sashHeight/2 - gs_sash_width]
		endif
		if	gs_optype_m_03 = SASH_SLIDING_HOR			|\
			gs_optype_m_03 = SASH_SLIDING_HOR_M			|\
			gs_optype_m_03 = SASH_DOUBLE_SLIDING_HOR	|\
			gs_optype_m_03 = SASH_DOUBLE_SLIDING_HOR_M	then
			values "openingLength_03"	range[0,sashWidth/2 - gs_sash_width]
			values "openingLength2_03"	range[0,sashWidth/2 - gs_sash_width]
		endif
	endif

	if CasementID = 4 then

		bLockOptpyeParam = 0
		bEnableSecondCustPanel_04	= 0
		bEnableSlidingOpType_04		= 0
		bEnableSlidingOpType2MovableSash_04	= 0
		if iSashType = SASHTYPE_INDEPENDENT then
			dim iOpeningTypeEnabled[]
			gosub "IndependentOpeningTypeValues"
			bEnableSecondCustPanel_04 = bEnableSecondCustPanel
			bEnableSlidingOpType_04 = bEnableSlidingOpType
			bEnableSlidingOpType2MovableSash_04 = bEnableSlidingOpType2MovableSash
			dim OpeningTypeEnabled[]
			for i=1 to vardim1(iOpeningTypeEnabled)
				if iOpeningTypeEnabled[i] = 1 & iMullionStyle_04 = MULLION_VENT_PANEL then
					OpeningTypeEnabled[i] = stLouversinFrame
				else
					OpeningTypeEnabled[i] = stOpeningType[iOpeningTypeEnabled[i]]
				endif
			next i
			values  "gs_optype_04"	 OpeningTypeEnabled
			values "gs_optype_m_04"	iOpeningTypeEnabled
		endif
		if iSashType = SASHTYPE_DOUBLE_RIGHT then
			values "gs_optype_04"	stOpeningType[3]
			values "gs_optype_m_04"	SASH_SIDE_HUNG
			lock "gs_optype_04"
			hideparameter "gs_optype_04"
			if gs_sash_uniform then
				lock "vgn_04", "hgn_04"
				hideparameter "vgn_04", "hgn_04"
			endif
		endif
		if iSashType = SASHTYPE_DOUBLE_LEFT then
			if iWindowClass = WINCLASS_HISTORIC then
				values "gs_optype_04"	stOpeningType[3]
				values "gs_optype_m_04"	SASH_SIDE_HUNG
				bLockOptpyeParam = 1
			else
				values "gs_optype_04"	stOpeningType[3],
										stOpeningType[5],
										stOpeningType[6]

				values "gs_optype_m_04"	SASH_SIDE_HUNG,
										SASH_TILT_TURN,
										SASH_TILT_TURN_M
			endif
		endif

		if bLockOptpyeParam then
			lock	"gs_optype_04",
					"gs_optype_m_04"
		endif

		if GLOB_MODPAR_NAME = "gs_optype_04" then
			gs_optype_m_04 = SASH_FIXED
			for i=2 to vardim1(stOpeningType)
				if gs_optype_04 = stOpeningType[i] then gs_optype_m_04 = i
			next i

			parameters gs_optype_m_04 = gs_optype_m_04
		else
			gs_optype_04 = stOpeningType[gs_optype_m_04]
			parameters gs_optype_04 = gs_optype_04
		endif

		bDisableDividedSash	= (	gs_optype_m_04 = SASH_FIXED |\
								gs_optype_m_04 = SASH_SLIDING_VER |\
								gs_optype_m_04 = SASH_DOUBLE_SLIDING_VER)

		bDisableHVGrid2Sash = (gs_optype_m_04 <> SASH_FIXED)

		iMullionStyle = iMullionStyle_04
		iMullionStyleOriginal = iMullionStyleOriginal_04
		gosub "MullionStyleValues"
		bEnabledMullionDividedPanel_04 = bEnabledMullionDividedPanel

		dim MullionStyleEnabled[]
		for i=1 to vardim1(iMullionStyleEnabled)
			MullionStyleEnabled[i] = stSashType[iMullionStyleEnabled[i]]
		next i
		values  "MullionStyle_04"	 MullionStyleEnabled
		values "iMullionStyle_04"	iMullionStyleEnabled

		if iMullionStyle <> iMullionStyle_04 then
			iMullionStyle_04 = iMullionStyle
			parameters iMullionStyle_04 = iMullionStyle_04
		endif

		if bLockMullion then
			lock "MullionStyle_04", "iMullionStyle_04"
			hideparameter "MullionStyle_04", "iMullionStyle_04"
		else
			if GLOB_MODPAR_NAME = "MullionStyle_04" then
				iMullionStyle_04 = MULLION_NONE
				for i=2 to vardim1(stSashType)
					if MullionStyle_04 = stSashType[i] then iMullionStyle_04 = i
				next i

				parameters iMullionStyle_04 = iMullionStyle_04
			else
				MullionStyle_04 = stSashType[iMullionStyle_04]
				parameters MullionStyle_04 = MullionStyle_04
			endif
		endif

		if sashHeight > 2*gs_sash_width + dividerWidth then
			values "gs_horiz_div_height_04" range(gs_sash_width + dividerWidth, sashHeight - gs_sash_width - 2 * (gs_optype_m_04 = SASH_HOR_PIVOT | gs_optype_m_04 = SASH_VER_PIVOT | gs_optype_m_04 = SASH_VER_PIVOT_M) * gs_rebate_width)
		endif

		values "vgn_04"		range[1,]
		values "hgn_04"		range[1,]
		values "vgn2_04"	range[1,]
		values "hgn2_04"	range[1,]

		if gs_sash_uniform then
			iMullionStyle = iMullionStyle_00
		else
			iMullionStyle = iMullionStyle_04
		endif
		if	iMullionStyle = MULLION_NONE			|\
			iMullionStyle = MULLION_CUSTOM		|\
			iMullionStyle = MULLION_SOLID_PANEL	|\
			iMullionStyle = MULLION_VENT_PANEL	|\
			(iSashShape = SASH_SHAPE_HALFROUND		&\
			 (iMullionStyle = MULLION_SUNBURST_1	|\
			  iMullionStyle = MULLION_SUNBURST_2	|\
			  iMullionStyle = MULLION_SUNBURST_3	|\
			  iMullionStyle = MULLION_SUNBURST_4	|\
			  iMullionStyle = MULLION_SUNBURST_5	))	then

			lock "vgn_04", "hgn_04", "vgn2_04", "hgn2_04"
			hideparameter "vgn_04", "hgn_04", "vgn2_04", "hgn2_04"
		endif
		if iMullionStyle <> MULLION_DIVIDED & iMullionStyle <> MULLION_SOLID_GLAZED then
			if gs_sash_uniform | not(gs_optype_m_04 = SASH_SLIDING_VER | gs_optype_m_04 = SASH_DOUBLE_SLIDING_VER) then
				lock "vgn2_04", "hgn2_04"
				hideparameter "vgn2_04", "hgn2_04"
			endif

			if bEnabledMullionDividedPanel_04 then
				lock "gs_horiz_div_height_04"
				hideparameter "gs_horiz_div_height_04"
			endif
		endif

		if iMullionStyle = MULLION_CUSTOM & not(bLockMullion) then
			values "gs_cust_panel_04"  gs_pt
			if bEnableSecondCustPanel_04 then
				if	gs_optype_m_04 = SASH_DOUBLE_SIDE_HUNG		|\
					gs_optype_m_04 = SASH_DOUBLE_TILT_TURN		|\
					gs_optype_m_04 = SASH_DOUBLE_TILT_TURN_M	|\
					gs_optype_m_04 = SASH_SLIDING_VER			|\
					gs_optype_m_04 = SASH_DOUBLE_SLIDING_VER	|\
					gs_optype_m_04 = SASH_SLIDING_HOR			|\
					gs_optype_m_04 = SASH_SLIDING_HOR_M			|\
					gs_optype_m_04 = SASH_DOUBLE_SLIDING_HOR	|\
					gs_optype_m_04 = SASH_DOUBLE_SLIDING_HOR_M	then
					values "gs_cust_panel2_04"  gs_pt
				else
					lock "gs_cust_panel2_04"
					hideparameter "gs_cust_panel2_04"
				endif
			endif
		else
			lock "gs_cust_panel_04"
			hideparameter "gs_cust_panel_04"

			if bEnableSecondCustPanel_04 then
				lock "gs_cust_panel2_04"
				hideparameter "gs_cust_panel2_04"
			endif
		endif

		if GLOB_MODPAR_NAME = "openingAngle_04" then
			parameters openingAngle2_04 = 0
			openingAngle2_04 = 0
		endif
		if GLOB_MODPAR_NAME = "openingAngle2_04" then
			parameters openingAngle_04 = 0
			openingAngle_04 = 0
		endif
		if	gs_optype_m_04 = SASH_FIXED					|\
			gs_optype_m_04 = SASH_FIXED_SCREW			|\
			gs_optype_m_04 = SASH_SLIDING_VER			|\
			gs_optype_m_04 = SASH_DOUBLE_SLIDING_VER	|\
			gs_optype_m_04 = SASH_SLIDING_HOR			|\
			gs_optype_m_04 = SASH_SLIDING_HOR_M			|\
			gs_optype_m_04 = SASH_DOUBLE_SLIDING_HOR	|\
			gs_optype_m_04 = SASH_DOUBLE_SLIDING_HOR_M	then
			lock "openingAngle_04", "openingAngle2_04"
			hideparameter "openingAngle_04", "openingAngle2_04"
		endif
		if bEnableSlidingOpType_04 then
			if	(gs_optype_m_04 <> SASH_SLIDING_VER)			&\
				(gs_optype_m_04 <> SASH_DOUBLE_SLIDING_VER)		&\
				(gs_optype_m_04 <> SASH_SLIDING_HOR)			&\
				(gs_optype_m_04 <> SASH_SLIDING_HOR_M)			&\
				(gs_optype_m_04 <> SASH_DOUBLE_SLIDING_HOR)		&\
				(gs_optype_m_04 <> SASH_DOUBLE_SLIDING_HOR_M)	then
				lock "openingLength_04"
				hideparameter "openingLength_04"
			endif
		endif
		if bEnableSlidingOpType2MovableSash_04 then
			if	(gs_optype_m_04 <> SASH_DOUBLE_SLIDING_VER)		&\
				(gs_optype_m_04 <> SASH_DOUBLE_SLIDING_HOR)		&\
				(gs_optype_m_04 <> SASH_DOUBLE_SLIDING_HOR_M)	then
				lock "openingLength2_04"
				hideparameter "openingLength2_04"
			endif
		endif
		if	gs_optype_m_04 <> SASH_TILT_TURN &\
			gs_optype_m_04 <> SASH_TILT_TURN_M &\
			gs_optype_m_04 <> SASH_DOUBLE_TILT_TURN &\
			gs_optype_m_04 <> SASH_DOUBLE_TILT_TURN_M then
			openingAngle2_04 = 0
			parameters openingAngle2_04 = openingAngle2_04

			lock "openingAngle2_04"
			hideparameter "openingAngle2_04"
		else
			if abs(openingAngle2_04) < EPS then hideparameter "openingAngle2_04"
			if abs(openingAngle_04) < EPS & abs(openingAngle2_04) > EPS then hideparameter "openingAngle_04"
		endif

		values "openingAngle_04"	range[0,90]
		values "openingAngle2_04"	range[0,90]
		if	gs_optype_m_04 = SASH_SLIDING_VER			|\
			gs_optype_m_04 = SASH_DOUBLE_SLIDING_VER	then
			values "openingLength_04"	range[0,sashHeight/2 - gs_sash_width]
			values "openingLength2_04"	range[0,sashHeight/2 - gs_sash_width]
		endif
		if	gs_optype_m_04 = SASH_SLIDING_HOR			|\
			gs_optype_m_04 = SASH_SLIDING_HOR_M			|\
			gs_optype_m_04 = SASH_DOUBLE_SLIDING_HOR	|\
			gs_optype_m_04 = SASH_DOUBLE_SLIDING_HOR_M	then
			values "openingLength_04"	range[0,sashWidth/2 - gs_sash_width]
			values "openingLength2_04"	range[0,sashWidth/2 - gs_sash_width]
		endif
	endif

	if CasementID = 5 then

		bLockOptpyeParam = 0
		bEnableSecondCustPanel_05	= 0
		bEnableSlidingOpType_05		= 0
		bEnableSlidingOpType2MovableSash_05	= 0
		if iSashType = SASHTYPE_INDEPENDENT then
			dim iOpeningTypeEnabled[]
			gosub "IndependentOpeningTypeValues"
			bEnableSecondCustPanel_05 = bEnableSecondCustPanel
			bEnableSlidingOpType_05 = bEnableSlidingOpType
			bEnableSlidingOpType2MovableSash_05 = bEnableSlidingOpType2MovableSash
			dim OpeningTypeEnabled[]
			for i=1 to vardim1(iOpeningTypeEnabled)
				if iOpeningTypeEnabled[i] = 1 & iMullionStyle_05 = MULLION_VENT_PANEL then
					OpeningTypeEnabled[i] = stLouversinFrame
				else
					OpeningTypeEnabled[i] = stOpeningType[iOpeningTypeEnabled[i]]
				endif
			next i
			values  "gs_optype_05"	 OpeningTypeEnabled
			values "gs_optype_m_05"	iOpeningTypeEnabled
		endif
		if iSashType = SASHTYPE_DOUBLE_RIGHT then
			values "gs_optype_05"	stOpeningType[3]
			values "gs_optype_m_05"	SASH_SIDE_HUNG
			lock "gs_optype_05"
			hideparameter "gs_optype_05"
			if gs_sash_uniform then
				lock "vgn_05", "hgn_05"
				hideparameter "vgn_05", "hgn_05"
			endif
		endif
		if iSashType = SASHTYPE_DOUBLE_LEFT then
			if iWindowClass = WINCLASS_HISTORIC then
				values "gs_optype_05"	stOpeningType[3]
				values "gs_optype_m_05"	SASH_SIDE_HUNG
				bLockOptpyeParam = 1
			else
				values "gs_optype_05"	stOpeningType[3],
										stOpeningType[5],
										stOpeningType[6]

				values "gs_optype_m_05"	SASH_SIDE_HUNG,
										SASH_TILT_TURN,
										SASH_TILT_TURN_M
			endif
		endif

		if bLockOptpyeParam then
			lock	"gs_optype_05",
					"gs_optype_m_05"
		endif

		if GLOB_MODPAR_NAME = "gs_optype_05" then
			gs_optype_m_05 = SASH_FIXED
			for i=2 to vardim1(stOpeningType)
				if gs_optype_05 = stOpeningType[i] then gs_optype_m_05 = i
			next i

			parameters gs_optype_m_05 = gs_optype_m_05
		else
			gs_optype_05 = stOpeningType[gs_optype_m_05]
			parameters gs_optype_05 = gs_optype_05
		endif

		bDisableDividedSash	= (	gs_optype_m_05 = SASH_FIXED |\
								gs_optype_m_05 = SASH_SLIDING_VER |\
								gs_optype_m_05 = SASH_DOUBLE_SLIDING_VER)

		bDisableHVGrid2Sash = (gs_optype_m_05 <> SASH_FIXED)

		iMullionStyle = iMullionStyle_05
		iMullionStyleOriginal = iMullionStyleOriginal_05
		gosub "MullionStyleValues"
		bEnabledMullionDividedPanel_05 = bEnabledMullionDividedPanel

		dim MullionStyleEnabled[]
		for i=1 to vardim1(iMullionStyleEnabled)
			MullionStyleEnabled[i] = stSashType[iMullionStyleEnabled[i]]
		next i

		values  "MullionStyle_05"	 MullionStyleEnabled
		values "iMullionStyle_05"	iMullionStyleEnabled

		if iMullionStyle <> iMullionStyle_05 then
			iMullionStyle_05 = iMullionStyle
			parameters iMullionStyle_05 = iMullionStyle_05
		endif

		if bLockMullion then
			lock "MullionStyle_05", "iMullionStyle_05"
			hideparameter "MullionStyle_05", "iMullionStyle_05"
		else
			if GLOB_MODPAR_NAME = "MullionStyle_05" then
				iMullionStyle_05 = MULLION_NONE
				for i=2 to vardim1(stSashType)
					if MullionStyle_05 = stSashType[i] then iMullionStyle_05 = i
				next i

				parameters iMullionStyle_05 = iMullionStyle_05
			else
				MullionStyle_05 = stSashType[iMullionStyle_05]
				parameters MullionStyle_05 = MullionStyle_05
			endif
		endif

		if sashHeight > 2*gs_sash_width + dividerWidth then
			values "gs_horiz_div_height_05" range(gs_sash_width + dividerWidth, sashHeight - gs_sash_width - 2 * (gs_optype_m_05 = SASH_HOR_PIVOT | gs_optype_m_05 = SASH_VER_PIVOT | gs_optype_m_05 = SASH_VER_PIVOT_M) * gs_rebate_width)
		endif

		values "vgn_05"		range[1,]
		values "hgn_05"		range[1,]
		values "vgn2_05"	range[1,]
		values "hgn2_05"	range[1,]

		if gs_sash_uniform then
			iMullionStyle = iMullionStyle_00
		else
			iMullionStyle = iMullionStyle_05
		endif
		if	iMullionStyle = MULLION_NONE			|\
			iMullionStyle = MULLION_CUSTOM		|\
			iMullionStyle = MULLION_SOLID_PANEL	|\
			iMullionStyle = MULLION_VENT_PANEL	|\
			(iSashShape = SASH_SHAPE_HALFROUND		&\
			 (iMullionStyle = MULLION_SUNBURST_1	|\
			  iMullionStyle = MULLION_SUNBURST_2	|\
			  iMullionStyle = MULLION_SUNBURST_3	|\
			  iMullionStyle = MULLION_SUNBURST_4	|\
			  iMullionStyle = MULLION_SUNBURST_5	))	then

			lock "vgn_05", "hgn_05", "vgn2_05", "hgn2_05"
			hideparameter "vgn_05", "hgn_05", "vgn2_05", "hgn2_05"
		endif
		if iMullionStyle <> MULLION_DIVIDED & iMullionStyle <> MULLION_SOLID_GLAZED then
			if gs_sash_uniform | not(gs_optype_m_05 = SASH_SLIDING_VER | gs_optype_m_05 = SASH_DOUBLE_SLIDING_VER) then
				lock "vgn2_05", "hgn2_05"
				hideparameter "vgn2_05", "hgn2_05"
			endif

			if bEnabledMullionDividedPanel_05 then
				lock "gs_horiz_div_height_05"
				hideparameter "gs_horiz_div_height_05"
			endif
		endif

		if iMullionStyle = MULLION_CUSTOM & not(bLockMullion) then
			values "gs_cust_panel_05"  gs_pt
			if bEnableSecondCustPanel_05 then
				if	gs_optype_m_05 = SASH_DOUBLE_SIDE_HUNG		|\
					gs_optype_m_05 = SASH_DOUBLE_TILT_TURN		|\
					gs_optype_m_05 = SASH_DOUBLE_TILT_TURN_M	|\
					gs_optype_m_05 = SASH_SLIDING_VER			|\
					gs_optype_m_05 = SASH_DOUBLE_SLIDING_VER	|\
					gs_optype_m_05 = SASH_SLIDING_HOR			|\
					gs_optype_m_05 = SASH_SLIDING_HOR_M			|\
					gs_optype_m_05 = SASH_DOUBLE_SLIDING_HOR	|\
					gs_optype_m_05 = SASH_DOUBLE_SLIDING_HOR_M	then
					values "gs_cust_panel2_05"  gs_pt
				else
					lock "gs_cust_panel2_05"
					hideparameter "gs_cust_panel2_05"
				endif
			endif
		else
			lock "gs_cust_panel_05"
			hideparameter "gs_cust_panel_05"

			if bEnableSecondCustPanel_05 then
				lock "gs_cust_panel2_05"
				hideparameter "gs_cust_panel2_05"
			endif
		endif

		if GLOB_MODPAR_NAME = "openingAngle_05" then
			parameters openingAngle2_05 = 0
			openingAngle2_05 = 0
		endif
		if GLOB_MODPAR_NAME = "openingAngle2_05" then
			parameters openingAngle_05 = 0
			openingAngle_05 = 0
		endif
		if	gs_optype_m_05 = SASH_FIXED					|\
			gs_optype_m_05 = SASH_FIXED_SCREW			|\
			gs_optype_m_05 = SASH_SLIDING_VER			|\
			gs_optype_m_05 = SASH_DOUBLE_SLIDING_VER	|\
			gs_optype_m_05 = SASH_SLIDING_HOR			|\
			gs_optype_m_05 = SASH_SLIDING_HOR_M			|\
			gs_optype_m_05 = SASH_DOUBLE_SLIDING_HOR	|\
			gs_optype_m_05 = SASH_DOUBLE_SLIDING_HOR_M	then
			lock "openingAngle_05", "openingAngle2_05"
			hideparameter "openingAngle_05", "openingAngle2_05"
		endif
		if bEnableSlidingOpType_05 then
			if	(gs_optype_m_05 <> SASH_SLIDING_VER)			&\
				(gs_optype_m_05 <> SASH_DOUBLE_SLIDING_VER)		&\
				(gs_optype_m_05 <> SASH_SLIDING_HOR)			&\
				(gs_optype_m_05 <> SASH_SLIDING_HOR_M)			&\
				(gs_optype_m_05 <> SASH_DOUBLE_SLIDING_HOR)		&\
				(gs_optype_m_05 <> SASH_DOUBLE_SLIDING_HOR_M)	then
				lock "openingLength_05"
				hideparameter "openingLength_05"
			endif
		endif
		if bEnableSlidingOpType2MovableSash_05 then
			if	(gs_optype_m_05 <> SASH_DOUBLE_SLIDING_VER)		&\
				(gs_optype_m_05 <> SASH_DOUBLE_SLIDING_HOR)		&\
				(gs_optype_m_05 <> SASH_DOUBLE_SLIDING_HOR_M)	then
				lock "openingLength2_05"
				hideparameter "openingLength2_05"
			endif
		endif
		if	gs_optype_m_05 <> SASH_TILT_TURN &\
			gs_optype_m_05 <> SASH_TILT_TURN_M &\
			gs_optype_m_05 <> SASH_DOUBLE_TILT_TURN &\
			gs_optype_m_05 <> SASH_DOUBLE_TILT_TURN_M then
			openingAngle2_05 = 0
			parameters openingAngle2_05 = openingAngle2_05

			lock "openingAngle2_05"
			hideparameter "openingAngle2_05"
		else
			if abs(openingAngle2_05) < EPS then hideparameter "openingAngle2_05"
			if abs(openingAngle_05) < EPS & abs(openingAngle2_05) > EPS then hideparameter "openingAngle_05"
		endif

		values "openingAngle_05"	range[0,90]
		values "openingAngle2_05"	range[0,90]
		if	gs_optype_m_05 = SASH_SLIDING_VER			|\
			gs_optype_m_05 = SASH_DOUBLE_SLIDING_VER	then
			values "openingLength_05"	range[0,sashHeight/2 - gs_sash_width]
			values "openingLength2_05"	range[0,sashHeight/2 - gs_sash_width]
		endif
		if	gs_optype_m_05 = SASH_SLIDING_HOR			|\
			gs_optype_m_05 = SASH_SLIDING_HOR_M			|\
			gs_optype_m_05 = SASH_DOUBLE_SLIDING_HOR	|\
			gs_optype_m_05 = SASH_DOUBLE_SLIDING_HOR_M	then
			values "openingLength_05"	range[0,sashWidth/2 - gs_sash_width]
			values "openingLength2_05"	range[0,sashWidth/2 - gs_sash_width]
		endif
	endif

	if CasementID = 6 then

		bLockOptpyeParam = 0
		bEnableSecondCustPanel_06	= 0
		bEnableSlidingOpType_06		= 0
		bEnableSlidingOpType2MovableSash_06	= 0
		if iSashType = SASHTYPE_INDEPENDENT then
			dim iOpeningTypeEnabled[]
			gosub "IndependentOpeningTypeValues"
			bEnableSecondCustPanel_06 = bEnableSecondCustPanel
			bEnableSlidingOpType_06 = bEnableSlidingOpType
			bEnableSlidingOpType2MovableSash_06 = bEnableSlidingOpType2MovableSash
			dim OpeningTypeEnabled[]
			for i=1 to vardim1(iOpeningTypeEnabled)
				if iOpeningTypeEnabled[i] = 1 & iMullionStyle_06 = MULLION_VENT_PANEL then
					OpeningTypeEnabled[i] = stLouversinFrame
				else
					OpeningTypeEnabled[i] = stOpeningType[iOpeningTypeEnabled[i]]
				endif
			next i
			values  "gs_optype_06"	 OpeningTypeEnabled
			values "gs_optype_m_06"	iOpeningTypeEnabled
		endif
		if iSashType = SASHTYPE_DOUBLE_RIGHT then
			values "gs_optype_06"	stOpeningType[3]
			values "gs_optype_m_06"	SASH_SIDE_HUNG
			lock "gs_optype_06"
			hideparameter "gs_optype_06"
			if gs_sash_uniform then
				lock "vgn_06", "hgn_06"
				hideparameter "vgn_06", "hgn_06"
			endif
		endif
		if iSashType = SASHTYPE_DOUBLE_LEFT then
			if iWindowClass = WINCLASS_HISTORIC then
				values "gs_optype_06"	stOpeningType[3]
				values "gs_optype_m_06"	SASH_SIDE_HUNG
				bLockOptpyeParam = 1
			else
				values "gs_optype_06"	stOpeningType[3],
										stOpeningType[5],
										stOpeningType[6]

				values "gs_optype_m_06"	SASH_SIDE_HUNG,
										SASH_TILT_TURN,
										SASH_TILT_TURN_M
			endif
		endif

		if bLockOptpyeParam then
			lock	"gs_optype_06",
					"gs_optype_m_06"
		endif

		if GLOB_MODPAR_NAME = "gs_optype_06" then
			gs_optype_m_06 = SASH_FIXED
			for i=2 to vardim1(stOpeningType)
				if gs_optype_06 = stOpeningType[i] then gs_optype_m_06 = i
			next i

			parameters gs_optype_m_06 = gs_optype_m_06
		else
			gs_optype_06 = stOpeningType[gs_optype_m_06]
			parameters gs_optype_06 = gs_optype_06
		endif

		bDisableDividedSash	= (	gs_optype_m_06 = SASH_FIXED |\
								gs_optype_m_06 = SASH_SLIDING_VER |\
								gs_optype_m_06 = SASH_DOUBLE_SLIDING_VER)

		bDisableHVGrid2Sash = (gs_optype_m_06 <> SASH_FIXED)

		iMullionStyle = iMullionStyle_06
		iMullionStyleOriginal = iMullionStyleOriginal_06
		gosub "MullionStyleValues"
		bEnabledMullionDividedPanel_06 = bEnabledMullionDividedPanel

		dim MullionStyleEnabled[]
		for i=1 to vardim1(iMullionStyleEnabled)
			MullionStyleEnabled[i] = stSashType[iMullionStyleEnabled[i]]
		next i
		values  "MullionStyle_06"	 MullionStyleEnabled
		values "iMullionStyle_06"	iMullionStyleEnabled

		if iMullionStyle <> iMullionStyle_06 then
			iMullionStyle_06 = iMullionStyle
			parameters iMullionStyle_06 = iMullionStyle_06
		endif

		if bLockMullion then
			lock "MullionStyle_06", "iMullionStyle_06"
			hideparameter "MullionStyle_06", "iMullionStyle_06"
		else
			if GLOB_MODPAR_NAME = "MullionStyle_06" then
				iMullionStyle_06 = MULLION_NONE
				for i=2 to vardim1(stSashType)
					if MullionStyle_06 = stSashType[i] then iMullionStyle_06 = i
				next i

				parameters iMullionStyle_06 = iMullionStyle_06
			else
				MullionStyle_06 = stSashType[iMullionStyle_06]
				parameters MullionStyle_06 = MullionStyle_06
			endif
		endif

		if sashHeight > 2*gs_sash_width + dividerWidth then
			values "gs_horiz_div_height_06" range(gs_sash_width + dividerWidth, sashHeight - gs_sash_width - 2 * (gs_optype_m_06 = SASH_HOR_PIVOT | gs_optype_m_06 = SASH_VER_PIVOT | gs_optype_m_06 = SASH_VER_PIVOT_M) * gs_rebate_width)
		endif

		values "vgn_06"		range[1,]
		values "hgn_06"		range[1,]
		values "vgn2_06"	range[1,]
		values "hgn2_06"	range[1,]

		if gs_sash_uniform then
			iMullionStyle = iMullionStyle_00
		else
			iMullionStyle = iMullionStyle_06
		endif
		if	iMullionStyle = MULLION_NONE			|\
			iMullionStyle = MULLION_CUSTOM		|\
			iMullionStyle = MULLION_SOLID_PANEL	|\
			iMullionStyle = MULLION_VENT_PANEL	|\
			(iSashShape = SASH_SHAPE_HALFROUND		&\
			 (iMullionStyle = MULLION_SUNBURST_1	|\
			  iMullionStyle = MULLION_SUNBURST_2	|\
			  iMullionStyle = MULLION_SUNBURST_3	|\
			  iMullionStyle = MULLION_SUNBURST_4	|\
			  iMullionStyle = MULLION_SUNBURST_5	))	then

			lock "vgn_06", "hgn_06", "vgn2_06", "hgn2_06"
			hideparameter "vgn_06", "hgn_06", "vgn2_06", "hgn2_06"
		endif
		if iMullionStyle <> MULLION_DIVIDED & iMullionStyle <> MULLION_SOLID_GLAZED then
			if gs_sash_uniform | not(gs_optype_m_06 = SASH_SLIDING_VER | gs_optype_m_06 = SASH_DOUBLE_SLIDING_VER) then
				lock "vgn2_06", "hgn2_06"
				hideparameter "vgn2_06", "hgn2_06"
			endif

			if bEnabledMullionDividedPanel_06 then
				lock "gs_horiz_div_height_06"
				hideparameter "gs_horiz_div_height_06"
			endif
		endif

		if iMullionStyle = MULLION_CUSTOM & not(bLockMullion) then
			values "gs_cust_panel_06"  gs_pt
			if bEnableSecondCustPanel_06 then
				if	gs_optype_m_06 = SASH_DOUBLE_SIDE_HUNG		|\
					gs_optype_m_06 = SASH_DOUBLE_TILT_TURN		|\
					gs_optype_m_06 = SASH_DOUBLE_TILT_TURN_M	|\
					gs_optype_m_06 = SASH_SLIDING_VER			|\
					gs_optype_m_06 = SASH_DOUBLE_SLIDING_VER	|\
					gs_optype_m_06 = SASH_SLIDING_HOR			|\
					gs_optype_m_06 = SASH_SLIDING_HOR_M			|\
					gs_optype_m_06 = SASH_DOUBLE_SLIDING_HOR	|\
					gs_optype_m_06 = SASH_DOUBLE_SLIDING_HOR_M	then
					values "gs_cust_panel2_06"  gs_pt
				else
					lock "gs_cust_panel2_06"
					hideparameter "gs_cust_panel2_06"
				endif
			endif
		else
			lock "gs_cust_panel_06"
			hideparameter "gs_cust_panel_06"

			if bEnableSecondCustPanel_06 then
				lock "gs_cust_panel2_06"
				hideparameter "gs_cust_panel2_06"
			endif
		endif

		if GLOB_MODPAR_NAME = "openingAngle_06" then
			parameters openingAngle2_06 = 0
			openingAngle2_06 = 0
		endif
		if GLOB_MODPAR_NAME = "openingAngle2_06" then
			parameters openingAngle_06 = 0
			openingAngle_06 = 0
		endif
		if	gs_optype_m_06 = SASH_FIXED					|\
			gs_optype_m_06 = SASH_FIXED_SCREW			|\
			gs_optype_m_06 = SASH_SLIDING_VER			|\
			gs_optype_m_06 = SASH_DOUBLE_SLIDING_VER	|\
			gs_optype_m_06 = SASH_SLIDING_HOR			|\
			gs_optype_m_06 = SASH_SLIDING_HOR_M			|\
			gs_optype_m_06 = SASH_DOUBLE_SLIDING_HOR	|\
			gs_optype_m_06 = SASH_DOUBLE_SLIDING_HOR_M	then
			lock "openingAngle_06", "openingAngle2_06"
			hideparameter "openingAngle_06", "openingAngle2_06"
		endif
		if bEnableSlidingOpType_06 then
			if	(gs_optype_m_06 <> SASH_SLIDING_VER)			&\
				(gs_optype_m_06 <> SASH_DOUBLE_SLIDING_VER)		&\
				(gs_optype_m_06 <> SASH_SLIDING_HOR)			&\
				(gs_optype_m_06 <> SASH_SLIDING_HOR_M)			&\
				(gs_optype_m_06 <> SASH_DOUBLE_SLIDING_HOR)		&\
				(gs_optype_m_06 <> SASH_DOUBLE_SLIDING_HOR_M)	then
				lock "openingLength_06"
				hideparameter "openingLength_06"
			endif
		endif
		if bEnableSlidingOpType2MovableSash_06 then
			if	(gs_optype_m_06 <> SASH_DOUBLE_SLIDING_VER)		&\
				(gs_optype_m_06 <> SASH_DOUBLE_SLIDING_HOR)		&\
				(gs_optype_m_06 <> SASH_DOUBLE_SLIDING_HOR_M)	then
				lock "openingLength2_06"
				hideparameter "openingLength2_06"
			endif
		endif
		if	gs_optype_m_06 <> SASH_TILT_TURN &\
			gs_optype_m_06 <> SASH_TILT_TURN_M &\
			gs_optype_m_06 <> SASH_DOUBLE_TILT_TURN &\
			gs_optype_m_06 <> SASH_DOUBLE_TILT_TURN_M then
			openingAngle2_06 = 0
			parameters openingAngle2_06 = openingAngle2_06

			lock "openingAngle2_06"
			hideparameter "openingAngle2_06"
		else
			if abs(openingAngle2_06) < EPS then hideparameter "openingAngle2_06"
			if abs(openingAngle_06) < EPS & abs(openingAngle2_06) > EPS then hideparameter "openingAngle_06"
		endif

		values "openingAngle_06"	range[0,90]
		values "openingAngle2_06"	range[0,90]
		if	gs_optype_m_06 = SASH_SLIDING_VER			|\
			gs_optype_m_06 = SASH_DOUBLE_SLIDING_VER	then
			values "openingLength_06"	range[0,sashHeight/2 - gs_sash_width]
			values "openingLength2_06"	range[0,sashHeight/2 - gs_sash_width]
		endif
		if	gs_optype_m_06 = SASH_SLIDING_HOR			|\
			gs_optype_m_06 = SASH_SLIDING_HOR_M			|\
			gs_optype_m_06 = SASH_DOUBLE_SLIDING_HOR	|\
			gs_optype_m_06 = SASH_DOUBLE_SLIDING_HOR_M	then
			values "openingLength_06"	range[0,sashWidth/2 - gs_sash_width]
			values "openingLength2_06"	range[0,sashWidth/2 - gs_sash_width]
		endif
	endif

	if CasementID = 7 then

		bLockOptpyeParam = 0
		bEnableSecondCustPanel_07	= 0
		bEnableSlidingOpType_07		= 0
		bEnableSlidingOpType2MovableSash_07	= 0
		if iSashType = SASHTYPE_INDEPENDENT then
			dim iOpeningTypeEnabled[]
			gosub "IndependentOpeningTypeValues"
			bEnableSecondCustPanel_07 = bEnableSecondCustPanel
			bEnableSlidingOpType_07 = bEnableSlidingOpType
			bEnableSlidingOpType2MovableSash_07 = bEnableSlidingOpType2MovableSash
			dim OpeningTypeEnabled[]
			for i=1 to vardim1(iOpeningTypeEnabled)
				if iOpeningTypeEnabled[i] = 1 & iMullionStyle_07 = MULLION_VENT_PANEL then
					OpeningTypeEnabled[i] = stLouversinFrame
				else
					OpeningTypeEnabled[i] = stOpeningType[iOpeningTypeEnabled[i]]
				endif
			next i
			values  "gs_optype_07"	 OpeningTypeEnabled
			values "gs_optype_m_07"	iOpeningTypeEnabled
		endif
		if iSashType = SASHTYPE_DOUBLE_RIGHT then
			values "gs_optype_07"	stOpeningType[3]
			values "gs_optype_m_07"	SASH_SIDE_HUNG
			lock "gs_optype_07"
			hideparameter "gs_optype_07"
			if gs_sash_uniform then
				lock "vgn_07", "hgn_07"
				hideparameter "vgn_07", "hgn_07"
			endif
		endif
		if iSashType = SASHTYPE_DOUBLE_LEFT then
			if iWindowClass = WINCLASS_HISTORIC then
				values "gs_optype_07"	stOpeningType[3]
				values "gs_optype_m_07"	SASH_SIDE_HUNG
				bLockOptpyeParam = 1
			else
				values "gs_optype_07"	stOpeningType[3],
										stOpeningType[5],
										stOpeningType[6]

				values "gs_optype_m_07"	SASH_SIDE_HUNG,
										SASH_TILT_TURN,
										SASH_TILT_TURN_M
			endif
		endif

		if bLockOptpyeParam then
			lock	"gs_optype_07",
					"gs_optype_m_07"
		endif

		if GLOB_MODPAR_NAME = "gs_optype_07" then
			gs_optype_m_07 = SASH_FIXED
			for i=2 to vardim1(stOpeningType)
				if gs_optype_07 = stOpeningType[i] then gs_optype_m_07 = i
			next i

			parameters gs_optype_m_07 = gs_optype_m_07
		else
			gs_optype_07 = stOpeningType[gs_optype_m_07]
			parameters gs_optype_07 = gs_optype_07
		endif

		bDisableDividedSash	= (	gs_optype_m_07 = SASH_FIXED |\
								gs_optype_m_07 = SASH_SLIDING_VER |\
								gs_optype_m_07 = SASH_DOUBLE_SLIDING_VER)

		bDisableHVGrid2Sash = (gs_optype_m_07 <> SASH_FIXED)

		iMullionStyle = iMullionStyle_07
		iMullionStyleOriginal = iMullionStyleOriginal_07
		gosub "MullionStyleValues"
		bEnabledMullionDividedPanel_07 = bEnabledMullionDividedPanel

		dim MullionStyleEnabled[]
		for i=1 to vardim1(iMullionStyleEnabled)
			MullionStyleEnabled[i] = stSashType[iMullionStyleEnabled[i]]
		next i
		values  "MullionStyle_07"	 MullionStyleEnabled
		values "iMullionStyle_07"	iMullionStyleEnabled

		if iMullionStyle <> iMullionStyle_07 then
			iMullionStyle_07 = iMullionStyle
			parameters iMullionStyle_07 = iMullionStyle_07
		endif

		if bLockMullion then
			lock "MullionStyle_07", "iMullionStyle_07"
			hideparameter "MullionStyle_07", "iMullionStyle_07"
		else
			if GLOB_MODPAR_NAME = "MullionStyle_07" then
				iMullionStyle_07 = MULLION_NONE
				for i=2 to vardim1(stSashType)
					if MullionStyle_07 = stSashType[i] then iMullionStyle_07 = i
				next i

				parameters iMullionStyle_07 = iMullionStyle_07
			else
				MullionStyle_07 = stSashType[iMullionStyle_07]
				parameters MullionStyle_07 = MullionStyle_07
			endif
		endif

		if sashHeight > 2*gs_sash_width + dividerWidth then
			values "gs_horiz_div_height_07" range(gs_sash_width + dividerWidth, sashHeight - gs_sash_width - 2 * (gs_optype_m_07 = SASH_HOR_PIVOT | gs_optype_m_07 = SASH_VER_PIVOT | gs_optype_m_07 = SASH_VER_PIVOT_M) * gs_rebate_width)
		endif

		values "vgn_07"		range[1,]
		values "hgn_07"		range[1,]
		values "vgn2_07"	range[1,]
		values "hgn2_07"	range[1,]

		if gs_sash_uniform then
			iMullionStyle = iMullionStyle_00
		else
			iMullionStyle = iMullionStyle_07
		endif
		if	iMullionStyle = MULLION_NONE			|\
			iMullionStyle = MULLION_CUSTOM		|\
			iMullionStyle = MULLION_SOLID_PANEL	|\
			iMullionStyle = MULLION_VENT_PANEL	|\
			(iSashShape = SASH_SHAPE_HALFROUND		&\
			 (iMullionStyle = MULLION_SUNBURST_1	|\
			  iMullionStyle = MULLION_SUNBURST_2	|\
			  iMullionStyle = MULLION_SUNBURST_3	|\
			  iMullionStyle = MULLION_SUNBURST_4	|\
			  iMullionStyle = MULLION_SUNBURST_5	))	then

			lock "vgn_07", "hgn_07", "vgn2_07", "hgn2_07"
			hideparameter "vgn_07", "hgn_07", "vgn2_07", "hgn2_07"
		endif
		if iMullionStyle <> MULLION_DIVIDED & iMullionStyle <> MULLION_SOLID_GLAZED then
			if gs_sash_uniform | not(gs_optype_m_07 = SASH_SLIDING_VER | gs_optype_m_07 = SASH_DOUBLE_SLIDING_VER) then
				lock "vgn2_07", "hgn2_07"
				hideparameter "vgn2_07", "hgn2_07"
			endif

			if bEnabledMullionDividedPanel_07 then
				lock "gs_horiz_div_height_07"
				hideparameter "gs_horiz_div_height_07"
			endif
		endif

		if iMullionStyle = MULLION_CUSTOM & not(bLockMullion) then
			values "gs_cust_panel_07"  gs_pt
			if bEnableSecondCustPanel_07 then
				if	gs_optype_m_07 = SASH_DOUBLE_SIDE_HUNG		|\
					gs_optype_m_07 = SASH_DOUBLE_TILT_TURN		|\
					gs_optype_m_07 = SASH_DOUBLE_TILT_TURN_M	|\
					gs_optype_m_07 = SASH_SLIDING_VER			|\
					gs_optype_m_07 = SASH_DOUBLE_SLIDING_VER	|\
					gs_optype_m_07 = SASH_SLIDING_HOR			|\
					gs_optype_m_07 = SASH_SLIDING_HOR_M			|\
					gs_optype_m_07 = SASH_DOUBLE_SLIDING_HOR	|\
					gs_optype_m_07 = SASH_DOUBLE_SLIDING_HOR_M	then
					values "gs_cust_panel2_07"  gs_pt
				else
					lock "gs_cust_panel2_07"
					hideparameter "gs_cust_panel2_07"
				endif
			endif
		else
			lock "gs_cust_panel_07"
			hideparameter "gs_cust_panel_07"

			if bEnableSecondCustPanel_07 then
				lock "gs_cust_panel2_07"
				hideparameter "gs_cust_panel2_07"
			endif
		endif

		if GLOB_MODPAR_NAME = "openingAngle_07" then
			parameters openingAngle2_07 = 0
			openingAngle2_07 = 0
		endif
		if GLOB_MODPAR_NAME = "openingAngle2_07" then
			parameters openingAngle_07 = 0
			openingAngle_07 = 0
		endif
		if	gs_optype_m_07 = SASH_FIXED					|\
			gs_optype_m_07 = SASH_FIXED_SCREW			|\
			gs_optype_m_07 = SASH_SLIDING_VER			|\
			gs_optype_m_07 = SASH_DOUBLE_SLIDING_VER	|\
			gs_optype_m_07 = SASH_SLIDING_HOR			|\
			gs_optype_m_07 = SASH_SLIDING_HOR_M			|\
			gs_optype_m_07 = SASH_DOUBLE_SLIDING_HOR	|\
			gs_optype_m_07 = SASH_DOUBLE_SLIDING_HOR_M	then
			lock "openingAngle_07", "openingAngle2_07"
			hideparameter "openingAngle_07", "openingAngle2_07"
		endif
		if bEnableSlidingOpType_07 then
			if	(gs_optype_m_07 <> SASH_SLIDING_VER)			&\
				(gs_optype_m_07 <> SASH_DOUBLE_SLIDING_VER)		&\
				(gs_optype_m_07 <> SASH_SLIDING_HOR)			&\
				(gs_optype_m_07 <> SASH_SLIDING_HOR_M)			&\
				(gs_optype_m_07 <> SASH_DOUBLE_SLIDING_HOR)		&\
				(gs_optype_m_07 <> SASH_DOUBLE_SLIDING_HOR_M)	then
				lock "openingLength_07"
				hideparameter "openingLength_07"
			endif
		endif
		if bEnableSlidingOpType2MovableSash_07 then
			if	(gs_optype_m_07 <> SASH_DOUBLE_SLIDING_VER)		&\
				(gs_optype_m_07 <> SASH_DOUBLE_SLIDING_HOR)		&\
				(gs_optype_m_07 <> SASH_DOUBLE_SLIDING_HOR_M)	then
				lock "openingLength2_07"
				hideparameter "openingLength2_07"
			endif
		endif
		if 	gs_optype_m_07 <> SASH_TILT_TURN &\
			gs_optype_m_07 <> SASH_TILT_TURN_M &\
			gs_optype_m_07 <> SASH_DOUBLE_TILT_TURN &\
			gs_optype_m_07 <> SASH_DOUBLE_TILT_TURN_M then
			openingAngle2_07 = 0
			parameters openingAngle2_07 = openingAngle2_07

			lock "openingAngle2_07"
			hideparameter "openingAngle2_07"
		else
			if abs(openingAngle2_07) < EPS then hideparameter "openingAngle2_07"
			if abs(openingAngle_07) < EPS & abs(openingAngle2_07) > EPS then hideparameter "openingAngle_07"
		endif

		values "openingAngle_07"	range[0,90]
		values "openingAngle2_07"	range[0,90]
		if	gs_optype_m_07 = SASH_SLIDING_VER			|\
			gs_optype_m_07 = SASH_DOUBLE_SLIDING_VER	then
			values "openingLength_07"	range[0,sashHeight/2 - gs_sash_width]
			values "openingLength2_07"	range[0,sashHeight/2 - gs_sash_width]
		endif
		if	gs_optype_m_07 = SASH_SLIDING_HOR			|\
			gs_optype_m_07 = SASH_SLIDING_HOR_M			|\
			gs_optype_m_07 = SASH_DOUBLE_SLIDING_HOR	|\
			gs_optype_m_07 = SASH_DOUBLE_SLIDING_HOR_M	then
			values "openingLength_07"	range[0,sashWidth/2 - gs_sash_width]
			values "openingLength2_07"	range[0,sashWidth/2 - gs_sash_width]
		endif
	endif

	if CasementID = 8 then

		bLockOptpyeParam = 0
		bEnableSecondCustPanel_08	= 0
		bEnableSlidingOpType_08		= 0
		bEnableSlidingOpType2MovableSash_08	= 0
		if iSashType = SASHTYPE_INDEPENDENT then
			dim iOpeningTypeEnabled[]
			gosub "IndependentOpeningTypeValues"
			bEnableSecondCustPanel_08 = bEnableSecondCustPanel
			bEnableSlidingOpType_08 = bEnableSlidingOpType
			bEnableSlidingOpType2MovableSash_08 = bEnableSlidingOpType2MovableSash
			dim OpeningTypeEnabled[]
			for i=1 to vardim1(iOpeningTypeEnabled)
				if iOpeningTypeEnabled[i] = 1 & iMullionStyle_08 = MULLION_VENT_PANEL then
					OpeningTypeEnabled[i] = stLouversinFrame
				else
					OpeningTypeEnabled[i] = stOpeningType[iOpeningTypeEnabled[i]]
				endif
			next i
			values  "gs_optype_08"	 OpeningTypeEnabled
			values "gs_optype_m_08"	iOpeningTypeEnabled
		endif
		if iSashType = SASHTYPE_DOUBLE_RIGHT then
			values "gs_optype_08"	stOpeningType[3]
			values "gs_optype_m_08"	SASH_SIDE_HUNG
			lock "gs_optype_08"
			hideparameter "gs_optype_08"
			if gs_sash_uniform then
				lock "vgn_08", "hgn_08"
				hideparameter "vgn_08", "hgn_08"
			endif
		endif
		if iSashType = SASHTYPE_DOUBLE_LEFT then
			if iWindowClass = WINCLASS_HISTORIC then
				values "gs_optype_08"	stOpeningType[3]
				values "gs_optype_m_08"	SASH_SIDE_HUNG
				bLockOptpyeParam = 1
			else
				values "gs_optype_08"	stOpeningType[3],
										stOpeningType[5],
										stOpeningType[6]

				values "gs_optype_m_08"	SASH_SIDE_HUNG,
										SASH_TILT_TURN,
										SASH_TILT_TURN_M
			endif
		endif

		if bLockOptpyeParam then
			lock	"gs_optype_08",
					"gs_optype_m_08"
		endif

		if GLOB_MODPAR_NAME = "gs_optype_08" then
			gs_optype_m_08 = SASH_FIXED
			for i=2 to vardim1(stOpeningType)
				if gs_optype_08 = stOpeningType[i] then gs_optype_m_08 = i
			next i

			parameters gs_optype_m_08 = gs_optype_m_08
		else
			gs_optype_08 = stOpeningType[gs_optype_m_08]
			parameters gs_optype_08 = gs_optype_08
		endif

		bDisableDividedSash	= (	gs_optype_m_08 = SASH_FIXED |\
								gs_optype_m_08 = SASH_SLIDING_VER |\
								gs_optype_m_08 = SASH_DOUBLE_SLIDING_VER)

		bDisableHVGrid2Sash = (gs_optype_m_08 <> SASH_FIXED)

		iMullionStyle = iMullionStyle_08
		iMullionStyleOriginal = iMullionStyleOriginal_08
		gosub "MullionStyleValues"
		bEnabledMullionDividedPanel_08 = bEnabledMullionDividedPanel

		dim MullionStyleEnabled[]
		for i=1 to vardim1(iMullionStyleEnabled)
			MullionStyleEnabled[i] = stSashType[iMullionStyleEnabled[i]]
		next i
		values  "MullionStyle_08"	 MullionStyleEnabled
		values "iMullionStyle_08"	iMullionStyleEnabled

		if iMullionStyle <> iMullionStyle_08 then
			iMullionStyle_08 = iMullionStyle
			parameters iMullionStyle_08 = iMullionStyle_08
		endif

		if bLockMullion then
			lock "MullionStyle_08", "iMullionStyle_08"
			hideparameter "MullionStyle_08", "iMullionStyle_08"
		else
			if GLOB_MODPAR_NAME = "MullionStyle_08" then
				iMullionStyle_08 = MULLION_NONE
				for i=2 to vardim1(stSashType)
					if MullionStyle_08 = stSashType[i] then iMullionStyle_08 = i
				next i

				parameters iMullionStyle_08 = iMullionStyle_08
			else
				MullionStyle_08 = stSashType[iMullionStyle_08]
				parameters MullionStyle_08 = MullionStyle_08
			endif
		endif

		if sashHeight > 2*gs_sash_width + dividerWidth then
			values "gs_horiz_div_height_08" range(gs_sash_width + dividerWidth, sashHeight - gs_sash_width - 2 * (gs_optype_m_08 = SASH_HOR_PIVOT | gs_optype_m_08 = SASH_VER_PIVOT | gs_optype_m_08 = SASH_VER_PIVOT_M) * gs_rebate_width)
		endif

		values "vgn_08"		range[1,]
		values "hgn_08"		range[1,]
		values "vgn2_08"	range[1,]
		values "hgn2_08"	range[1,]

		if gs_sash_uniform then
			iMullionStyle = iMullionStyle_00
		else
			iMullionStyle = iMullionStyle_08
		endif
		if	iMullionStyle = MULLION_NONE			|\
			iMullionStyle = MULLION_CUSTOM		|\
			iMullionStyle = MULLION_SOLID_PANEL	|\
			iMullionStyle = MULLION_VENT_PANEL	|\
			(iSashShape = SASH_SHAPE_HALFROUND		&\
			 (iMullionStyle = MULLION_SUNBURST_1	|\
			  iMullionStyle = MULLION_SUNBURST_2	|\
			  iMullionStyle = MULLION_SUNBURST_3	|\
			  iMullionStyle = MULLION_SUNBURST_4	|\
			  iMullionStyle = MULLION_SUNBURST_5	))	then

			lock "vgn_08", "hgn_08", "vgn2_08", "hgn2_08"
			hideparameter "vgn_08", "hgn_08", "vgn2_08", "hgn2_08"
		endif
		if iMullionStyle <> MULLION_DIVIDED & iMullionStyle <> MULLION_SOLID_GLAZED then
			if gs_sash_uniform | not(gs_optype_m_08 = SASH_SLIDING_VER | gs_optype_m_08 = SASH_DOUBLE_SLIDING_VER) then
				lock "vgn2_08", "hgn2_08"
				hideparameter "vgn2_08", "hgn2_08"
			endif

			if bEnabledMullionDividedPanel_08 then
				lock "gs_horiz_div_height_08"
				hideparameter "gs_horiz_div_height_08"
			endif
		endif

		if iMullionStyle = MULLION_CUSTOM & not(bLockMullion) then
			values "gs_cust_panel_08"  gs_pt
			if bEnableSecondCustPanel_08 then
				if	gs_optype_m_08 = SASH_DOUBLE_SIDE_HUNG		|\
					gs_optype_m_08 = SASH_DOUBLE_TILT_TURN		|\
					gs_optype_m_08 = SASH_DOUBLE_TILT_TURN_M	|\
					gs_optype_m_08 = SASH_SLIDING_VER			|\
					gs_optype_m_08 = SASH_DOUBLE_SLIDING_VER	|\
					gs_optype_m_08 = SASH_SLIDING_HOR			|\
					gs_optype_m_08 = SASH_SLIDING_HOR_M			|\
					gs_optype_m_08 = SASH_DOUBLE_SLIDING_HOR	|\
					gs_optype_m_08 = SASH_DOUBLE_SLIDING_HOR_M	then
					values "gs_cust_panel2_08"  gs_pt
				else
					lock "gs_cust_panel2_08"
					hideparameter "gs_cust_panel2_08"
				endif
			endif
		else
			lock "gs_cust_panel_08"
			hideparameter "gs_cust_panel_08"

			if bEnableSecondCustPanel_08 then
				lock "gs_cust_panel2_08"
				hideparameter "gs_cust_panel2_08"
			endif
		endif

		if GLOB_MODPAR_NAME = "openingAngle_08" then
			parameters openingAngle2_08 = 0
			openingAngle2_08 = 0
		endif
		if GLOB_MODPAR_NAME = "openingAngle2_08" then
			parameters openingAngle_08 = 0
			openingAngle_08 = 0
		endif
		if	gs_optype_m_08 = SASH_FIXED					|\
			gs_optype_m_08 = SASH_FIXED_SCREW			|\
			gs_optype_m_08 = SASH_SLIDING_VER			|\
			gs_optype_m_08 = SASH_DOUBLE_SLIDING_VER	|\
			gs_optype_m_08 = SASH_SLIDING_HOR			|\
			gs_optype_m_08 = SASH_SLIDING_HOR_M			|\
			gs_optype_m_08 = SASH_DOUBLE_SLIDING_HOR	|\
			gs_optype_m_08 = SASH_DOUBLE_SLIDING_HOR_M	then
			lock "openingAngle_08", "openingAngle2_08"
			hideparameter "openingAngle_08", "openingAngle2_08"
		endif
		if bEnableSlidingOpType_08 then
			if	(gs_optype_m_08 <> SASH_SLIDING_VER)			&\
				(gs_optype_m_08 <> SASH_DOUBLE_SLIDING_VER)		&\
				(gs_optype_m_08 <> SASH_SLIDING_HOR)			&\
				(gs_optype_m_08 <> SASH_SLIDING_HOR_M)			&\
				(gs_optype_m_08 <> SASH_DOUBLE_SLIDING_HOR)		&\
				(gs_optype_m_08 <> SASH_DOUBLE_SLIDING_HOR_M)	then
				lock "openingLength_08"
				hideparameter "openingLength_08"
			endif
		endif
		if bEnableSlidingOpType2MovableSash_08 then
			if	(gs_optype_m_08 <> SASH_DOUBLE_SLIDING_VER)		&\
				(gs_optype_m_08 <> SASH_DOUBLE_SLIDING_HOR)		&\
				(gs_optype_m_08 <> SASH_DOUBLE_SLIDING_HOR_M)	then
				lock "openingLength2_08"
				hideparameter "openingLength2_08"
			endif
		endif
		if	gs_optype_m_08 <> SASH_TILT_TURN &\
			gs_optype_m_08 <> SASH_TILT_TURN_M &\
			gs_optype_m_08 <> SASH_DOUBLE_TILT_TURN &\
			gs_optype_m_08 <> SASH_DOUBLE_TILT_TURN_M then
			openingAngle2_08 = 0
			parameters openingAngle2_08 = openingAngle2_08

			lock "openingAngle2_08"
			hideparameter "openingAngle2_08"
		else
			if abs(openingAngle2_08) < EPS then hideparameter "openingAngle2_08"
			if abs(openingAngle_08) < EPS & abs(openingAngle2_08) > EPS then hideparameter "openingAngle_08"
		endif

		values "openingAngle_08"	range[0,90]
		values "openingAngle2_08"	range[0,90]
		if	gs_optype_m_08 = SASH_SLIDING_VER			|\
			gs_optype_m_08 = SASH_DOUBLE_SLIDING_VER	then
			values "openingLength_08"	range[0,sashHeight/2 - gs_sash_width]
			values "openingLength2_08"	range[0,sashHeight/2 - gs_sash_width]
		endif
		if	gs_optype_m_08 = SASH_SLIDING_HOR			|\
			gs_optype_m_08 = SASH_SLIDING_HOR_M			|\
			gs_optype_m_08 = SASH_DOUBLE_SLIDING_HOR	|\
			gs_optype_m_08 = SASH_DOUBLE_SLIDING_HOR_M	then
			values "openingLength_08"	range[0,sashWidth/2 - gs_sash_width]
			values "openingLength2_08"	range[0,sashWidth/2 - gs_sash_width]
		endif
	endif

	if CasementID = 9 then

		bLockOptpyeParam = 0
		bEnableSecondCustPanel_09	= 0
		bEnableSlidingOpType_09		= 0
		bEnableSlidingOpType2MovableSash_09	= 0
		if iSashType = SASHTYPE_INDEPENDENT then
			dim iOpeningTypeEnabled[]
			gosub "IndependentOpeningTypeValues"
			bEnableSecondCustPanel_09 = bEnableSecondCustPanel
			bEnableSlidingOpType_09 = bEnableSlidingOpType
			bEnableSlidingOpType2MovableSash_09 = bEnableSlidingOpType2MovableSash
			dim OpeningTypeEnabled[]
			for i=1 to vardim1(iOpeningTypeEnabled)
				if iOpeningTypeEnabled[i] = 1 & iMullionStyle_09 = MULLION_VENT_PANEL then
					OpeningTypeEnabled[i] = stLouversinFrame
				else
					OpeningTypeEnabled[i] = stOpeningType[iOpeningTypeEnabled[i]]
				endif
			next i
			values  "gs_optype_09"	 OpeningTypeEnabled
			values "gs_optype_m_09"	iOpeningTypeEnabled
		endif
		if iSashType = SASHTYPE_DOUBLE_RIGHT then
			values "gs_optype_09"	stOpeningType[3]
			values "gs_optype_m_09"	SASH_SIDE_HUNG
			lock "gs_optype_09"
			hideparameter "gs_optype_09"
			if gs_sash_uniform then
				lock "vgn_09", "hgn_09"
				hideparameter "vgn_09", "hgn_09"
			endif
		endif
		if iSashType = SASHTYPE_DOUBLE_LEFT then
			if iWindowClass = WINCLASS_HISTORIC then
				values "gs_optype_09"	stOpeningType[3]
				values "gs_optype_m_09"	SASH_SIDE_HUNG
				bLockOptpyeParam = 1
			else
				values "gs_optype_09"	stOpeningType[3],
										stOpeningType[5],
										stOpeningType[6]

				values "gs_optype_m_09"	SASH_SIDE_HUNG,
										SASH_TILT_TURN,
										SASH_TILT_TURN_M
			endif
		endif

		if bLockOptpyeParam then
			lock	"gs_optype_09",
					"gs_optype_m_09"
		endif

		if GLOB_MODPAR_NAME = "gs_optype_09" then
			gs_optype_m_09 = SASH_FIXED
			for i=2 to vardim1(stOpeningType)
				if gs_optype_09 = stOpeningType[i] then gs_optype_m_09 = i
			next i

			parameters gs_optype_m_09 = gs_optype_m_09
		else
			gs_optype_09 = stOpeningType[gs_optype_m_09]
			parameters gs_optype_09 = gs_optype_09
		endif

		bDisableDividedSash	= (	gs_optype_m_09 = SASH_FIXED |\
								gs_optype_m_09 = SASH_SLIDING_VER |\
								gs_optype_m_09 = SASH_DOUBLE_SLIDING_VER)

		bDisableHVGrid2Sash = (gs_optype_m_09 <> SASH_FIXED)

		iMullionStyle = iMullionStyle_09
		iMullionStyleOriginal = iMullionStyleOriginal_09
		gosub "MullionStyleValues"
		bEnabledMullionDividedPanel_09 = bEnabledMullionDividedPanel

		dim MullionStyleEnabled[]
		for i=1 to vardim1(iMullionStyleEnabled)
			MullionStyleEnabled[i] = stSashType[iMullionStyleEnabled[i]]
		next i
		values  "MullionStyle_09"	 MullionStyleEnabled
		values "iMullionStyle_09"	iMullionStyleEnabled

		if iMullionStyle <> iMullionStyle_09 then
			iMullionStyle_09 = iMullionStyle
			parameters iMullionStyle_09 = iMullionStyle_09
		endif

		if bLockMullion then
			lock "MullionStyle_09", "iMullionStyle_09"
			hideparameter "MullionStyle_09", "iMullionStyle_09"
		else
			if GLOB_MODPAR_NAME = "MullionStyle_09" then
				iMullionStyle_09 = MULLION_NONE
				for i=2 to vardim1(stSashType)
					if MullionStyle_09 = stSashType[i] then iMullionStyle_09 = i
				next i

				parameters iMullionStyle_09 = iMullionStyle_09
			else
				MullionStyle_09 = stSashType[iMullionStyle_09]
				parameters MullionStyle_09 = MullionStyle_09
			endif
		endif

		if sashHeight > 2*gs_sash_width + dividerWidth then
			values "gs_horiz_div_height_09" range(gs_sash_width + dividerWidth, sashHeight - gs_sash_width - 2 * (gs_optype_m_09 = SASH_HOR_PIVOT | gs_optype_m_09 = SASH_VER_PIVOT | gs_optype_m_09 = SASH_VER_PIVOT_M) * gs_rebate_width)
		endif

		values "vgn_09"		range[1,]
		values "hgn_09"		range[1,]
		values "vgn2_09"	range[1,]
		values "hgn2_09"	range[1,]

		if gs_sash_uniform then
			iMullionStyle = iMullionStyle_00
		else
			iMullionStyle = iMullionStyle_09
		endif
		if	iMullionStyle = MULLION_NONE			|\
			iMullionStyle = MULLION_CUSTOM		|\
			iMullionStyle = MULLION_SOLID_PANEL	|\
			iMullionStyle = MULLION_VENT_PANEL	|\
			(iSashShape = SASH_SHAPE_HALFROUND		&\
			 (iMullionStyle = MULLION_SUNBURST_1	|\
			  iMullionStyle = MULLION_SUNBURST_2	|\
			  iMullionStyle = MULLION_SUNBURST_3	|\
			  iMullionStyle = MULLION_SUNBURST_4	|\
			  iMullionStyle = MULLION_SUNBURST_5	))	then

			lock "vgn_09", "hgn_09", "vgn2_09", "hgn2_09"
			hideparameter "vgn_09", "hgn_09", "vgn2_09", "hgn2_09"
		endif
		if iMullionStyle <> MULLION_DIVIDED & iMullionStyle <> MULLION_SOLID_GLAZED then
			if gs_sash_uniform | not(gs_optype_m_09 = SASH_SLIDING_VER | gs_optype_m_09 = SASH_DOUBLE_SLIDING_VER) then
				lock "vgn2_09", "hgn2_09"
				hideparameter "vgn2_09", "hgn2_09"
			endif

			if bEnabledMullionDividedPanel_09 then
				lock "gs_horiz_div_height_09"
				hideparameter "gs_horiz_div_height_09"
			endif
		endif

		if iMullionStyle = MULLION_CUSTOM & not(bLockMullion) then
			values "gs_cust_panel_09"  gs_pt
			if bEnableSecondCustPanel_09 then
				if	gs_optype_m_09 = SASH_DOUBLE_SIDE_HUNG		|\
					gs_optype_m_09 = SASH_DOUBLE_TILT_TURN		|\
					gs_optype_m_09 = SASH_DOUBLE_TILT_TURN_M	|\
					gs_optype_m_09 = SASH_SLIDING_VER			|\
					gs_optype_m_09 = SASH_DOUBLE_SLIDING_VER	|\
					gs_optype_m_09 = SASH_SLIDING_HOR			|\
					gs_optype_m_09 = SASH_SLIDING_HOR_M			|\
					gs_optype_m_09 = SASH_DOUBLE_SLIDING_HOR	|\
					gs_optype_m_09 = SASH_DOUBLE_SLIDING_HOR_M	then
					values "gs_cust_panel2_09"  gs_pt
				else
					lock "gs_cust_panel2_09"
					hideparameter "gs_cust_panel2_09"
				endif
			endif
		else
			lock "gs_cust_panel_09"
			hideparameter "gs_cust_panel_09"

			if bEnableSecondCustPanel_09 then
				lock "gs_cust_panel2_09"
				hideparameter "gs_cust_panel2_09"
			endif
		endif

		if GLOB_MODPAR_NAME = "openingAngle_09" then
			parameters openingAngle2_09 = 0
			openingAngle2_09 = 0
		endif
		if GLOB_MODPAR_NAME = "openingAngle2_09" then
			parameters openingAngle_09 = 0
			openingAngle_09 = 0
		endif
		if	gs_optype_m_09 = SASH_FIXED					|\
			gs_optype_m_09 = SASH_FIXED_SCREW			|\
			gs_optype_m_09 = SASH_SLIDING_VER			|\
			gs_optype_m_09 = SASH_DOUBLE_SLIDING_VER	|\
			gs_optype_m_09 = SASH_SLIDING_HOR			|\
			gs_optype_m_09 = SASH_SLIDING_HOR_M			|\
			gs_optype_m_09 = SASH_DOUBLE_SLIDING_HOR	|\
			gs_optype_m_09 = SASH_DOUBLE_SLIDING_HOR_M	then
			lock "openingAngle_09", "openingAngle2_09"
			hideparameter "openingAngle_09", "openingAngle2_09"
		endif
		if bEnableSlidingOpType_09 then
			if	(gs_optype_m_09 <> SASH_SLIDING_VER)			&\
				(gs_optype_m_09 <> SASH_DOUBLE_SLIDING_VER)		&\
				(gs_optype_m_09 <> SASH_SLIDING_HOR)			&\
				(gs_optype_m_09 <> SASH_SLIDING_HOR_M)			&\
				(gs_optype_m_09 <> SASH_DOUBLE_SLIDING_HOR)		&\
				(gs_optype_m_09 <> SASH_DOUBLE_SLIDING_HOR_M)	then
				lock "openingLength_09"
				hideparameter "openingLength_09"
			endif
		endif
		if bEnableSlidingOpType2MovableSash_09 then
			if	(gs_optype_m_09 <> SASH_DOUBLE_SLIDING_VER)		&\
				(gs_optype_m_09 <> SASH_DOUBLE_SLIDING_HOR)		&\
				(gs_optype_m_09 <> SASH_DOUBLE_SLIDING_HOR_M)	then
				lock "openingLength2_09"
				hideparameter "openingLength2_09"
			endif
		endif
		if	gs_optype_m_09 <> SASH_TILT_TURN &\
			gs_optype_m_09 <> SASH_TILT_TURN_M &\
			gs_optype_m_09 <> SASH_DOUBLE_TILT_TURN &\
			gs_optype_m_09 <> SASH_DOUBLE_TILT_TURN_M then
			openingAngle2_09 = 0
			parameters openingAngle2_09 = openingAngle2_09

			lock "openingAngle2_09"
			hideparameter "openingAngle2_09"
		else
			if abs(openingAngle2_09) < EPS then hideparameter "openingAngle2_09"
			if abs(openingAngle_09) < EPS & abs(openingAngle2_09) > EPS then hideparameter "openingAngle_09"
		endif

		values "openingAngle_09"	range[0,90]
		values "openingAngle2_09"	range[0,90]
		if	gs_optype_m_09 = SASH_SLIDING_VER			|\
			gs_optype_m_09 = SASH_DOUBLE_SLIDING_VER	then
			values "openingLength_09"	range[0,sashHeight/2 - gs_sash_width]
			values "openingLength2_09"	range[0,sashHeight/2 - gs_sash_width]
		endif
		if	gs_optype_m_09 = SASH_SLIDING_HOR			|\
			gs_optype_m_09 = SASH_SLIDING_HOR_M			|\
			gs_optype_m_09 = SASH_DOUBLE_SLIDING_HOR	|\
			gs_optype_m_09 = SASH_DOUBLE_SLIDING_HOR_M	then
			values "openingLength_09"	range[0,sashWidth/2 - gs_sash_width]
			values "openingLength2_09"	range[0,sashWidth/2 - gs_sash_width]
		endif
	endif

	if CasementID = 10 then

		bLockOptpyeParam = 0
		bEnableSecondCustPanel_10	= 0
		bEnableSlidingOpType_10		= 0
		bEnableSlidingOpType2MovableSash_10	= 0
		if iSashType = SASHTYPE_INDEPENDENT then
			dim iOpeningTypeEnabled[]
			gosub "IndependentOpeningTypeValues"
			bEnableSecondCustPanel_10 = bEnableSecondCustPanel
			bEnableSlidingOpType_10 = bEnableSlidingOpType
			bEnableSlidingOpType2MovableSash_10 = bEnableSlidingOpType2MovableSash
			dim OpeningTypeEnabled[]
			for i=1 to vardim1(iOpeningTypeEnabled)
				if iOpeningTypeEnabled[i] = 1 & iMullionStyle_10 = MULLION_VENT_PANEL then
					OpeningTypeEnabled[i] = stLouversinFrame
				else
					OpeningTypeEnabled[i] = stOpeningType[iOpeningTypeEnabled[i]]
				endif
			next i
			values  "gs_optype_10"	 OpeningTypeEnabled
			values "gs_optype_m_10"	iOpeningTypeEnabled
		endif
		if iSashType = SASHTYPE_DOUBLE_RIGHT then
			values "gs_optype_10"	stOpeningType[3]
			values "gs_optype_m_10"	SASH_SIDE_HUNG
			lock "gs_optype_10"
			hideparameter "gs_optype_10"
			if gs_sash_uniform then
				lock "vgn_10", "hgn_10"
				hideparameter "vgn_10", "hgn_10"
			endif
		endif
		if iSashType = SASHTYPE_DOUBLE_LEFT then
			if iWindowClass = WINCLASS_HISTORIC then
				values "gs_optype_10"	stOpeningType[3]
				values "gs_optype_m_10"	SASH_SIDE_HUNG
				bLockOptpyeParam = 1
			else
				values "gs_optype_10"	stOpeningType[3],
										stOpeningType[5],
										stOpeningType[6]

				values "gs_optype_m_10"	SASH_SIDE_HUNG,
										SASH_TILT_TURN,
										SASH_TILT_TURN_M
			endif
		endif

		if bLockOptpyeParam then
			lock	"gs_optype_10",
					"gs_optype_m_10"
		endif

		if GLOB_MODPAR_NAME = "gs_optype_10" then
			gs_optype_m_10 = SASH_FIXED
			for i=2 to vardim1(stOpeningType)
				if gs_optype_10 = stOpeningType[i] then gs_optype_m_10 = i
			next i
			parameters gs_optype_m_10 = gs_optype_m_10
		else
			gs_optype_10 = stOpeningType[gs_optype_m_10]
			parameters gs_optype_10 = gs_optype_10
		endif

		bDisableDividedSash	= (	gs_optype_m_10 = SASH_FIXED |\
								gs_optype_m_10 = SASH_SLIDING_VER |\
								gs_optype_m_10 = SASH_DOUBLE_SLIDING_VER)

		bDisableHVGrid2Sash = (gs_optype_m_10 <> SASH_FIXED)

		iMullionStyle = iMullionStyle_10
		iMullionStyleOriginal = iMullionStyleOriginal_10
		gosub "MullionStyleValues"
		bEnabledMullionDividedPanel_10 = bEnabledMullionDividedPanel

		dim MullionStyleEnabled[]
		for i=1 to vardim1(iMullionStyleEnabled)
			MullionStyleEnabled[i] = stSashType[iMullionStyleEnabled[i]]
		next i
		values  "MullionStyle_10"	 MullionStyleEnabled
		values "iMullionStyle_10"	iMullionStyleEnabled

		if iMullionStyle <> iMullionStyle_10 then
			iMullionStyle_10 = iMullionStyle
			parameters iMullionStyle_10 = iMullionStyle_10
		endif

		if bLockMullion then
			lock "MullionStyle_10", "iMullionStyle_10"
			hideparameter "MullionStyle_10", "iMullionStyle_10"
		else
			if GLOB_MODPAR_NAME = "MullionStyle_10" then
				iMullionStyle_10 = MULLION_NONE
				for i=2 to vardim1(stSashType)
					if MullionStyle_10 = stSashType[i] then iMullionStyle_10 = i
				next i

				parameters iMullionStyle_10 = iMullionStyle_10
			else
				MullionStyle_10 = stSashType[iMullionStyle_10]
				parameters MullionStyle_10 = MullionStyle_10
			endif
		endif

		if sashHeight > 2*gs_sash_width + dividerWidth then
			values "gs_horiz_div_height_10" range(gs_sash_width + dividerWidth, sashHeight - gs_sash_width - 2 * (gs_optype_m_10 = SASH_HOR_PIVOT | gs_optype_m_10 = SASH_VER_PIVOT | gs_optype_m_10 = SASH_VER_PIVOT_M) * gs_rebate_width)
		endif

		values "vgn_10"		range[1,]
		values "hgn_10"		range[1,]
		values "vgn2_10"	range[1,]
		values "hgn2_10"	range[1,]

		if gs_sash_uniform then
			iMullionStyle = iMullionStyle_00
		else
			iMullionStyle = iMullionStyle_10
		endif
		if	iMullionStyle = MULLION_NONE			|\
			iMullionStyle = MULLION_CUSTOM		|\
			iMullionStyle = MULLION_SOLID_PANEL	|\
			iMullionStyle = MULLION_VENT_PANEL	|\
			(iSashShape = SASH_SHAPE_HALFROUND		&\
			 (iMullionStyle = MULLION_SUNBURST_1	|\
			  iMullionStyle = MULLION_SUNBURST_2	|\
			  iMullionStyle = MULLION_SUNBURST_3	|\
			  iMullionStyle = MULLION_SUNBURST_4	|\
			  iMullionStyle = MULLION_SUNBURST_5	))	then

			lock "vgn_10", "hgn_10", "vgn2_10", "hgn2_10"
			hideparameter "vgn_10", "hgn_10", "vgn2_10", "hgn2_10"
		endif
		if iMullionStyle <> MULLION_DIVIDED & iMullionStyle <> MULLION_SOLID_GLAZED then
			if gs_sash_uniform | not(gs_optype_m_10 = SASH_SLIDING_VER | gs_optype_m_10 = SASH_DOUBLE_SLIDING_VER) then
				lock "vgn2_10", "hgn2_10"
				hideparameter "vgn2_10", "hgn2_10"
			endif

			if bEnabledMullionDividedPanel_10 then
				lock "gs_horiz_div_height_10"
				hideparameter "gs_horiz_div_height_10"
			endif
		endif

		if iMullionStyle = MULLION_CUSTOM & not(bLockMullion) then
			values "gs_cust_panel_10"  gs_pt
			if bEnableSecondCustPanel_10 then
				if	gs_optype_m_10 = SASH_DOUBLE_SIDE_HUNG		|\
					gs_optype_m_10 = SASH_DOUBLE_TILT_TURN		|\
					gs_optype_m_10 = SASH_DOUBLE_TILT_TURN_M	|\
					gs_optype_m_10 = SASH_SLIDING_VER			|\
					gs_optype_m_10 = SASH_DOUBLE_SLIDING_VER	|\
					gs_optype_m_10 = SASH_SLIDING_HOR			|\
					gs_optype_m_10 = SASH_SLIDING_HOR_M			|\
					gs_optype_m_10 = SASH_DOUBLE_SLIDING_HOR	|\
					gs_optype_m_10 = SASH_DOUBLE_SLIDING_HOR_M	then
					values "gs_cust_panel2_10"  gs_pt
				else
					lock "gs_cust_panel2_10"
					hideparameter "gs_cust_panel2_10"
				endif
			endif
		else
			lock "gs_cust_panel_10"
			hideparameter "gs_cust_panel_10"

			if bEnableSecondCustPanel_10 then
				lock "gs_cust_panel2_10"
				hideparameter "gs_cust_panel2_10"
			endif
		endif

		if GLOB_MODPAR_NAME = "openingAngle_10" then
			parameters openingAngle2_10 = 0
			openingAngle2_10 = 0
		endif
		if GLOB_MODPAR_NAME = "openingAngle2_10" then
			parameters openingAngle_10 = 0
			openingAngle_10 = 0
		endif
		if	gs_optype_m_10 = SASH_FIXED					|\
			gs_optype_m_10 = SASH_FIXED_SCREW			|\
			gs_optype_m_10 = SASH_SLIDING_VER			|\
			gs_optype_m_10 = SASH_DOUBLE_SLIDING_VER	|\
			gs_optype_m_10 = SASH_SLIDING_HOR			|\
			gs_optype_m_10 = SASH_SLIDING_HOR_M			|\
			gs_optype_m_10 = SASH_DOUBLE_SLIDING_HOR	|\
			gs_optype_m_10 = SASH_DOUBLE_SLIDING_HOR_M	then
			lock "openingAngle_10", "openingAngle2_10"
			hideparameter "openingAngle_10", "openingAngle2_10"
		endif
		if bEnableSlidingOpType_10 then
			if	(gs_optype_m_10 <> SASH_SLIDING_VER)			&\
				(gs_optype_m_10 <> SASH_DOUBLE_SLIDING_VER)		&\
				(gs_optype_m_10 <> SASH_SLIDING_HOR)			&\
				(gs_optype_m_10 <> SASH_SLIDING_HOR_M)			&\
				(gs_optype_m_10 <> SASH_DOUBLE_SLIDING_HOR)		&\
				(gs_optype_m_10 <> SASH_DOUBLE_SLIDING_HOR_M)	then
				lock "openingLength_10"
				hideparameter "openingLength_10"
			endif
		endif
		if bEnableSlidingOpType2MovableSash_10 then
			if	(gs_optype_m_10 <> SASH_DOUBLE_SLIDING_VER)		&\
				(gs_optype_m_10 <> SASH_DOUBLE_SLIDING_HOR)		&\
				(gs_optype_m_10 <> SASH_DOUBLE_SLIDING_HOR_M)	then
				lock "openingLength2_10"
				hideparameter "openingLength2_10"
			endif
		endif
		if	gs_optype_m_10 <> SASH_TILT_TURN &\
			gs_optype_m_10 <> SASH_TILT_TURN_M &\
			gs_optype_m_10 <> SASH_DOUBLE_TILT_TURN &\
			gs_optype_m_10 <> SASH_DOUBLE_TILT_TURN_M then
			openingAngle2_10 = 0
			parameters openingAngle2_10 = openingAngle2_10

			lock "openingAngle2_10"
			hideparameter "openingAngle2_10"
		else
			if abs(openingAngle2_10) < EPS then hideparameter "openingAngle2_10"
			if abs(openingAngle_10) < EPS & abs(openingAngle2_10) > EPS then hideparameter "openingAngle_10"
		endif

		values "openingAngle_10"	range[0,90]
		values "openingAngle2_10"	range[0,90]
		if	gs_optype_m_10 = SASH_SLIDING_VER			|\
			gs_optype_m_10 = SASH_DOUBLE_SLIDING_VER	then
			values "openingLength_10"	range[0,sashHeight/2 - gs_sash_width]
			values "openingLength2_10"	range[0,sashHeight/2 - gs_sash_width]
		endif
		if	gs_optype_m_10 = SASH_SLIDING_HOR			|\
			gs_optype_m_10 = SASH_SLIDING_HOR_M			|\
			gs_optype_m_10 = SASH_DOUBLE_SLIDING_HOR	|\
			gs_optype_m_10 = SASH_DOUBLE_SLIDING_HOR_M	then
			values "openingLength_10"	range[0,sashWidth/2 - gs_sash_width]
			values "openingLength2_10"	range[0,sashWidth/2 - gs_sash_width]
		endif
	endif

	if CasementID = 11 then

		bLockOptpyeParam = 0
		bEnableSecondCustPanel_11 	= 0
		bEnableSlidingOpType_11 	= 0
		bEnableSlidingOpType2MovableSash_11	= 0
		if iSashType = SASHTYPE_INDEPENDENT then
			dim iOpeningTypeEnabled[]
			gosub "IndependentOpeningTypeValues"
			bEnableSecondCustPanel_11 = bEnableSecondCustPanel
			bEnableSlidingOpType_11 = bEnableSlidingOpType
			bEnableSlidingOpType2MovableSash_11 = bEnableSlidingOpType2MovableSash
			dim OpeningTypeEnabled[]
			for i=1 to vardim1(iOpeningTypeEnabled)
				if iOpeningTypeEnabled[i] = 1 & iMullionStyle_11 = MULLION_VENT_PANEL then
					OpeningTypeEnabled[i] = stLouversinFrame
				else
					OpeningTypeEnabled[i] = stOpeningType[iOpeningTypeEnabled[i]]
				endif
			next i
			values  "gs_optype_11"	 OpeningTypeEnabled
			values "gs_optype_m_11"	iOpeningTypeEnabled
		endif
		if iSashType = SASHTYPE_DOUBLE_RIGHT then
			values "gs_optype_11"	stOpeningType[3]
			values "gs_optype_m_11"	SASH_SIDE_HUNG
			lock "gs_optype_11"
			hideparameter "gs_optype_11"
			if gs_sash_uniform then
				lock "vgn_11", "hgn_11"
				hideparameter "vgn_11", "hgn_11"
			endif
		endif
		if iSashType = SASHTYPE_DOUBLE_LEFT then
			if iWindowClass = WINCLASS_HISTORIC then
				values "gs_optype_11"	stOpeningType[3]
				values "gs_optype_m_11"	SASH_SIDE_HUNG
				bLockOptpyeParam = 1
			else
				values "gs_optype_11"	stOpeningType[3],
										stOpeningType[5],
										stOpeningType[6]

				values "gs_optype_m_11"	SASH_SIDE_HUNG,
										SASH_TILT_TURN,
										SASH_TILT_TURN_M
			endif
		endif

		if bLockOptpyeParam then
			lock	"gs_optype_11",
					"gs_optype_m_11"
		endif

		if GLOB_MODPAR_NAME = "gs_optype_11" then
			gs_optype_m_11 = SASH_FIXED
			for i=2 to vardim1(stOpeningType)
				if gs_optype_11 = stOpeningType[i] then gs_optype_m_11 = i
			next i

			parameters gs_optype_m_11 = gs_optype_m_11
		else
			gs_optype_11 = stOpeningType[gs_optype_m_11]
			parameters gs_optype_11 = gs_optype_11
		endif

		bDisableDividedSash	= (	gs_optype_m_11 = SASH_FIXED |\
								gs_optype_m_11 = SASH_SLIDING_VER |\
								gs_optype_m_11 = SASH_DOUBLE_SLIDING_VER)

		bDisableHVGrid2Sash = (gs_optype_m_11 <> SASH_FIXED)

		iMullionStyle = iMullionStyle_11
		iMullionStyleOriginal = iMullionStyleOriginal_11
		gosub "MullionStyleValues"
		bEnabledMullionDividedPanel_11 = bEnabledMullionDividedPanel

		dim MullionStyleEnabled[]
		for i=1 to vardim1(iMullionStyleEnabled)
			MullionStyleEnabled[i] = stSashType[iMullionStyleEnabled[i]]
		next i
		values  "MullionStyle_11"	 MullionStyleEnabled
		values "iMullionStyle_11"	iMullionStyleEnabled

		if iMullionStyle <> iMullionStyle_11 then
			iMullionStyle_11 = iMullionStyle
			parameters iMullionStyle_11 = iMullionStyle_11
		endif

		if bLockMullion then
			lock "MullionStyle_11", "iMullionStyle_11"
			hideparameter "MullionStyle_11", "iMullionStyle_11"
		else
			if GLOB_MODPAR_NAME = "MullionStyle_11" then
				iMullionStyle_11 = MULLION_NONE
				for i=2 to vardim1(stSashType)
					if MullionStyle_11 = stSashType[i] then iMullionStyle_11 = i
				next i

				parameters iMullionStyle_11 = iMullionStyle_11
			else
				MullionStyle_11 = stSashType[iMullionStyle_11]
				parameters MullionStyle_11 = MullionStyle_11
			endif
		endif

		if sashHeight > 2*gs_sash_width + dividerWidth then
			values "gs_horiz_div_height_11" range(gs_sash_width + dividerWidth, sashHeight - gs_sash_width - 2 * (gs_optype_m_11 = SASH_HOR_PIVOT | gs_optype_m_11 = SASH_VER_PIVOT | gs_optype_m_11 = SASH_VER_PIVOT_M) * gs_rebate_width)
		endif

		values "vgn_11"		range[1,]
		values "hgn_11"		range[1,]
		values "vgn2_11"	range[1,]
		values "hgn2_11"	range[1,]

		if gs_sash_uniform then
			iMullionStyle = iMullionStyle_00
		else
			iMullionStyle = iMullionStyle_11
		endif
		if	iMullionStyle = MULLION_NONE			|\
			iMullionStyle = MULLION_CUSTOM		|\
			iMullionStyle = MULLION_SOLID_PANEL	|\
			iMullionStyle = MULLION_VENT_PANEL	|\
			(iSashShape = SASH_SHAPE_HALFROUND		&\
			 (iMullionStyle = MULLION_SUNBURST_1	|\
			  iMullionStyle = MULLION_SUNBURST_2	|\
			  iMullionStyle = MULLION_SUNBURST_3	|\
			  iMullionStyle = MULLION_SUNBURST_4	|\
			  iMullionStyle = MULLION_SUNBURST_5	))	then

			lock "vgn_11", "hgn_11", "vgn2_11", "hgn2_11"
			hideparameter "vgn_11", "hgn_11", "vgn2_11", "hgn2_11"
		endif
		if iMullionStyle <> MULLION_DIVIDED & iMullionStyle <> MULLION_SOLID_GLAZED then
			if gs_sash_uniform | not(gs_optype_m_11 = SASH_SLIDING_VER | gs_optype_m_11 = SASH_DOUBLE_SLIDING_VER) then
				lock "vgn2_11", "hgn2_11"
				hideparameter "vgn2_11", "hgn2_11"
			endif

			if bEnabledMullionDividedPanel_11 then
				lock "gs_horiz_div_height_11"
				hideparameter "gs_horiz_div_height_11"
			endif
		endif

		if iMullionStyle = MULLION_CUSTOM & not(bLockMullion) then
			values "gs_cust_panel_11"  gs_pt
			if bEnableSecondCustPanel_11 then
				if	gs_optype_m_11 = SASH_DOUBLE_SIDE_HUNG		|\
					gs_optype_m_11 = SASH_DOUBLE_TILT_TURN		|\
					gs_optype_m_11 = SASH_DOUBLE_TILT_TURN_M	|\
					gs_optype_m_11 = SASH_SLIDING_VER			|\
					gs_optype_m_11 = SASH_DOUBLE_SLIDING_VER	|\
					gs_optype_m_11 = SASH_SLIDING_HOR			|\
					gs_optype_m_11 = SASH_SLIDING_HOR_M			|\
					gs_optype_m_11 = SASH_DOUBLE_SLIDING_HOR	|\
					gs_optype_m_11 = SASH_DOUBLE_SLIDING_HOR_M	then
					values "gs_cust_panel2_11"  gs_pt
				else
					lock "gs_cust_panel2_11"
					hideparameter "gs_cust_panel2_11"
				endif
			endif
		else
			lock "gs_cust_panel_11"
			hideparameter "gs_cust_panel_11"

			if bEnableSecondCustPanel_11 then
				lock "gs_cust_panel2_11"
				hideparameter "gs_cust_panel2_11"
			endif
		endif

		if GLOB_MODPAR_NAME = "openingAngle_11" then
			parameters openingAngle2_11 = 0
			openingAngle2_11 = 0
		endif
		if GLOB_MODPAR_NAME = "openingAngle2_11" then
			parameters openingAngle_11 = 0
			openingAngle_11 = 0
		endif
		if	gs_optype_m_11 = SASH_FIXED					|\
			gs_optype_m_11 = SASH_FIXED_SCREW			|\
			gs_optype_m_11 = SASH_SLIDING_VER			|\
			gs_optype_m_11 = SASH_DOUBLE_SLIDING_VER	|\
			gs_optype_m_11 = SASH_SLIDING_HOR			|\
			gs_optype_m_11 = SASH_SLIDING_HOR_M			|\
			gs_optype_m_11 = SASH_DOUBLE_SLIDING_HOR	|\
			gs_optype_m_11 = SASH_DOUBLE_SLIDING_HOR_M	then
			lock "openingAngle_11", "openingAngle2_11"
			hideparameter "openingAngle_11", "openingAngle2_11"
		endif
		if bEnableSlidingOpType_11 then
			if	(gs_optype_m_11 <> SASH_SLIDING_VER)			&\
				(gs_optype_m_11 <> SASH_DOUBLE_SLIDING_VER)		&\
				(gs_optype_m_11 <> SASH_SLIDING_HOR)			&\
				(gs_optype_m_11 <> SASH_SLIDING_HOR_M)			&\
				(gs_optype_m_11 <> SASH_DOUBLE_SLIDING_HOR)		&\
				(gs_optype_m_11 <> SASH_DOUBLE_SLIDING_HOR_M)	then
				lock "openingLength_11"
				hideparameter "openingLength_11"
			endif
		endif
		if bEnableSlidingOpType2MovableSash_11 then
			if	(gs_optype_m_11 <> SASH_DOUBLE_SLIDING_VER)		&\
				(gs_optype_m_11 <> SASH_DOUBLE_SLIDING_HOR)		&\
				(gs_optype_m_11 <> SASH_DOUBLE_SLIDING_HOR_M)	then
				lock "openingLength2_11"
				hideparameter "openingLength2_11"
			endif
		endif
		if	gs_optype_m_11 <> SASH_TILT_TURN &\
			gs_optype_m_11 <> SASH_TILT_TURN_M &\
			gs_optype_m_11 <> SASH_DOUBLE_TILT_TURN &\
			gs_optype_m_11 <> SASH_DOUBLE_TILT_TURN_M then
			openingAngle2_11 = 0
			parameters openingAngle2_11 = openingAngle2_11

			lock "openingAngle2_11"
			hideparameter "openingAngle2_11"
		else
			if abs(openingAngle2_11) < EPS then hideparameter "openingAngle2_11"
			if abs(openingAngle_11) < EPS & abs(openingAngle2_11) > EPS then hideparameter "openingAngle_11"
		endif

		values "openingAngle_11"	range[0,90]
		values "openingAngle2_11"	range[0,90]
		if	gs_optype_m_11 = SASH_SLIDING_VER			|\
			gs_optype_m_11 = SASH_DOUBLE_SLIDING_VER	then
			values "openingLength_11"	range[0,sashHeight/2 - gs_sash_width]
			values "openingLength2_11"	range[0,sashHeight/2 - gs_sash_width]
		endif
		if	gs_optype_m_11 = SASH_SLIDING_HOR			|\
			gs_optype_m_11 = SASH_SLIDING_HOR_M			|\
			gs_optype_m_11 = SASH_DOUBLE_SLIDING_HOR	|\
			gs_optype_m_11 = SASH_DOUBLE_SLIDING_HOR_M	then
			values "openingLength_11"	range[0,sashWidth/2 - gs_sash_width]
			values "openingLength2_11"	range[0,sashWidth/2 - gs_sash_width]
		endif
	endif
return


! =============================================================================
!
! =============================================================================

"LockSashParameters":
	if CasementID = 1 then
		lock	"MullionStyle_01",
				"iMullionStyle_01",
				"vgn_01",
				"hgn_01",
				"vgn2_01",
				"hgn2_01",
				"gs_cust_panel_01",
				"openingAngle_01",
				"openingAngle2_01",
				"gs_optype_01",
				"gs_optype_m_01"

		hideparameter	"MullionStyle_01",
						"iMullionStyle_01",
						"vgn_01",
						"hgn_01",
						"vgn2_01",
						"hgn2_01",
						"gs_cust_panel_01",
						"openingAngle_01",
						"openingAngle2_01",
						"gs_optype_01",
						"gs_optype_m_01"

		if bEnabledMullionDividedPanel_01 then
			lock "gs_horiz_div_height_01"
			hideparameter "gs_horiz_div_height_01"
		endif

		if bEnableSlidingOpType_01 then
			lock "openingLength_01"
			hideparameter	"openingLength_01"
		endif

		if bEnableSlidingOpType2MovableSash_01 then
			lock "openingLength2_01"
			hideparameter	"openingLength2_01"
		endif

		if bEnableSecondCustPanel_01 then
			lock "gs_cust_panel2_01"
			hideparameter	"gs_cust_panel2_01"
		endif
	endif

	if CasementID = 2 then
		lock	"MullionStyle_02",
				"iMullionStyle_02",
				"vgn_02",
				"hgn_02",
				"vgn2_02",
				"hgn2_02",
				"gs_cust_panel_02",
				"openingAngle_02",
				"openingAngle2_02",
				"gs_optype_02",
				"gs_optype_m_02"

		hideparameter	"MullionStyle_02",
						"iMullionStyle_02",
						"vgn_02",
						"hgn_02",
						"vgn2_02",
						"hgn2_02",
						"gs_cust_panel_02",
						"openingAngle_02",
						"openingAngle2_02",
						"gs_optype_02",
						"gs_optype_m_02"

		if bEnabledMullionDividedPanel_02 then
			lock "gs_horiz_div_height_02"
			hideparameter "gs_horiz_div_height_02"
		endif

		if bEnableSlidingOpType_02 then
			lock "openingLength_02"
			hideparameter	"openingLength_02"
		endif

		if bEnableSlidingOpType2MovableSash_02 then
			lock "openingLength2_02"
			hideparameter	"openingLength2_02"
		endif

		if bEnableSecondCustPanel_02 then
			lock "gs_cust_panel2_02"
		 	hideparameter	"gs_cust_panel2_02"
		endif
	endif

	if CasementID = 3 then
		lock	"MullionStyle_03",
				"iMullionStyle_03",
				"vgn_03",
				"hgn_03",
				"vgn2_03",
				"hgn2_03",
				"gs_cust_panel_03",
				"openingAngle_03",
				"openingAngle2_03",
				"gs_optype_03",
				"gs_optype_m_03"

		hideparameter	"MullionStyle_03",
						"iMullionStyle_03",
						"vgn_03",
						"hgn_03",
						"vgn2_03",
						"hgn2_03",
						"gs_cust_panel_03",
						"openingAngle_03",
						"openingAngle2_03",
						"gs_optype_03",
						"gs_optype_m_03"

		if bEnabledMullionDividedPanel_03 then
			lock "gs_horiz_div_height_03"
			hideparameter "gs_horiz_div_height_03"
		endif

		if bEnableSlidingOpType_03 then
			lock "openingLength_03"
			hideparameter	"openingLength_03"
		endif

		if bEnableSlidingOpType2MovableSash_03	then
			lock "openingLength2_03"
			hideparameter	"openingLength2_03"
		endif

		if bEnableSecondCustPanel_03 then
			lock "gs_cust_panel2_03"
			hideparameter	"gs_cust_panel2_03"
		endif
	endif

	if CasementID = 4 then
		lock	"MullionStyle_04",
				"iMullionStyle_04",
				"vgn_04",
				"hgn_04",
				"vgn2_04",
				"hgn2_04",
				"gs_cust_panel_04",
				"openingAngle_04",
				"openingAngle2_04",
				"gs_optype_04",
				"gs_optype_m_04"

		hideparameter	"MullionStyle_04",
						"iMullionStyle_04",
						"vgn_04",
						"hgn_04",
						"vgn2_04",
						"hgn2_04",
						"gs_cust_panel_04",
						"openingAngle_04",
						"openingAngle2_04",
						"gs_optype_04",
						"gs_optype_m_04"

		if bEnabledMullionDividedPanel_04 then
			lock "gs_horiz_div_height_04"
			hideparameter "gs_horiz_div_height_04"
		endif

		if bEnableSlidingOpType_04 then
			lock "openingLength_04"
			hideparameter	"openingLength_04"
		endif

		if bEnableSlidingOpType2MovableSash_04 then
			lock "openingLength2_04"
			hideparameter	"openingLength2_04"
		endif

		if bEnableSecondCustPanel_04 then
			lock "gs_cust_panel2_04"
			hideparameter	"gs_cust_panel2_04"
		endif
	endif

	if CasementID = 5 then
		lock	"MullionStyle_05",
				"iMullionStyle_05",
				"vgn_05",
				"hgn_05",
				"vgn2_05",
				"hgn2_05",
				"gs_cust_panel_05",
				"openingAngle_05",
				"openingAngle2_05",
				"gs_optype_05",
				"gs_optype_m_05"

		hideparameter	"MullionStyle_05",
						"iMullionStyle_05",
						"vgn_05",
						"hgn_05",
						"vgn2_05",
						"hgn2_05",
						"gs_cust_panel_05",
						"openingAngle_05",
						"openingAngle2_05",
						"gs_optype_05",
						"gs_optype_m_05"

		if bEnabledMullionDividedPanel_05 then
			lock "gs_horiz_div_height_05"
			hideparameter "gs_horiz_div_height_05"
		endif

		if bEnableSlidingOpType_05 then
			lock "openingLength_05"
			hideparameter	"openingLength_05"
		endif

		if bEnableSlidingOpType2MovableSash_05 then
			lock "openingLength2_05"
			hideparameter	"openingLength2_05"
		endif

		if bEnableSecondCustPanel_05 then
			lock "gs_cust_panel2_05"
			hideparameter	"gs_cust_panel2_05"
		endif
	endif

	if CasementID = 6 then
		lock	"MullionStyle_06",
				"iMullionStyle_06",
				"vgn_06",
				"hgn_06",
				"vgn2_06",
				"hgn2_06",
				"gs_cust_panel_06",
				"openingAngle_06",
				"openingAngle2_06",
				"gs_optype_06",
				"gs_optype_m_06"

		hideparameter	"MullionStyle_06",
						"iMullionStyle_06",
						"vgn_06",
						"hgn_06",
						"vgn2_06",
						"hgn2_06",
						"gs_cust_panel_06",
						"openingAngle_06",
						"openingAngle2_06",
						"gs_optype_06",
						"gs_optype_m_06"

		if bEnabledMullionDividedPanel_06 then
			lock "gs_horiz_div_height_06"
			hideparameter "gs_horiz_div_height_06"
		endif

		if bEnableSlidingOpType_06 then
			lock "openingLength_06"
			hideparameter	"openingLength_06"
		endif

		if bEnableSlidingOpType2MovableSash_06 then
			lock "openingLength2_06"
			hideparameter	"openingLength2_06"
		endif

		if bEnableSecondCustPanel_06 then
			lock "gs_cust_panel2_06"
			hideparameter	"gs_cust_panel2_06"
		endif
	endif

	if CasementID = 7 then
		lock	"MullionStyle_07",
				"iMullionStyle_07",
				"vgn_07",
				"hgn_07",
				"vgn2_07",
				"hgn2_07",
				"gs_cust_panel_07",
				"openingAngle_07",
				"openingAngle2_07",
				"gs_optype_07",
				"gs_optype_m_07"

		hideparameter	"MullionStyle_07",
						"iMullionStyle_07",
						"vgn_07",
						"hgn_07",
						"vgn2_07",
						"hgn2_07",
						"gs_cust_panel_07",
						"openingAngle_07",
						"openingAngle2_07",
						"gs_optype_07",
						"gs_optype_m_07"

		if bEnabledMullionDividedPanel_07 then
			lock "gs_horiz_div_height_07"
			hideparameter "gs_horiz_div_height_07"
		endif

		if bEnableSlidingOpType_07 then
			lock "openingLength_07"
			hideparameter	"openingLength_07"
		endif

		if bEnableSlidingOpType2MovableSash_07 then
			lock "openingLength2_07"
			hideparameter	"openingLength2_07"
		endif

		if bEnableSecondCustPanel_07 then
			lock "gs_cust_panel2_07"
			hideparameter	"gs_cust_panel2_07"
		endif
	endif

	if CasementID = 8 then
		lock	"MullionStyle_08",
				"iMullionStyle_08",
				"vgn_08",
				"hgn_08",
				"vgn2_08",
				"hgn2_08",
				"gs_cust_panel_08",
				"openingAngle_08",
				"openingAngle2_08",
				"gs_optype_08",
				"gs_optype_m_08"

		hideparameter	"MullionStyle_08",
						"iMullionStyle_08",
						"vgn_08",
						"hgn_08",
						"vgn2_08",
						"hgn2_08",
						"gs_cust_panel_08",
						"openingAngle_08",
						"openingAngle2_08",
						"gs_optype_08",
						"gs_optype_m_08"

		if bEnabledMullionDividedPanel_08 then
			lock "gs_horiz_div_height_08"
			hideparameter "gs_horiz_div_height_08"
		endif

		if bEnableSlidingOpType_08 then
			lock "openingLength_08"
			hideparameter	"openingLength_08"
		endif

		if bEnableSlidingOpType2MovableSash_08 then
			lock "openingLength2_08"
			hideparameter	"openingLength2_08"
		endif

		if bEnableSecondCustPanel_08 then
			lock "gs_cust_panel2_08"
			hideparameter	"gs_cust_panel2_08"
		endif
	endif

	if CasementID = 9 then
		lock	"MullionStyle_09",
				"iMullionStyle_09",
				"vgn_09",
				"hgn_09",
				"vgn2_09",
				"hgn2_09",
				"gs_cust_panel_09",
				"openingAngle_09",
				"openingAngle2_09",
				"gs_optype_09",
				"gs_optype_m_09"

		hideparameter	"MullionStyle_09",
						"iMullionStyle_09",
						"vgn_09",
						"hgn_09",
						"vgn2_09",
						"hgn2_09",
						"gs_cust_panel_09",
						"openingAngle_09",
						"openingAngle2_09",
						"gs_optype_09",
						"gs_optype_m_09"

		if bEnabledMullionDividedPanel_09 then
			lock "gs_horiz_div_height_09"
			hideparameter "gs_horiz_div_height_09"
		endif

		if bEnableSlidingOpType_09 then
			lock "openingLength_09"
			hideparameter	"openingLength_09"
		endif

		if bEnableSlidingOpType2MovableSash_09 then
			lock "openingLength2_09"
			hideparameter	"openingLength2_09"
		endif

		if bEnableSecondCustPanel_09 then
			lock "gs_cust_panel2_09"
			hideparameter	"gs_cust_panel2_09"
		endif
	endif

	if CasementID = 10 then
		lock	"MullionStyle_10",
				"iMullionStyle_10",
				"vgn_10",
				"hgn_10",
				"vgn2_10",
				"hgn2_10",
				"gs_cust_panel_10",
				"openingAngle_10",
				"openingAngle2_10",
				"gs_optype_10",
				"gs_optype_m_10"

		hideparameter	"MullionStyle_10",
						"iMullionStyle_10",
						"vgn_10",
						"hgn_10",
						"vgn2_10",
						"hgn2_10",
						"gs_cust_panel_10",
						"openingAngle_10",
						"openingAngle2_10",
						"gs_optype_10",
						"gs_optype_m_10"

		if bEnabledMullionDividedPanel_10 then
			lock "gs_horiz_div_height_10"
			hideparameter "gs_horiz_div_height_10"
		endif

		if bEnableSlidingOpType_10 then
			lock "openingLength_10"
			hideparameter	"openingLength_10"
		endif

		if bEnableSlidingOpType2MovableSash_10 then
			lock "openingLength2_10"
			hideparameter	"openingLength2_10"
		endif

		if bEnableSecondCustPanel_10 then
			lock "gs_cust_panel2_10"
			hideparameter	"gs_cust_panel2_10"
		endif
	endif

	if CasementID = 11 then
		lock	"MullionStyle_11",
				"iMullionStyle_11",
				"vgn_11",
				"hgn_11",
				"vgn2_11",
				"hgn2_11",
				"gs_cust_panel_11",
				"openingAngle_11",
				"openingAngle2_11",
				"gs_optype_11",
				"gs_optype_m_11"

		hideparameter	"MullionStyle_11",
						"iMullionStyle_11",
						"vgn_11",
						"hgn_11",
						"vgn2_11",
						"hgn2_11",
						"gs_cust_panel_11",
						"openingAngle_11",
						"openingAngle2_11",
						"gs_optype_11",
						"gs_optype_m_11"

		if bEnabledMullionDividedPanel_11 then
			lock "gs_horiz_div_height_11"
			hideparameter "gs_horiz_div_height_11"
		endif

		if bEnableSlidingOpType_11 then
			lock "openingLength_11"
			hideparameter	"openingLength_11"
		endif

		if bEnableSlidingOpType2MovableSash_11 then
			lock "openingLength2_11"
			hideparameter	"openingLength2_11"
		endif

		if bEnableSecondCustPanel_11 then
			lock "gs_cust_panel2_11"
			hideparameter	"gs_cust_panel2_11"
		endif
	endif
return


! =============================================================================
!
! =============================================================================

"MullionStyleValues":
	bEnabledMullionDividedPanel = 0

	dim iMullionStyleEnabled[]
	idx = 1
	iMullionStyleEnabled[idx] = MULLION_NONE:		idx = idx + 1
	if iSashShape <> SASH_SHAPE_QUARTERROUND then
		iMullionStyleEnabled[idx] = MULLION_HVGRID:		idx = idx + 1
	endif
	if iSashShape = SASH_SHAPE_RECTANGULAR & iWindowClass <> WINCLASS_HISTORIC then
		iMullionStyleEnabled[idx] = MULLION_EDITABLEGRID:	idx = idx + 1
	else
		if iMullionStyle = MULLION_EDITABLEGRID then
			iMullionStyle = MULLION_HVGRID
		endif
	endif
	if ((isMainSash & not(bDisableDividedSash)) | not(bFoundFixMainSash | bFoundNonMainSash | bDisableDividedSash)) &\
		not(isWindow) &\
		iSashShape = SASH_SHAPE_RECTANGULAR then
		iMullionStyleEnabled[idx] = MULLION_FRENCH_PANEL:	idx = idx + 1
	else
		if iMullionStyle = MULLION_FRENCH_PANEL then
			iMullionStyle = MULLION_HVGRID
		endif
	endif
	if ((isMainSash & not(bDisableDividedSash) & not(gs_sash_uniform)) | not(bFoundFixMainSash | bFoundNonMainSash | bDisableDividedSash)) &\
		not(iWindowClass = WINCLASS_HISTORIC | iWindowClass = WINCLASS_SINGLE_HUNG | iWindowClass = WINCLASS_DOUBLE_HUNG) &\
		iSashShape = SASH_SHAPE_RECTANGULAR then
			iMullionStyleEnabled[idx] = MULLION_DIVIDED:		idx = idx + 1
			bEnabledMullionDividedPanel = 1
	else
		if iMullionStyle = MULLION_DIVIDED then
			iMullionStyle = MULLION_NONE
		endif
	endif
	if ((isMainSash & not(bDisableDividedSash) & not(gs_sash_uniform)) | not(bFoundFixMainSash | bFoundNonMainSash | bDisableDividedSash)) &\
		not(isWindow) & iSashShape = SASH_SHAPE_RECTANGULAR then
			iMullionStyleEnabled[idx] = MULLION_SOLID_GLAZED:		idx = idx + 1
	else
		if iMullionStyle = MULLION_SOLID_GLAZED then
			iMullionStyle = MULLION_NONE
		endif
	endif

	if (((isMainSash | isUpTransomSash) & not(bDisableHVGrid2Sash) & not(gs_sash_uniform)) | not(bFoundNonMainSash | bFoundNonFixMainSash)) &\
		not(isWindow) & iSashShape = SASH_SHAPE_RECTANGULAR then
			iMullionStyleEnabled[idx] = MULLION_DIVIDED_FRAME:	idx = idx + 1
	else
		if iMullionStyle = MULLION_DIVIDED_FRAME then
			iMullionStyle = MULLION_HVGRID
		endif
	endif
	iMullionStyleEnabled[idx] = MULLION_SOLID_PANEL:	idx = idx + 1

	if iSashShape = SASH_SHAPE_RECTANGULAR & iWindowClass <> WINCLASS_HISTORIC & iWindowClass <> WINCLASS_HORIZONTAL_SLIDING then
		iMullionStyleEnabled[idx] = MULLION_VENT_PANEL:		idx = idx + 1
		bEnabledMullionVentPanel = 1
	else
		if iMullionStyle = MULLION_VENT_PANEL then
			iMullionStyle = MULLION_HVGRID
		endif
	endif

	if isWindow & ((iSashShape = SASH_SHAPE_ARCHED & bSemicircularArchtop) | iSashShape = SASH_SHAPE_HALFROUND | iSashShape = SASH_SHAPE_QUARTERROUND) then
		iMullionStyleEnabled[idx] = MULLION_SUNBURST_1:		idx = idx + 1
		iMullionStyleEnabled[idx] = MULLION_SUNBURST_2:		idx = idx + 1
		iMullionStyleEnabled[idx] = MULLION_SUNBURST_3:		idx = idx + 1
		iMullionStyleEnabled[idx] = MULLION_SUNBURST_4:		idx = idx + 1
		if iSashShape <> SASH_SHAPE_QUARTERROUND then
			iMullionStyleEnabled[idx] = MULLION_SUNBURST_5:		idx = idx + 1
			if iSashShape = SASH_SHAPE_ARCHED then
				iMullionStyleEnabled[idx] = MULLION_SUNBURST_6:		idx = idx + 1
			else
				if iMullionStyle = MULLION_SUNBURST_6 then
					iMullionStyle = MULLION_HVGRID
				endif
			endif
		endif
	else
		if	iMullionStyle = MULLION_SUNBURST_1 |\
			iMullionStyle = MULLION_SUNBURST_2 |\
			iMullionStyle = MULLION_SUNBURST_3 |\
			iMullionStyle = MULLION_SUNBURST_4 |\
			iMullionStyle = MULLION_SUNBURST_5 |\
			iMullionStyle = MULLION_SUNBURST_6 then
				iMullionStyle = MULLION_HVGRID
		endif
	endif
	iMullionStyleEnabled[idx] = MULLION_CUSTOM:		idx = idx + 1
return


! =============================================================================
!
! =============================================================================

"IndependentOpeningTypeValues":

	dim iOpeningTypeEnabled[]

	if iSashShape = SASH_SHAPE_RECTANGULAR then
		if	iWindowClass <> WINCLASS_HISTORIC &\
			iWindowClass <> WINCLASS_SINGLE_HUNG &\
			iWindowClass <> WINCLASS_DOUBLE_HUNG &\
			iWindowClass <> WINCLASS_HORIZONTAL_SLIDING &\
			iWindowClass <> WINCLASS_DOORSASH then

			iOpeningTypeEnabled[ 1] = SASH_FIXED
			iOpeningTypeEnabled[ 2] = SASH_FIXED_SCREW
			iOpeningTypeEnabled[ 3] = SASH_SIDE_HUNG
			iOpeningTypeEnabled[ 4] = SASH_SIDE_HUNG_M
			iOpeningTypeEnabled[ 5] = SASH_BOTTOM_HUNG
			iOpeningTypeEnabled[ 6] = SASH_TOP_HUNG
			iOpeningTypeEnabled[ 7] = SASH_TILT_TURN
			iOpeningTypeEnabled[ 8] = SASH_TILT_TURN_M
			iOpeningTypeEnabled[ 9] = SASH_HOR_PIVOT
			iOpeningTypeEnabled[10] = SASH_VER_PIVOT
			iOpeningTypeEnabled[11] = SASH_VER_PIVOT_M
			iOpeningTypeEnabled[12] = SASH_DOUBLE_SIDE_HUNG
			iOpeningTypeEnabled[13] = SASH_SLIDING_HOR
			iOpeningTypeEnabled[14] = SASH_SLIDING_HOR_M
			iOpeningTypeEnabled[15] = SASH_DOUBLE_SLIDING_HOR
			iOpeningTypeEnabled[16] = SASH_DOUBLE_SLIDING_HOR_M
			iOpeningTypeEnabled[17] = SASH_SLIDING_VER
			iOpeningTypeEnabled[18] = SASH_DOUBLE_SLIDING_VER
		endif
		if iWindowClass = WINCLASS_DOORSASH then
			iOpeningTypeEnabled[ 1] = SASH_FIXED
			iOpeningTypeEnabled[ 2] = SASH_FIXED_SCREW
			iOpeningTypeEnabled[ 3] = SASH_SIDE_HUNG
			iOpeningTypeEnabled[ 4] = SASH_SIDE_HUNG_M
			iOpeningTypeEnabled[ 5] = SASH_BOTTOM_HUNG
			iOpeningTypeEnabled[ 6] = SASH_TOP_HUNG
			iOpeningTypeEnabled[ 7] = SASH_TILT_TURN
			iOpeningTypeEnabled[ 8] = SASH_TILT_TURN_M
			iOpeningTypeEnabled[ 9] = SASH_HOR_PIVOT
			iOpeningTypeEnabled[10] = SASH_VER_PIVOT
			iOpeningTypeEnabled[11] = SASH_VER_PIVOT_M
			iOpeningTypeEnabled[12] = SASH_DOUBLE_SIDE_HUNG
			iOpeningTypeEnabled[13] = SASH_SLIDING_HOR
			iOpeningTypeEnabled[14] = SASH_SLIDING_HOR_M
			iOpeningTypeEnabled[15] = SASH_DOUBLE_SLIDING_HOR
			iOpeningTypeEnabled[16] = SASH_DOUBLE_SLIDING_HOR_M
			iOpeningTypeEnabled[17] = SASH_SLIDING_VER
			iOpeningTypeEnabled[18] = SASH_DOUBLE_SLIDING_VER
		endif
		if iWindowClass = WINCLASS_HISTORIC then
			if isMainSash then
				iOpeningTypeEnabled[1] = SASH_FIXED
				iOpeningTypeEnabled[2] = SASH_SIDE_HUNG
				iOpeningTypeEnabled[3] = SASH_SIDE_HUNG_M
			else
				iOpeningTypeEnabled[1] = SASH_FIXED
				iOpeningTypeEnabled[2] = SASH_SIDE_HUNG
				iOpeningTypeEnabled[3] = SASH_SIDE_HUNG_M
				iOpeningTypeEnabled[4] = SASH_BOTTOM_HUNG
				iOpeningTypeEnabled[5] = SASH_TOP_HUNG
			endif
		endif
		if iWindowClass = WINCLASS_SINGLE_HUNG then
			iOpeningTypeEnabled[1] = SASH_SLIDING_VER
			bLockOptpyeParam = 1
		endif
		if iWindowClass = WINCLASS_DOUBLE_HUNG then
			iOpeningTypeEnabled[1] = SASH_DOUBLE_SLIDING_VER
			bLockOptpyeParam = 1
		endif
		if iWindowClass = WINCLASS_HORIZONTAL_SLIDING then
			iOpeningTypeEnabled[1] = SASH_DOUBLE_SLIDING_HOR
			bLockOptpyeParam = 1
		endif
	endif
	if	iSashShape = SASH_SHAPE_ARCHED |\
		iSashShape = SASH_SHAPE_TRAPEZOID then
		if (iWindowClass = WINCLASS_DOORSASH) | ((iSashShape = SASH_SHAPE_ARCHED) & isUpTransomSash) then
			iOpeningTypeEnabled[1] = SASH_FIXED
			iOpeningTypeEnabled[2] = SASH_FIXED_SCREW
			iOpeningTypeEnabled[3] = SASH_BOTTOM_HUNG
		else
			iOpeningTypeEnabled[1] = SASH_FIXED
			iOpeningTypeEnabled[2] = SASH_FIXED_SCREW
			iOpeningTypeEnabled[3] = SASH_SIDE_HUNG
			iOpeningTypeEnabled[4] = SASH_SIDE_HUNG_M
			iOpeningTypeEnabled[5] = SASH_BOTTOM_HUNG
			iOpeningTypeEnabled[6] = SASH_TILT_TURN
			iOpeningTypeEnabled[7] = SASH_TILT_TURN_M
		endif
	endif
	if iSashShape = SASH_SHAPE_HALFROUND then
		iOpeningTypeEnabled[1] = SASH_FIXED
		iOpeningTypeEnabled[2] = SASH_FIXED_SCREW
		iOpeningTypeEnabled[3] = SASH_BOTTOM_HUNG
	endif
	if	iSashShape = SASH_SHAPE_ROUND	|\
		iSashShape = SASH_SHAPE_OVAL	|\
		iSashShape = SASH_SHAPE_MULTISIDE then
		iOpeningTypeEnabled[1] = SASH_FIXED
		iOpeningTypeEnabled[2] = SASH_VER_PIVOT
	endif
	if	iSashShape = SASH_SHAPE_PENTAGON	|\
		iSashShape = SASH_SHAPE_TRIANGLE	|\
		iSashShape = SASH_SHAPE_EYEBROWS	|\
		iSashShape = SASH_SHAPE_QUARTERROUND |\
		iSashShape = SASH_SHAPE_RHOMBUS	then
		iOpeningTypeEnabled[1] = SASH_FIXED
		bLockOptpyeParam = 1
	endif
	if iSashShape = SASH_SHAPE_PARALLELOGRAM then
		iOpeningTypeEnabled[1] = SASH_FIXED
		iOpeningTypeEnabled[2] = SASH_FIXED_SCREW
		iOpeningTypeEnabled[3] = SASH_SIDE_HUNG
		iOpeningTypeEnabled[4] = SASH_SIDE_HUNG_M
	endif

	bEnableSecondCustPanel = 0
	bEnableSlidingOpType = 0
	bEnableSlidingOpType2MovableSash = 0
	for i = 1 to vardim1(iOpeningTypeEnabled)
		if	iOpeningTypeEnabled[i] = SASH_DOUBLE_SIDE_HUNG		|\
			iOpeningTypeEnabled[i] = SASH_DOUBLE_TILT_TURN		|\
			iOpeningTypeEnabled[i] = SASH_DOUBLE_TILT_TURN_M	|\
			iOpeningTypeEnabled[i] = SASH_SLIDING_VER			|\
			iOpeningTypeEnabled[i] = SASH_DOUBLE_SLIDING_VER	|\
			iOpeningTypeEnabled[i] = SASH_SLIDING_HOR			|\
			iOpeningTypeEnabled[i] = SASH_SLIDING_HOR_M			|\
			iOpeningTypeEnabled[i] = SASH_DOUBLE_SLIDING_HOR	|\
			iOpeningTypeEnabled[i] = SASH_DOUBLE_SLIDING_HOR_M	then

			bEnableSecondCustPanel = 1
		endif

		if	iOpeningTypeEnabled[i] = SASH_SLIDING_VER			|\
			iOpeningTypeEnabled[i] = SASH_DOUBLE_SLIDING_VER	|\
			iOpeningTypeEnabled[i] = SASH_SLIDING_HOR			|\
			iOpeningTypeEnabled[i] = SASH_SLIDING_HOR_M			|\
			iOpeningTypeEnabled[i] = SASH_DOUBLE_SLIDING_HOR	|\
			iOpeningTypeEnabled[i] = SASH_DOUBLE_SLIDING_HOR_M	then

			bEnableSlidingOpType = 1
		endif

		if	iOpeningTypeEnabled[i] = SASH_DOUBLE_SLIDING_VER	|\
			iOpeningTypeEnabled[i] = SASH_DOUBLE_SLIDING_HOR	|\
			iOpeningTypeEnabled[i] = SASH_DOUBLE_SLIDING_HOR_M	then

			bEnableSlidingOpType2MovableSash = 1
		endif
	next i
return


! =============================================================================
! Glass shape Calculation
! =============================================================================
! input:
!	glassWidth
!	glassHeight
!	sashShape
!	iMullionStyle
! output:
!	PanelGlassArea
! =============================================================================

"CalculateGlassArea":

	glassArea = 0
	if sashShape = SASH_SHAPE_RECTANGULAR then
		glassArea = glassWidth * glassHeight
	endif

	if sashShape = SASH_SHAPE_ARCHED then
		if (glassHeight - glassShoulderHeight) < (glassWidth / 2) then
			glassRectArea	= glassWidth * glassShoulderHeight

			archHeight		= (glassHeight - glassShoulderHeight)
			archRadius		= ((glassWidth^2 / 4) + archHeight^2) / (2 * archHeight)
			triangleX		= glassWidth/2
			triangleY		= SQR(archRadius^2 - triangleX^2)
			alpha			= ASN(triangleX/archRadius) * 2
			triangleArea	= triangleX * TriangleY
			sectorArea		= (alpha/360)*archRadius^2*PI
			glassArchArea	= sectorArea - triangleArea
		else
			glassRectArea	= glassWidth * glassHeight - (glassWidth / 2)
			glassArchArea	= ((glassWidth / 2)^2 * PI) / 2
		endif
		glassArea 		= glassRectArea + glassArchArea
	endif

	if sashShape = SASH_SHAPE_HALFROUND then
		glassArea = (glassHeight)^2 * PI / 2
	endif

	if sashShape = SASH_SHAPE_ROUND then
		glassArea = (glassHeight/2)^2 * PI
	endif

	if sashShape = SASH_SHAPE_OVAL then
		glassArea = (glassWidth / 2) * (glassHeight / 2) * PI
	endif

	if sashShape = SASH_SHAPE_MULTISIDE then
		bszog = 360 / gs_numOfSides
		if gs_numOfSides mod 2 = 0 then
			if gs_numOfSides mod 4 = 2 then
				r = glassWidth / 2
			else
				r = (glassWidth / 2)/cos(bszog / 2)
			endif
		else
			r = glassWidth / (2 * sin(bszog * int(gs_numOfSides / 2)/2))
		endif

		glassArea = gs_numOfSides / 2 * r^2 * sin(360/gs_numOfSides)
	endif

	if sashShape = SASH_SHAPE_TRAPEZOID |\
		sashShape = SASH_SHAPE_RHOMBUS |\
		sashShape = SASH_SHAPE_PARALLELOGRAM then
		glassArea = glassWidth * glassHeight
	endif

	if sashShape = SASH_SHAPE_PENTAGON then
		glassRectangleArea	= glassWidth * glassShoulderHeight
		glassTriangleArea	= glassWidth * (glassHeight - glassShoulderHeight) / 2
		glassArea			= glassRectangleArea + glassTriangleArea
	endif

	if sashShape = SASH_SHAPE_TRIANGLE then
		glassArea = glassWidth * glassHeight / 2
	endif

	if sashShape = SASH_SHAPE_EYEBROWS then
		glassRectArea	= glassWidth * glassShoulderHeight

		arcHeight		= glassheight - glassShoulderHeight

		sideTriangY		= arcHeight - aSideRadius
		sideTriangX		= glassWidth / 2 - aSideRadius
		sideTriangC		= SQR(sideTriangX^2 + sideTriangY^2)/2

		midTriangX		= sideTriangX
		midTriangY		= ((2*sideTriangC^2)/sideTriangY) - sideTriangY

		midArcRadius	= midTriangY + arcHeight

		midTriangC		= midArcRadius - aSideRadius

		midArcAngle		= ASN(midTriangX / midTriangC) * 2
		midArcArea		= (midArcAngle / 360) * midArcRadius^2 * PI
		midTriangArea	= midTriangY * midTriangX

		sideArcAngle	= ASN(midTriangY / midTriangC)
		sideArcArea		= (sideArcAngle / 360) * aSideRadius^2 * PI

		arcPartArea		= midArcArea - midTriangArea + sideArcArea * 2

		glassArea 		= glassRectArea + arcPartArea
	endif

	if sashShape = SASH_SHAPE_QUARTERROUND then
		glassArea = (glassHeight)^2 * PI / 4
	endif

! Grill Calculation
	if iMullionStyle = MULLION_NONE then
		totalGrillSectionArea	= 0
		PanelglassArea			= PanelglassArea + glassArea
	endif

	if iMullionStyle = MULLION_HVGRID then
		grilWidth				= gw
		totalGrillSectionArea	= NumHorGrills * NumVerGrills * grilWidth^2

		totalVerGrillArea	= grilWidth * glassHeight * NumVerGrills
		totalHorGrillArea	= grilWidth * glassWidth * NumHorGrills
		SummaGrillArea		= totalVerGrillArea + totalHorGrillArea - totalGrillSectionArea

		PanelGlassArea = PanelGlassArea + glassArea - summaGrillArea
	endif

	if iMullionStyle = MULLION_EDITABLEGRID then
		grilWidth = gw

		_NumVerGrills	= NumVerGrills
		_NumHorGrills	= NumHorGrills
		_horgrid		= horgrid
		_vergrid		= vergrid

		gosub "GrillAreaCalculation"

		PanelGlassArea = PanelGlassArea + glassArea - summaGrillArea
	endif

	if iMullionStyle = MULLION_CUSTOM then
		totalGrillSectionArea	= 0
		PanelGlassArea 			= PanelGlassArea + 0 ! No Glazed Leaf
	endif

	if iMullionStyle = MULLION_PRAIRIE then
		grilWidth				= gw
		totalGrillSectionArea	= 2 * 2 * grilWidth^2

		totalVerGrillArea	= grilWidth * glassHeight * 2
		totalHorGrillArea	= grilWidth * glassWidth * 2
		summaGrillArea		= totalVerGrillArea + totalHorGrillArea - totalGrillSectionArea

		PanelGlassArea = PanelGlassArea + glassArea - summaGrillArea
	endif

	if iMullionStyle = MULLION_DIVIDED then
		glassArea = glassArea - glassWidth * dividerWidth
		grilWidth = gw

		_NumVerGrills	= NumVerGrills
		_NumHorGrills	= NumHorGrills
		_horgrid		= horgrid
		_vergrid		= vergrid

		gosub "GrillAreaCalculation"

		PanelGlassArea = PanelGlassArea + glassArea - summaGrillArea

		_NumVerGrills	= NumVerGrills2
		_NumHorGrills	= NumHorGrills2
		_horgrid		= horgrid2
		_vergrid		= vergrid2

		gosub "GrillAreaCalculation"

		PanelGlassArea = PanelGlassArea - summaGrillArea
	endif

	if iMullionStyle = MULLION_SUNBURST_1 then
		grilWidth		= gw

		if sashShape = SASH_SHAPE_HALFROUND then
			grillRadius		= (glassHeight - gw ) / 3
			grillRadius2	= (glassHeight - gw ) / 3 + grilWidth

			radialGrillArea	= grilWidth * (glassHeight - grillRadius2) * 3
			curvedGrillArea = (grillRadius2^2* PI - grillRadius^2 * PI) / 2

			summaGrillArea	= radialGrillArea + curvedGrillArea
			PanelGlassArea	= PanelGlassArea + glassArea - summaGrillArea
		endif

		if sashShape = SASH_SHAPE_QUARTERROUND then
			summaGrillArea	= grilWidth * glassHeight
			PanelGlassArea	= PanelGlassArea + glassArea - summaGrillArea
		endif
	endif

	if iMullionStyle = MULLION_SUNBURST_2 then
		grilWidth		= gw

		if sashShape = SASH_SHAPE_HALFROUND then
			grillRadius		= (glassHeight - gw ) / 3
			grillRadius2	= (glassHeight - gw ) / 3 + grilWidth

			radialGrillArea	= grilWidth * glassHeight * 3
			curvedGrillArea = (grillRadius2^2* PI - grillRadius^2 * PI) / 2
			sectGrillArea	= grilWidth * grilWidth * 3

			summaGrillArea	= radialGrillArea + curvedGrillArea - sectGrillArea
			PanelGlassArea	= PanelGlassArea + glassArea - summaGrillArea
		endif

		if sashShape = SASH_SHAPE_QUARTERROUND then
			summaGrillArea	= grilWidth * glassHeight * 2
			PanelGlassArea	= PanelGlassArea + glassArea - summaGrillArea
		endif
	endif

	if iMullionStyle = MULLION_SUNBURST_3 then
		grilWidth		= gw

		if sashShape = SASH_SHAPE_HALFROUND then
			grillRadius		= (glassHeight - 2 * gw) / 5
			grillRadius2	= (glassHeight - 2 * gw) / 5 + grilWidth
			grillRadius3	= grillRadius * 3 + grilWidth
			grillRadius4	= grillRadius * 3 + 2 * grilWidth

			radialGrillArea	= grilWidth * glassHeight * 3
			curvedGrillArea = (grillRadius2^2* PI - grillRadius^2 * PI) / 2
			curvedGrillArea2	= (grillRadius4^2* PI - grillRadius^3 * PI) / 2
			sectGrillArea	= grilWidth * grilWidth * 6

			summaGrillArea	= radialGrillArea + curvedGrillArea + curvedGrillArea2 - sectGrillArea
			PanelGlassArea	= PanelGlassArea + glassArea - summaGrillArea
		endif

		if sashShape = SASH_SHAPE_QUARTERROUND then
			grillRadius		= (glassHeight - 2 * gw )/3
			radialGrillArea	= grilWidth * glassHeight * 3
			circleGrillArea	= ((grillRadius + grilWidth)^2 * PI - grillRadius ^2 * PI) / 4
			summaGrillArea	= radialGrillArea + circleGrillArea - 3 * gw * gw
			PanelGlassArea	= PanelGlassArea + glassArea - summaGrillArea
		endif
	endif

	if iMullionStyle = MULLION_SUNBURST_4 then
		grilWidth			= gw

		if sashShape = SASH_SHAPE_HALFROUND then
			grillRadius		= (glassHeight - gw) / 3
			grillRadius2	= (glassHeight - gw) / 3 + grilWidth
			grillRadius3	= grillRadius + grillRadius2 + grilWidth / 2
			grillRadius4	= grillRadius + grillRadius2 - grilWidth / 2

			radialGrillArea	= grilWidth * glassHeight * 5
			curvedGrillArea = (grillRadius2^2* PI - grillRadius^2 * PI) / 2
			curvedGrillArea2	= (grillRadius4^2* PI - grillRadius^3 * PI) / 2
			sectGrillArea	= grilWidth * grilWidth * 10

			summaGrillArea	= radialGrillArea + curvedGrillArea + curvedGrillArea2 - sectGrillArea
			PanelGlassArea	= PanelGlassArea + glassArea - summaGrillArea
		endif

		if sashShape = SASH_SHAPE_QUARTERROUND then
			grillRadius			= (glassHeight - 2 * gw )/3
			grillRadius2		= (glassHeight - 2 * gw )/3 * 2
			radialGrillArea		= grilWidth * glassHeight * 3
			circleGrillArea		= ((grillRadius + grilWidth)^2 * PI - grillRadius^2 * PI) / 4
			circleGrillArea2	= ((grillRadius2 + grilWidth)^2 * PI - grillRadius2^2 * PI) / 4
			summaGrillArea		= radialGrillArea + circleGrillArea + circleGrillArea2 - 6 * gw * gw
			PanelGlassArea	= PanelGlassArea + glassArea - summaGrillArea
		endif
	endif

	if iMullionStyle = MULLION_SUNBURST_5 then
		grilWidth		= gw
		summaGrillArea	= grilWidth * glassHeight * 3
		PanelGlassArea	= PanelGlassArea + glassArea - summaGrillArea
	endif

	if iMullionStyle = MULLION_SUNBURST_6 then
		totalGrillSectionArea	= 0
		PanelGlassArea 			= PanelGlassArea + 0
	endif

	if iMullionStyle = MULLION_SOLID_GLAZED then
		glassArea = glassArea - glassWidth * (gs_horiz_div_height - gs_sash_width)
		grilWidth = gw

		_NumVerGrills	= NumVerGrills2
		_NumHorGrills	= NumHorGrills2
		_horgrid		= horgrid2
		_vergrid		= vergrid2

		gosub "GrillAreaCalculation"

		PanelGlassArea = PanelGlassArea + glassArea - summaGrillArea

	endif

	if iMullionStyle = MULLION_DIVIDED_FRAME then
		grilWidth				= gs_sidelight_div_width
		totalGrillSectionArea	= NumHorGrills * NumVerGrills * grilWidth^2

		if sashShape = SASH_SHAPE_RECTANGULAR then
			totalVerGrillArea	= grilWidth * glassHeight * NumVerGrills
			totalHorGrillArea	= grilWidth * glassWidth * NumHorGrills
			summaGrillArea		= totalVerGrillArea + totalHorGrillArea - totalGrillSectionArea

			PanelGlassArea 		= PanelGlassArea + glassArea - summaGrillArea
		endif
	endif

	if iMullionStyle = MULLION_SOLID_PANEL then
		totalGrillSectionArea	= 0
		PanelGlassArea 			= PanelGlassArea + 0 ! No Glazed Leaf
	endif
return

! =============================================================================
! Editable Grid Area Calculation
! =============================================================================
!Input:
!	_NumVerGrills
!	_NumHorGrills
!	_horgrid
!	_vergrid
!OutPut:
!	summaGrillArea
! =============================================================================

"GrillAreaCalculation":
	totalGrillSectionArea = 0
	for numVG = 1 to _NumVerGrills
		for numHG = 1 to _NumHorGrills
			if _horgrid[numHG][2] < _horgrid[numHG][3] then
				HorX1 = _horgrid[numHG][2]
				HorX2 = _horgrid[numHG][3]
			else
				HorX1 = _horgrid[numHG][3]
				HorX2 = _horgrid[numHG][2]
			endif
			HorY1 = _horgrid[numHG][1] + grilWidth / 2
			HorY2 = _horgrid[numHG][1] - grilWidth / 2

			if _vergrid[numVG][2] < _vergrid[numVG][3] then
				VertY1 = _vergrid[numVG][3]
				VertY2 = _vergrid[numVG][2]
			else
				VertY1 = _vergrid[numVG][2]
				VertY2 = _vergrid[numVG][3]
			endif
			VertX1 = _vergrid[numVG][1] - grilWidth / 2
			VertX2 = _vergrid[numVG][1] + grilWidth / 2

			gosub "GrillSectionCalculation"

			totalGrillSectionArea = totalGrillSectionArea + SectionArea
		next numHG
	next numVG

	totalHorGrillArea = 0
	for numHG = 1 to _NumHorGrills
		if _horgrid[numHG][2] < _horgrid[numHG][3] then
			totalHorGrillArea = totalHorGrillArea + grilWidth * (_horgrid[numHG][3] - _horgrid[numHG][2])
		else
			totalHorGrillArea = totalHorGrillArea + grilWidth * (_horgrid[numHG][2] - _horgrid[numHG][3])
		endif
	next numHG

	totalVerGrillArea= 0
	for numVG = 1 to _NumVerGrills
		if _vergrid[numVG][2] < _vergrid[numVG][3] then
			totalVerGrillArea = totalVerGrillArea + grilWidth * (_vergrid[numHG][3] - _vergrid[numHG][2])
		else
			totalVerGrillArea = totalVerGrillArea + grilWidth * (_vergrid[numHG][2] - _vergrid[numHG][3])
		endif
	next numVG

	summaGrillArea		= totalVerGrillArea + totalHorGrillArea - totalGrillSectionArea
return

! =============================================================================
! Editable Grid Section Calculation
! =============================================================================
!Input:
!	HorX1 : Horizontal Grill Left point
!	HorY1 : Horizontal Grill Top point
!	HorX2 : Horizontal Grill Right point
!	HorY2 : Horizontal Grill Bottom point
!
!	VertX1 : Verical Grill Left point
!	VertY1 : Verical Grill Top point
!	VertX2 : Verical Grill Right point
!	VertY2 : Verical Grill Bottom point
!OutPut:
!	SectionArea
! =============================================================================

"GrillSectionCalculation":

	bSectArea = 0

	LeftSided				= 0
	RightSided				= 0
	HorizontalTransection	= 0
	if (HorX1 < VertX1) & ((HorX2 > VertX1) & (HorX2 < VertX2)) then LeftSided = 1
	if ((HorX1 > VertX1) & (HorX1 < VertX2)) & (HorX2 > VertX2) then RightSided = 1
	if (HorX1 < VertX1) & (HorX2 > VertX2) then HorizontalTransection = 1

	TopSided				= 0
	BottomtSided			= 0
	VerticalTransection		= 0
	if (HorY1 > VertY1) & ((HorY2 < VertY1) & (HorY2 > VertY2)) then TopSided = 1
	if ((HorY1 < VertY1) & (HorY1 > VertY2)) & (HorY2 < VertY2) then BottomtSided = 1
	if (HorY1 < VertY1) & (HorY2 > VertY2) then VerticalTransection = 1

	if (TopSided & LeftSided ) then !TopLeft
		SectionX1 = VertX1
		SectionY1 = VertY1
		SectionX2 = HorX2
		SectionY2 = HorY2
		bSectArea = 1
	endif
	if (TopSided & HorizontalTransection ) then !TopMid
		SectionX1 = VertX1
		SectionY1 = VertY1
		SectionX2 = VertX2
		SectionY2 = HorY2
		bSectArea = 1
	endif
	if (TopSided & RightSided ) then !TopRight
		SectionX1 = HorX1
		SectionY1 = VertY1
		SectionX2 = VertX2
		SectionY2 = HorY2
		bSectArea = 1
	endif

	if (VerticalTransection & LeftSided ) then !MidLeft
		SectionX1 = VertX1
		SectionY1 = HorY1
		SectionX2 = HorX2
		SectionY2 = HorY2
		bSectArea = 1
	endif
	if (VerticalTransection & HorizontalTransection ) then !FullSection
		SectionX1 = VertX1
		SectionY1 = HorY1
		SectionX2 = VertX2
		SectionY2 = HorY2
		bSectArea = 1
	endif
	if (VerticalTransection & RightSided ) then !MidRight
		SectionX1 = HorX1
		SectionY1 = HorY1
		SectionX2 = VertX2
		SectionY2 = HorY2
		bSectArea = 1
	endif

	if (BottomtSided & LeftSided ) then !BotLeft
		SectionX1 = VertX1
		SectionY1 = HorY1
		SectionX2 = HorX2
		SectionY2 = VertY2
		bSectArea = 1
	endif
	if (BottomtSided & HorizontalTransection ) then !BotMid
		SectionX1 = VertX1
		SectionY1 = HorY1
		SectionX2 = VertX2
		SectionY2 = VertY2
		bSectArea = 1
	endif
	if (BottomtSided & RightSided ) then !BotRight
		SectionX1 = HorX1
		SectionY1 = HorY1
		SectionX2 = VertY2
		SectionY2 = VertX2
		bSectArea = 1
	endif

	if bSectArea then
		SectionArea = (SectionX2 - SectionX1) * (SectionY1 - SectionY2)
	else
		SectionArea = 0
	endif
Return
