! Contact person: <NJ>! ==============================================================================! This macro draws the corner columns! ------------------------------------------------------------------------------! Remark:!	See the input parameters at the 2D/3D Scripts! ==============================================================================EPS = 0.0001REVEAL_EDGE				= 0REVEAL_NO				= 1REVEAL_POSITIVE			= 2REVEAL_NEGATIVE			= 3REVEAL_SLANTED			= 4REVEAL_SPLAYED			= 5REVEAL_HISTORIC			= 6REVEAL_DOUBLE			= 7REVEAL_DOUBLE_SPLAYED	= 8REVEAL_OUTSIDE_SPLAYED	= 9! =============================================================================if gs_corner_column and (GLOB_SCRIPT_TYPE = 2 | GLOB_SCRIPT_TYPE = 3) then	bSimpleDetail = ((GLOB_CONTEXT = 2 | GLOB_CONTEXT = 22) & lod2D_CornerColumn < 3)	if bRightCornerFunction & abs(rightCornerAngle) > EPS then		cornerPostXbyWidth	= (-WIDO_FRAME_THICKNESS - gs_cc_pr) * abs(tan(90 - rightCornerAngle / 2)) + gs_cc_width		cornerPostXbyThk	= (gs_cc_thk - WIDO_FRAME_THICKNESS - gs_cc_pr) * abs(tan(90 - rightCornerAngle / 2))		pxFrameR = max(cornerPostXbyWidth, cornerPostXbyThk)		tanAngle = tan(rightCornerAngle / 2)		if (rightCornerAngle > 180) then			px1R = -not(bSimpleDetail) * (gs_cc_pr / tanAngle)			px2R =  WIDO_FRAME_THICKNESS / tanAngle			px3R =  (bSimpleDetail * WIDO_FRAME_THICKNESS - not(bSimpleDetail) * (gs_cc_pr - gs_cc_thk)) / tanAngle		else			px1R =  not(bSimpleDetail) * (gs_cc_pr / tanAngle)			px2R = -WIDO_FRAME_THICKNESS / tanAngle			px3R = -(bSimpleDetail * WIDO_FRAME_THICKNESS - not(bSimpleDetail) * (gs_cc_pr - gs_cc_thk)) / tanAngle		endif	endif	if bLeftCornerFunction & abs(leftCornerAngle) > EPS then		cornerPostXbyWidth	= (-WIDO_FRAME_THICKNESS - gs_cc_pr) * abs(tan(90 - leftCornerAngle / 2)) + gs_cc_width		cornerPostXbyThk	= (gs_cc_thk - WIDO_FRAME_THICKNESS - gs_cc_pr) * abs(tan(90 - leftCornerAngle / 2))		pxFrameL = max(cornerPostXbyWidth, cornerPostXbyThk)		tanAngle = tan(leftCornerAngle / 2)		if (leftCornerAngle > 180) then			px1L = -not(bSimpleDetail) * (gs_cc_pr / tanAngle)			px2L =  WIDO_FRAME_THICKNESS / tanAngle			px3L =  (bSimpleDetail * WIDO_FRAME_THICKNESS - not(bSimpleDetail) * (gs_cc_pr - gs_cc_thk)) / tanAngle		else			px1L =  not(bSimpleDetail) * (gs_cc_pr / tanAngle)			px2L = -WIDO_FRAME_THICKNESS / tanAngle			px3L = -(bSimpleDetail * WIDO_FRAME_THICKNESS - not(bSimpleDetail) * (gs_cc_pr - gs_cc_thk)) / tanAngle		endif	endifendif! =============================================================================idxFrameStartRevealLeft		= iRevealPointsIdx[3]idxFrameEndRevealLeft		= iRevealPointsIdx[4]idxBoardEndRevealLeft		= iRevealPointsIdx[6]idxFrameStartRevealRight	= iRevealPointsIdx[13]idxFrameEndRevealRight		= iRevealPointsIdx[14]idxBoardEndRevealRight		= iRevealPointsIdx[16]if (rightCornerAngle > 180) then	idxL = idxFrameEndRevealLeft	idxR = idxFrameEndRevealRightelse	idxL = idxFrameStartRevealLeft	idxR = idxFrameStartRevealRightendif! =============================================================================bMirrorRight	= (rightCornerAngle > 180)bMirrorLeft		= (leftCornerAngle > 180)offsLeftY		= ((leftCornerAngle > 180) exor (rightCornerAngle > 180)) * (2 * gs_cc_pr - gs_cc_thk)if abs(leftCornerAngle) > EPS then	offsLeftX	= -abs(offsLeftY / tan(leftCornerAngle / 2))endif