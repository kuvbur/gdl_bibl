
! =============================================================================
! Door Types
! =============================================================================

if not(bMetalDoor | bStorefrontDoor | bFoldingDoor | bBombShelter) then
	if iLeafShape = LEAF_SHAPE_RECTANGULAR then
		values{2} "iDoorPanelType"	1,	stDoorTypes[ 1],		! Style 1
									5,	stDoorTypes[ 5],		! Style 2
									8,	stDoorTypes[ 8],		! Style 3
									6,	stDoorTypes[ 6],		! Style 4
									9,	stDoorTypes[ 9],		! Style 5
									7,	stDoorTypes[ 7],		! Style 6
									10,	stDoorTypes[10],		! Style 7
									11,	stDoorTypes[11],		! Style 8
									12,	stDoorTypes[12],		! Style 9
									57,	stDoorTypes[57],		! Style 10
									58,	stDoorTypes[58],		! Style 11
									59,	stDoorTypes[59],		! Style 12
									60,	stDoorTypes[60],		! Style 13
									73,	stDoorTypes[73],		! Style 14
									69,	stDoorTypes[69],		! Style 15
									74,	stDoorTypes[74],		! Style 16
									28,	stDoorTypes[28],		! Style 17
									3,	stDoorTypes[ 3],		! Style 18
									4,	stDoorTypes[ 4],		! Style 19
									34,	stDoorTypes[34],		! Style 20
									29,	stDoorTypes[29],		! Style 21
									31,	stDoorTypes[31],		! Style 22
									70,	stDoorTypes[70],		! Style 23
									66,	stDoorTypes[66],		! Style 24
									67,	stDoorTypes[67],		! Style 25
									68,	stDoorTypes[68],		! Style 26
									2,	stDoorTypes[ 2],		! Style 27
									56,	stDoorTypes[56],		! Style 28
									71,	stDoorTypes[71],		! Style 29
									72,	stDoorTypes[72],		! Style 30
									61,	stDoorTypes[61],		! Style 31
									62,	stDoorTypes[62],		! Style 32
									63,	stDoorTypes[63],		! Style 33
									13,	stDoorTypes[13],		! Style 34
									14,	stDoorTypes[14],		! Style 35

									16,	stDoorTypes[16],		! Style 36
									30,	stDoorTypes[30],		! Style 37
									32,	stDoorTypes[32],		! Style 38
									33,	stDoorTypes[33],		! Style 39
									15,	stDoorTypes[15],		! Style 40
									17,	stDoorTypes[17],		! Style 41
									18,	stDoorTypes[18],		! Style 42
									19,	stDoorTypes[19],		! Style 43
									64,	stDoorTypes[64],		! Style 44
									20,	stDoorTypes[20],		! Style 45
									21,	stDoorTypes[21],		! Style 46

									65,	stDoorTypes[65],		! Style 47
									51,	stDoorTypes[51],		! Style 48
									52,	stDoorTypes[52],		! Style 49
									53,	stDoorTypes[53],		! Style 50
									55,	stDoorTypes[55],		! Style 51
									54,	stDoorTypes[54],		! Style 52
									22,	stDoorTypes[22],		! Style 52
									23,	stDoorTypes[23],		! Style 54
									24,	stDoorTypes[24],		! Style 55
									25,	stDoorTypes[25],		! Style 56
									26,	stDoorTypes[26],		! Style 57
									27,	stDoorTypes[27],		! Style 58

									76,	stDoorTypes[76],		! Style 59
									77,	stDoorTypes[77],		! Style 60

									46,	stDoorTypes[46],		! No Grill
									47,	stDoorTypes[47],		! H-V Grid
									45,	stDoorTypes[45],		! French Panel
									48,	stDoorTypes[48],		! Prairie Style
									49,	stDoorTypes[49],		! Custom Panel
									0,	stDoorTypes[50]			! Empty

		if bAsymmetricLeafs then
			values{2} "iDoorPanelType2"	1,	stDoorTypes[ 1],		! Style 1
										5,	stDoorTypes[ 5],		! Style 2
										8,	stDoorTypes[ 8],		! Style 3
										6,	stDoorTypes[ 6],		! Style 4
										9,	stDoorTypes[ 9],		! Style 5
										7,	stDoorTypes[ 7],		! Style 6
										10,	stDoorTypes[10],		! Style 7
										11,	stDoorTypes[11],		! Style 8
										12,	stDoorTypes[12],		! Style 9
										57,	stDoorTypes[57],		! Style 10
										58,	stDoorTypes[58],		! Style 11
										59,	stDoorTypes[59],		! Style 12
										60,	stDoorTypes[60],		! Style 13
										73,	stDoorTypes[73],		! Style 14
										69,	stDoorTypes[69],		! Style 15
										74,	stDoorTypes[74],		! Style 16
										28,	stDoorTypes[28],		! Style 17
										3,	stDoorTypes[ 3],		! Style 18
										4,	stDoorTypes[ 4],		! Style 19
										34,	stDoorTypes[34],		! Style 20
										29,	stDoorTypes[29],		! Style 21
										31,	stDoorTypes[31],		! Style 22
										70,	stDoorTypes[70],		! Style 23
										66,	stDoorTypes[66],		! Style 24
										67,	stDoorTypes[67],		! Style 25
										68,	stDoorTypes[68],		! Style 26
										2,	stDoorTypes[ 2],		! Style 27
										56,	stDoorTypes[56],		! Style 28
										71,	stDoorTypes[71],		! Style 29
										72,	stDoorTypes[72],		! Style 30
										61,	stDoorTypes[61],		! Style 31
										62,	stDoorTypes[62],		! Style 32
										63,	stDoorTypes[63],		! Style 33
										13,	stDoorTypes[13],		! Style 34
										14,	stDoorTypes[14],		! Style 35
	
										16,	stDoorTypes[16],		! Style 36
										30,	stDoorTypes[30],		! Style 37
										32,	stDoorTypes[32],		! Style 38
										33,	stDoorTypes[33],		! Style 39
										15,	stDoorTypes[15],		! Style 40
										17,	stDoorTypes[17],		! Style 41
										18,	stDoorTypes[18],		! Style 42
										19,	stDoorTypes[19],		! Style 43
										64,	stDoorTypes[64],		! Style 44
										20,	stDoorTypes[20],		! Style 45
										21,	stDoorTypes[21],		! Style 46

										65,	stDoorTypes[65],		! Style 47
										51,	stDoorTypes[51],		! Style 48
										52,	stDoorTypes[52],		! Style 49
										53,	stDoorTypes[53],		! Style 50
										55,	stDoorTypes[55],		! Style 51
										54,	stDoorTypes[54],		! Style 52
										22,	stDoorTypes[22],		! Style 52
										23,	stDoorTypes[23],		! Style 54
										24,	stDoorTypes[24],		! Style 55
										25,	stDoorTypes[25],		! Style 56
										26,	stDoorTypes[26],		! Style 57
										27,	stDoorTypes[27],		! Style 58

										76,	stDoorTypes[76],		! Style 59
										77,	stDoorTypes[77],		! Style 60

										46,	stDoorTypes[46],		! No Grill
										47,	stDoorTypes[47],		! H-V Grid
										45,	stDoorTypes[45],		! French Panel
										48,	stDoorTypes[48],		! Prairie Style
										49,	stDoorTypes[49],		! Custom Panel
										0,	stDoorTypes[50]			! Empty

		endif
	else
		values{2} "iDoorPanelType"	46,	stDoorTypes[46],
									47,	stDoorTypes[47],
									1,	stDoorTypes[1],
									49,	stDoorTypes[49],
									0,	stDoorTypes[50]
	endif
endif
if bMetalDoor then
	values{2} "iDoorPanelType"	1,	stDoorTypes[1],
								65, stDoorTypes[65],
								51,	stDoorTypes[51],
								52,	stDoorTypes[52],
								53,	stDoorTypes[53],
								55,	stDoorTypes[55],
								54,	stDoorTypes[54],
								23,	stDoorTypes[23],
								24,	stDoorTypes[24],
								25,	stDoorTypes[25],
								26,	stDoorTypes[26],
								27,	stDoorTypes[27],
								35,	stDoorTypes[35],
								49,	stDoorTypes[49],
								0,	stDoorTypes[50]
endif
if bStorefrontDoor then
	values{2} "iDoorPanelType"	1,	stDoorTypes[1],
								35,	stDoorTypes[35],
								36,	stDoorTypes[36],
								37,	stDoorTypes[37],
								38,	stDoorTypes[38],
								75,	stDoorTypes[75],
								39,	stDoorTypes[39],
								40,	stDoorTypes[40],
								49,	stDoorTypes[49],
								0,	stDoorTypes[50]
endif
if bFoldingDoor then
	values{2} "iDoorPanelType"	1,	stDoorTypes[1],
								64,	stDoorTypes[64],
								53,	stDoorTypes[53],
								39,	stDoorTypes[39],
								40,	stDoorTypes[40],
								41,	stDoorTypes[41],
								42,	stDoorTypes[42],
								43,	stDoorTypes[43],
								44,	stDoorTypes[44],
								47,	stDoorTypes[47],
								49,	stDoorTypes[49],
								0,	stDoorTypes[50]
endif
if bBombShelter then
	values{2} "iDoorPanelType" 1, stDoorTypes[1]
endif


! =============================================================================
! Handle
! =============================================================================

if iDoorPanelType = 0 then	! Empty
	hideparameter "gs_handle_type", "gs_handle_type_m"
	lock "gs_handle_type", "gs_handle_type_m"
	gs_handle_type_m = 0	! Force to lock and hide handle parameters
endif

if bStorefrontClassic then
	if iDoorPanelType = 0 then	! Empty
		hideparameter "gs_handle_type_out", "gs_handle_type_out_m"
		lock "gs_handle_type_out", "gs_handle_type_out_m"
		gs_handle_type_out_m = 0	! Force to lock and hide handle parameters

		if bSecondPanel then	! Empty on 2nd panel
			hideparameter	"gs_handle_type2_m",
							"gs_handle_type2_out", "gs_handle_type2_out_m"

			lock	"gs_handle_type2_m",
					"gs_handle_type2_out", "gs_handle_type2_out_m"

			gs_handle_type2_m = 0	! Force to lock and hide handle parameters
			gs_handle_type2_out_m = 0
		endif
	endif

	if bSecondPanel then
		call "DoorHandle_kmod" parameters A=A,
			bDifferentHandles		= 1,
			bSecondHandle			= 1,
			bSecondPanel			= 1,
			bSetableHandleUI		= 0,
			iHandleCategoryEnable	= iHandleCategoryEnable,
			bINTHandles				= 1,
			gs_handle_type			= gs_handle_type,
			gs_handle_type_m		= gs_handle_type_m,
			gs_handle_type_out		= gs_handle_type_out,
			gs_handle_type_out_m	= gs_handle_type_out_m,
			gs_handle_type2_m		= gs_handle_type2_m,
			gs_handle_type2_out		= gs_handle_type2_out,
			gs_handle_type2_out_m	= gs_handle_type2_out_m
	else
		call "DoorHandle_kmod" parameters A=A,
			bDifferentHandles		= 1,
			bSecondHandle			= 1,
			bSecondPanel			= 0,
			bSetableHandleUI		= 0,
			iHandleCategoryEnable	= iHandleCategoryEnable,
			bINTHandles				= 1,
			gs_handle_type			= gs_handle_type,
			gs_handle_type_m		= gs_handle_type_m,
			gs_handle_type_out		= gs_handle_type_out,
			gs_handle_type_out_m	= gs_handle_type_out_m
	endif
else
	call "DoorHandle_kmod" parameters A=A,
		bDifferentHandles		= 0,
		bSecondHandle			= 1,
		bSecondPanel			= ((iOpeningMethod = OPENMETHOD_OPEN_DOUB) & not(bBombShelter)),
		bSetableHandleUI		= ((iOpeningMethod = OPENMETHOD_OPEN_DOUB) & not(bBombShelter)),
		iHandleCategoryEnable	= iHandleCategoryEnable,
		bINTHandles				= 1,
		gs_handle_type			= gs_handle_type,
		gs_handle_type_m		= gs_handle_type_m,
		gs_handle_type2_m		= gs_handle_type2_m
endif

! =============================================================================
! Kick Board
! =============================================================================

if bEnableKickBoard then
	values "kickBoardHeight" range (0, b]

	if not(bKickBoardOut | bKickBoardIn) then
		lock	"kickBoardHeight"
	endif

	if bSecondKickBoard then
		values "kickBoardHeight2" range (0, b]

		if not(bKickBoardOut2 | bKickBoardIn2) then
			lock	"kickBoardHeight2"
		endif

		if not(bKickBoardOut | bKickBoardOut2) then
			lock	"matKickBoardOut"
		endif

		if not(bKickBoardIn | bKickBoardIn2) then
			lock	"matKickBoardIn"
		endif
	else
		if not(bKickBoardOut) then
			lock	"matKickBoardOut"
		endif

		if not(bKickBoardIn) then
			lock	"matKickBoardIn"
		endif
	endif
endif

! =============================================================================
! H-V Grid
! =============================================================================

if iDoorPanelType = 47 then
	if gs_grid_w < 0.0001 then
		gs_grid_w = 0.0001
		parameters gs_grid_w = gs_grid_w
	endif
	if gs_grid_w > A - gs_frame_width_left - gs_frame_width_right - gs_fw_side then
		gs_grid_w = A - gs_frame_width_left - gs_frame_width_right - gs_fw_side
		parameters gs_grid_w = gs_grid_w
	endif
	if gs_grid_thk < 0.0001 then
		gs_grid_thk = 0.0001
		parameters gs_grid_thk = gs_grid_thk
	endif
	if gs_grill_pos_m = MULLION_THROUGHOUT then
		if gs_grid_thk > gs_leaf_thk then
			gs_grid_thk = gs_leaf_thk
			parameters gs_grid_thk = gs_grid_thk
		endif
	else
		if gs_grid_thk > (gs_leaf_thk - gs_glass_thk)/2 then
			gs_grid_thk = (gs_leaf_thk - gs_glass_thk)/2
			parameters gs_grid_thk = gs_grid_thk
		endif
	endif

	if gs_ver_gnum < 1 then
		gs_ver_gnum = 1
		parameters gs_ver_gnum = 1
	endif
	maxValue = (A - (gs_frame_width_left + gs_frame_width_right) - gs_fw_side) / gs_grid_w
	if gs_ver_gnum > maxValue then
		gs_ver_gnum = maxValue
		parameters gs_ver_gnum = gs_ver_gnum
	endif

	if gs_hor_gnum < 1 then
		gs_hor_gnum = 1
		parameters gs_hor_gnum = 1
	endif
	maxValue = (B - (gs_frame_width_left + gs_frame_width_right) - gs_fw_side) / gs_grid_w
	if gs_hor_gnum > maxValue then
		gs_hor_gnum = maxValue
		parameters gs_hor_gnum = gs_hor_gnum
	endif
endif

if bAsymmetricLeafs & iDoorPanelType2 = 47 then
	if gs_grid_w2 < 0.0001 then
		gs_grid_w2 = 0.0001
		parameters gs_grid_w2 = gs_grid_w2
	endif
	if gs_grid_w2 > A - gs_frame_width_left - gs_frame_width_right - gs_fw_side2 then
		gs_grid_w2 = A - gs_frame_width_left - gs_frame_width_right - gs_fw_side2
		parameters gs_grid_w = gs_grid_w
	endif
	if gs_grid_thk2 < 0.0001 then
		gs_grid_thk2 = 0.0001
		parameters gs_grid_thk2 = gs_grid_thk2
	endif
	if gs_grill_pos2_m = MULLION_THROUGHOUT then
		if gs_grid_thk2 > gs_leaf_thk then
			gs_grid_thk2 = gs_leaf_thk
			parameters gs_grid_thk2 = gs_grid_thk2
		endif
	else
		if gs_grid_thk2 > (gs_leaf_thk2 - gs_glass_thk2)/2 then
			gs_grid_thk2 = (gs_leaf_thk2 - gs_glass_thk2)/2
			parameters gs_grid_thk2 = gs_grid_thk2
		endif
	endif

	if gs_ver_gnum2 < 1 then
		gs_ver_gnum2 = 1
		parameters gs_ver_gnum2 = 1
	endif
	maxValue = (A - (gs_frame_width_left + gs_frame_width_right) - gs_fw_side2) / gs_grid_w2
	if gs_ver_gnum2 > maxValue then
		gs_ver_gnum2 = maxValue
		parameters gs_ver_gnum2 = gs_ver_gnum2
	endif

	if gs_hor_gnum2 < 1 then
		gs_hor_gnum2 = 1
		parameters gs_hor_gnum2 = 1
	endif
	maxValue = (B - (gs_frame_width_left + gs_frame_width_right) - gs_fw_side2) / gs_grid_w2
	if gs_hor_gnum2 > maxValue then
		gs_hor_gnum2 = maxValue
		parameters gs_hor_gnum2 = gs_hor_gnum2
	endif
endif


! =============================================================================
! Prairie Style
! =============================================================================

if iDoorPanelType = 48 then
	if gs_grid_thk < 0.0001 then
		gs_grid_thk = 0.0001
		parameters gs_grid_thk = gs_grid_thk
	endif
	if gs_grid_thk > gs_leaf_thk then
		gs_grid_thk = gs_leaf_thk
		parameters gs_grid_thk = gs_grid_thk
	endif
endif

if bAsymmetricLeafs & iDoorPanelType2 = 48 then
	if gs_grid_thk2 < 0.0001 then
		gs_grid_thk2 = 0.0001
		parameters gs_grid_thk2 = gs_grid_thk2
	endif
	if gs_grid_thk2 > gs_leaf_thk then
		gs_grid_thk2 = gs_leaf_thk
		parameters gs_grid_thk2 = gs_grid_thk2
	endif
endif


! =============================================================================
! Grid Parameters
! =============================================================================

if not(bStorefrontDoor) then
	values "gs_grill_pos" stGrillPos
	values "gs_grill_pos_m" 1,2,3
	if GLOB_MODPAR_NAME = "gs_grill_pos" | gs_grill_pos_m = 0 then
		gs_grill_pos_m = MULLION_THROUGHOUT
		if gs_grill_pos = stGrillPos[1] then gs_grill_pos_m = MULLION_OUTSIDE
		if gs_grill_pos = stGrillPos[2] then gs_grill_pos_m = MULLION_INSIDE
		parameters gs_grill_pos_m = gs_grill_pos_m
	else
		gs_grill_pos = stGrillPos[gs_grill_pos_m]
		parameters gs_grill_pos = gs_grill_pos
	endif
	if bAsymmetricLeafs then
		values "gs_grill_pos2" stGrillPos
		values "gs_grill_pos2_m" 1,2,3
		if GLOB_MODPAR_NAME = "gs_grill_pos2" | gs_grill_pos2_m = 0 then
			gs_grill_pos2_m = MULLION_THROUGHOUT
			if gs_grill_pos2 = stGrillPos[1] then gs_grill_pos2_m = MULLION_OUTSIDE
			if gs_grill_pos2 = stGrillPos[2] then gs_grill_pos2_m = MULLION_INSIDE
			parameters gs_grill_pos2_m = gs_grill_pos2_m
		else
			gs_grill_pos2 = stGrillPos[gs_grill_pos2_m]
			parameters gs_grill_pos2 = gs_grill_pos2
		endif
	endif

	if not(iDoorPanelType = 45 | iDoorPanelType = 47 | iDoorPanelType = 48) then
		hideparameter "gs_grill_pos", "gs_grill_pos_m",
			"gs_grid_w", "gs_grid_thk", "gs_hor_gnum", "gs_ver_gnum"
		lock "gs_grill_pos", "gs_grill_pos_m",
			"gs_grid_w", "gs_grid_thk", "gs_hor_gnum", "gs_ver_gnum"
	endif
	if iDoorPanelType = 48 then
		hideparameter "gs_hor_gnum","gs_ver_gnum"
		lock "gs_hor_gnum","gs_ver_gnum"
	endif
	if bAsymmetricLeafs then
		if not(iDoorPanelType2 = 45 | iDoorPanelType2 = 47 | iDoorPanelType2 = 48) then
			hideparameter "gs_grill_pos2", "gs_grill_pos2_m",
				"gs_grid_w2", "gs_grid_thk2", "gs_hor_gnum2", "gs_ver_gnum2"
			lock "gs_grill_pos2", "gs_grill_pos2_m",
				"gs_grid_w2", "gs_grid_thk2", "gs_hor_gnum2", "gs_ver_gnum2"
		endif
		if iDoorPanelType2 = 48 then
			hideparameter "gs_hor_gnum2","gs_ver_gnum2"
			lock "gs_hor_gnum2","gs_ver_gnum2"
		endif
	endif

	if not(iDoorPanelType = 47) | leafNum <> 2 | bAsymmetricLeafs then
		hideparameter "gs_hor_gnum4","gs_ver_gnum4"
		lock "gs_hor_gnum4","gs_ver_gnum4"
	else
		if gs_ver_gnum4 < 1 then
			gs_ver_gnum4 = 1
			parameters gs_ver_gnum4 = gs_ver_gnum4
		endif

		if gs_hor_gnum4 < 1 then
			gs_hor_gnum4 = 1
			parameters gs_hor_gnum4 = gs_hor_gnum4
		endif
	endif
	if bAsymmetricLeafs & iDoorPanelType2 <> 47 & iDoorPanelType2 <> 45 then
		hideparameter "gs_hor_gnum2","gs_ver_gnum2"
		lock "gs_hor_gnum2","gs_ver_gnum2"
	else
		if gs_ver_gnum2 < 1 then
			gs_ver_gnum2 = 1
			parameters gs_ver_gnum2 = gs_ver_gnum2
		endif

		if gs_hor_gnum2 < 1 then
			gs_hor_gnum2 = 1
			parameters gs_hor_gnum2 = gs_hor_gnum2
		endif
	endif
endif


! =============================================================================
! Hide and lock material parameters
! =============================================================================

if not(bStorefrontDoor) then

	! Leaf material 2 -------------------------------------------------------------

	hideLeafMat2_1 = not(iDoorPanelType = 2 | iDoorPanelType = 3 |\
						 iDoorPanelType = 4 | iDoorPanelType = 8 |\
						 iDoorPanelType = 9 | iDoorPanelType = 10 |\
						 iDoorPanelType = 11 | iDoorPanelType = 13 |\
						 iDoorPanelType = 16 | iDoorPanelType = 17 |\
						 iDoorPanelType = 18 | iDoorPanelType = 19 |\
						 iDoorPanelType = 22 | iDoorPanelType = 23 |\
						 iDoorPanelType = 24 | iDoorPanelType = 25 |\
						 iDoorPanelType = 26 | iDoorPanelType = 27 |\
						 iDoorPanelType = 28 | iDoorPanelType = 76 |\
						 iDoorPanelType = 77)

	hideLeafMat2_2 = not(iDoorPanelType2 = 2 | iDoorPanelType2 = 3 |\
						 iDoorPanelType2 = 4 | iDoorPanelType2 = 8 |\
						 iDoorPanelType2 = 9 | iDoorPanelType2 = 10 |\
						 iDoorPanelType2 = 11 | iDoorPanelType2 = 13 |\
						 iDoorPanelType2 = 16 | iDoorPanelType2 = 17 |\
						 iDoorPanelType2 = 18 | iDoorPanelType2 = 19 |\
						 iDoorPanelType2 = 22 | iDoorPanelType2 = 23 |\
						 iDoorPanelType2 = 24 | iDoorPanelType2 = 25 |\
						 iDoorPanelType2 = 26 | iDoorPanelType2 = 27 |\
						 iDoorPanelType2 = 28 | iDoorPanelType2 = 76 |\
						 iDoorPanelType2 = 77) | not(bAsymmetricLeafs)

	if hideLeafMat2_1 & hideLeafMat2_2 then
		hideparameter "gs_leaf_mat2"
		lock "gs_leaf_mat2"
	endif

	! Leaf material 3 -------------------------------------------------------------

	hideLeafMat3_1 = not(iDoorPanelType  = 2 | iDoorPanelType  = 8 |\
						 iDoorPanelType  = 9 | iDoorPanelType  = 10 |\
						 iDoorPanelType  = 11 | iDoorPanelType  = 28 |\
						 iDoorPanelType  = 76 | iDoorPanelType  = 77)

	hideLeafMat3_2 = not(iDoorPanelType2 = 2 | iDoorPanelType2 = 8 |\
						 iDoorPanelType2 = 9 | iDoorPanelType2 = 10 |\
						 iDoorPanelType2 = 11 | iDoorPanelType2 = 28 |\
						 iDoorPanelType2 = 76 | iDoorPanelType2 = 77) | not(bAsymmetricLeafs)

	if hideLeafMat3_1 & hideLeafMat3_2 then
		hideparameter "gs_leaf_mat3"
		lock "gs_leaf_mat3"
	endif

	! Louver materials ------------------------------------------------------------

	hideLouverMat_1 = not(iDoorPanelType  = 41 | iDoorPanelType  = 42 |\
						  iDoorPanelType  = 43 | iDoorPanelType  = 44)
	hideLouverMat_2 = not(iDoorPanelType2 = 41 | iDoorPanelType2 = 42 |\
						  iDoorPanelType2 = 43 | iDoorPanelType2 = 44) | not(bAsymmetricLeafs)
	if hideLouverMat_1 & hideLouverMat_2 then
		hideparameter "gs_louver_mat","gs_louver_matin"
		lock "gs_louver_mat","gs_louver_matin"
	endif

	! Kick plate materials --------------------------------------------------------
	
	hideKickPlateMat_1 = not(iDoorPanelType  = 45)
	hideKickPlateMat_2 = not(iDoorPanelType2 = 45) | not(bAsymmetricLeafs)
	if hideKickPlateMat_1 & hideKickPlateMat_2 then
		hideparameter "gs_kp_mat"
		lock "gs_kp_mat"
	endif
endif

! Lock materials --------------------------------------------------------------

hideLockMat_1 = not(iDoorPanelType  = 36 | iDoorPanelType  = 37)
hideLockMat_2 = not(iDoorPanelType2 = 36 | iDoorPanelType2 = 37) | not(bAsymmetricLeafs)
if hideLockMat_1 & hideLockMat_2 then
	hideparameter "gs_lock_mat"
	lock "gs_lock_mat"
endif

! Middle rail materials --------------------------------------------------------------

if (iDoorPanelType  = 39) & not(bMiddleRail)then
	hideparameter "gs_leafMidrail_mat"
	lock "gs_leafMidrail_mat"
endif


! =============================================================================
! Leaf frame width settings
! =============================================================================

! Frame internal width --------------------------------------------------------

if not(bStorefrontDoor) & not(iDoorPanelType = 2 | iDoorPanelType = 3 | iDoorPanelType = 4) then
	hideparameter "gs_int_fw"
	lock "gs_int_fw"
endif
if bAsymmetricLeafs & not(iDoorPanelType2 = 2 | iDoorPanelType2 = 3 | iDoorPanelType2 = 4) then
	hideparameter "gs_int_fw2"
	lock "gs_int_fw2"
endif

! Frame side width ------------------------------------------------------------

if not(bStorefrontDoor) & not(iDoorPanelType = 46 | iDoorPanelType = 47 | iDoorPanelType = 48 | iDoorPanelType = 54 ) then
	hideparameter "gs_fw_side"
	lock "gs_fw_side"
endif
if bAsymmetricLeafs & not(iDoorPanelType2 = 46 | iDoorPanelType2 = 47 | iDoorPanelType2 = 48 | iDoorPanelType2 = 54) then
	hideparameter "gs_fw_side2"
	lock "gs_fw_side2"
endif

! Frame lower/upper width -----------------------------------------------------

if not(iDoorPanelType = 46 | iDoorPanelType = 47 | iDoorPanelType = 48 | iDoorPanelType = 45 | iDoorPanelType = 54 ) then
	hideparameter "gs_fw_lower", "gs_fw_upper"
	lock "gs_fw_lower", "gs_fw_upper"
endif
if bAsymmetricLeafs & not(iDoorPanelType2 = 46 | iDoorPanelType2 = 47 | iDoorPanelType2 = 48 | iDoorPanelType2 = 45 | iDoorPanelType2 = 54) then
	hideparameter "gs_fw_lower2", "gs_fw_upper2"
	lock "gs_fw_lower2", "gs_fw_upper2"
endif

! Not french panel ------------------------------------------------------------

if not(iDoorPanelType = 45) then
	hideparameter "gs_fw_side_left", "gs_fw_side_right"
	lock "gs_fw_side_left", "gs_fw_side_right"
endif
if bAsymmetricLeafs & not(iDoorPanelType2 = 45) then
	hideparameter "gs_fw_side_left2", "gs_fw_side_right2"
	lock "gs_fw_side_left2", "gs_fw_side_right2"
endif


! =============================================================================
! Empty Panel or Custom Panel
! =============================================================================

if iDoorPanelType = 0 | iDoorPanelType = 49 then
	hideparameter "gs_fw_side","gs_fw_lower","gs_fw_upper","gs_int_fw",
		"gs_fw_side_left","gs_fw_side_right",
		"gs_grill_pos", "gs_grill_pos_m",
		"gs_grid_w", "gs_grid_thk", "gs_hor_gnum", "gs_ver_gnum", "gs_leaf_undercut"
	lock "gs_fw_side","gs_fw_lower","gs_fw_upper","gs_int_fw",
		"gs_fw_side_left","gs_fw_side_right",
		"gs_grill_pos", "gs_grill_pos_m",
		"gs_grid_w", "gs_grid_thk", "gs_hor_gnum", "gs_ver_gnum", "gs_leaf_undercut"
endif

if bAsymmetricLeafs & (iDoorPanelType2 = 0 | iDoorPanelType2 = 49) then
	hideparameter "gs_fw_side2","gs_fw_lower2","gs_fw_upper2","gs_int_fw2",
		"gs_fw_side_left2","gs_fw_side_right2",
		"gs_grill_pos2", "gs_grill_pos2_m",
		"gs_grid_w2", "gs_grid_thk2", "gs_hor_gnum2", "gs_ver_gnum2"
	lock "gs_fw_side2","gs_fw_lower2","gs_fw_upper2","gs_int_fw2",
		"gs_fw_side_left2","gs_fw_side_right2",
		"gs_grill_pos2", "gs_grill_pos2_m",
		"gs_grid_w2", "gs_grid_thk2", "gs_hor_gnum2", "gs_ver_gnum2"
endif

if iDoorPanelType = 0 & (not(bAsymmetricLeafs) | iDoorPanelType2 = 0) then
	! Lock and hide common parameters
	hideparameter "gs_leaf_pen", "gs_leaf_pen_2D", "gs_fillLeaf", "gs_penLeaf_fg", "gs_penLeaf_bg",
				  "gs_leaf_mat", "gs_leaf_matin", "gs_leaf_mat2", "gs_leaf_mat3", "gs_leaf_grill_mat"
	lock "gs_leaf_pen", "gs_leaf_pen_2D", "gs_fillLeaf", "gs_penLeaf_fg", "gs_penLeaf_bg",
		 "gs_leaf_mat", "gs_leaf_matin", "gs_leaf_mat2", "gs_leaf_mat3", "gs_leaf_grill_mat"
endif

if (iDoorPanelType = 0 | iDoorPanelType = 49) & (not(bAsymmetricLeafs) | iDoorPanelType2 = 0 | iDoorPanelType2 = 49) then
	hideparameter "gs_leaf_pen"
	lock "gs_leaf_pen"
endif

! =============================================================================
! For DoorPanel AddOn
! =============================================================================

if iDoorPanelType = 49 then
	dim gs_pt[]
	call "Door_Panel_Collection_kmod" parameters returned_parameters gs_pt
	values "gs_cust_panel" gs_pt
else
	lock "gs_cust_panel"
	hideparameter "gs_cust_panel"
endif
if bAsymmetricLeafs then
	if iDoorPanelType2 = 49 then
		dim gs_pt[]
		call "Door_Panel_Collection_kmod" parameters returned_parameters gs_pt
		values "gs_cust_panel2" gs_pt
	else
		lock "gs_cust_panel2"
		hideparameter "gs_cust_panel2"
	endif
endif


! =============================================================================
! French panel calculations
! =============================================================================

if iDoorPanelType = 45 then

	leafWidth = A / leafNum
	if leafNum = 2 then
		leafWidth	= gs_SecondLeaf_w		! Right panel width
		leafWidth2	= A - gs_SecondLeaf_w	! Left panel width
	endif
	leafHeight = B

	f_rench_h=0
	if GLOB_MODPAR_NAME="gs_fw_lower" then f_rench_h=1
	if GLOB_MODPAR_NAME="gs_fw_upper" then f_rench_h=1
	if GLOB_MODPAR_NAME="gs_hor_gnum" then f_rench_h=1
	if GLOB_MODPAR_NAME="iDoorPanelType" then f_rench_h=1
	if GLOB_MODPAR_NAME="B" then f_rench_h=1

	f_rench_v=0
	if GLOB_MODPAR_NAME="gs_fw_side_left" then f_rench_v=1
	if GLOB_MODPAR_NAME="gs_fw_side_right" then f_rench_v=1
	if GLOB_MODPAR_NAME="gs_ver_gnum" then f_rench_v=1
	if GLOB_MODPAR_NAME="iDoorPanelType" then f_rench_v=1
	if GLOB_MODPAR_NAME="A" then f_rench_v=1
	if GLOB_MODPAR_NAME="gs_rttl" then f_rench_v=1
	if GLOB_MODPAR_NAME="gs_SecondLeaf_w" then f_rench_v=1


	if gs_hor_gnum>0 then
		if f_rench_h=1 then
			dim temp[]
			last=0
			dist=(leafHeight-gs_fw_lower-gs_fw_upper+gs_grid_w)/(gs_hor_gnum)
			for i=1 to gs_hor_gnum
				temp[i]=last+dist
				last=temp[i]
			next i

			parameters gs_hor_d=temp
			gs_hor_d=temp
		endif
	endif

	if gs_ver_gnum>0 then
		if f_rench_v=1 then
			dim temp2[]
			last2=0
			dist2=(leafWidth-gs_fw_side_left-gs_fw_side_right+gs_grid_w)/(gs_ver_gnum)
			for HJ=1 to gs_ver_gnum
				temp2[HJ]=last2+dist2
				last2=temp2[HJ]
			next HJ

			parameters gs_ver_d=temp2
			gs_ver_d=temp2
		endif
	endif

	if leafNum = 2 then

		!************** double leaf doors

		if gs_ver_gnum>0 then
			if f_rench_v=1 then
				dim temp4[]
				last4=0
				dist4=(leafWidth2-gs_fw_side_left-gs_fw_side_right+gs_grid_w)/(gs_ver_gnum)
				for HJ=1 to gs_ver_gnum
					temp4[HJ]=last4+dist4
					last4=temp4[HJ]
				next HJ

				parameters gs_ver_d4=temp4
				gs_ver_d4=temp4
			endif
		endif

	endif

endif

if iDoorPanelType2 = 45 then
		!************** side panel

	leafWidth = A / leafNum
	if leafNum = 2 then
		leafWidth	= gs_SecondLeaf_w		! Right panel width
		leafWidth2	= A - gs_SecondLeaf_w	! Left panel width
	endif
	leafHeight = B

	f_rench_h=0
	if GLOB_MODPAR_NAME="gs_fw_lower2" then f_rench_h=1
	if GLOB_MODPAR_NAME="gs_fw_upper2" then f_rench_h=1
	if GLOB_MODPAR_NAME="gs_hor_gnum2" then f_rench_h=1
	if GLOB_MODPAR_NAME="iDoorPanelType2" then f_rench_h=1
	if GLOB_MODPAR_NAME="B" then f_rench_h=1

	f_rench_v=0
	if GLOB_MODPAR_NAME="gs_fw_side_left2" then f_rench_v=1
	if GLOB_MODPAR_NAME="gs_fw_side_right2" then f_rench_v=1
	if GLOB_MODPAR_NAME="gs_ver_gnum2" then f_rench_v=1
	if GLOB_MODPAR_NAME="iDoorPanelType2" then f_rench_v=1
	if GLOB_MODPAR_NAME="A" then f_rench_v=1
	if GLOB_MODPAR_NAME="gs_rttl" then f_rench_v=1
	if GLOB_MODPAR_NAME="gs_SecondLeaf_w" then f_rench_v=1

!	if bSecondPanel then

		if gs_hor_gnum2>0 then
			if f_rench_h=1 then
				dim temp5[]
				last5=0
				dist5=(leafHeight-gs_fw_lower2-gs_fw_upper2+gs_grid_w2)/(gs_hor_gnum2)
				for HJ=1 to gs_hor_gnum2
					temp5[HJ]=last5+dist5
					last5=temp5[HJ]
				next HJ
	
				parameters gs_hor_d2=temp5
				gs_hor_d2=temp5
			endif
		endif
	
		if gs_ver_gnum2>0 then
			if f_rench_v=1 then
				dim temp6[]
				last6=0
				dist6=(leafWidth2-gs_fw_side_left2-gs_fw_side_right2+gs_grid_w2)/(gs_ver_gnum2)
				for HJ=1 to gs_ver_gnum2
					temp6[HJ]=last6+dist6
					last6=temp6[HJ]
				next HJ
	
				parameters gs_ver_d2=temp6
				gs_ver_d2=temp6
			endif
		endif
!	endif

endif

! =============================================================================
! CHI - Show as Glass Panel on Symbol
! =============================================================================

if GLOB_MODPAR_NAME="iDoorPanelType" then
	if	iDoorPanelType=46 | iDoorPanelType=47 | iDoorPanelType=48 |\
		iDoorPanelType=2 | iDoorPanelType=3 | iDoorPanelType=4 |\
		iDoorPanelType=13 | iDoorPanelType=14 | iDoorPanelType=15 |\
		iDoorPanelType=16 | iDoorPanelType=17 | iDoorPanelType=18 |\
		iDoorPanelType=19 | iDoorPanelType=20 | iDoorPanelType=21 |\
		iDoorPanelType=25 | iDoorPanelType=26 | iDoorPanelType=45 |\
		iDoorPanelType=36 | iDoorPanelType=37 | iDoorPanelType=38 |\
		iDoorPanelType=39 | iDoorPanelType=40 | iDoorPanelType=41 then
		parameters bShowGlassPanelOnSymbol = 1
	else
		parameters bShowGlassPanelOnSymbol = 0
	endif
endif


bLockMullionParams_1 = not(iDoorPanelType = 47 | iDoorPanelType = 48 | iDoorPanelType = 45)
bLockGlassParams_1 = (iDoorPanelType =  0 |\
					iDoorPanelType =  1 |\
					iDoorPanelType =  5 |\
					iDoorPanelType =  6 |\
					iDoorPanelType =  7 |\
					iDoorPanelType =  8 |\
					iDoorPanelType =  9 |\
					iDoorPanelType = 10 |\
					iDoorPanelType = 11 |\
					iDoorPanelType = 12 |\
					iDoorPanelType = 28 |\
					iDoorPanelType = 41 |\
					iDoorPanelType = 42 |\
					iDoorPanelType = 43 |\
					iDoorPanelType = 44 |\
					iDoorPanelType = 49 |\
					iDoorPanelType = 57 |\
					iDoorPanelType = 58 |\
					iDoorPanelType = 59 |\
					iDoorPanelType = 60 |\
					iDoorPanelType = 69 |\
					iDoorPanelType = 73 |\
					iDoorPanelType = 74 )

if bAsymmetricLeafs then
	bLockMullionParams_2 = not(iDoorPanelType2 = 47 | iDoorPanelType2 = 48 | iDoorPanelType2 = 45)
	bLockGlassParams_2 = (iDoorPanelType2 =  0 |\
						iDoorPanelType2 =  1 |\
						iDoorPanelType2 =  5 |\
						iDoorPanelType2 =  6 |\
						iDoorPanelType2 =  7 |\
						iDoorPanelType2 =  8 |\
						iDoorPanelType2 =  9 |\
						iDoorPanelType2 = 10 |\
						iDoorPanelType2 = 11 |\
						iDoorPanelType2 = 12 |\
						iDoorPanelType2 = 28 |\
						iDoorPanelType2 = 41 |\
						iDoorPanelType2 = 42 |\
						iDoorPanelType2 = 43 |\
						iDoorPanelType2 = 44 |\
						iDoorPanelType2 = 49 |\
						iDoorPanelType2 = 57 |\
						iDoorPanelType2 = 58 |\
						iDoorPanelType2 = 59 |\
						iDoorPanelType2 = 60 |\
						iDoorPanelType2 = 69 |\
						iDoorPanelType2 = 73 |\
						iDoorPanelType2 = 74 )

else
	bLockMullionParams_2 = 1
	bLockGlassParams_2	 = 1
endif

bLockMullionParams	= (bLockMullionParams_1 & bLockMullionParams_2)
bLockGlassParams	= (bLockGlassParams_1 & bLockGlassParams_2)

if not(bStorefrontDoor) & bLockMullionParams then
	hideparameter "gs_leaf_grill_mat", "gs_leaf_grill_mat2"
	lock "gs_leaf_grill_mat", "gs_leaf_grill_mat2"
endif

panelNum = vardim1(leafWidthArray)
panelGlassArea = 0

for i = 1 to panelNum
	iDoorType = iDoorPanelType
	if i = 2 & bAsymmetricLeafs then iDoorType = iDoorPanelType2

	if iDoorType = 0 then ! Empty
		panelGlassArea = panelGlassArea + 0 ! No Glazed Leaf
	endif

	if iDoorType = 1 then
		panelGlassArea = panelGlassArea + 0 ! No Glazed Leaf
	endif

	if iDoorType = 2 then ! Style 2
		glassHeight		= B/2 - gs_fw_side - 2 * gs_int_fw
		glassWidth		= leafWidthArray[i] - 2 * gs_fw_side - 2 * gs_int_fw

		panelGlassArea = panelGlassArea + glassWidth * glassHeight
	endif

	if iDoorType = 3 then ! Style 3
		glassHeight		= (B - 5 * gs_fw_side)/4 - 2 * gs_int_fw
		glassWidth		= (leafWidthArray[i] - 3 * gs_fw_side)/2 - 2 * gs_int_fw
		glassNum		= 8

		if glassHeight > EPS & glassWidth > EPS then
			summaGlassArea = glassNum * glassHeight * glassWidth
		else
			summaGlassArea = 0
		endif

		panelGlassArea = panelGlassArea + summaGlassArea
	endif

	if iDoorType = 4 then ! Style 4
		glassHeight		= (B - 7 * gs_fw_side)/6 - 2 * gs_int_fw
		glassWidth		= (leafWidthArray[i] - 4 * gs_fw_side)/3 - 2 * gs_int_fw
		glassNum		= 18

		if glassHeight > EPS & glassWidth > EPS then
			summaGlassArea = glassNum * glassHeight * glassWidth
		else
			summaGlassArea = 0
		endif

		panelGlassArea = panelGlassArea + summaGlassArea
	endif

	if iDoorType = 5 then ! Style 2
		panelGlassArea = panelGlassArea + 0 ! No Glazed Leaf
	endif

	if iDoorType = 6 then ! Style 6
		panelGlassArea = panelGlassArea + 0 ! No Glazed Leaf
	endif

	if iDoorType = 7 then ! Style 7
		panelGlassArea = panelGlassArea + 0 ! No Glazed Leaf
	endif

	if iDoorType = 8 then ! Style 8
		panelGlassArea = panelGlassArea + 0 ! No Glazed Leaf
	endif

	if iDoorType = 9 then ! Style 9
		panelGlassArea = panelGlassArea + 0 ! No Glazed Leaf
	endif

	if iDoorType = 10 then ! Style 10
		panelGlassArea = panelGlassArea + 0 ! No Glazed Leaf
	endif

	if iDoorType = 11 then ! Style 11
		panelGlassArea = panelGlassArea + 0 ! No Glazed Leaf
	endif

	if iDoorType = 12 then ! Style 12
		panelGlassArea = panelGlassArea + 0 ! No Glazed Leaf
	endif

	if iDoorType = 13 then ! Style 13
		glassHeight		= B - (leafWidthArray[i] + 0.138) * 0.11  - 0.95
		glassWidth		= leafWidthArray[i] - 0.16
		arcHeight		= 0.03
		totalGlassArea	= glassWidth * glassHeight + glassWidth * arcHeight / 2

		grilWidth		= 0.02
		verGrillArea	= grilWidth * (glassHeight + arcHeight)
		horGrillArea	= grilWidth * glassWidth * 2
		sectGrillArea	= 2 * grilWidth * grilWidth
		summaGrillArea	= verGrillArea + horGrillArea - sectGrillArea
		summaGlassArea	= totalGlassArea - summaGrillArea

		panelGlassArea = panelGlassArea + summaGlassArea
	endif

	if iDoorType = 14 then ! Style 14
		glassHeight		= B - (leafWidthArray[i] + 0.138) * 0.11  - 0.95
		glassWidth		= leafWidthArray[i] - 0.16
		arcHeight		= 0.03
		summaGlassArea	= glassWidth * glassHeight + glassWidth * arcHeight / 2

		panelGlassArea = panelGlassArea + summaGlassArea
	endif

	if iDoorType = 15 then ! Style 15
		lowerGlassHeight	= 0.58
		lowerGlassWidth		= leafWidthArray[i] - 0.160
		glassHeight			= B - 0.99
		glassWidth			= leafWidthArray[i] - 0.160

		summaGlassArea = lowerGlassHeight * lowerGlassWidth + glassHeight * glassWidth

		panelGlassArea = panelGlassArea + summaGlassArea
	endif

	if iDoorType = 16 then ! Style 16
		cornerGlassHeight	= 0.1
		cornerGlassWidth	= 0.1
		cornerGlassArea		= 4 * cornerGlassHeight * cornerGlassWidth

		horCentGlassHeight	= 0.1
		horCentGlassWidth	= leafWidthArray[i] - 0.4
		horCentGlassArea	= 2 * horCentGlassHeight * horCentGlassWidth

		verCentGlassHeight	= B - 1.23
		verCentGlassWidth	= 0.1
		verCentGlassArea	= 2 * verCentGlassHeight * verCentGlassWidth

		innerGlassHeight	= B - 1.23
		innerGlassWidth		= leafWidthArray[i] - 0.4
		innerGlassArea		= innerGlassHeight * innerGlassWidth

		summaGlassArea		= cornerGlassArea + horCentGlassArea + verCentGlassArea + innerGlassArea

		panelGlassArea = panelGlassArea + summaGlassArea
	endif

	if iDoorType = 17 then ! Style 17
		lowerGlassHeight	= 0.56
		lowerGlassWidth		= leafWidthArray[i] - 0.18
		glassHeight			= B - 1.01
		glassWidth			= leafWidthArray[i] - 0.18

		summaGlassArea = lowerGlassHeight * lowerGlassWidth + glassHeight * glassWidth

		panelGlassArea = panelGlassArea + summaGlassArea
	endif

	if iDoorType = 18 then ! Style 18
		lowerGlassHeight	= 0.56
		lowerGlassWidth		= leafWidthArray[i] - 0.28
		glassHeight			= B - 1.01
		glassWidth			= leafWidthArray[i] - 0.28

		summaGlassArea = lowerGlassHeight * lowerGlassWidth + glassHeight * glassWidth

		panelGlassArea = panelGlassArea + summaGlassArea
	endif

	if iDoorType = 19 then ! Style 19
		lowerGlassHeight	= 0.56
		lowerGlassWidth		= leafWidthArray[i] - 0.28
		glassHeight			= B - 1.01
		glassWidth			= leafWidthArray[i] - 0.28
		upperDividerHeight	= 0.1
		upperDividerWidth	= leafWidthArray[i] - 0.28

		summaGlassArea = lowerGlassHeight * lowerGlassWidth + glassHeight * glassWidth - upperDividerHeight * upperDividerWidth

		panelGlassArea = panelGlassArea + summaGlassArea
	endif

	if iDoorType = 20 then ! Style 20
		numHorGrills	= 4
		numVerGrills	= 2
		glassHeight		= B - 0.26
		glassWidth		= leafWidthArray[i] - 0.16
		grilWidth		= 0.02

		verGrillArea	= grilWidth * glassHeight * numVerGrills
		horGrillArea	= grilWidth * glassWidth * numHorGrills
		sectGrillArea	= numHorGrills * numVerGrills * grilWidth * grilWidth
		summaGrillArea	= verGrillArea + horGrillArea - sectGrillArea

		panelGlassArea = panelGlassArea + glassHeight * glassWidth - summaGrillArea
	endif

	if iDoorType = 21 then ! Style 46
		numHorGrills	= 4
		numVerGrills	= 2
		glassHeight		= B - 0.26
		glassWidth		= leafWidthArray[i] - 0.16
		grilWidth		= 0.02

		verGrillArea	= grilWidth * (glassHeight - 0.011) * numVerGrills
		horGrillArea	= grilWidth * glassWidth * numHorGrills
		sectGrillArea	= numHorGrills * numVerGrills * grilWidth * grilWidth
		summaGrillArea	= verGrillArea + horGrillArea - sectGrillArea

		sectorHeight	= min(0.10, glassWidth/2)
		ang				= atn((glassWidth/2)/sectorHeight)
		if ang < 45 then
			archR = sectorHeight
		else
			archR = (glassWidth/2)/sin(180-2*ang)
		endif
		glassShoulderHeight = glassHeight - sectorHeight

		triangleAng		= asn((glassWidth/2)/archR) * 2
		sectorArea		= archR^2 * PI * triangleAng/360
		triangleHeight	= archR - sectorHeight
		triangleArea	= glassWidth * triangleHeight / 2
		summaGlassArea	= GlassShoulderHeight * glassWidth + sectorArea - triangleArea

		panelGlassArea = panelGlassArea + summaGlassArea - summaGrillArea
	endif

	if iDoorType = 22 then ! Style 22
		glassHeight		= 0.39
		glassWidth		= 0.16

		panelGlassArea = panelGlassArea + glassHeight * glassWidth
	endif

	if iDoorType = 23 then ! Style 23
		glassHeightLower	= 0.75
		glassHeightUpprer	= B - 1.21
		glassWidth			= 0.16
		summaGlassArea		= glassHeightLower * glassWidth + glassHeightUpprer * glassWidth

		panelGlassArea = panelGlassArea + summaGlassArea
	endif

	if iDoorType = 24 then ! Style 24
		glassHeight		= B - 1.21
		glassWidth		= 0.16
		panelGlassArea = panelGlassArea + glassHeight * glassWidth
	endif

	if iDoorType = 25 then ! Style 25
		glassHeight		= 0.39
		glassWidth		= leafWidthArray[i] - 0.238

		panelGlassArea = panelGlassArea + glassHeight * glassWidth
	endif

	if iDoorType = 26 then ! Style 26
		glassHeight		= B - 1.21
		glassWidth		= leafWidthArray[i] - 0.238

		panelGlassArea = panelGlassArea + glassHeight * glassWidth
	endif

	if iDoorType = 27 then ! Style 27
		glassRadius = 0.075

		panelGlassArea = panelGlassArea + 3 * GlassRadius^2 * PI
	endif

	if iDoorType = 28 then ! Style 28
		panelGlassArea = panelGlassArea + 0 ! No Glazed Leaf
	endif

	if iDoorType = 29 then ! Style 29
		radiusOut	= leafWidthArray[i]/2 - 0.08
		areaOut		= (radiusOut^2 * PI) / 2
		radiusIn	= 0.1
		areaIn		= (0.1^2 * PI) / 2
		grillWidth	= 0.02
		grillArea	= 3 * (radiusOut - radiusIn) * grillWidth

		summaGlassArea	= areaOut - areaIn - grillArea

		panelGlassArea = panelGlassArea + summaGlassArea
	endif

	if iDoorType = 30 then ! Style 30
		glassHeight		= B - 0.99
		glassWidth		= leafWidthArray[i]/2 - 0.12

		panelGlassArea = panelGlassArea + 2 * glassHeight * glassWidth
	endif

	if iDoorType = 31 then ! Style 31
		glassHeight		= leafWidthArray[i]/2 - 0.089
		glassWidth		= leafWidthArray[i]/2 - 0.12

		panelGlassArea = panelGlassArea + 2 * glassHeight * glassWidth
	endif

	if iDoorType = 32 then ! Style 32
		glassHeight 	= (B - 1.05)/3
		glassWidth		= (leafWidthArray[i] - 0.22)/3

		panelGlassArea = panelGlassArea + 9 * glassHeight * glassWidth
	endif

	if iDoorType = 33 then ! Style 33
		glassHeight		= B - 0.99
		glassWidth		= leafWidthArray[i] - 0.16

		panelGlassArea = panelGlassArea + glassHeight * glassWidth
	endif

	if iDoorType = 34 then ! Style 34
		glassWidth	= (leafWidthArray[i] - 0.28)/3
		glassHeight	=  B/2 - glassWidth*0.8  - 0.555

		panelGlassArea = panelGlassArea + glassHeight * glassWidth
	endif

	if iDoorType = 35 then ! Style 35
		glassRadius = 0.075

		panelGlassArea = panelGlassArea +  glassRadius^2 * PI
	endif

	if iDoorType = 36 then ! Style 36
		sumRebeates		= gs_rebate_width + gs_ds_w
		glassHeight		= B - 0.08 - 0.08
		glassWidth		= leafWidthArray[i] - sumRebeates - sumRebeates * (gs_leaf_optype_m = 1 | gs_leaf_optype_m = 3)
		if bStorefrontClassic then glassWidth	= a - sumRebeates - sumRebeates * (gs_leaf_optype_m = 1 | gs_leaf_optype_m = 3)
		glassArea	= glassWidth * glassHeight

		panelGlassArea	= panelGlassArea + glassArea
	endif

	if iDoorType = 37 then ! Style 37
		sumRebeates		= gs_rebate_width + gs_ds_w
		glassHeight		= B - sumRebeates
		glassWidth		= leafWidthArray[i] - sumRebeates - sumRebeates * (gs_leaf_optype_m = 1 | gs_leaf_optype_m = 3)
		if bStorefrontClassic then glassWidth	= a - sumRebeates - sumRebeates * (gs_leaf_optype_m = 1 | gs_leaf_optype_m = 3)
		frameHeight		= 0.08
		glassArea		= glassWidth * glassHeight
		frameArea		= glassWidth * frameHeight + (frameHeight - sumRebeates) * (0.20 - sumRebeates)

		panelGlassArea	= panelGlassArea + glassArea - frameArea
	endif

	if iDoorType = 38 then ! Style 38
		sumRebeates		= gs_rebate_width + gs_ds_w
		glassHeight		= B - sumRebeates
		glassWidth		= leafWidthArray[i] - sumRebeates - sumRebeates * (gs_leaf_optype_m = 1 | gs_leaf_optype_m = 3)
		if bStorefrontClassic then glassWidth	= a - sumRebeates - sumRebeates * (gs_leaf_optype_m = 1 | gs_leaf_optype_m = 3)
		glassArea	= glassWidth * glassHeight
		frameArea		= 2 * (0.20 - sumRebeates) * (0.08 - sumRebeates / 2)

		panelGlassArea	= panelGlassArea + glassArea - frameArea
	endif

	if iDoorType = 39 then ! Style 39
		if bStorefrontClassic then
		glassHeight			= B - gs_fw_side - gs_fw_lower
			glassWidth		= a - 2 * gs_fw_side
			midFrameWidth	= gs_int_fw
		else
			glassHeight		= B - 2 * 0.1
			glassWidth		= leafWidthArray[i] - 2 * 0.1
			midFrameWidth	= 0.16
		endif

		midRailArea			= 0
		if bMiddleRail then midRailArea = midFrameWidth * glassWidth
		glassArea			= glassWidth * glassHeight - midRailArea

		panelGlassArea = panelGlassArea + glassArea
	endif

	if iDoorType = 40 then ! Style 40
		if bStorefrontClassic then
		glassHeight			= B - gs_fw_side - gs_fw_lower
			glassWidth		= a - 2 * gs_fw_side
			midFrameWidth	= gs_int_fw
		else
			glassHeight		= B - 2 * 0.1
			glassWidth		= leafWidthArray[i] - 2 * 0.1
			midFrameWidth	= 0.16
		endif

		panelGlassArea = panelGlassArea + glassHeight * glassWidth
	endif

	if iDoorType = 41 then ! Style 41
		panelGlassArea = panelGlassArea + 0 ! No Glazed Leaf
	endif

	if iDoorType = 42 then ! Style 42
		panelGlassArea = panelGlassArea + 0 ! No Glazed Leaf
	endif

	if iDoorType = 43 then ! Style 43
		panelGlassArea = panelGlassArea + 0 ! No Glazed Leaf
	endif

	if iDoorType = 44 then ! Style 44
		panelGlassArea = panelGlassArea + 0 ! No Glazed Leaf
	endif

	if iDoorType = 45 then ! French Panel
		numHorGrills	= gs_hor_gnum - 1
		numVerGrills	= gs_ver_gnum - 1
		glassHeight		= B - gs_fw_lower -gs_fw_upper
		glassWidth		= leafWidthArray[i] - gs_fw_side_left - gs_fw_side_right
		grilWidth		= gs_grid_w

		verGrillArea	= gs_grid_w * glassHeight * numVerGrills
		horGrillArea	= gs_grid_w * glassWidth * numHorGrills
		sectGrillArea	= numHorGrills * numVerGrills * grilWidth * grilWidth
		summaGrillArea	= verGrillArea + horGrillArea - sectGrillArea

		panelGlassArea = panelGlassArea + glassHeight * glassWidth - summaGrillArea
	endif

	if iDoorType = 46 then ! No mulions
		if iLeafShape = LEAF_SHAPE_RECTANGULAR then
			glassHeight		= B - gs_fw_lower - gs_fw_upper
			glassWidth		= leafWidthArray[i] - 2 * gs_fw_side

			panelGlassArea = panelGlassArea + glassWidth * glassHeight
		endif

		if iLeafShape = LEAF_SHAPE_ARCHED then
			glassHeight		= gs_shoulder_h - (fce-fcefw) - gs_fw_lower		! Shoulder Height of Glass
			glassWidth		= leafWidthArray[i] - 2 * gs_fw_side			! Width of Glass
			arcHeightMod	= gs_fw_side									! Frame Width at top of Arc
			arcHeight		= B - arcHeightMod - gs_fw_lower - glassHeight	! Glass Height Above Shoulder
			arcRadius		= r2 - arcHeightMod								! Radius of Arc (r2 Calculated in MasterScript)
			arcAngle		= 2*ATN((glassWidth/2)/(arcRadius-arcHeight))	! Angle of Arc (A korcik hurral elmetszett reszebe irhato derekszogu3szogbol szamolva)
			sectorArea		= arcRadius^2 * PI * arcAngle/360				! Area of Sector (Az iv altal meghatarozott korcikk)
			triangleArea	= glassWidth * (arcRadius-arcHeight) / 2		! Triangle part of Sector (A korcikkbol a hur altal lemetszett 3szog)

			glassArea		= glassHeight * glassWidth						! Area of Glass below Shoulder
			arcArea			= sectorArea - triangleArea						! Area of Glass abowe Shoulder

			panelGlassArea = panelGlassArea + glassArea + arcArea
		endif

		if iLeafShape = LEAF_SHAPE_HALFARCHED then
			glassHeight		= gs_shoulder_h -(fce-fcefw)- gs_fw_lower
			glassWidth		= leafWidthArray[i] - 2*gs_fw_side

			archRadius		= r2 - gs_fw_side
			fullArcWidth	= 2 * (glassWidth + gs_fw_side)
			triangleHeight	= SQR(archRadius^2 - (fullArcWidth/2)^2)
			arcHeight		= archRadius - triangleHeight
			sectorAlpha		= ASN((fullArcWidth/2)/archRadius) * 2
			triangleArea	= fullArcWidth * triangleHeight / 2
			sectorArea		= (sectorAlpha / 360) * archRadius^2 * PI
			fullArcArea		= sectorArea - triangleArea

			arcArea			= fullArcArea / 2 - arcHeight * gs_fw_side
			rectArea		= glassHeight * glassWidth

			panelGlassArea = panelGlassArea + rectArea + arcArea
		endif
	endif

	if iDoorType = 47 then ! H-V Grid
		numHorGrills			= gs_hor_gnum - 1
		numVerGrills			= gs_ver_gnum - 1
		grilWidth				= gs_grid_w
		totalGrillSectionArea	= numHorGrills * numVerGrills * grilWidth * grilWidth

		if iLeafShape = LEAF_SHAPE_RECTANGULAR then
			glassHeight		= B - gs_fw_lower - gs_fw_upper
			glassWidth		= leafWidthArray[i] - 2 * gs_fw_side

			verGrillArea	= gs_grid_w * glassHeight * numVerGrills
			horGrillArea	= gs_grid_w * glassWidth * numHorGrills
			summaGrillArea	= verGrillArea + horGrillArea - totalGrillSectionArea

			panelGlassArea = panelGlassArea + glassHeight * glassWidth - summaGrillArea
		endif

		if iLeafShape = LEAF_SHAPE_ARCHED then
			glassHeight		= gs_shoulder_h - (fce-fcefw) - gs_fw_lower	! Shoulder Height of Glass
			glassWidth		= leafWidthArray[i] - 2 * gs_fw_side			! Width of Glass
			arcHeightMod	= gs_fw_side									! Frame Width at top of Arc
			arcHeight		= B - arcHeightMod - gs_fw_lower - glassHeight	! Glass Height Above Shoulder
			arcRadius		= r2 - arcHeightMod								! Radius of Arc (r2 Calculated in MasterScript)
			arcAngle		= 2*ATN((glassWidth/2)/(arcRadius-arcHeight))	! Angle of Arc (A korcik hurral elmetszett reszebe irhato derekszogu3szogbol szamolva)
			sectorArea		= arcRadius^2 * PI * arcAngle/360				! Area of Sector (Az iv altal meghatarozott korcikk)
			triangleArea	= glassWidth * (arcRadius-arcHeight) / 2		! Triangle part of Sector (A korcikkbol a hur altal lemetszett 3szog)

			glassArea		= glassHeight * glassWidth						! Area of Glass below Shoulder
			arcArea			= sectorArea - triangleArea						! Area of Glass abowe Shoulder

			verGrillArea	= gs_grid_w * (glassHeight + arcHeight/2) * numVerGrills
			horGrillArea	= gs_grid_w * glassWidth * numHorGrills
			summaGrillArea	= verGrillArea + horGrillArea - totalGrillSectionArea

			panelGlassArea = panelGlassArea + glassArea + arcArea - summaGrillArea
		endif

		if iLeafShape = LEAF_SHAPE_HALFARCHED then
			glassHeight		= gs_shoulder_h -(fce-fcefw)- gs_fw_lower
			glassWidth		= leafWidthArray[i] - 2*gs_fw_side

			archRadius		= r2 - gs_fw_side
			fullArcWidth	= 2 * (glassWidth + gs_fw_side)
			triangleHeight	= SQR(archRadius^2 - (fullArcWidth/2)^2)
			arcHeight		= archRadius - triangleHeight
			sectorAlpha		= ASN((fullArcWidth/2)/archRadius) * 2
			triangleArea	= fullArcWidth * triangleHeight / 2
			sectorArea		= (sectorAlpha / 360) * archRadius^2 * PI
			fullArcArea		= sectorArea - triangleArea

			arcArea			= fullArcArea / 2 - arcHeight * gs_fw_side
			rectArea		= glassHeight * glassWidth

			grillHeight		= glassHeight + arcHeight * 0.7
			verGrillArea	= gs_grid_w * grillHeight * numVerGrills
			horGrillArea	= gs_grid_w * glassWidth * numHorGrills
			summaGrillArea	= verGrillArea + horGrillArea - totalGrillSectionArea

			panelGlassArea = panelGlassArea + rectArea + arcArea - summaGrillArea
		endif
	endif

	if iDoorType = 48 then	!Prairie style
		numHorGrills	= 4
		numVerGrills	= 3
		glassHeight		= B - gs_fw_lower - gs_fw_upper - 2 * gs_grid_w
		glassWidth		= leafWidthArray[i] - 2 * gs_fw_side - 2 * gs_grid_w
		grilWidth		= gs_grid_w

		verGrillArea	= gs_grid_w * glassHeight * numVerGrills
		horGrillArea	= gs_grid_w * glassWidth * numHorGrills
		sectGrillArea	= numHorGrills * numVerGrills * grilWidth * grilWidth
		modGrillArea	= 6 * gs_grid_w * 0.076 ! Width diference between inner and Full-lenght grills.
		summaGrillArea	= verGrillArea + horGrillArea - sectGrillArea + modGrillArea

		panelGlassArea	= panelGlassArea + glassHeight * glassWidth - summaGrillArea
	endif

	if iDoorType = 49 then ! Custom Panel
		panelGlassArea = panelGlassArea + 0 ! No Glazed Leaf
	endif

	if iDoorType = 50 then !
		panelGlassArea = panelGlassArea + 0 ! No Glazed Leaf
	endif

	if iDoorType = 51 then ! Style 48
		lowerGlassHeight		= 0.35
		lowerGlassWidth		= leafWidthArray[i]/2 - 0.05
		glassHeight			= 0.75
		glassWidth			= a/2-0.05

		summaGlassArea = lowerGlassHeight * lowerGlassWidth + glassHeight * glassWidth
		panelGlassArea = panelGlassArea + summaGlassArea
	endif

	if iDoorType = 52 then ! Style 49
		glassWidth		= leafWidthArray[i] - leafWidthArray[i] / 3
		glassHeight		= B/3.5 - B/16
		glassHeight2	= B - 2* B/3.5 - 3* B/16

		summaGlassArea = glassWidth * (2*glassHeight + glassHeight2)
		panelGlassArea = panelGlassArea + summaGlassArea
	endif

	if iDoorType = 53 then ! Style 50
		glassHeight_1	= 0.2885 * B / 2.115
		glassWidth_1	= 0.55 * leafWidthArray[i] / 0.83
		glassHeight_2	= 0.3203 * B / 2.115
		glassWidth_2	= 0.55 * leafWidthArray[i] / 0.83
		glassHeight_3	= 0.3202 * B / 2.115
		glassWidth_3	= 0.55 * leafWidthArray[i] / 0.83
		glassHeight_4	= 0.3042 * B / 2.115
		glassWidth_4	= 0.55 * leafWidthArray[i] / 0.83

		summaGlassArea = glassHeight_1 * glassWidth_1 + glassHeight_2 * glassWidth_2 + glassHeight_3 * glassWidth_3 + glassHeight_4 * glassWidth_4
		panelGlassArea = panelGlassArea + summaGlassArea
	endif

	if iDoorType = 54 then ! Style 52
		if A < B then
			__R = leafWidthArray[i]/2 - gs_fw_side - 0.025
		else
			__R = B/2 - gs_fw_side - 0.025
		endif
		glassWidth		= __R * 2
		glassHeight		= B - __R * 2 - gs_fw_upper - gs_fw_lower - 0.05

		roundGlassArea	= __R^2 * PI
		rectGlassArea	= glassWidth * glassHeight

		summaGlassArea = roundGlassArea + rectGlassArea
		panelGlassArea = panelGlassArea + summaGlassArea
	endif

	if iDoorType = 55 then ! Style 51
		if leafWidthArray[i] >= 0.9 then
			triangleX	= 0.165
		else
			triangleX	= 0.165+(0.6^2-(2*leafWidthArray[i]/3)^2)/(2*(2*leafWidthArray[i]/3))
		endif
		triangleY		= 0.555
		triangleArea	= triangleX * triangleY
		sectorRadius	= SQR(triangleX^2 + triangleY^2)
		sectorAlpha		= ASN(triangleY/sectorRadius) * 2
		sectorArea		= (sectorAlpha / 360) * sectorRadius^2 * PI
		summaGlassArea	= sectorArea - triangleArea

		panelGlassArea	= panelGlassArea + summaGlassArea
	endif

	if iDoorType = 56 then ! Style 28
		R				=((gs_leaf_thk+0.01)*(gs_leaf_thk+0.01)+(leafWidthArray[i]/2-0.12)*(leafWidthArray[i]/2-0.12))/0.11
		R1				= R-0.015
		R2				= R1-0.007
		dx				= (leafWidthArray[i]-0.135*2-0.007*4) / 3
		dy				= (b-0.12-R+(R2*cos(ASN((leafWidthArray[i]/2-0.142)/R2)))-0.807-0.007*3)/4
		arcRadius		= R1-0.007
		glassWidth		= 3 * dx + 0.014
		glassHeight		= 4*dy+3*0.007
		arcHeight		= b-0.142 - 0.807 - glassHeight
		triHeight		= arcRadius - arcHeight
		arcAngle		= 2*ATN((glassWidth/2)/(triHeight))	! Angle of Arc (A korcik hurral elmetszett reszebe irhato derekszogu3szogbol szamolva)

		arcGrillArea	= (arcHeight * 0.8888) * 0.007 * 2
		sectorArea		= arcRadius^2 * PI * arcAngle/360	! Area of Sector (Az iv altal meghatarozott korcikk)
		triangleArea	= glassWidth * triHeight / 2		! Triangle are

		arcArea			= sectorArea - triangleArea - arcGrill
		rectPartsSum	= 4*3 * dx*dy

		summaGlassArea = rectPartsSum + arcArea
		panelGlassArea = panelGlassArea + summaGlassArea
	endif

	if iDoorType = 57 then ! Style 10
		panelGlassArea = panelGlassArea + 0 ! No Glazed Leaf
	endif

	if iDoorType = 58 then ! Style 11
		panelGlassArea = panelGlassArea + 0 ! No Glazed Leaf
	endif

	if iDoorType = 59 then ! Style 12
		panelGlassArea = panelGlassArea + 0 ! No Glazed Leaf
	endif

	if iDoorType = 60 then ! Style 13
		panelGlassArea = panelGlassArea + 0 ! No Glazed Leaf
	endif

	if iDoorType = 61 then ! Style 31
		glassHeight	= (b-0.135-0.8-0.015*2) / 3
		glassWidth	= (leafWidthArray[i]-0.135*2-0.015) / 2

		summaGlassArea = 6 * glassHeight * glassWidth
		panelGlassArea = panelGlassArea + summaGlassArea
	endif

	if iDoorType = 62 then ! Style 32
		glassHeight		= (b-(0.15+0.87)-0.015*3)/4
		glassWidth		= (leafWidthArray[i]-0.12*2-0.015*6) / 3

		summaGlassArea	= 3 * 4 * glassWidth * glassHeight
		panelGlassArea	= panelGlassArea + summaGlassArea
	endif

	if iDoorType = 63 then ! Style 33
		dx = (leafWidthArray[i]-0.199*2-0.007*2) / 3
		dy = (b-0.135-0.864-0.007*2-0.05) / 3

		R				= (leafWidthArray[i]/2-0.12)^2/0.11
		R1				= R - 0.015 !glass frame
		R2				= R1 - 0.007 !Outer grill thk
		R4				= R2 - 0.050 !Outer glass thk
		R3				= R4 - 0.007 !Inneer glass thk
		arcOrigo		= b-0.12-R

		shoulder		= SQR(R^2 - ((leafWidthArray[i] - 0.24)/2)^2)
		shoulder1		= SQR(R1^2 - ((leafWidthArray[i] - 0.27)/2)^2)
		shoulder2		= SQR(R2^2 - ((leafWidthArray[i] - 0.284)/2)^2)
		shoulder2In		= SQR(R2^2 - 0.0035^2)

		shoulder4		= SQR(R4^2 - ((leafWidthArray[i] - 0.384)/2)^2)
		shoulder4In		= SQR(R4^2 - 0.0035^2)

		shoulder3		= SQR(R3^2 - ((leafWidthArray[i] - 0.398)/2)^2)
		shoulder3In		= SQR(R3^2 - (dx/2+0.007)^2)
		shoulder3Gr		= SQR(R3^2 - (dx/2+0.0035)^2)

		glassHeight1	= arcOrigo + shoulder2 - 0.807
		glassWidth1		= leafWidthArray[i] - 0.12*2 - 0.022*2
		rectPart1		= glassHeight1 * glassWidth1

		glassHeight2	= arcOrigo + shoulder4 - 0.857
		glassWidth2		= leafWidthArray[i] - 0.12*2 - 0.022*2 - 0.050*2
		rectPart2		= glassHeight2 * glassWidth2

		glassHeight3	= arcOrigo + shoulder3 - 0.864
		glassHeight3Gr	= arcOrigo + shoulder3Gr - 0.864
		glassWidth3		= leafWidthArray[i] - 0.12*2 - 0.022*2 - 0.057*2
		rectPart3		= glassHeight3 * glassWidth3

		arcAngle1		= ACS(shoulder2/R2) * 2
		arcAngle2		= ACS(shoulder4/R4) * 2
		arcAngle3		= ACS(shoulder3/R3) * 2

		sectorArea1		= R2^2 * PI * arcAngle1/360
		sectorArea2		= R4^2 * PI * arcAngle2/360
		sectorArea3		= R3^2 * PI * arcAngle3/360

		triangArea1		= shoulder2 * glassWidth1 / 2
		triangArea2		= shoulder4 * glassWidth2 / 2
		triangArea3		= shoulder3 * glassWidth3 / 2

		arcPart1		= sectorArea1 - triangArea1
		arcPart2		= sectorArea2 - triangArea2
		arcPart3		= sectorArea3 - triangArea3

		summaGlassArea	= rectPart1 + arcPart1

		grillFrameArea	= (rectPart2 + arcPart2) - (rectPart3 + arcPart3)
		grillOuterArea	= 6 * 0.007 * 0.050*0 + 2 * 0.007 * (0.050 * SQR(2))
		grillInerArea	= 2 * 0.007 * glassHeight3Gr + 2 * 0.007 * glassWidth3
		grillSectArea	= 4 * 0.007 * 0.007
		summaGrillArea	= grillFrameArea + grillOuterArea + grillInerArea - grillSectArea

		panelGlassArea = panelGlassArea + summaGlassArea - summaGrillArea
	endif

	if iDoorType = 64 then ! Style 44
		d = 2"	! panel frame width
		f = 1"	! f=internal frame width of fill

		glassHeight	= b - (4 * d + 6 * f)
		glassWidth	= leafWidthArray[i] - (4 * d + 6 * f)

		summaGlassArea = glassHeight * glassWidth
		panelGlassArea = panelGlassArea + summaGlassArea
	endif

	if iDoorType = 65 then ! Style 47
		glassHeight	= 0.35
		glassWidth	= 0.35

		summaGlassArea = glassHeight * glassWidth /2
		panelGlassArea = panelGlassArea + summaGlassArea
	endif

	if iDoorType = 66 then ! Style 24
		glassHeight	= 0.5197 * B/2.115
		glassWidth	= 0.55 * leafWidthArray[i]/0.83

		summaGlassArea = glassHeight * glassWidth
		panelGlassArea = panelGlassArea + summaGlassArea
	endif

	if iDoorType = 67 then ! Style 25
		glassWidth		= leafWidthArray[i] - leafWidthArray[i]/3
		glassHeight		= B / 4
		triangleX		= glassWidth / 2
		triangleY		= B / 2
		triangleArea	= triangleX * triangleY
		sectorRadius	= SQR((triangleX)^2 + (triangleY)^2)
		sectorAlpha		= ASN(triangleX/sectorRadius) * 2
		sectorArea		= (sectorAlpha / 360) * sectorRadius^2 * PI

		arcArea			= sectorArea - triangleArea
		rectArea		= glassWidth * glassHeight

		summaGlassArea	= arcArea + rectArea
		panelGlassArea	= panelGlassArea + summaGlassArea
	endif

	if iDoorType = 68 then ! Style 26
		glassHeight	= b - 1.09
		glassWidth	= (leafWidthArray[i]-2*(0.13)-0.05*2)/3

		summaGlassArea = 3 * glassHeight * glassWidth
		panelGlassArea = panelGlassArea + summaGlassArea
	endif

	if iDoorType = 69 then ! Style 15
		panelGlassArea = panelGlassArea + 0 ! No Glazed Leaf
	endif

	if iDoorType = 70 then ! Style 23
		glassHeight	= (b-0.31-0.13-4*0.05)/4
		glassWidth	= leafWidthArray[i]/2-0.13 - 0.025

		summaGlassArea = 2 * glassHeight * glassWidth
		panelGlassArea = panelGlassArea + summaGlassArea
	endif

	if iDoorType = 71 then ! Style 29
		glassHeight	= (b-0.96-0.16-0.03) / 2
		glassWidth	= (leafWidthArray[i]-0.13*2-0.03) / 2

		summaGlassArea = 4 * glassHeight * glassWidth
		panelGlassArea = panelGlassArea + summaGlassArea
	endif

	if iDoorType = 72 then ! Style 30
		! Lower Glasses
		glassHeight	= (b-0.96-0.16-0.03)/2 - 0.03
		glassWidth	= (leafWidthArray[i]-0.13*2-0.03)/2  - 0.03

		summaGlassArea = 4 * glassHeight * glassWidth !+  2 * (TrapezioidPart + ArcPart)
		panelGlassArea = panelGlassArea + summaGlassArea
	endif

	if iDoorType = 73 then ! Style 14
		panelGlassArea = panelGlassArea + 0 ! No Glazed Leaf
	endif

	if iDoorType = 74 then ! Style 16
		panelGlassArea = panelGlassArea + 0 ! No Glazed Leaf
	endif

	if iDoorType = 75 then ! Storefront/Style 6
		glassHeight	= b - 0.1
		glassWidth	= leafWidthArray[i] - 0.1
		if bStorefrontClassic then glassWidth	= a - 0.1

		summaGlassArea = glassHeight * glassWidth
		panelGlassArea = panelGlassArea + summaGlassArea
	endif

next i

end	bLockMullionParams,
	bLockGlassParams,
	panelGlassArea
