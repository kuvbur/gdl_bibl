! const values for parameter: iFaschenTypWIN_MOLDING_PLASTER   = 1WIN_MOLDING_BRICKWORK = 2EPS = 0.0001gs_frame_thk = WIDO_FRAME_THICKNESSbDisableFaschen = not(gs_faschen_left | gs_faschen_right | gs_faschen_top | gs_faschen_bottom)! ==============================================================================! Calculations for Corner Window! ==============================================================================gs_faschen_ovhg_left	= 0gs_faschen_ovhg_right	= 0if bRightCornerFunction & abs(rightCornerAngle) > EPS then	gs_stack_right = 1	if abs(rightCornerAngle)<eps then rightCornerAngle=180	!****************************************************	!******************** for corner 1 ******************	if not(WIDO_REVEAL_SIDE) then		!*** window is not flipped		if abs(rightCornerAngle-180)<eps then			!*** rightCornerAngle = 0, 180, 360			wew=90		else			if rightCornerAngle<180 then				zm=0				ww=90-rightCornerAngle/2				wew=90-ww			else				zm=WIDO_FRAME_THICKNESS				ww=rightCornerAngle/2-90				wew=90+ww			endif		endif	else	   !*** window is flipped		if abs(rightCornerAngle-180)<eps then			!*** rightCornerAngle= 0, 180, 360			wew=90		else			if ew1<180 then				zm=WIDO_FRAME_THICKNESS				ww=90-rightCornerAngle/2				wew=90+ww			else				zm=0				ww=rightCornerAngle/2-90				wew=90-ww			endif		endif	endif	gs_right_oversize = 0	gs_reveal_right = 0	gs_faschen_ovhg_right = (gs_faschen_width + WIDO_FRAME_THICKNESS) * tan(ww)endifif bLeftCornerFunction & abs(leftCornerAngle) > EPS then	gs_stack_left = 1	if abs(leftCornerAngle)<eps then leftCornerAngle=180	if not(WIDO_REVEAL_SIDE) then		!*** window is not flipped		if abs(leftCornerAngle-180)<eps then			!*** ew = 0, 180, 360			wew2=90		else			if leftCornerAngle<180 then				zm2=0				ww2=90-leftCornerAngle/2				wew2=90-ww2			else				zm2=WIDO_FRAME_THICKNESS				ww2=leftCornerAngle/2-90				wew2=90+ww2			endif		endif	else	   !*** window is flipped		if abs(leftCornerAngle-180)<eps then			!*** ew = 0, 180, 360			wew2=90		else			if leftCornerAngle<180 then				zm2=WIDO_FRAME_THICKNESS				ww2=90-leftCornerAngle/2				wew2=90+ww2			else				zm2=0				ww2=leftCornerAngle/2-90				wew2=90-ww2			endif		endif	endif	gs_left_oversize = 0	gs_reveal_left = 0	gs_faschen_ovhg_left = (gs_faschen_width + WIDO_FRAME_THICKNESS)* tan(ww2)endif! ==============================================================================! Eigene Wandecken control! ==============================================================================if abs(leftCornerAngle mod 360) < EPS then leftCornerAngle = 0if abs(rightCornerAngle mod 360) < EPS then rightCornerAngle = 0if bLeftCornerFunction and abs(leftCornerAngle) < EPS then bLeftCornerFunction = 0if bRightCornerFunction and abs(rightCornerAngle) < EPS then bRightCornerFunction = 0if gs_faschen_fill = 0	then gs_faschen_fill = SYMB_FILLif gs_faschen_fg = 0	then gs_faschen_fg = SYMB_FILL_PENif gs_faschen_bg = 0	then gs_faschen_bg = SYMB_FBGD_PENmasonryArchMortInset=0.01! ==============================================================================! Calculations for Inclined Walls! ==============================================================================if abs(WALL_INCL) > EPS then	bInclinedWall = 1	bFactor = SYMB_MIRRORED exor WIDO_REVEAL_SIDE exor wallIsLeft	incFactor = not(bFactor) - bFactor	incX = incFactor * tan(WALL_INCL)	incY = incFactor * (1 / cos(WALL_INCL))	bDir = SYMB_MIRRORED exor (SYMB_ROTANGLE > EPS)	iDir = not(bDir) - bDir	incH = cos(WALL_INCL)	incV = sin(WALL_INCL) * iDir	offsD = iDir * offsX * tan(WALL_INCL)else	bInclinedWall = 0	incX = 0	incY = 1	incH = 0	incV = 0endifcurvedWall		= abs(WIDO_ORIG_DIST) > EPS! =============================================================================! Wallhole Geometry! =============================================================================diff = bCornerWindow * (overSizeLeft - overSizeRight) / 2REVEAL_EDGE				= 0REVEAL_NO				= 1REVEAL_POSITIVE			= 2REVEAL_NEGATIVE			= 3REVEAL_SLANTED			= 4REVEAL_SPLAYED			= 5REVEAL_HISTORIC			= 6REVEAL_DOUBLE			= 7REVEAL_DOUBLE_SPLAYED	= 8REVEAL_OUTSIDE_SPLAYED	= 9bNotAvailableByReveal = (\	iRevealType = REVEAL_DOUBLE_SPLAYED | \	iRevealType = REVEAL_OUTSIDE_SPLAYED )if iRevealType = REVEAL_SPLAYED then	gs_reveal_left	= 0	gs_reveal_right	= 0endif!!!openingHeight	= ac_wallhole_height + overSizeLower + overSizeUpper!!!offsX			= bCornerWindow * (-gs_unit_nominal * gs_tolerance_left / 2 - gs_reveal_nominal * (WIDO_LEFT_JAMB + WIDO_RIGHT_JAMB) / 2)!!!offsY			= overSizeLower! ==============================================================================! Calculations for Curved Walls! ==============================================================================alfafaschen		= 0alpha_orig		= 0alfaLeftJamb	= 0alfaRightJamb	= 0if curvedWall then	DegRad = PI / 180!!!	if gs_parapet_wall_inset & not(bBoard) & not(bInsideTrim) then gs_board_curved = 0	if GLOB_SCRIPT_TYPE <> 2 then		widoOrigDist = -WIDO_ORIG_DIST	else		widoOrigDist = WIDO_ORIG_DIST	endif	WOD = abs(widoOrigDist) - (SYMB_ROTANGLE > EPS) * WIDO_FRAME_THICKNESS	alfaLeft	= atn((leftWidth  + overSizeLeft)  / WOD)	alfaRight	= atn((rightWidth + overSizeRight) / WOD)	alfaLeftOs	= atn((leftWidth  + gs_left_oversize) / WOD)	alfaRightOs	= atn((rightWidth + gs_right_oversize) / WOD)	bArchSign = (WIDO_REVEAL_SIDE exor SYMB_ROTANGLE > EPS)	iArchSign = bArchSign - not(bArchSign)		! 1 / -1	if WIDO_REVEAL_SIDE then		WOD = widoOrigDist + WIDO_FRAME_THICKNESS	else		WOD = -widoOrigDist	endif	if WIDO_REVEAL_SIDE exor SYMB_ROTANGLE < EPS then		ySign = 1		if WIDO_REVEAL_SIDE then			rSill = sqr(refWidth^2 / 4 + WOD^2) - WIDO_SILL			rBoard = rSill + WALL_THICKNESS		else			rSill = sqr(refWidth^2 / 4 + WOD^2) - WIDO_SILL			rBoard = rSill + WALL_THICKNESS		endif	else		ySign = -1		if WIDO_REVEAL_SIDE then			rBoard = sqr(refWidth^2 / 4 + WOD^2) + WIDO_SILL - WALL_THICKNESS			rSill = rBoard + WALL_THICKNESS		else			rSill = sqr(refWidth^2 / 4 + WOD^2) + WIDO_SILL			rBoard = rSill - WALL_THICKNESS		endif	endif	ArcLengthSillToAngle	= 180 / rSill / PI	ArcLengthBoardToAngle	= 180 / rBoard / PI	alfaLeftJamb	= gs_reveal_left  * ArcLengthSillToAngle	alfaRightJamb	= gs_reveal_right * ArcLengthSillToAngle	alfafaschen	= gs_faschen_A  * ArcLengthSillToAngle	alpha_orig = alfaLeft + alfaRight - alfaRightJamb - alfaLeftJamb + 2*alfafaschen	brickalpha = 2*atn(((gs_faschen_brick_thk)/2)/(rSill+(gs_faschen_width-WIDO_SILL)))endif	! curvedWall