bOplines = 0gs_opline_type_m = 1gs_opline_type_m_out = 1gs_opline_style_m = 1E = 2F = 2iOplineType2 = 3gs_opLinePen = 1if bWindow | bSkylight then		! Window or Skylight	bOldMVOParametersUsed = 0	reqSwingType = -1	success = LIBRARYGLOBAL ("LibraryGlobals13", "W_iSwingType", reqSwingType)	if success > 0 and reqSwingType = -1 then		bOldMVOParametersUsed = 1	endif	if not(bOldMVOParametersUsed) then		bOplinesTemp = 0		if bSkylight then			reqInitialized_S_showBOpLine3D = 0			success = LIBRARYGLOBAL ("LibraryGlobals13", "bInitialized_S_showBOpLine3D", reqInitialized_S_showBOpLine3D)			if success > 0 and reqInitialized_S_showBOpLine3D then				success = LIBRARYGLOBAL ("LibraryGlobals13", "S_showBOpLine3D", bOplinesTemp)	! Skylight			else				success = LIBRARYGLOBAL ("LibraryGlobals13", "W_showBOpLine3D", bOplinesTemp)	! Window			endif		else			success = LIBRARYGLOBAL ("LibraryGlobals13", "W_showBOpLine3D", bOplinesTemp)	! Window		endif		if success > 0 and bOplinesTemp <> 0 then			bOplines = bOplinesTemp			reqOplinePen = 1			success = LIBRARYGLOBAL ("LibraryGlobals13", "W_opLinePen", reqOplinePen)			if success > 0 then				gs_opLinePen = reqOplinePen			endif		endif	endif	if bEnableSecondaryOpLineTypes then		reqOplineType2 = 0		success = LIBRARYGLOBAL ("LibraryGlobals13", "W_iOpLineType2", reqOplineType2)		if success > 0 then			iOplineType2 = reqOplineType2		endif	endifelse			! Door	bOldMVOParametersUsed = 0	reqSwingType = -1	success = LIBRARYGLOBAL ("LibraryGlobals13", "D_iSwingType", reqSwingType)	if success > 0 and reqSwingType = -1 then		bOldMVOParametersUsed = 1	endif	if not(bOldMVOParametersUsed) then		bOplinesTemp = 0		success = LIBRARYGLOBAL ("LibraryGlobals13", "D_showBOpLine3D", bOplinesTemp)	! Door		if success > 0 and bOplinesTemp <> 0 then			bOplines = bOplinesTemp			reqOplinePen = 1			success = LIBRARYGLOBAL ("LibraryGlobals13", "D_opLinePen", reqOplinePen)			if success > 0 then				gs_opLinePen = reqOplinePen			endif		endif	endif	if bEnableSecondaryOpLineTypes then		reqOplineType2 = 0		success = LIBRARYGLOBAL ("LibraryGlobals13", "D_iOpLineType2", reqOplineType2)		if success > 0 then			iOplineType2 = reqOplineType2		endif	endifendifif bOldMVOParametersUsed then	bOplinesTemp = 0	success = LIBRARYGLOBAL ("LibraryGlobals13", "showBOpLine3D", bOplinesTemp)	if success > 0 and bOplinesTemp <> 0 then		bOplines = bOplinesTemp		success = LIBRARYGLOBAL ("LibraryGlobals13", "gs_opLinePen", reqOplinePen)		if success > 0 then			gs_opLinePen = reqOplinePen		endif	endifendifif bOplinesTemp <> 0 then	success = LIBRARYGLOBAL ("LibraryGlobals13", "gs_opline_type_m", reqIOplineTypeTemp)	if success > 0 then		gs_opline_type_m = reqIOplineTypeTemp	endif	success = LIBRARYGLOBAL ("LibraryGlobals13", "gs_opline_type_m_out", reqIOplineTypeOutTemp)	if success > 0 then		gs_opline_type_m_out = reqIOplineTypeOutTemp	endif	success = LIBRARYGLOBAL ("LibraryGlobals13", "gs_opline_style_m", reqIOplineStyleTemp)	if success > 0 then		gs_opline_style_m = reqIOplineStyleTemp	endif	if gs_opening_dir_m = 2 then		E = gs_opline_type_m - 1		F = gs_opline_type_m_out - 1	else		F = gs_opline_type_m - 1		E = gs_opline_type_m_out - 1	endif	iOplineType2 = iOplineType2 - 1endifif not(bEnableSecondaryOpLineTypes) then	iOplineType2 = Eendifend bOplines, E, F, iOplineType2, gs_opline_style_m, gs_opLinePen