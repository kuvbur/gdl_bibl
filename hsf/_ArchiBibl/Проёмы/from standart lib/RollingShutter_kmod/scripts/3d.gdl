
unID = 10200

LOD3D_SIMPLEPLANE = 1
LOD3D_DETAILEDPLANE = 2
LOD3D_SIMPLEPANEL = 3
LOD3D_DETAILEDPANEL = 4

dim shutRollpoly[]
shutRollpoly[1]	= 0
posShutRoll		= 0
lengthShutRoll	= 0

pen gs_sunShade_unCutLinesPen
sect_fill	gs_sunShade_cutFillType, gs_sunShade_cutFillBackPen,
			gs_sunShade_cutFillPen, gs_sunShade_cutLinesPen

addx -(rightCornerCorr - leftCornerCorr) / 2

if gs_shutRoll_iPlacement = SHUTROLL_ONFACADE | gs_shutRoll_iPlacement = SHUTROLL_TOWINDOW then
	if lod3D_sunShade = LOD3D_SIMPLEPANEL | lod3D_sunShade = LOD3D_DETAILEDPANEL then
		gosub "fixedOnWindowOrFacade_detailed"
	else
		gosub "fixedOnWindowOrFacade_simple"
	endif
else
	if lod3D_sunShade = LOD3D_SIMPLEPANEL | lod3D_sunShade = LOD3D_DETAILEDPANEL then
		gosub "fixedBehindFacade"
	else
		end		! Do not draw anything in simple!
	endif
endif

del 1

! -----------------------------------------------------------------------------
end posShutRoll,
	lengthShutRoll,
	shutRollpoly
! -----------------------------------------------------------------------------


! -----------------------------------------------------------------------------
"fixedOnWindowOrFacade_detailed":
! -----------------------------------------------------------------------------

	if gs_shutRoll_iPlacement = SHUTROLL_TOWINDOW then
		addz WIDO_SILL
		posShutRoll = WIDO_SILL
	else
		addz -gs_shutRoll_distFromWall
		posShutRoll = -gs_shutRoll_distFromWall
	endif

	addy heightWithOutBox
	roty 90
	addz -boxLength/2

! --- Box and rail ------------------------------------------------------------

	if gs_shutRoll_iPlacement = SHUTROLL_TOWINDOW & \
			heightWithoutBox + gs_shutRoll_boxHeight - b > EPS then

		material WALL_MAT_EDGE

		wallniche 5, 1, 2,
			0, 0, 1, boxLength,
			0,						-gs_shutRoll_distFromHead,		15,
			gs_shutRoll_boxWidth,	-gs_shutRoll_distFromHead,		15,
			gs_shutRoll_boxWidth,	 gs_shutRoll_boxHeight,			15,
			0,						 gs_shutRoll_boxHeight,			15,
			0,						-gs_shutRoll_distFromHead,		-1
	endif

	material gs_shutRoll_matBox

	if gs_shutRoll_iBoxType = SHUTROLL_BOX_RECT then
		prism_ 5, boxWallThk,
			0, -boxBottomOversize, 15,
			gs_shutRoll_boxWidth, -boxBottomOversize, 11,
			gs_shutRoll_boxWidth, gs_shutRoll_boxHeight - pitchHeight, 11,
			0, gs_shutRoll_boxHeight, 11,
			0, -boxBottomOversize, -1

		addz boxLength - boxWallThk

		prism_ 5, boxWallThk,
			0, -boxBottomOversize, 15,
			gs_shutRoll_boxWidth, -boxBottomOversize, 14,
			gs_shutRoll_boxWidth, gs_shutRoll_boxHeight - pitchHeight, 14,
			0, gs_shutRoll_boxHeight, 14,
			0, -boxBottomOversize, -1

		del 1

		addz boxWallThk

		ddd = boxWallThk / cos(gs_shutRoll_boxAngle)
		ddd2 = boxWallThk * tan(gs_shutRoll_boxAngle)

		prism_ 16, boxLength - boxWallThk * 2,
			0, -boxBottomOversize, 10,
			0, gs_shutRoll_boxHeight, 10,
			gs_shutRoll_boxWidth, gs_shutRoll_boxHeight - pitchHeight, 10,
			gs_shutRoll_boxWidth, -boxBottomOversize, 15,
			gs_shutRoll_boxWidth - boxWallThk, -boxBottomOversize, 15,
			gs_shutRoll_boxWidth - boxWallThk, 0, 15,
			railThk, 0, 15,
			railThk, -boxBottomOversize, 15,
			railThk - boxWallThk, -boxBottomOversize, 15,
			railThk - boxWallThk, boxWallThk, 15,
			gs_shutRoll_boxWidth - boxWallThk, boxWallThk, 15,
			gs_shutRoll_boxWidth - boxWallThk, gs_shutRoll_boxHeight - pitchHeight - ddd + ddd2, 15,
			boxWallThk, gs_shutRoll_boxHeight - ddd - ddd2, 15,
			boxWallThk, 0, 15,
			boxWallThk, -boxBottomOversize, 15,
			0, -boxBottomOversize, -1

		del 1

	else		!arched box

		prism_ 6, boxWallThk,
			0, 0, 15+64,
			railThk, 0, 11+64,
			gs_shutRoll_boxWidth - gs_shutRoll_boxHeight/2, 0, 11+64,
			gs_shutRoll_boxWidth - gs_shutRoll_boxHeight/2, gs_shutRoll_boxHeight, 1011+64,
			0, gs_shutRoll_boxHeight, 11+64,
			0, 0, -1

		addz boxLength - boxWallThk

		prism_ 6, boxWallThk,
			0, 0, 15+64,
			railThk, 0, 14+64,
			gs_shutRoll_boxWidth - gs_shutRoll_boxHeight/2, 0, 14+64,
			gs_shutRoll_boxWidth - gs_shutRoll_boxHeight/2, gs_shutRoll_boxHeight, 1014+64,
			0, gs_shutRoll_boxHeight, 14+64,
			0, 0, -1

		del 1

		addz boxWallThk

		prism_ 11, boxLength - 2 * boxWallThk,
			0, 0, 15,
			boxWallThk, 0, 15,
			boxWallThk, gs_shutRoll_boxHeight - boxWallThk, 15,
			gs_shutRoll_boxWidth - gs_shutRoll_boxHeight/2, gs_shutRoll_boxHeight - boxWallThk, 15,
			gs_shutRoll_boxWidth - gs_shutRoll_boxHeight/2, boxWallThk, 1015,
			railThk, boxWallThk, 15,
			railThk, 0, 10,
			gs_shutRoll_boxWidth - gs_shutRoll_boxHeight/2, 0, 10,
			gs_shutRoll_boxWidth - gs_shutRoll_boxHeight/2, gs_shutRoll_boxHeight, 1010,
			0, gs_shutRoll_boxHeight, 10,
			0, 0, -1

		del 1



	endif

	if gs_shutRoll_iPlacement <> SHUTROLL_ONFACADE then
		lengthShutRoll = boxLength
		shutRollpoly[1] = -gs_shutRoll_boxWidth
		shutRollpoly[2] = heightWithOutBox - boxBottomOversize
		shutRollpoly[3] = -gs_shutRoll_boxWidth
		shutRollpoly[4] = heightWithOutBox + gs_shutRoll_boxHeight
		shutRollpoly[5] = 0
		shutRollpoly[6] = heightWithOutBox + gs_shutRoll_boxHeight
		shutRollpoly[7] = 0
		shutRollpoly[8] = 0
		shutRollpoly[9] = -railThk
		shutRollpoly[10] = 0
		shutRollpoly[11] = -railThk
		shutRollpoly[12] = heightWithOutBox - boxBottomOversize
		shutRollpoly[13] = -gs_shutRoll_boxWidth
		shutRollpoly[14] = heightWithOutBox - boxBottomOversize
	endif

	if gs_shutRoll_iPlacement = SHUTROLL_ONFACADE & wallBoxDist > EPS then
		for i = 1 to 2
			if wallBoxDist > 3 * boxWallThk & gs_shutRoll_boxHeight > 0.025 then
				prism_ 7, 0.025,
					 0,								gs_shutRoll_boxHeight,							15,
					-wallBoxDist,					gs_shutRoll_boxHeight,							15,
					-wallBoxDist,					gs_shutRoll_boxHeight - 2 * boxWallThk - 0.025,	15,
					-wallBoxDist + 2 * boxWallThk,	gs_shutRoll_boxHeight - 2 * boxWallThk - 0.025,	15,
					-wallBoxDist + 2 * boxWallThk,	gs_shutRoll_boxHeight - 2 * boxWallThk,			15,
					 0,								gs_shutRoll_boxHeight - 2 * boxWallThk,			15,
					 0,								gs_shutRoll_boxHeight,							-1
			else
				prism_ 5, 0.025,
					 0,				gs_shutRoll_boxHeight,					15,
					-wallBoxDist,	gs_shutRoll_boxHeight,					15,
					-wallBoxDist,	gs_shutRoll_boxHeight - 2 * boxWallThk,	15,
					 0,				gs_shutRoll_boxHeight - 2 * boxWallThk,	15,
					 0,				gs_shutRoll_boxHeight,					-1

			endif

			if gs_shutRoll_distFromWall > EPS then
				addy -heightWithoutBox - gs_shutRoll_boxHeight
				prism_ 5, 0.025,
					 0,							gs_shutRoll_boxHeight,					15,
					-gs_shutRoll_distFromWall,	gs_shutRoll_boxHeight,					15,
					-gs_shutRoll_distFromWall,	gs_shutRoll_boxHeight + 2 * boxWallThk,	15,
					 0,							gs_shutRoll_boxHeight + 2 * boxWallThk,	15,
					 0,							gs_shutRoll_boxHeight,					-1

				del 1
			endif

			addz boxLength - 0.025
		next i
		del 2
	endif

! --- Cylind ------------------------------------------------------------------

	if cylindRadius - segmentThk > EPS then
		addz boxWallThk
		addy cylindAxisHeight
		addx gs_shutRoll_boxWidth/2

		cylind boxLength - 2 * boxWallThk, cylindRadius - segmentThk

		del 3
	endif

	del 3

	gosub "Rails"


	gosub "Segments_hotspot"

	del 1

return


! -----------------------------------------------------------------------------
"fixedOnWindowOrFacade_simple":
! -----------------------------------------------------------------------------

	if gs_shutRoll_iPlacement = SHUTROLL_TOWINDOW & gs_shutRoll_boxWidth < WIDO_SILL - EPS & heightWithoutBox > B - EPS then return

	add -boxLength / 2, heightWithoutBox, -EPS
	material gs_shutRoll_matBox

	if gs_shutRoll_iPlacement = SHUTROLL_TOWINDOW & gs_shutRoll_boxWidth < WIDO_SILL - EPS then
		boxHeight = min(gs_shutRoll_boxHeight, B - heightWithoutBox)
	else
		boxHeight = gs_shutRoll_boxHeight
	endif

	poly_ 4,
		0,			0,			1,
		boxLength,	0,			1,
		boxLength,	boxHeight,	1,
		0,			boxHeight,	1

	del 1
return


! -----------------------------------------------------------------------------
"fixedBehindFacade":
! -----------------------------------------------------------------------------

	material gs_shutRoll_matBox

	addy heightWithoutBox
	addz gs_shutRoll_railDepth
	posShutRoll = gs_shutRoll_railDepth

	roty 90
	addz -boxLength / 2 - gs_shutRoll_boxOffsetLeft

	wallniche 5, 1, 2,
			0, 0, 1, boxLength + gs_shutRoll_boxOffsetLeft + gs_shutRoll_boxOffsetRight,
			0,						0,						15,
			-gs_shutRoll_boxWidth,	0,						15,
			-gs_shutRoll_boxWidth,	gs_shutRoll_boxHeight,	15,
			0,						gs_shutRoll_boxHeight,	15,
			0,						0,						-1

	if gs_shutRoll_cutWallBehind then
		sect_fill	gs_sunShade_insFillType, gs_sunShade_insFillBackPen,
					gs_sunShade_insFillPen, gs_sunShade_cutLinesPen

		cutBackDist = WALL_THICKNESS - gs_shutRoll_railDepth - gs_shutRoll_boxWidth

		if cutBackDist > EPS then
			if (abs(WALL_INCL) > EPS) then
				wallIsLeft		= (SYMB_ROTANGLE > EPS) exor WIDO_REVEAL_SIDE
				bFactor = SYMB_MIRRORED exor WIDO_REVEAL_SIDE exor wallIsLeft
				incFactor = not(bFactor) - bFactor
				incX = incFactor * tan(WALL_INCL)

				inclDiff =  -(boxLength / 2) * incX
			else
				inclDiff =  0
			endif

			if WIDO_REVEAL_SIDE then
				matSide = WALL_MAT_B
			else
				matSide = WALL_MAT_A
			endif
			if AC_HoleSideMaterial then
				matEdge = matSide
			else
				matEdge = WALL_MAT_EDGE
			endif

			rotx -90

			material matEdge
			wallniche 5, 1, 2+64+128,
					0, 0, 1, gs_shutRoll_boxHeight,
					-gs_shutRoll_boxWidth,								 0,			2+8+16+64,
					-gs_shutRoll_boxWidth,								-(boxLength + gs_shutRoll_boxOffsetLeft + gs_shutRoll_boxOffsetRight),	2+8+16+64,
					-gs_shutRoll_boxWidth-cutBackDist-0.1 + inclDiff,	-(boxLength + gs_shutRoll_boxOffsetLeft + gs_shutRoll_boxOffsetRight),	2+8+16+64,
					-gs_shutRoll_boxWidth-cutBackDist-0.1 - inclDiff,	 0,			2+8+16+64,
					-gs_shutRoll_boxWidth,								 0,			-1

			cprism_ matEdge, matEdge, matSide,
					5, gs_shutRoll_boxHeight,
					-gs_shutRoll_boxWidth,							 0,			15+64,
					-gs_shutRoll_boxWidth,							-(boxLength + gs_shutRoll_boxOffsetLeft + gs_shutRoll_boxOffsetRight),	15+64,
					-gs_shutRoll_boxWidth-cutBackDist + inclDiff,	-(boxLength + gs_shutRoll_boxOffsetLeft + gs_shutRoll_boxOffsetRight),	9,
					-gs_shutRoll_boxWidth-cutBackDist - inclDiff,	 0,			13,
					-gs_shutRoll_boxWidth,							 0,			-1

			del 1
		endif
	endif

	sect_fill	gs_sunShade_cutFillType, gs_sunShade_cutFillBackPen,
				gs_sunShade_cutFillPen, gs_sunShade_cutLinesPen

	material gs_shutRoll_matBox

	if gs_shutRoll_distFromHead > EPS then
		wallniche 5, 1, 2,
				0, 0, 1, boxLength + gs_shutRoll_boxOffsetLeft + gs_shutRoll_boxOffsetRight,
				 0,			 0,								15,
				-railThk,	 0,								15,
				-railThk,	-gs_shutRoll_distFromHead,	15,
				 0,			-gs_shutRoll_distFromHead,	15,
				 0,			 0,								-1
	endif

	prism_ 4, boxWallThk,
		0, 0, 15,
		-gs_shutRoll_boxWidth, 0, 15,
		-gs_shutRoll_boxWidth, gs_shutRoll_boxHeight, 15,
		0, gs_shutRoll_boxHeight, 15

	addz boxLength + gs_shutRoll_boxOffsetLeft + gs_shutRoll_boxOffsetRight - boxWallThk

	prism_ 4, boxWallThk,
		0, 0, 15,
		-gs_shutRoll_boxWidth, 0, 15,
		-gs_shutRoll_boxWidth, gs_shutRoll_boxHeight, 15,
		0, gs_shutRoll_boxHeight, 15

	del 1

	addz boxWallThk

	prism_ 11, boxLength + gs_shutRoll_boxOffsetLeft + gs_shutRoll_boxOffsetRight - 2 * boxWallThk,
		0, 0, 15,
		0, gs_shutRoll_boxHeight, 15,
		-gs_shutRoll_boxWidth, gs_shutRoll_boxHeight, 15,
		-gs_shutRoll_boxWidth, 0, 15,
		-railThk + boxWallThk, 0, 15,
		-railThk + boxWallThk, boxWallThk, 15,
		-gs_shutRoll_boxWidth + boxWallThk, boxWallThk, 15,
		-gs_shutRoll_boxWidth + boxWallThk, gs_shutRoll_boxHeight - boxWallThk, 15,
		-boxWallThk, gs_shutRoll_boxHeight - boxWallThk, 15,
		-boxWallThk, 0, 15,
		0, 0, -1


	del 1

	lengthShutRoll = boxLength + gs_shutRoll_boxOffsetLeft + gs_shutRoll_boxOffsetRight
	shutRollpoly[1] = gs_shutRoll_boxWidth
	shutRollpoly[2] = heightWithOutBox
	shutRollpoly[3] = gs_shutRoll_boxWidth
	shutRollpoly[4] = heightWithOutBox + gs_shutRoll_boxHeight
	shutRollpoly[5] = 0
	shutRollpoly[6] = heightWithOutBox + gs_shutRoll_boxHeight
	shutRollpoly[7] = 0
	shutRollpoly[8] = 0
	shutRollpoly[9] = railThk
	shutRollpoly[10] = 0
	shutRollpoly[11] = railThk
	shutRollpoly[12] = heightWithOutBox
	shutRollpoly[13] = gs_shutRoll_boxWidth
	shutRollpoly[14] = heightWithOutBox


! --- Cylind ------------------------------------------------------------------

	if cylindRadius - segmentThk > EPS then
		addz boxWallThk * 2
		addy cylindAxisHeight
		addx -gs_shutRoll_boxWidth/2

		cylind boxLength + gs_shutRoll_boxOffsetLeft + gs_shutRoll_boxOffsetRight - 4 * boxWallThk, cylindRadius - segmentThk

		del 3
	endif

	del 4

	addz railThk + gs_shutRoll_railDepth

	gosub "Rails"

	gosub "Segments_hotspot"
	del 1

return


! -----------------------------------------------------------------------------
"Rails":
! -----------------------------------------------------------------------------

	material gs_shutRoll_matRail

	rotx -90
	for i = 1 to 2
		addx boxLength/2
		cprism_{2} gs_shutRoll_matRail, gs_shutRoll_matRail, gs_shutRoll_matRail,
			9, heightWithOutBox - boxBottomOversize,
			0, 0, 0, 15, gs_shutRoll_matRail,
			-railWidth, 0, 0, 15, gs_shutRoll_matRail,
			-railWidth, boxWallThk, 0, 15, gs_shutRoll_matRail,
			-boxWallThk, boxWallThk, 0, 15, gs_shutRoll_matRail,
			-boxWallThk, railThk - boxWallThk, 0, 15, gs_shutRoll_matRail,
			-railThk, railThk - boxWallThk, 0, 15, gs_shutRoll_matRail,
			-railWidth, railThk, 0, 15, gs_shutRoll_matRail,
			0, railThk, 0, 15, gs_shutRoll_matRail,
			0, 0, 0, -1, gs_shutRoll_matRail

		del 1

		mulx -1
	next i
	del 3

return


! -----------------------------------------------------------------------------
"Segments_hotspot":
! -----------------------------------------------------------------------------

	material gs_shutRoll_matSegm

	addy heightWithoutBox
	hotspot 0, 0,							-railThk/2, unID, gs_shutter_closedHeight, 1+128,	gs_shutter_opHeight : unID = unID + 1
	hotspot 0, -gs_shutter_closedHeight,	-railThk/2, unID, gs_shutter_closedHeight, 2,		gs_shutter_opHeight : unID = unID + 1
	hotspot 0, 1,							-railThk/2, unID, gs_shutter_closedHeight, 3,		gs_shutter_opHeight : unID = unID + 1
	del 1

	addy heightWithOutBox
	addy cylindAxisHeight
	rotx 90
	cutplane 1, 1, 0, 1
	del 2

	roty 90
	addz -boxLength/2 + boxWallThk


	hhhh = heightWithoutBox + cylindAxisHeight
	n1 = int((hhhh - (heightWithoutBox - gs_shutter_closedHeight)) / gs_shutRoll_segmentWidth) + 2
	n2 = ((hhhh - (heightWithoutBox - gs_shutter_closedHeight)) / gs_shutRoll_segmentWidth) - n1


	rotz -90
	addx -cylindAxisHeight + n2*gs_shutRoll_segmentWidth	!!! + gs_shutRolling_openLength / heightWithoutBox*boxWallThk         ! correct opening
	addy railThk/2

	for i = 1 to n1

		prism_ 9, boxLength - boxWallThk * 2,
			0,									-segmentThk/2,					15,
			gs_shutRoll_segmentWidth/3,		-segmentThk/2 + segmentThk/3,	79,
			2 * gs_shutRoll_segmentWidth/3,	-segmentThk/2 + segmentThk/3,	79,
			gs_shutRoll_segmentWidth,		-segmentThk/2,					15,
			gs_shutRoll_segmentWidth,		 segmentThk/2,					15,
			2 * gs_shutRoll_segmentWidth/3,	 segmentThk/2 + segmentThk/3,	79,
			gs_shutRoll_segmentWidth/3,		 segmentThk/2 + segmentThk/3,	79,
			0,									 segmentThk/2,					15,
			0,									-segmentThk/2,					-1

		addx gs_shutRoll_segmentWidth

	next i

	cutend

return

