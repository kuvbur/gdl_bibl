! ==============================================================================! Interactive Schedule and Listing related display options! ==============================================================================if GLOB_CONTEXT = 6 then	bDrawMasonryArch	= 0	bDrawFaschen		= 0endif!! ==============================================================================!! Visualize Reveal Points!! ==============================================================================!!rotx -90!if WIDO_REVEAL_SIDE then!	addy -WIDO_FRAME_THICKNESS!else!	muly -1!endif!!pen 1!for i=1 to vardim1(leftWallholeRevealPnts)!	add leftWallholeRevealPnts[i][1], leftWallholeRevealPnts[i][2], 0!	RR = i*0.005!	circle  RR!	lin_ -RR,-RR,0, RR, RR,0!	lin_ -RR, RR,0, RR,-RR,0!	del 1!next i!!pen 20!for i=1 to vardim1(rightWallholeRevealPnts)!	add rightWallholeRevealPnts[i][1], rightWallholeRevealPnts[i][2], 0!	RR = i*0.005!	circle  RR!	lin_ -RR,-RR,0, RR, RR,0!	lin_ -RR, RR,0, RR,-RR,0!	del 1!next i!!del top! =============================================================================! Cut the Wallhole! =============================================================================addy -offsY + elevationOffsetcall "WallholeCut_kmod" parameters gs_macro_version = 12,	B								= openingHeight,	AC_Sill_To_Curr_Story			= AC_Sill_To_Curr_Story,	AC_Hole_Hotspot_Control			= AC_Hole_Hotspot_Control,	AC_HoleSideMaterial				= AC_HoleSideMaterial,	AC_HoleMaterialCurved			= AC_HoleMaterialCurved,! --- Function Control Parameters	bEnableParapetInset				= bEnableParapetInset,	bCut3DWallhole					= bCut3DWallhole,	bDWSymbolAtMiddle				= bDWSymbolAtMiddle,	lod3D_MountingFrame				= lod3D_MountingFrame,! --- Wallhole Geometry	bParalellInCurvedWalls			= bParalellInCurvedWalls,	refWidth						= refWidth,	leftWidth						= leftWidth,	rightWidth						= rightWidth,	radSill							= radSill,	radBoard						= radBoard,	WOD								= WOD,	elevationOffset					= elevationOffset,	bBoardElevUsa					= bBoardElevUsa,! --- Wallhole Parameters	ac_wallhole_width				= ac_wallhole_width,	ac_wallhole_height				= ac_wallhole_height,	ac_wallhole_height_original		= ac_wallhole_height_original,	ac_reveal_height				= ac_reveal_height,	gs_reveal_hotspots				= gs_reveal_hotspots,	overSizeLower					= overSizeLower,! --- Reveal Parameters	iRevealType						= iRevealType,	iSillRevealType					= iSillRevealType,	iBoardRevealType				= iBoardRevealType,	leftRevealPnts					= leftWallholeRevealPnts,	rightRevealPnts					= rightWallholeRevealPnts,	iRevealPointsIdx				= iRevealPointsIdx,	revealInnerLeft					= revealInnerLeft,	revealInnerRight				= revealInnerRight,	gs_reveal_left					= gs_reveal_left,	gs_reveal_right					= gs_reveal_right,	gs_reveal_top					= gs_reveal_top,	gs_reveal_bottom				= gs_reveal_bottom,	original_gs_reveal_bottom		= original_gs_reveal_bottom,	bShowRevealSE					= bShowRevealSE,	gs_reveal_splayed_innerTop		= gs_reveal_splayed_innerTop,	gs_reveal_splayed_innerBottom	= gs_reveal_splayed_innerBottom,	gs_reveal_double_innerLeft		= gs_reveal_double_innerLeft,	gs_reveal_double_innerRight		= gs_reveal_double_innerRight,	gs_reveal_double_innerTop		= gs_reveal_double_innerTop,	gs_reveal_double_innerBottom	= gs_reveal_double_innerBottom,	gs_reveal_left_sL				= gs_reveal_left_sL,	gs_reveal_right_sR				= gs_reveal_right_sR,	gs_reveal_bottom_sL				= gs_reveal_bottom_sL,	gs_reveal_bottom_sR				= gs_reveal_bottom_sR,	gs_reveal_double_innerLeft_sL	= gs_reveal_double_innerLeft_sL,	gs_reveal_double_innerRight_sR	= gs_reveal_double_innerRight_sR,	gs_reveal_double_innerBottom_sL	= gs_reveal_double_innerBottom_sL,	gs_reveal_double_innerBottom_sR	= gs_reveal_double_innerBottom_sR,	gs_reveal_left_angle			= gs_reveal_left_angle,	gs_reveal_right_angle			= gs_reveal_right_angle,	gs_reveal_top_angle				= gs_reveal_top_angle,	gs_reveal_bottom_angle			= gs_reveal_bottom_angle,	gs_reveal_outer_jamb_depth		= gs_reveal_outer_jamb_depth,	gs_reveal_outerLeft_angle		= gs_reveal_outerLeft_angle,	gs_reveal_outerRight_angle		= gs_reveal_outerRight_angle,	gs_reveal_outerTop_angle		= gs_reveal_outerTop_angle,	gs_reveal_outerBottom_angle		= gs_reveal_outerBottom_angle,	gs_mountingFrame				= gs_mountingFrame,	gs_mountingFrame_depth			= gs_mountingFrame_depth,	gs_mountingFrame_width_left		= gs_mountingFrame_width_left,	gs_mountingFrame_width_right	= gs_mountingFrame_width_right,	gs_mountingFrame_width_top		= gs_mountingFrame_width_top,	gs_mountingFrame_width_bottom	= gs_mountingFrame_width_bottom,	gs_mountingFrame_pen_view		= gs_mountingFrame_pen_view,	gs_mountingFrame_fill			= gs_mountingFrame_fill,	gs_mountingFrame_pen_bg			= gs_mountingFrame_pen_bg,	gs_mountingFrame_pen_fg			= gs_mountingFrame_pen_fg,	gs_mountingFrame_pen_cont		= gs_mountingFrame_pen_cont,	gs_mountingFrame_mat			= gs_mountingFrame_mat,! --- Turn Plaster	gs_turn_plaster_show_3D			= gs_turn_plaster_show_3D,	thkPlasterAtSillLeft			= thkPlasterAtSillLeft,	thkPlasterAtSillRight			= thkPlasterAtSillRight,	thkPlasterAtSillTop				= thkPlasterAtSillTop,	thkPlasterAtSillBottom			= thkPlasterAtSillBottom,	thkPlasterAtSillSlLeft			= thkPlasterAtSillSlLeft,	thkPlasterAtSillSlLeftBottom	= thkPlasterAtSillSlLeftBottom,	thkPlasterAtSillSlRight			= thkPlasterAtSillSlRight,	thkPlasterAtSillSlRightBottom	= thkPlasterAtSillSlRightBottom,	thkPlasterAtBoardLeft			= thkPlasterAtBoardLeft,	thkPlasterAtBoardRight			= thkPlasterAtBoardRight,	thkPlasterAtBoardTop			= thkPlasterAtBoardTop,	thkPlasterAtBoardBottom			= thkPlasterAtBoardBottom,	thkPlasterAtBoardSlLeft			= thkPlasterAtBoardSlLeft,	thkPlasterAtBoardSlLeftBottom	= thkPlasterAtBoardSlLeftBottom,	thkPlasterAtBoardSlRight		= thkPlasterAtBoardSlRight,	thkPlasterAtBoardSlRightBottom	= thkPlasterAtBoardSlRightBottom,! --- Macro Control Parameters	isWindow						= isWindow,	gs_IsCurved						= gs_IsCurved,	iWindowShape					= iWindowShape,	archHeight						= openingArchHeight,	gs_lowerArchHeight				= gs_lowerArchHeight,	bMirroredOpening				= bMirroredOpening,	nArchResolution					= nArchResolution,	smallRadiusEllips				= smallRadiusEllips,	holeBottomOffset				= holeBottomOffset,	holeSideOffset					= holeSideOffset,	gs_numOfSides					= gs_numOfSides,	gs_posTopEdge_triangle			= gs_posTopEdge_triangle,	gs_frame_width					= gs_frame_width,! --- Sidelight	gs_sidelight_WHole_width_left	= gs_sidelight_WHole_width_left,	gs_sidelight_parapet_hgt_left	= gs_sidelight_parapet_hgt_left,	gs_sidelight_WHole_width_right	= gs_sidelight_WHole_width_right,	gs_sidelight_parapet_hgt_right	= gs_sidelight_parapet_hgt_right,! --- Corner Functions	bLeftCornerFunction				= bLeftCornerFunction,	leftCornerAngle					= leftCornerAngle,	leftConnWallThk					= leftConnWallThk,	bRightCornerFunction			= bRightCornerFunction,	rightCornerAngle				= rightCornerAngle,	rightConnWallThk				= rightConnWallThk,	bCornerWindow					= bRightCornerFunction,! --- Ganging	gs_stack_left					= gs_stack_left,	gs_stack_right					= gs_stack_right,	gs_stack_top					= gs_stack_top,	gs_stack_bottom					= gs_stack_bottom,! --- Oversize!!!	gs_left_oversize				= gs_left_oversize,!!!	gs_right_oversize				= gs_right_oversize,	gs_upper_oversize				= gs_upper_oversize,	gs_lower_oversize				= gs_lower_oversize,! --- Wall Inset	gs_parapet_wall_inset			= gs_parapet_wall_inset,	iParapetSize					= iParapetSize,	gs_parapet_inset_thk			= gs_parapet_inset_thk,	gs_parapet_width				= gs_parapet_width,	gs_parapet_left					= gs_parapet_left,	gs_parapet_right				= gs_parapet_right,	gs_parapet_height				= gs_parapet_height,	iParapetBottom					= iParapetBottom,	gs_parapet_botelev				= gs_parapet_botelev,	bShowAddHotspotsForIS			= bShowAddHotspotsForIS,! --- Masonry Arch	bCustomMatNicheTop				= (bEnableCustomMatNicheTop & bCustomMatNicheTop),	matNicheTop						= matNicheTopdel 1! =============================================================================! Draw the Cavity Closure and turned skins! =============================================================================if	 not(gs_stack_top & gs_stack_bottom) &\	(iClosureType = CLOSURE_VARIABLE | iClosureType = CLOSURE_DUTCH_VARIABLE) then	bCavityCloserTop	= not(gs_stack_top)	bCavityCloserBottom	= not(gs_stack_bottom)	addy -offsY + elevationOffset	call "CavityClosure_kmod",		parameters all	A							= ac_wallhole_width,						B							= openingHeight,						AC_Hole_Position_Angle		= AC_Hole_Position_Angle,						AC_HoleSideMaterial			= AC_HoleSideMaterial,						refWidth					= refWidth,						leftWidth					= leftWidth,						rightWidth					= rightWidth,						iWindowShape				= iWindowShape,						radSill						= radSill,						radBoard					= radBoard,						WOD							= WOD,					! --- Oversize						gs_upper_oversize			= gs_upper_oversize,						gs_lower_oversize			= gs_lower_oversize,					! --- Reveal Parameters						iRevealType					= iRevealType,						leftRevealPnts				= leftWallholeRevealPnts,						rightRevealPnts				= rightWallholeRevealPnts,						iRevealPointsIdx			= iRevealPointsIdx,						gs_reveal_left				= gs_reveal_left,						gs_reveal_right				= gs_reveal_right,						gs_reveal_top				= gs_reveal_top,						gs_reveal_bottom			= gs_reveal_bottom,						gs_reveal_top_angle			= gs_reveal_top_angle,						gs_reveal_bottom_angle		= gs_reveal_bottom_angle,						gs_reveal_double_innerLeft	= gs_reveal_double_innerLeft,						gs_reveal_double_innerRight	= gs_reveal_double_innerRight,						gs_reveal_outerTop_angle	= gs_reveal_outerTop_angle,						gs_reveal_outerBottom_angle	= gs_reveal_outerBottom_angle,						revealInnerLeft				= revealInnerLeft,						revealInnerRight			= revealInnerRight,					! --- Macro Control Parameters						bWndCurved					= gs_IsCurved,						bParalellInCurvedWalls 		= bParalellInCurvedWalls,						iClosureType				= iClosureType,						bCavityCloserTop			= bCavityCloserTop,						bCavityCloserBottom			= bCavityCloserBottom,						bCornerWindow				= bRightCornerFunction,						bLeftCornerFunction			= bLeftCornerFunction,						gs_left_oversize			= gs_left_oversize,						gs_right_oversize			= gs_right_oversize,					! --- Ganging						gs_stack_top				= gs_stack_top,						gs_stack_bottom				= gs_stack_bottom,						gs_bAutoTurnIn				= gs_bAutoTurnIn,						gs_bOverIn					= gs_bOverIn,						gs_bAutoTurnOut				= gs_bAutoTurnOut,						gs_bOverOut					= gs_bOverOut,					! --- String Resource ---						stCavityClosureTurnDir		= stCavityClosureTurnDir	del 1endif! =============================================================================! Masonry Arch! =============================================================================if bEnableMasonryArch & lod3D > 0 & bDrawMasonryArch & not(gs_stack_top) then	addy -offsY + elevationOffset	call "MasonryArch_kmod" parameters gs_macro_version = 12,		refWidth				= refWidth,		leftWidth				= leftWidth,		rightWidth				= rightWidth,		B						= openingHeight,		iWindowShape			= iWindowShape,		openingArchHeight		= openingArchHeight,		radBoard				= radBoard,		radSill					= radSill,		WOD						= WOD,		nArchResolution			= nArchResolution,	! --- Masonry Arch		bMasonryArch					= bMasonryArch,		gs_masonry_arch_int				= gs_masonry_arch_int,		gs_masonry_arch_structure		= gs_masonry_arch_structure,		gs_masonry_arch_structure_int	= gs_masonry_arch_structure_int,		gs_masonry_arch_ovhg_left		= gs_masonry_arch_ovhg_left,		gs_masonry_arch_ovhg_right		= gs_masonry_arch_ovhg_right,		gs_masonry_arch_rise			= gs_masonry_arch_rise,		gs_masonry_arch_skewback_angle	= gs_masonry_arch_skewback_angle,		gs_masonry_arch_proj			= gs_masonry_arch_proj,		gs_masonry_arch_height			= gs_masonry_arch_height,		gs_masonry_arch_depth			= gs_masonry_arch_depth,		gs_masonry_arch_rearHoleDepth	= gs_masonry_arch_rearHoleDepth,		gs_masonry_arch_brick_thk		= gs_masonry_arch_brick_thk,		gs_masonry_arch_mort_thk		= gs_masonry_arch_mort_thk,		gs_masonry_arch_keystone_width	= gs_masonry_arch_keystone_width,		gs_masonry_arch_keystone_osize	= gs_masonry_arch_keystone_osize,		gs_masonry_arch_keystone_proj	= gs_masonry_arch_keystone_proj,		gs_masonry_arch_fill			= gs_masonry_arch_fill,		gs_masonry_arch_pen_fg			= gs_masonry_arch_pen_fg,		gs_masonry_arch_pen_bg			= gs_masonry_arch_pen_bg,		gs_masonry_arch_pen				= gs_masonry_arch_pen,		gs_masonry_arch_brick_mat		= gs_masonry_arch_brick_mat,		gs_masonry_arch_mort_mat		= gs_masonry_arch_mort_mat,		gs_masonry_arch_keystone_mat	= gs_masonry_arch_keystone_mat,		bCustomMatNicheTop				= bCustomMatNicheTop,		matNicheTop						= matNicheTop,	! --- Reveal Parameters		iRevealType				= iRevealType,		leftWallholeRevealPnts	= leftWallholeRevealPnts,		rightWallholeRevealPnts	= rightWallholeRevealPnts,		iRevealPointsIdx		= iRevealPointsIdx,		gs_reveal_outerLeft_angle		= gs_reveal_outerLeft_angle,		gs_reveal_outerRight_angle		= gs_reveal_outerRight_angle,		gs_reveal_outerTop_angle		= gs_reveal_outerTop_angle,		gs_reveal_outerBottom_angle		= gs_reveal_outerBottom_angle,		gs_reveal_outer_jamb_depth		= gs_reveal_outer_jamb_depth,		gs_reveal_left					= gs_reveal_left,		gs_reveal_right					= gs_reveal_right,		gs_reveal_top					= gs_reveal_top,		gs_turn_plaster_show_3D			= gs_turn_plaster_show_3D,		thkPlasterAtSillLeft			= thkPlasterAtSillLeft,		thkPlasterAtSillRight			= thkPlasterAtSillRight,		thkPlasterAtSillTop				= thkPlasterAtSillTop,		thkPlasterAtSillBottom			= thkPlasterAtSillBottom,	! --- Corner Window Parameters - by addon		ac_corner_window		= ac_corner_window,		ac_cw_function			= ac_cw_function,		ac_corner_angle			= ac_corner_angle,		ac_diff_con_wall_thk	= ac_diff_con_wall_thk,		ac_con_wall_thk			= ac_con_wall_thk,	! --- Corner Functions - by custom corner		bLeftCornerFunction		= bLeftCornerFunction,		leftCornerAngle			= leftCornerAngle,		leftConnWallThk			= leftConnWallThk,		bRightCornerFunction	= bRightCornerFunction,		rightCornerAngle		= rightCornerAngle,		rightConnWallThk		= rightConnWallThk,!		bCornerWindow			= rightCornerFunction,	! --- Oversize		gs_upper_oversize		= gs_upper_oversize,	! --- Distance between Arch and Window ---		gs_AutomaticArchHeight	= gs_AutomaticArchHeight,		gs_MasonryArch_height	= gs_MasonryArch_height,		gs_NicheBelowArch		= gs_NicheBelowArch,	! --- Connections ---		gs_stack_top			= gs_stack_top,		gs_stack_left			= gs_stack_left,		gs_stack_right			= gs_stack_right,	! --- String Resource ---		stMasonryArchTypes		= stMasonryArchTypes,		stMasonryArchStructure	= stMasonryArchStructure	del 1endif! =============================================================================! Ornamental Window Moldings! =============================================================================if lod3D > 0 & bEnableFaschen & bDrawFaschen then	sillSlantAngle	= (iRevealType = REVEAL_DOUBLE_SPLAYED | iRevealType = REVEAL_OUTSIDE_SPLAYED) * gs_reveal_outerBottom_angle	sillSlantOffset	= (WIDO_SILL - gs_mountingFrame * gs_mountingFrame_depth) * tan(sillSlantAngle)	addy -offsY + elevationOffset	call "Faschen_kmod" parameters gs_macro_version = 12,		A 						= A,		B						= openingHeight,		refWidth				= refWidth,		leftWidth				= leftWidth,		rightWidth				= rightWidth,		gs_faschen_type			= gs_faschen_type,		gs_faschen_left			= gs_faschen_left,		gs_faschen_right		= gs_faschen_right,		gs_faschen_top			= gs_faschen_top,		gs_faschen_bottom		= gs_faschen_bottom,		iFaschenTyp				= iFaschenTyp,		gs_faschen_A			= gs_faschen_A,		gs_faschen_C			= gs_faschen_C,		gs_faschen_B			= gs_faschen_B,		gs_faschen_R			= gs_faschen_R,		gs_faschen_R_height		= gs_faschen_R_height,		gs_faschen_L			= gs_faschen_L,		gs_faschen_L_height		= gs_faschen_L_height,		gs_faschen_t			= gs_faschen_t,		gs_faschen_width		= gs_faschen_width,		gs_faschen_brick_thk	= gs_faschen_brick_thk,		gs_faschen_mort_thk		= gs_faschen_mort_thk,		gs_faschen_fill			= gs_faschen_fill,		gs_faschen_fg			= gs_faschen_fg,		gs_faschen_bg			= gs_faschen_bg,		gs_faschen_pen			= gs_faschen_pen,		gs_faschen_plaster_mat	= gs_faschen_plaster_mat,		gs_faschen_brick_mat	= gs_faschen_brick_mat,		gs_faschen_mort_mat		= gs_faschen_mort_mat,		sillSlantAngle			= sillSlantAngle,		sillSlantOffset			= sillSlantOffset,	! --- Corner Functions		bLeftCornerFunction		= bLeftCornerFunction,		leftCornerAngle			= leftCornerAngle,		leftConnWallThk			= leftConnWallThk,		bRightCornerFunction	= bRightCornerFunction,		rightCornerAngle		= rightCornerAngle,		rightConnWallThk		= rightConnWallThk,		bCornerWindow			= bRightCornerFunction,	! --- Oversize		gs_left_oversize		= gs_left_oversize,		gs_right_oversize		= gs_right_oversize,		gs_upper_oversize		= gs_upper_oversize,		gs_lower_oversize		= gs_lower_oversize,		overSizeLeft 			= overSizeLeft,		overSizeRight			= overSizeRight,		overSizeUpper			= overSizeUpper,		overSizeLower			= overSizeLower,	! --- Reveal		iRevealType				= iRevealType,		leftWallholeRevealPnts	= leftWallholeRevealPnts,		rightWallholeRevealPnts	= rightWallholeRevealPnts,		iRevealPointsIdx		= iRevealPointsIdx,		gs_reveal_left			= gs_reveal_left,		gs_reveal_right			= gs_reveal_right,		gs_reveal_top			= gs_reveal_top,		gs_reveal_bottom		= gs_reveal_bottom,	! --- Ganging		gs_stack_left			= gs_stack_left,		gs_stack_right			= gs_stack_right,		gs_stack_top			= gs_stack_top,		gs_stack_bottom			= gs_stack_bottom	del 1endif