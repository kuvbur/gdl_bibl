gs_detlevel_3D_m = 2
success = LIBRARYGLOBAL ("Libraryflobals-as", "gs_detlevel_3D_m", gs_detlevel_3D_m)
if gs_detlevel_3D_m = 2 then 
	iDWDet3D = DETLEVEL_DW3D_DETAILED
	gs_shadow=1
	res = 20
else
	iDWDet3D = DETLEVEL_DW3D_SIMPLE
	gs_shadow=0
	res = 6
endif
! =============================================================================

lod3D = 0												! Don't draw anything
if (GLOB_VIEW_TYPE = 9 & GLOB_PREVIEW_MODE = 0) then	! in case of Surface IS Calculation
	lod3D = 2	! Detailed
else
	if iDWDet3D = DETLEVEL_DW3D_SIMPLE then lod3D = 1 			! Simple
	if iDWDet3D = DETLEVEL_DW3D_DETAILED then lod3D = 2 			! Detailed
	if GLOB_CONTEXT > 20 & GLOB_CONTEXT < 40 then lod3D	= 1	! Simple

	if iDWDet3D = DETLEVEL_DW3D_CHI_SIMPLE | iDWDet3D = DETLEVEL_DW3D_CHI_DETAILED then
		if (GLOB_CONTEXT = 4 | GLOB_CONTEXT = 24 | GLOB_CONTEXT = 6) then
			lod3D = 5								! Chinese
		else
			lod3D = 2
		endif
	endif
endif


if lod3D = 0 then end

bMiddleLine = 0
bReverseMaterial = 0

gs_fillFr		= gs_fillFr * gs_bFills
gs_penFr_fg		= gs_penFr_fg * gs_bFills
gs_penFr_bg		= gs_penFr_bg * gs_bFills

gs_fillLeaf		= gs_fillLeaf * gs_bFills
gs_penLeaf_fg	= gs_penLeaf_fg * gs_bFills
gs_penLeaf_bg	= gs_penLeaf_bg * gs_bFills

if gs_fillFr < 1	then gs_fillFr = SYMB_FILL
if gs_penFr_bg < 1	then gs_penFr_bg = SYMB_FBGD_PEN
if gs_penFr_fg < 1	then gs_penFr_fg = SYMB_FILL_PEN

if gs_fillLeaf < 1		then gs_fillLeaf = SYMB_FILL
if gs_penLeaf_bg < 1	then gs_penLeaf_bg = SYMB_FBGD_PEN
if gs_penLeaf_fg < 1	then gs_penLeaf_fg = SYMB_FILL_PEN


if GLOB_CONTEXT > 20 & GLOB_CONTEXT < 40 then bFeedBack = 1

if gs_frame_pen_cont < 1 then gs_frame_pen_cont = SYMB_SECT_PEN
if gs_shadow=0 then shadow off


if gs_doorcode = "Gar2" then

	!********** Wallniche for garage door 2 ********

	nwidth = gs_leaf_thk+0.005

	if WIDO_REVEAL_SIDE then
		dzz=0.005
	else
		dzz=gs_frame_thk-nwidth-0.005
	endif

	addz dzz

	wallniche 5, 1, 1+0+0+0+0+0+128,
		0, 0, 1, nwidth,
		-ac_unit_width/2, 2*ac_unit_height, 15+16,
		 ac_unit_width/2, 2*ac_unit_height, 15+16,
		 ac_unit_width/2, ac_unit_height, 15+16,
		-ac_unit_width/2, ac_unit_height, 15+16,
		-ac_unit_width/2, 2*ac_unit_height, -1

	del 1

endif

! =============================================================================
! GS Door Functions
! =============================================================================

call "GS Door Functions_mod",
	parameters all		iWindowShape				= iWindowShape,
						bEnableParapetInset			= bEnableParapetInset,
						bEnableMasonryArch			= bEnableMasonryArch,
						bEnableSill					= bEnableSill,
						bEnableBoard				= bEnableBoard,
						bEnableFaschen				= bEnableFaschen,
						bEnableThreshold			= bEnableThreshold,
						bEnableCasing				= bEnableCasing,
						bEnableShutter				= bEnableShutter,
						bEnableCustomCornerLeft		= bEnableCustomCornerLeft,
						bEnableCustomCornerRight	= bEnableCustomCornerRight,
						bDisabeMirroring			= bDisabeMirroring,
						bEnableVentilationProfile	= bEnableVentilationProfile,
						lod3D 						= lod3D,
						gs_highspeedgar				= gs_highspeedgar,
	returned_parameters ac_unit_width, ac_unit_height,
						gs_frame_ovhg_left_out,
						gs_frame_ovhg_right_out,
						gs_frame_ovhg_top_out,
						gs_frame_ovhg_bottom_out,
						gs_frame_ovhg_left_in,
						gs_frame_ovhg_right_in,
						gs_frame_ovhg_top_in,
						gs_frame_ovhg_bottom_in,
						gs_frame_wthk,
						gs_fthk,
						thresholdModify,
						bMirrored,
						xform11, xform12, xform13, xform14,
						xform21, xform22, xform23, xform24,
						xform31, xform32, xform33, xform34,

						bOplines3d, opLineType3dIn, opLineType3dOut, gs_opline_style_m, gs_opLinePen,
						bShowAddHotspots, bShowAddHotspotsForIS, bShowUnitHotspots, bShowEgressHotspots, bShowLeafHotspots

bGarageDoor = (gs_doorcode = "Gar1" | gs_doorcode = "Gar2" | gs_doorcode = "Gar3" | gs_doorcode = "Gar4")

! =============================================================================
! Block for operator mode
! =============================================================================

if GLOB_CONTEXT > 40 & GLOB_CONTEXT < 50 then
	prism_ 4, WIDO_FRAME_THICKNESS,
		-ac_unit_width/2, 0, 15,
		 ac_unit_width/2, 0, 15,
		 ac_unit_width/2, ac_unit_height, 15,
		-ac_unit_width/2, ac_unit_height, 15

	if not(gs_sectgar) & not(gs_highspeedgar) then end
endif

xform	xform11, xform12, xform13, xform14,
		xform21, xform22, xform23, xform24,
		xform31, xform32, xform33, xform34

if gs_doorcode = "D1Pivot" then gs_opline_style_m = 1		!only "Hinges" orientation is valid


! === Chinese Specific =========================================================

chi_sym_thk = gs_fthk
sideL_leaf_mod_reb_w  = 0
trans_temp_rebate_w   = 0
trans__leaf_mod_reb_w = 0
double_leaf_mod_w     = 0
double_sl_leaf_mod_w  = 0
double_sl2_leaf_mod_w = 0


if lod3D = 5 then
	if not(gs_sectgar) then
		if WIDO_REVEAL_SIDE then
			addy -(WIDO_SILL-WALL_THICKNESS/2+gs_fthk/4)-gs_fthk/2		! move the whole door to middle of wall
		else
			addy (WIDO_SILL-WALL_THICKNESS/2+gs_fthk/4)					! move the whole door to middle of wall
		endif
	endif

	chi_sym_thk = gs_fthk/2
	gs_frame_style_m = 1
	gs_open_3D = 0
	sidel_temp_rebate_w = gs_rebate_width

	if gs_sidelight_n_m then sideL_leaf_mod_reb_w = 2*gs_rebate_width
	if gs_door_transom then trans_temp_rebate_w = gs_rebate_width
	if gs_door_transom then trans__leaf_mod_reb_w = gs_rebate_width
	if gs_door_num_m = 2 then double_leaf_mod_w = gs_rebate_width
	if gs_door_num_m = 2 and gs_sidelight_n_m then double_sl_leaf_mod_w = gs_rebate_width
	if gs_door_num_m = 2 and gs_sidelight_n_m=2 then double_sl2_leaf_mod_w = gs_rebate_width

	if gs_garage then
		iDoorPanelType = 1
	endif

	gs_sidelight_m = 1
endif

! =============================================================================
! Draw door frame and leaf
! =============================================================================

material gs_frame_mat
pen gs_frame_pen
resol res

fr_sect_fill_type = gs_fillFr
fr_sect_fill_fg = gs_penFr_fg
fr_sect_fill_bg = gs_penFr_bg

if lod3D = 5 then
	fr_sect_fill_type = gs_fillShCover
	fr_sect_fill_fg = gs_penShCov_fg
	fr_sect_fill_bg = gs_penShCov_bg
endif

sh_sect_fill_type = gs_fillLeaf
sh_sect_fill_fg = gs_penLeaf_fg
sh_sect_fill_bg = gs_penLeaf_bg

if lod3D = 5 then
	sh_sect_fill_type = gs_fillShCover
	sh_sect_fill_fg = gs_penShCov_fg
	sh_sect_fill_bg = gs_penShCov_bg
endif

rotx 90


! =============================================================================
! Draw Ventilation Profile
! =============================================================================

isVentilationOverFrame = (bEnableVentilationProfile & bVentilationProfile & (iVentilationProfileType = VENTPROFILE_OVER_FRAME))

if isVentilationOverFrame then
	addy ac_unit_height
	if WIDO_REVEAL_SIDE then
		addz gs_frame_thk
		mulz -1
	endif
	call "Ventilation_profile_kmod" parameters	A							= ac_unit_width,
											VentilationProfileThickness	= VentilationProfileThickness,
											VentilationProfileHeight	= VentilationProfileHeight,
											gs_frame_thk				= gs_frame_thk,
											bVentilationProfile			= bVentilationProfile,
											iVentilationProfileType		= iVentilationProfileType,
											gs_ventProfile_pen			= gs_frame_pen,
											gs_ventProfile_pen_cont		= gs_frame_pen_cont,
											gs_ventProfile_fill			= gs_ventProfile_fill,
											gs_ventProfile_pen_bg		= gs_ventProfile_pen_bg,
											gs_ventProfile_pen_fg		= gs_ventProfile_pen_fg,
											gs_ventProfile_mat			= gs_ventProfile_mat
	if WIDO_REVEAL_SIDE then del 2
	del 1
endif


! =============================================================================
! Special door types from unique macros
! =============================================================================

if gs_sectgar then
	gosub "sectionalGarageDoor"
else
	if gs_highspeedgar then
		gosub "highspeedGarageDoor"
	else
		gosub "otherDoors"
	endif
endif

del 1

if lod3D = 5 & not(gs_sectgar) then del 1

! -----------------------------------------------------------------------------
end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end !
! -----------------------------------------------------------------------------

"sectionalGarageDoor":
	mulz 1-2*WIDO_REVEAL_SIDE
	call "sectionalGarageDoor_mod" parameters all a			= ac_leaf_width,
							b							= ac_leaf_height,
							gs_track					= gs_track,
							lod3D						= lod3D,
							gs_frame_style_m			= gs_frame_style_m,
							gs_fthk						= gs_fthk,
							gs_frame_ovhg_left_out		= gs_frame_ovhg_left_out,
							gs_frame_ovhg_left_in		= gs_frame_ovhg_left_in,
							gs_frame_ovhg_right_out		= gs_frame_ovhg_right_out,
							gs_frame_ovhg_right_in		= gs_frame_ovhg_right_in,
							bShowAddHotspots			= bShowAddHotspots,
							bShowAddHotspotsForIS		= bShowAddHotspotsForIS,
							bShowUnitHotspots			= bShowUnitHotspots,
							bShowEgressHotspots			= bShowEgressHotspots,
							bShowLeafHotspots			= bShowLeafHotspots,
							gs_frame_width_orig			= gs_frame_width_orig,
							gs_frw1						= gs_frame_width_left,
							gs_frw2						= gs_frame_width_right,
							gs_frwt						= gs_frame_width_upper,
							gs_frwm						= gs_frame_width,
							iDoorPanelType 				= iDoorPanelType,
							bINTHandles					= bINTHandles,
							gs_handle_typ_m				= gs_handle_type_m,
							gs_handle_typ_in_m			= gs_handle_typ_in_m,
							gs_handle_typ_out_m			= gs_handle_typ_out_m,
							bEnableKickBoard			= bEnableKickBoard,
							bKickBoardOut				= bKickBoardOut,
							bKickBoardIn				= bKickBoardIn,
							kickBoardHeight				= kickBoardHeight,
							matKickBoardOut				= matKickBoardOut,
							matKickBoardIn				= matKickBoardIn,
							bOplines3d					= bOplines3d,
							opLineType3dIn				= opLineType3dIn,
							opLineType3dOut				= opLineType3dOut,
							gs_opline_style_m			= gs_opline_style_m,
							gs_opLinePen				= gs_opLinePen
	del 1

return

"highspeedGarageDoor":
	if WIDO_REVEAL_SIDE then mulz -1

	call "d_highspeed_kmod" parameters	a						= ac_wallhole_width - 2 * gs_frame_side_overhang * (lod3D <> 5),
									b						= ac_wallhole_height - gs_frame_side_overhang * (lod3D <> 5),
									iHighSpeedDoorType		= (iDoorType = 13) + 2*(iDoorType = 14),
									lod3D					= lod3D,
									gs_full_edit			= gs_full_edit,
									gs_cust_on				= gs_cust_on,
									gs_cust_panel			= gs_cust_panel,
									gs_open3D				= gs_open3D,
									gs_frame_width			= gs_frame_width,
									gs_frame_width_out		= gs_frame_width_out,
									gs_frame_thk			= gs_frame_thk,
									gs_glass_section 		= gs_bGlazedDoor,
									gs_glass_section_elev 	= gs_glass_section_elev,
									gs_glass_section_width	= gs_glass_section_width,
									gs_frame_pen			= gs_frame_pen,
									gs_leaf_pen				= gs_leaf_pen,
									gs_glass_pen			= gs_glass_pen,
									gs_frame_mat			= gs_frame_mat,
									gs_leaf_mat				= gs_leaf_mat,
									gs_leaf_matin			= gs_leaf_matin,
									gs_bottom_part_mat		= gs_bottom_part_mat,
									gs_glass_mat			= gs_glass_mat,
									bOplines3d				= bOplines3d,
									opLineType3dIn			= opLineType3dIn,
									opLineType3dOut			= opLineType3dOut,
									gs_opline_style_m		= gs_opline_style_m,
									gs_opLinePen			= gs_opLinePen,
									bShowAddHotspots		= bShowAddHotspots,
									bShowAddHotspotsForIS	= bShowAddHotspotsForIS,
									bShowUnitHotspots		= bShowUnitHotspots,
									bShowEgressHotspots		= bShowEgressHotspots,
									bShowLeafHotspots		= bShowLeafHotspots,
									ac_unit_width			= ac_unit_width,
									ac_unit_height			= ac_unit_height,
									ac_leaf_width			= ac_leaf_width,
									ac_leaf_height			= ac_leaf_height,
									ac_egress_width			= ac_egress_width,
									ac_egress_height		= ac_egress_height,
									gs_leaf_pen_2D			= gs_leaf_pen_2D,
									gs_fillLeaf				= sh_sect_fill_type,
									gs_penLeaf_fg			= sh_sect_fill_fg,
									gs_penLeaf_bg			= sh_sect_fill_bg,
									gs_frame_pen_cont		= gs_frame_pen_cont,
									gs_fillFr				= fr_sect_fill_type,
									gs_penFr_bg				= fr_sect_fill_bg,
									gs_penFr_fg				= fr_sect_fill_fg
	if WIDO_REVEAL_SIDE then del 1
return

"otherDoors":
	! =============================================================================
	! FRAME
	! =============================================================================

	if gs_frame_width > EPS then

		! Cut Ventilation Profile =====================================================

		if isVentilationOverFrame then
			addy ac_unit_height
			cutpolya 5, 2, 0,
				-ac_unit_width/2, 0, 11+3*(WIDO_REVEAL_SIDE),
				-ac_unit_width/2, VentilationProfileHeight, 11+3*(WIDO_REVEAL_SIDE),
				ac_unit_width/2, VentilationProfileHeight, 11+3*(WIDO_REVEAL_SIDE),
				ac_unit_width/2, 0, 11+3*(WIDO_REVEAL_SIDE),
				-ac_unit_width/2, 0, -1
			del 1
		endif

		call "DoorFrame_kmod" parameters all a		= ac_unit_width,
					b							= ac_unit_height,
					gs_frame_style_m			= gs_frame_style_m,
					gs_LeftMullion_Top			= gs_LeftMullion_Top,
					gs_RightMullion_Top			= gs_RightMullion_Top,
					gs_Transom_toLeft			= gs_Transom_toLeft,
					gs_Transom_toRight			= gs_Transom_toRight,
					gs_frame_wthk				= gs_frame_wthk,
					gs_sframe					= 0,
					gs_frame_thk				= chi_sym_thk,
					gs_frame_thkin				= gs_frame_thkin,
					gs_rebate_width				= gs_rebate_width,
					gs_frame_ovhg_left_out		= gs_frame_ovhg_left_out,
					gs_frame_ovhg_left_in		= gs_frame_ovhg_left_in,
					gs_frame_ovhg_right_out		= gs_frame_ovhg_right_out,
					gs_frame_ovhg_right_in		= gs_frame_ovhg_right_in,
					gs_frame_ovhg_top_out		= gs_frame_ovhg_top_out,
					gs_frame_ovhg_top_in		= gs_frame_ovhg_top_in,
					gs_SashText_typ_num			= gs_SashText_typ_num,
					gs_frame_width_orig			= gs_frame_width_orig,
					gs_frw1						= gs_frame_width_left,
					gs_frw2						= gs_frame_width_right,
					gs_frwt						= gs_frame_width_upper,
					gs_frwm						= gs_frame_width,
					gs_door_transom				= gs_door_transom,
					gs_sidelight_right			= (gs_sidelight_n_m = 2),
					gs_sidelight_left			= (gs_sidelight_n_m > 0),
					gs_sidelight_width_left		= gs_sidelight_width_left,
					gs_sidelight_width_right	= gs_sidelight_width_right,
					gs_opening_dir_SL_m			= 1,
					gs_pivotdoor				= 0,
					gs_pivotOffset				= 0,
					bShowAddHotspots			= bShowAddHotspots,
					bShowAddHotspotsForIS		= bShowAddHotspotsForIS,
					bShowUnitHotspots			= bShowUnitHotspots,
					bShowEgressHotspots			= bShowEgressHotspots,
					bShowLeafHotspots			= bShowLeafHotspots,
					lod3D						= lod3D,
					gs_optype_m_02				= 1,	! SASH_FIXED
					gs_optype_m_09				= 1,
					gs_optype_m_05				= 1,
					gs_optype_m_10				= 1,
					gs_optype_m_06				= 1,
					fr_sect_fill_type			= fr_sect_fill_type,
					fr_sect_fill_bg				= fr_sect_fill_bg,
					fr_sect_fill_fg				= fr_sect_fill_fg,
					gs_frame_pen_cont			= gs_frame_pen_cont,
					gs_frame_pen				= gs_frame_pen,
					res							= res

		if isVentilationOverFrame then
			cutend
		endif
	endif

	body -1



! =============================================================================
! DOOR PANELS
! =============================================================================

if iDoorPanelType <> 0 then

	frameDiff = 0


	!**************** calculation for 1 sidelight

	aaa_sidelight = gs_sidelight_width_left-gs_frame_width-gs_frame_width_left
	a_x_sidelight = -ac_unit_width/2+gs_frame_width_left+aaa_sidelight/2

	!**************** calculation for 1-2 sidelights

	bbb_sidelight = ac_leaf_height-gs_rebate_width-gs_frame_width
	b_y_sidelight = gs_frame_width

	!**************** calculation for transom

	aaa_transom = ac_unit_width-(gs_frame_width_left+gs_frame_width_right)
	bbb_transom = gs_transom_height-gs_frame_width_upper-gs_frame_width

	a_x_transom = (gs_frame_width_left-gs_frame_width_right)/2
	b_y_transom = ac_leaf_height-gs_rebate_width+gs_frame_width


	! === Chinese Specific =========================================================
	if lod3D = 5 then
		b_y_transom = b_y_transom + gs_rebate_width
		gs_rebate_width = 0
		thresholdModify = 0
	endif


	addy thresholdModify


	htyp=gs_handle_type_m
	fulled=gs_full_edit

	if gs_doorcode = "Gar1" then

		mulx -1

		if lod3D <> 5 then
			gs_leaf_thk = 0.05
			addz gs_leaf_thk + WIDO_FRAME_THICKNESS - gs_frame_thk
		endif

		addx (-gs_frame_width_left+gs_frame_width_right)/2

		aaa = ac_unit_width-(gs_frame_width_left+gs_frame_width_right)+2*gs_rebate_width
		bbb = ac_unit_height-gs_frame_width_upper+gs_rebate_width

		gs_mov_typ=1

		opLineType3dOut_temp  = opLineType3dOut
		opLineType3dOut = opLineType3dIn
		opLineType3dIn  = opLineType3dOut_temp
		bMiddleLine		= 0

		gosub 8500

		if lod3D <> 5 then
			del 3
		else
			del 2
		endif

		end

	endif


	if gs_doorcode = "Gar2" then

		if lod3D = 5 then
			addz gs_fthk/2
		else
			gs_leaf_thk = 0.05
			addz gs_leaf_thk+0.0055
		endif


		aaa = ac_unit_width-(gs_frame_width_left+gs_frame_width_right)+2*gs_rebate_width
		bbb = ac_unit_height-gs_frame_width_upper+gs_rebate_width

		addx (gs_frame_width_left-gs_frame_width_right)/2

		gs_mov_typ=2

		opLineType3dOut_temp  = opLineType3dOut
		opLineType3dOut = opLineType3dIn
		opLineType3dIn  = opLineType3dOut_temp
		bMiddleLine	= 0

		gosub 8500

		del 2


		end

	endif


	if gs_doorcode = "Gar3" then

		gs_leaf_thk = 0.05

		gs_mov_typ=3

		for I=1 to 2

			if i=1 then
				law=lar
				hgnrl=gs_hor_gnum
				vgnrl=gs_ver_gnum
				htyp=gs_handle_type_m
				fulled=gs_full_edit
			else
				law=lal
				hgnrl=gs_hor_gnum4
				vgnrl=gs_ver_gnum4
				htyp=0
				fulled=0
			endif

			bMiddleLine	= (i = 1)
			aaa = law
			bbb = ac_unit_height-gs_frame_width_upper+gs_rebate_width

			add ac_leaf_width/2-law/2+(gs_frame_width_left-gs_frame_width_right)/2*(i=1)-(gs_frame_width_left-gs_frame_width_right)/2*(i=2), 0, 0
			mulx -1

			gosub 8500

			del 2

			mulx -1

		next I

		del 2

		end

	endif


	del 1

endif

return



8500:

!********************* garage door panels

if gs_doorcode="Gar1" then gar_chi_code=1
if gs_doorcode="Gar2" then gar_chi_code=2
if gs_doorcode="Gar3" then gar_chi_code=3

call "dp_garage_panels_kmod" parameters all a			= aaa,
						b							= bbb,
						gs_detlevel_3D_m			= lod3D,
						gs_han_height				= gs_han_height - thresholdModify,
						gs_full_edit				= fulled,
						iDoorPanelType				= iDoorPanelType,
						bINTHandles					= bINTHandles,
						gs_handle_typ_m				= htyp,
						bEnableKickBoard			= bEnableKickBoard,
						bKickBoardOut				= bKickBoardOut,
						bKickBoardIn				= bKickBoardIn,
						kickBoardHeight				= kickBoardHeight,
						matKickBoardOut				= matKickBoardOut,
						matKickBoardIn				= matKickBoardIn,
						gs_leaf_thk					= gs_leaf_thk,
						gs_leaf_pen					= gs_leaf_pen,
						gs_leaf_mat1				= gs_leaf_mat,
						gs_hor_pnum					= gs_hor_pnum,
						gs_ver_pnum					= gs_ver_pnum,
						gs_mov_typ					= gs_mov_typ,
						gs_fillLeaf					= sh_sect_fill_type,
						gs_penLeaf_fg				= sh_sect_fill_fg,
						gs_penLeaf_bg				= sh_sect_fill_bg,
						gs_SashText_typ_num			= gs_SashText_typ_num,
						chi_sash_thk 				= chi_sym_thk,
						gar_chi_cont 				= gar_chi_code,
						bOplines3d					= bOplines3d,
						opLineType3dIn				= opLineType3dIn,
						opLineType3dOut				= opLineType3dOut,
						gs_opline_style_m			= gs_opline_style_m,
						gs_opLinePen				= gs_opLinePen,
						bMiddleLine					= bMiddleLine

return
