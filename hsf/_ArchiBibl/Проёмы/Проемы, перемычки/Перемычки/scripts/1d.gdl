FILE_DEPENDENCE "Сортамент_арматуры.txt"
FILE_DEPENDENCE "Libraryflobals-perem"
EPS=0.0001
unIDR = 9000 : unID = 120

!----- Нужно бы это в параметры вынести --------------------------------
min_opir = 0.12 !Минимально возможное опирание
max_opir = 1	!Максимально возможное опирание
zs_updown = 0.03 !Защитный слой снизу
zs_leftright = 0.02 !Защитный слой слева-справа
zs_top = 0.02 !Защитны слой в торцах
gost_ug = ""
Shrift = "ISOCPEUR"
Shrift_razm = 3
Shrift_razmr = 2.5
Shrift_tip = 0
pen_alert = 20
!----- Нужно бы это в параметры вынести -------------------------------
COMPTYPE_CORE = 0
COMPTYPE_FINISH = 1
COMPTYPE_OTHER = 2
!-------- Список возможных типов --------------------------------------
iType_NO = 0
iType_SB = 1
iType_CONC = 2
iType_ARM = 3
iType_UG = 4
iType_UGMIRR = 5
iType_UGx2 = 6
iType_PROF = 7
iType_UTEPL = 8
dim t_type_perem[9] : dim itype_perem[9]
	t_type_perem[1] = "Нет"					: itype_perem[1] = iType_NO
	t_type_perem[2] = "Сборная"				: itype_perem[2] = iType_SB
	t_type_perem[3] = "Монолитная"			: itype_perem[3] = iType_CONC
	t_type_perem[4] = "Рядовая"				: itype_perem[4] = iType_ARM
	t_type_perem[5] = "Уголок"				: itype_perem[5] = iType_UG
	t_type_perem[6] = "Уголок зеркально"		: itype_perem[6] = iType_UGMIRR
	t_type_perem[7] = "Спар. уголок"			: itype_perem[7] = iType_UGx2
	t_type_perem[8] = "Сложный профиль"		: itype_perem[8] = iType_PROF
	t_type_perem[9] = "Утеплитель"			: itype_perem[9] = iType_UTEPL

dim t_type_spec[6] : dim itype_spec[6]
	t_type_spec[1] = "Нет"					: itype_spec[1] = 0
	t_type_spec[2] = "Толщина и площадь"		: itype_spec[2] = 1
	t_type_spec[3] = "Толщина и объём"		: itype_spec[3] = 2
	t_type_spec[4] = "Объём"					: itype_spec[4] = 3
	t_type_spec[5] = "Площадь"				: itype_spec[5] = 4
	t_type_spec[6] = "Как элемент"			: itype_spec[6] = 5

!Префиксы к наименованиям в спецификации
dim t_perem_naen_prefix[6]
	t_perem_naen_prefix[1] = "Брусковая "
	t_perem_naen_prefix[2] = "Фибробетонная D600 B2.0 "
	t_perem_naen_prefix[3] = "Рядовая из "
	t_perem_naen_prefix[4] = "Монолитная ж/б "
	t_perem_naen_prefix[5] = "Уголок "
	t_perem_naen_prefix[6] = "Уголок "
!-------- Список возможных типов ---------------------------------------

!---------Данные по типам - в массивы ----------------------------------
dim epm1i[] : epm1i[1] = 0
dim isShow[4] : isShow[1] = 0
dim perem_pos[4]
dim perem_profile[4]
dim perem_subtype[4]
dim perem_qty_by_type[4]
dim perem_dh[4]
dim perem_dl[4]
dim perem_zazor[4]
dim perem_type[4]
dim perem_pos[4]
dim perem_min_opir[4]
dim perem_material_type[4]
dim perem_archprofile[4]
dim perem_ves_p[4]
dim perem_dhe[4]
dim perem_dhf[4]
dim perem_podbor[4]
dim perem_mh[4]
dim perem_mt[4]

perem_pos[1]=perem_pos_1
perem_profile[1]=perem_profile_1
perem_qty_by_type[1]=perem_qty_by_type_1*perem_qty_type[1]
perem_dh[1]=perem_dh_1
perem_dl[1]=perem_dl_1
perem_zazor[1]=perem_zazor_1
perem_material_type[1]=perem_material_1
perem_type[1]=perem_type_1
perem_min_opir[1] = perem_min_opir_1
perem_archprofile[1]=perem_archprofile_1
perem_ves_p[1]=perem_ves_p_1
perem_dhe[1] = perem_dhe_1
perem_dhf[1] = perem_dhf_1
perem_subtype[1] = perem_subtype_1
perem_podbor[1] = perem_podbor_1
perem_mh[1]=perem_h_1
perem_mt[1]=perem_t_1

perem_pos[2]=perem_pos_2
perem_profile[2]=perem_profile_2
perem_qty_by_type[2]=perem_qty_by_type_2*perem_qty_type[2]
perem_dh[2]=perem_dh_2
perem_dl[2]=perem_dl_2
perem_zazor[2]=perem_zazor_2
perem_material_type[2]=perem_material_2
perem_type[2]=perem_type_2
perem_min_opir[2] = perem_min_opir_2
perem_archprofile[2]=perem_archprofile_2
perem_ves_p[2]=perem_ves_p_2
perem_dhe[2] = perem_dhe_2
perem_dhf[2] = perem_dhf_2
perem_subtype[2] = perem_subtype_2
perem_podbor[2] = perem_podbor_2
perem_mh[2]=perem_h_2
perem_mt[2]=perem_t_2

perem_pos[3]=perem_pos_3
perem_profile[3]=perem_profile_3
perem_qty_by_type[3]=perem_qty_by_type_3*perem_qty_type[3]
perem_dh[3]=perem_dh_3
perem_dl[3]=perem_dl_3
perem_zazor[3]=perem_zazor_3
perem_material_type[3]=perem_material_3
perem_type[3]=perem_type_3
perem_min_opir[3] = perem_min_opir_3
perem_archprofile[3]=perem_archprofile_3
perem_ves_p[3]=perem_ves_p_3
perem_dhe[3] = perem_dhe_3
perem_dhf[3] = perem_dhf_3
perem_subtype[3] = perem_subtype_3
perem_podbor[3] = perem_podbor_3
perem_mh[3]=perem_h_3
perem_mt[3]=perem_t_3

perem_pos[4]=perem_pos_4
perem_profile[4]=perem_profile_4
perem_qty_by_type[4]=perem_qty_by_type_4*perem_qty_type[4]
perem_dh[4]=perem_dh_4
perem_dl[4]=perem_dl_4
perem_zazor[4]=perem_zazor_4
perem_material_type[4]=perem_material_4
perem_type[4]=perem_type_4
perem_min_opir[4] = perem_min_opir_4
perem_archprofile[4]=perem_archprofile_4
perem_ves_p[4]=perem_ves_p_4
perem_dhe[4] = perem_dhe_4
perem_dhf[4] = perem_dhf_4
perem_subtype[4] = perem_subtype_4
perem_podbor[4] = perem_podbor_4
perem_mh[4]=perem_h_4
perem_mt[4]=perem_t_4
!---------Данные по типам - в массивы ----------------------------------

!--------- Используются ли перемычки и каковы границы типов ------------
flag_not_use = 0 : inx_start_type = 0 	!Конец и начало
has_SB = 0 : has_ARM = 0 : has_CONC = 0 : has_UG = 0 : has_PROF = 0 !Какие типы испольуются
for i=1 to vardim1(perem_qty_type)
	if perem_qty_type[i]>EPS then 
		flag_not_use = i
		if perem_type[i]=iType_SB then has_SB = 1
		if perem_type[i]=iType_CONC or perem_type[i]=iType_ARM then has_ARM = 1
		if perem_type[i]=iType_CONC or perem_type[i]=iType_UTEPL then has_CONC = 1
		if perem_type[i]=iType_UG or perem_type[i]=iType_UGMIRR or perem_type[i]=iType_UGx2 then has_UG = 1
		if perem_type[i]=iType_PROF and perem_archprofile[i]>EPS then has_PROF = 1
		isShow[i]=1
	endif
	if perem_qty_type[i]>EPS and inx_start_type<EPS then inx_start_type = i
next i

!--------- Используются ли перемычки и каковы границы типов ------------

main_name = "" : n = REQUEST ("Name_of_main", "", main_name)
isPrew = (GLOB_PREVIEW_MODE<>0)
isEdit = GLOB_FEEDBACK_MODE

if main_name="" then
	if not(isPrew) then
		DIM tt[]
		DIM name_elev[]
		DIM size_elev[][]
		DIM numb_elev[]
		n = REQUEST ("STORY_INFO", "", nelev, tt)
		FOR i = 1 TO nelev
			numb_elev[i] = tt [4 * (i - 1) + 1]
			name_elev[i] = tt [4 * (i - 1) + 2]
			size_elev[i][1] = tt [4 * (i - 1) + 3]
			size_elev[i][2] = size_elev[i][1] + tt [4 * (i - 1) + 4]
		NEXT i
		aaz = SYMB_POS_Z
		if abs(aaz)<EPS then
			az = "0.000"
			znak1 = ""
		 else
			az = str("%.3m", abs(aaz))
			if aaz < EPS then 
				znak1 = "-"
			else
				znak1 = "+"
			endif
		endif
		ur_num = aaz
		ur = znak1 + az
		parameters ur_num = aaz
		parameters ur = znak1 + az
		if not(manual_elev) then
			FOR i = 1 TO nelev
				if aaz>=size_elev[i][1] and aaz<size_elev[i][2] then parameters n_elev = numb_elev[i]
			next i
		endif
	endif
endif
if not(flag_not_use) then goto "mend"

if GLOB_SCRIPT_TYPE = 2 or GLOB_SCRIPT_TYPE = 3 then
	show_perem_2d = 3 : success = LIBRARYGLOBAL ("Libraryflobals-perem", "show_perem_2d", show_perem_2d)
	!------------ Параметры отображения -------------------------------------------------------------
	dim perem_pen_sim_m[] : perem_pen_sim_m[1]=1
	_fillType=1 : _fillPen=1 : _fillBgPen=0 : pen_cont = 1 : pen_sim = 1 : _mat = 0 : perem_ved_wall_pen=1 : perem_ved_wall_show = 0
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "perem_pen_cut", perem_pen_cut)
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "perem_pen_cont", perem_pen_cont)
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "perem_pen_eq_sim", perem_pen_eq_sim)
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "perem_pen_sim", perem_pen_sim)
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "perem_pen_sim_m", perem_pen_sim_m)
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "perem_fill_eq", perem_fill_eq)
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "perem_fill", perem_fill)
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "perem_fill_pen", perem_fill_pen)
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "perem_fill_bg", perem_fill_bg)
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "perem_ved_wall_show", perem_ved_wall_show)
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "perem_ved_wall_pen", perem_ved_wall_pen)
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "perem_ved_wall_eq", perem_ved_wall_eq)
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "perem_ved_wall_fill", perem_ved_wall_fill)
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "perem_ved_wall_fill_pen", perem_ved_wall_fill_pen)
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "perem_ved_wall_fill_bg", perem_ved_wall_fill_bg)
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "perem_ved_pos", perem_ved_pos)

	if perem_pen_cut<1 or perem_pen_cut>255 then perem_pen_cut=1
	if perem_pen_cont<1 or perem_pen_cont>255 then perem_pen_cont=1
	if perem_pen_sim<1 or perem_pen_sim>255 then perem_pen_sim=1
	if perem_fill_pen<1 or perem_fill_pen>255 then perem_fill_pen=1
	if perem_fill_bg<1 or perem_fill_bg>255 then perem_fill_bg=19
	if perem_ved_wall_pen<1 or perem_ved_wall_pen>255 then perem_ved_wall_pen=1
	if perem_ved_wall_fill_pen<1 or perem_ved_wall_fill_pen>255 then perem_ved_wall_fill_pen=1
	if perem_ved_wall_fill_bg<1 or perem_ved_wall_fill_bg>255 then perem_ved_wall_fill_bg=19
	!------------ Параметры отображения -------------------------------------------------------------

	!---------- Сложный профиль -------------
	!Т.к. клятый архикад не даёт записать данные о профиле в параметры
	if has_PROF then
		_nComponents = 0
		dim _componentTypes[]
		dim _bShowPart[]
		dim _profileGeometryRawData[]
		dim _idxStartPoints[]
		dim _idxEndPoints[]
		dim _nComponents_m[]
		dim _bShowPart_m[][]
		dim _idxStartPoints_m[][]
		dim _idxEndPoints_m[][]
		dim _profileGeometryRawData_m[][]
		for i=inx_start_type to flag_not_use
			if perem_type[i]=iType_PROF then 
				index = perem_archprofile[i]
				n = REQUEST ("Profile_default_boundingbox", index, xmin, ymin, xmax, ymax)
				perem_h[i] = ymax + ymin
				perem_t[i] = xmax + xmin
				if (strlen(perem_profile[i])-2)<EPS then
					name = ""
					n = REQUEST ("Name_of_Profile", index, name)
					perem_profile[i] = name
				endif
				_componentTypes=epm1i
				_nComponents=0
				_bShowPart=epm1i
				_profileGeometryRawData=epm1i
				_idxStartPoints=epm1i
				_idxEndPoints=epm1i
				!Запрашиваем геометрию
				n = REQUEST ("Profile_components", index, _nComponents, _componentTypes)
				if n then
					_needRequestDetails = 0
					for _i = 1 to _nComponents
						_bShowPart[_i] = 1    
						  if (GLOB_STRUCTURE_DISPLAY = 1 or GLOB_VIEW_TYPE=9 or show_perem_2d=5) AND _componentTypes[_i] <> COMPTYPE_CORE then _bShowPart[_i] = 0
						  if (GLOB_STRUCTURE_DISPLAY = 2 or GLOB_VIEW_TYPE=9 or show_perem_2d=5) AND _componentTypes[_i] = COMPTYPE_FINISH then _bShowPart[_i] = 0
						  if _bShowPart[_i] then _needRequestDetails = 1
					next _i
					if _needRequestDetails then
						n = REQUEST ("Profile_default_geometry", index, _profileGeometryRawData)	 
						_idxStartPoints[1] = _nComponents + 1
						_numPropertybyNodes = 5
						for _i = 2 to _nComponents
							_numCompNodes = _profileGeometryRawData[_i - 1]
							_idxStartPoints[_i] = _idxStartPoints[_i - 1] + _numCompNodes * _numPropertybyNodes
							_idxEndPoints[_i-1] = _idxStartPoints[_i] - 1
						next _i
						_idxEndPoints[_nComponents] = vardim1(_profileGeometryRawData)
					endif
				endif
				!Распихиваем геометрию по массивам
				for n = 1 to _nComponents
					_idxStartPoints_m[i][n] = _idxStartPoints[n]
					_idxEndPoints_m[i][n] = _idxEndPoints[n]
					_bShowPart_m[i][n] = _bShowPart[n]
				next n
				if vardim1(_profileGeometryRawData)>EPS then
					for n = 1 to vardim1(_profileGeometryRawData)
						_profileGeometryRawData_m[i][n] = _profileGeometryRawData[n]
					next n
				endif
				_nComponents_m[i]=_nComponents
			endif
		next i
	endif
	!---------- Сложный профиль -------------
endif

dim perem_coord[][8]
dim perem_material[]
inx = 1
perem_sum_t = 0
perem_coord[inx][1] = perem_zazor_type[1]
perem_coord[inx][2] = 0
perem_coord[inx][3] = 0
perem_coord[inx][4] = 0
perem_coord[inx][5] = 0
perem_coord[inx][6] = -1 
perem_coord[inx][7] = 0 : perem_coord[inx][8] = 0
perem_material[inx] = -1
perem_sum_t = perem_sum_t + perem_coord[inx][1]+(perem_coord[inx][6] = iType_UGMIRR or perem_coord[inx][6] = iType_UGx2)*perem_coord[inx][7]+(perem_coord[inx][6] = iType_UG)*max(perem_coord[inx][7],perem_coord[inx][1])

inx_last = 2
dim perem_zazor_s[]
for i=inx_start_type to flag_not_use
	if perem_qty_type[i]>EPS then
		if main_name<>"" and WALL_COMPS_NAME_<>"" and perem_th_by_layer[i]>EPS then
			it = perem_th_by_layer[i]
!			if (GLOB_STRUCTURE_DISPLAY = 1 or GLOB_STRUCTURE_DISPLAY = 2) AND WALL_SKINS_PARAMS_[it][6]<EPS then isShow[i] = 0
!			if GLOB_STRUCTURE_DISPLAY = 2 AND WALL_SKINS_PARAMS_[it][15]>1 then isShow[i] = 0
			if perem_type[i]<EPS then isShow[i] = 0
		endif
		!Зазор между типами
		if i-1>EPS then
			inx = inx+1
			dh = perem_dh[i]
			if perem_dhe[i] then dh=0
			perem_coord[inx][1] = perem_zazor_type[i] !Ширина зазора
			perem_coord[inx][2] = perem_h[i]	!Высотa зазора
			perem_coord[inx][3] = max(dh,perem_dh[inx_last])			!Смещение зазора по вертикали
			perem_coord[inx][4] = perem_dlin[i]		!Длина зазора
			perem_coord[inx][5] = perem_dl[i]			!Смещение зазора по горизонтали
			perem_coord[inx][6] = -2					!Тип 
			perem_coord[inx][7] = 0
			perem_coord[inx][8] = 0
			perem_material[inx] = perem_empt_material*(abs(perem_zazor_by_layer[i])<EPS)
			perem_sum_t = perem_sum_t + perem_coord[inx][1]
		endif
		for j=1 to perem_qty_by_type[i]
			dh = perem_dh[i]
			if perem_dhf[i] and (j-1)>EPS then dh=0
			if perem_dhe[i] and (perem_qty_by_type[i]-j)>EPS then dh=0
			inx = inx+1
			perem_coord[inx][1] = perem_t[i]
			perem_coord[inx][2] = perem_h[i]
			perem_coord[inx][3] = dh
			perem_coord[inx][4] = perem_dlin[i]
			perem_coord[inx][5] = perem_dl[i]	
			perem_coord[inx][6] = perem_type[i]
			perem_coord[inx][7] = perem_zazor[i]
			perem_coord[inx][8] = i
			perem_material[inx] = perem_material_type[i]
			perem_sum_t = perem_sum_t + perem_coord[inx][1]
			if perem_coord[inx][6] = iType_UG then perem_sum_t = perem_sum_t + max(perem_coord[inx][7],perem_coord[inx][1])
			if perem_coord[inx][6] = iType_UGMIRR then perem_sum_t = perem_sum_t + max(perem_coord[inx][7],perem_tug[i])
			if perem_coord[inx][6] = iType_UGx2 then perem_sum_t = perem_sum_t + max(perem_coord[inx][7],perem_tug[i])
			!Зазор между элементами
			if abs(perem_qty_by_type[i]-1)>EPS and (perem_qty_by_type[i]-j)>EPS then
				inx = inx+1
				perem_coord[inx][1] = perem_zazor[i]
				perem_coord[inx][2] = perem_h[i]
				perem_coord[inx][3] = dh
				perem_coord[inx][4] = perem_dlin[i]
				perem_coord[inx][5] = perem_dl[i]
				perem_coord[inx][6] = -1
				perem_coord[inx][7] = 0 : perem_coord[inx][8] = 0
				perem_material[inx] = perem_empt_material
				perem_sum_t = perem_sum_t + perem_coord[inx][1]
			endif
		next j
		inx_last = i
	endif
next i
dim qty_arm[4][2] : qty_arm[1][1] = 0 !Количество стержней в рядовой или монолитнй [основная][хомуты]
perem_max_h = 0
perem_max_l = 0
perem_max_dl = 0
perem_max_dh = 0
isError = 0
for i=inx_start_type to flag_not_use
	qty_arm[i][1] = 0 : qty_arm[i][2] = 0
	if perem_qty_by_type[i]>EPS then
		if (perem_h[i]-perem_dh[i])-perem_max_h>EPS then perem_max_h = perem_h[i]+perem_dh[i]
		if (perem_dh[i]-perem_max_dh)>EPS then perem_max_dh = perem_dh[i]
		if perem_dlin[i]-perem_max_l>EPS then perem_max_l = perem_dlin[i]
		if perem_dl[i]-perem_max_dl>EPS then perem_max_dl = perem_dl[i]
		if perem_type[i]=iType_ARM then
			if perem_shag_osn<EPS then perem_shag_osn = 50/1000
			qty_arm_osn = (perem_t[i]-zs_leftright*2)/perem_shag_osn
			if (qty_arm_osn-1)>EPS then
				if ceil(qty_arm_osn)>EPS then qty_arm_osn = int(qty_arm_osn)+1
			else
				qty_arm_osn = 2
			endif
			qty_arm[i][1] = qty_arm_osn
		endif
!------ПРОВЕРКА ДЛИНЫ ТУТ ------------
		less_opir = (perem_dlin[i]<ac_wallhole_width)
		if less_opir and perem_type[i]<>iType_NO then isError = 1
!------ПРОВЕРКА ДЛИНЫ ТУТ ------------
	endif
next i

"mend":
