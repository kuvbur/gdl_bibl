if not(flag_not_use) then
	perem_marka = "!"
	perem_otm = ""
	for i=1 to vardim1(perem_qty_type)
		perem_pos[i]="!"
	next i
	PARAMETERS perem_marka = perem_marka, perem_otm=perem_otm
	perem_pos_1 = perem_pos[1]
	perem_pos_2 = perem_pos[2]
	perem_pos_3 = perem_pos[3]
	perem_pos_4 = perem_pos[4]
	parameters perem_pos_1=perem_pos_1
	parameters perem_pos_2=perem_pos_2
	parameters perem_pos_3=perem_pos_3
	parameters perem_pos_4=perem_pos_4
	end
endif

dim t_perem_nagr[]
dim t_perem_naen[]
dim t_perem_obozn[]
dim t_perem_h[]
dim t_perem_t[]
dim t_perem_ves[]
dim t_perem_dlin[]
dim t_perem_tug[]
for i=1 to 8
	t_perem_nagr[i] = 0
	t_perem_naen[i] = ""
	t_perem_h[i] = 0
	t_perem_t[i] = 0
	t_perem_ves[i] = 0
	t_perem_dlin[i] = 0
	t_perem_tug[i] = 0
next i
dim emp1t[] : emp1t[1] = ""
dim un_vis[] : un_vis[1]=0
dim un_tolsh[] : un_tolsh[1]=0
dim naen_type[] : naen_type[1]=""
dim tdlin_m[] : tdlin_m[1]=0
dim tvis_m[] : tvis_m[1]=0
dim ttolsh_m[] : ttolsh_m[1]=0
t_perem_podbor=0
t_perem_podbor_flag=0
t_perem_tu = 0
th = 0

!!!Символы для удаления
dim del_ch[] : i=0
	i=i+1 : del_ch[i]="("
	i=i+1 : del_ch[i]=")"
	i=i+1 : del_ch[i]="x"
	i=i+1 : del_ch[i]="H"
	i=i+1 : del_ch[i]="B"
	i=i+1 : del_ch[i]="L"
	i=i+1 : del_ch[i]=" "
	i=i+1 : del_ch[i]="х"
	i=i+1 : del_ch[i]=" "
	i=i+1 : del_ch[i]="."
	i=i+1 : del_ch[i]=","

if GLOB_MODPAR_NAME = "perem_dl_2" and perem_eq_dl then
	PARAMETERS perem_dl_1 = perem_dl_2
	PARAMETERS perem_dl_3 = perem_dl_2
	PARAMETERS perem_dl_4 = perem_dl_2
endif

values{2} "perem_utepl_spec" itype_spec, t_type_spec

!------------------------- Чтение и восстановление конфигурации -----------------------------------------
perem_config_t=""
for i=1 to vardim1(perem_qty_type)
	perem_config_t = perem_config_t + str("%.0", perem_qty_type[i])+";"					!1
	if perem_qty_type[i]>EPS then
		perem_config_t = perem_config_t + str("%.0", perem_type[i])+";"					!2
		perem_config_t = perem_config_t + perem_subtype[i]+";"							!3
		perem_config_t = perem_config_t + str("%.0mm", perem_min_opir[i])+".;"			!4
		perem_config_t = perem_config_t + str("%.0", perem_podbor[i])+";"				!5
		perem_config_t = perem_config_t + str("%.0mm", perem_mt[i])+".;"				!6
		perem_config_t = perem_config_t + str("%.0mm", perem_mh[i])+".;"				!7
		perem_config_t = perem_config_t + str("%.0mm", perem_t[i])+".;"					!8
		perem_config_t = perem_config_t + str("%.0mm", perem_h[i])+".;"					!9
		perem_config_t = perem_config_t + str("%.0mm", perem_dh[i])+".;"				!10
		perem_config_t = perem_config_t + str("%.0", perem_dhe[i])+";"					!11
		perem_config_t = perem_config_t + str("%.0", perem_dhf[i])+";"					!12
		perem_config_t = perem_config_t + str("%.0mm", perem_zazor[i])+".;"				!13
		perem_config_t = perem_config_t + str("%.0", perem_qty_by_type[i])+";"			!14
		perem_config_t = perem_config_t + str("%.0", perem_archprofile[i])+";"			!15
		perem_config_t = perem_config_t + str("%.0", perem_ves_p[i])+";"				!16
		perem_config_t = perem_config_t + str("%.0mm", perem_zazor_type[i])+".;"		!17
		perem_config_t = perem_config_t + str("%.0mm", perem_zazor_by_layer[i])+".;"	!18
		perem_config_t = perem_config_t + str("%.0", perem_th_by_layer[i])+";"			!19
		perem_config_t = perem_config_t + perem_profile[i]+";"							!20
	endif
	perem_config_t = perem_config_t + str("%.0",i)+"/"									!21
next i

if GLOB_MODPAR_NAME = "perem_config" and perem_config<>perem_config_t and strlen(perem_config)>1 then
	max_param = 21
	dim read_param[][4]
	for i=1 to vardim1(perem_qty_type)
		for j=1 to max_param
			if j=3 or j=20 then
				read_param[j][i] = ""
			else
				read_param[j][i] = 0
			endif
		next j
	next i
	perem_config_part = perem_config : part = "" : isRead = 1
	for i=1 to vardim1(perem_qty_type)
		inx = STRSTR(perem_config_part, "/")
		part = STRSUB (perem_config_part, 1, inx-1)
		perem_config_part = STRSUB (perem_config_part, inx+1, STRLEN(perem_config_part)+10)
		qty = STRSUB (part, 1, STRSTR(part, ";")-1)
		num_qty=0 : n = SPLIT (qty, "%n", num_qty)
		inx = STRSUB (part, STRLEN(part), 1)
		num_inx=0 : n = SPLIT (inx, "%n", num_inx)
		if num_inx<>i then isRead = 0
		if num_qty>EPS then
			for j=1 to max_param
				inx = STRSTR(part, ";")
				val = STRSUB (part, 1, inx-1)
				part = STRSUB (part, inx+1, STRLEN(part)+10)
				if j=3 or j=20 then
					if vartype(val)=1 then val = ""
					read_param[j][i] = val
				else
					mn = 1
					if STRSTR(val, ".")>EPS then
						val = STRSUB (val, 1, strlen(val)-1)
						mn = 1000
					endif
					_newChar = "" : _currStr = "" : _charToReplace=""
					for k=1 to vardim1(del_ch)
						_charToReplace = del_ch[k]
						_currStr = val
						gosub "purge_txt"
						val=_newStr
					next k
					if vartype(val)=1 then val = "0"
					if vartype(val)=2 then
						num = 0
						n = SPLIT (val, "%n", num)
						read_param[j][i] = num/mn
					endif					
				endif
			next j
		endif
		read_param[1][i] = num_qty
		read_param[max_param][i] = num_inx
	next i
	if isRead = 1 then
		for i=1 to vardim1(perem_qty_type)
			perem_qty_type[i] = read_param[1][i]
			perem_type[i] = read_param[2][i]
			perem_subtype[i] = read_param[3][i]
			perem_min_opir[i] = read_param[4][i]
			perem_podbor[i] = read_param[5][i]
			perem_mt[i] = read_param[6][i]
			perem_mh[i] = read_param[7][i]
			perem_t[i] = read_param[8][i]
			perem_h[i] = read_param[9][i]
			perem_dh[i] = read_param[10][i]
			perem_dhe[i] = read_param[11][i]
			perem_dhf[i] = read_param[12][i]
			perem_zazor[i] = read_param[13][i]
			perem_qty_by_type[i] = read_param[14][i]
			perem_archprofile[i] = read_param[15][i]
			perem_ves_p[i] = read_param[16][i]
			perem_zazor_type[i] = read_param[17][i]
			perem_zazor_by_layer[i] = read_param[18][i]
			perem_th_by_layer[i] = read_param[19][i]
			perem_profile[i] = read_param[20][i]
		next i

		PARAMETERS perem_qty_type=perem_qty_type, perem_th_by_layer=perem_th_by_layer, perem_zazor_by_layer=perem_zazor_by_layer, perem_zazor_type=perem_zazor_type, perem_t=perem_t, perem_h=perem_h 

		parameters perem_profile_1=perem_profile[1]
		parameters perem_qty_by_type_1=perem_qty_by_type[1]
		parameters perem_dh_1=perem_dh[1]
		parameters perem_zazor_1=perem_zazor[1]
		parameters perem_type_1=perem_type[1]
		parameters perem_min_opir_1=perem_min_opir[1] 
		parameters perem_archprofile_1=perem_archprofile[1]
		parameters perem_ves_p_1=perem_ves_p[1]
		parameters perem_dhe_1=perem_dhe[1] 
		parameters perem_dhf_1=perem_dhf[1] 
		parameters perem_subtype_1=perem_subtype[1] 
		parameters perem_podbor_1=perem_podbor[1]
		parameters perem_h_1 = perem_mh[1] 
		parameters perem_t_1 = perem_mt[1]

		parameters perem_profile_2=perem_profile[2]
		parameters perem_qty_by_type_2=perem_qty_by_type[2]
		parameters perem_dh_2=perem_dh[2]
		parameters perem_dl_2=perem_dl[2]
		parameters perem_zazor_2=perem_zazor[2]
		parameters perem_type_2=perem_type[2]
		parameters perem_min_opir_2=perem_min_opir[2] 
		parameters perem_archprofile_2=perem_archprofile[2]
		parameters perem_ves_p_2=perem_ves_p[2]
		parameters perem_dhe_2=perem_dhe[2] 
		parameters perem_dhf_2=perem_dhf[2] 
		parameters perem_subtype_2=perem_subtype[2] 
		parameters perem_podbor_2=perem_podbor[2]
		parameters perem_h_2 = perem_mh[2] 
		parameters perem_t_2 = perem_mt[2]

		parameters perem_profile_3=perem_profile[3]
		parameters perem_qty_by_type_3=perem_qty_by_type[3]
		parameters perem_dh_3=perem_dh[3]
		parameters perem_dl_3=perem_dl[3]
		parameters perem_zazor_3=perem_zazor[3]
		parameters perem_type_3=perem_type[3]
		parameters perem_min_opir_3=perem_min_opir[3] 
		parameters perem_archprofile_3=perem_archprofile[3]
		parameters perem_ves_p_3=perem_ves_p[3]
		parameters perem_dhe_3=perem_dhe[3] 
		parameters perem_dhf_3=perem_dhf[3] 
		parameters perem_subtype_3=perem_subtype[3] 
		parameters perem_podbor_3=perem_podbor[3]
		parameters perem_h_3 = perem_mh[3] 
		parameters perem_t_3 = perem_mt[3]

		parameters perem_profile_4=perem_profile[4]
		parameters perem_qty_by_type_4=perem_qty_by_type[4]
		parameters perem_dh_4=perem_dh[4]
		parameters perem_dl_4=perem_dl[4]
		parameters perem_zazor_4=perem_zazor[4]
		parameters perem_type_4=perem_type[4]
		parameters perem_min_opir_4=perem_min_opir[4] 
		parameters perem_archprofile_4=perem_archprofile[4]
		parameters perem_ves_p_4=perem_ves_p[4]
		parameters perem_dhe_4=perem_dhe[4] 
		parameters perem_dhf_4=perem_dhf[4] 
		parameters perem_subtype_4=perem_subtype[4] 
		parameters perem_podbor_4=perem_podbor[4]
		parameters perem_h_4 = perem_mh[4] 
		parameters perem_t_4 = perem_mt[4]
	endif
else
	PARAMETERS perem_config = perem_config_t
endif
!------------------------- Чтение и восстановление конфигурации -----------------------------------------
if use_spec then
	is_pos_excel = 1
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "is_pos_excel", is_pos_excel)
	if success then use_spec = is_pos_excel
endif
!---------------------------------Сброс марки и перепозичивание ------------------------------------
if (perem_marka_reset or perem_reset) and use_spec then
	perem_marka_in_read = 0
	perem_marka_reset = 0
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "perem_marka_in_read", perem_marka_in_read)
	perem_marka = "-" : if perem_marka_in_read then perem_marka = "!"
	if perem_marka_in_read then
		perem_otm = ""
		dim perem_sum_in[] : perem_sum_in[1]=""
		dim perem_otm_in[] : perem_otm_in[1]=""
		dim perem_marka_in[] : perem_marka_in[1]=""
		success = LIBRARYGLOBAL ("Libraryflobals-perem", "perem_sum_in", perem_sum_in)
		success = LIBRARYGLOBAL ("Libraryflobals-perem", "perem_otm_in", perem_otm_in)
		success = LIBRARYGLOBAL ("Libraryflobals-perem", "perem_marka_in", perem_marka_in)
		for i=1 to vardim1(perem_sum_in)
			if perem_sum_in[i] = perem_marka_sum and strstr(perem_marka, "!!")<EPS then 
				perem_otm = perem_otm_in[i]
				perem_marka = perem_marka_in[i]
				i=vardim1(perem_sum_in)
			endif
		next i
		PARAMETERS perem_marka = perem_marka, perem_otm=perem_otm
	endif
	PARAMETERS perem_marka_reset = perem_marka_reset
endif

if not(use_spec) then 
	parameters perem_otm = ur
	HIDEPARAMETER "perem_marka_reset", "perem_reset"
endif

if perem_pos_reset or perem_reset then
	perem_pos_in_read = 0
	perem_pos_reset = 0
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "perem_pos_in_read", perem_pos_in_read)
	if perem_pos_in_read then
		for i=1 to 4
			perem_pos[i]=""
		next i
		zzt = "-" : if perem_pos_in_read then zzt = "!"
		for i=inx_start_type to flag_not_use
			if perem_qty_type[i]>EPS then perem_pos[i]=zzt
		next i
		dim perem_pos_in[] : perem_pos_in[1]=""
		dim perem_naen_in[] : perem_naen_in[1]=""
		dim perem_obozn_in[] : perem_obozn_in[1]=""
		success = LIBRARYGLOBAL ("Libraryflobals-perem", "perem_pos_in", perem_pos_in)
		success = LIBRARYGLOBAL ("Libraryflobals-perem", "perem_naen_in", perem_naen_in)
		success = LIBRARYGLOBAL ("Libraryflobals-perem", "perem_obozn_in", perem_obozn_in)
		for i=1 to min(vardim1(perem_naen_in),vardim1(perem_pos_in), vardim1(perem_obozn_in))
			for j=inx_start_type to flag_not_use
				if perem_qty_type[j]>EPS then
					if perem_naen_in[i] = perem_naen[j] and strstr(perem_pos[j], "!!")<EPS then
						perem_pos[j]=perem_pos_in[i]
						if perem_obozn_in[i]<>"-" then
							PARAMETERS perem_obozn[j]=perem_obozn_in[i]
						endif
					endif
				endif
			next j
		next i
		perem_pos_1 = perem_pos[1]
		perem_pos_2 = perem_pos[2]
		perem_pos_3 = perem_pos[3]
		perem_pos_4 = perem_pos[4]
		parameters perem_pos_1=perem_pos_1
		parameters perem_pos_2=perem_pos_2
		parameters perem_pos_3=perem_pos_3
		parameters perem_pos_4=perem_pos_4
	endif
	PARAMETERS perem_pos_reset = perem_pos_reset
endif

if perem_reset and not(perem_pos_reset) and not(perem_marka_reset) then 
	perem_reset = 0
	PARAMETERS perem_reset=perem_reset
endif
!!---------------------------------Сброс марки и перепозичивание ------------------------------------


!---------------------------------Ограничения при использовании вне окна/проёма --------------------
if main_name="" then
	values "ac_wallhole_width" range [min_opir,)
	values "max_t" range [0.05,)
	if GLOB_MODPAR_NAME = "wallhole_half_width" then
		ac_wallhole_width = wallhole_half_width * 2
		PARAMETERS ac_wallhole_width = ac_wallhole_width
	else
		wallhole_half_width = ac_wallhole_width / 2
		PARAMETERS wallhole_half_width = wallhole_half_width
	endif
	if GLOB_MODPAR_NAME = "A" then
		PARAMETERS ac_wallhole_width = A
	else
		PARAMETERS A = ac_wallhole_width
	endif
	PARAMETERS B = perem_max_h : LOCK "B"
	PARAMETERS ZZYZX = perem_sum_t : LOCK "ZZYZX"
	parameters ac_toplevel = perem_max_h
	parameters ac_bottomlevel = 0
	if manual_elev then
		values 'n_elev' numb_elev
	else
		parameters n_elev = n_elev
		LOCK "n_elev"
	endif
	for i=1 to vardim1(perem_qty_type)
		perem_zazor_by_layer[i]=0
		perem_th_by_layer[i]=0
	next i
	parameters perem_zazor_by_layer=perem_zazor_by_layer, perem_th_by_layer=perem_th_by_layer
	LOCK "perem_zazor_by_layer", "perem_th_by_layer"
	LOCK "perem_mul", "perem_reverse"
	! ----- Параметры для выносной надписи --------
	hideparameter "label_sp"
	dim label_posxyz[]
	dim label_posang[]
	label_posxyz[1] = 0 : label_posxyz[2] = 0 : label_posxyz[3] = 0
	label_posang[1] = 0 : label_posang[2] = 0
	parameters label_posxyz = label_posxyz, label_posang = label_posang, label_posset = 1
	! --------------------------------------------------
else
	if vardim1(perem_zazor_by_layer)<>vardim1(perem_qty_type) or vardim1(perem_th_by_layer)<>vardim1(perem_qty_type) then
		dim t[]
		for i=1 to vardim1(perem_qty_type)
			t[i]=0
		next i
		parameters perem_zazor_by_layer = t
		parameters perem_th_by_layer = t
	endif
	if WALL_COMPS_NAME_<>"" then 

		t_before_core = 0 : t_after_core = 0 : core_flag = 0
		for i=1 to WALL_SKINS_NUMBER_
			isCore = (WALL_SKINS_PARAMS_[i][6]>EPS)
			if isCore then core_flag = 1
			if core_flag = 0 and not(isCore) then t_before_core = t_before_core + WALL_SKINS_PARAMS_[i][2]
			if core_flag = 1 and not(isCore) then t_after_core = t_after_core + WALL_SKINS_PARAMS_[i][2]
		next i

		for i=1 to vardim1(perem_qty_type)
			if perem_th_by_layer[i]>WALL_SKINS_NUMBER_ or perem_th_by_layer[i]<EPS then
				parameters perem_th_by_layer[i] = 0
			else
				if perem_reverse=1 then perem_th_by_layer[i] = WALL_SKINS_NUMBER_ - perem_th_by_layer[i] + 1
			endif
			
			inx_sl = perem_zazor_by_layer[i]
			if abs(inx_sl)>EPS and abs(inx_sl)<=WALL_SKINS_NUMBER_ then
				if perem_reverse=1 then inx_sl = WALL_SKINS_NUMBER_ - inx_sl + 1
				parameters perem_zazor_type[i]=WALL_SKINS_PARAMS_[abs(inx_sl)][2]*sgn(inx_sl)
			endif
			if inx_sl>WALL_SKINS_NUMBER_ and not(perem_reverse) then parameters perem_zazor_type[i] = -t_after_core
			if inx_sl<-EPS and not(perem_reverse)  then parameters perem_zazor_type[i] = t_before_core
			if inx_sl>WALL_SKINS_NUMBER_ and perem_reverse then parameters perem_zazor_type[i] = t_after_core
			if inx_sl<-EPS and perem_reverse  then parameters perem_zazor_type[i] = -t_before_core
		next i
	endif
endif
!---------------------------------Ограничения при использовании вне окна/проёма --------------------

!!!---------------------------Сортамент уголков ----------------------------------------------------
dim ugol_r[][4] !Высота, ширина, толщина, вес
dim ugol_m[] : i=0
if has_UG then
	!Список наименований
	dim ugol_m[] : ugol_m[1] = ""
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "naen_m_ug", ugol_m)
	!Список размеров
	dim b_ug_m[] : b_ug_m[1] = 0
	dim h_ug_m[] : h_ug_m[1] = 0
	dim t_ug_m[] : t_ug_m[1] = 0
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "b_ug", b_ug_m)
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "h_ug", h_ug_m)
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "t_ug", t_ug_m)
	!Список веса
	dim ves_m_ug[] : ves_m_ug[1] = 0
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "ves_m_ug", ves_m_ug)
	!ГОСТы
	dim gost_ug_m[] : gost_ug_m[1] = ""
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "gost_ug", gost_ug_m)
	!Собираем размеры и вес в один массив
	n_ug = min(vardim1(b_ug_m), vardim1(h_ug_m), vardim1(t_ug_m), vardim1(ves_m_ug), vardim1(ugol_m), vardim1(gost_ug_m))
	for i=1 to n_ug
		ugol_r[i][1] = h_ug_m[i]
		ugol_r[i][2] = b_ug_m[i]
		ugol_r[i][3] = t_ug_m[i]
		ugol_r[i][4] = ves_m_ug[i]
	next i
endif
!!!---------------------------Сортамент уголков ----------------------------------------------------

!!!---------------------------Сортамент арматуры ----------------------------------------------------
if has_ARM then
	dim reinforce_gost[] : reinforce_gost[1] = ""
	dim reinforce_class[] : reinforce_class[1] = ""
	dim reinforce_diam[][] : reinforce_diam[1][1] = 0
	dim reinforce_weight[][] : reinforce_weight[1][1] = 0
	ch6=OPEN("TEXT","Сортамент_арматуры.txt","SEPARATOR=';',MODE=RO,LIBRARY")
	i = 1 : gost_in="" : class_in="" : diam_in=0 : area_in=0 : weight_in=0 : nclass=1 : ndiam=1
	REPEAT
		n=INPUT(ch6, i+1, 1, gost_in, class_in, diam_in, area_in, weight_in)
		if reinforce_class[nclass] = "" then
			reinforce_class[nclass]= class_in
			reinforce_gost[nclass]= gost_in
		endif
		if class_in <> reinforce_class[nclass] then  
			nclass = nclass + 1
			reinforce_class[nclass]= class_in
			reinforce_gost[nclass]= gost_in
			ndiam = 1
		endif
		if reinforce_diam[ndiam][nclass] = 0 then 
			reinforce_diam[ndiam][nclass] = diam_in / 1000
			reinforce_weight[ndiam][nclass] = weight_in
		endif
		if diam_in/1000 <> reinforce_diam[ndiam][nclass] then 
			ndiam = ndiam + 1
			reinforce_diam[ndiam][nclass] = diam_in / 1000
			reinforce_weight[ndiam][nclass] = weight_in
		endif
		i = i + 1
	UNTIL n = -1	
	close (ch6)
	dim diam_temp[] : diam_temp[1] = 0
	dim diam_d[] : diam_d[1] = 0
	dim diam_o[] : diam_o[1] = 0
	!Основная
	values "perem_class" reinforce_class
	class = perem_class : gosub "get_diam" : diam_o = diam_temp !Список диаметров для выбранного класса
	values "perem_diam" diam_o
	diam_arm = perem_diam : gosub "get_weight" : weight_osn = weight !Вес выбранного диаметра
	!Хомуты
	values "perem_class_dop" reinforce_class
	class = perem_class_dop : gosub "get_diam" : diam_d = diam_temp !Список диаметров для выбранного класса
	values "perem_diam_dop" diam_d
	diam_arm = perem_diam_dop : gosub "get_weight" : weight_dop = weight !Вес выбранного диаметра
endif
!!!---------------------------Сортамент арматуры ----------------------------------------------------

!!!---------------------------Сортамент сборных перемычек -------------------------------------------
if has_SB then
	!Список марок перемычек
	dim mark_perem[] : mark_perem[1] = ""
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "mark_perem", mark_perem)
	!Список наименований
	dim naen_m[] : naen_m[1] = ""
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "naen_m", naen_m)
	!Список максимальных длин проёма
	dim dlin_per_m[]
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "dlin_m", dlin_per_m)
	!Список длин перемычек
	dim dlin_m[]
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "max_pr_m", dlin_m)
	!Список толщин
	dim tolsh_m[]
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "tolsh_m", tolsh_m)
	!Список высот
	dim vis_m[]
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "vis_m", vis_m)
	!Список нагрузок
	dim nagr_m[]
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "nagr_m", nagr_m)
	!Список веса
	dim ves_m[]
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "ves_m", ves_m)
	!ГОСТ
	dim gost_m[] : gost_m[1] = ""
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "gost_m", gost_m)
	!Типы перемычек
	dim type_perem_m[]
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "type_perem_m", type_perem_m)
	has_custom_perem = 0
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "has_custom_perem", has_custom_perem)
endif
!!!---------------------------Сортамент сборных перемычек -------------------------------------------

!--------- ТИП 1 --------------
inx=1
if perem_qty_type[inx] then
	values{2} "perem_type_1" itype_perem, t_type_perem
!	values "perem_min_opir_1" range [min_opir, max_opir]
!	values "perem_dl_1" range[-perem_min_opir_1,perem_min_opir_1]
	t_perem_type = perem_type_1
	t_perem_sub_type = perem_subtype_1
	t_perem_podbor = perem_podbor_1
	t_perem_hogr = perem_h_1
	t_perem_togr = perem_t_1
	t_perem_profile = perem_profile_1
	t_perem_min_opir = perem_min_opir_1
	t_perem_qty_by_type = perem_qty_by_type_1
	t_perem_zazor = perem_zazor_1
	if t_perem_type = iType_SB then
		values "perem_subtype_1" mark_perem
		gosub "get_sort"
		values "perem_profile_1" naen_type
		values 'perem_h_1' 0,un_vis
		values 'perem_t_1' 0,un_tolsh
	endif
	gosub "get_param"
	if t_perem_type = iType_SB then
		if t_perem_podbor and t_perem_podbor_flag<EPS then
			perem_podbor_1 = 0
			PARAMETERS perem_podbor_1 = 0
		else
			if t_perem_podbor then 
				PARAMETERS perem_profile_1 = t_perem_profile
				LOCK "perem_profile_1"
			endif
		endif
		if th<EPS or t_perem_qty_by_type<EPS then
			values "perem_qty_by_type_1" range[1,5]
		else
			PARAMETERS perem_qty_by_type_1 = t_perem_qty_by_type : LOCK "perem_qty_by_type_1"
			PARAMETERS perem_zazor_1 = t_perem_zazor
		endif
		if (perem_qty_by_type[inx]-1)<EPS then
			PARAMETERS perem_dhf_1=0, perem_dhe_1=0
			LOCK "perem_dhf_1", "perem_dhe_1"
			hideparameter "perem_dhf_1", "perem_dhe_1"
		else
			if perem_dhf_1 then PARAMETERS perem_dhe_1 = 0
			if perem_dhe_1 then PARAMETERS perem_dhf_1 = 0				
		endif
	else
		LOCK "perem_subtype_1"
		PARAMETERS perem_podbor_1 = 0 : LOCK "perem_podbor_1"
		PARAMETERS perem_qty_by_type_1 = 1 : LOCK "perem_qty_by_type_1"
	endif
	if t_perem_type = iType_CONC or t_perem_type = iType_ARM or t_perem_type = iType_UTEPL then
		PARAMETERS perem_zazor_1 = 0 : LOCK "perem_zazor_1"
		if t_perem_type = iType_CONC or t_perem_type = iType_ARM then
			PARAMETERS perem_profile_1 = t_perem_profile : LOCK "perem_profile_1"
		endif
		values 'perem_h_1' range[0.03,1]
		if th>EPS then 
			PARAMETERS perem_t_1 = t_perem_togr : LOCK "perem_t_1"
		else
			values 'perem_t_1' range[0.03,1]
		endif
	endif
	if t_perem_type = iType_UG or t_perem_type = iType_UGMIRR or t_perem_type = iType_UGx2 then
		PARAMETERS perem_h_1 = t_perem_hogr : LOCK "perem_h_1"
		PARAMETERS perem_t_1 = t_perem_togr : LOCK "perem_t_1"
		values "perem_profile_1" ugol_m
		if th>EPS then 
			PARAMETERS perem_zazor_1 = th : LOCK "perem_zazor_1"
		endif
	endif
	if t_perem_type = iType_UGx2 then
		if th>EPS then 
			PARAMETERS perem_zazor_1 = th : LOCK "perem_zazor_1"
		else
			values 'perem_zazor_1' range[t_perem_togr*2,1]
		endif
	endif
	if t_perem_type = iType_PROF then
		hideparameter "perem_t_1", "perem_h_1", "perem_zazor_1"
		LOCK "perem_t_1", "perem_h_1", "perem_zazor_1"
	else
		hideparameter "perem_ves_p_1", "perem_archprofile_1"
		LOCK "perem_ves_p_1", "perem_archprofile_1"
	endif
else
	hideparameter "perem_sp_type_1" 
	PARAMETERS perem_profile_1 = ""
endif
!--------- ТИП 2 --------------
inx=2
if perem_qty_type[inx] then
	values{2} "perem_type_2" itype_perem, t_type_perem
!	values "perem_min_opir_2" range [min_opir, max_opir]
!	values "perem_dl_2" range[-perem_min_opir_2,perem_min_opir_2]
	t_perem_type = perem_type_2
	t_perem_sub_type = perem_subtype_2
	t_perem_podbor = perem_podbor_2
	t_perem_hogr = perem_h_2
	t_perem_togr = perem_t_2
	t_perem_profile = perem_profile_2
	t_perem_min_opir = perem_min_opir_2
	t_perem_qty_by_type = perem_qty_by_type_2
	t_perem_zazor = perem_zazor_2
	if t_perem_type = iType_SB then
		values "perem_subtype_2" mark_perem
		gosub "get_sort"
		values "perem_profile_2" naen_type
		values 'perem_h_2' 0,un_vis
		values 'perem_t_2' 0,un_tolsh
	endif
	gosub "get_param"
	if t_perem_type = iType_SB then
		if t_perem_podbor and t_perem_podbor_flag<EPS then
			perem_podbor_2 = 0
			PARAMETERS perem_podbor_2 = 0
		else
			if t_perem_podbor then 
				PARAMETERS perem_profile_2 = t_perem_profile
				LOCK "perem_profile_2"
			endif
		endif
		if th<EPS or t_perem_qty_by_type<EPS then
			values "perem_qty_by_type_2" range[1,5]
		else
			PARAMETERS perem_qty_by_type_2 = t_perem_qty_by_type : LOCK "perem_qty_by_type_2"
			PARAMETERS perem_zazor_2 = t_perem_zazor
		endif
		if (perem_qty_by_type[inx]-1)<EPS then
			PARAMETERS perem_dhf_2=0, perem_dhe_2=0
			LOCK "perem_dhf_2", "perem_dhe_2"
			hideparameter "perem_dhf_2", "perem_dhe_2"
		else
			if perem_dhf_2 then PARAMETERS perem_dhe_2 = 0
			if perem_dhe_2 then PARAMETERS perem_dhf_2 = 0				
		endif
	else
		LOCK "perem_subtype_2"
		PARAMETERS perem_podbor_2 = 0 : LOCK "perem_podbor_2"
		PARAMETERS perem_qty_by_type_2 = 1 : LOCK "perem_qty_by_type_2"
	endif
	if t_perem_type = iType_CONC or t_perem_type = iType_ARM or t_perem_type = iType_UTEPL then
		PARAMETERS perem_zazor_2 = 0 : LOCK "perem_zazor_2"
		if t_perem_type = iType_CONC or t_perem_type = iType_ARM then
			PARAMETERS perem_profile_2 = t_perem_profile : LOCK "perem_profile_2"
		endif
		values 'perem_h_2' range[0.03,1]
		if th>EPS then 
			PARAMETERS perem_t_2 = t_perem_togr : LOCK "perem_t_2"
		else
			values 'perem_t_2' range[0.03,1]
		endif
	endif
	if t_perem_type = iType_UG or t_perem_type = iType_UGMIRR or t_perem_type = iType_UGx2 then
		PARAMETERS perem_h_2 = t_perem_hogr : LOCK "perem_h_2"
		PARAMETERS perem_t_2 = t_perem_togr : LOCK "perem_t_2"
		values "perem_profile_2" ugol_m
		if th>EPS then 
			PARAMETERS perem_zazor_2 = th : LOCK "perem_zazor_2"
		endif
	endif
	if t_perem_type = iType_UGx2 then
		if th>EPS then 
			PARAMETERS perem_zazor_2 = th : LOCK "perem_zazor_2"
		else
			values 'perem_zazor_2' range[t_perem_togr*2,1]
		endif
	endif
	if t_perem_type = iType_PROF then
		hideparameter "perem_t_2", "perem_h_2", "perem_zazor_2"
		LOCK "perem_t_2", "perem_h_2", "perem_zazor_2"
	else
		hideparameter "perem_ves_p_2", "perem_archprofile_2"
		LOCK "perem_ves_p_2", "perem_archprofile_2"
	endif
else
	hideparameter "perem_sp_type_2"
	PARAMETERS perem_profile_2 = ""
endif
!--------- ТИП 3 --------------
inx=3
if perem_qty_type[inx] then
	values{2} "perem_type_3" itype_perem, t_type_perem
!	values "perem_min_opir_3" range [min_opir, max_opir]
!	values "perem_dl_3" range[-perem_min_opir_3,perem_min_opir_3]
	t_perem_type = perem_type_3
	t_perem_sub_type = perem_subtype_3
	t_perem_podbor = perem_podbor_3
	t_perem_hogr = perem_h_3
	t_perem_togr = perem_t_3
	t_perem_profile = perem_profile_3
	t_perem_min_opir = perem_min_opir_3
	t_perem_qty_by_type = perem_qty_by_type_3
	t_perem_zazor = perem_zazor_3
	if t_perem_type = iType_SB then
		values "perem_subtype_3" mark_perem
		gosub "get_sort"
		values "perem_profile_3" naen_type
		values 'perem_h_3' 0,un_vis
		values 'perem_t_3' 0,un_tolsh
	endif
	gosub "get_param"
	if t_perem_type = iType_SB then
		if t_perem_podbor and t_perem_podbor_flag<EPS then
			perem_podbor_3 = 0
			PARAMETERS perem_podbor_3 = 0
		else
			if t_perem_podbor then 
				PARAMETERS perem_profile_3 = t_perem_profile
				LOCK "perem_profile_3"
			endif
		endif
		if th<EPS or t_perem_qty_by_type<EPS then
			values "perem_qty_by_type_3" range[1,5]
		else
			PARAMETERS perem_qty_by_type_3 = t_perem_qty_by_type : LOCK "perem_qty_by_type_3"
			PARAMETERS perem_zazor_3 = t_perem_zazor
		endif
		if (perem_qty_by_type[inx]-1)<EPS then
			PARAMETERS perem_dhf_3=0, perem_dhe_3=0
			LOCK "perem_dhf_3", "perem_dhe_3"
			hideparameter "perem_dhf_3", "perem_dhe_3"
		else
			if perem_dhf_3 then PARAMETERS perem_dhe_3 = 0
			if perem_dhe_3 then PARAMETERS perem_dhf_3 = 0				
		endif
	else
		LOCK "perem_subtype_3"
		PARAMETERS perem_podbor_3 = 0 : LOCK "perem_podbor_3"
		PARAMETERS perem_qty_by_type_3 = 1 : LOCK "perem_qty_by_type_3"
	endif
	if t_perem_type = iType_CONC or t_perem_type = iType_ARM or t_perem_type = iType_UTEPL then
		PARAMETERS perem_zazor_3 = 0 : LOCK "perem_zazor_3"
		if t_perem_type = iType_CONC or t_perem_type = iType_ARM then
			PARAMETERS perem_profile_3 = t_perem_profile : LOCK "perem_profile_3"
		endif
		values 'perem_h_3' range[0.03,1]
		if th>EPS then 
			PARAMETERS perem_t_3 = t_perem_togr : LOCK "perem_t_3"
		else
			values 'perem_t_3' range[0.03,1]
		endif
	endif
	if t_perem_type = iType_UG or t_perem_type = iType_UGMIRR or t_perem_type = iType_UGx2 then
		PARAMETERS perem_h_3 = t_perem_hogr : LOCK "perem_h_3"
		PARAMETERS perem_t_3 = t_perem_togr : LOCK "perem_t_3"
		values "perem_profile_3" ugol_m
		if th>EPS then 
			PARAMETERS perem_zazor_3 = th : LOCK "perem_zazor_3"
		endif
	endif
	if t_perem_type = iType_UGx2 then
		if th>EPS then 
			PARAMETERS perem_zazor_3 = th : LOCK "perem_zazor_3"
		else
			values 'perem_zazor_3' range[t_perem_togr*2,1]
		endif
	endif
	if t_perem_type = iType_PROF then
		hideparameter "perem_t_3", "perem_h_3", "perem_zazor_3"
		LOCK "perem_t_3", "perem_h_3", "perem_zazor_3"
	else
		hideparameter "perem_ves_p_2", "perem_archprofile_3"
		LOCK "perem_ves_p_3", "perem_archprofile_3"
	endif
else
	hideparameter "perem_sp_type_3"
	PARAMETERS perem_profile_3 = ""
endif
!--------- ТИП 4 --------------
inx=4
if perem_qty_type[inx] then
	values{2} "perem_type_4" itype_perem, t_type_perem
!	values "perem_min_opir_4" range [min_opir, max_opir]
!	values "perem_dl_4" range[-perem_min_opir_4,perem_min_opir_4]
	t_perem_type = perem_type_4
	t_perem_sub_type = perem_subtype_4
	t_perem_podbor = perem_podbor_4
	t_perem_hogr = perem_h_4
	t_perem_togr = perem_t_4
	t_perem_profile = perem_profile_4
	t_perem_min_opir = perem_min_opir_4
	t_perem_qty_by_type = perem_qty_by_type_4
	t_perem_zazor = perem_zazor_4
	if t_perem_type = iType_SB then
		values "perem_subtype_4" mark_perem
		gosub "get_sort"
		values "perem_profile_4" naen_type
		values 'perem_h_4' 0,un_vis
		values 'perem_t_4' 0,un_tolsh
	endif
	gosub "get_param"
	if t_perem_type = iType_SB then
		if t_perem_podbor and t_perem_podbor_flag<EPS then
			perem_podbor_4 = 0
			PARAMETERS perem_podbor_4 = 0
		else
			if t_perem_podbor then 
				PARAMETERS perem_profile_4 = t_perem_profile
				LOCK "perem_profile_4"
			endif
		endif
		if th<EPS or t_perem_qty_by_type<EPS then
			values "perem_qty_by_type_4" range[1,5]
		else
			PARAMETERS perem_qty_by_type_4 = t_perem_qty_by_type : LOCK "perem_qty_by_type_4"
			PARAMETERS perem_zazor_4 = t_perem_zazor
		endif
		if (perem_qty_by_type[inx]-1)<EPS then
			PARAMETERS perem_dhf_4=0, perem_dhe_4=0
			LOCK "perem_dhf_4", "perem_dhe_4"
			hideparameter "perem_dhf_4", "perem_dhe_4"
		else
			if perem_dhf_4 then PARAMETERS perem_dhe_4 = 0
			if perem_dhe_4 then PARAMETERS perem_dhf_4 = 0				
		endif
	else
		LOCK "perem_subtype_4"
		PARAMETERS perem_podbor_4 = 0 : LOCK "perem_podbor_4"
		PARAMETERS perem_qty_by_type_4 = 1 : LOCK "4"
	endif
	if t_perem_type = iType_CONC or t_perem_type = iType_ARM or t_perem_type = iType_UTEPL then
		PARAMETERS perem_zazor_4 = 0 : LOCK "perem_zazor_4"
		if t_perem_type = iType_CONC or t_perem_type = iType_ARM then
			PARAMETERS perem_profile_4 = t_perem_profile : LOCK "perem_profile_4"
		endif
		values 'perem_h_4' range[0.03,1]
		if th>EPS then 
			PARAMETERS perem_t_4 = t_perem_togr : LOCK "perem_t_4"
		else
			values 'perem_t_4' range[0.03,1]
		endif
	endif
	if t_perem_type = iType_UG or t_perem_type = iType_UGMIRR or t_perem_type = iType_UGx2 then
		PARAMETERS perem_h_4 = t_perem_hogr : LOCK "perem_h_4"
		PARAMETERS perem_t_4 = t_perem_togr : LOCK "perem_t_4"
		values "perem_profile_4" ugol_m
		if th>EPS then 
			PARAMETERS perem_zazor_4 = th : LOCK "perem_zazor_4"
		endif
	endif
	if t_perem_type = iType_UGx2 then
		if th>EPS then 
			PARAMETERS perem_zazor_4 = th : LOCK "perem_zazor_4"
		else
			values 'perem_zazor_4' range[t_perem_togr*2,1]
		endif
	endif
	if t_perem_type = iType_PROF then
		hideparameter "perem_t_4", "perem_h_4", "perem_zazor_4"
		LOCK "perem_t_3", "perem_h_4", "perem_zazor_4"
	else
		hideparameter "perem_ves_p_4", "perem_archprofile_4"
		LOCK "perem_ves_p_4", "perem_archprofile_4"
	endif
else
	hideparameter "perem_sp_type_4"
	PARAMETERS perem_profile_4 = ""
endif

t_perem_nagr_max = 10000000
for inx=1 to min(vardim1(t_perem_nagr), vardim1(perem_qty_type))
	if t_perem_nagr[inx]-t_perem_nagr_max<EPS and perem_qty_type[inx] then t_perem_nagr_max=t_perem_nagr[inx]
next inx

!-----------Формирование контрольной строки для разбивки------------------
!t_perem_marka_sum = ""
!for inx=1 to vardim1(perem_coord)
!	var = ""
!	for j=1 to vardim2(perem_coord)
!		if abs(perem_coord[inx][j])<EPS then
!			var = var + ","
!		else
!			var = var + str("%.1mm",perem_coord[inx][j])+","
!		endif
!	next j
!	var = var + "_"
!	t_perem_marka_sum = t_perem_marka_sum + var
!next inx

!-----------Формирование контрольной строки для разбивки------------------
dim param_name_out_t[] : i=1
perem_note = ""
t_perem_marka_sum = ""
for i=1 to 4
	qty = 0
	var = "" : if abs(perem_zazor_type[i])>EPS then var = str("%.0mm",perem_zazor_type[i])+","
	ted = ""
	if perem_qty_by_type[i]>EPS and perem_type[i]>0 then
		qty = perem_qty_by_type[i]
		if perem_type[i]=iType_UGx2 then qty=qty*2
		ted = t_perem_naen[i]+ " ("+str("%.0", qty)+"шт.)"
		if perem_type[i]=iType_UTEPL then
			if perem_utepl_spec=1 or perem_utepl_spec=4 then !Толщина и площадь
				qty = perem_dlin[i]*perem_h[i]
				ted = t_perem_naen[i]+ " ("+str("%.2", qty)+"кв.м.)"
			endif
			if perem_utepl_spec=2 or perem_utepl_spec=3 then !Толщина и объём
				qty = perem_dlin[i]*perem_h[i]*perem_t[i]
				ted = t_perem_naen[i]+ " ("+str("%.2", qty)+"куб.м.)"
			endif
			if perem_utepl_spec=5 then qty = 1
			if perem_utepl_spec=0 then qty = 0
		endif
		if strlen(perem_note)=0 then
			perem_note = ted
		else
			perem_note = perem_note + "; " + ted
		endif
		var = var + ted + ":"
		var = var + str("%.0mm",perem_dh[i])+","
		var = var + str("%.0mm",perem_zazor[i])+","
		var = var + str("%.0mm",perem_dhe[i])+","
		var = var + str("%.0mm",perem_dhf[i])+","
		var = var + "_"
	endif
	t_perem_marka_sum = t_perem_marka_sum + var
	t_perem_nagr[i] = qty
	param_name_out_t[i] = perem_pos[i]
next i

if strlen(t_perem_marka_sum)>EPS then
	_newChar = ""
	for i=1 to vardim1(del_ch)
		_charToReplace = del_ch[i]
		_currStr = t_perem_marka_sum
		gosub "purge_txt"
		t_perem_marka_sum=_newStr
	next i
endif

parameters param_name_out = param_name_out_t
PARAMETERS perem_nagr_max = t_perem_nagr_max
PARAMETERS perem_nagr = t_perem_nagr
PARAMETERS perem_naen = t_perem_naen
PARAMETERS perem_h = t_perem_h
PARAMETERS perem_t = t_perem_t
PARAMETERS perem_ves = t_perem_ves
PARAMETERS perem_dlin = t_perem_dlin
PARAMETERS perem_tug = t_perem_tug
PARAMETERS perem_marka_sum = t_perem_marka_sum
PARAMETERS perem_note = perem_note
hideparameter "perem_marka_sum" : LOCK "perem_marka_sum"

goto 20
"get_param":
	th=0
	if perem_th_by_layer[inx]>EPS then
		if main_name="" then
			th = max_t
		else
			if WALL_COMPS_NAME_<>"" then
				th=WALL_SKINS_PARAMS_[perem_th_by_layer[inx]][2]
			else
				th=WALL_THICKNESS_
			endif
		endif
		for i=inx_start_type to flag_not_use
			flag_find = 0
			if perem_th_by_layer[inx]=perem_th_by_layer[i] then flag_find = 1
			if i<inx and flag_find then
				th = 0
			endif
			if i>inx and flag_find then
				th = th - perem_t[i] - perem_zazor_type[i]
			endif
		next i
	endif
	!Сборная
	if t_perem_type = iType_SB then
		if t_perem_podbor then
			gosub "podbor"
			if t_perem_podbor_flag > EPS then t_perem_profile = naen_type[t_perem_podbor_flag]
		endif
		i=0
		REPEAT
			i = i + 1
		UNTIL ((t_perem_profile = naen_m[i])+(i=vardim1(naen_m)))
		t_inx_sub_type = i
		PARAMETERS perem_obozn[inx] = gost_m[t_inx_sub_type]
		t_perem_nagr[inx] = nagr_m[t_inx_sub_type]
		t_perem_h[inx] = vis_m[t_inx_sub_type]
		t_perem_t[inx] = tolsh_m[t_inx_sub_type]
		t_perem_ves[inx] = ves_m[t_inx_sub_type]
		t_perem_dlin[inx] = dlin_per_m[t_inx_sub_type]
		t_perem_naen[inx] = t_perem_profile
		if th>EPS then
			t_perem_qty_by_type = int(th/t_perem_t[inx])
			if t_perem_qty_by_type-1>EPS then t_perem_zazor = (th - t_perem_qty_by_type*t_perem_t[inx])/(t_perem_qty_by_type-1)
		else
			t_perem_qty_by_type = 0
		endif
	endif
	!Монолитная
	if t_perem_type = iType_CONC then
		if th>EPS then t_perem_togr = th-perem_zazor_type[inx]
		t_dlin = round_int((ac_wallhole_width + 2*t_perem_min_opir+perem_dl[inx])*50)/50
		t_perem_profile = str("%.0mm",t_perem_hogr)+"(H)x"+str("%.0mm",t_perem_togr)+"(B)x"+str("%.0mm",t_dlin)+"(L)"
		t_ves = t_dlin * t_perem_hogr * t_perem_togr * 2560
		t_perem_naen[inx] = t_perem_naen_prefix[4] + t_perem_profile
		t_perem_h[inx] = t_perem_hogr
		t_perem_t[inx] = t_perem_togr
		t_perem_ves[inx] = t_ves
		t_perem_dlin[inx] = t_dlin
		PARAMETERS perem_obozn[inx] = "-"
	endif
	!Рядовая
	if t_perem_type = iType_ARM then
		if th>EPS then t_perem_togr = th
		t_dlin = round_int((ac_wallhole_width + 2*t_perem_min_opir+perem_dl[inx])*50)/50
		t_perem_profile = str("%.0", qty_arm[inx][1])+"х"+str("%.0mm", perem_diam)+perem_class+" "+str("%.0mm",t_dlin)+"(L)x"+str("%.0mm",t_perem_hogr)+"(H)x"+str("%.0mm",t_perem_togr)+"(B)"
		t_ves = t_dlin * weight_osn * qty_arm[inx][1]
		t_perem_naen[inx] = t_perem_naen_prefix[3] + t_perem_profile
		t_perem_h[inx] = t_perem_hogr
		t_perem_t[inx] = t_perem_togr
		t_perem_ves[inx] = t_ves
		t_perem_dlin[inx] = t_dlin
		PARAMETERS perem_obozn[inx] = "-"
	endif
	!Уголок или спаренный уголок
	if t_perem_type = iType_UG or t_perem_type = iType_UGMIRR or t_perem_type = iType_UGx2 then
		ik = 1
		for k=1 to vardim1(ugol_m)
			if ugol_m[k]=perem_profile[inx] then ik = k
		next k
		t_dlin = round_int((ac_wallhole_width + 2*t_perem_min_opir)*20)/20
		t_perem_hogr=ugol_r[ik][1]
		t_perem_togr=ugol_r[ik][2]
		t_perem_tu=ugol_r[ik][3]
		t_ves = ugol_r[ik][4]*t_dlin
		gost_ug = gost_ug_m[ik]
		if t_perem_type = iType_UGx2 then
			t_perem_naen[inx] = t_perem_naen_prefix[6] +t_perem_profile+" L="+str("%.0mm",t_dlin)+"мм."
		else
			t_perem_naen[inx] = t_perem_naen_prefix[5] +t_perem_profile+" L="+str("%.0mm",t_dlin)+"мм."
		endif
		PARAMETERS perem_obozn[inx] = gost_ug
		t_perem_h[inx] = t_perem_hogr
		t_perem_t[inx] = t_perem_togr
		t_perem_tug[inx] = t_perem_tu
		t_perem_ves[inx] = t_ves
		t_perem_dlin[inx] = t_dlin
	endif
	!Сложный профиль
	if t_perem_type = iType_PROF then
		t_dlin = round_int((ac_wallhole_width + 2*t_perem_min_opir)*50)/50
		t_ves = perem_ves_p[inx] * t_dlin
		t_perem_ves[inx] = t_ves
		t_perem_dlin[inx] = t_dlin
		t_perem_naen[inx] = t_perem_profile+" L="+str("%.0mm",t_dlin)+"мм."
	endif
	!Утеплитель
	if t_perem_type = iType_UTEPL then
		if th>EPS then t_perem_togr = th-perem_zazor_type[inx]
		t_dlin = round_int((ac_wallhole_width + 2*t_perem_min_opir+perem_dl[inx])*50)/50
		t_ves = t_dlin * t_perem_hogr * t_perem_togr * 120
		t_perem_naen[inx] = t_perem_profile
		if perem_utepl_spec=1 or perem_utepl_spec=2 then !Толщина
			t_perem_naen[inx] = t_perem_profile + " t=" + str("%.0mm", t_perem_togr)+"мм"
		endif
		if perem_utepl_spec=1 or perem_utepl_spec=4 then !Толщина и площадь
			t_perem_naen[inx] = t_perem_naen[inx] + " S=кв.м."
		endif
		if perem_utepl_spec=2 or perem_utepl_spec=3 then !Толщина и объём
			t_perem_naen[inx] = t_perem_naen[inx] + " V=куб.м."
		endif
		if perem_utepl_spec=5 then t_perem_naen[inx] = t_perem_profile + " " + str("%.0mm",t_perem_hogr)+"(H)x"+str("%.0mm",t_perem_togr)+"(B)x"+str("%.0mm",t_dlin)+"(L)"
		if perem_utepl_spec=0 then t_perem_naen[inx] = ""
		t_perem_h[inx] = t_perem_hogr
		t_perem_t[inx] = t_perem_togr
		t_perem_ves[inx] = t_ves
		t_perem_dlin[inx] = t_dlin
		PARAMETERS perem_obozn[inx] = "-"
	endif
return


"get_sort":
	naen_type = emp1t
	tdlin_m = epm1i
	tvis_m = epm1i
	ttolsh_m = epm1i
	un_vis = epm1i
	un_tolsh = epm1i
	j = 0
	for i=1 to vardim1(naen_m)
		fl_type = 0
		if t_perem_sub_type="Любая брусковая" and (strstr(naen_m[i],"ПБ")>0 or strstr(naen_m[i],"ПП")>0) and strstr(naen_m[i],"Ф")=0 then fl_type = 1
		if t_perem_sub_type="Любая фибро" and strstr(naen_m[i],"ПБФ")>0 then fl_type = 1
		if t_perem_sub_type="Любой пользовательский" and has_custom_perem and type_perem_m[i]=3 then fl_type = 1
		if t_perem_sub_type<>"Любой пользовательский" and type_perem_m[i]<>3 then
			if STRSUB (naen_m[i], 1, strlen(t_perem_sub_type))=t_perem_sub_type and strstr(naen_m[i],"Ф")=strstr(t_perem_sub_type,"Ф") then fl_type = 1
		endif
		if fl_type = 1 then 
			j = j + 1
			naen_type[j] = naen_m[i]
			tdlin_m[j] = dlin_m[i]
			if tdlin_m[j]<EPS then tdlin_m[j] = dlin_per_m[i] - t_perem_min_opir*2
			tvis_m[j] = vis_m[i]
			ttolsh_m[j] = tolsh_m[i]
		endif
	next i
	n_type = j
	j=1 : un_vis[1] = tvis_m[1]
	for i=1 to n_type
		flag = 1
		for k=1 to j
			if un_vis[k] = tvis_m[i] then flag = 0
		next k
		if flag = 1 then
			j = j + 1
			un_vis[j] = tvis_m[i]
		endif
	next i
	j=1 : un_tolsh[1] = ttolsh_m[1]
	for i=1 to n_type
		flag = 1
		for k=1 to j
			if un_tolsh[k] = ttolsh_m[i] then flag = 0
		next k
		if flag = 1 then
			j = j + 1
			un_tolsh[j] = ttolsh_m[i]
		endif
	next i
return

"podbor":
	t_perem_podbor_flag = 0
	min_diff = ac_wallhole_width*3 !Начальное значение
	for i=1 to vardim1(tdlin_m)
		diff = tdlin_m[i]-ac_wallhole_width!-t_perem_min_opir*2
		if (diff-min_diff)<EPS and diff>EPS and (abs(tvis_m[i]-t_perem_hogr)<EPS or t_perem_hogr<EPS) and (abs(ttolsh_m[i]-t_perem_togr)<EPS or t_perem_togr<EPS) then 
			th_less_ = 1
			if th>EPS then
				if ((ttolsh_m[i]-th)>EPS or abs(ttolsh_m[i]-th)<EPS) then
					th_less_ = 0
				else
					t_perem_ = int(th/ttolsh_m[i])
					if ttolsh_m[i]*t_perem_-th<EPS then th_less_ = 0
				endif
			endif
			if th_less_=1 then
				min_diff = diff
				t_perem_podbor_flag = i
			endif
		endif
	next i
return

"get_diam":
	diam_temp = epm1i
	nstolb = 1
	for i = 1 to vardim1(reinforce_class)
		if class = reinforce_class[i] then 
			nstolb = i
			i = vardim1(reinforce_class)
		endif
	next i
	i = 1 : usl = 0
	REPEAT
		if i<=vardim1(reinforce_diam) then
			if reinforce_diam[i][nstolb]>EPS then
				diam_temp[i] = reinforce_diam[i][nstolb]
			else
				usl = 1
			endif
		else
			usl = 1
		endif
		i = i + 1
	UNTIL usl
return

"get_weight":
	nstolb = 1
	for i = 1 to vardim1(reinforce_class)
		if class = reinforce_class[i] then 
			nstolb = i
			i = vardim1(reinforce_class)
		endif
	next i
	nstrok = 1
	for i = 1 to vardim1(reinforce_diam)
		if diam_arm = reinforce_diam[i][nstolb] then 
			nstrok = i
			i = vardim1(reinforce_diam)
		endif
	next i
	if nstrok>EPS and nstolb>EPS then weight = reinforce_weight[nstrok][nstolb]
return
"purge_txt":
    _newStr = ""     ! intialize a new empty string
    _i = 1000        ! creating a "guard" for the while, set the max number of runs
    while _currStr <> "" and _i > 0 do
        _n = STRSTR (_currStr, _charToReplace, 1)   ! check the script for _charToReplace
        if _n > 0 then	
            ! _charToReplace is first found in position _n
            ! add the first part of _currStr to _newStr, plus add _newChar
            _newStr = _newStr + STRSUB (_currStr, 1, _n - 1) + _newChar
            ! get a new _currStr from the chars after position _n
            _currStr = STRSUB (_currStr, _n + 1, STRLEN(_currStr) - _n)	 
        else
            ! if _charToReplace is not found then add _currStr to _newStr
            _newStr = _newStr + _currStr
            ! close the loop with changing _currStr to empty string
            _currStr = ""
        endif
        _i = _i - 1	! decrease the "guard" variable in each run
    endwhile
return
20:

