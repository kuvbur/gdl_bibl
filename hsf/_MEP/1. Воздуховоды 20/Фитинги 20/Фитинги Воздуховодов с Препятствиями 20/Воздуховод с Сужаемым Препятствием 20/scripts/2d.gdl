!-----------2d---------------------if show_el < EPS then endIF gs_detlevel_2D_m < EPS THEN ENDCALL "MEP_m_RequestSystemGlobals" PARAMETERS ALL one_ConID=0 returned_parameters gs_cont_pen, gs_fill_type, gs_fill_pen, gs_back_pen, MEP_cline_type, MEP_cline_pen, show_elPEN gs_cont_penSET FILL gs_fill_typeHptsUnIDBeginForConnEnds = 30000hceID_1 = HptsUnIDBeginForConnEnds+100hceID_2 = HptsUnIDBeginForConnEnds+200			! --- HOTSPOTS --- !unID = 1HOTSPOT2 outCoords[7][1], outCoords[7][2], unID: unID=unID+1IF ABS(MEP_Position[3][3]) > EPS OR ABS(MEP_Position[2][3]) > EPS THEN	SET FILL gs_fill_type	PEN gs_cont_pen	IF gs_fill_pen THEN PEN gs_fill_pen	if not(show_axis) then PROJECT2{3} 3, 270, 3+32, 4, gs_back_pen, 0, 0, 0, PARAMETERS duct_show = 1, MEP_InsShow = 0, cl_show = 0, gs_detlevel_3D_m = 2	PEN gs_cont_pen	if not(show_axis) then PROJECT2{3} 3, 270, 2, 8, 0, 0, 0, 0, PARAMETERS duct_show = 1, MEP_InsShow = 0, cl_show = 0, gs_detlevel_3D_m = 2	IF MEP_InsShow and show_isol and not(show_axis) THEN PROJECT2{3} 3, 270, 2, 8, gs_back_pen, 0, 0, 0, PARAMETERS duct_show = 0, MEP_InsShow = 1, cl_show = 0, gs_detlevel_3D_m = 2	mm = SQR((MEP_Position[2][1])^2+(MEP_Position[2][2])^2)	IF ((MEP_cline_show and show_axis_and) or show_axis) THEN		PEN MEP_cline_pen		SET LINE_TYPE MEP_cline_type		 mm = SQR((MEP_Position[2][1])^2+(MEP_Position[2][2])^2)		LINE2 0, 0, MEP_StraightLength*mm, 0		PEN gs_cont_pen		SET LINE_TYPE 1	ENDIFELSE	ADD2 MEP_Position[1][1], MEP_Position[1][2]	ROT2 dirAng	IF connectedA + connectedB < 1 + EPS THEN		HOTSPOT2 0, 0, hceID_1, MEP_StraightLength, 1+256*(connectedA < EPS)		HOTSPOT2 -1, 0, HptsUnIDBeginForConnEnds, MEP_StraightLength, 3		IF ABS(connectedA) < EPS AND ABS(connectedB - 1) < EPS THEN			hID = hceID_2+1			HOTSPOT2 MEP_StraightLength, offset, hceID_2		ELSE			hID = hceID_2		ENDIF		HOTSPOT2 MEP_StraightLength, 0, hID, MEP_StraightLength, 2+128*connectedB	ELSE		HOTSPOT2 0, 0, hceID_1		HOTSPOT2 MEP_StraightLength, offset, hceID_2	ENDIF			! --- CENTERLINE --- !	IF ((MEP_cline_show and show_axis_and) or show_axis) THEN		PEN MEP_cline_pen		SET LINE_TYPE MEP_cline_type		LINE2 0, 0, MEP_StraightLength, 0		PEN gs_cont_pen		SET LINE_TYPE 1	ENDIF	if show_axis then end	IF flangeA THEN		PUT cutbackA, connectorHalfWidthA, 1		PUT cutbackA, -connectorHalfWidthA, 1		PUT 0, -connectorHalfWidthA, 1		PUT 0, connectorHalfWidthA, 1		POLY2_B NSP/3, 1+2+4+64, gs_fill_pen, gs_back_pen,			GET (NSP)	ENDIF	IF flangeB THEN		PUT MEP_StraightLength-cutbackB, connectorHalfWidthB, 1		PUT MEP_StraightLength-cutbackB, -connectorHalfWidthB, 1		PUT MEP_StraightLength, -connectorHalfWidthB, 1		PUT MEP_StraightLength, connectorHalfWidthB, 1		POLY2_B NSP/3, 1+2+4+64, gs_fill_pen, gs_back_pen,			GET (NSP)	ENDIF	PUT cutbackA*(flangeA), ductHalfWidth, 1	PUT cutbackA*(flangeA), -ductHalfWidth, 1	PUT MEP_StraightLength-cutbackB*(flangeB), -ductHalfWidth, 1	PUT MEP_StraightLength-cutbackB*(flangeB), ductHalfWidth, 1	POLY2_B NSP/3, 1+2+4+64, gs_fill_pen, gs_back_pen,		GET (NSP)			! --- INSULATION --- !	IF MEP_InsShow and show_isol and not(show_axis) THEN 		PEN gs_cont_pen		LINE2 0, ductHalfWidth+MEP_InsThickness, MEP_StraightLength, ductHalfWidth+MEP_InsThickness		LINE2 0, -ductHalfWidth-MEP_InsThickness, MEP_StraightLength, -ductHalfWidth-MEP_InsThickness	ENDIF	DEL 2	PEN gs_cont_pen	FOR i = 8 TO 10 STEP 2		LINE2 outCoords[i][1], outCoords[i][2], outCoords[i+1][1], outCoords[i+1][2]	NEXT iENDIF