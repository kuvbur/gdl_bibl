!-----------Основной---------------------success = LIBRARYGLOBAL ("Libraryflobals-mep", "show_axis", show_axis)success = LIBRARYGLOBAL ("Libraryflobals-mep", "show_axis_and", show_axis_and)success = LIBRARYGLOBAL ("Libraryflobals-mep", "show_isol", show_isol)success = LIBRARYGLOBAL ("Libraryflobals-mep", "show_conventions", show_conventions)success = LIBRARYGLOBAL ("Libraryflobals-mep", "show_size", show_size)success = LIBRARYGLOBAL ("Libraryflobals-mep", "gs_detlevel_2D_m",gs_detlevel_2D_m)success = LIBRARYGLOBAL ("Libraryflobals-mep", "gs_detlevel_3D_m", gs_detlevel_3D_m)call "Показ_систем" PARAMETERS All isMep=1 RETURNED_PARAMETERS show_el, syst_name! Inverted Bucket SteamEPS = 0.0001					! --- HARDCODED AND DERIVED VARIABLES --- !IF dTHeight < MAX(ConWidth_1*2+0.01, 0.11) THEN	dTHeight = MAX(ConWidth_1*2+0.01, 0.11)	PARAMETERS dTHeight = dTHeightENDIFhh = dTHeight/0.40er = 0.05IF dTWidth < MAX(ConWidth_1+0.01, 0.06*hh+er*2) THEN	dTWidth = MAX(ConWidth_1+0.01, 0.06*hh+er*2)	PARAMETERS dTWidth = dTWidthENDIFupperCylindDia = dTWidth+0.06*hh+0.025ww = dTWidth/0.20rr = dTWidth/2rh = MIN(0.03*hh, ConWidth_1/2)IF MEP_StraightLength < dTWidth+2*rh THEN	MEP_StraightLength = dTWidth+2*rh	PARAMETERS MEP_StraightLength = MEP_StraightLengthENDIFIF flip THEN	MEP_Position[2][1] = -MEP_Position[2][1]	MEP_Position[2][2] = -MEP_Position[2][2]	MEP_Position[2][3] = -MEP_Position[2][3]	MEP_Position[3][1] = -MEP_Position[3][1]	MEP_Position[3][2] = -MEP_Position[3][2]	MEP_Position[3][3] = -MEP_Position[3][3]ENDIF						! ---------------- !						! --- Z vector --- !						! ---------------- !dZx = -MEP_Position[3][2]*MEP_Position[2][3]+MEP_Position[3][3]*MEP_Position[2][2]dZy = -MEP_Position[3][3]*MEP_Position[2][1]+MEP_Position[3][1]*MEP_Position[2][3]dZz = -MEP_Position[3][1]*MEP_Position[2][2]+MEP_Position[3][2]*MEP_Position[2][1]					!!! +++ Transformational Matrix +++ !!!DIM tMatrix[3][3]tMatrix[1][1] = MEP_Position[2][1]tMatrix[1][2] = MEP_Position[2][2]tMatrix[1][3] = MEP_Position[2][3]tMatrix[2][1] = MEP_Position[3][1]tMatrix[2][2] = MEP_Position[3][2]tMatrix[2][3] = MEP_Position[3][3]tMatrix[3][1] = dZxtMatrix[3][2] = dZytMatrix[3][3] = dZz					!!! +++ Input Coordinates +++ !!!PUT ConPosX_1-ConLength_1, ConPosY_1, ConPosZ_1PUT gs_Connections[1][4], gs_Connections[1][5], gs_Connections[1][6]PUT gs_Connections[1][7], gs_Connections[1][8], gs_Connections[1][9]PUT ConPosX_2+ConLength_2, ConPosY_2, ConPosZ_2PUT gs_Connections[2][4], gs_Connections[2][5], gs_Connections[2][6]PUT gs_Connections[2][7], gs_Connections[2][8], gs_Connections[2][9]PUT 0, 0, 0PUT -upperCylindDia/2, 0, 0.15*hhPUT upperCylindDia/2, 0, 0.15*hhPUT 0, -upperCylindDia/2, 0.15*hhPUT 0, upperCylindDia/2, 0.15*hhPUT 0, 0, -0.25*hhCoordinates = NSP/3DIM inCoords[20][3]FOR cnum = 1 TO Coordinates	inCoords[cnum][1] = GET(1)	inCoords[cnum][2] = GET(1)	inCoords[cnum][3] = GET(1)NEXT cnum! --- the Matrix Operation, what make the Output-CoordinatesDIM outCoords[20][3]FOR cnum = 1 TO Coordinates	outCoords[cnum][1] = inCoords[cnum][1]*tMatrix[1][1]+inCoords[cnum][2]*tMatrix[2][1]+inCoords[cnum][3]*tMatrix[3][1]+MEP_Position[1][1]	outCoords[cnum][2] = inCoords[cnum][1]*tMatrix[1][2]+inCoords[cnum][2]*tMatrix[2][2]+inCoords[cnum][3]*tMatrix[3][2]+MEP_Position[1][2]	outCoords[cnum][3] = inCoords[cnum][1]*tMatrix[1][3]+inCoords[cnum][2]*tMatrix[2][3]+inCoords[cnum][3]*tMatrix[3][3]+MEP_Position[1][3]NEXT cnumz = 0FOR i = 0 TO MEP_NumberConnections-1	z = z + outCoords[1+3*i][3]NEXT iz = z/MEP_NumberConnectionsPARAMETERS ac_toplevel 		= zPARAMETERS ac_bottomlevel 	= z