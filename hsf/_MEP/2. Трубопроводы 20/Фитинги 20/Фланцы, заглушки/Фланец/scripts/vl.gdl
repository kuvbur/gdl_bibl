values{2} "flange_pressure" iflange_pressure, tflange_pressurevalues{2} "flange_type" iflange_type, tflange_typevalues{2} "flange_subtype" iflange_subtype, tflange_subtypePARAMETERS ac_toplevel	= flange_full_tPARAMETERS ac_bottomlevel	= flange_full_tPARAMETERS A	= flange_dPARAMETERS B 	= flange_dPARAMETERS ZZYZX 	= flange_full_t!!! ------------------- Обработка ошибок ---------------------call "mep_get_dn" parameters all mep_get_dn_dn=flange_dn, mep_get_dn_material_in="" returned_parameters mep_get_dn_dy, mep_get_dn_ves, mep_get_dn_th, mep_get_dn_material_outif mep_get_dn_material_out <> "!!!" then	flange_dy = mep_get_dn_dy	flange_material = mep_get_dn_material_out	parameters flange_dy = flange_dy	parameters flange_material = flange_materialelse	is_error = 1endifif not(haskey(flange_dict_all.is_read)) then	reload_txt = 1else	if flange_dict_all.is_read = 0 then reload_txt = 1endifversion = "" : call "mep_get_version" parameters returned_parameters versionif haskey(flange_dict_all.version) then	if version<>flange_dict_all.version and strlen(version)>0 then reload_txt = 1else	reload_txt = 1endifif reload_txt then	dict mrf2d_readed_param	call "macro_read_file2dict" parameters all mrf2d_read_file = mrf2d_read_file, mrf2d_koeff = mrf2d_koeff returned_parameters mrf2d_readed_param	if haskey(mrf2d_readed_param.is_read) then		if mrf2d_readed_param.is_read then 			flange_dict_all.version = version			parameters flange_dict_all = mrf2d_readed_param		endif	endifendif!!! ------- Вес по условному диаметру, типу и давлению -------!Ищем столбец по давлениюdim tmp_ves_arr[] : tmp_ves_arr[1] = 0if flange_dict_all.file[1].v3[1] = flange_pressure/10 then tmp_ves_arr = flange_dict_all.file[1].v3if flange_dict_all.file[1].v4[1] = flange_pressure/10 then tmp_ves_arr = flange_dict_all.file[1].v4if flange_dict_all.file[1].v5[1] = flange_pressure/10 then tmp_ves_arr = flange_dict_all.file[1].v5if flange_dict_all.file[1].v6[1] = flange_pressure/10 then tmp_ves_arr = flange_dict_all.file[1].v6if flange_dict_all.file[1].v7[1] = flange_pressure/10 then tmp_ves_arr = flange_dict_all.file[1].v7if flange_dict_all.file[1].v8[1] = flange_pressure/10 then tmp_ves_arr = flange_dict_all.file[1].v8if flange_dict_all.file[1].v9[1] = flange_pressure/10 then tmp_ves_arr = flange_dict_all.file[1].v9if flange_dict_all.file[1].v10[1] = flange_pressure/10 then tmp_ves_arr = flange_dict_all.file[1].v10flange_ves = 0for i=2 to vardim1(flange_dict_all.file[1].v1)	if abs(flange_dict_all.file[1].v1[i]-flange_dy)<EPS and abs(flange_dict_all.file[1].v2[i]-flange_type)<EPS then		flange_ves = tmp_ves_arr[i]		i = vardim1(flange_dict_all.file[1].v1)	endifnext iif flange_ves>EPS then 	parameters flange_ves = flange_veselse	endendifflange_fname_inx = 1for i=1 to vardim1(iflange_type)	if iflange_type[i] = flange_type then		flange_fname_inx = i+1		i = vardim1(iflange_type)	endifnext iinx_row = 0for i=2 to vardim1(flange_dict_all.file[flange_fname_inx].v1)	if abs(flange_dict_all.file[flange_fname_inx].v1[i]-flange_dy)<EPS and abs(flange_dict_all.file[flange_fname_inx].v2[i]-flange_pressure/10)<EPS then		inx_row = i		i = vardim1(flange_dict_all.file[flange_fname_inx].v1)	endifnext iif inx_row>0 then	flange_dnf = flange_dict_all.file[flange_fname_inx].v3[inx_row]	flange_t = flange_dict_all.file[flange_fname_inx].v4[inx_row]	flange_d = flange_dict_all.file[flange_fname_inx].v5[inx_row]	flange_dab = flange_dict_all.file[flange_fname_inx].v6[inx_row]	flange_nb = flange_dict_all.file[flange_fname_inx].v7[inx_row]	flange_db = flange_dict_all.file[flange_fname_inx].v8[inx_row]	parameters flange_dnf = flange_dnf, flange_t = flange_t, flange_d = flange_d, flange_dab = flange_dab, flange_nb = flange_nb, flange_db = flange_db	flange_db1 = 0	flange_t1 = 0	flange_db2 = 0	flange_t2 = 0	if flange_type = 2 or flange_type = 11 then		flange_db1 = flange_dict_all.file[flange_fname_inx].v9[inx_row]		flange_t1 = flange_dict_all.file[flange_fname_inx].v10[inx_row]	endif	if flange_type = 11 then		flange_db2 = flange_dict_all.file[flange_fname_inx].v11[inx_row]		flange_t2 = flange_dict_all.file[flange_fname_inx].v12[inx_row]	endif	parameters flange_db1 = flange_db1, flange_t1 = flange_t1, flange_db2 = flange_db2, flange_t2 = flange_t2	is_error = 0else	is_error = 1endifstrmm_num = flange_dy*1000 : gosub "strmm" : flange_dy_ = strmm_txtstrmm_num = flange_pressure/10 : gosub "strmm" : flange_pressure_ = strmm_txtstrmm_num = flange_type : gosub "strmm" : flange_type_ = strmm_txtflange_obozn = "ГОСТ 33259-2015"flange_naen = ""flange_naen = flange_naen + "Фланец "flange_naen = flange_naen + flange_dy_ + "-"flange_naen = flange_naen + flange_pressure_ + "-"flange_naen = flange_naen + flange_type_ + "-"flange_naen = flange_naen + "1-"flange_naen = flange_naen + suffflange_subtype[flange_subtype] + "-"flange_naen = flange_naen + flange_materialFMProductName = "Монтаж фланца "FMProductName = FMProductName + flange_dy_ + "-"FMProductName = FMProductName + flange_pressure_ + "-"FMProductName = FMProductName + flange_type_ + "-"FMProductName = FMProductName + "1-"FMProductName = FMProductName + suffflange_subtype[flange_subtype] + "-"FMProductName = FMProductName + flange_materialparameters flange_obozn = flange_obozn, flange_naen = flange_naenif is_error>EPS then error_msg = error_msg  +  ";Не подобран"PARAMETERS spec_add_param =  error_msgmep_razm = "ø" + str("%.0mm", flange_dy)mep_razm_abs = mep_razmotm_elem = SYMB_POS_Zotm_elem_abs = otm_elemPARAMETERS mep_razm = mep_razm, mep_razm_abs = mep_razm_abs, otm_elem = otm_elem, otm_elem_abs = otm_elem_absmep_type_obor=MEP_TYPE_FLANGEdict mep_type_data : call "mep_common_data" parameters mep_set_type=1 returned_parameters mep_type_datags_list_manufacturer = ""if haskey(mep_type_data.renum) then 	if haskey(mep_type_data.renum[mep_type_obor]) then		gs_list_manufacturer = mep_type_data.renum[mep_type_obor]	endifendifPARAMETERS gs_list_manufacturer = gs_list_manufacturerFMProductName = FMProductName + " (" + flange_obozn + ")"PARAMETERS FM_ProductName = FMProductNameend"strmm":	strth = "%.0"	strmm_txt = ""	if strmm_num>EPS then 		if abs(strmm_num - int(strmm_num))>EPS then strth = "%.1"		strmm_txt = STR(strth, strmm_num)	endifreturn