
! MEP_m_Duct
! Zsolt Feke/2007


RESOL res
PEN gs_cont_pen

IF gs_detlevel_3D = `Откл.` THEN END

HptsUnIDBeginForConnEnds = 30000

hceID_1 = HptsUnIDBeginForConnEnds+100
hceID_2 = HptsUnIDBeginForConnEnds+200

operatedMode = 0
addStatus = 0
IF GLOB_CONTEXT > 40 AND GLOB_CONTEXT < 50 THEN
	operatedMode = 1
	addStatus = 3
ENDIF

IF macroCallin2D AND GLOB_CONTEXT <> 5 AND AC_AutoOnStoryVisibility THEN
	IF ABS(shapeTypeA-shapeTypeB) < EPS OR ABS(ductHalfWidthA-ductHalfWidthB) < EPS OR ABS(ductHalfHeightA-ductHalfHeightB) < EPS THEN
		IF SGN(dz) <> 0 AND SGN(dx) <> 0 OR SGN(dz) <> 0 AND SGN(dy) <> 0 THEN
			Length=SQR(dx^2+dy^2)
			ar = ABS(dz)/MEP_StraightLength
			br = Length/MEP_StraightLength

			IF ABS(shapeTypeA - 2) < EPS THEN
				decreaseLenA = MAX((ductHalfWidthA+MEP_InsThickness)*br*MEP_InsShow, connectorHalfWidthA*br+connectorLengthA*2*ar)
				decreaseLenB = MAX((ductHalfWidthA+MEP_InsThickness)*br*MEP_InsShow, connectorHalfWidthB*br+connectorLengthA*2*ar)
			ELSE
				 IF ABS(MEP_Position[3][3]) > EPS THEN
					ductHalfHeightA_temp 		= ductHalfHeightA
					ductHalfHeightA 			= ductHalfWidthA
					connectorHalfHeightA_temp 	= connectorHalfHeightA
					connectorHalfHeightA 		= connectorHalfWidthA
					connectorHalfHeightB_temp 	= connectorHalfHeightB
					connectorHalfHeightB 		= connectorHalfWidthB
				ENDIF
				decreaseLenA = MAX((ductHalfHeightA+MEP_InsThickness)*br*MEP_InsShow, connectorHalfHeightA*br+connectorLengthA*2*ar)
				decreaseLenB = MAX((ductHalfHeightA+MEP_InsThickness)*br*MEP_InsShow, connectorHalfHeightB*br+connectorLengthA*2*ar)
			ENDIF
			decreaseLen = MAX(decreaseLenA, decreaseLenB)

			dz = ABS(dz)
			dz_temp = dz
			dz = dz - decreaseLen*2

			specCase = 0
			IF dz < EPS THEN specCase = 1

			SYMB_POS_Z_temp = SYMB_POS_Z
			IF rz1 > rz2 THEN
				SYMB_POS_Z 	= SYMB_POS_Z-dz_temp+decreaseLen
			ELSE
				SYMB_POS_Z 	= SYMB_POS_Z+decreaseLen
			ENDIF

			diffZLA = GLOB_CSTORY_ELEV-SYMB_POS_Z		! ha - akkor felette van
			diffZUA = GLOB_CSTORY_ELEV+GLOB_CSTORY_HEIGHT-SYMB_POS_Z ! ha + akkor alatta van

			diffZLB = GLOB_CSTORY_ELEV-SYMB_POS_Z-dz		! ha - akkor felette van
			diffZUB = GLOB_CSTORY_ELEV+GLOB_CSTORY_HEIGHT-SYMB_POS_Z-dz ! ha + akkor alatta van

			IF specCase THEN
				addZL = -diffZLA-decreaseLen*2
				addZU = decreaseLen*2-diffZUB
			ELSE
				IF diffZLA < EPS AND SGN(diffZUA) = 1 THEN addZL = -diffZLA-decreaseLen*2

				IF SGN(diffZLA) = -1 AND diffZUA < EPS THEN addZU = -diffZUA-decreaseLen*2+decreaseLen*nn

				IF SGN(diffZLB) = -1 AND diffZUB > EPS THEN addZU = decreaseLen*2-diffZUB

				IF diffZLB > EPS AND SGN(diffZUB) = 1 THEN addZL = decreaseLen*2-diffZLB
			ENDIF

			SYMB_POS_Z = SYMB_POS_Z_temp
			dz = dz_temp

			ADDz GLOB_CSTORY_ELEV-SYMB_POS_Z+addZL
			CUTPLANE{2} 180, 1
			DEL 1

			ADDz GLOB_CSTORY_ELEV+GLOB_CSTORY_HEIGHT-SYMB_POS_Z+addZU
			CUTPLANE{2} 0, 1
			DEL 1

			IF ABS(MEP_Position[3][3]) > EPS AND ABS(shapeTypeA - 2) > EPS THEN
				ductHalfHeightA 		= ductHalfHeightA_temp
				connectorHalfHeightA 	= connectorHalfHeightA_temp
				connectorHalfHeightB 	= connectorHalfHeightB_temp
			ENDIF
		ENDIF
	ENDIF
ENDIF

IF gs_detlevel_3D = `Простой` THEN
	connectorLengthA = 0
	connectorLengthB = 0
ENDIF


IF duct_show THEN		! -----> duct straight <----- !

	MATERIAL gs_DuctMat

	IF MEP_NumberConnections > 2 AND operatedMode < EPS THEN
		ith = 0
		insul = 0
		GOSUB 400

		GROUP "ductStraight"
	ENDIF

	XFORM   MEP_Position[2][1], MEP_Position[3][1], dZx, MEP_Position[1][1],
			MEP_Position[2][2], MEP_Position[3][2], dZy, MEP_Position[1][2],
			MEP_Position[2][3], MEP_Position[3][3], dZz, MEP_Position[1][3]

	ROTy 90

	alpha_i = 360/res
	cSnum = (res+4)/4

	ADDz connectorLengthA

	ww = ductHalfWidthA: dd = ductHalfHeightA
	rr = ductHalfWidthA*(shapeTypeA < 3)+(MIN(ductHalfWidthA, ductHalfHeightA))*(ABS(shapeTypeA - 3) < EPS)
	yy = 0: zz = 0: mm = 1*(NOT(ABS(shapeTypeA - 1) < EPS AND ABS(shapeTypeA - shapeTypeB) < EPS))
	GOSUB 100+shapeTypeA


	ww = ductHalfWidthB: dd = ductHalfHeightB
	rr = ductHalfWidthB*(shapeTypeB < 3)+(MIN(ductHalfWidthB, ductHalfHeightB))*(ABS(shapeTypeB - 3) < EPS)
	yy = MEP_offset_y: zz = -MEP_offset_z: mm = MEP_StraightLength-connectorLengthA-connectorLengthB
	GOSUB 100+shapeTypeB

	RULED NSP/6, addStatus+4+16+32,

		GET(NSP)

	DEL 3

	IF MEP_NumberConnections > 2 AND operatedMode < EPS THEN
		ENDGROUP
		PLACEGROUP SUBGROUP("ductStraight", "holes")
	ENDIF

	IF ABS(shapeTypeA - 1) > EPS OR ABS(shapeTypeB - 1) > EPS THEN
		XFORM   MEP_Position[2][1], MEP_Position[3][1], dZx, MEP_Position[1][1],
				MEP_Position[2][2], MEP_Position[3][2], dZy, MEP_Position[1][2],
				MEP_Position[2][3], MEP_Position[3][3], dZz, MEP_Position[1][3]
		ROTy 90

		BASE
		VERT    0,    0,    0
		VERT    ductHalfWidthA,    0,    0
		VERT    0,    1,    0
		VERT    0,    0,    1
		COOR    3,    -1,   -2,    -3,    -4

		DEL 2
	ENDIF
	BODY -1
ENDIF


XFORM   MEP_Position[2][1], MEP_Position[3][1], dZx, MEP_Position[1][1],
		MEP_Position[2][2], MEP_Position[3][2], dZy, MEP_Position[1][2],
		MEP_Position[2][3], MEP_Position[3][3], dZz, MEP_Position[1][3]

IF duct_show AND showHtps THEN
	IF editable AND ABS(MEP_offset_y) < EPS AND ABS(MEP_offset_z) < EPS AND connectedA + connectedB < 1 + EPS THEN
		HOTSPOT 0, 0, 0, hceID_1, MEP_StraightLength, 1+256*(connectedA < EPS)
		HOTSPOT -1, 0, 0, HptsUnIDBeginForConnEnds, MEP_StraightLength, 3
		IF ABS(connectedA) < EPS AND ABS(connectedB - 1) < EPS THEN
			hID = hceID_2+1
			IF nonEditHtps THEN
				ROTy 90
				HOTSPOT -MEP_offset_z, MEP_offset_y, MEP_StraightLength, hceID_2
				DEL 1
			ENDIF
		ELSE
			hID = hceID_2
		ENDIF
		HOTSPOT MEP_StraightLength, 0, 0, hID, MEP_StraightLength, 2+128*connectedB
	ELSE
		IF nonEditHtps THEN
			ROTy 90
			HOTSPOT 0, 0, 0, hceID_1
			HOTSPOT -MEP_offset_z, MEP_offset_y, MEP_StraightLength, hceID_2
			DEL 1
		ENDIF
	ENDIF
ENDIF

ROTy 90

IF GLOB_CONTEXT < 41 OR GLOB_CONTEXT > 49 THEN
	IF MEP_cline_show_3D THEN LIN_ 0, 0, 0, -MEP_offset_z, MEP_offset_y, MEP_StraightLength
	IF MEP_StatusLine THEN HOTLINE 0, 0, 0, 0, 0, MEP_StraightLength, 0
ENDIF


IF duct_show THEN		! -----> duct flanges <----- !
	MATERIAL gs_DuctMat

	IF flangeA THEN
		length		= connectorLengthA
		halfWidth 	= ductHalfWidthA
		halfHeight 	= ductHalfHeightA
		halfWidthC 	= connectorHalfWidthA
		halfHeightC = connectorHalfHeightA

		GOSUB 200+shapeTypeA
	ENDIF

	IF flangeB THEN
		length = connectorLengthB
		halfWidth 	= ductHalfWidthB
		halfHeight 	= ductHalfHeightB
		halfWidthC 	= connectorHalfWidthB
		halfHeightC = connectorHalfHeightB

		ADD -MEP_offset_z, MEP_offset_y, MEP_StraightLength-connectorLengthB
			GOSUB 200+shapeTypeB
		DEL 1
	ENDIF
	BODY -1
ENDIF
DEL 2


IF MEP_InsShow THEN			! -----> insulation <----- !
	MATERIAL gs_InsMat

	ductInsHalfWidthA 	= ductHalfWidthA+MEP_InsThickness
	ductInsHalfHeightA 	= ductHalfHeightA+MEP_InsThickness

	ductInsHalfWidthB 	= ductHalfWidthB+MEP_InsThickness
	ductInsHalfHeightB 	= ductHalfHeightB+MEP_InsThickness

	IF MEP_NumberConnections > 2 AND operatedMode < EPS THEN
		ith = MEP_InsThickness
		insul = 1
		GOSUB 400

		GROUP "ductStraightIns"
	ENDIF

	XFORM   MEP_Position[2][1], MEP_Position[3][1], dZx, MEP_Position[1][1],
			MEP_Position[2][2], MEP_Position[3][2], dZy, MEP_Position[1][2],
			MEP_Position[2][3], MEP_Position[3][3], dZz, MEP_Position[1][3]

	ROTy 90

	alpha_i = 360/res
	cSnum = (res+4)/4

	ww = ductInsHalfWidthA: dd = ductInsHalfHeightA
	rr = ductInsHalfWidthA*(shapeTypeA < 3)+(MIN(ductInsHalfWidthA, ductInsHalfHeightA))*(ABS(shapeTypeA - 3) < EPS)
	yy = 0: zz = 0: mm = 1*(NOT(ABS(shapeTypeA - 1) < EPS AND ABS(shapeTypeA - shapeTypeB) < EPS))
	GOSUB 100+shapeTypeA

	ww = ductInsHalfWidthB: dd = ductInsHalfHeightB
	rr = ductInsHalfWidthB*(shapeTypeB < 3)+(MIN(ductInsHalfWidthB, ductInsHalfHeightB))*(ABS(shapeTypeB - 3) < EPS)
	yy = MEP_offset_y: zz = -MEP_offset_z: mm = MEP_StraightLength
	GOSUB 100+shapeTypeB

	RULED NSP/6, addStatus+4+16+32,

		GET(NSP)

	DEL 2

	IF MEP_NumberConnections > 2 AND operatedMode < EPS THEN
		ENDGROUP
		PLACEGROUP SUBGROUP("ductStraightIns", "holesIns")
	ENDIF

	IF ABS(shapeTypeA - 1) > EPS OR ABS(shapeTypeB - 1) > EPS THEN
		XFORM   MEP_Position[2][1], MEP_Position[3][1], dZx, MEP_Position[1][1],
				MEP_Position[2][2], MEP_Position[3][2], dZy, MEP_Position[1][2],
				MEP_Position[2][3], MEP_Position[3][3], dZz, MEP_Position[1][3]
		ROTy 90

		BASE
		VERT    0,    0,    0
		VERT    ductHalfWidthA+MEP_InsThickness,    0,    0
		VERT    0,    1,    0
		VERT    0,    0,    1
		COOR    3,    -1,   -2,    -3,    -4

		DEL 2
	ENDIF
	BODY -1
ENDIF


IF macroCallin2D AND GLOB_CONTEXT <> 5 AND AC_AutoOnStoryVisibility THEN
	IF ABS(shapeTypeA-shapeTypeB) < EPS OR ABS(ductHalfWidthA-ductHalfWidthB) < EPS OR ABS(ductHalfHeightA-ductHalfHeightB) < EPS THEN
		IF SGN(dz) <> 0 AND SGN(dx) <> 0 OR SGN(dz) <> 0 AND SGN(dy) <> 0 THEN
			CUTEND
			CUTEND
		ENDIF
	ENDIF
ENDIF

END

					! ----------------- !
					! -- Rectangular -- !
					! ----------------- !
101:
	IF ABS(shapeTypeA - shapeTypeB) < EPS THEN cSnum = 1

	FOR i = 1 TO cSnum
		PUT dd+zz, ww+yy, mm
	NEXT i

	FOR i = 1 TO cSnum
		PUT -dd+zz, ww+yy, mm
	NEXT i

	FOR i = 1 TO cSnum
		PUT -dd+zz, -ww+yy, mm
	NEXT i

	FOR i = 1 TO cSnum
		PUT dd+zz, -ww+yy, mm
	NEXT i
RETURN

201:
	PRISM_ 10, length,
		halfHeightC, halfWidthC, 15,
		-halfHeightC, halfWidthC, 15,
		-halfHeightC, -halfWidthC, 15,
		halfHeightC, -halfWidthC, 15,
		halfHeightC, halfWidthC, -1,
		halfHeight, halfWidth, 15,
		-halfHeight, halfWidth, 15,
		-halfHeight, -halfWidth, 15,
		halfHeight, -halfWidth, 15,
		halfHeight, halfWidth, -1
RETURN

301:
!!	CUTPOLYA 5, 2, dist,
	PRISM_ 5, dist,
		halfHeight, halfWidth, mm,
		-halfHeight, halfWidth, nn,
		-halfHeight, -halfWidth, mm,
		halfHeight, -halfWidth, nn,
		halfHeight, halfWidth, -1
RETURN


					! ---------------- !
					! --- Circular --- !
					! ---------------- !
102:
	 alpha = 0: kk = 0
	IF ABS(shapeTypeA - 2) > EPS OR ABS(shapeTypeB - 2) > EPS THEN kk = 1
	FOR j = 1 TO 4
		FOR i = 1 TO (res+4*kk)/4
			PUT rr*COS(alpha)+zz, rr*SIN(alpha)+yy, mm
			IF NOT(kk) THEN alpha = alpha + alpha_i
			IF kk THEN alpha = alpha + alpha_i*(NOT(i = cSnum))
		NEXT i
	NEXT j
RETURN

202:
	PRISM_ 4, length,
		0, 0, 979,
		halfWidthC, 360, 4079,
		0, 0, 979,
		halfWidth, 360, 4079
RETURN

302:
!!	CUTPOLYA 2, 2, dist,
	PRISM_ 2, dist,
		0, 0, 908,
		halfWidth, 360, 4008
RETURN


					! ---------------- !
					! ----- Oval ----- !
					! ---------------- !
103:
	IF ww > dd THEN
		 alpha = 0
		FOR j = 1 TO 4
			 dWD = (ww-dd)*(j <= 2)-(ww-dd)*(j > 2)
			FOR i = 1 TO (res+4)/4
				PUT rr*COS(alpha)+zz, rr*SIN(alpha)+yy+dWD, mm
				 alpha = alpha + alpha_i*(NOT(i = cSnum))
			NEXT i
		NEXT j
	ELSE
		 alpha = 0
		FOR j = 1 TO 4
			 dWD = (ww-dd)*(j = 2 OR j = 3 )-(ww-dd)*(j = 1 OR j = 4)
			FOR i = 1 TO (res+4)/4
				PUT rr*COS(alpha)+zz+dWD, rr*SIN(alpha)+yy, mm
				 alpha = alpha + alpha_i*(NOT(i = cSnum))
			NEXT i
		NEXT j
	ENDIF
RETURN

203:
	IF ABS(halfWidth-halfHeight) < EPS THEN
		PRISM_ 4, length,
			0, 0, 979,
			halfWidthC, 360, 4079,
			0, 0, 979,
			halfWidth, 360, 4079
	ENDIF
	IF NOT(ABS(halfWidth-halfHeight) < EPS) AND halfWidth > halfHeight THEN
		rrC = halfHeightC
		rr = halfHeight
		PRISM_ 12, length,
			halfHeightC, -halfWidthC+rrC, 79,
			halfHeightC, halfWidthC-rrC, 79,
			-halfHeightC, halfWidthC-rrC, 1079,
			-halfHeightC, -halfWidthC+rrC, 79,
			halfHeightC, -halfWidthC+rrC, 1079,
			halfHeightC, -halfWidthC+rrC, -1,
			halfHeight, -halfWidth+rr, 79,
			halfHeight, halfWidth-rr, 79,
			-halfHeight, halfWidth-rr, 1079,
			-halfHeight, -halfWidth+rr, 79,
			halfHeight, -halfWidth+rr, 1079,
			halfHeight, -halfWidth+rr, -1
	ENDIF
	IF NOT(ABS(halfWidth-halfHeight) < EPS) AND halfWidth < halfHeight THEN
		rrC = halfWidthC
		rr = halfWidth
		PRISM_ 12, length,
			halfHeightC-rrC, halfWidthC, 79,
			-halfHeightC+rrC, halfWidthC, 79,
			-halfHeightC+rrC, -halfWidthC, 1079,
			halfHeightC-rrC, -halfWidthC, 79,
			halfHeightC-rrC, halfWidthC, 1079,
			halfHeightC-rrC, halfWidthC, -1,
			halfHeight-rr, halfWidth, 79,
			-halfHeight+rr, halfWidth, 79,
			-halfHeight+rr, -halfWidth, 1079,
			halfHeight-rr, -halfWidth, 79,
			halfHeight-rr, halfWidth, 1079,
			halfHeight-rr, halfWidth, -1
	ENDIF
RETURN

303:
	IF ABS(halfWidth-halfHeight) < EPS THEN
!!		CUTPOLYA 2, 2, dist,
		PRISM_ 2, dist,
			0, 0, 908,
			halfWidth, 360, 4008
	ENDIF
	IF NOT(ABS(halfWidth-halfHeight) < EPS) AND halfWidth > halfHeight THEN
		rrC = halfHeightC
		rr = halfHeight
!!		CUTPOLYA 6, 2, dist,
		PRISM_ 6, dist,
			halfHeight, -halfWidth+rr, 8,
			halfHeight, halfWidth-rr, 8,
			-halfHeight, halfWidth-rr, 1008,
			-halfHeight, -halfWidth+rr, 8,
			halfHeight, -halfWidth+rr, 1008,
			halfHeight, -halfWidth+rr, -1
	ENDIF
	IF NOT(ABS(halfWidth-halfHeight) < EPS) AND halfWidth < halfHeight THEN
		rrC = halfWidthC
		rr = halfWidth
!!		CUTPOLYA 6, 2, dist,
		PRISM_ 6, dist,
			halfHeight-rr, halfWidth, 8,
			-halfHeight+rr, halfWidth, 8,
			-halfHeight+rr, -halfWidth, 1008,
			halfHeight-rr, -halfWidth, 8,
			halfHeight-rr, halfWidth, 1008,
			halfHeight-rr, halfWidth, -1
	ENDIF
RETURN

400:
	IF insul < 1 THEN
		GROUP "holes"
	ELSE
		GROUP "holesIns"
	ENDIF

	FOR j = 3 TO MEP_NumberConnections

		halfWidth 	= MEP_NumConnectionData[j][12]/2+MEP_NumConnectionData[j][14]+ith
		halfHeight 	= MEP_NumConnectionData[j][13]/2+MEP_NumConnectionData[j][14]+ith

		DIM tMatrix[][]

		tMatrix[1][1] = MEP_NumConnectionData[j][4]
		tMatrix[1][2] = MEP_NumConnectionData[j][5]
		tMatrix[1][3] = MEP_NumConnectionData[j][6]

		tMatrix[2][1] = MEP_NumConnectionData[j][7]
		tMatrix[2][2] = MEP_NumConnectionData[j][8]
		tMatrix[2][3] = MEP_NumConnectionData[j][9]

		tMatrix[3][1] = -tMatrix[2][2]*tMatrix[1][3]+tMatrix[2][3]*tMatrix[1][2]
		tMatrix[3][2] = -tMatrix[2][3]*tMatrix[1][1]+tMatrix[2][1]*tMatrix[1][3]
		tMatrix[3][3] = -tMatrix[2][1]*tMatrix[1][2]+tMatrix[2][2]*tMatrix[1][1]

		XFORM	tMatrix[1][1], tMatrix[2][1], tMatrix[3][1], MEP_NumConnectionData[j][1],
				tMatrix[1][2], tMatrix[2][2], tMatrix[3][2], MEP_NumConnectionData[j][2],
				tMatrix[1][3], tMatrix[2][3], tMatrix[3][3], MEP_NumConnectionData[j][3]

		mm = 8: nn = 8
		halfWidth 	= halfWidth - 0.00002
		halfHeight 	= halfHeight - 0.00002

		ROTy 90

		ax = MEP_Position[2][1]
		ay = MEP_Position[2][2]
		az = MEP_Position[2][3]

		bx = MEP_NumConnectionData[j][7]
		by = MEP_NumConnectionData[j][8]
		bz = MEP_NumConnectionData[j][9]

		arcVal = (ax*bx + ay*by + az*bz)/((SQR(ax^2+ay^2+az^2))*(SQR(bx^2+by^2+bz^2)))
		IF arcVal < -1 THEN arcVal = -1
		IF arcVal > 1 THEN arcVal = 1
		angY = ACS(arcVal)

		bx = MEP_NumConnectionData[j][4]
		by = MEP_NumConnectionData[j][5]
		bz = MEP_NumConnectionData[j][6]

		arcVal = (ax*bx + ay*by + az*bz)/((SQR(ax^2+ay^2+az^2))*(SQR(bx^2+by^2+bz^2)))
		IF arcVal < -1 THEN arcVal = -1
		IF arcVal > 1 THEN arcVal = 1
		ang = ACS(arcVal)

		IF ABS(MEP_NumConnectionData[1][21] - 2) < EPS THEN
			dist = ductHalfWidthA/SIN(ang)+MEP_NumConnectionData[j][23]
		ELSE
			tMatrix[1][1] = MEP_Position[2][1]
			tMatrix[1][2] = MEP_Position[2][2]
			tMatrix[1][3] = MEP_Position[2][3]

			tMatrix[2][1] = MEP_NumConnectionData[j][4]
			tMatrix[2][2] = MEP_NumConnectionData[j][5]
			tMatrix[2][3] = MEP_NumConnectionData[j][6]

			tMatrix[3][1] = -tMatrix[2][2]*tMatrix[1][3]+tMatrix[2][3]*tMatrix[1][2]
			tMatrix[3][2] = -tMatrix[2][3]*tMatrix[1][1]+tMatrix[2][1]*tMatrix[1][3]
			tMatrix[3][3] = -tMatrix[2][1]*tMatrix[1][2]+tMatrix[2][2]*tMatrix[1][1]

			ax = MEP_Position[3][1]
			ay = MEP_Position[3][2]
			az = MEP_Position[3][3]

			bx = tMatrix[3][1]
			by = tMatrix[3][2]
			bz = tMatrix[3][3]

			ab = ay*bz-az*by - (ax*bz-az*bx) + (ax*by - ay*bx)

			IF ABS(ab) < EPS THEN
				dist = ductHalfHeightA/SIN(ang)+MEP_NumConnectionData[j][23]
			ELSE
				dist = ductHalfWidthA/SIN(ang)+MEP_NumConnectionData[j][23]
			ENDIF
		ENDIF

		ADDz -dist

		ang_temp = ang
		IF ang_temp > 90 AND angY < 90 THEN ang = ang_temp/2
		IF ang_temp < 90 AND angY < 90 THEN ang = ang_temp*2
		IF ABS(ang_temp - 90) < EPS THEN ang = ang_temp

		CUTPLANE 90+ang

		ADDz -dist
		dist = dist*6

		GOSUB 300+MEP_NumConnectionData[j][21]

		CUTEND

		DEL 4
	NEXT j
	ENDGROUP
RETURN
