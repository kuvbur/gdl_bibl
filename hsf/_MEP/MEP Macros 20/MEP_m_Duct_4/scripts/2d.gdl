!-----------2d---------------------if show_el < EPS then endIF gs_detlevel_2D_m < EPS THEN ENDif hide_conventions and show_conventions then endif GLOB_PREVIEW_MODE = 0 and GLOB_FEEDBACK_MODE = 0 and not(calledparam) then CALL "MEP_m_RequestSystemGlobals" PARAMETERS ALL one_ConID=0 returned_parameters gs_cont_pen, gs_fill_type, gs_fill_pen, gs_back_pen, MEP_cline_type, MEP_cline_pen, show_elPEN gs_cont_penIF gs_fill_pen THEN SET FILL gs_fill_typeIF ABS(dx) < EPS THEN dx = 0IF ABS(dy) < EPS THEN dy = 0IF ABS(dz) < EPS THEN dz = 0HptsUnIDBeginForConnEnds = 30000hceID_1 = HptsUnIDBeginForConnEnds+100hceID_2 = HptsUnIDBeginForConnEnds+200!!!================= Настройки видимости по диапазону ======================!!!По умолчанию - вид не в сечении, элемент видимis_sech = 0is_show = 1!!!Абсолютные значения границ видимостиrx1 = MEP_Position[1][1]ry1 = MEP_Position[1][2]rz1 = MEP_Position[1][3]rx2 = rx1+MEP_Position[2][1]*MEP_StraightLengthry2 = ry1+MEP_Position[2][2]*MEP_StraightLengthrz2 = rz1+MEP_Position[2][3]*MEP_StraightLengthdx = rx2-rx1dy = ry2-ry1dz = rz2-rz1flag = 0SYMB_POS_Z_temp = SYMB_POS_ZIF SGN(dz) = 0 then	_MEP_StraightLength = 0endifIF SGN(dx) = 0 AND SGN(dy) = 0 and flag = 0 THEN	_MEP_StraightLength = MEP_StraightLength	IF rz1 > rz2 THEN		SYMB_POS_Z_temp = SYMB_POS_Z		SYMB_POS_Z = SYMB_POS_Z-_MEP_StraightLength	ENDIF	flag = 1endifif flag = 0 then	_MEP_StraightLength = MEP_StraightLength	Length=SQR(dx^2+dy^2)	ar = ABS(dz)/_MEP_StraightLength	br = Length/_MEP_StraightLength	cr = ABS(dz)/Length	IF rz1 > rz2 THEN		SYMB_POS_Z_temp = SYMB_POS_Z		SYMB_POS_Z = SYMB_POS_Z-_MEP_StraightLength	ENDIF	dz_temp = ABS(dz)	dz = ABS(dz)-cutbackA*ar-cutbackB*ar	SYMB_POS_Z_temp = SYMB_POS_Z	SYMB_POS_Z = SYMB_POS_Z+cutbackA*ar	flag = 1endifdown_level = GLOB_CSTORY_ELEV + GLOB_CUTPLANES_INFO[3]+SYMB_POS_Zup_level = GLOB_CSTORY_ELEV + GLOB_CUTPLANES_INFO[2]+SYMB_POS_Z!!Ниже границы видимостиIF down_level - SYMB_POS_Z > EPS then	if (down_level - (SYMB_POS_Z+_MEP_StraightLength)) > EPS THEN !!Закончился до границы		is_show = 0	else			is_sech = 1	endifendif!!Выше границы видимостиIF up_level - SYMB_POS_Z < EPS then	if up_level - (SYMB_POS_Z+_MEP_StraightLength) < EPS THEN !!Закончился до границы		is_show = 0	else		is_sech = 1	endifendifif is_sech then is_show = 1SYMB_POS_Z = SYMB_POS_Z_temp!!!================= Настройки видимости по диапазону ======================IF SGN(dz) = 0 and ((AC_AutoOnStoryVisibility and is_show) or AC_AutoOnStoryVisibility=0) THEN		! -----> the duct in the xy-plane <----- !	offset = 0	IF ABS(MEP_Position[3][3]) < EPS THEN		offset = MEP_offset_y	ELSE		offset = -MEP_offset_z	ENDIF	ADD2 rx1, ry1	ROT2 dirAngOnXYPlane	call "2dLinear_Element" PARAMETERS ALL dirAngOnXYPlane=dirAngOnXYPlane, offset=offset, hide_text = calledparam	IF ABS(MEP_Position[3][3]) < EPS THEN		IF SGN(dZz) = -1 THEN MUL2 1, -1	ELSE		IF SGN(MEP_Position[3][3]) = -1 THEN MUL2 1, -1	ENDIF	IF editable AND ABS(MEP_offset_y) < EPS AND ABS(MEP_offset_z) < EPS AND connectedA + connectedB < 1 + EPS THEN		HOTSPOT2 0, 0, hceID_1, MEP_StraightLength, 1+256*(connectedA < EPS)		HOTSPOT2 -1, 0, HptsUnIDBeginForConnEnds, MEP_StraightLength, 3		IF ABS(connectedA) < EPS AND ABS(connectedB - 1) < EPS THEN			hID = hceID_2+1			HOTSPOT2 MEP_StraightLength, offset, hceID_2		ELSE			hID = hceID_2		ENDIF		HOTSPOT2 MEP_StraightLength, 0, hID, MEP_StraightLength, 2+128*connectedB	ELSE		HOTSPOT2 0, 0, hceID_1		HOTSPOT2 MEP_StraightLength, offset, hceID_2	ENDIF	IF ABS(ABS(MEP_Position[3][3])-1) < EPS AND ABS(shapeTypeA - 2) > EPS THEN		ductHalfWidthA_temp = ductHalfWidthA		ductHalfWidthA = ductHalfHeightA		connectorHalfWidthA_temp = connectorHalfWidthA		connectorHalfWidthA = connectorHalfHeightA	ENDIF	IF ABS(ABS(MEP_Position[3][3])-1) < EPS AND ABS(shapeTypeB - 2) > EPS THEN		ductHalfWidthB_temp = ductHalfWidthB		ductHalfWidthB = ductHalfHeightB		connectorHalfWidthB_temp = connectorHalfWidthB		connectorHalfWidthB = connectorHalfHeightB	ENDIF	IF ABS(MEP_NumConnectionData[1][21] - 1) < EPS AND\			ABS(MEP_NumConnectionData[2][21] - 1) < EPS AND\			ABS(MEP_NumConnectionData[1][12] - MEP_NumConnectionData[2][12]) < EPS AND\			ABS(MEP_NumConnectionData[1][13] - MEP_NumConnectionData[2][13]) < EPS THEN		HOTSPOT2 0, ductHalfWidthA, HptsUnIDBeginForConnEnds+1		HOTSPOT2 0, -ductHalfWidthA, HptsUnIDBeginForConnEnds+2		HOTSPOT2 MEP_StraightLength, offset+ductHalfWidthA, HptsUnIDBeginForConnEnds+3		HOTSPOT2 MEP_StraightLength, offset-ductHalfWidthA, HptsUnIDBeginForConnEnds+4	ENDIF	IF flangeA and not(show_axis) and gs_detlevel_2D_m = 2 THEN		PUT connectorLengthA, ductHalfWidthA, 1		PUT connectorLengthA, connectorHalfWidthA, 1		PUT 0, connectorHalfWidthA, 1		PUT 0, -connectorHalfWidthA, 1		PUT connectorLengthA, -connectorHalfWidthA, 1		PUT connectorLengthA, -ductHalfWidthA, 1		LINE2 connectorLengthA, -ductHalfWidthA, connectorLengthA, ductHalfWidthA	ELSE		PUT 0, ductHalfWidthA, 1		PUT 0, -ductHalfWidthA, 1	ENDIF	IF flangeB and not(show_axis) and gs_detlevel_2D_m = 2 THEN		PUT MEP_StraightLength-connectorLengthB, offset-ductHalfWidthB, 1		PUT MEP_StraightLength-connectorLengthB, offset-connectorHalfWidthB, 1		PUT MEP_StraightLength, offset-connectorHalfWidthB, 1		PUT MEP_StraightLength, offset+connectorHalfWidthB, 1		PUT MEP_StraightLength-connectorLengthB, offset+connectorHalfWidthB, 1		PUT MEP_StraightLength-connectorLengthB, offset+ductHalfWidthB, 1		LINE2 MEP_StraightLength-connectorLengthB, offset-ductHalfWidthB, MEP_StraightLength-connectorLengthB, offset+ductHalfWidthB	ELSE		PUT MEP_StraightLength, offset-ductHalfWidthB, 1		PUT MEP_StraightLength, offset+ductHalfWidthB, 1	ENDIF	if not(show_axis) then POLY2_B NSP/3, 1+2+4+64, gs_fill_pen, gs_back_pen,		GET (NSP)	IF MEP_InsShow and not(show_axis) and show_isol THEN			! -----> insulation <----- !		PEN gs_cont_pen		POLY2_ 5, 1,			0, ductHalfWidthA+MEP_InsThickness, 0,			0, -ductHalfWidthA-MEP_InsThickness, 1,			MEP_StraightLength, offset-ductHalfWidthB-MEP_InsThickness, 0,			MEP_StraightLength, offset+ductHalfWidthB+MEP_InsThickness, 1,			0, ductHalfWidthA+MEP_InsThickness, -1	ENDIF	ENDENDIF		! -----> if it is reducer and there is no in the xy-plane <----- !IF ABS(shapeTypeA-shapeTypeB) > EPS OR ABS(ductHalfWidthA-ductHalfWidthB) > EPS OR ABS(ductHalfHeightA-ductHalfHeightB) > EPS THEN	rx = rx1+MEP_Position[2][1]*MEP_StraightLength+MEP_Position[3][1]*MEP_offset_y+dZx*MEP_offset_z	ry = ry1+MEP_Position[3][2]*MEP_offset_y+MEP_Position[2][2]*MEP_StraightLength+dZy*MEP_offset_z	HOTSPOT2 rx1, ry1, hceID_1	HOTSPOT2 rx, ry, hceID_2	SET FILL gs_fill_type	PEN gs_cont_pen	IF gs_fill_pen THEN PEN gs_fill_pen	if not(show_axis) then PROJECT2{3} 3, 270, 3+32, 4, gs_back_pen, 0, 0, 0, PARAMETERS duct_show = 1, MEP_InsShow = 0, MEP_cline_show_3D = 0, gs_detlevel_3D_m = gs_detlevel_3D_m	PEN gs_cont_pen	if not(show_axis) then PROJECT2{3} 3, 270, 2, 8, 0, 0, 0, 0, PARAMETERS duct_show = 1, MEP_InsShow = 0, MEP_cline_show_3D = 0, gs_detlevel_3D_m = gs_detlevel_3D_m	if not(show_axis) and MEP_InsShow THEN PROJECT2{3} 3, 270, 2, 8, gs_back_pen, 0, 0, 0, PARAMETERS duct_show = 0, MEP_InsShow = 1, MEP_cline_show_3D = 0, gs_detlevel_3D_m = gs_detlevel_3D_m	IF show_axis or show_axis_and THEN		! -----> center line <----- !		PEN MEP_cline_pen		SET LINE_TYPE MEP_cline_type		PROJECT2{3} 3, 270, 3+32, 8, 0, 0, 0, 0, PARAMETERS macroCallin2D = 1, duct_show = 0, MEP_InsShow = 0, MEP_cline_show_3D = 1, gs_detlevel_3D_m = gs_detlevel_3D_m	ENDIF	HOTLINE2 rx1, ry1, rx, ry	ENDENDIFIF rz1 > rz2 THEN	dz = ABS(dz)	SYMB_POS_Z_temp = SYMB_POS_Z	SYMB_POS_Z 		= SYMB_POS_Z-dz	flangeA_temp 	= flangeA	flangeA 		= flangeB	flangeB 		= flangeA_temp	ductHalfWidthA_temp			= ductHalfWidthA	ductHalfWidthA				= ductHalfWidthB	ductHalfWidthB				= ductHalfWidthA_temp	ductHalfHeightA_temp		= ductHalfHeightA	ductHalfHeightA				= ductHalfHeightB	ductHalfHeightB				= ductHalfHeightA_temp	connectorHalfWidthA_temp	= connectorHalfWidthA	connectorHalfWidthA			= connectorHalfWidthB	connectorHalfWidthB			= connectorHalfWidthA_temp	connectorHalfHeightA_temp	= connectorHalfHeightA	connectorHalfHeightA		= connectorHalfHeightB	connectorHalfHeightB		= connectorHalfHeightA_temp	connectedA_temp 			= connectedA	connectedA 					= connectedB	connectedB 					= connectedA_tempENDIFIF SGN(dx) = 0 AND SGN(dy) = 0 THEN		! -----> the duct on the xy-plane <----- !	ADD2 rx1, ry1	ROT2 dirAngOnXYPlane	ins = 0: drawIns = 0	halfWidth 	= ductHalfWidthA	halfHeight 	= ductHalfHeightA	IF GLOB_CONTEXT <> 5 THEN		if is_show or not(AC_AutoOnStoryVisibility) then				GOSUB 40				DRAWINDEX 10				IF flangeA and not(show_axis) THEN					halfWidthC 	= connectorHalfWidthA					halfHeightC = connectorHalfHeightA					GOSUB 20+shapeTypeA				ENDIF				DRAWINDEX 20				IF flangeB and not(show_axis) THEN					halfWidthC 	= connectorHalfWidthB					halfHeightC = connectorHalfHeightB					GOSUB 20+shapeTypeA				ENDIF				DRAWINDEX 30				duct = 1: ins = 0: symbSect = 0				GOSUB 10+shapeTypeA				IF NOT(connectedB) and not(g) THEN					duct = 0: ins = 0: symb = 1					GOSUB 13+shapeTypeA					drawIns = 1				ENDIF		endif!		IF  GLOB_CSTORY_ELEV - SYMB_POS_Z < EPS THEN!			IF (GLOB_CSTORY_ELEV + GLOB_CSTORY_HEIGHT) - (SYMB_POS_Z  + MEP_StraightLength) > -EPS THEN!				GOSUB 40!!				DRAWINDEX 10!				IF flangeA and not(show_axis) THEN!					halfWidthC 	= connectorHalfWidthA!					halfHeightC = connectorHalfHeightA!					GOSUB 20+shapeTypeA!				ENDIF!!				DRAWINDEX 20!				IF flangeB and not(show_axis) THEN!					halfWidthC 	= connectorHalfWidthB!					halfHeightC = connectorHalfHeightB!					GOSUB 20+shapeTypeA!				ENDIF!!				DRAWINDEX 30!				duct = 1: ins = 0: symbSect = 0!				GOSUB 10+shapeTypeA!!				IF NOT(connectedB) and not(g) THEN!					duct = 0: ins = 0: symb = 1!					GOSUB 13+shapeTypeA!					drawIns = 1!				ENDIF!			ENDIF!			IF  GLOB_CSTORY_ELEV + GLOB_CSTORY_HEIGHT > SYMB_POS_Z AND GLOB_CSTORY_ELEV + GLOB_CSTORY_HEIGHT < SYMB_POS_Z + MEP_StraightLength THEN!				GOSUB 40!!				IF flangeA and not(show_axis) THEN!					halfWidthC 	= connectorHalfWidthA!					halfHeightC = connectorHalfHeightA!					GOSUB 20+shapeTypeA!				ENDIF!				PEN SYMB_SECT_PEN!				duct = 1: ins = 0: symb = 0!				GOSUB 10+shapeTypeA!!				duct = 0: ins = 0: symb = 1!				GOSUB 13+shapeTypeA!				drawIns = 1!			ENDIF!		ELSE!			IF GLOB_CSTORY_ELEV + GLOB_CSTORY_HEIGHT < SYMB_POS_Z + MEP_StraightLength THEN!				GOSUB 40!!				PEN SYMB_SECT_PEN!				duct = 1: ins = 0: symb = 0!				GOSUB 10+shapeTypeA!!				duct = 0: ins = 0: symb = 1!				GOSUB 13+shapeTypeA!				drawIns = 1!			ENDIF!			IF GLOB_CSTORY_ELEV < SYMB_POS_Z  + MEP_StraightLength AND (GLOB_CSTORY_ELEV + GLOB_CSTORY_HEIGHT) - (SYMB_POS_Z  + MEP_StraightLength) > -EPS THEN!				GOSUB 40!!				IF flangeB and not(show_axis) THEN!					halfWidthC 	= connectorHalfWidthB!					halfHeightC = connectorHalfHeightB!					GOSUB 20+shapeTypeA!				ENDIF!				duct = 1: ins = 0: symb = 0!				GOSUB 10+shapeTypeA!!				IF NOT(connectedB) THEN!					duct = 0: ins = 0: symb = 1!					GOSUB 13+shapeTypeA!					drawIns = 1!				ENDIF!			ENDIF!		ENDIF	ELSE		GOSUB 40		DRAWINDEX 10		IF flangeA and not(show_axis) THEN			halfWidthC 	= connectorHalfWidthA			halfHeightC = connectorHalfHeightA			GOSUB 20+shapeTypeA		ENDIF		DRAWINDEX 20		IF flangeB and not(show_axis) THEN			halfWidthC 	= connectorHalfWidthB			halfHeightC = connectorHalfHeightB			GOSUB 20+shapeTypeA		ENDIF		DRAWINDEX 30		duct = 1: ins = 0: symbSect = 0		GOSUB 10+shapeTypeA		duct = 0: ins = 0: symb = 1		GOSUB 13+shapeTypeA		drawIns = 1	ENDIF	SYMB_POS_Z = SYMB_POS_Z_temp	IF MEP_InsShow and show_isol and not(show_axis) and not(show_conventions and is_sech) THEN			! -----> insulation <----- !		duct = 0: ins = 1: symb = 0		halfWidth 	= ductHalfWidthA+MEP_InsThickness		halfHeight 	= ductHalfHeightA+MEP_InsThickness		GOSUB 10+shapeTypeA	ENDIF	DEL 2	ENDENDIF							! -----< other positions of the duct >----- !if AC_AutoOnStoryVisibility and is_show=0 THEN end	Length=SQR(dx^2+dy^2)	ar = ABS(dz)/MEP_StraightLength	br = Length/MEP_StraightLength	IF ABS(shapeTypeA - 2) < EPS THEN		decreaseLenA = MAX((ductHalfWidthA+MEP_InsThickness)*br*MEP_InsShow, connectorHalfWidthA*br+connectorLengthA*2*ar)		decreaseLenB = MAX((ductHalfWidthA+MEP_InsThickness)*br*MEP_InsShow, connectorHalfWidthB*br+connectorLengthA*2*ar)	ELSE		decreaseLenA = MAX((ductHalfHeightA+MEP_InsThickness)*br*MEP_InsShow, connectorHalfHeightA*br+connectorLengthA*2*ar)		decreaseLenB = MAX((ductHalfHeightA+MEP_InsThickness)*br*MEP_InsShow, connectorHalfHeightB*br+connectorLengthA*2*ar)	ENDIF	decreaseLen = MAX(decreaseLenA, decreaseLenB)	dz = ABS(dz)	Length=SQR(dx^2+dy^2)	ar = MEP_StraightLength/dz	br = dz/MEP_StraightLength	cr = Length/dz	dz_temp = dz	dz = dz - decreaseLen*2	specCase = 0	IF dz < EPS THEN specCase = 1	is2DSymb = 0	IF GLOB_CSTORY_ELEV+GLOB_CSTORY_HEIGHT > SYMB_POS_Z AND GLOB_CSTORY_ELEV < SYMB_POS_Z+dz_temp AND specCase THEN is2DSymb = 1	IF AC_AutoOnStoryVisibility < 0.5 THEN is2DSymb = 1	SYMB_POS_Z 	= SYMB_POS_Z+decreaseLen	diffZLA = GLOB_CSTORY_ELEV-SYMB_POS_Z						! ha - akkor felette van	diffZUA = GLOB_CSTORY_ELEV+GLOB_CSTORY_HEIGHT-SYMB_POS_Z	! ha + akkor alatta van	diffZLB = GLOB_CSTORY_ELEV-SYMB_POS_Z-dz					! ha - akkor felette van	diffZUB = GLOB_CSTORY_ELEV+GLOB_CSTORY_HEIGHT-SYMB_POS_Z-dz	! ha + akkor alatta vanIF GLOB_CSTORY_ELEV+GLOB_CSTORY_HEIGHT > SYMB_POS_Z AND GLOB_CSTORY_ELEV < SYMB_POS_Z+dz OR is2DSymb THEN	HOTSPOT2 rx1, ry1, hceID_1	HOTSPOT2 rx2, ry2, hceID_2	HOTLINE2 rx1, ry1, rx2, ry2	GOSUB 30	SET FILL gs_fill_type	PEN gs_cont_pen	IF gs_fill_pen THEN PEN gs_fill_pen	if not(show_axis) then PROJECT2{3} 3, 270, 3+32, 4, gs_back_pen, 0, 0, 0, PARAMETERS macroCallin2D = 1, duct_show = 1, MEP_InsShow = 0, MEP_cline_show_3D = 0, gs_detlevel_3D_m = gs_detlevel_3D_m	PEN gs_cont_pen	if not(show_axis) then PROJECT2{3} 3, 270, 2+32, 8, 0, 0, 0, 0, PARAMETERS macroCallin2D = 1, duct_show = 1, MEP_InsShow = 0, MEP_cline_show_3D = 0, gs_detlevel_3D_m = gs_detlevel_3D_m	IF MEP_InsShow and show_isol and not(show_axis) THEN PROJECT2{3} 3, 270, 2+32, 8, 0, 0, 0, 0, PARAMETERS macroCallin2D = 1, duct_show = 0, MEP_InsShow = 1, MEP_cline_show_3D = 0, gs_detlevel_3D_m = gs_detlevel_3D_m	PEN SYMB_SECT_PEN	if not(show_axis) then PROJECT2{3} 3, 270, 2+32, 2, 0, 0, 0, 0, PARAMETERS macroCallin2D = 1, duct_show = 1, MEP_InsShow = 0, MEP_cline_show_3D = 0, gs_detlevel_3D_m = gs_detlevel_3D_m	IF MEP_InsShow and show_isol and not(show_axis) THEN PROJECT2{3} 3, 270, 2+32, 2, 0, 0, 0, 0, PARAMETERS macroCallin2D = 1, duct_show = 0, MEP_InsShow = 1, MEP_cline_show_3D = 0, gs_detlevel_3D_m = gs_detlevel_3D_m	PEN gs_cont_pen	ADD2 rx1, ry1	ROT2 dirAngOnXYPlane	ins = 0: drawIns = 0	halfWidth 	= ductHalfWidthA	halfHeight 	= ductHalfHeightA	IF ABS(shapeTypeA - 2) > EPS AND ABS(dZz) < EPS THEN		halfWidth_temp = halfWidth		halfWidth = halfHeight		halfHeight = halfWidth_temp	ENDIF!!IF diffZLA < EPS AND SGN(diffZUA) = 1 THEN addZL = -diffZLA-decreaseLen*2!!!!IF SGN(diffZLA) = -1 AND diffZUA < EPS THEN addZU = -diffZUA-decreaseLen*2!!!!IF SGN(diffZLB) = -1 AND diffZUB > EPS THEN addZU = decreaseLen*2-diffZUB!!!!IF diffZLB > EPS AND SGN(diffZUB) = 1 THEN addZL = decreaseLen*2-diffZLB!!!!TEXT2 0, -0.75, dz_temp!!TEXT2 3, -0.75, specCase!!!!TEXT2 0, -1.5, dz!!TEXT2 0, -2.25, decreaseLen!!TEXT2 0, -3, diffZLA!!TEXT2 0, -3.75, diffZUA!!TEXT2 0, -4.5, diffZLB!!TEXT2 0, -5.25, diffZUB	IF GLOB_CONTEXT <> 5 AND AC_AutoOnStoryVisibility THEN		IF SGN(diffZLB) = -1 AND diffZUB > EPS OR specCase THEN			ADD2 Length*(rz1 < rz2), 0			MUL2 br, 1			duct = 1: ins = 0: symb = 0			GOSUB 10+shapeTypeA			IF NOT(connectedB) THEN				duct = 0: ins = 0: symb = 1				GOSUB 13+shapeTypeA				drawIns = 1			ENDIF			DEL 2		ELSE			IF rz1 < rz2 THEN  ADD2 (GLOB_CSTORY_ELEV + GLOB_CSTORY_HEIGHT - SYMB_POS_Z + decreaseLen)*cr, 0			IF rz1 > rz2 THEN  ADD2 (-GLOB_CSTORY_ELEV - GLOB_CSTORY_HEIGHT + SYMB_POS_Z + dz + decreaseLen)*cr, 0			MUL2 ar, 1			PEN SYMB_SECT_PEN			duct = 1: ins = 0: symb = 0			GOSUB 10+shapeTypeA			duct = 0: ins = 0: symb = 1			GOSUB 13+shapeTypeA			drawIns = 1			DEL 2		ENDIF	ELSE		ADD2 Length*(rz1 < rz2), 0		MUL2 br, 1		duct = 1: ins = 0: symb = 0		GOSUB 10+shapeTypeA		duct = 0: ins = 0: symb = 1		GOSUB 13+shapeTypeA		drawIns = 1		DEL 2	ENDIF	SYMB_POS_Z = SYMB_POS_Z_temp	dz = dz_temp!!TEXT2 0, -6.00, GLOB_CSTORY_ELEV-SYMB_POS_Z+addZL!!!!TEXT2 0, -6.75, GLOB_CSTORY_ELEV+GLOB_CSTORY_HEIGHT-SYMB_POS_Z+addZU	DEL 2	IF show_axis_and or show_axis THEN		! -----> center line <----- !		PEN MEP_cline_pen		SET LINE_TYPE MEP_cline_type		PROJECT2{3} 3, 270, 3+32, 8, 0, 0, 0, 0, PARAMETERS macroCallin2D = 1, duct_show = 0, MEP_InsShow = 0, MEP_cline_show_3D = 1, gs_detlevel_3D_m = gs_detlevel_3D_m	ENDIFENDIFIF rz1 > rz2 THEN SYMB_POS_Z = SYMB_POS_Z_tempEND10:	if show_conventions and is_sech and show_axis then		pen MEP_cline_pen		POLY2_B 2, 1+2+4+64, MEP_cline_pen, MEP_cline_pen, 0,0,900, 1.5*GLOB_SCALE / 1000,360,4001	endif	if show_axis then		if NSP>0 then ttt = max(get(NSP))		RETURN	endif	IF rotated THEN ROT2 50	IF ins THEN		POLY2_ NSP/3, 5, GET (NSP)	ENDIF	if is_sech then		IF duct THEN			SET FILL GLOB_FILL_INDEX_BACKGROUND			POLY2_B NSP/3, 1+2+4+64, gs_cont_pen, gs_back_pen, GET (NSP)		ENDIF		IF symb THEN			SET FILL GLOB_FILL_INDEX_SOLID			POLY2_B NSP/3, 1+2+4+64, gs_cont_pen, gs_cont_pen, GET (NSP)		ENDIF	else		IF duct THEN			SET FILL GLOB_FILL_INDEX_BACKGROUND			POLY2_B NSP/3, 1+4, gs_cont_pen, gs_back_pen, GET (NSP)		else			if NSP>0 then ttt = max(get(NSP))		ENDIF	endif	IF rotated THEN DEL 1RETURN11:	SET FILL MEP_symb_fill	PUT halfHeight, halfWidth, 1	PUT -halfHeight, halfWidth, 1	PUT -halfHeight, -halfWidth, 1	PUT halfHeight, -halfWidth, 1	GOSUB 10RETURN12:	SET FILL MEP_symb_fill	PUT 0, 0, 901	PUT halfWidth, 360, 4001	GOSUB 10RETURN13:	SET FILL MEP_symb_fill	IF ABS(halfWidth-halfHeight) < EPS THEN		PUT 0, 0, 901		PUT halfWidth, 360, 4001	ENDIF	IF ABS(halfWidth-halfHeight) > EPS AND halfWidth > halfHeight THEN		rr = halfHeight		PUT halfHeight, -halfWidth+rr, 1		PUT halfHeight, halfWidth-rr, 1		PUT -halfHeight, halfWidth-rr, 1001		PUT -halfHeight, -halfWidth+rr, 1		PUT halfHeight, -halfWidth+rr, 1001		PUT halfHeight, -halfWidth+rr, -1	ENDIF	IF ABS(halfWidth-halfHeight) > EPS AND halfWidth < halfHeight THEN		rr = halfWidth		PUT halfHeight-rr, halfWidth, 1		PUT -halfHeight+rr, halfWidth, 1		PUT -halfHeight+rr, -halfWidth, 1001		PUT halfHeight-rr, -halfWidth, 1		PUT halfHeight-rr, halfWidth, 1001		PUT halfHeight-rr, halfWidth, -1	ENDIF	GOSUB 10RETURN14:	SET FILL MEP_symb_fill	PUT halfHeight, halfWidth, 1	PUT -halfHeight, halfWidth, 1	PUT halfHeight*0.75, halfWidth*0.75, 1	PUT halfHeight, -halfWidth, 1	GOSUB 10RETURN15:	SET FILL MEP_symb_fill	alpha = 180-2*ATN(halfWidth/(halfWidth*0.75))	rr = halfWidth/SIN(alpha)	PUT 0, halfWidth, 1	PUT 0, 0, 901	PUT 0, -halfWidth, 3001	PUT -(rr-halfWidth*0.75), 0, 901	PUT 0, halfWidth, 3001	rotated = 1	GOSUB 10	rotated = 0RETURN16:	SET FILL MEP_symb_fill	IF ABS(halfWidth-halfHeight) < EPS THEN		alpha = 180-2*ATN(halfWidth/(halfWidth*0.75))		rr = halfWidth/SIN(alpha)		PUT 0, halfWidth, 1		PUT 0, 0, 901		PUT 0, -halfWidth, 3001		PUT -(rr-halfWidth*0.75), 0, 901		PUT 0, halfWidth, 3001		rotated = 1		GOSUB 10		rotated = 0	ENDIF	IF ABS(halfWidth-halfHeight) > EPS AND halfWidth > halfHeight THEN		rr = halfHeight		iHalfHeight = halfHeight*0.875		iHalfWidth = halfWidth*0.875		irr = iHalfHeight		adxy = (-rr*0.15)/SQR(2)		PUT halfHeight, -halfWidth+rr, 1		PUT halfHeight, halfWidth-rr, 1		PUT -halfHeight, halfWidth-rr, 1001		PUT -halfHeight, -halfWidth+rr, 1		PUT halfHeight, -halfWidth+rr, 1001		PUT halfHeight, -halfWidth+rr, -1		PUT adxy+iHalfHeight, adxy-iHalfWidth+irr, 1		PUT adxy+iHalfHeight, adxy+iHalfWidth-irr, 1		PUT adxy-iHalfHeight, adxy+iHalfWidth-irr, 1001		PUT adxy-iHalfHeight, adxy-iHalfWidth+irr, 1		PUT adxy+iHalfHeight, adxy-iHalfWidth+irr, 1001		PUT adxy+iHalfHeight, adxy-iHalfWidth+irr, -1		GOSUB 10	ENDIF	IF ABS(halfWidth-halfHeight) > EPS AND halfWidth < halfHeight THEN		rr = halfWidth		iHalfHeight = halfHeight*0.875		iHalfWidth = halfWidth*0.875		irr = iHalfWidth		adxy = (-rr*0.15)/SQR(2)		alpha = 180-2*ATN(halfWidth/(halfWidth*0.75))		rrr = halfWidth/SIN(alpha)		PUT halfHeight-rr+rr*COS(45), -rr*SIN(45), 1		PUT halfHeight-rr, 0, 901		PUT 0, 135, 4001		PUT -halfHeight+rr, rr, 1		PUT -halfHeight+rr-rr*SIN(60), rr*COS(60), 1001		distX = (halfHeight-rr+rr*SIN(60)) - (halfHeight-rr)		distY = rr-(rr-rr*COS(60))*0.40 - rr*COS(60)		alpha = 180-2*ATN(distX/distY)		rrr = distX/SIN(alpha)		PUT -halfHeight+rr, rr-(rr-rr*COS(60))*0.40-rrr, 901		PUT -halfHeight+rr, rr-(rr-rr*COS(60))*0.40, 3001		PUT halfHeight-rr, rr-(rr-rr*COS(60))*0.40, 1		PUT halfHeight-rr+rr*COS(45), -rr*SIN(45), 1001		GOSUB 10	ENDIFRETURN21:	IF gs_fill_pen THEN SET FILL gs_fill_type	PUT halfHeightC, halfWidthC, 1	PUT -halfHeightC, halfWidthC, 1	PUT -halfHeightC, -halfWidthC, 1	PUT halfHeightC, -halfWidthC, 1	PUT halfHeightC, halfWidthC, -1	PUT halfHeight, halfWidth, 1	PUT -halfHeight, halfWidth, 1	PUT -halfHeight, -halfWidth, 1	PUT halfHeight, -halfWidth, 1	PUT halfHeight, halfWidth, -1	POLY2_B NSP/3, 1+2+4+64, gs_fill_pen, gs_back_pen,		GET (NSP)RETURN22:	IF gs_fill_pen THEN SET FILL gs_fill_type		PUT 0, 0, 901		PUT halfWidthC, 360, 4001		PUT 0, 0, 900		PUT halfWidth, 360, 4000	POLY2_B NSP/3, 1+2+4+64, gs_fill_pen, gs_back_pen,		GET (NSP)RETURN23:	IF gs_fill_pen THEN SET FILL gs_fill_type	IF ABS(halfWidth-halfHeight) < EPS THEN		PUT 0, 0, 901		PUT halfWidthC, 360, 4001		PUT 0, 0, 900		PUT halfWidth, 360, 4000	ENDIF	IF ABS(halfWidth-halfHeight) > EPS AND halfWidth > halfHeight THEN		rrC = halfHeightC		rr = halfHeight		PUT halfHeightC, -halfWidthC+rrC, 1		PUT halfHeightC, halfWidthC-rrC, 1		PUT -halfHeightC, halfWidthC-rrC, 1001		PUT -halfHeightC, -halfWidthC+rrC, 1		PUT halfHeightC, -halfWidthC+rrC, 1001		PUT halfHeight, -halfWidthC+rrC, -1		PUT halfHeight, -halfWidth+rr, 1		PUT halfHeight, halfWidth-rr, 1		PUT -halfHeight, halfWidth-rr, 1001		PUT -halfHeight, -halfWidth+rr, 1		PUT halfHeight, -halfWidth+rr, 1001		PUT halfHeight, -halfWidth+rr, -1	ENDIF	IF ABS(halfWidth-halfHeight) > EPS AND halfWidth < halfHeight THEN		rrC = halfWidthC		rr = halfWidth		PUT halfHeightC-rrC, halfWidthC, 1		PUT -halfHeightC+rrC, halfWidthC, 1		PUT -halfHeightC+rrC, -halfWidthC, 1001		PUT halfHeightC-rrC, -halfWidthC, 1		PUT halfHeightC-rrC, halfWidthC, 1001		PUT halfHeightC-rrC, halfWidthC, -1		PUT halfHeight-rr, halfWidth, 1		PUT -halfHeight+rr, halfWidth, 1		PUT -halfHeight+rr, -halfWidth, 1001		PUT halfHeight-rr, -halfWidth, 1		PUT halfHeight-rr, halfWidth, 1001		PUT halfHeight-rr, halfWidth, -1	ENDIF	POLY2_B NSP/3, 1+2+4+64, gs_fill_pen, gs_back_pen,		GET (NSP)RETURN30:	IF ABS(MEP_NumConnectionData[1][21] - 1) < EPS THEN		! --- Building of Transformational Matrix		DIM MatrixT[3][3]		MatrixT[1][1] = MEP_Position[2][1]		MatrixT[1][2] = MEP_Position[2][2]		MatrixT[1][3] = MEP_Position[2][3]		MatrixT[2][1] = MEP_Position[3][1]		MatrixT[2][2] = MEP_Position[3][2]		MatrixT[2][3] = MEP_Position[3][3]		MatrixT[3][1] = -MEP_Position[3][2]*MEP_Position[2][3]+MEP_Position[3][3]*MEP_Position[2][2]		MatrixT[3][2] = -MEP_Position[3][3]*MEP_Position[2][1]+MEP_Position[3][1]*MEP_Position[2][3]		MatrixT[3][3] = -MEP_Position[3][1]*MEP_Position[2][2]+MEP_Position[3][2]*MEP_Position[2][1]		ductHalfWidthToHtps = MEP_NumConnectionData[1][12]/2+MEP_NumConnectionData[1][14]		ductHalfHeightToHtps = MEP_NumConnectionData[1][13]/2+MEP_NumConnectionData[1][14]		! --- Input Coordinates		PUT 0, ductHalfWidthToHtps, ductHalfHeightToHtps		PUT 0, -ductHalfWidthToHtps, ductHalfHeightToHtps		PUT 0, -ductHalfWidthToHtps, -ductHalfHeightToHtps		PUT 0, ductHalfWidthToHtps, -ductHalfHeightToHtps		PUT MEP_StraightLength, ductHalfWidthToHtps, ductHalfHeightToHtps		PUT MEP_StraightLength, -ductHalfWidthToHtps, ductHalfHeightToHtps		PUT MEP_StraightLength, -ductHalfWidthToHtps, -ductHalfHeightToHtps		PUT MEP_StraightLength, ductHalfWidthToHtps, -ductHalfHeightToHtps		Coordinates = NSP/3		DIM inCoords[20][3]		FOR cnum = 1 TO Coordinates			inCoords[cnum][1] = GET(1)			inCoords[cnum][2] = GET(1)			inCoords[cnum][3] = GET(1)		NEXT cnum		! --- the Matrix Operation, what make the Output-Coordinates		DIM outCoords[20][3]		FOR cnum = 1 TO Coordinates			outCoords[cnum][1] = inCoords[cnum][1]*MatrixT[1][1]+inCoords[cnum][2]*MatrixT[2][1]+inCoords[cnum][3]*MatrixT[3][1]			outCoords[cnum][2] = inCoords[cnum][1]*MatrixT[1][2]+inCoords[cnum][2]*MatrixT[2][2]+inCoords[cnum][3]*MatrixT[3][2]			outCoords[cnum][3] = inCoords[cnum][1]*MatrixT[1][3]+inCoords[cnum][2]*MatrixT[2][3]+inCoords[cnum][3]*MatrixT[3][3]		NEXT cnum		unID = 1		FOR i = 1 TO 8			HOTSPOT2 outCoords[i][1], outCoords[i][2], HptsUnIDBeginForConnEnds+unID: unID=unID+1		NEXT i	ENDIFRETURN40:	HOTSPOT2 0, 0, hceID_1	HOTSPOT2 halfHeight, halfWidth, HptsUnIDBeginForConnEnds+1	HOTSPOT2 -halfHeight, halfWidth, HptsUnIDBeginForConnEnds+2	HOTSPOT2 halfHeight, -halfWidth, HptsUnIDBeginForConnEnds+3	HOTSPOT2 -halfHeight, -halfWidth, HptsUnIDBeginForConnEnds+4RETURN