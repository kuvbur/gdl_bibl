!-----------2d---------------------if show_el < EPS then endIF gs_detlevel_2D_m < EPS THEN ENDif hide_conventions and show_conventions then endif GLOB_PREVIEW_MODE = 0 and GLOB_FEEDBACK_MODE = 0 and not(calledparam) then CALL "MEP_m_RequestSystemGlobals" PARAMETERS ALL one_ConID=0 returned_parameters gs_cont_pen, gs_fill_type, gs_fill_pen, gs_back_pen, MEP_cline_type, MEP_cline_pen, show_elPEN gs_cont_penIF gs_fill_pen THEN SET FILL gs_fill_typeHptsUnIDBeginForConnEnds = 30000hceID_1 = HptsUnIDBeginForConnEnds+100hceID_2 = HptsUnIDBeginForConnEnds+200!!!================= Настройки видимости по диапазону ======================!!!По умолчанию - вид не в сечении, элемент видимis_sech = 0is_show = 1!!!Абсолютные значения границ видимостиrx1 = MEP_Position[1][1]ry1 = MEP_Position[1][2]rz1 = MEP_Position[1][3]rx2 = rx1+MEP_Position[2][1]*MEP_StraightLengthry2 = ry1+MEP_Position[2][2]*MEP_StraightLengthrz2 = rz1+MEP_Position[2][3]*MEP_StraightLengthdx = rx2-rx1dy = ry2-ry1dz = rz2-rz1flag = 0SYMB_POS_Z_temp = SYMB_POS_Z_MEP_StraightLength = 0IF SGN(dz) = 0 then	_MEP_StraightLength = 0endifIF SGN(dx) = 0 AND SGN(dy) = 0 and flag = 0 THEN	_MEP_StraightLength = MEP_StraightLength	IF rz1 > rz2 THEN		SYMB_POS_Z_temp = SYMB_POS_Z		SYMB_POS_Z = SYMB_POS_Z-_MEP_StraightLength	ENDIF	flag = 1endifif flag = 0 then	_MEP_StraightLength = MEP_StraightLength	Length=SQR(dx^2+dy^2)	ar = ABS(dz)/_MEP_StraightLength	br = Length/_MEP_StraightLength	cr = ABS(dz)/Length	IF rz1 > rz2 THEN		SYMB_POS_Z_temp = SYMB_POS_Z		SYMB_POS_Z = SYMB_POS_Z-_MEP_StraightLength	ENDIF	dz_temp = ABS(dz)	dz = ABS(dz)-cutbackA*ar-cutbackB*ar	SYMB_POS_Z_temp = SYMB_POS_Z	SYMB_POS_Z = SYMB_POS_Z+cutbackA*ar	flag = 1endifdown_level = GLOB_CSTORY_ELEV + GLOB_CUTPLANES_INFO[3]+SYMB_POS_Zup_level = GLOB_CSTORY_ELEV + GLOB_CUTPLANES_INFO[2]+SYMB_POS_Z!!Ниже границы видимостиIF down_level - SYMB_POS_Z > EPS then	if (down_level - (SYMB_POS_Z+_MEP_StraightLength)) > EPS THEN !!Закончился до границы		is_show = 0	else			is_sech = 1	endifendif!!Выше границы видимостиIF up_level - SYMB_POS_Z < EPS then	if up_level - (SYMB_POS_Z+_MEP_StraightLength) < EPS THEN !!Закончился до границы		is_show = 0	else		is_sech = 1	endifendifif is_sech then is_show = 1SYMB_POS_Z = SYMB_POS_Z_temp!!!================= Настройки видимости по диапазону ======================IF ABS(dx) < EPS THEN dx = 0IF ABS(dy) < EPS THEN dy = 0IF ABS(dz) < EPS THEN dz = 0IF SGN(dz) = 0 and ((AC_AutoOnStoryVisibility and is_show) or AC_AutoOnStoryVisibility=0) THEN		! -----> the pipe in the xy-plane <----- !	ADD2 rx1, ry1	ROT2 dirAngOnXYPlane	IF ABS(MEP_Position[3][3]) < EPS THEN		offset = MEP_offset_y		IF SGN(dZz) = -1 THEN MUL2 1, -1	ELSE		offset = -MEP_offset_z		IF SGN(MEP_Position[3][3]) = -1 THEN MUL2 1, -1	ENDIF	call "2dLinear_Element" PARAMETERS ALL dirAngOnXYPlane=dirAngOnXYPlane, offset=offset, cutbackCLA=cutbackCLA, cutbackCLB=cutbackCLB, hide_text = calledparam	IF editable AND ABS(MEP_offset_y) < EPS AND ABS(MEP_offset_z) < EPS AND connectedA + connectedB < 1 + EPS THEN		HOTSPOT2 0, 0, hceID_1, MEP_StraightLength, 1+256*(connectedA < EPS)		HOTSPOT2 -1, 0, HptsUnIDBeginForConnEnds, MEP_StraightLength, 3		IF ABS(connectedA) < EPS AND ABS(connectedB - 1) < EPS THEN			hID = hceID_2+1			HOTSPOT2 MEP_StraightLength, offset, hceID_2		ELSE			hID = hceID_2		ENDIF		HOTSPOT2 MEP_StraightLength, 0, hID, MEP_StraightLength, 2+128*connectedB	ELSE		HOTSPOT2 0, 0, hceID_1		HOTSPOT2 MEP_StraightLength, offset, hceID_2	ENDIF	pipeRadiusA = pipeDiameterA/2	connectorRadiusA = connectorDiameterA/2	pipeRadiusB = pipeDiameterB/2	connectorRadiusB = connectorDiameterB/2	IF flangeA and not(show_axis) and flangeout1<EPS THEN		PUT connectorWidthA, pipeRadiusA, 1		PUT connectorWidthA, connectorRadiusA, 1		PUT 0, connectorRadiusA, 1		PUT 0, -connectorRadiusA, 1		PUT connectorWidthA, -connectorRadiusA, 1		PUT connectorWidthA, -pipeRadiusA, 1		LINE2 connectorWidthA, -pipeRadiusA, connectorWidthA, pipeRadiusA	ELSE		IF flangeout1>EPS and not(show_axis) THEN			PUT cutbackA, pipeRadiusA, 1			PUT cutbackA, pipeRadiusA+flangeth1, 1			PUT -flangeout1+cutbackA, pipeRadiusA+flangeth1, 1			PUT -flangeout1+cutbackA, -pipeRadiusA-flangeth1, 1			PUT cutbackA, -pipeRadiusA-flangeth1, 1			PUT cutbackA, -pipeRadiusA, 1			LINE2 cutbackA, -pipeRadiusA-flangeth1, cutbackA, pipeRadiusA+flangeth1			hotspot2 -flangeout1+cutbackA, pipeRadiusA+flangeth1			hotspot2 -flangeout1+cutbackA, -pipeRadiusA-flangeth1		else			PUT cutbackA, pipeRadiusA, 1			PUT cutbackA, -pipeRadiusA, 1		endif	ENDIF	HOTSPOT2 0, pipeRadiusA	HOTSPOT2 0, -pipeRadiusA	HOTSPOT2 MEP_StraightLength, offset+pipeRadiusB	HOTSPOT2 MEP_StraightLength, offset-pipeRadiusB	HOTLINE2 0, pipeRadiusA,  MEP_StraightLength, offset+pipeRadiusB	HOTLINE2 0, -pipeRadiusA,  MEP_StraightLength, offset-pipeRadiusB	IF flangeB and not(show_axis) and flangeout2<EPS THEN		PUT MEP_StraightLength-connectorWidthB, offset-pipeRadiusB, 1		PUT MEP_StraightLength-connectorWidthB, offset-connectorRadiusB, 1		PUT MEP_StraightLength, offset-connectorRadiusB, 1		PUT MEP_StraightLength, offset+connectorRadiusB, 1		PUT MEP_StraightLength-connectorWidthB, offset+connectorRadiusB, 1		PUT MEP_StraightLength-connectorWidthB, offset+pipeRadiusB, 1		LINE2 MEP_StraightLength-connectorWidthB, offset-pipeRadiusB, MEP_StraightLength-connectorWidthB, offset+pipeRadiusB	ELSE		IF flangeout2>EPS and not(show_axis) THEN			PUT MEP_StraightLength-cutbackB, offset-pipeRadiusB, 1			PUT MEP_StraightLength-cutbackB, offset-pipeRadiusB-flangeth1, 1			PUT MEP_StraightLength-cutbackB+flangeout2, offset-pipeRadiusB-flangeth1, 1			PUT MEP_StraightLength-cutbackB+flangeout2, offset+pipeRadiusB+flangeth1, 1			PUT MEP_StraightLength-cutbackB, offset+pipeRadiusB+flangeth1, 1			PUT MEP_StraightLength-cutbackB, offset+pipeRadiusB, 1			LINE2 MEP_StraightLength-cutbackB, offset-pipeRadiusB-flangeth1, MEP_StraightLength-cutbackB, offset+pipeRadiusB+flangeth1			hotspot2 MEP_StraightLength-cutbackB+flangeout2, offset-pipeRadiusB-flangeth1			hotspot2 MEP_StraightLength-cutbackB+flangeout2, offset+pipeRadiusB+flangeth1		else			PUT MEP_StraightLength-cutbackB, offset-pipeRadiusB, 1			PUT MEP_StraightLength-cutbackB, offset+pipeRadiusB, 1		endif	ENDIF	if not(show_axis) then POLY2_B NSP/3, 1+2+4+64, gs_fill_pen, gs_back_pen, GET (NSP)	IF MEP_InsShow and show_isol and not(show_axis) THEN			! -----> insulation <----- !		PEN gs_cont_pen		IF ABS(pipeDiameterA-pipeDiameterB) < EPS THEN			POLY2_ 5, 1,				cutbackIA, pipeRadiusA+MEP_InsThickness, 0,				cutbackIA, -pipeRadiusA-MEP_InsThickness, 1,				MEP_StraightLength-cutbackIB, offset-pipeRadiusB-MEP_InsThickness, 0,				MEP_StraightLength-cutbackIB, offset+pipeRadiusB+MEP_InsThickness, 1,				cutbackIA, pipeRadiusA+MEP_InsThickness, -1		ELSE			IF flangeA THEN				POLY2_ 5, 1,					0, pipeRadiusA+MEP_InsThickness, 0,					0, -pipeRadiusA-MEP_InsThickness, 1,					connectorWidthA, -pipeRadiusA-MEP_InsThickness, 0,					connectorWidthA, pipeRadiusA+MEP_InsThickness, 1,					0, pipeRadiusA+MEP_InsThickness, -1			ENDIF			POLY2_ 5, 1,				connectorWidthA, pipeRadiusA+MEP_InsThickness, 0,				connectorWidthA, -pipeRadiusA-MEP_InsThickness, 1,				MEP_StraightLength-connectorWidthB, offset-pipeRadiusB-MEP_InsThickness, 0,				MEP_StraightLength-connectorWidthB, offset+pipeRadiusB+MEP_InsThickness, 1,				connectorWidthA, pipeRadiusA+MEP_InsThickness, -1			IF flangeB THEN				POLY2_ 5, 1,					MEP_StraightLength, offset+pipeRadiusB+MEP_InsThickness, 0,					MEP_StraightLength, offset-pipeRadiusB-MEP_InsThickness, 1,					MEP_StraightLength-connectorWidthB, offset-pipeRadiusB-MEP_InsThickness, 0,					MEP_StraightLength-connectorWidthB, offset+pipeRadiusB+MEP_InsThickness, 1,					MEP_StraightLength, offset+pipeRadiusB+MEP_InsThickness, -1			ENDIF		ENDIF	ENDIF	ENDENDIF		! -----> if it is reducer and there is no in the xy-plane <----- !IF ABS(pipeDiameterA-pipeDiameterB) > EPS THEN	rx = rx1+MEP_Position[2][1]*MEP_StraightLength+MEP_Position[3][1]*MEP_offset_y+dZx*MEP_offset_z	ry = ry1+MEP_Position[3][2]*MEP_offset_y+MEP_Position[2][2]*MEP_StraightLength+dZy*MEP_offset_z	HOTSPOT2 rx1, ry1, hceID_1	HOTSPOT2 rx, ry, hceID_2	SET FILL gs_fill_type	PEN gs_cont_pen	IF gs_fill_pen THEN PEN gs_fill_pen	if not(show_axis) then PROJECT2{3} 3, 270, 3+32, 4, gs_back_pen, 0, 0, 0, PARAMETERS pipe_show = 1, MEP_InsShow = 0, MEP_cline_show_3D = 0, gs_detlevel_3D_m = gs_detlevel_2D_m	PEN gs_cont_pen	if not(show_axis) then PROJECT2{3} 3, 270, 2, 8, 0, 0, 0, 0, PARAMETERS pipe_show = 1, MEP_InsShow = 0, MEP_cline_show_3D = 0, gs_detlevel_3D_m = gs_detlevel_2D_m	IF MEP_InsShow and show_isol and not(show_axis) THEN PROJECT2{3} 3, 270, 2, 8, gs_back_pen, 0, 0, 0, PARAMETERS duct_show = 0, MEP_InsShow = 1, MEP_cline_show_3D = 0, gs_detlevel_3D_m = gs_detlevel_2D_m	IF ((MEP_cline_show and show_axis_and) or show_axis) THEN		! -----> center line <----- !		PEN MEP_cline_pen		SET LINE_TYPE MEP_cline_type		PROJECT2{3} 3, 270, 3+32, 8, 0, 0, 0, 0, PARAMETERS macroCallin2D = 1, pipe_show = 0, MEP_InsShow = 0, MEP_cline_show_3D = 1, gs_detlevel_3D_m = gs_detlevel_2D_m	ENDIF	HOTLINE2 rx1, ry1, rx, ry	ENDENDIFIF SGN(dx) = 0 AND SGN(dy) = 0 THEN		! -----> the pipe on the xy-plane <----- !	ADD2 rx1, ry1	ROT2 dirAngOnXYPlane	pipeRadiusA = pipeDiameterA/2	connectorRadiusA = connectorDiameterA/2	pipeRadiusB = pipeDiameterB/2	connectorRadiusB = connectorDiameterB/2	HOTSPOT2 0, 0, hceID_2	IF rz1 > rz2 THEN		SYMB_POS_Z_temp = SYMB_POS_Z		SYMB_POS_Z = SYMB_POS_Z-MEP_StraightLength		flangeA_temp = flangeA		flangeA = flangeB		flangeB = flangeA_temp		connectorDiameterA_temp = connectorDiameterA		connectorDiameterA = connectorDiameterB		connectorDiameterB = connectorDiameterA_temp		pipeDiameterA_temp = pipeDiameterA		pipeDiameterA = pipeDiameterB		pipeDiameterB = pipeDiameterA_temp		connectedA_temp 			= connectedA		connectedA 					= connectedB		connectedB 					= connectedA_temp	ENDIF	drawIns = 0	IF GLOB_CONTEXT <> 5 THEN		DRAWINDEX 10		IF flangeA THEN GOSUB 20		DRAWINDEX 20		IF flangeB THEN GOSUB 30		DRAWINDEX 30		SYMB_SECT_PEN = gs_cont_pen		GOSUB 10		drawIns = 1	ELSE		connectedB = 0		DRAWINDEX 10		IF flangeA THEN GOSUB 20		DRAWINDEX 20		IF flangeB THEN GOSUB 30		DRAWINDEX 30		SYMB_SECT_PEN = gs_cont_pen		GOSUB 10		drawIns = 1	ENDIF	SYMB_POS_Z = SYMB_POS_Z_temp	IF MEP_InsShow and show_isol and not(show_axis) and not(show_conventions and is_sech) THEN			! -----> insulation <----- !		CIRCLE2 0, 0, pipeRadiusA+MEP_InsThickness	ENDIF	DEL 2	ENDENDIF							! -----< other positions of the pipe >----- !Length=SQR(dx^2+dy^2)ar = ABS(dz)/MEP_StraightLengthbr = Length/MEP_StraightLengthcr = ABS(dz)/LengthIF rz1 > rz2 THEN	SYMB_POS_Z_temp = SYMB_POS_Z	SYMB_POS_Z = SYMB_POS_Z-ABS(dz)	flangeA_temp = flangeA	flangeA = flangeB	flangeB = flangeA_temp	connectorDiameterA_temp = connectorDiameterA	connectorDiameterA = connectorDiameterB	connectorDiameterB = connectorDiameterA_temp	pipeDiameterA_temp = pipeDiameterA	pipeDiameterA = pipeDiameterB	pipeDiameterB = pipeDiameterA_temp	connectorWidthA_temp = connectorWidthA	connectorWidthA = connectorWidthB	connectorWidthB = connectorWidthA_temp	cutbackA_temp = cutbackA	cutbackA = cutbackB	cutbackB = cutbackA_temp	connectedA_temp 			= connectedA	connectedA 					= connectedB	connectedB 					= connectedA_tempENDIFpipeRadiusA = pipeDiameterA/2pipeRadiusB = pipeDiameterB/2decreaseLenA = MAX((pipeRadiusA+MEP_InsThickness)*br*MEP_InsShow, (connectorDiameterA*br+connectorWidthA*ar)*flangeA, pipeRadiusA*br)decreaseLenB = MAX((pipeRadiusA+MEP_InsThickness)*br*MEP_InsShow, (connectorDiameterB*br+connectorWidthB*ar)*flangeB, pipeRadiusB*br)dzForSpecCase = ABS(dz) - decreaseLenA - decreaseLenBspecCase = 0IF dzForSpecCase < EPS OR AC_AutoOnStoryVisibility < 0.5 THEN specCase = 1dz_temp = ABS(dz)dz = ABS(dz)-cutbackA*ar-cutbackB*arSYMB_POS_Z_temp = SYMB_POS_ZSYMB_POS_Z = SYMB_POS_Z+cutbackA*arHOTLINE2 rx1, ry1, rx2, ry2ADD2 rx1, ry1ROT2 dirAngOnXYPlaneIF rz1 > rz2 THEN	ADD2 Length, 0	MUL2 -1, 1ENDIFHOTSPOT2 0, 0, hceID_1HOTSPOT2 Length, 0, hceID_2	IF GLOB_CSTORY_ELEV - SYMB_POS_Z < EPS OR GLOB_CONTEXT = 5 OR specCase THEN		IF (GLOB_CSTORY_ELEV + GLOB_CSTORY_HEIGHT) - (SYMB_POS_Z  + dz) > -EPS OR GLOB_CONTEXT = 5 OR specCase THEN!!			TEXT2 0, 0, "1. case"			ratio = ar			start_ratio = ar			end_ratio = ar			cont_pen = gs_cont_pen			start_cont_pen = gs_cont_pen			end_cont_pen = gs_cont_pen			startSegment = cutbackA*br+connectorWidthA*br*flangeA			endSegment = MEP_StraightLength*br-cutbackB*br-connectorWidthB*br*flangeB			halfWidth = pipeDiameterA/2			IF flangeA and not(show_axis) THEN				length = startSegment				pos = 0				halfWidth2 = connectorDiameterA/2				DRAWINDEX 10				GOSUB 21			ENDIF			DRAWINDEX 20			IF not(show_axis) THEN GOSUB 11			IF flangeB and not(show_axis) THEN				length = connectorWidthB*br				pos = endSegment				halfWidth = pipeDiameterB/2				halfWidth2 = connectorDiameterB/2				DRAWINDEX 30				GOSUB 21			ENDIF			SYMB_SECT_PEN = gs_cont_pen			endSegment = MEP_StraightLength*br-cutbackB*br			DRAWINDEX 40			IF NOT(connectedB) THEN GOSUB 50			startSegment = cutbackIA*br			endSegment = MEP_StraightLength*br-cutbackIB*br			IF MEP_InsShow and show_isol and not(show_axis) THEN			! -----> insulation <----- !				PEN gs_cont_pen				LINE2 startSegment, pipeRadiusA+MEP_InsThickness, endSegment, pipeRadiusB+MEP_InsThickness				LINE2 startSegment, -pipeRadiusA-MEP_InsThickness, endSegment, -pipeRadiusB-MEP_InsThickness				GOSUB 40			ENDIF			startSegment = cutbackCLA*br			endSegment = MEP_StraightLength*br-cutbackCLB*br			IF ((MEP_cline_show and show_axis_and) or show_axis) THEN		! -----> center line <----- !				PEN MEP_cline_pen				SET LINE_TYPE MEP_cline_type				LINE2 startSegment, 0, endSegment, 0			ENDIF!!			HOTSPOT2 startSegment, 0!!			HOTSPOT2 endSegment, 0			END		ENDIF		IF  GLOB_CSTORY_ELEV + GLOB_CSTORY_HEIGHT > SYMB_POS_Z AND GLOB_CSTORY_ELEV + GLOB_CSTORY_HEIGHT < SYMB_POS_Z + dz THEN!!			TEXT2 0, 0, "2a. case"			IF (MEP_InsShow and show_isol and not(show_axis)) AND (GLOB_CSTORY_ELEV + GLOB_CSTORY_HEIGHT - SYMB_POS_Z) < (pipeRadiusA+MEP_InsThickness)*br THEN				endSegmentI = startSegment+(pipeRadiusA+MEP_InsThickness)*(br/cr)			ENDIF			IF flangeA and not(show_axis) THEN				ratio = ar				start_ratio = ar				end_ratio = 1/ar				cont_pen = gs_cont_pen				start_cont_pen = gs_cont_pen				end_cont_pen = SYMB_SECT_PEN				startSegment = connectorWidthA*br*flangeA				endSegment = (GLOB_CSTORY_ELEV + GLOB_CSTORY_HEIGHT - SYMB_POS_Z)/cr				IF (GLOB_CSTORY_ELEV + GLOB_CSTORY_HEIGHT - SYMB_POS_Z) < connectorWidthA*ar+(connectorDiameterA/2)*br THEN					endSegment = startSegment+(connectorDiameterA/2)*(br/cr)				ENDIF				IF (-GLOB_CSTORY_ELEV - GLOB_CSTORY_HEIGHT + SYMB_POS_Z + dz) < connectorWidthB*ar+(connectorDiameterB/2)*br THEN					endSegment = (dz-connectorWidthB*ar)/cr-(connectorDiameterB/2)*(br/cr)				ENDIF				endSegment = MAX(endSegment, endSegmentI)				halfWidth = pipeDiameterA/2				length = startSegment				pos = 0				halfWidth2 = connectorDiameterA/2				DRAWINDEX 10				GOSUB 21				DRAWINDEX 20				GOSUB 11			ELSE				start_ratio = ar				end_ratio = 1/ar				start_cont_pen = gs_cont_pen				end_cont_pen = SYMB_SECT_PEN				halfWidth = pipeDiameterA/2				startSegment = cutbackA*br				endSegment = startSegment+(GLOB_CSTORY_ELEV + GLOB_CSTORY_HEIGHT - SYMB_POS_Z)/cr				IF (GLOB_CSTORY_ELEV + GLOB_CSTORY_HEIGHT - SYMB_POS_Z) < (halfWidth*(1/ar-ar))*cr THEN					endSegment = startSegment+(halfWidth*(1/ar-ar))				ENDIF				endSegment = MAX(endSegment, endSegmentI)				GOSUB 11			ENDIF			GOSUB 50			IF MEP_InsShow and show_isol and not(show_axis) THEN			! -----> insulation <----- !				startSegment = 0				endSegment = endSegment				PEN gs_cont_pen				LINE2 startSegment, pipeRadiusA+MEP_InsThickness, endSegment, pipeRadiusB+MEP_InsThickness				LINE2 startSegment, -pipeRadiusA-MEP_InsThickness, endSegment, -pipeRadiusB-MEP_InsThickness				GOSUB 40			ENDIF			startSegment = cutbackCLA*br			IF ((MEP_cline_show and show_axis_and) or show_axis) THEN		! -----> center line <----- !				PEN MEP_cline_pen				SET LINE_TYPE MEP_cline_type				LINE2 startSegment, 0, endSegment, 0			ENDIF			endSegment = dz_temp/cr-cutbackCLB*br!!			HOTSPOT2 startSegment, 0!!			HOTSPOT2 endSegment, 0		ENDIF	ELSE		IF GLOB_CSTORY_ELEV + GLOB_CSTORY_HEIGHT < SYMB_POS_Z + dz THEN!!			TEXT2 0, 0, "2b. case"			start_ratio = 1/ar			end_ratio = 1/ar			start_cont_pen = SYMB_SECT_PEN			end_cont_pen = SYMB_SECT_PEN			halfWidth = pipeDiameterA/2			startSegment = (GLOB_CSTORY_ELEV-SYMB_POS_Z)/cr			startSegment_temp = startSegment			IF (GLOB_CSTORY_ELEV - SYMB_POS_Z) < (halfWidth*(1/ar-ar))*cr AND NOT(flangeA) THEN				startSegment = startSegment+((halfWidth*(1/ar-ar))*cr-(GLOB_CSTORY_ELEV - SYMB_POS_Z))/cr			ENDIF			IF (GLOB_CSTORY_ELEV - SYMB_POS_Z_temp) < connectorWidthA*ar+(connectorDiameterA/2)*br AND flangeA THEN				adz = GLOB_CSTORY_ELEV-SYMB_POS_Z_temp				startSegment = startSegment+connectorWidthA*br*flangeA+(connectorDiameterA/2)*(br/cr)-adz/cr			ENDIF			IF MEP_InsShow AND (GLOB_CSTORY_ELEV - SYMB_POS_Z) < (pipeRadiusA+MEP_InsThickness)*br THEN				startSegmentI = (pipeRadiusA+MEP_InsThickness)*(br/cr)			ENDIF			startSegment = MAX(startSegment, startSegmentI)			endSegment = startSegment_temp+GLOB_CSTORY_HEIGHT*(br/ar)			IF SYMB_POS_Z_temp+dz_temp-GLOB_CSTORY_ELEV-GLOB_CSTORY_HEIGHT < connectorWidthB*ar+(connectorDiameterB/2)*br AND flangeB THEN				adz = SYMB_POS_Z_temp+dz_temp-GLOB_CSTORY_ELEV-GLOB_CSTORY_HEIGHT				endSegment = endSegment-connectorWidthB*br*flangeB-(connectorDiameterB/2)*(br/cr)+adz/cr			ENDIF			halfWidth = pipeDiameterA/2			GOSUB 11			GOSUB 50			IF MEP_InsShow and show_isol and not(show_axis) THEN			! -----> insulation <----- !				PEN gs_cont_pen				LINE2 startSegment, pipeRadiusA+MEP_InsThickness, endSegment, pipeRadiusB+MEP_InsThickness				LINE2 startSegment, -pipeRadiusA-MEP_InsThickness, endSegment, -pipeRadiusB-MEP_InsThickness				GOSUB 40			ENDIF			IF ((MEP_cline_show and show_axis_and) or show_axis) THEN		! -----> center line <----- !				PEN MEP_cline_pen				SET LINE_TYPE MEP_cline_type				LINE2 startSegment, 0, endSegment, 0			ENDIF			startSegment = cutbackCLA*br			endSegment = dz_temp/cr-cutbackCLB*br!!			HOTSPOT2 startSegment, 0!!			HOTSPOT2 endSegment, 0		ENDIF		IF GLOB_CSTORY_ELEV < SYMB_POS_Z  + dz AND (GLOB_CSTORY_ELEV + GLOB_CSTORY_HEIGHT) - (SYMB_POS_Z  + dz) > -EPS THEN!!			TEXT2 0, 0, "2c. case"			IF flangeB and not(show_axis) THEN				ratio = ar				start_ratio = 1/ar				end_ratio = ar				cont_pen = gs_cont_pen				start_cont_pen = SYMB_SECT_PEN				end_cont_pen = gs_cont_pen				halfWidth = pipeDiameterA/2				startSegment = (GLOB_CSTORY_ELEV-SYMB_POS_Z)/cr				IF (GLOB_CSTORY_ELEV - SYMB_POS_Z) < connectorWidthA*ar+(connectorDiameterA/2)*br THEN					startSegment = connectorWidthA*br*flangeA+(connectorDiameterA/2)*(br/cr)				ENDIF				IF (-GLOB_CSTORY_ELEV + SYMB_POS_Z + dz) < connectorWidthB*ar+(connectorDiameterB/2)*br THEN					startSegment = (dz-connectorWidthB*ar)/cr-(connectorDiameterB/2)*(br/cr)				ENDIF				endSegment = (dz-connectorWidthB*ar)/cr				DRAWINDEX 10				GOSUB 11				length = connectorWidthB*br				pos = endSegment				halfWidth = pipeDiameterB/2				halfWidth2 = connectorDiameterB/2				DRAWINDEX 20				GOSUB 21			ELSE				start_ratio = 1/ar				end_ratio = ar				start_cont_pen = SYMB_SECT_PEN				end_cont_pen = gs_cont_pen				halfWidth = pipeDiameterA/2				startSegment = (GLOB_CSTORY_ELEV-SYMB_POS_Z_temp)/cr				IF (GLOB_CSTORY_ELEV - SYMB_POS_Z) < (halfWidth*(1/ar-ar))*cr THEN					startSegment = startSegment+((halfWidth*(1/ar-ar))*cr-(GLOB_CSTORY_ELEV - SYMB_POS_Z))/cr				ENDIF				endSegment = (dz_temp-cutbackB*ar)/cr				GOSUB 11			ENDIF			SYMB_SECT_PEN = gs_cont_pen			endSegment = MEP_StraightLength*br-cutbackB*br			IF NOT(connectedB) THEN GOSUB 50			IF MEP_InsShow and show_isol and not(show_axis) THEN			! -----> insulation <----- !				endSegment = dz/cr				PEN gs_cont_pen				LINE2 startSegment, pipeRadiusA+MEP_InsThickness, endSegment, pipeRadiusB+MEP_InsThickness				LINE2 startSegment, -pipeRadiusA-MEP_InsThickness, endSegment, -pipeRadiusB-MEP_InsThickness				GOSUB 40			ENDIF			endSegment = dz_temp/cr-cutbackCLB*br			IF show_axis_and or show_axis THEN		! -----> center line <----- !				PEN MEP_cline_pen				SET LINE_TYPE MEP_cline_type				LINE2 startSegment, 0, endSegment, 0			ENDIF			startSegment = cutbackCLA*br!!			HOTSPOT2 startSegment, 0!!			HOTSPOT2 endSegment, 0		ENDIF	ENDIFDEL 2SYMB_POS_Z = SYMB_POS_Z_tempEND10:	if show_conventions and is_sech then		pen MEP_cline_pen		POLY2_B 2, 1+2+4+64, MEP_cline_pen, MEP_cline_pen, 0,0,900, 1.5*GLOB_SCALE / 1000,360,4001	endif	if show_axis then RETURN	SET FILL GLOB_FILL_INDEX_BACKGROUND	PUT 0, 0, 901	PUT pipeDiameterA/2, 360, 4001	POLY2_B NSP/3, 1+2+4+64, gs_cont_pen,gs_back_pen, GET (NSP)	IF NOT(connectedB) or is_sech THEN		alpha = 180-2*ATN(pipeRadiusA/(pipeRadiusA*0.75))		rr = pipeRadiusA/SIN(alpha)		ROT2 50		PUT 0, pipeRadiusA, 1		PUT 0, 0, 901		PUT 0, -pipeRadiusA, 3001		PUT -(rr-pipeRadiusA*0.75), 0, 901		PUT 0, pipeRadiusA, 3001		POLY2_B NSP/3, 2+4+64, gs_cont_pen, gs_cont_pen, GET (NSP)		DEL 1	ENDIFRETURN11:	PEN start_cont_pen	MUL2 start_ratio, 1		PUT startSegment*(1/start_ratio), -halfWidth, 1		PUT startSegment*(1/start_ratio), 0, 900		PUT halfWidth, -180, 4000		PUT startSegment*(1/start_ratio), halfWidth, -1	POLY2_B NSP/3, 1+2+4+64, gs_fill_pen, gs_back_pen,		GET (NSP)	PEN gs_cont_pen	IF gs_fill_pen THEN SET FILL gs_fill_type	DEL 1	MUL2 end_ratio, 1!!		PUT startSegment*(1/end_ratio), halfWidth, 1!!		PUT endSegment*(1/end_ratio), halfWidth, 0!!		PUT endSegment*(1/end_ratio), 0, 901!!		PUT halfWidth, 180, 4001!!		PUT startSegment*(1/end_ratio), -halfWidth, 0!!		PUT startSegment*(1/end_ratio), halfWidth, 0!!		PUT startSegment*(1/end_ratio), halfWidth, -1		PUT startSegment*(1/end_ratio), halfWidth, 1		PUT endSegment*(1/end_ratio), halfWidth, 0		PUT endSegment*(1/end_ratio), -halfWidth, 1		PUT startSegment*(1/end_ratio), -halfWidth, 0		PUT startSegment*(1/end_ratio), halfWidth, 0		PUT startSegment*(1/end_ratio), halfWidth, -1	POLY2_B NSP/3, 1+2+4+64, gs_fill_pen, gs_back_pen,		GET (NSP)	PEN end_cont_pen	SET FILL GLOB_FILL_INDEX_BACKGROUND		PUT endSegment*(1/end_ratio), 0, 901		PUT pipeDiameterA/2, 360, 4001	POLY2_B NSP/3, 1+2+4+64, MEP_symb_pen, MEP_symb_pen,		GET (NSP)	PEN gs_cont_pen	IF gs_fill_pen THEN SET FILL gs_fill_type	DEL 1RETURN20:	IF gs_fill_pen THEN SET FILL gs_fill_type		PUT 0, 0, 901		PUT connectorDiameterA/2, 360, 4001		PUT 0, 0, 900		PUT pipeDiameterA/2, 360, 4000	POLY2_B NSP/3, 1+2+4+64, gs_fill_pen, gs_back_pen,		GET (NSP)RETURN21:	MUL2 ratio, 1	length_temp = length	IF length < EPS THEN length = EPS		PUT pos*(1/ratio), halfWidth2, 1		PUT (pos+length)*(1/ratio), halfWidth2, 1		PUT (pos+length)*(1/ratio), -halfWidth2, 1001		PUT pos*(1/ratio), -halfWidth2, 1		PUT pos*(1/ratio), halfWidth2, 1000		PUT pos*(1/ratio), halfWidth2, -1		PUT (pos+length)*(1/ratio), 0, 900		PUT halfWidth, 360, 4000	POLY2_B NSP/3, 1+2+4+64, gs_fill_pen, gs_back_pen,		GET (NSP)	length = length_temp	IF length > EPS THEN ARC2 (pos+length)*(1/ratio), 0, halfWidth2, 90, 270	PEN cont_pen	SET FILL GLOB_FILL_INDEX_BACKGROUND		PUT (pos+length)*(1/ratio), 0, 901		PUT halfWidth, 360, 4001	POLY2_B NSP/3, 1+2+4+64, MEP_symb_pen, MEP_symb_pen,		GET (NSP)	PEN gs_cont_pen	IF gs_fill_pen THEN SET FILL gs_fill_type	DEL 1RETURN30:	IF gs_fill_pen THEN SET FILL gs_fill_type		PUT 0, 0, 901		PUT connectorDiameterB/2, 360, 4001		PUT 0, 0, 900		PUT pipeDiameterB/2, 360, 4000	POLY2_B NSP/3, 1+2+4+64, gs_fill_pen, gs_back_pen,		GET (NSP)RETURN40:	PEN start_cont_pen	MUL2 start_ratio, 1	ARC2  startSegment*(1/start_ratio), 0, pipeRadiusA+MEP_InsThickness, 90, 270	DEL 1	PEN end_cont_pen	MUL2 end_ratio, 1	CIRCLE2 endSegment*(1/end_ratio), 0, pipeRadiusB+MEP_InsThickness	PEN gs_cont_pen	DEL 1RETURN50:	MUL2 end_ratio, 1	PEN SYMB_SECT_PEN	SET FILL GLOB_FILL_INDEX_BACKGROUND	alpha = 180-2*ATN(halfWidth/(halfWidth*0.75))	rr = halfWidth/SIN(alpha)	ADD2 endSegment*(1/end_ratio), 0	ROT2 50	PUT 0, pipeRadiusA, 1	PUT 0, 0, 901	PUT 0, -pipeRadiusA, 3001	PUT -(rr-pipeRadiusA*0.75), 0, 901	PUT 0, pipeRadiusA, 3001	POLY2_B NSP/3, 2+4+64, MEP_symb_pen2, MEP_symb_pen2,		GET (NSP)	DEL 2	PEN gs_cont_pen	IF gs_fill_pen THEN SET FILL gs_fill_type	DEL 1RETURN