!-----------Основной---------------------success = LIBRARYGLOBAL ("Libraryflobals-mep", "show_axis", show_axis)success = LIBRARYGLOBAL ("Libraryflobals-mep", "show_axis_and", show_axis_and)success = LIBRARYGLOBAL ("Libraryflobals-mep", "show_isol", show_isol)success = LIBRARYGLOBAL ("Libraryflobals-mep", "show_conventions", show_conventions)success = LIBRARYGLOBAL ("Libraryflobals-mep", "show_size", show_size)success = LIBRARYGLOBAL ("Libraryflobals-mep", "gs_detlevel_2D_m",gs_detlevel_2D_m)success = LIBRARYGLOBAL ("Libraryflobals-mep", "gs_detlevel_3D_m", gs_detlevel_3D_m)call "Показ_систем" PARAMETERS All isMep=1, isEqp=0 RETURNED_PARAMETERS show_el, syst_nameEPS = 0.0001IF gs_detlevel_3D_m = 2 THEN res = 22IF gs_detlevel_3D_m = 1 THEN res = 12IF gs_detlevel_3D_m = 0 THEN res = 12bendAngle = ABS(MEP_BendAngle)pipeDiameterA		= MEP_NumConnectionData[1][12]connectorDiameterA	= MEP_NumConnectionData[1][15]IF connectorDiameterA < pipeDiameterA THEN connectorDiameterA = pipeDiameterAconnectorWidthA		= MEP_NumConnectionData[1][17]connectedA			= MEP_NumConnectionData[1][18]connectionSexA		= MEP_NumConnectionData[1][20]connectionStyleA	= gs_AddConnections[1][1]!!connectorWidthA		= 0!!connectedA = 0!!connectionStyleA	= 1!!connectionSexA		= 2pipeDiameterB		= MEP_NumConnectionData[2][12]connectorDiameterB	= MEP_NumConnectionData[2][15]IF connectorDiameterB < pipeDiameterB THEN connectorDiameterB = pipeDiameterBconnectorWidthB		= MEP_NumConnectionData[2][17]connectedB			= MEP_NumConnectionData[2][18]connectionSexB		= MEP_NumConnectionData[2][20]connectionStyleB	= gs_AddConnections[2][1]!!connectedB = 0!!connectionStyleB	= 2!!connectionSexB		= 2flangeA = 1IF connectorWidthA < EPS OR ABS(gs_AddConnections[1][1] - 1) < EPS THEN	flangeA = 0	connectorWidthA = 0ENDIFcutbackA = connectorWidthAcutbackCLA = connectorWidthA*(ABS(connectionStyleA-3) < EPS AND ABS(connectionSexA-2) < EPS AND ABS(connectedA-1) < EPS)cutbackIA = connectorWidthA*(ABS(connectionStyleA-3) < EPS AND ABS(connectionSexA-1) < EPS)extendA = 0IF ABS(connectionStyleA-3) < EPS AND ABS(connectionSexA-1) < EPS THEN	flangeA = 0	IF GLOB_CONTEXT = 5 OR ABS(connectedA) < EPS THEN		cutbackA = 0		extendA = 1	ENDIFENDIFedgeVisibleA = 1IF flangeA THEN	edgeVisibleA = 0	cutbackA = 0ENDIFflangeB = 1IF connectorWidthB < EPS OR ABS(gs_AddConnections[2][1] - 1) < EPS THEN	flangeB = 0	connectorWidthB = 0ENDIFcutbackB = connectorWidthBcutbackCLB = connectorWidthB*(ABS(connectionStyleB-3) < EPS AND ABS(connectionSexB-2) < EPS AND ABS(connectedB-1) < EPS)cutbackIB = connectorWidthB*(ABS(connectionStyleB-3) < EPS AND ABS(connectionSexB-1) < EPS)extendB = 0IF ABS(connectionStyleB-3) < EPS AND ABS(connectionSexB-1) < EPS THEN	flangeB = 0	IF GLOB_CONTEXT = 5 OR ABS(connectedB) < EPS THEN		cutbackB = 0		extendB = 1	ENDIFENDIFedgeVisibleB = 1IF flangeB THEN	edgeVisibleB = 0	cutbackB = 0ENDIF						! ---------------- !						! --- Z vector --- !						! ---------------- !dZx = -MEP_Position[3][2]*MEP_Position[2][3]+MEP_Position[3][3]*MEP_Position[2][2]dZy = -MEP_Position[3][3]*MEP_Position[2][1]+MEP_Position[3][1]*MEP_Position[2][3]dZz = -MEP_Position[3][1]*MEP_Position[2][2]+MEP_Position[3][2]*MEP_Position[2][1]						! ------------------------ !						! --- 2 points of pipe --- !						! ------------------------ !! --- x,y,z coordinates of 1st point ---PointAX = cutbackCLAPointAY = 0PointAZ = 0! --- x,y,z coordinates of middle point ---PointMX = connectorWidthA+MEP_BendRadius*(TAN(bendAngle/2))PointMY = 0PointMZ = 0! --- x,y,z coordinates of 2nd point ---PointBX = connectorWidthA+MEP_BendRadius*SIN(bendAngle)+(connectorWidthB-cutbackCLB)*COS(bendAngle)PointBY = MEP_BendRadius-MEP_BendRadius*COS(bendAngle)+(connectorWidthB-cutbackCLB)*SIN(bendAngle)PointBZ = 0vectorX = COS(bendAngle)vectorY = SIN(bendAngle)vectorZ = 0						! ------------------- !						! --- coordinates --- !						! ------------------- !! --- Building of Transformational MatrixDIM MatrixT[3][3]MatrixT[1][1] = MEP_Position[2][1]MatrixT[1][2] = MEP_Position[2][2]MatrixT[1][3] = MEP_Position[2][3]MatrixT[2][1] = MEP_Position[3][1]MatrixT[2][2] = MEP_Position[3][2]MatrixT[2][3] = MEP_Position[3][3]MatrixT[3][1] = dZxMatrixT[3][2] = dZyMatrixT[3][3] = dZz! --- Input Coordinatespnum = 10PUT PointAX, PointAY, PointAZPUT PointMX, PointMY, PointMZPUT PointBX, PointBY, PointBZalpha = 0: alpha_i = bendAngle/(pnum-1)FOR i = 1 TO pnum	PUT connectorWidthA+MEP_BendRadius*SIN(alpha), MEP_BendRadius-MEP_BendRadius*COS(alpha), 0	alpha = alpha + alpha_iNEXT iPUT vectorX, vectorY, vectorZCoordinates = NSP/3DIM inCoords[20][3]FOR cnum = 1 TO Coordinates	inCoords[cnum][1] = GET(1)	inCoords[cnum][2] = GET(1)	inCoords[cnum][3] = GET(1)NEXT cnum! --- the Matrix Operation, what makes the Output-CoordinatesDIM outCoords[20][3]FOR cnum = 1 TO Coordinates	outCoords[cnum][1] = inCoords[cnum][1]*MatrixT[1][1]+inCoords[cnum][2]*MatrixT[2][1]+inCoords[cnum][3]*MatrixT[3][1]	outCoords[cnum][2] = inCoords[cnum][1]*MatrixT[1][2]+inCoords[cnum][2]*MatrixT[2][2]+inCoords[cnum][3]*MatrixT[3][2]	outCoords[cnum][3] = inCoords[cnum][1]*MatrixT[1][3]+inCoords[cnum][2]*MatrixT[2][3]+inCoords[cnum][3]*MatrixT[3][3]NEXT cnum