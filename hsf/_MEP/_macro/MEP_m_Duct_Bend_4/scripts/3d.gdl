!-----------3d---------------------
if show_el < EPS then end
if GLOB_VIEW_TYPE=2 then gs_detlevel_3D_m = gs_detlevel_2D_m
IF gs_detlevel_3D_m < EPS THEN END
if hide_conventions and show_conventions THEN END
if GLOB_PREVIEW_MODE = 0 and GLOB_FEEDBACK_MODE = 0 then CALL "MEP_m_RequestSystemGlobals" PARAMETERS ALL one_ConID=0 returned_parameters gs_cont_pen, sMat, gs_InsMat, MEP_cline_pen, show_el

_pTM = GLOB_SCALE / 1000
lmmza = 1
gs_DuctMat = sMat
IF gs_detlevel_3D_m = 1 THEN 
	SHADOW OFF
else
	SHADOW ON
endif


RESOL res
PEN gs_cont_pen

HptsUnIDBeginForConnEnds = 30000

hceID_1 = HptsUnIDBeginForConnEnds+100
hceID_2 = HptsUnIDBeginForConnEnds+200

XFORM   MEP_Position[2][1], MEP_Position[3][1], dZx, MEP_Position[1][1],
		MEP_Position[2][2], MEP_Position[3][2], dZy, MEP_Position[1][2],
		MEP_Position[2][3], MEP_Position[3][3], dZz, MEP_Position[1][3]

duct_show = duct_show*not(show_axis)
IF duct_show and not(show_axis) THEN			! -----> duct bend <----- !

	HOTSPOT PointAX, 0, 0, hceID_1
	HOTSPOT PointBX, PointBY, 0, hceID_2
	HOTSPOT PointMX, 0, 0, HptsUnIDBeginForConnEnds

	MATERIAL gs_DuctMat

	halfWidth 	= ductHalfWidthA
	halfHeight 	= ductHalfHeightA
	IF gs_detlevel_3D_m = 1 THEN connectorLengthA = 0

	IF flangeB AND connectorLengthA > 0 THEN
		ADD PointBX-(connectorLengthA-add_l)*COS(bendAngle), PointBY-(connectorLengthA-add_l)*SIN(bendAngle), PointBZ
		ROTz 90+bendAngle
		CUTPLANE 90
		DEL 2
	ENDIF

	IF flangeA AND connectorLengthA > 0  THEN
		ADDx -add_l+connectorLengthA
		ROTz -90
		CUTPLANE 90
		DEL 2
	ENDIF


	GOSUB 20

	IF ABS(shapeTypeA - 1) > EPS OR ABS(shapeTypeB - 1) > EPS THEN
		BASE
		VERT    0,    MEP_BendRadius,    0
		VERT    MEP_BendRadius,    MEP_BendRadius,    0
		VERT    0,    MEP_BendRadius+1,	0
		VERT    0,    MEP_BendRadius,    1
		COOR    4,    -1,   -2,    -3,    -4
	ELSE
		BASE
		VERT    0,    MEP_BendRadius,    0
		VERT    ductHalfWidthA,    MEP_BendRadius,    0
		VERT    0,    MEP_BendRadius+1,    0
		VERT    0,    MEP_BendRadius,    1
		COOR    3,    -1,   -2,    -3,    -4
	ENDIF
	BODY -1

	IF flangeA and gs_detlevel_3D_m = 2 THEN
		addx -add_l
		halfWidthC = connectorHalfWidthA
		halfHeightC = connectorHalfHeightA
		IF connectorLengthA > 0 THEN CUTEND
		GOSUB 30
		del 1
	ENDIF

	IF flangeB and gs_detlevel_3D_m = 2 THEN
		halfWidthC = connectorHalfWidthB
		halfHeightC = connectorHalfHeightB
		IF connectorLengthA > 0 THEN CUTEND
		ADD PointBX, PointBY, PointBZ
		ROTz 180+bendAngle
		GOSUB 30
		DEL 2
	ENDIF
ENDIF

IF MEP_InsShow and show_isol and not(show_axis) THEN			! -----> insulation <----- !
	MATERIAL gs_InsMat
	halfWidth 	= ductHalfWidthA+MEP_InsThickness
	halfHeight 	= ductHalfHeightA+MEP_InsThickness

	heelRadius = heelRadius_wIns
	heelSegmentLength = heelSegmentLength_wIns

	throatRadius = throatRadius_wIns
	throatSegmentLength = throatSegmentLength_wIns

	GOSUB 20

	IF ABS(shapeTypeA - 1) > EPS OR ABS(shapeTypeB - 1) > EPS THEN
		BASE
		VERT    0,    MEP_BendRadius,    0
		VERT    MEP_BendRadius,    MEP_BendRadius,    0
		VERT    0,    MEP_BendRadius+1,	0
		VERT    0,    MEP_BendRadius,    1
		COOR    4,    -1,   -2,    -3,    -4
	ELSE
		BASE
		VERT    0,    MEP_BendRadius,    0
		VERT    halfWidth,    MEP_BendRadius,    0
		VERT    0,    MEP_BendRadius+1,    0
		VERT    0,    MEP_BendRadius,    1
		COOR    3,    -1,   -2,    -3,    -4
	ENDIF
	BODY -1
	MATERIAL gs_DuctMat
ENDIF


IF GLOB_CONTEXT < 41 OR GLOB_CONTEXT > 49 THEN

	IF show_axis_and or show_axis THEN		! -----> center line <----- !
		PEN MEP_cline_pen
		IF add_l THEN
			LIN_ 0, 0, 0, -add_l, 0, 0
			xx = MEP_BendRadius*SIN(bendAngle)
			yy = MEP_BendRadius-MEP_BendRadius*COS(bendAngle)
			LIN_ xx, yy, 0, xx+(ductStraightLengthB+add_l)*COS(bendAngle), yy+(ductStraightLengthB+add_l)*SIN(bendAngle), 0
			HOTLINE 0, 0, 0, -add_l, 0, 0, 8656
			HOTLINE xx, yy, 0, xx+(ductStraightLengthB+add_l)*COS(bendAngle), yy+(ductStraightLengthB+add_l)*SIN(bendAngle), 0, 8657
		ENDIF

!		lin_ -add_l,lmmza*_pTM,0,-add_l,-lmmza*_pTM,0
		ADD PointBX, PointBY, PointBZ
		ROTz 180+bendAngle
!		lin_ 0,lmmza*_pTM,0,0,-lmmza*_pTM,0
		del 2

		IF MEP_ThroatSegments = 1 AND MEP_HeelSegments = 1 OR MEP_HeelSegments = 1 THEN
			RESOL INT(360/(bendAngle/bendRes))
			MODEL WIRE
			MULy -1
			ADD ductStraightLengthA, -MEP_BendRadius, 0
				ARC MEP_BendRadius, 90-bendAngle, 90
			DEL 2
			MODEL SOLID

			IF ductStraightLengthA THEN
				LIN_ 0, 0, 0, ductStraightLengthA, 0, 0
				HOTLINE 0, 0, 0, ductStraightLengthA, 0, 0, 8658
			ENDIF

			IF ductStraightLengthB THEN
				xx = MEP_BendRadius*SIN(bendAngle)
				yy = MEP_BendRadius-MEP_BendRadius*COS(bendAngle)
				LIN_ xx, yy, 0, xx+ductStraightLengthB*COS(bendAngle), yy+ductStraightLengthB*SIN(bendAngle), 0
				HOTLINE xx, yy, 0, xx+ductStraightLengthB*COS(bendAngle), yy+ductStraightLengthB*SIN(bendAngle), 0, 8659
			ENDIF
		ENDIF

		IF MEP_HeelSegments = 2 THEN
			LIN_ 0, 0, 0, PointMX, PointMY, PointMZ
			LIN_ PointMX, PointMY, PointMZ, PointBX, PointBY, PointBZ
		ENDIF

		IF MEP_HeelSegments > 2 THEN
				segments = MEP_HeelSegments
				Len = MEP_BendRadius*TAN(bendAngle/2)
				rr = Len/(TAN(bendAngle/2)+2*SIN(bendAngle/(2*(segments-2))))
				segmentLen = 2*rr*SIN(bendAngle/(2*(segments-2)))
			MODEL WIRE
				PUT 0, 0, 1
				PUT ductStraightLengthA+segmentLen, 0, 1
				alpha = 0
				FOR i = 1 TO segments-2
					alpha = alpha + bendAngle/(segments-2)
					PUT ductStraightLengthA+segmentLen+rr*SIN(alpha), rr-rr*COS(alpha), 1
				NEXT i
				PUT ductStraightLengthA+segmentLen+rr*SIN(alpha)+(segmentLen+ductStraightLengthB)*COS(bendAngle), rr-rr*COS(alpha)+(segmentLen+ductStraightLengthB)*SIN(bendAngle), 0
			POLY_ NSP/3,

				GET(NSP)

			MODEL SOLID
		ENDIF
	ENDIF
ENDIF

DEL 1

END

10:
	IF ABS(shapeTypeA - 1) < EPS THEN
		IF GLOB_CONTEXT > 40 AND GLOB_CONTEXT < 50 THEN status = status + 3

			if not(show_axis) then TUBE 4, NSP/4, status,
				ww, hh, 1,
				-ww, hh, 1,
				-ww, -hh, 1,
				ww, -hh, 1,

				GET(NSP)
	ENDIF
	IF ABS(shapeTypeA - 2) < EPS THEN
		IF GLOB_CONTEXT > 40 AND GLOB_CONTEXT < 50 THEN status = status + 3

		if not(show_axis) then TUBE 2, NSP/4, status,
			0, 0, 901,
			rr, 360, 4001,

			GET(NSP)
	ENDIF
	IF ABS(shapeTypeA - 3) < EPS THEN
		IF GLOB_CONTEXT > 40 AND GLOB_CONTEXT < 50 THEN status = status + 3

		IF ABS(ww - hh) < EPS THEN
			if not(show_axis) then TUBE 2, NSP/4, status,
				0, 0, 901,
				ww, 360, 4001,

				GET(NSP)
		ENDIF

		IF ww > hh THEN
			if not(show_axis) then TUBE 5, NSP/4, status,
				ww-hh, hh, 1,
				-ww+hh, hh, 1,
				-ww+hh, -hh, 1001,
				ww-hh, -hh, 1,
				ww-hh, hh, 1001,

				GET(NSP)
		ENDIF

		IF ww < hh THEN
			if not(show_axis) then TUBE 5, NSP/4, status,
				ww, hh-ww, 1,
				ww, -hh+ww, 1,
				-ww, -hh+ww, 1001,
				-ww, hh-ww, 1,
				ww, hh-ww, 1001,

				GET(NSP)
		ENDIF
	ENDIF
RETURN

20:
	IF MEP_BendAngle < 0.02 THEN
		PUT -1, 0, 0, 0
		PUT 0, 0, 0, 0
		PUT EPS, 0, 0, 0
		PUT EPS+1, 0, 0, 0

		rr = halfWidth
		ww = halfWidth
		hh = halfHeight
		status = 16+32
		GOSUB 10
	ELSE
		IF ABS(shapeTypeA - 1) < EPS  THEN
			ADD ductStraightLengthA, 0, -halfHeight
			IF ABS(MEP_BendRadius - ductHalfWidth) < EPS THEN MEP_BendRadius = MEP_BendRadius + EPS
			IF GLOB_CONTEXT > 40 AND GLOB_CONTEXT < 50 THEN
				alpha = 0
				PUT -add_l, -halfWidth, 15
				PUT -ductStraightLengthA, -halfWidth, 15
				PUT 0, -halfWidth, 15
				IF MEP_HeelSegments > 1 THEN
					PUT heelSegmentLength, -halfWidth, 15
					FOR i = 1 TO (MEP_HeelSegments-2)
						 alpha = alpha + bendAngle/(MEP_HeelSegments-2)
						PUT heelSegmentLength+heelRadius*SIN(alpha), -halfWidth+heelRadius-heelRadius*COS(alpha), 15
					NEXT i
					PUT (MEP_BendRadius+halfWidth)*SIN(bendAngle), MEP_BendRadius-(MEP_BendRadius+halfWidth)*COS(bendAngle), 15
				ELSE
					PUT 0, MEP_BendRadius, 915
					PUT (MEP_BendRadius+halfWidth)*SIN(bendAngle), MEP_BendRadius-(MEP_BendRadius+halfWidth)*COS(bendAngle), 3015
				ENDIF
				PUT (MEP_BendRadius+halfWidth)*SIN(bendAngle)+(ductStraightLengthB+add_l)*COS(bendAngle), MEP_BendRadius-(MEP_BendRadius+halfWidth)*COS(bendAngle)+(ductStraightLengthB+add_l)*SIN(bendAngle), 15

				PUT (MEP_BendRadius-halfWidth)*SIN(bendAngle)+(ductStraightLengthB+add_l)*COS(bendAngle), MEP_BendRadius-(MEP_BendRadius-halfWidth)*COS(bendAngle)+(ductStraightLengthB+add_l)*SIN(bendAngle), 15
				PUT (MEP_BendRadius-halfWidth)*SIN(bendAngle), MEP_BendRadius-(MEP_BendRadius-halfWidth)*COS(bendAngle), 15
				IF MEP_ThroatSegments > 1 THEN
					alpha = bendAngle
					PUT throatSegmentLength+throatRadius*SIN(alpha), halfWidth+throatRadius-throatRadius*COS(alpha), 15
					FOR i = 1 TO (MEP_ThroatSegments-2)
						 alpha = alpha - bendAngle/(MEP_ThroatSegments-2)
						PUT throatSegmentLength+throatRadius*SIN(alpha), halfWidth+throatRadius-throatRadius*COS(alpha), 15
					NEXT i
					PUT 0, halfWidth, 15
				ELSE
					PUT 0, MEP_BendRadius, 915
					PUT 0, halfWidth, 3015
				ENDIF
				PUT -ductStraightLengthA+0.001, halfWidth, 15
				PUT -add_l+0.001, -halfWidth, 15
			ELSE
				alpha = 0
				PUT -add_l, -halfWidth, 15
				PUT -ductStraightLengthA, -halfWidth, 15
				PUT 0, -halfWidth, 15
				IF MEP_HeelSegments > 1 THEN
					PUT heelSegmentLength-1, -halfWidth, 15
					FOR i = 1 TO (MEP_HeelSegments-2)
						 alpha = alpha + bendAngle/(MEP_HeelSegments-2)
						PUT heelSegmentLength+heelRadius*SIN(alpha), -halfWidth+heelRadius-heelRadius*COS(alpha), 15
					NEXT i
					PUT (MEP_BendRadius+halfWidth)*SIN(bendAngle), MEP_BendRadius-(MEP_BendRadius+halfWidth)*COS(bendAngle), 71+8*NOT(ABS(ductStraightLengthB+add_l) < EPS)
				ELSE
					PUT 0, MEP_BendRadius, 979
					PUT (MEP_BendRadius+halfWidth)*SIN(bendAngle), MEP_BendRadius-(MEP_BendRadius+halfWidth)*COS(bendAngle), 3071+8*NOT(ABS(ductStraightLengthB+add_l) < EPS)
				ENDIF
				PUT (MEP_BendRadius+halfWidth)*SIN(bendAngle)+(ductStraightLengthB+add_l)*COS(bendAngle), MEP_BendRadius-(MEP_BendRadius+halfWidth)*COS(bendAngle)+(ductStraightLengthB+add_l)*SIN(bendAngle), 71

				PUT (MEP_BendRadius-halfWidth)*SIN(bendAngle)+(ductStraightLengthB+add_l)*COS(bendAngle), MEP_BendRadius-(MEP_BendRadius-halfWidth)*COS(bendAngle)+(ductStraightLengthB+add_l)*SIN(bendAngle), 79
				PUT (MEP_BendRadius-halfWidth)*SIN(bendAngle), MEP_BendRadius-(MEP_BendRadius-halfWidth)*COS(bendAngle), 79
				IF MEP_ThroatSegments > 1 THEN
					alpha = bendAngle
					PUT throatSegmentLength+throatRadius*SIN(alpha), halfWidth+throatRadius-throatRadius*COS(alpha), 15
					FOR i = 1 TO (MEP_ThroatSegments-2)
						 alpha = alpha - bendAngle/(MEP_ThroatSegments-2)
						PUT throatSegmentLength+throatRadius*SIN(alpha), halfWidth+throatRadius-throatRadius*COS(alpha), 15
					NEXT i
					PUT 0, halfWidth, 71+8*NOT(ABS(ductStraightLengthA+add_l) < EPS)
				ELSE
					PUT 0, MEP_BendRadius, 979
					PUT 0, halfWidth, 3071+8*NOT(ABS(ductStraightLengthA) < EPS)
				ENDIF
				PUT 0, halfWidth, 15
				PUT -add_l, halfWidth, 15
			ENDIF
			PRISM_ NSP/3, halfHeight*2,
				GET (NSP)

			DEL 1
		ELSE
			IF MEP_ThroatSegments = 1 AND MEP_HeelSegments = 1 THEN
				ADDx ductStraightLengthA
				 alpha_i = bendAngle/bendRes
				PUT -MEP_BendRadius*SIN(alpha_i), MEP_BendRadius-MEP_BendRadius*COS(alpha_i), 0, 0
				FOR i = 1 TO bendRes+1
					PUT MEP_BendRadius*SIN(alpha_i*(i-1)), MEP_BendRadius-MEP_BendRadius*COS(alpha_i*(i-1)), 0, 0
				NEXT i
				PUT MEP_BendRadius*SIN(alpha_i*(bendRes+1)), MEP_BendRadius-MEP_BendRadius*COS(alpha_i*(bendRes+1)), 0, 0

				IF ABS(shapeTypeA - 2) < EPS THEN
					rr = halfWidth*COS(alpha_i/2)
					MULz halfWidth/rr
				ENDIF
				IF ABS(shapeTypeA - 3) < EPS THEN
					ww = halfWidth*COS(alpha_i/2)
					hh = halfHeight*COS(alpha_i/2)
					MULz halfHeight/hh
				ENDIF

				status = 16*NOT(ductStraightLengthA and add_l)+32*NOT(ductStraightLengthB and add_l)+64*(MEP_HeelSegments > 1)
				GOSUB 10

				DEL 2
			ENDIF

			IF MEP_ThroatSegments = 2 AND MEP_HeelSegments = 2 THEN
				ADDx ductStraightLengthA

				dist = MEP_BendRadius*(TAN(bendAngle/2))
				PUT -1, 0, 0, 0
				PUT 0, 0, 0, 0
				PUT dist, 0, 0, 0
				PUT dist*(1+COS(bendAngle)), dist*SIN(bendAngle), 0, 0
				PUT dist*(1+COS(bendAngle))+COS(bendAngle), (dist+1)*SIN(bendAngle), 0, 0

				rr = halfWidth
				ww = halfWidth
				hh = halfHeight

				status = 16*NOT(ductStraightLengthA and add_l)+32*NOT(ductStraightLengthB and add_l)+64*(MEP_HeelSegments > 1)
				GOSUB 10

				DEL 1
			ENDIF

			IF MEP_ThroatSegments > 2 AND MEP_HeelSegments > 2 AND ABS(MEP_ThroatSegments - MEP_HeelSegments) < EPS THEN
				ADDx ductStraightLengthA
				segments = MAX(MEP_ThroatSegments, MEP_HeelSegments)
				Len = MEP_BendRadius*TAN(bendAngle/2)
				rr = Len/(TAN(bendAngle/2)+2*SIN(bendAngle/(2*(segments-2))))
				segmentLen = 2*rr*SIN(bendAngle/(2*(segments-2)))
				PUT -1, 0, 0, 0
				PUT 0, 0, 0, 0
				PUT segmentLen, 0, 0, 0
				alpha = 0
				FOR i = 1 TO segments-2
					alpha = alpha + bendAngle/(segments-2)
					PUT segmentLen+rr*SIN(alpha), rr-rr*COS(alpha), 0, 0
				NEXT i
				PUT segmentLen+rr*SIN(alpha)+segmentLen*COS(bendAngle), rr-rr*COS(alpha)+segmentLen*SIN(bendAngle), 0, 0
				PUT segmentLen+rr*SIN(alpha)+(segmentLen+1)*COS(bendAngle), rr-rr*COS(alpha)+(segmentLen+1)*SIN(bendAngle), 0, 0

				rr = halfWidth
				ww = halfWidth
				hh = halfHeight
				status = 16*NOT(ductStraightLengthA)+32*NOT(ductStraightLengthB)+64*(MEP_HeelSegments > 1)
				GOSUB 10

				DEL 1
			ENDIF
			IF ductStraightLengthA or add_l THEN
				ADDx -add_l
				PUT -1, 0, 0, 0
				PUT 0, 0, 0, 0
				PUT ductStraightLengthA+add_l, 0, 0, 0
				PUT ductStraightLengthA+1, 0, 0, 0
				rr = halfWidth
				ww = halfWidth
				hh = halfHeight
				status = 16
				GOSUB 10
				DEL 1
			ENDIF
			IF ductStraightLengthB or add_l  THEN
				PUT MEP_BendRadius*SIN(bendAngle)-COS(bendAngle), MEP_BendRadius-MEP_BendRadius*COS(bendAngle)-SIN(bendAngle), 0, 0
				PUT MEP_BendRadius*SIN(bendAngle), MEP_BendRadius-MEP_BendRadius*COS(bendAngle), 0, 0
				PUT MEP_BendRadius*SIN(bendAngle)+(ductStraightLengthB+add_l)*COS(bendAngle), MEP_BendRadius-MEP_BendRadius*COS(bendAngle)+(ductStraightLengthB+add_l)*SIN(bendAngle), 0, 0
				PUT MEP_BendRadius*SIN(bendAngle)+(ductStraightLengthB+1+add_l)*COS(bendAngle), MEP_BendRadius-MEP_BendRadius*COS(bendAngle)+(ductStraightLengthB+1+add_l)*SIN(bendAngle), 0, 0
				rr = halfWidth
				ww = halfWidth
				hh = halfHeight
				status = 32
				GOSUB 10
			ENDIF
		ENDIF
	ENDIF
RETURN

30:
	ROTy 90
	IF ABS(shapeTypeA - 1) < EPS THEN			! --- ShapeType = Rectangular --- !
		PRISM_ 10, connectorLengthA,
			halfHeightC, halfWidthC, 15,
			-halfHeightC, halfWidthC, 15,
			-halfHeightC, -halfWidthC, 15,
			halfHeightC, -halfWidthC, 15,
			halfHeightC, halfWidthC, -1,
			halfHeight, halfWidth, 15,
			-halfHeight, halfWidth, 15,
			-halfHeight, -halfWidth, 15,
			halfHeight, -halfWidth, 15,
			halfHeight, halfWidth, -1

	ENDIF

	IF ABS(shapeTypeA - 2) < EPS THEN			! --- ShapeType = Circular --- !
		PRISM_ 4, connectorLengthA,
			0, 0, 979,
			halfWidthC, 360, 4079,
			0, 0, 979,
			halfWidth, 360, 4079
	ENDIF

	IF ABS(shapeTypeA - 3) < EPS THEN			! --- ShapeType = Oval --- !
		IF ABS(halfWidth-halfHeight) < EPS THEN
			PRISM_ 4, connectorLengthA,
				0, 0, 979,
				halfWidthC, 360, 4079,
				0, 0, 979,
				halfWidth, 360, 4079
		ENDIF
		IF NOT(ABS(halfWidth-halfHeight) < EPS) AND halfWidth > halfHeight THEN
			rrC = halfHeightC
			rr = halfHeight
			PRISM_ 12, connectorLengthA,
				halfHeightC, -halfWidthC+rrC, 79,
				halfHeightC, halfWidthC-rrC, 79,
				-halfHeightC, halfWidthC-rrC, 1079,
				-halfHeightC, -halfWidthC+rrC, 79,
				halfHeightC, -halfWidthC+rrC, 1079,
				halfHeightC, -halfWidthC+rrC, -1,
				halfHeight, -halfWidth+rr, 79,
				halfHeight, halfWidth-rr, 79,
				-halfHeight, halfWidth-rr, 1079,
				-halfHeight, -halfWidth+rr, 79,
				halfHeight, -halfWidth+rr, 1079,
				halfHeight, -halfWidth+rr, -1
		ENDIF
		IF NOT(ABS(halfWidth-halfHeight) < EPS) AND halfWidth < halfHeight THEN
			rrC = halfWidthC
			rr = halfWidth
			PRISM_ 12, connectorLengthA,
				halfHeightC-rrC, halfWidthC, 79,
				-halfHeightC+rrC, halfWidthC, 79,
				-halfHeightC+rrC, -halfWidthC, 1079,
				halfHeightC-rrC, -halfWidthC, 79,
				halfHeightC-rrC, halfWidthC, 1079,
				halfHeightC-rrC, halfWidthC, -1,
				halfHeight-rr, halfWidth, 79,
				-halfHeight+rr, halfWidth, 79,
				-halfHeight+rr, -halfWidth, 1079,
				halfHeight-rr, -halfWidth, 79,
				halfHeight-rr, halfWidth, 1079,
				halfHeight-rr, halfWidth, -1
		ENDIF
	ENDIF
	DEL 1
	BODY -1
RETURN
