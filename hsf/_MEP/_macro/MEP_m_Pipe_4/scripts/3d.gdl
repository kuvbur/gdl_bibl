!-----------3d---------------------if show_el < EPS and GLOB_VIEW_TYPE<>2 then endif GLOB_VIEW_TYPE=2 then gs_detlevel_3D_m = gs_detlevel_2D_mIF gs_detlevel_3D_m < EPS THEN ENDif (GLOB_PREVIEW_MODE or GLOB_FEEDBACK_MODE or GLOB_SEO_TOOL_MODE and gs_detlevel_3D_m > EPS) then gs_detlevel_3D_m = 1if GLOB_PREVIEW_MODE = 0 and GLOB_FEEDBACK_MODE = 0 and not(calledparam) then 	CALL "MEP_m_RequestSystemGlobals" PARAMETERS ALL one_ConID=0 returned_parameters gs_cont_pen, sMat, gs_InsMat, MEP_cline_pen, show_el	gs_PipeMat = sMatendifif show_axis then pipe_show = 0IF gs_detlevel_3D_m = 1 THEN 	SHADOW OFFelse	SHADOW ONendifRESOL resPEN gs_cont_penHptsUnIDBeginForConnEnds = 30000hceID_1 = HptsUnIDBeginForConnEnds+100hceID_2 = HptsUnIDBeginForConnEnds+200operatedMode = 0addStatus1 = 0addStatus2 = 0addStatus3 = 0IF GLOB_CONTEXT > 40 AND GLOB_CONTEXT < 50 THEN	operatedMode = 1	addStatus1 = 1	addStatus2 = 2	addStatus3 = 3ENDIFif (flangeout1>EPS) then	pipeDiameterA = pipeDiameterA + flangeth1*2	connectorDiameterA = connectorDiameterA + flangeth1*2endifif (flangeout2>EPS) then	pipeDiameterB = pipeDiameterB + flangeth2*2	connectorDiameterB = connectorDiameterB + flangeth2*2endifIF pipe_show and not(show_axis)  THEN		! -----> pipe straight <----- !	MATERIAL gs_PipeMat	pipeRadius = MEP_NumConnectionData[1][12]/2	IF MEP_NumberConnections > 2 THEN		ith = 0		insul = 0		GOSUB 200		GROUP "pipeStraight"	ENDIF	XFORM   MEP_Position[2][1], MEP_Position[3][1], dZx, MEP_Position[1][1],			MEP_Position[2][2], MEP_Position[3][2], dZy, MEP_Position[1][2],			MEP_Position[2][3], MEP_Position[3][3], dZz, MEP_Position[1][3]	ROTy 90	ADDz connectorWidthA	alpha_i = 360/res	rr = pipeDiameterA/2	yy = 0: zz = 0: mm = 1	GOSUB 100	rr = pipeDiameterB/2	yy = MEP_offset_y: zz = -MEP_offset_z: mm = MEP_StraightLength-connectorWidthA-connectorWidthB	GOSUB 100	RULED NSP/6, addStatus3+4+16+32,		GET(NSP)	DEL 3	IF MEP_NumberConnections > 2 THEN		ENDGROUP		PLACEGROUP SUBGROUP("pipeStraight", "holes")	ENDIF	XFORM   MEP_Position[2][1], MEP_Position[3][1], dZx, MEP_Position[1][1],			MEP_Position[2][2], MEP_Position[3][2], dZy, MEP_Position[1][2],			MEP_Position[2][3], MEP_Position[3][3], dZz, MEP_Position[1][3]	ROTy 90	BASE	VERT    0,    0,    0	VERT    pipeRadius,    0,    0	VERT    0,    1,    0	VERT    0,    0,    1	COOR    3,    -1,   -2,    -3,    -4	DEL 2	BODY -1ENDIFXFORM   MEP_Position[2][1], MEP_Position[3][1], dZx, MEP_Position[1][1],		MEP_Position[2][2], MEP_Position[3][2], dZy, MEP_Position[1][2],		MEP_Position[2][3], MEP_Position[3][3], dZz, MEP_Position[1][3]IF pipe_show AND showHtps  THEN	IF editable AND ABS(MEP_offset_y) < EPS AND ABS(MEP_offset_z) < EPS AND connectedA + connectedB < 1 + EPS THEN		HOTSPOT 0, 0, 0, hceID_1, MEP_StraightLength, 1+256*(connectedA < EPS)		HOTSPOT -1, 0, 0, HptsUnIDBeginForConnEnds, MEP_StraightLength, 3		IF ABS(connectedA) < EPS AND ABS(connectedB - 1) < EPS THEN			hID = hceID_2+1			IF nonEditHtps THEN				ROTy 90				HOTSPOT -MEP_offset_z, MEP_offset_y, MEP_StraightLength, hceID_2				DEL 1			ENDIF		ELSE			hID = hceID_2		ENDIF		HOTSPOT MEP_StraightLength, 0, 0, hID, MEP_StraightLength, 2+128*connectedB	ELSE		IF nonEditHtps THEN			ROTy 90			HOTSPOT 0, 0, 0, hceID_1			HOTSPOT -MEP_offset_z, MEP_offset_y, MEP_StraightLength, hceID_2			DEL 1		ENDIF	ENDIFENDIFROTy 90HOTLINE 0, 0, 0, 0, 0, MEP_StraightLength, 0call "2dLinear_Element" PARAMETERS ALL MEP_offset_z=MEP_offset_z, MEP_offset_y=MEP_offset_y, MEP_StraightLength=MEP_StraightLength, hide_text = calledparamIF pipe_show and not(show_axis) THEN		! -----> pipe flanges <----- !	MATERIAL gs_PipeMat		hotspot 0,pipeDiameterA/2,0		hotspot 0,-pipeDiameterA/2,0		hotspot pipeDiameterA/2,0,0		hotspot -pipeDiameterA/2,0,0		HOTARC pipeDiameterA/2, 0, 360,hID : hID = hID+1		ADD -MEP_offset_z, MEP_offset_y, MEP_StraightLength		hotspot 0,pipeDiameterB/2,0		hotspot 0,-pipeDiameterB/2,0		hotspot pipeDiameterB/2,0,0		hotspot -pipeDiameterB/2,0,0		HOTARC pipeDiameterB/2, 0, 360,hID : hID = hID+1		del 1	IF flangeout1>EPS THEN		if gs_detlevel_3D_m = 1 then			ss = 16+32			model Wire		else			ss = 4+16+32		endif		EXTRUDE 2, 0, 0, -flangeout1, ss,			0, 0, 901,			pipeDiameterA/2, 360, 4001		hotspot 0,pipeDiameterA/2,-flangeout1		hotspot 0,-pipeDiameterA/2,-flangeout1		hotspot pipeDiameterA/2,0,-flangeout1		hotspot -pipeDiameterA/2,0,-flangeout1		BASE		VERT    0,    0,    0		VERT    pipeDiameterA/2,    0,    0		VERT    0,    1,	0		VERT    0,    0,    1		COOR    3,    -1,   -2,    -3,    -4		BODY -1		addz -flangeout1		HOTARC pipeDiameterA/2, 0, 360,hID : hID = hID+1		DEL 1		model solid	endif	IF flangeout2>EPS THEN		if gs_detlevel_3D_m = 1 then			ss = 16+32			model Wire		else			ss = 4+16+32		endif		ADD -MEP_offset_z, MEP_offset_y, MEP_StraightLength		EXTRUDE 2, 0, 0, flangeout2, ss,			0, 0, 901,			pipeDiameterB/2, 360, 4001		addz flangeout2		hotspot 0,pipeDiameterB/2,0		hotspot 0,-pipeDiameterB/2,0		hotspot pipeDiameterB/2,0,0		hotspot -pipeDiameterB/2,0,0		HOTARC pipeDiameterB/2, 0, 360,hID : hID = hID+1		BASE		VERT    0,    0,    0		VERT    pipeDiameterB/2,    0,    0		VERT    0,    1,    0		VERT    0,    0,    1		COOR    3,    -1,   -2,    -3,    -4		BODY -1		DEL 1		model solid	ENDIF	IF flangeA THEN		EXTRUDE 2, 0, 0, connectorWidthA, 1+addStatus2+16+32,			0, 0, 901,			connectorDiameterA/2, 360, 4001		IF connectorDiameterA-pipeDiameterA > EPS AND operatedMode < EPS THEN			ADDz connectorWidthA			POLY_ 4,				0, 0, 901,				connectorDiameterA/2, 360, 4001,				0, 0, 901,				pipeDiameterA/2, 360, 4001			DEL 1		ENDIF		BASE		VERT    0,    0,    0		VERT    connectorDiameterA/2,    0,    0		VERT    0,    1,    0		VERT    0,    0,    1		COOR    3,    -1,   -2,    -3,    -4		BODY -1	ENDIF	IF flangeB THEN		ADD -MEP_offset_z, MEP_offset_y, MEP_StraightLength-connectorWidthB		EXTRUDE 2, 0, 0, connectorWidthB, addStatus1+2+16+32,			0, 0, 901,			connectorDiameterB/2, 360, 4001		IF connectorDiameterB-pipeDiameterB > 0 AND operatedMode < EPS THEN			POLY_ 4,				0, 0, 901,				connectorDiameterB/2, 360, 4001,				0, 0, 901,				pipeDiameterB/2, 360, 4001		ENDIF		BASE		VERT    0,    0,    0		VERT    connectorDiameterB/2,    0,    0		VERT    0,    1,    0		VERT    0,    0,    1		COOR    3,    -1,   -2,    -3,    -4		BODY -1		DEL 1	ENDIFENDIFDEL 2IF MEP_InsShow and show_isol and not(show_axis) THEN			! -----> insulation <----- !	MATERIAL gs_InsMat	pipeRadius = MEP_NumConnectionData[1][12]/2	IF MEP_NumberConnections > 2 THEN		ith = MEP_InsThickness		insul = 1		GOSUB 200		GROUP "pipeStraightIns"	ENDIF	XFORM   MEP_Position[2][1], MEP_Position[3][1], dZx, MEP_Position[1][1],			MEP_Position[2][2], MEP_Position[3][2], dZy, MEP_Position[1][2],			MEP_Position[2][3], MEP_Position[3][3], dZz, MEP_Position[1][3]	ROTy 90	IF ABS(pipeDiameterA-pipeDiameterB) < EPS THEN		ADDz cutbackIA		EXTRUDE 2, -MEP_offset_z, MEP_offset_y, MEP_StraightLength-cutbackIA-cutbackIB, addStatus3+16+32,			0, 0, 901,			pipeDiameterA/2+MEP_InsThickness, 360, 4001		DEL 1	ELSE		IF flangeA THEN			EXTRUDE 2, 0, 0, connectorWidthA, 16,				0, 0, 901,				pipeDiameterA/2+MEP_InsThickness, 360, 4001		ENDIF		ADDz connectorWidthA		alpha_i = 360/res		rr = pipeDiameterA/2+MEP_InsThickness		yy = 0: zz = 0: mm = 1		GOSUB 100		rr = pipeDiameterB/2+MEP_InsThickness		yy = MEP_offset_y: zz = -MEP_offset_z: mm = MEP_StraightLength-connectorWidthA-connectorWidthB		GOSUB 100		RULED NSP/6, addStatus3+4+16*NOT(flangeA)+32*NOT(flangeB),			GET(NSP)		DEL 1		IF flangeB THEN			ADD -MEP_offset_z, MEP_offset_y, MEP_StraightLength-connectorWidthB			EXTRUDE 2, 0, 0, connectorWidthB, addStatus3+32,				0, 0, 901,				pipeDiameterB/2+MEP_InsThickness, 360, 4001			DEL 1		ENDIF	ENDIF	DEL 2	IF MEP_NumberConnections > 2 THEN		ENDGROUP		PLACEGROUP SUBGROUP("pipeStraightIns", "holesIns")	ENDIF	XFORM   MEP_Position[2][1], MEP_Position[3][1], dZx, MEP_Position[1][1],			MEP_Position[2][2], MEP_Position[3][2], dZy, MEP_Position[1][2],			MEP_Position[2][3], MEP_Position[3][3], dZz, MEP_Position[1][3]	ROTy 90	BASE	VERT    0,    0,    0	VERT    pipeDiameterA/2+MEP_InsThickness,    0,    0	VERT    0,    1,    0	VERT    0,    0,    1	COOR    3,    -1,   -2,    -3,    -4	DEL 2	BODY -1ENDIFEND100:	alpha = 0	FOR i = 1 TO res		PUT rr*COS(alpha)+zz, rr*SIN(alpha)+yy, mm		alpha = alpha + alpha_i	NEXT iRETURN200:	IF insul < 1 THEN		GROUP "holes"	ELSE		GROUP "holesIns"	ENDIF	FOR j = 3 TO MEP_NumberConnections		holeRadius = MEP_NumConnectionData[j][12]/2 + ith - 0.00002		DIM tMatrix[][]		tMatrix[1][1] = MEP_NumConnectionData[j][4]		tMatrix[1][2] = MEP_NumConnectionData[j][5]		tMatrix[1][3] = MEP_NumConnectionData[j][6]		tMatrix[2][1] = MEP_NumConnectionData[j][7]		tMatrix[2][2] = MEP_NumConnectionData[j][8]		tMatrix[2][3] = MEP_NumConnectionData[j][9]		tMatrix[3][1] = -tMatrix[2][2]*tMatrix[1][3]+tMatrix[2][3]*tMatrix[1][2]		tMatrix[3][2] = -tMatrix[2][3]*tMatrix[1][1]+tMatrix[2][1]*tMatrix[1][3]		tMatrix[3][3] = -tMatrix[2][1]*tMatrix[1][2]+tMatrix[2][2]*tMatrix[1][1]		posX = MEP_NumConnectionData[j][1]		posY = MEP_NumConnectionData[j][2]		posZ = MEP_NumConnectionData[j][3]		XFORM	tMatrix[1][1], tMatrix[2][1], tMatrix[3][1], posX,				tMatrix[1][2], tMatrix[2][2], tMatrix[3][2], posY,				tMatrix[1][3], tMatrix[2][3], tMatrix[3][3], posZ		ROTy 90		ax = MEP_Position[2][1]		ay = MEP_Position[2][2]		az = MEP_Position[2][3]		bx = MEP_NumConnectionData[j][7]		by = MEP_NumConnectionData[j][8]		bz = MEP_NumConnectionData[j][9]		arcVal = (ax*bx + ay*by + az*bz)/((SQR(ax^2+ay^2+az^2))*(SQR(bx^2+by^2+bz^2)))		IF arcVal < -1 THEN arcVal = -1		IF arcVal > 1 THEN arcVal = 1		angY = ACS(arcVal)		bx = MEP_NumConnectionData[j][4]		by = MEP_NumConnectionData[j][5]		bz = MEP_NumConnectionData[j][6]		arcVal = (ax*bx + ay*by + az*bz)/((SQR(ax^2+ay^2+az^2))*(SQR(bx^2+by^2+bz^2)))		IF arcVal < -1 THEN arcVal = -1		IF arcVal > 1 THEN arcVal = 1		ang = ACS(arcVal)		sinang = SIN(ang)		if abs(sinang) > 0.000001 then			dist = pipeRadius/sinang+MEP_NumConnectionData[j][23]		else			dist = MEP_NumConnectionData[j][23]		endif		ADDz -dist		angY_temp = angY		IF angY_temp > 90 THEN angY = 90 - ang		IF angY_temp < 90 THEN angY = ang - 90		CUTPLANE 180-angY		ADDz -dist		dist = dist*6!!		CUTPOLYA 2, 2, dist,		PRISM_ 2, dist,			0, 0, 908,			holeRadius, 360, 4008		CUTEND		DEL 4	NEXT j	ENDGROUPRETURN