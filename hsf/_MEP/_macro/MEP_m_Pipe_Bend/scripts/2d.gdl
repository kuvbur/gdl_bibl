if show_el=0 then endPEN gs_cont_penIF gs_fill_pen THEN SET FILL gs_fill_typeHptsUnIDBeginForConnEnds = 30000hceID_1 = HptsUnIDBeginForConnEnds+100hceID_2 = HptsUnIDBeginForConnEnds+200HOTSPOT2 MEP_Position[1][1]+outCoords[1][1], MEP_Position[1][2]+outCoords[1][2], hceID_1HOTSPOT2 MEP_Position[1][1]+outCoords[2][1], MEP_Position[1][2]+outCoords[2][2], HptsUnIDBeginForConnEndsHOTSPOT2 MEP_Position[1][1]+outCoords[3][1], MEP_Position[1][2]+outCoords[3][2], hceID_2IF MEP_cline_show THEN		! -----> center line <----- !	PEN MEP_cline_pen	SET LINE_TYPE MEP_cline_type	ADD2 MEP_Position[1][1], MEP_Position[1][2]	dX = MEP_Position[2][1]	dY = MEP_Position[2][2]	length = SQR((dX)^2+(dY)^2)	IF length THEN		arc_val = dX/length		IF arc_val > 1-EPS THEN arc_val = 1		IF arc_val < -1+EPS THEN arc_val = -1		alpha = ACS(arc_val)	ELSE		dX = outCoords[coordinates][1]		dY = outCoords[coordinates][2]		length = SQR((dX)^2+(dY)^2)		arc_val = dX/length		IF arc_val > 1-EPS THEN arc_val = 1		IF arc_val < -1+EPS THEN arc_val = -1		alpha = ACS(arc_val)	ENDIF	IF SGN(dY) = -1 THEN alpha = 360-alpha	alphaS = alpha	dX = outCoords[coordinates][1]	dY = outCoords[coordinates][2]	length = SQR((dX)^2+(dY)^2)	IF length THEN		arc_val = dX/length		IF arc_val > 1-EPS THEN arc_val = 1		IF arc_val < -1+EPS THEN arc_val = -1		alpha = ACS(arc_val)	ELSE		dX = MEP_Position[2][1]		dY = MEP_Position[2][2]		length = SQR((dX)^2+(dY)^2)		arc_val = dX/length		IF arc_val > 1-EPS THEN arc_val = 1		IF arc_val < -1+EPS THEN arc_val = -1		alpha = ACS(arc_val)	ENDIF	IF SGN(dY) = -1 THEN alpha = 360-alpha	alphaE = alpha	alpha_i = (alphaE-alphaS)/(pnum-1)	alpha = alphaS	PUT outCoords[1][1], outCoords[1][2], alpha	FOR i = 1 TO pnum		PUT outCoords[3+i][1], outCoords[3+i][2], alpha		IF i < pnum THEN alpha = alpha + alpha_i	NEXT i	PUT outCoords[3][1], outCoords[3][2], alpha	SPLINE2 NSP/3, 2,			GET(NSP)	DEL 1	PEN gs_cont_pen	SET LINE_TYPE SYMB_LINETYPEENDIFIF ABS(MEP_Position[2][3]) < EPS AND ABS(MEP_Position[3][3]) < EPS AND ABS(pipeDiameterA-pipeDiameterB) < EPS THEN	 aa = MEP_Position[2][1]	 bb = MEP_Position[2][2]	 arCosVal = aa/1	IF ABS(arCosVal) > 1 AND SGN(arCosVal) = -1 THEN arCosVal = -1	IF ABS(arCosVal) > 1 AND SGN(arCosVal) = 1 THEN arCosVal = 1	alpha = ACS(arCosVal)	IF SGN(bb) = -1 THEN alpha = 360-alpha	GOSUB 10 						! --- analizing of arc-direction	ADD2 MEP_Position[1][1], MEP_Position[1][2]	ROT2 alpha	ADD2 connectorWidthA, 0	MUL2 1, SGN(outCoords[1][2])	pipeRadiusA = pipeDiameterA/2	connectorRadiusA = connectorDiameterA/2	pipeHalfWidthX = pipeRadiusA*SIN(bendAngle)	pipeHalfWidthY = pipeRadiusA*COS(bendAngle)		IF extendA THEN			PUT -connectorWidthA, -pipeRadiusA, 1			PUT -connectorWidthA, pipeRadiusA, 1		ENDIF		PUT 0, pipeRadiusA, 1		IF ABS(MEP_BendRadius-pipeRadiusA) > EPS THEN PUT 0, MEP_BendRadius, 901		IF ABS(MEP_BendRadius-pipeRadiusA) > EPS THEN PUT MEP_BendRadius*SIN(bendAngle)-pipeHalfWidthX, MEP_BendRadius*(1-COS(bendAngle))+pipeHalfWidthY, 3001		IF extendB THEN			PUT MEP_BendRadius*SIN(bendAngle)-pipeHalfWidthX+connectorWidthB*COS(bendAngle), MEP_BendRadius*(1-COS(bendAngle))+pipeHalfWidthY+connectorWidthB*SIN(bendAngle), 1			PUT MEP_BendRadius*SIN(bendAngle)+pipeHalfWidthX+connectorWidthB*COS(bendAngle), MEP_BendRadius*(1-COS(bendAngle))-pipeHalfWidthY+connectorWidthB*SIN(bendAngle), 1		ENDIF		PUT MEP_BendRadius*SIN(bendAngle)+pipeHalfWidthX, MEP_BendRadius*(1-COS(bendAngle))-pipeHalfWidthY, 1		PUT 0, MEP_BendRadius, 901		PUT 0, -pipeRadiusA, 3001	POLY2_B NSP/3, 1+2+4+64, gs_fill_pen, gs_back_pen,		GET (NSP)	IF flangeA THEN			PUT 0, -connectorRadiusA, 1			PUT -connectorWidthA, -connectorRadiusA, 1			PUT -connectorWidthA, connectorRadiusA, 1			PUT 0, connectorRadiusA, 1		POLY2_B NSP/3, 1+2+4+64, gs_fill_pen, gs_back_pen,			GET (NSP)	ENDIF	IF flangeB THEN		 connectorRadiusB = connectorDiameterB/2		 connectorHalfWidthBX = connectorRadiusB*SIN(bendAngle)		 connectorHalfWidthBY = connectorRadiusB*COS(bendAngle)		 connectorWidthBX = connectorWidthB*COS(bendAngle)		 connectorWidthBY = connectorWidthB*SIN(bendAngle)		PUT MEP_BendRadius*SIN(bendAngle)-connectorHalfWidthBX, MEP_BendRadius*(1-COS(bendAngle))+connectorHalfWidthBY, 1		PUT MEP_BendRadius*SIN(bendAngle)+connectorWidthB*COS(bendAngle)-connectorHalfWidthBX, MEP_BendRadius*(1-COS(bendAngle))+connectorWidthB*SIN(bendAngle)+connectorHalfWidthBY, 1		PUT MEP_BendRadius*SIN(bendAngle)+connectorWidthB*COS(bendAngle)+connectorHalfWidthBX, MEP_BendRadius*(1-COS(bendAngle))+connectorWidthB*SIN(bendAngle)-connectorHalfWidthBY, 1		PUT MEP_BendRadius*SIN(bendAngle)+connectorHalfWidthBX, MEP_BendRadius*(1-COS(bendAngle))-connectorHalfWidthBY, 1		POLY2_B NSP/3, 1+2+4+64, gs_fill_pen, gs_back_pen,			GET (NSP)	ENDIF	IF MEP_InsShow THEN			! -----> insulation <----- !		pipeInsHalfWidthA = pipeRadiusA+MEP_InsThickness		pipeInsHalfWidthBX = pipeInsHalfWidthA*SIN(bendAngle)		pipeInsHalfWidthBY = pipeInsHalfWidthA*COS(bendAngle)		IF NOT(cutbackIA) THEN			PUT -connectorWidthA, -pipeInsHalfWidthA, 1			PUT -connectorWidthA, pipeInsHalfWidthA, 1		ENDIF		PUT 0, pipeInsHalfWidthA, 1		PUT 0, MEP_BendRadius, 901		PUT MEP_BendRadius*SIN(bendAngle)-pipeInsHalfWidthBX, MEP_BendRadius*(1-COS(bendAngle))+pipeInsHalfWidthBY, 3001		IF NOT(cutbackIB) THEN			PUT MEP_BendRadius*SIN(bendAngle)+connectorWidthB*COS(bendAngle)-pipeInsHalfWidthBX, MEP_BendRadius*(1-COS(bendAngle))+connectorWidthB*SIN(bendAngle)+pipeInsHalfWidthBY, 1			PUT MEP_BendRadius*SIN(bendAngle)+connectorWidthB*COS(bendAngle)+pipeInsHalfWidthBX, MEP_BendRadius*(1-COS(bendAngle))+connectorWidthB*SIN(bendAngle)-pipeInsHalfWidthBY, 1		ENDIF		PUT MEP_BendRadius*SIN(bendAngle)+pipeInsHalfWidthBX, MEP_BendRadius*(1-COS(bendAngle))-pipeInsHalfWidthBY, 1		PUT 0, MEP_BendRadius, 901		PUT 0, -pipeInsHalfWidthA, 3001		IF NOT(cutbackIA) THEN			PUT -connectorWidthA, -pipeInsHalfWidthA, 1		ELSE			PUT 0, pipeInsHalfWidthA, 1		ENDIF		POLY2_ NSP/3, 1,			GET (NSP)	ENDIF	DEL 4ELSE	SET FILL gs_fill_type	PEN gs_cont_pen	IF gs_fill_pen THEN PEN gs_fill_pen	PROJECT2{3} 3, 270, 3+32, 4, gs_back_pen, 0, 0, 0, PARAMETERS pipe_show = 1, MEP_InsShow = 0, MEP_cline_show_3D = 0, gs_detlevel_3D = `Детальный`	PEN gs_cont_pen	PROJECT2{3} 3, 270, 2, 2+8, 0, 0, 0, 0, PARAMETERS pipe_show = 1, MEP_InsShow = 0, MEP_cline_show_3D = 0, gs_detlevel_3D = `Детальный`	IF MEP_InsShow THEN PROJECT2{3} 3, 270, 2, 8, gs_back_pen, 0, 0, 0, PARAMETERS pipe_show = 0, MEP_InsShow = 1, MEP_cline_show_3D = 0, gs_detlevel_3D = `Детальный`ENDIFEND10:		DIM MatrixT[2][2]		MatrixT[1][1] = MEP_Position[2][1]		MatrixT[1][2] = -MEP_Position[2][2]		MatrixT[2][1] = -COS(alpha+90)		MatrixT[2][2] = SIN(alpha+90)		! --- Input Coordinates		Coordinates = 1		DIM inCoords[10][2]			inCoords[1][1] = MEP_Position[3][1]			inCoords[1][2] = MEP_Position[3][2]		! --- the Matrix Operation, what makes the Output-Coordinates		DIM outCoords[10][2]		cnum = 1		outCoords[cnum][1] = inCoords[cnum][1]*MatrixT[1][1]+inCoords[cnum][2]*MatrixT[2][1]		outCoords[cnum][2] = inCoords[cnum][1]*MatrixT[1][2]+inCoords[cnum][2]*MatrixT[2][2]RETURN