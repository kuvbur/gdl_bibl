!-----------2d---------------------
if show_el < EPS then end
IF gs_detlevel_2D_m < EPS THEN END
if hide_conventions and show_conventions then end
if GLOB_PREVIEW_MODE = 0 and GLOB_FEEDBACK_MODE = 0 then CALL "MEP_m_RequestSystemGlobals" PARAMETERS ALL one_ConID=0 returned_parameters gs_cont_pen, gs_fill_type, gs_fill_pen, gs_back_pen, MEP_cline_type, MEP_cline_pen, show_el

PEN gs_cont_pen
IF gs_fill_pen THEN SET FILL gs_fill_type

HptsUnIDBeginForConnEnds = 30000

hceID_1 = HptsUnIDBeginForConnEnds+100
hceID_2 = HptsUnIDBeginForConnEnds+200

HOTSPOT2 MEP_Position[1][1]+outCoords[1][1], MEP_Position[1][2]+outCoords[1][2], hceID_1
HOTSPOT2 MEP_Position[1][1]+outCoords[2][1], MEP_Position[1][2]+outCoords[2][2], HptsUnIDBeginForConnEnds
HOTSPOT2 MEP_Position[1][1]+outCoords[3][1], MEP_Position[1][2]+outCoords[3][2], hceID_2


if (flangeout1>EPS) then
	pipeDiameterA = pipeDiameterA +0.006
	pipeDiameterB = pipeDiameterB +0.006
	connectorDiameterA = connectorDiameterA +0.006
	connectorDiameterB = connectorDiameterB +0.006
endif


IF  (show_axis_and or show_axis) AND MEP_BendAngle*(pi/180)*MEP_BendRadius > EPS THEN		! -----> center line <----- !
	PEN MEP_cline_pen
	SET LINE_TYPE MEP_cline_type

	ADD2 MEP_Position[1][1], MEP_Position[1][2]

	dX = MEP_Position[2][1]
	dY = MEP_Position[2][2]

	length = SQR((dX)^2+(dY)^2)
	IF length THEN
		arc_val = dX/length
		IF arc_val > 1-EPS THEN arc_val = 1
		IF arc_val < -1+EPS THEN arc_val = -1
		alpha = ACS(arc_val)
	ELSE
		dX = outCoords[coordinates][1]
		dY = outCoords[coordinates][2]

		length = SQR((dX)^2+(dY)^2)

		arc_val = dX/length
		IF arc_val > 1-EPS THEN arc_val = 1
		IF arc_val < -1+EPS THEN arc_val = -1
		alpha = ACS(arc_val)
	ENDIF

	IF SGN(dY) = -1 THEN alpha = 360-alpha

	alphaS = alpha

	dX = outCoords[coordinates][1]
	dY = outCoords[coordinates][2]

	length = SQR((dX)^2+(dY)^2)
	IF length THEN
		arc_val = dX/length
		IF arc_val > 1-EPS THEN arc_val = 1
		IF arc_val < -1+EPS THEN arc_val = -1
		alpha = ACS(arc_val)
	ELSE
		dX = MEP_Position[2][1]
		dY = MEP_Position[2][2]

		length = SQR((dX)^2+(dY)^2)

		arc_val = dX/length
		IF arc_val > 1-EPS THEN arc_val = 1
		IF arc_val < -1+EPS THEN arc_val = -1
		alpha = ACS(arc_val)
	ENDIF

	IF SGN(dY) = -1 THEN alpha = 360-alpha

	alphaE = alpha
	alpha_i = (alphaE-alphaS)/(pnum-1)
	alpha = alphaS

	PUT outCoords[1][1], outCoords[1][2], alpha
	FOR i = 1 TO pnum
		PUT outCoords[3+i][1], outCoords[3+i][2], alpha
		IF i < pnum THEN alpha = alpha + alpha_i
	NEXT i
	PUT outCoords[3][1], outCoords[3][2], alpha

	SPLINE2 NSP/3, 2,
			GET(NSP)

	DEL 1

	PEN gs_cont_pen
	SET LINE_TYPE SYMB_LINETYPE
ENDIF

IF ABS(MEP_Position[2][3]) < EPS AND ABS(MEP_Position[3][3]) < EPS AND ABS(pipeDiameterA-pipeDiameterB) < EPS THEN

	 aa = MEP_Position[2][1]
	 bb = MEP_Position[2][2]

	 arCosVal = aa/1
	IF ABS(arCosVal) > 1 AND SGN(arCosVal) = -1 THEN arCosVal = -1
	IF ABS(arCosVal) > 1 AND SGN(arCosVal) = 1 THEN arCosVal = 1
	alpha = ACS(arCosVal)
	IF SGN(bb) = -1 THEN alpha = 360-alpha

	GOSUB 10 						! --- analizing of arc-direction

	ADD2 MEP_Position[1][1], MEP_Position[1][2]

	ROT2 alpha
	ADD2 connectorWidthA, 0
	MUL2 1, SGN(outCoords[1][2])

	pipeRadiusA = pipeDiameterA/2
	connectorRadiusA = connectorDiameterA/2
	pipeHalfWidthX = pipeRadiusA*SIN(bendAngle)
	pipeHalfWidthY = pipeRadiusA*COS(bendAngle)

	if not(show_axis) then
		IF extendA THEN
			PUT -connectorWidthA, -pipeRadiusA, 1
			PUT -connectorWidthA, pipeRadiusA, 1
		ENDIF

		IF flangeout1>EPS THEN
			PUT -flangeout1, -pipeRadiusA, 1
			PUT -flangeout1, pipeRadiusA, 1
			hotspot2 -flangeout1, -pipeRadiusA
			hotspot2 -flangeout1, pipeRadiusA
			line2 0, -pipeRadiusA,0, pipeRadiusA
			hotline2 -flangeout1, -pipeRadiusA, -flangeout1, pipeRadiusA
		ENDIF
		hotline2 0, -pipeRadiusA, 0, pipeRadiusA
		PUT 0, pipeRadiusA, 1
		IF ABS(MEP_BendRadius-pipeRadiusA) > EPS THEN PUT 0, MEP_BendRadius, 901
		IF ABS(MEP_BendRadius-pipeRadiusA) > EPS THEN PUT MEP_BendRadius*SIN(bendAngle)-pipeHalfWidthX, MEP_BendRadius*(1-COS(bendAngle))+pipeHalfWidthY, 3001
		IF extendB THEN
			PUT MEP_BendRadius*SIN(bendAngle)-pipeHalfWidthX+connectorWidthB*COS(bendAngle), MEP_BendRadius*(1-COS(bendAngle))+pipeHalfWidthY+connectorWidthB*SIN(bendAngle), 1
			PUT MEP_BendRadius*SIN(bendAngle)+pipeHalfWidthX+connectorWidthB*COS(bendAngle), MEP_BendRadius*(1-COS(bendAngle))-pipeHalfWidthY+connectorWidthB*SIN(bendAngle), 1
		ENDIF

		IF flangeout1>EPS THEN
			x1 = MEP_BendRadius*SIN(bendAngle)-pipeHalfWidthX+flangeout1*COS(bendAngle)
			x2 = MEP_BendRadius*SIN(bendAngle)+pipeHalfWidthX+flangeout1*COS(bendAngle)
			
			y1 = MEP_BendRadius*(1-COS(bendAngle))+pipeHalfWidthY+flangeout1*SIN(bendAngle)
			y2 = MEP_BendRadius*(1-COS(bendAngle))-pipeHalfWidthY+flangeout1*SIN(bendAngle)

			PUT x1, y1, 1
			PUT x2, y2, 1
			hotspot2 x1, y1
			hotspot2 x2, y2
			line2 x1, y1, x2, y2
			hotline2 x1, y1, x2, y2
			line2 MEP_BendRadius*SIN(bendAngle)-pipeHalfWidthX, MEP_BendRadius*(1-COS(bendAngle))+pipeHalfWidthY, MEP_BendRadius*SIN(bendAngle)+pipeHalfWidthX, MEP_BendRadius*(1-COS(bendAngle))-pipeHalfWidthY
		ENDIF
		hotline2 MEP_BendRadius*SIN(bendAngle)-pipeHalfWidthX, MEP_BendRadius*(1-COS(bendAngle))+pipeHalfWidthY, MEP_BendRadius*SIN(bendAngle)+pipeHalfWidthX, MEP_BendRadius*(1-COS(bendAngle))-pipeHalfWidthY

		PUT MEP_BendRadius*SIN(bendAngle)+pipeHalfWidthX, MEP_BendRadius*(1-COS(bendAngle))-pipeHalfWidthY, 1
		PUT 0, MEP_BendRadius, 901
		PUT 0, -pipeRadiusA, 3001

		POLY2_B NSP/3, 1+2+4+64, gs_fill_pen, gs_back_pen, GET (NSP)
	
		IF flangeA THEN
				PUT 0, -connectorRadiusA, 1
				PUT -connectorWidthA, -connectorRadiusA, 1
				PUT -connectorWidthA, connectorRadiusA, 1
				PUT 0, connectorRadiusA, 1
	
			POLY2_B NSP/3, 1+2+4+64, gs_fill_pen, gs_back_pen, GET (NSP)
		ENDIF
	
		IF flangeB THEN
			 connectorRadiusB = connectorDiameterB/2
			 connectorHalfWidthBX = connectorRadiusB*SIN(bendAngle)
			 connectorHalfWidthBY = connectorRadiusB*COS(bendAngle)
			 connectorWidthBX = connectorWidthB*COS(bendAngle)
			 connectorWidthBY = connectorWidthB*SIN(bendAngle)
	
			PUT MEP_BendRadius*SIN(bendAngle)-connectorHalfWidthBX, MEP_BendRadius*(1-COS(bendAngle))+connectorHalfWidthBY, 1
			PUT MEP_BendRadius*SIN(bendAngle)+connectorWidthB*COS(bendAngle)-connectorHalfWidthBX, MEP_BendRadius*(1-COS(bendAngle))+connectorWidthB*SIN(bendAngle)+connectorHalfWidthBY, 1
			PUT MEP_BendRadius*SIN(bendAngle)+connectorWidthB*COS(bendAngle)+connectorHalfWidthBX, MEP_BendRadius*(1-COS(bendAngle))+connectorWidthB*SIN(bendAngle)-connectorHalfWidthBY, 1
			PUT MEP_BendRadius*SIN(bendAngle)+connectorHalfWidthBX, MEP_BendRadius*(1-COS(bendAngle))-connectorHalfWidthBY, 1
	
			POLY2_B NSP/3, 1+2+4+64, gs_fill_pen, gs_back_pen, GET (NSP)
		ENDIF
	endif

	IF (MEP_InsShow and show_isol and not(show_axis)) THEN			! -----> insulation <----- !

		pipeInsHalfWidthA = pipeRadiusA+MEP_InsThickness
		pipeInsHalfWidthBX = pipeInsHalfWidthA*SIN(bendAngle)
		pipeInsHalfWidthBY = pipeInsHalfWidthA*COS(bendAngle)

		IF NOT(cutbackIA) THEN
			PUT -connectorWidthA, -pipeInsHalfWidthA, 1
			PUT -connectorWidthA, pipeInsHalfWidthA, 1
		ENDIF

		PUT 0, pipeInsHalfWidthA, 1
		coordX = MEP_BendRadius*SIN(bendAngle)-pipeInsHalfWidthBX
		coordY = MEP_BendRadius*(1-COS(bendAngle))+pipeInsHalfWidthBY
		IF ABS(coordX) > EPS OR ABS(coordY-pipeInsHalfWidthA) > EPS THEN
			PUT 0, MEP_BendRadius, 901
			PUT coordX, coordY, 3001
		ENDIF

		IF NOT(cutbackIB) THEN
			PUT MEP_BendRadius*SIN(bendAngle)+connectorWidthB*COS(bendAngle)-pipeInsHalfWidthBX, MEP_BendRadius*(1-COS(bendAngle))+connectorWidthB*SIN(bendAngle)+pipeInsHalfWidthBY, 1
			PUT MEP_BendRadius*SIN(bendAngle)+connectorWidthB*COS(bendAngle)+pipeInsHalfWidthBX, MEP_BendRadius*(1-COS(bendAngle))+connectorWidthB*SIN(bendAngle)-pipeInsHalfWidthBY, 1
		ENDIF

		PUT MEP_BendRadius*SIN(bendAngle)+pipeInsHalfWidthBX, MEP_BendRadius*(1-COS(bendAngle))-pipeInsHalfWidthBY, 1
		PUT 0, MEP_BendRadius, 901
		PUT 0, -pipeInsHalfWidthA, 3001

		IF NOT(cutbackIA) THEN
			PUT -connectorWidthA, -pipeInsHalfWidthA, 1
		ELSE
			PUT 0, pipeInsHalfWidthA, 1
		ENDIF

		POLY2_ NSP/3, 1, GET (NSP)
	ENDIF

	DEL 4
ELSE
	SET FILL gs_fill_type
	PEN gs_cont_pen
	IF gs_fill_pen THEN PEN gs_fill_pen
	if not(show_axis) then PROJECT2{3} 3, 270, 3+32, 4, gs_back_pen, 0, 0, 0, PARAMETERS pipe_show = 1, MEP_InsShow = 0, MEP_cline_show_3D = 0, gs_detlevel_3D_m = gs_detlevel_2D_m
	PEN gs_cont_pen
	if not(show_axis) then PROJECT2{3} 3, 270, 2, 2+8, 0, 0, 0, 0, PARAMETERS pipe_show = 1, MEP_InsShow = 0, MEP_cline_show_3D = 0, gs_detlevel_3D_m = gs_detlevel_2D_m
	IF (MEP_InsShow and show_isol and not(show_axis)) THEN PROJECT2{3} 3, 270, 2, 8, gs_back_pen, 0, 0, 0, PARAMETERS pipe_show = 0, MEP_InsShow = 1, MEP_cline_show_3D = 0, gs_detlevel_3D_m = gs_detlevel_2D_m
	IF ((MEP_cline_show and show_axis_and) or show_axis) then
		PEN MEP_cline_pen
		SET LINE_TYPE MEP_cline_type
		PROJECT2{3} 3, 270, 2, 8, gs_back_pen, 0, 0, 0, PARAMETERS pipe_show = 0, MEP_InsShow = 0, MEP_cline_show_3D = 1, gs_detlevel_3D_m = 2
		PEN gs_cont_pen
		SET LINE_TYPE 1
	endif
ENDIF


END

10:
		DIM MatrixT[2][2]

		MatrixT[1][1] = MEP_Position[2][1]
		MatrixT[1][2] = -MEP_Position[2][2]

		MatrixT[2][1] = -COS(alpha+90)
		MatrixT[2][2] = SIN(alpha+90)

		! --- Input Coordinates

		Coordinates = 1

		DIM inCoords[10][2]

			inCoords[1][1] = MEP_Position[3][1]
			inCoords[1][2] = MEP_Position[3][2]

		! --- the Matrix Operation, what makes the Output-Coordinates

		DIM outCoords[10][2]
		cnum = 1
		outCoords[cnum][1] = inCoords[cnum][1]*MatrixT[1][1]+inCoords[cnum][2]*MatrixT[2][1]
		outCoords[cnum][2] = inCoords[cnum][1]*MatrixT[1][2]+inCoords[cnum][2]*MatrixT[2][2]
RETURN
