!-----------3d---------------------if show_el < EPS then endif GLOB_VIEW_TYPE=2 then gs_detlevel_3D_m = gs_detlevel_2D_mif (GLOB_PREVIEW_MODE or GLOB_FEEDBACK_MODE or GLOB_SEO_TOOL_MODE and gs_detlevel_3D_m > EPS) then gs_detlevel_3D_m = 1IF gs_detlevel_3D_m < EPS THEN ENDif hide_conventions and show_conventions then endif GLOB_PREVIEW_MODE = 0 and GLOB_FEEDBACK_MODE = 0 then CALL "MEP_m_RequestSystemGlobals" PARAMETERS ALL one_ConID=0 returned_parameters gs_cont_pen, sMat, gs_InsMat, MEP_cline_pen, show_elgs_PipeMat = sMatpipe_show = pipe_show*not(show_axis) if show_axis then gs_cont_pen = MEP_cline_penRESOL resPEN gs_cont_penHptsUnIDBeginForConnEnds = 30000IF gs_detlevel_3D_m = 1 THEN 	SHADOW OFFelse	SHADOW ONendifif (flangeout1>EPS) then	pipeDiameterA = pipeDiameterA +0.006	pipeDiameterB = pipeDiameterB +0.006	connectorDiameterA = connectorDiameterA +0.006	connectorDiameterB = connectorDiameterB +0.006endifhceID_1 = HptsUnIDBeginForConnEnds+100hceID_2 = HptsUnIDBeginForConnEnds+200operatedMode = 0addStatus1 = 0addStatus2 = 0addStatus3 = 0IF GLOB_CONTEXT > 40 AND GLOB_CONTEXT < 50 THEN	operatedMode = 1	addStatus1 = 1	addStatus2 = 2	addStatus3 = 3ENDIFXFORM   MEP_Position[2][1], MEP_Position[3][1], dZx, MEP_Position[1][1],		MEP_Position[2][2], MEP_Position[3][2], dZy, MEP_Position[1][2],		MEP_Position[2][3], MEP_Position[3][3], dZz, MEP_Position[1][3]bendAngle = ABS(MEP_BendAngle)IF operatedMode THEN	ROTz -90	CUTPLANE 90	DEL 1	ADD connectorWidthA+MEP_BendRadius*SIN(bendAngle)+connectorWidthB*COS(bendAngle), MEP_BendRadius*(1-COS(bendAngle))+connectorWidthB*SIN(bendAngle), 0	ROTz 90+bendAngle	CUTPLANE 90	DEL 2ENDIFalpha_Res = 90/(INT(res/3))cRes = INT(bendAngle/alpha_Res)+1*(((bendAngle/alpha_Res)-INT(bendAngle/alpha_Res))>=0.5)IF NOT(cRes) THEN cRes = 1IF res < 9 THEN	IF bendAngle > 46 THEN		cRes = 2	ELSE		cRes = 1	ENDIFENDIFIF ((MEP_cline_show_3D and show_axis_and) or show_axis) AND operatedMode < EPS THEN		! -----> center line <----- !	PEN MEP_cline_pen	RESOL INT(360/(bendAngle/cRes))	IF NOT(cutbackCLA) THEN LIN_ 0, 0, 0, connectorWidthA, 0, 0	IF NOT(cutbackCLB) AND connectorWidthB THEN		ADDx connectorWidthA		LIN_ MEP_BendRadius*SIN(bendAngle), MEP_BendRadius*(1-COS(bendAngle)), 0, MEP_BendRadius*SIN(bendAngle)+connectorWidthB*COS(bendAngle), MEP_BendRadius*(1-COS(bendAngle))+connectorWidthB*SIN(bendAngle), 0		DEL 1	ENDIF	MODEL WIRE	MULy -1	ADD connectorWidthA, -MEP_BendRadius, 0	if show_axis then		ARC MEP_BendRadius, 90-bendAngle, bendAngle	else		ang_1 = bendAngle/16		ang_k = ang_1		ang_d = ang_k*1.5			for an_=90-bendAngle+ang_k*2+ang_d to bendAngle step ang_k*2+ang_d					ARC MEP_BendRadius, an_-ang_d-ang_k*2, an_-ang_d-ang_k					ARC MEP_BendRadius+0.001, an_-ang_d, an_-ang_k		!			ARC MEP_BendRadius-pipeDiameterA/2, 90-bendAngle, 90	!			ARC MEP_BendRadius+pipeDiameterA/2, 90-bendAngle, 90	!	!			ARC MEP_BendRadius, 90-bendAngle, 90	!			ARC MEP_BendRadius-pipeDiameterA/2, 90-bendAngle, 90	!			ARC MEP_BendRadius+pipeDiameterA/2, 90-bendAngle, 90			next an_	endif	DEL 2	MODEL SOLID	RESOL res	PEN gs_cont_penENDIFIF pipe_show and not(show_axis) THEN	IF showHtps THEN		HOTSPOT 0, 0, 0, hceID_1		HOTSPOT connectorWidthA+MEP_BendRadius*SIN(bendAngle)+connectorWidthB*COS(bendAngle), MEP_BendRadius*(1-COS(bendAngle))+connectorWidthB*SIN(bendAngle), 0, hceID_2		HOTSPOT connectorWidthA+MEP_BendRadius*(TAN(bendAngle/2)), 0, 0, HptsUnIDBeginForConnEnds	ENDIF	MATERIAL gs_PipeMat	IF MEP_BendAngle < 0.01 THEN		ROTy 90		EXTRUDE 2, 0, 0, EPS, addStatus3+16*(NOT(extendA) AND gs_EdgeOnEnds[1])+32*(NOT(extendB) AND gs_EdgeOnEnds[2]),			0, 0, 901,			pipeDiameterA/2, 360, 4001		DEL 1	ELSE		IF ABS(pipeDiameterA-pipeDiameterB) < EPS THEN			! -----> pipe bend <----- !			 pipeDiameter = pipeDiameterA			 pipeDiameter = min(pipeDiameter, 2 * (MEP_BendRadius - 0.0001))			 alpha_i = bendAngle/cRes			if abs(alpha_i)>0.1 then				PUT -MEP_BendRadius*SIN(alpha_i), MEP_BendRadius-MEP_BendRadius*COS(alpha_i), 0, 0				FOR i = 1 TO cRes+1					PUT MEP_BendRadius*SIN(alpha_i*(i-1)), MEP_BendRadius-MEP_BendRadius*COS(alpha_i*(i-1)), 0, 0				NEXT i				PUT MEP_BendRadius*SIN(alpha_i*(cRes+1)), MEP_BendRadius-MEP_BendRadius*COS(alpha_i*(cRes+1)), 0, 0				rr = (pipeDiameter/2)*COS(alpha_i/2)				ADDx connectorWidthA				MULz (pipeDiameter/2)/rr				TUBE 2, NSP/4, addStatus3+16*(NOT(extendA) AND gs_EdgeOnEnds[1])+32*(NOT(extendB) AND gs_EdgeOnEnds[2]),					0, 0, 901,					rr, 360, 4001,						GET(NSP)				DEL 2			endif			BASE			VERT    connectorWidthA,    MEP_BendRadius,    0			VERT    MEP_BendRadius*2,    MEP_BendRadius,    0			VERT    0,    MEP_BendRadius+1,	0			VERT    0,    MEP_BendRadius,    1			COOR    4,    -1,   -2,    -3,    -4			BODY -1		ELSE			ADDx connectorWidthA			MEP_BendRadius_temp = MEP_BendRadius			dRStart = pipeDiameterA/2			dREnd = pipeDiameterB/2			ADDy MEP_BendRadius			ROTz -90			ROTx -90			 alpha_i = bendAngle/cRes			 alphaSec_i = 360/res			 rr = dRStart			inA = MEP_BendRadius-dRStart			IF ABS(bendAngle-90) < EPS THEN				inB = MEP_BendRadius-dREnd			ELSE				inB = MEP_BendRadius-dREnd				iX = inB*COS(bendAngle)				iY = inB*SIN(bendAngle)				inB = SQR(ABS((iY^2)/(1-(iX/inA)^2)))			ENDIF			IF ABS(inA) < EPS THEN inA = EPS			IF ABS(inB) < EPS THEN inB = EPS			outA = MEP_BendRadius+dRStart			IF ABS(bendAngle-90) < EPS THEN				outB = MEP_BendRadius+dREnd			ELSE				outB = MEP_BendRadius+dREnd				oX = outB*COS(bendAngle)				oY = outB*SIN(bendAngle)				outB = SQR(ABS((oY^2)/(1-(oX/outA)^2)))			ENDIF			IF ABS(outA) < EPS THEN outA = EPS			IF ABS(outB) < EPS THEN outB = EPS			FOR k = 1 TO cRes					FOR i = 1 TO res						PUT MEP_BendRadius+rr*COS(alphaSec_i*(i-1)), rr*SIN(alphaSec_i*(i-1)), 1					NEXT i					inX = SQR(1/(1/(inA^2)+((TAN(alpha_i*k))/inB)^2))					inY = inX*TAN(alpha_i*k)					outX = SQR(1/(1/(outA^2)+((TAN(alpha_i*k))/outB)^2))					outY = outX*TAN(alpha_i*k)					dia2 = SQR((outX-inX)^2+(outY-inY)^2)					rr = dia2/2					MEP_BendRadius = SQR(inX^2+inY^2)					MEP_BendRadius = MEP_BendRadius+rr					FOR i = 1 TO res						 dX = MEP_BendRadius+rr*COS(alphaSec_i*(i-1))						PUT dX*COS(alpha_i), rr*SIN(alphaSec_i*(i-1)), dX*SIN(alpha_i)					NEXT i				RULED NSP/6, addStatus3+4+16*(k = 1)+32*(k=cRes),					GET(NSP)				ROTy -alpha_i			NEXT k			DEL k+3			MEP_BendRadius = MEP_BendRadius_temp			BASE			VERT    connectorWidthA,    MEP_BendRadius,    0			VERT    MEP_BendRadius*2,    MEP_BendRadius,    0			VERT    0,    MEP_BendRadius+1,	0			VERT    0,    MEP_BendRadius,    1			COOR    4,    -1,   -2,    -3,    -4			BODY -1		ENDIF	ENDIF	IF flangeA THEN		ROTy 90		EXTRUDE 2, 0, 0, connectorWidthA, 1+addStatus2+16+32,			0, 0, 901,			connectorDiameterA/2, 360, 4001		IF connectorDiameterA-pipeDiameterA > EPS AND operatedMode < EPS THEN			ADDz connectorWidthA			POLY_ 4,				0, 0, 901,				connectorDiameterA/2, 360, 4001,				0, 0, 901,				pipeDiameterA/2, 360, 4001			DEL 1		ENDIF		BASE		VERT    0,    0,    0		VERT    connectorDiameterA/2,    0,    0		VERT    0,    1,	0		VERT    0,    0,    1		COOR    3,    -1,   -2,    -3,    -4		BODY -1		DEL 1	ENDIF	IF flangeout1>EPS THEN		if gs_detlevel_3D_m = 1 then			ss = 16+32			model Wire		else			ss = 4+16+32		endif		ROTy 90		EXTRUDE 2, 0, 0, -flangeout1, ss,			0, 0, 901,			pipeDiameterA/2, 360, 4001		hotspot 0,pipeDiameterA/2,-flangeout1		hotspot 0,-pipeDiameterA/2,-flangeout1		hotspot pipeDiameterA/2,0,-flangeout1		hotspot -pipeDiameterA/2,0,-flangeout1		BASE		VERT    0,    0,    0		VERT    pipeDiameterA/2,    0,    0		VERT    0,    1,	0		VERT    0,    0,    1		COOR    3,    -1,   -2,    -3,    -4		BODY -1		DEL 1		ADD connectorWidthA+MEP_BendRadius*SIN(bendAngle), MEP_BendRadius-MEP_BendRadius*COS(bendAngle), 0		ROTz bendAngle		ROTy 90		hotspot 0,pipeDiameterB/2,flangeout1		hotspot 0,-pipeDiameterB/2,flangeout1		hotspot pipeDiameterB/2,0,flangeout1		hotspot -pipeDiameterB/2,0,flangeout1		EXTRUDE 2, 0, 0, flangeout1, ss,			0, 0, 901,			pipeDiameterB/2, 360, 4001		BASE		VERT    0,    0,    0		VERT    pipeDiameterB/2,    0,    0		VERT    0,    1,	0		VERT    0,    0,    1		COOR    3,    -1,   -2,    -3,    -4		BODY -1		DEL 3		model solid	ENDIF	IF extendA THEN		ROTy 90		EXTRUDE 2, 0, 0, connectorWidthA, addStatus3+16,			0, 0, 901,			pipeDiameterA/2, 360, 4001		BASE		VERT    0,    0,    0		VERT    pipeDiameterA/2,    0,    0		VERT    0,    1,	0		VERT    0,    0,    1		COOR    3,    -1,   -2,    -3,    -4		BODY -1		DEL 1	ENDIF	IF flangeB THEN		ADD connectorWidthA+MEP_BendRadius*SIN(bendAngle), MEP_BendRadius-MEP_BendRadius*COS(bendAngle), 0		ROTz bendAngle		ROTy 90		EXTRUDE 2, 0, 0, connectorWidthB, addStatus1+2+16+32,			0, 0, 901,			connectorDiameterB/2, 360, 4001		IF connectorDiameterB-pipeDiameterB > EPS AND operatedMode < EPS THEN			POLY_ 4,				0, 0, 901,				connectorDiameterB/2, 360, 4001,				0, 0, 901,				pipeDiameterB/2, 360, 4001		ENDIF		BASE		VERT    0,    0,    0		VERT    connectorDiameterB/2,    0,    0		VERT    0,    1,	0		VERT    0,    0,    1		COOR    3,    -1,   -2,    -3,    -4		BODY -1		DEL 3	ENDIF	IF extendB THEN		ADD connectorWidthA+MEP_BendRadius*SIN(bendAngle), MEP_BendRadius-MEP_BendRadius*COS(bendAngle), 0		ROTz bendAngle		ROTy 90		EXTRUDE 2, 0, 0, connectorWidthB, addStatus3+32,			0, 0, 901,			pipeDiameterB/2, 360, 4001		BASE		VERT    0,    0,    0		VERT    pipeDiameterB/2,    0,    0		VERT    0,    1,	0		VERT    0,    0,    1		COOR    3,    -1,   -2,    -3,    -4		BODY -1		DEL 3	ENDIFENDIFIF (MEP_InsShow and show_isol and not(show_axis)) THEN			! -----> insulation <----- !	MATERIAL gs_InsMat	IF MEP_BendAngle < 0.01 THEN		ROTy 90		EXTRUDE 2, 0, 0, EPS, addStatus3+16*(NOT(flangeA) AND gs_EdgeOnEnds[1])+32*(NOT(flangeB) AND gs_EdgeOnEnds[2]),			0, 0, 901,			pipeDiameterA/2+MEP_InsThickness, 360, 4001		DEL 1	ELSE		IF ABS(pipeDiameterA-pipeDiameterB) < EPS THEN			 pipeDiameter = pipeDiameterA			 alpha_i = bendAngle/cRes			PUT -MEP_BendRadius*SIN(alpha_i), MEP_BendRadius-MEP_BendRadius*COS(alpha_i), 0, 0			FOR i = 1 TO cRes+1				PUT MEP_BendRadius*SIN(alpha_i*(i-1)), MEP_BendRadius-MEP_BendRadius*COS(alpha_i*(i-1)), 0, 0			NEXT i			PUT MEP_BendRadius*SIN(alpha_i*(cRes+1)), MEP_BendRadius-MEP_BendRadius*COS(alpha_i*(cRes+1)), 0, 0			rr = (pipeDiameter/2+MEP_InsThickness)*COS(alpha_i/2)			ADDx connectorWidthA			MULz (pipeDiameter/2+MEP_InsThickness)/rr			IF MEP_BendRadius-0.001 < rr THEN				dx = MEP_BendRadius-0.001				dy = SQR((rr)^2-(dx)^2)				TUBE 4, NSP/4, addStatus3+16*(NOT(flangeA) AND gs_EdgeOnEnds[1])+32*(NOT(flangeB) AND gs_EdgeOnEnds[2]),					dx, -dy, 1,					0, 0, 901,					-rr, 0, 3001,					dx, dy, 1001,					GET(NSP)			ELSE				TUBE 2, NSP/4, addStatus3+16*(NOT(flangeA) AND gs_EdgeOnEnds[1])+32*(NOT(flangeB) AND gs_EdgeOnEnds[2]),					0, 0, 901,					rr, 360, 4001,					GET(NSP)			ENDIF			DEL 2			pipeDiameterB = pipeDiameterA			BASE			VERT    connectorWidthA,    MEP_BendRadius,    0			VERT    MEP_BendRadius*2,    MEP_BendRadius,    0			VERT    0,    MEP_BendRadius+1,	0			VERT    0,    MEP_BendRadius,    1			COOR    4,    -1,   -2,    -3,    -4			BODY -1		ELSE			ADDx connectorWidthA			MEP_BendRadius_temp = MEP_BendRadius			dRStart = pipeDiameterA/2+MEP_InsThickness			dREnd = pipeDiameterB/2+MEP_InsThickness			ADDy MEP_BendRadius			ROTz -90			ROTx -90			 alpha_i = bendAngle/cRes			 alphaSec_i = 360/res			 rr = dRStart			inA = MEP_BendRadius-dRStart			IF ABS(bendAngle-90) < EPS THEN				inB = MEP_BendRadius-dREnd			ELSE				inB = MEP_BendRadius-dREnd				iX = inB*COS(bendAngle)				iY = inB*SIN(bendAngle)				inB = SQR(ABS((iY^2)/(1-(iX/inA)^2)))			ENDIF			outA = MEP_BendRadius+dRStart			IF ABS(bendAngle-90) < EPS THEN				outB = MEP_BendRadius+dREnd			ELSE				outB = MEP_BendRadius+dREnd				oX = outB*COS(bendAngle)				oY = outB*SIN(bendAngle)				outB = SQR(ABS((oY^2)/(1-(oX/outA)^2)))			ENDIF			FOR k = 1 TO cRes					FOR i = 1 TO res						PUT MEP_BendRadius+rr*COS(alphaSec_i*(i-1)), rr*SIN(alphaSec_i*(i-1)), 1					NEXT i					inX = SQR(1/(1/(inA^2)+((TAN(alpha_i*k))/inB)^2))					inY = inX*TAN(alpha_i*k)					outX = SQR(1/(1/(outA^2)+((TAN(alpha_i*k))/outB)^2))					outY = outX*TAN(alpha_i*k)					dia2 = SQR((outX-inX)^2+(outY-inY)^2)					rr = dia2/2					MEP_BendRadius = SQR(inX^2+inY^2)					MEP_BendRadius = MEP_BendRadius+rr					FOR i = 1 TO res						 dX = MEP_BendRadius+rr*COS(alphaSec_i*(i-1))						PUT dX*COS(alpha_i), rr*SIN(alphaSec_i*(i-1)), dX*SIN(alpha_i)					NEXT i				RULED NSP/6, addStatus3+4+16*(k = 1 AND NOT(flangeA))+32*(k=cRes AND NOT(flangeB)),					GET(NSP)				ROTy -alpha_i			NEXT k			DEL k+3			MEP_BendRadius = MEP_BendRadius_temp			BASE			VERT    connectorWidthA,    MEP_BendRadius,    0			VERT    MEP_BendRadius*2,    MEP_BendRadius,    0			VERT    0,    MEP_BendRadius+1,	0			VERT    0,    MEP_BendRadius,    1			COOR    4,    -1,   -2,    -3,    -4			BODY -1		ENDIF	ENDIF	IF flangeA THEN		ROTy 90		EXTRUDE 2, 0, 0, connectorWidthA, addStatus3+16,			0, 0, 901,			pipeDiameterA/2+MEP_InsThickness, 360, 4001		BASE		VERT    0,    0,    0		VERT    pipeDiameterA/2+MEP_InsThickness,    0,    0		VERT    0,    1,	0		VERT    0,    0,    1		COOR    3,    -1,   -2,    -3,    -4		BODY -1		DEL 1	ENDIF	IF flangeB THEN		ADD connectorWidthA+MEP_BendRadius*SIN(bendAngle), MEP_BendRadius-MEP_BendRadius*COS(bendAngle), 0		ROTz bendAngle		ROTy 90		EXTRUDE 2, 0, 0, connectorWidthB, addStatus3+32,			0, 0, 901,			pipeDiameterB/2+MEP_InsThickness, 360, 4001		BASE		VERT    0,    0,    0		VERT    pipeDiameterB/2+MEP_InsThickness,    0,    0		VERT    0,    1,	0		VERT    0,    0,    1		COOR    3,    -1,   -2,    -3,    -4		BODY -1		DEL 3	ENDIFENDIFDEL 1IF operatedMode THEN	CUTEND	CUTENDENDIF