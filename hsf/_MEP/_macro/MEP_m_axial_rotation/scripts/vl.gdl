
EPS = 0.00001

IF GLOB_MODPAR_NAME = "RotationAroundDAxis" OR GLOB_MODPAR_NAME = "RotationAroundWAxis" OR GLOB_MODPAR_NAME = "RotationAroundZAxis" THEN
	AX = RotationAroundDAxis
	AY = -RotationAroundWAxis
	AZ = RotationAroundZAxis

	MEP_Position[2][1] = COS(AY)*COS(AZ)
	PARAMETERS MEP_Position[2][1] = MEP_Position[2][1]
	MEP_Position[2][2] = COS(AY)*SIN(AZ)
	PARAMETERS MEP_Position[2][2] = MEP_Position[2][2]
	MEP_Position[2][3] = -SIN(AY)
	PARAMETERS MEP_Position[2][3] = MEP_Position[2][3]

	MEP_Position[3][1] = SIN(AX)*SIN(AY)*COS(AZ) - COS(AX)*SIN(AZ)
	PARAMETERS MEP_Position[3][1] = MEP_Position[3][1]
	MEP_Position[3][2] = SIN(AX)*SIN(AY)*SIN(AZ) + COS(AX)*COS(AZ)
	PARAMETERS MEP_Position[3][2] = MEP_Position[3][2]
	MEP_Position[3][3] = SIN(AX)*COS(AY)
	PARAMETERS MEP_Position[3][3] = MEP_Position[3][3]

ELSE

	! --------------------------------- !
	! --- rotation around Y (Pitch) --- !
	! --------------------------------- !

	IF MEP_Position[2][3] > 1 THEN MEP_Position[2][3] = 1
	IF MEP_Position[2][3] < -1 THEN MEP_Position[2][3] = -1

	RotationAroundWAxis = ASN(-MEP_Position[2][3])
	IF ABS(RotationAroundWAxis) < EPS THEN RotationAroundWAxis = 0

	RotationAroundWAxis = -RotationAroundWAxis
	PARAMETERS RotationAroundWAxis = RotationAroundWAxis


	IF ABS(ABS(MEP_Position[2][3]) - 1) > EPS THEN
		! none of ATAN2 functions are undefined

		! ---------------- !
		! --- Z vector --- !
		! ---------------- !

		dZx = -MEP_Position[3][2]*MEP_Position[2][3]+MEP_Position[3][3]*MEP_Position[2][2]
		dZy = -MEP_Position[3][3]*MEP_Position[2][1]+MEP_Position[3][1]*MEP_Position[2][3]
		dZz = -MEP_Position[3][1]*MEP_Position[2][2]+MEP_Position[3][2]*MEP_Position[2][1]

		! -------------------------------- !
		! --- rotation around X (Roll) --- !
		! -------------------------------- !

		atan2_param1 = MEP_Position[3][3]
		atan2_param2 = dZz

			! ***** atan2 function *****

			IF ABS(atan2_param1) > EPS THEN
				IF ABS(atan2_param2) > EPS THEN
					fi = ATN(ABS(atan2_param1/atan2_param2))
				ENDIF

				IF ABS(atan2_param2) < EPS THEN
					ang = 90*(SGN(atan2_param1))
				ELSE
					IF atan2_param2 > EPS THEN
						ang = fi*(SGN(atan2_param1))
					ELSE
						ang = (180 - fi)*(SGN(atan2_param1))
					ENDIF
				ENDIF
			ELSE
				IF ABS(atan2_param2) < EPS THEN
					ang = 0
				ELSE
					IF atan2_param2 > EPS THEN
						ang = 0
					ELSE
						ang = 180
					ENDIF
				ENDIF
			ENDIF

		RotationAroundDAxis = ang
		IF ABS(RotationAroundDAxis) < EPS THEN RotationAroundDAxis = 0
		PARAMETERS RotationAroundDAxis = RotationAroundDAxis

		! ------------------------------- !
		! --- rotation around Z (Yaw) --- !
		! ------------------------------- !

		atan2_param1 = MEP_Position[2][2]
		atan2_param2 = MEP_Position[2][1]

			! ***** atan2 function *****

			IF ABS(atan2_param1) > EPS THEN
				IF ABS(atan2_param2) > EPS THEN
					fi = ATN(ABS(atan2_param1/atan2_param2))
				ENDIF

				IF ABS(atan2_param2) < EPS THEN
					ang = 90*(SGN(atan2_param1))
				ELSE
					IF atan2_param2 > EPS THEN
						ang = fi*(SGN(atan2_param1))
					ELSE
						ang = (180 - fi)*(SGN(atan2_param1))
					ENDIF
				ENDIF
			ELSE
				IF ABS(atan2_param2) < EPS THEN
					ang = 0
				ELSE
					IF atan2_param2 > EPS THEN
						ang = 0
					ELSE
						ang = 180
					ENDIF
				ENDIF
			ENDIF

		RotationAroundZAxis = ang
		IF ABS(RotationAroundZAxis) < EPS THEN RotationAroundZAxis = 0
		PARAMETERS RotationAroundZAxis = RotationAroundZAxis

	ELSE
		! both ATAN2 functions are undefined

		! -------------------------------- !
		! --- rotation around X (Roll) --- !
		! -------------------------------- !

		RotationAroundDAxis = 0
		PARAMETERS RotationAroundDAxis = RotationAroundDAxis

		! ------------------------------- !
		! --- rotation around Z (Yaw) --- !
		! ------------------------------- !

		IF MEP_Position[3][1] > 1 THEN MEP_Position[3][1] = 1
		IF MEP_Position[3][1] < -1 THEN MEP_Position[3][1] = -1

		RotationAroundZAxis = ASN(-MEP_Position[3][1])
		IF ABS(RotationAroundZAxis) < EPS THEN RotationAroundZAxis = 0
		PARAMETERS RotationAroundZAxis = RotationAroundZAxis
	ENDIF

ENDIF
