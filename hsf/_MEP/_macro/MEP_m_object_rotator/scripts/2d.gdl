
! MEP_m_object_rotator
! Zsolt Feke/2007


EPS = 0.0001

IF ABS(symbRotangle) > 0 THEN			! *** is non exactly zero
	symbRotangle = -symbRotangle		! *** SYMB_ROTANGLE rotation for connected connection data

	DIM inCoords[20][3]
	DIM outCoords[20][3]

	DIM tMatrix[3][3]

	tMatrix[1][1] = COS(symbRotangle)
	tMatrix[1][2] = SIN(symbRotangle)
	tMatrix[1][3] = 0

	tMatrix[2][1] = -SIN(symbRotangle)
	tMatrix[2][2] = COS(symbRotangle)
	tMatrix[2][3] = 0

	tMatrix[3][1] = -tMatrix[2][2]*tMatrix[1][3]+tMatrix[2][3]*tMatrix[1][2]
	tMatrix[3][2] = -tMatrix[2][3]*tMatrix[1][1]+tMatrix[2][1]*tMatrix[1][3]
	tMatrix[3][3] = -tMatrix[2][1]*tMatrix[1][2]+tMatrix[2][2]*tMatrix[1][1]

							!!! +++ Input Coordinates +++ !!!

	PUT MEP_NumConnectedConnectionData[rot_conn][4], MEP_NumConnectedConnectionData[rot_conn][5], MEP_NumConnectedConnectionData[rot_conn][6]
	PUT MEP_NumConnectedConnectionData[rot_conn][7], MEP_NumConnectedConnectionData[rot_conn][8], MEP_NumConnectedConnectionData[rot_conn][9]

	Coordinates = NSP/3

	FOR cnum = 1 TO Coordinates
		inCoords[cnum][1] = GET(1)
		inCoords[cnum][2] = GET(1)
		inCoords[cnum][3] = GET(1)
	NEXT cnum

	! --- the Matrix Operation, what make the Output-Coordinates

	FOR cnum = 1 TO Coordinates
		MEP_NumConnectedConnectionData[rot_conn][1+cnum*3] = inCoords[cnum][1]*tMatrix[1][1]+inCoords[cnum][2]*tMatrix[2][1]+inCoords[cnum][3]*tMatrix[3][1]
		MEP_NumConnectedConnectionData[rot_conn][2+cnum*3] = inCoords[cnum][1]*tMatrix[1][2]+inCoords[cnum][2]*tMatrix[2][2]+inCoords[cnum][3]*tMatrix[3][2]
		MEP_NumConnectedConnectionData[rot_conn][3+cnum*3] = inCoords[cnum][1]*tMatrix[1][3]+inCoords[cnum][2]*tMatrix[2][3]+inCoords[cnum][3]*tMatrix[3][3]
	NEXT cnum
ENDIF


unID = 100
IF ABS(ABS(defaultMatrix[3][3]) - 1 ) < EPS THEN
	dx = -defaultMatrix[1][1]
	dy = -defaultMatrix[1][2]

	 arCosVal = dx/1
	IF ABS(arCosVal) > 1 AND SGN(arCosVal) = -1 THEN arCosVal = -1
	IF ABS(arCosVal) > 1 AND SGN(arCosVal) = 1 THEN arCosVal = 1
	dirAngOnXYPlane = ACS(arCosVal)
	IF SGN(dy) = -1 THEN dirAngOnXYPlane = 360-dirAngOnXYPlane

	ADD2 MEP_NumConnectionData[rot_conn][1], MEP_NumConnectionData[rot_conn][2]
	ROT2 dirAngOnXYPlane

	HOTSPOT2 dist_x, 0, unID, Rotation, 6+512: unID=unID+1
	HOTSPOT2 dist_x, dist_y, unID, Rotation, 4+128: unID=unID+1
	HOTSPOT2 dist_x+dist_y*SIN(Rotation), dist_y*COS(Rotation), unID, Rotation, 5: unID=unID+1

	DEL 2
ENDIF

IF ABS(ABS(MEP_NumConnectionData[rot_conn][6]) - 1) < EPS THEN
	IF rot_conn < 2 AND ABS(gs_Connections[rot_conn][2] + gs_Connections[rot_conn][3]) < EPS AND dist_y > 0 THEN
		ADD2 MEP_NumConnectionData[rot_conn][1], MEP_NumConnectionData[rot_conn][2]
		HOTSPOT2 0, 0, unID, Rotation, 6: unID=unID+1
		HOTSPOT2 dist_y, 0, unID, Rotation, 4+128: unID=unID+1
		HOTSPOT2 dist_y*COS(Rotation), dist_y*SIN(Rotation), unID, Rotation, 5: unID=unID+1
		DEL 1
	ELSE
		mm = 0
		IF SGN(MEP_NumConnectionData[rot_conn][6]) = -1 THEN mm = 1
		ADD2 MEP_NumConnectionData[rot_conn][1], MEP_NumConnectionData[rot_conn][2]
		MUL2 1, 1-2*mm
		ROT2 180
		HOTSPOT2 0, 0, unID, Rotation, 6+512*mm: unID=unID+1
		HOTSPOT2 dist_y, 0, unID, Rotation, 4+128: unID=unID+1
		HOTSPOT2 dist_y*COS(Rotation), dist_y*SIN(Rotation), unID, Rotation, 5: unID=unID+1
		DEL 3
	ENDIF
ENDIF
