PAPER_TO_MODEL = GLOB_SCALE / 1000	! Convert paper size to model size
CALL "MEP_m_RequestSystemGlobals" PARAMETERS ALL one_ConID=0 returned_parameters gs_cont_pen, gs_fill_type, gs_fill_pen, gs_back_pen, MEP_cline_type, MEP_cline_pen, show_el
_pTM = GLOB_SCALE / 1000
PEN MEP_cline_pen

DEFINE STYLE "max" Shrift , max(Shrift_razm_razm*show_size, Shrift_pos_razm*show_systname, Shrift_otm_razm*show_otm, 2.5), 5, 0
n = REQUEST ("Height_of_style", "max", h_str_max)

if show_size and not(show_systname) and not(show_otm) then
	t_priv_size = 5
	pos_x_size = 0
else
	t_priv_size  = 8
	pos_x_size = MEP_NumConnectionData[1][12]*0.5*(show_axis<EPS)+h_str_max*0.4*PAPER_TO_MODEL*(show_axis>EPS)+0.2*PAPER_TO_MODEL
endif

if show_otm and not(show_systname) then
	t_priv_otm = 5
	pos_x_otm = 0
else
	t_priv_otm  = 2
	pos_x_otm = -(MEP_NumConnectionData[1][12]*0.5*(show_axis<EPS)+h_str_max*0.4*PAPER_TO_MODEL*(show_axis>EPS)+0.2*PAPER_TO_MODEL)
endif

t_priv_systname = 5
pos_x_systname = 0

DEFINE STYLE "размеры" Shrift , Shrift_razm_razm, t_priv_size, Shrift_razm_tip
DEFINE STYLE "система" Shrift , Shrift_pos_razm, t_priv_systname, Shrift_pos_tip
DEFINE STYLE "отметка" Shrift , Shrift_otm_razm, t_priv_otm, Shrift_otm_tip

SET STYLE "размеры"

!!!!================= Настройки видимости по диапазону ======================
!!!!По умолчанию - вид не в сечении, элемент видим
!is_sech = 0
!is_show = 1
!!!!Абсолютные значения границ видимости
!rx1 = MEP_Position[1][1]
!ry1 = MEP_Position[1][2]
!rz1 = MEP_Position[1][3]
!rx2 = rx1+MEP_Position[2][1]*MEP_StraightLength
!ry2 = ry1+MEP_Position[2][2]*MEP_StraightLength
!rz2 = rz1+MEP_Position[2][3]*MEP_StraightLength
!dx = rx2-rx1
!dy = ry2-ry1
!dz = rz2-rz1
!flag = 0
!SYMB_POS_Z_temp = SYMB_POS_Z
!IF SGN(dz) = 0 then
!	_MEP_StraightLength = 0
!endif
!IF SGN(dx) = 0 AND SGN(dy) = 0 and flag = 0 THEN
!	_MEP_StraightLength = MEP_StraightLength
!	IF rz1 > rz2 THEN
!		SYMB_POS_Z_temp = SYMB_POS_Z
!		SYMB_POS_Z = SYMB_POS_Z-_MEP_StraightLength
!	ENDIF
!	flag = 1
!endif
!if flag = 0 then
!	_MEP_StraightLength = MEP_StraightLength
!	Length=SQR(dx^2+dy^2)
!	ar = ABS(dz)/_MEP_StraightLength
!	br = Length/_MEP_StraightLength
!	cr = ABS(dz)/Length
!	IF rz1 > rz2 THEN
!		SYMB_POS_Z_temp = SYMB_POS_Z
!		SYMB_POS_Z = SYMB_POS_Z-_MEP_StraightLength
!	ENDIF
!	dz_temp = ABS(dz)
!	dz = ABS(dz)-cutbackA*ar-cutbackB*ar
!	SYMB_POS_Z_temp = SYMB_POS_Z
!	SYMB_POS_Z = SYMB_POS_Z+cutbackA*ar
!	flag = 1
!endif
!down_level = GLOB_CSTORY_ELEV + GLOB_CUTPLANES_INFO[3]+SYMB_POS_Z
!up_level = GLOB_CSTORY_ELEV + GLOB_CUTPLANES_INFO[2]+SYMB_POS_Z
!!!Ниже границы видимости
!IF down_level - SYMB_POS_Z > EPS then
!	if (down_level - (SYMB_POS_Z+_MEP_StraightLength)) > EPS THEN !!Закончился до границы
!		is_show = 0
!	else	
!		is_sech = 1
!	endif
!endif
!!!Выше границы видимости
!IF up_level - SYMB_POS_Z < EPS then
!	if up_level - (SYMB_POS_Z+_MEP_StraightLength) < EPS THEN !!Закончился до границы
!		is_show = 0
!	else
!		is_sech = 1
!	endif
!endif
!if is_sech then is_show = 1
!SYMB_POS_Z = SYMB_POS_Z_temp
!!!!================= Настройки видимости по диапазону ======================


HOTLINE2 cutbackCLA, 0, MEP_StraightLength-cutbackCLB, offset
dy = 0

_dirAngOnXYPlane = dirAngOnXYPlane
if SYMB_MIRRORED then _dirAngOnXYPlane = -dirAngOnXYPlane

r = request ("View_Rotangle", "", _angleViewRot)
_totalRotate = (SYMB_ROTANGLE + _angleViewRot+_dirAngOnXYPlane) mod 360
ang = 0
if (abs(_totalRotate)> (90 + EPS) & abs(_totalRotate) < (270 + EPS)) then ang = 180

if show_size and abs(is_perehod)<EPS  then 
	ADD2 MEP_StraightLength/2, 0
	_nTrans = 0
	if abs(ang)>EPS then
		rot2 ang
		_nTrans = _nTrans + 1
	endif
	SET STYLE "размеры"
	l_razm = (stw(mep_razm)*PAPER_TO_MODEL)
	if l_razm<=MEP_StraightLength then
		text2 0, pos_x_size, mep_razm_abs
		if abs(pos_x_size)<EPS then dy = max(dy, l_razm*0.5+0.1*PAPER_TO_MODEL) 
	endif
	del 1+_nTrans
endif

if show_systname then 
	ADD2 MEP_StraightLength/2, 0
	_nTrans = 0
	if abs(ang)>EPS then
		rot2 ang
		_nTrans = _nTrans + 1
	endif
	SET STYLE "система"
	l_syst = (stw(syst_name)*PAPER_TO_MODEL)
	if l_syst<=MEP_StraightLength and abs(is_perehod)<EPS then 
		text2 0, pos_x_systname, syst_name
		if abs(pos_x_systname)<EPS then dy = max(dy, l_syst*0.5+0.1*PAPER_TO_MODEL)
	endif
	del 1+_nTrans
endif

if show_otm and abs(is_perehod)<EPS then
	ADD2 MEP_StraightLength/2, 0
	_nTrans = 0
	if abs(ang)>EPS then
		rot2 ang
		_nTrans = _nTrans + 1
	endif
	SET STYLE "отметка"
	l_otm = stw(otm_elem_txt)*PAPER_TO_MODEL
	if l_otm<=MEP_StraightLength then
		text2 0, pos_x_otm, otm_elem_txt
		if abs(pos_x_otm)<EPS then dy = max(dy, l_otm*0.5+0.1*PAPER_TO_MODEL)
	endif
	del 1+_nTrans
endif

IF show_axis_and or show_axis THEN		! -----> center line <----- !
	SET LINE_TYPE MEP_cline_type
	if abs(is_perehod)<EPS then
		LINE2 cutbackCLA, 0, (MEP_StraightLength-cutbackCLB)/2-dy, offset
		LINE2 (MEP_StraightLength-cutbackCLB)/2+dy, 0, (MEP_StraightLength-cutbackCLB), offset
	else
		LINE2 cutbackCLA, 0, (MEP_StraightLength-cutbackCLB), offset
	endif
	SET LINE_TYPE 1
	IF MEP_InsShow and show_conventions THEN
		h = 1*_pTM
		n = int((MEP_StraightLength-cutbackCLB+cutbackCLA)/(4*h))
		if n>EPS then
			shag = (MEP_StraightLength-cutbackCLB+cutbackCLA)/(4*n)
			sx = cutbackCLA
			for i = 1 to n
				line2 sx, 0, sx+shag, h
				line2 sx+shag, h, sx+3*shag, -h
				line2 sx+3*shag, -h, sx+4*shag, 0
				sx = sx+4*shag
			next i
		endif
	endif
ENDIF

PEN gs_cont_pen
