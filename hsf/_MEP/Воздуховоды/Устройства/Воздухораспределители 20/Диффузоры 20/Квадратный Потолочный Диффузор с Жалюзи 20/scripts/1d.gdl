!-----------Основной---------------------success = LIBRARYGLOBAL ("Libraryflobals-mep", "show_axis", show_axis)success = LIBRARYGLOBAL ("Libraryflobals-mep", "show_axis_and", show_axis_and)success = LIBRARYGLOBAL ("Libraryflobals-mep", "show_isol", show_isol)success = LIBRARYGLOBAL ("Libraryflobals-mep", "show_conventions", show_conventions)success = LIBRARYGLOBAL ("Libraryflobals-mep", "show_size", show_size)success = LIBRARYGLOBAL ("Libraryflobals-mep", "gs_detlevel_2D_m",gs_detlevel_2D_m)success = LIBRARYGLOBAL ("Libraryflobals-mep", "gs_detlevel_3D_m", gs_detlevel_3D_m)call "Показ_систем" PARAMETERS All isMep=1 RETURNED_PARAMETERS show_el, syst_namecall "common_param" PARAMETERS ALLtype_symb = 1! Square Louver Face Ceiling DiffuserEPS = 0.0001					! --- HARDCODED AND DERIVED VARIABLES --- !edgeThick = 0.025edgeHeight = 0.015IF A < edgeThick*4+0.001 THEN A = edgeThick*4+0.001IF B < edgeThick*4+0.001 THEN B = edgeThick*4+0.001prismHalfWidth = A/2prismHalfDepth = B/2prismInsideHalfWidth = prismHalfWidth-edgeThickprismInsideHalfDepth = prismHalfDepth-edgeThick						! ---------------- !						! --- Z vector --- !						! ---------------- !dZx = -MEP_Position[3][2]*MEP_Position[2][3]+MEP_Position[3][3]*MEP_Position[2][2]dZy = -MEP_Position[3][3]*MEP_Position[2][1]+MEP_Position[3][1]*MEP_Position[2][3]dZz = -MEP_Position[3][1]*MEP_Position[2][2]+MEP_Position[3][2]*MEP_Position[2][1]					! --- dirAngOnXYPlane of the route  --- !IF ABS(dZz-1) < EPS THEN	 arCosVal = MEP_Position[3][1]/1	IF ABS(arCosVal) > 1 AND SGN(arCosVal) = -1 THEN arCosVal = -1	IF ABS(arCosVal) > 1 AND SGN(arCosVal) = 1 THEN arCosVal = 1	dirAngOnXYPlane = ACS(arCosVal)-90	IF SGN(MEP_Position[3][2]) = -1 THEN dirAngOnXYPlane = 180-dirAngOnXYPlaneENDIF					!!! +++ Transformational Matrix +++ !!!DIM tMatrix[3][3]tMatrix[1][1] = MEP_Position[2][1]tMatrix[1][2] = MEP_Position[2][2]tMatrix[1][3] = MEP_Position[2][3]tMatrix[2][1] = MEP_Position[3][1]tMatrix[2][2] = MEP_Position[3][2]tMatrix[2][3] = MEP_Position[3][3]tMatrix[3][1] = dZxtMatrix[3][2] = dZytMatrix[3][3] = dZz!!! +++ Input Coordinates +++ !!!PUT ConPosX_1+gs_Connections[1][4]*ConLength_1, ConPosY_1+gs_Connections[1][5]*ConLength_1, ConPosZ_1+gs_Connections[1][6]*ConLength_1PUT gs_Connections[1][4], gs_Connections[1][5], gs_Connections[1][6]PUT gs_Connections[1][7], gs_Connections[1][8], gs_Connections[1][9]PUT prismHalfWidth, prismHalfDepth, 0PUT -prismHalfWidth, prismHalfDepth, 0PUT -prismHalfWidth, -prismHalfDepth, 0PUT prismHalfWidth, -prismHalfDepth, 0Coordinates = NSP/3DIM inCoords[20][3]FOR cnum = 1 TO Coordinates	inCoords[cnum][1] = GET(1)	inCoords[cnum][2] = GET(1)	inCoords[cnum][3] = GET(1)NEXT cnum! --- the Matrix Operation, what make the Output-CoordinatesDIM outCoords[20][3]FOR cnum = 1 TO Coordinates	outCoords[cnum][1] = inCoords[cnum][1]*tMatrix[1][1]+inCoords[cnum][2]*tMatrix[2][1]+inCoords[cnum][3]*tMatrix[3][1]+MEP_Position[1][1]	outCoords[cnum][2] = inCoords[cnum][1]*tMatrix[1][2]+inCoords[cnum][2]*tMatrix[2][2]+inCoords[cnum][3]*tMatrix[3][2]+MEP_Position[1][2]	outCoords[cnum][3] = inCoords[cnum][1]*tMatrix[1][3]+inCoords[cnum][2]*tMatrix[2][3]+inCoords[cnum][3]*tMatrix[3][3]+MEP_Position[1][3]NEXT cnumz = MEP_Position[1][3]PARAMETERS ac_toplevel 		= zPARAMETERS ac_bottomlevel 	= z