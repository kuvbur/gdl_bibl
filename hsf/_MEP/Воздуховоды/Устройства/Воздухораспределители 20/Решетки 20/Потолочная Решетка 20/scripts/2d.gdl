!-----------2d---------------------if show_el < EPS then endIF gs_detlevel_2D_m < EPS THEN ENDCALL "MEP_m_RequestSystemGlobals" PARAMETERS ALL one_ConID=0 returned_parameters gs_cont_pen, gs_fill_type, gs_fill_pen, gs_back_pen, MEP_cline_type, MEP_cline_pen, show_el!!!================= Настройки видимости по диапазону ======================!!!По умолчанию - вид не в сечении, элемент видимis_sech = 0is_show = 1MEP_StraightLength = A!!!Абсолютные значения границ видимостиrx1 = MEP_Position[1][1]ry1 = MEP_Position[1][2]rz1 = MEP_Position[1][3]rx2 = rx1+MEP_Position[2][1]*MEP_StraightLengthry2 = ry1+MEP_Position[2][2]*MEP_StraightLengthrz2 = rz1+MEP_Position[2][3]*MEP_StraightLengthdx = rx2-rx1dy = ry2-ry1dz = rz2-rz1flag = 0SYMB_POS_Z_temp = SYMB_POS_ZIF SGN(dz) = 0 then	_MEP_StraightLength = 0endifIF SGN(dx) = 0 AND SGN(dy) = 0 and flag = 0 THEN	_MEP_StraightLength = MEP_StraightLength	IF rz1 > rz2 THEN		SYMB_POS_Z_temp = SYMB_POS_Z		SYMB_POS_Z = SYMB_POS_Z-_MEP_StraightLength	ENDIF	flag = 1endifif flag = 0 then	_MEP_StraightLength = MEP_StraightLength	Length=SQR(dx^2+dy^2)	ar = ABS(dz)/_MEP_StraightLength	br = Length/_MEP_StraightLength	cr = ABS(dz)/Length	IF rz1 > rz2 THEN		SYMB_POS_Z_temp = SYMB_POS_Z		SYMB_POS_Z = SYMB_POS_Z-_MEP_StraightLength	ENDIF	dz_temp = ABS(dz)	dz = ABS(dz)	SYMB_POS_Z_temp = SYMB_POS_Z	SYMB_POS_Z = SYMB_POS_Z	flag = 1endifdown_level = GLOB_CSTORY_ELEV + GLOB_CUTPLANES_INFO[3]+SYMB_POS_Zup_level = GLOB_CSTORY_ELEV + GLOB_CUTPLANES_INFO[2]+SYMB_POS_Z!!Ниже границы видимостиIF down_level - SYMB_POS_Z > EPS then	if (down_level - (SYMB_POS_Z+_MEP_StraightLength)) > EPS THEN !!Закончился до границы		is_show = 0	else			is_sech = 1	endifendif!!Выше границы видимостиIF up_level - SYMB_POS_Z < EPS then	if up_level - (SYMB_POS_Z+_MEP_StraightLength) < EPS THEN !!Закончился до границы		is_show = 0	else		is_sech = 1	endifendifif is_sech then is_show = 1SYMB_POS_Z = SYMB_POS_Z_temp!!!================= Настройки видимости по диапазону ======================if AC_AutoOnStoryVisibility and is_show=0 THEN endcall "2dmacro" parameters all, type_symb = 1if show_axis then 	hotspot2 0,0	endendifPEN gs_cont_penSET FILL gs_fill_typeHptsUnIDBeginForConnEnds = 30000hceID_1 = HptsUnIDBeginForConnEnds+100unID = 1IF ABS(dZz-1) < EPS THEN	ADD2 MEP_Position[1][1], MEP_Position[1][2]	ROT2 dirAngOnXYPlane	HOTSPOT2 prismInsideHalfWidth, prismInsideHalfDepth, unID: unID=unID+1	HOTSPOT2 -prismInsideHalfWidth, prismInsideHalfDepth, unID: unID=unID+1	HOTSPOT2 -prismInsideHalfWidth, -prismInsideHalfDepth, unID: unID=unID+1	HOTSPOT2 prismInsideHalfWidth, -prismInsideHalfDepth, unID: unID=unID+1	IF gs_symbtype_2D_m = 1 OR gs_symbtype_2D_m = 2 THEN		! Realistic, Electric		HOTSPOT2 prismHalfWidth, prismHalfDepth, unID: unID=unID+1		HOTSPOT2 -prismHalfWidth, prismHalfDepth, unID: unID=unID+1		HOTSPOT2 -prismHalfWidth, -prismHalfDepth, unID: unID=unID+1		HOTSPOT2 prismHalfWidth, -prismHalfDepth, unID: unID=unID+1		PUT prismHalfWidth, prismHalfDepth, 1,			-prismHalfWidth, prismHalfDepth, 1,			-prismHalfWidth, -prismHalfDepth, 1,			prismHalfWidth, -prismHalfDepth, 1,			prismHalfWidth, prismHalfDepth, -1		POLY2_B NSP/3, 1+2+4+64, gs_fill_pen, gs_back_pen,			GET (NSP)	ENDIF	IF gs_symbtype_2D_m = 3 THEN		! RCP		HOTSPOT2 0, 0, unID: unID=unID+1		RECT2 	prismInsideHalfWidth, prismInsideHalfDepth,				-prismInsideHalfWidth, -prismInsideHalfDepth		END	ENDIF			! --- CONNECTIONS --- !	CALL "MEP_m_ConnectionsMEP_4" PARAMETERS SetProgram = SetProgram,			MEP_NumberConnections = MEP_NumberConnections,			MEP_NumConnectionData = gs_Connections,			gs_AddConnections = gs_AddConnections,			DrawingNum = 1,			MEP_InsShow = 0,			MEP_cline_show = 0,			gs_cont_pen = gs_cont_pen,			gs_fill_type=gs_fill_type,			gs_fill_pen=gs_fill_pen,			gs_back_pen=gs_back_pen,			ConPosX_1 = ConPosX_1, ConPosY_1=ConPosY_1, ConLength_1=ConLength_1, ConEdit_1 = 0, MEP_StrConnectionData = MEP_StrConnectionData	DEL 2ELSE	HOTSPOT2 outCoords[4][1], outCoords[4][2], unID: unID=unID+1	HOTSPOT2 outCoords[5][1], outCoords[5][2], unID: unID=unID+1	HOTSPOT2 outCoords[6][1], outCoords[6][2], unID: unID=unID+1	HOTSPOT2 outCoords[7][1], outCoords[7][2], unID: unID=unID+1	HOTSPOT2 outCoords[8][1], outCoords[8][2], unID: unID=unID+1	HOTSPOT2 outCoords[9][1], outCoords[9][2], unID: unID=unID+1	HOTSPOT2 outCoords[10][1], outCoords[10][2], unID: unID=unID+1	HOTSPOT2 outCoords[11][1], outCoords[11][2], unID: unID=unID+1	HOTSPOT2 outCoords[12][1], outCoords[12][2], unID: unID=unID+1	HOTSPOT2 outCoords[13][1], outCoords[13][2], unID: unID=unID+1	HOTSPOT2 outCoords[14][1], outCoords[14][2], unID: unID=unID+1	HOTSPOT2 outCoords[15][1], outCoords[15][2], unID: unID=unID+1	HOTSPOT2 outCoords[1][1], outCoords[1][2], hceID_1	SET FILL gs_fill_type	PEN gs_cont_pen	IF gs_fill_pen THEN PEN gs_fill_pen	if not(show_axis) then PROJECT2{3} 3, 270, 3+32, 4, gs_back_pen, 0, 0, 0, PARAMETERS gs_detlevel_3D_m = gs_detlevel_2D_m	PEN gs_cont_pen	if not(show_axis) then PROJECT2{3} 3, 270, 2, 8, 0, 0, 0, 0, PARAMETERS gs_detlevel_3D_m = gs_detlevel_2D_mENDIFEND