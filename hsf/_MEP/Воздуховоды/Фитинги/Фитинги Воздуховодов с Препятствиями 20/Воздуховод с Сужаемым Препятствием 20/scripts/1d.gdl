!-----------Основной---------------------
success = LIBRARYGLOBAL ("Libraryflobals-mep", "show_axis", show_axis)
success = LIBRARYGLOBAL ("Libraryflobals-mep", "show_axis_and", show_axis_and)
success = LIBRARYGLOBAL ("Libraryflobals-mep", "show_isol", show_isol)
success = LIBRARYGLOBAL ("Libraryflobals-mep", "show_conventions", show_conventions)
success = LIBRARYGLOBAL ("Libraryflobals-mep", "show_size", show_size)
success = LIBRARYGLOBAL ("Libraryflobals-mep", "gs_detlevel_2D_m",gs_detlevel_2D_m)
success = LIBRARYGLOBAL ("Libraryflobals-mep", "gs_detlevel_3D_m", gs_detlevel_3D_m)
call "Показ_систем" PARAMETERS All isMep=1 RETURNED_PARAMETERS show_el, syst_name

call "common_param" PARAMETERS ALL

EPS = 0.00001

DIM RiseOrDrop_dim [2]
	RiseOrDrop_dim[1]=`Подъем`
	RiseOrDrop_dim[2]=`Спуск`

ductInnerWidth			= MEP_NumConnectionData[1][12]
ductInnerHeight			= MEP_NumConnectionData[1][13]
ductHalfWidth			= MEP_NumConnectionData[1][12]/2+MEP_NumConnectionData[1][14]
ductHalfHeight			= MEP_NumConnectionData[1][13]/2+MEP_NumConnectionData[1][14]
connectorLength			= MEP_NumConnectionData[1][14]
connectorHalfWidthA		= ductHalfWidth+MEP_NumConnectionData[1][15]
connectorHalfHeightA	= ductHalfHeight+MEP_NumConnectionData[1][15]
connectedA				= MEP_NumConnectionData[1][18]

connectorHalfWidthB		= ductHalfWidth+MEP_NumConnectionData[2][15]
connectorHalfHeightB	= ductHalfHeight+MEP_NumConnectionData[2][15]
connectedB				= MEP_NumConnectionData[2][18]

flangeA = 1
IF MEP_NumConnectionData[1][15] < EPS OR ABS(gs_AddConnections[1][1] - 1) < EPS THEN flangeA = 0
cutBackA = 0
IF flangeA THEN cutBackA = connectorLength

flangeB = 1
IF MEP_NumConnectionData[2][15] < EPS OR ABS(gs_AddConnections[2][1] - 1) < EPS THEN flangeB = 0
cutBackB = 0
IF flangeB THEN cutBackB = connectorLength


IF ABS(MEP_Position[2][1]) < EPS THEN
	IF SGN(MEP_Position[2][2]) = 1 THEN dirAng = 90
	IF SGN(MEP_Position[2][2]) = -1 THEN dirAng = 270
ELSE
	dirAng = ATN(MEP_Position[2][2]/MEP_Position[2][1])
	IF SGN(MEP_Position[2][1]) = -1 AND SGN(MEP_Position[2][2]) = 1 THEN dirAng = 180+dirAng
	IF SGN(MEP_Position[2][1]) = -1 AND SGN(MEP_Position[2][2]) = -1 THEN dirAng = 180+dirAng
	IF SGN(MEP_Position[2][1]) = 1 AND SGN(MEP_Position[2][2]) = -1 THEN dirAng = 360+dirAng
	IF SGN(MEP_Position[2][1]) = 1 AND ABS(MEP_Position[2][2]) < EPS THEN dirAng = 0
	IF SGN(MEP_Position[2][1]) = -1 AND ABS(MEP_Position[2][2]) < EPS THEN dirAng = 180
ENDIF


			! --- HARDCODED AND DERIVED VARIABLES --- !

IF oHeight < 0.0001 THEN
	oHeight = 0.0001
	PARAMETERS oHeight = oHeight
ENDIF
IF oHeight > ductHalfHeight*2 THEN
	oHeight = ductHalfHeight*2
	PARAMETERS oHeight = oHeight
ENDIF

VALUES "rd_angle" RANGE (0, 90)
IF GLOB_MODPAR_NAME = "rd_angle" THEN
	dist = oHeight/TAN(rd_angle)
	MEP_StraightLength = dist*2+oLen
	PARAMETERS MEP_StraightLength = MEP_StraightLength
ELSE
	dist = (MEP_StraightLength-oLen)/2
	IF dist < EPS THEN
		rd_angle = 90
	ELSE
		rd_angle = ATN(oHeight/dist)
	ENDIF
	PARAMETERS rd_angle = rd_angle
ENDIF

IF MEP_StraightLength < 0 THEN
	MEP_StraightLength = 0
	PARAMETERS MEP_StraightLength = MEP_StraightLength
ENDIF

IF oLen < 0 THEN
	oLen = 0
	PARAMETERS oLen = oLen
ENDIF
IF oLen > MEP_StraightLength THEN
	oLen = MEP_StraightLength
	PARAMETERS oLen = oLen
ENDIF


						! ---------------- !
						! --- Z vector --- !
						! ---------------- !

dZx = -MEP_Position[3][2]*MEP_Position[2][3]+MEP_Position[3][3]*MEP_Position[2][2]
dZy = -MEP_Position[3][3]*MEP_Position[2][1]+MEP_Position[3][1]*MEP_Position[2][3]
dZz = -MEP_Position[3][1]*MEP_Position[2][2]+MEP_Position[3][2]*MEP_Position[2][1]

ROD_ID = 0
IF GLOB_MODPAR_NAME = "RiseOrDrop" THEN
	IF RiseOrDrop = RiseOrDrop_dim[1] THEN ROD_ID = 1
	IF RiseOrDrop = RiseOrDrop_dim[2] THEN ROD_ID = -1

	IF ABS(SGN(dZz) - ROD_ID) > EPS THEN
		MEP_Position[3][1] = -MEP_Position[3][1]
		PARAMETERS MEP_Position[3][1] = MEP_Position[3][1]
		MEP_Position[3][2] = -MEP_Position[3][2]
		PARAMETERS MEP_Position[3][2] = MEP_Position[3][2]
		MEP_Position[3][3] = -MEP_Position[3][3]
		PARAMETERS MEP_Position[3][3] = MEP_Position[3][3]

		dZx = -MEP_Position[3][2]*MEP_Position[2][3]+MEP_Position[3][3]*MEP_Position[2][2]
		dZy = -MEP_Position[3][3]*MEP_Position[2][1]+MEP_Position[3][1]*MEP_Position[2][3]
		dZz = -MEP_Position[3][1]*MEP_Position[2][2]+MEP_Position[3][2]*MEP_Position[2][1]
	ENDIF
ENDIF

IF ABS(SGN(dZz) - ROD_ID) > EPS THEN
	ROD_ID = SGN(dZz)

	IF ROD_ID = 1 THEN RiseOrDrop = RiseOrDrop_dim[1]
	IF ROD_ID = -1 THEN RiseOrDrop = RiseOrDrop_dim[2]
	PARAMETERS RiseOrDrop = RiseOrDrop
ENDIF


! --- Building of Transformational Matrix

DIM MatrixT[3][3]

MatrixT[1][1] = MEP_Position[2][1]
MatrixT[1][2] = MEP_Position[2][2]
MatrixT[1][3] = MEP_Position[2][3]

MatrixT[2][1] = MEP_Position[3][1]
MatrixT[2][2] = MEP_Position[3][2]
MatrixT[2][3] = MEP_Position[3][3]

MatrixT[3][1] = dZx
MatrixT[3][2] = dZy
MatrixT[3][3] = dZz


! --- Input Coordinates

PUT 0, 0, 0
PUT -1, 0, 0
PUT 0, -1, 0

PUT MEP_StraightLength, 0, 0
PUT 1, 0, 0
PUT 0, 1, 0

PUT MEP_StraightLength/2, 0, oHeight

PUT MEP_StraightLength/2+oLen/2, -ductHalfWidth, -ductHalfHeight+oHeight
PUT MEP_StraightLength/2+oLen/2, ductHalfWidth, -ductHalfHeight+oHeight
PUT MEP_StraightLength/2-oLen/2, -ductHalfWidth, -ductHalfHeight+oHeight
PUT MEP_StraightLength/2-oLen/2, ductHalfWidth, -ductHalfHeight+oHeight


Coordinates = NSP/3

DIM inCoords[20][3]

FOR cnum = 1 TO Coordinates
	inCoords[cnum][1] = GET(1)
	inCoords[cnum][2] = GET(1)
	inCoords[cnum][3] = GET(1)
NEXT cnum


! --- the Matrix Operation, what make the Output-Coordinates

DIM outCoords[20][3]

FOR cnum = 1 TO Coordinates
	outCoords[cnum][1] = inCoords[cnum][1]*MatrixT[1][1]+inCoords[cnum][2]*MatrixT[2][1]+inCoords[cnum][3]*MatrixT[3][1]
	outCoords[cnum][2] = inCoords[cnum][1]*MatrixT[1][2]+inCoords[cnum][2]*MatrixT[2][2]+inCoords[cnum][3]*MatrixT[3][2]
	outCoords[cnum][3] = inCoords[cnum][1]*MatrixT[1][3]+inCoords[cnum][2]*MatrixT[2][3]+inCoords[cnum][3]*MatrixT[3][3]
NEXT cnum


z = MEP_Position[1][3] + MEP_Position[2][3]*MEP_StraightLength/2
PARAMETERS ac_toplevel 		= z
PARAMETERS ac_bottomlevel 	= z
