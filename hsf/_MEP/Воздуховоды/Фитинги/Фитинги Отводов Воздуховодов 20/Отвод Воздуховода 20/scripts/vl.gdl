
DIM shape_typ_to_validation[3]
	shape_typ_to_validation[1] = 1		! Rectangle
	shape_typ_to_validation[2] = 1		! Circle
	shape_typ_to_validation[3] = 1		! Oval

VALUES "MEP_InsThickness" RANGE(0, ]
IF isBendTypeQuery THEN
	VALUES "MEP_BendStyle" BendStyleStr_dim
	VALUES "MEP_BendType" BendTypesStrToShapeTypes_dim
	VALUES "MEP_BendTypeID" BendTypesIDToShapeTypes_dim
ENDIF

IF MEP_BendStyleID = 1 THEN LOCK "ConThroatLength_1", "ConThroatLength_2"
IF NOT(MEP_Vanes) THEN LOCK "MEP_VanesNum"

IF useSysMat AND MEP_StrConnectionData[1][2] <> "0" THEN LOCK "gs_DuctMat", "gs_InsMat"
IF MEP_StrConnectionData[1][2] = "0" THEN LOCK "useSysMat"
if minBendRadius_n=0 then HIDEPARAMETER "use_cat"
gs_ui = 1


					! --- CONNECTIONS --- !

	PARAMETERS MEP_NumberConnections = 2
					! --- 1st CONNECTION --- !

	ConID = 1
	ConName = `Основное 1`

	ConDVecX = -1
	ConDVecY = 0
	ConDVecZ = 0

	ConWVecX = 0
	ConWVecY = -1
	ConWVecZ = 0
	IF NOT(setProgram) THEN
		isConLength = 1
		IF ABS(gs_AddConnections[1][1] - 1) < EPS THEN isConLength = 0
		ConLength_1 = ConWallThickness_1*isConLength
		PARAMETERS ConLength_1 = ConLength_1
		ConPosX_1 = ConLength_1-add_l
		PARAMETERS ConPosX_1 = ConPosX_1
		PARAMETERS ConPosY_1 = 0
		PARAMETERS ConPosZ_1 = 0
	ENDIF

	CALL "MEP_m_ConnectionsMEP_4" PARAMETERS SetProgram = SetProgram,
		gs_Connections = gs_Connections,
		MEP_NumConnectionData = MEP_NumConnectionData,
		MEP_StrConnectionData = MEP_StrConnectionData,
		MEP_NumberConnections = MEP_NumberConnections,
		gs_AddConnections = gs_AddConnections,
		ConName = ConName,
		ConID = ConID,
		ConPosX = ConPosX_1,
		ConPosY = ConPosY_1,
		ConPosZ = ConPosZ_1,
		ConDVecX = ConDVecX,
		ConDVecY = ConDVecY,
		ConDVecZ = ConDVecZ,
		ConWVecX = ConWVecX,
		ConWVecY = ConWVecY,
		ConWVecZ = ConWVecZ,

		ConNominalWidth = ConNominalWidth_1,
		ConNominalDepth = ConNominalDepth_1,
		ConWidth = ConWidth_1,
		ConDepth = ConDepth_1,
		ConLength = ConLength_1,
		ConWallThickness = ConWallThickness_1,
		ConConnectorWidth = ConConnectorWidth_1,
		ConConnectorDepth = ConConnectorDepth_1,
		ConConnectorWidth2 = ConConnectorWidth2_1,
		ConToolType = ConToolType_1,
		ConStatus = ConStatus_1,
		ConType_1 = ConType_1,
		ConConnectorType_1 = ConConnectorType_1,
		ConSystem_1 = ConSystem_1,
		gs_ui = gs_ui,
		MEP_bEnableInsulation = 1,
		MEP_InsShow = MEP_InsShow,
		MEP_InsThickness = MEP_InsThickness,
		ui_page_idx = ui_page_idx,
		shape_typ_to_validation = shape_typ_to_validation,
		MEP_enabled_geometry_mod = 1,
		MEP_cline_show = MEP_cline_show

PARAMETERS MEP_ConInfo[1][1] = STR(ConToolType_1, 1, 0)
PARAMETERS MEP_ConInfo[1][2] = ConName
PARAMETERS MEP_ConInfo[1][3] = "0"


					! --- 2nd CONNECTION --- !

	ConID = 2
	ConName = `Основное 2`

	ConDVecX = COS(MEP_BendAngle)
	ConDVecY = SIN(MEP_BendAngle)
	ConDVecZ = 0

	ConWVecX = -SIN(MEP_BendAngle)
	ConWVecY = COS(MEP_BendAngle)
	ConWVecZ = 0

	IF NOT(setProgram) THEN
		ConWidth_2 = ConWidth_1
		PARAMETERS ConWidth_2 = ConWidth_2
		ConDepth_2 = ConDepth_1
		PARAMETERS ConDepth_2 = ConDepth_2
		ConType_2 = ConType_1
		PARAMETERS ConType_2 = ConType_2
		MEP_NumConnectionData[2][21] = MEP_NumConnectionData[1][21]
		PARAMETERS MEP_NumConnectionData[2][21] = MEP_NumConnectionData[2][21]

		ConSystem_2 = ConSystem_1
		PARAMETERS ConSystem_2 = ConSystem_2
		MEP_StrConnectionData[2][2] = MEP_StrConnectionData[1][2]
		PARAMETERS MEP_StrConnectionData[2][2] = MEP_StrConnectionData[2][2]

		IF same_con THEN
			ConConnectorType_2 = ConConnectorType_1
			PARAMETERS ConConnectorType_2 = ConConnectorType_2
			MEP_StrConnectionData[2][1] = MEP_StrConnectionData[1][1]
			PARAMETERS MEP_StrConnectionData[2][1] = MEP_StrConnectionData[2][1]
			gs_AddConnections[2][1] = gs_AddConnections[1][1]
			PARAMETERS gs_AddConnections[2][1] = gs_AddConnections[2][1]
			ConConnectorWidth_2 = ConConnectorWidth_1
			PARAMETERS ConConnectorWidth_2 = ConConnectorWidth_2
			LOCK "ConConnectorType_2", "ConConnectorWidth_2"
		ENDIF

		isConLength = 1
		IF ABS(gs_AddConnections[2][1] - 1) < EPS THEN isConLength = 0
		ConLength_2 = ConWallThickness_1*isConLength
		PARAMETERS ConLength_2 = ConLength_2

		ductStraightLengthA = 0
		ductStraightLengthB = 0
		IF MEP_BendStyleID = 2 THEN
			IF SGN(ConThroatLength_1-ConThroatLength_2) = -1 THEN ductStraightLengthB = ABS(ConThroatLength_1-ConThroatLength_2)
			IF SGN(ConThroatLength_1-ConThroatLength_2) = 1 THEN ductStraightLengthA = ABS(ConThroatLength_1-ConThroatLength_2)
		ENDIF

		PARAMETERS ConPosX_2 = ductStraightLengthA+(MEP_BendRadius)*SIN(MEP_bendAngle)+(ductStraightLengthB+add_l)*COS(MEP_bendAngle) - ConLength_2*ConDVecX
		PARAMETERS ConPosY_2 = MEP_BendRadius-(MEP_BendRadius)*COS(MEP_bendAngle)+(ductStraightLengthB+add_l)*SIN(MEP_bendAngle) - ConLength_2*ConDVecY
		PARAMETERS ConPosZ_2 = 0
	ENDIF

	CALL "MEP_m_ConnectionsMEP_4" PARAMETERS SetProgram = SetProgram,
		gs_Connections = gs_Connections,
		MEP_NumConnectionData = MEP_NumConnectionData,
		MEP_StrConnectionData = MEP_StrConnectionData,
		MEP_NumberConnections = MEP_NumberConnections,
		gs_AddConnections = gs_AddConnections,
		ConName = ConName,
		ConID = ConID,
		ConPosX = ConPosX_2,
		ConPosY = ConPosY_2,
		ConPosZ = ConPosZ_2,
		ConDVecX = ConDVecX,
		ConDVecY = ConDVecY,
		ConDVecZ = ConDVecZ,
		ConWVecX = ConWVecX,
		ConWVecY = ConWVecY,
		ConWVecZ = ConWVecZ,

		ConNominalWidth = ConNominalWidth_2,
		ConNominalDepth = ConNominalDepth_2,
		ConWidth = ConWidth_2,
		ConDepth = ConDepth_2,
		ConLength = ConLength_2,
		ConWallThickness = ConWallThickness_1,
		ConConnectorWidth = ConConnectorWidth_2,
		ConConnectorDepth = ConConnectorDepth_2,
		ConConnectorWidth2 = ConConnectorWidth2_2,
		ConToolType = ConToolType_2,
		ConStatus = ConStatus_2,
		ConType_2 = ConType_2,
		ConConnectorType_2 = ConConnectorType_2,
		ConSystem_2 = ConSystem_2,
		gs_ui = gs_ui,
		MEP_bEnableInsulation = 1,
		MEP_InsShow = MEP_InsShow,
		MEP_InsThickness = MEP_InsThickness,
		shape_typ_to_validation = shape_typ_to_validation,
		MEP_enabled_geometry_mod = 1

PARAMETERS MEP_ConInfo[2][1] = STR(ConToolType_2, 1, 0)
PARAMETERS MEP_ConInfo[2][2] = ConName
PARAMETERS MEP_ConInfo[2][3] = "0"


					!!! +++ Transformational Matrix +++ !!!

DIM tMatrix[3][3]

tMatrix[1][1] = MEP_Position[2][1]
tMatrix[1][2] = MEP_Position[2][2]
tMatrix[1][3] = MEP_Position[2][3]

tMatrix[2][1] = MEP_Position[3][1]
tMatrix[2][2] = MEP_Position[3][2]
tMatrix[2][3] = MEP_Position[3][3]

tMatrix[3][1] = -MEP_Position[3][2]*MEP_Position[2][3]+MEP_Position[3][3]*MEP_Position[2][2]
tMatrix[3][2] = -MEP_Position[3][3]*MEP_Position[2][1]+MEP_Position[3][1]*MEP_Position[2][3]
tMatrix[3][3] = -MEP_Position[3][1]*MEP_Position[2][2]+MEP_Position[3][2]*MEP_Position[2][1]


						!!! +++ Input Coordinates +++ !!!

PUT ConPosX_1-ConLength_1, ConPosY_1, ConPosZ_1
PUT gs_Connections[1][4], gs_Connections[1][5], gs_Connections[1][6]
PUT gs_Connections[1][7], gs_Connections[1][8], gs_Connections[1][9]

PUT ConPosX_2+ConLength_2*gs_Connections[2][4], ConPosY_2+ConLength_2*gs_Connections[2][5], ConPosZ_2
PUT gs_Connections[2][4], gs_Connections[2][5], gs_Connections[2][6]
PUT gs_Connections[2][7], gs_Connections[2][8], gs_Connections[2][9]

Coordinates = NSP/3

DIM inCoords[20][3]

FOR cnum = 1 TO Coordinates
	inCoords[cnum][1] = GET(1)
	inCoords[cnum][2] = GET(1)
	inCoords[cnum][3] = GET(1)
NEXT cnum


! --- the Matrix Operation, what make the Output-Coordinates

DIM outCoords[20][3]

FOR cnum = 1 TO Coordinates
	outCoords[cnum][1] = inCoords[cnum][1]*tMatrix[1][1]+inCoords[cnum][2]*tMatrix[2][1]+inCoords[cnum][3]*tMatrix[3][1]
	outCoords[cnum][2] = inCoords[cnum][1]*tMatrix[1][2]+inCoords[cnum][2]*tMatrix[2][2]+inCoords[cnum][3]*tMatrix[3][2]
	outCoords[cnum][3] = inCoords[cnum][1]*tMatrix[1][3]+inCoords[cnum][2]*tMatrix[2][3]+inCoords[cnum][3]*tMatrix[3][3]
NEXT cnum


! --- uploading of MEP_NumConnectionData

FOR k = 1 TO MEP_NumberConnections
	FOR i = 1 TO 9
		j = 1+INT((i-0.5)/3)
		ad = 0
		IF i < 4 THEN ad = MEP_Position[1][i]
		MEP_NumConnectionData[k][i] = outCoords[j+3*(k-1)][i-3*(j-1)]+ad
		PARAMETERS MEP_NumConnectionData[k][i] = MEP_NumConnectionData[k][i]
	NEXT i
NEXT k

IF setProgram THEN
	SetProgram = 0
	PARAMETERS SetProgram = SetProgram
ELSE

							! ---------------------- !
							! --- object rotator --- !
							! ---------------------- !

	rot_conn = 0
	IF ABS(MEP_NumConnectionData[1][18] - 1) < EPS AND ABS(MEP_NumConnectionData[2][18]) < EPS THEN rot_conn = 1
	IF ABS(MEP_NumConnectionData[1][18]) < EPS AND ABS(MEP_NumConnectionData[2][18] - 1) < EPS THEN rot_conn = 2
	PARAMETERS rot_conn = rot_conn

	IF rot_conn < EPS THEN LOCK "Rotation"

	IF rot_conn THEN
		CALL "MEP_m_object_rotator" PARAMETERS 	rot_conn = rot_conn,
												MEP_Position = MEP_Position,
												Rotation = Rotation,
												symbRotangle = SYMB_ROTANGLE,
												gs_Connections = gs_Connections,
												MEP_NumberConnections = MEP_NumberConnections,
												MEP_NumConnectionData = MEP_NumConnectionData,
												MEP_NumConnectedConnectionData = MEP_NumConnectedConnectionData,
												defaultMatrix = defaultMatrix
	ENDIF


							! ---------------------- !
							! --- axial rotation --- !
							! ---------------------- !

	connected = 0
	FOR i = 1 TO MEP_NumberConnections
		connected = connected + MEP_NumConnectionData[i][18]
	NEXT i

	HIDEPARAMETER "RotationAroundZAxis"
	IF connected > EPS THEN	HIDEPARAMETER "RotationAroundDAxis", "RotationAroundWAxis"

	VALUES "RotationAroundWAxis" RANGE[-90, 90]

	IF ABS(MEP_NumConnectionData[1][21] - 2) < EPS THEN
		VALUES "RotationAroundDAxis" RANGE[-90, 90]
	ELSE
		VALUES "RotationAroundDAxis", -90, 0, 90
	ENDIF

	CALL "MEP_m_axial_rotation" PARAMETERS all


							! ------------------- !
							! --- calculation --- !
							! ------------------- !

	IF MEP_BendStyleID = 2 THEN
		IF SGN(ConThroatLength_1-ConThroatLength_2) = -1 THEN ductStraightLengthB = ABS(ConThroatLength_1-ConThroatLength_2)
		IF SGN(ConThroatLength_1-ConThroatLength_2) = 1 THEN ductStraightLengthA = ABS(ConThroatLength_1-ConThroatLength_2)
	ENDIF

	IF ABS(MEP_ThroatSegments - 2) < EPS AND ABS(MEP_HeelSegments - 2) < EPS THEN
		length = (MEP_BendRadius*TAN(MEP_BendAngle/2))*2
	ELSE
		length = MEP_BendRadius*(PI/180)*MEP_BendAngle
	ENDIF
	length = length+ductStraightLengthA+ductStraightLengthB
	PARAMETERS MEP_StraightLength = length

	IF ABS(MEP_NumConnectionData[1][21] - 1) < EPS THEN
		gs_list_area = (ConWidth_1 + ConDepth_1)*2*length
	ENDIF

	IF ABS(MEP_NumConnectionData[1][21] - 2) < EPS THEN
		gs_list_area = ConWidth_1*PI*length
	ENDIF

	IF ABS(MEP_NumConnectionData[1][21] - 3) < EPS THEN
		gs_list_area = ((MIN(ConWidth_1, ConDepth_1))*PI+ABS(ConWidth_1-ConDepth_1)*2)*length
	ENDIF
	PARAMETERS gs_list_area = gs_list_area
ENDIF
