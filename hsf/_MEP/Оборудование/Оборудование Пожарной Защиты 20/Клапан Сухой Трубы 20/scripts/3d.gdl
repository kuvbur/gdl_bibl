!-----------3d---------------------
if show_el < EPS then end
IF gs_detlevel_3D_m < EPS THEN END
CALL "MEP_m_RequestSystemGlobals" PARAMETERS ALL one_ConID=0 returned_parameters gs_cont_pen, sMat, gs_InsMat, MEP_cline_pen, show_el

! Dry Pipe Valve


IF gs_detlevel_3D_m = -1 THEN
	gs_detlevel_3D_m = 2	! Detailed
	IF gs_detlevel_3D = `Откл.` THEN gs_detlevel_3D_m = 0
	IF gs_detlevel_3D = `Простой` THEN gs_detlevel_3D_m = 1
ENDIF

IF gs_detlevel_3D_m = 0 THEN END

res = 24	! Detailed
IF gs_detlevel_3D_m = 1 THEN res = 8	! Simple
IF GLOB_CONTEXT = 2 THEN res = 24

MainBoxMaterial = sMat
MATERIAL MainBoxMaterial
PEN gs_cont_pen
RESOL res


						! ---------------------- !
						! --- object rotator --- !
						! ---------------------- !

IF rot_conn THEN
	dist_x = A/2
	dist_y = -B*0.60

	CALL "MEP_m_object_rotator" PARAMETERS 	rot_conn = rot_conn,
											MEP_Position = MEP_Position,
											dist_x = dist_x,
											dist_y = dist_y,
											Rotation = Rotation,
											symbRotangle = SYMB_ROTANGLE,
											gs_Connections = gs_Connections,
											MEP_NumberConnections = MEP_NumberConnections,
											MEP_NumConnectionData = MEP_NumConnectionData,
											defaultMatrix = defaultMatrix
ENDIF


				! --- TRANSFORMATION --- !

XFORM   MEP_Position[2][1], MEP_Position[3][1], dZx, MEP_Position[1][1],
		MEP_Position[2][2], MEP_Position[3][2], dZy, MEP_Position[1][2],
		MEP_Position[2][3], MEP_Position[3][3], dZz, MEP_Position[1][3]


			! --- HOTSPOTS --- !

unID = 1
HOTSPOT 0, 0, 0, unID: unID=unID+1
HOTSPOT 0, B*0.40, 0, unID: unID=unID+1
HOTSPOT 0, -B*0.60, 0, unID: unID=unID+1


IF gs_detlevel_3D_m = 0 THEN	! Wireframe
!!	pipeR = Conwidth_1/2
!!
!!	LIN_ -A/2, 0, 0, A/2, 0, 0
!!	LIN_ 0, 0, 0, 0, -hptsL, 0
!!
!!	LIN_ 0.4*A,0,-0.8*pipeR, 0.4*A,0,0.8*pipeR
!!	LIN_ -0.4*A,0,-0.8*pipeR, -0.4*A,0,0.8*pipeR
!!	LIN_ 0.4*A,0,-0.8*pipeR, -0.4*A,0,0.8*pipeR
!!	LIN_ -0.4*A,0,-0.8*pipeR, 0.4*A,0,0.8*pipeR
!!
!!	fa = 0
!!	IF gs_AddConnections[1][1] < 2 THEN fa = 1
!!	IF gs_AddConnections[1][1] = 3 AND ABS(MEP_NumConnectionData[1][20]-2) < EPS THEN fa = 1
!!	IF gs_AddConnections[1][1] = 4 AND ABS(MEP_NumConnectionData[1][20]-2) < EPS THEN fa = 1
!!
!!	fb = 0
!!	IF gs_AddConnections[2][1] < 2 THEN fb = 1
!!	IF gs_AddConnections[2][1] = 3 AND ABS(MEP_NumConnectionData[1][20]-2) < EPS THEN fb = 1
!!	IF gs_AddConnections[2][1] = 4 AND ABS(MEP_NumConnectionData[1][20]-2) < EPS THEN fb = 1
!!
!!	IF fa OR fb THEN
!!		MODEL WIRE
!!		ROTy -90
!!		ADDz A/2
!!		IF fa THEN CIRCLE ConConnectorWidth_1/2
!!		DEL 1
!!		ADDz -A/2
!!		CIRCLE ConConnectorWidth_2/2
!!		DEL 2
!!		MODEL SOLID
!!	ENDIF
ELSE

	DIM StraightPosition[][]

	StraightPosition[1][1] = -A/2
	StraightPosition[1][2] = 0
	StraightPosition[1][3] = 0

	StraightPosition[2][1] = 1
	StraightPosition[2][2] = 0
	StraightPosition[2][3] = 0

	StraightPosition[3][1] = 0
	StraightPosition[3][2] = 1
	StraightPosition[3][3] = 0

	CALL "MEP_m_Pipe_4" PARAMETERS 	MEP_Position = StraightPosition,
									MEP_NumberConnections = MEP_NumberConnections,
									MEP_NumConnectionData = MEP_NumConnectionData,
									MEP_StrConnectionData = MEP_StrConnectionData,
									MEP_StraightLength = A,
									gs_AddConnections = gs_AddConnections,
									pipe_show = 1,
									gs_PipeMat = MainBoxMaterial,
									MEP_InsShow = 0,
									MEP_cline_show_3D = 0,
									gs_detlevel_3D_m = gs_detlevel_3D_m,
									gs_cont_pen = gs_cont_pen


	ROTy 90
	CUTPOLYA 2, 2, 0,
		0, 0, 913,
		ConWidth_1/2, 360, 4013
	DEL 1

	SPHERE ZZYZX/2

	ROTx 90
	CYLIND B*0.60, (ConWidth_1*0.90)/2
	DEL 1

	ADDx -A/2+boxPosX
	ROTx -90
	IF gs_detlevel_3D = `Детальный` THEN
		PUT boxR, boxHeight/2, 79
		PUT boxLen-boxR, boxHeight/2, 79
		PUT boxLen, boxHeight/2-boxR, 1079
		PUT boxLen, -boxHeight/2+boxR, 79
		PUT boxLen-boxR, -boxHeight/2, 1079
		PUT boxR, -boxHeight/2, 79
		PUT 0, -boxHeight/2+boxR, 1079
		PUT 0, boxHeight/2-boxR, 79
		PUT boxR, boxHeight/2, 1079
	ELSE
		PUT 0, boxHeight/2, 79
		PUT boxLen, boxHeight/2, 79
		PUT boxLen, -boxHeight/2, 79
		PUT 0, -boxHeight/2, 79
	ENDIF

	PRISM_ NSP/3, B*0.40,

		GET(NSP)

	DEL 2
	CUTEND
ENDIF
DEL 1

END
