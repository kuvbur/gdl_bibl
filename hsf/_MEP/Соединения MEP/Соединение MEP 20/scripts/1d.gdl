!--------------------------------------Основной--------------------------------
EPS = 0.00001
if (GLOB_SCRIPT_TYPE = 2 or GLOB_SCRIPT_TYPE = 3) and (GLOB_PREVIEW_MODE <> 0 or GLOB_FEEDBACK_MODE <> 0) then
	gs_detlevel_2D_m = 1
	gs_detlevel_3D_m = 1
	show_axis = 0
	show_axis_and = 1
	show_conventions = 0
	show_size = 0
	show_el = 1
	show_isol = 0
	hide_conventions = 0
else
	call "Показ_систем" PARAMETERS All isMep=1, isEqp=0 RETURNED_PARAMETERS show_el, syst_name
	success = LIBRARYGLOBAL ("Libraryflobals-mep", "show_axis", show_axis)
	success = LIBRARYGLOBAL ("Libraryflobals-mep", "show_axis_and", show_axis_and)
	success = LIBRARYGLOBAL ("Libraryflobals-mep", "show_isol", show_isol)
	success = LIBRARYGLOBAL ("Libraryflobals-mep", "show_conventions", show_conventions)
	success = LIBRARYGLOBAL ("Libraryflobals-mep", "show_size", show_size)
	success = LIBRARYGLOBAL ("Libraryflobals-mep", "gs_detlevel_2D_m",gs_detlevel_2D_m)
	success = LIBRARYGLOBAL ("Libraryflobals-mep", "gs_detlevel_3D_m", gs_detlevel_3D_m)
endif
is_sech = 0 : if (show_el-1)>EPS then is_sech = 1
IF gs_detlevel_3D_m = 2 THEN res = 22
IF gs_detlevel_3D_m = 1 THEN res = 12
IF gs_detlevel_3D_m = 0 THEN res = 12
!--------------------------------------Основной--------------------------------
flangeout1 = 0 : flangeout2 = 0
if haskey(mep_con.find.flangeout) then flangeout1 = mep_con.find.flangeout
if haskey(mep_con.find.flangeout1) then flangeout1 = mep_con.find.flangeout1
if haskey(mep_con.find.flangeout2) then
	flangeout2 = mep_con.find.flangeout2
else
	flangeout2 = flangeout1
endif
gs_cont_pen = SYMB_VIEW_PEN

					!!! +++ Transformational Matrix +++ !!!

DIM tMatrix[3][3]

tMatrix[1][1] = MEP_Position[2][1]
tMatrix[1][2] = MEP_Position[2][2]
tMatrix[1][3] = MEP_Position[2][3]

tMatrix[2][1] = MEP_Position[3][1]
tMatrix[2][2] = MEP_Position[3][2]
tMatrix[2][3] = MEP_Position[3][3]

tMatrix[3][1] = -MEP_Position[3][2]*MEP_Position[2][3]+MEP_Position[3][3]*MEP_Position[2][2]
tMatrix[3][2] = -MEP_Position[3][3]*MEP_Position[2][1]+MEP_Position[3][1]*MEP_Position[2][3]
tMatrix[3][3] = -MEP_Position[3][1]*MEP_Position[2][2]+MEP_Position[3][2]*MEP_Position[2][1]


						!!! +++ Input Coordinates +++ !!!

isDuctClass = 0
IF ABS(MEP_NumConnectionData[1][19] - 1) < EPS THEN isDuctClass = 1

halfWidth = ConWidth_1/2+ConWallThickness_1*isDuctClass
IF ABS(MEP_NumConnectionData[1][21] - 2) < EPS THEN
	halfDepth = ConWidth_1/2+ConWallThickness_1*isDuctClass
ELSE
	halfDepth = ConDepth_1/2+ConWallThickness_1*isDuctClass
ENDIF

IF ABS(gs_AddConnections[1][1] - 1) < EPS THEN
	halfWidthOnEnd = halfWidth
	halfDepthOnEnd = halfDepth
ELSE
	IF isDuctClass THEN
		halfWidthOnEnd = halfWidth+ConConnectorWidth_1
		halfDepthOnEnd = halfDepth+ConConnectorWidth_1
	ELSE
		halfWidthOnEnd = ConConnectorWidth_1/2
		halfDepthOnEnd = ConConnectorWidth_1/2
	ENDIF
ENDIF

PUT 0, halfWidth, halfDepth
PUT 0, -halfWidth, halfDepth
PUT 0, halfWidth, -halfDepth
PUT 0, -halfWidth, -halfDepth

PUT ConLength_1, halfWidthOnEnd, halfDepthOnEnd
PUT ConLength_1, -halfWidthOnEnd, halfDepthOnEnd
PUT ConLength_1, halfWidthOnEnd, -halfDepthOnEnd
PUT ConLength_1, -halfWidthOnEnd, -halfDepthOnEnd

Coordinates = NSP/3

DIM inCoords[20][3]

FOR cnum = 1 TO Coordinates
	inCoords[cnum][1] = GET(1)
	inCoords[cnum][2] = GET(1)
	inCoords[cnum][3] = GET(1)
NEXT cnum


! --- the Matrix Operation, what make the Output-Coordinates

DIM outCoords[20][3]

FOR cnum = 1 TO Coordinates
	outCoords[cnum][1] = inCoords[cnum][1]*tMatrix[1][1]+inCoords[cnum][2]*tMatrix[2][1]+inCoords[cnum][3]*tMatrix[3][1]
	outCoords[cnum][2] = inCoords[cnum][1]*tMatrix[1][2]+inCoords[cnum][2]*tMatrix[2][2]+inCoords[cnum][3]*tMatrix[3][2]
	outCoords[cnum][3] = inCoords[cnum][1]*tMatrix[1][3]+inCoords[cnum][2]*tMatrix[2][3]+inCoords[cnum][3]*tMatrix[3][3]
NEXT cnum
