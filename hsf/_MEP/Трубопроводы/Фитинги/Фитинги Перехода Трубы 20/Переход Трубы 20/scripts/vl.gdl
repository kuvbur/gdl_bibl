
! Pipe Transformer
! Zsolt Feke/2007


call "FM_types_MEP" parameters

DIM shape_typ_to_validation[3]
	shape_typ_to_validation[1] = 0		! Rectangle
	shape_typ_to_validation[2] = 1		! Circle
	shape_typ_to_validation[3] = 0		! Oval

!IF GLOB_MODPAR_NAME = "gs_detlevel_3D" THEN
!	gs_detlevel_3D_m = 2	! Detailed
!	IF gs_detlevel_3D = `Откл.` THEN gs_detlevel_3D_m = 0
!	IF gs_detlevel_3D = `Простой` THEN gs_detlevel_3D_m = 1
!	PARAMETERS gs_detlevel_3D_m = gs_detlevel_3D_m
!ELSE
!	IF gs_detlevel_3D_m = 0 THEN gs_detlevel_3D = `Откл.`
!	IF gs_detlevel_3D_m = 1 THEN gs_detlevel_3D = `Простой`
!	IF gs_detlevel_3D_m = 2 THEN gs_detlevel_3D = `Детальный`
!	PARAMETERS gs_detlevel_3D = gs_detlevel_3D
!ENDIF
!
!VALUES "gs_detlevel_3D" `Детальный`,`Простой`,`Откл.`
!VALUES "gs_detlevel_3D_m" 2, 1, 0

VALUES "MEP_StraightLength" RANGE(0, ]
VALUES "MEP_InsThickness" RANGE(0, ]

VALUES "MEP_TransformerAngle" RANGE(0, 90)
IF NOT(MEP_offset_y) AND NOT(MEP_offset_z) THEN

ELSE
	HIDEPARAMETER "MEP_TransformerAngle"
	LOCK "MEP_TransformerAngle"
ENDIF

gs_ui = 1


					! --- CONNECTIONS --- !

	PARAMETERS MEP_NumberConnections = 2


					! --- 1st CONNECTION --- !

	ConID = 1
	ConName = `Основное 1`

	ConDVecX = -1
	ConDVecY = 0
	ConDVecZ = 0

	ConWVecX = 0
	ConWVecY = -1
	ConWVecZ = 0

	IF NOT(setProgram) THEN
		isConLength = 1
		IF ABS(gs_AddConnections[1][1] - 1) < EPS THEN isConLength = 0
		ConLength_1 = ConConnectorWidth2_1*isConLength
		PARAMETERS ConLength_1 = ConLength_1
		ConPosX_1 = ConLength_1
		PARAMETERS ConPosX_1 = ConPosX_1
		PARAMETERS ConPosY_1 = 0
		PARAMETERS ConPosZ_1 = 0
	ENDIF

	CALL "MEP_m_ConnectionsMEP_4" PARAMETERS SetProgram = SetProgram,
		gs_Connections = gs_Connections,
		MEP_NumConnectionData = MEP_NumConnectionData,
		MEP_StrConnectionData = MEP_StrConnectionData,
		MEP_NumberConnections = MEP_NumberConnections,
		gs_AddConnections = gs_AddConnections,
		ConName = ConName,
		ConID = ConID,
		ConPosX = ConPosX_1,
		ConPosY = ConPosY_1,
		ConPosZ = ConPosZ_1,
		ConDVecX = ConDVecX,
		ConDVecY = ConDVecY,
		ConDVecZ = ConDVecZ,
		ConWVecX = ConWVecX,
		ConWVecY = ConWVecY,
		ConWVecZ = ConWVecZ,

		ConNominalWidth = ConNominalWidth_1,
		ConNominalDepth = ConNominalDepth_1,
		ConWidth = ConWidth_1,
		ConDepth = ConDepth_1,
		ConLength = ConLength_1,
		ConWallThickness = ConWallThickness_1,
		ConConnectorWidth = ConConnectorWidth_1,
		ConConnectorDepth = ConConnectorDepth_1,
		ConConnectorWidth2 = ConConnectorWidth2_1,
		ConToolType = ConToolType_1,
		ConStatus = ConStatus_1,
		ConType_1 = ConType_1,
		ConConnectorType_1 = ConConnectorType_1,
		ConSystem_1 = ConSystem_1,
		gs_ui = gs_ui,
		MEP_bEnableInsulation = 1,
		MEP_InsShow = MEP_InsShow,
		MEP_InsThickness = MEP_InsThickness,
		ui_page_idx = ui_page_idx,
		shape_typ_to_validation = shape_typ_to_validation,
		MEP_enabled_geometry_mod = 1,
		MEP_cline_show = MEP_cline_show, ConConnectorTypeFlange_1 = ConConnectorTypeFlange_1, mep_con = mep_con, mep_data = mep_data

PARAMETERS MEP_ConInfo[1][1] = STR(ConToolType_1, 1, 0)
PARAMETERS MEP_ConInfo[1][2] = ConName
PARAMETERS MEP_ConInfo[1][3] = "0"


					! --- 2nd CONNECTION --- !

	ConID = 2
	ConName = `Основное 2`

	ConDVecX = 1
	ConDVecY = 0
	ConDVecZ = 0

	ConWVecX = 0
	ConWVecY = 1
	ConWVecZ = 0

	IF NOT(setProgram) THEN
		isConLength = 1
		IF ABS(gs_AddConnections[2][1] - 1) < EPS THEN isConLength = 0
		ConLength_2 = ConConnectorWidth2_2*isConLength
		PARAMETERS ConLength_2 = ConLength_2
		ConPosX_2 = MEP_StraightLength-ConLength_2
		PARAMETERS ConPosX_2 = ConPosX_2
		ConPosY_2 = MEP_offset_y
		PARAMETERS ConPosY_2 = ConPosY_2
		ConPosZ_2 = MEP_offset_z
		PARAMETERS ConPosZ_2 = ConPosZ_2
		ConSystem_2 = ConSystem_1
		PARAMETERS ConSystem_2 = ConSystem_2
		MEP_StrConnectionData[2][2] = MEP_StrConnectionData[1][2]
		PARAMETERS MEP_StrConnectionData[2][2] = MEP_StrConnectionData[2][2]

		ConWallThickness_2 = ConWallThickness_2
		PARAMETERS ConWallThickness_2 = ConWallThickness_2
	ENDIF

	CALL "MEP_m_ConnectionsMEP_4" PARAMETERS SetProgram = SetProgram,
		gs_Connections = gs_Connections,
		MEP_NumConnectionData = MEP_NumConnectionData,
		MEP_StrConnectionData = MEP_StrConnectionData,
		MEP_NumberConnections = MEP_NumberConnections,
		gs_AddConnections = gs_AddConnections,
		ConName = ConName,
		ConID = ConID,
		ConPosX = ConPosX_2,
		ConPosY = ConPosY_2,
		ConPosZ = ConPosZ_2,
		ConDVecX = ConDVecX,
		ConDVecY = ConDVecY,
		ConDVecZ = ConDVecZ,
		ConWVecX = ConWVecX,
		ConWVecY = ConWVecY,
		ConWVecZ = ConWVecZ,

		ConNominalWidth = ConNominalWidth_2,
		ConNominalDepth = ConNominalDepth_2,
		ConWidth = ConWidth_2,
		ConDepth = ConDepth_2,
		ConLength = ConLength_2,
		ConWallThickness = ConWallThickness_2,
		ConConnectorWidth = ConConnectorWidth_2,
		ConConnectorDepth = ConConnectorDepth_2,
		ConConnectorWidth2 = ConConnectorWidth2_2,
		ConToolType = ConToolType_2,
		ConStatus = ConStatus_2,
		ConType_2 = ConType_2,
		ConConnectorType_2 = ConConnectorType_2,
		ConSystem_2 = ConSystem_2,
		gs_ui = gs_ui,
		MEP_bEnableInsulation = 1,
		MEP_InsShow = MEP_InsShow,
		MEP_InsThickness = MEP_InsThickness,
		shape_typ_to_validation = shape_typ_to_validation,
		MEP_enabled_geometry_mod = 1, ConConnectorTypeFlange_1 = ConConnectorTypeFlange_1, mep_con = mep_con, mep_data = mep_data

PARAMETERS MEP_ConInfo[2][1] = STR(ConToolType_2, 1, 0)
PARAMETERS MEP_ConInfo[2][2] = ConName
PARAMETERS MEP_ConInfo[2][3] = "0"


					!!! +++ Transformational Matrix +++ !!!

DIM tMatrix[3][3]

tMatrix[1][1] = MEP_Position[2][1]
tMatrix[1][2] = MEP_Position[2][2]
tMatrix[1][3] = MEP_Position[2][3]

tMatrix[2][1] = MEP_Position[3][1]
tMatrix[2][2] = MEP_Position[3][2]
tMatrix[2][3] = MEP_Position[3][3]

tMatrix[3][1] = -MEP_Position[3][2]*MEP_Position[2][3]+MEP_Position[3][3]*MEP_Position[2][2]
tMatrix[3][2] = -MEP_Position[3][3]*MEP_Position[2][1]+MEP_Position[3][1]*MEP_Position[2][3]
tMatrix[3][3] = -MEP_Position[3][1]*MEP_Position[2][2]+MEP_Position[3][2]*MEP_Position[2][1]


						!!! +++ Input Coordinates +++ !!!

PUT ConPosX_1-ConLength_1, ConPosY_1, ConPosZ_1
PUT gs_Connections[1][4], gs_Connections[1][5], gs_Connections[1][6]
PUT gs_Connections[1][7], gs_Connections[1][8], gs_Connections[1][9]

PUT ConPosX_2+ConLength_2, ConPosY_2, ConPosZ_2
PUT gs_Connections[2][4], gs_Connections[2][5], gs_Connections[2][6]
PUT gs_Connections[2][7], gs_Connections[2][8], gs_Connections[2][9]

Coordinates = NSP/3

DIM inCoords[20][3]

FOR cnum = 1 TO Coordinates
	inCoords[cnum][1] = GET(1)
	inCoords[cnum][2] = GET(1)
	inCoords[cnum][3] = GET(1)
NEXT cnum


! --- the Matrix Operation, what make the Output-Coordinates

DIM outCoords[20][3]

FOR cnum = 1 TO Coordinates
	outCoords[cnum][1] = inCoords[cnum][1]*tMatrix[1][1]+inCoords[cnum][2]*tMatrix[2][1]+inCoords[cnum][3]*tMatrix[3][1]
	outCoords[cnum][2] = inCoords[cnum][1]*tMatrix[1][2]+inCoords[cnum][2]*tMatrix[2][2]+inCoords[cnum][3]*tMatrix[3][2]
	outCoords[cnum][3] = inCoords[cnum][1]*tMatrix[1][3]+inCoords[cnum][2]*tMatrix[2][3]+inCoords[cnum][3]*tMatrix[3][3]
NEXT cnum

z = 0
FOR i = 0 TO MEP_NumberConnections-1
	z = z + outCoords[1+3*i][3]
NEXT i

z = MEP_Position[1][3] + z/MEP_NumberConnections

PARAMETERS ac_toplevel 		= z
PARAMETERS ac_bottomlevel 	= z


! --- uploading of MEP_NumConnectionData

FOR k = 1 TO MEP_NumberConnections
	FOR i = 1 TO 9
		j = 1+INT((i-0.5)/3)
		ad = 0
		IF i < 4 THEN ad = MEP_Position[1][i]
		MEP_NumConnectionData[k][i] = outCoords[j+3*(k-1)][i-3*(j-1)]+ad
		PARAMETERS MEP_NumConnectionData[k][i] = MEP_NumConnectionData[k][i]
	NEXT i
NEXT k

IF setProgram THEN
	SetProgram = 0
	PARAMETERS SetProgram = SetProgram
ELSE

							! ---------------------- !
							! --- axial rotation --- !
							! ---------------------- !

	connected = 0
	FOR i = 1 TO MEP_NumberConnections
		connected = connected + MEP_NumConnectionData[i][18]
	NEXT i

	HIDEPARAMETER "RotationAroundDAxis", "RotationAroundZAxis"
	IF connected > EPS THEN	LOCK "RotationAroundWAxis"

	VALUES "RotationAroundWAxis" RANGE[-90, 90]

	CALL "MEP_m_axial_rotation" PARAMETERS all


							! ------------------- !
							! --- calculation --- !
							! ------------------- !

	calcLength = MEP_StraightLength - ConConnectorWidth2_1*(ABS(gs_AddConnections[1][1] - 2) < EPS) - ConConnectorWidth2_2*(ABS(gs_AddConnections[2][1] - 2) < EPS)
	connectorArea_1 = ConConnectorWidth_1*PI*ConConnectorWidth2_1*(ABS(gs_AddConnections[1][1] - 2) < EPS)
	connectorArea_2 = ConConnectorWidth_2*PI*ConConnectorWidth2_2*(ABS(gs_AddConnections[2][1] - 2) < EPS)
	gs_list_area = (ConWidth_1/2+ConWidth_2/2)*PI*calcLength + connectorArea_1 + connectorArea_2
	PARAMETERS gs_list_area = gs_list_area


	insideIntersectionArea = (((ConWidth_1/2-ConWallThickness_1)^2+(ConWidth_2/2-ConWallThickness_2)^2)/2)*PI
	intersectionArea = (((ConWidth_1/2)^2+(ConWidth_2/2)^2)/2)*PI - insideIntersectionArea
	connectorIntersectionArea_1 = ((ConConnectorWidth_1/2)^2 - (ConWidth_1/2 - ConWallThickness_1)^2)*PI
	connectorIntersectionArea_2 = ((ConConnectorWidth_2/2)^2 - (ConWidth_2/2 - ConWallThickness_2)^2)*PI
	connectorVolume_1 = connectorIntersectionArea_1*ConConnectorWidth2_1*(ABS(gs_AddConnections[1][1] - 2) < EPS)
	connectorVolume_2 = connectorIntersectionArea_2*ConConnectorWidth2_2*(ABS(gs_AddConnections[2][1] - 2) < EPS)
	gs_list_volume = intersectionArea*calcLength + connectorVolume_1 + connectorVolume_2
	PARAMETERS gs_list_volume = gs_list_volume
ENDIF
