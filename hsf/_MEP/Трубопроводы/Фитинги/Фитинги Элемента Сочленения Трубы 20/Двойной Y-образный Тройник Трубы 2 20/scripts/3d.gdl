!-----------3d---------------------
if show_el < EPS then end
IF gs_detlevel_3D_m < EPS THEN END
CALL "MEP_m_RequestSystemGlobals" PARAMETERS ALL one_ConID=0 returned_parameters gs_cont_pen, sMat, gs_InsMat, MEP_cline_pen, show_el
pipe_show = pipe_show*not(show_axis)

IF gs_detlevel_3D_m = -1 THEN
	gs_detlevel_3D_m = 2	! Detailed
	IF gs_detlevel_3D = `Откл.` THEN gs_detlevel_3D_m = 0
	IF gs_detlevel_3D = `Простой` THEN gs_detlevel_3D_m = 1
ENDIF

res = 24	! Detailed
IF gs_detlevel_3D_m = 1 THEN res = 8	! Simple

PEN gs_cont_pen
RESOL res

gs_PipeMat = sMat


IF gs_detlevel_3D_m = 0 THEN
	pipe_show = 0
	MEP_InsShow = 0
ENDIF

HptsUnIDBeginForConnEnds = 30000

hceID_1 = HptsUnIDBeginForConnEnds+100
hceID_2 = HptsUnIDBeginForConnEnds+200
hceID_3 = HptsUnIDBeginForConnEnds+300
hceID_4 = HptsUnIDBeginForConnEnds+400


						! -------------------------- !
						! --- data to bend macro --- !
						! -------------------------- !

DIM BendPosition[3][3]

	BendPosition[1][1] = MEP_BranchOffsetX
	BendPosition[1][2] = ConWidth_1/2 + MEP_BranchOffsetY + cW3
	BendPosition[1][3] = 0

	BendPosition[2][1] = 0
	BendPosition[2][2] = -1
	BendPosition[2][3] = 0

	BendPosition[3][1] = -1
	BendPosition[3][2] = 0
	BendPosition[3][3] = 0

DIM Bend_NumConnectionData[2][26]

	FOR i = 1 TO 2
		FOR j = 1 TO 26
			Bend_NumConnectionData[i][j] = 0
		NEXT j
	NEXT i

	Bend_NumConnectionData[1][12] = MEP_NumConnectionData[3][12]
	Bend_NumConnectionData[1][15] = MEP_NumConnectionData[3][15]
	Bend_NumConnectionData[1][17] = MEP_NumConnectionData[3][17]
	Bend_NumConnectionData[1][18] = MEP_NumConnectionData[3][18]
	Bend_NumConnectionData[1][20] = MEP_NumConnectionData[3][20]

	Bend_NumConnectionData[2][12] = MEP_NumConnectionData[3][12]
	Bend_NumConnectionData[2][15] = MEP_NumConnectionData[3][12]
	Bend_NumConnectionData[2][17] = 0
	Bend_NumConnectionData[2][18] = 0
	Bend_NumConnectionData[2][20] = 0

DIM Bend_AddConnections[2][2]

	Bend_AddConnections[1][1] = gs_AddConnections[3][1]
	Bend_AddConnections[2][1] = 1
	Bend_AddConnections[1][2] = 0
	Bend_AddConnections[2][2] = 0

DIM Bend_EdgeOnEnds[2]

	Bend_EdgeOnEnds[1] = 1
	Bend_EdgeOnEnds[2] = 0

DIM Bend2Position[3][3]

	Bend2Position[1][1] = MEP_BranchOffsetX
	Bend2Position[1][2] = -ConWidth_1/2 - MEP_BranchOffsetY - cW4
	Bend2Position[1][3] = 0

	Bend2Position[2][1] = 0
	Bend2Position[2][2] = 1
	Bend2Position[2][3] = 0

	Bend2Position[3][1] = -1
	Bend2Position[3][2] = 0
	Bend2Position[3][3] = 0

DIM Bend2_NumConnectionData[2][26]

	FOR i = 1 TO 2
		FOR j = 1 TO 26
			Bend2_NumConnectionData[i][j] = 0
		NEXT j
	NEXT i

	Bend2_NumConnectionData[1][12] = MEP_NumConnectionData[4][12]
	Bend2_NumConnectionData[1][15] = MEP_NumConnectionData[4][15]
	Bend2_NumConnectionData[1][17] = MEP_NumConnectionData[4][17]
	Bend2_NumConnectionData[1][18] = MEP_NumConnectionData[4][18]
	Bend2_NumConnectionData[1][20] = MEP_NumConnectionData[4][20]

	Bend2_NumConnectionData[2][12] = MEP_NumConnectionData[4][12]
	Bend2_NumConnectionData[2][15] = MEP_NumConnectionData[4][12]
	Bend2_NumConnectionData[2][17] = 0
	Bend2_NumConnectionData[2][18] = 0
	Bend2_NumConnectionData[2][20] = 0

DIM Bend2_AddConnections[2][2]

	Bend2_AddConnections[1][1] = gs_AddConnections[4][1]
	Bend2_AddConnections[2][1] = 1
	Bend2_AddConnections[1][2] = 0
	Bend2_AddConnections[2][2] = 0

branchStraightLength = (ConWidth_1/2+MEP_BranchOffsetY-bendRadius*SIN(bendAngle))/SIN(MEP_BranchAngle)


						! ---------------------- !
						! --- object rotator --- !
						! ---------------------- !

IF rot_conn THEN

	IF rot_conn = 1 THEN
		dist_x = gs_Connections[3][1]+gs_Connections[3][23]*gs_Connections[3][4]
		dist_y = ConWidth_1/2
	ELSE
		DIM inCoords[20][3]
		DIM outCoords[20][3]

		DIM cMatrix[3][3]

		cMatrix[1][1] = gs_Connections[rot_conn][4]
		cMatrix[1][2] = gs_Connections[rot_conn][5]
		cMatrix[1][3] = gs_Connections[rot_conn][6]

		cMatrix[2][1] = gs_Connections[rot_conn][7]
		cMatrix[2][2] = gs_Connections[rot_conn][8]
		cMatrix[2][3] = gs_Connections[rot_conn][9]

		cMatrix[3][1] = -cMatrix[2][2]*cMatrix[1][3]+cMatrix[2][3]*cMatrix[1][2]
		cMatrix[3][2] = -cMatrix[2][3]*cMatrix[1][1]+cMatrix[2][1]*cMatrix[1][3]
		cMatrix[3][3] = -cMatrix[2][1]*cMatrix[1][2]+cMatrix[2][2]*cMatrix[1][1]


		DIM tMatrix[3][3]

		tMatrix[1][1] = cMatrix[1][1]
		tMatrix[1][2] = cMatrix[2][1]
		tMatrix[1][3] = cMatrix[3][1]

		tMatrix[2][1] = cMatrix[1][2]
		tMatrix[2][2] = cMatrix[2][2]
		tMatrix[2][3] = cMatrix[3][2]

		tMatrix[3][1] = cMatrix[1][3]
		tMatrix[3][2] = cMatrix[2][3]
		tMatrix[3][3] = cMatrix[3][3]


								!!! +++ Input Coordinates +++ !!!

		cx = gs_Connections[rot_conn][1]+gs_Connections[rot_conn][23]*gs_Connections[rot_conn][4]
		cy = gs_Connections[rot_conn][2]+gs_Connections[rot_conn][23]*gs_Connections[rot_conn][5]
		cz = gs_Connections[rot_conn][3]+gs_Connections[rot_conn][23]*gs_Connections[rot_conn][6]

		PUT cx, cy, cz

		Coordinates = NSP/3

		FOR cnum = 1 TO Coordinates
			inCoords[cnum][1] = GET(1)
			inCoords[cnum][2] = GET(1)
			inCoords[cnum][3] = GET(1)
		NEXT cnum


		! --- the Matrix Operation, what make the Output-Coordinates

		FOR cnum = 1 TO Coordinates
			outCoords[cnum][1] = inCoords[cnum][1]*tMatrix[1][1]+inCoords[cnum][2]*tMatrix[2][1]+inCoords[cnum][3]*tMatrix[3][1]
			outCoords[cnum][2] = inCoords[cnum][1]*tMatrix[1][2]+inCoords[cnum][2]*tMatrix[2][2]+inCoords[cnum][3]*tMatrix[3][2]
			outCoords[cnum][3] = inCoords[cnum][1]*tMatrix[1][3]+inCoords[cnum][2]*tMatrix[2][3]+inCoords[cnum][3]*tMatrix[3][3]
		NEXT cnum

		dist_x = outCoords[1][1]
		dist_y = outCoords[1][2]
	ENDIF

	CALL "MEP_m_object_rotator" PARAMETERS 	rot_conn = rot_conn,
											MEP_Position = MEP_Position,
											dist_x = dist_x,
											dist_y = dist_y,
											Rotation = Rotation,
											symbRotangle = SYMB_ROTANGLE,
											gs_Connections = gs_Connections,
											MEP_NumberConnections = MEP_NumberConnections,
											MEP_NumConnectionData = MEP_NumConnectionData,
											MEP_NumConnectedConnectionData = MEP_NumConnectedConnectionData,
											defaultMatrix = defaultMatrix
ENDIF

IF pipe_show THEN				! -----> duct+connection <----- !
	MATERIAL gs_PipeMat

	CALL "MEP_m_Pipe_4" PARAMETERS 	MEP_Position = MEP_Position,
									gs_Connections = gs_Connections,
									MEP_NumberConnections = 2,
									MEP_NumConnectionData = MEP_NumConnectionData,
									MEP_StrConnectionData = MEP_StrConnectionData,
									MEP_StraightLength = MEP_StraightLength,
									gs_AddConnections = gs_AddConnections,
									pipe_show = 1,
									showHtps = 1,
									useSysMat = useSysMat,
									sMat = sMat,
									gs_PipeMat = gs_PipeMat,
									MEP_InsShow = 0,
									MEP_cline_show_3D = 0,
									gs_detlevel_3D_m = gs_detlevel_3D_m,
									gs_cont_pen = gs_cont_pen

	XFORM   MEP_Position[2][1], MEP_Position[3][1], dZx, MEP_Position[1][1],
			MEP_Position[2][2], MEP_Position[3][2], dZy, MEP_Position[1][2],
			MEP_Position[2][3], MEP_Position[3][3], dZz, MEP_Position[1][3]

	HOTSPOT ConPosX_3, 0, 0, 100
	cW3 = MEP_NumConnectionData[3][17]*(ABS(gs_AddConnections[3][1]-1) > EPS)
	HOTSPOT ConPosX_3, ConPosY_3+cW3, 0, hceID_3
	cW4 = MEP_NumConnectionData[4][17]*(ABS(gs_AddConnections[4][1]-1) > EPS)
	HOTSPOT ConPosX_4, ConPosY_4-cW4, 0, hceID_4

	ROTy 90
	CUTPOLYA 2, 2, 0,
		0, 0, 908,
		MEP_NumConnectionData[1][12]/2, 360, 4008
	DEL 1

	CALL "MEP_m_Pipe_Bend_4" PARAMETERS 	MEP_BendRadius = bendRadius,
											MEP_BendAngle = bendAngle,
											pipe_show = 1,
											showHtps = 0,
											MEP_cline_show_3D = 0,
											MEP_InsShow = 0,
											MEP_InsThickness = MEP_InsThickness,
											gs_cont_pen = gs_cont_pen,
											gs_PipeMat = gs_PipeMat,
											gs_detlevel_3D_m = gs_detlevel_3D_m,
											MEP_Position = BendPosition,
											MEP_NumConnectionData = Bend_NumConnectionData,
											gs_AddConnections = Bend_AddConnections,
											gs_EdgeOnEnds = Bend_EdgeOnEnds

	ADD ConPosX_3-(bendRadius-bendRadius*COS(bendAngle)), ConWidth_1/2+MEP_BranchOffsetY-bendRadius*SIN(bendAngle), 0
	ROTz -bendAngle
	ROTx 90

	EXTRUDE 2, 0, 0, branchStraightLength, 0,
		0, 0, 901,
		MEP_NumConnectionData[3][12]/2, 360, 4001

	DEL 3

	CALL "MEP_m_Pipe_Bend_4" PARAMETERS 	MEP_BendRadius = bendRadius,
											MEP_BendAngle = bendAngle,
											pipe_show = 1,
											showHtps = 0,
											MEP_cline_show_3D = 0,
											MEP_InsShow = 0,
											MEP_InsThickness = MEP_InsThickness,
											gs_cont_pen = gs_cont_pen,
											gs_PipeMat = gs_PipeMat,
											gs_detlevel_3D_m = gs_detlevel_3D_m,
											MEP_Position = Bend2Position,
											MEP_NumConnectionData = Bend2_NumConnectionData,
											gs_AddConnections = Bend2_AddConnections,
											gs_EdgeOnEnds = Bend_EdgeOnEnds

	ADD ConPosX_3-(bendRadius-bendRadius*COS(bendAngle)), -ConWidth_1/2-MEP_BranchOffsetY+bendRadius*SIN(bendAngle), 0
	ROTz bendAngle
	ROTx -90

	EXTRUDE 2, 0, 0, branchStraightLength, 0,
		0, 0, 901,
		MEP_NumConnectionData[3][12]/2, 360, 4001

	DEL 3

	CUTEND

	DEL 1
ENDIF


IF (MEP_cline_show and show_axis_and) or show_axis THEN			! -----> center line <----- !
	PEN MEP_cline_pen
	CALL "MEP_m_Pipe_4" PARAMETERS 	MEP_Position = MEP_Position,
									MEP_NumberConnections = 2,
									MEP_NumConnectionData = MEP_NumConnectionData,
									MEP_StrConnectionData = MEP_StrConnectionData,
									MEP_StraightLength = MEP_StraightLength,
									gs_AddConnections = gs_AddConnections,
									pipe_show = 0,
									MEP_InsShow = 0,
									MEP_cline_show_3D = 1,
									gs_cont_pen = gs_cont_pen

	XFORM   MEP_Position[2][1], MEP_Position[3][1], dZx, MEP_Position[1][1],
			MEP_Position[2][2], MEP_Position[3][2], dZy, MEP_Position[1][2],
			MEP_Position[2][3], MEP_Position[3][3], dZz, MEP_Position[1][3]

	CALL "MEP_m_Pipe_Bend_4" PARAMETERS 	MEP_BendRadius = bendRadius,
											MEP_BendAngle = bendAngle,
											pipe_show = 0,
											MEP_cline_show_3D = 1,
											MEP_InsShow = 0,
											gs_cont_pen = gs_cont_pen,
											MEP_Position = BendPosition,
											MEP_NumConnectionData = Bend_NumConnectionData,
											gs_AddConnections = Bend_AddConnections

	ADD ConPosX_3-(bendRadius-bendRadius*COS(bendAngle)), ConWidth_1/2+MEP_BranchOffsetY-bendRadius*SIN(bendAngle), 0
	ROTz -bendAngle
	ROTx 90

	LIN_ 0, 0, 0, 0, 0, branchStraightLength

	DEL 3

	CALL "MEP_m_Pipe_Bend_4" PARAMETERS 	MEP_BendRadius = bendRadius,
											MEP_BendAngle = bendAngle,
											pipe_show = 0,
											MEP_cline_show_3D = 1,
											MEP_InsShow = 0,
											gs_cont_pen = gs_cont_pen,
											MEP_Position = Bend2Position,
											MEP_NumConnectionData = Bend2_NumConnectionData,
											gs_AddConnections = Bend2_AddConnections

	ADD ConPosX_3-(bendRadius-bendRadius*COS(bendAngle)), -ConWidth_1/2-MEP_BranchOffsetY+bendRadius*SIN(bendAngle), 0
	ROTz bendAngle
	ROTx -90

	LIN_ 0, 0, 0, 0, 0, branchStraightLength

	DEL 3
	DEL 1
	PEN gs_cont_pen
ENDIF


IF MEP_InsShow and show_isol and not(show_axis) THEN				! -----> insulation <----- !
	MATERIAL gs_InsMat

	CALL "MEP_m_Pipe_4" PARAMETERS 	MEP_Position = MEP_Position,
									gs_Connections = gs_Connections,
									MEP_NumberConnections = 2,
									MEP_NumConnectionData = MEP_NumConnectionData,
									MEP_StrConnectionData = MEP_StrConnectionData,
									MEP_StraightLength = MEP_StraightLength,
									gs_AddConnections = gs_AddConnections,
									pipe_show = 0,
									MEP_InsShow = 1,
									MEP_InsThickness = MEP_InsThickness,
									useSysMat = useSysMat,
									sMat = sMat,
									gs_InsMat = gs_InsMat,
									MEP_cline_show_3D = 0,
									gs_detlevel_3D_m = gs_detlevel_3D_m,
									gs_cont_pen = gs_cont_pen

	XFORM   MEP_Position[2][1], MEP_Position[3][1], dZx, MEP_Position[1][1],
			MEP_Position[2][2], MEP_Position[3][2], dZy, MEP_Position[1][2],
			MEP_Position[2][3], MEP_Position[3][3], dZz, MEP_Position[1][3]

	ROTy 90
	CUTPOLYA 2, 2, 0,
		0, 0, 908,
		MEP_NumConnectionData[1][12]/2+MEP_InsThickness, 360, 4008
	DEL 1

	CALL "MEP_m_Pipe_Bend_4" PARAMETERS 	MEP_BendRadius = bendRadius,
											MEP_BendAngle = bendAngle,
											pipe_show = 0,
											MEP_cline_show_3D = 0,
											MEP_InsShow = 1,
											MEP_InsThickness = MEP_InsThickness,
											gs_cont_pen = gs_cont_pen,
											gs_InsMat = gs_InsMat,
											gs_detlevel_3D_m = gs_detlevel_3D_m,
											MEP_Position = BendPosition,
											MEP_NumConnectionData = Bend_NumConnectionData,
											gs_AddConnections = Bend_AddConnections,
											gs_EdgeOnEnds = Bend_EdgeOnEnds

	ADD ConPosX_4-(bendRadius-bendRadius*COS(bendAngle)), ConWidth_1/2+MEP_BranchOffsetY-bendRadius*SIN(bendAngle), 0
	ROTz -bendAngle
	ROTx 90

	EXTRUDE 2, 0, 0, branchStraightLength, 0,
		0, 0, 901,
		MEP_NumConnectionData[3][12]/2 + MEP_InsThickness, 360, 4001

	DEL 3

	CALL "MEP_m_Pipe_Bend_4" PARAMETERS 	MEP_BendRadius = bendRadius,
											MEP_BendAngle = bendAngle,
											pipe_show = 0,
											MEP_cline_show_3D = 0,
											MEP_InsShow = 1,
											MEP_InsThickness = MEP_InsThickness,
											gs_cont_pen = gs_cont_pen,
											gs_InsMat = gs_InsMat,
											gs_detlevel_3D_m = gs_detlevel_3D_m,
											MEP_Position = Bend2Position,
											MEP_NumConnectionData = Bend2_NumConnectionData,
											gs_AddConnections = Bend2_AddConnections,
											gs_EdgeOnEnds = Bend_EdgeOnEnds

	ADD ConPosX_4-(bendRadius-bendRadius*COS(bendAngle)), -ConWidth_1/2-MEP_BranchOffsetY+bendRadius*SIN(bendAngle), 0
	ROTz bendAngle
	ROTx -90

	EXTRUDE 2, 0, 0, branchStraightLength, 0,
		0, 0, 901,
		MEP_NumConnectionData[3][12]/2 + MEP_InsThickness, 360, 4001

	DEL 3

	CUTEND

	DEL 1
ENDIF


END
