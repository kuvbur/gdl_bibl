!--------------------------------------Основной--------------------------------
EPS = 0.00001
flangeth1 = 0
flangeout1 = 0
flangeth2 = 0
flangeout2 = 0
call "Показ_систем" PARAMETERS All isMep=1, isEqp=0 RETURNED_PARAMETERS show_el, syst_name
if (GLOB_SCRIPT_TYPE = 2 or GLOB_SCRIPT_TYPE = 3) and (GLOB_PREVIEW_MODE <> 0 or GLOB_FEEDBACK_MODE <> 0) then
	gs_detlevel_2D_m = 1
	gs_detlevel_3D_m = 1
	show_axis = 0
	show_axis_and = 1
	show_conventions = 0
	show_size = 0
	show_el = 1
	show_isol = 0
else
	success = LIBRARYGLOBAL ("Libraryflobals-mep", "show_axis", show_axis)
	success = LIBRARYGLOBAL ("Libraryflobals-mep", "show_axis_and", show_axis_and)
	success = LIBRARYGLOBAL ("Libraryflobals-mep", "show_isol", show_isol)
	success = LIBRARYGLOBAL ("Libraryflobals-mep", "show_conventions", show_conventions)
	success = LIBRARYGLOBAL ("Libraryflobals-mep", "show_size", show_size)
	success = LIBRARYGLOBAL ("Libraryflobals-mep", "gs_detlevel_2D_m",gs_detlevel_2D_m)
	success = LIBRARYGLOBAL ("Libraryflobals-mep", "gs_detlevel_3D_m", gs_detlevel_3D_m)

	flangeout1 = 0 : flangeout2 = 0
	if haskey(mep_con.find.flangeout) then flangeout1 = mep_con.find.flangeout
	if haskey(mep_con.find.flangeout1) then flangeout1 = mep_con.find.flangeout1
	if haskey(mep_con.find.flangeout2) then
		flangeout2 = mep_con.find.flangeout2
	else
		flangeout2 = flangeout1
	endif
	flangeth1 = 0.003
	if abs(flangeout1)>EPS and flangeout1<EPS then
		flangeth1 = -flangeth1
		flangeout1 = abs(flangeout1)
	endif
	flangeth2 = 0.003
	if abs(flangeout2)>EPS and flangeout2<EPS then
		flangeth2 = -flangeth2
		flangeout2 = abs(flangeout2)
	endif
	
	if haskey(mep_con.group) then
		if mep_con.group<>12 then
			flangeth1 = 0
			flangeout1 = 0
			flangeth2 = 0
			flangeout2 = 0
		endif
	endif
endif
call "common_param" PARAMETERS ALL
is_sech = 0 : if (show_el-1)>EPS then is_sech = 1
IF gs_detlevel_3D_m = 2 THEN res = 22
IF gs_detlevel_3D_m = 1 THEN res = 12
IF gs_detlevel_3D_m = 0 THEN res = 12
!!--------------------------------------Основной--------------------------------




IF ABS(MEP_NumConnectionData[3][18]) > EPS THEN LOCK "ConLength_3"

IF useSysMat AND MEP_StrConnectionData[1][2] <> "0" THEN LOCK "gs_PipeMat", "gs_InsMat"

IF MEP_StrConnectionData[1][2] = "0" THEN LOCK "useSysMat"


						! ---------------- !
						! --- Z vector --- !
						! ---------------- !

dZx = -MEP_Position[3][2]*MEP_Position[2][3]+MEP_Position[3][3]*MEP_Position[2][2]
dZy = -MEP_Position[3][3]*MEP_Position[2][1]+MEP_Position[3][1]*MEP_Position[2][3]
dZz = -MEP_Position[3][1]*MEP_Position[2][2]+MEP_Position[3][2]*MEP_Position[2][1]


! --- Building of Transformational Matrix

DIM tMatrix[3][3]

tMatrix[1][1] = MEP_Position[2][1]
tMatrix[1][2] = MEP_Position[2][2]
tMatrix[1][3] = MEP_Position[2][3]

tMatrix[2][1] = MEP_Position[3][1]
tMatrix[2][2] = MEP_Position[3][2]
tMatrix[2][3] = MEP_Position[3][3]

tMatrix[3][1] = dZx
tMatrix[3][2] = dZy
tMatrix[3][3] = dZz


						!!! +++ Input Coordinates +++ !!!

PUT ConPosX_1-ConLength_1, ConPosY_1, ConPosZ_1
PUT gs_Connections[1][4], gs_Connections[1][5], gs_Connections[1][6]
PUT gs_Connections[1][7], gs_Connections[1][8], gs_Connections[1][9]

PUT ConPosX_2+ConLength_2, ConPosY_2, ConPosZ_2
PUT gs_Connections[2][4], gs_Connections[2][5], gs_Connections[2][6]
PUT gs_Connections[2][7], gs_Connections[2][8], gs_Connections[2][9]

PUT ConPosX_3, ConPosY_3+ConLength_3, ConPosZ_3
PUT gs_Connections[3][4], gs_Connections[3][5], gs_Connections[3][6]
PUT gs_Connections[3][7], gs_Connections[3][8], gs_Connections[3][9]

PUT ConPosX_3, 0, 0

Coordinates = NSP/3

DIM inCoords[20][3]

FOR cnum = 1 TO Coordinates
	inCoords[cnum][1] = GET(1)
	inCoords[cnum][2] = GET(1)
	inCoords[cnum][3] = GET(1)
NEXT cnum


! --- the Matrix Operation, what make the Output-Coordinates

DIM outCoords[20][3]

FOR cnum = 1 TO Coordinates
	outCoords[cnum][1] = inCoords[cnum][1]*tMatrix[1][1]+inCoords[cnum][2]*tMatrix[2][1]+inCoords[cnum][3]*tMatrix[3][1]
	outCoords[cnum][2] = inCoords[cnum][1]*tMatrix[1][2]+inCoords[cnum][2]*tMatrix[2][2]+inCoords[cnum][3]*tMatrix[3][2]
	outCoords[cnum][3] = inCoords[cnum][1]*tMatrix[1][3]+inCoords[cnum][2]*tMatrix[2][3]+inCoords[cnum][3]*tMatrix[3][3]
NEXT cnum


z = MEP_Position[1][3] + MEP_Position[2][3]*MEP_StraightLength/2
PARAMETERS ac_toplevel 		= z
PARAMETERS ac_bottomlevel 	= z


