!-----------2d---------------------
if show_el < EPS then end
IF gs_detlevel_2D_m < EPS THEN END

CALL "MEP_m_RequestSystemGlobals" PARAMETERS ALL one_ConID=0 returned_parameters gs_cont_pen, gs_fill_type, gs_fill_pen, gs_back_pen, MEP_cline_type, MEP_cline_pen, show_el

PEN gs_cont_pen
SET FILL gs_fill_type

!!!================= Настройки видимости по диапазону ======================
!!!По умолчанию - вид не в сечении, элемент видим
is_sech = 0
is_show = 1
!!!Абсолютные значения границ видимости
rx1 = MEP_Position[1][1]
ry1 = MEP_Position[1][2]
rz1 = MEP_Position[1][3]
rx2 = rx1+MEP_Position[2][1]*MEP_StraightLength
ry2 = ry1+MEP_Position[2][2]*MEP_StraightLength
rz2 = rz1+MEP_Position[2][3]*MEP_StraightLength
IF rz1 > rz2 THEN
	SYMB_POS_Z_temp = SYMB_POS_Z
	SYMB_POS_Z = SYMB_POS_Z-MEP_StraightLength
ENDIF
down_level = GLOB_CSTORY_ELEV + GLOB_CUTPLANES_INFO[3]+SYMB_POS_Z
up_level = GLOB_CSTORY_ELEV + GLOB_CUTPLANES_INFO[2]+SYMB_POS_Z
!!Ниже границы видимости
IF down_level - SYMB_POS_Z > EPS then
	if (down_level - (SYMB_POS_Z+MEP_StraightLength)) > EPS THEN !!Закончился до границы
		is_show = 0
	else	
		is_sech = 1
	endif
endif
!!Выше границы видимости
IF up_level - SYMB_POS_Z < EPS then
	if up_level - (SYMB_POS_Z+MEP_StraightLength) < EPS THEN !!Закончился до границы
		is_show = 0
	else
		is_sech = 1
	endif
endif
if is_sech then is_show = 1
SYMB_POS_Z = SYMB_POS_Z_temp
!!!================= Настройки видимости по диапазону ======================
if AC_AutoOnStoryVisibility and is_show = 0 then end


HptsUnIDBeginForConnEnds = 30000

hceID_1 = HptsUnIDBeginForConnEnds+100
hceID_2 = HptsUnIDBeginForConnEnds+200
hceID_3 = HptsUnIDBeginForConnEnds+300

ADD2 MEP_Position[1][1], MEP_Position[1][2]
HOTSPOT2 outCoords[10][1], outCoords[10][2], HptsUnIDBeginForConnEnds
HOTLINE2 outCoords[1][1], outCoords[1][2], outCoords[4][1], outCoords[4][2]
HOTLINE2 outCoords[7][1], outCoords[7][2], outCoords[10][1], outCoords[10][2]
DEL 1

IF ABS(ABS(dZz)-1) > EPS THEN
	ADD2 MEP_Position[1][1], MEP_Position[1][2]
		HOTSPOT2 outCoords[1][1], outCoords[1][2], hceID_1
		HOTSPOT2 outCoords[4][1], outCoords[4][2], hceID_2
		HOTSPOT2 outCoords[7][1], outCoords[7][2], hceID_3
	DEL 1
ENDIF

IF rot_conn THEN
	IF rot_conn = 1 THEN
		dist_x = gs_Connections[3][1]+gs_Connections[3][23]*gs_Connections[3][4]
		dist_y = gs_Connections[3][2]
	ELSE
		DIM inCoords[20][3]
		DIM outCoords[20][3]

		DIM cMatrix[3][3]

		cMatrix[1][1] = gs_Connections[rot_conn][4]
		cMatrix[1][2] = gs_Connections[rot_conn][5]
		cMatrix[1][3] = gs_Connections[rot_conn][6]

		cMatrix[2][1] = gs_Connections[rot_conn][7]
		cMatrix[2][2] = gs_Connections[rot_conn][8]
		cMatrix[2][3] = gs_Connections[rot_conn][9]

		cMatrix[3][1] = -cMatrix[2][2]*cMatrix[1][3]+cMatrix[2][3]*cMatrix[1][2]
		cMatrix[3][2] = -cMatrix[2][3]*cMatrix[1][1]+cMatrix[2][1]*cMatrix[1][3]
		cMatrix[3][3] = -cMatrix[2][1]*cMatrix[1][2]+cMatrix[2][2]*cMatrix[1][1]


		DIM tMatrix[3][3]

		tMatrix[1][1] = cMatrix[1][1]
		tMatrix[1][2] = cMatrix[2][1]
		tMatrix[1][3] = cMatrix[3][1]

		tMatrix[2][1] = cMatrix[1][2]
		tMatrix[2][2] = cMatrix[2][2]
		tMatrix[2][3] = cMatrix[3][2]

		tMatrix[3][1] = cMatrix[1][3]
		tMatrix[3][2] = cMatrix[2][3]
		tMatrix[3][3] = cMatrix[3][3]


								!!! +++ Input Coordinates +++ !!!

		cx = gs_Connections[rot_conn][1]+gs_Connections[rot_conn][23]*gs_Connections[rot_conn][4]
		cy = gs_Connections[rot_conn][2]+gs_Connections[rot_conn][23]*gs_Connections[rot_conn][5]
		cz = gs_Connections[rot_conn][3]+gs_Connections[rot_conn][23]*gs_Connections[rot_conn][6]

		PUT cx, cy, cz

		Coordinates = NSP/3

		FOR cnum = 1 TO Coordinates
			inCoords[cnum][1] = GET(1)
			inCoords[cnum][2] = GET(1)
			inCoords[cnum][3] = GET(1)
		NEXT cnum


		! --- the Matrix Operation, what make the Output-Coordinates

		FOR cnum = 1 TO Coordinates
			outCoords[cnum][1] = inCoords[cnum][1]*tMatrix[1][1]+inCoords[cnum][2]*tMatrix[2][1]+inCoords[cnum][3]*tMatrix[3][1]
			outCoords[cnum][2] = inCoords[cnum][1]*tMatrix[1][2]+inCoords[cnum][2]*tMatrix[2][2]+inCoords[cnum][3]*tMatrix[3][2]
			outCoords[cnum][3] = inCoords[cnum][1]*tMatrix[1][3]+inCoords[cnum][2]*tMatrix[2][3]+inCoords[cnum][3]*tMatrix[3][3]
		NEXT cnum

		dist_x = outCoords[1][1]
		dist_y = -outCoords[1][2]
	ENDIF

	CALL "MEP_m_object_rotator" PARAMETERS 	rot_conn = rot_conn,
											MEP_Position = MEP_Position,
											dist_x = dist_x,
											dist_y = dist_y,
											Rotation = Rotation,
											symbRotangle = SYMB_ROTANGLE,
											gs_Connections = gs_Connections,
											MEP_NumberConnections = MEP_NumberConnections,
											MEP_NumConnectionData = MEP_NumConnectionData,
											MEP_NumConnectedConnectionData = MEP_NumConnectedConnectionData,
											defaultMatrix = defaultMatrix
ENDIF

IF gs_fill_pen THEN PEN gs_fill_pen
if not(show_axis) then PROJECT2{3} 3, 270, 3+32, 4, gs_back_pen, 0, 0, 0, PARAMETERS pipe_show = 1, MEP_InsShow = 0, gs_detlevel_3D_m = gs_detlevel_2D_m

PEN gs_cont_pen
if not(show_axis) then PROJECT2{3} 3, 270, 2+32, 2+8, 0, 0, 0, 0, PARAMETERS pipe_show = 1, MEP_InsShow = 0, gs_detlevel_3D_m = gs_detlevel_2D_m

IF (MEP_InsShow and show_isol and not(show_axis)) THEN PROJECT2{3} 3, 270, 2+32, 8, 0, 0, 0, 0, PARAMETERS pipe_show = 0, MEP_InsShow = 1, MEP_cline_show = 0, gs_detlevel_3D_m = gs_detlevel_2D_m 

IF show_axis_and or show_axis THEN		! -----> center line <----- !
	PEN MEP_cline_pen
	SET LINE_TYPE MEP_cline_type
	PROJECT2{3} 3, 270, 3+32, 8, 0, 0, 0, 0, PARAMETERS pipe_show = 0, MEP_InsShow = 0, MEP_cline_show = 1, gs_detlevel_3D_m = gs_detlevel_2D_m
ENDIF
DEL TOP

IF ABS(ABS(dZz)-1) < EPS THEN
						! --- dirAngOnXYPlane of the route  --- !
	 arCosVal = MEP_Position[3][1]/1
	IF ABS(arCosVal) > 1 AND SGN(arCosVal) = -1 THEN arCosVal = -1
	IF ABS(arCosVal) > 1 AND SGN(arCosVal) = 1 THEN arCosVal = 1
	dirAngOnXYPlane = ACS(arCosVal)-90
	IF SGN(MEP_Position[3][2]) = -1 THEN dirAngOnXYPlane = 180-dirAngOnXYPlane
	ADD2 MEP_Position[1][1], MEP_Position[1][2]
	ROT2 dirAngOnXYPlane
	IF dZz < -EPS THEN MUL2 -1, 1

if (flangeout1>EPS) then
	hotspot2 -flangeout1,MEP_NumConnectionData[1][12]/2
	hotspot2 -flangeout1,-MEP_NumConnectionData[1][12]/2
endif

if (flangeout2>EPS) then
	hotspot2 MEP_StraightLength+flangeout2,-MEP_NumConnectionData[1][12]/2
	hotspot2 MEP_StraightLength+flangeout2,MEP_NumConnectionData[1][12]/2
endif

hotspot2 0,MEP_NumConnectionData[1][12]/2
hotspot2 0,-MEP_NumConnectionData[1][12]/2
hotspot2 MEP_StraightLength,-MEP_NumConnectionData[1][12]/2
hotspot2 MEP_StraightLength,MEP_NumConnectionData[1][12]/2





	CALL "MEP_m_ConnectionsMEP_4" PARAMETERS SetProgram = SetProgram,
			MEP_NumberConnections = MEP_NumberConnections,
			MEP_NumConnectionData = gs_Connections,
			gs_AddConnections = gs_AddConnections,
			DrawingNum = 1,
			MEP_InsShow = 0,
			MEP_cline_show = 0,
			gs_cont_pen = gs_cont_pen,
			gs_fill_type=gs_fill_type,
			gs_fill_pen=gs_fill_pen,
			gs_back_pen=gs_back_pen,
			ConPosX_1=ConPosX_1, ConPosY_1=ConPosY_1, ConPosZ_1=ConPosZ_1, ConLength_1=ConLength_1, ConShow_1 = 0, ConEdit_1 = 0,
			ConPosX_2=ConPosX_2, ConPosY_2=ConPosY_2, ConPosZ_2=ConPosZ_2, ConLength_2=ConLength_2, ConShow_2 = 0, ConEdit_2 = 0,
			ConPosX_3=ConPosX_3, ConPosY_3=ConPosY_3, ConPosZ_3=ConPosZ_3, ConLength_3=ConLength_3, ConShow_3 = 0, ConEdit_3 = 1, MEP_StrConnectionData = MEP_StrConnectionData, mep_con = mep_con, mep_data = mep_data
	DEL TOP
ENDIF
