
! Cable Tray
! Zsolt Feke/2008


EPS = 0.00001

HptsUnIDBeginForConnEnds = 30000

hceID_1 = HptsUnIDBeginForConnEnds+100
hceID_2 = HptsUnIDBeginForConnEnds+200

! ==============================================================================
! 2D Display Options
! ==============================================================================

DIM stDisplayOptions[5]
	stDisplayOptions[1] = `Сечение и Низ`
	stDisplayOptions[2] = `Сечение и Верх`
	stDisplayOptions[3] = `Символический Вид`
	stDisplayOptions[4] = `Только Контуры`
	stDisplayOptions[5] = `Вся Проекция`

IF GLOB_MODPAR_NAME = "gs_symb_display_option" OR gs_symb_display_option_ID = -1 THEN
	gs_symb_display_option_ID = 1	! Projected
	IF gs_symb_display_option = stDisplayOptions[2] THEN gs_symb_display_option_ID = 2
	IF gs_symb_display_option = stDisplayOptions[3] THEN gs_symb_display_option_ID = 3
	IF gs_symb_display_option = stDisplayOptions[4] THEN gs_symb_display_option_ID = 4
	IF gs_symb_display_option = stDisplayOptions[5] THEN gs_symb_display_option_ID = 5

	PARAMETERS gs_symb_display_option_ID = gs_symb_display_option_ID
ELSE
	IF gs_symb_display_option_ID = 1 THEN gs_symb_display_option = stDisplayOptions[1]
	IF gs_symb_display_option_ID = 2 THEN gs_symb_display_option = stDisplayOptions[2]
	IF gs_symb_display_option_ID = 3 THEN gs_symb_display_option = stDisplayOptions[3]
	IF gs_symb_display_option_ID = 4 THEN gs_symb_display_option = stDisplayOptions[4]
	IF gs_symb_display_option_ID = 5 THEN gs_symb_display_option = stDisplayOptions[5]

	PARAMETERS gs_symb_display_option = gs_symb_display_option
ENDIF

IF gs_symb_display_option = stDisplayOptions[1] THEN
	AC_AutoOnStoryVisibility = 1
ELSE
	AC_AutoOnStoryVisibility = 0
ENDIF


						! ---------------- !
						! --- Rotation --- !
						! ---------------- !

connected = 0
FOR i = 1 TO MEP_NumberConnections
	connected = connected + MEP_NumConnectionData[i][18]
NEXT i

IF GLOB_MODPAR_NAME = "RotationAroundWAxis" THEN
	DIM tMatrix[3][3]

	tMatrix[1][1] = COS(RotationAroundWAxis)
	tMatrix[1][2] = 0
	tMatrix[1][3] = SIN(RotationAroundWAxis)

	tMatrix[2][1] = 0
	tMatrix[2][2] = 1
	tMatrix[2][3] = 0

	tMatrix[3][1] = -SIN(RotationAroundWAxis)
	tMatrix[3][2] = 0
	tMatrix[3][3] = COS(RotationAroundWAxis)

	PUT 1, 0, 0
	PUT 0, 1, 0

	Coordinates = NSP/3

	DIM inCoords[20][3]

	FOR cnum = 1 TO Coordinates
		inCoords[cnum][1] = GET(1)
		inCoords[cnum][2] = GET(1)
		inCoords[cnum][3] = GET(1)
	NEXT cnum


	! --- the Matrix Operation, what make the Output-Coordinates

	DIM outCoords[20][3]

	FOR cnum = 1 TO Coordinates
		MEP_Position[cnum+1][1] = inCoords[cnum][1]*tMatrix[1][1]+inCoords[cnum][2]*tMatrix[2][1]+inCoords[cnum][3]*tMatrix[3][1]
		PARAMETERS MEP_Position[cnum+1][1] = MEP_Position[cnum+1][1]
		MEP_Position[cnum+1][2] = inCoords[cnum][1]*tMatrix[1][2]+inCoords[cnum][2]*tMatrix[2][2]+inCoords[cnum][3]*tMatrix[3][2]
		PARAMETERS MEP_Position[cnum+1][2] = MEP_Position[cnum+1][2]
		MEP_Position[cnum+1][3] = inCoords[cnum][1]*tMatrix[1][3]+inCoords[cnum][2]*tMatrix[2][3]+inCoords[cnum][3]*tMatrix[3][3]
		PARAMETERS MEP_Position[cnum+1][3] = MEP_Position[cnum+1][3]
	NEXT cnum
ENDIF


						! ------------------ !
						! --- Properties --- !
						! ------------------ !

cableTrayWidth			= MEP_NumConnectionData[1][12]
cableTrayHeight			= MEP_NumConnectionData[1][13]
cableTrayHalfWidth		= MEP_NumConnectionData[1][12]/2
cableTrayHalfHeight		= MEP_NumConnectionData[1][13]/2
connectedA				= MEP_NumConnectionData[1][18]
connectedB				= MEP_NumConnectionData[2][18]


						! ---------------- !
						! --- Z vector --- !
						! ---------------- !

dZx = -MEP_Position[3][2]*MEP_Position[2][3]+MEP_Position[3][3]*MEP_Position[2][2]
dZy = -MEP_Position[3][3]*MEP_Position[2][1]+MEP_Position[3][1]*MEP_Position[2][3]
dZz = -MEP_Position[3][1]*MEP_Position[2][2]+MEP_Position[3][2]*MEP_Position[2][1]


						! ------------------------------ !
						! --- 2 points of cable tray --- !
						! ------------------------------ !

! --- x,y,z coordinates of 1st point ---

rx1 = MEP_Position[1][1]
ry1 = MEP_Position[1][2]
rz1 = MEP_Position[1][3]


! --- x,y,z coordinates of 2nd point ---

rx2 = rx1+MEP_Position[2][1]*MEP_StraightLength
ry2 = ry1+MEP_Position[2][2]*MEP_StraightLength
rz2 = rz1+MEP_Position[2][3]*MEP_StraightLength

dx = rx2-rx1
dy = ry2-ry1
dz = rz2-rz1

IF ABS(dx) < EPS THEN dx = 0
IF ABS(dy) < EPS THEN dy = 0
IF ABS(dz) < EPS THEN dz = 0


! --- dirAngOnXYPlane of the route ---
arCosVal = 0
IF ABS(ABS(MEP_Position[2][3])-1) < EPS THEN
	 arCosVal = MEP_Position[3][1]
	IF arCosVal < -1 THEN arCosVal = -1
	IF arCosVal > 1 THEN arCosVal = 1
	dirAngOnXYPlane = ACS(arCosVal)-90
	IF SGN(MEP_Position[3][2]) = -1 THEN dirAngOnXYPlane = 180-dirAngOnXYPlane
ELSE
	IF ABS(dx)>EPS OR ABS(dy)>EPS THEN
		arCosVal = dx/(SQR(dx^2+dy^2))
		IF arCosVal < -1 THEN arCosVal = -1
		IF arCosVal > 1 THEN arCosVal = 1
		dirAngOnXYPlane = ACS(arCosVal)
		IF SGN(dy) = -1 THEN dirAngOnXYPlane = 360-dirAngOnXYPlane
	ENDIF
ENDIF


						! --------------------- !
						! --- Set Side Flag --- !
						! --------------------- !

IF ABS(ABS(MEP_Position[2][3]) - 1) > EPS THEN
	IF ABS(MEP_Position[3][3]) < EPS THEN
		IF SGN(dZz) = 1 THEN
			MEP_EmptySideID = 1
		ELSE
			MEP_EmptySideID = 3
		ENDIF
	ELSE
		IF SGN(MEP_Position[3][3]) = 1 THEN
			MEP_EmptySideID = 2
		ELSE
			MEP_EmptySideID = 4
		ENDIF
	ENDIF
	PARAMETERS MEP_EmptySideID = MEP_EmptySideID
ENDIF

IF connected  > 1 THEN  LOCK "MEP_StraightLength"
IF ABS(ABS(MEP_Position[2][3]) - 1) > EPS THEN  HIDEPARAMETER "MEP_EmptySideID"


						! ---------------------------- !
						! --- Top and Bottom Level --- !
						! ---------------------------- !

z1 = MEP_Position[1][3]
z2 = z1+MEP_Position[2][3]*MEP_StraightLength

IF ABS(MEP_Position[2][3]) < EPS OR ABS(MEP_Position[2][3] - 1) < EPS THEN
	IF z2 < z1 THEN
		PARAMETERS ac_toplevel 		= z1
		PARAMETERS ac_bottomlevel 	= z2
	ELSE
		PARAMETERS ac_toplevel 		= z2
		PARAMETERS ac_bottomlevel 	= z1
	ENDIF
ELSE
	IF ABS(MEP_Position[2][3]) < EPS OR ABS(ABS(MEP_Position[2][3]) - 1) < EPS THEN
		decreaseLen = 0
	ELSE
		Length=SQR(dx^2+dy^2)
		br = Length/MEP_StraightLength

		IF ABS(MEP_Position[3][3]) < EPS THEN
			decreaseLen = cableTrayHalfHeight*br
		ELSE
			decreaseLen = cableTrayHalfWidth*br
		ENDIF
	ENDIF

	IF z2 < z1 THEN
		z1 = z1 - decreaseLen
		z2 = z2 + decreaseLen
	ELSE
		z1 = z1 + decreaseLen
		z2 = z2 - decreaseLen
	ENDIF

	IF z2 < z1 THEN
		PARAMETERS ac_toplevel 		= z1
		PARAMETERS ac_bottomlevel 	= z2
	ELSE
		PARAMETERS ac_toplevel 		= z2
		PARAMETERS ac_bottomlevel 	= z1
	ENDIF
ENDIF
