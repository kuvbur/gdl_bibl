
! Cable Tray Bend
! Zsolt Feke/2008


call "FM_types_MEP" parameters

DIM shape_typ_to_validation[3]
	shape_typ_to_validation[1] = 1		! Rectangle
	shape_typ_to_validation[2] = 0		! Circle
	shape_typ_to_validation[3] = 0		! Oval

IF GLOB_MODPAR_NAME = "gs_detlevel_3D" OR gs_detlevel_3D_m = -1 THEN
	gs_detlevel_3D_m = 2	! Detailed
	IF gs_detlevel_3D = `Откл.` THEN gs_detlevel_3D_m = 0
	IF gs_detlevel_3D = `Простой` THEN gs_detlevel_3D_m = 1
	PARAMETERS gs_detlevel_3D_m = gs_detlevel_3D_m
ELSE
	IF gs_detlevel_3D_m = 0 THEN gs_detlevel_3D = `Откл.`
	IF gs_detlevel_3D_m = 1 THEN gs_detlevel_3D = `Простой`
	IF gs_detlevel_3D_m = 2 THEN gs_detlevel_3D = `Детальный`
	PARAMETERS gs_detlevel_3D = gs_detlevel_3D
ENDIF

VALUES "gs_detlevel_3D" `Детальный`,`Простой`,`Откл.`
VALUES "gs_detlevel_3D_m" 2, 1, 0

IF isBendTypeQuery THEN
	VALUES "MEP_BendStyle" BendStyleStr_dim
	VALUES "MEP_BendType" BendTypesStrToShapeTypes_dim
	VALUES "MEP_BendTypeID" BendTypesIDToShapeTypes_dim
ENDIF
VALUES "MEP_EmptySideID" 1, 2, 3, 4

IF MEP_BendStyleID = 1 THEN LOCK "ConThroatLength_1", "ConThroatLength_2"
IF MEP_cline_show < EPS THEN LOCK "MEP_cline_type", "MEP_cline_pen"
IF useSysMat AND MEP_StrConnectionData[1][2] <> "0" THEN LOCK "gs_CableTrayMat"
IF MEP_StrConnectionData[1][2] = "0" THEN LOCK "useSysMat"

gs_ui = 1


					! --- CONNECTIONS --- !

	PARAMETERS MEP_NumberConnections = 2


					! --- 1st CONNECTION --- !

	ConID = 1
	ConName = `Основное 1`

	ConDVecX = -1
	ConDVecY = 0
	ConDVecZ = 0

	ConWVecX = 0
	ConWVecY = -1
	ConWVecZ = 0

	IF NOT(setProgram) THEN
		PARAMETERS ConPosX_1 = 0
		PARAMETERS ConPosY_1 = 0
		PARAMETERS ConPosZ_1 = 0
		ConLength_1 = 0
		PARAMETERS ConLength_1 = ConLength_1
	ENDIF

	CALL "MEP_m_ConnectionsMEP_4" PARAMETERS SetProgram = SetProgram,
		gs_Connections = gs_Connections,
		MEP_NumConnectionData = MEP_NumConnectionData,
		MEP_StrConnectionData = MEP_StrConnectionData,
		MEP_NumberConnections = MEP_NumberConnections,
		gs_AddConnections = gs_AddConnections,
		ConName = ConName,
		ConID = ConID,
		ConPosX = ConPosX_1,
		ConPosY = ConPosY_1,
		ConPosZ = ConPosZ_1,
		ConDVecX = ConDVecX,
		ConDVecY = ConDVecY,
		ConDVecZ = ConDVecZ,
		ConWVecX = ConWVecX,
		ConWVecY = ConWVecY,
		ConWVecZ = ConWVecZ,

		ConNominalWidth = ConNominalWidth_1,
		ConNominalDepth = ConNominalDepth_1,
		ConWidth = ConWidth_1,
		ConDepth = ConDepth_1,
		ConLength = ConLength_1,
		ConWallThickness = ConWallThickness_1,
		ConConnectorWidth = ConConnectorWidth_1,
		ConConnectorDepth = ConConnectorDepth_1,
		ConConnectorWidth2 = ConConnectorWidth2_1,
		ConToolType = ConToolType_1,
		ConStatus = ConStatus_1,
		ConType_1 = ConType_1,
		ConConnectorType_1 = ConConnectorType_1,
		ConSystem_1 = ConSystem_1,
		gs_ui = gs_ui,
		ui_page_idx = ui_page_idx,
		shape_typ_to_validation = shape_typ_to_validation,
		MEP_enabled_geometry_mod = 1,
		MEP_cline_show = MEP_cline_show

PARAMETERS MEP_ConInfo[1][1] = STR(ConToolType_1, 1, 0)
PARAMETERS MEP_ConInfo[1][2] = ConName
PARAMETERS MEP_ConInfo[1][3] = "0"


					! --- 2nd CONNECTION --- !

	ConID = 2
	ConName = `Основное 2`

	ConDVecX = COS(MEP_BendAngle)
	ConDVecY = SIN(MEP_BendAngle)
	ConDVecZ = 0

	ConWVecX = -SIN(MEP_BendAngle)
	ConWVecY = COS(MEP_BendAngle)
	ConWVecZ = 0

	IF NOT(setProgram) THEN
		ConWidth_2 = ConWidth_1
		PARAMETERS ConWidth_2 = ConWidth_2
		ConDepth_2 = ConDepth_1
		PARAMETERS ConDepth_2 = ConDepth_2
!!		ConType_2 = ConType_1
!!		PARAMETERS ConType_2 = ConType_2
!!		MEP_NumConnectionData[2][21] = MEP_NumConnectionData[1][21]
!!		PARAMETERS MEP_NumConnectionData[2][21] = MEP_NumConnectionData[2][21]		! D***

		IF MEP_BendStyleID = 2 THEN
			IF SGN(ConThroatLength_1-ConThroatLength_2) = -1 THEN cableCarrierBendStraightLengthB = ABS(ConThroatLength_1-ConThroatLength_2)
			IF SGN(ConThroatLength_1-ConThroatLength_2) = 1 THEN cableCarrierBendStraightLengthA = ABS(ConThroatLength_1-ConThroatLength_2)
		ENDIF

		PARAMETERS ConPosX_2 = cableCarrierBendStraightLengthA+MEP_BendRadius*SIN(MEP_bendAngle)+cableCarrierBendStraightLengthB*COS(MEP_bendAngle)
		PARAMETERS ConPosY_2 = MEP_BendRadius-MEP_BendRadius*COS(MEP_bendAngle)+cableCarrierBendStraightLengthB*SIN(MEP_bendAngle)
		PARAMETERS ConPosZ_2 = 0
		ConLength_2 = 0
		PARAMETERS ConLength_2 = ConLength_2
		ConSystem_2 = ConSystem_1
		PARAMETERS ConSystem_2 = ConSystem_2
		MEP_StrConnectionData[2][2] = MEP_StrConnectionData[1][2]
		PARAMETERS MEP_StrConnectionData[2][2] = MEP_StrConnectionData[2][2]
	ENDIF

	CALL "MEP_m_ConnectionsMEP_4" PARAMETERS SetProgram = SetProgram,
		gs_Connections = gs_Connections,
		MEP_NumConnectionData = MEP_NumConnectionData,
		MEP_StrConnectionData = MEP_StrConnectionData,
		MEP_NumberConnections = MEP_NumberConnections,
		gs_AddConnections = gs_AddConnections,
		ConName = ConName,
		ConID = ConID,
		ConPosX = ConPosX_2,
		ConPosY = ConPosY_2,
		ConPosZ = ConPosZ_2,
		ConDVecX = ConDVecX,
		ConDVecY = ConDVecY,
		ConDVecZ = ConDVecZ,
		ConWVecX = ConWVecX,
		ConWVecY = ConWVecY,
		ConWVecZ = ConWVecZ,

		ConNominalWidth = ConNominalWidth_2,
		ConNominalDepth = ConNominalDepth_2,
		ConWidth = ConWidth_2,
		ConDepth = ConDepth_2,
		ConLength = ConLength_2,
		ConWallThickness = ConWallThickness_1,
		ConConnectorWidth = ConConnectorWidth_2,
		ConConnectorDepth = ConConnectorDepth_2,
		ConConnectorWidth2 = ConConnectorWidth2_2,
		ConToolType = ConToolType_2,
		ConStatus = ConStatus_2,
		ConType_2 = ConType_2,
		ConConnectorType_2 = ConConnectorType_2,
		ConSystem_2 = ConSystem_2,
		gs_ui = gs_ui,
		shape_typ_to_validation = shape_typ_to_validation,
		MEP_enabled_geometry_mod = 1

PARAMETERS MEP_ConInfo[2][1] = STR(ConToolType_2, 1, 0)
PARAMETERS MEP_ConInfo[2][2] = ConName
PARAMETERS MEP_ConInfo[2][3] = "0"

IF setProgram THEN
	SetProgram = 0
	PARAMETERS SetProgram = SetProgram
ENDIF

IF ABS(MEP_NumConnectionData[1][18] - 1) < EPS OR ABS(MEP_NumConnectionData[2][18] - 1) < EPS THEN LOCK "ConType_1"


					!!! +++ Transformational Matrix +++ !!!

DIM tMatrix[3][3]

tMatrix[1][1] = MEP_Position[2][1]
tMatrix[1][2] = MEP_Position[2][2]
tMatrix[1][3] = MEP_Position[2][3]

tMatrix[2][1] = MEP_Position[3][1]
tMatrix[2][2] = MEP_Position[3][2]
tMatrix[2][3] = MEP_Position[3][3]

tMatrix[3][1] = -MEP_Position[3][2]*MEP_Position[2][3]+MEP_Position[3][3]*MEP_Position[2][2]
tMatrix[3][2] = -MEP_Position[3][3]*MEP_Position[2][1]+MEP_Position[3][1]*MEP_Position[2][3]
tMatrix[3][3] = -MEP_Position[3][1]*MEP_Position[2][2]+MEP_Position[3][2]*MEP_Position[2][1]


						!!! +++ Input Coordinates +++ !!!

PUT ConPosX_1, ConPosY_1, ConPosZ_1
PUT gs_Connections[1][4], gs_Connections[1][5], gs_Connections[1][6]
PUT gs_Connections[1][7], gs_Connections[1][8], gs_Connections[1][9]

PUT ConPosX_2, ConPosY_2, ConPosZ_2
PUT gs_Connections[2][4], gs_Connections[2][5], gs_Connections[2][6]
PUT gs_Connections[2][7], gs_Connections[2][8], gs_Connections[2][9]

Coordinates = NSP/3

DIM inCoords[20][3]

FOR cnum = 1 TO Coordinates
	inCoords[cnum][1] = GET(1)
	inCoords[cnum][2] = GET(1)
	inCoords[cnum][3] = GET(1)
NEXT cnum


! --- the Matrix Operation, what make the Output-Coordinates

DIM outCoords[20][3]

FOR cnum = 1 TO Coordinates
	outCoords[cnum][1] = inCoords[cnum][1]*tMatrix[1][1]+inCoords[cnum][2]*tMatrix[2][1]+inCoords[cnum][3]*tMatrix[3][1]
	outCoords[cnum][2] = inCoords[cnum][1]*tMatrix[1][2]+inCoords[cnum][2]*tMatrix[2][2]+inCoords[cnum][3]*tMatrix[3][2]
	outCoords[cnum][3] = inCoords[cnum][1]*tMatrix[1][3]+inCoords[cnum][2]*tMatrix[2][3]+inCoords[cnum][3]*tMatrix[3][3]
NEXT cnum


! --- uploading of MEP_NumConnectionData

FOR k = 1 TO MEP_NumberConnections
	FOR i = 1 TO 9
		j = 1+INT((i-0.5)/3)
		ad = 0
		IF i < 4 THEN ad = MEP_Position[1][i]
		MEP_NumConnectionData[k][i] = outCoords[j+3*(k-1)][i-3*(j-1)]+ad
		PARAMETERS MEP_NumConnectionData[k][i] = MEP_NumConnectionData[k][i]
	NEXT i
NEXT k


						! ---------------------- !
						! --- object rotator --- !
						! ---------------------- !

rot_conn = 0
IF ABS(MEP_NumConnectionData[1][18] - 1) < EPS AND ABS(MEP_NumConnectionData[2][18]) < EPS THEN rot_conn = 1
IF ABS(MEP_NumConnectionData[1][18]) < EPS AND ABS(MEP_NumConnectionData[2][18] - 1) < EPS THEN rot_conn = 2
PARAMETERS rot_conn = rot_conn

IF rot_conn < EPS THEN LOCK "Rotation"

IF rot_conn THEN
	CALL "MEP_m_object_rotator" PARAMETERS 	rot_conn = rot_conn,
											MEP_Position = MEP_Position,
											Rotation = Rotation,
											symbRotangle = SYMB_ROTANGLE,
											gs_Connections = gs_Connections,
											MEP_NumberConnections = MEP_NumberConnections,
											MEP_NumConnectionData = MEP_NumConnectionData,
											MEP_NumConnectedConnectionData = MEP_NumConnectedConnectionData,
											defaultMatrix = defaultMatrix
ENDIF


						! ---------------------- !
						! --- axial rotation --- !
						! ---------------------- !

connected = 0
FOR i = 1 TO MEP_NumberConnections
	connected = connected + MEP_NumConnectionData[i][18]
NEXT i

HIDEPARAMETER "RotationAroundZAxis", "RotationAroundWAxis"
IF connected > EPS THEN	HIDEPARAMETER "RotationAroundDAxis"

VALUES "RotationAroundDAxis", -90, 0, 90


CALL "MEP_m_axial_rotation" PARAMETERS all
