
! Cable Ladder Reducer


IF gs_detlevel_3D_m = -1 THEN
	gs_detlevel_3D_m = 2	! Detailed
	IF gs_detlevel_3D = `Откл.` THEN gs_detlevel_3D_m = 0
	IF gs_detlevel_3D = `Простой` THEN gs_detlevel_3D_m = 1
ENDIF

IF gs_detlevel_3D_m = 0 THEN END

CALL "MEP_m_RequestSystemGlobals" PARAMETERS ALL returned_parameters gs_cont_pen, sMat, gs_InsMat

IF useSysMat AND MEP_StrConnectionData[1][2] <> "0" THEN gs_CableTrayMat = sMat

PEN gs_cont_pen
MATERIAL gs_CableTrayMat


XFORM   MEP_Position[2][1], MEP_Position[3][1], dZx, MEP_Position[1][1],
		MEP_Position[2][2], MEP_Position[3][2], dZy, MEP_Position[1][2],
		MEP_Position[2][3], MEP_Position[3][3], dZz, MEP_Position[1][3]


HOTSPOT 0, 0, 0, hceID_1
HOTSPOT MEP_StraightLength, MEP_offset_y, 0, hceID_2

IF GLOB_CONTEXT > 40 AND GLOB_CONTEXT < 50 THEN
	ADDz -cableTrayHalfHeight

	mm = 15
	GOSUB 10
	GOSUB 20

	PRISM_ NSP/3, cableTrayHeight,

		GET (NSP)

	DEL 1
ELSE
	IF MEP_cline_show_3D THEN					! -----> center line <----- !
		IF ABS(MEP_offset_y) < EPS THEN
			LIN_ 0, 0, 0, MEP_StraightLength, 0, 0
		ELSE
			LIN_ 0, 0, 0, cableTrayStraightLength, 0, 0
			LIN_ MEP_StraightLength-cableTrayStraightLength, MEP_offset_y, 0, MEP_StraightLength, MEP_offset_y, 0
			LIN_ cableTrayStraightLength, 0, 0, MEP_StraightLength-cableTrayStraightLength, MEP_offset_y, 0
		ENDIF
	ENDIF

	IF cable_carrier_show THEN
		IF MEP_CoveredCableTray THEN				! -----> upper planes <----- !
			MULz 1-2*(ABS(MEP_EmptySideID - 3) < EPS)
			FOR j = 1 TO 1+MEP_CoveredCableTray
				mm = 1
				GOSUB 10
				GOSUB 20

				ADDz cableTrayHalfHeight
				POLY_ NSP/3,

					GET(NSP)
				DEL 1
			NEXT j
			DEL 1
		ENDIF


		ladderNum = MAX(4, INT(MEP_StraightLength/(0.75*MAX(ConWidth_1, ConWidth_2))))
		IF ABS(ladderNum/2 - INT(ladderNum/2)) > EPS THEN ladderNum = ladderNum + 1
		ladderDist = MEP_StraightLength/ladderNum
		ladderHalfDist = ladderDist/2
		ladderThk = MAX(0.03*(ladderDist > 0.06), (0.75*MAX(ConWidth_1, ConWidth_2))/10)

		halfWidth = MAX(cableTrayWidthA, cableTrayWidthB)

		mm = 15
		PUT 0, cableTrayHalfWidthA+halfWidth, 15
		GOSUB 10
		PUT MEP_StraightLength, cableTrayHalfWidthA+halfWidth, 15

		CUTPOLYA NSP/3, 2, 0,

			  GET(NSP)

		mm = 15
		PUT MEP_StraightLength, -cableTrayHalfWidthA-halfWidth, 15
		GOSUB 20
		PUT 0, -cableTrayHalfWidthA-halfWidth, 15

		CUTPOLYA NSP/3, 2, 0,

			  GET(NSP)

		MULz  1-2*(ABS(MEP_EmptySideID - 3) < EPS)
		ADDz -cableTrayHalfHeight
		FOR i = 1 TO ladderNum						! -----> main ladders <----- !
			ADDx ladderHalfDist+ladderDist*(i-1)
			PUT ladderThk/2, halfWidth, 1
			PUT -ladderThk/2, halfWidth, 1
			PUT -ladderThk/2, -halfWidth, 1
			PUT ladderThk/2, -halfWidth, 1
			PUT ladderThk/2, halfWidth, -1

			POLY_ NSP/3,

				GET(NSP)

			DEL 1
		NEXT i
		DEL 2

		CUTEND
		CUTEND


		ADDz -cableTrayHalfHeight
		mm = 0					! -----> sides <----- !
		GOSUB 10
		mm = cableTrayHeight
		GOSUB 10

		RULED NSP/6, 16+32,

			  GET(NSP)

		mm = 0
		GOSUB 20
		mm = cableTrayHeight
		GOSUB 20

		RULED NSP/6, 16+32,

			  GET(NSP)

		DEL 1
	ENDIF
ENDIF
DEL 1
BODY -1


END

10:
	PUT 0, cableTrayHalfWidthA, mm
	IF ABS(MEP_offset_y+cableTrayHalfWidthB-cableTrayHalfWidthA) > EPS THEN
		PUT cableTrayStraightLength, cableTrayHalfWidthA, mm
		PUT MEP_StraightLength-cableTrayStraightLength, MEP_offset_y+cableTrayHalfWidthB, mm
	ENDIF
	PUT MEP_StraightLength, MEP_offset_y+cableTrayHalfWidthB, mm
RETURN

20:
	PUT MEP_StraightLength, MEP_offset_y-cableTrayHalfWidthB, mm
	IF ABS(MEP_offset_y-cableTrayHalfWidthB+cableTrayHalfWidthA) > EPS THEN
		PUT MEP_StraightLength-cableTrayStraightLength, MEP_offset_y-cableTrayHalfWidthB, mm
		PUT cableTrayStraightLength, -cableTrayHalfWidthA, mm
	ENDIF
	PUT 0, -cableTrayHalfWidthA, mm
RETURN
