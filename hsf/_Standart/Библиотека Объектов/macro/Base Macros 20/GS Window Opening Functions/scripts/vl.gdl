

! =============================================================================
! Hide All parameters list
! =============================================================================
hideparameter all


hideparameter "ac_details"

! =============================================================================
! Show / Hide 2D Fills
! =============================================================================

if not(gs_bFills) then	! Hide
	hideparameter	"gs_wallhole_fill",
					"gs_wallhole_pen_fg",
					"gs_wallhole_pen_bg"

	lock	"gs_wallhole_fill",
			"gs_wallhole_pen_fg",
			"gs_wallhole_pen_bg"
endif


! =============================================================================
! Parapet
! =============================================================================

if bEnableParapetInset then
	values "gs_parapet_bottom_st" stParapetBottom
	values "iParapetBottom" PARAPET_BOTTOM_CURRENTSTORY, PARAPET_BOTTOM_WALLBASE

	if GLOB_MODPAR_NAME = "gs_parapet_bottom_st" then
		iParapetBottom = PARAPET_BOTTOM_CURRENTSTORY
		for i = 2 to vardim1(stParapetBottom)
			if gs_parapet_bottom_st = stParapetBottom[i] then
				iParapetBottom = i
				i = vardim1(stParapetBottom)
			endif
		next i
		parameters iParapetBottom = iParapetBottom
	else
		gs_parapet_bottom_st = stParapetBottom[min(max(1,iParapetBottom),vardim1(stParapetBottom))]
		parameters gs_parapet_bottom_st = gs_parapet_bottom_st
	endif

	if not(gs_parapet_wall_inset) then
		lock "gs_parapet_bottom_st", "iParapetBottom"
		hideparameter "gs_parapet_bottom_st", "iParapetBottom"
	endif

	values "gs_parapet_sizes_st" stParapetSize
	values "iParapetSize" PARAPET_SIZE_AUTO, PARAPET_SIZE_SYMM, PARAPET_SIZE_ASYMM

	if GLOB_MODPAR_NAME = "gs_parapet_sizes_st" then
		iParapetSize = PARAPET_SIZE_AUTO
		for i = 2 to vardim1(stParapetSize)
			if gs_parapet_sizes_st = stParapetSize[i] then
				iParapetSize = i
				i = vardim1(stParapetSize)
			endif
		next i
		parameters iParapetSize = iParapetSize
	else
		gs_parapet_sizes_st = stParapetSize[min(max(1,iParapetSize),vardim1(stParapetSize))]
		parameters gs_parapet_sizes_st = gs_parapet_sizes_st
	endif

	if iParapetSize = PARAPET_SIZE_ASYMM then
		lock "gs_parapet_width"
		hideparameter "gs_parapet_width"
	else
		if iParapetSize = PARAPET_SIZE_AUTO then
			lock	"gs_parapet_width",
					"gs_parapet_height"
			hideparameter	"gs_parapet_width",
							"gs_parapet_height"
		endif
		lock "gs_parapet_left", "gs_parapet_right"
		hideparameter "gs_parapet_left", "gs_parapet_right"
	endif
endif


! =============================================================================
! Demolition / New construction
! =============================================================================

if gs_bFills = 0 then
	lock "iTypeDemolitionFill"
endif

if gs_bShowDemolitionPar then
	values{2} "iTypeDemolitionFill" 	RENOVATION_FILL_EXIST, `Нет`,
										RENOVATION_FILL_DEMOLISHED, `Демонтаж`,
										RENOVATION_FILL_NEW, `Новая Конструкция - Пустой Символ`,
										RENOVATION_FILL_NEW_FULL, `Новая Конструкция - Полный Символ`

	if iTypeDemolitionFill = RENOVATION_FILL_DEMOLISHED then
		lock "gs_wallhole_fill"
		lock "gs_wallhole_pen_fg"
		lock "gs_wallhole_pen_bg"
	endif

	if	iTypeDemolitionFill = RENOVATION_FILL_NEW |\
		iTypeDemolitionFill = RENOVATION_FILL_NEW_FULL then

		lock "gs_wallhole_fill"
		lock "gs_wallhole_pen_fg"
		lock "gs_wallhole_pen_bg"
	endif
endif


! =============================================================================
! Dimension Link
! =============================================================================

! Reveal Size -> Wallhole Size difference
revealDLeft		= gs_reveal_left
revealDRight	= gs_reveal_right
revealDUpper	= gs_reveal_top + _includeBoxHeight
revealDLower	= gs_reveal_bottom

if GLOB_MODPAR_NAME = "ac_wallhole_width" then
	A = ac_wallhole_width
	ac_unit_width = ac_wallhole_width
	ac_reveal_width = ac_wallhole_width - revealDLeft - revealDRight

	parameters	A				= A,
				ac_reveal_width	= ac_reveal_width,
				ac_unit_width	= ac_unit_width
else
	if GLOB_MODPAR_NAME = "ac_reveal_width" then
		ac_wallhole_width = ac_reveal_width + revealDLeft + revealDRight
		ac_unit_width = ac_wallhole_width
		A = ac_wallhole_width

		parameters	A					= A,
					ac_wallhole_width	= ac_wallhole_width,
					ac_unit_width		= ac_unit_width
	else
		if GLOB_MODPAR_NAME = "ac_unit_width" then
			A = ac_unit_width
			ac_wallhole_width = ac_unit_width
			ac_reveal_width = ac_unit_width - revealDLeft - revealDRight

			parameters	A				= A,
						ac_wallhole_width	= ac_wallhole_width,
						ac_reveal_width	= ac_reveal_width
		else
			ac_wallhole_width = A
			ac_unit_width = A
			ac_reveal_width = A - revealDLeft - revealDRight

			parameters	ac_wallhole_width	= ac_wallhole_width,
						ac_reveal_width		= ac_reveal_width,
						ac_unit_width		= ac_unit_width
		endif
	endif
endif

if GLOB_MODPAR_NAME = "ac_wallhole_height" then
	B = ac_wallhole_height
	ac_unit_height = ac_wallhole_height
	ac_reveal_height = ac_wallhole_height - revealDUpper - revealDLower

	parameters	B				= B,
				ac_reveal_height	= ac_reveal_height,
				ac_unit_height	= ac_unit_height
else
	if GLOB_MODPAR_NAME = "ac_reveal_height" then
		ac_wallhole_height = ac_reveal_height + revealDUpper + revealDLower
		ac_unit_height = ac_wallhole_height
		B = ac_wallhole_height

		parameters	B					= B,
					ac_wallhole_height	= ac_wallhole_height,
					ac_unit_height		= ac_unit_height
	else
		if GLOB_MODPAR_NAME = "ac_unit_height" then
			B = ac_unit_height
			ac_wallhole_height = ac_unit_height
			ac_reveal_height = ac_unit_height - revealDUpper - revealDLower

			parameters	B				= B,
						ac_wallhole_height	= ac_wallhole_height,
						ac_reveal_height	= ac_reveal_height
		else
			ac_wallhole_height = B
			ac_unit_height = B
			ac_reveal_height = B - revealDUpper - revealDLower

			parameters	ac_wallhole_height	= ac_wallhole_height,
						ac_reveal_height		= ac_reveal_height,
						ac_unit_height		= ac_unit_height
		endif
	endif
endif

if iWindowShape = SHAPE_MULTISIDE | iWindowShape = SHAPE_OCTAGONAL then
	lock "B", "ac_wallhole_height", "ac_unit_height", "ac_reveal_height"
endif

! =============================================================================
! Wallhole Structure
! =============================================================================

bForceShowWContParamsOutside = (bDrawSill  | bDrawOutsideTrim)
bForceShowWContParamsInside	 = (bDrawBoard | bDrawInsideTrim)

call "WallholeStructure" parameters all A = A, B = B,
	refWidth 				= refWidth,
	leftWidth				= leftWidth,
	rightWidth				= rightWidth,
	openingHeight			= openingHeight,
	iRevealType				= iRevealType,
	iSillRevealType			= iSillRevealType,
	iBoardRevealType		= iBoardRevealType,
	leftWallholeRevealPnts	= leftWallholeRevealPnts,
	rightWallholeRevealPnts	= rightWallholeRevealPnts,
	iRevealPointsIdx		= iRevealPointsIdx,
	iClosureType			= iClosureType,
! --- Coustom CC Settings ---
	gs_custom_cc_turn_in		= gs_custom_cc_turn_in,
	iCustomCCThicknessType = iCustomCCThicknessType,
	iCustomCCOrientation = iCustomCCOrientation,
	gs_custom_cc_separator		= gs_custom_cc_separator,
	iCustomCCEditJambSide = iCustomCCEditJambSide,
	iCustomCCEditWallSide = iCustomCCEditWallSide,
	iCustomCCEditSkin = iCustomCCEditSkin,
	gs_custom_cc_array_left		= gs_custom_cc_array_left,
	gs_custom_cc_array_right	= gs_custom_cc_array_right,
	gs_custom_cc_thickness		= gs_custom_cc_thickness,
	gs_custom_cc_overhang		= gs_custom_cc_overhang,
	gs_custom_cc_separator_pen	= gs_custom_cc_separator_pen,
! --- Connections ---
	gs_stack_left			= gs_stack_left,
	gs_stack_right			= gs_stack_right,
	gs_stack_top			= 0,
! --- Function Control Parameters
	bEnablePlasterLeftIn	= bEnablePlasterLeftIn,
	bEnablePlasterLeftOut	= bEnablePlasterLeftOut,
	bEnablePlasterRightIn	= bEnablePlasterRightIn,
	bEnablePlasterRightOut	= bEnablePlasterRightOut,
	bEnablePlasterTopIn		= bEnablePlasterTopIn,
	bEnablePlasterTopOut	= bEnablePlasterTopOut,
	bEnablePlasterBottomIn	= bEnablePlasterBottomIn,
	bEnablePlasterBottomOut	= bEnablePlasterBottomOut,
	bEnableParapetInset		= bEnableParapetInset,
	bEnableMasonryArch		= bEnableMasonryArch,
	bEnableFaschen			= bEnableFaschen,
	gs_RevealTypeEnable		= gs_RevealTypeEnable,
	gs_ClosureTypeEnable	= gs_ClosureTypeEnable,
	bEnableWallContourHiddenLine	= bEnableWallContourHiddenLine,
! --- Macro Control Parameters
	isWindow				= 1,
	iWindowShape			= iWindowShape,
	defaultSillDepth		= defaultSillDepth,
	bForceShowWContParamsOutside	= bForceShowWContParamsOutside,
	bForceShowWContParamsInside		= bForceShowWContParamsInside,
! --- Corner Functions
	bLeftCornerFunction		= bLeftCornerFunction,
!	leftCornerAngle			= leftCornerAngle,
!	leftConnWallThk			= leftConnWallThk,
	bRightCornerFunction	= bRightCornerFunction,
!	rightCornerAngle		= rightCornerAngle,
!	rightConnWallThk		= rightConnWallThk,
! --- Casing
	bDrawOutsideTrim		= bDrawOutsideTrim,
	bDrawInsideTrim			= bDrawInsideTrim,
! --- sunShade wallhole size modification
	includeBoxHeight		= _includeBoxHeight,
! --- String Resources
	stRevealTypes					= stRevealTypes,
	stRevealTypesBottom				= stRevealTypesBottom,
	stRevealAngleEditBy				= stRevealAngleEditBy,
	stClosureTypes					= stClosureTypes,
	stWallContourLine				= stWallContourLine,
	stCavityClosureSide				= stCavityClosureSide,
	stCavityClosureTurnDir			= stCavityClosureTurnDir,
	stDutchClosureToSide			= stDutchClosureToSide,
	stCavityClosureEditedJambSide	= stCavityClosureEditedJambSide,
	stCavityClosureEditedWallSide	= stCavityClosureEditedWallSide,
	stCavityClosureEditedSkinNumber	= stCavityClosureEditedSkinNumber,
	stCavityClosureTurnInThickness	= stCavityClosureTurnInThickness,
	stCavityClosureHatchOrientation	= stCavityClosureHatchOrientation,
	stMasonryArchTypes				= stMasonryArchTypes,
	stMasonryArchStructure			= stMasonryArchStructure,
	gs_faschen_type					= gs_faschen_type


! =============================================================================
! Sunshade enable parameters
! =============================================================================

temp_gs_sunShade_typeEnable = gs_sunShade_typeEnable

! Avalilable sunshade types:
! 1 - None (0)
! 2 - Decorative shutter (1)
! 4 - Opening shutter (2)
! 8 - Folding to Reveal shutter (3)
! 16 - Folding to Wall Face shutter (4)
! 32 - Sliding shutter (5)
! 64 - Rolling shutter (6)
! 128 - External venetian (7)
! 256 - Venetian in lintel (8)

gs_sunShade_typeEnable = 2 + 4 + 8 + 16 + 32 + 64

if bLeftCornerFunction | gs_stack_left | bRightCornerFunction | gs_stack_right then
	gs_sunShade_typeEnable = bitset (gs_sunShade_typeEnable , 3, 0)		! Folding to Reveal
	gs_sunShade_typeEnable = bitset (gs_sunShade_typeEnable , 4, 0)		! Folding to Wall Face
endif

if (bLeftCornerFunction | gs_stack_left) & (bRightCornerFunction | gs_stack_right) then
	gs_sunShade_typeEnable = bitset (gs_sunShade_typeEnable , 1, 0)		! Decorative
	gs_sunShade_typeEnable = bitset (gs_sunShade_typeEnable , 2, 0)		! Opening
	gs_sunShade_typeEnable = bitset (gs_sunShade_typeEnable , 5, 0)		! Sliding
endif

if iWindowShape > 0 then			! not rectangular
	gs_sunShade_typeEnable = bitset (gs_sunShade_typeEnable , 3, 0)		! Folding to Reveal
	gs_sunShade_typeEnable = bitset (gs_sunShade_typeEnable , 4, 0)		! Folding to Wall Face
	gs_sunShade_typeEnable = bitset (gs_sunShade_typeEnable , 6, 0)		! Rolling
endif

if gs_sunShade_typeDisableByObject > 0 then
	for i = 1 to 8
		if bittest (gs_sunShade_typeDisableByObject, i) then gs_sunShade_typeEnable = bitset (gs_sunShade_typeEnable, i, 0)
	next i
endif

gs_sunShade_bChangeEnabledTypes = 0
if abs(gs_sunShade_typeEnable - temp_gs_sunShade_typeEnable) > EPS then gs_sunShade_bChangeEnabledTypes = 1

if gs_sunShade_typeEnable = 0 then
	gs_sunShade_typeEnable = 2		! a default value is needed to UI in this case too

	bSunshade = 0
	parameters bSunshade = bSunshade
	lock "bSunshade"
endif

! Available placement types
! 1 - On facade(0)
! 2 - On window(1)
! 4 - Behind facade(2)

gs_shutRoll_placementEnable	= 1 + 2 + 4

gs_shutLam_placementEnable	= 1 + 2 + 4


! =============================================================================
! Wallhole Framing
! =============================================================================

if 	iWindowShape	= SHAPE_ARCHED | \
	iWindowShape	= SHAPE_ELLIPSEARCH | \
	iWindowShape	= SHAPE_GOTHICARCH | \
	iWindowShape	= SHAPE_PENTAGON then

	lock "gs_sill_pen_3D", "gs_board_pen_3D"
	hideparameter "gs_sill_pen_3D", "gs_board_pen_3D"
endif

call "WallholeFraming" parameters all A = A,
	iRevealType				= iRevealType,
	leftWallFrameRevealPnts = leftWallholeRevealPnts,
	rightWallFrameRevealPnts= rightWallholeRevealPnts,
	iRevealPointsIdx		= iRevealPointsIdx,
! --- Function Control Parameters
	bEnableSill				= bEnableSill,
	bEnableBoard			= bEnableBoard,
	bEnableThreshold		= bEnableThreshold,
	bEnableCasing			= bEnableCasing,
	bEnableShutter			= bEnableShutter,
	bEnableCustomCornerLeft		= bEnableCustomCornerLeft,
	bEnableCustomCornerRight	= bEnableCustomCornerRight,
	gs_SillTypeEnable		= gs_SillTypeEnable,
	bBoardInPolyWall		= bBoardInPolyWall,
! --- Macro Control Parameters
	isWindow				= 1,
	iWindowShape			= iWindowShape,
	gs_casing_nor			= 0,
! --- Corner Functions
	bLeftCornerFunction		= bLeftCornerFunction,
!	leftCornerAngle			= leftCornerAngle,
!	leftConnWallThk			= leftConnWallThk,
	bRightCornerFunction	= bRightCornerFunction,
!	rightCornerAngle		= rightCornerAngle,
!	rightConnWallThk		= rightConnWallThk,
! --- Sunshade parameters
	gs_sunShade_typeEnable	= gs_sunShade_typeEnable,
	gs_sunShade_bChangeEnabledTypes	= gs_sunShade_bChangeEnabledTypes,
	gs_shutRoll_placementEnable	= gs_shutRoll_placementEnable,
	gs_shutLam_placementEnable	= gs_shutLam_placementEnable,
! --- turn plaster
	gs_turn_plaster_show_3D	= gs_turn_plaster_show_3D,
	thkPlasterAtSillLeft	= thkPlasterAtSillLeft,
	thkPlasterAtSillRight	= thkPlasterAtSillRight,
	thkPlasterAtSillTop		= thkPlasterAtSillTop,
	thkPlasterAtSillBottom	= thkPlasterAtSillBottom,
	thkPlasterAtBoardLeft	= thkPlasterAtBoardLeft,
	thkPlasterAtBoardRight	= thkPlasterAtBoardRight,
	thkPlasterAtBoardTop	= thkPlasterAtBoardTop,
	thkPlasterAtBoardBottom	= thkPlasterAtBoardBottom,
! --- String Resources
	stSillTypes				= stSillTypes,
	stCasingType			= stCasingType,
	stBsilldetlevel 		= stBsilldetlevel,
	stBoardInPolyWall		= stBoardInPolyWall,

	stSunShadeTypes			= stSunShadeTypes,
	stShutterPanelPos		= stShutterPanelPos,
	stFoldingShutterStacking= stFoldingShutterStacking,
	stSlidingShutterCover	= stSlidingShutterCover,
	stShutterPanelTypes		= stShutterPanelTypes,
	stShutRollPlacement		= stShutRollPlacement,
	stShutRollBoxType		= stShutRollBoxType,
	stShutRollBoxDefaultSize= stShutRollBoxDefaultSize,
	stShutRollRailPos		= stShutRollRailPos,
	stShutLamPlacement		= stShutLamPlacement,
	stShutLamRailPos		= stShutLamRailPos


! =============================================================================
! 2D Detail Level
! =============================================================================

if gs_2DDetEnable = 0 then
			values{2} "iDWDet2D" 	DETLEVEL_DW2D_MVO,		`по ПМВ`,
									DETLEVEL_DW2D_SCSENS,	`Зависит от Масштаба`,
									DETLEVEL_DW2D_50,		`1:50`,
									DETLEVEL_DW2D_100,		`1:100`,
									DETLEVEL_DW2D_200,		`1:200`,
									DETLEVEL_DW2D_OFF,		`Откл.`
else

	dim n2DScaleValueMask[]
	dim n2DScaleValueMask_m[]

	i=1
	if bittest( gs_2DDetEnable, 11) then                                              ! by MVO, 2048
				n2DScaleValueMask[i] = stDetail2D[1]
				n2DScaleValueMask_m[i] = DETLEVEL_DW2D_MVO
				i = i + 1
	endif
	if bittest( gs_2DDetEnable, 0) then                                              ! Scale Sensitive in Value list, 1
				n2DScaleValueMask[i] = stDetail2D[2]
				n2DScaleValueMask_m[i] = DETLEVEL_DW2D_SCSENS
				i = i + 1
	endif
	if bittest( gs_2DDetEnable, 10) then                                              ! 1:20 in Value list,1024
				n2DScaleValueMask[i] = stDetail2D[12]
				n2DScaleValueMask_m[i] = DETLEVEL_DW2D_20
				i = i + 1
	endif
	if bittest( gs_2DDetEnable, 1) then                                              ! 1:50 in Value list,2
				n2DScaleValueMask[i] = stDetail2D[3]
				n2DScaleValueMask_m[i] = DETLEVEL_DW2D_50
				i = i + 1
	endif
	if bittest( gs_2DDetEnable, 2) then                                              ! 1:100 in Value list,4
				n2DScaleValueMask[i] = stDetail2D[4]
				n2DScaleValueMask_m[i] = DETLEVEL_DW2D_100
				i = i + 1
	endif
	if bittest( gs_2DDetEnable, 3) then                                              ! Middle Detail in Value list,8
				n2DScaleValueMask[i] = stDetail2D[5]
				n2DScaleValueMask_m[i] = DETLEVEL_DW2D_MIDDET
				i = i + 1
	endif
	if bittest( gs_2DDetEnable, 4) then                                              ! Simple in Value list,16
				n2DScaleValueMask[i] = stDetail2D[6]
				n2DScaleValueMask_m[i] = DETLEVEL_DW2D_SMPL2L
				i = i + 1
	endif
	if bittest( gs_2DDetEnable, 5) then                                              ! 1:200 in Value list,32
				n2DScaleValueMask[i] = stDetail2D[7]
				n2DScaleValueMask_m[i] = DETLEVEL_DW2D_200
				i = i + 1
	endif
	if bittest( gs_2DDetEnable, 12) then                                              ! 1:500 in Value list,4096
				n2DScaleValueMask[i] = stDetail2D[13]
				n2DScaleValueMask_m[i] = DETLEVEL_DW2D_500
				i = i + 1
	endif
	if bittest( gs_2DDetEnable, 6) then                                              ! Off in Value list,64
				n2DScaleValueMask[i] = stDetail2D[8]
				n2DScaleValueMask_m[i] = DETLEVEL_DW2D_OFF
				i = i + 1
	endif
	if bittest( gs_2DDetEnable, 7) then                                              ! Middle USA in Value list,128
				n2DScaleValueMask[i] = stDetail2D[7]
				n2DScaleValueMask_m[i] = DETLEVEL_DW2D_MIDUSA
				i = i + 1
	endif
	if bittest( gs_2DDetEnable, 8) then                                              ! Chinese Simple in Value list,256
				n2DScaleValueMask[i] = stDetail2D[10]
				n2DScaleValueMask_m[i] = DETLEVEL_DW2D_CHISMPL
				i = i + 1
	endif
	if bittest( gs_2DDetEnable, 9) then                                              ! Chinese Detailed in Value list,512
				n2DScaleValueMask[i] = stDetail2D[11]
				n2DScaleValueMask_m[i] = DETLEVEL_DW2D_CHIDET
				i = i + 1
	endif

			values{2} "iDWDet2D"  n2DScaleValueMask_m, n2DScaleValueMask
endif


! =============================================================================
! Show Reveal On Symbol
! =============================================================================

if bCanHaveReveal then
	values{2} "iRevealOnSymbol"	SHOWREV_MVO, stRevealOnSymbValues[1],
					SHOWREV_ALWAYS, stRevealOnSymbValues[2],
					SHOWREV_UPTO50, stRevealOnSymbValues[3],
					SHOWREV_UPTO100, stRevealOnSymbValues[4],
					SHOWREV_UPTO200, stRevealOnSymbValues[5],
					SHOWREV_NEVER, stRevealOnSymbValues[6]
					
else
	lock "iRevealOnSymbol"
	hideparameter "iRevealOnSymbol"
endif


! =============================================================================
! UI Support
! =============================================================================

if GLOB_UI_BUTTON_ID < 0 then
	parameters gs_ui_current_page = -GLOB_UI_BUTTON_ID
endif


! =============================================================================

values{2} "iTypeCurvedWallCut" 	CUT_PARALLEL, `Параллельно`,
								CUT_RADIAL, `Радиально`


! =============================================================================
end stDetail2D
! =============================================================================
