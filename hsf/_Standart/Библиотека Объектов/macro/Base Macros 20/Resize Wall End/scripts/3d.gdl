
! --- hotspots at the ends ---
hotspot 0, 0, 0						! fix hotspot at the wall-end
hotspot 0, WALL_THICKNESS, 0		! fix hotspot at the wall-end

hotspot 0, 0, ZZYZX					! fix hotspot at the wall-end
hotspot 0, WALL_THICKNESS, ZZYZX	! fix hotspot at the wall-end

unID = GS_HotspotUnIDBegin

if r0 < EPS then
	xMoveTo = AC_CutWidth
	gosub "move the coorinate system to X"

	hotspot -AC_CutWidth, additionIfMirr, 0, unID, AC_CutWidth, 1+128		! base
	unID = unID + 1
	hotspot -AC_CutWidth-0.1, additionIfMirr, 0, unID, AC_CutWidth, 3		! reference
	unID = unID + 1
	hotspot 0, additionIfMirr, 0, unID, AC_CutWidth, 2						! moving
	unID = unID + 1

	hotspot -AC_CutWidth, additionIfMirr, ZZYZX, unID, AC_CutWidth, 1+128	! base
	unID = unID + 1
	hotspot -AC_CutWidth-0.1, additionIfMirr, ZZYZX, unID, AC_CutWidth, 3	! reference
	unID = unID + 1
	hotspot 0, additionIfMirr, ZZYZX, unID, AC_CutWidth, 2					! moving
	unID = unID + 1

	hotspot -AC_CutWidth, WALL_THICKNESS+additionNotMirr, 0, unID, AC_CutWidth, 1+128	! base
	unID = unID + 1
	hotspot -AC_CutWidth-0.1, WALL_THICKNESS+additionNotMirr, 0, unID, AC_CutWidth, 3	! reference
	unID = unID + 1
	hotspot 0, WALL_THICKNESS+additionNotMirr, 0, unID, AC_CutWidth, 2					! moving
	unID = unID + 1

	hotspot -AC_CutWidth, WALL_THICKNESS+additionNotMirr, ZZYZX, unID, AC_CutWidth, 1+128	! base
	unID = unID + 1
	hotspot -AC_CutWidth-0.1, WALL_THICKNESS+additionNotMirr, ZZYZX, unID, AC_CutWidth, 3	! reference
	unID = unID + 1
	hotspot 0, WALL_THICKNESS+additionNotMirr, ZZYZX, unID, AC_CutWidth, 2					! moving
	unID = unID + 1

	del moveStepNum
else

	for i = 1 to 2
		hotspot 0, 0, 0, unID, cutWidthAngle, 4+128						! base
		unID = unID + 1
		xMoveTo = AC_CutWidth
		gosub "move the coorinate system to X"
		hotspot 0, 0, 0, unID, cutWidthAngle, 5, AC_CutWidth			! moving - display param: AC_CutWidth
		del moveStepNum
		unID = unID + 1
		if onWallBeg then
			hotspot 0, r0 + WALL_THICKNESS, 0, unID, cutWidthAngle, 6	! centerpoint
			unID = unID + 1
			hotspot 0, -r0, 1, unID, cutWidthAngle, 7					! reference
			unID = unID + 1
		else
			hotspot 0, -r0, 0, unID, cutWidthAngle, 6					! centerpoint
			unID = unID + 1
			hotspot 0, -r0, -1, unID, cutWidthAngle, 7					! reference
			unID = unID + 1
		endif

		hotspot 0, WALL_THICKNESS, 0, unID, cutWidthAngle, 4+128			! base
		unID = unID + 1
		xMoveTo = AC_CutWidth
		gosub "move the coorinate system to X"
		hotspot 0, WALL_THICKNESS, 0, unID, cutWidthAngle, 5, AC_CutWidth	! moving - display param: AC_CutWidth
		del moveStepNum
		unID = unID + 1
		if onWallBeg then
			hotspot 0, r0 + WALL_THICKNESS, 0, unID, cutWidthAngle, 6		! centerpoint
			unID = unID + 1
			hotspot 0, r0 + WALL_THICKNESS, 1, unID, cutWidthAngle, 7		! reference
			unID = unID + 1
		else
			hotspot 0, -r0, 0, unID, cutWidthAngle, 6+revAngleExtra			! centerpoint
			unID = unID + 1
			hotspot 0, -r0, -1, unID, cutWidthAngle, 7						! reference
			unID = unID + 1
		endif

		addz ZZYZX

	next i
	del 2

endif

end


!**************************** SUBROUTINES ****************************!

! ===== move the coorinate system to a given X coordinate =====
"move the coorinate system to X":

additionIfMirr = 0
additionNotMirr = 0
if r0 > EPS then

	if onWallBeg then
		addy r0+WALL_THICKNESS
		rotz (xMoveTo / (r0 + WALL_THICKNESS/2)) / PI * 180
		addy -r0-WALL_THICKNESS
	else
		addy -r0
		rotz -(xMoveTo / (r0 + WALL_THICKNESS/2)) / PI * 180
		addy r0
	endif

	moveStepNum = 3

else

	if SYMB_MIRRORED then
		additionIfMirr = xMoveTo * tan(wallIncl)
	else
		additionNotMirr = xMoveTo * tan(wallIncl)
	endif

	addx xMoveTo
	moveStepNum = 1

endif

return
