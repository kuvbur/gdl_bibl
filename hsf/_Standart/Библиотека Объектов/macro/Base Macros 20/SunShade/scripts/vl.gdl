
! ------------------------------------------------------------------------------
! Sunshade types
! ------------------------------------------------------------------------------

if gs_sunShade_typeEnable > 0 then
	if gs_sunShade_bChangeEnabledTypes then
		dim gs_sunShade_iCashedEnableTypes[]

		nEnabledTypes = 0

		! available bits - use in gs_sunShade_typeEnable
		! ------------------------------------------------------------------------------
		! 1 - None (integer value: 0)
		! 2 - Decorative shutter (integer value: 1)
		! 4 - Opening shutter (int: 2)
		! 8 - Folding to Reveal shutter	(int: 3)
		! 16 - Folding to Wall Face shutter	(int: 4)
		! 32 - Sliding shutter	(int: 5)
		! 64 - Rolling shutter (int: 6)
		! 128 - External venetian (int: 7)
		! 256 - Venetian in lintel  (int: 8)

		for i = 1 to vardim1(stSunShadeTypes)
			if bittest (gs_sunShade_typeEnable, i-1) then
				nEnabledTypes = nEnabledTypes + 1
				gs_sunShade_iCashedEnableTypes[nEnabledTypes] = i-1
			endif
		next i

		parameters gs_sunShade_typeEnable		= gs_sunShade_typeEnable,
				gs_sunShade_iCashedEnableTypes	= gs_sunShade_iCashedEnableTypes

	endif

	dim sunShadeEnableTypes[]
	for i = vardim1(gs_sunShade_iCashedEnableTypes) to 1 step -1
		sunShadeEnableTypes[i] = stSunShadeTypes[gs_sunShade_iCashedEnableTypes[i]+1]
	next i

	isInvalidSunShadeType = 1
	for i = 1 to vardim1(gs_sunShade_iCashedEnableTypes)
		if gs_sunShade_iType = gs_sunShade_iCashedEnableTypes[i] then
			isInvalidSunShadeType = 0
		endif
	next i

	if isInvalidSunShadeType then
		bSunshade = 0
		parameters bSunshade = bSunshade
	endif

	values{2} "gs_sunShade_iType" gs_sunShade_iCashedEnableTypes, sunShadeEnableTypes
endif


! ------------------------------------------------------------------------------
! Hiding general parameters in case of no shutter
! ------------------------------------------------------------------------------

if not(bSunshade) then
	values "gs_shutter_iPanelPos" 1
	values "gs_shutPanel_iType" 1

	lock	"gs_sunShade_iType",
			"gs_shutter_nPanels",
			"gs_shutter_nPanels2",
			"gs_shutter_panelPos",
			"gs_shutter_iPanelPos",
			"gs_sunShade_bAutomaticHeight",
			"gs_sunShade_height",
			"gs_shutter_innerOffset",
			"gs_shutter_closingDepth",
			"gs_shutter_bExtraFrame",
			"gs_shutter_extraFrameWidth",
			"gs_shutter_extraFrameThk",
			"gs_slidingShutter_cover",
			"gs_slidingShutter_iCover",
			"gs_slidingShutter_railWidth",
			"gs_slidingShutter_stickLength",
			"gs_slidingShutter_stickRad",
			"gs_slidingShutter_panelDist",
			"gs_foldingShutter_stacking",
			"gs_foldingShutter_iStacking",
			"gs_foldingShutter_ovhg",
			"gs_outFoldingShutter_panelIn",
			"gs_shutter_opened",
			"gs_shutter_opAngle",
			"gs_shutter_opLength",
			"gs_shutter_closedLength",
			"gs_shutter_opHeight",
			"gs_shutter_closedHeight",
			"gs_sunShade_bShowIn2D",
			"gs_sunShade_bShowOpline",
			"gs_sunShade_lineType",
			"gs_sunShade_cutLinesPen",
			"gs_sunShade_unCutLinesPen",
			"gs_sunShade_cutFillType",
			"gs_sunShade_cutFillPen",
			"gs_sunShade_cutFillBackPen",
			"gs_sunShade_insFillType",
			"gs_sunShade_insFillPen",
			"gs_sunShade_insFillBackPen",
			"gs_shutSliding_matRail"

	hideparameter	"gs_sunShade_iType",
			"gs_shutter_nPanels",
			"gs_shutter_nPanels2",
			"gs_shutter_panelPos",
			"gs_sunShade_bAutomaticHeight",
			"gs_sunShade_height",
			"gs_shutter_innerOffset",
			"gs_shutter_closingDepth",
			"gs_shutter_bExtraFrame",
			"gs_shutter_extraFrameWidth",
			"gs_shutter_extraFrameThk",
			"gs_slidingShutter_cover",
			"gs_slidingShutter_railWidth",
			"gs_slidingShutter_stickLength",
			"gs_slidingShutter_stickRad",
			"gs_slidingShutter_panelDist",
			"gs_foldingShutter_stacking",
			"gs_foldingShutter_iStacking",
			"gs_foldingShutter_ovhg",
			"gs_outFoldingShutter_panelIn",
			"gs_shutter_opened",
			"gs_shutter_opAngle",
			"gs_shutter_opLength",
			"gs_shutter_closedLength",
			"gs_shutter_opHeight",
			"gs_shutter_closedHeight",
			"gs_sunShade_bShowIn2D",
			"gs_sunShade_bShowOpline",
			"gs_sunShade_lineType",
			"gs_sunShade_cutLinesPen",
			"gs_sunShade_unCutLinesPen",
			"gs_sunShade_cutFillType",
			"gs_sunShade_cutFillPen",
			"gs_sunShade_cutFillBackPen",
			"gs_sunShade_insFillType",
			"gs_sunShade_insFillPen",
			"gs_sunShade_insFillBackPen",
			"gs_shutSliding_matRail"

	gosub "HidePanelParameters"

	gosub "HideRollingParameters"

	gosub "HideVenetianParameters"

! ------------------------------------------------------------------------------
	end	! If no sunshade then exit here !
! ------------------------------------------------------------------------------
endif


! ------------------------------------------------------------------------------
! Panel numbers
! ------------------------------------------------------------------------------

! --- Setting defaults ----------------------------------------------------------

if (GLOB_MODPAR_NAME = "bSunshade" | GLOB_MODPAR_NAME = "gs_sunShade_iType") then
	if gs_sunShade_iType = SUNSHADE_DECORATIVE	then gs_shutter_nPanels = 2
	if gs_sunShade_iType = SUNSHADE_SHUTTER		then gs_shutter_nPanels = 2
	if gs_sunShade_iType = SUNSHADE_FOLDING		then
			gs_shutter_nPanels = 1
			gs_shutter_nPanels2 = 1
	endif
	if gs_sunShade_iType = SUNSHADE_OUTFOLDING	then gs_shutter_nPanels = 4
	if gs_sunShade_iType = SUNSHADE_SLIDING		then gs_shutter_nPanels = 2

	parameters gs_shutter_nPanels = gs_shutter_nPanels, gs_shutter_nPanels2 = gs_shutter_nPanels2
endif


! --- Allowed panelnumbers ------------------------------------------------------

if gs_sunShade_iType = SUNSHADE_FOLDING		then
	maxPanelNum = int (a / panelMinimalWidth)

	values "gs_shutter_nPanels" range [1, maxPanelNum - gs_shutter_nPanels2]
	values "gs_shutter_nPanels2" range [1, maxPanelNum - gs_shutter_nPanels]

else
	if gs_sunShade_iType = SUNSHADE_DECORATIVE	then
		if bLeftCornerFunction | bRightCornerFunction | gs_stack_left | gs_stack_right then
			put 1
		else
			put 1, 2
		endif
	endif
	if gs_sunShade_iType = SUNSHADE_SHUTTER	then
		if iWindowShape = 0 then
			put 1, 2, 3, 4
		else
			put 1, 2
		endif
	endif
	if gs_sunShade_iType = SUNSHADE_OUTFOLDING	then put 4
	if gs_sunShade_iType = SUNSHADE_SLIDING		then
		if bLeftCornerFunction | bRightCornerFunction | gs_stack_left | gs_stack_right then
			put 1, 2
		else
			put 1, 2, 3, 4
		endif
	endif

	if NSP > 0 then
		values "gs_shutter_nPanels" use (NSP)

		dim panelNums[]
		for i = NSP to 1 step -1
			panelNums[i] = get(1)
		next i

		minPanelNum = 1
		maxPanelNum = 1
		for i = 1 to vardim1(panelNums)
			minPanelNum = min(panelNums[i], minPanelNum)
			maxPanelNum = max(panelNums[i], maxPanelNum)
		next i

		if gs_shutter_nPanels > maxPanelNum then gs_shutter_nPanels = maxPanelNum
		if gs_shutter_nPanels < minPanelNum then gs_shutter_nPanels = minPanelNum
		if gs_sunShade_iType = SUNSHADE_OUTFOLDING then gs_shutter_nPanels = 4

		parameters gs_shutter_nPanels = gs_shutter_nPanels
	else
		hideparameter "gs_shutter_nPanels"
		lock "gs_shutter_nPanels"
	endif

	hideparameter "gs_shutter_nPanels2"
	lock "gs_shutter_nPanels2"
endif


! ------------------------------------------------------------------------------
! Shutter panel position values
! ------------------------------------------------------------------------------

shutterPanelPosBit = 0

if gs_sunShade_iType = SUNSHADE_DECORATIVE then
	if gs_shutter_nPanels = 1 then
		shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_LEFT, 1)
		shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_RIGHT, 1)
	else
		shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_SYMMETRIC, 1)
	endif
endif
if gs_sunShade_iType = SUNSHADE_SHUTTER then
	if gs_shutter_nPanels = 1 then
		shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_LEFT, 1)
		shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_RIGHT, 1)
	else
		if gs_shutter_nPanels = 2 then
			shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_LEFT, 1)
			shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_RIGHT, 1)
			shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_SYMMETRIC, 1)
		else
			if gs_shutter_nPanels = 3 then
				shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_LEFT, 1)
				shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_RIGHT, 1)
				shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_MOSTLYLEFT, 1)
				shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_MOSTLYRIGHT, 1)
			else
				shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_LEFT, 1)
				shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_RIGHT, 1)
				shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_MOSTLYLEFT, 1)
				shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_MOSTLYRIGHT, 1)
				shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_SYMMETRIC, 1)
			endif
		endif
	endif
endif
if gs_sunShade_iType = SUNSHADE_OUTFOLDING then
	shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_SYMMETRIC, 1)
endif
if gs_sunShade_iType = SUNSHADE_SLIDING then
	if gs_shutter_nPanels = 1 then
		shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_LEFT, 1)
		shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_RIGHT, 1)
	else
		if gs_shutter_nPanels = 2 then
			shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_LEFTTOP, 1)
			shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_LEFTBOTTOM, 1)
			shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_RIGHTTOP, 1)
			shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_RIGHTBOTTOM, 1)
			shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_SYMMETRIC, 1)
		else
			if gs_shutter_nPanels = 3 then
				shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_LEFTTOP, 1)
				shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_LEFTBOTTOM, 1)
				shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_RIGHTTOP, 1)
				shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_RIGHTBOTTOM, 1)
			else
				shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_DOUBLETOP, 1)
				shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_DOUBLEBOTTOM, 1)
			endif
		endif
	endif
endif

if gs_stack_left | bLeftCornerFunction then
	shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_SYMMETRIC, 0)
	shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_LEFT, 0)
	shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_MOSTLYLEFT, 0)
	shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_MOSTLYRIGHT, 0)
	shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_LEFTTOP, 0)
	shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_LEFTBOTTOM, 0)
	shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_DOUBLETOP, 0)
	shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_DOUBLEBOTTOM, 0)
endif

if gs_stack_right | bRightCornerFunction then
	shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_SYMMETRIC, 0)
	shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_RIGHT, 0)
	shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_MOSTLYLEFT, 0)
	shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_MOSTLYRIGHT, 0)
	shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_RIGHTTOP, 0)
	shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_RIGHTBOTTOM, 0)
	shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_DOUBLETOP, 0)
	shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_DOUBLEBOTTOM, 0)
endif

if iWindowShape > 0 & gs_shutter_nPanels = 2 then
	shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_RIGHT, 0)
	shutterPanelPosBit = bitset (shutterPanelPosBit, PANELPOS_LEFT, 0)
endif

for i = 1 to vardim1(stShutterPanelPos)
	if bittest (shutterPanelPosBit, i) then put i
next i

if NSP > 0 then
	values "gs_shutter_iPanelPos" use (NSP)

	dim availableShutterPos[]
	for i = NSP to 1 step -1
		availableShutterPos[i] = stShutterPanelPos[get(1)]
	next i
	values "gs_shutter_panelPos" availableShutterPos
else
	if bRightCornerFunction and not(bLeftCornerFunction) then
		values "gs_shutter_iPanelPos" PANELPOS_LEFT
		values "gs_shutter_panelPos" stShutterPanelPos[PANELPOS_LEFT]
	else
		if bLeftCornerFunction and not(bRightCornerFunction) then
			values "gs_shutter_iPanelPos" PANELPOS_RIGHT
			values "gs_shutter_panelPos" stShutterPanelPos[PANELPOS_RIGHT]
		else
			values "gs_shutter_iPanelPos" PANELPOS_SYMMETRIC
			values "gs_shutter_panelPos" stShutterPanelPos[PANELPOS_SYMMETRIC]
		endif
	endif
endif

if GLOB_MODPAR_NAME = "gs_shutter_panelPos" then
	gs_shutter_iPanelPos = 1
	for i = 2 to vardim1(stShutterPanelPos)
		if gs_shutter_panelPos = stShutterPanelPos[i] then
			gs_shutter_iPanelPos = i
			i = vardim1(stShutterPanelPos)		!break, last
		endif
	next i
	parameters gs_shutter_iPanelPos = gs_shutter_iPanelPos
else
	parameters gs_shutter_panelPos = stShutterPanelPos[gs_shutter_iPanelPos]
endif


! ------------------------------------------------------------------------------
! Panel Height Parameters
! ------------------------------------------------------------------------------

if gs_sunShade_iType = SUNSHADE_DECORATIVE | \
		gs_sunShade_iType = SUNSHADE_SHUTTER | \
		gs_sunShade_iType = SUNSHADE_SLIDING then

	if gs_sunShade_bAutomaticHeight then

		gs_sunShade_height = b
		parameters gs_sunShade_height = gs_sunShade_height

		hideparameter "gs_sunShade_height"
		lock "gs_sunShade_height"
	else
		values "gs_sunShade_height" range (0,)
	endif
else
	hideparameter "gs_sunShade_bAutomaticHeight", "gs_sunShade_height"
	lock "gs_sunShade_bAutomaticHeight", "gs_sunShade_height"
endif


! ------------------------------------------------------------------------------
! Shutter Panel Parameters
! ------------------------------------------------------------------------------

if gs_sunShade_iType = SUNSHADE_DECORATIVE | \
		gs_sunShade_iType = SUNSHADE_SHUTTER | \
		gs_sunShade_iType = SUNSHADE_FOLDING | \
		gs_sunShade_iType = SUNSHADE_OUTFOLDING | \
		gs_sunShade_iType = SUNSHADE_SLIDING then

	if gs_sunShade_iType = SUNSHADE_OUTFOLDING then
		panelWidth = min(gs_outFoldingShutter_panelIn, a/2 - gs_outFoldingShutter_panelIn - distShutterWall)
	else
		if gs_sunShade_iType = SUNSHADE_FOLDING then
			panelWidth = a / (gs_shutter_nPanels + gs_shutter_nPanels2)
		else
			if gs_sunShade_iType = SUNSHADE_SHUTTER then
				panelWidth = (a - gs_shutter_innerOffset * 2) / gs_shutter_nPanels
			else
				if gs_sunShade_iType = SUNSHADE_DECORATIVE then
					if gs_shutPanel_bAutomaticWidth then
						panelWidth = a / gs_shutter_nPanels

						gs_shutPanel_panelWidth = a / gs_shutter_nPanels
						parameters gs_shutPanel_panelWidth = gs_shutPanel_panelWidth
						lock "gs_shutPanel_panelWidth"
					else
						panelWidth = gs_shutPanel_panelWidth

						if	gs_shutPanel_iType = PANEL_Z |\
							gs_shutPanel_iType = PANEL_FULL |\
							gs_shutPanel_iType = PANEL_VERTBOARDS |\
							gs_shutPanel_iType = PANEL_ROTATEDBOARDsS |\
							gs_shutPanel_iType = PANEL_CUSTOM then

							values "gs_shutPanel_panelWidth" range (0,)
						else
							values "gs_shutPanel_panelWidth" range (gs_shutPanel_frameWidth*2,)
						endif
					endif
				else
					panelWidth = a / gs_shutter_nPanels
				endif
			endif
		endif
	endif

	if gs_sunShade_bAutomaticHeight then
		panelHeight = b
	else
		panelHeight = gs_sunShade_height
	endif

	call "ShutterPanels" parameters a			= panelWidth,
				b								= panelHeight,
				gs_shutPanel_type				= gs_shutPanel_type,
				gs_shutPanel_iType				= gs_shutPanel_iType,
				gs_shutPanel_frameWidth			= gs_shutPanel_frameWidth,
				gs_shutPanel_BDiffBottomFrame	= gs_shutPanel_BDiffBottomFrame,
				gs_shutPanel_frameWidthBottom	= gs_shutPanel_frameWidthBottom,
				gs_shutPanel_nHoleHor			= gs_shutPanel_nHoleHor,
				gs_shutPanel_nHoleVert			= gs_shutPanel_nHoleVert,
				gs_shutPanel_holeRadius			= gs_shutPanel_holeRadius,
				gs_shutPanel_ZThk				= gs_shutPanel_ZThk,
				gs_shutPanel_boardThkVert		= gs_shutPanel_boardThkVert,
				gs_shutPanel_boardThkHor		= gs_shutPanel_boardThkHor,
				stShutterPanelTypes				= stShutterPanelTypes

	if gs_sunShade_iType <> SUNSHADE_DECORATIVE then
		lock "gs_shutPanel_bAutomaticWidth", "gs_shutPanel_panelWidth"
		hideparameter "gs_shutPanel_bAutomaticWidth", "gs_shutPanel_panelWidth"
	endif

else

	gosub "HidePanelParameters"

endif


! ------------------------------------------------------------------------------
! Opening Shutter only
! ------------------------------------------------------------------------------

if gs_sunShade_iType = SUNSHADE_SHUTTER then
	values "gs_shutter_opAngle" range [0, 180]

	if iWindowShape = SHAPE_RECTANGULAR | iWindowShape = SHAPE_ARCHED | iWindowShape = SHAPE_ELLIPSEARCH then
		values "gs_shutter_extraFrameWidth" range (0,)
		values "gs_shutter_extraFrameThk" range (0,)
	else
		gs_shutter_bExtraFrame = 0
		parameters gs_shutter_bExtraFrame = gs_shutter_bExtraFrame

		hideparameter "gs_shutter_extraFrameWidth", "gs_shutter_extraFrameThk", "gs_shutter_bExtraFrame"
		lock "gs_shutter_extraFrameWidth", "gs_shutter_extraFrameThk", "gs_shutter_bExtraFrame"
	endif
else
	hideparameter	"gs_shutter_opAngle",
					"gs_shutter_closingDepth",
					"gs_shutter_innerOffset",
					"gs_shutter_bExtraFrame",
					"gs_shutter_extraFrameWidth",
					"gs_shutter_extraFrameThk"
	lock "gs_shutter_opAngle",
			"gs_shutter_closingDepth",
			"gs_shutter_innerOffset",
			"gs_shutter_bExtraFrame",
			"gs_shutter_extraFrameWidth",
			"gs_shutter_extraFrameThk"
endif


if gs_sunShade_iType <> SUNSHADE_SHUTTER & gs_sunShade_iType <> SUNSHADE_OUTFOLDING then
	lock "gs_sunShade_bShowOpline"
	hideparameter "gs_sunShade_bShowOpline"
endif


! ------------------------------------------------------------------------------
! Folding to Wall Face only
! ------------------------------------------------------------------------------

if gs_sunShade_iType = SUNSHADE_OUTFOLDING then
	if not(bOutfoldingWarning) then
		values "gs_outFoldingShutter_panelIn" range [panelMinimalWidth, min (WIDO_SILL - gs_shutPanel_Thk, a/2-panelMinimalWidth)]
	else
		lock "gs_outFoldingShutter_panelIn", "gs_shutter_opened", "gs_sunShade_bShowIn2D"
		hideparameter "gs_outFoldingShutter_panelIn", "gs_shutter_opened", "gs_sunShade_bShowIn2D"
	endif

	if iRevealType = REVEAL_DOUBLE_SPLAYED | iRevealType = REVEAL_OUTSIDE_SPLAYED then
		hideparameter "gs_outFoldingShutter_panelIn"
		lock "gs_outFoldingShutter_panelIn"
	endif
else
	hideparameter "gs_outFoldingShutter_panelIn", "gs_shutter_opened"
	lock "gs_outFoldingShutter_panelIn", "gs_shutter_opened"
endif


! ------------------------------------------------------------------------------
! Opening length coordination for sliding and folding
! ------------------------------------------------------------------------------

if gs_sunShade_iType = SUNSHADE_SLIDING | gs_sunShade_iType = SUNSHADE_FOLDING then

	if gs_sunShade_iType = SUNSHADE_FOLDING then
		nPanelLeft = gs_shutter_nPanels
		nPanelRight = gs_shutter_nPanels2
		maxOpLength = sunShadeLength3D - (gs_shutter_nPanels + gs_shutter_nPanels2) * gs_shutPanel_Thk
	else
		maxOpLength = sunShadeLength3D
	endif

	if gs_shutter_closedLength < 0 then
		gs_shutter_closedLength = 0
		parameters gs_shutter_closedLength = gs_shutter_closedLength
	endif
	if gs_shutter_closedLength > maxOpLength then
		gs_shutter_closedLength = maxOpLength
		parameters gs_shutter_closedLength = gs_shutter_closedLength
	endif

	if GLOB_MODPAR_NAME = "gs_sunShade_type" | GLOB_MODPAR_NAME = "gs_sunShade_iType" then
		gs_shutter_opLength = maxOpLength
		parameters gs_shutter_opLength = gs_shutter_opLength
	endif

	nPanel = nPanelLeft + nPanelRight

	values "gs_shutter_opLength" range [0, maxOpLength]

	if nPanel > 0 then	! nPanelLeft & nPanelRight isn't set in master script, when glob_modpar_name = type and type = sliding
		values "gs_shutter_opLength_1" range [0, nPanelLeft/nPanel * maxOpLength]
		values "gs_shutter_opLength_2" range [0, nPanelRight/nPanel * maxOpLength]

		if GLOB_MODPAR_NAME = "gs_shutter_opLength_1" then
			gs_shutter_opLength = max(0, nPanel / nPanelLeft * gs_shutter_opLength_1)
			gs_shutter_opLength_2 = max(0, nPanelRight / nPanelLeft * gs_shutter_opLength_1)
			gs_shutter_closedLength = max(0, maxOpLength - gs_shutter_opLength)
			parameters	gs_shutter_opLength_2	= gs_shutter_opLength_2,
						gs_shutter_opLength		= gs_shutter_opLength,
						gs_shutter_closedLength = gs_shutter_closedLength
		else
			if GLOB_MODPAR_NAME = "gs_shutter_opLength_2" then
				gs_shutter_opLength = max(0, nPanel / nPanelRight * gs_shutter_opLength_2)
				gs_shutter_opLength_1 = max(0, nPanelLeft / nPanelRight * gs_shutter_opLength_2)
				gs_shutter_closedLength = max(0, maxOpLength - gs_shutter_opLength)
				parameters	gs_shutter_opLength_1	= gs_shutter_opLength_1,
							gs_shutter_opLength		= gs_shutter_opLength,
							gs_shutter_closedLength = gs_shutter_closedLength
			else
				if GLOB_MODPAR_NAME = "gs_shutter_opLength" then
					gs_shutter_opLength_1 = max(0, nPanelLeft  / nPanel * gs_shutter_opLength)
					gs_shutter_opLength_2 = max(0, nPanelRight / nPanel * gs_shutter_opLength)
					gs_shutter_closedLength = max(0, maxOpLength - gs_shutter_opLength)
					parameters	gs_shutter_opLength_1	= gs_shutter_opLength_1,
								gs_shutter_opLength_2	= gs_shutter_opLength_2,
								gs_shutter_closedLength	= gs_shutter_closedLength
				else
					gs_shutter_opLength = max(0, maxOpLength - gs_shutter_closedLength)
					gs_shutter_opLength_1 = max(0, nPanelLeft  / nPanel * gs_shutter_opLength)
					gs_shutter_opLength_2 = max(0, nPanelRight / nPanel * gs_shutter_opLength)
					parameters	gs_shutter_opLength_1	= gs_shutter_opLength_1,
								gs_shutter_opLength_2	= gs_shutter_opLength_2,
								gs_shutter_opLength		= gs_shutter_opLength
				endif
			endif
		endif
	endif
else
	hideparameter "gs_shutter_opLength"
	lock "gs_shutter_opLength"
endif


! ------------------------------------------------------------------------------
! Folding to Reveal only
! ------------------------------------------------------------------------------

if gs_sunShade_iType = SUNSHADE_FOLDING then
	if iRevealType = REVEAL_DOUBLE_SPLAYED | iRevealType = REVEAL_OUTSIDE_SPLAYED then
		values "gs_foldingShutter_stacking" stFoldingShutterStacking[2]		! outside only
		values "gs_foldingShutter_iStacking" 2

		gs_foldingShutter_ovhg = -(WIDO_SILL - gs_shutPanel_Thk - (a / (gs_shutter_nPanels + gs_shutter_nPanels2)))
		parameters gs_foldingShutter_ovhg = gs_foldingShutter_ovhg
		hideparameter "gs_foldingShutter_ovhg"
		lock "gs_foldingShutter_ovhg"
	else
		values "gs_foldingShutter_stacking" stFoldingShutterStacking
		values "gs_foldingShutter_iStacking" 1, 2

		if gs_foldingShutter_iStacking = STACKING_OUTSIDE then
			values "gs_foldingShutter_ovhg" range [0, a / (gs_shutter_nPanels + gs_shutter_nPanels2))
		else
			hideparameter "gs_foldingShutter_ovhg"
			lock "gs_foldingShutter_ovhg"
		endif
	endif

	if GLOB_MODPAR_NAME = "gs_foldingShutter_stacking" then
		gs_foldingShutter_iStacking = STACKING_INSIDE
		if gs_foldingShutter_stacking = stFoldingShutterStacking[2] then gs_foldingShutter_iStacking = STACKING_OUTSIDE
		parameters gs_foldingShutter_iStacking = gs_foldingShutter_iStacking
	else
		parameters gs_foldingShutter_stacking = stFoldingShutterStacking[gs_foldingShutter_iStacking]
	endif

	if bFoldingWarning then
		lock "gs_shutter_opLength", "gs_sunShade_bShowIn2D"
		hideparameter "gs_shutter_opLength", "gs_sunShade_bShowIn2D"
	endif
else
	hideparameter "gs_foldingShutter_stacking", "gs_foldingShutter_iStacking", "gs_foldingShutter_ovhg"
	lock "gs_foldingShutter_stacking", "gs_foldingShutter_iStacking", "gs_foldingShutter_ovhg"
endif


! ------------------------------------------------------------------------------
! Sliding only
! ------------------------------------------------------------------------------

if gs_sunShade_iType = SUNSHADE_SLIDING then
	values "gs_slidingShutter_cover" stSlidingShutterCover
	values "gs_slidingShutter_iCover" 0, 1, 2

	if GLOB_MODPAR_NAME = "gs_slidingShutter_cover" then
		gs_slidingShutter_iCover = COVER_NONE
		if gs_slidingShutter_cover = stSlidingShutterCover[2] then gs_slidingShutter_iCover = COVER_Z
		if gs_slidingShutter_cover = stSlidingShutterCover[3] then gs_slidingShutter_iCover = COVER_BOX
		parameters  gs_slidingShutter_iCover = gs_slidingShutter_iCover
	else
		parameters gs_slidingShutter_cover = stSlidingShutterCover[gs_slidingShutter_iCover + 1]
	endif
else
	hideparameter "gs_slidingShutter_cover",
					"gs_slidingShutter_iCover",
					"gs_shutSliding_matRail",
					"gs_slidingShutter_railWidth",
					"gs_slidingShutter_stickLength",
					"gs_slidingShutter_stickRad",
					"gs_slidingShutter_panelDist"
	lock "gs_slidingShutter_cover",
			"gs_slidingShutter_iCover",
			"gs_shutSliding_matRail",
			"gs_slidingShutter_railWidth",
			"gs_slidingShutter_stickLength",
			"gs_slidingShutter_stickRad",
			"gs_slidingShutter_panelDist"
endif


! ------------------------------------------------------------------------------
! Rolling shutter parameters
! ------------------------------------------------------------------------------

if gs_sunShade_iType = SUNSHADE_ROLLING then
	call "RollingShutter" parameters A		= A,
				B							= B,
				sunShadeHeight3D			= sunShadeHeight3D,
				gs_shutter_opHeight			= gs_shutter_opHeight,
				gs_shutter_closedHeight		= gs_shutter_closedHeight,
				gs_shutRoll_placement		= gs_shutRoll_placement,
				gs_shutRoll_iPlacement		= gs_shutRoll_iPlacement,
				gs_shutRoll_placementEnable	= gs_shutRoll_placementEnable,
				gs_shutRoll_boxType			= gs_shutRoll_boxType,
				gs_shutRoll_iBoxType		= gs_shutRoll_iBoxType,
				gs_shutRoll_railPos			= gs_shutRoll_railPos,
				gs_shutRoll_iRailPos		= gs_shutRoll_iRailPos,
				gs_shutRoll_cutWallBehind	= gs_shutRoll_cutWallBehind,
				gs_shutRoll_boxWidth		= gs_shutRoll_boxWidth,
				gs_shutRoll_boxHeight		= gs_shutRoll_boxHeight,
				gs_shutRoll_boxDefaultSize	= gs_shutRoll_boxDefaultSize,
				gs_shutRoll_iBoxDefaultSize	= gs_shutRoll_iBoxDefaultSize,
				gs_shutRoll_distFromHead	= gs_shutRoll_distFromHead,
				stShutRollPlacement			= stShutRollPlacement,
				stShutRollBoxType			= stShutRollBoxType,
				stShutRollBoxDefaultSize	= stShutRollBoxDefaultSize,
				stShutRollRailPos			= stShutRollRailPos,
				gs_reveal_top				= gs_reveal_top
else

	gosub "HideRollingParameters"

endif


! ------------------------------------------------------------------------------
! Venetian Blinds parameters
! ------------------------------------------------------------------------------

if gs_sunShade_iType = SUNSHADE_VENETIAN | gs_sunShade_iType = SUNSHADE_EXTVENETIAN then
	call "VenetianBlinds" parameters A	= A,
			B							= B,
			sunShadeHeight3D			= sunShadeHeight3D,
			gs_sunShade_iType			= gs_sunShade_iType,
			gs_shutter_opHeight			= gs_shutter_opHeight,
			gs_shutter_closedHeight		= gs_shutter_closedHeight,
			gs_shutLam_placement		= gs_shutLam_placement,
			gs_shutLam_iPlacement		= gs_shutLam_iPlacement,
			gs_shutLam_railPos			= gs_shutLam_railPos,
			gs_shutLam_iRailPos			= gs_shutLam_iRailPos,
			gs_shutLam_cutWallBehind	= gs_shutLam_cutWallBehind,
			gs_shutLam_placementEnable	= gs_shutLam_placementEnable,
			gs_shutLam_boxHeight		= gs_shutLam_boxHeight,
			gs_shutLam_distFromHead		= gs_shutLam_distFromHead,
			gs_shutLam2_boxHeight		= gs_shutLam2_boxHeight,
			gs_shutLam2_distFromHead	= gs_shutLam2_distFromHead,
			gs_shutLam2_axisFromHead	= gs_shutLam2_axisFromHead,
			stShutLamPlacement			= stShutLamPlacement,
			stShutLamRailPos			= stShutLamRailPos,
			gs_reveal_top				= gs_reveal_top,
			gs_shutLam_bRail			= gs_shutLam_bRail

else

	gosub "HideVenetianParameters"

endif


! ------------------------------------------------------------------------------
! Rolling shutter and Venetian Blinds parameters
! ------------------------------------------------------------------------------

if not(gs_sunShade_iType = SUNSHADE_ROLLING	| gs_sunShade_iType = SUNSHADE_EXTVENETIAN)	then
	lock "gs_sunShade_insFillType",
			"gs_sunShade_insFillPen",
			"gs_sunShade_insFillBackPen"

	hideparameter "gs_sunShade_insFillType",
			"gs_sunShade_insFillPen",
			"gs_sunShade_insFillBackPen"
endif


! ------------------------------------------------------------------------------
! Hiding and locking opening height parameters
! ------------------------------------------------------------------------------

if gs_sunShade_iType <> SUNSHADE_VENETIAN & gs_sunShade_iType <> SUNSHADE_EXTVENETIAN & gs_sunShade_iType <> SUNSHADE_ROLLING then
	lock "gs_shutter_closedHeight", "gs_shutter_opHeight"
	hideparameter "gs_shutter_opHeight"
endif


! ------------------------------------------------------------------------------
end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end
! ------------------------------------------------------------------------------


! ------------------------------------------------------------------------------
"HidePanelParameters":
! ------------------------------------------------------------------------------

	lock 	"gs_shutPanel_type",
			"gs_shutPanel_iType",
			"gs_cust_shutterPanel",
			"gs_shutPanel_frameWidth",
			"gs_shutPanel_BDiffBottomFrame",
			"gs_shutPanel_frameWidthBottom",
			"gs_shutPanel_bAutomaticWidth",
			"gs_shutPanel_panelWidth",
			"gs_shutPanel_Thk",
			"gs_shutPanel_fieldThk",
			"gs_shutPanel_louverThk",
			"gs_shutPanel_louverWidth",
			"gs_shutPanel_louverAngle",
			"gs_shutPanel_midFrameHorW",
			"gs_shutPanel_midFrameVertW",
			"gs_shutPanel_nHoleHor",
			"gs_shutPanel_nHoleVert",
			"gs_shutPanel_holeRadius",
			"gs_shutPanel_ZBoardW",
			"gs_shutPanel_ZWidth",
			"gs_shutPanel_ZThk",
			"gs_shutPanel_boardThkVert",
			"gs_shutPanel_boardThkHor",
			"gs_shutPanel_vertBoardW",
			"gs_shutPanel_horBoardW",
			"gs_shutPanel_materialMain",
			"gs_shutPanel_materialAcc"

	hideparameter "gs_shutPanel_type",
			"gs_cust_shutterPanel",
			"gs_shutPanel_frameWidth",
			"gs_shutPanel_BDiffBottomFrame",
			"gs_shutPanel_frameWidthBottom",
			"gs_shutPanel_bAutomaticWidth",
			"gs_shutPanel_panelWidth",
			"gs_shutPanel_Thk",
			"gs_shutPanel_fieldThk",
			"gs_shutPanel_louverThk",
			"gs_shutPanel_louverWidth",
			"gs_shutPanel_louverAngle",
			"gs_shutPanel_midFrameHorW",
			"gs_shutPanel_midFrameVertW",
			"gs_shutPanel_nHoleHor",
			"gs_shutPanel_nHoleVert",
			"gs_shutPanel_holeRadius",
			"gs_shutPanel_ZBoardW",
			"gs_shutPanel_ZWidth",
			"gs_shutPanel_ZThk",
			"gs_shutPanel_boardThkVert",
			"gs_shutPanel_boardThkHor",
			"gs_shutPanel_vertBoardW",
			"gs_shutPanel_horBoardW",
			"gs_shutPanel_materialMain",
			"gs_shutPanel_materialAcc"
return


! ------------------------------------------------------------------------------
"HideRollingParameters":
! ------------------------------------------------------------------------------

	if bittest (gs_sunShade_typeEnable, 6) then	! SUNSHADE_ROLLING
		lock	"gs_shutRoll_placement",
				"gs_shutRoll_iPlacement",
				"gs_shutRoll_boxType",
				"gs_shutRoll_iBoxType",
				"gs_shutRoll_railPos",
				"gs_shutRoll_iRailPos",
				"gs_shutRoll_showCasingBehind",
				"gs_shutRoll_cutWallBehind",
				"gs_shutRoll_bIncludeBoxHeight",
				"gs_shutRoll_boxHeight",
				"gs_shutRoll_boxWidth",
				"gs_shutRoll_railDepth",
				"gs_shutRoll_distFromHead",
				"gs_shutRoll_distFromWall",
				"gs_shutRoll_boxAngle",
				"gs_shutRoll_boxDefaultSize",
				"gs_shutRoll_iBoxDefaultSize",
				"gs_shutRoll_boxOffsetLeft",
				"gs_shutRoll_boxOffsetRight",
				"gs_shutRoll_segmentWidth",
				"gs_shutRoll_matBox",
				"gs_shutRoll_matSegm",
				"gs_shutRoll_matRail"

		hideparameter	"gs_shutRoll_placement",
				"gs_shutRoll_iPlacement",
				"gs_shutRoll_boxType",
				"gs_shutRoll_iBoxType",
				"gs_shutRoll_railPos",
				"gs_shutRoll_iRailPos",
				"gs_shutRoll_showCasingBehind",
				"gs_shutRoll_cutWallBehind",
				"gs_shutRoll_bIncludeBoxHeight",
				"gs_shutRoll_boxHeight",
				"gs_shutRoll_boxWidth",
				"gs_shutRoll_railDepth",
				"gs_shutRoll_distFromHead",
				"gs_shutRoll_distFromWall",
				"gs_shutRoll_boxAngle",
				"gs_shutRoll_boxDefaultSize",
				"gs_shutRoll_boxOffsetLeft",
				"gs_shutRoll_boxOffsetRight",
				"gs_shutRoll_segmentWidth",
				"gs_shutRoll_matBox",
				"gs_shutRoll_matSegm",
				"gs_shutRoll_matRail"
	endif
return

! ------------------------------------------------------------------------------
"HideVenetianParameters":
! ------------------------------------------------------------------------------

	lock	"gs_shutLam_placement",
			"gs_shutLam_iPlacement",
			"gs_shutLam_railPos",
			"gs_shutLam_iRailPos",
			"gs_shutLam_showCasingBehind",
			"gs_shutLam_boxHeight",
			"gs_shutLam_boxWidth",
			"gs_shutLam_bOpenBox",
			"gs_shutLam_distFromWall",
			"gs_shutLam_coverWidth",
			"gs_shutLam_distFromHead",
			"gs_shutLam_cutWallBehind",
			"gs_shutLam_segmentWidth",
			"gs_shutLam_rotation",
			"gs_shutLam_bRail",
			"gs_shutLam_matBox",
			"gs_shutLam_matLam"

	hideparameter	"gs_shutLam_placement",
			"gs_shutLam_railPos",
			"gs_shutLam_showCasingBehind",
			"gs_shutLam_boxHeight",
			"gs_shutLam_boxWidth",
			"gs_shutLam_bOpenBox",
			"gs_shutLam_distFromWall",
			"gs_shutLam_coverWidth",
			"gs_shutLam_distFromHead",
			"gs_shutLam_cutWallBehind",
			"gs_shutLam_segmentWidth",
			"gs_shutLam_rotation",
			"gs_shutLam_bRail",
			"gs_shutLam_matBox",
			"gs_shutLam_matLam"

	lock	"gs_shutLam2_boxHeight",
			"gs_shutLam2_boxWidth",
			"gs_shutLam2_distFromWindow",
			"gs_shutLam2_distFromHead",
			"gs_shutLam2_axisFromHead",
			"gs_shutLam2_segmentWidth",
			"gs_shutLam2_rotation"

	hideparameter	"gs_shutLam2_boxHeight",
			"gs_shutLam2_boxWidth",
			"gs_shutLam2_distFromWindow",
			"gs_shutLam2_distFromHead",
			"gs_shutLam2_axisFromHead",
			"gs_shutLam2_segmentWidth",
			"gs_shutLam2_rotation"
return

