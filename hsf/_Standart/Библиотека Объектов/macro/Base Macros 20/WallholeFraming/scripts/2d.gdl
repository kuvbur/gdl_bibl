
! Contact person: <NJ>

!	! ==============================================================================
!	! Visualize Reveal Points
!	! ==============================================================================
!
!	del top
!	if WIDO_REVEAL_SIDE then
!		add2 0,-WIDO_FRAME_THICKNESS
!	else
!		mul2 1,-1
!	endif
!
!	pen 1
!	line2 0,0, 0,0.2
!	line2 0,0.2,  0.03,0.2-0.05
!	line2 0,0.2, -0.03,0.2-0.05
!
!	line2 0,0, 0.2,0
!	line2 0.2,0, 0.2-0.05, 0.03
!	line2 0.2,0, 0.2-0.05,-0.03
!	circle2 0,0, 0.02
!	hotspot2 0,0
!
!	pen 3 ! orange
!	for i=iRevealPointsIdx[1] to iRevealPointsIdx[6]
!		add2 leftWallFrameRevealPnts[i][1], leftWallFrameRevealPnts[i][2]		! Core points
!		RR = i*0.005
!		circle2 0,0, RR
!		hotspot2 0,0
!		line2 -RR,-RR, RR, RR
!		line2 -RR, RR, RR,-RR
!		del 1
!	next i
!
!	pen 4 ! green
!	for i=iRevealPointsIdx[7] to iRevealPointsIdx[10]
!		add2 leftWallFrameRevealPnts[i][1], leftWallFrameRevealPnts[i][2]		! Plaster points
!		RR = i*0.005
!		circle2 0,0, RR
!		hotspot2 0,0
!		line2 -RR,-RR, RR, RR
!		line2 -RR, RR, RR,-RR
!		del 1
!	next i
!
!	pen 20 ! red
!	for i=iRevealPointsIdx[11] to iRevealPointsIdx[16]
!		add2 rightWallFrameRevealPnts[i][1], rightWallFrameRevealPnts[i][2]	! Core points
!		RR = i*0.005
!		circle2 0,0, RR
!		hotspot2 0,0
!		line2 -RR,-RR, RR, RR
!		line2 -RR, RR, RR,-RR
!		del 1
!	next i
!
!	pen 6 ! blue
!	for i=iRevealPointsIdx[17] to iRevealPointsIdx[20]
!		add2 rightWallFrameRevealPnts[i][1], rightWallFrameRevealPnts[i][2]	! Plaster points
!		RR = i*0.005
!		circle2 0,0, RR
!		hotspot2 0,0
!		line2 -RR,-RR, RR, RR
!		line2 -RR, RR, RR,-RR
!		del 1
!	next i
!
!	del top


! ==============================================================================
!
! ==============================================================================

bFeedBack = (GLOB_CONTEXT > 20 & GLOB_CONTEXT < 40)

if gs_bFills_Wallhole < 0 then		! Compatibility
	gs_bFills_Wallhole = gs_bFills
endif

gs_wallhole_fill	= gs_bFills_Wallhole * gs_wallhole_fill
gs_trim_fill_in		= gs_bFills * gs_trim_fill_in
gs_trim_fill_out	= gs_bFills * gs_trim_fill_out
gs_shutter_fill		= gs_bFills * gs_sunShade_cutFillType

drawindex 20	! Draw Window Functions at the bottom


! =============================================================================
! Draw Sill
! =============================================================================

if not(bFeedBack) & bEnableSill & bDrawSill & not(gs_transom_display) then

	if gs_sill_wallhole_pen_fg <= 0 then
		gs_sill_bFills				= gs_bFills
		gs_sill_wallhole_pen_fg		= gs_wallhole_pen_fg
		gs_sill_wallhole_pen_bg		= gs_wallhole_pen_bg
	endif
	gs_sill_wallhole_fill			= gs_wallhole_fill

	call "Sill" parameters gs_macro_version = 12,
		AC_WallType				= AC_WallType,
		AC_WindowInWallContour	= AC_WindowInWallContour,
		AC_WallContourPolygon	= AC_WallContourPolygon,
		AC_Wall_Direction_Type	= AC_Wall_Direction_Type,
	! --- Wallhole Geometry
		iWindowShape			= iWindowShape,
		refWidth				= refWidth,
		leftWidth				= leftWidth,
		rightWidth				= rightWidth,
		radSill					= radSill,
		WOD						= WOD,
	! --- Sidelight
		gs_sidelight_left				= gs_sidelight_left,
		gs_sidelight_WHole_width_left	= gs_sidelight_WHole_width_left,
		gs_sidelight_parapet_hgt_left	= gs_sidelight_parapet_hgt_left,
		gs_sidelight_right				= gs_sidelight_right,
		gs_sidelight_WHole_width_right	= gs_sidelight_WHole_width_right,
		gs_sidelight_parapet_hgt_right	= gs_sidelight_parapet_hgt_right,
	! --- Macro Control Parameters
		isWindow					= isWindow,
		gs_IsCurved					= gs_IsCurved,
		bParalellInCurvedWalls		= bParalellInCurvedWalls,
		bDoorWithSidelightSupport	= bDoorWithSidelightSupport,
	! --- Reveal Parameters
		iRevealType				= iRevealType,
		gs_reveal_left_sL			= gs_reveal_left_sL,
		gs_reveal_right_sR			= gs_reveal_right_sR,
		gs_reveal_left_angle	= gs_reveal_left_angle,
		gs_reveal_right_angle	= gs_reveal_right_angle,
		leftRevealPnts			= leftWallFrameRevealPnts,
		rightRevealPnts			= rightWallFrameRevealPnts,
		iRevealPointsIdx		= iRevealPointsIdx,
!!!		SkinOffsetSill			= SkinOffsetSill,
	! --- Turn Plaster
		thkPlasterAtSillLeft	= thkPlasterAtSillLeft,
		thkPlasterAtSillRight	= thkPlasterAtSillRight,
	! --- Corner Functions
		bLeftCornerFunction		= bLeftCornerFunction,
		leftCornerAngle			= leftCornerAngle,
		leftConnWallThk			= leftConnWallThk,
		bRightCornerFunction	= bRightCornerFunction,
		rightCornerAngle		= rightCornerAngle,
		rightConnWallThk		= rightConnWallThk,
	! --- Oversize
		gs_left_oversize		= gs_left_oversize,
		gs_right_oversize		= gs_right_oversize,
	! --- Sill Parameters
		bDrawSill					= bDrawSill,
		gs_sill_outside				= gs_sill_outside,
		gs_sill_outside_sl_left		= gs_sill_outside_sl_left,
		gs_sill_outside_sl_right	= gs_sill_outside_sl_right,
		iSillType				= iSillType,
		gs_sill_width			= gs_sill_width,
		gs_sill_thk				= gs_sill_thk,
		gs_sill_nosing			= gs_sill_nosing,
		gs_sill_angle			= gs_sill_angle,
		gs_sill_ovhg_left		= gs_sill_ovhg_left,
		gs_sill_ovhg_right		= gs_sill_ovhg_right,
		gs_sill_curved			= gs_sill_curved,
		bShowSillSplice			= 0,
	! --- Casing Parameters
		bDrawOutsideTrim		= bDrawOutsideTrim,
		gs_trim_thk_out			= gs_trim_thk_out,
		gs_trim_atframe_out		= gs_trim_atframe_out,
		gs_trim_width_out		= gs_trim_width_out,
	! --- 2D Representation
		lod2D_SillBoard			= lod2D_SillBoard,
		bShowAddHotspots		= bShowAddHotspots,
		gs_pen_2D				= gs_pen_2D,
		gs_bFills				= gs_sill_bFills,
		gs_sill_wallhole_fill		= gs_sill_wallhole_fill,
		gs_sill_wallhole_pen_fg		= gs_sill_wallhole_pen_fg,
		gs_sill_wallhole_pen_bg		= gs_sill_wallhole_pen_bg,
		gs_sill_wallhole_fill_sl	= gs_wallhole_fill_sl,
		gs_sill_wallhole_pen_sl_fg	= gs_wallhole_pen_sl_fg,
		gs_sill_wallhole_pen_sl_bg	= gs_wallhole_pen_sl_bg,
		gs_sillTreshold_lineType= gs_sillTreshold_lineType,
		gs_sill_pen_2D			= gs_sill_pen_2D,
	! --- Stacked Window
		gs_stack_left			= gs_stack_left,
		gs_stack_right			= gs_stack_right,
		gs_stack_bottom			= gs_stack_bottom,
		bSillNnosUsa			= bSillNnosUsa,
		frameWidthLeft			= gs_frame_width + gs_tolerance_left,
		frameWidthRight			= gs_frame_width + gs_tolerance_right,
		CasingOutsLeftOutPoint	= CasingOutsLeftOutPoint,
		CasingOutsRightOutPoint	= CasingOutsRightOutPoint,
		gs_trim_show_cover_out	= gs_trim_show_cover_out,
		stSillEdge				= stSillEdge
endif


! =============================================================================
! Draw Board
! =============================================================================

if not(bFeedBack) & bEnableBoard & bDrawBoard & not(gs_transom_display) then

	if gs_board_wallhole_pen_fg <= 0 then
		gs_board_bFills				= gs_bFills
		gs_board_wallhole_pen_fg	= gs_wallhole_pen_fg
		gs_board_wallhole_pen_bg	= gs_wallhole_pen_bg
	endif
	gs_board_wallhole_fill			= gs_wallhole_fill

	call "Board" parameters gs_macro_version = 12,
		AC_WallType				= AC_WallType,
		AC_WindowInWallContour	= AC_WindowInWallContour,
		AC_WallContourPolygon	= AC_WallContourPolygon,
		AC_Wall_Direction_Type	= AC_Wall_Direction_Type,
	! --- Wallhole Geometry
		iWindowShape			= iWindowShape,
		refWidth				= refWidth,
		leftWidth				= leftWidth,
		rightWidth				= rightWidth,
		radBoard				= radBoard,
		WOD						= WOD,
	! --- Sidelight
		gs_sidelight_left				= gs_sidelight_left,
		gs_sidelight_WHole_width_left	= gs_sidelight_WHole_width_left,
		gs_sidelight_parapet_hgt_left	= gs_sidelight_parapet_hgt_left,
		gs_sidelight_right				= gs_sidelight_right,
		gs_sidelight_WHole_width_right	= gs_sidelight_WHole_width_right,
		gs_sidelight_parapet_hgt_right	= gs_sidelight_parapet_hgt_right,
	! --- Macro Control Parameters
		gs_IsCurved					= gs_IsCurved,
		bParalellInCurvedWalls		= bParalellInCurvedWalls,
		bDoorWithSidelightSupport	= bDoorWithSidelightSupport,
	! --- Reveal Parameters
		iRevealType						= iRevealType,
		gs_reveal_left_angle			= gs_reveal_left_angle,
		gs_reveal_right_angle			= gs_reveal_right_angle,
		gs_reveal_double_innerLeft_sL	= gs_reveal_double_innerLeft_sL,
		gs_reveal_double_innerRight_sR	= gs_reveal_double_innerRight_sR,
		leftRevealPnts					= leftWallFrameRevealPnts,
		rightRevealPnts					= rightWallFrameRevealPnts,
		iRevealPointsIdx				= iRevealPointsIdx,
!!!		SkinOffsetBoard					= SkinOffsetBoard,
	! --- Turn Plaster
		thkPlasterAtBoardLeft	= thkPlasterAtBoardLeft,
		thkPlasterAtBoardRight	= thkPlasterAtBoardRight,
	! --- Corner Functions
		bLeftCornerFunction		= bLeftCornerFunction,
		leftCornerAngle			= leftCornerAngle,
		leftConnWallThk			= leftConnWallThk,
		bRightCornerFunction	= bRightCornerFunction,
		rightCornerAngle		= rightCornerAngle,
		rightConnWallThk		= rightConnWallThk,
	! --- Oversize
		gs_left_oversize		= gs_left_oversize,
		gs_right_oversize		= gs_right_oversize,
	! --- Sill Parameters
		iSillType				= iSillType,
		gs_sill_thk				= gs_sill_thk,
	! --- Board Parameters
		bDrawBoard					= bDrawBoard,
		gs_board_inside				= gs_board_inside,
		gs_board_inside_sl_left		= gs_board_inside_sl_left,
		gs_board_inside_sl_right	= gs_board_inside_sl_right,
		gs_board_nosing			= gs_board_nosing,
		gs_board_ovhg_left		= gs_board_ovhg_left,
		gs_board_ovhg_right		= gs_board_ovhg_right,
		gs_board_curved			= gs_board_curved,
		bBoardInPolyWall		= bBoardInPolyWall,
		bShowBoardSplice		= 0,
	! --- Casing Parameters
		bDrawInsideTrim			= bDrawInsideTrim,
		gs_trim_thk_in			= gs_trim_thk_in,
		gs_trim_atframe_in		= gs_trim_atframe_in,
		gs_trim_width_in		= gs_trim_width_in,
	! --- 2D Representation
		lod2D_SillBoard			= lod2D_SillBoard,
		bShowAddHotspots		= bShowAddHotspots,
		gs_pen_2D				= gs_pen_2D,
		gs_bFills				= gs_board_bFills,
		gs_board_wallhole_fill		= gs_board_wallhole_fill,
		gs_board_wallhole_pen_fg	= gs_board_wallhole_pen_fg,
		gs_board_wallhole_pen_bg	= gs_board_wallhole_pen_bg,
		gs_board_wallhole_fill_sl	= gs_wallhole_fill_sl,
		gs_board_wallhole_pen_sl_fg	= gs_wallhole_pen_sl_fg,
		gs_board_wallhole_pen_sl_bg	= gs_wallhole_pen_sl_bg,
		gs_board_pen_2D			= gs_board_pen_2D,
	! --- Stacked Window
		gs_stack_left			= gs_stack_left,
		gs_stack_right			= gs_stack_right,
		gs_stack_bottom			= gs_stack_bottom,
	! --- Wall Inset
		gs_parapet_wall_inset	= gs_parapet_wall_inset,
		gs_parapet_inset_thk	= gs_parapet_inset_thk,
		bBoardNnosUsa			= bBoardNnosUsa,
		frameWidthLeft			= gs_frame_width + gs_tolerance_left,
		frameWidthRight			= gs_frame_width + gs_tolerance_right,
		CasingInsLeftOutPoint	= CasingInsLeftOutPoint,
		CasingInsRightOutPoint	= CasingInsRightOutPoint,
		gs_trim_show_cover_in	= gs_trim_show_cover_in
endif


! =============================================================================
! Draw Threshold
! =============================================================================

if not(bFeedBack) & bEnableThreshold & bDrawThreshold then

	leftFrameOffset		= gs_sidelight_left  * gs_sidelight_width_left  + not(gs_sidelight_left)  * gs_frame_width_left  + gs_tolerance_left
	rightFrameOffset	= gs_sidelight_right * gs_sidelight_width_right + not(gs_sidelight_right) * gs_frame_width_right + gs_tolerance_right

	call "Threshold" parameters gs_macro_version = 12,
		AC_WallType				= AC_WallType,
		AC_WindowInWallContour	= AC_WindowInWallContour,
		AC_WallContourPolygon	= AC_WallContourPolygon,
		AC_Wall_Direction_Type	= AC_Wall_Direction_Type,
		refWidth				= refWidth,
		leftWidth				= leftWidth,
		rightWidth				= rightWidth,
		leftFrameOffset			= leftFrameOffset,
		rightFrameOffset		= rightFrameOffset,
		radSill					= radSill,
		radBoard				= radBoard,
		WOD						= WOD,
		bEnableThreshold		= bEnableThreshold,
	! --- Macro Control Parameters
		gs_IsCurved				= gs_IsCurved,
		bParalellInCurvedWalls  = bParalellInCurvedWalls,
		iWindowShape			= iWindowShape,
		gs_tolerance_left		= gs_tolerance_left,
		gs_tolerance_right		= gs_tolerance_right,
	! --- Reveal Parameters
		gs_reveal_left_sL				= gs_reveal_left_sL,
		gs_reveal_right_sR				= gs_reveal_right_sR,
		gs_reveal_double_innerLeft_sL	= gs_reveal_double_innerLeft_sL,
		gs_reveal_double_innerRight_sR	= gs_reveal_double_innerRight_sR,
		iRevealType						= iRevealType,
		gs_reveal_left_angle	= gs_reveal_left_angle,
		gs_reveal_right_angle	= gs_reveal_right_angle,
		leftRevealPnts			= leftWallFrameRevealPnts,
		rightRevealPnts			= rightWallFrameRevealPnts,
		iRevealPointsIdx		= iRevealPointsIdx,
!!!		thkSkinTurnInLeft		= thkSkinTurnInLeft,	! Uninitialized variables
!!!		thkSkinTurnInRight		= thkSkinTurnInRight,
!!!		thkSkinTurnOutLeft		= thkSkinTurnOutLeft,
!!!		thkSkinTurnOutRight		= thkSkinTurnOutRight,
!!!		penSkinContourIn		= penSkinContourIn,
!!!		penSkinContourOut		= penSkinContourOut,
!!!		ltSkinContourIn			= ltSkinContourIn,
!!!		ltSkinContourOut		= ltSkinContourOut,
	! --- Door Frame
		iFrameStyle			= iFrameStyle,
		gs_frame_wthk		= gs_frame_wthk,
		gs_fthk				= gs_fthk,
		gs_frame_thkin		= gs_frame_thkin,
		gs_frame_width_left	= gs_frame_width_left,
		gs_frame_width_right= gs_frame_width_right,
		gs_ds_thk			= gs_ds_thk,
		gs_ds_w				= gs_ds_w,
		gs_rebate_width		= gs_rebate_width,
		gs_frame_oversize_thk	= gs_frame_oversize_thk,
	! --- Door Leaf
		gs_leaf_thk			= gs_leaf_thk,
	! --- Sidelight
		gs_sidelight_left				= gs_sidelight_left,
		gs_sidelight_width_left			= gs_sidelight_width_left,
		gs_sidelight_WHole_width_left	= gs_sidelight_WHole_width_left,
		gs_sidelight_parapet_hgt_left	= gs_sidelight_parapet_hgt_left,
		gs_sidelight_right				= gs_sidelight_right,
		gs_sidelight_width_right		= gs_sidelight_width_right,
		gs_sidelight_WHole_width_right	= gs_sidelight_WHole_width_right,
		gs_sidelight_parapet_hgt_right	= gs_sidelight_parapet_hgt_right,
	! --- Trim Parameters
		gs_trim_outside		= gs_trim_outside,
		gs_trim_inside		= gs_trim_inside,
		gs_trim_width_in	= gs_trim_width_in,
		gs_trim_width_out	= gs_trim_width_out,
	! --- Threshold
		bThreshold				= bThreshold,
		iThresholdType			= iThresholdType,
		gs_treshold_width		= gs_treshold_width,
		gs_treshold_nosing		= gs_treshold_nosing,
		gs_treshold_nosing_2	= gs_treshold_nosing_2,
		gs_treshold_ovhg		= gs_treshold_ovhg,
		gs_treshold_ovhg_2		= gs_treshold_ovhg_2,
	! --- Turn Plaster
		thkPlasterAtBoardSlLeft		= thkPlasterAtBoardSlLeft,
		thkPlasterAtBoardSlRight	= thkPlasterAtBoardSlRight,
		thkPlasterAtSillSlLeft		= thkPlasterAtSillSlLeft,
		thkPlasterAtSillSlRight		= thkPlasterAtSillSlRight,
	! --- Oversize
		gs_left_oversize	= gs_left_oversize,
		gs_right_oversize	= gs_right_oversize,
	! --- Stacked Window
		gs_stack_left		= gs_stack_left,
		gs_stack_right		= gs_stack_right,
	! --- 2D Representation
		lod2D_Treshold		= lod2D_Treshold,
		bShowAddHotspots	= bShowAddHotspots,
		gs_pen_2D			= gs_pen_2D,
		gs_wallhole_fill	= gs_wallhole_fill,
		gs_wallhole_pen_fg	= gs_wallhole_pen_fg,
		gs_wallhole_pen_bg	= gs_wallhole_pen_bg,
		gs_sillTreshold_lineType= gs_sillTreshold_lineType,
	! --- NOR Threshold
		gs_threshold_nor	= gs_threshold_nor
endif


! =============================================================================
! Draw Casing
! =============================================================================

drawindex 30	! Casing in the Middle

if not(bFeedBack) & bEnableCasing & (gs_trim_inside | gs_trim_outside) then

	call "Casing" parameters gs_macro_version = 12,
		AC_WallType				= AC_WallType,
		AC_WindowInWallContour	= AC_WindowInWallContour,
		AC_WallContourPolygon	= AC_WallContourPolygon,
		AC_Wall_Direction_Type	= AC_Wall_Direction_Type,
	! --- Wallhole Geometry
		refWidth				= refWidth,
		leftWidth				= leftWidth,
		rightWidth				= rightWidth,
		radSill					= radSill,
		radBoard				= radBoard,
		WOD						= WOD,
	! --- Macro Control Parameters
		isWindow				= isWindow,
		Suppress_isWindow		= Suppress_isWindow,
		gs_IsCurved				= gs_IsCurved,
		gs_CasingOutTypeEnable	= gs_CasingOutTypeEnable,
		gs_CasingInTypeEnable	= gs_CasingInTypeEnable,
		bParalellInCurvedWalls  = bParalellInCurvedWalls,
		bCasingTolerance		= bCasingTolerance,
		bDrawOutsideCasingFill	= not(bEnableSill & bDrawSill),
		bDrawInsideCasingFill	= not(bEnableBoard & bDrawBoard),
		bShowEdgeHotspots		= bShowEdgeHotspots,
		iWindowShape			= iWindowShape,
		bTelescopic				= bTelescopic,
		gs_frame_style_m		= iFrameStyle,
		iDoorType				= iDoorType,
	! --- Reveal Parameters
		iRevealType						= iRevealType,
		gs_reveal_left					= gs_reveal_left,
		gs_reveal_right					= gs_reveal_right,
		revealInnerLeft 				= revealInnerLeft,
		revealInnerRight				= revealInnerRight,
		gs_reveal_left_angle			= gs_reveal_left_angle,
		gs_reveal_right_angle			= gs_reveal_right_angle,
		gs_reveal_right_sR				= gs_reveal_right_sR,
		gs_reveal_left_sL				= gs_reveal_left_sL,
		gs_reveal_double_innerRight_sR	= gs_reveal_double_innerRight_sR,
		gs_reveal_double_innerLeft_sL	= gs_reveal_double_innerLeft_sL,
		leftRevealPnts					= leftWallFrameRevealPnts,
		rightRevealPnts					= rightWallFrameRevealPnts,
		iRevealPointsIdx				= iRevealPointsIdx,
	! --- Corner Functions
		bLeftCornerFunction		= bLeftCornerFunction,
		leftCornerAngle			= leftCornerAngle,
		leftConnWallThk			= leftConnWallThk,
		bRightCornerFunction	= bRightCornerFunction,
		rightCornerAngle		= rightCornerAngle,
		rightConnWallThk		= rightConnWallThk,
	! --- Sidelight
		gs_sidelight_WHole_width_left	= gs_sidelight_WHole_width_left,
		gs_sidelight_parapet_hgt_left	= gs_sidelight_parapet_hgt_left,
		gs_sidelight_WHole_width_right	= gs_sidelight_WHole_width_right,
		gs_sidelight_parapet_hgt_right	= gs_sidelight_parapet_hgt_right,
	! --- Tolerance
		gs_tolerance_left	= gs_tolerance_left,
		gs_tolerance_right	= gs_tolerance_right,
	! --- Oversize
		gs_left_oversize		= gs_left_oversize,
		gs_right_oversize		= gs_right_oversize,
	! --- Trim Parameters
		bDrawInsideTrim			= bDrawInsideTrim,
		bDrawOutsideTrim		= bDrawOutsideTrim,
		gs_trimtype_in_int		= gs_trimtype_in_int,
		gs_trimtype_out_int		= gs_trimtype_out_int,
		gs_trim_inside_uniform	= gs_trim_inside_uniform,
		gs_trim_outside_uniform	= gs_trim_outside_uniform,
		gs_trim_width_in		= gs_trim_width_in,
		gs_trim_width_out		= gs_trim_width_out,
		gs_trim_offs_in			= gs_trim_offs_in,
		gs_trim_offs_out		= gs_trim_offs_out,
		gs_trim_thk_in			= gs_trim_thk_in,
		gs_trim_thk_out			= gs_trim_thk_out,
		gs_tw_left_in			= gs_tw_left_in,
		gs_tw_right_in			= gs_tw_right_in,
		gs_tw_left_out			= gs_tw_left_out,
		gs_tw_right_out			= gs_tw_right_out,
		gs_trim_atframe_out		= gs_trim_atframe_out,
		gs_trim_atframe_in		= gs_trim_atframe_in,
		gs_trim_stack_left		= gs_trim_stack_left,
		gs_trim_stack_right		= gs_trim_stack_right,
		gs_trim_stack_bottom	= gs_trim_stack_bottom,
		gs_trim_stack_top		= gs_trim_stack_top,
		gs_trim_show_cover_in	= gs_trim_show_cover_in,
		gs_trim_show_cover_out	= gs_trim_show_cover_out,
		gs_trim_jambext_nosing_in	= gs_trim_jambext_nosing_in,
		gs_trim_jambext_nosing_out	= gs_trim_jambext_nosing_out,
	! --- 2D Representation
		lod2D_Casing			= lod2D_Casing,
		bShowAddHotspots		= bShowAddHotspots,
		gs_pen_2D				= gs_pen_2D,
		gs_trim_pen_cont		= gs_trim_pen_cont,
		gs_bFills				= gs_bFills,
		gs_wallhole_fill		= gs_wallhole_fill,
		gs_wallhole_pen_fg		= gs_wallhole_pen_fg,
		gs_wallhole_pen_bg		= gs_wallhole_pen_bg,
		gs_wallhole_fill_sl		= gs_wallhole_fill_sl,
		gs_wallhole_pen_sl_fg	= gs_wallhole_pen_sl_fg,
		gs_wallhole_pen_sl_bg	= gs_wallhole_pen_sl_bg,
		gs_trim_bFills_in			= gs_trim_bFills_in,
		gs_trim_wallhole_pen_fg_in	= gs_trim_wallhole_pen_fg_in,
		gs_trim_wallhole_pen_bg_in	= gs_trim_wallhole_pen_bg_in,
		gs_trim_bFills_out			= gs_trim_bFills_out,
		gs_trim_wallhole_pen_fg_out	= gs_trim_wallhole_pen_fg_out,
		gs_trim_wallhole_pen_bg_out	= gs_trim_wallhole_pen_bg_out,
		gs_trim_fill_in			= gs_trim_fill_in,
		gs_trim_pen_fg_in		= gs_trim_pen_fg_in,
		gs_trim_pen_bg_in		= gs_trim_pen_bg_in,
		gs_trim_fill_out		= gs_trim_fill_out,
		gs_trim_pen_fg_out		= gs_trim_pen_fg_out,
		gs_trim_pen_bg_out		= gs_trim_pen_bg_out,
	! --- Stacked Window
		gs_stack_left			= gs_stack_left,
		gs_stack_right			= gs_stack_right,
		gs_stack_bottom			= gs_stack_bottom,
		gs_board_inside			= gs_board_inside,
		gs_board_inside_sl_left	= gs_board_inside_sl_left,
		gs_board_inside_sl_right= gs_board_inside_sl_right,
		gs_sill_outside			= gs_sill_outside,
		gs_sill_outside_sl_left	= gs_sill_outside_sl_left,
		gs_sill_outside_sl_right= gs_sill_outside_sl_right,
		gs_frame_width			= gs_frame_width,
		gs_frame_wthk			= gs_frame_wthk,
	! --- USA Parameters
		trim_offs_out_modify	= trim_offs_out_modify,
		gs_sectgar				= gs_sectgar,
		gs_casing_nor			= gs_casing_nor,
		bLineCasingOffset		= bLineCasingOffset,		! Show Line at Casing Offset (USA)
	! --- SunShade Parameters
		casingSetBackOnSides_out= casingSetBack2D_out,
		casingSetBackOnSides_in = casingSetBack2D_in


endif


! =============================================================================
! Draw Shutter
! =============================================================================

if bEnableShutter & bDrawShutter then

	drawindex 30	! Sunshade in the Middle

	outfolding_innerPanelLeft = gs_outFoldingShutter_panelIn
	outfolding_innerPanelRight = gs_outFoldingShutter_panelIn

	if iRevealType = REVEAL_DOUBLE_SPLAYED | iRevealType = REVEAL_OUTSIDE_SPLAYED then
		leftWallAngle	= gs_reveal_outerLeft_angle  * not(gs_stack_left)
		rightWallAngle	= gs_reveal_outerRight_angle * not(gs_stack_right)
	else
		leftWallAngle	= 0
		rightWallAngle	= 0
	endif

	bUseInnerRevealPoints = 0
	if iRevealType = REVEAL_DOUBLE_SPLAYED | iRevealType = REVEAL_OUTSIDE_SPLAYED then
		if gs_sunShade_iType = SUNSHADE_FOLDING | gs_sunShade_iType = SUNSHADE_OUTFOLDING then bUseInnerRevealPoints = 1

		if gs_sunShade_iType = SUNSHADE_ROLLING & gs_shutRoll_iPlacement <> 1 then bUseInnerRevealPoints = 1
		if gs_sunShade_iType = SUNSHADE_EXTVENETIAN & gs_shutLam_iPlacement <> 1 then bUseInnerRevealPoints = 1
	endif

	if bUseInnerRevealPoints then
		leftCornerX		= leftWallFrameRevealPnts[idxSillStartPlasterLeft+1][1]
		rightCornerX	=  rightWallFrameRevealPnts[idxSillStartPlasterRight+1][1]
		leftX1		= leftWallFrameRevealPnts[idxSillStartPlasterLeft][1]
		rightX1		= rightWallFrameRevealPnts[idxSillStartPlasterRight][1]

		if WIDO_REVEAL_SIDE then
			leftCornerY		= leftWallFrameRevealPnts[idxSillStartPlasterLeft][2] - WIDO_FRAME_THICKNESS
			rightCornerY	= rightWallFrameRevealPnts[idxSillStartPlasterRight][2] - WIDO_FRAME_THICKNESS

			leftY2	= leftWallFrameRevealPnts[idxSillStartPlasterLeft+1][2] - WIDO_FRAME_THICKNESS
			rightY2	= rightWallFrameRevealPnts[idxSillStartPlasterRight+1][2] - WIDO_FRAME_THICKNESS
		else
			leftCornerY		= -leftWallFrameRevealPnts[idxSillStartPlasterLeft][2]
			rightCornerY	= -rightWallFrameRevealPnts[idxSillStartPlasterRight][2]

			leftY2	= -leftWallFrameRevealPnts[idxSillStartPlasterLeft+1][2]
			rightY2	= -rightWallFrameRevealPnts[idxSillStartPlasterRight+1][2]
		endif

		if abs(leftWallAngle) < EPS then
			outfolding_innerPanelLeft = WIDO_SILL - gs_reveal_outer_jamb_depth
		else
			outfolding_innerPanelLeft = sqr((leftCornerX - leftX1)^2 + (leftY2 - leftCornerY)^2)
		endif
		if abs(rightWallAngle) < EPS then
			outfolding_innerPanelRight = WIDO_SILL - gs_reveal_outer_jamb_depth
		else
			outfolding_innerPanelRight = sqr((rightCornerX - rightX1)^2 + (rightY2 -rightCornerY)^2)
		endif
	else
		leftCornerX		= leftWallFrameRevealPnts[idxSillStartPlasterLeft][1]
		rightCornerX	= rightWallFrameRevealPnts[idxSillStartPlasterRight][1]

		if WIDO_REVEAL_SIDE then
			leftCornerY		= leftWallFrameRevealPnts[idxSillStartPlasterLeft][2] - WIDO_FRAME_THICKNESS
			rightCornerY	= rightWallFrameRevealPnts[idxSillStartPlasterRight][2] - WIDO_FRAME_THICKNESS
		else
			leftCornerY		= -leftWallFrameRevealPnts[idxSillStartPlasterLeft][2]
			rightCornerY	= -rightWallFrameRevealPnts[idxSillStartPlasterRight][2]
		endif
	endif

	sunShadeLength = rightCornerX - leftCornerX

	casingThkAtWindow	= 0
	casingThkOnFacade	= 0

	if gs_trim_outside then
		casingThkAtWindow = gs_trim_width_out
		if gs_shutRoll_iRailPos = 2 then		! ON WALL
			casingThkAtWindow = 0
		endif
		if gs_shutLam_iRailPos = 2 then			! ON WALL
			casingThkAtWindow = 0
		endif

		if gs_trim_show_cover_out then
			casingThkOnFacade = gs_trim_thk_out
		else
			casingThkOnFacade = gs_trim_jambext_nosing_out
		endif
	endif

	add2 leftCornerX + sunShadeLength / 2, 0

	call "SunShade" parameters a				= sunShadeLength - casingThkAtWindow * 2,

				lod2D_sunShade					= lod2D_sunShade,
				gs_sunShade_iType				= gs_sunShade_iType,
				gs_shutter_nPanels				= gs_shutter_nPanels,
				gs_shutter_nPanels2				= gs_shutter_nPanels2,
				gs_shutter_iPanelPos			= gs_shutter_iPanelPos,

				gs_shutter_innerOffset			= gs_shutter_innerOffset,
				gs_shutter_closingDepth			= gs_shutter_closingDepth,

				gs_slidingShutter_panelDist		= gs_slidingShutter_panelDist,

				gs_foldingShutter_iStacking		= gs_foldingShutter_iStacking,
				gs_foldingShutter_ovhg			= gs_foldingShutter_ovhg,

				gs_outFoldingShutter_panelIn	= gs_outFoldingShutter_panelIn,
				outfolding_innerPanelLeft		= outfolding_innerPanelLeft,
				outfolding_innerPanelRight		= outfolding_innerPanelRight,

				gs_sunShade_bShowIn2D			= gs_sunShade_bShowIn2D,
				gs_sunShade_bShowOpline			= gs_sunShade_bShowOpline,

				gs_shutPanel_bAutomaticWidth	= gs_shutPanel_bAutomaticWidth,
				gs_shutPanel_panelWidth			= gs_shutPanel_panelWidth,
				gs_shutPanel_Thk				= gs_shutPanel_Thk,

				gs_shutRoll_iPlacement			= gs_shutRoll_iPlacement,
				gs_shutRoll_boxWidth			= gs_shutRoll_boxWidth,
				gs_shutRoll_railDepth			= gs_shutRoll_railDepth,
				gs_shutRoll_distFromWall		= gs_shutRoll_distFromWall,
				gs_shutRoll_distFromHead		= gs_shutRoll_distFromHead,
				gs_shutRoll_boxOffsetLeft		= gs_shutRoll_boxOffsetLeft,
				gs_shutRoll_boxOffsetRight		= gs_shutRoll_boxOffsetRight,

				gs_shutLam_iPlacement			= gs_shutLam_iPlacement,
				gs_shutLam_boxWidth				= gs_shutLam_boxWidth,
				gs_shutLam_bRail				= gs_shutLam_bRail,
				gs_shutLam_coverWidth			= gs_shutLam_coverWidth,
				gs_shutLam_distFromWall			= gs_shutLam_distFromWall,

				gs_sunShade_lineType			= gs_sunShade_lineType,
				gs_sunShade_cutLinesPen			= gs_sunShade_cutLinesPen,
				gs_sunShade_unCutLinesPen		= gs_sunShade_unCutLinesPen,
				gs_sunShade_cutFillType			= gs_sunShade_cutFillType,
				gs_sunShade_cutFillPen			= gs_sunShade_cutFillPen,
				gs_sunShade_cutFillBackPen		= gs_sunShade_cutFillBackPen,

				radSill							= radSill,
				radBoard						= radBoard,
				gs_casingThkOnFacade			= casingThkOnFacade,
				iWindowShape					= iWindowShape,
				bLeftCornerFunction				= bLeftCornerFunction,
				bRightCornerFunction			= bRightCornerFunction,
				leftCornerAngle					= leftCornerAngle,
				rightCornerAngle				= rightCornerAngle,

				leftWallAngle					= leftWallAngle,
				rightWallAngle					= rightWallAngle,
				iRevealType						= iRevealType
	del 1
endif


! =============================================================================
! Draw Corner Column
! =============================================================================

drawindex 50	! Draw Corner Column at the top

if gs_corner_column & not(bFeedBack) & (bEnableCustomCornerLeft | bEnableCustomCornerRight) then
	call "Corner Column" parameters gs_macro_version = 12,
	! --- Reveal Parameters
		iRevealType				= iRevealType,
		leftRevealPnts			= leftWallFrameRevealPnts,
		rightRevealPnts			= rightWallFrameRevealPnts,
		SymbolMid_shiftDy		= SymbolMid_shiftDy,
		iRevealPointsIdx		= iRevealPointsIdx,
	! --- Corner Functions
		bLeftCornerFunction		= bLeftCornerFunction,
		leftCornerAngle			= leftCornerAngle,
		bRightCornerFunction	= bRightCornerFunction,
		rightCornerAngle		= rightCornerAngle,
	! --- Corner Column Geometry
		gs_corner_column 		= gs_corner_column,
		gs_cc_width				= gs_cc_width,
		gs_cc_thk				= gs_cc_thk,
		gs_cc_pr				= gs_cc_pr,
		gs_cc_endline			= gs_cc_endline,
	! --- 2D Representation
		lod2D_CornerColumn		= lod2D_CornerColumn,
		gs_frame_pen_cont		= gs_frame_pen_cont,
		gs_fillFr				= gs_fillFr,
		gs_penFr_fg				= gs_penFr_fg,
		gs_penFr_bg				= gs_penFr_bg
endif
