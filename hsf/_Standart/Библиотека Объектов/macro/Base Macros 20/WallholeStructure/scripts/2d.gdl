

! ==============================================================================
! Interactive Schedule and Listing related display options
! ==============================================================================

if GLOB_CONTEXT = 6 then
	bDrawMasonryArch	= 0
	bDrawFaschen		= 0
endif

!! ==============================================================================
!! Visualize Framing Contour Lines
!! ==============================================================================
!
!del top
!if WIDO_REVEAL_SIDE then
!	add2 0,-WIDO_FRAME_THICKNESS
!else
!	mul2 1,-1
!endif
!
!LINE_BEG_X		= 1
!LINE_BEG_Y		= 2
!LINE_END_X		= 3
!LINE_END_Y		= 4
!LINE_ATTRIBUTES	= 5	! bitfield, look at LINE_ATTRIBUTES_xxx for available values
!LINE_PEN_IDX	= 6
!LINE_LTYPE_IDX	= 7
!
!LINE_ATTRIBUTES_GDLLINE		= 0			! Draw GDL Line in the section
!LINE_ATTRIBUTES_WALLLINE	= 1			! Draw WallLine in the section
!LINE_ATTRIBUTES_WALLSIDE	= 2			! The section is on the wall side (it is an arc in curved wall)
!LINE_ATTRIBUTES_DRAWCC		= 3			! The section is drawn by CavityClosure macro (otherwise the WallHoleCut macro)
!LINE_ATTRIBUTES_CONTOUR		= 4			! The section is contour or inner line
!!!!LINE_ATTRIBUTES_WALLEDGE	= 0			! The section is on the wall edge (always a line)
!
!for i=1 to vardim1(lineSections)
!	RR  = i * 0.001
!
!	iBitField = round_int(lineSections[i][LINE_ATTRIBUTES])
!	bGDLLine	= (bittest(iBitField, LINE_ATTRIBUTES_GDLLINE))
!	bWallLine	= (bittest(iBitField, LINE_ATTRIBUTES_WALLLINE))
!
!	if bGDLLine & not(bWallLine) then
!		pen 1	! GDL lines only
!	endif
!
!	if not(bGDLLine) & bWallLine then
!		pen 20	! Walllines only
!	endif
!
!	if bGDLLine & bWallLine then
!		pen 16	! Walllines and GDL lines
!	endif
!
!	add2 lineSections[i][LINE_BEG_X], lineSections[i][LINE_BEG_Y]
!	circle2 0,0, RR
!	line2 -RR,-RR, RR, RR
!	line2 -RR, RR, RR,-RR
!	del 1
!
!	add2 lineSections[i][LINE_END_X], lineSections[i][LINE_END_Y]
!	circle2 0,0, RR
!	line2 -RR,-RR, RR, RR
!	line2 -RR, RR, RR,-RR
!	del 1
!next i
!
!del top


! ==============================================================================
!
! ------------------------------------------------------------------------------
! Input parameters:
!	iWallContourLine		Identifies the wall cotours to be drawn
!								(integer; 1 = none, 2 = inside, 3 = outside, 4 = both sides)
!	gs_wcont_line_in:		Type of the wall contour line inside. (line type)
!	gs_wcont_line_out:		Type of the wall contour line outside. (line type)
!	gs_wcont_hidden_line_in:	Type of the hidden wall contour line inside. (line type)
!	gs_wcont_hidden_line_out:	Type of the hidden wall contour line outside. (line type)
!	gs_wcont_line_pen:		Pen of the wall contour lines (pen)
! ==============================================================================


! ==============================================================================
! Partial Stucture Display related calculations
! ==============================================================================

offsetSill	= 0
offsetBoard	= 0
!!!bRevealInDisplayedStructure = 1
!!!bOneFillAtRevealSide		= 1

if GLOB_STRUCTURE_DISPLAY <> STRUCTURE_ENTIRE_STRUCTURE then

	bCompositeWall = (WALL_SKINS_NUMBER > 0)

	if bCompositeWall then

		offsetInside		= 0
		offsetOutside		= 0

		for i = 1 to WALL_SKINS_NUMBER

			bShowSkin = (GLOB_STRUCTURE_DISPLAY = STRUCTURE_WITHOUT_FINISHES & abs(WALL_SKINS_PARAMS[i][SKIN_FINISH_STATUS] - 1) > EPS) | \
						(GLOB_STRUCTURE_DISPLAY = STRUCTURE_CORE_ONLY & WALL_SKINS_PARAMS[i][SKIN_CORE_STATUS] > EPS)

			if not(bShowSkin) then
				offsetInside = offsetInside + WALL_SKINS_PARAMS[i][SKIN_THICKNESS]
			else
				i = WALL_SKINS_NUMBER	! Break loop
			endif
		next i

		for i = WALL_SKINS_NUMBER to 1 step -1

			bShowSkin = (GLOB_STRUCTURE_DISPLAY = STRUCTURE_WITHOUT_FINISHES & abs(WALL_SKINS_PARAMS[i][SKIN_FINISH_STATUS] - 1) > EPS) | \
						(GLOB_STRUCTURE_DISPLAY = STRUCTURE_CORE_ONLY & WALL_SKINS_PARAMS[i][SKIN_CORE_STATUS] > EPS)

			if not(bShowSkin) then
				offsetOutside = offsetOutside + WALL_SKINS_PARAMS[i][SKIN_THICKNESS]
			else
				i = 1	! Break loop
			endif
		next i

		if wallIsLeft then
			offsetSill	= offsetInside
			offsetBoard	= offsetOutside
		else
			offsetSill	= offsetOutside
			offsetBoard	= offsetInside
		endif

!!!		bRevealInDisplayedStructure	= (WIDO_REVEAL_ON & (offsetSill < WIDO_SILL) & (offsetBoard < WALL_THICKNESS - WIDO_SILL))
!!!		bOneFillAtRevealSide		= (WIDO_REVEAL_ON & (offsetSill < WIDO_SILL))
	endif
endif


gs_wallhole_fill	= gs_bFills * gs_wallhole_fill
if bTShapedOpening then
	gs_wallhole_fill_sl	= gs_bFills * gs_wallhole_fill_sl
endif


! =============================================================================
! Wallhole Cut
! =============================================================================

	call "WallholeCut" parameters gs_macro_version = 12,
		AC_Hole_Hotspot_Control			= AC_Hole_Hotspot_Control,
		AC_Hole_Display_Option			= AC_Hole_Display_Option,
		AC_WallType						= AC_WallType,
		AC_WindowInWallContour			= AC_WindowInWallContour,
		AC_WallContourPolygon			= AC_WallContourPolygon,
		AC_Wall_Direction_Type			= AC_Wall_Direction_Type,
	! --- Demolition/New Symbol
		iTypeDemolitionFill				= iTypeDemolitionFill,
		gs_new_symb_fill				= gs_new_symb_fill,
		gs_new_symb_pen_Fg				= gs_new_symb_pen_Fg,
		gs_new_symb_pen_bg				= gs_new_symb_pen_bg,
		gs_new_symb_width_r				= gs_new_symb_width_r,
		gs_new_symb_width_l				= gs_new_symb_width_l,
		gs_bShowNewOnCC					= gs_bShowNewOnCC,
	! --- Function Control Parameters
		bEnableParapetInset				= bEnableParapetInset,
		lod2D_MountingFrame				= lod2D_MountingFrame,
		bEnableWallContourHiddenLine	= bEnableWallContourHiddenLine,
	! --- Wallhole Geometry
		iWindowShape					= iWindowShape,
		bParalellInCurvedWalls			= bParalellInCurvedWalls,
		refWidth						= refWidth,
		leftWidth						= leftWidth,
		rightWidth						= rightWidth,
		radSill							= radSill,
		radBoard						= radBoard,
		WOD								= WOD,
		offsetSill						= offsetSill,
		offsetBoard						= offsetBoard,
		lineSections					= lineSections,
	! --- Reveal Parameters
		iRevealType						= iRevealType,
		leftRevealPnts					= leftWallholeRevealPnts,
		rightRevealPnts					= rightWallholeRevealPnts,
		iRevealPointsIdx				= iRevealPointsIdx,
		gs_reveal_splayed_innerLeft		= gs_reveal_splayed_innerLeft,
		gs_reveal_splayed_innerRight	= gs_reveal_splayed_innerRight,
		gs_reveal_double_innerLeft		= gs_reveal_double_innerLeft,
		gs_reveal_double_innerRight		= gs_reveal_double_innerRight,
		revealInnerLeft					= revealInnerLeft,
		revealInnerRight				= revealInnerRight,
		gs_reveal_left_angle			= gs_reveal_left_angle,
		gs_reveal_right_angle			= gs_reveal_right_angle,
		gs_reveal_top_angle				= gs_reveal_top_angle,
		gs_reveal_bottom_angle			= gs_reveal_bottom_angle,
		gs_reveal_splayed_innerTop		= gs_reveal_splayed_innerTop,
		gs_reveal_splayed_innerBottom	= gs_reveal_splayed_innerBottom,
		gs_reveal_left_sL				= gs_reveal_left_sL,
		gs_reveal_right_sR				= gs_reveal_right_sR,
		gs_reveal_double_innerLeft_sL	= gs_reveal_double_innerLeft_sL,
		gs_reveal_double_innerRight_sR	= gs_reveal_double_innerRight_sR,
		gs_mountingFrame				= gs_mountingFrame,
		gs_mountingFrame_depth			= gs_mountingFrame_depth,
		gs_mountingFrame_width_left		= gs_mountingFrame_width_left,
		gs_mountingFrame_width_right	= gs_mountingFrame_width_right,
		gs_mountingFrame_pen_view		= gs_mountingFrame_pen_view,
		gs_mountingFrame_fill			= gs_mountingFrame_fill,
		gs_mountingFrame_pen_bg			= gs_mountingFrame_pen_bg,
		gs_mountingFrame_pen_fg			= gs_mountingFrame_pen_fg,
		gs_mountingFrame_pen_cont		= gs_mountingFrame_pen_cont,
		bMountingFrame_DrawInsideLine	= (not(isWindow) | isEmptyOpening),
	! --- Turn Plaster
		gs_turn_plaster_dim_2D			= gs_turn_plaster_dim_2D,
		thkPlasterAtSillLeft			= thkPlasterAtSillLeft,
		thkPlasterAtSillRight			= thkPlasterAtSillRight,
		thkPlasterAtSillSlLeft			= thkPlasterAtSillSlLeft,
		thkPlasterAtSillSlRight			= thkPlasterAtSillSlRight,
		thkPlasterAtBoardLeft			= thkPlasterAtBoardLeft,
		thkPlasterAtBoardRight			= thkPlasterAtBoardRight,
		thkPlasterAtBoardSlLeft			= thkPlasterAtBoardSlLeft,
		thkPlasterAtBoardSlRight		= thkPlasterAtBoardSlRight,
	! --- Macro Control Parameters
		isWindow						= isWindow,
		gs_IsCurved						= gs_IsCurved,
		bDrawSillFill					= bDrawSillFill,
		bDrawBoardFill					= bDrawBoardFill,
		bWallContHiddenLineIn			= bWallContHiddenLineIn,
		bWallContHiddenLineOut			= bWallContHiddenLineOut,
		bWallContHiddenLineInLeftSl		= bWallContHiddenLineInLeftSl,
		bWallContHiddenLineOutLeftSl	= bWallContHiddenLineOutLeftSl,
		bWallContHiddenLineInRightSl	= bWallContHiddenLineInRightSl,
		bWallContHiddenLineOutRightSl	= bWallContHiddenLineOutRightSl,
		wallContourLineOffsetLeftIn		= wallContourLineOffsetLeftIn,
		wallContourLineOffsetRightIn	= wallContourLineOffsetRightIn,
		wallContourLineOffsetLeftOut	= wallContourLineOffsetLeftOut,
		wallContourLineOffsetRightOut	= wallContourLineOffsetRightOut,
	! --- Corner Functions
		bLeftCornerFunction				= bLeftCornerFunction,
		leftCornerAngle					= leftCornerAngle,
		leftConnWallThk					= leftConnWallThk,
		bRightCornerFunction			= bRightCornerFunction,
		rightCornerAngle				= rightCornerAngle,
		rightConnWallThk				= rightConnWallThk,
	! --- Window Sizes
		gs_wallhole_hotspots			= gs_wallhole_hotspots,
		gs_reveal_hotspots				= gs_reveal_hotspots,
	! --- Ganging
		gs_stack_left					= gs_stack_left,
		gs_stack_right					= gs_stack_right,
		gs_stack_top					= gs_stack_top,
		gs_stack_bottom					= gs_stack_bottom,
	! --- Oversize
		gs_left_oversize				= gs_left_oversize,
		gs_right_oversize				= gs_right_oversize,
		gs_upper_oversize				= gs_upper_oversize,
		gs_lower_oversize				= gs_lower_oversize,
	! --- Wall Inset
		gs_parapet_wall_inset			= gs_parapet_wall_inset,
		iParapetSize					= iParapetSize,
		gs_parapet_inset_thk			= gs_parapet_inset_thk,
		gs_parapet_width				= gs_parapet_width,
		gs_parapet_left					= gs_parapet_left,
		gs_parapet_right				= gs_parapet_right,
		gs_parapet_height				= gs_parapet_height,
		gs_parapet_2D					= gs_parapet_2D,
		gs_parapet_line					= gs_parapet_line,
	! --- Wallhole Fill
		gs_wallhole_fill				= gs_wallhole_fill,
		gs_wallhole_pen_fg				= gs_wallhole_pen_fg,
		gs_wallhole_pen_bg				= gs_wallhole_pen_bg,
		gs_wallhole_fill_sl				= gs_wallhole_fill_sl,
		gs_wallhole_pen_sl_fg			= gs_wallhole_pen_sl_fg,
		gs_wallhole_pen_sl_bg			= gs_wallhole_pen_sl_bg,
	! --- Sidelight
		gs_sidelight_WHole_width_left	= gs_sidelight_WHole_width_left,
		gs_sidelight_parapet_hgt_left	= gs_sidelight_parapet_hgt_left,
		gs_sidelight_WHole_width_right	= gs_sidelight_WHole_width_right,
		gs_sidelight_parapet_hgt_right	= gs_sidelight_parapet_hgt_right,
	! --- Wall Contour Line
		iWallContourLine				= iWallContourLine,
		gs_wcont_line					= gs_wcont_line,
		gs_wcont_line_in				= gs_wcont_line_in,
		gs_wcont_line_out				= gs_wcont_line_out,
		gs_wcont_hidden_line_in			= gs_wcont_hidden_line_in,
		gs_wcont_hidden_line_out		= gs_wcont_hidden_line_out,
		gs_wcont_line_pen				= gs_wcont_line_pen,
		iWallContourLineSl				= iWallContourLineSL,
		gs_wcont_line_sl_in				= gs_wcont_line_sl_in,
		gs_wcont_line_sl_out			= gs_wcont_line_sl_out,
		gs_wcont_hidden_line_sl_in		= gs_wcont_hidden_line_sl_in,
		gs_wcont_hidden_line_sl_out		= gs_wcont_hidden_line_sl_out,
	! --- Head/Threshold symbol
		gs_head_symbol					= gs_head_symbol,
		gs_head_symbol_line				= gs_head_symbol_line,
		gs_head_symbol_pen				= gs_head_symbol_pen,
	! --- Display as Transom
		gs_transom_display				= gs_transom_display,
		gs_transom_display_linetype		= gs_transom_display_linetype,
		gs_transom_display_pen			= gs_transom_display_pen



! =============================================================================
! Draw the Turned Plasters
! =============================================================================

bCavityCloserLeft	= (not(gs_stack_left)  & ((iCavityClosureSide = CAVITY_SIDE_BOTH | iCavityClosureSide = CAVITY_SIDE_LEFT) |\
						iClosureType = CLOSURE_CUSTOM |\
						iClosureType = CLOSURE_PLASTER_REVEAL |\
						iClosureType = CLOSURE_INSULATED_REVEAL |\
						iClosureType = CLOSURE_INSULATED_FOR_RENOVATION))
bCavityCloserRight	= (not(gs_stack_right) & ((iCavityClosureSide = CAVITY_SIDE_BOTH | iCavityClosureSide = CAVITY_SIDE_RIGHT) |\
						iClosureType = CLOSURE_CUSTOM |\
						iClosureType = CLOSURE_PLASTER_REVEAL |\
						iClosureType = CLOSURE_INSULATED_REVEAL |\
						iClosureType = CLOSURE_INSULATED_FOR_RENOVATION))

bDrawObjContourOut	= bDrawOutsideTrim
bDrawObjContourIn	= bDrawInsideTrim

bDrawFrameContourLeft	= (gs_left_oversize < EPS)
bDrawFrameContourRight	= (gs_right_oversize < EPS)

if gs_bShowNewOnCC & (iTypeDemolitionFill = RENOVATION_FILL_NEW) then
	nSkinTurnOut	= 0
	nSkinTurnIn		= 0
endif

if not(gs_stack_left & gs_stack_right) then

	call "TurnPlaster",
		parameters all	refWidth				= refWidth,
						leftWidth				= leftWidth,
						rightWidth				= rightWidth,
						radSill					= radSill,
						radBoard				= radBoard,
						WOD						= WOD,
						offsetSill				= offsetSill,
						offsetBoard				= offsetBoard,
					! --- Reveal Parameters
						iRevealType				= iRevealType,
						leftRevealPnts			= leftWallholeRevealPnts,
						rightRevealPnts			= rightWallholeRevealPnts,
						iRevealPointsIdx		= iRevealPointsIdx,
						bAddPoint				= bAddPoint,
						gs_reveal_left			= gs_reveal_left,
						gs_reveal_right			= gs_reveal_right,
						gs_reveal_left_angle	= gs_reveal_left_angle,
						gs_reveal_right_angle	= gs_reveal_right_angle,
					! --- Turned Plaster Skins
						possibleSkinTurnIn		= possibleSkinTurnIn,
						possibleSkinTurnOut		= possibleSkinTurnOut,
						maxSkinTurnIn			= maxSkinTurnIn,
						maxSkinTurnOut			= maxSkinTurnOut,
						nSkinTurnOut			= nSkinTurnOut,
						nSkinTurnIn				= nSkinTurnIn,
					! --- Macro Control Parameters
						bWndCurved				= gs_IsCurved,
						bParalellInCurvedWalls  = bParalellInCurvedWalls,
						bDrawObjContourIn		= bDrawObjContourIn,
						bDrawObjContourOut		= bDrawObjContourOut,
						bDrawFrameContourLeft	= bDrawFrameContourLeft,
						bDrawFrameContourRight	= bDrawFrameContourRight,
						bCornerWindow			= bRightCornerFunction,
						bLeftCornerFunction		= bLeftCornerFunction,
						bEnablePlasterLeftIn	= bEnablePlasterLeftIn,
						bEnablePlasterLeftOut	= bEnablePlasterLeftOut,
						bEnablePlasterRightIn	= bEnablePlasterRightIn,
						bEnablePlasterRightOut	= bEnablePlasterRightOut,
					! --- Ganging
						gs_stack_left			= gs_stack_left,
						gs_stack_right			= gs_stack_right,
						gs_bAutoTurnIn			= gs_bAutoTurnIn,
						gs_bOverIn				= gs_bOverIn,
						gs_bAutoTurnOut			= gs_bAutoTurnOut,
						gs_bOverOut				= gs_bOverOut
endif


! =============================================================================
! Draw the Cavity Closure and turned skins
! =============================================================================

drawindex 50	! Draw Cavity Closure at the top

if gs_bShowNewOnCC & (iTypeDemolitionFill = RENOVATION_FILL_NEW) then
	bCavityCloserLeft	= 0
	bCavityCloserRight	= 0
endif

call "CavityClosure",
	parameters all	refWidth					= refWidth,
					leftWidth					= leftWidth,
					rightWidth					= rightWidth,
					radSill						= radSill,
					radBoard					= radBoard,
					WOD							= WOD,
					offsetSill					= offsetSill,
					offsetBoard					= offsetBoard,
					lineSections				= lineSections,
				! --- Reveal Parameters
					iRevealType					= iRevealType,
					leftRevealPnts				= leftWallholeRevealPnts,
					rightRevealPnts				= rightWallholeRevealPnts,
					iRevealPointsIdx			= iRevealPointsIdx,
					gs_reveal_left				= gs_reveal_left,
					gs_reveal_right				= gs_reveal_right,
					gs_reveal_double_innerLeft	= gs_reveal_double_innerLeft,
					gs_reveal_double_innerRight	= gs_reveal_double_innerRight,
					revealInnerLeft				= revealInnerLeft,
					revealInnerRight			= revealInnerRight,
					gs_reveal_outer_jamb_depth	= gs_reveal_outer_jamb_depth,
					gs_reveal_left_angle		= gs_reveal_left_angle,
					gs_reveal_right_angle		= gs_reveal_right_angle,
					gs_reveal_outerLeft_angle	= gs_reveal_outerLeft_angle,
					gs_reveal_outerRight_angle	= gs_reveal_outerRight_angle,
					gs_mountingFrame			= gs_mountingFrame,
					gs_mountingFrame_depth		= gs_mountingFrame_depth,
				! --- Macro Control Parameters
					bWndCurved					= gs_IsCurved,
					bParalellInCurvedWalls 		= bParalellInCurvedWalls,
					iClosureType				= iClosureType,
					bCavityCloserLeft			= bCavityCloserLeft,
					bCavityCloserRight			= bCavityCloserRight,
					bDrawObjContourIn			= bDrawObjContourIn,
					bDrawObjContourOut			= bDrawObjContourOut,
					bDrawFrameContourLeft		= bDrawFrameContourLeft,
					bDrawFrameContourRight		= bDrawFrameContourRight,
					bCornerWindow				= bRightCornerFunction,
					bLeftCornerFunction			= bLeftCornerFunction,
					fillWallHole				= gs_wallhole_fill,
					penWallHoleFg				= gs_wallhole_pen_fg,
					penWallHoleBg				= gs_wallhole_pen_bg,
					iWallContourLine			= iWallContourLine,
					gs_wcont_line_in			= gs_wcont_line_in,
					gs_wcont_line_out			= gs_wcont_line_out,
					penWallContour				= gs_wcont_line_pen,
					gs_left_oversize			= gs_left_oversize,
					gs_right_oversize			= gs_right_oversize,
				! --- Ganging
					gs_stack_left				= gs_stack_left,
					gs_stack_right				= gs_stack_right,
					gs_bAutoTurnIn				= gs_bAutoTurnIn,
					gs_bOverIn					= gs_bOverIn,
					gs_bAutoTurnOut				= gs_bAutoTurnOut,
					gs_bOverOut					= gs_bOverOut,
				! --- String Resource ---
					stCavityClosureTurnDir		= stCavityClosureTurnDir

