
! =============================================================================
! Tabpage Structure Definition
! =============================================================================

! call all available page fix IDs

if bTabFlatList then
	if isWindow then
		if isSunshadeObjectDA then
			call "ui_tabIDlist_m" parameters iObjectUIGroupType = 201, 	! SUNSHADE_DA_UI
								returned_parameters iUiID_Root,
													iUiID_NominalSizes,
													iUiID_Reveal,
													iUiID_Closure,
													iUiID_Shutter,
													iUiID_FloorPlanSection,
													iUiID_Descriptions
		endif
	endif
else
	call "ui_tabIDlistHierarchy_m" parameters bWallOpeningTabIDsOnly = 1,
				returned_parameters iUiID_Root,
									iUiID_WallOpening,	iParID_WallOpening,
									iUiID_Reveal,		iParID_Reveal,
									iUiID_Closure,		iParID_Closure,
									iUiID_WallInset,	iParID_WallInset,
									iUiID_Faschen,		iParID_Faschen,
									iUiID_MasonryArch,	iParID_MasonryArch,
									iUiID_Tolerances,	iParID_Tolerances,
									iUiID_WallOpModelAttr,	iParID_WallOpModelAttr
							
endif


! =============================================================================
! Display actual tabpages
! =============================================================================
bClosurePage = 0
bWallInsetPage = 0
bRevealSettingsPage = 0

tabIDlistRoot = -1

for iTabs = 1 to vardim1(uiUsedPageIDs)
	if uiUsedPageIDs[iTabs][1]= iUiID_Reveal then
		ui_page	uiUsedPageIDs[iTabs][1], uiUsedPageIDs[iTabs][2], uiUsedPageNames[iTabs][1], uiUsedPageNames[iTabs][2]
		if gs_ui_current_page = iUiID_Reveal then
			bRevealSettingsPage = 1
			gosub "pageRevealSettings"
		endif
	endif
	if uiUsedPageIDs[iTabs][1]= iUiID_Closure then
		ui_page	uiUsedPageIDs[iTabs][1], uiUsedPageIDs[iTabs][2], uiUsedPageNames[iTabs][1], uiUsedPageNames[iTabs][2]
		if gs_ui_current_page = iUiID_Closure then
			bClosurePage = 1
			gosub "pageWallClosure"
		endif
	endif
	if bEnableMasonryArch then
		if uiUsedPageIDs[iTabs][1]= iUiID_MasonryArch then
			ui_page	uiUsedPageIDs[iTabs][1], uiUsedPageIDs[iTabs][2], uiUsedPageNames[iTabs][1], uiUsedPageNames[iTabs][2]
			if gs_ui_current_page = iUiID_MasonryArch then
				gosub "pageCallMasonryArch"
			endif
		endif
	endif
	if bEnableFaschen then
		if uiUsedPageIDs[iTabs][1]= iUiID_Faschen then
			ui_page	uiUsedPageIDs[iTabs][1], uiUsedPageIDs[iTabs][2], uiUsedPageNames[iTabs][1], uiUsedPageNames[iTabs][2]
			if gs_ui_current_page = iUiID_Faschen then
				gosub "pageCallFaschen"
			endif
		endif
	endif
	if isWindow and bEnableParapetInset then
		if uiUsedPageIDs[iTabs][1]= iUiID_WallInset then
			ui_page	uiUsedPageIDs[iTabs][1], uiUsedPageIDs[iTabs][2], uiUsedPageNames[iTabs][1], uiUsedPageNames[iTabs][2]
			if gs_ui_current_page = iUiID_WallInset then
				bWallInsetPage = 1
				gosub "pageWallInset"
			endif
		endif
	endif
	if not(bTabFlatList) then
		if uiUsedPageIDs[iTabs][1]= iUiID_WallOpModelAttr then
			ui_page	uiUsedPageIDs[iTabs][1], uiUsedPageIDs[iTabs][2], uiUsedPageNames[iTabs][1], uiUsedPageNames[iTabs][2]
			if gs_ui_current_page = iUiID_WallOpModelAttr then
				gosub "pageWallOpModAttributes"
			endif
		endif
	endif
next iTabs

! =============================================================================
end
! =============================================================================


! --------------------------------------------------------------------------------
! Masonry Arch
! --------------------------------------------------------------------------------
"pageCallMasonryArch":
		call "MasonryArch" parameters gs_macro_version = 12,
			iWindowShape					= iWindowShape,
			bMasonryArch					= bMasonryArch,
			gs_masonry_arch_int				= gs_masonry_arch_int,
			gs_masonry_arch_structure		= gs_masonry_arch_structure,
			gs_masonry_arch_structure_int	= gs_masonry_arch_structure_int,
			gs_stack_top					= gs_stack_top,
			gs_ui_sub_tabpage				= gs_ui_sub_tabpage,
		! --- Distance between Arch and Window ---
			gs_AutomaticArchHeight			= gs_AutomaticArchHeight,
			gs_NicheBelowArch				= gs_NicheBelowArch,
			gs_MasonryArch_height			= gs_MasonryArch_height,
			gs_masonry_arch_rise			= gs_masonry_arch_rise,
			bEnableCustomMatNicheTop		= bEnableCustomMatNicheTop,
		! --- String Resource ---
			stMasonryArchTypes				= stMasonryArchTypes,
			stMasonryArchStructure			= stMasonryArchStructure,
			stMasonryArchUI					= stMasonryArchUI,
			stSubTabpageToolTip				= stSubTabpageToolTip

return


! --------------------------------------------------------------------------------
! Ornamental Window Moldings (Faschen)
! --------------------------------------------------------------------------------
"pageCallFaschen":
	call "Faschen",
		parameters all stFasschenUI	= stFasschenUI,
		gs_faschen_type	= gs_faschen_type,
		iRevealType		= iRevealType
return


! --------------------------------------------------------------------------------
! Wall Inset
! --------------------------------------------------------------------------------
"pageWallInset":
	call "WallholeCut" parameters all A = A,
			bRevealSettingsPage		= 0,
			bWallInsetPage			= bWallInsetPage
return


! --------------------------------------------------------------------------------
! Reveal
! --------------------------------------------------------------------------------
"pageRevealSettings":

	pageStartY = 0

	y = pageStartY
	numIcons = 0

	for i=1 to vardim1(stRevealTypes)
		if bittest(gs_RevealTypeEnable, i - 1) then numIcons = numIcons + 1
	next i

	if numIcons > 1 then
		px = 40
		py = 23

		if numIcons < 9 then
			ui_style 0,1
			ui_outfield stRevealUI[1], 	2, 10 + pageStartY, 115, 20	! Reveal Type
			x = 120
		else
			x = 222 - (numIcons * px)/2
		endif
		ui_style 0,0

		ui_infield{3} "gs_reveal_type_int", x, y, numIcons * px, 30,
			4, 76, 10, 1,
			0, 0, px, py,
			1, "",	1,
			2, "",	2,
			3, "",	3,
			4, "",	4,
			5, "",	5,
			6, "",	6,
			7, "",	7,
			9, "",	9,
			10, "",	10,
			8, "",	8

		ui_separator 0, 34 + pageStartY, 444, 34 + pageStartY
	endif

	call "WallholeCut" parameters gs_macro_version = 12,
		iWindowShape				= iWindowShape,
		AC_WallType					= AC_WallType,
		ac_wall_crosssection_type	= ac_wall_crosssection_type,
		bEnableParapetInset			= bEnableParapetInset,
		bEnableMountingFrameForReveal	= bEnableMountingFrameForReveal,
		iRevealType					= iRevealType,
		iSillRevealType				= iSillRevealType,
		iBoardRevealType			= iBoardRevealType,
		bForceUniformBottomReveal	= _bForceUniformBottomReveal,
		gs_reveal_type_bottom_int	= gs_reveal_type_bottom_int,
		gs_reveal_uniform			= gs_reveal_uniform,
		gs_reveal_set_side			= gs_reveal_set_side,
		gs_reveal_left				= gs_reveal_left,
		gs_reveal_right				= gs_reveal_right,
		gs_reveal_top				= gs_reveal_top,
		gs_reveal_left_sL			= gs_reveal_left_sL,
		gs_reveal_right_sR			= gs_reveal_right_sR,
		gs_reveal_bottom_sL			= gs_reveal_bottom_sL,
		gs_reveal_bottom_sR			= gs_reveal_bottom_sR,
		gs_reveal_double_innerLeft		= gs_reveal_double_innerLeft,
		gs_reveal_double_innerRight		= gs_reveal_double_innerRight,
		gs_reveal_double_innerTop		= gs_reveal_double_innerTop,
		gs_reveal_double_innerLeft_sL	= gs_reveal_double_innerLeft_sL,
		gs_reveal_double_innerRight_sR	= gs_reveal_double_innerRight_sR,
		gs_reveal_double_innerBottom_sL	= gs_reveal_double_innerBottom_sL,
		gs_reveal_double_innerBottom_sR	= gs_reveal_double_innerBottom_sR,
		gs_reveal_splayed_innerLeft = gs_reveal_splayed_innerLeft,
		gs_reveal_splayed_innerRight= gs_reveal_splayed_innerRight,
		gs_reveal_splayed_innerTop	= gs_reveal_splayed_innerTop,
		gs_reveal_right_angle		= gs_reveal_left_angle,
		gs_reveal_left_angle		= gs_reveal_right_angle,
		gs_reveal_top_angle			= gs_reveal_top_angle,
		gs_reveal_angle_edit_by_int = gs_reveal_angle_edit_by_int,
		gs_mountingFrame			= gs_mountingFrame,
		gs_closure_auto_changed		= gs_closure_auto_changed,
		isWindow					= isWindow,
		isEmptyOpening				= isEmptyOpening,
		bRevealSettingsPage			= bRevealSettingsPage,
		bWallInsetPage				= 0,
		gs_ui_sub_tabpage			= gs_ui_sub_tabpage,
		pageStartY					= pageStartY,
		iParapetSize				= iParapetSize,
	! --- String Resource ---
		stRevealTypes				= stRevealTypes,
		stRevealTypesBottom			= stRevealTypesBottom,
		stWallholeCutUI				= stWallholeCutUI,
		stRevealUI					= stRevealUI,
		stSetRevealSide				= stSetRevealSide,
		stParapetSize				= stParapetSize,
		stParapetBottom				= stParapetBottom,
		stRevealClusureUITips		= stRevealClusureUITips,
		iClosureType				= iClosureType
return



! --------------------------------------------------------------------------------
! Wall Closure
! --------------------------------------------------------------------------------
"pageWallClosure":

	pageStartY = 0

	y = pageStartY

	numIcons = 0

	for i=1 to vardim1(stClosureTypes)
		if bittest(gs_ClosureTypeEnable, i - 1) then numIcons = numIcons + 1
	next i

	px = 40
	py = 23

	ui_style 0, 1
	ui_outfield stClosureType, 0, 8 + pageStartY, 130, 16
	ui_style 0,0

	if iRevealType = REVEAL_DOUBLE_SPLAYED | iRevealType = REVEAL_OUTSIDE_SPLAYED then
		pictIdx = 78	! ui_closure_selection_2
	else
		pictIdx = 77	! ui_closure_selection
	endif

	ui_infield{3}	"gs_closure_type_int", 226, 4 + pageStartY, 200, 20,
		8, "", 15, 1,
		0, 0, 0, 0,
		 1, stClosureTypes[ 1], CLOSURE_NO + 1,
		 2, stClosureTypes[ 2], CLOSURE_TRADITIONAL + 1,
		 3, stClosureTypes[ 3], CLOSURE_PREFABRICATED + 1,
		 9, stClosureTypes[ 9], CLOSURE_VARIABLE + 1,
		15, stClosureTypes[15], CLOSURE_DUTCH_VARIABLE + 1,
		 5, stClosureTypes[ 5], CLOSURE_SOLID_WALL + 1,
		 6, stClosureTypes[ 6], CLOSURE_STUD_WALL + 1,
		 7, stClosureTypes[ 7], CLOSURE_STUD_WALL_SIDING + 1,
		 8, stClosureTypes[ 8], CLOSURE_BRICK_VENEER + 1,
		10, stClosureTypes[10], CLOSURE_PLASTER_REVEAL + 1,
		11, stClosureTypes[11], CLOSURE_INSULATED_REVEAL + 1,
		12, stClosureTypes[12], CLOSURE_INSULATED_FOR_RENOVATION + 1,
		13, stClosureTypes[13], CLOSURE_FINISH + 1,
		14, stClosureTypes[14], CLOSURE_AIR_SPACE + 1,
		 4, stClosureTypes[ 4], CLOSURE_CUSTOM + 1

	if gs_reveal_auto_changed_by_cc then
		! ui_warningsign.png: The reveal settings were changed.
		ui_pict 79, 430, 8 + pageStartY, 12,12, 1 ui_tooltip stCavityClosureUI[38]
	endif

	ui_separator 0, 28 + pageStartY, 444, 28 + pageStartY

	if iClosureType = CLOSURE_SOLID_WALL then
		ui_style 0, 1
		ui_outfield stClosureTypes[gs_closure_type_int], 0, 40 + pageStartY, 120, 16
	endif

	if	iClosureType = CLOSURE_STUD_WALL | \
		iClosureType = CLOSURE_STUD_WALL_SIDING | \
		iClosureType = CLOSURE_BRICK_VENEER then

		ui_style 0, 1
		ui_outfield stClosureTypes[gs_closure_type_int], 0, 40 + pageStartY, 120, 16

		if iClosureType = CLOSURE_BRICK_VENEER then
			call "Brick Veneer" parameters A = A,
				bEnableParapetInset			= bEnableParapetInset,
				bClosurePage				= bClosurePage,
			! --- String Resource ---
				gs_fsill					= gs_fsill,
				bOutsideTrim				= bDrawOutsideTrim,
				bInsideTrim					= bDrawInsideTrim,
				bSill						= bDrawSill,
				bBoard						= bDrawBoard,
				iBrickVeneerRevealDepth		= iBrickVeneerRevealDepth,
				stBrickVeneerRevealDepth	= stBrickVeneerRevealDepth,
				gs_brick_sill				= gs_brick_sill,
				gs_brick_sill_detlev_m		= gs_brick_sill_detlev_m,
				iBrickSilldetlevel			= iBrickSilldetlevel,
				stBrickVeneerTextUSA		= stBrickVeneerTextUSA,
				gs_metal					= gs_metal,
				isWindow					= isWindow,
				gs_IsCurved					= gs_IsCurved,
				bBrickSillUI				= bBrickSillUI
		endif
	else

		if  iClosureType = CLOSURE_TRADITIONAL | \
			(iClosureType = CLOSURE_VARIABLE & gs_ui_sub_tabpage_closure = 1) | \
			(iClosureType = CLOSURE_DUTCH_VARIABLE & gs_ui_sub_tabpage_closure = 1) | \
			iClosureType = CLOSURE_PREFABRICATED |\
			iClosureType = CLOSURE_FINISH |\
			iClosureType = CLOSURE_AIR_SPACE then

			! TODO C-165 delete
			if bTabFlatList then
				if gs_ui_sub_tabpage < 1 then gs_ui_sub_tabpage = 1
				if gs_ui_sub_tabpage > 2 then gs_ui_sub_tabpage = 2
	
				ui_infield{3} "gs_ui_sub_tabpage", 380, 266 - 25 - 2, 64,25,
					4, "uiTabsub_1", 2, 1,
					0,0, 28,21,
					1, "",	1,
					2, "",	2 ui_tooltip stSubTabpageToolTip
			endif
		else
			gs_ui_sub_tabpage = 1
		endif

		call "CavityClosure" parameters gs_macro_version = 12,
			iWindowShape				= iWindowShape,
		! --- Ganging
			gs_stack_left				= gs_stack_left,
			gs_stack_right				= gs_stack_right,
			gs_stack_top				= gs_stack_top,
			gs_stack_bottom				= gs_stack_bottom,
		! --- Corner Window
			bLeftCornerFunction			= bLeftCornerFunction,
			bRightCornerFunction		= bRightCornerFunction,
		! --- Cavity Closure ---
			gs_closure_type				= gs_closure_type,
			gs_ui_sub_tabpage			= gs_ui_sub_tabpage,
			gs_ui_sub_tabpage_closure	= gs_ui_sub_tabpage_closure,
			pageStartY					= pageStartY,
			gs_ClosureTypeEnable		= gs_ClosureTypeEnable,
			iCavityClosureSide			= iCavityClosureSide,
			iRevealType					= iRevealType,
			gs_mountingFrame			= gs_mountingFrame,
			isWindow					= isWindow,
			iClosureType				= iClosureType,
			gs_nTurn					= gs_nTurn,
			gs_bJoint					= gs_bJoint,
			gs_reveal_type				= gs_reveal_type,
			gs_reveal_double_innerType	= gs_reveal_double_innerType,
			iCavityClosureTurnDir		= iCavityClosureTurnDir,
		! --- Variable Closure (Spouwlat) ---
			gs_cc_dutch_ShowLeft			= gs_cc_dutch_ShowLeft,
			gs_cc_dutch_ShowRight			= gs_cc_dutch_ShowRight,
			gs_cc_dutch_ShowTop				= gs_cc_dutch_ShowTop,
			gs_cc_dutch_ShowBottom			= gs_cc_dutch_ShowBottom,
			gs_cc_dutch_GapAtOutsideSkin	= gs_cc_dutch_GapAtOutsideSkin,
			gs_cc_dutch_ClosureToSkin		= gs_cc_dutch_ClosureToSkin,
			gs_cc_dutch_ClosureToSide		= gs_cc_dutch_ClosureToSide,
			gs_cc_dutch_TurnToClosure		= gs_cc_dutch_TurnToClosure,
			gs_cc_dutch_matJointCustom		= gs_cc_dutch_matJointCustom,
		! --- Custom Cavity Closure ---
			gs_custom_cc_turn_in		= gs_custom_cc_turn_in,
			iCustomCCThicknessType = iCustomCCThicknessType,
			gs_custom_cc_separator		= gs_custom_cc_separator,
			gs_custom_cc_plaster		= gs_custom_cc_plaster,
			gs_turn_plaster_show_3D		= gs_turn_plaster_show_3D,
	! --- String Resource ---
			stCavityClosureSide				= stCavityClosureSide,
			stCavityClosureTurnDir			= stCavityClosureTurnDir,
			stDutchClosureToSide			= stDutchClosureToSide,
			stCavityClosureUI				= stCavityClosureUI,
			stClosureTypes					= stClosureTypes,
			stCavityClosureEditedJambSide	= stCavityClosureEditedJambSide,
			stCavityClosureEditedWallSide	= stCavityClosureEditedWallSide,
			stCavityClosureEditedSkinNumber	= stCavityClosureEditedSkinNumber,
			stCavityClosureTurnInThickness	= stCavityClosureTurnInThickness,
			stCavityClosureHatchOrientation	= stCavityClosureHatchOrientation,
			stRevealClusureUITips			= stRevealClusureUITips,
			iCustomCCEditSkin				= iCustomCCEditSkin
	endif

	if gs_ui_sub_tabpage = 1 then
		if (iClosureType = CLOSURE_NO | \
			iClosureType = CLOSURE_TRADITIONAL | \
			iClosureType = CLOSURE_PREFABRICATED | \
			iClosureType = CLOSURE_SOLID_WALL | \
			iClosureType = CLOSURE_STUD_WALL | \
			iClosureType = CLOSURE_STUD_WALL_SIDING) | \
		   (iClosureType = CLOSURE_BRICK_VENEER & not(isWindow)) | \
		   (iClosureType = CLOSURE_VARIABLE & gs_ui_sub_tabpage_closure = 2) |\
		   (iClosureType = CLOSURE_DUTCH_VARIABLE & gs_ui_sub_tabpage_closure = 2) |\
			iClosureType = CLOSURE_FINISH |\
			iClosureType = CLOSURE_AIR_SPACE then

			stTitlePrefix = ""
			if iClosureType = CLOSURE_VARIABLE then
				stTitlePrefix = stClosureTypes[9] + " - "
			endif
			if iClosureType = CLOSURE_DUTCH_VARIABLE then
				stTitlePrefix = stClosureTypes[15] + " - "
			endif

			call "TurnPlaster" parameters gs_macro_version = 12,
				bEnablePlasterLeftIn		= bEnablePlasterLeftIn,
				bEnablePlasterLeftOut		= bEnablePlasterLeftOut,
				bEnablePlasterRightIn		= bEnablePlasterRightIn,
				bEnablePlasterRightOut		= bEnablePlasterRightOut,
				gs_useWallFinishSkin		= gs_useWallFinishSkin,
				bStandaloneOnPage			= (iClosureType = CLOSURE_VARIABLE | iClosureType = CLOSURE_DUTCH_VARIABLE),
		! --- String Resource ---
				stCavityClosureUI			= stCavityClosureUI,
				stTitlePrefix				= stTitlePrefix,
				pageStartY					= pageStartY,
				gs_turn_plaster_dim_2D		= gs_turn_plaster_dim_2D
		endif
	endif

	if (iClosureType = CLOSURE_VARIABLE | iClosureType = CLOSURE_DUTCH_VARIABLE) & gs_ui_sub_tabpage = 1 then
		x1 = 227 - 44 * (iClosureType = CLOSURE_DUTCH_VARIABLE)
		if gs_ui_sub_tabpage_closure = 1 then
			ui_button ui_function, ">>", 410, 225 + pageStartY, 33, 22, 1 ! Set GLOB_UI_BUTTON_ID

			ui_style 0,1
			ui_outfield stWallholeStructureUI[1], x1, 213 + pageStartY, 180, 16		! Plaster Skin Definition
			ui_style 0,0
			ui_outfield stWallholeStructureUI[2], x1, 231 + pageStartY, 180, 16		! Go to Plaster Skin Settings...
		else
			ui_button ui_function, "<<", 410, 225 + pageStartY, 33, 22, 2 ! Set GLOB_UI_BUTTON_ID

			ui_style 0,1
			ui_outfield stWallholeStructureUI[3], x1, 213 + pageStartY, 180, 16		! Wall Closure Settings
			ui_style 0,0
			ui_outfield stWallholeStructureUI[4], x1, 231 + pageStartY, 180, 16		! Go Back to Closure Settings...

			ui_separator 0, 208 + pageStartY, 444, 208 + pageStartY
		endif
	endif
return


! --------------------------------------------------------------------------------
! Wall Opening Model Attributes
! --------------------------------------------------------------------------------
"pageWallOpModAttributes":

	itemID = 1
	ui_listfield iUiID_WallOpModelAttr, 0, 5, 444, 265 

	ui_listitem itemID, iUiID_WallOpModelAttr, "AC_HoleMaterialCurved",			0, "", ""	: itemID = itemID + 1

	if isWindow & bSillUSA & bBrickSillUI then
		ui_listitem itemID, iUiID_WallOpModelAttr, "",									0,	"",							`Кирпичный Отлив`	: itemID = itemID + 1
		if iClosureType = CLOSURE_BRICK_VENEER & gs_brick_sill then
			ui_listitem itemID, iUiID_WallOpModelAttr, "gs_sill_pen_3D", 				1,	"ui_list_contourPen_flat(1)",	stSillUI[29]	: itemID = itemID + 1
			ui_listitem itemID, iUiID_WallOpModelAttr, "gs_sill_mat",					1,	"ui_list_surface_flat(1)", 		stSillUI[12]	: itemID = itemID + 1	! Brick Sill
			if iBrickSilldetlevel = BRICKSILL_DETAILED then
				ui_listitem itemID, iUiID_WallOpModelAttr, "gs_brick_sill_mort_mat",	1,	"ui_list_surface_flat(1)", 		stSillUI[13]	: itemID = itemID + 1	! Brick Sill Mortar
			endif
		endif
	endif


	itemID = 10
	ui_listitem itemID, iUiID_WallOpModelAttr, "",									0,	"",						`Декоративная Перемычка`			: itemID = itemID + 1
	if bMasonryArch then
		ui_listitem itemID, iUiID_WallOpModelAttr, "gs_masonry_arch_brick_mat",		1,	"ui_list_surface_flat(1)",	`Кирпич`			: itemID = itemID + 1
		if gs_masonry_arch_structure_int = 2 then									! Brick Arch
			ui_listitem itemID, iUiID_WallOpModelAttr, "gs_masonry_arch_mort_mat",	1,	"ui_list_surface_flat(1)",	`Покрытие Раствора`
		endif
		itemID = itemID + 1
		if	gs_masonry_arch_int = MASONRY_JACK_ARCH |\								! Masonry Jack Arch
			gs_masonry_arch_int = MASONRY_JACK_ARCH_KEYSTONE |\						! Masonry Jack Arch with Keystone
			gs_masonry_arch_int = MASONRY_SEGMENT_ARCH_KEYSTONE then				! Masonry Segmented Arch with Keystone
	
			ui_listitem itemID, iUiID_WallOpModelAttr, "gs_masonry_arch_keystone_mat",	1,	"ui_list_surface_flat(1)",	`Покрытие Замкового Камня`
		endif
		itemID = itemID + 1
		if not(isCurtainWallOpeningSWE) then
			ui_listitem itemID, iUiID_WallOpModelAttr, "gs_masonry_arch_pen",			1,	"ui_list_pencolor_flat(1)",	stSillUI[42]			: itemID = itemID + 1
			ui_listitem itemID, iUiID_WallOpModelAttr, "bCustomMatNicheTop",			1,	""												: itemID = itemID + 1
			ui_listitem itemID, iUiID_WallOpModelAttr, "matNicheTop",					1,	"ui_list_surface_flat(1)"							: itemID = itemID + 1
		endif
	else
		itemID = itemID + 6
	endif

	if bEnableFaschen then
		ui_listitem itemID, iUiID_WallOpModelAttr, "", 0, "", `Декоративные Наличники Окна`					: itemID = itemID + 1
		ui_listitem itemID, iUiID_WallOpModelAttr, "gs_Faschen_plaster_mat",	1,	"ui_list_surface_flat(1)"	: itemID = itemID + 1
		ui_listitem itemID, iUiID_WallOpModelAttr, "gs_Faschen_brick_mat",		1,	"ui_list_surface_flat(1)"	: itemID = itemID + 1
		ui_listitem itemID, iUiID_WallOpModelAttr, "gs_Faschen_mort_mat",		1,	"ui_list_surface_flat(1)"	: itemID = itemID + 1

		ui_listitem itemID, iUiID_WallOpModelAttr, "gs_Faschen_pen",			1,	"ui_list_contourPen_flat(1)",	stSillUI[42]	: itemID = itemID + 1
		ui_listitem itemID, iUiID_WallOpModelAttr, "gs_Faschen_fill",			1,	"ui_list_fillPen_flat(1)"	: itemID = itemID + 1
		ui_listitem itemID, iUiID_WallOpModelAttr, "gs_Faschen_fg",				1,	"ui_list_fillPen_flat(1)"	: itemID = itemID + 1
		ui_listitem itemID, iUiID_WallOpModelAttr, "gs_Faschen_bg",				1,	"ui_list_fillBgPen_flat(1)"	: itemID = itemID + 1
	endif

	if bEnableMountingFrameForReveal then
		ui_listitem itemID, iUiID_WallOpModelAttr, "", 							0,	"",							`Монтажная Коробка`		: itemID = itemID + 1
		ui_listitem itemID, iUiID_WallOpModelAttr, "gs_mountingFrame_pen_view", 1,	"ui_list_contourPen_flat(1)",	stSillUI[42]			: itemID = itemID + 1
		ui_listitem itemID, iUiID_WallOpModelAttr, "gs_mountingFrame_mat", 		1,	"ui_list_surface_flat(1)",		`Покрытие`				: itemID = itemID + 1
	endif
return



