
unID = sh_unID

! ==============================================================================
! Simple Detail Level
! ==============================================================================

if	gs_optype_m = SASH_FIXED |\
	gs_optype_m = SASH_HOR_PIVOT |\
	gs_optype_m = SASH_VER_PIVOT |\
	gs_optype_m = SASH_VER_PIVOT_M |\
	gs_optype_m = SASH_SLIDING_HOR |\
	gs_optype_m = SASH_SLIDING_HOR_M |\
	gs_optype_m = SASH_DOUBLE_SLIDING_HOR |\
	gs_optype_m = SASH_DOUBLE_SLIDING_HOR_M |\
	gs_optype_m = SASH_SLIDING_VER |\
	gs_optype_m = SASH_DOUBLE_SLIDING_VER then

	if lod3D = 1 | lod3D = 5 | gs_optype_m = SASH_FIXED then
		addy gs_rebate_width*dyRate
		A = A - 2*gs_rebate_width
		B = B - 2*gs_rebate_width*dyRate
		if iMullionStyle = MULLION_SOLID_PANEL then
			addz -gs_frame_thk
		endif
	else
		if	gs_optype_m = SASH_HOR_PIVOT |\
			gs_optype_m = SASH_VER_PIVOT |\
			gs_optype_m = SASH_VER_PIVOT_M then
			addz -gs_sash_thk
		else
			addz -gs_frame_thk
		endif
	endif
else
	if lod3D <> 1 & lod3D <> 5 then
		addz -gs_rebate_depth
	endif
endif

bShowFrame = 1
if lod3D = 1 | lod3D = 5 then

	bShowFrame = 0

	vgn = 0
	hgn = 0

	if iMullionStyle = MULLION_CUSTOM then
		iMullionStyle = MULLION_NONE
	endif

	gs_full_edit = 0
endif


if gs_optype_m = SASH_FIXED then
	fix_sh_grmod = gs_sash_width
else
	fix_sh_grmod = 0
endif


! =============================================================================
! Open the Window
! =============================================================================

if GLOB_CONTEXT = 6 then	! Window Schedule - 3D view should NOT display sash in open position
	openingAngle = 0
	openingAngle2 = 0
endif

if not(bOpeningDirectionInside) then
	eloj_ref = -1
else
	eloj_ref = 1
endif

if gs_full_edit then

! -----------------------------------------------------------------------------
	if gs_optype_m = SASH_SIDE_HUNG then
		mulx -1

		addx	-a/2
		addy 	b/2
		rotx -90

		addy -gs_sash_thk/2
		if bEnableSEOpening then
			hotspot A,											-gs_sash_thk/2,								0, unID, openingAngle_01, 4+128 : unID=unID+1
			hotspot 0,											0,											1*eloj_ref, 			 unID, openingAngle_01, 7 : unID=unID+1
			hotspot A*sin(90+openingAngle_01)+gs_sash_thk/2*cos(90+openingAngle_01),A*cos(90+openingAngle_01)-gs_sash_thk/2*sin(90+openingAngle_01),0, unID, openingAngle_01, 5 : unID=unID+1
			hotspot 0, 											0, 											0, unID, openingAngle_01, 6 : unID=unID+1
		endif
		del 1

		del 2

		if openingAngle>90 then openingAngle=0
		if openingAngle<>0 then
			addz gs_rebate_depth
			roty -openingAngle
			addz -gs_rebate_depth
		endif

		addx a/2
		mulx -1
	endif

! -----------------------------------------------------------------------------
	if gs_optype_m = SASH_SIDE_HUNG_M then
		addx	-a/2
		addy 	b/2

		rotx -90
		addy -gs_sash_thk/2

		if bEnableSEOpening then
			hotspot A,											-gs_sash_thk/2,								0, unID, openingAngle_01, 4+128 : unID=unID+1
			hotspot 0,											0,											-1*eloj_ref, 			 unID, openingAngle_01, 7 : unID=unID+1
			hotspot A*sin(90+openingAngle_01)+gs_sash_thk/2*cos(90+openingAngle_01),A*cos(90+openingAngle_01)-gs_sash_thk/2*sin(90+openingAngle_01),0, unID, openingAngle_01, 5 : unID=unID+1
			hotspot 0, 											0, 											0, unID, openingAngle_01, 6 : unID=unID+1
		endif
		del 1
		del 2

		if openingAngle>90 then openingAngle=0

		if openingAngle<>0 then
			addz gs_rebate_depth
			roty -openingAngle
			addz -gs_rebate_depth
		endif

		addx a/2
	endif

endif


! =============================================================================
! Frame Model
! =============================================================================

if gs_penSash_fg < 1 then gs_penSash_fg = SYMB_FILL_PEN

sect_fill gs_fillSash, gs_penSash_bg, gs_penSash_fg, gs_frame_pen_cont

if iMullionStyle <> MULLION_CUSTOM & iMullionStyle <> MULLION_SOLID_PANEL then		! Don't draw in case of Custom Panel

	var_mater		= gs_frame_mat	! Sash front material
	var_mater2		= gs_frame_mat2	! Sash back material
	var_mater_side	= gs_frame_mat	! Sash side material

	if gs_frame_mat = gs_frame_mat2 then
		in_out_cikl = 1

		out_thk = 0
		part_thk = gs_sash_thk

		in_out_mask = 15
		in_out_mask2 = 13 + 2 * (gs_SashText_typ_num = 1)
		in_out_mask3 = 13 + 2 * (gs_SashText_typ_num = 1)
	else												! two bodies
		in_out_cikl = 2

		if not(bOpeningDirectionInside) then
			tempMat = var_mater
			var_mater = var_mater2
			var_mater2 = tempMat

			var_mater_side	= gs_frame_mat2
		else
			var_mater_side	= gs_frame_mat
		endif

		out_thk = gs_sash_thk/2 - gs_glass_thk/2
		part_thk = out_thk

		in_out_mask = 11
		in_out_mask2 = 9
		in_out_mask3 = 9 + 2 * (gs_SashText_typ_num = 1)
	endif


	matGrillSide	= gs_grill_mat
	matGrillTop		= gs_grill_mat2
	matGrillBottom	= gs_grill_mat2

	if (gs_grill_mat = gs_grill_mat2) |\
		iMullionPosition <> MULLION_THROUGHOUT |\
		(iMullionPosition = MULLION_THROUGHOUT & gs_glass_thk >= gth) then

		in_out_cikl_gr	= 1

		part_thk_grill	= gth

		if iMullionPosition = MULLION_INSIDE then
			matGrillSide	= gs_grill_mat2
		else
			matGrillSide	= gs_grill_mat
		endif
		if not(bOpeningDirectionInside) then
			matGrillTop		= gs_grill_mat
			matGrillBottom	= gs_grill_mat2
		else
			matGrillTop		= gs_grill_mat2
			matGrillBottom	= gs_grill_mat
		endif
	else
		in_out_cikl_gr	= 2

		out_thk_grill	= gth/2 - gs_glass_thk/2
		part_thk_grill	= out_thk_grill

		if not(bOpeningDirectionInside) then
			matGrillSide	= gs_grill_mat2
			matGrillTop		= gs_grill_mat
			matGrillBottom	= gs_grill_mat2
		else
			matGrillSide	= gs_grill_mat2
			matGrillTop		= gs_grill_mat2
			matGrillBottom	= gs_grill_mat
		endif
		if iMullionPosition = MULLION_INSIDE exor not(bOpeningDirectionInside) then
			matGrillSide	= gs_grill_mat2
		else
			matGrillSide	= gs_grill_mat
		endif
	endif

	pen gs_frame_pen
	material var_mater
	sect_fill gs_fillSash, gs_penSash_bg, gs_pensash_fg, gs_frame_pen_cont

	if bShowFrame & gs_optype_m <> SASH_FIXED then

		for ijk = 1 to in_out_cikl
			material var_mater2

			if gs_SashText_typ_num = 1 then
				base
				sprism_{2} var_mater2,var_mater2,var_mater2,
					4,
					0,0, 0,1, 0, 0,
					0,0, 0,1, part_thk, 0,
					-A/2+gs_sash_width,		bottomH1,			10,				var_mater2,
					-A/2,					A/2 * dxRate,		in_out_mask,	var_mater2,
					-A/2,					B + A/2 * dxRate,	10,				var_mater_side,
					-A/2+gs_sash_width,		topH1,				in_out_mask,	var_mater2

				sprism_{2} var_mater2,var_mater2,var_mater2,
					4,
					0,0, 0,1, 0, 0,
					0,0, 0,1, part_thk, 0,
					A/2-gs_sash_width,		 bottomH2,			10,				var_mater2,
					A/2,					-A/2 * dxRate,		in_out_mask,	var_mater_side,
					A/2,					 B - A/2 * dxRate,	10,				var_mater2,
					A/2-gs_sash_width,		 topH2,				in_out_mask,	var_mater2
				vert 0, 0, 0
				vert 0, 1, 0
				vert 1, 0, 0
				vert 0, 0, 1
				coor 2, -1, -2, -3, -4
				body 1

				base
				sprism_{2} var_mater2,var_mater2,var_mater2,
					4,
					0,0, 0,1, 0, 0,
					0,0, 0,1, part_thk, 0,
					-A/2,					B + A/2 * dxRate,	10,				var_mater2,
					-A/2+gs_sash_width,		topH1,				in_out_mask,	var_mater2,
					 A/2-gs_sash_width,		topH2,				10,				var_mater2,
					 A/2,					B - A/2 * dxRate,	in_out_mask,	var_mater_side
				vert 0, 0, 0
				vert cos(topAngle), -sin(topAngle), 0
				vert sin(topAngle),  cos(topAngle), 0
				vert 0, 0, 1
				coor 2, -1, -2, -3, -4
				body 1

				base
				sprism_{2} var_mater2,var_mater2,var_mater2,
					4,
					0,0, 0,1, 0, 0,
					0,0, 0,1, part_thk, 0,
					 A/2,					-A/2 * dxRate,	10,				var_mater2,
					 A/2-gs_sash_width,		 bottomH2,		in_out_mask,	var_mater2,
					-A/2+gs_sash_width,		 bottomH1,		10,				var_mater2,
					-A/2,					 A/2 * dxRate,	in_out_mask,	var_mater_side
				vert 0, 0, 0
				vert cos(topAngle), -sin(topAngle), 0
				vert sin(topAngle),  cos(topAngle), 0
				vert 0, 0, 1
				coor 2, -1, -2, -3, -4
				body 1
			endif

			if gs_SashText_typ_num = 2 then
				base
				sprism_{2} var_mater2,var_mater2,var_mater2,
					4,
					0,0, 0,1, 0, 0,
					0,0, 0,1, part_thk, 0,
					-A/2+gs_sash_width,		bottomH1,	10,				var_mater2,
					-A/2,					bottomH1,	in_out_mask2,	var_mater2,
					-A/2,					topH1,		8,				var_mater_side,
					-A/2+gs_sash_width,		topH1,		in_out_mask,	var_mater2

				sprism_{2} var_mater2,var_mater2,var_mater2,
					4,
					0,0, 0,1, 0, 0,
					0,0, 0,1, part_thk, 0,
					A/2-gs_sash_width,		bottomH2,	8,				var_mater2,
					A/2,					bottomH2,	in_out_mask2,	var_mater_side,
					A/2,					topH2,		8,				var_mater2,
					A/2-gs_sash_width,		topH2,		in_out_mask,	var_mater2
				vert 0, 0, 0
				vert 0, 1, 0
				vert 1, 0, 0
				vert 0, 0, 1
				coor 2, -1, -2, -3, -4
				body 1

				base
				sprism_{2} var_mater2,var_mater2,var_mater2,
					6,
					0,0, 0,1, 0, 0,
					0,0, 0,1, part_thk, 0,
					-A/2,					B + A/2 * dxRate,	in_out_mask,	var_mater_side,
					-A/2,					topH1,				8,				var_mater2,
					-A/2+gs_sash_width,		topH1,				in_out_mask,	var_mater2,
					 A/2-gs_sash_width,		topH2,				10,				var_mater2,
					 A/2,					topH2,				in_out_mask2,	var_mater_side,
					 A/2,					B - A/2 * dxRate,	in_out_mask,	var_mater_side
				vert 0, 0, 0
				vert cos(topAngle), -sin(topAngle), 0
				vert sin(topAngle),  cos(topAngle), 0
				vert 0, 0, 1
				coor 2, -1, -2, -3, -4
				body 1

				base
				sprism_{2} var_mater2,var_mater2,var_mater2,
					6,
					0,0, 0,1, 0, 0,
					0,0, 0,1, part_thk, 0,
					 A/2,					-A/2 * dxRate,	in_out_mask,	var_mater_side,
					 A/2,					 bottomH2,		8,				var_mater2,
					 A/2-gs_sash_width,		 bottomH2,		in_out_mask,	var_mater2,
					-A/2+gs_sash_width,		 bottomH1,		10,				var_mater2,
					-A/2,					 bottomH1,		in_out_mask2,	var_mater_side,
					-A/2,					 A/2 * dxRate,	in_out_mask,	var_mater_side
				vert 0, 0, 0
				vert cos(topAngle), -sin(topAngle), 0
				vert sin(topAngle),  cos(topAngle), 0
				vert 0, 0, 1
				coor 2, -1, -2, -3, -4
				body 1
			endif

			addz part_thk
			part_thk = gs_sash_thk - out_thk

			tempMat = var_mater
			var_mater = var_mater2
			var_mater2 = tempMat

			in_out_mask = 14
			in_out_mask2 = 12
			in_out_mask3 = 12
		next ijk

		del in_out_cikl
	endif
endif


! =============================================================================
! Glazing
! =============================================================================

body -1

if iMullionStyle <> MULLION_CUSTOM & iMullionStyle <> MULLION_SOLID_PANEL then		! Don't draw in case of Custom Panel

	pen gs_glass_pen
	material gs_glass_mat

	if lod3D = 5 then	! chinese
		addz -gs_frame_thk
		gl_chi_thk = gs_frame_thk
		gl_chi_mask = 13
	else
		if lod3D = 1 then	! Simple
			addz -gs_frame_thk/2 - gs_glass_thk/2
		else
			if gs_optype_m = SASH_FIXED then
				addz -gs_rebate_depth - gs_glass_thk/2
			else
				addz gs_sash_thk/2 - gs_glass_thk/2
			endif
		endif
		gl_chi_thk = gs_glass_thk
		gl_chi_mask = 5
	endif

	if gs_optype_m = SASH_FIXED then
		glassOffset = 0
	else
		glassOffset = gs_sash_width
	endif

	prism_ 5,gl_chi_thk,
		-A/2 + glassOffset,	bottomH1,	gl_chi_mask,
		 A/2 - glassOffset,	bottomH2,	gl_chi_mask,
		 A/2 - glassOffset,	topH2,			gl_chi_mask,
		-A/2 + glassOffset,	topH1,			gl_chi_mask,
		-A/2 + glassOffset,	bottomH1,	-1
	body -1

	del 1
endif


! ==============================================================================
! Opening Line
! ==============================================================================

if bOplines3d & (gs_optype_m <> SASH_FIXED) then
	sideHeightMod = 0
	topWidthMod = 0
	iOpeningType = gs_optype_m

	oplineGap = 0

	if lod3D = 5 then	! Chinese
		opLineDist = gs_frame_thk + 2 * oplineGap
		add -A/2 + gs_sash_width, gs_sash_width, 0
	else
		if lod3D = 1 then
			opLineDist = gs_glass_thk + 2 * oplineGap
			add -A/2 + gs_sash_width, gs_sash_width * dyRate, 0
		else
			opLineDist = gs_sash_thk + 2 * oplineGap
			addx -A/2
		endif
	endif

	if (lod3D = 1 | lod3D = 5) then	! Simple, Chinese
		addz -gs_frame_thk/2
	else
		addz gs_sash_thk/2
	endif

	opLineHeight = B - 2 * gs_sash_width * dyRate * (lod3D = 1 | lod3D = 5)

	bMirrored = (iOpeningType = SASH_SIDE_HUNG_M & gs_opline_style_m = 1) | (iOpeningType = SASH_SIDE_HUNG & gs_opline_style_m = 2)

	if iOpeningType = SASH_SIDE_HUNG_M then sideHeightMod = -(A - 2 * gs_sash_width * (lod3D = 1 | lod3D = 5)) * dxRate
	if iOpeningType = SASH_SIDE_HUNG then sideHeightMod = (A - 2 * gs_sash_width * (lod3D = 1 | lod3D = 5)) * dxRate

	add 0, (A - (2 * gs_sash_width * (lod3D = 1 | lod3D = 5)))*(bMirrored - 0.5) * dxRate, -opLineDist/2
	call "OpeningLines" parameters a = a - 2 * gs_sash_width * (lod3D = 1 | lod3D = 5),
				b					= opLineHeight,
				frameThickness		= opLineDist,
				iOpeningType		= iOpeningType,
				opLineType3dIn		= opLineType3dIn,
				opLineType3dOut		= opLineType3dOut,
				gs_opLinePen		= gs_opLinePen,
				gs_opline_style_m	= gs_opline_style_m,
				sideHeightMod		= sideHeightMod,
				topWidthMod			= topWidthMod
	del 3
endif


! =============================================================================
! Grids
! =============================================================================

pen gs_frame_pen

if iMullionPosition = MULLION_THROUGHOUT then
	gz = (gs_optype_m <> SASH_FIXED) * gs_sash_thk/2 - gth/2
else
	if (iMullionPosition = MULLION_INSIDE) exor not(bOpeningDirectionInside) then
		gz = (gs_optype_m <> SASH_FIXED) * gs_sash_thk/2 + gs_glass_thk/2
	else
		gz = (gs_optype_m <> SASH_FIXED) * gs_sash_thk/2 - gs_glass_thk/2 - gth
	endif
endif
gz = gz - (gs_optype_m = SASH_FIXED) * gs_rebate_depth


! -----------------------------------------------------------------------------
! H-V GRID
! -----------------------------------------------------------------------------

if iMullionStyle = MULLION_HVGRID then

	hgnn = ((A - 2 * gs_sash_width + gw + 2*fix_sh_grmod) / (vgn + 1)) - gw

	if gs_grill_mat = gs_grill_mat2 then				! One body, in case of similar materials
		in_out_cikl_gr = 1

		var_mater_grill = gs_grill_mat
		var_mater2_grill = gs_grill_mat

		part_thk_grill = gth

	else
		if bOpeningDirectionInside then
			temp_grill_mat	= gs_grill_mat
			gs_grill_mat	= gs_grill_mat2
			gs_grill_mat2	= temp_grill_mat
		endif

		var_mater_grill = gs_grill_mat
		var_mater2_grill = gs_grill_mat2

		if iMullionPosition = MULLION_INSIDE or iMullionPosition = MULLION_OUTSIDE or (iMullionPosition = MULLION_THROUGHOUT and gs_glass_thk>=gth ) then		!!Inside, Outside position
			in_out_cikl_gr = 1
			out_thk_grill = gth
			part_thk_grill = out_thk_grill
		else									!!Throughout position
			in_out_cikl_gr = 2
			out_thk_grill = gth/2 - gs_glass_thk/2
			part_thk_grill = out_thk_grill
		endif

	endif

	if iMullionPosition = MULLION_INSIDE then
		side_mat = var_mater2_grill
	else
		side_mat = var_mater_grill
	endif


	pen gs_frame_pen
	material gs_grill_mat

	if gs_optype_m = SASH_FIXED then
		addy B
	else
		addy B - gs_sash_width * dyRate
	endif
	rotx -90
	roty topAngle
	cutplane	! Cutplane at Top
	del 3

	if gs_optype_m = SASH_FIXED then
		addy 0
	else
		addy gs_sash_width * dyRate
	endif
	rotx 90
	roty -topAngle
	cutplane	! Cutplane at Top
	del 3

	_dB = A*tan(topAngle) 
	for ijk = 1 to in_out_cikl_gr

		if ijk = 1 then
			currentGrillThickness = part_thk_grill
		else
			currentGrillThickness = gth - out_thk_grill
		endif

		base

		! Vertical Grids
		if vgn > 0 then
			for i=1 to vgn
				addx (a-2*gs_sash_width+gw+2*fix_sh_grmod)/(vgn+1)
				add  -a/2+gs_sash_width-gw/2-fix_sh_grmod, 0, gz
				if gw > EPS then
					sprism_ matGrillTop,matGrillBottom,matGrillSide,
						5,
						0,0, 0,1, currentGrillThickness, 0,
						-gw/2,min(bottomH1, bottomH2),	15,
						 gw/2,min(bottomH1, bottomH2),	15,
						 gw/2,max(topH1, topH2),15,
						-gw/2,max(topH1, topH2),15,
						-gw/2,min(bottomH1, bottomH2),	-1
				else
					lin_ 0,gs_sash_width-fix_sh_grmod,0, 0,max(topH1, topH2),0
				endif
				del 1
			next i
			del vgn
			vert 0, 0, 0
			vert 0, 1, 0
			vert 1, 0, 0
			vert 0, 0, 1
			coor 2, -1, -2, -3, -4
			body 1
		endif

		! Horizontal Grids
		if hgn > 0 then
			addy  -_dB/2
			for i=1 to vgn+1
				for j=1 to hgn
					addy (B + _dB - 2*(gs_sash_width - fix_sh_grmod)*dyRate + gw) / (hgn + 1)
					add -(A-2*gs_sash_width+2*fix_sh_grmod)/2+hgnn/2, (gs_sash_width - fix_sh_grmod)*dyRate - gw/2, gz
					if gw > EPS then
						sprism_ matGrillTop,matGrillBottom,matGrillSide,
							5,
							0,0, 0,1, currentGrillThickness, 0,
							-hgnn/2,-gw/2,15,
							 hgnn/2,-gw/2,15,
							 hgnn/2, gw/2,15,
							-hgnn/2, gw/2,15,
							-hgnn/2,-gw/2,-1
					else
						lin_ -hgnn/2,0,0, hgnn/2,0,0
					endif
					del 1
				next j
				del hgn
				addx (a-2*gs_sash_width+gw+2*fix_sh_grmod)/(vgn+1)
			next i
			del vgn+2
			body -1
		endif

		addz currentGrillThickness

		matGrillSide = matGrillTop

	next ijk
	del in_out_cikl_gr

	cutend
	cutend
endif

! =============================================================================
! Solid Panel
! =============================================================================

if iMullionStyle = MULLION_SOLID_PANEL then

	sprism_{2} gs_panel_mat2, gs_panel_mat, gs_panel_mat2,
		4,
		0,0, 0,1, 0, 0,
		0,0, 0,1, gs_sash_thk, 0,
		-A/2,	A/2 * dxRate,		15,	gs_panel_mat2,
		-A/2,	B + A/2 * dxRate,	15,	gs_panel_mat2,
		A/2,	B - A/2 * dxRate,	15,	gs_panel_mat2,
		A/2,	-A/2 * dxRate,		15,	gs_panel_mat2

endif

! =============================================================================
! Custom Panel
! =============================================================================

if iMullionStyle = MULLION_CUSTOM & gs_cust_panel <> "" then

	addy B
	rotx -90
	roty topAngle
	cutplane
	del 3

	addy 0
	rotx 90
	roty -topAngle
	cutplane
	del 3

	if gs_optype_m = SASH_FIXED then
		addz -gs_rebate_depth - gs_glass_thk/2
		panelThk = gs_glass_thk
	else
		panelThk = gs_sash_thk
	endif
	BB = B + 2*(A/2 * tan(topAngle))

	add -A/2, -(A/2 * tan(topAngle)), 0
	call "Window_Panel_Collection" parameters A=A, B=BB, zzyzx=panelThk, gs_ptype=gs_cust_panel
	del 1

	if gs_optype_m = SASH_FIXED then del 1

	cutend
	cutend
endif

