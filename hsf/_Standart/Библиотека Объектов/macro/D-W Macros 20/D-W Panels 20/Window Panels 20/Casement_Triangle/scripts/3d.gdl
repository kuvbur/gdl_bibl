

! ==============================================================================
! Simple Detail Level
! ==============================================================================

if	gs_optype_m = SASH_FIXED |\
	gs_optype_m = SASH_HOR_PIVOT |\
	gs_optype_m = SASH_VER_PIVOT |\
	gs_optype_m = SASH_VER_PIVOT_M |\
	gs_optype_m = SASH_SLIDING_HOR |\
	gs_optype_m = SASH_SLIDING_HOR_M |\
	gs_optype_m = SASH_DOUBLE_SLIDING_HOR |\
	gs_optype_m = SASH_DOUBLE_SLIDING_HOR_M |\
	gs_optype_m = SASH_SLIDING_VER |\
	gs_optype_m = SASH_DOUBLE_SLIDING_VER then

	if lod3D = 1 | lod3D = 5 | gs_optype_m = SASH_FIXED then
		addy gs_rebate_width
		A = A - 2*gs_rebate_width
		B = B - 2*gs_rebate_width
		if iMullionStyle = MULLION_SOLID_PANEL then
			addz - gs_frame_thk
		endif
	else
		if	gs_optype_m = SASH_HOR_PIVOT |\
			gs_optype_m = SASH_VER_PIVOT |\
			gs_optype_m = SASH_VER_PIVOT_M then
			addz -gs_sash_thk
		else
			addz -gs_frame_thk
		endif
	endif
else
	if lod3D <> 1 & lod3D <> 5 then
		addz -gs_rebate_depth
	endif
endif

if lod3D = 1 | lod3D = 5 then
	vgn = 0
	hgn = 0

	if iMullionStyle = MULLION_CUSTOM then
		iMullionStyle = MULLION_NONE
	endif

	gs_full_edit = 0
endif


gs_sash_width = gs_sash_width * (gs_optype_m <> SASH_FIXED)

if abs(triangle_unID)<EPS then
	unID = 0
else
	unID = triangle_unID
endif

if GLOB_CONTEXT = 6 then	! Window Schedule - 3D view should NOT display sash in open position
	openingAngle_01 = 0
endif


! =============================================================================
! Angle and coordinate calculation
! =============================================================================

if abs(tec)<a/2 then
	tralpha=atn(b/(a/2+tec))
	trbeta=atn(b/(a/2-tec))
	trgamma=180-tralpha-trbeta
	rtrgamma=(gs_sash_width)/sin(trgamma/2)
endif

!Right angled triangle
if abs(tec-(a/2))<EPS then
	tralpha=atn(b/a)
	trbeta=90
	trgamma=180-tralpha-trbeta
	rtrgamma=(gs_sash_width)/sin(trgamma/2)
endif
if abs(tec-(-a/2))<EPS then
	tralpha=90
	trbeta=atn(b/a)
	trgamma=180-tralpha-trbeta
	rtrgamma=(gs_sash_width)/sin(trgamma/2)
endif

!Obtuse angled triangle
if tec>a/2 then
	tralpha=atn(b/(a/2+tec))
	trbeta=180-atn(b/(tec-a/2))
	trgamma=180-tralpha-trbeta
	rtrgamma=(gs_sash_width)/sin(trgamma/2)
endif
if tec<-a/2 then
	tralpha=180-atn(b/(-tec-a/2))
	trbeta=atn(b/(a/2-tec))
	trgamma=180-tralpha-trbeta
	rtrgamma=(gs_sash_width)/sin(trgamma/2)
endif

left_meet_x = (gs_sash_width)/tan(tralpha) + (gs_sash_width)/sin(tralpha)
right_meet_x = (gs_sash_width)/tan(trbeta) + (gs_sash_width)/sin(trbeta)


! =============================================================================
! Handling Inner-outer Sash
! =============================================================================

if gs_frame_mat = gs_frame_mat2 then				! One body, in case of similar materials
	in_out_cikl = 1

	gs_frame_mat2 = gs_frame_mat

	out_thk = 0
	part_thk = gs_sash_thk

	in_out_mask = 15
else												! two bodies
	in_out_cikl = 2

	! Inner-outer Material Control
	if bOpeningDirectionInside then
		temp_frame_mat	= gs_frame_mat
		gs_frame_mat	= gs_frame_mat2
		gs_frame_mat2	= temp_frame_mat
	endif

	out_thk = gs_sash_thk/2-gs_glass_thk/2
	part_thk = out_thk

	in_out_mask = 11
endif
var_mater = gs_frame_mat
var_mater2 = gs_frame_mat2


! =============================================================================
! 3D Window Model
! =============================================================================

sect_fill gs_fillSash, gs_penSash_bg, gs_pensash_fg, gs_frame_pen_cont


! =============================================================================
! Frame
! =============================================================================


if ((iMullionStyle <> MULLION_CUSTOM & iMullionStyle <> MULLION_SOLID_PANEL)| abs(gs_glass_thk) < EPS) & (lod3D = 2) & (gs_optype_m <> SASH_FIXED) then

	pen gs_frame_pen
	material gs_frame_mat

	for ijk = 1 to in_out_cikl
		material var_mater

		base
		sprism_{2} var_mater2,var_mater,var_mater2,
			4,
			0,0, 0,1, 0, 0,
			0,0, 0,1, part_thk, 0,
			-a/2,								0,									10,				var_mater,
			-a/2+left_meet_x,					gs_sash_width,						in_out_mask,	var_mater,
			tec+rtrgamma*cos(trgamma/2+trbeta),	b-rtrgamma*sin(trgamma/2+trbeta),	10,				var_mater,
			tec,								b,									in_out_mask,	var_mater
		vert 0, 0, 0
		vert cos(tralpha), sin(tralpha), 0
		vert sin(tralpha), cos(tralpha), 0
		vert 0, 0, 1
		coor 2, -1, -2, -3, -4
		body 1

		base
		sprism_{2} var_mater2,var_mater,var_mater2,
			4,
			0,0, 0,1, 0, 0,
			0,0, 0,1, part_thk, 0,
			a/2,								0,									10,				var_mater,
			a/2-right_meet_x,					gs_sash_width,						in_out_mask,	var_mater,
			tec+rtrgamma*cos(trgamma/2+trbeta),	b-rtrgamma*sin(trgamma/2+trbeta),	10,				var_mater,
			tec,								b,									in_out_mask,	var_mater
		vert 0, 0, 0
		vert cos(tralpha), -sin(tralpha), 0
		vert sin(tralpha), cos(tralpha), 0
		vert 0, 0, 1
		coor 2, -1, -2, -3, -4
		body 1

		! Bottom
		sprism_{2} var_mater2,var_mater,var_mater2,
			4,
			0,0, 0,1, 0, 0,
			0,0, 0,1, part_thk, 0,
			-a/2,				0,				in_out_mask,	var_mater,
			a/2, 				0,				10,				var_mater,
			a/2-right_meet_x,	gs_sash_width,	in_out_mask,	var_mater,
			-a/2+left_meet_x,	gs_sash_width,	10,				var_mater

		addz part_thk
		part_thk = gs_sash_thk-out_thk

		var_mater = gs_frame_mat2
		var_mater2 = gs_frame_mat2

		in_out_mask = 78

	next ijk
	del in_out_cikl
endif


! =============================================================================
! Grill
! =============================================================================

if iMullionStyle <> MULLION_CUSTOM & iMullionStyle <> MULLION_SOLID_PANEL then

	pen gs_sash_pen

	if iMullionStyle <> MULLION_NONE then
		hgnn = (b-2*gs_sash_width-hgn*gw)/(hgn+1)		! Glass pane width between grids

		! Vertical displacement
		if tec<-a/2 then
			vgnn=((a/2+abs(tec))-2*gs_sash_width-vgn*gw)/(vgn+1)
			vgstart=tec+gs_sash_width
		endif

		if tec>a/2 then
			vgnn=((a/2+abs(tec))-2*gs_sash_width-vgn*gw)/(vgn+1)
			vgstart=-a/2+gs_sash_width
		endif

		if abs(tec)<=a/2 then
			vgnn=(a-2*gs_sash_width-vgn*gw)/(vgn+1)
			vgstart=-a/2+gs_sash_width
		endif

		! Handling Inner-outer Grill -----------
		if gs_grill_mat = gs_grill_mat2 then				! One body, in case of similar materials
			in_out_cikl_gr = 1

			var_mater_grill = gs_grill_mat
			var_mater2_grill = gs_grill_mat

			part_thk_grill = gth
		else
			! Inner-outer Material Control -----------
			temp_grill_mat = gs_grill_mat
			temp_grill_mat2 = gs_grill_mat2
			if not(bOpeningDirectionInside) then
				gs_grill_mat=temp_grill_mat
				gs_grill_mat2=temp_grill_mat2
			else
				gs_grill_mat=temp_grill_mat2
				gs_grill_mat2=temp_grill_mat
			endif
			! ----------------------------------------

			var_mater_grill = gs_grill_mat
			var_mater2_grill = gs_grill_mat2

			if iMullionPosition = MULLION_INSIDE or iMullionPosition = MULLION_OUTSIDE or (iMullionPosition = MULLION_THROUGHOUT and gs_glass_thk>=gth ) then		! Inside, Outside position
				in_out_cikl_gr = 1
				out_thk_grill = gth
				part_thk_grill = out_thk_grill
			else									! Throughout position
				in_out_cikl_gr = 2
				out_thk_grill = gth/2 - gs_glass_thk/2
				part_thk_grill = out_thk_grill
			endif
		endif

		if iMullionPosition = MULLION_INSIDE then
			side_mat = var_mater2_grill
		else
			side_mat = var_mater_grill
		endif

		material gs_grill_mat

		if iMullionPosition = MULLION_THROUGHOUT then
			gz = (gs_optype_m <> SASH_FIXED) * gs_sash_thk/2 - gth/2
		else
			if (iMullionPosition = MULLION_INSIDE) exor not(bOpeningDirectionInside) then
				gz = (gs_optype_m <> SASH_FIXED) * gs_sash_thk/2 + gs_glass_thk/2
			else
				gz = (gs_optype_m <> SASH_FIXED) * gs_sash_thk/2 - gs_glass_thk/2 - gth
			endif
		endif
		gz = gz - (gs_optype_m = SASH_FIXED) * gs_rebate_depth

		! H-V STYLE GRID -------------------------------

		add -a/2+left_meet_x, gs_sash_width, 0
		rotz tralpha
		cutplane 1,0,1,0
		del 2

		add  a/2-right_meet_x, gs_sash_width, 0
		rotz -trbeta
		cutplane 1,0,1,0
		del 2

		for ijk = 1 to in_out_cikl_gr
			add vgstart+vgnn+gw/2, 0, gz
			for i=1 to vgn step 1
				if gw > EPS then
					sprism_ var_mater2_grill,var_mater_grill,side_mat,		! Vertical grids -----------
						5,
						0, 0, 0, 1, part_thk_grill, 0,
						-gw/2,	gs_sash_width,		15,
						gw/2,	gs_sash_width,		15,
						gw/2,	b-gs_sash_width,	15,
						-gw/2,	b-gs_sash_width,	15,
						-gw/2,	gs_sash_width,		-1
				else
					lin_ 0, gs_sash_width, 0, 0, b-gs_sash_width, 0
				endif
				addx vgnn+gw
			next i
			del vgn+1

			add vgstart,0,gz
			for i=1 to vgn+1 step 1
				addy gs_sash_width+hgnn+gw/2
				for j=1 to hgn step 1
					if gw > EPS then
						sprism_ var_mater2_grill,var_mater_grill,side_mat,
							5,
							0,0, 0,1, part_thk_grill, 0,
							0,		-gw/2,	15,
							vgnn,	-gw/2,	15,
							vgnn,	gw/2,	15,
							0,		gw/2,	15,
							0,		-gw/2,	-1
					else
						lin_ 0, 0, 0, vgnn, 0, 0
					endif
					addy hgnn+gw
				next j
				del hgn+1

				addx vgnn+gw
			next i
			del vgn+2
			body -1

			addz part_thk_grill

			part_thk_grill = gth - out_thk_grill

			var_mater_grill = gs_grill_mat2
			var_mater2_grill = gs_grill_mat2
			side_mat = gs_grill_mat2

		next ijk
		del in_out_cikl_gr

		cutend
		cutend
	endif


! =============================================================================
! Glazing
! =============================================================================

	if abs(gs_glass_thk) > EPS then
		pen gs_glass_pen
		material gs_glass_mat

		if gs_optype_m <> SASH_FIXED then
			if lod3d = 5 then	!!chinese
				addz -gs_sash_thk
				gl_chi_thk = gs_sash_thk
				gl_chi_mask = 13
			else
				if lod3D = 1 then	! Simple
					addz -gs_frame_thk/2 - gs_glass_thk/2
				else
					addz gs_sash_thk/2-gs_glass_thk/2
				endif
				gl_chi_thk = gs_glass_thk
				gl_chi_mask = 5
			endif
		else
			if lod3D = 5 then	! Chinese
				addz -gs_frame_thk
				gl_chi_thk = gs_frame_thk
				gl_chi_mask = 13
			else
				if lod3D = 1 then	! Simple
					addz -gs_frame_thk/2 - gs_glass_thk/2
				else
					addz -gs_rebate_depth - gs_glass_thk/2
				endif
				gl_chi_thk = gs_glass_thk
				gl_chi_mask = 5
			endif
		endif

		body -1

		prism_ 4,gl_chi_thk,
			-a/2+left_meet_x,					gs_sash_width,						gl_chi_mask,
			a/2-right_meet_x,					gs_sash_width,						gl_chi_mask,
			tec+rtrgamma*cos(trgamma/2+trbeta),	b-rtrgamma*sin(trgamma/2+trbeta),	gl_chi_mask,
			-a/2+left_meet_x,					gs_sash_width,						-1

		base
		vert 0, 0, 0
		vert 1, 0, 0
		vert 0, 1, 0
		vert 0, 0, 1
		coor 2, -1, -2, -3, -4
		body -1

		del 1
	endif
endif

! =============================================================================
! Custom Panel
! =============================================================================

if iMullionStyle = MULLION_SOLID_PANEL then
		if lod3d = 5 then	!!chinese
			gl_chi_mask = 13
		else
			gl_chi_mask = 15
		endif

		sprism_{2} gs_panel_mat2, gs_panel_mat, gs_panel_mat,
			4,
			0,0, 0,1, 0, 0,
			0,0, 0,1, gs_sash_thk, 0,
			-a/2+left_meet_x,					gs_sash_width,						gl_chi_mask,gs_panel_mat2,
			a/2-right_meet_x,					gs_sash_width,						gl_chi_mask,gs_panel_mat2,
			tec+rtrgamma*cos(trgamma/2+trbeta),	b-rtrgamma*sin(trgamma/2+trbeta),	gl_chi_mask,gs_panel_mat2,
			-a/2+left_meet_x,					gs_sash_width,						-1,gs_panel_mat2

		del 1
endif

! =============================================================================
! Custom Panel
! =============================================================================

if iMullionStyle = MULLION_CUSTOM & gs_cust_panel <> "" then
	add -a/2+left_meet_x, gs_sash_width, 0
	rotz tralpha
	cutplane 1,0,1,0
	del 2

	add  a/2-right_meet_x, gs_sash_width, 0
	rotz -trbeta
	cutplane 1,0,1,0
	del 2

	if gs_optype_m = SASH_FIXED then
		addz -gs_rebate_depth - gs_glass_thk/2
		panelThk = gs_glass_thk
	else
		panelThk = gs_sash_thk
	endif

	addx -A/2
	call "Window_Panel_Collection" parameters a=a, b=b, zzyzx=panelThk, gs_ptype=gs_cust_panel
	del 1

	if gs_optype_m = SASH_FIXED then del 1

	cutend
	cutend
endif


triangle_unID = unID

end triangle_unID
