

gs_fillFr		= gs_bFills * gs_fillFr
gs_penFr_fg		= gs_bFills * gs_penFr_fg
gs_penFr_bg		= gs_bFills * gs_penFr_bg

gs_fillLeaf		= gs_bFills * gs_fillLeaf
gs_penLeaf_fg	= gs_bFills * gs_penLeaf_fg
gs_penLeaf_bg	= gs_bFills * gs_penLeaf_bg

if gs_fillFr < 1	then gs_fillFr = SYMB_FILL
if gs_penFr_bg < 1	then gs_penFr_bg = SYMB_FBGD_PEN
if gs_penFr_fg < 1	then gs_penFr_fg = SYMB_FILL_PEN

if gs_fillLeaf < 1		then gs_fillLeaf = SYMB_FILL
if gs_penLeaf_bg < 1	then gs_penLeaf_bg = SYMB_FBGD_PEN
if gs_penLeaf_fg < 1	then gs_penLeaf_fg = SYMB_FILL_PEN

sliding_door = 0


bFeedBack = (GLOB_CONTEXT > 20 & GLOB_CONTEXT < 40)

call "OpeningOptions" parameters	gs_opening_dir_m			= 1,
									bWindow						= 1,
									bDoorWithSidelightSupport	= 1,
									bOverride_MVO_win_3D		= bOverride_MVO_win_3D,
									or_bWinOplines3d			= or_bWinOplines3d,
									or_iWinOpLineType3dIn		= or_iWinOpLineType3dIn,
									or_iWinOpLineType3dOut		= or_iWinOpLineType3dOut,
									or_iWinOplineStyle			= or_iWinOplineStyle,
									or_winOpLinePen				= or_winOpLinePen,
						returned_parameters bWinOplines3d,
											winOpLineType3dIn,
											winOpLineType3dOut,
											dummyopLineTypeSecondary,
											gs_win_opline_style_m,
											gs_winOpLinePen


if gs_frame_pen_cont < 1 then gs_frame_pen_cont = SYMB_SECT_PEN
if not(gs_shadow) then shadow off

if	gs_leaf_optype_m = LEAF_1L_PIVOT |\
	gs_leaf_optype_m = LEAF_1L_PIVOT_M then gs_opline_style_m = 1		! only "Hinges" orientation is valid

if gs_frame_style_m = FRAME_STYLE_WRAPPED_EXTRUSION then
	if WIDO_REVEAL_SIDE then
		addz gs_frame_oversize_thk
	else
		addz -gs_frame_oversize_thk
	endif
endif

unID = 1

! =============================================================================
! Chinese Specific
! =============================================================================

if lod3D = 5 then
	! Move the whole door to middle of wall with half of the original thickness
	if	gs_leaf_optype_m <> LEAF_1L_EXTERNAL_SLIDING & \
		gs_leaf_optype_m <> LEAF_1L_EXTERNAL_SLIDING_M & \
		gs_leaf_optype_m <> LEAF_2L_EXTERNAL_SLIDING then

		if gs_pocket then
			if WIDO_REVEAL_SIDE then
				addz (WIDO_SILL - WALL_THICKNESS/2 - gs_leaf_thk/2 + gs_frame_thk)
			else
				addz -(WIDO_SILL - WALL_THICKNESS/2  + gs_leaf_thk/2)
			endif
		else
			if WIDO_REVEAL_SIDE then
				addz (WIDO_SILL - WALL_THICKNESS/2 + gs_fthk/4) + gs_fthk/2
			else
				addz -(WIDO_SILL - WALL_THICKNESS/2 + gs_fthk/4)
			endif
		endif
	endif

	if gs_pocket then
		gs_frame_thk	= gs_leaf_thk
		gs_fthk			= gs_leaf_thk
		posLeafy		= 0
		posHole			= 0
	else
		if abs(gs_frame_thk) > EPS then
			gs_frame_thk	= gs_frame_thk/2
		else
			gs_frame_thk	= gs_leaf_thk/2
		endif
	endif
	gs_frame_thkin	= gs_frame_thk
	gs_frame_style_m = FRAME_STYLE_BLOCK
	gs_open_3D		= 0
	gs_open_3D_2	= 0
	gs_open3D		= 0
	gs_open3D_2		= 0
	sidel_temp_rebate_w = gs_rebate_width

	lar = lar - gs_rebate_width
	lal = lal - gs_rebate_width

	if gs_metaldoor then
		iDoorPanelType = 1
	endif
	if gs_entrancedoor then
		iDoorPanelType = 15
	endif
	if gs_storefront then
		iDoorPanelType = 7
		gs_sidelight_m = 1
	endif

	if gs_garage then
		iDoorPanelType = 1
		gs_sidelight_m = 1
	endif

	gs_sidelight_m = 1

	b_y_transom = b_y_transom + gs_rebate_width
	gs_rebate_width = 0
	thresholdModify = 0

	gs_door_rail = 0
endif


! =============================================================================
! Draw Ventilation Profile
! =============================================================================

isVentilationOverFrame = (bEnableVentilationProfile & bVentilationProfile & (iVentilationProfileType = VENTPROFILE_OVER_FRAME))

if isVentilationOverFrame then
	addy ac_unit_height
	if WIDO_REVEAL_SIDE then
		addz gs_frame_thk
		mulz -1
	endif
	call "Ventilation_profile" parameters	A							= ac_unit_width,
											VentilationProfileThickness	= VentilationProfileThickness,
											VentilationProfileHeight	= VentilationProfileHeight,
											gs_frame_thk				= gs_frame_thk,
											bVentilationProfile			= bVentilationProfile,
											iVentilationProfileType		= iVentilationProfileType,
											gs_ventProfile_pen			= gs_frame_pen,
											gs_ventProfile_pen_cont		= gs_frame_pen_cont,
											gs_ventProfile_fill			= gs_ventProfile_fill,
											gs_ventProfile_pen_bg		= gs_ventProfile_pen_bg,
											gs_ventProfile_pen_fg		= gs_ventProfile_pen_fg,
											gs_ventProfile_mat			= gs_ventProfile_mat
	if WIDO_REVEAL_SIDE then del 2

	pen gs_frame_pen
	material gs_frame_mat2
	cutpolya 5, 2, 0,
		-ac_unit_width/2, 0, 11+3*(WIDO_REVEAL_SIDE),
		-ac_unit_width/2, VentilationProfileHeight, 11+3*(WIDO_REVEAL_SIDE),
		ac_unit_width/2, VentilationProfileHeight, 11+3*(WIDO_REVEAL_SIDE),
		ac_unit_width/2, 0, 11+3*(WIDO_REVEAL_SIDE),
		-ac_unit_width/2, 0, -1
	del 1
endif


! =============================================================================
! Draw Door Frame
! =============================================================================

material gs_frame_mat
pen gs_frame_pen

if lod3D = 5 then	! Chinese
	fr_sect_fill_type	= gs_FillSdl
	fr_sect_fill_fg		= gs_penSdl_fg
	fr_sect_fill_bg		= gs_penSdl_bg
else
	fr_sect_fill_type	= gs_fillFr
	fr_sect_fill_fg		= gs_penFr_fg
	fr_sect_fill_bg		= gs_penFr_bg
endif

if gs_frame_width > EPS & not(gs_slidingext) then

	if not(gs_sidelight_left) & not(gs_sidelight_right) then
		if bArchedTop then
			iWindowShape = SHAPE_ARCHED
		else
			iWindowShape = SHAPE_RECTANGULAR
		endif
	endif

	if gs_sidelight_left & not(gs_sidelight_right) then
		if bArchedTop then
			iWindowShape = SHAPE_ARCHED_HALF_T_LEFT
		else
			iWindowShape = SHAPE_HALF_T_LEFT
		endif
	endif

	if not(gs_sidelight_left) & gs_sidelight_right then
		if bArchedTop then
			iWindowShape = SHAPE_ARCHED_HALF_T_RIGHT
		else
			iWindowShape = SHAPE_HALF_T_RIGHT
		endif
	endif

	if gs_sidelight_left & gs_sidelight_right then
		if bArchedTop then
			iWindowShape = SHAPE_ARCHED_T
		else
			iWindowShape = SHAPE_T
		endif
	endif

	call "DoorFrame" parameters all A			= ac_unit_width,
									B			= ac_unit_height,
				iWindowShape					= iWindowShape,
				gs_tolerance_left 				= gs_tolerance_left,
				gs_tolerance_upper 				= gs_tolerance_upper + VentilationProfileHeight * isVentilationOverFrame,
				gs_tolerance_left_2				= gs_tolerance_left_2,
				gs_tolerance_low_left_sl		= gs_tolerance_low_left_sl,
				gs_tolerance_right				= gs_tolerance_right,
				gs_tolerance_right_2			= gs_tolerance_right_2,
				gs_tolerance_low_right_sl		= gs_tolerance_low_right_sl,
				gs_frame_style_m				= gs_frame_style_m,
				gs_LeftMullion_Top				= gs_LeftMullion_Top,
				gs_RightMullion_Top				= gs_RightMullion_Top,
				gs_Transom_toLeft				= gs_Transom_toLeft,
				gs_Transom_toRight				= gs_Transom_toRight,
				gs_frame_wthk					= gs_frame_wthk,
				gs_sframe						= gs_sframe,
				gs_frame_thk					= gs_frame_thk,
				gs_frame_thkin					= gs_frame_thkin,
				gs_rebate_width					= gs_rebate_width,
				gs_frame_ovhg_left_out			= gs_frame_ovhg_left_out,
				gs_frame_ovhg_left_in			= gs_frame_ovhg_left_in,
				gs_frame_ovhg_right_out			= gs_frame_ovhg_right_out,
				gs_frame_ovhg_right_in			= gs_frame_ovhg_right_in,
				gs_frame_ovhg_top_out			= gs_frame_ovhg_top_out,
				gs_frame_ovhg_top_in			= gs_frame_ovhg_top_in,
				gs_frame_ovhg_bottom_out		= gs_frame_ovhg_bottom_out,
				gs_frame_ovhg_bottom_in			= gs_frame_ovhg_bottom_in,
				gs_sill_outside					= gs_sill_outside,
				gs_sill_outside_sl_left			= gs_sill_outside_sl_left,
				gs_sill_outside_sl_right		= gs_sill_outside_sl_right,
				gs_SashText_typ_num				= gs_SashText_typ_num,
				gs_frame_width_orig				= gs_frame_width_orig,
				gs_frw1							= gs_frame_width_left,
				gs_frw2							= gs_frame_width_right,
				gs_frwt							= gs_frame_width_upper,
				gs_frwm							= gs_frame_width,
				gs_frame_width_left_2			= gs_frame_width_left_2,
				gs_frame_width_low_left_sl		= gs_frame_width_low_left_sl,
				gs_frame_width_right_2			= gs_frame_width_right_2,
				gs_frame_width_low_right_sl		= gs_frame_width_low_right_sl,
				gs_frame_width_transom			= gs_frame_width_transom,
				gs_pocket_door_frame			= gs_pocket_door_frame,
				gs_door_transom					= gs_door_transom,
				gs_sidelight_width_left			= gs_sidelight_width_left,
				gs_sidelight_width_right		= gs_sidelight_width_right,
				gs_sidelight_right				= gs_sidelight_right,
				gs_sidelight_left				= gs_sidelight_left,
				gs_sidelight_parapet_hgt_left	= gs_sidelight_parapet_hgt_left,
				gs_sidelight_parapet_hgt_right	= gs_sidelight_parapet_hgt_right,
				gs_sash_width					= gs_sash_width,
				gs_sl_sash_width				= gs_sl_sash_width,
				nArchResolution					= res,
				gs_frame_mat					= gs_frame_mat,
				gs_frame_mat2					= gs_frame_mat2,
				bShowAddHotspots				= bShowAddHotspots,
				bShowAddHotspotsForIS			= bShowAddHotspotsForIS,
				bShowUnitHotspots				= bShowUnitHotspots,
				bShowEgressHotspots				= bShowEgressHotspots,
				bShowLeafHotspots				= bShowLeafHotspots,
				lod3D							= lod3D,
				gs_sliding_fixpanel_width_left	= gs_sliding_fixpanel_width_left,
				gs_sliding_fixpanel_width_right	= gs_sliding_fixpanel_width_right,
				gs_leaf_optype_m				= gs_leaf_optype_m,
				gs_optype_m_02					= gs_optype_m_02,
				gs_optype_m_09					= gs_optype_m_09,
				gs_optype_m_05					= gs_optype_m_05,
				gs_optype_m_10					= gs_optype_m_10,
				gs_optype_m_06					= gs_optype_m_06,
				iMullionStyle_02				= iMullionStyle_02,
				iMullionStyle_09				= iMullionStyle_09,
				iMullionStyle_05				= iMullionStyle_05,
				iMullionStyle_10				= iMullionStyle_10,
				iMullionStyle_06				= iMullionStyle_06,
				fr_sect_fill_type				= fr_sect_fill_type,
				fr_sect_fill_bg					= fr_sect_fill_bg,
				fr_sect_fill_fg					= fr_sect_fill_fg,
				gs_frame_pen_cont				= gs_frame_pen_cont,
				gs_frame_pen					= gs_frame_pen,
				res								= res
endif

body -1

if isVentilationOverFrame then
	cutend
endif

! Hotspots for "Associative" dimensioning

Diff_extra = gs_unit_extra_right - gs_unit_extra_left

if bShowUnitHotspots & gs_pocket & (GLOB_CONTEXT = 4 | GLOB_CONTEXT = 24 | GLOB_CONTEXT = 6) then
	unID=350
	addx Diff_extra
	hotspot ac_unit_width/2 - gs_unit_extra_right, b, 0, unID		:unID=unID+1
	hotspot -ac_unit_width/2 + gs_unit_extra_left, b, 0, unID	:unID=unID+1

	hotspot ac_unit_width/2 - gs_unit_extra_right, 0, 0, unID		:unID=unID+1
	hotspot -ac_unit_width/2 + gs_unit_extra_left, 0, 0, unID	:unID=unID+1
	del 1
endif


! =============================================================================
! Draw Door Panels
! =============================================================================

if gs_door_rail then
	rail_h_lo = 0.003
else
	rail_h_lo = 0
endif
bSecondPanel = 0

if iDoorPanelType <> 0 | bAsymmetricLeafs then

	if lod3D = 5 then	! Chinese
		sh_sect_fill_type	= gs_FillSdl
		sh_sect_fill_fg		= gs_penSdl_fg
		sh_sect_fill_bg		= gs_penSdl_bg
	else
		sh_sect_fill_type	= gs_fillLeaf
		sh_sect_fill_fg		= gs_penLeaf_fg
		sh_sect_fill_bg		= gs_penLeaf_bg
	endif

	frameDiff = 0
	if gs_sidelight_left & not(gs_sidelight_right) then
		if	gs_leaf_optype_m = LEAF_2L_SIDE_HUNG |\
			gs_leaf_optype_m = LEAF_2L_DOUBLE_ACTING |\
			gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS |\
			gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS_M then
			frameDiff = (gs_frame_width_left - gs_frame_width_right)
		endif
	endif

	bMirroredPanel	= 0
	if gs_leaf_optype_m = LEAF_1L_MULTIPANEL_M then bMirroredPanel = 1

	addy thresholdModify

	dim hd[]
	dim vd[]

	hgnrl	= gs_hor_gnum - 1
	vgnrl	= gs_ver_gnum - 1
	hd		= gs_hor_d
	vd		= gs_ver_d

	htyp	= gs_handle_type_m
	fulled	= gs_full_edit

	bMirroredOplines = 0

	LeftFrameWidth		= gs_frame_width_left
	if gs_sidelight_left then LeftFrameWidth = gs_frame_width_left_2
	RightFrameWidth		= gs_frame_width_right
	if gs_sidelight_right then RightFrameWidth = gs_frame_width_right_2


	if gs_pocket then
		TotalLeafWidthin3D = ac_leaf_width

		if gs_leaf_optype_m = LEAF_2L_POCKET then
			if gs_pocket_door_frame then
				a_x = -ac_leaf_width/2 + (gs_frame_width_left - gs_frame_width_right)/2
			else
				a_x = -ac_leaf_width/2 - (gs_tolerance_left - gs_tolerance_right)/2
			endif
		else
			if gs_pocket_door_frame then
				a_x = -ac_unit_width/2 + gs_frame_width_left
			else
				a_x = -ac_unit_width/2 - gs_tolerance_left
			endif
		endif
	else
		TotalLeafWidthin3D = ac_unit_width - gs_sidelight_width_right * gs_sidelight_right - gs_sidelight_width_left * gs_sidelight_left - \
						gs_frame_width_right * not(gs_sidelight_right) - gs_frame_width_left * not(gs_sidelight_left) + 2 * gs_rebate_width
		if gs_slidingext then
			TotalLeafWidthin3D = TotalLeafWidthin3D + LeftFrameWidth + RightFrameWidth + gs_tolerance_left + gs_tolerance_right
		endif

		a_x = -ac_unit_width/2 + gs_sidelight_width_left * gs_sidelight_left + gs_frame_width_left * not(gs_sidelight_left) - gs_rebate_width
		if gs_slidingext then
			a_x = a_x - LeftFrameWidth - gs_tolerance_left
		endif
	endif

	if gs_door_transom then
		TotalLeafHeightin3D = ac_unit_height - gs_transom_height + gs_rebate_width
	else
		TotalLeafHeightin3D = ac_unit_height - gs_frame_width_upper + gs_rebate_width
	endif

	! =============================================================================
	! 1 Leaf Panels
	! =============================================================================

	if	gs_leaf_optype_m = LEAF_1L_SIDE_HUNG |\
		gs_leaf_optype_m = LEAF_1L_SIDE_HUNG_M |\
		gs_leaf_optype_m = LEAF_1L_DOUBLE_ACTING |\
		gs_leaf_optype_m = LEAF_1L_DOUBLE_ACTING_M then

		aaa = TotalLeafWidthin3D
		bbb = TotalLeafHeightin3D - thresholdModify

		addx a_x + aaa/2
		mulx -1

		! -------------- HOTSPOT EDITING
		if gs_full_edit & GLOB_CONTEXT <> 4 & GLOB_CONTEXT <> 24 & GLOB_CONTEXT <> 6 then
			addx -aaa/2

			hotspot aaa,					gs_han_height,	 0,						unID,	gs_open_3D,	4+128		: unID = unID + 1
			hotspot aaa*cos(gs_open_3D),	gs_han_height,	-aaa*sin(gs_open_3D),	unID,	gs_open_3D,	5		: unID = unID + 1
			hotspot 0,						gs_han_height,	 0,						unID,	gs_open_3D,	6			: unID = unID + 1
			hotspot 0,						0,				 0,						unID,	gs_open_3D,	7			: unID = unID + 1

			del 1
		endif


		! -------------- Door Leaf

		bMiddleLine = 0

		addx -aaa/2
		roty gs_open_3D
		addx aaa/2

		gosub "Leaf_Panel"

		del 5

	endif


	! =============================================================================
	! 2 Leaf Panels
	! =============================================================================

	if	gs_leaf_optype_m = LEAF_2L_SIDE_HUNG |\
		gs_leaf_optype_m = LEAF_2L_DOUBLE_ACTING |\
		gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS |\
		gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS_M then

		addx a_x+TotalLeafWidthin3D-lar

		for i=1 to 2
			if i=1 then
				aaa = lar
				htyp = gs_handle_type_m
				fulled = gs_full_edit
			else
				aaa = lal
				if gs_handle_uniform then
					htyp = gs_handle_type_m
				else
					htyp = gs_handle_type2_m
				endif
				fulled=0
			endif

			bbb = TotalLeafHeightin3D - thresholdModify

			addx aaa/2
			mulx -1

			! -------------- HOTSPOT EDITING
			if gs_full_edit & GLOB_CONTEXT <> 4 & GLOB_CONTEXT <> 24 & GLOB_CONTEXT <> 6 then
				addx -aaa/2

				if i=1 then
					hotspot aaa,					gs_han_height,	 0,						unID,	gs_open_3D,		4+128		: unID = unID + 1
					hotspot aaa*cos(gs_open_3D),	gs_han_height,	-aaa*sin(gs_open_3D),	unID,	gs_open_3D,		5			: unID = unID + 1
					hotspot 0,						gs_han_height,	 0,						unID,	gs_open_3D,		6			: unID = unID + 1
					hotspot 0,						0,				 0,						unID,	gs_open_3D,		7			: unID = unID + 1
				else
					hotspot aaa,					gs_han_height,	 0,						unID,	gs_open_3D_2,	4+128		: unID = unID + 1
					hotspot aaa*cos(gs_open_3D_2),	gs_han_height,	-aaa*sin(gs_open_3D_2),	unID,	gs_open_3D_2,	5			: unID = unID + 1
					hotspot 0,						gs_han_height,	 0,						unID,	gs_open_3D_2,	6			: unID = unID + 1

					if gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS then
						hotspot 0,					0,					0,					unID,	gs_open_3D_2,	7			: unID = unID + 1
					else
						hotspot 0,					2*gs_han_height,	0,					unID,	gs_open_3D_2,	7			: unID = unID + 1
					endif
				endif

				del 1
			endif


			if i=1 then !Either there is just one panel, or two, and this is the main panel
				hgnrl=gs_hor_gnum - 1
				vgnrl=gs_ver_gnum - 1
				hd=gs_hor_d
				vd=gs_ver_d
			else
				if bAsymmetricLeafs then !Side panel in double door asymmetric
					hgnrl=gs_hor_gnum2 - 1
					vgnrl=gs_ver_gnum2 - 1
					hd=gs_hor_d2
					vd=gs_ver_d2
				else !Second panel in double doors
					if iDoorPanelType = 45 then !French panel, with common settings on the two door panels
						hgnrl=gs_hor_gnum - 1
						vgnrl=gs_ver_gnum - 1
						hd=gs_hor_d
						vd=gs_ver_d
					else !H-V Grid
						hgnrl=gs_hor_gnum4 - 1
						vgnrl=gs_ver_gnum4 - 1
						hd=gs_hor_d4
						vd=gs_ver_d4
					endif
				endif
			endif
			bMiddleLine = (i = 1)

			addx -aaa/2
			if i=1 then
				roty gs_open_3D
			else
				roty gs_open_3D_2
			endif
			addx aaa/2

			bSecondPanel = (((iOpeningMethod = OPENMETHOD_OPEN_DOUB) & not(bBombShelter)) & i = 2)
			gosub "Leaf_Panel"

			del 3

			if i = 1 and (iDoorPanelType <> 0) and abs(gs_open_3d) < EPS then
				model wire
				plane 4,
					aaa/2, bbb, 0,
					aaa/2, bbb, gs_leaf_thk,
					aaa/2, 0, gs_leaf_thk,
					aaa/2, 0, 0
				model solid
			endif

			body -1
			del 2

			mulx -1

			if gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS | gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS_M then
				mulz -1
				addz -gs_leaf_thk
			endif
		next i

		if gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS | gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS_M then del 4
		del 3
	endif


	! =============================================================================
	! Pivot Door Leafs
	! =============================================================================

	if	gs_leaf_optype_m = LEAF_1L_PIVOT |\
		gs_leaf_optype_m = LEAF_1L_PIVOT_M then

		aaa = TotalLeafWidthin3D
		bbb = TotalLeafHeightin3D - thresholdModify

		addx a_x+aaa/2
		mulx -1

		! -------------- HOTSPOT EDITING
		if gs_full_edit & GLOB_CONTEXT <> 4 & GLOB_CONTEXT <> 24 & GLOB_CONTEXT <> 6 then
			add -aaa/2, 0, 0!gs_leaf_thk/2

			hotspot 0, 				0, 0, unID, gs_pivotOffset, 1+128 : unID = unID + 1
			hotspot gs_pivotOffset, 0, 0, unID, gs_pivotOffset, 2 : unID = unID + 1
			hotspot -1, 			0, 0, unID, gs_pivotOffset, 3 : unID = unID + 1

			hotspot 0, 				bbb, 0, unID, gs_pivotOffset, 1+128 : unID = unID + 1
			hotspot gs_pivotOffset, bbb, 0, unID, gs_pivotOffset, 2 : unID = unID + 1
			hotspot -1, 			bbb, 0, unID, gs_pivotOffset, 3 : unID = unID + 1

			addx gs_pivotOffset

			hotspot aaa - gs_pivotOffset,															gs_han_height,	 gs_leaf_thk/2,											unID,	gs_open_3D,	4+128	: unID = unID + 1
			hotspot (aaa - gs_pivotOffset) * cos(gs_open_3D) + (gs_leaf_thk/2) * sin(gs_open_3D),	gs_han_height,	-(aaa - gs_pivotOffset) * sin(gs_open_3D) + (gs_leaf_thk/2) * cos(gs_open_3D),	unID,	gs_open_3D,	5	: unID = unID + 1
			hotspot 0,																				gs_han_height,	 0,														unID,	gs_open_3D,	6	: unID = unID + 1
			hotspot 0,																				0,	 			 0,														unID,	gs_open_3D,	7	: unID = unID + 1

			del 2
		endif


		! -------------- Door Leaf

		bMiddleLine = 0
		htyp=gs_handle_type_m

		addx -aaa/2 + gs_pivotOffset
		roty gs_open_3D
		addx aaa/2 - gs_pivotOffset

		gosub "Leaf_Panel"

		del 5
	endif


	! =============================================================================
	! Sliding Leafs
	! =============================================================================

	if	gs_leaf_optype_m = LEAF_2L_1SLIDING |\
		gs_leaf_optype_m = LEAF_2L_1SLIDING_M |\
		gs_leaf_optype_m = LEAF_2L_2SLIDING |\
		gs_leaf_optype_m = LEAF_2L_2SLIDING_M |\
		gs_leaf_optype_m = LEAF_3L_2SLIDING |\
		gs_leaf_optype_m = LEAF_3L_2SLIDING_M |\
		gs_leaf_optype_m = LEAF_4L_2SLIDING |\
		gs_leaf_optype_m = LEAF_4L_3SLIDING |\
		gs_leaf_optype_m = LEAF_4L_3SLIDING_M |\
		gs_leaf_optype_m = LEAF_4L_4SLIDING |\
		gs_leaf_optype_m = LEAF_4L_4SLIDING_M then

		aaa = TotalLeafWidthin3D/SlidLeafNum + PanelElongOverlap
		bbb = TotalLeafHeightin3D - rail_h_lo - thresholdModify

		addx a_x+TotalLeafWidthin3D/2

		if	gs_leaf_optype_m = LEAF_2L_1SLIDING |\
			gs_leaf_optype_m = LEAF_2L_1SLIDING_M |\
			gs_leaf_optype_m = LEAF_2L_2SLIDING |\
			gs_leaf_optype_m = LEAF_2L_2SLIDING_M |\
			gs_leaf_optype_m = LEAF_4L_2SLIDING |\
			gs_leaf_optype_m = LEAF_4L_4SLIDING |\
			gs_leaf_optype_m = LEAF_4L_4SLIDING_M then

			railWidth = 2 * gs_leaf_thk
		endif

		if	gs_leaf_optype_m = LEAF_3L_2SLIDING |\
			gs_leaf_optype_m = LEAF_3L_2SLIDING_M then

			railWidth = 3 * gs_leaf_thk
		endif

		if	gs_leaf_optype_m = LEAF_4L_3SLIDING |\
			gs_leaf_optype_m = LEAF_4L_3SLIDING_M then

			railWidth = 4 * gs_leaf_thk
		endif

		gosub	"Rail_for_SlidingFolding"

		mulx -1
		addy rail_h_lo

		unID = 300

		temp_bOplines3d = bOplines3d

		hgnrl=gs_hor_gnum - 1
		vgnrl=gs_ver_gnum - 1
		hd=gs_hor_d
		vd=gs_ver_d

		if gs_leaf_optype_m <> LEAF_4L_2SLIDING & gs_leaf_optype_m <> LEAF_4L_4SLIDING then

			if gs_full_edit & GLOB_CONTEXT <> 6 then
				add TotalLeafWidthin3D/2, 0, SlidLeafNum * gs_leaf_thk + (SlidLeafNum-1) * gs_leaf_gap
				hotspot 0, 				gs_han_height,	0,	unID, gs_open3D, 1+128 : unID=unID+1
				hotspot -gs_open3D, 	gs_han_height,	0,	unID, gs_open3D, 2 : unID=unID+1
				hotspot 1, 				gs_han_height,	0,	unID, gs_open3D, 3 : unID=unID+1
				del 1

				if gs_leaf_optype_m = LEAF_2L_2SLIDING then
					addx -TotalLeafWidthin3D/2
					hotspot 0, 				gs_han_height,	gs_leaf_thk,	unID, gs_open3D_2, 1+128 : unID=unID+1
					hotspot gs_open3D_2, 	gs_han_height,	gs_leaf_thk,	unID, gs_open3D_2, 2 : unID=unID+1
					hotspot -1, 			gs_han_height,	gs_leaf_thk,	unID, gs_open3D_2, 3 : unID=unID+1
					del 1
				endif
			endif

			addx -TotalLeafWidthin3D/2+aaa/2
			for i=1 to SlidLeafNum

				if i = 2 & SlidLeafNum < 3 then
					if iDoorPanelType = 45 then !French panel, with common settings on the two door panels
						hgnrl=gs_hor_gnum - 1
						vgnrl=gs_ver_gnum - 1
						hd=gs_hor_d
						vd=gs_ver_d
					else
						hgnrl=gs_hor_gnum4 - 1
						vgnrl=gs_ver_gnum4 - 1
						hd=gs_hor_d4
						vd=gs_ver_d4
					endif
				endif

				if i=SlidLeafNum | (i=1 & (gs_leaf_optype_m = LEAF_2L_2SLIDING | gs_leaf_optype_m = LEAF_4L_4SLIDING)) then
					htyp=gs_handle_type_m
					fulled=0
				else
					htyp=0
					fulled=gs_full_edit
				endif

				if i=SlidLeafNum then
					addx -gs_open3D
				else
					if i <> 1 & (gs_leaf_optype_m = LEAF_3L_2SLIDING | gs_leaf_optype_m = LEAF_4L_3SLIDING) then
						addx ((TotalLeafWidthin3D-gs_open3D-aaa)/(SlidLeafNum-1) - aaa + gs_leaf_overlap) * (i-1)
					endif
					if i = 1 & gs_leaf_optype_m = LEAF_2L_2SLIDING then addx gs_open3D_2
				endif

				if i = 1 & gs_leaf_optype_m <> LEAF_2L_2SLIDING & gs_leaf_optype_m <> LEAF_4L_4SLIDING then
					bOplines3d = 0
				else
					bOplines3d = temp_bOplines3d
				endif

				if i = 1 & gs_leaf_optype_m = LEAF_2L_2SLIDING then mulx -1

				bMiddleLine = 0

				sliding_door = 1

				gosub "Leaf_Panel"

				if i = 1 & gs_leaf_optype_m = LEAF_2L_2SLIDING then del 1


				if i=SlidLeafNum then
					del 1
				else
					if i = 1 & gs_leaf_optype_m = LEAF_2L_2SLIDING then del 1
					if i <> 1 & (gs_leaf_optype_m = LEAF_3L_2SLIDING | gs_leaf_optype_m = LEAF_4L_3SLIDING) then del 1
				endif

				add aaa - gs_leaf_overlap, 0, (gs_leaf_thk + gs_leaf_gap) * (lod3D<>5)
			next i
			del SlidLeafNum+1
		else
			if gs_full_edit & GLOB_CONTEXT <> 6 then
				hotspot 0, 				gs_han_height,	2*gs_leaf_thk + gs_leaf_gap,	unID, gs_open3D, 1+128 : unID=unID+1
				hotspot -gs_open3D, 	gs_han_height,	2*gs_leaf_thk + gs_leaf_gap,	unID, gs_open3D, 2 : unID=unID+1
				hotspot 1, 				gs_han_height,	2*gs_leaf_thk + gs_leaf_gap,	unID, gs_open3D, 3 : unID=unID+1

				if gs_leaf_optype_m = LEAF_4L_4SLIDING then
					addx -TotalLeafWidthin3D/2
					hotspot 0, 				gs_han_height,	gs_leaf_thk,	unID, gs_open3D_2, 1+128 : unID=unID+1
					hotspot gs_open3D_2, 	gs_han_height,	gs_leaf_thk,	unID, gs_open3D_2, 2 : unID=unID+1
					hotspot -1, 			gs_han_height,	gs_leaf_thk,	unID, gs_open3D_2, 3 : unID=unID+1
					del 1

					addx TotalLeafWidthin3D/2
					hotspot 0, 				gs_han_height,	gs_leaf_thk,	unID, gs_open3D_2, 1+128 : unID=unID+1
					hotspot -gs_open3D_2, 	gs_han_height,	gs_leaf_thk,	unID, gs_open3D_2, 2 : unID=unID+1
					hotspot 1, 				gs_han_height,	gs_leaf_thk,	unID, gs_open3D_2, 3 : unID=unID+1
					del 1
				endif
			endif

			for i = 1 to 2
				addx TotalLeafWidthin3D/2 - aaa/2

				for j = 1 to 2
					if j=1 & gs_leaf_optype_m = LEAF_4L_2SLIDING then
						htyp=0
						fulled=gs_full_edit
						bOplines3d = 0
					else
						htyp=gs_handle_type_m
						fulled=0
						bOplines3d = temp_bOplines3d
					endif

					if j = 2 then
						addx gs_open3D
						mulx -1
					else
						if gs_leaf_optype_m = LEAF_4L_4SLIDING then addx -gs_open3D_2
					endif

					bMiddleLine = 0

					sliding_door = 1

					gosub "Leaf_Panel"

					if j = 2 then
						del 2
					else
						if gs_leaf_optype_m = LEAF_4L_4SLIDING then del 1
					endif

					add -aaa + gs_leaf_overlap, 0, (gs_leaf_thk + gs_leaf_gap) * (lod3D<>5)
				next j
				del 3
				mulx -1
			next i
			del 2
		endif
		del 3
	endif


	! =============================================================================
	! External Sliding Leafs
	! =============================================================================

	if	gs_leaf_optype_m = LEAF_1L_EXTERNAL_SLIDING |\
		gs_leaf_optype_m = LEAF_1L_EXTERNAL_SLIDING_M then

		if WIDO_REVEAL_SIDE then addz -WALL_THICKNESS

		aaa = TotalLeafWidthin3D
		bbb = ac_wallhole_height

		addx a_x + TotalLeafWidthin3D/2

		unID = 1
		if gs_full_edit & GLOB_CONTEXT <> 6 then
			hotspot -aaa/2, 			gs_han_height, -gs_leaf_thk-posHole,	unID, gs_open3D, 1+128	:	unID=unID+1
			hotspot -aaa/2+gs_open3D,	gs_han_height, -gs_leaf_thk-posHole,	unID, gs_open3D, 2		:	unID=unID+1
			hotspot -aaa,				gs_han_height, -gs_leaf_thk-posHole,	unID, gs_open3D, 3		:	unID=unID+1
		endif

		gosub	"Rail_for_SlidingExternal"
		bbb = ac_wallhole_height - rail_h_do - rail_h_up

		htyp=gs_handle_type_m

		sliding_door = 1
		bMiddleLine = 0

		add gs_open3D, rail_h_do, -gs_leaf_thk-posHole
		mulx -1

		gosub "Leaf_Panel"

		del 3

		if WIDO_REVEAL_SIDE then del 1
	endif


	! =============================================================================
	! External Double Sliding Leafs
	! =============================================================================

	if	gs_leaf_optype_m = LEAF_2L_EXTERNAL_SLIDING then

		if WIDO_REVEAL_SIDE then addz -WALL_THICKNESS

		aaa = TotalLeafWidthin3D/2
		bbb = ac_wallhole_height

		addx a_x + TotalLeafWidthin3D/2

		unID = 1
		if gs_full_edit & GLOB_CONTEXT <> 6 then
			hotspot 0, 			gs_han_height, -gs_leaf_thk-posHole,	unID, gs_open3D, 1+128	:	unID=unID+1
			hotspot gs_open3D,	gs_han_height, -gs_leaf_thk-posHole,	unID, gs_open3D, 2		:	unID=unID+1
			hotspot -1,			gs_han_height, -gs_leaf_thk-posHole,	unID, gs_open3D, 3		:	unID=unID+1
		endif

		gosub	"Rail_for_SlidingExternal"
		bbb = ac_wallhole_height - rail_h_do - rail_h_up

		htyp=gs_handle_type_m

		sliding_door = 1
		bMiddleLine = 0

		add 0, rail_h_do, -gs_leaf_thk-posHole

		for i = 1 to 2
			mulx -1
			addx -aaa/2-gs_open3D
				gosub "Leaf_Panel"
			del 1
		next i
		del 4

		if WIDO_REVEAL_SIDE then del 1
	endif


	! =============================================================================
	! Single Pocket Door Leaf
	! =============================================================================

	if	gs_leaf_optype_m = LEAF_1L_POCKET |\
		gs_leaf_optype_m = LEAF_1L_POCKET_M then

		aaa = TotalLeafWidthin3D

		if gs_pocket_door_frame then
			heightLeaf = ac_leaf_height
		else
			heightLeaf = ac_wallhole_height
		endif

		if gs_door_rail then
			heightRail = heightLeaf
			lengthRail = 2 * aaa	! - gs_han_pos

			heightLeaf = heightLeaf - posHole * gs_door_rail * ((gs_door_rail_ext_m = EXT_RAIL_BOTT | gs_door_rail_ext_m = EXT_RAIL_BOTT_TOP) + (gs_door_rail_ext_m = EXT_RAIL_TOP | gs_door_rail_ext_m = EXT_RAIL_BOTT_TOP))
		endif

		addx a_x + TotalLeafWidthin3D/2

		gosub	"Rail_for_Pocket"

		bbb = heightLeaf

		unID = 1
		if gs_full_edit & GLOB_CONTEXT <> 6 then
			hotspot -aaa/2, 			gs_han_height, posLeafy,	unID, gs_open3D, 1+128	:	unID=unID+1
			hotspot -aaa/2+gs_open3D,	gs_han_height, posLeafy,	unID, gs_open3D, 2		:	unID=unID+1
			hotspot -aaa,				gs_han_height, posLeafy,	unID, gs_open3D, 3		:	unID=unID+1
		endif

		htyp=gs_handle_type_m

		sliding_door = 1
		bMiddleLine = 0

		if gs_door_rail & (gs_door_rail_ext_m = EXT_RAIL_BOTT | gs_door_rail_ext_m = EXT_RAIL_BOTT_TOP) then	addy posHole

		add gs_open3D, 0, posLeafy + posHole
		mulx -1

		gosub "Leaf_Panel"

		del 2
		if gs_door_rail & (gs_door_rail_ext_m = EXT_RAIL_BOTT | gs_door_rail_ext_m = EXT_RAIL_BOTT_TOP) then	del 1
		del 1
	endif


	! =============================================================================
	! Double Pocket Door Leaf
	! =============================================================================

	if	gs_leaf_optype_m = LEAF_2L_POCKET then

		aaa = TotalLeafWidthin3D/2

		addx a_x + TotalLeafWidthin3D/2

		if gs_pocket_door_frame then
			heightLeaf = ac_leaf_height
		else
			heightLeaf = ac_wallhole_height
		endif

		if gs_door_rail then
			heightRail = heightLeaf
			lengthRail = 4 * (aaa)	! - gs_han_pos

			heightLeaf = heightLeaf - posHole * gs_door_rail * ((gs_door_rail_ext_m = EXT_RAIL_BOTT | gs_door_rail_ext_m = EXT_RAIL_BOTT_TOP) + (gs_door_rail_ext_m = EXT_RAIL_TOP | gs_door_rail_ext_m = EXT_RAIL_BOTT_TOP))
		endif

		gosub	"Rail_for_Pocket"

		bbb = heightLeaf

		unID = 1
		if gs_full_edit & GLOB_CONTEXT <> 6 then
			hotspot 0, 			gs_han_height, posLeafy,	unID, gs_open3D, 1+128	:	unID=unID+1
			hotspot gs_open3D,	gs_han_height, posLeafy,	unID, gs_open3D, 2		:	unID=unID+1
			hotspot -1,			gs_han_height, posLeafy,	unID, gs_open3D, 3		:	unID=unID+1
		endif

		htyp=gs_handle_type_m

		sliding_door = 1
		bMiddleLine = 0

		if gs_door_rail & (gs_door_rail_ext_m = EXT_RAIL_BOTT | gs_door_rail_ext_m = EXT_RAIL_BOTT_TOP) then	addy posHole

		add 0, 0, posLeafy + posHole

		for i = 1 to 2
			mulx -1
			addx -aaa/2-gs_open3D
				gosub "Leaf_Panel"
			del 1
		next i
		del 3

		if gs_door_rail & (gs_door_rail_ext_m = EXT_RAIL_BOTT | gs_door_rail_ext_m = EXT_RAIL_BOTT_TOP) then	del 1

		del 1
	endif


	! =============================================================================
	! Sliding Folding Multi-panel 1 Side Panel
	! =============================================================================

	if	gs_leaf_optype_m = LEAF_1L_MULTIPANEL | gs_leaf_optype_m = LEAF_1L_MULTIPANEL_M then

		bMiddleLine = 0

		bbb = TotalLeafHeightin3D - rail_h_lo

		bOpened = (gs_open3D > EPS)

		opmax = TotalLeafWidthin3D

		addx a_x + TotalLeafWidthin3D/2

		if gs_leaf_optype_m = LEAF_1L_MULTIPANEL_M then mulx -1

		unID = 1
		if gs_full_edit & GLOB_CONTEXT <> 6 then
			addx TotalLeafWidthin3D/2
			hotspot 0, 					B/2, 0,		unID,	gs_open3D,	1+128	:	unID=unID+1
			hotspot -gs_open3D, 		B/2, 0,		unID,	gs_open3D,	2		:	unID=unID+1
			hotspot TotalLeafWidthin3D+1, 	B/2, 0,		unID,	gs_open3D,	3
			del 1
		endif

		railWidth = gs_leaf_thk

		gosub	"Rail_for_SlidingFolding"


		panelWidth = (TotalLeafWidthin3D) / (gs_leaf_num - bMiddleStacking)

		w = (opmax-gs_open3D) / (gs_leaf_num - bMiddleStacking)

		alph = acs(w/sqr((panelWidth)**2+(gs_leaf_thk**2)))+atn(gs_leaf_thk/panelWidth)

		add -TotalLeafWidthin3D/2, rail_h_lo, 0

		if bOpened then
			for i=1 to gs_leaf_num
				if i=1 then
					roty alph*bOpened
				else
					if i mod 2 then
						roty 2*alph*bOpened
						addx 0
					else
						roty -2*alph*bOpened
						addz -gs_leaf_thk
					endif
				endif

				if bMiddleStacking and (i=1 or i=gs_leaf_num) then
					aaa = panelWidth/2
				else
					aaa = panelWidth
				endif

				if i = gs_leaf_num then
					htyp		= gs_handle_type_m
				else
					if i = 1 & gs_opening_leaves then
						htyp		= gs_handle_type_m
					else
						htyp		= 0
					endif
				endif

				addx aaa/2
				bMirroredOplines = 0
				if i = 1 and gs_opening_leaves then
					mulx -1
					bMirroredOplines = 1
				endif

				gosub "Leaf_Panel"
				if i = 1 and gs_opening_leaves then del 1
				del 1

				if i mod 2 then
					add aaa, 0, gs_leaf_thk
				else
					add aaa, 0, 0
				endif
			next i

			del 3 * gs_leaf_num - 1
		else
			if bMiddleStacking then
				leafWidth = panelWidth/2
			else
				leafWidth = panelWidth
			endif
			aaa = leafWidth

			addx leafWidth

			if gs_opening_leaves then
				unID=unID+1
				if gs_full_edit & GLOB_CONTEXT <> 4 & GLOB_CONTEXT <> 24 & GLOB_CONTEXT <> 6 then
					hotspot 0, 							B/2, 						0,							unID,	gs_open_3D,	6	:	unID=unID+1
					hotspot -10, 						B/2,						0,							unID,	gs_open_3D,	4+128	:	unID=unID+1
					hotspot -leafWidth*cos(gs_open_3D),	B/2,						-leafWidth*sin(gs_open_3D),	unID,	gs_open_3D,	5	:	unID=unID+1
					hotspot 0,							-B+2*B*(bMirroredPanel),	0,							unID,	gs_open_3D,	7
				endif
				htyp		= gs_handle_type_m
			else
				unID = unID + 4

				htyp		= 0
			endif

			roty -gs_open_3D * gs_opening_leaves
			addx -leafWidth/2

			if gs_opening_leaves then
			bMirroredOplines = 0
				mulx -1
			endif

			gosub "Leaf_Panel"

			if gs_opening_leaves then
				del 1
			endif
			del 2

			htyp		= 0
			for i=1 to gs_leaf_num-2
				leafWidth = panelWidth
				aaa = leafWidth

				addx aaa/2
				gosub "Leaf_Panel"
				del 1

				addx aaa
			next i

			if bMiddleStacking then
				leafWidth = panelWidth/2
			else
				leafWidth = panelWidth
			endif
			aaa = leafWidth

			htyp		= gs_handle_type_m
			if gs_opening_leaves2 then
				unID=unID+1
				if gs_full_edit & GLOB_CONTEXT <> 4 & GLOB_CONTEXT <> 24 & GLOB_CONTEXT <> 6 then
					hotspot 0, 								B/2, 						0,								unID,	gs_open_3D_2,	6		:	unID=unID+1
					hotspot 10, 							B/2,						0,								unID,	gs_open_3D_2,	4+128	:	unID=unID+1
					hotspot leafWidth*cos(gs_open_3D_2),	B/2, 						-leafWidth*sin(gs_open_3D_2),	unID,	gs_open_3D_2,	5		:	unID=unID+1
					hotspot 0,								B-2*B*(bMirroredPanel),		0,								unID,	gs_open_3D_2,	7
				endif
			else
				unID = unID + 4
			endif



			roty gs_open_3D_2 * gs_opening_leaves2

			addx aaa/2
			gosub "Leaf_Panel"
			del 1

			del 1 + (gs_leaf_num-2)
		endif

		del 1
		if gs_leaf_optype_m = LEAF_1L_MULTIPANEL_M then del 1
		del 1
	endif


	! =============================================================================
	! Sliding Folding Multi-panel 2 Side Panel
	! =============================================================================

	if	gs_leaf_optype_m = LEAF_2L_MULTIPANEL then

		bMiddleLine = 0

		bbb = TotalLeafHeightin3D - rail_h_lo

		panelWidth = (TotalLeafWidthin3D) / (gs_leaf_num + gs_leaf_num2 - bMiddleStacking)

		addx a_x + TotalLeafWidthin3D/2

		sideRatio = (gs_leaf_num2-bMiddleStacking * 0.5) / (gs_leaf_num + gs_leaf_num2 - bMiddleStacking)
		opmax = TotalLeafWidthin3D
		opmax2 = opmax * sideRatio
		opmax1 = opmax * (1 - sideRatio)

		unID = 300

		openingOrig = TotalLeafWidthin3D/2 - TotalLeafWidthin3D * sideRatio
		if gs_full_edit & GLOB_CONTEXT <> 6 then
			hotspot openingOrig,				B/2, 0, unID, gs_open3D, 1+128	: unID = unID + 1
			hotspot openingOrig - gs_open3D,	B/2, 0, unID, gs_open3D, 2		: unID = unID + 1
			hotspot openingOrig + 1,			B/2, 0, unID, gs_open3D, 3		: unID = unID + 1

			hotspot openingOrig,				B/2, 0, unID, gs_open3D_2, 1+128	: unID = unID + 1
			hotspot openingOrig + gs_open3D_2,	B/2, 0, unID, gs_open3D_2, 2		: unID = unID + 1
			hotspot openingOrig - 1,			B/2, 0, unID, gs_open3D_2, 3		: unID = unID + 1
		endif
		railWidth = gs_leaf_thk

		gosub	"Rail_for_SlidingFolding"

		add -TotalLeafWidthin3D/2, rail_h_lo, 0

		for j = 1 to 2
			if j = 1 then
				w=(opmax1-gs_open3D) / (gs_leaf_num - bMiddleStacking * 0.5)
				leafNum = gs_leaf_num
				bOpened = (gs_open3D > EPS)
			else
				w=(opmax2-gs_open3D_2) / (gs_leaf_num2 - bMiddleStacking * 0.5)
				leafNum = gs_leaf_num2
				bOpened = (gs_open3D_2 > EPS)
			endif


			alph = acs(w/sqr((panelWidth)^2+(gs_leaf_thk^2))) + atn(gs_leaf_thk/panelWidth)


			if bOpened then
				for i=1 to leafNum
					if i=1 then
						roty alph*bOpened
					else
						if i mod 2 then
							roty 2*alph*bOpened
							addx 0
						else
							roty -2*alph*bOpened
							addz -gs_leaf_thk
						endif
					endif

					if bMiddleStacking and (i=1) then
						aaa = panelWidth/2
					else
						aaa = panelWidth
					endif
					if i = leafNum then
						htyp		= gs_handle_type_m
					else
						if (j = 1 & i = 1 & gs_opening_leaves) | (j = 2 & i = 1 & gs_opening_leaves2) then
							htyp		= gs_handle_type_m
						else
							htyp		= 0
						endif
					endif

					addx aaa/2
					bMirroredOplines = 0
					mulTrans = 0

					if i=1 and ((j = 1 and gs_opening_leaves) or (j = 2 and gs_opening_leaves2)) then
						mulx -1
						bMirroredOplines = 1
						mulTrans = 1
					endif

					gosub "Leaf_Panel"

					del 1 + mulTrans

					if i mod 2 then
						add aaa, 0, gs_leaf_thk
					else
						add aaa, 0, 0
					endif
				next i
				del 3 * leafNum - 1

			else
				if bMiddleStacking then
					leafWidth = panelWidth/2
				else
					leafWidth = panelWidth
				endif
				aaa = leafWidth

				addx leafWidth
				bMirroredOplines = 0

				if j = 1 then
					if gs_opening_leaves then
						if gs_full_edit & GLOB_CONTEXT <> 4 & GLOB_CONTEXT <> 24 & GLOB_CONTEXT <> 6 then
							unID=unID+1
							hotspot 0, B/2, 0, unID, gs_open_3D, 6
							unID=unID+1
							hotspot -10, B/2, 0, unID, gs_open_3D, 4+128
							unID=unID+1
							hotspot -leafWidth*cos(gs_open_3D), B/2, -leafWidth*sin(gs_open_3D),unID,gs_open_3D,5
							unID=unID+1
							hotspot 0, -B, 0, unID, gs_open_3D, 7
						endif
						htyp		= gs_handle_type_m
					else
						unID=unID+4
						htyp		= 0
					endif
					roty -gs_open_3D * gs_opening_leaves
				else
					if gs_opening_leaves2 then
						unID=unID+1
						if gs_full_edit & GLOB_CONTEXT <> 4 & GLOB_CONTEXT <> 24 & GLOB_CONTEXT <> 6 then
							hotspot 0, B/2, 0, unID, gs_open_3D_2, 6
							unID=unID+1
							hotspot -10, B/2, 0, unID, gs_open_3D_2, 4+128
							unID=unID+1
							hotspot -leafWidth*cos(gs_open_3D_2), B/2, -leafWidth*sin(gs_open_3D_2),unID,gs_open_3D_2,5
							unID=unID+1
							hotspot 0, B, 0, unID, gs_open_3D_2, 7
						endif
						htyp		= gs_handle_type_m
					else
						unID=unID+4
						htyp		= 0
					endif
					roty -gs_open_3D_2 * gs_opening_leaves2
				endif

				addx -leafWidth/2

				if ((j = 1 and gs_opening_leaves) or (j = 2 and gs_opening_leaves2)) then
					mulx -1
				endif
				gosub "Leaf_Panel"
				if ((j = 1 and gs_opening_leaves) or (j = 2 and gs_opening_leaves2)) then
					del 1
				endif
				del 2

				leafWidth = panelWidth
				aaa = leafWidth

				for i=1 to leafNum-1
					if i = leafNum-1 then
						htyp		= gs_handle_type_m
					else
						htyp		= 0
					endif

					addx panelWidth/2

					gosub "Leaf_Panel"

					del 1

					addx panelWidth
				next i
				del leafNum-1

				del 1
			endif

			addx opmax
			mulx -1
		next j
		del 4

		del 2
	endif

	! =============================================================================

	del 1	! addy thresholdModify
endif

! =============================================================================
! Draw Casement
! =============================================================================

if lod3D = 5 then	! Chinese
	sh_sect_fill_type	= gs_FillSdl
	sh_sect_fill_fg		= gs_penSdl_fg
	sh_sect_fill_bg		= gs_penSdl_bg
else
	sh_sect_fill_type	= gs_fillLeaf
	sh_sect_fill_fg		= gs_penLeaf_fg
	sh_sect_fill_bg		= gs_penLeaf_bg
endif

gs_sash_pen		= gs_leaf_pen

if not(bOpeningDirectionSL) then
	addz gs_frame_thk
	mulz -1
else
	addz gs_frame_wthk * (gs_frame_thkin - gs_frame_thk)
endif

! =============================================================================
! Transom Sashes
! =============================================================================

! Upper Left Sash -------------------------------------------------------------

if gs_sidelight_left & gs_door_transom & (gs_SidelightTransomRelation_m = SIDELIGHT_CROSSES_TRANSOM) then
	sh_unID		= 5600
	sashWidth	= sashWidthArray[1][1]
	sashHeight	= sashHeightArray[1][1]
	CasementID	= CasementIDArray[1][1]
	_matSashOut	= gs_transom_mat
	_matSashIn	= gs_transom_matin

	add sashPosXArray[1][1], sashPosYArray[1][1], gs_frame_thk
	gosub "CallCasement"
	del 1
endif

! Upper Middle Sash -----------------------------------------------------------

if gs_door_transom then
	sh_unID		= 2400
	sashWidth	= sashWidthArray[1][2]
	sashHeight	= sashHeightArray[1][2]
	CasementID	= CasementIDArray[1][2]
	_matSashOut	= gs_transom_mat
	_matSashIn	= gs_transom_matin

	add sashPosXArray[1][2], sashPosYArray[1][2], gs_frame_thk
	if bArchedTop then
		gosub "CallCasementArched"
	else
		gosub "CallCasement"
	endif
	del 1
endif

! Upper Right Sash ------------------------------------------------------------

if gs_sidelight_right & gs_door_transom & (gs_SidelightTransomRelation_m = SIDELIGHT_CROSSES_TRANSOM) then
	sh_unID		= 4000
	sashWidth	= sashWidthArray[1][3]
	sashHeight	= sashHeightArray[1][3]
	CasementID	= CasementIDArray[1][3]
	_matSashOut	= gs_transom_mat
	_matSashIn	= gs_transom_matin

	add sashPosXArray[1][3], sashPosYArray[1][3], gs_frame_thk
	gosub "CallCasement"
	del 1
endif

! =============================================================================
! Sidelight Sashes
! =============================================================================

! Middle Left Sash ------------------------------------------------------------

if gs_sidelight_left then
	sh_unID		= 5200
	sashWidth	= sashWidthArray[2][1]
	sashHeight	= sashHeightArray[2][1]
	CasementID	= CasementIDArray[2][1]
	_matSashOut	= gs_sidelight2_mat
	_matSashIn	= gs_sidelight2_matin

	add sashPosXArray[2][1], sashPosYArray[2][1], gs_frame_thk
	gosub "CallCasement"
	del 1
endif

! Middle Right Sash -----------------------------------------------------------

if gs_sidelight_right then
	sh_unID		= 3600
	sashWidth	= sashWidthArray[2][3]
	sashHeight	= sashHeightArray[2][3]
	CasementID	= CasementIDArray[2][3]
	_matSashOut	= gs_sidelight1_mat
	_matSashIn	= gs_sidelight1_matin

	add sashPosXArray[2][3], sashPosYArray[2][3], gs_frame_thk
	gosub "CallCasement"
	del 1
endif

! =============================================================================
! Sidelight Lower Sashes
! =============================================================================

! Lower Left Sash ------------------------------------------------------------

if gs_sidelight_left & gs_bSidelight_fr_hdiv_left then
	sh_unID		= 6000
	sashWidth	= sashWidthArray[3][1]
	sashHeight	= sashHeightArray[3][1]
	CasementID	= CasementIDArray[3][1]
	_matSashOut	= gs_sidelight2_mat
	_matSashIn	= gs_sidelight2_matin

	add sashPosXArray[3][1], sashPosYArray[3][1], gs_frame_thk
	gosub "CallCasement"
	del 1
endif

! Lower Right Sash ------------------------------------------------------------

if gs_sidelight_right & gs_bSidelight_fr_hdiv_right then
	sh_unID		= 4400
	sashWidth	= sashWidthArray[3][3]
	sashHeight	= sashHeightArray[3][3]
	CasementID	= CasementIDArray[3][3]
	_matSashOut	= gs_sidelight1_mat
	_matSashIn	= gs_sidelight1_matin

	add sashPosXArray[3][3], sashPosYArray[3][3], gs_frame_thk
	gosub "CallCasement"
	del 1
endif


! =============================================================================
end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end
! =============================================================================


"CallCasement":
! =============================================================================
! Casement Macro
! -----------------------------------------------------------------------------
! sashWidth:	Width of Sash
! sashHeight:	Height of Sash
! CasementID:	Sash ID
! sh_unID:		Hotspot ID
! =============================================================================

	call "Casement_rectangular" parameters A = sashWidth, B = sashHeight,
			CasementID 						= CasementID,
			lod3D							= lod3D,
			isWindow						= 0,
			bEdwardianSash					= 0,
			gs_rebate_width					= gs_sidelight_rebate_width,
			gs_rebate_depth					= gs_sidelight_rebate_depth,
			gs_sash_thk						= gs_sash_thk,
			gs_sash_width					= gs_sash_width,
			gs_sl_sash_width				= gs_sl_sash_width,
			gs_frame_thk					= gs_frame_thkin,
			iMullionStyle_02				= iMullionStyle_02,
			iMullionStyle_05				= iMullionStyle_05,
			iMullionStyle_06				= iMullionStyle_06,
			iMullionStyle_07				= iMullionStyle_07,
			iMullionStyle_09				= iMullionStyle_09,
			iMullionStyle_10				= iMullionStyle_10,
			iMullionStyle_11				= iMullionStyle_11,
			iMullionPosition				= iMullionPosition,
			sashFrameWidth					= sashFrameWidth,
			gs_horiz_div_height_02			= gs_horiz_div_height_02,
			gs_horiz_div_height_05			= gs_horiz_div_height_05,
			gs_horiz_div_height_06			= gs_horiz_div_height_06,
			gs_horiz_div_height_07			= gs_horiz_div_height_07,
			gs_horiz_div_height_09			= gs_horiz_div_height_09,
			gs_horiz_div_height_10			= gs_horiz_div_height_10,
			gs_horiz_div_height_11			= gs_horiz_div_height_11,
			gw								= gw,
			gth								= gth,
			gs_sidelight_div_width			= gs_sidelight_div_width,
			gs_sidelight_div_thk			= gs_sidelight_div_thk,
			gs_glass_thk					= gs_glass_thk,
			vgn_02							= vgn_02,
			hgn_02							= hgn_02,
			vgn_05							= vgn_05,
			hgn_05							= hgn_05,
			vgn_06							= vgn_06,
			hgn_06							= hgn_06,
			vgn_07							= vgn_07,
			hgn_07							= hgn_07,
			vgn_09							= vgn_09,
			hgn_09							= hgn_09,
			vgn_10							= vgn_10,
			hgn_10							= hgn_10,
			vgn_11							= vgn_11,
			hgn_11							= hgn_11,
			vgn2_02							= vgn2_02,
			hgn2_02							= hgn2_02,
			vgn2_05							= vgn2_05,
			hgn2_05							= hgn2_05,
			vgn2_06							= vgn2_06,
			hgn2_06							= hgn2_06,
			vgn2_07							= vgn2_07,
			hgn2_07							= hgn2_07,
			vgn2_09							= vgn2_09,
			hgn2_09							= hgn2_09,
			vgn2_10							= vgn2_10,
			hgn2_10							= hgn2_10,
			vgn2_11							= vgn2_11,
			hgn2_11							= hgn2_11,
			vergrid_02						= vergrid_02,
			horgrid_02						= horgrid_02,
			vergrid_05						= vergrid_05,
			horgrid_05						= horgrid_05,
			vergrid_06						= vergrid_06,
			horgrid_06						= horgrid_06,
			vergrid_07						= vergrid_07,
			horgrid_07						= horgrid_07,
			vergrid_09						= vergrid_09,
			horgrid_09						= horgrid_09,
			vergrid_10						= vergrid_10,
			horgrid_10						= horgrid_10,
			vergrid_11						= vergrid_11,
			horgrid_11						= horgrid_11,
			vergrid2_02						= vergrid2_02,
			horgrid2_02						= horgrid2_02,
			vergrid2_05						= vergrid2_05,
			horgrid2_05						= horgrid2_05,
			vergrid2_06						= vergrid2_06,
			horgrid2_06						= horgrid2_06,
			vergrid2_07						= vergrid2_07,
			horgrid2_07						= horgrid2_07,
			vergrid2_09						= vergrid2_09,
			horgrid2_09						= horgrid2_09,
			vergrid2_10						= vergrid2_10,
			horgrid2_10						= horgrid2_10,
			vergrid2_11						= vergrid2_11,
			horgrid2_11						= horgrid2_11,
			gs_glass_pen					= gs_glass_pen,
			gs_glass_pen_cont				= gs_glass_pen,
			ghe								= ghe,
			VentilationProfileHeight		= VentilationProfileHeight,
			isVentilationProfileInSash_01	= isVentilationProfileInSash_01,
			isVentilationProfileInSash_02	= isVentilationProfileInSash_02,
			isVentilationProfileInSash_03	= isVentilationProfileInSash_03,
			isVentilationProfileInSash_04	= isVentilationProfileInSash_04,
			isVentilationProfileInSash_05	= isVentilationProfileInSash_05,
			isVentilationProfileInSash_06	= isVentilationProfileInSash_06,
			isVentilationProfileInSash_07	= isVentilationProfileInSash_07,
			isVentilationProfileInSash_08	= isVentilationProfileInSash_08,
			isVentilationProfileInSash_09	= isVentilationProfileInSash_09,
			isVentilationProfileInSash_10	= isVentilationProfileInSash_10,
			isVentilationProfileInSash_11	= isVentilationProfileInSash_11,
			openingAngle_02					= openingAngle_02,
			openingAngle2_02				= openingAngle2_02,
			openingLength_02				= openingLength_02,
			openingLength2_02				= openingLength2_02,
			openingAngle_05					= openingAngle_05,
			openingAngle2_05				= openingAngle2_05,
			openingLength_05				= openingLength_05,
			openingLength2_05				= openingLength2_05,
			openingAngle_06					= openingAngle_06,
			openingAngle2_06				= openingAngle2_06,
			openingLength_06				= openingLength_06,
			openingLength2_06				= openingLength2_06,
			openingAngle_07					= openingAngle_07,
			openingAngle2_07				= openingAngle2_07,
			openingLength_07				= openingLength_07,
			openingLength2_07				= openingLength2_07,
			openingAngle_09					= openingAngle_09,
			openingAngle2_09				= openingAngle2_09,
			openingLength_09				= openingLength_09,
			openingLength2_09				= openingLength2_09,
			openingAngle_10					= openingAngle_10,
			openingAngle2_10				= openingAngle2_10,
			openingLength_10				= openingLength_10,
			openingLength2_10				= openingLength2_10,
			openingAngle_11					= openingAngle_11,
			openingAngle2_11				= openingAngle2_11,
			openingLength_11				= openingLength_11,
			openingLength2_11				= openingLength2_11,
			gs_optype_m_02					= gs_optype_m_02,
			gs_optype_m_05					= gs_optype_m_05,
			gs_optype_m_06					= gs_optype_m_06,
			gs_optype_m_07					= gs_optype_m_07,
			gs_optype_m_09					= gs_optype_m_09,
			gs_optype_m_10					= gs_optype_m_10,
			gs_optype_m_11					= gs_optype_m_11,
			gs_full_edit					= gs_full_edit,
			gs_frame_pen					= gs_frame_pen,
			gs_sash_pen						= gs_sash_pen,
			gs_frame_mat					= gs_frame_mat,
			gs_frame_mat2					= gs_frame_mat2,
			gs_sash_mat						= _matSashOut,
			gs_sash_mat2					= _matSashIn,
			gs_grill_mat					= gs_grill_mat,
			gs_grill_mat2					= gs_grill_mat2,
			gs_panel_mat					= gs_panel_mat,
			gs_panel_mat2					= gs_panel_mat2,
			gs_glass_mat					= gs_glass_mat,
			gs_ventProfile_mat				= gs_ventProfile_mat,
			gs_sash_pen_cont				= gs_leaf_pen_2D,
			gs_fillSash						= sh_sect_fill_type,
			gs_penSash_bg					= sh_sect_fill_bg,
			gs_penSash_fg					= sh_sect_fill_fg,
			gs_frame_pen_cont				= gs_frame_pen_cont,
			gs_fillFr						= fr_sect_fill_type,
			gs_penFr_bg						= fr_sect_fill_bg,
			gs_penFr_fg						= fr_sect_fill_fg,
			gs_ventProfile_fill				= gs_ventProfile_fill,
			gs_ventProfile_pen_fg			= gs_ventProfile_pen_fg,
			gs_ventProfile_pen_bg			= gs_ventProfile_pen_bg,
			bOpeningDirectionInside			= (WIDO_REVEAL_SIDE exor bOpeningDirectionSL),
			gs_SashText_typ_num				= gs_SashText_typ_num,
			gs_cust_panel_02				= gs_cust_panel_02,
			gs_cust_panel2_02				= gs_cust_panel2_02,
			gs_cust_panel_05				= gs_cust_panel_05,
			gs_cust_panel2_05				= gs_cust_panel2_05,
			gs_cust_panel_06				= gs_cust_panel_06,
			gs_cust_panel2_06				= gs_cust_panel2_06,
			gs_cust_panel_07				= gs_cust_panel_07,
			gs_cust_panel2_07				= gs_cust_panel2_07,
			gs_cust_panel_09				= gs_cust_panel_09,
			gs_cust_panel2_09				= gs_cust_panel2_09,
			gs_cust_panel_10				= gs_cust_panel_10,
			gs_cust_panel2_10				= gs_cust_panel2_10,
			gs_cust_panel_11				= gs_cust_panel_11,
			gs_cust_panel2_11				= gs_cust_panel2_11,
!!			gs_bMirr_cust_panel_05			= gs_bMirr_cust_panel_05,
!!			gs_bMirr_cust_panel2_05			= gs_bMirr_cust_panel2_05,
			sh_unID							= sh_unID,
			bOplines3d						= bWinOplines3d,
			opLineType3dIn					= winOpLineType3dIn,
			opLineType3dOut					= winOpLineType3dOut,
			gs_opline_style_m				= gs_win_opline_style_m,
			gs_opLinePen					= gs_winOpLinePen,
			gs_opening_dir_sl_m				= gs_opening_dir_sl_m,
			iLouverStyle					= iLouverStyle,
			gs_louver_thk					= gs_louver_thk,
			gs_louver_width					= gs_louver_width,
			gs_louver_opening_angle			= gs_louver_opening_angle,
			gs_ventSashLouver_mat			= gs_ventSashLouver_mat
return

"CallCasementArched":
	shoulderHeight = (gs_shoulder_h - (fce-fce_Sl_rebate))  - (ac_unit_height - gs_frame_width_upper + gs_sidelight_rebate_width - sashHeight)

	call "Casement_Arched" parameters A = sashWidth, B = sashHeight,
		lod3D					= lod3D,
		CasementID				= 2,
		gs_rebate_width			= gs_sidelight_rebate_width,
		gs_rebate_depth			= gs_sidelight_rebate_depth,
		gs_sash_thk				= gs_sash_thk,
		gs_sash_width			= gs_sash_width,
		gs_frame_thk			= gs_frame_thkin,
		h						= shoulderHeight,
		iMullionStyle_02		= iMullionStyle_02,
		iMullionPosition		= iMullionPosition,
		gw						= gw,
		gth						= gth,
		gs_glass_thk			= gs_glass_thk,
		vgn_02					= vgn_02,
		hgn_02					= hgn_02,
		openingAngle_02			= openingAngle_02,
		openingAngle2_02		= openingAngle2_02,
		gs_optype_m_02			= gs_optype_m_02,
		res						= res,
		gs_full_edit			= 1,
		gs_frame_pen			= gs_frame_pen,
		gs_sash_pen				= gs_sash_pen,
		gs_glass_pen			= gs_glass_pen,
		gs_glass_pen_cont		= gs_glass_pen,
		gs_frame_mat			= _matSashIn,
		gs_frame_mat2			= _matSashOut,
		gs_grill_mat			= gs_grill_mat,
		gs_grill_mat2			= gs_grill_mat2,
		gs_panel_mat			= gs_panel_mat,
		gs_panel_mat2			= gs_panel_mat2,
		gs_glass_mat			= gs_glass_mat,
		gs_sash_pen_cont		= gs_leaf_pen_2D,
		gs_fillSash				= sh_sect_fill_type,
		gs_penSash_bg			= sh_sect_fill_bg,
		gs_penSash_fg			= sh_sect_fill_fg,
		gs_frame_pen_cont		= gs_leaf_pen_2D,		! gs_frame_pen_cont,
		bOpeningDirectionInside	= (WIDO_REVEAL_SIDE exor bOpeningDirectionSL),
		gs_SashText_typ_num		= gs_SashText_typ_num,
		gs_cust_panel_02		= gs_cust_panel_02,
		sh_unID 				= sh_unID,
		bOplines3d				= bWinOplines3d,
		opLineType3dIn			= winOpLineType3dIn,
		opLineType3dOut			= winOpLineType3dOut,
		gs_opline_style_m		= gs_win_opline_style_m,
		gs_opLinePen			= gs_winOpLinePen
return


! =============================================================================
! Leaf Panel
! =============================================================================

"Leaf_Panel":

if iDoorPanelType = 3 then
	gs_hor_gnum = 2
	gs_ver_gnum = 4
endif

if iDoorPanelType = 4 then
	gs_hor_gnum = 3
	gs_ver_gnum = 6
endif


if bMirroredOplines then
	tempStyle = 2
	if gs_opline_style_m = 2 then tempStyle = 1
else
	tempStyle = 1
	if gs_opline_style_m = 2 then tempStyle = 2
endif

if iLeafShape = LEAF_SHAPE_HALFARCHED | iLeafShape = LEAF_SHAPE_ARCHED then
	if lod3D = 5 then
		gs_shoulder_h = (ac_wallhole_height - r2) + fcefw - thresholdModify
	else
		gs_shoulder_h = (ac_wallhole_height - r2) + fce_leaf_rebate - thresholdModify
	endif
endif

if bSecondPanel & not(gs_handle_uniform) then
	_gs_cust_handle		= gs_cust_handle2
	_gs_han_height		= gs_han_height2
	_gs_han_pos			= gs_han_pos2
else
	_gs_cust_handle		= gs_cust_handle
	_gs_han_height		= gs_han_height
	_gs_han_pos			= gs_han_pos
endif

if bSecondPanel & bAsymmetricLeafs then
	_iDoorPanelType		= iDoorPanelType2
	_gs_cust_panel		= gs_cust_panel2
	_gs_fw_side			= gs_fw_side2
	_gs_fw_side_right	= gs_fw_side_right2
	_gs_fw_side_left	= gs_fw_side_left2
	_gs_fw_lower		= gs_fw_lower2
	_gs_fw_upper		= gs_fw_upper2
	_gs_int_fw			= gs_int_fw2
	_gs_grill_pos_m		= gs_grill_pos2_m
	_gs_grid_w			= gs_grid_w2
	_gs_grid_thk		= gs_grid_thk2
else
	_iDoorPanelType		= iDoorPanelType
	_gs_cust_panel		= gs_cust_panel
	_gs_fw_side			= gs_fw_side
	_gs_fw_side_right	= gs_fw_side_right
	_gs_fw_side_left	= gs_fw_side_left
	_gs_fw_lower		= gs_fw_lower
	_gs_fw_upper		= gs_fw_upper
	_gs_int_fw			= gs_int_fw
	_gs_grill_pos_m		= gs_grill_pos_m
	_gs_grid_w			= gs_grid_w
	_gs_grid_thk		= gs_grid_thk

	! Force ignore bSecondPanel because the kickboard should be same in two panels if it is not asymmetric door
	bSecondPanel		= 0
endif


if _iDoorPanelType = 0 then return

if bEnableLeafRebateDepth3D then
	addz gs_rebate_depth_3D - gs_leaf_thk
endif

if bEnableLeafUnderCut then
	addy gs_leaf_undercut
	bbb = bbb - gs_leaf_undercut
endif

call "DoorLeafPanels" parameters all A		= aaa,
									 B		= bbb,
						bEnableKickBoard	= bEnableKickBoard,
						bSecondKickBoard	= bSecondKickBoard,
						bKickBoardOut		= bKickBoardOut,
						bKickBoardIn		= bKickBoardIn,
						kickBoardHeight		= kickBoardHeight,
						bKickBoardOut2		= bKickBoardOut2,
						bKickBoardIn2		= bKickBoardIn2,
						kickBoardHeight2	= kickBoardHeight2,
						matKickBoardOut		= matKickBoardOut,
						matKickBoardIn		= matKickBoardIn,
						gs_shoulder_h		= gs_shoulder_h,
						bSecondPanel		= bSecondPanel,
						iLeafShape			= iLeafShape,
						sliding_door		= sliding_door,
						iDoorPanelType		= _iDoorPanelType,
						gs_cust_panel		= _gs_cust_panel,
						gs_leaf_thk			= gs_leaf_thk,
						gs_fw_side			= _gs_fw_side,
						gs_fw_side_right	= _gs_fw_side_right,
						gs_fw_side_left		= _gs_fw_side_left,
						gs_fw_lower			= _gs_fw_lower,
						gs_fw_upper			= _gs_fw_upper,
						gs_int_fw			= _gs_int_fw,
						gs_grill_pos_m		= _gs_grill_pos_m,
						gs_grid_w			= _gs_grid_w,
						gs_grid_thk			= _gs_grid_thk,
						gs_glass_thk		= gs_glass_thk,
						gs_handle_type_m	= htyp,
						gs_cust_handle		= _gs_cust_handle,
						gs_han_height		= _gs_han_height - thresholdModify,
						gs_han_pos			= _gs_han_pos,
						bMirroredPanel		= bMirroredPanel,
						gs_hor_gnum			= hgnrl,
						gs_ver_gnum			= vgnrl,
						gs_hor_d			= hd,			
						gs_ver_d			= vd,			
						lod3D				= lod3D,
						res					= res,
						gs_SashText_typ_num	= gs_SashText_typ_num,
						gs_frame_pen		= gs_frame_pen,
						gs_frame_pen_cont	= gs_frame_pen_cont,
						gs_leaf_pen			= gs_leaf_pen,
						gs_leaf_pen_cont	= gs_leaf_pen_2D,
						gs_glass_pen		= gs_leaf_glass_pen,
						gs_glass_pen_cont	= gs_leaf_glass_pen,
						gs_fillLeaf			= sh_sect_fill_type,
						gs_penLeaf_fg		= sh_sect_fill_fg,
						gs_penLeaf_bg		= sh_sect_fill_bg,
						gs_fillAirtight		= gs_fillAirtight,
						gs_penAirtight_fg	= gs_penAirtight_fg,
						gs_penAirtight_bg	= gs_penAirtight_bg,
						bMiddleLine			= bMiddleLine,
						gs_leaf_mat			= gs_leaf_mat,
						gs_leaf_matin		= gs_leaf_matin,
						gs_leaf_mat2		= gs_leaf_mat2,
						gs_leaf_mat3		= gs_leaf_mat3,
						gs_lock_mat			= gs_lock_mat,
						gs_grill_mat		= gs_leaf_grill_mat,
						gs_grill_mat2		= gs_leaf_grill_mat2,
						gs_louver_mat		= gs_louver_mat,
						gs_louver_matin		= gs_louver_matin,
						gs_glass_mat		= gs_leaf_glass_mat,
						gs_kp_mat			= gs_kp_mat,
						gs_handle_mat		= gs_handle_mat,
						gs_handle_ac_mat	= gs_handle_ac_mat,
						gs_frame_thk		= gs_frame_thk,
						gs_pivotdoor		= (gs_leaf_optype_m = LEAF_1L_PIVOT | gs_leaf_optype_m = LEAF_1L_PIVOT_M),
						gs_pivotOffset		= gs_pivotOffset,
						bOplines3d			= bOplines3d,
						opLineType3dIn		= opLineType3dIn,
						opLineType3dOut		= opLineType3dOut,
						gs_opline_style_m	= tempStyle,
						gs_opLinePen		= gs_opLinePen

if bEnableLeafUnderCut then del 1
if bEnableLeafRebateDepth3D then del 1

return


! =============================================================================
! Rail for Sliding Folding Doors
! =============================================================================

"Rail_for_SlidingFolding":

material gs_rail_mat
pen gs_frame_pen
sect_fill fr_sect_fill_type, fr_sect_fill_bg, fr_sect_fill_fg, gs_frame_pen_cont

if gs_door_rail then
	rotx -90
	prism_ 5, rail_h_lo,
		-TotalLeafWidthin3D/2, 0, 15,
		-TotalLeafWidthin3D/2, -railWidth, 15,
		 TotalLeafWidthin3D/2, -railWidth, 15,
		 TotalLeafWidthin3D/2, 0, 15,
		-TotalLeafWidthin3D/2, 0, -1
	body -1
	del 1
endif

return


! =============================================================================
! Rail for Exterior Sliding Doors
! =============================================================================

"Rail_for_SlidingExternal":

material gs_rail_mat
pen gs_frame_pen
sect_fill fr_sect_fill_type, fr_sect_fill_bg, fr_sect_fill_fg, gs_frame_pen_cont

rail_w		= 2 * TotalLeafWidthin3D
rail_h_do	= 0
rail_h_up	= 0

if gs_leaf_optype_m = LEAF_2L_EXTERNAL_SLIDING then
	addx -TotalLeafWidthin3D
else
	addx -TotalLeafWidthin3D/2
endif

roty 90
addx gs_leaf_thk/2 + 0.005

if gs_door_rail & (gs_door_rail_ext_m = EXT_RAIL_BOTT | gs_door_rail_ext_m = EXT_RAIL_BOTT_TOP) then
	rail_h_do = 0.003
	prism_ 5,rail_w,
		 gs_leaf_thk/2+0.005,	0,			15,
		 gs_leaf_thk/2+0.005,	rail_h_do,	15,
		-gs_leaf_thk/2-0.005,	rail_h_do,	15,
		-gs_leaf_thk/2-0.005,	0,			15,
		 gs_leaf_thk/2+0.005,	0,			15
	body -1
endif

if gs_door_rail & (gs_door_rail_ext_m = EXT_RAIL_TOP | gs_door_rail_ext_m = EXT_RAIL_BOTT_TOP) then
	rail_h_up = 0.003
	addy bbb + 0.0005
	prism_ 9,rail_w,
		 gs_leaf_thk/2+0.005,	0,					15,
		 gs_leaf_thk/2+0.005,	-rail_h_up-0.007,	15,
		 gs_leaf_thk/2+0.002,	-rail_h_up-0.007,	15,
		 gs_leaf_thk/2+0.002,	-rail_h_up,			15,
		-gs_leaf_thk/2-0.002,	-rail_h_up,			15,
		-gs_leaf_thk/2-0.002,	-rail_h_up-0.007,	15,
		-gs_leaf_thk/2-0.005,	-rail_h_up-0.007,	15,
		-gs_leaf_thk/2-0.005,	0,					15,
		 gs_leaf_thk/2+0.005,	0,					15
	body -1
	del 1
endif

del 3
return


! =============================================================================
! Rail for Pocket Doors
! =============================================================================

"Rail_for_Pocket":

if not(gs_door_rail) then return

material gs_rail_mat
pen gs_frame_pen
sect_fill fr_sect_fill_type, fr_sect_fill_bg, fr_sect_fill_fg, gs_frame_pen_cont

if gs_leaf_optype_m = LEAF_2L_POCKET then
	addx -lengthRail/2
else
	addx -lengthRail/4
endif

addz posLeafy

roty 90

if gs_door_rail & (gs_door_rail_ext_m = EXT_RAIL_BOTT | gs_door_rail_ext_m = EXT_RAIL_BOTT_TOP) then	! Bottom Rail
	prism_ 4, lengthRail,
		-widthWallCut,	0,			15,
		-widthWallCut,	posHole,	15,
		0,				posHole,	15,
		0,				0,			15
	body -1
endif

if gs_door_rail & (gs_door_rail_ext_m = EXT_RAIL_TOP | gs_door_rail_ext_m = EXT_RAIL_BOTT_TOP) then	! Upper Rail
	addy heightRail
	prism_ 8, lengthRail,
		-widthWallCut,				0,				15,
		-widthWallCut,				-posHole * 2,	15,
		-widthWallCut + posHole/2,	-posHole * 2,	15,
		-widthWallCut + posHole/2,	-posHole,		15,
		-posHole/2,					-posHole,		15,
		-posHole/2,					-posHole * 2,	15,
		0,							-posHole * 2,	15,
		0,							0,				15
	body -1
	del 1
endif

del 3

return


