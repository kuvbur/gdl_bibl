
gs_list_glassarea = 0


if iWindowType = WIN_W2HorizontalSlide then
	minUnitWidth	= gs_frame_width + gs_frame_width_left + gs_sash_width * 3 + 0.01
	minUnitHeight	= gs_frame_width_upper + gs_frame_width_lower + gs_sash_width * 2 + 0.01
endif

if iWindowType = WIN_W3HorizontalSlide then
	minUnitWidth	= gs_frame_width + gs_frame_width_left + gs_sash_width * 4 + 0.01 + (gs_UTrans_w - 2 * gs_rebate_width + gs_sash_width * 2) * 2 * (iUTrans = 3)
	minUnitHeight	= gs_frame_width_upper + gs_frame_width_lower + gs_sash_width * 2 + 0.01 + (gs_UTrans_w - 2 * gs_rebate_width + gs_sash_width * 2) * 2 * gs_UTrans
endif

if iWindowType = WIN_W4HorizontalSlide then
	nTransom = 2
	if iUTrans = 1 then nTransom = 4
	minUnitWidth	= max (2*gs_frame_width + gs_sash_width+4*gs_sash_width*(gs_UTrans=0)+gs_UTrans*(gs_UTrans_w-2*gs_rebate_width+gs_sash_width*2)*nTransom+0.01*4, \
							gs_frame_width+gs_frame_width_left + gs_sash_width+4*gs_sash_width+0.01*4)
	minUnitHeight	= gs_frame_width+gs_frame_width_left+2*gs_sash_width+0.01+gs_UTrans * (gs_UTrans_w-2*gs_rebate_width+ 2 * gs_sash_width + 0.01)
endif

if iWindowType = WIN_W6HorizontalSlide then
	minUnitWidth	= gs_frame_width + gs_frame_width_left + gs_sash_width * 8 + 0.01
	minUnitHeight	= gs_frame_width_upper + gs_frame_width_lower + gs_sash_width * 2 + 0.01
endif

! =============================================================================
! GS Corner Window Functions
! =============================================================================

call "GS Corner Window Functions",
	parameters all	iWindowShape				= iWindowShape,
					gs_IsCurved					= gs_IsCurved,
					bParalellInCurvedWalls		= bParalellInCurvedWalls,
					bDisabeMirroring			= bDisabeMirroring,
					minUnitWidth				= minUnitWidth,
					minUnitHeight				= minUnitHeight,

					bLeftCornerFunction			= bLeftCornerFunction,
					leftCornerAngle				= leftCornerAngle,
					bLeftDiffConnWall			= bLeftDiffConnWall,
					leftConnWallThk				= leftConnWallThk,
					bRightCornerFunction		= bRightCornerFunction,
					rightCornerAngle			= rightCornerAngle,
					bRightDiffConnWall			= bRightDiffConnWall,
					rightConnWallThk			= rightConnWallThk,
					bDisable2DOverride			= 1,
					bEnableVentilationProfile	= bEnableVentilationProfile,
					bEnableParapetInset			= bEnableParapetInset,
					bEnableMasonryArch			= bEnableMasonryArch,
					bEnableFaschen				= bEnableFaschen,
					bEnableThreshold			= bEnableThreshold,
					bEnableCustomCornerLeft		= bEnableCustomCornerLeft,
					bEnableCustomCornerRight	= bEnableCustomCornerRight


! =============================================================================
! Attributes
! =============================================================================

if gs_pen_2D	<= 0 then parameters gs_pen_2D		= 3
if gs_frame_pen	<= 0 then parameters gs_frame_pen	= 2
if gs_sash_pen	<= 0 then parameters gs_sash_pen	= 2
if gs_glass_pen	<= 0 then parameters gs_glass_pen	= 2


! =============================================================================
! Window Handle
! =============================================================================

call "DoorHandle" parameters A=A,
	bSlidingWindow			= 1,
	bDifferentHandles		= 0,
	bSecondHandle			= 0,
	bSecondPanel			= 0,
	iHandleCategoryEnable	= iHandleCategoryEnable,
	bINTHandles				= 1,
	gs_handle_type			= gs_handle_type,
	gs_handle_type_m		= gs_handle_type_m


! =============================================================================
! Ventilation Profile
! =============================================================================

if bEnableVentilationProfile then
	call "Ventilation_profile" parameters	isWindow						= 1,
											iWindowType						= iWindowType,
											gs_UTrans						= gs_UTrans,
											iUTrans							= iUTrans,
											bVentilationProfile				= bVentilationProfile,
											iVentilationProfileType			= iVentilationProfileType,
											isVentilationProfileInSash_01	= isVentilationProfileInSash_01,
											isVentilationProfileInSash_02	= isVentilationProfileInSash_02,
											isVentilationProfileInSash_03	= isVentilationProfileInSash_03,
											isVentilationProfileInSash_04	= isVentilationProfileInSash_04,
											isVentilationProfileInSash_05	= isVentilationProfileInSash_05,
											isVentilationProfileInSash_06	= isVentilationProfileInSash_06,
											isVentilationProfileInSash_07	= isVentilationProfileInSash_07,
											isVentilationProfileInSash_08	= isVentilationProfileInSash_08,
											isVentilationProfileInSash_09	= 0,
											isVentilationProfileInSash_10	= 0,
											isVentilationProfileInSash_11	= 0,
											iMullionStyle_01				= iMullionStyle_01,
											iMullionStyle_02				= iMullionStyle_02,
											iMullionStyle_03				= iMullionStyle_03,
											iMullionStyle_04				= iMullionStyle_04,
											iMullionStyle_05				= iMullionStyle_05,
											iMullionStyle_06				= iMullionStyle_06,
											iMullionStyle_07				= iMullionStyle_07,
											iMullionStyle_08				= iMullionStyle_08,
											gs_VentilationProfileTypeEnable	= gs_VentilationProfileTypeEnable
else
	lock	"bVentilationProfile",
			"gs_select_sash_vent_profile",
			"gs_list_freeAirPerformance"
	hideparameter	"bVentilationProfile",
					"gs_select_sash_vent_profile",
					"gs_list_freeAirPerformance"
endif


! ==============================================================================
! Uniform Surfaces
! ==============================================================================

dim	surfaceParNames[10]							:	dim	surfaceParameters[10]
	surfaceParNames[1]	= "gs_frame_mat"		:		surfaceParameters[1]	= gs_frame_mat
	surfaceParNames[2]	= "gs_frame_mat2"		:		surfaceParameters[2]	= gs_frame_mat2
	surfaceParNames[3]	= "gs_sash_mat"			:		surfaceParameters[3]	= gs_sash_mat
	surfaceParNames[4]	= "gs_sash_mat2"		:		surfaceParameters[4]	= gs_sash_mat2
	surfaceParNames[5]	= "gs_grill_mat"		:		surfaceParameters[5]	= gs_grill_mat
	surfaceParNames[6]	= "gs_grill_mat2"		:		surfaceParameters[6]	= gs_grill_mat2
	surfaceParNames[7]	= "gs_panel_mat"		:		surfaceParameters[7]	= gs_panel_mat
	surfaceParNames[8]	= "gs_panel_mat2"		:		surfaceParameters[8]	= gs_panel_mat2
	surfaceParNames[9]	= "matSashLedgeOutside"	:		surfaceParameters[9]	= matSashLedgeOutside
	surfaceParNames[10]	= "matSashLedgeInside"	:		surfaceParameters[10]	= matSashLedgeInside

_lastModSurfaceParameter = gs_frame_mat

if (stored_material[1][1] <> -9999) & (vardim1(surfaceParNames) = vardim2(stored_material)) then
	for i = 1 to vardim1(surfaceParNames)
		if GLOB_MODPAR_NAME = surfaceParNames[i] then
			lastModSurfaceParameter	= surfaceParameters[i]
			stored_material[1][i]	= surfaceParameters[i]
			stored_material[2][i]	= 1

			for j = 1 to i-1
				stored_material[2][j]	= 0
				parameters stored_material[2][j]	= stored_material[2][j]
			next j

			for k = i+1 to vardim1(surfaceParNames)
				stored_material[2][k]	= 0
				parameters stored_material[2][k]	= stored_material[2][k]
			next k
		endif

		parameters	stored_material[1][i]	= stored_material[1][i],
					stored_material[2][i]	= stored_material[2][i]

		if stored_material[2][i] = 1 then
			_lastModSurfaceParameter = stored_material[1][i]
		endif
	next i
else
	gosub "preloadSurfaces"
endif

if bLinkSurfacesFrameSash then
	parameters	gs_frame_mat		= _lastModSurfaceParameter,
				gs_frame_mat2		= _lastModSurfaceParameter,
				gs_sash_mat			= _lastModSurfaceParameter,
				gs_sash_mat2		= _lastModSurfaceParameter,
				gs_grill_mat		= _lastModSurfaceParameter,
				gs_grill_mat2		= _lastModSurfaceParameter,
				gs_panel_mat		= _lastModSurfaceParameter,
				gs_panel_mat2		= _lastModSurfaceParameter,
				matSashLedgeOutside	= _lastModSurfaceParameter,
				matSashLedgeInside	= _lastModSurfaceParameter
else
	if GLOB_MODPAR_NAME = "bLinkSurfacesFrameSash" then
		parameters	gs_frame_mat		= stored_material[1][1],
					gs_frame_mat2		= stored_material[1][2],
					gs_sash_mat			= stored_material[1][3],
					gs_sash_mat2		= stored_material[1][4],
					gs_grill_mat		= stored_material[1][5],
					gs_grill_mat2		= stored_material[1][6],
					gs_panel_mat		= stored_material[1][7],
					gs_panel_mat2		= stored_material[1][8],
					matSashLedgeOutside	= stored_material[1][9],
					matSashLedgeInside	= stored_material[1][10]
	else
		gosub "preloadSurfaces"
	endif
endif


! =============================================================================
! Orientation
! =============================================================================

if iWindowType = WIN_W4HorizontalSlide then
	values{2} "gs_list_orientationDef_m"	0, `Автоматически`,
											1, `Специальный`
	
	if gs_list_orientationDef_m = 0 then
		ac_OpeningSide = ""
		parameters ac_OpeningSide = ac_OpeningSide
	
		lock "ac_OpeningSide"
		hideparameter "ac_OpeningSide"
	endif
else
	ac_OpeningSide = ""
	parameters ac_OpeningSide = ac_OpeningSide
endif

! =============================================================================
! IFC Parameters
! =============================================================================

ifc_optype = 10		! WIN_OP_USER_DEFINED
if iWindowType = WIN_W2HorizontalSlide then
	ifc_optype = 2		! WIN_OP_DOUBLE_PANEL_VERTICAL
endif
parameters ifc_optype = ifc_optype
call "IFC_optype_window" parameters ifc_optype = ifc_optype

lock "ifc_optypestr"

ifc_LiningDepth = WIDO_FRAME_THICKNESS
parameters ifc_LiningDepth = ifc_LiningDepth

ifc_LiningThickness = gs_frame_width
parameters ifc_LiningThickness = ifc_LiningThickness


! =============================================================================
! FM Types
! =============================================================================

call "FM_types" parameters all


! =============================================================================
! 3D Detail Level
! =============================================================================

if gs_3DDetEnable =0 then

    values{2} "iDWDet3D" 	DETLEVEL_DW3D_DETAILED,		`Детальный`,
						    DETLEVEL_DW3D_SIMPLE,		`Простой`,
						    DETLEVEL_DW3D_OFF,			`Откл.`

else
	dim n3DScaleValueMask[]
	dim n3DScaleValueMask_m[]

	i=1
	if bittest( gs_3DDetEnable, 0) then                                              ! Scale Sensitive in Value list, 1
				n3DScaleValueMask[i] = stDetail[1]
				n3DScaleValueMask_m[i] = DETLEVEL_DW3D_SCALESENS
				i = i + 1
	endif
	if bittest( gs_3DDetEnable, 1) then                                              ! Detailed in Value list,2
				n3DScaleValueMask[i] = stDetail[2]
				n3DScaleValueMask_m[i] = DETLEVEL_DW3D_DETAILED
				i = i + 1
	endif
	if bittest( gs_3DDetEnable, 2) then                                              ! Simple in Value list,4
				n3DScaleValueMask[i] = stDetail[3]
				n3DScaleValueMask_m[i] = DETLEVEL_DW3D_SIMPLE
				i = i + 1
	endif
	if bittest( gs_3DDetEnable, 3) then                                              ! Off in Value list,8
				n3DScaleValueMask[i] = stDetail[4]
				n3DScaleValueMask_m[i] = DETLEVEL_DW3D_OFF
				i = i + 1
	endif
	if bittest( gs_3DDetEnable, 4) then                                              ! Chinese Simple in Value list,16
				n3DScaleValueMask[i] = stDetail[5]
				n3DScaleValueMask_m[i] = DETLEVEL_DW3D_CHI_SIMPLE
				i = i + 1
	endif
	if bittest( gs_3DDetEnable, 5) then                                              ! Chinese Detailed in Value list,32
				n3DScaleValueMask[i] = stDetail[6]
				n3DScaleValueMask_m[i] = DETLEVEL_DW3D_CHI_DETAILED
				i = i + 1
	endif

	values{2} "iDWDet3D" n3DScaleValueMask_m, n3DScaleValueMask
endif


! =============================================================================
! Swedish list parameter control
! =============================================================================

if gs_SWE_listParams_contr > 0 then
	call "SWE_ListParameters_control" parameters gs_SWE_listParams_contr = gs_SWE_listParams_contr,
			swe_list_f1	= swe_list_f1
endif

! =============================================================================
! Japanese list parameter control
! =============================================================================

if gs_JPN_listParams_contr then
	call "ListValuesJPN" parameters all gs_JPNObjectType = 2,		!COMMPARS_INTWINDOWS
			gs_is_p2	= 0,
			gs_is_p6	= 0
endif


! =============================================================================
! Opening type system
! =============================================================================
if _bHasMainOptype then
	if iWindowType = WIN_W2HorizontalSlide then
		values{2} "iOpeningTypeMain"	OPENINGTYPE_MAIN_SINGLE,	stOpeningTypeMain[1],
										OPENINGTYPE_MAIN_DOUBLE,	stOpeningTypeMain[2]
	endif
	
	if iWindowType = WIN_W3HorizontalSlide then
		values{2} "iOpeningTypeMain"	OPENINGTYPE_MAIN_2SASHES,	stOpeningTypeMain[1],
										OPENINGTYPE_MAIN_3SASHES,	stOpeningTypeMain[2],
										OPENINGTYPE_MAIN_1SIDE,		stOpeningTypeMain[3],
										OPENINGTYPE_MAIN_1MIDDLE,	stOpeningTypeMain[4]
	endif
	
	if iWindowType = WIN_W4HorizontalSlide then
		values{2} "iOpeningTypeMain"	OPENINGTYPE_MAIN_SAMERAIL,	stOpeningTypeMain[1],
										OPENINGTYPE_MAIN_DIFFRAIL,	stOpeningTypeMain[2],
										OPENINGTYPE_MAIN_4SASHES,	stOpeningTypeMain[3]
	endif
endif

if _bPossibleTransom then
	values{2} "iOpeningTypeTransMain"	SASH_FIXED, st_optype[1],
										SASH_SIDE_HUNG, st_optype[3],
										SASH_SIDE_HUNG_M, st_optype[4],
										SASH_BOTTOM_HUNG, st_optype[5],
										SASH_TOP_HUNG, st_optype[6],
										SASH_TILT_TURN, st_optype[7],
										SASH_TILT_TURN_M, st_optype[8]

	values{2} "iOpeningTypeTransSide"	SASH_FIXED, st_optype[1],
										SASH_SIDE_HUNG, st_optype[3],
										SASH_SIDE_HUNG_M, st_optype[4],
										SASH_BOTTOM_HUNG, st_optype[5],
										SASH_TOP_HUNG, st_optype[6],
										SASH_TILT_TURN, st_optype[7],
										SASH_TILT_TURN_M, st_optype[8]

endif


! =============================================================================
! Panes size configuration
! =============================================================================
if _bHasPaneSizeConfig then
	values{2} "iPanesSizeConfig"	PANES_UNIFORM, stPaneSizeConfig[1],
									PANES_CUSTOM, stPaneSizeConfig[2]

	if iWindowType = WIN_W2HorizontalSlide & iOpeningTypeMain = OPENINGTYPE_MAIN_DOUBLE then
		! force symmetric pane size if opening type is double sliding
		iPanesSizeConfig = PANES_UNIFORM
		parameters iPanesSizeConfig = iPanesSizeConfig

		hideparameter "iPanesSizeConfig"
		lock "iPanesSizeConfig"
	endif
	if iPanesSizeConfig = PANES_UNIFORM then
		if iWindowType = WIN_W2HorizontalSlide | iWindowType = WIN_W3HorizontalSlide |\
			iWindowType = WIN_W4HorizontalSlide then

			hideparameter "sashWidth1"
			lock "sashWidth1"
		endif

		if iWindowType = WIN_W3HorizontalSlide | iWindowType = WIN_W4HorizontalSlide then
			hideparameter "sashWidth2"
			lock "sashWidth2"
		endif

		if iWindowType = WIN_W4HorizontalSlide then
			hideparameter "sashWidth3"
			lock "sashWidth3"
		endif
	else
		if iWindowType = WIN_W3HorizontalSlide then
			if iOpeningTypeMain = OPENINGTYPE_MAIN_2SASHES | iOpeningTypeMain = OPENINGTYPE_MAIN_3SASHES then
				if GLOB_MODPAR_NAME = "tempSashWidth2" then
					sashWidth2 = tempSashWidth2 * 2
					sashWidth1 = (ac_unit_width - gs_frame_width - gs_frame_width_left - sashWidth2) / 2 + gs_sash_width
					parameters sashWidth1 = sashWidth1,
								sashWidth2 = sashWidth2
				else
					if GLOB_MODPAR_NAME = "sashWidth2" then
						sashWidth1 = (ac_unit_width - gs_frame_width - gs_frame_width_left - sashWidth2) / 2 + gs_sash_width
						parameters sashWidth1 = sashWidth1
					else
						sashWidth2 = (ac_unit_width - gs_frame_width - gs_frame_width_left - sashWidth1*2) + 2*gs_sash_width
						tempSashWidth2 = sashWidth2/2
						parameters sashWidth2 = sashWidth2,
									tempSashWidth2 = tempSashWidth2
					endif
				endif
			endif
			if iOpeningTypeMain = OPENINGTYPE_MAIN_1SIDE then
				if GLOB_MODPAR_NAME = "sashWidth2" then
					sashWidth1 = (ac_unit_width - gs_frame_width - gs_frame_width_left - 2*sashWidth2) + gs_sash_width
					parameters sashWidth1 = sashWidth1
				else
					sashWidth2 = (ac_unit_width - gs_frame_width - gs_frame_width_left - sashWidth1 + gs_sash_width) / 2
					parameters sashWidth2 = sashWidth2
				endif
			endif
			if iOpeningTypeMain = OPENINGTYPE_MAIN_1MIDDLE then
				if GLOB_MODPAR_NAME = "sashWidth2" then
					sashWidth1 = ac_unit_width - gs_frame_width - gs_frame_width_left - 2*sashWidth2 + gs_sash_width
					parameters sashWidth1 = sashWidth1
				else
					sashWidth2 = (ac_unit_width - gs_frame_width - gs_frame_width_left - sashWidth1 + gs_sash_width) / 2
					parameters sashWidth2 = sashWidth2
				endif
			endif
		endif
	endif
endif



! =============================================================================
! Transom Type configuration
! =============================================================================

if _bPossibleTransom then
	if iWindowType = WIN_W4HorizontalSlide then
		values{2} "iUTrans" TRANSOM_NONE, stTransomType[1],
							TRANSOM_4SASHES, stTransomType[2],
							TRANSOM_2SASHES, stTransomType[3],
							TRANSOM_3SASHES, stTransomType[4],
							TRANSOM_UNDIVIDED, stTransomType[5]
	endif

	if iWindowType = WIN_W3HorizontalSlide then
		values{2} "iUTrans" TRANSOM_NONE, stTransomType[1],
							TRANSOM_3SASHES, stTransomType[2],
							TRANSOM_UNDIVIDED, stTransomType[3]
	endif

	parameters gs_UTrans = gs_UTrans
	lock "gs_UTrans"


	bFoundNonFixedSash = 0
	if iUTrans = TRANSOM_4SASHES & (gs_optype_m_05 <> SASH_FIXED | gs_optype_m_06 <> SASH_FIXED | gs_optype_m_07 <> SASH_FIXED | gs_optype_m_08 <> SASH_FIXED) then bFoundNonFixedSash = 1
	if iWindowType = WIN_W4HorizontalSlide then
		if iUTrans = 2 & (gs_optype_m_06 <> SASH_FIXED | gs_optype_m_08 <> SASH_FIXED) then bFoundNonFixedSash = 1
	endif
	if iUTrans = TRANSOM_3SASHES & (gs_optype_m_05 <> SASH_FIXED | gs_optype_m_07 <> SASH_FIXED | gs_optype_m_08 <> SASH_FIXED) then bFoundNonFixedSash = 1
	if iUTrans = TRANSOM_UNDIVIDED & (gs_optype_m_05 <> SASH_FIXED) then bFoundNonFixedSash = 1

	if not(bFoundNonFixedSash) then
		hideparameter "gs_rebate_width", "gs_sash_thk"
	endif

	if not(gs_UTrans) then
		hideparameter	"gs_Mullion_w",
						"gs_UTrans_w",
						"gs_UTrans_h",
						"gs_rebate_depth",
						"gs_rebate_width",
						"gs_sash_thk"

		lock			"gs_Mullion_w",
						"gs_UTrans_w",
						"gs_UTrans_h",
						"gs_rebate_depth",
						"gs_rebate_width",
						"gs_sash_thk"

		hideparameter	"iOpeningTypeTransSide",
						"iOpeningTypeTransMain",
						"openingAngle_05",
						"openingAngle_06",
						"openingAngle_07",
						"openingAngle_08"

		lock			"iOpeningTypeTransSide",
						"iOpeningTypeTransMain",
						"openingAngle_05",
						"openingAngle_06",
						"openingAngle_07",
						"openingAngle_08"
	else
		if iUTrans = TRANSOM_UNDIVIDED then
			hideparameter "gs_Mullion_w",
						"iOpeningTypeTransSide",
						"openingAngle_06",
						"openingAngle_07",
						"openingAngle_08"

			lock "gs_Mullion_w",
						"iOpeningTypeTransSide",
						"openingAngle_06",
						"openingAngle_07",
						"openingAngle_08"
	
			if iOpeningTypeTransMain = SASH_FIXED then
				openingAngle_05 = 0
				parameters openingAngle_05 = openingAngle_05
				hideparameter "openingAngle_05"
				lock "openingAngle_05"
			endif
		else
			if iUTrans = TRANSOM_3SASHES then
				hideparameter "openingAngle_06"
				lock "openingAngle_06"
			else
				if iUTrans = TRANSOM_2SASHES then
					hideparameter "openingAngle_06", "openingAngle_08"
					lock "openingAngle_06", "openingAngle_08"
				endif
			endif
	
			if iOpeningTypeTransMain = SASH_FIXED then
				openingAngle_05 = 0
				openingAngle_06 = 0
				parameters openingAngle_05 = openingAngle_05,
							openingAngle_06 = openingAngle_06
				hideparameter "openingAngle_05"
				lock "openingAngle_05"
			endif
			if iOpeningTypeTransSide = SASH_FIXED then
				openingAngle_07 = 0
				openingAngle_08 = 0
	
				parameters	openingAngle_07 = openingAngle_07,
							openingAngle_08 = openingAngle_08
				hideparameter "openingAngle_07"
				lock "openingAngle_07"
			endif
		endif
	endif
	
	values "gs_UTrans_w"		range(gs_rebate_width,)
	values "gs_Mullion_w"		range(gs_rebate_width,)
	
	values "gs_UTrans_h" RANGE ((gs_frame_width_lower+gs_sash_width)+gs_UTrans*(gs_UTrans_w/2+gs_sash_width), ac_unit_height-((gs_frame_width_upper+gs_sash_width-gs_rebate_width)+gs_UTrans*(gs_UTrans_w/2+gs_sash_width-gs_rebate_width)))
else
	gs_UTrans = 0
	if iWindowType <> WIN_W6HorizontalSlide then
		parameters gs_UTrans = gs_UTrans
	endif

	lock		"gs_rebate_depth",
				"gs_rebate_width",
				"gs_sash_thk"

	hideparameter	"gs_rebate_depth",
				"gs_rebate_width",
				"gs_sash_thk"
endif


if iWindowType = WIN_W6HorizontalSlide then
	values{2} "iNumberOfRails" 	RAILSNUMBER_2,	stNumberOfRails[1],
								RAILSNUMBER_3,	stNumberOfRails[2]
endif


! =============================================================================
! Window Specific Parameters
! =============================================================================

values "gs_glass_thk"	range (0, )

values "gs_parapet_inset_thk" range [0, ]

values{2} "gs_SashText_typ_num" 	MITERED_JOINT, `Угловое Соединение`,
									BUTT_JOINT, `Соединение Встык`

values "gs_frame_thk"	range (gs_rebate_depth, ]
values "gs_frame_width"	range (gs_rebate_width, ]
values "gs_frame_width_left"	range (gs_rebate_width, ]
values "gs_frame_width_upper"	range (gs_rebate_width, ]
values "gs_frame_width_lower"	range (gs_rebate_width, ]
values "gs_sash_width" RANGE (0,)
values "gs_sash_thk" RANGE (0,)
values "gs_rebate_width" range (0, gs_frame_width)
values "gs_rebate_depth" range (0, gs_frame_thk)

if gs_uniform_framewidth then
	lock	"gs_frame_width_left",
			"gs_frame_width_upper",
			"gs_frame_width_lower"

	if _bPossibleTransom then
		lock	"gs_UTrans_w",
				"gs_Mullion_w"
	endif
endif

! =============================================================================
! Opening Length restrictions
! =============================================================================

if iWindowType = WIN_W2HorizontalSlide then
	values "openingLength_01" range [0,openingMaxLength_01]
	values "openingLength2D_01" range [0,openingMaxLength_01]

	values "openingLength_03" range [0,openingMaxLength_03]
	values "openingLength2D_03" range [0,openingMaxLength_03]
endif

if iWindowType = WIN_W3HorizontalSlide then
	values "openingLength_03" range [0,openingMaxLength_03]
	values "openingLength2D_03" range [0,openingMaxLength_03]

	values "openingLength_01" range [0,openingMaxLength_01]
	values "openingLength2D_01" range [0,openingMaxLength_01]

	values "openingLength_04" range [0,openingMaxLength_04]
	values "openingLength2D_04" range [0,openingMaxLength_04]
endif

if iWindowType = WIN_W4HorizontalSlide then
	values "openingLength_03" range [0,openingMaxLength_03]
	values "openingLength2D_03" range [0,openingMaxLength_03]

	values "openingLength_01" range [0,openingMaxLength_01]
	values "openingLength2D_01" range [0,openingMaxLength_01]

	values "openingLength_02" range [0,openingMaxLength_02]
	values "openingLength2D_02" range [0,openingMaxLength_02]

	values "openingLength_04" range [0,openingMaxLength_04]
	values "openingLength2D_04" range [0,openingMaxLength_04]
endif

if iWindowType = WIN_W6HorizontalSlide then
	! -------------- Middle 1 -----------------------------------
	values "openingLength_01" range [0, openingMaxLength_01]
	values "openingLength2D_01" range [0, openingMaxLength_01]
	
	! -------------- Middle 2 -----------------------------------
	values "openingLength_02" range [0,openingMaxLength_02]
	values "openingLength2D_02" range [0,openingMaxLength_02]
	
	! -------------- Side 1 / 1 ---------------------------------
	values "openingLength_03" range [0,openingMaxLength_03]
	values "openingLength2D_03" range [0,openingMaxLength_03]
	
	! -------------- Side 2 / 1 ---------------------------------
	values "openingLength_04" range [0,openingMaxLength_04]
	values "openingLength2D_04" range [0,openingMaxLength_04]
	
	! -------------- Side 1 / 2 ---------------------------------
	values "openingLength_05" range [0,openingMaxLength_05]
	values "openingLength2D_05" range [0,openingMaxLength_05]
	
	! -------------- Side 2 / 2 ---------------------------------
	values "openingLength_06" range [0,openingMaxLength_06]
	values "openingLength2D_06" range [0,openingMaxLength_06]
endif


! --------------------------------------------------------------------------------
! Ledge parameters
! --------------------------------------------------------------------------------
if not(bSashLedge) then
	lock "sashLedgeHeight", "sashLedgeThickness"
endif



! --------------------------------------------------------------------------------
! Sash to Edit popup
! --------------------------------------------------------------------------------
if vardim1(_validSashID) > 0 then
	values{2} "gs_sash_set_to_edit" _validSashID, _stValidSashName
endif

if gs_sash_uniform then
	lock "gs_sash_set_to_edit"
	hideparameter "gs_sash_set_to_edit"
else
	lock	"iMullionStyle_00"
endif


! --------------------------------------------------------------------------------
! Custom Panels
! --------------------------------------------------------------------------------

dim gs_pt[]

if _bHasCustomPanel then
	call "Window_Panel_Collection" parameters returned_parameters gs_pt
	values "gs_cust_panel_01" gs_pt
	values "gs_cust_panel_03" gs_pt

	if iWindowType = WIN_W3HorizontalSlide then
		values "gs_cust_panel_04" gs_pt
	endif

	if iWindowType = WIN_W6HorizontalSlide then
		values "gs_cust_panel_05" gs_pt
	endif

	if _bPossibleTransom then
		values "gs_cust_panel_05" gs_pt
		values "gs_cust_panel_07" gs_pt
	endif
endif


! --------------------------------------------------------------------------------
! Panel Style
! --------------------------------------------------------------------------------
_idx = 1
dim _stMullionPars[]
	_stMullionPars[_idx] = "iMullionStyle_00"		: _idx = _idx + 1
	_stMullionPars[_idx] = "iMullionStyle_01"		: _idx = _idx + 1
	_stMullionPars[_idx] = "iMullionStyle_03"		: _idx = _idx + 1

if iWindowType = WIN_W3HorizontalSlide then
	_stMullionPars[_idx] = "iMullionStyle_04"		: _idx = _idx + 1
endif

if iWindowType = WIN_W6HorizontalSlide then
	_stMullionPars[_idx] = "iMullionStyle_05"		: _idx = _idx + 1
endif

if _bPossibleTransom then
	_stMullionPars[_idx] = "iMullionStyle_05"		: _idx = _idx + 1
	_stMullionPars[_idx] = "iMullionStyle_07"		: _idx = _idx + 1
endif

! set value list for all panel type parameters
for _iPar = 1 to (_idx-1)
	if iWindowType = WIN_W2HorizontalSlide then
		! has divided sash option
		values{2} _stMullionPars[_iPar]	MULLION_NONE, 			stSashType[1],
										MULLION_HVGRID,			stSashType[2],
										MULLION_EDITABLEGRID,	stSashType[3],
										MULLION_DIVIDED,		stSashType[6],	
										MULLION_SOLID_PANEL,	stSashType[15],
										MULLION_CUSTOM,			stSashType[4]
	else
		values{2} _stMullionPars[_iPar]	MULLION_NONE, 			stSashType[1],
										MULLION_HVGRID,			stSashType[2],
										MULLION_EDITABLEGRID,	stSashType[3],
										MULLION_SOLID_PANEL,	stSashType[15],
										MULLION_CUSTOM,			stSashType[4]
	endif
next _iPar


values{2} "iMullionPosition"	MULLION_OUTSIDE,	stMullionPosition[1],
								MULLION_INSIDE,		stMullionPosition[2],
								MULLION_THROUGHOUT,	stMullionPosition[3]



! --------------------------------------------------------------------------------
! Mullion/Grid Number Parameter Pairs override
! --------------------------------------------------------------------------------
if iWindowType = WIN_W3HorizontalSlide then
	iMullionStyle_08 = iMullionStyle_07
	gs_cust_panel_08 = gs_cust_panel_07
	vgn_08 = vgn_07
	hgn_08 = hgn_07

	parameters iMullionStyle_08 = iMullionStyle_08,
				gs_cust_panel_08 = gs_cust_panel_08,
				vgn_08 = vgn_08,
				hgn_08 = hgn_08

	lock "iMullionStyle_08",
			"gs_cust_panel_08",
			"vgn_08", "hgn_08"
endif

if iWindowType = WIN_W4HorizontalSlide then
	iMullionStyle_02 = iMullionStyle_01
	iMullionStyle_04 = iMullionStyle_03
	iMullionStyle_06 = iMullionStyle_05
	iMullionStyle_08 = iMullionStyle_07

	gs_cust_panel_02 = gs_cust_panel_01
	gs_cust_panel_04 = gs_cust_panel_03
	gs_cust_panel_06 = gs_cust_panel_05
	gs_cust_panel_08 = gs_cust_panel_07

	vgn_02	= vgn_01
	vgn_04	= vgn_03
	vgn_06	= vgn_05
	vgn_08	= vgn_07
	hgn_02	= hgn_01
	hgn_04	= hgn_03
	hgn_06	= hgn_05
	hgn_08	= hgn_07

	parameters iMullionStyle_02 = iMullionStyle_02,
				iMullionStyle_04 = iMullionStyle_04,
				iMullionStyle_06 = iMullionStyle_06,
				iMullionStyle_08 = iMullionStyle_08,
				gs_cust_panel_02 = gs_cust_panel_02,
				gs_cust_panel_04 = gs_cust_panel_04,
				gs_cust_panel_06 = gs_cust_panel_06,
				gs_cust_panel_08 = gs_cust_panel_08,
				vgn_02	= vgn_02,
				vgn_04	= vgn_04,
				vgn_06	= vgn_06,
				vgn_08	= vgn_08,
				hgn_02	= hgn_02,
				hgn_04	= hgn_04,
				hgn_06	= hgn_06,
				hgn_08	= hgn_08

	lock	"iMullionStyle_02",
			"iMullionStyle_04",
			"iMullionStyle_06",
			"iMullionStyle_08",
			"gs_cust_panel_02",
			"gs_cust_panel_04",
			"gs_cust_panel_06",
			"gs_cust_panel_08",
			"vgn_02", "hgn_02",
			"vgn_04", "hgn_04",
			"vgn_06", "hgn_06",
			"vgn_08", "hgn_08"
endif

if iWindowType = WIN_W6HorizontalSlide then
	iMullionStyle_02 = iMullionStyle_01
	iMullionStyle_04 = iMullionStyle_03
	iMullionStyle_06 = iMullionStyle_05

	gs_cust_panel_02 = gs_cust_panel_01
	gs_cust_panel_04 = gs_cust_panel_03
	gs_cust_panel_06 = gs_cust_panel_05

	vgn_02	= vgn_01
	vgn_04	= vgn_03
	vgn_06	= vgn_05

	hgn_02	= hgn_01
	hgn_04	= hgn_03
	hgn_06	= hgn_05

	parameters iMullionStyle_02 = iMullionStyle_02,
				iMullionStyle_04 = iMullionStyle_04,
				iMullionStyle_06 = iMullionStyle_06,
				gs_cust_panel_02 = gs_cust_panel_02,
				gs_cust_panel_04 = gs_cust_panel_04,
				gs_cust_panel_06 = gs_cust_panel_06,
				vgn_02	= vgn_02,
				vgn_04	= vgn_04,
				vgn_06	= vgn_06,
				hgn_02	= hgn_02,
				hgn_04	= hgn_04,
				hgn_06	= hgn_06

	lock	"iMullionStyle_02",
			"iMullionStyle_04",
			"iMullionStyle_06",
			"gs_cust_panel_02",
			"gs_cust_panel_04",
			"gs_cust_panel_06",
			"vgn_02", "hgn_02",
			"vgn_04", "hgn_04",
			"vgn_06", "hgn_06"

endif

! --------------------------------------------------------------------------------
! Check lock cases
! --------------------------------------------------------------------------------

if bLockMullionParams then
	lock			"gw", "gth", "iMullionPosition", "gs_grill_mat", "gs_grill_mat2"
	hideparameter	"gw", "gth", "iMullionPosition", "gs_grill_mat", "gs_grill_mat2"
endif

if bLockMullionSizeParams then
	lock			"gw", "gth", "iMullionPosition"
	hideparameter	"gw", "gth", "iMullionPosition"
endif

if bLockGlassParams then
	lock "gs_glass_mat", "gs_glass_pen"
	hideparameter "gs_glass_mat", "gs_glass_pen"
endif

values "gw" range[0,)
values "gth" range[0,)


! --------------------------------------------------------------------------------
! OVERSIZE
! --------------------------------------------------------------------------------
if ac_cw_function and ac_corner_window then HIDEPARAMETER "gs_right_oversize"


! =============================================================================
! SWE Label sash ID handling
! =============================================================================

	call "winDoorCasIDmacro" parameters 	isSweDoorWindow			= 0,
											sashRowNum				= 0,
											sashColumnNum			= 0,
											iWindowType				= iWindowType,
											iWindowClass			= 0,
											gs_bLeftSLight			= 0,
											gs_bSLight				= 0,
											gs_UTrans				= gs_UTrans,
											gs_LTrans				= 0,
											gs_UTrans_Div			= 0,
											gs_LTrans_Div			= 0,
											nDinamicSash			= 0,
											iUTrans					= iUTrans*gs_UTrans




IF gs_UTrans then
	mainSashHeight = gs_UTrans_h - gs_UTrans_w/2 - gs_frame_width_lower
	transomSashHeight = ac_unit_height - gs_UTrans_h - gs_UTrans_w/2 - gs_frame_width_upper + 2*gs_rebate_width
else
	mainSashHeight = ac_unit_height - gs_frame_width_lower - gs_frame_width_upper
	transomSashHeight = 0
endif

! =============================================================================
! Total Glazed Area Listing Parameters
! =============================================================================
if GLOB_MODPAR_NAME = "gs_list_glassarea" then
	gs_list_glassarea_tmp = gs_list_glassarea
	parameters gs_list_glassarea_tmp = gs_list_glassarea_tmp
else
	gs_list_glassarea = gs_list_glassarea_tmp
	parameters gs_list_glassarea = gs_list_glassarea
endif
if NOT(gs_list_glassarea_override) then
	dim horgrid[][3]
	dim vergrid[][3]
	dim horgrid2[][3]
	dim vergrid2[][3]
	gs_list_glassarea	= 0
	grillWidth			= gw

	for _idxSash = 1 to vardim1(_sashID)
		if _sashID[_idxSash] = 1 then
			iMullionStyle		= iMullionStyle_01
			iOpType				= gs_optype_m_01
			isLedgeProfileInSash = bSashLedge
			horGrillNum			= hgn_01 - 1
			vertGrillNum		= vgn_01 - 1
			horGrillNum2		= hgn2_01 - 1
			vertGrillNum2		= vgn2_01 - 1
			horgrid				= horgrid_01
			vergrid				= vergrid_01
			horgrid2			= horgrid2_01
			vergrid2			= vergrid2_01
			gs_horiz_div_height	= gs_horiz_div_height_01
			isVentilationProfileInSash = isVentilationProfileInSash_01
		endif
		if _sashID[_idxSash] = 2 then
			iMullionStyle		= iMullionStyle_02
			iOpType				= gs_optype_m_02
			isLedgeProfileInSash = bSashLedge
			horGrillNum			= hgn_02 - 1
			vertGrillNum		= vgn_02 - 1
			horgrid				= horgrid_02
			vergrid				= vergrid_02
			isVentilationProfileInSash = isVentilationProfileInSash_02
		endif
		if _sashID[_idxSash] = 3 then
			iMullionStyle		= iMullionStyle_03
			iOpType				= gs_optype_m_03
			isLedgeProfileInSash = bSashLedge
			horGrillNum			= hgn_03 - 1
			vertGrillNum		= vgn_03 - 1
			horGrillNum2		= hgn2_03 - 1
			vertGrillNum2		= vgn2_03 - 1
			horgrid				= horgrid_03
			vergrid				= vergrid_03
			horgrid2			= horgrid2_03
			vergrid2			= vergrid2_03
			gs_horiz_div_height	= gs_horiz_div_height_03
			isVentilationProfileInSash = isVentilationProfileInSash_03
		endif
		if _sashID[_idxSash] = 4 then
			iMullionStyle		= iMullionStyle_04
			iOpType				= gs_optype_m_04
			isLedgeProfileInSash = bSashLedge
			horGrillNum			= hgn_04 - 1
			vertGrillNum		= vgn_04 - 1
			horgrid				= horgrid_04
			vergrid				= vergrid_04
			isVentilationProfileInSash = isVentilationProfileInSash_04
		endif
		if _sashID[_idxSash] = 5 then
			iMullionStyle		= iMullionStyle_05
			iOpType				= gs_optype_m_05
			isLedgeProfileInSash = bSashLedge
			horGrillNum			= hgn_05 - 1
			vertGrillNum		= vgn_05 - 1
			horgrid				= horgrid_05
			vergrid				= vergrid_05
			isVentilationProfileInSash = isVentilationProfileInSash_05
		endif
		if _sashID[_idxSash] = 6 then
			iMullionStyle		= iMullionStyle_06
			iOpType				= gs_optype_m_06
			isLedgeProfileInSash = bSashLedge
			horGrillNum			= hgn_06 - 1
			vertGrillNum		= vgn_06 - 1
			horgrid				= horgrid_06
			vergrid				= vergrid_06
			isVentilationProfileInSash = isVentilationProfileInSash_06
		endif
		if _sashID[_idxSash] = 7 then
			iMullionStyle		= iMullionStyle_07
			iOpType				= gs_optype_m_07
			isLedgeProfileInSash = bSashLedge
			horGrillNum			= hgn_07 - 1
			vertGrillNum		= vgn_07 - 1
			horgrid				= horgrid_07
			vergrid				= vergrid_07
			isVentilationProfileInSash = isVentilationProfileInSash_07
		endif
		if _sashID[_idxSash] = 8 then
			iMullionStyle		= iMullionStyle_08
			iOpType				= gs_optype_m_08
			isLedgeProfileInSash = bSashLedge
			horGrillNum			= hgn_08 - 1
			vertGrillNum		= vgn_08 - 1
			horgrid				= horgrid_08
			vergrid				= vergrid_08
			isVentilationProfileInSash = isVentilationProfileInSash_08
		endif

		! Change ledge bool by mullion style and level of detail
		if	not(iMullionStyle = MULLION_NONE |\
				iMullionStyle = MULLION_HVGRID |\
				iMullionStyle = MULLION_EDITABLEGRID) then

			isLedgeProfileInSash = 0
		endif

		! override sash style variable if uniform
		if gs_sash_uniform then
			iMullionStyle = iMullionStyle_00
		endif

		glassWidth	= _sashWidth[_idxSash] - 2*gs_sash_width*(iOpType <> SASH_FIXED)
		glassHeight	= _sashHeight[_idxSash] - 2*gs_sash_width*(iOpType <> SASH_FIXED) - VentilationProfileHeight * isVentilationProfileInSash
		if isLedgeProfileInSash then
			if _bTransomSash[_idxSash] = 0 then
				glassHeight = glassHeight - sashLedgeHeight
			endif
		endif
		panelGlassArea = 0
		gosub "CalculateGlassArea"
		gs_list_glassarea = gs_list_glassarea + panelGlassArea
	next _idxSash

	parameters gs_list_glassarea = gs_list_glassarea
	lock "gs_list_glassarea"
endif

end

"preloadSurfaces":
	parameters	stored_material[1][1]	= gs_frame_mat,
				stored_material[1][2]	= gs_frame_mat2,
				stored_material[1][3]	= gs_sash_mat,
				stored_material[1][4]	= gs_sash_mat2,
				stored_material[1][5]	= gs_grill_mat,
				stored_material[1][6]	= gs_grill_mat2,
				stored_material[1][7]	= gs_panel_mat,
				stored_material[1][8]	= gs_panel_mat2,
				stored_material[1][9]	= matSashLedgeOutside,
				stored_material[1][10]	= matSashLedgeInside
return


"CalculateGlassArea":
! =============================================================================
! Editable Grid Area Calculation
! =============================================================================
!Input:
!	glassWidth 		Width of Glassfield
!	glassHeight		Height of Glassfield
!	grillWidth		Width of Grills
!	vertGrillNum	Number of vertical grids
!	horGrillNum		Number of horizontal grids
!	horgrid			Array of Horizontal Editable grids
!	vergrid			Array of vertical Editable grids
!OutPut:
!	panelGlassArea
! =============================================================================

panelGlassArea  = glassWidth * glassHeight

if iMullionStyle = 2 then ! H-V Grid
	horGrillArea	= horGrillNum * glassWidth * grillWidth
	vertGrillArea	= vertGrillNum * glassHeight * grillWidth
	sectGrillArea	= horGrillNum * vertGrillNum * grillWidth * grillWidth
	summaGrillArea	= horGrillArea + vertGrillArea - sectGrillArea

	panelGlassArea = panelGlassArea - summaGrillArea
endif

if iMullionStyle = 3 then ! Editable Grid
	dim _horgrid[][3]
	dim _vergrid[][3]

	_NumHorGrills	= horGrillNum
	_NumVerGrills	= vertGrillNum
	_horgrid		= horgrid
	_vergrid		= vergrid

	gosub "GrillAreaCalculation"
	panelGlassArea	= panelGlassArea - summaGrillArea
endif

if iMullionStyle = 4 then ! Custom Panel
	panelGlassArea = 0
endif

return

! =============================================================================
! Editable Grid Area Calculation
! =============================================================================
!Input:
!	_NumVerGrills
!	_NumHorGrills
!	_horgrid
!	_vergrid
!OutPut:
!	summaGrillArea
! =============================================================================

"GrillAreaCalculation":
	totalGrillSectionArea = 0
	for numVG = 1 to _NumVerGrills
		for numHG = 1 to _NumHorGrills
			if _horgrid[numHG][2] < _horgrid[numHG][3] then
				HorX1 = _horgrid[numHG][2]
				HorX2 = _horgrid[numHG][3]
			else
				HorX1 = _horgrid[numHG][3]
				HorX2 = _horgrid[numHG][2]
			endif
			HorY1 = _horgrid[numHG][1] + grilWidth / 2
			HorY2 = _horgrid[numHG][1] - grilWidth / 2

			if _vergrid[numVG][2] < _vergrid[numVG][3] then
				VertY1 = _vergrid[numVG][3]
				VertY2 = _vergrid[numVG][2]
			else
				VertY1 = _vergrid[numVG][2]
				VertY2 = _vergrid[numVG][3]
			endif
			VertX1 = _vergrid[numVG][1] - grilWidth / 2
			VertX2 = _vergrid[numVG][1] + grilWidth / 2

			gosub "GrillSectionCalculation"

			totalGrillSectionArea = totalGrillSectionArea + SectionArea
		next numHG
	next numVG

	totalHorGrillArea = 0
	for numHG = 1 to _NumHorGrills
		if _horgrid[numHG][2] < _horgrid[numHG][3] then
			totalHorGrillArea = totalHorGrillArea + grilWidth * (_horgrid[numHG][3] - _horgrid[numHG][2])
		else
			totalHorGrillArea = totalHorGrillArea + grilWidth * (_horgrid[numHG][2] - _horgrid[numHG][3])
		endif
	next numHG

	totalVerGrillArea= 0
	for numVG = 1 to _NumVerGrills
		if _vergrid[numVG][2] < _vergrid[numVG][3] then
			totalVerGrillArea = totalVerGrillArea + grilWidth * (_vergrid[numHG][3] - _vergrid[numHG][2])
		else
			totalVerGrillArea = totalVerGrillArea + grilWidth * (_vergrid[numHG][2] - _vergrid[numHG][3])
		endif
	next numVG

	summaGrillArea		= totalVerGrillArea + totalHorGrillArea - totalGrillSectionArea
return

! =============================================================================
! Editable Grid Section Calculation
! =============================================================================
!Input:
!	HorX1 : Horizontal Grill Left point
!	HorY1 : Horizontal Grill Top point
!	HorX2 : Horizontal Grill Right point
!	HorY2 : Horizontal Grill Bottom point
!
!	VertX1 : Verical Grill Left point
!	VertY1 : Verical Grill Top point
!	VertX2 : Verical Grill Right point
!	VertY2 : Verical Grill Bottom point
!OutPut:
!	SectionArea
! =============================================================================

"GrillSectionCalculation":

	bSectArea = 0

	LeftSided				= 0
	RightSided				= 0
	HorizontalTransection	= 0
	if (HorX1 < VertX1) & ((HorX2 > VertX1) & (HorX2 < VertX2)) then LeftSided = 1
	if ((HorX1 > VertX1) & (HorX1 < VertX2)) & (HorX2 > VertX2) then RightSided = 1
	if (HorX1 < VertX1) & (HorX2 > VertX2) then HorizontalTransection = 1

	TopSided				= 0
	BottomtSided			= 0
	VerticalTransection		= 0
	if (HorY1 > VertY1) & ((HorY2 < VertY1) & (HorY2 > VertY2)) then TopSided = 1
	if ((HorY1 < VertY1) & (HorY1 > VertY2)) & (HorY2 < VertY2) then BottomtSided = 1
	if (HorY1 < VertY1) & (HorY2 > VertY2) then VerticalTransection = 1

	if (TopSided & LeftSided ) then !TopLeft
		SectionX1 = VertX1
		SectionY1 = VertY1
		SectionX2 = HorX2
		SectionY2 = HorY2
		bSectArea = 1
	endif
	if (TopSided & HorizontalTransection ) then !TopMid
		SectionX1 = VertX1
		SectionY1 = VertY1
		SectionX2 = VertX2
		SectionY2 = HorY2
		bSectArea = 1
	endif
	if (TopSided & RightSided ) then !TopRight
		SectionX1 = HorX1
		SectionY1 = VertY1
		SectionX2 = VertX2
		SectionY2 = HorY2
		bSectArea = 1
	endif

	if (VerticalTransection & LeftSided ) then !MidLeft
		SectionX1 = VertX1
		SectionY1 = HorY1
		SectionX2 = HorX2
		SectionY2 = HorY2
		bSectArea = 1
	endif
	if (VerticalTransection & HorizontalTransection ) then !FullSection
		SectionX1 = VertX1
		SectionY1 = HorY1
		SectionX2 = VertX2
		SectionY2 = HorY2
		bSectArea = 1
	endif
	if (VerticalTransection & RightSided ) then !MidRight
		SectionX1 = HorX1
		SectionY1 = HorY1
		SectionX2 = VertX2
		SectionY2 = HorY2
		bSectArea = 1
	endif

	if (BottomtSided & LeftSided ) then !BotLeft
		SectionX1 = VertX1
		SectionY1 = HorY1
		SectionX2 = HorX2
		SectionY2 = VertY2
		bSectArea = 1
	endif
	if (BottomtSided & HorizontalTransection ) then !BotMid
		SectionX1 = VertX1
		SectionY1 = HorY1
		SectionX2 = VertX2
		SectionY2 = VertY2
		bSectArea = 1
	endif
	if (BottomtSided & RightSided ) then !BotRight
		SectionX1 = HorX1
		SectionY1 = HorY1
		SectionX2 = VertY2
		SectionY2 = VertX2
		bSectArea = 1
	endif

	if bSectArea then
		SectionArea = (SectionX2 - SectionX1) * (SectionY1 - SectionY2)
	else
		SectionArea = 0
	endif
Return
