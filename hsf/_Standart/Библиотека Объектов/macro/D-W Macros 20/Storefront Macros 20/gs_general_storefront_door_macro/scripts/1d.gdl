
! const values for parameter: iTypeDemolitionFill
RENOVATION_FILL_EXIST		= 1
RENOVATION_FILL_DEMOLISHED	= 2
RENOVATION_FILL_NEW			= 3
RENOVATION_FILL_NEW_FULL	= 4


! const values for parameter: iCustomCCEditWallSide
EDITED_WALL_FACE_OUTSIDE = 1
EDITED_WALL_FACE_INSIDE  = 2


! const values for parameter: iCustomCCEditJambSide
EDITED_JAMB_SIDE_BOTH  = 1
EDITED_JAMB_SIDE_LEFT  = 2
EDITED_JAMB_SIDE_RIGHT = 3


! const values for parameter: iCustomCCThicknessType
THICKNESS_TYPE_ORIGINAL = 1
THICKNESS_TYPE_CUSTOM   = 2


! const values for parameter: iCustomCCEditSkin
EDITED_SKIN_1 = 1
EDITED_SKIN_2 = 2
EDITED_SKIN_3 = 3
EDITED_SKIN_4 = 4


! const values for parameter: iCustomCCOrientation
ORIENTATION_ORIGINAL  = 1
ORIENTATION_TURNED_IN = 2


! const values for parameter: iDWDet3D
DETLEVEL_DW3D_SCALESENS    = 1
DETLEVEL_DW3D_DETAILED     = 2
DETLEVEL_DW3D_SIMPLE       = 3
DETLEVEL_DW3D_OFF          = 4
DETLEVEL_DW3D_CHI_SIMPLE   = 5
DETLEVEL_DW3D_CHI_DETAILED = 6


! const values for parameter: iDWDet2D
DETLEVEL_DW2D_MVO     = 1
DETLEVEL_DW2D_SCSENS  = 2
DETLEVEL_DW2D_50      = 3
DETLEVEL_DW2D_100     = 4
DETLEVEL_DW2D_200     = 5
DETLEVEL_DW2D_OFF     = 6
DETLEVEL_DW2D_CHISMPL = 7
DETLEVEL_DW2D_CHIDET  = 8
DETLEVEL_DW2D_20      = 9
DETLEVEL_DW2D_500     = 10

! Contact person: <SzL, NJ>

EPS = 0.0001

bDisabeMirroring = 0

! =============================================================================
! Localization
! =============================================================================
dim stDoorTypes[75]
	stDoorTypes[ 1]	= `Стиль 1`
	stDoorTypes[ 2]	= ``
	stDoorTypes[ 3]	= ``
	stDoorTypes[ 4]	= ``
	stDoorTypes[ 5]	= ``
	stDoorTypes[ 6]	= ``
	stDoorTypes[ 7]	= ``
	stDoorTypes[ 8]	= ``
	stDoorTypes[ 9]	= ``
	stDoorTypes[10] = ``
	stDoorTypes[11] = ``
	stDoorTypes[12] = ``
	stDoorTypes[13] = ``
	stDoorTypes[14] = ``
	stDoorTypes[15] = ``
	stDoorTypes[16] = ``
	stDoorTypes[17] = ``
	stDoorTypes[18] = ``
	stDoorTypes[19] = ``
	stDoorTypes[20] = ``
	stDoorTypes[21] = ``
	stDoorTypes[22] = ``
	stDoorTypes[23] = ``
	stDoorTypes[24] = ``
	stDoorTypes[25] = ``
	stDoorTypes[26] = ``
	stDoorTypes[27] = ``
	stDoorTypes[28] = ``
	stDoorTypes[29] = ``
	stDoorTypes[30] = ``
	stDoorTypes[31] = ``
	stDoorTypes[32] = ``
	stDoorTypes[33] = ``
	stDoorTypes[34] = ``
	stDoorTypes[35] = `Стиль 2`
	stDoorTypes[36] = `Стиль 3`
	stDoorTypes[37] = `Стиль 4`
	stDoorTypes[38] = `Стиль 5`
	stDoorTypes[39] = `Стиль 7`
	stDoorTypes[40] = `Стиль 8`
	stDoorTypes[41] = ``
	stDoorTypes[42] = ``
	stDoorTypes[43]	= ``
	stDoorTypes[44]	= ``
	stDoorTypes[45] = ``
	stDoorTypes[46] = ``
	stDoorTypes[47]	= ``
	stDoorTypes[48] = ``
	stDoorTypes[49] = `Специальное Полотно Двери`
	stDoorTypes[50] = `Пусто`
	stDoorTypes[51] = ``
	stDoorTypes[52] = ``
	stDoorTypes[53]	= ``
	stDoorTypes[54]	= ``
	stDoorTypes[55] = ``
	stDoorTypes[56] = ``
	stDoorTypes[57] = ``
	stDoorTypes[58] = ``
	stDoorTypes[59] = ``
	stDoorTypes[60] = ``
	stDoorTypes[61] = ``
	stDoorTypes[62] = ``
	stDoorTypes[63]	= ``
	stDoorTypes[64]	= ``
	stDoorTypes[65] = ``
	stDoorTypes[66] = ``
	stDoorTypes[67] = ``
	stDoorTypes[68] = ``
	stDoorTypes[69] = ``
	stDoorTypes[70] = ``
	stDoorTypes[71] = ``
	stDoorTypes[72] = ``
	stDoorTypes[73]	= ``
	stDoorTypes[74]	= ``
	stDoorTypes[75] = `Стиль 6`

dim stDetail[6]
	stDetail[1] = `Зависит от Масштаба`
	stDetail[2] = `Детальный`
	stDetail[3] = `Простой`
	stDetail[4] = `Откл.`
	stDetail[5] = `Китайский Простой`
	stDetail[6] = `Китайский Детальный`

dim stFrameElemJoin[2]
	stFrameElemJoin[1] = `Угловое Соединение`
	stFrameElemJoin[2] = `Соединение Встык`

dim stFrameStyle[4]
	stFrameStyle[1] = `Видимые Профили`
	stFrameStyle[2] = `Застекленная`
	stFrameStyle[3] = `Застекленная без Коробки`
	stFrameStyle[4] = `Угловая Коробка`

dim stDivisionMethod[2]
	stDivisionMethod[1] = `Количество Раскладки`
	stDivisionMethod[2] = `Шаг Раскладки`

dim	stEndFrameProfile[3]
	stEndFrameProfile[1] = `Обычный`
	stEndFrameProfile[2] = `Соединения`
	stEndFrameProfile[3] = `Угол`

dim stOpeningDir[2]
	stOpeningDir[1] = `Со Стороны Четверти`
	stOpeningDir[2] = `С Противоположной Стороны`

! gs_opening_dir_sl_m:
OPENING_DIR_DEFAULT_OUTSIDE	= 1
OPENING_DIR_FLIPPED_INSIDE	= 2

! Frame Element Joinery
MITERED_JOINT	= 1
BUTT_JOINT		= 2

! iStorefrontType
SFTYPE_DOOR_ONLY	= 1
SFTYPE_DOOR_TRANSOM	= 2
SFTYPE_DOOR_TRSL	= 3


! iFrameStyleLeft, iFrameStyleRight:
FRAME_STYLE_VISIBLE_MULLIONS		= 1
FRAME_STYLE_BUTT_GLAZED				= 2
FRAME_STYLE_BUTT_GLAZED_WO_FRAME	= 3
FRAME_STYLE_ANGLE_FRAME				= 4

! gs_leaf_optype_m:
LEAF_1L_SIDE_HUNG			= 1
LEAF_1L_SIDE_HUNG_M			= 2
LEAF_1L_DOUBLE_ACTING		= 3
LEAF_1L_DOUBLE_ACTING_M		= 4
LEAF_2L_SIDE_HUNG			= 5
LEAF_2L_DOUBLE_ACTING		= 6
LEAF_2L_DOUBLE_EGRESS		= 7
LEAF_2L_DOUBLE_EGRESS_M		= 8
LEAF_1L_PIVOT				= 9
LEAF_1L_PIVOT_M				= 10
LEAF_2L_1SLIDING			= 11
LEAF_2L_1SLIDING_M			= 12
LEAF_2L_2SLIDING			= 13
LEAF_2L_2SLIDING_M			= 14
LEAF_3L_2SLIDING			= 15
LEAF_3L_2SLIDING_M			= 16
LEAF_4L_2SLIDING			= 17
LEAF_4L_3SLIDING			= 18
LEAF_4L_3SLIDING_M			= 19
LEAF_4L_4SLIDING			= 20
LEAF_4L_4SLIDING_M			= 21
LEAF_1L_EXTERNAL_SLIDING	= 22
LEAF_1L_EXTERNAL_SLIDING_M	= 23
LEAF_2L_EXTERNAL_SLIDING	= 24
LEAF_1L_POCKET				= 25
LEAF_1L_POCKET_M			= 26
LEAF_2L_POCKET				= 27
LEAF_1L_MULTIPANEL			= 28
LEAF_1L_MULTIPANEL_M		= 29
LEAF_2L_MULTIPANEL			= 30
LEAF_REVOLVING				= 31
LEAF_3L_2SLIDING_CENTER		= 32
LEAF_GAR_1L_UP_AND_OVER		= 100
LEAF_GAR_1L_UP_SLIDING		= 101
LEAF_GAR_1L_SECTIONAL		= 102
LEAF_GAR_2L_SIDE_HUNG		= 103
LEAF_GAR_2L_ROLLSIDE		= 104
LEAF_GAR_1L_ROLLUP			= 105

DET2D_FS_OFF				= 0
DET2D_FS_SCALESENS			= -1
DET2D_FS_SIMPLE				= 11		! Simple --> INT 200
DET2D_FS_MIDDLE				= 21		! Middle --> INT 100
DET2D_FS_DETAILED			= 30		! Detailed --> INT 50
DET2D_FS_SIMPLE_CHI			= 51		! Chinese Simple
DET2D_FS_DETAILED_CHI		= 52		! Chinese Detailed

! iLoD2D
SYMBD_OFF							= 0
SYMBD_SCALESENS						= 1
SYMBD_S_1LINE						= 11
SYMBD_S_2LINE						= 12
SYMBD_S_1LINE_FRAME					= 13
SYMBD_S_1LINECL						= 14
SYMBD_S_5							= 15
SYMBD_S_6							= 16
SYMBD_S_7							= 17
SYMBD_S_8							= 18
SYMBD_S_9							= 19
SYMBD_M_1LINELEAF_2LINE				= 21
SYMBD_M_2LINELEAFCL_GLASS			= 22
SYMBD_M_1LINELEAF_1LINE				= 23
SYMBD_M_4							= 24
SYMBD_M_5							= 25
SYMBD_M_6							= 26
SYMBD_M_7							= 27
SYMBD_M_8							= 28
SYMBD_M_9							= 29
SYMBD_D_2LINELEAFOP_GLASS			= 31
SYMBD_D_2LINELEAFCL_REBATEONGLASS	= 32
SYMBD_D_2LINELEAFOP_2LINE			= 33
SYMBD_D_2LINELEAFOP_SASH			= 34
SYMBD_D_1LINELEAF_GLASS				= 35
SYMBD_D_2LINELEAFCL_SASHWLINE		= 36
SYMBD_D_1LINELEAF_SASHWLINE			= 37
SYMBD_D_2LEAFOPGLASS_GLASS			= 38
SYMBD_D_9							= 39

SYMBGLASS_NOGLASS					= 0
SYMBGLASS_SIMPLEGLASS				= 1
SYMBGLASS_DOUBLEGLASS				= 2

! gs_iSwingType:
LINE_SHAPE_SWING_NONE			= 0
LINE_SHAPE_SWING_CURVED			= 1
LINE_SHAPE_SWING_STRAIGHT		= 2
LINE_SHAPE_SWING_SIMPLE_LINE	= 3
LINE_SHAPE_SWING_LEAF_LINE		= 4

ENDFRAME_NORMAL	= 1
ENDFRAME_JOINT	= 2
ENDFRAME_CORNER	= 3

DIVISION_NUM = 1
DIVISION_WIDTH = 2

! iDoorPanelType
PANEL_STYLE1 = 1
PANEL_STYLE2 = 35
PANEL_STYLE3 = 36
PANEL_STYLE4 = 37
PANEL_STYLE5 = 38
PANEL_STYLE6 = 75
PANEL_STYLE7 = 39
PANEL_STYLE8 = 40
PANEL_CUSTOM = 49
PANEL_EMPTY = 0

! ifc_optype:
DOOR_OP_NOT_DEFINED						= 0
DOOR_OP_SINGLE_DOOR_SINGLE_SWING		= 1
DOOR_OP_DOUBLE_DOOR_SINGLE_SWING		= 2
DOOR_OP_SINGLE_DOOR_DOUBLE_SWING		= 3
DOOR_OP_DOUBLE_DOOR_DOUBLE_SWING		= 4
DOOR_OP_DOUBLE_DOOR_SINGLE_SWING_OPP	= 5
DOOR_OP_SINGLE_DOOR_SLIDING				= 6
DOOR_OP_DOUBLE_DOOR_SLIDING				= 7
DOOR_OP_SINGLE_DOOR_FOLDING				= 8
DOOR_OP_DOUBLE_DOOR_FOLDING				= 9
DOOR_OP_REVOLVING						= 10
DOOR_OP_ROLLING_UP						= 11
DOOR_OP_USER_DEFINED					= 12

! iVentilationProfileType
VENTPROFILE_OVER_FRAME		= 2
VENTPROFILE_OVER_GLAZING	= 3

! =============================================================================
! Main Definitions
! =============================================================================

if gs_wthk then
	gs_fthk = WALL_THICKNESS
	parameters gs_fthk = gs_fthk
	hideparameter "gs_frame_thk"
	lock "gs_frame_thk"
else
	gs_fthk = gs_frame_thk
	parameters gs_fthk = gs_fthk
endif

!! ANGLE MAX !!

aps = (ac_unit_width-(gs_ver_gnum+1)*gs_grid_w)/2
yps = ((-2*gs_fthk*(gs_frame_width/2)**2)-SQR(4*(gs_frame_width/2)**4*gs_fthk**2-4*((gs_frame_width/2)**2-aps**2)*(gs_frame_width/2)**2*(aps**2+gs_fthk**2)))/(2*((gs_frame_width/2)**2-aps**2))
if abs(gs_frame_width)>EPS then
	sps = 90-ASN((gs_frame_width/2)/yps)
endif

if leftCornerAngle/2<sps then
	leftCornerAngle = sps*2
	parameters leftCornerAngle = leftCornerAngle
endif
if rightCornerAngle/2<sps then
	rightCornerAngle = sps*2
	parameters rightCornerAngle = rightCornerAngle
endif
if leftCornerAngle/2>180-sps then
	leftCornerAngle = 360-sps*2
	parameters leftCornerAngle = leftCornerAngle
endif
if rightCornerAngle/2>180-sps then
	rightCornerAngle = 360-sps*2
	parameters rightCornerAngle = rightCornerAngle
endif


! =============================================================================
! Ventilation Profile Type Enable
! =============================================================================

bEnableVentilationProfile = 1
gs_VentilationProfileTypeEnable = 1


! ==============================================================================
! Other Function Control
! ==============================================================================

bEnableParapetInset			= 0
bEnableMasonryArch			= 0
bEnableFaschen				= 0
bEnableSill					= 0
bEnableBoard				= 0
bEnableThreshold			= 0
bEnableCasing				= 0
bEnableShutter				= 0
bEnableCustomCornerLeft		= 0
bEnableCustomCornerRight	= 0


! =============================================================================
! Frame End Profile Settings
! =============================================================================

if iEndFrameLeft = ENDFRAME_JOINT then
	gs_stack_left = 1
	gs_cl = 0
else
	if iEndFrameLeft = ENDFRAME_CORNER then
		gs_stack_left = 0
		gs_cl = 1
	else
		gs_stack_left = 0
		gs_cl = 0
	endif
endif
parameters	gs_stack_left	= gs_stack_left

if iEndFrameRight = ENDFRAME_JOINT then
	gs_stack_right = 1
	gs_cr = 0
else
	if iEndFrameRight = ENDFRAME_CORNER then
		gs_stack_right = 0
		gs_cr = 1
	else
		gs_stack_right = 0
		gs_cr = 0
	endif
endif
parameters	gs_stack_right	= gs_stack_right

if gs_stack_left then
	gs_fw_side_left = gs_frame_width/2
else
	if gs_cl then
		if leftCornerAngle <180 then
			gs_fw_side_left = gs_frame_width+gs_fthk*TAN(90-leftCornerAngle/2)
		endif
		if leftCornerAngle >180 then
			gs_fw_side_left = gs_frame_width-gs_fthk*TAN(90-leftCornerAngle/2)
		endif
	else
		gs_fw_side_left = gs_frame_width
	endif
endif
parameters gs_fw_side_left = gs_fw_side_left

if gs_stack_right then
	gs_fw_side_right = gs_frame_width/2
else
	if gs_cr then
		if rightCornerAngle <180 then
			gs_fw_side_right = gs_frame_width+gs_fthk*TAN(90-rightCornerAngle/2)
		endif
		if rightCornerAngle >180 then
			gs_fw_side_right = gs_frame_width-gs_fthk*TAN(90-rightCornerAngle/2)
		endif
	else
		gs_fw_side_right = gs_frame_width
	endif
endif
parameters gs_fw_side_right = gs_fw_side_right

if gs_stack_bottom then
	gs_fw_lower = bottomRailWidth/2
else
	gs_fw_lower = bottomRailWidth
endif
parameters gs_fw_lower = gs_fw_lower

if gs_stack_top then
	gs_fw_upper = gs_frame_width/2
else
	gs_fw_upper = gs_frame_width
endif
parameters gs_fw_upper = gs_fw_upper

! =============================================================================
! Door Panels
! =============================================================================
if (((gs_fthk-gs_leaf_thk) > EPS) & gs_ds & (gs_ds_thk > EPS) & (gs_ds_w > EPS)) then
	bEnableDoorStop = 1
else
	bEnableDoorStop = 0
endif

bDoorEmptyPanel = (iDoorPanelType = 0)

lw = ac_leaf_width
lar= lw * gs_rttl / 100 - gs_frame_width/2 * (gs_mf = 1)			! Right panel width
lal= lw * (100 - gs_rttl) / 100 - gs_frame_width/2 * (gs_mf = 1)	! Left panel width

! =============================================================================
! Sidelight and Transom Control
! =============================================================================

if iStorefrontType = SFTYPE_DOOR_ONLY then
	gs_door_transom = 0
endif
if iStorefrontType = SFTYPE_DOOR_ONLY or iStorefrontType = SFTYPE_DOOR_TRANSOM then
	gs_sidelight_left = 0
	gs_sidelight_right = 0
endif

bEnableMiddleRail = 1
if iStorefrontType <> SFTYPE_DOOR_TRSL and iDoorPanelType <> PANEL_STYLE7 then
	bEnableMiddleRail = 0
	bMiddleRail = 0
endif
if iStorefrontType = SFTYPE_DOOR_TRSL and not(gs_sidelight_right or gs_sidelight_left) and iDoorPanelType <> PANEL_STYLE7 then
	bEnableMiddleRail = 0
	bMiddleRail = 0
endif

frameOrSLightWidthRight	= gs_sidelight_width_right * gs_sidelight_right + gs_fw_side_right * not(gs_sidelight_right)
frameOrSLightWidthLeft	= gs_sidelight_width_left  * gs_sidelight_left  + gs_fw_side_left  * not(gs_sidelight_left)
frameOrTransomHeight	= gs_transom_height * gs_door_transom + gs_fw_upper * not(gs_door_transom)

if gs_wallhole_nominal | gs_reveal_nominal then
	unitWidth = A - gs_tolerance_left - gs_tolerance_right
endif
if gs_unit_nominal then
	unitWidth = A
endif
if gs_egress_nominal then
	unitWidth = A + frameOrSLightWidthRight + frameOrSLightWidthLeft + 2 * bEnableDoorStop * gs_ds_w
endif
if gs_leaf_nominal then
	unitWidth = A + frameOrSLightWidthRight + frameOrSLightWidthLeft
endif

if gs_sidelight_left then
	minSidelightWidthLeft = gs_fw_side_left + gs_frame_width + EPS
	maxSidelightWidthLeft = max(minSidelightWidthLeft, unitWidth - frameOrSLightWidthRight - (gs_ver_gnum * 2 + 1) * gs_grid_w - 10")
	if gs_sidelight_width_left < minSidelightWidthLeft then
		gs_sidelight_width_left = minSidelightWidthLeft
		parameters gs_sidelight_width_left = minSidelightWidthLeft
	endif
	if gs_sidelight_width_left > maxSidelightWidthLeft then
		gs_sidelight_width_left = maxSidelightWidthLeft
		parameters gs_sidelight_width_left = maxSidelightWidthLeft
	endif
else
	minSidelightWidthLeft	= frameOrSLightWidthLeft

	hideparameter "gs_sidelight_width_left"
	lock "gs_sidelight_width_left"
endif

if gs_sidelight_right then
	minSidelightWidthRight = gs_fw_side_right + gs_frame_width + EPS
	maxSidelightWidthRight = max(minSidelightWidthRight, unitWidth - frameOrSLightWidthLeft - (gs_ver_gnum * 2 + 1) * gs_grid_w - 10")
	if gs_sidelight_width_right < minSidelightWidthRight then
		gs_sidelight_width_right = minSidelightWidthRight
		parameters gs_sidelight_width_right = minSidelightWidthRight
	endif
	if gs_sidelight_width_right > maxSidelightWidthRight then
		gs_sidelight_width_right = maxSidelightWidthRight
		parameters gs_sidelight_width_right = maxSidelightWidthRight
	endif
else
	minSidelightWidthRight	= frameOrSLightWidthRight

	hideparameter "gs_sidelight_width_right"
	lock "gs_sidelight_width_right"
endif

if gs_door_transom then
	minTransomHeight = gs_fw_upper + (gs_hor_gtp*2 + 1) * gs_grid_w
	maxTransomHeight = ac_unit_height - midRailElevation - midRailWidth/2 - (gs_hor_gnumtr*2 + 1) * gs_grid_w
	if gs_transom_height < minTransomHeight then
		gs_transom_height = minTransomHeight
		parameters gs_transom_height = gs_transom_height
	endif
	if gs_transom_height > maxTransomHeight then
		gs_transom_height = maxTransomHeight
		parameters gs_transom_height = gs_transom_height
	endif
else
	minTransomHeight = frameOrTransomHeight

	hideparameter "gs_transom_height"
	lock "gs_transom_height"
endif


leftPanelWidth	= (gs_sidelight_width_left - gs_frame_width)  * gs_sidelight_left
rightPanelWidth	= (gs_sidelight_width_right - gs_frame_width) * gs_sidelight_right
topPanelHeight	= (gs_transom_height - gs_frame_width) * gs_door_transom

bDisabeMirroring	= 0
iWindowShape		= 0

gs_fillFr	= gs_bFills * gs_fillFr
gs_fillLeaf	= gs_bFills * gs_fillLeaf

bOpeningDirectionSL = (WIDO_REVEAL_SIDE exor gs_opening_dir_sl_m = OPENING_DIR_FLIPPED_INSIDE)

!===============================================================================

!! END OF ANGLE MAX !!

if not(bMiddleRail) then
	fw_tra		= midRailWidth
	midRailWidth	= bottomRailWidth * 2
else
	fw_tra = 0
endif

middlePanelHeight = ac_unit_height - (midRailElevation)*bMiddleRail - midRailWidth/2 - gs_frame_width * gs_door_transom - gs_fw_upper * not(gs_door_transom)

if iDivisionMethod = DIVISION_WIDTH then
	if abs(divWidthHor) < EPS then gs_ver_gnum=0
	if divWidthHor>0 then
		ha=ac_unit_width-frameOrSLightWidthRight-frameOrSLightWidthLeft
		if INT(ha/divWidthHor)=0 then PARAMETERS gs_ver_gnum=0
		if INT(ha/divWidthHor)>0 then
			if (ha/INT(ha/divWidthHor)-divWidthHor)<=(divWidthHor-ha/(INT(ha/divWidthHor)+1)) then
				PARAMETERS gs_ver_gnum=INT(ha/divWidthHor)-1
			endif
			if (ha/INT(ha/divWidthHor)-divWidthHor)>(divWidthHor-ha/(INT(ha/divWidthHor)+1)) then
				PARAMETERS gs_ver_gnum=INT(ha/divWidthHor)
			endif
		endif
	endif

	if abs(divWidthVertBottom) < EPS then gs_hor_gnum=0
	if divWidthVertBottom>0 AND bMiddleRail then
		ba=(midRailElevation)-midRailWidth/2-gs_fw_lower
		if INT(ba/divWidthVertBottom)=0 then PARAMETERS gs_hor_gnum=0
		if INT(ba/divWidthVertBottom)>0 then
			if (ba/INT(ba/divWidthVertBottom)-divWidthVertBottom)<=(ba/(INT(ba/divWidthVertBottom)+1)-divWidthVertBottom) then
				PARAMETERS gs_hor_gnum=INT(ba/divWidthVertBottom)-1
			endif
			if (ba/INT(ba/divWidthVertBottom)-divWidthVertBottom)>(ba/(INT(ba/divWidthVertBottom)+1)-divWidthVertBottom) then
				PARAMETERS gs_hor_gnum=INT(ba/divWidthVertBottom)
			endif
		endif
	endif

	if abs(divWidthVertMiddle) < EPS then gs_hor_gnumtr=0
	if divWidthVertMiddle>0 then
		ma=middlePanelHeight-topPanelHeight
		if INT(ma/divWidthVertMiddle)=0 then PARAMETERS gs_hor_gnumtr=0
		if INT(ma/divWidthVertMiddle)>0 then
			if (ma/INT(ma/divWidthVertMiddle)-divWidthVertMiddle)<=(divWidthVertMiddle-ma/(INT(ma/divWidthVertMiddle)+1)) then
				PARAMETERS gs_hor_gnumtr=INT(ma/divWidthVertMiddle)-1
			endif
			if (ma/INT(ma/divWidthVertMiddle)-divWidthVertMiddle)>(divWidthVertMiddle-ma/(INT(ma/divWidthVertMiddle)+1)) then
				PARAMETERS gs_hor_gnumtr=INT(ma/divWidthVertMiddle)
			endif
		endif
	endif

	if abs(divWidthVertTransom) < EPS then gs_hor_gtp=0
	if divWidthVertTransom>0 then
		if gs_door_transom then
			ta=topPanelHeight-gs_fw_upper
			if INT(ta/divWidthVertTransom)=0 then PARAMETERS gs_hor_gtp=0
			if INT(ta/divWidthVertTransom)>0 then
				if (ta/INT(ta/divWidthVertTransom)-divWidthVertTransom)<=(ta/(INT(ta/divWidthVertTransom)+1)-divWidthVertTransom) then
					PARAMETERS gs_hor_gtp=INT(ta/divWidthVertTransom)-1
				endif
				if (ta/INT(ta/divWidthVertTransom)-divWidthVertTransom)>(ta/(INT(ta/divWidthVertTransom)+1)-divWidthVertTransom) then
					PARAMETERS gs_hor_gtp=INT(ta/divWidthVertTransom)
				endif
			endif
		endif
	endif
endif

if iDivisionMethod = DIVISION_NUM then
	if nHorDivision<1 then
		nHorDivision = 1
		PARAMETERS nHorDivision = nHorDivision
	endif
	gs_ver_gnum = nHorDivision-1
	PARAMETERS gs_ver_gnum = gs_ver_gnum

	if nVertDivBottom<1 then
		nVertDivBottom = 1
		PARAMETERS nVertDivBottom = nVertDivBottom
	endif
	gs_hor_gnum = nVertDivBottom-1
	PARAMETERS gs_hor_gnum = gs_hor_gnum

	if nVertDivMiddle<1 then
		nVertDivMiddle = 1
		PARAMETERS nVertDivMiddle = nVertDivMiddle
	endif
	gs_hor_gnumtr = nVertDivMiddle-1
	PARAMETERS gs_hor_gnumtr = gs_hor_gnumtr

	if nVertDivTransom<1 then
		nVertDivTransom = 1
		PARAMETERS nVertDivTransom = nVertDivTransom
	endif
	gs_hor_gtp = nVertDivTransom-1
	PARAMETERS gs_hor_gtp = gs_hor_gtp
endif


!!! Butt Glazed !!!

gs_left_g  = 0
gs_right_g = 0

if iFrameStyleLeft <> FRAME_STYLE_VISIBLE_MULLIONS then
	if iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED OR iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED_WO_FRAME then
		gs_left_g = gs_fw_side_left
	endif
	if iFrameStyleLeft = FRAME_STYLE_ANGLE_FRAME AND leftCornerAngle<180 then
		gs_left_g = gs_fw_side_left-((gs_gsb+gs_glass_thk)*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2))
	endif
	if iFrameStyleLeft = FRAME_STYLE_ANGLE_FRAME AND leftCornerAngle>180 then
		gs_left_g = gs_fw_side_left+(gs_fthk-gs_gsb-gs_glass_thk)*TAN(90-leftCornerAngle/2)-(gs_frame_width/2)/SIN(180-leftCornerAngle/2)
	endif
endif
if iFrameStyleRight <> FRAME_STYLE_VISIBLE_MULLIONS then
	if iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED OR iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED_WO_FRAME then
		gs_right_g = gs_fw_side_right
	endif
	if iFrameStyleRight = FRAME_STYLE_ANGLE_FRAME AND rightCornerAngle<180 then
		gs_right_g = gs_fw_side_right-((gs_gsb+gs_glass_thk)*TAN(90-rightCornerAngle/2)+(gs_frame_width/2)/SIN(rightCornerAngle/2))
	endif
	if iFrameStyleRight = FRAME_STYLE_ANGLE_FRAME AND rightCornerAngle>180 then
		gs_right_g = gs_fw_side_right+(gs_fthk-gs_gsb-gs_glass_thk)*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(180-rightCornerAngle/2)
	endif
endif


!!! Butt Glazed END !!!

!!! MASKS !!!

mask1=15
mask2=15
mask3=15
mask4=15

if gs_stack_bottom then
	mask1=8
	mask2=13
endif

if gs_stack_right then
	mask2=8
	mask3=13
endif

if gs_stack_top then
	mask3=8
	mask4=13
endif

if gs_stack_left then
	mask4=8
	if mask1<>8 then mask1=13
endif

maskLeftButFr = 0
if iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED | iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED_WO_FRAME then
	maskLeftButFr = 5
endif

maskRightButFr = 0
if iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED | iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED_WO_FRAME then
	maskRightButFr = 5
endif


!!! END OF MASKS !!!

!! DINAMIC ARRAY !!

DIM empty[1] !! Empty Array


if bMiddleRail then
	if gs_hor_gnum>0 AND (GLOB_MODPAR_NAME="B" OR GLOB_MODPAR_NAME="divisionMethod" OR GLOB_MODPAR_NAME="iDivisionMethod"\
		OR GLOB_MODPAR_NAME="divWidthVertBottom" OR GLOB_MODPAR_NAME="bottomRailWidth"\
		OR GLOB_MODPAR_NAME="gs_hor_gnum" OR GLOB_MODPAR_NAME="gs_frame_width" \
		OR GLOB_MODPAR_NAME="midRailElevation" OR GLOB_MODPAR_NAME="midRailWidth" \
		OR GLOB_MODPAR_NAME="bMiddleRail" OR GLOB_MODPAR_NAME="nVertDivBottom"\
		OR GLOB_MODPAR_NAME="gs_grid_w") then
		dim temp1[]
		temp1=empty
		last1=0
		dist1=(midRailElevation-midRailWidth/2-gs_fw_lower+gs_grid_w)/(gs_hor_gnum+1)
		for i=1 to gs_hor_gnum
			temp1[i]=last1+dist1
			last1=temp1[i]
		next i

		parameters gs_hor_d=temp1
		gs_hor_d=temp1
	endif
endif
gs_hor_gnum = min(gs_hor_gnum, vardim1(gs_hor_d))


if gs_hor_gnumtr>0 AND (GLOB_MODPAR_NAME="B" OR GLOB_MODPAR_NAME="divisionMethod" OR GLOB_MODPAR_NAME="iDivisionMethod"\
	OR GLOB_MODPAR_NAME="divWidthVertMiddle" OR GLOB_MODPAR_NAME="bottomRailWidth"\
	OR GLOB_MODPAR_NAME="gs_transom_height" OR GLOB_MODPAR_NAME="gs_door_transom" \
	OR GLOB_MODPAR_NAME="gs_hor_gnumtr" OR GLOB_MODPAR_NAME="gs_frame_width" \
	OR GLOB_MODPAR_NAME="midRailElevation" OR GLOB_MODPAR_NAME="midRailWidth" \
	OR GLOB_MODPAR_NAME="bMiddleRail" OR GLOB_MODPAR_NAME="nVertDivMiddle"\
	OR GLOB_MODPAR_NAME="gs_grid_w") OR GLOB_MODPAR_NAME="gs_stack_top" then
	dim temp2[]
	temp2=empty
	last2=0
	dist2=(middlePanelHeight-topPanelHeight+gs_grid_w)/(gs_hor_gnumtr+1)
	for i=1 to gs_hor_gnumtr
		temp2[i]=last2+dist2
		last2=temp2[i]
	next i

	parameters gs_hor_dtr=temp2
	gs_hor_dtr=temp2
endif
gs_hor_gnumtr = min(gs_hor_gnumtr, vardim1(gs_hor_dtr))


if gs_hor_gtp>0 AND (GLOB_MODPAR_NAME="B" OR GLOB_MODPAR_NAME="divisionMethod" OR GLOB_MODPAR_NAME="iDivisionMethod"\
	OR GLOB_MODPAR_NAME="divWidthVertTransom" \
	OR GLOB_MODPAR_NAME="gs_door_transom" OR GLOB_MODPAR_NAME="gs_transom_height" \
	OR GLOB_MODPAR_NAME="gs_hor_gtp" OR GLOB_MODPAR_NAME="gs_frame_width"\
	OR GLOB_MODPAR_NAME="nVertDivTransom" OR GLOB_MODPAR_NAME="gs_grid_w" OR GLOB_MODPAR_NAME="gs_stack_top") then
	dim temp3[]
	temp3=empty
	last3=0
	dist3=(topPanelHeight-gs_fw_upper+gs_grid_w)/(gs_hor_gtp+1)
	for i=1 to gs_hor_gtp
		temp3[i]=last3+dist3
		last3=temp3[i]
	next i

	parameters gs_hor_dtp=temp3
	gs_hor_dtp=temp3
endif
gs_hor_gtp = min(gs_hor_gtp, vardim1(gs_hor_dtp))


if gs_ver_gnum>0 AND (GLOB_MODPAR_NAME="A" OR GLOB_MODPAR_NAME="divisionMethod" OR GLOB_MODPAR_NAME="iDivisionMethod"\
	OR GLOB_MODPAR_NAME="divWidthHor"\
	OR GLOB_MODPAR_NAME="gs_sidelight_right" OR GLOB_MODPAR_NAME="gs_sidelight_left"\
	OR GLOB_MODPAR_NAME="gs_sidelight_width_left" OR GLOB_MODPAR_NAME="gs_sidelight_width_right" \
	OR GLOB_MODPAR_NAME="gs_ver_gnum" OR GLOB_MODPAR_NAME="leftCornerAngle"\
	OR GLOB_MODPAR_NAME="endFrameLeft" OR GLOB_MODPAR_NAME="endFrameRight" \
	OR GLOB_MODPAR_NAME="rightCornerAngle" OR GLOB_MODPAR_NAME="nHorDivision" OR GLOB_MODPAR_NAME="gs_frame_width"\
	OR rightCornerAngle = sps*2 OR leftCornerAngle = sps*2 \
	OR GLOB_MODPAR_NAME="gridWidthVert" OR GLOB_MODPAR_NAME="gs_stack_left" OR GLOB_MODPAR_NAME="gs_stack_right" \
	OR GLOB_MODPAR_NAME="gs_tolerance") then

	dim temp4[]
	temp4=empty
	last4=0
	dist4=(ac_unit_width-frameOrSLightWidthLeft-frameOrSLightWidthRight+gridWidthVert) / (gs_ver_gnum+1)

	for i=1 to gs_ver_gnum
		temp4[i]=last4+dist4
		last4=temp4[i]
	next i

	PARAMETERS gs_ver_d=temp4
	gs_ver_d=temp4
endif
gs_ver_gnum = min(gs_ver_gnum, vardim1(gs_ver_d))

!! END OF DINAMIC ARRAY !!


! =============================================================================
! Minimal Space
! =============================================================================

if iDoorType = 1 then
	gs_leaf_optype_m	= LEAF_1L_SIDE_HUNG
else
	gs_leaf_optype_m	= LEAF_2L_SIDE_HUNG
endif

bSidelights = 0
if iStorefrontType = SFTYPE_DOOR_TRSL then
	bSidelights = 1
endif

doorStop = gs_ds_w * bEnableDoorStop
EgressMSWidth = ac_egress_width
egressOffset = ac_wallhole_width/2 - frameOrSLightWidthRight - (gs_ds_w * bEnableDoorStop) - gs_tolerance_right
ms_leftOffset = gs_frame_width + doorStop
ms_rightOffset = gs_frame_width + doorStop


