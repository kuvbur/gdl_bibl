
! Contact person: <SzL, NJ>

if iTypeDemolitionFill = RENOVATION_FILL_DEMOLISHED then		! Demolition
	gs_symbLineType = gs_Demolition_linetype
else
	gs_symbLineType = 1
endif

line_type gs_symbLineType

glaa = 0
glab = 0

glaa_dt	= 0
glab_dt	= 0

! =============================================================================
! No wall contour at corners and joints
! =============================================================================

if iEndFrameLeft <> ENDFRAME_NORMAL then gs_stack_left  = 1
if iEndFrameRight <> ENDFRAME_NORMAL then gs_stack_right = 1

! =============================================================================
! GS Storefront Door Functions
! =============================================================================

call "GS Storefront Door Functions",
	parameters all	gs_wcont_line_out		= gs_wcont_line_out,
					gs_wcont_line_in		= gs_wcont_line_in,
					bEnableParapetInset			= bEnableParapetInset,
					bEnableMasonryArch			= bEnableMasonryArch,
					bEnableSill					= bEnableSill,
					bEnableBoard				= bEnableBoard,
					bEnableFaschen				= bEnableFaschen,
					bEnableThreshold			= bEnableThreshold,
					bEnableCasing				= bEnableCasing,
					bEnableShutter				= bEnableShutter,
					bEnableCustomCornerLeft		= bEnableCustomCornerLeft,
					bEnableCustomCornerRight	= bEnableCustomCornerRight,
				! --- Corner Functions
					bLeftCornerFunction	 	= gs_cl,
					leftCornerAngle		 	= leftCornerAngle,
					leftConnWallThk		 	= WALL_THICKNESS,
					bRightCornerFunction 	= gs_cr,
					rightCornerAngle	 	= rightCornerAngle,
					rightConnWallThk		= WALL_THICKNESS,
					gs_left_oversize		= gs_left_oversize - gs_cl * abs(gs_fthk*TAN(90-leftCornerAngle/2)),
					gs_right_oversize		= gs_right_oversize - gs_cr * abs(gs_fthk*TAN(90-rightCornerAngle/2)),
					EgressMSWidth 			= EgressMSWidth,
					egressOffset 			= egressOffset,
					ms_rightOffset 			= ms_rightOffset,
					ms_leftOffset 			= ms_leftOffset,
					bSidelights 			= bSidelights,
					gs_sidelight_width_left = gs_sidelight_width_left,
					gs_sidelight_width_right = gs_sidelight_width_right,
					gs_sidelight_right		= gs_sidelight_right,
					gs_sidelight_left		= gs_sidelight_left,
					gs_leaf_optype_m		= gs_leaf_optype_m,
	returned_parameters ac_unit_width,
						gs_frame_ovhg_left_out,
						gs_frame_ovhg_right_out,
						gs_frame_ovhg_left_in,
						gs_frame_ovhg_right_in,
						gs_wthk,
						gs_fthk,
						bMirrored,
						addPrmX, addPrmY,
						mulPrmX, mulPrmY,
						iLoD2D,
						bSimpleLeafin50,
						bShowOplines2D,
						bShowFrameIn2D,
						bShowGlassInMiddle2D,
						gs_opLinePen,
						gs_iSwingType,
						gs_swingLineType,
						gs_swingLineType2,
						bShowAddHotspots, bShowUnitHotspots, bShowEgressHotspots, bShowLeafHotspots

if iLoD2D = 0 then end

if iTypeDemolitionFill = RENOVATION_FILL_NEW & gs_bShowNewOnCC then end		! New

lod2D	= DET2D_FS_OFF
bDetailedSlidingLeafSymbol	= 0
iSymbolGlassType			= SYMBGLASS_SIMPLEGLASS
bOpeningSymbDisplay			= 0

if iLoD2D = SYMBD_S_1LINE then						lod2D	= DET2D_FS_SIMPLE			! Simple --> INT 200
if iLoD2D = SYMBD_S_1LINECL then					lod2D	= DET2D_FS_SIMPLE			! Simple --> NLD 200
if iLoD2D = SYMBD_M_1LINELEAF_2LINE then			lod2D	= DET2D_FS_MIDDLE			! Middle --> INT 100
if iLoD2D = SYMBD_M_2LINELEAFCL_GLASS then			lod2D	= DET2D_FS_MIDDLE			! Middle --> NLD 100
if iLoD2D = SYMBD_D_2LINELEAFOP_GLASS then			lod2D	= DET2D_FS_DETAILED			! Detailed --> INT 50
if iLoD2D = SYMBD_D_2LINELEAFCL_REBATEONGLASS then	lod2D	= DET2D_FS_DETAILED			! Detailed --> NLD 50
if iLoD2D = SYMBD_D_2LEAFOPGLASS_GLASS then			lod2D	= DET2D_FS_DETAILED			! Detailed --> INT 50 Storefronts
if iLoD2D = SYMBD_S_2LINE then						lod2D	= DET2D_FS_SIMPLE_CHI		! Chinese Simple
if iLoD2D = SYMBD_D_2LINELEAFOP_2LINE then			lod2D 	= DET2D_FS_DETAILED_CHI		! Chinese Detailed

if	iLoD2D = SYMBD_S_1LINECL |\							! NLD 200
	iLoD2D = SYMBD_M_2LINELEAFCL_GLASS |\
	iLoD2D = SYMBD_D_2LINELEAFCL_REBATEONGLASS	then	! NLD 100, NLD 50
	bOpeningSymbDisplay			= 1
	bDetailedSlidingLeafSymbol	= 1
endif
if iLoD2D = SYMBD_D_2LEAFOPGLASS_GLASS 		then	! Detailed --> INT 50 Storefronts
	iSymbolGlassType	= SYMBGLASS_DOUBLEGLASS
endif


add2 addPrmX, addPrmY
mul2 mulPrmX, mulPrmY

if (gs_cl | gs_cr) & gs_opening_dir_sl_m = OPENING_DIR_FLIPPED_INSIDE then
	leftCornerAngle = 360 - leftCornerAngle
	rightCornerAngle = 360 - rightCornerAngle
endif

if not(bShowOplines2D) then
	gs_open_2D = 0
endif

gs_fillFr	= gs_bFills * gs_fillFr
gs_fillLeaf	= gs_bFills * gs_fillLeaf
gs_FillSdl	= gs_bFills * gs_FillSdl
gs_gsect	= gs_bFills * gs_gsect

pen gs_frame_pen_cont

if gs_wthk then
	if WIDO_REVEAL_SIDE then
		add2 0,WALL_THICKNESS - WIDO_FRAME_THICKNESS - WIDO_SILL
	else
		add2 0,WIDO_SILL
	endif
endif

! =============================================================================
! Opening Hotspots
! =============================================================================

wi=WALL_INCL ! Inclination of the wall surfaces


! =============================================================================
! Hotspot Editing of SideLights
! =============================================================================

if lod2D = DET2D_FS_MIDDLE | lod2D = DET2D_FS_DETAILED then
	if gs_sidelight_left then
		hotspot2 -ac_unit_width/2, 0, 1320, gs_sidelight_width_left, 1+128
		hotspot2 -ac_unit_width/2-1, 0, 1321, gs_sidelight_width_left, 3
		hotspot2 -ac_unit_width/2+gs_sidelight_width_left, 0, 1322, gs_sidelight_width_left, 2
	endif
	if gs_sidelight_right then
		hotspot2 ac_unit_width/2, 0, 1340, gs_sidelight_width_right, 1+128
		hotspot2 ac_unit_width/2+1, 0, 1341, gs_sidelight_width_right, 3
		hotspot2 ac_unit_width/2-gs_sidelight_width_right, 0, 1342, gs_sidelight_width_right, 2
	endif
endif

! =============================================================================
! Frame Hotspots
! =============================================================================

!****** 2D symbol following scale *******

symb_2d = 0
if lod2D = DET2D_FS_SIMPLE | lod2D = DET2D_FS_SIMPLE_CHI then symb_2d = 200
if lod2D = DET2D_FS_MIDDLE then symb_2d = 100
if lod2D = DET2D_FS_DETAILED | lod2D = DET2D_FS_DETAILED_CHI then symb_2d = 50

!********************* coordinates according to size types

unitleft = -ac_unit_width / 2
unitright = ac_unit_width / 2

if iStorefrontType = SFTYPE_DOOR_ONLY or  iStorefrontType = SFTYPE_DOOR_TRANSOM then
	leafleft = -ac_leaf_width / 2 + (gs_fw_side_left - gs_fw_side_right)/2
	leafright = ac_leaf_width / 2 - (gs_fw_side_right- gs_fw_side_left)/2

	egressleft = -ac_egress_width / 2 + (gs_fw_side_left - gs_fw_side_right)/2
	egressright = ac_egress_width / 2  - (gs_fw_side_right- gs_fw_side_left)/2

endif

if iStorefrontType = SFTYPE_DOOR_TRSL then
	leafleft	= unitleft  + frameOrSLightWidthLeft
	leafright	= unitright - frameOrSLightWidthRight
	egressleft	= unitleft  + frameOrSLightWidthLeft + gs_ds_w * bEnableDoorStop
	egressright	= unitright - frameOrSLightWidthRight - gs_ds_w * bEnableDoorStop
endif

frameleftout	= unitleft  - gs_frame_ovhg_left_out
framerightout	= unitright + gs_frame_ovhg_right_out

frameleftin		= unitleft  - gs_frame_ovhg_left_in
framerightin	= unitright + gs_frame_ovhg_right_in

leftFrame = frameleftout
if abs(frameleftout) > abs(frameleftin) then
	leftFrame = frameleftin
endif
rightFrame = framerightout
if abs(framerightout) > abs(framerightin) then
	rightFrame = framerightin
endif

if symb_2d=100 then
	egressright = egressright + gs_ds_w * bEnableDoorStop
	egressleft = egressleft - gs_ds_w * bEnableDoorStop
endif

egressLeftHotspot = egressleft
egressRightHotspot = egressright

!************ Hotspots on Unit Size

if bShowUnitHotspots then
	unID = 100
	hotspot2 unitleft,	 0,           unID
	if WIDO_REVEAL_SIDE then
		hotspot2 unitleft,	(-gs_fthk) * (symb_2d <> 200), unID + 2
	else
		hotspot2 unitleft,	(-gs_fthk) * (symb_2d <> 200), unID + 2
	endif

	hotspot2 unitright,	 0,           unID + 1
	if WIDO_REVEAL_SIDE then
		hotspot2 unitright,	(-gs_fthk) * (symb_2d <> 200), unID + 3
	else
		hotspot2 unitright,	(-gs_fthk) * (symb_2d <> 200), unID + 3
	endif
endif

!************ Hotspots on Egress Size

if symb_2d = 200 then
	egressthk1 = 0
	egressthk2 = 0
else
	if symb_2d = 100 then
		egressthk1 = 0
		egressthk2 = -gs_fthk
	else
		egressthk1 = - gs_leaf_thk
		egressthk2 = egressthk1 - gs_ds_thk*bEnableDoorStop
	endif
endif

if bShowEgressHotspots then
	unID = 200
	hotspot2 egressLeftHotspot, egressthk1, unID
	hotspot2 egressRightHotspot, egressthk1, unID + 1

	if bEnableDoorStop then
		hotspot2 egressLeftHotspot, egressthk2, unID + 2
		hotspot2 egressRightHotspot, egressthk2, unID + 3
	else
		hotspot2 egressLeftHotspot, -gs_fthk * (symb_2d <> 200), unID + 2
		hotspot2 egressRightHotspot, -gs_fthk * (symb_2d <> 200), unID + 3
	endif
endif

!************* Hotspots on Leaf Size

leafthk1=-gs_fthk

if bShowLeafHotspots then
	unID = 300
	hotspot2 leafleft, 0,        unID
	hotspot2 leafright, 0,        unID + 1
	if lod2D = DET2D_FS_MIDDLE | lod2D = DET2D_FS_SIMPLE then
		hotspot2 leafleft, 0,        unID + 2
		hotspot2 leafright, 0,        unID + 3
	else
		hotspot2 leafleft, leafthk1, unID + 2
		hotspot2 leafright, leafthk1, unID + 3
	endif
endif

nFlipTrans = 0
if bOpeningDirectionSL then
	mul2 1, -1
	add2 0,gs_fthk
	nFlipTrans = 2
endif

leftFrameMod = gs_fthk/TAN(leftCornerAngle/2)
rightFrameMod = gs_fthk/TAN(rightCornerAngle/2)
unID = 1
if lod2D = DET2D_FS_DETAILED | lod2D = DET2D_FS_DETAILED_CHI then
	if iEndFrameLeft = ENDFRAME_CORNER then
		if leftCornerAngle < 180 then
			hotspot2 -ac_unit_width/2+leftFrameMod, -gs_fthk, unID : unID = unID + 1
		else
			unID = unID + 1
		endif
		if leftCornerAngle > 180 then
			hotspot2 -ac_unit_width/2-leftFrameMod, 0, unID : unID = unID + 1
		else
			unID = unID + 1
		endif
	endif

	if iEndFrameRight = ENDFRAME_CORNER then
		if rightCornerAngle < 180 then
			hotspot2 ac_unit_width/2-rightFrameMod, -gs_fthk, unID : unID = unID + 1
		else
			unID = unID + 1
		endif
		if rightCornerAngle > 180 then
			hotspot2 ac_unit_width/2+rightFrameMod, 0, unID : unID = unID + 1
		else
			unID = unID + 1
		endif
	endif
endif

del nFlipTrans

! =============================================================================
! Frame
! =============================================================================
fill gs_fillFr
PEN gs_frame_pen_cont

bDetailedGlass		= (iSymbolGlassType	= SYMBGLASS_DOUBLEGLASS)
bDoorStopDisplay	= (lod2D = DET2D_FS_DETAILED | lod2D = DET2D_FS_DETAILED_CHI)

if bShowFrameIn2D then
	frameThicknessModRight = (gs_glass_thk*(bDetailedGlass)+gs_gsb)*(iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED)
	frameThicknessModLeft = (gs_glass_thk*(bDetailedGlass)+gs_gsb)*(iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED)

	if gs_sidelight_left then
		POLY2_b 7, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
				-ac_unit_width/2+leftPanelWidth,				0,					1+32,
				-ac_unit_width/2+gs_frame_width+leftPanelWidth, 0,					1+32,
				-ac_unit_width/2+gs_frame_width+leftPanelWidth, -min(gs_leaf_thk, gs_fthk), 1-(bDoorStopDisplay*bEnableDoorStop)+32,
				-ac_unit_width/2+gs_frame_width+leftPanelWidth, -min(gs_leaf_thk, gs_fthk)-bEnableDoorStop * gs_ds_thk, 1+32,
				-ac_unit_width/2+gs_frame_width+leftPanelWidth, -gs_fthk, 		1+32,
				-ac_unit_width/2+leftPanelWidth,				-gs_fthk,			1+32,
				-ac_unit_width/2+leftPanelWidth,				0,					-1
		glaa=gs_fw_side_left
		glaa_inside=gs_fw_side_left
	endif

	if gs_sidelight_right then
		POLY2_b 7, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
				ac_unit_width/2-gs_frame_width-rightPanelWidth,	0,			1+32,
				ac_unit_width/2-rightPanelWidth,				0,			1+32,
				ac_unit_width/2-rightPanelWidth,				-gs_fthk,	1+32,
				ac_unit_width/2-gs_frame_width-rightPanelWidth,	-gs_fthk,	1+32,
				ac_unit_width/2-gs_frame_width-rightPanelWidth,	-min(gs_leaf_thk, gs_fthk)-bEnableDoorStop * gs_ds_thk,	1-(bDoorStopDisplay*bEnableDoorStop)+32,
				ac_unit_width/2-gs_frame_width-rightPanelWidth,	-min(gs_leaf_thk, gs_fthk),	1+32,
				ac_unit_width/2-gs_frame_width-rightPanelWidth,	0,			-1
		glab=-gs_fw_side_right
		glab_inside=-gs_fw_side_right
	endif

	nFlipTrans = 0
	if bOpeningDirectionSL then
		mul2 1, -1
		add2 0,gs_fthk
		nFlipTrans = 2
	endif

	if symb_2d = 100 or symb_2d = 50 then
		if gs_tolerance_left  > 0 then
			line2 leftFrame,  -frameThicknessModLeft, unitleft,  -frameThicknessModLeft
			line2 leftFrame,  -gs_fthk, unitleft,  -gs_fthk
			if not(gs_stack_left) then line2 leftFrame,  -frameThicknessModLeft, leftFrame,  -gs_fthk
		endif
		if gs_tolerance_right > 0 then
			line2 rightFrame, -frameThicknessModRight, unitright, -frameThicknessModRight
			line2 rightFrame, -gs_fthk, unitright, -gs_fthk
			if not(gs_stack_right) then line2 rightFrame, -frameThicknessModRight, rightFrame, -gs_fthk
		endif
	endif

	! -----------------------------------------------------------------------------
	! Normal Frame Type
	! -----------------------------------------------------------------------------

	if bEnableDoorStop*bDoorStopDisplay*not(gs_sidelight_right) then
		if not(WIDO_REVEAL_SIDE) then
			_posDoorStop1R = -gs_leaf_thk-bEnableDoorStop * gs_ds_thk
			_posDoorStop2R = -gs_leaf_thk
		else
			_posDoorStop1R = -gs_fthk+gs_leaf_thk
			_posDoorStop2R = -gs_fthk+gs_leaf_thk+bEnableDoorStop * gs_ds_thk
		endif
	else
		_posDoorStop1R = -gs_fthk
		_posDoorStop2R = -gs_fthk
	endif

	if bEnableDoorStop*bDoorStopDisplay*not(gs_sidelight_left) then
		if not(WIDO_REVEAL_SIDE) then
			_posDoorStop1L = -gs_leaf_thk-bEnableDoorStop * gs_ds_thk
			_posDoorStop2L = -gs_leaf_thk
		else
			_posDoorStop1L = -gs_fthk+gs_leaf_thk
			_posDoorStop2L = -gs_fthk+gs_leaf_thk+bEnableDoorStop * gs_ds_thk
		endif
	else
		_posDoorStop1L = -gs_fthk
		_posDoorStop2L = -gs_fthk
	endif

	if not(gs_cr) then
		POLY2_b     7, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
					ac_unit_width/2-gs_fw_side_right,	-frameThicknessModRight,	1+32,
					unitright,							-frameThicknessModRight,	(not(gs_stack_right) | (gs_tolerance_right > 0))+32,
					unitright,							-gs_fthk,					1+32,
					ac_unit_width/2-gs_fw_side_right,	-gs_fthk,					1+32,
					ac_unit_width/2-gs_fw_side_right,	_posDoorStop1R,				1-(bDoorStopDisplay*bEnableDoorStop*not(gs_sidelight_right))+32,
					ac_unit_width/2-gs_fw_side_right,	_posDoorStop2R,				1+32,
					ac_unit_width/2-gs_fw_side_right,	-frameThicknessModRight,	-1
		glab=-gs_fw_side_right
	endif

	if not(gs_cl) then
		POLY2_b 7, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
					unitleft,							-frameThicknessModLeft,		1+32,
					-ac_unit_width/2+gs_fw_side_left,	-frameThicknessModLeft,		1+32,
					-ac_unit_width/2+gs_fw_side_left,	_posDoorStop2L,				1-(bDoorStopDisplay*bEnableDoorStop*not(gs_sidelight_left))+32,
					-ac_unit_width/2+gs_fw_side_left,	_posDoorStop1L,				1+32,
					-ac_unit_width/2+gs_fw_side_left,	-gs_fthk,					1+32,
					unitleft,							-gs_fthk,					(not(gs_stack_left) | (gs_tolerance_left > 0))+32,
					unitleft,							-frameThicknessModLeft,		-1
		glaa=gs_fw_side_left
	endif

	del nFlipTrans

	! -----------------------------------------------------------------------------
	! Corner Frame Type
	! -----------------------------------------------------------------------------


	nFlipTrans = 0
	if bOpeningDirectionSL then
		mul2 1, -1
		add2 0,gs_fthk
		nFlipTrans = 2
	endif

	if gs_cr then
		if rightCornerAngle <180 then
			if not(gs_sidelight_right) then iFrameStyleRight = FRAME_STYLE_VISIBLE_MULLIONS
			if iFrameStyleRight = FRAME_STYLE_VISIBLE_MULLIONS then
				POLY2_b  7, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
					ac_unit_width/2-gs_fw_side_right, 0,      1+32,
					ac_unit_width/2, 0,     0,
					ac_unit_width/2-gs_fthk*TAN(90-rightCornerAngle/2), -gs_fthk,      1+32,
					ac_unit_width/2-gs_fw_side_right, -gs_fthk,      1+32,
					ac_unit_width/2-gs_fw_side_right, _posDoorStop1R,		1-(bDoorStopDisplay*bEnableDoorStop*not(gs_sidelight_right))+32,
					ac_unit_width/2-gs_fw_side_right, _posDoorStop2R,      1+32,
					ac_unit_width/2-gs_fw_side_right, 0,      -1
				glab_dt = 0
			endif

			if iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED then
				POLY2_b 5, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
					ac_unit_width/2-(gs_glass_thk*(bDetailedGlass)+gs_gsb)*TAN(90-rightCornerAngle/2), -gs_glass_thk*(bDetailedGlass)-gs_gsb,      1+32,
					ac_unit_width/2-(gs_frame_width/2)/SIN(rightCornerAngle/2)-(gs_glass_thk*(bDetailedGlass)+gs_gsb)*TAN(90-rightCornerAngle/2), -gs_glass_thk*(bDetailedGlass)-gs_gsb,     1+32,
					ac_unit_width/2-gs_fthk*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(rightCornerAngle/2), -gs_fthk,      1+32,
					ac_unit_width/2-gs_fthk*TAN(90-rightCornerAngle/2),-gs_fthk,      0,
					ac_unit_width/2-(gs_glass_thk*(bDetailedGlass)+gs_gsb)*TAN(90-rightCornerAngle/2), -gs_glass_thk*(bDetailedGlass)-gs_gsb,      -1
				glab=-(gs_frame_width/2)/SIN(rightCornerAngle/2)-(gs_glass_thk*(bDetailedGlass)+gs_gsb)*TAN(90-rightCornerAngle/2)
				glab_dt=-(gs_gsb)*TAN(90-rightCornerAngle/2)
				glab_inside=-(gs_glass_thk + gs_gsb)*TAN(90-rightCornerAngle/2)
			endif

			if iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED_WO_FRAME then
				glab=-(gs_glass_thk*(bDetailedGlass)+gs_gsb)*TAN(90-rightCornerAngle/2)
				glab_dt=-(gs_gsb)*TAN(90-rightCornerAngle/2)
				glab_inside=-(gs_glass_thk + gs_gsb)*TAN(90-rightCornerAngle/2)
			endif

			if iFrameStyleRight = FRAME_STYLE_ANGLE_FRAME then
				POLY2_b 6, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
					ac_unit_width/2, 0,      1+32,
					ac_unit_width/2-(gs_frame_width/2)/SIN(rightCornerAngle/2)-(gs_glass_thk*(bDetailedGlass)+gs_gsb)*TAN(90-rightCornerAngle/2), 0,     1+32,
					ac_unit_width/2-(gs_frame_width/2)/SIN(rightCornerAngle/2)-(gs_glass_thk*(bDetailedGlass)+gs_gsb)*TAN(90-rightCornerAngle/2), -gs_glass_thk*(bDetailedGlass)-gs_gsb,     1+32,
					ac_unit_width/2-gs_fthk*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(rightCornerAngle/2), -gs_fthk,      1+32,
					ac_unit_width/2-gs_fthk*TAN(90-rightCornerAngle/2),-gs_fthk,      0,
					ac_unit_width/2, 0,      -1

				glab=-(gs_frame_width/2)/SIN(rightCornerAngle/2)-(gs_glass_thk*(bDetailedGlass)+gs_gsb)*TAN(90-rightCornerAngle/2)
				glab_dt = 0
			endif
		endif

		if rightCornerAngle >180 then
			if not(gs_sidelight_right) then iFrameStyleRight = 0
			if iFrameStyleRight = FRAME_STYLE_VISIBLE_MULLIONS then
				POLY2_b   7, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
					ac_unit_width/2-gs_fw_side_right, 0,      1+32,
					ac_unit_width/2+gs_fthk*TAN(90-rightCornerAngle/2), 0,     0,
					ac_unit_width/2, -gs_fthk,      1+32,
					ac_unit_width/2-gs_fw_side_right,-gs_fthk,      1+32,
					ac_unit_width/2-gs_fw_side_right,_posDoorStop1R,      1-(bDoorStopDisplay*bEnableDoorStop*not(gs_sidelight_right))+32,
					ac_unit_width/2-gs_fw_side_right,_posDoorStop2R,      1+32,
					ac_unit_width/2-gs_fw_side_right, 0,      -1
				glab_dt = 0
			endif

			if iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED then
				POLY2_b 5, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
					ac_unit_width/2+(gs_fthk-gs_glass_thk*(bDetailedGlass)-gs_gsb)*TAN(90-rightCornerAngle/2), -gs_glass_thk*(bDetailedGlass)-gs_gsb,      1+32,
					ac_unit_width/2+gs_fthk*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(180-rightCornerAngle/2)-(gs_glass_thk*(bDetailedGlass)+gs_gsb)*TAN(90-rightCornerAngle/2),
						-gs_glass_thk*(bDetailedGlass)-gs_gsb,     1+32,
					ac_unit_width/2-(gs_frame_width/2)/SIN(180-rightCornerAngle/2), -gs_fthk,      1+32,
					ac_unit_width/2, -gs_fthk,      0,
					ac_unit_width/2+(gs_fthk-gs_glass_thk*(bDetailedGlass)-gs_gsb)*TAN(90-rightCornerAngle/2), -gs_glass_thk*(bDetailedGlass)-gs_gsb,      -1

				glab=gs_fthk*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(180-rightCornerAngle/2)-(gs_glass_thk*(bDetailedGlass)+gs_gsb)*TAN(90-rightCornerAngle/2)
				glab_dt=(gs_fthk-gs_gsb)*TAN(90-rightCornerAngle/2)
				glab_inside=(gs_fthk-gs_glass_thk-gs_gsb)*TAN(90-rightCornerAngle/2)
			endif

			if iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED_WO_FRAME then
				glab=gs_fthk*TAN(90-rightCornerAngle/2)-(gs_glass_thk*(bDetailedGlass)+gs_gsb)*TAN(90-rightCornerAngle/2)
				glab_dt=(gs_fthk-gs_gsb)*TAN(90-rightCornerAngle/2)
				glab_inside=(gs_fthk-gs_glass_thk-gs_gsb)*TAN(90-rightCornerAngle/2)
			endif

			if iFrameStyleRight = FRAME_STYLE_ANGLE_FRAME then
				POLY2_b 6, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
					ac_unit_width/2+gs_fthk*TAN(90-rightCornerAngle/2), 0,      1+32,
					ac_unit_width/2+gs_fthk*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(180-rightCornerAngle/2)-(gs_glass_thk*(bDetailedGlass)+gs_gsb)*TAN(90-rightCornerAngle/2), 0,      1+32,
					ac_unit_width/2+gs_fthk*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(180-rightCornerAngle/2)-(gs_glass_thk*(bDetailedGlass)+gs_gsb)*TAN(90-rightCornerAngle/2),
						-gs_glass_thk*(bDetailedGlass)-gs_gsb,     1+32,
					ac_unit_width/2-(gs_frame_width/2)/SIN(180-rightCornerAngle/2), -gs_fthk,      1+32,
					ac_unit_width/2,-gs_fthk,      0,
					ac_unit_width/2+gs_fthk*TAN(90-rightCornerAngle/2), 0,      -1

				glab=gs_fthk*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(180-rightCornerAngle/2)-(gs_glass_thk*(bDetailedGlass)+gs_gsb)*TAN(90-rightCornerAngle/2)
				glab_dt = 0
			endif
		endif
	else
		glab_dt = 0
	endif

	if gs_cl then
		if leftCornerAngle <180 then
			if not(gs_sidelight_left) then iFrameStyleLeft = FRAME_STYLE_VISIBLE_MULLIONS
			if iFrameStyleLeft = FRAME_STYLE_VISIBLE_MULLIONS then
				POLY2_b 7, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
					-ac_unit_width/2,					0, 1+32,
					-ac_unit_width/2+gs_fw_side_left,	0, 1+32,
					-ac_unit_width/2+gs_fw_side_left,	_posDoorStop2L, 1-(bDoorStopDisplay*bEnableDoorStop*not(gs_sidelight_left))+32,
					-ac_unit_width/2+gs_fw_side_left,	_posDoorStop1L, 1+32,

					-ac_unit_width/2+gs_fw_side_left,	-gs_fthk, 1+32,
					-ac_unit_width/2+gs_fthk*TAN(90-leftCornerAngle/2), -gs_fthk, 0,
					-ac_unit_width/2,					0, -1
				glaa_dt=0
			endif

			if iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED then
				MUL2 -1,1
				POLY2_b 5, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
					ac_unit_width/2-(gs_glass_thk*(bDetailedGlass)+gs_gsb)*TAN(90-leftCornerAngle/2), -gs_glass_thk*(bDetailedGlass)-gs_gsb,      1+32,
					ac_unit_width/2-(gs_frame_width/2)/SIN(leftCornerAngle/2)-(gs_glass_thk*(bDetailedGlass)+gs_gsb)*TAN(90-leftCornerAngle/2), -gs_glass_thk*(bDetailedGlass)-gs_gsb,     1+32,
					ac_unit_width/2-gs_fthk*TAN(90-leftCornerAngle/2)-(gs_frame_width/2)/SIN(leftCornerAngle/2), -gs_fthk,      1+32,
					ac_unit_width/2-gs_fthk*TAN(90-leftCornerAngle/2),-gs_fthk,      0,
					ac_unit_width/2-(gs_glass_thk*(bDetailedGlass)+gs_gsb)*TAN(90-leftCornerAngle/2), -gs_glass_thk*(bDetailedGlass)-gs_gsb,      -1
				DEL 1
				glaa=(gs_frame_width/2)/SIN(leftCornerAngle/2)+(gs_glass_thk*(bDetailedGlass)+gs_gsb)*TAN(90-leftCornerAngle/2)
				glaa_dt=(gs_gsb)*TAN(90-leftCornerAngle/2)
				glaa_inside=(gs_glass_thk + gs_gsb)*TAN(90-leftCornerAngle/2)
			endif

			if iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED_WO_FRAME then
				glaa=(gs_glass_thk*(bDetailedGlass)+gs_gsb)*TAN(90-leftCornerAngle/2)
				glaa_dt=(gs_gsb)*TAN(90-leftCornerAngle/2)
				glaa_inside=(gs_glass_thk + gs_gsb)*TAN(90-leftCornerAngle/2)
			endif

			if iFrameStyleLeft = FRAME_STYLE_ANGLE_FRAME then
				MUL2 -1,1
				POLY2_b 6, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
					ac_unit_width/2, 0,      1+32,
					ac_unit_width/2-(gs_frame_width/2)/SIN(leftCornerAngle/2)-(gs_glass_thk*(bDetailedGlass)+gs_gsb)*TAN(90-leftCornerAngle/2), 0,     1+32,
					ac_unit_width/2-(gs_frame_width/2)/SIN(leftCornerAngle/2)-(gs_glass_thk*(bDetailedGlass)+gs_gsb)*TAN(90-leftCornerAngle/2), -gs_glass_thk*(bDetailedGlass)-gs_gsb,     1+32,
					ac_unit_width/2-gs_fthk*TAN(90-leftCornerAngle/2)-(gs_frame_width/2)/SIN(leftCornerAngle/2), -gs_fthk,      1+32,
					ac_unit_width/2-gs_fthk*TAN(90-leftCornerAngle/2),-gs_fthk,      0,
					ac_unit_width/2, 0,      -1

				DEL 1
				glaa=(gs_frame_width/2)/SIN(leftCornerAngle/2)+(gs_glass_thk*(bDetailedGlass)+gs_gsb)*TAN(90-leftCornerAngle/2)
				glaa_dt=0
			endif
		endif

		if leftCornerAngle >180 then
			if not(gs_sidelight_left) then iFrameStyleLeft = FRAME_STYLE_VISIBLE_MULLIONS
			if iFrameStyleLeft = FRAME_STYLE_VISIBLE_MULLIONS then
				POLY2_b 7, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
					-ac_unit_width/2+gs_fthk*TAN(90+leftCornerAngle/2), 0, 1+32,
					-ac_unit_width/2+gs_fw_side_left, 0, 1+32,
					-ac_unit_width/2+gs_fw_side_left, _posDoorStop2L, 1-(bDoorStopDisplay*bEnableDoorStop*not(gs_sidelight_left)),
					-ac_unit_width/2+gs_fw_side_left, _posDoorStop1L, 1+32,
					-ac_unit_width/2+gs_fw_side_left, -gs_fthk, 1+32,
					-ac_unit_width/2, -gs_fthk, 0,
					-ac_unit_width/2+gs_fthk*TAN(90+leftCornerAngle/2), 0, -1
				glaa_dt=0
			endif

			if iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED then
				MUL2 -1,1
				POLY2_b 5, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
					ac_unit_width/2+(gs_fthk-gs_glass_thk*(bDetailedGlass)-gs_gsb)*TAN(90-leftCornerAngle/2), -gs_glass_thk*(bDetailedGlass)-gs_gsb,      1+32,
					ac_unit_width/2+gs_fthk*TAN(90-leftCornerAngle/2)-(gs_frame_width/2)/SIN(180-leftCornerAngle/2)-(gs_glass_thk*(bDetailedGlass)+gs_gsb)*TAN(90-leftCornerAngle/2),
					 -gs_glass_thk*(bDetailedGlass)-gs_gsb,     1+32,
					ac_unit_width/2-(gs_frame_width/2)/SIN(180-leftCornerAngle/2), -gs_fthk,      1+32,
					ac_unit_width/2,-gs_fthk,      0,
					ac_unit_width/2+(gs_fthk-gs_glass_thk*(bDetailedGlass)-gs_gsb)*TAN(90-leftCornerAngle/2), -gs_glass_thk*(bDetailedGlass)-gs_gsb,      -1
				DEL 1
				glaa=-gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(180-leftCornerAngle/2)+(gs_glass_thk*(bDetailedGlass)+gs_gsb)*TAN(90-leftCornerAngle/2)
				glaa_dt=-(gs_fthk-gs_gsb)*TAN(90-leftCornerAngle/2)
				glaa_inside=-(gs_fthk-gs_glass_thk-gs_gsb)*TAN(90-leftCornerAngle/2)
			endif

			if iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED_WO_FRAME then
				glaa=-gs_fthk*TAN(90-leftCornerAngle/2)+(gs_glass_thk*(bDetailedGlass)+gs_gsb)*TAN(90-leftCornerAngle/2)
				glaa_dt=-(gs_fthk-gs_gsb)*TAN(90-leftCornerAngle/2)
				glaa_inside=-(gs_fthk-gs_glass_thk-gs_gsb)*TAN(90-leftCornerAngle/2)
			endif

			if iFrameStyleLeft = FRAME_STYLE_ANGLE_FRAME then
				MUL2 -1,1
				POLY2_b 6, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
					ac_unit_width/2+gs_fthk*TAN(90-leftCornerAngle/2), 0,      1+32,

					ac_unit_width/2+gs_fthk*TAN(90-leftCornerAngle/2)-(gs_frame_width/2)/SIN(180-leftCornerAngle/2)-(gs_glass_thk*(bDetailedGlass)+gs_gsb)*TAN(90-leftCornerAngle/2), 0,      1+32,
					ac_unit_width/2+gs_fthk*TAN(90-leftCornerAngle/2)-(gs_frame_width/2)/SIN(180-leftCornerAngle/2)-(gs_glass_thk*(bDetailedGlass)+gs_gsb)*TAN(90-leftCornerAngle/2),
					 -gs_glass_thk*(bDetailedGlass)-gs_gsb,     1+32,
					ac_unit_width/2-(gs_frame_width/2)/SIN(180-leftCornerAngle/2), -gs_fthk,      1+32,
					ac_unit_width/2,-gs_fthk,      0,
					ac_unit_width/2+gs_fthk*TAN(90-leftCornerAngle/2), 0,      -1
				DEL 1

				glaa=-(gs_fthk*TAN(90-leftCornerAngle/2)-(gs_frame_width/2)/SIN(180-leftCornerAngle/2)-(gs_glass_thk*(bDetailedGlass)+gs_gsb)*TAN(90-leftCornerAngle/2))
				glaa_dt=0
			endif
		endif
	ELSE
		glaa_dt=0
	endif

	del nFlipTrans
endif


! =============================================================================
! Glass
! =============================================================================

pen gs_pen_glass
line_type gs_symbLineType
fill gs_gsect

nFlipTrans = 0
if bOpeningDirectionSL then
	mul2 1, -1
	add2 0,gs_fthk
	nFlipTrans = 2
endif

if bShowGlassInMiddle2D then
	if gs_sidelight_left & not(gs_sidelight_right) then
		ADD2 0,-gs_gsb * bShowFrameIn2D
		gosub "leftGlass2D"
		DEL 1
	endif

	if gs_sidelight_right & not(gs_sidelight_left) then
		ADD2 0,-gs_gsb * bShowFrameIn2D
		gosub "rightGlass2D"
		DEL 1
	endif

	if gs_sidelight_right & gs_sidelight_left then
		ADD2 0,-gs_gsb * bShowFrameIn2D
		gosub "leftGlass2D"
		gosub "rightGlass2D"
		DEL 1
	endif
endif

! Sidelight frame contours and uncut polygons -----------------------------------------------------

glassFrameMod = gs_gsb+gs_glass_thk * bDetailedGlass

if gs_sidelight_left and (lod2D = DET2D_FS_DETAILED | lod2D = DET2D_FS_DETAILED_CHI | lod2D = DET2D_FS_MIDDLE) then
	line_property 0
	pen gs_frame_pen_cont
	fill gs_FillSdl
	drawindex 10

	add2 -ac_unit_width/2, 0

	if not(gs_cl) then
		line2 0, 0, gs_sidelight_width_left, 0
		line2 0, -gs_fthk, gs_sidelight_width_left, -gs_fthk
	else
		if leftCornerAngle <180 then
			line2 0, 0, gs_sidelight_width_left, 0
			line2 -gs_fthk*TAN(90+leftCornerAngle/2), -gs_fthk, gs_sidelight_width_left, -gs_fthk
		else
			line2 0, -gs_fthk, gs_sidelight_width_left, -gs_fthk
			line2 gs_fthk*TAN(90+leftCornerAngle/2), 0, gs_sidelight_width_left, 0
		endif
	endif

	if not(gs_cl) | (gs_cl & iFrameStyleLeft = FRAME_STYLE_VISIBLE_MULLIONS) then

		poly2_b 5, 1+2+64, gs_penSdl_fg, gs_penSdl_bg,
			gs_fw_side_left, -glassFrameMod, 0,
			gs_sidelight_width_left-gs_frame_width, -glassFrameMod,	0,
			gs_sidelight_width_left-gs_frame_width, -gs_fthk,	0,
			gs_fw_side_left,						-gs_fthk,	0,
			gs_fw_side_left,						-glassFrameMod,	-1

		if iFrameStyleLeft = FRAME_STYLE_VISIBLE_MULLIONS then
			poly2_b 5, 1+2+64, gs_penSdl_fg, gs_penSdl_bg,
				gs_fw_side_left, 0, 0,
				gs_sidelight_width_left-gs_frame_width, 0,			0,
				gs_sidelight_width_left-gs_frame_width, -gs_gsb,	0,
				gs_fw_side_left, -gs_gsb,	0,
				gs_fw_side_left, 0,	-1
		else
			poly2_b 5, 1+2+64, gs_penSdl_fg, gs_penSdl_bg,
				0, 0, 0,
				gs_sidelight_width_left-gs_frame_width, 0,			0,
				gs_sidelight_width_left-gs_frame_width, -gs_gsb,	0,
				0, -gs_gsb,	0,
				0, 0, -1
		endif
	else
		if leftCornerAngle <180 then
			if iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED_WO_FRAME then
				poly2_b 5, 1+2+64, gs_penSdl_fg, gs_penSdl_bg,
					glassFrameMod*TAN(90-leftCornerAngle/2), -glassFrameMod, 0,
					gs_sidelight_width_left-gs_frame_width, -glassFrameMod,	0,
					gs_sidelight_width_left-gs_frame_width, -gs_fthk,	0,
					gs_fthk*TAN(90-leftCornerAngle/2),	-gs_fthk,	0,
					glassFrameMod*TAN(90-leftCornerAngle/2),	-glassFrameMod,	-1
			else
				poly2_b 5, 1+2+64, gs_penSdl_fg, gs_penSdl_bg,
					(gs_frame_width/2)/SIN(leftCornerAngle/2)+glassFrameMod*TAN(90-leftCornerAngle/2), -glassFrameMod, 0,
					gs_sidelight_width_left-gs_frame_width, -glassFrameMod,	0,
					gs_sidelight_width_left-gs_frame_width, -gs_fthk,	0,
					+gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2),	-gs_fthk,	0,
					(gs_frame_width/2)/SIN(leftCornerAngle/2)+glassFrameMod*TAN(90-leftCornerAngle/2),	-glassFrameMod,	-1
			endif
			if iFrameStyleLeft = FRAME_STYLE_ANGLE_FRAME then
				poly2_b 5, 1+2+64, gs_penSdl_fg, gs_penSdl_bg,
					(gs_frame_width/2)/SIN(leftCornerAngle/2)+glassFrameMod*TAN(90-leftCornerAngle/2), 0, 0,
					gs_sidelight_width_left-gs_frame_width, 0,			0,
					gs_sidelight_width_left-gs_frame_width, -gs_gsb,	0,
					(gs_frame_width/2)/SIN(leftCornerAngle/2)+glassFrameMod*TAN(90-leftCornerAngle/2), -gs_gsb,	0,
					(gs_frame_width/2)/SIN(leftCornerAngle/2)+glassFrameMod*TAN(90-leftCornerAngle/2), 0, -1

			else
				poly2_b 5, 1+2+64, gs_penSdl_fg, gs_penSdl_bg,
					0, 0, 0,
					gs_sidelight_width_left-gs_frame_width, 0,			0,
					gs_sidelight_width_left-gs_frame_width, -gs_gsb,	0,
					gs_gsb*TAN(90-leftCornerAngle/2), -gs_gsb,	0,
					0, 0, -1

			endif
		else
			if iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED_WO_FRAME then
				poly2_b 5, 1+2+64, gs_penSdl_fg, gs_penSdl_bg,
					gs_fthk*TAN(90+leftCornerAngle/2)-(glassFrameMod)*TAN(90+leftCornerAngle/2), -glassFrameMod, 0,
					gs_sidelight_width_left-gs_frame_width, -glassFrameMod,	0,
					gs_sidelight_width_left-gs_frame_width, -gs_fthk,	0,
					0,	-gs_fthk,	0,
					gs_fthk*TAN(90+leftCornerAngle/2)-(glassFrameMod)*TAN(90+leftCornerAngle/2),	-glassFrameMod,	-1
			else
				poly2_b 5, 1+2+64, gs_penSdl_fg, gs_penSdl_bg,
					-(gs_fthk*TAN(90-leftCornerAngle/2)-(gs_frame_width/2)/SIN(180-leftCornerAngle/2)-glassFrameMod*TAN(90-leftCornerAngle/2)), -glassFrameMod, 0,
					gs_sidelight_width_left-gs_frame_width, -glassFrameMod,	0,
					gs_sidelight_width_left-gs_frame_width, -gs_fthk,	0,
					(gs_frame_width/2)/SIN(180-leftCornerAngle/2),	-gs_fthk,	0,
					-(gs_fthk*TAN(90-leftCornerAngle/2)-(gs_frame_width/2)/SIN(180-leftCornerAngle/2)-glassFrameMod*TAN(90-leftCornerAngle/2)),	-glassFrameMod,	-1
			endif

			if iFrameStyleLeft = FRAME_STYLE_ANGLE_FRAME then
				poly2_b 5, 1+2+64, gs_penSdl_fg, gs_penSdl_bg,
					-(gs_fthk*TAN(90-leftCornerAngle/2)-(gs_frame_width/2)/SIN(180-leftCornerAngle/2)-glassFrameMod*TAN(90-leftCornerAngle/2)), 0, 0,
					gs_sidelight_width_left-gs_frame_width, 0,			0,
					gs_sidelight_width_left-gs_frame_width, -gs_gsb,	0,
					-(gs_fthk*TAN(90-leftCornerAngle/2)-(gs_frame_width/2)/SIN(180-leftCornerAngle/2)-glassFrameMod*TAN(90-leftCornerAngle/2)), -gs_gsb,	0,
					-(gs_fthk*TAN(90-leftCornerAngle/2)-(gs_frame_width/2)/SIN(180-leftCornerAngle/2)-glassFrameMod*TAN(90-leftCornerAngle/2)), 0, -1

			else
				poly2_b 5, 1+2+64, gs_penSdl_fg, gs_penSdl_bg,
					gs_fthk*TAN(90+leftCornerAngle/2), 0, 0,
					gs_sidelight_width_left-gs_frame_width, 0,			0,
					gs_sidelight_width_left-gs_frame_width, -gs_gsb,	0,
					gs_fthk*TAN(90+leftCornerAngle/2)-(gs_gsb)*TAN(90+leftCornerAngle/2), -gs_gsb,	0,
					gs_fthk*TAN(90+leftCornerAngle/2), 0, -1
			endif
		endif
	endif
	del 1
endif

if gs_sidelight_right and (lod2D = DET2D_FS_DETAILED | lod2D = DET2D_FS_DETAILED_CHI | lod2D = DET2D_FS_MIDDLE) then
	line_property 0
	pen gs_frame_pen_cont
	fill gs_FillSdl
	drawindex 10

	add2 ac_unit_width/2, 0

	if not(gs_cr) then
		line2 0, 0, -gs_sidelight_width_right, 0
		line2 0, -gs_fthk, -gs_sidelight_width_right, -gs_fthk
	else
		if rightCornerAngle <180 then
			line2 0, 0, -gs_sidelight_width_right, 0
			line2 gs_fthk*TAN(90+rightCornerAngle/2), -gs_fthk, -gs_sidelight_width_right, -gs_fthk
		else
			line2 0, -gs_fthk, -gs_sidelight_width_right, -gs_fthk
			line2 -gs_fthk*TAN(90+rightCornerAngle/2), 0, -gs_sidelight_width_right, 0
		endif
	endif

	if not(gs_cr) | (gs_cr & iFrameStyleRight = FRAME_STYLE_VISIBLE_MULLIONS) then

		poly2_b 5, 1+2+64, gs_penSdl_fg, gs_penSdl_bg,
			-gs_fw_side_right, -glassFrameMod, 0,
			-gs_sidelight_width_right+gs_frame_width, -glassFrameMod,	0,
			-gs_sidelight_width_right+gs_frame_width, -gs_fthk,	0,
			-gs_fw_side_right,						-gs_fthk,	0,
			-gs_fw_side_right,						-glassFrameMod,	-1

		if iFrameStyleRight = FRAME_STYLE_VISIBLE_MULLIONS then
			poly2_b 5, 1+2+64, gs_penSdl_fg, gs_penSdl_bg,
				-gs_fw_side_right, 0, 0,
				-gs_sidelight_width_right+gs_frame_width, 0,			0,
				-gs_sidelight_width_right+gs_frame_width, -gs_gsb,	0,
				-gs_fw_side_right, -gs_gsb,	0,
				-gs_fw_side_right, 0,	-1
		else
			poly2_b 5, 1+2+64, gs_penSdl_fg, gs_penSdl_bg,
				0, 0, 0,
				-gs_sidelight_width_right+gs_frame_width, 0,			0,
				-gs_sidelight_width_right+gs_frame_width, -gs_gsb,	0,
				0, -gs_gsb,	0,
				0, 0, -1
		endif
	else
		if rightCornerAngle <180 then
			if iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED_WO_FRAME then
				poly2_b 5, 1+2+64, gs_penSdl_fg, gs_penSdl_bg,
					-glassFrameMod*TAN(90-rightCornerAngle/2), -glassFrameMod, 0,
					-gs_sidelight_width_right+gs_frame_width, -glassFrameMod,	0,
					-gs_sidelight_width_right+gs_frame_width, -gs_fthk,	0,
					-gs_fthk*TAN(90-rightCornerAngle/2),	-gs_fthk,	0,
					-glassFrameMod*TAN(90-rightCornerAngle/2),	-glassFrameMod,	-1
			else
				poly2_b 5, 1+2+64, gs_penSdl_fg, gs_penSdl_bg,
					-(gs_frame_width/2)/SIN(rightCornerAngle/2)-glassFrameMod*TAN(90-rightCornerAngle/2), -glassFrameMod, 0,
					-gs_sidelight_width_right+gs_frame_width, -glassFrameMod,	0,
					-gs_sidelight_width_right+gs_frame_width, -gs_fthk,	0,
					-gs_fthk*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(rightCornerAngle/2),	-gs_fthk,	0,
					-(gs_frame_width/2)/SIN(rightCornerAngle/2)-glassFrameMod*TAN(90-rightCornerAngle/2),	-glassFrameMod,	-1
			endif
			if iFrameStyleRight = FRAME_STYLE_ANGLE_FRAME then
				poly2_b 5, 1+2+64, gs_penSdl_fg, gs_penSdl_bg,
					-(gs_frame_width/2)/SIN(rightCornerAngle/2)-glassFrameMod*TAN(90-rightCornerAngle/2), 0, 0,
					-gs_sidelight_width_right+gs_frame_width, 0,			0,
					-gs_sidelight_width_right+gs_frame_width, -gs_gsb,	0,
					-(gs_frame_width/2)/SIN(rightCornerAngle/2)-glassFrameMod*TAN(90-rightCornerAngle/2), -gs_gsb,	0,
					-(gs_frame_width/2)/SIN(rightCornerAngle/2)-glassFrameMod*TAN(90-rightCornerAngle/2), 0, -1

			else
				poly2_b 5, 1+2+64, gs_penSdl_fg, gs_penSdl_bg,
					0, 0, 0,
					-gs_sidelight_width_right+gs_frame_width, 0,			0,
					-gs_sidelight_width_right+gs_frame_width, -gs_gsb,	0,
					-gs_gsb*TAN(90-rightCornerAngle/2), -gs_gsb,	0,
					0, 0, -1

			endif
		else
			if iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED_WO_FRAME then
				poly2_b 5, 1+2+64, gs_penSdl_fg, gs_penSdl_bg,
					-gs_fthk*TAN(90+rightCornerAngle/2)+(glassFrameMod)*TAN(90+rightCornerAngle/2), -glassFrameMod, 0,
					-gs_sidelight_width_right+gs_frame_width, -glassFrameMod,	0,
					-gs_sidelight_width_right+gs_frame_width, -gs_fthk,	0,
					0,	-gs_fthk,	0,
					-gs_fthk*TAN(90+rightCornerAngle/2)+(glassFrameMod)*TAN(90+rightCornerAngle/2),	-glassFrameMod,	-1
			else
				poly2_b 5, 1+2+64, gs_penSdl_fg, gs_penSdl_bg,
					(gs_fthk*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(180-rightCornerAngle/2)-glassFrameMod*TAN(90-rightCornerAngle/2)), -glassFrameMod, 0,
					-gs_sidelight_width_right+gs_frame_width, -glassFrameMod,	0,
					-gs_sidelight_width_right+gs_frame_width, -gs_fthk,	0,
					-(gs_frame_width/2)/SIN(180-rightCornerAngle/2),	-gs_fthk,	0,
					(gs_fthk*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(180-rightCornerAngle/2)-glassFrameMod*TAN(90-rightCornerAngle/2)),	-glassFrameMod,	-1
			endif

			if iFrameStyleRight = FRAME_STYLE_ANGLE_FRAME then
				poly2_b 5, 1+2+64, gs_penSdl_fg, gs_penSdl_bg,
					(gs_fthk*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(180-rightCornerAngle/2)-glassFrameMod*TAN(90-rightCornerAngle/2)), 0, 0,
					-gs_sidelight_width_right+gs_frame_width, 0,			0,
					-gs_sidelight_width_right+gs_frame_width, -gs_gsb,	0,
					(gs_fthk*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(180-rightCornerAngle/2)-glassFrameMod*TAN(90-rightCornerAngle/2)), -gs_gsb,	0,
					(gs_fthk*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(180-rightCornerAngle/2)-glassFrameMod*TAN(90-rightCornerAngle/2)), 0, -1

			else
				poly2_b 5, 1+2+64, gs_penSdl_fg, gs_penSdl_bg,
					-gs_fthk*TAN(90+rightCornerAngle/2), 0, 0,
					-gs_sidelight_width_right+gs_frame_width, 0,			0,
					-gs_sidelight_width_right+gs_frame_width, -gs_gsb,	0,
					-gs_fthk*TAN(90+rightCornerAngle/2)+(gs_gsb)*TAN(90+rightCornerAngle/2), -gs_gsb,	0,
					-gs_fthk*TAN(90+rightCornerAngle/2), 0, -1
			endif
		endif
	endif
	del 1
endif
drawindex 30

del nFlipTrans


! =============================================================================
! Leaf
! =============================================================================

! Opening Lines ---------------------------------------------------------------

if gs_bDifferentSashAndSwing2D then
	_openedSashPen		= gs_leaf_pen_2D
	_openedGlassPen		= gs_pen_glass
	gs_openedSashLineType_1	= 1
	gs_openedSashLineType_2	= 1
	gs_openedGlassLineType_1 = 1
	gs_swingLineType_1		= gs_swingLineType
else
	_openedSashPen			= gs_opLinePen
	_openedGlassPen			= gs_opLinePen
	gs_openedSashLineType_1	= gs_swingLineType
	gs_swingLineType_1		= gs_swingLineType
	if gs_bSameLineTypeForLeaves then
		gs_openedSashLineType_2	= gs_swingLineType
	else
		gs_openedSashLineType_2	= gs_swingLineType2
	endif
endif

if gs_bSameLineTypeForLeaves then
	gs_swingLineType_2		= gs_swingLineType
else
	gs_swingLineType_2		= gs_swingLineType2
endif

if iTypeDemolitionFill = RENOVATION_FILL_DEMOLISHED then
	gs_openedSashLineType_1	= gs_Demolition_linetype
	gs_swingLineType_1		= gs_Demolition_linetype
	gs_openedSashLineType_2	= gs_Demolition_linetype
	gs_swingLineType_2		= gs_Demolition_linetype
endif

pen _openedSashPen
fill gs_fillLeaf

lfsug = (ac_unit_width - 2 * gs_frame_width)

z = -gs_fthk * tan(90 - rightCornerAngle/2) - gs_fthk * tan(90)

reverse2dAngleMask = 512
reverse2dAngle2Mask = 0


unID_Opening = 1000
line_property 0

lod2D_temp	= lod2D

if iDoorPanelType <> PANEL_EMPTY then
	! ------------------------------------------------------------------------------------------
	! if you modify transformations up to gosub "LineShapeSimpleLine", copy them to ELSE branch
	! ------------------------------------------------------------------------------------------
	add2 0, -gs_fthk * not(bShowFrameIn2D) * bOpeningDirectionSL

	if iDoorType = 1 then

		_sizeLeafA = ac_unit_width-frameOrSLightWidthRight-frameOrSLightWidthLeft + gs_frame_width * 2 * not(bShowFrameIn2D)

		ADD2 (frameOrSLightWidthLeft - frameOrSLightWidthRight)/2, 0
		mul2 -1, 1

		line_type gs_openedSashLineType_1

		gosub "drawDoorLeaf"

		if gs_iSwingType = LINE_SHAPE_SWING_SIMPLE_LINE | gs_iSwingType = LINE_SHAPE_SWING_LEAF_LINE then
			pen gs_opLinePen
			line_type gs_swingLineType_1
			gosub "LineShapeSimpleLine"
		else
			! -------------- HOTSPOT EDITING
			if gs_full_edit then
				add2 -_sizeLeafA/2, 0
				hotspot2 0, 							0, 	unID_Opening,		gs_open_2D,	6 + reverse2dAngleMask	! 1000
				hotspot2 _sizeLeafA, 					0,	unID_Opening + 1,	gs_open_2D,	4+128			! 1001
				hotspot2 _sizeLeafA*cos(gs_open_2D),	_sizeLeafA*sin(gs_open_2D),	unID_Opening + 2,	gs_open_2D,	5	! 1002
				unID_Opening = unID_Opening + 10
				del 1
			endif

			! Swing Line ------------------------------
			pen gs_opLinePen
			drawindex 20
			line_type gs_swingLineType_1

			if gs_open_2D > 0 then
				if gs_iSwingType = LINE_SHAPE_SWING_CURVED then
					arc2 -_sizeLeafA/2, 0, _sizeLeafA, 0, gs_open_2D
!				else
!					line2	_sizeLeafA/2 , 0,
!							-_sizeLeafA/2 + _sizeLeafA * cos(gs_open_2D) + gs_leaf_thk * sin(gs_open_2D) * (lod2D = DET2D_FS_DETAILED),
!							_sizeLeafA * sin(gs_open_2D) - gs_leaf_thk * cos(gs_open_2D) * (lod2D = DET2D_FS_DETAILED)
				endif
			endif
		endif
		del 2

		line_type gs_symbLineType
	endif


	if iDoorType = 2 then

		if gs_iSwingType = LINE_SHAPE_SWING_SIMPLE_LINE then
			pen gs_opLinePen
			line_type gs_swingLineType_1

			add2 ac_unit_width/2 - frameOrSLightWidthRight - (ac_unit_width - frameOrSLightWidthLeft - frameOrSLightWidthRight)/2, -gs_fthk/2
			gosub "LineShapeSimpleLine"
			del 1

			add2 ac_unit_width/2- frameOrSLightWidthRight-lar, 0
			for i=1 to 2

				lod2D = lod2D_temp

				if i=1 then
					_sizeLeafA = lar + gs_frame_width * not(bShowFrameIn2D)
					line_type gs_openedSashLineType_1
				else
					_sizeLeafA = lal + gs_frame_width * not(bShowFrameIn2D)
					bShowHandleonActualLeaf = 0
					line_type gs_openedSashLineType_2
				endif

				add2 _sizeLeafA/2 + gs_frame_width*gs_mf*(i=2), 0
				mul2 -1, 1

				gosub "drawDoorLeaf"

				del 2
				mul2 -1, 1
			next i
			del 2

			del 1
		else
			add2 ac_unit_width/2- frameOrSLightWidthRight-lar, 0
			for i=1 to 2

				lod2D = lod2D_temp

				if i=1 then
					_sizeLeafA = lar + gs_frame_width * not(bShowFrameIn2D)
				else
					_sizeLeafA = lal + gs_frame_width * not(bShowFrameIn2D)
					bShowHandleonActualLeaf = 0
				endif

				add2 _sizeLeafA/2 + gs_frame_width*gs_mf*(i=2), 0
				mul2 -1, 1

				gosub "drawDoorLeaf"

				if gs_iSwingType = LINE_SHAPE_SWING_LEAF_LINE then
					pen gs_opLinePen
					if i=1 then
						line_type gs_swingLineType_1
					else
						line_type gs_swingLineType_2
					endif

					gosub "LineShapeSimpleLine"
				else
					! -------------- HOTSPOT EDITING
					add2 -_sizeLeafA/2, 0
					if gs_full_edit then
						if i=1 then
							hotspot2 0, 					0, 						unID_Opening,		gs_open_2D,	6 + reverse2dAngleMask		! 1000
							hotspot2 _sizeLeafA, 					0,						unID_Opening + 1,	gs_open_2D,	4+128			! 1001
							hotspot2 _sizeLeafA*cos(gs_open_2D),	_sizeLeafA*sin(gs_open_2D),	unID_Opening + 2,	gs_open_2D,	5	! 1002
							unID_Opening = unID_Opening + 10
						else
							hotspot2 0, 					0, 						unID_Opening,		gs_open_2D,	6 + reverse2dAngle2Mask		! 1010
							hotspot2 _sizeLeafA, 					0,						unID_Opening + 1,	gs_open_2D,	4+128			! 1011
							hotspot2 _sizeLeafA*cos(gs_open_2D),	_sizeLeafA*sin(gs_open_2D),	unID_Opening + 2,	gs_open_2D,	5	! 1012
						endif
					endif
					del 1

					! Swing Line ------------------------------
					pen gs_opLinePen
					drawindex 20
					if i=1 then
						line_type gs_swingLineType_1
					else
						line_type gs_swingLineType_2
					endif

					if abs(gs_open_2D) > EPS & abs(gs_open_2D - 360) > EPS then
						if gs_iSwingType = LINE_SHAPE_SWING_CURVED then
							arc2 -_sizeLeafA/2, 0, _sizeLeafA, 0, gs_open_2D
!						else
!							line2 _sizeLeafA/2 , 0,
!							-_sizeLeafA/2 + _sizeLeafA * cos(gs_open_2D) + gs_leaf_thk * sin(gs_open_2D) * (lod2D = DET2D_FS_DETAILED),
!							 _sizeLeafA * sin(gs_open_2D) - gs_leaf_thk * cos(gs_open_2D) * (lod2D = DET2D_FS_DETAILED)
						endif
					endif
				endif

				del 2
				mul2 -1, 1
			next i
			del 2

			del 1
		endif
	endif
	del 1
else	! iDoorPanelType = PANEL_EMPTY
	!-----------------------------------
	! transformations copied from above
	!-----------------------------------
	if gs_iSwingType = LINE_SHAPE_SWING_SIMPLE_LINE then
		add2 0, -gs_fthk * not(bShowFrameIn2D) * bOpeningDirectionSL
	
		if iDoorType = 1 then
			add2 (frameOrSLightWidthLeft - frameOrSLightWidthRight) / 2, 0
			mul2 -1, 1
		endif
		if iDoorType = 2 then
			add2 ac_unit_width/2 - frameOrSLightWidthRight - (ac_unit_width - frameOrSLightWidthLeft - frameOrSLightWidthRight) / 2, -gs_fthk / 2
			mul2 1, 1
		endif
	
		pen gs_opLinePen
		line_type gs_swingLineType_1
		gosub "LineShapeSimpleLine"

		del 3
	endif
endif

! =============================================================================
! Door Stop
! =============================================================================

if bDoorStopDisplay and bEnableDoorStop then
	line_type gs_symbLineType
	pen gs_frame_pen_cont
	fill gs_fillFr

	if gs_ds then
		poly2_b 4, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
			-ac_unit_width/2+frameOrSLightWidthLeft, -gs_leaf_thk, 1+32,
			-ac_unit_width/2+frameOrSLightWidthLeft+gs_ds_w, -gs_leaf_thk, 1+32,
			-ac_unit_width/2+frameOrSLightWidthLeft+gs_ds_w, -gs_leaf_thk-gs_ds_thk, 1+32,
			-ac_unit_width/2+frameOrSLightWidthLeft, -gs_leaf_thk-gs_ds_thk, 0

		poly2_b 4, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
			ac_unit_width/2-frameOrSLightWidthRight, -gs_leaf_thk, 1+32,
			ac_unit_width/2-frameOrSLightWidthRight-gs_ds_w, -gs_leaf_thk, 1+32,
			ac_unit_width/2-frameOrSLightWidthRight-gs_ds_w, -gs_leaf_thk-gs_ds_thk, 1+32,
			ac_unit_width/2-frameOrSLightWidthRight, -gs_leaf_thk-gs_ds_thk, 0
	endif
endif

! =============================================================================
! Middle frame
! =============================================================================

if gs_mf then
	fill gs_fillFr
	poly2_b 8, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
		ac_unit_width/2-frameOrSLightWidthRight-lar, 0, 1+32,
		ac_unit_width/2-frameOrSLightWidthRight-lar, -min(gs_leaf_thk, gs_fthk), 1-(bEnableDoorStop*(lod2D = DET2D_FS_DETAILED | lod2D = DET2D_FS_DETAILED_CHI))+32,
		ac_unit_width/2-frameOrSLightWidthRight-lar, -min(gs_leaf_thk, gs_fthk)-bEnableDoorStop * gs_ds_thk, 1+32,
		ac_unit_width/2-frameOrSLightWidthRight-lar, -gs_fthk, 1+32,
		-ac_unit_width/2+frameOrSLightWidthLeft+lal, -gs_fthk, 1+32,
		-ac_unit_width/2+frameOrSLightWidthLeft+lal, -min(gs_leaf_thk, gs_fthk)-bEnableDoorStop * gs_ds_thk, 1-(bEnableDoorStop*(lod2D = DET2D_FS_DETAILED | lod2D = DET2D_FS_DETAILED_CHI))+32,
		-ac_unit_width/2+frameOrSLightWidthLeft+lal, -min(gs_leaf_thk, gs_fthk), 1+32,
		-ac_unit_width/2+frameOrSLightWidthLeft+lal, 0, 1+32

	if gs_ds & bEnableDoorStop then
		add2 ac_unit_width/2-frameOrSLightWidthRight-lar-gs_frame_width/2, 0
		poly2_b 4, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
			-gs_frame_width/2, -gs_leaf_thk, 1+32,
			-gs_frame_width/2-gs_ds_w, -gs_leaf_thk, 1+32,
			-gs_frame_width/2-gs_ds_w, -gs_leaf_thk-gs_ds_thk, 1+32,
			-gs_frame_width/2, -gs_leaf_thk-gs_ds_thk, 0
		del 1
		add2 -ac_unit_width/2+frameOrSLightWidthLeft+lal+gs_frame_width/2, 0
		poly2_b 4, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
			gs_frame_width/2, -gs_leaf_thk, 1+32,
			gs_frame_width/2+gs_ds_w, -gs_leaf_thk, 1+32,
			gs_frame_width/2+gs_ds_w, -gs_leaf_thk-gs_ds_thk, 1+32,
			gs_frame_width/2, -gs_leaf_thk-gs_ds_thk, 0
		del 1
	endif
endif


END

"LineShapeSimpleLine":
	drawindex 20

	hotspot2 0, -0.50, unID_Opening
	hotspot2 0, 0.50, unID_Opening + 1
	line2 0, -0.50, 0, 0.50
	line_type gs_symbLineType
return


"drawDoorLeaf":

	! -------------- Door Leaf
	add2 -_sizeLeafA/2, 0
	rot2 gs_open_2D
	add2 _sizeLeafA/2, 0

	if bOpeningSymbDisplay then
		if gs_iSwingType <> LINE_SHAPE_SWING_SIMPLE_LINE & gs_iSwingType <> LINE_SHAPE_SWING_LEAF_LINE then
			pen gs_opLinePen
			line2	-_sizeLeafA/2, 0,
					_sizeLeafA/2, 0
		endif

		del 2
		add2 _sizeLeafA/2, 0

		if lod2D_temp = DET2D_FS_MIDDLE then lod2D = DET2D_FS_DETAILED
		gosub "Leaf_Panel"

		del 1
	else
		if gs_iSwingType <> LINE_SHAPE_SWING_SIMPLE_LINE & gs_iSwingType <> LINE_SHAPE_SWING_LEAF_LINE then
			gosub "Leaf_Panel"
		endif
		del 2
	endif

	del 1

return


"Leaf_Panel":
	line_type gs_symbLineType
	call "DoorLeafPanels" parameters all A				= _sizeLeafA,
										 B				= gs_leaf_thk,
							bStorefrontDoor				= 1,
							bStorefrontClassic			= 1,
							lod2D						= lod2D,
							bSimpleLeafin50				= bSimpleLeafin50,
							iSymbolGlassType			= iSymbolGlassType,
							iDoorPanelType				= iDoorPanelType,
							gs_glass_thk				= gs_glass_thk,
							gs_fw_side					= leafFrameWidth,
							gs_glass_pen_cont			= _openedGlassPen,
							gs_leaf_pen_2D				= _openedSashPen,
							gs_fillLeaf					= gs_fillLeaf,
							gs_penLeaf_fg				= gs_penLeaf_fg,
							gs_penLeaf_bg 				= gs_penLeaf_bg,
							gs_FillSdl					= gs_FillSdl,
							gs_penSdl_fg				= gs_penSdl_fg,
							gs_penSdl_bg 				= gs_penSdl_bg,
							gs_gsect					= gs_gsect,
							gs_penGlass_fg				= gs_penGlass_fg,
							gs_penGlass_bg				= gs_penGlass_bg

RETURN

"leftGlass2D":
	ADD2 -ac_unit_width/2, 0
	if iFrameStyleLeft = FRAME_STYLE_VISIBLE_MULLIONS OR iFrameStyleLeft = FRAME_STYLE_ANGLE_FRAME then
		x1 = glaa
		x3 = glaa
	else
		x1 = glaa_dt*(iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED OR iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED_WO_FRAME)
		if iEndFrameLeft = ENDFRAME_CORNER then
			x3 = glaa_inside*(iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED OR iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED_WO_FRAME)
		else
			x3 = 0
		endif
	endif
	y1 = 0
	x2 = leftPanelWidth
	y2 = 0
	y3 = -gs_glass_thk
	x4 = leftPanelWidth
	y4 = -gs_glass_thk


	if bDetailedGlass then
		pen gs_pen_glass
		line_property 2

		poly2_b 5, 1+2+32, gs_penGlass_fg, gs_penGlass_bg,
			x1,y1,0,
			x2,y2,0,
			x4,y4,0,
			x3,y3,0,
			x1,y1,-1

		line2 x4, y4, x3, y3
	else
		pen gs_leaf_pen_2D
		line_property 0
	endif

	if lod2D = DET2D_FS_DETAILED | lod2D = DET2D_FS_DETAILED_CHI then line_property 2
	line2 x1, y1, x2, y2
	line_property 0
	DEL 1
return


"rightGlass2D":
	ADD2 ac_unit_width/2-rightPanelWidth, 0
	if iFrameStyleRight = FRAME_STYLE_VISIBLE_MULLIONS OR iFrameStyleRight = FRAME_STYLE_ANGLE_FRAME then
		x1 = rightPanelWidth+glab
		x3 = rightPanelWidth+glab
	else
		x1 = rightPanelWidth+glab_dt*(iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED OR iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED_WO_FRAME)
		if iEndFrameLeft = ENDFRAME_CORNER then
			x3 = rightPanelWidth+glab_inside*(iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED OR iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED_WO_FRAME)
		else
			x3 = rightPanelWidth
		endif
	endif
	y1 = 0
	x2 = 0
	y2 = 0
	y3 = -gs_glass_thk
	x4 = 0
	y4 = -gs_glass_thk


	if bDetailedGlass then
		pen gs_pen_glass
		line_property 2

		poly2_b 5, 1+2+32, gs_penGlass_fg, gs_penGlass_bg,
			x1,y1,0,
			x2,y2,0,
			x4,y4,0,
			x3,y3,0,
			x1,y1,-1

		line2 x4, y4, x3, y3
	else
		pen gs_leaf_pen_2D
	endif

	if lod2D = DET2D_FS_DETAILED | lod2D = DET2D_FS_DETAILED_CHI then line_property 2

	line2 x1, y1, x2, y2
	line_property 0

	DEL 1
return
