
! const values for parameter: iDWDet2D
if	LibraryLangCode = "AUT" |\
	LibraryLangCode = "CHE" |\
	LibraryLangCode = "GER" then

	DETLEVEL_DW2D_MVO    = 1
	DETLEVEL_DW2D_SCSENS = 2
	DETLEVEL_DW2D_50     = 3
	DETLEVEL_DW2D_100    = 4
	DETLEVEL_DW2D_200    = 5
	DETLEVEL_DW2D_OFF    = 8
	DETLEVEL_DW2D_20     = 9
	DETLEVEL_DW2D_500    = 10
else
	DETLEVEL_DW2D_MVO     = 1
	DETLEVEL_DW2D_SCSENS  = 2
	DETLEVEL_DW2D_50      = 3
	DETLEVEL_DW2D_100     = 4
	DETLEVEL_DW2D_MIDDET  = 5
	DETLEVEL_DW2D_SMPL2L  = 6
	DETLEVEL_DW2D_200     = 7
	DETLEVEL_DW2D_OFF     = 8
	DETLEVEL_DW2D_MIDUSA  = 9
	DETLEVEL_DW2D_CHISMPL = 10
	DETLEVEL_DW2D_CHIDET  = 11
	DETLEVEL_DW2D_20      = 12
endif


! const values for parameter: iTypeDemolitionFill
RENOVATION_FILL_EXIST		= 1
RENOVATION_FILL_DEMOLISHED	= 2
RENOVATION_FILL_NEW			= 3
RENOVATION_FILL_NEW_FULL	= 4


! const values for parameter: iCustomCCEditWallSide
EDITED_WALL_FACE_OUTSIDE = 1
EDITED_WALL_FACE_INSIDE  = 2


! const values for parameter: iCustomCCEditJambSide
EDITED_JAMB_SIDE_BOTH  = 1
EDITED_JAMB_SIDE_LEFT  = 2
EDITED_JAMB_SIDE_RIGHT = 3


! const values for parameter: iCustomCCThicknessType
THICKNESS_TYPE_ORIGINAL = 1
THICKNESS_TYPE_CUSTOM   = 2


! const values for parameter: iCustomCCEditSkin
EDITED_SKIN_1 = 1
EDITED_SKIN_2 = 2
EDITED_SKIN_3 = 3
EDITED_SKIN_4 = 4


! const values for parameter: iCustomCCOrientation
ORIENTATION_ORIGINAL  = 1
ORIENTATION_TURNED_IN = 2


! const values for parameter: gs_SashText_typ_num
MITERED_JOINT = 1
BUTT_JOINT    = 2

! Contact person: <SzL, NJ>

EPS = 0.0001

bDisabeMirroring = 0

! =============================================================================
! Localization
! =============================================================================

dim stDetail[4]
	stDetail[1] = `Зависит от Масштаба`
	stDetail[2] = `Детальный`
	stDetail[3] = `Простой`
	stDetail[4] = `Откл.`

dim stFrameStyle[4]
	stFrameStyle[1] = `Видимые Профили`
	stFrameStyle[2] = `Застекленная`
	stFrameStyle[3] = `Застекленная без Коробки`
	stFrameStyle[4] = `Угловая Коробка`

dim stDivisionMethod[2]
	stDivisionMethod[1] = `Количество Раскладки`
	stDivisionMethod[2] = `Шаг Раскладки`

dim	stEndFrameProfile[3]
	stEndFrameProfile[1] = `Обычный`
	stEndFrameProfile[2] = `Соединения`
	stEndFrameProfile[3] = `Угол`

! iFrameStyleLeft, iFrameStyleRight:
FRAME_STYLE_VISIBLE_MULLIONS		= 1
FRAME_STYLE_BUTT_GLAZED				= 2
FRAME_STYLE_BUTT_GLAZED_WO_FRAME	= 3
FRAME_STYLE_ANGLE_FRAME				= 4

DET2D_FS_OFF				= 0
DET2D_FS_SCALESENS			= -1
DET2D_FS_SIMPLE_ONE			= 11
DET2D_FS_SIMPLE_TWO			= 12
DET2D_FS_MIDDLE				= 21
DET2D_FS_MIDDLE_USA			= 22
DET2D_FS_DETAILED			= 30
DET2D_FS_DETAILED_FIX_GRID	= 31
DET2D_FS_DETAILED_USA		= 32
DET2D_FS_SIMPLE_CHI			= 51
DET2D_FS_DETAILED_CHI		= 52

! iLoD2D
SYMBW_OFF					= 0
SYMBW_SCALESENS				= 1
SYMBW_S_1LINE				= 11
SYMBW_S_2LINE				= 12
SYMBW_S_CENTERLINE			= 13
SYMBW_S_2LINE_ACC			= 14
SYMBW_S_5					= 15
SYMBW_S_6					= 16
SYMBW_S_7					= 17
SYMBW_S_8					= 18
SYMBW_S_9					= 19
SYMBW_M_2LINE_NOGLASS		= 21
SYMBW_M_2LINE_GLASS			= 22
SYMBW_M_FRAMESASH			= 23
SYMBW_M_2LINE_FRAME			= 24
SYMBW_M_5					= 25
SYMBW_M_6					= 26
SYMBW_M_7					= 27
SYMBW_M_8					= 28
SYMBW_M_9					= 29
SYMBW_D_SGLASS				= 31
SYMBW_D_2GLASS				= 32
SYMBW_D_2LINE_HS			= 33
SYMBW_D_NOGLASS				= 34
SYMBW_D_REBATEONGLASS		= 35
SYMBW_D_2GLASS_OVERLAP		= 36
SYMBW_D_7					= 37
SYMBW_D_8					= 38
SYMBW_D_9					= 39

SYMBGLASS_NOGLASS			= 0
SYMBGLASS_SIMPLEGLASS		= 1
SYMBGLASS_DOUBLEGLASS		= 2


ENDFRAME_NORMAL	= 1
ENDFRAME_JOINT	= 2
ENDFRAME_CORNER	= 3

DIVISION_NUM = 1
DIVISION_WIDTH = 2

! ifc_optype:
WIN_OP_NOT_DEFINED				= 0
WIN_OP_SINGLE_PANEL				= 1
WIN_OP_DOUBLE_PANEL_VERTICAL	= 2
WIN_OP_DOUBLE_PANEL_HORIZONTAL	= 3
WIN_OP_TRIPLE_PANEL_VERTICAL	= 4
WIN_OP_TRIPLE_PANEL_HORIZONTAL	= 5
WIN_OP_TRIPLE_PANEL_BOTTOM		= 6
WIN_OP_TRIPLE_PANEL_TOP			= 7
WIN_OP_TRIPLE_PANEL_LEFT		= 8
WIN_OP_TRIPLE_PANEL_RIGHT		= 9
WIN_OP_USER_DEFINED				= 10

! iVentilationProfileType
VENTPROFILE_OVER_FRAME		= 2
VENTPROFILE_OVER_GLAZING	= 3

! =============================================================================
! Main Definitions
! =============================================================================

if gs_wthk then
	gs_fthk = WALL_THICKNESS
	parameters gs_fthk = gs_fthk
	hideparameter "gs_frame_thk"
	lock "gs_frame_thk"
else
	gs_fthk = gs_frame_thk
	parameters gs_fthk = gs_fthk
endif

!! ANGLE MAX !!

aps = (ac_unit_width-(gs_ver_gnum+1)*gs_grid_w)/2
yps = ((-2*gs_fthk*(gs_frame_width/2)**2)-SQR(4*(gs_frame_width/2)**4*gs_fthk**2-4*((gs_frame_width/2)**2-aps**2)*(gs_frame_width/2)**2*(aps**2+gs_fthk**2)))/(2*((gs_frame_width/2)**2-aps**2))
if abs(gs_frame_width)>EPS then
	sps = 90-ASN((gs_frame_width/2)/yps)
endif

if leftCornerAngle/2<sps then
	leftCornerAngle = sps*2
	parameters leftCornerAngle = leftCornerAngle
endif
if rightCornerAngle/2<sps then
	rightCornerAngle = sps*2
	parameters rightCornerAngle = rightCornerAngle
endif
if leftCornerAngle/2>180-sps then
	leftCornerAngle = 360-sps*2
	parameters leftCornerAngle = leftCornerAngle
endif
if rightCornerAngle/2>180-sps then
	rightCornerAngle = 360-sps*2
	parameters rightCornerAngle = rightCornerAngle
endif


! =============================================================================
! Ventilation Profile Type Enable
! =============================================================================

bEnableVentilationProfile = 1
gs_VentilationProfileTypeEnable = 1


! ==============================================================================
! Other Function Control
! ==============================================================================

bEnableParapetInset			= 0
bEnableMasonryArch			= 0
bEnableFaschen				= 0
bEnableSill					= 0
bEnableBoard				= 0
bEnableThreshold			= 0
bEnableCasing				= 0
bEnableShutter				= 0
bEnableCustomCornerLeft		= 0
bEnableCustomCornerRight	= 0


! =============================================================================
! Frame End Profile Settings
! =============================================================================

if iEndFrameLeft = ENDFRAME_JOINT then
	gs_stack_left = 1
	gs_cl = 0
else
	if iEndFrameLeft = ENDFRAME_CORNER then
		gs_stack_left = 0
		gs_cl = 1
	else
		gs_stack_left = 0
		gs_cl = 0
	endif
endif
parameters	gs_stack_left	= gs_stack_left

if iEndFrameRight = ENDFRAME_JOINT then
	gs_stack_right = 1
	gs_cr = 0
else
	if iEndFrameRight = ENDFRAME_CORNER then
		gs_stack_right = 0
		gs_cr = 1
	else
		gs_stack_right = 0
		gs_cr = 0
	endif
endif
parameters	gs_stack_right	= gs_stack_right

if gs_stack_left then
	gs_fw_side_left = gs_frame_width/2
else
	if gs_cl then
		if leftCornerAngle <180 then
			gs_fw_side_left = gs_frame_width+gs_fthk*TAN(90-leftCornerAngle/2)
		endif
		if leftCornerAngle >180 then
			gs_fw_side_left = gs_frame_width-gs_fthk*TAN(90-leftCornerAngle/2)
		endif
	else
		gs_fw_side_left = gs_frame_width
	endif
endif
parameters gs_fw_side_left = gs_fw_side_left

if gs_stack_right then
	gs_fw_side_right = gs_frame_width/2
else
	if gs_cr then
		if rightCornerAngle <180 then
			gs_fw_side_right = gs_frame_width+gs_fthk*TAN(90-rightCornerAngle/2)
		endif
		if rightCornerAngle >180 then
			gs_fw_side_right = gs_frame_width-gs_fthk*TAN(90-rightCornerAngle/2)
		endif
	else
		gs_fw_side_right = gs_frame_width
	endif
endif
parameters gs_fw_side_right = gs_fw_side_right

if gs_stack_bottom then
	gs_fw_lower = bottomRailWidth/2
else
	gs_fw_lower = bottomRailWidth
endif
parameters gs_fw_lower = gs_fw_lower

if gs_stack_top then
	gs_fw_upper = gs_frame_width/2
else
	gs_fw_upper = gs_frame_width
endif
parameters gs_fw_upper = gs_fw_upper

! =============================================================================
! Sidelight and Transom Control
! =============================================================================

if iStorefrontType < 5 then
	gs_bSLight = 0
	gs_bSLight2 = 0
endif
if iStorefrontType = 1 or iStorefrontType = 3 then
	gs_UTrans = 0
endif
if iStorefrontType = 3 or iStorefrontType = 4 then
	bMiddleRail = 0
endif

leftPanelWidth = (gs_SLight_w - gs_frame_width) * gs_bSLight
rightPanelWidth = (gs_SLight_w2 - gs_frame_width) * gs_bSLight2
topPanelHeight = (transomHeight - gs_frame_width) * gs_UTrans

frameOrSLightWidthRight = gs_SLight_w2 * gs_bSLight2 + gs_fw_side_right * not(gs_bSLight2)
frameOrSLightWidthLeft = gs_SLight_w * gs_bSLight + gs_fw_side_left * not(gs_bSLight)
frameOrTransomHeight = transomHeight * gs_UTrans + gs_fw_upper * not(gs_UTrans)


if not(bMiddleRail) then
	fw_tra		= midRailWidth
	midRailWidth	= bottomRailWidth * 2
else
	fw_tra = 0
endif

if iStorefrontType = 3 | iStorefrontType = 4 then
	middlePanelHeight = ac_unit_height-(midRailElevation)*bMiddleRail-midRailWidth/2-gs_frame_width*gs_UTrans-gs_fw_upper*not(gs_UTrans)+gs_fw_lower*gs_stack_bottom
else
	middlePanelHeight = ac_unit_height-(midRailElevation)*bMiddleRail-midRailWidth/2-gs_frame_width*gs_UTrans-gs_fw_upper*not(gs_UTrans)
endif

if iDivisionMethod = DIVISION_WIDTH then
	if abs(divWidthHor) < EPS then gs_ver_gnum=0
	if divWidthHor>0 then
		ha=ac_unit_width-frameOrSLightWidthRight-frameOrSLightWidthLeft
		if INT(ha/divWidthHor)=0 then PARAMETERS gs_ver_gnum=0
		if INT(ha/divWidthHor)>0 then
			if (ha/INT(ha/divWidthHor)-divWidthHor)<=(divWidthHor-ha/(INT(ha/divWidthHor)+1)) then
				PARAMETERS gs_ver_gnum=INT(ha/divWidthHor)-1
			endif
			if (ha/INT(ha/divWidthHor)-divWidthHor)>(divWidthHor-ha/(INT(ha/divWidthHor)+1)) then
				PARAMETERS gs_ver_gnum=INT(ha/divWidthHor)
			endif
		endif
	endif

	if abs(divWidthVertBottom) < EPS then gs_hor_gnum=0
	if divWidthVertBottom>0 AND bMiddleRail then
		ba=(midRailElevation)-midRailWidth/2-gs_fw_lower
		if INT(ba/divWidthVertBottom)=0 then PARAMETERS gs_hor_gnum=0
		if INT(ba/divWidthVertBottom)>0 then
			if (ba/INT(ba/divWidthVertBottom)-divWidthVertBottom)<=(ba/(INT(ba/divWidthVertBottom)+1)-divWidthVertBottom) then
				PARAMETERS gs_hor_gnum=INT(ba/divWidthVertBottom)-1
			endif
			if (ba/INT(ba/divWidthVertBottom)-divWidthVertBottom)>(ba/(INT(ba/divWidthVertBottom)+1)-divWidthVertBottom) then
				PARAMETERS gs_hor_gnum=INT(ba/divWidthVertBottom)
			endif
		endif
	endif

	if abs(divWidthVertMiddle) < EPS then gs_hor_gnumtr=0
	if divWidthVertMiddle>0 then
		ma=middlePanelHeight-topPanelHeight
		if INT(ma/divWidthVertMiddle)=0 then PARAMETERS gs_hor_gnumtr=0
		if INT(ma/divWidthVertMiddle)>0 then
			if (ma/INT(ma/divWidthVertMiddle)-divWidthVertMiddle)<=(divWidthVertMiddle-ma/(INT(ma/divWidthVertMiddle)+1)) then
				PARAMETERS gs_hor_gnumtr=INT(ma/divWidthVertMiddle)-1
			endif
			if (ma/INT(ma/divWidthVertMiddle)-divWidthVertMiddle)>(divWidthVertMiddle-ma/(INT(ma/divWidthVertMiddle)+1)) then
				PARAMETERS gs_hor_gnumtr=INT(ma/divWidthVertMiddle)
			endif
		endif
	endif

	if abs(divWidthVertTransom) < EPS then gs_hor_gtp=0
	if divWidthVertTransom>0 then
		if gs_UTrans then
			ta=topPanelHeight-gs_fw_upper
			if INT(ta/divWidthVertTransom)=0 then PARAMETERS gs_hor_gtp=0
			if INT(ta/divWidthVertTransom)>0 then
				if (ta/INT(ta/divWidthVertTransom)-divWidthVertTransom)<=(ta/(INT(ta/divWidthVertTransom)+1)-divWidthVertTransom) then
					PARAMETERS gs_hor_gtp=INT(ta/divWidthVertTransom)-1
				endif
				if (ta/INT(ta/divWidthVertTransom)-divWidthVertTransom)>(ta/(INT(ta/divWidthVertTransom)+1)-divWidthVertTransom) then
					PARAMETERS gs_hor_gtp=INT(ta/divWidthVertTransom)
				endif
			endif
		endif
	endif
endif

if iDivisionMethod = DIVISION_NUM then
	if nHorDivision<1 then
		nHorDivision = 1
		PARAMETERS nHorDivision = nHorDivision
	endif
	gs_ver_gnum = nHorDivision-1
	PARAMETERS gs_ver_gnum = gs_ver_gnum

	if nVertDivBottom<1 then
		nVertDivBottom = 1
		PARAMETERS nVertDivBottom = nVertDivBottom
	endif

	if nVertDivMiddle<1 then
		nVertDivMiddle = 1
		PARAMETERS nVertDivMiddle = nVertDivMiddle
	endif
	gs_hor_gnumtr = nVertDivMiddle-1
	PARAMETERS gs_hor_gnumtr = gs_hor_gnumtr

	if nVertDivTransom<1 then
		nVertDivTransom = 1
		PARAMETERS nVertDivTransom = nVertDivTransom
	endif

	if iStorefrontType <> 3 then
		gs_hor_gnum = nVertDivBottom-1
		PARAMETERS gs_hor_gnum = gs_hor_gnum

		gs_hor_gtp = nVertDivTransom-1
		PARAMETERS gs_hor_gtp = gs_hor_gtp
	endif
endif

!!! MASKS !!!

mask1=15
mask2=15
mask3=15
mask4=15

if gs_stack_bottom then
	mask1=8
	mask2=13
endif

if gs_stack_right then
	mask2=8
	mask3=13
endif

if gs_stack_top then
	mask3=8
	mask4=13
endif

if gs_stack_left then
	mask4=8
	if mask1<>8 then mask1=13
endif

maskLeftButFr = 0
if iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED | iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED_WO_FRAME then
	maskLeftButFr = 5
endif

maskRightButFr = 0
if iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED | iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED_WO_FRAME then
	maskRightButFr = 5
endif


!!! END OF MASKS !!!

!! DINAMIC ARRAY !!

DIM empty[1] !! Empty Array


if bMiddleRail then
	if gs_hor_gnum>0 AND (GLOB_MODPAR_NAME="B" OR GLOB_MODPAR_NAME="divisionMethod" OR GLOB_MODPAR_NAME="iDivisionMethod"\
		OR GLOB_MODPAR_NAME="divWidthVertBottom" OR GLOB_MODPAR_NAME="gs_unit_size"\
		OR GLOB_MODPAR_NAME="gs_hor_gnum" OR GLOB_MODPAR_NAME="gs_frame_width"\
		OR GLOB_MODPAR_NAME="midRailElevation" OR GLOB_MODPAR_NAME="midRailWidth" \
		OR GLOB_MODPAR_NAME="bMiddleRail" OR GLOB_MODPAR_NAME="nVertDivBottom"\
		OR GLOB_MODPAR_NAME="gs_grid_w" OR GLOB_MODPAR_NAME="gs_stack_bottom") then
		dim temp1[]
		temp1=empty
		last1=0
		dist1=(midRailElevation-midRailWidth/2-gs_fw_lower+gs_grid_w)/(gs_hor_gnum+1)
		for i=1 to gs_hor_gnum
			temp1[i]=last1+dist1
			last1=temp1[i]
		next i

		parameters gs_hor_d=temp1
		gs_hor_d=temp1
	endif
endif
gs_hor_gnum = min(gs_hor_gnum, vardim1(gs_hor_d))


if gs_hor_gnumtr>0 AND (GLOB_MODPAR_NAME="B" OR GLOB_MODPAR_NAME="divisionMethod" OR GLOB_MODPAR_NAME="iDivisionMethod"\
	OR GLOB_MODPAR_NAME="divWidthVertMiddle" OR GLOB_MODPAR_NAME="gs_unit_size"\
	OR GLOB_MODPAR_NAME="transomHeight" OR GLOB_MODPAR_NAME="gs_UTrans" \
	OR GLOB_MODPAR_NAME="gs_hor_gnumtr" OR GLOB_MODPAR_NAME="gs_frame_width"\
	OR GLOB_MODPAR_NAME="midRailElevation" OR GLOB_MODPAR_NAME="midRailWidth" \
	OR GLOB_MODPAR_NAME="bMiddleRail" OR GLOB_MODPAR_NAME="nVertDivMiddle"\
	OR GLOB_MODPAR_NAME="gs_grid_w" OR GLOB_MODPAR_NAME="gs_stack_top" \
	OR GLOB_MODPAR_NAME="gs_stack_bottom") then
	dim temp2[]
	temp2=empty
	last2=0
	dist2=(middlePanelHeight-topPanelHeight+gs_grid_w)/(gs_hor_gnumtr+1)
	for i=1 to gs_hor_gnumtr
		temp2[i]=last2+dist2
		last2=temp2[i]
	next i

	parameters gs_hor_dtr=temp2
	gs_hor_dtr=temp2
endif
gs_hor_gnumtr = min(gs_hor_gnumtr, vardim1(gs_hor_dtr))


if gs_hor_gtp>0 AND (GLOB_MODPAR_NAME="B" OR GLOB_MODPAR_NAME="divisionMethod" OR GLOB_MODPAR_NAME="iDivisionMethod"\
	OR GLOB_MODPAR_NAME="divWidthVertTransom" OR GLOB_MODPAR_NAME="gs_unit_size"\
	OR GLOB_MODPAR_NAME="transomHeight" OR GLOB_MODPAR_NAME="gs_UTrans" \
	OR GLOB_MODPAR_NAME="gs_hor_gtp" OR GLOB_MODPAR_NAME="gs_frame_width"\
	OR GLOB_MODPAR_NAME="nVertDivTransom" OR GLOB_MODPAR_NAME="gs_grid_w" OR GLOB_MODPAR_NAME="gs_stack_top") then
	dim temp3[]
	temp3=empty
	last3=0
	dist3=(topPanelHeight-gs_fw_upper+gs_grid_w)/(gs_hor_gtp+1)
	for i=1 to gs_hor_gtp
		temp3[i]=last3+dist3
		last3=temp3[i]
	next i

	parameters gs_hor_dtp=temp3
	gs_hor_dtp=temp3
endif
gs_hor_gtp = min(gs_hor_gtp, vardim1(gs_hor_dtp))


if gs_ver_gnum>0 AND (GLOB_MODPAR_NAME="A" OR GLOB_MODPAR_NAME="divisionMethod" OR GLOB_MODPAR_NAME="iDivisionMethod"\
	OR GLOB_MODPAR_NAME="divWidthHor" OR GLOB_MODPAR_NAME="gs_unit_size"\
	OR GLOB_MODPAR_NAME="gs_SLight_w" OR GLOB_MODPAR_NAME="gs_bSLight" \
	OR GLOB_MODPAR_NAME="gs_SLight_w2" OR GLOB_MODPAR_NAME="gs_bSLight2" \
	OR GLOB_MODPAR_NAME="gs_ver_gnum" OR GLOB_MODPAR_NAME="leftCornerAngle"\
	OR GLOB_MODPAR_NAME="endFrameLeft" OR GLOB_MODPAR_NAME="endFrameRight" \
	OR GLOB_MODPAR_NAME="rightCornerAngle" OR GLOB_MODPAR_NAME="nHorDivision" OR GLOB_MODPAR_NAME="gs_frame_width"\
	OR rightCornerAngle = sps*2 OR leftCornerAngle = sps*2 \
	OR GLOB_MODPAR_NAME="gridWidthVert" OR GLOB_MODPAR_NAME="gs_stack_left" OR GLOB_MODPAR_NAME="gs_stack_right" \
	OR GLOB_MODPAR_NAME="gs_tolerance") then

	dim temp4[]
	temp4=empty
	last4=0
	dist4=(ac_unit_width-frameOrSLightWidthLeft-frameOrSLightWidthRight+gridWidthVert) / (gs_ver_gnum+1)

	for i=1 to gs_ver_gnum
		temp4[i]=last4+dist4
		last4=temp4[i]
	next i

	PARAMETERS gs_ver_d=temp4
	gs_ver_d=temp4
endif
gs_ver_gnum = min(gs_ver_gnum, vardim1(gs_ver_d))

!! END OF DINAMIC ARRAY !!

