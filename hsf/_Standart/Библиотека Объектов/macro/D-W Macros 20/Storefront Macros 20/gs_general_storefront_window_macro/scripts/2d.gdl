
! Contact person: <SzL, NJ>

if iTypeDemolitionFill = RENOVATION_FILL_DEMOLISHED then		! Demolition
	gs_symbLineType = gs_Demolition_linetype
else
	gs_symbLineType = 1
endif

line_type gs_symbLineType

glaa_dt = 0
glab_dt = 0
butt_gl_mask = 0

! =============================================================================
lod2D = 0										! Don't draw anything

! =============================================================================
! No wall contour at corners and joints
! =============================================================================

if iEndFrameLeft <> ENDFRAME_NORMAL then gs_stack_left  = 1
if iEndFrameRight <> ENDFRAME_NORMAL then gs_stack_right = 1

! =============================================================================
! GS Storefront Window Functions
! =============================================================================

call "GS Storefront Window Functions",
	parameters all	gs_wcont_line_out		= gs_wcont_line_out,
					gs_wcont_line_in		= gs_wcont_line_in,
					bEnableParapetInset			= bEnableParapetInset,
					bEnableMasonryArch			= bEnableMasonryArch,
					bEnableSill					= bEnableSill,
					bEnableBoard				= bEnableBoard,
					bEnableFaschen				= bEnableFaschen,
					bEnableThreshold			= bEnableThreshold,
					bEnableCasing				= bEnableCasing,
					bEnableShutter				= bEnableShutter,
					bEnableCustomCornerLeft		= bEnableCustomCornerLeft,
					bEnableCustomCornerRight	= bEnableCustomCornerRight,
				! --- Corner Functions
					bLeftCornerFunction	 	= gs_cl,
					leftCornerAngle		 	= leftCornerAngle,
					leftConnWallThk		 	= WALL_THICKNESS,
					bRightCornerFunction 	= gs_cr,
					rightCornerAngle	 	= rightCornerAngle,
					rightConnWallThk		= WALL_THICKNESS,
					gs_left_oversize		= gs_left_oversize - gs_cl * abs(gs_fthk*TAN(90-leftCornerAngle/2)),
					gs_right_oversize		= gs_right_oversize - gs_cr * abs(gs_fthk*TAN(90-rightCornerAngle/2)),
	returned_parameters	ac_unit_width,
						gs_frame_ovhg_left_out,
						gs_frame_ovhg_right_out,
						gs_frame_ovhg_left_in,
						gs_frame_ovhg_right_in,
						bMirrored,
						addPrmX, addPrmY,
						mulPrmX, mulPrmY,
						iLoD2D,
						bShowAddHotspots, bShowUnitHotspots

if iLoD2D = 0 then end

if iTypeDemolitionFill = RENOVATION_FILL_NEW & gs_bShowNewOnCC then end		! New

add2 addPrmX, addPrmY
mul2 mulPrmX, mulPrmY

if (gs_cl | gs_cr) & WIDO_REVEAL_SIDE then
	leftCornerAngle = 360 - leftCornerAngle
	rightCornerAngle = 360 - rightCornerAngle
endif


lod2D				= DET2D_FS_OFF

if iLoD2D = SYMBW_S_1LINE then			lod2D = DET2D_FS_SIMPLE_ONE 		! Simple - One Line --> INT 200
if iLoD2D = SYMBW_S_CENTERLINE then		lod2D = DET2D_FS_SIMPLE_ONE 		! Simple - Centerline --> SWE 200
if iLoD2D = SYMBW_S_2LINE_ACC then		lod2D = DET2D_FS_SIMPLE_TWO			! Simple - Two Lines
if iLoD2D = SYMBW_S_2LINE then			lod2D = DET2D_FS_SIMPLE_CHI			! Chinese Simple
if iLoD2D = SYMBW_M_2LINE_GLASS then	lod2D = DET2D_FS_MIDDLE				! Middle - without acc
if iLoD2D = SYMBW_M_2LINE_NOGLASS then	lod2D = DET2D_FS_SIMPLE_TWO			! Middle - with acc --> INT 100
if iLoD2D = SYMBW_M_FRAMESASH then		lod2D = DET2D_FS_DETAILED			! NLD Middle
if iLoD2D = SYMBW_D_SGLASS then			lod2D = DET2D_FS_DETAILED			! Detailed --> INT 50, DAN 20
if iLoD2D = SYMBW_D_REBATEONGLASS then	lod2D = DET2D_FS_DETAILED			! Detailed --> NLD Detailed
if iLoD2D = SYMBW_D_SGLASS then			lod2D = DET2D_FS_DETAILED			! Detailed --> INT 50, DAN 20
if iLoD2D = SYMBW_D_2GLASS then			lod2D = DET2D_FS_DETAILED			! Detailed --> 
if iLoD2D = SYMBW_D_2LINE_HS then		lod2D = DET2D_FS_DETAILED_CHI		! Chinese Detailed

if lod2D = DET2D_FS_MIDDLE then												! Middle 2
	gs_ver_gnum = 0 						
	gs_gsb		= gs_fthk / 2
endif

! =============================================================================

gs_fillFr	= gs_bFills * gs_fillFr
gs_gsect	= gs_bFills * gs_gsect

pen gs_pen_2D

if gs_wthk then
	if WIDO_REVEAL_SIDE then
		add2 0,WALL_THICKNESS - WIDO_FRAME_THICKNESS - WIDO_SILL
	else
		add2 0,WIDO_SILL
	endif
endif

! =============================================================================
! Simple (1:200) model and Contour Line
! =============================================================================
pen gs_pen_2D
line_type gs_symbLineType

lineLeftOut = ac_unit_width/2
lineRightOut = ac_unit_width/2
lineLeftIn = ac_unit_width/2
lineRightIn = ac_unit_width/2
leftFrameMod = gs_fthk/TAN(leftCornerAngle/2)
rightFrameMod = gs_fthk/TAN(rightCornerAngle/2)

if iEndFrameLeft = ENDFRAME_CORNER then
	if leftCornerAngle < 180 then
		lineLeftIn = ac_unit_width/2-leftFrameMod
	endif
	if leftCornerAngle > 180 then
		lineLeftOut = ac_unit_width/2+leftFrameMod
	endif
endif
if iEndFrameRight = ENDFRAME_CORNER then
	if rightCornerAngle < 180 then
		lineRightIn = ac_unit_width/2-rightFrameMod
	endif
	if rightCornerAngle > 180 then
		lineRightOut = ac_unit_width/2+rightFrameMod
	endif
endif

if lod2D = DET2D_FS_SIMPLE_ONE then
	line2 -lineLeftOut-gs_tolerance_left, 0, lineRightOut+gs_tolerance_right, 0
	end
else
	LINE2   -lineLeftOut, 0, lineRightOut, 0
	LINE2   -lineLeftIn, -gs_fthk, lineRightIn, -gs_fthk

	fill gs_fillShCover

	poly2_b 4, 2+4+64,gs_penShCov_fg,gs_penShCov_bg,
		lineRightOut,0,0,
		-lineLeftOut,0,0,
		-lineLeftIn,-gs_fthk,0,
		lineRightIn,-gs_fthk,0
endif

! =============================================================================
! Detailed (1:50, 1:100) model
! =============================================================================

if lod2D = DET2D_FS_SIMPLE_TWO then gs_gsb = 0		! 1:100

! =============================================================================
! Unit Hotspots
! =============================================================================
unID = 100

if bShowUnitHotspots then
	hotspot2 -ac_unit_width/2, 0,		UnID
	hotspot2 -ac_unit_width/2, -gs_fthk * (lod2D > DET2D_FS_SIMPLE_ONE & lod2D <> DET2D_FS_SIMPLE_CHI), UnID + 2

	hotspot2  ac_unit_width/2,  0,		UnID + 1
	hotspot2  ac_unit_width/2, -gs_fthk * (lod2D > DET2D_FS_SIMPLE_ONE & lod2D <> DET2D_FS_SIMPLE_CHI), UnID + 3
endif

! =============================================================================
! Hotspots
! =============================================================================

unID = 1
if lod2D = DET2D_FS_SIMPLE_TWO | lod2D = DET2D_FS_MIDDLE | lod2D = DET2D_FS_DETAILED then
	if iEndFrameLeft = ENDFRAME_CORNER then
		if leftCornerAngle < 180 then
			hotspot2 -ac_unit_width/2+leftFrameMod, -gs_fthk, unID : unID = unID + 1
		else
			unID = unID + 1
		endif
		if leftCornerAngle > 180 then
			hotspot2 -ac_unit_width/2-leftFrameMod, 0, unID : unID = unID + 1
		else
			unID = unID + 1
		endif
	endif

	if iEndFrameRight = ENDFRAME_CORNER then
		if rightCornerAngle < 180 then
			hotspot2 ac_unit_width/2-rightFrameMod, -gs_fthk, unID : unID = unID + 1
		else
			unID = unID + 1
		endif
		if rightCornerAngle > 180 then
			hotspot2 ac_unit_width/2+rightFrameMod, 0, unID : unID = unID + 1
		else
			unID = unID + 1
		endif
	endif

	! Vertical Grids ==============================================================

	if gs_full_edit=1 then
		if gs_bSLight then
			HOTSPOT2 -ac_unit_width/2,  0, unID, gs_SLight_w,1+128
			unID=unID+1
			HOTSPOT2 -ac_unit_width/2-1, 0, unID, gs_SLight_w,3
			unID=unID+1
			HOTSPOT2 -ac_unit_width/2+gs_SLight_w, 0, unID, gs_SLight_w,2
			unID=unID+1
		else
			unID = unID + 3
		endif

		if gs_bSLight2 then
			HOTSPOT2 ac_unit_width/2,  0, unID, gs_SLight_w2,1+128
			unID=unID+1
			HOTSPOT2 ac_unit_width/2+1, 0, unID, gs_SLight_w2,3
			unID=unID+1
			HOTSPOT2 ac_unit_width/2-gs_SLight_w2, 0, unID, gs_SLight_w2,2
			unID=unID+1
		else
			unID = unID + 3
		endif

		if gs_ver_gnum >0 & lod2D = DET2D_FS_DETAILED then		! 1:50
			for HK=1 to gs_ver_gnum
				ADD2  -ac_unit_width/2+frameOrSLightWidthLeft-gridWidthVert/2, 0
				HOTSPOT2 0,  0, unID, gs_ver_d[HK],1+128
				unID=unID+1
				HOTSPOT2 -1, 0, unID, gs_ver_d[HK],3
				unID=unID+1
				HOTSPOT2 gs_ver_d[HK], 0, unID, gs_ver_d[HK],2
				unID=unID+1
				DEL 1
			next HK
		else
			unID = unID + 3*gs_ver_gnum
		endif
	endif
endif


! =============================================================================
! Vertical Grids
! =============================================================================

fill gs_fillFr
pen gs_pen_mull
if gs_ver_gnum >0 AND lod2D = DET2D_FS_DETAILED then		! 1:50
	for HK=1 to gs_ver_gnum
		ADD2 gs_ver_d[HK], 0
			ADD2  -ac_unit_width/2+frameOrSLightWidthLeft-gridWidthVert/2, -(gs_gsb)*(iFrameStyleMullion = FRAME_STYLE_BUTT_GLAZED)
			Poly2_b 4, 1+2+4+32, gs_penFr_fg, gs_penFr_bg,
				-gridWidthVert/2, 0, 1+32,
				-gridWidthVert/2,-gridThkVert, 1+32,
				gridWidthVert/2,-gridThkVert, 1+32,
				gridWidthVert/2, 0, 1+32
			DEL 1
		DEL 1
	next HK
endif


! =============================================================================
! Frame
! =============================================================================
unitleft = -ac_unit_width / 2
unitright = ac_unit_width / 2

frameleftout	= unitleft  - gs_frame_ovhg_left_out
framerightout	= unitright + gs_frame_ovhg_right_out
frameleftin		= unitleft  - gs_frame_ovhg_left_in
framerightin	= unitright + gs_frame_ovhg_right_in

leftFrame = frameleftout
if abs(frameleftout) > abs(frameleftin) then
	leftFrame = frameleftin
endif
rightFrame = framerightout
if abs(framerightout) > abs(framerightin) then
	rightFrame = framerightin
endif

pen gs_pen_2D

if lod2D = DET2D_FS_DETAILED then
	if gs_tolerance_left  > 0 then
		line2 unitleft,  -(gs_gsb*(iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED)), unitleft,  -gs_fthk
	endif
	if gs_tolerance_right > 0 then
		line2 unitright, -(gs_gsb*(iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED)), unitright, -gs_fthk
	endif
endif

if gs_bSLight then
	POLY2_b 5, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
			-ac_unit_width/2+leftPanelWidth, 0, 1+32,
			-ac_unit_width/2+gs_frame_width+leftPanelWidth, 0, 1+32,
			-ac_unit_width/2+gs_frame_width+leftPanelWidth, -gs_fthk, 1+32,
			-ac_unit_width/2+leftPanelWidth, -gs_fthk, 1+32,
			-ac_unit_width/2+leftPanelWidth, 0, -1

	glaa=gs_fw_side_left
endif

if gs_bSLight2 then
	POLY2_b  5, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
			ac_unit_width/2-gs_frame_width-rightPanelWidth,	0,			1+32,
			ac_unit_width/2-rightPanelWidth,				0,			1+32,
			ac_unit_width/2-rightPanelWidth,				-gs_fthk,	1+32,
			ac_unit_width/2-gs_frame_width-rightPanelWidth,-gs_fthk,	1+32,
			ac_unit_width/2-gs_frame_width-rightPanelWidth,	0,			-1

	glab=-gs_fw_side_right
endif

if not(gs_cr) then
	POLY2_b   5, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
				ac_unit_width/2-gs_fw_side_right,	-gs_gsb*(iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED),	1+32,
				ac_unit_width/2,					-gs_gsb*(iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED),	not(gs_stack_right)+32,
				ac_unit_width/2,					-gs_fthk,												1+32,
				ac_unit_width/2-gs_fw_side_right,	-gs_fthk,												1+32,
				ac_unit_width/2-gs_fw_side_right,	-gs_gsb*(iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED),	-1

	if ( abs((ac_unit_width/2) - rightFrame) > EPS ) then
		POLY2_b   5, 1+4+32,gs_penFr_fg, gs_penFr_bg,
					ac_unit_width/2,	-gs_gsb*(iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED),	1+32,
					rightFrame,			-gs_gsb*(iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED),	not(gs_stack_right)+32,
					rightFrame,			-gs_fthk,												1+32,
					ac_unit_width/2,	-gs_fthk,												1+32,
					ac_unit_width/2,	-gs_gsb*(iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED),	-1
	endif

		glab=-gs_fw_side_right
endif

if not(gs_cl) then
	POLY2_b 5, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
				-ac_unit_width/2,					-gs_gsb*(iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED),	1+32,
				-ac_unit_width/2+gs_fw_side_left,	-gs_gsb*(iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED),	1+32,
				-ac_unit_width/2+gs_fw_side_left,	-gs_fthk,												1+32,
				-ac_unit_width/2,					-gs_fthk,												not(gs_stack_left)+32,
				-ac_unit_width/2,					-gs_gsb*(iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED),	-1

	if ( abs((-ac_unit_width/2) - leftFrame) > EPS ) then
		POLY2_b 5, 1+4+32,gs_penFr_fg, gs_penFr_bg,
					leftFrame,			-gs_gsb*(iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED),	1+32,
					-ac_unit_width/2,	-gs_gsb*(iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED),	1+32,
					-ac_unit_width/2,	-gs_fthk,												1+32,
					leftFrame,			-gs_fthk,												not(gs_stack_left)+32,
					leftFrame,			-gs_gsb*(iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED),	-1	
	endif
		glaa=gs_fw_side_left
endif

if gs_cr then
	if rightCornerAngle <180 then
		if iFrameStyleRight = FRAME_STYLE_VISIBLE_MULLIONS then
			POLY2_b  5, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
				ac_unit_width/2-gs_fw_side_right, 0,      1+32,
				ac_unit_width/2, 0,     0,
				ac_unit_width/2-gs_fthk*TAN(90-rightCornerAngle/2), -gs_fthk,      1+32,
				ac_unit_width/2-gs_fw_side_right,-gs_fthk,     1+32,
				ac_unit_width/2-gs_fw_side_right, 0,      -1
		endif

		if iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED then
			POLY2_b 5, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
				ac_unit_width/2-gs_gsb*TAN(90-rightCornerAngle/2), -gs_gsb,      1+32,
				ac_unit_width/2-(gs_frame_width/2)/SIN(rightCornerAngle/2)-gs_gsb*TAN(90-rightCornerAngle/2), -gs_gsb,     1+32,
				ac_unit_width/2-gs_fthk*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(rightCornerAngle/2), -gs_fthk,      1+32,
				ac_unit_width/2-gs_fthk*TAN(90-rightCornerAngle/2),-gs_fthk,      0,
				ac_unit_width/2-gs_gsb*TAN(90-rightCornerAngle/2), -gs_gsb,      -1

			glab=-(gs_frame_width/2)/SIN(rightCornerAngle/2)-gs_gsb*TAN(90-rightCornerAngle/2)
			glab_dt=-(gs_gsb)*TAN(90-rightCornerAngle/2)
		endif

		if iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED_WO_FRAME then
			glab=-gs_gsb*TAN(90-rightCornerAngle/2)
			glab_dt=-(gs_gsb)*TAN(90-rightCornerAngle/2)
		endif

		if iFrameStyleRight = FRAME_STYLE_ANGLE_FRAME then
			POLY2_b 6, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
				ac_unit_width/2, 0,      1+32,
				ac_unit_width/2-(gs_frame_width/2)/SIN(rightCornerAngle/2)-gs_gsb*TAN(90-rightCornerAngle/2), 0,     1+32,
				ac_unit_width/2-(gs_frame_width/2)/SIN(rightCornerAngle/2)-gs_gsb*TAN(90-rightCornerAngle/2), 0-gs_gsb,     1+32,
				ac_unit_width/2-gs_fthk*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(rightCornerAngle/2), -gs_fthk,      1+32,
				ac_unit_width/2-gs_fthk*TAN(90-rightCornerAngle/2),-gs_fthk,      0,
				ac_unit_width/2, 0,      -1

			glab=-(gs_frame_width/2)/SIN(rightCornerAngle/2)-gs_gsb*TAN(90-rightCornerAngle/2)
		endif
	endif

	if rightCornerAngle >180 then
		if iFrameStyleRight = FRAME_STYLE_VISIBLE_MULLIONS then
			POLY2_b   5, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
				ac_unit_width/2-gs_fw_side_right, 0,      1+32,
				ac_unit_width/2+gs_fthk*TAN(90-rightCornerAngle/2), 0,     0,
				ac_unit_width/2, -gs_fthk,      1+32,
				ac_unit_width/2-gs_fw_side_right,-gs_fthk,      1+32,
				ac_unit_width/2-gs_fw_side_right, 0,      -1
		endif

		if iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED then
			POLY2_b 5, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
				ac_unit_width/2+(gs_fthk-gs_gsb)*TAN(90-rightCornerAngle/2), -gs_gsb,      1+32,
				ac_unit_width/2+gs_fthk*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(180-rightCornerAngle/2)-gs_gsb*TAN(90-rightCornerAngle/2), -gs_gsb,     1+32,
				ac_unit_width/2-(gs_frame_width/2)/SIN(180-rightCornerAngle/2), -gs_fthk,      1+32,
				ac_unit_width/2, -gs_fthk,      0,
				ac_unit_width/2+(gs_fthk-gs_gsb)*TAN(90-rightCornerAngle/2), -gs_gsb,      -1

			glab=gs_fthk*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(180-rightCornerAngle/2)-gs_gsb*TAN(90-rightCornerAngle/2)
			glab_dt=(gs_fthk-gs_gsb)*TAN(90-rightCornerAngle/2)
		endif

		if iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED_WO_FRAME then
			glab=gs_fthk*TAN(90-rightCornerAngle/2)-gs_gsb*TAN(90-rightCornerAngle/2)
			glab_dt=(gs_fthk-gs_gsb)*TAN(90-rightCornerAngle/2)
		endif

		if iFrameStyleRight = FRAME_STYLE_ANGLE_FRAME then
			POLY2_b 6, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
				ac_unit_width/2+gs_fthk*TAN(90-rightCornerAngle/2), 0,      1+32,
				ac_unit_width/2+gs_fthk*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(180-rightCornerAngle/2)-gs_gsb*TAN(90-rightCornerAngle/2), 0,      1+32,
				ac_unit_width/2+gs_fthk*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(180-rightCornerAngle/2)-gs_gsb*TAN(90-rightCornerAngle/2), -gs_gsb,  1+32,
				ac_unit_width/2-(gs_frame_width/2)/SIN(180-rightCornerAngle/2), -gs_fthk,      1+32,
				ac_unit_width/2,-gs_fthk,      0,
				ac_unit_width/2+gs_fthk*TAN(90-rightCornerAngle/2), 0,      -1

			glab=gs_fthk*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(180-rightCornerAngle/2)-gs_gsb*TAN(90-rightCornerAngle/2)
		endif
	endif
endif

if gs_cl then
	if leftCornerAngle <180 then
		if iFrameStyleLeft = FRAME_STYLE_VISIBLE_MULLIONS then
			POLY2_b 5, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
				-ac_unit_width/2,					0, 1+32,
				-ac_unit_width/2+gs_fw_side_left,	0, 1+32,
				-ac_unit_width/2+gs_fw_side_left,	-gs_fthk, 1+32,
				-ac_unit_width/2+gs_fthk*TAN(90-leftCornerAngle/2), -gs_fthk, 0,
				-ac_unit_width/2,					0, -1
		endif

		if iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED then
			MUL2 -1,1
			POLY2_b 5, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
				ac_unit_width/2-gs_gsb*TAN(90-leftCornerAngle/2), -gs_gsb,      1+32,
				ac_unit_width/2-(gs_frame_width/2)/SIN(leftCornerAngle/2)-gs_gsb*TAN(90-leftCornerAngle/2), -gs_gsb,     1+32,
				ac_unit_width/2-gs_fthk*TAN(90-leftCornerAngle/2)-(gs_frame_width/2)/SIN(leftCornerAngle/2), -gs_fthk,      1+32,
				ac_unit_width/2-gs_fthk*TAN(90-leftCornerAngle/2),-gs_fthk,      0,
				ac_unit_width/2-gs_gsb*TAN(90-leftCornerAngle/2), -gs_gsb,      -1
			DEL 1
			glaa=(gs_frame_width/2)/SIN(leftCornerAngle/2)+gs_gsb*TAN(90-leftCornerAngle/2)
			glaa_dt=(gs_gsb)*TAN(90-leftCornerAngle/2)
		endif

		if iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED_WO_FRAME then
			glaa=gs_gsb*TAN(90-leftCornerAngle/2)
			glaa_dt=(gs_gsb)*TAN(90-leftCornerAngle/2)
		endif

		if iFrameStyleLeft = FRAME_STYLE_ANGLE_FRAME then
			MUL2 -1,1
			POLY2_b 6, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
				ac_unit_width/2, 0,      1+32,
				ac_unit_width/2-(gs_frame_width/2)/SIN(leftCornerAngle/2)-gs_gsb*TAN(90-leftCornerAngle/2), 0,     1+32,
				ac_unit_width/2-(gs_frame_width/2)/SIN(leftCornerAngle/2)-gs_gsb*TAN(90-leftCornerAngle/2), -gs_gsb,     1+32,
				ac_unit_width/2-gs_fthk*TAN(90-leftCornerAngle/2)-(gs_frame_width/2)/SIN(leftCornerAngle/2), -gs_fthk,      1+32,
				ac_unit_width/2-gs_fthk*TAN(90-leftCornerAngle/2),-gs_fthk,      0,
				ac_unit_width/2, 0,      -1

			DEL 1
			glaa=(gs_frame_width/2)/SIN(leftCornerAngle/2)+gs_gsb*TAN(90-leftCornerAngle/2)
		endif
	endif

	if leftCornerAngle >180 then
		if iFrameStyleLeft = FRAME_STYLE_VISIBLE_MULLIONS then
			POLY2_b 5, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
				-ac_unit_width/2+gs_fthk*TAN(90+leftCornerAngle/2), 0, 1+32,
				-ac_unit_width/2+gs_fw_side_left, 0, 1+32,
				-ac_unit_width/2+gs_fw_side_left, -gs_fthk, 1+32,
				-ac_unit_width/2, -gs_fthk, 0,
				-ac_unit_width/2+gs_fthk*TAN(90+leftCornerAngle/2), 0, -1
		endif

		if iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED then
			MUL2 -1,1
			POLY2_b 5, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
				ac_unit_width/2+(gs_fthk-gs_gsb)*TAN(90-leftCornerAngle/2), -gs_gsb,      1+32,
				ac_unit_width/2+gs_fthk*TAN(90-leftCornerAngle/2)-(gs_frame_width/2)/SIN(180-leftCornerAngle/2)-gs_gsb*TAN(90-leftCornerAngle/2), -gs_gsb,  1+32,
				ac_unit_width/2-(gs_frame_width/2)/SIN(180-leftCornerAngle/2), -gs_fthk,      1+32,
				ac_unit_width/2,-gs_fthk,      0,
				ac_unit_width/2+(gs_fthk-gs_gsb)*TAN(90-leftCornerAngle/2), -gs_gsb,      -1
			DEL 1

			glaa=-gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(180-leftCornerAngle/2)+gs_gsb*TAN(90-leftCornerAngle/2)
			glaa_dt=-(gs_fthk-gs_gsb)*TAN(90-leftCornerAngle/2)
		endif

		if iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED_WO_FRAME then
			glaa=-gs_fthk*TAN(90-leftCornerAngle/2)+gs_gsb*TAN(90-leftCornerAngle/2)
			glaa_dt=-(gs_fthk-gs_gsb)*TAN(90-leftCornerAngle/2)
		endif

		if iFrameStyleLeft = FRAME_STYLE_ANGLE_FRAME then
			MUL2 -1,1
			POLY2_b 6, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
				ac_unit_width/2+gs_fthk*TAN(90-leftCornerAngle/2), 0,      1+32,

				ac_unit_width/2+gs_fthk*TAN(90-leftCornerAngle/2)-(gs_frame_width/2)/SIN(180-leftCornerAngle/2)-gs_gsb*TAN(90-leftCornerAngle/2), 0,      1+32,
				ac_unit_width/2+gs_fthk*TAN(90-leftCornerAngle/2)-(gs_frame_width/2)/SIN(180-leftCornerAngle/2)-gs_gsb*TAN(90-leftCornerAngle/2), 0-gs_gsb, 1+32,
				ac_unit_width/2-(gs_frame_width/2)/SIN(180-leftCornerAngle/2), -gs_fthk,      1+32,
				ac_unit_width/2,-gs_fthk,      0,
				ac_unit_width/2+gs_fthk*TAN(90-leftCornerAngle/2), 0,      -1
			DEL 1

			glaa=-(gs_fthk*TAN(90-leftCornerAngle/2)-(gs_frame_width/2)/SIN(180-leftCornerAngle/2)-gs_gsb*TAN(90-leftCornerAngle/2))
		endif
	endif
endif

! =============================================================================
! Glass
! =============================================================================

fill gs_gsect
pen gs_pen_glass
line_type gs_symbLineType

if lod2D = DET2D_FS_MIDDLE | lod2D = DET2D_FS_DETAILED then			! Middle 2, 1:50
	if not(gs_bSLight) AND not(gs_bSLight2) then
		ADD2 0,-gs_gsb
		for HI=1 to gs_ver_gnum+1
			if HI=1 AND gs_ver_gnum=0 then hgnn=ac_unit_width-gs_fw_side_left-gs_fw_side_right
			if HI=1 AND gs_ver_gnum>0 then hgnn=gs_ver_d[1]-gridWidthVert
			if HI>1 AND HI<gs_ver_gnum+1 then hgnn=gs_ver_d[HI]-gs_ver_d[HI-1]-gridWidthVert
			if HI>1 AND HI=gs_ver_gnum+1 then hgnn=ac_unit_width-gs_fw_side_left-gs_fw_side_right-gs_ver_d[HI-1]

			ADD2 -ac_unit_width/2+gs_fw_side_left, 0

			LINE2	-(gs_fw_side_left-glaa)*(HI=1)*(iFrameStyleLeft <> FRAME_STYLE_VISIBLE_MULLIONS), 0,
					hgnn+(gs_fw_side_right+glab)*(HI=gs_ver_gnum+1)*(iFrameStyleRight <> FRAME_STYLE_VISIBLE_MULLIONS), 0
			DEL 1
			ADD2 hgnn+gridWidthVert,0
		next HI
		DEL gs_ver_gnum+1
		DEL 1
	endif

	if gs_bSLight AND not(gs_bSLight2) then
		ADD2 0,-gs_gsb
		for HI=1 to gs_ver_gnum+1
			if HI=1 AND gs_ver_gnum=0 then
				hgnn=ac_unit_width-frameOrSLightWidthRight-frameOrSLightWidthLeft
			endif
			if HI=1 AND gs_ver_gnum>0 then hgnn=gs_ver_d[1]-gridWidthVert
			if HI>1 AND HI<gs_ver_gnum+1 then hgnn=gs_ver_d[HI]-gs_ver_d[HI-1]-gridWidthVert
			if HI>1 AND HI=gs_ver_gnum+1 then
				hgnn = ( ac_unit_width-gs_ver_d[HI-1]-(leftPanelWidth+gs_frame_width)+glab*(gs_cr=1)-gs_frame_width*(gs_cr=0) )*(iFrameStyleRight <> FRAME_STYLE_VISIBLE_MULLIONS)+ \
					   ( ac_unit_width-gs_ver_d[HI-1]-(leftPanelWidth+gs_frame_width)-gs_fw_side_right*(gs_cr=1)-gs_frame_width*(gs_cr=0) )*(iFrameStyleRight = FRAME_STYLE_VISIBLE_MULLIONS)
			endif
			ADD2 -ac_unit_width/2+leftPanelWidth+gs_frame_width, 0
			LINE2	0, 0,hgnn, 0
			DEL 1

			ADD2 hgnn+gridWidthVert,0
		next HI
		DEL gs_ver_gnum+1

		ADD2 -ac_unit_width/2, 0
		LINE2	glaa,0,leftPanelWidth, 0
		DEL 1
		DEL 1
	endif

	if gs_bSLight2 AND not(gs_bSLight) then
		ADD2 0,-gs_gsb
		for HI=1 to gs_ver_gnum+1
			if HI=1 AND gs_ver_gnum=0 then
				hgnn=ac_unit_width-frameOrSLightWidthLeft-frameOrSLightWidthRight
			endif
			if HI=1 AND gs_ver_gnum>0 then hgnn=gs_ver_d[1]-gridWidthVert
			if HI>1 AND HI<gs_ver_gnum+1 then hgnn=gs_ver_d[HI]-gs_ver_d[HI-1]-gridWidthVert
			if HI>1 AND HI=gs_ver_gnum+1 then
				hgnn=ac_unit_width-frameOrSLightWidthLeft-frameOrSLightWidthRight-gs_ver_d[HI-1]
			endif
			ADD2 -ac_unit_width/2+gs_fw_side_left, 0
			LINE2	-(gs_fw_side_left-glaa)*(HI=1)*(iFrameStyleLeft <> FRAME_STYLE_VISIBLE_MULLIONS), 0,hgnn, 0
			DEL 1

			ADD2 hgnn+gridWidthVert,0
		next HI
		DEL gs_ver_gnum+1

		ADD2 ac_unit_width/2-rightPanelWidth, 0
		LINE2	rightPanelWidth+glab, 0, 0,0
		DEL 1
		DEL 1
	endif

	if gs_bSLight2 AND gs_bSLight then
		ADD2 0,-gs_gsb
		for HI=1 to gs_ver_gnum+1
			if HI=1 AND gs_ver_gnum=0 then
				hgnn=ac_unit_width-frameOrSLightWidthLeft-frameOrSLightWidthRight
			endif
			if HI=1 AND gs_ver_gnum>0 then hgnn=gs_ver_d[1]- gridWidthVert
			if HI>1 AND HI<gs_ver_gnum+1 then hgnn=gs_ver_d[HI]- gs_ver_d[HI-1]- gridWidthVert
			if HI>1 AND HI=gs_ver_gnum+1 then
				hgnn=ac_unit_width-frameOrSLightWidthLeft-frameOrSLightWidthRight-gs_ver_d[HI-1]
			endif
			ADD2 -ac_unit_width/2+leftPanelWidth+gs_frame_width, 0
			LINE2	0, 0,hgnn, 0
			DEL 1

			ADD2 hgnn+gridWidthVert,0
		next HI
		DEL gs_ver_gnum+1

		ADD2 -ac_unit_width/2, 0
		LINE2	glaa, 0,leftPanelWidth, 0
		DEL 1

		ADD2 ac_unit_width/2-rightPanelWidth, 0
		LINE2	rightPanelWidth+glab, 0,0, 0
		DEL 1
		DEL 1
	endif
endif
