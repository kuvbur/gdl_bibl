
if gs_detlevel_3D_m = 0 then end

if NOT(gs_shadow) then shadow off

if ABS(completeTable_unID - 1) < EPS then
	unID = 200
else
	unID = completeTable_unID
endif

! ======================================================================
! TableTop
! ======================================================================

call "tableTops_m" parameters all	tableTopAngle		= tableTopAngle,
									tableTops_unID		= unID,
									returned_parameters tableTops_unID
unID = tableTops_unID



! ======================================================================
! Chair
! ======================================================================

if (bPartOfLayout or bPartOfWsSolo) and bChair then
	add deskChairOrigPosX, deskChairOrigPosY, 0

	if NOT(bCalledAsExtension) then
		add tableChairDistX * (iTableTopType = TTOP_STRAIGHT) + xPosDeskChair * (iTableTopType = TTOP_L_SHAPED), tableChairDistY, 0
	else
		add extraDeskChairDistX, extraDeskChairDistY, 0
	endif
	rotz -chairAngle
	add -chairWidth / 2, -chairDepth / 2, 0
	call "officeChair_m" parameters all	a						= chairWidth,
										b						= chairDepth,
										zzyzx					= chairHeight,
										bPartOfLayout			= 1,
										gs_back_mat2			= gs_frame_mat,
										gs_back_mat				= gs_seat_mat,
										gs_arm_mat				= gs_frame_mat,
										gs_headrest_mat			= gs_seat_mat,
										gs_legCylind_mat		= gs_frame_mat,
										gs_legStar_mat			= gs_frame_mat,
										rollmat					= gs_frame_mat,
										gs_resol				= gs_leg_resol,
										officeChair_unID		= unID,
										returned_parameters officeChair_unID
	unID = officeChair_unID
	del 3

	if bEnableChairHsEditing then
		if NOT(bCalledAsExtension) then
			if iTableTopType = TTOP_L_SHAPED then
				hotspot 0, tableChairDistY, 0, unID, xPosDeskChair, 1 + 128, tableChairDistX:		unID = unID + 1
				hotspot -1, tableChairDistY, 0, unID, xPosDeskChair, 3 + 128, tableChairDistX:		unID = unID + 1
				hotspot xPosDeskChair, tableChairDistY, 0, unID, xPosDeskChair, 2, tableChairDistX:	unID = unID + 1

				hotspot xPosDeskChair, 0, 0, unID, tableChairDistY, 1 + 128:						unID = unID + 1
				hotspot xPosDeskChair, -1, 0, unID, tableChairDistY, 3 + 128:						unID = unID + 1
				hotspot xPosDeskChair, tableChairDistY, 0, unID, tableChairDistY, 2:				unID = unID + 1
			endif
			if iTableTopType = TTOP_STRAIGHT then
				hotspot 0, tableChairDistY, 0, unID, tableChairDistX, 1 + 128:			unID = unID + 1
				hotspot -1, tableChairDistY, 0, unID, tableChairDistX, 3 + 128:			unID = unID + 1
				hotspot tableChairDistX, tableChairDistY, 0, unID, tableChairDistX, 2:	unID = unID + 1

				hotspot tableChairDistX, 0, 0, unID, tableChairDistY, 1 + 128:			unID = unID + 1
				hotspot tableChairDistX, -1, 0, unID, tableChairDistY, 3 + 128:			unID = unID + 1
				hotspot tableChairDistX, tableChairDistY, 0, unID, tableChairDistY, 2:	unID = unID + 1
			endif
		else
			hotspot extraDeskChairDistX, 0, 0, unID, extraDeskChairDistY, 1 + 128:				unID = unID + 1
			hotspot extraDeskChairDistX, -1, 0, unID, extraDeskChairDistY, 3 + 128:				unID = unID + 1
			hotspot extraDeskChairDistX, extraDeskChairDistY, 0, unID, extraDeskChairDistY, 2:	unID = unID + 1
		endif
	endif

	del 1
endif



! ======================================================================
! Computer
! ======================================================================

if (bPartOfLayout or bPartOfWsSolo) and bComputer and NOT(bCalledAsExtension) then
	add computerOrigPosX, computerOrigPosY, zzyzx
	rotz -chairAngle + 180
	mulx 1 - 2 * (SYMB_MIRRORED)
	mulx 1 - 2 * (bMirroredComputer)

	if bShowKeyboard then
		add -0.47 / 2, 0, 0
		call "keyboard_m" parameters all	a					= 0.47,
											b					= 0.17,
											zzyzx				= 0.02,
											gs_detlevel_2D_m	= 1,
											bButtonText			= 0
		del 1
	endif

	if bShowMonitor then
		add -0.4 / 2, 0.17 + 0.05, 0
		call "lcdMonitor_m" parameters all	a					= 0.4,
											b					= 0.13,
											zzyzx				= 0.35,
											gs_resol			= gs_leg_resol,
											bPartOfLayout		= 1,
											iMonitorType		= 1,
											pic					= 0
		del 1
	endif

	del 4
endif



! ======================================================================
! Legs
! ======================================================================

bFullPanel = 0		! Full panel for type 5

if gs_leg_type_m = 1 then
	legDistFromEdge = 0.06
	leg_a = 0.025
	leg_h = zzyzx - topThk - 0.01
endif
if gs_leg_type_m = 2 then
	legDistFromEdge = 0.06
	leg_a = 0.04
	leg_h = zzyzx - topThk - 0.01
endif
if gs_leg_type_m = 3 then
	legDistFromEdge = 0.035 + 0.06
	leg_h = zzyzx - topThk - 0.09
endif
if gs_leg_type_m = 4 then
	legDistFromEdge = 0.06
	leg_h = zzyzx - topThk
endif
if gs_leg_type_m = 5 then
	legDistFromEdge = 0.015
	leg_h = zzyzx - topThk
endif
if gs_leg_type_m = 6 then
	legDistFromEdge = 0.025
	leg_h = zzyzx - topThk
endif

leg_b = 0.04 * (gs_leg_type_m = 2)

if iTableTopType = TTOP_L_SHAPED then gosub "legsForLShapedDesk"
if iTableTopType = TTOP_STRAIGHT then gosub "legsForStraightDesk"



! ======================================================================
! Front Panel
! ======================================================================

frontPanelThk = 0.02
if iTableTopType = TTOP_L_SHAPED then
	frontPanelLengthDiffMod = TAN(tableTopAngle / 2)
else
	frontPanelLengthDiffMod = 1
endif

if gs_leg_type_m = 1 then
	frontPanelLengthDiffLeft = leg_a + legDistFromEdge / frontPanelLengthDiffMod
	frontPanelLengthDiffRight = leg_a + legDistFromEdge
	fronPanelPos = 0.06 - frontPanelThk / 2
endif
if gs_leg_type_m = 2 then
	frontPanelLengthDiffLeft = leg_a / 2 + legDistFromEdge / frontPanelLengthDiffMod
	frontPanelLengthDiffRight = leg_a / 2 + legDistFromEdge
	fronPanelPos = 0.06 - frontPanelThk / 2
endif
if gs_leg_type_m = 3 then
	frontPanelLengthDiffLeft = 0.06 / frontPanelLengthDiffMod
	frontPanelLengthDiffRight = 0.06
	fronPanelPos = 0.05 - frontPanelThk
endif
if gs_leg_type_m = 4 then
	frontPanelLengthDiffLeft = 0.045 / frontPanelLengthDiffMod
	frontPanelLengthDiffRight = 0.045
	fronPanelPos = 0.08
endif
if gs_leg_type_m = 5 then
	frontPanelLengthDiffLeft = 0.03 / frontPanelLengthDiffMod
	frontPanelLengthDiffRight = 0.03
	fronPanelPos = 0.005
endif
if gs_leg_type_m = 6 then
	frontPanelLengthDiffLeft = 0.05 / frontPanelLengthDiffMod
	frontPanelLengthDiffRight = 0.05
	fronPanelPos = 0.005
endif

if gs_bFrontPanel then
	cabinetDiff = (gs_officeCab_width - frontPanelLengthDiffRight) * bOfficeCab1 * NOT(bMirroredCabPos)
	cabinetDiff2 = (gs_officeCab_width_2 - frontPanelLengthDiffLeft) * bOfficeCab2

	material gs_frontPanel_mat
	add -tableLength1 / 2 * bCalledAsExtension, fronPanelPos, gs_frontPanelTop - gs_frontPanelHeight
	prism_ 5, gs_frontPanelHeight,
		frontPanelLengthDiffLeft + cabinetDiff2, 0, 15,
		tableLength1 - frontPanelLengthDiffRight - cabinetDiff, 0, 15,
		tableLength1 - frontPanelLengthDiffRight - cabinetDiff, frontPanelThk, 15,
		frontPanelLengthDiffLeft + cabinetDiff2, frontPanelThk, 15,
		frontPanelLengthDiffLeft + cabinetDiff2, 0, -1
	del 1
endif



! -----------------------------------------------------------------------------
! Office Cabinet
! -----------------------------------------------------------------------------

if (bOfficeCab1 or bOfficeCab2) then gosub "officeCabinet"

! ======================================================================
completeTable_unID = unID
end completeTable_unID
! ======================================================================



"legsForLShapedDesk":
	if gs_leg_type_m = 1 or gs_leg_type_m = 2 then
		rotz tableTopAngle - 90
		add legDistFromEdge, legDistFromEdge / TAN(tableTopAngle / 2), 0
		gosub "leg"
		del 2

		add tableLength1 - legDistFromEdge, legDistFromEdge, 0
		if (NOT(gs_bOfficeCab) and NOT(bMirroredCabPos)) or bMirroredCabPos then gosub "leg"
		addy tableDepth1 - legDistFromEdge * 2
		if (NOT(gs_bOfficeCab) and NOT(bMirroredCabPos)) or bMirroredCabPos then gosub "leg"
		del 2

		rotz tableTopAngle
		add tableLength2 - legDistFromEdge, -legDistFromEdge, 0
		if (NOT(gs_bOfficeCab) and (bMirroredCabPos)) or NOT(bMirroredCabPos) then gosub "leg"
		addy -tableDepth2 + legDistFromEdge * 2
		if (NOT(gs_bOfficeCab) and (bMirroredCabPos)) or NOT(bMirroredCabPos) then gosub "leg"
		del 3
	endif
	if gs_leg_type_m = 3 then
		leg_a = max(0.25, (tableDepth1 - 0.1) / COS(tableTopAngle - 90))
		rotz tableTopAngle - 90
		add legDistFromEdge, tableDepth1 / 2 / COS(tableTopAngle - 90) - legDistFromEdge * TAN(tableTopAngle - 90), 0
		gosub "leg"
		del 2

		leg_a = max(0.25, tableDepth1 - 0.1)
		add tableLength1 - legDistFromEdge, tableDepth1 / 2, 0
		if (NOT(gs_bOfficeCab) and NOT(bMirroredCabPos)) or bMirroredCabPos then gosub "leg"
		del 1

		leg_a = max(0.25, tableDepth2 - 0.1)
		rotz tableTopAngle
		add tableLength2 - legDistFromEdge, -tableDepth2 / 2, 0
		if (NOT(gs_bOfficeCab) and (bMirroredCabPos)) or NOT(bMirroredCabPos) then gosub "leg"
		del 2
	endif
	if gs_leg_type_m = 4 then
		leg_a = (tableDepth1 - 0.2) / COS(tableTopAngle - 90)
		rotz tableTopAngle - 90
		add legDistFromEdge, tableDepth1 / 2 / COS(tableTopAngle - 90) - legDistFromEdge * TAN(tableTopAngle - 90), 0
		gosub "leg"
		del 2

		leg_a = tableDepth1 - 0.2
		add tableLength1 - legDistFromEdge, tableDepth1 / 2, 0
		if (NOT(gs_bOfficeCab) and NOT(bMirroredCabPos)) or bMirroredCabPos then gosub "leg"
		del 1

		leg_a = max(0.05, tableDepth2-0.2)
		rotz tableTopAngle
		add tableLength2 - legDistFromEdge, -tableDepth2 / 2, 0
		if (NOT(gs_bOfficeCab) and (bMirroredCabPos)) or NOT(bMirroredCabPos) then gosub "leg"
		del 2
	endif
	if gs_leg_type_m = 5 then
		leg_a = tableDepth1 / COS(tableTopAngle - 90)
		rotz tableTopAngle - 90
		add legDistFromEdge, leg_a / 2, 0
		gosub "leg"
		del 2

		leg_a = tableDepth1
		add tableLength1 - legDistFromEdge, leg_a / 2, 0
		if (NOT(gs_bOfficeCab) and NOT(bMirroredCabPos)) or bMirroredCabPos then gosub "leg"
		del 1

		leg_a = tableDepth2
		bFullPanel = 1
		rotz tableTopAngle
		add tableLength2 - legDistFromEdge, -leg_a / 2, 0
		if (NOT(gs_bOfficeCab) and (bMirroredCabPos)) or NOT(bMirroredCabPos) then gosub "leg"
		del 2
	endif
	if gs_leg_type_m = 6 then
		leg_a = tableDepth1 / COS(tableTopAngle - 90)
		rotz tableTopAngle - 90
		add legDistFromEdge, leg_a / 2, 0
		gosub "leg"
		del 2

		leg_a = tableDepth1
		add tableLength1 - legDistFromEdge, leg_a / 2, 0
		if (NOT(gs_bOfficeCab) and NOT(bMirroredCabPos)) or bMirroredCabPos then gosub "leg"
		del 1

		leg_a = tableDepth2
		rotz tableTopAngle
		add tableLength2 - legDistFromEdge, -leg_a / 2, 0
		if (NOT(gs_bOfficeCab) and (bMirroredCabPos)) or NOT(bMirroredCabPos) then gosub "leg"
		del 2
	endif

return

"legsForStraightDesk":
	if gs_leg_type_m = 3 then leg_a = max(0.25, tableDepth1 - 0.1)
	if gs_leg_type_m = 4 then leg_a = tableDepth1 - 0.2
	if gs_leg_type_m = 5 then leg_a = tableDepth1
	if gs_leg_type_m = 6 then leg_a = tableDepth1

	if gs_leg_type_m < 3 then
		legYpos = legDistFromEdge
	else
		legYpos = tableDepth1 / 2
	endif
	add legDistFromEdge + (tableLength1 - legDistFromEdge * 2) * bOfficeCab2 - tableLength1 / 2 * bCalledAsExtension, legYpos, 0
	for legHor = 1 to NOT(bOfficeCab2) + NOT(bOfficeCab1)
		for legVer = 1 to 1 + (gs_leg_type_m < 3)
			gosub "leg"
		addy tableDepth1 - legDistFromEdge * 2
		next legVer
		del 1 + (gs_leg_type_m < 3)
	addx tableLength1 - legDistFromEdge * 2
	next legHor
	del NOT(bOfficeCab2) + NOT(bOfficeCab1)
	del 1
return

"officeCabinet":
	if (iTableTopType = TTOP_L_SHAPED and bMirroredCabPos) then
		add tableDepth2 - 0.015, tableLength2 - cabWidth1, 0
		rotz 90
		call "OfficeCabinet01_m" parameters all	a		= cabWidth1,
									b					= tableDepth2 - 0.015,
									gs_resol			= gs_leg_resol,
									bPartOfLayout		= 1,
									bTopCover			= 0,
									drawer2d			= 0,
									iCabIndex			= 1,
									gs_knobHorPos		= gs_knobHorPos,
									bKnobNoneType		= bKnobNoneType,
									officeCab01_unID	= unID,
									returned_parameters officeCab01_unID
		unID = officeCab01_unID
		del 2
	else
		add -tableLength1 / 2 * bCalledAsExtension, 0, 0

		for ii = 1 + NOT(bOfficeCab1) to 1 + bOfficeCab2
			add tableLength1 * (ii = 1) + cabWidth2 * (ii = 2), tableDepth1 - 0.015, 0
			rotz 180
			if NOT(bPartOfLayout or bPartOfWsSolo) then
				call "OfficeCabinet01_m" parameters all	a		= cabWidth1 * (ii = 1) + cabWidth2 * (ii = 2),
											b					= tableDepth1 - 0.015,
											gs_resol			= gs_leg_resol,
											bPartOfLayout		= 0,
											bTopCover			= 0,
											drawer2d			= 0,
											iCabIndex			= ii,
											bKnobNoneType		= bKnobNoneType,
											officeCab01_unID	= unID,
											returned_parameters officeCab01_unID
				unID = officeCab01_unID
			else
				call "OfficeCabinet01_m" parameters all	a		= cabWidth1 * (ii = 1) + cabWidth2 * (ii = 2),
											b					= tableDepth1 - 0.015,
											gs_resol			= gs_leg_resol,
											bPartOfLayout		= 1,
											bTopCover			= 0,
											drawer2d			= 0,
											iCabIndex			= ii,
											gs_knobHorPos		= gs_knobHorPos,
											drawer_num_2		= drawer_num,
											drawerThk2			= drawerThk,
											gs_drawerScheme_2	= gs_drawerScheme,
											gs_drawerScheme_m_2	= gs_drawerScheme_m,
											gs_topDrawerH_2		= gs_topDrawerH,
											gs_bottomDrawerH_2	= gs_bottomDrawerH,
											gs_drawerH_1_2		= gs_drawerH_1,
											gs_drawerH_2_2		= gs_drawerH_1,
											gs_drawerH_3_2		= gs_drawerH_1,
											gs_drawerH_4_2		= gs_drawerH_1,
											gs_drawerH_5_2		= gs_drawerH_1,
											gs_drawerH_6_2		= gs_drawerH_1,
											gs_drawerHeights_2	= gs_drawerHeights,
											gs_knobHorPos_2		= gs_knobHorPos,
											bKnobNoneType		= bKnobNoneType,
											officeCab01_unID	= unID,
											returned_parameters officeCab01_unID
				unID = officeCab01_unID
			endif

			del 2
		next ii

		del 1
	endif
return

"leg":
	call "fa_desklegtyp" parameters	all a			= leg_a,
										b			= leg_b,
										leg_h		= leg_h,
										gs_resol	= gs_leg_resol,
										bFullPanel	= bFullPanel
return

1000:
	roty 90
	gosub 5000
	del 1
return

5000:
	vert 0, 0, 0
	vert 1, 0, 0
	vert 0, 1, 0
	vert 0, 0, 1
	coor 2, -1, -2, -3, -4
	base
	body -1
return

