
! ==============================================================================
! fa_basin_builtin
! ==============================================================================


! ==========================================================================
! Scale
! ==========================================================================

call "2dDetailLevel" parameters gs_detlevel_2D_m = gs_detlevel_2D_m,
				returned_parameters gs_detlevel_2D_m

pen gs_cont_pen
fill gs_fill_type

unID = 100

hotspot2 0, b, unID: unID=unID+1
hotspot2 a/2, b, unID: unID=unID+1


! ==============================================================================
! Sink Streching/ 3D Hotspot Editing
! ==============================================================================

if iBasinType = BASIN_BUILTIN | iBasinType = BASIN_CABINET then
	ADD2 temp_aa,temp_bb
	HOTSPOT2 0,        0,unID,sink_dist,1+128 :unID=unID+1
	HOTSPOT2 sink_dist,0,unID,sink_dist,2 :unID=unID+1
	HOTSPOT2 -1,       0,unID,sink_dist,3 :unID=unID+1
	DEL 1
else
	for hi = 1 to nSink
		add2 sinkDistL + sink_width/2 + (hi - 1) * (sink_width + sinkSpacing), B/2
		hotspot2 0,       			yBasinPos, unID, sinkPos[hi][1], 1+128 : unID=unID+1
		hotspot2 sinkPos[hi][1],	yBasinPos, unID, sinkPos[hi][1], 2 : unID=unID+1
		hotspot2 -1,      			yBasinPos, unID, sinkPos[hi][1], 3 : unID=unID+1

		hotspot2 sinkPos[hi][1], 0, 		unID, yBasinPos, 1+128 : unID=unID+1
		hotspot2 sinkPos[hi][1], yBasinPos, unID, yBasinPos, 2 : unID=unID+1
		hotspot2 sinkPos[hi][1], -1, 		unID, yBasinPos, 3 : unID=unID+1
		del 1
	next hi
endif



! ==============================================================================
! Fill
! ==============================================================================

drawindex 10

poly2_b 4, 2+4+64, gs_fill_pen, gs_back_pen,
		0, 0, 1,
		A, 0, 1,
		A, B, 1,
		0, B, 1

hotline2 0, 0, A, 0
hotline2 A, 0, A, B
hotline2 0, B, A, B
hotline2 0, 0, 0, B


! ==============================================================================
! Symbol / Cabinet
! ==============================================================================

drawindex 20

d = 0
if side_vis2D_m = 1 then
	if bSideSplashL & not(bSideSplashR) then d = 1
	if not(bSideSplashL) & bSideSplashR then d = 2
	if bSideSplashL & bSideSplashR then d = 3
endif
if side_vis2D_m = 2 then
	if bSideSplashR then d = 3 else d = 1
endif
if side_vis2D_m = 3 then
	if bSideSplashL then d = 3 else d = 2
endif
if side_vis2D_m = 4 then d = 3

line2 0, 0, A, 0
line2 0, B, A, B
if d = 2 or d = 3 then
	line2 A, 0, A, B
endif
if d = 1 or d = 3 then
	line2 0, 0, 0, B
endif
if bs_h > 0 and gs_detlevel_2D_m > 1 and not(dob_face) & bBackSplash then
	line2 backSplashThk * bSideSplashL, B - backSplashThk, A - backSplashThk * bSideSplashR, B - backSplashThk
endif
if bs_h > 0 and gs_detlevel_2D_m > 1 & bSideSplashL then
	line2 backSplashThk, B - backSplashThk, backSplashThk, 0
endif
if bs_h > 0 and gs_detlevel_2D_m > 1 & bSideSplashR then
	line2 A - backSplashThk, B - backSplashThk, A - backSplashThk, 0
endif


! ==============================================================================
! Sink Frame
! ==============================================================================

for hi = 1 to nSink
	if iBasinType = BASIN_BUILTIN | iBasinType = BASIN_CABINET then
		add2 sink_dist + temp_aa, temp_bb
	else
		add2 sinkDistL + sink_width/2 + (hi - 1) * (sink_width + sinkSpacing) + sinkPos[hi][1], B/2 + yBasinPos
	endif

	if gs_sink_type_m <> BASIN_BUILTIN_RECT then
		mul2 sink_width / sink_depth, 1
		if gs_detlevel_2D_m > 1  & not(bUnderMounted) then
			circle2 0, 0, sink_depth/2 + sinkFlangeWidth
		endif
		circle2 0, 0, sink_depth/2

		hotarc2 0, 0, sink_depth/2, 0, 180
		hotarc2 0, 0, sink_depth/2, 180, 360
		del 1
	else
		rect2 -sink_width/2, -sink_depth/2, sink_width/2, sink_depth/2
		hotline2 -sink_width/2, -sink_depth/2, sink_width/2, -sink_depth/2
		hotline2 -sink_width/2,  sink_depth/2, sink_width/2,  sink_depth/2
		hotline2 -sink_width/2, -sink_depth/2, -sink_width/2, sink_depth/2
		hotline2  sink_width/2, -sink_depth/2, sink_width/2, sink_depth/2
		if gs_detlevel_2D_m > 1 & not(bUnderMounted) then rect2 -sink_width/2 - sinkFlangeWidth, -sink_depth/2 - sinkFlangeWidth, sink_width/2 + sinkFlangeWidth, sink_depth/2 + sinkFlangeWidth
	endif

	if gs_detlevel_2D_m > 2 then
		sinkDepthMod = sink_depth - 0.002 * not(bUnderMounted)
		add2 0,(sinkDepthMod/2 - sinkDepthMod/2 * (0.9 * 0.79 * 0.63))
		circle2 0, 0, 0.03
		del 1
	endif
	del 1
next hi


! ==============================================================================
! Taps
! ==============================================================================

if gs_tap_type_m <> 0 and (gs_detlevel_2D_m = 2 or gs_detlevel_2D_m = 3) then
	drawindex 30

	for hi = 1 to nSink
		if bWallMountedTap then
			if iBasinType = BASIN_BUILTIN | iBasinType = BASIN_CABINET then
				add2 sink_dist + temp_aa, B
				bEnableTapEdit = 1
			else
				add2 sinkDistL + sink_width/2 + (hi - 1) * (sink_width + sinkSpacing) + sinkPos[hi][1], B
				hotspot2 0,       		tapPos[hi][2], unID, tapPos[hi][1], 1+128 : unID=unID+1
				hotspot2 tapPos[hi][1],	tapPos[hi][2], unID, tapPos[hi][1], 2 : unID=unID+1
				hotspot2 -1,      		tapPos[hi][2], unID, tapPos[hi][1], 3 : unID=unID+1

				hotspot2 tapPos[hi][1], 0, 				unID, tapPos[hi][2], 1+128 : unID=unID+1
				hotspot2 tapPos[hi][1], tapPos[hi][2],	unID, tapPos[hi][2], 2 : unID=unID+1
				hotspot2 tapPos[hi][1], -1, 			unID, tapPos[hi][2], 3 : unID=unID+1
				del 1

				add2 sinkDistL + sink_width/2 + (hi - 1) * (sink_width + sinkSpacing) + sinkPos[hi][1] + tapPos[hi][1], B
				bEnableTapedit = 0
			endif

			call "tapType_m" parameters all bShower 			= 0,
											bEnableTapEdit		= bEnableTapEdit,
											bSinkTap			= 0

			del 1
		else
			if iBasinType = BASIN_BUILTIN | iBasinType = BASIN_CABINET then
				add2 sink_dist + temp_aa, temp_bb + 0.23 + yBasinPos
				bEnableTapEdit = 1
			else
				add2 sinkDistL + sink_width/2 + (hi - 1) * (sink_width + sinkSpacing) + sinkPos[hi][1], B/2 + sink_depth/2 + 0.04 + yBasinPos
				hotspot2 0,       		tapPos[hi][2], unID, tapPos[hi][1], 1+128 : unID=unID+1
				hotspot2 tapPos[hi][1],	tapPos[hi][2], unID, tapPos[hi][1], 2 : unID=unID+1
				hotspot2 -1,      		tapPos[hi][2], unID, tapPos[hi][1], 3 : unID=unID+1

				hotspot2 tapPos[hi][1], 0, 				unID, tapPos[hi][2], 1+128 : unID=unID+1
				hotspot2 tapPos[hi][1], tapPos[hi][2],	unID, tapPos[hi][2], 2 : unID=unID+1
				hotspot2 tapPos[hi][1], -1, 			unID, tapPos[hi][2], 3 : unID=unID+1
				del 1

				add2 sinkDistL + sink_width/2 + (hi - 1) * (sink_width + sinkSpacing) + sinkPos[hi][1] + tapPos[hi][1], B/2 + sink_depth/2 + 0.04 + yBasinPos + tapPos[hi][2]
				bEnableTapedit = 0
			endif

			call "tapType_m" parameters all bShower 			= 0,
											bEnableTapEdit		= bEnableTapEdit,
											bSinkTap			= 0,
											GS_HotspotUnIDBegin = 10000 + hi - 1

			del 1
		endif
	next hi
endif

end
