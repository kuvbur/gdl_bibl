
!!!values "iBedType" 1, 2


if GLOB_MODPAR_NAME = "stBedType" then
	iBedType = 1
	if stBedType = stBedTypes[2] then iBedType = 2
	parameters iBedType = iBedType
else
	stBedType = stBedTypes[1]
	if iBedType = 2 then stBedType = stBedTypes[2]
	parameters stBedType = stBedType
endif

if bDoubleBed then
	minBedWidth = 0.8
else
	minBedWidth = 0.4
endif
minBedLength = 1.2

VALUES "stBedType" stBedTypes
VALUES "iBedType" 1, 2

values "styp" stSymbolTypes		! Type 1, Type 2, Type 3, Type 4
values "iSymbolType" 1, 2, 3, 4

if GLOB_MODPAR_NAME = "styp" then	! 2D Symbol Type
	iSymbolType = 1
	for i = 2 to vardim1(stSymbolTypes)
		if styp = stSymbolTypes[i] then iSymbolType = i
	next i
	parameters iSymbolType = iSymbolType
else
	styp = stSymbolTypes[max(1, min(iSymbolType, vardim1(stSymbolTypes)) )]
	parameters styp = styp
endif

if not (bCalledAsMacro) then
	call "FM_types" parameters all
	VALUES "gs_detlevel_3D" stDetLevel3d		! Detailed, Simple, Off
	VALUES "gs_detlevel_3D_m" 	2,1,0

	if GLOB_MODPAR_NAME = "gs_detlevel_3D" THEN
		gs_detlevel_3D_m = 0		! Off
		if gs_detlevel_3D = stDetLevel3d[2] THEN gs_detlevel_3D_m = 1		! Simple
		if gs_detlevel_3D = stDetLevel3d[1] THEN gs_detlevel_3D_m = 2		! Detailed
		parameters gs_detlevel_3D_m = gs_detlevel_3D_m
	else
		gs_detlevel_3D = stDetLevel3d[3]		! Off
		if gs_detlevel_3D_m = 1 THEN gs_detlevel_3D = stDetLevel3d[2]		! Simple
		if gs_detlevel_3D_m = 2 THEN gs_detlevel_3D = stDetLevel3d[1]		! Detailed
		parameters gs_detlevel_3D = gs_detlevel_3D
	endif

	VALUES "gs_resol" RANGE [3,)

	if gs_cont_pen=0 then parameters gs_cont_pen=4
	if gs_fill_pen=0 then parameters gs_fill_pen=19

	VALUES "A" RANGE [minBedWidth,)
	VALUES "B" RANGE [minBedLength,)


	! --- ZZYZX ---
	if iBedType = 1 then
		zzyzx = frh + max(hbh1, hbh2, mrh)
	else
		zzyzx = frhLeg + leg_h + max(hbh1, hbh2, mrh)
	endif
	parameters zzyzx = zzyzx
	lock "zzyzx"

	! --- Minimal Space ---
	if MSFront < 0 then
		MSFront = 0
		parameters MSFront = MSFront
	endif
	if MSSide < 0 then
		MSSide = 0
		parameters MSSide = MSSide
	endif
	if MSSideAdd < 0 then
		MSSideAdd = 0
		parameters MSSideAdd = MSSideAdd
	endif
	if MSLength < 0 then
		MSLength = 0
		parameters MSLength = MSLength
	endif
	if MSLengthAdd < 0 then
		MSLengthAdd = 0
		parameters MSLengthAdd = MSLengthAdd
	endif
	if MSSide2 < 0 then
		MSSide2 = 0
		parameters MSSide2 = MSSide2
	endif
endif

VALUES "stBedLegType" stBedLegTypeValues		! Style 1, Style 2, Style 3, Style 4, Style 5, Style 6, None
VALUES "iBedLegType" 0,1,2,3,4,5,6
if GLOB_MODPAR_NAME = "stBedLegType" then
	iBedLegType = 0		! None
	iLeg = 1
	do
		if stBedLegType = stBedLegTypeValues[iLeg] then iBedLegType = iLeg
		iLeg = iLeg + 1
	while iLeg < 7 and iBedLegType = 0
	parameters iBedLegType = iBedLegType
else
	if iBedLegType = 0 then
		stBedLegType = stBedLegTypeValues[7]
	else
		iBedLegType = max(iBedLegType, 1)
		iBedLegType = min(iBedLegType, vardim1(stBedLegTypeValues)-1)
		stBedLegType = stBedLegTypeValues[iBedLegType]
	endif
	parameters stBedLegType = stBedLegType
endif

values "hb" stHeadBoard		! Both Sides, On Front Side, On Rear Side
values "iHeadBoard" 1, 2, 3	! Both Sides, On Front Side, On Rear Side

if GLOB_MODPAR_NAME = "hb" then
	iHeadBoard = HEADBOARD_BOTH
	if hb = stHeadBoard[2] then iHeadBoard = HEADBOARD_FRONT
	if hb = stHeadBoard[3] then iHeadBoard = HEADBOARD_REAR
	parameters iHeadBoard = iHeadBoard
else
	hb = stHeadBoard[max(1, min(iHeadBoard, vardim1(stHeadBoard)) )]
	parameters hb = hb
endif

if not(bHeadboard) then 
	hideparameter "hb", "iHeadBoard", "hboard_type", "hboard_type_m", "HeadboardEdge", "hbh1", "hbh2"
	lock "hb", "iHeadBoard", "hboard_type", "hboard_type_m", "HeadboardEdge", "hbh1", "hbh2"
endif

values{2} "iFrameType"	FRAME_LEG,		stFrameType[1],
						FRAME_DRAWER,	stFrameType[2]

if iBedType = 1 then
	VALUES "hboard_type" stHeadBoardStyles[1], stHeadBoardStyles[2]		! Style 1, Style 2
	if not (bCalledAsMacro) then VALUES "hboard_type_m" 1,2

	lock "leg_h", "LegWidth", "gs_leg_mat", "frhLeg", "stBedLegType", "iBedLegType"
	hideparameter "leg_h", "LegWidth", "gs_leg_mat", "frhLeg", "stBedLegType",  "iBedLegType"
	leg_h = 0

	if GLOB_MODPAR_NAME = "iBedType" or GLOB_MODPAR_NAME = "stBedType" then
		if hboard_type = stHeadBoardStyles[3] then
			hboard_type = stHeadBoardStyles[1]
			parameters hboard_type = hboard_type
		endif
		if hboard_type = stHeadBoardStyles[4] then
			hboard_type = stHeadBoardStyles[2]
			parameters hboard_type = hboard_type
		endif
	endif
else
	VALUES "hboard_type" stHeadBoardStyles	! Style 1, Style 2, Style 3, Style 4
	if not (bCalledAsMacro) then VALUES "hboard_type_m" 1,2,3,4

	VALUES "LegWidth" RANGE (0,)

	if iBedLegType <> 0 THEN
		if iBedLegType = 1 or iBedLegType = 2 then
			values "leg_h" range (0, )
		else
			values "leg_h" range [0.05, )
		endif
	endif

	if iBedLegType = 0 THEN
		LOCK "leg_h", "LegWidth", "gs_leg_mat"
		HIDEPARAMETER "leg_h", "LegWidth", "gs_leg_mat"
		leg_h = 0
	endif

	lock "iFrameType", "frh"
	hideparameter "iFrameType", "frh"
endif

if GLOB_MODPAR_NAME = "hboard_type" then
	hboard_type_m = 1		! Style 1
	if hboard_type = stHeadBoardStyles[2] 	then hboard_type_m = 2		! Style 2
	if iBedType = 2 then
		if hboard_type = stHeadBoardStyles[3] 	then hboard_type_m = 3		! Style 3
		if hboard_type = stHeadBoardStyles[4] 	then hboard_type_m = 4		! Style 4
	endif
	parameters hboard_type_m = hboard_type_m
else
	hboard_type = stHeadBoardStyles[max(1, min(vardim1(stHeadBoardStyles), hboard_type_m))]
	parameters hboard_type = hboard_type
endif

if hboard_type_m = 1 then
	values "hbh1" range [0.1,)
	values "hbh2" range [0.1,)
endif
if hboard_type_m = 2 then
	values "hbh1" range [0,)
	values "hbh2" range [0,)
endif
if hboard_type_m = 3 then
	values "hbh1" range [0.19,)
	values "hbh2" range [0.19,)
endif
if hboard_type_m = 4 then
	values "hbh1" range (0.1,)
	values "hbh2" range (0.1,)
endif


VALUES "RadCushCorner" RANGE (0,)
VALUES "RadCushEdge" RANGE (0,)
VALUES "MattressDist" RANGE (,A/2-0.05]
VALUES "mrh" RANGE (0,)
VALUES "frh" RANGE (0,)
VALUES "frhLeg" RANGE (0,)

if not(bHeadboard) THEN
	LOCK "hbh1", "hbh2", "hboard_type", "hbmat", "HeadboardEdge", "bFrontHeadBoard", "bRearHeadBoard"
	HIDEPARAMETER "hbh1", "hbh2", "hboard_type", "hbmat", "HeadboardEdge", "bFrontHeadBoard", "bRearHeadBoard"
endif

if bHeadboard then
	if bFrontHeadBoard and not (bRearHeadBoard) THEN
		LOCK "hbh2"
		HIDEPARAMETER "hbh2"
	endif
	
	if not (bFrontHeadBoard) and bRearHeadBoard THEN
		LOCK "hbh1"
		HIDEPARAMETER "hbh1"
	endif
endif

if gs_detlevel_3D_m = 1 THEN
	LOCK "gs_resol"
	LOCK "pw", "HeadboardEdge", "RadCushCorner", "RadCushEdge"
	HIDEPARAMETER "gs_resol"
endif

if gs_detlevel_3D_m = 0 THEN
	LOCK "gs_resol", "gs_shadow"
	HIDEPARAMETER "gs_resol", "gs_shadow"
endif

if pw = 0 THEN
	LOCK "pillow_mat"
	HIDEPARAMETER "pillow_mat"
endif

if not (bDetailedHeadCushion) then
	bExtraCushion = 0
	parameters bExtraCushion = bExtraCushion
	hideparameter "bExtraCushion"
	lock "bExtraCushion"
endif

!!! ******************************** Different fills


if bEnableDiffFills then
	if GLOB_MODPAR_NAME = "fillFor" then
		iFillFor = 1
		for i = 1 to vardim1(stFillFor)
			if fillFor = stFillFor[i] then	iFillFor = i
		next i
		parameters iFillFor = iFillFor
	else
		iFillFor = max(min(iFillFor,3),1)
		parameters fillFor = stFillFor[iFillFor]
	endif

	if fillPenUniform=0 then parameters fillPenUniform=19
	if fillPenPillow=0 then parameters fillPenPillow=19
	if fillPenBlanket=0 then parameters fillPenBlanket=19

	if iSymbolType = 1 or iSymbolType = 2 then
		if iSymbolType = 1 then
			values "fillFor" stFillFor
			values "iFillFor" 1, 2, 3
		endif
		if iSymbolType = 2 then
			values "fillFor" stFillFor[1], stFillFor[2]
			values "iFillFor" 1, 2
			hideparameter "fillTypeBlanket", "fillPenBlanket", "backPenBlanket"
			lock 	      "fillTypeBlanket", "fillPenBlanket", "backPenBlanket"
		endif
	else
		values "fillFor" stFillFor[1]
		values "iFillFor" 1
		lock		  "fillFor", "iFillFor"
		hideparameter "fillFor", "iFillFor"
		hideparameter "fillTypePillow", "fillPenPillow", "backPenPillow", "fillTypeBlanket", "fillPenBlanket", "backPenBlanket"
		lock 	      "fillTypePillow", "fillPenPillow", "backPenPillow", "fillTypeBlanket", "fillPenBlanket", "backPenBlanket"
	endif

	if bUniformFill then
		lock "fillFor", "iFillFor"
		hideparameter "fillFor", "iFillFor"
		hideparameter "fillTypePillow", "fillPenPillow", "backPenPillow", "fillTypeBlanket", "fillPenBlanket", "backPenBlanket", "gs_fill_type", "gs_fill_pen", "gs_back_pen"
		lock 	      "fillTypePillow", "fillPenPillow", "backPenPillow", "fillTypeBlanket", "fillPenBlanket", "backPenBlanket", "gs_fill_type", "gs_fill_pen", "gs_back_pen"
	else
		hideparameter "fillTypeUniform", "fillPenUniform", "backPenUniform"
		lock 	      "fillTypeUniform", "fillPenUniform", "backPenUniform"
	endif

endif


end minBedWidth, minBedLength, iSymbolType, iHeadBoard
