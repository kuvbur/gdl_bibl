
pen gs_cont_pen
fill gs_fill_type
drawindex 10

add2 a / 2, b
	gosub gs_sink_type_m * 10
del 1

end



10:
! ==============================================================================
! Sink Type 1
! ==============================================================================

gosub "sinkGeometry"

bMirroredBowl = 0
gosub "nBowl_1"

return



20:
! ==============================================================================
! Sink Type 2
! ==============================================================================

gosub "sinkGeometry"

bMirroredBowl = 0
gosub "nBowl_1"

return



30:
! ==============================================================================
! Sink Type 3
! ==============================================================================

gosub "sinkGeometry"

bMirroredBowl = 0
gosub "nBowl_1"

gosub "border"

return



40:
! ==============================================================================
! Sink Type 4
! ==============================================================================

gosub "sinkGeometry"

for i = 1 to 2
	if i = 1 then
		bMirroredBowl = 0
		gosub "nBowl_1"
	else
		bMirroredBowl = 1
		gosub "nBowl_2"
	endif
next i

gosub "border"

return



50:
! ==============================================================================
! Sink Type 5
! ==============================================================================

gosub "sinkGeometry"

bMirroredBowl = 0
gosub "nBowl_1"
gosub "nBowl_2"
gosub "nBowl_3"

gosub "border"

gosub "drainBoardReed"

return



60:
! ==============================================================================
! Sink Type 6
! ==============================================================================

gosub "sinkGeometry"

for i = 1 to 2
	if i = 1 then
		bMirroredBowl = 0
		gosub "nBowl_1"
	else
		bMirroredBowl = 1
		gosub "nBowl_2"
	endif
next i

gosub "border"

for i = 1 to 2
	gosub "drainBoardReed"
mul2 -1, 1
next i
del 2

return



70:
! ==============================================================================
! Sink Type 7
! ==============================================================================

gosub "sinkGeometry"

bMirroredBowl = 0
gosub "nBowl_1"

gosub "border"

gosub "drainBoardReed"

return



"sinkGeometry":
! ==============================================================================
! Sink Geometry
! ==============================================================================

if SinkSymbol_m = 1 then
	if iSinkGeometry = 1 then
		put	0, 0, 79,
			 a / 2, 0, 1,
			 a / 2, -b,	1,
			-a / 2,	-b, 1,
			-a / 2, 0, 1
	else
		put	0, 0, 79,
			 a / 2, 0, 1,
			 a / 2, -b + sinkCornerRadiusOut,	1,
			 0, -b + radFor2DSimple, 900,
			 0, -b, 3001,

			-a,	0, 800,
			-a / 2,	-b + sinkCornerRadiusOut, 1001,
			-a / 2, 0, 1
	endif
else
if iSinkGeometry = 1 then
	put	0, 0, 79,
		 a / 2 - sinkCornerRadiusOut, 0, 1,
		 a / 2, -sinkCornerRadiusOut, 1001,
		 a / 2, -b + sinkCornerRadiusOut,	1,
		 a / 2 - sinkCornerRadiusOut,	-b, 1001,
		-a / 2 + sinkCornerRadiusOut,	-b, 1,
		-a / 2, -b + sinkCornerRadiusOut, 1001,
		-a / 2, -sinkCornerRadiusOut, 1,
		-a / 2 + sinkCornerRadiusOut, 0, 1001
else
	put	0, 0, 79,
		a / 2 - sinkCornerRadiusOut, 0, 1,
		a / 2, -sinkCornerRadiusOut, 1001,
		a / 2, -b + sinkCornerRadiusOut + sinkCornerDistY, 1,
		sinkCornerRadiusOut, -arch2Angle, 2001

	for i = 1 to iSinkBigResolOut * 2
		put	 sinkCornerRadiusOut2, -(90 - arch2Angle) / iSinkBigResolOut, 2001
	next i

	put	sinkCornerRadiusOut, -arch2Angle, 2001,
		-a / 2, -sinkCornerRadiusOut, 1,
		-a / 2 + sinkCornerRadiusOut, 0, 1001
endif
endif

poly2_b nsp / 3, 1+2+4+64, gs_fill_pen, gs_back_pen,
	get (nsp)

gosub "taps"

return



"nBowl_1":
! ==============================================================================
! 1st Bowl Values
! ==============================================================================

bowlWidth			= bowlWidth1
bowlDepth			= bowlDepth1
drainPosXFromCenter	= drainPosFromBowlCenterX_1
drainPosYFromCenter	= drainPosFromBowlCenterY_1
bowlHeight			= bowlHeight1
add2 bowlPosX_1, bowlPosY_1
	gosub "bowlGeometry"
del 1

return



"nBowl_2":
! ==============================================================================
! 2nd Bowl Values
! ==============================================================================

bowlWidth			= bowlWidth2
bowlDepth			= bowlDepth2
drainPosXFromCenter	= drainPosFromBowlCenterX_2
drainPosYFromCenter	= drainPosFromBowlCenterY_2
bowlHeight			= bowlHeight1
add2 bowlPosX_2, bowlPosY_2
	gosub "bowlGeometry"
del 1

return



"nBowl_3":
! ==============================================================================
! 3rd Bowl Values
! ==============================================================================

bowlWidth			= bowlWidth3
bowlDepth			= bowlDepth3
drainPosXFromCenter	= drainPosFromBowlCenterX_3
drainPosYFromCenter	= drainPosFromBowlCenterY_3
drainDia1			= 0.04
drainDia2			= drainDia1 + 0.02
bowlHeight			= bowlHeight2
add2 bowlPosX_3, bowlPosY_3
	gosub "bowlGeometry"
del 1
drainDia1			= 0.07
drainDia2			= drainDia1 + 0.02

return



"bowlGeometry":
! ==============================================================================
! Bowl
! ==============================================================================

if SinkSymbol_m = 1 then
	if iSinkGeometry = 1 then
		put	0, bowlDepth / 2, 1,
			bowlWidth / 2, bowlDepth / 2, 1,
			bowlWidth / 2, -bowlDepth / 2, 1,
			-bowlWidth / 2, -bowlDepth / 2, 1,
			-bowlWidth / 2, bowlDepth / 2, 1
	else
		put	0, bowlDepth / 2, 1,
			bowlWidth / 2, bowlDepth / 2, 1,
			bowlWidth / 2, -bowlDepth / 2 - sinkWallThkSide + radFor2DSimple - SQR((radFor2DSimple - sinkWallThkSide) ^ 2 - (halfA - sinkWallThkSide) ^ 2), 1,
			0, -b + bowlDepth / 2 + sinkWallThkSide + radFor2DSimple, 900,
			0, -bowlDepth / 2, 3001,
			-a,	0, 800,
			-bowlWidth / 2, -bowlDepth / 2 - sinkWallThkSide + radFor2DSimple - SQR((radFor2DSimple - sinkWallThkSide) ^ 2 - (halfA - sinkWallThkSide) ^ 2), 1001,
			-bowlWidth / 2, bowlDepth / 2, 1
	endif
else
if iSinkGeometry = 1 then
	put	0, bowlDepth / 2, 1,
		bowlWidth / 2 - bowlCornerRadius * (gs_sink_type_m <> 4 or bMirroredBowl) - bowlCornerRadius2 * (gs_sink_type_m = 4 and not(bMirroredBowl)), bowlDepth / 2, 1,
		bowlWidth / 2, bowlDepth / 2 - bowlCornerRadius * (gs_sink_type_m <> 4 or bMirroredBowl) - bowlCornerRadius2 * (gs_sink_type_m = 4 and not(bMirroredBowl)), 1001,
		bowlWidth / 2, -bowlDepth / 2 + bowlCornerRadius, 1,
		bowlWidth / 2 - bowlCornerRadius, -bowlDepth / 2, 1001,
		-bowlWidth / 2 + bowlCornerRadius, -bowlDepth / 2, 1,
		-bowlWidth / 2, -bowlDepth / 2 + bowlCornerRadius, 1001,
		-bowlWidth / 2, bowlDepth / 2 - bowlCornerRadius * (gs_sink_type_m <> 4 or not(bMirroredBowl)) - bowlCornerRadius2 * (gs_sink_type_m = 4 and bMirroredBowl), 1,
		-bowlWidth / 2 + bowlCornerRadius * (gs_sink_type_m <> 4 or not(bMirroredBowl)) + bowlCornerRadius2 * (gs_sink_type_m = 4 and bMirroredBowl), bowlDepth / 2, 1001
else
	put	0, bowlDepth / 2, 1,
		bowlWidth / 2 - bowlCornerRadius * (gs_sink_type_m <> 4) - bowlCornerRadius2 * (gs_sink_type_m = 4), bowlDepth / 2, 1,
		bowlWidth / 2, bowlDepth / 2 - bowlCornerRadius * (gs_sink_type_m <> 4) - bowlCornerRadius2 * (gs_sink_type_m = 4), 1001,
		bowlWidth / 2, -bowlDepth / 2 + bowlCornerRadius + sinkCornerDistY, 1,
		bowlCornerRadius, -arch2Angle, 2001

	for i = 1 to iSinkBigResolOut * 2
		put	 sinkCornerRadiusOut2 - sinkWallThkSide, -(90 - arch2Angle) / iSinkBigResolOut, 2001
	next i

	put	bowlCornerRadius, -arch2Angle, 2001,
		-bowlWidth / 2, bowlDepth / 2 - bowlCornerRadius, 1,
		-bowlWidth / 2 + bowlCornerRadius, bowlDepth / 2, 1001
endif
endif

poly2_b nsp / 3, 1+4, gs_fill_pen, gs_back_pen,
	get (nsp)

! ==============================================================================
! Drain Cut
! ==============================================================================

if SinkSymbol_m = 2 then
	add2 drainPosXFromCenter, drainPosYFromCenter
		circle2 0, 0, drainDia2 / 2
	del 1
endif

return



"drainBoardReed":
! ==============================================================================
! Drainboard Reed
! ==============================================================================

if iDrainBoardDir = 1 then
	reedLength	= drainBoardHeight - reedDist_temp * (SinkSymbol_m = 2) - sinkWallThkSide * (SinkSymbol_m = 1)
	reedNum		= INT((drainBoardWidth - reedDist_temp * 2 * (SinkSymbol_m = 2)) / reedDist_temp)
	reedDist	= (drainBoardWidth - reedDist_temp * 2 * (SinkSymbol_m = 2)) / (reedNum - 1)
else
	reedLength	= drainBoardWidth - reedDist_temp * (SinkSymbol_m = 2) - sinkWallThkSide * (SinkSymbol_m = 1)
	reedNum		= INT((b - sinkWallThkSide * 2 - reedDist_temp * 2 * (SinkSymbol_m = 2)) / reedDist_temp)
	reedDist	= (b - sinkWallThkSide * 2 - reedDist_temp * 2 * (SinkSymbol_m = 2)) / (reedNum - 1)
endif

	put	0, reedLength / 2, 0, -reedLength / 2

	if iDrainBoardDir = 1 then
	add2 -a / 2 + (sinkWallThkSide + reedDist_temp) * (SinkSymbol_m = 2) + sinkWallThkSide * (SinkSymbol_m = 1), -sinkWallThkSide - (drainBoardHeight) / 2 + sinkWallThkSide / 2 * (SinkSymbol_m = 1)
			for re = 1 to reedNum
				if re = reedNum then
					line2 get (nsp)
				else
					line2 use (nsp)
				endif
			add2 reedDist, 0
			next re
			del reedNum
		del 1
	else
	add2 a / 2 - sinkWallThkSide + sinkWallThkSide / 2 * (SinkSymbol_m = 1) - drainBoardWidth / 2, -b + (sinkWallThkSide + reedDist_temp) * (SinkSymbol_m = 2) + sinkWallThkSide * (SinkSymbol_m = 1)
			for re = 1 to reedNum
				rot2 90
					if re = reedNum then
						line2 get (nsp)
					else
						line2 use (nsp)
					endif
				del 1
			add2 0, reedDist
			next re
			del reedNum
		del 1
	endif

return



"taps":
! ==============================================================================
! Taps
! ==============================================================================

if gs_tap_type_m <> 0 & SinkSymbol_m = 2 then
	drawindex 20
	add2 -a / 2 + xOrigTapPos, -b + yOrigTapPos

	call "tapType_m" parameters all	gs_tap_type_m		= tempTapType,
									bEnableTapEdit		= 1,
									bSinkTap			= 1

	del 1
	drawindex 10
endif

return



"border":
! ==============================================================================
! Border
! ==============================================================================

if SinkSymbol_m = 2 then
if gs_sink_type_m = 3 then
	poly2_b 7, 1+4, gs_fill_pen,gs_back_pen,
		0, -sinkWallThkSide, 79,
		a / 2 - sinkCornerRadiusOut,	 -sinkWallThkSide,	1,
		a / 2 - sinkWallThkSide, -sinkCornerRadiusOut, 1001,
		a / 2 - sinkWallThkSide, -drainBoardHeight - sinkWallThkSide - bowlCornerRadius,	0,
		-a / 2 + sinkWallThkSide,	-drainBoardHeight - sinkWallThkSide - bowlCornerRadius,	1,
		-a / 2 + sinkWallThkSide, -sinkCornerRadiusOut, 1,
		-a / 2 + sinkCornerRadiusOut,	 -sinkWallThkSide,	1001
endif

if gs_sink_type_m = 4 then
	poly2_b 13, 1+4, gs_fill_pen,gs_back_pen,
		-sinkWallThkMiddle / 2 - bowlCornerRadius2, -sinkWallThkSide, 0,
		-sinkWallThkMiddle / 2 - bowlCornerRadius2, -sinkWallThkSide - bowlCornerRadius2, 900,
		0, -45, 4001,
		sinkWallThkMiddle / 2 + bowlCornerRadius2 - sin(45) * bowlCornerRadius2, -sinkWallThkSide - bowlCornerRadius2 + sin(45) * bowlCornerRadius2, 1000,
		sinkWallThkMiddle / 2 + bowlCornerRadius2, -sinkWallThkSide, 1000,
		 a / 2 - sinkCornerRadiusOut, -sinkWallThkSide, 0,
		 a / 2 - sinkWallThkSide, -sinkCornerRadiusOut, 1000,
		 a / 2 - sinkWallThkSide, -b + sinkCornerRadiusOut, 0,
		 a / 2 - sinkCornerRadiusOut,	-b + sinkWallThkSide, 1000,
		-a / 2 + sinkCornerRadiusOut,	-b + sinkWallThkSide, 0,
		-a / 2 + sinkWallThkSide, -b + sinkCornerRadiusOut, 1000,
		-a / 2 + sinkWallThkSide, -sinkCornerRadiusOut, 0,
		-a / 2 + sinkCornerRadiusOut, -sinkWallThkSide, 1000
endif

if gs_sink_type_m = 5 then
	add2 -a / 2 + drainBoardWidth / 2 + sinkWallThkSide, 0
	poly2_b 11, 1+4, gs_fill_pen,gs_back_pen,
		0, -sinkWallThkSide, 1,
		drainBoardWidth / 2 - bowlCornerRadius, -sinkWallThkSide,	1,
		drainBoardWidth / 2, -sinkCornerRadiusOut, 1001,

		drainBoardWidth / 2, -drainBoardHeight2 - sinkWallThkSide + bowlCornerRadius,	1,
		drainBoardWidth / 2 + bowlCornerRadius, -drainBoardHeight2 - sinkWallThkSide,	1001,

		drainBoardWidth / 2 + bowlCornerRadius * 2 + sinkWallThkMiddle + bowlCornerRadius, -drainBoardHeight2 - sinkWallThkSide,	0,
		drainBoardWidth / 2 + bowlCornerRadius * 2 + sinkWallThkMiddle + bowlCornerRadius, -b + sinkWallThkSide,	0,
		-drainBoardWidth / 2 + bowlCornerRadius, -b + sinkWallThkSide,	0,
		-drainBoardWidth / 2, -b + sinkCornerRadiusOut,	1001,
		-drainBoardWidth / 2, -sinkCornerRadiusOut, 1,
		-drainBoardWidth / 2 + bowlCornerRadius, -sinkWallThkSide,	1001
	del 1
endif

if gs_sink_type_m = 6 then
	for i = 1 to 2
		add2 -a / 2 + drainBoardWidth / 2 + sinkWallThkSide, 0

		poly2_b 9, 1+4, gs_fill_pen,gs_back_pen,
			0, -sinkWallThkSide, 1,
			drainBoardWidth / 2 - bowlCornerRadius, -sinkWallThkSide,	1,
			drainBoardWidth / 2, -sinkCornerRadiusOut, 1001,
			drainBoardWidth / 2, -drainBoardHeight - sinkWallThkSide + bowlCornerRadius,	1,
			drainBoardWidth / 2 + bowlCornerRadius, -drainBoardHeight - sinkWallThkSide,	1000,
			drainBoardWidth / 2 + bowlCornerRadius * 2, -drainBoardHeight - sinkWallThkSide - bowlCornerRadius,	1000,
			-drainBoardWidth / 2, -drainBoardHeight - sinkWallThkSide - bowlCornerRadius,	1,
			-drainBoardWidth / 2, -sinkCornerRadiusOut, 1,
			-drainBoardWidth / 2 + bowlCornerRadius, -sinkWallThkSide,	1001
		del 1
	mul2 -1, 1
	next i
	del 2
endif

if gs_sink_type_m = 7 then
	poly2_b 6, 1+4, gs_fill_pen,gs_back_pen,
		a / 2 - sinkWallThkSide - drainBoardWidth - bowlCornerRadius, -sinkWallThkSide, 1,
		a / 2 - sinkCornerRadiusOut,	 -sinkWallThkSide, 1,
		a / 2 - sinkWallThkSide, -sinkCornerRadiusOut, 1001,
		a / 2 - sinkWallThkSide, -b + sinkCornerRadiusOut, 1,
		a / 2 - sinkCornerRadiusOut,	-b + sinkWallThkSide, 1001,
		a / 2 - sinkWallThkSide - drainBoardWidth - bowlCornerRadius,	-b + sinkWallThkSide, 0
endif
endif





return
