
unID = start_unID

pen gs_cont_pen
line_type 1
fill gs_fill_type

drawindex 40

! ======================================================================
! Shelf Frame
! ======================================================================

if bShelves then

	for shv = 1 to (1 + bDoubleRow)
		for shh = 1 to 2
			hotspot2 0,	0,					unID, halfShelfDepth, 1 + 128,	shelfDepth:		unID = unID + 1
			hotspot2 0,	1,					unID, halfShelfDepth, 3,		shelfDepth:		unID = unID + 1
			hotspot2 0,	-halfShelfDepth,	unID, halfShelfDepth, 2,		shelfDepth:		unID = unID + 1

			add2 shelfWidth, 0
		next shh
		del 2
		mul2 1, -1
	next shv
	del (1 + bDoubleRow)

	add2 shelfWidth / 2, shelfDepth / 2 * bDoubleRow

	poly2_b 4, 1+2+4+64, gs_fill_pen, gs_back_pen,
		shelfWidth / 2, 0, 1,
		-shelfWidth / 2, 0, bShow2DLeftEdge,
		-shelfWidth / 2, -shelfDepth, 1,
		shelfWidth / 2, -shelfDepth, bShow2DRightEdge	
		
	del 1
endif



add2 tableLength / 2, 0

! ======================================================================
! Backsplash left
! ======================================================================

if bEnableBsplashLeft then
	__sideBackSplashPosX		= -tableLength / 2 + bsplashThk / 2
	__bShow2DLeftBsplashEdge	= 1
	__bShow2DRightBsplashEdge	= bShow2DLeftEdge

	gosub "side backsplash"
endif


! ======================================================================
! Backsplash right
! ======================================================================

if bEnableBsplashRight then
	__sideBackSplashPosX	= tableLength / 2 - bsplashThk / 2
	__bShow2DLeftBsplashEdge	= bShow2DRightEdge
	__bShow2DRightBsplashEdge	= 1

	gosub "side backsplash"
endif


! ======================================================================
! Backsplash rear
! ======================================================================

if bsplashRear and NOT(bShelves) then
	bsplashLength	= tableLength - bsplashThk * bEnableBsplashLeft - bsplashThk * bEnableBsplashRight

	add2 -tableLength / 2 + bsplashThk * bEnableBsplashLeft, 0
		poly2_b 4, 1+4, gs_fill_pen, gs_back_pen,
			0, bsplashThk * bDoubleRow, 1,
			bsplashLength, bsplashThk * bDoubleRow, bShow2DRightEdge,
			bsplashLength, -bsplashThk, 1,
			0, -bsplashThk, bShow2DLeftEdge
	del 1
endif

!================================================================================
end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end
!================================================================================

! ======================================================================
"side backsplash":
! ======================================================================

	add2 __sideBackSplashPosX, 0

		for sb = 1 to 1 + bDoubleRow
			if bDoubleRow then
				add2 0, -shelfDepth / 2 * bShelves
			else
				add2 0, -shelfDepth * bShelves
			endif
		
			poly2_b 4, 1+4, gs_fill_pen, gs_back_pen,
				-bsplashThk / 2, 0, __bShow2DRightBsplashEdge,
				-bsplashThk / 2, -bsplashLengthSide, 1,
				bsplashThk / 2, -bsplashLengthSide, __bShow2DLeftBsplashEdge,
				bsplashThk / 2, 0, 0
			del 1
	
			mul2 1, -1
		next sb
		del 1 + bDoubleRow

	del 1

return

