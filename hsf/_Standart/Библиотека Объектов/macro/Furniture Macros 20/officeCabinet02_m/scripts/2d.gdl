
unID = officeCab02_unID

if NOT(bPartOfLayout) then call "fa_minimalspace" parameters all MSType = 1, unID = 3000

pen gs_cont_pen
line_type 1
fill gs_fill_type

if NOT(bPartOfLayout) then
	hotspot2 0, b,			unID : unID = unID + 1
	hotspot2 a / 2, b,		unID : unID = unID + 1
	hotspot2 a / 2, b / 2,	unID : unID = unID + 1
else
	hotspot2 0, -extCabinetDepth, unID, extCabinetWidth, 1 + 128:			unID = unID + 1
	hotspot2 1, -extCabinetDepth, unID, extCabinetWidth, 3 + 128:			unID = unID + 1
	hotspot2 -extCabinetWidth, -extCabinetDepth, unID, extCabinetWidth, 2:	unID = unID + 1

	hotspot2 -extCabinetWidth, 0, unID, extCabinetDepth, 1 + 128:			unID = unID + 1
	hotspot2 -extCabinetWidth, 1, unID, extCabinetDepth, 3 + 128:			unID = unID + 1
	hotspot2 -extCabinetWidth, -extCabinetDepth, unID, extCabinetDepth, 2:	unID = unID + 1
endif

if bPartOfLayout then
	add2 - a / 2, -b
		rect2 -a / 2, b, a /2 , frontThk * (enableDrawers or enableCupboard)
	
		if enableDrawers or enableCupboard then
			rect2 -a / 2 + 0.005, frontThk, a / 2 - 0.005, 0
		endif
	
		if gs_detlevel_2D = 1 then
			line2 -a / 2, frontThk * (enableDrawers or enableCupboard), a / 2, b
			line2 -a / 2, b, a / 2, frontThk * (enableDrawers or enableCupboard)
		endif
	
		poly2_b 5, 2+64, gs_fill_pen, gs_back_pen,
			-a / 2, 0, 1,
			-a / 2, b, 1,
			a / 2, b, 1,
			a / 2, 0, 1,
			-a / 2, 0, -1
	del 1
else
	if 	bCallcabSymbolType then
		call "Resize_A_B_ZZYZX" parameters all

		call "cabSymbolType" parameters all 	nDoor 			= iCupboardDoors,
												doorThickness	= 0.025
	endif
endif

! ======================================================================
officeCab02_unID = unID
end officeCab02_unID
! ======================================================================


