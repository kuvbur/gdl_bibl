
unID = officeCab02_unID

if gs_detlevel_3D_m = 0 then end

if NOT(gs_shadow) then shadow off

if GLOB_CONTEXT > 20 and GLOB_CONTEXT < 40 or gs_detlevel_3D_m = 1 then 		!! for Simple Model and in 3D Windoow
	if GLOB_CONTEXT > 20 and GLOB_CONTEXT < 40 then
		iResol = 3
	else
		iResol = 8
	endif
else
	iResol = gs_resol
endif

resol iResol

pen gs_cont_pen

if NOT(bPartOfLayout) then
	call "Resize_A_B_ZZYZX" parameters all

	hotspot 0, 0, zzyzx, unID:	unID = unID + 1
endif

if NOT(bPartOfLayout) then
	if bCabinetBase then
		hotspot 0, 0, 0, unID, cabinetBaseHeight, 1 + 128:	unID = unID + 1
		hotspot 0, 0, -1, unID, cabinetBaseHeight, 3 + 128:	unID = unID + 1
		hotspot 0, 0, cabinetBaseHeight, unID, cabinetBaseHeight, 2:	unID = unID + 1

		hotspot a, 0, 0, unID, cabinetBaseHeight, 1 + 128:	unID = unID + 1
		hotspot a, 0, -1, unID, cabinetBaseHeight, 3 + 128:	unID = unID + 1
		hotspot a, 0, cabinetBaseHeight, unID, cabinetBaseHeight, 2:	unID = unID + 1

		hotspot a, b, 0, unID, cabinetBaseHeight, 1 + 128:	unID = unID + 1
		hotspot a, b, -1, unID, cabinetBaseHeight, 3 + 128:	unID = unID + 1
		hotspot a, b, cabinetBaseHeight, unID, cabinetBaseHeight, 2:	unID = unID + 1

		hotspot 0, b, 0, unID, cabinetBaseHeight, 1 + 128:	unID = unID + 1
		hotspot 0, b, -1, unID, cabinetBaseHeight, 3 + 128:	unID = unID + 1
		hotspot 0, b, cabinetBaseHeight, unID, cabinetBaseHeight, 2:	unID = unID + 1
	endif
	if iCabinetScheme = DRAWERS_CUPBOARD or iCabinetScheme = DRAWERS_SHELVES then
		hotspot 0, 0, 0, unID, totalDrawerHeight, 1 + 128, gs_drawerHeight:				unID = unID + 1
		hotspot 0, 0, -1, unID, totalDrawerHeight, 3 + 128, gs_drawerHeight:			unID = unID + 1
		hotspot 0, 0, totalDrawerHeight, unID, totalDrawerHeight, 2, gs_drawerHeight:	unID = unID + 1

		hotspot a, 0, 0, unID, totalDrawerHeight, 1 + 128, gs_drawerHeight:				unID = unID + 1
		hotspot a, 0, -1, unID, totalDrawerHeight, 3 + 128, gs_drawerHeight:			unID = unID + 1
		hotspot a, 0, totalDrawerHeight, unID, totalDrawerHeight, 2, gs_drawerHeight:	unID = unID + 1

		hotspot a, b, 0, unID, totalDrawerHeight, 1 + 128, gs_drawerHeight:				unID = unID + 1
		hotspot a, b, -1, unID, totalDrawerHeight, 3 + 128, gs_drawerHeight:			unID = unID + 1
		hotspot a, b, totalDrawerHeight, unID, totalDrawerHeight, 2, gs_drawerHeight:	unID = unID + 1

		hotspot 0, b, 0, unID, totalDrawerHeight, 1 + 128, gs_drawerHeight:				unID = unID + 1
		hotspot 0, b, -1, unID, totalDrawerHeight, 3 + 128, gs_drawerHeight:			unID = unID + 1
		hotspot 0, b, totalDrawerHeight, unID, totalDrawerHeight, 2, gs_drawerHeight:	unID = unID + 1
	endif
else
	hotspot 0, -extCabinetDepth, zzyzx, unID, extCabinetWidth, 1 + 128:			unID = unID + 1
	hotspot 1, -extCabinetDepth, zzyzx, unID, extCabinetWidth, 3 + 128:			unID = unID + 1
	hotspot -extCabinetWidth, -extCabinetDepth, zzyzx, unID, extCabinetWidth, 2:	unID = unID + 1

	hotspot -extCabinetWidth, 0, zzyzx, unID, extCabinetDepth, 1 + 128:			unID = unID + 1
	hotspot -extCabinetWidth, 1, zzyzx, unID, extCabinetDepth, 3 + 128:			unID = unID + 1
	hotspot -extCabinetWidth, -extCabinetDepth, zzyzx, unID, extCabinetDepth, 2:	unID = unID + 1
endif

add a / 2 * NOT(bPartOfLayout) - a / 2 * bPartOfLayout, - b * bPartOfLayout, 0

! -----------------------------------------------------------------------------
! Toe
! -----------------------------------------------------------------------------

if bCabinetBase then
	material toe_mat
	add -a/2, frontThk * (iCabinetScheme <> SHELVES), 0
		block a, b - frontThk * (iCabinetScheme <> SHELVES), baseHeight
		gosub 2000
	del 1
endif


! -----------------------------------------------------------------------------
! Cabinet Body
! -----------------------------------------------------------------------------

add 0, b, 0
call "fa_cabinet_credenza" parameters all	b				= b - frontThk * (iCabinetScheme <> SHELVES),
											iCabinetForm	= 1,
											cot				= 0,
											leg_h			= baseHeight,
											boardThk		= boardThk
del 1



! -----------------------------------------------------------------------------
! Drawers
! -----------------------------------------------------------------------------

if enableDrawers then
	add 0, 0, baseHeight

	!!! Drawers
	for i = 1 to drawerNum
		material gs_drawer_mat

		addy frontThk
		rotx 90
		if gs_detlevel_3D_m = DET3D_DETAILED & gs_bevel then
			fprism_ gs_drawer_mat, gs_drawer_mat, gs_drawer_mat, gs_drawer_mat,
				5,		frontThk,	45, drawerGap * 2,
				-drawerWidth / 2, drawerGap, 15,
				drawerWidth / 2, drawerGap, 15,
				drawerWidth / 2, drawerDist - drawerGap, 15,
				-drawerWidth / 2, drawerDist - drawerGap, 15,
				-drawerWidth / 2, drawerGap, -1
		else
			prism_ 5, frontThk,
				-drawerWidth / 2, drawerGap, 15,
				drawerWidth / 2, drawerGap, 15,
				drawerWidth / 2, drawerDist - drawerGap, 15,
				-drawerWidth / 2, drawerDist - drawerGap, 15,
				-drawerWidth / 2, drawerGap, -1
		endif
		del 2
		gosub 2000

		addz drawerDist / 2
			gosub "drawerKnobs"
		del 1

		addz drawerDist
	next i
	del drawerNum

	!!! Shelves for Drawers
	add 0, frontThk, drawerDist - shelfThk / 2

	for i = 1 to drawerNum - (iCabinetScheme = DRAWERS)
		material gs_cabinet_mat
		prism_ 5, shelfThk,
			-shelfWidth / 2, 0, 15,
			shelfWidth / 2, 0, 15,
			shelfWidth / 2, b - frontThk - boardThk, 15,
			-shelfWidth / 2, b - frontThk - boardThk, 15,
			-shelfWidth / 2, 0, -1
		gosub 2000

		addz drawerDist
	next i
	del drawerNum - (iCabinetScheme = DRAWERS)
	del 1

	del 1
endif

! -----------------------------------------------------------------------------
! Shelves
! -----------------------------------------------------------------------------

if bShelves or bShelvesNoneType then
	if enableShelves then
		add -a/2+ boardThk,\
			 frontThk * (iCabinetScheme <> SHELVES),\
			 shelfDist + (baseHeight + boardThk - shelfThk) * (iCabinetScheme = SHELVES) + (zzyzx - gs_upperCabHeight - shelfThk / 2) * (iCabinetScheme = DRAWERS_SHELVES)
		for i = 1 to shelfNum
			material matShelf
			block shelfWidth, b - frontThk * (iCabinetScheme <> SHELVES) - boardThk,  shelfThk
			gosub 2000
			addz shelfDist
		next i
		del shelfNum
	
		del 1
	endif
endif

! -----------------------------------------------------------------------------
! Upper Cabinet
! -----------------------------------------------------------------------------

if enableCupboard then
	add a / 2 - drawerGap - doorWidth / 2, 0, (baseHeight + drawerNum * gs_drawerHeight) * (iCabinetScheme = DRAWERS_CUPBOARD) + (baseHeight) * (iCabinetScheme = CUPBOARD)

	for fi = 1 to iCupboardDoors
		material gs_upper_mat

		addy frontThk
		rotx 90
		if gs_detlevel_3D_m = DET3D_DETAILED & gs_bevel then
			fprism_ gs_upper_mat, gs_upper_mat, gs_upper_mat, gs_upper_mat,
				5, frontThk, 45, drawerGap * 2,
				-doorWidth / 2, drawerGap, 15,
				doorWidth / 2, drawerGap, 15,
				doorWidth / 2, realUpperCabHeight - drawerGap, 15,
				-doorWidth / 2, realUpperCabHeight - drawerGap, 15,
				-doorWidth / 2, drawerGap, -1
		else
			prism_ 5, frontThk,
				-doorWidth / 2, drawerGap, 15,
				doorWidth / 2, drawerGap, 15,
				doorWidth / 2, realUpperCabHeight - drawerGap, 15,
				-doorWidth / 2, realUpperCabHeight - drawerGap, 15,
				-doorWidth / 2, drawerGap, -1
		endif
		del 2
		gosub 2000

		addx doorWidth / 2 * (iCupboardDoors = CUPBOARDDOORS_SINGLE) - doorWidth / 2 * (iCupboardDoors = CUPBOARDDOORS_DOUBLE)
		if bUpperKnobs then gosub "cabinetKnobs"
		del 1

		addx -a / 2
		mulx -1
	next fi
	del 2 * iCupboardDoors

	del 1
endif

del 1

! ======================================================================
officeCab02_unID = unID
end officeCab02_unID
! ======================================================================



1000:

roty 90
vert 0, 0, 0
vert 1, 0, 0
vert 0, 1, 0
vert 0, 0, 1
del 1

coor 2, -1, -2, -3, -4

base

body -1

return



2000:

vert 0, 0, 0
vert 1, 0, 0
vert 0, 1, 0
vert 0, 0, 1

coor 2, -1, -2, -3, -4

base

body -1

return



"drawerKnobs":
	if ((gs_knob_type_m > 0) & bKnobNoneType) | (bKnob & not(bKnobNoneType)) then
		knobPos			= CABINET_KNOB_HOR
		knobSize		= drawerKnobSize
		knobMatForMacro = matDrawerKnob
		if nDrawerKnob = 1 then
			add xDrawerKnobPos, 0, zDrawerKnobPos + (drawerDist - drawerGap * 2) / 4 * gs_knobVerPos_m * bPartOfLayout
			gosub "knob"
			del 1
	
			if NOT(bPartOfLayout) then
				hotspot xDrawerKnobPos, 0, 0, 				unID, zDrawerKnobPos, 1 + 128 	: unID=unID+1
				hotspot xDrawerKnobPos, 0, -1, 				unID, zDrawerKnobPos, 3 		: unID=unID+1
				hotspot xDrawerKnobPos, 0, zDrawerKnobPos, 	unID, zDrawerKnobPos, 2 		: unID=unID+1
	
				hotspot 0, 0, zDrawerKnobPos, 				unID, xDrawerKnobPos, 1 + 128 	: unID=unID+1
				hotspot -1, 0, zDrawerKnobPos, 				unID, xDrawerKnobPos, 3 		: unID=unID+1
				hotspot xDrawerKnobPos, 0, zDrawerKnobPos, 	unID, xDrawerKnobPos, 2 		: unID=unID+1
			endif
		else
			addz zDrawerKnobPos
			addx a / 2 - drawerKnobSize / 2 - 0.01 - xDrawerKnobPos
				gosub "knob"
			del 1
			addx - ( a / 2 - drawerKnobSize / 2 - 0.01 - xDrawerKnobPos)
				gosub "knob"
			del 1
			del 1
		endif
	endif

return



"cabinetKnobs":
	if ((gs_knob_type_m_up > 0) & bKnobNoneType) | (bKnob_up & not(bKnobNoneType)) then
		knobSize		= knob_size
		knobPos			= gs_knob_p_m
		gs_knob_type_m	= gs_knob_type_m_up
		knobMatForMacro	= gs_knob_mat

		addz drawerGap
			addx knob_pl_x * (iCupboardDoors = CUPBOARDDOORS_DOUBLE) - knob_pl_x * (iCupboardDoors = CUPBOARDDOORS_SINGLE)
			addz knob_pl_y * NOT(bPartOfLayout) + realUpperCabHeight / 2 * bPartOfLayout

			gosub "knob"

			del 2

			if NOT(bPartOfLayout) then
				hotspot knob_pl_x, 0, 0, 			unID, knob_pl_y, 1 + 128 	: unID=unID+1
				hotspot knob_pl_x, 0, -1, 			unID, knob_pl_y, 3 			: unID=unID+1
				hotspot knob_pl_x, 0, knob_pl_y, 	unID, knob_pl_y, 2 			: unID=unID+1

				hotspot 0, 0, knob_pl_y, 			unID, knob_pl_x, 1 + 128 	: unID=unID+1
				hotspot -1, 0, knob_pl_y, 			unID, knob_pl_x, 3 			: unID=unID+1
				hotspot knob_pl_x, 0, knob_pl_y, 	unID, knob_pl_x, 2 			: unID=unID+1
			endif
		del 1
	endif

return



"knob":
	if gs_knob_type_m=4 or gs_knob_type_m=5 or gs_knob_type_m=6 or gs_knob_type_m=7 or gs_knob_type_m=8 then
		roty 180 * (gs_knob_type_m = 8) * (knobPos = CABINET_KNOB_VER)
		add knobSize / 2 * (knobPos = CABINET_KNOB_HOR), 0, knobSize / 2 * (knobPos = CABINET_KNOB_VER)
	endif

	call "fa_knobtyp" parameters	gs_detlevel_3D_m	= gs_detlevel_3D_m,
									gs_knob_type_m		= gs_knob_type_m,
									gs_resol			= iResol,
									gs_shadow			= gs_shadow,
									knob_size			= knobSize,
									gs_cont_pen			= gs_cont_pen,
									gs_knob_mat			= knobMatForMacro,
									gs_knob_p_m			= knobPos

	if gs_knob_type_m=4 or gs_knob_type_m=5 or gs_knob_type_m=6 or gs_knob_type_m=7 or gs_knob_type_m=8 then
		del 2
	endif

return
