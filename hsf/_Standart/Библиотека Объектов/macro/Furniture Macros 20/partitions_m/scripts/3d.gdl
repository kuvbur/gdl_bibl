
unID = partitions_unID

if gs_detlevel_3D_m = 0 then end

if NOT(gs_shadow) then shadow off

if GLOB_CONTEXT > 20 and GLOB_CONTEXT < 40 or gs_detlevel_3D_m = 1 then 		!! for Simple Model and in 3D Windoow
	if GLOB_CONTEXT > 20 and GLOB_CONTEXT < 40 then
		iResol = 3
	else
		iResol = 8
	endif
else
	iResol = gs_resol
endif

resol iResol

pen gs_cont_pen
material gs_partitionFrame_mat

! ======================================================================
! Partition
! ======================================================================

if bOnlyPartitionColumn then
	material gs_partitionFrame_mat * NOT(bOnlyPartitionCover) + gs_top_mat * bOnlyPartitionCover

	add 0, 0, partitionElevation + (tableTopHeight - topThk - partitionElevation) * bOnlyPartitionCover
	if iDeskAngle = 90 then
		prism_ 4, gs_partitionHeight * NOT(bOnlyPartitionCover) + topThk * bOnlyPartitionCover,
			-partitionFrameThk / 2, -partitionFrameThk / 2, 15,
			partitionFrameThk / 2, -partitionFrameThk / 2, 15,
			partitionFrameThk / 2, partitionFrameThk / 2, 15,
			-partitionFrameThk / 2, partitionFrameThk / 2, 15
	endif
	if iDeskAngle = 120 then
		if bPartOfWsSolo then
			add -partitionFrameThk / TAN(iDeskAngle / 2) / 2, -partitionFrameThk / 2, 0
			prism_ 4, gs_partitionHeight * NOT(bOnlyPartitionCover) + topThk * bOnlyPartitionCover,
				0, 0, 15,
				partitionFrameThk / TAN(iDeskAngle / 2), 0, 15,
				partitionFrameThk / TAN(iDeskAngle / 2), partitionFrameThk, 15,
				-partitionFrameThk / TAN(iDeskAngle / 2) * COS(60), partitionFrameThk / TAN(iDeskAngle / 2) * SIN(60), 15
			del 1
		else
			add 0, partitionFrameThk / 2 * TAN(30), 0
			prism_ 3, gs_partitionHeight * NOT(bOnlyPartitionCover) + topThk * bOnlyPartitionCover,
				-partitionFrameThk / 2, 0, 15,
				partitionFrameThk / 2, 0, 15,
				0, -partitionFrameThk / 2 * TAN(60), 15
			del 1
		endif
	endif
	del 1
else
	add xPartOrigPos, yPartOrigPos, 0
	rotz anglePartititon

	if NOT(bCalledAsExtension) and NOT(bPartOfLayout) and NOT(bPartOfWsSolo) then
		add		gs_partitionPos_front[1][1] * (iPartitionLoc = 1) + gs_partitionPos_side1[1][1] * (iPartitionLoc = 2) +\
				gs_partitionPos_side2[1][1] * (iPartitionLoc = 3) + gs_partitionPos_end[1][1] * (iPartitionLoc = 4),\
				gs_partitionPos_front[1][2] * (iPartitionLoc = 1) + gs_partitionPos_side1[1][2] * (iPartitionLoc = 2) +\
				gs_partitionPos_side2[1][2] * (iPartitionLoc = 3) + gs_partitionPos_end[1][2] * (iPartitionLoc = 4), 0
	endif

	addz partitionElevation + (tableTopHeight - topThk - partitionElevation) * bOnlyPartitionCover

	if NOT(bCalledAsExtension) then			!!! Not Called as Extension
		if NOT(bOnlyPartitionCover) then
			pLength	= realPartitionLength
			gosub "partition"
		else
			material gs_top_mat
			pLength	= realPartitionLength
			prism_ 4, topThk,
				pLength / 2, -partitionFrameThk / 2, 15,
				pLength / 2, partitionFrameThk / 2, 15,
				-pLength / 2, partitionFrameThk / 2, 15,
				-pLength / 2, -partitionFrameThk / 2, 15
			fill 4
		endif
	else									!!! Called as Extension
		!!! Left Partition Length from Desk Corner
		material gs_partitionFrame_mat
		pLength	= extPartLengthStart - partitionFrameThk / 2
		add -pLength / 2 - partitionFrameThk / 2, 0, 0
			gosub "partition"
		del 1

		!!! Column on Desk Corner
		material gs_partitionFrame_mat
		prism_ 4, gs_partitionHeight,
			-partitionFrameThk / 2, -partitionFrameThk / 2, 15,
			partitionFrameThk / 2, -partitionFrameThk / 2, 15,
			partitionFrameThk / 2, partitionFrameThk / 2, 15,
			-partitionFrameThk / 2, partitionFrameThk / 2, 15

		!!! Right Partition Length from Desk Corner
		pLength	= extPartLengthEnd - partitionFrameThk / 2
		add pLength / 2 + partitionFrameThk / 2, 0, 0
			gosub "partition"
		del 1
	endif

	del 1

	if NOT(bCalledAsExtension) and NOT(bPartOfLayout) and NOT(bPartOfWsSolo) then del 1



	! ======================================================================
	! 3D Hostspot Editing
	! ======================================================================

	if NOT(bCalledAsExtension) and NOT(bPartOfLayout) and NOT(bPartOfWsSolo) then gosub "3DHotspots"

	del 2
endif

! ======================================================================
partitions_unID = unID
end partitions_unID
! ======================================================================



"partition":
	! ======================================================================
	! Partition Frame
	! ======================================================================

	material gs_partitionFrame_mat

	if iPartitionPos = PARPOS_BETW_D then
		put	-pLength / 2, 0, 15,
			-pLength / 2, gs_partitionHeight, 15,
			pLength / 2, gs_partitionHeight, 15,
			pLength / 2, 0, 15,
			-pLength / 2, 0, -1

		for cDiv = 1 to iPartitionDiv
			put	-pLength / 2 + partitionFrameWidth, fillDist * (cDiv -1) + partitionFrameWidth, 15,
				-pLength / 2 + partitionFrameWidth, fillHeight + fillDist * (cDiv -1) + partitionFrameWidth, 15,
				 pLength / 2 - partitionFrameWidth, fillHeight + fillDist * (cDiv -1) + partitionFrameWidth, 15,
				 pLength / 2 - partitionFrameWidth, fillDist * (cDiv -1) + partitionFrameWidth, 15,
				-pLength / 2 + partitionFrameWidth, fillDist * (cDiv -1) + partitionFrameWidth, -1
		next cDiv
	else
		put	-pLength / 2 - ABS(partCutModLeft), 0, 15,
			-pLength / 2 + partitionFrameWidth, 0, 15,
			-pLength / 2 + partitionFrameWidth, (gs_partitionHeight - partitionFrameWidth), 15,
			 pLength / 2 - partitionFrameWidth, (gs_partitionHeight - partitionFrameWidth), 15,
			 pLength / 2 - partitionFrameWidth, 0, 15,
			 pLength / 2 + ABS(partCutModRight), 0, 15,
			 pLength / 2 + ABS(partCutModRight), gs_partitionHeight, 15,
			-pLength / 2 - ABS(partCutModLeft), gs_partitionHeight, 15,
			-pLength / 2 - ABS(partCutModLeft), 0, -1
	endif

	rotx 90

	if ABS(partCornerCutTypeLeft) = 1 then
		addx -pLength / 2
		roty -ideskAngle / 2 * (partCornerCutTypeLeft = -1) + (180 + ideskAngle / 2) * (partCornerCutTypeLeft = 1)
		cutplane
		del 2
	endif
	if ABS(partCornerCutTypeRight) = 1 then
		addx pLength / 2
		roty 90 / 2 * (partCornerCutTypeRight = -1) + (180 - 90 / 2) * (partCornerCutTypeRight = 1)
		cutplane
		del 2
	endif

	addz -partitionFrameThk / 2
	prism_ NSP / 3, partitionFrameThk,
			get(NSP)
	del 1

	if ABS(partCornerCutTypeLeft) = 1 then cutend
	if ABS(partCornerCutTypeRight) = 1 then cutend


	! ======================================================================
	! Partition Fill
	! ======================================================================

	material gs_partition_mat

	add 0, partitionFrameWidth * (iPartitionPos = PARPOS_BETW_D), -partitionFillThk/2
	for pDiv = 1 to iPartitionDiv * (iPartitionPos = PARPOS_BETW_D) + (iPartitionPos = PARPOS_ABOVE_D)
		prism_ 4, partitionFillThk,
			-pLength / 2 + partitionFrameWidth, 0, 15,
			-pLength / 2 + partitionFrameWidth, fillHeight * (iPartitionPos = PARPOS_BETW_D) + (gs_partitionHeight - partitionFrameWidth) * (iPartitionPos = PARPOS_ABOVE_D), 15,
			 pLength / 2 - partitionFrameWidth, fillHeight * (iPartitionPos = PARPOS_BETW_D) + (gs_partitionHeight - partitionFrameWidth) * (iPartitionPos = PARPOS_ABOVE_D), 15,
			 pLength / 2 - partitionFrameWidth, 0, 15

		addy fillHeight + partitionFrameWidth
	next pDiv
	del iPartitionDiv * (iPartitionPos = PARPOS_BETW_D) + (iPartitionPos = PARPOS_ABOVE_D)
	del 1

	del 1
return



"3DHotspots":
	addz partitionElevation

	if iPartitionLoc = 1 then
		if bEnableHotspotEditingX then
			hotspot 0, gs_partitionPos_front[1][2], 0, unID, gs_partitionPos_front[1][1], 1 + 128:						unID = unID + 1
			hotspot -1, gs_partitionPos_front[1][2], 0, unID, gs_partitionPos_front[1][1], 3 + 128:						unID = unID + 1
			hotspot gs_partitionPos_front[1][1], gs_partitionPos_front[1][2], 0, unID, gs_partitionPos_front[1][1], 2:	unID = unID + 1
		endif
		if bEnableHotspotEditingY then
			hotspot gs_partitionPos_front[1][1], 0, 0, unID, gs_partitionPos_front[1][2], 1 + 128:						unID = unID + 1
			hotspot gs_partitionPos_front[1][1], -1, 0, unID, gs_partitionPos_front[1][2], 3 + 128:						unID = unID + 1
			hotspot gs_partitionPos_front[1][1], gs_partitionPos_front[1][2], 0, unID, gs_partitionPos_front[1][2], 2:	unID = unID + 1
		endif
	endif
	if iPartitionLoc = 2 then
		if bEnableHotspotEditingX then
			hotspot 0, gs_partitionPos_side1[1][2], 0, unID, gs_partitionPos_side1[1][1], 1 + 128:						unID = unID + 1
			hotspot -1, gs_partitionPos_side1[1][2], 0, unID, gs_partitionPos_side1[1][1], 3 + 128:						unID = unID + 1
			hotspot gs_partitionPos_side1[1][1], gs_partitionPos_side1[1][2], 0, unID, gs_partitionPos_side1[1][1], 2:	unID = unID + 1
		endif
		if bEnableHotspotEditingY then
			hotspot gs_partitionPos_side1[1][1], 0, 0, unID, gs_partitionPos_side1[1][2], 1 + 128:						unID = unID + 1
			hotspot gs_partitionPos_side1[1][1], -1, 0, unID, gs_partitionPos_side1[1][2], 3 + 128:						unID = unID + 1
			hotspot gs_partitionPos_side1[1][1], gs_partitionPos_side1[1][2], 0, unID, gs_partitionPos_side1[1][2], 2:	unID = unID + 1
		endif
	endif
	if iPartitionLoc = 3 then
		if bEnableHotspotEditingX then
			hotspot 0, gs_partitionPos_side2[1][2], 0, unID, gs_partitionPos_side2[1][1], 1 + 128:						unID = unID + 1
			hotspot -1, gs_partitionPos_side2[1][2], 0, unID, gs_partitionPos_side2[1][1], 3 + 128:						unID = unID + 1
			hotspot gs_partitionPos_side2[1][1], gs_partitionPos_side2[1][2], 0, unID, gs_partitionPos_side2[1][1], 2:	unID = unID + 1
		endif
		if bEnableHotspotEditingY then
			hotspot gs_partitionPos_side2[1][1], 0, 0, unID, gs_partitionPos_side2[1][2], 1 + 128:						unID = unID + 1
			hotspot gs_partitionPos_side2[1][1], -1, 0, unID, gs_partitionPos_side2[1][2], 3 + 128:						unID = unID + 1
			hotspot gs_partitionPos_side2[1][1], gs_partitionPos_side2[1][2], 0, unID, gs_partitionPos_side2[1][2], 2:	unID = unID + 1
		endif
	endif
	if iPartitionLoc = 4 then
		if bEnableHotspotEditingX then
			hotspot 0, gs_partitionPos_end[1][2], 0, unID, gs_partitionPos_end[1][1], 1 + 128:							unID = unID + 1
			hotspot -1, gs_partitionPos_end[1][2], 0, unID, gs_partitionPos_end[1][1], 3 + 128:							unID = unID + 1
			hotspot gs_partitionPos_end[1][1], gs_partitionPos_end[1][2], 0, unID, gs_partitionPos_end[1][1], 2:		unID = unID + 1
		endif
		if bEnableHotspotEditingY then
			hotspot gs_partitionPos_end[1][1], 0, 0, unID, gs_partitionPos_end[1][2], 1 + 128:							unID = unID + 1
			hotspot gs_partitionPos_end[1][1], -1, 0, unID, gs_partitionPos_end[1][2], 3 + 128:							unID = unID + 1
			hotspot gs_partitionPos_end[1][1], gs_partitionPos_end[1][2], 0, unID, gs_partitionPos_end[1][2], 2:		unID = unID + 1
		endif
	endif

	del 1
return


