
! ======================================================================
! 2D Detail Level
! ======================================================================

if bPartOfLayout or bPartOfWsSolo then
	call "2dDetailLevel" parameters	gs_detlevel_2D		= gs_detlevel_2D,
									gs_detlevel_2D_m	= gs_detlevel_2D_m,
									enable2dDetLevels	= 2 + 4 + 8 + 16 + 32
endif



! ======================================================================
! Partitions
! ======================================================================

if bPartOfLayout or bPartOfWsSolo then
	values "partitionPos" stPartitionPos
	values "iPartitionPos" 1, 2
	if GLOB_MODPAR_NAME = "partitionPos" then
		for iParPos = 1 to vardim1(stPartitionPos)
			if partitionPos = stPartitionPos[iParPos] then iPartitionPos = iParPos
		next iParPos
		parameters iPartitionPos = iPartitionPos
	else
		partitionPos = stPartitionPos[max(iPartitionPos, 1)]
		parameters partitionPos = partitionPos
	endif

	if bEnableCustPartLength then
		values "partitionLength" stPartitionLength
		values "iPartitionLength" 1, 2
		if GLOB_MODPAR_NAME = "partitionLength" then
			for iParLen = 1 to vardim1(stPartitionLength)
				if partitionLength = stPartitionLength[iParLen] then iPartitionLength = iParLen
			next iParLen
			parameters iPartitionLength = iPartitionLength
		else
			partitionLength = stPartitionLength[max(iPartitionLength, 1)]
			parameters partitionLength = partitionLength
		endif
	endif

	if iPartitionPos = PARPOS_BETW_D then
		defaultPartitionHeight = 1.15
	else
		defaultPartitionHeight = 0.4
	endif

	if GLOB_MODPAR_NAME = "partitionPos" or GLOB_MODPAR_NAME = "iPartitionPos" then
		parameters gs_partitionHeight = defaultPartitionHeight
	endif

	values "gs_partitionHeight" range[0, ]


	values "partitionBaseHeight" range[, tableTopHeight]

	if bShowPartitionParams then
		if iPartitionPos = PARPOS_BETW_D then
			values "iPartitionDiv" range [1, )

			if bEnableCustPartLength then parameters iPartitionLength = 1

			lock			"partitionLength",
							"iPartitionLength",
							"partitionLengthCustom",
							"partitionOffsetCustom"
			hideparameter 	"partitionLength",
							"iPartitionLength",
							"partitionLengthCustom",
							"partitionOffsetCustom"
		else
			lock			"iPartitionDiv",
							"partitionBaseHeight"
			hideparameter 	"iPartitionDiv",
							"partitionBaseHeight"
		endif

		if bEnableCustPartLength & iPartitionLength = PARLENGTH_DESK then
			lock			"partitionLengthCustom",
							"partitionOffsetCustom"
		else
			if bEnableCustPartLength then values "partitionLengthCustom" range (partitionFrameThk * 2, )
		endif
	else
		lock			"partitionPos",
						"iPartitionPos",
						"gs_partitionHeight",
						"partitionLength",
						"iPartitionLength",
						"partitionLengthCustom",
						"partitionOffsetCustom",
						"partitionBaseHeight",
						"iPartitionDiv",
						"gs_partition_mat",
						"gs_partitionFrame_mat"

		hideparameter 	"partitionPos",
						"iPartitionPos",
						"gs_partitionHeight",
						"partitionLength",
						"iPartitionLength",
						"partitionLengthCustom",
						"partitionOffsetCustom",
						"partitionBaseHeight",
						"iPartitionDiv",
						"gs_partition_mat",
						"gs_partitionFrame_mat"
	endif
else
	if iTableTopType = TABLETOP_L_SHAPED then
		enablePartitionTypes = 2 + 4 + 8 + 16
	else
		enablePartitionTypes = 2 + 4 + 8 + 16 + 32 + 64 + 128 + 256
	endif

	! enableTableTopTypes - possible values
	!	2		- enable None
	!	4		- enable in Front
	!	8		- enable on the Side	/ on Side 1
	!	16		- enable Both			/ on Side 2
	!	32		- enable on Side 1 & Front
	!	64		- enable on Side 2 & Front
	!	128		- enable Both Sides
	!	256		- enable in Front & both Sides

	dim partitionTypeValueList[]
	j = 1
	for i = 1 to vardim1(stPartitionType)
		if bittest(enablePartitionTypes, i) then
			put i - 1
			partitionTypeValueList[j] = stPartitionType[i]
			j = j + 1
		endif
	next i

	values "gs_partitionType" partitionTypeValueList
	values "gs_partitionType_m" get(NSP)

	if GLOB_MODPAR_NAME = "gs_partitionType" then
		for iPart = 1 to vardim1(stPartitionType)
			if gs_partitionType = stPartitionType[iPart] then gs_partitionType_m = iPart - 1
		next iPart
		parameters gs_partitionType_m = gs_partitionType_m
	else
		gs_partitionType = stPartitionType[gs_partitionType_m + 1]
		parameters gs_partitionType = gs_partitionType
	endif

	if NOT(bShowPartitionParams) then
		lock			"gs_partitionHeight",
						"gs_partitionLength_front",
						"gs_partitionLength_side1",
						"gs_partition_mat",
						"gs_partitionFrame_mat"

		hideparameter	"gs_partitionHeight",
						"gs_partitionLength_front",
						"gs_partitionLength_side1",
						"gs_partition_mat",
						"gs_partitionFrame_mat"

		if not(iTableTopType = TABLETOP_L_SHAPED) then
			lock			"gs_partitionLength_side2"
			hideparameter	"gs_partitionLength_side2"
		endif
	endif

	if iTableTopType = TABLETOP_L_SHAPED then
		if gs_partitionType_m <> 2 and gs_partitionType_m <> 3 then
			lock			"gs_partitionLength_side1"

			hideparameter	"gs_partitionLength_side1"
		endif
		if gs_partitionType_m <> 1 and gs_partitionType_m <> 3 then
			lock			"gs_partitionLength_front"

			hideparameter	"gs_partitionLength_front"
		endif
	else
		if gs_partitionType_m <> 2 and gs_partitionType_m <> 4 and gs_partitionType_m <> 6 and gs_partitionType_m <> 7 then
			lock			"gs_partitionLength_side1"

			hideparameter	"gs_partitionLength_side1"
		endif
		if gs_partitionType_m <> 1 and gs_partitionType_m <> 4 and gs_partitionType_m <> 5 and gs_partitionType_m <> 7 then
			lock			"gs_partitionLength_front"

			hideparameter	"gs_partitionLength_front"
		endif
		if gs_partitionType_m <> 3 and gs_partitionType_m <> 5 and gs_partitionType_m <> 6 and gs_partitionType_m <> 7 then
			lock			"gs_partitionLength_side2"

			hideparameter	"gs_partitionLength_side2"
		endif
	endif
endif

