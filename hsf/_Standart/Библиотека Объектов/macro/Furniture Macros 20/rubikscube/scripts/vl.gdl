
values "aLayer1"	0, 90, 180, 270	: values "iLayer1"	0, 1, 2, 3
values "aLayer3"	0, 90, 180, 270	: values "iLayer3"	0, 1, 2, 3
values "aLayer2"	0, 90, 180, 270	: values "iLayer2"	0, 1, 2, 3

values "acolumn1"	0, 90, 180, 270	: values "icolumn1"	0, 1, 2, 3
values "acolumn2"	0, 90, 180, 270	: values "icolumn2"	0, 1, 2, 3
values "acolumn3"	0, 90, 180, 270	: values "icolumn3"	0, 1, 2, 3

values "arow1"		0, 90, 180, 270	: values "irow1"	0, 1, 2, 3
values "arow2"		0, 90, 180, 270	: values "irow2"	0, 1, 2, 3
values "arow3"		0, 90, 180, 270	: values "irow3"	0, 1, 2, 3

dim _side1[3]
dim _side2[3]
dim _side3[3]
dim _side4[3]
dim _fullSide[3][3]

if GLOB_MODPAR_NAME = "aLayer1" then
	isFirstRun = 0
	n = APPLICATION_QUERY ("parameter_script", "firstoccasion_in_progress", isFirstRun)

	if isFirstRun then
		if abs(aLayer1 - aLayer1prew) < eps then 
			iLayer1 = 0
		else
			if aLayer1 - aLayer1prew < eps then
				if abs(aLayer1 + 360 - aLayer1prew - 90) < eps then iLayer1 = 1
				if abs(aLayer1 + 360 - aLayer1prew - 180) < eps then iLayer1 = 2
				if abs(aLayer1 + 360 - aLayer1prew - 270) < eps then iLayer1 = 3
			else
				if abs(aLayer1 - aLayer1prew - 90) < eps then iLayer1 = 1
				if abs(aLayer1 - aLayer1prew - 180) < eps then iLayer1 = 2
				if abs(aLayer1 - aLayer1prew - 270) < eps then iLayer1 = 3
			endif
		endif

		if not(iLayer1 = 0) then
			_rotNum		= iLayer1
			gosub "layer1_rotation"
		endif
		aLayer1prew = aLayer1

		parameters	iLayer1		= iLayer1,
					aLayer1prew	= aLayer1prew

		if check then gosub "docheck"
	endif

	parameters	iLayer1		= iLayer1,
				aLayer1		= aLayer1,
				aLayer1prew	= aLayer1prew,
				frontSide	= frontSide,
				leftSide	= leftSide,
				rearSide	= rearSide,
				rightSide	= rightSide,
				topside		= topside,	
				bottomSide	= bottomSide
endif


if GLOB_MODPAR_NAME = "aLayer2" then
	isFirstRun = 0
	n = APPLICATION_QUERY ("parameter_script", "firstoccasion_in_progress", isFirstRun)

	if isFirstRun then
		if abs(aLayer2 - aLayer2prew) < eps then 
			iLayer2 = 0
		else
			if aLayer2 - aLayer2prew < eps then
				if abs(aLayer2 + 360 - aLayer2prew - 90) < eps then iLayer2 = 1
				if abs(aLayer2 + 360 - aLayer2prew - 180) < eps then iLayer2 = 2
				if abs(aLayer2 + 360 - aLayer2prew - 270) < eps then iLayer2 = 3
			else
				if abs(aLayer2 - aLayer2prew - 90) < eps then iLayer2 = 1
				if abs(aLayer2 - aLayer2prew - 180) < eps then iLayer2 = 2
				if abs(aLayer2 - aLayer2prew - 270) < eps then iLayer2 = 3
			endif
		endif

		if not(iLayer2 = 0) then
			_rotNum		= iLayer2
			gosub "layer2_rotation"
		endif
		aLayer2prew = aLayer2

		parameters	iLayer2		= iLayer2,
					aLayer2prew	= aLayer2prew

		if check then gosub "docheck"
	endif

	parameters	iLayer2		= iLayer2,
				aLayer2		= aLayer2,
				aLayer2prew	= aLayer2prew,
				frontSide	= frontSide,
				leftSide	= leftSide,
				rearSide	= rearSide,
				rightSide	= rightSide,
				topside		= topside,	
				bottomSide	= bottomSide
endif

if GLOB_MODPAR_NAME = "aLayer3" then
	isFirstRun = 0
	n = APPLICATION_QUERY ("parameter_script", "firstoccasion_in_progress", isFirstRun)

	if isFirstRun then
		if abs(aLayer3 - aLayer3prew) < eps then 
			iLayer3 = 0
		else
			if aLayer3 - aLayer3prew < eps then
				if abs(aLayer3 + 360 - aLayer3prew - 90) < eps	then iLayer3 = 1
				if abs(aLayer3 + 360 - aLayer3prew - 180) < eps	then iLayer3 = 2
				if abs(aLayer3 + 360 - aLayer3prew - 270) < eps	then iLayer3 = 3
			else
				if abs(aLayer3 - aLayer3prew - 90) < eps then iLayer3 = 1
				if abs(aLayer3 - aLayer3prew - 180) < eps then iLayer3 = 2
				if abs(aLayer3 - aLayer3prew - 270) < eps then iLayer3 = 3
			endif
		endif

		if not(iLayer3 = 0) then
			_rotNum		= iLayer3
			gosub "layer3_rotation"
		endif
		aLayer3prew = aLayer3

		parameters	iLayer3		= iLayer3,
					aLayer3prew	= aLayer3prew

		if check then gosub "docheck"
	endif

	parameters	iLayer3		= iLayer3,
				aLayer3		= aLayer3,
				aLayer3prew	= aLayer3prew,
				frontSide	= frontSide,
				leftSide	= leftSide,
				rearSide	= rearSide,
				rightSide	= rightSide,
				topside		= topside,	
				bottomSide	= bottomSide
endif

if GLOB_MODPAR_NAME = "aColumn1" then
	isFirstRun = 0
	n = APPLICATION_QUERY ("parameter_script", "firstoccasion_in_progress", isFirstRun)

	if isFirstRun then
		if abs(aColumn1 - aColumn1prew) < eps then 
			iColumn1 = 0
		else
			if aColumn1 - aColumn1prew < eps then
				if abs(aColumn1 + 360 - aColumn1prew - 90) < eps	then iColumn1 = 1
				if abs(aColumn1 + 360 - aColumn1prew - 180) < eps	then iColumn1 = 2
				if abs(aColumn1 + 360 - aColumn1prew - 270) < eps	then iColumn1 = 3
			else
				if abs(aColumn1 - aColumn1prew - 90) < eps	then iColumn1 = 1
				if abs(aColumn1 - aColumn1prew - 180) < eps	then iColumn1 = 2
				if abs(aColumn1 - aColumn1prew - 270) < eps	then iColumn1 = 3
			endif
		endif

		if not(iColumn1 = 0) then
			_rotNum		= iColumn1
			gosub "column1_rotation"
		endif
		aColumn1prew = aColumn1

		parameters	iColumn1		= iColumn1,
					aColumn1prew	= aColumn1prew

		if check then gosub "docheck"
	endif

	parameters	iColumn1		= iColumn1,
				aColumn1		= aColumn1,
				aColumn1prew	= aColumn1prew,
				frontSide		= frontSide,
				leftSide		= leftSide,
				rearSide		= rearSide,
				rightSide		= rightSide,
				topside			= topside,	
				bottomSide		= bottomSide
endif

if GLOB_MODPAR_NAME = "aColumn2" then
	isFirstRun = 0
	n = APPLICATION_QUERY ("parameter_script", "firstoccasion_in_progress", isFirstRun)

	if isFirstRun then
		if abs(aColumn2 - aColumn2prew) < eps then 
			iColumn2 = 0
		else
			if aColumn2 - aColumn2prew < eps then
				if abs(aColumn2 + 360 - aColumn2prew - 90) < eps then iColumn2 = 1
				if abs(aColumn2 + 360 - aColumn2prew - 180) < eps then iColumn2 = 2
				if abs(aColumn2 + 360 - aColumn2prew - 270) < eps then iColumn2 = 3
			else
				if abs(aColumn2 - aColumn2prew - 90) < eps then iColumn2 = 1
				if abs(aColumn2 - aColumn2prew - 180) < eps then iColumn2 = 2
				if abs(aColumn2 - aColumn2prew - 270) < eps then iColumn2 = 3
			endif
		endif

		if not(iColumn2 = 0) then
			_rotNum		= iColumn2
			gosub "column2_rotation"
		endif
		aColumn2prew = aColumn2

		parameters	iColumn2		= iColumn2,
					aColumn2prew	= aColumn2prew

		if check then gosub "docheck"
	endif

	parameters	iColumn2		= iColumn2,
				aColumn2		= aColumn2,
				aColumn2prew	= aColumn2prew,
				frontSide		= frontSide,
				leftSide		= leftSide,
				rearSide		= rearSide,
				rightSide		= rightSide,
				topside			= topside,	
				bottomSide		= bottomSide
endif

if GLOB_MODPAR_NAME = "aColumn3" then
	isFirstRun = 0
	n = APPLICATION_QUERY ("parameter_script", "firstoccasion_in_progress", isFirstRun)

	if isFirstRun then
		if abs(aColumn3 - aColumn3prew) < eps then 
			iColumn3 = 0
		else
			if aColumn3 - aColumn3prew < eps then
				if abs(aColumn3 + 360 - aColumn3prew - 90) < eps	then iColumn3 = 1
				if abs(aColumn3 + 360 - aColumn3prew - 180) < eps	then iColumn3 = 2
				if abs(aColumn3 + 360 - aColumn3prew - 270) < eps	then iColumn3 = 3
			else
				if abs(aColumn3 - aColumn3prew - 90) < eps		then iColumn3 = 1
				if abs(aColumn3 - aColumn3prew - 180) < eps		then iColumn3 = 2
				if abs(aColumn3 - aColumn3prew - 270) < eps		then iColumn3 = 3
			endif
		endif

		if not(iColumn3 = 0) then
			_rotNum		= iColumn3
			gosub "column3_rotation"
		endif
		aColumn3prew = aColumn3

		parameters	iColumn3		= iColumn3,
					aColumn3prew	= aColumn3prew

		if check then gosub "docheck"
	endif

	parameters	iColumn3		= iColumn3,
				aColumn3		= aColumn3,
				aColumn3prew	= aColumn3prew,
				frontSide		= frontSide,
				leftSide		= leftSide,
				rearSide		= rearSide,
				rightSide		= rightSide,
				topside			= topside,	
				bottomSide		= bottomSide
endif

if GLOB_MODPAR_NAME = "aRow1" then
	isFirstRun = 0
	n = APPLICATION_QUERY ("parameter_script", "firstoccasion_in_progress", isFirstRun)

	if isFirstRun then
		if abs(aRow1 - aRow1prew) < eps then 
			iRow1 = 0
		else
			if aRow1 - aRow1prew < eps then
				if abs(aRow1 + 360 - aRow1prew - 90) < eps then iRow1 = 1
				if abs(aRow1 + 360 - aRow1prew - 180) < eps then iRow1 = 2
				if abs(aRow1 + 360 - aRow1prew - 270) < eps then iRow1 = 3
			else
				if abs(aRow1 - aRow1prew - 90) < eps then iRow1 = 1
				if abs(aRow1 - aRow1prew - 180) < eps then iRow1 = 2
				if abs(aRow1 - aRow1prew - 270) < eps then iRow1 = 3
			endif
		endif

		if not(iRow1 = 0) then
			_rotNum		= iRow1
			gosub "row1_rotation"
		endif
		aRow1prew = aRow1

		parameters	iRow1		= iRow1,
					aRow1prew	= aRow1prew

		if check then gosub "docheck"
	endif

	parameters	iRow1		= iRow1,
				aRow1		= aRow1,
				aRow1prew	= aRow1prew,
				frontSide	= frontSide,
				leftSide	= leftSide,
				rearSide	= rearSide,
				rightSide	= rightSide,
				topside		= topside,	
				bottomSide	= bottomSide
endif

if GLOB_MODPAR_NAME = "aRow2" then
	isFirstRun = 0
	n = APPLICATION_QUERY ("parameter_script", "firstoccasion_in_progress", isFirstRun)

	if isFirstRun then
		if abs(aRow2 - aRow2prew) < eps then 
			iRow2 = 0
		else
			if aRow2 - aRow2prew < eps then
				if abs(aRow2 + 360 - aRow2prew - 90) < eps then iRow2 = 1
				if abs(aRow2 + 360 - aRow2prew - 180) < eps then iRow2 = 2
				if abs(aRow2 + 360 - aRow2prew - 270) < eps then iRow2 = 3
			else
				if abs(aRow2 - aRow2prew - 90) < eps then iRow2 = 1
				if abs(aRow2 - aRow2prew - 180) < eps then iRow2 = 2
				if abs(aRow2 - aRow2prew - 270) < eps then iRow2 = 3
			endif
		endif

		if not(iRow2 = 0) then
			_rotNum		= iRow2
			gosub "row2_rotation"
		endif
		aRow2prew = aRow2

		parameters	iRow2		= iRow2,
					aRow2prew	= aRow2prew

		if check then gosub "docheck"
	endif

	parameters	iRow2		= iRow2,
				aRow2		= aRow2,
				aRow2prew	= aRow2prew,
				frontSide	= frontSide,
				leftSide	= leftSide,
				rearSide	= rearSide,
				rightSide	= rightSide,
				topside		= topside,	
				bottomSide	= bottomSide
endif

if GLOB_MODPAR_NAME = "aRow3" then
	isFirstRun = 0
	n = APPLICATION_QUERY ("parameter_script", "firstoccasion_in_progress", isFirstRun)

	if isFirstRun then
		if abs(aRow3 - aRow3prew) < eps then 
			iRow3 = 0
		else
			if aRow3 - aRow3prew < eps then
				if abs(aRow3 + 360 - aRow3prew - 90) < eps	then iRow3 = 1
				if abs(aRow3 + 360 - aRow3prew - 180) < eps	then iRow3 = 2
				if abs(aRow3 + 360 - aRow3prew - 270) < eps	then iRow3 = 3
			else
				if abs(aRow3 - aRow3prew - 90) < eps		then iRow3 = 1
				if abs(aRow3 - aRow3prew - 180) < eps		then iRow3 = 2
				if abs(aRow3 - aRow3prew - 270) < eps		then iRow3 = 3
			endif
		endif

		if not(iRow3 = 0) then
			_rotNum		= iRow3
			gosub "row3_rotation"
		endif
		aRow3prew = aRow3

		parameters	iRow3		= iRow3,
					aRow3prew	= aRow3prew

		if check then gosub "docheck"
	endif

	parameters	iRow3		= iRow3,
				aRow3		= aRow3,
				aRow3prew	= aRow3prew,
				frontSide	= frontSide,
				leftSide	= leftSide,
				rearSide	= rearSide,
				rightSide	= rightSide,
				topside		= topside,	
				bottomSide	= bottomSide
endif

if GLOB_MODPAR_NAME = "mixup" then
	gosub "reset"

	ch	= OPEN ("DateTime", "", "%S")
	n	= INPUT (ch, "", "", dstr)
	CLOSE (ch)
	tmp = split(dstr, "%N", initrnd)

	for i = 1 to initrnd
		tmp	= rnd(1)
	next i

	mixupsteps = int(rnd(15)) + 1

	DIM mixuparray[][2]
	for i = 1 to 25 + mixupsteps
		mixuparray[i][1]	= int(rnd(9)) + 1
		mixuparray[i][2]	= int(rnd(3)) + 1

		if mixuparray[i][1] = 1 then
			_rotNum		= mixuparray[i][2]
			gosub "layer1_rotation"
		else
			if mixuparray[i][1] = 2 then
				_rotNum		= mixuparray[i][2]
				gosub "layer2_rotation"
			else
				if mixuparray[i][1] = 3 then
					_rotNum		= mixuparray[i][2]
					gosub "layer3_rotation"
				else
					if mixuparray[i][1] = 4 then
						_rotNum		= mixuparray[i][2]
						gosub "column1_rotation"
					else
						if mixuparray[i][1] = 5 then
							_rotNum		= mixuparray[i][2]
							gosub "column2_rotation"
						else
							if mixuparray[i][1] = 6 then
								_rotNum		= mixuparray[i][2]
								gosub "column3_rotation"
							else
								if mixuparray[i][1] = 7 then
									_rotNum		= mixuparray[i][2]
									gosub "row1_rotation"
								else
									if mixuparray[i][1] = 8 then
										_rotNum		= mixuparray[i][2]
										gosub "row2_rotation"
									else
										if mixuparray[i][1] = 8 then
											_rotNum		= mixuparray[i][2]
											gosub "row3_rotation"
										endif
									endif
								endif
							endif
						endif
					endif
				endif
			endif
		endif
	next i

	check = 1

	parameters	mixuparray	= mixuparray,
				frontSide	= frontSide,
				leftSide	= leftSide,
				rearSide	= rearSide,
				rightSide	= rightSide,
				topside		= topside,
				bottomSide	= bottomSide,
				check		= check,
				mixup		= 0
endif

if GLOB_MODPAR_NAME = "reset" then
	gosub "reset"
endif


end

"layer1_rotation":
	for sideRot = 1 to _rotNum
		_side1[1]	= frontSide[1][1]	: _side1[2]	= frontSide[1][2]	: _side1[3]	= frontSide[1][3]
		_side2[1]	= leftSide[1][1]	: _side2[2]	= leftSide[1][2]	: _side2[3]	= leftSide[1][3]
		_side3[1]	= rearSide[1][1]	: _side3[2]	= rearSide[1][2]	: _side3[3]	= rearSide[1][3]
		_side4[1]	= rightSide[1][1]	: _side4[2]	= rightSide[1][2]	: _side4[3]	= rightSide[1][3]
	
		gosub "layerRotate"
	
		frontSide[1][1]	= _side1[1] : frontSide[1][2]	= _side1[2] : frontSide[1][3]	= _side1[3]
		leftSide[1][1]	= _side2[1] : leftSide[1][2]	= _side2[2] : leftSide[1][3]	= _side2[3]
		rearSide[1][1]	= _side3[1] : rearSide[1][2]	= _side3[2] : rearSide[1][3]	= _side3[3]
		rightSide[1][1]	= _side4[1] : rightSide[1][2]	= _side4[2] : rightSide[1][3]	= _side4[3]
	next sideRot
	
	_fullSide	= topside
	gosub "sideRotate"
	topside	= _fullSide
return

"layer2_rotation":
	for sideRot = 1 to _rotNum
		_side1[1]	= frontSide[2][1]	: _side1[2]	= frontSide[2][2]	: _side1[3]	= frontSide[2][3]
		_side2[1]	= leftSide[2][1]	: _side2[2]	= leftSide[2][2]	: _side2[3]	= leftSide[2][3]
		_side3[1]	= rearSide[2][1]	: _side3[2]	= rearSide[2][2]	: _side3[3]	= rearSide[2][3]
		_side4[1]	= rightSide[2][1]	: _side4[2]	= rightSide[2][2]	: _side4[3]	= rightSide[2][3]
	
		gosub "layerRotate"
	
		frontSide[2][1]	= _side1[1] : frontSide[2][2]	= _side1[2] : frontSide[2][3]	= _side1[3]
		leftSide[2][1]	= _side2[1] : leftSide[2][2]	= _side2[2] : leftSide[2][3]	= _side2[3]
		rearSide[2][1]	= _side3[1] : rearSide[2][2]	= _side3[2] : rearSide[2][3]	= _side3[3]
		rightSide[2][1]	= _side4[1] : rightSide[2][2]	= _side4[2] : rightSide[2][3]	= _side4[3]
	next sideRot
return

"layer3_rotation":
	for sideRot = 1 to _rotNum
		_side1[1]	= frontSide[3][1]	: _side1[2]	= frontSide[3][2]	: _side1[3]	= frontSide[3][3]
		_side2[1]	= leftSide[3][1]	: _side2[2]	= leftSide[3][2]	: _side2[3]	= leftSide[3][3]
		_side3[1]	= rearSide[3][1]	: _side3[2]	= rearSide[3][2]	: _side3[3]	= rearSide[3][3]
		_side4[1]	= rightSide[3][1]	: _side4[2]	= rightSide[3][2]	: _side4[3]	= rightSide[3][3]
	
		gosub "layerRotate"
	
		frontSide[3][1]	= _side1[1] : frontSide[3][2]	= _side1[2] : frontSide[3][3]	= _side1[3]
		leftSide[3][1]	= _side2[1] : leftSide[3][2]	= _side2[2] : leftSide[3][3]	= _side2[3]
		rearSide[3][1]	= _side3[1] : rearSide[3][2]	= _side3[2] : rearSide[3][3]	= _side3[3]
		rightSide[3][1]	= _side4[1] : rightSide[3][2]	= _side4[2] : rightSide[3][3]	= _side4[3]
	next sideRot
	
	_fullSide	= bottomSide
	gosub "sideRotate_inverse"
	bottomSide	= _fullSide
return

"column1_rotation":
	for sideRot = 1 to _rotNum
		_side1[1]	= frontSide[1][1]	: _side1[2]	= frontSide[2][1]	: _side1[3]	= frontSide[3][1]
		_side2[1]	= bottomSide[1][1]	: _side2[2]	= bottomSide[2][1]	: _side2[3]	= bottomSide[3][1]
		_side3[1]	= rearSide[3][3]	: _side3[2]	= rearSide[2][3]	: _side3[3]	= rearSide[1][3]
		_side4[1]	= topside[1][1]		: _side4[2]	= topside[2][1]		: _side4[3]	= topside[3][1]
	
		gosub "layerRotate"
	
		frontSide[1][1]		= _side1[1] : frontSide[2][1]	= _side1[2] : frontSide[3][1]	= _side1[3]
		bottomSide[1][1]	= _side2[1] : bottomSide[2][1]	= _side2[2] : bottomSide[3][1]	= _side2[3]
		rearSide[3][3]		= _side3[1]	: rearSide[2][3]	= _side3[2] : rearSide[1][3]	= _side3[3]
		topside[1][1]		= _side4[1]	: topside[2][1]		= _side4[2] : topside[3][1]		= _side4[3]
	next sideRot

	_fullSide	= leftSide
	gosub "sideRotate"
	leftSide	= _fullSide
return

"column2_rotation":
	for sideRot = 1 to _rotNum
		_side1[1]	= frontSide[1][2]	: _side1[2]	= frontSide[2][2]	: _side1[3]	= frontSide[3][2]
		_side2[1]	= bottomSide[1][2]	: _side2[2]	= bottomSide[2][2]	: _side2[3]	= bottomSide[3][2]
		_side3[1]	= rearSide[3][2]	: _side3[2]	= rearSide[2][2]	: _side3[3]	= rearSide[1][2]
		_side4[1]	= topside[1][2]		: _side4[2]	= topside[2][2]		: _side4[3]	= topside[3][2]
	
		gosub "layerRotate"
	
		frontSide[1][2]		= _side1[1] : frontSide[2][2]	= _side1[2] : frontSide[3][2]	= _side1[3]
		bottomSide[1][2]	= _side2[1] : bottomSide[2][2]	= _side2[2] : bottomSide[3][2]	= _side2[3]
		rearSide[3][2]		= _side3[1]	: rearSide[2][2]	= _side3[2] : rearSide[1][2]	= _side3[3]
		topside[1][2]		= _side4[1]	: topside[2][2]		= _side4[2] : topside[3][2]		= _side4[3]
	next sideRot
return

"column3_rotation":
	for sideRot = 1 to _rotNum
		_side1[1]	= frontSide[1][3]	: _side1[2]	= frontSide[2][3]	: _side1[3]	= frontSide[3][3]
		_side2[1]	= bottomSide[1][3]	: _side2[2]	= bottomSide[2][3]	: _side2[3]	= bottomSide[3][3]
		_side3[1]	= rearSide[3][1]	: _side3[2]	= rearSide[2][1]	: _side3[3]	= rearSide[1][1]
		_side4[1]	= topside[1][3]		: _side4[2]	= topside[2][3]		: _side4[3]	= topside[3][3]
	
		gosub "layerRotate"
	
		frontSide[1][3]		= _side1[1] : frontSide[2][3]	= _side1[2] : frontSide[3][3]	= _side1[3]
		bottomSide[1][3]	= _side2[1] : bottomSide[2][3]	= _side2[2] : bottomSide[3][3]	= _side2[3]
		rearSide[3][1]		= _side3[1]	: rearSide[2][1]	= _side3[2] : rearSide[1][1]	= _side3[3]
		topside[1][3]		= _side4[1]	: topside[2][3]		= _side4[2] : topside[3][3]		= _side4[3]
	next sideRot
	
	_fullSide	= rightSide
	gosub "sideRotate_inverse"
	rightSide	= _fullSide
return

"row1_rotation":
	for sideRot = 1 to _rotNum
		_side1[1]	= topside[1][3]		: _side1[2]	= topside[1][2]		: _side1[3]	= topside[1][1]
		_side2[1]	= leftSide[1][1]	: _side2[2]	= leftSide[2][1]	: _side2[3]	= leftSide[3][1]
		_side3[1]	= bottomSide[3][3]	: _side3[2]	= bottomSide[3][2]	: _side3[3]	= bottomSide[3][1]
		_side4[1]	= rightSide[1][3]	: _side4[2]	= rightSide[2][3]	: _side4[3]	= rightSide[3][3]
	
		gosub "layerRotate"
	
		topside[1][1]		= _side1[1] : topside[1][2]		= _side1[2] : topside[1][3]		= _side1[3]
		leftSide[1][1]		= _side2[1] : leftSide[2][1]	= _side2[2] : leftSide[3][1]	= _side2[3]
		bottomSide[3][1]	= _side3[1] : bottomSide[3][2]	= _side3[2] : bottomSide[3][3]	= _side3[3]
		rightSide[1][3]		= _side4[1] : rightSide[2][3]	= _side4[2] : rightSide[3][3]	= _side4[3]
	next sideRot
	
	_fullSide	= rearSide
	gosub "sideRotate"
	rearSide	= _fullSide
return

"row2_rotation":
	for sideRot = 1 to _rotNum
		_side1[1]	= topside[2][3]		: _side1[2]	= topside[2][2]		: _side1[3]	= topside[2][1]
		_side2[1]	= leftSide[1][2]	: _side2[2]	= leftSide[2][2]	: _side2[3]	= leftSide[3][2]
		_side3[1]	= bottomSide[2][3]	: _side3[2]	= bottomSide[2][2]	: _side3[3]	= bottomSide[2][1]
		_side4[1]	= rightSide[1][2]	: _side4[2]	= rightSide[2][2]	: _side4[3]	= rightSide[3][2]
	
		gosub "layerRotate"
	
		topside[2][1]		= _side1[1] : topside[2][2]		= _side1[2] : topside[2][3]		= _side1[3]
		leftSide[1][2]		= _side2[1] : leftSide[2][2]	= _side2[2] : leftSide[3][2]	= _side2[3]
		bottomSide[2][1]	= _side3[1] : bottomSide[2][2]	= _side3[2] : bottomSide[2][3]	= _side3[3]
		rightSide[1][2]		= _side4[1] : rightSide[2][2]	= _side4[2] : rightSide[3][2]	= _side4[3]
	next sideRot

return

"row3_rotation":
	for sideRot = 1 to _rotNum
		_side1[1]	= topside[3][3]		: _side1[2]	= topside[3][2]		: _side1[3]	= topside[3][1]
		_side2[1]	= leftSide[1][3]	: _side2[2]	= leftSide[2][3]	: _side2[3]	= leftSide[3][3]
		_side3[1]	= bottomSide[1][3]	: _side3[2]	= bottomSide[1][2]	: _side3[3]	= bottomSide[1][1]
		_side4[1]	= rightSide[1][1]	: _side4[2]	= rightSide[2][1]	: _side4[3]	= rightSide[3][1]
	
		gosub "layerRotate"
	
		topside[3][1]		= _side1[1] : topside[3][2]		= _side1[2] : topside[3][3]		= _side1[3]
		leftSide[1][3]		= _side2[1] : leftSide[2][3]	= _side2[2] : leftSide[3][3]	= _side2[3]
		bottomSide[1][1]	= _side3[1] : bottomSide[1][2]	= _side3[2] : bottomSide[1][3]	= _side3[3]
		rightSide[1][1]		= _side4[1] : rightSide[2][1]	= _side4[2] : rightSide[3][1]	= _side4[3]
	next sideRot
	
	_fullSide	= frontSide
	gosub "sideRotate_inverse"
	frontSide	= _fullSide
return

"layerRotate":
	tempVar		= _side1[1]
	_side1[1]	= _side4[1]
	_side4[1]	= _side3[1]
	_side3[1]	= _side2[1]
	_side2[1]	= tempVar

	tempVar		= _side1[2]
	_side1[2]	= _side4[2]
	_side4[2]	= _side3[2]
	_side3[2]	= _side2[2]
	_side2[2]	= tempVar

	tempVar		= _side1[3]
	_side1[3]	= _side4[3]
	_side4[3]	= _side3[3]
	_side3[3]	= _side2[3]
	_side2[3]	= tempVar
return

"sideRotate":
	for sideRot = 1 to _rotNum
		tempVar			= _fullSide[3][3]
		_fullSide[3][3]	= _fullSide[1][3]
		_fullSide[1][3]	= _fullSide[1][1]
		_fullSide[1][1]	= _fullSide[3][1]
		_fullSide[3][1]	= tempVar
	
		tempVar			= _fullSide[3][2]
		_fullSide[3][2]	= _fullSide[2][3]
		_fullSide[2][3]	= _fullSide[1][2]
		_fullSide[1][2]	= _fullSide[2][1]
		_fullSide[2][1]	= tempVar
	next sideRot
return

"sideRotate_inverse":
	for sideRot = 1 to _rotNum
		tempVar			= _fullSide[3][3]
		_fullSide[3][3]	= _fullSide[3][1]
		_fullSide[3][1]	= _fullSide[1][1]
		_fullSide[1][1]	= _fullSide[1][3]
		_fullSide[1][3]	= tempVar
	
		tempVar			= _fullSide[3][2]
		_fullSide[3][2]	= _fullSide[2][1]
		_fullSide[2][1]	= _fullSide[1][2]
		_fullSide[1][2]	= _fullSide[2][3]
		_fullSide[2][3]	= tempVar
	next sideRot
return

"reset":
	for i = 1 to 3
		for j = 1 to 3
			frontSide[i][j]		= TILEMAT_RED
			leftSide[i][j]		= TILEMAT_YELLOW
			rearSide[i][j]		= TILEMAT_ORANGE
			rightSide[i][j]		= TILEMAT_WHITE
			topside[i][j]		= TILEMAT_GREEN
			bottomSide[i][j]	= TILEMAT_BLUE
		next j
	next i

	parameters	frontSide	= frontSide,
				leftSide	= leftSide,
				rearSide	= rearSide,
				rightSide	= rightSide,
				topside		= topside,
				bottomSide	= bottomSide

	aLayer1			= 0 : aLayer2		= 0 : aLayer3		= 0
	aLayer1prew		= 0 : aLayer2prew	= 0 : aLayer3prew	= 0
	iLayer1			= 0 : iLayer2		= 0 : iLayer3		= 0
	
	aColumn1		= 0 : aColumn2		= 0 : aColumn3		= 0
	aColumn1prew	= 0 : aColumn2prew	= 0 : aColumn3prew	= 0
	iColumn1		= 0 : iColumn2		= 0 : iColumn3		= 0
	
	aRow1			= 0 : aRow2			= 0 : aRow3			= 0
	aRow1prew		= 0 : aRow2prew		= 0 : aRow3prew		= 0
	iRow1			= 0 : iRow2			= 0 : iRow3			= 0

	parameters	aLayer1		= aLayer1, aLayer1prew		= aLayer1prew, iLayer1		= iLayer1,
				aLayer2		= aLayer2, aLayer2prew		= aLayer2prew, iLayer2		= iLayer2,
				aLayer3		= aLayer3, aLayer3prew		= aLayer3prew, iLayer3		= iLayer3,
				aColumn1	= aColumn1, aColumn1prew	= aColumn1prew, iColumn1	= iColumn1,
				aColumn2	= aColumn2, aColumn2prew	= aColumn2prew, iColumn2	= iColumn2,
				aColumn3	= aColumn3, aColumn3prew	= aColumn3prew, iColumn3	= iColumn3,
				aRow1		= aRow1, aRow1prew			= aRow1prew, iRow1			= iRow1,
				aRow2		= aRow2, aRow2prew			= aRow2prew, iRow2			= iRow2,
				aRow3		= aRow3, aRow3prew			= aRow3prew, iRow3			= iRow3


	reset		= 0
	check		= 0
	solvedside	= 0
	parameters	reset		= reset,
				check		= check,
				solvedside	= solvedside
return

"docheck":
	DIM testside[3][3]
	solvedside = 0

	testside = frontside
	gosub "sidechecker"

	testside = rightside
	gosub "sidechecker"

	testside = rearside
	gosub "sidechecker"

	testside = leftside
	gosub "sidechecker"

	testside = topside
	gosub "sidechecker"

	testside = bottomSide
	gosub "sidechecker"

	parameters solvedside = solvedside
return

"sidechecker":
	if testside[1][1] = testside[1][2] & \
		testside[1][1] = testside[1][3] & \
		testside[1][1] = testside[2][1] & \
		testside[1][1] = testside[2][2] & \
		testside[1][1] = testside[2][3] & \
		testside[1][1] = testside[3][1] & \
		testside[1][1] = testside[3][2] & \
		testside[1][1] = testside[3][3] then solvedside = solvedside + 1
return


