
! Switch_symbol macro

pen gs_cont_pen
fill gs_fill_type

hotspot2  0,   0
if bHotspotsOnCircle then
	hotspot2 -circleDiameter/2,        0
	hotspot2  circleDiameter/2,        0
	hotspot2  0,          circleDiameter/2
	hotspot2  0,         -circleDiameter/2
endif

poly2_b  2, 2, gs_fill_pen, gs_back_pen,
		0,   0,   900,
		circleDiameter/2, 360, 4001
circle2 0, 0, circleDiameter/2		! better segmentation!

if bPilotLight then
	rot2 45
	if iSwitchType = SWITCH_BUTTON then
		mul2 0.67, 0.67
	else
		mul2 1,1
	endif
	line2 -circleDiameter/2, 0, circleDiameter/2, 0
	line2 0, -circleDiameter/2, 0, circleDiameter/2
	del 2
endif

if iSwitchType = SWITCH_NORMAL or \
		iSwitchType = SWITCH_TWOWAY or \
		iSwitchType = SWITCH_INTERM or \
		iSwitchType = SWITCH_MULTIP then

	if iSwitchType = SWITCH_NORMAL or iSwitchType = SWITCH_MULTIP then
		nMainLines = 1
	else
		nMainLines = 2
	endif
	if iSwitchType = SWITCH_INTERM or iSwitchType = SWITCH_MULTIP then
		nMirror = 2
	else
		nMirror = 1
	endif
	for iMirror = 1 to nMirror
		rot2 -30
		for iLine = 1 to nMainLines
			line2 0, circleDiameter/2, 0, 2.14*circleDiameter			!*circleDiameter*2/0.7963
			add2 0, 2.14*circleDiameter
			hotspot2 0, 0
			if nFlags > 0 then
				hotspot2 0.534*circleDiameter, -0.0433*circleDiameter
				for iFlag = 1 to nFlags
					line2    0, 0, 0.534*circleDiameter, -0.0433*circleDiameter
					add2 0, -0.1641*circleDiameter
				next iFlag
				del 1
			endif
			if bPullCord then
				rot2 30
				line2 0, 0, 0, -0.6279*circleDiameter
				add2 0, -0.6279*circleDiameter
				poly2_b 4, 1+2, gs_fill_pen, gs_back_pen,
						 0,    -0.226*circleDiameter,   1,
						 0.1256*circleDiameter,  0,      1,
						-0.1256*circleDiameter,  0,      1,
						 0,    -0.226*circleDiameter,  -1
				del 2
			endif
			if nFlags > 0 then
				del nFlags
			endif

			rot2 180
		next iLine
		del nMainLines+1
		mul2 -1, 1
	next iMirror
	del nMirror

else

	if iSwitchType = SWITCH_BUTTON then
		circle2 0, 0, 0.67*circleDiameter/2

		if bRestricted then
			hotspot2 -1.22*circleDiameter/2, 1.22*circleDiameter/2
			hotspot2  1.22*circleDiameter/2, 1.22*circleDiameter/2
			hotspot2  2.11*circleDiameter/2, 0
			hotspot2 -2.11*circleDiameter/2, 0
			line2    -2.11*circleDiameter/2, 0,    -1.22*circleDiameter/2, 0
			line2    -1.22*circleDiameter/2, 0,    -1.22*circleDiameter/2, 1.22*circleDiameter/2
			line2     2.11*circleDiameter/2, 0,     1.22*circleDiameter/2, 0
			line2     1.22*circleDiameter/2, 0,     1.22*circleDiameter/2, 1.22*circleDiameter/2
			line2    -1.22*circleDiameter/2, 1.22*circleDiameter/2, 1.22*circleDiameter/2, 1.22*circleDiameter/2
		endif
	endif
endif

if bDimmer then
	hotspot2 -0.9352*circleDiameter,  0.8055*circleDiameter
	line2     0.9128*circleDiameter, -0.7292*circleDiameter, -0.9352*circleDiameter, 0.8055*circleDiameter
	line2    -0.9352*circleDiameter,  0.8055*circleDiameter, -0.5593*circleDiameter, 0.7429*circleDiameter
	line2    -0.9352*circleDiameter,  0.8055*circleDiameter, -0.7786*circleDiameter, 0.414*circleDiameter
endif

if bText then
	! Oriented View
	angleViewRot = 0
	rrr = REQUEST ("View_Rotangle", "", angleViewRot)
	totalRotate = (SYMB_ROTANGLE + angleViewRot) MOD 360

	nTrans = 0

	! style
	pen tpen
	define style "textStyle"	fontType, 10/GLOB_SCALE*fsz, 5,
							gs_text_style_bold + 2 * gs_text_style_italic + 4 * gs_text_style_underline

	style "textStyle"

	! Text Rotation
	if typeTextRotation_m = 2 then								! Readable
		if (totalRotate > (gs_readable_angle + EPS) & totalRotate < (gs_readable_angle + 180 + eps)) then
			rot2 180
			nTrans = nTrans + 1
		endif
	else
		if typeTextRotation_m = 1 then							! Horizontal
			rot2 totalRotate * (SYMB_MIRRORED - not(SYMB_MIRRORED))	! 1/-1
			nTrans = nTrans + 1
		endif
	endif

	text2 0, 0, txt
	del nTrans
endif
