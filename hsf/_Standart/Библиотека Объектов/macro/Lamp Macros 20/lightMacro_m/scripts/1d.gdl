
EPS = 0.0001

dim stColorPreset[16]
	stColorPreset[ 1] = `Специальный`
	stColorPreset[ 2] = `Восход / Закат`
	stColorPreset[ 3] = `Раннее Утро / Вечер`
	stColorPreset[ 4] = `Лунный Свет`
	stColorPreset[ 5] = `Горизонтальный Дневной Свет`
	stColorPreset[ 6] = `Вертикальный Дневной Свет`
	stColorPreset[ 7] = `Солнечный Свет`
	stColorPreset[ 8] = `Облачный День`
	stColorPreset[ 9] = `Голубое Небо`
	stColorPreset[10] = `Свет Свечи`
	stColorPreset[11] = `Лампа Накаливания 40W`
	stColorPreset[12] = `Лампа Накаливания 100W`
	stColorPreset[13] = `Теплый Белый Дневной Свет`
	stColorPreset[14] = `Галогенная Лампа`
	stColorPreset[15] = `Холодный Белый Дневной Свет`
	stColorPreset[16] = `Лампа Дневного Света`

dim stGenVisibility[4]
	stGenVisibility[1] = `Нет`
	stGenVisibility[2] = `Видимый`
	stGenVisibility[3] = `Объемный`
	stGenVisibility[4] = `Объемный Инвертированный`

dim stDetAreaShape[8]
	stDetAreaShape[1] = `Диск`
	stDetAreaShape[2] = `Прямоугольник`
	stDetAreaShape[3] = `Сфера`
	stDetAreaShape[4] = `Цилиндр`
	stDetAreaShape[5] = `Куб`
	stDetAreaShape[6] = `Полусфера`
	stDetAreaShape[7] = `Линия`
	stDetAreaShape[8] = `Перпендикулярный Цилиндр`

dim stPhoUnit[2]
	stPhoUnit[1] = `люмен`
	stPhoUnit[2] = `кандела`

!!!dim stDetFalloff[5]
!!!	stDetFalloff[1] = `None`
!!!	stDetFalloff[2] = `Inverse Square`
!!!	stDetFalloff[3] = `Linear`
!!!	stDetFalloff[4] = `Step`
!!!	stDetFalloff[5] = `Inverse Square Clamped`

dim stGradientRGBInterpol[8]
	stGradientRGBInterpol[1] = `Сглаженная Узловая`
	stGradientRGBInterpol[2] = `Кубическая Узловая`
	stGradientRGBInterpol[3] = `Кубическая со Смещением`
	stGradientRGBInterpol[4] = `Линейная Узловая`
	stGradientRGBInterpol[5] = `Линейная`
	stGradientRGBInterpol[6] = `Нет`
	stGradientRGBInterpol[7] = `Экспоненциальное Повышение`
	stGradientRGBInterpol[8] = `Экспоненциальное Понижение`

!!!dim stCauFalloff[6]
!!!	stCauFalloff[1] = `None`
!!!	stCauFalloff[2] = `Linear`
!!!	stCauFalloff[3] = `Inverse`
!!!	stCauFalloff[4] = `Inverse Square`
!!!	stCauFalloff[5] = `Inverse Cubic`
!!!	stCauFalloff[6] = `Step`

!!!dim stNoiKind[4]
!!!	stNoiKind[1] = `None`
!!!	stNoiKind[2] = `Illumination`
!!!	stNoiKind[3] = `Visible Light`
!!!	stNoiKind[4] = `Both`

dim stNoiType[4]
	stNoiType[1] = `Шум`
	stNoiType[2] = `Мягкая Турбулентность`
	stNoiType[3] = `Жесткая Турбулентность`
	stNoiType[4] = `Волновая Турбулентность`

dim stLenGlow[23]
	stLenGlow[ 1] = `Отсутствует`
	stLenGlow[ 2] = `По Умолчанию`
	stLenGlow[ 3] = `Cinema 4D`
	stLenGlow[ 4] = `Широкоугольный`
	stLenGlow[ 5] = `Увеличение`
	stLenGlow[ 6] = `Hi-8`
	stLenGlow[ 7] = `Видеокамера`
	stLenGlow[ 8] = `Прожектор`
	stLenGlow[ 9] = `Артефакт`
	stLenGlow[10] = `Звезда 1`
	stLenGlow[11] = `Звезда 2`
	stLenGlow[12] = `Звезда 3`
	stLenGlow[13] = `Пурпурный`
	stLenGlow[14] = `Фонарь`
	stLenGlow[15] = `Солнце 1`
	stLenGlow[16] = `Солнце 2`
	stLenGlow[17] = `Серый`
	stLenGlow[18] = `Голубой 1`
	stLenGlow[19] = `Голубой 2`
	stLenGlow[20] = `Красный`
	stLenGlow[21] = `Желто-Зеленый 1`
	stLenGlow[22] = `Желто-Зеленый 2`
	stLenGlow[23] = `Свеча`

dim stLenReflexes[16]
	stLenReflexes[ 1] = `Отсутствует`
	stLenReflexes[ 2] = `По Умолчанию`
	stLenReflexes[ 3] = `Cinema 4D`
	stLenReflexes[ 4] = `Широкоугольный`
	stLenReflexes[ 5] = `Увеличение`
	stLenReflexes[ 6] = `Hi-8`
	stLenReflexes[ 7] = `Видеокамера`
	stLenReflexes[ 8] = `Прожектор`
	stLenReflexes[ 9] = `Артефакт`
	stLenReflexes[10] = `Звезда 1`
	stLenReflexes[11] = `Звезда 2`
	stLenReflexes[12] = `Звезда 3`
	stLenReflexes[13] = `Пурпурный`
	stLenReflexes[14] = `Фонарь 1`
	stLenReflexes[15] = `Фонарь 2`
	stLenReflexes[16] = `Фонарь 3`

dim stModelType[2]
	stModelType[1] = `Каркас`
	stModelType[2] = `Оттененная`

dim stLightForm[2]
	stLightForm[1] = `Окружность`
	stLightForm[2] = `Эллипс`


dim stSpecLampTypes[]
	stSpecLampTypes[ 1]	= `Лампа Накаливания`
	stSpecLampTypes[ 2]	= `Точечный Потолочный Светильник`
	stSpecLampTypes[ 3]	= `Потолочное Освещение`
	stSpecLampTypes[ 4]	= `Люстра`
	stSpecLampTypes[ 5]	= `Подвес Цепной`
	stSpecLampTypes[ 6]	= `Подвес Штоковый`
	stSpecLampTypes[ 7]	= `Подвес Кабельный`
	stSpecLampTypes[ 8]	= `Стена с Лампой Накаливания`
	stSpecLampTypes[ 9]	= `Долговечная Лампа Накаливания`
	stSpecLampTypes[10]	= `Светильник Аварийного Освещения с Лампой Накаливания`
	stSpecLampTypes[11]	= `Потолочный Светильник Аварийного Освещения с Флуоресцентной Лампой`
	stSpecLampTypes[12]	= `Потолочный Светильник с Двумя Флуоресцентными Лампами`
	stSpecLampTypes[13]	= `Потолочный Светильник с Тремя Флуоресцентными Лампами`
	stSpecLampTypes[14]	= `Потолочный Светильник с Четырьмя Флуоресцентными Лампами`
	stSpecLampTypes[15]	= `Настенный Светильник с Флуоресцентной Лампой `
	stSpecLampTypes[16]	= `Настенный Светильник с Двумя Флуоресцентными Лампами`
	stSpecLampTypes[17]	= `Вертикальный Настенный Светильник с Флуоресцентной Лампой`
	stSpecLampTypes[18]	= `Потолочный Светильник Аварийного Освещения с Флуоресцентной Лампой`
	stSpecLampTypes[19]	= `Потолочный Светильник с Долговечной Флуоресцентной Лампой `
	stSpecLampTypes[20]	= `Потолочный Светильник с Двумя Долговечными Флуоресцентными Лампами`
	stSpecLampTypes[21]	= `Линейный Прожектор Освещения Стены`
	stSpecLampTypes[22]	= `Точечный Светильник`
	stSpecLampTypes[23]	= `Наружные Газоразрядные Лампы`
	stSpecLampTypes[24]	= `Потолочный Светильник Аварийного Освещения с Флуоресцентной Лампой`
	stSpecLampTypes[25]	= `Настенный Светильник Аварийного Освещения с Флуоресцентной Лампой`
	stSpecLampTypes[26]	= `Вертикальный Настенный Светильник Аварийного Освещения`
	stSpecLampTypes[27]	= `Вертикальный Настенный Автономный Светильник Аварийного Освещения`

! const values for parameter : iSpecSymbolType
SPEC_SYMBOL_HAS_NO_2D				= 0
SPEC_INCADESCENT					= 1
SPEC_DOWNLIGHT						= 2
SPEC_CEILING						= 3
SPEC_CHANDELIER						= 4
SPEC_PENDANT_CHAIN					= 5
SPEC_PENDANT_PIPE					= 6
SPEC_PENDANT_CORD					= 7
SPEC_INCADESCENT_WALL				= 8
SPEC_INCADESCENT_LONGLAST			= 9
SPEC_INCADESCENT_EMERGENCY			= 10
SPEC_FLUORESCENT_1_CEILING			= 11
SPEC_FLUORESCENT_2_CEILING			= 12
SPEC_FLUORESCENT_3_CEILING			= 13
SPEC_FLUORESCENT_4_CEILING			= 14
SPEC_FLUORESCENT_1_WALL				= 15
SPEC_FLUORESCENT_2_WALL				= 16
SPEC_FLUORESCENT_VERT_WALL			= 17
SPEC_FLUORESCENT_EMERGENCY_CEIL		= 18
SPEC_FLUORESCENT_LONGLAST_1_CEIL	= 19
SPEC_FLUORESCENT_LONGLAST_2_CEIL	= 20
SPEC_WALL_WASHER					= 21
SPEC_SPOT							= 22
SPEC_OUTDOOR_HID					= 23
SPEC_EMERGENCY_FLOURESCENT_WALL		= 24
SPEC_EMERGENCY_FLOURESCENT_CEIL		= 25
SPEC_EMERGENCY_VERT_WALL			= 26
SPEC_EMERGENCY_VERT_WALL_CIRC		= 27


GENTYPE_OMNI			= 1
GENTYPE_SPOT			= 2
GENTYPE_AREA			= 3
GENTYPE_INFINITE		= 4
GENTYPE_IES				= 5

LIGHTGROUP_GENERAL_LIGHT		= 1
LIGHTGROUP_BUILTIN_OMNI			= 2
LIGHTGROUP_BUILTIN_SPOT			= 3
LIGHTGROUP_BUILTIN_VIS_AREA		= 4
LIGHTGROUP_BUILTIN_NONVIS_AREA	= 5
LIGHTGROUP_BUILTIN_FALLOFF		= 6

SHADOWTYPE_NONE			= 1
SHADOWTYPE_SOFT			= 2
SHADOWTYPE_HARD			= 3
SHADOWTYPE_AREA			= 4

AREASHAPE_DISC			= 1
AREASHAPE_RECT			= 2
AREASHAPE_SPHERE		= 3
AREASHAPE_CYLIND		= 4
AREASHAPE_CUBE			= 5
AREASHAPE_HEMISPHERE	= 6
AREASHAPE_LINE			= 7
AREASHAPE_PCYLIND		= 8

PHOTOUNIT_LUMEN			= 1
PHOTOUNIT_CANDELA		= 2

SYMBOL_REALISTIC		= 1
SYMBOL_ELECTRIC			= 2
SYMBOL_RCP				= 3
SYMBOL_BYMVO			= 4

ROTTYPE_TARGETPOSITION	= 1
ROTTYPE_ROTATIONANGLE	= 2

LINETYPE_SIMPLE			= 1
LINETYPE_DASHED			= 2

GEOMETRY_SPHERE			= 1
GEOMETRY_CONE			= 2

EDITTYPE_FALLOFF		= 1
EDITTYPE_FALLOFFANGLE	= 2
EDITTYPE_NEARCLIPFROM	= 3
EDITTYPE_NEARCLIPTO		= 4
EDITTYPE_FARCLIPFROM	= 5
EDITTYPE_FARCLIPTO		= 6

MODEL_WIREFRAME			= 1
MODEL_SHADED			= 2

LINE3D_DIRECTION_HORIZ	= 1
LINE3D_DIRECTION_VERT	= 2

FALLOFFTYPE_OMNI		= 1
FALLOFFTYPE_SPOT		= 2
FALLOFFTYPE_AREA		= 3
FALLOFFTYPE_CONE		= 4
FALLOFFTYPE_PYRAMID		= 5

LIGHTFORM_CIRCLE		= 1
LIGHTFORM_ELLIPSE		= 2

if iLightGroupType = LIGHTGROUP_BUILTIN_OMNI then			iC4dGenType = GENTYPE_OMNI
if iLightGroupType = LIGHTGROUP_BUILTIN_SPOT then			iC4dGenType = GENTYPE_SPOT
if iLightGroupType = LIGHTGROUP_BUILTIN_VIS_AREA then		iC4dGenType = GENTYPE_AREA
if iLightGroupType = LIGHTGROUP_BUILTIN_NONVIS_AREA then	iC4dGenType = GENTYPE_AREA

bBuiltInLight				= (iLightGroupType <> LIGHTGROUP_GENERAL_LIGHT)
bEnableLightRotation		= 0
iSymbolRotationType			= 2
bEnableLightHotspotEditing	= 0
bEnableTargetHotspotEditing	= 0

if NOT(bBuiltInLight) then
	if	iC4dGenType = GENTYPE_SPOT |\
		iC4dGenType = GENTYPE_AREA |\
		iC4dGenType = GENTYPE_INFINITE |\
		iC4dGenType = GENTYPE_IES |\
		(iC4dGenType = GENTYPE_OMNI and bGenVisibleLight) |\
		c4dDetOnlyZ then bEnableLightRotation	= 1
endif
if bEnableLightRotation then
	if	iC4dGenType = GENTYPE_SPOT |\
		iC4dGenType = GENTYPE_AREA and NOT(bWindowLight) |\
		iC4dGenType = GENTYPE_INFINITE then

		iSymbolRotationType		= ROTTYPE_TARGETPOSITION
		if iC4dGenType = GENTYPE_INFINITE then
			if bSunObject then
				targetPosX	= 0
				targetPosY	= 0
				targetPosZ	= 0
			else
				lightPosX	= 0
				lightPosY	= 0
				lightPosZ	= 0
			endif
		endif
		if	iC4dGenType = GENTYPE_AREA then
			lightPosX	= 0
			lightPosY	= 0
			lightPosZ	= 0
		endif
		if	iC4dGenType = GENTYPE_SPOT |\
			(iC4dGenType = GENTYPE_INFINITE and bSunObject and bSetSunManually) then bEnableLightHotspotEditing = 1
		if	iC4dGenType = GENTYPE_SPOT |\
			iC4dGenType = GENTYPE_AREA |\
			(iC4dGenType = GENTYPE_INFINITE and NOT(bSunObject)) then bEnableTargetHotspotEditing = 1
	else
		iSymbolRotationType		= ROTTYPE_ROTATIONANGLE
	endif
endif

if NOT(bBuiltInLight) then
	if iC4dGenType = GENTYPE_OMNI then	iFalloffType = FALLOFFTYPE_OMNI
	if iC4dGenType = GENTYPE_SPOT then	iFalloffType = FALLOFFTYPE_SPOT
	if iC4dGenType = GENTYPE_AREA then	iFalloffType = FALLOFFTYPE_AREA
endif

bEnableClipping			= 0
if	iC4dGenType = GENTYPE_SPOT |\
	iC4dGenType = GENTYPE_OMNI then bEnableClipping	= 1

if NOT(bBuiltInLight) then
	if	iC4dGenType = GENTYPE_SPOT |\
		(iC4dGenType = GENTYPE_AREA and iC4dDetAreaShape <> AREASHAPE_LINE and NOT(bWindowLight)) then bEnable3DModelTypes	= 1
endif

bEnableZRotationIn3D	= 0
if (iC4dGenType = GENTYPE_AREA and NOT(bWindowLight)) then
	if	iC4dDetAreaShape = AREASHAPE_RECT |\
		iC4dDetAreaShape = AREASHAPE_CUBE |\
		iC4dDetAreaShape = AREASHAPE_HEMISPHERE |\
		iC4dDetAreaShape = AREASHAPE_PCYLIND then
		bEnableZRotationIn3D	= 1
	else
		rotAngleZ	= 0
	endif
else
	rotAngleZ	= 0
endif

iC4dDetFalloff		= 1
_bDetShowFalloff	= bDetShowFalloff
if iC4dGenType = GENTYPE_AREA and bWindowLight then
	iC4dDetFalloff		= 3
else
	if bDetShowFalloff then
		iC4dDetFalloff		= 2
	endif
endif

_c4dDetAspectRatio	= c4dDetAspectRatio
if iC4dGenType = GENTYPE_SPOT then _c4dDetAspectRatio	= (iLightForm = LIGHTFORM_CIRCLE) + c4dDetAspectRatio * (iLightForm = LIGHTFORM_ELLIPSE)
if iC4dGenType = GENTYPE_AREA then
	if NOT(bWindowLight) then
		_c4dDetAspectRatio	= bLinkAreaSizes + c4dDetAspectRatio * NOT(bLinkAreaSizes)
	else
		_c4dDetAspectRatio	= 1
	endif
endif


_c4dDetAreaX	= c4dDetAreaX
_c4dDetAreaY	= c4dDetAreaY
_c4dDetAreaZ	= c4dDetAreaZ
if NOT(bBuiltInLight) then
	if iC4dGenType = GENTYPE_OMNI then
		_c4dDetAreaX	= 0.05
		_c4dDetAreaY	= 0.05
		_c4dDetAreaZ	= 0.05
	endif
	if iC4dGenType = GENTYPE_SPOT then
		iC4dDetAreaShape = AREASHAPE_SPHERE
		_c4dDetAreaX	= 0.03
		_c4dDetAreaY	= 0.03
		_c4dDetAreaZ	= 0.03
	endif
endif

_c4dDetRadius	= c4dDetRadius

_c4dDetAddGrain = c4dDetAddGrain
if iC4dGenType = GENTYPE_AREA and bWindowLight then _c4dDetAddGrain	= 0

if iC4dGenType = GENTYPE_AREA and bWindowLight then iC4dDetAreaShape = 2

_bEnableIllumination	= 1
_bShowIllumination2D	= 0
_bShowIllumination3D	= 0
if iC4dGenType = GENTYPE_INFINITE and NOT(bSunObject) then
	_bEnableIllumination	= 0
endif
if _bEnableIllumination then
	if bShowIllumination2D then _bShowIllumination2D	= 1
	if bShowIllumination3D then _bShowIllumination3D	= 1
endif

bLinkAreaSizeXY 	= 0
bLinkAreaSizeXZ 	= 0
bLinkAreaSizeYZ 	= 0
bLinkAreaSizeXYZ 	= 0
if iC4dGenType = GENTYPE_AREA then
	if NOT(bWindowLight) then
		if iC4dDetAreaShape = AREASHAPE_DISC		then	bLinkAreaSizeXY 	= 1
		if iC4dDetAreaShape = AREASHAPE_RECT		then	bLinkAreaSizeXY 	= 1
		if iC4dDetAreaShape = AREASHAPE_SPHERE		then	bLinkAreaSizeXYZ 	= 1
		if iC4dDetAreaShape = AREASHAPE_CYLIND		then	bLinkAreaSizeXY 	= 1
		if iC4dDetAreaShape = AREASHAPE_CUBE		then	bLinkAreaSizeXYZ 	= 1
		if iC4dDetAreaShape = AREASHAPE_HEMISPHERE	then	bLinkAreaSizeXZ 	= 1
		if iC4dDetAreaShape = AREASHAPE_PCYLIND		then	bLinkAreaSizeYZ 	= 1
		if iC4dDetAreaShape = AREASHAPE_LINE		then	bLinkAreaSizeXYZ 	= 1
	else
		bLinkAreaSizeXY 	= 1
	endif
endif

bIESFileExist	= (c4dPhoIESFile <> "")

! ==============================================================================
! 2D Symbol Types
! ==============================================================================

bEnableSymbolTypes		= 1
if iC4dGenType = GENTYPE_INFINITE | iC4dGenType = GENTYPE_AREA and bWindowLight then bEnableSymbolTypes	= 0

if iLightGroupType = LIGHTGROUP_GENERAL_LIGHT then
	call "GetPlanViewGlobals" parameters 		gs_symbtype_2D_m	= gs_symbtype_2D_m,
												bSymbolTypeReturn	= 1,
												returned_parameters gs_symbtype_2D_m
endif

iEnableLampSymbolTypes = 0
if gs_symbtype_2D_m = SYMBOL_ELECTRIC then
	if iC4dGenType = GENTYPE_AREA and NOT(bWindowLight) then	iEnableLampSymbolTypes = 2 + 4 + 8
	if iC4dGenType = GENTYPE_OMNI then	iEnableLampSymbolTypes = 2 + 4
	if iC4dGenType = GENTYPE_SPOT then	iEnableLampSymbolTypes = 2 + 4
	if iC4dGenType = GENTYPE_IES then	iEnableLampSymbolTypes = 2 + 4 + 8
else
	if iC4dGenType = GENTYPE_AREA and NOT(bWindowLight) then	iEnableLampSymbolTypes = 2 + 4 + 8 + 16 + 32 + 64 + 128 + 256
	if iC4dGenType = GENTYPE_OMNI then	iEnableLampSymbolTypes = 2 + 4 + 8
	if iC4dGenType = GENTYPE_SPOT then	iEnableLampSymbolTypes = 2 + 4 + 8 + 16 + 32 + 64
	if iC4dGenType = GENTYPE_IES then	iEnableLampSymbolTypes = 2 + 4 + 8 + 16 + 32 + 64 + 128 + 256
endif


! ==============================================================================
! Special Symbol Types
! ==============================================================================

bEnableSpecSymbolTypes		= 0
if LibraryLangCode = "JPN" then
	if	iC4dGenType = GENTYPE_AREA and NOT(bWindowLight) | \
		iC4dGenType = GENTYPE_OMNI | \
		iC4dGenType = GENTYPE_SPOT | \
		iC4dGenType = GENTYPE_IES then

		if gs_symbtype_2D_m = SYMBOL_ELECTRIC | gs_symbtype_2D_m = SYMBOL_RCP then
			bEnableSpecSymbolTypes	= 1
		endif
	endif
endif

if not(bEnableSpecSymbolTypes) then
	_specialSymbolType				= SPEC_SYMBOL_HAS_NO_2D
	bEnableTextOnRealisticSymbol	= 1
else
	_specialSymbolType				= iSpecSymbolType
	bEnableTextOnRealisticSymbol	= 0
endif


! ==============================================================================
! Color Presets
! ==============================================================================

if iColorPreset = 1 then
	iLightColorRed		= gs_color_red * 255
	iLightColorGreen	= gs_color_green * 255
	iLightColorBlue		= gs_color_blue * 255
endif
if iColorPreset = 2 then
	iLightColorRed		= 255
	iLightColorGreen	= 150
	iLightColorBlue		= 58
endif
if iColorPreset = 3 then
	iLightColorRed		= 255
	iLightColorGreen	= 216
	iLightColorBlue		= 180
endif
if iColorPreset = 4 then
	iLightColorRed		= 255
	iLightColorGreen	= 230
	iLightColorBlue		= 210
endif
if iColorPreset = 5 then
	iLightColorRed		= 255
	iLightColorGreen	= 245
	iLightColorBlue		= 225
endif
if iColorPreset = 6 then
	iLightColorRed		= 255
	iLightColorGreen	= 255
	iLightColorBlue		= 251
endif
if iColorPreset = 7 then
	iLightColorRed		= 245
	iLightColorGreen	= 251
	iLightColorBlue		= 255
endif
if iColorPreset = 8 then
	iLightColorRed		= 205
	iLightColorGreen	= 225
	iLightColorBlue		= 255
endif
if iColorPreset = 9 then
	iLightColorRed		= 185
	iLightColorGreen	= 220
	iLightColorBlue		= 255
endif
if iColorPreset = 10 then
	iLightColorRed		= 255
	iLightColorGreen	= 125
	iLightColorBlue		= 30
endif
if iColorPreset = 11 then
	iLightColorRed		= 255
	iLightColorGreen	= 160
	iLightColorBlue		= 80
endif
if iColorPreset = 12 then
	iLightColorRed		= 255
	iLightColorGreen	= 180
	iLightColorBlue		= 105
endif
if iColorPreset = 13 then
	iLightColorRed		= 255
	iLightColorGreen	= 199
	iLightColorBlue		= 110
endif
if iColorPreset = 14 then
	iLightColorRed		= 255
	iLightColorGreen	= 225
	iLightColorBlue		= 180
endif
if iColorPreset = 15 then
	iLightColorRed		= 255
	iLightColorGreen	= 240
	iLightColorBlue		= 210
endif
if iColorPreset = 16 then
	iLightColorRed		= 205
	iLightColorGreen	= 225
	iLightColorBlue		= 255
endif


! ==============================================================================
! Light Quality parameter
! ==============================================================================

if NOT(bBuiltInLight) then
	if iLightQuality = 1 then	c4dDetSamples	= 16
	if iLightQuality = 2 then	c4dDetSamples	= 30
	if iLightQuality = 3 then	c4dDetSamples	= 60
	if iLightQuality = 4 then	c4dDetSamples	= 120
	if iLightQuality = 5 then	c4dDetSamples	= 200
	if iLightQuality = 6 then	c4dDetSamples	= 350
	if iLightQuality = 7 then	c4dDetSamples	= 500
	if iLightQuality = 8 then	c4dDetSamples	= 650
	if iLightQuality = 9 then	c4dDetSamples	= 800
	if iLightQuality = 10 then	c4dDetSamples	= 1000
endif

! ==============================================================================
! C4D Shadow parameters
! ==============================================================================

iC4dGenShadowType	= 0
if bGenShadow then iC4dGenShadowType = 4

c4dShaAccuracy		= 0
c4dShaMinSamples	= 0
c4dShaMaxSamples	= 0

if NOT(bBuiltInLight) then iShadowQualityGroupType = 1

if iShadowQuality = 1 then	c4dShaAccuracy	= 50
if iShadowQuality = 2 then	c4dShaAccuracy	= 50
if iShadowQuality = 3 then	c4dShaAccuracy	= 50
if iShadowQuality = 4 then	c4dShaAccuracy	= 50
if iShadowQuality = 5 then	c4dShaAccuracy	= 50
if iShadowQuality = 6 then	c4dShaAccuracy	= 50
if iShadowQuality = 7 then	c4dShaAccuracy	= 50
if iShadowQuality = 8 then	c4dShaAccuracy	= 50
if iShadowQuality = 9 then	c4dShaAccuracy	= 40
if iShadowQuality = 10 then	c4dShaAccuracy	= 85

if iShadowQualityGroupType = 1 then
	if iShadowQuality = 1 then
		c4dShaMinSamples	= 4
		c4dShaMaxSamples	= 25
	endif
	if iShadowQuality = 2 then
		c4dShaMinSamples	= 8
		c4dShaMaxSamples	= 50
	endif
	if iShadowQuality = 3 then
		c4dShaMinSamples	= 25
		c4dShaMaxSamples	= 100
	endif
	if iShadowQuality = 4 then
		c4dShaMinSamples	= 50
		c4dShaMaxSamples	= 150
	endif
	if iShadowQuality = 5 then
		c4dShaMinSamples	= 75
		c4dShaMaxSamples	= 200
	endif
	if iShadowQuality = 6 then
		c4dShaMinSamples	= 100
		c4dShaMaxSamples	= 300
	endif
	if iShadowQuality = 7 then
		c4dShaMinSamples	= 150
		c4dShaMaxSamples	= 500
	endif
	if iShadowQuality = 8 then
		c4dShaMinSamples	= 250
		c4dShaMaxSamples	= 1000
	endif
	if iShadowQuality = 9 then
		c4dShaMinSamples	= 500
		c4dShaMaxSamples	= 2000
	endif
	if iShadowQuality = 10 then
		c4dShaMinSamples	= 500
		c4dShaMaxSamples	= 2000
	endif
endif
if iShadowQualityGroupType = 2 then
	if iShadowQuality = 1 then
		c4dShaMinSamples	= 4
		c4dShaMaxSamples	= 10
	endif
	if iShadowQuality = 2 then
		c4dShaMinSamples	= 8
		c4dShaMaxSamples	= 25
	endif
	if iShadowQuality = 3 then
		c4dShaMinSamples	= 16
		c4dShaMaxSamples	= 50
	endif
	if iShadowQuality = 4 then
		c4dShaMinSamples	= 30
		c4dShaMaxSamples	= 100
	endif
	if iShadowQuality = 5 then
		c4dShaMinSamples	= 40
		c4dShaMaxSamples	= 150
	endif
	if iShadowQuality = 6 then
		c4dShaMinSamples	= 60
		c4dShaMaxSamples	= 200
	endif
	if iShadowQuality = 7 then
		c4dShaMinSamples	= 100
		c4dShaMaxSamples	= 400
	endif
	if iShadowQuality = 8 then
		c4dShaMinSamples	= 150
		c4dShaMaxSamples	= 600
	endif
	if iShadowQuality = 9 then
		c4dShaMinSamples	= 200
		c4dShaMaxSamples	= 800
	endif
	if iShadowQuality = 10 then
		c4dShaMinSamples	= 200
		c4dShaMaxSamples	= 800
	endif
endif
if iShadowQualityGroupType = 3 then
	if iShadowQuality = 1 then
		c4dShaMinSamples	= 8
		c4dShaMaxSamples	= 25
	endif
	if iShadowQuality = 2 then
		c4dShaMinSamples	= 16
		c4dShaMaxSamples	= 50
	endif
	if iShadowQuality = 3 then
		c4dShaMinSamples	= 30
		c4dShaMaxSamples	= 100
	endif
	if iShadowQuality = 4 then
		c4dShaMinSamples	= 40
		c4dShaMaxSamples	= 150
	endif
	if iShadowQuality = 5 then
		c4dShaMinSamples	= 60
		c4dShaMaxSamples	= 200
	endif
	if iShadowQuality = 6 then
		c4dShaMinSamples	= 100
		c4dShaMaxSamples	= 400
	endif
	if iShadowQuality = 7 then
		c4dShaMinSamples	= 150
		c4dShaMaxSamples	= 600
	endif
	if iShadowQuality = 8 then
		c4dShaMinSamples	= 200
		c4dShaMaxSamples	= 800
	endif
	if iShadowQuality = 9 then
		c4dShaMinSamples	= 400
		c4dShaMaxSamples	= 1200
	endif
	if iShadowQuality = 10 then
		c4dShaMinSamples	= 400
		c4dShaMaxSamples	= 1200
	endif
endif


! ==============================================================================
! C4D Visibility parameters
! ==============================================================================

c4dVisSampleDistance = 0
if iVisibeLightQuality = 1 then		c4dVisSampleDistance = 10
if iVisibeLightQuality = 2 then		c4dVisSampleDistance = 1
if iVisibeLightQuality = 3 then		c4dVisSampleDistance = 0.1
if iVisibeLightQuality = 4 then		c4dVisSampleDistance = 0.05
if iVisibeLightQuality = 5 then		c4dVisSampleDistance = 0.03
if iVisibeLightQuality = 6 then		c4dVisSampleDistance = 0.025
if iVisibeLightQuality = 7 then		c4dVisSampleDistance = 0.02
if iVisibeLightQuality = 8 then		c4dVisSampleDistance = 0.01
if iVisibeLightQuality = 9 then		c4dVisSampleDistance = 0.005
if iVisibeLightQuality = 10 then	c4dVisSampleDistance = 0.001



! ==============================================================================
! C4D Photometric parameters
! ==============================================================================

if iC4dPhoUnit = PHOTOUNIT_LUMEN then
	c4dPhoIntensity = photoIntensityLumen
else
	c4dPhoIntensity = photoIntensityCandela
endif



! ==============================================================================
! C4D Caustic parameters
! ==============================================================================

iC4dCauFalloff		= 1
if bCauShowFalloff then iC4dCauFalloff = 4

if c4dPhoPhotometric then
	_c4dCauOuterDistance	= 10
else
	_c4dCauOuterDistance	= _c4dDetRadius
endif



! ==============================================================================
! C4D Noise parameters
! ==============================================================================

iC4dNoiKind			= 1
if bNoiseIllumination then
	if bNoiseVisibility then
		iC4dNoiKind	= 4
	else
		iC4dNoiKind	= 2
	endif
else
	if bNoiseVisibility then iC4dNoiKind	= 3
endif


! ==============================================================================
! Calculating for rotation
! ==============================================================================

if iSymbolRotationType = ROTTYPE_TARGETPOSITION then
	if iC4dGenType = GENTYPE_INFINITE and bSunObject then
		if GLOB_SCRIPT_TYPE <> 5 & NOT(bSetSunManually) then
			angleSunAzimuth		= GLOB_SUN_AZIMUTH
			angleSunAltitude	= GLOB_SUN_ALTITUDE

			lightPosZ	= targetLineLength3D * SIN(angleSunAltitude)

			targetLineLength2D = targetLineLength3D * COS(angleSunAltitude)

			lightPosX	= targetLineLength2D * COS(angleSunAzimuth)
			lightPosY	= targetLineLength2D * SIN(angleSunAzimuth)
		endif
	else
		targetLineLength3D	= SQR((targetPosX - lightPosX)**2 + (targetPosY - lightPosY)**2 + (targetPosZ - lightPosZ)**2)
		targetLineLength2D	= SQR((targetPosX - lightPosX)**2 + (targetPosY - lightPosY)**2)
	endif

	if ABS(targetPosX - lightPosX) < EPS and ABS(targetPosY - lightPosY) < EPS and ABS(targetPosZ - lightPosZ) < EPS then
		coneRotY		= 0
		coneRotZ		= 0
	endif

	if ABS(targetPosY - lightPosY) > EPS then
		if targetPosY > lightPosY then
			coneRotZ	= 90
		else
			coneRotZ	= -90
		endif
	else
		coneRotZ		= 0
	endif
	if ABS(targetPosZ - lightPosZ) > EPS then
		if targetPosZ < lightPosZ then
			coneRotY	= ATN(SQR((targetPosX - lightPosX)**2 + (targetPosY - lightPosY)**2) / (targetPosZ - lightPosZ))
		else
			coneRotY	= 180 + ATN(SQR((targetPosX - lightPosX)**2 + (targetPosY - lightPosY)**2) / (targetPosZ - lightPosZ))
		endif
	else
		coneRotY		= -90
	endif
	if ABS(targetPosX - lightPosX) > EPS then
		if targetPosX > lightPosX then
			coneRotZ	= ATN((targetPosY - lightPosY) / (targetPosX - lightPosX))
		else
			coneRotZ	= 180 + ATN((targetPosY - lightPosY) / (targetPosX - lightPosX))
		endif
	endif

	bTargetLineIsVertical	= 1
	if ABS(targetPosX - lightPosX) > EPS | ABS(targetPosY - lightPosY) > EPS then bTargetLineIsVertical	= 0

	bTargetLineIsHorizontal	= 0
	if ABS(targetPosZ - lightPosZ) < EPS then bTargetLineIsHorizontal = 1

	if ABS(targetPosX - lightPosX) > EPS then
		if targetPosX > lightPosX then
			if targetPosY > lightPosY then
				targetAngle2D	= ATN((targetPosY - lightPosY) / (targetPosX - lightPosX)) + 180
			else
				targetAngle2D	= ATN((targetPosY - lightPosY) / (targetPosX - lightPosX)) + 180
			endif
		else
			if targetPosY > lightPosY then
				targetAngle2D	= ATN((targetPosY - lightPosY) / (targetPosX - lightPosX)) + 360
			else
				targetAngle2D	= ATN((targetPosY - lightPosY) / (targetPosX - lightPosX))
			endif
		endif
	else
		if ABS(targetPosY - lightPosY) > EPS then
			if targetPosY > lightPosY then
				targetAngle2D	= -90
			else
				targetAngle2D	= 90
			endif
		else
			targetAngle2D	= 0
		endif
	endif
else
	targetLineLength3D		= 0.6

	bTargetLineIsHorizontal	= 0
	if ABS(rotAngleX) < EPS | ABS(rotAngleX - 180) < EPS then bTargetLineIsHorizontal = 1

	if bWindowLight then
		bShapeIsReversedIn2D	= SIN(rotAngleX) < 0
		targetLineLength2D		= targetLineLength3D * COS(rotAngleX)

		bTargetLineIsVertical	= 0
		if ABS(ABS(SIN(rotAngleX)) - 1) < eps then
			bTargetLineIsVertical	= 1
		endif

		if COS(rotAngleX) > 0 then
			targetAngle2D	= -90
		else
			targetAngle2D	= 90
		endif

		if GLOB_SCRIPT_TYPE <> 5 & NOT(bSetSunManually) then
			angleSunAzimuth		= GLOB_SUN_AZIMUTH
			angleSunAltitude	= GLOB_SUN_ALTITUDE
		endif
	else
		targetLineLength2D		= targetLineLength3D * SIN(rotAngleX)

		bTargetLineIsVertical	= 1
		if ABS(rotAngleX) > eps and ABS(rotAngleX - 180) > eps then
			if	iC4dGenType = GENTYPE_INFINITE |\
				iC4dGenType = GENTYPE_AREA |\
				iC4dGenType = GENTYPE_IES |\
				c4dDetOnlyZ then bTargetLineIsVertical	= 0
		endif

		if rotAngleX > 0 and rotAngleX < 180 then
			targetAngle2D	= -90
		else
			targetAngle2D	= 90
		endif
	endif
endif



! ==============================================================================
! 2D, 3D Symbol settings
! ==============================================================================

dashedLineLength		= 0.05
tempSpaceLength			= 0.1
if GLOB_SCRIPT_TYPE = 2 then
	if (GLOB_CONTEXT = 2 | GLOB_CONTEXT = 22) then
		dashedLineLength		= 0.05 * GLOB_SCALE / 100
		tempSpaceLength			= 0.1 * GLOB_SCALE / 100
	endif
endif

if iC4dGenType = GENTYPE_IES then
	crossHairLineLengthHor		= 0.15 * (bTargetLineIsVertical + 1)
	crossHairLineLengthVer		= 0.05 * (bTargetLineIsVertical + 1)
else
	crossHairLineLengthHor		= 0.05 * (bTargetLineIsVertical + 1)
	crossHairLineLengthVer		= 0.05 * (bTargetLineIsVertical + 1)
endif
crossHairLineLengthDia	= 0.05
arrowLineLength			= 0.1
arrowAngle				= 60

penCrossHair			= gs_cont_pen
penTargetLine			= gs_cont_pen
penSphere				= gs_cont_pen
penCone					= gs_cont_pen

targetLineExtensionLength	= 0
if iC4dGenType = GENTYPE_INFINITE and NOT(bSunObject) then targetLineExtensionLength = 0.5

sunRadius		= 0.5
sunBeamOffset	= 0.1
sunBeamLength	= 0.4

