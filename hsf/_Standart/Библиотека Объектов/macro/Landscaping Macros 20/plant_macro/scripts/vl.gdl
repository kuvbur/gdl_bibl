
call "plantName_2D" parameters txt_show = txt_show,
		txt = txt,
		fontType = fontType,
		fontSizeFixed_mm = fontSizeFixed_mm,
		fontSizeFixed_pt = fontSizeFixed_pt,
		txt_pen = txt_pen,
		bBold = bBold,
		bItalic = bItalic,
		bUnderLined = bUnderLined,
		txt_pos_x = txt_pos_x,
		txt_pos_y = txt_pos_y,
		typeTextRotation_m = typeTextRotation_m,
		gs_readable_angle = gs_readable_angle


if iViewType2D = SIDE_VIEW | iViewType2D = SIDE_VIEW_SYMB then
	values "gs_ui_current_page" 10, 11, 13, 14
else
	values "gs_ui_current_page" 10, 11, 12, 13, 14
endif

if not(bCalledAsTabPage) then
	call "FM_types" parameters all
										
	values{2} "iViewType2D" TOP_VIEW, 		_stViewType2D[1],
							SIDE_VIEW,		_stViewType2D[2],
							TOP_VIEW_SYMB, 	_stViewType2D[3],
							SIDE_VIEW_SYMB, _stViewType2D[4]
	
	values{2} "iViewType3D" TOP_VIEW, 	_stViewType3D[1],
							SIDE_VIEW, 	_stViewType3D[2]
						
	
	values "iOpacity" range[0, 100]
	
	if not(bCustomPic3D) then
		hideparameter "gs_picture_name"
		Lock		  "gs_picture_name"
	endif
	
	if not(bCustomPic2D) then
		hideparameter "gs_picture_name_2D"
		Lock		  "gs_picture_name_2D"
	endif
	
	if iViewType2D = TOP_VIEW | iViewType2D = TOP_VIEW_SYMB then
		lock "iSideViewPic2D", "iSideViewSymb"
		hideparameter "iSideViewPic2D", "iSideViewSymb"
		if  not(bShowasBitmap) then 
			lock "iViewType3D", "iPic3D",
				 "iOpacity", "elevation",
				 "bCustomPic3D", "gs_picture_name",
				 "gs_shadow"
			hideparameter "iViewType3D", "iPic3D",
					 "iOpacity", "elevation",
					 "bCustomPic3D", "gs_picture_name",
					 "gs_shadow"
		endif
		if bCustomPic3D then
			lock  "iPic3D"
			hideparameter "iPic3D"
		endif
		if iViewType3D = SIDE_VIEW then
			lock "elevation"
			hideparameter "elevation"
		endif
	else
		lock "ZZYZX", "iTopViewSymb", "gs_3D_representation"
		hideparameter "iTopViewSymb", "gs_3D_representation"
	endif
	
	if iViewType2D = TOP_VIEW | iViewType2D = SIDE_VIEW then
		lock "iTopViewSymb", "iSideViewSymb",
			 "gs_cont_pen", "gs_fill_type", "gs_fill_pen", "gs_back_pen"
		hideparameter "iTopViewSymb", "iSideViewSymb",
					  "gs_cont_pen", "gs_fill_type", "gs_fill_pen", "gs_back_pen"
	
		if iViewType2D = TOP_VIEW then
			lock "iSideViewPic2D"
			hideparameter "iSideViewPic2D"
		else
			lock "iTopViewPic2D"
			hideparameter "iTopViewPic2D"
		endif
		if bCustomPic2D then
			lock "iTopViewPic2D", "iSideViewPic2D"
			hideparameter "iTopViewPic2D", "iSideViewPic2D"
		endif
	else
		lock "iTopViewPic2D", "iSideViewPic2D", "bCustomPic2D", "gs_picture_name_2D"
		hideparameter "iTopViewPic2D", "iSideViewPic2D", "bCustomPic2D", "gs_picture_name_2D"
	endif
	
	values{2} "iTopViewSymb" 1, stTopViewSymb[1],
							2, 	stTopViewSymb[2],
							3,  stTopViewSymb[3],
							4, 	stTopViewSymb[4],
							5, 	stTopViewSymb[5],
							6, 	stTopViewSymb[6],
							7, 	stTopViewSymb[7],
							8, 	stTopViewSymb[8],
							9, 	stTopViewSymb[9],
							10, stTopViewSymb[10],
							11, stTopViewSymb[11],
							12, stTopViewSymb[12],
							13, stTopViewSymb[13],
							14, stTopViewSymb[14],
							15, stTopViewSymb[15],
							16, stTopViewSymb[16],
							17, stTopViewSymb[17],
							18, stTopViewSymb[18],
							19, stTopViewSymb[19],
							20, stTopViewSymb[20],
							21, stTopViewSymb[21],
							22, stTopViewSymb[22],
							23, stTopViewSymb[23],
							24, stTopViewSymb[24],
							25, stTopViewSymb[25],
							26, stTopViewSymb[26],
							27, stTopViewSymb[27],
							28, stTopViewSymb[28],
							29, stTopViewSymb[29]

	if iPlantType = TYPE_DEC then
		values{2} "iTreeType" 	TYPE_1,	 	stTreeType1,
								TYPE_2,	 	stTreeType2,
								TYPE_3,	 	stTreeType3,
								TYPE_4,	 	stTreeType4,
								TYPE_5,	 	stTreeType5
	
		values{2} "iSideViewSymb" 	1, 	stsideViewSymb[1],
									2, 	stsideViewSymb[2],
									3, 	stsideViewSymb[3],
									4, 	stsideViewSymb[4],
									5, 	stsideViewSymb[5],
									6, 	stsideViewSymb[6],
									7, 	stsideViewSymb[7],
									8, 	stsideViewSymb[8],
									9, 	stsideViewSymb[9],
									10, stsideViewSymb[10],
									11, stsideViewSymb[11],
									12, stsideViewSymb[12],
									13, stsideViewSymb[13],
									14, stsideViewSymb[14],
									15, stsideViewSymb[15],
									16, stsideViewSymb[16],
									17, stsideViewSymb[17],
									18, stsideViewSymb[18],
									19, stsideViewSymb[19],
									20, stsideViewSymb[20],
									21, stsideViewSymb[21],
									22, stsideViewSymb[22],
									23, stsideViewSymb[23],
									24, stsideViewSymb[24],
									25, stsideViewSymb[25],
									26, stsideViewSymb[26],
									27, stsideViewSymb[27],
									28, stsideViewSymb[28],
									29, stsideViewSymb[29],
									30, stsideViewSymb[30],
									31, stsideViewSymb[31],
									32, stsideViewSymb[32],
									33, stsideViewSymb[33],
									34, stsideViewSymb[34],
									35, stsideViewSymb[35],
									36, stsideViewSymb[36],
									37, stsideViewSymb[37],
									38, stsideViewSymb[38],
									39, stsideViewSymb[39],
									40, stsideViewSymb[40]


		if iTreeType = TYPE_4 then										! Type Cherry
			gosub "values4Season"
		else
			gosub "values3Season"
		endif
	endif
	
	if iPlantType = TYPE_PINE then
		values{2} "iTreeType" 	TYPE_1,	 	stTreeType1,
								TYPE_2,	 	stTreeType2,
								TYPE_3,	 	stTreeType3,
								TYPE_4,	 	stTreeType4
	
		values{2} "iSideViewSymb" 	1, 	stsideViewSymb[1],
									2, 	stsideViewSymb[2],
									3, 	stsideViewSymb[3],
									4, 	stsideViewSymb[4],
									5, 	stsideViewSymb[5],
									6, 	stsideViewSymb[6],
									7, 	stsideViewSymb[7],
									8, 	stsideViewSymb[8]
		if iTreeType = TYPE_1 then										! Type General
			gosub "valuesPineGen"
		else
			gosub "values1Season"
		endif

	endif
	
	if iPlantType = TYPE_SHRUB then
		values{2} "iTreeType" 	TYPE_1, 	stTreeType1,
								TYPE_2, 	stTreeType2,
								TYPE_3, 	stTreeType3,
								TYPE_4, 	stTreeType4
	
		values{2} "iSideViewSymb" 	1, 	stsideViewSymb[1],
									2, 	stsideViewSymb[2],
									3, 	stsideViewSymb[3],
									4, 	stsideViewSymb[4],
									5, 	stsideViewSymb[5],
									6, 	stsideViewSymb[6],
									7, 	stsideViewSymb[7],
									8, 	stsideViewSymb[8],
									9, 	stsideViewSymb[9],
									10, stsideViewSymb[10],
									11, stsideViewSymb[11],
									12, stsideViewSymb[12]
		if iTreeType = TYPE_4 then										! Type Rose
			gosub "values4Season"
		else
			gosub "values3Season"
		endif
	endif
	
	if iPlantType = TYPE_EVERGR then
		values{2} "iTreeType" 	TYPE_1, 	stTreeType1,
								TYPE_2, 	stTreeType2,
								TYPE_3, 	stTreeType3,
								TYPE_4, 	stTreeType4,
								TYPE_5, 	stTreeType5
	
		values{2} "iSideViewSymb" 	1, 	stsideViewSymb[1],
									2, 	stsideViewSymb[2],
									3, 	stsideViewSymb[3],
									4, 	stsideViewSymb[4],
									5, 	stsideViewSymb[5],
									6, 	stsideViewSymb[6]

		if iTreeType = TYPE_2 | iTreeType = TYPE_3 then					! Type General2 and General3
			gosub "values2Season"
		else
			gosub "values1Season"
		endif
	endif
	
	if iPlantType = TYPE_HOUSE then
		values{2} "iTreeType" 	TYPE_1,		stTreeType1,
								TYPE_2, 	stTreeType2,
								TYPE_3,	 	stTreeType3,
								TYPE_4, 	stTreeType4

		values{2} "iSideViewSymb" 	1, 	stsideViewSymb[1],
									2, 	stsideViewSymb[2],
									3, 	stsideViewSymb[3],
									4, 	stsideViewSymb[4]
		gosub "values1Season"

	endif

	if iPlantType = TYPE_PALM then
		values{2} "iTreeType" 	TYPE_1,		stTreeType1,
								TYPE_2, 	stTreeType2,
								TYPE_3,	 	stTreeType3,
								TYPE_4, 	stTreeType4,
								TYPE_5,	 	stTreeType5

		values{2} "iSideViewSymb" 	1, 	stsideViewSymb[1],
									2, 	stsideViewSymb[2],
									3, 	stsideViewSymb[3],
									4, 	stsideViewSymb[4],
									5, 	stsideViewSymb[5],
									6, 	stsideViewSymb[6]
		gosub "values1Season"
	endif
	
	if GLOB_MODPAR_NAME = "iTreeType" then
		if iTreeType = TYPE_1 then
			A = DefSizeValues[1][1]
			if  iViewType2D = TOP_VIEW | iViewType2D = TOP_VIEW_SYMB then
				B = DefSizeValues[1][2]
			else
				B = DefSizeValues[1][3]
			endif
			ZZYZX = DefSizeValues[1][3]
			backupB = DefSizeValues[1][4]
		endif
		if iTreeType = TYPE_2 then
			A = DefSizeValues[2][1]
			if  iViewType2D = TOP_VIEW | iViewType2D = TOP_VIEW_SYMB then
				B = DefSizeValues[2][2]
			else
				B = DefSizeValues[2][3]
			endif
			ZZYZX = DefSizeValues[2][3]
			backupB = DefSizeValues[2][4]
		endif
		if iTreeType = TYPE_3 then
			A = DefSizeValues[3][1]
			if  iViewType2D = TOP_VIEW | iViewType2D = TOP_VIEW_SYMB then
				B = DefSizeValues[3][2]
			else
				B = DefSizeValues[3][3]
			endif
			ZZYZX = DefSizeValues[3][3]
			backupB = DefSizeValues[3][4]
		endif
		if iTreeType = TYPE_4 then
			A = DefSizeValues[4][1]
			if  iViewType2D = TOP_VIEW | iViewType2D = TOP_VIEW_SYMB then
				B = DefSizeValues[4][2]
			else
				B = DefSizeValues[4][3]
			endif
			ZZYZX = DefSizeValues[4][3]
			backupB = DefSizeValues[4][4]
		endif
		if iTreeType = TYPE_5 then
			A = DefSizeValues[5][1]
			if  iViewType2D = TOP_VIEW | iViewType2D = TOP_VIEW_SYMB then
				B = DefSizeValues[5][2]
			else
				B = DefSizeValues[5][3]
			endif
			ZZYZX = DefSizeValues[5][3]
			backupB = DefSizeValues[5][4]
		endif
		parameters A = A,
					B = B,
					ZZYZX = ZZYZX,
					backupB = backupB
	endif
	
	if GLOB_MODPAR_NAME = "temp_AA" then
		A = temp_AA * 2
		parameters A = A
	else
		temp_AA = A/2
		parameters temp_AA = temp_AA
	endif

	if iViewType2D = TOP_VIEW | iViewType2D = TOP_VIEW_SYMB then
		if GLOB_MODPAR_NAME = "temp_BB" | GLOB_MODPAR_NAME = "iViewType2D" then
			B = temp_BB * 2
			backupB = temp_BB * 2
			parameters B = B, backupB = backupB 
		else
			temp_BB = B/2
			backupB = B
			parameters temp_BB = temp_BB, backupB = backupB 
		endif
	else
		if GLOB_MODPAR_NAME = "B" then
			ZZYZX = B
			parameters ZZYZX = ZZYZX
		else
			temp_BB = A/2
			parameters temp_BB = temp_BB
		endif
	endif

	if GLOB_MODPAR_NAME = "iViewType2D" then
		if iViewType2D = SIDE_VIEW | iViewType2D = SIDE_VIEW_SYMB then
			B = ZZYZX
		else
			B = backupB
		endif
		parameters B = B
	endif
	
	if GLOB_MODPAR_NAME = "iSideViewPic2D" then
		if 	iPlantType = TYPE_DEC | iPlantType = TYPE_SHRUB | (iPlantType = TYPE_PINE & iTreeType = TYPE_1) | \
			(iPlantType = TYPE_EVERGR & (iTreeType = TYPE_2 | iTreeType = TYPE_3)) then

			!also valid in the pine tree general type, general line up, see the variable values in the Master script
			if iSideViewPic2D = PIC_SUMMER then iTopViewPic2D = PIC_SUMMER		
			if iSideViewPic2D = PIC_WINTER then iTopViewPic2D = PIC_WINTER
			if iSideViewPic2D = PIC_AUTUMN then iTopViewPic2D = PIC_AUTUMN
			if iSideViewPic2D = PIC_SPRING then iTopViewPic2D = PIC_SPRING
			if iSideViewPic2D = PIC_FOGGY  then iTopViewPic2D = PIC_FOGGY  
		else
			if iSideViewPic2D = PIC_COLOR 	then iTopViewPic2D = PIC_COLOR 
			if iSideViewPic2D = PIC_COLOR2 	then iTopViewPic2D = PIC_COLOR
			if iSideViewPic2D = PIC_FOGGY 	then iTopViewPic2D = PIC_FOGGY
			if iSideViewPic2D = PIC_FOGGY2 	then iTopViewPic2D = PIC_FOGGY

		endif
	else
		if GLOB_MODPAR_NAME = "iTopViewPic2D" then
			!also valid in the other types, general line up, see the variable values in the Master script
			if iTopViewPic2D = PIC_SUMMER then iSideViewPic2D = PIC_SUMMER
			if iTopViewPic2D = PIC_WINTER then iSideViewPic2D = PIC_WINTER
			if iTopViewPic2D = PIC_AUTUMN then iSideViewPic2D = PIC_AUTUMN
			if iTopViewPic2D = PIC_SPRING then iSideViewPic2D = PIC_SPRING
			if iTopViewPic2D = PIC_FOGGY  then iSideViewPic2D = PIC_FOGGY  
		endif
	endif
	parameters 	iTopViewPic2D = iTopViewPic2D, 
				iSideViewPic2D = iSideViewPic2D 


endif

! =============================================================================
! Onorm list Settings
! =============================================================================

if LibraryLangCode = "AUT" or LibraryLangCode = "CHE" or LibraryLangCode = "GER" then
	rrr = REQUEST ("Name_of_macro", "", LPName) 
	call "Onorm_Plant" parameters all sLibpartName = strsub(LPName,0,strlen(LPName)-4)
else
	hideparameter "gs_onorm_Title"
endif

end

"valuesPineGen":
	values{2} "iPic3D"	PIC_SIMPLE,		`Простой`,	
						PIC_SNOWY,		`Заснеженный`,
						PIC_SIMP_FOGGY, 	`Простой Туманный`,
						PIC_SNOW_FOGGY, 	`Туманный Заснеженный`
	
	values{2} "iTopViewPic2D" PIC_SIMPLE, 		`Простой`,
							PIC_SNOWY,			`Заснеженный`,
							PIC_SIMP_FOGGY,		`Простой Туманный`,
							PIC_SNOW_FOGGY,		`Туманный Заснеженный`
	
	values{2} "iSideViewPic2D" PIC_SIMPLE,		`Простой`,
							PIC_SNOWY,			`Заснеженный`,
							PIC_SIMP_FOGGY,		`Простой Туманный`,
							PIC_SNOW_FOGGY,		`Туманный Заснеженный`

return

"values1Season":
	if iViewType3D = SIDE_VIEW then
		values{2} "iPic3D"	PIC_COLOR, `Цвет 1`,	
							PIC_COLOR2,`Цвет 2`,
							PIC_FOGGY, 	`Туманное 1`,
							PIC_FOGGY2, `Туманное 2`
	else
		values{2} "iPic3D"	PIC_COLOR, `Цвет`,	
							PIC_FOGGY, 	`Туманное`
	endif
	
	values{2} "iTopViewPic2D" PIC_COLOR, 	`Цвет`,
							PIC_FOGGY,		`Туманное`
	
	values{2} "iSideViewPic2D" PIC_COLOR,	`Цвет 1`,
							PIC_COLOR2,		`Цвет 2`,
							PIC_FOGGY,		`Туманное 1`,
							PIC_FOGGY2,		`Туманное 2`
return

"values2Season":
	values{2} "iPic3D" PIC_SUMMER, `Лето`,	
					PIC_AUTUMN, `Осень`,
					PIC_FOGGY,	`Туманное`

	values{2} "iTopViewPic2D" PIC_SUMMER,	`Лето`,
							PIC_AUTUMN,		`Осень`,
							PIC_FOGGY,		`Туманное`
	
	values{2} "iSideViewPic2D" PIC_SUMMER, 	`Лето`,
							PIC_AUTUMN,		`Осень`,
							PIC_FOGGY, 		`Туманное`

return

"values3Season":
	values{2} "iPic3D" PIC_SUMMER, `Лето`,	
					PIC_AUTUMN, `Осень`,
					PIC_WINTER,	`Зима`,
					PIC_FOGGY,	`Туманное`

	values{2} "iTopViewPic2D" PIC_SUMMER,	`Лето`,
							PIC_AUTUMN,		`Осень`,
							PIC_WINTER,		`Зима`,
							PIC_FOGGY,		`Туманное`
	
	values{2} "iSideViewPic2D" PIC_SUMMER, 	`Лето`,
							PIC_AUTUMN,		`Осень`,
							PIC_WINTER,		`Зима`,
							PIC_FOGGY, 		`Туманное`
return

"values4Season":
	values{2} "iPic3D" PIC_SUMMER, `Лето`,	
					PIC_AUTUMN, `Осень`,
					PIC_WINTER,	`Зима`,
					PIC_SPRING, `Весна`,
					PIC_FOGGY,	`Туманное`

	values{2} "iTopViewPic2D" PIC_SUMMER,	`Лето`,
							PIC_AUTUMN,		`Осень`,
							PIC_WINTER,		`Зима`,
							PIC_SPRING,		`Весна`,
							PIC_FOGGY,		`Туманное`
	
	values{2} "iSideViewPic2D" PIC_SUMMER, 	`Лето`,
							PIC_AUTUMN,		`Осень`,
							PIC_WINTER,		`Зима`,
							PIC_SPRING, 	`Весна`,
							PIC_FOGGY, 		`Туманное`

return

