
EPS = 0.0001

main = ""
frac = ""

DOT_IN_MM = 72 / 25.4

DETLEV_SCALESENS	= 1
DETLEV_DETAILED		= 2
DETLEV_SIMPLE		= 3

VALUE_AUTOMATIC		= 1
VALUE_CUSTOM		= 2

IDVALUE_IDNUMBER	= 1
IDVALUE_CUSTOMTEXT	= 2
IDVALUE_FULLIDNUM	= 3

DIM_MEASURED		= 1
DIM_CUSTOM			= 2

FRAME_NONE			= 0
FRAME_STYLE1		= 1
FRAME_STYLE2		= 2
FRAME_STYLE3		= 3
FRAME_STYLE4		= 4
FRAME_STYLE5		= 5
FRAME_STYLE6		= 6

DIMUNIT_MM		= 11  
DIMUNIT_CM		= 12
DIMUNIT_METER	= 13
DIMUNIT_INCH	= 14
DIMUNIT_DM		= 15
DIMUNIT_PROJECT	= 10

SILL_TO_ANCHOR		= 1
SILL_TO_WALLBASE	= 2
SILL_TO_CURRSTORY	= 3

IDALIGN_LEFT		= 1
IDALIGN_CENTER		= 2
IDALIGN_RIGHT		= 3

BOXALIGN_LEFT		= 1
BOXALIGN_CENTER		= 2
BOXALIGN_SIDE		= 3
BOXALIGN_RIGHT		= 4

UNITTYPE_WIDO_DIM	= 7
UNITTYPE_SILL_DIM	= 8


! -------------------------------------------------------------------------------
! String resources
! -------------------------------------------------------------------------------

if GLOB_SCRIPT_TYPE = 4 | \		! parameter script
	GLOB_SCRIPT_TYPE = 5 then	! interface script

	w_units_form = ""
	rrr = request("Working_length_unit", "", w_units_form)
	bMetricDimensionNeeded = strstr(w_units_form, "m")		! m, cm, mm

	dim stDetLevels[3]
	if bMetricDimensionNeeded then
		stDetLevels[1] = `Зависит от Масштаба`
		stDetLevels[2] = `До 1:50`
		stDetLevels[3] = `От 1:50`
	else
		stDetLevels[1] = `Зависит от Масштаба`
		stDetLevels[2] = `Детальный`
		stDetLevels[3] = `Средний и Простой`
	endif
endif

dim stAutoCustom[2]
	stAutoCustom[1] = `Автоматически`
	stAutoCustom[2] = `Специальный Текст`

dim sIDTextValues[3]
	sIDTextValues[1] = `Компактный ID Элемента`
	sIDTextValues[2] = `Специальный Текст`
	sIDTextValues[3] = `Полный ID Элемента`

dim stAutoFixed[2]
	stAutoFixed[1] = `Автоматически`
	stAutoFixed[2] = `Зафиксирован`

dim stMeasuredCustom[2]
	stMeasuredCustom[1] = `Измеряемое Значение`
	stMeasuredCustom[2] = `Специальный Текст`

dim stMaterials[4]
	stMaterials[1] = `Дерево`
	stMaterials[2] = `Алюминий`
	stMaterials[3] = `Пластик`
	stMaterials[4] = `Специальный`

dim stFrameStyles[7]
	stFrameStyles[1] = `Нет`
	stFrameStyles[2] = `Стиль 1`
	stFrameStyles[3] = `Стиль 2`
	stFrameStyles[4] = `Стиль 3`
	stFrameStyles[5] = `Стиль 4`
	stFrameStyles[6] = `Стиль 5`
	stFrameStyles[7] = `Стиль 6`

dim stUnitFormats[6]
	stUnitFormats[1] = `мм`
	stUnitFormats[2] = `см`
	stUnitFormats[3] = `дм`
	stUnitFormats[4] = `м`
	stUnitFormats[5] = `дюймы`
	stUnitFormats[6] = `по Параметрам Проекта`

dim stSillToOptions[3]
	stSillToOptions[1] = `Привязка`
	stSillToOptions[2] = `Основание Стены`
	stSillToOptions[3] = `Этаж Вставки`

dim stIDAligns[3]
	stIDAligns[1] = `По Левому Краю`
	stIDAligns[2] = `По Центру`
	stIDAligns[3] = `По Правому Краю`

dim stBoxAligns[4]
	stBoxAligns[1] = `По Левому Краю`
	stBoxAligns[2] = `По Центру`
	stBoxAligns[3] = `По Ширине`
	stBoxAligns[4] = `По Правому Краю`


_bLockLinearUnitDecimal		= (iWorkUnitLinear = DIMUNIT_INCH	| iWorkUnitLinear = DIMUNIT_PROJECT)
_bLockSillHgtUnitDecimal	= (iWorkUnitSillHgt = DIMUNIT_INCH	| iWorkUnitSillHgt = DIMUNIT_PROJECT)


! -------------------------------------------------------------------------------
! Fill box array, get stamp width
! -------------------------------------------------------------------------------

dim strings2d[][2]
dim lengthValues2d[][2]
dim dimensionType[]

dim prefixTnC[]
	prefixTnC[1] = ""
dim contentTnC[]
	contentTnC[1] = ""
gosub "analyze_TnC_params"	! output >> _numTnCRow


! -------------------------------------------------------------------------------
goto "MasterEnd"
! -------------------------------------------------------------------------------


! ==============================================================================
"analyze_TnC_params" :
! Additional Tags`re sorted from the Tags and Categories
! - subroutine function: setting number of Additional Tags rows and content
! "None" displaying is by design:
! if a user sets the create sortings row type to none, then empty rows 
! (epmty instead "none") would be displayed only between two non-empty rows,
! At the begin and at the end the empty rows are not displyed. 
! For analyzing use TnCParamRequest macro with _sContentTnC array as returned variable
! for help:
! 	call "TnCParamRequest" parameters all bDebug = 1
! ==============================================================================

! Initialization for returned parameters
nRowProperty = 0
nColuProperty = 0
dim listProperty[]
	listProperty[1] = ""

! Request results in multiple rows: 
!  group = 2; name = 3; value = 5
DIM _columns[5]	! [iTncDisplayData]
	_columns[1] =     3 * 5	! DISPLAYDATABY_NAMEVALUE
	_columns[2] =     3   	! DISPLAYDATABY_NAME
	_columns[3] =         5	! DISPLAYDATABY_VALUE
	_columns[4] = 2 * 3    	! DISPLAYDATABY_GROUPNAME
	_columns[5] = 2 * 3 * 5	! DISPLAYDATABY_GROUPNAMEVALUE

call "TnCParamRequest" parameters all 	bShowAdditionalTags	= (bShowAdditionalTags_detailed | bShowAdditionalTags_simple),

										! settings for parameter script
										bEnableHideTnCParameters 	= 1,

										! displayed datas of properties
										bUsePropertyFolder			= not(_columns[iTncDisplayData] mod 2),
										bUsePropertyID				= 0,
										bUsePropertyName			= not(_columns[iTncDisplayData] mod 3),
										bUsePropertyValue 			= not(_columns[iTncDisplayData] mod 5),
										bUsePropertyType			= 0,

					returned_parameters nRowProperty, nColuProperty, listProperty
					! listProperty is became to a single dimension array (a type of linear array)
					! it has to be sepparated by each columns
	

! Converting rows of the result
for i = 1 to nRowProperty
	! initializaton
	prefixTnC[i] = ""
	contentTnC[i] = ""

	! Set first column
	contentTnC[i] = listProperty[nColuProperty * i]

	! Set second column 
	if nColuProperty > 1 then
		prefixTnC[i] = listProperty[nColuProperty * (i-1) + 1]

		if nColuProperty > 2 then
			! Hack: if more columns, concatenate to the first column
			for j = 2 to nColuProperty - 1
				cellValue = listProperty[nColuProperty * (i-1) + j]
				_separator1 = ""
				_separator2 = ""
				if prefixTnC[i] # "" and cellValue # "" then
					_separator1 = " ("
					_separator2 = ")"
				endif
				prefixTnC[i] = cellValue + _separator1 + prefixTnC[i] + _separator2
			next j
		endif
	else
		if (_columns[iTncDisplayData] mod 5) > 0 then	! Property Value not displayed
			prefixTnC[i] = contentTnC[i]
			contentTnC[i] = ""
		endif
	endif
next i

_numTnCRow = nRowProperty

return


! -------------------------------------------------------------------------------
"MasterEnd":
! -------------------------------------------------------------------------------

