

values "gs_ui_current_page" 1, 2, 3, 4, 5, 6, 7, 8

values "strDetLevel" stDetLevels
values "iDetLevel" DETLEV_SCALESENS, DETLEV_DETAILED, DETLEV_SIMPLE

if GLOB_MODPAR_NAME = "strDetLevel" then
	iDetLevel = DETLEV_SCALESENS
	if strDetLevel = stDetLevels[2] then iDetLevel = DETLEV_DETAILED
	if strDetLevel = stDetLevels[3] then iDetLevel = DETLEV_SIMPLE
	parameters iDetLevel = iDetLevel
else
	strDetLevel = stDetLevels[1]
	if iDetLevel = DETLEV_DETAILED	then strDetLevel = stDetLevels[2]
	if iDetLevel = DETLEV_SIMPLE	then strDetLevel = stDetLevels[3]
	parameters strDetLevel = strDetLevel
endif


! =============================================================================
! ID
! =============================================================================

values "iIDText" IDVALUE_IDNUMBER, IDVALUE_FULLIDNUM, IDVALUE_CUSTOMTEXT
values "strIDText" sIDTextValues[1], sIDTextValues[3],  sIDTextValues[2]

if GLOB_MODPAR_NAME = "strIDText" then
	for i = 1 to vardim1(sIDTextValues)
		if strIDText = sIDTextValues [i] then iIDText = i
	next i
	parameters iIDText = iIDText
else
	strIDText = sIDTextValues[ min(max(iIDText , 1) , (vardim1(sIDTextValues))) ]
	parameters strIDText = strIDText
endif

if	iIDText = IDVALUE_IDNUMBER | \
	iIDText = IDVALUE_FULLIDNUM then
	! strIDValue got value in master script
	parameters strIDValue = strIDValue
	lock "strIDValue"
	hideparameter "strIDValue"
endif


! =============================================================================
! Dimension parameters
! =============================================================================

values "strWHDimText" stMeasuredCustom
values "iWHDimText" DIM_MEASURED, DIM_CUSTOM

if GLOB_MODPAR_NAME = "strWHDimText" then
	iWHDimText = DIM_MEASURED
	if strWHDimText = stMeasuredCustom[2] then iWHDimText = DIM_CUSTOM
	parameters iWHDimText = iWHDimText
else
	strWHDimText = stMeasuredCustom[1]
	if iWHDimText = DIM_CUSTOM then strWHDimText = stMeasuredCustom[2]
	parameters strWHDimText = strWHDimText
endif

if iWHDimText = DIM_MEASURED then
	! strWHDimValue got value in master script
	parameters strWHDimValue = strWHDimValue
	lock "strWHDimValue"
	hideparameter "strWHDimValue"
endif

values "strUnitDimText" stMeasuredCustom
values "iUnitDimText" DIM_MEASURED, DIM_CUSTOM

if GLOB_MODPAR_NAME = "strUnitDimText" then
	iUnitDimText = DIM_MEASURED
	if strUnitDimText = stMeasuredCustom[2] then iUnitDimText = DIM_CUSTOM
	parameters iUnitDimText = iUnitDimText
else
	strUnitDimText = stMeasuredCustom[1]
	if iUnitDimText = DIM_CUSTOM then strUnitDimText = stMeasuredCustom[2]
	parameters strUnitDimText = strUnitDimText
endif

if iUnitDimText = DIM_MEASURED then
	! strUnitDimValue got value in master script
	parameters strUnitDimValue = strUnitDimValue
	lock "strUnitDimValue"
	hideparameter "strUnitDimValue"
endif

values "strEgressDimText" stMeasuredCustom
values "iEgressDimText" DIM_MEASURED, DIM_CUSTOM

if GLOB_MODPAR_NAME = "strEgressDimText" then
	iEgressDimText = DIM_MEASURED
	if strEgressDimText = stMeasuredCustom[2] then iEgressDimText = DIM_CUSTOM
	parameters iEgressDimText = iEgressDimText
else
	strEgressDimText = stMeasuredCustom[1]
	if iEgressDimText = DIM_CUSTOM then strEgressDimText = stMeasuredCustom[2]
	parameters strEgressDimText = strEgressDimText
endif

if iEgressDimText = DIM_MEASURED then
	! strEgressDimValue got value in master script
	parameters strEgressDimValue = strEgressDimValue
	lock "strEgressDimValue"
	hideparameter "strEgressDimValue"
endif

if bWindow then
	values "strRevealDimText" stMeasuredCustom
	values "iRevealDimText" DIM_MEASURED, DIM_CUSTOM

	if GLOB_MODPAR_NAME = "strRevealDimText" then
		iRevealDimText = DIM_MEASURED
		if strRevealDimText = stMeasuredCustom[2] then iRevealDimText = DIM_CUSTOM
		parameters iRevealDimText = iRevealDimText
	else
		strRevealDimText = stMeasuredCustom[1]
		if iRevealDimText = DIM_CUSTOM then strRevealDimText = stMeasuredCustom[2]
		parameters strRevealDimText = strRevealDimText
	endif

	if iRevealDimText = DIM_MEASURED then
		! strRevealDimValue got value in master script
		parameters strRevealDimValue = strRevealDimValue
		lock "strRevealDimValue"
		hideparameter "strRevealDimValue"
	endif
endif

! =============================================================================
! Sill - Threshold parameters
! =============================================================================

if bWindow then
	values "strSillText" stMeasuredCustom
	values "iSillText" DIM_MEASURED, DIM_CUSTOM

	if GLOB_MODPAR_NAME = "strSillText" then
		iSillText = DIM_MEASURED
		if strSillText = stMeasuredCustom[2] then iSillText = DIM_CUSTOM
		parameters iSillText = iSillText
	else
		strSillText = stMeasuredCustom[1]
		if iSillText = DIM_CUSTOM then strSillText = stMeasuredCustom[2]
		parameters strSillText = strSillText
	endif

	if iSillText = DIM_MEASURED then
		lock "strSillValue"
		hideparameter "strSillValue"
	endif

	values "strShowSillTo" stSillToOptions
	values "iShowSillTo" SILL_TO_ANCHOR, SILL_TO_WALLBASE, SILL_TO_CURRSTORY

	if GLOB_MODPAR_NAME = "strShowSillTo" then
		iShowSillTo = SILL_TO_ANCHOR
		if strShowSillTo = stSillToOptions[2] then iShowSillTo = SILL_TO_WALLBASE
		if strShowSillTo = stSillToOptions[3] then iShowSillTo = SILL_TO_CURRSTORY
		parameters iShowSillTo = iShowSillTo
	else
		strShowSillTo = stSillToOptions[1]
		if iShowSillTo = SILL_TO_WALLBASE then strShowSillTo = stSillToOptions[2]
		if iShowSillTo = SILL_TO_CURRSTORY then strShowSillTo = stSillToOptions[3]
		parameters strShowSillTo = strShowSillTo
	endif

	hideparameter "strThresholdText", "strThresholdValue", "strThresholdPrefix"
	lock "strThresholdText", "iThresholdText", "strThresholdValue", "strThresholdPrefix"
else
	values "strThresholdText" stMeasuredCustom
	values "iThresholdText" DIM_MEASURED, DIM_CUSTOM

	if GLOB_MODPAR_NAME = "strThresholdText" then
		iThresholdText = DIM_MEASURED
		if strThresholdText = stMeasuredCustom[2] then iThresholdText = DIM_CUSTOM
		parameters iThresholdText = iThresholdText
	else
		strThresholdText = stMeasuredCustom[1]
		if iThresholdText = DIM_CUSTOM then strThresholdText = stMeasuredCustom[2]
		parameters strThresholdText = strThresholdText
	endif

	if iThresholdText = DIM_MEASURED then
		parameters strThresholdValue = strThresholdValue
		lock "strThresholdValue"
		hideparameter "strThresholdValue"
	endif

	hideparameter "strSillText", "strShowSillTo", "strSillValue", "strSillPrefix"
	lock "strSillText", "iSillText", "strShowSillTo",
			"iShowSillTo", "strSillValue", "strSillPrefix"
endif


! =============================================================================
! Listing parameters
! =============================================================================

values "strFireText" stAutoCustom
values "iFireText" VALUE_AUTOMATIC, VALUE_CUSTOM

if GLOB_MODPAR_NAME = "strFireText" then
	iFireText = VALUE_AUTOMATIC
	if strFireText = stAutoCustom[2] then iFireText = VALUE_CUSTOM
	parameters iFireText = iFireText
else
	strFireText = stAutoCustom[1]
	if iFireText = VALUE_CUSTOM then strFireText = stAutoCustom[2]
	parameters strFireText = strFireText
endif

if iFireText = VALUE_AUTOMATIC then
	lock "strFireValue"
	hideparameter "strFireValue"
endif

values "strAcousticText" stAutoCustom
values "iAcousticText" VALUE_AUTOMATIC, VALUE_CUSTOM

if GLOB_MODPAR_NAME = "strAcousticText" then
	iAcousticText = VALUE_AUTOMATIC
	if strAcousticText = stAutoCustom[2] then iAcousticText = VALUE_CUSTOM
	parameters iAcousticText = iAcousticText
else
	strAcousticText = stAutoCustom[1]
	if iAcousticText = VALUE_CUSTOM then strAcousticText = stAutoCustom[2]
	parameters strAcousticText = strAcousticText
endif

if iAcousticText = VALUE_AUTOMATIC then
	lock "strAcousticValue"
	hideparameter "strAcousticValue"
endif

values "strUValueText" stAutoCustom
values "iUValueText" VALUE_AUTOMATIC, VALUE_CUSTOM

if GLOB_MODPAR_NAME = "strUValueText" then
	iUValueText = VALUE_AUTOMATIC
	if strUValueText = stAutoCustom[2] then iUValueText = VALUE_CUSTOM
	parameters iUValueText = iUValueText
else
	strUValueText = stAutoCustom[1]
	if iUValueText = VALUE_CUSTOM then strUValueText = stAutoCustom[2]
	parameters strUValueText = strUValueText
endif

if iUValueText = VALUE_AUTOMATIC then
	lock "strUValueValue"
	hideparameter "strUValueValue"
endif

values "strMaterialText" stMaterials
values "iMaterialText" 1, 2, 3, 4

if GLOB_MODPAR_NAME = "strMaterialText" then
	iMaterialText = 1
	for i = 2 to 4
		if strMaterialText = stMaterials[i] then iMaterialText = i
	next i
	parameters iMaterialText = iMaterialText
else
	strMaterialText = stMaterials[max(1, min(vardim1(stMaterials), iMaterialText))]
	parameters strMaterialText = strMaterialText
endif

if iMaterialText <> 4 then
	! strMaterialValue is drawen in 2D, and locked if not custom
	strMaterialValue = stMaterials[iMaterialText]
	parameters strMaterialValue = strMaterialValue

	lock "strMaterialValue"
	hideparameter "strMaterialValue"
endif

values "strHardwareText" stAutoCustom
values "iHardwareText" VALUE_AUTOMATIC, VALUE_CUSTOM

if GLOB_MODPAR_NAME = "strHardwareText" then
	iHardwareText = VALUE_AUTOMATIC
	if strHardwareText = stAutoCustom[2] then iHardwareText = VALUE_CUSTOM
	parameters iHardwareText = iHardwareText
else
	strHardwareText = stAutoCustom[1]
	if iHardwareText = VALUE_CUSTOM then strHardwareText = stAutoCustom[2]
	parameters strHardwareText = strHardwareText
endif

if iHardwareText = VALUE_AUTOMATIC then
	lock "strHardwareValue"
	hideparameter "strHardwareValue"
endif


! =============================================================================
! Appearance
! =============================================================================

values "strFrameStyle" stFrameStyles
values "iFrameStyle" 0, 1, 2, 3, 4, 5, 6

if GLOB_MODPAR_NAME = "strFrameStyle" then
	iFrameStyle = 0
	for i = 2 to vardim1(stFrameStyles)
		if strFrameStyle = stFrameStyles[i] then
			iFrameStyle = i-1
			i = vardim1(stFrameStyles)
		endif
	next i
	parameters iFrameStyle = iFrameStyle
else
	strFrameStyle = stFrameStyles[max(1, min(vardim1(stFrameStyles), iFrameStyle + 1))]
	parameters strFrameStyle = strFrameStyle
endif

values{2} "iWorkUnitLinear"	DIMUNIT_MM,			stUnitFormats[1],
							DIMUNIT_CM,			stUnitFormats[2],
							DIMUNIT_DM,			stUnitFormats[3],
							DIMUNIT_METER,		stUnitFormats[4],
							DIMUNIT_INCH,		stUnitFormats[5],
							DIMUNIT_PROJECT,	stUnitFormats[6]

put 0, 1
if iWorkUnitLinear = DIMUNIT_CM		then put 2
if iWorkUnitLinear = DIMUNIT_DM		then put 2, 3
if iWorkUnitLinear = DIMUNIT_METER	then put 2, 3, 4

values "iWorkUnitLinearDecimal" get(NSP)

if _bLockLinearUnitDecimal then
	lock "iWorkUnitLinearDecimal"
	hideparameter "iWorkUnitLinearDecimal"
endif

values{2} "iWorkUnitSillHgt"	DIMUNIT_MM,			stUnitFormats[1],
								DIMUNIT_CM,			stUnitFormats[2],
								DIMUNIT_DM,			stUnitFormats[3],
								DIMUNIT_METER,		stUnitFormats[4],
								DIMUNIT_INCH,		stUnitFormats[5],
								DIMUNIT_PROJECT,	stUnitFormats[6]

put 0, 1
if iWorkUnitSillHgt = DIMUNIT_CM	then put 2
if iWorkUnitSillHgt = DIMUNIT_DM	then put 2, 3
if iWorkUnitSillHgt = DIMUNIT_METER	then put 2, 3, 4

values "iWorkUnitSillHgtDecimal" get(NSP)

if _bLockSillHgtUnitDecimal then
	lock "iWorkUnitSillHgtDecimal"
	hideparameter "iWorkUnitSillHgtDecimal"
endif


values "strStampWidth" stAutoFixed
values "iStampWidth" VALUE_AUTOMATIC, VALUE_CUSTOM

if GLOB_MODPAR_NAME = "strStampWidth" then
	iStampWidth = VALUE_AUTOMATIC
	if strStampWidth = stAutoFixed[2] then iStampWidth = VALUE_CUSTOM
	parameters iStampWidth = iStampWidth
else
	strStampWidth = stAutoFixed[1]
	if iStampWidth = VALUE_CUSTOM then strStampWidth = stAutoFixed[2]
	parameters strStampWidth = strStampWidth
endif

if iStampWidth = VALUE_AUTOMATIC then
	lock "stampWidth_mm", "stampWidth_pt"
else
	values "stampWidth_mm" range [0, )
	values "stampWidth_pt" range [0, )

	if GLOB_MODPAR_NAME = "stampWidth_pt" then
		stampWidth_mm = stampWidth_pt / DOT_IN_MM
		parameters stampWidth_mm = stampWidth_mm
	else
		stampWidth_pt = stampWidth_mm * DOT_IN_MM
		parameters stampWidth_pt = stampWidth_pt
	endif
endif
if bMetricDimensionNeeded then
	hideparameter "stampWidth_pt"
else
	hideparameter "stampWidth_mm"
endif

values "strIDLineSpacing" stAutoFixed
values "iIDLineSpacing" VALUE_AUTOMATIC, VALUE_CUSTOM

if GLOB_MODPAR_NAME = "strIDLineSpacing" then
	iIDLineSpacing = VALUE_AUTOMATIC
	if strIDLineSpacing = stAutoFixed[2] then iIDLineSpacing = VALUE_CUSTOM
	parameters iIDLineSpacing = iIDLineSpacing
else
	strIDLineSpacing = stAutoFixed[1]
	if iIDLineSpacing = VALUE_CUSTOM then strIDLineSpacing = stAutoFixed[2]
	parameters strIDLineSpacing = strIDLineSpacing
endif

if iIDLineSpacing = VALUE_AUTOMATIC then
	lock "IDLineSpacing_mm", "IDLineSpacing_pt"
else
	values "IDLineSpacing_mm" range [minIDLineSpacing, )
	values "IDLineSpacing_pt" range [minIDLineSpacing * DOT_IN_MM, )

	if GLOB_MODPAR_NAME = "IDLineSpacing_pt" then
		IDLineSpacing_mm = IDLineSpacing_pt / DOT_IN_MM
		parameters IDLineSpacing_mm = IDLineSpacing_mm
	else
		IDLineSpacing_pt = IDLineSpacing_mm * DOT_IN_MM
		parameters IDLineSpacing_pt = IDLineSpacing_pt
	endif
endif
if bMetricDimensionNeeded then
	hideparameter "IDLineSpacing_pt"
else
	hideparameter "IDLineSpacing_mm"
endif

values "strDetailLineSpacing" stAutoFixed
values "iDetailLineSpacing" VALUE_AUTOMATIC, VALUE_CUSTOM

if GLOB_MODPAR_NAME = "strDetailLineSpacing" then
	iDetailLineSpacing = VALUE_AUTOMATIC
	if strDetailLineSpacing = stAutoFixed[2] then iDetailLineSpacing = VALUE_CUSTOM
	parameters iDetailLineSpacing = iDetailLineSpacing
else
	strDetailLineSpacing = stAutoFixed[1]
	if iDetailLineSpacing = VALUE_CUSTOM then strDetailLineSpacing = stAutoFixed[2]
	parameters strDetailLineSpacing = strDetailLineSpacing
endif

if iDetailLineSpacing = VALUE_AUTOMATIC then
	lock "detailLineSpacing_mm", "detailLineSpacing_pt"
else
	values "detailLineSpacing_mm" range [0, )
	values "detailLineSpacing_pt" range [0, )

	if GLOB_MODPAR_NAME = "detailLineSpacing_pt" then
		detailLineSpacing_mm = detailLineSpacing_pt / DOT_IN_MM
		parameters detailLineSpacing_mm = detailLineSpacing_mm
	else
		detailLineSpacing_pt = detailLineSpacing_mm * DOT_IN_MM
		parameters detailLineSpacing_pt = detailLineSpacing_pt
	endif
endif
if bMetricDimensionNeeded then
	hideparameter "detailLineSpacing_pt"
else
	hideparameter "detailLineSpacing_mm"
endif

! =============================================================================
! Text Parameters
! =============================================================================

! --- Alignment ---------------------------------------------------------------

if GS_UniTextFormat then
	values "strAlignment" stIDAligns
	values "iAlignment" IDALIGN_LEFT, IDALIGN_CENTER, IDALIGN_RIGHT

	if GLOB_MODPAR_NAME = "strAlignment" then
		iAlignment = IDALIGN_LEFT
		if strAlignment = stIDAligns[2] then iAlignment = IDALIGN_CENTER
		if strAlignment = stIDAligns[3] then iAlignment = IDALIGN_RIGHT
		parameters iAlignment = iAlignment
	else
		strAlignment = stIDAligns[1]
		if iAlignment = IDALIGN_CENTER then strAlignment = stIDAligns[2]
		if iAlignment = IDALIGN_RIGHT then strAlignment = stIDAligns[3]
		parameters strAlignment = strAlignment
	endif

	iIDAlignment = iAlignment
	strIDAlignment = stIDAligns[iIDAlignment]
	parameters	strIDAlignment	= strIDAlignment,
				iIDAlignment	= iIDAlignment

	lock "iIDAlignment", "strIDAlignment"
	hideparameter "iIDAlignment", "strIDAlignment"

	if iAlignment = IDALIGN_LEFT then
		iBoxAlignment = BOXALIGN_LEFT
	else
		if iAlignment = IDALIGN_CENTER then
			iBoxAlignment = BOXALIGN_CENTER
		else
			iBoxAlignment = BOXALIGN_RIGHT
		endif
	endif
	strBoxAlignment = stBoxAligns[iBoxAlignment]
	parameters	strBoxAlignment	= strBoxAlignment,
				iBoxAlignment	= iBoxAlignment

	lock "iBoxAlignment", "strBoxAlignment"
	hideparameter "iBoxAlignment", "strBoxAlignment"
else
	values "strIDAlignment" stIDAligns
	values "iIDAlignment" IDALIGN_LEFT, IDALIGN_CENTER, IDALIGN_RIGHT
	values "strBoxAlignment" stBoxAligns
	values "iBoxAlignment" BOXALIGN_LEFT, BOXALIGN_CENTER, BOXALIGN_SIDE, BOXALIGN_RIGHT

	if GLOB_MODPAR_NAME = "strIDAlignment" then
		iIDAlignment = IDALIGN_LEFT
		if strIDAlignment = stIDAligns[2] then iIDAlignment = IDALIGN_CENTER
		if strIDAlignment = stIDAligns[3] then iIDAlignment = IDALIGN_RIGHT
		parameters iIDAlignment = iIDAlignment
	else
		strIDAlignment = stIDAligns[1]
		if iIDAlignment = IDALIGN_CENTER	then strIDAlignment = stIDAligns[2]
		if iIDAlignment = IDALIGN_RIGHT	then strIDAlignment = stIDAligns[3]
		parameters strIDAlignment = strIDAlignment
	endif

	if GLOB_MODPAR_NAME = "strBoxAlignment" then
		iBoxAlignment = BOXALIGN_LEFT
		if strBoxAlignment = stBoxAligns[2] then iBoxAlignment = BOXALIGN_CENTER
		if strBoxAlignment = stBoxAligns[3] then iBoxAlignment = BOXALIGN_SIDE
		if strBoxAlignment = stBoxAligns[4] then iBoxAlignment = BOXALIGN_RIGHT
		parameters iBoxAlignment = iBoxAlignment
	else
		strBoxAlignment = stBoxAligns[1]
		if iBoxAlignment = BOXALIGN_CENTER	then strBoxAlignment = stBoxAligns[2]
		if iBoxAlignment = BOXALIGN_SIDE	then strBoxAlignment = stBoxAligns[3]
		if iBoxAlignment = BOXALIGN_RIGHT	then strBoxAlignment = stBoxAligns[4]
		parameters strBoxAlignment = strBoxAlignment
	endif

	iAlignment = iIDAlignment
	strAlignment = stIDAligns[iIDAlignment]
	parameters	strAlignment	= strAlignment,
				iAlignment		= iAlignment

	lock "iAlignment", "strAlignment"
	hideparameter "iAlignment", "strAlignment"
endif


if GS_UniTextFormat then
	if GLOB_MODPAR_NAME = "fontType2" then
		AC_TextFont_1 = fontType2
		parameters AC_TextFont_1 = AC_TextFont_1
	else
		fontType2 = AC_TextFont_1
		parameters fontType2 = fontType2
	endif

	AC_TextFont_1 = fontType2
	parameters AC_TextFont_1 = AC_TextFont_1
	lock "AC_TextFont_1"
	hideparameter "AC_TextFont_1"

	fontType = fontType2
	parameters fontType = fontType
	lock "fontType"
	hideparameter "fontType"

	AC_TextFont_2 = fontType2
	parameters AC_TextFont_2 = AC_TextFont_2
	lock "AC_TextFont_2"
	hideparameter "AC_TextFont_2"
else
	if GLOB_MODPAR_NAME = "fontType" then
		AC_TextFont_1 = fontType
		parameters AC_TextFont_1 = AC_TextFont_1
	else
		fontType = AC_TextFont_1
		parameters fontType = fontType
	endif

	fontType2 = AC_TextFont_1
	parameters fontType2 = fontType2
	lock "fontType2"
	hideparameter "fontType2"
endif


! --- Text Size & Pen ---------------------------------------------------------

if GS_UniTextFormat then
	TextSize_1_mm = AC_TextSize_1
	AC_TextPen_1 = TextPen_U
	parameters	TextSize_1_mm	= TextSize_1_mm,
				AC_TextPen_1	= AC_TextPen_1

	lock "TextSize_1_mm", "AC_TextPen_1"
	hideparameter "TextSize_1_mm", "AC_TextPen_1"

	AC_TextSize_2 = AC_TextSize_1
	AC_TextPen_2 = TextPen_U
	parameters	AC_TextSize_2	= AC_TextSize_2,
				AC_TextPen_2	= AC_TextPen_2

	lock "AC_TextSize_2", "AC_TextPen_2"
	hideparameter "AC_TextSize_2", "AC_TextPen_2"

	if GLOB_MODPAR_NAME = "TextSize_U_pt" then
		AC_TextSize_1 = TextSize_U_pt / DOT_IN_MM
		TextSize_U_mm = AC_TextSize_1
		parameters AC_TextSize_1 = AC_TextSize_1, TextSize_U_mm = TextSize_U_mm
	else
		if GLOB_MODPAR_NAME = "TextSize_U_mm" then
			AC_TextSize_1 = TextSize_U_mm
			TextSize_U_pt = TextSize_U_mm * DOT_IN_MM
			parameters AC_TextSize_1 = AC_TextSize_1, TextSize_U_pt = TextSize_U_pt
		else
			TextSize_U_pt = AC_TextSize_1 * DOT_IN_MM
			TextSize_U_mm = AC_TextSize_1
			parameters TextSize_U_pt = TextSize_U_pt, TextSize_U_mm = TextSize_U_mm
		endif
	endif
else
	TextSize_U_mm = AC_TextSize_1
	TextPen_U = AC_TextPen_1
	parameters	TextSize_U_mm	= TextSize_U_mm,
				TextPen_U	= TextPen_U

	lock "TextSize_U_mm", "TextPen_U"
	hideparameter "TextSize_U_mm", "TextPen_U"

	if GLOB_MODPAR_NAME = "TextSize_2_pt" then
		AC_TextSize_2 = TextSize_2_pt / DOT_IN_MM
		parameters AC_TextSize_2 = AC_TextSize_2
	else
		TextSize_2_pt = AC_TextSize_2 * DOT_IN_MM
		parameters TextSize_2_pt = TextSize_2_pt
	endif

	if GLOB_MODPAR_NAME = "TextSize_1_pt" then
		AC_TextSize_1 = TextSize_1_pt / DOT_IN_MM
		TextSize_1_mm = AC_TextSize_1
		parameters AC_TextSize_1 = AC_TextSize_1, TextSize_1_mm = TextSize_1_mm
	else
		if GLOB_MODPAR_NAME = "TextSize_1_mm" then
			AC_TextSize_1 = TextSize_1_mm
			TextSize_1_pt = TextSize_1_mm * DOT_IN_MM
			parameters AC_TextSize_1 = AC_TextSize_1, TextSize_1_pt = TextSize_1_pt
		else
			TextSize_1_pt = AC_TextSize_1 * DOT_IN_MM
			TextSize_1_mm = AC_TextSize_1
			parameters TextSize_1_pt = TextSize_1_pt, TextSize_1_mm = TextSize_1_mm
		endif
	endif
endif

if bMetricDimensionNeeded then
	lock "TextSize_2_pt", "TextSize_1_pt", "TextSize_U_pt"
	hideparameter "TextSize_2_pt", "TextSize_1_pt", "TextSize_U_pt"
else
	lock "AC_TextSize_2", "TextSize_1_mm", "TextSize_U_mm"
	hideparameter "AC_TextSize_2", "TextSize_1_mm", "TextSize_U_mm"
endif


! --- Text Style --------------------------------------------------------------

if GS_UniTextFormat then
	if GLOB_MODPAR_NAME = "TextStyle_U" then
		bBoldText   = bittest(TextStyle_U, 0)
		bItalicText = bittest(TextStyle_U, 1)
		bUnderText  = bittest(TextStyle_U, 2)
		parameters	bBoldText	= bBoldText,
					bItalicText	= bItalicText,
					bUnderText	= bUnderText
	else
		TextStyle_U = bBoldText + 2 * bItalicText + 4 * bUnderText
		parameters TextStyle_U = TextStyle_U
	endif

	AC_TextStyle_1 = TextStyle_U
	bBoldIDText   = bBoldText
	bItalicIDText = bItalicText
	bUnderIDText  = bUnderText
	parameters	AC_TextStyle_1	= AC_TextStyle_1,
				bBoldIDText		= bBoldIDText,
				bItalicIDText	= bItalicIDText,
				bUnderIDText	= bUnderIDText

	lock "AC_TextStyle_1", "bBoldIDText", "bItalicIDText", "bUnderIDText"
	hideparameter "AC_TextStyle_1", "bBoldIDText", "bItalicIDText", "bUnderIDText"

	AC_TextStyle_2 = TextStyle_U
	bBoldDetailText   = bBoldText
	bItalicDetailText = bItalicText
	bUnderDetailText  = bUnderText
	parameters	AC_TextStyle_2		= AC_TextStyle_2,
				bBoldDetailText		= bBoldDetailText,
				bItalicDetailText	= bItalicDetailText,
				bUnderDetailText	= bUnderDetailText

	lock "AC_TextStyle_2", "bBoldDetailText", "bItalicDetailText", "bUnderDetailText"
	hideparameter "AC_TextStyle_2", "bBoldDetailText", "bItalicDetailText", "bUnderDetailText"
else
	if GLOB_MODPAR_NAME = "AC_TextStyle_1" then
		bBoldIDText   = bittest(AC_TextStyle_1, 0)
		bItalicIDText = bittest(AC_TextStyle_1, 1)
		bUnderIDText  = bittest(AC_TextStyle_1, 2)
		parameters	bBoldIDText		= bBoldIDText,
					bItalicIDText	= bItalicIDText,
					bUnderIDText	= bUnderIDText
	else
		AC_TextStyle_1 = bBoldIDText + 2 * bItalicIDText + 4 * bUnderIDText
		parameters AC_TextStyle_1 = AC_TextStyle_1
	endif

	if GLOB_MODPAR_NAME = "AC_TextStyle_2" then
		bBoldDetailText   = bittest(AC_TextStyle_2, 0)
		bItalicDetailText = bittest(AC_TextStyle_2, 1)
		bUnderDetailText  = bittest(AC_TextStyle_2, 2)
		parameters	bBoldDetailText		= bBoldDetailText,
					bItalicDetailText	= bItalicDetailText,
					bUnderDetailText	= bUnderDetailText
	else
		AC_TextStyle_2 = bBoldDetailText + 2 * bItalicDetailText + 4 * bUnderDetailText
		parameters AC_TextStyle_2 = AC_TextStyle_2
	endif

	TextStyle_U = AC_TextStyle_1
	bBoldText   =  bBoldIDText
	bItalicText = bItalicIDText
	bUnderText  = bUnderIDText
	parameters	TextStyle_U	= TextStyle_U,
				bBoldText	= bBoldText,
				bItalicText	= bItalicText,
				bUnderText	= bUnderText

	lock "TextStyle_U", "bBoldText", "bItalicText", "bUnderText"
	hideparameter "TextStyle_U", "bBoldText", "bItalicText", "bUnderText"
endif


! =============================================================================
! Door-Window parameter control
! =============================================================================

if bWindow then
	lock	"bShowEgressDim_detailed",
			"bShowThreshold_detailed",
			"bShowHandle_detailed",
			"bShowCust_detailed",
			"bShowEgressDim_simple",
			"bShowThreshold_simple",
			"bShowHandle_simple",
			"bShowCust_simple",

			"strHandlePrefix",
			"strHandleValue",
			"strCustPrefix",
			"strCustValue"

	hideparameter "bShowEgressDim_detailed",
			"bShowThreshold_detailed",
			"bShowHandle_detailed",
			"bShowCust_detailed",
			"bShowEgressDim_simple",
			"bShowThreshold_simple",
			"bShowHandle_simple",
			"bShowCust_simple",

			"strHandlePrefix",
			"strHandleValue",
			"strCustPrefix",
			"strCustValue"
else
	lock	"bShowSill_detailed",
			"bShowCust1_detailed",
			"bShowCust2_detailed",
			"bShowSill_simple",
			"bShowCust1_simple",
			"bShowCust2_simple",

			"strCust1Prefix",
			"strCust1Value",
			"strCust2Prefix",
			"strCust2Value"

	hideparameter	"bShowSill_detailed",
			"bShowCust1_detailed",
			"bShowCust2_detailed",
			"bShowSill_simple",
			"bShowCust1_simple",
			"bShowCust2_simple",

			"strCust1Prefix",
			"strCust1Value",
			"strCust2Prefix",
			"strCust2Value"
endif

! ==============================================================================
! DWG-Export Type for GER
! ==============================================================================

if	LibraryLangCode <> "GER" then
	lock	"ac_dwg_block_name"
	hideparameter	"ac_dwg_block_name"

	! if the folder is empty
	lock	"gs_dwg_export_title"
	hideparameter	"gs_dwg_export_title"
endif

