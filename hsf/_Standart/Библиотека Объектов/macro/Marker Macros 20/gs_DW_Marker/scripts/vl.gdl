
parameters gs_GLOB_MODPAR_NAME = GLOB_MODPAR_NAME

values "gs_ui_current_page" 1,2,3,4,5

if iMarkerShape = SHAPE_CIRCLE or iMarkerShape = SHAPE_FRAGMENT \
	or iMarkerShape = SHAPE_OVAL then
	lock "gs_marker_rotation"
endif

values "stShowSillTo" stShowSillToValues
values "iShowSillTo" 1, 2, 3

if GLOB_MODPAR_NAME = "stShowSillTo" then
	iShowSillTo = 1
	if stShowSillTo = stShowSillToValues[2] then iShowSillTo = 2
	if stShowSillTo = stShowSillToValues[3] then iShowSillTo = 3
	parameters iShowSillTo = iShowSillTo
else
	stShowSillTo = stShowSillToValues[1]
	if iShowSillTo = 2 then stShowSillTo = stShowSillToValues[2]
	if iShowSillTo = 3 then stShowSillTo = stShowSillToValues[3]
	parameters stShowSillTo = stShowSillTo
endif

values "markerSizeUnit" `мм`, `см`, `точки`
values "iMarkerSizeUnit" 1, 2, 3
if GLOB_MODPAR_NAME = "markerSizeUnit" then
	if markerSizeUnit = `мм` 	then iMarkerSizeUnit = 1
	if markerSizeUnit = `см` 	then iMarkerSizeUnit = 2
	if markerSizeUnit = `точки` then iMarkerSizeUnit = 3
	parameters iMarkerSizeUnit = iMarkerSizeUnit
else
	if iMarkerSizeUnit = 1 then markerSizeUnit = `мм`
	if iMarkerSizeUnit = 2 then markerSizeUnit = `см`
	if iMarkerSizeUnit = 3 then markerSizeUnit = `точки`
	parameters markerSizeUnit = markerSizeUnit
endif

values "stMarkerDir" stMarkerDirValues
values "iMarkerDir" 1, 2, 3, 4

if GLOB_MODPAR_NAME = "stMarkerDir" then
	iMarkerDir = 1
	if stMarkerDir = stMarkerDirValues[2] then iMarkerDir = 2
	if stMarkerDir = stMarkerDirValues[3] then iMarkerDir = 3
	if stMarkerDir = stMarkerDirValues[4] then iMarkerDir = 4
	parameters iMarkerDir = iMarkerDir
else
	stMarkerDir = stMarkerDirValues[1]
	if iMarkerDir = 2 then stMarkerDir = stMarkerDirValues[2]
	if iMarkerDir = 3 then stMarkerDir = stMarkerDirValues[3]
	if iMarkerDir = 4 then stMarkerDir = stMarkerDirValues[4]
	parameters stMarkerDir = stMarkerDir
endif

if GLOB_MODPAR_NAME = "GS_CustomText_1" then
	GS_iCustomText_1 = CTXT_IDNUMBER
	if GS_CustomText_1 = stCustomText[4] then GS_iCustomText_1 = CTXT_FULLIDNUM		! Full Element ID
	if GS_CustomText_1 = stCustomText[3] then GS_iCustomText_1 = CTXT_CUSTOMTEXT	! Custom Text
	parameters GS_iCustomText_1 = GS_iCustomText_1
else
	GS_CustomText_1 = stCustomText[1]	! ID Number
	if GS_iCustomText_1 = CTXT_FULLIDNUM  then GS_CustomText_1 = stCustomText[4]	! Full Element ID
	if GS_iCustomText_1 = CTXT_CUSTOMTEXT then GS_CustomText_1 = stCustomText[3]	! Custom Text
	parameters GS_CustomText_1 = GS_CustomText_1
endif

values "GS_CustomText_1" stCustomText[1], stCustomText[4], stCustomText[3]	! Compact Element ID, Full Element ID, Custom Text
values "GS_iCustomText_1" CTXT_IDNUMBER, CTXT_FULLIDNUM, CTXT_CUSTOMTEXT

if GLOB_MODPAR_NAME = "GS_CustomText_2" then
	GS_iCustomText_2 = CTXT_MEASUREDVALUE
	if GS_CustomText_2 = stCustomText[3] then GS_iCustomText_2 = CTXT_CUSTOMTEXT	! Custom Text
	parameters GS_iCustomText_2 = GS_iCustomText_2
else
	GS_CustomText_2 = stCustomText[2]	! Measured Value
	if GS_iCustomText_2 = CTXT_CUSTOMTEXT then GS_CustomText_2 = stCustomText[3]	! Custom Text
	parameters GS_CustomText_2 = GS_CustomText_2
endif

values "GS_CustomText_2" stCustomText[2], stCustomText[3]	! Measured Value, Custom Text
values "GS_iCustomText_2" CTXT_MEASUREDVALUE, CTXT_CUSTOMTEXT

if GLOB_MODPAR_NAME = "GS_CustomText_3" then
	GS_iCustomText_3 = CTXT_MEASUREDVALUE
	if GS_CustomText_3 = stCustomText[3] then GS_iCustomText_3 = CTXT_CUSTOMTEXT	! Custom Text
	parameters GS_iCustomText_3 = GS_iCustomText_3
else
	GS_CustomText_3 = stCustomText[2]	! Measured Value
	if GS_iCustomText_3 = CTXT_CUSTOMTEXT then GS_CustomText_3 = stCustomText[3]	! Custom Text
	parameters GS_CustomText_3 = GS_CustomText_3
endif

values "GS_CustomText_3" stCustomText[2], stCustomText[3]	! Measured Value, Custom Text
values "GS_iCustomText_3" CTXT_MEASUREDVALUE, CTXT_CUSTOMTEXT

if GLOB_MODPAR_NAME = "GS_CustomText_4" then
	GS_iCustomText_4 = CTXT_MEASUREDVALUE
	if GS_CustomText_4 = stCustomText[3] then GS_iCustomText_4 = CTXT_CUSTOMTEXT	! Custom Text
	parameters GS_iCustomText_4 = GS_iCustomText_4
else
	GS_CustomText_4 = stCustomText[2]	! Measured Value
	if GS_iCustomText_4 = CTXT_CUSTOMTEXT then GS_CustomText_4 = stCustomText[3]	! Custom Text
	parameters GS_CustomText_4 = GS_CustomText_4
endif

values "GS_CustomText_4" stCustomText[2], stCustomText[3]	! Measured Value, Custom Text
values "GS_iCustomText_4" CTXT_MEASUREDVALUE, CTXT_CUSTOMTEXT

if GLOB_MODPAR_NAME = "GS_CustomText_5" then
	GS_iCustomText_5 = CTXT_MEASUREDVALUE
	if GS_CustomText_5 = stCustomText[3] then GS_iCustomText_5 = CTXT_CUSTOMTEXT	! Custom Text
	parameters GS_iCustomText_5 = GS_iCustomText_5
else
	GS_CustomText_5 = stCustomText[2]	! Measured Value
	if GS_iCustomText_5 = CTXT_CUSTOMTEXT then GS_CustomText_5 = stCustomText[3]	! Custom Text
	parameters GS_CustomText_5 = GS_CustomText_5
endif

values "GS_CustomText_5" stCustomText[2], stCustomText[3]	! Measured Value, Custom Text
values "GS_iCustomText_5" CTXT_MEASUREDVALUE, CTXT_CUSTOMTEXT

if GLOB_MODPAR_NAME = "GS_CustomText_6" then
	GS_iCustomText_6 = CTXT_MEASUREDVALUE
	if GS_CustomText_6 = stCustomText[3] then GS_iCustomText_6 = CTXT_CUSTOMTEXT	! Custom Text
	parameters GS_iCustomText_6 = GS_iCustomText_6
else
	GS_CustomText_6 = stCustomText[2]	! Measured Value
	if GS_iCustomText_6 = CTXT_CUSTOMTEXT then GS_CustomText_6 = stCustomText[3]	! Custom Text
	parameters GS_CustomText_6 = GS_CustomText_6
endif

values "GS_CustomText_6" stCustomText[2], stCustomText[3]	! Measured Value, Custom Text
values "GS_iCustomText_6" CTXT_MEASUREDVALUE, CTXT_CUSTOMTEXT

if GLOB_MODPAR_NAME = "GS_CustomText_7" then
	GS_iCustomText_7 = CTXT_MEASUREDVALUE
	if GS_CustomText_7 = stCustomText[3] then GS_iCustomText_7 = CTXT_CUSTOMTEXT	! Custom Text
	parameters GS_iCustomText_7 = GS_iCustomText_7
else
	GS_CustomText_7 = stCustomText[2]	! Measured Value
	if GS_iCustomText_7 = CTXT_CUSTOMTEXT then GS_CustomText_7 = stCustomText[3]	! Custom Text
	parameters GS_CustomText_7 = GS_CustomText_7
endif

values "GS_CustomText_7" stCustomText[2], stCustomText[3]	! Measured Value, Custom Text
values "GS_iCustomText_7" CTXT_MEASUREDVALUE, CTXT_CUSTOMTEXT

! ==============================================================================
! Changing marker size unit
! ==============================================================================

dot_in_mm = 25.4 / 72

if GLOB_MODPAR_NAME <> "" then
	if GLOB_MODPAR_NAME = "headDistPoint" then
		headDistCm = headDistPoint * dot_in_mm / 10
		headDistMm = headDistPoint * dot_in_mm
		headDistM = headDistPoint * dot_in_mm / 1000
		parameters	headDistCm = headDistCm,
					headDistMm = headDistMm,
					headDistM = headDistM
	else
		if GLOB_MODPAR_NAME = "headDistMm" then
			headDistCm = headDistMm / 10
			headDistPoint = headDistMm / dot_in_mm
			headDistM = headDistMm / 1000
			parameters	headDistCm = headDistCm,
						headDistPoint = headDistPoint,
						headDistM = headDistM
		else
			if GLOB_MODPAR_NAME = "headDistCm" then
				headDistMm = headDistCm * 10
				headDistPoint = headDistCm * 10 / dot_in_mm
				headDistM = headDistCm / 100
				parameters	headDistMm = headDistMm,
							headDistPoint = headDistPoint,
							headDistM = headDistM
			else
				headDistMm = headDistM * 1000
				headDistCm = headDistM * 100
				headDistPoint = headDistM * 1000 / dot_in_mm
				parameters	headDistMm = headDistMm,
							headDistCm = headDistCm,
							headDistPoint = headDistPoint
			endif
		endif
	endif

	if GLOB_MODPAR_NAME = "markerOffsetPoint" then
		markerOffsetCm = markerOffsetPoint * dot_in_mm / 10
		markerOffsetMm = markerOffsetPoint * dot_in_mm
		markerOffsetM = markerOffsetPoint * dot_in_mm / 1000
		parameters	markerOffsetCm = markerOffsetCm,
					markerOffsetMm = markerOffsetMm,
					markerOffsetM = markerOffsetM
	else
		if GLOB_MODPAR_NAME = "markerOffsetMm" then
			markerOffsetCm = markerOffsetMm / 10
			markerOffsetPoint = markerOffsetMm / dot_in_mm
			markerOffsetM = markerOffsetMm / 1000
			parameters	markerOffsetCm = markerOffsetCm,
						markerOffsetPoint = markerOffsetPoint,
						markerOffsetM = markerOffsetM
		else
			if GLOB_MODPAR_NAME = "markerOffsetCm" then
				markerOffsetMm = markerOffsetCm * 10
				markerOffsetPoint = markerOffsetCm * 10 / dot_in_mm
				markerOffsetM = markerOffsetCm / 100
				parameters	markerOffsetMm = markerOffsetMm,
							markerOffsetPoint = markerOffsetPoint,
							markerOffsetM = markerOffsetM
			else
				markerOffsetMm = markerOffsetM * 1000
				markerOffsetCm = markerOffsetM * 100
				markerOffsetPoint = markerOffsetM * 1000 / dot_in_mm
				parameters markerOffsetMm = markerOffsetMm,
							markerOffsetCm = markerOffsetCm,
							markerOffsetPoint = markerOffsetPoint
			endif
		endif
	endif

	if GLOB_MODPAR_NAME = "footLengthPoint" then
		footLengthCm = footLengthPoint * dot_in_mm / 10
		footLengthMm = footLengthPoint * dot_in_mm
		footLengthM = footLengthPoint * dot_in_mm / 1000
		parameters	footLengthCm = footLengthCm,
					footLengthMm = footLengthMm,
					footLengthM = footLengthM
	else
		if GLOB_MODPAR_NAME = "footLengthMm" then
			footLengthCm = footLengthMm / 10
			footLengthPoint = footLengthMm / dot_in_mm
			footLengthM = footLengthMm / 1000
			parameters	footLengthCm = footLengthCm,
						footLengthPoint = footLengthPoint,
						footLengthM = footLengthM
		else
			if GLOB_MODPAR_NAME = "footLengthCm" then
				footLengthMm = footLengthCm * 10
				footLengthPoint = footLengthCm * 10 / dot_in_mm
				footLengthM = footLengthCm / 100
				parameters	footLengthMm = footLengthMm,
							footLengthPoint = footLengthPoint,
							footLengthM = footLengthM
			else
				footLengthMm = footLengthM * 1000
				footLengthCm = footLengthM * 1000 / 10
				footLengthPoint = footLengthM * 1000 / dot_in_mm
				parameters footLengthMm = footLengthMm,
							footLengthCm = footLengthCm ,
							footLengthPoint = footLengthPoint
			endif
		endif
	endif

	if GLOB_MODPAR_NAME = "whDistPoint" then
		whDistCm = whDistPoint * dot_in_mm / 10
		whDistMm = whDistPoint * dot_in_mm
		whDistM = whDistPoint * dot_in_mm / 1000
		parameters	whDistCm = whDistCm,
					whDistMm = whDistMm,
					whDistM = whDistM
	else
		if GLOB_MODPAR_NAME = "whDistMm" then
			whDistCm = whDistMm / 10
			whDistPoint = whDistMm / dot_in_mm
			whDistM = whDistMm / 1000
			parameters	whDistCm = whDistCm,
						whDistPoint = whDistPoint,
						whDistM = whDistM
		else
			if GLOB_MODPAR_NAME = "whDistCm" then
				whDistMm = whDistCm * 10
				whDistPoint = whDistCm * 10 / dot_in_mm
				whDistM = whDistCm / 100
				parameters	whDistMm = whDistMm,
							whDistPoint = whDistPoint,
							whDistM = whDistM
			else
					whDistMm = whDistM * 1000
					whDistCm = whDistM * 1000 / 10
					whDistPoint = whDistM * 1000 / dot_in_mm
					parameters	whDistMm = whDistMm,
								whDistCm = whDistCm ,
								whDistPoint = whDistPoint
			endif
		endif
	endif

	if GLOB_MODPAR_NAME = "sillOffsetPoint" then
		sillOffsetCm = sillOffsetPoint * dot_in_mm / 10
		sillOffsetMm = sillOffsetPoint * dot_in_mm
		sillOffsetM = sillOffsetPoint * dot_in_mm / 1000
		parameters	sillOffsetCm = sillOffsetCm,
					sillOffsetMm = sillOffsetMm,
					sillOffsetM = sillOffsetM
	else
		if GLOB_MODPAR_NAME = "sillOffsetMm" then
			sillOffsetCm = sillOffsetMm / 10
			sillOffsetPoint = sillOffsetMm / dot_in_mm
			sillOffsetM = sillOffsetMm / 1000
			parameters	sillOffsetCm = sillOffsetCm,
						sillOffsetPoint = sillOffsetPoint,
						sillOffsetM = sillOffsetM
		else
			if GLOB_MODPAR_NAME = "sillOffsetCm" then
				sillOffsetMm = sillOffsetCm * 10
				sillOffsetPoint = sillOffsetCm * 10 / dot_in_mm
				sillOffsetM = sillOffsetCm / 100
				parameters	sillOffsetMm = sillOffsetMm,
							sillOffsetPoint = sillOffsetPoint,
							sillOffsetM = sillOffsetM
			else
				sillOffsetMm = sillOffsetM * 1000
				sillOffsetCm = sillOffsetM * 100
				sillOffsetPoint = sillOffsetM * 1000 / dot_in_mm
				parameters	sillOffsetMm = sillOffsetMm,
							sillOffsetCm = sillOffsetCm,
							sillOffsetPoint = sillOffsetPoint
			endif
		endif
	endif


	if GLOB_MODPAR_NAME = "sillDistPoint" then
		sillDistCm = sillDistPoint * dot_in_mm / 10
		sillDistMm = sillDistPoint * dot_in_mm
		sillDistM = sillDistPoint * dot_in_mm / 1000
		parameters	sillDistCm = sillDistCm,
					sillDistMm = sillDistMm,
					sillDistM = sillDistM
	else
		if GLOB_MODPAR_NAME = "sillDistMm" then
			sillDistCm = sillDistMm / 10
			sillDistPoint = sillDistMm / dot_in_mm
			sillDistM = sillDistMm / 1000
			parameters	sillDistCm = sillDistCm,
						sillDistPoint = sillDistPoint,
						sillDistM = sillDistM
		else
			if GLOB_MODPAR_NAME = "sillDistCm" then
				sillDistMm = sillDistCm * 10
				sillDistPoint = sillDistCm * 10 / dot_in_mm
				sillDistM = sillDistCm / 100
				parameters	sillDistMm = sillDistMm,
							sillDistPoint = sillDistPoint,
							sillDistM = sillDistM
			else
				sillDistMm = sillDistM * 1000
				sillDistCm = sillDistM * 100
				sillDistPoint = sillDistM * 1000 / dot_in_mm
				parameters	sillDistMm = sillDistMm,
							sillDistCm = sillDistCm,
							sillDistPoint = sillDistPoint
			endif
		endif
	endif

	if GLOB_MODPAR_NAME = "fireOffsetPoint" then
		fireOffsetCm = fireOffsetPoint * dot_in_mm / 10
		fireOffsetMm = fireOffsetPoint * dot_in_mm
		fireOffsetM = fireOffsetPoint * dot_in_mm / 1000
		parameters	fireOffsetCm = fireOffsetCm,
					fireOffsetMm = fireOffsetMm,
					fireOffsetM = fireOffsetM
	else
		if GLOB_MODPAR_NAME = "fireOffsetMm" then
			fireOffsetCm = fireOffsetMm / 10
			fireOffsetPoint = fireOffsetMm / dot_in_mm
			fireOffsetM = fireOffsetMm / 1000
			parameters	fireOffsetCm = fireOffsetCm,
						fireOffsetPoint = fireOffsetPoint,
						fireOffsetM = fireOffsetM
		else
			if GLOB_MODPAR_NAME = "fireOffsetCm" then
				fireOffsetMm = fireOffsetCm * 10
				fireOffsetPoint = fireOffsetCm * 10 / dot_in_mm
				fireOffsetM =  fireOffsetCm / 100
				parameters	fireOffsetMm = fireOffsetMm,
							fireOffsetPoint = fireOffsetPoint,
							fireOffsetM = fireOffsetM
			else
				fireOffsetMm = fireOffsetM * 1000
				fireOffsetCm = fireOffsetM * 100
				fireOffsetPoint = fireOffsetM * 1000 / dot_in_mm
				parameters	fireOffsetMm = fireOffsetMm,
							fireOffsetCm = fireOffsetCm,
							fireOffsetPoint = fireOffsetPoint
			endif
		endif
	endif

	if GLOB_MODPAR_NAME = "fireDistPoint" then
		fireDistCm = fireDistPoint * dot_in_mm / 10
		fireDistMm = fireDistPoint * dot_in_mm
		fireDistM = fireDistPoint * dot_in_mm / 1000
		parameters	fireDistCm = fireDistCm,
					fireDistMm = fireDistMm,
					fireDistM = fireDistM
	else
		if GLOB_MODPAR_NAME = "fireDistMm" then
			fireDistCm = fireDistMm / 10
			fireDistPoint = fireDistMm / dot_in_mm
			fireDistM = fireDistMm / 1000
			parameters	fireDistCm = fireDistCm,
						fireDistPoint = fireDistPoint,
						fireDistM = fireDistM
		else
			if GLOB_MODPAR_NAME = "fireDistCm" then
				fireDistMm = fireDistCm * 10
				fireDistPoint = fireDistCm * 10 / dot_in_mm
				fireDistM = fireDistCm / 100
				parameters	fireDistMm = fireDistMm,
							fireDistPoint = fireDistPoint,
							fireDistM = fireDistM
			else
				fireDistMm = fireDistM * 1000
				fireDistCm = fireDistM * 100
				fireDistPoint = fireDistM * 1000 / dot_in_mm
				parameters	fireDistMm = fireDistMm,
							fireDistCm = fireDistCm,
							fireDistPoint = fireDistPoint
			endif
		endif
	endif


	if GLOB_MODPAR_NAME = "acousticOffsetPoint" then
		acousticOffsetCm = acousticOffsetPoint * dot_in_mm / 10
		acousticOffsetMm = acousticOffsetPoint * dot_in_mm
		acousticOffsetM = acousticOffsetPoint * dot_in_mm / 1000
		parameters	acousticOffsetCm = acousticOffsetCm,
					acousticOffsetMm = acousticOffsetMm,
					acousticOffsetM = acousticOffsetM
	else
		if GLOB_MODPAR_NAME = "acousticOffsetMm" then
			acousticOffsetCm = acousticOffsetMm / 10
			acousticOffsetPoint = acousticOffsetMm / dot_in_mm
			acousticOffsetM = acousticOffsetMm / 1000
			parameters	acousticOffsetCm = acousticOffsetCm,
						acousticOffsetPoint = acousticOffsetPoint,
						acousticOffsetM = acousticOffsetM
		else
			if GLOB_MODPAR_NAME = "acousticOffsetCm" then
				acousticOffsetMm = acousticOffsetCm * 10
				acousticOffsetPoint = acousticOffsetCm * 10 / dot_in_mm
				acousticOffsetM = acousticOffsetCm / 100
				parameters	acousticOffsetMm = acousticOffsetMm,
							acousticOffsetPoint = acousticOffsetPoint,
							acousticOffsetM = acousticOffsetM
			else
				acousticOffsetMm = acousticOffsetM * 1000
				acousticOffsetCm = acousticOffsetM * 100
				acousticOffsetPoint = acousticOffsetM * 1000 / dot_in_mm
				parameters	acousticOffsetMm = acousticOffsetMm,
							acousticOffsetCm = acousticOffsetCm,
							acousticOffsetPoint = acousticOffsetPoint
			endif
		endif
	endif


	if GLOB_MODPAR_NAME = "acousticDistPoint" then
		acousticDistCm = acousticDistPoint * dot_in_mm / 10
		acousticDistMm = acousticDistPoint * dot_in_mm
		acousticDistM = acousticDistPoint * dot_in_mm / 1000
		parameters	acousticDistCm = acousticDistCm,
					acousticDistMm = acousticDistMm,
					acousticDistM = acousticDistM
	else
		if GLOB_MODPAR_NAME = "acousticDistMm" then
			acousticDistCm = acousticDistMm / 10
			acousticDistPoint = acousticDistMm / dot_in_mm
			acousticDistM = acousticDistMm / 1000
			parameters	acousticDistCm = acousticDistCm,
						acousticDistPoint = acousticDistPoint,
						acousticDistM = acousticDistM
		else
			if GLOB_MODPAR_NAME = "acousticDistCm" then
				acousticDistMm = acousticDistCm * 10
				acousticDistPoint = acousticDistCm * 10 / dot_in_mm
				acousticDistM = acousticDistCm / 100
				parameters	acousticDistMm = acousticDistMm,
							acousticDistPoint = acousticDistPoint,
							acousticDistM = acousticDistM
			else
				acousticDistMm = acousticDistM * 1000
				acousticDistCm = acousticDistM * 100
				acousticDistPoint = acousticDistM *1000 / dot_in_mm
				parameters	acousticDistMm = acousticDistMm,
							acousticDistCm = acousticDistCm,
							acousticDistPoint = acousticDistPoint
			endif
		endif
	endif

	if GLOB_MODPAR_NAME = "uvalueOffsetPoint" then
		uvalueOffsetCm		= uvalueOffsetPoint * dot_in_mm / 10
		uvalueOffsetMm		= uvalueOffsetPoint * dot_in_mm
		uvalueOffsetM		= uvalueOffsetPoint * dot_in_mm / 1000
		parameters	uvalueOffsetCm		= uvalueOffsetCm,
					uvalueOffsetMm		= uvalueOffsetMm,
					uvalueOffsetM		= uvalueOffsetM
	else
		if GLOB_MODPAR_NAME = "uvalueOffsetMm" then
			uvalueOffsetCm		= uvalueOffsetMm / 10
			uvalueOffsetPoint	= uvalueOffsetMm / dot_in_mm
			uvalueOffsetM		= uvalueOffsetMm / 1000
			parameters	uvalueOffsetCm		= uvalueOffsetCm,
						uvalueOffsetPoint	= uvalueOffsetPoint,
						uvalueOffsetM		= uvalueOffsetM
		else
			if GLOB_MODPAR_NAME = "uvalueOffsetCm" then
				uvalueOffsetMm		= uvalueOffsetCm * 10
				uvalueOffsetPoint	= uvalueOffsetCm * 10 / dot_in_mm
				uvalueOffsetM		= uvalueOffsetCm / 100
				parameters	uvalueOffsetMm		= uvalueOffsetMm,
							uvalueOffsetPoint	= uvalueOffsetPoint,
							uvalueOffsetM		= uvalueOffsetM
			else
				uvalueOffsetMm		= uvalueOffsetM * 1000
				uvalueOffsetCm		= uvalueOffsetM * 100
				uvalueOffsetPoint	= uvalueOffsetM * 1000 / dot_in_mm
				parameters	uvalueOffsetMm		= uvalueOffsetMm,
							uvalueOffsetCm		= uvalueOffsetCm,
							uvalueOffsetPoint	= uvalueOffsetPoint
			endif
		endif
	endif


	if GLOB_MODPAR_NAME = "uvalueDistPoint" then
		uvalueDistCm	= uvalueDistPoint * dot_in_mm / 10
		uvalueDistMm	= uvalueDistPoint * dot_in_mm
		uvalueDistM		= uvalueDistPoint * dot_in_mm / 1000
		parameters	uvalueDistCm	= uvalueDistCm,
					uvalueDistMm	= uvalueDistMm,
					uvalueDistM		= uvalueDistM
	else
		if GLOB_MODPAR_NAME = "uvalueDistMm" then
			uvalueDistCm	= uvalueDistMm / 10
			uvalueDistPoint = uvalueDistMm / dot_in_mm
			uvalueDistM		= uvalueDistMm / 1000
			parameters	uvalueDistCm	= uvalueDistCm,
						uvalueDistPoint	= uvalueDistPoint,
						uvalueDistM		= uvalueDistM
		else
			if GLOB_MODPAR_NAME = "uvalueDistCm" then
				uvalueDistMm	= uvalueDistCm * 10
				uvalueDistPoint	= uvalueDistCm * 10 / dot_in_mm
				uvalueDistM		= uvalueDistCm / 100
				parameters	uvalueDistMm	= uvalueDistMm,
							uvalueDistPoint = uvalueDistPoint,
							uvalueDistM	 = uvalueDistM
			else
				uvalueDistMm	= uvalueDistM * 1000
				uvalueDistCm	= uvalueDistM * 100
				uvalueDistPoint = uvalueDistM * 1000 / dot_in_mm
				parameters	uvalueDistMm	= uvalueDistMm,
							uvalueDistCm	= uvalueDistCm,
							uvalueDistPoint = uvalueDistPoint
			endif
		endif
	endif
endif


! ==============================================================================
! Working Units
! ==============================================================================

values{2} "iWorkUnitLinear"	DIMUNIT_MM,			stUnitFormats[1],
							DIMUNIT_CM,			stUnitFormats[2],
							DIMUNIT_DM,			stUnitFormats[3],
							DIMUNIT_METER,		stUnitFormats[4],
							DIMUNIT_INCH,		stUnitFormats[5],
							DIMUNIT_PROJECT,	stUnitFormats[6]

put 0, 1
if iWorkUnitLinear = DIMUNIT_CM		then put 2
if iWorkUnitLinear = DIMUNIT_DM		then put 2, 3
if iWorkUnitLinear = DIMUNIT_METER	then put 2, 3, 4

values "iWorkUnitLinearDecimal" get(NSP)

values{2} "iWorkUnitSillHgt"	DIMUNIT_MM,			stUnitFormats[1],
								DIMUNIT_CM,			stUnitFormats[2],
								DIMUNIT_DM,			stUnitFormats[3],
								DIMUNIT_METER,		stUnitFormats[4],
								DIMUNIT_INCH,		stUnitFormats[5],
								DIMUNIT_PROJECT,	stUnitFormats[6]

put 0, 1
if iWorkUnitSillHgt = DIMUNIT_CM	then put 2
if iWorkUnitSillHgt = DIMUNIT_DM	then put 2, 3
if iWorkUnitSillHgt = DIMUNIT_METER	then put 2, 3, 4

values "iWorkUnitSillHgtDecimal" get(NSP)

if not(AC_WidHei_On) then
	lock "iWorkUnitLinear"
	hideparameter	"iWorkUnitLinear",
					"iWorkUnitLinearDecimal"
endif

if _bLockLinearUnitDecimal then
	lock "iWorkUnitLinearDecimal"
	hideparameter "iWorkUnitLinearDecimal"
endif

if not(AC_Sill_On) then
	lock "iWorkUnitSillHgt"
	hideparameter	"iWorkUnitSillHgt",
					"iWorkUnitSillHgtDecimal"
endif

if _bLockSillHgtUnitDecimal then
	lock "iWorkUnitSillHgtDecimal"
	hideparameter "iWorkUnitSillHgtDecimal"
endif


! ==============================================================================
! Parameter lock
! ==============================================================================

if iMarkerSizeUnit = 1 then ! mm
	hideparameter	"headDistCm", "headDistPoint",
					"markerOffsetCm", "markerOffsetPoint",
					"footLengthCm", "footLengthPoint",
					"whDistCm", "whDistPoint",
					"sillOffsetCm", "sillOffsetPoint",
					"sillDistCm", "sillDistPoint",
					"fireOffsetCm", "fireOffsetPoint",
					"fireDistCm", "fireDistPoint",
					"acousticOffsetCm", "acousticOffsetPoint",
					"acousticDistCm", "acousticDistPoint",
					"uvalueOffsetCm", "uvalueOffsetPoint",
					"uvalueDistCm", "uvalueDistPoint"

	lock			"headDistCm", "headDistPoint",
					"markerOffsetCm", "markerOffsetPoint",
					"footLengthCm", "footLengthPoint",
					"whDistCm", "whDistPoint",
					"sillOffsetCm", "sillOffsetPoint",
					"sillDistCm", "sillDistPoint",
					"fireOffsetCm", "fireOffsetPoint",
					"fireDistCm", "fireDistPoint",
					"acousticOffsetCm", "acousticOffsetPoint",
					"acousticDistCm", "acousticDistPoint",
					"uvalueOffsetCm", "uvalueOffsetPoint",
					"uvalueDistCm", "uvalueDistPoint"
endif
if iMarkerSizeUnit = 2 then ! cm
	hideparameter	"headDistMm", "headDistPoint",
					"markerOffsetMm", "markerOffsetPoint",
					"footLengthMm", "footLengthPoint",
					"whDistMm", "whDistPoint",
					"sillOffsetMm", "sillOffsetPoint",
					"sillDistMm", "sillDistPoint",
					"fireOffsetMm", "fireOffsetPoint",
					"fireDistMm", "fireDistPoint",
					"acousticOffsetMm", "acousticOffsetPoint",
					"acousticDistMm", "acousticDistPoint",
					"uvalueOffsetMm", "uvalueOffsetPoint",
					"uvalueDistMm", "uvalueDistPoint"

	lock			"headDistMm", "headDistPoint",
					"markerOffsetMm", "markerOffsetPoint",
					"footLengthMm", "footLengthPoint",
					"whDistMm", "whDistPoint",
					"sillOffsetMm", "sillOffsetPoint",
					"sillDistMm", "sillDistPoint",
					"fireOffsetMm", "fireOffsetPoint",
					"fireDistMm", "fireDistPoint",
					"acousticOffsetMm", "acousticOffsetPoint",
					"acousticDistMm", "acousticDistPoint",
					"uvalueOffsetMm", "uvalueOffsetPoint",
					"uvalueDistMm", "uvalueDistPoint"
endif
if iMarkerSizeUnit = 3 then ! point
	hideparameter	"headDistCm", "headDistMm",
					"markerOffsetCm", "markerOffsetMm",
					"footLengthCm", "footLengthMm",
					"whDistCm", "whDistMm",
					"sillOffsetCm", "sillOffsetMm",
					"sillDistCm", "sillDistMm",
					"fireOffsetCm", "fireOffsetMm",
					"fireDistCm", "fireDistMm",
					"acousticOffsetCm", "acousticOffsetMm",
					"acousticDistCm", "acousticDistMm",
					"uvalueOffsetCm", "uvalueOffsetMm",
					"uvalueDistCm", "uvalueDistMm"

	lock			"headDistCm", "headDistMm",
					"markerOffsetCm", "markerOffsetMm",
					"footLengthCm", "footLengthMm",
					"whDistCm", "whDistMm",
					"sillOffsetCm", "sillOffsetMm",
					"sillDistCm", "sillDistMm",
					"fireOffsetCm", "fireOffsetMm",
					"fireDistCm", "fireDistMm",
					"acousticOffsetCm", "acousticOffsetMm",
					"acousticDistCm", "acousticDistMm",
					"uvalueOffsetCm", "uvalueOffsetMm",
					"uvalueDistCm", "uvalueDistMm"
endif

if not(GS_Center_Line) then
	lock "footLengthMm"
	hideparameter "footLengthMm"
endif

if not(AC_ID_On) then
	lock "GS_CustomText_1", "AC_MarkerText_1"
	hideparameter "GS_CustomText_1", "AC_MarkerText_1"
endif

if not(AC_Sill_On) then
	lock	"gs_marker_text_4_title", "GS_CustomText_4", "AC_MarkerText_4",
			"AC_SillNominal", "AC_SillPrefix", "stShowSillTo", "iShowSillTo"
	hideparameter	"gs_marker_text_4_title", "GS_CustomText_4", "AC_MarkerText_4",
					"AC_SillNominal", "AC_SillPrefix", "stShowSillTo", "iShowSillTo"
endif
if gs_dw_marker_type = 3 then
	lock "AC_SillNominal"
	hideparameter "AC_SillNominal"
endif

if not(AC_WidHei_On) then
	! INT version Marker UI page parameter lock
	if not(gsIsNedMarker) then
		lock	"gs_marker_text_2_title", "gs_marker_text_3_title",
				"GS_CustomText_2", "AC_MarkerText_2", "GS_CustomText_3",
				"AC_MarkerText_3", "gs_dimension_select", "whDistMm", "whDistCm", "whDistPoint"
		hideparameter	"gs_marker_text_2_title", "gs_marker_text_3_title",
						"GS_CustomText_2", "AC_MarkerText_2", "GS_CustomText_3",
						"AC_MarkerText_3", "gs_dimension_select", "whDistMm", "whDistCm", "whDistPoint"
		! NED version Marker UI page parameter lock
	else
		lock	"gs_marker_text_2_title", "gs_marker_text_3_title",
				"GS_CustomText_2", "AC_MarkerText_2", "GS_CustomText_3",
				"AC_MarkerText_3", "gs_dimension_select", "whDistMm", "whDistCm", "whDistPoint",
				"NedSizePref", "NedSizeSep"
		hideparameter	"gs_marker_text_2_title", "gs_marker_text_3_title",
						"GS_CustomText_2", "AC_MarkerText_2", "GS_CustomText_3",
						"AC_MarkerText_3", "gs_dimension_select", "whDistMm", "whDistCm", "whDistPoint",
						"NedSizePref", "NedSizeSep"
	endif
endif

if not(AC_show_firerating) then
	lock	"gs_marker_text_5_title", "GS_CustomText_5", "AC_MarkerText_5",
			"fireOffsetMm", "fireDistMm","AC_Pen_FireRate"
	hideparameter	"gs_marker_text_5_title", "GS_CustomText_5", "AC_MarkerText_5",
					"fireOffsetMm", "fireDistMm", "fireOffsetCm", "fireDistCm",
					"fireOffsetPoint", "fireDistPoint","AC_Pen_FireRate"
endif

if not(AC_show_acousticrating) then
	lock	"gs_marker_text_6_title", "GS_CustomText_6", "AC_MarkerText_6",
			"acousticOffsetMm", "acousticDistMm"
	hideparameter	"gs_marker_text_6_title", "GS_CustomText_6", "AC_MarkerText_6",
					"acousticOffsetMm", "acousticDistMm", "acousticOffsetCm", "acousticDistCm",
					"acousticOffsetPoint", "acousticDistPoint"
endif

if not(AC_show_Uvalue) then
	lock	"gs_marker_text_7_title", "GS_CustomText_7", "AC_MarkerText_7",
			"uvalueOffsetMm", "uvalueDistMm"
	hideparameter	"gs_marker_text_7_title", "GS_CustomText_7", "AC_MarkerText_7",
					"uvalueOffsetMm", "uvalueDistMm", "uvalueOffsetCm", "uvalueDistCm",
					"uvalueOffsetPoint", "uvalueDistPoint"
endif

values "gs_marker_shape" stShapes
values "iMarkerShape" SHAPE_CIRCLE, SHAPE_RECT, SHAPE_FRAGMENT, SHAPE_OVAL, SHAPE_TRIANGLE, SHAPE_PENTAGON, SHAPE_HEXAGON, SHAPE_OCTAGON, SHAPE_NONE

if GLOB_MODPAR_NAME = "gs_marker_shape" then
	iMarkerShape = SHAPE_CIRCLE
	for i = 2 to vardim1(stShapes) - 1
		if gs_marker_shape = stShapes[i] then iMarkerShape = i
	next i
	if gs_marker_shape = stShapes[vardim1(stShapes)] then iMarkerShape = SHAPE_NONE

	parameters iMarkerShape = iMarkerShape
else
	if iMarkerShape = SHAPE_NONE then
		gs_marker_shape = stShapes[vardim1(stShapes)]
	else
		gs_marker_shape = stShapes[max(1, min(iMarkerShape, vardim1(stShapes) - 1))]
	endif

	parameters 	gs_marker_shape = gs_marker_shape
endif

if GLOB_MODPAR_NAME = "AC_WIDO_TYPE" & AC_WIDO_TYPE = 2 then
	parameters gs_marker_shape = `Окружность`, iMarkerShape = SHAPE_CIRCLE
endif
if GLOB_MODPAR_NAME = "AC_WIDO_TYPE" & AC_WIDO_TYPE = 1 then
	parameters gs_marker_shape = `Шестиугольник`, iMarkerShape = SHAPE_HEXAGON
endif

if iMarkerShape <> SHAPE_CIRCLE then
	lock "gs_markertext_fit"
	hideparameter "gs_markertext_fit"
else
	if gs_markertext_fit = 1 then
		lock "AC_MarkerSize"
		hideparameter "AC_MarkerSize"
	endif
endif

if not(gs_MarkerFill) then
	lock "AC_MarkerFill","gs_fill_pen","gs_back_pen"
	hideparameter "AC_MarkerFill","gs_fill_pen","gs_back_pen"
endif

if not(AC_Sill_On) then
	lock "stShowSillTo", "iShowSillTo", "sillOffsetMm", "sillDistMm"
	hideparameter "stShowSillTo", "iShowSillTo", "sillOffsetMm", "sillDistMm"
endif


! ==============================================================================
! Marker Text
! ==============================================================================

if	GS_iCustomText_1 = CTXT_IDNUMBER |\
	GS_iCustomText_1 = CTXT_FULLIDNUM then
	parameters AC_MarkerText_1 = AC_MarkerText_1
endif
if GS_iCustomText_2 = CTXT_MEASUREDVALUE then
	parameters AC_MarkerText_2 = AC_MarkerText_2	! Opening Width Value
endif
if GS_iCustomText_3 = CTXT_MEASUREDVALUE then
	parameters AC_MarkerText_3 = AC_MarkerText_3	! Opening Height Value
endif
if GS_iCustomText_4 = CTXT_MEASUREDVALUE then
	parameters AC_MarkerText_4 = AC_MarkerText_4	! Sill Value
endif

if GS_iCustomText_1 <> CTXT_CUSTOMTEXT then
	lock "AC_MarkerText_1"
	hideparameter "AC_MarkerText_1"
endif
if GS_iCustomText_2 <> CTXT_CUSTOMTEXT then
	lock "AC_MarkerText_2"
	hideparameter "AC_MarkerText_2"
endif
if GS_iCustomText_3 <> CTXT_CUSTOMTEXT then
	lock "AC_MarkerText_3"
	hideparameter "AC_MarkerText_3"
endif
if GS_iCustomText_4 = CTXT_MEASUREDVALUE then
	hideparameter "AC_MarkerText_4"
	lock "AC_MarkerText_4"
else
	hideparameter "AC_SillPrefix", "AC_SillNominal"
	lock "AC_SillNominal", "AC_SillPrefix"
endif
if GS_iCustomText_5 = CTXT_MEASUREDVALUE or not(AC_show_firerating) then
	lock "AC_MarkerText_5"
else
	hideparameter "AC_FirePrefix"
	lock "AC_FirePrefix"
endif
if GS_iCustomText_6 = CTXT_MEASUREDVALUE or not(AC_show_acousticrating) then
	lock "AC_MarkerText_6"
else
	hideparameter "AC_AcousticPrefix"
	lock "AC_AcousticPrefix"
endif

if GS_iCustomText_7 = CTXT_MEASUREDVALUE or not(AC_show_Uvalue) then
	lock "AC_MarkerText_7"
else
	hideparameter "AC_UvaluePrefix"
	lock "AC_UvaluePrefix"
endif

if AC_TextSize_1 < 0 then parameters AC_TextSize_1 = abs(AC_TextSize_1)
if GS_TextSize_2_e < 0 then parameters GS_TextSize_2_e = abs(GS_TextSize_2_e)
if GS_TextSize_3_e < 0 then parameters GS_TextSize_3_e = abs(GS_TextSize_3_e)
if GS_TextSize_4_e < 0 then parameters GS_TextSize_4_e = abs(GS_TextSize_4_e)
if GS_TextSize_5_e < 0 then parameters GS_TextSize_5_e = abs(GS_TextSize_5_e)
if GS_TextSize_6_e < 0 then parameters GS_TextSize_6_e = abs(GS_TextSize_6_e)
if GS_TextSize_7_e < 0 then parameters GS_TextSize_7_e = abs(GS_TextSize_7_e)

if GS_UniTextFormat then
	hideparameter "gs_marker_text_2_title", "gs_marker_text_3_title", "gs_marker_text_4_title",
		"gs_marker_text_5_title", "gs_marker_text_6_title", "gs_marker_text_7_title"
	hideparameter "AC_TextFont_2", "AC_TextFont_3", "AC_TextFont_4",
		"AC_TextFont_5", "AC_TextFont_6", "AC_TextFont_7"
	hideparameter "GS_TextSize_2_e", "GS_TextSize_3_e", "GS_TextSize_4_e",
		"GS_TextSize_5_e", "GS_TextSize_6_e", "GS_TextSize_7_e"
	hideparameter "AC_TextStyle_2", "AC_TextStyle_3", "AC_TextStyle_4",
		"AC_TextStyle_5", "AC_TextStyle_6", "AC_TextStyle_7"
	hideparameter "AC_TextPen_2", "AC_TextPen_3", "AC_TextPen_4",
		"AC_TextPen_5", "AC_TextPen_6", "AC_TextPen_7"
	hideparameter "AC_TextSize_2", "AC_TextSize_3", "AC_TextSize_4",
		"AC_TextSize_5", "AC_TextSize_6", "AC_TextSize_7"
	hideparameter	"gs_Text_Style_1B", "gs_Text_Style_2B", "gs_Text_Style_3B",
					"gs_Text_Style_4B", "gs_Text_Style_5B", "gs_Text_Style_6B", "gs_Text_Style_7B"
	hideparameter	"gs_Text_Style_1I", "gs_Text_Style_2I", "gs_Text_Style_3I",
					"gs_Text_Style_4I", "gs_Text_Style_5I", "gs_Text_Style_6I", "gs_Text_Style_7I"
	hideparameter	"gs_Text_Style_1U", "gs_Text_Style_2U", "gs_Text_Style_3U",
					"gs_Text_Style_4U", "gs_Text_Style_5U", "gs_Text_Style_6U", "gs_Text_Style_7U"

	lock "gs_marker_text_2_title", "gs_marker_text_3_title", "gs_marker_text_4_title",
		"gs_marker_text_5_title", "gs_marker_text_6_title", "gs_marker_text_7_title"
	lock "AC_TextFont_2", "AC_TextFont_3", "AC_TextFont_4",
		"AC_TextFont_5", "AC_TextFont_6", "AC_TextFont_7"
	lock "GS_TextSize_2_e", "GS_TextSize_3_e", "GS_TextSize_4_e",
		"GS_TextSize_5_e", "GS_TextSize_6_e", "GS_TextSize_7_e"
	lock "AC_TextStyle_2", "AC_TextStyle_3", "AC_TextStyle_4",
		"AC_TextStyle_5", "AC_TextStyle_6", "AC_TextStyle_7"
	lock "AC_TextPen_2", "AC_TextPen_3", "AC_TextPen_4",
		"AC_TextPen_5", "AC_TextPen_6", "AC_TextPen_7"
	lock "AC_TextSize_2", "AC_TextSize_3", "AC_TextSize_4",
		"AC_TextSize_5", "AC_TextSize_6", "AC_TextSize_7"
	lock	"gs_Text_Style_1B", "gs_Text_Style_2B", "gs_Text_Style_3B",
			"gs_Text_Style_4B", "gs_Text_Style_5B", "gs_Text_Style_6B", "gs_Text_Style_7B"
	lock	"gs_Text_Style_1I", "gs_Text_Style_2I", "gs_Text_Style_3I",
			"gs_Text_Style_4I", "gs_Text_Style_5I", "gs_Text_Style_6I", "gs_Text_Style_7I"
	lock	"gs_Text_Style_1U", "gs_Text_Style_2U", "gs_Text_Style_3U",
			"gs_Text_Style_4U", "gs_Text_Style_5U", "gs_Text_Style_6U", "gs_Text_Style_7U"
else
	parameters AC_TextStyle_2 = bittest (AC_TextStyle_2, 0) + 2 * bittest (AC_TextStyle_2, 1) + 4 * bittest (AC_TextStyle_2, 2) + 8 * bittest (AC_TextStyle_2, 3) + 16 * bittest (AC_TextStyle_2, 4)
	values "AC_TextStyle_2" range[0,31]

	parameters AC_TextStyle_3 = bittest (AC_TextStyle_3, 0) + 2 * bittest (AC_TextStyle_3, 1) + 4 * bittest (AC_TextStyle_3, 2) + 8 * bittest (AC_TextStyle_3, 3) + 16 * bittest (AC_TextStyle_3, 4)
	values "AC_TextStyle_3" range[0,31]

	parameters AC_TextStyle_4 = bittest (AC_TextStyle_4, 0) + 2 * bittest (AC_TextStyle_4, 1) + 4 * bittest (AC_TextStyle_4, 2) + 8 * bittest (AC_TextStyle_4, 3) + 16 * bittest (AC_TextStyle_4, 4)
	values "AC_TextStyle_4" range[0,31]

	parameters AC_TextStyle_5 = bittest (AC_TextStyle_5, 0) + 2 * bittest (AC_TextStyle_5, 1) + 4 * bittest (AC_TextStyle_5, 2) + 8 * bittest (AC_TextStyle_5, 3) + 16 * bittest (AC_TextStyle_5, 4)
	values "AC_TextStyle_5" range[0,31]

	parameters AC_TextStyle_6 = bittest (AC_TextStyle_6, 0) + 2 * bittest (AC_TextStyle_6, 1) + 4 * bittest (AC_TextStyle_6, 2) + 8 * bittest (AC_TextStyle_6, 3) + 16 * bittest (AC_TextStyle_6, 4)
	values "AC_TextStyle_6" range[0,31]

	parameters AC_TextStyle_7 = bittest (AC_TextStyle_7, 0) + 2 * bittest (AC_TextStyle_7, 1) + 4 * bittest (AC_TextStyle_7, 2) + 8 * bittest (AC_TextStyle_7, 3) + 16 * bittest (AC_TextStyle_7, 4)
	values "AC_TextStyle_7" range[0,31]
endif


! ==============================================================================
! Select Size to Show
! ==============================================================================

if gs_dw_marker_type = 2 then

	! Door size types
	if gsIsNedMarker then
		!! NED parameter values-----------------------------------------------------
		values "gs_dimension_select" stDimensionTypes[1], stDimensionTypes[3], stDimensionTypes[4],
								stDimensionTypes[6], stDimensionTypes[7], stDimensionTypes[8]
		values "gs_dimension_select_int"  1, 4, 3, 6, 7, 8
	else
		!! INT parameter values-----------------------------------------------------
		values "gs_dimension_select" stDimensionTypes[1], stDimensionTypes[2],
				stDimensionTypes[3], stDimensionTypes[4]
		values "gs_dimension_select_int" 1, 2, 3, 4
	endif
else
	if gs_dw_marker_type = 3 then
		! Skylight size types
		gs_dimension_select = stDimensionTypes[1]
		parameters gs_dimension_select = gs_dimension_select

		lock	"gs_dimension_select"
		hideparameter	"gs_dimension_select"
	else
		! Window size types
		values "gs_dimension_select" stDimensionTypes[1], stDimensionTypes[2], stDimensionTypes[5]
		values "gs_dimension_select_int" 1, 2, 5
	endif
endif



! ==============================================================================
! Font Size
! ==============================================================================

w_units_form = ""
rrr = request("Linear_dimension", "", w_units_form)
bLinearDimIsMetric = (strstr(w_units_form, "m") > 0)

if not(bLinearDimIsMetric) then	! Conversion
	ratio = 25.4/72
else
	ratio = 1
endif

if GLOB_MODPAR_NAME = "GS_TextSize_2_e" then parameters AC_TextSize_2 = GS_TextSize_2_e * ratio
if GLOB_MODPAR_NAME = "GS_TextSize_3_e" then parameters AC_TextSize_3 = GS_TextSize_3_e * ratio
if GLOB_MODPAR_NAME = "GS_TextSize_4_e" then parameters AC_TextSize_4 = GS_TextSize_4_e * ratio
if GLOB_MODPAR_NAME = "GS_TextSize_5_e" then parameters AC_TextSize_5 = GS_TextSize_5_e * ratio
if GLOB_MODPAR_NAME = "GS_TextSize_6_e" then parameters AC_TextSize_6 = GS_TextSize_6_e * ratio
if GLOB_MODPAR_NAME = "GS_TextSize_7_e" then parameters AC_TextSize_7 = GS_TextSize_7_e * ratio

if GS_LastUnit = 0 & bLinearDimIsMetric then			! Conversion
	parameters GS_TextSize_2_e	= AC_TextSize_2
	parameters GS_TextSize_3_e	= AC_TextSize_3
	parameters GS_TextSize_4_e	= AC_TextSize_4
	parameters GS_TextSize_5_e	= AC_TextSize_5
	parameters GS_TextSize_6_e	= AC_TextSize_6
	parameters GS_TextSize_7_e	= AC_TextSize_7
endif

ratio = 25.4/72
if GS_LastUnit = 1 & not(bLinearDimIsMetric)  then			! Conversion
	parameters GS_TextSize_2_e	= AC_TextSize_2 / ratio
	parameters GS_TextSize_3_e	= AC_TextSize_3 / ratio
	parameters GS_TextSize_4_e	= AC_TextSize_4 / ratio
	parameters GS_TextSize_5_e	= AC_TextSize_5 / ratio
	parameters GS_TextSize_6_e	= AC_TextSize_6 / ratio
	parameters GS_TextSize_7_e	= AC_TextSize_7 / ratio
endif

if not(bLinearDimIsMetric) then
	parameters GS_LastUnit = 0
else
	parameters GS_LastUnit = 1
endif

! ==============================================================================
! DWG-Export Type for GER
! ==============================================================================

if	LibraryLangCode <> "GER" then
	lock	"ac_dwg_block_name"
	hideparameter	"ac_dwg_block_name"

	! if the folder is empty
	lock	"gs_dwg_export_title"
	hideparameter	"gs_dwg_export_title"
endif


