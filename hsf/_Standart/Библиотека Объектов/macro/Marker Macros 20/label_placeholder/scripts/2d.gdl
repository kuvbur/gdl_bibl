
_iReferencePoint = 1
totalRotate = 0

define style{2} "nameStyle"  LABEL_FONT_NAME, LABEL_TEXT_SIZE * GLOB_SCALE/1000, 1
define style{2} "infoStyle"  LABEL_FONT_NAME, LABEL_TEXT_SIZE * GLOB_SCALE/1000, 0

dim _sStyleBody[]
dim _contentData[]
_sStyleBody[1] =  "nameStyle" 
_sStyleBody[2] =  "infoStyle" 

_contentData[1] = _labelname
_contentData[2] = sInfo[GLOB_ELEM_TYPE+1]

_xPosTB = 0 : _yPosTB = 0
! ==============================================================================
! "usePharagraph" :
! ------------------------------------------------------------------------------
! input for paragraph:
!		LABEL_TEXT_PEN				- pen of the text
!		LABEL_TEXT_ALIGN			- text alignment
!										- 1 - left aligned, 2 - center aligned, 3 - right aligned, 4 - full justified
!		LABEL_TEXT_LEADING 			- line spacing factor
!		LABEL_TEXT_WIDTH_FACT 		- width factor
!		LABEL_TEXT_CHARSPACE_FACT	- spacing factor!
! input for textblock:
!		_widthTextBlock				! textblock width in mm or m in model space, if 0 it is calculated automatically
!		anglePosition				! rotation angle of the textblock in degrees
!		_iReferencePoint				! code of the position point in the text 1-9
!		widthFactorTextBlock		! width_factor: Character widths defined by the actual style will be multiplied by this number		
!		charspaceFactorTextBlock	! charspace_factor: The horizontal distance between two characters will be multiplied by this number! output:
!		iFixedHeightTextBlock		! fixed_height: Possible values: 	1: the placed TEXTBLOCK will be scale-independent and all specified length type parameters will mean millimeters, !
!		 																0: the placed TEXTBLOCK will be scale-dependent and all specified length type parameters will mean meters in model space
!		_drawRichText				! use richtext (1) or just calculate textblock sizes (0)
! output:
!		texbox sizes - _widthTB, _heightTB
! ==============================================================================

	_stNamePG 			= "nameParaGraph"
	_iAlignPG 			= LABEL_TEXT_ALIGN		! 1: left aligned, 2: center aligned, 3: right aligned, 4: full justified
	_xFirstIndentPG	 	= 0						! meaning millimeters or meters depends on the fixed_height parameter of the TEXTBLOCK definition
	_xLeftIndentPG 		= 0						! meaning millimeters or meters depends on the fixed_height parameter of the TEXTBLOCK definition
	_xRightIndentPG 	= 0						! meaning millimeters or meters depends on the fixed_height parameter of the TEXTBLOCK definition
	_ratioLineSpacePG	= LABEL_TEXT_LEADING	! (character size + distance to the next line) defined by the actual style will be multiplied by this number
	_xTabPosPG	 		= 0						! consecutive tabulator positions (each relative to the beginning of the paragraph). Default values (0) are used (12.7 mm). Works only with '\t' special character.
	_penIndex			= LABEL_TEXT_PEN

	doSplit = '\n'

	paragraph _stNamePG _iAlignPG,
		_xFirstIndentPG, _xLeftIndentPG, _xRightIndentPG,
		_ratioLineSpacePG, _xTabPosPG
			pen _penIndex
			style _sStyleBody[1]
			_contentData[1]
		doSplit
			style _sStyleBody[2]
			_contentData[2]
	endparagraph


	_stNameTB			= "nameTextBlock"
	_widthTB			= 0 ! widthText TODO
	_angleTB			= 180 * (totalRotate > 90+EPS & totalRotate < 270+EPS)	* LABEL_ALWAYS_READABLE
	if _angleTB < 180-EPS then
		_iAnchorTB	= _iReferencePoint
	else
		_iAnchorTB  = 5
		if _iReferencePoint	= 1 then _iAnchorTB = 9
		if _iReferencePoint	= 2 then _iAnchorTB = 8
		if _iReferencePoint	= 3 then _iAnchorTB = 7
		if _iReferencePoint	= 4 then _iAnchorTB = 6
		if _iReferencePoint	= 6 then _iAnchorTB = 4
		if _iReferencePoint	= 7 then _iAnchorTB = 3
		if _iReferencePoint	= 8 then _iAnchorTB = 2
		if _iReferencePoint	= 9 then _iAnchorTB = 1
	endif
	_ratioWidthTB		= LABEL_TEXT_WIDTH_FACT			! width_factor: Character widths defined by the actual style will be multiplied by this number
	_ratioCharspaceTB	= LABEL_TEXT_CHARSPACE_FACT		! charspace_factor: The horizontal distance between two characters will be multiplied by this number
	_iScale 			= 0 ! model						! fixed_height: Possible values: 1: the placed TEXTBLOCK will be scale-independent and all specified length type parameters will mean millimeters, 
														! 								0: the placed TEXTBLOCK will be scale-dependent and all specified length type parameters will mean meters in model space.

	textblock _stNameTB _widthTB,
		_iAnchorTB, _angleTB, _ratioWidthTB, _ratioCharspaceTB, _iScale,
		_stNamePG

	rrr = REQUEST ("TEXTBLOCK_INFO", _stNameTB, _widthTB, _heightTB)

	pen LABEL_ARROW_PEN
	fill filltypeBackground

	poly2_b 4, LABEL_FRAME_ON + 2 + 4, LABEL_TEXT_BG_PEN, LABEL_TEXT_BG_PEN,
		0, 			0, 						1,
		_widthTB, 	0,					 	1,
		_widthTB,	-_heightTB, 			1,
		0,  		-_heightTB, 			1

	richtext2 _xPosTB, _yPosTB, _stNameTB

end
