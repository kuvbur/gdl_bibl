
lock "A"
lock "B"

w_units_form = ""
rrr = request("Working_length_unit", "", w_units_form)
_bMetricDimension = strstr(w_units_form, "m")		! m, cm, mm

! -> zero means automatic calculations
values "widthTextBoxContent_mm" range [sizeFontBody*2,)
values "widthTextBoxContent_pt" range [sizeFontBody*2 * DOT_IN_MM,)
values "widthTextBoxPrefix_mm" range [sizeFontBody*2,)
values "widthTextBoxPrefix_pt" range [sizeFontBody*2 * DOT_IN_MM,) 


if _bMetricDimension then 
	lock "widthTextBoxPrefix_pt", "widthTextBoxContent_pt"
	hideparameter "widthTextBoxPrefix_pt", "widthTextBoxContent_pt"
else
	lock "widthTextBoxPrefix_mm", "widthTextBoxContent_mm"
	hideparameter "widthTextBoxPrefix_mm", "widthTextBoxContent_mm"
endif

if not(bWrapText) then
	lock "widthTextBoxContent_mm", "widthTextBoxContent_pt"
	lock "widthTextBoxPrefix_mm", "widthTextBoxPrefix_pt"
else
	if GLOB_MODPAR_NAME = "widthTextBoxContent_pt" then
		widthTextBoxContent_mm = widthTextBoxContent_pt / DOT_IN_MM
		parameters widthTextBoxContent_mm = widthTextBoxContent_mm
	else
		widthTextBoxContent_pt = widthTextBoxContent_mm * DOT_IN_MM
		parameters widthTextBoxContent_pt = widthTextBoxContent_pt
	endif

	if bUsePrefixColumn then
		if GLOB_MODPAR_NAME = "widthTextBoxPrefix_pt" then
			widthTextBoxPrefix_mm = widthTextBoxPrefix_pt / DOT_IN_MM
			parameters widthTextBoxPrefix_mm = widthTextBoxPrefix_mm
		else
			widthTextBoxPrefix_pt = widthTextBoxPrefix_mm * DOT_IN_MM
			parameters widthTextBoxPrefix_pt = widthTextBoxPrefix_pt
		endif
	else
		lock "widthTextBoxPrefix_mm", "widthTextBoxPrefix_pt"
	endif
endif

if not(bUseContentColumn) then
	lock "widthTextBoxContent_pt", "widthTextBoxContent_mm"
	hideparameter "widthTextBoxContent_pt", "widthTextBoxContent_mm"
endif
if not(bUsePrefixColumn) then
	lock "widthTextBoxPrefix_pt", "widthTextBoxPrefix_mm"
	hideparameter "widthTextBoxPrefix_pt", "widthTextBoxPrefix_mm"
endif


values{2} "iFrameStyle" FRAME_STYLE1,	_stFrameStyles[FRAME_STYLE1],
						FRAME_STYLE2,	_stFrameStyles[FRAME_STYLE2],
						FRAME_STYLE3,	_stFrameStyles[FRAME_STYLE3],
						FRAME_STYLE4,	_stFrameStyles[FRAME_STYLE4],
						FRAME_STYLE5,	_stFrameStyles[FRAME_STYLE5],
						FRAME_STYLE6,	_stFrameStyles[FRAME_STYLE6]


values{2} "iLabelOrientation" 	ORIENTATION_PARALLEL, 		_stLabelOrientation[ORIENTATION_PARALLEL],
								ORIENTATION_VERTICAL, 		_stLabelOrientation[ORIENTATION_VERTICAL],
								ORIENTATION_HORIZONTAL, 	_stLabelOrientation[ORIENTATION_HORIZONTAL],
								ORIENTATION_CUSTOM, 		_stLabelOrientation[ORIENTATION_CUSTOM]

values{2} "iReferencePoint" 	_valuesRefPoint, _stRefPoint



if bEnableCustomHeaderStyle then
	values{2} "iAlignmentHeader" 	1, _stAlignment[1],
									2, _stAlignment[2],
									3, _stAlignment[3]

	values{2} "iLineSpaceHeader"	VALUE_AUTOMATIC,	sAutoCustom[1],
									VALUE_CUSTOM,		sAutoCustom[2]

	if iLineSpaceHeader = VALUE_AUTOMATIC then
		lock "sizeLineSpaceHeader_mm", "sizeLineSpaceHeader_pt"
	endif

	w_units_form = ""
	rrr = request("Working_length_unit", "", w_units_form)
	bMetricDimension = strstr(w_units_form, "m")		! m, cm, mm

	if GLOB_MODPAR_NAME = "sizeFontHeader_pt" then
		sizeFontHeader_mm = sizeFontHeader_pt / DOT_IN_MM
		parameters sizeFontHeader_mm = sizeFontHeader_mm
	else
		sizeFontHeader_pt = sizeFontHeader_mm * DOT_IN_MM
		parameters sizeFontHeader_pt = sizeFontHeader_pt
	endif

	if GLOB_MODPAR_NAME = "sizeLineSpaceHeader_pt" then
		sizeLineSpaceHeader_mm = sizeLineSpaceHeader_pt / DOT_IN_MM
		parameters sizeLineSpaceHeader_mm = sizeLineSpaceHeader_mm
	else
		sizeLineSpaceHeader_pt = sizeLineSpaceHeader_mm * DOT_IN_MM
		parameters sizeLineSpaceHeader_pt = sizeLineSpaceHeader_pt
	endif

	if bMetricDimension then
		lock "sizeFontHeader_pt", "sizeLineSpaceHeader_pt"
		hideparameter "sizeFontHeader_pt", "sizeLineSpaceHeader_pt"
	else
		lock "sizeFontHeader_mm", "sizeLineSpaceHeader_mm"
		hideparameter "sizeFontHeader_mm", "sizeLineSpaceHeader_mm"
	endif

	if not(bUseCustomHeaderStyle) then
		lock "penTextHeader",
			"fontTypeHeader",
			"bBoldStyleHeader",
			"bItalicStyleHeader",
			"bUnderlineStyleHeader",
			"bStrikethroughStyleHeader",
			"sizeFontHeader_mm",
			"sizeFontHeader_pt",
			"iAlignmentHeader",
			"iLineSpaceHeader",
			"sizeLineSpaceHeader_mm",
			"sizeLineSpaceHeader_pt"

		hideparameter "penTextHeader",
			"fontTypeHeader",
			"bBoldStyleHeader",
			"bItalicStyleHeader",
			"bUnderlineStyleHeader",
			"bStrikethroughStyleHeader",
			"sizeFontHeader_mm",
			"sizeFontHeader_pt",
			"iAlignmentHeader",
			"iLineSpaceHeader",
			"sizeLineSpaceHeader_mm",
			"sizeLineSpaceHeader_pt"
	endif
endif




