
! ==============================================================================
! electricalItems_m
! ==============================================================================


call "FM_types" parameters all

dim stFanSymbolType[5]
	stFanSymbolType[1] = `Вентилятор`
	stFanSymbolType[2] = `Вытяжной Вентилятор`
	stFanSymbolType[3] = `Вентилятор со Светом`
	stFanSymbolType[4] = `Комбинированное Устройство Вентиляции-Освещения`
	stFanSymbolType[5] = `Потолочный Вентилятор`

dim stJunctionBoxType[]
	stJunctionBoxType[1] = `Потолочная Распределительная Коробка`
	stJunctionBoxType[2] = `Настенная Распределительная Коробка`

dim stSwitchOutletType[2]
	stSwitchOutletType[1] = `Одиночный`
	stSwitchOutletType[2] = `Двойной`

dim stFloorOutletType[4]
	stFloorOutletType[1] = `Одиночный`
	stFloorOutletType[2] = `Дуплекс`
	stFloorOutletType[3] = `1 полюс`
	stFloorOutletType[4] = `Телефон`

dim stSpecialPurposeOutletType[3]
	stSpecialPurposeOutletType[1] = `Вывод Вентилятора`
	stSpecialPurposeOutletType[2] = `Вывод Часов`
	stSpecialPurposeOutletType[3] = `Специальный Вывод`

dim stOutlet1Type[4]
	stOutlet1Type[1] = `Одиночный`
	stOutlet1Type[2] = `Двойной`
	stOutlet1Type[3] = `Тройной`
	stOutlet1Type[4] = `Четыре`

dim stPhoneSignalType[2]
	stPhoneSignalType[1] = `Телефон`
	stPhoneSignalType[2] = `SW-панель Телефона`

dim stCommunicationSignalType[3]
	stCommunicationSignalType[1] = `Вывод Радио`
	stCommunicationSignalType[2] = `Вывод ТВ`
	stCommunicationSignalType[3] = `Специальный`

dim stAudioSignalType[8]
	stAudioSignalType[1] = `Сигнализатор`
	stAudioSignalType[2] = `Звонок`
	stAudioSignalType[3] = `Зуммер`
	stAudioSignalType[4] = `Зуммер Звонка`
	stAudioSignalType[5] = `Звуковая Сигнализация`
	stAudioSignalType[6] = `Детектор Движения`
	stAudioSignalType[7] = `Открытая Дверь`
	stAudioSignalType[8] = `Специальный`

dim stSwitchType[3]
	stSwitchType[1] = `Переключатель`
	stSwitchType[2] = `Рокер`
	stSwitchType[3] = `Кнопка`

dim stOutletType[3]
	stOutletType[1] = `Приёмник`
	stOutletType[2] = `Вывод Телефона`
	stOutletType[3] = `Вывод Кабеля`

dim stProngType[2]
	stProngType[1] = `Обычный`
	stProngType[2] = `Выступающий`


if iGroupType = GROUP_SYMBOL then
	if iObjectType = OBJECT_PUSH_BUTTON then
		if GLOB_MODPAR_NAME = "A" then
			B = A
			A2 = A/2 * sqr(2)
			parameters B = B, A2 = A2
		else
			if GLOB_MODPAR_NAME = "A2" then
				A = A2 / sqr(2) * 2
				B = A2 / sqr(2) * 2
				parameters A = A, B = B
			endif
		endif
	endif
	if iObjectType = OBJECT_RECESS_CAN_LIGHT then
		if GLOB_MODPAR_NAME = "A" then
			B = A
			A2 = A/2
			parameters B = B, A2 = A2
		else
			A = A2 * 2
			B = A2 * 2
			parameters A = A, B = B
		endif
	endif
	if iObjectType = OBJECT_VANITY_FIXTURE then
		if GLOB_MODPAR_NAME = "A" then
			B = A
			A2 = A / (1 + sin(45))
			parameters B = B, A2 = A2
		else
			A = A2 * (1 + sin(45))
			B = A2 * 2
			parameters A = A, B = B
		endif
	endif
	if iObjectType = OBJECT_WALL_SCONCE then
		if GLOB_MODPAR_NAME = "B" then
			A = B / 2
			parameters A = A
		else
			B = A * 2
			parameters B = B
		endif
	endif
	if iObjectType = OBJECT_FAN_SYMBOL then
		values "itemType" stFanSymbolType
		values "iItemType" 1, 2, 3, 4, 5

		if GLOB_MODPAR_NAME = "itemType" then
			for nFanSymbolType = 1 to vardim1(stFanSymbolType)
				if itemType = stFanSymbolType[nFanSymbolType] then
					iItemType = nFanSymbolType
				endif
			next nFanSymbolType
			parameters iItemType = iItemType
		else
			itemType = stFanSymbolType[max(1, min(iItemType, vardim1(stFanSymbolType)))]
			parameters itemType = itemType
		endif
		if GLOB_MODPAR_NAME = "itemType" then
			if iItemType = FAN | iItemType = EXHAUST_FAN then
				A = 8"
			endif
			if iItemType = FAN_WITH_LIGHT then
				A = 11"
			endif
			if iItemType = FAN_LIGHT_COMBO then
				A = 21"
				B = A * 0.6666
				A2 = B
				B2 = B/2
				parameters B = B, A2 = A2, B2 = B2
			endif
			if iItemType = CEILING_FAN then
				A = 60"
			endif
			parameters A = A
		endif
		if iItemType <> CEILING_FAN then
			hideparameter "ltDashed"
			lock "ltDashed"
		endif
		if iItemType = FAN | iItemType = FAN_WITH_LIGHT | iItemType = CEILING_FAN then
			hideparameter "gs_fill_type_2", "gs_fill_pen_2", "gs_back_pen_2"
			lock "gs_fill_type_2", "gs_fill_pen_2", "gs_back_pen_2"
		endif

		if iItemType <> FAN_LIGHT_COMBO then
			if GLOB_MODPAR_NAME = "A" then
				B = A
				A2 = A/2 * sqr(2)
				parameters B = B, A2 = A2
			else
				if GLOB_MODPAR_NAME = "A2" then
					A = A2 / sqr(2) * 2
					B = A2 / sqr(2) * 2
					parameters A = A, B = B
				endif
			endif
		else
			if GLOB_MODPAR_NAME = "A" then
				B = A * 0.6666
				A2 = A * 0.6666
				B2 = A * 0.6666 / 2
				parameters B = B, A2 = A2, B2 = B2
			else
				if GLOB_MODPAR_NAME = "A2" then
					A = A2 / 0.6666
					B = A2
					B2 = A2 / 2
					parameters A = A, B = B, B2 = B2
				else
					if GLOB_MODPAR_NAME = "B2" then
						A = B2 * 2 / 0.6666
						B = B2 * 2
						A2 = B2 * 2
						parameters A = A, B = B, A2 = A2
					endif
				endif
			endif
		endif
	endif
	if iObjectType = OBJECT_JUNCTION_BOX then
		values "itemType" stJunctionBoxType
		values "iItemType" 1, 2

		if GLOB_MODPAR_NAME = "itemType" then
			iItemType = 1
			if itemType = stJunctionBoxType[2] then iItemType = 2
			parameters iItemType = iItemType
		else
			itemType = stJunctionBoxType[1]
			if iItemType = 2 then itemType = stJunctionBoxType[2]
			parameters itemType = itemType
		endif
		if GLOB_MODPAR_NAME = "itemType" then
			if iItemType = CEILING_JUNCTION_BOX then
				A = 10"
			endif
			if iItemType = WALL_JUNCTION_BOX then
				A = 14"
			endif
			parameters A = A
		endif
		if iItemType = CEILING_JUNCTION_BOX then
			if GLOB_MODPAR_NAME = "A" then
				B = A
				A2 = A/2 * sqr(2)
				parameters B = B, A2 = A2
			else
				A = A2 / sqr(2) * 2
				B = A2 / sqr(2) * 2
				parameters A = A, B = B
			endif
		else
			if GLOB_MODPAR_NAME = "A" | GLOB_MODPAR_NAME = "itemType" then
				B = 2 * A / 3.5
				A2 = A/2
				parameters B = B, A2 = A2
			else
				A = A2 * 2
				B = A2 * 2 * 2 / 3.5
				parameters A = A, B = B
			endif
		endif
	endif
	if iObjectType = OBJECT_SMOKE_DETECTOR then
		if GLOB_MODPAR_NAME = "type" then
			if iItemType = SMOKE_DETECTOR then
				text2D = typeAbbreviations[1]
				parameters text2D = text2D
			endif
			if iItemType = HEAT_DETECTOR then
				text2D = typeAbbreviations[2]
				parameters text2D = text2D
			endif
			if iItemType = COMBI_DETECTOR then
				text2D = typeAbbreviations[3]
				parameters text2D = text2D
			endif
		endif
	endif

endif

if iGroupType = GROUP_SWITCH then
	if iObjectType = OBJECT_SWITCH_SINGLE_POLE then
		nItem = 1
		parameters nItem = nItem
		lock "nItem"
		hideparameter "nItem"

		if GLOB_MODPAR_NAME = "B" then
			A = B
			A2 = A/2
			parameters B = B, A2 = A2
		else
			A = A2 * 2
			B = A2 * 2
			parameters A = A, B = B
		endif
	endif
endif

if iGroupType = GROUP_SWITCH_OUTLET then
	outletType = stOutletType[1]
	iOutletType = 1
	parameters outletType = outletType, iOutletType = iOutletType
	lock "outletType", "iOutletType"
	hideparameter "outletType", "iOutletType"

	if iObjectType = OBJECT_SWITCH_OUTLET then
		values "itemType" stSwitchOutletType
		values "iItemType" 1, 2

		if GLOB_MODPAR_NAME = "itemType" then
			iItemType = 1
			if itemType = stSwitchOutletType[2] then iItemType = 2
			parameters iItemType = iItemType
		else
			itemType = stSwitchOutletType[1]
			if iItemType = 2 then itemType = stSwitchOutletType[2]
			parameters itemType = itemType
		endif
	endif

	if iItemType = SINGLE then nItem = 2
	if iItemType = DOUBLE then nItem = 3
	parameters nItem = nItem
endif

if iGroupType = GROUP_OUTLET then
	values "outletType" stOutletType
	values "iOutletType" 1, 2, 3

	if GLOB_MODPAR_NAME = "outletType" then
		for nOutletType = 1 to vardim1(stOutletType)
			if outletType = stOutletType[nOutletType] then
				iOutletType = nOutletType
			endif
		next nOutletType
		parameters iOutletType = iOutletType
	else
		outletType = stOutletType[max(1, min(iOutletType, vardim1(stOutletType)))]
		parameters outletType = outletType
	endif

	if iObjectType = OBJECT_FLOOR_OUTLET then
		values "itemType" stFloorOutletType
		values "iItemType" 1, 2, 3, 4

		if GLOB_MODPAR_NAME = "itemType" then
			for nFloorOutletType = 1 to vardim1(stFloorOutletType)
				if itemType = stFloorOutletType[nFloorOutletType] then
					iItemType = nFloorOutletType
				endif
			next nFloorOutletType
			parameters iItemType = iItemType
		else
			itemType = stFloorOutletType[max(1, min(iItemType, vardim1(stFloorOutletType)))]
			parameters itemType = itemType
		endif

		if GLOB_MODPAR_NAME = "itemType" & itemType = stFloorOutletType[4] then
			outletType = stOutletType[2]
			iOutletType = 2
			parameters outletType = outletType, iOutletType = iOutletType
		endif

		if iItemType = SINGLE then
			nItem = 1
			parameters nItem = nItem
			lock "nItem"
		endif
		if iItemType = DUPLEX then
			nItem = 2
			parameters nItem = nItem
			lock "nItem"
		endif
		if iItemType = ONEPOLE | iItemType = TELEPHONE then
			values "nItem" 1, 2
		endif

		bShowText2D = 0
		parameters bShowText2D = bShowText2D
		lock "bShowText2D"
		hideparameter "bShowText2D"

		if GLOB_MODPAR_NAME = "A" then
			B = A
			A2 = A/2 * sqr(2)
			parameters B = B, A2 = A2
		else
			if GLOB_MODPAR_NAME = "A2" then
				A = A2 / sqr(2) * 2
				B = A2 / sqr(2) * 2
				parameters A = A, B = B
			endif
		endif
	endif
	if iObjectType = OBJECT_WALL_FIXTURE_OUTLET then
		values "nItem" range [1, 8]

		if GLOB_MODPAR_NAME = "A" then
			B = A
			A2 = A/2
			parameters B = B, A2 = A2
		else
			A = A2 * 2
			B = A2 * 2
			parameters A = A, B = B
		endif
	endif
	if iObjectType = OBJECT_SPECIAL_PURPOSE_OUTLET then
		values "itemType" stSpecialPurposeOutletType
		values "iItemType" 1, 2, 3

		if GLOB_MODPAR_NAME = "itemType" then
			for nSPOutletType = 1 to vardim1(stSpecialPurposeOutletType)
				if itemType = stSpecialPurposeOutletType[nSPOutletType] then
					iItemType = nSPOutletType
				endif
			next nSPOutletType
			parameters iItemType = iItemType
		else
			itemType = stSpecialPurposeOutletType[max(1, min(iItemType, vardim1(stSpecialPurposeOutletType)))]
			parameters itemType = itemType
		endif

		values "nItem" 1, 2
		values "iProngs" 0, 1, 2

		if iItemType = FAN_OUTLET then
			text2D = typeAbbreviations[4]
			parameters text2D = text2D
			lock "text2D"
		endif
		if iItemType = CLOCK_OUTLET then
			text2D = typeAbbreviations[5]
			parameters text2D = text2D
			lock "text2D"
		endif

		if GLOB_MODPAR_NAME = "B" then
			A = B
			A2 = A/2
			parameters B = B, A2 = A2
		else
			A = A2 * 2
			B = A2 * 2
			parameters A = A, B = B
		endif
	endif
	if iObjectType = OBJECT_OUTLET_1 then
		values "itemType" stOutlet1Type
		values "iItemType" 1, 2, 3, 4

		if GLOB_MODPAR_NAME = "itemType" then
			for nOutlet1Type = 1 to vardim1(stOutlet1Type)
				if itemType = stOutlet1Type[nOutlet1Type] then
					iItemType = nOutlet1Type
				endif
			next nOutlet1Type
			parameters iItemType = iItemType
		else
			itemType = stOutlet1Type[max(1, min(iItemType, vardim1(stOutlet1Type)))]
			parameters itemType = itemType
		endif

		if iItemType = TRIPLE | iItemType = QUAD then
			outletType = stOutletType[1]
			iOutletType = 1
			parameters outletType = outletType, iOutletType = iOutletType
			lock "outletType", "iOutletType"
		endif

		if iItemType = SINGLE then
			nItem = 1
			iOrientation = 1
			parameters nItem = nItem, iOrientation = iOrientation
			lock "nItem", "Orientation", "bMiddleLine"
			hideparameter "Orientation", "bMiddleLine"
		endif
		if iItemType = DOUBLE then
			values "nItem" range [1, 8]
		endif
		if iItemType = TRIPLE then
			nItem = 3
			parameters nItem = nItem
			lock "nItem"
		endif
		if iItemType = QUAD then
			nItem = 4
			iOrientation = 1
			parameters nItem = nItem, iOrientation = iOrientation
			lock "nItem", "Orientation"
			hideparameter "Orientation"
		endif

		values "prongs" stProngType
		values "iProngs" 0, 2

		if GLOB_MODPAR_NAME = "prongs" then
			iProngs = 2
			if prongs = stProngType[1] then iProngs = 0
			parameters iProngs = iProngs
		else
			prongs = stProngType[2]
			if iProngs = 0 then prongs = stProngType[1]
			parameters prongs = prongs
		endif

		if GLOB_MODPAR_NAME = "B" then
			A = 80/105 * B
			A2 = 40/105 * B
			B2 = B
			parameters A = A, A2 = A2, B2 = B2
		else
			A = A2 * 2
			B = A2 * 2 * 105/80
			parameters A = A, B = B
		endif
	endif
	if iObjectType = OBJECT_OUTLET_2 then
		values "itemType" stOutlet1Type[1], stOutlet1Type[2]
		values "iItemType" 1, 2

		if GLOB_MODPAR_NAME = "itemType" then
			iItemType = 1
			if itemType = stOutlet1Type[2] then iItemType = 2
			parameters iItemType = iItemType
		else
			itemType = stOutlet1Type[1]
			if iItemType = 2 then itemType = stOutlet1Type[2]
			parameters itemType = itemType
		endif

		if iItemType = SINGLE then
			nItem = 1
			parameters nItem = nItem
			lock "nItem"
		endif
		if iItemType = DOUBLE then
			values "nItem" range [1, 8]
		endif

		if GLOB_MODPAR_NAME = "B" then
			A = 80/105 * B
			A2 = 40/105 * B
			B2 = B
			parameters A = A, A2 = A2, B2 = B2
		else
			A = A2 * 2
			B = A2 * 2 * 105/80
			parameters A = A, B = B
		endif
	endif

	if bEnableSwitch then
		hideparameter "switchType", "gs_matSwitch"
		lock "switchType", "gs_matSwitch"
	endif
endif

if iGroupType = GROUP_SIGNAL then
	if iObjectType = OBJECT_PHONE_SIGNAL then
		values "itemType" stPhoneSignalType
		values "iItemType" 1, 2

		if GLOB_MODPAR_NAME = "itemType" then
			iItemType = 1
			if itemType = stPhoneSignalType[2] then iItemType = 2
			parameters iItemType = iItemType
		else
			itemType = stPhoneSignalType[1]
			if iItemType = 2 then itemType = stPhoneSignalType[2]
			parameters itemType = itemType
		endif

		values "outletType" stOutletType[2], stOutletType[3]
		values "iOutletType" 2, 3

		if GLOB_MODPAR_NAME = "outletType" then
			iOutletType = 2
			if outletType = stOutletType[3] then iOutletType = 3
			parameters iOutletType = iOutletType
		else
			outletType = stOutletType[2]
			if iOutletType = 3 then outletType = stOutletType[3]
			parameters outletType = outletType
		endif

		values "nItem" range [1, 2]

		if GLOB_MODPAR_NAME = "B" then
			A = B / 2 / tan(30)
			A2 = B/2 / sin(atn(2 * tan(30)))
			B2 = (0.5 * SQR(3) * B * 0.75) / cos(atn(B/2 / (0.5 * SQR(3) * B * 0.75)))
			parameters A = A, A2 = A2, B2 = B2
		else
			if GLOB_MODPAR_NAME = "A2" then
				B = A2 * 2 * sin(atn(2 * tan(30)))
				A = A2 * 2 * sin(atn(2 * tan(30))) / (2 * tan(30))
				B2 = (0.5 * SQR(3) * B * 0.75) / cos(atn(B/2 / (0.5 * SQR(3) * B * 0.75)))
				parameters A = A, B = B, B2 = B2
			else
				B = B2 * cos(atn(B/2 / (0.5 * SQR(3) * B * 0.75))) / (0.5 * SQR(3) * 0.75)
				A = B / 2 / tan(30)
				A2 = B/2 / sin(atn(2 * tan(30)))
				parameters A = A, B = B, A2 = A2
			endif
		endif
	endif
	if iObjectType = OBJECT_COMMUNICATION_SIGNAL then
		values "itemType" stCommunicationSignalType
		values "iItemType" 1, 2, 3

		if GLOB_MODPAR_NAME = "itemType" then
			iItemType = 1
			if itemType = stCommunicationSignalType[2] then iItemType = 2
			if itemType = stCommunicationSignalType[3] then iItemType = 3
			parameters iItemType = iItemType
		else
			itemType = stCommunicationSignalType[1]
			if iItemType = 2 then itemType = stCommunicationSignalType[2]
			if iItemType = 3 then itemType = stCommunicationSignalType[3]
			parameters itemType = itemType
		endif

		values "outletType" stOutletType[2], stOutletType[3]
		values "iOutletType" 2, 3

		if GLOB_MODPAR_NAME = "outletType" then
			iOutletType = 2
			if outletType = stOutletType[3] then iOutletType = 3
			parameters iOutletType = iOutletType
		else
			outletType = stOutletType[2]
			if iOutletType = 3 then outletType = stOutletType[3]
			parameters outletType = outletType
		endif

		values "nItem" range [1, 2]

		if iItemType = RADIO_OUT then
			text2D = typeAbbreviations[6]
			parameters text2D = text2D
			lock "text2D"
		endif
		if iItemType = TV_OUT then
			text2D = typeAbbreviations[7]
			parameters text2D = text2D
			lock "text2D"
		endif

		if GLOB_MODPAR_NAME = "A" then
			B = A
			A2 = A/2 * sqr(2)
			parameters B = B, A2 = A2
		else
			A = A2 / sqr(2) * 2
			B = A2 / sqr(2) * 2
			parameters A = A, B = B
		endif
	endif
	if iObjectType = OBJECT_AUDIO_SIGNAL then
		values "itemType" stAudioSignalType
		values "iItemType" 1, 2, 3, 4, 5, 6, 7, 8

		if GLOB_MODPAR_NAME = "itemType" then
			for nAudioSignalType = 1 to vardim1(stAudioSignalType)
				if itemType = stAudioSignalType[nAudioSignalType] then
					iItemType = nAudioSignalType
				endif
			next nAudioSignalType
			parameters iItemType = iItemType
		else
			itemType = stAudioSignalType[max(1, min(iItemType, vardim1(stAudioSignalType)))]
			parameters itemType = itemType
		endif

		if iItemType = ANNUCIATOR | iItemType = BELL | iItemType = BUZZER | iItemType = BELL_BUZZER then
			bShowText2D = 0
			parameters bShowText2D = bShowText2D
			lock "bShowText2D"
			hideparameter "bShowText2D"
		endif
		if GLOB_MODPAR_NAME = "itemType" & (iItemType = CHIMES | iItemType = MOTION_DETECTOR\
		 | iItemType = DOOR_OPEN | iItemType = CUSTOM_AUDIO) then
			bShowText2D = 1
			parameters bShowText2D = bShowText2D
		endif
		if iItemType = CHIMES then
			text2D = typeAbbreviations[8]
			parameters text2D = text2D
			lock "text2D"
		endif
		if iItemType = MOTION_DETECTOR then
			text2D = typeAbbreviations[9]
			parameters text2D = text2D
			lock "text2D"
		endif
		if iItemType = DOOR_OPEN then
			text2D = typeAbbreviations[10]
			parameters text2D = text2D
			lock "text2D"
		endif

		if iItemType = ANNUCIATOR then
			if GLOB_MODPAR_NAME = "B" then
				A = 4/3 * B
				A2 = B/2
				parameters A = A, A2 = A2
			else
				if GLOB_MODPAR_NAME = "A2" then
					A = A2 * 2 * 4/3
					B = A2 * 2
					parameters A = A, B = B
				endif
			endif
		endif
		if iItemType = BELL then
			if GLOB_MODPAR_NAME = "B" then
				A = 21/16 * B
				A2 = B/2 * sqr(2)
				parameters A = A, A2 = A2
			else
				if GLOB_MODPAR_NAME = "A2" then
					A = A2 / sqr(2) * 2 * 21/16
					B = A2 / sqr(2) * 2
					parameters A = A, B = B
				endif
			endif
		endif
		if iItemType = BUZZER then
			if GLOB_MODPAR_NAME = "B" then
				A = B * 2748/2032
				A2 = B/2 * sqr(2)
				parameters A = A, A2 = A2
			else
				if GLOB_MODPAR_NAME = "A2" then
					A = A2 / sqr(2) * 2 * 2748/2032
					B = A2 / sqr(2) * 2
					parameters A = A, B = B
				endif
			endif
		endif
		if iItemType = BELL_BUZZER then
			if GLOB_MODPAR_NAME = "B" then
				A = B * (21/16 + 716/2748)
				A2 = B/2 * sqr(2)
				parameters A = A, A2 = A2
			else
				if GLOB_MODPAR_NAME = "A2" then
					A = A2 / sqr(2) * 2 * (21/16 + 716/2032)
					B = A2 / sqr(2) * 2
					parameters A = A, B = B
				endif
			endif
		endif
		if iItemType = CHIMES | iItemType = MOTION_DETECTOR | iItemType = DOOR_OPEN | iItemType = CUSTOM_AUDIO then
			if GLOB_MODPAR_NAME = "B" then
				A2 = B/2 * sqr(2)
				parameters A2 = A2
			else
				if GLOB_MODPAR_NAME = "A2" then
					B = A2 / sqr(2) * 2
					parameters B = B
				endif
			endif
			A = B
			parameters A = A
		endif
	endif
endif

if bEnableText2D then
	if bShowText2D then
		values "textHeight" range (0, ]
		values "textHeightPoint" range [1, ]

		dim st_typeTextRotation[3]
			st_typeTextRotation[1] = `Читаемый`
			st_typeTextRotation[2] = `Всегда Горизонтально`
			st_typeTextRotation[3] = `Выровнять по Символу`

		values "typeTextRotation" `Читаемый`,`Всегда Горизонтально`,`Выровнять по Символу`
		values "typeTextRotation_m" 2, 1, 0

		if GLOB_MODPAR_NAME = "typeTextRotation" then
			typeTextRotation_m = 2
			if typeTextRotation = st_typeTextRotation[2] then typeTextRotation_m = 1
			if typeTextRotation = st_typeTextRotation[3] then typeTextRotation_m = 0
			parameters typeTextRotation_m = typeTextRotation_m
		else
			typeTextRotation = st_typeTextRotation[1]
			if typeTextRotation_m = 1 then typeTextRotation = st_typeTextRotation[2]
			if typeTextRotation_m = 0 then typeTextRotation = st_typeTextRotation[3]
			parameters typeTextRotation = typeTextRotation
		endif

		if GLOB_MODPAR_NAME = "textHeight" then
			textHeightPoint = textHeight / Dot_in_mm
			parameters textHeightPoint = textHeightPoint
		endif
		if GLOB_MODPAR_NAME = "textHeightPoint" then
			textHeight = textHeightPoint * Dot_in_mm
			parameters textHeight = textHeight
		endif

		requestWorkingUnit = REQUEST ("Working_length_unit", "", workingLengthUnit)

		if STRSTR (workingLengthUnit,"ffi")  > 0 | STRSTR (workingLengthUnit,"fdi") > 0 | STRSTR (workingLengthUnit,"df") > 0 \
		 | STRSTR (workingLengthUnit,"fi")  > 0  | STRSTR (workingLengthUnit,"di")  > 0 then
			lock "textHeight"
			hideparameter "textHeight"
		endif
		if STRSTR (workingLengthUnit,"m")  > 0 | STRSTR (workingLengthUnit,"cm") > 0 | STRSTR (workingLengthUnit,"mm") > 0 then
			lock "textHeightPoint"
			hideparameter "textHeightPoint"
		endif

		hideparameter "typeTextRotation_m"
	else
		lock "text2D", "gs_text_pen", "fontType", "textHeight", "textHeightPoint", "bTextBold",
			"bTextItalic", "bTextUnderline", "typeTextRotation", "typeTextRotation_m"
		hideparameter "text2D", "gs_text_pen", "fontType", "textHeight", "textHeightPoint", "bTextBold",
			"bTextItalic", "bTextUnderline", "typeTextRotation", "typeTextRotation_m"
	endif
endif

if iGroupType = GROUP_OUTLET | iGroupType = GROUP_SWITCH | iGroupType = GROUP_SWITCH_OUTLET \
 | (iGroupType = GROUP_SIGNAL & (iObjectType = OBJECT_PHONE_SIGNAL | iObjectType = OBJECT_COMMUNICATION_SIGNAL)) then
	values "nItem" range [1,8]

	dim stDetail[3]
		stDetail[1] = `Откл.`
		stDetail[2] = `Простой`
		stDetail[3] = `Детальный`

	values "gs_detlevel_3D" stDetail
	values "gs_detlevel_3D_m" 0, 1, 2

	if GLOB_MODPAR_NAME = "gs_detlevel_3D" then
		for hi = 1 to vardim1(stDetail)
			if gs_detlevel_3D = stDetail[hi] then
				gs_detlevel_3D_m = hi - 1
			endif
		next hi
		parameters gs_detlevel_3D_m = gs_detlevel_3D_m
	else
		gs_detlevel_3D = stDetail[max(1, min(gs_detlevel_3D_m+1, vardim1(stDetail)))]
		parameters gs_detlevel_3D = gs_detlevel_3D
	endif

	if iGroupType = GROUP_OUTLET & iObjectType <> OBJECT_FLOOR_OUTLET then
		dim stPlaceBy[2]
			stPlaceBy[1] = `Центр`
			stPlaceBy[2] = `Основание Плиты`

		values "placeBy" stPlaceBy
		values "iPlaceBy" 1, 2

		if GLOB_MODPAR_NAME = "placeBy" then
			iPlaceBy = 1
			if placeBy = stPlaceBy[2] then iPlaceBy = 2
			parameters iPlaceBy = iPlaceBy
		else
			placeBy = stPlaceBy[1]
			if iPlaceBy = 2 then placeBy = stPlaceBy[2]
			parameters placeBy = placeBy
		endif
	endif
endif

if bEnableSwitch & (iGroupType = GROUP_SWITCH | iGroupType = GROUP_SWITCH_OUTLET) then
	values "switchType" stSwitchType
	values "iSwitchType" 1, 2, 3

	if GLOB_MODPAR_NAME = "switchType" then
		for nSwitchType = 1 to vardim1(stSwitchType)
			if switchType = stSwitchType[nSwitchType] then
				iSwitchType = nSwitchType
			endif
		next nSwitchType
		parameters iSwitchType = iSwitchType
	else
		switchType = stSwitchType[max(1, min(iSwitchType, vardim1(stSwitchType)))]
		parameters switchType = switchType
	endif

	if bEnableOutlet then
	!	lock "outletType", "gs_matOutlet"
		hideparameter "outletType", "gs_matOutlet"
	endif
endif

if GLOB_MODPAR_NAME = "gs_detlevel_3D" | GLOB_MODPAR_NAME = "gs_detlevel_3D_m" then
	if gs_detlevel_3D_m = 0 then
		AC_show2DHotspotsIn3D = 1
	else
		AC_show2DHotspotsIn3D = 0
	endif
	parameters AC_show2DHotspotsIn3D = AC_show2DHotspotsIn3D
endif

if not(gs_bShowBoxIn3D) then
	hideparameter "gs_matBox"
	lock "gs_matBox"
endif

has3DBox = 1
if iGroupType = GROUP_SYMBOL then
	if iObjectType = OBJECT_FAN_SYMBOL then has3DBox = 0
	if iObjectType = OBJECT_JUNCTION_BOX then has3DBox = 0
endif
if iGroupType = GROUP_SIGNAL then
	if iObjectType = OBJECT_AUDIO_SIGNAL then has3DBox = 0
endif

if has3DBox then
	if (not(gs_bCustomWallPlateDim) & (GLOB_MODPAR_NAME = "gs_bCustomWallPlateDim" | GLOB_MODPAR_NAME = "nItem" | \
		GLOB_MODPAR_NAME = "gs_bLeftConnection" | GLOB_MODPAR_NAME = "gs_bRightConnection")) | GLOB_MODPAR_NAME = "orientation"\
		| GLOB_MODPAR_NAME = "itemType" | GLOB_MODPAR_NAME = "nItem" then
		if iOrientation = 1 then
			gs_plateHeight = 0.12
			gs_plateWidth = 0.05 * nModItem + not (gs_bLeftConnection) * 0.01 + not (gs_bRightConnection) * 0.01
		else
			gs_plateWidth = 0.12
			gs_plateHeight = 0.05 * nModItem + not (gs_bBottomConnection) * 0.01 + not (gs_bTopConnection) * 0.01
		endif
		gs_plateThk = 0.0035
		parameters gs_plateHeight = gs_plateHeight
		parameters gs_plateWidth = gs_plateWidth
		parameters gs_plateThk = gs_plateThk
	endif

	if (not(gs_bCustomBoxDim) & (GLOB_MODPAR_NAME = "gs_bCustomBoxDim" | GLOB_MODPAR_NAME = "nItem"))\
		| GLOB_MODPAR_NAME = "orientation" | GLOB_MODPAR_NAME = "itemType" then
		if iOrientation = 1 then
			gs_boxHeight = 0.12
			gs_boxWidth = 0.05 * nModItem
		else
			gs_boxHeight = 0.05 * nModItem
			gs_boxWidth = 0.12
		endif
		gs_boxThk = 0.08
		parameters gs_boxHeight = gs_boxHeight
		parameters gs_boxWidth = gs_boxWidth
		parameters gs_boxThk = gs_boxThk
	endif
endif

if gs_bLeftConnection & gs_bRightConnection then
	if GLOB_MODPAR_NAME = "gs_plateWidth" then
		gs_boxWidth = gs_plateWidth
		parameters gs_boxWidth = gs_boxWidth
	else
		gs_plateWidth = gs_boxWidth
		parameters gs_plateWidth = gs_plateWidth
	endif
endif

if gs_bTopConnection & gs_bBottomConnection then
	if GLOB_MODPAR_NAME = "gs_plateHeight" then
		gs_boxHeight = gs_plateHeight
		parameters gs_boxHeight = gs_boxHeight
	else
		gs_plateHeight = gs_boxHeight
		parameters gs_plateHeight = gs_plateHeight
	endif
endif

if bEnablePlate then
	if not(gs_bCustomWallPlateDim) then
		lock "gs_plateHeight", "gs_plateWidth", "gs_plateThk"
		hideparameter "gs_plateHeight", "gs_plateWidth", "gs_plateThk"
	endif
endif

if bEnableBox then
	if not(gs_bCustomBoxDim) then
		lock "gs_boxHeight", "gs_boxWidth", "gs_boxThk"
		hideparameter "gs_boxHeight", "gs_boxWidth", "gs_boxThk"
	endif
endif

if gs_detlevel_3D_m = 1 then
	lock "gs_resol"
	hideparameter "gs_resol"
endif

if bEnable3D & gs_detlevel_3D_m = 0 & not(bShowPlateAndBox) then
	lock	"gs_ganging",
			"gs_bLeftConnection",
			"gs_bRightConnection"

	hideparameter	"gs_ganging",
			"gs_bLeftConnection",
			"gs_bRightConnection"
endif

if bEnable3D & gs_detlevel_3D_m = 0 then
	lock	"gs_bTopConnection",
			"gs_bBottomConnection",

			"gs_3D_representation",
			"gs_shadow",
			"gs_resol",

			"gs_materials"

	hideparameter	"gs_bTopConnection",
					"gs_bBottomConnection",

					"gs_3D_representation",
					"gs_shadow",
					"gs_resol",

					"gs_materials"

	if not(iGroupType = GROUP_OUTLET & iObjectType = OBJECT_FLOOR_OUTLET) then
		lock			"gs_placement",
						"gs_placementHeight",
						"placeBy"

		hideparameter	"gs_placement",
						"gs_placementHeight",
						"placeBy"
	endif


					
	if bEnablePlate then
		lock			"gs_wallPlateDim",
						"gs_bCustomWallPlateDim",
						"gs_plateHeight",
						"gs_plateWidth",
						"gs_plateThk"

		hideparameter	"gs_wallPlateDim",
						"gs_bCustomWallPlateDim",
						"gs_plateHeight",
						"gs_plateWidth",
						"gs_plateThk",
						"gs_matPlate"
	endif

	if bEnableBox then
		lock			"gs_bShowBoxIn3D",
						"gs_boxDim",
						"gs_bCustomBoxDim",
						"gs_boxHeight",
						"gs_boxWidth",
						"gs_boxThk"

		hideparameter	"gs_bShowBoxIn3D",
						"gs_boxDim",
						"gs_bCustomBoxDim",
						"gs_boxHeight",
						"gs_boxWidth",
						"gs_boxThk",
						"gs_matBox"
	endif

	if bEnableSwitch then
		lock			"gs_matSwitch"
		hideparameter	"gs_matSwitch"
	endif

	if bEnableOutlet then
		lock			"gs_matOutlet"
		hideparameter	"gs_matOutlet"
	endif
endif


