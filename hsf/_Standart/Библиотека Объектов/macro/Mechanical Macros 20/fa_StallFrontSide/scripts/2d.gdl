
unID = GS_HotspotUnIDBegin

! =============================================================================
! 2D drawings
! =============================================================================

! --- front panels ----------------------------------------------------------
line_type lineType2dPanel
pen gs_cont_pen
fill gs_fill_type
drawindex 10

poly2_b 4, 1+2+4+32, gs_fill_pen, gs_back_pen,
		0,						0,				isEndLeft,
		0,						thicknessPanel,	1,
		widthHingeSidePanel,	thicknessPanel,	1,
		widthHingeSidePanel,	0,				1

add2 widthDoor+widthHingeSidePanel, 0
poly2_b 4, 1+2+4+32, gs_fill_pen, gs_back_pen,
		0,		0,		1,
		0,		thicknessPanel,	1,
		widthLockSidePanel,	thicknessPanel,	isEndRight,
		widthLockSidePanel,	0,		1
del 1


! --- top bracing -------------------------------------------------------------

if bTopBracing and bShowB then
	pen penTopBracing
	line_type lineTypeTopBracing
	drawindex 30
	if abs (thicknessPanel - thicknessTopBracing ) > eps and (abs (thicknessBottomBracing - thicknessTopBracing ) > eps or not (bBottomBracing)) then
		add2  -leftOverhangTopBracing * isEndLeft - (leftOverhangTopBracing < eps) * isEndLeft * (thicknessTopBracing - thicknessPanel) / 2, thicknessPanel / 2
		line2 0, -thicknessTopBracing / 2, leftOverhangTopBracing * isEndLeft + a + rightOverhangTopBracing * isEndRight \
				+ (leftOverhangTopBracing < eps) * isEndLeft * (thicknessTopBracing - thicknessPanel)/2 \
				+ (rightOverhangTopBracing < eps) * isEndRight * (thicknessTopBracing - thicknessPanel)/2, -thicknessTopBracing / 2
		line2 0,  thicknessTopBracing / 2, leftOverhangTopBracing * isEndLeft + a + rightOverhangTopBracing * isEndRight \
				+ (leftOverhangTopBracing < eps) * isEndLeft * (thicknessTopBracing - thicknessPanel)/2 \
				+ (rightOverhangTopBracing < eps) * isEndRight * (thicknessTopBracing - thicknessPanel)/2,  thicknessTopBracing / 2

		if isEndLeft then
			if abs (leftOverhangBottomBracing - leftOverhangTopBracing) > eps then
				line2 0, -thicknessTopBracing / 2, 0, thicknessTopBracing / 2
			else
				if thicknessTopBracing > thicknessBottomBracing + eps then
					line2 0,  thicknessBottomBracing / 2, 0,  thicknessTopBracing / 2
					line2 0, -thicknessBottomBracing / 2, 0, -thicknessTopBracing / 2
				endif
			endif
		endif

		if isEndRight then
			add2 leftOverhangTopBracing * isEndLeft + a + rightOverhangTopBracing * isEndRight\
				+ (leftOverhangTopBracing < eps) * isEndLeft * (thicknessTopBracing - thicknessPanel)/2 \
				+ (rightOverhangTopBracing < eps) * isEndRight * (thicknessTopBracing - thicknessPanel)/2, 0

			if abs (rightOverhangBottomBracing - rightOverhangTopBracing) > eps then
				line2 0, -thicknessTopBracing / 2, 0, thicknessTopBracing / 2
			else
				if thicknessTopBracing > thicknessBottomBracing + eps then
					line2 0,  thicknessBottomBracing / 2, 0,  thicknessTopBracing / 2
					line2 0, -thicknessBottomBracing / 2, 0, -thicknessTopBracing / 2
				endif
			endif
			del 1
		endif
		del 1
	else
		add2 widthHingeSidePanel, thicknesspanel /2
		line2 0,  thicknessTopBracing / 2, widthDoor,  thicknessTopBracing / 2
		line2 0, -thicknessTopBracing / 2, widthDoor, -thicknessTopBracing / 2
		del 1

		if isEndLeft then
			add2  -leftOverhangTopBracing , thicknessPanel / 2
			if leftOverhangTopBracing > (bBottomBracing * leftOverhangBottomBracing + eps) or leftOverhangTopBracing < (bBottomBracing * leftOverhangBottomBracing - eps) then
				line2 0, -thicknessTopBracing / 2, 0,  thicknessTopBracing / 2
			endif
			if (abs (thicknessBottomBracing - thicknessTopBracing ) > eps and leftOverhangTopBracing > eps) or leftOverhangTopBracing > (bBottomBracing * leftOverhangBottomBracing + eps) then
				line2 0,  thicknessTopBracing / 2, leftOverhangTopBracing - bBottomBracing * (abs (thicknessBottomBracing - thicknessTopBracing ) < eps) * leftOverhangBottomBracing,  thicknessTopBracing / 2
				line2 0, -thicknessTopBracing / 2, leftOverhangTopBracing - bBottomBracing * (abs (thicknessBottomBracing - thicknessTopBracing ) < eps) * leftOverhangBottomBracing, -thicknessTopBracing / 2
			endif
			del 1
		endif

		if isEndRight then
			add2  a , thicknessPanel / 2
			if rightOverhangTopBracing > (bBottomBracing * rightOverhangBottomBracing + eps) or rightOverhangTopBracing < (bBottomBracing * rightOverhangBottomBracing - eps) then
				line2 rightOverhangTopBracing, -thicknessTopBracing / 2, rightOverhangTopBracing,  thicknessTopBracing / 2
			endif
			if (abs (thicknessBottomBracing - thicknessTopBracing ) > eps and rightOverhangTopBracing > eps) or rightOverhangTopBracing > (bBottomBracing * rightOverhangBottomBracing + eps) then
				line2 bBottomBracing * (abs (thicknessBottomBracing - thicknessTopBracing ) < eps) * rightOverhangBottomBracing,  thicknessTopBracing / 2, rightOverhangTopBracing,  thicknessTopBracing / 2
				line2 bBottomBracing * (abs (thicknessBottomBracing - thicknessTopBracing ) < eps) * rightOverhangBottomBracing, -thicknessTopBracing / 2, rightOverhangTopBracing, -thicknessTopBracing / 2
			endif
			del 1
		endif

!		if leftOverhangTopBracing > (bBottomBracing * leftOverhangBottomBracing + eps) then
!			add2  -leftOverhangTopBracing , thicknessPanel / 2
!			line2 0, -thicknessTopBracing / 2, 0,  thicknessTopBracing / 2
!			line2 0,  thicknessTopBracing / 2, leftOverhangTopBracing - bBottomBracing * (abs (thicknessBottomBracing - thicknessTopBracing ) < eps) * leftOverhangBottomBracing,  thicknessTopBracing / 2
!			line2 0, -thicknessTopBracing / 2, leftOverhangTopBracing - bBottomBracing * (abs (thicknessBottomBracing - thicknessTopBracing ) < eps) * leftOverhangBottomBracing, -thicknessTopBracing / 2
!			del 1
!		endif
!		if leftOverhangTopBracing < (bBottomBracing * leftOverhangBottomBracing - eps) then
!			add2  -leftOverhangTopBracing , thicknessPanel / 2
!			line2 0, -thicknessTopBracing / 2, 0,  thicknessTopBracing / 2
!			if abs (thicknessBottomBracing - thicknessTopBracing ) > eps then
!				line2 0,  thicknessTopBracing / 2, leftOverhangTopBracing,  thicknessTopBracing / 2
!				line2 0, -thicknessTopBracing / 2, leftOverhangTopBracing, -thicknessTopBracing / 2
!			endif
!			del 1
!		endif
!
!		if rightOverhangTopBracing > (bBottomBracing * rightOverhangBottomBracing + eps) then
!			add2  a , thicknessPanel / 2
!			line2 rightOverhangTopBracing, -thicknessTopBracing / 2, rightOverhangTopBracing,  thicknessTopBracing / 2
!			line2 bBottomBracing * (abs (thicknessBottomBracing - thicknessTopBracing ) < eps) * rightOverhangBottomBracing,  thicknessTopBracing / 2, rightOverhangTopBracing,  thicknessTopBracing / 2
!			line2 bBottomBracing * (abs (thicknessBottomBracing - thicknessTopBracing ) < eps) * rightOverhangBottomBracing, -thicknessTopBracing / 2, rightOverhangTopBracing, -thicknessTopBracing / 2
!			del 1
!		endif
!		if rightOverhangTopBracing < (bBottomBracing * rightOverhangBottomBracing - eps) then
!			add2  a , thicknessPanel / 2
!			line2 rightOverhangTopBracing, -thicknessTopBracing / 2, rightOverhangTopBracing,  thicknessTopBracing / 2
!			del 1
!		endif
	endif
endif


! --- bottom bracing ----------------------------------------------------------

if bBottomBracing and bShowB then
	pen penBottomBracing
	line_type lineTypeBottomBracing
	fill fillTypeBottomBracing

	if abs (thicknessPanel - thicknessBottomBracing ) > eps then

		drawindex 10

		add2  0, thicknessPanel / 2
		poly2_b 5, 2+64, fillPenBottomBracing, fillBackPenBottomBracing,
				0,						-thicknessBottomBracing / 2,	1,
				widthHingeSidePanel,	-thicknessBottomBracing / 2,	1,
				widthHingeSidePanel,	-thicknessPanel / 2,			1,
				0,						-thicknessPanel / 2,			1,
				0,						-thicknessBottomBracing / 2,	-1
		poly2_b 5, 2+64, fillPenBottomBracing, fillBackPenBottomBracing,
				bLeftPanel * thicknessPanel,	 thicknessBottomBracing / 2,	1,
				widthHingeSidePanel,			 thicknessBottomBracing / 2,	1,
				widthHingeSidePanel,			 thicknessPanel / 2,			1,
				bLeftPanel * thicknessPanel,	 thicknessPanel / 2,			1,
				bLeftPanel * thicknessPanel,	 thicknessBottomBracing / 2,	-1
		del 1

		add2 widthHingeSidePanel + widthDoor, thicknessPanel / 2
		poly2_b 5, 2+64, fillPenBottomBracing, fillBackPenBottomBracing,
				0, -thicknessBottomBracing / 2, 1,
				widthLockSidePanel, -thicknessBottomBracing / 2, 1,
				widthLockSidePanel, -thicknessPanel / 2, 1,
				0, -thicknessPanel / 2, 1,
				0, -thicknessBottomBracing / 2, -1
		poly2_b 5, 2+64, fillPenBottomBracing, fillBackPenBottomBracing,
				0, thicknessBottomBracing / 2, 1,
				widthLockSidePanel - bRightPanel * thicknessPanel, thicknessBottomBracing / 2, 1,
				widthLockSidePanel - bRightPanel * thicknessPanel, thicknessPanel / 2, 1,
				0, thicknessPanel / 2, 1,
				0, thicknessBottomBracing / 2, -1
		del 1

		drawindex 20

		add2 -leftOverhangBottomBracing - (leftOverhangBottomBracing < eps) * bLeftPanel * (thicknessBottomBracing - thicknessPanel) / 2, thicknessPanel / 2
		line2 0, -thicknessBottomBracing / 2, leftOverhangBottomBracing + (leftOverhangBottomBracing < eps) * bLeftPanel * (thicknessBottomBracing - thicknessPanel) / 2 + widthHingeSidePanel, -thicknessBottomBracing / 2
		line2	leftOverhangBottomBracing + (leftOverhangBottomBracing < eps) * bLeftPanel * (thicknessBottomBracing - thicknessPanel) / 2 + widthHingeSidePanel, \
				-thicknessPanel / 2, \
				leftOverhangBottomBracing + (leftOverhangBottomBracing < eps) * bLeftPanel * (thicknessBottomBracing - thicknessPanel) / 2 + widthHingeSidePanel, \
				-thicknessBottomBracing / 2
		line2	leftOverhangBottomBracing + (leftOverhangBottomBracing < eps) * bLeftPanel * (thicknessBottomBracing - thicknessPanel) / 2 + widthHingeSidePanel, \
				thicknessPanel / 2, \
				leftOverhangBottomBracing + (leftOverhangBottomBracing < eps) * bLeftPanel * (thicknessBottomBracing - thicknessPanel) / 2 + widthHingeSidePanel, \
				thicknessBottomBracing / 2
		line2 0, -thicknessBottomBracing / 2, 0, thicknessBottomBracing / 2
		if bLeftPanel then
			if leftOverhangBottomBracing > eps then
			line2 0, thicknessBottomBracing / 2, leftOverhangBottomBracing + (leftOverhangBottomBracing < eps) * bLeftPanel * (thicknessBottomBracing - thicknessPanel) / 2, thicknessBottomBracing / 2
			endif
			add2 leftOverhangBottomBracing + (leftOverhangBottomBracing < eps) * bLeftPanel * (thicknessBottomBracing - thicknessPanel) / 2, 0
			line2 thicknessPanel, thicknessBottomBracing / 2, widthHingeSidePanel, thicknessBottomBracing / 2
			del 1
		else
			line2 0, thicknessBottomBracing / 2, -leftOverhangBottomBracing - (leftOverhangBottomBracing < eps) * bLeftPanel * (thicknessBottomBracing - thicknessPanel) / 2 + widthHingeSidePanel, thicknessBottomBracing / 2
		endif
		del 1

		add2 widthHingeSidePanel + widthDoor + widthLockSidePanel, thicknessPanel / 2
		line2 -widthLockSidePanel, -thicknessBottomBracing / 2, rightOverhangBottomBracing + (rightOverhangBottomBracing < eps) * bRightPanel * (thicknessBottomBracing - thicknessPanel) / 2, -thicknessBottomBracing / 2
		line2 -widthLockSidePanel, -thicknessBottomBracing / 2, -widthLockSidePanel, -thicknessPanel / 2
		line2 -widthLockSidePanel,  thicknessBottomBracing / 2, -widthLockSidePanel,  thicknessPanel / 2
		line2	rightOverhangBottomBracing + (rightOverhangBottomBracing < eps) * bRightPanel * (thicknessBottomBracing - thicknessPanel) / 2, \
				 thicknessBottomBracing / 2, \
				rightOverhangBottomBracing + (rightOverhangBottomBracing < eps) * bRightPanel * (thicknessBottomBracing - thicknessPanel) / 2, \
				-thicknessBottomBracing / 2
		if bRightPanel then
			line2 -widthLockSidePanel, thicknessBottomBracing / 2, -thicknessPanel, thicknessBottomBracing / 2
			line2 0, thicknessBottomBracing / 2, rightOverhangBottomBracing + (rightOverhangBottomBracing < eps) * bRightPanel * (thicknessBottomBracing - thicknessPanel) / 2, thicknessBottomBracing / 2
		else
			line2 -widthLockSidePanel, thicknessBottomBracing / 2, rightOverhangBottomBracing + (rightOverhangBottomBracing < eps) * bRightPanel * (thicknessBottomBracing - thicknessPanel) / 2, thicknessBottomBracing / 2
		endif
		del 1
	endif

	drawindex 20

	if abs (thicknessPanel - thicknessBottomBracing ) < eps and leftOverhangBottomBracing > eps then
		add2  -leftOverhangBottomBracing - (leftOverhangBottomBracing < eps) * bLeftPanel * (thicknessBottomBracing - thicknessPanel) / 2, thicknessPanel / 2
		line2 0, -thicknessBottomBracing / 2, leftOverhangBottomBracing + (leftOverhangBottomBracing < eps) * bLeftPanel * (thicknessBottomBracing - thicknessPanel) / 2, -thicknessBottomBracing / 2
		line2 0,  thicknessBottomBracing / 2, leftOverhangBottomBracing + (leftOverhangBottomBracing < eps) * bLeftPanel * (thicknessBottomBracing - thicknessPanel) / 2,  thicknessBottomBracing / 2
		line2 0, -thicknessBottomBracing / 2, 0,  thicknessBottomBracing / 2
		del 1
	endif

	if abs (thicknessPanel - thicknessBottomBracing ) < eps and rightOverhangBottomBracing > eps then
		add2  a + rightOverhangBottomBracing + (rightOverhangBottomBracing < eps) * brRightPanel * (thicknessBottomBracing - thicknessPanel) / 2, thicknessPanel / 2
		line2 0, -thicknessBottomBracing / 2, -rightOverhangBottomBracing - (rightOverhangBottomBracing < eps) * bRightPanel * (thicknessBottomBracing - thicknessPanel) / 2, -thicknessBottomBracing / 2
		line2 0,  thicknessBottomBracing / 2, -rightOverhangBottomBracing - (rightOverhangBottomBracing < eps) * bRightPanel * (thicknessBottomBracing - thicknessPanel) / 2,  thicknessBottomBracing / 2
		line2 0, -thicknessBottomBracing / 2, 0,  thicknessBottomBracing / 2
		del 1
	endif

	drawindex 10

	if leftOverhangBottomBracing > eps or (bLeftPanel and (thicknessBottomBracing - thicknessPanel) > eps) then
		add2  -leftOverhangBottomBracing - (leftOverhangBottomBracing < eps) * bLeftPanel * (thicknessBottomBracing - thicknessPanel) / 2, thicknessPanel / 2
		poly2_b 5, 2+64, fillPenBottomBracing, fillBackPenBottomBracing,
				0, -thicknessBottomBracing / 2, 1,
				leftOverhangBottomBracing + (leftOverhangBottomBracing < eps) * bLeftPanel * (thicknessBottomBracing - thicknessPanel) / 2, -thicknessBottomBracing / 2, 1,
				leftOverhangBottomBracing + (leftOverhangBottomBracing < eps) * bLeftPanel * (thicknessBottomBracing - thicknessPanel) / 2, thicknessBottomBracing /2, 1,
				0, thicknessBottomBracing / 2, 1,
				0, -thicknessBottomBracing / 2, -1
		del 1
	endif

	if rightOverhangBottomBracing > eps or (bRightPanel and (thicknessBottomBracing - thicknessPanel) > eps) then
		add2 widthHingeSidePanel + widthDoor + widthLockSidePanel, thicknessPanel / 2
		poly2_b 5, 2+64, fillPenBottomBracing, fillBackPenBottomBracing,
				0, -thicknessBottomBracing / 2, 1,
				rightOverhangBottomBracing + (rightOverhangBottomBracing < eps) * bRightPanel * (thicknessBottomBracing - thicknessPanel) / 2, -thicknessBottomBracing / 2, 1,
				rightOverhangBottomBracing + (rightOverhangBottomBracing < eps) * bRightPanel * (thicknessBottomBracing - thicknessPanel) / 2,  thicknessBottomBracing / 2, 1,
				0,  thicknessBottomBracing / 2, 1,
				0, -thicknessBottomBracing / 2, -1
		del 1
	endif

endif

! --- door panel 2D ------------------------------------------------------------

if bOutsideOpening then
	rr = -openingAngle2d
	yy = 0
	xx = 0+widthHingeSidePanel
	vv=1
	alfa=rr
	beta=0
	anglemodify=512
else ! inside
	rr = openingAngle2d
	yy = thicknessPanel
	xx = 0+widthHingeSidePanel
	vv=-1
	alfa=0
	beta=rr
	anglemodify=0
endif

add2 xx,yy
line_type lineType2dDoor
pen pen2dDoor
fill gs_fill_type
rot2 rr
poly2_b 4, 1+2+4+32, gs_fill_pen, gs_back_pen,
			0,			0,					1,
			widthDoor,	0,					1,
			widthDoor,	vv * thicknessDoor,	1,
			0,			vv * thicknessDoor,	1
del 1
hotspot2 0, 0, unID, openingAngle2d, 6 + anglemodify : unID = unID + 1
hotspot2 widthDoor, 0, unID, openingAngle2d, 4 + 128 : unID = unID + 1
hotspot2 widthDoor * cos (openingAngle2d), -vv * widthDoor * sin (openingAngle2d), unID, openingAngle2d, 5 : unID = unID + 1

! --- door opening line -------------------------------------------------------

if bSwingLine then
	pen gs_cont_pen
	line_type lineTypeSwing
	pen penSwing
	arc2 0,	0,	widthDoor,	alfa,	beta
endif

del 1


end
