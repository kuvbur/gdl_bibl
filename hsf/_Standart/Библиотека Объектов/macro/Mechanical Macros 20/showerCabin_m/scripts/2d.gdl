
! ==============================================================================
! showerCabin_m
! ==============================================================================


define line_type "openingline" 1, 2, 0.05 / GLOB_SCALE, 0.03 / GLOB_SCALE
line_type "openingline"

panelOffset = 0.03
frameWidthMod = 0
if iPanelType = 1 then frameWidthMod = cabinFrameWidth

if iCabinForm = CABINFORM_SQUAREDALCOVE | iCabinForm = CABINFORM_SQUAREDCORNER | iCabinForm = CABINFORM_SQUAREDPENINSULAR | iCabinForm = CABINFORM_SQUARE then			! Square
	if bSidePanelL = 0 & bSidePanelR = 0 then
		panelWidth = A - 2 * frameWidthMod
		xPanelPos = -A/2 + frameWidthMod
	endif
	if bSidePanelL = 1 & bSidePanelR = 0 then
		panelWidth = A - sidePanelWidthL - frameWidthMod
		xPanelPos = -A/2 + sidePanelWidthL
	endif
	if bSidePanelL = 1 & bSidePanelR = 1 then
		panelWidth = doorWidth
		xPanelPos = -A/2 + sidePanelWidthL
	endif
	yPanelPos = -B/2
	panelRotation = 0
	gosub "Opening_Type"
endif

if iCabinForm = CABINFORM_ROUNDEDCORNER then			! Rounded Corner
	arcRadius = doorWidth*cos(45)
	arcAngle = 90
	panelWidth = doorWidth
	xPanelPos = -A/2 + sidePanelWidthL
	yPanelPos = -B/2
	panelRotation = 45
	gosub "Opening_Type"
endif

if iCabinForm = CABINFORM_CHAMFERCORNER then			! Chamfer Corner
	panelWidth = doorWidth - 2 * frameWidthMod
	xPanelPos = -A/2 + sidePanelWidthL + frameWidthMod * cos(45)
	yPanelPos = -B/2 + frameWidthMod * cos(45)
	panelRotation = 45
	gosub "Opening_Type"
endif

if iCabinForm = CABINFORM_ROUNDEDPENINSULAR | iCabinForm = CABINFORM_ROUND then			! Round & Rounded Peninsular
	arcRadius = A/2
	arcAngle = 2 * asn(doorWidth/A)
	panelWidth = doorWidth
	xPanelPos = -doorWidth/2
	yPanelPos = -arcRadius * cos(arcAngle/2)
	panelRotation = 0
	gosub "Opening_Type"
endif

end


! ==============================================================================
"Opening_Type":
! ==============================================================================

if iCabinForm = CABINFORM_SQUAREDALCOVE | iCabinForm = CABINFORM_SQUAREDCORNER | iCabinForm = CABINFORM_CHAMFERCORNER | iCabinForm = CABINFORM_SQUAREDPENINSULAR | iCabinForm = CABINFORM_SQUARE then			! Square
	if iDoorType = DOORTYPE_SIMPLELEAF | iDoorType = DOORTYPE_SIMPLELEAF_SIDEPANEL1 | iDoorType = DOORTYPE_SIMPLELEAF_SIDEPANEL2 then gosub "Simple_Leaf"
	if iDoorType = DOORTYPE_DOUBLELEAF | iDoorType = DOORTYPE_DOUBLELEAF_SIDEPANEL1 | iDoorType = DOORTYPE_DOUBLELEAF_SIDEPANEL2 then gosub "Double_Leaf"
	if iDoorType = DOORTYPE_FOLDING then gosub "Folding"
	if iDoorType = DOORTYPE_DOUBLEFOLDING then gosub "Double_Folding"
	if iDoorType = DOORTYPE_SLIDING then gosub "Sliding"
	if iDoorType = DOORTYPE_DOUBLESLIDING then gosub "Double_Sliding"
	if iDoorType = DOORTYPE_CORNERSLIDING then gosub "Corner_Sliding"
endif
if iCabinForm = CABINFORM_ROUNDEDCORNER | iCabinForm = CABINFORM_ROUNDEDPENINSULAR | iCabinForm = CABINFORM_ROUND then			! Rounded Corner
	if iDoorType = DOORTYPE_SIMPLELEAF then gosub "Curved_Simple_Leaf"
	if iDoorType = DOORTYPE_DOUBLELEAF then	gosub "Curved_Double_Leaf"
	if iDoorType = DOORTYPE_SLIDING then gosub "Curved_Sliding"
	if iDoorType = DOORTYPE_DOUBLESLIDING then gosub "Curved_Double_Sliding"
endif

return


! ==============================================================================
"Simple_Leaf":
! ==============================================================================

add2 xPanelPos, yPanelPos
rot2 panelRotation
if bMirrorDoor then
	add2 panelWidth, 0
	mul2 -1, 1
endif
line2 0, 0, 0, -panelWidth
arc2 0, 0, panelWidth, 270, 0
del 2 + 2 * bMirrorDoor

return


! ==============================================================================
"Double_Leaf":
! ==============================================================================

add2 xPanelPos, yPanelPos
rot2 panelRotation
line2 0, 0, 0, -panelWidth/2
line2 panelWidth, 0, panelWidth, -panelWidth/2
arc2 0, 0, panelWidth/2, 270, 0
arc2 panelWidth, 0, panelWidth/2, 180, 270
del 2

return


! ==============================================================================
"Folding":
! ==============================================================================

add2 xPanelPos, yPanelPos
rot2 panelRotation
if bMirrorDoor then
	add2 panelWidth, 0
	mul2 -1, 1
endif
line2 0, 0, panelWidth/2 * sin(10), panelWidth/2 * cos(10)
line2 panelWidth/2 * sin(10), panelWidth/2 * cos(10), 2 * panelWidth/2 * sin(10), 0
del 2 + 2 * bMirrorDoor

return


! ==============================================================================
"Double_Folding":
! ==============================================================================

add2 xPanelPos, yPanelPos
rot2 panelRotation
for ji = 1 to 2
	line2 0, 0, panelWidth/4 * sin(10), panelWidth/4 * cos(10)
	line2 panelWidth/4 * sin(10), panelWidth/4 * cos(10), 2 * panelWidth/4 * sin(10), 0
mul2 -1, 1
add2 -panelWidth, 0
next ji
del 4 + 2

return


! ==============================================================================
"Sliding":
! ==============================================================================

line_type 1
add2 0, yPanelPos
line2 -A/4, -panelOffset, 0, -panelOffset
line2 -A/4, -panelOffset, -A/4 + 0.05, -panelOffset - 0.02
del 1

return


! ==============================================================================
"Double_Sliding":
! ==============================================================================

line_type 1
add2 0, yPanelPos
line2 -A/2, -panelOffset, -A/4, -panelOffset
line2 -A/2, -panelOffset, -A/2 + 0.05, -panelOffset - 0.02
line2 A/2, -panelOffset, A/4, -panelOffset
line2 A/2, -panelOffset, A/2 - 0.05, -panelOffset - 0.02
del 1

return


! ==============================================================================
"Corner_Sliding":
! ==============================================================================

line_type 1
line2 -A/4, yPanelPos - panelOffset, 0, yPanelPos - panelOffset
line2 -A/4, yPanelPos - panelOffset, -A/4 + 0.05, yPanelPos - panelOffset - 0.02
line2 A/2 + panelOffset, 0, A/2 + panelOffset, A/4
line2 A/2 + panelOffset, A/4, A/2 + panelOffset + 0.02, A/4 - 0.05

return


! ==============================================================================
"Curved_Simple_Leaf":
! ==============================================================================

add2 xPanelPos, yPanelPos
rot2 panelRotation
if bMirrorDoor then
	add2 panelWidth, 0
	mul2 -1, 1
endif
rot2 -180 - arcAngle / 2
add2 -arcRadius, 0
arc2 0, 0, arcRadius, 0, arcAngle
del 2
arc2 0, 0, panelWidth, 270, 0
del 2 + 2 * bMirrorDoor

return


! ==============================================================================
"Curved_Double_Leaf":
! ==============================================================================

panelWidth2 = arcRadius * sin(arcAngle/4) * 2
add2 xPanelPos, yPanelPos
rot2 panelRotation
for ji = 1 to 2
	rot2 -90 - arcAngle / 2 - 90 + arcAngle/4
	add2 -arcRadius, 0
	arc2 0, 0, arcRadius, 0, arcAngle/2
	del 2
	arc2 0, 0, panelWidth2, 270, -arcAngle/4
mul2 -1, 1
add2 -panelWidth, 0
next ji
del 4 + 2

return


! ==============================================================================
"Curved_Sliding":
! ==============================================================================

line_type 1
arc2 A/2 - arcRadius, -B/2 + arcRadius, arcRadius + panelOffset, panelRotation - arcAngle/2 - 90, panelRotation - 90
rot2 -arcAngle/2 + panelRotation
line2 A/2 - arcRadius, -B/2 - panelOffset, A/2 - arcRadius + 0.05, -B/2 - panelOffset - 0.02
del 1

return


! ==============================================================================
"Curved_Double_Sliding":
! ==============================================================================

line_type 1
add2 A/2 - arcRadius, -B/2 + arcRadius
rot2 panelRotation
arc2 0, 0, arcRadius + panelOffset, - arcAngle/2 - 90, - arcAngle/4 - 90
arc2 0, 0, arcRadius + panelOffset, arcAngle/4 - 90, arcAngle/2 - 90
rot2 -arcAngle/2
line2 0, -arcRadius - panelOffset, 0 + 0.05, -arcRadius - panelOffset - 0.02
del 1
rot2 arcAngle/2
line2 0, -arcRadius - panelOffset, 0 - 0.05, -arcRadius - panelOffset - 0.02
del 1
del 1 + 1

return
