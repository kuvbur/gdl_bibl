
DrawingNum = 1

pen gs_cont_pen
fill gs_fill_type

add2 A / 2, 0

unID = 1
if iSolarObjectType <> 1 then

	hotspot2 - A / 2, 0, unID : unID = unID + 1
	hotspot2 A / 2, 0, unID : unID = unID + 1
	hotspot2 - A / 2, B, unID : unID = unID + 1
	hotspot2 A / 2, B, unID : unID = unID + 1
	
	hotspot2 0, 0, unID : unID = unID + 1

endif
IF DrawingNum = 1 THEN	! Top

	if gs_detlevel_2D_m = 0 then

		if iSolarObjectType = 1 then
			_posBot = topHotspotPosY - panelLength*cos(ac_tilt_angle)
		else
			_posBot = 0
		endif

		poly2_B 4, 1+2+4+64, gs_fill_pen, gs_back_pen,
			- A / 2, _posBot, 1,
			A / 2, _posBot, 1,
			A / 2, B, 1,
			- A / 2, B, 1

	endif

	if gs_detlevel_2D_m = 1 or gs_detlevel_2D_m = 2 then

		if iSolarObjectType = 1 then

			add2 -A / 2, topHotspotPosY - panelLength*cos(ac_tilt_angle)

			hotspot2 0, 0, unID : unID = unID + 1
			hotspot2 A, 0, unID : unID = unID + 1
			hotspot2 0, B-(topHotspotPosY - panelLength*cos(ac_tilt_angle)), unID : unID = unID + 1
			hotspot2 A, B-(topHotspotPosY - panelLength*cos(ac_tilt_angle)), unID : unID = unID + 1
			
			hotspot2 A/2, 0, unID : unID = unID + 1

			! --- Panel ---------------------------------------------------------------------
			poly2_B 4, 1+2+4+64, gs_fill_pen, gs_back_pen,
				0, 0, 1,
				A, 0, 1,
				A, panelLength*cos(ac_tilt_angle), 1,
				0, panelLength*cos(ac_tilt_angle), 1

			poly2_B 4, 1+2+4+64, gs_fill_pen, gs_back_pen,
				+ glassFrameWidth, glassFrameWidth*cos(ac_tilt_angle), 1,
				A - glassFrameWidth, glassFrameWidth*cos(ac_tilt_angle), 1,
				A - glassFrameWidth, (panelLength - glassFrameWidth)*cos(ac_tilt_angle), 1,
				+ glassFrameWidth, (panelLength - glassFrameWidth)*cos(ac_tilt_angle), 1
			! --- End Of Panel ---------------------------------------------------------------------
			! --- Panel, Grids, Absorber -----------------------------------------------------------

			add2 glassFrameWidth, glassFrameWidth*cos(ac_tilt_angle)
			for ivert = 1 to nPanelVertical
				for ihor = 1 to nPanelHorizontal
					! --- Panel, Grids ---------------------------------------------------------------------
					poly2_b	10, 1+2+4+64, gs_fill_pen, gs_back_pen,
						0,				 0,		15,
						panelx,			 0,		15,
						panelx,		panely*cos(ac_tilt_angle),		15,
						0,			panely*cos(ac_tilt_angle),		15,
						0,				 0,		- 1,
						glassFrameWidth,				glassFrameWidth*cos(ac_tilt_angle),			15,
						panelx - glassFrameWidth,		glassFrameWidth*cos(ac_tilt_angle),			15,
						panelx - glassFrameWidth,		(panely - glassFrameWidth)*cos(ac_tilt_angle),	15,
						glassFrameWidth,				(panely - glassFrameWidth)*cos(ac_tilt_angle),	15,
						glassFrameWidth,				glassFrameWidth*cos(ac_tilt_angle),			-1

						! --- Glass ---------------------------------------------------------------------
						if gs_detlevel_2D_m = 2 then
							_panely_ins_2d = (panely - 2 * glassFrameWidth)*cos(ac_tilt_angle)

							lineNum	= int(_panely_ins_2d / horLineSpace1_2D)
							for i = 1 to lineNum
								line2 glassFrameWidth , horLine1Start_2D, panelx - glassFrameWidth, horLine1Start_2D
								line2 glassFrameWidth , horLine2Start_2D, panelx - glassFrameWidth, horLine2Start_2D
							add2 0, horLineSpace1_2D
							next i
							del lineNum
						endif
						! --- End Of Glass ---------------------------------------------------------------------

					! --- End of Panel, Grids ---------------------------------------------------------------------
					add2 panelx, 0
				next ihor
				del nPanelHorizontal
			add2 0, panely*cos(ac_tilt_angle)
			next ivert
			del nPanelVertical
			del 2
			! --- End of Panel, Grids, Absorber -----------------------------------------------------------

			! --- Vertical Frames ---------------------------------------------------------------------
			! --- Symbolic view: one rectangle
			if abs(topHotspotPosY - B) > eps then
					poly2_B 4, 1+2+4+64, gs_fill_pen, gs_back_pen,
						- A / 2, topHotspotPosY, 1,
						A / 2, topHotspotPosY, 1,
						A / 2, B, 1,
						- A / 2, B, 1
			endif
			! --- End Of Vertical Frames ---------------------------------------------------------------------

		endif

		if iSolarObjectType = 2 then

			! --- Manifold Header ---------------------------------------------------------------------
			if not(bWaterTank) then
				mainHeadW2D = cos(ac_tilt_angle) * maniFoldWidth+ sin(ac_tilt_angle) * maniHeadHeight
			else
				! --- Water tank looks the same, just different size and position
				mainHeadW2D = waterTankDia
			endif

			add2 0, tankCenterY
			poly2_B 4, 1+2+4+64, gs_fill_pen, gs_back_pen,
				- A / 2, mainHeadW2D / 2, 1,
				A / 2, mainHeadW2D / 2, 1,
				A / 2, - mainHeadW2D / 2, 1,
				- A / 2, - mainHeadW2D / 2, 1
			del 1
			! --- End Of Manifold Header ---------------------------------------------------------------------

			! --- Tubes ---------------------------------------------------------------------
			add2 - verFrameDist / 2, 0
			if gs_detlevel_2d_m = 2 then
				for i = 1 to tubeNum
					poly2_B 4, 1+2+4+64, gs_fill_pen, gs_back_pen,
						- tubeDia / 2, mepRePosY - mainHeadW2D / 2, 1,
						tubeDia / 2, mepRePosY - mainHeadW2D / 2, 1,
						tubeDia / 2, 0, 1,
						- tubeDia / 2, 0, 1

					poly2_B 3, 1+2+4+64, gs_fill_pen, gs_back_pen,
						- tubeDia / 2, 0, 1,
						tubeDia / 2, 0, 1,
						0, - tubeCapLength / 2, 1

					if i < tubeNum then
						poly2_B 4, 1+2+4+64, gs_fill_pen, gs_back_pen,
							tubeDia / 2, horFrameWidth * 2, 1,
							tubeDia / 2, horFrameWidth, 1,
							tubeDia / 2 + tubeGap, horFrameWidth, 1,
							tubeDia / 2 + tubeGap, horFrameWidth * 2, 1
					endif

				add2 tubeDia + tubeGap, 0
				next i
				del tubeNum
			endif

			if gs_detlevel_2d_m = 1 then
				tubeDiaSimple = tubeDia + tubeGap

				for i = 1 to tubeNum
					poly2_B 4, 1+2+4+64, gs_fill_pen, gs_back_pen,
						- tubeDiaSimple / 2, mepRePosY - mainHeadW2D / 2, 1,
						tubeDiaSimple / 2, mepRePosY - mainHeadW2D / 2, 1,
						tubeDiaSimple / 2, 0, 0,
						- tubeDiaSimple / 2, 0, 1

					poly2_B 3, 1+2+4+64, gs_fill_pen, gs_back_pen,
						- tubeDiaSimple / 2, 0, 0,
						tubeDiaSimple / 2, 0, 1,
						0, - tubeCapLength / 2, 1

					add2 tubeDiaSimple, 0
				next i
				del tubeNum
			endif

			del 1
			! --- End Of Tubes ---------------------------------------------------------------------

			! --- Vertical Frames ---------------------------------------------------------------------
			! --- Symbolic view: one rectangle
			if abs(mepRePosY + mainHeadW2D / 2 - B) > eps then
					poly2_B 4, 1+2+4+64, gs_fill_pen, gs_back_pen,
						- A / 2, mepRePosY + mainHeadW2D / 2, 1,
						A / 2, mepRePosY + mainHeadW2D / 2, 1,
						A / 2, B, 1,
						- A / 2, B, 1
			endif
			! --- End Of Vertical Frames ---------------------------------------------------------------------

		endif

		if iSolarObjectType = 3 then

			! --- Panel, Glass Panel ---------------------------------------------------------------------
			yy = (topHotspotPosY / nPanelVertical)
			for iHor = 1 to nPanelHorizontal
				for iVert = 1 to nPanelVertical
					poly2_b 4, 1+2+4+64, gs_fill_pen, gs_back_pen,
						- A / 2, 0, 1,
						- A / 2 + panelWidth, 0, 1,
						- A / 2 + panelWidth, yy, 1,
						- A / 2, yy, 1

					poly2_b 4, 1+2+4+64, gs_fill_pen, gs_back_pen,
						- A / 2 + glassFrameWidth, glassFrameWidth, 1,
						- A / 2 + panelWidth - glassFrameWidth, glassFrameWidth, 1,
						- A / 2 + panelWidth - glassFrameWidth, yy - glassFrameWidth, 1,
						- A / 2 + glassFrameWidth, yy - glassFrameWidth, 1

					! --- Glass ---------------------------------------------------------------------
					if gs_detlevel_2D_m = 2 then
						lineNumVer1	= int( panelWidth/ verLineSpace1)

						add2 (panelWidth - 2*glassFrameWidth - (lineNumVer1*verLineSpace1-0.1))/2 - 0.0175,0

						add2 verLine1Start, 0
						for i = 1 to lineNumVer1
							line2 0, glassFrameWidth, 0, yy - glassFrameWidth
						add2 verLineSpace1, 0
						next i
						del lineNumVer1 + 1

						lineNumVer2	= int( panelWidth/ verLineSpace2)
						add2 verLine2Start, 0
						for i = 1 to lineNumVer2
							line2 0, glassFrameWidth, 0, yy - glassFrameWidth
						add2 verLineSpace2, 0
						next i
						del lineNumVer2 + 1

						lineNumVer3	= int( panelWidth/ verLineSpace3)
						add2 verLine3Start, 0
						for i = 1 to lineNumVer3
							line2 0, glassFrameWidth, 0, yy - glassFrameWidth
						add2 verLineSpace3, 0
						next i
						del lineNumVer3 + 1

						del 1

						lineNumHor	= int((yy - glassFrameWidth - horLineStart) / horLineSpace1) + 1
						add2 0, horLineStart
						for i = 1 to lineNumHor
							line2 - A / 2 + glassFrameWidth, 0, - A / 2 + panelWidth - glassFrameWidth, 0
						add2 0, horLineSpace1
						next i
						del lineNumHor + 1
					endif
					! --- End Of Glass ---------------------------------------------------------------------

					add2 0, yy
				next iVert
				del nPanelVertical
				add2 panelWidth, 0
			next iHor
			del nPanelHorizontal
			! --- End Of Panel, Glass Panel -----------------------------------------------------------

			! --- Vertical Frames ---------------------------------------------------------------------
			! --- Symbolic view: one rectangle
			if abs(topHotspotPosY - B) > eps then
					poly2_B 4, 1+2+4+64, gs_fill_pen, gs_back_pen,
						- A / 2, topHotspotPosY, 1,
						A / 2, topHotspotPosY, 1,
						A / 2, B, 1,
						- A / 2, B, 1
			endif
			! --- End Of Vertical Frames ---------------------------------------------------------------------

		endif

	endif

ENDIF

del 1

if iSolarObjectType = 1 or iSolarObjectType = 2 then

	! --- start of modifying to Shaft

	if bShowMEP then

		PEN gs_cont_pen

					! --- OTHER VIEWS --- !

		ROT2 -SYMB_ROTANGLE * (DrawingNum > 1 AND NOT(SYMB_MIRRORED))+SYMB_ROTANGLE * (DrawingNum > 1 AND SYMB_MIRRORED)

		IF DrawingNum = 2 THEN PROJECT2 -3, 90, 2	! Bottom
		IF DrawingNum = 3 THEN PROJECT2 4, 270, 2	! Front
		IF DrawingNum = 4 THEN PROJECT2 4, 90, 2	! Back
		IF DrawingNum = 5 THEN PROJECT2 4, 180*(SYMB_MIRRORED), 2		! Right
		IF DrawingNum = 6 THEN PROJECT2 4, 180*NOT(SYMB_MIRRORED), 2	! Left


					! --- CONNECTIONS --- !

!--- Transform into local coordinate system
		if iSolarObjectType = 2 then !Solar Collector Evacuated Tube
			add2 0, tankCenterY
			_ConPosY_1_transformed = cos (ac_tilt_angle) * ConPosY_1 - sin (ac_tilt_angle) * ConPosZ_1
			_ConPosY_2_transformed = cos (ac_tilt_angle) * ConPosY_2 - sin (ac_tilt_angle) * ConPosZ_2
		else ! iSolarObjectType = 1 Solar Collector Flat Plate
			_ConPosY_1_transformed = ConPosY_1
			_ConPosY_2_transformed = ConPosY_2
		endif

			CALL "MEP_m_ConnectionsACL_4" PARAMETERS SetProgram = SetProgram,
				ui_current_con = ui_current_con,
				MEP_NumberConnections = MEP_NumberConnections,
				MEP_NumConnectionData = gs_Connections,
				gs_AddConnections = gs_AddConnections,
				DrawingNum = DrawingNum,
				MEP_InsShow = 0,
				MEP_cline_show = 0,
				gs_cont_pen = gs_cont_pen,
				gs_fill_type=gs_fill_type,
				gs_fill_pen=gs_fill_pen,
				gs_back_pen=gs_back_pen,
				ConPosX_1=ConPosX_1, ConPosY_1=_ConPosY_1_transformed, ConLength_1=ConLength_1, ConEdit_1 = 1,
				ConPosX_2=ConPosX_2, ConPosY_2=_ConPosY_2_transformed, ConLength_2=ConLength_2, ConEdit_2 = 1

		!--- Del transformation into local coordinate system
		if iSolarObjectType = 2 then !Solar Collector Evacuated Tube
			del 1
		endif

		DEL 1
	ENDIF

	! --- end of modifying to Shaft

endif
