
if gs_detlevel_3D_m = 0 then end
if not(gs_shadow) then shadow off
if GLOB_CONTEXT > 40 and GLOB_CONTEXT < 50 then gs_detlevel_3D_m = 1

! --- Define Fills ---------------------------------------------------------------------
if iSolarObjectType = 1 then
	define fill "absorb_1" 17, 17, 17, 17, 17, 17, 17, 17,
		1, 0, 2,
		horLineSpace1, 0, 0, horLine1Start, 1, 1,
		horLineSpace2, 0, 0, horLine2Start, 1, 1
endif
if iSolarObjectType = 3 then
	define fill "absorb_2" 17, 17, 17, 17, 17, 17, 17, 17,
		1, 0, 4,
		verLineSpace1, 90, verLine1Start, 0, 1, 1,
		verLineSpace2, 90, verLine2Start, 0, 1, 1,
		verLineSpace3, 90, verLine3Start, 0, 1, 1,

		horLineSpace1, 0, 0, horLineStart, 1, 1
endif
! --- End Of Define Fills ---------------------------------------------------------------------

if iSolarObjectType = 1 or iSolarObjectType = 2 then

! --- start of modifying to Shaft

	IF bShowMEP THEN

						! --- CONNECTIONS --- !

		IF useSysMat THEN
			glassMat	= sMat
			maniHeadMat	= sMat
			tubeMat		= sMat
			frameMat	= sMat
			supportMat	= sMat
			gs_con_mat	= sMat
		ENDIF

		PEN gs_cont_pen
		IF gs_detlevel_3D_m = 1 THEN RESOL 8
		IF gs_detlevel_3D_m = 2 THEN RESOL 24

! --- Setting editable connections for iSolarObjectType = 2 (Solar Collector Evacuated Tube)

		if iSolarObjectType = 2 then !Solar Collector Evacuated Tube
			ConEdit_1 = 17
			ConEdit_2 = 17
		else ! iSolarObjectType = 1 Solar Collector Flat Plate
			ConEdit_1 = 1
			ConEdit_2 = 1
		endif

!--- Transform into local coordinate system
		if iSolarObjectType = 2 then !Solar Collector Evacuated Tube
			add 0, tankCenterY, tankCenterZ
			rotx ac_tilt_angle
		endif

			CALL "MEP_m_ConnectionsACL_4" PARAMETERS SetProgram = SetProgram,
				ui_current_con = ui_current_con,
				MEP_NumberConnections = MEP_NumberConnections,
				MEP_NumConnectionData = gs_Connections,
				gs_AddConnections = gs_AddConnections,
				cShow3D = 1,
				gs_ConMat = gs_con_mat,
				MEP_InsShow = 0,
				MEP_cline_show_3D = 0,
				gs_cont_pen = gs_cont_pen,
				ConPosX_1=ConPosX_1, ConPosY_1=ConPosY_1, ConPosZ_1=ConPosZ_1, ConLength_1=ConLength_1, ConEdit_1 = ConEdit_1,
				ConPosX_2=ConPosX_2, ConPosY_2=ConPosY_2, ConPosZ_2=ConPosZ_2, ConLength_2=ConLength_2, ConEdit_2 = ConEdit_2

!--- Del transformation into local coordinate system
		if iSolarObjectType = 2 then !Solar Collector Evacuated Tube
			del 2
		endif
	ENDIF

	! --- end of modifying to Shaft

endif



! --- Define Materials ---------------------------------------------------------------------

	define material	"builtInMatBlackPlastic" 0,
	  0.333333,   0.313725,   0.294118,
	 0.15,  0.15,  0.45,     0,      5,     0,
	  0.784314,   0.784314,   0.784314,
	         0,          0,          0,     0

if iSolarObjectType = 1 then
	define texture "absorber" 1, 0.5, 0.12, 0, 0		!!"absorber.png"
	define material "absorber" 20,
		0.1, 0.1, 0.1,
		0.58, 0.85, 0.2, 0,
		50,
		0,
		0.878401, 0.513481, 0.412253,
		0, 0, 0,
		0,
		ind(fill, "absorb_1"), gs_cont_pen,
		ind(texture, "absorber")
endif

if iSolarObjectType = 3 then
	define texture "absorber2" 2, 0.2, 0.2, 0, 0		!!"absorber_2.png"
	define material "absorber2" 20,
		0.1, 0.1, 0.1,
		0.58, 0.85, 0.2, 0,
		50,
		0,
		0.878401, 0.513481, 0.412253,
		0, 0, 0,
		0,
		ind(fill, "absorb_2"), gs_cont_pen,
		ind(texture, "absorber2")
endif

! --- Model ---------------------------------------------------------------------

pen gs_cont_pen

resol gs_resol * (gs_detlevel_3D_m = 2) + 8 * (gs_detlevel_3D_m = 1)

unID = 1

addx a / 2

hotspot 0, bottomHotspotPosY - cos(ac_tilt_angle) * hEditRad,  bottomHotspotPosZ - sin(ac_tilt_angle) * hEditRad, unID, ac_tilt_angle, 6 : unID = unID + 1
hotspot 1, 0, 0, unID, ac_tilt_angle, 7 : unID = unID + 1
hotspot 0, bottomHotspotPosY - cos(ac_tilt_angle) * hEditRad + panelLength,  bottomHotspotPosZ - sin(ac_tilt_angle) * hEditRad, unID, ac_tilt_angle, 4 + 128 : unID = unID + 1
hotspot 0, bottomHotspotPosY,  bottomHotspotPosZ, unID, ac_tilt_angle, 5 : unID = unID + 1

hotspot verFrameDist / 2, bottomHotspotPosY - cos(ac_tilt_angle) * hEditRad,  bottomHotspotPosZ - sin(ac_tilt_angle) * hEditRad, unID, ac_tilt_angle, 6 : unID = unID + 1
hotspot verFrameDist / 2 + 1, 0, 0, unID, ac_tilt_angle, 7 : unID = unID + 1
hotspot verFrameDist / 2, bottomHotspotPosY - cos(ac_tilt_angle) * hEditRad + panelLength,  bottomHotspotPosZ - sin(ac_tilt_angle) * hEditRad, unID, ac_tilt_angle, 4 + 128 : unID = unID + 1
hotspot verFrameDist / 2, bottomHotspotPosY,  bottomHotspotPosZ, unID, ac_tilt_angle, 5 : unID = unID + 1

hotspot - verFrameDist / 2, bottomHotspotPosY - cos(ac_tilt_angle) * hEditRad,  bottomHotspotPosZ - sin(ac_tilt_angle) * hEditRad, unID, ac_tilt_angle, 6 : unID = unID + 1
hotspot - verFrameDist / 2 + 1, 0, 0, unID, ac_tilt_angle, 7 : unID = unID + 1
hotspot - verFrameDist / 2, bottomHotspotPosY - cos(ac_tilt_angle) * hEditRad + panelLength,  bottomHotspotPosZ - sin(ac_tilt_angle) * hEditRad, unID, ac_tilt_angle, 4 + 128 : unID = unID + 1
hotspot - verFrameDist / 2, bottomHotspotPosY,  bottomHotspotPosZ, unID, ac_tilt_angle, 5 : unID = unID + 1

hotspot - A / 2, 0, 0, unID : unID = unID + 1
hotspot A / 2, 0, 0, unID : unID = unID + 1

if bSupport and abs(ac_tilt_angle) > eps and abs(baseSurfaceAngle) < eps then
	hotspot - A / 2, B, 0, unID : unID = unID + 1
	hotspot A / 2, B, 0, unID : unID = unID + 1
endif

hotspot 0, 0, 0, unID : unID = unID + 1

if bSupport and abs(baseSurfaceAngle) > eps then
	hotspot - A / 2, B, sin(baseSurfaceAngle) * (legDist + verFrameWidth), unID : unID = unID + 1
	hotspot A / 2, B, sin(baseSurfaceAngle) * (legDist + verFrameWidth), unID : unID = unID + 1
endif

if not(bWaterTank) then
	hotspot - A / 2, topHotspotPosY, zzyzx, unID : unID = unID + 1
	hotspot A / 2, topHotspotPosY, zzyzx, unID : unID = unID + 1
endif

del 1



addx - verFrameDist / 2	+ A / 2
rotx baseSurfaceAngle * bSupport

if bSupport and abs(ac_tilt_angle) > eps then add 0, verFrameWidth / 2, legHeightFront - verFrameHeight / 2
rotx ac_tilt_angle - baseSurfaceAngle * bSupport
if bSupport and abs(ac_tilt_angle) > eps then add 0, - verFrameWidth / 2, - verFrameHeight / 2

if iSolarObjectType = 1 then gosub "SolarCollector"
if iSolarObjectType = 2 then gosub "Evacuated Tubes"
if iSolarObjectType = 3 then gosub "PhotoVoltaic Panel"

if verFrameEnable then

	! --- Vertical Frames ---------------------------------------------------------------------
	material frameMat * (iSolarObjectType = 1 or iSolarObjectType = 2) + panel_mat * (iSolarObjectType = 3)
	for i = 1 to verFrameNum

		rotx 90
		prism_ 5, - panelLength,
			- verFrameWidth / 2, 0, 15,
			verFrameWidth / 2, 0, 15,
			verFrameWidth / 2, verFrameHeight, 15,
			- verFrameWidth / 2, verFrameHeight, 15,
			- verFrameWidth / 2, 0, -1
		del 1

	addx verFrameDist / (verFrameNum - 1)
	next i
	del verFrameNum
	! --- End Of Vertical Frames ---------------------------------------------------------------------

endif

del 1
if bSupport and abs(ac_tilt_angle) > eps then del 2

! --- Support ---------------------------------------------------------------------
if bSupport and abs(ac_tilt_angle) > eps then gosub 200
! --- End Of Support ---------------------------------------------------------------------

del 2

end



100:
! --- Tubes ---------------------------------------------------------------------

add 0, verFrameFrontOffset + horFrameWidth, verFrameHeight * verFrameEnable + horFrameHeight + tubeCapDia / 2

material tubeMat
rotx -90

if bWaterTank then
	add 0, - waterTankDia / 2 + (horFrameHeight + tubeCapDia / 2), tubeLength + waterTankDia / 2
	roty 90
	cutpolya	2, 1, 0,
				0, 0, 915,
				waterTankDia / 2, 360, 4015
	del 2
endif

resol 8
cylind tubeLength + waterTankDia / 2 * bWaterTank, tubeDia / 2
del 1

if bWaterTank then
	cutend
endif

	if gs_detlevel_3D_m = 2 then
		material "builtInMatBlackPlastic"
		rotz - 90
		revolve 3, 360, 1 + 2,
			0, tubeCapDia / 2, 0,
			tubeCapLength / 2, tubeCapDia / 2, 0,
			tubeCapLength, 0, 0
		del 1
	endif

resol gs_resol * (gs_detlevel_3D_m = 2) + 8 * (gs_detlevel_3D_m = 1)
del 1

return

200:
! --- Support ---------------------------------------------------------------------
if bSupport and abs(ac_tilt_angle) > eps then
	material supportMat

	!!! Legs, Side Cross frames
	add 0, verFrameWidth / 2, 0
		gosub 300
	del 1

	!!! Backside Cross Frames
	add 0, legDist + verFrameWidth / 2, 0
		gosub 400
	del 1
endif

return

300:
! --- Legs, Side Cross frames ---------------------------------------------------------------------
for ii = 1 to 2

	legHeight_temp = (ii = 1) * legHeightFront + (ii = 2) * legHeightBack

	for i = 1 to verFrameNum

		rotx 90
			addy - verFrameWidth * 2
			cutpolya 5, 1, 0,
				- verFrameWidth / 2, legHeight_temp, 15,
				verFrameWidth / 2, legHeight_temp, 15,
				verFrameWidth / 2, legHeight_temp + 0.1, 15,
				- verFrameWidth / 2, legHeight_temp + 0.1, 15,
				- verFrameWidth / 2, legHeight_temp, -1
			del 1

			add - verFrameWidth / 2 - legProfilThk, 0, 0
			roty 90
			prism_ 6, verFrameWidth + legProfilThk * 2,
				- verFrameWidth / 2, mountingThk, 15,
				verFrameWidth / 2, mountingThk, 79,
				verFrameWidth / 2, legHeight_temp - verFrameWidth / 2, 79,
				0, 1, 800,
				- verFrameWidth / 2, legHeight_temp - verFrameWidth / 2, 1079,
				- verFrameWidth / 2, 0, -1
			del 2

			cutend
		del 1

		prism_ 5, mountingThk,
			- mountingWidth / 2, - mountingWidth / 2, 15,
			mountingWidth / 2, - mountingWidth / 2, 15,
			mountingWidth / 2, mountingWidth / 2, 15,
			- mountingWidth / 2, mountingWidth / 2, 15,
			- mountingWidth / 2, - mountingWidth / 2, -1

	addx verFrameDist / (verFrameNum - 1)
	next i
	del verFrameNum

addy legDist
next ii
del 2

for i = 1 to verFrameNum

	add 0, 0, legHeightFront - verFrameHeight / 2
	rotx ac_tilt_angle - baseSurfaceAngle
	add 0, 0, - verFrameHeight / 2
		cutplane
	del 3

	addy legDist - verFrameWidth / 2
	rotx - 90
	cutplane
	del 2

	add 0, legDist, legHeightFront
	rotx 90 - sideFrameAngle
	prism_ 5, sideFrameLength,
		- verFrameWidth / 2, - verFrameWidth / 2, 15,
		verFrameWidth / 2, - verFrameWidth / 2, 15,
		verFrameWidth / 2, verFrameWidth / 2, 15,
		- verFrameWidth / 2, verFrameWidth / 2, 15,
		- verFrameWidth / 2, - verFrameWidth / 2, -1
	del 2

	cutend
	cutend

addx verFrameDist / (verFrameNum - 1)
next i
del verFrameNum

return

400:
! --- Backside Cross frames ---------------------------------------------------------------------
for i = 1 to verFrameNum - 1

	for ii = 1 to 2

		for ci = 1 to 2

			addx verFrameWidth / 2 + legProfilThk
			roty - 90
			cutplane
			del 2

		addx verFrameDist / (verFrameNum - 1)
		mulx - 1
		next ci
		del 4

		add 0, - verFrameWidth / 2 * (ii = 2), legHeightFront
		roty 90 - crossFrameAngle
		prism_ 5, crossFrameLength,
			- verFrameWidth / 2, 0, 15,
			verFrameWidth / 2, 0, 15,
			verFrameWidth / 2, verFrameWidth / 2, 15,
			- verFrameWidth / 2, verFrameWidth / 2, 15,
			- verFrameWidth / 2, 0, -1
		del 2

		for ci = 1 to 2
			cutend
		next ci

	addx verFrameDist / (verFrameNum - 1)
	mulx - 1
	next ii
	del 4

addx verFrameDist / (verFrameNum - 1)
next i
del verFrameNum - 1

return

"SolarCollector":

! --- Horizontal Frames ---------------------------------------------------------------------
material frameMat
add - verFrameWidth / 2, horFrameWidth / 2 + verFrameFrontOffset, verFrameHeight * verFrameEnable
rotz 90
rotx 90

for i = 1 to 2

	prism_ 5, horFrameLength,
		- horFrameWidth / 2, 0, 15,
		horFrameWidth / 2, 0, 15,
		horFrameWidth / 2, horFrameHeight, 15,
		- horFrameWidth / 2, horFrameHeight, 15,
		- horFrameWidth / 2, 0, -1

addx panelLength - horFrameWidth
next i
del 2

del 3
! --- End Of Horizontal Frames ---------------------------------------------------------------------

add A / 2 - verFrameWidth / 2, verFrameFrontOffset, verFrameHeight * verFrameEnable

! --- Glass Frames ---------------------------------------------------------------------
material frameMat

mulz - 1
cutform 5, 1, 2+16,
		0, 0, 1, - glassFrameProfilThk,
		- panelWidth / 2 + glassFrameWidth, glassFrameWidth, 1+2+4+8+16,
		panelWidth / 2 - glassFrameWidth, glassFrameWidth, 1+2+4+8+16,
		panelWidth / 2 - glassFrameWidth, panelHeight - glassFrameWidth, 1+2+4+8+16,
		- panelWidth / 2 + glassFrameWidth, panelHeight - glassFrameWidth, 1+2+4+8+16,
		- panelWidth / 2 + glassFrameWidth, glassFrameWidth, -1
del 1

for i = 1 to 2
	cutform 5, 1, 2+16,
			0, 0, 1, horFrameHeight,
			- panelWidth / 2, 0, 1+2+4+8+16,
			- panelWidth / 2 + horFrameWidth, 0, 1+2+4+8+16,
			- panelWidth / 2 + horFrameWidth, panelHeight, 1+2+4+8+16,
			- panelWidth / 2, panelHeight, 1+2+4+8+16,
			- panelWidth / 2, 0, -1
addx A - horFrameWidth
next i
del 2

for i = 1 to 2
	cutform 5, 1, 2+16,
			0, 0, 1, horFrameHeight,
			- panelWidth / 2, 0, 1+2+4+8+16,
			panelWidth / 2, 0, 1+2+4+8+16,
			panelWidth / 2, horFrameWidth, 1+2+4+8+16,
			- panelWidth / 2, horFrameWidth, 1+2+4+8+16,
			- panelWidth / 2, 0, -1
addy panelHeight - horFrameWidth
next i
del 2

prism_ 5, glassFrameHeight,
	- panelWidth / 2, 0, 15,
	panelWidth / 2, 0, 15,
	panelWidth / 2, panelHeight, 15,
	- panelWidth / 2, panelHeight, 15,
	- panelWidth / 2, 0, -1

cutend

for i = 1 to 2
	cutend
next i
for i = 1 to 2
	cutend
next i
! --- End Of Glass Frame ---------------------------------------------------------------------

! --- Glass ---------------------------------------------------------------------
material glassMat
addz glassFrameHeight - glassThk

prism_ 5, glassThk,
		- panelWidth / 2 + glassFrameWidth, glassFrameWidth, 15,
		panelWidth / 2 - glassFrameWidth, glassFrameWidth, 15,
		panelWidth / 2 - glassFrameWidth, panelHeight - glassFrameWidth, 15,
		- panelWidth / 2 + glassFrameWidth, panelHeight - glassFrameWidth, 15,
		- panelWidth / 2 + glassFrameWidth, glassFrameWidth, -1

del 1
! --- End Of Glass ---------------------------------------------------------------------

del 1

! --- In/Outlet Pipes ---------------------------------------------------------------------
material "builtInMatBlackPlastic"
for i = 1 to 2
	add - verFrameWidth / 2 + horFrameWidth, mepPosY, mepPosZ
	roty - 90
	cylind inOutPipeOv, inOutPipeDia / 2
	del 2
addx verFrameDist
mulx - 1
next i
del 4
! --- End Of In/Outlet Pipes ---------------------------------------------------------------------

! --- Panel, Grids, Absorber ---------------------------------------------------------------------

add glassFrameWidth-0.012, glassFrameWidth, -verFrameWidth / 2 + glassFrameWidth-panel_depth / 4
for ivert = 1 to nPanelVertical
	for ihor = 1 to nPanelHorizontal
		! --- Panel, Grids ---------------------------------------------------------------------

		material panel_mat
		prism_	10,	panel_depth / 2 * 0.9,
			0,				 0,		15,
			panelx,			 0,		15,
			panelx,		panely,		15,
			0,			panely,		15,
			0,				 0,		- 1,
			glassFrameWidth,				glassFrameWidth,			15,
			panelx - glassFrameWidth,		glassFrameWidth,			15,
			panelx - glassFrameWidth,		panely - glassFrameWidth,	15,
			glassFrameWidth,				panely - glassFrameWidth,	15,
			glassFrameWidth,				glassFrameWidth,			-1
		! --- End of Panel, Grids ---------------------------------------------------------------------
	
		addx panelx
	next ihor
	del nPanelHorizontal
addy panely
next ivert
del nPanelVertical

!Absorber has to placed separatly because of line elimination problems. This is a workaround.
for ivert = 1 to nPanelVertical
	for ihor = 1 to nPanelHorizontal
		! --- Absorber ---------------------------------------------------------------------
		material "absorber"
		addz glassThk 
		poly_ 5,
			glassFrameWidth,				glassFrameWidth,			1,
			panelx - glassFrameWidth,		glassFrameWidth,			1,
			panelx - glassFrameWidth,		panely - glassFrameWidth,	1,
			glassFrameWidth,				panely - glassFrameWidth,	1,
			glassFrameWidth,				glassFrameWidth,			-1
		del 1
		base
		
		vert 0, 0, 0
		vert 1, 0, 0
		vert 0, 1, 0
		vert 0, 0, 1
		coor 2 + 256, - 1, - 2, - 3, - 4
		body 1
		
		! --- End Of Absorber ---------------------------------------------------------------------
		addx panelx
	next ihor
	del nPanelHorizontal
addy panely
next ivert
del nPanelVertical
del 1

return
! --- End of Panel, Grids, Absorber ---------------------------------------------------------------------


"Evacuated Tubes":

if not ( bWaterTank ) then
	! --- Manifold Header ---------------------------------------------------------------------
	material maniHeadMat
	add - maniHeadSideOffset, panelLength - maniFoldWidth / 2, verFrameHeight * verFrameEnable
	rotz 90
	rotx 90
	
	prism_ 5, maniHeadLength,
		- maniFoldWidth / 2, 0, 15,
		maniFoldWidth / 2, 0, 15,
		maniFoldWidth / 2, maniHeadHeight, 15,
		- maniFoldWidth / 2, maniHeadHeight, 15,
		- maniFoldWidth / 2, 0, -1
	del 3
	! --- End Of Manifold Header ---------------------------------------------------------------------
else
	! --- Water tank ---------------------------------------------------------------------------------

	add - maniHeadSideOffset, _waterTankDist , verFrameHeight * verFrameEnable + waterTankDia / 2
	rotz 90
	rotx 90

	material waterTankMat
	cylind maniHeadLength, waterTankDia /2
	del 3

	! --- End of Water tank --------------------------------------------------------------------------
endif

! --- Horizontal Frame ---------------------------------------------------------------------
material frameMat
add - verFrameWidth / 2, horFrameWidth / 2 + verFrameFrontOffset, verFrameHeight * verFrameEnable
rotz 90
rotx 90
prism_ 5, horFrameLength,
	- horFrameWidth / 2, 0, 15,
	horFrameWidth / 2, 0, 15,
	horFrameWidth / 2, horFrameHeight, 15,
	- horFrameWidth / 2, horFrameHeight, 15,
	- horFrameWidth / 2, 0, -1
del 3
! --- End Of Horizontal Frame ---------------------------------------------------------------------

! --- Tubes ---------------------------------------------------------------------
for i = 1 to tubeNum
	gosub 100
addx tubeDia + tubeGap
next i
del tubeNum
! --- End Of Tubes ---------------------------------------------------------------------

return

"PhotoVoltaic Panel":
! --- Panel, Grids ---------------------------------------------------------------------
add - verFrameWidth / 2, 0, (verFrameHeight * verFrameEnable + horFrameHeight)

	for ihor = 1 to nPanelHorizontal
		for ivert = 1 to nPanelVertical

		! --- Back and Frame -----------------------------------------------------------
		material panel_mat
		prism_	5,	panel_depth / 2,
				0,			0,				15,
				panelWidth,	0,				15,
				panelWidth,	panelHeight,	15,
				0,			panelHeight,	15,
				0,			0,				-1

		addz panel_depth / 2
		prism_	10,	panel_depth / 2,
				0,					0,					15,
				panelWidth,			0,					15,
				panelWidth,			panelHeight,		15,
				0,					panelHeight,		15,
				0,					0,					 - 1,
				glassFrameWidth,				glassFrameWidth,				15,
				panelWidth - glassFrameWidth,	glassFrameWidth,				15,
				panelWidth - glassFrameWidth,	panelHeight - glassFrameWidth,	15,
				glassFrameWidth,				panelHeight - glassFrameWidth,	15,
				glassFrameWidth,				glassFrameWidth,				-1
		del 1

		! --- Glass --------------------------------------------------------------
		addz panel_depth / 2 + glassThk / 2
		material sol_mat
		prism_	5,	glassThk,
				glassFrameWidth,				glassFrameWidth,				15,
				panelWidth - glassFrameWidth,	glassFrameWidth,				15,
				panelWidth - glassFrameWidth,	panelHeight - glassFrameWidth,	15,
				glassFrameWidth,				panelHeight - glassFrameWidth,	15,
				glassFrameWidth,				glassFrameWidth,				-1
		del 1

		! --- Absorber ---------------------------------------------------------------------
		material "absorber2"
		addz panel_depth / 2 + glassThk / 4
		poly_ 5,
			glassFrameWidth,				glassFrameWidth,				1,
			panelWidth - glassFrameWidth,	glassFrameWidth,				1,
			panelWidth - glassFrameWidth,	panelHeight - glassFrameWidth,	1,
			glassFrameWidth,				panelHeight - glassFrameWidth,	1,
			glassFrameWidth,				glassFrameWidth,				-1
		base

		add 0, 0, 0
			vert 0, 0, 0
			vert 1, 0, 0
			vert 0, 1, 0
			vert 0, 0, 1
			coor 2 + 256, - 1, - 2, - 3, - 4
			body 1
		del 1

		del 1
		! --- End Of Absorber ---------------------------------------------------------------------

		addy panelHeight
		next iVert

		del nPanelVertical

		addx panelWidth
	next iHor

	del nPanelHorizontal

del 1
! --- End Of Panel, Grids ---------------------------------------------------------------------

return

