
call "FM_types" parameters all

dim stDetail[3]
	stDetail[1]=`Детальный`
	stDetail[2]=`Простой`
	stDetail[3]=`Откл.`

dim stDetail2D[3]
	stDetail2D[1]=`Детальный`
	stDetail2D[2]=`Простой`
	stDetail2D[3]=`Упрощенный`

values "gs_detlevel_3D" stDetail
values "gs_detlevel_3D_m" 2, 1, 0

if GLOB_MODPAR_NAME = "gs_detlevel_3D" then
	gs_detlevel_3D_m = 2 ! detailed
	if gs_detlevel_3D = stDetail[3] then gs_detlevel_3D_m = 0
	if gs_detlevel_3D = stDetail[2] then gs_detlevel_3D_m = 1
	parameters gs_detlevel_3D_m = gs_detlevel_3D_m
else
	gs_detlevel_3D = stDetail[1]
	if gs_detlevel_3D_m = 0 then gs_detlevel_3D = stDetail[3]
	if gs_detlevel_3D_m = 1 then gs_detlevel_3D = stDetail[2]
	parameters gs_detlevel_3D = gs_detlevel_3D
endif

values "gs_detlevel_2D" stDetail2D
values "gs_detlevel_2D_m" 2, 1, 0

if GLOB_MODPAR_NAME = "gs_detlevel_2D" then
	gs_detlevel_2D_m = 2 ! detailed
	if gs_detlevel_2D = stDetail2D[3] then gs_detlevel_2D_m = 0
	if gs_detlevel_2D = stDetail2D[2] then gs_detlevel_2D_m = 1
	parameters gs_detlevel_2D_m = gs_detlevel_2D_m
else
	gs_detlevel_2D = stDetail[1]
	if gs_detlevel_2D_m = 0 then gs_detlevel_2D = stDetail2D[3]
	if gs_detlevel_2D_m = 1 then gs_detlevel_2D = stDetail2D[2]
	parameters gs_detlevel_2D = gs_detlevel_2D
endif

for i = 1 to 255
	put i
next i
values "gs_cont_pen" use(NSP)
values "gs_fill_pen" get(NSP)

values "gs_resol" range [4,)

if gs_detlevel_3D_m = 1 then lock "gs_resol"
if gs_detlevel_3D_m = 0 then lock "gs_resol", "gs_shadow"


if iSolarObjectType = 1 then

	values "A" range(glassFrameWidth * 2,)
	lock "B"
	lock "zzyzx"

	parameters B		= B
	parameters zzyzx	= zzyzx

	values "panelLength" range(glassFrameWidth * 2,)
	values "panelx" range (2 * glassFrameWidth,)
	values "panely" range (2 * glassFrameWidth,)

	values "nPanelHorizontal" range [1, )
	values "nPanelVertical" range [1, )

	if GLOB_MODPAR_NAME = "panelx" then
		A = nPanelHorizontal * panelx + 2 * glassFrameWidth
		parameters A = A 
	else
		panelx = (A - 2 * glassFrameWidth) / nPanelHorizontal
		parameters panelx = panelx
	endif

	if GLOB_MODPAR_NAME = "panely" then
		panelLength = nPanelVertical * panely + 2 * glassFrameWidth
		parameters panelLength = panelLength
	else
		panely = (panelLength - 2 * glassFrameWidth) / nPanelVertical
		parameters panely = panely
	endif

endif

if iSolarObjectType = 2 then

	if GLOB_MODPAR_NAME		= "tubeNum" or GLOB_MODPAR_NAME = "tubeGap" then
		A					= (tubeDia + tubeGap) * (tubeNum - 1) + maniHeadSideOffset * 2
		parameters A		= A
	else
		tubeGap				= (A - tubeDia * tubeNum) / (tubeNum)
		parameters tubeGap	= tubeGap
	endif

	values "A" range[tubeCapDia * (tubeNum - 1) + maniHeadSideOffset * 2,)
	lock "B"
	lock "zzyzx"

	parameters B		= B
	parameters zzyzx	= zzyzx

	values "panelLength" range(maniFoldWidth + tubeCapLength,)
	values "tubeNum" range[2,)
	values "tubeGap" range[(tubeCapDia - tubeDia),)
	values "tubeLength" range [0,)

	if bWaterTank then
		values "waterTankDia" range [0.1,)
	else
		values "maniFoldWidth" range [0.1,)
	endif

	lock "panelLength"
	hideparameter "panelLength"

	if GLOB_MODPAR_NAME = "bWaterTank" then
		if bWaterTank then !When switched from manifold header to watertank, connections back to default position
			ConPosY_1 = 0
			ConPosZ_1 = -(waterTankDia / 2 - maniHeadHeight / 2)
			ConPosY_2 = 0
			ConPosZ_2 = -(waterTankDia / 2 - maniHeadHeight / 2)
		else !When switched from watertank to manifold header, connections back to default position
			ConPosY_1 = 0
			ConPosZ_1 = 0
			ConPosY_2 = 0
			ConPosZ_2 = 0
		endif
		parameters 	ConPosY_1 = ConPosY_1,
						ConPosZ_1 = ConPosZ_1,
						ConPosY_2 = ConPosY_2,
						ConPosZ_2 = ConPosZ_2

	endif

endif

if iSolarObjectType = 3 then

	values "nPanelHorizontal" range [1, )
	values "nPanelVertical" range [1, )
	values "panel_depth" range [0.02, )

	if GLOB_MODPAR_NAME = "panelWidth" then
		A = nPanelHorizontal * panelWidth
		parameters A = A
	else
		panelWidth = A / nPanelHorizontal
		parameters panelWidth = panelWidth
	endif

	if GLOB_MODPAR_NAME = "panelHeight" then
		panelLength = nPanelVertical * panelHeight
		parameters panelLength = panelLength
	else
		panelHeight = panelLength / nPanelVertical
		parameters panelHeight = panelHeight
	endif

	values "A" range(glassFrameWidth * 2,)
	lock "B"
	lock "zzyzx"

	parameters B		= B
	parameters zzyzx	= zzyzx

	values "panelWidth" range (2 * glassFrameWidth,)
	values "panelHeight" range (2 * glassFrameWidth,)
	values "panelLength" range (2 * glassFrameWidth,)

endif

if iSolarObjectType = 3 then	! Solar Photovoltaic Panel
	values "ac_tilt_angle" range[0, 85]
else
	values "ac_tilt_angle" range[0, 90)
endif

if not(bSupport) or abs(ac_tilt_angle) < eps then
	lock "baseSurfaceAngle", "supportMat"
	hideparameter "baseSurfaceAngle", "supportMat"
endif
values "baseSurfaceAngle" range [0, ac_tilt_angle]

if ac_tilt_angle<EPS then
	lock "bSupport", "baseSurfaceAngle"
	hideparameter "bSupport", "baseSurfaceAngle"
endif

if iSolarObjectType = 2 then						! Solar Collector Evacuated Tube
	if not(bWaterTank) then
		lock "waterTankDia", "waterTankMat"
		hideparameter "waterTankDia", "waterTankMat"
	else
		lock "maniHeadMat", "maniFoldWidth"
		hideparameter "maniHeadMat", "maniFoldWidth"
	endif
endif

if iSolarObjectType = 1 or iSolarObjectType = 2 then

	! --- start of modify to Shaft

	IF isMEPEnabled THEN

		IF NOT(ConStatus_1) AND NOT(ConStatus_2) THEN
			LOCK "gs_con_mat"
			HIDEPARAMETER "gs_con_mat"
		ENDIF

		DIM shape_typ_to_validation[3]
			shape_typ_to_validation[1] = 0		! Rectangle
			shape_typ_to_validation[2] = 1		! Circle
			shape_typ_to_validation[3] = 0		! Oval

						! --- CONNECTIONS --- !

		PARAMETERS MEP_NumberConnections = 2


						! --- 1st CONNECTION --- !

		ConID = 1
		ConName = `Труба Впускного Соединения `

		ConDVecX = -1
		ConDVecY = 0
		ConDVecZ = 0

		ConWVecX = 0
		ConWVecY = -1
		ConWVecZ = 0

		IF ConWidth_1 < 0.001 THEN
			ConWidth_1 = 0.001
			PARAMETERS ConWidth_1 = ConWidth_1
		ENDIF

		if iSolarObjectType = 1 then
			IF ConWidth_1 > horFrameHeight THEN
				ConWidth_1 = horFrameHeight
				PARAMETERS ConWidth_1 = ConWidth_1
			ENDIF
			VALUES "ConWidth_1" RANGE (0, horFrameHeight]
		endif
		if iSolarObjectType = 2 then
			IF ConWidth_1 > MIN(maniHeadHeight, maniFoldWidth) THEN
				ConWidth_1 = MIN(maniHeadHeight, maniFoldWidth)
				PARAMETERS ConWidth_1 = ConWidth_1
			ENDIF
			VALUES "ConWidth_1" RANGE (0, MIN(maniHeadHeight, maniFoldWidth)]
		endif

		PARAMETERS ConDepth_1 = ConWidth_1
		VALUES "ConLength_1" RANGE [0, ]

		PARAMETERS ConPosX_1 = (horFrameWidth - inOutPipeOv) * (iSolarObjectType = 1)

		if iSolarObjectType = 1 then

			if bSupport and abs(ac_tilt_angle)>eps then
				ConPosY_1 = mepRePosY
				ConPosZ_1 = sin(mepConnAngle) * mepDist_temp
			else
				ConPosY_1 = mepRePosY
				ConPosZ_1 = sin(ac_tilt_angle) * (mepPosY) + cos(ac_tilt_angle) * (mepPosZ)
			endif
			parameters	ConPosY_1 = ConPosY_1,
						ConPosZ_1 = ConPosZ_1

			_ConPosY = ConPosY_1
			_ConPosZ = ConPosZ_1

		else !if iSolarObjectType = 2 then

			values "ConPosY_1" range [ - (tankBoundingBoxWidth / 2 - ConWidth_1 / 2),  (tankBoundingBoxWidth / 2 - ConWidth_1 / 2)]
			values "ConPosZ_1" range [ - (tankBoundingBoxHeight / 2 - ConWidth_1 / 2), (tankBoundingBoxHeight / 2 - ConWidth_1 / 2)]

			_ConPosY = tankCenterY + cos (ac_tilt_angle) * ConPosY_1 - sin (ac_tilt_angle) * ConPosZ_1
			_ConPosZ = tankCenterZ + sin (ac_tilt_angle) * ConPosY_1 + cos (ac_tilt_angle) * ConPosZ_1

		endif

		CALL "MEP_m_ConnectionsACL_4" PARAMETERS SetProgram = SetProgram,
			gs_Connections = gs_Connections,
			MEP_NumConnectionData = MEP_NumConnectionData,
			MEP_StrConnectionData = MEP_StrConnectionData,
			MEP_NumberConnections = MEP_NumberConnections,
			gs_AddConnections = gs_AddConnections,
			ConName = ConName,
			ConID = ConID,
			ConPosX = ConPosX_1,
			ConPosY = _ConPosY,
			ConPosZ = _ConPosZ,
			ConDVecX = ConDVecX,
			ConDVecY = ConDVecY,
			ConDVecZ = ConDVecZ,
			ConWVecX = ConWVecX,
			ConWVecY = ConWVecY,
			ConWVecZ = ConWVecZ,

			ConNominalWidth = ConNominalWidth_1,
			ConNominalDepth = ConNominalDepth_1,
			ConWidth = ConWidth_1,
			ConDepth = ConDepth_1,
			ConLength = ConLength_1,
			ConWallThickness = ConWallThickness_1,
			ConConnectorWidth = ConConnectorWidth_1,
			ConConnectorDepth = ConConnectorDepth_1,
			ConConnectorWidth2 = ConConnectorWidth2_1,
			ConToolType = ConToolType_1,
			ConStatus = ConStatus_1,
			ConType_1 = ConType_1,
			ConConnectorType_1 = ConConnectorType_1,
			ConSystem_1 = ConSystem_1,
			ui_current_con = ui_current_con,
			shape_typ_to_validation = shape_typ_to_validation,
			MEP_enabled_geometry_mod = 1

		PARAMETERS MEP_ConInfo[ConID][1] = STR(ConToolType_1, 1, 0)
		PARAMETERS MEP_ConInfo[ConID][2] = ConName
		PARAMETERS MEP_ConInfo[ConID][3] = "0"


						! --- 2nd CONNECTION --- !

		ConID = 2
		ConName = `Труба Выпускного Соединения`

		ConDVecX = 1
		ConDVecY = 0
		ConDVecZ = 0

		ConWVecX = 0
		ConWVecY = -1
		ConWVecZ = 0

		IF ConWidth_2 < 0.001 THEN
			ConWidth_2 = 0.001
			PARAMETERS ConWidth_2 = ConWidth_2
		ENDIF

		if iSolarObjectType = 1 then
			IF ConWidth_2 > horFrameHeight THEN
				ConWidth_2 = horFrameHeight
				PARAMETERS ConWidth_2 = ConWidth_2
			ENDIF
			VALUES "ConWidth_2" RANGE (0, horFrameHeight]
		endif
		if iSolarObjectType = 2 then
			IF ConWidth_2 > MIN(maniHeadHeight, maniFoldWidth) THEN
				ConWidth_2 = MIN(maniHeadHeight, maniFoldWidth)
				PARAMETERS ConWidth_2 = ConWidth_1
			ENDIF
			VALUES "ConWidth_2" RANGE (0, MIN(maniHeadHeight, maniFoldWidth)]
		endif

		PARAMETERS ConDepth_2 = ConWidth_2
		VALUES "ConLength_2" RANGE [0, ]

		PARAMETERS ConPosX_2 = A - (horFrameWidth - inOutPipeOv) * (iSolarObjectType = 1)

		if iSolarObjectType = 1 then

			if bSupport and abs(ac_tilt_angle)>eps then
				ConPosY_2 = mepRePosY
				ConPosZ_2 = sin(mepConnAngle) * mepDist_temp
			else
				ConPosY_2 = mepRePosY
				ConPosZ_2 = sin(ac_tilt_angle) * (mepPosY) + cos(ac_tilt_angle) * (mepPosZ)
			endif
			parameters	ConPosY_2 = ConPosY_2,
						ConPosZ_2 = ConPosZ_2

			_ConPosY = ConPosY_2
			_ConPosZ = ConPosZ_2

		else !if iSolarObjectType = 2 then

			values "ConPosY_2" range [ - (tankBoundingBoxWidth / 2 - ConWidth_2 / 2), + (tankBoundingBoxWidth / 2 - ConWidth_2 / 2)]
			values "ConPosZ_2" range [ - (tankBoundingBoxHeight / 2 - ConWidth_2 / 2), + (tankBoundingBoxHeight / 2 - ConWidth_2 / 2)]

			_ConPosY = tankCenterY + cos (ac_tilt_angle) * ConPosY_2 - sin (ac_tilt_angle) * ConPosZ_2
			_ConPosZ = tankCenterZ + sin (ac_tilt_angle) * ConPosY_2 + cos (ac_tilt_angle) * ConPosZ_2

		endif

		CALL "MEP_m_ConnectionsACL_4" PARAMETERS SetProgram = SetProgram,
			gs_Connections = gs_Connections,
			MEP_NumConnectionData = MEP_NumConnectionData,
			MEP_StrConnectionData = MEP_StrConnectionData,
			MEP_NumberConnections = MEP_NumberConnections,
			gs_AddConnections = gs_AddConnections,
			ConName = ConName,
			ConID = ConID,
			ConPosX = ConPosX_2,
			ConPosY = _ConPosY,
			ConPosZ = _ConPosZ,
			ConDVecX = ConDVecX,
			ConDVecY = ConDVecY,
			ConDVecZ = ConDVecZ,
			ConWVecX = ConWVecX,
			ConWVecY = ConWVecY,
			ConWVecZ = ConWVecZ,

			ConNominalWidth = ConNominalWidth_2,
			ConNominalDepth = ConNominalDepth_2,
			ConWidth = ConWidth_2,
			ConDepth = ConDepth_2,
			ConLength = ConLength_2,
			ConWallThickness = ConWallThickness_2,
			ConConnectorWidth = ConConnectorWidth_2,
			ConConnectorDepth = ConConnectorDepth_2,
			ConConnectorWidth2 = ConConnectorWidth2_2,
			ConToolType = ConToolType_2,
			ConStatus = ConStatus_2,
			ConType_2 = ConType_2,
			ConConnectorType_2 = ConConnectorType_2,
			ConSystem_2 = ConSystem_2,
			shape_typ_to_validation = shape_typ_to_validation,
			MEP_enabled_geometry_mod = 1

		PARAMETERS MEP_ConInfo[ConID][1] = STR(ConToolType_2, 1, 0)
		PARAMETERS MEP_ConInfo[ConID][2] = ConName
		PARAMETERS MEP_ConInfo[ConID][3] = "0"

		IF gs_ui_current_page = 4 THEN			!iPageIDConnections		= 4
			ac_mep_connectionpage_active = 1
		ELSE
			ac_mep_connectionpage_active = 0
		ENDIF
		PARAMETERS ac_mep_connectionpage_active = ac_mep_connectionpage_active

		IF SetProgram THEN
			SetProgram = 0
			PARAMETERS SetProgram = SetProgram
		ENDIF
	ELSE
		HIDEPARAMETER "gs_connection", "useSysMat", "gs_con_mat"

		ac_mep_connectionpage_active = 0
		PARAMETERS ac_mep_connectionpage_active = ac_mep_connectionpage_active
	ENDIF

endif
