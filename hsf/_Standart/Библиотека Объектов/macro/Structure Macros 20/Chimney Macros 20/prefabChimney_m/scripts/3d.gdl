
! ==============================================================================
! prefabChimney_m
! ==============================================================================


if gs_detlevel_3D_m = 0 then end
if gs_shadow = 0 then shadow off


! ==============================================================================
! MEP
! ==============================================================================

IF bShowMEP THEN

	IF useSysMat THEN
		matChimney 	= sMat
		matDoor = sMat
		matCap = sMat
		matTopCover = sMat
		gs_con_mat 	= sMat
	ENDIF

	PEN gs_cont_pen
	resol gs_resol

	CALL "MEP_m_ConnectionsACL_4" PARAMETERS SetProgram = SetProgram,
		ui_current_con = ui_current_con,
		MEP_NumberConnections = MEP_NumberConnections,
		MEP_NumConnectionData = gs_Connections,
		gs_AddConnections = gs_AddConnections,
		cShow3D = 1,
		gs_ConMat = gs_con_mat,
		MEP_InsShow = 0,
		MEP_cline_show_3D = 0,
		gs_cont_pen = gs_cont_pen,
		ConPosX_1=ConPosX_1, ConPosY_1=ConPosY_1, ConPosZ_1=ConPosZ_1, ConLength_1=ConLength_1, ConEdit_1 = 14,
		ConPosX_2=ConPosX_2, ConPosY_2=ConPosY_2, ConPosZ_2=ConPosZ_2, ConLength_2=ConLength_2, ConEdit_2 = 14,
		ConPosX_3=ConPosX_3, ConPosY_3=ConPosY_3, ConPosZ_3=ConPosZ_3, ConLength_3=ConLength_3, ConEdit_3 = 14,
		ConPosX_4=ConPosX_4, ConPosY_4=ConPosY_4, ConPosZ_4=ConPosZ_4, ConLength_4=ConLength_4, ConEdit_4 = 14,
		ConPosX_5=ConPosX_5, ConPosY_5=ConPosY_5, ConPosZ_5=ConPosZ_5, ConLength_5=ConLength_5, ConEdit_5 = 14,
		ConPosX_6=ConPosX_6, ConPosY_6=ConPosY_6, ConPosZ_6=ConPosZ_6, ConLength_6=ConLength_6, ConEdit_6 = 14,
		ConPosX_7=ConPosX_7, ConPosY_7=ConPosY_7, ConPosZ_7=ConPosZ_7, ConLength_7=ConLength_7, ConEdit_7 = 14,
		ConPosX_8=ConPosX_8, ConPosY_8=ConPosY_8, ConPosZ_8=ConPosZ_8, ConLength_8=ConLength_8, ConEdit_8 = 14,
		ConPosX_9=ConPosX_9, ConPosY_9=ConPosY_9, ConPosZ_9=ConPosZ_9, ConLength_9=ConLength_9, ConEdit_9 = 14,
		ConPosX_10=ConPosX_10, ConPosY_10=ConPosY_10, ConPosZ_10=ConPosZ_10, ConLength_10=ConLength_10, ConEdit_10 = 14,
		ConPosX_11=ConPosX_11, ConPosY_11=ConPosY_11, ConPosZ_11=ConPosZ_11, ConLength_11=ConLength_11, ConEdit_11 = 14,
		ConPosX_12=ConPosX_12, ConPosY_12=ConPosY_12, ConPosZ_12=ConPosZ_12, ConLength_12=ConLength_12, ConEdit_12 = 14,
		ConPosX_13=ConPosX_13, ConPosY_13=ConPosY_13, ConPosZ_13=ConPosZ_13, ConLength_13=ConLength_13, ConEdit_13 = 14,
		ConPosX_14=ConPosX_14, ConPosY_14=ConPosY_14, ConPosZ_14=ConPosZ_14, ConLength_14=ConLength_14, ConEdit_14 = 14,
		ConPosX_15=ConPosX_15, ConPosY_15=ConPosY_15, ConPosZ_15=ConPosZ_15, ConLength_15=ConLength_15, ConEdit_15 = 14,
		ConPosX_16=ConPosX_16, ConPosY_16=ConPosY_16, ConPosZ_16=ConPosZ_16, ConLength_16=ConLength_16, ConEdit_16 = 14,
		ConPosX_17=ConPosX_17, ConPosY_17=ConPosY_17, ConPosZ_17=ConPosZ_17, ConLength_17=ConLength_17, ConEdit_17 = 14,
		ConPosX_18=ConPosX_18, ConPosY_18=ConPosY_18, ConPosZ_18=ConPosZ_18, ConLength_18=ConLength_18, ConEdit_18 = 14

ENDIF

pen gs_cont_pen
material matChimney
resol gs_resol

zDoorPos = prefabUnitHeight + 2 * bShowBase * prefabUnitHeight + 0.06

! ==============================================================================
! Hotspot editing
! ==============================================================================

unIDBegin = 1
unID = unIDBegin

hotspot -A/2, -B/2, 0, unID : unID = unID + 1
hotspot  A/2, -B/2, 0, unID : unID = unID + 1
hotspot  A/2,  B/2, 0, unID : unID = unID + 1
hotspot -A/2,  B/2, 0, unID : unID = unID + 1

hotspot -A/2,-B/2,0, unid,zCornerPointsPos[1][1],1:unid=unID+1
hotspot -A/2,-B/2,zCornerPointsPos[1][1], unid,zCornerPointsPos[1][1],2:unid=unid+1
hotspot -A/2,-B/2,-1, unid,zCornerPointsPos[1][1],3:unid=unid+1

hotspot A/2,-B/2,0, unid,zCornerPointsPos[1][2],1:unid=unid+1
hotspot A/2,-B/2,zCornerPointsPos[1][2], unid,zCornerPointsPos[1][2],2:unid=unid+1
hotspot A/2,-B/2,-1, unid,zCornerPointsPos[1][2],3:unid=unid+1

hotspot -A/2,B/2,0, unid,zCornerPointsPos[2][1],1:unid=unid+1
hotspot -A/2,B/2,zCornerPointsPos[2][1], unid,zCornerPointsPos[2][1],2:unid=unid+1
hotspot -A/2,B/2,-1, unid,zCornerPointsPos[2][1],3:unid=unid+1

hotspot A/2,B/2,0, unid,zCornerPointsPos[2][2],1:unid=unid+1
hotspot A/2,B/2,zCornerPointsPos[2][2], unid,zCornerPointsPos[2][2],2:unid=unid+1
hotspot A/2,B/2,-1, unid,zCornerPointsPos[2][2],3:unid=unid+1

hotspot -A/2 + flueRadius + diff, 0, ZZYZX, unID : unID = unID + 1
if bDoubleFlue then hotspot A/2 - flueRadius2 - diff, 0, ZZYZX, unID : unID = unID + 1

if abs(doorAngle1 - 90) < eps | abs(doorAngle1 - 270) < eps then rotDoorRadius_1 = flueRadius + diff + clDoorProfileThk
if abs(doorAngle1) < eps | abs(doorAngle1 - 180) < eps then rotDoorRadius_1 = B/2 + clDoorProfileThk
hotspot -A/2 + flueRadius + diff, -B/2, zDoorPos, unID, doorAngle1, 4+128: unid = unid+1
hotspot -A/2 + flueRadius + diff + sin(doorAngle1) * rotDoorRadius_1, -cos(doorAngle1) * rotDoorRadius_1, zDoorPos, unID, doorAngle1, 5: unid = unid+1
hotspot -A/2 + flueRadius + diff, 0, zDoorPos, unID, doorAngle1, 6: unid = unid+1
hotspot -A/2 + flueRadius + diff, 0, zDoorPos + 1, unID, doorAngle1, 7: unid = unid+1

if bDoubleFlue then
	if abs(doorAngle2 - 90) < eps | abs(doorAngle2 - 270) < eps then rotDoorRadius_2 = flueRadius2 + diff + clDoorProfileThk
	if abs(doorAngle2) < eps | abs(doorAngle2 - 180) < eps then rotDoorRadius_2 = B/2 + clDoorProfileThk
	hotspot A/2 - flueRadius2 - diff, -B/2, zDoorPos, unID, doorAngle2, 4+128: unid = unid+1
	hotspot A/2 - flueRadius2 - diff + sin(doorAngle2) * rotDoorRadius_2, -cos(doorAngle2) * rotDoorRadius_2, zDoorPos, unID, doorAngle2, 5: unid = unid+1
	hotspot A/2 - flueRadius2 - diff, 0, zDoorPos, unID, doorAngle2, 6: unid = unid+1
	hotspot A/2 - flueRadius2 - diff, 0, zDoorPos + 1, unID, doorAngle2, 7: unid = unid+1
else
	unid = unid+4
endif

if bTopDoor then
	if abs(topDoorAngle1) < eps | abs(topDoorAngle1 - 180) < eps then rotTopDoorRadius_1 = B/2 + clDoorProfileThk
	if abs(topDoorAngle1 - 90) < eps | abs(topDoorAngle1 - 270) < eps then rotTopDoorRadius_1 = flueRadius + diff + clDoorProfileThk

	hotspot -A/2 + flueRadius + diff, -B/2 - clDoorProfileThk, zTopDoorPos1 - prefabUnitHeight/2 + 0.06, unID, topDoorAngle1, 4+128: unid = unid+1
	hotspot -A/2 + flueRadius + diff + sin(topDoorAngle1) * rotTopDoorRadius_1, -cos(topDoorAngle1) * rotTopDoorRadius_1, zTopDoorPos1 - prefabUnitHeight/2 + 0.06, unID, topDoorAngle1, 5: unid = unid+1
	hotspot -A/2 + flueRadius + diff, 0, zTopDoorPos1 - prefabUnitHeight/2 + 0.06, unID, topDoorAngle1, 6: unid = unid+1
	hotspot -A/2 + flueRadius + diff, 0, zTopDoorPos1 - prefabUnitHeight/2 + 0.06 + 1, unID, topDoorAngle1, 7: unid = unid+1

	hotspot -A/2 + flueRadius + diff + sin(topDoorAngle1) * rotTopDoorRadius_1, -cos(topDoorAngle1) * rotTopDoorRadius_1, 0, unid, zTopDoorPos1, 1 + 128: unid = unid+1
	hotspot -A/2 + flueRadius + diff + sin(topDoorAngle1) * rotTopDoorRadius_1, -cos(topDoorAngle1) * rotTopDoorRadius_1, zTopDoorPos1, unid, zTopDoorPos1, 2: unid = unid+1
	hotspot -A/2 + flueRadius + diff + sin(topDoorAngle1) * rotTopDoorRadius_1, -cos(topDoorAngle1) * rotTopDoorRadius_1, -1, unid, zTopDoorPos1, 3: unid = unid+1

	if bDoubleFlue then
		if abs(topDoorAngle2) < eps | abs(topDoorAngle2 - 180) < eps then rotTopDoorRadius_2 = B/2 + clDoorProfileThk
		if abs(topDoorAngle2 - 90) < eps then rotTopDoorRadius_2 = flueRadius2 + diff + clDoorProfileThk

		hotspot A/2 - flueRadius2 - diff, -B/2 - clDoorProfileThk, zTopDoorPos2 - prefabUnitHeight/2 + 0.06, unID, topDoorAngle2, 4+128: unid = unid+1
		hotspot A/2 - flueRadius2 - diff + sin(topDoorAngle2) * rotTopDoorRadius_2, -cos(topDoorAngle2) * rotTopDoorRadius_2, zTopDoorPos2 - prefabUnitHeight/2 + 0.06, unID, topDoorAngle2, 5: unid = unid+1
		hotspot A/2 - flueRadius2 - diff, 0, zTopDoorPos2 - prefabUnitHeight/2 + 0.06, unID, topDoorAngle2, 6: unid = unid+1
		hotspot A/2 - flueRadius2 - diff, 0, zTopDoorPos2 - prefabUnitHeight/2 + 0.06 + 1, unID, topDoorAngle2, 7: unid = unid+1

		hotspot A/2 - flueRadius2 - diff + sin(topDoorAngle2) * rotTopDoorRadius_2, -cos(topDoorAngle2) * rotTopDoorRadius_2, 0, unid, zTopDoorPos2, 1+128: unid = unid+1
		hotspot A/2 - flueRadius2 - diff + sin(topDoorAngle2) * rotTopDoorRadius_2, -cos(topDoorAngle2) * rotTopDoorRadius_2, zTopDoorPos2, unid, zTopDoorPos2, 2: unid = unid+1
		hotspot A/2 - flueRadius2 - diff + sin(topDoorAngle2) * rotTopDoorRadius_2, -cos(topDoorAngle2) * rotTopDoorRadius_2, -1, unid, zTopDoorPos2, 3: unid = unid+1
	else
		unid = unid+7
	endif
endif

if bShowMEP then
	if abs(smokeAngle_1) < eps | abs(smokeAngle_1 - 180) < eps then rotRadius_1 = B/2
	if abs(smokeAngle_1 - 90) < eps | abs(smokeAngle_1 - 270) < eps then rotRadius_1 = flueRadius + diff
	if abs(smokeAngle_2) < eps | abs(smokeAngle_2 - 180) < eps then rotRadius_2 = B/2
	if abs(smokeAngle_2 - 90) < eps | abs(smokeAngle_2 - 270) < eps then rotRadius_2 = flueRadius + diff
	if abs(smokeAngle_3) < eps | abs(smokeAngle_3 - 180) < eps then rotRadius_3 = B/2
	if abs(smokeAngle_3 - 90) < eps | abs(smokeAngle_3 - 270) < eps then rotRadius_3 = flueRadius + diff
	if abs(smokeAngle_4) < eps | abs(smokeAngle_4 - 180) < eps then rotRadius_4 = B/2
	if abs(smokeAngle_4 - 90) < eps | abs(smokeAngle_4 - 270) < eps then rotRadius_4 = flueRadius + diff
	if abs(smokeAngle_5) < eps | abs(smokeAngle_5 - 180) < eps then rotRadius_5 = B/2
	if abs(smokeAngle_5 - 90) < eps | abs(smokeAngle_5 - 270) < eps then rotRadius_5 = flueRadius + diff
	if abs(smokeAngle_6) < eps | abs(smokeAngle_6 - 180) < eps then rotRadius_6 = B/2
	if abs(smokeAngle_6 - 90) < eps | abs(smokeAngle_6 - 270) < eps then rotRadius_6 = flueRadius + diff
	if abs(smokeAngle_7) < eps | abs(smokeAngle_7 - 180) < eps then rotRadius_7 = B/2
	if abs(smokeAngle_7 - 90) < eps | abs(smokeAngle_7 - 270) < eps then rotRadius_7 = flueRadius + diff
	if abs(smokeAngle_8) < eps | abs(smokeAngle_8 - 180) < eps then rotRadius_8 = B/2
	if abs(smokeAngle_8 - 90) < eps | abs(smokeAngle_8 - 270) < eps then rotRadius_8 = flueRadius + diff
	if abs(smokeAngle_9) < eps | abs(smokeAngle_9 - 180) < eps then rotRadius_9 = B/2
	if abs(smokeAngle_9 - 90) < eps | abs(smokeAngle_9 - 270) < eps then rotRadius_9 = flueRadius + diff
	if bDoubleFlue then
		if abs(smokeAngle_10) < eps | abs(smokeAngle_10 - 180) < eps then rotRadius_10 = B/2
		if abs(smokeAngle_10 - 90) < eps then rotRadius_10 = flueRadius2 + diff
	else
		if abs(smokeAngle_10) < eps | abs(smokeAngle_10 - 180) < eps then rotRadius_10 = B/2
		if abs(smokeAngle_10 - 90) < eps | abs(smokeAngle_10 - 270) < eps then rotRadius_10 = flueRadius + diff
	endif
	if abs(smokeAngle_11) < eps | abs(smokeAngle_11 - 180) < eps then rotRadius_11 = B/2
	if abs(smokeAngle_12 - 90) < eps | abs(smokeAngle_12 - 270) < eps then rotRadius_12 = flueRadius2 + diff
	if abs(smokeAngle_12) < eps | abs(smokeAngle_12 - 180) < eps then rotRadius_12 = B/2
	if abs(smokeAngle_13 - 90) < eps | abs(smokeAngle_13 - 270) < eps then rotRadius_13 = flueRadius2 + diff
	if abs(smokeAngle_13) < eps | abs(smokeAngle_13 - 180) < eps then rotRadius_13 = B/2
	if abs(smokeAngle_14 - 90) < eps | abs(smokeAngle_14 - 270) < eps then rotRadius_14 = flueRadius2 + diff
	if abs(smokeAngle_14) < eps | abs(smokeAngle_14 - 180) < eps then rotRadius_14 = B/2
	if abs(smokeAngle_15 - 90) < eps | abs(smokeAngle_15 - 270) < eps then rotRadius_15 = flueRadius2 + diff
	if abs(smokeAngle_15) < eps | abs(smokeAngle_15 - 180) < eps then rotRadius_15 = B/2
	if abs(smokeAngle_16 - 90) < eps | abs(smokeAngle_16 - 270) < eps then rotRadius_16 = flueRadius2 + diff
	if abs(smokeAngle_16) < eps | abs(smokeAngle_16 - 180) < eps then rotRadius_16 = B/2
	if abs(smokeAngle_17 - 90) < eps | abs(smokeAngle_17 - 270) < eps then rotRadius_17 = flueRadius2 + diff
	if abs(smokeAngle_17) < eps | abs(smokeAngle_17 - 180) < eps then rotRadius_17 = B/2
	if abs(smokeAngle_18 - 90) < eps | abs(smokeAngle_18 - 270) < eps then rotRadius_18 = flueRadius2 + diff
	if abs(smokeAngle_18) < eps | abs(smokeAngle_18 - 180) < eps then rotRadius_18 = B/2

	unID = unIDBegin + 50
	if nSmokeCon > 0 then
		hotspot -A/2 + flueRadius + diff, -B/2, zSmokePos[1] - flueRadius, unID, smokeAngle_1, 4+128: unid = unID + 1
		hotspot -A/2 + flueRadius + diff + sin(smokeAngle_1) * rotRadius_1, -cos(smokeAngle_1) * rotRadius_1, zSmokePos[1] - flueRadius, unID, smokeAngle_1, 5: unid = unid+1
		hotspot -A/2 + flueRadius + diff, 0, zSmokePos[1] - flueRadius, unID, smokeAngle_1, 6: unid = unid+1
		hotspot -A/2 + flueRadius + diff, 0, zSmokePos[1] - flueRadius + 1, unID, smokeAngle_1, 7: unid = unid+1
	endif

	if nSmokeCon > 1 then
		hotspot -A/2 + flueRadius + diff, -B/2, zSmokePos[2] - flueRadius, unID, smokeAngle_2, 4+128: unid = unid+1
		hotspot -A/2 + flueRadius + diff + sin(smokeAngle_2) * rotRadius_2, -cos(smokeAngle_2) * rotRadius_2, zSmokePos[2] - flueRadius, unID, smokeAngle_2, 5: unid = unid+1
		hotspot -A/2 + flueRadius + diff, 0, zSmokePos[2] - flueRadius, unID, smokeAngle_2, 6: unid = unid+1
		hotspot -A/2 + flueRadius + diff, 0, zSmokePos[2] - flueRadius + 1, unID, smokeAngle_2, 7: unid = unid+1
	endif

	if nSmokeCon > 2 then
		hotspot -A/2 + flueRadius + diff, -B/2, zSmokePos[3] - flueRadius, unID, smokeAngle_3, 4+128: unid = unid+1
		hotspot -A/2 + flueRadius + diff + sin(smokeAngle_3) * rotRadius_3, -cos(smokeAngle_3) * rotRadius_3, zSmokePos[3] - flueRadius, unID, smokeAngle_3, 5: unid = unid+1
		hotspot -A/2 + flueRadius + diff, 0, zSmokePos[3] - flueRadius, unID, smokeAngle_3, 6: unid = unid+1
		hotspot -A/2 + flueRadius + diff, 0, zSmokePos[3] - flueRadius + 1, unID, smokeAngle_3, 7: unid = unid+1
	endif

	if nSmokeCon > 3 then
		hotspot -A/2 + flueRadius + diff, -B/2, zSmokePos[4] - flueRadius, unID, smokeAngle_4, 4+128: unid = unid+1
		hotspot -A/2 + flueRadius + diff + sin(smokeAngle_4) * rotRadius_4, -cos(smokeAngle_4) * rotRadius_4, zSmokePos[4] - flueRadius, unID, smokeAngle_4, 5: unid = unid+1
		hotspot -A/2 + flueRadius + diff, 0, zSmokePos[4] - flueRadius, unID, smokeAngle_4, 6: unid = unid+1
		hotspot -A/2 + flueRadius + diff, 0, zSmokePos[4] - flueRadius + 1, unID, smokeAngle_4, 7: unid = unid+1
	endif

	if nSmokeCon > 4 then
		hotspot -A/2 + flueRadius + diff, -B/2, zSmokePos[5] - flueRadius, unID, smokeAngle_5, 4+128: unid = unid+1
		hotspot -A/2 + flueRadius + diff + sin(smokeAngle_5) * rotRadius_5, -cos(smokeAngle_5) * rotRadius_5, zSmokePos[5] - flueRadius, unID, smokeAngle_5, 5: unid = unid+1
		hotspot -A/2 + flueRadius + diff, 0, zSmokePos[5] - flueRadius, unID, smokeAngle_5, 6: unid = unid+1
		hotspot -A/2 + flueRadius + diff, 0, zSmokePos[5] - flueRadius + 1, unID, smokeAngle_5, 7: unid = unid+1
	endif

	if nSmokeCon > 5 then
		hotspot -A/2 + flueRadius + diff, -B/2, zSmokePos[6] - flueRadius, unID, smokeAngle_6, 4+128: unid = unid+1
		hotspot -A/2 + flueRadius + diff + sin(smokeAngle_6) * rotRadius_6, -cos(smokeAngle_6) * rotRadius_6, zSmokePos[6] - flueRadius, unID, smokeAngle_6, 5: unid = unid+1
		hotspot -A/2 + flueRadius + diff, 0, zSmokePos[6] - flueRadius, unID, smokeAngle_6, 6: unid = unid+1
		hotspot -A/2 + flueRadius + diff, 0, zSmokePos[6] - flueRadius + 1, unID, smokeAngle_6, 7: unid = unid+1
	endif

	if nSmokeCon > 6 then
		hotspot -A/2 + flueRadius + diff, -B/2, zSmokePos[7] - flueRadius, unID, smokeAngle_7, 4+128: unid = unid+1
		hotspot -A/2 + flueRadius + diff + sin(smokeAngle_7) * rotRadius_7, -cos(smokeAngle_7) * rotRadius_7, zSmokePos[7] - flueRadius, unID, smokeAngle_7, 5: unid = unid+1
		hotspot -A/2 + flueRadius + diff, 0, zSmokePos[7] - flueRadius, unID, smokeAngle_7, 6: unid = unid+1
		hotspot -A/2 + flueRadius + diff, 0, zSmokePos[7] - flueRadius + 1, unID, smokeAngle_7, 7: unid = unid+1
	endif

	if nSmokeCon > 7 then
		hotspot -A/2 + flueRadius + diff, -B/2, zSmokePos[8] - flueRadius, unID, smokeAngle_8, 4+128: unid = unid+1
		hotspot -A/2 + flueRadius + diff + sin(smokeAngle_8) * rotRadius_8, -cos(smokeAngle_8) * rotRadius_8, zSmokePos[8] - flueRadius, unID, smokeAngle_8, 5: unid = unid+1
		hotspot -A/2 + flueRadius + diff, 0, zSmokePos[8] - flueRadius, unID, smokeAngle_8, 6: unid = unid+1
		hotspot -A/2 + flueRadius + diff, 0, zSmokePos[8] - flueRadius + 1, unID, smokeAngle_8, 7: unid = unid+1
	endif

	if nSmokeCon > 8 then
		hotspot -A/2 + flueRadius + diff, -B/2, zSmokePos[9] - flueRadius, unID, smokeAngle_9, 4+128: unid = unid+1
		hotspot -A/2 + flueRadius + diff + sin(smokeAngle_9) * rotRadius_9, -cos(smokeAngle_9) * rotRadius_9, zSmokePos[9] - flueRadius, unID, smokeAngle_9, 5: unid = unid+1
		hotspot -A/2 + flueRadius + diff, 0, zSmokePos[9] - flueRadius, unID, smokeAngle_9, 6: unid = unid+1
		hotspot -A/2 + flueRadius + diff, 0, zSmokePos[9] - flueRadius + 1, unID, smokeAngle_9, 7: unid = unid+1
	endif

	if not(bDoubleFlue) then
		if nSmokeCon > 9 then
			hotspot -A/2 + flueRadius + diff, -B/2, zSmokePos[10] - flueRadius, unID, smokeAngle_10, 4+128: unid = unid+1
			hotspot -A/2 + flueRadius + diff + sin(smokeAngle_10) * rotRadius_10, -cos(smokeAngle_10) * rotRadius_10, zSmokePos[10] - flueRadius, unID, smokeAngle_10, 5: unid = unid+1
			hotspot -A/2 + flueRadius + diff, 0, zSmokePos[10] - flueRadius, unID, smokeAngle_10, 6: unid = unid+1
			hotspot -A/2 + flueRadius + diff, 0, zSmokePos[10] - flueRadius + 1, unID, smokeAngle_10, 7: unid = unid+1
		endif
	else
		if nSmokeCon2 > 0 then
			hotspot A/2 - flueRadius2 - diff, -B/2, zSmokePos[10] - flueRadius2, unID, smokeAngle_10, 4+128: unid = unid+1
			hotspot A/2 - flueRadius2 - diff + sin(smokeAngle_10) * rotRadius_10, -cos(smokeAngle_10) * rotRadius_10, zSmokePos[10] - flueRadius2, unID, smokeAngle_10, 5: unid = unid+1
			hotspot A/2 - flueRadius2 - diff, 0, zSmokePos[10] - flueRadius2, unID, smokeAngle_10, 6: unid = unid+1
			hotspot A/2 - flueRadius2 - diff, 0, zSmokePos[10] - flueRadius2 + 1, unID, smokeAngle_10, 7: unid = unid+1
		endif
		if nSmokeCon2 > 1 then
			hotspot A/2 - flueRadius2 - diff, -B/2, zSmokePos[11] - flueRadius2, unID, smokeAngle_11, 4+128: unid = unid+1
			hotspot A/2 - flueRadius2 - diff + sin(smokeAngle_11) * rotRadius_11, -cos(smokeAngle_11) * rotRadius_11, zSmokePos[11] - flueRadius2, unID, smokeAngle_11, 5: unid = unid+1
			hotspot A/2 - flueRadius2 - diff, 0, zSmokePos[11] - flueRadius2, unID, smokeAngle_11, 6: unid = unid+1
			hotspot A/2 - flueRadius2 - diff, 0, zSmokePos[11] - flueRadius2 + 1, unID, smokeAngle_11, 7: unid = unid+1
		endif
		if nSmokeCon2 > 2 then
			hotspot A/2 - flueRadius2 - diff, -B/2, zSmokePos[12] - flueRadius2, unID, smokeAngle_12, 4+128: unid = unid+1
			hotspot A/2 - flueRadius2 - diff + sin(smokeAngle_12) * rotRadius_12, -cos(smokeAngle_12) * rotRadius_12, zSmokePos[12] - flueRadius2, unID, smokeAngle_12, 5: unid = unid+1
			hotspot A/2 - flueRadius2 - diff, 0, zSmokePos[12] - flueRadius2, unID, smokeAngle_12, 6: unid = unid+1
			hotspot A/2 - flueRadius2 - diff, 0, zSmokePos[12] - flueRadius2 + 1, unID, smokeAngle_12, 7: unid = unid+1
		endif
		if nSmokeCon2 > 3 then
			hotspot A/2 - flueRadius2 - diff, -B/2, zSmokePos[13] - flueRadius2, unID, smokeAngle_13, 4+128: unid = unid+1
			hotspot A/2 - flueRadius2 - diff + sin(smokeAngle_13) * rotRadius_13, -cos(smokeAngle_13) * rotRadius_13, zSmokePos[13] - flueRadius2, unID, smokeAngle_13, 5: unid = unid+1
			hotspot A/2 - flueRadius2 - diff, 0, zSmokePos[13] - flueRadius2, unID, smokeAngle_13, 6: unid = unid+1
			hotspot A/2 - flueRadius2 - diff, 0, zSmokePos[13] - flueRadius2 + 1, unID, smokeAngle_13, 7: unid = unid+1
		endif
		if nSmokeCon2 > 4 then
			hotspot A/2 - flueRadius2 - diff, -B/2, zSmokePos[14] - flueRadius2, unID, smokeAngle_14, 4+128: unid = unid+1
			hotspot A/2 - flueRadius2 - diff + sin(smokeAngle_14) * rotRadius_14, -cos(smokeAngle_14) * rotRadius_14, zSmokePos[14] - flueRadius2, unID, smokeAngle_14, 5: unid = unid+1
			hotspot A/2 - flueRadius2 - diff, 0, zSmokePos[14] - flueRadius2, unID, smokeAngle_14, 6: unid = unid+1
			hotspot A/2 - flueRadius2 - diff, 0, zSmokePos[14] - flueRadius2 + 1, unID, smokeAngle_14, 7: unid = unid+1
		endif
		if nSmokeCon2 > 5 then
			hotspot A/2 - flueRadius2 - diff, -B/2, zSmokePos[15] - flueRadius2, unID, smokeAngle_15, 4+128: unid = unid+1
			hotspot A/2 - flueRadius2 - diff + sin(smokeAngle_15) * rotRadius_15, -cos(smokeAngle_15) * rotRadius_15, zSmokePos[15] - flueRadius2, unID, smokeAngle_15, 5: unid = unid+1
			hotspot A/2 - flueRadius2 - diff, 0, zSmokePos[15] - flueRadius2, unID, smokeAngle_15, 6: unid = unid+1
			hotspot A/2 - flueRadius2 - diff, 0, zSmokePos[15] - flueRadius2 + 1, unID, smokeAngle_15, 7: unid = unid+1
		endif
		if nSmokeCon2 > 6 then
			hotspot A/2 - flueRadius2 - diff, -B/2, zSmokePos[16] - flueRadius2, unID, smokeAngle_16, 4+128: unid = unid+1
			hotspot A/2 - flueRadius2 - diff + sin(smokeAngle_16) * rotRadius_16, -cos(smokeAngle_16) * rotRadius_16, zSmokePos[16] - flueRadius2, unID, smokeAngle_16, 5: unid = unid+1
			hotspot A/2 - flueRadius2 - diff, 0, zSmokePos[16] - flueRadius2, unID, smokeAngle_16, 6: unid = unid+1
			hotspot A/2 - flueRadius2 - diff, 0, zSmokePos[16] - flueRadius2 + 1, unID, smokeAngle_16, 7: unid = unid+1
		endif
		if nSmokeCon2 > 7 then
			hotspot A/2 - flueRadius2 - diff, -B/2, zSmokePos[17] - flueRadius2, unID, smokeAngle_17, 4+128: unid = unid+1
			hotspot A/2 - flueRadius2 - diff + sin(smokeAngle_17) * rotRadius_17, -cos(smokeAngle_17) * rotRadius_17, zSmokePos[17] - flueRadius2, unID, smokeAngle_17, 5: unid = unid+1
			hotspot A/2 - flueRadius2 - diff, 0, zSmokePos[17] - flueRadius2, unID, smokeAngle_17, 6: unid = unid+1
			hotspot A/2 - flueRadius2 - diff, 0, zSmokePos[17] - flueRadius2 + 1, unID, smokeAngle_17, 7: unid = unid+1
		endif
		if nSmokeCon2 > 8 then
			hotspot A/2 - flueRadius2 - diff, -B/2, zSmokePos[18] - flueRadius2, unID, smokeAngle_18, 4+128: unid = unid+1
			hotspot A/2 - flueRadius2 - diff + sin(smokeAngle_18) * rotRadius_18, -cos(smokeAngle_18) * rotRadius_18, zSmokePos[18] - flueRadius2, unID, smokeAngle_18, 5: unid = unid+1
			hotspot A/2 - flueRadius2 - diff, 0, zSmokePos[18] - flueRadius2, unID, smokeAngle_18, 6: unid = unid+1
			hotspot A/2 - flueRadius2 - diff, 0, zSmokePos[18] - flueRadius2 + 1, unID, smokeAngle_18, 7: unid = unid+1
		endif
	endif
endif


! ==============================================================================
! Chimney 3D
! ==============================================================================

!for hi = 1 to int(blockHeight/prefabUnitHeight)
!	add -A/2 - 0.01, -B/2 - 0.01, prefabUnitHeight - 0.01
!	block A + 0.02, B + 0.02, 0.01
!	del 1
!addz prefabUnitHeight
!next hi
!del int(blockHeight/prefabUnitHeight)

gosub "flueCutting"

if bShowBase then
	if abs(doorAngle1) < eps then
		doorCuttingDepth = B/2
		add -A/2 + flueRadius + diff, -B/2, prefabUnitHeight + 2 * bShowBase * prefabUnitHeight
	endif
	if abs(doorAngle1 - 90) < eps then
		doorCuttingDepth = flueRadius + diff
		add A/2, 0, prefabUnitHeight + 2 * bShowBase * prefabUnitHeight
	endif
	if abs(doorAngle1 - 180) < eps then
		doorCuttingDepth = B/2
		add -A/2 + flueRadius + diff, B/2, prefabUnitHeight + 2 * bShowBase * prefabUnitHeight
	endif
	if abs(doorAngle1 - 270) < eps then
		doorCuttingDepth = flueRadius + diff
		add -A/2, 0, prefabUnitHeight + 2 * bShowBase * prefabUnitHeight
	endif
	rotz doorAngle1
	condensWater = 1
	gosub "cleaningDoor"
	del 2

	if bDoubleFlue then
		if abs(doorAngle2) < eps then
			doorCuttingDepth = B/2
			add A/2 - flueRadius2 - diff, -B/2, prefabUnitHeight + 2 * bShowBase * prefabUnitHeight
		endif
		if abs(doorAngle2 - 90) < eps then
			doorCuttingDepth = flueRadius2 + diff
			add A/2, 0, prefabUnitHeight + 2 * bShowBase * prefabUnitHeight
		endif
		if abs(doorAngle2 - 180) < eps then
			doorCuttingDepth = B/2
			add A/2 - flueRadius - diff, B/2, prefabUnitHeight + 2 * bShowBase * prefabUnitHeight
		endif
		rotz doorAngle2
		condensWater = 1
		gosub "cleaningDoor"
		del 2
	endif
endif

if bTopDoor then
	if abs(topDoorAngle1) < eps then
		doorCuttingDepth = B/2
		add -A/2 + flueRadius + diff, -B/2, zTopDoorPos1 - prefabUnitHeight/2
	endif
	if abs(topDoorAngle1 - 90) < eps then
		doorCuttingDepth = flueRadius + diff
		add A/2, 0, zTopDoorPos1 - prefabUnitHeight/2
	endif
	if abs(topDoorAngle1 - 180) < eps then
		doorCuttingDepth = B/2
		add -A/2 + flueRadius + diff, B/2, zTopDoorPos1 - prefabUnitHeight/2
	endif
	if abs(topDoorAngle1 - 270) < eps then
		doorCuttingDepth = flueRadius + diff
		add -A/2, 0, zTopDoorPos1 - prefabUnitHeight/2
	endif
	rotz topDoorAngle1
	condensWater = 0
	gosub "cleaningDoor"
	del 2

	if bDoubleFlue then
		if abs(topDoorAngle2) < eps then
			doorCuttingDepth = B/2
			add A/2 - flueRadius2 - diff, -B/2, zTopDoorPos2 - prefabUnitHeight/2
		endif
		if abs(topDoorAngle2 - 90) < eps then
			doorCuttingDepth = flueRadius2 + diff
			add A/2, 0, zTopDoorPos2 - prefabUnitHeight/2
		endif
		if abs(topDoorAngle2 - 180) < eps then
			doorCuttingDepth = B/2
			add A/2 - flueRadius2 - diff, B/2, zTopDoorPos2 - prefabUnitHeight/2
		endif
		if abs(topDoorAngle2 - 270) < eps then
			doorCuttingDepth = flueRadius2 + diff
			add -A/2, 0, zTopDoorPos2 - prefabUnitHeight/2
		endif
		rotz topDoorAngle2
		condensWater = 0
		gosub "cleaningDoor"
		del 2
	endif
endif

if bShowMEP then
	if bDoubleFlue then
		for iSmokeCon = 1 to nSmokeCon
			add -A/2 + flueRadius + diff, 0, zSmokePos[iSmokeCon]
			rotz smokeAngle[iSmokeCon]
			gosub "smokeCutting"
			del 2
		next iSmokeCon

		for iSmokeCon2 = 1 to nSmokeCon2
			add A/2 - flueRadius2 - diff, 0, zSmokePos[iSmokeCon2 + 9]
			rotz smokeAngle[iSmokeCon2 + 9]
			gosub "smokeCutting"
			del 2
		next iSmokeCon2
	else
		for iSmokeCon = 1 to nSmokeCon
			add -A/2 + flueRadius + diff, 0, zSmokePos[iSmokeCon]
			rotz smokeAngle[iSmokeCon]
			gosub "smokeCutting"
			del 2
		next iSmokeCon
	endif
endif

prism_ 5, blockHeight,
	-A/2, -B/2, 15,
	A/2, -B/2, 15,
	A/2, B/2, 15,
	-A/2, B/2, 15,
	-A/2, -B/2, -1

if bShowMEP then
	if bDoubleFlue then
		for iSmokeCon = 1 to nSmokeCon
			cutend
		next iSmokeCon
		for iSmokeCon2 = 1 to nSmokeCon2
			cutend
		next iSmokeCon2
	else
		for iSmokeCon = 1 to nSmokeCon
			cutend
		next iSmokeCon
	endif
endif

if bShowBase then
	cutend
	cutend
	if bDoubleFlue then
		cutend
		cutend
	endif
endif
if bTopDoor then
	cutend
	if bDoubleFlue then cutend
endif
cutend
if ventilation then cutend
if bDoubleFlue then cutend


! ==============================================================================
! Top Cover
! ==============================================================================

if bTopCover then
	material matTopCover
	group "Cover"
		prism_ 5 + 5, blockHeight,
			-A/2 - topCoverThk, -B/2 - topCoverThk, 15,
			A/2 + topCoverThk, -B/2 - topCoverThk, 15,
			A/2 + topCoverThk, B/2 + topCoverThk, 15,
			-A/2 - topCoverThk, B/2 + topCoverThk, 15,
			-A/2 - topCoverThk, -B/2 - topCoverThk, -1,

			-A/2, -B/2, 15,
			A/2, -B/2, 15,
			A/2, B/2, 15,
			-A/2, B/2, 15,
			-A/2, -B/2, -1
	endgroup

	group "CoverCutting"
		addz (zCornerPointsPos[2][2] - zCornerPointsPos[1][1]) / 2 + zCornerPointsPos[1][1]
		mul 2, 2, 2
		addz -(zCornerPointsPos[2][2] - zCornerPointsPos[1][1]) / 2 - zCornerPointsPos[1][1]
		ruled{2} 3, 1 + 2 + 4 + 16 + 32,
			-A/2, -B/2, 0,
			A/2, -B/2, 0,
			A/2, B/2, 0,

			-A/2, -B/2, zCornerPointsPos[1][1],
			A/2, -B/2, zCornerPointsPos[1][2],
			A/2, B/2, zCornerPointsPos[2][2]
		del 3

		addz (zCornerPointsPos[2][2] - zCornerPointsPos[1][1]) / 2 + zCornerPointsPos[1][1]
		mul 2, 2, 2
		addz -(zCornerPointsPos[2][2] - zCornerPointsPos[1][1]) / 2 - zCornerPointsPos[1][1]
		ruled{2} 3, 1 + 2 + 4 + 16 + 32,
			-A/2, -B/2, 0,
			-A/2, B/2, 0,
			A/2, B/2, 0,

			-A/2, -B/2, zCornerPointsPos[1][1],
			-A/2, B/2, zCornerPointsPos[2][1],
			A/2, B/2, zCornerPointsPos[2][2]
		del 3
	endgroup

	placegroup subgroup("Cover","CoverCutting")

	killgroup "Cover"
	killgroup "CoverCutting"
endif


! ==============================================================================
! Cap
! ==============================================================================

if bShowCap then
	material matCap
	capHeight = 0.03
	capOverhang = 0.01

	gosub "flueCutting"

	addz zzyzx - coneHeight - capHeight
	ruled{2} 4, 2 + 4 + 16 + 32,
		-A/2 - capOverhang - bTopCover * topCoverThk, -B/2 - capOverhang - bTopCover * topCoverThk, 0,
		A/2 + capOverhang + bTopCover * topCoverThk, -B/2 - capOverhang - bTopCover * topCoverThk, 0,
		A/2 + capOverhang + bTopCover * topCoverThk, B/2 + capOverhang + bTopCover * topCoverThk, 0,
		-A/2 - capOverhang - bTopCover * topCoverThk, B/2 + capOverhang + bTopCover * topCoverThk, 0,

		-A/2 - bTopCover * topCoverThk, -B/2 - bTopCover * topCoverThk, capHeight,
		A/2 + bTopCover * topCoverThk, -B/2 - bTopCover * topCoverThk, capHeight,
		A/2 + bTopCover * topCoverThk, B/2 + bTopCover * topCoverThk, capHeight,
		-A/2 - bTopCover * topCoverThk, B/2 + bTopCover * topCoverThk, capHeight
	del 1

	add -A/2 + diff + flueRadius, 0, zzyzx - coneHeight
	cone coneHeight, flueRadius + 0.06, flueRadius + 0.02, 90, 90
	del 1

	if bDoubleFlue then
		add A/2 - diff - flueRadius2, 0, zzyzx - coneHeight
		cone coneHeight, flueRadius2 + 0.06, flueRadius2 + 0.02, 90, 90
		del 1
	endif

	cutend
	if ventilation then cutend
	if bDoubleFlue then cutend
endif


end


"flueCutting":

	addz prefabUnitHeight/2 + 2.5 * bShowBase * prefabUnitHeight

	_centerPosX = -A/2 + diff + flueRadius

	if iFlueShape = FLUESHAPE_CIRCLE then
		put	_centerPosX,	0,		907 + 8 + 16  + 64,
			flueRadius,		360,	4007 + 8 + 16 + 64
	else
		put	_centerPosX - flueWidth/2,	-flueDepth/2,	7 + 8 + 16 + 64,
			_centerPosX + flueWidth/2,	-flueDepth/2,	7 + 8 + 16 + 64,
			_centerPosX + flueWidth/2,	 flueDepth/2,	7 + 8 + 16 + 64,
			_centerPosX - flueWidth/2,	 flueDepth/2,	7 + 8 + 16 + 64
	endif

	cutform (NSP)/3, 1, 1 + 16 + 64 + 128,
		0, 0, -1, 0,
		get (NSP)

	del 1

	if bDoubleFlue then
		if ventilation then
			addz prefabUnitHeight/2 + 2 * bShowBase * prefabUnitHeight
			cutform 5, 1, 1 + 16 + 64 + 128,
				0, 0, -1, 0,
				-A/2 + 2 * flueRadius + 2 * diff, -B/2 + 0.05, 15 + 16,
				-A/2 + 2 * flueRadius + 2 * diff + hole, -B/2 + 0.05, 15 + 16,
				-A/2 + 2 * flueRadius + 2 * diff + hole, B/2 - 0.05, 15 + 16,
				-A/2 + 2 * flueRadius + 2 * diff, B/2 - 0.05, 15 + 16,
				-A/2 + 2 * flueRadius + 2 * diff, -B/2 + 0.05, -1
			del 1
		endif

		addz prefabUnitHeight/2 + 2.5 * bShowBase * prefabUnitHeight

		_centerPosX = A/2 - diff - flueRadius2

		if iFlueShape = FLUESHAPE_CIRCLE then
			put	_centerPosX,	0,		907 + 8 + 16  + 64,
				flueRadius2,	360,	4007 + 8 + 16 + 64
		else
			put	_centerPosX - flueWidth2/2,	-flueDepth2/2,	7 + 8 + 16 + 64,
				_centerPosX + flueWidth2/2,	-flueDepth2/2,	7 + 8 + 16 + 64,
				_centerPosX + flueWidth2/2,	 flueDepth2/2,	7 + 8 + 16 + 64,
				_centerPosX - flueWidth2/2,	 flueDepth2/2,	7 + 8 + 16 + 64
		endif

		cutform (NSP)/3, 1, 1 + 16 + 64 + 128,
			0, 0, -1, 0,
			get (NSP)
		del 1
	else
		if ventilation then
			addz prefabUnitHeight/2 + 2 * bShowBase * prefabUnitHeight
			cutform 5, 1, 1 + 16 + 64 + 128,
				0, 0, -1, 0,
				A/2 - minWallThk - hole, -B/2 + 0.05, 15 + 16,
				A/2 - minWallThk, -B/2 + 0.05, 15 + 16,
				A/2 - minWallThk, B/2 - 0.05, 15 + 16,
				A/2 - minWallThk - hole, B/2 - 0.05, 15 + 16,
				A/2 - minWallThk - hole, -B/2 + 0.05, -1
			del 1
		endif
	endif

return


"cleaningDoor":

material matDoor
addz 0.06
tube 7, 8, 1 + 2,
	0, 0, 0,
	5 * clDoorProfileThk, 0, 0,
	5 * clDoorProfileThk, clDoorProfileThk, 0,
	-clDoorProfileThk, clDoorProfileThk, 0,
	-clDoorProfileThk, -5 * clDoorProfileThk, 0,
	0, -5 * clDoorProfileThk, 0,
	0, 0, -1,

	-clDoorWidth1/2, 0, 0, 0,
	clDoorWidth1/2, 0, 0, 0,
	clDoorWidth1/2, 0, clDoorHeight, 0,
	-clDoorWidth1/2, 0, clDoorHeight, 0,
	-clDoorWidth1/2, 0, 0, 0,
	clDoorWidth1/2, 0, 0, 0,
	clDoorWidth1/2, 0, clDoorHeight, 0,
	-clDoorWidth1/2, 0, clDoorHeight, 0

add 0, -clDoorProfileThk, clDoorProfileThk + 0.001
prism_ 5, clDoorHeight - 2 * (clDoorProfileThk + 0.001),
	-clDoorWidth1/2 + (clDoorProfileThk + 0.001), 0, 15,
	clDoorWidth1/2 - (clDoorProfileThk + 0.001), 0, 15,
	clDoorWidth1/2 - (clDoorProfileThk + 0.001), clDoorProfileThk, 15,
	-clDoorWidth1/2 + (clDoorProfileThk + 0.001), clDoorProfileThk, 15,
	-clDoorWidth1/2 + (clDoorProfileThk + 0.001), 0, -1
del 1 + 1

material matChimney
addz 0.06
rotx 90
cutform 4, 1, 1 + 64 + 128,
	0, 0, -1, doorCuttingDepth,
	-clDoorWidth1/2, 0, 7 + 16,
	clDoorWidth1/2, 0, 7 + 16,
	clDoorWidth1/2, clDoorHeight, 7 + 16,
	-clDoorWidth1/2, clDoorHeight, 7 + 16
del 2

if condensWater then
	resol 8
	condensConRadius = 0.015
	addz condensConRadius - prefabUnitHeight/2*0
	rotx 90
	material matDoor
	prism_ 2 + 2, 2 * condensConRadius,
		0, 0, 907 + 8 + 64,
		1.2 * condensConRadius, 360, 4007 + 8 + 64,

		0, 0, 907 + 8 + 64,
		condensConRadius, 360, 4007 + 8 + 64

	material matChimney
	cutform 2, 1, 1 + 16 + 64 + 128,
	0, 0, -1, doorCuttingDepth,
	0, 0, 907 + 8 + 16  + 64,
	condensConRadius, 360, 4007 + 8 + 16 + 64
	del 2
	resol gs_resol
endif

return


"smokeCutting":

rotx 90
cutform 2, 1, 1 + 16 + 64 + 128,
	0, 0, -1, 0,
	0, 0, 907 + 8 + 16  + 64,
	flueRadius, 360, 4007 + 8 + 16 + 64
del 1

return
