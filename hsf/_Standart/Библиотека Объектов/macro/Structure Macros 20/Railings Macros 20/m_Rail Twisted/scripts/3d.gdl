
IF gs_detlevel_3D_m=0 THEN end
IF gs_shadow=0 THEN SHADOW OFF


templra = max(templra, EPS)
PEN gs_cont_pen
unID=1

	fth=pth
IF hrt_m=1 THEN		!!! HANDRAIL WIDTH
	HandrailWidth=hrw
ELSE
	HandrailWidth=hrd
ENDIF

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** SIMPLE 3D *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


!!!CALCULATION FOR CONNECTING ANGLE

XPosL0=(HandrailWidth/2)/tan(gs_AngleL)
XPosR0=(HandrailWidth/2)/tan(gs_AngleR)

XPosL=ABS((HandrailWidth/2)/tan(gs_AngleL))
XPosR=ABS((HandrailWidth/2)/tan(gs_AngleR))
YPosL=(XPosL*tan(ani))
YPosR=(XPosR*tan(ani))


IF gs_detlevel_3D_m=1 THEN		!!Simple

	MATERIAL pmat
	RESOL res

	!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** STRAIGHT *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

		IF ABS(ani)<EPS and ptyp_m=1 THEN		!!ptyp=Straight

			ADDx XStartPoslra
			ADDz ds
				PRISM_ 5,hr,
					XPosL0,fth/2,15,
					-XPosL0,-fth/2,15,
					templra+XPosR0,-fth/2,15,
					templra-XPosR0,fth/2,15,
					XPosL0,fth/2,-1
			DEL 2

		ENDIF

	!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** STRAIGHT CURVED *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

		IF ABS(ani)<EPS and ptyp_m<>1 THEN

		!!!!FRAME

			IF ab<360 THEN
					ADDz ds
					PRISM_ 10,hr,
						0,fth/2,15,
						0,-fth/2+0.00005,15,
						0,-fth/2,79,
						1,0,800,
						(rb+(fth/2))*sin(ab),rb-(rb+(fth/2))*cos(ab),1015,
						(rb-(fth/2)+0.00005)*sin(ab),rb-(rb-(fth/2)+0.00005)*cos(ab),15,
						(rb-(fth/2))*sin(ab),rb-(rb-(fth/2))*cos(ab),79,
						-cos(ab),-sin(ab),800,
						0,fth/2,1015,
						0,fth/2,-1
					DEL 1

			ELSE	!!!ANGLE=360

				ADDz ds
					PRISM_ 12,hr,
						0,-fth/2,79,
						1,0,800,
						0,2*rb+fth/2,1079,
						-1,0,800,
						0,-fth/2,1079,
						0,-fth/2,-1,

						0,fth/2,79,
						1,0,800,
						0,2*rb-fth/2,1079,
						-1,0,800,
						0,fth/2,1079,
						0,fth/2,-1
				DEL 1

			ENDIF
		ENDIF

	!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** STRAIGHT INCLINED *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

		IF ABS(ani)>EPS and ptyp_m=1 THEN			!!ptyp=Straight

			IF rom_m=1 THEN					!!Vertical Orientation

				ADD XStartPoslra,0,ZStartPoslra

					IF rmm_m=1 THEN			!!Vertical Measurement
						temp_ds=ds
						temp_hr=hr
					ELSE					!!Perpendicular Measurement
						temp_ds=dsPerp
						temp_hr=hrPerp
					ENDIF


					ROTz -90+gs_AngleL		!! CONNECTING ANGLE
					ROTy -90
						CUTPLANE
					DEL 2

					ADDx templra
					ROTz 90-gs_AngleR
					ROTy 90
						CUTPLANE
					DEL 3


						ROTx 90
						ADDz -fth/2

							PRISM_ 5,fth,
								-XPosL,temp_ds-YPosL,15,
								templra+XPosR,temp_ds+templra*tan(ani)+YPosR,15,
								templra+XPosR,temp_ds+temp_hr+templra*tan(ani)+YPosR,15,
								-XPosL,temp_ds+temp_hr-YPosL,15,
								-XPosL,temp_ds-YPosL,-1

						DEL 2

					CUTEND
					CUTEND

				DEL 1

			ELSE						!Perpendicular Orientation
										!Measurement is always perpendicular to inclination in this case

				ROTy -ani
				ADDx XStartPoslra

					ROTx 90
					ADDz -fth/2
						!!FRAME

						PRISM_ 5,fth,
						0,ds,15,
						templrah,ds,15,
						templrah,ds+hr,15,
						0,ds+hr,15,
						0,ds,-1
					DEL 2

				DEL 2

			ENDIF


		ENDIF


	!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** INCLINED AND CURVED *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!

		IF ABS(ani)>EPS and ptyp_m<>1 THEN

			!!!!FRAME

			alphai=-alphaincl
			deltazi=-deltazincl
			for i=1 to nalphaincl+3 step 1
			put rb*sin(alphai),rb-rb*cos(alphai),ds+deltazi
			alphai=alphai+alphaincl
			deltazi=deltazi+deltazincl
			NEXT i

			TUBEA 5,nalphaincl+3,1+2+16+32,
				-fth/2,0,0,
				fth/2,0,0,
				fth/2,hr,0,
				-fth/2,hr,0,
				-fth/2,0,-1,
				get (nsp)

		ENDIF


ENDIF		!!END of SIMPLE 3D!!




!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** DETAILED 3D *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


IF gs_detlevel_3D_m=2 THEN


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** STRAIGHT *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


	IF ABS(ani)<EPS and ptyp_m=1 THEN

		ADDX XStartPoslra

		!!3D FEEDBACK AT HOTSPOT EDITING
		IF GLOB_CONTEXT>20 and GLOB_CONTEXT<40 THEN

			ADDz ds
			MATERIAL fmat
			PRISM_ 5,hr,
				(fth/2)/tan(gs_AngleL),fth/2,15,
				-(fth/2)/tan(gs_AngleL),-fth/2,15,
				templra+(fth/2)/tan(gs_AngleR),-fth/2,15,
				templra-(fth/2)/tan(gs_AngleR),fth/2,15,
				(fth/2)/tan(gs_AngleL),fth/2,-1
			DEL 1

		ELSE	!!! DETAILED MODEL

			RESOL rescs
			!! *** HANDRAIL *** !! *****************************************************

			MATERIAL fmat

			ADDx -(hroL)
			ROTz -90+gs_AngleL		!! CONNECTING ANGLE
			ROTy -90
			CUTPLANE
			DEL 3

			ADDx templra+(hroR)
			ROTz 90-gs_AngleR
			ROTy 90
			CUTPLANE
			DEL 3

			RESOL rescs

			MATERIAL fmat

			GROUP "handrail round straight"			!Groups
				ADD  -hroL-XPosL,0,ds+hr-hrd/2
				ROTy 90
				CYLIND templra+(hroL)+XPosL+(hroR)+XPosR,hrd/2
				DEL 2
			ENDGROUP


			IF hrt_m=1 THEN

				ADDz ds+hr-hrh
					PRISM_ 5,hrh,
						-(hroL)-XPosL,hrw/2,15,
						-(hroL)-XPosL,-hrw/2,15,
						templra+(hroR)+XPosR,-hrw/2,15,
						templra+(hroR)+XPosR,hrw/2,15,
						-(hroL)-XPosL,hrw/2,-1
				DEL 1

			ELSE
				PLACEGROUP "handrail round straight"
			ENDIF

			CUTEND
			CUTEND



			!! *** POST *** !! *****************************************************


			MATERIAL pmat

			ADDx -(hroL)-LengthSize*dpost
			ROTz -90+gs_AngleL		!! CONNECTING ANGLE
			ROTy -90
			CUTPLANE
			DEL 3

			ADDx templra+(hroR)+LengthSize*dpost
			ROTz 90-gs_AngleR
			ROTy 90
			CUTPLANE
			DEL 3

			MATERIAL pmat

			IF hrt_m=1 THEN			!Post height calculation
				ph=hr+ds-hrh+gs_PostBaseOverhang
			ELSE
				ph=hr+ds-hrd+gs_PostBaseOverhang
			ENDIF

			GROUP "post rect straight"
				ADDz -gs_PostBaseOverhang
				for i=1 to np step 1

					prism_ 5, ds/2 + gs_PostBaseOverhang,
						-pw/2,-pth/2,11,
						 pw/2,-pth/2,11,
						 pw/2,pth/2,11,
						-pw/2,pth/2,11,
						-pw/2,-pth/2,-1

					addz ds/2 + gs_PostBaseOverhang
					steps = max (int (res/2), 3)
					angleStep = 90/steps
					heightStep = (ds/2) / steps

					put 0, 0, 0

					for j = 1 to steps
						put 0, 0, j * heightStep
					next j

					sweep 4, (nsp/3), angleStep, 1, 4,
						-pw/2,-pth/2,0,
						 pw/2,-pth/2,0,
						 pw/2,pth/2,0,
						-pw/2,pth/2,0,

						 get (nsp)


					addz ds/2
					prism_ 5, ph - ds - gs_PostBaseOverhang,
						-pth/2,-pw/2,14,
						 pth/2,-pw/2,14,
						 pth/2,pw/2,14,
						-pth/2,pw/2,14,
						-pth/2,-pw/2,-1

					del 2


					ADDx distpost
				next i
				DEL np + 1
			ENDGROUP

			PLACEGROUP "post rect straight"

			CUTEND
			CUTEND



			!! *** Boards *** !! *****************************************************

			MATERIAL bmat

			ADDx -(hroL)-LengthSize*dpost
			ROTz -90+gs_AngleL		!! CONNECTING ANGLE
			ROTy -90
			CUTPLANE
			DEL 3

			ADDx templra+(hroR)+LengthSize*dpost
			ROTz 90-gs_AngleR
			ROTy 90
			CUTPLANE
			DEL 3

			MATERIAL bmat

			!Horizontal

			GROUP "board round straight H"
				ADDz  ds+bd/2
				ROTy 90
				CYLIND templra,bd/2
				DEL 2
			ENDGROUP


			for i=1 to nb step 1
				PLACEGROUP subgroup ("board round straight H","post rect straight")
				ADDz dw
			next i
			DEL nb

			CUTEND
			CUTEND


			KILLGROUP "handrail round straight"
			KILLGROUP "post rect straight"
			KILLGROUP "board round straight H"

		ENDIF
		DEL 1
	ENDIF


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** STRAIGHT CURVED *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


	IF ABS(ani)<EPS and ptyp_m<>1 THEN

		!!3D FEEDBACK AT HOTSPOT EDITING
		IF GLOB_CONTEXT>20 and GLOB_CONTEXT<40 THEN

			!!!!FRAME
			MATERIAL fmat

			IF ab<360 THEN
				ADDz ds
				PRISM_ 10,hr,
					0,fth/2,15,
					0,-fth/2+0.00005,15,
					0,-fth/2,79,
					1,0,800,
					(rb+(fth/2))*sin(ab),rb-(rb+(fth/2))*cos(ab),1015,
					(rb-(fth/2)+0.00005)*sin(ab),rb-(rb-(fth/2)+0.00005)*cos(ab),15,
					(rb-(fth/2))*sin(ab),rb-(rb-(fth/2))*cos(ab),79,
					-cos(ab),-sin(ab),800,
					0,fth/2,1015,
					0,fth/2,-1
				DEL 1

			ELSE	!!!ANGLE=360

				ADDz ds
				PRISM_ 12,hr,
					0,-fth/2,79,
					1,0,800,
					0,2*rb+fth/2,1079,
					-1,0,800,
					0,-fth/2,1079,
					0,-fth/2,-1,

					0,fth/2,79,
					1,0,800,
					0,2*rb-fth/2,1079,
					-1,0,800,
					0,fth/2,1079,
					0,fth/2,-1
				DEL 1
			ENDIF
		ELSE

			!!! HANDRAIL
			MATERIAL fmat
			RESOL res

			if (ab + alphahroL + alphahroR) < 360 then

				group "handrail round curved"				!Groups
					gamma0 = 360 / rescs
					gamma = 0
					for i = 1 to rescs step 1
						put hrd/2 * cos(gamma), rb + hrd/2 * sin(gamma), 1
						gamma = gamma + gamma0
					next i
					add 0, rb, ds + hr - hrd/2
					roty 90
					rotx 180 - ab - alphahroR
						revolve rescs+1, ab + alphahroL + alphahroR, 1+2+4+8+16+32,
							get (nsp),
							hrd/2, rb, -1
					del 3
				endgroup
				handrailgroupname = "handrail round curved"

				IF hrt_m=1 THEN
					ADDz ds+hr-hrh
					PRISM_ 9,hrh,
						(rb-(hrw/2))*sin(-alphahroL),rb-(rb-(hrw/2))*cos(alphahroL),15,
						(rb+(hrw/2)-0.00005)*sin(-alphahroL),rb-(rb+(hrw/2)-0.000005)*cos(alphahroL),15,
						(rb+(hrw/2))*sin(-alphahroL),rb-(rb+(hrw/2))*cos(alphahroL),79,
						cos(alphahroL),sin(-alphahroL),800,
						(rb+(hrw/2))*sin(ab+alphahroR),rb-(rb+(hrw/2))*cos(ab+alphahroR),1015,
						(rb-(hrw/2)+0.00005)*sin(ab+alphahroR),rb-(rb-(hrw/2)+0.00005)*cos(ab+alphahroR),15,
						(rb-(hrw/2))*sin(ab+alphahroR),rb-(rb-(hrw/2))*cos(ab+alphahroR),79,
						-cos(ab+alphahroR),-sin(ab+alphahroR),800,
						(rb-(hrw/2))*sin(-alphahroL),rb-(rb-(hrw/2))*cos(alphahroL),1015
					DEL 1
				ELSE
					PLACEGROUP "handrail round curved"
				ENDIF

			else

				group "handrail round curved 360"
					gamma0 = 360 / rescs
					gamma = 0
					for i = 1 to rescs step 1
						put hrd/2 * cos(gamma), rb + hrd/2 * sin(gamma), 1
						gamma = gamma + gamma0
					next i
					add  0, rb, ds + hr - hrd/2
					roty 90
					rotx 180-ab
						revolve rescs+1, 360, 0,
							get (nsp),
							hrd/2, rb, -1
					del 3
				endgroup
				handrailgroupname = "handrail round curved 360"

				if hrt_m=1 then
					addz ds + hr - hrh
						prism_ 12, hrh,
							0, -hrw/2, 79,
							1, 0, 800,
							0, 2*rb + hrw/2, 1079,
							-1, 0, 800,
							0, -hrw/2, 1079,
							0, -hrw/2, -1,

							0, hrw/2, 79,
							1, 0, 800,
							0, 2*rb - hrw/2, 1079,
							-1, 0, 800,
							0, hrw/2, 1079,
							0, hrw/2, -1
					del 1
				else
					placegroup "handrail round curved 360"
				endif

			endif

			!!other parts are shorter, circularity checked differently
			if ab < 360 then

				!!! *** Posts *** !!! *************************

				MATERIAL pmat
				RESOL rescs

				IF hrt_m=1 THEN			!Post height calculation
					ph=hr+ds-hrh+gs_PostBaseOverhang
				ELSE
					ph=hr+ds-hrd+gs_PostBaseOverhang
				ENDIF

				GROUP "post rect curved"
					ADDZ -gs_PostBaseOverhang
					for i=1 to np step 1
						prism_ 5, ds/2 + gs_PostBaseOverhang,
							-pw/2,-pth/2,11,
							 pw/2,-pth/2,11,
							 pw/2,pth/2,11,
							-pw/2,pth/2,11,
							-pw/2,-pth/2,-1

						addz ds/2 + gs_PostBaseOverhang
						steps = max (int (res/2), 3)
						angleStep = 90/steps
						heightStep = (ds/2) / steps

						put 0, 0, 0

						for j = 1 to steps
							put 0, 0, j * heightStep
						next j

						sweep 4, (nsp/3), angleStep, 1, 4,
							-pw/2,-pth/2,0,
							 pw/2,-pth/2,0,
							 pw/2,pth/2,0,
							-pw/2,pth/2,0,

							 get (nsp)


						addz ds/2
						prism_ 5, ph - ds - gs_PostBaseOverhang,
							-pth/2,-pw/2,14,
							 pth/2,-pw/2,14,
							 pth/2,pw/2,14,
							-pth/2,pw/2,14,
							-pth/2,-pw/2,-1
						del 2

						addy rb
						rotz anglepost
						addy -rb
					next i
					DEL 3*np
					DEL 1
				ENDGROUP

				PLACEGROUP "post rect curved"


				!!! *** Bars *** !!! **************************

				MATERIAL bmat

				!Horizontal
				RESOL res

				GROUP "board round curved H"
					gamma0=360/rescs
					gamma=0
					for i=1 to rescs step 1
						put bd/2*cos(gamma),rb+bd/2*sin(gamma),1
						gamma=gamma+gamma0
					next i
					add  0,rb,ds+bd/2
					ROTy 90
					ROTx 180-ab
					revolve rescs+1,ab,1+2+4+8+16+32,
						get (nsp),
						bd/2,rb,-1
					DEL 3
				ENDGROUP

				for i=1 to nb
					PLACEGROUP subgroup ("board round curved H","post rect curved")
					ADDz dw
				next i
				DEL nb

				KILLGROUP "post rect curved"
				KILLGROUP "board round curved H"

			ELSE

				!!! *** Posts *** !!! ****************************

				MATERIAL pmat
				RESOL rescs

				IF hrt_m=1 THEN			!Post height calculation
					ph=hr+ds-hrh+gs_PostBaseOverhang
				ELSE
					ph=hr+ds-hrd+gs_PostBaseOverhang
				ENDIF

				GROUP "post rect curved 360"
					ADDZ -gs_PostBaseOverhang
					for i=1 to np step 1
						prism_ 5, ds/2 + gs_PostBaseOverhang,
							-pw/2,-pth/2,11,
							 pw/2,-pth/2,11,
							 pw/2,pth/2,11,
							-pw/2,pth/2,11,
							-pw/2,-pth/2,-1

						addz ds/2 + gs_PostBaseOverhang
						steps = max (int (res/2), 3)
						angleStep = 90/steps
						heightStep = (ds/2) / steps

						put 0, 0, 0

						for j = 1 to steps
							put 0, 0, j * heightStep
						next j

						sweep 4, (nsp/3), angleStep, 1, 4,
							-pw/2,-pth/2,0,
							 pw/2,-pth/2,0,
							 pw/2,pth/2,0,
							-pw/2,pth/2,0,

							 get (nsp)


						addz ds/2
						prism_ 5, ph - ds - gs_PostBaseOverhang,
							-pth/2,-pw/2,14,
							 pth/2,-pw/2,14,
							 pth/2,pw/2,14,
							-pth/2,pw/2,14,
							-pth/2,-pw/2,-1

						del 2

						addy rb
						rotz anglepost
						addy -rb
					next i
					DEL 3*np
					DEL 1
				ENDGROUP

				PLACEGROUP "post rect curved 360"


				!!! *** Wires *** !!! *****************************

				MATERIAL bmat
				RESOL res

				!Horizontal

				GROUP "board round curved H 360"
					gamma0=360/rescs
					gamma=0
					for i=1 to rescs step 1
						put bd/2*cos(gamma),rb+bd/2*sin(gamma),1
						gamma=gamma+gamma0
					next i
					add  0,rb,ds+bd/2
					ROTy 90
					ROTx 180-ab
					revolve (nsp/3) + 1, 360, 1+2+4+8+16+32,
						get (nsp),
						bd/2,rb,-1
					DEL 3
				ENDGROUP

				for i=1 to nb step 1
					PLACEGROUP subgroup ("board round curved H 360","post rect curved 360")
					ADDz dw
				next i
				DEL nb

				KILLGROUP "post rect curved 360"
				KILLGROUP "board round curved H 360"
			ENDIF
			KILLGROUP handrailgroupname		!!this group wasn't used
		ENDIF
	ENDIF



!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** STRAIGHT INCLINED *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


	IF ABS(ani)>EPS and ptyp_m=1 THEN

		RESOL rescs

		IF rom_m=1 THEN									!Vertical Orientation

			IF rmm_m=2 THEN		!Perpendicular Measurement Extra Values
				hrh=hrh/cos(ani)
				hrd=hrd/cos(ani)
				dw=dw/cos(ani)
			ENDIF


			IF rmm_m=1 THEN			!!Vertical Measurement
				temp_ds=ds
				temp_hr=hr
				temp_PostBaseOverhang=gs_PostBaseOverhang
			ELSE					!!Perpendicular Measurement
				temp_ds=dsPerp
				temp_hr=hrPerp
				temp_PostBaseOverhang=gs_PostBaseOverhangPerp
			ENDIF


			!!3D FEEDBACK AT HOTSPOT EDITING
			IF GLOB_CONTEXT>20 and GLOB_CONTEXT<40 THEN

				ADD XStartPoslra,0,ZStartPoslra

				MATERIAL fmat

				ROTz -90+gs_AngleL		!!! CONNECTING ANGLE
				ROTy -90
				CUTPLANE
				DEL 2

				ADDx templra
				ROTz 90-gs_AngleR
				ROTy 90
				CUTPLANE
				DEL 3

				ROTx 90
				ADDz -fth/2

				MATERIAL fmat
				PRISM_ 5,fth,
					-XPosL,temp_ds-YPosL,15,
					templra+XPosR,temp_ds+templra*tan(ani)+YPosR,15,
					templra+XPosR,temp_ds+temp_hr+templra*tan(ani)+YPosR,15,
					-XPosL,temp_ds+temp_hr-YPosL,15,
					-XPosL,temp_ds-YPosL,-1
				DEL 2

				CUTEND
				CUTEND

				DEL 1

			ELSE

				ADD XStartPoslra,0,ZStartPoslra


				!!! *** Handrail *** !!! *****************************************

				MATERIAL fmat

				ADDx -(hroL)
				ROTz -90+gs_AngleL		!! CONNECTING ANGLE
				ROTy -90
				CUTPLANE
				DEL 3

				ADDx templra+(hroR)
				ROTz 90-gs_AngleR
				ROTy 90
				CUTPLANE
				DEL 3

				GROUP "handrail round straight inclined"
					ADD -(hroL)-XPosL,0,temp_ds+temp_hr-hrd/2-(hroL)*tan(ani)-YPosL
					ROTy 90-ani
					CONE (templra+hroL+hroR)/cos(ani)+XPosL+XPosR,hrd/2,hrd/2,90+ani,90+ani
					DEL 1
				ENDGROUP

				IF hrt_m=1 THEN
					ROTx 90
					ADDz -hrw/2
						PRISM_ 5,hrw,
						-(hroL)-XPosL,temp_ds+temp_hr-hrh-(hroL)*tan(ani)-YPosL,15,
						templra+(hroR)+XPosR,temp_ds+temp_hr-hrh+(templra+(hroR))*tan(ani)+YPosR,15,
						templra+(hroR)+XPosR,temp_ds+temp_hr+(templra+(hroR))*tan(ani)+YPosR,15,
						-(hroL)-XPosL,temp_ds+temp_hr-(hroL)*tan(ani)-YPosL,15,
						-(hroL)-XPosL,temp_ds+temp_hr-hrh-(hroL)*tan(ani)-YPosL,-1
					DEL 2
				ELSE
					PLACEGROUP "handrail round straight inclined"
				ENDIF

				CUTEND
				CUTEND


				!!! *** Posts *** !!! **********************************************

				MATERIAL pmat

				ADDx -(hroL)-LengthSize*dpost
				ROTz -90+gs_AngleL		!! CONNECTING ANGLE
				ROTy -90
				CUTPLANE
				DEL 3

				ADDx templra+(hroR)+LengthSize*dpost
				ROTz 90-gs_AngleR
				ROTy 90
				CUTPLANE
				DEL 3

				MATERIAL pmat

				IF hrt_m=1 THEN			!Post height calculation
					ph=temp_hr+temp_ds-hrh+temp_PostBaseOverhang
				ELSE
					ph=temp_hr+temp_ds-hrd+temp_PostBaseOverhang
				ENDIF

				GROUP "post rect straight inclined"
					ADDz -temp_PostBaseOverhang
						ROTx 90
						ADDz -pth/2
						for i=1 to np step 1
							rotx -90

							prism_ 5, ds/2 + gs_PostBaseOverhang,
								-pw/2,-pth/2,11,
								 pw/2,-pth/2,11,
								 pw/2,pth/2,11,
								-pw/2,pth/2,11,
								-pw/2,-pth/2,-1

							addz ds/2 + gs_PostBaseOverhang
							steps = max (int (res/2), 3)
							angleStep = 90/steps
							heightStep = (ds/2) / steps

							put 0, 0, 0

							for j = 1 to steps
								put 0, 0, j * heightStep
							next j

							sweep 4, (nsp/3), angleStep, 1, 4,
								-pw/2,-pth/2,0,
								 pw/2,-pth/2,0,
								 pw/2,pth/2,0,
								-pw/2,pth/2,0,

								 get (nsp)

							addz ds/2
							rotx 90
							addz -pw/2

							prism_ 5, pw,
								pth/2, 0, 15,
								pth/2, ph - ds - gs_PostBaseOverhang + pth/2 * tan(ani), 15,
								-pth/2, ph - ds - gs_PostBaseOverhang - pth/2 * tan(ani), 15,
								-pth/2, 0, 15,
								pth/2, 0, -1
							del 5

							add distpost,distpost*tan(ani),0
						next i
						DEL np+2
					DEL 1
				ENDGROUP

				IF hrt_m=1 THEN
					PLACEGROUP "post rect straight inclined"
				ELSE
					PLACEGROUP subgroup ("post rect straight inclined","handrail round straight inclined")
				ENDIF

				CUTEND
				CUTEND


				!!! *** Boards *** !!! *****************************************

				MATERIAL bmat

				ADDx -(hroL)-LengthSize*dpost
				ROTz -90+gs_AngleL		!! CONNECTING ANGLE
				ROTy -90
				CUTPLANE
				DEL 3

				ADDx templra+(hroR)+LengthSize*dpost
				ROTz 90-gs_AngleR
				ROTy 90
				CUTPLANE
				DEL 3

				MATERIAL bmat

				!Horizontal

				GROUP "board round straight H inclined"
					ADDz temp_ds+bd/2
					ROTy 90-ani
					cone templra/cos(ani),bd/2,bd/2,90+ani,90+ani
					DEL 2
				ENDGROUP


				for i=1 to nb step 1
					PLACEGROUP subgroup ("board round straight H inclined","post rect straight inclined")
					ADDz dw
				next i
				DEL nb

				CUTEND
				CUTEND

				KILLGROUP "handrail round straight inclined"
				KILLGROUP "post rect straight inclined"
				KILLGROUP "board round straight H inclined"

				DEL 1
			ENDIF

		ELSE						!Perpendicular Orientation
									!Measurement is always perpendicular to inclination in this case

			ROTy -ani
			ADDX XStartPoslrah

			!!3D FEEDBACK AT HOTSPOT EDITING
			IF GLOB_CONTEXT>20 and GLOB_CONTEXT<40 THEN

				ROTx 90
				ADDz -fth/2
				!!FRAME
				MATERIAL fmat
				PRISM_ 5,fth,
					0,ds,15,
					templrah,ds,15,
					templrah,ds+hr,15,
					0,ds+hr,15,
					0,ds,-1
				DEL 2

			ELSE		!! 3D DETAILED MODEL

				!!! Handrail
				MATERIAL fmat

				GROUP "handrail round straight perp"			!Groups
					ADD  -hroLDiagonal,0,ds+hr-hrd/2
					ROTy 90
					CYLIND templrah+hroLDiagonal+hroRDiagonal,hrd/2
					DEL 2
				ENDGROUP


				IF hrt_m=1 THEN
					ROTx 90
					ADDz -hrw/2
					PRISM_ 5,hrw,
						-hroLDiagonal,ds+hr-hrh,15,
						templrah+hroRDiagonal,ds+hr-hrh,15,
						templrah+hroRDiagonal,ds+hr,15,
						-hroLDiagonal,ds+hr,15,
						-hroLDiagonal,ds+hr-hrh,-1
					DEL 2
				ELSE
					PLACEGROUP "handrail round straight perp"
				ENDIF

				!!! *** Post *** !!! ***************************************
				MATERIAL pmat

				IF hrt_m=1 THEN			!Post height calculation
					ph=hr+ds-hrh+gs_PostBaseOverhang
				ELSE
					ph=hr+ds-hrd+gs_PostBaseOverhang
				ENDIF

				GROUP "post rect straight perp"
					ADDz -gs_PostBaseOverhang
					for i=1 to np step 1
						prism_ 5, ds/2 + gs_PostBaseOverhang,
							-pw/2,-pth/2,11,
							 pw/2,-pth/2,11,
							 pw/2,pth/2,11,
							-pw/2,pth/2,11,
							-pw/2,-pth/2,-1

						addz ds/2 + gs_PostBaseOverhang
						steps = max (int (res/2), 3)
						angleStep = 90/steps
						heightStep = (ds/2) / steps

						put 0, 0, 0

						for j = 1 to steps
							put 0, 0, j * heightStep
						next j

						sweep 4, (nsp/3), angleStep, 1, 4,
							-pw/2,-pth/2,0,
							 pw/2,-pth/2,0,
							 pw/2,pth/2,0,
							-pw/2,pth/2,0,

							 get (nsp)


						addz ds/2
						prism_ 5, ph - ds - gs_PostBaseOverhang,
							-pth/2,-pw/2,14,
							 pth/2,-pw/2,14,
							 pth/2,pw/2,14,
							-pth/2,pw/2,14,
							-pth/2,-pw/2,-1

						del 2

						ADDx distpost
					next i
					DEL np
					DEL 1
				ENDGROUP

				PLACEGROUP "post rect straight perp"


				!!! *** Wires *** !!! **************************************

				MATERIAL bmat

				!Horizontal

				GROUP "board round straight H perp"
					ADDz  ds+bd/2
					ROTy 90
						CYLIND templrah,bd/2
					DEL 2
				ENDGROUP

				for i=1 to nb step 1
					PLACEGROUP subgroup ("board round straight H perp","post rect straight perp")
					ADDz dw
				next i
				DEL nb

				KILLGROUP "handrail round straight perp"
				KILLGROUP "post rect straight perp"
				KILLGROUP "board round straight H perp"

			ENDIF

			DEL 1		!! END OF DRAG
			DEL 1		!! END OF ROTATION

		ENDIF
	ENDIF


!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** INCLINED AND CURVED *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!


	IF ABS(ani)>EPS and ptyp_m<>1 THEN

		RESOL rescs

		!!! HANDRAIL

		MATERIAL fmat

		!!3D FEEDBACK AT HOTSPOT EDITING
		IF GLOB_CONTEXT>20 and GLOB_CONTEXT<40 THEN

			!!!!FRAME
			MATERIAL fmat

			alphai=-alphaincl
			deltazi=-deltazincl
			for i=1 to nalphaincl+3 step 1
				put rb*sin(alphai),rb-rb*cos(alphai),ds+deltazi
				alphai=alphai+alphaincl
				deltazi=deltazi+deltazincl
			NEXT i

			TUBEA 5,nalphaincl+3,1+2+16+32,
				-fth/2,0,0,
				fth/2,0,0,
				fth/2,hr,0,
				-fth/2,hr,0,
				-fth/2,0,-1,
				get (nsp)

		ELSE

			RestAngleL=alphahroL-nalphahroL*alphaincl		!!Rest Angle= Overhang Angle- Segments Points Angle
			LOHkerul=(rb*pi*alphahroL)/180					!!Perimeter of Handrail
			deltazLOH=LOHkerul*sin(ani)						!!vertical distance of Handrail
			deltara=deltazLOH-(deltazincl*nalphahroL)		!!vertical step of Rest Angle

			RestAngleR=alphahroR-nalphahroR*alphaincl
			ROHkerul=(rb*pi*alphahroR)/180
			deltazROH=ROHkerul*sin(ani)
			deltaraR=deltazROH-(deltazincl*nalphahroR)

			alphai=-(nalphahroL+1)*alphaincl
			deltazi=-(nalphahroL+1)*deltazincl

			if ABS(hroR)<EPS THEN
				tempStep=1
			ELSE
				tempStep=0
			ENDIF

			PUT rb*sin(-alphahroL-restangleL),rb-rb*cos(-alphahroL-restangleL),ds-deltazLOH-deltara
			PUT rb*sin(-alphahroL),rb-rb*cos(-alphahroL),ds-deltazLOH
			PUT rb*sin(-alphahroL+restangleL),rb-rb*cos(-alphahroL+restangleL),ds-deltazLOH+deltara

			if abs(nalphahroL)>EPS then		!! Left Handrail
				for i=1 to nalphahroL step 1
					PUT rb*sin(-alphahroL+restangleL+i*alphaincl),rb-rb*cos(-alphahroL+restangleL+i*alphaincl),ds-deltazLOH+deltara+i*deltazincl
				next i
			endif

			FOR i=0 to nalphaincl+tempStep step 1		!! Handrail between Posts
				PUT rb*sin(i*alphaincl),rb-rb*cos(i*alphaincl),ds+i*deltazincl
			NEXT i

			IF ABS(hroR)>EPS THEN				!! Right Handrail

				if abs(nalphahroR)>EPS then
					FOR i=1 to nalphahroR step 1
						PUT rb*sin((nalphaincl+i)*alphaincl),rb-rb*cos((nalphaincl+i)*alphaincl),ds+(nalphaincl+i)*deltazincl
					Next i
				endif

				PUT rb*sin((nalphaincl+nalphahroR)*alphaincl+restangleR),rb-rb*cos((nalphaincl+nalphahroR)*alphaincl+restangleR),ds+(nalphaincl+nalphahroR)*deltazincl+deltaraR
				PUT rb*sin((nalphaincl+nalphahroR)*alphaincl+2*restangleR),rb-rb*cos((nalphaincl+nalphahroR)*alphaincl+2*restangleR),ds+(nalphaincl+nalphahroR)*deltazincl+2*deltaraR
			ENDIF


			GROUP "handrail round inclined curved"
				ADDz hr-hrd/2
				tubea 6,nsp/3,1+2+16+32,
					-hrd/2,0,1,
					 0,-1,801,
					 hrd/2,0,1001,
					 0,1,801,
					-hrd/2,0,1001,
					-hrd/2,0,-1,
					use (nsp)
				DEL 1
			ENDGROUP

			GROUP "handrail rect inclined curved"
				ADDz hr-hrh
				tubea 5,nsp/3,1+2+16+32,
					-hrw/2,0,0,
					 hrw/2,0,0,
					 hrw/2,hrh,0,
					-hrw/2,hrh,0,
					-hrw/2,0,-1,
					get (nsp)
				DEL 1
			ENDGROUP

			IF hrt_m=1 THEN
				PLACEGROUP "handrail rect inclined curved"
			ELSE
				PLACEGROUP "handrail round inclined curved"
			ENDIF


			!!! *** Posts *** !!! **********************************************

			MATERIAL pmat

			IF hrt_m=1 THEN			!Post height calculation
				ph=hr+ds-hrh/2+gs_PostBaseOverhang
			ELSE
				ph=hr+ds-hrd/2+gs_PostBaseOverhang
			ENDIF

			GROUP "post rect inclined curved"
				ADDZ -gs_PostBaseOverhang
				for i=1 to np step 1
					prism_ 5, ds/2 + gs_PostBaseOverhang,
						-pw/2,-pth/2,11,
						 pw/2,-pth/2,11,
						 pw/2,pth/2,11,
						-pw/2,pth/2,11,
						-pw/2,-pth/2,-1

					addz ds/2 + gs_PostBaseOverhang
					steps = max (int (res/2), 3)
					angleStep = 90/steps
					heightStep = (ds/2) / steps

					put 0, 0, 0

					for j = 1 to steps
						put 0, 0, j * heightStep
					next j

					sweep 4, (nsp/3), angleStep, 1, 4,
						-pw/2,-pth/2,0,
						 pw/2,-pth/2,0,
						 pw/2,pth/2,0,
						-pw/2,pth/2,0,

						 get (nsp)


					addz ds/2
					prism_ 5, ph - ds - gs_PostBaseOverhang,
						-pth/2,-pw/2,14,
						 pth/2,-pw/2,14,
						 pth/2,pw/2,14,
						-pth/2,pw/2,14,
						-pth/2,-pw/2,-1

					del 2

					addy rb
					rotz anglepost
					addy -rb
					ADDz deltazpost
				next i
				DEL 4*np
				DEL 1
			ENDGROUP

			IF hrt_m=1 THEN
				PLACEGROUP subgroup ("post rect inclined curved","handrail rect inclined curved")
			ELSE
				PLACEGROUP subgroup ("post rect inclined curved","handrail round inclined curved")
			ENDIF


			!!! *** Wires *** !!! **********************************************

			MATERIAL bmat

			!Horizontal

			alphai=-alphaincl
			deltazi=-deltazincl
			for i=1 to nalphaincl+3 step 1
				put rb*sin(alphai),rb-rb*cos(alphai),deltazi
				alphai=alphai+alphaincl
				deltazi=deltazi+deltazincl
			next i

			GROUP "board round inclined curved H"
				ADDz ds+bd/2
				TUBEA 6,nalphaincl+3,1+2+16+32,
					-bd/2,0,1,
					 0,-1,801,
					 bd/2,0,1001,
					 0,1,801,
					-bd/2,0,1001,
					-bd/2,0,-1,
				use (nsp)
				DEL 1
			ENDGROUP

			for i=1 to nb step 1
				PLACEGROUP subgroup ("board round inclined curved H","post rect inclined curved")
				ADDz dw
			next i
			DEL nb


			KILLGROUP "handrail round inclined curved"
			KILLGROUP "handrail rect inclined curved"
			KILLGROUP "post rect inclined curved"
			KILLGROUP "board round inclined curved H"

		ENDIF
	ENDIF
ENDIF


!!DETAILED 3D END!!
DEL top
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! ** HOTSPOTS ** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

	IF LengthSize = 0 THEN			!!!OVERHANG OF HANDRAIL
		temphroL = -hroL
		temphroR = hroR
		RefPoint1 = 1
		RefPoint2 = -1

		InclRefPoint = -tan(ani)

		temphroLDiag = -hroLDiagonal
		temphroRDiag = hroRDiagonal
	ELSE
		temphroL = hroL
		temphroR = -hroR
		RefPoint1 = -1
		RefPoint2 = 1

		InclRefPoint = tan(ani)

		temphroLDiag = hroLDiagonal
		temphroRDiag = -hroRDiagonal
	ENDIF

	!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** STRAIGHT *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

	IF cfs=0 THEN
		IF ABS(ani)<EPS and ptyp_m=1 THEN

				!!!LENGHT
				HOTSPOT 0,0,ds+hr,unID,lra,1+256 : unID=unID+1
				HOTSPOT lra,0,ds+hr,unID,lra,2 : unID=unID+1
				HOTSPOT -1,0,ds+hr,unID,lra,3 : unID=unID+1

				IF LengthSize = 0 THEN
					HOTSPOT 0,0,0,unID,lra,1+256 : unID=unID+1
					HOTSPOT lra,0,0,unID,lra,2 : unID=unID+1
					HOTSPOT -1,0,0,unID,lra,3 : unID=unID+1

					HOTSPOT 0,0,ds,unID,lra,1+256 : unID=unID+1
					HOTSPOT lra,0,ds,unID,lra,2 : unID=unID+1
					HOTSPOT -1,0,ds,unID,lra,3 : unID=unID+1
				ENDIF

				!!!DISTANCE FROM FLOOR
				HOTSPOT templra/2+LengthSize*hroL,0,0,unID,ds,1+128 : unID=unID+1
				HOTSPOT templra/2+LengthSize*hroL,0,ds,unID,ds,2 : unID=unID+1
				HOTSPOT templra/2+LengthSize*hroL,0,-1,unID,ds,3 : unID=unID+1

				!!!HEIGHT OF RAILING
				HOTSPOT templra/2+LengthSize*hroL,0,ds,unID,hr,1 : unID=unID+1
				HOTSPOT templra/2+LengthSize*hroL,0,ds+hr,unID,hr,2 : unID=unID+1
				HOTSPOT templra/2+LengthSize*hroL,0,-1,unID,hr,3 : unID=unID+1

				!!!POST BASE OVERHANG
				HOTSPOT LengthSize*hroL,0,0,unID,gs_PostBaseOverhang,1 : unID=unID+1
				HOTSPOT LengthSize*hroL,0,-gs_PostBaseOverhang,unID,gs_PostBaseOverhang,2 : unID=unID+1
				HOTSPOT LengthSize*hroL,0,1,unID,gs_PostBaseOverhang,3 : unID=unID+1

				HOTSPOT lra-LengthSize*hroR,0,0,unID,gs_PostBaseOverhang,1 : unID=unID+1
				HOTSPOT lra-LengthSize*hroR,0,-gs_PostBaseOverhang,unID,gs_PostBaseOverhang,2 : unID=unID+1
				HOTSPOT lra-LengthSize*hroR,0,1,unID,gs_PostBaseOverhang,3 : unID=unID+1

				!!!OVERHANG OF RAILING
				HOTSPOT 0,0,ds+hr,unID,hroL,1+128 : unID=unID+1
				HOTSPOT temphroL,0,ds+hr,unID,hroL,2 : unID=unID+1
				HOTSPOT RefPoint1,0,ds+hr,unID,hroL,3 : unID=unID+1

				HOTSPOT lra,0,ds+hr,unID,hroR,1+128 : unID=unID+1
				HOTSPOT lra+temphroR,0,ds+hr,unID,hroR,2 : unID=unID+1
				HOTSPOT lra+RefPoint2,0,ds+hr,unID,hroR,3 : unID=unID+1


		ENDIF

	!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** STRAIGHT CURVED *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

		IF ABS(ani)<EPS and ptyp_m<>1 THEN
			IF ab<360 THEN

					IF ptyp_m=3 THEN
					!!!ROTATE
						HOTSPOT 0,rb,ds,unID,ab,6 : unID=unID+1
						HOTSPOT 0,0,ds,unID,ab,4+256 : unID=unID+1
						HOTSPOT rb*sin(ab),rb-rb*cos(ab),ds,unID,ab,5 : unID=unID+1

						HOTSPOT 0,rb,ds+hr,unID,ab,6 : unID=unID+1
						HOTSPOT 0,0,ds+hr,unID,ab,4+256 : unID=unID+1
						HOTSPOT rb*sin(ab),rb-rb*cos(ab),ds+hr,unID,ab,5 : unID=unID+1

					!!!FIX HOTSPOT AT FLOOR
						HOTSPOT 0,0,0,unID : unID=unID+1
						HOTSPOT rb*sin(ab),rb-rb*cos(ab),0,unID : unID=unID+1
					ENDIF

					!!!HEIGHT OF RAILING
						HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),ds,unID,hr,1+128 : unID=unID+1
						HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),ds+hr,unID,hr,2 : unID=unID+1
						HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),-1,unID,ds,3 : unID=unID+1

					!!! DISTANCE FROM FLOOR
						HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),0,unID,ds,1 : unID=unID+1
						HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),ds,unID,ds,2 : unID=unID+1
						HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),-1,unID,ds,3 : unID=unID+1

					!!!POST BASE OVERHANG
						HOTSPOT 0,0,0,unID,gs_PostBaseOverhang,1+128 : unID=unID+1
						HOTSPOT 0,0,-gs_PostBaseOverhang,unID,gs_PostBaseOverhang,2 : unID=unID+1
						HOTSPOT 0,0,1,unID,gs_PostBaseOverhang,3 : unID=unID+1

						HOTSPOT rb*sin(ab),rb-rb*cos(ab),0,unID,gs_PostBaseOverhang,1+128 : unID=unID+1
						HOTSPOT rb*sin(ab),rb-rb*cos(ab),-gs_PostBaseOverhang,unID,gs_PostBaseOverhang,2 : unID=unID+1
						HOTSPOT rb*sin(ab),rb-rb*cos(ab),1,unID,gs_PostBaseOverhang,3 : unID=unID+1

					IF ptyp_m=2 THEN

					!!!HEIGHT OF RAILING
						HOTSPOT 0,0,ds,unID,hr,1+128 : unID=unID+1
						HOTSPOT 0,0,ds+hr,unID,hr,2 : unID=unID+1
						HOTSPOT 0,0,-1,unID,hr,3 : unID=unID+1

						HOTSPOT rb*sin(ab),rb-rb*cos(ab),ds,unID,hr,1+128 : unID=unID+1
						HOTSPOT rb*sin(ab),rb-rb*cos(ab),ds+hr,unID,hr,2 : unID=unID+1
						HOTSPOT rb*sin(ab),rb-rb*cos(ab),-1,unID,hr,3 : unID=unID+1

					!!! DISTANCE FROM FLOOR
						HOTSPOT 0,0,0,unID,ds,1 : unID=unID+1
						HOTSPOT 0,0,ds,unID,ds,2 : unID=unID+1
						HOTSPOT 0,0,-1,unID,ds,3 : unID=unID+1

						HOTSPOT rb*sin(ab),rb-rb*cos(ab),0,unID,ds,1 : unID=unID+1
						HOTSPOT rb*sin(ab),rb-rb*cos(ab),ds,unID,ds,2 : unID=unID+1
						HOTSPOT rb*sin(ab),rb-rb*cos(ab),-1,unID,ds,3 : unID=unID+1
					ENDIF


			ELSE	!!!ANGLE=360


				!!!HOTSPOTS FOR GRAPHICAL EDITING
				!!!HEIGHT

					HOTSPOT 0,0,ds,unID,hr,1 : unID=unID+1
					HOTSPOT 0,0,ds+hr,unID,hr,2 : unID=unID+1
					HOTSPOT 0,0,-1,unID,hr,3 : unID=unID+1

					HOTSPOT rb,rb,ds,unID,hr,1 : unID=unID+1
					HOTSPOT rb,rb,ds+hr,unID,hr,2 : unID=unID+1
					HOTSPOT rb,rb,-1,unID,hr,3 : unID=unID+1

					HOTSPOT 0,2*rb,ds,unID,hr,1 : unID=unID+1
					HOTSPOT 0,2*rb,ds+hr,unID,hr,2 : unID=unID+1
					HOTSPOT 0,2*rb,-1,unID,hr,3 : unID=unID+1

					HOTSPOT -rb,rb,ds,unID,hr,1 : unID=unID+1
					HOTSPOT -rb,rb,ds+hr,unID,hr,2 : unID=unID+1
					HOTSPOT -rb,rb,-1,unID,hr,3 : unID=unID+1

					HOTSPOT 0,0,0,unID,ds,1 : unID=unID+1
					HOTSPOT 0,0,ds,unID,ds,2 : unID=unID+1
					HOTSPOT 0,0,-1,unID,ds,3 : unID=unID+1

					HOTSPOT rb,rb,0,unID,ds,1 : unID=unID+1
					HOTSPOT rb,rb,ds,unID,ds,2 : unID=unID+1
					HOTSPOT rb,rb,-1,unID,ds,3 : unID=unID+1

					HOTSPOT 0,2*rb,0,unID,ds,1 : unID=unID+1
					HOTSPOT 0,2*rb,ds,unID,ds,2 : unID=unID+1
					HOTSPOT 0,2*rb,-1,unID,ds,3 : unID=unID+1

					HOTSPOT -rb,rb,0,unID,ds,1 : unID=unID+1
					HOTSPOT -rb,rb,ds,unID,ds,2 : unID=unID+1
					HOTSPOT -rb,rb,-1,unID,ds,3 : unID=unID+1

					!!!POST BASE OVERHANG
					HOTSPOT 0,0,0,unID,gs_PostBaseOverhang,1+128 : unID=unID+1
					HOTSPOT 0,0,-gs_PostBaseOverhang,unID,gs_PostBaseOverhang,2 : unID=unID+1
					HOTSPOT 0,0,1,unID,gs_PostBaseOverhang,3 : unID=unID+1

					HOTSPOT rb,rb,0,unID,gs_PostBaseOverhang,1+128 : unID=unID+1
					HOTSPOT rb,rb,-gs_PostBaseOverhang,unID,gs_PostBaseOverhang,2 : unID=unID+1
					HOTSPOT rb,rb,1,unID,gs_PostBaseOverhang,3 : unID=unID+1

					HOTSPOT 0,2*rb,0,unID,gs_PostBaseOverhang,1+128 : unID=unID+1
					HOTSPOT 0,2*rb,-gs_PostBaseOverhang,unID,gs_PostBaseOverhang,2 : unID=unID+1
					HOTSPOT 0,2*rb,1,unID,gs_PostBaseOverhang,3 : unID=unID+1

					HOTSPOT -rb,rb,0,unID,gs_PostBaseOverhang,1+128 : unID=unID+1
					HOTSPOT -rb,rb,-gs_PostBaseOverhang,unID,gs_PostBaseOverhang,2 : unID=unID+1
					HOTSPOT -rb,rb,1,unID,gs_PostBaseOverhang,3 : unID=unID+1


			ENDIF
		ENDIF

	!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** STRAIGHT INCLINED *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

		IF ABS(ani)>EPS and ptyp_m=1 THEN			!!ptyp=Straight
			IF rom_m=1 THEN					!!Vertical Orientation

					IF rmm_m=2 THEN			!!Perpendicular Measurement
						ftw=ftw/cos(ani)
						fbw=fbw/cos(ani)
					ENDIF

					IF rmm_m=1 THEN			!!Vertical Measurement
						temp_ds=ds
						temp_hr=hr
					ELSE					!!Perpendicular Measurement
						temp_ds=dsPerp
						temp_hr=hrPerp
					ENDIF


					!!!	HOTSPOTS FOR GRAPHICAL EDITING
					!!! LENGTH OF RAILING

						HOTSPOT 0,	0,	temp_ds+temp_hr,				unID, lrah, 1+256 : unID=unID+1
						HOTSPOT -1, 0,	temp_ds+temp_hr-tan(ani),		unID, lrah, 3 : unID=unID+1
						HOTSPOT lra,0, 	temp_ds+temp_hr+lra*tan(ani),	unID, lrah, 2 : unID=unID+1

					IF LengthSize = 0 THEN
						HOTSPOT 0,	0,	0,				unID, lrah, 1+256 : unID=unID+1
						HOTSPOT -1, 0,	0-tan(ani),		unID, lrah, 3 : unID=unID+1
						HOTSPOT lra,0, 	0+lra*tan(ani),	unID, lrah, 2 : unID=unID+1

						HOTSPOT 0,	0,	temp_ds,				unID, lrah, 1+256 : unID=unID+1
						HOTSPOT -1, 0,	temp_ds-tan(ani),		unID, lrah, 3 : unID=unID+1
						HOTSPOT lra,0, 	temp_ds+lra*tan(ani),	unID, lrah, 2 : unID=unID+1
					ENDIF

					IF rmm_m=1 THEN
						!!! DISTANCE FROM FLOOR
						HOTSPOT templra/2+LengthSize*hroL,	0,	(templra/2+LengthSize*hroL)*tan(ani),	unID, ds, 1+128 : unID=unID+1
						HOTSPOT templra/2+LengthSize*hroL,	0,	(templra/2+LengthSize*hroL)*tan(ani)-1,	unID, ds, 3 : unID=unID+1
						HOTSPOT templra/2+LengthSize*hroL,	0, 	(templra/2+LengthSize*hroL)*tan(ani)+temp_ds,	unID, ds, 2 : unID=unID+1

						!!! HEIGHT of RAILING
						HOTSPOT templra/2+LengthSize*hroL,	0,	temp_ds+(templra/2+LengthSize*hroL)*tan(ani),	unID, hr, 1+128 : unID=unID+1
						HOTSPOT templra/2+LengthSize*hroL,	0,	temp_ds+(templra/2+LengthSize*hroL)*tan(ani)-1,	unID, hr, 3 : unID=unID+1
						HOTSPOT templra/2+LengthSize*hroL,	0, 	temp_ds+(templra/2+LengthSize*hroL)*tan(ani)+temp_hr,unID, hr, 2 : unID=unID+1

						!!!POST BASE OVERHANG
						HOTSPOT LengthSize*hroL,0,LengthSize*hroL*tan(ani),unID,gs_PostBaseOverhang,1 : unID=unID+1
						HOTSPOT LengthSize*hroL,0,LengthSize*hroL*tan(ani)-gs_PostBaseOverhang,unID,gs_PostBaseOverhang,2 : unID=unID+1
						HOTSPOT LengthSize*hroL,0,LengthSize*hroL*tan(ani)+1,unID,gs_PostBaseOverhang,3 : unID=unID+1

						HOTSPOT lra-LengthSize*hroR,0,LengthSize*hroL*tan(ani)+templra*tan(ani),unID,gs_PostBaseOverhang,1 : unID=unID+1
						HOTSPOT lra-LengthSize*hroR,0,LengthSize*hroL*tan(ani)+templra*tan(ani)-gs_PostBaseOverhang,unID,gs_PostBaseOverhang,2 : unID=unID+1
						HOTSPOT lra-LengthSize*hroR,0,LengthSize*hroL*tan(ani)+templra*tan(ani)+1,unID,gs_PostBaseOverhang,3 : unID=unID+1

					ELSE
						!!! DISTANCE FROM FLOOR
						HOTSPOT templra/2+LengthSize*hroL,	0,	(templra/2+LengthSize*hroL)*tan(ani),	unID, dsPerp, 1+128, ds : unID=unID+1
						HOTSPOT templra/2+LengthSize*hroL,	0,	(templra/2+LengthSize*hroL)*tan(ani)-1,	unID, dsPerp, 3, ds : unID=unID+1
						HOTSPOT templra/2+LengthSize*hroL,	0, 	(templra/2+LengthSize*hroL)*tan(ani)+temp_ds,	unID, dsPerp, 2, ds : unID=unID+1

						!!! HEIGHT of RAILING
						HOTSPOT templra/2+LengthSize*hroL,	0,	temp_ds+(templra/2+LengthSize*hroL)*tan(ani),	unID, hrPerp, 1+128, hr : unID=unID+1
						HOTSPOT templra/2+LengthSize*hroL,	0,	temp_ds+(templra/2+LengthSize*hroL)*tan(ani)-1,	unID, hrPerp, 3, hr  : unID=unID+1
						HOTSPOT templra/2+LengthSize*hroL,	0, 	temp_ds+(templra/2+LengthSize*hroL)*tan(ani)+temp_hr,unID, hrPerp, 2, hr  : unID=unID+1

						!!!POST BASE OVERHANG
						HOTSPOT LengthSize*hroL,0,LengthSize*hroL*tan(ani),unID,gs_PostBaseOverhangPerp,1,gs_PostBaseOverhang : unID=unID+1
						HOTSPOT LengthSize*hroL,0,LengthSize*hroL*tan(ani)-temp_PostBaseOverhang,unID,gs_PostBaseOverhangPerp,2,gs_PostBaseOverhang : unID=unID+1
						HOTSPOT LengthSize*hroL,0,LengthSize*hroL*tan(ani)+1,unID,gs_PostBaseOverhangPerp,3,gs_PostBaseOverhang : unID=unID+1

						HOTSPOT lra-LengthSize*hroR,0,LengthSize*hroL*tan(ani)+templra*tan(ani),unID,gs_PostBaseOverhangPerp,1,gs_PostBaseOverhang : unID=unID+1
						HOTSPOT lra-LengthSize*hroR,0,LengthSize*hroL*tan(ani)+templra*tan(ani)-temp_PostBaseOverhang,unID,gs_PostBaseOverhangPerp,2,gs_PostBaseOverhang : unID=unID+1
						HOTSPOT lra-LengthSize*hroR,0,LengthSize*hroL*tan(ani)+templra*tan(ani)+1,unID,gs_PostBaseOverhangPerp,3,gs_PostBaseOverhang : unID=unID+1

					ENDIF


						!!!OVERHANG OF RAILING
						HOTSPOT 0,0,	temp_ds+temp_hr,				unID,hroLDiagonal,1+128,hroL : unID=unID+1
						HOTSPOT temphroL,0,	temp_ds+temp_hr+temphroL*tan(ani),	unID,hroLDiagonal,2	,hroL	: unID=unID+1
						HOTSPOT RefPoint1,0,temp_ds+temp_hr-InclRefPoint,		unID,hroLDiagonal,3	,hroL	: unID=unID+1

						HOTSPOT lra,0,		temp_ds+temp_hr+lra*tan(ani),				unID,hroRDiagonal,1+128,hroR : unID=unID+1
						HOTSPOT lra+temphroR,0,	temp_ds+temp_hr+lra*tan(ani)+temphroR*tan(ani),	unID,hroRDiagonal,2	,hroR	: unID=unID+1
						HOTSPOT lra+RefPoint2,0,	temp_ds+temp_hr+lra*tan(ani)+InclRefPoint,		unID,hroRDiagonal,3	,hroR	: unID=unID+1


			ELSE			!Perpendicular Orientation
							!Measurement is always perpendicular to inclination in this case

				ROTy -ani

						!!! LENGTH OF RAILING

							HOTSPOT 0,0,ds+hr,unID,lrah,1+256 : unID=unID+1
							HOTSPOT lrah,0,ds+hr,unID,lrah,2 	: unID=unID+1
							HOTSPOT -1,0,ds+hr,unID,lrah,3 	: unID=unID+1

						IF LengthSize = 0 THEN
							HOTSPOT 0,0,0,unID,lrah,1+256 : unID=unID+1
							HOTSPOT lrah,0,0,unID,lrah,2 	: unID=unID+1
							HOTSPOT -1,0,0,unID,lrah,3 	: unID=unID+1

							HOTSPOT 0,0,ds,unID,lrah,1+256 : unID=unID+1
							HOTSPOT lrah,0,ds,unID,lrah,2 	: unID=unID+1
							HOTSPOT -1,0,ds,unID,lrah,3 	: unID=unID+1
						ENDIF


						!!!DISTANCE FROM FLOOR
						HOTSPOT templrah/2+LengthSize*hroLDiagonal,0,0,unID,ds,1+128 : unID=unID+1
						HOTSPOT templrah/2+LengthSize*hroLDiagonal,0,ds,unID,ds,2 : unID=unID+1
						HOTSPOT templrah/2+LengthSize*hroLDiagonal,0,-1,unID,ds,3 : unID=unID+1

						!!! HEIGHT of RAILING
						HOTSPOT templrah/2+LengthSize*hroLDiagonal,0,ds,unID,hr,1 : unID=unID+1
						HOTSPOT templrah/2+LengthSize*hroLDiagonal,0,ds+hr,unID,hr,2 : unID=unID+1
						HOTSPOT templrah/2+LengthSize*hroLDiagonal,0,-1,unID,hr,3 : unID=unID+1

						!!!POST BASE OVERHANG
						HOTSPOT LengthSize*hroLDiagonal,0,0,unID,gs_PostBaseOverhang,1 : unID=unID+1
						HOTSPOT LengthSize*hroLDiagonal,0,-gs_PostBaseOverhang,unID,gs_PostBaseOverhang,2 : unID=unID+1
						HOTSPOT LengthSize*hroLDiagonal,0,1,unID,gs_PostBaseOverhang,3 : unID=unID+1

						HOTSPOT LengthSize*hroLDiagonal+templrah,0,0,unID,gs_PostBaseOverhang,1 : unID=unID+1
						HOTSPOT LengthSize*hroLDiagonal+templrah,0,-gs_PostBaseOverhang,unID,gs_PostBaseOverhang,2 : unID=unID+1
						HOTSPOT LengthSize*hroLDiagonal+templrah,0,1,unID,gs_PostBaseOverhang,3 : unID=unID+1


						!!!OVERHANG OF RAILING
						HOTSPOT lrah,0,ds+hr,unID,hroRDiagonal,1+128 , hroR : unID=unID+1
						HOTSPOT lrah+temphroRDiag,0,ds+hr,unID,hroRDiagonal,2 , hroR 	: unID=unID+1
						HOTSPOT lrah+RefPoint2,0,ds+hr,unID,hroRDiagonal,3 , hroR 	: unID=unID+1

						HOTSPOT 0,0,ds+hr,unID,hroLDiagonal,1+128 , hroL: unID=unID+1
						HOTSPOT temphroLDiag,0,ds+hr,unID,hroLDiagonal,2, hroL 	: unID=unID+1
						HOTSPOT RefPoint1,0,ds+hr,unID,hroLDiagonal,3, hroL 	: unID=unID+1

				DEL 1

			ENDIF

		ENDIF

!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** INCLINED AND CURVED *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!

		IF ABS(ani)>EPS and ptyp_m<>1 THEN

			!!!HOTSPOTS FOR GRAPHICAL EDITING

			IF ptyp_m=3 THEN
				!!!ROTATE
				HOTSPOT 0,rb,ds+lra*sin(ani),unID,ab,6 : unID=unID+1
				HOTSPOT 0,0,ds+lra*sin(ani),unID,ab,4+128 : unID=unID+1
				HOTSPOT rb*sin(ab),rb-rb*cos(ab),ds+lra*sin(ani),unID,ab,5 : unID=unID+1

				HOTSPOT 0,rb,ds+hr+lra*sin(ani),unID,ab,6 : unID=unID+1
				HOTSPOT 0,0,ds+hr+lra*sin(ani),unID,ab,4+128 : unID=unID+1
				HOTSPOT rb*sin(ab),rb-rb*cos(ab),ds+hr+lra*sin(ani),unID,ab,5 : unID=unID+1
			ENDIF

				!!!HEIGHT OF RAILING
				HOTSPOT 0,0,ds,unID,hr,1 : unID=unID+1
				HOTSPOT 0,0,ds+hr,unID,hr,2 : unID=unID+1
				HOTSPOT 0,0,-1,unID,hr,3 : unID=unID+1

				HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),ds+(lra/2)*sin(ani),unID,hr,1 : unID=unID+1
				HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),ds+hr+(lra/2)*sin(ani),unID,hr,2 : unID=unID+1
				HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),-1,unID,hr,3 : unID=unID+1

				!!!DISTANCE FROM FLOOR
				HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),(lra/2)*sin(ani),unID,ds,1 : unID=unID+1
				HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),ds+(lra/2)*sin(ani),unID,ds,2 : unID=unID+1
				HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),-1,unID,ds,3 : unID=unID+1

				HOTSPOT 0,0,0,unID,ds,1 : unID=unID+1
				HOTSPOT 0,0,ds,unID,ds,2 : unID=unID+1
				HOTSPOT 0,0,-1,unID,ds,3 : unID=unID+1

				!!!FIX HOTSPOT AT FLOOR
				HOTSPOT rb*sin(ab),rb-rb*cos(ab),0+lra*sin(ani), unID : unID=unID+1

			IF ptyp_m=2 THEN
				!!!HEIGHT OF RAILING
				HOTSPOT rb*sin(ab),rb-rb*cos(ab),ds+lra*sin(ani),unID,hr,1 : unID=unID+1
				HOTSPOT rb*sin(ab),rb-rb*cos(ab),ds+hr+lra*sin(ani),unID,hr,2 : unID=unID+1
				HOTSPOT rb*sin(ab),rb-rb*cos(ab),-1,unID,hr,3 : unID=unID+1

				!!!DISTANCE FROM FLOOR
				HOTSPOT rb*sin(ab),rb-rb*cos(ab),lra*sin(ani),unID,ds,1+128 : unID=unID+1
				HOTSPOT rb*sin(ab),rb-rb*cos(ab),ds+lra*sin(ani),unID,ds,2 : unID=unID+1
				HOTSPOT rb*sin(ab),rb-rb*cos(ab),-1,unID,ds,3 : unID=unID+1

				!!!POST BASE OVERHANG
				HOTSPOT 0,0,0,unID,gs_PostBaseOverhang,1+128 : unID=unID+1
				HOTSPOT 0,0,-gs_PostBaseOverhang,unID,gs_PostBaseOverhang,2 : unID=unID+1
				HOTSPOT 0,0,1,unID,gs_PostBaseOverhang,3 : unID=unID+1

				HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),(lra/2)*sin(ani),unID,gs_PostBaseOverhang,1+128 : unID=unID+1
				HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),(lra/2)*sin(ani)-gs_PostBaseOverhang,unID,gs_PostBaseOverhang,2 : unID=unID+1
				HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),(lra/2)*sin(ani)+1,unID,gs_PostBaseOverhang,3 : unID=unID+1

				HOTSPOT rb*sin(ab),rb-rb*cos(ab),lra*sin(ani),unID,gs_PostBaseOverhang,1+128 : unID=unID+1
				HOTSPOT rb*sin(ab),rb-rb*cos(ab),lra*sin(ani)-gs_PostBaseOverhang,unID,gs_PostBaseOverhang,2 : unID=unID+1
				HOTSPOT rb*sin(ab),rb-rb*cos(ab),lra*sin(ani)+1,unID,gs_PostBaseOverhang,3 : unID=unID+1

			ENDIF
		ENDIF

	ENDIF
end
