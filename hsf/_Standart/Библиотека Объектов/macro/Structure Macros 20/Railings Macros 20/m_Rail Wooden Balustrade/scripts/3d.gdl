
IF gs_detlevel_3D_m=0 THEN end

IF gs_shadow=0 THEN SHADOW OFF

templra = max(templra, EPS)
PEN gs_cont_pen
unID=1

IF hrt_m=1 THEN		!!! HANDRAIL WIDTH
!!	fth=0.05		!!!=Balusters Width
	HandrailWidth=hrw
ELSE
!!	fth=0.05
	HandrailWidth=hrd
ENDIF

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** SIMPLE 3D *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


!!!CALCULATION FOR CONNECTING ANGLE

XPosL0=(HandrailWidth/2)/tan(gs_AngleL)
XPosR0=(HandrailWidth/2)/tan(gs_AngleR)

XPosL=ABS((HandrailWidth/2)/tan(gs_AngleL))
XPosR=ABS((HandrailWidth/2)/tan(gs_AngleR))
YPosL=(XPosL*tan(ani))
YPosR=(XPosR*tan(ani))


IF gs_detlevel_3D_m=1 THEN		!!Simple

	MATERIAL pmat
	RESOL res


	!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** STRAIGHT *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

		IF ABS(ani)<EPS and ptyp_m=1 THEN		!!ptyp=Straight

			ADDx XStartPoslra
			ADDz ds
				PRISM_ 5,hr,
					XPosL0,fth/2,15,
					-XPosL0,-fth/2,15,
					templra+XPosR0,-fth/2,15,
					templra-XPosR0,fth/2,15,
					XPosL0,fth/2,-1
			DEL 2

		ENDIF

	!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** STRAIGHT CURVED *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

		IF ABS(ani)<EPS and ptyp_m<>1 THEN

		!!!!FRAME

			IF ab<360 THEN
					ADDz ds
					PRISM_ 10,hr,
						0,fth/2,15,
						0,-fth/2+0.00005,15,
						0,-fth/2,79,
						1,0,800,
						(rb+(fth/2))*sin(ab),rb-(rb+(fth/2))*cos(ab),1015,
						(rb-(fth/2)+0.00005)*sin(ab),rb-(rb-(fth/2)+0.00005)*cos(ab),15,
						(rb-(fth/2))*sin(ab),rb-(rb-(fth/2))*cos(ab),79,
						-cos(ab),-sin(ab),800,
						0,fth/2,1015,
						0,fth/2,-1
					DEL 1

			ELSE	!!!ANGLE=360

				ADDz ds
					PRISM_ 12,hr,
						0,-fth/2,79,
						1,0,800,
						0,2*rb+fth/2,1079,
						-1,0,800,
						0,-fth/2,1079,
						0,-fth/2,-1,

						0,fth/2,79,
						1,0,800,
						0,2*rb-fth/2,1079,
						-1,0,800,
						0,fth/2,1079,
						0,fth/2,-1
				DEL 1

			ENDIF
		ENDIF

	!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** STRAIGHT INCLINED *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

		IF ABS(ani)>EPS and ptyp_m=1 THEN			!!ptyp=Straight

			IF rom_m=1 THEN					!!Vertical Orientation

				ADD XStartPoslra,0,ZStartPoslra

					IF rmm_m=1 THEN			!!Vertical Measurement
						temp_ds=ds
						temp_hr=hr
					ELSE					!!Perpendicular Measurement
						temp_ds=dsPerp
						temp_hr=hrPerp
					ENDIF


					ROTz -90+gs_AngleL		!! CONNECTING ANGLE
					ROTy -90
						CUTPLANE
					DEL 2

					ADDx templra
					ROTz 90-gs_AngleR
					ROTy 90
						CUTPLANE
					DEL 3


						ROTx 90
						ADDz -fth/2

							PRISM_ 5,fth,
								-XPosL,temp_ds-YPosL,15,
								templra+XPosR,temp_ds+templra*tan(ani)+YPosR,15,
								templra+XPosR,temp_ds+temp_hr+templra*tan(ani)+YPosR,15,
								-XPosL,temp_ds+temp_hr-YPosL,15,
								-XPosL,temp_ds-YPosL,-1

						DEL 2

					CUTEND
					CUTEND
				DEL 1

			ELSE						!Perpendicular Orientation
										!Measurement is always perpendicular to inclination in this case

				ROTy -ani
				ADDx XStartPoslra

					ROTx 90
					ADDz -fth/2
						!!FRAME

						PRISM_ 5,fth,
						0,ds,15,
						templrah,ds,15,
						templrah,ds+hr,15,
						0,ds+hr,15,
						0,ds,-1
					DEL 2

				DEL 2

			ENDIF


		ENDIF


	!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** INCLINED AND CURVED *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!

		IF ABS(ani)>EPS and ptyp_m<>1 THEN

			!!!!FRAME

			alphai=-alphaincl
			deltazi=-deltazincl
			for i=1 to nalphaincl+3 step 1
			put rb*sin(alphai),rb-rb*cos(alphai),ds+deltazi
			alphai=alphai+alphaincl
			deltazi=deltazi+deltazincl
			NEXT i

			TUBEA 5,nalphaincl+3,1+2+16+32,
				-fth/2,0,0,
				fth/2,0,0,
				fth/2,hr,0,
				-fth/2,hr,0,
				-fth/2,0,-1,
				get (nsp)

		ENDIF


ENDIF		!!END of SIMPLE 3D!!



!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** DETAILED 3D *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


IF gs_detlevel_3D_m=2 THEN


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** STRAIGHT *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

	IF ABS(ani)<EPS and ptyp_m=1 THEN

	ADDX XStartPoslra

		!!3D FEEDBACK AT HOTSPOT EDITING
		IF GLOB_CONTEXT>20 and GLOB_CONTEXT<40 THEN

				ADDz ds
				MATERIAL fmat
				PRISM_ 5,hr,
					(fth/2)/tan(gs_AngleL),fth/2,15,
					-(fth/2)/tan(gs_AngleL),-fth/2,15,
					templra+(fth/2)/tan(gs_AngleR),-fth/2,15,
					templra-(fth/2)/tan(gs_AngleR),fth/2,15,
					(fth/2)/tan(gs_AngleL),fth/2,-1
				DEL 1

		ELSE



		RESOL rescs
		!! *** HANDRAIL *** !! *****************************************************


		MATERIAL fmat

		ADDx -(hroL)
		ROTz -90+gs_AngleL		!! CONNECTING ANGLE
		ROTy -90
			CUTPLANE
		DEL 3

		ADDx templra+(hroR)
		ROTz 90-gs_AngleR
		ROTy 90
			CUTPLANE
		DEL 3


		RESOL rescs

				MATERIAL fmat

				GROUP "handrail round straight"			!Groups
					ADD  -hroL-XPosL,0,ds+hr-hrd/2
					ROTy 90
					CYLIND templra+(hroL)+XPosL+(hroR)+XPosR,hrd/2
					DEL 2
				ENDGROUP


				IF hrt_m=1 THEN

					ADDz ds+hr-hrh
						PRISM_ 5,hrh,
							-(hroL)-XPosL,hrw/2,15,
							-(hroL)-XPosL,-hrw/2,15,
							templra+(hroR)+XPosR,-hrw/2,15,
							templra+(hroR)+XPosR,hrw/2,15,
							-(hroL)-XPosL,hrw/2,-1
					DEL 1

					ELSE
					PLACEGROUP "handrail round straight"
				ENDIF

		CUTEND
		CUTEND


		!! *** BALUSTERS *** !! *****************************************************

		MATERIAL pmat

		ADDx -(hroL)
		ROTz -90+gs_AngleL		!! CONNECTING ANGLE
		ROTy -90
			CUTPLANE
		DEL 3

		ADDx templra+(hroR)
		ROTz 90-gs_AngleR
		ROTy 90
			CUTPLANE
		DEL 3

				MATERIAL pmat

				IF hrt_m=1 THEN			!Post height calculation
					ph=hr+ds-hrh
					ELSE
					ph=hr+ds-hrd/2
				ENDIF

				GROUP "post round straight"			!Groups
					for i=1 to np step 1
					GOSUB 1000
					ADDx distpost
					NEXT i
					DEL np
				ENDGROUP

				IF hrt_m=1 THEN
					PLACEGROUP "post round straight"
					ELSE
					PLACEGROUP "post round straight"
				ENDIF

				KILLGROUP "handrail round straight"
				KILLGROUP "post round straight"

		CUTEND
		CUTEND

		ENDIF

	DEL 1
	ENDIF




!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** STRAIGHT CURVED *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

	IF ABS(ani)<EPS and ptyp_m<>1 THEN

		!!3D FEEDBACK AT HOTSPOT EDITING
		IF GLOB_CONTEXT>20 and GLOB_CONTEXT<40 THEN

			!!!!FRAME
			MATERIAL fmat

				IF ab<360 THEN
						ADDz ds
						PRISM_ 10,hr,
							0,fth/2,15,
							0,-fth/2+0.00005,15,
							0,-fth/2,79,
							1,0,800,
							(rb+(fth/2))*sin(ab),rb-(rb+(fth/2))*cos(ab),1015,
							(rb-(fth/2)+0.00005)*sin(ab),rb-(rb-(fth/2)+0.00005)*cos(ab),15,
							(rb-(fth/2))*sin(ab),rb-(rb-(fth/2))*cos(ab),79,
							-cos(ab),-sin(ab),800,
							0,fth/2,1015,
							0,fth/2,-1
						DEL 1

				ELSE	!!!ANGLE=360

					ADDz ds
						PRISM_ 12,hr,
							0,-fth/2,79,
							1,0,800,
							0,2*rb+fth/2,1079,
							-1,0,800,
							0,-fth/2,1079,
							0,-fth/2,-1,

							0,fth/2,79,
							1,0,800,
							0,2*rb-fth/2,1079,
							-1,0,800,
							0,fth/2,1079,
							0,fth/2,-1
					DEL 1

				ENDIF

		ELSE


			!! *** HANDRAIL *** !! *****************************************************

			MATERIAL fmat
			RESOL res

			if (ab + alphahroL + alphahroR) < 360 then

				group "handrail round curved"				!Groups
					gamma0 = 360 / rescs
					gamma = 0
					for i = 1 to rescs step 1
						put hrd/2 * cos(gamma), rb + hrd/2 * sin(gamma), 1
						gamma = gamma + gamma0
					next i
					add  0, rb, ds + hr - hrd/2
					roty 90
					rotx 180 - ab - alphahroR
						revolve rescs+1, ab + alphahroL + alphahroR, 1+2+4+8+16+32,
							get (nsp),
							hrd/2, rb, -1
					del 3
				endgroup
				handrailgroupname = "handrail round curved"

				if hrt_m=1 then
					addz ds + hr - hrh
						prism_ 9, hrh,
							(rb - (hrw/2)) * sin(-alphahroL), rb - (rb - (hrw/2)) * cos(alphahroL), 15,
							(rb + (hrw/2) - 0.00005) * sin(-alphahroL), rb - (rb + (hrw/2) - 0.000005) * cos(alphahroL), 15,
							(rb + (hrw/2)) * sin(-alphahroL), rb - (rb + (hrw/2)) * cos(alphahroL), 79,
							cos(alphahroL), sin(-alphahroL), 800,
							(rb + (hrw/2)) * sin(ab + alphahroR), rb - (rb + (hrw/2)) * cos(ab + alphahroR), 1015,
							(rb - (hrw/2) + 0.00005) * sin(ab + alphahroR), rb - (rb - (hrw/2) + 0.00005) * cos(ab + alphahroR), 15,
							(rb - (hrw/2)) * sin(ab + alphahroR), rb - (rb - (hrw/2)) * cos(ab + alphahroR), 79,
							-cos(ab + alphahroR), -sin(ab + alphahroR), 800,
							(rb - (hrw/2)) * sin(-alphahroL), rb - (rb - (hrw/2)) * cos(alphahroL), 1015
					del 1
				else
					placegroup "handrail round curved"
				endif

			else

				group "handrail round curved 360"
					gamma0 = 360 / rescs
					gamma = 0
					for i = 1 to rescs step 1
						put hrd/2 * cos(gamma), rb + hrd/2 * sin(gamma), 1
						gamma = gamma + gamma0
					next i
					add 0, rb, ds + hr - hrd/2
					roty 90
					rotx 180 - ab
						revolve rescs+1, 360, 0,
							get (nsp),
							hrd/2, rb, -1
					del 3
				endgroup
				handrailgroupname = "handrail round curved 360"


				if hrt_m = 1 then
					addz ds+hr-hrh
						prism_ 12, hrh,
							0, -hrw/2, 79,
							1, 0, 800,
							0, 2*rb + hrw/2, 1079,
							-1, 0, 800,
							0, -hrw/2, 1079,
							0, -hrw/2, -1,

							0, hrw/2, 79,
							1, 0, 800,
							0, 2*rb - hrw/2, 1079,
							-1, 0, 800,
							0, hrw/2, 1079,
							0, hrw/2, -1
						del 1
				else
					placegroup "handrail round curved 360"
				endif

			endif

			!!other parts are shorter, circularity checked differently
			if ab < 360 then

					!!! *** Posts *** !!!

					MATERIAL pmat

					IF hrt_m=1 THEN			!Post height calculation
					ph=hr+ds-hrh
					ELSE
						IF pt_m=1 THEN
						ph=hr+ds-hrd
						ELSE
						ph=hr+ds-hrd/2
						ENDIF
					ENDIF

					GROUP "post round curved"			!Groups
						for i=1 to np step 1
						GOSUB 1000
						addy rb
						rotz anglepost
						addy -rb
						NEXT i
						DEL 3*np
					ENDGROUP

					IF hrt_m=1 THEN
					PLACEGROUP "post round curved"
					ELSE
					PLACEGROUP "post round curved"
					ENDIF

					KILLGROUP "post round curved"


			ELSE

					!!! *** Posts *** !!!

					MATERIAL pmat

					IF hrt_m=1 THEN			!Post height calculation
					ph=hr+ds-hrh
					ELSE
						IF pt_m=1 THEN
						ph=hr+ds-hrd
						ELSE
						ph=hr+ds-hrd/2
						ENDIF
					ENDIF

					GROUP "post round curved 360"			!Groups
						for i=1 to np step 1
						GOSUB 1000
						addy rb
						rotz anglepost
						addy -rb
						NEXT i
						DEL 3*np
					ENDGROUP


					IF hrt_m=1 THEN
						PLACEGROUP "post round curved 360"
						ELSE
						PLACEGROUP "post round curved 360"
						ENDIF

						KILLGROUP "post round curved 360"

					ENDIF

			ENDIF
			KILLGROUP handrailgroupname		!!group wasn't used

	ENDIF



!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** STRAIGHT INCLINED *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

IF ABS(ani)>EPS and ptyp_m=1 THEN

	RESOL rescs

		IF rom_m=1 THEN									!Vertical Orientation

			IF rmm_m=2 THEN		!Perpendicular Measurement Extra Values
				hrh=hrh/cos(ani)
				hrd=hrd/cos(ani)
			ENDIF


			IF rmm_m=1 THEN			!!Vertical Measurement
				temp_ds=ds
				temp_hr=hr
			ELSE					!!Perpendicular Measurement
				temp_ds=dsPerp
				temp_hr=hrPerp
			ENDIF


			!!3D FEEDBACK AT HOTSPOT EDITING
			IF GLOB_CONTEXT>20 and GLOB_CONTEXT<40 THEN

				ADD XStartPoslra,0,ZStartPoslra

					MATERIAL fmat

					ROTz -90+gs_AngleL		!!! CONNECTING ANGLE
					ROTy -90
						CUTPLANE
					DEL 2

					ADDx templra
					ROTz 90-gs_AngleR
					ROTy 90
						CUTPLANE
					DEL 3

							ROTx 90
							ADDz -fth/2

								MATERIAL fmat
								PRISM_ 5,fth,
									-XPosL,temp_ds-YPosL,15,
									templra+XPosR,temp_ds+templra*tan(ani)+YPosR,15,
									templra+XPosR,temp_ds+temp_hr+templra*tan(ani)+YPosR,15,
									-XPosL,temp_ds+temp_hr-YPosL,15,
									-XPosL,temp_ds-YPosL,-1
							DEL 2

					CUTEND
					CUTEND

				DEL 1

			ELSE

				ADD XStartPoslra,0,ZStartPoslra

				!! *** HANDRAIL *** !! *****************************************************

				MATERIAL fmat

				ADDx -(hroL)-LengthSize*dpost
				ROTz -90+gs_AngleL		!! CONNECTING ANGLE
				ROTy -90
					CUTPLANE
				DEL 3

				ADDx templra+(hroR)+LengthSize*dpost
				ROTz 90-gs_AngleR
				ROTy 90
					CUTPLANE
				DEL 3

						GROUP "handrail round straight inclined"
							ADD -(hroL)-XPosL,0,temp_ds+temp_hr-hrd/2-(hroL)*tan(ani)-YPosL
							ROTy 90-ani
							CONE (templra+hroL+hroR)/cos(ani)+XPosL+XPosR,hrd/2,hrd/2,90+ani,90+ani
							DEL 1
						ENDGROUP

						IF hrt_m=1 THEN
							ROTx 90
							ADDz -hrw/2
								PRISM_ 5,hrw,
								-(hroL)-XPosL,temp_ds+temp_hr-hrh-(hroL)*tan(ani)-YPosL,15,
								templra+(hroR)+XPosR,temp_ds+temp_hr-hrh+(templra+(hroR))*tan(ani)+YPosR,15,
								templra+(hroR)+XPosR,temp_ds+temp_hr+(templra+(hroR))*tan(ani)+YPosR,15,
								-(hroL)-XPosL,temp_ds+temp_hr-(hroL)*tan(ani)-YPosL,15,
								-(hroL)-XPosL,temp_ds+temp_hr-hrh-(hroL)*tan(ani)-YPosL,-1
							DEL 2
						ELSE
						PLACEGROUP "handrail round straight inclined"
						ENDIF

				CUTEND
				CUTEND


				!!! *** BALUSTERS *** !!! **********************************************

				MATERIAL pmat

				ADDx -(hroL)-LengthSize*dpost
				ROTz -90+gs_AngleL		!! CONNECTING ANGLE
				ROTy -90
					CUTPLANE
				DEL 3

				ADDx templra+(hroR)+LengthSize*dpost
				ROTz 90-gs_AngleR
				ROTy 90
					CUTPLANE
				DEL 3

						MATERIAL pmat

						IF hrt_m=1 THEN			!Post height calculation
						ph=temp_hr+temp_ds-hrh
						ELSE
							IF pt_m=1 THEN
							ph=temp_hr+temp_ds-hrd
							ELSE
							ph=temp_hr+ds-hrd/2
							ENDIF
						ENDIF

						GROUP "post round straight inclined"			!Groups
						for i=1 to np step 1
						GOSUB 1000
						ADD distpost,0,distpost*tan(ani)
						NEXT i
						DEL np
						ENDGROUP


						IF hrt_m=1 THEN
						PLACEGROUP "post round straight inclined"
						ELSE
						PLACEGROUP "post round straight inclined"
						ENDIF

				CUTEND
				CUTEND

				KILLGROUP "handrail round straight inclined"
				KILLGROUP "post round straight inclined"

			DEL 1
		ENDIF

	ELSE						!Perpendicular Orientation
							!Measurement is always perpendicular to inclination in this case

		ROTy -ani
		ADDX XStartPoslrah

			!!3D FEEDBACK AT HOTSPOT EDITING
			IF GLOB_CONTEXT>20 and GLOB_CONTEXT<40 THEN

				ROTx 90
				ADDz -fth/2
					!!FRAME
					MATERIAL fmat
					PRISM_ 5,fth,
						0,ds,15,
						templrah,ds,15,
						templrah,ds+hr,15,
						0,ds+hr,15,
						0,ds,-1
				DEL 2


			ELSE		!! 3D DETAILED MODEL

					!!! Handrail
					MATERIAL fmat

					GROUP "handrail round straight perp"			!Groups
					ADD  -hroLDiagonal,0,ds+hr-hrd/2
					ROTy 90
					CYLIND templrah+hroLDiagonal+hroRDiagonal,hrd/2
					DEL 2
					ENDGROUP


					IF hrt_m=1 THEN
						ROTx 90
						ADDz -hrw/2
							PRISM_ 5,hrw,
								-hroLDiagonal,ds+hr-hrh,15,
								templrah+hroRDiagonal,ds+hr-hrh,15,
								templrah+hroRDiagonal,ds+hr,15,
								-hroLDiagonal,ds+hr,15,
								-hroLDiagonal,ds+hr-hrh,-1
						DEL 2
					ELSE
						PLACEGROUP "handrail round straight perp"
					ENDIF



				!Post
				MATERIAL pmat

				IF hrt_m=1 THEN			!Post height calculation
				ph=hr+ds-hrh
				ELSE
					IF pt_m=1 THEN
					ph=hr+ds-hrd
					ELSE
					ph=hr+ds-hrd/2
					ENDIF
				ENDIF

				GROUP "post round straight perp"			!Groups
				for i=1 to np step 1
				GOSUB 1000
				ADDx distpost
				NEXT i
				DEL np
				ENDGROUP


				IF hrt_m=1 THEN
				PLACEGROUP "post round straight perp"
				ELSE
				PLACEGROUP "post round straight perp"
				ENDIF


				KILLGROUP "handrail round straight perp"
				KILLGROUP "post round straight perp"


			ENDIF
		DEL 1		!! END OF DRAG
		DEL 1		!! END OF ROTATION
	ENDIF

ENDIF



!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** INCLINED AND CURVED *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!

	IF ABS(ani)>EPS and ptyp_m<>1 THEN

			RESOL rescs

			!handrail

			MATERIAL fmat


			!!3D FEEDBACK AT HOTSPOT EDITING
			IF GLOB_CONTEXT>20 and GLOB_CONTEXT<40 THEN

				!!!!FRAME
				MATERIAL fmat

				alphai=-alphaincl
				deltazi=-deltazincl
				for i=1 to nalphaincl+3 step 1
				put rb*sin(alphai),rb-rb*cos(alphai),ds+deltazi
				alphai=alphai+alphaincl
				deltazi=deltazi+deltazincl
				NEXT i

				TUBEA 5,nalphaincl+3,1+2+16+32,
					-fth/2,0,0,
					fth/2,0,0,
					fth/2,hr,0,
					-fth/2,hr,0,
					-fth/2,0,-1,
					get (nsp)

			ELSE

				RestAngleL=alphahroL-nalphahroL*alphaincl		!!Rest Angle= Overhang Angle- Segments Points Angle
				LOHkerul=(rb*pi*alphahroL)/180					!!Perimeter of Handrail
				deltazLOH=LOHkerul*sin(ani)						!!vertical distance of Handrail
				deltara=deltazLOH-(deltazincl*nalphahroL)		!!vertical step of Rest Angle

				RestAngleR=alphahroR-nalphahroR*alphaincl
				ROHkerul=(rb*pi*alphahroR)/180
				deltazROH=ROHkerul*sin(ani)
				deltaraR=deltazROH-(deltazincl*nalphahroR)


				alphai=-(nalphahroL+1)*alphaincl
				deltazi=-(nalphahroL+1)*deltazincl

				if ABS(hroR)<EPS THEN
				tempStep=1
				ELSE
				tempStep=0
				ENDIF

					PUT rb*sin(-alphahroL-restangleL),rb-rb*cos(-alphahroL-restangleL),ds-deltazLOH-deltara
					PUT rb*sin(-alphahroL),rb-rb*cos(-alphahroL),ds-deltazLOH
					PUT rb*sin(-alphahroL+restangleL),rb-rb*cos(-alphahroL+restangleL),ds-deltazLOH+deltara

				if abs(nalphahroL)>EPS then		!! Left Handrail
				FOR i=1 to nalphahroL step 1
					PUT rb*sin(-alphahroL+restangleL+i*alphaincl),rb-rb*cos(-alphahroL+restangleL+i*alphaincl),ds-deltazLOH+deltara+i*deltazincl
				Next i
				endif

				FOR i=0 to nalphaincl+tempStep step 1		!! Handrail between Posts
					PUT rb*sin(i*alphaincl),rb-rb*cos(i*alphaincl),ds+i*deltazincl
				NEXT i

			IF ABS(hroR)>EPS THEN				!! Right Handrail

				if abs(nalphahroR)>EPS then
				FOR i=1 to nalphahroR step 1
					PUT rb*sin((nalphaincl+i)*alphaincl),rb-rb*cos((nalphaincl+i)*alphaincl),ds+(nalphaincl+i)*deltazincl
				Next i
				endif

					PUT rb*sin((nalphaincl+nalphahroR)*alphaincl+restangleR),rb-rb*cos((nalphaincl+nalphahroR)*alphaincl+restangleR),ds+(nalphaincl+nalphahroR)*deltazincl+deltaraR
					PUT rb*sin((nalphaincl+nalphahroR)*alphaincl+2*restangleR),rb-rb*cos((nalphaincl+nalphahroR)*alphaincl+2*restangleR),ds+(nalphaincl+nalphahroR)*deltazincl+2*deltaraR
			ENDIF


				GROUP "handrail round inclined curved"
					ADDz hr-hrd/2
					tubea 6,nsp/3,1+2+16+32,
						-hrd/2,0,1,
						 0,-1,801,
						 hrd/2,0,1001,
						 0,1,801,
						-hrd/2,0,1001,
						-hrd/2,0,-1,
						use (nsp)
					DEL 1
				ENDGROUP

				GROUP "handrail rect inclined curved"
					ADDz hr-hrh
					tubea 5,nsp/3,1+2+16+32,
						-hrw/2,0,0,
						 hrw/2,0,0,
						 hrw/2,hrh,0,
						-hrw/2,hrh,0,
						-hrw/2,0,-1,
						get (nsp)
					DEL 1
				ENDGROUP

				IF hrt_m=1 THEN
				PLACEGROUP "handrail rect inclined curved"
				ELSE
				PLACEGROUP "handrail round inclined curved"
				ENDIF


				!Posts

				MATERIAL pmat

				IF hrt_m=1 THEN			!Post height calculation
				ph=hr+ds-hrh/2
				ELSE
					IF pt_m=1 THEN
					ph=hr+ds-hrd/2
					ELSE
					ph=hr+ds-hrd/2
					ENDIF
				ENDIF

				GROUP "post round inclined curved"			!Groups
					for i=1 to np step 1
					GOSUB 1000
					addy rb
					rotz anglepost
					addy -rb
					ADDz deltazpost
					NEXT i
					DEL 4*np
				ENDGROUP


				IF hrt_m=1 THEN
					PLACEGROUP "post round inclined curved"
					ELSE
					PLACEGROUP "post round inclined curved"
					ENDIF

					KILLGROUP "handrail round inclined curved"
					KILLGROUP "handrail rect inclined curved"
					KILLGROUP "post round inclined curved"

				ENDIF
		ENDIF
	ENDIF


!!DETAILED 3D END!!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! ** HOTSPOTS ** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

	IF LengthSize = 0 THEN			!!!OVERHANG OF HANDRAIL
		temphroL = -hroL
		temphroR = hroR
		RefPoint1 = 1
		RefPoint2 = -1

		InclRefPoint = -tan(ani)

		temphroLDiag = -hroLDiagonal
		temphroRDiag = hroRDiagonal
	ELSE
		temphroL = hroL
		temphroR = -hroR
		RefPoint1 = -1
		RefPoint2 = 1

		InclRefPoint = tan(ani)

		temphroLDiag = hroLDiagonal
		temphroRDiag = -hroRDiagonal
	ENDIF

	!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** STRAIGHT *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

	IF cfs=0 THEN
		IF ABS(ani)<EPS and ptyp_m=1 THEN

				!!!LENGHT
				HOTSPOT 0,0,ds+hr,unID,lra,1+256 : unID=unID+1
				HOTSPOT lra,0,ds+hr,unID,lra,2 : unID=unID+1
				HOTSPOT -1,0,ds+hr,unID,lra,3 : unID=unID+1

				IF LengthSize = 0 THEN
					HOTSPOT 0,0,0,unID,lra,1+256 : unID=unID+1
					HOTSPOT lra,0,0,unID,lra,2 : unID=unID+1
					HOTSPOT -1,0,0,unID,lra,3 : unID=unID+1

					HOTSPOT 0,0,ds,unID,lra,1+256 : unID=unID+1
					HOTSPOT lra,0,ds,unID,lra,2 : unID=unID+1
					HOTSPOT -1,0,ds,unID,lra,3 : unID=unID+1
				ENDIF

				!!!DISTANCE FROM FLOOR
				HOTSPOT templra/2+LengthSize*hroL,0,0,unID,ds,1+128 : unID=unID+1
				HOTSPOT templra/2+LengthSize*hroL,0,ds,unID,ds,2 : unID=unID+1
				HOTSPOT templra/2+LengthSize*hroL,0,-1,unID,ds,3 : unID=unID+1

				!!!HEIGHT OF RAILING
				HOTSPOT templra/2+LengthSize*hroL,0,ds,unID,hr,1 : unID=unID+1
				HOTSPOT templra/2+LengthSize*hroL,0,ds+hr,unID,hr,2 : unID=unID+1
				HOTSPOT templra/2+LengthSize*hroL,0,-1,unID,hr,3 : unID=unID+1


				!OVERHANG OF RAILING
				HOTSPOT 0,0,ds+hr,unID,hroL,1+128 : unID=unID+1
				HOTSPOT temphroL,0,ds+hr,unID,hroL,2 : unID=unID+1
				HOTSPOT RefPoint1,0,ds+hr,unID,hroL,3 : unID=unID+1

				HOTSPOT lra,0,ds+hr,unID,hroR,1+128 : unID=unID+1
				HOTSPOT lra+temphroR,0,ds+hr,unID,hroR,2 : unID=unID+1
				HOTSPOT lra+RefPoint2,0,ds+hr,unID,hroR,3 : unID=unID+1


				IF LengthSize = 1 THEN		! detailed
					! overhang of railing
					HOTSPOT 0,        0, 0, unID, hroL, 1+128 : unID=unID+1
					HOTSPOT temphroL, 0, 0, unID, hroL, 2     : unID=unID+1
					HOTSPOT RefPoint1,0, 0, unID, hroL, 3     : unID=unID+1

					HOTSPOT lra,          0, 0, unID, hroR,1+128 : unID=unID+1
					HOTSPOT lra+temphroR, 0, 0, unID, hroR,2     : unID=unID+1
					HOTSPOT lra+RefPoint2,0, 0, unID, hroR,3     : unID=unID+1
				ENDIF

		ENDIF

	!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** STRAIGHT CURVED *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

		IF ABS(ani)<EPS and ptyp_m<>1 THEN
			IF ab<360 THEN

					IF ptyp_m=3 THEN
					!!!ROTATE
						HOTSPOT 0,rb,ds,unID,ab,6 : unID=unID+1
						HOTSPOT 0,0,ds,unID,ab,4+256 : unID=unID+1
						HOTSPOT rb*sin(ab),rb-rb*cos(ab),ds,unID,ab,5 : unID=unID+1

						HOTSPOT 0,rb,ds+hr,unID,ab,6 : unID=unID+1
						HOTSPOT 0,0,ds+hr,unID,ab,4+256 : unID=unID+1
						HOTSPOT rb*sin(ab),rb-rb*cos(ab),ds+hr,unID,ab,5 : unID=unID+1

					!!!FIX HOTSPOT AT FLOOR
						HOTSPOT 0,0,0,unID : unID=unID+1
						HOTSPOT rb*sin(ab),rb-rb*cos(ab),0,unID : unID=unID+1
					ENDIF

					!!!HEIGHT OF RAILING
						HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),ds,unID,hr,1+128 : unID=unID+1
						HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),ds+hr,unID,hr,2 : unID=unID+1
						HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),-1,unID,ds,3 : unID=unID+1

					!!! DISTANCE FROM FLOOR
						HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),0,unID,ds,1 : unID=unID+1
						HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),ds,unID,ds,2 : unID=unID+1
						HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),-1,unID,ds,3 : unID=unID+1

					IF ptyp_m=2 THEN

					!!!HEIGHT OF RAILING
						HOTSPOT 0,0,ds,unID,hr,1+128 : unID=unID+1
						HOTSPOT 0,0,ds+hr,unID,hr,2 : unID=unID+1
						HOTSPOT 0,0,-1,unID,hr,3 : unID=unID+1

						HOTSPOT rb*sin(ab),rb-rb*cos(ab),ds,unID,hr,1+128 : unID=unID+1
						HOTSPOT rb*sin(ab),rb-rb*cos(ab),ds+hr,unID,hr,2 : unID=unID+1
						HOTSPOT rb*sin(ab),rb-rb*cos(ab),-1,unID,hr,3 : unID=unID+1

					!!! DISTANCE FROM FLOOR
						HOTSPOT 0,0,0,unID,ds,1 : unID=unID+1
						HOTSPOT 0,0,ds,unID,ds,2 : unID=unID+1
						HOTSPOT 0,0,-1,unID,ds,3 : unID=unID+1

						HOTSPOT rb*sin(ab),rb-rb*cos(ab),0,unID,ds,1 : unID=unID+1
						HOTSPOT rb*sin(ab),rb-rb*cos(ab),ds,unID,ds,2 : unID=unID+1
						HOTSPOT rb*sin(ab),rb-rb*cos(ab),-1,unID,ds,3 : unID=unID+1
					ENDIF


			ELSE	!!!ANGLE=360


				!!!HOTSPOTS FOR GRAPHICAL EDITING
				!!!HEIGHT

					HOTSPOT 0,0,ds,unID,hr,1 : unID=unID+1
					HOTSPOT 0,0,ds+hr,unID,hr,2 : unID=unID+1
					HOTSPOT 0,0,-1,unID,hr,3 : unID=unID+1

					HOTSPOT rb,rb,ds,unID,hr,1 : unID=unID+1
					HOTSPOT rb,rb,ds+hr,unID,hr,2 : unID=unID+1
					HOTSPOT rb,rb,-1,unID,hr,3 : unID=unID+1

					HOTSPOT 0,2*rb,ds,unID,hr,1 : unID=unID+1
					HOTSPOT 0,2*rb,ds+hr,unID,hr,2 : unID=unID+1
					HOTSPOT 0,2*rb,-1,unID,hr,3 : unID=unID+1

					HOTSPOT -rb,rb,ds,unID,hr,1 : unID=unID+1
					HOTSPOT -rb,rb,ds+hr,unID,hr,2 : unID=unID+1
					HOTSPOT -rb,rb,-1,unID,hr,3 : unID=unID+1

					HOTSPOT 0,0,0,unID,ds,1 : unID=unID+1
					HOTSPOT 0,0,ds,unID,ds,2 : unID=unID+1
					HOTSPOT 0,0,-1,unID,ds,3 : unID=unID+1

					HOTSPOT rb,rb,0,unID,ds,1 : unID=unID+1
					HOTSPOT rb,rb,ds,unID,ds,2 : unID=unID+1
					HOTSPOT rb,rb,-1,unID,ds,3 : unID=unID+1

					HOTSPOT 0,2*rb,0,unID,ds,1 : unID=unID+1
					HOTSPOT 0,2*rb,ds,unID,ds,2 : unID=unID+1
					HOTSPOT 0,2*rb,-1,unID,ds,3 : unID=unID+1

					HOTSPOT -rb,rb,0,unID,ds,1 : unID=unID+1
					HOTSPOT -rb,rb,ds,unID,ds,2 : unID=unID+1
					HOTSPOT -rb,rb,-1,unID,ds,3 : unID=unID+1

			ENDIF
		ENDIF

	!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** STRAIGHT INCLINED *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

		IF ABS(ani)>EPS and ptyp_m=1 THEN			!!ptyp=Straight
			IF rom_m=1 THEN					!!Vertical Orientation

					IF rmm_m=2 THEN			!!Perpendicular Measurement
						ftw=ftw/cos(ani)
						fbw=fbw/cos(ani)
					ENDIF

					IF rmm_m=1 THEN			!!Vertical Measurement
						temp_ds=ds
						temp_hr=hr
					ELSE					!!Perpendicular Measurement
						temp_ds=dsPerp
						temp_hr=hrPerp
					ENDIF


					!!!	HOTSPOTS FOR GRAPHICAL EDITING
					!!! LENGTH OF RAILING

						HOTSPOT 0,	0,	temp_ds+temp_hr,				unID, lrah, 1+256 : unID=unID+1
						HOTSPOT -1, 0,	temp_ds+temp_hr-tan(ani),		unID, lrah, 3 : unID=unID+1
						HOTSPOT lra,0, 	temp_ds+temp_hr+lra*tan(ani),	unID, lrah, 2 : unID=unID+1

					IF LengthSize = 0 THEN
						HOTSPOT 0,	0,	0,				unID, lrah, 1+256 : unID=unID+1
						HOTSPOT -1, 0,	0-tan(ani),		unID, lrah, 3 : unID=unID+1
						HOTSPOT lra,0, 	0+lra*tan(ani),	unID, lrah, 2 : unID=unID+1

						HOTSPOT 0,	0,	temp_ds,				unID, lrah, 1+256 : unID=unID+1
						HOTSPOT -1, 0,	temp_ds-tan(ani),		unID, lrah, 3 : unID=unID+1
						HOTSPOT lra,0, 	temp_ds+lra*tan(ani),	unID, lrah, 2 : unID=unID+1
					ENDIF

					IF rmm_m=1 THEN
						!!! DISTANCE FROM FLOOR
						HOTSPOT templra/2+LengthSize*hroL,	0,	(templra/2+LengthSize*hroL)*tan(ani),	unID, ds, 1+128 : unID=unID+1
						HOTSPOT templra/2+LengthSize*hroL,	0,	(templra/2+LengthSize*hroL)*tan(ani)-1,	unID, ds, 3 : unID=unID+1
						HOTSPOT templra/2+LengthSize*hroL,	0, 	(templra/2+LengthSize*hroL)*tan(ani)+temp_ds,	unID, ds, 2 : unID=unID+1

						!!! HEIGHT of RAILING
						HOTSPOT templra/2+LengthSize*hroL,	0,	temp_ds+(templra/2+LengthSize*hroL)*tan(ani),	unID, hr, 1+128 : unID=unID+1
						HOTSPOT templra/2+LengthSize*hroL,	0,	temp_ds+(templra/2+LengthSize*hroL)*tan(ani)-1,	unID, hr, 3 : unID=unID+1
						HOTSPOT templra/2+LengthSize*hroL,	0, 	temp_ds+(templra/2+LengthSize*hroL)*tan(ani)+temp_hr,unID, hr, 2 : unID=unID+1

					ELSE
						!!! DISTANCE FROM FLOOR
						HOTSPOT templra/2+LengthSize*hroL,	0,	(templra/2+LengthSize*hroL)*tan(ani),	unID, dsPerp, 1+128, ds : unID=unID+1
						HOTSPOT templra/2+LengthSize*hroL,	0,	(templra/2+LengthSize*hroL)*tan(ani)-1,	unID, dsPerp, 3, ds : unID=unID+1
						HOTSPOT templra/2+LengthSize*hroL,	0, 	(templra/2+LengthSize*hroL)*tan(ani)+temp_ds,	unID, dsPerp, 2, ds : unID=unID+1

						!!! HEIGHT of RAILING
						HOTSPOT templra/2+LengthSize*hroL,	0,	temp_ds+(templra/2+LengthSize*hroL)*tan(ani),	unID, hrPerp, 1+128, hr : unID=unID+1
						HOTSPOT templra/2+LengthSize*hroL,	0,	temp_ds+(templra/2+LengthSize*hroL)*tan(ani)-1,	unID, hrPerp, 3, hr  : unID=unID+1
						HOTSPOT templra/2+LengthSize*hroL,	0, 	temp_ds+(templra/2+LengthSize*hroL)*tan(ani)+temp_hr,unID, hrPerp, 2, hr  : unID=unID+1

					ENDIF

					!!!OVERHANG OF RAILING
						HOTSPOT 0,0,	temp_ds+temp_hr,				unID,hroLDiagonal,1+128,hroL : unID=unID+1
						HOTSPOT temphroL,0,	temp_ds+temp_hr+temphroL*tan(ani),	unID,hroLDiagonal,2	,hroL	: unID=unID+1
						HOTSPOT RefPoint1,0,temp_ds+temp_hr-InclRefPoint,		unID,hroLDiagonal,3	,hroL	: unID=unID+1

						HOTSPOT lra,0,		temp_ds+temp_hr+lra*tan(ani),				unID,hroRDiagonal,1+128,hroR : unID=unID+1
						HOTSPOT lra+temphroR,0,	temp_ds+temp_hr+lra*tan(ani)+temphroR*tan(ani),	unID,hroRDiagonal,2	,hroR	: unID=unID+1
						HOTSPOT lra+RefPoint2,0,	temp_ds+temp_hr+lra*tan(ani)+InclRefPoint,		unID,hroRDiagonal,3	,hroR	: unID=unID+1

					IF LengthSize = 1 THEN
					!!!OVERHANG OF RAILING
						HOTSPOT 0,0,	0,				unID,hroLDiagonal,1+128,hroL : unID=unID+1
						HOTSPOT temphroL,0,	0+temphroL*tan(ani),	unID,hroLDiagonal,2	,hroL	: unID=unID+1
						HOTSPOT RefPoint1,0,0-InclRefPoint,		unID,hroLDiagonal,3	,hroL	: unID=unID+1

						HOTSPOT lra,0,		0+lra*tan(ani),				unID,hroRDiagonal,1+128,hroR : unID=unID+1
						HOTSPOT lra+temphroR,0,	0+lra*tan(ani)+temphroR*tan(ani),	unID,hroRDiagonal,2	,hroR	: unID=unID+1
						HOTSPOT lra+RefPoint2,0,	0+lra*tan(ani)+InclRefPoint,		unID,hroRDiagonal,3	,hroR	: unID=unID+1

					ENDIF


			ELSE			!Perpendicular Orientation
							!Measurement is always perpendicular to inclination in this case

				ROTy -ani

						!!! LENGTH OF RAILING

							HOTSPOT 0,0,ds+hr,unID,lrah,1+256 : unID=unID+1
							HOTSPOT lrah,0,ds+hr,unID,lrah,2 	: unID=unID+1
							HOTSPOT -1,0,ds+hr,unID,lrah,3 	: unID=unID+1

						IF LengthSize = 0 THEN
							HOTSPOT 0,0,0,unID,lrah,1+256 : unID=unID+1
							HOTSPOT lrah,0,0,unID,lrah,2 	: unID=unID+1
							HOTSPOT -1,0,0,unID,lrah,3 	: unID=unID+1

							HOTSPOT 0,0,ds,unID,lrah,1+256 : unID=unID+1
							HOTSPOT lrah,0,ds,unID,lrah,2 	: unID=unID+1
							HOTSPOT -1,0,ds,unID,lrah,3 	: unID=unID+1
						ENDIF

						!!!DISTANCE FROM FLOOR
						HOTSPOT templrah/2+LengthSize*hroLDiagonal,0,0,unID,ds,1+128 : unID=unID+1
						HOTSPOT templrah/2+LengthSize*hroLDiagonal,0,ds,unID,ds,2 : unID=unID+1
						HOTSPOT templrah/2+LengthSize*hroLDiagonal,0,-1,unID,ds,3 : unID=unID+1

						!!! HEIGHT of RAILING
						HOTSPOT templrah/2+LengthSize*hroLDiagonal,0,ds,unID,hr,1 : unID=unID+1
						HOTSPOT templrah/2+LengthSize*hroLDiagonal,0,ds+hr,unID,hr,2 : unID=unID+1
						HOTSPOT templrah/2+LengthSize*hroLDiagonal,0,-1,unID,hr,3 : unID=unID+1


						!!!OVERHANG OF RAILING
						HOTSPOT lrah,0,ds+hr,unID,hroRDiagonal,1+128 , hroR : unID=unID+1
						HOTSPOT lrah+temphroRDiag,0,ds+hr,unID,hroRDiagonal,2 , hroR 	: unID=unID+1
						HOTSPOT lrah+RefPoint2,0,ds+hr,unID,hroRDiagonal,3 , hroR 	: unID=unID+1

						HOTSPOT 0,0,ds+hr,unID,hroLDiagonal,1+128 , hroL: unID=unID+1
						HOTSPOT temphroLDiag,0,ds+hr,unID,hroLDiagonal,2, hroL 	: unID=unID+1
						HOTSPOT RefPoint1,0,ds+hr,unID,hroLDiagonal,3, hroL 	: unID=unID+1

						IF LengthSize = 1 THEN
						!!!OVERHANG OF RAILING
							HOTSPOT lrah,0,0,unID,hroRDiagonal,1+128 , hroR : unID=unID+1
							HOTSPOT lrah+temphroRDiag,0,0,unID,hroRDiagonal,2 , hroR 	: unID=unID+1
							HOTSPOT lrah+RefPoint2,0,0,unID,hroRDiagonal,3 , hroR 	: unID=unID+1

							HOTSPOT 0,0,0,unID,hroLDiagonal,1+128 , hroL: unID=unID+1
							HOTSPOT temphroLDiag,0,0,unID,hroLDiagonal,2, hroL 	: unID=unID+1
							HOTSPOT RefPoint1,0,0,unID,hroLDiagonal,3, hroL 	: unID=unID+1
						ENDIF


				DEL 1

			ENDIF

		ENDIF

!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** INCLINED AND CURVED *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!

		IF ABS(ani)>EPS and ptyp_m<>1 THEN

			!!!HOTSPOTS FOR GRAPHICAL EDITING

			IF ptyp_m=3 THEN
				!!!ROTATE
				HOTSPOT 0,rb,ds+lra*sin(ani),unID,ab,6 : unID=unID+1
				HOTSPOT 0,0,ds+lra*sin(ani),unID,ab,4+128 : unID=unID+1
				HOTSPOT rb*sin(ab),rb-rb*cos(ab),ds+lra*sin(ani),unID,ab,5 : unID=unID+1

				HOTSPOT 0,rb,ds+hr+lra*sin(ani),unID,ab,6 : unID=unID+1
				HOTSPOT 0,0,ds+hr+lra*sin(ani),unID,ab,4+128 : unID=unID+1
				HOTSPOT rb*sin(ab),rb-rb*cos(ab),ds+hr+lra*sin(ani),unID,ab,5 : unID=unID+1
			ENDIF

				!!!HEIGHT OF RAILING
				HOTSPOT 0,0,ds,unID,hr,1 : unID=unID+1
				HOTSPOT 0,0,ds+hr,unID,hr,2 : unID=unID+1
				HOTSPOT 0,0,-1,unID,hr,3 : unID=unID+1

				HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),ds+(lra/2)*sin(ani),unID,hr,1 : unID=unID+1
				HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),ds+hr+(lra/2)*sin(ani),unID,hr,2 : unID=unID+1
				HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),-1,unID,hr,3 : unID=unID+1

				!!!DISTANCE FROM FLOOR
				HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),(lra/2)*sin(ani),unID,ds,1 : unID=unID+1
				HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),ds+(lra/2)*sin(ani),unID,ds,2 : unID=unID+1
				HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),-1,unID,ds,3 : unID=unID+1

				HOTSPOT 0,0,0,unID,ds,1 : unID=unID+1
				HOTSPOT 0,0,ds,unID,ds,2 : unID=unID+1
				HOTSPOT 0,0,-1,unID,ds,3 : unID=unID+1

				!!!FIX HOTSPOT AT FLOOR
				HOTSPOT rb*sin(ab),rb-rb*cos(ab),0+lra*sin(ani), unID : unID=unID+1

			IF ptyp_m=2 THEN
				!!!HEIGHT OF RAILING
				HOTSPOT rb*sin(ab),rb-rb*cos(ab),ds+lra*sin(ani),unID,hr,1 : unID=unID+1
				HOTSPOT rb*sin(ab),rb-rb*cos(ab),ds+hr+lra*sin(ani),unID,hr,2 : unID=unID+1
				HOTSPOT rb*sin(ab),rb-rb*cos(ab),-1,unID,hr,3 : unID=unID+1

				!!!DISTANCE FROM FLOOR
				HOTSPOT rb*sin(ab),rb-rb*cos(ab),lra*sin(ani),unID,ds,1+128 : unID=unID+1
				HOTSPOT rb*sin(ab),rb-rb*cos(ab),ds+lra*sin(ani),unID,ds,2 : unID=unID+1
				HOTSPOT rb*sin(ab),rb-rb*cos(ab),-1,unID,ds,3 : unID=unID+1
			ENDIF
		ENDIF

	ENDIF

end


!!SUBROUTINES!!

1000:

!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** MODEL OF BALUSTERS *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!

RESOL rescs
MATERIAL pmat

ROTy -90

IF pt_m = 1 THEN
ADDz 1"
cutplane
DEL 1

ROTx 180
ADDz 1"
cutplane
DEL 2

ROTx 90
ADDz 1"
cutplane
DEL 2

ROTx -90
ADDz 1"
cutplane
DEL 2

	revolve 20, 360, 1+2+4+8+16+32,
		0,              0,    0,
		0,  2*sqr(2)*1",    0,
		3.871",  2*sqr(2)*1",    0,
		3.875", sqr(2)*1",  1,
		1"*tan(15),  -1",   800,
		5/8"/sin(75), 75, 2001,
		3/8"/sin(75), -90, 2000,
		4.9996",  1"*sqr(2)-(5/8"/sin(75)-5/8"/tan(75))-3/8"/sin(75), 0,
		5",  1"*sqr(2)-(5/8"/sin(75)-5/8"/tan(75))-3/8"/sin(75), 1,
		1",  1"*tan(30),   800,
		2",  -50,         2001,
		2",   40,         2000,
		0.0004", 0, 201,
		1",   0,      800,
		1/4",  -90,   2000,
		1/8", 0, 200,
		0.0004", 0, 201,
		1",  1"*tan(20),   800,
		3.5",  -20,         2001,
		ph,  4/8", 0

cutend
cutend
cutend
cutend
else
	revolve 17, 360, 1+2,			!!! 1+2+4+8+16+32,
		0,				0,						1,
		0,				(1/18) *  ph,			1,
		(15/180) * ph,  (1/18) *  ph,			1,
		(20/180) * ph,  (1/36) *  ph,			1001,
		(30/180) * ph,  (1/36) *  ph,			1,
		(81/180) * ph,  (13/180) *  ph,			1,
		(89/180) * ph,  (1/36) *  ph,			1001,
		(92/180) * ph,  (1/36) *  ph,			1,
		(92/180) * ph,  (7.5/180) *  ph,		1,
		(92/180) * ph,	(7.5/180) *  ph + 1,	801,
		(108/180) * ph,	(7.5/180) *  ph,		1001,
		(108/180) * ph,	(1/36) *  ph,			1001,
		(111/180) * ph,	(1/36) *  ph,			1,
		(111/180) * ph,	(1/36) *  ph + 1000,	801,
		(119/180) * ph,	(13/180) *  ph,			1001,
		(170/180) * ph,	(1/36) *  ph,			1,
		ph,				(1/36) *  ph,			1
endif

DEL 1

return
