
EPS=0.0001

!!!!!! Railing Length

IF LengthSize = 1 THEN
	lra2=(lra - (hroL + hroR))
	lrah2=(lrah - (hroLDiagonal + hroRDiagonal))
	templra=lra2
	templrah=lrah2
	XStartPoslra=hrol
	ZStartPoslra=hrol*tan(ani)
	XStartPoslrah=hroLDiagonal
ELSE
	templra=lra
	templrah=lrah
	XStartPoslra=0
	ZStartPoslra=0
	XStartPoslrah=0
ENDIF

if bPostNoCalculation then
	if pit_m=2 then
		IF rom_m=2 AND rmm_m=2 THEN
			np=int(lra/dp)+1
		ELSE
			np=int(lra/dp)+1
		ENDIF
	else
		np = nbt
	endif
endif

np = max(2, np)

IF ABS(ab-360)<EPS and ABS(ani)<EPS THEN
	anglepost=ab/np
ELSE
	anglepost=ab/(np-1)
ENDIF

!!ADDITIONAL CALCULATION FOR CURVED AND INCLINED RAILS!!

IF ptyp_m<>1 and ABS(ab)>EPS or ABS(rb)>EPS THEN
	!!! *** General data

	alphahroL=(hroL*180)/(rb*pi) 			!Overhung angle
	alphahroR=(hroR*180)/(rb*pi) 			!Overhung angle
ENDIF

IF ptyp_m<>1 and (ABS(ab)>EPS or ABS(rb)>EPS) THEN
	distpost		= ab/(np-1)
	tempPostPos		= alphahroL
else
	IF rom_m=2 AND rmm_m=2 THEN
		distpost	= templrah/(np-1)
		tempPostPos	= XStartPoslrah * cos(ani)
	ELSE
		distpost	= templra/(np-1)
		tempPostPos	= hrol
	ENDIF
endif

dim postPos[]
for i = 1 to np
	postPos[i] = tempPostPos
	IF ptyp_m<>1 and (ABS(ab)>EPS or ABS(rb)>EPS) THEN
		tempPostPos = postPos[i] + distpost
	else
		IF rom_m=2 AND rmm_m=2 THEN
			tempPostPos = postPos[i] + distpost * cos(ani)
		else
			tempPostPos = postPos[i] + distpost
		endif
	endif
next i

POST_CIRCULAR		= 1
POST_RECTANGULAR	= 2

if bSimple2DPosts then
	drawThePost		= (bEnable2DPosts * gs_ShowPost2D)
else
	drawThePost		= (bEnable2DPosts * iPostSymbolType * bPostSymbol)
endif
postDia2D			= 0.1 !pd
postWidth2D			= 0.1 !pw
postThk2D			= 0.1 !pth
bPostAboveHandRail	= (iPostSymbolType = 1 or iPostSymbolType = 3)

if iPostSymbolType = 1 or iPostSymbolType = 2 then iPostType2D = POST_CIRCULAR
if iPostSymbolType = 3 or iPostSymbolType = 4 then iPostType2D = POST_RECTANGULAR

