
SECT_FILL SYMB_FILL, SYMB_FBGD_PEN, SYMB_FILL_PEN, SYMB_SECT_PEN

if iStairType = RAILS_FOR_COMPLETE_STAIRS then
	IF railType_m = RAIL_BALUSTRADE THEN
		CALL "m_Rail Balustrade" PARAMETERS				cfs					= 1,
														ptyp_m				= ptyp_m,
														ani					= ani,
														rom_m				= NOT(bEnableNonVerticalRail) + rom_m * bEnableNonVerticalRail,
														rmm_m				= NOT(bEnableNonVerticalRail) + rmm_m * bEnableNonVerticalRail,
														lra					= lraSimple,
														lrah				= lraSimple,
														hr					= railHeight,
														hrPerp				= railHeight,
														ds					= railDist,
														dsPerp				= railDist,
														res					= res,
														gs_detlevel_3D_m	= gs_detlevel_3D_m,
														gs_cont_pen			= gs_cont_pen,
														ab					= ab,
														rb					= rb,

														fth					= railFrameThk,
														fsw					= 0.05,
														ftw					= 0.05,
														fbw					= 0.05,
														bw					= railBarDepth,
														bth					= railBarFillThk,
														abdist				= 0.15,
														fmat				= railFrameMat,
														bmat				= railBaluFillMat,
														gs_shadow			= gs_shadow
	ENDIF
	IF railType_m = RAIL_PARALLEL_BARS THEN
		CALL "m_Rail Parallel Bars" PARAMETERS			cfs					= 1,
														ptyp_m				= ptyp_m,
														ani					= ani,
														rom_m				= NOT(bEnableNonVerticalRail) + rom_m * bEnableNonVerticalRail,
														rmm_m				= NOT(bEnableNonVerticalRail) + rmm_m * bEnableNonVerticalRail,
														lra					= lraSimple,
														lrah				= lraSimple,
														hr					= railHeight,
														hrPerp				= railHeight,
														ds					= railDist,
														dsPerp				= railDist,
														res					= res,
														gs_detlevel_3D_m	= gs_detlevel_3D_m,
														gs_cont_pen			= gs_cont_pen,
														ab					= ab,
														rb					= rb,

														nb					= barNumber,
														fth					= railFrameThk,
														bh					= railBarDepth,
														fmat				= railFrameMat,
														gs_shadow			= gs_shadow
	ENDIF
	IF railType_m = RAIL_SIMPLE_BAR THEN
		CALL "m_Rail Simple Bar" PARAMETERS				cfs					= 1,
														ptyp_m				= ptyp_m,
														ani					= ani,
														rom_m				= NOT(bEnableNonVerticalRail) + rom_m * bEnableNonVerticalRail,
														rmm_m				= NOT(bEnableNonVerticalRail) + rmm_m * bEnableNonVerticalRail,
														lra					= lraSimple,
														lrah				= lraSimple,
														hr					= railHeight,
														hrPerp				= railHeight,
														ds					= railDist,
														dsPerp				= railDist,
														res					= res,
														gs_detlevel_3D_m	= gs_detlevel_3D_m,
														gs_cont_pen			= gs_cont_pen,
														ab					= ab,
														rb					= rb,

														fth					= railFrameThk,
														bh					= railBarDepth,
														bd					= railBarDiam,
														btyp_m				= 1,
														fmat				= railFrameMat,

														rescs				= res,
														gs_shadow			= gs_shadow
	ENDIF
	IF railType_m = RAIL_SOLID_FRAME_FILLED THEN
		CALL "m_Rail Solid Frame Filled" PARAMETERS		cfs					= 1,
														ptyp_m				= ptyp_m,
														ani					= ani,
														rom_m				= NOT(bEnableNonVerticalRail) + rom_m * bEnableNonVerticalRail,
														rmm_m				= NOT(bEnableNonVerticalRail) + rmm_m * bEnableNonVerticalRail,
														lra					= lraSimple,
														lrah				= lraSimple,
														hr					= railHeight,
														hrPerp				= railHeight,
														ds					= railDist,
														dsPerp				= railDist,
														res					= res,
														gs_detlevel_3D_m	= gs_detlevel_3D_m,
														gs_cont_pen			= gs_cont_pen,
														ab					= ab,
														rb					= rb,

														gs_frameStyle_m		= 1,
														fth					= railFrameThk,
														fsw					= 0.05,
														ftw					= 0.05,
														fbw					= 0.05,
														fdf					= 0.05,
														bth					= railBarFillThk,
														fmat				= railFrameMat,
														bmat				= railBaluFillMat,
														gs_shadow			= gs_shadow
	ENDIF
	IF railType_m = RAIL_SOLID_FRAME THEN
		CALL "m_Rail Solid Frame" PARAMETERS			cfs					= 1,
														ptyp_m				= ptyp_m,
														ani					= ani,
														rom_m				= NOT(bEnableNonVerticalRail) + rom_m * bEnableNonVerticalRail,
														rmm_m				= NOT(bEnableNonVerticalRail) + rmm_m * bEnableNonVerticalRail,
														lra					= lraSimple,
														lrah				= lraSimple,
														hr					= railHeight,
														hrPerp				= railHeight,
														ds					= railDist,
														dsPerp				= railDist,
														res					= res,
														gs_detlevel_3D_m	= gs_detlevel_3D_m,
														gs_cont_pen			= gs_cont_pen,
														ab					= ab,
														rb					= rb,

														gs_frameStyle_m		= 1,
														fth					= railFrameThk,
														fsw					= 0.05,
														ftw					= 0.05,
														fbw					= 0.05,
														fmat				= railFrameMat,
														gs_shadow			= gs_shadow
	ENDIF
	IF railType_m = RAIL_SOLID THEN
		CALL "m_Rail Solid" PARAMETERS					cfs					= 1,
														ptyp_m				= ptyp_m,
														ani					= ani,
														rom_m				= NOT(bEnableNonVerticalRail) + rom_m * bEnableNonVerticalRail,
														rmm_m				= NOT(bEnableNonVerticalRail) + rmm_m * bEnableNonVerticalRail,
														lra					= lraSimple,
														lrah				= lraSimple,
														hr					= railHeight,
														hrPerp				= railHeight,
														ds					= railDist,
														dsPerp				= railDist,
														res					= res,
														gs_detlevel_3D_m	= gs_detlevel_3D_m,
														gs_cont_pen			= gs_cont_pen,
														ab					= ab,
														rb					= rb,

														fth					= railFrameThk,
														fmat				= railFrameMat,
														gs_shadow			= gs_shadow
	ENDIF

	add additionXComplex, 0, additionZComplex
	IF railType_m = RAIL_POST_WITH_BALUSTERS THEN
		CALL "m_Rail Post with Balusters" PARAMETERS	cfs					= 1,
														ptyp_m				= ptyp_m,
														ani					= ani,
														rom_m				= NOT(bEnableNonVerticalRail) + rom_m * bEnableNonVerticalRail,
														rmm_m				= NOT(bEnableNonVerticalRail) + rmm_m * bEnableNonVerticalRail,
														lra					= lraComplex,
														lrah				= lraComplex,
														hr					= railHeight,
														hrPerp				= railHeight,
														ds					= railHeightComplex,
														dsPerp				= railHeightComplex,
														res					= res,
														gs_detlevel_3D_m	= gs_detlevel_3D_m,
														gs_cont_pen			= gs_cont_pen,
														ab					= ab,
														rb					= rb,

														hrt_m				= 1,
														hrd					= railFrameThk,
														hrw					= railFrameThk,
														hrh					= railFrameThk,
														hroL				= hrovL,
														hroR				= hrovR,

														bt_m				= 1,
														nb					= barNumber,
														bth					= railBarFillThk,
														bw					= railBarDepth,
														pd					= railPostDiam,
														pw					= railPostWidth,
														pth					= railFrameThk,
														pt_m				= 1,
														np					= postNumber,
!!!														gs_PostBaseOverhang	= railPostBaseOv,
														fmat				= railHandrailMat,
														bmat				= railBaluFillMat,
														pmat				= railPostMat,
														rescs				= rescs,
														gs_shadow			= gs_shadow
	ENDIF
	IF railType_m = RAIL_WIRED THEN
		CALL "m_Rail Wired" PARAMETERS					cfs					= 1,
														ptyp_m				= ptyp_m,
														ani					= ani,
														rom_m				= NOT(bEnableNonVerticalRail) + rom_m * bEnableNonVerticalRail,
														rmm_m				= NOT(bEnableNonVerticalRail) + rmm_m * bEnableNonVerticalRail,
														lra					= lraComplex,
														lrah				= lraComplex,
														hr					= railHeight,
														hrPerp				= railHeight,
														ds					= railHeightComplex,
														dsPerp				= railHeightComplex,
														res					= res,
														gs_detlevel_3D_m	= gs_detlevel_3D_m,
														gs_cont_pen			= gs_cont_pen,
														ab					= ab,
														rb					= rb,

														hrt_m				= 1,
														hrd					= railFrameThk,
														hrw					= railFrameThk,
														hrh					= railFrameThk,
														hroL				= hrovL,
														hroR				= hrovR,

														pd					= railPostDiam,
														pw					= railPostWidth,
														pth					= railPostThk,
														pt_m				= 1,
														bt_m				= iBalusterStyle,
														np					= postNumber,
														nb					= barNumber,
														bd					= railBarDiam,
														bth					= railBarFillThk,
														bw					= railBarDepth,
!!!														gs_PostBaseOverhang	= railPostBaseOv,
														fmat				= railHandrailMat,
														bmat				= railBaluFillMat,
														pmat				= railPostMat,
														rescs				= rescs,
														gs_shadow			= gs_shadow
	ENDIF
	IF railType_m = RAIL_WOODEN_BALUSTRADE THEN
		CALL "m_Rail Wooden Balustrade" PARAMETERS		cfs					= 1,
														ptyp_m				= ptyp_m,
														ani					= ani,
														rom_m				= NOT(bEnableNonVerticalRail) + rom_m * bEnableNonVerticalRail,
														rmm_m				= NOT(bEnableNonVerticalRail) + rmm_m * bEnableNonVerticalRail,
														lra					= lraComplex,
														lrah				= lraComplex,
														hr					= railHeight,
														hrPerp				= railHeight,
														ds					= railHeightComplex,
														dsPerp				= railHeightComplex,
														res					= res,
														gs_detlevel_3D_m	= gs_detlevel_3D_m,
														gs_cont_pen			= gs_cont_pen,
														ab					= ab,
														rb					= rb,

														hrt_m				= 1,
														hrd					= railFrameThk,
														hrw					= railFrameThk,
														hrh					= railFrameThk,
														hroL				= hrovL,
														hroR				= hrovR,

														pt_m				= 1,
														dp					= balusterDist,

														pit_m				= 2,
														nbt					= balusterNumber,
														fmat				= railHandrailMat,
														pmat				= railPostMat,
														rescs				= rescs,
														gs_shadow			= gs_shadow
	ENDIF
	IF railType_m = RAIL_POST_WITH_BARS THEN
		CALL "m_Rail Post with Bars" PARAMETERS			cfs					= 1,
														ptyp_m				= ptyp_m,
														ani					= ani,
														rom_m				= NOT(bEnableNonVerticalRail) + rom_m * bEnableNonVerticalRail,
														rmm_m				= NOT(bEnableNonVerticalRail) + rmm_m * bEnableNonVerticalRail,
														lra					= lraComplex,
														lrah				= lraComplex,
														hr					= railHeight,
														hrPerp				= railHeight,
														ds					= railHeightComplex,
														dsPerp				= railHeightComplex,
														res					= res,
														gs_detlevel_3D_m	= gs_detlevel_3D_m,
														gs_cont_pen			= gs_cont_pen,
														ab					= ab,
														rb					= rb,

														hrt_m				= 1,
														hrd					= railFrameThk,
														hrw					= railFrameThk,
														hrh					= railFrameThk,
														hroL				= hrovL,
														hroR				= hrovR,

														bt_m				= 1,
														bth					= railBarFillThk,
														bw					= railBarDepth,
														nb					= barNumber,
														pd					= railPostDiam,
														pw					= railPostWidth,
														pth					= railPostThk,
														pt_m				= 1,
														np					= postNumber,
!!!														sbh					= railDistFromHr,
!!!														gs_PostBaseOverhang	= railPostBaseOv,
														fmat				= railHandrailMat,
														bmat				= railBaluFillMat,
														pmat				= railPostMat,
														rescs				= rescs,
														gs_shadow			= gs_shadow
	ENDIF
	del 1
endif

if iStairType = RAILS_FOR_STAIR_ELEMENTS then
	IF railType_m = RAIL_BALUSTRADE THEN
		CALL "m_Rail Balustrade" PARAMETERS				cfs					= 1,
														ptyp_m				= ptyp_m,
														ani					= ani,
														rom_m				= NOT(bEnableNonVerticalRail) + rom_m * bEnableNonVerticalRail,
														rmm_m				= NOT(bEnableNonVerticalRail) + rmm_m * bEnableNonVerticalRail,
														lra					= lraSimple,
														lrah				= lraSimple,
														hr					= railHeight,
														hrPerp				= railHeight,
														ds					= railDist,
														dsPerp				= railDist,
														res					= res,
														gs_detlevel_3D_m	= gs_detlevel_3D_m,
														gs_cont_pen			= gs_cont_pen,
														ab					= ab,
														rb					= rb,

														fth					= railFrameThk,
														fsw					= railFramesWSide,
														ftw					= railFramesWTop,
														fbw					= railFramesWBot,
														bw					= railBarDepth,
														bth					= railBarFillThk,
														abdist				= balusterDist,
														fmat				= railFrameMat,
														bmat				= railBaluFillMat,
														gs_shadow			= gs_shadow
	ENDIF
	IF railType_m = RAIL_PARALLEL_BARS THEN
		CALL "m_Rail Parallel Bars" PARAMETERS			cfs					= 1,
														ptyp_m				= ptyp_m,
														ani					= ani,
														rom_m				= NOT(bEnableNonVerticalRail) + rom_m * bEnableNonVerticalRail,
														rmm_m				= NOT(bEnableNonVerticalRail) + rmm_m * bEnableNonVerticalRail,
														lra					= lraSimple,
														lrah				= lraSimple,
														hr					= railHeight,
														hrPerp				= railHeight,
														ds					= railDist,
														dsPerp				= railDist,
														res					= res,
														gs_detlevel_3D_m	= gs_detlevel_3D_m,
														gs_cont_pen			= gs_cont_pen,
														ab					= ab,
														rb					= rb,

														nb					= barNumber,
														fth					= railFrameThk,
														bh					= railBarHeight,
														fmat				= railFrameMat,
														gs_shadow			= gs_shadow
	ENDIF
	IF railType_m = RAIL_SIMPLE_BAR THEN
		CALL "m_Rail Simple Bar" PARAMETERS				cfs					= 1,
														ptyp_m				= ptyp_m,
														ani					= ani,
														rom_m				= NOT(bEnableNonVerticalRail) + rom_m * bEnableNonVerticalRail,
														rmm_m				= NOT(bEnableNonVerticalRail) + rmm_m * bEnableNonVerticalRail,
														lra					= lraSimple,
														lrah				= lraSimple,
														hr					= railHeight,
														hrPerp				= railHeight,
														ds					= railDist,
														dsPerp				= railDist,
														res					= res,
														gs_detlevel_3D_m	= gs_detlevel_3D_m,
														gs_cont_pen			= gs_cont_pen,
														ab					= ab,
														rb					= rb,

														fth					= railFrameThk,
														bh					= railBarHeight,
														bd					= railBarDiam,
														btyp_m				= railBarType,
														fmat				= railFrameMat,

														rescs				= res,
														gs_shadow			= gs_shadow
	ENDIF
	IF railType_m = RAIL_SOLID_FRAME_FILLED THEN
		CALL "m_Rail Solid Frame Filled" PARAMETERS		cfs					= 1,
														ptyp_m				= ptyp_m,
														ani					= ani,
														rom_m				= NOT(bEnableNonVerticalRail) + rom_m * bEnableNonVerticalRail,
														rmm_m				= NOT(bEnableNonVerticalRail) + rmm_m * bEnableNonVerticalRail,
														lra					= lraSimple,
														lrah				= lraSimple,
														hr					= railHeight,
														hrPerp				= railHeight,
														ds					= railDist,
														dsPerp				= railDist,
														res					= res,
														gs_detlevel_3D_m	= gs_detlevel_3D_m,
														gs_cont_pen			= gs_cont_pen,
														ab					= ab,
														rb					= rb,

														gs_frameStyle_m		= 1,
														fth					= railFrameThk,
														fsw					= railFramesWSide,
														ftw					= railFramesWTop,
														fbw					= railFramesWBot,
														fdf					= railFillDist,
														bth					= railBarFillThk,
														fmat				= railFrameMat,
														bmat				= railBaluFillMat,
														gs_shadow			= gs_shadow
	ENDIF
	IF railType_m = RAIL_SOLID_FRAME THEN
		CALL "m_Rail Solid Frame" PARAMETERS			cfs					= 1,
														ptyp_m				= ptyp_m,
														ani					= ani,
														rom_m				= NOT(bEnableNonVerticalRail) + rom_m * bEnableNonVerticalRail,
														rmm_m				= NOT(bEnableNonVerticalRail) + rmm_m * bEnableNonVerticalRail,
														lra					= lraSimple,
														lrah				= lraSimple,
														hr					= railHeight,
														hrPerp				= railHeight,
														ds					= railDist,
														dsPerp				= railDist,
														res					= res,
														gs_detlevel_3D_m	= gs_detlevel_3D_m,
														gs_cont_pen			= gs_cont_pen,
														ab					= ab,
														rb					= rb,

														gs_frameStyle_m		= 1,
														fth					= railFrameThk,

														fsw					= railFramesWSide,
														ftw					= railFramesWTop,
														fbw					= railFramesWBot,
														fmat				= railFrameMat,
														gs_shadow			= gs_shadow
	ENDIF
	IF railType_m = RAIL_SOLID THEN
		CALL "m_Rail Solid" PARAMETERS					cfs					= 1,
														ptyp_m				= ptyp_m,
														ani					= ani,
														rom_m				= NOT(bEnableNonVerticalRail) + rom_m * bEnableNonVerticalRail,
														rmm_m				= NOT(bEnableNonVerticalRail) + rmm_m * bEnableNonVerticalRail,
														lra					= lraSimple,
														lrah				= lraSimple,
														hr					= railHeight,
														hrPerp				= railHeight,
														ds					= railDist,
														dsPerp				= railDist,
														res					= res,
														gs_detlevel_3D_m	= gs_detlevel_3D_m,
														gs_cont_pen			= gs_cont_pen,
														ab					= ab,
														rb					= rb,

														fth					= railFrameThk,
														fmat				= railFrameMat,
														gs_shadow			= gs_shadow
	ENDIF

	add additionXComplex, 0, additionZComplex
	IF railType_m = RAIL_POST_WITH_BALUSTERS THEN
		CALL "m_Rail Post with Balusters" PARAMETERS	cfs					= 1,
														ptyp_m				= ptyp_m,
														ani					= ani,
														rom_m				= NOT(bEnableNonVerticalRail) + rom_m * bEnableNonVerticalRail,
														rmm_m				= NOT(bEnableNonVerticalRail) + rmm_m * bEnableNonVerticalRail,
														lra					= lraComplex,
														lrah				= lraComplex,
														hr					= railHeight,
														hrPerp				= railHeight,
														ds					= railDist,
														dsPerp				= railDist,
														res					= res,
														gs_detlevel_3D_m	= gs_detlevel_3D_m,
														gs_cont_pen			= gs_cont_pen,
														ab					= ab,
														rb					= rb,

														hrt_m				= handRailType,
														hrd					= handRailDiam,
														hrw					= handRailWidth,
														hrh					= handRailHeight,
														hroL				= hrovL,
														hroR				= hrovR,

														bt_m				= iBalusterStyle,
														nb					= barNumber,
														bd					= railBarDiam,
														bth					= railBarFillThk,
														bw					= railBarDepth,
														pd					= railPostDiam,
														pw					= railPostWidth,
														pth					= railPostThk,
														pt_m				= railPostType,
														np					= postNumber,
														gs_PostBaseOverhang	= railPostBaseOv,
														fmat				= railFrameMat,
														bmat				= railBaluFillMat,
														pmat				= railPostMat,
														rescs				= rescs,
														gs_shadow			= gs_shadow
	ENDIF
	IF railType_m = RAIL_WIRED THEN
		CALL "m_Rail Wired" PARAMETERS					cfs					= 1,
														ptyp_m				= ptyp_m,
														ani					= ani,
														rom_m				= NOT(bEnableNonVerticalRail) + rom_m * bEnableNonVerticalRail,
														rmm_m				= NOT(bEnableNonVerticalRail) + rmm_m * bEnableNonVerticalRail,
														lra					= lraComplex,
														lrah				= lraComplex,
														hr					= railHeight,
														hrPerp				= railHeight,
														ds					= railDist,
														dsPerp				= railDist,
														res					= res,
														gs_detlevel_3D_m	= gs_detlevel_3D_m,
														gs_cont_pen			= gs_cont_pen,
														ab					= ab,
														rb					= rb,

														hrt_m				= handRailType,
														hrd					= handRailDiam,
														hrw					= handRailWidth,
														hrh					= handRailHeight,
														hroL				= hrovL,
														hroR				= hrovR,

														pd					= railPostDiam,
														pw					= railPostWidth,
														pth					= railPostThk,
														pt_m				= railPostType,
														bt_m				= iBalusterStyle,
														np					= postNumber,
														nb					= barNumber,
														bd					= railBarDiam,
														bth					= railBarFillThk,
														bw					= railBarDepth,
														gs_PostBaseOverhang	= railPostBaseOv,
														fmat				= railFrameMat,
														bmat				= railBaluFillMat,
														pmat				= railPostMat,
														rescs				= rescs,
														gs_shadow			= gs_shadow
	ENDIF

	if bEnableWired02Rail then
		IF railType_m = RAIL_WIRED02 THEN
			CALL "m_Rail Wired 02" PARAMETERS			cfs					= 1,
														ptyp_m				= ptyp_m,
														ani					= ani,
														rom_m				= NOT(bEnableNonVerticalRail) + rom_m * bEnableNonVerticalRail,
														rmm_m				= NOT(bEnableNonVerticalRail) + rmm_m * bEnableNonVerticalRail,
														lra					= lraComplex,
														lrah				= lraComplex,
														hr					= railHeight,
														hrPerp				= railHeight,
														ds					= railDist,
														dsPerp				= railDist,
														res					= res,
														gs_detlevel_3D_m	= gs_detlevel_3D_m,
														gs_cont_pen			= gs_cont_pen,
														ab					= ab,
														rb					= rb,

														hrt_m				= handRailType,
														hrd					= handRailDiam,
														hrw					= handRailWidth,
														hrh					= handRailHeight,
														hroL				= hrovL,
														hroR				= hrovR,

														pw					= railPostWidth,
														pth					= railPostThk,
														bt_m				= iBalusterStyle,
														np					= postNumber,
														nb					= barNumber,
														bd					= railBarDiam,
														bth					= railBarFillThk,
														bw					= railBarDepth,
														sbh					= railDistFromHr,
														gs_PostBaseType_m	= railPostBaseType,
														gs_PostBaseOverhang	= railPostBaseOv,
														fmat				= railFrameMat,
														bmat				= railBaluFillMat,
														pmat				= railPostMat,
														rescs				= rescs,
														gs_shadow			= gs_shadow
		ENDIF
	endif
	IF railType_m = RAIL_WOODEN_BALUSTRADE THEN
		CALL "m_Rail Wooden Balustrade" PARAMETERS		cfs					= 1,
														ptyp_m				= ptyp_m,
														ani					= ani,
														rom_m				= NOT(bEnableNonVerticalRail) + rom_m * bEnableNonVerticalRail,
														rmm_m				= NOT(bEnableNonVerticalRail) + rmm_m * bEnableNonVerticalRail,
														lra					= lraComplex,
														lrah				= lraComplex,
														hr					= railHeight,
														hrPerp				= railHeight,
														ds					= railDist,
														dsPerp				= railDist,
														res					= res,
														gs_detlevel_3D_m	= gs_detlevel_3D_m,
														gs_cont_pen			= gs_cont_pen,
														ab					= ab,
														rb					= rb,

														hrt_m				= handRailType,
														hrd					= handRailDiam,
														hrw					= handRailWidth,
														hrh					= handRailHeight,
														hroL				= hrovL,
														hroR				= hrovR,

														pt_m				= railPostType,
														dp					= balusterDist,
														pit_m				= iParamInputType,
														nbt					= balusterNumber,
														fmat				= railFrameMat,
														pmat				= railPostMat,
														rescs				= rescs,
														gs_shadow			= gs_shadow
	ENDIF
	IF railType_m = RAIL_POST_WITH_BARS THEN
		CALL "m_Rail Post with Bars" PARAMETERS			cfs					= 1,
														ptyp_m				= ptyp_m,
														ani					= ani,
														rom_m				= NOT(bEnableNonVerticalRail) + rom_m * bEnableNonVerticalRail,
														rmm_m				= NOT(bEnableNonVerticalRail) + rmm_m * bEnableNonVerticalRail,
														lra					= lraComplex,
														lrah				= lraComplex,
														hr					= railHeight,
														hrPerp				= railHeight,
														ds					= railDist,
														dsPerp				= railDist,
														res					= res,
														gs_detlevel_3D_m	= gs_detlevel_3D_m,
														gs_cont_pen			= gs_cont_pen,
														ab					= ab,
														rb					= rb,

														hrt_m				= handRailType,
														hrd					= handRailDiam,
														hrw					= handRailWidth,
														hrh					= handRailHeight,
														hroL				= hrovL,
														hroR				= hrovR,

														bt_m				= iBalusterStyle,
														bd					= railBarDiam,
														bth					= railBarFillThk,
														bw					= railBarDepth,
														nb					= barNumber,
														pd					= railPostDiam,
														pw					= railPostWidth,
														pth					= railPostThk,
														pt_m				= railPostType,
														np					= postNumber,
														sbh					= railDistFromHr,
														gs_PostBaseOverhang	= railPostBaseOv,
														fmat				= railFrameMat,
														bmat				= railBaluFillMat,
														pmat				= railPostMat,
														rescs				= rescs,
														gs_shadow			= gs_shadow
	ENDIF
	del 1
endif
