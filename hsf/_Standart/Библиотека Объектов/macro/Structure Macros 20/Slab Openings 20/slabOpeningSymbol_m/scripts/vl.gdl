
! ==============================================================================
! Opening Form
! ==============================================================================
values "Typ" stOpeningType
values "iOpeningType" 1, 2, 3 ,4
if GLOB_MODPAR_NAME = "Typ" then
	for i = 1 to vardim1(stOpeningType)
	   if Typ = stOpeningType[i] then iOpeningType = i
	next i
	parameters iOpeningType = iOpeningType
else
	Typ = stOpeningType[max(min(iOpeningType, vardim1(stOpeningType)), 1)]
	parameters Typ = Typ
endif

if iSymbolType <> FLOOR_RECESS then
	values "openingSymbolType" stOpeningSymbolType
	values "iOpeningSymbolType" 1, 2
	if GLOB_MODPAR_NAME = "openingSymbolType" then
		iOpeningSymbolType = 1
		if openingSymbolType = stOpeningSymbolType[2] then iOpeningSymbolType = 2
		parameters iOpeningSymbolType = iOpeningSymbolType
	else
		openingSymbolType = stOpeningSymbolType[1]
		if iOpeningSymbolType = 2 then openingSymbolType = stOpeningSymbolType[2]
		parameters openingSymbolType = openingSymbolType
	endif
endif

! ==============================================================================
! Story Sensitive
! ==============================================================================
if not(bStorySensitive) then
	if iSymbolType = FLOOR_OPENING then
		hideparameter	"openingSymbolType",
						"iOpeningSymbolType",
						"gs_ceilingCont_pen",
						"lineTypeCeiling",
						"ceilingFillType",
						"ceilingFillPen",
						"ceilingFillBgPen",
						"symb_text_2",
						"iSymbText2",
						"iSymbText2_prev",
						"symb_text_2_short",
						"iSymbText2Short"

		lock			"openingSymbolType",
						"iOpeningSymbolType",
						"gs_ceilingCont_pen",
						"lineTypeCeiling",
						"ceilingFillType",
						"ceilingFillPen",
						"ceilingFillBgPen",
						"symb_text_2",
						"iSymbText2",
						"iSymbText2_prev",
						"symb_text_2_short",
						"iSymbText2Short"
	endif

	if iSymbolType = CEILING_OPENING then
		hideparameter	"penFloor",
						"lineTypeFloor",
						"gs_opening_filltype",
						"gs_opening_fillpen",
						"gs_opening_backgroundpen",
						"backGroundFillType",
						"backGroundFillPen",
						"backGroundFillBgPen",
						"symb_text_2",
						"iSymbText2",
						"iSymbText2_prev",
						"symb_text_2_short",
						"iSymbText2Short"

		lock			"penFloor",
						"lineTypeFloor",
						"gs_opening_filltype",
						"gs_opening_fillpen",
						"gs_opening_backgroundpen",
						"backGroundFillType",
						"backGroundFillPen",
						"backGroundFillBgPen",
						"symb_text_2",
						"iSymbText2",
						"iSymbText2_prev",
						"symb_text_2_short",
						"iSymbText2Short"
	endif
endif

! ==============================================================================
! Sizes
! ==============================================================================
values "gs_hole_width"		range (0,)
values "gs_hole_diameter"	range (0,)
values "gs_hole_depth"		range (0,)
values "gs_slab_thickness"	range (0,)
values "A"					range (0,)
values "B"					range (0,)
values "ZZYZX"				range (0,)

if iOpeningType = OPTYPE_CIRCULAR then
	lock			"gs_hole_width", "gs_hole_depth"
	hideparameter	"gs_hole_width", "gs_hole_depth"
else
	lock			"gs_hole_diameter"
	hideparameter	"gs_hole_diameter"
endif

if GLOB_MODPAR_NAME = "A" | GLOB_MODPAR_NAME = "B" then
	if iOpeningType = OPTYPE_CIRCULAR then
		if GLOB_MODPAR_NAME = "A" then
			gs_hole_diameter = A
		else
			gs_hole_diameter = B
		endif

		parameters gs_hole_diameter = gs_hole_diameter
	else
		gs_hole_width	= A 
		gs_hole_depth	= B

		parameters gs_hole_width =gs_hole_width, gs_hole_depth = gs_hole_depth
	endif
else
	if iOpeningType = OPTYPE_CIRCULAR then
		A = gs_hole_diameter
		B = gs_hole_diameter
	else
		A = gs_hole_width
		B = gs_hole_depth
	endif
	parameters A = A, B = B
endif

if GLOB_MODPAR_NAME = "ZZYZX" then
	gs_slab_thickness = ZZYZX
	parameters gs_slab_thickness = gs_slab_thickness
else
	ZZYZX = gs_slab_thickness
	parameters ZZYZX = ZZYZX
endif


! ==============================================================================
! Text Content
! ==============================================================================
if not(gs_displaytext) then
	if iSymbolType <> FLOOR_RECESS then
		hideparameter	"symb_text_1",
						"iSymbText1",
						"iSymbText1_prev",
						"symb_text_1_short",
						"iSymbText1Short",
						"symb_text_2",
						"iSymbText2",
						"iSymbText2_prev",
						"symb_text_2_short",
						"iSymbText2Short"
	
		lock			"symb_text_1",
						"iSymbText1",
						"iSymbText1_prev",
						"symb_text_1_short",
						"iSymbText1Short",
						"symb_text_2",
						"iSymbText2",
						"iSymbText2_prev",
						"symb_text_2_short",
						"iSymbText2Short"
	else
		hideparameter	"symb_text",
						"iSymbText",
						"iSymbText_prev",
						"symb_text_short",
						"iSymbTextShort"
	
		lock			"symb_text",
						"iSymbText",
						"iSymbText_prev",
						"symb_text_short",
						"iSymbTextShort"
	endif
endif

if not(bShowPrefix) then
	hideparameter	"symb_use",
					"iSymbUse",
					"iSymbUse_prev",
					"symb_use_short",
					"iSymbUseShort"

	lock			"symb_use",
					"iSymbUse",
					"iSymbUse_prev",
					"symb_use_short",
					"iSymbUseShort"
endif

if not(bShowSizes) then
	hideparameter	"symbSizes",
					"iSymbSizes",
					"workingUnit",
					"iWorkingUnit",
					"iDecimalOptions"

	lock			"symbSizes",
					"iSymbSizes",
					"workingUnit",
					"iWorkingUnit",
					"iDecimalOptions"
endif

if not(bShowCustomText) then
	hideparameter	"symb_cust_text"
	lock			"symb_cust_text"
endif


dim _stHoleType[]
dim _stHoleTypeShort[]
for iv = vardim1(stHoleType) to 1 step -1
	_stHoleType[iv]			= stHoleType[iv][FULL_NAME]
	_stHoleTypeShort[iv]	= stHoleType[iv][SHORT_NAME]
next iv

if iSymbolType <> FLOOR_RECESS then
	! ------------------------ Text 1 -------------------------
	values "symb_text_1" _stHoleType, customText
	values "iSymbText1" 1,2,3,4,5,6,7,8,9,10,11,12,0
	values "iSymbText1_prev" 1,2,3,4,5,6,7,8,9,10,11,12,0
	
	if GLOB_MODPAR_NAME = "symb_text_1" then
		iSymbText1 = 0
		for i = 1 to vardim1(_stHoleType)
			if symb_text_1 = _stHoleType[i] then
				iSymbText1 = i
				i = vardim1(_stHoleType)
			endif
		next i
	
		parameters iSymbText1 = iSymbText1
	else
		iSymbText1 = min(max(iSymbText1,0),vardim1(_stHoleType))
		if iSymbText1 > 0 then
			symb_text_1 = _stHoleType[iSymbText1]
		else
			symb_text_1 = customText
		endif
		parameters symb_text_1 = symb_text_1
	endif
	if iSymbText1_prev <> iSymbText1 & iSymbText1 <> 0 then
		symb_text_1_short	= _stHoleTypeShort[iSymbText1]
		iSymbText1Short		= iSymbText1
		parameters symb_text_1_short = symb_text_1_short, iSymbText1Short = iSymbText1Short
	endif
	parameters iSymbText1_prev = iSymbText1
	
	!!values "symb_text_1_short" _stHoleTypeShort, CUSTOM
	values "iSymbText1Short" 1,2,3,4,5,6,7,8,9,10,11,12,0
	if GLOB_MODPAR_NAME = "symb_text_1_short" then
		iSymbText1Short = 0
		for i = 1 to vardim1(_stHoleTypeShort)
			if symb_text_1_short = _stHoleTypeShort[i] then
				iSymbText1Short = i
				i = vardim1(_stHoleTypeShort)
			endif
		next i
		parameters iSymbText1Short = iSymbText1Short
	else
		iSymbText1Short = min(max(iSymbText1Short,0),vardim1(_stHoleTypeShort))
		if iSymbText1Short > 0 then
			symb_text_1_short = _stHoleTypeShort[iSymbText1Short]
			parameters symb_text_1_short = symb_text_1_short
		endif
	endif
	
	! ------------------------ Text 2 -------------------------
	values "symb_text_2" _stHoleType, customText
	values "iSymbText2" 1,2,3,4,5,6,7,8,9,10,11,12,0
	values "iSymbText2_prev" 1,2,3,4,5,6,7,8,9,10,11,12,0
	
	if GLOB_MODPAR_NAME = "symb_text_2" then
		iSymbText2 = 0
		for i = 1 to vardim1(_stHoleType)
			if symb_text_2 = _stHoleType[i] then
				iSymbText2 = i
				i = vardim1(_stHoleType)
			endif
		next i
	
		parameters iSymbText2 = iSymbText2
	else
		iSymbText2 = min(max(iSymbText2,0),vardim1(_stHoleType))
		if iSymbText2 > 0 then
			symb_text_2 = _stHoleType[iSymbText2]
		else
			symb_text_2 = customText
		endif
		parameters symb_text_2 = symb_text_2
	endif
	if iSymbText2_prev <> iSymbText2 & iSymbText2 <> 0 then
		symb_text_2_short	= _stHoleTypeShort[iSymbText2]
		iSymbText2Short		= iSymbText2
		parameters symb_text_2_short = symb_text_2_short, iSymbText2Short = iSymbText2Short
	endif
	parameters iSymbText2_prev = iSymbText2
	
	!!values "symb_text_2_short" _stHoleTypeShort, CUSTOM
	values "iSymbText2Short" 1,2,3,4,5,6,7,8,9,10,11,12,0
	if GLOB_MODPAR_NAME = "symb_text_2_short" then
		iSymbText2Short = 0
		for i = 1 to vardim1(_stHoleTypeShort)
			if symb_text_2_short = _stHoleTypeShort[i] then
				iSymbText2Short = i
				i = vardim1(_stHoleTypeShort)
			endif
		next i
		parameters iSymbText2Short = iSymbText2Short
	else
		iSymbText2Short = min(max(iSymbText2Short,0),vardim1(_stHoleTypeShort))
		if iSymbText2Short > 0 then
			symb_text_2_short = _stHoleTypeShort[iSymbText2Short]
			parameters symb_text_2_short = symb_text_2_short
		endif
	endif
else
	! ------------------------ Text -------------------------
	values "symb_text"	_stHoleType[1],
						_stHoleType[3],
						_stHoleType[4],
						_stHoleType[6],
						_stHoleType[7],
						_stHoleType[9],
						_stHoleType[10],
						_stHoleType[12],
						customText
	values "iSymbText" 1,3,4,6,7,9,10,12,0
	values "iSymbText_prev" 1,3,4,6,7,9,10,12,0
	
	if GLOB_MODPAR_NAME = "symb_text" then
		iSymbText = 0
		for i = 1 to vardim1(_stHoleType)
			if symb_text = _stHoleType[i] then
				iSymbText = i
				i = vardim1(_stHoleType)
			endif
		next i
	
		parameters iSymbText = iSymbText
	else
		iSymbText = min(max(iSymbText,0),vardim1(_stHoleType))
		if iSymbText > 0 then
			symb_text = _stHoleType[iSymbText]
		else
			symb_text = customText
		endif
		parameters symb_text = symb_text
	endif
	if iSymbText_prev <> iSymbText & iSymbText <> 0 then
		symb_text_short	= _stHoleTypeShort[iSymbText]
		iSymbTextShort	= iSymbText
		parameters symb_text_short = symb_text_short, iSymbTextShort = iSymbTextShort
	endif
	parameters iSymbText_prev = iSymbText
	
	values "iSymbTextShort" 1,3,4,6,7,9,10,12,0
	if GLOB_MODPAR_NAME = "symb_text_short" then
		iSymbTextShort = 0
		for i = 1 to vardim1(_stHoleTypeShort)
			if symb_text_short = _stHoleTypeShort[i] then
				iSymbTextShort = i
				i = vardim1(_stHoleTypeShort)
			endif
		next i
		parameters iSymbTextShort = iSymbTextShort
	else
		iSymbTextShort = min(max(iSymbTextShort,0),vardim1(_stHoleTypeShort))
		if iSymbTextShort > 0 then
			symb_text_short = _stHoleTypeShort[iSymbTextShort]
			parameters symb_text_short = symb_text_short
		endif
	endif
endif

! ------------------------ Prefix -------------------------
dim _stUsedType[]
dim _stUsedTypeShort[]
for iv = 1 to vardim1(stUsedType)
	_stUsedType[iv] = stUsedType[iv][FULL_NAME]
	_stUsedTypeShort[iv] = stUsedType[iv][SHORT_NAME]
next iv

values "symb_use" _stUsedType, customText
values "iSymbUse" 1,2,3,4,5,0
values "iSymbUse_prev" 1,2,3,4,5,0

if GLOB_MODPAR_NAME = "symb_use" then
	iSymbUse = 0
	for i = 1 to vardim1(_stUsedType)
		if symb_use = _stUsedType[i] then
			iSymbUse = i
			i = vardim1(_stUsedType)
		endif
	next i

	parameters iSymbUse = iSymbUse
else
	iSymbUse = min(max(iSymbUse,0),vardim1(_stUsedType))
	if iSymbUse > 0 then
		symb_use = _stUsedType[iSymbUse]
	else
		symb_use = customText
	endif
	parameters symb_use = symb_use
endif
if iSymbUse_prev <> iSymbUse & iSymbUse <> 0 then
	symb_use_short	= _stUsedTypeShort[iSymbUse]
	iSymbUseShort	= iSymbUse
	parameters symb_use_short = symb_use_short, iSymbUseShort = iSymbUseShort
endif
parameters iSymbUse_prev = iSymbUse

!!values "symb_use_short" _stUsedTypeShort, CUSTOM
values "iSymbUseShort" 1,2,3,4,5,0
if GLOB_MODPAR_NAME = "symb_use_short" then
	iSymbUseShort = 0
	for i = 1 to vardim1(_stUsedTypeShort)
		if symb_use_short = _stUsedTypeShort[i] then
			iSymbUseShort = i
			i = vardim1(_stUsedTypeShort)
		endif
	next i
	parameters iSymbUseShort = iSymbUseShort
else
	iSymbUseShort = min(max(iSymbUseShort,0),vardim1(_stUsedTypeShort))
	if iSymbUseShort > 0 then
		symb_use_short = _stUsedTypeShort[iSymbUseShort]
		parameters symb_use_short = symb_use_short
	endif
endif

if not(bShowPrefix) then
	hideparameter	"symb_use",
					"iSymbUse",
					"iSymbUse_prev",
					"symb_use_short",
					"iSymbUseShort"

	lock			"symb_use",
					"iSymbUse",
					"iSymbUse_prev",
					"symb_use_short",
					"iSymbUseShort"
endif

! ------------------------ Sizes ------------------------
values "symbSizes" stSizes
values "iSymbSizes" 1,2
if GLOB_MODPAR_NAME = "symbSizes" then
	for i = 1 to vardim1(stSizes)
		if symbSizes = stSizes[i] then
			iSymbSizes = i
			i = vardim1(stSizes)
		endif
	next i
	parameters iSymbSizes = iSymbSizes
else
	symbSizes = stSizes[min(max(iSymbSizes,1),vardim1(stSizes))]
	parameters symbSizes = symbSizes
endif

if not(bShowSizes) then
	hideparameter	"symbSizes", "iSymbSizes", "workingUnit", "iWorkingUnit", "iDecimalOptions"
	lock			"symbSizes", "iSymbSizes", "workingUnit", "iWorkingUnit", "iDecimalOptions"
endif

! ------------------------ Working Unit -------------------------
values "workingUnit" stUnitFormats
values "iWorkingUnit" 1, 2, 3, 4, 5
if GLOB_MODPAR_NAME = "workingUnit" then
	for i = 1 to vardim1(stUnitFormats)
		if workingUnit = stUnitFormats[i] then
			iWorkingUnit = i
			i = vardim1(stUnitFormats)
		endif
	next i
	parameters iWorkingUnit = iWorkingUnit
else
	workingUnit = stUnitFormats[min(max(iWorkingUnit,1),vardim1(stUnitFormats))]
	parameters workingUnit = workingUnit
endif

if iWorkingUnit = WORKUNIT_MM then values "iDecimalOptions" 0, 1
if iWorkingUnit = WORKUNIT_CM then values "iDecimalOptions" 0, 1, 2
if iWorkingUnit = WORKUNIT_METER then values "iDecimalOptions" 0, 1, 2, 3, 4

if iWorkingUnit = WORKUNIT_INCH or iWorkingUnit = WORKUNIT_PROJECT then
	hideparameter	"iDecimalOptions"
	lock			"iDecimalOptions"
endif

! ------------------------ Custom Text -------------------------
if not(bShowCustomText) then
	hideparameter	"symb_cust_text"
	lock			"symb_cust_text"
endif


! ==============================================================================
! Text Style
! ==============================================================================

values "fontScale" stFontScale
values "iFontScale" FONTSCALE_PAPER, FONTSCALE_MODEL
if GLOB_MODPAR_NAME = "fontScale" then
	iFontScale = FONTSCALE_PAPER
	if fontScale = stFontScale[2] then iFontScale = FONTSCALE_MODEL
	parameters iFontScale = iFontScale
else
	fontScale = stFontScale[1]
	if iFontScale = FONTSCALE_MODEL then fontScale = stFontScale[2]
	parameters fontScale = fontScale
endif

values "fontSizePaper" range (0,) 
values "gs_font_size" range (0,) 

if iFontScale = FONTSCALE_PAPER then
	lock			"gs_font_size"
	hideparameter	"gs_font_size"
else
	lock			"fontSizePaper"
	hideparameter	"fontSizePaper"
endif


if gs_text_width < EPS then parameters gs_text_width = 0
if not(gs_text_wrap) then
	hideparameter	"gs_text_width"
	lock			"gs_text_width"
endif

if gs_displaytext + bShowPrefix + bShowSizes + bShowCustomText < 1 then
	hideparameter	"gs_text",
					"fontSizePaper",
					"gs_font_size",
					"gs_font_pen",
					"gs_text_style_bold",
					"gs_text_style_italic",
					"gs_text_style_underline",
					"fontType",
					"fontScale",
					"iFontScale",
					"gs_text_wrap",
					"gs_text_width",
					"angle",
					"gs_textoffset_x",
					"gs_textoffset_y"

	lock			"gs_text",
					"fontSizePaper",
					"gs_font_size",
					"gs_font_pen",
					"gs_text_style_bold",
					"gs_text_style_italic",
					"gs_text_style_underline",
					"fontType",
					"fontScale",
					"iFontScale",
					"gs_text_wrap",
					"gs_text_width",
					"angle",
					"gs_textoffset_x",
					"gs_textoffset_y"
endif


! ==============================================================================
! 3D Representation
! ==============================================================================
if not(bShow3D) then
	hideparameter	"bSolid3D", "gs_mat_solid", "gs_3D_cont_pen"
	lock			"bSolid3D", "gs_mat_solid", "gs_3D_cont_pen"
endif
if not(bSolid3D) then
	hideparameter	"gs_mat_solid"
	lock			"gs_mat_solid"
endif


! ==============================================================================
! UI Support
! ==============================================================================
for i = 1 to 5 - (gs_displaytext + bShowPrefix + bShowSizes + bShowCustomText < EPS) - (iSymbolType = FLOOR_RECESS)
	put i
next i
values "gs_ui_current_page" get(nsp)

! ==============================================================================
! Levels
! ==============================================================================
parameters ac_bottomlevel	= -gs_slab_thickness - EPS
parameters ac_toplevel		= 0 + EPS



