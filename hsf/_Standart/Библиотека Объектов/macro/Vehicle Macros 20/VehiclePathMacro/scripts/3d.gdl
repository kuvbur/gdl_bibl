
if not(gs_path_move) then

	wheelAngle	= 0
	wheelRot	= 0
	posX		= 0
	posY		= 0
	posZ		= 0
	dirAngle	= 0
	riseAngle	= 0

else

! =============================================================================
! Editable Hotspots
! =============================================================================

	if gs_path_show_3D then
		for i=1 to gs_pathNodes_Num

			idx = i+1

			! Start vector
			if i=1 then
				add gs_pathNodes_Pos[2][1], gs_pathNodes_Pos[2][2], gs_pathNodes_Pos[2][3]
				hotspot gs_pathNodes_Pos[1][1],gs_pathNodes_Pos[1][2],	0,						hsId,   gs_pathNodes_Pos[1][3], 1+128
				hotspot gs_pathNodes_Pos[1][1],gs_pathNodes_Pos[1][2],	-1,						hsId+1, gs_pathNodes_Pos[1][3], 3
				hotspot gs_pathNodes_Pos[1][1],gs_pathNodes_Pos[1][2],	gs_pathNodes_Pos[1][3],	hsId+2, gs_pathNodes_Pos[1][3], 2
				hsId = hsId + 3
				del 1
			endif

			hotspot gs_pathNodes_Pos[idx][1],gs_pathNodes_Pos[idx][2],	0,							hsId,   gs_pathNodes_Pos[idx][3], 1+128
			hotspot gs_pathNodes_Pos[idx][1],gs_pathNodes_Pos[idx][2],	-1,							hsId+1, gs_pathNodes_Pos[idx][3], 3
			hotspot gs_pathNodes_Pos[idx][1],gs_pathNodes_Pos[idx][2],	gs_pathNodes_Pos[idx][3],	hsId+2, gs_pathNodes_Pos[idx][3], 2
			hsId = hsId + 3

			! End vector
			if i=gs_pathNodes_Num then
				add gs_pathNodes_Pos[gs_pathNodes_Num+1][1], gs_pathNodes_Pos[gs_pathNodes_Num+1][2], gs_pathNodes_Pos[gs_pathNodes_Num+1][3]
				hotspot gs_pathNodes_Pos[gs_pathNodes_Num+2][1],gs_pathNodes_Pos[gs_pathNodes_Num+2][2],	0,									hsId,   gs_pathNodes_Pos[gs_pathNodes_Num+2][3], 1+128
				hotspot gs_pathNodes_Pos[gs_pathNodes_Num+2][1],gs_pathNodes_Pos[gs_pathNodes_Num+2][2],	-1,									hsId+1, gs_pathNodes_Pos[gs_pathNodes_Num+2][3], 3
				hotspot gs_pathNodes_Pos[gs_pathNodes_Num+2][1],gs_pathNodes_Pos[gs_pathNodes_Num+2][2],	gs_pathNodes_Pos[gs_pathNodes_Num+2][3],	hsId+2, gs_pathNodes_Pos[gs_pathNodes_Num+2][3], 2
				hsId = hsId + 3
				del 1
			endif
		next i
	endif

! =============================================================================
! Visualization of Skeleton
! =============================================================================

	if gs_path_show_3D then
		sizeHpts = 0.05 ! Size of Hotspots

		for i=1 to gs_pathNodes_Num - 1
			pen gs_path_pen
			add sect[i][1],sect[i][2],sect[i][3]
			add -sizeHpts/2,-sizeHpts/2,-sizeHpts/2
			block sizeHpts,sizeHpts,sizeHpts
			del 2

			add sect[i][10],sect[i][11],sect[i][12]
			add -sizeHpts/2,-sizeHpts/2,-sizeHpts/2
			block sizeHpts,sizeHpts,sizeHpts
			del 2

!			lin_ sect[i][1],sect[i][2],sect[i][3],
!				 sect[i][10],sect[i][11],sect[i][12]

			pen gs_path_line_pen
			add sect[i][4],sect[i][5],sect[i][6]
			add -sizeHpts/2,-sizeHpts/2,-sizeHpts/2
			block sizeHpts,sizeHpts,sizeHpts
			del 2

			add sect[i][7],sect[i][8],sect[i][9]
			add -sizeHpts/2,-sizeHpts/2,-sizeHpts/2
			block sizeHpts,sizeHpts,sizeHpts
			del 2

			lin_ sect[i][1],sect[i][2],sect[i][3],
				 sect[i][4],sect[i][5],sect[i][6]
			lin_ sect[i][10],sect[i][11],sect[i][12],
				 sect[i][7],sect[i][8],sect[i][9]
		next i
	endif

! =============================================================================
! Draw Bezier Path
! =============================================================================

	if gs_path_show_3D then
		pen gs_path_pen
		for i=1 to vardim1(pathPnts) - 1
			lin_ pathPnts[i][1],   pathPnts[i][2],   pathPnts[i][3],
				 pathPnts[i+1][1], pathPnts[i+1][2], pathPnts[i+1][3]
		next i
	endif

! =============================================================================
! Calculate vehicle transformation
! =============================================================================

	idx = min(frameIdx, vardim1(pathPnts))
	posX = pathPnts[idx][1]
	posY = pathPnts[idx][2]
	posZ = pathPnts[idx][3]

	! Front wheel tangent
	if idx > 1 then
		dirFrontX = pathPnts[idx - 1][1] - posX
		dirFrontY = pathPnts[idx - 1][2] - posY
		dirFrontZ = pathPnts[idx - 1][3] - posZ
	else
		dirFrontX = gs_pathNodes_Pos[2][1] - gs_pathNodes_Pos[1][1]
		dirFrontY = gs_pathNodes_Pos[2][2] - gs_pathNodes_Pos[1][2]
		dirFrontZ = gs_pathNodes_Pos[2][3] - gs_pathNodes_Pos[1][3]
	endif

	! Car body direction
	dirCarX = pathPnts[idx][4] - pathPnts[idx][1]
	dirCarY = pathPnts[idx][5] - pathPnts[idx][2]
	dirCarZ = pathPnts[idx][6] - pathPnts[idx][3]

	Lxy = sqr(dirCarX^2 + dirCarY^2)
	if abs(Lxy) > EPS then
		riseAngle = -atn(dirCarZ / Lxy)
	else
		riseAngle = 0
	endif

	vx = dirFrontX
	vy = dirFrontY
	gosub 103	 ! Direction angle
	dirFrontAngle = angle

	vx = dirCarX
	vy = dirCarY
	gosub 103	 ! Direction angle
	dirAngle = angle

	wheelAngle = dirFrontAngle - dirAngle

	wheelRot = (pathPnts[idx][7] / (wheelDiam * PI)) * 360
endif


if test then
	hotspot  0,			0,	0, hsId,   testPos, 1+128
	hotspot  1,			0,	0, hsId+1, testPos, 3
	hotspot -testPos,	0,	0, hsId+2, testPos, 2
	hsId = hsId + 3
endif



end wheelAngle, wheelRot,
	posX,posY,posZ,
	dirAngle, riseAngle





103:

if abs(vx) < EPS & abs(vy) < EPS then
	angle = 0
	return
endif

if abs(vx) < EPS then
	if vy > 0 then
		angle = 90
	else
		angle = 270
	endif
else
	angle = atn(vy / vx)
	if vx >= 0 then
		if angle < 0 then
			angle = angle + 360
		endif
	else
		angle = 180 + angle
	endif
endif

return





