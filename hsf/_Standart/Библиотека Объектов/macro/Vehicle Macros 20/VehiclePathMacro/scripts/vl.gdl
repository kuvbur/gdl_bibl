
if test then
	values "testPos" range[0,)
endif

if not(gs_path_move) then
	lock "gs_path_show_2D", "gs_path_show_3D", "gs_pathNodes_Num", "gs_path_fps", "gs_path_start_frame"
	hideparameter "gs_path_show_2D", "gs_path_show_3D", "gs_pathNodes_Num", "gs_path_fps", "gs_path_start_frame"
endif

if not(gs_path_move and (gs_path_show_2D or gs_path_show_3D)) then
	lock "gs_path_pen", "gs_path_line_pen"
	hideparameter "gs_path_pen", "gs_path_line_pen"
endif

maxAngle = 230
maxSpeed = 80

values "gs_pathNodes_Angle" range[0,maxAngle]
values "gs_pathNodes_Speed" range[0,maxSpeed]
ratio = maxAngle / maxSpeed

if GLOB_MODPAR_NAME = "gs_pathNodes_Angle" then
	for i=1 to vardim1(gs_pathNodes_Angle)

		if gs_pathNodes_Angle[i] > (maxAngle + (360 - maxAngle) / 2) then
			gs_pathNodes_Angle[i] = 20
			parameters gs_pathNodes_Angle[i] = 20
		else
			if gs_pathNodes_Angle[i] > maxAngle then
				gs_pathNodes_Angle[i] = maxAngle
				parameters gs_pathNodes_Angle[i] = maxAngle
			endif
		endif

		gs_pathNodes_Speed[i] = gs_pathNodes_Angle[i] / Ratio
		parameters gs_pathNodes_Speed[i] = gs_pathNodes_Speed[i]
	next i
else
	for i=1 to vardim1(gs_pathNodes_Angle)
		gs_pathNodes_Angle[i] = gs_pathNodes_Speed[i] * Ratio
		parameters gs_pathNodes_Angle[i] = gs_pathNodes_Angle[i]
	next i
endif

values "gs_path_fps" range[1,]
values "gs_path_start_frame" range[1,]

values "gs_pathNodes_Num" range[2,100]

if GLOB_MODPAR_NAME = "gs_pathNodes_Num" then

	addLength = 5.0

	if gs_pathNodes_Num_old > gs_pathNodes_Num then
		vx = gs_pathNodes_Pos[gs_pathNodes_Num + 1][1] - gs_pathNodes_Pos[gs_pathNodes_Num + 2][1]
		vy = gs_pathNodes_Pos[gs_pathNodes_Num + 1][2] - gs_pathNodes_Pos[gs_pathNodes_Num + 2][2]
		vz = gs_pathNodes_Pos[gs_pathNodes_Num + 1][3] - gs_pathNodes_Pos[gs_pathNodes_Num + 2][3]
		L = sqr(vx^2 + vy^2 + vz^2)		! Unit vector
		if L > EPS then
			vx = vx / L
			vy = vy / L
			vz = vz / L
		endif
		gs_pathNodes_Pos[gs_pathNodes_Num + 2][1] = vx
		gs_pathNodes_Pos[gs_pathNodes_Num + 2][2] = vy
		gs_pathNodes_Pos[gs_pathNodes_Num + 2][3] = vz
	endif

	if gs_pathNodes_Num_old < gs_pathNodes_Num then
		px = gs_pathNodes_Pos[gs_pathNodes_Num_old + 1][1]
		py = gs_pathNodes_Pos[gs_pathNodes_Num_old + 1][2]
		pz = gs_pathNodes_Pos[gs_pathNodes_Num_old + 1][3]
		vx = gs_pathNodes_Pos[gs_pathNodes_Num_old + 2][1]
		vy = gs_pathNodes_Pos[gs_pathNodes_Num_old + 2][2]
		vz = gs_pathNodes_Pos[gs_pathNodes_Num_old + 2][3]
		L = sqr(vx^2 + vy^2 + vz^2)		! Unit vector
		if L > EPS then
			vx = vx / L
			vy = vy / L
			vz = vz / L
		endif

		for i=gs_pathNodes_Num_old to gs_pathNodes_Num
			px = px - addLength * vx
			py = py - addLength * vy
			pz = pz - addLength * vz
			gs_pathNodes_Pos[i + 2][1] = px
			gs_pathNodes_Pos[i + 2][2] = py
			gs_pathNodes_Pos[i + 2][3] = pz
		next i
		gs_pathNodes_Pos[gs_pathNodes_Num + 2][1] = vx
		gs_pathNodes_Pos[gs_pathNodes_Num + 2][2] = vy
		gs_pathNodes_Pos[gs_pathNodes_Num + 2][3] = vz
		gs_pathNodes_Speed[gs_pathNodes_Num + 2] = 15
		gs_pathNodes_Angle[gs_pathNodes_Num + 2] = gs_pathNodes_Speed[gs_pathNodes_Num + 2] * Ratio

	endif

	for t=1 to vardim1(gs_pathNodes_Angle)
		if gs_pathNodes_Angle[t] < eps then
			gs_pathNodes_Speed[t]= 15
			gs_pathNodes_Angle[t]= gs_pathNodes_Speed[t]* Ratio
		endif
	next t

	parameters gs_pathNodes_Pos = gs_pathNodes_Pos,
		gs_pathNodes_Angle = gs_pathNodes_Angle,
		gs_pathNodes_Speed = gs_pathNodes_Speed
endif
gs_pathNodes_Num_old = gs_pathNodes_Num
parameters gs_pathNodes_Num_old = gs_pathNodes_Num

