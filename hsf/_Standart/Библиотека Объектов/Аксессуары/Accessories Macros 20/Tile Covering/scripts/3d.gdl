
if gs_detlevel_3Dm=0 then end

tile_num=ceil(a/(tile_width+space_x))+1
row_num=ceil(b/cos(ac_pitch)/tile_space)
beta=atn((tile_thk+space_z)/(tile_length-(tile_length-tile_space)))
dist=tile_length*((tile_thk+space_z)/(tile_space))

group "tiles"
	rotx ac_pitch
	addz dist
	If ac_pitch<0 Then
		addy row_num*tile_space
		muly -1
	EndIf
	rotx -beta
	if tile_group=1 then
		if tile_type=2 then
			if tile_chord>0 then
				tile_rad=(tile_chord^2+(tile_width/2)^2)/(2*tile_chord)
			else
				tile_type=1
			endif
		endif

		for i=1 to row_num
			if int(i/2)=i/2 then
				addx tile_width/2
			else
				addx 0
			endif

			if tile_num/2=int(tile_num/2) then
				actual_num=tile_num
			else
				actual_num=tile_num+1
			endif

			for j=1 to actual_num
				gosub 10
				addx tile_width+space_x
			next j
			del actual_num+1
			add 0,tile_space,tile_thk+space_z
		next i
		del row_num
	else
		for i=1 to row_num
			for j=1 to tile_num
				gosub 10
				addx tile_width
			next j
			del tile_num
			add 0,tile_space,tile_thk+space_z
		next i
		del row_num
	endif
	del 3
	If ac_picth<0 Then del 2
endgroup
placegroup "tiles"

!!!!result=subgroup("tiles","cutting body")	!! Itt meg van lehetoseg gyorsitasra.
!!!!placegroup result

!!!!killgroup "tiles"
!!!!killgroup "cutting body"

end

10:
if random_mat then
	limit=10
	gen_num=rnd(limit)
	if gen_num<limit/2 then
		material mat_1
	else
		if gen_num>limit/2 and gen_num<3/4*limit then
			material mat_2
		else
			material mat_3
		endif
	endif
else
	material mat_1
endif

!!!!print gs_detlevel_3Dm+tile_type*10+100

gosub gs_detlevel_3Dm+tile_type*10+100

return

!!-------------!!
!! Normal Tile !!
!!-------------!!
111: !! Simple Model
plane_	5,
		-tile_width/2, 0, tile_thk, 15,
		-tile_width/2, tile_length, tile_thk, 15,
		tile_width/2, tile_length, tile_thk, 15,
		tile_width/2, 0, tile_thk, 15,
		-tile_width/2, 0, tile_thk, -1
return

112: !! Detailed Model
prism_	5, tile_thk,
		-tile_width/2, 0, 15,
		-tile_width/2, tile_length, 15,
		tile_width/2, tile_length, 15,
		tile_width/2, 0, 15,
		-tile_width/2, 0, -1
return

!!--------------!!
!! Rounded Tile !!
!!--------------!!
121: !! Simple Model
resol res
if i=1 then goto 110+gs_detlevel_3Dm
addz  tile_thk
poly_	6,
		-tile_width/2, tile_chord, 15,
		0, tile_rad, 915,
		tile_width/2, tile_chord, 3015,
		tile_width/2, tile_length, 15,
		-tile_width/2, tile_length, 15,
		-tile_width/2, tile_chord, -1
del 1
return

122: !! Detailed Model
resol res
if i=1 then goto 110+gs_detlevel_3Dm
prism_	6, tile_thk,
		-tile_width/2, tile_chord, 15,
		0, tile_rad, 915,
		tile_width/2, tile_chord, 3015,
		tile_width/2, tile_length, 15,
		-tile_width/2, tile_length, 15,
		-tile_width/2, tile_chord, -1
return

!!--------------!!
!! Italian Tile !!
!!--------------!!
131: !! Simple Model
resol res
rotz 180
rotx 90
ruled	4, 16+32,
		-0.10, 2*tile_thk, 1,
		-0.10, 0, 1,
		0.10, 0, 1,
		0.10, 2*tile_thk, 1,

		-0.125, 2*tile_thk, tile_length,
		-0.125, 0,tile_length,
		0.125, 0, tile_length,
		0.125, 2*tile_thk, tile_length
del 2

add -tile_width/2,0,tile_thk
rotz 90
revolve 2, 180, 16+32,
		0, 0.075+tile_thk, 1,
		tile_length, (0.075+tile_thk)*0.11/0.15, 1
del 2

return

132: !! Detailed Model
resol res
rotz 180
rotx 90
ruled	9, 1+2+16+32,
		-0.10, 0, 1,
		0.10, 0, 1,
		0.10, 2*tile_thk, 1,
		0.10-tile_thk, 2*tile_thk, 1,
		0.10-tile_thk, tile_thk, 1,
		-0.10+tile_thk, tile_thk, 1,
		-0.10+tile_thk, 2*tile_thk, 1,
		-0.10, 2*tile_thk, 1,
		-0.10, 0, 1,

		-0.125, 0, tile_length,
		0.125, 0, tile_length,
		0.125, 2*tile_thk, tile_length,
		0.125-tile_thk, 2*tile_thk, tile_length,
		0.125-tile_thk, tile_thk, tile_length,
		-0.125+tile_thk, tile_thk, tile_length,
		-0.125+tile_thk, 2*tile_thk, tile_length,
		-0.125, 2*tile_thk, tile_length,
		-0.125, 0, tile_length
del 2

add -tile_width/2,0,tile_thk
rotx -90
sweep	7, 2, 0, 0.11/0.15, 1+2+16+32,
		-0.075, 0, 1,
		0, 0, 901,
		0, 180, 4001,
		0.075+tile_thk, 0, 1,
		0, 0, 901,
		0, -180, 4001,
		-0.075, 0, -1,

		0, 0, 0,
		0, 0, tile_length
del 2

return
