
EPS=0.00001
main_cp_num=vardim1(ac_coords)
cp_all_num=vardim1(ac_coords)

r=1
cp_num=0
for i=1 to vardim1(ac_coords)
	if ac_coords[i][1]>1 1/2" then cp_num=cp_num+1
next i

if cp_num=1 and (abs(ac_coords[1][2]-ac_coords[vardim1(ac_coords)][2])>eps Or abs(ac_coords[1][3]-ac_coords[vardim1(ac_coords)][3])>eps) then
	ac_coords[vardim1(ac_coords)][1]=1"
	last_line=vardim1(ac_coords)+1
	ac_coords[last_line][1]=2"
	ac_coords[last_line][2]=ac_coords[1][2]
	ac_coords[last_line][3]=ac_coords[1][3]
endif

!--------------!
! Inner Values !
!--------------!

values "wain_maxthk" range(wain_thk,wain_width/2)
if wain_type<>`Панельная Обшивка 4` then hideparameter "wain_maxthk"

if gs_detlevel_3D=`Детальный` then gs_detlevel_3Dm=2
if gs_detlevel_3D=`Простой` then gs_detlevel_3Dm=1
if gs_detlevel_3D=`Откл.` then gs_detlevel_3Dm=0

if wain_type=`Панельная Обшивка 1` then wain_type_m=1
if wain_type=`Панельная Обшивка 2` then wain_type_m=2
if wain_type=`Панельная Обшивка 3` then wain_type_m=3
if wain_type=`Панельная Обшивка 4` then wain_type_m=4

pvalue_1=`Обшивка под Крышей` : pvalue_2=`Обшивка над Крышей`
values "wain_pos" pvalue_1,pvalue_2

!------------------
! Scan the polygons
!------------------

exam=1
crd_end = 0
dim crd_begend[][]
for i=1 to cp_num
	crd_num=0
	crd_beg=crd_end+1
	r=crd_beg

	while ac_coords[r][1]>eps and ac_coords[r][1]<1 1/2" and exam<>0 do
		crd_num=crd_num+1
		r=r+1
		if r=vardim1(ac_coords) then
			exam=0
		endif
	endwhile
	crd_end=crd_beg+crd_num

	crd_begend[i][1]=crd_beg
	crd_begend[i][2]=crd_end
next i

!-------------------------------
! Calculate the custom direction
!-------------------------------

delta=0
if ac_pitch<eps then
	ref_length=sqr(ref_direction[1][3]^2+ref_direction[1][4]^2)
	if ref_direction[1][4]>=0 then
		delta=acs(ref_direction[1][3]/ref_length)
	else
		delta=360-acs(ref_direction[1][3]/ref_length)
	endif
endif

! ---------------------------------------------------
! Scan the global boundary rectangle for the required
! boundary rectangle in the local coordinate system
! ---------------------------------------------------

oversize=0.5	! Oversize for the cutting body

dim whole_loc_poly[][]
dim loc_coords[][]

if ac_pitch<eps then
	if delta=0 then
		loc_coords=ac_coords
	else
		for num=1 to vardim1(ac_coords)
			loc_coords[num][1]=ac_coords[num][1]
			loc_coords[num][2]=ac_coords[num][2]*cos(delta)+ac_coords[num][3]*sin(delta)
			loc_coords[num][3]=-ac_coords[num][2]*sin(delta)+ac_coords[num][3]*cos(delta)
		next num
	endif
else
	loc_coords=ac_coords
endif

for i=1 to vardim1(loc_coords)
	put loc_coords[i][2]
next i

min_x=min(use(nsp))
max_x=max(get(nsp))

for i=1 to vardim1(loc_coords)
	put loc_coords[i][3]
next i

min_y=min(use(nsp))
max_y=max(get(nsp))

whole_loc_poly[1][1]=min_x-oversize
whole_loc_poly[1][2]=min_y-oversize
whole_loc_poly[1][3]=min_x-oversize
whole_loc_poly[1][4]=max_y+oversize
whole_loc_poly[1][5]=max_x+oversize
whole_loc_poly[1][6]=max_y+oversize
whole_loc_poly[1][7]=max_x+oversize
whole_loc_poly[1][8]=min_y-oversize

if gs_gdl_debug then
	print "min_x=",min_x,"min_y=",min_y,"max_x=",max_x,"max_y=",max_y
	print whole_loc_poly[1][1],whole_loc_poly[1][2]
	print whole_loc_poly[1][3],whole_loc_poly[1][4]
	print whole_loc_poly[1][5],whole_loc_poly[1][6]
	print whole_loc_poly[1][7],whole_loc_poly[1][8]
endif

!------------------------
! Calculate the direction
!------------------------

if (ac_ref_coords[1][3]-ac_ref_coords[1][1])>eps then
	if (ac_ref_coords[1][3]-ac_ref_coords[1][1])>0 then
		beta=atn((ac_ref_coords[1][4]-ac_ref_coords[1][2])/(ac_ref_coords[1][3]-ac_ref_coords[1][1]))
	endif
	if (ac_ref_coords[1][3]-ac_ref_coords[1][1])<0then
		beta=atn((ac_ref_coords[1][4]-ac_ref_coords[1][2])/(ac_ref_coords[1][3]-ac_ref_coords[1][1]))
	endif
else
	beta=90
endif

!-----------------------------------------------
! Calculate the main size and number of elements
!-----------------------------------------------

a_size=whole_loc_poly[1][7]-whole_loc_poly[1][1]
b_size=whole_loc_poly[1][6]-whole_loc_poly[1][2]

if wain_type=`Панельная Обшивка 3` then
	y_size=0.14
else
	y_size=0.09
endif
m=ceil(b_size/y_size) ! Number of ceiling

left_bot_x=ac_ref_coords[1][1]+whole_loc_poly[1][1]*cos(beta)-whole_loc_poly[1][2]*sin(beta)   ! Calculate the left-bottom corner
left_bot_y=ac_ref_coords[1][2]+whole_loc_poly[1][1]*sin(beta)+whole_loc_poly[1][2]*cos(beta)   ! Calculate the left-bottom corner

