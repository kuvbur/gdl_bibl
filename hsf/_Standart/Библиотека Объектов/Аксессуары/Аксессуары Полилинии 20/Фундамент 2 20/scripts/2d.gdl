
pen gs_cont_pen

If hole=1 Then
	num=vardim1(ac_coords)
Else
	num=main_cp_num
EndIf

unID=1
For i=1 to num
	hotspot2 ac_coords[i][2],ac_coords[i][3],unID : unID=unID+1
next i

dim data[][]
dim section_points[][]
dim empty[1][2]
	empty[1][1] = 0
	empty[1][2] = 0

If not(hole) Then cp_num=1

For z=1 To 3
	If z=1 Then offset=-(Fthick-StemT)/2
	If z=2 Then offset=Fthick-(Fthick-StemT)/2
	If z=3 Then offset=StemT

	g=1
	For j=1 To cp_num
		If j=1 Then
			dir_x=-1
			dir_y=1
			hole_dir=1
		Else
			dir_x=1
			dir_y=-1
			hole_dir=-1
		EndIf

		!-------------------------
		! Start the polygon offset
		!-------------------------

		crd_beg=crd_begend[j][1]
		crd_end=crd_begend[j][2]
		For i=crd_beg To crd_end                             ! Precalculate the data
			pen 2                                            ! Draw the polygon beFore the offset
			If i<crd_end Then
				data[i][3]=ac_coords[i+1][2]-ac_coords[i][2]       ! Direction vector
				data[i][4]=ac_coords[i+1][3]-ac_coords[i][3]       ! Direction vector
			Else
				if open_polygon then
					data[i][3]=data[i-1][3]                             ! Direction vector
					data[i][4]=data[i-1][4]                             ! Direction vector
				else
					data[i][3]=ac_coords[crd_beg+1][2]-ac_coords[i][2]  ! Direction vector
					data[i][4]=ac_coords[crd_beg+1][3]-ac_coords[i][3]  ! Direction vector
				endif
			EndIf

			If abs(data[i][3])<EPS Then data[i][3]=0
			If abs(data[i][4])<EPS Then data[i][4]=0

			length=sqr(data[i][3]^2+data[i][4]^2)            ! Make the unit vector
			vect_x=offset*dir_x*data[i][4]/length
			vect_y=offset*dir_y*data[i][3]/length

			data[i][1]=ac_coords[i][2]+vect_x
			data[i][2]=ac_coords[i][3]+vect_y
		next i

		For i=crd_beg To crd_end-1
			x0=data[i][1]
			y0=data[i][2]
			v_1=data[i][3]
			v_2=data[i][4]

			a0=data[i+1][1]
			b0=data[i+1][2]
			u_1=data[i+1][3]
			u_2=data[i+1][4]

			if open_polygon then
				if i=crd_beg then
					section_points[g][1]=1"
					section_points[g][2]=x0
					section_points[g][3]=y0
					g=g+1
				endif
				if i=crd_end-1 then
					section_points[g][1]=1"
					section_points[g][2]=a0
					section_points[g][3]=b0
					g=g+1
				endif
			endif

			If abs(v_1*u_2-u_1*v_2)>EPS Then   ! If the points are situated in a line
				y=((v_2*(u_2*a0-u_1*b0))-(u_2*(v_2*x0-v_1*y0)))/(v_1*u_2-u_1*v_2)
				If abs(u_2)>eps Then
					x=(u_2*a0-u_1*b0+u_1*y)/u_2
				Else
					x=(v_2*x0-v_1*y0+v_1*y)/v_2
				EndIf

				If i=crd_end-1 Then
					section_points[g][1]=2"
				Else
					section_points[g][1]=1"
				EndIf
				section_points[g][2]=x
				section_points[g][3]=y

				g=g+1
			EndIf
		Next i
	Next j

	sn=vardim1(section_points)
	if open_polygon then
		sn=sn-1
	endif

	line_memo=1
	For s=1 To sn
		!!---- Drawing lines
		If abs(section_points[s][1])-1"<eps Then
			line2 section_points[s][2], section_points[s][3], section_points[s+1][2], section_points[s+1][3]
		Else
			line2 section_points[s][2], section_points[s][3], section_points[line_memo][2], section_points[line_memo][3]
			line_memo=s+1
		EndIf

		!!---- Drawing hotspots
		hotspot2 section_points[s][2],section_points[s][3],unID : unID=unID+1
	Next s

	data=empty
	section_points=empty
Next z
