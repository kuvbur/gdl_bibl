
! ==============================================================================
! Floor Plan View
! ==============================================================================
! ----- Display with floorplan cutplane ------------------------------------
gs_cutplane_height	= GLOB_CSTORY_ELEV - GLOB_HSTORY_ELEV + GLOB_CUTPLANES_INFO[1]
gs_top_range_height	= GLOB_CSTORY_ELEV - GLOB_HSTORY_ELEV + GLOB_CUTPLANES_INFO[2]
if AC_symb_show_projection_to = PROJECTION_FLOOR_PLAN_RANGE then
	gs_bottom_range_height = GLOB_CSTORY_ELEV - GLOB_HSTORY_ELEV + GLOB_CUTPLANES_INFO[3]	! To Floor Plan Range
else
	gs_bottom_range_height = GLOB_CUTPLANES_INFO[4]	! Absolute Display Limit
endif

doCutplane = (AC_symb_display_option = DISPLAY_PROJECTED | AC_symb_display_option = DISPLAY_OVERHEAD_PROJ)


! ==============================================================================
! Display Lumber Size
! ==============================================================================
if txt_show then

	add2 txt_BasePointX, txt_BasePointY
	rot2 txt_BaseAngle
	nTrans = 2

	unID = 20000
	hotspot2 txt_pos_x,  0,			unID, txt_pos_y, 1+128	: unID=unID+1
	hotspot2 txt_pos_x, -1,			unID, txt_pos_y, 3		: unID=unID+1
	hotspot2 txt_pos_x,  txt_pos_y,	unID, txt_pos_y, 2		: unID=unID+1

	hotspot2  0,			txt_pos_y, unID, txt_pos_x, 1+128	: unID=unID+1
	hotspot2 -1,			txt_pos_y, unID, txt_pos_x, 3		: unID=unID+1
	hotspot2  txt_pos_x,	txt_pos_y, unID, txt_pos_x, 2		: unID=unID+1

	pen txt_pen
	define style textStyle		fontType,	10/GLOB_SCALE*fsz,	5,
								gs_text_style_bold + 2 * gs_text_style_italic + 4 * gs_text_style_underline
	define style{2} fracStyle	fontType, 10/GLOB_SCALE*fsz,
								32 + (gs_text_style_bold + 2 * gs_text_style_italic + 4 * gs_text_style_underline)	! with Superscript

	style textStyle

	nnn = request ("Linear_dimension", "", format_string)
	if iDisplaySize = DISPLAY_CUT_SIZE then
		txt = str{2}(format_string, lumberSize, frac)
	else
		txt = str{2}(format_string, roundedLumberSize, frac)
	endif

	if frac <> "" then
		paragraph "paragraph" 1, 0, 0, 0, 1, 0
			pen txt_pen
			set style textStyle
			""+ txt
			pen txt_pen
			set style fracStyle
			""+ frac
		endparagraph
		textblock "textblock" 0, 5, 0, 1 ,1, 10/GLOB_SCALE,"paragraph"
	endif


	add2 txt_pos_x,txt_pos_y
	nTrans = nTrans + 1

	! --- Oriented View ------------------------------ [

	angleViewRot = 0
	rrr = request ("View_Rotangle", "", angleViewRot)
	totalRotate = (SYMB_ROTANGLE + angleViewRot + txt_BaseAngle) MOD 360

	! Text Rotation - Readable / Always Horizontal / Align with Symbol
	! ----------------------------------------------------------------------
	if typeTextRotation_m = 2 then								! Readable
		if (totalRotate > (gs_readable_angle + eps) & totalRotate < (gs_readable_angle + 180 + eps)) then
			rot2 180
			nTrans = nTrans + 1
		endif
	else
		if typeTextRotation_m = 1 then							! Horizontal
			rot2 totalRotate * (SYMB_MIRRORED - not(SYMB_MIRRORED)) ! 1/-1
			nTrans = nTrans + 1
		endif
	endif
	! ----------------------------------------------------------------------

	if 	frac <> "" then
		richtext2 0,0, "textblock"
	else
		text2 0,0, txt
	endif
	del nTrans
endif


! ------------------------------------------------------------------------------
END gs_cutplane_height, gs_top_range_height, gs_bottom_range_height, doCutplane

