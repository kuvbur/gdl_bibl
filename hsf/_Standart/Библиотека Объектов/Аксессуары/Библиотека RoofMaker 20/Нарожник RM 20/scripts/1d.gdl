
EPS = 0.00001

bEnableRafter		= 1
bEnableSymbol		= 0
bEnableResolution	= 0


! ==============================================================================
! Definitions
! ==============================================================================
!gs_iDisplayStandards
	LANGUAGE_INT		= 1
	LANGUAGE_GER		= 2
	LANGUAGE_CHE		= 3
	LANGUAGE_AUT		= 4
	LANGUAGE_USA		= 5

!AC_symb_display_option
	DISPLAY_PROJECTED			= 1
	DISPLAY_OVERHEAD_PROJ		= 2
	DISPLAY_SYMBOLIC			= 3
	DISPLAY_OUTLINES			= 4
	DISPLAY_OVERHEAD_ALL		= 5

!AC_symb_show_projection_to
	PROJECTION_FLOOR_PLAN_RANGE	= 1
	PROJECTION_DISPLAY_LIMIT	= 2
	PROJECTION_ENTIRE_ELEMENT	= 3


! ==============================================================================
! 2D Display Options
! ==============================================================================

dim stDisplayOptions[5]
	stDisplayOptions[1]		= `Сечение и Низ`
	stDisplayOptions[2]		= `Сечение и Верх`
	stDisplayOptions[3]		= `Символический Вид`
	stDisplayOptions[4]		= `Только Контуры`
	stDisplayOptions[5]		= `Вся Проекция`

dim stProjectionTypes[3]
	stProjectionTypes[1]	= `Согласно Диапазону Плана Этажа`
	stProjectionTypes[2]	= `Согласно Абсолютному Диапазону`
	stProjectionTypes[3]	= `Весь Элемент`

if GLOB_MODPAR_NAME = "gs_symb_display_option" | AC_symb_display_option = 0 then
	AC_symb_display_option = DISPLAY_PROJECTED
	if gs_symb_display_option = stDisplayOptions[2] then AC_symb_display_option = DISPLAY_OVERHEAD_PROJ
	if gs_symb_display_option = stDisplayOptions[3] then AC_symb_display_option = DISPLAY_SYMBOLIC
	if gs_symb_display_option = stDisplayOptions[4] then AC_symb_display_option = DISPLAY_OUTLINES
	if gs_symb_display_option = stDisplayOptions[5] then AC_symb_display_option = DISPLAY_OVERHEAD_ALL
	parameters AC_symb_display_option = AC_symb_display_option
else
	gs_symb_display_option = stDisplayOptions[min(max(1, AC_symb_display_option), vardim1(stDisplayOptions))]
	parameters gs_symb_display_option = gs_symb_display_option
endif

if GLOB_MODPAR_NAME = "gs_symb_show_projection_to" | AC_symb_show_projection_to = 0 then
	AC_symb_show_projection_to = PROJECTION_FLOOR_PLAN_RANGE
	if gs_symb_show_projection_to = stProjectionTypes[2] then AC_symb_show_projection_to = PROJECTION_DISPLAY_LIMIT
	if gs_symb_show_projection_to = stProjectionTypes[3] then AC_symb_show_projection_to = PROJECTION_ENTIRE_ELEMENT
	parameters AC_symb_show_projection_to = AC_symb_show_projection_to
else
	gs_symb_show_projection_to = stProjectionTypes[min(max(1, AC_symb_show_projection_to), vardim1(stProjectionTypes))]
	parameters gs_symb_show_projection_to = gs_symb_show_projection_to
endif


! ==============================================================================
! Geometry Calculation
! ==============================================================================
_profileHeightZ		= rm_ProfileHeight/cos(rm_PitchAngle)

gosub "calcLength"

! ==============================================================================
goto "MasterEnd"
! ==============================================================================

! ==============================================================================
! Subroutines
! ==============================================================================

! ------------------------------------------------------------------------------
"calcLength":
! ------------------------------------------------------------------------------
	_strutLengthPlus	= 0
	_bottomAplus		= 0
	_bottomCutX1		= 0
	_bottomCutX2		= 0
	_topAPlus			= 0
	_topCutX1			= 0
	_topCutX2			= 0
	_topCutXP			= 0
	_profH				= 0


	!---------- Top Cut ---------------------------------
	if not(rm_bIsTrimmerRotated) then
		_strutLengthPlus	= abs(rm_ProfileHeight/tan(90-rm_PitchAngle))
		_profH				= _profileHeightZ
		if abs(rm_AngleRidge)>eps & abs(rm_AngleRidge-180)>eps		then _topCutX1	= abs((rm_TrimmerWidth/2)/sin(rm_AngleRidge))
		if abs(rm_AngleRidge)>eps & abs(rm_AngleRidge-90)>eps		then _topCutX2	= abs(tan(90-rm_AngleRidge)*rm_ProfileWidth/2)

		if _topCutX1 - _topCutX2 < 0 then
			_topCutX1 = 0
			_topCutX2 = 0
		endif
	else
		_ttopCutX1	= 0
		_ttopCutX2	= 0
		if abs(rm_AngleRidge)>eps & abs(rm_AngleRidge-180)>eps		then _ttopCutX1	= abs((rm_TrimmerWidth/2)/sin(rm_AngleRidge))
		if abs(rm_AngleRidge)>eps & abs(rm_AngleRidge-90)>eps		then _ttopCutX2	= abs(tan(90-rm_AngleRidge)*rm_ProfileWidth/2)

		_topAPlus			= rm_ProfileHeight * sin(rm_PitchAngle)
		_profH				= rm_ProfileHeight * cos(rm_PitchAngle)
		_strutLengthPlus	= abs((rm_ProfileHeight/2)*tan(rm_PitchAngle)) - _ttopCutX1 + _ttopCutX2
		if _strutLengthPlus < 0 then
			_topCutX1			= -cos(rm_PitchAngle) * _strutLengthPlus
			_topCutXP			= -cos(rm_PitchAngle) * (_strutLengthPlus - _ttopCutX2)
			_strutLengthPlus 	= 0
		else
			_topHalfCut1		= ((rm_ProfileHeight/2)*tan(rm_PitchAngle) - _ttopCutX1) / tan(rm_PitchAngle)
			_topHalfCut2		= ((rm_ProfileHeight/2)*tan(rm_PitchAngle) - _ttopCutX1) / sin(rm_PitchAngle)
			_topAPlus			= ( rm_ProfileHeight - _topHalfCut1 ) * sin(rm_PitchAngle)
			_profH				= ( rm_ProfileHeight - _topHalfCut1 ) * cos(rm_PitchAngle) + _topHalfCut2 + _ttopCutX2 * sin(rm_PitchAngle)
			if _strutLengthPlus > rm_ProfileHeight/tan(90-rm_PitchAngle) then
				_strutLengthPlus = abs(rm_ProfileHeight/tan(90-rm_PitchAngle))
			endif
		endif
	endif

	!---------- Bottom Cut ---------------------------------
	if rm_VerticalTrimmerAngle<=90.0001 & rm_VerticalTrimmerAngle>=89.9999 & rm_bIsTrimmerPerdendicular then
		_bVertical = 1
	else
		_bVertical = 0
	endif

	if _bVertical then
		_bottomCutX1 = rm_ProfileHeight/2 * sin(rm_PitchAngle) + rm_VerticalTrimmerWidth/2 * cos(rm_PitchAngle)
		_bottomAplus = rm_ProfileHeight * sin(rm_PitchAngle)
		if _bottomCutX1 < _bottomAplus then
			_bottomAplus = _bottomCutX1
		endif
	else
		if abs(rm_VerticalTrimmerAngle)>eps & abs(rm_VerticalTrimmerAngle-180)>eps	then _bottomCutX1	= abs((rm_VerticalTrimmerWidth/2)/sin(rm_VerticalTrimmerAngle))
		if abs(rm_VerticalTrimmerAngle)>eps & abs(rm_VerticalTrimmerAngle-90)>eps	then _bottomCutX2	= abs(tan(90-rm_VerticalTrimmerAngle)*rm_ProfileWidth/2)
		if _bottomCutX2 > _bottomCutX1 then
			_bottomCutX2 = _bottomCutX1
		endif
	endif

	!---------- Dimensions ---------------------------------
	_topCutX			= _topCutX1 - _topCutX2
	_bottomCutX			= _bottomCutX1 -  _bottomCutX2
	_cuttingLength		= (_topCutX + _bottomCutX)/cos(rm_PitchAngle)
	_cuttingHeight		= (_topCutX + _bottomCutX)*tan(rm_PitchAngle)
	A					= rm_ProjectedLength - _topCutX - _bottomCutX + _bottomAplus
	ZZYZX				= rm_Height - _cuttingHeight + _profH

return

! ------------------------------------------------------------------------------
"calcStuctLength":
! ------------------------------------------------------------------------------
	rm_StructuralLength	= structuralLength - _cuttingLength + _strutLengthPlus
return


! ==============================================================================
"MasterEnd":
! ==============================================================================
