
pen pen3D
material rm_mat


! ==============================================================================
! 2D Display Options
! ==============================================================================

!gs_2D_projection_type:
!	0 - Normal 3D
!	1 - View Edges
!	2 - View Polygons
!	3 - Overhead Edges
!	4 - Cut Lines
!	5 - Cut Polygons
!	6 - Bottom Range Cut Lines
!	7 - Top Range Cut Lines

nProjectionCut = 0
if gs_2D_projection then
	if AC_symb_show_projection_to = PROJECTION_FLOOR_PLAN_RANGE | (AC_symb_show_projection_to = PROJECTION_DISPLAY_LIMIT & gs_bottom_range_height < gs_cutplane_height) then
		addz gs_bottom_range_height
		cutplane{2} 180, 2
		nProjectionCut = nProjectionCut + 1
		del 1
	endif
	if gs_2D_projection_type <> 6 then
		addz gs_cutplane_height
		cutplane{2} 180 * (gs_2D_projection_type = 3), 1
		nProjectionCut = nProjectionCut + 1
		del 1
	endif
	if AC_symb_show_projection_to <> 3 then
		addz gs_top_range_height
		cutplane{2} 0, 2
		nProjectionCut = nProjectionCut + 1
		del 1
	endif
endif


! ==============================================================================
! Calculations
! ==============================================================================
rm_Height			= rm_ProjectedLength*tan(valleyAngle)


! ==============================================================================
! 3D Hotspots
! ==============================================================================

! --- Profile Width ------------------------------------------------------------
	unID = 1000
	hotspot rm_ProjectedLength/2,  0,					-rm_ProjectedLength/2*tan(valleyAngle), unID,profileWidthHalf, 1+128,	rm_ProfileWidth : unID=unID+1
	hotspot rm_ProjectedLength/2, -rm_ProfileWidth/2,	-rm_ProjectedLength/2*tan(valleyAngle), unID,profileWidthHalf, 2,		rm_ProfileWidth : unID=unID+1
	hotspot rm_ProjectedLength/2,  1,					-rm_ProjectedLength/2*tan(valleyAngle), unID,profileWidthHalf, 3,		rm_ProfileWidth : unID=unID+1

	hotspot rm_ProjectedLength/2,  0,					-rm_ProjectedLength/2*tan(valleyAngle), unID,profileWidthHalf, 1+128,	rm_ProfileWidth : unID=unID+1
	hotspot rm_ProjectedLength/2,  rm_ProfileWidth/2,	-rm_ProjectedLength/2*tan(valleyAngle), unID,profileWidthHalf, 2,		rm_ProfileWidth : unID=unID+1
	hotspot rm_ProjectedLength/2, -1,					-rm_ProjectedLength/2*tan(valleyAngle), unID,profileWidthHalf, 3,		rm_ProfileWidth : unID=unID+1

! --- Profile Height ------------------------------------------------------------
	unID = 2000
	hotspot rm_ProjectedLength/2,									0, -rm_ProjectedLength/2*tan(valleyAngle),									unID,rm_ProfileHeight, 1+128	: unID=unID+1
	hotspot rm_ProjectedLength/2-rm_ProfileHeight*sin(valleyAngle),	0, -rm_ProjectedLength/2*tan(valleyAngle)+rm_ProfileHeight*cos(valleyAngle),	unID,rm_ProfileHeight, 2		: unID=unID+1
	hotspot rm_ProjectedLength/2+rm_ProfileHeight*sin(valleyAngle),	0, -rm_ProjectedLength/2*tan(valleyAngle)-rm_ProfileHeight*cos(valleyAngle),	unID,rm_ProfileHeight, 3		: unID=unID+1

	!hotspot _rafterProjLength, 0, -rm_ProjectedLength*tan(valleyAngle)+_rafterProjLength*tan(valleyAngle)+rm_ProfileHeight/(cos(valleyAngle))-rm_ProfileHeight,	unID, rm_ProfileHeight, 1+128	: unID=unID+1
	!hotspot _rafterProjLength, 0, -rm_ProjectedLength*tan(valleyAngle)+_rafterProjLength*tan(valleyAngle)+rm_ProfileHeight/(cos(valleyAngle)),				unID, rm_ProfileHeight, 2		: unID=unID+1
	!hotspot _rafterProjLength, 0, -rm_ProjectedLength*tan(valleyAngle)+_rafterProjLength*tan(valleyAngle)-1,											unID, rm_ProfileHeight, 3		: unID=unID+1

	!unID = 2100
	!hotspot rm_ProjectedLength-_purlinProjLength, 0, -_purlinProjLength*tan(valleyAngle)+rm_ProfileHeight/(cos(valleyAngle))-rm_ProfileHeight,		unID, rm_ProfileHeight, 1+128	: unID=unID+1
	!hotspot rm_ProjectedLength-_purlinProjLength, 0, -_purlinProjLength*tan(valleyAngle)+rm_ProfileHeight/(cos(valleyAngle)),					unID, rm_ProfileHeight, 2		: unID=unID+1
	!hotspot rm_ProjectedLength-_purlinProjLength, 0, -_purlinProjLength*tan(valleyAngle)+rm_ProfileHeight/(cos(valleyAngle))-rm_ProfileHeight-1,	unID, rm_ProfileHeight, 3		: unID=unID+1

! --- Horizontal Length ------------------------------------------------------------
	unID = 3000
	hotspot  0,						0, 0, unID, rm_ProjectedLength, 1+128	: unID=unID+1
	hotspot -1,						0, 0, unID, rm_ProjectedLength, 3		: unID=unID+1
	hotspot  rm_ProjectedLength,	0, 0, unID, rm_ProjectedLength, 2		: unID=unID+1

	hotspot  0,						0, -rm_Height, unID, rm_ProjectedLength, 1+256	: unID=unID+1
	hotspot -1,						0, -rm_Height, unID, rm_ProjectedLength, 3		: unID=unID+1
	hotspot  rm_ProjectedLength,	0, -rm_Height, unID, rm_ProjectedLength, 2+128	: unID=unID+1

! --- Roof Pitch ------------------------------------------------------------------
	unID = 5000
	hotspot rm_ProjectedLength,											 0,  0,										unID, valleyAngle, 6,		rm_PitchAngle : unID=unID+1
	hotspot rm_ProjectedLength/2,										 0,  0,										unID, valleyAngle, 4+128,	rm_PitchAngle : unID=unID+1
	hotspot rm_ProjectedLength,											-1,  0,										unID, valleyAngle, 7,		rm_PitchAngle : unID=unID+1
	hotspot rm_ProjectedLength-(rm_ProjectedLength/2)*cos(valleyAngle),	 0, -rm_ProjectedLength/2*sin(valleyAngle),	unID, valleyAngle, 5,		rm_PitchAngle : unID=unID+1

! --- General Hotspots ------------------------------------------------------------------
	unID = 1
	hotspot rm_ProjectedLength-_purlinProjLength,0,-_purlinProjLength*tan(valleyAngle), unID	: unID=unID+1
	hotspot rm_ProjectedLength-_purlinProjLength,0,-_purlinProjLength*tan(valleyAngle)+_profileHeightZ, unID	: unID=unID+1
	hotspot _rafterProjLength,0,-rm_ProjectedLength*tan(valleyAngle)+_rafterProjLength*tan(valleyAngle), unID	: unID=unID+1
	hotspot _rafterProjLength,0,-rm_ProjectedLength*tan(valleyAngle)+_rafterProjLength*tan(valleyAngle)+_profileHeightZ, unID	: unID=unID+1



! ==============================================================================
! Roofmaker Element
! ==============================================================================
addz -rm_Height
rotx 90

	! --- Bottom Cut ------------------------------------------------------------------
	if rm_VerticalTrimmerAngle < 0 then
		_bCutSideBottom = 0
	else
		_bCutSideBottom = 1
	endif

	addx _rafterProjLength
	roty rm_VerticalTrimmerAngle
	cutplane 1, 1, 0, _bCutSideBottom         !Cut at the Bottom1
	del 2

	if rm_VerticalTrimmerAngle<90 then
		addx _rafterProjLength
		roty rm_VerticalTrimmerAngle+90
		cutplane 1, 1, 0, _bCutSideBottom         !Cut at the Bottom2
		del 2
	else
		addx _rafterProjLength
		roty rm_VerticalTrimmerAngle-90
		cutplane 1, 1, 0, _bCutSideBottom         !Cut at the Bottom2
		del 2
	endif


	! --- Top Cut ------------------------------------------------------------------
	if rm_VerticalTrimmerAngle>90 then
		_bCutSideTop = 0
	else
		_bCutSideTop = 1
	endif

	addx rm_ProjectedLength-_purlinProjLength
	roty rm_VerticalTrimmerAngle
	cutplane 1, 1, 0            !Cut at the top1
	del 2

	addx rm_ProjectedLength-_purlinProjLength
	roty rm_VerticalTrimmerAngle-90
	cutplane 1, 1, 0, _bCutSideTop        !Cut at the top2
	del 2


	! --- 3D Body ------------------------------------------------------------------

	addz -rm_ProfileWidth/2
	base
		prism 5, rm_ProfileWidth,
				0, 0,
				rm_ProjectedLength, rm_Height,
				rm_ProjectedLength, rm_Height+_profileHeightZ,
				0, _profileHeightZ,
				0, 0

		vert 0,0,0
		vert rm_ProjectedLength,tan(valleyAngle)*rm_ProjectedLength,0
		vert -sin(valleyAngle),cos(valleyAngle),0
		vert 0, 0, -1

		coor 2, -1, -2, -3, -4
	body 1
	del 1

	cutend
	cutend
	cutend
	cutend
del 2


! ==============================================================================
for i = 1 to nProjectionCut
	cutend
next i

END
