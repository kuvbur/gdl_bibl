
EPS = 0.00001

bEnableRafter		= 1
bEnableSymbol		= 0
bEnableResolution	= 0


! ==============================================================================
! Definitions
! ==============================================================================
!gs_iDisplayStandards
	LANGUAGE_INT		= 1
	LANGUAGE_GER		= 2
	LANGUAGE_CHE		= 3
	LANGUAGE_AUT		= 4
	LANGUAGE_USA		= 5

!AC_symb_display_option
	DISPLAY_PROJECTED			= 1
	DISPLAY_OVERHEAD_PROJ		= 2
	DISPLAY_SYMBOLIC			= 3
	DISPLAY_OUTLINES			= 4
	DISPLAY_OVERHEAD_ALL		= 5

!AC_symb_show_projection_to
	PROJECTION_FLOOR_PLAN_RANGE	= 1
	PROJECTION_DISPLAY_LIMIT	= 2
	PROJECTION_ENTIRE_ELEMENT	= 3


! ==============================================================================
! 2D Display Options
! ==============================================================================

dim stDisplayOptions[5]
	stDisplayOptions[1]		= `Сечение и Низ`
	stDisplayOptions[2]		= `Сечение и Верх`
	stDisplayOptions[3]		= `Символический Вид`
	stDisplayOptions[4]		= `Только Контуры`
	stDisplayOptions[5]		= `Вся Проекция`

dim stProjectionTypes[3]
	stProjectionTypes[1]	= `Согласно Диапазону Плана Этажа`
	stProjectionTypes[2]	= `Согласно Абсолютному Диапазону`
	stProjectionTypes[3]	= `Весь Элемент`

if GLOB_MODPAR_NAME = "gs_symb_display_option" | AC_symb_display_option = 0 then
	AC_symb_display_option = DISPLAY_PROJECTED
	if gs_symb_display_option = stDisplayOptions[2] then AC_symb_display_option = DISPLAY_OVERHEAD_PROJ
	if gs_symb_display_option = stDisplayOptions[3] then AC_symb_display_option = DISPLAY_SYMBOLIC
	if gs_symb_display_option = stDisplayOptions[4] then AC_symb_display_option = DISPLAY_OUTLINES
	if gs_symb_display_option = stDisplayOptions[5] then AC_symb_display_option = DISPLAY_OVERHEAD_ALL
	parameters AC_symb_display_option = AC_symb_display_option
else
	gs_symb_display_option = stDisplayOptions[min(max(1, AC_symb_display_option), vardim1(stDisplayOptions))]
	parameters gs_symb_display_option = gs_symb_display_option
endif

if GLOB_MODPAR_NAME = "gs_symb_show_projection_to" | AC_symb_show_projection_to = 0 then
	AC_symb_show_projection_to = PROJECTION_FLOOR_PLAN_RANGE
	if gs_symb_show_projection_to = stProjectionTypes[2] then AC_symb_show_projection_to = PROJECTION_DISPLAY_LIMIT
	if gs_symb_show_projection_to = stProjectionTypes[3] then AC_symb_show_projection_to = PROJECTION_ENTIRE_ELEMENT
	parameters AC_symb_show_projection_to = AC_symb_show_projection_to
else
	gs_symb_show_projection_to = stProjectionTypes[min(max(1, AC_symb_show_projection_to), vardim1(stProjectionTypes))]
	parameters gs_symb_show_projection_to = gs_symb_show_projection_to
endif


! ==============================================================================
! Geometry Calculation
! ==============================================================================
_strutLengthPlus	= abs(rm_ProfileHeight/tan(90-rm_PitchAngle))
_profileHeightZ		= rm_ProfileHeight/cos(rm_PitchAngle)

gosub "calcLength"

! ==============================================================================
goto "MasterEnd"
! ==============================================================================

! ==============================================================================
! Subroutines
! ==============================================================================

! ------------------------------------------------------------------------------
"calcLength":
! ------------------------------------------------------------------------------
	_bottomAplus		= 0
	_bottomCutX1		= 0
	_bottomCutX2		= 0

	!---------- Bottom Cut ---------------------------------
	if rm_VerticalTrimmerAngle<=90.0001 & rm_VerticalTrimmerAngle>=89.9999 & rm_bIsTrimmerPerdendicular then
		_bVertical = 1
	else
		_bVertical = 0
	endif

	if _bVertical then
		_bottomCutX1 = rm_ProfileHeight/2 * sin(rm_PitchAngle) + rm_VerticalTrimmerWidth/2 * cos(rm_PitchAngle)
		_bottomAplus = rm_ProfileHeight * sin(rm_PitchAngle)
		if _bottomCutX1 < _bottomAplus then
			_bottomAplus = _bottomCutX1
		endif
	else
		if abs(rm_VerticalTrimmerAngle)>eps & abs(rm_VerticalTrimmerAngle-180)>eps	then _bottomCutX1	= abs((rm_VerticalTrimmerWidth/2)/sin(rm_VerticalTrimmerAngle))
		if abs(rm_VerticalTrimmerAngle)>eps & abs(rm_VerticalTrimmerAngle-90)>eps	then _bottomCutX2	= abs(tan(90-rm_VerticalTrimmerAngle)*rm_ProfileWidth/2)
		if _bottomCutX2 > _bottomCutX1 then
			_bottomCutX2 = _bottomCutX1
		endif
	endif

	!---------- Dimensions ---------------------------------
	_bottomCutX			= _bottomCutX1 -  _bottomCutX2
	_cuttingLength		= (rm_CutEndPointDist + _bottomCutX)/cos(rm_PitchAngle)
	_cuttingHeight		= (rm_CutEndPointDist + _bottomCutX)*tan(rm_PitchAngle)
	A					= rm_ProjectedLength - rm_CutEndPointDist - _bottomCutX + _bottomAplus
	ZZYZX				= rm_Height - _cuttingHeight + _profileHeightZ

return

! ------------------------------------------------------------------------------
"calcStuctLength":
! ------------------------------------------------------------------------------
	rm_StructuralLength	= structuralLength - _cuttingLength + _strutLengthPlus
return


! ==============================================================================
"MasterEnd":
! ==============================================================================
