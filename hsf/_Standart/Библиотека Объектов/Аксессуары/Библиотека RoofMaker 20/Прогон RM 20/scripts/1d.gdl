
EPS = 0.00001

bEnableRafter		= 1
bEnableSymbol		= 0
bEnableResolution	= 0


! ==============================================================================
! Definitions
! ==============================================================================
!gs_iDisplayStandards
	LANGUAGE_INT		= 1
	LANGUAGE_GER		= 2
	LANGUAGE_CHE		= 3
	LANGUAGE_AUT		= 4
	LANGUAGE_USA		= 5

!AC_symb_display_option
	DISPLAY_PROJECTED			= 1
	DISPLAY_OVERHEAD_PROJ		= 2
	DISPLAY_SYMBOLIC			= 3
	DISPLAY_OUTLINES			= 4
	DISPLAY_OVERHEAD_ALL		= 5

!AC_symb_show_projection_to
	PROJECTION_FLOOR_PLAN_RANGE	= 1
	PROJECTION_DISPLAY_LIMIT	= 2
	PROJECTION_ENTIRE_ELEMENT	= 3

dim stProfileTypes[4]
	stProfileTypes[1] = `Прямоугольный`
	stProfileTypes[2] = `I-образный`
	stProfileTypes[3] = `L-образный`
	stProfileTypes[4] = `C-образный`

! rm_iProfileType:
	PROFILE_TYPE_RECTANGULAR	= 1
	PROFILE_TYPE_I_BEAM			= 2
	PROFILE_TYPE_L_BEAM			= 3
	PROFILE_TYPE_C_BEAM			= 4


! ==============================================================================
! 2D Display Options
! ==============================================================================

dim stDisplayOptions[5]
	stDisplayOptions[1]		= `Сечение и Низ`
	stDisplayOptions[2]		= `Сечение и Верх`
	stDisplayOptions[3]		= `Символический Вид`
	stDisplayOptions[4]		= `Только Контуры`
	stDisplayOptions[5]		= `Вся Проекция`

dim stProjectionTypes[3]
	stProjectionTypes[1]	= `Согласно Диапазону Плана Этажа`
	stProjectionTypes[2]	= `Согласно Абсолютному Диапазону`
	stProjectionTypes[3]	= `Весь Элемент`

if GLOB_MODPAR_NAME = "gs_symb_display_option" | AC_symb_display_option = 0 then
	AC_symb_display_option = DISPLAY_PROJECTED
	if gs_symb_display_option = stDisplayOptions[2] then AC_symb_display_option = DISPLAY_OVERHEAD_PROJ
	if gs_symb_display_option = stDisplayOptions[3] then AC_symb_display_option = DISPLAY_SYMBOLIC
	if gs_symb_display_option = stDisplayOptions[4] then AC_symb_display_option = DISPLAY_OUTLINES
	if gs_symb_display_option = stDisplayOptions[5] then AC_symb_display_option = DISPLAY_OVERHEAD_ALL
	parameters AC_symb_display_option = AC_symb_display_option
else
	gs_symb_display_option = stDisplayOptions[min(max(1, AC_symb_display_option), vardim1(stDisplayOptions))]
	parameters gs_symb_display_option = gs_symb_display_option
endif

if GLOB_MODPAR_NAME = "gs_symb_show_projection_to" | AC_symb_show_projection_to = 0 then
	AC_symb_show_projection_to = PROJECTION_FLOOR_PLAN_RANGE
	if gs_symb_show_projection_to = stProjectionTypes[2] then AC_symb_show_projection_to = PROJECTION_DISPLAY_LIMIT
	if gs_symb_show_projection_to = stProjectionTypes[3] then AC_symb_show_projection_to = PROJECTION_ENTIRE_ELEMENT
	parameters AC_symb_show_projection_to = AC_symb_show_projection_to
else
	gs_symb_show_projection_to = stProjectionTypes[min(max(1, AC_symb_show_projection_to), vardim1(stProjectionTypes))]
	parameters gs_symb_show_projection_to = gs_symb_show_projection_to
endif


! ==============================================================================
! Geometry Calculation
! ==============================================================================
_angle				= atn(rm_HeightDiff / A)
_rafterHeightDiff	= rm_RafterHeight/cos(rm_RotAngle)
_profileHeightZ		= rm_ProfileHeight/cos(_angle)
_strutLengthPlus	= abs(rm_ProfileHeight/tan(90-_angle))

_bIsRotated = rm_bIsRotated
if rm_bTopOnRafter then	_bIsRotated = 1


axisDiff2d = 0
axisOffset = 0

if _bIsRotated then
	dxX		= (rm_ProfileWidth/2) * cos(rm_RotAngle)
	dxY		= (rm_ProfileWidth/2) * sin(rm_RotAngle)
	dyX		= (rm_ProfileHeight/2) * sin(rm_RotAngle)
	dyY		= (rm_ProfileHeight/2) * cos(rm_RotAngle)

	if rm_bTopOnRafter then
		emeles		= _rafterHeightDiff + rm_ProfileHeight/2 - (rm_ProfileHeight/2) * cos(rm_RotAngle)
	else
		emeles		= - (rm_ProfileHeight/2) * cos(rm_RotAngle)
		axisOffset	= dyX
	endif

	if abs(rm_HeightDiff) < EPS then
		B = 2*dxX + 2*dyX
		Z = 2*dxY + 2*dyY
		ac_toplevel		= emeles + dyY + dxY
		ac_bottomlevel	= ac_toplevel - Z
	else
		B				= 2*dxX + profileHeight * sin(rm_RotAngle) + rm_HeightDiff * cos(90-rm_RotAngle)
		Z				= abs(rm_HeightDiff * sin(90-rm_RotAngle)) + (profileHeight * cos(rm_RotAngle) + rm_ProfileWidth*sin(rm_RotAngle))
		if rm_HeightDiff > 0 then
			ac_toplevel		= emeles + dyY + dxY + rm_HeightDiff * sin(90-rm_RotAngle)
			ac_bottomlevel	= emeles + dyY + dxY - (profileHeight * cos(rm_RotAngle) + rm_ProfileWidth*sin(rm_RotAngle))
		else
			ac_toplevel		= emeles + dyY + dxY
			ac_bottomlevel	= emeles + dyY + dxY + rm_HeightDiff * sin(90-rm_RotAngle) - (profileHeight * cos(rm_RotAngle) + rm_ProfileWidth*sin(rm_RotAngle))
		endif
	endif

	axisDiff2d = rm_HeightDiff * cos(90-rm_RotAngle)
else
	B = rm_ProfileWidth
	Z = profileHeight
	if rm_HeightDiff > 0 then
		ac_toplevel		= ZZYZX - profileHeight
		ac_bottomlevel	= -profileHeight
	else
		ac_toplevel		= 0
		ac_bottomlevel	= -ZZYZX
	endif
endif
