
EPS = 0.00001

bEnableRafter		= 0
bEnableSymbol		= 0
bEnableResolution	= 0


! ==============================================================================
! Definitions
! ==============================================================================
!gs_iDisplayStandards
	LANGUAGE_INT		= 1
	LANGUAGE_GER		= 2
	LANGUAGE_CHE		= 3
	LANGUAGE_AUT		= 4
	LANGUAGE_USA		= 5

!AC_symb_display_option
	DISPLAY_PROJECTED			= 1
	DISPLAY_OVERHEAD_PROJ		= 2
	DISPLAY_SYMBOLIC			= 3
	DISPLAY_OUTLINES			= 4
	DISPLAY_OVERHEAD_ALL		= 5

!AC_symb_show_projection_to
	PROJECTION_FLOOR_PLAN_RANGE	= 1
	PROJECTION_DISPLAY_LIMIT	= 2
	PROJECTION_ENTIRE_ELEMENT	= 3


dim stType[3]
	stType[1]	= `Двойной`
	stType[2]	= `Справа`
	stType[3]	= `Слева`

TYPE_DOUBLE		= 1
TYPE_RIGHT		= 2
TYPE_LEFT		= 3


! ==============================================================================
! 2D Display Options
! ==============================================================================

dim stDisplayOptions[5]
	stDisplayOptions[1]		= `Сечение и Низ`
	stDisplayOptions[2]		= `Сечение и Верх`
	stDisplayOptions[3]		= `Символический Вид`
	stDisplayOptions[4]		= `Только Контуры`
	stDisplayOptions[5]		= `Вся Проекция`

dim stProjectionTypes[3]
	stProjectionTypes[1]	= `Согласно Диапазону Плана Этажа`
	stProjectionTypes[2]	= `Согласно Абсолютному Диапазону`
	stProjectionTypes[3]	= `Весь Элемент`

if GLOB_MODPAR_NAME = "gs_symb_display_option" | AC_symb_display_option = 0 then
	AC_symb_display_option = DISPLAY_PROJECTED
	if gs_symb_display_option = stDisplayOptions[2] then AC_symb_display_option = DISPLAY_OVERHEAD_PROJ
	if gs_symb_display_option = stDisplayOptions[3] then AC_symb_display_option = DISPLAY_SYMBOLIC
	if gs_symb_display_option = stDisplayOptions[4] then AC_symb_display_option = DISPLAY_OUTLINES
	if gs_symb_display_option = stDisplayOptions[5] then AC_symb_display_option = DISPLAY_OVERHEAD_ALL
	parameters AC_symb_display_option = AC_symb_display_option
else
	gs_symb_display_option = stDisplayOptions[min(max(1, AC_symb_display_option), vardim1(stDisplayOptions))]
	parameters gs_symb_display_option = gs_symb_display_option
endif

if GLOB_MODPAR_NAME = "gs_symb_show_projection_to" | AC_symb_show_projection_to = 0 then
	AC_symb_show_projection_to = PROJECTION_FLOOR_PLAN_RANGE
	if gs_symb_show_projection_to = stProjectionTypes[2] then AC_symb_show_projection_to = PROJECTION_DISPLAY_LIMIT
	if gs_symb_show_projection_to = stProjectionTypes[3] then AC_symb_show_projection_to = PROJECTION_ENTIRE_ELEMENT
	parameters AC_symb_show_projection_to = AC_symb_show_projection_to
else
	gs_symb_show_projection_to = stProjectionTypes[min(max(1, AC_symb_show_projection_to), vardim1(stProjectionTypes))]
	parameters gs_symb_show_projection_to = gs_symb_show_projection_to
endif


! ==============================================================================
! Geometry Calculation
! ==============================================================================
if abs(rm_PitchAngle_1-90) > EPS then
	_startX1	= (rm_RelativeHeight-rm_ProfileHeight) / tan(rm_PitchAngle_1)
else
	_startX1	= 0
endif
if abs(rm_PitchAngle_1-90) > EPS then
	_startX2	= (rm_RelativeHeight-rm_ProfileHeight) / tan(rm_PitchAngle_2)
else
	_startX2	= 0
endif

_rafterX1	= rm_RafterHeight_1 / sin(rm_PitchAngle_1)
_rafterX2	= rm_RafterHeight_2 / sin(rm_PitchAngle_2)

if abs(rm_PitchAngle_1-90) > EPS then
	_swoopX1	= rm_ProfileHeight / tan(rm_PitchAngle_1)
else
	_swoopX1	= 0
endif
if abs(rm_PitchAngle_2-90) > EPS then
	_swoopX2	= rm_ProfileHeight / tan(rm_PitchAngle_2)
else
	_swoopX2	= 0
endif

bValidHeight = 0
if abs(rm_PitchAngle_1-90) > EPS & abs(rm_PitchAngle_2-90) > EPS then
	bValidHeight	= 1
	_sectX1			= (tan(rm_PitchAngle_2) * rm_ProjectedLength) / (tan(rm_PitchAngle_1) + tan(rm_PitchAngle_2))
	_sectY			= tan(rm_PitchAngle_1) * _sectX1
else
	if abs(rm_PitchAngle_1-90) < EPS & abs(rm_PitchAngle_2-90) < EPS then
		_sectY		= 0
	else
		if abs(rm_PitchAngle_1-90) > EPS then
			bValidHeight	= 1
			_sectY			= tan(rm_PitchAngle_1) * rm_ProjectedLength
		else
			if abs(rm_PitchAngle_2-90) > EPS then
				bValidHeight	= 1
				_sectY			= tan(rm_PitchAngle_2) * rm_ProjectedLength
			endif
		endif
	endif
endif

