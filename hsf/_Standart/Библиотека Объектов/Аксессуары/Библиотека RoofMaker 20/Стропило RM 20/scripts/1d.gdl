
EPS = 0.00001

bEnableRafter		= 1
bEnableSymbol		= 0
bEnableResolution	= 0


! ==============================================================================
! Definitions
! ==============================================================================
!gs_iDisplayStandards
	LANGUAGE_INT		= 1
	LANGUAGE_GER		= 2
	LANGUAGE_CHE		= 3
	LANGUAGE_AUT		= 4
	LANGUAGE_USA		= 5

!AC_symb_display_option
	DISPLAY_PROJECTED			= 1
	DISPLAY_OVERHEAD_PROJ		= 2
	DISPLAY_SYMBOLIC			= 3
	DISPLAY_OUTLINES			= 4
	DISPLAY_OVERHEAD_ALL		= 5

!AC_symb_show_projection_to
	PROJECTION_FLOOR_PLAN_RANGE	= 1
	PROJECTION_DISPLAY_LIMIT	= 2
	PROJECTION_ENTIRE_ELEMENT	= 3

dim stProfileTypes[4]
	stProfileTypes[1] = `Прямоугольная`
	stProfileTypes[2] = `I-образный`
	stProfileTypes[3] = `L-образный`
	stProfileTypes[4] = `C-образный`

! rm_iProfileType:
	PROFILE_TYPE_RECTANGULAR	= 1
	PROFILE_TYPE_I_BEAM			= 2
	PROFILE_TYPE_L_BEAM			= 3
	PROFILE_TYPE_C_BEAM			= 4

dim stEdgeType[3]
	stEdgeType[1]	= `Перпендикулярно`
	stEdgeType[2]	= `Вертикально`
	stEdgeType[3]	= `Прямоугольный Срез`

! rm_iRoofEdgeAngle
	EDGE_PERDENDICULAR		= 1
	EDGE_VERTICAL			= 2
	EDGE_RECTANGULAR		= 3


! ==============================================================================
! 2D Display Options
! ==============================================================================

dim stDisplayOptions[5]
	stDisplayOptions[1]		= `Сечение и Низ`
	stDisplayOptions[2]		= `Сечение и Верх`
	stDisplayOptions[3]		= `Символический Вид`
	stDisplayOptions[4]		= `Только Контуры`
	stDisplayOptions[5]		= `Вся Проекция`

dim stProjectionTypes[3]
	stProjectionTypes[1]	= `Согласно Диапазону Плана Этажа`
	stProjectionTypes[2]	= `Согласно Абсолютному Диапазону`
	stProjectionTypes[3]	= `Весь Элемент`

if GLOB_MODPAR_NAME = "gs_symb_display_option" | AC_symb_display_option = 0 then
	AC_symb_display_option = DISPLAY_PROJECTED
	if gs_symb_display_option = stDisplayOptions[2] then AC_symb_display_option = DISPLAY_OVERHEAD_PROJ
	if gs_symb_display_option = stDisplayOptions[3] then AC_symb_display_option = DISPLAY_SYMBOLIC
	if gs_symb_display_option = stDisplayOptions[4] then AC_symb_display_option = DISPLAY_OUTLINES
	if gs_symb_display_option = stDisplayOptions[5] then AC_symb_display_option = DISPLAY_OVERHEAD_ALL
	parameters AC_symb_display_option = AC_symb_display_option
else
	gs_symb_display_option = stDisplayOptions[min(max(1, AC_symb_display_option), vardim1(stDisplayOptions))]
	parameters gs_symb_display_option = gs_symb_display_option
endif

if GLOB_MODPAR_NAME = "gs_symb_show_projection_to" | AC_symb_show_projection_to = 0 then
	AC_symb_show_projection_to = PROJECTION_FLOOR_PLAN_RANGE
	if gs_symb_show_projection_to = stProjectionTypes[2] then AC_symb_show_projection_to = PROJECTION_DISPLAY_LIMIT
	if gs_symb_show_projection_to = stProjectionTypes[3] then AC_symb_show_projection_to = PROJECTION_ENTIRE_ELEMENT
	parameters AC_symb_show_projection_to = AC_symb_show_projection_to
else
	gs_symb_show_projection_to = stProjectionTypes[min(max(1, AC_symb_show_projection_to), vardim1(stProjectionTypes))]
	parameters gs_symb_show_projection_to = gs_symb_show_projection_to
endif


! ==============================================================================
! Geometry Calculation
! ==============================================================================

_profileHeightZ		= rm_ProfileHeight/cos(rm_PitchAngle)

gosub "calcTopCut"
gosub "calcOverhangStrutSize"
gosub "calcSoffitSize"



! ==============================================================================
goto "MasterEnd"
! ==============================================================================

! ==============================================================================
! Subroutines
! ==============================================================================
! ------------------------------------------------------------------------------
"calcTopCut":
! ------------------------------------------------------------------------------
	_strutLengthPlus	= 0
	_topCutX1			= 0
	_topCutX2			= 0
	_topCutY			= 0
	_jointAngle			= abs(rm_VerticalTrimmerAngle-90)

	if not(rm_bIsTrimmerRotated) then
		_profH				= _profileHeightZ
		_strutLengthPlus	= abs(rm_ProfileHeight/tan(90-rm_PitchAngle))
		if abs(rm_VerticalTrimmerAngle)>eps & abs(rm_VerticalTrimmerAngle-180)>eps	then _topCutX1	= abs((rm_JointWidth/2)/sin(rm_VerticalTrimmerAngle))
		if abs(rm_VerticalTrimmerAngle)>eps & abs(rm_VerticalTrimmerAngle-90)>eps	then _topCutX2	= abs(tan(90-rm_VerticalTrimmerAngle)*rm_ProfileWidth/2)
	else
		_ttopCutX1	= 0
		_ttopCutX2	= 0
		if abs(rm_VerticalTrimmerAngle)>eps & abs(rm_VerticalTrimmerAngle-180)>eps	then _ttopCutX1	= abs((rm_JointWidth/2)/sin(rm_VerticalTrimmerAngle))
		if abs(rm_VerticalTrimmerAngle)>eps & abs(rm_VerticalTrimmerAngle-90)>eps	then _ttopCutX2	= abs(tan(90-rm_VerticalTrimmerAngle)*rm_ProfileWidth/2)

		_profH				= rm_ProfileHeight*cos(rm_PitchAngle)
		_strutLengthPlus	= abs((rm_ProfileHeight/2)*tan(rm_PitchAngle)) - _ttopCutX1 + _ttopCutX2
	endif

	topStrutSize	= (_topCutX1 - _topCutX2) / cos(rm_PitchAngle) - _strutLengthPlus
	if not(rm_bIsTrimmerRotated) then
		_topCutX	= _topCutX1 - _topCutX2
	else
		_topCutX	= -cos(rm_PitchAngle) * _strutLengthPlus
	endif
	_topHeight		= _topCutX * tan(rm_PitchAngle)

return


! ------------------------------------------------------------------------------
"calcOverhangStrutSize":
! ------------------------------------------------------------------------------
	if rm_iRoofEdgeAngle = EDGE_PERDENDICULAR then
		overhangStrutSize = (rm_OverHang - rm_ProfileHeight*sin(rm_PitchAngle))/cos(rm_PitchAngle)
	else
		if rm_iRoofEdgeAngle = EDGE_VERTICAL then
			overhangStrutSize = rm_OverHang/cos(rm_PitchAngle)
		else
			if rm_iRoofEdgeAngle = EDGE_RECTANGULAR then
				overhangStrutSize = rm_OverHang/cos(rm_PitchAngle) - (rm_ProfileHeight/2)*tan(rm_PitchAngle)
			endif
		endif
	endif
return


! ------------------------------------------------------------------------------
"calcSoffitSize":
! ------------------------------------------------------------------------------
	soffitSize = 0
	if rm_bSoffit then
		if rm_iRoofEdgeAngle = EDGE_PERDENDICULAR then
			soffitSize = (rm_OverHang - rm_ProfileHeight*sin(rm_PitchAngle))/cos(rm_SoffitAngle)
		else
			if rm_iRoofEdgeAngle = EDGE_VERTICAL then
				soffitSize = rm_OverHang/cos(rm_SoffitAngle)
			else
				if rm_iRoofEdgeAngle = EDGE_RECTANGULAR then
					if abs(rm_PitchAngle) < EPS then
						soffitSize	= 0
						rm_bSoffit	= 0
					else
						soffitSize = (rm_OverHang - (rm_ProfileHeight/2)/sin(rm_PitchAngle))/cos(rm_SoffitAngle)
					endif
				endif
			endif
		endif
	endif
return

! ==============================================================================
"MasterEnd":
! ==============================================================================

