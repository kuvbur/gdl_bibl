
! Try left center anchorpoint
define style "own" fontType, textheight * 1000 / GLOB_SCALE, 4, 0
set style "own"
ht = textheight
rrr = request ("Height_of_style", "own", ht)
if rrr < 1 or ht < EPS then
	ht = textheight
endif
ht = ht * GLOB_SCALE / 666

!Insertion point is at the vertical center of the first line
add2 0, ht / 2

x = 0                   ! Starting position
y = 0
! Draw the 1st line
lsym = sym1
ldiam1 = diam11
ltext1 = text11
lsuffix1 = suffix11
ldiam2 = diam12
ltext2 = text12
lsuffix2 = suffix12
ltext3 = text13
lsuffix3 = suffix13
ltext4 = text14
lsuffix4 = suffix14
ltext5 = text15
lsuffix5 = suffix15
gosub 1                 ! Adjust Y only if there was something to draw

! Draw the 2nd line
lsym = sym2
ldiam1 = diam21
ltext1 = text21
lsuffix1 = suffix21
ldiam2 = diam22
ltext2 = text22
lsuffix2 = suffix22
ltext3 = text23
lsuffix3 = suffix23
ltext4 = text24
lsuffix4 = suffix24
ltext5 = text25
lsuffix5 = suffix25
gosub 1

! Draw the 3rd line
x = 0
if text3 <> "" then
	x = x + ht * 0.1
	text_for_10 = text3
	gosub 10
	x = x + ht * 0.1
endif
if suffix3 then
	lsuffix = "P"
	gosub 5
	x = x + ht * 0.1
endif
! Draw the box
if x > 0 then
	rect2 0, y, x, y - ht
	y = y - ht
endif

! Draw the 4st line
x = 0
if text4 <> "" then
	x = x + ht * 0.1
	text_for_10 = text4
	gosub 10
	x = x + ht * 0.1
	rect2 0, y, x, y - ht
endif

! End drawing
exit

1:
! Draw 1st or 2nd line of the tolerance
x = 0
add2 0, y
mul2 ht, ht
if lsym = "j" then
	fragment2 1, 1
	x = ht
	rect2 0, 0, 1, -1
endif
if lsym = "r" then
	fragment2 2, 1
	x = ht
	rect2 0, 0, 1, -1
endif
if lsym = "i" then
	fragment2 3, 1
	x = ht
	rect2 0, 0, 1, -1
endif
if lsym = "f" then
	fragment2 4, 1
	x = ht
	rect2 0, 0, 1, -1
endif
if lsym = "b" then
	fragment2 5, 1
	x = ht
	rect2 0, 0, 1, -1
endif
if lsym = "a" then
	fragment2 6, 1
	x = ht
	rect2 0, 0, 1, -1
endif
if lsym = "g" then
	fragment2 7, 1
	x = ht
	rect2 0, 0, 1, -1
endif
if lsym = "c" then
	fragment2 8, 1
	x = ht
	rect2 0, 0, 1, -1
endif
if lsym = "e" then
	fragment2 9, 1
	x = ht
	rect2 0, 0, 1, -1
endif
if lsym = "u" then
	fragment2 10, 1
	x = ht
	rect2 0, 0, 1, -1
endif
if lsym = "d" then
	fragment2 11, 1
	x = ht
	rect2 0, 0, 1, -1
endif
if lsym = "k" then
	fragment2 12, 1
	x = ht
	rect2 0, 0, 1, -1
endif
if lsym = "h" then
	fragment2 13, 1
	x = ht
	rect2 0, 0, 1, -1
endif
if lsym = "t" then
	fragment2 14, 1
	x = ht
	rect2 0, 0, 1, -1
endif
del 2

ldiam = ldiam1
ltext = ltext1
lsuffix = lsuffix1
gosub 2
ldiam = ldiam2
ltext = ltext2
lsuffix = lsuffix2
gosub 2

ltext = ltext3
lsuffix = lsuffix3
gosub 4
ltext = ltext4
lsuffix = lsuffix4
gosub 4
ltext = ltext5
lsuffix = lsuffix5
gosub 4

!Adjust vertical position if necessary
if x > 0 then
	y = y - ht
endif
return

2:
xs = x
if ldiam then
	add2 x, y
	mul2 ht, ht
	fragment2 15, 1
	del 2
	x = x + ht * 0.7
endif
gosub 3
return

3:
if ltext <> "" or lsuffix <> "" then
	x = x + ht * 0.1
endif
if ltext <> "" then
	text_for_10 = ltext
	gosub 10
	x = x + ht * 0.1
endif
if lsuffix <> "" then
	gosub 5
	x = x + ht * 0.1
endif
if x > xs then
	rect2 xs, y, x, y - ht
endif
return

4:
xs = x
gosub 3
return

5:
! Draw a suffix string in a circle
xss = x
if lsuffix <> "" then
	w = stw (lsuffix) * GLOB_SCALE / 1000
	delta = (ht - w) / 2
	x = x + delta / 2
	text_for_10 = lsuffix
	gosub 10
	x = x + delta / 2
	circle2 (xss + x) / 2, y - ht / 2, 0.42 * ht
	x = x + ht * 0.1
endif
return

10:
! Draw a text (text_for_10), then adjust X
if text_for_10 <> "" then
	w = stw (text_for_10) * GLOB_SCALE / 1000
	text2 x, y - ht/2, text_for_10
	x = x + w
endif
return
