
call "GetPlanViewGlobals" parameters all returned_parameters gs_symbtype_2D_m

if GLOB_PREVIEW_MODE = 3 then				! in case of 2D-3D Favorite Preview
	gs_symbtype_2D_m = 1
endif

unID = 1

if (gs_symbtype_2D_m = 1) & (iMountType <> 1) & ABS(rotAngleX) > EPS then
	pen gs_fill_pen
	fill gs_fill_type
	project2{3} 3, 270, 3+32, 1+4, gs_back_pen, 0, 0, 0, parameters	gs_detlevel_3D_m	= 2,
																	bProject2D			= 1,
																	gs_resol			= 24,
																	bShowIllumination3D	= 0

	pen gs_cont_pen
	project2{3} 3, 270, 2, 1+4+8, parameters	gs_detlevel_3D_m	= 2,
												bProject2D			= 1,
												gs_resol			= 24,
												bShowIllumination3D	= 0

	hotspot2 A/2, B * cos(rotAngleX)/2, unID : unID = unID + 1

else
	if bMigrationDrag then add2 -0.03, -0.03

	hotspot2 a/2, b/2, unID : unID = unID+1
	call "Resize_A_B_ZZYZX" Parameters All

	pen gs_cont_pen

	if gs_symbtype_2D_m = 1 then			! Realistic Symbol

		rect2 0,0,a,b
		if iMountType <> 3 then
			line2 frameWidth, 0, frameWidth, b
			line2 a - frameWidth, 0, a - frameWidth, b
		endif

		if (iMountType = 1 and (iLampType = 1 or iLampType = 4 or iLampType = 6)) or \
			iMountType = 2 then
				line2 frameWidth, frameWidth, a - frameWidth, frameWidth
				line2 frameWidth, b - frameWidth, a - frameWidth, b - frameWidth
		endif

		if iMountType = 1 then

			if iLampType = 2 then
				line2 frameWidth, (b-grating_b)/2, a-frameWidth, (b-grating_b)/2
				line2 frameWidth, b-(b-grating_b)/2, a-frameWidth,  b-(b-grating_b)/2
			endif

			if iLampType = 3 then
				line2 frameWidth, 0.295*b, a-frameWidth, 0.295*b
				line2 frameWidth, 0.295*b+0.41*b, a-frameWidth, 0.295*b+0.41*b
			endif

			if iLampType = 5 then
				line2 b/1.5, 0, b/1.5, b
				line2 a-b/1.5, 0, a-b/1.5, b
				arc2 0, b/2, b/2, 270, 90
				arc2 a, b/2, b/2, 90, 270
				rect2 b/1.5, b/2-kx/2, a-b/1.5, b/2+kx/2
			endif

		endif

		if iMountType = 3 then
			rect2 0.03, 0.03, a-0.03, b-0.03
			rect2 0.01, 0.01, a-0.01, b-0.01
		endif

		! ==============================================================================
		!	Fixture
		! ==============================================================================

		add2 (a-grating_a)/2, (b-grating_b)/2
		call "Fluorescent_01" parameters a = grating_a, b = grating_b,
									lamp_combi_n = sm_n+1,
									lamp_combi_m = sm_m+1,
									gs_cont_pen=gs_cont_pen,
									combi_type=scrtype_m
		del 1

		! ==============================================================================
		!	Background
		! ==============================================================================

		fill gs_fill_type
		pen gs_fill_pen
		if gs_fill_pen<>0 then
			poly2_b 5, 2+64, gs_fill_pen, gs_back_pen,
					0, 0, 0,
					a, 0, 0,
					a, b, 0,
					0, b, 0,
					0, 0, -1
		endif

	endif


	if LibraryLangCode <> "JPN" then
		if show_txt and (gs_symbtype_2D_m = 2 OR gs_symbtype_2D_m = 3) then		! Electrical Symbol or RCP Symbol
			nTrans = 0

			hotspot2 txt_pos_x,0,UnID, txt_pos_y, 1+128 : unID=unID+1
			hotspot2 txt_pos_x,-1,UnID, txt_pos_y, 3 : unID=unID+1
			hotspot2 txt_pos_x,txt_pos_y,UnID, txt_pos_y, 2 : unID=unID+1

			hotspot2 0,txt_pos_y,UnID, txt_pos_x, 1+128 : unID=unID+1
			hotspot2 -1,txt_pos_y,UnID, txt_pos_x, 3 : unID=unID+1
			hotspot2 txt_pos_x,txt_pos_y,UnID, txt_pos_x, 2 : unID=unID+1

			define style textStyle fontType, 10/GLOB_SCALE*fsz, 5,
									gs_text_style_bold + 2 * gs_text_style_italic + 4 * gs_text_style_underline + 128 * gs_text_style_strike
			style textStyle

			add2 txt_pos_x,txt_pos_y
			nTrans = nTrans + 1

			! --- Oriented View ----------------------------------------------------

			angleViewRot = 0
			rrr = REQUEST ("View_Rotangle", "", angleViewRot)
			totalRotate = (SYMB_ROTANGLE + angleViewRot) MOD 360

			! Text Rotation - Readable / Always Horizontal / Align with Symbol
			! ----------------------------------------------------------------------
			if typeTextRotation_m = 2 then								! Readable
				if (totalRotate > (gs_readable_angle + eps) & totalRotate < (gs_readable_angle + 180 + eps)) then
					rot2 180
					nTrans = nTrans + 1
				endif
			else
				if typeTextRotation_m = 1 then							! Horizontal
					rot2 totalRotate * (SYMB_MIRRORED - not(SYMB_MIRRORED)) ! 1/-1
					nTrans = nTrans + 1
				endif
			endif
			! ----------------------------------------------------------------------

			text2 0,0,txt
			del nTrans
		endif

		if gs_symbtype_2D_m = 2 then			! Electrical Symbol
			if gs_cont_pen=0 then gs_cont_pen=1

			pen gs_cont_pen

			rect2 0,0,a,b
			line2 0,b/2,a,b/2
		endif

		if gs_symbtype_2D_m = 3 then			! RCP Symbol
			if gs_cont_pen=0 then gs_cont_pen=1

			pen gs_cont_pen

			rect2 0,0,a,b
			if iMountType = 3 then
				rect2 0.01,0.01,a-0.01,b-0.01
			endif

		endif

		! ==============================================================================
		!	Background
		! ==============================================================================

		fill gs_fill_type
		pen gs_fill_pen
		if gs_fill_pen<>0 then
			poly2_b 5, 2+64, gs_fill_pen, gs_back_pen,
					0, 0, 0,
					a, 0, 0,
					a, b, 0,
					0, b, 0,
					0, 0, -1
		endif
	else
		if gs_symbtype_2D_m = 2 or gs_symbtype_2D_m = 3 then
			add2 a/2, b/2
			call "Lamp_symbol" parameters all specSymbolRotation=180
			del 1
		endif
	endif




	if bMigrationDrag then del 1
endif
