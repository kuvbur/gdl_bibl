
if GLOB_PROJECT_DATE[1] <> 0 & GLOB_PROJECT_DATE[2] <> 0 & GLOB_PROJECT_DATE[3] <> 0 then
	iDetlevel3D	= DETLEVEL3D_DETAILED
	call "Tree Crown Density" parameters crownDensity = crownDensity returned_parameters crownDensity
	k = numLeaves * crownDensity
endif

if iDetlevel3D = DETLEVEL3D_OFF then end

IF gs_shadow=0 THEN SHADOW OFF

pen gs_cont_pen
RESOL gs_resol

if iTreeForm = TREE_FORM_1 then
	IF iDetlevel3D = DETLEVEL3D_SIMPLE then
		material gs_trunk_mat
		cylind hTrunk,diaTrunk/2
		material gs_leave_mat
		addz hTrunk+HL
		roty 90
		mulx HL/(a/2)
		revolve  3,360,0,
				a/2,0,1,
				0,0,901,
				0,a/2,3001
		del 1
		roty 180
		mulx (zzyzx-hTrunk-HL)/(a/2)
		revolve  3,360,0,
				a/2,0,1,
				0,0,901,
				0,a/2,3001
		del 4
	ENDIF
	
	
	IF iDetlevel3D = DETLEVEL3D_DETAILED then
		pen gs_cont_pen
	
		e=e*0.5
	
		!*********************   Trunk
		material s
		 cone hTrunk,e,e*0.8,90,90


		addz hTrunk

		addz -hTrunk/3
		 v=rnd(360)
		 w=rnd(r)
		rotz v
		roty w
		 cone p/4,e*0.4,e*0.2,90,90
		addz p/4
		 v=rnd(360)
		 w=rnd(r)
		rotz v
		roty w
		 cone p/3,e*0.2,e*0.1,90,90
		del 6

		 v=rnd(360)
		 w=rnd(r)
		rotz v
		roty w
		 cone p/2,e*0.8,e*0.4,90,90

		addz p/2
		addz -p/6
		 v=rnd(360)
		 w=rnd(r)
		rotz v
		roty w
		 cone p/3,e*0.2,e*0.1,90,90
		del 3

		 v=rnd(360)
		 w=rnd(r)
		rotz v
		roty w
		 cone p/4,e*0.4,e*0.2,90,90
		addz p/4
		 v=rnd(360)
		 w=rnd(r)
		rotz v
		roty w
		 cone p/4,e*0.2,e*0.1,90,90
		del 8

		 v=rnd(360)
		 w=rnd(r)
		rotz v
		roty w
		 cone p/2,e*0.8,e*0.4,90,90
		addz p/2
	
		addz -p/6

		v=rnd(360)
		w=rnd(r)
	
		rotz v
		roty w
	
		cone p/4,e*0.4,e*0.2,90,90
	
		addz p/4
	
		v=rnd(360)
		w=rnd(r)
	
		rotz v
		roty w
	
		cone p/4,e*0.2,e*0.1,90,90

		del 6
	

	
		v=rnd(360)
		w=rnd(r)
	
		rotz v
		roty w
	
		cone p/4,e*0.4,e*0.2,90,90
	
		addz p/4
	
		v=rnd(360)
		w=rnd(r)
	
		rotz v
		roty w
	
		cone p/4,e*0.2,e*0.1,90,90
	
		del 5


		v=rnd(360)
		w=rnd(r)
	
		rotz v
		roty w
	
		cone p/4,e*0.4,e*0.2,90,90
	
		addz p/4
	
		v=rnd(360)
		w=rnd(r)
	
		rotz v
		roty w
	
		cone p/4,e*0.2,e*0.1,90,90
	
		material gs_leave_mat
	
		del top
		addz hTrunk
	
		muly b/a
	
		addz 1.5348*(absoluteHeight-hTrunk)/4.9171

		for y=1 to k*0.7 step 1
			z=rnd(3.3822)
			n=asn(z/3.485)
		
			l=rnd(180)
			m=rnd(360)
		
			x=3.485*cos(n)
		
			x=x*a/5.29
			x=x-0.84*a/5.29
		
			z=z*(absoluteHeight-hTrunk)/4.9171
		
			rotz m
			addx x
			addz z
		
			roty 90-n
		
			if ABS(ung)>EPS then		!!!ung<>0
				sto=rnd(ung)
				addz -sto
			endif

			rotz l
			rotx i
			
			gosub 500
			
			del 6
			if ABS(ung)>EPS then del 1		!!!ung<>0
		next y
		
		for y=1 to k*0.25
			z=rnd(-1.3166)
			n=asn(z/1.3642)
			
			l=rnd(180)
			m=rnd(360)
			
			x=1.3642*cos(n)
			
			x=x*a/5.29
			x=x+1.2808*a/5.29
			
			z=z*(absoluteHeight-hTrunk)/4.9171

			rotz m
			addx x
			addz z
			
			roty 90-n
			
			if ABS(ung)>EPS then		!!!ung<>0
				sto=rnd(ung)
				addz -sto
			endif
			
			
			rotz l
			rotx i
			
			gosub 500
			
			del 6
			if ABS(ung)>EPS then del 1		!!!ung<>0
		next y

		
		del top
		addz hTrunk+6.2559*(absoluteHeight-hTrunk)/4.9171
		
		for y=1 to k*0.05 step 1
		
			z=rnd(-0.2183)
			z=z-6.0376
			
			n=acs(z/6.2559)
			
			l=rnd(180)
			m=rnd(360)
			
			x=6.2559*sin(n)
			x=x*a/5.29
			
			z=z*(absoluteHeight-hTrunk)/4.9171

			rotz m
			addx x
			addz z
			
			roty n
			
			if ABS(ung)>EPS then		!!!ung<>0
				sto=rnd(ung)
				addz -sto
			endif
			
			rotz l
			rotx i
			
			gosub 500
			
			del 6
			if ABS(ung)>EPS then del 1		!!!ung<>0
		next y
	endif
else
	! Hotspots
	unID = 1
	hotspot 0, 0, 0, unID	: unID=unID+1

	hotspot 0, 0, 0, 		unID, hTrunk, 1	: unID=unID+1
	hotspot 0, 0, hTrunk,	unID, hTrunk, 2	: unID=unID+1
	hotspot 0, 0, -1,		unID, hTrunk, 3	: unID=unID+1


	numLeaves = int(crownDensity/10)
	
	! Error Handling in Maximum Number of branches
	t = int(numDebranch)
	t = t*((t>0)and(t<7)) + 3*((t<=0)or(t>6))
	numDebranch = 0
	
	! Treatment of errors in data inclination branches
	angleMaxBranch	= angleMaxBranch*((angleMaxBranch<=90)and(angleMaxBranch>10))+70*((angleMaxBranch>90)or(angleMaxBranch<=10))  ! between 10° and 90°
	angleMinBranch	= angleMinBranch*((angleMinBranch<=80)and(angleMinBranch>=0))+10*((angleMinBranch>80)or(angleMinBranch < 0))  ! between  0° and 80°
	y				= angleMaxBranch*(angleMaxBranch>=angleMinBranch)+angleMinBranch*(angleMaxBranch<angleMinBranch)              ! x smaller than y
	x				= angleMinBranch*(angleMaxBranch>=angleMinBranch)+angleMaxBranch*(angleMaxBranch<angleMinBranch)
	if (x+y)>90 then
		angleMinBranch = x+y
		y=y*90/angleMinBranch
		x=x*90/angleMinBranch                  ! not more than 90° in any
	endif
	angleMaxBranch=0
	angleMinBranch=0
	
	! Constants
	q=1/2*(1+sqr(5))                  ! Golden ratio = 1.618
	u=lengthBranch/30
	v=u*2
	w=u*3            	! Size of a leaf
	z=360/t                           ! Pivot axis
	
	! Trunk
	material gs_trunk_mat
	resol 8
	circle hTrunk/20
	rotz rnd(360)
	roty rnd(5)
	cone hTrunk, hTrunk / 20, lengthBranch / q / 20, 90, 90
	addz hTrunk
	
	1: ! Level 1
	resol 6
	angleMaxBranch = angleMaxBranch+1
	angleMinBranch = 0
	if angleMaxBranch > t then end	!goto 10
	lengthBranch = lengthBranch/q
	rotz z*angleMaxBranch+rnd(z)
	roty x+rnd(y)
	cone lengthBranch, lengthBranch / 20, lengthBranch / q / 20, 90, 90
	addz lengthBranch
	
	2: ! Level 2
	resol 5
	angleMinBranch=angleMinBranch+1
	numDebranch=0
	if angleMinBranch>t goto 11
	lengthBranch=lengthBranch/q
	rotz z*angleMinBranch+rnd(z)
	roty x+rnd(y)
	cone lengthBranch, lengthBranch / 20, lengthBranch / q / 20, 90, 90
	addz lengthBranch
	
	3: ! Level 3
	resol 4
	numDebranch=numDebranch+1
	i=0
	if numDebranch>t goto 12
	lengthBranch=lengthBranch/q
	rotz z*numDebranch+rnd(z)
	roty x+rnd(y)
	cone lengthBranch, lengthBranch / 20, lengthBranch / q / 20, 90, 90
	addz lengthBranch
	
	4: ! Level 4

	material gs_leave_mat
	resol 3
	i=i+1 : if i>numLeaves goto 13
	lengthBranch=lengthBranch/q
	rotz z*i+rnd(z)
	roty x+rnd(y)
	cone lengthBranch, lengthBranch / 20, lengthBranch / q / 20, 90, 90
	addz lengthBranch
	material gs_trunk_mat
	
	
	! Leaf
	
	material gs_leave_mat

	rotx 90
	roty rnd(360)
	poly 6, 0,0, u,u, u,v, 0,w,-u,v,-u,u
	del 2
	material gs_trunk_mat
	
	
	! Going down
	14: del 3   : lengthBranch=lengthBranch*q : addz -lengthBranch/i/10 : goto 4
	13: del 3+numLeaves : lengthBranch=lengthBranch*q : addz -lengthBranch/numDebranch/10 : material gs_trunk_mat : goto 3
	12: del 3+t : lengthBranch=lengthBranch*q : addz -lengthBranch/angleMinBranch/10 : goto 2
	11: del 3+t : lengthBranch=lengthBranch*q : addz -lengthBranch/angleMaxBranch/10 : goto 1
	
	10:end
endif

!================================================================================
end ! end ! end !end ! end ! end ! end ! end ! end end ! end ! end ! end ! end !
!================================================================================



500:

!*************************     LEAF GENERATING

mulx j/0.2
muly j/0.2

if not(bRandomNumNodeLeaf) then 510

q=int(rnd(2.99))

goto (530+10*q)

510:

if numNodeLeaf=5 then 550
if numNodeLeaf=4 then 540

530:

poly 3,
0,0.1,
0.0866,-0.05,
-0.0866,-0.05

goto 560

540:

poly 4,
0,0.1,
0.1,0,
0,-0.1,
-0.1,0

goto 560

550:

poly 5,
0,0.1,
0.0951,0.0309,
0.0588,-0.0809,
-0.0588,-0.0809,
-0.0951,0.0309

560:

del 2

return


