
pen gs_cont_pen
fill gs_fill_type

! -----------------------------------------------------------------------------
! Hotspots
! -----------------------------------------------------------------------------
unID = 1

hotspot2 0, 0, unID : unID = unID + 1
hotspot2 A, 0, unID : unID = unID + 1
hotspot2 A, B, unID : unID = unID + 1
hotspot2 0, B, unID : unID = unID + 1
hotspot2 A / 2, B / 2, unID : unID = unID + 1

! -----------------------------------------------------------------------------
! Geometry
! -----------------------------------------------------------------------------
gosub iClimbType


! =============================================================================
end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end 
! =============================================================================

! =============================================================================
! Subroutines
! =============================================================================

! -----------------------------------------------------------------------------
1: ! Simple
! -----------------------------------------------------------------------------
	add2 A / 2, B

	line2 0, 0, 0, -stk

	poly2_b  4, 1+2+4+64,  gs_fill_pen,  gs_back_pen,
			-a/2, 0, 1,
			-a/2, -stk, 1,
			 a/2, -stk, 1,
			 a/2, 0, 1

	add2 0, -b+stk

	line2 0, 0, 0, -stk

	poly2_b  4, 1+2+4+64,  gs_fill_pen,  gs_back_pen,
			-a/2, 0, 1,
			-a/2, -stk, 1,
			 a/2, -stk, 1,
			 a/2, 0, 1

	del 1

	for n = 1 to 2

		add2 r1*cos(45)+dist1*cos(alf1), 0

		for k=1 to num+1

			poly2_b 4, 1+2+4+64, gs_fill_pen, gs_back_pen,
					-r1, 0, 1,
					-r1, -b, 1,
					 r1, -b, 1,
					 r1, 0, 1

			add2 dist*cos(alf1), 0

		next k

		del num+1

		del 1

		mul2 -1, 1

	next n

	del 3
return

! -----------------------------------------------------------------------------
2: ! Box
! -----------------------------------------------------------------------------

	for i = 1 to 2

		poly2_b 5, 1+2+4+64, gs_fill_pen, gs_back_pen,
			0, 0, 1,
			beamThk, 0, 1,
			beamThk, B, 1,
			0, B, 1,
			0, 0, -1

		add2 A - beamThk, 0

	next i

	del 2

	add2 beamThk, 0

	for i = 1 to 2

		poly2_b 5, 1+2+4+64, gs_fill_pen, gs_back_pen,
			0, 0, 1,
			A - beamThk * 2, 0, 1,
			A - beamThk * 2, beamThk, 1,
			0, beamThk, 1,
			0, 0, -1

		add2 0, B - beamThk

	next i

	del 3

	add2 netOffsetX, beamThk / 2

	for i = 1 to nRopesX

		add2 netDistance * (i-1), 0

		poly2_b 5, 1+2+4+64, gs_fill_pen, gs_back_pen,
			-ropeRad, 0, 1,
			ropeRad, 0, 1,
			ropeRad, B - beamThk, 1,
			-ropeRad, B - beamThk, 1,
			-ropeRad, 0, -1

		poly2_b 2, 1+2+4+64, gs_fill_pen, gs_back_pen,
			0, 0, 901,
			knotRad, 360, 4001

		add2 0, B - beamThk

		poly2_b 2, 1+2+4+64, gs_fill_pen, gs_back_pen,
			0, 0, 901,
			knotRad, 360, 4001

		del 2

	next i

	del 1

	add2 netOffsetX, netOffsetY

	for i = 1 to nRopesY

		add2 0, netDistance * (i-1)

		poly2_b 5, 1+2+4+64, gs_fill_pen, gs_back_pen,
			0, -ropeRad, 1,
			0, ropeRad, 1,
			A - netOffsetX * 2, ropeRad, 1,
			A - netOffsetX * 2, -ropeRad, 1,
			0, -ropeRad, -1

		for j = 1 to nRopesX

			add2 netDistance * (j-1), 0

			poly2_b 2, 1+2+4+64, gs_fill_pen, gs_back_pen,
				0, 0, 901,
				knotRad, 360, 4001

			del 1

		next j

		del 1

	next i

return
