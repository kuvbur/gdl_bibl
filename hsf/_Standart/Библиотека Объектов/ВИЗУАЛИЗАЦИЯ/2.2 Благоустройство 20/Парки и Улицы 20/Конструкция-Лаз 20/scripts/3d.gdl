

resol gs_resol

! -----------------------------------------------------------------------------
! Hotspots
! -----------------------------------------------------------------------------
unID = 1

hotspot 0, 0, 0, unID : unID = unID + 1
hotspot A, 0, 0, unID : unID = unID + 1
hotspot A, B, 0, unID : unID = unID + 1
hotspot 0, B, 0, unID : unID = unID + 1

if iClimbType = CLIMBTYPE_SIMPLE then

	hotspot A / 2, 0, ZZYZX, unID : unID = unID + 1
	hotspot A / 2, B, ZZYZX, unID : unID = unID + 1

endif

if iClimbType = CLIMBTYPE_WOODEN then

	hotspot 0, 0, ZZYZX, unID : unID = unID + 1
	hotspot A, 0, ZZYZX, unID : unID = unID + 1
	hotspot A, B, ZZYZX, unID : unID = unID + 1
	hotspot 0, B, ZZYZX, unID : unID = unID + 1

endif

! -----------------------------------------------------------------------------
! Geometry
! -----------------------------------------------------------------------------
gosub iClimbType

! =============================================================================
end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end 
! =============================================================================

! =============================================================================
! Subroutines
! =============================================================================

! -----------------------------------------------------------------------------
1: ! Simple
! -----------------------------------------------------------------------------
	material matWood

	add A / 2, B, 0

	rotx 90

	for i = 1 to 2

		for j = 1 to 2

			prism_	4, stk,
				-a/2, 0, 15,
				-a/2+h_wdt, 0, 15,
				 0, zzyzx-v_wdt, 15,
				 0, zzyzx, 15

			rotz 90-alf1
			gosub 100
			del 1

			mulx -1

		next j

		del 2

		addz b-stk

	next i

	del 2

	for n = 1 to 2

		add r1*sin(45), zzyzx+r1*cos(alf1), 0
		rotz -alf1
		addx dist1

		for k = 1 to num + 1

		cylind b, r1

		addx dist


		next k

		del num + 1

		del 3

		mulx -1

	next n

	del 4

return

! -----------------------------------------------------------------------------
2: ! Box
! -----------------------------------------------------------------------------

	! Vertical beams
	! -------------------
	material matWood
	beamLength = ZZYZX - beamThk

	for i = 1 to 2

		addy beamThk

		for j = 1 to 2

			gosub "drawBeam"
			addy B - beamThk * 3

		next j

		del 3
		addx A - beamThk

	next i
	del 2

	add A - beamThk, beamThk * 2 + longBarLength, 0
	gosub "drawBeam"
	del 1

	! Horizontal beams
	! -------------------
	beamLength = A

	addz ZZYZX - beamThk * 2
	rotz 90
	rotx 90

	for i = 1 to 2

		gosub "drawBeam"
		addx B - beamThk

	next i

	del 5

	beamLength = B
	addz ZZYZX
	rotx -90

	for i = 1 to 2

		gosub "drawBeam"
		addx A - beamThk

	next i

	del 4

	! Net
	! -------------------
	material matRope
	add netOffsetX, beamThk / 2, ZZYZX - beamThk
	ropeLength = B - beamThk

	for i = 1 to nRopesX

		addx netDistance * (i-1)
		gosub "drawKnot"
		addy ropeLength
		gosub "drawKnot"
		del 1
		addz ropeRad
		rotx -90
		gosub "drawRope"
		del 3

	next i

	del 1

	add netOffsetX, netOffsetY, ZZYZX - beamThk
	rotz -90
	ropeLength = A - netOffsetX * 2

	for i = 1 to nRopesY

		addx -netDistance * (i-1)

		for j = 1 to nRopesX

			addy netDistance * (j-1)
			gosub "drawKnot"
			del 1

		next j

		addz ropeRad
		rotx -90
		gosub "drawRope"
		del 3

	next i

	del 2

	! Vertical bars
	! -------------------
	material matMetal
	add beamThk / 2, beamThk * 2 + verticalBarDistance, ZZYZX - beamThk
	mulz -1
	barLength = ZZYZX - beamThk
	gosub "drawVerticalBar"
	addy verticalBarDistance
	gosub "drawVerticalBar"
	del 3

	! Horizontal bars
	! -------------------
	material matMetal
	add A - beamThk / 2, beamThk * 2, barOffset
	rotx -90
	barLength = longBarLength

	for i = 1 to nBars

		addy -barDistance * (i-1)
		barLength = longBarLength
		gosub "drawHorizontalBar"
		addz longBarLength + beamThk
		barLength = shortBarLength
		gosub "drawHorizontalBar"
		del 2

	next i

	del 2

	! Ladder
	! -------------------
	material matRope
	ropeLength = ZZYZX - beamThk * 1.5
	add A - beamThk - ladderDistance * 2, 0, ropeLength

	for i = 1 to 2

		addx ladderDistance * (i-1)
		rotx 90
		gosub "drawKnot"
		rotx 90
		addy ropeRad
		gosub "drawRope"
		del 4

	next i

	del 1

	material matWood
	add A - beamThk - ladderDistance * 1.5 - stepWidth / 2, -ropeRad, stepOffset
	roty 90

	for i = 1 to nSteps

		addx -stepDistance * (i-1)
		gosub "drawStep"
		del 1

	next i

	del 2

	! Rope
	! -------------------
	material matRope
	ropeLength = ZZYZX - beamThk * 1.5
	add A / 3, B, ropeLength

	rotx -90
	gosub "drawKnot"
	rotx -90
	addy -ropeRad
	gosub "drawRope"
	del 4

	add A / 3, B + ropeRad, stepOffset

	for i = 1 to nSteps

		addz stepDistance * (i-1)
		gosub "drawKnot"
		del 1

	next i

	del 1

return

! -----------------------------------------------------------------------------
"drawBeam":
! -----------------------------------------------------------------------------
	prism_ 5, beamLength,
		0, 0, 15,
		beamThk, 0, 15,
		beamThk, beamThk, 15,
		0, beamThk, 15,
		0, 0, -1

return

! -----------------------------------------------------------------------------
"drawRope":
! -----------------------------------------------------------------------------
	prism_ 2, ropeLength,
		0, 0, 979,
		ropeRad, 360, 4079

return

! -----------------------------------------------------------------------------
"drawKnot":
! -----------------------------------------------------------------------------
	prism_ 2, knotHeight,
		0, 0, 979,
		knotRad, 360, 4079

return

! -----------------------------------------------------------------------------
"drawHorizontalBar":
! -----------------------------------------------------------------------------
	prism_ 5, 0.01,
		-barRad, barRad * 2, 15,
		barRad, barRad * 2, 15,
		barRad, -barRad * 2, 15,
		-barRad, -barRad * 2, 15,
		-barRad, barRad * 2, -1

	addz 0.01

	prism_ 2, barLength - 0.02,
		0, 0, 979,
		barRad, 360, 4079

	addz barLength - 0.02

	prism_ 5, 0.01,
		-barRad, barRad * 2, 15,
		barRad, barRad * 2, 15,
		barRad, -barRad * 2, 15,
		-barRad, -barRad * 2, 15,
		-barRad, barRad * 2, -1

	del 2

return

! -----------------------------------------------------------------------------
"drawVerticalBar":
! -----------------------------------------------------------------------------
	prism_ 5, 0.01,
		-barRad, barRad * 2, 15,
		barRad, barRad * 2, 15,
		barRad, -barRad * 2, 15,
		-barRad, -barRad * 2, 15,
		-barRad, barRad * 2, -1

	addz 0.01

	prism_ 2, barLength - 0.02,
		0, 0, 979,
		barRad, 360, 4079

	del 1

return

! -----------------------------------------------------------------------------
"drawStep":
! -----------------------------------------------------------------------------
	prism_ 2, stepWidth,
		0, 0, 979,
		stepRad, 360, 4079

return


! -----------------------------------------------------------------------------
100:
! -----------------------------------------------------------------------------
base
vert    0, 0, 0 !#1
vert    1, 1, 0 !#2
vert   -1, 1, 0 !#3
vert    0, 0, 1 !#4
coor    2, -1, -2, -3, -4
body -1

return


