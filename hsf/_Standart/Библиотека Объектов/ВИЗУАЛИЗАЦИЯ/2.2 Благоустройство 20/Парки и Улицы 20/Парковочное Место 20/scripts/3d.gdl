
if gs_detlevel_3D_m = 0 then
	end
else
	resol 18
	pen gs_cont_pen
	material mat1
	define style "parking" fontType, 250,5,1
	style "parking"
endif

if not(gs_shadow) then SHADOW OFF


if iTerrainSlope <> TERRAINSLOPE_NOSLOPE then
	if iTerrainSlope = TERRAINSLOPE_LENGTHSLOPE then ROTx gs_terrx
	if iTerrainSlope = TERRAINSLOPE_SIDESLOPE then ROTy gs_terry
	mulz -1
	cutplane
	del 1
endif

unID = 0
hotspot 0,0,0 :	unID=unID+1
ADDx A

hotspot  0, 0,	0, unID, B, 1+128:	unID=unID+1
hotspot  0, -1,	0, unID, B, 3:		unID=unID+1
hotspot  0, B,	0, unID, B, 2:		unID=unID+1

del 1
hotspot  0, 0, 0, unID,	A, 1+128:	unID=unID+1
hotspot -1, 0, 0, unID,	A, 3:		unID=unID+1
hotspot  A, 0, 0, unID,	A, 2:		unID=unID+1

if sfs then gosub "drawLine"

if iNumberingSide = NUMBERING_SIDE1 then
	_writeOutNum	= 1 + num_start - 1
	_writeOutCont	= 1
else
	_writeOutNum	= gs_list_parkingPlaces + num_start - 1
	_writeOutCont	= -1
endif

atFirstNum		= 1
atFirstHandic	= 1
atFirstFamily	= 1
atFirstNormal	= 1
atFirstEmpty	= 1
for i = 1 to vardim1(parkingSizes)
	isymboltype = int(parkingSizes[i][2])

	if isymboltype > 0 then
		gosub "drawSign"
		gosub "numbering"
		gosub "drawBollard"
	else
		if markEmptySpace then
			add tl,tb,0
			if SYMB_MIRRORED then mul -1,1,1
			if bNeedTextRotation and bTextFollow2DOrientation then rotz 180

			if isymboltype < 0 then
				text 0.01, 0, "X"
			else
				text 0.01, 0, "E"
			endif	

			if bNeedTextRotation and bTextFollow2DOrientation then del 1
			if SYMB_MIRRORED then del 1
			del 1
		endif
	endif

	add parkingSizes[i][1],0,0

	if i < vardim1(parkingSizes) then
		if not(isymboltype = SYMBOL_WHEELCHAIR) then gosub  "drawLine"
	else
		if sss then gosub  "drawLine"
	endif

next i
del i-1

if bEmptyPlace then
	for i = 1 to iNumEmptyPlace
		gosub "emptySpaceEditing"
	next i
endif

if iTerrainSlope <> TERRAINSLOPE_NOSLOPE then
	del 1
	cutend
endif

end

"drawLine":
	prism_  5, 0.01,
		   -sw/2, 0, 15,
			sw/2, 0, 15,
			sw/2, b, 15,
		   -sw/2, b, 15,
		   -sw/2, 0, -1
return

"drawSign":
	if isymboltype = SYMBOL_WHEELCHAIR then
		if atFirstHandic then
			if GLOB_FEEDBACK_MODE = 1 then
				add handicapWidth, 0, 0
				gosub "drawLine"
				del 1
			endif

			hotspot 0, B/2, 0, unID, handicapWidth, 1+128			: unID = unID + 1
			hotspot -1, B/2, 0, unID, handicapWidth, 3			: unID = unID + 1
			hotspot handicapWidth, B/2, 0, unID, handicapWidth, 2	: unID = unID + 1

			hotspot parkingSizes[i][1]-handicapAddWidth, B/2, 0, unID, handicapAddWidth, 1+128			: unID = unID + 1
			hotspot parkingSizes[i][1]-handicapAddWidth-1, B/2, 0, unID, handicapAddWidth, 3			: unID = unID + 1
			hotspot parkingSizes[i][1], B/2, 0, unID, handicapAddWidth, 2	: unID = unID + 1
			atFirstHandic = 0
		endif

		add 0, B/2-(2/3.079158810136 * sizeMod)/2, 0
		add (parkingSizes[i][1]-handicapAddWidth)/2-(2/3.079158810136 * sizeMod)/2+sw/2, 0, 0
		call "parking_symbols" parameters	A = 2/3.079158810136 * sizeMod,
											B = 2/3.079158810136 * sizeMod,
											ZZYZX = 0.01,
											isymboltype = 1
		del 2

		add parkingSizes[i][1]-handicapAddWidth+sw/2, 0, 0
		if handicapAddWidth > 0 then
			call "parking_symbols" parameters	A = handicapAddWidth,
												B = B,
												ZZYZX = 0.01,
												isymboltype = 3,
												lineWidth = sw
		endif
		del 1

	endif

	if isymboltype = SYMBOL_FAMILY then
		if atFirstFamily then
			if GLOB_FEEDBACK_MODE = 1 then
				add familyWidth, 0, 0
				gosub "drawLine"
				del 1
			endif

			hotspot 0, B/2, 0, unID, familyWidth, 1+128		: unID = unID + 1
			hotspot -1, B/2, 0, unID, familyWidth, 3			: unID = unID + 1
			hotspot familyWidth, B/2, 0, unID, familyWidth, 2	: unID = unID + 1
			atFirstFamily = 0
		endif

		add 0, B/2-(1.796787381172/3.079158810136 * sizeMod)/2, 0
		add parkingSizes[i][1]/2-(2.879158810136/3.079158810136 * sizeMod)/2, 0, 0
		call "parking_symbols" parameters	A = sizeMod,
											B = 2.009757855857/3.079158810136 * sizeMod,
											ZZYZX = 0.01,
											isymboltype = 2
		del 2
	endif

	if isymboltype = SYMBOL_NORMAL then
		if atFirstNormal then
			if GLOB_FEEDBACK_MODE = 1 then
				add minspace, 0, 0
				gosub "drawLine"
				del 1
			endif

			hotspot 0, B/2, 0, unID, minspace, 1+128		: unID = unID + 1
			hotspot -1, B/2, 0, unID, minspace, 3			: unID = unID + 1
			hotspot minspace, B/2, 0, unID, minspace, 2	: unID = unID + 1
			atFirstNormal = 0
		endif
	endif
return


"numbering":
	if show_num then
		if atFirstNum then
			hotspot tl,		0,			0.015,		unID,	tb,		1+128 	:unID = unID + 1
			hotspot tl,		-1,			0.015,		unID,	tb,		3 		:unID = unID + 1
			hotspot tl,		tb,			0.015,		unID,	tb,		2		:unID = unID + 1
			
			hotspot 0,		tb,			0.015,		unID,	tl,		1+128 	:unID = unID + 1
			hotspot -1,		tb,			0.015,		unID,	tl,		3 		:unID = unID + 1
			hotspot tl,		tb,			0.015,		unID,	tl,		2 		:unID = unID + 1
			atFirstNum = 0
		endif
		nTrans3D = 0

		add tl,tb,0
		if SYMB_MIRRORED then mul -1,1,1
		if bNeedTextRotation and bTextFollow2DOrientation then rotz 180

		text 0.01, 0, _writeOutNum

		if bNeedTextRotation and bTextFollow2DOrientation then del 1
		if SYMB_MIRRORED then del 1
		del 1

		_writeOutNum = _writeOutNum + _writeOutCont
	else
		unID = unID + 6
	endif
return

"drawBollard":
	if bBollard then
		if iTerrainSlope = TERRAINSLOPE_LENGTHSLOPE then
			bollardOffsetRatY = cos(gs_terrx)
			bollardOffsetZ = B*sin(gs_terrx)
			bollardHeightAddRot = max(bollardDepth/2,bollardDia/2)*tan(abs(gs_terrx))
		else
			bollardOffsetRatY = 1
			bollardOffsetZ = 0
			if iTerrainSlope = TERRAINSLOPE_SIDESLOPE then
				bollardHeightAddRot = max(bollardWidth/2,bollardDia/2)*tan(abs(gs_terry))
			else
				bollardHeightAddRot = 0
			endif
		endif
	
		if isymboltype = SYMBOL_WHEELCHAIR then
			_handicapAddMod = handicapAddWidth
		else
			_handicapAddMod = 0
		endif
	
		if iTerrainSlope = TERRAINSLOPE_SIDESLOPE then
			bollardOffsetRatX = cos(gs_terry)
			bollardOffsetZ = -((parkingSizes[i][1]-_handicapAddMod)/2)*sin(gs_terry)*(2*i-1)
		else
			bollardOffsetRatX = 1
		endif
		add (parkingSizes[i][1]-_handicapAddMod)/2, B, 0-bollardHeightAddRot
	
		if iTerrainSlope = TERRAINSLOPE_LENGTHSLOPE then ROTx -gs_terrx
		if iTerrainSlope = TERRAINSLOPE_SIDESLOPE then ROTy -gs_terry
	
		call "bollard_m" parameters all bPartOfLayout 	 = 1,
										bRotableLayout   = 1,
										bollardHeight    = bollardHeight + bollardHeightAddRot,
										enableBollardTypes		= 2 + 4 + 8 + 16 + 32 + 64 + 128 + 256 + 512 + 1024 + 2048,
										bollardUniD				= 100 + 10 * i
	
		if iTerrainSlope = TERRAINSLOPE_LENGTHSLOPE then del 1
		if iTerrainSlope = TERRAINSLOPE_SIDESLOPE then del 1
		del 1
	endif
return

"emptySpaceEditing":
	if i = 1 then
		hotspot 0, B/2, 0, unID, emptyPosition1, 1+128			: unID = unID + 1
		hotspot -1, B/2, 0, unID, emptyPosition1, 3				: unID = unID + 1
		hotspot emptyPosition1, B/2, 0, unID, emptyPosition1, 2	: unID = unID + 1
		
		if not(bUniformEmptyWidth) then
			hotspot emptyPosition1, B/2, 0, unID, emptyWidth1, 1+128			: unID = unID + 1
			hotspot emptyPosition1-1, B/2, 0, unID, emptyWidth1, 3			: unID = unID + 1
			hotspot emptyPosition1+emptyWidth1, B/2, 0, unID, emptyWidth1, 2	: unID = unID + 1
		else
			hotspot emptyPosition1, B/2, 0, unID, UniformEmptyWidth, 1+128				: unID = unID + 1
			hotspot emptyPosition1-1, B/2, 0, unID, UniformEmptyWidth, 3					: unID = unID + 1
			hotspot emptyPosition1+UniformEmptyWidth, B/2, 0, unID, UniformEmptyWidth, 2	: unID = unID + 1
		endif
	else
		unID = unID + 3
	endif

	if i = 2 then
		hotspot 0, B/2, 0, unID, emptyPosition2, 1+128			: unID = unID + 1
		hotspot -1, B/2, 0, unID, emptyPosition2, 3				: unID = unID + 1
		hotspot emptyPosition2, B/2, 0, unID, emptyPosition2, 2	: unID = unID + 1
		
		if not(bUniformEmptyWidth) then
			hotspot emptyPosition2, B/2, 0, unID, emptyWidth2, 1+128			: unID = unID + 1
			hotspot emptyPosition2-1, B/2, 0, unID, emptyWidth2, 3			: unID = unID + 1
			hotspot emptyPosition2+emptyWidth2, B/2, 0, unID, emptyWidth2, 2	: unID = unID + 1
		else
			unID = unID + 3
		endif
	else
		unID = unID + 3
	endif

	if i = 3 then
		hotspot 0, B/2, 0, unID, emptyPosition3, 1+128			: unID = unID + 1
		hotspot -1, B/2, 0, unID, emptyPosition3, 3				: unID = unID + 1
		hotspot emptyPosition3, B/2, 0, unID, emptyPosition3, 2	: unID = unID + 1
		
		if not(bUniformEmptyWidth) then
			hotspot emptyPosition3, B/2, 0, unID, emptyWidth3, 1+128			: unID = unID + 1
			hotspot emptyPosition3-1, B/2, 0, unID, emptyWidth3, 3			: unID = unID + 1
			hotspot emptyPosition3+emptyWidth3, B/2, 0, unID, emptyWidth3, 2	: unID = unID + 1
		else
			unID = unID + 3
		endif
	else
		unID = unID + 3
	endif

	if i = 4 then
		hotspot 0, B/2, 0, unID, emptyPosition4, 1+128			: unID = unID + 1
		hotspot -1, B/2, 0, unID, emptyPosition4, 3				: unID = unID + 1
		hotspot emptyPosition4, B/2, 0, unID, emptyPosition4, 2	: unID = unID + 1
		
		if not(bUniformEmptyWidth) then
			hotspot emptyPosition4, B/2, 0, unID, emptyWidth4, 1+128			: unID = unID + 1
			hotspot emptyPosition4-1, B/2, 0, unID, emptyWidth4, 3			: unID = unID + 1
			hotspot emptyPosition4+emptyWidth4, B/2, 0, unID, emptyWidth4, 2	: unID = unID + 1
		else
			unID = unID + 3
		endif
	else
		unID = unID + 3
	endif

	if i = 5 then
		hotspot 0, B/2, 0, unID, emptyPosition5, 1+128			: unID = unID + 1
		hotspot -1, B/2, 0, unID, emptyPosition5, 3				: unID = unID + 1
		hotspot emptyPosition5, B/2, 0, unID, emptyPosition5, 2	: unID = unID + 1
		
		if not(bUniformEmptyWidth) then
			hotspot emptyPosition5, B/2, 0, unID, emptyWidth5, 1+128			: unID = unID + 1
			hotspot emptyPosition5-1, B/2, 0, unID, emptyWidth5, 3			: unID = unID + 1
			hotspot emptyPosition5+emptyWidth5, B/2, 0, unID, emptyWidth5, 2	: unID = unID + 1
		else
			unID = unID + 3
		endif
	else
		unID = unID + 3
	endif

	if i = 6 then
		hotspot 0, B/2, 0, unID, emptyPosition6, 1+128			: unID = unID + 1
		hotspot -1, B/2, 0, unID, emptyPosition6, 3				: unID = unID + 1
		hotspot emptyPosition6, B/2, 0, unID, emptyPosition6, 2	: unID = unID + 1
		
		if not(bUniformEmptyWidth) then
			hotspot emptyPosition6, B/2, 0, unID, emptyWidth6, 1+128			: unID = unID + 1
			hotspot emptyPosition6-1, B/2, 0, unID, emptyWidth6, 3			: unID = unID + 1
			hotspot emptyPosition6+emptyWidth6, B/2, 0, unID, emptyWidth6, 2	: unID = unID + 1
		else
			unID = unID + 3
		endif
	else
		unID = unID + 3
	endif

	if i = 7 then
		hotspot 0, B/2, 0, unID, emptyPosition7, 1+128			: unID = unID + 1
		hotspot -1, B/2, 0, unID, emptyPosition7, 3				: unID = unID + 1
		hotspot emptyPosition7, B/2, 0, unID, emptyPosition7, 2	: unID = unID + 1
		
		if not(bUniformEmptyWidth) then
			hotspot emptyPosition7, B/2, 0, unID, emptyWidth7, 1+128			: unID = unID + 1
			hotspot emptyPosition7-1, B/2, 0, unID, emptyWidth7, 3			: unID = unID + 1
			hotspot emptyPosition7+emptyWidth7, B/2, 0, unID, emptyWidth7, 2	: unID = unID + 1
		else
			unID = unID + 3
		endif
	else
		unID = unID + 3
	endif

	if i = 8 then
		hotspot 0, B/2, 0, unID, emptyPosition8, 1+128			: unID = unID + 1
		hotspot -1, B/2, 0, unID, emptyPosition8, 3				: unID = unID + 1
		hotspot emptyPosition8, B/2, 0, unID, emptyPosition8, 2	: unID = unID + 1
		
		if not(bUniformEmptyWidth) then
			hotspot emptyPosition8, B/2, 0, unID, emptyWidth8, 1+128			: unID = unID + 1
			hotspot emptyPosition8-1, B/2, 0, unID, emptyWidth8, 3			: unID = unID + 1
			hotspot emptyPosition8+emptyWidth8, B/2, 0, unID, emptyWidth8, 2	: unID = unID + 1
		else
			unID = unID + 3
		endif
	else
		unID = unID + 3
	endif

	if i = 9 then
		hotspot 0, B/2, 0, unID, emptyPosition9, 1+128			: unID = unID + 1
		hotspot -1, B/2, 0, unID, emptyPosition9, 3				: unID = unID + 1
		hotspot emptyPosition9, B/2, 0, unID, emptyPosition9, 2	: unID = unID + 1
		
		if not(bUniformEmptyWidth) then
			hotspot emptyPosition9, B/2, 0, unID, emptyWidth9, 1+128			: unID = unID + 1
			hotspot emptyPosition9-1, B/2, 0, unID, emptyWidth9, 3			: unID = unID + 1
			hotspot emptyPosition9+emptyWidth9, B/2, 0, unID, emptyWidth9, 2	: unID = unID + 1
		else
			unID = unID + 3
		endif
	else
		unID = unID + 3
	endif

	if i = 10 then
		hotspot 0, B/2, 0, unID, emptyPosition10, 1+128			: unID = unID + 1
		hotspot -1, B/2, 0, unID, emptyPosition10, 3				: unID = unID + 1
		hotspot emptyPosition10, B/2, 0, unID, emptyPosition10, 2	: unID = unID + 1
		
		if not(bUniformEmptyWidth) then
			hotspot emptyPosition10, B/2, 0, unID, emptyWidth10, 1+128			: unID = unID + 1
			hotspot emptyPosition10-1, B/2, 0, unID, emptyWidth10, 3				: unID = unID + 1
			hotspot emptyPosition10+emptyWidth10, B/2, 0, unID, emptyWidth10, 2	: unID = unID + 1
		else
			unID = unID + 3
		endif
	else
		unID = unID + 3
	endif
return



