
pen    gs_cont_pen

rect2 0, 0, a, b

unID=1
hotspot2 a/2,	b/2, 	unID: unID=unID+1

if ws then
	if iEntrance = ENTRANCE_FRONT then
		hotspot2 0,					0,	unID,	entranceAxis, 1+128	: unID=unID+1
		hotspot2 entranceAxis,		0,	unID,	entranceAxis, 2		: unID=unID+1
		hotspot2 -entranceAxis,		0,	unID,	entranceAxis, 3		: unID=unID+1
	else
		hotspot2 0, 				0,	unID,	entranceAxis, 1+128	: unID=unID+1
		hotspot2 0,		 entranceAxis,	unID,	entranceAxis, 2		: unID=unID+1
		hotspot2 0,		-entranceAxis,	unID,	entranceAxis, 3		: unID=unID+1
	endif
endif

if et then
		hotspot2 0,				et_melys+ws_thk,	unID, internalAxis, 1+128	: unID=unID+1
		hotspot2 internalAxis,	et_melys+ws_thk,	unID, internalAxis, 2		: unID=unID+1
		hotspot2 -internalAxis,	et_melys+ws_thk,	unID, internalAxis, 3		: unID=unID+1


		hotspot2 0,				ws_thk,				unID, et_melys, 	1+128	: unID=unID+1
		hotspot2 0,				et_melys+ws_thk,	unID, et_melys, 	2		: unID=unID+1
		hotspot2 0,				-et_melys,			unID, et_melys, 	3		: unID=unID+1

		hotspot2 a,				ws_thk,				unID, et_melys, 	1+128	: unID=unID+1
		hotspot2 a,				et_melys+ws_thk,	unID, et_melys, 	2		: unID=unID+1
		hotspot2 a,				-et_melys,			unID, et_melys, 	3		: unID=unID+1
endif

CALL "Resize_A_B_ZZYZX" Parameters ALL

set fill gs_fill_type

POLY2_B   4, 2+4+64,  gs_fill_pen, gs_back_pen,
		0, 0, 1,
		a, 0, 1,
		a, b, 1,
		0, b, 1

if ws then
	rect2 ws_thk, ws_thk, a-ws_thk, b-ws_thk
endif

if et then
	line2 ws_thk, ws_thk+et_melys, a-ws_thk, ws_thk+et_melys
	line2 ws_thk, ws_thk+et_melys+ws_thkin, a-ws_thk, ws_thk+et_melys+ws_thkin

	line2 internalAxis-entrance_width/2, ws_thk+et_melys, internalAxis-entrance_width/2, ws_thk+et_melys+ws_thkin
	line2 internalAxis+entrance_width/2, ws_thk+et_melys, internalAxis+entrance_width/2, ws_thk+et_melys+ws_thkin

	if iInternalDoorDirection=LEFT then
		line2 internalAxis-entrance_width/2+0.04, ws_thk+et_melys+ws_thkin, internalAxis-entrance_width/2+0.04, ws_thk+et_melys-(entrance_width-0.08)
		line2 internalAxis+entrance_width/2-0.04, ws_thk+et_melys, internalAxis+entrance_width/2-0.04, ws_thk+et_melys+ws_thkin
		arc2 internalAxis-entrance_width/2+0.04, ws_thk+et_melys, entrance_width-0.08, 270, 360
	endif

	if iInternalDoorDirection=RIGHT then
		line2 internalAxis-entrance_width/2+0.04, ws_thk+et_melys, internalAxis-entrance_width/2+0.04, ws_thk+et_melys+ws_thkin
		line2 internalAxis+entrance_width/2-0.04, ws_thk+et_melys+ws_thkin, internalAxis+entrance_width/2-0.04, ws_thk+et_melys-(entrance_width-0.08)
		arc2 internalAxis+entrance_width/2-0.04, ws_thk+et_melys, entrance_width-0.08, 180, 270
	endif
endif

if ws then
	if iEntrance = ENTRANCE_FRONT then
		line2 entranceAxis-entrance_width/2, 0, entranceAxis-entrance_width/2, ws_thk
		line2 entranceAxis+entrance_width/2, 0, entranceAxis+entrance_width/2, ws_thk

		if iEntranceDoorDirection=LEFT then
			line2 entranceAxis-entrance_width/2+0.04, ws_thk, entranceAxis-entrance_width/2+0.04, -(entrance_width-0.08)
			line2 entranceAxis+entrance_width/2-0.04, ws_thk, entranceAxis+entrance_width/2-0.04, 0
			arc2 entranceAxis-entrance_width/2+0.04, 0, entrance_width-0.08, 270, 360
		endif

		if iEntranceDoorDirection=RIGHT then
			line2 entranceAxis-entrance_width/2+0.04, 0, entranceAxis-entrance_width/2+0.04, ws_thk
			line2 entranceAxis+entrance_width/2-0.04, ws_thk, entranceAxis+entrance_width/2-0.04, -(entrance_width-0.08)
			arc2 entranceAxis+entrance_width/2-0.04, 0, entrance_width-0.08, 180, 270
		endif
	endif

	if iEntrance = ENTRANCE_SIDE then

		rot2 -90
		add2 0,0
		mul2 -1,1

		line2 entranceAxis-entrance_width/2, 0, entranceAxis-entrance_width/2, ws_thk
		line2 entranceAxis+entrance_width/2, 0, entranceAxis+entrance_width/2, ws_thk

		if iEntranceDoorDirection=RIGHT then
			line2 entranceAxis-entrance_width/2+0.04, ws_thk, entranceAxis-entrance_width/2+0.04, -(entrance_width-0.08)
			line2 entranceAxis+entrance_width/2-0.04, ws_thk, entranceAxis+entrance_width/2-0.04, 0
			arc2 entranceAxis-entrance_width/2+0.04, 0, entrance_width-0.08, 270, 360
		endif

		if iEntranceDoorDirection=LEFT then
			line2 entranceAxis-entrance_width/2+0.04, 0, entranceAxis-entrance_width/2+0.04, ws_thk
			line2 entranceAxis+entrance_width/2-0.04, ws_thk, entranceAxis+entrance_width/2-0.04, -(entrance_width-0.08)
			arc2 entranceAxis+entrance_width/2-0.04, 0, entrance_width-0.08, 180, 270
		endif

		del 3
	endif
endif


add2	a-ws_thk-k_melys,	ws_thkin+et*(et_melys+ws_thk)+0.05

rect2	0, 0, k_melys, k_szel

del 1

! ----------- Bench ----------------------------------------------------------------------------------------------------------

if pad_typ_int = PAD_TYPE_U_SHAPE then

	add2 ws_thk, 0

	for i=1 to pad_num

		if iEntrance = ENTRANCE_SIDE and not(et) then
		poly2_  9, 1,
					0,					entranceAxis+entrance_width/2,	15,
					0,					b-ws_thk,								15,
					a-2*ws_thk,			b-ws_thk,								15,
					a-2*ws_thk,			kh,										15,
					a-2*ws_thk-padwdt, 	kh,										15,
					a-2*ws_thk-padwdt, 	b-ws_thk-padwdt,						15,
					padwdt,				b-ws_thk-padwdt,						15,
					padwdt,				entranceAxis+entrance_width/2,	15,
					0,					entranceAxis+entrance_width/2,	-1
			if entranceAxis > 1.5*entrance_width then
				poly2_ 5, 1,
						0,					ws_thk,			15,
						0,					entranceAxis-entrance_width/2,	15,
						padwdt, 			entranceAxis-entrance_width/2,	15,
						padwdt,				ws_thk,			15,
						0,					ws_thk,			-1
			endif
		else
			poly2_  9, 1,
					0,					ws_thk+et*(et_melys+ws_thk),			15,
					0,					b-ws_thk,								15,
					a-2*ws_thk,			b-ws_thk,								15,
					a-2*ws_thk,			kh,										15,
					a-2*ws_thk-padwdt,	kh,										15,
					a-2*ws_thk-padwdt,	b-ws_thk-padwdt,						15,
					padwdt,				b-ws_thk-padwdt,						15,
					padwdt,				ws_thk+et*(et_melys+ws_thk),			15,
					0,					ws_thk+et*(et_melys+ws_thk),			-1
		endif

		add2 padwdt,0
		a=a-2*padwdt
		b=b-padwdt

	next i
	del pad_num
else

	if pad_typ_int = PAD_TYPE_L_SHAPE then

		add2 ws_thk, 0

		for i=1 to pad_num
			if iEntrance = ENTRANCE_SIDE and et = 0 then
				poly2_  7, 1,
						0,			entranceAxis+entrance_width/2+et*(et_melys+ws_thk),	15,
						0,			b-ws_thk,											15,
						a-2*ws_thk,	b-ws_thk,											15,
						a-2*ws_thk, b-padwdt-ws_thk, 									15,
						padwdt, 	b-padwdt-ws_thk, 									15,
						padwdt, 	entranceAxis+entrance_width/2+et*(et_melys+ws_thk),	15,
						0,			entranceAxis+entrance_width/2+et*(et_melys+ws_thk),	-1
				if entranceAxis > 1.5*entrance_width then
					poly2_ 5, 1,
							0,			ws_thk+et*(et_melys+ws_thk),						15,
							0,			entranceAxis-entrance_width/2+et*(et_melys+ws_thk),	15,
							padwdt, 	entranceAxis-entrance_width/2+et*(et_melys+ws_thk),	15,
							padwdt,		ws_thk+et*(et_melys+ws_thk),						15,
							0,			ws_thk+et*(et_melys+ws_thk),						-1
				endif
			else
			poly2_  7, 1,
						0,			ws_thk+et*(et_melys+ws_thk),	15,
						0,			b-ws_thk,						15,
						a-2*ws_thk,	b-ws_thk,						15,
						a-2*ws_thk, b-padwdt-ws_thk, 				15,
						padwdt, 	b-padwdt-ws_thk, 				15,
						padwdt, 	ws_thk+et*(et_melys+ws_thk),	15,
						0,			ws_thk+et*(et_melys+ws_thk),	-1
			endif

			add2 padwdt, 0
			a=a-padwdt
			b=b-padwdt

		next i

		del pad_num

	else

		! if pad_typ_int = PAD_TYPE_STRAIGHT then

		add2 ws_thk, 0

		for i=1 to pad_num

			poly2_  5, 1,
					0,				b-ws_thk,			15,
					a-2*ws_thk,		b-ws_thk,			15,
					a-2*ws_thk,		b-padwdt-ws_thk,	15,
					0,				b-padwdt-ws_thk,	15,
					0,				b-ws_thk,			-1

			b=b-padwdt

		next i
	endif
endif
