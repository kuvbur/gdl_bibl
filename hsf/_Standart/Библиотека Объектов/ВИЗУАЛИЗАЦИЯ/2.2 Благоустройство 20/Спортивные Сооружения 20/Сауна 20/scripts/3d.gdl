
IF gs_detlevel_3D_m = DLEV3D_OFF THEN END

IF not(gs_shadow) THEN SHADOW OFF


pen gs_cont_pen

! ----------- side walls ------------------------------------------------------------------------------------------------------
if ws then

	if iEntrance = ENTRANCE_SIDE then
		rotz -90
		mulx -1
	endif

	! --- entr. door ---

	material mat_bej

	rotx 90
	add entranceAxis, floor_thk, 0

	if iEntranceDoorDirection = RIGHT then mulx -1

	prism_ 10, 0.02,
		-entrance_width/2-0.02,	0,						15,
		-entrance_width/2-0.02,	entrance_height+0.02,	15,
		 entrance_width/2+0.02,	entrance_height+0.02,	15,
		 entrance_width/2+0.02,	0,						15,
		-entrance_width/2-0.02,	0,						-1,

		 entrance_width/2-gs_rail_right,	gs_rail_bottom,					14,
		 entrance_width/2-gs_rail_right,	entrance_height-gs_rail_top,	14,
		-entrance_width/2+gs_rail_left,		entrance_height-gs_rail_top,	14,
		-entrance_width/2+gs_rail_left,		gs_rail_bottom,					14,
		 entrance_width/2-gs_rail_right,	gs_rail_bottom,					-1

	gosub 1000
	body -1

	addz -0.025
	prism_ 10, 0.025,
		 entrance_width/2,	0,					15,
		 entrance_width/2,	entrance_height,	15,
		-entrance_width/2,	entrance_height,	15,
		-entrance_width/2,	0,					15,
		 entrance_width/2,	0,					-1,

		 entrance_width/2-gs_rail_right,	gs_rail_bottom,					11,
		 entrance_width/2-gs_rail_right,	entrance_height-gs_rail_top,	11,
		-entrance_width/2+gs_rail_left,		entrance_height-gs_rail_top,	11,
		-entrance_width/2+gs_rail_left,		gs_rail_bottom,					11,
		 entrance_width/2-gs_rail_right,	gs_rail_bottom,					-1
	body -1
	del 1

	material mat_bejg

	addz -0.005
	prism_ 5, 0.005,
		 entrance_width/2-gs_rail_right,	gs_rail_bottom,					15,
		 entrance_width/2-gs_rail_right,	entrance_height-gs_rail_top,	15,
		-entrance_width/2+gs_rail_left,		entrance_height-gs_rail_top,	15,
		-entrance_width/2+gs_rail_left,		gs_rail_bottom,					15,
		 entrance_width/2-gs_rail_right,	gs_rail_bottom,					-1
	del 1

	if iEntranceDoorDirection = RIGHT then del 1

	del 2

	if iEntrance =  ENTRANCE_SIDE then del 2

	if iEntrance =  ENTRANCE_SIDE then

		rotx 90
		roty -90
		add -entranceAxis,floor_thk, -ws_thk-0.5

		cutpolya 4, 1, 0.5,
			 entrance_width/2,	0,					15,
			 entrance_width/2,	entrance_height,	15,
			-entrance_width/2,	entrance_height,	15,
			-entrance_width/2,	0,					15

		del 3

	else

		rotx 90
		add entranceAxis, floor_thk, -ws_thk-0.5

		cutpolya 4, 1, 0.5,
			 entrance_width/2,	0,					15,
			 entrance_width/2,	entrance_height,	15,
			-entrance_width/2,	entrance_height,	15,
			-entrance_width/2,	0,					15

		del 2

	endif


	! --- walls ---

	material mat_ws
	addz floor_thk
	PRISM_  10,		zzyzx-floor_thk,
			0, 0, 15,
			a, 0, 15,
			a, b, 15,
			0, b, 15,
			0, 0, -1,

			ws_thk,		ws_thk,		15,
			a-ws_thk,	ws_thk,		15,
			a-ws_thk,	b-ws_thk,	15,
			ws_thk,		b-ws_thk,	15,
			ws_thk,		ws_thk,		-1

	gosub 2000
	del 1
	cutend

endif


! ----------- floor -----------------------------------------------------------------------------------------------------------

if floor_thk > 0 then

	material mat_fl

	PRISM_  5,	floor_thk,
			0, 0, 15,
			a, 0, 15,
			a, b, 15,
			0, b, 15,
			0, 0, -1

endif

! ----------- Entrance Hall ---------------------------------------------------------------------------------------------------

if et then

	add 0, ws_thk+et_melys+ws_thkin, 0
	rotx 90

	material mat_ws

	PRISM_  9,	ws_thkin,
			ws_thk,						floor_thk,					15,
			ws_thk,						zzyzx,						15,
			a-ws_thk, 					zzyzx,						15,
			a-ws_thk,					floor_thk,					15,
			internalAxis+entrance_width/2,	floor_thk,					15,
			internalAxis+entrance_width/2,	floor_thk+entrance_height,	15,
			internalAxis-entrance_width/2,	floor_thk+entrance_height,	15,
			internalAxis-entrance_width/2,	floor_thk,					15,
			ws_thk,						floor_thk,					15
	gosub 2000

	del 2

	material mat_bej

	rotx 90
	add internalAxis, floor_thk, -et_melys-ws_thk/2

	addz -ws_thkin/2-0.02
	prism_ 10, 0.04,
		 entrance_width/2,		0,						15,
		 entrance_width/2,		entrance_height,		15,
		-entrance_width/2,		entrance_height,		15,
		-entrance_width/2,		0,						15,
		 entrance_width/2,		0,						-1,

		 entrance_width/2-0.2,	1.4,					15,
		 entrance_width/2-0.2,	entrance_height-0.2,	15,
		-entrance_width/2+0.2,	entrance_height-0.2,	15,
		-entrance_width/2+0.2,	1.4,					15,
		 entrance_width/2-0.2,	1.4,					-1

	gosub 1000

	material mat_bejg

	addz 0.015
	prism_ 5, 0.005,
		 entrance_width/2-0.2,	1.4,					15,
		 entrance_width/2-0.2,	entrance_height-0.2,	15,
		-entrance_width/2+0.2,	entrance_height-0.2,	15,
		-entrance_width/2+0.2,	1.4,					15,
		 entrance_width/2-0.2,	1.4,					-1
	del 2

	del 2

endif


! ----------- Oven ------------------------------------------------------------------------------------------------------------

material mat_pad

dk=(k_mag-4*rsz)/3

add a-ws_thk-k_melys,	ws_thk+et_melys*et+k_szel+ws_thkin+0.05,	floor_thk
rotx 90

prism_ 20, padthk/2,
	0,				0,		15,
	0,				k_mag,	15,
	k_melys,		k_mag,	15,
	k_melys,		0,		15,
	0,				0,		-1,

	rsz,			rsz,	15,
	rsz,			rsz+dk,	15,
	k_melys-rsz,	rsz+dk,	15,
	k_melys-rsz,	rsz,	15,
	rsz,			rsz,	-1,

	rsz,			2*rsz+dk,	15,
	rsz,			2*rsz+2*dk,	15,
	k_melys-rsz,	2*rsz+2*dk,	15,
	k_melys-rsz,	2*rsz+dk,	15,
	rsz,			2*rsz+dk,	-1,

	rsz,			3*rsz+2*dk,	15,
	rsz,			3*rsz+3*dk,	15,
	k_melys-rsz,	3*rsz+3*dk,	15,
	k_melys-rsz,	3*rsz+2*dk,	15,
	rsz,			3*rsz+2*dk,	-1

addz k_szel-padthk/2

prism_ 20, padthk/2,
	0,				0,			15,
	0,				k_mag,		15,
	k_melys,		k_mag,		15,
	k_melys,		0,			15,
	0,				0,			-1,

	rsz,			rsz,		15,
	rsz,			rsz+dk,		15,
	k_melys-rsz,	rsz+dk,		15,
	k_melys-rsz,	rsz,		15,
	rsz,			rsz,		-1,

	rsz,			2*rsz+dk,	15,
	rsz,			2*rsz+2*dk,	15,
	k_melys-rsz,	2*rsz+2*dk,	15,
	k_melys-rsz,	2*rsz+dk,	15,
	rsz,			2*rsz+dk,	-1,

	rsz,			3*rsz+2*dk,	15,
	rsz,			3*rsz+3*dk,	15,
	k_melys-rsz,	3*rsz+3*dk,	15,
	k_melys-rsz,	3*rsz+2*dk,	15,
	rsz,			3*rsz+2*dk,	-1

del 1

roty 90
add -k_szel, 0, -padthk/2
prism_ 20, padthk/2,
	0,			0,			15,
	0,			k_mag,		15,
	k_szel,		k_mag,		15,
	k_szel,		0,			15,
	0,			0,			-1,

	rsz,		rsz,		15,
	rsz,		rsz+dk,		15,
	k_szel-rsz,	rsz+dk,		15,
	k_szel-rsz,	rsz,		15,
	rsz,		rsz,		-1,

	rsz,		2*rsz+dk,	15,
	rsz,		2*rsz+2*dk,	15,
	k_szel-rsz,	2*rsz+2*dk,	15,
	k_szel-rsz,	2*rsz+dk,	15,
	rsz,		2*rsz+dk,	-1,

	rsz,		3*rsz+2*dk,	15,
	rsz,		3*rsz+3*dk,	15,
	k_szel-rsz,	3*rsz+3*dk,	15,
	k_szel-rsz,	3*rsz+2*dk,	15,
	rsz,		3*rsz+2*dk,	-1
del 2

del 2

add a-ws_thk-0.02, ws_thk+et_melys*et+ws_thkin+0.125, floor_thk
rotz 90
sprism_ mat1,mat2, mat3,
		5,	0, 0, 1, 0, 0.6, 10,
		0, 		0,		15,
		0.45,	0,		15,
		0.45,	0.3,	15,
		0,		0.3,	15,
		0,		0,		-1

del 2

! ----------- Bench -----------------------------------------------------------------------------------------------------------

addz floor_thk

material mat_pad

if pad_typ_int = PAD_TYPE_U_SHAPE then

	if not(et) then
		pdmod=ws_thk
	else
		pdmod=0
	endif

	add ws_thk, et_melys*et+ws_thkin, pad_num*padh-padthk

	for i=1 to pad_num

		for j=0 to rnum-1
			if iEntrance = ENTRANCE_SIDE and et = 0 then
					if entranceAxis > 1.5*entrance_width then
						cutpoly 4,
							0,						entranceAxis-entrance_width/2-ws_thk,
							0,						entranceAxis+entrance_width/2-ws_thk,
							pad_num*padh-padthk,	entranceAxis+entrance_width/2-ws_thk,
							pad_num*padh-padthk,	entranceAxis-entrance_width/2-ws_thk
					else
						cutpoly 4,
							0,						0,
							0,						entranceAxis+entrance_width/2-ws_thk,
							pad_num*padh-padthk,	entranceAxis+entrance_width/2-ws_thk,
							pad_num*padh-padthk,	0
					endif
				prism_  5,	padthk,
						j*dr,		0,							15,
						j*dr,		b-ws_thk-ws_thkin-j*dr,		15,
						j*dr+rsz,	b-ws_thk-ws_thkin-j*dr-rsz,	15,
						j*dr+rsz,	0,							15,
						j*dr,		0,							-1
				cutend
			else
			prism_  5,	padthk,
						j*dr,		et*ws_thk,									15,
						j*dr,		b-ws_thk-ws_thkin-j*dr-et*(et_melys),		15,
						j*dr+rsz,	b-ws_thk-ws_thkin-j*dr-et*(et_melys)-rsz,	15,
						j*dr+rsz,	et*ws_thk,									15,
						j*dr,		et*ws_thk,									-1
			endif

			gosub 2000

			prism_  5,	padthk,
					j*dr,					b-ws_thk-ws_thkin-et*(et_melys)-j*dr,		15,
					a-2*ws_thk-j*dr,		b-ws_thk-ws_thkin-et*(et_melys)-j*dr,		15,
					a-2*ws_thk-j*dr-rsz, 	b-ws_thk-ws_thkin-et*(et_melys)-j*dr-rsz,	15,
					j*dr+rsz, 				b-ws_thk-ws_thkin-et*(et_melys)-j*dr-rsz, 	15,
					j*dr,					b-ws_thk-ws_thkin-et*(et_melys)-j*dr,		-1

			gosub 1000

			prism_  5,	padthk,
					a-2*ws_thk-j*dr,		b-ws_thk-ws_thkin-et*(et_melys)-j*dr,			15,
					a-2*ws_thk-j*dr,		kh-(et_melys+ws_thk)*et,						15,
					a-2*ws_thk-j*dr-rsz, 	kh-(et_melys+ws_thk)*et, 						15,
					a-2*ws_thk-j*dr-rsz, 	b-ws_thk-ws_thkin-et*(et_melys)-j*dr-rsz, 		15,
					a-2*ws_thk-j*dr,		b-ws_thk-ws_thkin-et*(et_melys)-j*dr,			-1

			gosub 2000

		next j

		if not(pad_base) then
			addz -padh*(pad_num-i+1)+padthk

			if iEntrance =  ENTRANCE_SIDE and not(et) then
					if entranceAxis > 1.5*entrance_width then
						cutpoly 4,
							0,						entranceAxis-entrance_width/2-ws_thk-0.03,
							0,						entranceAxis+entrance_width/2-ws_thk+0.03,
							pad_num*padh-padthk,	entranceAxis+entrance_width/2-ws_thk+0.03,
							pad_num*padh-padthk,	entranceAxis-entrance_width/2-ws_thk-0.03
					else
						cutpoly 4,
							0,						0,
							0,						entranceAxis+entrance_width/2-ws_thk+0.03,
							pad_num*padh-padthk,	entranceAxis+entrance_width/2-ws_thk+0.03,
							pad_num*padh-padthk,	0
					endif

			prism_  5,	padh*pad_num-padthk-(i-1)*padh,
						0,					0-pdmod+ws_thk,					15,
						0,					b-ws_thk-ws_thkin,				15,
						padwdt-0.03,		b-ws_thk-ws_thkin-padwdt+0.03, 	15,
						padwdt-0.03,		0-pdmod+ws_thk, 				15,
						0,					0-pdmod+ws_thk,					-1
				cutend
			else
				prism_  5,	padh*pad_num-padthk-(i-1)*padh,
						0,					0-pdmod+ws_thk,									15,
						0,					b-et*(et_melys)-ws_thk-ws_thkin,				15,
						padwdt-0.03,		b-padwdt-et*(et_melys)-ws_thk-ws_thkin+0.03, 	15,
						padwdt-0.03,		0-pdmod+ws_thk,									15,
						0,					0-pdmod+ws_thk,									-1
			endif

			gosub 1000

			prism_  5,	padh*pad_num-padthk-(i-1)*padh,
					0,						b-ws_thk-ws_thkin-et*(et_melys),				15,
					a-2*ws_thk,				b-ws_thk-ws_thkin-et*(et_melys),				15,
					a-2*ws_thk-padwdt+0.03,	b-padwdt+0.03-ws_thk-ws_thkin-et*(et_melys),	15,
					padwdt-0.03,			b-padwdt+0.03-ws_thk-ws_thkin-et*(et_melys),	15,
					0,						b-ws_thk-ws_thkin-et*(et_melys),				-1

			gosub 1000

			prism_  5,	padh*pad_num-padthk-(i-1)*padh,
					a-2*ws_thk,				b-ws_thk-ws_thkin-et*(et_melys),				15,
					a-2*ws_thk,				kh-(et_melys+ws_thk)*et+0.03,					15,
					a-2*ws_thk-padwdt+0.03,	kh-(et_melys+ws_thk)*et+0.03,					15,
					a-2*ws_thk-padwdt+0.03,	b-ws_thk-ws_thkin-padwdt-et*(et_melys)+0.03,	15,
					a-2*ws_thk,				b-ws_thk-ws_thkin-et*(et_melys),				-1

			gosub 1000

			del 1
		endif

		add padwdt-0.03, 0, -padh
		a=a-2*padwdt+0.06
		b=b-padwdt+0.03

	next i

	del pad_num

else

	if pad_typ_int = PAD_TYPE_L_SHAPE then

		if not(et) then
			pdmod=ws_thk
		else
			pdmod=0
		endif

		add ws_thk, ws_thkin, pad_num*padh-padthk

		for i=1 to pad_num

			for j=0 to rnum-1
				if iEntrance =  ENTRANCE_SIDE and et = 0 then
					if entranceAxis > 1.5*entrance_width then
						cutpoly 4,
							0,						entranceAxis-entrance_width/2-ws_thk,
							0,						entranceAxis+entrance_width/2-ws_thk,
							pad_num*padh-padthk,	entranceAxis+entrance_width/2-ws_thk,
							pad_num*padh-padthk,	entranceAxis-entrance_width/2-ws_thk
					else
						cutpoly 4,
							0,						0,
							0,						entranceAxis+entrance_width/2-ws_thk,
							pad_num*padh-padthk,	entranceAxis+entrance_width/2-ws_thk,
							pad_num*padh-padthk,	0
					endif
					prism_  5,	padthk,
							j*dr,			0,							15,
							j*dr,			b-ws_thk-ws_thkin-j*dr,		15,
							j*dr+rsz,		b-ws_thk-ws_thkin-j*dr-rsz,	15,
							j*dr+rsz,		0,							15,
							j*dr,			0,							-1
					cutend
				else
				prism_  5,	padthk,
							j*dr,		et_melys*et+ws_thk,				15,
							j*dr,		b-ws_thkin-ws_thk-j*dr,			15,
							j*dr+rsz,	b-ws_thkin-ws_thk-j*dr-rsz,		15,
							j*dr+rsz,	et_melys*et+ws_thk,				15,
							j*dr,		et_melys*et+ws_thk,				-1
				endif

				gosub 2000

				prism_  5,	padthk,
						j*dr,			b-ws_thk-ws_thkin-j*dr,			15,
						a-2*ws_thk,		b-ws_thk-ws_thkin-j*dr,			15,
						a-2*ws_thk,		b-ws_thk-ws_thkin-j*dr-rsz,		15,
						j*dr+rsz,		b-ws_thk-ws_thkin-j*dr-rsz,		15,
						j*dr,			b-ws_thk-ws_thkin-j*dr,			-1

				gosub 1000

			next j

			if not(pad_base) then
				addz -padh*(pad_num-i+1)+padthk
				if iEntrance =  ENTRANCE_SIDE and et = 0 then
					if entranceAxis > 1.5*entrance_width then
						cutpoly 4,
							0,						entranceAxis-entrance_width/2-ws_thk-0.03,
							0,						entranceAxis+entrance_width/2-ws_thk+0.03,
							pad_num*padh-padthk,	entranceAxis+entrance_width/2-ws_thk+0.03,
							pad_num*padh-padthk,	entranceAxis-entrance_width/2-ws_thk-0.03
					else
						cutpoly 4,
							0,						0,
							0,						entranceAxis+entrance_width/2-ws_thk+0.03,
							pad_num*padh-padthk,	entranceAxis+entrance_width/2-ws_thk+0.03,
							pad_num*padh-padthk,	0
					endif

				prism_  7,	padh*pad_num-padthk-(i-1)*padh,
							0,				-pdmod+ws_thk,					15,
							0,				b-ws_thk-ws_thkin,				15,
							a-2*ws_thk,		b-ws_thk-ws_thkin,				15,
							a-2*ws_thk,		b-ws_thk-ws_thkin-padwdt+0.03,	15,
							padwdt-0.03,	b-ws_thk-ws_thkin-padwdt+0.03,	15,
							padwdt-0.03,	-pdmod+ws_thk,					15,
							0,				-pdmod+ws_thk,					-1
					cutend
				else
					prism_  7,	padh*pad_num-padthk-(i-1)*padh,
							0,				et_melys*et-pdmod+ws_thk,		15,
							0,				b-ws_thk-ws_thkin,				15,
							a-2*ws_thk,		b-ws_thk-ws_thkin,				15,
							a-2*ws_thk,		b-ws_thk-ws_thkin-padwdt+0.03,	15,
							padwdt-0.03,	b-ws_thk-ws_thkin-padwdt+0.03,	15,
							padwdt-0.03,	et_melys*et-pdmod+ws_thk,		15,
							0,				et_melys*et-pdmod+ws_thk,		-1
				endif

				del 1

				gosub 1000

			endif


			add padwdt-0.03, 0, -padh
			a=a-padwdt+0.03
			b=b-padwdt+0.03

		next i

		del pad_num

	else

		! if pad_typ_int = PAD_TYPE_STRAIGHT then

		add ws_thk, -ws_thk, pad_num*padh-padthk

		for i=1 to pad_num

			for j=0 to rnum-1

				prism_  5,	padthk,
						0,			b-j*dr,		15,
						a-2*ws_thk,	b-j*dr,		15,
						a-2*ws_thk,	b-j*dr-rsz,	15,
						0,			b-j*dr-rsz, 15,
						0,			b-j*dr,		-1

				gosub 1000

			next j

			if not(pad_base) then
				addz -padh*(pad_num-i+1)+padthk
				prism_  5,	padh*pad_num-padthk-(i-1)*padh,
						0,			b-padwdt+0.03,	15,
						0,			b,				15,
						a-2*ws_thk,	b,				15,
						a-2*ws_thk,	b-padwdt+0.03,	15,
						0,			b-padwdt+0.03,	-1

				gosub 1000

				del 1
			endif


			add 0, 0, -padh
			b = b - padwdt + 0.03

		next i

		del pad_num

	endif
endif

del 2

end
! -----------------------------------------------------------------------------------------------------------------------------
! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end
! -----------------------------------------------------------------------------------------------------------------------------


1000:
roty 90
gosub 5000
del 1
return

2000:
gosub 5000
return


5000:
base

vert 0, 0, 0
vert 1, 0, 0
vert 0, 1, 0
vert 0, 0, 1

coor 2, -1, -2, -3, -4

body -1

return
