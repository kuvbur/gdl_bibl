
call "FM_types" parameters all


values{2} "gs_detlevel_3D_m" 	DLEV3D_DETAILED, `Детальный`,
								DLEV3D_OFF, `Откл.`


values "pad_typ" stPadType
values "pad_typ_int"	PAD_TYPE_L_SHAPE,
						PAD_TYPE_U_SHAPE,
						PAD_TYPE_STRAIGHT

if GLOB_MODPAR_NAME = "pad_typ" then
	pad_typ_int = PAD_TYPE_L_SHAPE
	if pad_typ = stPadType[2] then pad_typ_int = PAD_TYPE_U_SHAPE
	if pad_typ = stPadType[3] then pad_typ_int = PAD_TYPE_STRAIGHT
	parameters pad_typ_int = pad_typ_int
else
	pad_typ = stPadType[pad_typ_int]
	parameters pad_typ = pad_typ
endif


values "entrance" st_entrance
values "iEntrance"  ENTRANCE_FRONT,  ENTRANCE_SIDE

if GLOB_MODPAR_NAME = "entrance" then
	iEntrance = ENTRANCE_FRONT
	if entrance = st_entrance[2] then iEntrance =  ENTRANCE_SIDE
	parameters iEntrance = iEntrance
else
	entrance = st_entrance[1]
	if iEntrance = ENTRANCE_SIDE then entrance = st_entrance[2]
	parameters entrance = entrance
endif


values "et_melys" range [entrance_width, )

if iEntrance = ENTRANCE_SIDE and not(et) then
	values "B" range [pad_num*padwdt+2*ws_thk+(et_melys+ws_thkin)*et+entrance_width, )
else
	values "B" range [pad_num*padwdt+2*ws_thk+(et_melys+ws_thkin)*et+k_szel+0.1, )
endif


if pad_typ_int = PAD_TYPE_STRAIGHT then
		values "A" range [2*ws_thk+entrance_width+k_melys, )
else
	if  pad_typ_int = PAD_TYPE_U_SHAPE then
		values "A" range [(2*pad_num+1)*padwdt+ws_thk, )
	else
		values "A" range [2*ws_thk+pad_num*padwdt+k_melys+entrance_width, )
	endif
endif


if et then
	if pad_typ_int = PAD_TYPE_STRAIGHT then
		if iEntrance =  ENTRANCE_SIDE then
			values "entranceAxis" range [entrance_width/2+ws_thk, et_melys-entrance_width/2+ws_thk]
			values "internalAxis" range [entrance_width/2+ws_thk, a-entrance_width/2-k_melys-ws_thk]
		else
			values "internalAxis" range [entrance_width/2+ws_thk, a-entrance_width/2-k_melys-ws_thk]
			values "entranceAxis" range [entrance_width/2+ws_thk, a-entrance_width/2-ws_thk]
		endif
	else
		if iEntrance =  ENTRANCE_SIDE then
			values "entranceAxis" range [entrance_width/2+ws_thk, et_melys-entrance_width/2+ws_thk]
			values "internalAxis" range [entrance_width/2+ws_thk+pad_num*padwdt, a-entrance_width/2-k_melys-ws_thk]
		else
			values "internalAxis" range [entrance_width/2+ws_thk+pad_num*padwdt, a-entrance_width/2-k_melys-ws_thk]
			values "entranceAxis" range [entrance_width/2+ws_thk, a-entrance_width/2-ws_thk]
		endif
	endif
else
	if pad_typ_int = PAD_TYPE_STRAIGHT then
		if iEntrance =  ENTRANCE_SIDE then
			values "entranceAxis" range [entrance_width/2+ws_thk, b-pad_num*padwdt-entrance_width/2-ws_thk]
		else
			values "entranceAxis" range [entrance_width/2+ws_thk, a-entrance_width/2-k_melys-ws_thk]
		endif
	else
		if iEntrance =  ENTRANCE_SIDE then
			values "entranceAxis" range [entrance_width/2+ws_thk, b-ws_thk-pad_num*padwdt-entrance_width/2]
		else
			values "entranceAxis" range [pad_num*padwdt+entrance_width/2+ws_thk+bx, a-entrance_width/2-k_melys-ws_thk]
		endif
	endif
endif

values "pad_num" range [1, 3]


values "entranceDoorDirection" stDoorDirection
values "iEntranceDoorDirection" LEFT, RIGHT

if GLOB_MODPAR_NAME = "entranceDoorDirection" then
	iEntranceDoorDirection = LEFT
	if entranceDoorDirection = stDoorDirection[2] then iEntranceDoorDirection = RIGHT
	parameters iEntranceDoorDirection = iEntranceDoorDirection
else
	entranceDoorDirection = stDoorDirection[1]
	if iEntranceDoorDirection = RIGHT then entranceDoorDirection = stDoorDirection[2]
	parameters entranceDoorDirection = entranceDoorDirection
endif


values "internalDoorDirection" stDoorDirection
values "iInternalDoorDirection"  LEFT, RIGHT

if GLOB_MODPAR_NAME = "internalDoorDirection" then
	iInternalDoorDirection = LEFT
	if internalDoorDirection = stDoorDirection[2] then iInternalDoorDirection = RIGHT
	parameters iInternalDoorDirection = iInternalDoorDirection
else
	internalDoorDirection = stDoorDirection[1]
	if iInternalDoorDirection = RIGHT then internalDoorDirection = stDoorDirection[2]
	parameters internalDoorDirection = internalDoorDirection
endif


if not(ws) then lock "ws_thk"
if not(et) then lock "internalAxis","et_melys", "internalDoorDirection"
if not(ws) and not(et) then LOCK "mat_ws"

if GLOB_MODPAR_NAME = "B" then
	if et then
		parameters cabin_depth = b - et_melys/2
	else
		parameters cabin_depth = b
	endif
endif

if GLOB_MODPAR_NAME = "et" then
	if et then
		B=B+et_melys/2
		parameters B=B
	else
		B=B-et_melys/2
		parameters B = B
	endif
endif

if GLOB_MODPAR_NAME = "et_melys" then
	parameters B = B
endif


if GLOB_MODPAR_NAME="pad_typ" and pad_typ_int = PAD_TYPE_U_SHAPE then
	if A-pad_num*2*padwdt<0 then parameters A=padwdt*2*pad_num+0.3
	if B-pad_num*padwdt-1<0 then parameters B=pad_num*padwdt+1+0.3
endif
