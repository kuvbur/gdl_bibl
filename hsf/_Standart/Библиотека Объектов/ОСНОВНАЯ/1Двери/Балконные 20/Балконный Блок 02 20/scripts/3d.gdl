
! =============================================================================
! Block for operator mode
! =============================================================================

if GLOB_CONTEXT > 40 & GLOB_CONTEXT < 50 then
	prism_ 4, WIDO_FRAME_THICKNESS,
		-ac_unit_width/2, 0, 15,
		 ac_unit_width/2, 0, 15,
		 ac_unit_width/2, ac_unit_height, 15,
		-ac_unit_width/2, ac_unit_height, 15

	end
endif


! =============================================================================

lod3D = 0												! Don't draw anything
if (GLOB_VIEW_TYPE = 9 & GLOB_PREVIEW_MODE = 0) then	! in case of Surface IS Calculation
	lod3D = 2	! Detailed
else
	if iDWDet3D = DETLEVEL_DW3D_SIMPLE then lod3D = 1 			! Simple
	if iDWDet3D = DETLEVEL_DW3D_DETAILED then lod3D = 2 			! Detailed
	if GLOB_CONTEXT > 20 and GLOB_CONTEXT < 40 then lod3D	= 1	! Simple
	if iDWDet3D = DETLEVEL_DW3D_CHI_SIMPLE | iDWDet3D = DETLEVEL_DW3D_CHI_DETAILED then
		if (GLOB_CONTEXT = 4 | GLOB_CONTEXT = 24 | GLOB_CONTEXT = 6) then
			lod3D = 5								! Chinese
		else
			lod3D = 2
		endif
	endif
endif


! ==============================================================================
! Scale of Section/Elevation
! ==============================================================================

detsect = 0

if	iDWDetSE = DETLEV_SE_SCALESENSITIVE and GLOB_SCALE > 100 | \
	iDWDetSE = DETLEV_SE_SIMPLE then								! Simple or Scale Sensitive / 1:200

	detsect = 100
endif

if	iDWDetSE = DETLEV_SE_SCALESENSITIVE and GLOB_SCALE < 101 | \
	iDWDetSE = DETLEV_SE_MIDDLE then								! Middle or Scale Sensitive / 1:100

	detsect = 50
endif

if	iDWDetSE = DETLEV_SE_SCALESENSITIVE and GLOB_SCALE < 51 | \
	iDWDetSE = DETLEV_SE_DETAILED then								! Detailed or Scale Sensitive / 1:50

	detsect = 20
endif


if GLOB_CONTEXT = 4 | GLOB_CONTEXT = 24 then
	if iDWDetSE = DETLEV_SE_OFF then lod3D = 0
endif


!********* Wall filling element, Sturz / Heizkorpernische *********************
!******************************************************************************

addx (-WIDO_LEFT_JAMB*gs_lich+WIDO_RIGHT_JAMB*gs_lich) / 2

call "Filling_balcony" parameters a=a + WIDO_RIGHT_JAMB*gs_lich + WIDO_LEFT_JAMB*gs_lich,
								  b=b + WIDO_HEAD_DEPTH*gs_lich,
								  ph=parapeth-fbh*gs_feba_a*parh*(GLOB_SCALE<=50),
								  bf1=bf1+stb_m/2, stb_m=stb_m,
								  holemat=AC_HoleSideMaterial,
								  hkorp=gs_hn, thkorp=gs_thn,
								  sturz=gs_sturz, hsturz=gs_hsturz, hhs=hhs,
								  hsa=hsa, dsturz=dsturz, matsturz=gs_matsturz,
								  pensturz=gs_pensturz, fillsturz=gs_fillsturz,
								  penfillsturz=gs_penfillsturz,
								  hgpenfillsturz=gs_hgpenfillsturz,
								  gs_frame_thk = gs_frame_thk

del 1


! =============================================================================
! GS Window Opening Functions
! =============================================================================

call "GS Terrace Door Functions",
	parameters all	lod3D						= lod3D,
				returned_parameters bShowAddHotspotsForIS


! =============================================================================
! Request globals for Opening Lines and Hotspots
! =============================================================================

bOplines3d				= 0
opLineType3dIn			= 1
opLineType3dOut			= 1
gs_opline_style_m		= 1
gs_opLinePen			= 1

call "OpeningOptions" parameters	gs_opening_dir_m	= 1,
									bWindow				= 1,
									bOverride_MVO_3D	= bOverride_MVO_3D,
									or_bOplines3d		= or_bOplines3d,
									or_iOpLineType3dIn	= or_iOpLineType3dIn,
									or_iOpLineType3dOut	= or_iOpLineType3dOut,
									or_iOplineStyle		= or_iOplineStyle,
									or_opLinePen		= or_opLinePen,
									bEnableSecondaryOpLineTypes = 0,
						returned_parameters bOplines3d,
											opLineType3dIn,
											opLineType3dOut,
											dummy,
											gs_opline_style_m,
											gs_opLinePen


mulz -1
add 0,0,-WIDO_FRAME_THICKNESS

! -----------------------------------------------------------------------------
! Hotspot Display Control
! -----------------------------------------------------------------------------

if GLOB_CONTEXT = 4 | GLOB_CONTEXT = 24 then
	if detsect > 100 then
		bShowUnitHotspots	= 0
		bShowAddHotspots	= 0
	else
		bShowUnitHotspots	= (detsect < 100 | gs_unit_nominal)
	endif
else
	bShowUnitHotspots	= 0
	bShowAddHotspots	= 0
endif

if bShowAddHotspotsForIS then
	bShowUnitHotspots	= 1
	bShowAddHotspots	= 1
endif

!************ Hotspots on Unit Size

if bShowUnitHotspots then
!	hotspot -A/2 + gs_tolerance, 0, 0, 100
	hotspot  A/2 - gs_tolerance, 0, 0, 101
!	hotspot -A/2 + gs_tolerance, 0, gs_frame_thk, 102
	hotspot  A/2 - gs_tolerance, 0, gs_frame_thk, 103

	hotspot -A/2 + gs_tolerance, b - gs_tolerance, 0, 104
	hotspot  A/2 - gs_tolerance, b - gs_tolerance, 0, 105
	hotspot -A/2 + gs_tolerance, b - gs_tolerance, gs_frame_thk, 106
	hotspot  A/2 - gs_tolerance, b - gs_tolerance, gs_frame_thk, 107
endif

!************ End of Hotspots on Unit Size


!************ Hotspots on Transom and Sidelight

if gs_kamp = 0 then
	hotspot -a/2, b/2, 0, 1320, bf1, 1+128
	hotspot -a, b/2, 0, 1321, bf1, 3
	hotspot -a/2+bf1, b/2, 0, 1322, bf1, 2
else
	hotspot -a/2, gs_k, 0, 1320, bf1, 1+128
	hotspot -a, gs_k, 0, 1321, bf1, 3
	hotspot -a/2+bf1, gs_k, 0, 1322, bf1,2

	hotspot -a/2+bf1, 0, 0, 1300, gs_k, 1+128
	hotspot -a/2+bf1, -1, 0, 1301, gs_k, 3
	hotspot -a/2+bf1, gs_k, 0, 1302, gs_k, 2
endif

!************ End of Hotspots on Transom and Sidelight


! --- Chinese Specific ---

gs_glass_thk = 0.01

if lod3D = 5 then
	if not(WIDO_REVEAL_SIDE) then
		addz (WIDO_SILL-WALL_THICKNESS/2+gs_frame_thk/2)			!!!move the whole window to middle of wall
	else
		addz -(WIDO_SILL-WALL_THICKNESS/2+gs_frame_thk/2)			!!!move the whole window to middle of wall
	endif

	sonn = 0
	sonn2 = 0
	gs_glass_thk = gs_frame_thk
	sh = 0
	sv = 0
	sho = 0
	svo = 0

	vb = 0
	vt = 0

	gs_fillFr		= gs_fillShCover
	gs_penFr_fg		= gs_penShCov_fg
	gs_penFr_bg		= gs_penShCov_bg

	gs_fillSash		= gs_fillShCover
	gs_penSash_fg	= gs_penShCov_fg
	gs_penSash_bg	= gs_penShCov_bg
	gs_sash_pen		= gs_frame_pen_cont
endif


parapeth=parapeth-fbh*gs_feba_a*parh*(GLOB_SCALE<=50)

a0=a
a=a + WIDO_RIGHT_JAMB*gs_lich + WIDO_LEFT_JAMB*gs_lich
b=b + WIDO_HEAD_DEPTH*gs_lich


addx (-WIDO_LEFT_JAMB*gs_lich+WIDO_RIGHT_JAMB*gs_lich) / 2
addy 0


!********** horizontal sizes 1 **********
!****************************************

!** modified vb values

vbl=stb_l-vb
vbr=stb_r-vb
vbm=(stb_m-vb*2)/2


!****************** field width values when symmetric

if symm then bf1=a-(a+vbm-vbr+vb+2*vbl)/3

!********** main fields

aleft=bf1-vbl-vbm
aright=a-bf1-vbr-vbm





!*******  Hotspots for "Associative" dimensioning

if GLOB_CONTEXT = 4 | GLOB_CONTEXT = 6 then
	unID=350
	hotspot a/2, b, 0, unID		:unID=unID+1
	hotspot -a/2, b, 0, unID	:unID=unID+1

	hotspot a/2, 0, 0, unID		:unID=unID+1
	hotspot -a/2, 0, 0, unID	:unID=unID+1

	hotspot -a/2, parapeth, 0, unID		:unID=unID+1
	hotspot  a/2, parapeth, 0, unID		:unID=unID+1

	hotspot -a/2+bf1-stb_m/2, parapeth, 0, unID		:unID=unID+1
	hotspot -a/2+bf1-stb_m/2, 0, 0, unID		:unID=unID+1

endif


if lod3D = 0 then end

!************************** Sonnenschutz **************************
!******************************************************************

pen penlam

if (abs(SYMB_ROTANGLE)<EPS) = SYMB_MIRRORED then
	jamb1=WIDO_RIGHT_JAMB
	jamb2=WIDO_LEFT_JAMB
else
	jamb2=WIDO_RIGHT_JAMB
	jamb1=WIDO_LEFT_JAMB
endif

if sonn+sonn2>0 then

	b=b-fbh*gs_feba_a-WIDO_THRES_DEPTH

	addy fbh*gs_feba_a+WIDO_THRES_DEPTH
	addz -WIDO_SILL

	if ts>WIDO_SILL-bd/2-0.025/2-0.002 then ts=WIDO_SILL-bd/2-0.025/2-0.002

	if not(WIDO_REVEAL_SIDE) then
		addz WIDO_SILL
		mulz -1
		addz -WIDO_SILL-WIDO_FRAME_THICKNESS
	endif

	if sonn=1 then

		alam=bf1-bsetz/2-0.01+jamb2

		addx -a/2+alam/2+0.005
		addy parapeth

		call "Lamellen" parameters a=alam, b=b-parapeth, vst=dsturz+(WIDO_SILL-dsturz)/2,
							   ws=ws, offlam=(b-parapeth)*offlam/100, mat2=matlam, feba=gs_feba_a,
							   rotation=rotation, shadcast=shadcast

		del 2

	endif

	if sonn2=1 then

		alam=a-bf1-bsetz/2-0.01+jamb1

		addx a/2-alam/2-0.005

		call "Lamellen" parameters a=alam, b=b, vst=dsturz+(WIDO_SILL-dsturz)/2,
							   ws=ws, offlam=b*offlam/100, mat2=matlam, feba=gs_feba_a,
							   rotation=rotation, shadcast=shadcast

		del 1

	endif

	if not(WIDO_REVEAL_SIDE) then
		del 3
	endif

	del 2

	b=b+fbh*gs_feba_a+WIDO_THRES_DEPTH

endif

if t_sonn=1 then

	if not(WIDO_REVEAL_SIDE) then
		addz WIDO_SILL
		mulz -1
		addz -WIDO_FRAME_THICKNESS-WIDO_SILL
	endif

	a_sc=a - WIDO_RIGHT_JAMB - WIDO_LEFT_JAMB
	if gs_lich=1 then
		b_sc=b - WIDO_HEAD_DEPTH*gs_lich
	else
		b_sc=b - WIDO_THRES_DEPTH*gs_lich - WIDO_HEAD_DEPTH*gs_lich - WIDO_HEAD_DEPTH
	endif

	lb=(a_sc+0.08)/3

	addx a_sc/2+lb/2-0.02
	addx -(WIDO_RIGHT_JAMB-WIDO_LEFT_JAMB)/2

	addz -WIDO_SILL-0.02
	mulz -1

	if lod3D <> 5 then
	call "schiebejalousie_3fl_m" parameters a=a_sc, b=b_sc, det_sa=detsect,
								 loc_type=loc_type, rab_s=rab_s, rabu_s=rabu_s, ras_s=ras_s,
								 gs_sc_pen=gs_sash_pen, hlb=hlbsc, alpha=alpha, mats=mats,
								 matl = matls, matsc = matsc, iLayoutType = 1, offladen = offladen,
								 bedec=bedec, sc=sck, vsc=vsc, vsh=vsh, res=res, nnsc=nnsc,
								 mmsc=mmsc, rsc=rsc
	endif

	del 4

	if not(WIDO_REVEAL_SIDE) then del 3

endif

!********* abstract 3D **********
!********************************

if GLOB_CONTEXT <> 4 & GLOB_CONTEXT <> 6 then
	if iDWDet3D = DETLEVEL_DW3D_SIMPLE then
		detsect=100
		goto 1000
	endif
endif



!************* section, elevation
!********************************

if GLOB_CONTEXT = 4 | (GLOB_PREVIEW_MODE = 2) then
	if detsect>20 then goto 1000
endif




1:


!************************ Fensterbank
!************************************

if lod3D <>5 then gosub 4000



sect_fill SYMB_FILL, SYMB_FBGD_PEN, SYMB_FILL_PEN, gs_pen_schnitt


!******* Sash beneath the frame

if vt+ras<=gs_frame_thk then vb=0

if gs_kamp=0 then gs_k=0



!********** vertical sizes ************
!**************************************

!**** transom sash vertical sizes

if not(bTop1FieldFix) then
	b021=b-gs_k-gs_frame_width-stb_ob+vb*2
	h021=gs_k+gs_frame_width-vb
else
	b021=b-gs_k-gs_frame_width-stb_ob
	h021=gs_k+gs_frame_width
endif

if not(bTop2FieldFix) then
	b022=b-gs_k-gs_frame_width-stb_ob+vb*2
	h022=gs_k+gs_frame_width-vb
else
	b022=b-gs_k-gs_frame_width-stb_ob
	h022=gs_k+gs_frame_width
endif



!**** main window sash vertical sizes

if gs_kamp then
	if bMainFieldFix then
		bmain=gs_k-parapeth-stb_w
		hmain=parapeth+stb_w
	else
		bmain=gs_k-parapeth-stb_w+2*vb
		hmain=parapeth+stb_w-vb
	endif
	bmain2=gs_k-stb_u+2*vb
	hmain2=stb_u-vb
else
	if bMainFieldFix then
		bmain=b-parapeth-stb_w-stb_ob
		hmain=parapeth+stb_w
	else
		bmain=b-parapeth-stb_ob-stb_w+2*vb
		hmain=parapeth+stb_w-vb
	endif
	bmain2=b-stb_u-stb_ob+2*vb
	hmain2=stb_u-vb
endif





!********** horizontal sizes 2 **********
!****************************************


!****************** transom

if not(bTop1FieldFix) and not(bTop2FieldFix) then

	alefto=bf1-vbl-vbm
	arighto=a-bf1-vbr-vbm

else

	if bTop1FieldFix and bTop2FieldFix then

		alefto=bf1-stb_l-stb_m/2
		arighto=a-bf1-stb_r-stb_m/2

	else

		if bTop1FieldFix then

			alefto=bf1-stb_l-stb_m/2
			arighto=a-bf1-vbr-vbm

		else	! field 2 is fix

			alefto=bf1-vbm-vbl
			arighto=a-bf1-stb_r-stb_m/2

		endif

	endif

endif

aleftfix2=(bf1-stb_l-stb_m/2-gs_frame_width)/2





!********************* window frame ***************
!**************************************************

pen gs_frame_pen

material matframe

if gs_kamp=0 then
	frametype=1
else
	if gs_og+bTop1FieldFix<2 then
		frametype=2
	else
		frametype=3
	endif
endif

y_sturz=hhs*gs_sturz*not(gs_hsturz=1)

call "W_Frame_bal" parameters all a=a, b=b+y_sturz, type=frametype,
						sts=gs_frame_thk, stb=gs_frame_width,
						stb1=stb_ob+y_sturz, stb2=stb_u,
						stb_l=stb_l, stbr=stb_r, stb3=0,
						gs_k=gs_k, vb=vb, stbm=stb_m,
						bf1=bf1, stbw=stb_w, ph=parapeth,
						bf2=stb_l+aleftfix2+gs_frame_width/2,
						mainfix=mainfix, top1fix=top1fix, top2fix=top2fix,
						gs_opening_dir_m=1


!********************************************* sashes
!****************************************************

pen gs_sash_pen

!** z dist. added at opening

if vb=0 then
	z1=ras
else
	z1=gs_frame_thk-vt
endif


!************ main sashes ************

!******* field 1

aleft2=aleft+vb

addz vt
addy hmain

addx -a/2+vbl+aleft2/4

!*** left sash

call "W_Sash_bal_2" parameters all a=aleft2/2, b=bmain, rab=rab, rab1=rab_ob,
						rab2=rab_u, ras=ras, vb=vb, sts=gs_frame_thk, vt=vt,
						matsash=matsash, matglas=gs_glass_mat, matpanes=gs_matpanes,
						main=1, loc_op=2,
						spb=spb, sps=sps, sh=sh, sv=sv, pg=gs_glass_pen, rightsash=0,
						gs_op=gs_op, sash_type="mainsash",
						gs_sash_pen=gs_sash_pen, gs_opening_dir_m=1,
						gs_glass_thk=gs_glass_thk,
						lod3D						= lod3D,
						bOplines3d					= bOplines3d,
						opLineType3dIn				= opLineType3dIn,
						opLineType3dOut				= opLineType3dOut,
						gs_opline_style_m			= gs_opline_style_m,
						gs_opLinePen				= gs_opLinePen,
						sh_unID						= 1010
del 1


!*** right sash

addx -a/2+bf1-vbm-aleft2/4

call "W_Sash_bal_2" parameters all a=aleft2/2, b=bmain, rab=rab, rab1=rab_ob,
						rab2=rab_u, ras=ras, vb=vb, sts=gs_frame_thk, vt=vt,
						matsash=matsash, matglas=gs_glass_mat, matpanes=gs_matpanes,
						main=1, loc_op=loc_op,
						spb=spb, sps=sps, sh=sh, sv=sv, pg=gs_glass_pen, rightsash=1,
						gs_op=gs_op, sash_type="mainsash",
						gs_sash_pen=gs_sash_pen, gs_opening_dir_m=1,
						gs_glass_thk=gs_glass_thk,
						lod3D						= lod3D,
						bOplines3d					= bOplines3d,
						opLineType3dIn				= opLineType3dIn,
						opLineType3dOut				= opLineType3dOut,
						gs_opline_style_m			= gs_opline_style_m,
						gs_opLinePen				= gs_opLinePen,
						sh_unID						= 1020
del 1


del 2


!******* field 2 (Door)

addz vt
addy hmain2
addx a/2-vbr-aright/2

call "W_Sash_bal" parameters all a=aright, b=bmain2, rab=rab, rab1=rab_ob, rab2=rab_u2,
							ras=ras, vb=vb, sts=gs_frame_thk,
							matsash=matsash, matglas=gs_glass_mat,
							matpanes=gs_matpanes, vt=vt, main=1, loc_op=loc_op2,
							spb=spb, sps=sps, sh=sh2, sv=sv2,
							pg=gs_glass_pen, op2=op2, sash_type="mainsash",
							sashnumber=2, gs_sash_pen=gs_sash_pen,
							gs_opening_dir_m=1,
							gs_glass_thk=gs_glass_thk,
							lod3D						= lod3D,
							bOplines3d					= bOplines3d,
							opLineType3dIn				= opLineType3dIn,
							opLineType3dOut				= opLineType3dOut,
							gs_opline_style_m			= gs_opline_style_m,
							gs_opLinePen				= gs_opLinePen,
							sh_unID						= 1000

del 3



20:

if gs_kamp=0 then
	end
endif


!************************** transom sash
!***************************************

!**** field 1

if not(gs_og) then

	if not(bTop1FieldFix) then

		!********** opening sash

		addz vt
		addy h021
		addx -a/2+vbl+alefto/2

		call "W_Sash_bal" parameters all a=alefto, b=b021, rab=rab, rab1=rab_ob, rab2=rab,
									ras=ras, vb=vb, sts=gs_frame_thk, vt=vt,
									matsash=matsash, matglas=gs_glass_mat, matpanes=gs_matpanes,
									main=1, loc_op=loc_op_o1,
									spb=spb, sps=sps, sh=sho, sv=svo,
									pg=gs_glass_pen, gs_opt=gs_opt, sash_type="transom",
									gs_sash_pen=gs_sash_pen,
									gs_opening_dir_m=1,
									gs_glass_thk=gs_glass_thk,
									lod3D						= lod3D,
									bOplines3d					= bOplines3d,
									opLineType3dIn				= opLineType3dIn,
									opLineType3dOut				= opLineType3dOut,
									gs_opline_style_m			= gs_opline_style_m,
									gs_opLinePen				= gs_opLinePen,
									sh_unID						= 1030

		del 3

	else

		!********** fixed transom

		addx -a/2+stb_l+alefto/2
		addy gs_k+gs_frame_width

		call "W_Sash_fix" parameters all a=alefto, b=b021, sts=gs_frame_thk, matpanes=gs_matpanes,
										matglas=gs_glass_mat, spb=spb, sps=sps, sh=sho,
										sv=svo, pg=gs_glass_pen, gs_frame_pen=gs_frame_pen,
										gs_opening_dir_m=1,
										gs_glass_thk=gs_glass_thk,
									gs_sash_fill		= gs_fillSash,
									gs_sash_fill_pen	= gs_penSash_fg,
									gs_sash_fill_bpen	= gs_penSash_bg,
									lod3D = lod3D
		del 2

	endif

else


	!********************************* divided transom

	if not(bTop1FieldFix) then

		aleft2=aleft+vb

		addz vt
		addy h021

		addx -a/2+vbl+aleft2/4

		!*** left sash

		call "W_Sash_bal_2" parameters all a=aleft2/2, b=b021, rab=rab, rab1=rab, rab2=rab, ras=ras,
							   matsash=matsash, matglas=gs_glass_mat, vb=vb, sts=gs_frame_thk,
							   vt=vt, main=1, loc_op=2, matpanes=gs_matpanes,
							   spb=spb, sps=sps, sh=sho, sv=svo, pg=gs_glass_pen, rightsash=0,
							   gs_opt=gs_opt, sash_type="transom",
								gs_sash_pen=gs_sash_pen, gs_opening_dir_m=1,
								gs_glass_thk=gs_glass_thk,
							lod3D						= lod3D,
							bOplines3d					= bOplines3d,
							opLineType3dIn				= opLineType3dIn,
							opLineType3dOut				= opLineType3dOut,
							gs_opline_style_m			= gs_opline_style_m,
							gs_opLinePen				= gs_opLinePen,
							sh_unID						= 1040

		del 1


		!*** right sash

		addx -a/2+bf1-vbm-aleft2/4

		call "W_Sash_bal_2" parameters all a=aleft2/2, b=b021, rab=rab, rab1=rab, rab2=rab, ras=ras,
							   matsash=matsash, matglas=gs_glass_mat, vb=vb, sts=gs_frame_thk,
							   vt=vt, main=1, loc_op=loc_op_o1, matpanes=gs_matpanes,
							   spb=spb, sps=sps, sh=sho, sv=svo, pg=gs_glass_pen, rightsash=1,
							   gs_opt=gs_opt, sash_type="transom",
								gs_sash_pen=gs_sash_pen, gs_opening_dir_m=1,
								gs_glass_thk=gs_glass_thk,
							lod3D						= lod3D,
							bOplines3d					= bOplines3d,
							opLineType3dIn				= opLineType3dIn,
							opLineType3dOut				= opLineType3dOut,
							gs_opline_style_m			= gs_opline_style_m,
							gs_opLinePen				= gs_opLinePen,
							sh_unID						= 1050

		del 1

		del 2


	else

		a01=aleftfix2

		addx -a/2+stb_l+a01/2
		addy h021

		call "W_Sash_fix" parameters all a=a01, b=b021, sts=gs_frame_thk, matpanes=gs_matpanes,
										matglas=gs_glass_mat, spb=spb, sps=sps, sh=sho,
										sv=svo,
										gs_glass_thk=gs_glass_thk,
									gs_sash_fill		= gs_fillSash,
									gs_sash_fill_pen	= gs_penSash_fg,
									gs_sash_fill_bpen	= gs_penSash_bg,
									lod3D = lod3D

		del 2


		b0=b-gs_k-gs_frame_width-stb_ob

		addx -a/2+stb_l+a01+gs_frame_width+a01/2
		addy gs_k+gs_frame_width

		call "W_Sash_fix" parameters all a=a01, b=b021, sts=gs_frame_thk, matpanes=gs_matpanes,
										matglas=gs_glass_mat, spb=spb, sps=sps, sh=sho,
										sv=svo,
										gs_glass_thk=gs_glass_thk,
									gs_sash_fill		= gs_fillSash,
									gs_sash_fill_pen	= gs_penSash_fg,
									gs_sash_fill_bpen	= gs_penSash_bg,
									lod3D = lod3D

		del 2

	endif

endif


!**** field 2 (above Door)

if not(bTop2FieldFix) then

	!********** opening sash

	addz vt
	addy h022
	addx a/2-vbr-arighto/2

	call "W_Sash_bal" parameters all a=arighto, b=b022, rab=rab, rab1=rab_ob,
				rab2=rab, ras=ras, vb=vb, sts=gs_frame_thk,
				matsash=matsash, matglas=gs_glass_mat, matpanes=gs_matpanes,
				vt=vt, main=1, loc_op=loc_op_o2,
				spb=spb, sps=sps, sh=sho, sv=svo2,
				pg=gs_glass_pen, opt2=opt2, sash_type="transom",
				sashnumber=2, gs_sash_pen=gs_sash_pen,
				gs_opening_dir_m=1,
				gs_glass_thk=gs_glass_thk,
				lod3D						= lod3D,
				bOplines3d					= bOplines3d,
				opLineType3dIn				= opLineType3dIn,
				opLineType3dOut				= opLineType3dOut,
				gs_opline_style_m			= gs_opline_style_m,
				gs_opLinePen				= gs_opLinePen,
				sh_unID						= 1060

	del 3

else

	!********** fixed transom

	addx a/2-stb_r-arighto/2
	addy gs_k+gs_frame_width

	call "W_Sash_fix" parameters all a=arighto, b=b022, sts=gs_frame_thk, matpanes=gs_matpanes,
									matglas=gs_glass_mat, spb=spb, sps=sps, sh=sho,
									sv=svo2,
									gs_glass_thk=gs_glass_thk,
									gs_sash_fill		= gs_fillSash,
									gs_sash_fill_pen	= gs_penSash_fg,
									gs_sash_fill_bpen	= gs_penSash_bg,
									lod3D = lod3D
	del 2

endif



end





!*******************************************************
!************************************ Section, elevation
!*******************************************************


1000:


if not(WIDO_REVEAL_SIDE) then
	mulz -1
	addz -WIDO_FRAME_THICKNESS
endif



!************************************ 1:200

if detsect=200 then

	addz 0.0001

	pen SYMB_VIEW_PEN

	gosub 3500

	del 1

	if not(WIDO_REVEAL_SIDE) then
		del 2
	endif

	end

endif



!********************************** 1:100 and Abstrakt

if detsect=100 then

	br_b1=0

	addz 0.0001

	gosub 3000

	del 1

	if not(WIDO_REVEAL_SIDE) then
		del 2
	endif

	end

endif


!**************************** 1:50 and Abstrakt

if detsect=50 then

	br_b1=0

	for kk=1 to 2

		gosub 3000

		addz gs_frame_thk

	next kk

	del 2

	material matframe
	pen gs_frame_pen

	addy br_d

	plane 4,
		-a/2+bf1-stb_m/2, 0, 0.0001,
		 a/2, 0, 0.0001,
		 a/2, 0, WIDO_FRAME_THICKNESS-0.0001,
		-a/2+bf1-stb_m/2, 0, WIDO_FRAME_THICKNESS-0.0001

	addy -br_d+b-br_c

	gosub 2000

	del 2

	addy ph+br_d

	plane 4,
		-a/2+bf1-stb_m/2, 0, 0.0001,
		-a/2, 0, 0.0001,
		-a/2, 0, WIDO_FRAME_THICKNESS-0.0001,
		-a/2+bf1-stb_m/2, 0, WIDO_FRAME_THICKNESS-0.0001

	del 1


	if gs_kamp then

		addy gs_k-br_a

		gosub 2000

		addy br_a

		gosub 2000

		addy br_a

		gosub 2000

		del 3

	endif

	if not(WIDO_REVEAL_SIDE) then
		del 2
	endif

	!*** Fensterbank

	if gs_feba_a then

		gosub 4000

	endif

	end

endif


end


!**************************************** subroutins
!***************************************************



2000:

!************* section planes

material matframe

pen gs_frame_pen

plane 4,
	-a/2, 0, 0.0001,
	 a/2, 0, 0.0001,
	 a/2, 0, WIDO_FRAME_THICKNESS-0.0001,
	-a/2, 0, WIDO_FRAME_THICKNESS-0.0001


return




end

!*********** Window polygons, 1:100, 1:50, Abstrakt

3000:

material matframe

pen gs_frame_pen

ph=parapeth

br_m=br_a
br_w=stb_w

bf2=br_a1+br_a+(bf1-br_m/2-br_a1-3*br_a)/2

if gs_kamp=1 then

	if gs_og then

		cprism_ gs_frame_mat2, gs_frame_mat, gs_frame_mat,
			37, 0.0001,
			-a/2, ph, 15,
			-a/2, b, 15,
			 a/2, b, 15,
			 a/2, br_b1, 15,
			-a/2+bf1-br_m/2, br_b1, 15,
			-a/2+bf1-br_m/2, ph, 15,
			-a/2, ph, -1,

			-a/2+bf2+br_a1, ph+br_w, 15,
			-a/2+bf2+br_a1, gs_k-br_a, 15,
			-a/2+bf1-br_m/2-br_a, gs_k-br_a, 15,
			-a/2+bf1-br_m/2-br_a, ph+br_w, 15,
			-a/2+bf2+br_a1, ph+br_w, -1,

			-a/2+bf2-br_a1, ph+br_w, 15,
			-a/2+bf2-br_a1, gs_k-br_a, 15,
			-a/2+br_a1, gs_k-br_a, 15,
			-a/2+br_a1, ph+br_w, 15,
			-a/2+bf2-br_a1, ph+br_w, -1,

			-a/2+bf1-br_m/2+br_a, br_d, 15,
			-a/2+bf1-br_m/2+br_a, gs_k-br_a, 15,
			 a/2-br_a2, gs_k-br_a, 15,
			 a/2-br_a2, br_d, 15,
			-a/2+bf1-br_m/2+br_a, br_d, -1,

			-a/2+br_a1, gs_k+br_a, 15,
			-a/2+br_a1, b-br_c, 15,
			-a/2+bf2-br_a, b-br_c, 15,
			-a/2+bf2-br_a, gs_k+br_a, 15,
			-a/2+br_a1, gs_k+br_a, -1,

			-a/2+bf2+br_a, gs_k+br_a, 15,
			-a/2+bf2+br_a, b-br_c, 15,
			-a/2+bf1-br_m/2-br_a, b-br_c, 15,
			-a/2+bf1-br_m/2-br_a, gs_k+br_a, 15,
			-a/2+bf2+br_a, gs_k+br_a, -1,

			-a/2+bf1-br_m/2+br_a, gs_k+br_a, 15,
			-a/2+bf1-br_m/2+br_a, b-br_c, 15,
			 a/2-br_a2, b-br_c, 15,
			 a/2-br_a2, gs_k+br_a, 15,
			-a/2+bf1-br_m/2+br_a, gs_k+br_a, -1

	else

		cprism_ gs_frame_mat2, gs_frame_mat, gs_frame_mat,
			32, 0.0001,
			-a/2, ph, 15,
			-a/2, b, 15,
			 a/2, b, 15,
			 a/2, br_b1, 15,
			-a/2+bf1-br_m/2, br_b1, 15,
			-a/2+bf1-br_m/2, ph, 15,
			-a/2, ph, -1,

			-a/2+bf2+br_a1, ph+br_w, 15,
			-a/2+bf2+br_a1, gs_k-br_a, 15,
			-a/2+bf1-br_m/2-br_a, gs_k-br_a, 15,
			-a/2+bf1-br_m/2-br_a, ph+br_w, 15,
			-a/2+bf2+br_a1, ph+br_w, -1,

			-a/2+bf2-br_a1, ph+br_w, 15,
			-a/2+bf2-br_a1, gs_k-br_a, 15,
			-a/2+br_a1, gs_k-br_a, 15,
			-a/2+br_a1, ph+br_w, 15,
			-a/2+bf2-br_a1, ph+br_w, -1,

			-a/2+bf1-br_m/2+br_a, br_d, 15,
			-a/2+bf1-br_m/2+br_a, gs_k-br_a, 15,
			 a/2-br_a2, gs_k-br_a, 15,
			 a/2-br_a2, br_d, 15,
			-a/2+bf1-br_m/2+br_a, br_d, -1,

			-a/2+br_a1, gs_k+br_a, 15,
			-a/2+br_a1, b-br_c, 15,
			-a/2+bf1-br_m/2-br_a, b-br_c, 15,
			-a/2+bf1-br_m/2-br_a, gs_k+br_a, 15,
			-a/2+br_a1, gs_k+br_a, -1,

			-a/2+bf1-br_m/2+br_a, gs_k+br_a, 15,
			-a/2+bf1-br_m/2+br_a, b-br_c, 15,
			 a/2-br_a2, b-br_c, 15,
			 a/2-br_a2, gs_k+br_a, 15,
			-a/2+bf1-br_m/2+br_a, gs_k+br_a, -1
	endif

else
	cprism_ gs_frame_mat2, gs_frame_mat, gs_frame_mat,
		22, 0.0001,
		-a/2, ph, 15,
		-a/2, b, 15,
		 a/2, b, 15,
		 a/2, br_b1, 15,
		-a/2+bf1-br_m/2, br_b1, 15,
		-a/2+bf1-br_m/2, ph, 15,
		-a/2, ph, -1,

		-a/2+bf2+br_a1, ph+br_w, 15,
		-a/2+bf2+br_a1, b-br_c, 15,
		-a/2+bf1-br_m/2-br_a, b-br_c, 15,
		-a/2+bf1-br_m/2-br_a, ph+br_w, 15,
		-a/2+bf2+br_a1, ph+br_w, -1,

		-a/2+bf2-br_a1, ph+br_w, 15,
		-a/2+bf2-br_a1, b-br_c, 15,
		-a/2+br_a1, b-br_c, 15,
		-a/2+br_a1, ph+br_w, 15,
		-a/2+bf2-br_a1, ph+br_w, -1,

		-a/2+bf1-br_m/2+br_a, br_d, 15,
		-a/2+bf1-br_m/2+br_a, b-br_c, 15,
		 a/2-br_a2, b-br_c, 15,
		 a/2-br_a2, br_d, 15,
		-a/2+bf1-br_m/2+br_a, br_d, -1

endif


for jj=1 to 2

	lin_ -a/2+bf1-br_m/2, 0, 0, -a/2+bf1-br_m/2, b, 0

	if gs_kamp=1 then lin_ -a/2, gs_k, 0, a/2, gs_k, 0

	if gs_kamp=0 then
	   lin_ -a/2+bf2, ph, 0, -a/2+bf2, b, 0
	else
		if gs_og then
			lin_ -a/2+bf2, ph, 0, -a/2+bf2, b, 0
		else
			lin_ -a/2+bf2, ph, 0, -a/2+bf2, gs_k, 0
		endif
	endif

	addz 0.0001

next jj

del 2



!****************************** glass fields

if gs_kamp=1 then
	h1=gs_k-br_a
else
	h1=b-br_c
endif

h2w=ph+br_w
h2=br_d



pen gs_sash_pen

!*** main glasses

!** left

aa=bf2-br_a1-br_a
ba=h1-h2w
ha=h2w
sva=sv
sha=sh
loc_opa=3

addx -a/2+br_a1+aa/2
gosub 3600
del 1

!** central

aa=bf2-br_a1-br_a
ba=h1-h2w
ha=h2w
sva=sv
sha=sh
loc_opa=loc_op

addx -a/2+br_a1+aa+2*br_a+aa/2
gosub 3600
del 1


!** right

aa=a-bf1-br_a2-br_a+br_m/2
ba=h1-h2
ha=h2
sva=sv2
sha=sh2
loc_opa=loc_op2

addx  a/2-br_a2-aa/2
gosub 3600
del 1


!*** transom glass

if gs_kamp=1 then
	if gs_og then

		!** left

		aa=bf2-br_a1-br_a
		ba=b-br_c-gs_k-gs_frame_width
		ha=gs_k+gs_frame_width
		sva=svo
		sha=sho
		if not(bTop1FieldFix) then loc_opa=3 else loc_opa=0

		addx -a/2+br_a1+aa/2
		gosub 3600
		del 1

		!** central

		aa=bf2-br_a1-br_a
		ba=b-br_c-gs_k-gs_frame_width
		ha=gs_k+gs_frame_width
		sva=svo
		sha=sho
		oefla=loc_opa=loc_op_o1

		addx -a/2+br_a1+aa+2*br_a+aa/2
		gosub 3600
		del 1

	else

		!** left

		aa=bf1-br_a1-br_m/2-br_a
		ba=b-br_c-gs_k-gs_frame_width
		ha=gs_k+gs_frame_width
		sva=svo
		sha=sho
		loc_opa=loc_op_o1

		addx -a/2+br_a1+aa/2
		if gs_kamp=1 then gosub 3600
		del 1

	endif

	!** right

	aa=a-bf1-br_a2-br_a+br_m/2
	ba=b-br_c-gs_k-gs_frame_width
	ha=gs_k+gs_frame_width
	sva=svo2
	sha=sho
	loc_opa=loc_op_o2

	addx  a/2-br_a2-aa/2
	if gs_kamp=1 then gosub 3600
	del 1

endif


return


end

3500:

!************************************ section/elevation, 1:200


prism_ 5, 0.0001,
	-a/2, 0, 15,
	-a/2, b, 15,
	 a/2, b, 15,
	 a/2, 0, 15,
	-a/2, 0, -1


for jj=1 to 2

	lin_ -a/2+bf1-br_m/2, 0, 0, -a/2+bf1-br_m/2, b, 0

	if gs_kamp=1 then lin_ -a/2, gs_k, 0, a/2, gs_k, 0

	if gs_kamp=0 then
		lin_ -a/2+bf2, ph, 0, -a/2+bf2, b, 0
	else
		if gs_og then
			lin_ -a/2+bf2, ph, 0, -a/2+bf2, b, 0
		else
			lin_ -a/2+bf2, ph, 0, -a/2+bf2, gs_k, 0
		endif
	endif

	addz 0.0001

next jj

del 2

return



3600:

!********* glass of abstrakt 3D / simplified section / elevation

body 1

material gs_glass_mat

pen gs_glass_pen

prism_ 5, 0.0001,
	-aa/2, ha, 15,
	-aa/2, ha+ba, 15,
	 aa/2, ha+ba, 15,
	 aa/2, ha, 15,
	-aa/2, ha, -1

body 1

!*** division bars

pen gs_sash_pen

dx=aa/(sva+1)
dy=ba/(sha+1)

addx -aa/2

for i=1 to sva
	addx dx
	lin_ 0, ha, 0, 0, ha+ba, 0
	lin_ 0, ha, 0.0001, 0, ha+ba, 0.0001
next i

del sva+1

addy ha

for i=1 to sha
	addy dy
	lin_ -aa/2, 0, 0, aa/2, 0, 0
	lin_ -aa/2, 0, 0.0001, aa/2, 0, 0.0001
next i

del sha+1


!*** opening lines


if bOplines3d then

	if loc_opa=2 or loc_opa=3 then
		addx aa/2
		addy ha
		mulx -1
		if loc_opa=3 then
			mulx -1
			addx -aa
		else
			mulx 1
			addx 0
		endif
		otype=1
		gosub 5000
		del 5
	endif

	if loc_opa=6 then
		addx -aa/2
		addy ha
		otype=2
		gosub 5000
		del 2
	endif

	if loc_opa=7 then
		addx -aa/2
		addy ha+ba
		muly -1
		otype=2
		gosub 5000
		del 3
	endif

	if loc_opa=4 or loc_opa=5 then
		addx -aa/2
		addy ha
		otype=2
		gosub 5000
		del 2

		addx aa/2
		addy ha
		mulx -1
		if loc_opa=5 then
			mulx -1
			addx -aa
		else
			mulx 1
			addx 0
		endif
		otype=1
		gosub 5000
		del 5
	endif
endif

return



4000:

!************************* Fensterbank *******************

mulz -1
addz -WIDO_FRAME_THICKNESS

if (abs(SYMB_ROTANGLE)<EPS) = SYMB_MIRRORED then
	jamb1=WIDO_RIGHT_JAMB
	jamb2=WIDO_LEFT_JAMB
else
	jamb2=WIDO_RIGHT_JAMB
	jamb1=WIDO_LEFT_JAMB
endif



!****************** below window


!************ only inside


if feba<>0 then

	if abs(gs_sfbi)<EPS then feba_i=0

	addy parapeth
	addx -a/2+(bf1-stb_m/2)/2

	sect_fill gs_fill_schnitt, pen_bkgd, gs_p_schnittschraff, gs_pen_schnitt

	call "Fbank_bal" parameters a=bf1-stb_m/2, b=b, sts=gs_frame_thk, ecode=1,
				nh=gs_nh, fbh=fbh, sfbi=gs_sfbi,  matfa=gs_matfa, matfi=gs_matfi,
				feba_a=0, feba_i=feba_i, a0=a0, lich=gs_lich,
				fbl=gs_fbl, w=gs_w, nd=nd,  suba_l=suba_l, suba_r=0,
				fill_schnitt = gs_fill_schnitt,  pen_bkgd = pen_bkgd,
				p_schnittschraff = gs_p_schnittschraff, pen_schnitt = gs_pen_schnitt,
				dars_2D=dars_2D, subi_r=0,
				subi_l=subi_l, iSillType = iSillType, siv=gs_siv,
				iDWDetSE=-9999, gs_pen_2D=gs_pen_2D

	del 2

endif



!************ only outside

if feba<>0 then

	dx=jamb2-stb_m/2+jamb2

	feba_a = gs_feba_a
	if abs(fbh)<EPS then feba_a=0
	if abs(gs_sfbi)<EPS then feba_i=0

	addy parapeth
	addx -a/2+(bf1+dx)/2

	call "Fbank_bal" parameters a=bf1+dx, b=b, sts=gs_frame_thk, ecode=1,
				nh=gs_nh, fbh=fbh, sfbi=gs_sfbi,  matfa=gs_matfa, matfi=gs_matfi,
				feba_a=feba_a, feba_i=0, a0=a0, lich=gs_lich,
				fbl=gs_fbl, w=gs_w, nd=nd,  suba_l=suba_l, suba_r=0,
				fill_schnitt = gs_fill_schnitt,  pen_bkgd = pen_bkgd,
				p_schnittschraff = gs_p_schnittschraff, pen_schnitt = gs_pen_schnitt,
				dars_2D=dars_2D, subi_r=subi_r,
				subi_l=subi_l, iSillType = iSillType, siv=gs_siv, iDWDetSE=-9999, gs_pen_2D=gs_pen_2D

	del 2

endif




!******************* below door

!****** only inside

if feba2<>0 then

	addx a/2-(a-bf1+stb_m/2)/2

	sect_fill gs_fill_schnitt, pen_bkgd, gs_p_schnittschraff, gs_pen_schnitt

	call "Fbank_bal" parameters a=a-bf1+stb_m/2, b=b, sts=gs_frame_thk, ecode=1,
				nh=gs_nh, fbh=fbh, sfbi=gs_sfbi,  matfa=gs_matfa, matfi=gs_matfi,
				feba_a=0, feba_i=feba_i2, a0=a0, lich=gs_lich,
				fbl=gs_fbl, w=gs_w, nd=nd,  suba_l=suba_l, suba_r=suba_r,
				fill_schnitt = gs_fill_schnitt,  pen_bkgd = pen_bkgd,
				p_schnittschraff = gs_p_schnittschraff, pen_schnitt = gs_pen_schnitt,
				dars_2D=dars_2D, subi_r=subi_r,
				subi_l=0, iSillType = iSillType, siv=gs_siv, iDWDetSE=-9999, gs_pen_2D=gs_pen_2D

	del 1

endif


!****** only outside

if feba_a2=1 then

	dxx=stb_m/2

	addx a/2-(a-bf1)/2-dxx/2
	addy -WIDO_THRES_DEPTH


	call "Fbank_bal" parameters a=a-bf1+dxx, b=b, sts=gs_frame_thk, ecode=1,
				nh=gs_nh, fbh=fbh, sfbi=gs_sfbi,  matfa=gs_matfa, matfi=gs_matfi,
				feba_a=feba_a2, feba_i=0, a0=a0, lich=gs_lich,
				fbl=gs_fbl, w=gs_w, nd=nd,  suba_l=0, suba_r=suba_r,
				fill_schnitt = gs_fill_schnitt,  pen_bkgd = pen_bkgd,
				p_schnittschraff = gs_p_schnittschraff, pen_schnitt = gs_pen_schnitt,
				dars_2D=dars_2D, subi_r=subi_r,
				subi_l=subi_l, iSillType = iSillType, siv=gs_siv, iDWDetSE=-9999, gs_pen_2D=gs_pen_2D

	del 2

endif


!*********************************************************
del 2
return


5000:

	if otype = 1 then iOpeningType = 4	!side hung mirrored
	if otype = 2 then iOpeningType = 7	!bottom hung

	addz -0.0001
	call "OpeningLines" parameters a = aa,
				b					= ba,
				frameThickness		= 0.0002,
				iOpeningType		= iOpeningType,
				opLineType3dIn		= opLineType3dIn,
				opLineType3dOut		= opLineType3dOut,
				gs_opLinePen		= gs_opLinePen,
				gs_opline_style_m	= gs_opline_style_m
	del 1
return
