
! Contact person: <BD, BO, NJ>

minUnitWidth	= 2 * (2 * gs_frame2_width + 3 * gs_sash_width) + gw * (iMullionStyle_01 = MULLION_HVGRID) * (2  * (vgn_01-1) + (vgn_05-1)) + eps
minUnitHeight	= openingArchHeight + gs_frame2_width + 2*(gs_sash_width - gs_rebate_width) + \
					gs_UTrans_w + gw * (iMullionStyle_01 = MULLION_HVGRID) * (max((hgn_01-1),(hgn_05-1))) + \
					gw * ( iMullionStyle_02 = MULLION_HVGRID) * (hgn_02-1) + eps

! =============================================================================
! GS Window Functions
! =============================================================================

dim stDetail2D[]

call "GS Window Functions",
	parameters all	iWindowShape			= iWindowShape,
					gs_IsCurved				= gs_IsCurved,
					bParalellInCurvedWalls	= bParalellInCurvedWalls,
					bDisabeMirroring		= bDisabeMirroring,
					minUnitWidth			= minUnitWidth,
					minUnitHeight			= minUnitHeight,
	returned_parameters	stDetail2D


! =============================================================================
! Opening types
! =============================================================================

values "gs_open_2D" range [0, 90]


! =============================================================================
! Ventilation Profile
! =============================================================================

if bEnableVentilationProfile then
	call "Ventilation_profile" parameters	isWindow						= 1,
											iWindowType						= 15, 			! WIN_HistoricWindowTripleArched
											gs_bSLight						= 1,
											gs_bLeftSLight					= 1,
											gs_LTrans						= 0,
											gs_LTrans_Div					= 0,
											gs_UTrans						= 0,			! Because it is non-rectangular sash
											gs_UTrans_Div					= 0,
											CasementIDArray					= CasementIDArray,
											bVentilationProfile				= bVentilationProfile,
											iVentilationProfileType			= iVentilationProfileType,
											isVentilationProfileInSash_01	= isVentilationProfileInSash_01,
											isVentilationProfileInSash_02	= 0,
											isVentilationProfileInSash_03	= 0,
											isVentilationProfileInSash_04	= 0,
											isVentilationProfileInSash_05	= isVentilationProfileInSash_05,
											isVentilationProfileInSash_06	= 0,
											isVentilationProfileInSash_07	= 0,
											isVentilationProfileInSash_08	= 0,
											isVentilationProfileInSash_09	= isVentilationProfileInSash_09,
											isVentilationProfileInSash_10	= 0,
											isVentilationProfileInSash_11	= 0,
											iMullionStyle_01				= iMullionStyle_01,
											iMullionStyle_05				= iMullionStyle_05,
											iMullionStyle_09				= iMullionStyle_09,
											gs_VentilationProfileTypeEnable	= gs_VentilationProfileTypeEnable
else
	lock	"bVentilationProfile",
			"gs_select_sash_vent_profile",
			"gs_list_freeAirPerformance"
	hideparameter	"bVentilationProfile",
					"gs_select_sash_vent_profile",
					"gs_list_freeAirPerformance"
endif


! ==============================================================================
! Uniform Surfaces
! ==============================================================================

dim	surfaceParNames[8]						:	dim	surfaceParameters[8]
	surfaceParNames[1]	= "gs_frame_mat"	:		surfaceParameters[1]	= gs_frame_mat
	surfaceParNames[2]	= "gs_frame_mat2"	:		surfaceParameters[2]	= gs_frame_mat2
	surfaceParNames[3]	= "gs_sash_mat"		:		surfaceParameters[3]	= gs_sash_mat
	surfaceParNames[4]	= "gs_sash_mat2"	:		surfaceParameters[4]	= gs_sash_mat2
	surfaceParNames[5]	= "gs_grill_mat"	:		surfaceParameters[5]	= gs_grill_mat
	surfaceParNames[6]	= "gs_grill_mat2"	:		surfaceParameters[6]	= gs_grill_mat2
	surfaceParNames[7]	= "gs_panel_mat"	:		surfaceParameters[7]	= gs_panel_mat
	surfaceParNames[8]	= "gs_panel_mat2"	:		surfaceParameters[8]	= gs_panel_mat2

_lastModSurfaceParameter = gs_frame_mat

if stored_material[1][1] <> -9999 then
	for i = 1 to vardim1(surfaceParNames)
		if GLOB_MODPAR_NAME = surfaceParNames[i] then
			_lastModSurfaceParameter	= surfaceParameters[i]
			stored_material[1][i]	= surfaceParameters[i]
			stored_material[2][i]	= 1

			for j = 1 to i-1
				stored_material[2][j]	= 0
				parameters stored_material[2][j]	= stored_material[2][j]
			next j

			for k = i+1 to vardim1(surfaceParNames)
				stored_material[2][k]	= 0
				parameters stored_material[2][k]	= stored_material[2][k]
			next k
		endif

		parameters	stored_material[1][i]	= stored_material[1][i],
					stored_material[2][i]	= stored_material[2][i]

		if stored_material[2][i] = 1 then
			_lastModSurfaceParameter = stored_material[1][i]
		endif
	next i
else
	gosub "preloadSurfaces"
endif

if bLinkSurfacesFrameSash then
	parameters	gs_frame_mat	= _lastModSurfaceParameter,
				gs_frame_mat2	= _lastModSurfaceParameter,
				gs_sash_mat		= _lastModSurfaceParameter,
				gs_sash_mat2	= _lastModSurfaceParameter,
				gs_grill_mat	= _lastModSurfaceParameter,
				gs_grill_mat2	= _lastModSurfaceParameter,
				gs_panel_mat	= _lastModSurfaceParameter,
				gs_panel_mat2	= _lastModSurfaceParameter
else
	if GLOB_MODPAR_NAME = "bLinkSurfacesFrameSash" then
		parameters	gs_frame_mat	= stored_material[1][1],
					gs_frame_mat2	= stored_material[1][2],
					gs_sash_mat		= stored_material[1][3],
					gs_sash_mat2	= stored_material[1][4],
					gs_grill_mat	= stored_material[1][5],
					gs_grill_mat2	= stored_material[1][6],
					gs_panel_mat	= stored_material[1][7],
					gs_panel_mat2	= stored_material[1][8]
	else
		gosub "preloadSurfaces"
	endif
endif


! =============================================================================
! Orientation
! =============================================================================

values{2} "gs_list_orientationDef_m"	0, `Автоматически`,
										1, `Специальная`

if gs_list_orientationDef_m = 0 then
	ac_OpeningSide = ""
	parameters ac_OpeningSide = ac_OpeningSide

	lock "ac_OpeningSide"
	hideparameter "ac_OpeningSide"
endif


! =============================================================================
! IFC Parameters
! =============================================================================

ifc_optype = 10		! WIN_OP_USER_DEFINED
parameters ifc_optype = ifc_optype
call "IFC_optype_window" parameters ifc_optype = ifc_optype

lock "ifc_optypestr"

ifc_LiningDepth = WIDO_FRAME_THICKNESS
parameters ifc_LiningDepth = ifc_LiningDepth

ifc_LiningThickness = gs_frame_width
parameters ifc_LiningThickness = ifc_LiningThickness


! =============================================================================
! FM Types
! =============================================================================

call "FM_types" parameters all


! =============================================================================
! 3D Detail Level
! =============================================================================

if gs_3DDetEnable =0 then

    values{2} "iDWDet3D" 	DETLEVEL_DW3D_DETAILED,		`Детальный`,
						    DETLEVEL_DW3D_SIMPLE,		`Простой`,
						    DETLEVEL_DW3D_OFF,			`Откл.`

else
	dim n3DScaleValueMask[]
	dim n3DScaleValueMask_m[]

	i=1
	if bittest( gs_3DDetEnable, 0) then                                              ! Scale Sensitive in Value list, 1
				n3DScaleValueMask[i] = stDetail[1]
				n3DScaleValueMask_m[i] = DETLEVEL_DW3D_SCALESENS
				i = i + 1
	endif
	if bittest( gs_3DDetEnable, 1) then                                              ! Detailed in Value list,2
				n3DScaleValueMask[i] = stDetail[2]
				n3DScaleValueMask_m[i] = DETLEVEL_DW3D_DETAILED
				i = i + 1
	endif
	if bittest( gs_3DDetEnable, 2) then                                              ! Simple in Value list,4
				n3DScaleValueMask[i] = stDetail[3]
				n3DScaleValueMask_m[i] = DETLEVEL_DW3D_SIMPLE
				i = i + 1
	endif
	if bittest( gs_3DDetEnable, 3) then                                              ! Off in Value list,8
				n3DScaleValueMask[i] = stDetail[4]
				n3DScaleValueMask_m[i] = DETLEVEL_DW3D_OFF
				i = i + 1
	endif
	if bittest( gs_3DDetEnable, 4) then                                              ! Chinese Simple in Value list,16
				n3DScaleValueMask[i] = stDetail[5]
				n3DScaleValueMask_m[i] = DETLEVEL_DW3D_CHI_SIMPLE
				i = i + 1
	endif
	if bittest( gs_3DDetEnable, 5) then                                              ! Chinese Detailed in Value list,32
				n3DScaleValueMask[i] = stDetail[6]
				n3DScaleValueMask_m[i] = DETLEVEL_DW3D_CHI_DETAILED
				i = i + 1
	endif

	values{2} "iDWDet3D" n3DScaleValueMask_m, n3DScaleValueMask
endif


! =============================================================================
! Swedish list parameter control
! =============================================================================

if gs_SWE_listParams_contr > 0 then
	call "SWE_ListParameters_control" parameters gs_SWE_listParams_contr = gs_SWE_listParams_contr,
			swe_list_f1	= swe_list_f1
endif

! =============================================================================
! Japanese list parameter control
! =============================================================================

if gs_JPN_listParams_contr then
	call "ListValuesJPN" parameters all gs_JPNObjectType = 2,		!COMMPARS_INTWINDOWS
			gs_is_p2	= 0,
			gs_is_p6	= 0
endif


! =============================================================================
! Frame
! =============================================================================

values "gs_frame_thk" range [gs_frame2_thk*2 - gs_rebate_depth + gs_sash_thk, ]
values "gs_frame_width" range [gs_rebate_width + gs_sash_thk - gs_rebate_depth, A/2 - gs_sash_thk]

values "gs_frame2_thk" range (gs_rebate_depth + EPS, ]
values "gs_frame2_width" range [gs_frame_width + gs_rebate_width + gs_sash_thk - gs_rebate_depth, A/2 - gs_sash_thk]

if gs_uniform_framewidth then
	lock	"gs_frame_width_lower",
			"gs_frame2_width_lower"
endif

values "gs_smallerRad" range(gs_frame2_width, )
values "gs_shoulderHeight" range [ac_unit_height - ac_unit_width/2+gs_smallerRad-gs_frame2_width, ac_unit_height-gs_smallerRad-0.001]

values "gs_PanesConfig"		stPanesConfiguration[1], stPanesConfiguration[2]
values "gs_iPanesConfig"	PANESCONFIG_UNIFORM, PANESCONFIG_SYMM

if GLOB_MODPAR_NAME = "gs_PanesConfig" then
	gs_iPanesConfig	= PANESCONFIG_UNIFORM
	if gs_PanesConfig = stPanesConfiguration[2]	then gs_iPanesConfig	= PANESCONFIG_SYMM
	if gs_PanesConfig = stPanesConfiguration[3]	then gs_iPanesConfig	= PANESCONFIG_ASYMM

	parameters gs_iPanesConfig = gs_iPanesConfig
else
	gs_PanesConfig = stPanesConfiguration[gs_iPanesConfig]
	parameters gs_PanesConfig = gs_PanesConfig
endif


! =============================================================================
! Transom
! =============================================================================

values "gs_UTrans_w"	range(3 * gs_rebate_width, ]
values "gs_UTrans_h"	range(gs_UTrans_w/2 + gs_frame2_width + 2 * (gs_sash_width - gs_rebate_width) + (iMullionStyle_01 = MULLION_HVGRID) * max((hgn_01-1), (hgn_05-1)) * gw , \
								ac_unit_height - gs_UTrans_w/2 - gs_frame2_width - 2 * (gs_sash_width - gs_rebate_width) - (iMullionStyle_02 = MULLION_HVGRID) * (hgn_02-1) * gw)
values{2} "gs_SashText_typ_num" 	MITERED_JOINT, `Угловое Соединение`,
									BUTT_JOINT, `Стыковое Соединение`

if gs_iPanesConfig = PANESCONFIG_SYMM then
	values "gs_SLight_w" range (gs_frame2_width + 2 *(gs_sash_width - gs_rebate_width) + gs_frame2_width/2,
								ac_unit_width/2 - gs_frame2_width/2 - (gs_sash_width - gs_rebate_width)]
endif


! =============================================================================
! Window Specific Parameters
! =============================================================================

gs_tolerance_right = gs_tolerance_left
gs_tolerance_upper = gs_tolerance_left
parameters	gs_tolerance_right = gs_tolerance_right,
			gs_tolerance_upper = gs_tolerance_upper
lock "gs_tolerance_right", "gs_tolerance_upper"

hgn_02 = 1
parameters hgn_02 = hgn_02

gs_optype_m_02 	= SASH_FIXED
parameters gs_optype_m_02 = gs_optype_m_02


! =============================================================================
! Sash Options
! =============================================================================

if gs_sash_uniform then
	lock "vgn_05", "hgn_05", "vgn2_05", "hgn2_05"
	hideparameter "vgn_05", "hgn_05", "vgn2_05", "hgn2_05"
	lock "vgn_09", "hgn_09", "vgn2_09", "hgn2_09"
	hideparameter "vgn_09", "hgn_09", "vgn2_09", "hgn2_09"
endif

dim sashMullionResetArray[3][3]
for i=1 to 3
	for j=1 to 3
		sashMullionResetArray[i][j]	= 0
	next j
next i

call "Casement_rectangular" parameters	iWindowClass			= 2,				! WINCLASS_HISTORIC
										CasementIDArray 		= CasementIDArray,
										CasementTypeArray		= CasementTypeArray,
										iWindowType				= 15, 					!WIN_HistoricWindowTripleArched
										sashWidthArray			= sashWidthArray,
										sashHeightArray			= sashHeightArray,
										sashMullionResetArray	= sashMullionResetArray,
										gs_sash_uniform			= gs_sash_uniform,
										gs_sash_width			= gs_sash_width,
										gs_rebate_width			= gs_rebate_width,
										gs_bLeftSLight			= 1,
										gs_bSLight				= 1,
										gs_UTrans				= 1,
										gs_LTrans				= 0,
										gs_UTrans_Div			= 0,
										gs_LTrans_Div			= 0,
										iMullionPosition		= iMullionPosition,
										MullionStyle_00			= MullionStyle_00,
										iMullionStyle_00		= iMullionStyle_00,
										MullionStyle_01			= MullionStyle_01,
										iMullionStyle_01		= iMullionStyle_01,
										iMullionStyleOriginal_01= iMullionStyleOriginal_01,
										MullionStyle_02			= MullionStyle_02,
										iMullionStyle_02		= iMullionStyle_02,
										iMullionStyleOriginal_02= iMullionStyleOriginal_02,
										MullionStyle_05			= MullionStyle_05,
										iMullionStyle_05		= iMullionStyle_05,
										iMullionStyleOriginal_05= iMullionStyleOriginal_05,
										MullionStyle_09			= MullionStyle_09,
										iMullionStyle_09		= iMullionStyle_09,
										iMullionStyleOriginal_09= iMullionStyleOriginal_09,
										MullionPosition			= MullionPosition,
!										gs_horiz_div_height_01	= gs_horiz_div_height_01,
!										gs_horiz_div_height_02	= gs_horiz_div_height_02,
!										gs_horiz_div_height_05	= gs_horiz_div_height_05,
!										gs_horiz_div_height_09	= gs_horiz_div_height_09,
										gs_optype_01			= gs_optype_01,
										gs_optype_02			= gs_optype_02,
										gs_optype_05			= gs_optype_05,
										gs_optype_09			= gs_optype_09,
										gs_optype_m_01			= gs_optype_m_01,
										gs_optype_m_02			= gs_optype_m_02,
										gs_optype_m_05			= gs_optype_m_05,
										gs_optype_m_09			= gs_optype_m_09,
										bVentilationProfile				= bVentilationProfile,
										iVentilationProfileType			= iVentilationProfileType,
										VentilationProfileHeight		= VentilationProfileHeight,
										isVentilationProfileInSash_01	= isVentilationProfileInSash_01,
										isVentilationProfileInSash_05	= isVentilationProfileInSash_05,
										isVentilationProfileInSash_09	= isVentilationProfileInSash_09,
										stSashType				= stSashType,
										gw						= gw,
										ghe						= 1,
										vgn_01					= vgn_01,
										hgn_01					= hgn_01,
										vgn_02					= vgn_02,
										hgn_02					= hgn_02,
										vgn_05					= vgn_05,
										hgn_05					= hgn_05,
										vgn_09					= vgn_09,
										hgn_09					= hgn_09,
!										vgn2_01					= vgn2_01,
!										hgn2_01					= hgn2_01,
!										vgn2_02					= vgn2_02,
!										hgn2_02					= hgn2_02,
!										vgn2_05					= vgn2_05,
!										hgn2_05					= hgn2_05,
!										vgn2_09					= vgn2_09,
!										hgn2_09					= hgn2_09,
!										vergrid_01				= vergrid_01,
!										horgrid_01				= horgrid_01,
!										vergrid_02				= vergrid_02,
!										horgrid_02				= horgrid_02,
!										vergrid_05				= vergrid_05,
!										horgrid_05				= horgrid_05,
!										vergrid_09				= vergrid_09,
!										horgrid_09				= horgrid_09,
!										vergrid2_05				= vergrid2_05,
!										horgrid2_05				= horgrid2_05,
!										vergrid2_09				= vergrid2_09,
!										horgrid2_09				= horgrid2_09,
										stMullionPosition		= stMullionPosition,
										stOpeningType			= stOpeningType,
										openingAngle_01			= openingAngle_01,
										openingAngle_02			= openingAngle_02,
										openingAngle_05			= openingAngle_05,
										openingAngle_09			= openingAngle_09,
										gs_panel_mat			= gs_panel_mat,
										gs_panel_mat2			= gs_panel_mat2

! =============================================================================
! Total Glazed Area Listing Parameters
! =============================================================================
if NOT(gs_list_glassarea_override) then
	if GLOB_MODPAR_NAME = "gs_list_glassarea" then
		gs_list_glassarea_tmp = gs_list_glassarea
		parameters gs_list_glassarea_tmp = gs_list_glassarea_tmp
	else
		gs_list_glassarea = gs_list_glassarea_tmp
		parameters gs_list_glassarea = gs_list_glassarea
	endif

	gs_list_glassarea	= 0
	! Transom Right Sash ------------------------------------------------------------
	sashWidth	= sashWidthArray2[1][2]
	sashHeight	= sashHeightArray2[1][2]

	glassWidth	= sashWidth - 2 * gs_rebate_width
	glassHeight	= sashHeight - 2 * gs_rebate_width

	rectPartHegiht	= gs_shoulderHeight - gs_UTrans_h - gs_UTrans_w / 2
	rectPartArea	= glassWidth * rectPartHegiht

	sideArcRadius	= gs_smallerRad - gs_frame2_width
	midArcRadius	= R1 - gs_frame2_width
	midArcHegiht	= glassHeight - rectPartHegiht

	midTriangY		= midArcRadius - midArcHegiht
	midTriangX		= glassWidth /2 - sideArcRadius
	midTriangC		= max(midTriangX, midArcRadius - sideArcRadius)
	midArcAngle		= ASN(midTriangX / midTriangC) * 2
	midArcArea		= (midArcAngle / 360) * midArcRadius^2 * PI
	midTriangArea	= midTriangY * midTriangX

	sideArcAngle	= ASN(midTriangY / midTriangC)
	sideArcArea		= (sideArcAngle / 360) * sideArcRadius^2 * PI

	arcPartArea		= midArcArea - midTriangArea + sideArcArea * 2

	PanelGlassArea	= rectPartArea + arcPartArea

	if iMullionStyle_02 = 2 then ! H-V Grid
		HorGrillNum		= 0
		VertGrillNum	= vgn_02 - 1
		GrillWidth		= gw

		HorGrillArea	= HorGrillNum * glassWidth * GrillWidth
		VertGrillArea	= VertGrillNum * glassHeight * GrillWidth
		SectGrillArea	= HorGrillNum * VertGrillNum * GrillWidth * GrillWidth
		SummaGrillArea	= HorGrillArea + VertGrillArea - SectGrillArea

		PanelGlassArea = PanelGlassArea - SummaGrillArea
	endif

	if iMullionStyle_02 = 4 then ! Custom Panel
		PanelGlassArea = 0
	endif
	gs_list_glassarea = gs_list_glassarea + PanelGlassArea

	! =============================================================================
	! Main Sashes
	! =============================================================================
	! Middle Left Sash ------------------------------------------------------------
	!sh_unID		= 5300
	sashWidth	= sashWidthArray2[2][1]
	sashHeight	= sashHeightArray2[2][1]

	if gs_optype_m_09 = 1 then
		glassWidth	= sashWidth - 2 * gs_rebate_width
		glassHeight	= sashHeight - 2 * gs_rebate_width
	else
		glassWidth	= sashWidth - 2 * gs_sash_width
		glassHeight	= sashHeight - 2 * gs_sash_width
	endif
	PanelGlassArea  = glassWidth * glassHeight

	if iMullionStyle_09 = 2 then ! H-V Grid
		HorGrillNum		= hgn_09 - 1
		VertGrillNum	= vgn_09 - 1
		GrillWidth		= gw

		HorGrillArea	= HorGrillNum * glassWidth * GrillWidth
		VertGrillArea	= VertGrillNum * glassHeight * GrillWidth
		SectGrillArea	= HorGrillNum * VertGrillNum * GrillWidth * GrillWidth
		SummaGrillArea	= HorGrillArea + VertGrillArea - SectGrillArea

		PanelGlassArea = PanelGlassArea - SummaGrillArea
	endif

	if iMullionStyle_09 = 4 then ! Custom Panel
		PanelGlassArea = 0
	endif
	gs_list_glassarea = gs_list_glassarea + PanelGlassArea

	! Middle Middle Sash ----------------------------------------------------------
	sh_unID		= 2100
	sashWidth	= sashWidthArray2[2][2]
	sashHeight	= sashHeightArray2[2][2]

	if gs_optype_m_01 = 1 then
		glassWidth	= sashWidth - 2 * gs_rebate_width
		glassHeight	= sashHeight - 2 * gs_rebate_width
	else
		glassWidth	= sashWidth - 2 * gs_sash_width
		glassHeight	= sashHeight - 2 * gs_sash_width
	endif
	PanelGlassArea  = glassWidth * glassHeight

	if iMullionStyle_01 = 2 then ! H-V Grid
		HorGrillNum		= hgn_01 - 1
		VertGrillNum	= vgn_01 - 1
		GrillWidth		= gw

		HorGrillArea	= HorGrillNum * glassWidth * GrillWidth
		VertGrillArea	= VertGrillNum * glassHeight * GrillWidth
		SectGrillArea	= HorGrillNum * VertGrillNum * GrillWidth * GrillWidth
		SummaGrillArea	= HorGrillArea + VertGrillArea - SectGrillArea

		PanelGlassArea = PanelGlassArea - SummaGrillArea
	endif

	if iMullionStyle_01 = 4 then ! Custom Panel
		PanelGlassArea = 0
	endif
	gs_list_glassarea = gs_list_glassarea + PanelGlassArea


	! Middle Right Sash -----------------------------------------------------------
	sh_unID		= 3700
	sashWidth	= sashWidthArray2[2][3]
	sashHeight	= sashHeightArray2[2][3]

	if gs_optype_m_05 = 1 then
		glassWidth	= sashWidth - 2 * gs_rebate_width
		glassHeight	= sashHeight - 2 * gs_rebate_width
	else
		glassWidth	= sashWidth - 2 * gs_sash_width
		glassHeight	= sashHeight - 2 * gs_sash_width
	endif
	PanelGlassArea  = glassWidth * glassHeight

	if iMullionStyle_05 = 2 then ! H-V Grid
		HorGrillNum		= hgn_05 - 1
		VertGrillNum	= vgn_05 - 1
		GrillWidth		= gw

		HorGrillArea	= HorGrillNum * glassWidth * GrillWidth
		VertGrillArea	= VertGrillNum * glassHeight * GrillWidth
		SectGrillArea	= HorGrillNum * VertGrillNum * GrillWidth * GrillWidth
		SummaGrillArea	= HorGrillArea + VertGrillArea - SectGrillArea

		PanelGlassArea = PanelGlassArea - SummaGrillArea
	endif

	if iMullionStyle_05 = 4 then ! Custom Panel
		PanelGlassArea = 0
	endif
	gs_list_glassarea = gs_list_glassarea + PanelGlassArea

	parameters gs_list_glassarea = gs_list_glassarea
	lock "gs_list_glassarea"
else
	if GLOB_MODPAR_NAME = "gs_list_glassarea" then
		gs_list_glassarea_tmp = gs_list_glassarea
		parameters gs_list_glassarea_tmp = gs_list_glassarea_tmp
	else
		gs_list_glassarea = gs_list_glassarea_tmp
		parameters gs_list_glassarea = gs_list_glassarea
	endif
endif

end

"preloadSurfaces":
	parameters	stored_material[1][1]	= gs_frame_mat,
				stored_material[1][2]	= gs_frame_mat2,
				stored_material[1][3]	= gs_sash_mat,
				stored_material[1][4]	= gs_sash_mat2,
				stored_material[1][5]	= gs_grill_mat,
				stored_material[1][6]	= gs_grill_mat2,
				stored_material[1][7]	= gs_panel_mat,
				stored_material[1][8]	= gs_panel_mat2
return
