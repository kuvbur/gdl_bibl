

! =============================================================================
! GS Skylight Functions
! =============================================================================

call "GS Skylight Functions",
	parameters all	bEnableLining			= bEnableLining,
					bEnableEdgeTypesUpper	= bEnableEdgeTypesUpper,
					bEnableEdgeTypesLower	= bEnableEdgeTypesLower,
	returned_parameters	iLoD3D,
						lod3D_Casing,
						bOplines3d, opLineType3dIn, opLineType3dOut, gs_opline_style_m, gs_opLinePen


! Horizontal and low Roof
if abs(ac_roofang) < MIN_ROOF_ANGLE | ac_roofang > 90 + EPS then
	rotx ac_roofang

	B = max(B, 1.0)
	B = min(B, 3.0)

	if SHELLBASE_VIEW_PEN > 0 then
		pen SHELLBASE_VIEW_PEN
	else
		pen 1
	endif

	material ac_side_mat
	wallniche 4, 1, 8+16,
		0, 0, 1,	0,
		 A/2, 0, 31,
		-A/2, 0, 31,
		-A/2, B, 31,
		 A/2, B, 31

	hotspot -A/2,0,0, 100
	hotspot  A/2,0,0, 101
	hotspot -A/2,B,0, 102
	hotspot  A/2,B,0, 103

	del 1

	end
endif



pen gs_cont_pen
resol 72


!**** Parameter Kontrolle - Neigungen und Konstr.starke

if ac_roofang >= 90 or ac_roofang <= 0 then ac_roofang = 45
if ng >= ac_roofang then ng = ac_roofang-20

if ac_roofthk < 0.025+0.05*sin(ng) then ac_roofthk = 0.025+0.05*sin(ng)



km1 = 0.08*tan(ac_roofang)

dr1 = (0.08-0.025*sin(ng)) * tan(ng) - 0.025 * cos(ng)

dr2 = (ac_roofthk-0.025 - 0.05*sin(ng)) / cos(ng) - dr1 + 0.01
dr2_frame = (gs_frame_thk-0.025 - 0.05*sin(ng)) / cos(ng) - dr1 + 0.01	!!!Frame Thickness of the Window

dr3 = 0.025 * cos(ng)


!**** Hauptradius und Winkel


rr = ( ((hh+km1)/2)^2 + (a/4)^2 ) / 2 / ((hh+km1)/2)

if abs(a/4 - (rr-dr1)) < 0.01 then
	ww = 90
else
	ww = 90 - acs((a/4)/(rr-dr1))
endif


ra=ac_roofang

yy=hh*(tan(ra)/tan(ng))/((tan(ra)/tan(ng))-1)+0.08*tan(ra)
xx=(yy/tan(ra)+0.08)*(-1)


!**** Y-Koordinaten der Hauptmittelpunkte

m1y = -km1 + rr

m2y = hh - rr


! ==============================================================================
! Wallhole
! ==============================================================================

! Lower cutting


if useroofmat then
	lower_mat=ac_lower_mat
else
	lower_mat=gs_innside_mat
endif


wx = 90+ww

x11 = 0.05
y11 = (m2y+(rr-dr1)*sin(wx))
x12 = x11 + cos(ng)
y12 = y11 + sin(ng)

x21 = 0
y21 = 0
x22 = x21 + cos(ac_roofang)
y22 = y21 + sin(ac_roofang)

gosub 100	! Line - Line Intersection

if state = 1 then
	rotx ac_roofang
	call "SkylightRect_RoofCutting_macro" parameters all A = a/2,
			B					= sqr(cx^2 + cy^2),
			AC_edge_lower_type	= AC_edge_lower_type,
			AC_edge_upper_type	= 3,
			AC_edge_upper_angle = ac_roofang - ng,
			gs_lower_bott_mat	= lower_mat,
			gs_lower_top_mat	= lower_mat,
			bUpperCut			= 0,
			ShowUpContLines		= 1
	del 1
endif

ang_diff = ac_roofang - ng
for ii = 1 to 25 step 1
	put (rr-dr1)*cos(wx), m2y+(rr-dr1)*sin(wx), 95
	wx = wx-ww/12
next ii
put a/4, (m2y+(rr-dr1)*sin(wx)), 95
put -a/4, (m2y+(rr-dr1)*sin(wx)), 95

addy 0.05
rotx 90

if SHELLBASE_VIEW_PEN > 0 then
	pen SHELLBASE_VIEW_PEN
else
	pen 1
endif
material ac_lower_mat
wallniche nsp/3, 1, 2+16,
	0, -SIN(ng), COS(ng),	0,
	get(nsp)

del 2

! Upper cutting

material ac_upper_mat

addx -A/4
roty 90
wallniche 3, 1, 2,
	0, 0, 1, A/2,
	0, 0, 31,
	0, (m2y+(rr-dr1)*sin(wx)), 31,
	-cx, cy, 31

del 2

pen gs_cont_pen

! --- Symbol to Projected 2D

bProjected2DContext = (GLOB_VIEW_TYPE = 2)

if bProjected2DContext then
	addz B * sin(ac_roofang)

	dist = a/4
	r = (dist)/sin(45)

	model wire

	muly (B * cos(ac_roofang))/((r-r*cos(45))*2)

	addy r-dist*2
	arc r, 45, 90
	add dist, dist, 0

	mulx -1
	rotz -90
	add -dist, -dist, 0
	arc r, 0, 45
	del 5

	mulx -1
	addy r-dist*2
	arc r, 45, 90

	add dist, dist, 0
	mulx -1
	rotz -90
	add -dist, -dist, 0
	arc r, 0, 45
	del 7

	model solid

	del 1
endif


!**** Shleife fur 2 Seiten

!for ii = 1 to 2


!**** Stock



addy 0.05
rotx 90

material gs_frame_mat

	if iLoD3D >= SYMBS_3D_M_1 then
		mask15 = 15
		mask79 = 79
	else
		mask15 = 1
		mask79 = 1
	endif

	wx = 270
	for kj = 1 to 12
		put -a/2+(rr-dr1)*cos(wx), m1y+(rr-dr1)*sin(wx), mask79
		wx = wx+ww/12
	next kj

	wx = 90+ww-ww/12
	for kj = 1 to 23
		put (rr+dr1)*cos(wx), m2y+(rr+dr1)*sin(wx), mask79
		wx = wx-ww/12
	next kj

	wx = 270-ww+ww/12
	for kj = 1 to 12
		put a/2+(rr-dr1)*cos(wx), m1y+(rr-dr1)*sin(wx), mask79
		wx = wx+ww/12
	next kj

		wx = 270
		put -a/2+(rr-dr1)*cos(wx), m1y+(rr-dr1)*sin(wx), -1


	if iLoD3D = SYMBS_3D_D_1 | iLoD3D = SYMBS_3D_D_2 then
		prism_ 4, 0.03,		!!OK
			-a/2 + (rr-dr1) * cos(asn((rr-km1)/(rr-dr1))), 0, mask15,
			-a/2 + (rr-dr1) * cos(asn((rr-km1)/(rr-dr1))), 0.05, mask15,
			a/2 - (rr-dr1) * cos(asn((rr-km1)/(rr-dr1))), 0.05, mask15,
			a/2 - (rr-dr1) * cos(asn((rr-km1)/(rr-dr1))), 0, mask15
	endif

addz 0.03


cutplane 90


if iLoD3D >= SYMBS_3D_M_1 then
	if iLoD3D = SYMBS_3D_M_1 then
		frame_thick = 0.05
		addz -0.03
	else
		frame_thick = 0.02
	endif

	prism_ nsp/3+12, frame_thick,		!!OK
		get(nsp),

		-0.05, 0.09, 15,
		-0.05, hh-rr + (rr-dr2_frame-0.04) * sin(acs(0.05/(rr-dr2_frame-0.04))), 79,
		0, m2y, 900+mask79,
		-a/4+0.04+0.05, hh-rr + (rr-dr2_frame-0.04) * sin(acs((a/4-0.04-0.05)/(rr-dr2_frame-0.04))), 3015,
		-a/4+0.04+0.05, 0.09, 15,
		-0.05, 0.09, -1,

		0.05, 0.09, 15,
		0.05, hh-rr + (rr-dr2_frame-0.04) * sin(acs(0.05/(rr-dr2_frame-0.04))), 79,
		0, m2y, 979,
		a/4-0.04-0.05, hh-rr + (rr-dr2_frame-0.04) * sin(acs((a/4-0.04-0.05)/(rr-dr2_frame-0.04))), 3015,
		a/4-0.04-0.05, 0.09, 15,
		-0.05, 0.09, -1

	if iLoD3D = SYMBS_3D_M_1 then ! --- Glass
		material gs_glass_mat
		body -1

		for jj = 1 to 2
			poly_ 5,
				-0.05, 0.09, 1,
				-0.05, hh-rr + (rr-dr2_frame-0.04) * sin(acs(0.05/(rr-dr2_frame-0.04))), 1,
				0, m2y, 901,
				-a/4+0.04+0.05, hh-rr + (rr-dr2_frame-0.04) * sin(acs((a/4-0.04-0.05)/(rr-dr2_frame-0.04))), 3001,
				-a/4+0.04+0.05, 0.09, 1

			poly_ 5,
				0.05, 0.09, 1,
				0.05, hh-rr + (rr-dr2_frame-0.04) * sin(acs(0.05/(rr-dr2_frame-0.04))), 1,
				0, m2y, 901,
				a/4-0.04-0.05, hh-rr + (rr-dr2_frame-0.04) * sin(acs((a/4-0.04-0.05)/(rr-dr2_frame-0.04))), 3001,
				a/4-0.04-0.05, 0.09, 1

			body -1
			addz 0.05
		next jj
		del 2
	endif

	if iLoD3D = SYMBS_3D_M_1 then del 1
else
	addz 0.02
		poly_ nsp/3+12, 			!!OK
			get(nsp),

			-0.05, 0.09, mask15,
			-0.05, hh-rr + (rr-dr2_frame-0.04) * sin(acs(0.05/(rr-dr2_frame-0.04))), mask79,
			0, m2y, 900+mask79,
			-a/4+0.04+0.05, hh-rr + (rr-dr2_frame-0.04) * sin(acs((a/4-0.04-0.05)/(rr-dr2_frame-0.04))), 3000+mask15,
			-a/4+0.04+0.05, 0.09, mask15,
			-0.05, 0.09, -1,

			0.05, 0.09, 15,
			0.05, hh-rr + (rr-dr2_frame-0.04) * sin(acs(0.05/(rr-dr2_frame-0.04))), 79,
			0, m2y, 979,
			a/4-0.04-0.05, hh-rr + (rr-dr2_frame-0.04) * sin(acs((a/4-0.04-0.05)/(rr-dr2_frame-0.04))), 3015,
			a/4-0.04-0.05, 0.09, 15,
			-0.05, 0.09, -1

	! --- Glass
		material gs_glass_mat
		body -1

		poly_ 6,
			-0.05, 0.09, 1,
			-0.05, hh-rr + (rr-dr2_frame-0.04) * sin(acs(0.05/(rr-dr2_frame-0.04))), 1,
			0, m2y, 901,
			-a/4+0.04+0.05, hh-rr + (rr-dr2_frame-0.04) * sin(acs((a/4-0.04-0.05)/(rr-dr2_frame-0.04))), 3001,
			-a/4+0.04+0.05, 0.09, 1,
			-0.05, 0.09, -1

		poly_ 6,
			0.05, 0.09, 1,
			0.05, hh-rr + (rr-dr2_frame-0.04) * sin(acs(0.05/(rr-dr2_frame-0.04))), 1,
			0, m2y, 901,
			a/4-0.04-0.05, hh-rr + (rr-dr2_frame-0.04) * sin(acs((a/4-0.04-0.05)/(rr-dr2_frame-0.04))), 3001,
			a/4-0.04-0.05, 0.09, 1,
			-0.05, 0.09, -1

		body -1
	del 1
endif

cutend

!!!**** Rahmen

if iLoD3D = SYMBS_3D_D_1 | iLoD3D = SYMBS_3D_D_2 then
	!!!**** Shleife fur 2 Seiten

	for fg = 1 to 2

		addz -0.05

		material gs_frame_mat

		prism_ 12, 0.05,	!!OK
			-0.01, 0.05, 15,
			-0.01, hh-rr + (rr-dr2_frame) * sin(acs(0.01/(rr-dr2_frame))), 79,
			0, m2y, 900,
			-a/4+0.05, hh-rr + (rr-dr2_frame) * sin(acs((a/4-0.05)/(rr-dr2_frame))), 3015,
			-a/4+0.05, 0.05, 15,
			-0.01, 0.05, -1,

			-0.08, 0.12, 15,
			-0.08, hh-rr + (rr-dr2_frame-0.07) * sin(acs(0.08/(rr-dr2_frame-0.07))), 79,
			0, m2y, 900,
			-a/4+0.07+0.05, hh-rr + (rr-dr2_frame-0.07) * sin(acs((a/4-0.07-0.05)/(rr-dr2_frame-0.07))), 3015,
			-a/4+0.07+0.05, 0.12, 15,
			-0.08, 0.12, -1

		!!!**** Glas

		addz 0.02

		material gs_glass_mat

		prism_ 6, 0.01,
			-0.08, 0.12, 15,
			-0.08, hh-rr + (rr-dr2_frame-0.07) * sin(acs(0.08/(rr-dr2_frame-0.07))), 79,
			0, m2y, 900,
			-a/4+0.07+0.05, hh-rr + (rr-dr2_frame-0.07) * sin(acs((a/4-0.07-0.05)/(rr-dr2_frame-0.07))), 3015,
			-a/4+0.07+0.05, 0.12, 15,
			-0.08, 0.12, -1

		del 2

		mulx -1

	next fg

	del 2
endif

del 3


!**** Dachziegel

if useroofmat then
	material ac_upper_mat
else
	material gs_upper_mat
endif

rotx 90

!****

!if lod3D_DW > 1 then		! 139211 javitasa utan

	wx = 270
	for ii = 1 to 12 step 1
		put -a/2+(rr-dr1)*cos(wx), m1y+(rr-dr1)*sin(wx), 1
		wx = wx+ww/12
	next ii

	wx = 90+ww-ww/12
	for ii = 1 to 23 step 1
		put (rr+dr1)*cos(wx), m2y+(rr+dr1)*sin(wx), 1
		wx = wx-ww/12
	next ii

	wx = 270-ww+ww/12
	for ii = 1 to 12 step 1
		put a/2+(rr-dr1)*cos(wx), m1y+(rr-dr1)*sin(wx), 1
		wx = wx+ww/12
	next ii


	dxx = 0.08-0.025*sin(ng)

	wx = 270
	for ii = 1 to 12 step 1
		put -a/2+(rr+dr3)*cos(wx), m1y+(rr+dr3)*sin(wx), dxx
		wx = wx+ww/12
	next ii

	wx = 90+ww-ww/12
	for ii = 1 to 23 step 1
		put (rr-dr3)*cos(wx), m2y+(rr-dr3)*sin(wx), dxx
		wx = wx-ww/12
	next ii

	wx = 270-ww+ww/12
	for ii = 1 to 12 step 1
		put a/2+(rr+dr3)*cos(wx), m1y+(rr+dr3)*sin(wx), dxx
		wx = wx+ww/12
	next ii


	ruled (nsp/6), 16+32,
		get (nsp)


	wx = 270
	for ii = 1 to 13 step 1
		put -a/2+(rr+dr3)*cos(wx), m1y+(rr+dr3)*sin(wx), 1
		wx = wx+ww/12
	next ii

	wx = 90+ww-ww/12
	for ii = 1 to 24 step 1
		put (rr-dr3)*cos(wx), m2y+(rr-dr3)*sin(wx), 1
		wx = wx-ww/12
	next ii

	wx = 270-ww+ww/12
	for ii = 1 to 12 step 1
		put a/2+(rr+dr3)*cos(wx), m1y+(rr+dr3)*sin(wx), 1
		wx = wx+ww/12
	next ii


	dx2 = 0.025*sin(ng)


	wx = 270
	for ii = 1 to 13 step 1
		put -a/2+(rr-0.015)*cos(wx), m1y+(rr-0.015)*sin(wx), dx2
		wx = wx+ww/12
	next ii

	wx = 90+ww-ww/12
	for ii = 1 to 24 step 1
		put (rr+0.015)*cos(wx), m2y+(rr+0.015)*sin(wx), dx2
		wx = wx-ww/12
	next ii

	wx = 270-ww+ww/12
	for ii = 1 to 12 step 1
		put a/2+(rr-0.015)*cos(wx), m1y+(rr-0.015)*sin(wx), dx2
		wx = wx+ww/12
	next ii



	addz dxx


	ruled (nsp/6), 16+32,
		get (nsp)


	del 1
!endif



!**** Deckflache

wx = 270
put -a/2-0.5, m1y+(rr-0.015)*sin(wx), 1

for ii = 1 to 13 step 1
	put -a/2+(rr-0.015)*cos(wx), m1y+(rr-0.015)*sin(wx), 1
	wx = wx+ww/12
next ii

wx = 90+ww-ww/12
for ii = 1 to 24 step 1
	put (rr+0.015)*cos(wx), m2y+(rr+0.015)*sin(wx), 1
	wx = wx-ww/12
next ii

wx = 270-ww+ww/12
for ii = 1 to 12 step 1
	put a/2+(rr-0.015)*cos(wx), m1y+(rr-0.015)*sin(wx), 1
	wx = wx+ww/12
next ii

put a/2+0.5, m1y+(rr-0.015)*sin(wx), 1

127:

put -a/2-0.5, yy,xx

wx = 270
for ii = 1 to 13 step 1
	put -a/2+(rr)*cos(wx),
yy,xx
	wx = wx+ww/12
next ii

wx = 90+ww-ww/12
for ii = 1 to 24 step 1
	put (rr)*cos(wx),
yy,xx
	wx = wx-ww/12
next ii

wx = 270-ww+ww/12
for ii = 1 to 12 step 1
	put a/2+(rr)*cos(wx),
yy,xx
	wx = wx+ww/12
next ii

put a/2+0.5,yy,xx




addz 0.08

! Cutting/hiding contour lines of the dormer
rotx -90
cutpolya 4, 1, 0,
	-a/2-1,	0,	8,
	-a/2,	0,	8,
	-a/2,	yy+0.08+1,	8,
	-a/2-1,	yy+0.08+1,	8
cutpolya 4, 1, 0,
	a/2+1,	0,	8,
	a/2,	0,	8,
	a/2,	yy+0.08+1,	8,
	a/2+1,	yy+0.08+1,	8
del 1


if iLoD3D > SYMBS_3D_S_1 then
	ruled (nsp/6), 16,
		get (nsp)
else
	addy 0.0002
	ruled (nsp/6), 16,
		use (nsp)
	del 1
	if useroofmat then
		material ac_lower_mat
	else
		material gs_lower_mat
	endif
	ruled (nsp/6), 16,
		get (nsp)
endif


rotx ac_roofang

alpha = 2 * (ac_roofang - 45)

base
vert 0, 0, 0
vert 1, 0, 0
vert 0, 0, 1
vert 0, cos(alpha), -sin(alpha)
coor 1, -1, -2, -3, -4
body -1

cutend
cutend

del 2



!**** Innenputz

!if lod3D_DW > 1 then		! 139211 javitas utan

	ysxx = hh-rr + (rr-dr2_frame+0.01) * sin(acs((a/4+0.01)/(rr-dr2_frame+0.01)))

	iP_gap = 0.002

	wx = 90+ww
	for ii = 1 to 25 step 1
		put (rr-dr1-iP_gap)*cos(wx), m2y+(rr-dr1-iP_gap)*sin(wx), 1
		wx = wx-ww/12
	next ii


	addz -0.05
	addy -ac_roofthk/cos(ac_roofang)+0.05*tan(ac_roofang)
	rotx -((90-ac_roofang)+180)
	cutplane
	del 2


	mulz -1

	if useroofmat then
		material ac_lower_mat
	else
		material gs_lower_mat
	endif

	base
	extrude nsp/3, 0, 10*tan(ng), 10, 16+32,
			get(nsp)
	rotx 90-ac_roofang
	vert 0, 0, 0
	vert 1, 0, 0
	vert 0, 0, 1
	vert 0, 1, 0
	coor 2, -1, -2, -3, -4
	body 1

	del 1

	if useroofmat then
		material ac_lower_mat
	else
		material gs_innside_mat
	endif

	wx = 90+ww

	roty 90

	for ij = 1 to 2
		addz -a/4+iP_gap

		base

		poly_ 6,
			0.05, -1, 1,
			0.05, 0, 1,
			0, 0, 1,
			0, m2y+(rr-dr1-iP_gap)*sin(wx), 1,
			-10, m2y+(rr-dr1-iP_gap)*sin(wx)+10*tan(ng), 1,
			-10, 10*tan(ng), 1
		rotz -ac_roofang
		vert 0, 0, 0
		vert 0, 0, 1
		vert 0, 1, 0
		vert 1, 0, 0
		coor 2, -1, -2, -3, -4
		body 1

		del 1

		del 1
		mulz -1
	next ij
	del 2
	del 1

	del 1

	cutend

!endif

end


! ==============================================================================
! Line - Line intersection
! ------------------------------------------------------------------------------
! Input variables:
!	EPS:				epsylon
!	x11,y11, x12,y12	line #1
!	x21,y21, x22,y22	line #2
!
! Returned variables:
!	state:				0 = no intersection point
!						1 = valid intersection point
!	cx, cy:				intersection point
! ==============================================================================

100:
	lliDiv = (x11-x12) * (y21-y22) - (y11-y12) * (x21-x22)

	if abs(lliDiv) > EPS then
		! Intersection

		temp1 = x11 * y12 - y11 * x12
		temp2 = x21 * y22 - y21 * x22

		tempx = temp1 * (x21-x22) - (x11-x12) * temp2
		tempy = temp1 * (y21-y22) - (y11-y12) * temp2

		state = 1
		cx = (tempx / lliDiv)
		cy = (tempy / lliDiv)
	else
		! No Intersection
		state = 0
		cx = 0
		cy = 0
	endif
return
