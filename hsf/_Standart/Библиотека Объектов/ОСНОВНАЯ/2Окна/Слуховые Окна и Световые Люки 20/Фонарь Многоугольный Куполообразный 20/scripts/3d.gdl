

! =============================================================================
! GS Skylight Functions
! =============================================================================

call "GS Skylight Functions",
	parameters all	bEnableLining			= 0,
					bEnableEdgeTypesUpper	= bEnableEdgeTypesUpper,
					bEnableEdgeTypesLower	= bEnableEdgeTypesLower,
	returned_parameters	iLoD3D,
						lod3D_Casing,
						bOplines3d, opLineType3dIn, opLineType3dOut, gs_opline_style_m, gs_opLinePen


if ac_edge_lower_type = 0 then alphaL = ac_roofang
if ac_edge_lower_type = 1 then alphaL = 0
if ac_edge_lower_type = 2 then alphaL = -90 + ac_roofang
if ac_edge_lower_type = 3 then alphaL = 90 - ac_edge_lower_angle

if ac_edge_upper_type = 0 then alphaU = ac_roofang
if ac_edge_upper_type = 1 then alphaU = 0
if ac_edge_upper_type = 2 then alphaU = 90 - ac_roofang
if ac_edge_upper_type = 3 then alphaU = -90 + ac_edge_upper_angle

if abs(ac_roofang) > EPS then
	top_oversize = ac_roofthk * tan(alphaU)
	bottom_oversize = ac_roofthk * tan(alphaL)
else
	top_oversize = 0
	bottom_oversize = 0
endif

! ==============================================================================

rotx ac_roofang

! ==============================================================================
! Wallhole
! ==============================================================================

bSectionElevationContext = (GLOB_VIEW_TYPE = 4) | (GLOB_VIEW_TYPE = 5) | (GLOB_PREVIEW_MODE = 2)
ShowUpContLines = 1	! not(bSectionElevationContext)

if SHELLBASE_VIEW_PEN > 0 then
	pen SHELLBASE_VIEW_PEN
else
	pen 1
endif

angle=270
for i=1 to gs_edge_num
	put gs_radius*cos(angle),gs_radius*sin(angle), 31
	angle = i*360/gs_edge_num-90
next i

addy b/2-(b/2-gs_radius*cos(alfa))
rotz alfa

if SHELLBASE_MAT_OPPOSITE > 0 then
	material SHELLBASE_MAT_OPPOSITE
else
	material 1
endif

unID = 200
if AC_Custom_3D_Hole then
	hotspot	0, 0,  0,						unID, gs_hole_outside_depth, 1+128 : unID=unID+1
	hotspot	0, 0, -1,						unID, gs_hole_outside_depth, 3     : unID=unID+1
	hotspot	0, 0,  gs_hole_outside_depth,	unID, gs_hole_outside_depth, 2     : unID=unID+1

	if (GLOB_VIEW_TYPE = 3 & GLOB_FEEDBACK_MODE = 1) then
		model wire
		prism_ nsp/3, gs_hole_outside_depth,
			use(nsp)
		model solid
	endif
	wallniche nsp/3, 1, 2,
		0,0,1,	gs_hole_outside_depth,
		get(nsp)
else
	wallniche nsp/3, 1, 2+16,
		0,0,-1,	0,
		get(nsp)
endif


angle=270
for i=1 to gs_edge_num
	put gs_radius*cos(angle),gs_radius*sin(angle), 15 + 16 * ShowUpContLines
	angle = i*360/gs_edge_num-90
next i

if SHELLBASE_MAT_REFERENCE > 0 then
	material SHELLBASE_MAT_REFERENCE
else
	material 1
endif

if AC_Custom_3D_Hole then
	hotspot	0, 0,  0,						unID, gs_hole_inside_depth, 1+128 : unID=unID+1
	hotspot	0, 0, 1,						unID, gs_hole_inside_depth, 3     : unID=unID+1
	hotspot	0, 0,  -gs_hole_inside_depth,	unID, gs_hole_inside_depth, 2     : unID=unID+1

	mulz -1
	if (GLOB_VIEW_TYPE = 3 & GLOB_FEEDBACK_MODE = 1) then
		model wire
		prism_ nsp/3, gs_hole_inside_depth,
			use(nsp)
		model solid
	endif
	wallniche nsp/3, 1, 2,
		0,0,1,	gs_hole_inside_depth,
		get(nsp)
	del 1
else
	wallniche nsp/3, 1, 2+16,
		0,0,1,	0,
		get(nsp)
endif

! ==============================================================================
! Lining
! ==============================================================================

pen gs_cont_pen

if lod3D_Casing = 1 & gs_egde_cover then

	material gs_edge_mat
	sect_fill gs_edge_cover_fill_type, gs_edge_cover_fill_pen_bg, gs_edge_cover_fill_pen_fg, SYMB_SECT_PEN

	addz -ac_roofthk
	angle=270
	for i=1 to gs_edge_num
		put gs_radius*cos(angle),gs_radius*sin(angle), 15
		angle = i*360/gs_edge_num-90
	next i
	put gs_radius*cos(270),gs_radius*sin(270), -1

	angle=270
	for i=1 to gs_edge_num
		put (gs_radius-gs_edge_cover_thk)*cos(angle),(gs_radius-gs_edge_cover_thk)*sin(angle), 15
		angle = i*360/gs_edge_num-90
	next i
	put (gs_radius-gs_edge_cover_thk)*cos(270),(gs_radius-gs_edge_cover_thk)*sin(270), -1

	prism_ nsp/3, ac_roofthk,
		get(nsp)

	del 1
endif

del 2


! ==============================================================================
! Frame and Glass
! ==============================================================================

addy b/2-(b/2-gs_radius*cos(alfa))
rotz alfa

unID=1
angle=270
if iLoD3D > SYMBS_3D_OFF then
	for i=1 to gs_edge_num
		hotspot gs_radius*cos(angle),gs_radius*sin(angle),0,unID,ac_curb_height,1+128 : unID=unID+1
		hotspot gs_radius*cos(angle),gs_radius*sin(angle),-1,unID,ac_curb_height,3 : unID=unID+1
		hotspot gs_radius*cos(angle),gs_radius*sin(angle),ac_curb_height,unID,ac_curb_height,2 : unID=unID+1
		angle=i*360/gs_edge_num-90
	next i

	hotspot 0,0,ac_curb_height+gs_frame_thk,unID,gs_dome_height,1+128 : unID=unID+1
	hotspot 0,0,ac_curb_height+gs_frame_thk-1,unID,gs_dome_height,3 : unID=unID+1
	hotspot 0,0,ac_curb_height+gs_frame_thk+gs_dome_height,unID,gs_dome_height,2 : unID=unID+1
else
	for i=1 to gs_edge_num
		hotspot gs_radius*cos(angle),gs_radius*sin(angle),0,unID: unID=unID+1
		angle=i*360/gs_edge_num-90
	next i
endif

if iLoD3D = SYMBS_3D_OFF then							end
if iLoD3D = SYMBS_3D_S_1 then							gosub "singlePlane"
if iLoD3D = SYMBS_3D_S_2 then							gosub "windowPoligons"
if iLoD3D = SYMBS_3D_M_1 then							gosub "midDetail"
if iLoD3D = SYMBS_3D_D_1 | iLoD3D = SYMBS_3D_D_2 then	gosub "fullDetail"

del 3

end


! ==============================================================================
! Subroutine
! ==============================================================================

"fullDetail":

	! --- Curb

	material gs_curb_mat
	prism_  8, ac_curb_height,
			0, -gs_radius, 15,
			0, 0, 915,
			gs_radius, 360-0.001, 4015,
			0, -gs_radius, -1,
			0, -gs_radius+gs_curb_thk*t, 15,
			0, 0, 915,
			gs_radius-gs_curb_thk*t, 360-0.001, 4015,
			0, -gs_radius+gs_curb_thk*t, -1

	addz ac_curb_height

	! --- Frame

	material gs_frame_mat
	prism_  8, gs_frame_thk,
			0, -gs_radius-gs_frame_thk*t, 11,
			0, 0, 911,
			gs_radius+gs_frame_thk*t, 360-0.001, 4015,
			0, -gs_radius-gs_frame_thk*t, -1,
			0, -gs_radius+gs_frame_thk*t*2, 15,
			0, 0, 915,
			gs_radius-gs_frame_thk*t*2, 360-0.001, 4015,
			0, -gs_radius+gs_frame_thk*t*2, -1

	addz gs_frame_thk
	prism_  8, gs_frame_thk,
			0, -gs_radius-gs_frame_thk*t, 14,
			0, 0, 914,
			gs_radius+gs_frame_thk*t, 360-0.001, 4015,
			0, -gs_radius-gs_frame_thk*t, -1,
			0, -gs_radius, 15,
			0, 0, 915,
			gs_radius, 360-0.001, 4015,
			0, -gs_radius, -1
	body -1

	! --- Glass

	body -1
	material gs_glass_mat

	angle=270
	for i=1 to gs_edge_num
		put gs_radius*cos(angle), gs_radius*sin(angle), 0
		angle=i*360/gs_edge_num-90
	next i

	pyramid nsp/3, gs_dome_height, 4+16,
			get(nsp)
	del 2

	body -1
return

"midDetail":

	! --- Curb

	material gs_curb_mat
	prism_  8, ac_curb_height+gs_frame_thk,
			0, -gs_radius, 15,
			0, 0, 915,
			gs_radius, 360-0.001, 4015,
			0, -gs_radius, -1,
			0, -gs_radius+gs_curb_thk*t, 15,
			0, 0, 915,
			gs_radius-gs_curb_thk*t, 360-0.001, 4015,
			0, -gs_radius+gs_curb_thk*t, -1
	body -1

	addz ac_curb_height+gs_frame_thk

	! --- Glass

	body -1
	material gs_glass_mat

	angle=270
	for i=1 to gs_edge_num
		put gs_radius*cos(angle), gs_radius*sin(angle), 0
		angle=i*360/gs_edge_num-90
	next i

	pyramid nsp/3, gs_dome_height, 4+16,
			get(nsp)
	del 1

	body -1
return

"windowPoligons":

	! --- Curb

	material gs_curb_mat
	extrude 4, 0, 0, ac_curb_height+gs_frame_thk, 16+32,
			0, -gs_radius, 0,
			0, 0, 900,
			gs_radius, 360-0.001, 4000,
			0, -gs_radius, -1
	body -1

	addz ac_curb_height+gs_frame_thk

	! --- Glass

	body -1
	material gs_glass_mat

	angle=270
	for i=1 to gs_edge_num
		put gs_radius*cos(angle), gs_radius*sin(angle), 0
		angle=i*360/gs_edge_num-90
	next i

	pyramid nsp/3, gs_dome_height, 4+16,
			get(nsp)
	del 1

	body -1
return

"singlePlane":

	! --- Glass

	body -1
	material gs_glass_mat

	angle=270
	for i=1 to gs_edge_num
		put gs_radius*cos(angle), gs_radius*sin(angle), 0
		angle=i*360/gs_edge_num-90
	next i

	pyramid nsp/3, ac_curb_height+gs_frame_thk+gs_dome_height, 4+16,
			get(nsp)
	body -1
return

