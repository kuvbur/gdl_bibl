

! =============================================================================
! GS Skylight Functions
! =============================================================================

if (GLOB_VIEW_TYPE = 2) then
	if ac_roofang < 180 then
		if ac_edge_upper_type = 1 | ac_edge_upper_type = 2 | (ac_edge_upper_type = 3 & AC_edge_upper_angle < 90+ac_roofang) then
			ac_edge_upper_type	= 0
		endif
		if ac_edge_lower_type = 3 & AC_edge_lower_angle < 90-ac_roofang then
			ac_edge_lower_type	= 0
		endif
	else
		if ac_edge_lower_type = 1 | ac_edge_lower_type = 2 | (ac_edge_lower_type = 3 & AC_edge_lower_angle < 90-(ac_roofang-360)) then
			ac_edge_lower_type	= 0
		endif
		if ac_edge_upper_type = 3 & AC_edge_upper_angle < 90+(ac_roofang-360) then
			ac_edge_upper_type	= 0
		endif
	endif
endif

call "GS Skylight Functions",
	parameters all	bEnableLining			= bEnableLining,
					bEnableEdgeTypesUpper	= bEnableEdgeTypesUpper,
					bEnableEdgeTypesLower	= bEnableEdgeTypesLower,
					bCall3DFrom2DScript		= bCall3DFrom2DScript,
	returned_parameters	iLoD3D,
						lod3D_Casing,
						bOplines3d, opLineType3dIn, opLineType3dOut, gs_opline_style_m, gs_opLinePen


pen gs_cont_pen
material gs_frame_mat

rotx ac_roofang

! ==============================================================================
! Wallhole
! ==============================================================================

call "SkylightRect_RoofCutting_macro" parameters A = A, B = B,
	AC_edge_upper_type			= AC_edge_upper_type,
	AC_edge_upper_angle			= AC_edge_upper_angle,
	AC_edge_lower_type			= AC_edge_lower_type,
	AC_edge_lower_angle			= AC_edge_lower_angle,
	AC_Custom_3D_Hole			= AC_Custom_3D_Hole,
	gs_hole_edge_upper_depth	= gs_hole_edge_upper_depth,
	gs_hole_edge_lower_depth	= gs_hole_edge_lower_depth,
	gs_hole_outside_depth		= gs_hole_outside_depth,
	ac_upper_mat				= ac_upper_mat,
	gs_lower_bott_mat			= ac_lower_mat,
	gs_lower_top_mat			= ac_lower_mat,
	ac_roofang					= ac_roofang,
	bUpperCut					= 1,
	ShowUpContLines				= 1



hotspot  0,		0,	0,		1
hotspot  0,		B,	0,		2
hotspot -A/2,	0,	0,		3
hotspot  A/2,	0,	0,		4
hotspot -A/2,	B,	0,		5
hotspot  A/2,	B,	0,		6
hotspot  0,		0,	ZZYZX,	7
hotspot  0,		B,	ZZYZX,	8

if iLoD3D = SYMBS_3D_OFF then							end
if iLoD3D = SYMBS_3D_S_1 then							gosub "singlePlane"
if iLoD3D = SYMBS_3D_S_2 then							gosub "windowPoligons"
if iLoD3D = SYMBS_3D_M_1 then							gosub "windowPoligons"
if iLoD3D = SYMBS_3D_D_1 | iLoD3D = SYMBS_3D_D_2 then	gosub "fullDetail"

end


! ==============================================================================
! Subroutine
! ==============================================================================

"fullDetail":

	material gs_frame_mat

	if abs(frame_width) > EPS then
		prism_ 10,frame_thk,
			 a/2,	0,	15,
			 a/2,	b,	15,
			-a/2,	b,	15,
			-a/2,	0,	15,
			 a/2,	0,	-1,
			 a/2-frame_width,	frame_width,	15,
			 a/2-frame_width,	b-frame_width,	15,
			-a/2+frame_width,	b-frame_width,	15,
			-a/2+frame_width,	frame_width,	15,
			 a/2-frame_width,	frame_width,	-1
	endif
	body -1

	z=(b-frame_width*(panes_num+1))/panes_num

	if segment_num > 1 then
		resol segment_num*2

		rotz 90
		addz frame_thk

		if abs(frame_width) > EPS then
			for i=1 to panes_num+1
				addx -(-frame_width-z)*(i-1)
				mulz (zzyzx-frame_thk)*2/a
				revolve 5,180,63+64*show_glass,
					0,			a/2,			0,
					frame_width,a/2,			0,
					frame_width,a/2-frame_width,0,
					0,			a/2-frame_width,0,
					0,			a/2,			0

				body -1
				del 2
			next i
		endif
	else
		if abs(frame_width) > EPS | abs(frame_thk) > EPS then
			for i=1 to panes_num-1
				addx -a/2+frame_width
				addy (frame_width+z)*(i)
				block a-2*frame_width,frame_width,frame_thk
				body -1
				del 2
			next i
		endif
	endif

	body 1

	if gs_glass_mat > 0 then

		material gs_glass_mat

		if segment_num > 1 then
			for i=1 to panes_num
				addx frame_width
				addx -(-frame_width-z)*(i-1)
				mulz (zzyzx-frame_thk)*2/a
				revolve 5,180,63+64*show_glass,
						0,	a/2-(frame_width-0.005)/2,	0,
						z,	a/2-(frame_width-0.005)/2,	0,
						z,	a/2-frame_width,			0,
						0,	a/2-frame_width,			0,
						0,	a/2-(frame_width-0.005)/2,	0
				body -1
				del 3
			next i
			del 2

			rotx 90
			addy frame_thk
			addz (-frame_width-0.005)/2
			muly (zzyzx-frame_thk)*2/a
			prism_ 3,0.005,
					-a/2+frame_width,	0,		15,
					0,					0,		900,
					0,					-180,	4079
			del 1
			addz -b+frame_width
			muly (zzyzx-frame_thk)*2/a
			body -1
			prism_ 3,0.005,
					-a/2+frame_width,	0,		15,
					0,					0,		900,
					0,					-180,	4079
			body -1
			del 5
		else
			addz (frame_thk-0.005)/2
			for i=1 to panes_num
				addy frame_width
				addx -a/2+frame_width
				addy (frame_width+z)*(i-1)
				block a-2*frame_width,z,0.005
				body -1
				del 3
			next i
		endif
	endif
return

"windowPoligons":

	! --- Frame

	material gs_frame_mat
	extrude 5, 0, 0, frame_thk, 16+32,
			a/2,	0,	0,
			a/2,	b,	0,
			-a/2,	b,	0,
			-a/2,	0,	0,
			a/2,	0,	-1

	z=(b-frame_width*(panes_num+1))/panes_num
	resol segment_num*2

	rotz 90
	addz frame_thk

	for i=1 to panes_num+1
		addx -(-frame_width-z)*(i-1)
		mulz (zzyzx-frame_thk)*2/a
		if i = 1 then
			revolve 3,180,16+32+64*show_glass,
				0,			a/2-frame_width,0,
				0,			a/2,			0,
				frame_width,a/2,			0
		else
			if i = panes_num+1 then
				revolve 3,180,16+32+64*show_glass,
					0,			a/2,			0,
					frame_width,a/2,			0,
					frame_width,a/2-frame_width,0
			else
				revolve 2,180,16+32+64*show_glass,
					0,			a/2,			0,
					frame_width,a/2,			0
			endif
		endif

		body -1
		del 2
	next i
	body -1


	! --- Glass

	if gs_glass_mat > 0 then
		material gs_glass_mat

		for i=1 to panes_num
			addx frame_width
			addx -(-frame_width-z)*(i-1)
			mulz (zzyzx-frame_thk)*2/a
			revolve 2,180,16+32+64*show_glass,
				0,			a/2,			0,
				z,			a/2,			0
			body -1
			del 3
		next i
		del 2

		rotx 90
		addy frame_thk
		muly (zzyzx-frame_thk)*2/a
		poly_ 3,
				-a/2+frame_width,	0,		1,
				0,					0,		901,
				0,					-180,	4001
		body -1
		del 1

		addz -b
		muly (zzyzx-frame_thk)*2/a
		poly_ 3,
				-a/2+frame_width,	0,		1,
				0,					0,		901,
				0,					-180,	4001
		body -1
		del 4
	endif
return

"singlePlane":
	! --- Glass

	if gs_glass_mat > 0 then
		material gs_glass_mat
		body -1

		resol segment_num*2


		rotz 90
		mulz zzyzx*2/a
		revolve 2,180,1+2+16+32+64*show_glass,
			0,			a/2,			0,
			b,			a/2,			0
		del 2

		body -1
	endif
return
