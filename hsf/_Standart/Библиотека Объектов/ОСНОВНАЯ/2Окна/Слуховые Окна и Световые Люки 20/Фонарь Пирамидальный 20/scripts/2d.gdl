

! =============================================================================
! GS Skylight Functions
! =============================================================================

call "GS Skylight Functions",
	parameters all	bEnableLining			= bEnableLining,
					bEnableEdgeTypesUpper	= bEnableEdgeTypesUpper,
					bEnableEdgeTypesLower	= bEnableEdgeTypesLower,
	returned_parameters	iLoD2D,
		gs_opLinePen, gs_openedSashPen, gs_iSwingType, gs_swingLineType, gs_opline_style_m

if iLoD2D = SYMBS_OFF | iLoD2D = SYMBS_S_1 then end


! ==========================================================================
! Symbolic 2D
! ==========================================================================

pen gs_cont_pen
fill gs_fill_type
poly2_b 4, 1+2+4+64, gs_fill_pen, gs_back_pen,
	-a/2-frame_thk, -frame_thk-(ac_curb_height+2*frame_thk)*sin(ac_roofang), 1,
	a/2+frame_thk, -frame_thk-(ac_curb_height+2*frame_thk)*sin(ac_roofang), 1,
	a/2+frame_thk, b*cos(ac_roofang), 1,
	-a/2-frame_thk, b*cos(ac_roofang), 1

if iLoD2D = SYMBS_D_1 | iLoD2D = SYMBS_D_2 then
	project2{3} 3, 270, 2 + 32 + 16, 4 + 8, parameters bCall3DFrom2DScript = 1
endif

unID=1
hotspot2 0,0,unID : unID=unID+1
hotspot2 0,b*cos(ac_roofang),unID : unID=unID+1
hotspot2 -a/2,0,unID : unID=unID+1
hotspot2 a/2,0,unID : unID=unID+1
hotspot2 -a/2,b*cos(ac_roofang),unID : unID=unID+1
hotspot2 a/2,b*cos(ac_roofang),unID : unID=unID+1
