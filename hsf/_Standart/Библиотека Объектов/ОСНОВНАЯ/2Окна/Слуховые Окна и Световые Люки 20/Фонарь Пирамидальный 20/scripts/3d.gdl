

! =============================================================================
! GS Skylight Functions
! =============================================================================

if (GLOB_VIEW_TYPE = 2) then
	if ac_roofang < 180 then
		if ac_edge_upper_type = 1 | ac_edge_upper_type = 2 | (ac_edge_upper_type = 3 & AC_edge_upper_angle < 90+ac_roofang) then
			ac_edge_upper_type	= 0
		endif
		if ac_edge_lower_type = 3 & AC_edge_lower_angle < 90-ac_roofang then
			ac_edge_lower_type	= 0
		endif
	else
		if ac_edge_lower_type = 1 | ac_edge_lower_type = 2 | (ac_edge_lower_type = 3 & AC_edge_lower_angle < 90-(ac_roofang-360)) then
			ac_edge_lower_type	= 0
		endif
		if ac_edge_upper_type = 3 & AC_edge_upper_angle < 90+(ac_roofang-360) then
			ac_edge_upper_type	= 0
		endif
	endif
endif

call "GS Skylight Functions",
	parameters all	bEnableLining			= bEnableLining,
					bEnableEdgeTypesUpper	= bEnableEdgeTypesUpper,
					bEnableEdgeTypesLower	= bEnableEdgeTypesLower,
					bCall3DFrom2DScript		= bCall3DFrom2DScript,
	returned_parameters	iLoD3D,
						lod3D_Casing,
						bOplines3d, opLineType3dIn, opLineType3dOut, gs_opline_style_m, gs_opLinePen


pen gs_cont_pen

rotx ac_roofang

! ==============================================================================
! Wallhole
! ==============================================================================

call "SkylightRect_RoofCutting_macro" parameters A = A, B = B,
	AC_edge_upper_type			= AC_edge_upper_type,
	AC_edge_upper_angle			= AC_edge_upper_angle,
	AC_edge_lower_type			= AC_edge_lower_type,
	AC_edge_lower_angle			= AC_edge_lower_angle,
	AC_Custom_3D_Hole			= AC_Custom_3D_Hole,
	gs_hole_edge_upper_depth	= gs_hole_edge_upper_depth,
	gs_hole_edge_lower_depth	= gs_hole_edge_lower_depth,
	gs_hole_outside_depth		= gs_hole_outside_depth,
	ac_upper_mat				= ac_upper_mat,
	gs_lower_bott_mat			= ac_lower_mat,
	gs_lower_top_mat			= ac_lower_mat,
	ac_roofang					= ac_roofang,
	bUpperCut					= 1,
	ShowUpContLines				= 1


unID=1
if iLoD3D <> SYMBS_3D_S_1 then
	! --- Curb Height Editing

	hotspot a/2,0,0,unID,ac_curb_height,1+128 : unID=unID+1
	hotspot a/2,0,-1,unID,ac_curb_height,3 : unID=unID+1
	hotspot a/2,0,ac_curb_height,unID,ac_curb_height,2 : unID=unID+1

	hotspot -a/2,0,0,unID,ac_curb_height,1+128 : unID=unID+1
	hotspot -a/2,0,-1,unID,ac_curb_height,3 : unID=unID+1
	hotspot -a/2,0,ac_curb_height,unID,ac_curb_height,2 : unID=unID+1

	hotspot a/2,b,0,unID,ac_curb_height,1+128 : unID=unID+1
	hotspot a/2,b,-1,unID,ac_curb_height,3 : unID=unID+1
	hotspot a/2,b,ac_curb_height,unID,ac_curb_height,2 : unID=unID+1

	hotspot -a/2,b,0,unID,ac_curb_height,1+128 : unID=unID+1
	hotspot -a/2,b,-1,unID,ac_curb_height,3 : unID=unID+1
	hotspot -a/2,b,ac_curb_height,unID,ac_curb_height,2 : unID=unID+1
endif

if iLoD3D > SYMBS_3D_OFF then
	addz ac_curb_height

	hotspot 0,a/2,0,unID,dome_height,1+128 : unID=unID+1
	hotspot 0,a/2,-1,unID,dome_height,3 : unID=unID+1
	hotspot 0,a/2,dome_height,unID,dome_height,2 : unID=unID+1

	hotspot 0,b-a/2,0,unID,dome_height,1+128 : unID=unID+1
	hotspot 0,b-a/2,-1,unID,dome_height,3 : unID=unID+1
	hotspot 0,b-a/2,dome_height,unID,dome_height,2 : unID=unID+1
endif

del 1

if iLoD3D = SYMBS_3D_OFF then							end
if iLoD3D = SYMBS_3D_S_1 then							gosub "singlePlane"
if iLoD3D = SYMBS_3D_S_2 then							gosub "windowPoligons"
if iLoD3D = SYMBS_3D_M_1 then							gosub "midDetail"
if iLoD3D = SYMBS_3D_D_1 | iLoD3D = SYMBS_3D_D_2 then	gosub "fullDetail"

end


! ==============================================================================
! Subroutine
! ==============================================================================

"fullDetail":

	! --- Curb

	material gs_curb_mat

	if abs(ac_curb_height) > EPS then
		if abs(curb_thk) > EPS then
			prism_  10, ac_curb_height,
				-a/2, 0, 15,
				 a/2, 0, 15,
				 a/2, b, 15,
				-a/2, b, 15,
				-a/2, 0, -1,
				-a/2+curb_thk, curb_thk, 15,
				 a/2-curb_thk, curb_thk, 15,
				 a/2-curb_thk, b-curb_thk, 15,
				-a/2+curb_thk, b-curb_thk, 15,
				-a/2+curb_thk, curb_thk, -1
		else
			extrude 4, 0,0, ac_curb_height, 4+16+32+128,
				-A/2, 0, 0,
				 A/2, 0, 0,
				 A/2, B, 0,
				-A/2, B, 0
		endif
	endif

	addz ac_curb_height

	! --- Frame

	material gs_frame_mat
	if (abs(frame_thk) > EPS) then
		prism_  10, frame_thk,
			-a/2-frame_thk, -frame_thk, 11,
			 a/2+frame_thk, -frame_thk, 11,
			 a/2+frame_thk, b+frame_thk, 11,
			-a/2-frame_thk, b+frame_thk, 11,
			-a/2-frame_thk, -frame_thk, -1,
			-a/2+2*frame_thk, 2*frame_thk, 15,
			 a/2-2*frame_thk, 2*frame_thk, 15,
			 a/2-2*frame_thk, b-2*frame_thk, 15,
			-a/2+2*frame_thk, b-2*frame_thk, 15,
			-a/2+2*frame_thk, 2*frame_thk, -1
		addz frame_thk
		prism_  10, frame_thk,
			-a/2-frame_thk, -frame_thk, 14,
			 a/2+frame_thk, -frame_thk, 14,
			 a/2+frame_thk, b+frame_thk, 14,
			-a/2-frame_thk, b+frame_thk, 14,
			-a/2-frame_thk, -frame_thk, -1,
			-a/2, 0, 15,
			 a/2, 0, 15,
			 a/2, b, 15,
			-a/2, b, 15,
			-a/2, 0, -1
		del 1
	endif
	addz frame_thk

	!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

	if b<a then
		add a/2, b/2, 0
		rotz 90
	endif


	for m=1 to 2
		roty 180
		cutplane
		del 1
		roty -90
		cutplane
		del 1
		addx aa/2
		rotz 45
		roty -90
		cutplane
		del 2
		addy bb
		rotz 45
		rotx -90
		cutplane
		del 4

		addx aa/2
		roty beta

		addy frame_thk/cos(alfa)
		rotz -alfa
		rotx 90
		cutplane
		del 3
		addy bb-frame_thk/cos(alfa)
		rotz alfa
		rotx -90
		cutplane
		del 3

		addz -4*frame_thk/5
		for j=1 to h+1
			addx -k/(h+1)
			for i=1 to v+1
				material gs_frame_mat
				if (abs(frame_thk) > EPS) then
					prism_  10, 3*frame_thk/5,
						0,0,0,
						k/(h+1), 0, 100,
						0, frame_thk/2, 113,
						frame_thk, frame_thk/2, 15,
						0, (bb/(v+1))-frame_thk, 115,
						(k/(h+1))-frame_thk, 0, 100,
						0, frame_thk/2, 100,
						-k/(h+1), 0, 100,
						0, -frame_thk/2, 115,
						0, frame_thk/2, 0
				endif
				addz 3*frame_thk/10
				material gs_glass_mat
				if not(bCall3DFrom2DScript) then
					prism_  4, 0,
							frame_thk, frame_thk/2, 15,
							0, (bb/(v+1))-frame_thk, 115,
							(k/(h+1))-frame_thk, 0, 115,
							k/(h+1), frame_thk/2, 15
				endif
				del 1
				addy bb/(v+1)
			next i

			del v+1
		next j

		del h+1

		cutend
		cutend
		del 1

		material gs_frame_mat
		if (abs(frame_thk) > EPS) then
			addz -frame_thk
			if bb>2*(aa/2-frame_thk*tan(alfa)+frame_thk/cos(alfa)) then
				prism_  8, frame_thk,
					0, 0, 15,
					0, frame_thk/cos(alfa), 15,
					-k+frame_thk, aa/2-frame_thk*tan(alfa)+frame_thk/cos(alfa), 15,
					-k+frame_thk, bb-aa/2+frame_thk*tan(alfa)-frame_thk/cos(alfa), 15,
					0, bb-frame_thk/cos(alfa), 15,
					0, bb, 7,
					-k, bb-aa/2, 7,
					-k, aa/2, 7
			else
				x=(aa/2+frame_thk/cos(alfa)-bb/2)*k/(aa/2)
				prism_  7, frame_thk,
					0, 0, 15,
					0, frame_thk/cos(alfa), 15,
					-k+x, bb/2, 15,
					0, bb-frame_thk/cos(alfa), 15,
					0, bb, 7,
					-k, bb-aa/2, 7,
					-k, aa/2, 7
			endif
			del 1
		endif

		del 2

		cutend
		cutend
		cutend
		cutend

		addy bb
		rotz 180

	next m
	del 4

	!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

	add -aa/2, aa/2, 0
	rotz -90

	for m=1 to 2
		roty 180
		cutplane
		del 1
		roty -90
		cutplane
		del 1
		addx aa/2
		rotz 45
		roty -90
		cutplane
		del 2
		addy aa
		rotz 45
		rotx -90
		cutplane
		del 4

		addx aa/2
		roty beta

		addy frame_thk/cos(alfa)
		rotz -alfa
		rotx 90
		cutplane
		del 3
		addy aa-frame_thk/cos(alfa)
		rotz alfa
		rotx -90
		cutplane
		del 3
		addx -k+frame_thk+frame_thk/1000
		roty -90
		cutplane
		del 2

		addz -4*frame_thk/5
		for j=1 to hh+1
			addx -k/(hh+1)
			for i=1 to vv+1
				material gs_frame_mat
				prism_  10, 3*frame_thk/5,
						0,0,0,
						k/(hh+1), 0, 100,
						0, frame_thk/2, 113,
						frame_thk, frame_thk/2, 15,
						0, (aa/(vv+1))-frame_thk, 115,
						(k/(hh+1))-frame_thk, 0, 100,
						0, frame_thk/2, 100,
						-k/(hh+1), 0, 100,
						0, -frame_thk/2, 115,
						0, frame_thk/2, 0
				addz 3*frame_thk/10
				material gs_glass_mat
				prism_  4, 0,
						frame_thk, frame_thk/2, 15,
						0, (aa/(vv+1))-frame_thk, 115,
						(k/(hh+1))-frame_thk, 0, 115,
						k/(hh+1), frame_thk/2, 15
				del 1
				addy aa/(vv+1)
			next i

			del vv+1
		next j

		del hh+1

		cutend
		cutend
		cutend
		del 1

		material gs_frame_mat
		addz -frame_thk
		x=(aa/2+frame_thk/cos(alfa)-aa/2)*k/(aa/2)
		prism_  6, frame_thk,
				0, 0, 15,
				0, frame_thk/cos(alfa), 15,
				-k+x, aa/2, 15,
				0, aa-frame_thk/cos(alfa), 15,
				0, aa, 7,
				-k, aa/2, 7

		del 1
		del 2

		cutend
		cutend
		cutend
		cutend

		add -(bb-aa), aa, 0
		rotz 180

	next m
	del 4

	del 2

	if b<a then
		del 2
	endif

	del 2
return

"midDetail":
	! --- Curb

	material gs_curb_mat

	prism_  10, ac_curb_height+frame_thk,
			-a/2, 0, 15,
			a/2, 0, 15,
			a/2, b, 15,
			-a/2, b, 15,
			-a/2, 0, -1,
			-a/2+curb_thk, curb_thk, 15,
			a/2-curb_thk, curb_thk, 15,
			a/2-curb_thk, b-curb_thk, 15,
			-a/2+curb_thk, b-curb_thk, 15,
			-a/2+curb_thk, curb_thk, -1

	addz ac_curb_height

	! --- Frame

	material gs_frame_mat
	addz frame_thk

	if b<a then
		add a/2, b/2, 0
		rotz 90
	endif


	for m=1 to 2
		roty 180
			cutplane
		del 1
		roty -90
			cutplane
		del 1
		addx aa/2
		rotz 45
		roty -90
			cutplane
		del 2
		addy bb
		rotz 45
		rotx -90
			cutplane
		del 4

		addx aa/2
		roty beta

		addy 0
		rotz -alfa
		rotx 90
			cutplane
		del 3
		addy bb
		rotz alfa
		rotx -90
			cutplane
		del 3
		addx -k
		roty -90
			cutplane
		del 2

		addz -4*frame_thk/5*0
		for j=1 to h+1
			addx -k/(h+1)
			for i=1 to v+1
				material gs_glass_mat
				if not(bCall3DFrom2DScript) then
					poly_  4,
							0, 0, 1,
							0, (bb/(v+1)), 101,
							(k/(h+1)), 0, 101,
							k/(h+1), 0, 1
				endif
				addy bb/(v+1)
			next i

			del v+1
		next j

		del h+1

		cutend
		cutend
		cutend
		del 1

		del 2

		cutend
		cutend
		cutend
		cutend

		addy bb
		rotz 180

	next m
	del 4

	!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

	add -aa/2, aa/2, 0
	rotz -90

	for m=1 to 2
		roty 180
			cutplane
		del 1
		roty -90
			cutplane
		del 1
		addx aa/2
		rotz 45
		roty -90
			cutplane
		del 2
		addy aa
		rotz 45
		rotx -90
			cutplane
		del 4

		addx aa/2
		roty beta

		addy 0
		rotz -alfa
		rotx 90
			cutplane
		del 3
		addy aa
		rotz alfa
		rotx -90
			cutplane
		del 3
		addx -k
		roty -90
			cutplane
		del 2

		for j=1 to hh+1
			addx -k/(hh+1)
			for i=1 to vv+1
				material gs_glass_mat
				poly_  4,
						0, 0, 1,
						0, (aa/(vv+1)), 101,
						(k/(hh+1)), 0, 101,
						k/(hh+1), 0, 1
				addy aa/(vv+1)
			next i

			del vv+1
		next j

		del hh

		cutend
		cutend
		cutend
		del 1

		del 2

		cutend
		cutend
		cutend
		cutend

		add -(bb-aa), aa, 0
		rotz 180

	next m
	del 4

	del 2

	if b<a then
		del 2
	endif

	del 2
return


"windowPoligons":

	! --- Curb

	material gs_curb_mat

	extrude 5, 0, 0, ac_curb_height+frame_thk, 16+32,
			-a/2, 0, 0,
			a/2, 0, 0,
			a/2, b, 0,
			-a/2, b, 0,
			-a/2, 0, -1

	addz ac_curb_height+frame_thk

	! --- Frame

	if b<a then
		add a/2, b/2, 0
		rotz 90
	endif

	for m=1 to 2
		roty 180
			cutplane
		del 1
		roty -90
			cutplane
		del 1
		addx aa/2
		rotz 45
		roty -90
			cutplane
		del 2
		addy bb
		rotz 45
		rotx -90
			cutplane
		del 4

		addx aa/2
		roty beta

		material gs_glass_mat
		if bb>2*(aa/2-frame_thk*tan(alfa)+frame_thk/cos(alfa)) then
			poly_  6,
					0, 0, 1,
					0, frame_thk/cos(alfa), 1,
					0, bb-frame_thk/cos(alfa), 1,
					0, bb, 1,
					-k, bb-aa/2, 1,
					-k, aa/2, 1
		else
			x=(aa/2+frame_thk/cos(alfa)-bb/2)*k/(aa/2)
			poly_  6,
					0, 0, 1,
					0, frame_thk/cos(alfa), 1,
					0, bb-frame_thk/cos(alfa), 1,
					0, bb, 1,
					-k, bb-aa/2, 1,
					-k, aa/2, 1
		endif

		del 2

		cutend
		cutend
		cutend
		cutend

		addy bb
		rotz 180

	next m
	del 4

	!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

	add -aa/2, aa/2, 0
	rotz -90

	for m=1 to 2
		roty 180
		cutplane
		del 1
		roty -90
		cutplane
		del 1
		addx aa/2
		rotz 45
		roty -90
		cutplane
		del 2
		addy aa
		rotz 45
		rotx -90
		cutplane
		del 4

		addx aa/2
		roty beta

		material gs_glass_mat
		x=(aa/2+frame_thk/cos(alfa)-aa/2)*k/(aa/2)
		poly_  5,
				0, 0, 1,
				0, frame_thk/cos(alfa), 1,
				0, aa-frame_thk/cos(alfa), 1,
				0, aa, 0,
				-k, aa/2, 0
		del 2

		cutend
		cutend
		cutend
		cutend

		add -(bb-aa), aa, 0
		rotz 180

	next m
	del 4

	if b<a then
		del 2
	endif
return


"singlePlane":
	beta=atn((dome_height+ac_curb_height+frame_thk)/(aa/2))
	k=aa/2/cos(beta)
	alfa=atn((aa/2)/k)

	! --- Frame

	material gs_frame_mat

	if b<a then
		add a/2, b/2, 0
		rotz 90
	endif

	for m=1 to 2
		roty 180
		cutplane
		del 1
		roty -90
		cutplane
		del 1
		addx aa/2
		rotz 45
		roty -90
		cutplane
		del 2
		addy bb
		rotz 45
		rotx -90
		cutplane
		del 4

		addx aa/2
		roty beta

		material gs_glass_mat
		if bb>2*(aa/2-frame_thk*tan(alfa)+frame_thk/cos(alfa)) then
			poly_  6,
					0, 0, 1,
					0, frame_thk/cos(alfa), 1,
					0, bb-frame_thk/cos(alfa), 1,
					0, bb, 1,
					-k, bb-aa/2, 1,
					-k, aa/2, 1
		else
			x=(aa/2+frame_thk/cos(alfa)-bb/2)*k/(aa/2)
			poly_  6,
					0, 0, 1,
					0, frame_thk/cos(alfa), 1,
					0, bb-frame_thk/cos(alfa), 1,
					0, bb, 1,
					-k, bb-aa/2, 1,
					-k, aa/2, 1
		endif

		del 2

		cutend
		cutend
		cutend
		cutend

		addy bb
		rotz 180

	next m
	del 4


	!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

	add -aa/2, aa/2, 0
	rotz -90

	for m=1 to 2
		roty 180
		cutplane
		del 1
		roty -90
		cutplane
		del 1
		addx aa/2
		rotz 45
		roty -90
		cutplane
		del 2
		addy aa
		rotz 45
		rotx -90
		cutplane
		del 4

		addx aa/2
		roty beta

		material gs_glass_mat
		x=(aa/2+frame_thk/cos(alfa)-aa/2)*k/(aa/2)
		poly_  5,
				0, 0, 1,
				0, frame_thk/cos(alfa), 1,
				0, aa-frame_thk/cos(alfa), 1,
				0, aa, 0,
				-k, aa/2, 0
		del 2

		cutend
		cutend
		cutend
		cutend

		add -(bb-aa), aa, 0
		rotz 180

	next m
	del 4

	del 2

	if b<a then
		del 2
	endif


return
