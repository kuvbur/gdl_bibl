
! =============================================================================
! GS Skylight Functions
! =============================================================================

if (GLOB_VIEW_TYPE = 2) then
	if ac_roofang < 180 then
		if ac_edge_upper_type = 1 | ac_edge_upper_type = 2 | (ac_edge_upper_type = 3 & AC_edge_upper_angle < 90+ac_roofang) then
			ac_edge_upper_type	= 0
		endif
		if ac_edge_lower_type = 3 & AC_edge_lower_angle < 90-ac_roofang then
			ac_edge_lower_type	= 0
		endif
	else
		if ac_edge_lower_type = 1 | ac_edge_lower_type = 2 | (ac_edge_lower_type = 3 & AC_edge_lower_angle < 90-(ac_roofang-360)) then
			ac_edge_lower_type	= 0
		endif
		if ac_edge_upper_type = 3 & AC_edge_upper_angle < 90+(ac_roofang-360) then
			ac_edge_upper_type	= 0
		endif
	endif
endif

call "GS Skylight Functions",
	parameters all	bEnableLining			= bEnableLining,
					bEnableEdgeTypesUpper	= bEnableEdgeTypesUpper,
					bEnableEdgeTypesLower	= bEnableEdgeTypesLower,
					bCall3DFrom2DScript		= bCall3DFrom2DScript,
	returned_parameters	iLoD3D,
						lod3D_Casing,
						bOplines3d, opLineType3dIn, opLineType3dOut, gs_opline_style_m, gs_opLinePen


pen gs_cont_pen

bb=b*cos(ac_roofang)
hh=tan(ac_roofang)*bb
hhh=abs(zzyzx-tan(ac_roofang)*bb)

if bb<=zzyzx then
	topang=atn(bb/hhh)
else
	topang=90+atn((hh-zzyzx)/bb)
endif

ff=(zzyzx-frame_width/tan(topang/2)-frame_width/cos(ac_roofang)-frame_width*tan(ac_roofang))/zzyzx

rotx ac_roofang

! ==============================================================================
! Wallhole
! ==============================================================================

call "SkylightRect_RoofCutting_macro" parameters A = A, B = B,
	AC_edge_upper_type			= AC_edge_upper_type,
	AC_edge_upper_angle			= AC_edge_upper_angle,
	AC_edge_lower_type			= AC_edge_lower_type,
	AC_edge_lower_angle			= AC_edge_lower_angle,
	AC_Custom_3D_Hole			= AC_Custom_3D_Hole,
	gs_hole_edge_upper_depth	= gs_hole_edge_upper_depth,
	gs_hole_edge_lower_depth	= gs_hole_edge_lower_depth,
	gs_hole_outside_depth		= gs_hole_outside_depth,
	ac_upper_mat				= ac_upper_mat,
	gs_lower_bott_mat			= ac_lower_mat,
	gs_lower_top_mat			= ac_lower_mat,
	ac_roofang					= ac_roofang,
	bUpperCut					= 1,
	ShowUpContLines				= 1

del 1


! ==============================================================================
! Hotspots
! ==============================================================================

![#COMPATIBILITY] - START
idxVerticalHotspots		= 1
idxHorizontalHotspots	= 7
idxHorizontalHotspotsNew= 100

if gs_a_half < EPS then gs_a_half = A / 2
![#COMPATIBILITY] - END

idx = idxVerticalHotspots

rotx ac_roofang

hotspot -A/2, 0,0,idx,B,1+256:	idx=idx+1	! (1)
hotspot -A/2,-1,0,idx,B,3:		idx=idx+1	! (2)
hotspot -A/2, B,0,idx,B,2:		idx=idx+1	! (3)

hotspot A/2, 0,0,idx,B,1+256:	idx=idx+1	! (4)
hotspot A/2,-1,0,idx,B,3:		idx=idx+1	! (5)
hotspot A/2, B,0,idx,B,2:		idx=idx+1	! (6)

idx = idxHorizontalHotspotsNew

hotspot 0,			0,0,idx,						gs_a_half,1+128,A:	idx=idx+1	! (100)
hotspot 1,			0,0,idx,						gs_a_half,3,	A:	idx=idx+1	! (101)
hotspot -gs_a_half,	0,0,7,		gs_a_half,2,	A:	idx=idx+1	! (7)	[#COMPATIBILITY]

hotspot  0,			0,0,idx,	gs_a_half,1+128,A:	idx=idx+1	! (103)
hotspot -1,			0,0,idx,	gs_a_half,3,	A:	idx=idx+1	! (104)
hotspot  gs_a_half,	0,0,9,		gs_a_half,2,	A:	idx=idx+1	! (9)	[#COMPATIBILITY]

hotspot 0,			B,0,idx,	gs_a_half,1+128,A:	idx=idx+1	! (106)
hotspot 1,			B,0,idx,	gs_a_half,3,	A:	idx=idx+1	! (107)
hotspot -gs_a_half,	B,0,10,		gs_a_half,2,	A:	idx=idx+1	! (10)	[#COMPATIBILITY]

hotspot  0,			B,0,idx,	gs_a_half,1+128,A:	idx=idx+1	! (109)
hotspot -1,			B,0,idx,	gs_a_half,3,	A:	idx=idx+1	! (110)
hotspot  gs_a_half,	B,0,12,		gs_a_half,2,	A:	idx=idx+1	! (12)	[#COMPATIBILITY]

del 1


hotspot -A/2,0, 0,		idx,zzyzx,1+128:idx=idx+1	! (112)
hotspot -A/2,0,-1,		idx,zzyzx,3:	idx=idx+1	! (113)
hotspot -A/2,0, zzyzx,	13,	zzyzx,2:	idx=idx+1	! (13)

hotspot A/2,0, 0,		idx,zzyzx,1+128:idx=idx+1	! (115)
hotspot A/2,0,-1,		idx,zzyzx,3:	idx=idx+1	! (116)
hotspot A/2,0, zzyzx,	14,	zzyzx,2:	idx=idx+1	! (14)


! ==============================================================================
! Frame and Glass
! ==============================================================================

if iLoD3D = SYMBS_3D_OFF then							end
if iLoD3D = SYMBS_3D_S_1 then							gosub "singlePlane"
if iLoD3D = SYMBS_3D_S_2 then							gosub "windowPoligons"
if iLoD3D = SYMBS_3D_M_1 then							gosub "windowPoligons"
if iLoD3D = SYMBS_3D_D_1 | iLoD3D = SYMBS_3D_D_2 then	gosub "fullDetail"

end


! ==============================================================================
! Subroutine
! ==============================================================================

"fullDetail":
	if ac_roofang < 90 - MIN_ROOF_ANGLE then
		addx a/2-frame_width
		rotz 90
		rotx 90

		for n=1 to 2
			material gs_frame_mat
			prism_ 8, frame_width,
				0,-0,15,
				bb,hh,15,
				0,zzyzx,15,
				0,-0,-1,
				frame_width,frame_width/cos(ac_roofang)+frame_width*tan(ac_roofang),15,
				frame_width,zzyzx-frame_width/tan(topang/2),15,
				frame_width+bb*ff,frame_width/cos(ac_roofang)+frame_width*tan(ac_roofang)+hh*ff,15,
				frame_width,frame_width/cos(ac_roofang)+frame_width*tan(ac_roofang),-1

			if iLoD3D <> SYMBS_3D_M_1 then
				addz frame_width/2-0.005
			else
				if n = 1 then
					addz frame_width
				endif
			endif
			body -1
			material gs_glass_mat
			prism_ 4, 0,
				frame_width,frame_width/cos(ac_roofang)+frame_width*tan(ac_roofang),15,
				frame_width,zzyzx-frame_width/tan(topang/2),15,
				frame_width+bb*ff,frame_width/cos(ac_roofang)+frame_width*tan(ac_roofang)+hh*ff,15,
				frame_width,frame_width/cos(ac_roofang)+frame_width*tan(ac_roofang),-1

			if iLoD3D <> SYMBS_3D_M_1 then
				del 1
			else
				if n = 1 then
					del 1
				endif
			endif

			addz -a+frame_width

		next n
		del 5

		rotx 90
		addx -a/2+frame_width
		roty 90
		material gs_frame_mat

		if iLoD3D <> SYMBS_3D_M_1 then
			body -1
			prism_ 5,a-2*frame_width,
				0,0,15,
				0,frame_width,15,
				frame_width/2,(frame_width/cos(ac_roofang)+frame_width*tan(ac_roofang))/2,15,
				frame_width*cos(ac_roofang),frame_width*sin(ac_roofang),15,
				0,0,-1
			body -1
			prism_ 5,a-2*frame_width,
				0,zzyzx,15,
				frame_width*sin(topang),zzyzx-frame_width*cos(topang),15,
				frame_width/2,zzyzx-frame_width/tan(topang/2)/2,15,
				0,zzyzx-frame_width,15,
				0,zzyzx,-1
			body -1
			prism_ 5,a-2*frame_width,
				bb,hh,15,
				(bb/cos(ac_roofang)-frame_width)*cos(ac_roofang),(bb/cos(ac_roofang)-frame_width)*sin(ac_roofang),15,
				bb-(bb-frame_width-bb*ff)/2,hh-(hh-frame_width/cos(ac_roofang)-frame_width*tan(ac_roofang)-hh*ff)/2,15,
				(bb/sin(topang)-frame_width)*sin(topang),zzyzx-(bb/sin(topang)-frame_width)*cos(topang),15,
				bb,hh,-1
		else
			body -1
			prism_ 4,a-2*frame_width,
				0,0,15,
				0,frame_width,15,
				frame_width*cos(ac_roofang),frame_width*sin(ac_roofang),15,
				0,0,-1
			body -1
			prism_ 4,a-2*frame_width,
				0,zzyzx,15,
				frame_width*sin(topang),zzyzx-frame_width*cos(topang),15,
				0,zzyzx-frame_width,15,
				0,zzyzx,-1
			body -1
			prism_ 4,a-2*frame_width,
				bb,hh,15,
				(bb/cos(ac_roofang)-frame_width)*cos(ac_roofang),(bb/cos(ac_roofang)-frame_width)*sin(ac_roofang),15,
				(bb/sin(topang)-frame_width)*sin(topang),zzyzx-(bb/sin(topang)-frame_width)*cos(topang),15,
				bb,hh,-1
		endif

		material gs_glass_mat
		addx frame_width/2
		addz -frame_width/2
		roty -90
		body -1
		if iLoD3D <> SYMBS_3D_M_1 then
			prism_ 5,0,
				frame_width/2,(frame_width/cos(ac_roofang)+frame_width*tan(ac_roofang))/2,15,
				frame_width/2,zzyzx-frame_width/tan(topang/2)/2,15,
				frame_width/2+a-2*frame_width,zzyzx-frame_width/tan(topang/2)/2,15,
				frame_width/2+a-2*frame_width,(frame_width/cos(ac_roofang)+frame_width*tan(ac_roofang))/2,15,
				frame_width/2,(frame_width/cos(ac_roofang)+frame_width*tan(ac_roofang))/2,-1
		else
			addz frame_width/2
			prism_ 5,0,
				frame_width/2,frame_width,15,
				frame_width/2,zzyzx-frame_width,15,
				frame_width/2+a-2*frame_width,zzyzx-frame_width,15,
				frame_width/2+a-2*frame_width,frame_width,15,
				frame_width/2,frame_width,-1
			del 1
		endif
		del 3

		dd=sqr(((bb-(bb-frame_width-bb*ff)/2)-(frame_width/2))^2+((zzyzx-frame_width/tan(topang/2)/2)-(hh-(hh-frame_width/cos(ac_roofang)-frame_width*tan(ac_roofang)-hh*ff)/2))^2)
		zz = sqr(bb^2+(zzyzx-hh)^2)

		body -1

		if iLoD3D <> SYMBS_3D_M_1 then
			addy zzyzx-frame_width/tan(topang/2)/2
			addz a-2*frame_width
			addx frame_width/2
			rotz topang
			roty 90

			prism_ 5,0,
				0,0,15,
				a-2*frame_width,0,15,
				a-2*frame_width,-dd,15,
				0,-dd,15,
				0,0,-1

			del 5
		else
			add  frame_width*sin(topang), zzyzx-frame_width*cos(topang), a-2*frame_width
			rotz topang
			roty 90

			prism_ 5,0,
				0,0,15,
				a-2*frame_width,0,15,
				a-2*frame_width, -(zz-2*frame_width), 15,		!-(zzyzx-2*frame_width)*cos(topang),15,
				0, -(zz-2*frame_width), 15,
				0,0,-1
			del 3

		endif
	else
		rotx ac_roofang
		material gs_frame_mat
		prism_ 10,frame_width,
			-A/2,0,15,
			-A/2,B,15,
			 A/2,B,15,
			 A/2,0,15,
			-A/2,0,-1,
			-A/2+frame_width,frame_width,15,
			-A/2+frame_width,B-frame_width,15,
			 A/2-frame_width,B-frame_width,15,
			 A/2-frame_width,frame_width,15,
			-A/2+frame_width,frame_width,-1

		if iLoD3D <> SYMBS_3D_M_1 then
			addz frame_width/2-0.005
		else
			addz frame_width
		endif
		body -1
		material gs_glass_mat
		prism_ 4, 0,
			-A/2+frame_width,frame_width,15,
			-A/2+frame_width,B-frame_width,15,
			 A/2-frame_width,B-frame_width,15,
			 A/2-frame_width,frame_width,15

		del 2
	endif
return

"windowPoligons":
	body -1

	if ac_roofang < 90 - MIN_ROOF_ANGLE then
		addx a/2
		rotz 90
		rotx 90

		for n=1 to 2
			material gs_frame_mat
			poly_ 8,
				0,-0,1,
				bb,hh,1,
				0,zzyzx,1,
				0,-0,-1,
				frame_width,frame_width/cos(ac_roofang)+frame_width*tan(ac_roofang),1,
				frame_width,zzyzx-frame_width/tan(topang/2),1,
				frame_width+bb*ff,frame_width/cos(ac_roofang)+frame_width*tan(ac_roofang)+hh*ff,1,
				frame_width,frame_width/cos(ac_roofang)+frame_width*tan(ac_roofang),-1
			body -1

			material gs_glass_mat
			poly_ 4,
				frame_width,frame_width/cos(ac_roofang)+frame_width*tan(ac_roofang),1,
				frame_width,zzyzx-frame_width/tan(topang/2),1,
				frame_width+bb*ff,frame_width/cos(ac_roofang)+frame_width*tan(ac_roofang)+hh*ff,1,
				frame_width,frame_width/cos(ac_roofang)+frame_width*tan(ac_roofang),-1

			addz -A
		next n
		del 5

		rotx 90
		material gs_frame_mat
		poly_ 10,
			-A/2,	0,		1,
			-A/2,	zzyzx,	1,
			 A/2,	zzyzx,	1,
			 A/2,	0,		1,
			-A/2,	0,		-1,
			-A/2+frame_width,	frame_width,		1,
			-A/2+frame_width,	zzyzx-frame_width,	1,
			 A/2-frame_width,	zzyzx-frame_width,	1,
			 A/2-frame_width,	frame_width,		1,
			-A/2+frame_width,	frame_width,		-1
		body -1

		material gs_glass_mat
		poly_ 5,
			-A/2+frame_width,	frame_width,		1,
			-A/2+frame_width,	zzyzx-frame_width,	1,
			 A/2-frame_width,	zzyzx-frame_width,	1,
			 A/2-frame_width,	frame_width,		1,
			-A/2+frame_width,	frame_width,		-1
		del 1

		zz = sqr(bb^2+(zzyzx-hh)^2)
		add 0, bb, hh
		rotx 90+atn((bb)/(zzyzx-hh))
		material gs_frame_mat
		poly_ 10,
			-A/2,	0,	1,
			-A/2,	zz,	1,
			 A/2,	zz,	1,
			 A/2,	0,	1,
			-A/2,	0,	-1,
			-A/2+frame_width,	frame_width,	1,
			-A/2+frame_width,	zz-frame_width,	1,
			 A/2-frame_width,	zz-frame_width,	1,
			 A/2-frame_width,	frame_width,	1,
			-A/2+frame_width,	frame_width,	-1
		body -1

		material gs_glass_mat
		poly_ 5,
			-A/2+frame_width,	frame_width,	1,
			-A/2+frame_width,	zz-frame_width,	1,
			 A/2-frame_width,	zz-frame_width,	1,
			 A/2-frame_width,	frame_width,	1,
			-A/2+frame_width,	frame_width,	-1
		del 2
	else
		rotx ac_roofang
		material gs_frame_mat
		poly_ 10,
			-A/2,	0,	1,
			-A/2,	B,	1,
			 A/2,	B,	1,
			 A/2,	0,	1,
			-A/2,	0,	-1,
			-A/2+frame_width,	frame_width,	1,
			-A/2+frame_width,	B-frame_width,	1,
			 A/2-frame_width,	B-frame_width,	1,
			 A/2-frame_width,	frame_width,	1,
			-A/2+frame_width,	frame_width,	-1

		body -1
		material gs_glass_mat
		poly_ 4,
			-A/2+frame_width,	frame_width,	1,
			-A/2+frame_width,	B-frame_width,	1,
			 A/2-frame_width,	B-frame_width,	1,
			 A/2-frame_width,	frame_width,	1

		del 1
	endif
return

"singlePlane":
	body -1
	material gs_glass_mat

	if ac_roofang < 90 - MIN_ROOF_ANGLE then
		addx a/2
		rotz 90
		rotx 90

		for n=1 to 2
			poly_ 4,
				0,0,1,
				bb,hh,1,
				0,zzyzx,1,
				0,0,-1

			addz -a
		next n
		del 5

		rotx 90
		poly_ 5,
			-a/2,	0,		1,
			-a/2,	zzyzx,	1,
			a/2,	zzyzx,	1,
			a/2,	0,		1,
			-a/2,	0,		-1
		del 1

		zz = sqr(bb^2+(zzyzx-hh)^2)
		add 0, bb, hh
		rotx 90+atn((bb)/(zzyzx-hh))
		poly_ 5,
			-a/2,	0,	1,
			-a/2,	zz,	1,
			a/2,	zz,	1,
			a/2,	0,	1,
			-a/2,	0,	-1
		del 2
	else
		rotx ac_roofang
		poly_ 5,
			-A/2, 0, 1,
			-A/2, B, 1,
			 A/2, B, 1,
			 A/2, 0, 1,
			-A/2, 0, -1
		del 1
	endif

	body -1
return
