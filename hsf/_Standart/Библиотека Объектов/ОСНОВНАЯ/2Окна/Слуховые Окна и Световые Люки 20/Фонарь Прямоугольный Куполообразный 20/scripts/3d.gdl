

! =============================================================================
! GS Skylight Functions
! =============================================================================

call "GS Skylight Functions",
	parameters all	bEnableLining			= bEnableLining,
					bEnableEdgeTypesUpper	= bEnableEdgeTypesUpper,
					bEnableEdgeTypesLower	= bEnableEdgeTypesLower,
	returned_parameters	iLoD3D,
						lod3D_Casing,
						bOplines3d, opLineType3dIn, opLineType3dOut, gs_opline_style_m, gs_opLinePen




pen gs_cont_pen

rotx ac_roofang

! ==============================================================================
! Wallhole
! ==============================================================================

call "SkylightRect_RoofCutting_macro" parameters A = A, B = B,
	AC_edge_upper_type			= AC_edge_upper_type,
	AC_edge_upper_angle			= AC_edge_upper_angle,
	AC_edge_lower_type			= AC_edge_lower_type,
	AC_edge_lower_angle			= AC_edge_lower_angle,
	AC_Custom_3D_Hole			= AC_Custom_3D_Hole,
	gs_hole_edge_upper_depth	= gs_hole_edge_upper_depth,
	gs_hole_edge_lower_depth	= gs_hole_edge_lower_depth,
	gs_hole_outside_depth		= gs_hole_outside_depth,
	ac_upper_mat				= ac_upper_mat,
	gs_lower_bott_mat			= ac_lower_mat,
	gs_lower_top_mat			= ac_lower_mat,
	ac_roofang					= ac_roofang,
	bUpperCut					= 1,
	ShowUpContLines				= 1


! ==============================================================================
! Hotspots
! ==============================================================================

![#COMPATIBILITY] - START
idxVerticalHotspots		= 1
idxHorizontalHotspots	= 8
idxHorizontalHotspotsNew= 100
idxSkylight				= 14

if gs_a_half < EPS then gs_a_half = A / 2
![#COMPATIBILITY] - END



idx = idxVerticalHotspots

hotspot 0,0,0,idx: idx=idx+1	! (1)

hotspot -A/2, 0,0,2,B,1+256:	idx=idx+1	! (2)	[#COMPATIBILITY]
hotspot -A/2,-1,0,3,B,3:		idx=idx+1	! (3)
hotspot -A/2, B,0,5,B,2:		idx=idx+1	! (5)	[#COMPATIBILITY]

hotspot A/2, 0,0,4,B,1+256:	idx=idx+1	! (4)	[#COMPATIBILITY]
hotspot A/2,-1,0,6,B,3:		idx=idx+1	! (6)
hotspot A/2, B,0,7,B,2:		idx=idx+1	! (7)	[#COMPATIBILITY]

idx = idxHorizontalHotspotsNew

hotspot 0,			0,0,idx,						gs_a_half,1+128,A:	idx=idx+1	! (100)
hotspot 1,			0,0,idx,						gs_a_half,3,	A:	idx=idx+1	! (101)
hotspot -gs_a_half,	0,0,8,							gs_a_half,2,	A:	idx=idx+1	! (8)	[#COMPATIBILITY]

hotspot  0,			0,0,idx,						gs_a_half,1+128,A:	idx=idx+1	! (103)
hotspot -1,			0,0,idx,						gs_a_half,3,	A:	idx=idx+1	! (104)
hotspot  gs_a_half,	0,0,11,							gs_a_half,2,	A:	idx=idx+1	! (11)	[#COMPATIBILITY]

hotspot 0,			B,0,idx,						gs_a_half,1+128,A:	idx=idx+1	! (106)
hotspot 1,			B,0,idx,						gs_a_half,3,	A:	idx=idx+1	! (107)
hotspot -gs_a_half,	B,0,10,							gs_a_half,2,	A:	idx=idx+1	! (10)	[#COMPATIBILITY]

hotspot  0,			B,0,idx,						gs_a_half,1+128,A:	idx=idx+1	! (109)
hotspot -1,			B,0,idx,						gs_a_half,3,	A:	idx=idx+1	! (110)
hotspot  gs_a_half,	B,0,13,							gs_a_half,2,	A:	idx=idx+1	! (13)	[#COMPATIBILITY]


if iLoD3D = SYMBS_3D_OFF then end

if iLoD3D <> SYMBS_3D_S_1 then
	gosub "Curb"
	addz ac_curb_height
endif

if iLoD3D = SYMBS_3D_D_1 | iLoD3D = SYMBS_3D_D_2 then gosub "Frame"

if iLoD3D = SYMBS_3D_S_1 then
	rotx -ac_roofang
	addy -0.0001
	rotx ac_roofang
endif
gosub "Glass"
if iLoD3D = SYMBS_3D_S_1 then del 3

end


! ==============================================================================
"Curb":


idx = idxSkylight

!---------------------!
! Curb Height Editing !
!---------------------!

hotspot -a/2,0,0,idx,ac_curb_height,1+128 : idx=idx+1
hotspot -a/2,0,-1,idx,ac_curb_height,3 : idx=idx+1
hotspot -a/2,0,ac_curb_height,idx,ac_curb_height,2 : idx=idx+1

hotspot a/2,0,0,idx,ac_curb_height,1+128 : idx=idx+1
hotspot a/2,0,-1,idx,ac_curb_height,3 : idx=idx+1
hotspot a/2,0,ac_curb_height,idx,ac_curb_height,2 : idx=idx+1

hotspot -a/2,b,0,idx,ac_curb_height,1+128 : idx=idx+1
hotspot -a/2,b,-1,idx,ac_curb_height,3 : idx=idx+1
hotspot -a/2,b,ac_curb_height,idx,ac_curb_height,2 : idx=idx+1

hotspot a/2,b,0,idx,ac_curb_height,1+128 : idx=idx+1
hotspot a/2,b,-1,idx,ac_curb_height,3 : idx=idx+1
hotspot a/2,b,ac_curb_height,idx,ac_curb_height,2 : idx=idx+1

addz ac_curb_height

hotspot 0,b/2,0,idx,gs_dome_height,1+128 : idx=idx+1
hotspot 0,b/2,-1,idx,gs_dome_height,3 : idx=idx+1
hotspot 0,b/2,gs_dome_height,idx,gs_dome_height,2 : idx=idx+1

del 1


material gs_curb_mat

if iLoD3D > SYMBS_3D_S_2 then
	prism_  10, ac_curb_height + (iLoD3D = SYMBS_3D_M_1) * gs_frame_thk,
			-a/2, 0, 15,
			a/2, 0, 15,
			a/2, b, 15,
			-a/2, b, 15,
			-a/2, 0, -1,
			-a/2+gs_curb_thk, gs_curb_thk, 15,
			a/2-gs_curb_thk, gs_curb_thk, 15,
			a/2-gs_curb_thk, b-gs_curb_thk, 15,
			-a/2+gs_curb_thk, b-gs_curb_thk, 15,
			-a/2+gs_curb_thk, gs_curb_thk, -1
endif

if iLoD3D = SYMBS_3D_S_2 then
	extrude 4, 0,0,ac_curb_height + gs_frame_thk, 4+16+32+128,
		-A/2, 0, 1,
		 A/2, 0, 1,
		 A/2, B, 1,
		-A/2, B, 1
endif


return


! ==============================================================================
"Frame":

material gs_frame_mat
prism_  10, gs_frame_thk,
		-a/2-gs_frame_thk, -gs_frame_thk, 11,
		a/2+gs_frame_thk, -gs_frame_thk, 11,
		a/2+gs_frame_thk, b+gs_frame_thk, 11,
		-a/2-gs_frame_thk, b+gs_frame_thk, 11,
		-a/2-gs_frame_thk, -gs_frame_thk, -1,
		-a/2+2*gs_frame_thk, 2*gs_frame_thk, 15,
		a/2-2*gs_frame_thk, 2*gs_frame_thk, 15,
		a/2-2*gs_frame_thk, b-2*gs_frame_thk, 15,
		-a/2+2*gs_frame_thk, b-2*gs_frame_thk, 15,
		-a/2+2*gs_frame_thk, 2*gs_frame_thk, -1
addz gs_frame_thk
prism_  10, gs_frame_thk,
		-a/2-gs_frame_thk, -gs_frame_thk, 14,
		a/2+gs_frame_thk, -gs_frame_thk, 14,
		a/2+gs_frame_thk, b+gs_frame_thk, 14,
		-a/2-gs_frame_thk, b+gs_frame_thk, 14,
		-a/2-gs_frame_thk, -gs_frame_thk, -1,
		-a/2, 0, 15,
		a/2, 0, 15,
		a/2, b, 15,
		-a/2, b, 15,
		-a/2, 0, -1

del 1

return


! ==============================================================================
"Glass":

material gs_glass_mat

if iLoD3D <> SYMBS_3D_S_1 then addz gs_frame_thk


resol 4

_startAng = 30
_segmNum = 5
_segmAng = (90 - _startAng) / _segmNum
_DomeRad = (b/2)*SQR(2)
_startAngHgtMod = _DomeRad * sin(_startAng)
_startAngWdtMod = _DomeRad - (_DomeRad * cos(_startAng))
_detLevHgtMod = (iLoD3D = SYMBS_3D_S_1) * (ac_curb_height + gs_frame_thk)

for i = 0 to _segmNum
	put _DomeRad * sin(_startAng + i*_segmAng) + _detLevHgtMod, (b/2)*SQR(2) + _startAngWdtMod - _DomeRad + _DomeRad * cos(_startAng + i*_segmAng), 1
next i

addy b/2
roty -90
mulz a/b
rotx 45
mulx (gs_dome_height + _detLevHgtMod)/(_DomeRad - _startAngHgtMod)
addx -_startAngHgtMod - _detLevHgtMod

revolve nsp/3, 360, 2,
	get(nsp)
del 6



if iLoD3D <> SYMBS_3D_S_1 then del 1

return


