
! Contact person: <SzL, NJ>

! =============================================================================

lod3D = 0										! Don't draw anything
if (GLOB_VIEW_TYPE = 9 & GLOB_PREVIEW_MODE = 0) then	! in case of Surface IS Calculation
	lod3D = 2	! Detailed
else
	if iDWDet3D = DETLEVEL_DW3D_SIMPLE then lod3D = 1	! Simple
	if iDWDet3D = DETLEVEL_DW3D_DETAILED then lod3D = 2	! Detailed
	if iDWDet3D = DETLEVEL_DW3D_CHI_SIMPLE | iDWDet3D = DETLEVEL_DW3D_CHI_DETAILED then
		if (GLOB_CONTEXT = 4 | GLOB_CONTEXT = 24 | GLOB_CONTEXT = 6) then
			lod3D = 5								! Chinese
		else
			lod3D = 2
		endif
	endif
endif

gs_fillFr		= gs_bFills * gs_fillFr
gs_penFr_fg		= gs_bFills * gs_penFr_fg
gs_penFr_bg		= gs_bFills * gs_penFr_bg

gs_fillSash		= gs_bFills * gs_fillSash
gs_penSash_fg	= gs_bFills * gs_penSash_fg
gs_penSash_bg	= gs_bFills * gs_penSash_bg

if not(gs_shadow) then shadow off


! =============================================================================
! GS Window Functions
! =============================================================================

call "GS Window Functions",
	parameters all	iWindowShape			= iWindowShape,
					openingArchHeight		= openingArchHeight,
					nArchResolution			= gs_res,
					gs_IsCurved				= gs_IsCurved,
					bParalellInCurvedWalls	= bParalellInCurvedWalls,
					lod3D					= lod3D,
					bDisabeMirroring		= bDisabeMirroring,
	returned_parameters	ac_unit_width,
						ac_unit_height,
						gs_frame_ovhg_left_out,
						gs_frame_ovhg_right_out,
						gs_frame_ovhg_top_out,
						gs_frame_ovhg_bottom_out,
						gs_frame_ovhg_left_in,
						gs_frame_ovhg_right_in,
						gs_frame_ovhg_top_in,
						gs_frame_ovhg_bottom_in,
						bMirrored,
						xform11, xform12, xform13, xform14,
						xform21, xform22, xform23, xform24,
						xform31, xform32, xform33, xform34,

						bOplines3d, opLineType3dIn, opLineType3dOut, gs_opline_style_m, gs_opLinePen,
						bShowAddHotspots, bShowAddHotspotsForIS, bShowUnitHotspots


! =============================================================================
! Define sizes of archtop
! =============================================================================

archHalfAngle = 2*(90 - atn((ac_wallhole_width/2)/(ac_wallhole_height - gs_shoulderHeight)))
archRadius = (ac_wallhole_width/2)/sin(archHalfAngle)


! =============================================================================
! Block for operator mode
! =============================================================================

if GLOB_CONTEXT > 40 & GLOB_CONTEXT < 50 then
	resol gs_res
	addy gs_tolerance_lower
	prism_ 6, WIDO_FRAME_THICKNESS,
		-ac_unit_width/2, 0, 15,
		 ac_unit_width/2, 0, 15,
		 ac_unit_width/2, gs_shoulderHeight - gs_tolerance_lower, 79,
		 0, ac_unit_height-(archRadius - gs_tolerance_left), 979,
		 0,	ac_unit_height, 3079,
		-ac_unit_width/2, gs_shoulderHeight - gs_tolerance_lower, 3079
	del 1

	end
endif


if lod3D = 0 then end

xform	xform11, xform12, xform13, xform14,
		xform21, xform22, xform23, xform24,
		xform31, xform32, xform33, xform34

muly -1
addy WIDO_FRAME_THICKNESS

temp = gs_frame_ovhg_left_out
gs_frame_ovhg_left_out = gs_frame_ovhg_left_in
gs_frame_ovhg_left_in = temp

temp = gs_frame_ovhg_right_out
gs_frame_ovhg_right_out = gs_frame_ovhg_right_in
gs_frame_ovhg_right_in = temp

temp = gs_frame_ovhg_top_in
gs_frame_ovhg_top_in = gs_frame_ovhg_top_out
gs_frame_ovhg_top_out = temp

temp = gs_frame_ovhg_bottom_in
gs_frame_ovhg_bottom_in = gs_frame_ovhg_bottom_out
gs_frame_ovhg_bottom_out = temp


if lod3D = 5 then	! Chinese
	fr_sect_fill_type	= gs_fillShCover
	fr_sect_fill_fg		= gs_penShCov_fg
	fr_sect_fill_bg		= gs_penShCov_bg
else
	fr_sect_fill_type	= gs_fillFr
	fr_sect_fill_fg		= gs_penFr_fg
	fr_sect_fill_bg		= gs_penFr_bg
endif


A = ac_unit_width
B = ac_unit_height

rotx 90


leftOvhg	=	max(gs_frame_ovhg_left_out, gs_frame_ovhg_left_in)
rightOvhg	=	leftOvhg
topOvhg		=	leftOvhg
bottomOvhg	=	max(gs_frame_ovhg_bottom_out, gs_frame_ovhg_bottom_in)


! =============================================================================
! Unit Hotspots
! =============================================================================

if bShowUnitHotspots then
	unID=100

	hotspot a/2, 0, 0, unID		:unID=unID+1
	hotspot -a/2, 0, 0, unID	:unID=unID+1
	hotspot a/2, 0, gs_frame_thk, unID		:unID=unID+1
	hotspot -a/2, 0, gs_frame_thk, unID	:unID=unID+1

	hotspot a/2, gs_shoulderHeight-gs_tolerance_lower, 0, unID		:unID=unID+1
	hotspot -a/2, gs_shoulderHeight-gs_tolerance_lower, 0, unID		:unID=unID+1
	hotspot a/2, gs_shoulderHeight-gs_tolerance_lower, gs_frame_thk, unID		:unID=unID+1
	hotspot -a/2, gs_shoulderHeight-gs_tolerance_lower, gs_frame_thk, unID	:unID=unID+1

	hotspot 0, b, 0, unID		:unID=unID+1
	hotspot 0, b, gs_frame_thk, unID

endif


! =============================================================================
! Unit Hotspots for IS
! =============================================================================

if bShowAddHotspotsForIS then
	unID=110

	hotspot 0, 0, 0, unID		:unID=unID+1
	hotspot 0, 0, gs_frame_thk, unID

endif


! =============================================================================
! Hotspot Editing
! =============================================================================

if not(bSemicircularArchtop) then
	addy -gs_tolerance_lower
	hotspot -A/2,	gs_shoulderHeight,	0, 2000, gs_shoulderHeight, 2
	hotspot -A/2,	0,					0, 2001, gs_shoulderHeight, 1+128
	hotspot -A/2,	-1,					0, 2002, gs_shoulderHeight, 3

	hotspot A/2,	gs_shoulderHeight,	0, 2003, gs_shoulderHeight, 2
	hotspot A/2,	0,					0, 2004, gs_shoulderHeight, 1+128
	hotspot A/2,	-1,					0, 2005, gs_shoulderHeight, 3
	del 1

	if gs_UTrans then
		addy gs_tolerance_left
		hotspot -A/2, B,					0, 1300, gs_transom_height, 1+128
		hotspot -A/2, B+1,					0, 1301, gs_transom_height, 3
		hotspot -A/2, B-gs_transom_height,	0, 1302, gs_transom_height, 2

		hotspot A/2, B,						0, 1310, gs_transom_height, 1+128
		hotspot A/2, B+1,					0, 1311, gs_transom_height, 3
		hotspot A/2, B-gs_transom_height,	0, 1312, gs_transom_height, 2
		del 1
	endif
endif


if gs_frame_pen_cont < 0.5 then gs_frame_pen_cont = SYMB_SECT_PEN

if gs_fillFr < 0.5 then gs_fillFr = SYMB_FILL
if gs_penFr_bg < 0.5 then gs_penFr_bg = SYMB_FBGD_PEN
if gs_penFr_fg < 0.5 then gs_penFr_fg = SYMB_FILL_PEN

pen gs_frame_pen_cont
sect_fill gs_fillFr, gs_penFr_bg, gs_penFr_fg, gs_frame_pen_cont

if gs_sash_uniform then
	iMullionStyle_01 = iMullionStyle_00
	iMullionStyle_02 = iMullionStyle_00
endif

_transom_height = gs_transom_height - gs_tolerance_left

! =============================================================================

SashOffset_01 = 0
SashOffset_02 = 0
if lod3D = 1 | lod3D = 5 then ! Simple | Chinese
	if gs_optype_m_01 <> SASH_FIXED then SashOffset_01 =  gs_sash_width - gs_rebate_width
	if	gs_optype_m_01 = SASH_HOR_PIVOT |\
		gs_optype_m_01 = SASH_VER_PIVOT |\
		gs_optype_m_01 = SASH_VER_PIVOT_M |\
		gs_optype_m_01 = SASH_SLIDING_HOR |\
		gs_optype_m_01 = SASH_SLIDING_HOR_M |\
		gs_optype_m_01 = SASH_DOUBLE_SLIDING_HOR |\
		gs_optype_m_01 = SASH_DOUBLE_SLIDING_HOR_M |\
		gs_optype_m_01 = SASH_SLIDING_VER |\
		gs_optype_m_01 = SASH_DOUBLE_SLIDING_VER then SashOffset_01 = gs_sash_width
	if gs_UTrans then
		if	gs_optype_m_02 = SASH_FIXED_SCREW	|\
			gs_optype_m_02 = SASH_BOTTOM_HUNG	then SashOffset_02 =  gs_sash_width - gs_rebate_width
	else
		SashOffset_02 = SashOffset_01
	endif
else
	if	gs_optype_m_01 = SASH_SLIDING_HOR |\
		gs_optype_m_01 = SASH_SLIDING_HOR_M |\
		gs_optype_m_01 = SASH_DOUBLE_SLIDING_HOR |\
		gs_optype_m_01 = SASH_DOUBLE_SLIDING_HOR_M |\
		gs_optype_m_01 = SASH_SLIDING_VER |\
		gs_optype_m_01 = SASH_DOUBLE_SLIDING_VER then SashOffset_01 = 0.001

		SashOffset_02 = 0
endif

dyFrameWidth = (archRadius - (ac_wallhole_height - gs_shoulderHeight - gs_tolerance_lower)) - (sqr((archRadius - leftOvhg - gs_frame_width - SashOffset_02)^2 - (ac_wallhole_width/2 - leftOvhg - gs_frame_width- SashOffset_02)^2))
dyRebateWidth = dyFrameWidth -  ((archRadius - (ac_wallhole_height - gs_shoulderHeight - gs_tolerance_lower)) - (sqr((archRadius - leftOvhg - gs_frame_width + gs_rebate_width)^2 - (ac_wallhole_width/2 - leftOvhg - gs_frame_width + gs_rebate_width)^2)))

! =============================================================================

iSashCutType_01 = SASHCUT_NONE
iSashCutType_02 = SASHCUT_NONE
if not(lod3D = 1 | lod3D = 5) then ! Simple | Chinese
	if	gs_optype_m_01 <> SASH_FIXED &\
		gs_optype_m_01 <> SASH_HOR_PIVOT &\
		gs_optype_m_01 <> SASH_VER_PIVOT &\
		gs_optype_m_01 <> SASH_VER_PIVOT_M then iSashCutType_01 = SASHCUT_REBATE
	if	gs_optype_m_01 = SASH_SLIDING_HOR |\
		gs_optype_m_01 = SASH_SLIDING_HOR_M |\
		gs_optype_m_01 = SASH_DOUBLE_SLIDING_HOR |\
		gs_optype_m_01 = SASH_DOUBLE_SLIDING_HOR_M |\
		gs_optype_m_01 = SASH_SLIDING_VER |\
		gs_optype_m_01 = SASH_DOUBLE_SLIDING_VER then iSashCutType_01 = SASHCUT_MIDDLE

	if	gs_optype_m_02 = SASH_FIXED_SCREW	|\
		gs_optype_m_02 = SASH_BOTTOM_HUNG	then iSashCutType_02 = SASHCUT_REBATE
endif

! =============================================================================

material gs_frame_mat

if gs_trim_inside and gs_trim_outside then		!!Both
	if gs_trim_width_out>gs_trim_width_in then
		trimwidth=gs_trim_width_out
	else
		trimwidth=gs_trim_width_in
	endif
else
	if gs_trim_inside then		!!Inside
		trimwidth=gs_trim_width_in
	else
		trimwidth=gs_trim_width_out
	endif
endif

halfA = A / 2

bSimpleSashVerMull	=  (gs_optype_m_01 = SASH_DOUBLE_SIDE_HUNG | gs_optype_m_01 = SASH_LEFT_SLIDING | gs_optype_m_01 = SASH_RIGHT_SLIDING | gs_optype_m_01 = SASH_TILT_SLIDE |\
						gs_optype_m_01 = SASH_DOUBLE_TILT_TURN | gs_optype_m_01 = SASH_DOUBLE_TILT_TURN_M | gs_optype_m_01 = SASH_SLIDING_HOR | gs_optype_m_01 = SASH_SLIDING_HOR_M |\
						gs_optype_m_01 = SASH_DOUBLE_SLIDING_HOR | gs_optype_m_01 = SASH_DOUBLE_SLIDING_HOR_M) & (lod3D = 1 | lod3D = 5)

bSimpleSashHorMull	=  (gs_optype_m_01 = SASH_SLIDING_VER | gs_optype_m_01 = SASH_DOUBLE_SLIDING_VER | gs_optype_m_01 = SASH_UP_SLIDING | gs_optype_m_01 = SASH_DOWN_SLIDING) & (lod3D = 1 | lod3D = 5)

SimpleSashMullWidth = 0
if bSimpleSashVerMull | bSimpleSashHorMull then
	if gs_optype_m_01 = SASH_DOUBLE_SIDE_HUNG | gs_optype_m_01 = SASH_DOUBLE_TILT_TURN | gs_optype_m_01 = SASH_DOUBLE_TILT_TURN_M then
		SimpleSashMullWidth =	2*gs_sash_width
	else
		SimpleSashMullWidth =	gs_sash_width
	endif
endif




group "frame"

	numCuts = 0

	pen gs_frame_pen
	sect_fill fr_sect_fill_type, fr_sect_fill_bg, fr_sect_fill_fg, gs_frame_pen_cont
	material gs_frame_mat

	if abs(gs_frame_ovhg_left_out - gs_frame_ovhg_left_in) > EPS then

		numSegments = 2 * int(gs_res/4)
		angleSegments = 180 / numSegments
		archDistortion = (openingArchHeight + gs_frame_ovhg_top_out - gs_tolerance_left) / (ac_unit_width/2 + gs_frame_ovhg_left_out)

		add 0, ac_unit_height - openingArchHeight + gs_tolerance_left,0
		rotz 90
		mulx archDistortion

		for i=1 to numSegments
			addy ac_unit_width/2 + gs_frame_ovhg_left_out
			rotz -angleSegments/2

			if abs(gs_frame_ovhg_top_out - gs_frame_ovhg_top_in) < EPS then
				! Horizontal top
				angle1 = (i-1) * 180 / numSegments - 90
				angle2 = (i-0) * 180 / numSegments - 90
				angle = (angle1 + angle2) / 2
				rotx 90 + atn((gs_frame_ovhg_left_out - gs_frame_ovhg_left_in) / archDistortion / gs_frame_thk) * (abs(angle) / 90)
			else
				rotx 90 + atn((gs_frame_ovhg_left_out - gs_frame_ovhg_left_in) / archDistortion / gs_frame_thk)
			endif

			cutplane 180
			numCuts = numCuts + 1
			del 3

			rotz -angleSegments
		next i
		del numSegments + 3
	endif

	if abs(gs_frame_ovhg_left_out - gs_frame_ovhg_left_in) > EPS then
		addx -halfA - gs_frame_ovhg_left_out
		rotz 90
		cutplane -90 + atn((gs_frame_ovhg_left_out - gs_frame_ovhg_left_in) / gs_frame_thk)
		del 2
		numCuts = numCuts + 1
	endif

	if abs(gs_frame_ovhg_right_out - gs_frame_ovhg_right_in) > EPS then
		addx halfA + gs_frame_ovhg_right_out
		rotz 90
		cutplane 90 - atn((gs_frame_ovhg_right_out - gs_frame_ovhg_right_in) / gs_frame_thk)
		del 2
		numCuts = numCuts + 1
	endif

	if abs(gs_frame_ovhg_bottom_out - gs_frame_ovhg_bottom_in) > EPS then
		addy -gs_frame_ovhg_bottom_out
		rotz 90
		roty 90 + atn((gs_frame_ovhg_bottom_out - gs_frame_ovhg_bottom_in) / gs_frame_thk)
		cutplane 180
		del 3
		numCuts = numCuts + 1
	endif

! =============================================================================
! Draw Frame
! =============================================================================

	if lod3D = 1 then	! Simple
		if not(WIDO_REVEAL_SIDE) then
			frameThk  = gs_frame_thk/2 + gs_glass_thk/2
			frameThk2 = gs_frame_thk/2 - gs_glass_thk/2
		else
			frameThk  = gs_frame_thk/2 - gs_glass_thk/2
			frameThk2 = gs_frame_thk/2 + gs_glass_thk/2
		endif
	else
		frameThk  = gs_frame_thk - gs_rebate_depth
		frameThk2 = gs_rebate_depth
	endif

	if gs_frame_mat = gs_frame_mat2 | frameThk < EPS | frameThk2 < EPS then
		loopNum = 1
		if gs_frame_mat = gs_frame_mat2 then
			frameThk = gs_frame_thk
		else
			frameThk = max(frameThk, frameThk2)
		endif
		if not(WIDO_REVEAL_SIDE) then
			frameMatTop		= gs_frame_mat
			frameMatBottom	= gs_frame_mat2
		else
			frameMatTop		= gs_frame_mat2
			frameMatBottom	= gs_frame_mat
		endif
		if WIDO_REVEAL_SIDE then
			frameMat = gs_frame_mat2
		else
			frameMat = gs_frame_mat
		endif
		frameMask = 15
	else
		loopNum = 2
		if not(WIDO_REVEAL_SIDE) then
			frameMat  = gs_frame_mat2
			frameMat2 = gs_frame_mat
		else
			frameMat  = gs_frame_mat
			frameMat2 = gs_frame_mat2
		endif
		frameMatTop		= frameMat2
		frameMatBottom	= frameMat

		if iSashCutType_01 = SASHCUT_REBATE then
			frameMask = 15
			frameMask2 = 15
		else
			frameMask = 11
			frameMask2 = 14
		endif
	endif

	resol gs_res
	for i=1 to loopNum

		material frameMat

		if gs_SashText_typ_num = 1 then
			put	A/2 + leftOvhg, -bottomOvhg, frameMask - 2
		else
			put	A/2 + leftOvhg, gs_frame_width, frameMask - 2
		endif

		put	A/2 + leftOvhg, gs_shoulderHeight - gs_tolerance_lower, frameMask + 64,
			0, B - archRadius + gs_tolerance_left, 900,
			0, B + topOvhg, 3000 + frameMask + 64,
			-A/2 - rightOvhg, gs_shoulderHeight - gs_tolerance_lower, 3000 + frameMask + 64

		if gs_SashText_typ_num = 1 then
			put	-A/2 - rightOvhg, -bottomOvhg, 10
		else
			put	-A/2 - rightOvhg, gs_frame_width, 8
		endif

		if SashOffset_01 > EPS then
			put	-A/2 + gs_frame_width, gs_frame_width, 8,
				-A/2 + gs_frame_width + SashOffset_01, gs_frame_width + SashOffset_01, frameMask
		else
			put	-A/2 + gs_frame_width, gs_frame_width, frameMask
		endif

		if bSimpleSashHorMull then
			put	-A/2 + gs_frame_width + SashOffset_01,	gs_frame_width + (B - _transom_height - gs_frame_width)/2 - SimpleSashMullWidth/2, 10,
				-A/2 + gs_frame_width + SashOffset_01,	gs_frame_width + (B - _transom_height - gs_frame_width)/2 + SimpleSashMullWidth/2, frameMask
		endif


		if gs_UTrans then
			if SashOffset_01 > EPS then
				put	-A/2 + gs_frame_width + SashOffset_01, B - _transom_height - SashOffset_01, 10,
					-A/2 + gs_frame_width, B - _transom_height, 8
			else
					put	-A/2 + gs_frame_width, B - _transom_height, 10
			endif
			if SashOffset_02 > EPS then
				put -A/2 + gs_frame_width, B - _transom_height + gs_UTrans_w, 8
				put -A/2 + gs_frame_width + SashOffset_02, B - _transom_height + gs_UTrans_w + SashOffset_02, frameMask
			else
				put -A/2 + gs_frame_width, B - _transom_height + gs_UTrans_w, frameMask
			endif
		endif

		put	-A/2 + gs_frame_width + SashOffset_02,	gs_shoulderHeight - dyFrameWidth + SashOffset_02 * (bSemicircularArchtop & gs_UTrans),	frameMask + 64 - 2,
!!			0,										-gs_sash_width-SashOffset_02,															3079,
			0,										b - gs_frame_width - SashOffset_02, 													3000 + frameMask + 64 - 2,
			A/2 - gs_frame_width - SashOffset_02,	gs_shoulderHeight - dyFrameWidth + SashOffset_02 * (bSemicircularArchtop & gs_UTrans),	3000 + (frameMask-2) * not(gs_UTrans) + frameMask * gs_UTrans


		if gs_UTrans then
			if SashOffset_02 > EPS then
				put A/2 - gs_frame_width - SashOffset_02, B - _transom_height + gs_UTrans_w + SashOffset_02, 10
				put A/2 - gs_frame_width, B - _transom_height + gs_UTrans_w, 8
			else
				put A/2 - gs_frame_width, B - _transom_height + gs_UTrans_w, 10
			endif
			if SashOffset_01 > EPS then
				put	A/2 - gs_frame_width, B - _transom_height, 8,
					A/2 - gs_frame_width - SashOffset_01, B - _transom_height - SashOffset_01, frameMask
			else
				put	A/2 - gs_frame_width, B - _transom_height, frameMask
			endif
		endif

		if bSimpleSashHorMull then
			put	A/2 - gs_frame_width - SashOffset_01,	gs_frame_width + (B - _transom_height - gs_frame_width)/2 + SimpleSashMullWidth/2, 10,
				A/2 - gs_frame_width - SashOffset_01,	gs_frame_width + (B - _transom_height - gs_frame_width)/2 - SimpleSashMullWidth/2, frameMask
		endif

		if SashOffset_01 > EPS then
			put	A/2 - gs_frame_width - SashOffset_01, gs_frame_width + SashOffset_01, 10,
				A/2 - gs_frame_width, gs_frame_width, 8
		else
			put A/2 - gs_frame_width, gs_frame_width, 10
		endif

		base
		cprism_ frameMatTop, frameMatBottom, frameMat, nsp/3, frameThk,
				get(nsp)
		gosub 1000

		! Bottom
		if gs_SashText_typ_num = 1 then
			put	-A/2 + gs_frame_width, gs_frame_width, 10 - 2 * (SashOffset_01 > 0),
				-A/2 - rightOvhg, -bottomOvhg, frameMask,
				A/2 + leftOvhg, -bottomOvhg, 10,
				A/2 - gs_frame_width, gs_frame_width, frameMask * not(SashOffset_01) + 8 * (SashOffset_01 > 0)
		else
			put	-A/2 + gs_frame_width, gs_frame_width, 10 - 2 * (SashOffset_01 > 0),
				-A/2 - rightOvhg, gs_frame_width, frameMask - 2,
				-A/2 - rightOvhg, -bottomOvhg, frameMask,
				A/2 + leftOvhg, -bottomOvhg, frameMask,
				A/2 + leftOvhg, gs_frame_width, 8,
				A/2 - gs_frame_width, gs_frame_width, frameMask * not(SashOffset_01) + 8 * (SashOffset_01 > 0)
		endif

		if SashOffset_01 > EPS then put	A/2 - gs_frame_width - SashOffset_01, gs_frame_width + SashOffset_01, frameMask

		if bSimpleSashVerMull then
			put	SimpleSashMullWidth/2, gs_frame_width + SashOffset_01, 10,
				-SimpleSashMullWidth/2, gs_frame_width + SashOffset_01, frameMask
		endif


		if SashOffset_01 > EPS then put	-A/2 + gs_frame_width + SashOffset_01, gs_frame_width + SashOffset_01, 10

		base
		cprism_ frameMatTop, frameMatBottom, frameMat, nsp/3, frameThk,
				get(nsp)
		gosub 2000


		! Vertical mullion of simple sash frames
		if bSimpleSashVerMull then
			base
			cprism_ frameMatTop, frameMatBottom, frameMat, 4, frameThk,
					 SimpleSashMullWidth/2, gs_frame_width + SashOffset_01, 10,
					-SimpleSashMullWidth/2, gs_frame_width + SashOffset_01, frameMask,
					-SimpleSashMullWidth/2, B - _transom_height - SashOffset_01, 10,
					 SimpleSashMullWidth/2, B - _transom_height - SashOffset_01, frameMask
			gosub 1000
		endif


		! Horizontal mullion of simple sash frames
		if bSimpleSashHorMull then
			base
			cprism_ frameMatTop, frameMatBottom, frameMat, 4, frameThk,
					-A/2 + gs_frame_width + SashOffset_01,	gs_frame_width + (B - _transom_height - gs_frame_width)/2 - SimpleSashMullWidth/2, 10,
					-A/2 + gs_frame_width + SashOffset_01,	gs_frame_width + (B - _transom_height - gs_frame_width)/2 + SimpleSashMullWidth/2, frameMask,
					 A/2 - gs_frame_width - SashOffset_01,	gs_frame_width + (B - _transom_height - gs_frame_width)/2 + SimpleSashMullWidth/2, 10,
					 A/2 - gs_frame_width - SashOffset_01,	gs_frame_width + (B - _transom_height - gs_frame_width)/2 - SimpleSashMullWidth/2, frameMask
			gosub 2000
		endif

		! Transom
		if gs_UTrans then
			put	-A/2 + gs_frame_width, B - _transom_height + gs_UTrans_w, 10 * not(SashOffset_02) + 8 * (SashOffset_02 > 0),
				-A/2 + gs_frame_width, B - _transom_height, frameMask * not(SashOffset_01) + 8 * (SashOffset_01 > 0)

			if SashOffset_01 > EPS then put	-A/2 + gs_frame_width + SashOffset_01, B - _transom_height - SashOffset_01, frameMask

			if bSimpleSashVerMull then
				put	-SimpleSashMullWidth/2, B - _transom_height - SashOffset_01, 10,
					SimpleSashMullWidth/2, B - _transom_height - SashOffset_01, frameMask
			endif

			if SashOffset_01 > EPS then put	A/2 - gs_frame_width - SashOffset_01, B - _transom_height - SashOffset_01, 10

			put	A/2 - gs_frame_width, B - _transom_height, 10 - 2 * (SashOffset_01 > 0),
				A/2 - gs_frame_width, B - _transom_height + gs_UTrans_w, frameMask * not(SashOffset_02) + 8 * (SashOffset_02 > 0)

			if SashOffset_02 > EPS then put	 A/2 - gs_frame_width - SashOffset_02, B - _transom_height + gs_UTrans_w + SashOffset_02, frameMask,
											-A/2 + gs_frame_width + SashOffset_02, B - _transom_height + gs_UTrans_w + SashOffset_02, 10
			base
			cprism_ frameMatTop, frameMatBottom, frameMat, nsp/3, frameThk,
					get(nsp)
			gosub 2000

			lin_ 0,0,0, 0,0,0
		endif

		addz frameThk
		if loopNum > 1 then
			frameThk = frameThk2
			frameMatTop		= frameMat2
			frameMatBottom	= frameMat2
			frameMat		= frameMat2
			frameMask = frameMask2
		endif
	next i
	del loopNum


	for i=1 to numCuts
		cutend
	next i
endgroup


! ==============================================================================
! Sash cavities in Frame
! ==============================================================================

group "harcsi"

	if not(WIDO_REVEAL_SIDE) then
		material gs_frame_mat
	else
		material gs_frame_mat2
	endif

	if iSashCutType_01 = SASHCUT_REBATE then
		addz gs_frame_thk - gs_rebate_depth
		if gs_UTrans then
			prism_ 4, gs_frame_thk,
				-A/2 + gs_frame_width - gs_rebate_width,	gs_frame_width - gs_rebate_width,	15,
				 A/2 - gs_frame_width + gs_rebate_width,	gs_frame_width - gs_rebate_width,	15,
				 A/2 - gs_frame_width + gs_rebate_width,	B - _transom_height + gs_rebate_width,		15,
				-A/2 + gs_frame_width - gs_rebate_width,	B - _transom_height + gs_rebate_width,		15
		else
			prism_	6, gs_frame_thk,
				 A/2 - gs_frame_width + gs_rebate_width,	gs_frame_width - gs_rebate_width,	15,
				 A/2 - gs_frame_width + gs_rebate_width,	gs_shoulderHeight - dyFrameWidth + dyRebateWidth,	79,
				 0,	B - archRadius, 979,
				 0, B - gs_frame_width + gs_rebate_width, 3079,
				-A/2 + gs_frame_width - gs_rebate_width, gs_shoulderHeight - dyFrameWidth + dyRebateWidth, 3079,
				-A/2 + gs_frame_width - gs_rebate_width, gs_frame_width - gs_rebate_width,	15
		endif
		del 1
	endif
	if iSashCutType_01 = SASHCUT_MIDDLE then
		addz gs_frame_thk/2
		prism_ 4, gs_frame_thk,
			-A/2 + gs_frame_width,	gs_frame_width,	14,
			 A/2 - gs_frame_width,	gs_frame_width,	14,
			 A/2 - gs_frame_width,	B - _transom_height,		14,
			-A/2 + gs_frame_width,	B - _transom_height,		14
		if not(WIDO_REVEAL_SIDE) then
			material gs_frame_mat2
		else
			material gs_frame_mat
		endif
		prism_ 4, -gs_frame_thk,
			-A/2 + gs_frame_width,	gs_frame_width,	11,
			 A/2 - gs_frame_width,	gs_frame_width,	11,
			 A/2 - gs_frame_width,	B - _transom_height,		11,
			-A/2 + gs_frame_width,	B - _transom_height,		11
		del 1
	endif
	if iSashCutType_02 = SASHCUT_REBATE & gs_UTrans then
		addz gs_frame_thk - gs_rebate_depth
		prism_	6, gs_frame_thk,
			 A/2 - gs_frame_width + gs_rebate_width,	B - _transom_height + gs_UTrans_w - gs_rebate_width,	15,
			 A/2 - gs_frame_width + gs_rebate_width,	gs_shoulderHeight - dyFrameWidth + dyRebateWidth,	79,
			 0,	B - archRadius, 979,
			 0, B - gs_frame_width + gs_rebate_width, 3079,
			-A/2 + gs_frame_width - gs_rebate_width, gs_shoulderHeight - dyFrameWidth + dyRebateWidth, 3079,
			-A/2 + gs_frame_width - gs_rebate_width, B - _transom_height + gs_UTrans_w - gs_rebate_width, 15
		del 1
	endif
endgroup



pen gs_frame_pen
sect_fill gs_fillFr, gs_penFr_bg, gs_penFr_fg, gs_frame_pen_cont

if lod3D = 2 then	! Detailed
	placegroup subgroup("frame","harcsi")
else
	placegroup "frame"
endif


! =============================================================================
! Draw Casement
! =============================================================================

if lod3D = 5 then	! Chinese
	sh_sect_fill_type	= gs_fillShCover
	sh_sect_fill_fg		= gs_penShCov_fg
	sh_sect_fill_bg		= gs_penShCov_bg
else
	sh_sect_fill_type	= gs_fillSash
	sh_sect_fill_fg		= gs_penSash_fg
	sh_sect_fill_bg		= gs_penSash_bg
endif



if gs_UTrans then

! =============================================================================
! Transom Sash
! =============================================================================
	add 0, B - _transom_height + gs_UTrans_w - gs_rebate_width, gs_frame_thk
	if bSemicircularArchtop then
		call "Casement_Half_Round" parameters	A = A-2*gs_frame_width+2*gs_rebate_width,
												B = _transom_height - gs_UTrans_w - gs_frame_width + 2 * gs_rebate_width,
			h					= 0,
			CasementID			= 2,
			lod3D				= lod3D,
			gs_full_edit		= gs_full_edit,
			gs_rebate_width		= gs_rebate_width,
			gs_rebate_depth		= gs_rebate_depth,
			gs_sash_thk			= gs_sash_thk,
			gs_sash_width		= gs_sash_width,
			gs_frame_thk		= gs_frame_thk,
			gs_frame_width		= gs_frame_width,
			iMullionStyle_02	= iMullionStyle_02,
			iMullionPosition	= iMullionPosition,
			gw					= gw,
			gth					= gth,
			gs_glass_thk		= gs_glass_thk,
			vgn_02				= vgn_02,
			hgn_02				= hgn_02,
			openingAngle_02		= openingAngle_02,
			gs_optype_m_02		= gs_optype_m_02,
			gs_frame_pen		= gs_sash_pen,
			gs_glass_pen		= gs_glass_pen,
			gs_frame_mat		= gs_sash_mat2,
			gs_frame_mat2		= gs_sash_mat,
			gs_grill_mat		= gs_grill_mat,
			gs_grill_mat2		= gs_grill_mat2,
			gs_glass_mat		= gs_glass_mat,
			gs_panel_mat		= gs_panel_mat,
			gs_panel_mat2		= gs_panel_mat2,
			gs_fillSash			= sh_sect_fill_type,
			gs_penSash_bg		= sh_sect_fill_bg,
			gs_penSash_fg		= sh_sect_fill_fg,
			gs_frame_pen_cont	= gs_frame_pen_cont,
			bOpeningDirectionInside	= WIDO_REVEAL_SIDE,
			gs_SashText_typ_num	= gs_SashText_typ_num,
			gs_cust_panel_02	= gs_cust_panel_02,
			res					= gs_res,
			bOplines3d			= bOplines3d,
			opLineType3dIn		= opLineType3dIn,
			opLineType3dOut		= opLineType3dOut,
			gs_opline_style_m	= gs_opline_style_m,
			gs_opLinePen		= gs_opLinePen
	else
		sh_unID		= 1020
		call "Casement_Arched" parameters	A = A-2*gs_frame_width+2*gs_rebate_width,
											B = _transom_height - gs_UTrans_w - gs_frame_width + 2 * gs_rebate_width,
			CasementID 				= 2,
			lod3D					= lod3D,
			gs_rebate_width			= gs_rebate_width,
			gs_rebate_depth			= gs_rebate_depth,
			gs_sash_thk				= gs_sash_thk,
			gs_sash_width			= gs_sash_width,
			gs_frame_thk			= gs_frame_thk,
			h						= gs_shoulderHeight - dyFrameWidth + dyRebateWidth - (B - _transom_height + gs_UTrans_w - gs_rebate_width),
			iMullionStyle_02		= iMullionStyle_02,
			iMullionPosition		= iMullionPosition,
			gw						= gw,
			gth						= gth,
			gs_glass_thk			= gs_glass_thk,
			vgn_02					= vgn_02,
			hgn_02					= hgn_02,
			openingAngle_02			= openingAngle_02,
			openingAngle2_02		= openingAngle2_02,
			gs_optype_m_02			= gs_optype_m_02,
			res						= gs_res,
			gs_full_edit			= 1,
			gs_frame_pen			= gs_frame_pen,
			gs_sash_pen				= gs_sash_pen,
			gs_glass_pen			= gs_glass_pen,
			gs_glass_pen_cont		= gs_frame_pen_cont,
			gs_frame_mat			= gs_sash_mat2,
			gs_frame_mat2			= gs_sash_mat,
			gs_grill_mat			= gs_grill_mat,
			gs_grill_mat2			= gs_grill_mat2,
			gs_glass_mat			= gs_glass_mat,
			gs_panel_mat			= gs_panel_mat,
			gs_panel_mat2			= gs_panel_mat2,
			gs_sash_pen_cont		= gs_frame_pen_cont,
			gs_fillSash				= sh_sect_fill_type,
			gs_penSash_bg			= sh_sect_fill_bg,
			gs_penSash_fg			= sh_sect_fill_fg,
			gs_frame_pen_cont		= gs_frame_pen_cont,
			bOpeningDirectionInside	= WIDO_REVEAL_SIDE,
			gs_SashText_typ_num		= gs_SashText_typ_num,
			gs_cust_panel_02		= gs_cust_panel_02,
			sh_unID 				= sh_unID,
			bOplines3d				= bOplines3d,
			opLineType3dIn			= opLineType3dIn,
			opLineType3dOut			= opLineType3dOut,
			gs_opline_style_m		= gs_opline_style_m,
			gs_opLinePen			= gs_opLinePen
	endif
	del 1

! =============================================================================
! Main Sash
! =============================================================================

	sh_unID		= 1010

	add 0, gs_frame_width - gs_rebate_width, gs_frame_thk
	call "Casement_rectangular" parameters	A = A - 2*gs_frame_width + 2*gs_rebate_width,
											B = B - _transom_height - gs_frame_width + 2*gs_rebate_width,
		CasementID 						= 1,
		lod3D							= lod3D,
		bEdwardianSash					= 0,
		gs_rebate_width					= gs_rebate_width,
		gs_rebate_depth					= gs_rebate_depth,
		gs_sash_thk						= gs_sash_thk,
		gs_sash_width					= gs_sash_width,
		gs_frame_thk					= gs_frame_thk,
		iMullionStyle_01				= iMullionStyle_01,
		iMullionPosition				= iMullionPosition,
		gs_horiz_div_height_01			= gs_horiz_div_height_01,
		gw								= gw,
		gth								= gth,
		gs_glass_thk					= gs_glass_thk,
		vgn_01							= vgn_01,
		hgn_01							= hgn_01,
		vgn2_01							= vgn2_01,
		hgn2_01							= hgn2_01,
		vergrid_01						= vergrid_01,
		horgrid_01						= horgrid_01,
		vergrid2_01						= vergrid2_01,
		horgrid2_01						= horgrid2_01,
		gs_glass_pen					= gs_glass_pen,
		gs_glass_pen_cont				= gs_frame_pen_cont,
		ghe								= 1,
		isVentilationProfileInSash_01	= isVentilationProfileInSash_01,
		isVentilationProfileInSash_02	= 0,
		isVentilationProfileInSash_03	= 0,
		isVentilationProfileInSash_04	= 0,
		isVentilationProfileInSash_05	= 0,
		isVentilationProfileInSash_06	= 0,
		isVentilationProfileInSash_07	= 0,
		isVentilationProfileInSash_08	= 0,
		isVentilationProfileInSash_09	= 0,
		isVentilationProfileInSash_10	= 0,
		isVentilationProfileInSash_11	= 0,
		VentilationProfileHeight 		= VentilationProfileHeight,
		openingAngle_01					= openingAngle_01,
		openingAngle2_01				= openingAngle2_01,
		openingLength_01				= openingLength_01,
		openingLength2_01				= openingLength2_01,
		gs_optype_m_01					= gs_optype_m_01,
		gs_full_edit					= gs_full_edit,
		gs_frame_pen					= gs_frame_pen,
		gs_sash_pen						= gs_sash_pen,
		gs_sash_mat						= gs_sash_mat,
		gs_sash_mat2					= gs_sash_mat2,
		gs_grill_mat					= gs_grill_mat,
		gs_grill_mat2					= gs_grill_mat2,
		gs_glass_mat					= gs_glass_mat,
		gs_ventProfile_mat				= gs_ventProfile_mat,
		gs_sash_pen_cont				= gs_frame_pen_cont,
		gs_fillSash						= sh_sect_fill_type,
		gs_penSash_bg					= sh_sect_fill_bg,
		gs_penSash_fg					= sh_sect_fill_fg,
		gs_frame_pen_cont				= gs_frame_pen_cont,
		gs_ventProfile_fill				= gs_ventProfile_fill,
		gs_ventProfile_pen_fg			= gs_ventProfile_pen_fg,
		gs_ventProfile_pen_bg			= gs_ventProfile_pen_bg,
		bOpeningDirectionInside			= WIDO_REVEAL_SIDE,
		gs_SashText_typ_num				= gs_SashText_typ_num,
		gs_cust_panel_01				= gs_cust_panel_01,
		gs_cust_panel2_01				= gs_cust_panel2_01,
		gs_bMirr_cust_panel_01			= gs_bMirr_cust_panel_01,
		gs_bMirr_cust_panel2_01			= gs_bMirr_cust_panel2_01,
		sh_unID							= sh_unID,
		bOplines3d						= bOplines3d,
		opLineType3dIn					= opLineType3dIn,
		opLineType3dOut					= opLineType3dOut,
		gs_opline_style_m				= gs_opline_style_m,
		gs_opLinePen					= gs_opLinePen,
		gs_panel_mat					= gs_panel_mat,
		gs_panel_mat2					= gs_panel_mat2,
		iLouverStyle					= iLouverStyle,
		gs_louver_thk					= gs_louver_thk,
		gs_louver_width					= gs_louver_width,
		gs_louver_opening_angle			= gs_louver_opening_angle,
		gs_ventSashLouver_mat			= gs_ventSashLouver_mat
	del 1

else
	sh_unID		= 1010

	add 0, gs_frame_width - gs_rebate_width, gs_frame_thk
	call "Casement_Arched" parameters	A = A-2*gs_frame_width+2*gs_rebate_width,
										B = B-2*gs_frame_width+2*gs_rebate_width,
		CasementID 				= 1,
		lod3D					= lod3D,
		gs_rebate_width			= gs_rebate_width,
		gs_rebate_depth			= gs_rebate_depth,
		gs_sash_thk				= gs_sash_thk,
		gs_sash_width			= gs_sash_width,
		gs_frame_thk			= gs_frame_thk,
		h						= gs_shoulderHeight - dyFrameWidth + dyRebateWidth - gs_frame_width+gs_rebate_width,
		iMullionStyle_01		= iMullionStyle_01,
		iMullionPosition		= iMullionPosition,
		gw						= gw,
		gth						= gth,
		gs_glass_thk			= gs_glass_thk,
		vgn_01					= vgn_01,
		hgn_01					= hgn_01,
		openingAngle_01			= openingAngle_01,
		openingAngle2_01		= openingAngle2_01,
		gs_optype_m_01			= gs_optype_m_01,
		res						= gs_res,
		gs_full_edit			= 1,
		gs_frame_pen			= gs_frame_pen,
		gs_sash_pen				= gs_sash_pen,
		gs_glass_pen			= gs_glass_pen,
		gs_glass_pen_cont		= gs_frame_pen_cont,
		gs_frame_mat			= gs_sash_mat2,
		gs_frame_mat2			= gs_sash_mat,
		gs_grill_mat			= gs_grill_mat,
		gs_grill_mat2			= gs_grill_mat2,
		gs_glass_mat			= gs_glass_mat,
		gs_panel_mat			= gs_panel_mat,
		gs_panel_mat2			= gs_panel_mat2,
		gs_sash_pen_cont		= gs_frame_pen_cont,
		gs_fillSash				= sh_sect_fill_type,
		gs_penSash_bg			= sh_sect_fill_bg,
		gs_penSash_fg			= sh_sect_fill_fg,
		gs_frame_pen_cont		= gs_frame_pen_cont,
		bOpeningDirectionInside	= WIDO_REVEAL_SIDE,
		gs_SashText_typ_num		= gs_SashText_typ_num,
		gs_cust_panel_01		= gs_cust_panel_01,
		sh_unID 				= sh_unID,
		bOplines3d				= bOplines3d,
		opLineType3dIn			= opLineType3dIn,
		opLineType3dOut			= opLineType3dOut,
		gs_opline_style_m		= gs_opline_style_m,
		gs_opLinePen			= gs_opLinePen
	del 1
endif

! =============================================================================
end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end
! =============================================================================


1000:
! --- Texture directions -------------------------------------------------------

vert 0, 0, 0
vert 0, 1, 0
vert 1, 0, 0
vert 0, 0, 1
coor 2, -1, -2, -3, -4
body 1

return

2000:
! --- Texture directions -------------------------------------------------------

vert 0, 0, 0
vert 1, 0, 0
vert 0, 1, 0
vert 0, 0, 1
coor 2, -1, -2, -3, -4
body 1

return

