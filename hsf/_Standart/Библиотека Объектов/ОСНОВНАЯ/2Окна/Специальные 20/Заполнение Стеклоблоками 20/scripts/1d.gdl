
! Contact person: <SzL, NJ>

if GLOB_SCRIPT_TYPE = 7 | GLOB_SCRIPT_TYPE = 8 then goto "MasterEnd"	! forward migration, backward migration

! =============================================================================
! Main Definitions
! =============================================================================

EPS = 0.0001

gs_IsCurved			= 1
bDisabeMirroring	= 0
iWindowShape		= 0
bParalellInCurvedWalls = 0

bEnableParapetInset			= 1
bEnableMasonryArch			= 0
bEnableFaschen				= 0
bEnableSill					= 0
bEnableBoard				= 0
bEnableThreshold			= 0
bEnableCasing				= 0
bEnableShutter				= 0
bEnableCustomCornerLeft		= 0
bEnableCustomCornerRight	= 0


gs_fillFr	= gs_fillFr * gs_bFills
gs_fillSash	= gs_fillSash * gs_bFills

gs_sill_curved = 1
gs_board_curved = 1

DET2D_FS_OFF				= 0
DET2D_FS_SCALESENS			= -1
DET2D_FS_SIMPLE_ONE			= 11
DET2D_FS_SIMPLE_TWO			= 12
DET2D_FS_MIDDLE				= 21
DET2D_FS_MIDDLE_USA			= 22
DET2D_FS_DETAILED			= 30
DET2D_FS_DETAILED_FIX_GRID	= 31
DET2D_FS_DETAILED_USA		= 32
DET2D_FS_SIMPLE_CHI			= 51
DET2D_FS_DETAILED_CHI		= 52

! iLoD2D
SYMBW_OFF					= 0
SYMBW_SCALESENS				= 1
SYMBW_S_1LINE				= 11
SYMBW_S_2LINE				= 12
SYMBW_S_CENTERLINE			= 13
SYMBW_S_2LINE_ACC			= 14
SYMBW_S_5					= 15
SYMBW_S_6					= 16
SYMBW_S_7					= 17
SYMBW_S_8					= 18
SYMBW_S_9					= 19
SYMBW_M_2LINE_NOGLASS		= 21
SYMBW_M_2LINE_GLASS			= 22
SYMBW_M_FRAMESASH			= 23
SYMBW_M_2LINE_FRAME			= 24
SYMBW_M_5					= 25
SYMBW_M_6					= 26
SYMBW_M_7					= 27
SYMBW_M_8					= 28
SYMBW_M_9					= 29
SYMBW_D_SGLASS				= 31
SYMBW_D_2GLASS				= 32
SYMBW_D_2LINE_HS			= 33
SYMBW_D_NOGLASS				= 34
SYMBW_D_REBATEONGLASS		= 35
SYMBW_D_2GLASS_OVERLAP		= 36
SYMBW_D_7					= 37
SYMBW_D_8					= 38
SYMBW_D_9					= 39

! iDWDet3D
DETLEVEL_DW3D_SCALESENS    = 1
DETLEVEL_DW3D_DETAILED     = 2
DETLEVEL_DW3D_SIMPLE       = 3
DETLEVEL_DW3D_OFF          = 4
DETLEVEL_DW3D_CHI_SIMPLE   = 5
DETLEVEL_DW3D_CHI_DETAILED = 6

! iTypeDemolitionFill
RENOVATION_FILL_EXIST		= 1
RENOVATION_FILL_DEMOLISHED	= 2
RENOVATION_FILL_NEW			= 3
RENOVATION_FILL_NEW_FULL	= 4


! =============================================================================
! Localization
! =============================================================================

dim stDetail[6]
	stDetail[2] = `Детальный`
	stDetail[3] = `Простой`
	stDetail[4] = `Откл.`
	stDetail[5] = `Китайский Простой`
	stDetail[6] = `Китайский Детальный`

! const values for parameter: iTypeDimensionInput
BLOCKNUM_WITH_GAPSIZE   = 1
BLOCKNUM_WITH_BLOCKSIZE = 2

!!!Minimal values
minblockWidth = 0.07
minblockHeight = 0.07
minjointThickness = 0.005
minhorizBlock_n = 1
minverticalBlock_n = 1


DIM stStructInput[2]
	stStructInput[1] = `Количество Блоков и Размеры Зазоров`
	stStructInput[2] = `Количество и Размеры Блоков`

values "horizBlock_n" range [minhorizBlock_n, int((ac_unit_width-minjointThickness)/(minblockWidth+minjointThickness))]
values "verticalBlock_n" range [minverticalBlock_n, int((ac_unit_height-minjointThickness)/(minblockHeight+minjointThickness))]

if abs(WIDO_ORIG_DIST)>EPS then
	r0=abs(WIDO_ORIG_DIST)

	alpha=2*atn(a/2/r0)
	r=(a/2)/sin(alpha/2)
	ia=2*r*pi*alpha/360
endif

if iTypeDimensionInput = BLOCKNUM_WITH_BLOCKSIZE then
	values "horizBlock_n" range [minhorizBlock_n, int((ac_wallhole_width-minjointThickness)/(minblockWidth+minjointThickness))]
	values "verticalBlock_n" range [minverticalBlock_n, int((ac_wallhole_height-minjointThickness)/(minblockHeight+minjointThickness))]

	if horizBlock_n < 1 then horizBlock_n = 1
	if verticalBlock_n < 1 then verticalBlock_n = 1

	values "blockWidth" range [minblockWidth, (ac_wallhole_width-(minjointThickness*(horizBlock_n+1)))/horizBlock_n]
	values "blockHeight" range [minblockHeight, (ac_wallhole_height-(minjointThickness*(verticalBlock_n+1)))/verticalBlock_n]

	if abs(WIDO_ORIG_DIST)>EPS then
		hGapSize=(ia-(horizBlock_n*blockWidth))/(horizBlock_n+1)
	else
		hGapSize = (ac_unit_width - (horizBlock_n*blockWidth))/(horizBlock_n+1)
	endif
	parameters hGapSize = hGapSize

	vGapSize = (ac_unit_height - (verticalBlock_n*blockHeight))/(verticalBlock_n+1)
	parameters vGapSize = vGapSize
else
	values "hGapSize" range (0, (ac_unit_width-(horizBlock_n*minblockWidth))/(horizBlock_n+1)]
	values "vGapSize" range (0, (ac_unit_height-(verticalBlock_n*minblockHeight))/(verticalBlock_n+1)]

	if abs(WIDO_ORIG_DIST)>EPS then
		blockWidth = (ia-hGapSize*(horizBlock_n+1))/horizBlock_n
	else
		blockWidth = (ac_unit_width-hGapSize*(horizBlock_n+1))/horizBlock_n
	endif
	parameters blockWidth = blockWidth

	blockHeight = (ac_unit_height-vGapSize*(verticalBlock_n+1))/verticalBlock_n
	parameters blockHeight = blockHeight
endif


"MasterEnd":
