
! Contact person: <SzL, NJ>

! =============================================================================

gs_fillFr		= gs_bFills * gs_fillFr
gs_fillSh		= gs_bFills * gs_fillSash
gs_penSh_fg		= gs_bFills * gs_penSash_fg
gs_penSh_bg		= gs_bFills * gs_penSash_bg
gs_fillShCover	= gs_bFills * gs_fillShCover


if iTypeDemolitionFill = RENOVATION_FILL_DEMOLISHED then		! Demolition
	line_type gs_Demolition_linetype
else
	line_type 1
endif

! =============================================================================
! GS Window Functions
! =============================================================================

call "GS Window Functions",
	parameters all	gs_IsCurved					= gs_IsCurved,
					bDisabeMirroring			= bDisabeMirroring,
					bEnableParapetInset			= bEnableParapetInset,
					bEnableMasonryArch			= bEnableMasonryArch,
					bEnableFaschen				= bEnableFaschen,
					bEnableSill					= bEnableSill,
					bEnableBoard				= bEnableBoard,
					bEnableThreshold			= bEnableThreshold,
					bEnableCasing				= bEnableCasing,
					bEnableShutter				= bEnableShutter,
					bEnableCustomCornerLeft		= bEnableCustomCornerLeft,
					bEnableCustomCornerRight	= bEnableCustomCornerRight,
					bOneLineSymbolinMVO		= 1,
					gs_tolerance_left		= 0,
					gs_tolerance_right		= 0,
					gs_tolerance_upper		= 0,
					gs_tolerance_lower		= 0,
	returned_parameters	ac_unit_width,
						gs_frame_ovhg_left_out,
						gs_frame_ovhg_right_out,
						gs_frame_ovhg_left_in,
						gs_frame_ovhg_right_in,
						bMirrored,
						addPrmX, addPrmY,
						mulPrmX, mulPrmY,
						iLoD2D,

						gs_opLinePen,
						gs_iSwingType,
						gs_swingLineType,
						bShowAddHotspots, bShowUnitHotspots,
						bOneLineSymbolin2D

if iLoD2D = 0 then end

lod2D	= DET2D_FS_OFF
if iLoD2D = SYMBW_S_1LINE then				lod2D = DET2D_FS_SIMPLE_ONE 		! Simple - One Line --> INT 200
if iLoD2D = SYMBW_S_CENTERLINE then			lod2D = DET2D_FS_SIMPLE_ONE 		! Simple - Centerline --> SWE 200
if iLoD2D = SYMBW_S_2LINE_ACC then			lod2D = DET2D_FS_SIMPLE_TWO 		! Simple - Two Lines
if iLoD2D = SYMBW_S_2LINE then				lod2D = DET2D_FS_SIMPLE_CHI			! Chinese Simple
if iLoD2D = SYMBW_M_2LINE_GLASS then		lod2D = DET2D_FS_MIDDLE 			! Middle - without acc
if iLoD2D = SYMBW_M_2LINE_NOGLASS then		lod2D = DET2D_FS_SIMPLE_TWO 		! Middle - with acc --> INT 100
if iLoD2D = SYMBW_M_FRAMESASH then			lod2D = DET2D_FS_DETAILED			! NLD Middle
if iLoD2D = SYMBW_D_SGLASS then				lod2D = DET2D_FS_DETAILED 			! Detailed --> INT 50, DAN 20
if iLoD2D = SYMBW_D_REBATEONGLASS then		lod2D = DET2D_FS_DETAILED 			! Detailed --> NLD Detailed
if iLoD2D = SYMBW_D_SGLASS then				lod2D = DET2D_FS_DETAILED 			! Detailed --> INT 50, DAN 20
if iLoD2D = SYMBW_D_2GLASS then				lod2D = DET2D_FS_DETAILED 			! Detailed --> NOR 50
if iLoD2D = SYMBW_D_2LINE_HS then			lod2D = DET2D_FS_DETAILED_CHI		! Chinese Detailed

add2 addPrmX, addPrmY
mul2 mulPrmX, mulPrmY

mul2 1,-1
add2 0,WIDO_FRAME_THICKNESS

temp = gs_frame_ovhg_left_out
gs_frame_ovhg_left_out = gs_frame_ovhg_left_in
gs_frame_ovhg_left_in = temp

temp = gs_frame_ovhg_right_out
gs_frame_ovhg_right_out = gs_frame_ovhg_right_in
gs_frame_ovhg_right_in = temp

if iTypeDemolitionFill = RENOVATION_FILL_DEMOLISHED then gs_swingLineType = gs_Demolition_linetype	! Demolition
if iTypeDemolitionFill = RENOVATION_FILL_NEW & gs_bShowNewOnCC then end		! New


bListView = (GLOB_CONTEXT = 6 | GLOB_CONTEXT = 46)

! W Glass Block Wall.win

pen gs_frame_pen_cont

if horizBlock_n <= 0 or verticalBlock_n <= 0 then end


gs_wallhole_fill = gs_wallhole_fill * gs_bFills

origA = A
A = ac_wallhole_width
B = ac_wallhole_height

if abs(WIDO_ORIG_DIST) < EPS then

	halfA = A / 2

	! =============================================================================
	!Straight Wall
	! =============================================================================

	if lod2D <> 0 then
		if WIDO_REVEAL_SIDE then
			line2  -halfA - gs_frame_ovhg_left_out,	0,
					halfA + gs_frame_ovhg_right_out, 0
		else
			line2  -halfA - gs_frame_ovhg_left_in, 0,
					halfA + gs_frame_ovhg_right_in, 0
		endif

		if not(bOneLineSymbolin2D) then
			line2	-halfA - gs_frame_ovhg_left_in,-blockThickness,
					halfA + gs_frame_ovhg_right_in, -blockThickness
		endif

		if lod2D = DET2D_FS_SIMPLE_CHI | lod2D = DET2D_FS_DETAILED_CHI then
			pen gs_frame_pen_cont
			fill gs_fillShCover
			poly2_b 4, 2+4+64,gs_penShCov_fg, gs_penShCov_bg,
				-halfA - gs_frame_ovhg_left_out, 0, 0,
				halfA + gs_frame_ovhg_right_out, 0, 0,
				halfA + gs_frame_ovhg_right_in, -blockThickness, 0,
				-halfA - gs_frame_ovhg_left_in, -blockThickness, 0
		else
			if not(bOneLineSymbolin2D) then
				fill gs_fillGlass
				poly2_b 4, 2+4+64,gs_penGlass_fg,gs_penGlass_bg,
					-halfA - gs_frame_ovhg_left_out, 0, 0,
					halfA + gs_frame_ovhg_right_out, 0, 0,
					halfA + gs_frame_ovhg_right_in, -blockThickness, 0,
					-halfA - gs_frame_ovhg_left_in, -blockThickness, 0
			endif
		endif

		if bListView then
			line2 -a/2,0, -a/2,-blockThickness
			line2  a/2,0,  a/2,-blockThickness
		endif

		if bShowUnitHotspots then
			hotspot2 -a/2,  0, 100
			hotspot2  a/2,  0, 101
			hotspot2 -a/2, -blockThickness, 102
			hotspot2  a/2, -blockThickness, 103
		endif


		t1=(A-(horizBlock_n*blockWidth))/(horizBlock_n+1)
		t2=(B-(verticalBlock_n*blockHeight))/(verticalBlock_n+1)

		if t1 > 0 & t2 > 0 then

			add2 -a/2,0
			if lod2D > 29 & not(lod2D = DET2D_FS_SIMPLE_CHI | lod2D = DET2D_FS_DETAILED_CHI) then	! 1:50

				line2 t1,0,t1,-blockThickness
				line2 a-t1,0,a-t1,-blockThickness

				fill gs_fillFr
				i=0 !t1+blockWidth
				for k=1 to horizBlock_n step 1
					add2 i,0
					line2 0,0,0,-blockThickness
					line2 t1,0,t1,-blockThickness

					poly2_b 4, 2+4+64,gs_penFr_fg,gs_penFr_bg,
						-0,0,0,
						0,-blockThickness,0,
						t1,-blockThickness,0,
						t1,0,0

					if k = horizBlock_n then
						add2 t1+blockWidth,0
						poly2_b 4, 2+4+64,gs_penFr_fg,gs_penFr_bg,
							-0,0,1,
							0,-blockThickness,1,
							t1,-blockThickness,1,
							t1,0,1
						del 1
					endif

					del 1
					i=i+t1+blockWidth
				next k
			endif

			if lod2D > 11 and lod2D < 30 then	! 1:100

				i=(1.5*t1)+blockWidth
				for k=1 to horizBlock_n-1 step 1
					add2 i,0
					line2 0,0,0,-blockThickness
					del 1
					i=i+t1+blockWidth
				next k
			endif
			del 1

		endif
	endif

	del 4

else

	! =============================================================================
	! Curved Wall
	! =============================================================================

	del 4

	if lod2D <> 0 then
		r0 = abs(WIDO_ORIG_DIST)
		if WIDO_ORIG_DIST < 0 then
			r0=r0 + blockThickness
		else
			r0=r0 - blockThickness
		endif
		r0 = abs(WIDO_ORIG_DIST)

		if SYMB_ROTANGLE > EPS then
			alpha=2*atn(origA/2/(r0 - WIDO_FRAME_THICKNESS))
		else
			alpha=2*atn(origA/2/r0)
		endif

		if WIDO_ORIG_DIST > 0 then
			blockThickness = -blockThickness
			mul2 1,-1
		endif

		if SYMB_ROTANGLE > EPS then
			alpha=2*atn(origA/2/(r0 - WIDO_FRAME_THICKNESS))
			if WIDO_REVEAL_SIDE then
				r=(origA/2)/sin(alpha/2) + WIDO_FRAME_THICKNESS
			else
				r=(origA/2)/sin(alpha/2) + WIDO_FRAME_THICKNESS - blockThickness + blockThickness*cos(alpha/2)
			endif
		else
			alpha=2*atn(origA/2/r0)
			if WIDO_REVEAL_SIDE then
				r=(origA/2)/sin(alpha/2) + blockThickness - blockThickness*cos(alpha/2)
			else
				r=(origA/2)/sin(alpha/2)
			endif
		endif

		_symbolLineCorr	= 0
		signRotAngle	= (abs(SYMB_ROTANGLE - 180) < EPS) - not(SYMB_ROTANGLE > EPS)
		if bOneLineSymbolin2D then _symbolLineCorr = addPrmY * signRotAngle

		iA = 2*r*PI*alpha/360	! Length on arch

		if not(bOneLineSymbolin2D) then arc2 0,-r0,r,90-(alpha/2),90+(alpha/2)
		arc2 0,-r0,r-blockThickness + _symbolLineCorr,90-(alpha/2),90+(alpha/2)

		if bListView then
			line2	-r*sin(alpha/2), r*cos(alpha/2)-r0,
					-(r-blockThickness)*sin(alpha/2), (r-blockThickness)*cos(alpha/2)-r0
			line2	 r*sin(alpha/2), r*cos(alpha/2)-r0,
					 (r-blockThickness)*sin(alpha/2), (r-blockThickness)*cos(alpha/2)-r0
		endif

		hotspot2 0, (a/2)*(1/tan((180-alpha/2)/2)), 999

		if bShowUnitHotspots then
			hotspot2  -r*sin(alpha/2),	r*cos(alpha/2)-r0,	100
			hotspot2   r*sin(alpha/2),	r*cos(alpha/2)-r0,	101
			hotspot2  -(r-blockThickness)*sin(alpha/2), (r-blockThickness)*cos(alpha/2)-r0,	102
			hotspot2   (r-blockThickness)*sin(alpha/2), (r-blockThickness)*cos(alpha/2)-r0,	103
		endif

		if not(bOneLineSymbolin2D) then
			fill gs_fillGlass
			poly2_b 6, 2+4+64,gs_penGlass_fg,gs_penGlass_bg,
				-r*sin(alpha/2), r*cos(alpha/2)-r0, 0,
				-(r-blockThickness)*sin(alpha/2), (r-blockThickness)*cos(alpha/2)-r0, 0,
				 0,-r0,900,
				 (r-blockThickness)*sin(alpha/2), (r-blockThickness)*cos(alpha/2)-r0,3000,
				 r*sin(alpha/2),	r*cos(alpha/2)-r0,0,
				-r*sin(alpha/2), r*cos(alpha/2)-r0,3000
		endif

		t1=(iA-(horizBlock_n*blockWidth))/(horizBlock_n+1)
		t2=(B-(verticalBlock_n*blockHeight))/(verticalBlock_n+1)

		if t1 > 0 & t2 > 0 then

			beta=(blockWidth*360)/(2*r*pi)
			beta1=(t1*360)/(2*r*pi)

			rot2 alpha/2
			add2 -r0*sin(alpha/2),-r0*cos(alpha/2)

			if lod2D > 29 & not(lod2D = DET2D_FS_SIMPLE_CHI | lod2D = DET2D_FS_DETAILED_CHI) then	! 1:50
				fill gs_fillFr
				for k=1 to horizBlock_n + 1 step 1
					rot2 -beta1
					poly2_b 4, 1+2+4+64,gs_penFr_fg,gs_penFr_bg,
						0,r,1,
						0,r-blockThickness,1,
						-t1,r-blockThickness,1,
						-t1,r,1

					rot2 -beta
				next k
				del 2 * (horizBlock_n + 1)
			endif

			if lod2D < 30 & lod2D > 11 then	! 1:100

				if horizBlock_n > 1 then
					rot2 -(1.5*beta1) - beta
					for k=1 to horizBlock_n - 1 step 1
						line2 0,r,0,r-blockThickness
						rot2 -beta1 - beta
					next k
					del horizBlock_n
				endif
			endif

			del 2
		endif
	endif
endif


