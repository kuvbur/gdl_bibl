

! =============================================================================

lod3D = 0										! Don't draw anything
if (GLOB_VIEW_TYPE = 9 & GLOB_PREVIEW_MODE = 0) then	! in case of Surface IS Calculation
	lod3D = 2	! Detailed
else
	if iDWDet3D = DETLEVEL_DW3D_SIMPLE then lod3D = 1	! Simple
	if iDWDet3D = DETLEVEL_DW3D_DETAILED then lod3D = 2	! Detailed
	if iDWDet3D = DETLEVEL_DW3D_CHI_SIMPLE | iDWDet3D = DETLEVEL_DW3D_CHI_DETAILED then
		if (GLOB_CONTEXT = 4 | GLOB_CONTEXT = 24 | GLOB_CONTEXT = 6) then
			lod3D = 5								! Chinese
		else
			lod3D = 2
		endif
	endif
endif

gs_fillFr		= gs_bFills * gs_fillFr
gs_penFr_fg		= gs_bFills * gs_penFr_fg
gs_penFr_bg		= gs_bFills * gs_penFr_bg

gs_fillSash		= gs_bFills * gs_fillSash
gs_penSash_fg	= gs_bFills * gs_penSash_fg
gs_penSash_bg	= gs_bFills * gs_penSash_bg

if gs_fillFr < 1	then gs_fillFr = SYMB_FILL
if gs_penFr_bg < 1	then gs_penFr_bg = SYMB_FBGD_PEN
if gs_penFr_fg < 1	then gs_penFr_fg = SYMB_FILL_PEN

if gs_fillGlass < 1		then gs_fillGlass = SYMB_FILL
if gs_penGlass_fg < 1	then gs_penGlass_fg = SYMB_FBGD_PEN
if gs_penGlass_bg < 1	then gs_penGlass_bg = SYMB_FILL_PEN

origA = A
A = ac_wallhole_width
B = ac_wallhole_height



! =============================================================================
! GS Window Functions
! =============================================================================

call "GS Window Functions",
	parameters all	iWindowShape				= iWindowShape,
					gs_IsCurved					= gs_IsCurved,
					bParalellInCurvedWalls		= bParalellInCurvedWalls,
					lod3D						= lod3D,
					bDisabeMirroring			= bDisabeMirroring,
					bEnableParapetInset			= bEnableParapetInset,
					bEnableMasonryArch			= bEnableMasonryArch,
					bEnableFaschen				= bEnableFaschen,
					bEnableSill					= bEnableSill,
					bEnableBoard				= bEnableBoard,
					bEnableThreshold			= bEnableThreshold,
					bEnableCasing				= bEnableCasing,
					bEnableShutter				= bEnableShutter,
					bEnableCustomCornerLeft		= bEnableCustomCornerLeft,
					bEnableCustomCornerRight	= bEnableCustomCornerRight,
	returned_parameters	ac_unit_width,
						ac_unit_height,
						gs_frame_ovhg_left_out,
						gs_frame_ovhg_right_out,
						gs_frame_ovhg_top_out,
						gs_frame_ovhg_bottom_out,
						gs_frame_ovhg_left_in,
						gs_frame_ovhg_right_in,
						gs_frame_ovhg_top_in,
						gs_frame_ovhg_bottom_in,
						bMirrored,
						xform11, xform12, xform13, xform14,
						xform21, xform22, xform23, xform24,
						xform31, xform32, xform33, xform34,

						bOplines3d, opLineType3dIn, opLineType3dOut, gs_opline_style_m, gs_opLinePen,
						bShowAddHotspots, bShowAddHotspotsForIS, bShowUnitHotspots


! =============================================================================
! Block for operator mode
! =============================================================================

if GLOB_CONTEXT > 40 & GLOB_CONTEXT < 50 then
	prism_ 4, WIDO_FRAME_THICKNESS,
		-ac_unit_width/2, 0, 15,
		 ac_unit_width/2, 0, 15,
		 ac_unit_width/2, ac_unit_height, 15,
		-ac_unit_width/2, ac_unit_height, 15

	end
endif


if lod3D = 0 then end
if horizBlock_n <= 0 or verticalBlock_n <= 0 then end

!xform	xform11, xform12, xform13, xform14,	! Do not remove comments!
!		xform21, xform22, xform23, xform24,
!		xform31, xform32, xform33, xform34
!rotx 90


dpi = (blockThickness-jointThickness)/2



if abs(WIDO_ORIG_DIST) < EPS then

! =============================================================================
! Straight Wall
! =============================================================================

	if bShowUnitHotspots then

		! ==============================================================================
		! --- Unit Hotspots ---
		! ==============================================================================
		unID=100
		bj = blockThickness - 2 * dpi

		addz dpi

		hotspot a/2, 0, 0, unID		:unID=unID+1
		hotspot -a/2, 0, 0, unID	:unID=unID+1
		hotspot a/2, 0, bj, unID	:unID=unID+1
		hotspot -a/2, 0, bj, unID	:unID=unID+1

		hotspot a/2, b, 0, unID		:unID=unID+1
		hotspot -a/2, b, 0, unID	:unID=unID+1
		hotspot a/2, b, bj, unID	:unID=unID+1
		hotspot -a/2, b, bj, unID

		del 1
	endif

	addx -a/2

	t1 = (A - (horizBlock_n * blockWidth))/(horizBlock_n + 1)
	t2 = (B - (verticalBlock_n * blockHeight))/(verticalBlock_n + 1)

	if lod3D = 5 | t1 <= 0 | t2 <= 0 then
		if lod3D = 5 then
			pen gs_frame_pen
			sect_fill gs_fillShCover, gs_penShCov_bg, gs_penShCov_fg, gs_frame_pen_cont
		else
			pen gs_glass_pen
			sect_fill gs_fillGlass, gs_penGlass_bg, gs_penGlass_fg, gs_glass_pen
		endif
		material gs_glass_mat

		prism_	4,blockThickness,
			0,	0,	15,
			a,	0,	15,
			a,	b,	15,
			0,	b,	15

		if lod3D = 5 then
			j = blockHeight+1.5*t2
			for e=1 to verticalBlock_n - 1
				lin_ 0,j,0, A,j,0
				lin_ 0,j,blockThickness, A,j,blockThickness
				j = j+blockHeight+t2
			next e

			i = blockWidth + 1.5*t1
			for k = 1 to horizBlock_n - 1
				lin_ i,0,0, i,B,0
				lin_ i,0,blockThickness, i,B,blockThickness
				i = i+blockWidth+t1
			next k
		endif
	else

		i = 0
		for k = 1 to horizBlock_n  step 1
			put t1+i,	t2,		15,
				t1+blockWidth+i,	t2,		15,
				t1+blockWidth+i,	t2+blockHeight,	15,
				t1+i,	t2+blockHeight,	15,
				t1+i,	t2,		-1

			j = blockHeight+t2
			for e = 1 to verticalBlock_n-1  step 1

				put t1+i,	t2+j,	15,
					t1+blockWidth+i,	t2+j,	15,
					t1+blockWidth+i,	t2+blockHeight+j,	15,
					t1+i,	t2+blockHeight+j,	15,
					t1+i,	t2+j,	-1

				j = j+blockHeight+t2
			next  e
			i = i+blockWidth+t1
		next  k

		addz   dpi

		sect_fill gs_fillFr, gs_penFr_bg, gs_penFr_bg, gs_frame_pen

		material gs_joint_mat
		pen gs_frame_pen
		prism_	5+nsp/3,jointThickness,
			0,	0,	15,
			a,	0,	15,
			a,	b,	15,
			0,	b,	15,
			0,	0,	-1,
			use(nsp)

		body 1
		del 1

		f = horizBlock_n*verticalBlock_n

		sect_fill gs_fillGlass, gs_penGlass_bg, gs_penGlass_fg, gs_glass_pen

		material gs_glass_mat
		pen gs_glass_pen

		for z = 1 to f step 1
			prism_  5, blockThickness,
				get(15)
		next  z
	endif

	body 1
	del 1

else

! =============================================================================
! Curved Wall
! =============================================================================

	r0 = abs(WIDO_ORIG_DIST)
	if WIDO_ORIG_DIST < 0 then
		r0=r0 + blockThickness
	else
		r0=r0 - blockThickness
	endif
	r0 = abs(WIDO_ORIG_DIST)

	if SYMB_ROTANGLE > EPS then
		alpha=2*atn(origA/2/(r0 - WIDO_FRAME_THICKNESS))
	else
		alpha=2*atn(origA/2/r0)
	endif

	if WIDO_ORIG_DIST > 0 then
		blockThickness = -blockThickness
	endif

	if SYMB_ROTANGLE > EPS then
		alpha=2*atn(origA/2/(r0 - WIDO_FRAME_THICKNESS))
		if WIDO_REVEAL_SIDE then
			rMod = 0
		else
			rMod = -blockThickness + blockThickness*cos(alpha/2)
		endif
	else
		alpha=2*atn(origA/2/r0)
		if WIDO_REVEAL_SIDE then
			rMod = blockThickness - blockThickness*cos(alpha/2)
		else
			rMod = 0
		endif
	endif
	r = (origA/2) / sin(alpha/2) + rMod
	iA = 2*r*PI*alpha/360	! Length on arch
	iAB = iA * (1+(dpi-2*rMod)/r)
	iA2 = 2*(r+dpi)*PI*alpha/360

	if WIDO_ORIG_DIST > 0 then
		mulz -1
	endif

	t1 = (iA-(horizBlock_n * blockWidth))/(horizBlock_n + 1)
	t2 = (B-(verticalBlock_n * blockHeight))/(verticalBlock_n + 1)

	t1b = t1 * (1+(dpi-2*rMod)/r)
	ub = blockWidth * (1+(dpi-2*rMod)/r)


	resol 2 * WALL_RESOL

	add -origA/2, 0, (SYMB_ROTANGLE > EPS) * blockThickness
	roty -alpha/2
	addz -rMod + dpi

	if lod3D = 5 | t1 <= 0 | t2 <= 0 then
		if lod3D = 5 then
			pen gs_frame_pen
			sect_fill gs_fillShCover, gs_penShCov_bg, gs_penShCov_fg, gs_frame_pen_cont
		else
			pen gs_glass_pen
			sect_fill gs_fillGlass, gs_penGlass_bg, gs_penGlass_fg, gs_glass_pen
		endif

		iA3 = 2*(r-2*rMod)*PI*alpha/360

		addz -dpi
		bprism_  gs_glass_mat,gs_glass_mat,gs_glass_mat,
			5, abs(blockThickness), r-2*rMod,
			0,	0,	15,
			iA3,	0,	15,
			iA3,	B,	15,
			0,	B,	15,
			0,	0,	-1

		if lod3D = 5 then

			model wire
			add 0,0,-(r-2*rMod)
			rotx 90
			rotz -alpha/2
			addz -blockHeight-1.5*t2
			for e=1 to verticalBlock_n - 1
				arc (r-2*rMod),90-(alpha/2),90+(alpha/2)
				arc (r-2*rMod)+abs(blockThickness),90-(alpha/2),90+(alpha/2)
				addz -blockHeight-t2
			next e
			del 3 + verticalBlock_n

			i = blockWidth + 1.5*t1
			for k = 1 to horizBlock_n - 1

				alpha = i/2/PI/(r-2*rMod)*360
				x = (r-2*rMod) * sin(alpha)
				y = -(r-2*rMod) + (r-2*rMod) * cos(alpha)
				lin_ x,0,y, x,B,y

				x = (r-2*rMod + abs(blockThickness)) * sin(alpha)
				y = -(r-2*rMod) + (r-2*rMod + abs(blockThickness)) * cos(alpha)
				lin_ x,0,y, x,B,y
				i = i+blockWidth+t1
			next k
		endif

		del 1
		end
	endif

	i = 0

	for k = 1 to horizBlock_n  step 1
		put t1b+i,		t2,		15,
			t1b+ub+i,	t2,		15,
			t1b+ub+i,	t2+blockHeight,	15,
			t1b+i,		t2+blockHeight,	15,
			t1b+i,		t2,		-1

		j = blockHeight+t2
		for e = 1 to verticalBlock_n - 1  step 1

			put t1b+i,		t2+j,	15,
				t1b+ub+i,	t2+j,	15,
				t1b+ub+i,	t2+blockHeight+j,	15,
				t1b+i,		t2+blockHeight+j,	15,
				t1b+i,		t2+j,	-1

			j = j+blockHeight+t2
		next  e
		i = i+ub+t1b
	next  k

	sect_fill gs_fillFr, gs_penFr_bg, gs_penFr_bg, gs_frame_pen
	pen gs_frame_pen
	bprism_  gs_joint_mat,gs_joint_mat,gs_joint_mat,
		5+nsp/3, jointThickness, r-2*rMod+dpi,
		0,	0,	15,
		iAB,0,	15,
		iAB,B,	15,
		0,	B,	15,
		0,	0,	-1,

		get(nsp)

	body -1

	if WIDO_REVEAL_SIDE exor SYMB_ROTANGLE > EPS then
		t1 = t1 * (iAB / iA2)
		blockWidth = blockWidth * (iAB / iA2)
	endif

	i = 0

	for k = 1 to horizBlock_n  step 1

		put t1+i,	t2,		15,
			t1+blockWidth+i,	t2,		15,
			t1+blockWidth+i,	t2+blockHeight,	15,
			t1+i,	t2+blockHeight,	15,
			t1+i,	t2,		-1

		j = blockHeight+t2
		for e = 1 to verticalBlock_n-1  step 1

			put t1+i,	t2+j,	15,
				t1+blockWidth+i,	t2+j,	15,
				t1+blockWidth+i,	t2+blockHeight+j,	15,
				t1+i,	t2+blockHeight+j,	15,
				t1+i,	t2+j,	-1

			j = j+blockHeight+t2
		next  e

		i = i+blockWidth+t1
	next  k

	f = horizBlock_n*verticalBlock_n

	sect_fill gs_fillGlass, gs_penGlass_bg, gs_penGlass_fg, gs_glass_pen

	addz -dpi
	for z = 1 to f step 1
		pen gs_glass_pen
		bprism_ gs_glass_mat,gs_glass_mat,gs_glass_mat,5,abs(blockThickness),r-2*rMod,
			get(15)
	next  z
	del 1

	body -1

endif
