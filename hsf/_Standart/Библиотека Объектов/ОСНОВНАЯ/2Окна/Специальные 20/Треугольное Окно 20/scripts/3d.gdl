
! Contact person: <SzL, NJ>

! =============================================================================

lod3D = 0										! Don't draw anything
if (GLOB_VIEW_TYPE = 9 & GLOB_PREVIEW_MODE = 0) then	! in case of Surface IS Calculation
	lod3D = 2	! Detailed
else
	if iDWDet3D = DETLEVEL_DW3D_SIMPLE then lod3D = 1	! Simple
	if iDWDet3D = DETLEVEL_DW3D_DETAILED then lod3D = 2	! Detailed
	if iDWDet3D = DETLEVEL_DW3D_CHI_SIMPLE | iDWDet3D = DETLEVEL_DW3D_CHI_DETAILED then
		if (GLOB_CONTEXT = 4 | GLOB_CONTEXT = 24 | GLOB_CONTEXT = 6) then
			lod3D = 5								! Chinese
		else
			lod3D = 2
		endif
	endif
endif

gs_fillFr		= gs_bFills * gs_fillFr
gs_penFr_fg		= gs_bFills * gs_penFr_fg
gs_penFr_bg		= gs_bFills * gs_penFr_bg

gs_fillSash		= gs_bFills * gs_fillSash
gs_penSash_fg	= gs_bFills * gs_penSash_fg
gs_penSash_bg	= gs_bFills * gs_penSash_bg

if not(gs_shadow) then shadow off


! =============================================================================
! GS Window Functions
! =============================================================================

dim sillPoly[]
sillPoly[1] = 0

call "GS Window Functions",
	parameters all	iWindowShape			= iWindowShape,
					gs_IsCurved				= gs_IsCurved,
					bParalellInCurvedWalls	= bParalellInCurvedWalls,
					lod3D					= lod3D,
					bDisabeMirroring		= bDisabeMirroring,
					gs_posTopEdge_triangle	= tec,
	returned_parameters	ac_unit_width,
						ac_unit_height,
						gs_frame_ovhg_left_out,
						gs_frame_ovhg_right_out,
						gs_frame_ovhg_top_out,
						gs_frame_ovhg_bottom_out,
						gs_frame_ovhg_left_in,
						gs_frame_ovhg_right_in,
						gs_frame_ovhg_top_in,
						gs_frame_ovhg_bottom_in,
						bMirrored,
						xform11, xform12, xform13, xform14,
						xform21, xform22, xform23, xform24,
						xform31, xform32, xform33, xform34,

						bOplines3d, opLineType3dIn, opLineType3dOut, gs_opline_style_m, gs_opLinePen,
						bShowAddHotspots, bShowAddHotspotsForIS, bShowUnitHotspots,

						sillRight,
						sillLeft,
						sillBottom,
						sillBottomOutside,
						sillSideHeight,
						sillSideAngle,
						sillPoly

! =============================================================================
! Calculations
! =============================================================================

leftOvhg	=	max(gs_frame_ovhg_left_out, gs_frame_ovhg_left_in)
rightOvhg	=	leftOvhg
topOvhg		=	leftOvhg
bottomOvhg	=	max(gs_frame_ovhg_bottom_out, gs_frame_ovhg_bottom_in)


rtrgamma=(gs_frame_width+bottomOvhg)/sin(trgamma/2)
rtrgamma_unit=(bottomOvhg)/sin(trgamma/2)
ovhgbgamma=(bottomOvhg)/sin(trgamma/2)

left_unit_meet_x = (bottomOvhg)/tan(tralpha) + (bottomOvhg)/sin(tralpha)
right_unit_meet_x = (bottomOvhg)/tan(trbeta) + (bottomOvhg)/sin(trbeta)

! =============================================================================
! Block for operator mode
! =============================================================================

if GLOB_CONTEXT > 40 & GLOB_CONTEXT < 50 then
	addy gs_tolerance_lower
	prism_ 3, WIDO_FRAME_THICKNESS,
		-ac_wallhole_width/2 + left_unit_meet_x, 0, 15,
		ac_wallhole_width/2 - right_unit_meet_x, 0, 15,
		tec-rtrgamma_unit*sin(trgamma/2+trbeta-90),ac_wallhole_height-rtrgamma_unit*cos(trgamma/2+trbeta-90)-bottomOvhg,		15
	end
endif


if lod3D = 0 then end

xform	xform11, xform12, xform13, xform14,
		xform21, xform22, xform23, xform24,
		xform31, xform32, xform33, xform34

muly -1
addy WIDO_FRAME_THICKNESS

temp = gs_frame_ovhg_left_out
gs_frame_ovhg_left_out = gs_frame_ovhg_left_in
gs_frame_ovhg_left_in = temp

temp = gs_frame_ovhg_right_out
gs_frame_ovhg_right_out = gs_frame_ovhg_right_in
gs_frame_ovhg_right_in = temp

temp = gs_frame_ovhg_top_in
gs_frame_ovhg_top_in = gs_frame_ovhg_top_out
gs_frame_ovhg_top_out = temp

temp = gs_frame_ovhg_bottom_in
gs_frame_ovhg_bottom_in = gs_frame_ovhg_bottom_out
gs_frame_ovhg_bottom_out = temp

if ((GLOB_PREVIEW_MODE = 2) | GLOB_CONTEXT = 46) then
	gs_sill_outside	= 0
	gs_board_inside	= 0
	gs_trim_inside	= 0
	gs_trim_outside	= 0
endif

if lod3D = 5 then	! Chinese
	fr_sect_fill_type	= gs_fillShCover
	fr_sect_fill_fg		= gs_penShCov_fg
	fr_sect_fill_bg		= gs_penShCov_bg
else
	fr_sect_fill_type	= gs_fillFr
	fr_sect_fill_fg		= gs_penFr_fg
	fr_sect_fill_bg		= gs_penFr_bg
endif


rotx 90


! =============================================================================
! Unit Hotspots
! =============================================================================

A = ac_unit_width
B = ac_unit_height

if bShowUnitHotspots then
	unID=100

	hotspot  A/2, 0, 0,				unID	:unID=unID+1
	hotspot -A/2, 0, 0,				unID	:unID=unID+1
	hotspot  A/2, 0, gs_frame_thk,	unID	:unID=unID+1
	hotspot -A/2, 0, gs_frame_thk,	unID	:unID=unID+1

	hotspot tec, B, 0,				unID	:unID=unID+1
	hotspot tec, B, gs_frame_thk,	unID
endif

! --- Frame extension bottom and top in case of trim and sills ---



! =============================================================================
! Unit Hotspots for IS
! =============================================================================

if bShowAddHotspotsForIS then
	unID=108

	hotspot tec, 0, 0,				unID	:unID=unID+1
	hotspot tec, 0, gs_frame_thk,	unID
endif


! =============================================================================
! Casing
! =============================================================================

A = ac_wallhole_width
B = ac_wallhole_height

numCuts = 0

if (gs_trim_inside | gs_trim_outside) & lod3D <> 5 then

	addy -gs_tolerance_left

	pen gs_frame_pen

! Straight Wall ---------------------------------------------------------------

	if abs(WIDO_ORIG_DIST) < EPS & abs(WALL_INCL) < EPS then
		if not(WIDO_REVEAL_SIDE) then
			addz WIDO_SILL - WALL_THICKNESS + WIDO_FRAME_THICKNESS    ! Flip
			mulz -1
			addz -WALL_THICKNESS
		else
			addz -WIDO_SILL
		endif

		if gs_trim_inside then
			sect_fill gs_trim_fill_in, gs_trim_pen_bg_in, gs_trim_pen_fg_in, gs_trim_pen_cont
			material gs_trim_in_mat

			if gs_board_inside then
				addz WIDO_SILL
				gosub 400		!Board cutting
				del 1
			endif

			if gs_board_inside then
				boardmody = gs_board_thk
			else
				boardmody = 0
			endif

			if gs_trim_width_in > 0 then
				addz WIDO_SILL+WIDO_FRAME_THICKNESS
				if gs_board_inside then
					prism_ 6,WALL_THICKNESS-WIDO_SILL-WIDO_FRAME_THICKNESS,
						-a/2,0,15,
						 tec,b,15,
						 a/2,0,15,
						 a/2-gs_trim_width_in/tan(trbeta/2), gs_trim_width_in, 11+4*(abs(gs_trim_offs_in)>EPS),
						 tec+tthtrgamma_in*cos(trgamma/2+trbeta), b-tthtrgamma_in*sin(trgamma/2+trbeta),11+4*(abs(gs_trim_offs_in)>EPS),
						-a/2+gs_trim_width_in/tan(tralpha/2), gs_trim_width_in,11+4*(abs(gs_trim_offs_in)>EPS)
				else
					prism_ 8,WALL_THICKNESS-WIDO_SILL-WIDO_FRAME_THICKNESS,
						-a/2,0,15,
						 a/2,0,15,
						 tec,b,15,
						-a/2,0,-1,

						-a/2+gs_trim_width_in/tan(tralpha/2), gs_trim_width_in, 11+4*(abs(gs_trim_offs_in)>EPS),
						 a/2-gs_trim_width_in/tan(trbeta/2), gs_trim_width_in, 11+4*(abs(gs_trim_offs_in)>EPS),
						 tec+tthtrgamma_in*cos(trgamma/2+trbeta), b-tthtrgamma_in*sin(trgamma/2+trbeta),11+4*(abs(gs_trim_offs_in)>EPS),
						-a/2+gs_trim_width_in/tan(tralpha/2), gs_trim_width_in,-1
				endif
				del 1
			endif

			if gs_trim_thk_in > 0 then
				addz WALL_THICKNESS
				if abs(gs_trim_offs_in)>EPS then
					base
					prism_ 4,gs_trim_thk_in,
						-a/2-(gs_tw_right_in+gs_trim_offs_in-gs_trim_width_in)/tan(tralpha/2),-gs_tw_right_in-gs_trim_offs_in+gs_trim_width_in,10,
						-a/2-(gs_trim_offs_in-gs_trim_width_in)/tan(tralpha/2),-gs_trim_offs_in+gs_trim_width_in,15,
						tec-(tofgamma_in)*cos(trgamma/2+trbeta),b+(tofgamma_in)*sin(trgamma/2+trbeta),10,
						tec-(itwtrgamma+tofgamma_in)*cos(trgamma/2+trbeta),b+(itwtrgamma+tofgamma_in)*sin(trgamma/2+trbeta),15

					vert 0, 0, 0
					vert cos(tralpha), sin(tralpha), 0
					vert sin(tralpha), cos(tralpha), 0
					vert 0, 0, 1
					coor 2, -1, -2, -3, -4
					body 1

					base
					prism_ 4,gs_trim_thk_in,
						a/2+(gs_tw_right_in+gs_trim_offs_in-gs_trim_width_in)/tan(trbeta/2),-gs_tw_right_in-gs_trim_offs_in+gs_trim_width_in,10,
						a/2+(gs_trim_offs_in-gs_trim_width_in)/tan(trbeta/2),-gs_trim_offs_in+gs_trim_width_in,15,
						tec-(tofgamma_in)*cos(trgamma/2+trbeta),b+(tofgamma_in)*sin(trgamma/2+trbeta),10,
						tec-(itwtrgamma+tofgamma_in)*cos(trgamma/2+trbeta),b+(itwtrgamma+tofgamma_in)*sin(trgamma/2+trbeta),15
					vert 0, 0, 0
					vert cos(tralpha), -sin(tralpha), 0
					vert sin(tralpha), cos(tralpha), 0
					vert 0, 0, 1
					coor 2, -1, -2, -3, -4
					body 1

					base
					prism_ 4,gs_trim_thk_in,
						-a/2-(gs_tw_right_in+gs_trim_offs_in-gs_trim_width_in+boardmody)/tan(tralpha/2),-gs_tw_right_in-gs_trim_offs_in+gs_trim_width_in-boardmody,15,
						 a/2+(gs_tw_right_in+gs_trim_offs_in-gs_trim_width_in+boardmody)/tan(trbeta/2), -gs_tw_right_in-gs_trim_offs_in+gs_trim_width_in-boardmody,10,
						 a/2+(gs_trim_offs_in-gs_trim_width_in)/tan(trbeta/2), -gs_trim_offs_in+gs_trim_width_in,15,
						-a/2-(gs_trim_offs_in-gs_trim_width_in)/tan(tralpha/2),-gs_trim_offs_in+gs_trim_width_in,10
					vert 0, 0, 0
					vert 1, 0, 0
					vert 0, 1, 0
					vert 0, 0, 1
					coor 2, -1, -2, -3, -4
					body 1
				else
					base
					prism_ 4,gs_trim_thk_in,
						-a/2-(gs_tw_right_in-gs_trim_width_in)/tan(tralpha/2)-boardmody/tan(tralpha),-gs_tw_right_in+gs_trim_width_in-boardmody,10,
						-a/2+(gs_trim_width_in)/tan(tralpha/2), gs_trim_width_in,14,
						tec+tthtrgamma_in*cos(trgamma/2+trbeta), b+tofgamma_in*sin(trgamma/2+trbeta),10,
						tec-itwtrgamma*cos(trgamma/2+trbeta),b+(itwtrgamma+tofgamma_in)*sin(trgamma/2+trbeta),15
					vert 0, 0, 0
					vert cos(tralpha), sin(tralpha), 0
					vert sin(tralpha), cos(tralpha), 0
					vert 0, 0, 1
					coor 2, -1, -2, -3, -4
					body 1

					base
					prism_ 4,gs_trim_thk_in,
						a/2+(gs_tw_right_in-gs_trim_width_in)/tan(trbeta/2)+boardmody/tan(tralpha),-gs_tw_right_in+gs_trim_width_in-boardmody,10,
						a/2-(gs_trim_width_in)/tan(trbeta/2), gs_trim_width_in,14,
						tec+tthtrgamma_in*cos(trgamma/2+trbeta), b+tofgamma_in*sin(trgamma/2+trbeta),10,
						tec-itwtrgamma*cos(trgamma/2+trbeta),b+(itwtrgamma+tofgamma_in)*sin(trgamma/2+trbeta),15
					vert 0, 0, 0
					vert cos(tralpha), -sin(tralpha), 0
					vert sin(tralpha), cos(tralpha), 0
					vert 0, 0, 1
					coor 2, -1, -2, -3, -4
					body 1

					base
					prism_ 4,gs_trim_thk_in,
						-a/2-(gs_tw_right_in-gs_trim_width_in)/tan(tralpha/2)-boardmody/tan(tralpha),-gs_tw_right_in+gs_trim_width_in-boardmody,15,
						 a/2+(gs_tw_right_in-gs_trim_width_in)/tan(trbeta/2)+boardmody/tan(tralpha), -gs_tw_right_in+gs_trim_width_in-boardmody,10,
						 a/2-(gs_trim_width_in)/tan(trbeta/2),  gs_trim_width_in,14,
						-a/2+(gs_trim_width_in)/tan(tralpha/2), gs_trim_width_in,10
					vert 0, 0, 0
					vert 1, 0, 0
					vert 0, 1, 0
					vert 0, 0, 1
					coor 2, -1, -2, -3, -4
					body 1
				endif
				del 1
			endif
		endif

		if not(WIDO_REVEAL_SIDE) then
			del 2
		endif

		del 1
	endif

	if abs(WIDO_ORIG_DIST) < EPS then
		if gs_trim_outside then

			if not(WIDO_REVEAL_SIDE) then
				addz WIDO_SILL - WALL_THICKNESS + WIDO_FRAME_THICKNESS    ! Flip
				mulz -1
				addz -WALL_THICKNESS
			else
				addz -WIDO_SILL
			endif

			sect_fill gs_trim_fill_out, gs_trim_pen_bg_out, gs_trim_pen_fg_out, gs_trim_pen_cont
			material gs_trim_out_mat

			if gs_sill_outside then
				sillmodxRight	= (gs_trim_width_out - gs_trim_offs_out - SillBottomOutside)/tan(tralpha)
				sillmodxLeft	= (gs_trim_width_out - gs_trim_offs_out - SillBottomOutside)/tan(trbeta)
				sillmody		= SillBottomOutside
			else
				sillmodxRight	= 0
				sillmodxLeft	= 0
				sillmody		= gs_trim_width_out - gs_trim_offs_out
			endif

			_offsetBottomCasingY = 0
			if not(bCasingBottomOutside) then
				if gs_sill_outside then
					addz WIDO_SILL
					gosub 300		!cutting below Sill
					del 1
				else
					_offsetBottomCasingY = (gs_trim_width_out+0.01)

					gosub "CasingCuttingOnParapet"
				endif
			endif

			if gs_sill_outside then

				addz WIDO_SILL
				gosub 200		!cutting with Sill
				del 1

				if gs_trim_width_out > 0 then
					prism_ 6, WIDO_SILL,
						-a/2+sillmody/tan(tralpha),sillmody,15,
						 tec,b,15,
						 a/2-sillmody/tan(trbeta),sillmody,15,

						 a/2-gs_trim_width_out/sin(trbeta)-sillmody/tan(trbeta), sillmody,14+(abs(gs_trim_offs_out)>EPS),
						 tec+tthtrgamma_in*cos(trgamma/2+trbeta),b-tthtrgamma_in*sin(trgamma/2+trbeta),14+(abs(gs_trim_offs_out)>EPS),
						-a/2+gs_trim_width_out/sin(tralpha)+sillmody/tan(tralpha), sillmody,14+(abs(gs_trim_offs_out)>EPS)
				endif
			else
				if gs_trim_width_out > 0 then
					if bCasingBottomOutside then
						prism_ 8, WIDO_SILL,
							-a/2,0,15,
							 a/2,0,15,
							 tec,b,15,
							-a/2,0,-1,

							-a/2+gs_trim_width_out/tan(tralpha/2), gs_trim_width_out,14+(abs(gs_trim_offs_out)>EPS),
							 a/2-gs_trim_width_out/tan(trbeta/2), gs_trim_width_out,14+(abs(gs_trim_offs_out)>EPS),
							 tec+tthtrgamma_in*cos(trgamma/2+trbeta),b-tthtrgamma_in*sin(trgamma/2+trbeta),14+(abs(gs_trim_offs_out)>EPS),
							-a/2+gs_trim_width_out/tan(tralpha/2), gs_trim_width_out,-1
					else
						prism_ 6, WIDO_SILL,
							-a/2+(sillmody-_offsetBottomCasingY)/tan(tralpha),sillmody-_offsetBottomCasingY,15,
							 tec,b,15,
							 a/2-(sillmody-_offsetBottomCasingY)/tan(trbeta),sillmody-_offsetBottomCasingY,15,

							 a/2-gs_trim_width_out/sin(trbeta)-(sillmody-_offsetBottomCasingY)/tan(trbeta), sillmody-_offsetBottomCasingY,14+(abs(gs_trim_offs_out)>EPS),
							 tec+tthtrgamma_in*cos(trgamma/2+trbeta),b-tthtrgamma_in*sin(trgamma/2+trbeta),14+(abs(gs_trim_offs_out)>EPS),
							-a/2+gs_trim_width_out/sin(tralpha)+(sillmody-_offsetBottomCasingY)/tan(tralpha), sillmody-_offsetBottomCasingY,14+(abs(gs_trim_offs_out)>EPS)

					endif
				endif
			endif

			if gs_trim_thk_out > 0 then
				addz -gs_trim_thk_out
				base
				prism_ 4,gs_trim_thk_out,
					-a/2-(gs_tw_right_out-gs_trim_width_out + gs_trim_offs_out)/tan(tralpha/2) - _offsetBottomCasingY/tan(tralpha) - sillmodxRight,-gs_tw_right_out+sillmody-_offsetBottomCasingY,10,
					-a/2-(-gs_trim_width_out + gs_trim_offs_out)/tan(tralpha/2) - _offsetBottomCasingY/tan(tralpha) - sillmodxRight, sillmody-_offsetBottomCasingY,11+4*(abs(gs_trim_offs_out)>EPS),
					tec-(tofgamma_out)*cos(trgamma/2+trbeta),b+(tofgamma_out)*sin(trgamma/2+trbeta),10,
					tec-(twtrgamma+tofgamma_out)*cos(trgamma/2+trbeta),b+(twtrgamma+tofgamma_out)*sin(trgamma/2+trbeta),15
				vert 0, 0, 0
				vert cos(tralpha), sin(tralpha), 0
				vert sin(tralpha), cos(tralpha), 0
				vert 0, 0, 1
				coor 2, -1, -2, -3, -4
				body 1

				base
				prism_ 4,gs_trim_thk_out,
					a/2+(gs_tw_right_out-gs_trim_width_out + gs_trim_offs_out)/tan(trbeta/2) + _offsetBottomCasingY/tan(trbeta) + sillmodxLeft,-gs_tw_right_out+sillmody-_offsetBottomCasingY,10,
					a/2+(-gs_trim_width_out + gs_trim_offs_out)/tan(trbeta/2) + _offsetBottomCasingY/tan(trbeta) + sillmodxLeft,sillmody-_offsetBottomCasingY,11+4*(abs(gs_trim_offs_out)>EPS),
					tec-(tofgamma_out)*cos(trgamma/2+trbeta),b+(tofgamma_out)*sin(trgamma/2+trbeta),10,
					tec-(twtrgamma+tofgamma_out)*cos(trgamma/2+trbeta),b+(twtrgamma+tofgamma_out)*sin(trgamma/2+trbeta),15
				vert 0, 0, 0
				vert cos(tralpha), -sin(tralpha), 0
				vert sin(tralpha), cos(tralpha), 0
				vert 0, 0, 1
				coor 2, -1, -2, -3, -4
				body 1

				base
				prism_ 4,gs_trim_thk_out,
					-a/2-(gs_tw_right_out-gs_trim_width_out + gs_trim_offs_out)/tan(tralpha/2) - _offsetBottomCasingY/tan(tralpha) - sillmodxRight,-gs_tw_right_out+sillmody-_offsetBottomCasingY,15,
					 a/2+(gs_tw_right_out-gs_trim_width_out + gs_trim_offs_out)/tan(trbeta/2) + _offsetBottomCasingY/tan(trbeta) + sillmodxLeft,-gs_tw_right_out+sillmody-_offsetBottomCasingY,10,
					 a/2+(-gs_trim_width_out + gs_trim_offs_out)/tan(trbeta/2) + _offsetBottomCasingY/tan(trbeta) + sillmodxLeft,sillmody-_offsetBottomCasingY,11+4*(abs(gs_trim_offs_out)>EPS),
					-a/2-(-gs_trim_width_out + gs_trim_offs_out)/tan(tralpha/2) - _offsetBottomCasingY/tan(tralpha) - sillmodxRight,sillmody-_offsetBottomCasingY,10
				vert 0, 0, 0
				vert 1, 0, 0
				vert 0, 1, 0
				vert 0, 0, 1
				coor 2, -1, -2, -3, -4
				body 1
				del 1
			endif

			if not(WIDO_REVEAL_SIDE) then
				del 2
			endif

			del 1

			if numCuts then
				for i=1 to numCuts
					cutend
				next i
			endif
			numCuts = 0

		endif
	endif

! Inclined Wall ---------------------------------------------------------------

	if abs(WIDO_ORIG_DIST) < EPS & abs(WALL_INCL) > EPS then

		wi = WALL_INCL    ! Inclination of the wall surfaces

		if not(WIDO_REVEAL_SIDE) then
			addz WIDO_SILL-WALL_THICKNESS+WIDO_FRAME_THICKNESS    ! Flip
			mulz -1
			addz -WALL_THICKNESS
		else
			addz -WIDO_SILL
		endif

		if gs_trim_inside then
			sect_fill gs_trim_fill_in, gs_trim_pen_bg_in, gs_trim_pen_fg_in, gs_trim_pen_cont
			material gs_trim_in_mat

			if gs_trim_width_in > 0 then
				if not(SYMB_MIRRORED) & abs(SYMB_ROTANGLE-180)<EPS | SYMB_MIRRORED & abs(SYMB_ROTANGLE)<EPS then
					mulx -1  ! Rotated or mirrored window
				endif

				rotx 90
				if wi>0 then
					cutpolya 4, 1, 0,
					   -a/2-abs(tec),  WALL_THICKNESS-tan(wi)*(a/2+abs(tec)),   0,
						a/2+abs(tec),  WALL_THICKNESS+tan(wi)*(a/2+abs(tec)),   0,
					   -a/2-abs(tec),  WALL_THICKNESS+tan(wi)*(a/2+abs(tec)),   0,
					   -a/2-abs(tec),  WALL_THICKNESS-tan(wi)*(a/2+abs(tec)),  -1
				endif
				if wi<0 then
					cutpolya 4, 1, 0,
					   -a/2-abs(tec),  WALL_THICKNESS-tan(wi)*(a/2+abs(tec)),   0,
						a/2+abs(tec),  WALL_THICKNESS-tan(wi)*(a/2+abs(tec)),   0,
						a/2+abs(tec),  WALL_THICKNESS+tan(wi)*(a/2+abs(tec)),   0,
					   -a/2-abs(tec),  WALL_THICKNESS-tan(wi)*(a/2+abs(tec)),  -1
				endif
				del 1

				addz WIDO_SILL+WIDO_FRAME_THICKNESS
				if not(SYMB_MIRRORED) & abs(SYMB_ROTANGLE-180)<EPS | SYMB_MIRRORED & abs(SYMB_ROTANGLE)<EPS then
					mulx -1  ! Rotated or mirrored window
				endif
				prism_ 8,WALL_THICKNESS-WIDO_SILL-WIDO_FRAME_THICKNESS+abs(tan(wi))*(a/2+abs(tec)),
					-a/2,0,15,
					 a/2,0,15,
					 tec,b,15,
					-a/2,0,-1,

					-a/2+gs_trim_width_in/tan(tralpha/2),gs_trim_width_in,11,
					 a/2-gs_trim_width_in/tan(trbeta/2),gs_trim_width_in,11,
					 tec+tthtrgamma_in*cos(trgamma/2+trbeta),b-tthtrgamma_in*sin(trgamma/2+trbeta),11,
					-a/2+gs_trim_width_in/tan(tralpha/2),gs_trim_width_in,-1

				if not(SYMB_MIRRORED) & abs(SYMB_ROTANGLE-180)<EPS | SYMB_MIRRORED & abs(SYMB_ROTANGLE)<EPS then del 1
				del 1

				if abs(wi) > EPS then cutend
			endif

			if gs_trim_thk_in > 0 then
				if WIDO_REVEAL_SIDE then lwam=3
				if not(SYMB_MIRRORED) & abs(SYMB_ROTANGLE-180)<EPS | SYMB_MIRRORED & abs(SYMB_ROTANGLE)<EPS then
					mulx -1  ! Rotated or mirrored window
				endif
				cutpolya 4, 1, 0,
					-a/2,0,9+lwam,
					 a/2,0,9+lwam,
					 tec,b,9+lwam,
					-a/2,0,-1
				if not(SYMB_MIRRORED) & abs(SYMB_ROTANGLE-180)<EPS | SYMB_MIRRORED & abs(SYMB_ROTANGLE)<EPS then del 1

				addz WALL_THICKNESS
				roty -wi

				if not(SYMB_MIRRORED) & abs(SYMB_ROTANGLE-180)<EPS | SYMB_MIRRORED & abs(SYMB_ROTANGLE)<EPS then
					mulx -1  ! Rotated or mirrored window
				endif
				if abs(gs_trim_offs_in)>EPS then
					base
					prism_ 4,gs_trim_thk_in,
						-a/2-(gs_tw_right_in+gs_trim_offs_in-gs_trim_width_in)/tan(tralpha/2),-gs_tw_right_in-gs_trim_offs_in+gs_trim_width_in,10,
						-a/2-(gs_trim_offs_in-gs_trim_width_in)/tan(tralpha/2),-gs_trim_offs_in+gs_trim_width_in,15,
						tec-(tofgamma_in)*cos(trgamma/2+trbeta),b+(tofgamma_in)*sin(trgamma/2+trbeta),10,
						tec-(itwtrgamma+tofgamma_in)*cos(trgamma/2+trbeta),b+(twtrgamma+tofgamma_in)*sin(trgamma/2+trbeta),15
						vert 0, 0, 0
						vert cos(tralpha), sin(tralpha), 0
						vert sin(tralpha), cos(tralpha), 0
					vert 0, 0, 1
					coor 2, -1, -2, -3, -4
					body 1

					base
					prism_ 4,gs_trim_thk_in,
						a/2+(gs_tw_right_in+gs_trim_offs_in-gs_trim_width_in)/tan(trbeta/2),-gs_tw_right_in-gs_trim_offs_in+gs_trim_width_in,10,
						a/2+(gs_trim_offs_in-gs_trim_width_in)/tan(trbeta/2),-gs_trim_offs_in+gs_trim_width_in,15,
						tec-(tofgamma_in)*cos(trgamma/2+trbeta),b+(tofgamma_in)*sin(trgamma/2+trbeta),10,
						tec-(twtrgamma+tofgamma_in)*cos(trgamma/2+trbeta),b+(twtrgamma+tofgamma_in)*sin(trgamma/2+trbeta),15
					vert 0, 0, 0
					vert cos(tralpha), -sin(tralpha), 0
					vert sin(tralpha), cos(tralpha), 0
					vert 0, 0, 1
					coor 2, -1, -2, -3, -4
					body 1

					base
					prism_ 4,gs_trim_thk_in,
						-a/2-(gs_tw_right_in+gs_trim_offs_in-gs_trim_width_in)/tan(tralpha/2),-gs_tw_right_in-gs_trim_offs_in+gs_trim_width_in,15,
						 a/2+(gs_tw_right_in+gs_trim_offs_in-gs_trim_width_in)/tan(trbeta/2), -gs_tw_right_in-gs_trim_offs_in+gs_trim_width_in,10,
						 a/2+(gs_trim_offs_in-gs_trim_width_in)/tan(trbeta/2), -gs_trim_offs_in+gs_trim_width_in,15,
						-a/2-(gs_trim_offs_in-gs_trim_width_in)/tan(tralpha/2),-gs_trim_offs_in+gs_trim_width_in,10
					vert 0, 0, 0
					vert 1, 0, 0
					vert 0, 1, 0
					vert 0, 0, 1
					coor 2, -1, -2, -3, -4
					body 1
				else
					base
					prism_ 4,gs_trim_thk_in,
						-a/2-(gs_tw_right_in-gs_trim_width_in)/tan(tralpha/2),-gs_tw_right_in+gs_trim_width_in,10,
						-a/2+gs_trim_width_in/tan(tralpha/2),gs_trim_width_in,14,
						tec+tthtrgamma_in*cos(trgamma/2+trbeta),b-tthtrgamma_in*sin(trgamma/2+trbeta),10,
						tec-twtrgamma*cos(trgamma/2+trbeta),b+twtrgamma*sin(trgamma/2+trbeta),15
					vert 0, 0, 0
					vert cos(tralpha), sin(tralpha), 0
					vert sin(tralpha), cos(tralpha), 0
					vert 0, 0, 1
					coor 2, -1, -2, -3, -4
					body 1

					base
					prism_ 4,gs_trim_thk_in,
						a/2+(gs_tw_right_in-gs_trim_width_in)/tan(trbeta/2),-gs_tw_right_in+gs_trim_width_in,10,
						a/2-gs_trim_width_in/tan(trbeta/2),gs_trim_width_in,14,
						tec+tthtrgamma_in*cos(trgamma/2+trbeta),b-tthtrgamma_in*sin(trgamma/2+trbeta),10,
						tec-twtrgamma*cos(trgamma/2+trbeta),b+twtrgamma*sin(trgamma/2+trbeta),15
					vert 0, 0, 0
					vert cos(tralpha), -sin(tralpha), 0
					vert sin(tralpha), cos(tralpha), 0
					vert 0, 0, 1
					coor 2, -1, -2, -3, -4
					body 1

					base
					prism_ 4,gs_trim_thk_in,
						-a/2-(gs_tw_right_in-gs_trim_width_in)/tan(tralpha/2),-gs_tw_right_in+gs_trim_width_in,15,
						a/2+(gs_tw_right_in-gs_trim_width_in)/tan(trbeta/2),-gs_tw_right_in+gs_trim_width_in,10,
						a/2-gs_trim_width_in/tan(trbeta/2),gs_trim_width_in,14,
						-a/2+gs_trim_width_in/tan(tralpha/2),gs_trim_width_in,10
					vert 0, 0, 0
					vert 1, 0, 0
					vert 0, 1, 0
					vert 0, 0, 1
					coor 2, -1, -2, -3, -4
					body 1
				endif
				if not(SYMB_MIRRORED) and abs(SYMB_ROTANGLE-180)<EPS or SYMB_MIRRORED and abs(SYMB_ROTANGLE)<EPS then del 1
				del 2

				cutend

				if not(SYMB_MIRRORED) and abs(SYMB_ROTANGLE-180)<EPS or SYMB_MIRRORED and abs(SYMB_ROTANGLE)<EPS then del 1

			endif
		endif

		if not(WIDO_REVEAL_SIDE) then
			del 2
		endif

		del 1
	endif

! Curved Wall -----------------------------------------------------------------

	if abs(WIDO_ORIG_DIST) > EPS then

		resol WALL_RESOL

		mulz -1
		addz -WIDO_FRAME_THICKNESS

		!z axis curved wall calculation at subroutine 1000
		!off1, off2 etc. special offset values for outside, inside etc. elements "rfur" values
		!different from element to element!

		if gs_trim_inside then
			sect_fill gs_trim_fill_in, gs_trim_pen_bg_in, gs_trim_pen_fg_in, gs_trim_pen_cont
			material gs_trim_in_mat

			!1st part

			if gs_trim_thk_in > 0 then
				off1 = -gs_trim_thk_in
				off2 = 0
				off3 = WALL_THICKNESS
				off4 = -WALL_THICKNESS-gs_trim_thk_in
				gosub 1000

				!Penetration curve calculation
				!(Curved wall "Outside" surface and a Cylind with radius of a/2)


				!Base Triangle
				ix=calpha/180*pi*rfur
				ixtec=atn(tec/r0)/180*pi*rfur

				!Triangle at gs_tw_right_out
				rxtwtec=tec-(itwtrgamma+tofgamma_in)*cos(trgamma/2+trbeta)
				ixtwtec=atn(rxtwtec/r0)/180*pi*rfur

				rxtwleft=-a/2-(gs_tw_right_in-gs_trim_width_in)/tan(tralpha/2)
				ixtwleft=atn(rxtwleft/r0)/180*pi*rfur

				rxtwright=a/2+(gs_tw_right_in-gs_trim_width_in)/tan(trbeta/2)
				ixtwright=atn(rxtwright/r0)/180*pi*rfur


				rxtwtec2=tec-tofgamma_in*cos(trgamma/2+trbeta)
				ixtwtec2=atn(rxtwtec2/r0)/180*pi*rfur

				rxtwleft2=-a/2+gs_trim_width_in/tan(tralpha/2)
				ixtwleft2=atn(rxtwleft2/r0)/180*pi*rfur

				rxtwright2=a/2-gs_trim_width_in/tan(trbeta/2)
				ixtwright2=atn(rxtwright2/r0)/180*pi*rfur

				addz k_weitoffset
				mulz mulstat
				addz -rfur
				roty -AC_Hole_Position_Angle
				addz rfur

				bprism_  gs_trim_in_mat,gs_trim_in_mat,gs_trim_in_mat,
					8, gs_trim_thk_in, rfur,
					xoffset+ixtwleft,-gs_tw_right_in,15,
					xoffset+ixtwright,-gs_tw_right_in,15,
					xoffset+ixtwtec,b+(itwtrgamma+tofgamma_in)*sin(trgamma/2+trbeta),15,
					xoffset+ixtwleft,-gs_tw_right_in,-1,

					xoffset+ixtwleft2,gs_trim_width_in,btim1,
					xoffset+ixtwright2,gs_trim_width_in,btim1,
					xoffset+ixtwtec2,b+(tofgamma_in)*sin(trgamma/2+trbeta),btim1,
					xoffset+ixtwleft2,gs_trim_width_in,-1

				del 5
			endif

			!2nd part

			if gs_trim_width_in > 0 then
				!Cutplanes at frame

				if WIDO_REVEAL_SIDE then
					cutplane 1,1,0,0
				else
					addz WIDO_FRAME_THICKNESS
					cutplane 1,1,0,1
					del 1
				endif

				off1=0
				off2=-WALL_THICKNESS
				off3=0
				off4=-WALL_THICKNESS
				gosub 1000


				!Penetration curve calculation
				!(Curved wall "Outside" surface and a Cylind with radius of a/2)

				!Base Triangle
				ix=calpha/180*pi*rfur
				ixtec=atn(tec/r0)/180*pi*rfur

				!Triangle at gs_trim_thk_in

				rxtwtec=tec-tofgamma_in*cos(trgamma/2+trbeta)
				ixtwtec=atn(rxtwtec/r0)/180*pi*rfur

				rxtwleft=-a/2+gs_trim_width_in/tan(tralpha/2)
				ixtwleft=atn(rxtwleft/r0)/180*pi*rfur

				rxtwright=a/2-gs_trim_width_in/tan(trbeta/2)
				ixtwright=atn(rxtwright/r0)/180*pi*rfur

				addz k_weitoffset
				mulz mulstat
				addz -rfur
				roty -AC_Hole_Position_Angle
				addz rfur

				bprism_ gs_trim_in_mat,gs_trim_in_mat,gs_trim_in_mat,
					8, WALL_THICKNESS, rfur,
					xoffset-ix,0,15,
					xoffset+ix,0,15,
					xoffset+ixtec,b,15,
					xoffset-ix,0,-1,

					xoffset+ixtwleft,gs_trim_width_in,btim2,
					xoffset+ixtwright,gs_trim_width_in,btim2,
					xoffset+ixtwtec,b+(tofgamma_in)*sin(trgamma/2+trbeta),btim2,
					xoffset+ixtwleft,gs_trim_width_in,-1

				del 5

				cutend
			endif
		endif

		if gs_trim_outside then
			sect_fill gs_trim_fill_out, gs_trim_pen_bg_out, gs_trim_pen_fg_out, gs_trim_pen_cont
			material gs_trim_out_mat

			if gs_sill_outside then
				sillmodxRight	= (gs_trim_width_out - gs_trim_offs_out - SillBottomOutside)/tan(tralpha)
				sillmodxLeft	= (gs_trim_width_out - gs_trim_offs_out - SillBottomOutside)/tan(trbeta)
				sillmody		= SillBottomOutside
			else
				sillmodxRight	= 0
				sillmodxLeft	= 0
				sillmody		= gs_trim_width_out - gs_trim_offs_out
			endif


			!1st part

			_offsetBottomCasingY = 0
			if not(bCasingBottomOutside) then
				if gs_sill_outside then
					gosub 300		!cutting below Sill
				else
					_offsetBottomCasingY = (gs_trim_width_out+0.01)

					gosub "CasingCuttingOnParapet"
				endif
			endif

			off1=WALL_THICKNESS
			off2=-WALL_THICKNESS-gs_trim_thk_out
			off3=-gs_trim_thk_out
			off4=0
			gosub 1000


			!Penetration curve calculation
			!(Curved wall "Outside" surface and a Cylind with radius of a/2)

			!Base Triangle
			ix=calpha/180*pi*rfur
			ixtec=atn(tec/r0)/180*pi*rfur

			!Triangle at gs_tw_right_out
			rxtwtec=tec-(twtrgamma+tofgamma_out)*cos(trgamma/2+trbeta)
			ixtwtec=atn(rxtwtec/r0)/180*pi*rfur

			rxtwleft=-a/2-(gs_tw_right_out-gs_trim_width_out)/tan(tralpha/2) - _offsetBottomCasingY/tan(tralpha)
			ixtwleft=atn(rxtwleft/r0)/180*pi*rfur

			rxtwright=a/2+(gs_tw_right_out-gs_trim_width_out)/tan(trbeta/2) + _offsetBottomCasingY/tan(trbeta)
			ixtwright=atn(rxtwright/r0)/180*pi*rfur


			rxtwtec2=tec-tofgamma_out*cos(trgamma/2+trbeta)
			ixtwtec2=atn(rxtwtec2/r0)/180*pi*rfur

			rxtwleft2=-a/2+(gs_trim_width_out)/tan(tralpha/2) - _offsetBottomCasingY/tan(tralpha)
			ixtwleft2=atn(rxtwleft2/r0)/180*pi*rfur

			rxtwright2=a/2+(-gs_trim_width_out)/tan(trbeta/2) + _offsetBottomCasingY/tan(trbeta)
			ixtwright2=atn(rxtwright2/r0)/180*pi*rfur

			if gs_sill_outside then
				gosub 200		!cutting with Sill
			endif

			if gs_trim_thk_out > 0 then
				addz k_weitoffset
				mulz mulstat
				addz -rfur
				roty -AC_Hole_Position_Angle
				addz rfur

				bprism_  gs_trim_out_mat,gs_trim_out_mat,gs_trim_out_mat,
					8, gs_trim_thk_out, rfur,
					xoffset+ixtwleft,-gs_tw_right_out+gs_trim_width_out-_offsetBottomCasingY,15,
					xoffset+ixtwright,-gs_tw_right_out+gs_trim_width_out-_offsetBottomCasingY,15,
					xoffset+ixtwtec,b+(twtrgamma+tofgamma_out)*sin(trgamma/2+trbeta),15,
					xoffset+ixtwleft,-gs_tw_right_out+gs_trim_width_out-_offsetBottomCasingY,-1,

					xoffset+ixtwleft2,gs_trim_width_out-_offsetBottomCasingY,btim3,
					xoffset+ixtwright2,gs_trim_width_out-_offsetBottomCasingY,btim3,
					xoffset+ixtwtec2,b+(tofgamma_out)*sin(trgamma/2+trbeta),btim3,
					xoffset+ixtwleft2,gs_trim_width_out-_offsetBottomCasingY,-1

				del 5
			endif

			!2nd part

			if gs_trim_width_out > 0 then
				!Cutplanes at frame

				if WIDO_REVEAL_SIDE then
					addz WIDO_FRAME_THICKNESS
					cutplane 1,1,0,1
					del 1
				else
					cutplane 1,1,0,0
				endif

				off1=0
				off2=-WALL_THICKNESS
				off3=0
				off4=-WALL_THICKNESS
				gosub 1000

				!Penetration curve calculation
				!(Curved wall "Outside" surface and a Cylind with radius of a/2)

				!Base Triangle
				ix=calpha/180*pi*rfur
				ixtec=atn(tec/r0)/180*pi*rfur

				!Triangle at gs_trim_thk_out
				rxtwtec=tec-(tofgamma_out)*cos(trgamma/2+trbeta)
				ixtwtec=atn(rxtwtec/r0)/180*pi*rfur

				rxoffleft=-a/2 - _offsetBottomCasingY/tan(tralpha)
				ixoffleft=atn(rxoffleft/r0)/180*pi*rfur

				rxoffright=a/2 + _offsetBottomCasingY/tan(trbeta)
				ixoffright=atn(rxoffright/r0)/180*pi*rfur

				rxtwleft=-a/2+gs_trim_width_out/tan(tralpha/2) - _offsetBottomCasingY/tan(tralpha)
				ixtwleft=atn(rxtwleft/r0)/180*pi*rfur

				rxtwright=a/2-gs_trim_width_out/tan(trbeta/2) + _offsetBottomCasingY/tan(trbeta)
				ixtwright=atn(rxtwright/r0)/180*pi*rfur


				addz k_weitoffset
				mulz mulstat
				addz -rfur
				roty -AC_Hole_Position_Angle
				addz rfur

				bprism_  gs_trim_out_mat,gs_trim_out_mat,gs_trim_out_mat,
					8, WALL_THICKNESS, rfur,
					xoffset+ixoffleft,-_offsetBottomCasingY,15,
					xoffset+ixoffright,-_offsetBottomCasingY,15,
					xoffset+ixtec,b,15,
					xoffset+ixoffleft,-_offsetBottomCasingY,-1,

					xoffset+ixtwleft,gs_trim_width_out-_offsetBottomCasingY,btim4,
					xoffset+ixtwright,gs_trim_width_out-_offsetBottomCasingY,btim4,
					xoffset+ixtwtec,b+(tofgamma_out)*sin(trgamma/2+trbeta),btim4,
					xoffset+ixtwleft,gs_trim_width_out-_offsetBottomCasingY,-1

				del 5

				cutend
			endif
		endif

		del 2
	endif

	del 1

	body -1
endif


if numCuts then
	for i=1 to numCuts
		cutend
	next i
endif
numCuts = 0


! =============================================================================
! Draw Frame
! =============================================================================

A = ac_unit_width
B = ac_unit_height

left_meet_x = (gs_frame_width+bottomOvhg)/tan(tralpha) + (gs_frame_width+bottomOvhg)/sin(tralpha)
right_meet_x = (gs_frame_width+bottomOvhg)/tan(trbeta) + (gs_frame_width+bottomOvhg)/sin(trbeta)

if lod3D = 1 then	! Simple
	if not(WIDO_REVEAL_SIDE) then
		frameThk  = gs_frame_thk/2 + gs_glass_thk/2
		frameThk2 = gs_frame_thk/2 - gs_glass_thk/2
	else
		frameThk  = gs_frame_thk/2 - gs_glass_thk/2
		frameThk2 = gs_frame_thk/2 + gs_glass_thk/2
	endif
else
	frameThk  = gs_frame_thk - gs_rebate_depth
	frameThk2 = gs_rebate_depth
endif

if gs_frame_mat = gs_frame_mat2 | frameThk < EPS | frameThk2 < EPS then
	loopNum = 1
	if gs_frame_mat = gs_frame_mat2 then
		frameThk = gs_frame_thk
	else
		frameThk = max(frameThk, frameThk2)
	endif
	if not(WIDO_REVEAL_SIDE) then
		frameMatTop		= gs_frame_mat
		frameMatBottom	= gs_frame_mat2
	else
		frameMatTop		= gs_frame_mat2
		frameMatBottom	= gs_frame_mat
	endif
	if WIDO_REVEAL_SIDE then
		frameMat = gs_frame_mat2
	else
		frameMat = gs_frame_mat
	endif
	frameMask = 15
else
	loopNum = 2
	if not(WIDO_REVEAL_SIDE) then
		frameMat  = gs_frame_mat2
		frameMat2 = gs_frame_mat
	else
		frameMat  = gs_frame_mat
		frameMat2 = gs_frame_mat2
	endif
	frameMatTop		= frameMat2
	frameMatBottom	= frameMat

	frameMask = 11
	frameMask2 = 14
endif

pen gs_frame_pen
sect_fill fr_sect_fill_type, fr_sect_fill_bg, fr_sect_fill_fg, gs_frame_pen_cont

for i=1 to loopNum

	material frameMat
	base
	cprism_ frameMatTop, frameMatBottom, frameMat, 4,frameThk,
		-ac_wallhole_width/2,-bottomOvhg,	10,
		-ac_wallhole_width/2+left_meet_x,gs_frame_width,							frameMask,
		tec-rtrgamma*sin(trgamma/2+trbeta-90),ac_wallhole_height-rtrgamma*cos(trgamma/2+trbeta-90)-bottomOvhg,		10,
		tec,ac_wallhole_height-bottomOvhg,	frameMask
	vert 0, 0, 0
	vert cos(tralpha), sin(tralpha), 0
	vert sin(tralpha), cos(tralpha), 0
	vert 0, 0, 1
	coor 2, -1, -2, -3, -4
	body 1

	base
	cprism_ frameMatTop, frameMatBottom, frameMat, 4,frameThk,
		ac_wallhole_width/2,-bottomOvhg,									10,
		ac_wallhole_width/2-right_meet_x,gs_frame_width,							frameMask,
		tec-rtrgamma*sin(trgamma/2+trbeta-90),ac_wallhole_height-rtrgamma*cos(trgamma/2+trbeta-90)-bottomOvhg,		10,
		tec,ac_wallhole_height-bottomOvhg,	frameMask
	vert 0, 0, 0
	vert cos(trbeta), -sin(trbeta), 0
	vert sin(trbeta), cos(trbeta), 0
	vert 0, 0, 1
	coor 2, -1, -2, -3, -4
	body 1

	base
	cprism_ frameMatTop, frameMatBottom, frameMat, 4,frameThk,
		-ac_wallhole_width/2,-bottomOvhg,			frameMask,
		ac_wallhole_width/2,-bottomOvhg,				10,
		ac_wallhole_width/2-right_meet_x,gs_frame_width,		frameMask,
		-ac_wallhole_width/2+left_meet_x,gs_frame_width,		10
	gosub 4000

	addz frameThk
	if loopNum > 1 then
		frameThk = frameThk2
		frameMatTop		= frameMat2
		frameMatBottom	= frameMat2
		frameMat		= frameMat2
		frameMask = frameMask2
	endif
next i
del loopNum

body -1


! =============================================================================
! Draw Casement
! =============================================================================

if lod3D = 5 then	! Chinese
	sh_sect_fill_type	= gs_fillShCover
	sh_sect_fill_fg		= gs_penShCov_fg
	sh_sect_fill_bg		= gs_penShCov_bg
else
	sh_sect_fill_type	= gs_fillSash
	sh_sect_fill_fg		= gs_penSash_fg
	sh_sect_fill_bg		= gs_penSash_bg
endif

add sashPosXArray[2][2], sashPosYArray[2][2], gs_frame_thk

call "Casement_Triangle" parameters	A = sashWidthArray[2][2],
									B = sashHeightArray[2][2],
									tec = tec-rtrgammaW*sin(trgamma/2+trbeta-90)-sashPosXArray[2][2],
	lod3D							= lod3D,
	gs_rebate_width					= gs_rebate_width,
	gs_rebate_depth					= gs_rebate_depth,
	gs_frame_width					= gs_frame_width,
	gs_frame_thk					= gs_frame_thk,
	gs_sash_width					= gs_sash_width,
	gs_sash_thk						= gs_sash_thk,
	iMullionStyle					= iMullionStyle_01,
	iMullionPosition				= iMullionPosition,
	gw								= gw,
	gth								= gth,
	gs_glass_thk					= gs_glass_thk,
	vgn								= vgn_01,
	hgn								= hgn_01,
	gs_frame_pen					= gs_sash_pen,
	gs_glass_pen					= gs_glass_pen,
	gs_frame_mat					= gs_sash_mat2,
	gs_frame_mat2					= gs_sash_mat,
	gs_grill_mat					= gs_grill_mat2,
	gs_grill_mat2					= gs_grill_mat,
	gs_glass_mat					= gs_glass_mat,
	gs_panel_mat					= gs_panel_mat,
	gs_panel_mat2					= gs_panel_mat2,
	openingAngle_01					= openingAngle_01,
	gs_optype_m						= gs_optype_m_01,
	gs_sash_pen						= gs_sash_pen,
	gs_fillSash						= sh_sect_fill_type,
	gs_penSash_bg					= sh_sect_fill_bg,
	gs_penSash_fg					= sh_sect_fill_fg,
	gs_frame_pen_cont				= gs_frame_pen_cont,
	bOpeningDirectionInside			= WIDO_REVEAL_SIDE,
	gs_cust_panel					= gs_cust_panel_01,
	triangle_unID					= 1000
!	bOplines3d						= bOplines3d,
!	opLineType3dIn					= opLineType3dIn,
!	opLineType3dOut					= opLineType3dOut,
!	gs_opline_style_m				= gs_opline_style_m,
!	gs_opLinePen					= gs_opLinePen


! =============================================================================
end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end
! =============================================================================


"CasingCuttingOnParapet":
	! Cutting with top of parapet

	muly -1
	rotx -90

	material gs_trim_out_mat
	cutplane

	!rect 2,2
	numCuts = numCuts + 1

	del 2
return


200:


!Cutting with Sill

if vardim1(sillPoly) > 1 then
	for i = 1 to (vardim1(sillPoly)-1) step 2
		put sillPoly[i], sillPoly[i+1], 31
	next i

	roty 90
	muly -1
	addz -sillLeft

	material gs_trim_out_mat

!	prism_ nsp/3, sillRight + sillLeft+3,
!		get (nsp)

	cutform nsp/3, 1, 2,
		0, 0, 1, sillRight + sillLeft,
		get (nsp)
	numCuts = numCuts + 1


	del 3
endif

return

300:

!Cutting below Sill
muly -1
add 0, -sillBottom-sillSideHeight, 0
rotx -90 + sillSideAngle

material gs_trim_out_mat
cutplane

!rect 2,2
numCuts = numCuts + 1

del 3


return


400:

!Board cutting

	roty 90
	rotz 90
	addz -ac_wallhole_width/2 - gs_board_ovhg_left
	addy gs_frame_thk

	material gs_trim_in_mat

	cutform 4, 1, 2,
		0, 0, 1, ac_wallhole_width + gs_board_ovhg_left + gs_board_ovhg_right,
		0, 0,							31,
		0, 				gs_board_width,	31,
		gs_board_thk-gs_board_width*tan(gs_board_angle), gs_board_width,31,
		gs_board_thk, 0,				31

	numCuts = numCuts + 1

!	prism_ 4, ac_wallhole_width + gs_board_ovhg_left + gs_board_ovhg_right,
!		0, 0,							31,
!		0, 				gs_board_width,	31,
!		gs_board_thk-gs_board_width*tan(gs_board_angle), gs_board_width,31,
!		gs_board_thk, 0,				31

	del 4


return


1000:

!Curved Wall Calculation

r0=abs(WIDO_ORIG_DIST)

if WIDO_ORIG_DIST<0 then                !Wall is convex from "outside"

	if WIDO_REVEAL_SIDE then                            !Flip is on
		nframe=WIDO_FRAME_THICKNESS
		wsill=WIDO_SILL
		wthickness=WALL_THICKNESS

		mulstat=1
		rdpi=sqr(a*a/4+(r0+nframe)^2)
		r=sqr(a*a/4+r0*r0)
		kdpi=rdpi-r+WIDO_SILL
		rclo=r+kdpi                         !wall radius_2
		rfur=rclo-wthickness+off1           !wall radius_1
		calpha=asn(a/2/r)                   !window half angle
	else                                     !Flip is off
		nframe=0
		wsill=-WIDO_SILL
		wthickness=-WALL_THICKNESS

		mulstat=1
		r=sqr(a*a/4+r0*r0)
		rclo=r+wsill                         !wall radius_2
		rfur=rclo-wthickness+off2            !wall radius_1
		calpha=asn(a/2/r)                    !window half angle
	endif

else                                      !Wall is concave from "outside"

	if WIDO_REVEAL_SIDE then                              !Flip is on
		nframe=WIDO_FRAME_THICKNESS
		wsill=WIDO_SILL
		wthickness=WALL_THICKNESS

		mulstat=-1
		r0=r0-nframe
		r=sqr(a*a/4+r0*r0)
		rfur=r-wsill+off3                    !wall radius_1
		rclo=rfur+wthickness                 !wall radius_2
		calpha=asn(a/2/r)                    !window half angle
	else                                      !Flip is off
		nframe=WIDO_FRAME_THICKNESS
		wsill=-WIDO_SILL
		wthickness=-WALL_THICKNESS

		mulstat=-1
		rdpi=sqr(a*a/4+r0*r0)
		r0=r0-nframe
		r=sqr(a*a/4+r0*r0)
		kdpi=rdpi-r+WIDO_SILL
		rfur=r+kdpi+off4                     !wall radius_1
		rclo=rfur+wthickness                 !wall radius_2
		calpha=asn(a/2/r)                    !window half angle
	endif

endif


!Additional values

k_weitoffset=rfur*mulstat+WIDO_ORIG_DIST  !gs_window_sill value at window centerpoint
xoffset=AC_Hole_Position_Angle/180*pi*rfur                    !Window centerpoint distance from wall origin

return



2000:
!This subroutine recalculates "rfur" ("rfurv") when "a" changes and WIDO_ORIG_DIST is constant
!different "a" value has to be applied for fill body when trim is on (oversize),
!but WIDO_ORIG_DIST - which comes from main "a" - is constant
!"av" is a special "a" modification value


r0=abs(WIDO_ORIG_DIST)

if WIDO_ORIG_DIST<0 then                !Wall is convex from "outside"

	if WIDO_REVEAL_SIDE then                            !Flip is on
		nframe=WIDO_FRAME_THICKNESS
		wsill=WIDO_SILL
		wthickness=WALL_THICKNESS

		mulstat=1
		rdpi=sqr(av*av/4+(r0+nframe)^2)
		r=sqr(av*av/4+r0*r0)
		kdpi=rdpi-r+WIDO_SILL
		rclov=r+kdpi                          !wall radius_2
		rfurv=rclov-wthickness+off1           !wall radius_1
	else                                     !Flip is off
		nframe=0
		wsill=-WIDO_SILL
		wthickness=-WALL_THICKNESS

		mulstat=1
		r=sqr(av*av/4+r0*r0)
		rclov=r+wsill                          !wall radius_2
		rfurv=rclov-wthickness+off2            !wall radius_1
	endif

else                                      !Wall is concave from "outside"

	if WIDO_REVEAL_SIDE then                              !Flip is on
		nframe=WIDO_FRAME_THICKNESS
		wsill=WIDO_SILL
		wthickness=WALL_THICKNESS

		mulstat=-1
		r0=r0-nframe
		r=sqr(av*av/4+r0*r0)
		rfurv=r-wsill+off3                    !wall radius_1
		rclov=rfurv+wthickness                 !wall radius_2
	else                                      !Flip is off
		nframe=WIDO_FRAME_THICKNESS
		wsill=-WIDO_SILL
		wthickness=-WALL_THICKNESS

		mulstat=-1
		rdpi=sqr(av*av/4+r0*r0)
		r0=r0-nframe
		r=sqr(av*av/4+r0*r0)
		kdpi=rdpi-r+WIDO_SILL
		rfurv=r+kdpi+off4                     !wall radius_1
		rclov=rfurv+wthickness                 !wall radius_2
	endif

endif

return

4000:
! --- Texture directions -------------------------------------------------------

vert 0, 0, 0
vert 1, 0, 0
vert 0, 1, 0
vert 0, 0, 1
coor 2, -1, -2, -3, -4
body 1

return
