
! Contact person: <SzL, NJ>

! =============================================================================

lod3D = 0										! Don't draw anything
if (GLOB_VIEW_TYPE = 9 & GLOB_PREVIEW_MODE = 0) then	! in case of Surface IS Calculation
	lod3D = 2	! Detailed
else
	if iDWDet3D = DETLEVEL_DW3D_SIMPLE then lod3D = 1	! Simple
	if iDWDet3D = DETLEVEL_DW3D_DETAILED then lod3D = 2	! Detailed
	if iDWDet3D = DETLEVEL_DW3D_CHI_SIMPLE | iDWDet3D = DETLEVEL_DW3D_CHI_DETAILED then
		if (GLOB_CONTEXT = 4 | GLOB_CONTEXT = 24 | GLOB_CONTEXT = 6) then
			lod3D = 5								! Chinese
		else
			lod3D = 2
		endif
	endif
endif

gs_fillFr		= gs_bFills * gs_fillFr
gs_penFr_fg		= gs_bFills * gs_penFr_fg
gs_penFr_bg		= gs_bFills * gs_penFr_bg

gs_fillSash		= gs_bFills * gs_fillSash
gs_penSash_fg	= gs_bFills * gs_penSash_fg
gs_penSash_bg	= gs_bFills * gs_penSash_bg

if not(gs_shadow) then shadow off


! =============================================================================
! GS Window Functions
! =============================================================================

call "GS Window Functions",
	parameters all	iWindowShape			= iWindowShape,
					openingArchHeight		= openingArchHeight,
					gs_IsCurved				= gs_IsCurved,
					nArchResolution			= gs_res,
					bParalellInCurvedWalls	= bParalellInCurvedWalls,
					lod3D					= lod3D,
					bDisabeMirroring		= bDisabeMirroring,
					smallRadiusEllips		= r1,
	returned_parameters	ac_unit_width,
						ac_unit_height,
						gs_frame_ovhg_left_out,
						gs_frame_ovhg_right_out,
						gs_frame_ovhg_top_out,
						gs_frame_ovhg_bottom_out,
						gs_frame_ovhg_left_in,
						gs_frame_ovhg_right_in,
						gs_frame_ovhg_top_in,
						gs_frame_ovhg_bottom_in,
						bMirrored,
						xform11, xform12, xform13, xform14,
						xform21, xform22, xform23, xform24,
						xform31, xform32, xform33, xform34,

						bOplines3d, opLineType3dIn, opLineType3dOut, gs_opline_style_m, gs_opLinePen,
						bShowAddHotspots, bShowAddHotspotsForIS, bShowUnitHotspots


! =============================================================================
! Block for operator mode
! =============================================================================

if GLOB_CONTEXT > 40 & GLOB_CONTEXT < 50 then
	ace=ac_wallhole_width/2
	bce=ac_wallhole_height-gs_shoulderHeight

	mce=ace-r1
	nce=bce-r1
	cce=sqr(mce^2+nce^2)/2
	fce=((2*cce^2)/nce)-nce
	r2=fce+bce
	alphace=90-(2*asn(cce/(fce+nce)))

	addy gs_tolerance_lower
	prism_ 8, WIDO_FRAME_THICKNESS,
		ac_unit_width/2,		0, 15,
		ac_unit_width/2,		gs_shoulderHeight-gs_tolerance_lower,	79,
		r1-gs_tolerance_left,			alphace,			2079,
		r2-gs_tolerance_left,			90-alphace,			2079,
		r2-gs_tolerance_left,			90-alphace,			2079,
		r1-gs_tolerance_left,			alphace,			2079,
		-ac_unit_width/2,		gs_shoulderHeight-gs_tolerance_lower,	15,
		-ac_unit_width/2,		0, 15

	del 1
	end
endif


if lod3D = 0 then end

xform	xform11, xform12, xform13, xform14,
		xform21, xform22, xform23, xform24,
		xform31, xform32, xform33, xform34

muly -1
addy WIDO_FRAME_THICKNESS

temp = gs_frame_ovhg_left_out
gs_frame_ovhg_left_out = gs_frame_ovhg_left_in
gs_frame_ovhg_left_in = temp

temp = gs_frame_ovhg_right_out
gs_frame_ovhg_right_out = gs_frame_ovhg_right_in
gs_frame_ovhg_right_in = temp

temp = gs_frame_ovhg_top_in
gs_frame_ovhg_top_in = gs_frame_ovhg_top_out
gs_frame_ovhg_top_out = temp

temp = gs_frame_ovhg_bottom_in
gs_frame_ovhg_bottom_in = gs_frame_ovhg_bottom_out
gs_frame_ovhg_bottom_out = temp

if lod3D = 5 then	! Chinese
	fr_sect_fill_type	= gs_fillShCover
	fr_sect_fill_fg		= gs_penShCov_fg
	fr_sect_fill_bg		= gs_penShCov_bg
else
	fr_sect_fill_type	= gs_fillFr
	fr_sect_fill_fg		= gs_penFr_fg
	fr_sect_fill_bg		= gs_penFr_bg
endif


A = ac_unit_width
B = ac_unit_height

rotx 90


leftOvhg	=	max(gs_frame_ovhg_left_out, gs_frame_ovhg_left_in)
rightOvhg	=	leftOvhg
topOvhg		=	leftOvhg
bottomOvhg	=	max(gs_frame_ovhg_bottom_out, gs_frame_ovhg_bottom_in)


! =============================================================================
! Unit Hotspots
! =============================================================================

if bShowUnitHotspots then
	unID=100

	hotspot a/2, 0, 0, unID		:unID=unID+1
	hotspot -a/2, 0, 0, unID	:unID=unID+1
	hotspot a/2, 0, gs_frame_thk, unID		:unID=unID+1
	hotspot -a/2, 0, gs_frame_thk, unID	:unID=unID+1

	hotspot a/2, gs_shoulderHeight, gs_frame_thk, unID		:unID=unID+1
	hotspot -a/2, gs_shoulderHeight, gs_frame_thk, unID	:unID=unID+1

	hotspot 0, b, 0, unID		:unID=unID+1
	hotspot 0, b, gs_frame_thk, unID

	!!! Shoulder Height
	unID=1300
	hotspot a/2, 0, 0, unID, gs_shoulderHeight, 1+128:unID=unID+1
	hotspot a/2, -1, 0, unID, gs_shoulderHeight, 3:unID=unID+1
	hotspot a/2, gs_shoulderHeight, 0, unID, gs_shoulderHeight, 2

	unID=1310
	hotspot -a/2, 0, 0, unID, gs_shoulderHeight, 1+128:unID=unID+1
	hotspot -a/2, -1, 0, unID, gs_shoulderHeight, 3:unID=unID+1
	hotspot -a/2, gs_shoulderHeight, 0, unID, gs_shoulderHeight, 2

endif


! =============================================================================
! Unit Hotspots for IS
! =============================================================================

if bShowAddHotspotsForIS then
	unID=108

	hotspot 0, 0, 0, unID		:unID=unID+1
	hotspot 0, 0, gs_frame_thk, unID

endif

resol gs_res


! =============================================================================
! Draw Frame
! =============================================================================

if lod3D = 1 then	! Simple
	if not(WIDO_REVEAL_SIDE) then
		frameThk  = gs_frame_thk/2 + gs_glass_thk/2
		frameThk2 = gs_frame_thk/2 - gs_glass_thk/2
	else
		frameThk  = gs_frame_thk/2 - gs_glass_thk/2
		frameThk2 = gs_frame_thk/2 + gs_glass_thk/2
	endif
else
	frameThk  = gs_frame_thk - gs_rebate_depth
	frameThk2 = gs_rebate_depth
endif

if gs_frame_mat = gs_frame_mat2 | frameThk < EPS | frameThk2 < EPS then
	loopNum = 1
	if gs_frame_mat = gs_frame_mat2 then
		frameThk = gs_frame_thk
	else
		frameThk = max(frameThk, frameThk2)
	endif
	if not(WIDO_REVEAL_SIDE) then
		frameMatTop		= gs_frame_mat
		frameMatBottom	= gs_frame_mat2
	else
		frameMatTop		= gs_frame_mat2
		frameMatBottom	= gs_frame_mat
	endif
	if WIDO_REVEAL_SIDE then
		frameMat = gs_frame_mat2
	else
		frameMat = gs_frame_mat
	endif
	frameMask = 15
else
	loopNum = 2
	if not(WIDO_REVEAL_SIDE) then
		frameMat  = gs_frame_mat2
		frameMat2 = gs_frame_mat
	else
		frameMat  = gs_frame_mat
		frameMat2 = gs_frame_mat2
	endif
	frameMatTop		= frameMat2
	frameMatBottom	= frameMat

	frameMask = 11
	frameMask2 = 14
endif

pen gs_frame_pen
sect_fill fr_sect_fill_type, fr_sect_fill_bg, fr_sect_fill_fg, gs_frame_pen_cont

ace = (ac_unit_width + leftOvhg + rightOvhg)/2
bce=ac_wallhole_height-gs_shoulderHeight

mce=ace-r1
nce=bce-r1
cce=sqr(mce^2+nce^2)/2
fce=((2*cce^2)/nce)-nce
r2=fce+bce
alphace=90-(2*asn(cce/(fce+nce)))
gammace=180-2*alphace

for i=1 to loopNum

	material frameMat

	if gs_SashText_typ_num = 1 then
		put	A/2 + leftOvhg, -bottomOvhg,	frameMask - 2
	else
		put	A/2 + leftOvhg, gs_frame_width, frameMask - 2
	endif

	put	A/2 + leftOvhg,		gs_shoulderHeight-bottomOvhg,					frameMask + 64,
		r1,			alphace,			2000 + frameMask + 64,
		r2,			90-alphace,			2000 + frameMask + 64,
		r2,			90-alphace,			2000 + frameMask + 64,
		r1,			alphace,			2000 + frameMask + 64,
		-A/2 - rightOvhg,		gs_shoulderHeight-bottomOvhg,					frameMask - 2

	if gs_SashText_typ_num = 1 then
		put	-A/2 - rightOvhg, -bottomOvhg, 10
	else
		put	-A/2 - rightOvhg, gs_frame_width, 8
	endif

	put	-A/2 + gs_frame_width,	gs_frame_width,		frameMask,
		-A/2 + gs_frame_width,	gs_shoulderHeight-bottomOvhg,					frameMask + 64,
		r1 - leftOvhg - gs_frame_width,	-alphace,			2000 + frameMask + 64,
		r2 - leftOvhg - gs_frame_width,	-90+alphace,		2000 + frameMask + 64,
		r2 - leftOvhg - gs_frame_width,	-90+alphace,		2000 + frameMask + 64,
		r1 - leftOvhg - gs_frame_width,	-alphace,			2000 + frameMask + 64,
		A/2 - gs_frame_width,	gs_frame_width,		10

	base
	cprism_ frameMatTop, frameMatBottom, frameMat, nsp/3, frameThk,
			get(nsp)
	gosub 1000

	! Bottom
	if gs_SashText_typ_num = 1 then
		put	-A/2 + gs_frame_width,	gs_frame_width,	10,
			-A/2 - rightOvhg,		-bottomOvhg,	frameMask,
			A/2 + leftOvhg,		-bottomOvhg, 	10,
			A/2 - gs_frame_width,	gs_frame_width, frameMask
	else
		put	-A/2 + gs_frame_width,	gs_frame_width, 10,
			-A/2 - rightOvhg,		gs_frame_width, frameMask - 2,
			-A/2 - rightOvhg,		-bottomOvhg, 	frameMask,
			A/2 + leftOvhg,		-bottomOvhg, 	frameMask,
			A/2 + leftOvhg,		gs_frame_width, 8,
			A/2 - gs_frame_width,	gs_frame_width, frameMask
	endif

	base
	cprism_ frameMatTop, frameMatBottom, frameMat, nsp/3, frameThk,
			get(nsp)
	gosub 2000

	addz frameThk
	if loopNum > 1 then
		frameThk = frameThk2
		frameMatTop		= frameMat2
		frameMatBottom	= frameMat2
		frameMat		= frameMat2
		frameMask = frameMask2
	endif
next i
del loopNum

body -1


! =============================================================================
! Draw Casement
! =============================================================================

if lod3D = 5 then	! Chinese
	sh_sect_fill_type	= gs_fillShCover
	sh_sect_fill_fg		= gs_penShCov_fg
	sh_sect_fill_bg		= gs_penShCov_bg
else
	sh_sect_fill_type	= gs_fillSash
	sh_sect_fill_fg		= gs_penSash_fg
	sh_sect_fill_bg		= gs_penSash_bg
endif

add sashPosXArray[2][2], sashPosYArray[2][2], gs_frame_thk

call "Casement_Eyebrows" parameters	A = sashWidthArray[2][2],
									B = sashHeightArray[2][2],
	gs_shoulderHeight				= gs_shoulderHeight - gs_frame_width - gs_tolerance_lower,
	r1								= r1 - gs_frame_width - gs_tolerance_left,
	lod3D							= lod3D,
	res								= gs_res,
	gs_rebate_width					= gs_rebate_width,
	gs_rebate_depth					= gs_rebate_depth,
	gs_frame_width					= gs_frame_width,
	gs_frame_thk					= gs_frame_thk,
	gs_sash_width					= gs_sash_width,
	gs_sash_thk						= gs_sash_thk,
	iMullionStyle					= iMullionStyle_01,
	iMullionPosition				= iMullionPosition,
	gw								= gw,
	gth								= gth,
	gs_glass_thk					= gs_glass_thk,
	vgn								= vgn_01,
	hgn								= hgn_01,
	gs_frame_pen					= gs_sash_pen,
	gs_glass_pen					= gs_glass_pen,
	gs_frame_mat					= gs_sash_mat2,
	gs_frame_mat2					= gs_sash_mat,
	gs_grill_mat					= gs_grill_mat2,
	gs_grill_mat2					= gs_grill_mat,
	gs_glass_mat					= gs_glass_mat,
	gs_panel_mat					= gs_panel_mat,
	gs_panel_mat2					= gs_panel_mat2,
	openingAngle_01					= openingAngle_01,
	gs_optype_m						= gs_optype_m_01,
	gs_sash_pen						= gs_sash_pen,
	gs_fillSash						= sh_sect_fill_type,
	gs_penSash_bg					= sh_sect_fill_bg,
	gs_penSash_fg					= sh_sect_fill_fg,
	gs_frame_pen_cont				= gs_frame_pen_cont,
	bOpeningDirectionInside			= WIDO_REVEAL_SIDE,
	gs_cust_panel					= gs_cust_panel_01,
	eyebrows_unID					= 1000
!	bOplines3d						= bOplines3d,
!	opLineType3dIn					= opLineType3dIn,
!	opLineType3dOut					= opLineType3dOut,
!	gs_opline_style_m				= gs_opline_style_m,
!	gs_opLinePen					= gs_opLinePen

del 1


! =============================================================================
end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end
! =============================================================================


!! 3D-SUBROUTINES !!


1000:
! --- Texture directions -------------------------------------------------------

vert 0, 0, 0
vert 0, 1, 0
vert 1, 0, 0
vert 0, 0, 1
coor 2, -1, -2, -3, -4
body 1

return

2000:
! --- Texture directions -------------------------------------------------------

vert 0, 0, 0
vert 1, 0, 0
vert 0, 1, 0
vert 0, 0, 1
coor 2, -1, -2, -3, -4
body 1

return
