
! const values for parameter: iDWDet3D
DETLEVEL_DW3D_SCALESENS    = 1
DETLEVEL_DW3D_DETAILED     = 2
DETLEVEL_DW3D_SIMPLE       = 3
DETLEVEL_DW3D_OFF          = 4
DETLEVEL_DW3D_CHI_SIMPLE   = 5
DETLEVEL_DW3D_CHI_DETAILED = 6

! const values for parameter: iTypeDemolitionFill
RENOVATION_FILL_EXIST		= 1
RENOVATION_FILL_DEMOLISHED	= 2
RENOVATION_FILL_NEW			= 3
RENOVATION_FILL_NEW_FULL	= 4

! const values for parameter: iMullionPosition
MULLION_OUTSIDE    = 1
MULLION_INSIDE     = 2
MULLION_THROUGHOUT = 3

! const values for parameter: gs_SashText_typ_num
MITERED_JOINT = 1
BUTT_JOINT    = 2

! Contact person: <SzL, NJ>


if GLOB_SCRIPT_TYPE = 7 | GLOB_SCRIPT_TYPE = 8 then goto "MasterEnd"	! forward migration, backward migration

! =============================================================================
! Main Definitions
! =============================================================================

EPS = 0.0001

gs_RevealTypeEnable  = 1

gs_IsCurved			= 0
bParalellInCurvedWalls = 0
bDisabeMirroring	= 0
iWindowShape		= 0		! SHAPE_RECTANGULAR

gs_fillFr	= gs_fillFr * gs_bFills
gs_fillSash	= gs_fillSash * gs_bFills
frame_toler = gs_tolerance_bay

! lod2D
DET2D_FS_OFF				= 0
DET2D_FS_SCALESENS			= -1
DET2D_FS_SIMPLE_ONE			= 11
DET2D_FS_SIMPLE_TWO			= 12
DET2D_FS_MIDDLE				= 21
DET2D_FS_MIDDLE_USA			= 22
DET2D_FS_DETAILED			= 30
DET2D_FS_DETAILED_FIX_GRID	= 31
DET2D_FS_DETAILED_USA		= 32
DET2D_FS_SIMPLE_CHI			= 51
DET2D_FS_DETAILED_CHI		= 52

! iLoD2D
SYMBW_OFF					= 0
SYMBW_SCALESENS				= 1
SYMBW_S_1LINE				= 11
SYMBW_S_2LINE				= 12
SYMBW_S_CENTERLINE			= 13
SYMBW_S_2LINE_ACC			= 14
SYMBW_S_5					= 15
SYMBW_S_6					= 16
SYMBW_S_7					= 17
SYMBW_S_8					= 18
SYMBW_S_9					= 19
SYMBW_M_2LINE_NOGLASS		= 21
SYMBW_M_2LINE_GLASS			= 22
SYMBW_M_FRAMESASH			= 23
SYMBW_M_2LINE_FRAME			= 24
SYMBW_M_5					= 25
SYMBW_M_6					= 26
SYMBW_M_7					= 27
SYMBW_M_8					= 28
SYMBW_M_9					= 29
SYMBW_D_SGLASS				= 31
SYMBW_D_2GLASS				= 32
SYMBW_D_2LINE_HS			= 33
SYMBW_D_NOGLASS				= 34
SYMBW_D_REBATEONGLASS		= 35
SYMBW_D_2GLASS_OVERLAP		= 36
SYMBW_D_7					= 37
SYMBW_D_8					= 38
SYMBW_D_9					= 39

! gs_optype_m
SASH_FIXED				= 1		! Fixed Glazing
SASH_FIXED_SCREW		= 2		! Sash Fixed with Screw
SASH_SIDE_HUNG			= 3		! Side Hung
SASH_SIDE_HUNG_M		= 4		! Side Hung Mirrored
SASH_TILT_TURN			= 5		! Tilt and Turn
SASH_TILT_TURN_M		= 6		! Tilt and Turn Mirrored
SASH_BOTTOM_HUNG		= 7		! Bottom Hung
SASH_TOP_HUNG			= 8		! Top Hung

! iGrill:
MULLION_NONE			= 1
MULLION_HVGRID			= 2
MULLION_EDITABLEGRID	= 3
MULLION_CUSTOM			= 4
MULLION_PRAIRIE			= 5
MULLION_DIVIDED			= 6
MULLION_SUNBURST_1		= 7
MULLION_SUNBURST_2		= 8
MULLION_SUNBURST_3		= 9
MULLION_SUNBURST_4		= 10
MULLION_SUNBURST_5		= 11
MULLION_SUNBURST_6		= 12
MULLION_SOLID_GLAZED	= 13
MULLION_DIVIDED_FRAME	= 14
MULLION_SOLID_PANEL		= 15
MULLION_VENT_PANEL		= 16

! =============================================================================
! Casement IDs
! =============================================================================

dim CasementIDArray[3][3]
CasementIDArray[1][1]	= 0
if gs_UTrans then
	CasementIDArray[1][2]	= 2
else
	CasementIDArray[1][2]	= 0
endif
CasementIDArray[1][3]	= 0
CasementIDArray[2][1]	= 9
CasementIDArray[2][2]	= 1
CasementIDArray[2][3]	= 5
CasementIDArray[3][1]	= 0
CasementIDArray[3][2]	= 0
CasementIDArray[3][3]	= 0

! =============================================================================
! Localization
! =============================================================================

dim stDetail[6]
	stDetail[1] = `Зависит от Масштаба`
	stDetail[2] = `Детальный`
	stDetail[3] = `Простой`
	stDetail[4] = `Откл.`
	stDetail[5] = `Китайский Простой`
	stDetail[6] = `Китайский Детальный`

dim stSashType[17]
	stSashType[1] = `Без Раскладки`
	stSashType[2] = `Г/В-Раскладка`
	stSashType[3] = `Редактируемая Раскладка`
	stSashType[4] = `Специальная Створка`
	stSashType[5] = `Стиль Прерия`
	stSashType[6] = `Разделенный`
	stSashType[7] = `Солнечные Лучи 1`
	stSashType[8] = `Солнечные Лучи 2`
	stSashType[9] = `Солнечные Лучи 3`
	stSashType[10] = `Солнечные Лучи 4`
	stSashType[11] = `Солнечные Лучи 5`
	stSashType[12] = `Солнечные Лучи 6`
	stSashType[13] = `Сплошное Остекление`
	stSashType[14] = `Разделенная Рама`
	stSashType[15] = `Сплошная Панель`
	stSashType[16] = `Вентиляционная Створка`
	stSashType[17] = `Французская Панель`

dim stMullionPosition[3]
	stMullionPosition[1] = `Снаружи`
	stMullionPosition[2] = `Внутри`
	stMullionPosition[3] = `Посередине`

dim stOpeningType[8]
	stOpeningType[1] = `Фиксированный`
	stOpeningType[2] = ""
	stOpeningType[3] = `Распашная`
	stOpeningType[4] = `Распашная Зеркальная`
	stOpeningType[5] = `Наклонно-Поворотная `
	stOpeningType[6] = `Наклонно-Поворотная Зеркальная`
	stOpeningType[7] = `Нижнеподвесная`
	stOpeningType[8] = `Верхнеподвесная`

if GLOB_SCRIPT_TYPE = 2 | GLOB_SCRIPT_TYPE = 3 then
	if ((GLOB_PREVIEW_MODE = 2) | GLOB_CONTEXT = 46) then
		gs_sill_outside = 0
		gs_board_inside = 0
	endif
endif

osl = 0
osr = 0
oslo = 0
osup = 0


IF ac_unit_width<=0 then ac_unit_width=0.01

rb=(byd^2+((ac_unit_width/2)-frame_toler)^2)/(2*byd)
bang=2*ASN(((ac_unit_width/2)-frame_toler)/rb)
ami=2*rb*SIN(bang/nsa/2)


!! NUMBER OF SASHES !!
hsa=(ami-(nsa+1)*gs_frame_width)/nsa      ! Width of one sash


!! GRIDS IN 2D !!
if vgn<>0 then hgnn=((ami-2*gs_sash_width-gs_frame_width+gw)/(vgn))-gw    ! Glasspane width between grids

!! UNDERCLOAK !!
IF uclsill<0 THEN PARAMETERS uclsill=0
IF uclsill>gs_sill_nosing THEN PARAMETERS uclsill=gs_sill_nosing
IF uclh<0 THEN PARAMETERS uclh=0


!! ROOF !!
IF rsill<0 THEN PARAMETERS rsill=0
IF roh<=0 THEN PARAMETERS roh=0.0001


!! GRILL !!
IF gs_UTrans_h>ac_unit_height-2*gs_frame_width THEN PARAMETERS gs_UTrans_h=ac_unit_height-2*gs_frame_width
IF iGrill = MULLION_HVGRID THEN
	IF gw<=0 THEN  PARAMETERS gw=0.0001
	IF gw>ac_unit_width-2*gs_frame_width+2*gs_rebate_width-2*gs_sash_width THEN  PARAMETERS gw=ac_unit_width-2*gs_frame_width+2*gs_rebate_width-2*gs_sash_width
		IF iMullionPosition = MULLION_THROUGHOUT THEN
		IF gth<=0 THEN  PARAMETERS gth=0.0001
		IF gth>gs_sash_thk THEN  PARAMETERS gth=gs_sash_thk
		ELSE
		IF gth<=0 THEN  PARAMETERS gth=0.0001
		IF gth>(gs_sash_thk-gs_glass_thk)/2 THEN  PARAMETERS gth=(gs_sash_thk-gs_glass_thk)/2
		ENDIF
ENDIF


!! OPENING ANGLE IN 3D !!

IF opa_a>=270 and opa_a<360 THEN PARAMETERS opa_a=0
IF opa_a>90 and opa_a<270 THEN PARAMETERS opa_a=90

IF opa_d>=270 and opa_d<360 THEN PARAMETERS opa_d=0
IF opa_d>90 and opa_d<270 THEN PARAMETERS opa_d=90

IF opa_c>=270 and opa_c<360 THEN PARAMETERS opa_c=0
IF opa_c>90 and opa_c<270 THEN PARAMETERS opa_c=90

		! New equable panels if any params below has changed
		DIM EditGrid_params[30]
		EditGrid_params[1] = "hgn"
		EditGrid_params[2] = "vgn"
		EditGrid_params[3] = "hgn2"
		EditGrid_params[4] = "vgn2"
		EditGrid_params[5] = "hgn3"
		EditGrid_params[6] = "vgn3"
		EditGrid_params[7] = "hgn4"
		EditGrid_params[8] = "vgn4"
		EditGrid_params[9] = "hgn5"
		EditGrid_params[10] = "vgn5"
		EditGrid_params[11] = "gs_UTrans"
		EditGrid_params[12] = "gs_UTrans_w"
		EditGrid_params[13] = "gs_UTrans_h"
		EditGrid_params[14] = "msw"
		EditGrid_params[15] = "gs_tolerance"
		EditGrid_params[16] = "gs_SLight_w"
		EditGrid_params[17] = "gs_Mullion_Top"
		EditGrid_params[18] = "gs_Mullion_Bott"
		EditGrid_params[19] = "A"
		EditGrid_params[20] = "B"

		new_grills = 0
		For ikj = 1 to 18
			IF var_par = EditGrid_params[ikj] THEN new_grills = ikj
		Next ikj

IF new_grills <> 0 THEN

	bwtr=-(gs_UTrans_w/2-2*gs_frame_width+2*gs_rebate_width)
	IF gs_UTrans=0 THEN bwtr=b-gs_UTrans_h

IF	var_par="grill" OR var_par="iGrill" OR var_par="hgn" OR var_par="vgn" OR var_par="gs_UTrans_w" OR var_par="gs_UTrans_h" OR\
	var_par="gs_UTrans" OR var_par="gs_tolerance" OR var_par="A" OR var_par="B" THEN

	aaa=ami-2*gs_frame_width+2*gs_rebate_width
	bbb=gs_UTrans_h+bwtr-2*gs_frame_width+2*gs_rebate_width

	for i=1 to vgn-1
		parameters vergrid[i][1]=i*(aaa-2*gs_sash_width+gw)/(vgn)
		parameters vergrid[i][2]=gs_sash_width
		parameters vergrid[i][3]=bbb-gs_sash_width
	next i

	for i=1 to hgn-1
		parameters horgrid[i][1]=i*(bbb-2*gs_sash_width+gw)/(hgn)
		parameters horgrid[i][2]=gs_sash_width
		parameters horgrid[i][3]=aaa-gs_sash_width
	next i
ENDIF

!................................

IF	var_par="grill" OR var_par="iGrill" OR var_par="hgn" OR var_par="vgn" OR var_par="gs_UTrans_w" OR var_par="gs_UTrans_h" OR\
	var_par="gs_UTrans" OR var_par="gs_tolerance" OR var_par="A" OR var_par="B" THEN


	aaa=ami-2*gs_frame_width+2*gs_rebate_width
	bbb=gs_UTrans_h+bwtr-2*gs_frame_width+2*gs_rebate_width

	for i=1 to vgn-1
		parameters vergridr[i][1]=i*(aaa-2*gs_sash_width+gw)/(vgn)
		parameters vergridr[i][2]=gs_sash_width
		parameters vergridr[i][3]=bbb-gs_sash_width
	next i

	for i=1 to hgn-1
		parameters horgridr[i][1]=i*(bbb-2*gs_sash_width+gw)/(hgn)
		parameters horgridr[i][2]=gs_sash_width
		parameters horgridr[i][3]=aaa-gs_sash_width
	next i

ENDIF

!............................................

IF	var_par="grill" OR var_par="iGrill" OR var_par="hgn" OR var_par="vgn" OR var_par="gs_UTrans_w" OR var_par="gs_UTrans_h" OR\
	var_par="gs_UTrans" OR var_par="gs_tolerance" OR var_par="A" OR var_par="B" THEN

	aaa=ami-2*gs_frame_width+2*gs_rebate_width
	bbb=gs_UTrans_h+bwtr-2*gs_frame_width+2*gs_rebate_width

	for i=1 to vgn-1
		parameters vergridx[i][1]=i*(aaa-2*gs_sash_width+gw)/(vgn)
		parameters vergridx[i][2]=gs_sash_width
		parameters vergridx[i][3]=bbb-gs_sash_width
	next i

	for i=1 to hgn-1
		parameters horgridx[i][1]=i*(bbb-2*gs_sash_width+gw)/(hgn)
		parameters horgridx[i][2]=gs_sash_width
		parameters horgridx[i][3]=aaa-gs_sash_width
	next i

ENDIF

! Upper

IF	var_par="grill4" OR var_par="hgn4" OR var_par="vgn4" OR var_par="gs_UTrans_w" OR var_par="gs_UTrans_h" OR\
	var_par="gs_tolerance" OR var_par="A" OR var_par="B" THEN


	aaa=ami-2*gs_frame_width+2*gs_rebate_width
	bbb=ac_unit_height-gs_UTrans_h-gs_UTrans_w/2

	for i=1 to vgn4-1
		parameters vergridl[i][1]=i*(aaa-2*gs_sash_width+gw)/(vgn4)
		parameters vergridl[i][2]=gs_sash_width
		parameters vergridl[i][3]=bbb-gs_sash_width
	next i

	for i=1 to hgn4-1
		parameters horgridl[i][1]=i*(bbb-2*gs_sash_width+gw)/(hgn4)
		parameters horgridl[i][2]=gs_sash_width
		parameters horgridl[i][3]=aaa-gs_sash_width
	next i

endif
endif

!! CURVED WALL CALCULATION !!

IF abs(WIDO_ORIG_DIST)>EPS THEN

fdpi = 0

r0=ABS(WIDO_ORIG_DIST)

IF WIDO_ORIG_DIST<0 THEN                 !Wall is convex from "outside"

IF WIDO_REVEAL_SIDE THEN                             !Flip is on

	IF abs(SYMB_ROTANGLE)<EPS THEN
	nframe=WIDO_FRAME_THICKNESS

	rdpi=SQR(ac_unit_width*ac_unit_width/4+(r0+nframe)^2)
	r=SQR(ac_unit_width*ac_unit_width/4+r0*r0)
	calpha=ASN(ac_unit_width/2/r)                   !window half angle

	ELSE    ! W~=180 Rotated window

	nframe=WIDO_FRAME_THICKNESS

	r0=r0-nframe
	rdpi=SQR(ac_unit_width*ac_unit_width/4+(r0+nframe)^2)
	r=SQR(ac_unit_width*ac_unit_width/4+r0*r0)
	calpha=ASN(ac_unit_width/2/r)                   !window half angle

	ENDIF

ELSE                                     !Flip is off

	IF abs(SYMB_ROTANGLE)<EPS THEN
	nframe=0

	r=SQR(ac_unit_width*ac_unit_width/4+r0*r0)
	calpha=ASN(ac_unit_width/2/r)                    !window half angle

	ELSE    ! SYMB_ROTANGLE=180 Rotated window

	nframe=WIDO_FRAME_THICKNESS

	fdpi=SQR(ac_unit_width*ac_unit_width/4+(r0)^2)-SQR(ac_unit_width*ac_unit_width/4+(r0-WIDO_FRAME_THICKNESS)^2)
	r0=r0-nframe
	r=SQR(ac_unit_width*ac_unit_width/4+r0*r0)
	calpha=ASN(ac_unit_width/2/r)                    !window half angle

	ENDIF

ENDIF


ELSE                                      !Wall is concave from "outside"


IF WIDO_REVEAL_SIDE THEN                               !Flip is on

	IF abs(SYMB_ROTANGLE)<EPS THEN
	!nframe=WIDO_FRAME_THICKNESS

	fdpi=SQR(ac_unit_width*ac_unit_width/4+(WIDO_ORIG_DIST+WIDO_FRAME_THICKNESS)^2)-SQR(ac_unit_width*ac_unit_width/4+(WIDO_ORIG_DIST)^2)
	r0=r0-nframe
	r=SQR(ac_unit_width*ac_unit_width/4+r0*r0)
	calpha=ASN(ac_unit_width/2/r)                    !window half angle

	ELSE    ! SYMB_ROTANGLE=180 Rotated window

	nframe=WIDO_FRAME_THICKNESS

	r0=r0-nframe
	r=SQR(ac_unit_width*ac_unit_width/4+r0*r0)
	calpha=ASN(ac_unit_width/2/r)                    !window half angle
	ENDIF


ELSE                                     !Flip is off
	IF abs(SYMB_ROTANGLE)<EPS THEN
	!nframe=WIDO_FRAME_THICKNESS

	rdpi=SQR(ac_unit_width*ac_unit_width/4+r0*r0)
	r=SQR(ac_unit_width*ac_unit_width/4+r0*r0)
	calpha=ASN(ac_unit_width/2/r)                    !window half angle

	ELSE    ! SYMB_ROTANGLE=180 Rotated window

	nframe=WIDO_FRAME_THICKNESS

	rdpi=SQR(ac_unit_width*ac_unit_width/4+r0*r0)
	fdpi=rdpi-SQR(ac_unit_width*ac_unit_width/4+(r0-WIDO_FRAME_THICKNESS)^2)
	r0=r0-nframe
	r=SQR(ac_unit_width*ac_unit_width/4+r0*r0)
	calpha=ASN(ac_unit_width/2/r)                    !window half angle
	ENDIF

ENDIF

ENDIF


!Additional values


calphar=90+calpha

!right oversize and sill angle
rosr=SQR(r^2+osr^2-2*r*osr*cos(calphar))
cbetarr=ASN(osr*sin(calphar)/rosr)          ! Right oversize angle


!left oversize and sill angle
rosl=SQR(r^2+osl^2-2*r*osl*cos(calphar))
cbetarl=ASN(osl*sin(calphar)/rosl)          !Left oversize angle

ENDIF

!! END OF CURVED WALL CALCULATIONS !!


! OPENING LINE in 3D

gs_optype_m_01 = SASH_FIXED

! iMullionStyle
iMullionStyle = iGrill

if gs_optype_m_02 = SASH_SIDE_HUNG		then rots_d = 3		!!MIGHT CHANGE(3 or 1)!!!
if gs_optype_m_02 = SASH_SIDE_HUNG_M	then rots_d = 1		!!MIGHT CHANGE mirrored(3 or 1)!!!
if gs_optype_m_02 = SASH_BOTTOM_HUNG	then rots_d = 4		!!Bottom hung
if gs_optype_m_02 = SASH_TOP_HUNG		then rots_d = 2		!!Top hung
if gs_optype_m_02 = SASH_TILT_TURN		then rots_d = 31	!!Tilt Turn, MIGHT CHANGE(30 or 31)
if gs_optype_m_02 = SASH_TILT_TURN_M	then rots_d = 30	!!Tilt Turn mirrored, MIGHT CHANGE(30 or 31)

!!!rots_a = 100		!Fix
if gs_optype_m_09 = SASH_SIDE_HUNG		then rots_a = 1		!!MIGHT CHANGE(3 or 1)!!!
if gs_optype_m_09 = SASH_SIDE_HUNG_M	then rots_a = 3		!!MIGHT CHANGE mirrored(3 or 1)!!!
if gs_optype_m_09 = SASH_BOTTOM_HUNG	then rots_a = 4		!!Bottom hung
if gs_optype_m_09 = SASH_TOP_HUNG		then rots_a = 2		!!Top hung
if gs_optype_m_09 = SASH_TILT_TURN		then rots_a = 30 	!!Tilt Turn, MIGHT CHANGE(30 or 31)
if gs_optype_m_09 = SASH_TILT_TURN_M	then rots_a = 31 	!!Tilt Turn mirrored, MIGHT CHANGE(30 or 31)

!!rots_b = 100		!Fix
if gs_optype_m_05 = SASH_SIDE_HUNG		then rots_b = 3		!!MIGHT CHANGE(3 or 1)!!!
if gs_optype_m_05 = SASH_SIDE_HUNG_M	then rots_b = 1		!!MIGHT CHANGE mirrored(3 or 1)!!!
if gs_optype_m_05 = SASH_BOTTOM_HUNG	then rots_b = 4		!!Bottom hung
if gs_optype_m_05 = SASH_TOP_HUNG		then rots_b = 2		!!Top hung
if gs_optype_m_05 = SASH_TILT_TURN		then rots_b = 31 	!!Tilt Turn, MIGHT CHANGE(30 or 31)
if gs_optype_m_05 = SASH_TILT_TURN_M	then rots_b = 30 	!!Tilt Turn, MIGHT CHANGE(30 or 31)

bLockOpeningAngle2D =	(gs_optype_m_05 = SASH_BOTTOM_HUNG | gs_optype_m_05 = SASH_TOP_HUNG) &\
						(gs_optype_m_09 = SASH_BOTTOM_HUNG | gs_optype_m_09 = SASH_TOP_HUNG)

bLockOpeningLenght2D = (gs_optype_m_05 # SASH_BOTTOM_HUNG & gs_optype_m_05 # SASH_TOP_HUNG) &\
						(gs_optype_m_09 # SASH_BOTTOM_HUNG & gs_optype_m_09 # SASH_TOP_HUNG)

"MasterEnd":
