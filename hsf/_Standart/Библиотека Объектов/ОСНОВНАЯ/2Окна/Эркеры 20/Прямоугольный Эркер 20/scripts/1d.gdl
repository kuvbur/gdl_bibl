
! const values for parameter: iDWDet3D
DETLEVEL_DW3D_SCALESENS    = 1
DETLEVEL_DW3D_DETAILED     = 2
DETLEVEL_DW3D_SIMPLE       = 3
DETLEVEL_DW3D_OFF          = 4
DETLEVEL_DW3D_CHI_SIMPLE   = 5
DETLEVEL_DW3D_CHI_DETAILED = 6

! const values for parameter: iTypeDemolitionFill
RENOVATION_FILL_EXIST		= 1
RENOVATION_FILL_DEMOLISHED	= 2
RENOVATION_FILL_NEW			= 3
RENOVATION_FILL_NEW_FULL	= 4

! const values for parameter: iMullionPosition
MULLION_OUTSIDE    = 1
MULLION_INSIDE     = 2
MULLION_THROUGHOUT = 3

! const values for parameter: gs_SashText_typ_num
MITERED_JOINT = 1
BUTT_JOINT    = 2

! Contact person: <SzL, NJ>


if GLOB_SCRIPT_TYPE = 7 | GLOB_SCRIPT_TYPE = 8 then goto "MasterEnd"	! forward migration, backward migration

! =============================================================================
! Main Definitions
! =============================================================================

EPS = 0.0001

gs_RevealTypeEnable  = 1

gs_IsCurved			= 0
bParalellInCurvedWalls = 0
bDisabeMirroring	= 0
iWindowShape		= 0		! SHAPE_RECTANGULAR

gs_fillFr	= gs_fillFr * gs_bFills
gs_fillSash	= gs_fillSash * gs_bFills
frame_toler = gs_tolerance_bay

! lod2D
DET2D_FS_OFF				= 0
DET2D_FS_SCALESENS			= -1
DET2D_FS_SIMPLE_ONE			= 11
DET2D_FS_SIMPLE_TWO			= 12
DET2D_FS_MIDDLE				= 21
DET2D_FS_MIDDLE_USA			= 22
DET2D_FS_DETAILED			= 30
DET2D_FS_DETAILED_FIX_GRID	= 31
DET2D_FS_DETAILED_USA		= 32
DET2D_FS_SIMPLE_CHI			= 51
DET2D_FS_DETAILED_CHI		= 52

! iLoD2D
SYMBW_OFF					= 0
SYMBW_SCALESENS				= 1
SYMBW_S_1LINE				= 11
SYMBW_S_2LINE				= 12
SYMBW_S_CENTERLINE			= 13
SYMBW_S_2LINE_ACC			= 14
SYMBW_S_5					= 15
SYMBW_S_6					= 16
SYMBW_S_7					= 17
SYMBW_S_8					= 18
SYMBW_S_9					= 19
SYMBW_M_2LINE_NOGLASS		= 21
SYMBW_M_2LINE_GLASS			= 22
SYMBW_M_FRAMESASH			= 23
SYMBW_M_2LINE_FRAME			= 24
SYMBW_M_5					= 25
SYMBW_M_6					= 26
SYMBW_M_7					= 27
SYMBW_M_8					= 28
SYMBW_M_9					= 29
SYMBW_D_SGLASS				= 31
SYMBW_D_2GLASS				= 32
SYMBW_D_2LINE_HS			= 33
SYMBW_D_NOGLASS				= 34
SYMBW_D_REBATEONGLASS		= 35
SYMBW_D_2GLASS_OVERLAP		= 36
SYMBW_D_7					= 37
SYMBW_D_8					= 38
SYMBW_D_9					= 39

! gs_optype_m
SASH_FIXED				= 1		! Fixed Glazing
SASH_FIXED_SCREW		= 2		! Sash Fixed with Screw
SASH_SIDE_HUNG			= 3		! Side Hung
SASH_SIDE_HUNG_M		= 4		! Side Hung Mirrored
SASH_TILT_TURN			= 5		! Tilt and Turn
SASH_TILT_TURN_M		= 6		! Tilt and Turn Mirrored
SASH_BOTTOM_HUNG		= 7		! Bottom Hung
SASH_TOP_HUNG			= 8		! Top Hung

! iGrill:
MULLION_NONE			= 1
MULLION_HVGRID			= 2
MULLION_EDITABLEGRID	= 3
MULLION_CUSTOM			= 4
MULLION_PRAIRIE			= 5
MULLION_DIVIDED			= 6
MULLION_SUNBURST_1		= 7
MULLION_SUNBURST_2		= 8
MULLION_SUNBURST_3		= 9
MULLION_SUNBURST_4		= 10
MULLION_SUNBURST_5		= 11
MULLION_SUNBURST_6		= 12
MULLION_SOLID_GLAZED	= 13
MULLION_DIVIDED_FRAME	= 14
MULLION_SOLID_PANEL		= 15
MULLION_VENT_PANEL		= 16

FIXGLASS_OPENING_DIR	= 1
FIXGLASS_OPPOSITE_DIR	= 2

! =============================================================================
! Casement IDs
! =============================================================================

dim CasementIDArray[3][3]
CasementIDArray[1][1]	= 0
if gs_UTrans then
	CasementIDArray[1][2]	= 2
else
	CasementIDArray[1][2]	= 0
endif
CasementIDArray[1][3]	= 6
CasementIDArray[2][1]	= 0
CasementIDArray[2][2]	= 1
CasementIDArray[2][3]	= 5
CasementIDArray[3][1]	= 0
CasementIDArray[3][2]	= 0
CasementIDArray[3][3]	= 0

! =============================================================================
! Localization
! =============================================================================

dim stDetail[6]
	stDetail[1] = `Зависит от Масштаба`
	stDetail[2] = `Детальный`
	stDetail[3] = `Простой`
	stDetail[4] = `Откл.`
	stDetail[5] = `Китайский Простой`
	stDetail[6] = `Китайский Детальный`

dim stSashType[17]
	stSashType[1] = `Без Раскладки`
	stSashType[2] = `Г/В-Раскладка`
	stSashType[3] = `Редактируемая Раскладка`
	stSashType[4] = `Специальная Створка`
	stSashType[5] = `Стиль Прерия`
	stSashType[6] = `Разделенный`
	stSashType[7] = `Солнечные Лучи 1`
	stSashType[8] = `Солнечные Лучи 2`
	stSashType[9] = `Солнечные Лучи 3`
	stSashType[10] = `Солнечные Лучи 4`
	stSashType[11] = `Солнечные Лучи 5`
	stSashType[12] = `Солнечные Лучи 6`
	stSashType[13] = `Сплошное Остекление`
	stSashType[14] = `Разделенная Рама`
	stSashType[15] = `Сплошная Панель`
	stSashType[16] = `Вентиляционная Створка`
	stSashType[17] = `Французская Панель`

dim stMullionPosition[3]
	stMullionPosition[1] = `Снаружи`
	stMullionPosition[2] = `Внутри`
	stMullionPosition[3] = `Посередине`

dim stOpeningType[8]
	stOpeningType[1] = `Фиксированное Остекление`
	stOpeningType[2] = ""
	stOpeningType[3] = `Распашная`
	stOpeningType[4] = `Распашная Зеркальная`
	stOpeningType[5] = `Наклонно-Поворотная `
	stOpeningType[6] = `Наклонно-Поворотная Зеркальная`
	stOpeningType[7] = `Нижнеподвесная`
	stOpeningType[8] = `Верхнеподвесная`

dim stFixGlassDir[2]		! gs_fix_glass_dir
	stFixGlassDir[1] = `По Направлению Открывания`
	stFixGlassDir[2] = `Противоположное Направление`

! iMullionStyle
iMullionStyle = iGrill

gs_optype_m_05 = SASH_FIXED
gs_optype_m_06 = SASH_FIXED

rots_a = 100		!Fix
if gs_optype_m_01 = SASH_SIDE_HUNG		then rots_a = 1		!!MIGHT CHANGE(3 or 1)!!!
if gs_optype_m_01 = SASH_SIDE_HUNG_M	then rots_a = 3		!!MIGHT CHANGE(3 or 1)!!!
if gs_optype_m_01 = SASH_BOTTOM_HUNG	then rots_a = 4		!!Bottom hung
if gs_optype_m_01 = SASH_TOP_HUNG		then rots_a = 2		!!Top hung
if gs_optype_m_01 = SASH_TILT_TURN		then rots_a = 30 	!!Tilt Turn, MIGHT CHANGE(30 or 31)
if gs_optype_m_01 = SASH_TILT_TURN_M	then rots_a = 31 	!!Tilt Turn, MIGHT CHANGE(30 or 31)

rots_b = 100		!Fix

rots_d = 100		!Fix
if gs_optype_m_02 = SASH_SIDE_HUNG		then rots_d = 1		!!MIGHT CHANGE(3 or 1)!!!
if gs_optype_m_02 = SASH_SIDE_HUNG_M	then rots_d = 3		!!MIGHT CHANGE mirror(3 or 1)!!!
if gs_optype_m_02 = SASH_BOTTOM_HUNG	then rots_d = 4		!!Bottom hung
if gs_optype_m_02 = SASH_TOP_HUNG		then rots_d = 2		!!Top hung
if gs_optype_m_02 = SASH_TILT_TURN		then rots_d = 30	!!Tilt Turn, MIGHT CHANGE(30 or 31)
if gs_optype_m_02 = SASH_TILT_TURN_M	then rots_d = 31	!!Tilt Turn mirror, MIGHT CHANGE(30 or 31)

bLockOpeningAngle2D = (gs_optype_m_01 = SASH_FIXED | gs_optype_m_01 = SASH_BOTTOM_HUNG | gs_optype_m_01 = SASH_TOP_HUNG)

if GLOB_SCRIPT_TYPE = 2 | GLOB_SCRIPT_TYPE = 3 then
	if ((GLOB_PREVIEW_MODE = 2) | GLOB_CONTEXT = 46) then
		gs_sill_outside = 0
		gs_board_inside = 0
	endif
endif

osl = 0
osr = 0
oslo = 0
osup = 0


bang=90

!! BAY !!
bafd = 0
IF abs(bang-90)<EPS THEN bafd=gs_frame_thk/2


!! FRAME !!
ami=ac_unit_width-2*((byd-gs_frame_thk/2)/TAN(bang)+gs_frame_thk/2*TAN(bang/2))


!! NUMBER OF SASHES !!
hsa=(ami+2*bafd-(nsa+1)*gs_frame_width)/nsa      ! Width of one sash


!! GRIDS IN 2D !!
if vgn3<>0 then hgnn=((ami+2*bafd-(nsa+1)*gs_frame_width)/nsa+gs_frame_width-2*gs_sash_width+gw)/(vgn3)-gw    ! Glasspane width between grids
If vgn2<>0 Then hgnn2=((byd-gs_frame_thk/2)/SIN(bang)-gs_frame_thk/2*TAN(bang/2)-2*gs_frame_width+gw)/(vgn2)-gw    ! Glasspane width between grids


IF gs_sill_thk<=0 THEN  PARAMETERS gs_sill_thk=0.0001
IF gs_board_nosing<0 THEN  PARAMETERS gs_board_nosing=0
IF gs_sill_nosing<0 THEN  PARAMETERS gs_sill_nosing=0


!! UNDERCLOAK !!
IF not(bUndercloak) then iUndercloakType = 1 !Flat
IF uclsill<0 THEN PARAMETERS uclsill=0
IF uclsill>gs_sill_nosing THEN PARAMETERS uclsill=gs_sill_nosing
IF ucsill>uclsill THEN PARAMETERS ucsill=uclsill
IF uclh<0 THEN PARAMETERS uclh=0
IF uch<=0 THEN PARAMETERS uch=0.0001


!! ROOF !!
IF not(bRoof) then iRoofType = 1 !Flat
IF rlsill<0 THEN PARAMETERS rlsill=0
IF rsill>rlsill THEN PARAMETERS rsill=rlsill
IF rolh<0 THEN PARAMETERS rolh=0
IF roh<=0 THEN PARAMETERS roh=0.0001


!! GRILL !!
IF gs_UTrans_h>ac_unit_height-2*gs_frame_width THEN PARAMETERS gs_UTrans_h=ac_unit_height-2*gs_frame_width
IF iGrill = MULLION_HVGRID THEN
	IF gw<=0 THEN  PARAMETERS gw=0.0001
	IF gw>ac_unit_width-2*gs_frame_width+2*gs_rebate_width-2*gs_sash_width THEN  PARAMETERS gw=ac_unit_width-2*gs_frame_width+2*gs_rebate_width-2*gs_sash_width
		IF iMullionPosition = MULLION_THROUGHOUT THEN
		IF gth<=0 THEN  PARAMETERS gth=0.0001
		IF gth>gs_sash_thk THEN  PARAMETERS gth=gs_sash_thk
		ELSE
		IF gth<=0 THEN  PARAMETERS gth=0.0001
		IF gth>(gs_sash_thk-gs_glass_thk)/2 THEN  PARAMETERS gth=(gs_sash_thk-gs_glass_thk)/2
		ENDIF
ENDIF

! New equable panels if any params below has changed
DIM EditGrid_params[30]
		EditGrid_params[1] = "hgn"
		EditGrid_params[2] = "vgn"
		EditGrid_params[3] = "hgn2"
		EditGrid_params[4] = "vgn2"
		EditGrid_params[5] = "hgn3"
		EditGrid_params[6] = "vgn3"
		EditGrid_params[7] = "hgn4"
		EditGrid_params[8] = "gs_optype_01"
		EditGrid_params[9] = "gs_optype_02"
		EditGrid_params[10] = "vgn5"
		EditGrid_params[11] = "gs_UTrans"
		EditGrid_params[12] = "gs_UTrans_w"
		EditGrid_params[13] = "gs_UTrans_h"
		EditGrid_params[14] = "msw"
		EditGrid_params[15] = "gs_tolerance"
		EditGrid_params[16] = "bang"
		EditGrid_params[17] = "byd"
		EditGrid_params[18] = "nsa"
		EditGrid_params[19] = "A"
		EditGrid_params[20] = "B"

		new_grills = 0
		For ikj = 1 to 20
			IF var_par = EditGrid_params[ikj] THEN new_grills = ikj
		Next ikj

bwtr = 0
IF new_grills <> 0 THEN




!C A V I T Y  S I D E
!!Main

IF	var_par="grill2" OR var_par="hgn2" OR var_par="vgn2" OR var_par="gs_UTrans" OR var_par="gs_UTrans_h" OR\
	var_par="gs_tolerance" OR var_par="bang" OR var_par="byd" OR var_par="A" OR var_par="B" THEN

	aaa=(byd-gs_frame_thk/2)/SIN(bang)-(gs_frame_thk/2)*TAN(bang/2)
	bbb=gs_UTrans_h+bwtr

	for i=1 to vgn2-1
		parameters vergridl[i][1]=i*(aaa-gs_frame_thk)/(vgn2)
		parameters vergridl[i][2]=0	!gs_sash_width
		parameters vergridl[i][3]=bbb	!-gs_sash_width
	next i

	for i=1 to hgn2-1
		parameters horgridl[i][1]=i*(bbb-2*gs_frame_width+2*gs_rebate_width)/(hgn2)
		parameters horgridl[i][2]=0	!gs_sash_width
		parameters horgridl[i][3]=aaa	!-gs_sash_width
	next i
ENDIF

!................................

!!Transom
IF	var_par="grill4" OR var_par="hgn4" OR var_par="vgn4" OR var_par="gs_UTrans" OR var_par="gs_UTrans_h" OR\
	var_par="gs_tolerance" OR var_par="bang" OR var_par="byd" OR var_par="A" OR var_par="B" THEN



	aaa=(byd-gs_frame_thk/2)/SIN(bang)-(gs_frame_thk/2)*TAN(bang/2)
	bbb=b-gs_UTrans_h	!+gs_frame_width

	for i=1 to vgn4-1
		parameters vergridx[i][1]=i*(aaa-gs_frame_thk)/(vgn4)
		parameters vergridx[i][2]=0	!gs_sash_width
		parameters vergridx[i][3]=bbb	!-gs_sash_width
	next i

	for i=1 to hgn4-1
		parameters horgridx[i][1]=i*(bbb-2*gs_frame_width+2*gs_rebate_width)/(hgn4)
		parameters horgridx[i][2]=0	!gs_sash_width
		parameters horgridx[i][3]=aaa	!-gs_sash_width
	next i

ENDIF


!F R O N T   S I D E

!!Transom
IF	var_par="grill" OR var_par="iGrill" OR var_par="hgn" OR var_par="vgn" OR var_par="gs_UTrans" OR var_par="gs_UTrans_h" OR\
	var_par="bang" OR var_par="nsa" OR var_par="A" OR var_par="B" THEN

	if rots_b = 100 then
		fix_sh_grmod = gs_sash_width-gs_rebate_width
	else
		fix_sh_grmod = 0
	endif

	aaa=hsa+2*gs_frame_width-2*gs_rebate_width+2*fix_sh_grmod
	bbb=b-gs_UTrans_h+2*fix_sh_grmod

	for i=1 to vgn-1
		parameters vergrid[i][1]=i*(aaa-2*gs_sash_width+gw)/(vgn)
		parameters vergrid[i][2]=0	!gs_sash_width
		parameters vergrid[i][3]=bbb	!-gs_sash_width
	next i

	for i=1 to hgn-1
		parameters horgrid[i][1]=i*(bbb-2*gs_sash_width+gw)/(hgn)
		parameters horgrid[i][2]=0	!gs_sash_width
		parameters horgrid[i][3]=aaa	!-gs_sash_width
	next i

ENDIF

!.................

!!Main
IF	var_par="grill3" OR var_par="hgn3" OR var_par="vgn3" OR var_par="gs_UTrans" OR var_par="gs_UTrans_h" OR\
	var_par="bang" OR var_par="nsa" OR var_par="A" OR var_par="B" THEN

	if rots_a = 100 then
		fix_sh_grmod = gs_sash_width-gs_rebate_width
	else
		fix_sh_grmod = 0
	endif


	aaa=hsa+2*gs_frame_width-2*gs_rebate_width+2*fix_sh_grmod
	bbb=gs_UTrans_h-2*gs_frame_width+2*gs_rebate_width+bwtr+2*fix_sh_grmod

	for i=1 to vgn3-1
		parameters vergridr[i][1]=i*(aaa-2*gs_sash_width+gw)/(vgn3)
		parameters vergridr[i][2]=0	!gs_sash_width
		parameters vergridr[i][3]=bbb	!-gs_sash_width
	next i

	for i=1 to hgn3-1
		parameters horgridr[i][1]=i*(bbb-2*gs_sash_width+gw)/(hgn3)
		parameters horgridr[i][2]=0	!gs_sash_width
		parameters horgridr[i][3]=aaa	!-gs_sash_width
	next i

endif
endif

!! CURVED WALL CALCULATION !!

IF abs(WIDO_ORIG_DIST)>EPS THEN

fdpi = 0

r0=ABS(WIDO_ORIG_DIST)

IF WIDO_ORIG_DIST<0 THEN                 !Wall is convex from "outside"

IF WIDO_REVEAL_SIDE THEN                             !Flip is on

	IF abs(SYMB_ROTANGLE)<EPS THEN
	nframe=WIDO_FRAME_THICKNESS

	rdpi=SQR(ac_unit_width*ac_unit_width/4+(r0+nframe)^2)
	r=SQR(ac_unit_width*ac_unit_width/4+r0*r0)
	kdpi=rdpi-r+WIDO_SILL
	calpha=ASN(ac_unit_width/2/r)                   !window half angle

	ELSE    ! SYMB_ROTANGLE=180 Rotated window

	nframe=WIDO_FRAME_THICKNESS

	r0=r0-nframe
	rdpi=SQR(ac_unit_width*ac_unit_width/4+(r0+nframe)^2)
	r=SQR(ac_unit_width*ac_unit_width/4+r0*r0)
	kdpi=rdpi-r+WIDO_SILL
	calpha=ASN(ac_unit_width/2/r)                   !window half angle

	ENDIF

ELSE                                     !Flip is off

	IF abs(SYMB_ROTANGLE)<EPS THEN
	nframe=0

	r=SQR(ac_unit_width*ac_unit_width/4+r0*r0)
	calpha=ASN(ac_unit_width/2/r)                    !window half angle

	ELSE    ! SYMB_ROTANGLE=180 Rotated window

	nframe=WIDO_FRAME_THICKNESS

	fdpi=SQR(ac_unit_width*ac_unit_width/4+(r0)^2)-SQR(ac_unit_width*ac_unit_width/4+(r0-WIDO_FRAME_THICKNESS)^2)
	r0=r0-nframe
	r=SQR(ac_unit_width*ac_unit_width/4+r0*r0)
	calpha=ASN(ac_unit_width/2/r)                    !window half angle

	ENDIF

ENDIF


ELSE                                      !Wall is concave from "outside"


IF WIDO_REVEAL_SIDE THEN                               !Flip is on

	IF abs(SYMB_ROTANGLE)<EPS THEN
	!nframe=WIDO_FRAME_THICKNESS

	fdpi=SQR(ac_unit_width*ac_unit_width/4+(WIDO_ORIG_DIST+WIDO_FRAME_THICKNESS)^2)-SQR(ac_unit_width*ac_unit_width/4+(WIDO_ORIG_DIST)^2)
	r0=r0-nframe
	r=SQR(ac_unit_width*ac_unit_width/4+r0*r0)
	calpha=ASN(ac_unit_width/2/r)                    !window half angle

	ELSE    ! SYMB_ROTANGLE=180 Rotated window

	nframe=WIDO_FRAME_THICKNESS

	r0=r0-nframe
	r=SQR(ac_unit_width*ac_unit_width/4+r0*r0)
	calpha=ASN(ac_unit_width/2/r)                    !window half angle
	ENDIF


ELSE                                     !Flip is off
	IF abs(SYMB_ROTANGLE)<EPS THEN
	!nframe=WIDO_FRAME_THICKNESS

	rdpi=SQR(ac_unit_width*ac_unit_width/4+r0*r0)
	!r0=r0-nframe
	r=SQR(ac_unit_width*ac_unit_width/4+r0*r0)
	kdpi=rdpi-r+WIDO_SILL
	calpha=ASN(ac_unit_width/2/r)                    !window half angle

	ELSE    ! SYMB_ROTANGLE=180 Rotated window

	nframe=WIDO_FRAME_THICKNESS

	rdpi=SQR(ac_unit_width*ac_unit_width/4+r0*r0)
	fdpi=rdpi-SQR(ac_unit_width*ac_unit_width/4+(r0-WIDO_FRAME_THICKNESS)^2)
	r0=r0-nframe
	r=SQR(ac_unit_width*ac_unit_width/4+r0*r0)
	kdpi=rdpi-r+WIDO_SILL
	calpha=ASN(ac_unit_width/2/r)                    !window half angle
	ENDIF

ENDIF

ENDIF


!Additional values


calphar=90+calpha

!right oversize and sill angle
rosr=SQR(r^2+osr^2-2*r*osr*cos(calphar))
cbetarr=ASN(osr*sin(calphar)/rosr)          ! Right oversize angle


!left oversize and sill angle
rosl=SQR(r^2+osl^2-2*r*osl*cos(calphar))
cbetarl=ASN(osl*sin(calphar)/rosl)          !Left oversize angle

ENDIF

!! END OF CURVED WALL CALCULATIONS !!


"MasterEnd":
