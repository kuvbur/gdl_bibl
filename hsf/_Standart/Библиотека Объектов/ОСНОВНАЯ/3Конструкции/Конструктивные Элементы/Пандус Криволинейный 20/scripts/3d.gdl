
if gs_detlevel_3d_m = 0 then end

if not (gs_shadow) then shadow off


! --- Ramp route parameters ----------------------------------------------------

if bAscent then
	put   rad*cos(-beta1), rad*sin(-beta1), heightAscent/n1, 0
	dx1=rad
	dy1=0
	dz1=0

	for k=1 to n1
		put   dx1, dy1, dz1, 0
		dx1=dx1-rad*(cos((k-1)*beta1)-cos(k*beta1))
		dy1=dy1+rad*(sin(k*beta1)-sin((k-1)*beta1))
		dz1=dz1+heightAscent/n1
	next k

	dx2=rad*cos(alph1)
	dy2=rad*sin(alph1)
	dz2=heightAscent

	for kk=1 to n2
		put    dx2, dy2, dz2, 0
		dx2=dx2-rad*(cos(alph1+(kk-1)*beta2)-cos(alph1+kk*beta2))
		dy2=dy2+rad*(sin(alph1+kk*beta2)-sin(alph1+(kk-1)*beta2))
		dz2=dz2+h2/n2
	next kk

	dx3=rad*cos(alph1+alph2)
	dy3=rad*sin(alph1+alph2)
	dz3=heightAscent+h2

	for kkk=1 to n1+1
		put    dx3, dy3, dz3, 0
		dx3=dx3-rad*(cos(alph1+alph2+(kkk-1)*beta1)-cos(alph1+alph2+kkk*beta1))
		dy3=dy3+rad*(sin(alph1+alph2+kkk*beta1)-sin(alph1+alph2+(kkk-1)*beta1))
		dz3=dz3+heightAscent/n1
	next kkk

	put    rad*cos(alph+beta1), rad*sin(alph+beta1), zzyzx-heightAscent/n1, 0
else
	dx1=rad
	dy1=0
	dz1=0
	put   rad*cos(-beta0), rad*sin(-beta0), zzyzx/gs_resol, 0

	for j=1 to gs_resol+1
		put   dx1, dy1, dz1, 0
		dx1=dx1-rad*(cos((j-1)*beta0)-cos(j*beta0))
		dy1=dy1+rad*(sin(j*beta0)-sin((j-1)*beta0))
		dz1=dz1+zzyzx/gs_resol
	next j
	put    rad*cos(alph+beta0), rad*sin(alph+beta0), zzyzx-zzyzx/gs_resol, 0
endif


! --- Ramp ---------------------------------------------------------------------

material matRamp
tube    4, nsp/4, 1+2+16+32+128,
		widthUsable/2,			-thicknessRamp,				0,
		widthUsable/2,			0,							0,
		-widthUsable/2,			0,							0,
		-widthUsable/2,			-thicknessRamp,				0,

		use (nsp)


! --- Side Flanges -------------------------------------------------------------

if not (bDiffSides) then
	for jj=1 to 2
		if jj=1 then
			neg=-1
		else
			neg=1
		endif

		if bSideFlange1 and bSideFlange2 then
			material matSideFlange1
			tube    4, nsp/4, 1+2+16+32+128,
			-neg*widthFull/2,									0,							0,
			-neg*widthFull/2,									heightSideFlange1,			0,
			-neg*widthFull/2-neg*widthSideFlange1,				heightSideFlange1,			0,
			-neg*widthFull/2-neg*widthSideFlange1,				0,							0,

			 use (nsp)

		endif

		if bSideFlange1 or bSideFlange2 then
			material matSideFlange2
			tube    4, nsp/4, 1+2+16+32+128,
			-neg*widthUsable/2,										0,							0,
			-neg*widthUsable/2+neg*widthSideFlange2,				0,							0,
			-neg*widthUsable/2+neg*widthSideFlange2,				heightSideFlange2,			0,
			-neg*widthUsable/2,										heightSideFlange2,			0,

			 use (nsp)

		endif
	next jj
else
	if bSideFlange2_out then
			material matSideFlange2_out
			tube    4, nsp/4, 1+2+16+32+128,
			-widthUsable/2, 								0, 								0,
			-widthUsable/2, 								heightSideFlange2_out, 			0,
			-widthUsable/2+widthSideFlange2_out, 			heightSideFlange2_out, 			0,
			-widthUsable/2+widthSideFlange2_out, 			0, 								0,

			 use (nsp)
	endif

	if bSideFlange2_in then
			material matSideFlange2_in
			tube    4, nsp/4, 1+2+16+32+128,
			widthUsable/2, 									0, 								0,
			widthUsable/2, 									heightSideFlange2_in, 			0,
			widthUsable/2-widthSideFlange2_in, 				heightSideFlange2_in, 			0,
			widthUsable/2-widthSideFlange2_in, 				0, 								0,

			 use (nsp)
	endif

	if bSideFlange1_out then
			material matSideFlange1_out
			tube    4, nsp/4, 1+2+16+32+128,
			-widthUsable/2+widthSideFlange2_out*bSideFlange2_out, 							0, 								0,
			-widthUsable/2+widthSideFlange2_out*bSideFlange2_out, 							heightSideFlange1_out, 			0,
			-widthUsable/2+widthSideFlange2_out*bSideFlange2_out+widthSideFlange1_out, 		heightSideFlange1_out, 			0,
			-widthUsable/2+widthSideFlange2_out*bSideFlange2_out+widthSideFlange1_out, 		0, 								0,

			 use (nsp)
	endif

	if bSideFlange1_in then
			material matSideFlange1_in
			tube    4, nsp/4, 1+2+16+32+128,
			widthUsable/2-widthSideFlange2_in*bSideFlange2_in, 								0, 								0,
			widthUsable/2-widthSideFlange2_in*bSideFlange2_in, 								heightSideFlange1_in, 			0,
			widthUsable/2-widthSideFlange2_in*bSideFlange2_in-widthSideFlange1_in, 			heightSideFlange1_in, 			0,
			widthUsable/2-widthSideFlange2_in*bSideFlange2_in-widthSideFlange1_in, 			0, 								0,

			use (nsp)
	endif
endif


! clear internal buffer
for i=1 to nsp
	n = get (1)
next i


end
