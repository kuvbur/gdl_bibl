
actualGUID = FROM_GUID

! ==============================================================================
! Subroutines
! ==============================================================================

	_autoID		= "8D265FA8-010C-43FF-B589-119578081512"
	_startID	= "265F5A1A-DD13-49F7-8D02-97D78666B796"
	_endID		= "FC361E28-D255-481A-9514-961F44CA5274"
gosub "newparameters_FWM"

! ==============================================================================
! Set migration GUID
! ==============================================================================

setmigrationguid actualGUID

! ==============================================================================
end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! en
! ==============================================================================


! ==============================================================================
! newparameters
! ==============================================================================
"newparameters_FWM":
	if actualGuid = _startID | actualGuid = _autoID then

		iCalculationMethod = 3		! Dimensions
		parameters iCalculationMethod = iCalculationMethod

		bHas = 	DELETED_PAR_VALUE	("rise", _rise) &\
				DELETED_PAR_VALUE	("endRise ", _endRise) &\
				STORED_PAR_VALUE	("bAscent", _bAscent) &\
				STORED_PAR_VALUE	("lengthAscent", _lengthAscent)

		if bHas then
			percentage 			= _rise
			ascentPercentage 	= _endRise

			parameters 	percentage			= percentage,
						ascentPercentage 	= ascentPercentage

			heightAscent = _lengthAscent * ((2 - _bAscent) * _rise / 2) / 100

			parameters heightAscent = heightAscent

		endif

		bHas =	STORED_PAR_VALUE("iFloorPlanDisplayType", _iFloorPlanDisplayType)

		if _iFloorPlanDisplayType = 3 then	! Symbolic

			bHas =	STORED_PAR_VALUE("gs_cont_pen", _gs_cont_pen)
	
			if bHas then
				penBreakLineBelow 	= _gs_cont_pen
				penBreakLineAbove 	= _gs_cont_pen
				gs_cont_pen			= _gs_cont_pen
				overheadPen			= _gs_cont_pen

		
				parameters 	penBreakLineBelow 	= penBreakLineBelow,
							penBreakLineAbove 	= penBreakLineAbove,
							gs_cont_pen			= _gs_cont_pen,
							overheadPen			= overheadPen
			endif
	
			bHas =	STORED_PAR_VALUE("penArrow", _penArrow)
			if bHas then
				penStartSymbolBelow = _penArrow
				penStartSymbolAbove = _penArrow
				penEndSymbolBelow 	= _penArrow
				penEndSymbolAbove 	= _penArrow
				penWalkingBelow 	= _penArrow
				penWalkingAbove 	= _penArrow
		
				parameters 	penStartSymbolBelow = penStartSymbolBelow,
							penStartSymbolAbove = penStartSymbolAbove,
							penEndSymbolBelow 	= penEndSymbolBelow,
							penEndSymbolAbove 	= penEndSymbolAbove,
							penWalkingBelow 	= penWalkingBelow,
							penWalkingAbove 	= penWalkingAbove
			endif

			bHas =	DELETED_PAR_VALUE("symbolType2d_m", _symbolType2d_m) &\
					STORED_PAR_VALUE("lineCont", _lineCont) &\
					DELETED_PAR_VALUE("linetyp", _linetyp)

			if bHas then
				if _symbolType2d_m = 1 then	! Dashed over Horizontal Cut
					bShowBreakline 		= 1
					lineCont 			= _lineCont
					lineDashed			= _linetyp
					ltBreakLineBelow 	= _lineCont
					ltBreakLineAbove 	= _linetyp
					ltWalkingBelow 		= _lineCont
					ltWalkingAbove 		= _linetyp
				else
					lineCont 			= _lineCont	
					lineDashed			= _lineCont
					ltBreakLineBelow 	= _lineCont
					ltBreakLineAbove 	= _lineCont
					ltWalkingBelow 		= _lineCont
					ltWalkingAbove 		= _lineCont
	
					if _symbolType2d_m = 2 then ! Horizontal Cut
						bShowBreakline = 1
					else	! Complete
						bShowBreakline = 0
					endif
				endif
			endif

			parameters 	bShowBreakline 		= bShowBreakline,
						lineCont 			= lineCont,
						lineDashed 			= lineDashed,	
						ltBreakLineBelow 	= ltBreakLineBelow,
						ltBreakLineAbove 	= ltBreakLineAbove,
						ltWalkingBelow 		= ltWalkingBelow,
						ltWalkingAbove 		= ltWalkingAbove

			bHas =	STORED_PAR_VALUE("arrowSize", _arrowSize)
			if bHas then
				arrowWidth	= _arrowSize * 2
				arrowHeight	= _arrowSize
				iEndSymbol	= 2

				parameters 	arrowWidth	= arrowWidth,
							arrowHeight	= arrowHeight,
							iEndSymbol	= iEndSymbol
			endif
	
			bHas =	DELETED_PAR_VALUE("res", _res)

			if bHas then
				gs_resol = _res

				parameters gs_resol = gs_resol
			endif
	
		endif

		actualGuid = _endID
	endif
return

