
call "FM_types" parameters all

hideparameter all "ZZYZX"
lock "A", "B"

values "alph" range (0, )
_minlengthAscent = (alph/gs_resol * ((inRad+outRad)*pi)) / 360
values "lengthAscent" range [_minlengthAscent, lengthFull/2 - 0.1]
values "ratioLength" range (0, )
values "ratioHeight" range (0, ratioLength]
values "percentage" range (0, 100]

values "heightAscent" range (0, ZZYZX / 2)
values "ratioAscentLength" range (0, )
values "ratioAscentHeight" range (0, ratioAscentLength]
values "ascentPercentage" range (0, 100]

values "arrowWidth" range (0, )
values "arrowHeight" range (0, )
values "widthStartSymbol" range (0, )
values "heightStartSymbol" range (0, )

_maxArrowHeight = SQR(outrad*outrad - inrad*inrad) / outrad
values "arrowHeight" range (0, _maxArrowHeight)

parameters ac_bottomlevel	= 0
parameters ac_toplevel		= ZZYZX

values{2} "iCalculationMethod" 	METHOD_RATIO, 		`Соотношение`,
								METHOD_PERCENTAGE, 	`Проценты`,
								METHOD_DIMENSIONS, 	`Размеры`

values{2} "iTextType1" 	TEXT_PERCENTAGE,				`Проценты`,
						TEXT_RATIO,						`Соотношение`,
						TEXT_SEGMENTLENGTH, 			`Длина Сегмента`,
						TEXT_FULLLENGTH, 				`Полная Длина`,
						TEXT_CUSTOM,					`Специальный`	

if iTextType1 = TEXT_PERCENTAGE then
	values{2} "iTextType2" 	TEXT_RATIO,						`Соотношение`,
							TEXT_SEGMENTLENGTH, 			`Длина Сегмента`,
							TEXT_FULLLENGTH, 				`Полная Длина`,
							TEXT_CUSTOM,					`Специальный`
else
	if iTextType1 = TEXT_RATIO then
		values{2} "iTextType2" 	TEXT_PERCENTAGE,				`Проценты`,
								TEXT_SEGMENTLENGTH, 			`Длина Сегмента`,
								TEXT_FULLLENGTH, 				`Полная Длина`,
								TEXT_CUSTOM,					`Специальный`
	else
		if iTextType1 = TEXT_SEGMENTLENGTH then
			values{2} "iTextType2" 	TEXT_PERCENTAGE,				`Проценты`,
									TEXT_RATIO,						`Соотношение`,
									TEXT_FULLLENGTH, 				`Полная Длина`,
									TEXT_CUSTOM,					`Специальный`	

		else
			if iTextType1 = TEXT_FULLLENGTH then
				values{2} "iTextType2" 	TEXT_PERCENTAGE,				`Проценты`,
										TEXT_RATIO,						`Соотношение`,
										TEXT_SEGMENTLENGTH, 			`Длина Сегмента`,
										TEXT_CUSTOM,					`Специальный`
			else	! TEXT_CUSTOM
				values{2} "iTextType2" 	TEXT_PERCENTAGE,				`Проценты`,
										TEXT_RATIO,						`Соотношение`,
										TEXT_SEGMENTLENGTH, 			`Длина Сегмента`,
										TEXT_FULLLENGTH, 				`Полная Длина`
			endif
		endif
	endif
endif

values{2} "iStartSymbol" 	1, 	`Стиль 1`,
							2, 	`Стиль 2`,
							3, 	`Стиль 3`


values{2} "iEndSymbol" 	1, 	`Стиль 1`,
						2, 	`Стиль 2`,
						3, 	`Стиль 3`,
						4, 	`Стиль 4`,
						5, 	`Стиль 5`,
						6, 	`Стиль 6`

if GLOB_MODPAR_NAME = "widthStartSymbolHalf" then
	widthStartSymbol = widthStartSymbolHalf * 2
	parameters widthStartSymbol = widthStartSymbol
else
	if GLOB_MODPAR_NAME = "widthStartSymbol" then
		widthStartSymbolHalf = widthStartSymbol / 2
		parameters widthStartSymbolHalf = widthStartSymbolHalf
	endif
endif

if GLOB_MODPAR_NAME = "heightStartSymbolHalf" then
	heightStartSymbol = heightStartSymbolHalf * 2
	parameters heightStartSymbol = heightStartSymbol
else
	if GLOB_MODPAR_NAME = "heightStartSymbol" then
		heightStartSymbolHalf = heightStartSymbol / 2
		parameters heightStartSymbolHalf = heightStartSymbolHalf
	endif
endif

if GLOB_MODPAR_NAME = "arrowWidthHalf" then
	parameters arrowWidth = arrowWidthHalf * 2
else
	parameters arrowWidthHalf 	= arrowWidth / 2
endif

if GLOB_MODPAR_NAME = "alph" then
	lengthFull = ((inRad+outRad)*alph*pi)/360
	parameters lengthFull = lengthFull
else
	alph = (lengthFull * 360) / (pi * (inRad+outRad))
	parameters alph = alph
endif


! --- 2D symbol type, 3D detail level ------------------------------------------

values "floorPlanDisplayType" stFloorPlanDisplayType
VALUES "iFloorPlanDisplayType" 	DISPLAY_PROJECTED, \
								DISPLAY_OVERHEAD_PROJ, \
								DISPLAY_SYMBOLIC, \
								DISPLAY_OUTLINES, \
								DISPLAY_OVERHEAD_ALL
if GLOB_MODPAR_NAME = "floorPlanDisplayType" then
	for i = 1 to vardim1(stFloorPlanDisplayType)
	   if floorPlanDisplayType = stFloorPlanDisplayType[i]	then iFloorPlanDisplayType = i
	next i
	parameters iFloorPlanDisplayType = iFloorPlanDisplayType
else
	floorPlanDisplayType = stFloorPlanDisplayType[max(min(iFloorPlanDisplayType, vardim1(stFloorPlanDisplayType)), 1)]
	parameters floorPlanDisplayType = floorPlanDisplayType
endif

if iFloorPlanDisplayType = DISPLAY_OUTLINES then
	lock			"lineOverhead",
					"overheadPen"
	hideparameter	"lineOverhead",
					"overheadPen"
endif
if iFloorPlanDisplayType = DISPLAY_OVERHEAD_ALL then
	lock			"gs_cont_pen",
					"penText",
					"fontType",
					"tx_size",
					"tx_size_point",
					"typeTextRotation",
					"typeTextRotation_m",
					"bFill",
					"gs_fill_type",
					"gs_fill_pen",
					"gs_back_pen"
	hideparameter	"gs_cont_pen",
					"penText",
					"fontType",
					"tx_size",
					"tx_size_point",
					"typeTextRotation",
					"typeTextRotation_m",
					"bFill",
					"gs_fill_type",
					"gs_fill_pen",
					"gs_back_pen"
endif
if NOT(bFill) then
	lock			"gs_fill_type",
					"gs_fill_pen",
					"gs_back_pen"
	hideparameter	"gs_fill_type",
					"gs_fill_pen",
					"gs_back_pen"
endif


values "gs_detlevel_3D"  `Детальный`,`Откл.`
values "gs_detlevel_3D_m"  2, 0

if GLOB_MODPAR_NAME = "gs_detlevel_3d" then
	if gs_detlevel_3d = `Детальный`	then gs_detlevel_3d_m = 2
	if gs_detlevel_3d = `Откл.`		then gs_detlevel_3d_m = 0
	parameters gs_detlevel_3d_m = gs_detlevel_3d_m
else
	if gs_detlevel_3d_m = 2		then gs_detlevel_3d = `Детальный`
	if gs_detlevel_3d_m = 0		then gs_detlevel_3d = `Откл.`
	parameters gs_detlevel_3d = gs_detlevel_3d
endif

! --- Hiding unused parameters -------------------------------------------------

if not (bDiffSides) then
	hideparameter	"bSideFlange1_in", "widthSideFlange1_in", "heightSideFlange1_in", "matSideFlange1_in", "bSideFlange2_in", "widthSideFlange2_in", "heightSideFlange2_in", "matSideFlange2_in",
					"bSideFlange1_out", "widthSideFlange1_out", "heightSideFlange1_out", "matSideFlange1_out", "bSideFlange2_out", "widthSideFlange2_out", "heightSideFlange2_out", "matSideFlange2_out"
else
	hideparameter	"bSideFlange1", "widthSideFlange1", "heightSideFlange1", "matSideFlange1", "bSideFlange2", "widthSideFlange2", "heightSideFlange2", "matSideFlange2"
endif

if not (bSideFlange1) then
	lock "matSideFlange1", "widthSideFlange1", "heightSideFlange1"
	hideparameter "matSideFlange1", "widthSideFlange1", "heightSideFlange1"
endif
if not (bSideFlange2) then
	lock "matSideFlange2", "widthSideFlange2", "heightSideFlange2"
	hideparameter "matSideFlange2", "widthSideFlange2", "heightSideFlange2"
endif
if not (bSideFlange1_in) then
	lock "matSideFlange1_in", "widthSideFlange1_in", "heightSideFlange1_in"
	hideparameter "matSideFlange1_in", "widthSideFlange1_in", "heightSideFlange1_in"
endif
if not (bSideFlange2_in) then
	lock "matSideFlange2_in", "widthSideFlange2_in", "heightSideFlange2_in"
	hideparameter "matSideFlange2_in", "widthSideFlange2_in", "heightSideFlange2_in"
endif
if not (bSideFlange1_out) then
	lock "matSideFlange1_out", "widthSideFlange1_out", "heightSideFlange1_out"
	hideparameter "matSideFlange1_out", "widthSideFlange1_out", "heightSideFlange1_out"
endif
if not (bSideFlange2_out) then
	lock "matSideFlange2_out", "widthSideFlange2_out", "heightSideFlange2_out"
	hideparameter "matSideFlange2_out", "widthSideFlange2_out", "heightSideFlange2_out"
endif

if iCalculationMethod = METHOD_RATIO then
	lock "percentage", "ascentPercentage", "lengthFull"
	hideparameter "percentage", "ascentPercentage", "lengthFull"
else
	if iCalculationMethod = METHOD_PERCENTAGE then
		lock "ratioLength", "ratioHeight", "ratioAscentLength", "ratioAscentHeight", "lengthFull"
		hideparameter "ratioLength", "ratioHeight", "ratioAscentLength", "ratioAscentHeight", "lengthFull"
	else	! METHOD_DIMENSIONS
		lock   "percentage", "ascentPercentage", "ratioLength", "ratioHeight", "ratioAscentLength", "ratioAscentHeight", "alph"
		hideparameter  "percentage", "ascentPercentage", "ratioLength", "ratioHeight", "ratioAscentLength", "ratioAscentHeight", "alph"
	endif
endif

if not(bAscent) then
	lock "lengthAscent", "heightAscent", "ascentPercentage", "ratioAscentLength", "ratioAscentHeight"
	hideparameter "lengthAscent", "heightAscent", "ascentPercentage", "ratioAscentLength", "ratioAscentHeight"
endif

if iFloorPlanDisplayType = DISPLAY_SYMBOLIC then
	if not(bShowBreakline) then
		lock 	"overheadPen", "lineDashed", "bShowAboveBreak", "penBreakLineBelow", "penBreakLineAbove",
				"ltBreakLineBelow", "ltBreakLineAbove", "bStop", "penWalkingAbove", "ltWalkingAbove", 
				"bShowAboveBreak", "penStartSymbolAbove", "penEndSymbolAbove"
		hideparameter 	"overheadPen", "lineDashed", "bShowAboveBreak", "penBreakLineBelow", "penBreakLineAbove",
						"ltBreakLineBelow", "ltBreakLineAbove", "bStop", "penWalkingAbove", "ltWalkingAbove",
						"bShowAboveBreak", "penStartSymbolAbove", "penEndSymbolAbove"
	endif
	if not(bWalkingLine) then
		lock 	"iWalkingLineType", "penWalkingBelow", "ltWalkingBelow", "penWalkingAbove", "ltWalkingAbove", "bReverse", "bStop", "bStartSymbol", "iStartSymbol", 
				"bShowAboveBreak", "penStartSymbolBelow", "penStartSymbolAbove", "widthStartSymbol", "bEndSymbol", "iEndSymbol", "penEndSymbolBelow",
				"penEndSymbolAbove", "arrowWidth", "arrowHeight"
		hideparameter 	"iWalkingLineType", "penWalkingBelow", "ltWalkingBelow", "penWalkingAbove", "ltWalkingAbove", "bReverse", "bStop", "bStartSymbol", "iStartSymbol", 
						"bShowAboveBreak", "penStartSymbolBelow", "penStartSymbolAbove", "widthStartSymbol", "bEndSymbol", "iEndSymbol", "penEndSymbolBelow",
						"penEndSymbolAbove", "arrowWidth", "arrowHeight"
	endif
	
	if not(bStartSymbol) then
		lock "iStartSymbol", "bShowAboveBreak", "penStartSymbolBelow", "penStartSymbolAbove", "penStartSymbolBelow", "widthStartSymbol", "heightStartSymbol"
		hideparameter "iStartSymbol", "bShowAboveBreak", "penStartSymbolBelow", "penStartSymbolAbove", "penStartSymbolBelow", "widthStartSymbol", "heightStartSymbol"
	else
		if iStartSymbol <> 3 then
			lock "heightStartSymbol"
			hideparameter "heightStartSymbol"
		else
			lock "penStartSymbolBelow", "penStartSymbolAbove"
			hideparameter "penStartSymbolBelow", "penStartSymbolAbove"
		endif
	endif

	if not(bShowAboveBreak) then
		lock "penStartSymbolAbove"
		hideparameter "penStartSymbolAbove"
	endif

	if not(bEndSymbol) then
		lock "iEndSymbol", "penEndSymbolBelow", "penEndSymbolAbove", "arrowWidth", "arrowHeight"
		hideparameter "iEndSymbol", "penEndSymbolBelow", "penEndSymbolAbove", "arrowWidth", "arrowHeight"
	else
		if iEndSymbol = 1 or iEndSymbol = 3 or iEndSymbol = 5 then
			lock "arrowWidth"
			hideparameter "arrowWidth"
		endif

		if iEndSymbol = 1 or iEndSymbol = 2 then
			lock "penEndSymbolBelow", "penEndSymbolAbove"
			hideparameter "penEndSymbolBelow", "penEndSymbolAbove"
		endif
	endif

	if bStop then
		lock "penWalkingAbove", "ltWalkingAbove", "bShowAboveBreak", "penStartSymbolAbove", "penEndSymbolAbove"
		hideparameter "penWalkingAbove", "ltWalkingAbove", "bShowAboveBreak", "penStartSymbolAbove", "penEndSymbolAbove"
	endif

	if not(bShowText1) then
		lock "iTextType1", "TextPrefix1"
		hideparameter "TextPrefix1", "TextPrefix1"
	endif

	if not(bShowText2) then
		lock "iTextType2", "TextPrefix2"
		hideparameter "TextPrefix2", "TextPrefix2"
	endif

 	if (iTextType1 <> 0 and iTextType2 <> 0) or (not(bShowText1) and iTextType1 = 0) or (not(bShowText2) and iTextType2 = 0) then
		lock "CustomText"
		hideparameter "CustomText"
	endif

	if not(bShowText1) and not(bShowText2)then
		lock "CustomText", "fontType", "tx_size", "tx_size_point", "typeTextRotation_m"
		hideparameter "CustomText", "fontType", "tx_size", "tx_size_point", "typeTextRotation_m"
	endif
else
	lock 	"bShowBreakline", "penBreakLineBelow", "ltBreakLineBelow", "penBreakLineAbove", "ltBreakLineAbove", "bWalkingLine",
			"bReverse", "bStop", "penWalkingBelow", "ltWalkingBelow", "penWalkingAbove", "ltWalkingAbove",
			"bStartSymbol", "bShowAboveBreak", "iStartSymbol", "fillStartSymbol", "penStartSymbolBelow", "penStartSymbolAbove",
			"widthStartSymbol", "widthStartSymbolHalf", "heightStartSymbol", "heightStartSymbolHalf", "bEndSymbol", "iEndSymbol",
			"fillEndSymbol", "penEndSymbolBelow", "penEndSymbolAbove", "arrowWidth", "arrowWidthHalf", "arrowHeight",
			"bShowText1", "iTextType1", "TextPrefix1", "bShowText2", "iTextType2", "TextPrefix2", "CustomText"
	hideparameter  	"bShowBreakline", "penBreakLineBelow", "ltBreakLineBelow", "penBreakLineAbove", "ltBreakLineAbove", "bWalkingLine",
					"bReverse", "bStop", "penWalkingBelow", "ltWalkingBelow", "penWalkingAbove", "ltWalkingAbove",
					"bStartSymbol", "bShowAboveBreak", "iStartSymbol", "fillStartSymbol", "penStartSymbolBelow", "penStartSymbolAbove",
					"widthStartSymbol", "widthStartSymbolHalf", "heightStartSymbol", "heightStartSymbolHalf", "bEndSymbol", "iEndSymbol",
					"fillEndSymbol", "penEndSymbolBelow", "penEndSymbolAbove", "arrowWidth", "arrowWidthHalf", "arrowHeight",
					"bShowText1", "iTextType1", "TextPrefix1", "bShowText2", "iTextType2", "TextPrefix2", "CustomText"
endif

if gs_detlevel_3d_m = 0 then	! Off
	lock "gs_shadow", "gs_resol"
	hideparameter "gs_shadow", "gs_resol"
endif

if	GLOB_MODPAR_NAME = "bDiffSides" | \
	GLOB_MODPAR_NAME = "bSideFlange1" | \
	GLOB_MODPAR_NAME = "bSideFlange2" | \
	GLOB_MODPAR_NAME = "widthSideFlange1" | \
	GLOB_MODPAR_NAME = "widthSideFlange2" | \
	GLOB_MODPAR_NAME = "bSideFlange1_in" | \
	GLOB_MODPAR_NAME = "bSideFlange2_in" | \
	GLOB_MODPAR_NAME = "widthSideFlange1_in" | \
	GLOB_MODPAR_NAME = "widthSideFlange2_in" | \
	GLOB_MODPAR_NAME = "bSideFlange1_out" | \
	GLOB_MODPAR_NAME = "bSideFlange2_out" | \
	GLOB_MODPAR_NAME = "widthSideFlange1_out" | \
	GLOB_MODPAR_NAME = "widthSideFlange2_out" then
		parameters outRad = inRad + widthUsable
endif

if GLOB_MODPAR_NAME = "inRad" then
	parameters outRad = inRad + widthUsable
endif

if GLOB_MODPAR_NAME = "outRad" then
	parameters inRad = outRad - widthUsable
endif

if GLOB_MODPAR_NAME = "widthFull" then
	outRad = inRad + widthUsable
	parameters outRad = outRad
endif

! --- Font Size, Position ----------------------------------------------------------------

values "typeTextRotation" `Читаемый`,`Выровнять по Символу`
values "typeTextRotation_m" 2, 0

if GLOB_MODPAR_NAME = "typeTextRotation" then
	if typeTextRotation = `Читаемый`			then typeTextRotation_m = 2
	if typeTextRotation = `Выровнять по Символу`	then typeTextRotation_m = 0
	parameters typeTextRotation_m = typeTextRotation_m
else
	if typeTextRotation_m = 2					then typeTextRotation = `Читаемый`
	if typeTextRotation_m = 0					then typeTextRotation = `Выровнять по Символу`
	parameters typeTextRotation = typeTextRotation
endif

Dot_in_mm = 25.4 / 72
if GLOB_MODPAR_NAME = "tx_size" then
	parameters tx_size_point = tx_size / Dot_in_mm
	tx_size_point = tx_size / Dot_in_mm
endif
if GLOB_MODPAR_NAME = "tx_size_point" then
	parameters tx_size = tx_size_point * Dot_in_mm
	tx_size = tx_size_point * Dot_in_mm
endif

if GLOB_UI_BUTTON_ID < 0 then
	parameters gs_ui_current_page = -GLOB_UI_BUTTON_ID
endif
