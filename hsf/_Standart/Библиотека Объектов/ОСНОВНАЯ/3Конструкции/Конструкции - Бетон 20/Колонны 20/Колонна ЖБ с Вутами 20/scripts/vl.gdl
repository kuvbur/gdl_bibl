
hideparameter all ”A”, ”B”, ”Zzyzx” 

call "FM_types" parameters all


values{2} "gs_detlevel_3D_m" 	DLEV3D_DETAILED, `Детальный`,
								DLEV3D_OFF, `Откл.`
values{2} "iDet2D" 	DETLEVEL_2D_DETAILED, `Детальный`,
					DETLEVEL_2D_SIMPLE, `Простой`

VALUES "NumOfBracket_1" 0, 1, 2, 3
VALUES "NumOfBracket_2" 0, 1, 2, 3
VALUES "NumOfBracket_3" 0, 1, 2, 3
VALUES "NumOfBracket_4" 0, 1, 2, 3

VALUES "Bracket_angle" RANGE [0, 90-(ATN(bracket_length/bracket_height))]

IF GLOB_MODPAR_NAME ="A" THEN PARAMETERS A2=A/2
IF GLOB_MODPAR_NAME ="A2" THEN PARAMETERS A=A2*2

IF GLOB_MODPAR_NAME ="B" THEN PARAMETERS B2=B/2
IF GLOB_MODPAR_NAME ="B2" THEN PARAMETERS B=B2*2


IF iDet2D = DETLEVEL_2D_SIMPLE THEN LOCK "LineTypeOfHaunch"

IF gs_cont_pen=0 then parameters gs_cont_pen=2
IF gs_fill_pen=0 then parameters gs_fill_pen=91

for i = 1 to NumOfBracket_1
	if ZZYZX < elevation[i][1]-b/2 then
		ZZYZX = elevation[i][1]-b/2
	endif
next i
for i = 1 to NumOfBracket_2
	if ZZYZX < elevation[i][2]-b/2 then
		ZZYZX = elevation[i][2]-b/2
	endif
next i
for i = 1 to NumOfBracket_3
	if ZZYZX < elevation[i][3]-b/2 then
		ZZYZX = elevation[i][3]-b/2
	endif
next i
for i = 1 to NumOfBracket_4
	if ZZYZX < elevation[i][4]-b/2 then
		ZZYZX = elevation[i][4]-b/2
	endif
next i
parameters ZZYZX = ZZYZX

IF GLOB_MODPAR_NAME = "elevation" THEN
	for i = 2 to NumOfBracket_1
		if elevation[i][1] <= elevation[i-1][1]+bh then
			elevation[i][1] = elevation[i-1][1]+bh
		endif
	next i
	if elevation[1][1] < 1.5*bh then
		elevation[1][1] = 1.5*bh
	endif
	for i = 2 to NumOfBracket_2
		if elevation[i][2] <= elevation[i-1][2]+bh then
			elevation[i][2] = elevation[i-1][2]+bh
		endif
	next i
	if elevation[1][2] < 1.5*bh then
		elevation[1][2] = 1.5*bh
	endif
	for i = 2 to NumOfBracket_3
		if elevation[i][3] <= elevation[i-1][3]+bh then
			elevation[i][3] = elevation[i-1][3]+bh
		endif
	next i
	if elevation[1][3] < 1.5*bh then
		elevation[1][3] = 1.5*bh
	endif
	for i = 2 to NumOfBracket_4
		if elevation[i][4] <= elevation[i-1][4]+bh then
			elevation[i][4] = elevation[i-1][4]+bh
		endif
	next i
	if elevation[1][4] < 1.5*bh then
		elevation[1][4] = 1.5*bh
	endif

	parameters elevationRight_1 = elevation[1][1]
	parameters elevationRight_2 = elevation[2][1]
	parameters elevationRight_3 = elevation[3][1]
	parameters elevationBack_1 = elevation[1][2]
	parameters elevationBack_2 = elevation[2][2]
	parameters elevationBack_3 = elevation[3][2]
	parameters elevationLeft_1 = elevation[1][3]
	parameters elevationLeft_2 = elevation[2][3]
	parameters elevationLeft_3 = elevation[3][3]
	parameters elevationFront_1 = elevation[1][4]
	parameters elevationFront_2 = elevation[2][4]
	parameters elevationFront_3 = elevation[3][4]

endif

IF GLOB_MODPAR_NAME = "elevationRight_1" THEN elevation[1][1] = elevationRight_1
IF GLOB_MODPAR_NAME = "elevationRight_2" THEN elevation[2][1] = elevationRight_2
IF GLOB_MODPAR_NAME = "elevationRight_3" THEN elevation[3][1] = elevationRight_3
IF GLOB_MODPAR_NAME = "elevationBack_1" THEN elevation[1][2] = elevationBack_1
IF GLOB_MODPAR_NAME = "elevationBack_2" THEN elevation[2][2] = elevationBack_2
IF GLOB_MODPAR_NAME = "elevationBack_3" THEN elevation[3][2] = elevationBack_3
IF GLOB_MODPAR_NAME = "elevationLeft_1" THEN elevation[1][3] = elevationLeft_1
IF GLOB_MODPAR_NAME = "elevationLeft_2" THEN elevation[2][3] = elevationLeft_2
IF GLOB_MODPAR_NAME = "elevationLeft_3" THEN elevation[3][3] = elevationLeft_3
IF GLOB_MODPAR_NAME = "elevationFront_1" THEN elevation[1][4] = elevationFront_1
IF GLOB_MODPAR_NAME = "elevationFront_2" THEN elevation[2][4] = elevationFront_2
IF GLOB_MODPAR_NAME = "elevationFront_3" THEN elevation[3][4] = elevationFront_3

parameters elevation = elevation

parameters ac_bottomlevel = 0
parameters ac_toplevel = ZZYZX

if NumOfBracket_1 < 3 then
	lock "elevationRight_3"
	if NumOfBracket_1 < 2 then
		lock "elevationRight_2"
		if NumOfBracket_1 < 1 then
			lock "elevationRight_1"
		endif
	endif
endif
if NumOfBracket_2 < 3 then
	lock "elevationBack_3"
	if NumOfBracket_2 < 2 then
		lock "elevationBack_2"
		if NumOfBracket_2 < 1 then
			lock "elevationBack_1"
		endif
	endif
endif
if NumOfBracket_3 < 3 then
	lock "elevationLeft_3"
	if NumOfBracket_3 < 2 then
		lock "elevationLeft_2"
		if NumOfBracket_3 < 1 then
			lock "elevationLeft_1"
		endif
	endif
endif
if NumOfBracket_4 < 3 then
	lock "elevationFront_3"
	if NumOfBracket_4 < 2 then
		lock "elevationFront_2"
		if NumOfBracket_4 < 1 then
			lock "elevationFront_3"
		endif
	endif
endif

es_length = a
es_surface = a*b
bracket_volume_a = ((Bracket_height-Bracket_length*TAN(Bracket_angle))+Bracket_height)*Bracket_length/2 * a
bracket_volume_b = ((Bracket_height-Bracket_length*TAN(Bracket_angle))+Bracket_height)*Bracket_length/2 * b
haunches_volume = (NumOfBracket_1+NumOfBracket_3)*bracket_volume_b +(NumOfBracket_2+NumOfBracket_4)*bracket_volume_a
es_volume = a*b*zzyzx + haunches_volume
PARAMETERS es_length=es_length, es_surface = es_surface, es_volume = es_volume

CALL "Precast_quantity_calc" parameters A = A,
	bMetricDimension = bMetricDimension,
	es_density		= es_density,
	es_density_us	= es_density_us,
	es_volume		= es_volume,
	es_surface		= es_surface
