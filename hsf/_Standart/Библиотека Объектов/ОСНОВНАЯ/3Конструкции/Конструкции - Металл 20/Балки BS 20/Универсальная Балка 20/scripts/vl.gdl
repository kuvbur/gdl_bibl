
! --------------------------------------------------------------------------------
! hide All Parameters list
! --------------------------------------------------------------------------------

hideparameter all "A", "B", "ZZYZX"

sor = 81       ! Number of Sections

if GLOB_MODPAR_NAME = "Profile" or siz_mtr[1] = "" then
	dim vekt[]
	for i = sor to 1 step -1
		vekt[i]  = ""
	next i

	szelv = open("text", "Universal Beams Data(14).txt", "separator='\t', mode=ro, Library")

	for i = 2 to sor+1
		v1 = ""
		n = input(szelv, i, 2, v1)
		vekt[i-1] = v1
	next i

	vekt[sor] = `СПЕЦИАЛЬНЫЕ`

	parameters siz_mtr = vekt

	siz_mtr = vekt

	close szelv
endif

file_dependence "Universal Beams Data(14).txt"
call "FM_types" parameters all

IF gs_cont_pen=0 THEN PARAMETERS gs_cont_pen=90
IF gs_fill_pen=0 THEN PARAMETERS gs_fill_pen=19

VALUES "gs_resol" RANGE [1,)
IF gs_detlevel_3D_m = 1 THEN LOCK "gs_resol"

dim stDetLevel3d[3]
	stDetLevel3d[1] = `Простой`
	stDetLevel3d[2] = `Детальный`
	stDetLevel3d[3] = `Откл.`

values "gs_detlevel_3D" stDetLevel3d
values "gs_detlevel_3D_m" 1, 2, 0

if GLOB_MODPAR_NAME = "gs_detlevel_3D" then
	gs_detlevel_3D_m = 1
	if gs_detlevel_3D = stDetLevel3d[2] then gs_detlevel_3D_m = 2
	if gs_detlevel_3D = stDetLevel3d[3] then gs_detlevel_3D_m = 0
	parameters gs_detlevel_3D_m = gs_detlevel_3D_m
else
	gs_detlevel_3D = stDetLevel3d[1]
	if gs_detlevel_3D_m = 2 then gs_detlevel_3D = stDetLevel3d[2]
	if gs_detlevel_3D_m = 0 then gs_detlevel_3D = stDetLevel3d[3]
	parameters gs_detlevel_3D = gs_detlevel_3D
endif
dim stRotAxisValues[2]
	stRotAxisValues[1] = `Вдоль оси`
	stRotAxisValues[2] = `Вдоль поперечного сечения`

values "stRotAxis" stRotAxisValues
values "iRotAxis" ROT_AXIS, ROT_CROSSECT

if GLOB_MODPAR_NAME = "stRotAxis" then
	iRotAxis = ROT_AXIS
	if stRotAxis = stRotAxisValues[2] then iRotAxis = ROT_CROSSECT
	parameters iRotAxis = iRotAxis
else
	stRotAxis = stRotAxisValues[1]
	if iRotAxis = ROT_CROSSECT then stRotAxis = stRotAxisValues[2]
	parameters stRotAxis = stRotAxis
endif
dim stInsertPointValues[3]
	stInsertPointValues[1] = `Вверху`
	stInsertPointValues[2] = `По центру`
	stInsertPointValues[3] = `Внизу`

values "stInsertPoint" stInsertPointValues
values "iInsertPoint" INSERTPOINT_TOP, INSERTPOINT_CENTER, INSERTPOINT_BOTTOM

if GLOB_MODPAR_NAME = "stInsertPoint" then
	iInsertPoint = INSERTPOINT_TOP
	if stInsertPoint = stInsertPointValues[2] then iInsertPoint = INSERTPOINT_CENTER
	if stInsertPoint = stInsertPointValues[3] then iInsertPoint = INSERTPOINT_BOTTOM
	parameters iInsertPoint = iInsertPoint
else
	stInsertPoint = stInsertPointValues[1]
	if iInsertPoint = INSERTPOINT_CENTER then stInsertPoint = stInsertPointValues[2]
	if iInsertPoint = INSERTPOINT_BOTTOM then stInsertPoint = stInsertPointValues[3]
	parameters stInsertPoint = stInsertPoint
endif

dim stCutModeValues[3]
	stCutModeValues[1] = `Перпендикулярно оси`
	stCutModeValues[2] = `Вдоль вертикальной оси`
	stCutModeValues[3] = `Вдоль горизонтальной оси`

IF iRotAxis = ROT_AXIS or Angle>60 THEN
    values "stCutModeBottom" stCutModeValues[1],
			stCutModeValues[3]
    values "iCutModeBottom" CUTMODE_PERPENDICULAR, CUTMODE_ALONGHORIZONTAL
    values "stCutModeTop" stCutModeValues[1],
			stCutModeValues[3]
    values "iCutModeTop" CUTMODE_PERPENDICULAR, CUTMODE_ALONGHORIZONTAL
ELSE
    values "stCutModeBottom" stCutModeValues
    values "iCutModeBottom" CUTMODE_PERPENDICULAR, CUTMODE_ALONGVERTICAL, CUTMODE_ALONGHORIZONTAL
    values "stCutModeTop" stCutModeValues
    values "iCutModeTop" CUTMODE_PERPENDICULAR, CUTMODE_ALONGVERTICAL, CUTMODE_ALONGHORIZONTAL
ENDIF

if GLOB_MODPAR_NAME = "stCutModeBottom" then
	iCutModeBottom = CUTMODE_PERPENDICULAR
	if stCutModeBottom = stCutModeValues[2] then iCutModeBottom = CUTMODE_ALONGVERTICAL
	if stCutModeBottom = stCutModeValues[3] then iCutModeBottom = CUTMODE_ALONGHORIZONTAL
	parameters iCutModeBottom = iCutModeBottom
else
	stCutModeBottom = stCutModeValues[1]
	if iCutModeBottom = CUTMODE_ALONGVERTICAL then stCutModeBottom = stCutModeValues[2]
	if iCutModeBottom = CUTMODE_ALONGHORIZONTAL then stCutModeBottom = stCutModeValues[3]
	parameters stCutModeBottom = stCutModeBottom
endif

if GLOB_MODPAR_NAME = "stCutModeTop" then
	iCutModeTop = CUTMODE_PERPENDICULAR
	if stCutModeTop = stCutModeValues[2] then iCutModeTop = CUTMODE_ALONGVERTICAL
	if stCutModeTop = stCutModeValues[3] then iCutModeTop = CUTMODE_ALONGHORIZONTAL
	parameters iCutModeTop = iCutModeTop
else
	stCutModeTop = stCutModeValues[1]
	if iCutModeTop = CUTMODE_ALONGVERTICAL then stCutModeTop = stCutModeValues[2]
	if iCutModeTop = CUTMODE_ALONGHORIZONTAL then stCutModeTop = stCutModeValues[3]
	parameters stCutModeTop = stCutModeTop
endif

if not(bCutPlanes) THEN LOCK "stCutModeBottom", "iCutModeBottom",
				"gs_cutang1_bot", "gs_cutang2_bot",
				"stCutModeTop", "iCutModeTop",
				"gs_cutang3_up","gs_cutang4_up"

if GLOB_MODPAR_NAME = "a_temp" then
    if iRotAxis = ROT_CROSSECT then
        A = a_temp/cos(Angle)
    else
        A = a_temp
    endif
    parameters A = A
else
    if iRotAxis = ROT_CROSSECT then
        a_temp = A*cos(Angle)
    else
        a_temp = A
    endif
    parameters a_temp = a_temp
endif

IF GLOB_MODPAR_NAME="A" THEN
	massSum=massPerMeter*A
	parameters massSum=massSum
endif

if not(axis) then
	lock "only_axis", "axis_line_type", "axis_line_pen"
endif
if axis and only_axis then
	lock "gs_ShowMoreHtps2D", "gs_cont_pen", "gs_fill_type", "gs_fill_pen", "gs_back_pen"
endif

IF Angle=0 AND iCutModeBottom <> CUTMODE_ALONGHORIZONTAL AND iCutModeTop <> CUTMODE_ALONGHORIZONTAL OR Angle<>0 THEN
    hideparameter "DashedLineType"
    lock "DashedLineType"
ENDIF

values "Profile" siz_mtr

!IF GLOB_MODPAR_NAME="Profile" THEN
 if Profile<>`СПЕЦИАЛЬНЫЕ` & Profile <> lastProfile then

	lastProfile = Profile
	parameters lastProfile = Profile

	szelv=open("text", "Universal Beams Data(14).txt", "separator='\t', mode=ro, Library")
	for i=2 to sor+1
		n=input(szelv, i, 2, ker)
		if Profile=ker then
			n=input(szelv, i, 3, omassPerMeter, osectDepth, osectWidth, osectThick, oflangeThick, oRad, ofilletDepth, orf, orw, ocle, ono, onn, \
            osecondMomentX, osecondMomentY, ogyrationRadX, ogyrationRadY, oelastModX, oelastModY, oplastModX, oplastModY, obp, oti, owc, otc, osectArea)
			i=sor+1	! force loop end
		endif
	next i
	close szelv

	parameters B=osectWidth/1000
	parameters ZZYZX=osectDepth/1000
	parameters massPerMeter=omassPerMeter
	massPerMeter=omassPerMeter
	parameters sectDepth=osectDepth
	sectDepth=osectDepth
	parameters sectWidth=osectWidth
	sectWidth=osectWidth
	parameters sectThick=osectThick
	sectThick=osectThick
	parameters flangeThick=oflangeThick
	flangeThick=oflangeThick
	parameters Rad=oRad
	Rad=oRad
	parameters filletDepth=ofilletDepth
	filletDepth=ofilletDepth
	parameters secondMomentX=osecondMomentX
	secondMomentX=osecondMomentX
	parameters secondMomentY=osecondMomentY
	secondMomentY=osecondMomentY
	parameters gyrationRadX=ogyrationRadX
	gyrationRadX=ogyrationRadX
	parameters gyrationRadY=ogyrationRadY
	gyrationRadY=ogyrationRadY
	parameters elastModX=oelastModX
	elastModX=oelastModX
	parameters elastModY=oelastModY
	elastModY=oelastModY
	parameters plastModX=oplastModX
	plastModX=oplastModX
	parameters plastModY=oplastModY
	plastModY=oplastModY
	parameters sectArea=osectArea
	sectArea=osectArea
	parameters massSum=massPerMeter*A
	massSum=massPerMeter*A
 endif
!ENDIF

if Profile<>`СПЕЦИАЛЬНЫЕ` then
	lock "B"
	lock "ZZYZX"
	lock "massPerMeter"
	lock "sectDepth"
	lock "sectWidth"
	lock "sectThick"
	lock "flangeThick"
	lock "Rad"
	lock "filletDepth"
	lock "secondMomentX"
	lock "secondMomentY"
	lock "gyrationRadX"
	lock "gyrationRadY"
	lock "elastModX"
	lock "elastModY"
	lock "plastModX"
	lock "plastModY"
	lock "sectArea"
	lock "massSum"
else
	values "sectWidth" range(0, )
	values "sectDepth" range(0, )
	values "sectThick" range(0, )
	values "flangeThick" range(0, )
	values "filletDepth" range(0, )

	parameters massPerMeter=massPerMeter
	parameters sectDepth=sectDepth
	parameters sectWidth=sectWidth
	parameters sectThick=sectThick
	parameters flangeThick=flangeThick
	parameters Rad=Rad
	parameters filletDepth=filletDepth
	parameters secondMomentX=secondMomentX
	parameters secondMomentY=secondMomentY
	parameters gyrationRadX=gyrationRadX
	parameters gyrationRadY=gyrationRadY
	parameters elastModX=elastModX
	parameters elastModY=elastModY
	parameters plastModX=plastModX
	parameters plastModY=plastModY
	parameters sectArea=sectArea
	parameters massSum=massPerMeter*zzyzx
	if GLOB_MODPAR_NAME = "sectWidth" then
		B = sectWidth/1000
		parameters B = B
	else
		sectWidth = B*1000
		parameters sectWidth = sectWidth
	endif
	if GLOB_MODPAR_NAME = "sectDepth" then
		ZZYZX = sectDepth/1000
		parameters ZZYZX = ZZYZX
	else
		sectDepth = ZZYZX*1000
		parameters sectDepth = sectDepth
	endif
	filletDepth = sectDepth-2*flangeThick-2*Rad
	parameters filletDepth = filletDepth
	lock "filletDepth"
endif


! Rotation Angle

VALUES "Angle" range[-90,90]

if temp_ang >= 270 and temp_ang <= 360 THEN PARAMETERS temp_ang = 0		!! Bottom
if temp_ang < 270 and temp_ang >= 180 THEN PARAMETERS temp_ang = 180

IF GLOB_MODPAR_NAME = "temp_ang" THEN
	PARAMETERS Angle = temp_ang - 90
ELSE
	PARAMETERS temp_ang = Angle + 90
ENDIF

! Cutting Angles

VALUES "gs_cutang1_bot" range[-60,60]
VALUES "gs_cutang2_bot" range[-60,60]
VALUES "gs_cutang3_up" range[-60,60]
VALUES "gs_cutang4_up" range[-60,60]


if temp_cutang1_bot > 120 and temp_cutang1_bot < (360-120)/2+120 THEN PARAMETERS temp_cutang1_bot = 120
if temp_cutang1_bot < 360 and temp_cutang1_bot >= (360-120)/2+120 THEN PARAMETERS temp_cutang1_bot = 0

if temp_cutang2_bot > 120 and temp_cutang2_bot < (360-120)/2+120 THEN PARAMETERS temp_cutang2_bot = 120
if temp_cutang2_bot < 360 and temp_cutang2_bot >= (360-120)/2+120 THEN PARAMETERS temp_cutang2_bot = 0

if temp_cutang3_up > 120 and temp_cutang3_up < (360-120)/2+120 THEN PARAMETERS temp_cutang3_up = 120
if temp_cutang3_up < 360 and temp_cutang3_up >= (360-120)/2+120 THEN PARAMETERS temp_cutang3_up = 0

if temp_cutang4_up > 120 and temp_cutang4_up < (360-120)/2+120 THEN PARAMETERS temp_cutang4_up = 120
if temp_cutang4_up < 360 and temp_cutang4_up >= (360-120)/2+120 THEN PARAMETERS temp_cutang4_up = 0


IF GLOB_MODPAR_NAME = "temp_cutang1_bot" THEN
	PARAMETERS gs_cutang1_bot = temp_cutang1_bot - 60
ELSE
	PARAMETERS temp_cutang1_bot = gs_cutang1_bot + 60
ENDIF

IF GLOB_MODPAR_NAME = "temp_cutang2_bot" THEN
	PARAMETERS gs_cutang2_bot = temp_cutang2_bot - 60
ELSE
	PARAMETERS temp_cutang2_bot = gs_cutang2_bot + 60
ENDIF

IF GLOB_MODPAR_NAME = "temp_cutang3_up" THEN
	PARAMETERS gs_cutang3_up = temp_cutang3_up - 60
ELSE
	PARAMETERS temp_cutang3_up = gs_cutang3_up + 60
ENDIF

IF GLOB_MODPAR_NAME = "temp_cutang4_up" THEN
	PARAMETERS gs_cutang4_up = temp_cutang4_up - 60
ELSE
	PARAMETERS temp_cutang4_up = gs_cutang4_up + 60
ENDIF

! ================================================================================
! Toplevel, Bottomlevel
! ================================================================================

ac_bottomlevel = 0
ac_toplevel = ZZYZX

if iRotAxis = ROT_AXIS then
	if iInsertPoint = INSERTPOINT_BOTTOM then
		ac_bottomlevel =  - abs(sin (Angle)* B/2)
		ac_toplevel = abs(sin (Angle)* B/2) + cos(Angle)* ZZYZX
	else
		if iInsertPoint = INSERTPOINT_CENTER then 
			ac_bottomlevel =  - abs(sin (Angle)* B/2)- abs(cos(Angle)*ZZYZX/2)
			ac_toplevel = abs(sin (Angle)* B/2) + cos(Angle)* ZZYZX- abs(cos(Angle)*ZZYZX/2)
		else				!INSERTPOINT_TOP  	
			ac_toplevel =  abs(sin (Angle)* B/2)
			ac_bottomlevel = - abs(sin (Angle)* B/2) - cos(Angle)* ZZYZX
		endif
	endif


else    !iRotAxis = ROT_CROSSECT 
	if iInsertPoint = INSERTPOINT_BOTTOM then
		if not(Angle<0) then
			ac_bottomlevel =  0
			ac_toplevel = abs(cos(90-Angle) * A) + abs(sin(90-Angle)*ZZYZX)
		else
			ac_toplevel =  abs(sin(90-Angle)*ZZYZX)
			ac_bottomlevel = -abs(cos(90-Angle) * A)
		endif
	else
		if iInsertPoint = INSERTPOINT_CENTER then
			if not(Angle<0) then
				ac_bottomlevel =  -abs(sin (90-Angle)* ZZYZX/2)
				ac_toplevel = abs(cos(90-Angle) * A) + abs(sin(90-Angle)*ZZYZX) -abs(sin (90-Angle)* ZZYZX/2)
			else
				ac_toplevel =  abs(sin (90-Angle)* ZZYZX/2)
				ac_bottomlevel = -abs(cos(90-Angle) * A) - abs(sin(90-Angle)*ZZYZX) +abs(sin (90-Angle)* ZZYZX/2)
			endif
		else				!INSERTPOINT_TOP 
			if not(Angle<0) then 	
				ac_bottomlevel =  -2*abs(sin (90-Angle)* ZZYZX/2)
				ac_toplevel = abs(cos(90-Angle) * A) + abs(sin(90-Angle)*ZZYZX) -2*abs(sin (90-Angle)* ZZYZX/2)
			else
				ac_toplevel = 0
				ac_bottomlevel = -abs(cos(90-Angle) * A) - abs(sin(90-Angle)*ZZYZX)
			endif
		endif
	endif
endif


parameters ac_bottomlevel = ac_bottomlevel
parameters ac_toplevel = ac_toplevel
