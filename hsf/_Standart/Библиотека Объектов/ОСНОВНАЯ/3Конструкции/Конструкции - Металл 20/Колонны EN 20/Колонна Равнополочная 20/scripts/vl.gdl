
! --------------------------------------------------------------------------------
! hide All Parameters list
! --------------------------------------------------------------------------------

hideparameter all "A", "B", "ZZYZX"

file_dependence "L_eq(14).txt"

if GLOB_MODPAR_NAME = "Profile" or sizeValues[1]="" then
	dim namevekt[]
	dim vekt[]
	vekt[30] = 0
	nTypes = 0
	szelv = open("text", "L_eq(14).txt", "separator='\t', mode = ro, Library")

	iRow = 2
	n = input(szelv, iRow, 2, v1, v2)
	while n > 1 do
		bHaveThisType = 0
		for k = 1 to nTypes
			if vekt[k] 	= v2 then
				bHaveThisType = 1
			endif
		next k
		if not(bHaveThisType) then
			nTypes = nTypes + 1
			vekt[nTypes] = v2
			namevekt[nTypes] = v1
		endif
		iRow = iRow + 1
		n = input(szelv, iRow, 2, v1, v2)
	endwhile
	close szelv

	namevekt[nTypes+1] = `СПЕЦИАЛЬНЫЙ`
	PARAMETERS sizeValues = namevekt
	sizeValues = namevekt

	if Profile <> `СПЕЦИАЛЬНЫЙ` then
		for inumType = 1 to nTypes
			if sizeValues[inumType] = Profile then
				sectDepth = vekt[inumType]
				parameters sectDepth = sectDepth
			endif
		next inumType
	endif
endif

values "Profile" 	sizeValues

if Profile = `СПЕЦИАЛЬНЫЙ` then
	values "sectThick" range (0, )
	values "Rad" range (, min(sectWidth,sectDepth) - sectThick-toeRad]
	values "sectWidth" range (sectThick, )
	values "sectDepth" range (sectThick, )
	values "toeRad" range [0, sectThick]

	massSum	= massPerMeter * ZZYZX
	parameters 	massSum	= massSum
	if GLOB_MODPAR_NAME = "sectWidth" then
		A = sectWidth/1000
		parameters A = A
	else
		sectWidth = A*1000
		parameters sectWidth = sectWidth
	endif
	if GLOB_MODPAR_NAME = "sectDepth" then
		B = sectDepth/1000
		parameters B = B
	else
		sectDepth = B*1000
		parameters sectDepth = sectDepth
	endif

else
	if Profile <> lastProfile or abs(availableThicknesses[1]) < EPS then

		bFoundExactMatch = 0
		szelv = open("text", "L_eq(14).txt", "separator='\t', mode=ro, Library")
		iRow = 2
		n = input(szelv, iRow, 3, ker1, ker2)
		while n > 0 do
			if sectDepth = ker1 then
				n = input(szelv, iRow, 4, osectThick)
				put osectThick						! collect possible thickness values
				if sectThick = ker2 then			! look up all data fields for the profile
					n = input(szelv, iRow, 5, omassPerMeter, oRad, otoeRad, osectArea, osecondMomentXY, oelastMod, ogyrationRadXY, osecondMomentU, ogyrationRadU, osecondMomentV,  ogyrationRadV)
					bFoundExactMatch = 1
				endif
			endif
			iRow = iRow + 1
			n = input(szelv, iRow, 3, ker1, ker2)
		endwhile
		close szelv

		! store collected thickness values
		if NSP > 0 then
			i = 1
			dim tempAvailableThicknesses[]
			while NSP > 0 do
				tempAvailableThicknesses[i] = get(1)
				i = i + 1
			endwhile
			availableThicknesses = tempAvailableThicknesses
			parameters availableThicknesses = availableThicknesses
		endif

		! set the predefined dimensions
		if bFoundExactMatch then
			lastProfile = Profile
			parameters lastProfile = lastProfile

			sectWidth 		= sectDepth
			A 		= sectWidth / 1000
			B		= sectDepth / 1000
			massPerMeter	= omassPerMeter
			Rad		= oRad
			toeRad		= otoeRad
			secondMomentXY	= osecondMomentXY
			secondMomentU	= osecondMomentU
			secondMomentV	= osecondMomentV
			gyrationRadXY	= ogyrationRadXY
			gyrationRadU		= ogyrationRadU
			gyrationRadV		= ogyrationRadV
			elastMod		= oelastMod
			sectArea		= osectArea
			massSum	= massPerMeter * ZZYZX

			parameters 	sectWidth 		= sectWidth,
						A 		= A,
						B		= B,
						massPerMeter	= massPerMeter,
						Rad		= Rad,
						toeRad		= toeRad,
						secondMomentXY	= secondMomentXY,
						secondMomentU	= secondMomentU,
						secondMomentV	= secondMomentV,
						gyrationRadXY	= gyrationRadXY,
						gyrationRadU		= gyrationRadU,
						gyrationRadV		= gyrationRadV,
						elastMod		= elastMod,
						sectArea		= sectArea,
						massSum	= massSum
		endif
	endif
	values "sectThick" availableThicknesses

	lock "sectDepth"
	lock "sectWidth"
	lock "a"
	lock "b"
	lock "massPerMeter"
	lock "Rad"
	lock "toeRad"
	lock "secondMomentXY"
	lock "secondMomentU"
	lock "secondMomentV"
	lock "gyrationRadXY"
	lock "gyrationRadU"
	lock "gyrationRadV"
	lock "elastMod"
	lock "sectArea"
	lock "massSum"
endif


call "FM_types" parameters all

dim stDetLevel3d[3]
	stDetLevel3d[1] = `Простой`
	stDetLevel3d[2] = `Детальный`
	stDetLevel3d[3] = `Откл.`

values "gs_detlevel_3D" stDetLevel3d
values "gs_detlevel_3D_m" 1, 2, 0

if GLOB_MODPAR_NAME = "gs_detlevel_3D" then
	gs_detlevel_3D_m = 1
	if gs_detlevel_3D = stDetLevel3d[2] then gs_detlevel_3D_m = 2
	if gs_detlevel_3D = stDetLevel3d[3] then gs_detlevel_3D_m = 0
	parameters gs_detlevel_3D_m = gs_detlevel_3D_m
else
	gs_detlevel_3D = stDetLevel3d[1]
	if gs_detlevel_3D_m = 2 then gs_detlevel_3D = stDetLevel3d[2]
	if gs_detlevel_3D_m = 0 then gs_detlevel_3D = stDetLevel3d[3]
	parameters gs_detlevel_3D = gs_detlevel_3D
endif
dim stDetLevel2d[2]
	stDetLevel2d[1] = `Простой`
	stDetLevel2d[2] = `Детальный`

values "gs_detlevel_2D" stDetLevel2d
values "gs_detlevel_2D_m" 1, 2

if GLOB_MODPAR_NAME = "gs_detlevel_2D" then
	gs_detlevel_2D_m = 1
	if gs_detlevel_2D = stDetLevel2d[2] then gs_detlevel_2D_m = 2
	parameters gs_detlevel_2D_m = gs_detlevel_2D_m
else
	gs_detlevel_2D = stDetLevel2d[1]
	if gs_detlevel_2D_m = 2 then gs_detlevel_2D = stDetLevel2d[2]
	parameters gs_detlevel_2D = gs_detlevel_2D
endif
values "gs_resol" range [3,)

if gs_detlevel_3D_m <> 2 then lock "gs_resol"

if gs_cont_pen <= 0 then parameters gs_cont_pen = 28
IF gs_fill_pen <= 0 then parameters gs_fill_pen = 19
IF axis_line_pen <= 0 then parameters axis_line_pen = 68

! ---------- Cutting Angles --------------------------------------------------
dim stCutModeColValues[2]
	stCutModeColValues[1] = `Вдоль оси X`
	stCutModeColValues[2] = `Вдоль оси Y`

values "stCutModeColTop" stCutModeColValues
values "iCutModeColTop" CUTMODE_ALONG_X, CUTMODE_ALONG_Y

if GLOB_MODPAR_NAME = "stCutModeColTop" then
	iCutModeColTop = CUTMODE_ALONG_X
	if stCutModeColTop = stCutModeColValues[2] then iCutModeColTop = CUTMODE_ALONG_Y
	parameters iCutModeColTop = iCutModeColTop
else
	stCutModeColTop = stCutModeColValues[1]
	if iCutModeColTop = CUTMODE_ALONG_Y then stCutModeColTop = stCutModeColValues[2]
	parameters stCutModeColTop = stCutModeColTop
endif

values "stCutModeColBottom" stCutModeColValues
values "iCutModeColBottom" CUTMODE_ALONG_X, CUTMODE_ALONG_Y

if GLOB_MODPAR_NAME = "stCutModeColBottom" then
	iCutModeColBottom = CUTMODE_ALONG_X
	if stCutModeColBottom = stCutModeColValues[2] then iCutModeColBottom = CUTMODE_ALONG_Y
	parameters iCutModeColBottom = iCutModeColBottom
else
	stCutModeColBottom = stCutModeColValues[1]
	if iCutModeColBottom = CUTMODE_ALONG_Y then stCutModeColBottom = stCutModeColValues[2]
	parameters stCutModeColBottom = stCutModeColBottom
endif
values "gs_cutdir_top" 	range [-90,90]
values "gs_cutdir_but" 	range [-90,90]
values "gs_cutang1_bot" range [-60,60]
values "gs_cutang2_bot" range [-60,60]
values "gs_cutang3_bot" range [-60,60]
values "gs_cutang4_bot" range [-60,60]

if iCutModeColTop = CUTMODE_ALONG_Y Then
	gs_cutdir_top = 0.00
else
	gs_cutdir_top = 90.00
endif
parameters gs_cutdir_top = gs_cutdir_top

if iCutModeColBottom = CUTMODE_ALONG_Y Then
	gs_cutdir_but = 0.00
else
	gs_cutdir_but = 90.00
endif
parameters gs_cutdir_but = gs_cutdir_but

IF NOT(bCutPlanes) Then
	hideparameter "stCutModeColTop", "iCutModeColTop", "stCutModeColBottom", "iCutModeColBottom", "gs_cutang1_bot","gs_cutang2_bot","gs_cutang3_bot","gs_cutang4_bot"
	Lock "stCutModeColTop", "iCutModeColTop", "stCutModeColBottom", "iCutModeColBottom", "gs_cutang1_bot","gs_cutang2_bot","gs_cutang3_bot","gs_cutang4_bot"
Endif

IF GLOB_MODPAR_NAME = "Profile" THEN
	axis_XDim = a/2+0.05
	parameters axis_XDim = axis_XDim

	axis_YDim = b/2+0.05
	parameters axis_YDim = axis_YDim
ENDIF

if not(axis) then
	lock "only_axis", "axis_line_type", "axis_line_pen", "axis_XDim", "axis_YDim"
endif
if axis and only_axis then
	lock "gs_cont_pen", "gs_fill_type", "gs_fill_pen", "gs_back_pen", "gs_detlevel_2D", "gs_ShowMoreHtps2D"
endif

parameters ac_bottomlevel = 0
parameters ac_toplevel = ZZYZX
