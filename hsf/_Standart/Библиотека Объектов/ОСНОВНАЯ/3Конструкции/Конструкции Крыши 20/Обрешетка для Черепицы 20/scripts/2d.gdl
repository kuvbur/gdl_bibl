
unID		= 1
hLineID		= 2000
textUnID	= 1000

! ==============================================================================

hotspot2 A/2,	 0,	unID,	B,1+256		! B Size
hotspot2 A/2,	-1,	unID+1,	B,3
hotspot2 A/2,	 B,	unID+2,	B,2
unID = unID + 3

hotspot2  0,0,	unID,	A,1+256			! A Size (length)
hotspot2 -1,0,	unID+1,	A,3
hotspot2  A,0,	unID+2,	A,2
unID = unID + 3

hotspot2 A/2,	 0,		unID,	dist,1+128	! Batten Space
hotspot2 A/2,	-1,		unID+1,	dist,3
hotspot2 A/2,	 dist,	unID+2,	dist,2
unID = unID + 3

! 1. Cutting Angle
L1XY = B/sin(schneid1)

hotspot2 0,						0,						unID,	schneid1, 6
hotspot2 L1XY,					0,						unID+1,	schneid1, 4+128
hotspot2 cos(schneid1) * L1XY,	sin(schneid1) * L1XY,	unID+2,	schneid1, 5
unID = unID + 3

! 2. Cutting Angle
L2XY = B/sin(schneid2)

add2 A,0
hotspot2 0,						0,						unID,	schneid2, 6
hotspot2 L2XY,					0,						unID+1,	schneid2, 4+128
hotspot2 cos(schneid2) * L2XY,	sin(schneid2) * L2XY,	unID+2,	schneid2, 5
unID = unID + 3
del 1



um1 = -B * tan(schneid1 - 90)
um2 =  B * tan(90 - schneid2)

hotline2 0,0,A,0, hLineID : hLineID = hLineID + 1
hotline2 A,0,A+um2,B, hLineID : hLineID = hLineID + 1
hotline2 A+um2,B,um1,B, hLineID : hLineID = hLineID + 1
hotline2 um1,B,0,0, hLineID : hLineID = hLineID + 1


! ==============================================================================
! Symbolic 2D
! ==============================================================================

if AC_symb_display_option = 3 then

	pen gs_cont_pen
	if not(kont) then
		project2{3} 3,270,3+32+64, 15,
			parameters	gs_2D_projection		= 1,
						gs_2D_projection_type	= 1,
						gs_cutplane_height		= zzyzx
	endif

	line_type gs_axis_line

	if kont then
		mask = 1+2+64
	else
		mask = 2+64
	endif

	fill gs_fill_type
	poly2_b{2} 5,mask, gs_fill_pen, gs_back_pen,
		0,		0,0,
		0,		0,1,
		A,		0,1,
		A+um2,	B,1,
		um1,	B,1,
		0,		0,1
endif


! ==============================================================================
! 3D based floor plan symbol
! ==============================================================================

if AC_symb_display_option <> 3 then

	gs_cutplane_height	= GLOB_CSTORY_ELEV - GLOB_HSTORY_ELEV + GLOB_CUTPLANES_INFO[1]
	gs_top_range_height	= GLOB_CSTORY_ELEV - GLOB_HSTORY_ELEV + GLOB_CUTPLANES_INFO[2]
	if AC_symb_show_projection_to = 1 then
		gs_bottom_range_height = GLOB_CSTORY_ELEV - GLOB_HSTORY_ELEV + GLOB_CUTPLANES_INFO[3]	! To Floor Plan Range
	else
		gs_bottom_range_height = GLOB_CUTPLANES_INFO[4]	! Absolute Display Limit
	endif

	doCutplane = (AC_symb_display_option = 1 | AC_symb_display_option = 2)

	if AC_symb_display_option = 4 or AC_symb_display_option = 5 then
		doCutplane = 1
		gs_cutplane_height = zzyzx
	endif

! View Edges -------------------------------------------------------------------

	pen AC_uncut_pen
	line_type 1

	if AC_symb_display_option = 5 then
		pen AC_overhead_pen
		line_type AC_overhead_linetype
	endif

	project2{3} 3,270,2 + 32 * (AC_symb_display_option = 5 | not(gs_use_3D_view_attributes)), 8,
		parameters	gs_2D_projection		= doCutplane,
					gs_2D_projection_type	= 1,
					gs_cutplane_height		= gs_cutplane_height,
					gs_top_range_height		= gs_top_range_height,
					gs_bottom_range_height	= gs_bottom_range_height


	if AC_symb_display_option <> 5 then

! View Polygons ----------------------------------------------------------------

		pen gs_fill_pen
		fill gs_fill_type

		project2{3} 3,270,3+32+1024+2048, 4,
						gs_back_pen,
			parameters	gs_2D_projection		= doCutplane,
						gs_2D_projection_type	= 2,
						gs_cutplane_height		= gs_cutplane_height,
						gs_top_range_height		= gs_top_range_height,
						gs_bottom_range_height	= gs_bottom_range_height
	endif


	if AC_symb_display_option = 2 then

! Overhead View ----------------------------------------------------------------

		pen AC_overhead_pen
		line_type AC_overhead_linetype

		project2{3} 3,270,2+32, 2+8,
			parameters	gs_2D_projection		= doCutplane,
						gs_2D_projection_type	= 3,
						gs_cutplane_height		= gs_cutplane_height,
						gs_top_range_height		= gs_top_range_height,
						gs_bottom_range_height	= gs_bottom_range_height
	endif

	if doCutplane then

! Cut Lines --------------------------------------------------------------------

		pen SYMB_SECT_PEN
		line_type AC_cut_linetype
		line_property 2

		project2{3} 3,270,2+16+32+256+4096, 2,
			parameters	gs_2D_projection		= 1,
						gs_2D_projection_type	= 4,
						gs_cutplane_height		= gs_cutplane_height,
						gs_top_range_height		= gs_top_range_height,
						gs_bottom_range_height	= gs_bottom_range_height


! Cut Polygons -----------------------------------------------------------------

		pen SYMB_FILL_PEN
		fill SYMB_FILL

		project2{3} 3,270,3+32+512, 1,
						SYMB_FBGD_PEN,
			parameters	gs_2D_projection		= 1,
						gs_2D_projection_type	= 5,
						gs_cutplane_height		= gs_cutplane_height,
						gs_top_range_height		= gs_top_range_height,
						gs_bottom_range_height	= gs_bottom_range_height
	endif
endif
