h_wood = max(B, h)
b_wood = min(B, h)
c_wood = round_int(LumberSize*200)/200
parameters h_wood = h_wood, b_wood = b_wood, c_wood = c_wood
call "Общий шаблон дерево" parameters all


hideparameter all "A", "B", "ZZYZX"

call "FM_types" parameters all

parameters gs_GLOB_MODPAR_NAME = GLOB_MODPAR_NAME

! ==============================================================================
! 2D Display Options
! ==============================================================================

values "gs_symb_display_option" stDisplayOptions
values "gs_symb_show_projection_to" stProjectionTypes

if AC_symb_display_option = 3 | AC_symb_display_option = 5 then
	hideparameter "gs_use_3D_view_attributes"
	lock "gs_use_3D_view_attributes"
endif

if gs_use_3D_view_attributes then
	hideparameter "AC_uncut_pen"
	lock "AC_uncut_pen"
endif

if AC_symb_display_option = 3 | AC_symb_display_option = 4 | AC_symb_display_option = 5 then
	hideparameter "gs_symb_show_projection_to"
	lock "gs_symb_show_projection_to"
endif

if AC_symb_display_option = 3 | AC_symb_display_option = 5 then
	hideparameter "AC_cut_linetype", "AC_uncut_pen"
	lock "AC_cut_linetype", "AC_uncut_pen"
endif

if AC_symb_display_option = 1 | AC_symb_display_option = 3 | AC_symb_display_option = 4 then
	hideparameter "AC_overhead_linetype", "AC_overhead_pen"
	lock "AC_overhead_linetype", "AC_overhead_pen"
endif

if AC_symb_display_option = 4 then
	hideparameter "AC_cut_linetype"
	lock "AC_cut_linetype"
endif

if AC_symb_display_option = 5 then
	hideparameter "gs_fill_type", "gs_fill_pen", "gs_back_pen"
	lock "gs_fill_type", "gs_fill_pen", "gs_back_pen"
endif

! ==============================================================================

if GLOB_MODPAR_NAME = "ssch1" then
	ssch1_m = CUTTING_PLANE_VERT
	if ssch1 = stCuttingPlane[2] then ssch1_m = CUTTING_PLANE_HOR
	if ssch1 = stCuttingPlane[3] then ssch1_m = CUTTING_PLANE_CENTRAL
	parameters ssch1_m = ssch1_m
else
	ssch1 = stCuttingPlane[ssch1_m]
	parameters ssch1 = ssch1
endif

if GLOB_MODPAR_NAME = "ssch2" then
	ssch2_m = CUTTING_PLANE_VERT
	if ssch2 = stCuttingPlane[2] then ssch2_m = CUTTING_PLANE_HOR
	if ssch2 = stCuttingPlane[3] then ssch2_m = CUTTING_PLANE_CENTRAL
	parameters ssch2_m = ssch2_m
else
	ssch1 = stCuttingPlane[ssch2_m]
	parameters ssch2 = ssch2
endif

values "ssch1" stCuttingPlane
values "ssch2" stCuttingPlane

values{2} "gs_detlevel_3D_m"	2, `Детальный`,
								0, `Откл.`

if gs_detlevel_3D_m = 0 then
	lock "gs_shadow"
	hideparameter "gs_shadow"
endif

values "typeTextRotation" `Читаемый`,`Всегда Горизонтально`,`Выровнять по Символу`
values "typeTextRotation_m" 2, 1, 0

if GLOB_MODPAR_NAME = "typeTextRotation" then
	if typeTextRotation = `Читаемый`			then typeTextRotation_m = 2
	if typeTextRotation = `Всегда Горизонтально`	then typeTextRotation_m = 1
	if typeTextRotation = `Выровнять по Символу`	then typeTextRotation_m = 0
	parameters typeTextRotation_m = typeTextRotation_m
else
	if typeTextRotation_m = 2					then typeTextRotation = `Читаемый`
	if typeTextRotation_m = 1					then typeTextRotation = `Всегда Горизонтально`
	if typeTextRotation_m = 0					then typeTextRotation = `Выровнять по Символу`
	parameters typeTextRotation = typeTextRotation
endif

values{2} "iRoofConstrSymbType" 	SYMBTYPE_WITHAXIS, `с Осью`,
									SYMBTYPE_WITHOUTAXIS, `без Оси`,
									SYMBTYPE_ONLYAXIS, `только Ось`

if iRoofConstrSymbType = SYMBTYPE_WITHOUTAXIS then
	lock "gs_axis_line", "gs_axis_line_pen"
endif

if iRoofConstrSymbType = SYMBTYPE_ONLYAXIS then
	lock	"gs_cont_pen", "gs_fill_type", "gs_fill_pen", "gs_back_pen", "gs_ShowMoreHtps2D"
	hideparameter	"gs_cont_pen", "gs_fill_type", "gs_fill_pen", "gs_back_pen", "gs_ShowMoreHtps2D"

	lock	"gs_symb_display_option" ,"gs_symb_show_projection_to",
			"AC_cut_linetype", "AC_uncut_pen", "AC_overhead_linetype", "AC_overhead_pen"
	hideparameter	"gs_symb_display_option" ,"gs_symb_show_projection_to",
					"AC_cut_linetype", "AC_uncut_pen", "AC_overhead_linetype", "AC_overhead_pen"
endif

if gs_cont_pen = 0 then parameters gs_cont_pen = 2
if gs_fill_pen = 0 then parameters gs_fill_pen = 91


! ==============================================================================

if GLOB_MODPAR_NAME = "A" then
	parameters gs_struc_length=A/cos(neig)
	parameters zzyzx=abs(A*tan(neig))
endif
if GLOB_MODPAR_NAME = "ZZYZX" then
	parameters gs_struc_length=sqr(A^2+zzyzx^2)
	parameters neig=atn(zzyzx/A)*(1-2*gs_angle_pos)
endif
if GLOB_MODPAR_NAME = "neig" then
	parameters zzyzx=abs(tan(neig)*A)
	parameters gs_struc_length=A/cos(neig)
	if neig<0 then parameters gs_angle_pos=1
	if not(neig<0) then parameters gs_angle_pos=0
endif
if GLOB_MODPAR_NAME = "temp_neig" then
	parameters zzyzx=abs(tan(temp_neig-90)*A)
	parameters gs_struc_length=A/cos(temp_neig-90)
	if (temp_neig-90) < 0 then parameters gs_angle_pos=1
	if not((temp_neig-90) <0 ) then parameters gs_angle_pos=0
endif
if GLOB_MODPAR_NAME = "gs_struc_length" then
	parameters A=gs_struc_length*cos(neig)
	parameters zzyzx=abs(gs_struc_length*sin(neig))
endif

if GLOB_MODPAR_NAME = "B"	then parameters B2 = B / 2
if GLOB_MODPAR_NAME = "B2"	then parameters B = B2 * 2


! ==============================================================================
! Neig Angle
! ==============================================================================

values "neig" RANGE (-90,90)

if temp_neig >= 270 & temp_neig <= 360 then parameters temp_neig = 0		! Bottom
if temp_neig <  270 & temp_neig >= 180 then parameters temp_neig = 180

if GLOB_MODPAR_NAME = "temp_neig" then
	parameters neig = temp_neig - 90
else
	parameters temp_neig = neig + 90
endif

! ==============================================================================
! 1. End Peak Angle
! ==============================================================================

if GLOB_MODPAR_NAME = "schneid1" and ABS(schneid1 - 90) < EPS then				! schneid1 = 90
	parameters peak_schneid1 = schneid1
endif

if GLOB_MODPAR_NAME = "peak_schneid1" and ABS(peak_schneid1 - 90) < EPS then	! peak_schneid1 = 90
	parameters schneid1 = peak_schneid1
endif

if GLOB_MODPAR_NAME = "schneid1" and ABS(schneid1 - 90) > EPS then				! schneid1 <> 90
	parameters peak_schneid1 = 180 - schneid1
endif

if GLOB_MODPAR_NAME = "peak_schneid1" and ABS(peak_schneid1 - 90) > EPS then	! peak_schneid1 <> 90
	parameters schneid1 = 180 - peak_schneid1
endif

! ==============================================================================
! 2. End Peak Angle
! ==============================================================================

if GLOB_MODPAR_NAME = "schneid2" & abs(schneid2 - 90) < EPS then			! schneid2 = 90
	parameters peak_schneid2 = schneid2
endif

if GLOB_MODPAR_NAME = "peak_schneid2" & abs(peak_schneid2 - 90) < EPS then	! peak_schneid2 = 90
	parameters schneid2 = peak_schneid2
endif

if GLOB_MODPAR_NAME = "schneid2" & abs(schneid2 - 90) > EPS then			! schneid2 <> 90
	parameters peak_schneid2 = 180 - schneid2
endif

if GLOB_MODPAR_NAME = "peak_schneid2" & abs(peak_schneid2 - 90) > EPS then	! peak_schneid2 <> 90
	parameters schneid2 = 180 - peak_schneid2
endif


! ==============================================================================
! Cutting Angle
! ==============================================================================

if ssch1_m = CUTTING_PLANE_VERT then
	Values "schneid1" range(neig,180+neig)
else
	values "schneid1" range(0,180)
endif
if ssch2_m = CUTTING_PLANE_VERT then
	values "schneid2" range(neig,180+neig)
else
	values "schneid2" range(0,180)
endif

values "h" range(0,)

! ==============================================================================
! Lumber Size
! ==============================================================================

if ssch1_m = CUTTING_PLANE_VERT then
	if (schneid1-neig) <= 90 then
		L1=0
	else
		L1=H*TAN(schneid1-90-neig)	! --- End Length at overhanging
	endif
else
	if ssch1_m = CUTTING_PLANE_HOR then		! --- No End Peak
		L11=ABS(B/2/(TAN(schneid1)))
		L1=L11/COS(neig)
	else
		L1=0
	endif
endif

if ssch2_m = CUTTING_PLANE_VERT then
	if (schneid2 - neig) >= 90 then
		L2 = 0
	else
		L2 = H/tan(schneid2 - neig)	!! End Length at ridge
	endif
else
	if ssch2_m = CUTTING_PLANE_HOR then		! No End Peak
		L211= abs(B / 2 / tan(schneid2))	! End Length at ridge
		L21	= L211 / cos(neig)
		HZ	= H / cos(neig)
		L22	= HZ * cos(90 - neig)
		L2	= L21 + L22
	else
		L2	= H * tan(neig)
	endif
endif


! ==============================================================================
! Lumber Size
! ==============================================================================

parameters LumberSize = A / cos(neig) + L1 + L2
lock "LumberSize"


! ==============================================================================
! Text Label
! ==============================================================================

MM_IN_A_DOT = 25.4 / 72

if not(gs_text_show) then
	lock	"gs_text_font_pen", "fontType",
			"gs_text_font_size_mm", "gs_text_font_size_pt",
			"gs_text_style_bold", "gs_text_style_italic", "gs_text_style_underline",
			"gs_text_pos_x", "gs_text_pos_y", "typeTextRotation"
	hideparameter	"gs_text_font_pen", "fontType",
					"gs_text_font_size_mm", "gs_text_font_size_pt",
					"gs_text_style_bold", "gs_text_style_italic", "gs_text_style_underline",
					"gs_text_pos_x", "gs_text_pos_y", "typeTextRotation"
else
	w_units_form = ""
	rrr = request("Working_length_unit", "", w_units_form)
	bMetricDimension = strstr(w_units_form, "m")		! m, cm, mm

	values "gs_text_font_size_mm"	range(0,]
	values "gs_text_font_size_pt"	range(0,]

	if GLOB_MODPAR_NAME = "gs_text_font_size_pt" & gs_text_font_size_pt > EPS then
		parameters gs_text_font_size_mm = gs_text_font_size_pt * MM_IN_A_DOT
	else
		parameters gs_text_font_size_pt = gs_text_font_size_mm / MM_IN_A_DOT
	endif

	if bMetricDimension then
		lock "gs_text_font_size_pt"
		hideparameter "gs_text_font_size_pt"
	endif

	for i=1 to 255: put i: next i
	values "gs_text_font_pen" get(nsp)
endif

! ==============================================================================
! for GER listing
! ==============================================================================

rm_ProfileWidth		= B
rm_ProfileHeight	= h
parameters	rm_ProfileWidth		= rm_ProfileWidth,
			rm_ProfileHeight	= rm_ProfileHeight


