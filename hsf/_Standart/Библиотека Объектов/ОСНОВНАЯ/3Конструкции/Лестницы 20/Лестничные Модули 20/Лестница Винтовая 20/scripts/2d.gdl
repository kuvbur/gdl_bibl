
!! Stairs Spiral.gsm

drawindex 10

fill gs_fill_type
PEN gs_cont_pen
dalf=angle/nRisers

X1=swelldia/2
Y1=0

X2=X1*COS(dalf)
Y2=X1*SIN(dalf)

X11=Len/2
Y11=0

X12=X11*COS(dalf)
Y12=X11*SIN(dalf)

HOTSPOT2 0,0
HOTSPOT2 -Len/2,0
HOTSPOT2 Len/2,0
HOTSPOT2 0,Len/2
HOTSPOT2 0,-Len/2
HOTSPOT2 swelldia/2,0
HOTSPOT2 swelldia/2*COS(angle),swelldia/2*SIN(angle)
HOTSPOT2 Len/2*COS(angle),Len/2*SIN(angle)

IF bShowExtraHotspots=1 THEN
	FOR I=0 TO nRisers
		HOTSPOT2 X1,Y1
		HOTSPOT2 X11,Y11
		ROT2 dalf
	NEXT I
	DEL nRisers+1
ENDIF

!===============================================================================
! Contour Fill and Frame
!===============================================================================

IF angle<360 THEN
	POLY2_b 8, 2+64,gs_fill_pen, gs_back_pen,
		X1,Y1,1,
		X11,Y11,1,
		0,0,901,
		0,angle,4001,
		X11*COS(angle),Len/2*SIN(angle),1,
		X1*COS(angle),swelldia/2*SIN(angle),1,
		0,-angle,4001,
		X1,Y1,1

ELSE
	POLY2_b 4, 2+4+64,gs_fill_pen, gs_back_pen,
		0,Y11,900,
		X11,360,4001,
		0,Y11,900,
		X1,360,4001

ENDIF

!===============================================================================
! Treads and Arrow
!===============================================================================

_nTrans = 0				!!!!! number of transformations from this point till Railings !!!!!
_nBottomRiser	= int(nRisers/2)
_nTopRiser		= nRisers - _nBottomRiser

! Below Breakline
! -------------------------------------------------------------------------------

! Contour frame
arc2 0,0,Len/2,0,dalf*_nBottomRiser
arc2 0,0,swelldia/2,0,dalf*_nBottomRiser

! Treads
for i = 0 to _nBottomRiser

	line2 X1,Y1,X11,Y11
	rot2 dalf
	_nTrans = _nTrans + 1

next i

del 1
_nTrans = _nTrans - 1

! Arrow Head
p1x=swelldia/2+(Len/2-swelldia/2)/2
p1y=0

p2x=(swelldia/2+2*(Len/2-swelldia/2)/3)*COS(dalf)
p2y=-(swelldia/2+2*(Len/2-swelldia/2)/3)*SIN(dalf)

p3x=(swelldia/2+(Len/2-swelldia/2)/3)*COS(dalf)
p3y=-(swelldia/2+(Len/2-swelldia/2)/3)*SIN(dalf)

line2 p1x,p1y,p2x,p2y										!First arrow
line2 p1x,p1y,p3x,p3y


del _nTrans
_nTrans = 0

! Arrow Line
for j = 1 to _nBottomRiser

	arc2 0,0,swelldia/2 + (Len/2-swelldia/2)/2,0,dalf
	rot2 dalf
	_nTrans = _nTrans + 1
next j

! Above Breakline
! -------------------------------------------------------------------------------


if gs_detlevel_2D = `Штриховая` then LINE_TYPE gs_line_type		!Start of the upper part

! Treads
for k = 0 to _nTopRiser

	line2 X1,Y1,X11,Y11
	rot2 dalf
	_nTrans = _nTrans + 1
next k

del (_nTopRiser + 1)
_nTrans = _nTrans - (_nTopRiser + 1)

! Arrow Line
for m = 1 to _nTopRiser
	arc2 0,0,swelldia/2+(Len/2-swelldia/2)/2,0,dalf
	rot2 dalf
	_nTrans = _nTrans + 1
next m
del _nTrans
_nTrans = 0

! Contour
arc2 0,0,Len/2,dalf*(nRisers - _nBottomRiser - 1),angle
arc2 0,0,swelldia/2,dalf*(nRisers - _nBottomRiser - 1),angle

rot2 angle
_nTrans = _nTrans + 1

! Arrow Head
line2 p1x,p1y,p2x,p2y												!Second Arrow
line2 p1x,p1y,p3x,p3y
del _nTrans													!!!!! _nTrans ends here !!!!!

!===============================================================================
! --- Railings ---
!===============================================================================

dim drawPart[3] ! 1 - lower,  2 - upper,  3 - full
dim drawDashed[3] ! 1 - lower,  2 - upper,  3 - full
drawPart[1] = 0		! Lower
drawPart[2] = 0		! Upper
drawPart[3] = 0		! Full
drawDashed[1] = 0	! Lower
drawDashed[2] = 0	! Upper
drawDashed[3] = 0	! Full

if gs_detlevel_2D_m = DET2D_INTERSECT then
	gs_SymbolType_m = 19
else
	gs_SymbolType_m = 20
endif

IF gs_SymbolType_m = 19 THEN		! Type 19
	drawPart[1]	= 1		! Lower
	drawPart[2]	= 1		! Upper
	drawDashed[2] = 1	! Upper
ENDIF

IF gs_SymbolType_m = 20 THEN		! Type 20
	drawPart[1]	= 1		! Lower
	drawPart[2]	= 1		! Upper
ENDIF

_bShowRailIn2D = 1
if _bShowRailIn2D then
	bShowRailPart1		= 0
	bShowRailPart2		= 0
	breakLineDistAngle	= 50
	breakLineWidthAngle	= 0
	brLineAngle			= 90

	drawindex 30
	fill gs_fill_type

	! --- Left Rail ----------------------------------------------------------------
	if iShowRailingOn = 3 | iShowRailingOn = 1 then		! Left, Both
		handRailOvAngleL	= dalf / 2
		hrol				= dalf / 2 * 2 * (swelldia / 2 + handRailWidthL / 2) * pi / 360

		if angle < 360 then
			tempRailAngleL	= angle - handRailOvAngleL * 2
		else
			tempRailAngleL	= 360 - EPS * 100 - 2 * handRailOvAngleL
		endif

		if bShowRailOnFloorPlan then
			if drawPart[1] then
				bShowRailOn1stRun		= 1
				bBreakRailLine			= 1
				brLineAngle				= 90
				bShowRailPart1			= 1
				breakLineDistAngle		= INT(nRisers / 2) * dalf
				breakLineWidthAngle		= 0
				bRailAboveBreakLine		= 0
				gosub "left rail"
			endif

			if drawPart[2] and bShowRailAboveBreakLine then
				bShowRailOn1stRun		= 1
				bBreakRailLine			= 1
				brLineAngle				= 90
				bShowRailPart2			= 1
				breakLineDistAngle		= INT(nRisers / 2) * dalf
				breakLineWidthAngle		= 0
				bRailAboveBreakLine		= drawDashed[2]
				gosub "left rail"
			endif
		endif

		if bShowRailAxis then
			line_type railAxisLineType
			pen gs_RailAxisPen
			if drawPart[1] then
				ARC2 0, 0, swelldia / 2 + handRailWidthL / 2, 0, INT(nRisers / 2) * dalf
			endif
			if drawPart[2] and bShowRailAboveBreakLine then
				ARC2 0, 0, swelldia / 2 + handRailWidthL / 2, INT(nRisers / 2) * dalf, tempRailAngleL + handRailOvAngleL * 2
			endif
		endif
	endif

	! --- Right Rail ----------------------------------------------------------------
	if iShowRailingOn = 2 | iShowRailingOn = 1 then		! Right, Both
		handRailOvAngleR	= dalf / 2
		hror				= dalf / 2 * 2 * (Len / 2 - handRailWidthR / 2) * pi / 360

		if angle < 360 then
			tempRailAngleR	= angle - handRailOvAngleR * 2
		else
			tempRailAngleR	= 360 - EPS * 100 - 2 * handRailOvAngleR
		endif

		if bShowRailOnFloorPlan then
			if drawPart[1] then
				bShowRailOn1stRun		= 1
				bBreakRailLine			= 1
				brLineAngle				= 90
				bShowRailPart1			= 1
				breakLineDistAngle		= INT(nRisers / 2) * dalf
				breakLineWidthAngle		= 0
				bRailAboveBreakLine		= 0
				gosub "right rail"
			endif

			if drawPart[2] and bShowRailAboveBreakLine then
				bShowRailOn1stRun		= 1
				bBreakRailLine			= 1
				brLineAngle				= 90
				bShowRailPart2			= 1
				breakLineDistAngle		= INT(nRisers / 2) * dalf
				breakLineWidthAngle		= 0
				bRailAboveBreakLine		= drawDashed[2]
				gosub "right rail"
			endif
		endif

		if bShowRailAxis then
			line_type railAxisLineType
			pen gs_RailAxisPen
			if drawPart[1] then
				ARC2 0, 0, Len / 2 - handRailWidthR / 2, 0, INT(nRisers / 2) * dalf
			endif
			if drawPart[2] and bShowRailAboveBreakLine then
				ARC2 0, 0, Len / 2 - handRailWidthR / 2, INT(nRisers / 2) * dalf, tempRailAngleR + handRailOvAngleR * 2
			endif
		endif
	endif
endif

END

"left rail":

	! ---  Rail on 1st Run -----------------------------------------------------
	if bShowRailOn1stRun then
		if bComplexRailLeft then rot2 handRailOvAngleL
		add2 swelldia / 2 + handRailWidthL / 2, 0
		rot2 90

		lraSimple=0
		lraComplex=0
		additionXComplex=0
		additionZComplex=0
		hrovL=hrol
		hrovR=hrol
		postNumber = 10
		side = SIDE_LEFT
		gosub "callRailsForStair"

		del 2
		if bComplexRailLeft then del 1
	endif

return

"right rail":

	! ---  Rail on 1st Run -----------------------------------------------------
	if bShowRailOn1stRun then
		if bComplexRailRight then rot2 handRailOvAngleR
		add2 Len / 2 - handRailWidthR / 2, 0
		rot2 90

		lraSimple=0
		lraComplex=0
		additionXComplex=0
		additionZComplex=0
		hrovL=hror
		hrovR=hror
		postNumber = 10
		side = SIDE_RIGHT
		gosub "callRailsForStair"

		del 2
		if bComplexRailRight then del 1
	endif

return

"callRailsForStair":
! ------------------------------------------------------------------------------
!	lraSimple
!	lraComplex
!	additionXComplex
!	additionZComplex
!	hrovL: rail overhang start
!	hrovR: rail overhang end
!	postNumber:   number of posts
!	side: SIDE_LEFT or SIDE_RIGHT
! ==============================================================================
	additionXComplex = additionXComplex
	additionZComplex = additionZComplex
	gosub "callRails"
return

! ==============================================================================
"callRails":
! ------------------------------------------------------------------------------
!	ani
!	additionXComplex
!	additionZComplex
!	dsComplex
!  ------------------
!	side: SIDE_LEFT or SIDE_RIGHT
!	lraSimple
!	lraComplex
!	hrovL: rail overhang start
!	hrovR: rail overhang end
!	postNumber:   number of posts
! ==============================================================================
	if side = SIDE_LEFT then
		handRailWidth	= handRailWidthL
		bComplexRail	= bComplexRailLeft
		rb				= swelldia / 2 + handRailWidthL / 2
		railAngle		= tempRailAngleL
		tempRailAngle	= 0
	else
		handRailWidth	= handRailWidthR
		bComplexRail	= bComplexRailRight
		rb				= Len / 2 - handRailWidthR / 2
		railAngle		= tempRailAngleR
		tempRailAngle	= 0
	endif

	add2 additionXComplex * bComplexRail, 0
	call "railSymbol2D_m" parameters all	cfs					= 1,
											bEnable2DPosts		= bComplexRail,
											ptyp_m				= 3,
											ab					= railAngle,
											rb					= rb,
											rom_m				= 1,
											rmm_m				= 1,
											LengthSize			= 0,
											lra					= 1,
											gs_AngleL			= 90,
											gs_AngleR			= 90,
											iHandRailStyle		= 1,
											handRailDiameter	= handRailWidth,
											handRailWidth		= handRailWidth,
											hroL				= hrovL,
											hroR				= hrovR,
											np					= postNumber,
											gs_cont_pen			= railPen,
											dash_line			= gs_line_type,
											al					= railAxisLineType,
											sa					= bShowRailAxis*0,
											bBreakRailLine		= bBreakRailLine,
											breakLineAngle		= brLineAngle,
											breakLineDistAngle	= breakLineDistAngle,
											breakLineWidthAngle	= breakLineWidthAngle,
											bRailAboveBreakLine	= bRailAboveBreakLine,
											bShowRailBelowBrL	= bShowRailPart1,
											bShowRailAboveBrL	= bShowRailPart2,
											bPostNoCalculation	= 1,
											pit_m				= 1,
											nbt					= nRisers
	del 1

	bShowRailPart1			= 0
	bShowRailPart2			= 0

return

