
call "FM_types" parameters all

values{2} "topTreadLevel_m" 	TOPTREAD_ATFLOOR, `Верхняя Ступень на Уровне Пола`,
								TOPTREAD_BELOWFLOOR, `Верхняя Ступень Ниже Уровня Пола`

values{2} "firstTreadLevel_m" 	FIRSTTREAD_ATFLOOR, `Первая Ступень на Уровне Пола`,
								FIRSTTREAD_ABOVEFLOOR, `Первая Ступень над Уровнем Пола`



IF topTreadLevel_m = TOPTREAD_ATFLOOR AND firstTreadLevel_m = FIRSTTREAD_ATFLOOR THEN

IF ust<stairSlabThk+treadThickness THEN
PARAMETERS ust=stairSlabThk+treadThickness
 ust=stairSlabThk+treadThickness
ENDIF
VALUES "ust" RANGE [stairSlabThk+treadThickness,]
ENDIF


IF topTreadLevel_m = TOPTREAD_BELOWFLOOR AND firstTreadLevel_m = FIRSTTREAD_ABOVEFLOOR THEN

IF ust<stairSlabThk+treadThickness-rth THEN
PARAMETERS ust=stairSlabThk+treadThickness-rth
 ust=stairSlabThk+treadThickness-rth
ENDIF
VALUES "ust" RANGE [stairSlabThk+treadThickness-rth,]
ENDIF


IF topTreadLevel_m = TOPTREAD_BELOWFLOOR AND firstTreadLevel_m = FIRSTTREAD_ATFLOOR THEN

IF ust<stairSlabThk+treadThickness THEN
PARAMETERS ust=stairSlabThk+treadThickness
 ust=stairSlabThk+treadThickness
ENDIF
VALUES "ust" RANGE [stairSlabThk+treadThickness,]
ENDIF


IF topTreadLevel_m = TOPTREAD_ATFLOOR AND firstTreadLevel_m = FIRSTTREAD_ABOVEFLOOR THEN

IF ust<stairSlabThk+treadThickness-rth THEN
PARAMETERS ust=stairSlabThk+treadThickness-rth
 ust=stairSlabThk+treadThickness-rth
ENDIF
VALUES "ust" RANGE [stairSlabThk+treadThickness-rth,]
ENDIF

IF topTreadLevel_m = TOPTREAD_ATFLOOR then
	numTread = nRisers
else						! Top Tread below Floor Level
	numTread = nRisers - 1
endif
if firstTreadLevel_m = FIRSTTREAD_ATFLOOR then numTread = numTread + 1



values{2} "iCalculationMode" 	CALCMODE_NO_OF_RISERS, `Кол-во Подступенков`,
								CALCMODE_TREAD_HEIGHT, `Высота Ступени`

values "stairBaseType"  `Бетон`, `Нет`
values "stairBaseType_m" 1, 3

if GLOB_MODPAR_NAME = "stairBaseType" then
	stairBaseType_m = 1
	if stairBaseType = `Нет` then stairBaseType_m = 3
	parameters stairBaseType_m = stairBaseType_m
else
	stairBaseType = `Бетон`
	if stairBaseType_m = 3 then stairBaseType = `Нет`
	parameters stairBaseType_m = stairBaseType_m
endif

! ---------- 2D detail level ----------

values "gs_detlevel_2D" stDetlevel2D	! Intersect, Full
values "gs_detlevel_2D_m" 1, 2

if GLOB_MODPAR_NAME = "gs_detlevel_2D" then
	gs_detlevel_2D_m = DET2D_INTERSECT
	if gs_detlevel_2D = stDetlevel2D[2]	then gs_detlevel_2D_m = DET2D_FULL
	parameters gs_detlevel_2D_m = gs_detlevel_2D_m
else
	gs_detlevel_2D = stDetlevel2D[max(1, min(gs_detlevel_2D_m, vardim1(stDetlevel2D)) )]
	parameters	gs_detlevel_2D = gs_detlevel_2D
endif

LOCK "rrnu"
LOCK "rth"
IF iCalculationMode = CALCMODE_NO_OF_RISERS THEN
	VALUES "nRisers" RANGE [3,]
	LOCK "treadHeight"
	PARAMETERS rrnu=nRisers

ELSE
	VALUES "treadHeight" RANGE (0,)
	nRisers=int(((Hei)/treadHeight))
	IF nRisers>3 THEN
		PARAMETERS nRisers=int(((Hei)/treadHeight))
		nRisers=int(((Hei)/treadHeight))
		PARAMETERS rrnu=nRisers
	ELSE
		rrnu=int(((Hei)/treadHeight))
		PARAMETERS rrnu=int(((Hei)/treadHeight))
		PARAMETERS nRisers=3
		nRisers=3
ENDIF
LOCK "nRisers"

ENDIF

PARAMETERS rth=(Hei)/(nRisers)

VALUES "stairSlabThk" RANGE [0,]
VALUES "treadThickness" RANGE [0,]
VALUES "nosing" RANGE [0,]
VALUES "rightRailBalustDiam" RANGE (0,)
VALUES "rightRailHeight" RANGE (rth,)
VALUES "leftRailBalustDiam" RANGE (0,)
VALUES "leftRailHeight" RANGE (rth,)
VALUES "swelldia" RANGE (0,A)

VALUES "angle" RANGE (0,)

If gs_detlevel_2D=`Сплошная` then
lock "gs_line_type"
endif

! ====================================================================
! Rail
! ====================================================================

values "rightRailType" 	stRailTypes[1]
values "rightRailType_m"	RAIL_BALUSTRADE

if GLOB_MODPAR_NAME = "rightRailType" then
	for i = 1 to vardim1(stRailTypes)
	   if rightRailType = stRailTypes[i]	then rightRailType_m = i
	next i
	parameters rightRailType_m = rightRailType_m
else
	parameters rightRailType = stRailTypes[rightRailType_m]
endif

values "leftRailType"	stRailTypes[1]
values "leftRailType_m"	RAIL_BALUSTRADE

if GLOB_MODPAR_NAME = "leftRailType" then
	for i = 1 to vardim1(stRailTypes)
	   if leftRailType = stRailTypes[i]	then leftRailType_m = i
	next i
	parameters leftRailType_m = leftRailType_m
else
	parameters leftRailType = stRailTypes[leftRailType_m]
endif

lock "rightRailType", "rightRailType_m", "leftRailType", "leftRailType_m"

values "iShowRailingOn" 1, 2, 3, 4
if GLOB_MODPAR_NAME = "bRightRail" or GLOB_MODPAR_NAME = "bLeftRail" then
	if bRightRail then
		if bLeftRail then
			iShowRailingOn = 1
		else
			iShowRailingOn = 2
		endif
	else
		if bLeftRail then
			iShowRailingOn = 3
		else
			iShowRailingOn = 4
		endif
	endif
	parameters iShowRailingOn = iShowRailingOn
else
	if iShowRailingOn = 1 then
		bRightRail	= 1
		bLeftRail	= 1
	endif
	if iShowRailingOn = 2 then
		bRightRail	= 1
		bLeftRail	= 0
	endif
	if iShowRailingOn = 3 then
		bRightRail	= 0
		bLeftRail	= 1
	endif
	if iShowRailingOn = 4 then
		bRightRail	= 0
		bLeftRail	= 0
	endif
	parameters	bRightRail	= bRightRail,
				bLeftRail	= bLeftRail
endif

if bRightRail or NOT(bLeftRail) then
	leftRailHeight		= rightRailHeight
	leftRailBalustDiam	= rightRailBalustDiam

	parameters leftRailHeight		= leftRailHeight
	parameters leftRailBalustDiam	= leftRailBalustDiam

	lock			"leftRailHeight",
					"leftRailBalustDiam"
endif
if NOT(bLeftRail) then
	hideparameter	"leftRailType",
					"leftRailType_m",
					"leftRailHeight",
					"leftRailBalustDiam"
endif
if NOT(bRightRail) then
	rightRailHeight		= leftRailHeight
	rightRailBalustDiam	= leftRailBalustDiam

	parameters rightRailHeight		= rightRailHeight
	parameters rightRailBalustDiam	= rightRailBalustDiam

	lock			"rightRailType",
					"rightRailType_m",
					"rightRailHeight",
					"rightRailBalustDiam"

	hideparameter	"rightRailType",
					"rightRailType_m",
					"rightRailHeight",
					"rightRailBalustDiam"
endif

! ==============================================================================
! Symbolic 2D
! ==============================================================================

values "postSymbolType" stPostSymbolType
values "iPostSymbolType" 1, 2, 3, 4, 0
if GLOB_MODPAR_NAME = "postSymbolType" then
	iPostSymbolType = 1
	if postSymbolType = stPostSymbolType[2] then iPostSymbolType = 2
	if postSymbolType = stPostSymbolType[3] then iPostSymbolType = 3
	if postSymbolType = stPostSymbolType[4] then iPostSymbolType = 4
	if postSymbolType = stPostSymbolType[5] then iPostSymbolType = 0
	parameters iPostSymbolType = iPostSymbolType
else
	postSymbolType = stPostSymbolType[1]
	if iPostSymbolType = 2 then postSymbolType = stPostSymbolType[2]
	if iPostSymbolType = 3 then postSymbolType = stPostSymbolType[3]
	if iPostSymbolType = 4 then postSymbolType = stPostSymbolType[4]
	if iPostSymbolType = 0 then postSymbolType = stPostSymbolType[5]
	parameters postSymbolType = postSymbolType
endif

if NOT(bShowRailOnFloorPlan) then
	lock			"railLineType",
					"railPen",
					"bSymbolic2D",
					"postSymbolType",
					"iPostSymbolType",
					"postLineType",
					"postPen",
					"bShowRailAboveBreakLine"
	hideparameter	"railLineType",
					"railPen",
					"bSymbolic2D",
					"postSymbolType",
					"iPostSymbolType",
					"postLineType",
					"postPen",
					"bShowRailAboveBreakLine"
endif
if NOT(iPostSymbolType) then
	lock			"postLineType",
					"postPen"
	hideparameter	"postLineType",
					"postPen"
endif
if NOT(bSymbolic2D) then
	lock			"postSymbolType",
					"iPostSymbolType",
					"postLineType",
					"postPen"
	hideparameter	"postSymbolType",
					"iPostSymbolType",
					"postLineType",
					"postPen"
endif
if not(bShowRailAxis) then
	lock 			"railAxisLineType",
					"gs_RailAxisPen"
	hideparameter	"railAxisLineType",
					"gs_RailAxisPen"
endif

if iShowRailingOn = 4 then		! None
	lock			"matPost", "matHandrail"
endif

! ====================================================================
! End Of Rail
! ====================================================================

values{2} "gs_detlevel_3D_m" 	DLEV3D_DETAILED, `Детальный`,
								DLEV3D_OFF, `Откл.`

dim iPenNumber[255]
for i=1 to 255
	iPenNumber[i]=i
next i

values "gs_cont_pen"		iPenNumber
values "railPen"			iPenNumber
values "gs_RailAxisPen"		iPenNumber
values "postPen"			iPenNumber
values "gs_fill_pen"		iPenNumber
values "penLineStringer" 	iPenNumber
values "penFillStringer" 	iPenNumber
values "penLineTread" 		iPenNumber
values "penFillTread" 		iPenNumber

if gs_resol<3 then parameters gs_resol=3


IF GLOB_MODPAR_NAME = "A" 	THEN PARAMETERS B=A
IF GLOB_MODPAR_NAME = "B" 	THEN PARAMETERS A=B


! --- Connecting integer and section pencolor type parameters ---

for i = 1 to 255
	put i
next i

values "penLineStringer" use(nsp)
values "penFillStringer" use(nsp)

if GLOB_MODPAR_NAME = "penLineStringer_m" then
	if penLineStringer_m < -1 | penLineStringer_m > 255 then
		penLineStringer_m = 1
		parameters penLineStringer_m = penLineStringer_m
	endif
	parameters penLineStringer = penLineStringer_m
else
	parameters penLineStringer_m = penLineStringer
endif
if GLOB_MODPAR_NAME = "penFillStringer_m" then
	if penFillStringer_m < -1 | penFillStringer_m > 255 then
		penFillStringer_m = 1
		parameters penFillStringer_m = penFillStringer_m
	endif
	parameters penFillStringer = penFillStringer_m
else
	parameters penFillStringer_m = penFillStringer
endif

values "penLineTread" use(nsp)
values "penFillTread" get(nsp)

if GLOB_MODPAR_NAME = "penLineTread_m" then
	if penLineTread_m < 1 | penLineTread_m > 255 then
		penLineTread_m = 1
		parameters penLineTread_m = penLineTread_m
	endif
	parameters penLineTread = penLineTread_m
else
	parameters penLineTread_m = penLineTread
endif
if GLOB_MODPAR_NAME = "penFillTread_m" then
	if penFillTread_m < 1 | penFillTread_m > 255 then
		penFillTread_m = 1
		parameters penFillTread_m = penFillTread_m
	endif
	parameters penFillTread = penFillTread_m
else
	parameters penFillTread_m = penFillTread
endif


if GLOB_MODPAR_NAME = "penBackFillStringer_m" then
	if penBackFillStringer_m < -1 | penBackFillStringer_m > 255 then
		penBackFillStringer_m = 1
		parameters penBackFillStringer_m = penBackFillStringer_m
	endif
	parameters penBackFillStringer = penBackFillStringer_m
else
	parameters penBackFillStringer_m = penBackFillStringer
endif

if GLOB_MODPAR_NAME = "penBackFillTread_m" then
	if penBackFillTread_m < -1 | penBackFillTread_m > 255 then
		penBackFillTread_m = 1
		parameters penBackFillTread_m = penBackFillTread_m
	endif
	parameters penBackFillTread = penBackFillTread_m
else
	parameters penBackFillTread_m = penBackFillTread
endif


! =============================================================================
! Onorm list Settings
! =============================================================================

if LibraryLangCode = "AUT" or LibraryLangCode = "CHE" or LibraryLangCode = "GER" then
	call "Onorm_Stair" parameters all
else
	hideparameter "gs_onorm_Title", "gs_list_soundinsul"
endif

! =============================================================================
! IFC2x3 Property Set for Stairs
! =============================================================================

SPIRAL_STAIR = 11
parameters ifc_StairType 		= SPIRAL_STAIR
parameters ifc_NumberOfRiser 	= rrnu
parameters ifc_NumberOfTreads 	= numTread
parameters ifc_RiserHeight		= rth
parameters ifc_TreadLength		= PI/180 * (A + swelldia)/3 * (angle/rrnu)

