
if gs_detlevel_3D_m = 0 then END
if not(gs_shadow) then SHADOW OFF

pen gs_cont_pen

! ==============================================================================
! HOTSPOTS
! ==============================================================================
unID = 1

HOTSPOT 0,			gapToFirstTread,0,		unID,	flightWidth,1+128	: unID=unID+1
HOTSPOT -0.1,		gapToFirstTread,0,		unID,	flightWidth,3		: unID=unID+1
HOTSPOT flightWidth,gapToFirstTread,0,		unID,	flightWidth,2		: unID=unID+1

HOTSPOT a,			0,				0,		unID,	a,			1+128	: unID=unID+1
HOTSPOT a+0.1,		0,				0,		unID,	a,			3		: unID=unID+1
HOTSPOT 0,			0,				0,		unID,	a,			2		: unID=unID+1

HOTSPOT a,			0,				zzyzx,	unID,	b,			1+128	: unID=unID+1
HOTSPOT a,			-0.1,			zzyzx,	unID,	b,			3		: unID=unID+1
HOTSPOT a,			b,				zzyzx,	unID,	b,			2		: unID=unID+1

HOTSPOT 0,			b,				0,		unID,	b,			1+128	: unID=unID+1
HOTSPOT 0,			b+0.1,			0,		unID,	b,			3		: unID=unID+1
HOTSPOT 0,			0,				0,		unID,	b,			2		: unID=unID+1

HOTSPOT flightWidth+nRisers2ndRun*treadDepth,	b,				nRisers*treadHeight,unID,flightWidth,1+128	: unID=unID+1
HOTSPOT flightWidth+nRisers2ndRun*treadDepth,	b+0.1,			nRisers*treadHeight,unID,flightWidth,3		: unID=unID+1
HOTSPOT flightWidth+nRisers2ndRun*treadDepth,	b-flightWidth,	nRisers*treadHeight,unID,flightWidth,2		: unID=unID+1

HOTSPOT 0,			0,		nRisers1stRun*treadHeight,	unID,	b,	1+128	: unID=unID+1
HOTSPOT 0,			-0.1,	nRisers1stRun*treadHeight,	unID,	b,	3		: unID=unID+1
HOTSPOT 0,			b,		nRisers1stRun*treadHeight,	unID,	b,	2		: unID=unID+1

HOTSPOT a,			b,		nRisers1stRun*treadHeight,	unID,	a,	1+128	: unID=unID+1
HOTSPOT a+0.1,		b,		nRisers1stRun*treadHeight,	unID,	a,	3		: unID=unID+1
HOTSPOT 0,			b,		nRisers1stRun*treadHeight,	unID,	a,	2		: unID=unID+1

HOTSPOT a,	b,	0,		unID,	zzyzx,1+128	: unID=unID+1
HOTSPOT a,	b,	-0.1,	unID,	zzyzx,3		: unID=unID+1
HOTSPOT a,	b,	zzyzx,	unID,	zzyzx,2		: unID=unID+1

! ==============================================================================
! Concrete Base
! ==============================================================================

addy gapToFirstTread

if stairBaseType_m = 1 | stairBaseType_m = 3 THEN	! Concrete, None
	MATERIAL matBase
	SECT_FILL typeFillStringer, penBackFillStringer, penFillStringer, penLineStringer

	ROTx 90
	ROTy 90

	IF stairBaseType_m = 1 THEN		! Concrete
		PUT riserCoverThk,0,15
		FOR i=1 to nRisers1stRun-1
			PUT (i-1)*treadDepth+riserCoverThk,i*treadHeight-treadThickness,15,
				(i)*treadDepth+riserCoverThk,i*treadHeight-treadThickness,15
		NEXT i

		PUT (nRisers1stRun-1)*treadDepth+riserCoverThk,(nRisers1stRun-1)*treadHeight-treadThickness,10,
			(nRisers1stRun-1)*treadDepth+riserCoverThk,(nRisers1stRun)*treadHeight-treadThickness-stairSlabThk,8,
			nRisers1stRun*treadDepth+stairSlabThk*tan(ang/2),nRisers1stRun*treadHeight-treadThickness-stairSlabThk,15,
			(treadThickness+stairSlabThk)/sin(ang),0,15

		PRISM_ nsp/3,flightWidth,
			get(nsp)
	ENDIF

	IF ABS(riserCoverThk)>0.001 THEN
		FOR t=1 to nRisers1stRun
		ADD (t-1)*treadDepth,(t-1)*treadHeight,0
		MATERIAL matRiser
		SECT_FILL typeFillRiser, penBackFillRiser, penFillRiser, penLineRiser

		prism_ 4,flightWidth,
			0,0,15,
			riserCoverThk,0,15,
			riserCoverThk,treadHeight-treadThickness,15,
			0,treadHeight-treadThickness,15
		DEL 1
		Next t
		MATERIAL matBase
	ENDIF

	DEL 2

	! --- LANDING --------------------------------------------------------------
	IF stairBaseType_m = 1 THEN		! Concrete
		ADD 0,(nRisers1stRun-1)*treadDepth,(nRisers1stRun)*treadHeight-treadThickness-stairSlabThk
		SECT_FILL typeFillStringer, penBackFillStringer, penFillStringer, penLineStringer

		PRISM_ 6,stairSlabThk-treadHeight,
			0,riserCoverThk,8,
			flightWidth,riserCoverThk,8,
			flightWidth,stairSlabThk*tan(ang/2)+treadDepth,9,
			flightWidth,flightWidth,9,
			riserCoverThk,flightWidth,11,
			0,stairSlabThk*tan(ang/2)+treadDepth,8
		ADDz stairSlabThk-treadHeight
		PRISM_ 4,treadHeight,
			0,riserCoverThk,14,
			flightWidth,riserCoverThk,14,
			flightWidth,flightWidth,12,
			0,flightWidth,14
		DEL 2
	ENDIF

	! --- 2nd RUN --------------------------------------------------------------

	ADD flightWidth,(nRisers1stRun-1)*treadDepth,nRisers1stRun*treadHeight-treadThickness
	ROTx 90
	ADDz -flightWidth

	IF stairBaseType_m = 1 THEN		! Concrete
		PUT 0,-stairSlabThk,8,
			0,0,15,
			riserCoverThk,0,15

		covthicky_t=riserCoverThk
		FOR i=1 TO nRisers2ndRun-1
			PUT (i-1)*treadDepth+covthicky_t,i*treadHeight,15,
				(i)*treadDepth+covthicky_t,i*treadHeight,15
		NEXT i

		PUT (i-1)*treadDepth+covthicky_t,i*treadHeight,15,
			(i)*treadDepth,i*treadHeight,15

		PUT (nRisers2ndRun)*treadDepth,(nRisers2ndRun)*treadHeight-treadThickness-stairSlabThk,8,
			nRisers2ndRun*treadDepth,nRisers2ndRun*treadHeight-treadThickness-stairSlabThk,15

		PRISM_ nsp/3,flightWidth,
			get(nsp)
	ENDIF

	IF ABS(riserCoverThk)>0.001 THEN
		FOR t=1 to nRisers2ndRun
		ADD (t-1)*treadDepth,(t-1)*treadHeight+treadThickness,0
		MATERIAL matRiser
		SECT_FILL typeFillRiser, penBackFillRiser, penFillRiser, penLineRiser

		prism_ 4,flightWidth,
			0,0,15,
			riserCoverThk,0,15,
			riserCoverThk,treadHeight-treadThickness,15,
			0,treadHeight-treadThickness,15
		DEL 1
		Next t
		MATERIAL matBase
	ENDIF

	DEL 3
ENDIF

! ==============================================================================
! Wood Base
! ==============================================================================

IF stairBaseType_m = 2 THEN		! Wood
	MATERIAL matBase
	SECT_FILL typeFillStringer, penBackFillStringer, penFillStringer, penLineStringer

	ROTx 90
	ROTy 90

	PUT 0,0,15
	FOR i=1 to nRisers1stRun-1
		PUT (i-1)*treadDepth+riserCoverThk,i*treadHeight-treadThickness,15,
			(i)*treadDepth+riserCoverThk,i*treadHeight-treadThickness,15
	NEXT i

	PUT (nRisers1stRun-1)*treadDepth+riserCoverThk,(nRisers1stRun-1)*treadHeight-treadThickness,10,
		(nRisers1stRun-1)*treadDepth+riserCoverThk,(nRisers1stRun)*treadHeight-treadThickness-stairSlabThk,8,
		nRisers1stRun*treadDepth+stairSlabThk*tan(ang/2),nRisers1stRun*treadHeight-treadThickness-stairSlabThk,15,
		(treadThickness+stairSlabThk)/sin(ang),0,15

	ADDz woodBaseOffset
	PRISM_ nsp/3,woodBaseThk,
		use(nsp)
	DEL 1

	ADDz flightWidth-woodBaseOffset-woodBaseThk
	PRISM_ nsp/3,woodBaseThk,
		get(nsp)
	DEL 1

	IF ABS(riserCoverThk)>0.001 THEN
		FOR t=1 to nRisers1stRun
		ADD (t-1)*treadDepth,(t-1)*treadHeight,0
		MATERIAL matRiser
		SECT_FILL typeFillRiser, penBackFillRiser, penFillRiser, penLineRiser

		prism_ 4,flightWidth,
			0,0,15,
			riserCoverThk,0,15,
			riserCoverThk,treadHeight-treadThickness,15,
			0,treadHeight-treadThickness,15
		DEL 1
		Next t
		MATERIAL matBase
	ENDIF

	DEL 2

	! --- LANDING --------------------------------------------------------------

	SECT_FILL typeFillStringer, penBackFillStringer, penFillStringer, penLineStringer

	ADD 0,(nRisers1stRun-1)*treadDepth,(nRisers1stRun)*treadHeight-treadThickness-stairSlabThk
	PRISM_ 6,stairSlabThk-treadHeight,
		woodBaseOffset,0,8,
		woodBaseOffset+woodBaseThk,0,8,
		woodBaseOffset+woodBaseThk,stairSlabThk*tan(ang/2)+treadDepth,9,
		woodBaseOffset+woodBaseThk,flightWidth,11,
		woodBaseOffset,flightWidth,11,
		woodBaseOffset,stairSlabThk*tan(ang/2)+treadDepth,8

	PRISM_ 6,stairSlabThk-treadHeight,
		flightWidth-woodBaseOffset-woodBaseThk,0,8,
		flightWidth-woodBaseOffset,0,8,
		flightWidth-woodBaseOffset,stairSlabThk*tan(ang/2)+treadDepth,9,
		flightWidth-woodBaseOffset,flightWidth,11,
		flightWidth-woodBaseOffset-woodBaseThk,flightWidth,11,
		flightWidth-woodBaseOffset-woodBaseThk,stairSlabThk*tan(ang/2)+treadDepth,8

	ADDz stairSlabThk-treadHeight
	PRISM_ 4,treadHeight,
		woodBaseOffset,+riserCoverThk,14,
		woodBaseOffset+woodBaseThk,+riserCoverThk,14,
		woodBaseOffset+woodBaseThk,flightWidth,14,
		woodBaseOffset,flightWidth,14

	PRISM_ 4,treadHeight,
		flightWidth-woodBaseOffset-woodBaseThk,+riserCoverThk,14,
		flightWidth-woodBaseOffset,+riserCoverThk,14,
		flightWidth-woodBaseOffset,flightWidth,14,
		flightWidth-woodBaseOffset-woodBaseThk,flightWidth,14

	DEL 2

	! --- 2nd RUN --------------------------------------------------------------

	ADD flightWidth,(nRisers1stRun-1)*treadDepth,nRisers1stRun*treadHeight-treadThickness
	ROTx 90
	ADDz -flightWidth

	PUT 0,-stairSlabThk,15,
		-woodBaseOffset,-stairSlabThk,15,
		-woodBaseOffset,0,15,
		0,0,15

	covthicky_t=riserCoverThk
	FOR i=1 TO nRisers2ndRun-1
		PUT (i-1)*treadDepth+covthicky_t,i*treadHeight,15,
			(i)*treadDepth+covthicky_t,i*treadHeight,15
	NEXT i
	PUT (i-1)*treadDepth+covthicky_t,i*treadHeight,15,
		(i)*treadDepth,i*treadHeight,15

	PUT (nRisers2ndRun)*treadDepth,(nRisers2ndRun)*treadHeight-treadThickness-stairSlabThk,8,
		nRisers2ndRun*treadDepth,nRisers2ndRun*treadHeight-treadThickness-stairSlabThk,15

	ADDz woodBaseOffset
	PRISM_ nsp/3,woodBaseThk,
		use(nsp)
	DEL 1
	ADDz flightWidth-woodBaseOffset-woodBaseThk
	PRISM_ nsp/3,woodBaseThk,
		get(nsp)
	DEL 1

	IF ABS(riserCoverThk)>0.001 THEN
		FOR t=1 to nRisers2ndRun
		ADD (t-1)*treadDepth,(t-1)*treadHeight+treadThickness,0
		MATERIAL matRiser
		SECT_FILL typeFillRiser, penBackFillRiser, penFillRiser, penLineRiser

		prism_ 4,flightWidth,
			0,0,15,
			riserCoverThk,0,15,
			riserCoverThk,treadHeight-treadThickness,15,
			0,treadHeight-treadThickness,15
		DEL 1
		Next t
		MATERIAL matBase
	ENDIF

	DEL 3
ENDIF


! ==============================================================================
! Treads
! ==============================================================================

SECT_FILL typeFillTread, penBackFillTread, penFillTread, penLineTread
MATERIAL matTread

if treadThickness > EPS then
	! --- 1st run --------------------------------------------------------------
	for i = 1 to nRisers1stRun-1
		ADD 0,-nosing+(i-1)*treadDepth,(i*treadHeight)-treadThickness
		base
		BLOCK flightWidth,treadDepth+nosing+riserCoverThk,treadThickness
		vert 0, 0, 0 !#1
		vert 1, 0, 0 !#2
		vert 0, 1, 0 !#3
		vert 0, 0, 1 !#4
		coor 2, -1, -2,-3, -4
		body -1

		DEL 1
	next i

	! --- treads on Landing ----------------------------------------------------

	ADD 0,-nosing+(nRisers1stRun-1)*treadDepth,nRisers1stRun*treadHeight-treadThickness
	base
	BLOCK flightWidth+riserCoverThk,flightWidth+nosing,treadThickness
	vert 0, 0, 0 !#1
	vert 1, 0, 0 !#2
	vert 0, 1, 0 !#3
	vert 0, 0, 1 !#4
	coor 2, -1, -2,-3, -4
	body -1
	DEL 1

	! --- 2nd run --------------------------------------------------------------

	ADD flightWidth,b-gapToFirstTread,(nRisers1stRun)*treadHeight-treadThickness
	ROTz -90
	covthicky_t=riserCoverThk
	for i = 1 to nRisers2ndRun
		if i = nRisers2ndRun then covthicky_t=0
		ADD 0,-nosing+(i-1)*treadDepth,(i*treadHeight)
		base
		BLOCK flightWidth,treadDepth+nosing+covthicky_t,treadThickness
		vert 0, 0, 0 !#1
		vert 1, 0, 0 !#2
		vert 0, 1, 0 !#3
		vert 0, 0, 1 !#4
		coor 2, -1, -2,-3, -4
		body -1
		del 1
	next i
	del 2
ENDIF


! ==============================================================================
! HANDRAILS
! ==============================================================================

material matPost

! ------------------------------------------------------------------------------
! Left rail
! ------------------------------------------------------------------------------

IF rail_m = 3 | rail_m = 1 then		! Left, Both
	if bSameRails then
		leftRailType_m = rightRailType_m
		leftWireType_m = rightWireType_m
	endif

	ADD leftRailOffset+leftRailFrameThk/2,-leftRailOvhgBottom,-leftRailOvhgBottom*tan(ang)+treadHeight
	ROTz 90

	lraSimple=(nRisers1stRun-1)*treadDepth+leftRailOvhgBottom
	lraComplex=(nRisers1stRun-2)*treadDepth
	additionXComplex=leftRailOvhgBottom+treadDepth/2
	additionZComplex=leftRailOvhgBottom*tan(ang)
	hrovL=treadDepth/2+leftRailOvhgBottom
	hrovR=treadDepth/2
	postNumber = int(nRisers1stRun/2+EPS)
	railAngle	= ang
	side = SIDE_LEFT
	gosub "callRailsForStair"

	DEL 2


	! --- POST & Rail on the landing (left side_1) -----------------------------

	ADD leftRailOffset+leftRailFrameThk/2,(nRisers1stRun-1)*treadDepth,(nRisers1stRun)*treadHeight
	ROTz 90

	lraSimple=flightWidth-leftRailOffset-leftRailFrameThk
	lraComplex=flightWidth-leftRailOffset-leftRailFrameThk
	hrovL=leftRailPostSize/2
	hrovR=-leftRailPostSize/2
	postNumber = (flightWidth-leftRailOffset-leftRailFrameThk)*2 + 1
	side = SIDE_LEFT
	railAngle	= ang
	gosub "callRailsForLanding"

	DEL 2


	! --- POST & Rail on the landing (left side_2) -----------------------------

	ADD leftRailOffset,b-leftRailOffset-leftRailFrameThk/2-gapToFirstTread,(nRisers1stRun)*treadHeight

	lraSimple=flightWidth-leftRailOffset-treadDepth
	lraComplex=flightWidth-leftRailOffset-treadDepth-leftRailPostSize
	hrovL=leftRailPostSize/2
	hrovR=leftRailPostSize/2
	postNumber = (flightWidth-leftRailOffset-treadDepth)*2 + 1
	side = SIDE_LEFT
	railAngle	= ang
	gosub "callRailsForLanding"

	DEL 1


	! ---  Rail on 2nd Run -----------------------------------------------------

	ADD flightWidth-treadDepth,b-leftRailOffset-leftRailFrameThk/2-gapToFirstTread,(nRisers1stRun)*treadHeight

	lraSimple=(nRisers2ndRun+1)*treadDepth+leftRailOvhgTop
	lraComplex=(nRisers2ndRun)*treadDepth
	additionXComplex=treadDepth/2
	additionZComplex=0
	hrovL=treadDepth/2
	hrovR=treadDepth/2+leftRailOvhgTop
	postNumber = int(nRisers2ndRun/2+EPS) + 1
	side = SIDE_LEFT
	railAngle	= ang
	gosub "callRailsForStair"

	DEL 1


	! ---   HOTSPOTS -----------------------------------------------------------
	if bSameRails then
		! Bottom side
		HOTSPOT rightRailFrameThk/2+rightRailOffset,0,treadHeight+rightRailDist+rightRailHeight-rightRailOvhgBottom*tan(ang),unID,rightRailOvhgBottom, 1+128		: unID=unID+1
		HOTSPOT rightRailFrameThk/2+rightRailOffset,flightWidth-rightRailFrameThk/2-rightRailOffset,treadHeight+rightRailDist+rightRailHeight-rightRailOvhgBottom*tan(ang),unID,rightRailOvhgBottom, 3		: unID=unID+1
		HOTSPOT rightRailFrameThk/2+rightRailOffset,-rightRailOvhgBottom,treadHeight+rightRailDist+rightRailHeight-rightRailOvhgBottom*tan(ang),unID,rightRailOvhgBottom, 2		: unID=unID+1

		HOTSPOT rightRailFrameThk/2,-rightRailOvhgBottom,treadHeight+rightRailDist-rightRailOvhgBottom*tan(ang),unID,rightRailOffset, 1+128		: unID=unID+1
		HOTSPOT rightRailFrameThk/2+0.1,-rightRailOvhgBottom,treadHeight+rightRailDist-rightRailOvhgBottom*tan(ang),unID,rightRailOffset, 3		: unID=unID+1
		HOTSPOT rightRailFrameThk/2+rightRailOffset,-rightRailOvhgBottom,treadHeight+rightRailDist-rightRailOvhgBottom*tan(ang),unID,rightRailOffset, 2		: unID=unID+1

		HOTSPOT rightRailFrameThk/2+rightRailOffset,-rightRailOvhgBottom,treadHeight-rightRailOvhgBottom*tan(ang),unID,rightRailDist, 1+128		: unID=unID+1
		HOTSPOT rightRailFrameThk/2+rightRailOffset,-rightRailOvhgBottom,treadHeight-0.1-rightRailOvhgBottom*tan(ang),unID,rightRailDist, 3		: unID=unID+1
		HOTSPOT rightRailFrameThk/2+rightRailOffset,-rightRailOvhgBottom,treadHeight+rightRailDist-rightRailOvhgBottom*tan(ang),unID,rightRailDist, 2		: unID=unID+1

		HOTSPOT rightRailFrameThk/2+rightRailOffset,-rightRailOvhgBottom,treadHeight-rightRailOvhgBottom*tan(ang)+rightRailDist,unID,rightRailHeight, 1+128		: unID=unID+1
		HOTSPOT rightRailFrameThk/2+rightRailOffset,-rightRailOvhgBottom,treadHeight-rightRailOvhgBottom*tan(ang)+rightRailDist-0.1,unID,rightRailHeight, 3		: unID=unID+1
		HOTSPOT rightRailFrameThk/2+rightRailOffset,-rightRailOvhgBottom,treadHeight-rightRailOvhgBottom*tan(ang)+rightRailDist+rightRailHeight,unID,rightRailHeight, 2	: unID=unID+1

		! Top side
		HOTSPOT flightWidth+nRisers2ndRun*treadDepth,b-gapToFirstTread-rightRailFrameThk/2-rightRailOffset,(nRisers+1)*treadHeight+rightRailOvhgTop*tan(ang)+rightRailHeight+rightRailDist,unID,rightRailOvhgTop, 1+128			: unID=unID+1
		HOTSPOT flightWidth+nRisers2ndRun*treadDepth-0.1,b-gapToFirstTread-rightRailFrameThk/2-rightRailOffset,(nRisers+1)*treadHeight+rightRailOvhgTop*tan(ang)+rightRailHeight+rightRailDist,unID,rightRailOvhgTop, 3			: unID=unID+1
		HOTSPOT flightWidth+nRisers2ndRun*treadDepth+rightRailOvhgTop,b-gapToFirstTread-rightRailFrameThk/2-rightRailOffset,(nRisers+1)*treadHeight+rightRailOvhgTop*tan(ang)+rightRailHeight+rightRailDist,unID,rightRailOvhgTop, 2			: unID=unID+1

		HOTSPOT flightWidth+nRisers2ndRun*treadDepth+rightRailOvhgTop,b-gapToFirstTread-rightRailFrameThk/2,(nRisers+1)*treadHeight+rightRailDist+rightRailOvhgTop*tan(ang),unID,rightRailOffset, 1+128		: unID=unID+1
		HOTSPOT flightWidth+nRisers2ndRun*treadDepth+rightRailOvhgTop,b-gapToFirstTread-rightRailFrameThk/2-0.1,(nRisers+1)*treadHeight+rightRailDist+rightRailOvhgTop*tan(ang),unID,rightRailOffset, 3		: unID=unID+1
		HOTSPOT flightWidth+nRisers2ndRun*treadDepth+rightRailOvhgTop,b-gapToFirstTread-rightRailFrameThk/2-rightRailOffset,(nRisers+1)*treadHeight+rightRailDist+rightRailOvhgTop*tan(ang),unID,rightRailOffset, 2		: unID=unID+1

		HOTSPOT flightWidth+nRisers2ndRun*treadDepth+rightRailOvhgTop,b-gapToFirstTread-rightRailFrameThk/2-rightRailOffset,(nRisers+1)*treadHeight+(rightRailOvhgTop)*tan(ang),unID,rightRailDist, 1+128		: unID=unID+1
		HOTSPOT flightWidth+nRisers2ndRun*treadDepth+rightRailOvhgTop,b-gapToFirstTread-rightRailFrameThk/2-rightRailOffset,(nRisers+1)*treadHeight+(rightRailOvhgTop)*tan(ang)-0.1,unID,rightRailDist, 3		: unID=unID+1
		HOTSPOT flightWidth+nRisers2ndRun*treadDepth+rightRailOvhgTop,b-gapToFirstTread-rightRailFrameThk/2-rightRailOffset,(nRisers+1)*treadHeight+(rightRailOvhgTop)*tan(ang)+rightRailDist,unID,rightRailDist, 2		: unID=unID+1

		HOTSPOT flightWidth+nRisers2ndRun*treadDepth+rightRailOvhgTop,b-gapToFirstTread-rightRailFrameThk/2-rightRailOffset,(nRisers+1)*treadHeight+rightRailOvhgTop*tan(ang)+rightRailDist,unID,rightRailHeight, 1+128			: unID=unID+1
		HOTSPOT flightWidth+nRisers2ndRun*treadDepth+rightRailOvhgTop,b-gapToFirstTread-rightRailFrameThk/2-rightRailOffset,(nRisers+1)*treadHeight+rightRailOvhgTop*tan(ang)+rightRailDist-0.1,unID,rightRailHeight, 3			: unID=unID+1
		HOTSPOT flightWidth+nRisers2ndRun*treadDepth+rightRailOvhgTop,b-gapToFirstTread-rightRailFrameThk/2-rightRailOffset,(nRisers+1)*treadHeight+rightRailOvhgTop*tan(ang)+rightRailHeight+rightRailDist,unID,rightRailHeight, 2			: unID=unID+1
	else
		! Bottom side
		HOTSPOT leftRailFrameThk/2+leftRailOffset,0,treadHeight+leftRailDist+leftRailHeight-leftRailOvhgBottom*tan(ang),unID,leftRailOvhgBottom, 1+128		: unID=unID+1
		HOTSPOT leftRailFrameThk/2+leftRailOffset,flightWidth-leftRailFrameThk/2-leftRailOffset,treadHeight+leftRailDist+leftRailHeight-leftRailOvhgBottom*tan(ang),unID,leftRailOvhgBottom, 3		: unID=unID+1
		HOTSPOT leftRailFrameThk/2+leftRailOffset,-leftRailOvhgBottom,treadHeight+leftRailDist+leftRailHeight-leftRailOvhgBottom*tan(ang),unID,leftRailOvhgBottom, 2		: unID=unID+1

		HOTSPOT leftRailFrameThk/2,-leftRailOvhgBottom,treadHeight+leftRailDist-leftRailOvhgBottom*tan(ang),unID,leftRailOffset, 1+128		: unID=unID+1
		HOTSPOT leftRailFrameThk/2+0.1,-leftRailOvhgBottom,treadHeight+leftRailDist-leftRailOvhgBottom*tan(ang),unID,leftRailOffset, 3		: unID=unID+1
		HOTSPOT leftRailFrameThk/2+leftRailOffset,-leftRailOvhgBottom,treadHeight+leftRailDist-leftRailOvhgBottom*tan(ang),unID,leftRailOffset, 2		: unID=unID+1

		HOTSPOT leftRailFrameThk/2+leftRailOffset,-leftRailOvhgBottom,treadHeight-leftRailOvhgBottom*tan(ang),unID,leftRailDist, 1+128		: unID=unID+1
		HOTSPOT leftRailFrameThk/2+leftRailOffset,-leftRailOvhgBottom,treadHeight-0.1-leftRailOvhgBottom*tan(ang),unID,leftRailDist, 3		: unID=unID+1
		HOTSPOT leftRailFrameThk/2+leftRailOffset,-leftRailOvhgBottom,treadHeight+leftRailDist-leftRailOvhgBottom*tan(ang),unID,leftRailDist, 2		: unID=unID+1

		HOTSPOT leftRailFrameThk/2+leftRailOffset,-leftRailOvhgBottom,treadHeight-leftRailOvhgBottom*tan(ang)+leftRailDist,unID,leftRailHeight, 1+128		: unID=unID+1
		HOTSPOT leftRailFrameThk/2+leftRailOffset,-leftRailOvhgBottom,treadHeight-leftRailOvhgBottom*tan(ang)+leftRailDist-0.1,unID,leftRailHeight, 3		: unID=unID+1
		HOTSPOT leftRailFrameThk/2+leftRailOffset,-leftRailOvhgBottom,treadHeight-leftRailOvhgBottom*tan(ang)+leftRailDist+leftRailHeight,unID,leftRailHeight, 2	: unID=unID+1

		! Top side
		HOTSPOT flightWidth+nRisers2ndRun*treadDepth,b-gapToFirstTread-leftRailFrameThk/2-leftRailOffset,(nRisers+1)*treadHeight+leftRailOvhgTop*tan(ang)+leftRailHeight+leftRailDist,unID,leftRailOvhgTop, 1+128			: unID=unID+1
		HOTSPOT flightWidth+nRisers2ndRun*treadDepth-0.1,b-gapToFirstTread-leftRailFrameThk/2-leftRailOffset,(nRisers+1)*treadHeight+leftRailOvhgTop*tan(ang)+leftRailHeight+leftRailDist,unID,leftRailOvhgTop, 3			: unID=unID+1
		HOTSPOT flightWidth+nRisers2ndRun*treadDepth+leftRailOvhgTop,b-gapToFirstTread-leftRailFrameThk/2-leftRailOffset,(nRisers+1)*treadHeight+leftRailOvhgTop*tan(ang)+leftRailHeight+leftRailDist,unID,leftRailOvhgTop, 2			: unID=unID+1

		HOTSPOT flightWidth+nRisers2ndRun*treadDepth+leftRailOvhgTop,b-gapToFirstTread-leftRailFrameThk/2,(nRisers+1)*treadHeight+leftRailDist+leftRailOvhgTop*tan(ang),unID,leftRailOffset, 1+128		: unID=unID+1
		HOTSPOT flightWidth+nRisers2ndRun*treadDepth+leftRailOvhgTop,b-gapToFirstTread-leftRailFrameThk/2-0.1,(nRisers+1)*treadHeight+leftRailDist+leftRailOvhgTop*tan(ang),unID,leftRailOffset, 3		: unID=unID+1
		HOTSPOT flightWidth+nRisers2ndRun*treadDepth+leftRailOvhgTop,b-gapToFirstTread-leftRailFrameThk/2-leftRailOffset,(nRisers+1)*treadHeight+leftRailDist+leftRailOvhgTop*tan(ang),unID,leftRailOffset, 2		: unID=unID+1

		HOTSPOT flightWidth+nRisers2ndRun*treadDepth+leftRailOvhgTop,b-gapToFirstTread-leftRailFrameThk/2-leftRailOffset,(nRisers+1)*treadHeight+(leftRailOvhgTop)*tan(ang),unID,leftRailDist, 1+128		: unID=unID+1
		HOTSPOT flightWidth+nRisers2ndRun*treadDepth+leftRailOvhgTop,b-gapToFirstTread-leftRailFrameThk/2-leftRailOffset,(nRisers+1)*treadHeight+(leftRailOvhgTop)*tan(ang)-0.1,unID,leftRailDist, 3		: unID=unID+1
		HOTSPOT flightWidth+nRisers2ndRun*treadDepth+leftRailOvhgTop,b-gapToFirstTread-leftRailFrameThk/2-leftRailOffset,(nRisers+1)*treadHeight+(leftRailOvhgTop)*tan(ang)+leftRailDist,unID,leftRailDist, 2		: unID=unID+1

		HOTSPOT flightWidth+nRisers2ndRun*treadDepth+leftRailOvhgTop,b-gapToFirstTread-leftRailFrameThk/2-leftRailOffset,(nRisers+1)*treadHeight+leftRailOvhgTop*tan(ang)+leftRailDist,unID,leftRailHeight, 1+128			: unID=unID+1
		HOTSPOT flightWidth+nRisers2ndRun*treadDepth+leftRailOvhgTop,b-gapToFirstTread-leftRailFrameThk/2-leftRailOffset,(nRisers+1)*treadHeight+leftRailOvhgTop*tan(ang)+leftRailDist-0.1,unID,leftRailHeight, 3			: unID=unID+1
		HOTSPOT flightWidth+nRisers2ndRun*treadDepth+leftRailOvhgTop,b-gapToFirstTread-leftRailFrameThk/2-leftRailOffset,(nRisers+1)*treadHeight+leftRailOvhgTop*tan(ang)+leftRailHeight+leftRailDist,unID,leftRailHeight, 2			: unID=unID+1
	endif
ENDIF


! ------------------------------------------------------------------------------
! Right rail
! ------------------------------------------------------------------------------

IF rail_m = 2 | rail_m = 1 then		! Right, Both

	ADD flightWidth-rightRailOffset-rightRailFrameThk/2,-rightRailOvhgBottom,-rightRailOvhgBottom*tan(ang)+treadHeight
	ROTz 90

	lraSimple=(nRisers1stRun-1)*treadDepth+rightRailOvhgBottom+min(0,rightRailOffset)
	lraComplex=(nRisers1stRun-2)*treadDepth+min(0,rightRailOffset)
	additionXComplex=rightRailOvhgBottom+treadDepth/2
	additionZComplex=rightRailOvhgBottom*tan(ang)
	hrovL=treadDepth/2+rightRailOvhgBottom
	hrovR=treadDepth/2
	postNumber = int(nRisers1stRun/2+EPS)
	railAngle	= ang
	side = SIDE_RIGHT
	gosub "callRailsForStair"

	DEL 2

	! --- POST & Rail on the landing (right side_1) ----------------------------

	IF rightRailOffset<rightRailFrameThk then
		ADD flightWidth-rightRailFrameThk-rightRailOffset,(nRisers1stRun-1)*treadDepth+rightRailOffset,(nRisers1stRun)*treadHeight+min(0,rightRailOffset*tan(ang))
		MATERIAL matPost
		BLOCK rightRailFrameThk,rightRailFrameThk,rightRailHeight+2*treadDepth*tan(ang)-min(rightRailOffset*tan(ang),treadHeight)-min(0,rightRailOffset*tan(ang))
		DEL 1
	ENDIF

	IF rightRailOffset>0.05 THEN
		IF rightRailOffset<0.2 THEN
			IF rightRailType_m = 3 | rightRailType_m = 7 | rightRailType_m = 8 | rightRailType_m = 9 | rightRailType_m = 10 THEN
				hight=rightRailFrameThk
				if rightRailType_m = 3 then hight=0.025
				ADD flightWidth-rightRailOffset,(nRisers1stRun-1)*treadDepth,(nRisers1stRun)*treadHeight+rightRailHeight+rightRailDist-hight
				ROTz 90
				MATERIAL matHandrail
				BLOCK rightRailOffset,rightRailFrameThk,hight
				DEL 2
			ELSE
				IF rightRailType_m = 2 THEN
					ADD flightWidth-rightRailOffset-rightRailFrameThk/2,(nRisers1stRun-1)*treadDepth,(nRisers1stRun)*treadHeight
					ROTz 90
					lraSimple=rightRailOffset
					lraComplex=rightRailOffset
					additionXComplex=0
					additionZComplex=0
					hrovL=0
					hrovR=0
					postNumber = int(nRisers1stRun/2+EPS)
					railAngle	= ang
					side = SIDE_RIGHT
					gosub "callRailsForStair"
					DEL 2
				ELSE
					ADD flightWidth-rightRailOffset,(nRisers1stRun-1)*treadDepth,(nRisers1stRun)*treadHeight+rightRailDist
					ROTz 90
					MATERIAL matHandrail
					BLOCK rightRailOffset,rightRailFrameThk,rightRailHeight
					DEL 2
				ENDIF
			ENDIF
		ELSE
			ADD flightWidth-rightRailOffset-rightRailFrameThk/2,(nRisers1stRun-1)*treadDepth,(nRisers1stRun)*treadHeight
			ROTz 90
			IF rightRailType_m = 1 & not(rightRailOffset>0.1) THEN
				! nothing !
			ELSE
				IF rightRailType_m = 8 | rightRailType_m = 9 | rightRailType_m = 10 THEN
					ADD 0,-rightRailFrameThk/2,rightRailDist+rightRailHeight-rightRailFrameThk
					MATERIAL matHandrail
					IF rightRailOffset>0 then BLOCK rightRailOffset,rightRailFrameThk,rightRailFrameThk
					DEL 1
				ELSE
					lraSimple=rightRailOffset
					lraComplex=rightRailOffset
					hrovL=rightRailPostSize/2
					hrovR=-rightRailPostSize/2
					postNumber = rightRailOffset*2
					railAngle	= ang
					side = SIDE_RIGHT
					gosub "callRailsForLanding"
				ENDIF
			ENDIF
			DEL 2
		ENDIF
	ENDIF

	! --- POST & Rail on the landing (right side_2) ----------------------------

	IF rightRailOffset*tan(ang)>treadHeight THEN
		IF rightRailOffset<0.2 & rightRailOffset>0.05 THEN
			IF rightRailType_m = 3 | rightRailType_m = 7 | rightRailType_m = 8 | rightRailType_m = 9 | rightRailType_m = 10 THEN
				hight=rightRailFrameThk
				if rightRailType_m = 3 then hight=0.025
				ADD flightWidth-rightRailOffset,(nRisers1stRun-1)*treadDepth+rightRailOffset,(nRisers1stRun)*treadHeight+rightRailHeight+rightRailDist-hight
				ROTz 0
				MATERIAL matHandrail
				BLOCK rightRailOffset,rightRailFrameThk,hight
				DEL 2
			ELSE
				IF rightRailType_m = 2 THEN
					ADD flightWidth-rightRailOffset-rightRailFrameThk/2,(nRisers1stRun-1)*treadDepth,(nRisers1stRun)*treadHeight
					ROTz 90
					lraSimple=rightRailOffset-treadDepth
					lraComplex=rightRailOffset-treadDepth
					additionXComplex=0
					additionZComplex=0
					hrovL=0
					hrovR=0
					postNumber = int(nRisers1stRun/2+EPS)
					railAngle	= ang
					side = SIDE_RIGHT
					gosub "callRailsForStair"
					DEL 2
				ELSE
					ADD flightWidth-rightRailOffset,(nRisers1stRun-1)*treadDepth,(nRisers1stRun)*treadHeight+rightRailDist
					ROTz 90
					MATERIAL matHandrail
					BLOCK rightRailOffset,rightRailFrameThk,rightRailHeight
					DEL 2
				ENDIF
			ENDIF
		ELSE
			ADD flightWidth-rightRailOffset,(nRisers1stRun-1)*treadDepth+rightRailOffset+rightRailFrameThk/2,(nRisers1stRun)*treadHeight
			ROTz 0
			IF rightRailOffset>treadDepth+0.08 & rightRailOffset-treadDepth>2*rightRailFrameThk+0.001 then
				IF rightRailType_m = 8 | rightRailType_m = 9 | rightRailType_m = 10 THEN
					ADD 0,-rightRailFrameThk/2,rightRailDist+rightRailHeight-rightRailFrameThk
					MATERIAL matHandrail
					BLOCK rightRailOffset-treadDepth,rightRailFrameThk,rightRailFrameThk
					DEL 1
				else
					lraSimple=rightRailOffset	! rightRailOffset-treadDepth ???
					lraComplex=rightRailOffset-treadDepth
					hrovL=-rightRailPostSize/2
					hrovR=rightRailPostSize/2
					postNumber = rightRailOffset*2
					railAngle	= ang
					side = SIDE_RIGHT
					gosub "callRailsForLanding"
				ENDIF
			ENDIF
			DEL 2
		ENDIF
	ENDIF


	! --- Railing on the 2nd run -----------------------------------------------

	ADD flightWidth-min(rightRailOffset,treadDepth),(nRisers1stRun-1)*treadDepth+rightRailFrameThk/2+rightRailOffset,(nRisers1stRun+1)*treadHeight-min(rightRailOffset,treadDepth)*tan(ang)
	ROTz 0

	lraSimple=(nRisers2ndRun)*treadDepth+min(rightRailOffset,treadDepth)+rightRailOvhgTop
	lraComplex=(nRisers2ndRun-1)*treadDepth
	additionXComplex=treadDepth/2+min(rightRailOffset,treadDepth)
	additionZComplex=min(rightRailOffset*tan(ang),treadHeight)
	hrovL=treadDepth/2+min(rightRailOffset,treadDepth)
	hrovR=treadDepth/2+rightRailOvhgTop
	postNumber = int(nRisers2ndRun/2+EPS) + 1
	railAngle	= ang
	side = SIDE_RIGHT
	gosub "callRailsForStair"

	DEL 2


	! --- HOTSPOTS -------------------------------------------------------------

	! Bottom side
	HOTSPOT flightWidth-rightRailFrameThk/2-rightRailOffset,0,treadHeight+rightRailDist+rightRailHeight-rightRailOvhgBottom*tan(ang),unID,rightRailOvhgBottom, 1+128		: unID=unID+1
	HOTSPOT flightWidth-rightRailFrameThk/2-rightRailOffset,0+0.1,treadHeight+rightRailDist+rightRailHeight-rightRailOvhgBottom*tan(ang),unID,rightRailOvhgBottom, 3		: unID=unID+1
	HOTSPOT flightWidth-rightRailFrameThk/2-rightRailOffset,0-rightRailOvhgBottom,treadHeight+rightRailDist+rightRailHeight-rightRailOvhgBottom*tan(ang),unID,rightRailOvhgBottom, 2		: unID=unID+1

	HOTSPOT flightWidth-rightRailFrameThk/2,0-rightRailOvhgBottom,treadHeight+rightRailDist-rightRailOvhgBottom*tan(ang),unID,rightRailOffset, 1+128		: unID=unID+1
	HOTSPOT flightWidth-rightRailFrameThk/2-0.1,0-rightRailOvhgBottom,treadHeight+rightRailDist-rightRailOvhgBottom*tan(ang),unID,rightRailOffset, 3		: unID=unID+1
	HOTSPOT flightWidth-rightRailFrameThk/2-rightRailOffset,0-rightRailOvhgBottom,treadHeight+rightRailDist-rightRailOvhgBottom*tan(ang),unID,rightRailOffset, 2		: unID=unID+1

	HOTSPOT flightWidth-rightRailFrameThk/2-rightRailOffset,0-rightRailOvhgBottom,treadHeight-rightRailOvhgBottom*tan(ang),unID,rightRailDist, 1+128		: unID=unID+1
	HOTSPOT flightWidth-rightRailFrameThk/2-rightRailOffset,0-rightRailOvhgBottom,treadHeight-0.1-rightRailOvhgBottom*tan(ang),unID,rightRailDist, 3		: unID=unID+1
	HOTSPOT flightWidth-rightRailFrameThk/2-rightRailOffset,0-rightRailOvhgBottom,treadHeight+rightRailDist-rightRailOvhgBottom*tan(ang),unID,rightRailDist, 2		: unID=unID+1

	HOTSPOT flightWidth-rightRailFrameThk/2-rightRailOffset,0-rightRailOvhgBottom,treadHeight-rightRailOvhgBottom*tan(ang)+rightRailDist,unID,rightRailHeight, 1+128		: unID=unID+1
	HOTSPOT flightWidth-rightRailFrameThk/2-rightRailOffset,0-rightRailOvhgBottom,treadHeight-rightRailOvhgBottom*tan(ang)+rightRailDist-0.1,unID,rightRailHeight, 3		: unID=unID+1
	HOTSPOT flightWidth-rightRailFrameThk/2-rightRailOffset,0-rightRailOvhgBottom,treadHeight-rightRailOvhgBottom*tan(ang)+rightRailDist+rightRailHeight,unID,rightRailHeight, 2	: unID=unID+1

	! Top side
	HOTSPOT flightWidth+nRisers2ndRun*treadDepth,b-flightWidth+rightRailFrameThk/2+rightRailOffset-gapToFirstTread,(nRisers+1)*treadHeight+rightRailOvhgTop*tan(ang)+rightRailHeight+rightRailDist,unID,rightRailOvhgTop, 1+128			: unID=unID+1
	HOTSPOT flightWidth+nRisers2ndRun*treadDepth-0.1,b-flightWidth+rightRailFrameThk/2+rightRailOffset-gapToFirstTread,(nRisers+1)*treadHeight+rightRailOvhgTop*tan(ang)+rightRailHeight+rightRailDist,unID,rightRailOvhgTop, 3			: unID=unID+1
	HOTSPOT flightWidth+nRisers2ndRun*treadDepth+rightRailOvhgTop,b-flightWidth+rightRailFrameThk/2+rightRailOffset-gapToFirstTread,(nRisers+1)*treadHeight+rightRailOvhgTop*tan(ang)+rightRailHeight+rightRailDist,unID,rightRailOvhgTop, 2			: unID=unID+1

	HOTSPOT flightWidth+nRisers2ndRun*treadDepth+rightRailOvhgTop,b-flightWidth+rightRailFrameThk/2-gapToFirstTread,(nRisers+1)*treadHeight+rightRailDist+rightRailOvhgTop*tan(ang),unID,rightRailOffset, 1+128		: unID=unID+1
	HOTSPOT flightWidth+nRisers2ndRun*treadDepth+rightRailOvhgTop,b-flightWidth+rightRailFrameThk/2+0.1-gapToFirstTread,(nRisers+1)*treadHeight+rightRailDist+rightRailOvhgTop*tan(ang),unID,rightRailOffset, 3		: unID=unID+1
	HOTSPOT flightWidth+nRisers2ndRun*treadDepth+rightRailOvhgTop,b-flightWidth+rightRailFrameThk/2+rightRailOffset-gapToFirstTread,(nRisers+1)*treadHeight+rightRailDist+rightRailOvhgTop*tan(ang),unID,rightRailOffset, 2		: unID=unID+1

	HOTSPOT flightWidth+nRisers2ndRun*treadDepth+rightRailOvhgTop,b-flightWidth+rightRailFrameThk/2+rightRailOffset-gapToFirstTread,(nRisers+1)*treadHeight+(rightRailOvhgTop)*tan(ang),unID,rightRailDist, 1+128		: unID=unID+1
	HOTSPOT flightWidth+nRisers2ndRun*treadDepth+rightRailOvhgTop,b-flightWidth+rightRailFrameThk/2+rightRailOffset-gapToFirstTread,(nRisers+1)*treadHeight+(rightRailOvhgTop)*tan(ang)-0.1,unID,rightRailDist, 3		: unID=unID+1
	HOTSPOT flightWidth+nRisers2ndRun*treadDepth+rightRailOvhgTop,b-flightWidth+rightRailFrameThk/2+rightRailOffset-gapToFirstTread,(nRisers+1)*treadHeight+(rightRailOvhgTop)*tan(ang)+rightRailDist,unID,rightRailDist, 2		: unID=unID+1

	HOTSPOT flightWidth+nRisers2ndRun*treadDepth+rightRailOvhgTop,b-flightWidth+rightRailFrameThk/2+rightRailOffset-gapToFirstTread,(nRisers+1)*treadHeight+rightRailOvhgTop*tan(ang)+rightRailDist,unID,rightRailHeight, 1+128			: unID=unID+1
	HOTSPOT flightWidth+nRisers2ndRun*treadDepth+rightRailOvhgTop,b-flightWidth+rightRailFrameThk/2+rightRailOffset-gapToFirstTread,(nRisers+1)*treadHeight+rightRailOvhgTop*tan(ang)+rightRailDist-0.1,unID,rightRailHeight, 3			: unID=unID+1
	HOTSPOT flightWidth+nRisers2ndRun*treadDepth+rightRailOvhgTop,b-flightWidth+rightRailFrameThk/2+rightRailOffset-gapToFirstTread,(nRisers+1)*treadHeight+rightRailOvhgTop*tan(ang)+rightRailHeight+rightRailDist,unID,rightRailHeight, 2			: unID=unID+1

ENDIF

DEL 1


end


! ==============================================================================
"callRailsForStair":
! ------------------------------------------------------------------------------
!	lraSimple
!	lraComplex
!	additionXComplex
!	additionZComplex
!	hrovL: rail overhang start
!	hrovR: rail overhang end
!	postNumber:   number of posts
!	side: SIDE_LEFT or SIDE_RIGHT
! ==============================================================================
	ani = railAngle
	additionXComplex = additionXComplex
	additionZComplex = additionZComplex
	if side = SIDE_LEFT then
		dsComplex = leftRailDist+treadDepth/2*tan(ang)
	else
		dsComplex = rightRailDist+treadDepth/2*tan(ang)
	endif

	gosub "callRails"
return


! ==============================================================================
"callRailsForLanding":
! ------------------------------------------------------------------------------
!	lraSimple
!	lraComplex
!	hrovL: rail overhang start
!	hrovR: rail overhang end
!	postNumber:   number of posts
!	side: SIDE_LEFT or SIDE_RIGHT
! ==============================================================================
	ani = 0
	additionZComplex = 0
	if side = SIDE_LEFT then
		additionXComplex = leftRailPostSize/2
		dsComplex = leftRailDist
	else
		additionXComplex = rightRailPostSize/2
		dsComplex = rightRailDist
	endif

	gosub "callRails"
return


! ==============================================================================
"callRails":
! ------------------------------------------------------------------------------
!	ani
!	additionXComplex
!	additionZComplex
!	dsComplex
!  ------------------
!	side: SIDE_LEFT or SIDE_RIGHT
!	lraSimple
!	lraComplex
!	hrovL: rail overhang start
!	hrovR: rail overhang end
!	postNumber:   number of posts
! ==============================================================================
	if side = SIDE_LEFT then
		railBarDepth		= leftRailBarDepth
		railBarDiam			= railBarDepth
		railHeight			= leftRailHeight
		railBarFillThk		= leftRailBarThk
		railFrameThk		= leftRailFrameThk
		railDist			= leftRailDist
		railType_m			= leftRailType_m
		railPostSize		= leftRailPostSize
		barNumber			= nBarsLeftRail
		railWireType		= leftWireType_m
		if leftRailType_m = RAIL_WIRED then
			railBarThk		= leftRailWireThk
			railBarDepth	= leftRailWireDepth
			railBarDiam		= leftRailWireDiam
		endif
	else
		railBarDepth		= rightRailBarDepth
		railBarDiam			= railBarDepth
		railHeight			= rightRailHeight
		railBarFillThk		= rightRailBarThk
		railFrameThk		= rightRailFrameThk
		railDist			= rightRailDist
		railType_m			= rightRailType_m
		railPostSize		= rightRailPostSize
		barNumber			= nBarsRightRail
		railWireType		= rightWireType_m
		if rightRailType_m = RAIL_WIRED then
			railBarThk		= rightRailWireThk
			railBarDepth	= rightRailWireDepth
			railBarDiam		= rightRailWireDiam
		endif
	endif

	call "stairRails_m" parameters	railType_m				= railType_m,
									iStairType				= 1,
									bEnableWired02Rail		= 0,
									bEnableNonVerticalRail	= 0,
									additionXComplex		= additionXComplex,
									additionZComplex		= additionZComplex,
									ptyp_m					= 1,
									ani						= ani,
									ab						= 0,
									rb						= 0,
									rom_m					= 1,
									rmm_m					= 1,
									lraSimple				= lraSimple,
									lraComplex				= lraComplex,
									railHeight				= railHeight,
									railHeightComplex		= dsComplex,
									railDist				= railDist,
									gs_detlevel_3D_m		= gs_detlevel_3D_m,
									gs_cont_pen				= gs_cont_pen,
									res						= res,
									rescs					= rescs,
									gs_shadow				= gs_shadow,

									railFrameThk			= railFrameThk,
									railBarDepth			= railBarDepth,
									railBarFillThk			= railBarFillThk,
									railBarDiam				= railBarDiam,
									balusterDist			= treadDepth,
									railFrameMat			= matBar,
									railBaluFillMat			= matSurface,
									barNumber				= barNumber,
									hrovL					= hrovL,
									hrovR					= hrovR,
									railHandrailMat			= matHandrail,
									iBalusterStyle			= railWireType,
									railPostDiam			= railPostSize,
									railPostWidth			= railPostSize,
									railPostThk				= railFrameThk,
									postNumber				= postNumber,
									railPostMat				= matPost

return
