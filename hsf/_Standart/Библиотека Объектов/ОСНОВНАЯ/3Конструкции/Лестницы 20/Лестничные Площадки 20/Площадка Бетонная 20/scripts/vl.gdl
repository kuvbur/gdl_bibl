
call "FM_types" parameters all


! ---------- 2D detail level ----------

values "gs_detlevel_2D" stDetlevel2D[2], stDetlevel2D[1]
if GLOB_MODPAR_NAME = "gs_detlevel_2D" then
	gs_detlevel_2D_m = 1
	for i = 2 to vardim1(stDetlevel2D)
	   if gs_detlevel_2D = stDetlevel2D[i]	then gs_detlevel_2D_m = i
	next i
	parameters gs_detlevel_2D_m = gs_detlevel_2D_m
else
	parameters gs_detlevel_2D = stDetlevel2D[max(1,min(gs_detlevel_2D_m, vardim1(stDetlevel2D)))]
endif

! ---------- 3D detail level ----------

values "gs_detlevel_3D" stDetlevel3D[3],stDetlevel3D[2],stDetlevel3D[1]		! Detailed, Simple, Off
if GLOB_MODPAR_NAME = "gs_detlevel_3D" then
	for i = 1 to vardim1(stDetlevel3D)
	   if gs_detlevel_3D = stDetlevel3D[i]	then gs_detlevel_3D_m = i-1
	next i
	parameters gs_detlevel_3D_m = gs_detlevel_3D_m
else
	gs_detlevel_3D = stDetlevel3D[max(1, min(gs_detlevel_3D_m+1, vardim1(stDetlevel3D)))]
	parameters gs_detlevel_3D = gs_detlevel_3D
endif

! ---------- Landing Type ----------

values "gs_shape_landing" stLandingType
values "gs_shape_landing_m" 1, 2, 3

if GLOB_MODPAR_NAME = "gs_shape_landing" then
	gs_shape_landing_m = 1
	for i = 2 to vardim1(stLandingType)
	   if gs_shape_landing = stLandingType[i]	then gs_shape_landing_m = i
	next i
	parameters gs_shape_landing_m = gs_shape_landing_m
else
	gs_shape_landing = stLandingType[max(1, min(gs_shape_landing_m, vardim1(stLandingType)))]
	parameters gs_shape_landing = gs_shape_landing
endif

! ---------- Connecting Stair Type ----------

values "gs_structure_landing" stStructureType
values "gs_structure_landing_m" 1, 2
if GLOB_MODPAR_NAME = "gs_structure_landing" then
	gs_structure_landing_m = 1
	for i = 2 to vardim1(stStructureType)
	   if gs_structure_landing = stStructureType[i]	then gs_structure_landing_m = i
	next i
	parameters gs_structure_landing_m = gs_structure_landing_m
else
	gs_structure_landing = stStructureType[max(1, min(gs_structure_landing_m, vardim1(stStructureType)))]
	parameters gs_structure_landing = gs_structure_landing
endif

! ---------- Flight Section Type ----------

values "gs_section_landing" stSectionType
values "gs_section_landing_m" 1, 2
if GLOB_MODPAR_NAME = "gs_section_landing" then
	gs_section_landing_m = 1
	for i = 2 to vardim1(stSectionType)
	   if gs_section_landing = stSectionType[i]	then gs_section_landing_m = i
	next i
	parameters gs_section_landing_m = gs_section_landing_m
else
	gs_section_landing = stSectionType[max(1, min(gs_section_landing_m, vardim1(stSectionType)))]
	parameters gs_section_landing = gs_section_landing
endif

! ---------- Top Tread Level ----------

values "topTreadLevel"	stTopTreadLevel			! Top Tread at Floor Level, Top Tread below Floor Level
values "topTreadLevel_m" 1, 2
if GLOB_MODPAR_NAME = "topTreadLevel" then
	topTreadLevel_m = 1
	for i = 2 to vardim1(stTopTreadLevel)
	   if topTreadLevel = stTopTreadLevel[i]	then topTreadLevel_m = i
	next i
	parameters topTreadLevel_m = topTreadLevel_m
else
	topTreadLevel = stTopTreadLevel[max(1, min(topTreadLevel_m, vardim1(stTopTreadLevel)))]
	parameters topTreadLevel = topTreadLevel
endif

! ---------- Connecting Tread Style ----------

values "gs_style_tread_connecting"  stTreadConnecting
values "gs_style_tread_connecting_m" 1, 2
if GLOB_MODPAR_NAME = "gs_style_tread_connecting" then
	gs_style_tread_connecting_m = 1
	for i = 2 to vardim1(stTreadConnecting)
	   if gs_style_tread_connecting = stTreadConnecting[i]	then gs_style_tread_connecting_m = i
	next i
	parameters gs_style_tread_connecting_m = gs_style_tread_connecting_m
else
	gs_style_tread_connecting = stTreadConnecting[max(1, min(gs_style_tread_connecting_m, vardim1(stTreadConnecting)))]
	parameters gs_style_tread_connecting = gs_style_tread_connecting
endif


VALUES "flwl" RANGE (0,)
VALUES "flwr" RANGE (0,)
VALUES "fx" RANGE (0,)
VALUES "fy" RANGE (0,)
VALUES "yl" RANGE (0,)
VALUES "yr" RANGE (0,)
VALUES "sst" RANGE (0,)
VALUES "fjl" RANGE (0,)
VALUES "bjl" RANGE (0,)
VALUES "ujh" RANGE (0,sst]
VALUES "ljh" RANGE (0,sst]
VALUES "covthick" RANGE (0,)

if gs_shape_landing_m = 1 then	! Straight
	PARAMETERS a=flwl
	PARAMETERS b=fy+fjl+bjl
endif

if gs_shape_landing_m = 2 then	! L-Shape
	PARAMETERS a=flwl+fx
	PARAMETERS b=fy+yl
endif

if gs_shape_landing_m = 3 then		! U-Shape
	PARAMETERS a=flwl+fx+flwr
	PARAMETERS b=fy+MAX(yl,yr)
endif

zzyzx = sst + cover * covthick
PARAMETERS zzyzx = zzyzx


!!! *** Hide and Lock PARAMETERS

	if gs_shape_landing_m = 1 then HIDEPARAMETER "flwr","fx","yl","yr"	! Straight
	if gs_shape_landing_m = 2 then HIDEPARAMETER "flwr","yr"		! L-Shape

	if gs_section_landing_m = 1 then HIDEPARAMETER "sbp","matsb"		! without Spine Beam

	if gs_structure_landing_m = 2 then		! Concrete
	HIDEPARAMETER "topTreadLevel","gs_style_tread_connecting","th","covery","covthicky","ns","recefice","reclen","matcovy"
	endif

	if gs_structure_landing_m = 1 then		! Monolith
		HIDEPARAMETER "fj","fjl","ujh","bj","bjl","ljh"
	endif

	if topTreadLevel_m = 1 then				! Top Tread at Floor Level
		HIDEPARAMETER "gs_style_tread_connecting","th","covery","covthicky","ns","recefice","reclen","matcovy"
	endif

	if gs_style_tread_connecting_m = 1 then		! Normal
		HIDEPARAMETER "recefice","reclen"
	endif

	if gs_style_tread_connecting_m = 2 then		! Rounded
		HIDEPARAMETER "covery","covthicky","ns","matcovy"
	endif

	if cover=0 then
		HIDEPARAMETER 	"covthick","ns","th",
						"recefice","reclen",
						"matcovx", "penLineTread",
						"typeFillTread", "penFillTread",
						"penBackFillTread"
	endif

	if covery=0 then
		HIDEPARAMETER "covthicky","matcovy"
	if gs_style_tread_connecting_m  = 1 then HIDEPARAMETER "th"
	endif

	if gs_structure_landing_m = 2 | topTreadLevel_m = 2 then		! Concrete, Top Tread below Floor Level
		HIDEPARAMETER "top_line","bottom_line"
	endif

	   ! --- Connecting integer and section pencolor type parameters ---

dim iPenNumber[255]
for i=1 to 255
	iPenNumber[i]=i
next i

values "gs_cont_pen"		iPenNumber
values "gs_fill_pen"		iPenNumber
values "penLineStringer" 	iPenNumber
values "penFillStringer" 	iPenNumber
values "penLineTread" 		iPenNumber
values "penFillTread" 		iPenNumber

if GLOB_MODPAR_NAME = "penLineStringer_m" then
	if penLineStringer_m < -1 | penLineStringer_m > 255 then
		penLineStringer_m = 1
		parameters penLineStringer_m = penLineStringer_m
	endif
	parameters penLineStringer = penLineStringer_m
else
	parameters penLineStringer_m = penLineStringer
endif
if GLOB_MODPAR_NAME = "penFillStringer_m" then
	if penFillStringer_m < -1 | penFillStringer_m > 255 then
		penFillStringer_m = 1
		parameters penFillStringer_m = penFillStringer_m
	endif
	parameters penFillStringer = penFillStringer_m
else
	parameters penFillStringer_m = penFillStringer
endif

if GLOB_MODPAR_NAME = "penLineTread_m" then
	if penLineTread_m < 1 | penLineTread_m > 255 then
		penLineTread_m = 1
		parameters penLineTread_m = penLineTread_m
	endif
	parameters penLineTread = penLineTread_m
else
	parameters penLineTread_m = penLineTread
endif
if GLOB_MODPAR_NAME = "penFillTread_m" then
	if penFillTread_m < 1 | penFillTread_m > 255 then
		penFillTread_m = 1
		parameters penFillTread_m = penFillTread_m
	endif
	parameters penFillTread = penFillTread_m
else
	parameters penFillTread_m = penFillTread
endif


if GLOB_MODPAR_NAME = "penBackFillStringer_m" then
	if penBackFillStringer_m < -1 | penBackFillStringer_m > 255 then
		penBackFillStringer_m = 1
		parameters penBackFillStringer_m = penBackFillStringer_m
	endif
	parameters penBackFillStringer = penBackFillStringer_m
else
	parameters penBackFillStringer_m = penBackFillStringer
endif

if GLOB_MODPAR_NAME = "penBackFillTread_m" then
	if penBackFillTread_m < -1 | penBackFillTread_m > 255 then
		penBackFillTread_m = 1
		parameters penBackFillTread_m = penBackFillTread_m
	endif
	parameters penBackFillTread = penBackFillTread_m
else
	parameters penBackFillTread_m = penBackFillTread
endif
