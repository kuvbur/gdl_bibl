
if gs_detlevel_3D_m = DET3D_OFF then end

if GLOB_CONTEXT>20 and GLOB_CONTEXT<40 then 		!! for Simple Model and in 3D Windoow
	gs_detlevel_3D_m = DET3D_SIMPLE
endif

if not(gs_shadow) then SHADOW OFF
pen gs_cont_pen

!!!!!!!!!!!!!!!!!!! *** HOTSPOTs UNID *** !!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

	FlightUNID=1		! 1-15
	! RailUNID=1000		! 1000,1100,1200

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

if iFirstTread = FIRSTTREAD_AT_FLOOR_LEVEL then
	stt=0
else
	stt=1
endif

HOTSPOT r*cos(stt*fokszog),	r*sin(stt*fokszog), 0, FlightUNID, flw, 1+128 : FlightUNID=FlightUNID+1
HOTSPOT (r+1)*cos(stt*fokszog),	(r+1)*sin(stt*fokszog), 0, FlightUNID, flw, 3 : FlightUNID=FlightUNID+1
HOTSPOT (r-flw)*cos(stt*fokszog), (r-flw)*sin(stt*fokszog), 0, FlightUNID, flw, 2 : FlightUNID=FlightUNID+1

HOTSPOT 0,	0, 0, FlightUNID, r, 1+128 : FlightUNID=FlightUNID+1
HOTSPOT (r)*cos(stt*fokszog), (r)*sin(stt*fokszog), 0, FlightUNID, r, 2 : FlightUNID=FlightUNID+1
HOTSPOT (-1)*cos(stt*fokszog), (-1)*sin(stt*fokszog), 0, FlightUNID, r, 3 : FlightUNID=FlightUNID+1

addz -sst

HOTSPOT 0,	0, sst, FlightUNID, zzyzx, 1+128 : FlightUNID=FlightUNID+1
HOTSPOT 0,	0, -1, FlightUNID, zzyzx, 3 : FlightUNID=FlightUNID+1
HOTSPOT 0, 0, sst+zzyzx, FlightUNID, zzyzx, 2 : FlightUNID=FlightUNID+1

if iTopTread = TOPTREAD_AT_FLOOR_LEVEL then stps=rnu else stps=rnu-1


HOTSPOT 0,	0, zzyzx+sst, FlightUNID, r, 1+128 : FlightUNID=FlightUNID+1
HOTSPOT (r)*cos(stps*fokszog), (r)*sin(stps*fokszog), zzyzx+sst, FlightUNID, r, 2 : FlightUNID=FlightUNID+1
HOTSPOT (-1)*cos(stps*fokszog), (-1)*sin(stps*fokszog), zzyzx+sst, FlightUNID, r, 3 : FlightUNID=FlightUNID+1

HOTSPOT (r)*cos(stps*fokszog), (r)*sin(stps*fokszog), zzyzx+sst, FlightUNID, flw, 1 : FlightUNID=FlightUNID+1
HOTSPOT (r-flw)*cos(stps*fokszog), (r-flw)*sin(stps*fokszog), zzyzx+sst, FlightUNID, flw, 2 : FlightUNID=FlightUNID+1
HOTSPOT (2*r)*cos(stps*fokszog), (2*r)*sin(stps*fokszog), zzyzx+sst, FlightUNID, flw, 3 : FlightUNID=FlightUNID+1


covthick = covthick*cover
addz -covthick

if iNoseType = NOSE_ROUNDED then
	mat_riser=mat_tread
	SECT_FILL typeFillTread, penBackFillTread, penFillTread, penLineTread

	covthicky=0
endif

group "csiga"
	corrtube=0.03
	material matb
	SECT_FILL typeFillStringer, penBackFillStringer, penFillStringer, penLineStringer
	put r,  -r,0
	put r,	-r/r, 0
	put r*cos(0), r*sin(0), 0
	pontszam=3

	i=1
	dc=-3
	if 1/resolka=0 then resolka=1/0.001
	while dc <= fordul*resolka do
		put r*cos((360/resolka)*i), r*sin((360/resolka)*i), (i-1)*stepup
		pontszam=pontszam+1
		dc=dc+1
		i=i+1
	endwhile

	addz th*rnu+sst-th
	cutplane
	del 1
	put r*cos(360/resolka*i), r*sin(360/resolka*i), (i-3)*stepup
	pontszam=pontszam+1
	psy=pontszam*3
	if iFlightSectionType = FLIGHTSECTION_WITH_SPINEBEAM then
		if iLowerJunctionType = LOWERJUNCTION_GROUND_FLOOR then
			if iFirstTread = FIRSTTREAD_AT_FLOOR_LEVEL then
				addz sst-th
			else addz sst
			cutplane 180
				del 1
				tubea 11, pontszam, 1+2+16+32,
					-corrtube,0,0,
					0,0,0,
					flw/2-beamx/2, -rfthickness,0,
					flw/2-beamx/2, -rfthickness-beamy,0,
					flw/2+beamx/2, -rfthickness-beamy,0,
					flw/2+beamx/2, -rfthickness,0,
					flw,0,0,
					flw+corrtube,0,0,
					flw+corrtube,sst+th,0,
					-corrtube,sst+th,0,
					-corrtube,0,0,

					get(psy)
			cutend
		else
			tubea 11, pontszam, 1+2+16+32,
					-corrtube,0,0,
					0,0,0,
				flw/2-beamx/2, -rfthickness,0,
				flw/2-beamx/2, -rfthickness-beamy,0,
				flw/2+beamx/2, -rfthickness-beamy,0,
				flw/2+beamx/2, -rfthickness,0,
				flw,0,0,
				flw+corrtube,0,0,
				flw+corrtube,sst+th,0,
				-corrtube,sst+th,0,
				-corrtube,0,0,

				get(psy)
		endif
	else
		if iLowerJunctionType = LOWERJUNCTION_GROUND_FLOOR then
			if iFirstTread = FIRSTTREAD_AT_FLOOR_LEVEL then
				addz sst-th
			else addz sst
			cutplane 180
				del 1
				tubea 5, pontszam, 1+2+16+32,
					-corrtube,0,0,
					flw+corrtube,0,0,
					flw+corrtube,sst+th,0,
					-corrtube,sst+th,0,
					-corrtube,0,0,

					get(psy)
			cutend
		else
			tubea 5, pontszam, 1+2+16+32,
				-corrtube,0,0,
				flw+corrtube,0,0,
				flw+corrtube,sst+th,0,
				-corrtube,sst+th,0,
				-corrtube,0,0,

				get(psy)
		endif
	endif
	cutend
endgroup

group "coveringy"
	if covery and iNoseType = NOSE_NORMAL and gs_detlevel_3D_m = DET3D_DETAILED then
		material mat_riser
		SECT_FILL typeFillRiser, penBackFillRiser, penFillRiser, penLineRiser

		addz sst+covthick
		rk=(r-flw)/2
		for i=1 to rnu-1
			dx=covthicky*sin(i*fokszog)
			dy=-covthicky*cos(i*fokszog)
			if not(i=rnu-1 and iTopTread = TOPTREAD_BELOW_FLOOR_LEVEL) then
				prism 5, th-covthick,
					rk*cos(i*fokszog),rk*sin(i*fokszog),
					(r+1)*cos(i*fokszog), (r+1)*sin(i*fokszog),
					(r+1)*cos(i*fokszog)+dx, (r+1)*sin(i*fokszog)+dy,
					rk*cos(i*fokszog)+dx, rk*sin(i*fokszog)+dy,
					rk*cos(i*fokszog),rk*sin(i*fokszog)
			endif
			addz th
		next i
		i=i-1
		del i
		del 1
	endif
endgroup

group "coveringx"
	if cover and gs_detlevel_3D_m = DET3D_DETAILED then
		addz sst-th
		rk=(r-flw)/2
		material mat_tread
		SECT_FILL typeFillTread, penBackFillTread, penFillTread, penLineTread

		kx=covthick*tproj/th
		for i=1 to rnu
			dx=(covthicky+ns)*sin(i*fokszog)
			dy=(covthicky+ns)*cos(i*fokszog)*(-1)
			addz th
			if not ((i=1 and iFirstTread = FIRSTTREAD_ABOVE_FLOOR_LEVEL) or (i=rnu and iTopTread = TOPTREAD_BELOW_FLOOR_LEVEL)) then
				if iNoseType = NOSE_ROUNDED then
					prism_ 5, covthick,
						rk*cos((i-1)*fokszog)+dx, rk*sin((i-1)*fokszog)+dy,13,
						(r+1)*cos((i-1)*fokszog)+dx, (r+1)*sin((i-1)*fokszog)+dy,13,
						(r+1)*cos(i*fokszog), (r+1)*sin(i*fokszog),8,
						rk*cos(i*fokszog), rk*sin(i*fokszog),8,
						rk*cos((i-1)*fokszog)+dx, rk*sin((i-1)*fokszog)+dy,13
				else
					prism_ 5, covthick,
						rk*cos((i-1)*fokszog)+dx, rk*sin((i-1)*fokszog)+dy,15,
						(r+1)*cos((i-1)*fokszog)+dx, (r+1)*sin((i-1)*fokszog)+dy,15,
						(r+1)*cos(i*fokszog), (r+1)*sin(i*fokszog),15,
						rk*cos(i*fokszog), rk*sin(i*fokszog),15,
						rk*cos((i-1)*fokszog)+dx, rk*sin((i-1)*fokszog)+dy,15
				endif
			endif
		next i
		i=i-1
		del i
		del 1
	endif
endgroup

group "harap"
	material matb
	SECT_FILL typeFillStringer, penBackFillStringer, penFillStringer, penLineStringer

	if iFlightSectionType = FLIGHTSECTION_WITH_SPINEBEAM then
		addz -rfthickness-beamy
		prism 5, sst+th+rfthickness+beamy,
			0,0,
			(r+1)*cos(0),0,
			(r+1)*cos(0),-1,
			0,-1,
			0,0
		del 1
	else
		prism 5, sst+th*5,
			0,0,
			(r+1)*cos(0),0,
			(r+1)*cos(0),-1,
			0,-1,
			0,0
	endif

	addz sst
	material matb
	for i=1 to rnu+1
		addz (i-1)*th
		if i=1 and iFirstTread = FIRSTTREAD_ABOVE_FLOOR_LEVEL then
			addz -lst2
			prism 4, th*2+lst2,
				0,0,
				(r+1)*cos(fokszog*(i-2)),(r+1)*sin(fokszog*(i-2)),
				(r+1)*cos(fokszog*(i)),(r+1)*sin(fokszog*(i)),
				0,0
			del 1
		else
			if i=rnu+1 then
				if iTopTread = TOPTREAD_BELOW_FLOOR_LEVEL then
					addz -lst-th
					prism 4, th*2+lst,
						0,0,
						(r+1)*cos(fokszog*(i-2)),(r+1)*sin(fokszog*(i-2)),
						(r+1)*cos(fokszog*(i)),(r+1)*sin(fokszog*(i)),
						0,0
					del 1
				else
					addz -lst-th
					prism 4, th*2+lst,
						0,0,
						(r+1)*cos(fokszog*(i-1)),(r+1)*sin(fokszog*(i-1)),
						(r+1)*cos(fokszog*(i+1)),(r+1)*sin(fokszog*(i+1)),
						0,0
					del 1
				endif
			else
				if gs_detlevel_3D_m = DET3D_SIMPLE then
					ddx=(covthicky+ns)*cos(i*fokszog)
					ddy=(covthicky+ns)*sin(i*fokszog)
					addz covhick
				else
					ddx=0
					ddy=0
					addz 0
				endif
				prism 4, th+sst/2,
						0,0,
						(r+1)*cos(fokszog*(i-1)),(r+1)*sin(fokszog*(i-1)),
						(r+1)*cos(fokszog*(i))+ddx,(r+1)*sin(fokszog*(i))+ddy,
						0,0
				del 1

				if iNoseType = NOSE_ROUNDED then

					dx=-tproj*sin(i*fokszog)
					dy=tproj*cos(i*fokszog)
					extrude 5,-dx,-dy,th,1+2+4+16+32,
						0,0,1,
						dx,dy,1,
						(r+1)*cos(fokszog*(i))+dx,(r+1)*sin(fokszog*(i))+dy,1,
						(r+1)*cos(fokszog*(i)),(r+1)*sin(fokszog*(i)),1,
						0,0,1
				endif
			endif
		endif
		del 1
	next i
	del 1
	if iTopTread = TOPTREAD_BELOW_FLOOR_LEVEL then i=i-1
	if iFlightSectionType = FLIGHTSECTION_WITH_SPINEBEAM then hcorr=th+sst+rfthickness+beamy else hcorr=th+sst
	addz (i+1)*th-hcorr
	prism 4, hcorr+th*5,
		0,0,
		(r*r)*cos(fokszog*(i-1)),(r*r)*sin(fokszog*(i-1)),
		(r*r)*cos(fokszog*(i+2)),(r*r)*sin(fokszog*(i+2)),
		0,0
	del 1
endgroup



!					ABS
group "rece"
	if gs_detlevel_3D_m = DET3D_DETAILED and recefice then
		material mat_tread
		SECT_FILL typeFillTread, penBackFillTread, penFillTread, penLineTread

		reclen=0.005
		recnum=5
		addz sst+covthick-reclen
		for i=0 to rnu -1
			dx=-reclen*sin(i*fokszog)
			dy=reclen*cos(i*fokszog)
			addz (i)*th
			for nn=1 to recnum
				prism 5, reclen,
					2*nn*dx,2*nn*dy,
					(r+1)*cos(i*fokszog)+2*nn*dx,(r+1)*sin(i*fokszog)+2*nn*dy,
					(r+1)*cos(i*fokszog)+(2*nn+1)*dx,(r+1)*sin(i*fokszog)+(2*nn+1)*dy,
					(2*nn+1)*dx,(2*nn+1)*dy,
					2*nn*dx,2*nn*dy
			next nn
			del 1
		next i

		del 1
	endif
endgroup


!			CUTTING CYLYNDERS  body - cover vert - cover horz
group "ringcut"
	material matb
	SECT_FILL typeFillStringer, penBackFillStringer, penFillStringer, penLineStringer

	addz -1-lst2
	resol 360/fokszog*res
	extrude 3,0,0,th*rnu+2+lst2,1+2+4+16+32,
		0,0,901,
		r+2,360,4001,
		r,360,4001
	if r>flw then
		extrude 2,0,0,th*rnu+2+lst2,1+2+4+16+32,
			0,0,901,
			r-flw,360,4001
	endif
	del 1
endgroup

group "ringcutcx"
	material mat_tread
	SECT_FILL typeFillTread, penBackFillTread, penFillTread, penLineTread

	addz -1-lst2
	resol 360/fokszog*res
	extrude 3,0,0,th*rnu+2+lst2,1+2+4+16+32,
		0,0,901,
		r+2,360,4001,
		r,360,4001
	if r>flw then
		extrude 2,0,0,th*rnu+2+lst2,1+2+4+16+32,
			0,0,901,
			r-flw,360,4001
	endif
	del 1
endgroup

group "ringcutcy"
	material mat_riser
	SECT_FILL typeFillRiser, penBackFillRiser, penFillRiser, penLineRiser

	addz -1-lst2
	resol 360/fokszog*res
	extrude 3,0,0,th*rnu+2+lst2,1+2+4+16+32,
		0,0,901,
		r+2,360,4001,
		r,360,4001

	if r>flw then
		extrude 2,0,0,th*rnu+2+lst2,1+2+4+16+32,
			0,0,901,
			r-flw,360,4001
	endif
	del 1
endgroup

!			ROUNDED COVER
group "roundcover"
	if iNoseType = NOSE_ROUNDED and cover and gs_detlevel_3D_m = DET3D_DETAILED then
		SECT_FILL typeFillTread, penBackFillTread, penFillTread, penLineTread

		resol 9
		addz sst
		kx=covthick*tproj/th
		if iFirstTread = FIRSTTREAD_AT_FLOOR_LEVEL then sti=2 else sti=3
		if iTopTread = TOPTREAD_AT_FLOOR_LEVEL then endi=rnu else endi=rnu-1
		for i=sti to endi
			addz th*(i-1)
			addx (r-flw)/2*cos((i-1)*fokszog)
			addy (r-flw)/2*sin((i-1)*fokszog)
			rotx 90
			roty 90+(i-1)*fokszog
			dx=-tproj*sin(i*fokszog)
			dy=tproj*cos(i*fokszog)
			prism_ 9,flw+1+(r-flw)/2,
				0,0,13,
				0,covthick,79,
				0,0,979,
				0,atn(th/0.037),4079,
				tproj-covthick-kx,-th+covthick,13,
				0,-th+covthick,13,
				0,-th,13,
				tproj,-th,13,
				0,0,13
			del 5
		next i
		del 1
		resol 360/fokszog*res
	endif
endgroup


!			GROUNDFLOOR
group "groundfloorbox"
	if iLowerJunctionType = LOWERJUNCTION_GROUND_FLOOR and iFirstTread = FIRSTTREAD_AT_FLOOR_LEVEL then
		i=1
		material matb
		SECT_FILL typeFillStringer, penBackFillStringer, penFillStringer, penLineStringer

		addz -lst2+sst
		prism 4, lst2-th,
			0,0,
			(r+1)*cos(fokszog*(i-1)),(r+1)*sin(fokszog*(i-1)),
			(r+1)*cos(fokszog*(i)),(r+1)*sin(fokszog*(i)),
			0,0
		del 1
	endif
endgroup


placegroup subgroup(subgroup("csiga","harap"),"ringcut")
if iLowerJunctionType = LOWERJUNCTION_GROUND_FLOOR and iFirstTread = FIRSTTREAD_AT_FLOOR_LEVEL then
	placegroup subgroup(subgroup("groundfloorbox","ringcut"),"ringcut")
endif
placegroup subgroup(subgroup("coveringx","ringcutcx"),"rece")
if covery and covthicky<>0 then placegroup subgroup("coveringy","ringcutcy")
placegroup subgroup("roundcover", "ringcutcx")
!placegroup "csiga"
!placegroup "ringcut"
del 1

killgroup "groundfloorbox"
killgroup "csiga"
killgroup "harap"
killgroup "ringcut"
killgroup "ringcutcx"
killgroup "ringcutcy"
killgroup "coveringx"
killgroup "coveringy"

del top

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** Railing ** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

if rail_m <> RAILPOS_NONE then
	addz -covthick

	fordul=fordul*1.00241
	fordul=fordul-fokszog/360

	if iFirstTread = FIRSTTREAD_ABOVE_FLOOR_LEVEL then
		fordul=fordul-fokszog/360
		zz=zzyzx-th
	else
		zz=zzyzx
	endif

	ker	= 2*pi*(r-flw-roffl)
	k	= 2*pi*(r+roffr)
	nlra=sqr(k*k*fordul*fordul+zz*zz)
	klra=sqr(ker*ker*fordul*fordul+zz*zz)

	ann=atn(zz/(k*fordul))
	ank=atn(zz/(ker*fordul))

	if iFirstTread = FIRSTTREAD_ABOVE_FLOOR_LEVEL then
		rotz fokszog
		addz th
	endif

	if cover then addz covthick

	kr=r-flw-roffl+handRailWidthL /2
	rr=r+roffr-handRailWidthR/2
	res=res*360/fokszog

	! ------------------------------------------------------------------------------
	! Right rail
	! ------------------------------------------------------------------------------

	if rail_m = RAILPOS_RIGHT or rail_m = RAILPOS_BOTH then
		if bComplexRailRight then rotz fokszog/2*0
		addx r+roffr-handRailWidthR/2
		rotz 90

		RailUNID=1000

		addy roffr
		HOTSPOT 0, 0, dsr, RailUNID, roffr, 1+128: RailUNID=RailUNID+1
		HOTSPOT 0, -roffr, dsr, RailUNID, roffr, 2: RailUNID=RailUNID+1
		HOTSPOT 0, 1, dsr, RailUNID, roffr, 3: RailUNID=RailUNID+1
		del 1

		HOTSPOT 0,0,0, RailUNID, dsr, 1+128: RailUNID=RailUNID+1
		HOTSPOT 0,0,dsr, RailUNID, dsr, 2: RailUNID=RailUNID+1
		HOTSPOT 0,0,-1, RailUNID, dsr, 3: RailUNID=RailUNID+1

		HOTSPOT 0,0,dsr, RailUNID, hrr, 1+128: RailUNID=RailUNID+1
		HOTSPOT 0,0,dsr+hrr, RailUNID, hrr, 2: RailUNID=RailUNID+1
		HOTSPOT 0,0,dsr-1, RailUNID, hrr, 3: RailUNID=RailUNID+1

		lraSimple=nlra
		lraComplex=nlra
		additionXComplex=0
		additionZComplex=0
		hrovL=hror
		hrovR=hror
		postNumber = npr
		side = SIDE_RIGHT
		gosub "callRailsForStair"

		del 2
		if bComplexRailRight then del 1
	endif



	! ------------------------------------------------------------------------------
	! Left rail
	! ------------------------------------------------------------------------------

	if rail_m = RAILPOS_LEFT or rail_m = RAILPOS_BOTH then
		if bSameRails then
			leftRailType_m = rightRailType_m
		endif

		if bComplexRailLeft then rotz fokszog/2*0
		addx r-flw-roffl+handRailWidthL /2
		rotz 90

		if not(bSameRails) then
			addy -roffl
				RailUNID=1100
				HOTSPOT 0,0,dsl, RailUNID, roffl, 1+128: RailUNID=RailUNID+1
				HOTSPOT 0,roffl,dsl, RailUNID, roffl, 2: RailUNID=RailUNID+1
				HOTSPOT 0,-1,dsl, RailUNID, roffl, 3: RailUNID=RailUNID+1
			del 1

			RailUNID=1200
			HOTSPOT 0,0,0, RailUNID, dsl, 1+128: RailUNID=RailUNID+1
			HOTSPOT 0,0,dsl, RailUNID, dsl, 2: RailUNID=RailUNID+1
			HOTSPOT 0,0,-1, RailUNID, dsl, 3: RailUNID=RailUNID+1

			HOTSPOT 0,0,dsl, RailUNID, hrl, 1+128: RailUNID=RailUNID+1
			HOTSPOT 0,0,dsl+hrl, RailUNID, hrl, 2: RailUNID=RailUNID+1
			HOTSPOT 0,0,dsl-1, RailUNID, hrl, 3: RailUNID=RailUNID+1
		else
			addy -roffl
				RailUNID=1100
				HOTSPOT 0,0,dsl, RailUNID, roffr, 1+128: RailUNID=RailUNID+1
				HOTSPOT 0,roffl,dsl, RailUNID, roffr, 2: RailUNID=RailUNID+1
				HOTSPOT 0,-1,dsl, RailUNID, roffr, 3: RailUNID=RailUNID+1
			del 1

			RailUNID=1200
			HOTSPOT 0,0,0, RailUNID, dsr, 1+128: RailUNID=RailUNID+1
			HOTSPOT 0,0,dsl, RailUNID, dsr, 2: RailUNID=RailUNID+1
			HOTSPOT 0,0,-1, RailUNID, dsr, 3: RailUNID=RailUNID+1

			HOTSPOT 0,0,dsl, RailUNID, hrr, 1+128: RailUNID=RailUNID+1
			HOTSPOT 0,0,dsl+hrl, RailUNID, hrr, 2: RailUNID=RailUNID+1
			HOTSPOT 0,0,dsl-1, RailUNID, hrr, 3: RailUNID=RailUNID+1
		endif

		lraSimple=klra
		lraComplex=klra
		additionXComplex=0
		additionZComplex=0
		hrovL=hrol
		hrovR=hrol
		postNumber = npl
		side = SIDE_LEFT
		gosub "callRailsForStair"

		del 2
		if bComplexRailLeft then del 1
	endif
	if cover then del 1
	if iFirstTread = FIRSTTREAD_ABOVE_FLOOR_LEVEL then del 2

	del 1
endif

END

! ==============================================================================
"callRailsForStair":
! ------------------------------------------------------------------------------
!	lraSimple
!	lraComplex
!	additionXComplex
!	additionZComplex
!	hrovL: rail overhang start
!	hrovR: rail overhang end
!	postNumber:   number of posts
!	side: SIDE_LEFT or SIDE_RIGHT
! ==============================================================================
	additionXComplex = additionXComplex
	additionZComplex = additionZComplex
	gosub "callRails"
return

! ==============================================================================
"callRails":
! ------------------------------------------------------------------------------
!	ani
!	additionXComplex
!	additionZComplex
!	dsComplex
!  ------------------
!	side: SIDE_LEFT or SIDE_RIGHT
!	lraSimple
!	lraComplex
!	hrovL: rail overhang start
!	hrovR: rail overhang end
!	postNumber:   number of posts
! ==============================================================================
	if side = SIDE_LEFT then
		railBarDepth	= bwl
		railBarDiam		= bdl
		railHeight		= hrl
		railBarThk		= fthl
		railBarType		= btypl_m
		railFrameThk	= fthl
		railDist		= dsl
		railType_m		= leftRailType_m
		railPostDiam	= pdl
		railPostWidth	= pwl
		railPostThk		= pthl
		railPostType	= ptl_m
		barNumber		= nbl
		iBalusterStyle	= btl_m
		railFramesWSide	= fswl
		railFramesWTop	= ftwl
		railFramesWBot	= fbwl
		railBarHeight	= bhl
		railBarFillThk	= bthl
		balusterDist	= abdistl
		railFrameMat	= fmatl
		railBaluFillMat	= bmatl
		railPostMat		= pmatl
		balusterNumber	= nbtl
		railFillDist	= fdfl
!!!		railPostBaseType= gs_PostBaseTypeL_m
		railDistFromHr	= sbhl
!!!		railPostBaseOv	= gs_PostBaseOverhangL
		handRailType	= hrtl_m
		handRailWidth	= hrwl
		handRailDiam	= hrdl
		handRailHeight	= hrhl
		ani				= ank
		rb				= kr
	else
		railBarDepth	= bwr
		railBarDiam		= bdr
		railHeight		= hrr
		railBarThk		= fthr
		railBarType		= btypr_m
		railFrameThk	= fthr
		railDist		= dsr
		railType_m		= rightRailType_m
		railPostDiam	= pdr
		railPostWidth	= pwr
		railPostThk		= pthr
		railPostType	= ptr_m
		barNumber		= nbr
		iBalusterStyle	= btr_m
		railFramesWSide	= fswr
		railFramesWTop	= ftwr
		railFramesWBot	= fbwr
		railBarHeight	= bhr
		railBarFillThk	= bthr
		balusterDist	= abdistr
		railFrameMat	= fmatr
		railBaluFillMat	= bmatr
		railPostMat		= pmatr
		balusterNumber	= nbtr
		railFillDist	= fdfr
!!!		railPostBaseType= gs_PostBaseTypeR_m
		railDistFromHr	= sbhr
!!!		railPostBaseOv	= gs_PostBaseOverhangR
		handRailType	= hrtr_m
		handRailWidth	= hrwr
		handRailDiam	= hrdr
		handRailHeight	= hrhr
		ani				= ann
		rb				= rr
	endif

	call "stairRails_m" parameters	railType_m				= railType_m,
									iStairType				= 2,
									bEnableWired02Rail		= 0,
									bEnableNonVerticalRail	= 0,
									additionXComplex		= additionXComplex,
									additionZComplex		= additionZComplex,
									ptyp_m					= 3,
									ani						= ani,
									ab						= fordul*360,
									rb						= rb,
									rom_m					= 1,
									rmm_m					= 1,
									lraSimple				= lraSimple,
									lraComplex				= lraComplex,
									railHeight				= railHeight,
									railDist				= railDist,
									gs_detlevel_3D_m		= gs_detlevel_3D_m,
									gs_cont_pen				= gs_cont_pen,
									res						= res,
									rescs					= rescs,
									gs_shadow				= gs_shadow,
									railFrameThk			= railFrameThk,
									railFramesWSide			= railFramesWSide,
									railFramesWTop			= railFramesWTop,
									railFramesWBot			= railFramesWBot,
									railBarType				= railBarType,
									railBarDepth			= railBarDepth,
									railBarFillThk			= railBarFillThk,
									railBarDiam				= railBarDiam,
									balusterDist			= balusterDist,
									railFrameMat			= railFrameMat,
									railBaluFillMat			= railBaluFillMat,
									barNumber				= barNumber,
									railBarHeight			= railBarHeight,
									railFillDist			= railFillDist,
									handRailType			= handRailType,
									handRailDiam			= handRailDiam,
									handRailWidth			= handRailWidth,
									handRailHeight			= handRailHeight,
									hrovL					= hrovL,
									hrovR					= hrovR,
									iBalusterStyle			= iBalusterStyle,
									railPostDiam			= railPostDiam,
									railPostWidth			= railPostWidth,
									railPostThk				= railPostThk,
									railPostType			= railPostType,
									postNumber				= postNumber,
									railPostMat				= railPostMat,
									iParamInputType			= 1,
									balusterNumber			= balusterNumber,
!!!									railPostBaseType		= railPostBaseType,
!!!									railPostBaseOv			= railPostBaseOv,
									railDistFromHr			= railDistFromHr
return


