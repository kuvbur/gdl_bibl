

! ---------- Hotspots ----------[

	!!! FlightUNID=1		!!! 1,50,60,100
	!!! RailUNID=1000		!!! 1000,1100,1200
	!!! BreakUNID=2000		!!! 2000,2050,2100,2150
	!!! StartSymbUNID=3000	!!! 3000,3100
	!!! ArrowUNID=4000		!!! 4000,4100,4200,4300,4400
	!!! RiseRunUNID=5000	!!! 5000,5050,5100
	!!! UpDownUNID=6000		!!! 6000
	!!! NumUNID=7000		!!! 7000,7100

! ---------- Hotspots ----------]

bCarriageLineExist		= bShowCarriage and bEnableCarriageLine and (GLOB_SCALE <= iShowCarriageUpTo | iShowCarriageUpTo = 1)

temp_wLineLength = 0
temp_wLineLengthAbove = 0

chStoryDist = GLOB_CH_STORY_DIST
IF gs_StorySensitive = 0 THEN chStoryDist = 0

!!!!!!!!!!!!!!! *** Settings of 2D Symbol Type *** !!!!!!!!!!!!!!!
!!!!!!!!!!!! *** Stories, where the object is placed on !!!!!!!!!!

	!!! The default settings is ON of the next parameters:
	!!!	gs_2DTread,gs_2DTreadAbove,gs_2DRiserAbove,gs_2DContourAbove,

	!!! The default settings is OFF of the next parameters:
	!!!	gs_FillAbove

	temp_RiserLine= dash_line		!!because of Type 17, Type 20
	temp_RiserLinePEN= gs_DashLinePen

	IF walkl=0 THEN bShowRiseAndRunText=0			!! If no walking line > no Rise and Run Text

	_iSymbolType = 1
	if gs_detlevel_2D_m = DET2D_SCALESENSITIVE then
		if GLOB_SCALE <= _iScaleMD then									!! Detailed Scale
			_iSymbolType = iEnabledSymbolTypes[iSymbolGroup][3]
		else
			if GLOB_SCALE > _iScaleMD & GLOB_SCALE <= _iScaleSM then	!! Middle Scale
				_iSymbolType = iEnabledSymbolTypes[iSymbolGroup][2]
			else														!! Simple Scale
				_iSymbolType = iEnabledSymbolTypes[iSymbolGroup][1]
			endif
		endif
	else
		_iSymbolType = gs_SymbolType_m
	endif

	IF _iSymbolType = 1 THEN
		!!! Treads
		ns=0
		covthicky=0
		brk=0
		gs_2DTread=0
		solid_line = dash_line
		gs_cont_pen = gs_DashLinePen
		gs_NosingLine = solid_line
		!!! Numbering
		gs_NumBelow = 1
		gs_NumAbove = 1
		!!! Walking Line
		temp_wLineType=gs_wLineType2
		!!! Railing
		rail_m = RAILPOS_NONE
	ENDIF

	IF _iSymbolType = 2 THEN
		!!! Treads
		ns=0
		covthicky=0
		brk=0
		gs_2DTread=0
		gs_NosingLine = solid_line
		!!! Numbering
		gs_NumBelow = 1
		gs_NumAbove = 1
		!!! Walking Line
		temp_wLineType=gs_wLineType1
		!!! Railing
		rail_m = RAILPOS_NONE
	ENDIF

	IF _iSymbolType = 3 THEN
		!!! Treads
		ns=0
		covthicky=0
		brk=1
		iLineTypeAboveBreak = LINETYPEABOVEBREAK_INTERSECT
		gs_2DContourAbove=0
		gs_2DTread=0
		gs_2DTreadAbove=0
		gs_NosingLine = solid_line
		!!! Numbering
		gs_NumBelow = 1
		IF chStoryDist > EPS  then
			gs_NumAbove = 1
			ELSE
			gs_NumAbove = 0
		ENDIF
		!!! Walking Line
		temp_wLineType=gs_wLineType1
		!!! Railing
		rail_m = RAILPOS_NONE
	ENDIF

	IF _iSymbolType = 4 THEN
		!!! Treads
		ns=0
		covthicky=0
		brk=1
		iLineTypeAboveBreak = LINETYPEABOVEBREAK_INTERSECT
		gs_2DTread=0
		gs_2DTreadAbove=0
		gs_NosingLine = solid_line
		!!! Walking Line
		temp_wLineType=gs_wLineType1
		!!! Railing
		rail_m = RAILPOS_NONE
	ENDIF

	IF _iSymbolType = 5 THEN
		!!! Treads
		ns=0
		covthicky=0
		brk=1
		iLineTypeAboveBreak = LINETYPEABOVEBREAK_INTERSECT
		gs_2DTread=0
		gs_2DTreadAbove=0
		IF chStoryDist > -EPS  then
			dash_line = solid_line
			gs_DashLinePen = gs_cont_pen
		ENDIF
		gs_NosingLine = solid_line
		!!! Walking Line
		temp_wLineType = gs_wLineType1
		gs_wLineTypeAbove = gs_wLineType1
		!!! Railing
		rail_m = RAILPOS_NONE
	ENDIF

	IF _iSymbolType = 6 THEN
		!!! Treads
		ns=0
		covthicky=0
		brk=0
		iLineTypeAboveBreak = LINETYPEABOVEBREAK_FULL
		solid_line = dash_line
		gs_cont_pen = gs_DashLinePen
		gs_NosingLine = solid_line
		!!! Numbering
		gs_NumBelow = 1
		gs_NumAbove = 1
		!!! Walking Line
		temp_wLineType=gs_wLineType2
		!!! Railing
		rail_m = RAILPOS_NONE
	ENDIF

	IF _iSymbolType = 7 THEN
		!!! Treads
		ns=0
		covthicky=0
		brk=0
		iLineTypeAboveBreak = LINETYPEABOVEBREAK_FULL
		gs_NosingLine = solid_line
		!!! Numbering
		gs_NumBelow = 1
		gs_NumAbove = 1
		!!! Walking Line
		temp_wLineType=gs_wLineType1
		!!! Railing
		rail_m = RAILPOS_NONE
	ENDIF

	IF _iSymbolType = 8 THEN
		!!! Treads
		ns=0
		covthicky=0
		brk=1
		iLineTypeAboveBreak = LINETYPEABOVEBREAK_INTERSECT
		gs_2DContourAbove=0
		gs_2DTreadAbove=0
		gs_NosingLine = solid_line
		!!! Numbering
		gs_NumBelow = 1
		IF chStoryDist > EPS  then
			gs_NumAbove = 1
			ELSE
			gs_NumAbove = 0
		ENDIF
		!!! Walking Line
		temp_wLineType=gs_wLineType1
		!!! Railing
		rail_m = RAILPOS_NONE
	ENDIF

	IF _iSymbolType = 9 THEN
		!!! Treads
		ns=0
		covthicky=0
		brk=1
		iLineTypeAboveBreak = LINETYPEABOVEBREAK_INTERSECT
		gs_2DTreadAbove=0
		gs_NosingLine = solid_line
		!!! Walking Line
		temp_wLineType=gs_wLineType1
		!!! Railing
		rail_m = RAILPOS_NONE
	ENDIF

	IF _iSymbolType = 10 THEN
		!!! Treads
		ns=0
		covthicky=0
		brk=1
		iLineTypeAboveBreak = LINETYPEABOVEBREAK_INTERSECT
		gs_2DTreadAbove=0
		IF chStoryDist > -EPS  then
			dash_line = solid_line
			gs_DashLinePen = gs_cont_pen
		ENDIF
		gs_NosingLine = solid_line
		!!! Walking Line
		temp_wLineType=gs_wLineType1
		gs_wLineTypeAbove = gs_wLineType1
		!!! Railing
		rail_m = RAILPOS_NONE
	ENDIF

	IF _iSymbolType = 11 THEN
		!!! Treads
		ns=0
		covthicky=0
		brk=1
		iLineTypeAboveBreak = LINETYPEABOVEBREAK_INTERSECT
		gs_NosingLine = solid_line
		!!! Walking Line
		temp_wLineType=gs_wLineType1
		!!! Railing
		rail_m = RAILPOS_NONE
	ENDIF

	IF _iSymbolType = 12 THEN
		!!! Treads
		ns=0
		covthicky=0
		brk=1
		iLineTypeAboveBreak = LINETYPEABOVEBREAK_INTERSECT
		IF chStoryDist > -EPS  then
			dash_line = solid_line
			gs_DashLinePen = gs_cont_pen
		ENDIF
		gs_NosingLine = solid_line
		!!! Walking Line
		temp_wLineType=gs_wLineType1
		gs_wLineTypeAbove = gs_wLineType1
		!!! Railing
		rail_m = RAILPOS_NONE
	ENDIF

	IF _iSymbolType = 13 THEN
		!!! Treads
		brk=0
		iLineTypeAboveBreak = LINETYPEABOVEBREAK_FULL
		solid_line = dash_line
		gs_cont_pen = gs_DashLinePen
		!!! Numbering
		gs_NumBelow = 1
		gs_NumAbove = 1
		!!! Walking Line
		temp_wLineType=gs_wLineType2
	ENDIF

	IF _iSymbolType = 14 THEN
		!!! Treads
		brk=0
		iLineTypeAboveBreak = LINETYPEABOVEBREAK_FULL
		!!! Numbering
		gs_NumBelow = 1
		gs_NumAbove = 1
		!!! Walking Line
		temp_wLineType=gs_wLineType1
	ENDIF

	IF _iSymbolType = 15 THEN
		!!! Treads
		brk=1
		iLineTypeAboveBreak = LINETYPEABOVEBREAK_INTERSECT
		gs_2DContourAbove=0
		gs_2DTreadAbove=0
		!!! Numbering
		gs_NumBelow = 1
		IF chStoryDist > EPS  then
			gs_NumAbove = 1
			gs_2DRiserAbove=1
			ELSE
			gs_NumAbove = 0
			gs_2DRiserAbove=0
		ENDIF
		!!! Walking Line
		temp_wLineType=gs_wLineType1
	ENDIF

	IF _iSymbolType = 16 THEN
		!!! Treads
		brk=1
		iLineTypeAboveBreak = LINETYPEABOVEBREAK_INTERSECT
		gs_2DTreadAbove=0
		!!! Walking Line
		temp_wLineType=gs_wLineType1
	ENDIF

	IF _iSymbolType = 17 THEN
		!!! Treads
		brk=1
		iLineTypeAboveBreak = LINETYPEABOVEBREAK_INTERSECT
		gs_2DTreadAbove=0
		IF ABS(chStoryDist) < EPS  then
			dash_line = solid_line
			gs_DashLinePen = gs_cont_pen
			ELSE
			dash_line = dash_line
			gs_DashLinePen = gs_DashLinePen
		ENDIF
		!!! Walking Line
		temp_wLineType=gs_wLineType1
		gs_wLineTypeAbove = gs_wLineType1
	ENDIF

	IF _iSymbolType = 18 THEN
		!!! Treads
		brk=1
		iLineTypeAboveBreak = LINETYPEABOVEBREAK_INTERSECT
		!!! Walking Line
		temp_wLineType=gs_wLineType1
	ENDIF

	IF _iSymbolType = 19 THEN
		!!! Treads
		brk=1
		iLineTypeAboveBreak = LINETYPEABOVEBREAK_INTERSECT
		gs_2DRiserAbove=0
		!!! Walking Line
		temp_wLineType=gs_wLineType1
	ENDIF

	IF _iSymbolType = 20 THEN
		!!! Treads
		brk=1
		iLineTypeAboveBreak = LINETYPEABOVEBREAK_INTERSECT
		IF ABS(chStoryDist) < EPS  then
			dash_line = solid_line
			gs_DashLinePen = gs_cont_pen
			ELSE
			dash_line = dash_line
			gs_DashLinePen = gs_DashLinePen
		ENDIF
		!!! Walking Line
		temp_wLineType=gs_wLineType1
		gs_wLineTypeAbove = gs_wLineType1
	ENDIF


!!!!!!!!!!!!!! *** 2D Representation on Stories *** !!!!!!!!!!!!!!
!!! *** Stories above the story, where the object is placed on !!!
IF gs_StorySensitive=1 THEN

	IF chStoryDist > EPS  then

		!!! Line Type and Pen
		solid_line = gs_LineTypeStUp
		IF gs_BreaklineStUp=0 THEN
			dash_line = dash_line
			ELSE
			dash_line = gs_LineTypeStUp
		ENDIF
		gs_cont_pen = gs_LinePenStUp
		IF gs_BreaklineStUp=1 THEN gs_DashLinePen = gs_LinePenStUp

		!!! Walking Line
		gs_wLineType1 = gs_wLineTypeStUp
		gs_wLineType2 = gs_wLineTypeStUp
		gs_wLineTypeAbove = gs_wLineTypeStUp
		temp_wLineType = gs_wLineTypeStUp


		!!! Rise and Run Text
		IF gs_txStUp = 1 THEN
			bShowRiseAndRunText = 1
			ELSE
			bShowRiseAndRunText = 0
		ENDIF

		!!! NUMBERING
		IF gs_numaStUp = 1 THEN
			bShowNumbering = 1
			gs_NumAbove = 1
			gs_NumBelow = 1
			ELSE
			bShowNumbering = 0
			gs_NumAbove = 0
			gs_NumBelow = 0
		ENDIF

		IF gs_BreaklineStUp=1 THEN
			brk=1
			iLineTypeAboveBreak = LINETYPEABOVEBREAK_INTERSECT
			ELSE
			brk=0
			iLineTypeAboveBreak = LINETYPEABOVEBREAK_FULL
		ENDIF

		IF gs_BreaklineStUp=0 AND gs_TreadStUp=1  THEN gs_2DTread=1
		IF gs_BreaklineStUp=0 AND gs_TreadStUp=0  THEN gs_2DTread=0


		IF gs_BreaklineStUp=1 THEN

			IF gs_UpperPartStUp=1 THEN
				gs_2DContourAbove=1
				gs_NumAbove = 1
				ELSE
				gs_2DTreadAbove=0
				gs_2DContourAbove=0
				gs_NumAbove = 0
			ENDIF

			IF gs_LowerPartStUp=1 THEN
				gs_2DContourBelow=1
				gs_NumBelow = 1
				ELSE
				gs_2DTread=0
				gs_2DContourBelow=0
				gs_NumBelow = 0
			ENDIF

			IF gs_UpperPartStUp=1 AND gs_TreadStUp=1  THEN gs_2DTreadAbove=1
			IF gs_UpperPartStUp=1 AND gs_TreadStUp=0  THEN gs_2DTreadAbove=0

			IF gs_LowerPartStUp=1 AND gs_TreadStUp=1  THEN gs_2DTread=1
			IF gs_LowerPartStUp=1 AND gs_TreadStUp=0  THEN gs_2DTread=0

		ENDIF

	ENDIF
ENDIF


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!! *** Stories down the story, where the object is placed on !!!!

IF chStoryDist < -EPS  then
	rail_m = RAILPOS_NONE
	bShowCarriage = 0
	bShowNumbering=0
	bShowRiseAndRunText=0
	walkingDirUPDN_m = WALKDIRSTR_NONE
	brk=0
	walkl=0
	solid_line = dash_line
	gs_cont_pen=gs_DashLinePen
	SET LINE_TYPE dash_line
	gs_fill_type=65
	gs_back_pen=0
endif

	IF chStoryDist > -EPS AND gs_2DTread=1 then
	MASK=1
	ELSE
	MASK=0
	ENDIF

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!! Arrow Size

		IF td> 0.26 then
		ArrowDist=gs_ArrowHalfWidth
		ELSE
		ArrowDist=gs_ArrowHalfWidth
		ENDIF

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!! First and Top Tread

	IF firstTreadLevel_m = FIRSTTREAD_ATFLOOR AND gs_structure_landing_m = STRUCTTYPE_MONOLITH THEN
		temp_FirstTread=td-(ns+covthicky)
		ELSE
		temp_FirstTread=0
	ENDIF

	IF topTreadLevel_m = TOPTREAD_ATFLOOR AND gs_structure_landing_m = STRUCTTYPE_MONOLITH THEN
		temp_TopTread=td
		ELSE
		temp_TopTread=0
	ENDIF

	IF gs_structure_landing_m = STRUCTTYPE_CONCRETE THEN temp_FirstTread = ljl-(ns+covthicky)
	IF gs_structure_landing_m = STRUCTTYPE_CONCRETE THEN temp_TopTread = ujl+td
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!! Nosing

	If iNoseType = NOSE_ROUNDED THEN
		ns=covthick
		covthicky=0
	ELSE
		ns=ns
		covthicky=covthicky
	ENDIF

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! Top Tread > Type=14,19,20

	IF topTreadLevel_m = TOPTREAD_BELOWFLOOR THEN top_line = 0

	IF _iSymbolType = 14 AND top_line=1 OR _iSymbolType = 19 AND top_line=1 OR _iSymbolType = 20 AND top_line=1 THEN
		TopLineMask141920_0=0
		TopLineMask141920_1=1
		tempLine141920=(ns+covthicky)
		ELSE
		IF chStoryDist < EPS THEN
			TopLineMask141920_0=1
			TopLineMask141920_1=0
			tempLine141920=0
			ELSE
			IF top_line=1 THEN TopLineMask141920_0=0
			IF top_line=0 THEN TopLineMask141920_0=1
			TopLineMask141920_1=1
			tempLine141920=(ns+covthicky)
		ENDIF
	ENDIF

	IF _iSymbolType = 19 AND top_line=1 THEN
		tempLine19=(ns+covthicky)
		ELSE
		tempLine19=0
	ENDIF

	IF _iSymbolType = 14 AND top_line=1 OR _iSymbolType = 20 AND top_line=1 THEN
		tempLine1420=(ns+covthicky)
		ELSE
		IF chStoryDist < EPS THEN
			tempLine1420=0
			ELSE
			tempLine1420=(ns+covthicky)
		ENDIF
	ENDIF


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

PEN gs_cont_pen
FILL gs_fill_type
DRAWINDEX 10

!-- FLIGHT WIDTH ---------------------------------------------------

	FlightUNID=1

	HOTSPOT2 0,-temp_FirstTread-ns-covthicky,	FlightUNID, flw, 1+256 : FlightUNID=FlightUNID+1
	HOTSPOT2 flw,-temp_FirstTread-ns-covthicky, FlightUNID, flw, 2 : FlightUNID=FlightUNID+1
	HOTSPOT2 -1,-temp_FirstTread-ns-covthicky,	FlightUNID, flw, 3: FlightUNID=FlightUNID+1

	HOTSPOT2 0,(rnu-1)*td+temp_TopTread,	FlightUNID, flw, 1+256 : FlightUNID=FlightUNID+1
	HOTSPOT2 flw,(rnu-1)*td+temp_TopTread, FlightUNID, flw, 2 : FlightUNID=FlightUNID+1
	HOTSPOT2 -1,(rnu-1)*td+temp_TopTread,	FlightUNID, flw, 3 : FlightUNID=FlightUNID+1

	IF topTreadLevel_m = TOPTREAD_ATFLOOR AND gs_structure_landing_m = STRUCTTYPE_MONOLITH OR gs_structure_landing_m = STRUCTTYPE_CONCRETE THEN

		FlightUNID=50
		HOTSPOT2 0,(rnu-1)*td,	FlightUNID: FlightUNID=FlightUNID+1
		HOTSPOT2 flw,(rnu-1)*td,	FlightUNID: FlightUNID=FlightUNID+1
	ENDIF

	IF firstTreadLevel_m = FIRSTTREAD_ATFLOOR AND gs_structure_landing_m = STRUCTTYPE_MONOLITH OR gs_structure_landing_m = STRUCTTYPE_CONCRETE THEN

		FlightUNID=60
		HOTSPOT2 0,0,	FlightUNID: FlightUNID=FlightUNID+1
		HOTSPOT2 flw,0,	FlightUNID: FlightUNID=FlightUNID+1
	ENDIF


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!! *** CONTOUR LINES AND FILL*** !!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

!!NumStline=INT (1/th)	!!! POSITION of BREAK LINE
NumStline=INT (gs_BreakHeight/th)	!!! POSITION of BREAK LINE
IF ZZYZX <= (NumStline+1)*th THEN brk=0		!!!IF value of ZZYZX is less than BREAK LINE

	!!! Contour Line and Fill Type

	IF iLineTypeAboveBreak = LINETYPEABOVEBREAK_INTERSECT THEN
		temp_line=dash_line
		temp_pen=gs_DashLinePen
		IF gs_FillAbove=1 THEN
			FullFill=2+64
			temp_FillTypeAbove=gs_fill_type
			temp_BackPen=gs_back_pen
		ELSE
			FullFill=0
			temp_FillTypeAbove=gs_FillTypeAbove		!!! because of Area Fill Selection
			temp_BackPen=0							!!! because of Area Fill Selection
		ENDIF
	ELSE
		temp_line=solid_line
		temp_pen=gs_cont_pen
		FullFill=2+64
		temp_FillTypeAbove=gs_fill_type
		temp_BackPen=gs_back_pen
	ENDIF

	!!! BREAK LINE X Distance
	brkLineX=(brkLineY*flw)/(2*td)

	!! No BREAK LINE
	IF brk=0 THEN
		PEN gs_cont_pen
		SET LINE_TYPE solid_line
			IF bottom_line = 1 and firstTreadLevel_m = FIRSTTREAD_ATFLOOR THEN
				POLY2_b 5, 1+2+64, gs_fill_pen, gs_back_pen,
					0, 0-ns-covthicky, 0,
					flw, 0-ns-covthicky, 1,
					flw, 0-ns-covthicky-temp_FirstTread, 1,
					0, 0-ns-covthicky-temp_FirstTread, 1,
					0, 0-ns-covthicky, -1

				HOTLINE2 0, 0-ns-covthicky,flw, 0-ns-covthicky
			ENDIF

			POLY2_b 5, 1+2+64, gs_fill_pen, gs_back_pen,
				0, 0-ns-covthicky, 1,
				flw, 0-ns-covthicky, 1,
				flw, (rnu-1)*td, TopLineMask141920_0,
				0, (rnu-1)*td, 1,
				0, 0-ns-covthicky, -1

			IF top_line = 1 AND topTreadLevel_m = TOPTREAD_ATFLOOR THEN
			SET LINE_TYPE solid_line
				POLY2_b 5, 1+2+64, gs_fill_pen, gs_back_pen,
					0, (rnu-1)*td+temp_TopTread, 1,
					flw, (rnu-1)*td+temp_TopTread, 1,
					flw, (rnu-1)*td-tempLine141920,TopLineMask141920_1,
					0, (rnu-1)*td-tempLine141920, 1,
					0, (rnu-1)*td+temp_TopTread, -1

				HOTLINE2 0, (rnu-1)*td,flw, (rnu-1)*td
			ENDIF


	ELSE	!!! with Break Line

			IF breakline_style_m = BREAKLINE_STRAIGHT THEN

				IF gs_2DContourBelow=1 THEN

					PEN gs_cont_pen
					SET LINE_TYPE solid_line

					IF bottom_line = 1 and firstTreadLevel_m = FIRSTTREAD_ATFLOOR THEN
						POLY2_b 5, 1+2+64, gs_fill_pen, gs_back_pen,
							0, 0-ns-covthicky, 0,
							flw, 0-ns-covthicky, 1,
							flw, 0-ns-covthicky-temp_FirstTread, 1,
							0, 0-ns-covthicky-temp_FirstTread, 1,
							0, 0-ns-covthicky, -1

						HOTLINE2 0, 0-ns-covthicky,flw, 0-ns-covthicky
					ENDIF

					POLY2_b 5, 1+2+64, gs_fill_pen, gs_back_pen,
						0, 0-ns-covthicky, 1,
						flw, 0-ns-covthicky, 1,
						flw, (NumStline+1)*td-ns-covthicky, 1,
						0, (NumStline-1)*td-ns-covthicky, 1,
						0, 0-ns-covthicky, -1

					BreakUNID=2000

					HOTSPOT2 0, (NumStline-1)*td-ns-covthicky, BreakUNID: BreakUNID=BreakUNID+1
					HOTSPOT2 flw, (NumStline+1)*td-ns-covthicky, BreakUNID: BreakUNID=BreakUNID+1


				ENDIF


				IF gs_2DContourAbove=1 THEN		!!IF No Contour above Break Line

					PEN temp_pen
					FILL temp_FillTypeAbove
					SET LINE_TYPE temp_line

					LINE2 0, (NumStline-1)*td-ns-covthicky+brkLineY,flw, (NumStline+1)*td-ns-covthicky+brkLineY


					POLY2_b 5, 1+FullFill, gs_fill_pen, temp_BackPen,
						0, (NumStline-1)*td-ns-covthicky+brkLineY, 0,
						flw, (NumStline+1)*td-ns-covthicky+brkLineY, 1,
						flw, (rnu-1)*td, TopLineMask141920_0,
						0, (rnu-1)*td, 1,
						0, (NumStline-1)*td-ns-covthicky+brkLineY, -1

					SET LINE_TYPE temp_line
					IF top_line = 1 AND topTreadLevel_m = TOPTREAD_ATFLOOR THEN
						POLY2_b 5, 1+FullFill, gs_fill_pen, temp_BackPen,
							0, (rnu-1)*td+temp_TopTread, 1,
							flw, (rnu-1)*td+temp_TopTread, 1,
							flw, (rnu-1)*td-tempLine141920, TopLineMask141920_1,
							0, (rnu-1)*td-tempLine141920, 1,
							0, (rnu-1)*td+temp_TopTread, -1

						HOTLINE2 0, (rnu-1)*td,flw, (rnu-1)*td
					ENDIF

					BreakUNID=2050

					!!! BREAK LINE
					HOTSPOT2 flw/2,		(NumStline)*td-ns-covthicky, BreakUNID, brkLineY, 1+128 : BreakUNID=BreakUNID+1
					HOTSPOT2 flw/2,		(NumStline)*td-ns-covthicky-1, BreakUNID, brkLineY, 3 : BreakUNID=BreakUNID+1
					HOTSPOT2 flw/2,		(NumStline)*td-ns-covthicky+brkLineY, BreakUNID, brkLineY, 2 : BreakUNID=BreakUNID+1

					HOTSPOT2 0, (NumStline-1)*td-ns-covthicky+brkLineY, BreakUNID: BreakUNID=BreakUNID+1
					HOTSPOT2 flw, (NumStline+1)*td-ns-covthicky+brkLineY, BreakUNID: BreakUNID=BreakUNID+1
				ENDIF


			ELSE
				if breakline_style_m = BREAKLINE_ZIGZAG_CHI then
					angle_breakline=ATN(2*td/flw)
					ZigZag1Y=(2/5*flw)*tan(angle_breakline)
					ZigZag2Y=(2/5*flw)*tan(angle_breakline)

					IF gs_2DContourBelow=1 THEN

						PEN gs_cont_pen
						SET LINE_TYPE solid_line

						IF bottom_line = 1 and firstTreadLevel_m = FIRSTTREAD_ATFLOOR THEN
							POLY2_b 5, 1+2+64, gs_fill_pen, gs_back_pen,
								0, 0-ns-covthicky, 0,
								flw, 0-ns-covthicky, 1,
								flw, 0-ns-covthicky-temp_FirstTread, 1,
								0, 0-ns-covthicky-temp_FirstTread, 1,
								0, 0-ns-covthicky, -1

							HOTLINE2 0, 0-ns-covthicky,flw, 0-ns-covthicky
						ENDIF

						POLY2_b 9, 1+2+64, gs_fill_pen, gs_back_pen,
							0, 0-ns-covthicky, 1,
							flw, 0-ns-covthicky, 1,
							flw, (NumStline+1)*td-ns-covthicky, 1,
							6/10*flw,(NumStline+1)*td-ns-covthicky-ZigZag1Y, 1,
							6/10*flw,(NumStline-1)*td-ns-covthicky+ZigZag1Y, 1,
							4/10*flw,(NumStline+1)*td-ns-covthicky-ZigZag1Y+brkLineY, 1,
							4/10*flw,(NumStline-1)*td-ns-covthicky+ZigZag1Y, 1,
							0, (NumStline-1)*td-ns-covthicky, 1,
							0, 0-ns-covthicky, -1

						BreakUNID=2100

						HOTSPOT2 0, (NumStline-1)*td-ns-covthicky, BreakUNID: BreakUNID=BreakUNID+1
						HOTSPOT2 flw, (NumStline+1)*td-ns-covthicky, BreakUNID: BreakUNID=BreakUNID+1

					ENDIF



					IF gs_2DContourAbove=1 THEN		!!IF No Contour above Break Line

						PEN temp_pen
						FILL temp_FillTypeAbove
						SET LINE_TYPE temp_line

						POLY2_b 9, 1+FullFill, gs_fill_pen, temp_BackPen,
							0, (NumStline-1)*td-ns-covthicky+brkLineY, 1,
							4/10*flw, (NumStline-1)*td -ns-covthicky + brkLineY +ZigZag2Y, 1,
							4/10*flw, (NumStline+1)*td -ns-covthicky + brkLineY-ZigZag1Y, 1,
							6/10*flw, (NumStline-1)*td -ns-covthicky+ZigZag1Y, 1,
							6/10*flw, (NumStline-1)*td -ns-covthicky+ brkLineY+ZigZag2Y+2*(td-ZigZag1Y), 1,
							flw, (NumStline+1)*td-ns-covthicky+brkLineY, 1,
							flw, (rnu-1)*td, TopLineMask141920_0,
							0, (rnu-1)*td, 1,
							0, (NumStline-1)*td-ns-covthicky+brkLineY, -1

						IF top_line = 1 AND topTreadLevel_m = TOPTREAD_ATFLOOR THEN
							POLY2_b 5, 1+FullFill, gs_fill_pen, temp_BackPen,
								0, (rnu-1)*td+temp_TopTread, 1,
								flw, (rnu-1)*td+temp_TopTread, 1,
								flw, (rnu-1)*td-tempLine19, 0,
								0, (rnu-1)*td-tempLine19, 1,
								0, (rnu-1)*td+temp_TopTread, -1

							HOTLINE2 0, (rnu-1)*td,flw, (rnu-1)*td
						ENDIF

						BreakUNID=2150
						!!! BREAK LINE
						HOTSPOT2 flw/2,		(NumStline)*td-ns-covthicky, BreakUNID, brkLineY, 1+128 : BreakUNID=BreakUNID+1
						HOTSPOT2 flw/2,		(NumStline)*td-ns-covthicky-1, BreakUNID, brkLineY, 3 : BreakUNID=BreakUNID+1
						HOTSPOT2 flw/2,		(NumStline)*td-ns-covthicky+brkLineY, BreakUNID, brkLineY, 2 : BreakUNID=BreakUNID+1

						HOTSPOT2 0, (NumStline-1)*td-ns-covthicky+brkLineY, BreakUNID: BreakUNID=BreakUNID+1
						HOTSPOT2 flw, (NumStline+1)*td-ns-covthicky+brkLineY, BreakUNID: BreakUNID=BreakUNID+1
					ENDIF
				else	!!! breakline_style=`Zigzag`
					angle_breakline=ATN(2*td/flw)
					ZigZag1Y=(2/5*flw)*tan(angle_breakline)
					ZigZag2Y=(7/20*flw)*tan(angle_breakline)

					IF gs_2DContourBelow=1 THEN

						PEN gs_cont_pen
						SET LINE_TYPE solid_line

						IF bottom_line = 1 and firstTreadLevel_m = FIRSTTREAD_ATFLOOR THEN
							POLY2_b 5, 1+2+64, gs_fill_pen, gs_back_pen,
								0, 0-ns-covthicky, 0,
								flw, 0-ns-covthicky, 1,
								flw, 0-ns-covthicky-temp_FirstTread, 1,
								0, 0-ns-covthicky-temp_FirstTread, 1,
								0, 0-ns-covthicky, -1

							HOTLINE2 0, 0-ns-covthicky,flw, 0-ns-covthicky
						ENDIF

						POLY2_b 9, 1+2+64, gs_fill_pen, gs_back_pen,
							0, 0-ns-covthicky, 1,
							flw, 0-ns-covthicky, 1,
							flw, (NumStline+1)*td-ns-covthicky, 1,
							6/10*flw,(NumStline+1)*td-ns-covthicky-ZigZag1Y, 1,
							6/10*flw,(NumStline-1)*td-ns-covthicky+ZigZag1Y, 1,
							4/10*flw,(NumStline+1)*td-ns-covthicky-ZigZag1Y, 1,
							4/10*flw,(NumStline-1)*td-ns-covthicky+ZigZag1Y, 1,
							0, (NumStline-1)*td-ns-covthicky, 1,
							0, 0-ns-covthicky, -1

						BreakUNID=2100

						HOTSPOT2 0, (NumStline-1)*td-ns-covthicky, BreakUNID: BreakUNID=BreakUNID+1
						HOTSPOT2 flw, (NumStline+1)*td-ns-covthicky, BreakUNID: BreakUNID=BreakUNID+1

					ENDIF



					IF gs_2DContourAbove=1 THEN		!!IF No Contour above Break Line

						PEN temp_pen
						FILL temp_FillTypeAbove
						SET LINE_TYPE temp_line

						POLY2_b 9, 1+FullFill, gs_fill_pen, temp_BackPen,
							0, (NumStline-1)*td-ns-covthicky+brkLineY, 1,
							7/20*flw, (NumStline-1)*td -ns-covthicky + brkLineY +ZigZag2Y, 1,
							7/20*flw, (NumStline-1)*td -ns-covthicky + brkLineY+ZigZag2Y+2*(td-ZigZag1Y), 1,
							11/20*flw, (NumStline-1)*td -ns-covthicky+ brkLineY+ZigZag2Y, 1,
							11/20*flw, (NumStline-1)*td -ns-covthicky+ brkLineY+ZigZag2Y+2*(td-ZigZag1Y), 1,
							flw, (NumStline+1)*td-ns-covthicky+brkLineY, 1,
							flw, (rnu-1)*td, TopLineMask141920_0,
							0, (rnu-1)*td, 1,
							0, (NumStline-1)*td-ns-covthicky+brkLineY, -1

						IF top_line = 1 AND topTreadLevel_m = TOPTREAD_ATFLOOR THEN
							POLY2_b 5, 1+FullFill, gs_fill_pen, temp_BackPen,
								0, (rnu-1)*td+temp_TopTread, 1,
								flw, (rnu-1)*td+temp_TopTread, 1,
								flw, (rnu-1)*td-tempLine19, 0,
								0, (rnu-1)*td-tempLine19, 1,
								0, (rnu-1)*td+temp_TopTread, -1

							HOTLINE2 0, (rnu-1)*td,flw, (rnu-1)*td
						ENDIF

						BreakUNID=2150
						!!! BREAK LINE
						HOTSPOT2 flw/2,		(NumStline)*td-ns-covthicky, BreakUNID, brkLineY, 1+128 : BreakUNID=BreakUNID+1
						HOTSPOT2 flw/2,		(NumStline)*td-ns-covthicky-1, BreakUNID, brkLineY, 3 : BreakUNID=BreakUNID+1
						HOTSPOT2 flw/2,		(NumStline)*td-ns-covthicky+brkLineY, BreakUNID, brkLineY, 2 : BreakUNID=BreakUNID+1

						HOTSPOT2 0, (NumStline-1)*td-ns-covthicky+brkLineY, BreakUNID: BreakUNID=BreakUNID+1
						HOTSPOT2 flw, (NumStline+1)*td-ns-covthicky+brkLineY, BreakUNID: BreakUNID=BreakUNID+1
					ENDIF
				endif
			ENDIF



	ENDIF

			!!! HOTLINE AT CONTOURS
			HOTLINE2 0,0-ns-covthicky-temp_FirstTread,flw,0-ns-covthicky-temp_FirstTread

			IF gs_2DContourAbove=1 THEN
				HOTLINE2 0,(rnu-1)*td+temp_TopTread,flw,(rnu-1)*td+temp_TopTread
			ENDIF

			IF brk=0 OR brk=1 AND gs_2DContourAbove=1 THEN
				HOTLINE2 0,0-ns-covthicky-temp_FirstTread,0,(rnu-1)*td+temp_TopTread
				HOTLINE2 flw,0-ns-covthicky-temp_FirstTread,flw,(rnu-1)*td+temp_TopTread
			ENDIF

			IF ABS(chStoryDist)< EPS THEN
				IF brk=1 AND gs_2DContourAbove=0 THEN
					HOTLINE2 0,0-ns-covthicky-temp_FirstTread,0,(NumStline-1)*td-ns-covthicky
					HOTLINE2 flw,0-ns-covthicky-temp_FirstTread,flw,(NumStline+1)*td-ns-covthicky
				ENDIF
			ENDIF

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!! *** TREADS *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

	IF brk=0 THEN		!!! IF NO BREAK LINE

		IF chStoryDist > -EPS  then

			IF gs_2DTread=1 THEN
				ADD2 0,td-ns-covthicky
					FOR numTread=1 to rnu-2
						PEN gs_cont_pen
						SET LINE_TYPE solid_line
						LINE2 0,0,flw,0
						ADD2 0,td
					NEXT numTread
					DEL rnu-2
				DEL 1

				IF ns OR covthicky > 0 THEN	!!! IF TREAD NOSING > 0
				ADD2 0,0
					FOR numTread=1 to rnu-1
						PEN gs_DashLinePen
						SET LINE_TYPE dash_line
						LINE2 0,0,flw,0
						ADD2 0,td
					NEXT numTread
					DEL rnu-1
				DEL 1

				IF top_line = 1 AND topTreadLevel_m = TOPTREAD_ATFLOOR THEN
				LINE2 0, (rnu-1)*td-ns-covthicky+tempLine1420,flw, (rnu-1)*td-ns-covthicky+tempLine1420
				HOTLINE2 0, (rnu-1)*td-ns-covthicky+tempLine1420,flw, (rnu-1)*td-ns-covthicky+tempLine1420
				ENDIF

				ENDIF
			ENDIF

		ENDIF

	ELSE	!!! with Break Line

		!!! TREAD UNDER BREAK LINE

		IF gs_2DTread=1 THEN
			ADD2 0,td-ns-covthicky

				FOR numTread=1 to NumStline
					StartSolid=0
					IF breakline_style_m = BREAKLINE_STRAIGHT THEN
						IF numTread=NumStline THEN StartSolid=flw/2
						ELSE
						IF numTread=NumStline THEN StartSolid=flw*6/10
					ENDIF

					PEN gs_cont_pen

					SET LINE_TYPE solid_line
					!!! NOSING LINE

					LINE2 StartSolid,0,flw,0
					HOTLINE2 StartSolid,0,flw,0


					IF ns OR covthicky > 0 THEN	!!! IF TREAD NOSING > 0

						StartDashed=0
						IF breakline_style_m = BREAKLINE_STRAIGHT THEN

							IF numTread=NumStline THEN StartDashed=flw/2+((ns+covthicky)*flw)/(2*td)
							IF numTread=NumStline-1 THEN StartDashed=((ns+covthicky)*flw)/(2*td)
						ELSE

							IF distZigZag >= 4/10*flw THEN
							distZigZag = 4/10*flw
							ELSE
							distZigZag=(flw*(td-ns-covthicky))/(2*td)
							ENDIF

							IF numTread=NumStline THEN StartDashed=flw-distZigZag
							IF numTread=NumStline-1 THEN StartDashed=(flw*(ns+covthicky))/(2*td)
						ENDIF

						ADD2 0,ns+covthicky
							PEN temp_RiserLinePen
							SET LINE_TYPE temp_RiserLine
							!!! DASHED LINE
							LINE2 StartDashed,0,flw,0
							HOTLINE2 StartDashed,0,flw,0
						DEL 1
						ENDIF

					ADD2 0,td
				NEXT numTread
				DEL NumStline
			DEL 1

			!!! FIRST RISER
			IF ns OR covthicky> 0 THEN	!!! IF TREAD NOSING > 0
					LINE2 0, 0,flw, 0
			ENDIF
		ENDIF

		!!! TREADS ABOVE BREAK LINE

		IF gs_2DTreadAbove=1 THEN
			ADD2 0,(NumStline)*td-ns-covthicky
				FOR numTread=1 to rnu-NumStline-1

					EndSolid=flw
					IF breakline_style_m = BREAKLINE_STRAIGHT THEN
						IF numTread=1 THEN EndSolid=flw/2-brkLineX
						IF numTread=2 THEN EndSolid=flw-brkLineX
					ELSE
						if breakline_style_m = BREAKLINE_ZIGZAG_CHI then
							ZigZagCorrection = 1/10
						else
							ZigZagCorrection = 3/20
						endif
						IF brkLineX <= ZigZagCorrection*flw THEN
							IF numTread=1 THEN EndSolid=flw/2-ZigZagCorrection*flw
							else
							IF numTread=1 THEN EndSolid=flw/2-brkLineX
						endif


						IF (flw/2-brkLineX) <= (4/20-ZigZagCorrection)*flw THEN
							IF numTread=2 THEN EndSolid=flw/2-ZigZagCorrection*flw
							else
							IF numTread=2 THEN EndSolid=flw-brkLineX
						endif

					ENDIF

					PEN gs_DashLinePen
					SET LINE_TYPE temp_line
					!!! SOLID LINE
					LINE2 0,0,EndSolid,0
					IF _iSymbolType = 19 THEN HOTLINE2 0,0,EndSolid,0

					!!! DASHED LINE/RISER
					IF gs_2DRiserAbove=1 THEN
						IF ns OR covthicky> 0 THEN	!!! IF TREAD NOSING > 0
							EndDashed=flw
							IF breakline_style_m = BREAKLINE_STRAIGHT THEN
								IF numTread=1 THEN EndDashed=flw/2+((ns+covthicky)*flw)/(2*td)-brkLineX
								IF numTread=2 THEN EndDashed=flw-brkLineX+((ns+covthicky)*flw)/(2*td)
							ELSE

								IF distZigZag <= (0.5-ZigZagCorrection)*flw THEN
								distZigZag = (0.5-ZigZagCorrection)*flw
								ELSE
								distZigZag=(flw*(td/2+ns+covthicky))/(2*td)
								ENDIF

								IF (brkLineX-((ns+covthicky)*flw)/(2*td)) <= ZigZagCorrection*flw  AND flw/2+((ns+covthicky)*flw)/(2*td)-brkLineX< flw/2+(4/20-ZigZagCorrection)*flw THEN
									IF numTread=1 THEN EndDashed=flw/2-ZigZagCorrection*flw
									else
									IF numTread=1 THEN EndDashed=flw/2-brkLineX+((ns+covthicky)*flw)/(2*td)
								endif

								IF (flw-brkLineX+((ns+covthicky)*flw)/(2*td)) >= flw THEN
									IF numTread=2 THEN EndDashed=flw
									else
									IF numTread=2 THEN EndDashed=flw-brkLineX+((ns+covthicky)*flw)/(2*td)
								endif

							ENDIF

								ADD2 0,ns+covthicky
									PEN temp_RiserLinePen
									SET LINE_TYPE temp_RiserLine
									!!! DASHED LINE
									LINE2 0,0,EndDashed,0
								DEL 1
						ENDIF
					ENDIF

					ADD2 0,td
				NEXT numTread
				DEL rnu-NumStline-1
			DEL 1

			!!! *** TOP RISER
			IF ns OR covthicky> 0 THEN	!!! IF TREAD NOSING > 0
				IF top_line = 1 AND topTreadLevel_m = TOPTREAD_ATFLOOR AND gs_2DRiserAbove = 1 THEN
				LINE2 0, (rnu-1)*td-ns-covthicky+tempLine1420,flw, (rnu-1)*td-ns-covthicky+tempLine1420
				ENDIF
			ENDIF

		ENDIF

	ENDIF

		!!! TREADS AND RISER HOTLINE
		IF chStoryDist > -EPS  then
		IF brk=0 AND gs_2DTread=1 OR brk=1 AND gs_2DTread=1 AND gs_2DTreadAbove=1 AND gs_2DRiserAbove=1  THEN


				ADD2 0,td-ns-covthicky
					FOR numTread=1 to rnu-2

						HOTLINE2 0,0,flw,0
						ADD2 0,td
					NEXT numTread
					DEL rnu-2
				DEL 1


				IF ns OR covthicky > 0 THEN	!!! IF TREAD NOSING > 0
				ADD2 0,0
					FOR numTread=1 to rnu-1
						HOTLINE2 0,0,flw,0
						ADD2 0,td
					NEXT numTread
					DEL rnu-1
				DEL 1
				ENDIF

		ENDIF
		ENDIF


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!*** WALKING LINE / ARROWHEAD / START END SYMBOL*** !!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

IF walkl THEN

DRAWINDEX 40
!!! Arrow Size !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

		IF td> 0.26 then
		ArrowDist=gs_ArrowHalfWidth
		ELSE
		ArrowDist=gs_ArrowHalfWidth
		ENDIF

		!!! ********** Arrowhead Contour Conditions
		IF arrow_style_m = ARROW_STYLE_1 OR arrow_style_m = ARROW_STYLE_2 OR arrow_style_m = ARROW_STYLE_3 THEN
			temp_ArrowMask=0
		else
			temp_ArrowMask=1
		endif

		!!! ********** Arrowhead Contour Points Conditions
		IF arrow_style_m = ARROW_STYLE_1 OR arrow_style_m = ARROW_STYLE_4 OR arrow_style_m = ARROW_STYLE_7 THEN
			temp_1XContour=0
			temp_2XContour=flw
			temp_1YContourTop=(rnu-2)*td-ns-covthicky
			temp_2YContourTop=(rnu-2)*td-ns-covthicky
			temp_1YContourBreak=(NumStline-1)*td-ns-covthicky
			temp_2YContourBreak=(NumStline-1)*td-ns-covthicky
		endif

		IF arrow_style_m = ARROW_STYLE_2 OR arrow_style_m = ARROW_STYLE_5 OR arrow_style_m = ARROW_STYLE_8 THEN
			temp_1XContour=flw/4
			temp_2XContour=flw*3/4
			temp_1YContourTop=(rnu-2)*td-ns-covthicky
			temp_2YContourTop=(rnu-2)*td-ns-covthicky
			temp_1YContourBreak=(NumStline-1)*td-ns-covthicky
			temp_2YContourBreak=(NumStline-1)*td-ns-covthicky
		endif

		IF arrow_style_m = ARROW_STYLE_3 OR arrow_style_m = ARROW_STYLE_6 OR arrow_style_m = ARROW_STYLE_9 THEN
			temp_1XContour=flw/2-ArrowDist
			temp_2XContour=flw/2+ArrowDist
			temp_1YContourTop=(rnu-1)*td-gs_ArrowHeight
			temp_2YContourTop=(rnu-1)*td-gs_ArrowHeight
			temp_1YContourBreak=(NumStline)*td-ns-covthicky-gs_ArrowHeight
			temp_2YContourBreak=(NumStline)*td-ns-covthicky-gs_ArrowHeight
		endif

		!!! ********** Arrowhead Fill Contour Points Conditions
		IF arrow_style_m = ARROW_STYLE_4 OR arrow_style_m = ARROW_STYLE_5 OR arrow_style_m = ARROW_STYLE_6 THEN
			temp_1XFill=temp_1XContour
		endif

		IF arrow_style_m = ARROW_STYLE_7 OR arrow_style_m = ARROW_STYLE_8 OR arrow_style_m = ARROW_STYLE_9 THEN
			temp_1XFill=flw/2
		endif

		!!! ********** Walking Line Length Conditions
		temp_wLineLength = 0
		temp_wLineLengthAbove = 0
		IF arrow_style_m = ARROW_STYLE_4 OR arrow_style_m = ARROW_STYLE_5 THEN temp_wLineLength = td+ns+covthicky
		IF arrow_style_m = ARROW_STYLE_4 OR arrow_style_m = ARROW_STYLE_5 THEN temp_wLineLengthAbove = td+ns+covthicky
		IF arrow_style_m = ARROW_STYLE_6 THEN temp_wLineLength = gs_ArrowHeight
		IF arrow_style_m = ARROW_STYLE_6 THEN temp_wLineLengthAbove = gs_ArrowHeight


		PEN gs_wLinePen
		Fill gs_ArrowFill

		!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
		IF brk THEN				!!! with Break Line !!!
		!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

				!!! ********** Geometry of ArrowHead Contour at Break Line

				IF gs_2DContourBelow=1 THEN

					SET LINE_TYPE gs_wLineType1
					POLY2_b 4, 1, gs_ArrowFillPen, gs_fill_pen,
						temp_1XContour,temp_1YContourBreak, temp_ArrowMask,
						temp_2XContour,temp_2YContourBreak, 1,
						flw/2,(NumStline)*td-ns-covthicky, 1,
						temp_1XContour,temp_1YContourBreak, -1

					IF gs_ArrowFillPen<>0 THEN
						IF arrow_style_m <> ARROW_STYLE_1 AND arrow_style_m <> ARROW_STYLE_2 AND arrow_style_m <> ARROW_STYLE_3 THEN
							!!! Geometry of ArrowHead Fill
							POLY2_b 4, 2, gs_ArrowFillPen, gs_fill_pen,
								temp_1XFill,temp_1YContourBreak, temp_ArrowMask,
								temp_2XContour,temp_2YContourBreak, 1,
								flw/2,(NumStline)*td-ns-covthicky, 1,
								temp_1XFill,temp_1YContourBreak, -1
						ENDIF
					ENDIF
				ENDIF


				IF gs_2DContourAbove=1 THEN		!!IF No Contour above Break Line
				ADD2 0,-tempLine19
					SET LINE_TYPE gs_wLineTypeAbove
					!!! ********* Geometry of ArrowHead Contour
					POLY2_b 4, 1, gs_ArrowFillPen, gs_fill_pen,
						temp_1XContour,temp_1YContourTop, temp_ArrowMask,
						temp_2XContour,temp_2YContourTop, 1,
						flw/2,(rnu-1)*td, 1,
						temp_1XContour,temp_1YContourTop, -1

						IF gs_ArrowFillPenAbove<>0 THEN
							IF arrow_style_m <> ARROW_STYLE_1 AND arrow_style_m <> ARROW_STYLE_2 AND arrow_style_m <> ARROW_STYLE_3 THEN
								!!! Geometry of ArrowHead Fill
								POLY2_b 4, 2, gs_ArrowFillPenAbove, gs_fill_pen,
									temp_1XFill,temp_1YContourTop, temp_ArrowMask,
									temp_2XContour,temp_2YContourTop, 1,
									flw/2,(rnu-1)*td, 1,
									temp_1XFill,temp_1YContourTop, -1
							ENDIF
						ENDIF
				DEL 1
				ENDIF


				!!! ********** Walking Line Length under Break Line
				IF gs_2DContourBelow=1 THEN
					SET LINE_TYPE gs_wLineType1
					IF arrow_style_m = ARROW_STYLE_6 THEN
						line2 flw/2,-ns-covthicky, flw/2, (NumStline)*td-ns-covthicky-temp_wLineLength
					ELSE
						line2 flw/2,-ns-covthicky, flw/2, (NumStline)*td-ns-covthicky-temp_wLineLength
					ENDIF
				ENDIF

				!!! ********** Walkin Line Length Above Break Line
				IF gs_2DContourAbove=1 THEN		!!IF No Contour above Break Line
					SET LINE_TYPE gs_wLineTypeAbove
					IF breakline_style_m = BREAKLINE_STRAIGHT THEN
					line2 flw/2,(NumStline)*td-ns-covthicky+brkLineY, flw/2, (rnu-1)*td-temp_wLineLengthAbove-tempLine19
					ELSE
					line2 flw/2,(NumStline)*td-ns-covthicky+brkLineY-(td-ZigZag1Y), flw/2, (rnu-1)*td-temp_wLineLengthAbove-tempLine19
					ENDIF
				ENDIF


		!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
		ELSE			!!! NO BREAK LINE !!!
		!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

				SET LINE_TYPE temp_wLineType

				!!! ********** Walking Line Length
				line2 flw/2,-ns-covthicky, flw/2, (rnu-1)*td-temp_wLineLength


				!!! ********** Geometry of ArrowHead Contour
				POLY2_b 4, 1, gs_ArrowFillPen, gs_fill_pen,
					temp_1XContour,temp_1YContourTop, temp_ArrowMask,
					temp_2XContour,temp_2YContourTop, 1,
					flw/2,(rnu-1)*td, 1,
					temp_1XContour,temp_1YContourTop, -1

					IF gs_ArrowFillPen<>0 THEN
						IF arrow_style_m <> ARROW_STYLE_1 AND arrow_style_m <> ARROW_STYLE_2 AND arrow_style_m <> ARROW_STYLE_3 THEN
							!!! Geometry of ArrowHead Fill
							POLY2_b 4, 2, gs_ArrowFillPen, gs_fill_pen,
								temp_1XFill,temp_1YContourTop, temp_ArrowMask,
								temp_2XContour,temp_2YContourTop, 1,
								flw/2,(rnu-1)*td, 1,
								temp_1XFill,temp_1YContourTop, -1
						ENDIF
					ENDIF

		ENDIF


				!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
				!!! ********** Start End Symbol ********** !!!
				!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

				DRAWINDEX 45
				IF brk THEN
				SET LINE_TYPE gs_wLineType1
				ELSE
				SET LINE_TYPE temp_wLineType
				ENDIF

				Fill gs_StartEndFill

					IF gs_StartEndFillPen<>0 THEN temp_FillStatus=2
					IF gs_StartEndFillPen=0 THEN temp_FillStatus=0

					IF gs_2DContourBelow=1 THEN

						IF gs_StartEndStyle_m = STARTSYMB_STYLE1 THEN

							POLY2_B 2, 1+temp_FillStatus, gs_StartEndFillPen, gs_fill_pen,
							flw/2,-ns-covthicky,901,
							gs_CircleRadius,360,4001

						ENDIF


						IF gs_StartEndStyle_m = STARTSYMB_STYLE2 THEN

							FOR kk=1 TO 2
								POLY2_B 6, 1+temp_FillStatus, gs_StartEndFillPen, gs_fill_pen,
									flw/2,-ns-covthicky,1,
									flw/2+gs_CircleRadius,-ns-covthicky,1,
									flw/2,-ns-covthicky,901,
									0,90,4001,
									flw/2,-ns-covthicky+gs_CircleRadius,0,
									flw/2,-ns-covthicky,-1

								POLY2_B 6, 1, gs_StartEndFillPen, gs_fill_pen,
									flw/2,-ns-covthicky,1,
									flw/2,-ns-covthicky+gs_CircleRadius,1,
									flw/2,-ns-covthicky,901,
									0,90,4001,
									flw/2-gs_CircleRadius,-ns-covthicky,0,
									flw/2,-ns-covthicky,-1
							ROT2 180
							ADD2 -flw,2*(ns+covthicky)
							NEXT kk
							DEL 4

						ENDIF

						IF gs_StartEndStyle_m = STARTSYMB_STYLE3 THEN
							LINE2 flw/2+gs_StartWidth,-ns-covthicky-gs_StartHeight,flw/2+gs_StartWidth,-ns-covthicky+gs_StartHeight
							LINE2 flw/2-gs_StartWidth,-ns-covthicky-gs_StartHeight,flw/2-gs_StartWidth,-ns-covthicky+gs_StartHeight
						ENDIF


						!!! ********* Hotspots of StartEnd Symbol
						IF gs_StartEndStyle_m = STARTSYMB_STYLE1 OR gs_StartEndStyle_m = STARTSYMB_STYLE2 THEN

							ADD2 flw/2,-ns-covthicky

								StartSymbUNID=3000

								FOR kk=1 to 4
									HOTSPOT2 0, 0, StartSymbUNID, gs_CircleRadius, 1+128		:StartSymbUNID=StartSymbUNID+1
									HOTSPOT2 -1, 0, StartSymbUNID, gs_CircleRadius, 3+128	:StartSymbUNID=StartSymbUNID+1
									HOTSPOT2 gs_CircleRadius, 0, StartSymbUNID, gs_CircleRadius,2	:StartSymbUNID=StartSymbUNID+1

									ROT2 90
								NEXT KK
								DEL 4
							DEL 1
						ENDIF

						IF gs_StartEndStyle_m = STARTSYMB_STYLE3 THEN

							ADD2 flw/2,0

								StartSymbUNID=3100

								FOR kk=1 to 2
									ADD2 0, -ns-covthicky
										!!! Symbol Width/2
										HOTSPOT2 0, -gs_StartHeight, StartSymbUNID, gs_StartWidth, 1+128		:StartSymbUNID=StartSymbUNID+1
										HOTSPOT2 -1, -gs_StartHeight, StartSymbUNID, gs_StartWidth, 3	:StartSymbUNID=StartSymbUNID+1
										HOTSPOT2 gs_StartWidth, -gs_StartHeight, StartSymbUNID, gs_StartWidth,2	:StartSymbUNID=StartSymbUNID+1

										HOTSPOT2 0, gs_StartHeight, StartSymbUNID, gs_StartWidth, 1+128		:StartSymbUNID=StartSymbUNID+1
										HOTSPOT2 -1, gs_StartHeight, StartSymbUNID, gs_StartWidth, 3	:StartSymbUNID=StartSymbUNID+1
										HOTSPOT2 gs_StartWidth, gs_StartHeight, StartSymbUNID, gs_StartWidth,2	:StartSymbUNID=StartSymbUNID+1
									DEL 1

									ADD2 0, -ns-covthicky
										!!! Symbol Height
										HOTSPOT2 gs_StartWidth, 0, StartSymbUNID, gs_StartHeight, 1+128		:StartSymbUNID=StartSymbUNID+1
										HOTSPOT2 gs_StartWidth, -1, StartSymbUNID, gs_StartHeight, 3	:StartSymbUNID=StartSymbUNID+1
										HOTSPOT2 gs_StartWidth, gs_StartHeight, StartSymbUNID, gs_StartHeight,2	:StartSymbUNID=StartSymbUNID+1

										HOTSPOT2 gs_StartWidth, 0, StartSymbUNID, gs_StartHeight, 1+128		:StartSymbUNID=StartSymbUNID+1
										HOTSPOT2 gs_StartWidth, 1, StartSymbUNID, gs_StartHeight, 3	:StartSymbUNID=StartSymbUNID+1
										HOTSPOT2 gs_StartWidth, -gs_StartHeight, StartSymbUNID, gs_StartHeight,2	:StartSymbUNID=StartSymbUNID+1
									DEL 1

								MUL2 -1,1
								NEXT kk
								DEL 2
							DEL 1
						ENDIF
					ENDIF

				DRAWINDEX 40
				Fill gs_ArrowFill



		!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
		!!! ********** ARROWHEAD HOTSPOTS ********** !!!
		ArrowUNID=4000
		IF gs_2DContourBelow=1 THEN HOTSPOT2 flw/2,-ns-covthicky,ArrowUNID: ArrowUNID=ArrowUNID+1

		IF brk=0 OR brk=1 AND gs_2DContourAbove=1 THEN

			ArrowUNID=4100
			HOTSPOT2 flw/2,td*(rnu-1)-tempLine19,ArrowUNID: ArrowUNID=ArrowUNID+1

			!!! ********** Hotspot editing of Height and Width of Arrowhead
			IF arrow_style_m = ARROW_STYLE_3 OR arrow_style_m = ARROW_STYLE_6 OR arrow_style_m = ARROW_STYLE_9 THEN

				ArrowUNID=4200

				ADD2 flw/2+ArrowDist,(rnu-1)*td-tempLine19
				ROT2 180
					HOTSPOT2 0,0,	ArrowUNID, gs_ArrowHeight, 1+128 : ArrowUNID=ArrowUNID+1
					HOTSPOT2 0,gs_ArrowHeight, ArrowUNID, gs_ArrowHeight, 2 : ArrowUNID=ArrowUNID+1
					HOTSPOT2 0,-1,	ArrowUNID, gs_ArrowHeight, 3: ArrowUNID=ArrowUNID+1
				DEL 2

				ADD2 flw/2-ArrowDist,(rnu-1)*td-tempLine19
				ROT2 180
					HOTSPOT2 0,0,	ArrowUNID, gs_ArrowHeight, 1+128 : ArrowUNID=ArrowUNID+1
					HOTSPOT2 0,gs_ArrowHeight, ArrowUNID, gs_ArrowHeight, 2 : ArrowUNID=ArrowUNID+1
					HOTSPOT2 0,-1,	ArrowUNID, gs_ArrowHeight, 3: ArrowUNID=ArrowUNID+1
				DEL 2

				ADD2 flw/2,(rnu-1)*td-gs_ArrowHeight-tempLine19
					HOTSPOT2 0,0,	ArrowUNID, gs_ArrowHalfWidth, 1+128 : ArrowUNID=ArrowUNID+1
					HOTSPOT2 gs_ArrowHalfWidth,0, ArrowUNID, gs_ArrowHalfWidth, 2 : ArrowUNID=ArrowUNID+1
					HOTSPOT2 -1,0,	ArrowUNID, gs_ArrowHalfWidth, 3: ArrowUNID=ArrowUNID+1
				DEL 1

				ADD2 flw/2,(rnu-1)*td-gs_ArrowHeight-tempLine19
					HOTSPOT2 0,0,	ArrowUNID, gs_ArrowHalfWidth, 1+128 : ArrowUNID=ArrowUNID+1
					HOTSPOT2 -gs_ArrowHalfWidth,0, ArrowUNID, gs_ArrowHalfWidth, 2 : ArrowUNID=ArrowUNID+1
					HOTSPOT2 01,0,	ArrowUNID, gs_ArrowHalfWidth, 3: ArrowUNID=ArrowUNID+1
				DEL 1
			ENDIF
		ENDIF


		IF brk=1 AND gs_2DContourBelow=1 THEN

			ArrowUNID=4300
			HOTSPOT2 flw/2, (NumStline)*td-ns-covthicky,ArrowUNID: ArrowUNID=ArrowUNID+1

			!!! ********** Hotspot editing of Height and Width of Arrowhead
			IF arrow_style_m = ARROW_STYLE_3 OR arrow_style_m = ARROW_STYLE_6 OR arrow_style_m = ARROW_STYLE_9 THEN

				ArrowUNID=4400
				ADD2 flw/2+ArrowDist,(NumStline)*td-ns-covthicky
				ROT2 180
					HOTSPOT2 0,0,	ArrowUNID, gs_ArrowHeight, 1+128 : ArrowUNID=ArrowUNID+1
					HOTSPOT2 0,gs_ArrowHeight, ArrowUNID, gs_ArrowHeight, 2 : ArrowUNID=ArrowUNID+1
					HOTSPOT2 0,-1,	ArrowUNID, gs_ArrowHeight, 3: ArrowUNID=ArrowUNID+1
				DEL 2

				ADD2 flw/2-ArrowDist,(NumStline)*td-ns-covthicky
				ROT2 180
					HOTSPOT2 0,0,	ArrowUNID, gs_ArrowHeight, 1+128 : ArrowUNID=ArrowUNID+1
					HOTSPOT2 0,gs_ArrowHeight, ArrowUNID, gs_ArrowHeight, 2 : ArrowUNID=ArrowUNID+1
					HOTSPOT2 0,-1,	ArrowUNID, gs_ArrowHeight, 3: ArrowUNID=ArrowUNID+1
				DEL 2

				ADD2 flw/2,(NumStline)*td-ns-covthicky-gs_ArrowHeight
					HOTSPOT2 0,0,	ArrowUNID, gs_ArrowHalfWidth, 1+128 : ArrowUNID=ArrowUNID+1
					HOTSPOT2 gs_ArrowHalfWidth,0, ArrowUNID, gs_ArrowHalfWidth, 2 : ArrowUNID=ArrowUNID+1
					HOTSPOT2 -1,0,	ArrowUNID, gs_ArrowHalfWidth, 3: ArrowUNID=ArrowUNID+1
				DEL 1

				ADD2 flw/2,(NumStline)*td-ns-covthicky-gs_ArrowHeight
					HOTSPOT2 0,0,	ArrowUNID, gs_ArrowHalfWidth, 1+128 : ArrowUNID=ArrowUNID+1
					HOTSPOT2 -gs_ArrowHalfWidth,0, ArrowUNID, gs_ArrowHalfWidth, 2 : ArrowUNID=ArrowUNID+1
					HOTSPOT2 01,0,	ArrowUNID, gs_ArrowHalfWidth, 3: ArrowUNID=ArrowUNID+1
				DEL 1
			ENDIF
		ENDIF

	PEN gs_cont_pen
	FILL gs_fill_type
	DRAWINDEX 10
ENDIF


!===============================================================================
! --- Text / Up-Down Text / Numbering ---
!===============================================================================

! --- Oriented View ------------------------------ [

angleViewRot = 0
if bShowRiseAndRunText | walkingDirUPDN_m <> WALKDIRSTR_NONE | bShowNumbering then
	rrr = REQUEST ("View_Rotangle", "", angleViewRot)
endif
totalRotate = (SYMB_ROTANGLE + angleViewRot) MOD 360

! --- Oriented View ------------------------------ ]

! --- Define Font Style --------------------------------------------------------

define style "UPDN" fontType, UPDNfontsize, 5, 0		  	!!- UP/DN

define style "stepnum" fontType, gs_NumTextSize, 1, 0		!! - Numbering

! --- Rise and Run Text -------------------------------------------------------
DRAWINDEX 50

if bShowRiseAndRunText then
	call "Stair_RiseRun_Text" PARAMETERS ALL	totalRotate				= totalRotate,
												iRotateType 			= 1,
												iRiseRunTextPosition	= 1,
												flightWidth				= flw,
												nRisers					= rnu,
												treadHeight				= th,
												treadDepth				= td,
												RiseRunUNID				= 5000
endif


! --- Up and Down Text -------------------------------------------------------
iReadable = 0
if walkingDirUPDN_m <> WALKDIRSTR_NONE and walkl then
	set STYLE "UPDN"
	pen UPDNfontpen

	nTransUPDN = 0
	nTransHotspot = 0
	add2 flw/2+DirUPDN_X,DirUPDN_Y
	nTransUPDN = nTransUPDN + 1
	! Text Rotation - Readable / Parallel with Walking Line / Align with Symbol
	! ----------------------------------------------------------------------
	if typeTextRotation_UpDn_m = 2 then									! Readable
		if (totalRotate > (gs_readable_angle + eps) & totalRotate < (gs_readable_angle + 180 + eps)) then
			rot2 180
			nTransUPDN = nTransUPDN + 1
		endif
	else
		if typeTextRotation_UpDn_m = 1 then								! Parallel with Walking Line
			if not(SYMB_MIRRORED) then
				iReadable = (totalRotate > (gs_readable_angle - 90 + eps) & totalRotate < (gs_readable_angle + 180 - 90 + eps))- not(totalRotate > (gs_readable_angle - 90 + eps) & totalRotate < (gs_readable_angle + 180 - 90 + eps))
			else
				iReadable = (totalRotate < (gs_readable_angle - 90 + eps) | totalRotate > (gs_readable_angle + 180 - 90 + eps))- not(totalRotate < (gs_readable_angle - 90 + eps) | totalRotate > (gs_readable_angle + 180 - 90 + eps))
			endif
			rot2 -90 * iReadable
			nTransUPDN = nTransUPDN + 1
		endif
	endif
	! ----------------------------------------------------------------------
	rot2 AngUPDN
	nTransUPDN = nTransUPDN + 1

	text2 0,0, walkingDirUPDN
	del nTransUPDN

	width	= STW (walkingDirUPDN)/1000*GLOB_SCALE
	rb		= width/2


	UpDownUNID=6000
	hotspot2 flw/2,				DirUPDN_Y,	UpDownUNID, DirUPDN_X, 1+128	: UpDownUNID=UpDownUNID+1
	hotspot2 flw/2-1,			DirUPDN_Y,	UpDownUNID, DirUPDN_X, 3		: UpDownUNID=UpDownUNID+1
	hotspot2 flw/2+DirUPDN_X,	DirUPDN_Y,	UpDownUNID, DirUPDN_X, 2		: UpDownUNID=UpDownUNID+1

	hotspot2 flw/2+DirUPDN_X,	0,			UpDownUNID, DirUPDN_Y, 1+128	: UpDownUNID=UpDownUNID+1
	hotspot2 flw/2+DirUPDN_X,	-1,			UpDownUNID, DirUPDN_Y, 3		: UpDownUNID=UpDownUNID+1
	hotspot2 flw/2+DirUPDN_X,	DirUPDN_Y,	UpDownUNID, DirUPDN_Y, 2		: UpDownUNID=UpDownUNID+1

	ADD2 flw/2+DirUPDN_X,DirUPDN_Y
	nTransHotspot = nTransHotspot +1
	if typeTextRotation_UpDn_m = 1 then	! Parallel with Walking Line
		rot2 -90 * iReadable
		nTransHotspot = nTransHotspot +1
	endif
	hotspot2 0,					0,				UpDownUNID,	AngUPDN,6		: UpDownUNID=UpDownUNID+1
	hotspot2 rb,				0,				UpDownUNID,	AngUPDN,4+128	: UpDownUNID=UpDownUNID+1
	hotspot2 rb*cos(AngUPDN),	rb*sin(AngUPDN),UpDownUNID,	AngUPDN,5		: UpDownUNID=UpDownUNID+1
	del nTransHotspot
endif

! --- Numbering -------------------------------------------------------

if bShowNumbering & (gs_NumBelow | gs_NumAbove) then
	if gs_BreakHeight < ZZYZX then
		if DirNumText_x <= flw/2 then
			tempNumBelow = NumStline
			tempNumAbove = NumStline+1
		else
			tempNumBelow = NumStline+1
			tempNumAbove = NumStline+2
		endif
	else
		tempNumBelow = rnu
	endif

	if gs_NumBelow then
		if gs_NumAbove & gs_BreakHeight < ZZYZX then
			numBegin = 1
			numFinish = rnu
		else
			numBegin = 1
			numFinish = tempNumBelow
		endif
	else
		if gs_NumAbove & gs_BreakHeight < ZZYZX then
			numBegin = tempNumAbove
			numFinish = rnu
		endif
	endif

	set style "stepnum"
	pen gs_NumTextPen
	rrrr = REQUEST ("Height_of_style", "stepnum", strHeight)
	strHeight = strHeight / 1000 * GLOB_SCALE
	nTextPos = 0
	nTextTransformations = 0

	add2 DirNumText_X, -td/2 + DirNumText_Y
	nTextPos = nTextPos + 1
	if not(gs_NumBelow) & gs_NumAbove then
		add2 0, (numBegin-1) * td
		nTextPos = nTextPos + 1
	endif
	for iNumStep = numBegin to numFinish
		add2 0, td
		nTextPos = nTextPos + 1
		! Text Rotation - Readable / Align with Symbol
		! ----------------------------------------------------------------------
		if typeTextRotation_Num_m = 2 then								! Readable
			if (totalRotate > (gs_readable_angle + eps) & totalRotate < (gs_readable_angle + 180 + eps)) then
				rot2 180
				strWidth = STW(str("%.0", iNumStep + nStartNumbering - 1)) / 1000 * GLOB_SCALE
				add2 -strWidth, strHeight
				nTextTransformations = 2
			endif
		endif
		! ----------------------------------------------------------------------

		text2 0,0,iNumStep + nStartNumbering - 1
		if nTextTransformations > 0 then del nTextTransformations
	next iNumStep
	del nTextPos

	if gs_NumBelow then
		NumUNID=7000
		HOTSPOT2 0,				DirNumText_Y, NumUNID, DirNumText_X, 1+128	:NumUNID=NumUNID+1
		HOTSPOT2 -1,			DirNumText_Y, NumUNID, DirNumText_X, 3		:NumUNID=NumUNID+1
		HOTSPOT2 DirNumText_X,	DirNumText_Y, NumUNID, DirNumText_X, 2		:NumUNID=NumUNID+1

		HOTSPOT2 DirNumText_X,	0,				NumUNID, DirNumText_Y, 1+128:NumUNID=NumUNID+1
		HOTSPOT2 DirNumText_X,	-1,				NumUNID, DirNumText_Y, 3	:NumUNID=NumUNID+1
		HOTSPOT2 DirNumText_X,	DirNumText_Y,	NumUNID, DirNumText_Y, 2	:NumUNID=NumUNID+1
	endif
	if gs_NumAbove then
		NumUNID=7100
		HOTSPOT2 0,				DirNumText_Y+(rnu)*td, NumUNID, DirNumText_X, 1+128		:NumUNID=NumUNID+1
		HOTSPOT2 -1,			DirNumText_Y+(rnu)*td, NumUNID, DirNumText_X, 3	:NumUNID=NumUNID+1
		HOTSPOT2 DirNumText_X,	DirNumText_Y+(rnu)*td, NumUNID, DirNumText_X,2	:NumUNID=NumUNID+1

		HOTSPOT2 DirNumText_X,	0+(rnu)*td,				NumUNID, DirNumText_Y, 1+128		:NumUNID=NumUNID+1
		HOTSPOT2 DirNumText_X,	-1+(rnu)*td,			NumUNID, DirNumText_Y, 3	:NumUNID=NumUNID+1
		HOTSPOT2 DirNumText_X,	DirNumText_Y+(rnu)*td,	NumUNID, DirNumText_Y,2	:NumUNID=NumUNID+1
	endif
endif
DRAWINDEX 10

!===============================================================================
! --- Carriage Line ---
!===============================================================================

if bCarriageLineExist then
	bShowCarriagePart1	= 0
	bShowCarriagePart2	= 0
	angle_breakline		= ATN(2*td/flw)

	IF gs_structure_landing_m = STRUCTTYPE_MONOLITH THEN
		atfogo=sqr(td*td*rnu*rnu+th*th*rnu*rnu)
		coss=td*rnu/atfogo
		maxfloorh=sst/coss

		IF iLowerJunctionType = LOWERJUNCTION_FLOOR_OR_LANDING THEN
			IF maxfloorh < lst2 THEN
			  talp = 0
			ELSE
			  talp=td*(maxfloorh-lst2)/th
			ENDIF
		ENDIF
		IF iLowerJunctionType = LOWERJUNCTION_GROUND_FLOOR THEN
			sinn=th/(sqr(td*td+th*th))
			talp=sst/sinn
		endif
		IF topTreadLevel_m = TOPTREAD_BELOWFLOOR THEN
			corrval = td*rnu-td
		ELSE
			corrval=td*rnu
		ENDIF

		carrStart	= talp
		carrEnd		= corrval
		beamLength	= carrEnd - carrStart
	else
		alsoilleszt = ljl
		szel = td*rnu+alsoilleszt

		carrStart	= -alsoilleszt / 2
		carrEnd		= szel
		beamLength	= carrEnd + carrStart
	endif

	beamNum				= 1
	beamThk				= beamx
	beamOffsetRight		= 0
	beamOffsetLeft		= 0
	carriageBaseDist	= flw
	carrBreakLineWidth	= brkLineY

	if NOT(brk) then
		!!!!!******************************      1st RUN
		add2 0, carrStart
			bCarrAboveBreakLine	= 0
			bBreakCarriageLine	= 0
			gosub "carriage"
		del 1
	else
		if gs_2DContourBelow then
			!!!!!******************************      1st RUN
			add2 0, carrStart
				bCarrAboveBreakLine	= 0
				bBreakCarriageLine	= 1
				bShowCarriagePart1	= 1
				bShowCarriagePart2	= 0
				brLineAngle			= angle_breakline
				carrBreakLineDist	= (NumStline) * td - ns - covthicky - carrStart
				gosub "carriage"
			del 1
		endif

		if gs_2DContourAbove then
			!!!!!******************************      1st RUN
			add2 0, carrStart
				bCarrAboveBreakLine	= 1
				bBreakCarriageLine	= 1
				bShowCarriagePart1	= 0
				bShowCarriagePart2	= 1
				brLineAngle			= angle_breakline
				carrBreakLineDist	= (NumStline) * td - ns - covthicky - carrStart
				gosub "carriage"
			del 1
		endif
	endif
endif

!===============================================================================
! --- Railings ---
!===============================================================================

_bShowRailIn2D = 1
if _bShowRailIn2D then
	rx=0	! rail x0
	ry=0	! rail y0

	lx=0	! rail l0
	ly=0	! rail l0

	lrah=td*(rnu-1)

	kisatfog=sqr(td*td+th*th) ! egy lepcsofok atfogoja

	atfogR=sqr(rnu*rnu*(td*td+th*th))+(OverhangRBottom+OverhangRTop)/cos(angle)-kisatfog
	atfogL=sqr(rnu*rnu*(td*td+th*th))+(OverhangLBottom+OverhangLTop)/cos(angle)-kisatfog

	RRailLength=lrah+OverhangRBottom+OverhangRTop
	LRailLength=lrah+OverhangLBottom+OverhangLTop

	top_ry=((OverhangRBottom+OverhangRTop)*th)/td
	top_ly=((OverhangLBottom+OverhangLTop)*th)/td

	IF  firstTreadLevel_m = FIRSTTREAD_ATFLOOR THEN
		IF iLowerJunctionType = LOWERJUNCTION_FLOOR_OR_LANDING THEN
			rx=-OverhangRBottom
			ry=-(OverhangRBottom*th)/td

			lx=-OverhangLBottom
			ly=-(OverhangLBottom*th)/td

		ELSE ! Ground Floor
			rx=-OverhangRBottom
			ry=-(OverhangRBottom*th)/td

			lx=-OverhangLBottom
			ly=-(OverhangLBottom*th)/td
		ENDIF
	ENDIF

	IF  firstTreadLevel_m = FIRSTTREAD_ABOVEFLOOR THEN
		IF iLowerJunctionType = LOWERJUNCTION_FLOOR_OR_LANDING THEN
			rx=-OverhangRBottom
			ry=-(OverhangRBottom*th)/td

			lx=-OverhangLBottom
			ly=-(OverhangLBottom*th)/td
		ELSE ! Ground Floor
			rx=-OverhangRBottom
			ry=-(OverhangRBottom*th)/td

			lx=-OverhangLBottom
			ly=-(OverhangLBottom*th)/td
		ENDIF
	ENDIF


	bShowRailPart1	= 0
	bShowRailPart2	= 0
	breakLineW		= brkLineY
	breakLineDist	= 0
	angle_breakline = ATN(2*td/flw)

	drawindex 30
	fill gs_fill_type

	! --- Left Rail ----------------------------------------------------------------
	if rail_m = 3 | rail_m = 1 then		! Left, Both
		if bSameRails then
			leftRailType_m = rightRailType_m
		endif

		ROT2 90
		ADD2 0, roffl-handRailWidthL/2
		ADD2 lx+bComplexRailLeft*td/2, 0

		brLineDist	= (NumStline-1)*td-ns-covthicky-(td/2 - hrol) * bComplexRailLeft + handRailWidthL * TAN(angle_breakline) + OverhangLBottom - roffl * TAN(angle_breakline)

		PEN railPen
		SET LINE_TYPE railLineType

		if brk then
			if bShowRailOnFloorPlan then
				IF gs_2DContourBelow=1 THEN
					if bSymbolic2D then
						bShowRailOn1stRun		= 1
						bBreakRailLine			= 1
						brLineAngle				= angle_breakline
						bShowRailPart1			= 1
						breakLineDist			= brLineDist
						breakLineW				= brkLineY
						bRailAboveBreakLine		= 0
						gosub "left rail"
					else
						POLY2_b 5, 1+2+64, gs_fill_pen, gs_back_pen,
							-hrol * bComplexRailLeft, handRailWidthL / 2, 1,
							-hrol * bComplexRailLeft, -handRailWidthL / 2, 1,
							brLineDist - hrol * bComplexRailLeft, -handRailWidthL / 2, 1,
							brLineDist - hrol * bComplexRailLeft - handRailWidthL * TAN(angle_breakline), handRailWidthL / 2, 1,
							-hrol * bComplexRailLeft, handRailWidthL / 2, -1
					ENDIF
				endif

				IF gs_2DContourAbove=1 and bShowRailAboveBreakLine THEN	!!IF No Contour above Break Line
					if bSymbolic2D then
						bShowRailOn1stRun		= 1
						bBreakRailLine			= 1
						brLineAngle				= angle_breakline
						bShowRailPart2			= 1
						breakLineDist			= brLineDist
						breakLineW				= brkLineY
						bRailAboveBreakLine		= 1
						gosub "left rail"
					else
						FILL temp_FillTypeAbove
						SET LINE_TYPE temp_line

						POLY2_b 5, 1+FullFill, gs_fill_pen, temp_BackPen,
							brLineDist - hrol * bComplexRailLeft - handRailWidthL * TAN(angle_breakline) + brkLineY, handRailWidthL / 2, 1,
							brLineDist - hrol * bComplexRailLeft + brkLineY, -handRailWidthL / 2, 1,
							LRailLength + hrol * bComplexRailLeft, -handRailWidthL / 2, 1,
							LRailLength + hrol * bComplexRailLeft, handRailWidthL / 2, 1,
							brLineDist - hrol * bComplexRailLeft - handRailWidthL * TAN(angle_breakline) + brkLineY, handRailWidthL / 2, 1
					endif
				ENDIF
			endif

			IF bShowRailAxis THEN
				line_type railAxisLineType
				pen gs_RailAxisPen
				IF gs_2DContourBelow=1 THEN LINE2 -hrol * bComplexRailLeft, 0, brLineDist - hrol * bComplexRailLeft - handRailWidthL / 2 * TAN(angle_breakline), 0
				IF gs_2DContourAbove=1 THEN	LINE2 brLineDist - hrol * bComplexRailLeft - handRailWidthL / 2 * TAN(angle_breakline) + brkLineY, 0, LRailLength + hrol * bComplexRailLeft, 0
			ENDIF
		else
			if bShowRailOnFloorPlan then
				if bSymbolic2D then
					bShowRailOn1stRun		= 1
					bBreakRailLine			= 0
					bRailAboveBreakLine		= 0
					gosub "left rail"
				else
					poly2_b 5, 1+2+64, gs_fill_pen, gs_back_pen,
						-hrol * bComplexRailLeft, handRailWidthL / 2, 1,
						-hrol * bComplexRailLeft, -handRailWidthL / 2, 1,
						LRailLength + hrol * bComplexRailLeft, -handRailWidthL / 2, 1,
						LRailLength + hrol * bComplexRailLeft, handRailWidthL / 2, 1,
						-hrol * bComplexRailLeft, handRailWidthL / 2, -1
				endif
			endif

			if bShowRailAxis then
				line_type railAxisLineType
				pen gs_RailAxisPen
				line2 -hrol * bComplexRailLeft, 0, LRailLength + hrol * bComplexRailLeft, 0
			endif
		endif

		del 3

		if bShowRailOnFloorPlan then
			ADD2 0,td/2 * bComplexRailLeft

			IF bSameRails THEN
				RailUNID=1100

				!!! RAIL OFFSET
				HOTSPOT2 handRailWidthL/2,			-OverhangRBottom, RailUNID, roffr, 1+128 : RailUNID=RailUNID+1
				HOTSPOT2 handRailWidthL/2-roffr,	-OverhangRBottom, RailUNID, roffr, 2 : RailUNID=RailUNID+1
				HOTSPOT2 handRailWidthL/2+1,		-OverhangRBottom, RailUNID, roffr, 3 : RailUNID=RailUNID+1

				HOTSPOT2 handRailWidthL/2,			(rnu-1)*td+OverhangRTop, RailUNID, roffr, 1+128 : RailUNID=RailUNID+1
				HOTSPOT2 handRailWidthL/2-roffr,	(rnu-1)*td+OverhangRTop, RailUNID, roffr, 2 : RailUNID=RailUNID+1
				HOTSPOT2 handRailWidthL/2+1,		(rnu-1)*td+OverhangRTop, RailUNID, roffr, 3 : RailUNID=RailUNID+1

				!!! RAIL BOTTOM OVERHANG
				HOTSPOT2 handRailWidthL/2-roffr,		0, RailUNID, OverhangRBottom, 1+128 : RailUNID=RailUNID+1
				HOTSPOT2 handRailWidthL/2-roffr,		1, RailUNID, OverhangRBottom, 3 : RailUNID=RailUNID+1
				HOTSPOT2 handRailWidthL/2-roffr,		-OverhangRBottom, RailUNID, OverhangRBottom, 2 : RailUNID=RailUNID+1

				!!! RAIL TOP OVERHANG
				HOTSPOT2 handRailWidthL/2-roffr,		td*(rnu-1), RailUNID, OverhangRTop, 1+128 : RailUNID=RailUNID+1
				HOTSPOT2 handRailWidthL/2-roffr,		td*(rnu-1)-1, RailUNID, OverhangRTop, 3 : RailUNID=RailUNID+1
				HOTSPOT2 handRailWidthL/2-roffr,		td*(rnu-1)+OverhangRTop, RailUNID, OverhangRTop, 2 : RailUNID=RailUNID+1
			ELSE
				RailUNID=1200

				!!! RAIL OFFSET
				HOTSPOT2 handRailWidthL/2,			-OverhangLBottom, RailUNID, roffl, 1+128 : RailUNID=RailUNID+1
				HOTSPOT2 handRailWidthL/2-roffl,	-OverhangLBottom, RailUNID, roffl, 2 : RailUNID=RailUNID+1
				HOTSPOT2 handRailWidthL/2+1,		-OverhangLBottom, RailUNID, roffl, 3 : RailUNID=RailUNID+1

				HOTSPOT2 handRailWidthL/2,			(rnu-1)*td+OverhangLTop, RailUNID, roffl, 1+128 : RailUNID=RailUNID+1
				HOTSPOT2 handRailWidthL/2-roffl,	(rnu-1)*td+OverhangLTop, RailUNID, roffl, 2 : RailUNID=RailUNID+1
				HOTSPOT2 handRailWidthL/2+1,		(rnu-1)*td+OverhangLTop, RailUNID, roffl, 3 : RailUNID=RailUNID+1

				!!! RAIL BOTTOM OVERHANG
				HOTSPOT2 handRailWidthL/2-roffl,		0, RailUNID, OverhangLBottom, 1+128 : RailUNID=RailUNID+1
				HOTSPOT2 handRailWidthL/2-roffl,		1, RailUNID, OverhangLBottom, 3 : RailUNID=RailUNID+1
				HOTSPOT2 handRailWidthL/2-roffl,		-OverhangLBottom, RailUNID, OverhangLBottom, 2 : RailUNID=RailUNID+1

				!!! RAIL TOP OVERHANG
				HOTSPOT2 handRailWidthL/2-roffl,		td*(rnu-1), RailUNID, OverhangLTop, 1+128 : RailUNID=RailUNID+1
				HOTSPOT2 handRailWidthL/2-roffl,		td*(rnu-1)-1, RailUNID, OverhangLTop, 3 : RailUNID=RailUNID+1
				HOTSPOT2 handRailWidthL/2-roffl,		td*(rnu-1)+OverhangLTop, RailUNID, OverhangLTop, 2 : RailUNID=RailUNID+1
			ENDIF

			del 1
		endif
	endif

	! --- Right Rail ---------------------------------------------------------------
	pen gs_cont_pen
	if rail_m = 2 | rail_m = 1 then		! Right, Both
		ROT2 90
		ADD2 0, -flw-roffr+handRailWidthR/2
		ADD2 rx+bComplexRailRight*td/2, 0

		brLineDist	= (NumStline+1)*td-ns-covthicky-(td/2 - hror) * bComplexRailRight + OverhangRBottom + roffr * TAN(angle_breakline)

		PEN railPen
		SET LINE_TYPE railLineType

		if brk then
			if bShowRailOnFloorPlan then
				IF gs_2DContourBelow=1 THEN
					if bSymbolic2D then
						bShowRailOn1stRun		= 1
						bBreakRailLine			= 1
						brLineAngle				= angle_breakline
						bShowRailPart1			= 1
						breakLineDist			= brLineDist
						breakLineW				= brkLineY
						bRailAboveBreakLine		= 0
						gosub "right rail"
					else
						POLY2_b 5, 1+2+64, gs_fill_pen, gs_back_pen,
							-hror * bComplexRailRight, handRailWidthR / 2, 1,
							-hror * bComplexRailRight, -handRailWidthR / 2, 1,
							brLineDist - hror * bComplexRailRight, -handRailWidthR / 2, 1,
							brLineDist - hror * bComplexRailRight - handRailWidthR * TAN(angle_breakline), handRailWidthR / 2, 1,
							-hror * bComplexRailRight, handRailWidthR / 2, -1
					ENDIF
				endif

				IF gs_2DContourAbove=1 and bShowRailAboveBreakLine THEN	!!IF No Contour above Break Line
					if bSymbolic2D then
						bShowRailOn1stRun		= 1
						bBreakRailLine			= 1
						brLineAngle				= angle_breakline
						bShowRailPart2			= 1
						breakLineDist			= brLineDist
						breakLineW				= brkLineY
						bRailAboveBreakLine		= 1
						gosub "right rail"
					else
						FILL temp_FillTypeAbove
						SET LINE_TYPE temp_line

						POLY2_b 5, 1+FullFill, gs_fill_pen, temp_BackPen,
							brLineDist - hror * bComplexRailRight - handRailWidthR * TAN(angle_breakline) + brkLineY, handRailWidthR / 2, 1,
							brLineDist - hror * bComplexRailRight + brkLineY, -handRailWidthR / 2, 1,
							RRailLength + hror * bComplexRailRight, -handRailWidthR / 2, 1,
							RRailLength + hror * bComplexRailRight, handRailWidthR / 2, 1,
							brLineDist - hror * bComplexRailRight - handRailWidthR * TAN(angle_breakline) + brkLineY, handRailWidthR / 2, 1
					ENDIF
				endif
			endif

			IF bShowRailAxis THEN
				line_type railAxisLineType
				pen gs_RailAxisPen
				IF gs_2DContourBelow=1 THEN LINE2 -hror * bComplexRailRight, 0, brLineDist - hror * bComplexRailRight - handRailWidthR / 2 * TAN(angle_breakline), 0
				IF gs_2DContourAbove=1 THEN	LINE2 brLineDist - hror * bComplexRailRight - handRailWidthR / 2 * TAN(angle_breakline) + brkLineY, 0, RRailLength + hror * bComplexRailRight, 0
			ENDIF
		else
			if bShowRailOnFloorPlan then
				if bSymbolic2D then
					bShowRailOn1stRun		= 1
					bBreakRailLine			= 0
					bRailAboveBreakLine		= 0
					gosub "right rail"
				else
					poly2_b 5, 1+2+64, gs_fill_pen, gs_back_pen,
						-hror * bComplexRailRight, handRailWidthR / 2, 1,
						-hror * bComplexRailRight, -handRailWidthR / 2, 1,
						RRailLength + hror * bComplexRailRight, -handRailWidthR / 2, 1,
						RRailLength + hror * bComplexRailRight, handRailWidthR / 2, 1,
						-hror * bComplexRailRight, handRailWidthR / 2, -1
				endif
			endif

			if bShowRailAxis then
				line_type railAxisLineType
				pen gs_RailAxisPen
				line2 -hror * bComplexRailRight, 0, RRailLength + hror * bComplexRailRight, 0
			endif
		endif

		del 3

		if bShowRailOnFloorPlan then
			ADD2 0,td/2 * bComplexRailRight
				RailUNID=1000

				!!! RAIL OFFSET
				HOTSPOT2 flw-handRailWidthR/2,			-OverhangRBottom, RailUNID, roffr, 1+128 : RailUNID=RailUNID+1
				HOTSPOT2 flw-handRailWidthR/2+roffr,	-OverhangRBottom, RailUNID, roffr, 2 : RailUNID=RailUNID+1
				HOTSPOT2 flw-handRailWidthR/2-1,		-OverhangRBottom, RailUNID, roffr, 3 : RailUNID=RailUNID+1

				HOTSPOT2 flw-handRailWidthR/2,			(rnu-1)*td+OverhangRTop, RailUNID, roffr, 1+128 : RailUNID=RailUNID+1
				HOTSPOT2 flw-handRailWidthR/2+roffr,	(rnu-1)*td+OverhangRTop, RailUNID, roffr, 2 : RailUNID=RailUNID+1
				HOTSPOT2 flw-handRailWidthR/2-1,		(rnu-1)*td+OverhangRTop, RailUNID, roffr, 3 : RailUNID=RailUNID+1

				!!! RAIL BOTTOM OVERHANG
				HOTSPOT2 flw-handRailWidthR/2+roffr,		0, RailUNID, OverhangRBottom, 1+128 : RailUNID=RailUNID+1
				HOTSPOT2 flw-handRailWidthR/2+roffr,		1, RailUNID, OverhangRBottom, 3 : RailUNID=RailUNID+1
				HOTSPOT2 flw-handRailWidthR/2+roffr,		-OverhangRBottom, RailUNID, OverhangRBottom, 2 : RailUNID=RailUNID+1

				!!! RAIL TOP OVERHANG
				HOTSPOT2 flw-handRailWidthR/2+roffr,		td*(rnu-1), RailUNID, OverhangRTop, 1+128 : RailUNID=RailUNID+1
				HOTSPOT2 flw-handRailWidthR/2+roffr,		td*(rnu-1)-1, RailUNID, OverhangRTop, 3 : RailUNID=RailUNID+1
				HOTSPOT2 flw-handRailWidthR/2+roffr,		td*(rnu-1)+OverhangRTop, RailUNID, OverhangRTop, 2 : RailUNID=RailUNID+1
			del 1
		endif
	endif
endif

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!! *** HOTSPOT EDITING in 2D / RAILING AND FLIGHT *** !!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!



!!! CONCRETE / UPPER AND LOWER JUNCTION  !!!!!!!!!!!!!!!!!!!!!!!!!!!

IF gs_structure_landing_m = STRUCTTYPE_CONCRETE  THEN

	FlightUNID=100

	IF gs_2DContourAbove=1 OR gs_2DContourAbove=0 AND  ABS(chStoryDist) > EPS THEN
		HOTSPOT2 flw/2, 0,		FlightUNID, ljl, 1+128 : FlightUNID=FlightUNID+1
		HOTSPOT2 flw/2, 0-ljl, 	FlightUNID, ljl, 2 : FlightUNID=FlightUNID+1
		HOTSPOT2 flw/2, 0+1,	FlightUNID, ljl, 3: FlightUNID=FlightUNID+1

		HOTSPOT2 flw/2, (rnu)*td,		FlightUNID, ujl, 1+128 : FlightUNID=FlightUNID+1
		HOTSPOT2 flw/2, (rnu)*td+ujl, 	FlightUNID, ujl, 2 : FlightUNID=FlightUNID+1
		HOTSPOT2 flw/2, (rnu)*td-1,		FlightUNID, ujl, 3: FlightUNID=FlightUNID+1
	ENDIF
ENDIF

!================================================================================
end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end
!================================================================================

"left rail":

	! ---  Rail on 1st Run -----------------------------------------------------
	if bShowRailOn1stRun then
		lraSimple=LRailLength
		lraComplex=LRailLength
		additionXComplex=0
		additionZComplex=0
		hrovL=hrol
		hrovR=hrol
		postNumber = npl
		side = SIDE_LEFT
		gosub "callRailsForStair"
	endif
return


"right rail":

	! ---  Rail on 1st Run -----------------------------------------------------
	if bShowRailOn1stRun then
		lraSimple=RRailLength
		lraComplex=RRailLength
		additionXComplex=0
		additionZComplex=0
		hrovL=hror
		hrovR=hror
		postNumber = npr
		side = SIDE_RIGHT
		gosub "callRailsForStair"
	endif
return

"callRailsForStair":
! ------------------------------------------------------------------------------
!	lraSimple
!	lraComplex
!	additionXComplex
!	additionZComplex
!	hrovL: rail overhang start
!	hrovR: rail overhang end
!	postNumber:   number of posts
!	side: SIDE_LEFT or SIDE_RIGHT
! ==============================================================================
	ani = angle
	additionXComplex = additionXComplex
	additionZComplex = additionZComplex
	gosub "callRails"
return

! ==============================================================================
"callRails":
! ------------------------------------------------------------------------------
!	ani
!	additionXComplex
!	additionZComplex
!	dsComplex
!  ------------------
!	side: SIDE_LEFT or SIDE_RIGHT
!	lraSimple
!	lraComplex
!	hrovL: rail overhang start
!	hrovR: rail overhang end
!	postNumber:   number of posts
! ==============================================================================
	if side = SIDE_LEFT then
		railBarDepth	= bwl
		railBarDiam		= bdl
		railHeight		= hrl
		railBarThk		= fthl
		railFrameThk	= fthl
		railDist		= dsl
		railType_m		= leftRailType_m
		railPostDia		= pdl
		railPostWidth	= pwl
		railPostThk		= pthl
		railPostType	= ptl_m
		nBarsRail		= nbl
		bt_m			= btl_m
		railFramesWSide	= fswl
		railFramesWTop	= ftwl
		railFramesWBot	= fbwl
		railBarHeight	= bhl
		railBarFillThk	= bthl
		abdist			= abdistl
		railFrameMat	= fmatl
		railBaluFillMat	= bmatl
		railPostMat		= pmatl
		nbt				= nbtl
		railFillDist	= fdfl
		railPostBaseType= gs_PostBaseTypeL_m
		railDistFromHr	= sbhl
		railPostBaseOv	= gs_PostBaseOverhangL
		railHrailHeight	= hrhl
		handRailWidth	= handRailWidthL
		bComplexRail	= bComplexRailLeft
	else
		railBarDepth	= bwr
		railBarDiam		= bdr
		railHeight		= hrr
		railBarThk		= fthr
		railFrameThk	= fthr
		railDist		= dsr
		railType_m		= rightRailType_m
		railPostDia		= pdr
		railPostWidth	= pwr
		railPostThk		= pthr
		railPostType	= ptr_m
		nBarsRail		= nbr
		bt_m			= btr_m
		railFramesWSide	= fswr
		railFramesWTop	= ftwr
		railFramesWBot	= fbwr
		railBarHeight	= bhr
		railBarFillThk	= bthr
		abdist			= abdistr
		railFrameMat	= fmatr
		railBaluFillMat	= bmatr
		railPostMat		= pmatr
		nbt				= nbtr
		railFillDist	= fdfr
		railPostBaseType= gs_PostBaseTypeR_m
		railDistFromHr	= sbhr
		railPostBaseOv	= gs_PostBaseOverhangR
		railHrailHeight	= hrhr
		handRailWidth	= handRailWidthR
		bComplexRail	= bComplexRailRight
	endif

	add2 additionXComplex * bComplexRail, 0
	call "railSymbol2D_m" parameters all	cfs					= 1,
											bEnable2DPosts		= bComplexRail,
											ptyp_m				= 1,
											ani					= ani,
											rom_m				= 1,
											rmm_m				= 1,
											LengthSize			= 0,
											lra					= lraSimple * NOT(bComplexRail) + lraComplex * (bComplexRail),
											hr					= railHeight,
											hrPerp				= railHeight,
											ab					= 0,
											rb					= 0,
											ds					= railDist,
											gs_AngleL			= 90,
											gs_AngleR			= 90,
											iHandRailStyle		= 1,
											handRailDiameter	= handRailWidth,
											handRailWidth		= handRailWidth,
											hroL				= hrovL,
											hroR				= hrovR,
											np					= postNumber,
											pd					= railPostDia,
											pw					= railPostWidth,
											pth					= railPostThk,
											gs_cont_pen			= railPen,
											sa					= 0,
											bBreakRailLine		= bBreakRailLine,
											breakLineAngle		= brLineAngle,
											breakLineDist		= breakLineDist,
											breakLineWidth		= brkLineY,
											bRailAboveBreakLine	= bRailAboveBreakLine,
											bShowRailBelowBrL	= bShowRailPart1,
											bShowRailAboveBrL	= bShowRailPart2,
											bPostNoCalculation	= (railType_m = 10),
											pit_m				= 1,
											dp					= abdist,
											nbt					= nbt
	del 1

	bShowRailPart1			= 0
	bShowRailPart2			= 0

return

"carriage":

	drawindex 10

	if beamNum = 1 then
		add2 carriageBaseDist / 2 - beamThk / 2 - beamOffsetRight, 0
	else
		add2 carriageBaseDist - beamThk - beamOffsetRight, 0
	endif
	for wb = 1 to beamNum
		if bBreakCarriageLine then
			lengthMod	= -(carriageBaseDist - beamOffsetLeft - beamOffsetRight - beamThk) * tan(brLineAngle) * (wb = 2)
			if bShowCarriagePart1 then
				pen carriagePen
				LINE_TYPE carriageLineType

				poly2_b 4, 1+2+4+64, gs_fill_pen, gs_back_pen,
					0, 0, 1,
					beamThk, 0, 1,
					beamThk, carrBreakLineDist + beamThk * tan(brLineAngle) / 2 + lengthMod, 1,
					0, carrBreakLineDist - beamThk * tan(brLineAngle) / 2 + lengthMod, 1
			endif

			if bShowCarriagePart2 then
				pen carriagePen
				if	(gs_2DContourAbove) then
					LINE_TYPE dash_line
				else
					LINE_TYPE carriageLineType
				endif

				poly2_b 4, 1 + 2 * gs_FillAbove + 4+64, gs_fill_pen, gs_back_pen,
					0, carrBreakLineDist - beamThk * tan(brLineAngle) / 2 + lengthMod + carrBreakLineWidth, 1,
					beamThk, carrBreakLineDist + beamThk * tan(brLineAngle) / 2 + lengthMod + carrBreakLineWidth, 1,
					beamThk, beamLength, 1,
					0, beamLength, 1
			endif
		else
			pen carriagePen
			if NOT(brk) then
				LINE_TYPE carriageLineType
			else
				if	(NOT(bCarrAboveBreakLine) and gs_2DContourBelow) or\
					((bCarrAboveBreakLine) and gs_2DContourAbove) then
					LINE_TYPE dash_line
				else
					LINE_TYPE carriageLineType
				endif
			endif

			poly2_b 4, 1 + 2 * (NOT(bCarrAboveBreakLine) + bCarrAboveBreakLine * gs_FillAbove) + 4+64, gs_fill_pen, gs_back_pen,
				0, 0, 1,
				beamThk, 0, 1,
				beamThk, beamLength, 1,
				0, beamLength, 1
		endif
		add2 -carriageBaseDist + beamThk + beamOffsetLeft + beamOffsetRight, 0
	next wb
	del beamNum + 1

return

