

pen gs_cont_pen

IF GLOB_CONTEXT>20 and GLOB_CONTEXT<40 THEN 		!! FOR Simple Model and in 3D Windoow
gs_detlevel_3D_m = DET3D_SIMPLE
ENDIF


RESOL 6

IF gs_detlevel_3D_m = DET3D_OFF THEN end
IF gs_shadow=0 THEN SHADOW OFF


!!!!!!!!!!!!!!!!!!! *** HOTSPOTs RailUNID *** !!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

	!!! FlightUNID=1	!!! Concrete 1-30, Monolith 500-522
	!!! RailUNID=1000	!!! Concrete 1000-1530, Monolith 2000-2530

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

addz -covthick

IF gs_structure_landing_m = STRUCTTYPE_MONOLITH THEN gosub "monolith"
IF gs_structure_landing_m = STRUCTTYPE_CONCRETE THEN gosub "concrete"

!================================================================================
end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end
!================================================================================


"concrete":

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!! CONCRETE !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!ADDy -ljl
!!! Vert.Height of Stair Slab Thickness
temp_sst=sst*(sqr(td*td+th*th))/td

behuzas=sst*(sqr(td*td+th*th))/td

!!behuzas=sst*sqr(td*td*rnu*rnu+th*th*rnu*rnu) / (th*rnu)

ADDz -behuzas


alsoilleszt = ljl
felsoilleszt= ujl
mag  = th*rnu+behuzas
szel = td*rnu+alsoilleszt


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!! HOTSPOTS !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

	!!! Editable HOTSPOTs at First Tread

		FlightUNID=1

		!!! FLIGHT WIDTH

		HOTSPOT 		0,	0,	behuzas, FlightUNID, flw, 1+256 : FlightUNID=FlightUNID+1
		HOTSPOT 		-1,	0,	behuzas, FlightUNID, flw, 3 : FlightUNID=FlightUNID+1
		HOTSPOT 		flw,0,	behuzas, FlightUNID, flw, 2 : FlightUNID=FlightUNID+1

		!!! LOWER JOINT LENGTH

		HOTSPOT 		0,	0,	behuzas, FlightUNID, ljl, 1+128 : FlightUNID=FlightUNID+1
		HOTSPOT 		0,	1,	behuzas, FlightUNID, ljl, 3 : FlightUNID=FlightUNID+1
		HOTSPOT 		0, -ljl,	behuzas, FlightUNID, ljl, 2 : FlightUNID=FlightUNID+1

		HOTSPOT 		flw,	0,	behuzas, FlightUNID, ljl, 1+128 : FlightUNID=FlightUNID+1
		HOTSPOT 		flw,	1,	behuzas, FlightUNID, ljl, 3 : FlightUNID=FlightUNID+1
		HOTSPOT 		flw, -ljl,	behuzas, FlightUNID, ljl, 2 : FlightUNID=FlightUNID+1

		!!! LOWER JOINT HEIGHT

		HOTSPOT 		0,	-ljl,	behuzas, FlightUNID, ljh, 1+128 : FlightUNID=FlightUNID+1
		HOTSPOT 		0,	-ljl,	behuzas+1, FlightUNID, ljh, 3 : FlightUNID=FlightUNID+1
		HOTSPOT 		0,	-ljl,	behuzas-ljh, FlightUNID, ljh, 2 : FlightUNID=FlightUNID+1

		HOTSPOT 		flw,	-ljl,	behuzas, FlightUNID, ljh, 1+128 : FlightUNID=FlightUNID+1
		HOTSPOT 		flw,	-ljl,	behuzas+1, FlightUNID, ljh, 3 : FlightUNID=FlightUNID+1
		HOTSPOT 		flw,	-ljl,	behuzas-ljh, FlightUNID, ljh, 2 : FlightUNID=FlightUNID+1

	!!! Editable HOTSPOTs at Top Tread
	ADDy -ljl
		!!! FLIGHT WIDTH

		HOTSPOT 		0,	szel-td,	mag, FlightUNID, flw, 1+256 : FlightUNID=FlightUNID+1
		HOTSPOT 		-1,	szel-td,	mag, FlightUNID, flw, 3 : FlightUNID=FlightUNID+1
		HOTSPOT 		flw,szel-td,	mag, FlightUNID, flw, 2 : FlightUNID=FlightUNID+1

		!!! UPPER JOINT LENGTH

		HOTSPOT 		0,	szel,	mag, FlightUNID, ujl, 1+128 : FlightUNID=FlightUNID+1
		HOTSPOT 		0,	szel-1,	mag, FlightUNID, ujl, 3 : FlightUNID=FlightUNID+1
		HOTSPOT 		0,szel+ujl,	mag, FlightUNID, ujl, 2 : FlightUNID=FlightUNID+1

		HOTSPOT 		flw,	szel,	mag, FlightUNID, ujl, 1+128 : FlightUNID=FlightUNID+1
		HOTSPOT 		flw,	szel-1,	mag, FlightUNID, ujl, 3 : FlightUNID=FlightUNID+1
		HOTSPOT 		flw,szel+ujl,	mag, FlightUNID, ujl, 2 : FlightUNID=FlightUNID+1

		!!! UPPER JOINT HEIGHT

		HOTSPOT 		0,	szel+ujl,	mag, FlightUNID, ujh, 1+128 : FlightUNID=FlightUNID+1
		HOTSPOT 		0,	szel+ujl,	mag+1, FlightUNID, ujh, 3 : FlightUNID=FlightUNID+1
		HOTSPOT 		0,	szel+ujl,	mag-ujh, FlightUNID, ujh, 2 : FlightUNID=FlightUNID+1

		HOTSPOT 		flw,	szel+ujl,	mag, FlightUNID, ujh, 1+128 : FlightUNID=FlightUNID+1
		HOTSPOT 		flw,	szel+ujl,	mag+1, FlightUNID, ujh, 3 : FlightUNID=FlightUNID+1
		HOTSPOT 		flw,	szel+ujl,	mag-ujh, FlightUNID, ujh, 2 : FlightUNID=FlightUNID+1


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!! END of HOTSPOTS !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


ROTy 90
ROTz 90

!!! Geometry of Upper Joint
	pontszam=6

	put alsoilleszt/2,0
	put alsoilleszt,0
	put szel,mag-behuzas
	put szel,mag-ujh
	put szel+felsoilleszt,mag - ujh
	put szel+felsoilleszt,mag


	!!! put szel,mag
	IF (cover or covery) and gs_detlevel_3D_m = DET3D_SIMPLE THEN
		put szel,mag
		IF covery THEN
			put szel,mag+covthick
			pontszam=pontszam+1
		ENDIF
		pontszam=pontszam+1
		IF covery THEN xx=szel-covthicky ELSE xx=szel
		IF cover THEN yy=mag+covthick ELSE yy=mag
	ELSE
		xx=szel
		yy=mag
	ENDIF


FOR i=1 to rnu
	!			Boritas
	IF cover and iNoseType = NOSE_NORMAL and gs_detlevel_3D_m = DET3D_DETAILED THEN

		IF i <> 1 THEN
			! T R E A D S
			MATERIAL mat_tread
			SECT_FILL typeFillTread, penBackFillTread, penFillTread, penLineTread

			IF covthick > 0 THEN
				PRISM 5, flw,
					xx, yy,
					xx-td-ns-covthicky, yy,
					xx-td-ns-covthicky, yy + covthick,
					xx, yy + covthick,
					xx, yy
			ENDIF
		ENDIF
	ENDIF
	IF covery and i <> 1 and iNoseType = NOSE_NORMAL and gs_detlevel_3D_m = DET3D_DETAILED THEN
			MATERIAL mat_riser
			SECT_FILL typeFillRiser, penBackFillRiser, penFillRiser, penLineRiser

			!!! R I S E R S
			PRISM 5, flw,
				xx, yy+covthick,
				xx, yy+th,
				xx-covthicky, yy + th,
				xx-covthicky, yy + covthick,
				xx, yy + covthick
	ENDIF
	IF iNoseType = NOSE_NORMAL THEN
			put xx-td,yy
			put xx-td,yy-th
			pontszam=pontszam+2
			xx=xx-td
			yy=yy-th
		ELSE
			put xx-td,yy
			put xx-td+tproj,yy-th
			pontszam=pontszam+2
			xx=xx-td
			yy=yy-th
	ENDIF
NEXT i

	IF covery and iNoseType = NOSE_NORMAL and gs_detlevel_3D_m = DET3D_DETAILED  THEN
			MATERIAL mat_riser
			SECT_FILL typeFillRiser, penBackFillRiser, penFillRiser, penLineRiser

			!!! FIRST_R I S E R S
			PRISM 5, flw,
				xx, yy+covthick,
				xx, yy+th,
				xx-covthicky, yy + th,
				xx-covthicky, yy + covthick,
				xx, yy + covthick
	ENDIF
	IF cover and iNoseType = NOSE_NORMAL and gs_detlevel_3D_m = DET3D_DETAILED  THEN
			!!! FIRST_ T R E A D
			MATERIAL mat_tread
			SECT_FILL typeFillTread, penBackFillTread, penFillTread, penLineTread

			IF covthick > 0 THEN
			PRISM 5, flw,
				0+ljl, behuzas,
				0, behuzas,
				0, behuzas + covthick,
				0+ljl, behuzas + covthick,
				0+ljl, behuzas

			!!! TOP_ T R E A D
			MATERIAL mat_tread
			SECT_FILL typeFillTread, penBackFillTread, penFillTread, penLineTread

			PRISM 5, flw,
				szel+ujl, mag,
				szel-td-ns-covthicky, mag,
				szel-td-ns-covthicky, mag + covthick,
				szel+ujl, mag + covthick,
				szel+ujl, mag
			ENDIF
	ENDIF


IF gs_detlevel_3D_m = DET3D_SIMPLE and cover THEN incbehuz = covthick ELSE incbehuz = 0

	!!! Geometry of Lower Joint

		put 0,behuzas+incbehuz
		put 0,behuzas-ljh
		put alsoilleszt/2, behuzas-ljh
		put alsoilleszt/2,0
		pontszam=pontszam+4

	!!! STAIR SLAB
		MATERIAL matb
		SECT_FILL typeFillStringer, penBackFillStringer, penFillStringer, penLineStringer

		PRISM pontszam, flw,
			get(pontszam*2)

	IF iNoseType = NOSE_ROUNDED and cover and gs_detlevel_3D_m = DET3D_DETAILED THEN
		MATERIAL mat_tread
		SECT_FILL typeFillTread, penBackFillTread, penFillTread, penLineTread

		kisx=covthick*tproj/th
		startpnt=1
		endpnt=rnu



	ADDy behuzas
	ADDx alsoilleszt

	!!! Covering at Lower Joint
	PRISM_ 5, flw,
		tproj,0,15,
		-ljl,0,15,
		-ljl,covthick,15,
		tproj-kisx,covthick,15,
		tproj,0,-1

	FOR i=startpnt to endpnt-1
		ADDy i*th
		ADDx i*td
		recnum=5
		!!! T R E A D S
		IF recefice THEN	!!! Non-Slip Tread Inserts=ON
			FOR rcfc=recnum to 1 step -1
				put -td+(rcfc*2)*reclen, covthick,15
				put	-td+(rcfc*2)*reclen, covthick-reclen,15
				put	-td+(rcfc*2-1)*reclen, covthick-reclen,15
				put	-td+(rcfc*2-1)*reclen, covthick,15
			NEXT rcfc

			PRISM_ 9+recnum*4, flw,
				tproj,					0,15,
				tproj-kisx,				covthick,15,

				get(recnum*12),

				-td,					covthick,79,
				-td,					0,900,
				0,						180-atn(th/tproj),4013,
				-td+tproj-kisx-covthick,covthick-th,15,
				-td+tproj-kisx,			covthick-th,15,
				-td,					0,15,
				tproj,					0,15

			DEL 2
		ELSE				!!! Non-Slip Tread Inserts=OFF
			PRISM_ 9, flw,
				tproj,					0,15,
				tproj-kisx,				covthick,15,
				-td,					covthick,79,
				-td,					0,900,
				0,						180-atn(th/tproj),4013,
				-td+tproj-kisx-covthick,covthick-th,15,
				-td+tproj-kisx,			covthick-th,15,
				-td,					0,15,
				tproj,					0,15
			DEL 2
		ENDIF
	NEXT i

	ADDy endpnt*th
	ADDx endpnt*td

	!!! T O P_ T R E A D
	IF recefice=0 THEN	!!! Non-Slip Tread Inserts=OFF
		PRISM_ 9, flw,
			ujl,						0,15,
			ujl,						covthick,15,
			-td,					covthick,79,
			-td,					0,900,
			ujl,						180-atn(th/tproj),4013,
			-td+tproj-kisx-covthick,covthick-th,15,
			-td+tproj-kisx,			covthick-th,15,
			-td,					0,15,
			ujl,						0,15
		DEL 2
	ELSE					!!! Non-Slip Tread Inserts=ON
		recnum=5
		FOR rcfc=recnum to 1 step -1
			put -td+(rcfc*2)*reclen, covthick,15
			put	-td+(rcfc*2)*reclen, covthick-reclen,15
			put	-td+(rcfc*2-1)*reclen, covthick-reclen,15
			put	-td+(rcfc*2-1)*reclen, covthick,15
		NEXT rcfc
		PRISM_ 9+recnum*4, flw,
			ujl,						0,15,
			ujl,						covthick,15,
			get(recnum*12),
			-td,					covthick,79,
			-td,					0,900,
			ujl,						180-atn(th/tproj),4013,
			-td+tproj-kisx-covthick,covthick-th,15,
			-td+tproj-kisx,			covthick-th,15,
			-td,					0,15,
			ujl,						0,15
		DEL 2
	ENDIF
	DEL 4

ROTy 90
ROTz 90


ENDIF


IF iFlightSectionType = WITH_SPINEBEAM THEN
	ROTy 90
	ROTx 90

	MATERIAL matsb
	SECT_FILL typeFillStringer, penBackFillStringer, penFillStringer, penLineStringer

	tubea 7, 5, 1+2+16+32+64,
		0,0,0,
		flw/2-beamx/2, rfthickness,0,
		flw/2-beamx/2, rfthickness+beamy,0,
		flw/2+beamx/2, rfthickness+beamy,0,
		flw/2+beamx/2, rfthickness,0,
		flw,0,0,
		0,0,0,

		 0, 	alsoilleszt/2-td, 	0,
		 0,     alsoilleszt/2,    	0,
		 0,		alsoilleszt,	 	0,
		 0,		szel,			 	behuzas-mag,
		 0, 	szel+td, 		 	behuzas-mag+th

DEL 2
ENDIF

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** Railing ** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

IF hrtr_m=1 THEN		!!! HANDRAIL RIGHT WIDTH
		HandrailHgtR=hrhr
	ELSE
		HandrailHgtR=hrdr
ENDIF

IF hrtl_m=1 THEN		!!! HANDRAIL RIGHT WIDTH
		HandrailHgtL=hrhl
	ELSE
		HandrailHgtL=hrdl
ENDIF

atfog=sqr(rnu*rnu*(td*td+th*th))
rnu=rnu-1

lrah=td*(rnu)

kisatfog=sqr(td*td+th*th) ! egy lepcsofok atfogoja

atfogR=sqr(rnu*rnu*(td*td+th*th))+(OverhangRBottom+OverhangRTop)/cos(angle)
atfogL=sqr(rnu*rnu*(td*td+th*th))+(OverhangLBottom+OverhangLTop)/cos(angle)

RRailLength=lrah+OverhangRBottom+OverhangRTop
LRailLength=lrah+OverhangLBottom+OverhangLTop

top_ry=((OverhangRBottom+OverhangRTop)*th)/td
top_ly=((OverhangLBottom+OverhangLTop)*th)/td

! ------------------------------------------------------------------------------
! Left rail
! ------------------------------------------------------------------------------

IF rail_m = RAILPOS_LEFT or rail_m = RAILPOS_BOTH THEN
	material fmatl

	if bSameRails then
		leftRailType_m	= rightRailType_m
		atfogL			= atfogR
		LRailLength		= RRailLength
		top_ly			= top_ry
	endif

	rplPostBase = (leftRailType_m = 7 or leftRailType_m = 8 or leftRailType_m = 9 or leftRailType_m = 11)

	ROTx -90
	ADDz covthick+th

	ADDy roffl-handRailWidthL/2
	ADDz behuzas-(OverhangLBottom*th)/td
	ADDx ljl+bComplexRailLeft*td/2-OverhangLBottom

	IF bSameRails THEN
		RailUNID=1200

		!!! RAIL OFFSET

		HOTSPOT 0,-roffr,0, RailUNID, roffr, 1+128 : RailUNID=RailUNID+1 : RailUNID=RailUNID+1
		HOTSPOT 0,0,0, RailUNID, roffr, 2 : RailUNID=RailUNID+1 : RailUNID=RailUNID+1
		HOTSPOT 0,-roffr-1,0, RailUNID, roffr, 3 : RailUNID=RailUNID+1

		ADDz (OverhangRBottom)*tan(angle)
			HOTSPOT RRailLength,-roffr,(rnu)*th+OverhangRTop*tan(angle), RailUNID, roffr, 1+128 : RailUNID=RailUNID+1
			HOTSPOT RRailLength,0,(rnu)*th+OverhangRTop*tan(angle), RailUNID, roffr, 2 : RailUNID=RailUNID+1
			HOTSPOT RRailLength,-roffr-1,(rnu)*th+OverhangRTop*tan(angle), RailUNID, roffr, 3 : RailUNID=RailUNID+1
		DEL 1
	ELSE

		RailUNID=1206

		!!! RAIL OFFSET

		HOTSPOT 0,-roffl,0, RailUNID, roffl, 1+128 : RailUNID=RailUNID+1 : RailUNID=RailUNID+1
		HOTSPOT 0,0,0, RailUNID, roffl, 2 : RailUNID=RailUNID+1 : RailUNID=RailUNID+1
		HOTSPOT 0,-roffl-1,0, RailUNID, roffl, 3 : RailUNID=RailUNID+1

		ADDz (OverhangLBottom)*tan(angle)
			HOTSPOT LRailLength,-roffl,(rnu)*th+OverhangLTop*tan(angle), RailUNID, roffl, 1+128 : RailUNID=RailUNID+1
			HOTSPOT LRailLength,0,(rnu)*th+OverhangLTop*tan(angle), RailUNID, roffl, 2 : RailUNID=RailUNID+1
			HOTSPOT LRailLength,-roffl-1,(rnu)*th+OverhangLTop*tan(angle), RailUNID, roffl, 3 : RailUNID=RailUNID+1
		DEL 1

	ENDIF


	IF roml_m = RAILORIENT_VERTICAL THEN	!!! (RailUNID 1112-1142...>1300)

		IF bSameRails THEN
			RailUNID=1212

			!!! Dist. from Top of Tread

			HOTSPOT 0,0,0,	RailUNID, dsr, 1+128 : RailUNID=RailUNID+1
			HOTSPOT 0,0,dsr,	RailUNID, dsr, 2 : RailUNID=RailUNID+1
			HOTSPOT 0,0,-1,	RailUNID, dsr, 3 : RailUNID=RailUNID+1

			HOTSPOT RRailLength,0,(rnu)*th+top_ry,	RailUNID, dsr, 1+128 : RailUNID=RailUNID+1
			HOTSPOT RRailLength,0,(rnu)*th+dsr+top_ry,	RailUNID, dsr, 2 : RailUNID=RailUNID+1
			HOTSPOT RRailLength,0,(rnu)*th-1+top_ry,	RailUNID, dsr, 3 : RailUNID=RailUNID+1

			!! Height of Rail
			HOTSPOT 0,0,dsr,	RailUNID, hrr, 1+128 : RailUNID=RailUNID+1
			HOTSPOT 0,0,dsr+hrr,	RailUNID, hrr, 2 : RailUNID=RailUNID+1
			HOTSPOT 0,0,dsr-1,	RailUNID, hrr, 3 : RailUNID=RailUNID+1

			HOTSPOT RRailLength,0,(rnu)*th+dsr+top_ry,	RailUNID, hrr, 1+128 : RailUNID=RailUNID+1
			HOTSPOT RRailLength,0,(rnu)*th+dsr+hrr+top_ry,	RailUNID, hrr, 2 : RailUNID=RailUNID+1
			HOTSPOT RRailLength,0,(rnu)*th-1+dsr+top_ry,	RailUNID, hrr, 3 : RailUNID=RailUNID+1


			ADD OverhangRBottom,0,(OverhangRBottom)*tan(angle)
				!!! Rail Overhang at Bottom

				HOTSPOT 0,	0,	dsr,	RailUNID, temp_OverhangRBottom, 1+128,OverhangRBottom : RailUNID=RailUNID+1
				HOTSPOT 1,	0,	dsr+tan(angle),	RailUNID, temp_OverhangRBottom, 3,OverhangRBottom : RailUNID=RailUNID+1
				HOTSPOT -OverhangRBottom,0,	dsr-OverhangRBottom*tan(angle),	RailUNID, temp_OverhangRBottom, 2,OverhangRBottom : RailUNID=RailUNID+1

				!!! Rail Overhang at Top
			ADDz th
				HOTSPOT lrah, 0,				(rnu-1)*th+dsr,		RailUNID, temp_OverhangRTop, 1+128,OverhangRTop : RailUNID=RailUNID+1
				HOTSPOT lrah-1, 0,				(rnu-1)*th+dsr-tan(angle),		RailUNID, temp_OverhangRTop, 3,OverhangRTop : RailUNID=RailUNID+1
				HOTSPOT lrah+OverhangRTop, 0,	(rnu-1)*th+dsr+OverhangRTop*tan(angle),	RailUNID, temp_OverhangRTop, 2,OverhangRTop : RailUNID=RailUNID+1
			DEL 2

			IF rplPostBase=1 THEN

				RailUNID=1230

				!!!POST BASE OVERHANG
				HOTSPOT 0,0,0,RailUNID,gs_PostBaseOverhangR,1 : RailUNID=RailUNID+1
				HOTSPOT 0,0,-gs_PostBaseOverhangR,RailUNID,gs_PostBaseOverhangR,2 : RailUNID=RailUNID+1
				HOTSPOT 0,0,1,RailUNID,gs_PostBaseOverhangR,3 : RailUNID=RailUNID+1

				HOTSPOT RRailLength,0,(rnu)*th+top_ry,RailUNID,gs_PostBaseOverhangR,1 : RailUNID=RailUNID+1
				HOTSPOT RRailLength,0,(rnu)*th+top_ry-gs_PostBaseOverhangR,RailUNID,gs_PostBaseOverhangR,2 : RailUNID=RailUNID+1
				HOTSPOT RRailLength,0,(rnu)*th+top_ry+1,RailUNID,gs_PostBaseOverhangR,3 : RailUNID=RailUNID+1
			ENDIF

			IF leftRailType_m = 9 THEN

				RailUNID=1236

				!!!TOP WIRE/SUBBOARD DISTANCE FROM HANDRAIL
				HOTSPOT 0,0,hrr+dsr-HandrailHgtR,RailUNID,sbhr,1+128 : RailUNID=RailUNID+1
				HOTSPOT 0,0,hrr+dsr-HandrailHgtR-sbhr,RailUNID,sbhr,2 : RailUNID=RailUNID+1
				HOTSPOT 0,0,hrr+dsr-HandrailHgtR+1,RailUNID,sbhr,3 : RailUNID=RailUNID+1

				HOTSPOT RRailLength,0,(rnu)*th+top_ry+hrr+dsr-HandrailHgtR,RailUNID,sbhr,1+128 : RailUNID=RailUNID+1
				HOTSPOT RRailLength,0,(rnu)*th+top_ry+hrr+dsr-HandrailHgtR-sbhr,RailUNID,sbhr,2 : RailUNID=RailUNID+1
				HOTSPOT RRailLength,0,(rnu)*th+top_ry+hrr+dsr-HandrailHgtR+1,RailUNID,sbhr,3 : RailUNID=RailUNID+1
			ENDIF
		else
			RailUNID=1400

			!!! Dist. from Top of Tread

			HOTSPOT 0,0,0,	RailUNID, dsl, 1+128 : RailUNID=RailUNID+1
			HOTSPOT 0,0,dsl,	RailUNID, dsl, 2 : RailUNID=RailUNID+1
			HOTSPOT 0,0,-1,	RailUNID, dsl, 3 : RailUNID=RailUNID+1

			HOTSPOT LRailLength,0,(rnu)*th+top_ly,	RailUNID, dsl, 1+128 : RailUNID=RailUNID+1
			HOTSPOT LRailLength,0,(rnu)*th+dsl+top_ly,	RailUNID, dsl, 2 : RailUNID=RailUNID+1
			HOTSPOT LRailLength,0,(rnu)*th-1+top_ly,	RailUNID, dsl, 3 : RailUNID=RailUNID+1

			!! Height of Rail
			HOTSPOT 0,0,dsl,	RailUNID, hrl, 1+128 : RailUNID=RailUNID+1
			HOTSPOT 0,0,dsl+hrl,	RailUNID, hrl, 2 : RailUNID=RailUNID+1
			HOTSPOT 0,0,dsl-1,	RailUNID, hrl, 3 : RailUNID=RailUNID+1

			HOTSPOT LRailLength,0,(rnu)*th+dsl+top_ly,	RailUNID, hrl, 1+128 : RailUNID=RailUNID+1
			HOTSPOT LRailLength,0,(rnu)*th+dsl+hrl+top_ly,	RailUNID, hrl, 2 : RailUNID=RailUNID+1
			HOTSPOT LRailLength,0,(rnu)*th-1+dsl+top_ly,	RailUNID, hrl, 3 : RailUNID=RailUNID+1


			ADD OverhangLBottom,0,(OverhangLBottom)*tan(angle)
				!!! Rail Overhang at Bottom

				HOTSPOT 0,	0,	dsl,	RailUNID, temp_OverhangLBottom, 1+128,OverhangLBottom : RailUNID=RailUNID+1
				HOTSPOT 1,	0,	dsl+tan(angle),	RailUNID, temp_OverhangLBottom, 3,OverhangLBottom : RailUNID=RailUNID+1
				HOTSPOT -OverhangLBottom,0,	dsl-OverhangLBottom*tan(angle),	RailUNID, temp_OverhangLBottom, 2,OverhangLBottom : RailUNID=RailUNID+1

				!!! Rail Overhang at Top
			ADDz th
				HOTSPOT lrah, 0,				(rnu-1)*th+dsl,		RailUNID, temp_OverhangLTop, 1+128,OverhangLTop : RailUNID=RailUNID+1
				HOTSPOT lrah-1, 0,				(rnu-1)*th+dsl-tan(angle),		RailUNID, temp_OverhangLTop, 3,OverhangLTop : RailUNID=RailUNID+1
				HOTSPOT lrah+OverhangLTop, 0,	(rnu-1)*th+dsl+OverhangLTop*tan(angle),	RailUNID, temp_OverhangLTop, 2,OverhangLTop : RailUNID=RailUNID+1
			DEL 2

			IF rplPostBase=1 THEN

				RailUNID=1418

				!!!POST BASE OVERHANG
				HOTSPOT 0,0,0,RailUNID,gs_PostBaseOverhangL,1 : RailUNID=RailUNID+1
				HOTSPOT 0,0,-gs_PostBaseOverhangL,RailUNID,gs_PostBaseOverhangL,2 : RailUNID=RailUNID+1
				HOTSPOT 0,0,1,RailUNID,gs_PostBaseOverhangL,3 : RailUNID=RailUNID+1

				HOTSPOT LRailLength,0,(rnu)*th+top_ly,RailUNID,gs_PostBaseOverhangL,1 : RailUNID=RailUNID+1
				HOTSPOT LRailLength,0,(rnu)*th+top_ly-gs_PostBaseOverhangL,RailUNID,gs_PostBaseOverhangL,2 : RailUNID=RailUNID+1
				HOTSPOT LRailLength,0,(rnu)*th+top_ly+1,RailUNID,gs_PostBaseOverhangL,3 : RailUNID=RailUNID+1
			ENDIF

			IF leftRailType_m = 9 THEN

				RailUNID=1424

				!!!TOP WIRE/SUBBOARD DISTANCE FROM HANDRAIL
				HOTSPOT 0,0,hrl+dsl-HandrailHgtL,RailUNID,sbhl,1+128 : RailUNID=RailUNID+1
				HOTSPOT 0,0,hrl+dsl-HandrailHgtL-sbhl,RailUNID,sbhl,2 : RailUNID=RailUNID+1
				HOTSPOT 0,0,hrl+dsl-HandrailHgtL+1,RailUNID,sbhl,3 : RailUNID=RailUNID+1

				HOTSPOT LRailLength,0,(rnu)*th+top_ly+hrl+dsl-HandrailHgtL,RailUNID,sbhl,1+128 : RailUNID=RailUNID+1
				HOTSPOT LRailLength,0,(rnu)*th+top_ly+hrl+dsl-HandrailHgtL-sbhl,RailUNID,sbhl,2 : RailUNID=RailUNID+1
				HOTSPOT LRailLength,0,(rnu)*th+top_ly+hrl+dsl-HandrailHgtL+1,RailUNID,sbhl,3 : RailUNID=RailUNID+1
			ENDIF
		endif

		lraSimple=LRailLength
		lraComplex=LRailLength
		additionXComplex=0
		additionZComplex=0
		hrovL=hrol
		hrovR=hrol
		postNumber = npl
		rom_m = 1
		rmm_m = 1
		side = SIDE_LEFT
		gosub "callRailsForStair"
	else
		IF bSameRails THEN
			ROTy -atn(th/td)

				RailUNID=1300

				!!! Dist. from Top of Tread

				HOTSPOT 0,0,0,	RailUNID, dsr, 1+128 : RailUNID=RailUNID+1
				HOTSPOT 0,0,dsr,	RailUNID, dsr, 2 : RailUNID=RailUNID+1
				HOTSPOT 0,0,-1,	RailUNID, dsr, 3 : RailUNID=RailUNID+1

				HOTSPOT atfogR, 0,0,	RailUNID, dsr, 1+128 : RailUNID=RailUNID+1
				HOTSPOT atfogR, 0,dsr,	RailUNID, dsr, 2 : RailUNID=RailUNID+1
				HOTSPOT atfogR, 0,-1,	RailUNID, dsr, 3 : RailUNID=RailUNID+1

				!! Height of Rail

				HOTSPOT 0,0,dsr,	RailUNID, hrr, 1+128 : RailUNID=RailUNID+1
				HOTSPOT 0,0,dsr+hrr,	RailUNID, hrr, 2 : RailUNID=RailUNID+1
				HOTSPOT 0,0,dsr-1,	RailUNID, hrr, 3 : RailUNID=RailUNID+1

				HOTSPOT atfogR,0,dsr,	RailUNID, hrr, 1+128 : RailUNID=RailUNID+1
				HOTSPOT atfogR,0,dsr+hrr,	RailUNID, hrr, 2 : RailUNID=RailUNID+1
				HOTSPOT atfogR,0,-1+dsr,	RailUNID, hrr, 3 : RailUNID=RailUNID+1


			ADDx temp_OverhangRBottom
				!!! Rail Overhang at Bottom

				HOTSPOT 0,	0,	dsr,	RailUNID, temp_OverhangRBottom, 1+128,OverhangRBottom  : RailUNID=RailUNID+1
				HOTSPOT 1, 0	,dsr,RailUNID, temp_OverhangRBottom, 3,OverhangRBottom : RailUNID=RailUNID+1
				HOTSPOT -temp_OverhangRBottom,0,dsr,RailUNID, temp_OverhangRBottom, 2,OverhangRBottom : RailUNID=RailUNID+1

				!!! Rail Overhang at Top

				HOTSPOT lrah*th/(td*sin(atn(th/td))), 0, dsr,	RailUNID, temp_OverhangRTop, 1+128,OverhangRTop  : RailUNID=RailUNID+1
				HOTSPOT lrah*th/(td*sin(atn(th/td)))-1, 0, dsr,RailUNID, temp_OverhangRTop, 3,OverhangLTop : RailUNID=RailUNID+1
				HOTSPOT lrah*th/(td*sin(atn(th/td)))+temp_OverhangRTop, 0, dsr,RailUNID, temp_OverhangRTop, 2,OverhangRTop : RailUNID=RailUNID+1

			DEL 1

			IF rplPostBase=1 THEN
				RailUNID=1318

				!!!POST BASE OVERHANG
				HOTSPOT 0,0,0,RailUNID,gs_PostBaseOverhangR,1 : RailUNID=RailUNID+1
				HOTSPOT 0,0,-gs_PostBaseOverhangR,RailUNID,gs_PostBaseOverhangR,2 : RailUNID=RailUNID+1
				HOTSPOT 0,0,1,RailUNID,gs_PostBaseOverhangR,3 : RailUNID=RailUNID+1

				HOTSPOT atfogR,0,0,RailUNID,gs_PostBaseOverhangR,1 : RailUNID=RailUNID+1
				HOTSPOT atfogR,0,-gs_PostBaseOverhangR,RailUNID,gs_PostBaseOverhangR,2 : RailUNID=RailUNID+1
				HOTSPOT atfogR,0,1,RailUNID,gs_PostBaseOverhangR,3 : RailUNID=RailUNID+1
			ENDIF

			IF leftRailType_m = 9 THEN
				RailUNID=1324

				!!!TOP WIRE/SUBBOARD DISTANCE FROM HANDRAIL
				HOTSPOT 0,0,hrr+dsr-HandrailHgtR/cos(angle),		RailUNID,sbhPerpR,1+128,sbhr : RailUNID=RailUNID+1
				HOTSPOT 0,0,hrr+dsr-HandrailHgtR/cos(angle)-sbhr,	RailUNID,sbhPerpR,2,sbhr : RailUNID=RailUNID+1
				HOTSPOT 0,0,hrr+dsr-HandrailHgtR/cos(angle)+1,		RailUNID,sbhPerpR,3,sbhr : RailUNID=RailUNID+1

				HOTSPOT atfogR,0,hrr+dsr-HandrailHgtR/cos(angle),			RailUNID,sbhPerpR,1+128,sbhr : RailUNID=RailUNID+1
				HOTSPOT atfogR,0,hrr+dsr-HandrailHgtR/cos(angle)-sbhr,		RailUNID,sbhPerpR,2,sbhr : RailUNID=RailUNID+1
				HOTSPOT atfogR,0,hrr+dsr-HandrailHgtR/cos(angle)+1,			RailUNID,sbhPerpR,3,sbhr : RailUNID=RailUNID+1
			ENDIF

			DEL 1

		else
			ROTy -atn(th/td)

			RailUNID=1500

			!!! Dist. from Top of Tread

			HOTSPOT 0,0,0,	RailUNID, dsl, 1+128 : RailUNID=RailUNID+1
			HOTSPOT 0,0,dsl,	RailUNID, dsl, 2 : RailUNID=RailUNID+1
			HOTSPOT 0,0,-1,	RailUNID, dsl, 3 : RailUNID=RailUNID+1

			HOTSPOT atfogL, 0,0,	RailUNID, dsl, 1+128 : RailUNID=RailUNID+1
			HOTSPOT atfogL, 0,dsl,	RailUNID, dsl, 2 : RailUNID=RailUNID+1
			HOTSPOT atfogL, 0,-1,	RailUNID, dsl, 3 : RailUNID=RailUNID+1

			!! Height of Rail

			HOTSPOT 0,0,dsl,	RailUNID, hrl, 1+128 : RailUNID=RailUNID+1
			HOTSPOT 0,0,dsl+hrl,	RailUNID, hrl, 2 : RailUNID=RailUNID+1
			HOTSPOT 0,0,dsl-1,	RailUNID, hrl, 3 : RailUNID=RailUNID+1

			HOTSPOT atfogL,0,dsl,	RailUNID, hrl, 1+128 : RailUNID=RailUNID+1
			HOTSPOT atfogL,0,dsl+hrl,	RailUNID, hrl, 2 : RailUNID=RailUNID+1
			HOTSPOT atfogL,0,-1+dsl,	RailUNID, hrl, 3 : RailUNID=RailUNID+1


			ADDx temp_OverhangLBottom
				!!! Rail Overhang at Bottom

				HOTSPOT 0,	0,	dsl,	RailUNID, temp_OverhangLBottom, 1+128,OverhangLBottom  : RailUNID=RailUNID+1
				HOTSPOT 1, 0	,dsl,RailUNID, temp_OverhangLBottom, 3,OverhangLBottom : RailUNID=RailUNID+1
				HOTSPOT -temp_OverhangLBottom,0,dsl,RailUNID, temp_OverhangLBottom, 2,OverhangLBottom : RailUNID=RailUNID+1

				!!! Rail Overhang at Top

				HOTSPOT lrah*th/(td*sin(atn(th/td))), 0, dsl,	RailUNID, temp_OverhangLTop, 1+128,OverhangLTop  : RailUNID=RailUNID+1
				HOTSPOT lrah*th/(td*sin(atn(th/td)))-1, 0, dsl,RailUNID, temp_OverhangLTop, 3,OverhangLTop : RailUNID=RailUNID+1
				HOTSPOT lrah*th/(td*sin(atn(th/td)))+temp_OverhangLTop, 0, dsl,RailUNID, temp_OverhangLTop, 2,OverhangLTop : RailUNID=RailUNID+1
			DEL 1

			IF rplPostBase=1 THEN
				RailUNID=1518

				!!!POST BASE OVERHANG
				HOTSPOT 0,0,0,RailUNID,gs_PostBaseOverhangL,1 : RailUNID=RailUNID+1
				HOTSPOT 0,0,-gs_PostBaseOverhangL,RailUNID,gs_PostBaseOverhangL,2 : RailUNID=RailUNID+1
				HOTSPOT 0,0,1,RailUNID,gs_PostBaseOverhangL,3 : RailUNID=RailUNID+1

				HOTSPOT atfogL,0,0,RailUNID,gs_PostBaseOverhangL,1 : RailUNID=RailUNID+1
				HOTSPOT atfogL,0,-gs_PostBaseOverhangL,RailUNID,gs_PostBaseOverhangL,2 : RailUNID=RailUNID+1
				HOTSPOT atfogL,0,1,RailUNID,gs_PostBaseOverhangL,3 : RailUNID=RailUNID+1
			ENDIF

			IF leftRailType_m = 9 THEN
				RailUNID=1524

				!!!TOP WIRE/SUBBOARD DISTANCE FROM HANDRAIL
				HOTSPOT 0,0,hrl+dsl-HandrailHgtL/cos(angle),		RailUNID,sbhPerpL,1+128,sbhl : RailUNID=RailUNID+1
				HOTSPOT 0,0,hrl+dsl-HandrailHgtL/cos(angle)-sbhl,	RailUNID,sbhPerpL,2,sbhl : RailUNID=RailUNID+1
				HOTSPOT 0,0,hrl+dsl-HandrailHgtL/cos(angle)+1,		RailUNID,sbhPerpL,3,sbhl : RailUNID=RailUNID+1

				HOTSPOT atfogL,0,hrl+dsl-HandrailHgtL/cos(angle),			RailUNID,sbhPerpL,1+128,sbhl : RailUNID=RailUNID+1
				HOTSPOT atfogL,0,hrl+dsl-HandrailHgtL/cos(angle)-sbhl,		RailUNID,sbhPerpL,2,sbhl : RailUNID=RailUNID+1
				HOTSPOT atfogL,0,hrl+dsl-HandrailHgtL/cos(angle)+1,			RailUNID,sbhPerpL,3,sbhl : RailUNID=RailUNID+1
			ENDIF
			DEL 1

		endif

		lraSimple=atfogL
		lraComplex=atfogL
		additionXComplex=0
		additionZComplex=0
		hrovL=hrol
		hrovR=hrol
		postNumber = npl
		rom_m = 2
		rmm_m = 2
		side = SIDE_LEFT
		gosub "callRailsForStair"

	endif

	DEL 5
ENDIF

! ------------------------------------------------------------------------------
! Right rail
! ------------------------------------------------------------------------------

IF rail_m = RAILPOS_RIGHT or rail_m = RAILPOS_BOTH THEN
	material fmatr

	rprPostBase = (rightRailType_m = 7 or rightRailType_m = 8 or rightRailType_m = 9 or rightRailType_m = 11)

	ROTx -90
	ADDz covthick+th
	ADDy -flw-roffr+handRailWidthR/2
	ADDz behuzas-(OverhangRBottom*th)/td
	ADDx ljl+bComplexRailRight*td/2-OverhangRBottom

	!!! RAIL OFFSET
	RailUNID=1000

	HOTSPOT 0,roffr,0, RailUNID, roffr, 1+128 : RailUNID=RailUNID+1
	HOTSPOT 0,0,0, RailUNID, roffr, 2 : RailUNID=RailUNID+1
	HOTSPOT 0,roffr+1,0, RailUNID, roffr, 3 : RailUNID=RailUNID+1

	ADDz (OverhangRBottom)*tan(angle)
		HOTSPOT RRailLength,roffr,(rnu)*th+OverhangRTop*tan(angle), RailUNID, roffr, 1+128 : RailUNID=RailUNID+1
		HOTSPOT RRailLength,0,(rnu)*th+OverhangRTop*tan(angle), RailUNID, roffr, 2 : RailUNID=RailUNID+1
		HOTSPOT RRailLength,roffr+1,(rnu)*th+OverhangRTop*tan(angle), RailUNID, roffr, 3 : RailUNID=RailUNID+1
	DEL 1

	IF romr_m = RAILORIENT_VERTICAL THEN		!!! (RailUNID 1006-1036...>1100)
		!!! Dist. from Top of Tread

		RailUNID=1006

		HOTSPOT 0,0,0,	RailUNID, dsr, 1+128 : RailUNID=RailUNID+1
		HOTSPOT 0,0,dsr,	RailUNID, dsr, 2 : RailUNID=RailUNID+1
		HOTSPOT 0,0,-1,	RailUNID, dsr, 3 : RailUNID=RailUNID+1

		HOTSPOT RRailLength,0,(rnu)*th+top_ry,	RailUNID, dsr, 1+128 : RailUNID=RailUNID+1
		HOTSPOT RRailLength,0,(rnu)*th+dsr+top_ry,	RailUNID, dsr, 2 : RailUNID=RailUNID+1
		HOTSPOT RRailLength,0,(rnu)*th-1+top_ry,	RailUNID, dsr, 3 : RailUNID=RailUNID+1

		!! Height of Rail
		HOTSPOT 0,0,dsr,	RailUNID, hrr, 1+128 : RailUNID=RailUNID+1
		HOTSPOT 0,0,dsr+hrr,	RailUNID, hrr, 2 : RailUNID=RailUNID+1
		HOTSPOT 0,0,dsr-1,	RailUNID, hrr, 3 : RailUNID=RailUNID+1

		HOTSPOT RRailLength,0,(rnu)*th+dsr+top_ry,	RailUNID, hrr, 1+128 : RailUNID=RailUNID+1
		HOTSPOT RRailLength,0,(rnu)*th+dsr+hrr+top_ry,	RailUNID, hrr, 2 : RailUNID=RailUNID+1
		HOTSPOT RRailLength,0,(rnu)*th-1+dsr+top_ry,	RailUNID, hrr, 3 : RailUNID=RailUNID+1

		ADD OverhangRBottom,0,(OverhangRBottom)*tan(angle)
			!!! Rail Overhang at Bottom

			HOTSPOT 0,	0,	dsr,	RailUNID, temp_OverhangRBottom, 1+128,OverhangRBottom : RailUNID=RailUNID+1
			HOTSPOT 1,	0,	dsr+tan(angle),	RailUNID, temp_OverhangRBottom, 3,OverhangRBottom : RailUNID=RailUNID+1
			HOTSPOT -OverhangRBottom,0,	dsr-OverhangRBottom*tan(angle),	RailUNID, temp_OverhangRBottom, 2,OverhangRBottom : RailUNID=RailUNID+1

			!!! Rail Overhang at Top
		ADDz th
			HOTSPOT lrah, 0,				(rnu-1)*th+dsr,		RailUNID, temp_OverhangRTop, 1+128,OverhangRTop : RailUNID=RailUNID+1
			HOTSPOT lrah-1, 0,				(rnu-1)*th+dsr-tan(angle),		RailUNID, temp_OverhangRTop, 3,OverhangRTop : RailUNID=RailUNID+1
			HOTSPOT lrah+OverhangRTop, 0,	(rnu-1)*th+dsr+OverhangRTop*tan(angle),	RailUNID, temp_OverhangRTop, 2,OverhangRTop : RailUNID=RailUNID+1
		DEL 2

		IF rprPostBase=1 THEN

			RailUNID=1024

			!!!POST BASE OVERHANG
			HOTSPOT 0,0,0,RailUNID,gs_PostBaseOverhangR,1 : RailUNID=RailUNID+1
			HOTSPOT 0,0,-gs_PostBaseOverhangR,RailUNID,gs_PostBaseOverhangR,2 : RailUNID=RailUNID+1
			HOTSPOT 0,0,1,RailUNID,gs_PostBaseOverhangR,3 : RailUNID=RailUNID+1

			HOTSPOT RRailLength,0,(rnu)*th+top_ry,RailUNID,gs_PostBaseOverhangR,1 : RailUNID=RailUNID+1
			HOTSPOT RRailLength,0,(rnu)*th+top_ry-gs_PostBaseOverhangR,RailUNID,gs_PostBaseOverhangR,2 : RailUNID=RailUNID+1
			HOTSPOT RRailLength,0,(rnu)*th+top_ry+1,RailUNID,gs_PostBaseOverhangR,3 : RailUNID=RailUNID+1
		ENDIF

		IF rightRailType_m = 9 THEN

			RailUNID=1030

			!!!TOP WIRE/SUBBOARD DISTANCE FROM HANDRAIL
			HOTSPOT 0,0,hrr+dsr-HandrailHgtR,RailUNID,sbhr,1+128 : RailUNID=RailUNID+1
			HOTSPOT 0,0,hrr+dsr-HandrailHgtR-sbhr,RailUNID,sbhr,2 : RailUNID=RailUNID+1
			HOTSPOT 0,0,hrr+dsr-HandrailHgtR+1,RailUNID,sbhr,3 : RailUNID=RailUNID+1

			HOTSPOT RRailLength,0,(rnu)*th+top_ry+hrr+dsr-HandrailHgtR,RailUNID,sbhr,1+128 : RailUNID=RailUNID+1
			HOTSPOT RRailLength,0,(rnu)*th+top_ry+hrr+dsr-HandrailHgtR-sbhr,RailUNID,sbhr,2 : RailUNID=RailUNID+1
			HOTSPOT RRailLength,0,(rnu)*th+top_ry+hrr+dsr-HandrailHgtR+1,RailUNID,sbhr,3 : RailUNID=RailUNID+1
		ENDIF

		!!! *** Right Railing/Lower Part
		lraSimple=RRailLength
		lraComplex=RRailLength
		additionXComplex=0
		additionZComplex=0
		hrovL=hror
		hrovR=hror
		postNumber = npr
		side = SIDE_RIGHT
		rom_m = 1
		rmm_m = 1
		gosub "callRailsForStair"
	else
		ROTy -atn(th/td)

		RailUNID=1100
		!!! Dist. from Top of Tread

		HOTSPOT 0,0,0,	RailUNID, dsr, 1+128 : RailUNID=RailUNID+1
		HOTSPOT 0,0,dsr,	RailUNID, dsr, 2 : RailUNID=RailUNID+1
		HOTSPOT 0,0,-1,	RailUNID, dsr, 3 : RailUNID=RailUNID+1

		HOTSPOT atfogR, 0,0,	RailUNID, dsr, 1+128 : RailUNID=RailUNID+1
		HOTSPOT atfogR, 0,dsr,	RailUNID, dsr, 2 : RailUNID=RailUNID+1
		HOTSPOT atfogR, 0,-1,	RailUNID, dsr, 3 : RailUNID=RailUNID+1

		!! Height of Rail

		HOTSPOT 0,0,dsr,	RailUNID, hrr, 1+128 : RailUNID=RailUNID+1
		HOTSPOT 0,0,dsr+hrr,	RailUNID, hrr, 2 : RailUNID=RailUNID+1
		HOTSPOT 0,0,dsr-1,	RailUNID, hrr, 3 : RailUNID=RailUNID+1

		HOTSPOT atfogR,0,dsr,	RailUNID, hrr, 1+128 : RailUNID=RailUNID+1
		HOTSPOT atfogR,0,dsr+hrr,	RailUNID, hrr, 2 : RailUNID=RailUNID+1
		HOTSPOT atfogR,0,-1+dsr,	RailUNID, hrr, 3 : RailUNID=RailUNID+1


		ADDx temp_OverhangRBottom
			!!! Rail Overhang at Bottom

			HOTSPOT 0,	0,	dsr,	RailUNID, temp_OverhangRBottom, 1+128,OverhangRBottom  : RailUNID=RailUNID+1
			HOTSPOT 1, 0	,dsr,RailUNID, temp_OverhangRBottom, 3,OverhangRBottom : RailUNID=RailUNID+1
			HOTSPOT -temp_OverhangRBottom,0,dsr,RailUNID, temp_OverhangRBottom, 2,OverhangRBottom : RailUNID=RailUNID+1

			!!! Rail Overhang at Top

			HOTSPOT lrah*th/(td*sin(atn(th/td))), 0, dsr,	RailUNID, temp_OverhangRTop, 1+128,OverhangRTop  : RailUNID=RailUNID+1
			HOTSPOT lrah*th/(td*sin(atn(th/td)))-1, 0, dsr,RailUNID, temp_OverhangRTop, 3,OverhangLTop : RailUNID=RailUNID+1
			HOTSPOT lrah*th/(td*sin(atn(th/td)))+temp_OverhangRTop, 0, dsr,RailUNID, temp_OverhangRTop, 2,OverhangRTop : RailUNID=RailUNID+1

		DEL 1

		IF rprPostBase=1 THEN

			RailUNID=1118

			!!!POST BASE OVERHANG
			HOTSPOT 0,0,0,RailUNID,gs_PostBaseOverhangR,1 : RailUNID=RailUNID+1
			HOTSPOT 0,0,-gs_PostBaseOverhangR,RailUNID,gs_PostBaseOverhangR,2 : RailUNID=RailUNID+1
			HOTSPOT 0,0,1,RailUNID,gs_PostBaseOverhangR,3 : RailUNID=RailUNID+1

			HOTSPOT atfogR,0,0,RailUNID,gs_PostBaseOverhangR,1 : RailUNID=RailUNID+1
			HOTSPOT atfogR,0,-gs_PostBaseOverhangR,RailUNID,gs_PostBaseOverhangR,2 : RailUNID=RailUNID+1
			HOTSPOT atfogR,0,1,RailUNID,gs_PostBaseOverhangR,3 : RailUNID=RailUNID+1
		ENDIF

		IF rightRailType_m = 9 THEN

			RailUNID=1124

			!!!TOP WIRE/SUBBOARD DISTANCE FROM HANDRAIL
			HOTSPOT 0,0,hrr+dsr-HandrailHgtR/cos(angle),		RailUNID,sbhPerpR,1+128,sbhr : RailUNID=RailUNID+1
			HOTSPOT 0,0,hrr+dsr-HandrailHgtR/cos(angle)-sbhr,	RailUNID,sbhPerpR,2,sbhr : RailUNID=RailUNID+1
			HOTSPOT 0,0,hrr+dsr-HandrailHgtR/cos(angle)+1,		RailUNID,sbhPerpR,3,sbhr : RailUNID=RailUNID+1

			HOTSPOT atfogR,0,hrr+dsr-HandrailHgtR/cos(angle),			RailUNID,sbhPerpR,1+128,sbhr : RailUNID=RailUNID+1
			HOTSPOT atfogR,0,hrr+dsr-HandrailHgtR/cos(angle)-sbhr,		RailUNID,sbhPerpR,2,sbhr : RailUNID=RailUNID+1
			HOTSPOT atfogR,0,hrr+dsr-HandrailHgtR/cos(angle)+1,			RailUNID,sbhPerpR,3,sbhr : RailUNID=RailUNID+1
		ENDIF

		DEL 1

		!!! *** Right Railing/Lower Part
		lraSimple=atfogR
		lraComplex=atfogR
		additionXComplex=0
		additionZComplex=0
		hrovL=hror
		hrovR=hror
		postNumber = npr
		side = SIDE_RIGHT
		rom_m = 2
		rmm_m = 2
		gosub "callRailsForStair"
	endif

	del 5

ENDIF

DEL 3
DEL 1	!!ADDx -ljl

return





"monolith":

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!! MONOLITH !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

pen gs_cont_pen

atfogo=sqr(td*td*rnu*rnu+th*th*rnu*rnu)
coss=td*rnu/atfogo

maxfloorh=sst/coss
maxtopfloorh=maxfloorh
topfloorh=lst
floorh=lst2

topd=td*(maxfloorh-lst)/th

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!! HOTSPOTS !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

	!!! Editable HOTSPOTs at First Tread

	IF  firstTreadLevel_m = FIRSTTREAD_ATFLOOR THEN
		ry=-td

		FlightUNID=500

		!!! LOWER SLAB THICKNESS
		HOTSPOT 		0,	ry,	0, FlightUNID, lst2, 1+128 : FlightUNID=FlightUNID+1
		HOTSPOT 		0,	ry,	1, FlightUNID, lst2, 3 : FlightUNID=FlightUNID+1
		HOTSPOT 		0,ry,	-lst2, FlightUNID, lst2, 2 : FlightUNID=FlightUNID+1

		HOTSPOT 		flw,	ry,	0, FlightUNID, lst2, 1+128 : FlightUNID=FlightUNID+1
		HOTSPOT 		flw,	ry,	1, FlightUNID, lst2, 3 : FlightUNID=FlightUNID+1
		HOTSPOT 		flw,ry,	-lst2, FlightUNID, lst2, 2 : FlightUNID=FlightUNID+1
	ELSE
		ry=0
	ENDIF

		FlightUNID=506

		!!! FLIGHT WIDTH
		HOTSPOT 		0,	ry,	covthick, FlightUNID, flw, 1+256 : FlightUNID=FlightUNID+1
		HOTSPOT 		-1,	ry,	covthick, FlightUNID, flw, 3 : FlightUNID=FlightUNID+1
		HOTSPOT 		flw,ry,	covthick, FlightUNID, flw, 2 : FlightUNID=FlightUNID+1


	!!! Editable HOTSPOTs at Top Tread

		!!! Vert.Height of Stair Slab Thickness
		temp_sst=sst*(sqr(td*td+th*th))/td

		!!! HOTSPOTs on Top
		td_x1=(td*(lst-th))/th
		alfa=ATN(th/td)
		td_x2=sst/sin(alfa)
		td_x=td_x2-td_x1

	IF  topTreadLevel_m = TOPTREAD_ATFLOOR THEN
		ry=(rnu)*td
		rz_stair=(rnu)*th
		rz_slab=(rnu)*th

		IF temp_sst > lst THEN 	!!! UPPER SLAB

			FlightUNID=509

			HOTSPOT 		0,	ry-td+td_x,	rz_slab-lst, FlightUNID : FlightUNID=FlightUNID+1
			HOTSPOT 		flw,	ry-td+td_x,	rz_slab-lst, FlightUNID : FlightUNID=FlightUNID+1
		ENDIF

	ELSE
		ry=(rnu-1)*td
		rz_stair=(rnu-1)*th
		rz_slab=(rnu-1)*th+th

		IF temp_sst < lst THEN 	!!! UPPER SLAB

			FlightUNID=511

			HOTSPOT 		0,	ry+td_x,	rz_slab-lst, FlightUNID : FlightUNID=FlightUNID+1
			HOTSPOT 		flw,	ry+td_x,	rz_slab-lst, FlightUNID : FlightUNID=FlightUNID+1
		ENDIF
	ENDIF

		FlightUNID=513

		!!! FLIGHT WIDTH

		HOTSPOT 		0,	ry,	rz_stair+covthick, FlightUNID, flw, 1+256 : FlightUNID=FlightUNID+1
		HOTSPOT 		-1,	ry,	rz_stair+covthick, FlightUNID, flw, 3 : FlightUNID=FlightUNID+1
		HOTSPOT 		flw,ry,	rz_stair+covthick, FlightUNID, flw, 2 : FlightUNID=FlightUNID+1

		!!! UPPER SLAB THICKNESS

		HOTSPOT 		0,	ry,	rz_slab, FlightUNID, lst, 1+128 : FlightUNID=FlightUNID+1
		HOTSPOT 		0,	ry,	rz_slab+1, FlightUNID, lst, 3 : FlightUNID=FlightUNID+1
		HOTSPOT 		0,	ry,	rz_slab-lst, FlightUNID, lst, 2 : FlightUNID=FlightUNID+1

		HOTSPOT 		flw,	ry,	rz_slab, FlightUNID, lst, 1+128 : FlightUNID=FlightUNID+1
		HOTSPOT 		flw,	ry,	rz_slab+1, FlightUNID, lst, 3 : FlightUNID=FlightUNID+1
		HOTSPOT 		flw,	ry,	rz_slab-lst, FlightUNID, lst, 2 : FlightUNID=FlightUNID+1



ROTy 90
ROTz 90

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!! TREADS !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

IF iNoseType = NOSE_ROUNDED THEN
	put tproj,0
	put 0,0
	pontszam=2
ELSE
	put 0,0
	pontszam=1
ENDIF

landcovthick=0

IF iLowerJunctionType = LOWERJUNCTION_FLOOR_OR_LANDING THEN
  IF firstTreadLevel_m = FIRSTTREAD_ATFLOOR THEN
	!		Cover4all
	  IF cover and iNoseType = NOSE_NORMAL and recefice = 0 and gs_detlevel_3D_m = DET3D_DETAILED THEN
		MATERIAL mat_tread
		SECT_FILL typeFillTread, penBackFillTread, penFillTread, penLineTread

		IF covthick > 0 THEN
		  PRISM 5, flw,
			  -td,0+landcovthick,
			  0,0+landcovthick,
			  0,covthick+landcovthick,
			  -td,covthick+landcovthick,
			  -td,0+landcovthick
		ENDIF
		recnum=5
	  ENDIF
	  IF covery and iNoseType = NOSE_NORMAL and gs_detlevel_3D_m = DET3D_DETAILED THEN
			MATERIAL mat_riser
			SECT_FILL typeFillRiser, penBackFillRiser, penFillRiser, penLineRiser

			ADDy covthick
			  PRISM 5, flw,
				  -covthicky,0+landcovthick,
				  0,0+landcovthick,
				  0,th-covthick,
				  -covthicky,th-covthick,
				  -covthicky,0+landcovthick
			DEL 1
	  ENDIF
	put -td,0+landcovthick
	put -td,-lst2
	put 0,-lst2
	pontszam=pontszam+3
  ELSE
	IF covery and iNoseType = NOSE_NORMAL and gs_detlevel_3D_m = DET3D_DETAILED and covthicky > 0 THEN
		MATERIAL mat_riser
		SECT_FILL typeFillRiser, penBackFillRiser, penFillRiser, penLineRiser

		PRISM 5, flw,
			0,landcovthick+covthick,
			-covthicky, landcovthick+covthick,
			-covthicky, th,
			0,th,
			0,landcovthick+covthick
	ENDIF
  ENDIF

  IF maxfloorh < lst2 THEN
	  talp = 0
	  put 0,-1*maxfloorh
	  pontszam=pontszam+1
  ELSE
	  talp=td*(maxfloorh-lst2)/th
	  put 0,-1*lst2
	  put talp,-1*lst2
	  pontszam=pontszam+2
  ENDIF
ENDIF


!!!*********************************************************
IF iLowerJunctionType = LOWERJUNCTION_GROUND_FLOOR THEN
  sinn=th/(sqr(td*td+th*th))
  talp=sst/sinn

	IF firstTreadLevel_m = FIRSTTREAD_ATFLOOR THEN
		put -td,0
		put -td,-lst2

		put 0,-1*lst2
		put talp,-1*lst2
		put talp,0
		pontszam=pontszam+5

		IF cover and iNoseType = NOSE_NORMAL and gs_detlevel_3D_m = DET3D_DETAILED THEN
		  MATERIAL mat_tread
		SECT_FILL typeFillTread, penBackFillTread, penFillTread, penLineTread

		IF covthick > 0 THEN
		  PRISM 5, flw,
			  -td,0+landcovthick,
			  0,0+landcovthick,
			  0,covthick+landcovthick,
			  -td,covthick+landcovthick,
			  -td,0+landcovthick
		ENDIF
		ENDIF
		IF covery and iNoseType = NOSE_NORMAL and gs_detlevel_3D_m = DET3D_DETAILED THEN
			MATERIAL mat_riser
			SECT_FILL typeFillRiser, penBackFillRiser, penFillRiser, penLineRiser

			ADDy covthick
			PRISM 5, flw,
				0,landcovthick,
				-covthicky, landcovthick,
				-covthicky, th-covthick,
				0,th-covthick,
				0,landcovthick
			DEL 1
		ENDIF
	ENDIF

  IF firstTreadLevel_m = FIRSTTREAD_ABOVEFLOOR THEN
	IF iNoseType = NOSE_ROUNDED THEN
		put tproj,0
		put 0,0
		pontszam=pontszam+1
	ELSE put 0,0

		put talp,0
		pontszam=pontszam+2

		IF covery and iNoseType = NOSE_NORMAL and gs_detlevel_3D_m = DET3D_DETAILED THEN
			MATERIAL mat_riser
			SECT_FILL typeFillRiser, penBackFillRiser, penFillRiser, penLineRiser

			PRISM 5, flw,
				0,landcovthick,
				-covthicky, landcovthick,
				-covthicky, th,
				0,th,
				0,landcovthick
		ENDIF
	ENDIF
ENDIF
!!!*********************************************************

IF gs_detlevel_3D_m = DET3D_SIMPLE THEN
	IF covery THEN incx=-covthicky ELSE incx=0
	incy = covthick
ELSE
	incx=0
	incy=0
ENDIF

!!!*********************************************************
IF topTreadLevel_m = TOPTREAD_BELOWFLOOR THEN
	put topd+td*rnu, th*rnu-lst
	put td*rnu-td, th*rnu-lst

	put td*rnu-td,th*rnu-th
	IF incy <> 0 THEN
		put td*rnu-td,th*rnu+incy-th
		pontszam=pontszam+1
	ENDIF
	pontszam=pontszam+3

	lepy=th*rnu-th+incy
	lepx=td*rnu-td+incx
	startpoint=2
ELSE
	pontszam=pontszam+4

	put topd+td*rnu,th*rnu-lst
	put td*rnu,th*rnu-lst

	put td*rnu,th*rnu+incy
	put td*rnu-td+incx,th*rnu+incy
	lepy=th*rnu+incy
	lepx=td*rnu+incx
	startpoint=1
ENDIF

!!!*********************************************************

FOR i=startpoint to rnu
	IF cover and iNoseType = NOSE_NORMAL and recefice = 0 and gs_detlevel_3D_m = DET3D_DETAILED THEN
		MATERIAL mat_tread
		SECT_FILL typeFillTread, penBackFillTread, penFillTread, penLineTread

		IF covthick > 0 THEN
			PRISM 5, flw,
				lepx, lepy,
				lepx-td-ns-covthicky, lepy,
				lepx-td-ns-covthicky, lepy+ covthick,
				lepx, lepy+ covthick,
				lepx, lepy
		ENDIF
	ENDIF
	IF covery and iNoseType = NOSE_NORMAL and i <> startpoint and gs_detlevel_3D_m = DET3D_DETAILED and covthicky > 0 THEN
		MATERIAL mat_riser
		SECT_FILL typeFillRiser, penBackFillRiser, penFillRiser, penLineRiser

		PRISM 5, flw,
			lepx-covthicky,lepy+covthick,
			lepx,          lepy+covthick,
			lepx,          lepy+th,
			lepx-covthicky,lepy+th,
			lepx-covthicky,lepy+covthick
	ENDIF
	IF iNoseType = NOSE_ROUNDED THEN
		lepx=lepx-td
		put lepx,lepy
		lepy=lepy-th
		IF i<>rnu THEN put lepx+tproj,lepy
	ELSE
		lepx=lepx-td
		put lepx,lepy
		lepy=lepy-th
		IF i<>rnu THEN put lepx,lepy
	ENDIF
NEXT i
i=i-startpoint

!!!*********************************************************

IF gs_detlevel_3D_m = DET3D_SIMPLE and covery and firstTreadLevel_m = FIRSTTREAD_ATFLOOR and iNoseType = NOSE_NORMAL THEN
	put -covthicky,0
	pontszam=pontszam+1
ENDIF

!!!*********************************************************



!	put 0,0
pontszam=pontszam+i*2-1
MATERIAL matb
SECT_FILL typeFillStringer, penBackFillStringer, penFillStringer, penLineStringer

PRISM pontszam,flw,
	get(pontszam*2)

IF iNoseType = NOSE_ROUNDED and cover and gs_detlevel_3D_m = DET3D_DETAILED THEN
	MATERIAL mat_tread
	SECT_FILL typeFillTread, penBackFillTread, penFillTread, penLineTread

	kisx=covthick*tproj/th
	startpnt=1
	IF topTreadLevel_m = TOPTREAD_ATFLOOR THEN
		endpnt=rnu
	ELSE endpnt=rnu-1
	FOR i=startpnt to endpnt-1
		ADDy i*th
		ADDx i*td
		IF ABS(recefice)<EPS THEN
			PRISM_ 9, flw,
				tproj,					0,15,
				tproj-kisx,				covthick,15,
				-td,					covthick,79,
				-td,					0,900,
				0,						180-atn(th/tproj),4013,
				-td+tproj-kisx-covthick,covthick-th,15,
				-td+tproj-kisx,			covthick-th,15,
				-td,					0,15,
				tproj,					0,15
		ELSE
			recnum=5
			FOR rcfc=recnum to 1 step -1
				put -td+(rcfc*2)*reclen, covthick,15
				put	-td+(rcfc*2)*reclen, covthick-reclen,15
				put	-td+(rcfc*2-1)*reclen, covthick-reclen,15
				put	-td+(rcfc*2-1)*reclen, covthick,15
			NEXT rcfc
			PRISM_ 9+recnum*4, flw,
				tproj,					0,15,
				tproj-kisx,				covthick,15,

				get(recnum*12),

				-td,					covthick,79,
				-td,					0,900,
				0,						180-atn(th/tproj),4013,
				-td+tproj-kisx-covthick,covthick-th,15,
				-td+tproj-kisx,			covthick-th,15,
				-td,					0,15,
				tproj,					0,15
		ENDIF
		DEL 2
	NEXT i


	ADDy endpnt*th
	ADDx endpnt*td

	IF recefice THEN
		recnum=5
		FOR rcfc=recnum to 1 step -1
			put -td+(rcfc*2)*reclen, covthick,15
			put	-td+(rcfc*2)*reclen, covthick-reclen,15
			put	-td+(rcfc*2-1)*reclen, covthick-reclen,15
			put	-td+(rcfc*2-1)*reclen, covthick,15
		NEXT rcfc
		PRISM_ 9+recnum*4, flw,
			0,						0,15,
			0,						covthick,15,
			get(recnum*12),
			-td,					covthick,79,
			-td,					0,900,
			0,						180-atn(th/tproj),4013,
			-td+tproj-kisx-covthick,covthick-th,15,
			-td+tproj-kisx,			covthick-th,15,
			-td,					0,15,
			0,						0,15
	ELSE
		PRISM_ 9, flw,
			0,						0,15,
			0,						covthick,15,
			-td,					covthick,79,
			-td,					0,900,
			0,						180-atn(th/tproj),4013,
			-td+tproj-kisx-covthick,covthick-th,15,
			-td+tproj-kisx,			covthick-th,15,
			-td,					0,15,
			0,						0,15
	ENDIF
	DEL 2

	IF firstTreadLevel_m = FIRSTTREAD_ATFLOOR and iNoseType = NOSE_ROUNDED THEN
		IF covthick > 0 THEN
		PRISM_ 5, flw,
			tproj,		0,		 15,
			-td,						0,		 15,
			-td,						covthick,15,
			tproj-kisx,				covthick,15,
			tproj,		0,		 15
		ENDIF
	ENDIF
ENDIF



! 	S P I N E B E A M !..............................................

IF iFlightSectionType = WITH_SPINEBEAM THEN
	ROTy 90
	ROTx 90
	IF topd < 0 THEN
		IF topTreadLevel_m = TOPTREAD_BELOWFLOOR THEN
			corrval = td*rnu-td
		ELSE
			corrval=td*rnu
		ENDIF
		IF iLowerJunctionType = LOWERJUNCTION_FLOOR_OR_LANDING THEN
			MATERIAL matsb
			SECT_FILL typeFillStringer, penBackFillStringer, penFillStringer, penLineStringer

			tubea 7, 5, 1+2+16+32+64,
				0,0,0,
				flw/2-beamx/2, rfthickness,0,
				flw/2-beamx/2, rfthickness+beamy,0,
				flw/2+beamx/2, rfthickness+beamy,0,
				flw/2+beamx/2, rfthickness,0,
				flw,0,0,
				0,0,0,

				 0, 	talp-td,	 maxfloorh-th,
				 0,		talp,		 maxfloorh,
				 0,		topd+td*rnu, -th*rnu+lst,
				 0,		corrval,	 -th*rnu+lst,
				 0, 	corrval+td, -th*rnu+lst
		ENDIF
		IF iLowerJunctionType = LOWERJUNCTION_GROUND_FLOOR THEN
			cutplane
			MATERIAL matsb
			SECT_FILL typeFillStringer, penBackFillStringer, penFillStringer, penLineStringer

			tubea 7, 5, 1+2+16+32+64,
				0,0,0,
				flw/2-beamx/2, rfthickness,0,
				flw/2-beamx/2, rfthickness+beamy,0,
				flw/2+beamx/2, rfthickness+beamy,0,
				flw/2+beamx/2, rfthickness,0,
				flw,0,0,
				0,0,0,

				 0, 	talp-td,	 -th,
				 0,		talp,		 0,
				 0,		topd+td*rnu, -th*rnu+lst,
				 0,		corrval,	 -th*rnu+lst,
				 0, 	corrval+td,  -th*rnu+lst
			cutend
		ENDIF
	ELSE
		IF iLowerJunctionType = LOWERJUNCTION_FLOOR_OR_LANDING THEN
			IF lst2 > maxfloorh THEN
				corrval = maxfloorh
			ELSE
				corrval=lst2
			ENDIF
			MATERIAL matsb
			SECT_FILL typeFillStringer, penBackFillStringer, penFillStringer, penLineStringer

			tubea 7, 4, 1+2+16+32+64,
				0,0,0,
				flw/2-beamx/2, rfthickness,0,
				flw/2-beamx/2, rfthickness+beamy,0,
				flw/2+beamx/2, rfthickness+beamy,0,
				flw/2+beamx/2, rfthickness,0,
				flw,0,0,
				0,0,0,


				 0, 	talp-td,	 corrval-th,
				 0,		talp,		 corrval,
				 0,		topd+td*rnu, -th*rnu+lst,
				 0, 	td*rnu+topd+td, 	-th*rnu+lst+th
		ENDIF
		IF iLowerJunctionType = LOWERJUNCTION_GROUND_FLOOR THEN
			cutplane
			MATERIAL matsb
			SECT_FILL typeFillStringer, penBackFillStringer, penFillStringer, penLineStringer
			tubea 7, 4, 1+2+16+32+64,
				0,0,0,
				flw/2-beamx/2, rfthickness,0,
				flw/2-beamx/2, rfthickness+beamy,0,
				flw/2+beamx/2, rfthickness+beamy,0,
				flw/2+beamx/2, rfthickness,0,
				flw,0,0,
				0,0,0,


				 0, 	talp-td,	 -th,
				 0,		talp,		 0,
				 0,		topd+td*rnu, -th*rnu+lst,
				 0, 	td*rnu+topd+td, 	-th*rnu+lst+th
			cutend
		ENDIF
	ENDIF
DEL 2
ENDIF

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** Railing ** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

IF hrtr_m=1 THEN		!!! HANDRAIL RIGHT WIDTH
		HandrailHgtR=hrhr
	ELSE
		HandrailHgtR=hrdr
ENDIF

IF hrtl_m=1 THEN		!!! HANDRAIL RIGHT WIDTH
		HandrailHgtL=hrhl
	ELSE
		HandrailHgtL=hrdl
ENDIF

rx=0	! rail x0
ry=0	! rail y0
lx=0	! rail l0
ly=0	! rail l0

lrah=td*(rnu-1)

kisatfog=sqr(td*td+th*th) ! egy lepcsofok atfogoja

atfogR=sqr(rnu*rnu*(td*td+th*th))+(OverhangRBottom+OverhangRTop)/cos(angle)-kisatfog
atfogL=sqr(rnu*rnu*(td*td+th*th))+(OverhangLBottom+OverhangLTop)/cos(angle)-kisatfog

RRailLength=lrah+OverhangRBottom+OverhangRTop
LRailLength=lrah+OverhangLBottom+OverhangLTop

top_ry=((OverhangRBottom+OverhangRTop)*th)/td
top_ly=((OverhangLBottom+OverhangLTop)*th)/td

IF  firstTreadLevel_m = FIRSTTREAD_ATFLOOR THEN
	IF iLowerJunctionType = LOWERJUNCTION_FLOOR_OR_LANDING THEN
		rx=-OverhangRBottom
		ry=-(OverhangRBottom*th)/td

		lx=-OverhangLBottom
		ly=-(OverhangLBottom*th)/td

	ELSE ! Ground Floor
		rx=-OverhangRBottom
		ry=-(OverhangRBottom*th)/td

		lx=-OverhangLBottom
		ly=-(OverhangLBottom*th)/td
	ENDIF
ENDIF

IF  firstTreadLevel_m = FIRSTTREAD_ABOVEFLOOR THEN
	IF iLowerJunctionType = LOWERJUNCTION_FLOOR_OR_LANDING THEN
		rx=-OverhangRBottom
		ry=-(OverhangRBottom*th)/td

		lx=-OverhangLBottom
		ly=-(OverhangLBottom*th)/td
	ELSE ! Ground Floor
		rx=-OverhangRBottom
		ry=-(OverhangRBottom*th)/td

		lx=-OverhangLBottom
		ly=-(OverhangLBottom*th)/td
	ENDIF
ENDIF

! ------------------------------------------------------------------------------
! Left rail
! ------------------------------------------------------------------------------

IF rail_m = RAILPOS_LEFT or rail_m = RAILPOS_BOTH THEN
	material fmatl

	if bSameRails then
		leftRailType_m	= rightRailType_m
		atfogL			= atfogR
		LRailLength		= RRailLength
		top_ly			= top_ry
	endif

	rplPostBase = (leftRailType_m = 7 or leftRailType_m = 8 or leftRailType_m = 9 or leftRailType_m = 11)

	ROTx -90
	ADDz covthick+th

	ADDy roffl-handRailWidthL/2
	ADDz ly
	ADDx lx+bComplexRailLeft*td/2

	IF bSameRails THEN
		RailUNID=2200

		HOTSPOT 0,-roffr,0, RailUNID, roffr, 1+128 : RailUNID=RailUNID+1
		HOTSPOT 0,0,0, RailUNID, roffr, 2 : RailUNID=RailUNID+1
		HOTSPOT 0,-roffr-1,0, RailUNID, roffr, 3 : RailUNID=RailUNID+1

		ADDz (OverhangRBottom)*tan(angle)
			HOTSPOT RRailLength,-roffr,  (rnu-1)*th+OverhangRTop*tan(angle), RailUNID, roffr, 1+128 : RailUNID=RailUNID+1
			HOTSPOT RRailLength,0,  	(rnu-1)*th+OverhangRTop*tan(angle), RailUNID, roffr, 2 : RailUNID=RailUNID+1
			HOTSPOT RRailLength,-roffr-1,(rnu-1)*th+OverhangRTop*tan(angle), RailUNID, roffr, 3 : RailUNID=RailUNID+1
		DEL 1

	ELSE
		RailUNID=2206

		HOTSPOT 0,-roffl,0, 	RailUNID, roffl, 1+128 : RailUNID=RailUNID+1
		HOTSPOT 0,0,	0, 		RailUNID, roffl, 2 : RailUNID=RailUNID+1
		HOTSPOT 0,-roffl-1, 0, 	RailUNID, roffl, 3 : RailUNID=RailUNID+1

		ADDz (OverhangLBottom)*tan(angle)
			HOTSPOT LRailLength,-roffl,  	(rnu-1)*th+OverhangLTop*tan(angle), RailUNID, roffl, 1+128 : RailUNID=RailUNID+1
			HOTSPOT LRailLength, 0,  		(rnu-1)*th+OverhangLTop*tan(angle), RailUNID, roffl, 2 : RailUNID=RailUNID+1
			HOTSPOT LRailLength,-roffl-1,	(rnu-1)*th+OverhangLTop*tan(angle), RailUNID, roffl, 3 : RailUNID=RailUNID+1
		DEL 1
	ENDIF

	IF roml_m = RAILORIENT_VERTICAL THEN	!!! (RailUNID 1112-1142...>1300)

		IF bSameRails THEN
			RailUNID=2212

			! Distance from Top of Tread

			HOTSPOT 0,0,0,	RailUNID, dsr, 1+128 : RailUNID=RailUNID+1
			HOTSPOT 0,0,dsr,	RailUNID, dsr, 2 : RailUNID=RailUNID+1
			HOTSPOT 0,0,-1,	RailUNID, dsr, 3 : RailUNID=RailUNID+1


			HOTSPOT RRailLength,0,(rnu-1)*th+top_ry,	RailUNID, dsr, 1+128 : RailUNID=RailUNID+1
			HOTSPOT RRailLength,0,(rnu-1)*th+dsr+top_ry,	RailUNID, dsr, 2 : RailUNID=RailUNID+1
			HOTSPOT RRailLength,0,(rnu-1)*th-1+top_ry,	RailUNID, dsr, 3 : RailUNID=RailUNID+1


			! Height of Rail

			HOTSPOT 0,0,dsr,	RailUNID, hrr, 1+128 : RailUNID=RailUNID+1
			HOTSPOT 0,0,dsr+hrr,	RailUNID, hrr, 2 : RailUNID=RailUNID+1
			HOTSPOT 0,0,dsr-1,	RailUNID, hrr, 3 : RailUNID=RailUNID+1

			HOTSPOT RRailLength,0,(rnu-1)*th+dsr+top_ry,	RailUNID, hrr, 1+128 : RailUNID=RailUNID+1
			HOTSPOT RRailLength,0,(rnu-1)*th+dsr+hrr+top_ry,	RailUNID, hrr, 2 : RailUNID=RailUNID+1
			HOTSPOT RRailLength,0,(rnu-1)*th-1+dsr+top_ry,	RailUNID, hrr, 3 : RailUNID=RailUNID+1


			ADD OverhangRBottom,0,(OverhangRBottom)*tan(angle)
			! Rail Overhang at Bottom

			HOTSPOT 0,	0,	dsr,	RailUNID, temp_OverhangRBottom, 1+128,OverhangRBottom : RailUNID=RailUNID+1
			HOTSPOT 1,	0,	dsr+tan(angle),	RailUNID, temp_OverhangRBottom, 3,OverhangRBottom : RailUNID=RailUNID+1
			HOTSPOT -OverhangRBottom,0,	dsr-OverhangRBottom*tan(angle),	RailUNID, temp_OverhangRBottom, 2,OverhangRBottom : RailUNID=RailUNID+1

			! Rail Overhang at Top

			HOTSPOT lrah, 0,				(rnu-1)*th+dsr,		RailUNID, temp_OverhangRTop, 1+128,OverhangRTop : RailUNID=RailUNID+1
			HOTSPOT lrah-1, 0,				(rnu-1)*th+dsr-tan(angle),		RailUNID, temp_OverhangRTop, 3,OverhangRTop : RailUNID=RailUNID+1
			HOTSPOT lrah+OverhangRTop, 0,	(rnu-1)*th+dsr+OverhangRTop*tan(angle),	RailUNID, temp_OverhangRTop, 2,OverhangRTop : RailUNID=RailUNID+1
			DEL 1

			IF leftRailType_m = 9 THEN
				RailUNID=2230

				! TOP WIRE/SUBBOARD DISTANCE FROM HANDRAIL
				HOTSPOT 0,0,hrr+dsr-HandrailHgtR,RailUNID,sbhr,1+128 : RailUNID=RailUNID+1
				HOTSPOT 0,0,hrr+dsr-HandrailHgtR-sbhr,RailUNID,sbhr,2 : RailUNID=RailUNID+1
				HOTSPOT 0,0,hrr+dsr-HandrailHgtR+1,RailUNID,sbhr,3 : RailUNID=RailUNID+1

				HOTSPOT RRailLength,0,(rnu-1)*th+top_ry+hrr+dsr-HandrailHgtR,RailUNID,sbhr,1+128 : RailUNID=RailUNID+1
				HOTSPOT RRailLength,0,(rnu-1)*th+top_ry+hrr+dsr-HandrailHgtR-sbhr,RailUNID,sbhr,2 : RailUNID=RailUNID+1
				HOTSPOT RRailLength,0,(rnu-1)*th+top_ry+hrr+dsr-HandrailHgtR+1,RailUNID,sbhr,3 : RailUNID=RailUNID+1
			ENDIF

			IF rplPostBase=1 THEN
				RailUNID=2236

				! POST BASE OVERHANG
				HOTSPOT 0,0,0,RailUNID,gs_PostBaseOverhangR,1 : RailUNID=RailUNID+1
				HOTSPOT 0,0,-gs_PostBaseOverhangR,RailUNID,gs_PostBaseOverhangR,2 : RailUNID=RailUNID+1
				HOTSPOT 0,0,1,RailUNID,gs_PostBaseOverhangR,3 : RailUNID=RailUNID+1

				HOTSPOT RRailLength,0,(rnu-1)*th+top_ry,RailUNID,gs_PostBaseOverhangR,1 : RailUNID=RailUNID+1
				HOTSPOT RRailLength,0,(rnu-1)*th+top_ry-gs_PostBaseOverhangR,RailUNID,gs_PostBaseOverhangR,2 : RailUNID=RailUNID+1
				HOTSPOT RRailLength,0,(rnu-1)*th+top_ry+1,RailUNID,gs_PostBaseOverhangR,3 : RailUNID=RailUNID+1
			ENDIF
		else
			RailUNID=2400

			! Distance from Top of Tread

			HOTSPOT 0,0,0,	RailUNID, dsl, 1+128 : RailUNID=RailUNID+1
			HOTSPOT 0,0,dsl,	RailUNID, dsl, 2 : RailUNID=RailUNID+1
			HOTSPOT 0,0,-1,	RailUNID, dsl, 3 : RailUNID=RailUNID+1

			HOTSPOT LRailLength,0,(rnu-1)*th+top_ly,	RailUNID, dsl, 1+128 : RailUNID=RailUNID+1
			HOTSPOT LRailLength,0,(rnu-1)*th+dsl+top_ly,	RailUNID, dsl, 2 : RailUNID=RailUNID+1
			HOTSPOT LRailLength,0,(rnu-1)*th-1+top_ly,	RailUNID, dsl, 3 : RailUNID=RailUNID+1


			! Height of Rail

			HOTSPOT 0,0,dsl,	RailUNID, hrl, 1+128 : RailUNID=RailUNID+1
			HOTSPOT 0,0,dsl+hrl,	RailUNID, hrl, 2 : RailUNID=RailUNID+1
			HOTSPOT 0,0,dsl-1,	RailUNID, hrl, 3 : RailUNID=RailUNID+1

			HOTSPOT LRailLength,0,(rnu-1)*th+dsl+top_ly,	RailUNID, hrl, 1+128 : RailUNID=RailUNID+1
			HOTSPOT LRailLength,0,(rnu-1)*th+dsl+hrl+top_ly,	RailUNID, hrl, 2 : RailUNID=RailUNID+1
			HOTSPOT LRailLength,0,(rnu-1)*th-1+dsl+top_ly,	RailUNID, hrl, 3 : RailUNID=RailUNID+1


			ADD OverhangLBottom,0,(OverhangLBottom)*tan(angle)
			! Rail Overhang at Bottom

			HOTSPOT 0,	0,	dsl,	RailUNID, temp_OverhangLBottom, 1+128,OverhangLBottom : RailUNID=RailUNID+1
			HOTSPOT 1,	0,	dsl+tan(angle),	RailUNID, temp_OverhangLBottom, 3,OverhangLBottom : RailUNID=RailUNID+1
			HOTSPOT -OverhangLBottom,0,	dsl-OverhangLBottom*tan(angle),	RailUNID, temp_OverhangLBottom, 2,OverhangLBottom : RailUNID=RailUNID+1

			! Rail Overhang at Top

			HOTSPOT lrah, 0,				(rnu-1)*th+dsl,		RailUNID, temp_OverhangLTop, 1+128,OverhangLTop : RailUNID=RailUNID+1
			HOTSPOT lrah-1, 0,				(rnu-1)*th+dsl-tan(angle),		RailUNID, temp_OverhangLTop, 3,OverhangLTop : RailUNID=RailUNID+1
			HOTSPOT lrah+OverhangLTop, 0,	(rnu-1)*th+dsl+OverhangLTop*tan(angle),	RailUNID, temp_OverhangLTop, 2,OverhangLTop : RailUNID=RailUNID+1
			DEL 1

			IF rplPostBase=1 THEN
				RailUNID=2418

				! post base overhang
				HOTSPOT 0,0,0,RailUNID,gs_PostBaseOverhangL,1 : RailUNID=RailUNID+1
				HOTSPOT 0,0,-gs_PostBaseOverhangL,RailUNID,gs_PostBaseOverhangL,2 : RailUNID=RailUNID+1
				HOTSPOT 0,0,1,RailUNID,gs_PostBaseOverhangL,3 : RailUNID=RailUNID+1

				HOTSPOT LRailLength,0,(rnu-1)*th+top_ly,RailUNID,gs_PostBaseOverhangL,1 : RailUNID=RailUNID+1
				HOTSPOT LRailLength,0,(rnu-1)*th+top_ly-gs_PostBaseOverhangL,RailUNID,gs_PostBaseOverhangL,2 : RailUNID=RailUNID+1
				HOTSPOT LRailLength,0,(rnu-1)*th+top_ly+1,RailUNID,gs_PostBaseOverhangL,3 : RailUNID=RailUNID+1
			ENDIF

			IF leftRailType_m = 9 THEN
				RailUNID=2424

				! top wire/subboard distance from handrail
				HOTSPOT 0,0,hrl+dsl-HandrailHgtL,RailUNID,sbhl,1+128 : RailUNID=RailUNID+1
				HOTSPOT 0,0,hrl+dsl-HandrailHgtL-sbhl,RailUNID,sbhl,2 : RailUNID=RailUNID+1
				HOTSPOT 0,0,hrl+dsl-HandrailHgtL+1,RailUNID,sbhl,3 : RailUNID=RailUNID+1

				HOTSPOT LRailLength,0,(rnu-1)*th+top_ly+hrl+dsl-HandrailHgtL,RailUNID,sbhl,1+128 : RailUNID=RailUNID+1
				HOTSPOT LRailLength,0,(rnu-1)*th+top_ly+hrl+dsl-HandrailHgtL-sbhl,RailUNID,sbhl,2 : RailUNID=RailUNID+1
				HOTSPOT LRailLength,0,(rnu-1)*th+top_ly+hrl+dsl-HandrailHgtL+1,RailUNID,sbhl,3 : RailUNID=RailUNID+1
			ENDIF
		endif

		lraSimple=LRailLength
		lraComplex=LRailLength
		additionXComplex=0
		additionZComplex=0
		hrovL=hrol
		hrovR=hrol
		postNumber = npl
		rom_m = 1
		rmm_m = 1
		side = SIDE_LEFT
		gosub "callRailsForStair"
	else
		IF bSameRails THEN
			ROTy -atn(th/td)

			RailUNID=2300

			! Distance from Top of Tread

			HOTSPOT 0,0,0,	RailUNID, dsr, 1+128 : RailUNID=RailUNID+1
			HOTSPOT 0,0,dsr,	RailUNID, dsr, 2 : RailUNID=RailUNID+1
			HOTSPOT 0,0,-1,	RailUNID, dsr, 3 : RailUNID=RailUNID+1

			HOTSPOT atfogR, 0,0,	RailUNID, dsr, 1+128 : RailUNID=RailUNID+1
			HOTSPOT atfogR, 0,dsr,	RailUNID, dsr, 2 : RailUNID=RailUNID+1
			HOTSPOT atfogR, 0,-1,	RailUNID, dsr, 3 : RailUNID=RailUNID+1

			! Height of Rail

			HOTSPOT 0,0,dsr,	RailUNID, hrr, 1+128 : RailUNID=RailUNID+1
			HOTSPOT 0,0,dsr+hrr,	RailUNID, hrr, 2 : RailUNID=RailUNID+1
			HOTSPOT 0,0,dsr-1,	RailUNID, hrr, 3 : RailUNID=RailUNID+1

			HOTSPOT atfogR,0,dsr,	RailUNID, hrr, 1+128 : RailUNID=RailUNID+1
			HOTSPOT atfogR,0,dsr+hrr,	RailUNID, hrr, 2 : RailUNID=RailUNID+1
			HOTSPOT atfogR,0,-1+dsr,	RailUNID, hrr, 3 : RailUNID=RailUNID+1


			ADDx temp_OverhangRBottom
			! Rail Overhang at Bottom

			HOTSPOT 0,	0,	dsr,	RailUNID, temp_OverhangRBottom, 1+128,OverhangRBottom  : RailUNID=RailUNID+1
			HOTSPOT 1, 0	,dsr,RailUNID, temp_OverhangRBottom, 3,OverhangRBottom : RailUNID=RailUNID+1
			HOTSPOT -temp_OverhangRBottom,0,dsr,RailUNID, temp_OverhangRBottom, 2,OverhangRBottom : RailUNID=RailUNID+1

			! Rail Overhang at Top

			HOTSPOT lrah*th/(td*sin(atn(th/td))), 0, dsr,	RailUNID, temp_OverhangRTop, 1+128,OverhangRTop  : RailUNID=RailUNID+1
			HOTSPOT lrah*th/(td*sin(atn(th/td)))-1, 0, dsr,RailUNID, temp_OverhangRTop, 3,OverhangRTop : RailUNID=RailUNID+1
			HOTSPOT lrah*th/(td*sin(atn(th/td)))+temp_OverhangRTop, 0, dsr,RailUNID, temp_OverhangRTop, 2,OverhangRTop : RailUNID=RailUNID+1

			DEL 1

			IF rplPostBase=1 THEN
				RailUNID=2318

				! post base overhang
				HOTSPOT 0,0,0,RailUNID,gs_PostBaseOverhangR,1 : RailUNID=RailUNID+1
				HOTSPOT 0,0,-gs_PostBaseOverhangR,RailUNID,gs_PostBaseOverhangR,2 : RailUNID=RailUNID+1
				HOTSPOT 0,0,1,RailUNID,gs_PostBaseOverhangR,3 : RailUNID=RailUNID+1

				HOTSPOT atfogR,0,0,RailUNID,gs_PostBaseOverhangR,1 : RailUNID=RailUNID+1
				HOTSPOT atfogR,0,-gs_PostBaseOverhangR,RailUNID,gs_PostBaseOverhangR,2 : RailUNID=RailUNID+1
				HOTSPOT atfogR,0,1,RailUNID,gs_PostBaseOverhangR,3 : RailUNID=RailUNID+1
			ENDIF

			IF leftRailType_m = 9 THEN
				RailUNID=2324

				! top wire/subboard distance from handrail
				HOTSPOT 0,0,hrr+dsr-HandrailHgtR/cos(angle),		RailUNID,sbhPerpR,1+128,sbhr : RailUNID=RailUNID+1
				HOTSPOT 0,0,hrr+dsr-HandrailHgtR/cos(angle)-sbhr,	RailUNID,sbhPerpR,2,sbhr : RailUNID=RailUNID+1
				HOTSPOT 0,0,hrr+dsr-HandrailHgtR/cos(angle)+1,		RailUNID,sbhPerpR,3,sbhr : RailUNID=RailUNID+1

				HOTSPOT atfogR,0,hrr+dsr-HandrailHgtR/cos(angle),			RailUNID,sbhPerpR,1+128,sbhr : RailUNID=RailUNID+1
				HOTSPOT atfogR,0,hrr+dsr-HandrailHgtR/cos(angle)-sbhr,		RailUNID,sbhPerpR,2,sbhr : RailUNID=RailUNID+1
				HOTSPOT atfogR,0,hrr+dsr-HandrailHgtR/cos(angle)+1,			RailUNID,sbhPerpR,3,sbhr : RailUNID=RailUNID+1
			ENDIF

			DEL 1

		else
			ROTy -atn(th/td)

			RailUNID=2500

			! Distance from Top of Tread

			HOTSPOT 0,0,0,	RailUNID, dsl, 1+128 : RailUNID=RailUNID+1
			HOTSPOT 0,0,dsl,	RailUNID, dsl, 2 : RailUNID=RailUNID+1
			HOTSPOT 0,0,-1,	RailUNID, dsl, 3 : RailUNID=RailUNID+1

			HOTSPOT atfogL, 0,0,	RailUNID, dsl, 1+128 : RailUNID=RailUNID+1
			HOTSPOT atfogL, 0,dsl,	RailUNID, dsl, 2 : RailUNID=RailUNID+1
			HOTSPOT atfogL, 0,-1,	RailUNID, dsl, 3 : RailUNID=RailUNID+1

			! Height of Rail

			HOTSPOT 0,0,dsl,	RailUNID, hrl, 1+128 : RailUNID=RailUNID+1
			HOTSPOT 0,0,dsl+hrl,	RailUNID, hrl, 2 : RailUNID=RailUNID+1
			HOTSPOT 0,0,dsl-1,	RailUNID, hrl, 3 : RailUNID=RailUNID+1

			HOTSPOT atfogL,0,dsl,	RailUNID, hrl, 1+128 : RailUNID=RailUNID+1
			HOTSPOT atfogL,0,dsl+hrl,	RailUNID, hrl, 2 : RailUNID=RailUNID+1
			HOTSPOT atfogL,0,-1+dsl,	RailUNID, hrl, 3 : RailUNID=RailUNID+1


			ADDx temp_OverhangLBottom
			! Rail Overhang at Bottom

			HOTSPOT 0,	0,	dsl,	RailUNID, temp_OverhangLBottom, 1+128,OverhangLBottom  : RailUNID=RailUNID+1
			HOTSPOT 1, 0	,dsl,RailUNID, temp_OverhangLBottom, 3,OverhangLBottom : RailUNID=RailUNID+1
			HOTSPOT -temp_OverhangLBottom,0,dsl,RailUNID, temp_OverhangLBottom, 2,OverhangLBottom : RailUNID=RailUNID+1

			! Rail Overhang at Top

			HOTSPOT lrah*th/(td*sin(atn(th/td))), 0, dsl,	RailUNID, temp_OverhangLTop, 1+128,OverhangLTop  : RailUNID=RailUNID+1
			HOTSPOT lrah*th/(td*sin(atn(th/td)))-1, 0, dsl,RailUNID, temp_OverhangLTop, 3,OverhangLTop : RailUNID=RailUNID+1
			HOTSPOT lrah*th/(td*sin(atn(th/td)))+temp_OverhangLTop, 0, dsl,RailUNID, temp_OverhangLTop, 2,OverhangLTop : RailUNID=RailUNID+1

			DEL 1

			IF rplPostBase=1 THEN
				RailUNID=2518

				! post base overhang
				HOTSPOT 0,0,0,RailUNID,gs_PostBaseOverhangL,1 : RailUNID=RailUNID+1
				HOTSPOT 0,0,-gs_PostBaseOverhangL,RailUNID,gs_PostBaseOverhangL,2 : RailUNID=RailUNID+1
				HOTSPOT 0,0,1,RailUNID,gs_PostBaseOverhangL,3 : RailUNID=RailUNID+1

				HOTSPOT atfogL,0,0,RailUNID,gs_PostBaseOverhangL,1 : RailUNID=RailUNID+1
				HOTSPOT atfogL,0,-gs_PostBaseOverhangL,RailUNID,gs_PostBaseOverhangL,2 : RailUNID=RailUNID+1
				HOTSPOT atfogL,0,1,RailUNID,gs_PostBaseOverhangL,3 : RailUNID=RailUNID+1
			ENDIF

			IF leftRailType_m = 9 THEN
				RailUNID=2524

				! top wire/subboard distance from handrail
				HOTSPOT 0,0,hrl+dsl-HandrailHgtL/cos(angle),		RailUNID,sbhPerpL,1+128,sbhl : RailUNID=RailUNID+1
				HOTSPOT 0,0,hrl+dsl-HandrailHgtL/cos(angle)-sbhl,	RailUNID,sbhPerpL,2,sbhl : RailUNID=RailUNID+1
				HOTSPOT 0,0,hrl+dsl-HandrailHgtL/cos(angle)+1,		RailUNID,sbhPerpL,3,sbhl : RailUNID=RailUNID+1

				HOTSPOT atfogL,0,hrl+dsl-HandrailHgtL/cos(angle),			RailUNID,sbhPerpL,1+128,sbhl : RailUNID=RailUNID+1
				HOTSPOT atfogL,0,hrl+dsl-HandrailHgtL/cos(angle)-sbhl,		RailUNID,sbhPerpL,2,sbhl : RailUNID=RailUNID+1
				HOTSPOT atfogL,0,hrl+dsl-HandrailHgtL/cos(angle)+1,			RailUNID,sbhPerpL,3,sbhl : RailUNID=RailUNID+1
			ENDIF

			DEL 1
		endif

		lraSimple=atfogL
		lraComplex=atfogL
		additionXComplex=0
		additionZComplex=0
		hrovL=hrol
		hrovR=hrol
		postNumber = npl
		rom_m = 2
		rmm_m = 2
		side = SIDE_LEFT
		gosub "callRailsForStair"
	endif

	DEL 5
ENDIF

! ------------------------------------------------------------------------------
! Right rail
! ------------------------------------------------------------------------------

IF rail_m = RAILPOS_RIGHT or rail_m = RAILPOS_BOTH THEN
	material fmatr

	rprPostBase = (rightRailType_m = 7 or rightRailType_m = 8 or rightRailType_m = 9 or rightRailType_m = 11)

	ROTx -90
	ADDz covthick+th
	ADDy -flw-roffr+handRailWidthR/2
	ADDz ry
	ADDx rx+bComplexRailRight*td/2

	!!! RAIL OFFSET
	RailUNID=2000

	HOTSPOT 0,roffr,0, RailUNID, roffr, 1+128 : RailUNID=RailUNID+1
	HOTSPOT 0,0,0, RailUNID, roffr, 2 : RailUNID=RailUNID+1
	HOTSPOT 0,roffr+1,0, RailUNID, roffr, 3 : RailUNID=RailUNID+1

	ADDz (OverhangRBottom)*tan(angle)
	HOTSPOT RRailLength,roffr,  (rnu-1)*th+OverhangRTop*tan(angle), RailUNID, roffr, 1+128 : RailUNID=RailUNID+1
	HOTSPOT RRailLength,0,  	(rnu-1)*th+OverhangRTop*tan(angle), RailUNID, roffr, 2 : RailUNID=RailUNID+1
	HOTSPOT RRailLength,roffr+1,(rnu-1)*th+OverhangRTop*tan(angle), RailUNID, roffr, 3 : RailUNID=RailUNID+1
	DEL 1

	IF romr_m = RAILORIENT_VERTICAL THEN		!!! (RailUNID 1006-1036...>1100)
		!!! Dist. from Top of Tread

		RailUNID=2006

		! Distance from Top of Tread

		HOTSPOT 0,0,0,	RailUNID, dsr, 1+128 : RailUNID=RailUNID+1
		HOTSPOT 0,0,dsr,	RailUNID, dsr, 2 : RailUNID=RailUNID+1
		HOTSPOT 0,0,-1,	RailUNID, dsr, 3 : RailUNID=RailUNID+1


		HOTSPOT RRailLength,0,(rnu-1)*th+top_ry,	RailUNID, dsr, 1+128 : RailUNID=RailUNID+1
		HOTSPOT RRailLength,0,(rnu-1)*th+dsr+top_ry,	RailUNID, dsr, 2 : RailUNID=RailUNID+1
		HOTSPOT RRailLength,0,(rnu-1)*th-1+top_ry,	RailUNID, dsr, 3 : RailUNID=RailUNID+1


		! Height of Rail

		HOTSPOT 0,0,dsr,	RailUNID, hrr, 1+128 : RailUNID=RailUNID+1
		HOTSPOT 0,0,dsr+hrr,	RailUNID, hrr, 2 : RailUNID=RailUNID+1
		HOTSPOT 0,0,dsr-1,	RailUNID, hrr, 3 : RailUNID=RailUNID+1

		HOTSPOT RRailLength,0,(rnu-1)*th+dsr+top_ry,	RailUNID, hrr, 1+128 : RailUNID=RailUNID+1
		HOTSPOT RRailLength,0,(rnu-1)*th+dsr+hrr+top_ry,	RailUNID, hrr, 2 : RailUNID=RailUNID+1
		HOTSPOT RRailLength,0,(rnu-1)*th-1+dsr+top_ry,	RailUNID, hrr, 3 : RailUNID=RailUNID+1


		ADD OverhangRBottom,0,(OverhangRBottom)*tan(angle)
		! Rail Overhang at Bottom

		HOTSPOT 0,	0,	dsr,	RailUNID, temp_OverhangRBottom, 1+128,OverhangRBottom : RailUNID=RailUNID+1
		HOTSPOT 1,	0,	dsr+tan(angle),	RailUNID, temp_OverhangRBottom, 3,OverhangRBottom : RailUNID=RailUNID+1
		HOTSPOT -OverhangRBottom,0,	dsr-OverhangRBottom*tan(angle),	RailUNID, temp_OverhangRBottom, 2,OverhangRBottom : RailUNID=RailUNID+1

		! Rail Overhang at Top

		HOTSPOT lrah, 0,				(rnu-1)*th+dsr,		RailUNID, temp_OverhangRTop, 1+128,OverhangRTop : RailUNID=RailUNID+1
		HOTSPOT lrah-1, 0,				(rnu-1)*th+dsr-tan(angle),		RailUNID, temp_OverhangRTop, 3,OverhangRTop : RailUNID=RailUNID+1
		HOTSPOT lrah+OverhangRTop, 0,	(rnu-1)*th+dsr+OverhangRTop*tan(angle),	RailUNID, temp_OverhangRTop, 2,OverhangRTop : RailUNID=RailUNID+1
		DEL 1

		IF rightRailType_m = 9 THEN

			RailUNID=2030

			! top wire/subboard distance from handrail
			HOTSPOT 0,0,hrr+dsr-HandrailHgtR,RailUNID,sbhr,1+128 : RailUNID=RailUNID+1
			HOTSPOT 0,0,hrr+dsr-HandrailHgtR-sbhr,RailUNID,sbhr,2 : RailUNID=RailUNID+1
			HOTSPOT 0,0,hrr+dsr-HandrailHgtR+1,RailUNID,sbhr,3 : RailUNID=RailUNID+1

			HOTSPOT RRailLength,0,(rnu-1)*th+top_ry+hrr+dsr-HandrailHgtR,RailUNID,sbhr,1+128 : RailUNID=RailUNID+1
			HOTSPOT RRailLength,0,(rnu-1)*th+top_ry+hrr+dsr-HandrailHgtR-sbhr,RailUNID,sbhr,2 : RailUNID=RailUNID+1
			HOTSPOT RRailLength,0,(rnu-1)*th+top_ry+hrr+dsr-HandrailHgtR+1,RailUNID,sbhr,3 : RailUNID=RailUNID+1
		ENDIF

		IF rprPostBase=1 THEN

			RailUNID=2036

			! post base overhang
			HOTSPOT 0,0,0,RailUNID,gs_PostBaseOverhangR,1 : RailUNID=RailUNID+1
			HOTSPOT 0,0,-gs_PostBaseOverhangR,RailUNID,gs_PostBaseOverhangR,2 : RailUNID=RailUNID+1
			HOTSPOT 0,0,1,RailUNID,gs_PostBaseOverhangR,3 : RailUNID=RailUNID+1

			HOTSPOT RRailLength,0,(rnu-1)*th+top_ry,RailUNID,gs_PostBaseOverhangR,1 : RailUNID=RailUNID+1
			HOTSPOT RRailLength,0,(rnu-1)*th+top_ry-gs_PostBaseOverhangR,RailUNID,gs_PostBaseOverhangR,2 : RailUNID=RailUNID+1
			HOTSPOT RRailLength,0,(rnu-1)*th+top_ry+1,RailUNID,gs_PostBaseOverhangR,3 : RailUNID=RailUNID+1
		ENDIF

		!!! *** Right Railing/Lower Part
		lraSimple=RRailLength
		lraComplex=RRailLength
		additionXComplex=0
		additionZComplex=0
		hrovL=hror
		hrovR=hror
		postNumber = npr
		side = SIDE_RIGHT
		rom_m = 1
		rmm_m = 1
		gosub "callRailsForStair"
	else
		ROTy -atn(th/td)

		RailUNID=2100

		! Distance from Top of Tread

		HOTSPOT 0,0,0,	RailUNID, dsr, 1+128 : RailUNID=RailUNID+1
		HOTSPOT 0,0,dsr,	RailUNID, dsr, 2 : RailUNID=RailUNID+1
		HOTSPOT 0,0,-1,	RailUNID, dsr, 3 : RailUNID=RailUNID+1

		HOTSPOT atfogR, 0,0,	RailUNID, dsr, 1+128 : RailUNID=RailUNID+1
		HOTSPOT atfogR, 0,dsr,	RailUNID, dsr, 2 : RailUNID=RailUNID+1
		HOTSPOT atfogR, 0,-1,	RailUNID, dsr, 3 : RailUNID=RailUNID+1

		! Height of Rail

		HOTSPOT 0,0,dsr,	RailUNID, hrr, 1+128 : RailUNID=RailUNID+1
		HOTSPOT 0,0,dsr+hrr,	RailUNID, hrr, 2 : RailUNID=RailUNID+1
		HOTSPOT 0,0,dsr-1,	RailUNID, hrr, 3 : RailUNID=RailUNID+1

		HOTSPOT atfogR,0,dsr,	RailUNID, hrr, 1+128 : RailUNID=RailUNID+1
		HOTSPOT atfogR,0,dsr+hrr,	RailUNID, hrr, 2 : RailUNID=RailUNID+1
		HOTSPOT atfogR,0,-1+dsr,	RailUNID, hrr, 3 : RailUNID=RailUNID+1


		ADDx temp_OverhangRBottom
		! Rail Overhang at Bottom

		HOTSPOT 0,	0,	dsr,	RailUNID, temp_OverhangRBottom, 1+128,OverhangRBottom  : RailUNID=RailUNID+1
		HOTSPOT 1, 0	,dsr,RailUNID, temp_OverhangRBottom, 3,OverhangRBottom : RailUNID=RailUNID+1
		HOTSPOT -temp_OverhangRBottom,0,dsr,RailUNID, temp_OverhangRBottom, 2,OverhangRBottom : RailUNID=RailUNID+1

		! Rail Overhang at Top

		HOTSPOT lrah*th/(td*sin(atn(th/td))), 0, dsr,	RailUNID, temp_OverhangRTop, 1+128,OverhangRTop  : RailUNID=RailUNID+1
		HOTSPOT lrah*th/(td*sin(atn(th/td)))-1, 0, dsr,RailUNID, temp_OverhangRTop, 3,OverhangRTop : RailUNID=RailUNID+1
		HOTSPOT lrah*th/(td*sin(atn(th/td)))+temp_OverhangRTop, 0, dsr,RailUNID, temp_OverhangRTop, 2,OverhangRTop : RailUNID=RailUNID+1

		DEL 1

		IF rprPostBase=1 THEN

			RailUNID=2118

			! POST BASE OVERHANG
			HOTSPOT 0,0,0,RailUNID,gs_PostBaseOverhangR,1 : RailUNID=RailUNID+1
			HOTSPOT 0,0,-gs_PostBaseOverhangR,RailUNID,gs_PostBaseOverhangR,2 : RailUNID=RailUNID+1
			HOTSPOT 0,0,1,RailUNID,gs_PostBaseOverhangR,3 : RailUNID=RailUNID+1

			HOTSPOT atfogR,0,0,RailUNID,gs_PostBaseOverhangR,1 : RailUNID=RailUNID+1
			HOTSPOT atfogR,0,-gs_PostBaseOverhangR,RailUNID,gs_PostBaseOverhangR,2 : RailUNID=RailUNID+1
			HOTSPOT atfogR,0,1,RailUNID,gs_PostBaseOverhangR,3 : RailUNID=RailUNID+1
		ENDIF

		IF rightRailType_m = 9 THEN

			RailUNID=2124

			! TOP WIRE/SUBBOARD DISTANCE FROM HANDRAIL
			HOTSPOT 0,0,hrr+dsr-HandrailHgtR/cos(angle),		RailUNID,sbhPerpR,1+128,sbhr : RailUNID=RailUNID+1
			HOTSPOT 0,0,hrr+dsr-HandrailHgtR/cos(angle)-sbhr,	RailUNID,sbhPerpR,2,sbhr : RailUNID=RailUNID+1
			HOTSPOT 0,0,hrr+dsr-HandrailHgtR/cos(angle)+1,		RailUNID,sbhPerpR,3,sbhr : RailUNID=RailUNID+1

			HOTSPOT atfogR,0,hrr+dsr-HandrailHgtR/cos(angle),			RailUNID,sbhPerpR,1+128,sbhr : RailUNID=RailUNID+1
			HOTSPOT atfogR,0,hrr+dsr-HandrailHgtR/cos(angle)-sbhr,		RailUNID,sbhPerpR,2,sbhr : RailUNID=RailUNID+1
			HOTSPOT atfogR,0,hrr+dsr-HandrailHgtR/cos(angle)+1,			RailUNID,sbhPerpR,3,sbhr : RailUNID=RailUNID+1
		ENDIF

		DEL 1

		!!! *** Right Railing/Lower Part
		lraSimple=atfogR
		lraComplex=atfogR
		additionXComplex=0
		additionZComplex=0
		hrovL=hror
		hrovR=hror
		postNumber = npr
		side = SIDE_RIGHT
		rom_m = 2
		rmm_m = 2
		gosub "callRailsForStair"
	endif

	del 5

ENDIF

DEL 2

return

! ==============================================================================
"callRailsForStair":
! ------------------------------------------------------------------------------
!	lraSimple
!	lraComplex
!	additionXComplex
!	additionZComplex
!	hrovL: rail overhang start
!	hrovR: rail overhang end
!	postNumber:   number of posts
!	side: SIDE_LEFT or SIDE_RIGHT
! ==============================================================================
	ani = angle
	additionXComplex = additionXComplex
	additionZComplex = additionZComplex
	gosub "callRails"
return

! ==============================================================================
"callRails":
! ------------------------------------------------------------------------------
!	ani
!	additionXComplex
!	additionZComplex
!	dsComplex
!  ------------------
!	side: SIDE_LEFT or SIDE_RIGHT
!	lraSimple
!	lraComplex
!	hrovL: rail overhang start
!	hrovR: rail overhang end
!	postNumber:   number of posts
! ==============================================================================
	if side = SIDE_LEFT then
		railBarDepth	= bwl
		railBarDiam		= bdl
		railHeight		= hrl
		railBarThk		= fthl
		railBarType		= btypl_m
		railFrameThk	= fthl
		railDist		= dsl
		railType_m		= leftRailType_m
		railPostDiam	= pdl
		railPostWidth	= pwl
		railPostThk		= pthl
		railPostType	= ptl_m
		barNumber		= nbl
		iBalusterStyle	= btl_m
		railFramesWSide	= fswl
		railFramesWTop	= ftwl
		railFramesWBot	= fbwl
		railBarHeight	= bhl
		railBarFillThk	= bthl
		balusterDist	= abdistl
		railFrameMat	= fmatl
		railBaluFillMat	= bmatl
		railPostMat		= pmatl
		balusterNumber	= nbtl
		railFillDist	= fdfl
		railPostBaseType= gs_PostBaseTypeL_m
		railDistFromHr	= sbhl
		railPostBaseOv	= gs_PostBaseOverhangL
		handRailType	= hrtl_m
		handRailWidth	= hrwl
		handRailDiam	= hrdl
		handRailHeight	= hrhl
	else
		railBarDepth	= bwr
		railBarDiam		= bdr
		railHeight		= hrr
		railBarThk		= fthr
		railBarType		= btypr_m
		railFrameThk	= fthr
		railDist		= dsr
		railType_m		= rightRailType_m
		railPostDiam	= pdr
		railPostWidth	= pwr
		railPostThk		= pthr
		railPostType	= ptr_m
		barNumber		= nbr
		iBalusterStyle	= btr_m
		railFramesWSide	= fswr
		railFramesWTop	= ftwr
		railFramesWBot	= fbwr
		railBarHeight	= bhr
		railBarFillThk	= bthr
		balusterDist	= abdistr
		railFrameMat	= fmatr
		railBaluFillMat	= bmatr
		railPostMat		= pmatr
		balusterNumber	= nbtr
		railFillDist	= fdfr
		railPostBaseType= gs_PostBaseTypeR_m
		railDistFromHr	= sbhr
		railPostBaseOv	= gs_PostBaseOverhangR
		handRailType	= hrtr_m
		handRailWidth	= hrwr
		handRailDiam	= hrdr
		handRailHeight	= hrhr
	endif

	call "stairRails_m" parameters	railType_m				= railType_m,
									iStairType				= 2,
									bEnableWired02Rail		= 1,
									bEnableNonVerticalRail	= 1,
									additionXComplex		= additionXComplex,
									additionZComplex		= additionZComplex,
									ptyp_m					= 1,
									ani						= ani,
									ab						= 0,
									rb						= 0,
									rom_m					= rom_m,
									rmm_m					= rmm_m,
									lraSimple				= lraSimple,
									lraComplex				= lraComplex,
									railHeight				= railHeight,
									railDist				= railDist,
									gs_detlevel_3D_m		= gs_detlevel_3D_m,
									gs_cont_pen				= gs_cont_pen,
									res						= res,
									rescs					= rescs,
									gs_shadow				= gs_shadow,
									railFrameThk			= railFrameThk,
									railFramesWSide			= railFramesWSide,
									railFramesWTop			= railFramesWTop,
									railFramesWBot			= railFramesWBot,
									railBarType				= railBarType,
									railBarDepth			= railBarDepth,
									railBarFillThk			= railBarFillThk,
									railBarDiam				= railBarDiam,
									balusterDist			= balusterDist,
									railFrameMat			= railFrameMat,
									railBaluFillMat			= railBaluFillMat,
									barNumber				= barNumber,
									railBarHeight			= railBarHeight,
									railFillDist			= railFillDist,
									handRailType			= handRailType,
									handRailDiam			= handRailDiam,
									handRailWidth			= handRailWidth,
									handRailHeight			= handRailHeight,
									hrovL					= hrovL,
									hrovR					= hrovR,
									iBalusterStyle			= iBalusterStyle,
									railPostDiam			= railPostDiam,
									railPostWidth			= railPostWidth,
									railPostThk				= railPostThk,
									railPostType			= railPostType,
									postNumber				= postNumber,
									railPostMat				= railPostMat,
									iParamInputType			= 1,
									balusterNumber			= balusterNumber,
									railPostBaseType		= railPostBaseType,
									railPostBaseOv			= railPostBaseOv,
									railDistFromHr			= railDistFromHr
return


