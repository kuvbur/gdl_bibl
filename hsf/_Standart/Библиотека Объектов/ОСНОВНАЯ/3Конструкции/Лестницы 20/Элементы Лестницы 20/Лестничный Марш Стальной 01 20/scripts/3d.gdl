
PEN gs_cont_pen

IF gs_detlevel_3D_m = DET3D_OFF THEN end

IF GLOB_CONTEXT>20 and GLOB_CONTEXT<40 THEN
	gs_detlevel_3D_m = DET3D_SIMPLE
ENDIF

IF gs_shadow=0 THEN SHADOW OFF

corrz = 0

!!!!!!!!!!!!!!!!!!!!!!!!! *** HOTSPOTs RailUNID *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

	!!! FlightUNID=1	!!! 1
	!!! RailUNID=1000	!!! 1000-3000

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

MULx -1
ROTz 90

ADDy flw/2
ADDx h/sin(angle)
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  BEAM  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

	rotation=angle

	beamorigo_yz=h/cos(schneid1-90-angle)
	beamorigo_z=beamorigo_yz*sin(180-schneid1)
	beamorigo_x1=h/sin(angle)
	beamorigo_x2=beamorigo_yz*cos(180-schneid1)
	beamorigo_x=beamorigo_x1-beamorigo_x2 - rt / tan (angle)

	beamend_yz=h/cos(schneid2-90-angle)
	beamend_z=beamend_yz*sin(180-schneid2)
	beamend_x1=h/sin(angle)
	beamend_x2=beamend_yz*cos(180-schneid2)
	beamend_x=beamend_x1-beamend_x2


	binhossz=td*rnu+beamorigo_x-beamend_x

	! --- CALL Beams from Macro ---
	IF iBeamPositioning = BEAMPOS_DOUBLE THEN
		xx=2
	ELSE
		xx=1
	ENDIF

	FOR k=1 to xx
		IF iBeamPositioning = BEAMPOS_DOUBLE THEN ADDy flw/2-boff

		ADD -beamorigo_x,0,-beamorigo_z
	SECT_FILL typeFillStringer, penBackFillStringer, penFillStringer, penLineStringer

	if iBeamType = BEAMTYPE_I then
		CALL "I-Beam Inclined" PARAMETERS	a			= binhossz,
											h			= h*1000,
											v			= v*1000,
											s			= s*1000,
											t			= t*1000,
											rotation	= rotation,
											kip_m		= 1,
											ssch1_m		= 1,
											schneid1	= schneid1,
											spitz1		= 0,
											ssch2_m		= 1,
											schneid2	= schneid2,
											spitz2		= 0,
											schema		= schema,
											gs_cont_pen	= gs_cont_pen,
											mat1		= mat1
	endif

	if iBeamType = BEAMTYPE_IF then
		CALL "IF Beam Inclined" PARAMETERS	a			= binhossz,
											h			= h*1000,
											v			= v*1000,
											s			= s*1000,
											t			= t*1000,
											rotation	= rotation,
											kip_m		= 1,
											ssch1_m		= 1,
											schneid1	= schneid1,
											spitz1		= 0,
											ssch2_m		= 1,
											schneid2	= schneid2,
											spitz2		= 0,
											schema		= schema,
											gs_cont_pen	= gs_cont_pen,
											mat1		= mat1
	endif

	if iBeamType = BEAMTYPE_IS then
		CALL "IS Beam Inclined" PARAMETERS	a			= binhossz,
											h			= h*1000,
											v			= v*1000,
											s			= s*1000,
											t			= t*1000,
											rotation	= rotation,
											kip_m		= 1,
											ssch1_m		= 1,
											schneid1	= schneid1,
											spitz1		= 0,
											ssch2_m		= 1,
											schneid2	= schneid2,
											spitz2		= 0,
											schema		= schema,
											gs_cont_pen	= gs_cont_pen,
											mat1		= mat1
	endif

	if iBeamType = BEAMTYPE_U then
		CALL "U-Beam Inclined" PARAMETERS	a			= binhossz,
											h			= h*1000,
											v			= v*1000,
											s			= s*1000,
											t			= t*1000,
											rotation	= rotation,
											kip_m		= 1,
											ssch1_m		= 1,
											schneid1	= schneid1,
											spitz1		= 0,
											ssch2_m		= 1,
											schneid2	= schneid2,
											spitz2		= 0,
											schema		= schema,
											gs_cont_pen	= gs_cont_pen,
											mat1		= mat1
	endif

		DEL 1

		IF iBeamPositioning = BEAMPOS_DOUBLE THEN DEL 1

		if iBeamType = BEAMTYPE_U then
			MULY -1
		else
			ADDy -2*(flw/2-boff)
		endif

	NEXT k
	DEL xx


	! end of CALL Beams from Macro

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


ROTz -90

! T R I A N G L E ...........................

MATERIAL mat_tread
SECT_FILL typeFillRiser, penBackFillRiser, penFillRiser, penLineRiser

ROTz 90
ROTx 90

count=0

IF iBeamPositioning = BEAMPOS_SINGLE THEN
	ADDx -h/sin(angle)
	ADDz -(triw/2)
	ADDy corrz

	FOR i=1 to rnu

		if i = 1 then
			prism 4, triw,
				0,	0,
				0,	th-rt,
				td, th-rt,
				rt / tan (angle),	0
		else
			prism 4, triw,
				0,	0-rt,
				0,	th-rt,
				td, th-rt,
				0,	0-rt
		endif

		ADDx td
		ADDy th

		count=count+2

	NEXT i
	DEL count
	DEL 3

ELSE !double beam

	ADDx -h/sin(angle)
	ADDz -(triw/2)-flw/2+v/2+boff
	ADDy corrz

	FOR i=1 to rnu
		if i = 1 then
			prism 4, triw,
				0,	0,
				0,	th-rt,
				td, th-rt,
				rt / tan (angle),	0
		else
			prism 4, triw,
				0,	0-rt,
				0,	th-rt,
				td, th-rt,
				0,	0-rt
		endif

		ADDx td
		ADDy th

		count=count+2

	NEXT i
	DEL count

	DEL 3

 !Second Beam

	count=0

	ADDx -h/sin(angle)
	ADDz -(triw/2)+flw/2-v/2-boff
	ADDy corrz

	FOR i=1 to rnu
		if i = 1 then
			prism 4, triw,
				0,	0,
				0,	th-rt,
				td, th-rt,
				rt / tan (angle), 0
		else
			prism 4, triw,
				0,	0-rt,
				0,	th-rt,
				td, th-rt,
				0,	0-rt
		endif

		ADDx td
		ADDy th

		count=count+2

	NEXT i
	DEL count
	DEL 3

ENDIF

DEL 2


! R I S E R S............................................
addz -rt
GROUP "Tread"
		MATERIAL mat_tread
		SECT_FILL typeFillRiser, penBackFillRiser, penFillRiser, penLineRiser

		PRISM 5, rt,

		-flw/2,	0-ns,
		-flw/2, td,
		 flw/2,	td,
		 flw/2,	0-ns,
		-flw/2, 0-ns
ENDGROUP

GROUP "hariari"
	MATERIAL mat_tread
	SECT_FILL typeFillRiser, penBackFillRiser, penFillRiser, penLineRIser

	ADDz -rt

		PRISM 5, 3*rt,

		-flw/2+tft,	0-ns+tft,
		-flw/2+tft, td-tft,
		 flw/2-tft,	td-tft,
		 flw/2-tft,	0-ns+tft,
		-flw/2+tft, 0-ns+tft

	DEL 1
ENDGROUP

GROUP "TreadFill"

	MATERIAL matrf
SECT_FILL typeFillTread, penBackFillTread, penFillTread, penLineTread


		PRISM 5, rt,

		-flw/2+tft,	0-ns+tft,
		-flw/2+tft, td-tft,
		 flw/2-tft,	td-tft,
		 flw/2-tft,	0-ns+tft,
		-flw/2+tft, 0-ns+tft

ENDGROUP

framed=subgroup("Tread", "hariari")

	count=0
	ADDy -h/sin(angle)
	ADDz th+corrz

	FOR i=1 to rnu
		IF iTreadRiserSizes = TREAD_RISER_SIZE_NORMAL THEN
			PLACEGROUP "Tread"
		ELSE
			PLACEGROUP framed
			PLACEGROUP "TreadFill"
		ENDIF

		ADDz th
		ADDy td
		count=count+2
	NEXT i

	DEL count

DEL 3


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  RAILING  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

IF hrtr_m=1 THEN		!!! HANDRAIL RIGHT WIDTH
		HandrailHgtR=hrhr
	ELSE
		HandrailHgtR=hrdr
ENDIF

IF hrtl_m=1 THEN		!!! HANDRAIL RIGHT WIDTH
		HandrailHgtL=hrhl
	ELSE
		HandrailHgtL=hrdl
ENDIF

ADDy -h/sin(angle)
ADDz th+corrz-rt

atfogR=sqr((rnu-1)*(rnu-1)*(td*td+th*th))+(OverhangRBottom+OverhangRTop)/cos(angle)
atfogL=sqr((rnu-1)*(rnu-1)*(td*td+th*th))+(OverhangLBottom+OverhangLTop)/cos(angle)
lrah=td*(rnu-1)		!! Railing Length without Overhangs

RRailLength=lrah+OverhangRBottom+OverhangRTop
LRailLength=lrah+OverhangLBottom+OverhangLTop

top_ry=((OverhangRBottom+OverhangRTop)*th)/td
top_ly=((OverhangLBottom+OverhangLTop)*th)/td

! ------------------------------------------------------------------------------
! Left rail
! ------------------------------------------------------------------------------

IF rail_m = RAILPOS_LEFT or rail_m = RAILPOS_BOTH THEN
	if bSameRails then
		leftRailType_m	= rightRailType_m
		atfogL			= atfogR
		LRailLength		= RRailLength
		top_ly			= top_ry
	endif

	rplPostBase = (leftRailType_m = 7 or leftRailType_m = 8 or leftRailType_m = 9 or leftRailType_m = 11)

	ROTz 90
	ADDy -flw/2-roffl+handRailWidthL/2
	add -OverhangLBottom+bComplexRailLeft*td/2,0,-OverhangLBottom*tan(angle)

	IF roml_m = RAILORIENT_VERTICAL THEN
		lraSimple=LRailLength
		lraComplex=LRailLength
		additionXComplex=0
		additionZComplex=0
		hrovL=hrol
		hrovR=hrol
		postNumber = npl
		rom_m = 1
		rmm_m = 1
		side = SIDE_LEFT
		gosub "callRailsForStair"
	else
		lraSimple=atfogL
		lraComplex=atfogL
		additionXComplex=0
		additionZComplex=0
		hrovL=hrol
		hrovR=hrol
		postNumber = npl
		rom_m = 2
		rmm_m = 2
		side = SIDE_LEFT
		gosub "callRailsForStair"
	endif

	DEL 3

ENDIF

! ------------------------------------------------------------------------------
! Right rail
! ------------------------------------------------------------------------------

IF rail_m = RAILPOS_RIGHT or rail_m = RAILPOS_BOTH THEN
	rprPostBase = (rightRailType_m = 7 or rightRailType_m = 8 or rightRailType_m = 9 or rightRailType_m = 11)

	ROTz 90
	ADDy flw/2+roffr-handRailWidthR/2
	add -OverhangRBottom+bComplexRailRight *td/2,0,-OverhangRBottom*tan(angle)

	IF romr_m = RAILORIENT_VERTICAL THEN
		!!! *** Right Railing/Lower Part
		lraSimple=RRailLength
		lraComplex=RRailLength
		additionXComplex=0
		additionZComplex=0
		hrovL=hror
		hrovR=hror
		postNumber = npr
		side = SIDE_RIGHT
		rom_m = 1
		rmm_m = 1
		gosub "callRailsForStair"
	else
		!!! *** Right Railing/Lower Part
		lraSimple=atfogR
		lraComplex=atfogR
		additionXComplex=0
		additionZComplex=0
		hrovL=hror
		hrovR=hror
		postNumber = npr
		side = SIDE_RIGHT
		rom_m = 2
		rmm_m = 2
		gosub "callRailsForStair"
	endif

	del 3

ENDIF

DEL 1
DEL 1
DEL 1

DEL TOP

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!! HOTSPOTS in 3D !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! RAILING

ADD 0,0,th

IF rail_m = RAILPOS_LEFT or rail_m = RAILPOS_BOTH THEN
	if bSameRails then
		leftRailType_m = rightRailType_m
	endif

	rplPostBase = (leftRailType_m = 7 or leftRailType_m = 8 or leftRailType_m = 9 or leftRailType_m = 11)

	IF bSameRails THEN		!!! Same as Right
		IF bComplexRailLeft THEN ADDy td/2
		!!! RAIL OFFSET

				RailUNID=1700

				HOTSPOT handRailWidthL/2,		-OverhangRBottom,-OverhangRBottom*tan(angle), RailUNID, roffr, 1+128 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2+1,	-OverhangRBottom,-OverhangRBottom*tan(angle), RailUNID, roffr, 3 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffr,-OverhangRBottom,-OverhangRBottom*tan(angle), RailUNID, roffr, 2 : RailUNID=RailUNID+1

				HOTSPOT handRailWidthL/2,lrah+OverhangRTop,(rnu-1)*th+OverhangRTop*tan(angle), RailUNID, roffr, 1+128 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2+1,lrah+OverhangRTop,(rnu-1)*th+OverhangRTop*tan(angle), RailUNID, roffr, 3 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffr,lrah+OverhangRTop,(rnu-1)*th+OverhangRTop*tan(angle), RailUNID, roffr, 2 : RailUNID=RailUNID+1

			IF romr_m = RAILORIENT_VERTICAL THEN
				top_ry=((OverhangRBottom+OverhangRTop)*th)/td

				RailUNID=1800

				!!! Dist. from Top of Tread
				HOTSPOT handRailWidthL/2-roffr,-OverhangRBottom,	rt-OverhangRBottom*tan(angle),		RailUNID, dsr, 1+128 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffr,-OverhangRBottom,	rt-OverhangRBottom*tan(angle)-1,	RailUNID, dsr, 3 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffr,-OverhangRBottom,	rt-OverhangRBottom*tan(angle)+dsr,	RailUNID, dsr, 2 : RailUNID=RailUNID+1

				HOTSPOT handRailWidthL/2-roffr,lrah+OverhangRTop,	rt+(rnu-1)*th+top_ry+OverhangRTop*tan(angle),		RailUNID, dsr, 1+128 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffr,lrah+OverhangRTop,	rt+(rnu-1)*th+top_ry-1+OverhangRTop*tan(angle),	RailUNID, dsr, 3 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffr,lrah+OverhangRTop,	rt+(rnu-1)*th+top_ry+dsr+OverhangRTop*tan(angle),	RailUNID, dsr, 2 : RailUNID=RailUNID+1

				!!! Height of Rail
				HOTSPOT handRailWidthL/2-roffr,-OverhangRBottom,	rt+dsr-OverhangRBottom*tan(angle),		RailUNID, hrr, 1+128 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffr,-OverhangRBottom,	rt+dsr-1-OverhangRBottom*tan(angle),	RailUNID, hrr, 3 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffr,-OverhangRBottom,	rt+dsr+hrr-OverhangRBottom*tan(angle),	RailUNID, hrr, 2 : RailUNID=RailUNID+1

				HOTSPOT handRailWidthL/2-roffr,lrah+OverhangRTop,	rt+(rnu-1)*th+top_ry+dsr+OverhangRTop*tan(angle),		RailUNID, hrr, 1+128 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffr,lrah+OverhangRTop,	rt+(rnu-1)*th+top_ry+dsr-1+OverhangRTop*tan(angle),	RailUNID, hrr, 3 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffr,lrah+OverhangRTop,	rt+(rnu-1)*th+top_ry+dsr+hrr+OverhangRTop*tan(angle),	RailUNID, hrr, 2 : RailUNID=RailUNID+1

				!!! Rail Overhang at Bottom
				HOTSPOT handRailWidthL/2-roffr,	0,	rt+dsr,	RailUNID, temp_OverhangRBottom, 1+128,OverhangRBottom : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffr,	1,	rt+dsr+tan(angle),	RailUNID, temp_OverhangRBottom, 3,OverhangRBottom : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffr,-OverhangRBottom,	rt+dsr-OverhangRBottom*tan(angle),	RailUNID, temp_OverhangRBottom, 2,OverhangRBottom : RailUNID=RailUNID+1

				!!! Rail Overhang at Top
				HOTSPOT handRailWidthL/2-roffr,lrah,		rt+(rnu-1)*th+top_ry+dsr,		RailUNID, temp_OverhangRTop, 1+128,OverhangRTop : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffr,lrah-1,	rt+(rnu-1)*th+top_ry+dsr-tan(angle),		RailUNID, temp_OverhangRTop, 3,OverhangRTop : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffr,lrah+OverhangRTop,rt+(rnu-1)*th+top_ry+dsr+OverhangRTop*tan(angle),	RailUNID, temp_OverhangRTop, 2,OverhangRTop : RailUNID=RailUNID+1

				IF rprPostBase=1 THEN

					RailUNID=1900

					!!!POST BASE OVERHANG
					HOTSPOT handRailWidthL/2-roffr,-OverhangRBottom,	rt-OverhangRBottom*tan(angle),		RailUNID, gs_PostBaseOverhangR, 1+128 : RailUNID=RailUNID+1
					HOTSPOT handRailWidthL/2-roffr,-OverhangRBottom,	rt-OverhangRBottom*tan(angle)+1,	RailUNID, gs_PostBaseOverhangR, 3 : RailUNID=RailUNID+1
					HOTSPOT handRailWidthL/2-roffr,-OverhangRBottom,	rt-OverhangRBottom*tan(angle)-gs_PostBaseOverhangR,	RailUNID, gs_PostBaseOverhangR, 2 : RailUNID=RailUNID+1

					HOTSPOT handRailWidthL/2-roffr,lrah+OverhangRTop,	rt+(rnu-1)*th+top_ry+OverhangRTop*tan(angle),		RailUNID, gs_PostBaseOverhangR, 1+128 : RailUNID=RailUNID+1
					HOTSPOT handRailWidthL/2-roffr,lrah+OverhangRTop,	rt+(rnu-1)*th+top_ry+OverhangRTop*tan(angle)+1,	RailUNID, gs_PostBaseOverhangR, 3 : RailUNID=RailUNID+1
					HOTSPOT handRailWidthL/2-roffr,lrah+OverhangRTop,	rt+(rnu-1)*th+top_ry+OverhangRTop*tan(angle)-gs_PostBaseOverhangR,	RailUNID, gs_PostBaseOverhangR, 2 : RailUNID=RailUNID+1
				ENDIF

				IF rightRailType_m = 9 THEN

					RailUNID=2000

					!!!TOP WIRE/SUBBOARD DISTANCE FROM HANDRAIL
					HOTSPOT handRailWidthL/2-roffr,-OverhangRBottom,	rt+dsr+hrr-OverhangRBottom*tan(angle)-HandrailHgtR,		RailUNID, sbhr, 1+128 : RailUNID=RailUNID+1
					HOTSPOT handRailWidthL/2-roffr,-OverhangRBottom,	rt+dsr+hrr-OverhangRBottom*tan(angle)-HandrailHgtR+1,	RailUNID, sbhr, 3 : RailUNID=RailUNID+1
					HOTSPOT handRailWidthL/2-roffr,-OverhangRBottom,	rt+dsr+hrr-OverhangRBottom*tan(angle)-HandrailHgtR-sbhr,	RailUNID, sbhr, 2 : RailUNID=RailUNID+1

					HOTSPOT handRailWidthL/2-roffr,lrah+OverhangRTop,	rt+(rnu-1)*th+top_ry+dsr+hrr+OverhangRTop*tan(angle)-HandrailHgtR,		RailUNID, sbhr, 1+128 : RailUNID=RailUNID+1
					HOTSPOT handRailWidthL/2-roffr,lrah+OverhangRTop,	rt+(rnu-1)*th+top_ry+dsr+hrr+OverhangRTop*tan(angle)-HandrailHgtR+1,	RailUNID, sbhr, 3 : RailUNID=RailUNID+1
					HOTSPOT handRailWidthL/2-roffr,lrah+OverhangRTop,	rt+(rnu-1)*th+top_ry+dsr+hrr+OverhangRTop*tan(angle)-HandrailHgtR-sbhr,	RailUNID, sbhr, 2 : RailUNID=RailUNID+1
				ENDIF

			ELSE

			ADD 0,rt*sin(angle),(rt/cos(angle)-rt)*cos(angle)
			ROTx atn(th/td)

				RailUNID=2100

				!!! Dist. from Top of Tread
				HOTSPOT handRailWidthL/2-roffr,-OverhangRBottom/cos(angle),rt,	RailUNID, dsr, 1+128 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffr,-OverhangRBottom/cos(angle),rt+dsr,	RailUNID, dsr, 2 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffr,-OverhangRBottom/cos(angle),rt-1,	RailUNID, dsr, 3 : RailUNID=RailUNID+1

				HOTSPOT handRailWidthL/2-roffr,lrah*th/(td*sin(atn(th/td)))+OverhangRTop/cos(angle),rt,	RailUNID, dsr, 1+128 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffr,lrah*th/(td*sin(atn(th/td)))+OverhangRTop/cos(angle),rt+dsr,	RailUNID, dsr, 2 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffr,lrah*th/(td*sin(atn(th/td)))+OverhangRTop/cos(angle),rt-1,	RailUNID, dsr, 3 : RailUNID=RailUNID+1

				!! Height of Rail
				HOTSPOT handRailWidthL/2-roffr,-OverhangRBottom/cos(angle),rt+dsr,	RailUNID, hrr, 1+128 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffr,-OverhangRBottom/cos(angle),rt+dsr+hrr,	RailUNID, hrr, 2 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffr,-OverhangRBottom/cos(angle),rt+dsr-1,	RailUNID, hrr, 3 : RailUNID=RailUNID+1

				HOTSPOT handRailWidthL/2-roffr,lrah*th/(td*sin(atn(th/td)))+OverhangRTop/cos(angle),rt+dsr,	RailUNID, hrr, 1+128 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffr,lrah*th/(td*sin(atn(th/td)))+OverhangRTop/cos(angle),rt+dsr+hrr,	RailUNID, hrr, 2 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffr,lrah*th/(td*sin(atn(th/td)))+OverhangRTop/cos(angle),rt+dsr-1,	RailUNID, hrr, 3 : RailUNID=RailUNID+1

				!!! Rail Overhang at Bottom
				HOTSPOT handRailWidthL/2-roffr,	0,	rt+dsr,	RailUNID, temp_OverhangRBottom, 1+128,OverhangRBottom  : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffr, 1	,rt+dsr,RailUNID, temp_OverhangRBottom, 3,OverhangRBottom : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffr,-temp_OverhangRBottom,rt+dsr,RailUNID, temp_OverhangRBottom, 2,OverhangRBottom : RailUNID=RailUNID+1

				!!! Rail Overhang at Top
				HOTSPOT handRailWidthL/2-roffr,	lrah*th/(td*sin(atn(th/td))),	rt+dsr,	RailUNID, temp_OverhangRTop, 1+128,OverhangRTop  : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffr, lrah*th/(td*sin(atn(th/td)))-1	,rt+dsr,RailUNID, temp_OverhangRTop, 3,OverhangLTop : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffr,lrah*th/(td*sin(atn(th/td)))+temp_OverhangRTop,rt+dsr,RailUNID, temp_OverhangRTop, 2,OverhangRTop : RailUNID=RailUNID+1

			IF rprPostBase=1 THEN

				RailUNID=2200

				!!!POST BASE OVERHANG
				HOTSPOT handRailWidthL/2-roffr,-OverhangRBottom/cos(angle),rt,	RailUNID, gs_PostBaseOverhangR, 1+128 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffr,-OverhangRBottom/cos(angle),rt-gs_PostBaseOverhangR,	RailUNID, gs_PostBaseOverhangR, 2 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffr,-OverhangRBottom/cos(angle),rt+1,	RailUNID, gs_PostBaseOverhangR, 3 : RailUNID=RailUNID+1

				HOTSPOT handRailWidthL/2-roffr,lrah*th/(td*sin(atn(th/td)))+OverhangRTop/cos(angle),rt,	RailUNID, gs_PostBaseOverhangR, 1+128 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffr,lrah*th/(td*sin(atn(th/td)))+OverhangRTop/cos(angle),rt-gs_PostBaseOverhangR,	RailUNID, gs_PostBaseOverhangR, 2 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffr,lrah*th/(td*sin(atn(th/td)))+OverhangRTop/cos(angle),rt+1,	RailUNID, gs_PostBaseOverhangR, 3 : RailUNID=RailUNID+1
			ENDIF

			IF rightRailType_m = 9 THEN

				RailUNID=2300

				!!!TOP WIRE/SUBBOARD DISTANCE FROM HANDRAIL
				HOTSPOT handRailWidthL/2-roffr,-OverhangRBottom/cos(angle),rt+dsr+hrr-HandrailHgtR,	RailUNID, sbhr, 1+128 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffr,-OverhangRBottom/cos(angle),rt+dsr+hrr-HandrailHgtR-sbhr,	RailUNID, sbhr, 2 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffr,-OverhangRBottom/cos(angle),rt+dsr+hrr-HandrailHgtR+1,	RailUNID, sbhr, 3 : RailUNID=RailUNID+1

				HOTSPOT handRailWidthL/2-roffr,lrah*th/(td*sin(atn(th/td)))+OverhangRTop/cos(angle),rt+dsr+hrr-HandrailHgtR,	RailUNID, sbhr, 1+128 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffr,lrah*th/(td*sin(atn(th/td)))+OverhangRTop/cos(angle),rt+dsr+hrr-HandrailHgtR-sbhr,	RailUNID, sbhr, 2 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffr,lrah*th/(td*sin(atn(th/td)))+OverhangRTop/cos(angle),rt+dsr+hrr-HandrailHgtR+1,	RailUNID, sbhr, 3 : RailUNID=RailUNID+1
			ENDIF

			DEL 2

		ENDIF
		IF bComplexRailLeft THEN DEL 1

	ELSE		!!! <> Same as Right
		IF bComplexRailLeft THEN ADDy td/2
		!!! RAIL OFFSET

				RailUNID=2400

				HOTSPOT handRailWidthL/2,		-OverhangLBottom, 	-OverhangLBottom*tan(angle), RailUNID, roffl, 1+128 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2+1,	-OverhangLBottom, 	-OverhangLBottom*tan(angle), RailUNID, roffl, 3 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffl,-OverhangLBottom, 	-OverhangLBottom*tan(angle), RailUNID, roffl, 2 : RailUNID=RailUNID+1

				HOTSPOT handRailWidthL/2,		lrah+OverhangLTop, 	(rnu-1)*th+OverhangLTop*tan(angle), RailUNID, roffl, 1+128 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2+1,	lrah+OverhangLTop, 	(rnu-1)*th+OverhangLTop*tan(angle), RailUNID, roffl, 3 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffl,lrah+OverhangLTop, (rnu-1)*th+OverhangLTop*tan(angle), RailUNID, roffl, 2 : RailUNID=RailUNID+1

			IF roml_m = RAILORIENT_VERTICAL THEN
				!top_ly=((robl+rotl)*th)/td
				top_ly=((OverhangLBottom+OverhangLTop)*th)/td

				RailUNID=2500

				!!! Dist. from Top of Tread
				HOTSPOT handRailWidthL/2-roffl,-OverhangLBottom,rt-OverhangLBottom*tan(angle),	RailUNID, dsl, 1+128 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffl,-OverhangLBottom,rt-OverhangLBottom*tan(angle)+dsl,	RailUNID, dsl, 2 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffl,-OverhangLBottom,rt-OverhangLBottom*tan(angle)-1,	RailUNID, dsl, 3 : RailUNID=RailUNID+1

				HOTSPOT handRailWidthL/2-roffl,lrah+OverhangLTop,rt+(rnu-1)*th+top_ly+OverhangLTop*tan(angle),	RailUNID, dsl, 1+128 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffl,lrah+OverhangLTop,rt+(rnu-1)*th+top_ly+OverhangLTop*tan(angle)-1,	RailUNID, dsl, 3 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffl,lrah+OverhangLTop,rt+(rnu-1)*th+top_ly+OverhangLTop*tan(angle)+dsl,	RailUNID, dsl, 2 : RailUNID=RailUNID+1

				!!! Height of Rail
				HOTSPOT handRailWidthL/2-roffl,-OverhangLBottom,rt+dsl-OverhangLBottom*tan(angle),	RailUNID, hrl, 1+128 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffl,-OverhangLBottom,rt+dsl-OverhangLBottom*tan(angle)-1,	RailUNID, hrl, 3 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffl,-OverhangLBottom,rt+dsl-OverhangLBottom*tan(angle)+hrl,	RailUNID, hrl, 2 : RailUNID=RailUNID+1

				HOTSPOT handRailWidthL/2-roffl,lrah+OverhangLTop,rt+(rnu-1)*th+top_ly+dsl+OverhangLTop*tan(angle),	RailUNID, hrl, 1+128 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffl,lrah+OverhangLTop,rt+((rnu-1)*th)+top_ly+dsl+OverhangLTop*tan(angle)-1,	RailUNID, hrl, 3 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffl,lrah+OverhangLTop,rt+(rnu-1)*th+top_ly+dsl+OverhangLTop*tan(angle)+hrl,	RailUNID, hrl, 2 : RailUNID=RailUNID+1

				!!! Rail Overhang at Bottom
				HOTSPOT handRailWidthL/2-roffl,	0,	rt+dsl,	RailUNID, temp_OverhangLBottom, 1+128,OverhangLBottom : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffl,	1,	rt+dsl+tan(angle),	RailUNID, temp_OverhangLBottom, 3,OverhangLBottom : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffl,-OverhangLBottom,	rt+dsl-OverhangLBottom*tan(angle),	RailUNID, temp_OverhangLBottom, 2,OverhangLBottom : RailUNID=RailUNID+1

				!!! Rail Overhang at Top
				HOTSPOT handRailWidthL/2-roffl,lrah,		rt+(rnu-1)*th+top_ly+dsl,		RailUNID, temp_OverhangLTop, 1+128,OverhangLBottom : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffl,lrah-1,	rt+(rnu-1)*th+top_ly+dsl-tan(angle),		RailUNID, temp_OverhangLTop, 3,OverhangLBottom : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffl,lrah+OverhangLTop,	rt+(rnu-1)*th+top_ly+dsl+OverhangLTop*tan(angle),	RailUNID, temp_OverhangLTop, 2,OverhangLBottom : RailUNID=RailUNID+1

			IF rplPostBase=1 THEN

				RailUNID=2600

				!!!POST BASE OVERHANG
				HOTSPOT handRailWidthL/2-roffl,-OverhangLBottom,rt-OverhangLBottom*tan(angle),	RailUNID, gs_PostBaseOverhangL, 1+128 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffl,-OverhangLBottom,rt-OverhangLBottom*tan(angle)-gs_PostBaseOverhangL,	RailUNID, gs_PostBaseOverhangL, 2 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffl,-OverhangLBottom,rt-OverhangLBottom*tan(angle)+1,	RailUNID, gs_PostBaseOverhangL, 3 : RailUNID=RailUNID+1

				HOTSPOT handRailWidthL/2-roffl,lrah+OverhangLTop,rt+(rnu-1)*th+top_ly+OverhangLTop*tan(angle),	RailUNID, gs_PostBaseOverhangL, 1+128 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffl,lrah+OverhangLTop,rt+(rnu-1)*th+top_ly+OverhangLTop*tan(angle)-gs_PostBaseOverhangL,	RailUNID, gs_PostBaseOverhangL, 2 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffl,lrah+OverhangLTop,rt+(rnu-1)*th+top_ly+OverhangLTop*tan(angle)+1,	RailUNID, gs_PostBaseOverhangL, 3 : RailUNID=RailUNID+1
			ENDIF

			IF leftRailType_m = 9 THEN

				RailUNID=2700

				!!!TOP WIRE/SUBBOARD DISTANCE FROM HANDRAIL
				HOTSPOT handRailWidthL/2-roffl,-OverhangLBottom,rt+dsl-OverhangLBottom*tan(angle)+hrl-HandrailHgtL,	RailUNID, sbhl, 1+128 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffl,-OverhangLBottom,rt+dsl-OverhangLBottom*tan(angle)+hrl-HandrailHgtL+1,	RailUNID, sbhl, 3 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffl,-OverhangLBottom,rt+dsl-OverhangLBottom*tan(angle)+hrl-HandrailHgtL-sbhl,	RailUNID, sbhl, 2 : RailUNID=RailUNID+1

				HOTSPOT handRailWidthL/2-roffl,lrah+OverhangLTop,rt+(rnu-1)*th+top_ly+dsl+OverhangLTop*tan(angle)+hrl-HandrailHgtL,	RailUNID, sbhl, 1+128 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffl,lrah+OverhangLTop,rt+(rnu-1)*th+top_ly+dsl+OverhangLTop*tan(angle)+hrl-HandrailHgtL+1,	RailUNID, sbhl, 3 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffl,lrah+OverhangLTop,rt+(rnu-1)*th+top_ly+dsl+OverhangLTop*tan(angle)+hrl-HandrailHgtL-sbhl,	RailUNID, sbhl, 2 : RailUNID=RailUNID+1
			ENDIF

			ELSE

			ADD 0,rt*sin(angle),(rt/cos(angle)-rt)*cos(angle)
			ROTx atn(th/td)

				RailUNID=2800

				!!! Dist. from Top of Tread
				HOTSPOT handRailWidthL/2-roffl,-OverhangLBottom/cos(angle),rt,	RailUNID, dsl, 1+128 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffl,-OverhangLBottom/cos(angle),rt+dsl,	RailUNID, dsl, 2 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffl,-OverhangLBottom/cos(angle),rt-1,	RailUNID, dsl, 3 : RailUNID=RailUNID+1

				HOTSPOT handRailWidthL/2-roffl,lrah*th/(td*sin(atn(th/td)))+OverhangLTop/cos(angle),rt,	RailUNID, dsl, 1+128 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffl,lrah*th/(td*sin(atn(th/td)))+OverhangLTop/cos(angle),rt+dsl,	RailUNID, dsl, 2 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffl,lrah*th/(td*sin(atn(th/td)))+OverhangLTop/cos(angle),rt-1,	RailUNID, dsl, 3 : RailUNID=RailUNID+1

				!!! Height of Rail
				HOTSPOT handRailWidthL/2-roffl,-OverhangLBottom/cos(angle),rt+dsl,	RailUNID, hrl, 1+128 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffl,-OverhangLBottom/cos(angle),rt+dsl+hrl,	RailUNID, hrl, 2 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffl,-OverhangLBottom/cos(angle),rt+dsl-1,	RailUNID, hrl, 3 : RailUNID=RailUNID+1

				HOTSPOT handRailWidthL/2-roffl,lrah*th/(td*sin(atn(th/td)))+OverhangLTop/cos(angle),rt+dsl,	RailUNID, hrl, 1+128 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffl,lrah*th/(td*sin(atn(th/td)))+OverhangLTop/cos(angle),rt+dsl+hrl,	RailUNID, hrl, 2 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffl,lrah*th/(td*sin(atn(th/td)))+OverhangLTop/cos(angle),rt+dsl-1,	RailUNID, hrl, 3 : RailUNID=RailUNID+1

				!!! Rail Overhang at Bottom
				HOTSPOT handRailWidthL/2-roffl,	0,	rt+dsl,	RailUNID, temp_OverhangLBottom, 1+128,OverhangLBottom  : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffl, 1	,rt+dsl,RailUNID, temp_OverhangLBottom, 3,OverhangLBottom : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffl,-temp_OverhangLBottom,rt+dsl,RailUNID, temp_OverhangLBottom, 2,OverhangLBottom : RailUNID=RailUNID+1

				!!! Rail Overhang at Top
				HOTSPOT handRailWidthL/2-roffl,	lrah*th/(td*sin(atn(th/td))),	rt+dsl,	RailUNID, temp_OverhangLTop, 1+128,OverhangLTop  : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffl, lrah*th/(td*sin(atn(th/td)))-1	,rt+dsl,RailUNID, temp_OverhangLTop, 3,OverhangLTop : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffl,lrah*th/(td*sin(atn(th/td)))+temp_OverhangLTop,rt+dsl,RailUNID, temp_OverhangLTop, 2,OverhangLTop : RailUNID=RailUNID+1

			IF rplPostBase=1 THEN

				RailUNID=2900

				!!!POST BASE OVERHANG
				HOTSPOT handRailWidthL/2-roffl,-OverhangLBottom/cos(angle),rt,	RailUNID, gs_PostBaseOverhangL, 1+128 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffl,-OverhangLBottom/cos(angle),rt-gs_PostBaseOverhangL,	RailUNID, gs_PostBaseOverhangL, 2 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffl,-OverhangLBottom/cos(angle),rt+1,	RailUNID, gs_PostBaseOverhangL, 3 : RailUNID=RailUNID+1

				HOTSPOT handRailWidthL/2-roffl,lrah*th/(td*sin(atn(th/td)))+OverhangLTop/cos(angle),rt,	RailUNID, gs_PostBaseOverhangL, 1+128 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffl,lrah*th/(td*sin(atn(th/td)))+OverhangLTop/cos(angle),rt-gs_PostBaseOverhangL,	RailUNID, gs_PostBaseOverhangL, 2 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffl,lrah*th/(td*sin(atn(th/td)))+OverhangLTop/cos(angle),rt+1,	RailUNID, gs_PostBaseOverhangL, 3 : RailUNID=RailUNID+1
			ENDIF

			IF leftRailType_m = 9 THEN
				RailUNID=3000

				!!!TOP WIRE/SUBBOARD DISTANCE FROM HANDRAIL
				HOTSPOT handRailWidthL/2-roffl,-OverhangLBottom/cos(angle),rt+dsl+hrl-HandrailHgtL,	RailUNID, sbhl, 1+128 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffl,-OverhangLBottom/cos(angle),rt+dsl+hrl-HandrailHgtL-sbhl,	RailUNID, sbhl, 2 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffl,-OverhangLBottom/cos(angle),rt+dsl+hrl-HandrailHgtL+1,	RailUNID, sbhl, 3 : RailUNID=RailUNID+1

				HOTSPOT handRailWidthL/2-roffl,lrah*th/(td*sin(atn(th/td)))+OverhangLTop/cos(angle),rt+dsl+hrl-HandrailHgtL,	RailUNID, sbhl, 1+128 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffl,lrah*th/(td*sin(atn(th/td)))+OverhangLTop/cos(angle),rt+dsl+hrl-HandrailHgtL-sbhl,	RailUNID, sbhl, 2 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffl,lrah*th/(td*sin(atn(th/td)))+OverhangLTop/cos(angle),rt+dsl+hrl-HandrailHgtL+1,	RailUNID, sbhl, 3 : RailUNID=RailUNID+1

!				HOTSPOT flw-fthr/2+roffr,-OverhangRBottom,	rt+dsr+hrr-OverhangRBottom*tan(angle)-HandrailHgtR,		RailUNID, sbhr, 1+128 : RailUNID=RailUNID+1
!				HOTSPOT flw-fthr/2+roffr,-OverhangRBottom,	rt+dsr+hrr-OverhangRBottom*tan(angle)-HandrailHgtR+1,	RailUNID, sbhr, 3 : RailUNID=RailUNID+1
!				HOTSPOT flw-fthr/2+roffr,-OverhangRBottom,	rt+dsr+hrr-OverhangRBottom*tan(angle)-HandrailHgtR-sbhr,	RailUNID, sbhr, 2 : RailUNID=RailUNID+1
!
!				HOTSPOT flw-fthr/2+roffr,lrah+OverhangRTop,	rt+(rnu-1)*th+top_ly+dsr+hrr+OverhangRTop*tan(angle)-HandrailHgtR,		RailUNID, sbhr, 1+128 : RailUNID=RailUNID+1
!				HOTSPOT flw-fthr/2+roffr,lrah+OverhangRTop,	rt+(rnu-1)*th+top_ly+dsr+hrr+OverhangRTop*tan(angle)-HandrailHgtR+1,	RailUNID, sbhr, 3 : RailUNID=RailUNID+1
!				HOTSPOT flw-fthr/2+roffr,lrah+OverhangRTop,	rt+(rnu-1)*th+top_ly+dsr+hrr+OverhangRTop*tan(angle)-HandrailHgtR-sbhr,	RailUNID, sbhr, 2 : RailUNID=RailUNID+1
			ENDIF

			DEL 2
			ENDIF
		IF bComplexRailLeft THEN DEL 1
	ENDIF
endif

IF rail_m = RAILPOS_RIGHT or rail_m = RAILPOS_BOTH THEN
	rprPostBase = (rightRailType_m = 7 or rightRailType_m = 8 or rightRailType_m = 9 or rightRailType_m = 11)

	RailUNID=1000

	!!! RAIL OFFSET
	HOTSPOT flw-handRailWidthR/2,			-OverhangRBottom, -OverhangRBottom*tan(angle), RailUNID, roffr, 1+128 : RailUNID=RailUNID+1
	HOTSPOT flw-handRailWidthR/2-1,		-OverhangRBottom, -OverhangRBottom*tan(angle), RailUNID, roffr, 3 : RailUNID=RailUNID+1
	HOTSPOT flw-handRailWidthR/2+roffr,	-OverhangRBottom, -OverhangRBottom*tan(angle), RailUNID, roffr, 2 : RailUNID=RailUNID+1

	HOTSPOT flw-handRailWidthR/2,			lrah+OverhangRTop, (rnu-1)*th+OverhangRTop*tan(angle), RailUNID, roffr, 1+128 : RailUNID=RailUNID+1
	HOTSPOT flw-handRailWidthR/2-1,		lrah+OverhangRTop, (rnu-1)*th+OverhangRTop*tan(angle), RailUNID, roffr, 3 : RailUNID=RailUNID+1
	HOTSPOT flw-handRailWidthR/2+roffr,	lrah+OverhangRTop, (rnu-1)*th+OverhangRTop*tan(angle), RailUNID, roffr, 2 : RailUNID=RailUNID+1

	IF bComplexRailRight THEN ADDy td/2

	IF romr_m = RAILORIENT_VERTICAL THEN

		top_ry=((OverhangRBottom+OverhangRTop)*th)/td

		RailUNID=1100

		!!! Dist. from Top of Tread
		HOTSPOT flw-handRailWidthR/2+roffr,-OverhangRBottom,	rt-OverhangRBottom*tan(angle),		RailUNID, dsr, 1+128 : RailUNID=RailUNID+1
		HOTSPOT flw-handRailWidthR/2+roffr,-OverhangRBottom,	rt-OverhangRBottom*tan(angle)-1,	RailUNID, dsr, 3 : RailUNID=RailUNID+1
		HOTSPOT flw-handRailWidthR/2+roffr,-OverhangRBottom,	rt-OverhangRBottom*tan(angle)+dsr,	RailUNID, dsr, 2 : RailUNID=RailUNID+1

		HOTSPOT flw-handRailWidthR/2+roffr,lrah+OverhangRTop,	rt+(rnu-1)*th+top_ry-1+OverhangRTop*tan(angle),	RailUNID, dsr, 3 : RailUNID=RailUNID+1
		HOTSPOT flw-handRailWidthR/2+roffr,lrah+OverhangRTop,	rt+(rnu-1)*th+top_ry+OverhangRTop*tan(angle),		RailUNID, dsr, 1+128 : RailUNID=RailUNID+1
		HOTSPOT flw-handRailWidthR/2+roffr,lrah+OverhangRTop,	rt+(rnu-1)*th+top_ry+dsr+OverhangRTop*tan(angle),	RailUNID, dsr, 2 : RailUNID=RailUNID+1

		!!! Height of Rail
		HOTSPOT flw-handRailWidthR/2+roffr,-OverhangRBottom,	rt+dsr-OverhangRBottom*tan(angle),		RailUNID, hrr, 1+128 : RailUNID=RailUNID+1
		HOTSPOT flw-handRailWidthR/2+roffr,-OverhangRBottom,	rt+dsr-1-OverhangRBottom*tan(angle),	RailUNID, hrr, 3 : RailUNID=RailUNID+1
		HOTSPOT flw-handRailWidthR/2+roffr,-OverhangRBottom,	rt+dsr+hrr-OverhangRBottom*tan(angle),	RailUNID, hrr, 2 : RailUNID=RailUNID+1

		HOTSPOT flw-handRailWidthR/2+roffr,lrah+OverhangRTop,	rt+(rnu-1)*th+top_ry+dsr+OverhangRTop*tan(angle),		RailUNID, hrr, 1+128 : RailUNID=RailUNID+1
		HOTSPOT flw-handRailWidthR/2+roffr,lrah+OverhangRTop,	rt+(rnu-1)*th+top_ry+dsr-1+OverhangRTop*tan(angle),	RailUNID, hrr, 3 : RailUNID=RailUNID+1
		HOTSPOT flw-handRailWidthR/2+roffr,lrah+OverhangRTop,	rt+(rnu-1)*th+top_ry+dsr+hrr+OverhangRTop*tan(angle),	RailUNID, hrr, 2 : RailUNID=RailUNID+1

		!!! Rail Overhang at Bottom
		HOTSPOT flw-handRailWidthR/2+roffr,	0,	rt+dsr,	RailUNID, temp_OverhangRBottom, 1+128,OverhangRBottom : RailUNID=RailUNID+1
		HOTSPOT flw-handRailWidthR/2+roffr,	1,	rt+dsr+tan(angle),	RailUNID, temp_OverhangRBottom, 3,OverhangRBottom : RailUNID=RailUNID+1
		HOTSPOT flw-handRailWidthR/2+roffr,-OverhangRBottom,	rt+dsr-OverhangRBottom*tan(angle),	RailUNID, temp_OverhangRBottom, 2,OverhangRBottom : RailUNID=RailUNID+1

		!!! Rail Overhang at Top
		HOTSPOT flw-handRailWidthR/2+roffr,lrah,		rt+(rnu-1)*th+top_ry+dsr,		RailUNID, temp_OverhangRTop, 1+128,OverhangRTop : RailUNID=RailUNID+1
		HOTSPOT flw-handRailWidthR/2+roffr,lrah-1,	rt+(rnu-1)*th+top_ry+dsr-tan(angle),		RailUNID, temp_OverhangRTop, 3,OverhangRTop : RailUNID=RailUNID+1
		HOTSPOT flw-handRailWidthR/2+roffr,lrah+OverhangRTop,rt+(rnu-1)*th+top_ry+dsr+OverhangRTop*tan(angle),	RailUNID, temp_OverhangRTop, 2,OverhangRTop : RailUNID=RailUNID+1

		IF rprPostBase=1 THEN

			RailUNID=1200

			!!!POST BASE OVERHANG
			HOTSPOT flw-handRailWidthR/2+roffr,-OverhangRBottom,	rt-OverhangRBottom*tan(angle),		RailUNID, gs_PostBaseOverhangR, 1+128 : RailUNID=RailUNID+1
			HOTSPOT flw-handRailWidthR/2+roffr,-OverhangRBottom,	rt-OverhangRBottom*tan(angle)+1,	RailUNID, gs_PostBaseOverhangR, 3 : RailUNID=RailUNID+1
			HOTSPOT flw-handRailWidthR/2+roffr,-OverhangRBottom,	rt-OverhangRBottom*tan(angle)-gs_PostBaseOverhangR,	RailUNID, gs_PostBaseOverhangR, 2 : RailUNID=RailUNID+1

			HOTSPOT flw-handRailWidthR/2+roffr,lrah+OverhangRTop,	rt+(rnu-1)*th+top_ry+OverhangRTop*tan(angle),	RailUNID, gs_PostBaseOverhangR, 3 : RailUNID=RailUNID+1
			HOTSPOT flw-handRailWidthR/2+roffr,lrah+OverhangRTop,	rt+(rnu-1)*th+top_ry+OverhangRTop*tan(angle)+1,		RailUNID, gs_PostBaseOverhangR, 1+128 : RailUNID=RailUNID+1
			HOTSPOT flw-handRailWidthR/2+roffr,lrah+OverhangRTop,	rt+(rnu-1)*th+top_ry+OverhangRTop*tan(angle)-gs_PostBaseOverhangR,	RailUNID, gs_PostBaseOverhangR, 2 : RailUNID=RailUNID+1
		ENDIF

		IF rightRailType_m = 9 THEN

			RailUNID=1300

			!!!TOP WIRE/SUBBOARD DISTANCE FROM HANDRAIL
			HOTSPOT flw-handRailWidthR/2+roffr,-OverhangRBottom,	rt+dsr+hrr-OverhangRBottom*tan(angle)-HandrailHgtR,		RailUNID, sbhr, 1+128 : RailUNID=RailUNID+1
			HOTSPOT flw-handRailWidthR/2+roffr,-OverhangRBottom,	rt+dsr+hrr-OverhangRBottom*tan(angle)-HandrailHgtR+1,	RailUNID, sbhr, 3 : RailUNID=RailUNID+1
			HOTSPOT flw-handRailWidthR/2+roffr,-OverhangRBottom,	rt+dsr+hrr-OverhangRBottom*tan(angle)-HandrailHgtR-sbhr,	RailUNID, sbhr, 2 : RailUNID=RailUNID+1

			HOTSPOT flw-handRailWidthR/2+roffr,lrah+OverhangRTop,	rt+(rnu-1)*th+top_ry+dsr+hrr+OverhangRTop*tan(angle)-HandrailHgtR,		RailUNID, sbhr, 1+128 : RailUNID=RailUNID+1
			HOTSPOT flw-handRailWidthR/2+roffr,lrah+OverhangRTop,	rt+(rnu-1)*th+top_ry+dsr+hrr+OverhangRTop*tan(angle)-HandrailHgtR+1,	RailUNID, sbhr, 3 : RailUNID=RailUNID+1
			HOTSPOT flw-handRailWidthR/2+roffr,lrah+OverhangRTop,	rt+(rnu-1)*th+top_ry+dsr+hrr+OverhangRTop*tan(angle)-HandrailHgtR-sbhr,	RailUNID, sbhr, 2 : RailUNID=RailUNID+1
		ENDIF

	ELSE

		ADD 0,rt*sin(angle),(rt/cos(angle)-rt)*cos(angle)
		ROTx atn(th/td)

			RailUNID=1400

			!! Distance from Top of Tread

			HOTSPOT flw-handRailWidthR/2+roffr,-OverhangRBottom/cos(angle),rt,	RailUNID, dsr, 1+128 : RailUNID=RailUNID+1
			HOTSPOT flw-handRailWidthR/2+roffr,-OverhangRBottom/cos(angle),rt+dsr,	RailUNID, dsr, 2 : RailUNID=RailUNID+1
			HOTSPOT flw-handRailWidthR/2+roffr,-OverhangRBottom/cos(angle),rt-1,	RailUNID, dsr, 3 : RailUNID=RailUNID+1

			HOTSPOT flw-handRailWidthR/2+roffr,lrah*th/(td*sin(atn(th/td)))+OverhangRTop/cos(angle),rt,	RailUNID, dsr, 1+128 : RailUNID=RailUNID+1
			HOTSPOT flw-handRailWidthR/2+roffr,lrah*th/(td*sin(atn(th/td)))+OverhangRTop/cos(angle),rt+dsr,	RailUNID, dsr, 2 : RailUNID=RailUNID+1
			HOTSPOT flw-handRailWidthR/2+roffr,lrah*th/(td*sin(atn(th/td)))+OverhangRTop/cos(angle),rt-1,	RailUNID, dsr, 3 : RailUNID=RailUNID+1


			!! Height of Rail

			HOTSPOT flw-handRailWidthR/2+roffr,-OverhangRBottom/cos(angle),rt+dsr,	RailUNID, hrr, 1+128 : RailUNID=RailUNID+1
			HOTSPOT flw-handRailWidthR/2+roffr,-OverhangRBottom/cos(angle),rt+dsr+hrr,	RailUNID, hrr, 2 : RailUNID=RailUNID+1
			HOTSPOT flw-handRailWidthR/2+roffr,-OverhangRBottom/cos(angle),rt+dsr-1,	RailUNID, hrr, 3 : RailUNID=RailUNID+1

			HOTSPOT flw-handRailWidthR/2+roffr,lrah*th/(td*sin(atn(th/td)))+OverhangRTop/cos(angle),rt+dsr,	RailUNID, hrr, 1+128 : RailUNID=RailUNID+1
			HOTSPOT flw-handRailWidthR/2+roffr,lrah*th/(td*sin(atn(th/td)))+OverhangRTop/cos(angle),rt+dsr+hrr,	RailUNID, hrr, 2 : RailUNID=RailUNID+1
			HOTSPOT flw-handRailWidthR/2+roffr,lrah*th/(td*sin(atn(th/td)))+OverhangRTop/cos(angle),rt+dsr-1,	RailUNID, hrr, 3 : RailUNID=RailUNID+1

			!!! Rail Overhang at Bottom
			HOTSPOT flw-handRailWidthR/2+roffr,	0,	rt+dsr,	RailUNID, temp_OverhangRBottom, 1+128,OverhangRBottom  : RailUNID=RailUNID+1
			HOTSPOT flw-handRailWidthR/2+roffr, 1	,rt+dsr,RailUNID, temp_OverhangRBottom, 3,OverhangRBottom : RailUNID=RailUNID+1
			HOTSPOT flw-handRailWidthR/2+roffr,-temp_OverhangRBottom,rt+dsr,RailUNID, temp_OverhangRBottom, 2,OverhangRBottom : RailUNID=RailUNID+1

			!!! Rail Overhang at Top
			HOTSPOT flw-handRailWidthR/2+roffr,	lrah*th/(td*sin(atn(th/td))),	rt+dsr,	RailUNID, temp_OverhangRTop, 1+128,OverhangRTop  : RailUNID=RailUNID+1
			HOTSPOT flw-handRailWidthR/2+roffr, lrah*th/(td*sin(atn(th/td)))-1	,rt+dsr,RailUNID, temp_OverhangRTop, 3,OverhangLTop : RailUNID=RailUNID+1
			HOTSPOT flw-handRailWidthR/2+roffr,lrah*th/(td*sin(atn(th/td)))+temp_OverhangRTop,rt+dsr,RailUNID, temp_OverhangRTop, 2,OverhangRTop : RailUNID=RailUNID+1


		IF rprPostBase=1 THEN

			RailUNID=1500

			!!!POST BASE OVERHANG
			HOTSPOT flw-handRailWidthR/2+roffr,-OverhangRBottom/cos(angle),rt,	RailUNID, gs_PostBaseOverhangR, 1+128 : RailUNID=RailUNID+1
			HOTSPOT flw-handRailWidthR/2+roffr,-OverhangRBottom/cos(angle),rt-gs_PostBaseOverhangR,	RailUNID, gs_PostBaseOverhangR, 2 : RailUNID=RailUNID+1
			HOTSPOT flw-handRailWidthR/2+roffr,-OverhangRBottom/cos(angle),rt+1,	RailUNID, gs_PostBaseOverhangR, 3 : RailUNID=RailUNID+1

			HOTSPOT flw-handRailWidthR/2+roffr,lrah*th/(td*sin(atn(th/td)))+OverhangRTop/cos(angle),rt,	RailUNID, gs_PostBaseOverhangR, 1+128 : RailUNID=RailUNID+1
			HOTSPOT flw-handRailWidthR/2+roffr,lrah*th/(td*sin(atn(th/td)))+OverhangRTop/cos(angle),rt-gs_PostBaseOverhangR,	RailUNID, gs_PostBaseOverhangR, 2 : RailUNID=RailUNID+1
			HOTSPOT flw-handRailWidthR/2+roffr,lrah*th/(td*sin(atn(th/td)))+OverhangRTop/cos(angle),rt+1,	RailUNID, gs_PostBaseOverhangR, 3 : RailUNID=RailUNID+1
		ENDIF

		IF rightRailType_m = 9 THEN

			RailUNID=1600

			!!!TOP WIRE/SUBBOARD DISTANCE FROM HANDRAIL
			HOTSPOT flw-handRailWidthR/2+roffr,-OverhangRBottom/cos(angle),rt+dsr+hrr-HandrailHgtR,	RailUNID, sbhr, 1+128 : RailUNID=RailUNID+1
			HOTSPOT flw-handRailWidthR/2+roffr,-OverhangRBottom/cos(angle),rt+dsr+hrr-HandrailHgtR-sbhr,	RailUNID, sbhr, 2 : RailUNID=RailUNID+1
			HOTSPOT flw-handRailWidthR/2+roffr,-OverhangRBottom/cos(angle),rt+dsr+hrr-HandrailHgtR+1,	RailUNID, sbhr, 3 : RailUNID=RailUNID+1

			HOTSPOT flw-handRailWidthR/2+roffr,lrah*th/(td*sin(atn(th/td)))+OverhangRTop/cos(angle),rt+dsr+hrr-HandrailHgtR,	RailUNID, sbhr, 1+128 : RailUNID=RailUNID+1
			HOTSPOT flw-handRailWidthR/2+roffr,lrah*th/(td*sin(atn(th/td)))+OverhangRTop/cos(angle),rt+dsr+hrr-HandrailHgtR-sbhr,	RailUNID, sbhr, 2 : RailUNID=RailUNID+1
			HOTSPOT flw-handRailWidthR/2+roffr,lrah*th/(td*sin(atn(th/td)))+OverhangRTop/cos(angle),rt+dsr+hrr-HandrailHgtR+1,	RailUNID, sbhr, 3 : RailUNID=RailUNID+1
		ENDIF

		DEL 2
	ENDIF
	IF bComplexRailRight THEN DEL 1

endif

del 1



!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!! HOTSPOTS in 3D / Stair !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
lrah=td*(rnu)
	!!! FLIGHT WIDTH

	FlightUNID=1

	HOTSPOT 		0,	0,	0, FlightUNID, flw, 1+256: FlightUNID=FlightUNID+1
	HOTSPOT 		-1,	0,	0, FlightUNID, flw, 3: FlightUNID=FlightUNID+1
	HOTSPOT 		flw,0,	0, FlightUNID, flw, 2: FlightUNID=FlightUNID+1


	HOTSPOT 		0,	lrah,	rnu*th, FlightUNID, flw, 1+256: FlightUNID=FlightUNID+1
	HOTSPOT 		-1,	lrah,	rnu*th, FlightUNID, flw, 3: FlightUNID=FlightUNID+1
	HOTSPOT 		flw,lrah,	rnu*th, FlightUNID, flw, 2: FlightUNID=FlightUNID+1


	!!! Riser Thickness
	HOTSPOT 		0,	-ns,	th-rt, FlightUNID, rt, 2: FlightUNID=FlightUNID+1
	HOTSPOT 		0,	-ns,	th+1, FlightUNID, rt, 3: FlightUNID=FlightUNID+1
	HOTSPOT 		0,  -ns,	th, FlightUNID, rt, 1: FlightUNID=FlightUNID+1

	HOTSPOT 		flw,	-ns,	th-rt, FlightUNID, rt, 2: FlightUNID=FlightUNID+1
	HOTSPOT 		flw,	-ns,	th+1, FlightUNID, rt, 3: FlightUNID=FlightUNID+1
	HOTSPOT 		flw,	-ns,	th, FlightUNID, rt, 1: FlightUNID=FlightUNID+1

	HOTSPOT 		0,	lrah,	rnu*th-rt, FlightUNID, rt, 2: FlightUNID=FlightUNID+1
	HOTSPOT 		0,	lrah,	rnu*th+1, FlightUNID, rt, 3: FlightUNID=FlightUNID+1
	HOTSPOT 		0,  lrah,	rnu*th, FlightUNID, rt, 1: FlightUNID=FlightUNID+1

	HOTSPOT 		flw,	lrah,	rnu*th-rt, FlightUNID, rt, 2: FlightUNID=FlightUNID+1
	HOTSPOT 		flw,	lrah,	rnu*th+1, FlightUNID, rt, 3: FlightUNID=FlightUNID+1
	HOTSPOT 		flw,  lrah,	rnu*th, FlightUNID, rt, 1: FlightUNID=FlightUNID+1

end

CALL "I-Beam Inclined"
CALL "IF Beam Inclined"
CALL "IS Beam Inclined"
CALL "U-Beam Inclined"

! ==============================================================================
"callRailsForStair":
! ------------------------------------------------------------------------------
!	lraSimple
!	lraComplex
!	additionXComplex
!	additionZComplex
!	hrovL: rail overhang start
!	hrovR: rail overhang end
!	postNumber:   number of posts
!	side: SIDE_LEFT or SIDE_RIGHT
! ==============================================================================
	ani = angle
	additionXComplex = additionXComplex
	additionZComplex = additionZComplex
	gosub "callRails"
return

! ==============================================================================
"callRails":
! ------------------------------------------------------------------------------
!	ani
!	additionXComplex
!	additionZComplex
!	dsComplex
!  ------------------
!	side: SIDE_LEFT or SIDE_RIGHT
!	lraSimple
!	lraComplex
!	hrovL: rail overhang start
!	hrovR: rail overhang end
!	postNumber:   number of posts
! ==============================================================================
	if side = SIDE_LEFT then
		railBarDepth	= bwl
		railBarDiam		= bdl
		railHeight		= hrl
		railBarThk		= fthl
		railBarType		= btypl_m
		railFrameThk	= fthl
		railDist		= dsl
		railType_m		= leftRailType_m
		railPostDiam	= pdl
		railPostWidth	= pwl
		railPostThk		= pthl
		railPostType	= ptl_m
		barNumber		= nbl
		iBalusterStyle	= btl_m
		railFramesWSide	= fswl
		railFramesWTop	= ftwl
		railFramesWBot	= fbwl
		railBarHeight	= bhl
		railBarFillThk	= bthl
		balusterDist	= abdistl
		railFrameMat	= fmatl
		railBaluFillMat	= bmatl
		railPostMat		= pmatl
		balusterNumber	= nbtl
		railFillDist	= fdfl
		railPostBaseType= gs_PostBaseTypeL_m
		railDistFromHr	= sbhl
		railPostBaseOv	= gs_PostBaseOverhangL
		handRailType	= hrtl_m
		handRailWidth	= hrwl
		handRailDiam	= hrdl
		handRailHeight	= hrhl
	else
		railBarDepth	= bwr
		railBarDiam		= bdr
		railHeight		= hrr
		railBarThk		= fthr
		railBarType		= btypr_m
		railFrameThk	= fthr
		railDist		= dsr
		railType_m		= rightRailType_m
		railPostDiam	= pdr
		railPostWidth	= pwr
		railPostThk		= pthr
		railPostType	= ptr_m
		barNumber		= nbr
		iBalusterStyle	= btr_m
		railFramesWSide	= fswr
		railFramesWTop	= ftwr
		railFramesWBot	= fbwr
		railBarHeight	= bhr
		railBarFillThk	= bthr
		balusterDist	= abdistr
		railFrameMat	= fmatr
		railBaluFillMat	= bmatr
		railPostMat		= pmatr
		balusterNumber	= nbtr
		railFillDist	= fdfr
		railPostBaseType= gs_PostBaseTypeR_m
		railDistFromHr	= sbhr
		railPostBaseOv	= gs_PostBaseOverhangR
		handRailType	= hrtr_m
		handRailWidth	= hrwr
		handRailDiam	= hrdr
		handRailHeight	= hrhr
	endif

	call "stairRails_m" parameters	railType_m				= railType_m,
									iStairType				= 2,
									bEnableWired02Rail		= 1,
									bEnableNonVerticalRail	= 1,
									additionXComplex		= additionXComplex,
									additionZComplex		= additionZComplex,
									ptyp_m					= 1,
									ani						= ani,
									ab						= 0,
									rb						= 0,
									rom_m					= rom_m,
									rmm_m					= rmm_m,
									lraSimple				= lraSimple,
									lraComplex				= lraComplex,
									railHeight				= railHeight,
									railDist				= railDist,
									gs_detlevel_3D_m		= gs_detlevel_3D_m,
									gs_cont_pen				= gs_cont_pen,
									res						= res,
									rescs					= rescs,
									gs_shadow				= gs_shadow,
									railFrameThk			= railFrameThk,
									railFramesWSide			= railFramesWSide,
									railFramesWTop			= railFramesWTop,
									railFramesWBot			= railFramesWBot,
									railBarType				= railBarType,
									railBarDepth			= railBarDepth,
									railBarFillThk			= railBarFillThk,
									railBarDiam				= railBarDiam,
									balusterDist			= balusterDist,
									railFrameMat			= railFrameMat,
									railBaluFillMat			= railBaluFillMat,
									barNumber				= barNumber,
									railBarHeight			= railBarHeight,
									railFillDist			= railFillDist,
									handRailType			= handRailType,
									handRailDiam			= handRailDiam,
									handRailWidth			= handRailWidth,
									handRailHeight			= handRailHeight,
									hrovL					= hrovL,
									hrovR					= hrovR,
									iBalusterStyle			= iBalusterStyle,
									railPostDiam			= railPostDiam,
									railPostWidth			= railPostWidth,
									railPostThk				= railPostThk,
									railPostType			= railPostType,
									postNumber				= postNumber,
									railPostMat				= railPostMat,
									iParamInputType			= 1,
									balusterNumber			= balusterNumber,
									railPostBaseType		= railPostBaseType,
									railPostBaseOv			= railPostBaseOv,
									railDistFromHr			= railDistFromHr
return

