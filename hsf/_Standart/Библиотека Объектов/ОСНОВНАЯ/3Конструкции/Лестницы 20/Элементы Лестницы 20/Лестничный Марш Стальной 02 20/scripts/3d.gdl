
IF gs_detlevel_3D_m = DET3D_OFF THEN end

IF GLOB_CONTEXT>20 and GLOB_CONTEXT<40 THEN 		!! FOR Simple Model and in 3D Windoow
gs_detlevel_3D_m = DET3D_SIMPLE
ENDIF

IF gs_shadow=0 THEN SHADOW OFF


!!!!!!!!!!!!!!!!!!! *** HOTSPOTs RailUNID *** !!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

	!!! FlightUNID=1		!!! 1,100
	!!! RailUNID=1000		!!! 1000-2400

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!! HOTSPOTS !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

	!!! Editable HOTSPOTs at First Tread

	IF  firstTreadLevel_m = FIRSTTREAD_ATFLOOR THEN
		ry=-td
	ELSE
		ry=0
	ENDIF

		FlightUNID=1

		!!! FLIGHT WIDTH

		HOTSPOT 		0,	ry,	0, FlightUNID, flw, 1+256 : FlightUNID=FlightUNID+1
		HOTSPOT 		-1,	ry,	0, FlightUNID, flw, 3 : FlightUNID=FlightUNID+1
		HOTSPOT 		flw,ry,	0, FlightUNID, flw, 2 : FlightUNID=FlightUNID+1


	!!! Editable HOTSPOTs at Top Tread

	IF  topTreadLevel_m = TOPTREAD_ATFLOOR THEN
		ry=(rnu)*td
		rz_stair=(rnu)*th

	ELSE
		ry=(rnu-1)*td
		rz_stair=(rnu-1)*th

	ENDIF

		FlightUNID=100

		!!! FLIGHT WIDTH

		HOTSPOT 		0,	ry,	rz_stair, FlightUNID, flw, 1+256 : FlightUNID=FlightUNID+1
		HOTSPOT 		-1,	ry,	rz_stair, FlightUNID, flw, 3 : FlightUNID=FlightUNID+1
		HOTSPOT 		flw,ry,	rz_stair, FlightUNID, flw, 2 : FlightUNID=FlightUNID+1


ROTx 90
ROTy 90

pen gs_cont_pen
fill gs_fill_type
RESOL res
MATERIAL mat_tread
SECT_FILL typeFillTread, penBackFillTread, penFillTread, penLineTread


	kisx=covthick*slapback/th
	kcx=covthick*slapback/th
	startpnt=1
	IF topTreadLevel_m = TOPTREAD_ATFLOOR THEN endpnt = rnu ELSE endpnt = rnu-1
	IF firstTreadLevel_m = FIRSTTREAD_ATFLOOR THEN
		PRISM_ 5, flw,
			slapback-kisx,	-covthick, 15,
			slapback-kisx,	0, 15,
			-td,			0, 15,
			-td,			-covthick, 15,
			slapback-kisx,	-covthick, 15
	ENDIF
	FOR i=startpnt to endpnt-1
		ADDy i*th
		ADDx i*td
			IF i = startpnt and firstTreadLevel_m = FIRSTTREAD_ABOVEFLOOR THEN
				PRISM_  8,  flw,
					slapback, -covthick, 15,
					-td, -covthick, 15,
					-td+slapback-kisx, -th, 15,
					-td+slapback-kisx-covthick, -th, 15,
					-td-covthick, -covthick, 15,
					-td, 0, 15,
					slapback-kisx, 0, 15,
					slapback, -covthick, 15
			ELSE
				IF gs_detlevel_3D_m = DET3D_DETAILED THEN
					PRISM_  8,  flw,
						slapback, -covthick, 15,
						-td, -covthick, 15,
						-td+slapback-kisx, -th, 15,
						-td+slapback-kisx-covthick, -th, 15,
						-td-covthick, -covthick, 15,
						-td, 	0, 15,
						slapback-kisx, 0, 15,
						slapback, -covthick, 15
				ELSE
					PRISM_  7,  flw,
						slapback, -covthick, 15,
						-td, -covthick, 15,
						-td+slapback-kisx, -th, 15,
						-td+slapback-kisx-covthick, -th, 15,
						-td-covthick-kisx, 0, 15,
						slapback-kisx, 0, 15,
						slapback, -covthick, 15
				ENDIF

			ENDIF
		DEL 2
	NEXT i

	ADDy endpnt*th
	ADDx endpnt*td
	IF gs_detlevel_3D_m = DET3D_DETAILED THEN
		PRISM_  8,  flw,
			0, -covthick, 15,
			-td, -covthick, 15,
			-td+slapback-kisx, -th, 15,
			-td+slapback-kisx-covthick, -th, 15,
			-td-covthick, -covthick, 15,
			-td, 0, 15,
			0, 0, 15,
			0, -covthick, 15
	ELSE
		PRISM_  7,  flw,
			0, -covthick, 15,
			-td, -covthick, 15,
			-td+slapback-kisx, -th, 15,
			-td+slapback-kisx-covthick, -th, 15,
			-td-covthick-kisx, 0, 15,
			0, 0, 15,
			0, -covthick, 15
	ENDIF
	DEL 2

DEL 2


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  RAILING  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

IF hrtr_m=1 THEN		!!! HANDRAIL RIGHT WIDTH
		HandrailHgtR=hrhr
	ELSE
		HandrailHgtR=hrdr
ENDIF

IF hrtl_m=1 THEN		!!! HANDRAIL RIGHT WIDTH
		HandrailHgtL=hrhl
	ELSE
		HandrailHgtL=hrdl
ENDIF

hsz=covthick
hsy=0
rnuadd=-1
rnulen=(rnu+rnuadd)*td		!!! Length of Railing
angle=atn(th/td)

RRailLength=rnulen+OverhangRBottom+OverhangRTop
LRailLength=rnulen+OverhangLBottom+OverhangLTop

IF firstTreadLevel_m = FIRSTTREAD_ABOVEFLOOR THEN
	hsz=th+hsz
ELSE
	hsy=-td
ENDIF

top_ly=((OverhangLBottom+OverhangLTop)*th)/td
top_ry=((OverhangRBottom+OverhangRTop)*th)/td

! ------------------------------------------------------------------------------
! Left rail
! ------------------------------------------------------------------------------

IF rail_m = RAILPOS_LEFT or rail_m = RAILPOS_BOTH THEN
	if bSameRails then
		leftRailType_m	= rightRailType_m
		LRailLength		= RRailLength
		top_ly			= top_ry
	endif

	rplPostBase = (leftRailType_m = 7 or leftRailType_m = 8 or leftRailType_m = 9 or leftRailType_m = 11)

	ADDx 0
	ROTz 90
	ADD -OverhangLBottom + td/2 * bComplexRailLeft, -handRailWidthL/2+roffl,th-OverhangLBottom*tan(angle)

	IF roml_m <> RAILORIENT_VERTICAL THEN
		rnuln=LRailLength*th/(td*sin(atn(th/td)))
	ELSE
		rnuln=LRailLength
	endif

	lraSimple=rnuln
	lraComplex=rnuln
	additionXComplex=0
	additionZComplex=0
	hrovL=hrol
	hrovR=hrol
	postNumber = npl
	rom_m = roml_m
	rmm_m = roml_m
	side = SIDE_LEFT
	gosub "callRailsForStair"

	DEL 3

	ADD 0,0,th
	IF bSameRails THEN		! Same as Right
		ADDy td/2 * bComplexRailLeft

		RailUNID=1500

		! RAIL OFFSET
		HOTSPOT handRailWidthL/2,			-OverhangRBottom, -OverhangRBottom*tan(angle), RailUNID, roffr, 1+128 : RailUNID=RailUNID+1
		HOTSPOT handRailWidthL/2+1,		-OverhangRBottom, -OverhangRBottom*tan(angle), RailUNID, roffr, 3 : RailUNID=RailUNID+1
		HOTSPOT handRailWidthL/2-roffr,	-OverhangRBottom, -OverhangRBottom*tan(angle), RailUNID, roffr, 2 : RailUNID=RailUNID+1

		HOTSPOT handRailWidthL/2,			rnulen+OverhangRTop, (rnu-1)*th+OverhangRTop*tan(angle), RailUNID, roffr, 1+128 : RailUNID=RailUNID+1
		HOTSPOT handRailWidthL/2+1,		rnulen+OverhangRTop, (rnu-1)*th+OverhangRTop*tan(angle), RailUNID, roffr, 3 : RailUNID=RailUNID+1
		HOTSPOT handRailWidthL/2-roffr,	rnulen+OverhangRTop, (rnu-1)*th+OverhangRTop*tan(angle), RailUNID, roffr, 2 : RailUNID=RailUNID+1

		IF roml_m = RAILORIENT_VERTICAL THEN
			RailUNID=1600

			! Distance from Top of Tread
			HOTSPOT handRailWidthL/2-roffr,-OverhangRBottom,	-OverhangRBottom*tan(angle),		RailUNID, dsr, 1+128 : RailUNID=RailUNID+1
			HOTSPOT handRailWidthL/2-roffr,-OverhangRBottom,	-OverhangRBottom*tan(angle)-1,	RailUNID, dsr, 3 : RailUNID=RailUNID+1
			HOTSPOT handRailWidthL/2-roffr,-OverhangRBottom,	-OverhangRBottom*tan(angle)+dsr,	RailUNID, dsr, 2 : RailUNID=RailUNID+1

			HOTSPOT handRailWidthL/2-roffr,rnulen+OverhangRTop,	(rnu-1)*th+top_ry+OverhangRTop*tan(angle),		RailUNID, dsr, 1+128 : RailUNID=RailUNID+1
			HOTSPOT handRailWidthL/2-roffr,rnulen+OverhangRTop,	(rnu-1)*th+top_ry-1+OverhangRTop*tan(angle),	RailUNID, dsr, 3 : RailUNID=RailUNID+1
			HOTSPOT handRailWidthL/2-roffr,rnulen+OverhangRTop,	(rnu-1)*th+top_ry+dsr+OverhangRTop*tan(angle),	RailUNID, dsr, 2 : RailUNID=RailUNID+1

			! Height of Rail
			HOTSPOT handRailWidthL/2-roffr,-OverhangRBottom,	dsr-OverhangRBottom*tan(angle),		RailUNID, hrr, 1+128 : RailUNID=RailUNID+1
			HOTSPOT handRailWidthL/2-roffr,-OverhangRBottom,	dsr-1-OverhangRBottom*tan(angle),	RailUNID, hrr, 3 : RailUNID=RailUNID+1
			HOTSPOT handRailWidthL/2-roffr,-OverhangRBottom,	dsr+hrr-OverhangRBottom*tan(angle),	RailUNID, hrr, 2 : RailUNID=RailUNID+1

			HOTSPOT handRailWidthL/2-roffr,rnulen+OverhangRTop,	(rnu-1)*th+top_ry+dsr+OverhangRTop*tan(angle),		RailUNID, hrr, 1+128 : RailUNID=RailUNID+1
			HOTSPOT handRailWidthL/2-roffr,rnulen+OverhangRTop,	(rnu-1)*th+top_ry+dsr-1+OverhangRTop*tan(angle),	RailUNID, hrr, 3 : RailUNID=RailUNID+1
			HOTSPOT handRailWidthL/2-roffr,rnulen+OverhangRTop,	(rnu-1)*th+top_ry+dsr+hrr+OverhangRTop*tan(angle),	RailUNID, hrr, 2 : RailUNID=RailUNID+1

			! Rail Overhang at Bottom
			HOTSPOT handRailWidthL/2-roffr,	0,	dsr,	RailUNID, temp_OverhangRBottom, 1+128,OverhangRBottom : RailUNID=RailUNID+1
			HOTSPOT handRailWidthL/2-roffr,	1,	dsr+tan(angle),	RailUNID, temp_OverhangRBottom, 3,OverhangRBottom : RailUNID=RailUNID+1
			HOTSPOT handRailWidthL/2-roffr,-OverhangRBottom,	dsr-OverhangRBottom*tan(angle),	RailUNID, temp_OverhangRBottom, 2,OverhangRBottom : RailUNID=RailUNID+1

			! Rail Overhang at Top
			HOTSPOT handRailWidthL/2-roffr, rnulen,		(rnu-1)*th+top_ry+dsr,		RailUNID, temp_OverhangRTop, 1+128,OverhangRTop : RailUNID=RailUNID+1
			HOTSPOT handRailWidthL/2-roffr, rnulen-1,		(rnu-1)*th+top_ry+dsr-tan(angle),	RailUNID, temp_OverhangRTop, 3,OverhangRTop : RailUNID=RailUNID+1
			HOTSPOT handRailWidthL/2-roffr, rnulen+OverhangRTop,(rnu-1)*th+top_ry+dsr+OverhangRTop*tan(angle),	RailUNID, temp_OverhangRTop, 2,OverhangRTop : RailUNID=RailUNID+1

			IF rightRailType_m = 9 THEN

				RailUNID=1700

				! top wire/subboard distance from handrail
				HOTSPOT handRailWidthL/2-roffr,-OverhangRBottom,-OverhangRBottom*tan(angle)+hrr+dsr-HandrailHgtR,RailUNID,sbhr,1+128 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffr,-OverhangRBottom,-OverhangRBottom*tan(angle)+hrr+dsr-HandrailHgtR-sbhr,RailUNID,sbhr,2 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffr,-OverhangRBottom,-OverhangRBottom*tan(angle)+hrr+dsr-HandrailHgtR+1,RailUNID,sbhr,3 : RailUNID=RailUNID+1

				HOTSPOT handRailWidthL/2-roffr,rnulen+OverhangRTop,(rnu-1)*th+top_ry+dsr+hrr+OverhangRTop*tan(angle)-HandrailHgtR,RailUNID,sbhr,1+128 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffr,rnulen+OverhangRTop,(rnu-1)*th+top_ry+dsr+hrr+OverhangRTop*tan(angle)-HandrailHgtR-sbhr,RailUNID,sbhr,2 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffr,rnulen+OverhangRTop,(rnu-1)*th+top_ry+dsr+hrr+OverhangRTop*tan(angle)-HandrailHgtR+1,RailUNID,sbhr,3 : RailUNID=RailUNID+1
			ENDIF

		ELSE	! romr = Perpendicular... / Same as Right

			ROTx atn(th/td)

			RailUNID=1800

			! Distance from Top of Tread
			HOTSPOT handRailWidthL/2-roffr,-OverhangRBottom/cos(angle),0,	RailUNID, dsr, 1+128 : RailUNID=RailUNID+1
			HOTSPOT handRailWidthL/2-roffr,-OverhangRBottom/cos(angle),dsr,	RailUNID, dsr, 2 : RailUNID=RailUNID+1
			HOTSPOT handRailWidthL/2-roffr,-OverhangRBottom/cos(angle),-1,	RailUNID, dsr, 3 : RailUNID=RailUNID+1

			HOTSPOT handRailWidthL/2-roffr,rnulen*th/(td*sin(atn(th/td)))+OverhangRTop/cos(angle),0,	RailUNID, dsr, 1+128 : RailUNID=RailUNID+1
			HOTSPOT handRailWidthL/2-roffr,rnulen*th/(td*sin(atn(th/td)))+OverhangRTop/cos(angle),dsr,	RailUNID, dsr, 2 : RailUNID=RailUNID+1
			HOTSPOT handRailWidthL/2-roffr,rnulen*th/(td*sin(atn(th/td)))+OverhangRTop/cos(angle),-1,	RailUNID, dsr, 3 : RailUNID=RailUNID+1

			! Height of Rail
			HOTSPOT handRailWidthL/2-roffr,-OverhangRBottom/cos(angle),dsr,	RailUNID, hrr, 1+128 : RailUNID=RailUNID+1
			HOTSPOT handRailWidthL/2-roffr,-OverhangRBottom/cos(angle),dsr+hrr,	RailUNID, hrr, 2 : RailUNID=RailUNID+1
			HOTSPOT handRailWidthL/2-roffr,-OverhangRBottom/cos(angle),dsr-1,	RailUNID, hrr, 3 : RailUNID=RailUNID+1

			HOTSPOT handRailWidthL/2-roffr,rnulen*th/(td*sin(atn(th/td)))+OverhangRTop/cos(angle),dsr,	RailUNID, hrr, 1+128 : RailUNID=RailUNID+1
			HOTSPOT handRailWidthL/2-roffr,rnulen*th/(td*sin(atn(th/td)))+OverhangRTop/cos(angle),dsr+hrr,	RailUNID, hrr, 2 : RailUNID=RailUNID+1
			HOTSPOT handRailWidthL/2-roffr,rnulen*th/(td*sin(atn(th/td)))+OverhangRTop/cos(angle),dsr-1,	RailUNID, hrr, 3 : RailUNID=RailUNID+1

			! Rail Overhang at Bottom
			HOTSPOT handRailWidthL/2-roffr, 0, dsr, RailUNID, temp_OverhangRBottom, 1+128,OverhangRBottom  : RailUNID=RailUNID+1
			HOTSPOT handRailWidthL/2-roffr, 1, dsr, RailUNID, temp_OverhangRBottom, 3,OverhangRBottom : RailUNID=RailUNID+1
			HOTSPOT handRailWidthL/2-roffr,-temp_OverhangRBottom, dsr, RailUNID, temp_OverhangRBottom, 2,OverhangRBottom : RailUNID=RailUNID+1

			! Rail Overhang at Top
			HOTSPOT handRailWidthL/2-roffr,rnulen*th/(td*sin(atn(th/td))),	dsr,	RailUNID, temp_OverhangRTop, 1+128,OverhangRTop  : RailUNID=RailUNID+1
			HOTSPOT handRailWidthL/2-roffr,rnulen*th/(td*sin(atn(th/td)))-1,	dsr,RailUNID, temp_OverhangRTop, 3,OverhangLTop : RailUNID=RailUNID+1
			HOTSPOT handRailWidthL/2-roffr,rnulen*th/(td*sin(atn(th/td)))+temp_OverhangRTop,dsr,RailUNID, temp_OverhangRTop, 2,OverhangRTop : RailUNID=RailUNID+1

			IF rightRailType_m = 9 THEN

				RailUNID=1900

				! top wire/subboard distance from handrail
				HOTSPOT handRailWidthL/2-roffr,-OverhangRBottom/cos(angle),hrr+dsr-HandrailHgtR/cos(angle),		RailUNID,sbhPerpR,1+128,sbhr : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffr,-OverhangRBottom/cos(angle),hrr+dsr-HandrailHgtR/cos(angle)-sbhr,	RailUNID,sbhPerpR,2,sbhr : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffr,-OverhangRBottom/cos(angle),hrr+dsr-HandrailHgtR/cos(angle)+1,		RailUNID,sbhPerpR,3,sbhr : RailUNID=RailUNID+1

				HOTSPOT handRailWidthL/2-roffr,rnulen*th/(td*sin(atn(th/td)))+OverhangRTop/cos(angle),hrr+dsr-HandrailHgtR/cos(angle),			RailUNID,sbhPerpR,1+128,sbhr : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffr,rnulen*th/(td*sin(atn(th/td)))+OverhangRTop/cos(angle),hrr+dsr-HandrailHgtR/cos(angle)-sbhr,		RailUNID,sbhPerpR,2,sbhr : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffr,rnulen*th/(td*sin(atn(th/td)))+OverhangRTop/cos(angle),hrr+dsr-HandrailHgtR/cos(angle)+1,			RailUNID,sbhPerpR,3,sbhr : RailUNID=RailUNID+1
			ENDIF

			del 1

		ENDIF
		DEL 1
	ELSE		! <> Same as Right
		ADDy td/2 * bComplexRailLeft

			RailUNID=2000

			! rail offset
			HOTSPOT handRailWidthL/2,			-OverhangLBottom, -OverhangLBottom*tan(angle), RailUNID, roffl, 1+128 : RailUNID=RailUNID+1
			HOTSPOT handRailWidthL/2+1,		-OverhangLBottom, -OverhangLBottom*tan(angle), RailUNID, roffl, 3 : RailUNID=RailUNID+1
			HOTSPOT handRailWidthL/2-roffl,	-OverhangLBottom, -OverhangLBottom*tan(angle), RailUNID, roffl, 2 : RailUNID=RailUNID+1

			HOTSPOT handRailWidthL/2,			rnulen+OverhangLTop, (rnu-1)*th+OverhangLTop*tan(angle), RailUNID, roffl, 1+128 : RailUNID=RailUNID+1
			HOTSPOT handRailWidthL/2+1,		rnulen+OverhangLTop, (rnu-1)*th+OverhangLTop*tan(angle), RailUNID, roffl, 3 : RailUNID=RailUNID+1
			HOTSPOT handRailWidthL/2-roffl,	rnulen+OverhangLTop, (rnu-1)*th+OverhangLTop*tan(angle), RailUNID, roffl, 2 : RailUNID=RailUNID+1

			IF roml_m = RAILORIENT_VERTICAL THEN
				RailUNID=2100

				! Distance from Top of Tread
				HOTSPOT handRailWidthL/2-roffl,-OverhangLBottom,	-OverhangLBottom*tan(angle),		RailUNID, dsl, 1+128 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffl,-OverhangLBottom,	-OverhangLBottom*tan(angle)-1,	RailUNID, dsl, 3 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffl,-OverhangLBottom,	-OverhangLBottom*tan(angle)+dsl,	RailUNID, dsl, 2 : RailUNID=RailUNID+1

				HOTSPOT handRailWidthL/2-roffl,rnulen+OverhangLTop,	(rnu-1)*th+top_ry+OverhangLTop*tan(angle),		RailUNID, dsl, 1+128 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffl,rnulen+OverhangLTop,	(rnu-1)*th+top_ry-1+OverhangLTop*tan(angle),	RailUNID, dsl, 3 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffl,rnulen+OverhangLTop,	(rnu-1)*th+top_ry+dsl+OverhangLTop*tan(angle),	RailUNID, dsl, 2 : RailUNID=RailUNID+1

				! Height of Rail
				HOTSPOT handRailWidthL/2-roffl,-OverhangLBottom,	dsl-OverhangLBottom*tan(angle),		RailUNID, hrl, 1+128 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffl,-OverhangLBottom,	dsl-1-OverhangLBottom*tan(angle),	RailUNID, hrl, 3 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffl,-OverhangLBottom,	dsl+hrl-OverhangLBottom*tan(angle),	RailUNID, hrl, 2 : RailUNID=RailUNID+1

				HOTSPOT handRailWidthL/2-roffl,rnulen+OverhangLTop,	(rnu-1)*th+top_ry+dsl+OverhangLTop*tan(angle),		RailUNID, hrl, 1+128 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffl,rnulen+OverhangLTop,	(rnu-1)*th+top_ry+dsl-1+OverhangLTop*tan(angle),	RailUNID, hrl, 3 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffl,rnulen+OverhangLTop,	(rnu-1)*th+top_ry+dsl+hrl+OverhangLTop*tan(angle),	RailUNID, hrl, 2 : RailUNID=RailUNID+1

				! Rail Overhang at Bottom
				HOTSPOT handRailWidthL/2-roffl,	0,	dsl,	RailUNID, temp_OverhangLBottom, 1+128,OverhangLBottom : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffl,	1,	dsl+tan(angle),	RailUNID, temp_OverhangLBottom, 3,OverhangLBottom : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffl,-OverhangLBottom,	dsl-OverhangLBottom*tan(angle),	RailUNID, temp_OverhangLBottom, 2,OverhangLBottom : RailUNID=RailUNID+1

				! Rail Overhang at Top
				HOTSPOT handRailWidthL/2-roffl, rnulen,		(rnu-1)*th+top_ry+dsl,		RailUNID, temp_OverhangLTop, 1+128,OverhangLTop : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffl, rnulen-1,		(rnu-1)*th+top_ry+dsl-tan(angle),	RailUNID, temp_OverhangLTop, 3,OverhangLTop : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffl, rnulen+OverhangLTop,(rnu-1)*th+top_ry+dsl+OverhangLTop*tan(angle),	RailUNID, temp_OverhangLTop, 2,OverhangLTop : RailUNID=RailUNID+1

				IF leftRailType_m = 9 THEN

					RailUNID=2200

					! top wire/subboard distance from handrail
					HOTSPOT handRailWidthL/2-roffl,-OverhangLBottom,-OverhangLBottom*tan(angle)+hrl+dsl-HandrailHgtL,RailUNID,sbhl,1+128 : RailUNID=RailUNID+1
					HOTSPOT handRailWidthL/2-roffl,-OverhangLBottom,-OverhangLBottom*tan(angle)+hrl+dsl-HandrailHgtL-sbhl,RailUNID,sbhl,2 : RailUNID=RailUNID+1
					HOTSPOT handRailWidthL/2-roffl,-OverhangLBottom,-OverhangLBottom*tan(angle)+hrl+dsl-HandrailHgtL+1,RailUNID,sbhl,3 : RailUNID=RailUNID+1

					HOTSPOT handRailWidthL/2-roffl,rnulen+OverhangLTop,(rnu-1)*th+top_ry+dsl+hrl+OverhangLTop*tan(angle)-HandrailHgtL,RailUNID,sbhl,1+128 : RailUNID=RailUNID+1
					HOTSPOT handRailWidthL/2-roffl,rnulen+OverhangLTop,(rnu-1)*th+top_ry+dsl+hrl+OverhangLTop*tan(angle)-HandrailHgtL-sbhl,RailUNID,sbhl,2 : RailUNID=RailUNID+1
					HOTSPOT handRailWidthL/2-roffl,rnulen+OverhangLTop,(rnu-1)*th+top_ry+dsl+hrl+OverhangLTop*tan(angle)-HandrailHgtL+1,RailUNID,sbhl,3 : RailUNID=RailUNID+1
				ENDIF

			ELSE		! roml = Perpendicular...

				ROTx atn(th/td)

				RailUNID=2300

				!! Distance from Top of Tread
				HOTSPOT handRailWidthL/2-roffl,-OverhangLBottom/cos(angle),0,	RailUNID, dsl, 1+128 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffl,-OverhangLBottom/cos(angle),dsl,	RailUNID, dsl, 2 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffl,-OverhangLBottom/cos(angle),-1,	RailUNID, dsl, 3 : RailUNID=RailUNID+1

				HOTSPOT handRailWidthL/2-roffl,rnulen*th/(td*sin(atn(th/td)))+OverhangLTop/cos(angle),0,	RailUNID, dsl, 1+128 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffl,rnulen*th/(td*sin(atn(th/td)))+OverhangLTop/cos(angle),dsl,	RailUNID, dsl, 2 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffl,rnulen*th/(td*sin(atn(th/td)))+OverhangLTop/cos(angle),-1,	RailUNID, dsl, 3 : RailUNID=RailUNID+1

				!! Height of Rail
				HOTSPOT handRailWidthL/2-roffl,-OverhangLBottom/cos(angle),dsl,	RailUNID, hrl, 1+128 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffl,-OverhangLBottom/cos(angle),dsl+hrl,	RailUNID, hrl, 2 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffl,-OverhangLBottom/cos(angle),dsl-1,	RailUNID, hrl, 3 : RailUNID=RailUNID+1

				HOTSPOT handRailWidthL/2-roffl,rnulen*th/(td*sin(atn(th/td)))+OverhangLTop/cos(angle),dsl,	RailUNID, hrl, 1+128 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffl,rnulen*th/(td*sin(atn(th/td)))+OverhangLTop/cos(angle),dsl+hrl,	RailUNID, hrl, 2 : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffl,rnulen*th/(td*sin(atn(th/td)))+OverhangLTop/cos(angle),dsl-1,	RailUNID, hrl, 3 : RailUNID=RailUNID+1

				!!! Rail Overhang at Bottom
				HOTSPOT handRailWidthL/2-roffl, 0, dsl, RailUNID, temp_OverhangLBottom, 1+128,OverhangLBottom  : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffl, 1, dsl, RailUNID, temp_OverhangLBottom, 3,OverhangLBottom : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffl,-temp_OverhangLBottom, dsl, RailUNID, temp_OverhangLBottom, 2,OverhangLBottom : RailUNID=RailUNID+1

				!!! Rail Overhang at Top
				HOTSPOT handRailWidthL/2-roffl,rnulen*th/(td*sin(atn(th/td))),	dsl,	RailUNID, temp_OverhangLTop, 1+128,OverhangLTop  : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffl,rnulen*th/(td*sin(atn(th/td)))-1,	dsl,RailUNID, temp_OverhangLTop, 3,OverhangLTop : RailUNID=RailUNID+1
				HOTSPOT handRailWidthL/2-roffl,rnulen*th/(td*sin(atn(th/td)))+temp_OverhangLTop,dsl,RailUNID, temp_OverhangLTop, 2,OverhangLTop : RailUNID=RailUNID+1

				IF leftRailType_m = 9 THEN

					RailUNID=2400

					!!!TOP WIRE/SUBBOARD DISTANCE FROM HANDRAIL
					HOTSPOT handRailWidthL/2-roffl,-OverhangLBottom/cos(angle),dsl+hrl-HandrailHgtL/cos(angle),		RailUNID,sbhPerpL,1+128,sbhl : RailUNID=RailUNID+1
					HOTSPOT handRailWidthL/2-roffl,-OverhangLBottom/cos(angle),dsl+hrl-HandrailHgtL/cos(angle)-sbhl,	RailUNID,sbhPerpL,2,sbhl : RailUNID=RailUNID+1
					HOTSPOT handRailWidthL/2-roffl,-OverhangLBottom/cos(angle),dsl+hrl-HandrailHgtL/cos(angle)+1,		RailUNID,sbhPerpL,3,sbhl : RailUNID=RailUNID+1

					HOTSPOT handRailWidthL/2-roffl,rnulen*th/(td*sin(atn(th/td)))+OverhangLTop/cos(angle),dsl+hrl-HandrailHgtL/cos(angle),			RailUNID,sbhPerpL,1+128,sbhl : RailUNID=RailUNID+1
					HOTSPOT handRailWidthL/2-roffl,rnulen*th/(td*sin(atn(th/td)))+OverhangLTop/cos(angle),dsl+hrl-HandrailHgtL/cos(angle)-sbhl,		RailUNID,sbhPerpL,2,sbhl : RailUNID=RailUNID+1
					HOTSPOT handRailWidthL/2-roffl,rnulen*th/(td*sin(atn(th/td)))+OverhangLTop/cos(angle),dsl+hrl-HandrailHgtL/cos(angle)+1,			RailUNID,sbhPerpL,3,sbhl : RailUNID=RailUNID+1
				ENDIF

				del 1

			ENDIF
		DEL 1
	ENDIF

	del 1

ENDIF

! ------------------------------------------------------------------------------
! Right rail
! ------------------------------------------------------------------------------

IF rail_m = RAILPOS_RIGHT or rail_m = RAILPOS_BOTH THEN
	rprPostBase = (rightRailType_m = 7 or rightRailType_m = 8 or rightRailType_m = 9 or rightRailType_m = 11)

	ADDx flw+roffr-handRailWidthR/2
	ROTz 90
	ADD -OverhangRBottom + td/2 * bComplexRailRight, 0, -OverhangRBottom*tan(angle)+th

	IF romr_m <> RAILORIENT_VERTICAL THEN
		rnuln=RRailLength*th/(td*sin(atn(th/td)))
	ELSE
		rnuln=RRailLength
	ENDIF

	!!! *** Right Railing/Lower Part
	lraSimple=rnuln
	lraComplex=rnuln
	additionXComplex=0
	additionZComplex=0
	hrovL=hror
	hrovR=hror
	postNumber = npr
	side = SIDE_RIGHT
	rom_m = romr_m
	rmm_m = romr_m
	gosub "callRailsForStair"

	del 3

	ADD 0,0,th
	ADDy td/2 * bComplexRailRight

		RailUNID=1000

		! RAIL OFFSET
		HOTSPOT flw-handRailWidthR/2,			-OverhangRBottom, -OverhangRBottom*tan(angle), RailUNID, roffr, 1+128 : RailUNID=RailUNID+1
		HOTSPOT flw-handRailWidthR/2-1,		-OverhangRBottom, -OverhangRBottom*tan(angle), RailUNID, roffr, 3 : RailUNID=RailUNID+1
		HOTSPOT flw-handRailWidthR/2+roffr,	-OverhangRBottom, -OverhangRBottom*tan(angle), RailUNID, roffr, 2 : RailUNID=RailUNID+1

		HOTSPOT flw-handRailWidthR/2,			rnulen+OverhangRTop, (rnu-1)*th+OverhangRTop*tan(angle), RailUNID, roffr, 1+128 : RailUNID=RailUNID+1
		HOTSPOT flw-handRailWidthR/2-1,		rnulen+OverhangRTop, (rnu-1)*th+OverhangRTop*tan(angle), RailUNID, roffr, 3 : RailUNID=RailUNID+1
		HOTSPOT flw-handRailWidthR/2+roffr,	rnulen+OverhangRTop, (rnu-1)*th+OverhangRTop*tan(angle), RailUNID, roffr, 2 : RailUNID=RailUNID+1

		IF romr_m = RAILORIENT_VERTICAL THEN
			RailUNID=1100

			! Distance from Top of Tread
			HOTSPOT flw-handRailWidthR/2+roffr,-OverhangRBottom,	-OverhangRBottom*tan(angle),		RailUNID, dsr, 1+128 : RailUNID=RailUNID+1
			HOTSPOT flw-handRailWidthR/2+roffr,-OverhangRBottom,	-OverhangRBottom*tan(angle)-1,	RailUNID, dsr, 3 : RailUNID=RailUNID+1
			HOTSPOT flw-handRailWidthR/2+roffr,-OverhangRBottom,	-OverhangRBottom*tan(angle)+dsr,	RailUNID, dsr, 2 : RailUNID=RailUNID+1

			HOTSPOT flw-handRailWidthR/2+roffr,rnulen+OverhangRTop,	(rnu-1)*th+top_ry+OverhangRTop*tan(angle),		RailUNID, dsr, 1+128 : RailUNID=RailUNID+1
			HOTSPOT flw-handRailWidthR/2+roffr,rnulen+OverhangRTop,	(rnu-1)*th+top_ry-1+OverhangRTop*tan(angle),	RailUNID, dsr, 3 : RailUNID=RailUNID+1
			HOTSPOT flw-handRailWidthR/2+roffr,rnulen+OverhangRTop,	(rnu-1)*th+top_ry+dsr+OverhangRTop*tan(angle),	RailUNID, dsr, 2 : RailUNID=RailUNID+1

			! Height of Rail
			HOTSPOT flw-handRailWidthR/2+roffr,-OverhangRBottom,	dsr-OverhangRBottom*tan(angle),		RailUNID, hrr, 1+128 : RailUNID=RailUNID+1
			HOTSPOT flw-handRailWidthR/2+roffr,-OverhangRBottom,	dsr-1-OverhangRBottom*tan(angle),	RailUNID, hrr, 3 : RailUNID=RailUNID+1
			HOTSPOT flw-handRailWidthR/2+roffr,-OverhangRBottom,	dsr+hrr-OverhangRBottom*tan(angle),	RailUNID, hrr, 2 : RailUNID=RailUNID+1

			HOTSPOT flw-handRailWidthR/2+roffr,rnulen+OverhangRTop,	(rnu-1)*th+top_ry+dsr+OverhangRTop*tan(angle),		RailUNID, hrr, 1+128 : RailUNID=RailUNID+1
			HOTSPOT flw-handRailWidthR/2+roffr,rnulen+OverhangRTop,	(rnu-1)*th+top_ry+dsr-1+OverhangRTop*tan(angle),	RailUNID, hrr, 3 : RailUNID=RailUNID+1
			HOTSPOT flw-handRailWidthR/2+roffr,rnulen+OverhangRTop,	(rnu-1)*th+top_ry+dsr+hrr+OverhangRTop*tan(angle),	RailUNID, hrr, 2 : RailUNID=RailUNID+1

			! Rail Overhang at Bottom
			HOTSPOT flw-handRailWidthR/2+roffr,	0,	dsr,	RailUNID, temp_OverhangRBottom, 1+128,OverhangRBottom : RailUNID=RailUNID+1
			HOTSPOT flw-handRailWidthR/2+roffr,	1,	dsr+tan(angle),	RailUNID, temp_OverhangRBottom, 3,OverhangRBottom : RailUNID=RailUNID+1
			HOTSPOT flw-handRailWidthR/2+roffr,-OverhangRBottom,	dsr-OverhangRBottom*tan(angle),	RailUNID, temp_OverhangRBottom, 2,OverhangRBottom : RailUNID=RailUNID+1

			! Rail Overhang at Top
			HOTSPOT flw-handRailWidthR/2+roffr,rnulen,		(rnu-1)*th+top_ry+dsr,		RailUNID, temp_OverhangRTop, 1+128,OverhangRTop : RailUNID=RailUNID+1
			HOTSPOT flw-handRailWidthR/2+roffr,rnulen-1,		(rnu-1)*th+top_ry+dsr-tan(angle),	RailUNID, temp_OverhangRTop, 3,OverhangRTop : RailUNID=RailUNID+1
			HOTSPOT flw-handRailWidthR/2+roffr,rnulen+OverhangRTop,(rnu-1)*th+top_ry+dsr+OverhangRTop*tan(angle),	RailUNID, temp_OverhangRTop, 2,OverhangRTop : RailUNID=RailUNID+1

			IF rightRailType_m = 9 THEN
				RailUNID=1200

				! top wire/subboard distance from handrail
				HOTSPOT flw-handRailWidthR/2+roffr,-OverhangRBottom,-OverhangRBottom*tan(angle)+hrr+dsr-HandrailHgtR,RailUNID,sbhr,1+128 : RailUNID=RailUNID+1
				HOTSPOT flw-handRailWidthR/2+roffr,-OverhangRBottom,-OverhangRBottom*tan(angle)+hrr+dsr-HandrailHgtR-sbhr,RailUNID,sbhr,2 : RailUNID=RailUNID+1
				HOTSPOT flw-handRailWidthR/2+roffr,-OverhangRBottom,-OverhangRBottom*tan(angle)+hrr+dsr-HandrailHgtR+1,RailUNID,sbhr,3 : RailUNID=RailUNID+1

				HOTSPOT flw-handRailWidthR/2+roffr,rnulen+OverhangRTop,(rnu-1)*th+top_ry+dsr+hrr+OverhangRTop*tan(angle)-HandrailHgtR,RailUNID,sbhr,1+128 : RailUNID=RailUNID+1
				HOTSPOT flw-handRailWidthR/2+roffr,rnulen+OverhangRTop,(rnu-1)*th+top_ry+dsr+hrr+OverhangRTop*tan(angle)-HandrailHgtR-sbhr,RailUNID,sbhr,2 : RailUNID=RailUNID+1
				HOTSPOT flw-handRailWidthR/2+roffr,rnulen+OverhangRTop,(rnu-1)*th+top_ry+dsr+hrr+OverhangRTop*tan(angle)-HandrailHgtR+1,RailUNID,sbhr,3 : RailUNID=RailUNID+1
			ENDIF

		ELSE 	! romr=`Perpendicular...`

			ROTx atn(th/td)

			RailUNID=1300

			! Distance from Top of Tread
			HOTSPOT flw-handRailWidthR/2+roffr,-OverhangRBottom/cos(angle),0,	RailUNID, dsr, 1+128 : RailUNID=RailUNID+1
			HOTSPOT flw-handRailWidthR/2+roffr,-OverhangRBottom/cos(angle),dsr,	RailUNID, dsr, 2 : RailUNID=RailUNID+1
			HOTSPOT flw-handRailWidthR/2+roffr,-OverhangRBottom/cos(angle),-1,	RailUNID, dsr, 3 : RailUNID=RailUNID+1

			HOTSPOT flw-handRailWidthR/2+roffr,rnulen*th/(td*sin(atn(th/td)))+OverhangRTop/cos(angle),0,	RailUNID, dsr, 1+128 : RailUNID=RailUNID+1
			HOTSPOT flw-handRailWidthR/2+roffr,rnulen*th/(td*sin(atn(th/td)))+OverhangRTop/cos(angle),dsr,	RailUNID, dsr, 2 : RailUNID=RailUNID+1
			HOTSPOT flw-handRailWidthR/2+roffr,rnulen*th/(td*sin(atn(th/td)))+OverhangRTop/cos(angle),-1,	RailUNID, dsr, 3 : RailUNID=RailUNID+1

			! Height of Rail
			HOTSPOT flw-handRailWidthR/2+roffr,-OverhangRBottom/cos(angle),dsr,	RailUNID, hrr, 1+128 : RailUNID=RailUNID+1
			HOTSPOT flw-handRailWidthR/2+roffr,-OverhangRBottom/cos(angle),dsr+hrr,	RailUNID, hrr, 2 : RailUNID=RailUNID+1
			HOTSPOT flw-handRailWidthR/2+roffr,-OverhangRBottom/cos(angle),dsr-1,	RailUNID, hrr, 3 : RailUNID=RailUNID+1

			HOTSPOT flw-handRailWidthR/2+roffr,rnulen*th/(td*sin(atn(th/td)))+OverhangRTop/cos(angle),dsr,	RailUNID, hrr, 1+128 : RailUNID=RailUNID+1
			HOTSPOT flw-handRailWidthR/2+roffr,rnulen*th/(td*sin(atn(th/td)))+OverhangRTop/cos(angle),dsr+hrr,	RailUNID, hrr, 2 : RailUNID=RailUNID+1
			HOTSPOT flw-handRailWidthR/2+roffr,rnulen*th/(td*sin(atn(th/td)))+OverhangRTop/cos(angle),dsr-1,	RailUNID, hrr, 3 : RailUNID=RailUNID+1

			! Rail Overhang at Bottom
			HOTSPOT flw-handRailWidthR/2+roffr, 0, dsr, RailUNID, temp_OverhangRBottom, 1+128,OverhangRBottom  : RailUNID=RailUNID+1
			HOTSPOT flw-handRailWidthR/2+roffr, 1, dsr, RailUNID, temp_OverhangRBottom, 3,OverhangRBottom : RailUNID=RailUNID+1
			HOTSPOT flw-handRailWidthR/2+roffr,-temp_OverhangRBottom, dsr, RailUNID, temp_OverhangRBottom, 2,OverhangRBottom : RailUNID=RailUNID+1

			! Rail Overhang at Top
			HOTSPOT flw-handRailWidthR/2+roffr,rnulen*th/(td*sin(atn(th/td))),	dsr,	RailUNID, temp_OverhangRTop, 1+128,OverhangRTop  : RailUNID=RailUNID+1
			HOTSPOT flw-handRailWidthR/2+roffr,rnulen*th/(td*sin(atn(th/td)))-1,	dsr,RailUNID, temp_OverhangRTop, 3,OverhangLTop : RailUNID=RailUNID+1
			HOTSPOT flw-handRailWidthR/2+roffr,rnulen*th/(td*sin(atn(th/td)))+temp_OverhangRTop,dsr,RailUNID, temp_OverhangRTop, 2,OverhangRTop : RailUNID=RailUNID+1

			IF rightRailType_m = 9 THEN
				RailUNID=1400

				! top wire/subboard distance from handrail
				HOTSPOT flw-handRailWidthR/2+roffr,-OverhangRBottom/cos(angle),hrr+dsr-HandrailHgtR/cos(angle),		RailUNID,sbhPerpR,1+128,sbhr : RailUNID=RailUNID+1
				HOTSPOT flw-handRailWidthR/2+roffr,-OverhangRBottom/cos(angle),hrr+dsr-HandrailHgtR/cos(angle)-sbhr,	RailUNID,sbhPerpR,2,sbhr : RailUNID=RailUNID+1
				HOTSPOT flw-handRailWidthR/2+roffr,-OverhangRBottom/cos(angle),hrr+dsr-HandrailHgtR/cos(angle)+1,		RailUNID,sbhPerpR,3,sbhr : RailUNID=RailUNID+1

				HOTSPOT flw-handRailWidthR/2+roffr,rnulen*th/(td*sin(atn(th/td)))+OverhangRTop/cos(angle),hrr+dsr-HandrailHgtR/cos(angle),			RailUNID,sbhPerpR,1+128,sbhr : RailUNID=RailUNID+1
				HOTSPOT flw-handRailWidthR/2+roffr,rnulen*th/(td*sin(atn(th/td)))+OverhangRTop/cos(angle),hrr+dsr-HandrailHgtR/cos(angle)-sbhr,		RailUNID,sbhPerpR,2,sbhr : RailUNID=RailUNID+1
				HOTSPOT flw-handRailWidthR/2+roffr,rnulen*th/(td*sin(atn(th/td)))+OverhangRTop/cos(angle),hrr+dsr-HandrailHgtR/cos(angle)+1,			RailUNID,sbhPerpR,3,sbhr : RailUNID=RailUNID+1
			ENDIF
			DEL 1

		ENDIF
	DEL 2

ENDIF

END

! ==============================================================================
"callRailsForStair":
! ------------------------------------------------------------------------------
!	lraSimple
!	lraComplex
!	additionXComplex
!	additionZComplex
!	hrovL: rail overhang start
!	hrovR: rail overhang end
!	postNumber:   number of posts
!	side: SIDE_LEFT or SIDE_RIGHT
! ==============================================================================
	ani = angle
	additionXComplex = additionXComplex
	additionZComplex = additionZComplex
	gosub "callRails"
return

! ==============================================================================
"callRails":
! ------------------------------------------------------------------------------
!	ani
!	additionXComplex
!	additionZComplex
!	dsComplex
!  ------------------
!	side: SIDE_LEFT or SIDE_RIGHT
!	lraSimple
!	lraComplex
!	hrovL: rail overhang start
!	hrovR: rail overhang end
!	postNumber:   number of posts
! ==============================================================================
	if side = SIDE_LEFT then
		railBarDepth	= bwl
		railBarDiam		= bdl
		railHeight		= hrl
		railBarThk		= fthl
		railBarType		= btypl_m
		railFrameThk	= fthl
		railDist		= dsl
		railType_m		= leftRailType_m
		railPostDiam	= pdl
		railPostWidth	= pwl
		railPostThk		= pthl
		railPostType	= ptl_m
		barNumber		= nbl
		iBalusterStyle	= btl_m
		railFramesWSide	= fswl
		railFramesWTop	= ftwl
		railFramesWBot	= fbwl
		railBarHeight	= bhl
		railBarFillThk	= bthl
		balusterDist	= abdistl
		railFrameMat	= fmatl
		railBaluFillMat	= bmatl
		railPostMat		= pmatl
		balusterNumber	= nbtl
		railFillDist	= fdfl
!!!		railPostBaseType= gs_PostBaseTypeL_m
		railDistFromHr	= sbhl
!!!		railPostBaseOv	= gs_PostBaseOverhangL
		handRailType	= hrtl_m
		handRailWidth	= hrwl
		handRailDiam	= hrdl
		handRailHeight	= hrhl
	else
		railBarDepth	= bwr
		railBarDiam		= bdr
		railHeight		= hrr
		railBarThk		= fthr
		railBarType		= btypr_m
		railFrameThk	= fthr
		railDist		= dsr
		railType_m		= rightRailType_m
		railPostDiam	= pdr
		railPostWidth	= pwr
		railPostThk		= pthr
		railPostType	= ptr_m
		barNumber		= nbr
		iBalusterStyle	= btr_m
		railFramesWSide	= fswr
		railFramesWTop	= ftwr
		railFramesWBot	= fbwr
		railBarHeight	= bhr
		railBarFillThk	= bthr
		balusterDist	= abdistr
		railFrameMat	= fmatr
		railBaluFillMat	= bmatr
		railPostMat		= pmatr
		balusterNumber	= nbtr
		railFillDist	= fdfr
!!!		railPostBaseType= gs_PostBaseTypeR_m
		railDistFromHr	= sbhr
!!!		railPostBaseOv	= gs_PostBaseOverhangR
		handRailType	= hrtr_m
		handRailWidth	= hrwr
		handRailDiam	= hrdr
		handRailHeight	= hrhr
	endif

	call "stairRails_m" parameters	railType_m				= railType_m,
									iStairType				= 2,
									bEnableWired02Rail		= 1,
									bEnableNonVerticalRail	= 1,
									additionXComplex		= additionXComplex,
									additionZComplex		= additionZComplex,
									ptyp_m					= 1,
									ani						= ani,
									ab						= 0,
									rb						= 0,
									rom_m					= rom_m,
									rmm_m					= rmm_m,
									lraSimple				= lraSimple,
									lraComplex				= lraComplex,
									railHeight				= railHeight,
									railDist				= railDist,
									gs_detlevel_3D_m		= gs_detlevel_3D_m,
									gs_cont_pen				= gs_cont_pen,
									res						= res,
									rescs					= rescs,
									gs_shadow				= gs_shadow,
									railFrameThk			= railFrameThk,
									railFramesWSide			= railFramesWSide,
									railFramesWTop			= railFramesWTop,
									railFramesWBot			= railFramesWBot,
									railBarType				= railBarType,
									railBarDepth			= railBarDepth,
									railBarFillThk			= railBarFillThk,
									railBarDiam				= railBarDiam,
									balusterDist			= balusterDist,
									railFrameMat			= railFrameMat,
									railBaluFillMat			= railBaluFillMat,
									barNumber				= barNumber,
									railBarHeight			= railBarHeight,
									railFillDist			= railFillDist,
									handRailType			= handRailType,
									handRailDiam			= handRailDiam,
									handRailWidth			= handRailWidth,
									handRailHeight			= handRailHeight,
									hrovL					= hrovL,
									hrovR					= hrovR,
									iBalusterStyle			= iBalusterStyle,
									railPostDiam			= railPostDiam,
									railPostWidth			= railPostWidth,
									railPostThk				= railPostThk,
									railPostType			= railPostType,
									postNumber				= postNumber,
									railPostMat				= railPostMat,
									iParamInputType			= 1,
									balusterNumber			= balusterNumber,
!!!									railPostBaseType		= railPostBaseType,
!!!									railPostBaseOv			= railPostBaseOv,
									railDistFromHr			= railDistFromHr
return

