
unID = 1
if not (gs_shadow) then shadow off
if gs_detlevel_3d_m = 1 then
	resol 8
else
	resol gs_resol
endif
pen gs_cont_pen

if bSameWidth then
	AC_width = AC_frameWidthRight + AC_frameWidthLeft
endif
radCap = (AC_height * AC_height+ AC_width * AC_width/ 4) / AC_width

sect_fill gs_sect_fill, gs_sect_bg_pen, gs_sect_fill_pen, gs_sect_cont_pen

if AC_globalZDir[1][3] < 0 then mulz -1

! --- length hotspot editing -------------------------------------------

if AC_accessoryFlipped then
	addy AC_frameWidthBack
else
	addy AC_frameWidthFront
endif

hotspot -a/2, 					0, 0, unID, AC_deltaABeg, 1 + 128	: unId = unID + 1
hotspot -a/2-1, 				0, 0, unID, AC_deltaABeg, 3			: unId = unID + 1
hotspot -a/2 + AC_deltaABeg,	0, 0, unID, AC_deltaABeg, 2			: unId = unID + 1

hotspot a/2,					0, 0, unID, AC_deltaAEnd, 1 + 128	: unId = unID + 1
hotspot a/2-1,					0, 0, unID, AC_deltaAEnd, 3			: unId = unID + 1
hotspot a/2 + AC_deltaAEnd, 	0, 0, unID, AC_deltaAEnd, 2			: unId = unID + 1

hotspot (AC_deltaAEnd+AC_deltaABeg)/2, 0, 			0, unID, AC_height, 1 + 128		: unId = unID + 1
hotspot (AC_deltaAEnd+AC_deltaABeg)/2, -1, 			0, unID, AC_height, 3			: unId = unID + 1
hotspot (AC_deltaAEnd+AC_deltaABeg)/2, AC_height,	0, unID, AC_height, 2			: unId = unID + 1

del 1

! --- defining start and end angles -------------------------------------
if AC_validCellDir1 then
	if abs (AC_leftCellNormalDir [1][2]) < eps then
		startAngle  =  90
	else
		startAngle  =   -atn (AC_leftCellNormalDir [1][1]  / AC_leftCellNormalDir [1][2])
	endif
else
	startAngle = 90
endif

if AC_validCellDir2 then
	if abs (AC_rightCellNormalDir [1][2]) < eps then
		endAngle =  90
	else
		endAngle =   -atn (AC_rightCellNormalDir [1][1] / AC_rightCellNormalDir [1][2])
	endif
else
	endAngle = 90
endif

! --- overhangs for cutting ---

if AC_accessoryFlipped then
	cwFrameWidth = AC_frameWidthBack
else
	cwFrameWidth = AC_frameWidthFront
endif

cutDiffBeg = 0
if abs (startAngle) > EPS then
	cutDiffBeg = max (0, abs ((AC_height + cwFrameWidth) * tan (startAngle)))

	roty 90
	addz -a/2 + AC_deltaABeg - cwFrameWidth * tan (startAngle)

	addy cwFrameWidth

	rotx -startAngle
	cutplane 1, 1,0,1
	del 4
endif

cutDiffEnd = 0
if abs (endAngle) > EPS then
	cutDiffEnd = max (0, abs ((AC_height+ cwFrameWidth) * tan (endAngle)))

	roty 90

	addz a/2 + AC_deltaAEnd - cwFrameWidth * tan (endAngle)

	addy cwFrameWidth

	rotx -endAngle
	cutplane
	del 4
endif


roty 90
addz -a/2 + AC_deltaABeg - cutDiffBeg

addy cwFrameWidth

status = 15 - gs_casing_beg * 1 - gs_casing_end * 4

material gs_material_cap
prism_ 6, a - AC_deltaABeg + AC_deltaAEnd + cutDiffBeg + cutDiffEnd,
	-AC_width / 2, 				0,			status,
	 radCap - AC_width / 2, 	0,			900 + status,
	 0,							AC_height,	3000 + status,
	-radCap + AC_width / 2,		0,			900 + status,
	 AC_width / 2,				0,			3000 + status,
	-AC_width / 2,				0,			-1


if AC_globalZDir[1][3] < 0 then del 1

del 2

if abs (startAngle) > eps then cutend
if abs (endAngle) > eps then cutend

end
