
call "FM_types" parameters all

values "gs_updirection" 0, 90, 180, 270

values "gs_detlevel_2d" `по ПМВ`, `Зависит от Масштаба`, `1:50`, `1:100`, `1:200`, `Откл.`
values "gs_detlevel_2d_m" 1, 0, 50, 100, 200, -1

if GLOB_MODPAR_NAME = "gs_detlevel_2d" then
	gs_detlevel_2d_m = 1
	if gs_detlevel_2d = `Откл.` 				then gs_detlevel_2d_m = 0
	if gs_detlevel_2d = `Зависит от Масштаба` 	then gs_detlevel_2d_m = -1
	if gs_detlevel_2d = `1:50` 				then gs_detlevel_2d_m = 50
	if gs_detlevel_2d = `1:100` 			then gs_detlevel_2d_m = 100
	if gs_detlevel_2d = `1:200` 			then gs_detlevel_2d_m = 200
	parameters gs_detlevel_2d_m = gs_detlevel_2d_m
else
	gs_detlevel_2d = `по ПМВ`
	if gs_detlevel_2d_m = 0 then gs_detlevel_2d = `Откл.`
	if gs_detlevel_2d_m = -1  then gs_detlevel_2d = `Зависит от Масштаба`
	if gs_detlevel_2d_m = 50  then gs_detlevel_2d = `1:50`
	if gs_detlevel_2d_m = 100 then gs_detlevel_2d = `1:100`
	if gs_detlevel_2d_m = 200 then gs_detlevel_2d = `1:200`
	parameters gs_detlevel_2d = gs_detlevel_2d
endif

values "opAngle_horizontal" range [0,90]
values "opAngle_vertical" range [0,90]

if GLOB_MODPAR_NAME = "opAngle_horizontal" then
	opAngle_vertical = 0
	parameters opAngle_vertical = opAngle_vertical
endif
if GLOB_MODPAR_NAME = "opAngle_vertical" then
	opAngle_horizontal= 0
	parameters opAngle_horizontal= opAngle_horizontal
endif

values "nHorPanel_1" range [1, )
values "nVertPanel_1" range [1, )

values "gs_opening_dir" `Внутрь`, `Снаружи`
values "gs_opening_dir_m" 1, 2

if GLOB_MODPAR_NAME = "gs_opening_dir" then
	if gs_opening_dir = `Внутрь`  then gs_opening_dir_m = OPDIR_IN
	if gs_opening_dir = `Снаружи` then gs_opening_dir_m = OPDIR_OUT
	parameters gs_opening_dir_m = gs_opening_dir_m
else
	if gs_opening_dir_m = OPDIR_IN  then gs_opening_dir = `Внутрь`
	if gs_opening_dir_m = OPDIR_OUT then gs_opening_dir = `Снаружи`
	parameters gs_opening_dir = gs_opening_dir
endif

values "gs_optype" `Распашная`, `Распашная Зеркальная`, `Нижнеподвесная`, `Верхнеподвесная`, `Наклонно-Поворотная `, `Наклонно-Поворотная Зеркальная`
values "gs_optype_m" 2, 3, 4, 5, 6, 7

if GLOB_MODPAR_NAME = "gs_optype" then
	if gs_optype = `Распашная` 			then gs_optype_m = OPTYPE_SIDEHUNG
	if gs_optype = `Распашная Зеркальная` then gs_optype_m = OPTYPE_SIDEHUNGMIRRORED
	if gs_optype = `Нижнеподвесная` 		then gs_optype_m = OPTYPE_BOTTOMHUNG
	if gs_optype = `Верхнеподвесная` 			then gs_optype_m = OPTYPE_TOPHUNG
	if gs_optype = `Наклонно-Поворотная ` 			then gs_optype_m = OPTYPE_TILTTURN
	if gs_optype = `Наклонно-Поворотная Зеркальная` then gs_optype_m = OPTYPE_TILTTURNMIRRORED
	parameters gs_optype_m = gs_optype_m
else
	if gs_optype_m = OPTYPE_SIDEHUNG 			then gs_optype = `Распашная`
	if gs_optype_m = OPTYPE_SIDEHUNGMIRRORED 	then gs_optype = `Распашная Зеркальная`
	if gs_optype_m = OPTYPE_BOTTOMHUNG 			then gs_optype = `Нижнеподвесная`
	if gs_optype_m = OPTYPE_TOPHUNG 			then gs_optype = `Верхнеподвесная`
	if gs_optype_m = OPTYPE_TILTTURN 			then gs_optype = `Наклонно-Поворотная `
	if gs_optype_m = OPTYPE_TILTTURNMIRRORED 	then gs_optype = `Наклонно-Поворотная Зеркальная`
	parameters gs_optype = gs_optype
endif

values "frameType" `Суб-рама`,`Адаптер`
values "iFrameType" 1, 2

if GLOB_MODPAR_NAME = "frameType" then
	if frameType = `Суб-рама` then iFrameType = 1
	if frameType = `Адаптер` then iFrameType = 2
	parameters iFrameType = iFrameType
else
	if iFrameType = 1 then frameType = `Суб-рама`
	if iFrameType = 2 then frameType = `Адаптер`
	parameters frameType = frameType
endif

values "gs_SashText_typ" `Угловое Соединение`, `Соединение Встык`
values "gs_SashText_typ_m" 1, 2

if GLOB_MODPAR_NAME = "gs_SashText_typ" then
	if gs_SashText_typ = `Угловое Соединение` then gs_SashText_typ_m = 1
	if gs_SashText_typ = `Соединение Встык` then gs_SashText_typ_m = 2
	parameters gs_SashText_typ_m = gs_SashText_typ_m
else
	if gs_SashText_typ_m = 1 then gs_SashText_typ = `Угловое Соединение`
	if gs_SashText_typ_m = 2 then gs_SashText_typ = `Соединение Встык`
	parameters gs_SashText_typ = gs_SashText_typ
endif

values "grill" `Без Раскладки`,`Г/В-Раскладка`,`Редактируемая Раскладка` ,`Специальная Створка`
values "grill_m" 0, 1, 2, 99

if GLOB_MODPAR_NAME = "grill" then
	if grill = `Без Раскладки` 	then grill_m = 0
	if grill = `Г/В-Раскладка` 		then grill_m = 1
	if grill = `Редактируемая Раскладка` 	then grill_m = 2
	if grill = `Специальная Створка` 	then grill_m = 99
	parameters grill_m = grill_m
else
	if grill_m = 0 then grill = `Без Раскладки`
	if grill_m = 1 then grill = `Г/В-Раскладка`
	if grill_m = 2 then grill = `Редактируемая Раскладка`
	if grill_m = 99 then grill = `Специальная Створка`
	parameters grill = grill
endif

values "grillPosition" `Снаружи`, `Внутрь`, `Посередине`
values "grillPosition_m" 1, 2, 3

if GLOB_MODPAR_NAME = "grillPosition" then
	if grillPosition = `Снаружи` 		then grillPosition_m = 1
	if grillPosition = `Внутрь` 		then grillPosition_m = 2
	if grillPosition = `Посередине` 	then grillPosition_m = 3
	parameters grillPosition_m = grillPosition_m
else
	if grillPosition_m = 1 then grillPosition = `Снаружи`
	if grillPosition_m = 2 then grillPosition = `Внутрь`
	if grillPosition_m = 3 then grillPosition = `Посередине`
	parameters grillPosition = grillPosition
endif

dim gs_pt[]
if grill_m = 99 then !custom Sash
	call "Window_Panel_Collection" parameters returned_parameters gs_pt
	values "gs_cust_panel"  gs_pt
endif

changeGeometry = 0
if tempCornerNum > 0 then
	if tempCornerNum <> nCorners_in then
		changeGeometry = 1
	else
		i = 1
		do
			if abs (AC_clampFreeRegionCoords[i][1] - tempClampFreeRegionCoords[i][1]) > eps then changeGeometry = 1
			if abs (AC_clampFreeRegionCoords[i][2] - tempClampFreeRegionCoords[i][2]) > eps then changeGeometry = 1
			i = i + 1
		while (i <= vardim1 (AC_clampFreeRegionCoords)) and changeGeometry = 0
	endif
endif

if changeGeometry or GLOB_MODPAR_NAME = "gs_updirection" or GLOB_MODPAR_NAME = "nHorPanel_1" or GLOB_MODPAR_NAME = "nVertPanel_1" \
		or (GLOB_MODPAR_NAME = "grill" and grill = `Редактируемая Раскладка`) then
	for i=1 to nVertPanel_1-1
		parameters vergrid_1[i][1] = i * (sash_X - 2*sashWidth + grillWidth_hor_1) / (nVertPanel_1)
		parameters vergrid_1[i][2] = sashWidth
		parameters vergrid_1[i][3] = sash_Y - sashWidth
	next i
	for i=1 to nHorPanel_1-1
		parameters horgrid_1[i][1] = i * (sash_Y - 2*sashWidth + grillWidth_vert_1) / (nHorPanel_1)
		parameters horgrid_1[i][2] = sashWidth
		parameters horgrid_1[i][3] = sash_X - sashWidth
	next i
endif

! --- hiding parameters ---

if iFrameType = 1 then
	hideparameter "adapterWidth", "adapterThk", "matAdapter"
	lock "adapterWidth", "adapterThk", "matAdapter"
endif
if grill_m <> 1 & grill_m <> 2 then
	hideparameter "grillThk", "grillWidth_hor_1", "grillWidth_vert_1", \
			 "grillPosition", "grillPosition_m", "matGrill", "nHorPanel_1", "nVertPanel_1"
	lock "grillThk", "grillWidth_hor_1", "grillWidth_vert_1", \
			 "grillPosition", "grillPosition_m", "matGrill", "nHorPanel_1", "nVertPanel_1"
endif
if grill_m <> 99 then hideparameter "gs_cust_panel"
if grill_m = 99 then
	hideparameter "sashThk", "sashWidth", "glassThk", "offsetGlass"
	lock "sashThk", "sashWidth", "glassThk", "offsetGlass"
endif

if gs_optype_m = OPTYPE_SIDEHUNG or gs_optype_m = OPTYPE_SIDEHUNGMIRRORED then
	hideparameter "opAngle_vertical"
	lock "opAngle_vertical"
endif
if gs_optype_m = OPTYPE_BOTTOMHUNG or gs_optype_m = OPTYPE_TOPHUNG then
	hideparameter "opAngle_horizontal"
	lock "opAngle_horizontal"
endif

if gs_opening_dir_m = OPDIR_IN then
	temp_frame_in_pos = AC_ClampWidth / 2 + offsetGlass + offsetPanel - recessThk
else
	temp_frame_in_pos = AC_ClampWidth / 2 + offsetGlass + offsetPanel - sashThk - (frameThk - recessThk)
endif
temp_frame_out_pos = temp_frame_in_pos + frameThk

adapter_outside = max (AC_ClampWidth / 2, temp_frame_out_pos)
adapter_inside = min (-AC_ClampWidth / 2, temp_frame_in_pos)
values "adapterThk" range [adapter_outside - adapter_inside,)


call "ui_cw_panel" parameters all iPanelType = PANEL_WINDOW2

! --- Parameters for listing ---------------------------------------------------

if gs_opening_dir_m = OPDIR_IN then
	parameters ac_openingDir = 1
	if gs_optype_m = OPTYPE_SIDEHUNG or gs_optype_m = OPTYPE_TILTTURN then parameters ac_openingSide = `П`
	if gs_optype_m = OPTYPE_SIDEHUNGMIRRORED or gs_optype_m = OPTYPE_TILTTURNMIRRORED then parameters ac_openingSide = `Л`
else
	parameters ac_openingDir = 2
	if gs_optype_m = OPTYPE_SIDEHUNG or gs_optype_m = OPTYPE_TILTTURN then parameters ac_openingSide = `Л`
	if gs_optype_m = OPTYPE_SIDEHUNGMIRRORED or gs_optype_m = OPTYPE_TILTTURNMIRRORED then parameters ac_openingSide = `П`
endif

parameters ac_thickness = sashThk

parameters ac_width = rightSide_X - leftSide_X
parameters ac_nominalWidth = ac_width

parameters ac_height = upperSide_Y - downSide_Y
parameters ac_nominalHeight = ac_height

parameters tempClampFreeRegionCoords = AC_clampFreeRegionCoords
parameters tempCornerNum = nCorners_in


!**************** Swedish list parameter control **********************
if gs_SWE_listParams_contr > 0 then
	call "SWE_ListParameters_control" parameters gs_SWE_listParams_contr = gs_SWE_listParams_contr,
			swe_list_f1				= swe_list_f1
endif



! --- Forced values ---------------------------------------------------

parameters ac_originIsFrameCenter = 0
parameters ac_aSizeIsWithClamp = 1


! =============================================================================
! Window Handle
! =============================================================================
if bEnableWindowHandle then
	call "DoorHandle" parameters	gs_window_handle			= gs_window_handle,
									gs_handle_type_win			= gs_handle_type_win,
									gs_handle_type_win_m		= gs_handle_type_win_m,
									gs_cust_handle_win			= gs_cust_handle_win,
									gs_handle_win_mat			= gs_handle_win_mat,
									gs_handle_win_pos			= gs_handle_win_pos,
									iHandleWinCategoryEnable	= 1,
									bWindow						= 1
else
	gs_window_handle = 0
	parameters gs_window_handle = gs_window_handle

	hideparameter "gs_window_handle"
	lock "gs_window_handle"
endif

