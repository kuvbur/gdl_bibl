
nCorners = vardim1 (AC_PanelCoords)
nCorners_in = vardim1 (AC_clampFreeRegionCoords)

!-----------------------------------------------------------------------
!-----Calculate the new geometry----------------------------------------

! --- Set the Auto Param ---------------------------------------------------

temppw = panelThk-AC_ClampWidth
if sSpecEdgeSetting_m = 1 or sSpecEdgeSetting_m = 2 then
	lOffset1 = abs(((AC_ClampWidth/2)+temppw)*TAN(aMitterAngle1/2))
endif

if sSpecEdgeSetting_m = 2 then
	lOffset2 = abs(((AC_ClampWidth/2)+temppw)*TAN(aMitterAngle2/2))
endif

if sSpecEdgeSetting_m = 3 or sSpecEdgeSetting_m = 4 then
	if ABS(aMitterAngle1 - 90) < EPS then
		if sButtedTyp1_m = 1 then
			lOffset1 = AC_ClampWidth/2
		endif
		if sButtedTyp1_m = 2 then
			lOffset1 = -AC_ClampWidth/2 - temppw
		endif
	else
		if sButtedTyp1_m = 1 then
			lOffset1 = AC_ClampWidth/2 + temppw
		endif
		if sButtedTyp1_m = 2 then
			lOffset1 = -AC_ClampWidth/2
		endif
	endif
endif

if sSpecEdgeSetting_m = 4 then
	if ABS(aMitterAngle2 - 90) < EPS then
		if sButtedTyp2_m = 1 then
			lOffset2 = AC_ClampWidth/2
		endif
		if sButtedTyp2_m = 2 then
			lOffset2 = -AC_ClampWidth/2 - temppw
		endif
	else
		if sButtedTyp2_m = 1 then
			lOffset2 = AC_ClampWidth/2 + temppw
		endif
		if sButtedTyp2_m = 2 then
			lOffset2 = -AC_ClampWidth/2
		endif
	endif
endif

nCorners = vardim1 (AC_PanelCoords)

! --- Set the Corner Angles ---------------------------------------------------
for i = 1 to nCorners
	if AC_PanelCoords[i][1] > centerX and ABS(AC_PanelCoords[i][2]-centerY) < eps then !0
		aCronerAngles[i] = 0
	endif

	if ABS(AC_PanelCoords[i][1]-centerX) < eps and AC_PanelCoords[i][2] > centerY then !1270
		aCronerAngles[i] = 90
	endif

	if AC_PanelCoords[i][1] < centerX and ABS(AC_PanelCoords[i][2]-centerY) < eps then !180
		aCronerAngles[i] = 180
	endif

	if ABS(AC_PanelCoords[i][1]-centerX) < eps and AC_PanelCoords[i][2] < centerY then !270
		aCronerAngles[i] = 270
	endif

	if AC_PanelCoords[i][1] > centerX and AC_PanelCoords[i][2] > centerY then !0-90
		aCronerAngles[i] = ATN((AC_PanelCoords[i][2]-centerY)/(AC_PanelCoords[i][1]-centerX))
	endif

	if AC_PanelCoords[i][1] < centerX and AC_PanelCoords[i][2] > centerY then !90-180
		aCronerAngles[i] = 90+ATN((centerX-AC_PanelCoords[i][1])/(AC_PanelCoords[i][2]-centerY))
	endif

	if AC_PanelCoords[i][1] < centerX and AC_PanelCoords[i][2] < centerY then !180-270
		aCronerAngles[i] = 180+ATN((centerY-AC_PanelCoords[i][2])/(centerX-AC_PanelCoords[i][1]))
	endif

	if AC_PanelCoords[i][1] > centerX and AC_PanelCoords[i][2] < centerY then !270-360
		aCronerAngles[i] = 270+ATN((AC_PanelCoords[i][1]-centerX)/(centerY-AC_PanelCoords[i][2]))
	endif
next i

!----- Ordering the Corners-------------------------------------------------
lOrderedPanelCoords = AC_PanelCoords
lOrderedCFRegCoords = AC_clampFreeRegionCoords

for i = 1 to nCorners-1
	for j = 1 to nCorners-2
		if aCronerAngles[j] > aCronerAngles[j+1] then
			TEMP = aCronerAngles[j]
			TMPX = lOrderedPanelCoords[j][1]
			TMPY = lOrderedPanelCoords[j][2]
			TMPA = lOrderedCFRegCoords[j][1]
			TMPB = lOrderedCFRegCoords[j][2]

			aCronerAngles[j] = aCronerAngles[j+1]
			lOrderedPanelCoords[j][1] = lOrderedPanelCoords[j+1][1]
			lOrderedPanelCoords[j][2] = lOrderedPanelCoords[j+1][2]
			lOrderedCFRegCoords[j][1] = lOrderedCFRegCoords[j+1][1]
			lOrderedCFRegCoords[j][2] = lOrderedCFRegCoords[j+1][2]

			aCronerAngles[j+1] = TEMP
			lOrderedPanelCoords[j+1][1] = TMPX
			lOrderedPanelCoords[j+1][2] = TMPY
			lOrderedCFRegCoords[j+1][1] = TMPA
			lOrderedCFRegCoords[j+1][2] = TMPB
		endif
	next j
next i

aCronerAngles[nCorners] = aCronerAngles[1]
lOrderedPanelCoords[nCorners][1] = lOrderedPanelCoords[1][1]
lOrderedPanelCoords[nCorners][2] = lOrderedPanelCoords[1][2]
lOrderedCFRegCoords[nCorners][1] = lOrderedCFRegCoords[1][1]
lOrderedCFRegCoords[nCorners][2] = lOrderedCFRegCoords[1][2]

!----- Set the Working Corners-------------------------------------------------
if sSpecEdgeSetting_m > 0 then
	for i = 1 to nCorners-1
		if aSpecialEdge1 > aCronerAngles[i] and aSpecialEdge1 < aCronerAngles[i+1] then
			iWorkCorners1[1] = i
			iWorkCorners1[2] = i+1
		endif
	next i

	if (aSpecialEdge1 <= 360 and aSpecialEdge1 > aCronerAngles[nCorners-1]) or (aSpecialEdge1 < aCronerAngles[1] and aSpecialEdge1 >= 0) then
		iWorkCorners1[1] = nCorners-1
		iWorkCorners1[2] = 1
	endif
endif

if sSpecEdgeSetting_m = 2 or sSpecEdgeSetting_m = 4 then
	for i = 1 to nCorners-1
		if aSpecialEdge2 > aCronerAngles[i] and aSpecialEdge2 < aCronerAngles[i+1] then
			iWorkCorners2[1] = i
			iWorkCorners2[2] = i+1
		endif
	next i

	if (aSpecialEdge2 <= 360 and aSpecialEdge2 > aCronerAngles[nCorners-1]) or (aSpecialEdge2 < aCronerAngles[1] and aSpecialEdge2 >= 0) then
		iWorkCorners2[1] = nCorners-1
		iWorkCorners2[2] = 1
	endif
endif

! --- Set the Edge Angles ---------------------------------------------------
for i = 1 to nCorners-1
	if ABS(lOrderedPanelCoords[i][2] - lOrderedPanelCoords[i+1][2]) < eps then
		if lOrderedPanelCoords[i][1] < lOrderedPanelCoords[i+1][1] then
			aEdgeAngles[i] = 0
		else
			aEdgeAngles[i] = 180
		endif
	endif

	if ABS(lOrderedPanelCoords[i][1] - lOrderedPanelCoords[i+1][1]) < eps then
		if lOrderedPanelCoords[i][2] < lOrderedPanelCoords[i+1][2] then
			aEdgeAngles[i] = 90
		else
			aEdgeAngles[i] = 270
		endif
	endif

	if ABS(lOrderedPanelCoords[i][1] - lOrderedPanelCoords[i+1][1]) > eps and ABS(lOrderedPanelCoords[i][2] - lOrderedPanelCoords[i+1][2]) > eps then
		if lOrderedPanelCoords[i][1] < lOrderedPanelCoords[i+1][1] and lOrderedPanelCoords[i][2] < lOrderedPanelCoords[i+1][2] then !0-90
			aEdgeAngles[i] = ATN((lOrderedPanelCoords[i+1][2] - lOrderedPanelCoords[i][2])/(lOrderedPanelCoords[i+1][1] - lOrderedPanelCoords[i][1]))
		endif

		if lOrderedPanelCoords[i][1] > lOrderedPanelCoords[i+1][1] and lOrderedPanelCoords[i][2] < lOrderedPanelCoords[i+1][2] then !90-180
			aEdgeAngles[i] = 90+ATN((lOrderedPanelCoords[i][1] - lOrderedPanelCoords[i+1][1])/(lOrderedPanelCoords[i+1][2] - lOrderedPanelCoords[i][2]))
		endif

		if lOrderedPanelCoords[i][1] > lOrderedPanelCoords[i+1][1] and lOrderedPanelCoords[i][2] > lOrderedPanelCoords[i+1][2] then !180-270
			aEdgeAngles[i] = 180+ATN((lOrderedPanelCoords[i][2] - lOrderedPanelCoords[i+1][2])/(lOrderedPanelCoords[i][1] - lOrderedPanelCoords[i+1][1]))
		endif

		if lOrderedPanelCoords[i][1] < lOrderedPanelCoords[i+1][1] and lOrderedPanelCoords[i][2] > lOrderedPanelCoords[i+1][2] then !270-360
			aEdgeAngles[i] = 270+ATN((lOrderedPanelCoords[i+1][1] - lOrderedPanelCoords[i][1])/(lOrderedPanelCoords[i+1][2] - lOrderedPanelCoords[i][2]))
		endif
	endif
next i

! --- Set the Edge Center Points ---------------------------------------------------
for i = 1 to nCorners-1
	if lOrderedPanelCoords[i][1] < lOrderedPanelCoords[i+1][1] then
		lEdgeMidPoint[i][1] = lOrderedPanelCoords[i][1] + (lOrderedPanelCoords[i+1][1] - lOrderedPanelCoords[i][1])/2
	else
		lEdgeMidPoint[i][1] = lOrderedPanelCoords[i+1][1] + (lOrderedPanelCoords[i][1] - lOrderedPanelCoords[i+1][1])/2
	endif

	if lOrderedPanelCoords[i][2] < lOrderedPanelCoords[i+1][2] then
		lEdgeMidPoint[i][2] = lOrderedPanelCoords[i][2] + (lOrderedPanelCoords[i+1][2] - lOrderedPanelCoords[i][2])/2
	else
		lEdgeMidPoint[i][2] = lOrderedPanelCoords[i+1][2] + (lOrderedPanelCoords[i][2] - lOrderedPanelCoords[i+1][2])/2
	endif
next i

! --- Set the Modified Corner Points ---------------------------------------------------
lModPanelCoords = lOrderedPanelCoords
lModCFRegCoords = lOrderedCFRegCoords

if sSpecEdgeSetting_m > 0 then
	CornL = iWorkCorners1[1]
	CornR = iWorkCorners1[2]
	WorkA = aEdgeAngles[CornL]-90


	if CornL > 1 then
		if ((ABS(aEdgeAngles[CornL] - aEdgeAngles[CornL-1] - 90) < eps) or (abs(aEdgeAngles[CornL]) < eps and ABS(360 - aEdgeAngles[CornL-1] - 90) < eps)) then
			RALeft = 1
		else
			RALeft = 1!0
		endif
	else
		if ABS(aEdgeAngles[1] - aEdgeAngles[nCorners-1] - 90) < eps then
			RALeft = 1
		else
			RALeft = 1!0
		endif
	endif

	if  (ABS(aEdgeAngles[CornR] - aEdgeAngles[CornL] - 90) < eps) or (abs(aEdgeAngles[CornR]) < eps and ABS(360 - aEdgeAngles[CornL] - 90) < eps) then
			RARight = 1
	else
			RARight = 1!0
	endif

	if RALeft = 1 then
		lModPanelCoords[CornL][1] = lModPanelCoords[CornL][1] + cos(WorkA)*lOffset1
		lModPanelCoords[CornL][2] = lModPanelCoords[CornL][2] + sin(WorkA)*lOffset1
		lModCFRegCoords[CornL][1] = lModCFRegCoords[CornL][1] + cos(WorkA)*lOffset1
		lModCFRegCoords[CornL][2] = lModCFRegCoords[CornL][2] + sin(WorkA)*lOffset1
		if CornL  = 1 then
			lModPanelCoords[nCorners][1] = lModPanelCoords[CornL][1]
			lModPanelCoords[nCorners][2] = lModPanelCoords[CornL][2]
			lModCFRegCoords[nCorners][1] = lModCFRegCoords[CornL][1]
			lModCFRegCoords[nCorners][2] = lModCFRegCoords[CornL][2]
		endif
	else
		!place here the code of non 90 degre angles
	endif

	if RARight = 1 then
		lModPanelCoords[CornR][1] = lModPanelCoords[CornR][1] + cos(WorkA)*lOffset1
		lModPanelCoords[CornR][2] = lModPanelCoords[CornR][2] + sin(WorkA)*lOffset1
		lModCFRegCoords[CornR][1] = lModCFRegCoords[CornR][1] + cos(WorkA)*lOffset1
		lModCFRegCoords[CornR][2] = lModCFRegCoords[CornR][2] + sin(WorkA)*lOffset1
		if CornR  = 1 then
			lModPanelCoords[nCorners][1] = lModPanelCoords[CornR][1]
			lModPanelCoords[nCorners][2] = lModPanelCoords[CornR][2]
			lModCFRegCoords[nCorners][1] = lModCFRegCoords[CornR][1]
			lModCFRegCoords[nCorners][2] = lModCFRegCoords[CornR][2]
		endif
	else
		!place here the code of non 90 degre angles
	endif
endif

if sSpecEdgeSetting_m = 2 or sSpecEdgeSetting_m = 4 then
	CornL = iWorkCorners2[1]
	CornR = iWorkCorners2[2]
	WorkA = aEdgeAngles[CornL]-90

	if CornL > 1 then
		if ((ABS(aEdgeAngles[CornL] - aEdgeAngles[CornL-1] - 90) < eps) or (abs(aEdgeAngles[CornL]) < eps and ABS(360 - aEdgeAngles[CornL-1] - 90) < eps)) then
			RALeft = 1
		else
			RALeft = 1!0
		endif
	else
		if ABS(aEdgeAngles[1] - aEdgeAngles[nCorners-1] - 90) < eps then
			RALeft = 1
		else
			RALeft = 1!0
		endif
	endif

	if  (ABS(aEdgeAngles[CornR] - aEdgeAngles[CornL] - 90) < eps) or (abs(aEdgeAngles[CornR]) < eps and ABS(360 - aEdgeAngles[CornL] - 90) < eps) then
			RARight = 1
	else
			RARight = 1!0
	endif

	if RALeft = 1 then
		lModPanelCoords[CornL][1] = lModPanelCoords[CornL][1] + cos(WorkA)*lOffset2
		lModPanelCoords[CornL][2] = lModPanelCoords[CornL][2] + sin(WorkA)*lOffset2
		lModCFRegCoords[CornL][1] = lModCFRegCoords[CornL][1] + cos(WorkA)*lOffset2
		lModCFRegCoords[CornL][2] = lModCFRegCoords[CornL][2] + sin(WorkA)*lOffset2
		if CornL  = 1 then
			lModPanelCoords[nCorners][1] = lModPanelCoords[CornL][1]
			lModPanelCoords[nCorners][2] = lModPanelCoords[CornL][2]
			lModCFRegCoords[nCorners][1] = lModCFRegCoords[CornL][1]
			lModCFRegCoords[nCorners][2] = lModCFRegCoords[CornL][2]
		endif
	else
		!place here the code of non 90 degre angles
	endif

	if RARight = 1 then
		lModPanelCoords[CornR][1] = lModPanelCoords[CornR][1] + cos(WorkA)*lOffset2
		lModPanelCoords[CornR][2] = lModPanelCoords[CornR][2] + sin(WorkA)*lOffset2
		lModCFRegCoords[CornR][1] = lModCFRegCoords[CornR][1] + cos(WorkA)*lOffset2
		lModCFRegCoords[CornR][2] = lModCFRegCoords[CornR][2] + sin(WorkA)*lOffset2
		if CornR  = 1 then
			lModPanelCoords[nCorners][1] = lModPanelCoords[CornR][1]
			lModPanelCoords[nCorners][2] = lModPanelCoords[CornR][2]
			lModCFRegCoords[nCorners][1] = lModCFRegCoords[CornR][1]
			lModCFRegCoords[nCorners][2] = lModCFRegCoords[CornR][2]
		endif
	else
		!place here the code of non 90 degre angles
	endif
endif

! --- Set the Modified Edge Angles ---------------------------------------------------
for i = 1 to nCorners-1
	if ABS(lModPanelCoords[i][2] - lModPanelCoords[i+1][2]) < eps then
		if lModPanelCoords[i][1] < lModPanelCoords[i+1][1] then
			aModAngles[i] = 0
		else
			aModAngles[i] = 180
		endif
	endif

	if ABS(lModPanelCoords[i][1] - lModPanelCoords[i+1][1]) < eps then
		if lModPanelCoords[i][2] < lModPanelCoords[i+1][2] then
			aModAngles[i] = 90
		else
			aModAngles[i] = 270
		endif
	endif

	if ABS(lModPanelCoords[i][1] - lModPanelCoords[i+1][1]) > eps and ABS(lModPanelCoords[i][2] - lModPanelCoords[i+1][2]) > eps then
		if lModPanelCoords[i][1] < lModPanelCoords[i+1][1] and lModPanelCoords[i][2] < lModPanelCoords[i+1][2] then !0-90
			aModAngles[i] = ATN((lModPanelCoords[i+1][2] - lModPanelCoords[i][2])/(lModPanelCoords[i+1][1] - lModPanelCoords[i][1]))
		endif

		if lModPanelCoords[i][1] > lModPanelCoords[i+1][1] and lModPanelCoords[i][2] < lModPanelCoords[i+1][2] then !90-180
			aModAngles[i] = 90+ATN((lModPanelCoords[i][1] - lModPanelCoords[i+1][1])/(lModPanelCoords[i+1][2] - lModPanelCoords[i][2]))
		endif

		if lModPanelCoords[i][1] > lModPanelCoords[i+1][1] and lModPanelCoords[i][2] > lModPanelCoords[i+1][2] then !180-270
			aModAngles[i] = 180+ATN((lModPanelCoords[i][2] - lModPanelCoords[i+1][2])/(lModPanelCoords[i][1] - lModPanelCoords[i+1][1]))
		endif

		if lModPanelCoords[i][1] < lModPanelCoords[i+1][1] and lModPanelCoords[i][2] > lModPanelCoords[i+1][2] then !270-360
			aModAngles[i] = 270+ATN((lModPanelCoords[i+1][1] - lModPanelCoords[i][1])/(lModPanelCoords[i+1][2] - lModPanelCoords[i][2]))
		endif
	endif
next i

!-----Calculate the new geometry----------------------------------------
!-----------------------------------------------------------------------

!!!if gs_debug then
!!!	brick 0.5,0.02,0.02
!!!	addx 0.51
!!!	text 0.02,0,"X"
!!!	del 1
!!!
!!!	brick 0.02,0.5,0.02
!!!	addy 0.51
!!!	text 0.02,0,"Y"
!!!	del 1
!!!
!!!	brick 0.02,0.02,0.5
!!!
!!!	for i = 1 to nCorners
!!!		lin_ centerX, centerY, 0,lOrderedCFRegCoords[i][1],lOrderedCFRegCoords[i][2],0
!!!		addx lOrderedCFRegCoords[i][1]
!!!		addy lOrderedCFRegCoords[i][2]
!!!		text 0.01,0,i
!!!		del 2
!!!		if i < nCorners then
!!!			addx lEdgeMidPoint[i][1]
!!!			addy lEdgeMidPoint[i][2]
!!!			sphere 0.01
!!!			del 2
!!!		endif
!!!	next i
!!!endif



if not(gs_shadow) then SHADOW OFF


hotspot centerX, centerY, 0
UnID = 1

if sSpecEdgeSetting_m > 0 then
	add centerX, centerY, 0

	hotspot centerX/2, 0,0,UnID, aSpecialEdge1,132 : UnID = UnID + 1
	rotz aSpecialEdge1
	hotspot centerX/2,0,0,UnID, aSpecialEdge1,5 : UnID = UnID + 1
	del 1
	hotspot 0,0,0,UnID, aSpecialEdge1,6 : UnID = UnID + 1
	hotspot 0,0,1,UnID, aSpecialEdge1,7 : UnID = UnID + 1

	del 1

	if sSpecEdgeSetting_m > 2 and sButtedTyp1_m = 0 then
	for i = 1 to nCorners-1
		if i = iWorkCorners1[1] then
				addx lEdgeMidPoint[i][1]
				addy lEdgeMidPoint[i][2]
				rotz aEdgeAngles[i]

				hotspot 0,0,0,UnID,lOffset1,129 : UnID = UnID + 1
				hotspot 0,-lOffset1,0,UnID,lOffset1,2 : UnID = UnID + 1
				hotspot 0,1,0,UnID,lOffset1,3 : UnID = UnID + 1

				del 3
		endif
	next i
	endif
endif

if sSpecEdgeSetting_m = 2 or sSpecEdgeSetting_m = 4 then
	add centerX, centerY, 0

	hotspot centerX/3, 0,0,UnID, aSpecialEdge2,132 : UnID = UnID + 1
	rotz aSpecialEdge2
	hotspot centerX/3,0,0,UnID, aSpecialEdge2,5 : UnID = UnID + 1
	del 1
	hotspot 0,0,0,UnID, aSpecialEdge2,6 : UnID = UnID + 1
	hotspot 0,0,1,UnID, aSpecialEdge2,7 : UnID = UnID + 1

	del 1

	if sSpecEdgeSetting_m = 4 and sButtedTyp1_m = 0 then
	for i = 1 to nCorners-1
		if i = iWorkCorners2[1] then
				addx lEdgeMidPoint[i][1]
				addy lEdgeMidPoint[i][2]
				rotz aEdgeAngles[i]

				hotspot 0,0,0,UnID,lOffset2,129 : UnID = UnID + 1
				hotspot 0,-lOffset2,0,UnID,lOffset2,2 : UnID = UnID + 1
				hotspot 0,1,0,UnID,lOffset2,3 : UnID = UnID + 1

				del 3
		endif
	next i
endif
endif


if GLOB_CONTEXT = 23 then
	if sSpecEdgeSetting_m > 0 then
		for i = 1 to nCorners-1
			if i = iWorkCorners1[1] then
				addx lEdgeMidPoint[i][1]
				addy lEdgeMidPoint[i][2]
				rotz aEdgeAngles[i]
				addy -lOffset1
				lin_ 0,0,0,0.05,0.05,0
				lin_ 0,0,0,-0.05,0.05,0
				lin_ -0.05,0.05,0,0.05,0.05,0
				del 4
			endif
		next i
	endif

	if sSpecEdgeSetting_m = 2 or sSpecEdgeSetting_m = 4 then
		for i = 1 to nCorners-1
			if i = iWorkCorners2[1] then
				addx lEdgeMidPoint[i][1]
				addy lEdgeMidPoint[i][2]
				rotz aEdgeAngles[i]
				addy -lOffset2
				lin_ 0,0,0,0.05,0.05,0
				lin_ 0,0,0,-0.05,0.05,0
				lin_ -0.05,0.05,0,0.05,0.05,0
				del 4
			endif
		next i
	endif
endif

if sSpecEdgeSetting_m = 1 or sSpecEdgeSetting_m = 2 then
	cuthgt = max(ac_height, ac_width)
	cutwdt = panelThk*SIN(aMitterAngle1/2)*2

	for i = 1 to nCorners-1
		if i = iWorkCorners1[1] then
			addx lModPanelCoords[i][1]
			addy lModPanelCoords[i][2]
			if aMitterAngle1 > 180 then	addz -AC_ClampWidth/2 - (panelThk-AC_ClampWidth)
			if aMitterAngle1 < 180 then	addz AC_ClampWidth/2 + (panelThk-AC_ClampWidth)
			rotz aModAngles[i]-90
			roty 90 + (aMitterAngle1/2)
			if aMitterAngle1 > 180 then roty 180
			cutplane
!			poly 4,
!				-cutwdt,0,
!				cutwdt,0,
!				cutwdt,cuthgt,
!				-cutwdt,cuthgt
			del 5
			if aMitterAngle1 > 180 then del 1
		endif
	next i
endif

if sSpecEdgeSetting_m = 2 then
	cuthgt = max(ac_height, ac_width)
	cutwdt = panelThk*SIN(aMitterAngle2/2)*2

	for i = 1 to nCorners-1
		if i = iWorkCorners2[1] then
			addx lModPanelCoords[i][1]
			addy lModPanelCoords[i][2]
			if aMitterAngle2 > 180 then	addz -AC_ClampWidth/2 - (panelThk-AC_ClampWidth)
			if aMitterAngle2 < 180then	addz AC_ClampWidth/2 + (panelThk-AC_ClampWidth)
			rotz aModAngles[i]-90
			roty 90 + (aMitterAngle2/2)
			if aMitterAngle2 > 180 then roty 180
			cutplane
!			poly 4,
!				-cutwdt,0,
!				cutwdt,0,
!				cutwdt,cuthgt,
!				-cutwdt,cuthgt
			del 5
			if aMitterAngle2 > 180 then del 1
		endif
	next i
endif


for i = 1 to nCorners
!	put AC_PanelCoords[i][1], AC_PanelCoords [i][2], 15
	put lModPanelCoords[i][1], lModPanelCoords[i][2], 15
next i

if nsp > 8 then
	addz  AC_clampWidth/2 - coatingThk
	material matCoating
	sect_fill coatingFill, coatingFillPenBg, coatingFillPen, gs_cont_pen
	prism_ nCorners, coatingThk,
		use (nsp)
	del 1
	if abs (AC_clampWidth - coatingThk) > eps then
		addz - AC_clampWidth/2
		material matInsideLayer
		sect_fill internalFill_1, internalFillPenBg_1, internalFillPen_1, gs_cont_pen
		prism_ nCorners, AC_clampWidth - coatingThk,
			get (nsp)
		del 1
	else
		for i = 1 to nsp
			ggg = get (1)
		next i
	endif
else
	for i = 1 to nsp
		ggg = get (1)
	next i
endif

if abs (panelThk - AC_clampWidth) > eps then
	for i = 1 to nCorners_in
		put lModCFRegCoords[i][1], lModCFRegCoords[i][2], 15
	next i

	if nsp > 8 then
		addz -AC_clampWidth/2
		mulz -1
		sect_fill internalFill_1, internalFillPenBg_1, internalFillPen_1, gs_cont_pen
		if abs (panelBackAngle - 90) < eps then
			material matInsideLayer
			prism_ nCorners_in, panelThk - AC_clampWidth,
				get (nsp)
		else
			cuthgt = max(ac_height, ac_width)
			cutwdt = panelThk*SIN(aMitterAngle1/2)*2

			for i = 1 to nCorners-1
				if NOT(((i = iWorkCorners1[1]) and (sSpecEdgeSetting_m > 0)) or \
				((i = iWorkCorners2[1]) and (sSpecEdgeSetting_m = 2 or sSpecEdgeSetting_m = 4))) then
					addx lModCFRegCoords[i][1]
					addy lModCFRegCoords[i][2]
					rotz aModAngles[i]-90
					roty panelBackAngle
					cutplane
!					poly 4,
!						-cutwdt,0,
!						cutwdt,0,
!						cutwdt,cuthgt,
!						-cutwdt,cuthgt
					del 4
				endif
			next i

			material matInsideLayer
			prism_ nCorners_in, panelThk - AC_clampWidth,
				get (nsp)

			for i = 1 to nCorners-1
				if NOT(((i = iWorkCorners1[1]) and (sSpecEdgeSetting_m > 0)) or \
				((i = iWorkCorners2[1]) and (sSpecEdgeSetting_m = 2 or sSpecEdgeSetting_m = 4))) then cutend
			next i
		endif
		del 2
	else
		for i = 1 to nsp
			ggg = get (1)
		next i
	endif
endif

if sSpecEdgeSetting_m = 1 or sSpecEdgeSetting_m = 2 then cutend
if sSpecEdgeSetting_m = 2 then cutend
