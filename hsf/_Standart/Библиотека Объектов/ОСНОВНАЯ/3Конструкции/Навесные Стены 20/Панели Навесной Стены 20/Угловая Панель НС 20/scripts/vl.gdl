
call "FM_types" parameters all

values "panelBackAngle" RANGE (0, 90]
values "coatingThk" range	(0, AC_ClampWidth]
values "PanelThk"	range	[AC_ClampWidth,)
values "gs_detlevel_2d" `Зависит от Масштаба`, `1:50`, `1:100`, `1:200`, `Нет`
values "gs_detlevel_2d_m" 0, 50, 100, 200, -1
values "sSpecEdgeSetting" `Без Специальных Торцов`, `Соединение на Ус Одного Торца`, `Соединение на Ус Двух Торцов`, `Соединение Встык Одного Торца`, `Соединение Встык Двух Торцов`
values "sSpecEdgeSetting_m" 0,1,2,3,4
values "sButtedTyp1" `Фиксация Спереди`, `Фиксация Сзади`, `Специальный`
values "sButtedTyp2" `Фиксация Спереди`, `Фиксация Сзади`, `Специальный`
values "aSpecialEdge1" range [0, 360]
values "aSpecialEdge2" range [0, 360]

if sSpecEdgeSetting_m = 1 or sSpecEdgeSetting_m = 2 then
	values "aMitterAngle1" range (0, 360)
	values "aMitterAngle2" range (0, 360)
else
	values "aMitterAngle1" 90, 270
	values "aMitterAngle2" 90, 270
endif


if GLOB_MODPAR_NAME = "gs_detlevel_2d" then
	if gs_detlevel_2d = `Нет` 				then gs_detlevel_2d_m = 0
	if gs_detlevel_2d = `Зависит от Масштаба` 	then gs_detlevel_2d_m = -1
	if gs_detlevel_2d = `1:50` 				then gs_detlevel_2d_m = 50
	if gs_detlevel_2d = `1:100` 			then gs_detlevel_2d_m = 100
	if gs_detlevel_2d = `1:200` 			then gs_detlevel_2d_m = 200
	parameters gs_detlevel_2d_m = gs_detlevel_2d_m
else
	if gs_detlevel_2d_m = 0 then gs_detlevel_2d = `Нет`
	if gs_detlevel_2d_m = -1  then gs_detlevel_2d = `Зависит от Масштаба`
	if gs_detlevel_2d_m = 50  then gs_detlevel_2d = `1:50`
	if gs_detlevel_2d_m = 100 then gs_detlevel_2d = `1:100`
	if gs_detlevel_2d_m = 200 then gs_detlevel_2d = `1:200`
	parameters gs_detlevel_2d = gs_detlevel_2d
endif

if GLOB_MODPAR_NAME = "sSpecEdgeSetting" then
	if sSpecEdgeSetting = `Без Специальных Торцов`	then sSpecEdgeSetting_m = 0
	if sSpecEdgeSetting = `Соединение на Ус Одного Торца`	then sSpecEdgeSetting_m = 1
	if sSpecEdgeSetting = `Соединение на Ус Двух Торцов`	then sSpecEdgeSetting_m = 2
	if sSpecEdgeSetting = `Соединение Встык Одного Торца`		then sSpecEdgeSetting_m = 3
	if sSpecEdgeSetting = `Соединение Встык Двух Торцов`	then sSpecEdgeSetting_m = 4
	parameters sSpecEdgeSetting_m = sSpecEdgeSetting_m
else
	if sSpecEdgeSetting_m = 0 then	sSpecEdgeSetting = `Без Специальных Торцов`
	if sSpecEdgeSetting_m = 1 then	sSpecEdgeSetting = `Соединение на Ус Одного Торца`
	if sSpecEdgeSetting_m = 2 then	sSpecEdgeSetting = `Соединение на Ус Двух Торцов`
	if sSpecEdgeSetting_m = 3 then	sSpecEdgeSetting = `Соединение Встык Одного Торца`
	if sSpecEdgeSetting_m = 4 then	sSpecEdgeSetting = `Соединение Встык Двух Торцов`
	parameters sSpecEdgeSetting = sSpecEdgeSetting
endif

if GLOB_MODPAR_NAME = "sButtedTyp1" then
	if sButtedTyp1 = `Специальный`		then sButtedTyp1_m = 0
	if sButtedTyp1 = `Фиксация Спереди`	then sButtedTyp1_m = 1
	if sButtedTyp1 = `Фиксация Сзади`	then sButtedTyp1_m = 2
	parameters sButtedTyp1_m = sButtedTyp1_m
else
	if sButtedTyp1_m = 0 then sButtedTyp1 = `Специальный`
	if sButtedTyp1_m = 1 then sButtedTyp1 = `Фиксация Спереди`
	if sButtedTyp1_m = 2 then sButtedTyp1 = `Фиксация Сзади`
	parameters sButtedTyp1 = sButtedTyp1
endif

if GLOB_MODPAR_NAME = "sButtedTyp2" then
	if sButtedTyp2 = `Специальный`		then sButtedTyp2_m = 0
	if sButtedTyp2 = `Фиксация Спереди`	then sButtedTyp2_m = 1
	if sButtedTyp2 = `Фиксация Сзади`	then sButtedTyp2_m = 2
	parameters sButtedTyp2_m = sButtedTyp2_m
else
	if sButtedTyp2_m = 0 then sButtedTyp2 = `Специальный`
	if sButtedTyp2_m = 1 then sButtedTyp2 = `Фиксация Спереди`
	if sButtedTyp2_m = 2 then sButtedTyp2 = `Фиксация Сзади`
	parameters sButtedTyp2 = sButtedTyp2
endif

! --- Set the Param hiding ---------------------------------------------------
if not(gs_debug) then hideparameter "gs_debug"

if sSpecEdgeSetting_m = 0 then
	hideparameter "aSpecialEdge1", "aSpecialEdge2"
	hideparameter "aMitterAngle1", "aMitterAngle2"
	hideparameter "sButtedTyp1", "lOffset1"
	hideparameter "sButtedTyp2", "lOffset2"
endif

if sSpecEdgeSetting_m = 1 then
	hideparameter "aSpecialEdge2"
	hideparameter "aMitterAngle2"
	hideparameter "sButtedTyp1", "lOffset1"
	hideparameter "sButtedTyp2", "lOffset2"
endif

if sSpecEdgeSetting_m = 2 then
	hideparameter "sButtedTyp1", "lOffset1"
	hideparameter "sButtedTyp2", "lOffset2"
endif

if sSpecEdgeSetting_m = 3 then
	hideparameter "aSpecialEdge2"
	hideparameter "aMitterAngle2"
	hideparameter "sButtedTyp2", "lOffset2"

	if sButtedTyp1_m = 0 then
		hideparameter "aMitterAngle1"
	endif
endif

if sSpecEdgeSetting_m = 4 then

	if sButtedTyp1_m = 0 then
		hideparameter "aMitterAngle1"
	endif

	if sButtedTyp2_m = 0 then
		hideparameter "aMitterAngle2"
	endif
endif

! --- Set the Auto Param ---------------------------------------------------
if GLOB_MODPAR_NAME = "aMitterAngle1" or GLOB_MODPAR_NAME = "aMitterAngle2"  then
	if abs(aMitterAngle1 - 180) < eps then
		aMitterAngle1 = 90
		parameters aMitterAngle1 = 90
	endif

	if abs(aMitterAngle2 - 180) < eps then
		aMitterAngle2 = 90
		parameters aMitterAngle2 = 90
	endif
endif

temppw = panelThk-AC_ClampWidth
if sSpecEdgeSetting_m = 1 or sSpecEdgeSetting_m = 2 then
	lOffset1 = abs(((AC_ClampWidth/2)+temppw)*TAN(aMitterAngle1/2))
	parameters lOffset1 = lOffset1
	lock "lOffset1"
endif

if sSpecEdgeSetting_m = 2 then
	lOffset2 = abs(((AC_ClampWidth/2)+temppw)*TAN(aMitterAngle2/2))
	parameters lOffset2 = lOffset2
	lock "lOffset2"
endif

if sSpecEdgeSetting_m = 3 or sSpecEdgeSetting_m = 4 then
	if ABS(aMitterAngle1 - 90) < EPS then
		if sButtedTyp1_m = 1 then
			lOffset1 = AC_ClampWidth/2
			parameters lOffset1 = lOffset1
			lock "lOffset1"
		endif
		if sButtedTyp1_m = 2 then
			lOffset1 = -AC_ClampWidth/2 - temppw
			parameters lOffset1 = lOffset1
			lock "lOffset1"
		endif
	else
		if sButtedTyp1_m = 1 then
			lOffset1 = AC_ClampWidth/2 + temppw
			parameters lOffset1 = lOffset1
			lock "lOffset1"
		endif
		if sButtedTyp1_m = 2 then
			lOffset1 = -AC_ClampWidth/2
			parameters lOffset1 = lOffset1
			lock "lOffset1"
		endif
	endif
endif

if sSpecEdgeSetting_m = 4 then
	if ABS(aMitterAngle2 - 90) < EPS then
		if sButtedTyp2_m = 1 then
			lOffset2 = AC_ClampWidth/2
			parameters lOffset2 = lOffset2
			lock "lOffset2"
		endif
		if sButtedTyp2_m = 2 then
			lOffset2 = -AC_ClampWidth/2 - temppw
			parameters lOffset2 = lOffset2
			lock "lOffset2"
		endif
	else
		if sButtedTyp2_m = 1 then
			lOffset2 = AC_ClampWidth/2 + temppw
			parameters lOffset2 = lOffset2
			lock "lOffset2"
		endif
		if sButtedTyp2_m = 2 then
			lOffset2 = -AC_ClampWidth/2
			parameters lOffset2 = lOffset2
			lock "lOffset2"
		endif
	endif
endif

nCorners = vardim1 (AC_PanelCoords)

! --- Set the Corner Angles ---------------------------------------------------
for i = 1 to nCorners
	if AC_PanelCoords[i][1] > centerX and ABS(AC_PanelCoords[i][2]-centerY) < eps then !0
		aCronerAngles[i] = 0
	endif

	if ABS(AC_PanelCoords[i][1]-centerX) < eps and AC_PanelCoords[i][2] > centerY then !1270
		aCronerAngles[i] = 90
	endif

	if AC_PanelCoords[i][1] < centerX and ABS(AC_PanelCoords[i][2]-centerY) < eps then !180
		aCronerAngles[i] = 180
	endif

	if ABS(AC_PanelCoords[i][1]-centerX) < eps and AC_PanelCoords[i][2] < centerY then !270
		aCronerAngles[i] = 270
	endif

	if AC_PanelCoords[i][1] > centerX and AC_PanelCoords[i][2] > centerY then !0-90
		aCronerAngles[i] = ATN((AC_PanelCoords[i][2]-centerY)/(AC_PanelCoords[i][1]-centerX))
	endif

	if AC_PanelCoords[i][1] < centerX and AC_PanelCoords[i][2] > centerY then !90-180
		aCronerAngles[i] = 90+ATN((centerX-AC_PanelCoords[i][1])/(AC_PanelCoords[i][2]-centerY))
	endif

	if AC_PanelCoords[i][1] < centerX and AC_PanelCoords[i][2] < centerY then !180-270
		aCronerAngles[i] = 180+ATN((centerY-AC_PanelCoords[i][2])/(centerX-AC_PanelCoords[i][1]))
	endif

	if AC_PanelCoords[i][1] > centerX and AC_PanelCoords[i][2] < centerY then !270-360
		aCronerAngles[i] = 270+ATN((AC_PanelCoords[i][1]-centerX)/(centerY-AC_PanelCoords[i][2]))
	endif
next i

!----- Ordering the Corners-------------------------------------------------
lOrderedPanelCoords = AC_PanelCoords
lOrderedCFRegCoords = AC_clampFreeRegionCoords

for i = 1 to nCorners-1
	for j = 1 to nCorners-2
		if aCronerAngles[j] > aCronerAngles[j+1] then
			TEMP = aCronerAngles[j]
			TMPX = lOrderedPanelCoords[j][1]
			TMPY = lOrderedPanelCoords[j][2]
			TMPA = lOrderedCFRegCoords[j][1]
			TMPB = lOrderedCFRegCoords[j][2]

			aCronerAngles[j] = aCronerAngles[j+1]
			lOrderedPanelCoords[j][1] = lOrderedPanelCoords[j+1][1]
			lOrderedPanelCoords[j][2] = lOrderedPanelCoords[j+1][2]
			lOrderedCFRegCoords[j][1] = lOrderedCFRegCoords[j+1][1]
			lOrderedCFRegCoords[j][2] = lOrderedCFRegCoords[j+1][2]

			aCronerAngles[j+1] = TEMP
			lOrderedPanelCoords[j+1][1] = TMPX
			lOrderedPanelCoords[j+1][2] = TMPY
			lOrderedCFRegCoords[j+1][1] = TMPA
			lOrderedCFRegCoords[j+1][2] = TMPB
		endif
	next j
next i

aCronerAngles[nCorners] = aCronerAngles[1]
lOrderedPanelCoords[nCorners][1] = lOrderedPanelCoords[1][1]
lOrderedPanelCoords[nCorners][2] = lOrderedPanelCoords[1][2]
lOrderedCFRegCoords[nCorners][1] = lOrderedCFRegCoords[1][1]
lOrderedCFRegCoords[nCorners][2] = lOrderedCFRegCoords[1][2]

parameters aCronerAngles = aCronerAngles
parameters lOrderedPanelCoords = lOrderedPanelCoords
parameters lOrderedCFRegCoords = lOrderedCFRegCoords


!----- Set the Working Corners-------------------------------------------------
if sSpecEdgeSetting_m > 0 then
	for i = 1 to nCorners-1
		if aSpecialEdge1 > aCronerAngles[i] and aSpecialEdge1 < aCronerAngles[i+1] then
			iWorkCorners1[1] = i
			iWorkCorners1[2] = i+1
		endif
	next i

	if (aSpecialEdge1 <= 360 and aSpecialEdge1 > aCronerAngles[nCorners-1]) or (aSpecialEdge1 < aCronerAngles[1] and aSpecialEdge1 >= 0) then
		iWorkCorners1[1] = nCorners-1
		iWorkCorners1[2] = 1
	endif
	parameters iWorkCorners1 = iWorkCorners1
endif

if sSpecEdgeSetting_m = 2 or sSpecEdgeSetting_m = 4 then
	for i = 1 to nCorners-1
		if aSpecialEdge2 > aCronerAngles[i] and aSpecialEdge2 < aCronerAngles[i+1] then
			iWorkCorners2[1] = i
			iWorkCorners2[2] = i+1
		endif
	next i

	if (aSpecialEdge2 <= 360 and aSpecialEdge2 > aCronerAngles[nCorners-1]) or (aSpecialEdge2 < aCronerAngles[1] and aSpecialEdge2 >= 0) then
		iWorkCorners2[1] = nCorners-1
		iWorkCorners2[2] = 1
	endif
	parameters iWorkCorners2 = iWorkCorners2
endif

if sSpecEdgeSetting_m = 2 or sSpecEdgeSetting_m = 4 then
	if GLOB_MODPAR_NAME = "aSpecialEdge1" or GLOB_MODPAR_NAME = "sSpecEdgeSetting" or GLOB_MODPAR_NAME = "sSpecEdgeSetting_m"  then
		if aSpecialEdge1 >= aCronerAngles[iWorkCorners2[1]] and aSpecialEdge1 <= aCronerAngles[iWorkCorners2[2]]then
			aSpecialEdge1 = aCronerAngles[iWorkCorners2[1]]-0.01
		endif

		if iWorkCorners2[1] > iWorkCorners2[2] then
			if (aSpecialEdge1 >= aCronerAngles[iWorkCorners2[1]] and aSpecialEdge1 <= 360) or (aSpecialEdge1 >= 0 and aSpecialEdge1 <= aCronerAngles[iWorkCorners2[2]]) then
				aSpecialEdge1 = aCronerAngles[iWorkCorners2[1]]-0.01
			endif
		endif
		parameters aSpecialEdge1 = aSpecialEdge1
	endif

	if GLOB_MODPAR_NAME = "aSpecialEdge2" then
		if aSpecialEdge2 >= aCronerAngles[iWorkCorners1[1]] and aSpecialEdge2 <= aCronerAngles[iWorkCorners1[2]]then
			aSpecialEdge2 = aCronerAngles[iWorkCorners1[1]]-0.01
		endif

		if iWorkCorners1[1] > iWorkCorners1[2] then
			if (aSpecialEdge2 >= aCronerAngles[iWorkCorners1[1]] and aSpecialEdge2 <= 360) or (aSpecialEdge2 >= 0 and aSpecialEdge2 <= aCronerAngles[iWorkCorners1[2]]) then
				aSpecialEdge2 = aCronerAngles[iWorkCorners1[1]]-0.01
			endif
		endif
		parameters aSpecialEdge2 = aSpecialEdge2
	endif
endif

! --- Set the Edge Angles ---------------------------------------------------
for i = 1 to nCorners-1
	if ABS(lOrderedPanelCoords[i][2] - lOrderedPanelCoords[i+1][2]) < eps then
		if lOrderedPanelCoords[i][1] < lOrderedPanelCoords[i+1][1] then
			aEdgeAngles[i] = 0
		else
			aEdgeAngles[i] = 180
		endif
	endif

	if ABS(lOrderedPanelCoords[i][1] - lOrderedPanelCoords[i+1][1]) < eps then
		if lOrderedPanelCoords[i][2] < lOrderedPanelCoords[i+1][2] then
			aEdgeAngles[i] = 90
		else
			aEdgeAngles[i] = 270
		endif
	endif

	if ABS(lOrderedPanelCoords[i][1] - lOrderedPanelCoords[i+1][1]) > eps and ABS(lOrderedPanelCoords[i][2] - lOrderedPanelCoords[i+1][2]) > eps then
		if lOrderedPanelCoords[i][1] < lOrderedPanelCoords[i+1][1] and lOrderedPanelCoords[i][2] < lOrderedPanelCoords[i+1][2] then !0-90
			aEdgeAngles[i] = ATN((lOrderedPanelCoords[i+1][2] - lOrderedPanelCoords[i][2])/(lOrderedPanelCoords[i+1][1] - lOrderedPanelCoords[i][1]))
		endif

		if lOrderedPanelCoords[i][1] > lOrderedPanelCoords[i+1][1] and lOrderedPanelCoords[i][2] < lOrderedPanelCoords[i+1][2] then !90-180
			aEdgeAngles[i] = 90+ATN((lOrderedPanelCoords[i][1] - lOrderedPanelCoords[i+1][1])/(lOrderedPanelCoords[i+1][2] - lOrderedPanelCoords[i][2]))
		endif

		if lOrderedPanelCoords[i][1] > lOrderedPanelCoords[i+1][1] and lOrderedPanelCoords[i][2] > lOrderedPanelCoords[i+1][2] then !180-270
			aEdgeAngles[i] = 180+ATN((lOrderedPanelCoords[i][2] - lOrderedPanelCoords[i+1][2])/(lOrderedPanelCoords[i][1] - lOrderedPanelCoords[i+1][1]))
		endif

		if lOrderedPanelCoords[i][1] < lOrderedPanelCoords[i+1][1] and lOrderedPanelCoords[i][2] > lOrderedPanelCoords[i+1][2] then !270-360
			aEdgeAngles[i] = 270+ATN((lOrderedPanelCoords[i+1][1] - lOrderedPanelCoords[i][1])/(lOrderedPanelCoords[i+1][2] - lOrderedPanelCoords[i][2]))
		endif
	endif
next i

parameters aEdgeAngles = aEdgeAngles

! --- Set the Edge Center Points ---------------------------------------------------
for i = 1 to nCorners-1
	if lOrderedPanelCoords[i][1] < lOrderedPanelCoords[i+1][1] then
		lEdgeMidPoint[i][1] = lOrderedPanelCoords[i][1] + (lOrderedPanelCoords[i+1][1] - lOrderedPanelCoords[i][1])/2
	else
		lEdgeMidPoint[i][1] = lOrderedPanelCoords[i+1][1] + (lOrderedPanelCoords[i][1] - lOrderedPanelCoords[i+1][1])/2
	endif

	if lOrderedPanelCoords[i][2] < lOrderedPanelCoords[i+1][2] then
		lEdgeMidPoint[i][2] = lOrderedPanelCoords[i][2] + (lOrderedPanelCoords[i+1][2] - lOrderedPanelCoords[i][2])/2
	else
		lEdgeMidPoint[i][2] = lOrderedPanelCoords[i+1][2] + (lOrderedPanelCoords[i][2] - lOrderedPanelCoords[i+1][2])/2
	endif
next i

parameters lEdgeMidPoint = lEdgeMidPoint

! --- Set the Modified Corner Points ---------------------------------------------------
lModPanelCoords = lOrderedPanelCoords
lModCFRegCoords = lOrderedCFRegCoords

if sSpecEdgeSetting_m > 0 then
	CornL = iWorkCorners1[1]
	CornR = iWorkCorners1[2]
	WorkA = aEdgeAngles[CornL]-90


	if CornL > 1 then
		if ((ABS(aEdgeAngles[CornL] - aEdgeAngles[CornL-1] - 90) < eps) or (abs(aEdgeAngles[CornL]) < eps and ABS(360 - aEdgeAngles[CornL-1] - 90) < eps)) then
			RALeft = 1
		else
			RALeft = 1!0
		endif
	else
		if ABS(aEdgeAngles[1] - aEdgeAngles[nCorners-1] - 90) < eps then
			RALeft = 1
		else
			RALeft = 1!0
		endif
	endif

	if  (ABS(aEdgeAngles[CornR] - aEdgeAngles[CornL] - 90) < eps) or (abs(aEdgeAngles[CornR]) < eps and ABS(360 - aEdgeAngles[CornL] - 90) < eps) then
			RARight = 1
	else
			RARight = 1!0
	endif

	if RALeft = 1 then
		lModPanelCoords[CornL][1] = lModPanelCoords[CornL][1] + cos(WorkA)*lOffset1
		lModPanelCoords[CornL][2] = lModPanelCoords[CornL][2] + sin(WorkA)*lOffset1
		lModCFRegCoords[CornL][1] = lModCFRegCoords[CornL][1] + cos(WorkA)*lOffset1
		lModCFRegCoords[CornL][2] = lModCFRegCoords[CornL][2] + sin(WorkA)*lOffset1
		if CornL  = 1 then
			lModPanelCoords[nCorners][1] = lModPanelCoords[CornL][1]
			lModPanelCoords[nCorners][2] = lModPanelCoords[CornL][2]
			lModCFRegCoords[nCorners][1] = lModCFRegCoords[CornL][1]
			lModCFRegCoords[nCorners][2] = lModCFRegCoords[CornL][2]
		endif
	else
		!place here the code of non 90 degre angles
	endif

	if RARight = 1 then
		lModPanelCoords[CornR][1] = lModPanelCoords[CornR][1] + cos(WorkA)*lOffset1
		lModPanelCoords[CornR][2] = lModPanelCoords[CornR][2] + sin(WorkA)*lOffset1
		lModCFRegCoords[CornR][1] = lModCFRegCoords[CornR][1] + cos(WorkA)*lOffset1
		lModCFRegCoords[CornR][2] = lModCFRegCoords[CornR][2] + sin(WorkA)*lOffset1
		if CornR  = 1 then
			lModPanelCoords[nCorners][1] = lModPanelCoords[CornR][1]
			lModPanelCoords[nCorners][2] = lModPanelCoords[CornR][2]
			lModCFRegCoords[nCorners][1] = lModCFRegCoords[CornR][1]
			lModCFRegCoords[nCorners][2] = lModCFRegCoords[CornR][2]
		endif
	else
		!place here the code of non 90 degre angles
	endif
endif

if sSpecEdgeSetting_m = 2 or sSpecEdgeSetting_m = 4 then
	CornL = iWorkCorners2[1]
	CornR = iWorkCorners2[2]
	WorkA = aEdgeAngles[CornL]-90

	if CornL > 1 then
		if ((ABS(aEdgeAngles[CornL] - aEdgeAngles[CornL-1] - 90) < eps) or (abs(aEdgeAngles[CornL]) < eps and ABS(360 - aEdgeAngles[CornL-1] - 90) < eps)) then
			RALeft = 1
		else
			RALeft = 1!0
		endif
	else
		if ABS(aEdgeAngles[1] - aEdgeAngles[nCorners-1] - 90) < eps then
			RALeft = 1
		else
			RALeft = 1!0
		endif
	endif

	if  (ABS(aEdgeAngles[CornR] - aEdgeAngles[CornL] - 90) < eps) or (abs(aEdgeAngles[CornR]) < eps and ABS(360 - aEdgeAngles[CornL] - 90) < eps) then
			RARight = 1
	else
			RARight = 1!0
	endif

	if RALeft = 1 then
		lModPanelCoords[CornL][1] = lModPanelCoords[CornL][1] + cos(WorkA)*lOffset2
		lModPanelCoords[CornL][2] = lModPanelCoords[CornL][2] + sin(WorkA)*lOffset2
		lModCFRegCoords[CornL][1] = lModCFRegCoords[CornL][1] + cos(WorkA)*lOffset2
		lModCFRegCoords[CornL][2] = lModCFRegCoords[CornL][2] + sin(WorkA)*lOffset2
		if CornL  = 1 then
			lModPanelCoords[nCorners][1] = lModPanelCoords[CornL][1]
			lModPanelCoords[nCorners][2] = lModPanelCoords[CornL][2]
			lModCFRegCoords[nCorners][1] = lModCFRegCoords[CornL][1]
			lModCFRegCoords[nCorners][2] = lModCFRegCoords[CornL][2]
		endif
	else
		!place here the code of non 90 degre angles
	endif

	if RARight = 1 then
		lModPanelCoords[CornR][1] = lModPanelCoords[CornR][1] + cos(WorkA)*lOffset2
		lModPanelCoords[CornR][2] = lModPanelCoords[CornR][2] + sin(WorkA)*lOffset2
		lModCFRegCoords[CornR][1] = lModCFRegCoords[CornR][1] + cos(WorkA)*lOffset2
		lModCFRegCoords[CornR][2] = lModCFRegCoords[CornR][2] + sin(WorkA)*lOffset2
		if CornR  = 1 then
			lModPanelCoords[nCorners][1] = lModPanelCoords[CornR][1]
			lModPanelCoords[nCorners][2] = lModPanelCoords[CornR][2]
			lModCFRegCoords[nCorners][1] = lModCFRegCoords[CornR][1]
			lModCFRegCoords[nCorners][2] = lModCFRegCoords[CornR][2]
		endif
	else
		!place here the code of non 90 degre angles
	endif
endif

parameters lModPanelCoords = lModPanelCoords
parameters lModCFRegCoords = lModCFRegCoords

! --- Set the Modified Edge Angles ---------------------------------------------------
for i = 1 to nCorners-1
	if ABS(lModPanelCoords[i][2] - lModPanelCoords[i+1][2]) < eps then
		if lModPanelCoords[i][1] < lModPanelCoords[i+1][1] then
			aModAngles[i] = 0
		else
			aModAngles[i] = 180
		endif
	endif

	if ABS(lModPanelCoords[i][1] - lModPanelCoords[i+1][1]) < eps then
		if lModPanelCoords[i][2] < lModPanelCoords[i+1][2] then
			aModAngles[i] = 90
		else
			aModAngles[i] = 270
		endif
	endif

	if ABS(lModPanelCoords[i][1] - lModPanelCoords[i+1][1]) > eps and ABS(lModPanelCoords[i][2] - lModPanelCoords[i+1][2]) > eps then
		if lModPanelCoords[i][1] < lModPanelCoords[i+1][1] and lModPanelCoords[i][2] < lModPanelCoords[i+1][2] then !0-90
			aModAngles[i] = ATN((lModPanelCoords[i+1][2] - lModPanelCoords[i][2])/(lModPanelCoords[i+1][1] - lModPanelCoords[i][1]))
		endif

		if lModPanelCoords[i][1] > lModPanelCoords[i+1][1] and lModPanelCoords[i][2] < lModPanelCoords[i+1][2] then !90-180
			aModAngles[i] = 90+ATN((lModPanelCoords[i][1] - lModPanelCoords[i+1][1])/(lModPanelCoords[i+1][2] - lModPanelCoords[i][2]))
		endif

		if lModPanelCoords[i][1] > lModPanelCoords[i+1][1] and lModPanelCoords[i][2] > lModPanelCoords[i+1][2] then !180-270
			aModAngles[i] = 180+ATN((lModPanelCoords[i][2] - lModPanelCoords[i+1][2])/(lModPanelCoords[i][1] - lModPanelCoords[i+1][1]))
		endif

		if lModPanelCoords[i][1] < lModPanelCoords[i+1][1] and lModPanelCoords[i][2] > lModPanelCoords[i+1][2] then !270-360
			aModAngles[i] = 270+ATN((lModPanelCoords[i+1][1] - lModPanelCoords[i][1])/(lModPanelCoords[i+1][2] - lModPanelCoords[i][2]))
		endif
	endif
next i

parameters aModAngles = aModAngles

call "ui_cw_panel" parameters all iPanelType = PANEL_CORNER

! --- Parameters for listing ---------------------------------------------------

parameters ac_openingDir = 0

parameters ac_thickness = panelThk

parameters ac_width = rightSide_X - leftSide_X
parameters ac_nominalWidth = ac_width

parameters ac_height = upperSide_Y - downSide_Y
parameters ac_nominalHeight = ac_height

! --- Forced values ---------------------------------------------------

parameters ac_originIsFrameCenter = 0
parameters ac_aSizeIsWithClamp = 1
