
call "FM_types" parameters all

values "gs_detlevel_3D" st3dDetLevelValues
values "gs_detlevel_3D_m" 2, 1, 0

if GLOB_MODPAR_NAME = "gs_detlevel_3D" then
	gs_detlevel_3D_m = 2
	if gs_detlevel_3D = st3dDetLevelValues[2] then gs_detlevel_3D_m = 1
	if gs_detlevel_3D = st3dDetLevelValues[3] then gs_detlevel_3D_m = 0
	parameters gs_detlevel_3D_m = gs_detlevel_3D_m
else
	gs_detlevel_3D = st3dDetLevelValues[1]
	if gs_detlevel_3D_m = 1 then gs_detlevel_3D = st3dDetLevelValues[2]
	if gs_detlevel_3D_m = 0 then gs_detlevel_3D = st3dDetLevelValues[3]
	parameters gs_detlevel_3D = gs_detlevel_3D
endif

if GLOB_MODPAR_NAME = "gs_detlevel_3D" then
	if gs_detlevel_3D_m = 2 then
		gs_resol = 12
		parameters gs_resol = gs_resol
	endif
	if gs_detlevel_3D_m = 1 then
		gs_resol = 4
		parameters gs_resol = gs_resol
	endif
endif

!======================
!Set the number of arms
!======================
gs_panel_num = vardim1(AC_frameDirs)
parameters gs_panel_num = gs_panel_num

if gs_debug then
	dim gs_frameAngle[]
	dim gs_armDirs[][3]
	dim gs_armDirs2[]
	dim gs_panelAngleX[]
	dim gs_panelAngleY[]
	dim gs_arm_angle[]
	
	for i=1 to gs_panel_num
		!================================================
		! Set the angle of frames
		!================================================
		if abs(AC_frameDirs[i][1]) > EPS then
			if AC_frameDirs[i][1] > EPS then
				if abs(AC_frameDirs[i][2]) > EPS then
					if AC_frameDirs[i][2] > EPS then
						gs_frameAngle[i] = atn(AC_frameDirs[i][2]/AC_frameDirs[i][1])
					else
						gs_frameAngle[i] = 360 + atn(AC_frameDirs[i][2]/AC_frameDirs[i][1])
					endif
				else
					if AC_frameDirs[i][1] > 0 then
						gs_frameAngle[i] = 0
	endif
endif
			else
				if abs(AC_frameDirs[i][1]) < EPS then
					gs_frameAngle[i] = 180
				else
					gs_frameAngle[i] = 180 + atn(AC_frameDirs[i][2]/AC_frameDirs[i][1])
				endif
			endif
		else
			if AC_frameDirs[i][2] > 0 then
				gs_frameAngle[i] = 90
			else
				gs_frameAngle[i] = 270
			endif
		endif
	next i

for i=1 to gs_panel_num
		!================================================
		! Set the vektor, and the angle of arms to X axis
		!================================================
	if i < gs_panel_num Then
		gs_armDirs[i][1] = AC_frameDirs[i][1]+AC_frameDirs[i+1][1]
		gs_armDirs[i][2] = AC_frameDirs[i][2]+AC_frameDirs[i+1][2]
		gs_armDirs[i][3] = AC_frameDirs[i][3]+AC_frameDirs[i+1][3]
		gs_armDirs2[i] = (gs_frameAngle[i+1]-gs_frameAngle[i])/2 + gs_frameAngle[i]
	else
		gs_armDirs[i][1] = AC_frameDirs[i][1]+AC_frameDirs[1][1]
		gs_armDirs[i][2] = AC_frameDirs[i][2]+AC_frameDirs[1][2]
		gs_armDirs[i][3] = AC_frameDirs[i][3]+AC_frameDirs[1][3]
		gs_armDirs2[i] = (360-gs_frameAngle[i])/2 + gs_frameAngle[i]
	endif

		!=====================================
		! Set the panels angle to X and Y axis
		!=====================================
		if i = 1 Then
			if ABS(AC_frameDirs[i][1]) > EPS then
				gs_panelAngleY[i] = -atn(AC_frameDirs[i][3]/(AC_frameDirs[i][1]))
				gs_panelAngleY[gs_panel_num] = gs_panelAngleY[i]
	endif
			if ABS(AC_frameDirs[i][2]) > EPS then
				gs_panelAngleX[i] = atn(AC_frameDirs[i][3]/(AC_frameDirs[i][2]))
				gs_panelAngleX[gs_panel_num] = gs_panelAngleX[i]
	endif
		else
			if ABS(AC_frameDirs[i][1]) > EPS then
				gs_panelAngleY[i] = -atn(AC_frameDirs[i][3]/(AC_frameDirs[i][1]))
				gs_panelAngleY[i-1] = gs_panelAngleY[i]
			endif
			if ABS(AC_frameDirs[i][2]) > EPS then
				gs_panelAngleX[i] = atn(AC_frameDirs[i][3]/(AC_frameDirs[i][2]))
				gs_panelAngleX[i-1] = atn(AC_frameDirs[i][3]/(AC_frameDirs[i][2]))
	endif
	endif

		!================================
		! Set the angle of arms to Z axis
		!================================
		gs_arm_angle[i] = 0.00-atn((gs_spider_height)/(gs_spider_rad-gs_base_rad-gs_branch_rad))
next i

	parameters	gs_frameAngle = gs_frameAngle,
				gs_armDirs = gs_armDirs,
				gs_armDirs2 = gs_armDirs2,
				gs_panelAngleX	= gs_panelAngleX,
				gs_panelAngleY	= gs_panelAngleY,
				gs_arm_angle = gs_arm_angle,
				gs_baseAngle = gs_baseAngle
endif


