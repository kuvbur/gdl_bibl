
!! Solar Shade Curved 01

if gs_shadow=1 then SHADOW ON
if gs_shadow=0 then SHADOW OFF

if gs_detlevel_3D_m = DLEV3D_OFF then
 goto 1000
else
 mul -1,1,1
 add -rad_f-fw/2,fw/2,0
 gosub 10
 gosub 20
 goto 1000
endif

10:
! *** Front frame
set material framemat
if front then
omega=(((fw/2)*180)/PI)/(rad_f)

x1_s1=xelt+rad_f*COS(alfa2+omega)
y1_s1=rad_f*SIN(alfa2+omega)

x2_s1=xelt+rad_r*COS(alfa2+omega)
y2_s1=rad_r*SIN(alfa2+omega)

x1_d1=xelt+rad_f*COS(alfa2+alfa-omega)
y1_d1=rad_f*SIN(alfa2+alfa-omega)

x2_d1=xelt+rad_r*COS(alfa2+alfa-omega)
y2_d1=rad_r*SIN(alfa2+alfa-omega)

cxj=( ( -y1_s1 * (x2_s1-x1_s1) ) / (y2_s1-y1_s1) ) + x1_s1
cyj=( ((y2_s1-y1_s1)/(x2_s1-x1_s1))*(-x1_s1)) + y1_s1
cxb=( ( -y1_d1 * (x2_d1-x1_d1) ) / (y2_d1-y1_d1) ) + x1_d1
cyb=( ((y2_d1-y1_d1)/(x2_d1-x1_d1))*(-x1_d1)) + y1_d1

if iSolarFrameType = FRAMETYPE_CURVED then tc = 5 else tc = alfa_step

i=0
x2=(cos(alfa2+i)*b)+(cos(alfa2+i)*a*cos(tang))
y2=(sin(alfa2+i)*b)+(sin(alfa2+i)*a*cos(tang))
z2=sin(tang)*a
PUT xelt+x2,y2,z2,0
PUT xelt+x2,y2,z2,0
for i=0 to alfa step tc
 x2=(cos(alfa2+i)*b)+(cos(alfa2+i)*a*cos(tang))
 y2=(sin(alfa2+i)*b)+(sin(alfa2+i)*a*cos(tang))
 z2=sin(tang)*a
 PUT xelt+x2,y2,z2,0
next i
x2=(cos(alfa2+alfa)*b)+(cos(alfa2+alfa)*a*cos(tang))
y2=(sin(alfa2+alfa)*b)+(sin(alfa2+alfa)*a*cos(tang))
z2=sin(tang)*a
PUT xelt+x2,y2,z2,0
x2=(cos(alfa2+alfa+omega)*b)+(cos(alfa2+alfa+omega)*a*cos(tang))
y2=(sin(alfa2+alfa+omega)*b)+(sin(alfa2+alfa+omega)*a*cos(tang))
z2=sin(tang)*a
PUT xelt+x2,y2,z2,0

addx -xelt
cutplane cxj,cyj,cz,0
cutplane cxb,cyb,cz,1

TUBE 4,NSP/4,51,
	fw/2,fh/2,0,
	fw/2,-fh/2,0,
	-fw/2,-fh/2,0,
	-fw/2,fh/2,0,
	GET (NSP)

cutend
cutend
del 1
endif

! *** Rear frame
if rear then
omega=(((fw/2)*180)/PI)/(rad_r)

x1_s1=xelt+rad_f*COS(alfa2+omega)
y1_s1=rad_f*SIN(alfa2+omega)

x2_s1=xelt+rad_r*COS(alfa2+omega)
y2_s1=rad_r*SIN(alfa2+omega)

x1_d1=xelt+rad_f*COS(alfa2+alfa-omega)
y1_d1=rad_f*SIN(alfa2+alfa-omega)

x2_d1=xelt+rad_r*COS(alfa2+alfa-omega)
y2_d1=rad_r*SIN(alfa2+alfa-omega)

cxj=( ( -y1_s1 * (x2_s1-x1_s1) ) / (y2_s1-y1_s1) ) + x1_s1
cyj=( ((y2_s1-y1_s1)/(x2_s1-x1_s1))*(-x1_s1)) + y1_s1
cxb=( ( -y1_d1 * (x2_d1-x1_d1) ) / (y2_d1-y1_d1) ) + x1_d1
cyb=( ((y2_d1-y1_d1)/(x2_d1-x1_d1))*(-x1_d1)) + y1_d1

if iSolarFrameType = FRAMETYPE_CURVED then tc = 5 else tc = alfa_step
i=0
PUT xelt+rad_r*COS(alfa2+i),rad_r*SIN(alfa2+i),0,0
PUT xelt+rad_r*COS(alfa2+i),rad_r*SIN(alfa2+i),0,0
for i=0 to alfa step tc
 PUT xelt+rad_r*COS(alfa2+i),rad_r*SIN(alfa2+i),0,0
next i
PUT xelt+rad_r*COS(alfa2+alfa),rad_r*SIN(alfa2+alfa),0,0
PUT xelt+rad_r*COS(alfa2+alfa+omega),rad_r*SIN(alfa2+alfa+omega),0,0

addx -xelt
cutplane cxj,cyj,cz,0
cutplane cxb,cyb,cz,1

TUBE 4,NSP/4,51,
	fw/2,fh/2,0,
	fw/2,-fh/2,0,
	-fw/2,-fh/2,0,
	-fw/2,fh/2,0,
	GET (NSP)

cutend
cutend
del 1
endif

! *** Arms
for i=alfa_step to alfa-alfa_step step alfa_step
	x1=(rad_r+(fw/2))*COS(alfa2+i)
	y1=(rad_r+(fw/2))*SIN(alfa2+i)
	x2=(cos(alfa2+i)*b)+(cos(alfa2+i)*a*cos(tang))
	y2=(sin(alfa2+i)*b)+(sin(alfa2+i)*a*cos(tang))
	z2=sin(tang)*a

	TUBE 4,5,0,
		fw/2,fh/2,0,
		fw/2,-fh/2,0,
		-fw/2,-fh/2,0,
		-fw/2,fh/2,0,
		x1/2,y1/2,0,0,
		x1,y1,0,0,
		(x1+x2)/2,(y1+y2)/2,z2/2,0,
		x2,y2,z2,0,
		x2*2,y2*2,z2*2,0
next i

! *** Left
if lf then
x1=(rad_r-(fw/2))*COS(alfa2)
y1=(rad_r-(fw/2))*SIN(alfa2)
x2=(cos(alfa2)*b)+(cos(alfa2)*(a+fw/2)*cos(tang))
y2=(sin(alfa2)*b)+(sin(alfa2)*(a+fw/2)*cos(tang))
z2=sin(tang)*(a+fw/2)

TUBE 4,5,51,
	fw/2,fh/2,0,
	fw/2,-fh/2,0,
	-fw/2,-fh/2,0,
	-fw/2,fh/2,0,
	x1/2,y1/2,0,0,
	x1,y1,0,0,
	(x1+x2)/2,(y1+y2)/2,z2/2,0,
	x2,y2,z2,0,
	x2*2,y2*2,z2*2,0
endif

! *** Right
if rf then
x1=(rad_r-(fw/2))*COS(alfa2+alfa)
y1=(rad_r-(fw/2))*SIN(alfa2+alfa)
x2=(cos(alfa2+alfa)*b)+(cos(alfa2+alfa)*(a+fw/2)*cos(tang))
y2=(sin(alfa2+alfa)*b)+(sin(alfa2+alfa)*(a+fw/2)*cos(tang))
z2=sin(tang)*(a+fw/2)

TUBE 4,5,51,
	fw/2,fh/2,0,
	fw/2,-fh/2,0,
	-fw/2,-fh/2,0,
	-fw/2,fh/2,0,
	x1/2,y1/2,0,0,
	x1,y1,0,0,
	(x1+x2)/2,(y1+y2)/2,z2/2,0,
	x2,y2,z2,0,
	x2*2,y2*2,z2*2,0
endif
return


20:
! *** Louvres
set material lomat
for k=0 to arms

 it=k*alfa_step
 p1=alfa2+it
 p2=alfa2+it+alfa_step

 for j=1 to numl

  omega=(((fw/2)*180)/PI)/(rad_r+(j*lax)-(ldepth/2)+(fw/2))

  x1_s1=xelt+rad_f*COS(p1+omega)
  y1_s1=rad_f*SIN(p1+omega)
  x2_s1=xelt+rad_r*COS(p1+omega)
  y2_s1=rad_r*SIN(p1+omega)
  x1_d1=xelt+rad_f*COS(p2-omega)
  y1_d1=rad_f*SIN(p2-omega)
  x2_d1=xelt+rad_r*COS(p2-omega)
  y2_d1=rad_r*SIN(p2-omega)

  aa=((j*lax)-(ldepth/2)+(fw/2))
  bb=b

  x1o=xelt+((cos(p1)*bb)+(cos(p1)*aa*cos(tang)))
  y1o=(sin(p1)*bb)+(sin(p1)*aa*cos(tang))
  z1o=sin(tang)*aa
  x2=xelt+((cos(p2+omega)*bb)+(cos(p2+omega)*aa*cos(tang)))
  y2=(sin(p2+omega)*bb)+(sin(p2+omega)*aa*cos(tang))
  z2=sin(tang)*aa
  x2o=xelt+((cos(p2)*bb)+(cos(p2)*aa*cos(tang)))
  y2o=(sin(p2)*bb)+(sin(p2)*aa*cos(tang))
  z2o=sin(tang)*aa
  aka=alfa2+it+alfa_step/100
  x2b=xelt+((cos(aka)*bb)+(cos(aka)*aa*cos(tang)))
  y2b=(sin(aka)*bb)+(sin(aka)*aa*cos(tang))
  z2b=sin(tang)*aa

  if alfa2+it=90 then
	swp=x1_s1
	x1_s1=x2_s1
	x2_s1=swp
  endif

  cxj=( ( -y1_s1 * (x2_s1-x1_s1) ) / (y2_s1-y1_s1) ) + x1_s1
  cyj=( ((y2_s1-y1_s1)/(x2_s1-x1_s1))*(-x1_s1)) + y1_s1
  cxb=( ( -y1_d1 * (x2_d1-x1_d1) ) / (y2_d1-y1_d1) ) + x1_d1
  cyb=( ((y2_d1-y1_d1)/(x2_d1-x1_d1))*(-x1_d1)) + y1_d1

  addx -xelt
  cutplane cxj,cyj,cz,0
  cutplane cxb,cyb,cz,1

  pc=4
  gosub 100

  TUBE pc,4,51,
	GET (NSP),
	x1o,y1o,z1o,lang,
	x2b,y2b,z2b,lang,
	x2o,y2o,z2o,lang,
	x2,y2,z2,lang

  cutend
  cutend
  del 1

 next j
next k
return

! *** Actual louvre in the stack
100:
if gs_detlevel_3D_m = DLEV3D_SIMPLE then
	PUT 0-(ldepth/2),lt/2,0,ldepth/2,lt/2,0,ldepth/2,-(lt/2),0,0-(ldepth/2),0-(lt/2),0
else
	if iLouvreStyle = LOUVRESTYLE_1 then
		PUT 0-(ldepth/2),0,1 ,0,lt/2,1 ,ldepth/2,0,1, 0,0-(lt/2),1
	else
		if iLouvreStyle = LOUVRESTYLE_2 then
			PUT 0-(ldepth/2),-(lt/2),0,-ldepth/9,lt/2,1,ldepth/2,lt/2,0,ldepth/9,0-(lt/2),1
		else ! Style 3
			pc=10
			PUT 0-(ldepth/2),0,1,-ldepth/3,lt/3,1,-ldepth/6,lt/2,1,
				ldepth/6,lt/2,1,ldepth/3,lt/3,1,ldepth/2,0,1,
				ldepth/3,-lt/3,1,ldepth/6,-lt/2,1,-ldepth/6,-lt/2,1,
				-ldepth/3,-lt/3,1
		endif
	endif
endif
return

! *** End
1000:
del top
end
