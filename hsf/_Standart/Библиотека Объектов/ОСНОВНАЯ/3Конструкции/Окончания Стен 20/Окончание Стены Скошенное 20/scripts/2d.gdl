
!<ZsK>

if WALL_SKINS_NUMBER > 0 then
	! Visible Egdes of Top and Bottom Line of Wall

	mask_2D=0
	macro_bottomLinePen = WallbottomLinePen
	macro_bottomLineLineType = WallbottomLineType
else
	mask_2D=1
	macro_bottomLinePen = WallLinePen
	macro_bottomLineLineType = WallLineType
endif


! ==============================================================================
rot2 -90

! === Hotspot Editing of End Point

! --- replace AC hotspots at the ends ---
call "Resize Wall End" PARAMETERS GS_HotspotUnIDBegin = 20000,
		cutWidthAngle = cutWidthAngle, AC_CutWidth = AC_CutWidth,
		r0 = r0, wallIncl = wallIncl, onWallBeg = onWallBeg

unID=1
hotspot2 0, endPoint, unID, gs_end_overhang, 1+128: unID=unID+1
hotspot2 1, endPoint, unID, gs_end_overhang, 3: unID=unID+1
hotspot2 -gs_end_overhang, endPoint, unID, gs_end_overhang, 2: unID=unID+1

! === Wall End Cap_Chamfer

line_type WallLineType
fill WallFillType
pen WallLinePen

poly2_b{2} 4, 1+2+4+(8+16)*WallFillOrientation+32, WallFillPen, WallFillBackPen,
		0, 0, 0,
		0,                yWallStart, 0+32,
		0,                yWallEnd,   mask_2D+32,
		-gs_end_overhang, endPoint,   mask_2D+32,
		0,                yWallStart, -1

if WALL_SKINS_NUMBER > 0 then
	line_property 2
	! Bottom Line
	line2 0, yWallStart, -gs_end_overhang, endPoint
	! Top Line
	pen WallbottomLinePen
	line_type WallbottomLineType
	line2 0, yWallEnd, -gs_end_overhang, endPoint
endif

! === Wall End Cap_PART of RECTANGLE and END LINE
if gs_useEndLine_2D = 0 then
	WallEndLinePen = 0
endif


for i = 0 to 1
	call "SkinRect" PARAMETERS startX = 0, startY = yWallStart,
			endX = length, endY = yWallEnd,
			innerRadius = r0, outerRadius = r0 + WALL_THICKNESS,
			incAngle = wallIncl,
			ac_wall_slant_angle1 = ac_wall_slant_angle1, ac_wall_slant_angle2 = ac_wall_slant_angle2,
			trapType = 1,
			fillPen = WallFillPen, fillBGPen = WallFillBackPen,
			fillType = 1 - i,
			bLocalFill = WallFillOrientation,
			startLinePen = 0,
			endLinePen =WallEndLinePen, endLineCont = 0,
			bottomLinePen= macro_bottomLinePen,
			bottomLineLineType = macro_bottomLineLineType,
			bottomLineCont = 1,
			topLinePen= WallLinePen,
			topLineLineType =WallLineType,
			topLineCont = 1
next i


! --- draw view and overhead skins ---
currBeg = 0
for i = 1 to WALL_SKINS_NUMBER
	skinThickness = WALL_SKINS_PARAMS[i][2]
	startSkin = currBeg
	endSkin = currBeg + skinThickness

	if (i < iLeftmost or i > iRightmost) and (endSkin > EPS and startSkin + EPS < endSkin) then

		startLinePen	= WALL_SKINS_PARAMS[i][11]
		bottomLinePen	= WALL_SKINS_PARAMS[i][9]
		topLinePen		= WALL_SKINS_PARAMS[i][7]

		if i = iLeftmost - 1 then
			pen startLinePen
			line_type WALL_SKINS_PARAMS[i][14]
			line_property 0
			line2 -gs_end_overhang,startSkin, -gs_end_overhang,endSkin+abs(yWallEnd-yWallStart)

			if (not(bPointRefSide) exor SYMB_MIRRORED) and round_int(WALL_SKINS_PARAMS[i][13]) = 1 then
				line2 0,startSkin, 0,endSkin
			endif

			startLinePen	= 0
			bottomLinePen	= 0
		endif
		if i = iRightmost + 1 then
			pen startLinePen
			line_type WALL_SKINS_PARAMS[i][14]
			line_property 0

			if (bPointRefSide exor SYMB_MIRRORED) and round_int(WALL_SKINS_PARAMS[i][13]) = 1 then
				line2 0,startSkin, 0,endSkin
			endif

			topLinePen		= 0
		endif

		line_type 1
		if abs(WALL_SKINS_PARAMS[i][13] - 1) < EPS then
			fillPattern = WALL_SKINS_PARAMS[i][1]
		else
			fillPattern = 0
		endif
		call "SkinRect" PARAMETERS startX = -gs_end_overhang, startY = startSkin,
				endX = length, endY = endSkin,
				innerRadius = r0, incAngle = wallIncl,
				trapType = 0,
				fillPattern = fillPattern, fillPen = WALL_SKINS_PARAMS[i][4], fillBGPen = WALL_SKINS_PARAMS[i][5],
				fillType = 2,
				bLocalFill = WALL_SKINS_PARAMS[i][12], bCoverFill = 1,
				startLinePen	= startLinePen,		startLineLineType	= WALL_SKINS_PARAMS[i][14],	startLineCont	= 0,
				bottomLinePen	= bottomLinePen,	bottomLineLineType	= WALL_SKINS_PARAMS[i][10],	bottomLineCont	= 0,
				topLinePen		= topLinePen,		topLineLineType		= WALL_SKINS_PARAMS[i][8],	topLineCont		= 0

	endif

	currBeg = currBeg + skinThickness

next i
