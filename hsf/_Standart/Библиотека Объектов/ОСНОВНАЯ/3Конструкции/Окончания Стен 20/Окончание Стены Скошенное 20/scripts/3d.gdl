
!<ZsK>

if gs_detlevel_3D_m = DLEV3D_OFF then end

	elevation = 0
	if AC_fit_to_wall_height then
		ZZYZX = WALL_HEIGHT
		if ABS(ac_wall_slant_angle1) > EPS then
			elevation = -GLOB_ELEVATION / sin (ac_wall_slant_angle1)
		endif
	endif

	if gs_useWallPen_3D then
		wallPen_3D = WALL_VIEW_PEN
	else
		wallPen_3D = gs_wallPen_3D
	endif

	if gs_useWallMat then
		wallMatLeft = 	WALL_MAT_A
		wallMatRight = 	WALL_MAT_B
		wallMatVert = 	WALL_MAT_EDGE
		wallMatHoriz = 	WALL_MAT_EDGE
	else
		wallMatLeft = 	matLeft
		wallMatRight = 	matRight
		wallMatVert = 	matEdge
		wallMatHoriz = 	matEdge
	endif

	dim trafo_array[][]

	ROTz -90
	numTrafo = 1
	trafo_array[numTrafo][1] = TRAFO_ROT_Z
	trafo_array[numTrafo][2] = -90

	ADDz elevation
	numTrafo = numTrafo + 1
	trafo_array[numTrafo][1] = TRAFO_ADD_Z
	trafo_array[numTrafo][2] = elevation

	pen wallPen_3D

	! Used for the cut part in the Section/Elevation window
	sect_fill WallFillType, WallFillBackPen, WallFillPen, WallLinePen, WallLineType

	if AC_CutWidth > EPS then
		bDoCut = 1
		for i = 1 to 2

			if ABS(GLOB_ELEVATION) < EPS or AC_fit_to_wall_height=1 then

					if ZZYZX < WALL_HEIGHT then
						tempHeight1 = ZZYZX
						mask1_WallHeight = 0
					else
						tempHeight1 = WALL_HEIGHT
						mask1_WallHeight = 1
					endif

						tempHeight2 = ZZYZX - WALL_HEIGHT
						mask1_BottomLine = 1

					if ABS(ZZYZX - WALL_HEIGHT) < EPS then tempEdge13 = 5
					if ZZYZX < WALL_HEIGHT then tempEdge13 = 5*gs_useEndLine_3D

					call "SkinRect" PARAMETERS trafo_array = trafo_array, numTrafo = numTrafo, gs_useWallMat = gs_useWallMat,
							startX = 0, startY = 0,
							endX = length, endY = WALL_THICKNESS,
							innerRadius = r0,
							incAngle = wallIncl,
							ac_wall_slant_angle1 = ac_wall_slant_angle1, ac_wall_slant_angle2 = ac_wall_slant_angle2,
							trapType = 1,
							bDoCut = bDoCut, height = tempHeight1,
							edge1 = 8 + 5, edge2 = 8 + 7*gs_useEndLine_3D, edge3 = 8 + tempEdge13 + 2*gs_useEndLine_3D, edge4 = 8,
							matLeft = wallMatLeft, matRight = wallMatRight, matVert = wallMatVert, matHoriz = wallMatHoriz

					if ZZYZX > WALL_HEIGHT then
						ADDz WALL_HEIGHT-GLOB_ELEVATION
						numOwnTrafo = 1
						numTrafo = numTrafo + 1
						trafo_array[numTrafo][1] = TRAFO_ADD_Z
						trafo_array[numTrafo][2] = WALL_HEIGHT-GLOB_ELEVATION

						call "SkinRect" PARAMETERS trafo_array = trafo_array, numTrafo = numTrafo, gs_useWallMat = gs_useWallMat,
								startX = 0, startY = 0,
								endX = length, endY = WALL_THICKNESS,
								innerRadius = r0,
								incAngle = wallIncl,
								ac_wall_slant_angle1 = ac_wall_slant_angle1, ac_wall_slant_angle2 = ac_wall_slant_angle2,
								trapType = 1,
								bDoCut = bDoCut, height = tempHeight2,
								edge1 = 8, edge2 = 15 , edge3 = 15, edge4 = 8,
								matLeft = wallMatLeft, matRight = wallMatRight, matVert = wallMatVert, matHoriz = wallMatHoriz

						numTrafo = numTrafo - numOwnTrafo
						del 1
					endif
			endif


			if GLOB_ELEVATION > EPS and AC_fit_to_wall_height=0 then

					if (ZZYZX+GLOB_ELEVATION) <= WALL_HEIGHT then
						tempHeight1 = ZZYZX
					else
						tempHeight1 = WALL_HEIGHT-GLOB_ELEVATION
					endif

					if (ZZYZX+GLOB_ELEVATION) < WALL_HEIGHT then
						mask1_WallHeight = 0
					else
						mask1_WallHeight = 1
					endif

					if ABS(ZZYZX+GLOB_ELEVATION - WALL_HEIGHT) < EPS then tempEdge13 = 5 + 2*gs_useEndLine_3D
					if (ZZYZX+GLOB_ELEVATION) < WALL_HEIGHT then tempEdge13 = 7*gs_useEndLine_3D


						tempHeight2 = (ZZYZX+GLOB_ELEVATION)-WALL_HEIGHT
						mask1_BottomLine=0

					call "SkinRect" PARAMETERS trafo_array = trafo_array, numTrafo = numTrafo, gs_useWallMat = gs_useWallMat,
							startX = 0, startY = 0,
							endX = length, endY = WALL_THICKNESS,
							innerRadius = r0,
							incAngle = wallIncl,
							ac_wall_slant_angle1 = ac_wall_slant_angle1, ac_wall_slant_angle2 = ac_wall_slant_angle2,
							trapType = 1,
							bDoCut = bDoCut, height = tempHeight1,
							edge1 = 8 + 5*gs_useEndLine_3D, edge2 = 8 + 7*gs_useEndLine_3D, edge3 = 8 + tempEdge13, edge4 = 8,
							matLeft = wallMatLeft, matRight = wallMatRight, matVert = wallMatVert, matHoriz = wallMatHoriz

					if (ZZYZX+GLOB_ELEVATION) > WALL_HEIGHT then
						ADDz WALL_HEIGHT-GLOB_ELEVATION
						numOwnTrafo = 1
						numTrafo = numTrafo + 1
						trafo_array[numTrafo][1] = TRAFO_ADD_Z
						trafo_array[numTrafo][2] = WALL_HEIGHT-GLOB_ELEVATION

						call "SkinRect" PARAMETERS trafo_array = trafo_array, numTrafo = numTrafo, gs_useWallMat = gs_useWallMat,
								startX = 0, startY = 0,
								endX = length, endY = WALL_THICKNESS,
								innerRadius = r0,
								incAngle = wallIncl,
								ac_wall_slant_angle1 = ac_wall_slant_angle1, ac_wall_slant_angle2 = ac_wall_slant_angle2,
								trapType = 1,
								bDoCut = bDoCut, height = tempHeight2,
								edge1 = 8, edge2 = 15 , edge3 = 15, edge4 = 8,
								matLeft = wallMatLeft, matRight = wallMatRight, matVert = wallMatVert, matHoriz = wallMatHoriz

						numTrafo = numTrafo - numOwnTrafo
						del 1
					endif

			endif


			if GLOB_ELEVATION < -EPS and AC_fit_to_wall_height=0 then

						tempHeight1 = ABS(GLOB_ELEVATION)

					if ZZYZX >= WALL_HEIGHT + ABS(GLOB_ELEVATION) then
						tempHeight2 = WALL_HEIGHT
						mask1_WallHeight = 1
					else
						tempHeight2 = ZZYZX-ABS(GLOB_ELEVATION)
						tempEdge23 = 7*gs_useEndLine_3D
						mask1_WallHeight = 0
					endif

						tempHeight3 = ZZYZX - (WALL_HEIGHT + ABS(GLOB_ELEVATION))
						if ABS (ZZYZX - (WALL_HEIGHT + ABS(GLOB_ELEVATION))) < EPS then tempEdge23 = 5 + 2*gs_useEndLine_3D
						mask1_BottomLine = 1

					call "SkinRect" PARAMETERS trafo_array = trafo_array, numTrafo = numTrafo, gs_useWallMat = gs_useWallMat,
							startX = 0, startY = 0,
							endX = length, endY = WALL_THICKNESS,
							innerRadius = r0,
							incAngle = wallIncl,
							ac_wall_slant_angle1 = ac_wall_slant_angle1, ac_wall_slant_angle2 = ac_wall_slant_angle2,
							trapType = 1,
							bDoCut = bDoCut, height = tempHeight1,
							edge1 = 13, edge2 = 15 , edge3 = 8, edge4 = 8,
							matLeft = wallMatLeft, matRight = wallMatRight, matVert = wallMatVert, matHoriz = wallMatHoriz

					ADDz ABS(GLOB_ELEVATION)
					numOwnTrafo = 1
					numTrafo = numTrafo + 1
					trafo_array[numTrafo][1] = TRAFO_ADD_Z
					trafo_array[numTrafo][2] = ABS(GLOB_ELEVATION)

					call "SkinRect" PARAMETERS trafo_array = trafo_array, numTrafo = numTrafo, gs_useWallMat = gs_useWallMat,
							startX = 0, startY = 0,
							endX = length, endY = WALL_THICKNESS,
							innerRadius = r0,
							incAngle = wallIncl,
							ac_wall_slant_angle1 = ac_wall_slant_angle1, ac_wall_slant_angle2 = ac_wall_slant_angle2,
							trapType = 1,
							bDoCut = bDoCut, height = tempHeight2,
							edge1 = 8, edge2 = 8 + 7*gs_useEndLine_3D , edge3 = 8 + tempEdge23, edge4 = 8,
							matLeft = wallMatLeft, matRight = wallMatRight, matVert = wallMatVert, matHoriz = wallMatHoriz

						if ZZYZX > WALL_HEIGHT + ABS(GLOB_ELEVATION) then
							ADDz WALL_HEIGHT
							numOwnTrafo = numOwnTrafo + 1
							numTrafo = numTrafo + 1
							trafo_array[numTrafo][1] = TRAFO_ADD_Z
							trafo_array[numTrafo][2] = WALL_HEIGHT

							call "SkinRect" PARAMETERS trafo_array = trafo_array, numTrafo = numTrafo, gs_useWallMat = gs_useWallMat,
									startX = 0, startY = 0,
									endX = length, endY = WALL_THICKNESS,
									innerRadius = r0,
									incAngle = wallIncl,
									ac_wall_slant_angle1 = ac_wall_slant_angle1, ac_wall_slant_angle2 = ac_wall_slant_angle2,
									trapType = 1,
									bDoCut = bDoCut, height = tempHeight3,
									edge1 = 8, edge2 = 15 , edge3 = 15, edge4 = 8,
									matLeft = wallMatLeft, matRight = wallMatRight, matVert = wallMatVert, matHoriz = wallMatHoriz
							del 1
						endif

					numTrafo = numTrafo - numOwnTrafo
					del 1
			endif

		bDoCut = 0
		next i
	endif

! === Model of Wall End Cap ====================================================
! --- replace AC hotspots at the ends ---
	call "Resize Wall End" PARAMETERS GS_HotspotUnIDBegin = 20000,
			cutWidthAngle = cutWidthAngle, AC_CutWidth = AC_CutWidth,
			r0 = r0, wallIncl = wallIncl, onWallBeg = onWallBeg,
			zzyzx = zzyzx

	unID=1
	hotspot 0, endPoint, 0, unID, gs_end_overhang, 1+128: unID=unID+1
	hotspot 1, endPoint, 0, unID, gs_end_overhang, 3: unID=unID+1
	hotspot -gs_end_overhang, endPoint, 0, unID, gs_end_overhang, 2: unID=unID+1

	hotspot 0, endPoint, ZZYZX, unID, gs_end_overhang, 1+128: unID=unID+1
	hotspot 1, endPoint, ZZYZX, unID, gs_end_overhang, 3: unID=unID+1
	hotspot -gs_end_overhang, endPoint, ZZYZX, unID, gs_end_overhang, 2: unID=unID+1

	if not(AC_fit_to_wall_height) then

		hotspot 0, 0, 0, unID, ZZYZX, 1+128:unID=unID+1
		hotspot 0, 0, -1, unID, ZZYZX, 3:unID=unID+1
		hotspot 0, 0, ZZYZX, unID, ZZYZX, 2:unID=unID+1

		hotspot 0, WALL_THICKNESS, 0, unID, ZZYZX, 1+128:unID=unID+1
		hotspot 0, WALL_THICKNESS, -1, unID, ZZYZX, 3:unID=unID+1
		hotspot 0, WALL_THICKNESS, ZZYZX, unID, ZZYZX, 2:unID=unID+1

	endif

! Flip / Mirror

if not(bPointRefSide) and not(SYMB_MIRRORED) or bPointRefSide and SYMB_MIRRORED then
	mask1Flip= 1
	mask2Flip= 0
endif

if not(bPointRefSide) and SYMB_MIRRORED or bPointRefSide and not(SYMB_MIRRORED) then
	mask1Flip= 0
	mask2Flip= 1
endif

	if abs(ac_wall_slant_angle1 - ac_wall_slant_angle2) < EPS then
		if SYMB_MIRRORED then
			tiltAngle = 90-ac_wall_slant_angle1
			zModifier = -tan(tiltAngle) * WALL_THICKNESS
		else
			tiltAngle = -(90-ac_wall_slant_angle1)
			zModifier = 0
		endif
		vert 0, 0, zModifier													!#1
		vert 0, WALL_THICKNESS, tan(tiltAngle) * WALL_THICKNESS + zModifier		!#2
		vert -gs_end_overhang, endPoint, tan(tiltAngle) * endPoint + zModifier	!#3

		vert 0, 0, ZZYZX + zModifier										!#4
		vert 0, WALL_THICKNESS, ZZYZX + tan(tiltAngle) * WALL_THICKNESS + zModifier		!#5
		vert -gs_end_overhang, endPoint, ZZYZX + tan(tiltAngle) * endPoint + zModifier	!#6

		edge 1,3,-1,-1,0	!#1
		edge 3,2,-1,-1,0	!#2
		edge 2,1,-1,-1,mask1_BottomLine	!#3


		edge 1,4,-1,-1,mask2Flip	!#4
		edge 4,6,-1,-1,0	!#5
		edge 6,3,-1,-1,0	!#6

		edge 2,5,-1,-1,mask1Flip	!#7
		edge 5,6,-1,-1,0	!#8

		edge 5,4,-1,-1,mask1_WallHeight !#9

		material wallMatHoriz
			PGON 3, 0, 0, 1,2,3		!#Bottom
		material wallMatLeft
			PGON 4, 0, 0, 4,5,6,-1	!#Side1
		material wallMatRight
			PGON 4, 0, 0, 2,7,8,6	!#Side2
		material wallMatHoriz
			PGON 4, 0, 0,-3,7,9,-4	!#Vert
			PGON 3, 0, 0, -9,8,-5	!#Top

		gosub "wallTextureCoor"
	endif

del 2


end


"wallTextureCoor":
	if gs_useWallMat then
		for iTrafo = numTrafo to 1 step -1
			if abs(trafo_array[iTrafo][1] - TRAFO_ADD_X) < EPS then
				addx -trafo_array[iTrafo][2]
			endif
			if abs(trafo_array[iTrafo][1] - TRAFO_ADD_Y) < EPS then
				addy -trafo_array[iTrafo][2]
			endif
			if abs(trafo_array[iTrafo][1] - TRAFO_ADD_Z) < EPS then
				addz -trafo_array[iTrafo][2]
			endif
			if abs(trafo_array[iTrafo][1] - TRAFO_ROT_X) < EPS then
				rotx -trafo_array[iTrafo][2]
			endif
			if abs(trafo_array[iTrafo][1] - TRAFO_ROT_Y) < EPS then
				roty -trafo_array[iTrafo][2]
			endif
			if abs(trafo_array[iTrafo][1] - TRAFO_ROT_Z) < EPS then
				rotz -trafo_array[iTrafo][2]
			endif
			if abs(trafo_array[iTrafo][1] - TRAFO_MUL_X) < EPS then
				mulx 1/trafo_array[iTrafo][2]
			endif
			if abs(trafo_array[iTrafo][1] - TRAFO_MUL_Y) < EPS then
				muly 1/trafo_array[iTrafo][2]
			endif
			if abs(trafo_array[iTrafo][1] - TRAFO_MUL_Z) < EPS then
				mulz 1/trafo_array[iTrafo][2]
			endif
		next iTrafo

		base
		vert WALL_TEXTURE_WRAP[3], WALL_TEXTURE_WRAP[4], WALL_TEXTURE_WRAP[5]
		vert WALL_TEXTURE_WRAP[6], WALL_TEXTURE_WRAP[7], WALL_TEXTURE_WRAP[8]
		vert WALL_TEXTURE_WRAP[9], WALL_TEXTURE_WRAP[10], WALL_TEXTURE_WRAP[11]
		vert WALL_TEXTURE_WRAP[12], WALL_TEXTURE_WRAP[13], WALL_TEXTURE_WRAP[14]
		coor{2} WALL_TEXTURE_WRAP[1], WALL_TEXTURE_WRAP[2], -1, -2, -3, -4
		body 1

		for iTrafo = 1 to numTrafo
			if (trafo_array[iTrafo][1] > 0) and (trafo_array[iTrafo][1] < 10) then
				del 1
			endif
		next iTrafo
	endif
return
