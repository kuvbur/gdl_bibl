
unID = 1
hLineID = 1000

! --- Rotated model (projected) ------------------------------------------------

if xRotation > 0 or yRotation > 0 then
	pen gs_cont_pen
	hotspot2 0, 0, unID: unID=unID+1
	project2{2} 3, 270, 32+3, gs_back_pen, 0, 0, 90
	end
endif


! --- House Contours -----------------------------------------------------------

pen gs_cont_pen
if iRoofType = 0 then ! --- Flat roof ---
	poly2_b 4, 1+4, gs_back_pen, gs_back_pen,
			-a/2,  refLength/2,															15,
			 a/2,  refLength/2 + a*(tan(90-endAngleLeft)),								15,
			 a/2, -refLength/2 - a*(tan(90-endAngleRight)),								15,
			-a/2, -refLength/2,															15
endif

if iRoofType = 1 or iRoofType = 3 then ! --- Pitched Roof or Mansard ---
	poly2_b 6, 1+4, gs_back_pen, gs_back_pen,
			-a/2,  refLength/2,															15,
			 0,    refLength/2 + a/2 * (tan(90-endAngleLeft)) + overhangModifyLeft,		15,
			 a/2,  refLength/2 + a*(tan(90-endAngleLeft)),								15,
			 a/2, -refLength/2 - a*(tan(90-endAngleRight)),								15,
			 0,   -refLength/2 - a/2 * (tan(90-endAngleRight)) - overhangModifyRight,	15,
			-a/2, -refLength/2,															15

	line2 0, refLength/2 + a/2 * (tan(90-endAngleLeft)) - hipModifyLeft + overhangModifyLeft, 0, -refLength/2 - a/2 * (tan(90-endAngleRight)) + hipModifyRight - overhangModifyRight

	if bHipLeft then
		line2 -a/2, refLength/2, 0, refLength/2 + a/2 * (tan(90-endAngleLeft)) - hipModifyLeft
		line2  a/2, refLength/2 + a*(tan(90-endAngleLeft)), 0, refLength/2 + a/2 * (tan(90-endAngleLeft)) - hipModifyLeft
	endif

	if bHipRight then
		line2 -a/2, -refLength/2, 0, -refLength/2 - a/2 * (tan(90-endAngleRight)) + hipModifyRight
		line2  a/2, -refLength/2 - a * (tan(90-endAngleRight)), 0, -refLength/2 - a/2 * (tan(90-endAngleRight)) + hipModifyRight
	endif

	if iRoofType = 3 then ! --- Mansard ---
		line2	-a/2 + mansardDist,  refLength/2 + (not (bHipLeft))  * mansardDist * tan (90-endAngleLeft)  - (bHipLeft)  * mansardDist * tan (endAngleLeft/2),
				-a/2 + mansardDist, -refLength/2 - (not (bHipRight)) * mansardDist * tan (90-endAngleRight) + (bHipRight) * mansardDist * tan (endAngleRight/2)
		line2	 a/2 - mansardDist,  refLength/2 + (not (bHipLeft))  * (a - mansardDist) * tan (90-endAngleLeft)  - (bHipLeft)  * (mansardDist * tan (endAngleLeft /2) - (a - 2*mansardDist) * tan (90-endAngleLeft)),
				 a/2 - mansardDist, -refLength/2 - (not (bHipRight)) * (a - mansardDist) * tan (90-endAngleRight) + (bHipRight) * (mansardDist * tan (endAngleRight/2) - (a - 2*mansardDist) * tan (90-endAngleRight))
		if bHipLeft then
			line2 -a/2 + mansardDist,  refLength/2 + (not (bHipLeft))  * mansardDist * tan (90-endAngleLeft)  - (bHipLeft)  * mansardDist * tan (endAngleLeft/2),
					a/2 - mansardDist,  refLength/2 + (not (bHipLeft))  * (a - mansardDist) * tan (90-endAngleLeft)  - (bHipLeft)  * (mansardDist * tan (endAngleLeft /2) - (a - 2*mansardDist) * tan (90-endAngleLeft))
		endif
		if bHipRight then
			line2 -a/2 + mansardDist, -refLength/2 - (not (bHipRight)) * mansardDist * tan (90-endAngleRight) + (bHipRight) * mansardDist * tan (endAngleRight/2),
					a/2 - mansardDist, -refLength/2 - (not (bHipRight)) * (a - mansardDist) * tan (90-endAngleRight) + (bHipRight) * (mansardDist * tan (endAngleRight/2) - (a - 2*mansardDist) * tan (90-endAngleRight))
		endif
	endif
endif

if iRoofType = 2 then ! --- Lean-to ---
	poly2_b 4, 1+4, gs_back_pen, gs_back_pen,
			-a/2,  refLength/2 + overhangModifyLeft * (bMirrored),										15,
			 a/2,  refLength/2 + a*(tan(90-endAngleLeft))+ overhangModifyLeft * (not (bMirrored)),		15,
			 a/2, -refLength/2 - a*(tan(90-endAngleRight)) - overhangModifyRight * (not (bMirrored)),	15,
			-a/2, -refLength/2 - overhangModifyRight * (bMirrored),										15

	if bHipLeft then
		line2 -a/2, refLength/2 - hipModifyLeft * (bMirrored), a/2, refLength/2 + a * (tan(90-endAngleLeft)) - hipModifyLeft * (not(bMirrored))
	endif
	if bHipRight then
		line2 -a/2, -refLength/2 + hipModifyRight * (bMirrored), a/2, -refLength/2 - a * (tan(90-endAngleRight)) + hipModifyRight * (not(bMirrored))
	endif
endif


! --- Hotspots -----------------------------------------------------------------

hotspot2 -halfA,   halfB,	unID,	halfB, 2,		refLength	: unID = unID + 1
hotspot2 -halfA,   0,		unID,	halfB, 1+128, refLength	: unID = unID + 1
hotspot2 -halfA,  -1,		unID,	halfB, 3,		refLength	: unID = unID + 1

hotspot2 -halfA,	refLength/2,	unID, halfA, 2,		a	: unID = unID + 1
hotspot2  0,		refLength/2,	unID, halfA, 1+128,	a	: unID = unID + 1
hotspot2  1,		refLength/2,	unID, halfA, 3,		a	: unID = unID + 1

hotspot2 -halfA,	-halfB,	unID,	halfB, 2,		refLength	: unID = unID + 1
hotspot2 -halfA,	 0,		unID,	halfB, 1+128,	refLength	: unID = unID + 1
hotspot2 -halfA,	 1,		unID,	halfB, 3,		refLength	: unID = unID + 1

hotspot2 -halfA,	-refLength/2,	unID, halfA, 2,		a	: unID = unID + 1
hotspot2  0,		-refLength/2,	unID, halfA, 1+128,	a	: unID = unID + 1
hotspot2  1,		-refLength/2,	unID, halfA, 3,		a	: unID = unID + 1

hotspot2	  a/2, 	-refLength/2-a*(tan((90-endAngleRight))), 	unID, endAngleRight, 5 		: unID = unID + 1
hotspot2	 -a/2, 	-refLength/2-a,								unID, endAngleRight, 4+128	: unID = unID + 1
hotspot2	 -a/2, 	-refLength/2, 								unID, endAngleRight, 6	 	: unID = unID + 1

hotspot2   a/2,  refLength/2+a*(tan((90-endAngleLeft))), unID, endAngleLeft, 5		: unID = unID + 1
hotspot2  -a/2,  refLength/2+a,							unID, endAngleLeft, 4+128	: unID = unID + 1
hotspot2  -a/2,  refLength/2,							unID, endAngleLeft, 6+512	: unID = unID + 1

unID = 50
if iRoofType = 1 or iRoofType = 3 then
	if bOverhangLeft then
		hotspot2 0, refLength/2 + a/2 * (tan(90-endAngleLeft)) + overhangModifyLeft, unID : unID = unID + 1
	endif
	if bOverhangRight then
		hotspot2 0, -refLength/2 - a/2 * (tan(90-endAngleRight)) - overhangModifyRight, unID : unID = unID + 1
	endif
endif

if iRoofType = 2 then
	if bMirrored then
		if bOverhangLeft then
			hotspot2 -a/2,  refLength/2 + overhangModifyLeft
		endif
		if bOverhangRight then
			hotspot2 -a/2, -refLength/2 - overhangModifyRight
		endif
	else
		if bOverhangLeft then
			hotspot2 a/2,  refLength/2 + a*(tan(90-endAngleLeft))+ overhangModifyLeft
		endif
		if bOverhangRight then
			hotspot2 a/2, -refLength/2 - a*(tan(90-endAngleRight)) - overhangModifyRight
		endif
	endif
endif


! --- Hotlines on footing contours ---------------------------------------------

hotline2 -a/2,  refLength/2,								 a/2,  refLength/2 + a*(tan(90-endAngleLeft)), hLineID : hLineID = hLineID + 1
hotline2  a/2,  refLength/2 + a*(tan(90-endAngleLeft)),		 a/2, -refLength/2 - a*(tan(90-endAngleRight)), hLineID : hLineID = hLineID + 1
hotline2  a/2, -refLength/2 - a*(tan(90-endAngleRight)),	-a/2, -refLength/2, hLineID : hLineID = hLineID + 1
hotline2 -a/2, -refLength/2,								-a/2,  refLength/2, hLineID : hLineID = hLineID + 1


if not (bFillRoof) then end ! --- end of contours and hotspots ---


! --- Defining Fills -----------------------------------------------------------
! bFillRoofMirrored komment
if not (bFillRoofMirrored) then
	fill1 = gs_fill_type
	fill2 = fillCustom2
	pen1 = gs_fill_pen
	pen2 = penCustom2
	pen1back = gs_back_pen
	pen2back = penCustom2back
else
	fill1 = fillCustom2
	fill2 = gs_fill_type
	pen1 = penCustom2
	pen2 = gs_fill_pen
	pen1back = penCustom2back
	pen2back = gs_back_pen
endif


! --- Fills --------------------------------------------------------------------

if iRoofType = 0 then ! --- Flat roof ---
	fill "flatrooffill"
	poly2_b 4, 2+4+64, pen1back, pen1back,
			-a/2,  refLength/2,									15,
			 a/2,  refLength/2 + a*(tan(90-endAngleLeft)),		15,
			 a/2, -refLength/2 - a*(tan(90-endAngleRight)),		15,
			-a/2, -refLength/2,									15
endif

if iRoofType = 1 or iRoofType = 3 then ! --- Pitched roof or mansard---
	fill fill1
	poly2_b{2} 4, 2+4+8+64, pen1, pen1back,
			0, 0, 0+90,
			-a/2,	 refLength/2,																		15,
			 0,		 refLength/2 + a/2*(tan(90-endAngleLeft))  - hipModifyLeft  + overhangModifyLeft,	15,
			 0,		-refLength/2 - a/2*(tan(90-endAngleRight)) + hipModifyRight - overhangModifyRight,	15,
			-a/2,	-refLength/2,																		15
	if bHipLeft then
		poly2_b{2} 3, 2+4+8+64, pen1, pen1back,
				0, 0, -endAngleLeft+90,
				-a/2,	 refLength/2,													15,
				 0,		 refLength/2 + a/2*(tan(90-endAngleLeft))  - hipModifyLeft,		15,
				 a/2,	 refLength/2 + a*(tan((90-endAngleLeft))),						15
	endif

	fill fill2
	poly2_b{2} 4, 2+4+8+64, pen2, pen2back,
			0, 0, 0-90,
			0,		 refLength/2 + a/2*(tan(90-endAngleLeft))  - hipModifyLeft  + overhangModifyLeft,	15,
			a/2,	 refLength/2 + a*(tan((90-endAngleLeft))),											15,
			a/2,	-refLength/2 - a*(tan((90-endAngleRight))),											15,
			0,		-refLength/2 - a/2*(tan(90-endAngleRight)) + hipModifyRight - overhangModifyRight,	15
	if bHipRight then
		poly2_b{2} 3, 2+4+8+64, pen2, pen2back,
				0, 0, endAngleRight+90,
				-a/2,	-refLength/2,													15,
				 a/2,	-refLength/2 - a*(tan((90-endAngleRight))),						15,
				 0,		-refLength/2 - a/2*(tan(90-endAngleRight)) + hipModifyRight,	15
	endif
endif

if iRoofType = 2 then ! --- Lean-to ---
	if bMirrored then
		fill fill2
		pen3 = pen2
		pen3back = pen2back
	else
		fill fill1
		pen3 = pen1
		pen3back = pen1back
	endif
	poly2_b{2} 4, 2+4+8+64, pen3, pen3back,
		0, 0, 90* (bMirrored) - 90 * (not (bMirrored)),
		-a/2,  refLength/2 + overhangModifyLeft * (bMirrored)- hipModifyLeft * (bMirrored),												15,
		 a/2,  refLength/2 + a*(tan(90-endAngleLeft))+ overhangModifyLeft * (not (bMirrored)) - hipModifyLeft * (not(bMirrored)),		15,
		 a/2, -refLength/2 - a*(tan(90-endAngleRight)) - overhangModifyRight * (not (bMirrored)) + hipModifyRight * (not(bMirrored)),	15,
		-a/2, -refLength/2 - overhangModifyRight * (bMirrored) + hipModifyRight * (bMirrored),											15
	if bHipLeft then
		fill fill1
		poly2_b{2} 3, 2+4+8+64, pen1, pen1back,
			0, 0, -endAngleLeft-90,
			-a/2,  refLength/2,																												15,
			 a/2,  refLength/2 + a*(tan(90-endAngleLeft)),																					15,
			(-a/2) * (bMirrored) + (a/2) * (not (bMirrored)), refLength/2 + a*(tan(90-endAngleLeft)) * (not (bMirrored)) - hipModifyLeft,	15
		endif
	if bHipRight then
		fill fill2
		poly2_b{2} 3, 2+4+8+64, pen2, pen2back,
			0, 0, endAngleRight-90,
			-a/2,  -refLength/2,																											15,
			 a/2,  -refLength/2 - a*(tan(90-endAngleRight)),																				15,
			(-a/2) * (bMirrored) + (a/2) * (not (bMirrored)), -refLength/2 - a*(tan(90-endAngleRight)) * (not (bMirrored)) + hipModifyRight,15
	endif
endif


! --- Minimal Space ------------------------------------------------------------
	DRAWINDEX 10
	reqBMinSpace = 0
	call "fa_minimalspace" parameters all MSType = 0,unID = 3000,
							returned_parameters reqBMinSpace,
												MSFillType,
												MSFillPen,
												MSFillBackPen,
												MSContLineType,
												MSContLinePen
	if reqBMinSpace <> 0 then
		unID = 3000
		FILL MSFillType
		line_type MSContLineType
		pen MSContLinePen
		poly2_b 4, 1+2+4+64,MSFillPen,MSFillBackPen,
				-a/2 - MSLeftSide,   refLength/2 + MSRear  / sin (endAngleLeft)  - MSLeftSide * (tan(90-endAngleLeft)),			1,
				a/2 + MSRightSide,  refLength/2 + MSRear  / sin (endAngleLeft)  + (a + MSRightSide) * (tan(90-endAngleLeft)),	1,
				a/2 + MSRightSide, -refLength/2 - MSFront / sin (endAngleRight) - (a + MSRightSide) * (tan(90-endAngleRight)),	1,
				-a/2 - MSLeftSide,  -refLength/2 - MSFront / sin (endAngleRight) + MSLeftSide * (tan(90-endAngleRight)),		1

		hotspot2 -a/2 - MSLeftSide,   refLength/2 + MSRear  / sin (endAngleLeft)  - MSLeftSide * (tan(90-endAngleLeft)),			unID: unID=unID+1
		hotspot2  a/2 + MSRightSide,  refLength/2 + MSRear  / sin (endAngleLeft)  + (a + MSRightSide) * (tan(90-endAngleLeft)),		unID: unID=unID+1
		hotspot2  a/2 + MSRightSide, -refLength/2 - MSFront / sin (endAngleRight) - (a + MSRightSide) * (tan(90-endAngleRight)),	unID: unID=unID+1
		hotspot2 -a/2 - MSLeftSide,  -refLength/2 - MSFront / sin (endAngleRight) + MSLeftSide * (tan(90-endAngleRight)),			unID: unID=unID+1
	endif
end
