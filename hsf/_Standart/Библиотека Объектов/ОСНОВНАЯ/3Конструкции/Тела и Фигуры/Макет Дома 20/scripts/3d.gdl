
if gs_detlevel_3D_m = 0 then end
if not (gs_shadow) then shadow off

rotx xRotation
roty yRotation


! --- Footing ------------------------------------------------------------------

material matFoot
prism_ 5, footingHeight,
		-a/2,  refLength/2, 15,
		-a/2, -refLength/2, 15,
		 a/2, -refLength/2-a*(tan((90-endAngleRight))), 15,
		 a/2,  refLength/2+a*(tan((90-endAngleLeft))), 15,
		-a/2,  refLength/2, -1


! --- Main house body ----------------------------------------------------------

material matwall
addz footingHeight
if iRoofType then
	prism_ 5, gutterHeight-footingHeight,
			-a/2,  refLength/2,								15,
			-a/2, -refLength/2,								15,
			 a/2, -refLength/2 - a*(tan(90-endAngleRight)),	15,
			 a/2,  refLength/2 + a*(tan(90-endAngleLeft)),	15,
			-a/2,  refLength/2,								-1
else
	cprism_ matRoof, matWall, matWall,
			 5, gutterHeight-footingHeight,
			-a/2,  refLength/2,								15,
			-a/2, -refLength/2,								15,
			 a/2, -refLength/2 - a*(tan(90-endAngleRight)),	15,
			 a/2,  refLength/2 + a*(tan(90-endAngleLeft)),	15,
			-a/2,  refLength/2,								-1
endif
del 1


! --- Hotspots of house and footing --------------------------------------------

unID = 1

hotspot -a/2,	halfB,	0, unID, halfB, 2,		refLength : unID = unID + 1
hotspot -a/2,	0,		0, unID, halfB, 1+128,	refLength : unID = unID + 1
hotspot -a/2,	-1,		0, unID, halfB, 3,		refLength : unID = unID + 1

hotspot -halfA,	refLength/2,	0, unID, halfA, 2,		a : unID = unID + 1
hotspot  0,		refLength/2,	0, unID, halfA, 1+128,	a : unID = unID + 1
hotspot  1,		refLength/2,	0, unID, halfA, 3,		a : unID = unID + 1

hotspot -a/2,	-halfB,	0, unID, halfB, 2,		refLength : unID = unID + 1
hotspot -a/2,	0,		0, unID, halfB, 1+128,	refLength : unID = unID + 1
hotspot -a/2,	+1,		0, unID, halfB, 3,		refLength : unID = unID + 1

hotspot -halfA,	-refLength/2,	0, unID, halfA, 2,		a : unID = unID + 1
hotspot  0,		-refLength/2,	0, unID, halfA, 1+128,	a : unID = unID + 1
hotspot  1,		-refLength/2,	0, unID, halfA, 3,		a : unID = unID + 1

hotspot	  a/2, 	-refLength/2-a*(tan((90-endAngleRight))), 	0, unID, endAngleRight, 5 		: unID = unID + 1
hotspot	 -a/2, 	-refLength/2-a,								0, unID, endAngleRight, 4+128	: unID = unID + 1
hotspot	 -a/2, 	-refLength/2, 								0, unID, endAngleRight, 6	 	: unID = unID + 1

hotspot   a/2,  refLength/2+a*(tan((90-endAngleLeft))),	0, unID, endAngleLeft, 5		: unID = unID + 1
hotspot  -a/2,  refLength/2+a,							0, unID, endAngleLeft, 4+128	: unID = unID + 1
hotspot  -a/2,  refLength/2,							0, unID, endAngleLeft, 6		: unID = unID + 1

hotspot -a/2,  refLength/2,		 gutterHeight,	unID, gutterHeight, 2		: unID = unID + 1
hotspot -a/2,  refLength/2,		 0,				unID, gutterHeight, 1+128	: unID = unID + 1
hotspot -a/2,  refLength/2,		-1,				unID, gutterHeight, 3		: unID = unID + 1

hotspot -a/2, -refLength/2,		 gutterHeight,	unID, gutterHeight, 2		: unID = unID + 1
hotspot -a/2, -refLength/2,		 0,				unID, gutterHeight, 1+128	: unID = unID + 1
hotspot -a/2, -refLength/2,		-1,				unID, gutterHeight, 3		: unID = unID + 1

hotspot	 a/2, -refLength/2-a*(tan((90-endAngleRight))),  gutterHeight,	unID,	gutterHeight, 2		: unID = unID + 1
hotspot	 a/2, -refLength/2-a*(tan((90-endAngleRight))),  0,				unID,	gutterHeight, 1+128 : unID = unID + 1
hotspot	 a/2, -refLength/2-a*(tan((90-endAngleRight))), -1,				unID,	gutterHeight, 3		: unID = unID + 1

hotspot  a/2,  refLength/2+a*(tan((90-endAngleLeft))),	 gutterHeight,	unID,	gutterHeight, 2		: unID = unID + 1
hotspot  a/2,  refLength/2+a*(tan((90-endAngleLeft))),	 0,				unID,	gutterHeight, 1+128	: unID = unID + 1
hotspot  a/2,  refLength/2+a*(tan((90-endAngleLeft))),	-1,				unID,	gutterHeight, 3		: unID = unID + 1

hotspot -a/2,  refLength/2,	 footingHeight, unID, footingHeight, 2		: unID = unID + 1
hotspot -a/2,  refLength/2,	 0,				unID, footingHeight, 1+128	: unID = unID + 1
hotspot -a/2,  refLength/2,	-1,				unID, footingHeight, 3		: unID = unID + 1

hotspot -a/2, -refLength/2,	 footingHeight, unID, footingHeight, 2		: unID = unID + 1
hotspot -a/2, -refLength/2,	 0,				unID, footingHeight, 1+128	: unID = unID + 1
hotspot -a/2, -refLength/2,	-1,				unID, footingHeight, 3		: unID = unID + 1

hotspot	 a/2, -refLength/2-a*(tan((90-endAngleRight))),  footingHeight, unID, footingHeight, 2		: unID = unID + 1
hotspot	 a/2, -refLength/2-a*(tan((90-endAngleRight))),  0,				unID, footingHeight, 1+128	: unID = unID + 1
hotspot	 a/2, -refLength/2-a*(tan((90-endAngleRight))), -1,				unID, footingHeight, 3		: unID = unID + 1

hotspot  a/2,  refLength/2+a*(tan((90-endAngleLeft))),	 footingHeight, unID, footingHeight, 2		: unID = unID + 1
hotspot  a/2,  refLength/2+a*(tan((90-endAngleLeft))),	 0,				unID, footingHeight, 1+128	: unID = unID + 1
hotspot  a/2,  refLength/2+a*(tan((90-endAngleLeft))),	-1,				unID, footingHeight, 3		: unID = unID + 1

if iRoofType = 0 then end


! --- Roof materials -----------------------------------------------------------

if not (bHipLeft) and not (bOverhangLeft) then
	matEndLeft = matWall
else
	matEndLeft = matRoof
endif

if not (bHipRight) and not (bOverhangRight) then
	matEndRight = matWall
else
	matEndRight = matRoof
endif


! --- Roof geometry ------------------------------------------------------------

vert -a/2,   refLength/2,									gutterHeight				!#1
vert  a/2,	 refLength/2 + a*(tan(90-endAngleLeft)),		gutterHeight				!#2
vert  a/2,	-refLength/2 - a*(tan(90-endAngleRight)),		gutterHeight				!#3
vert -a/2,	-refLength/2,									gutterHeight				!#4

edge 1, 2, -1, -1, 0	!#1
edge 2, 3, -1, -1, 0	!#2
edge 3, 4, -1, -1, 0	!#3
edge 4, 1, -1, -1, 0	!#4

material matWall
pgon 4, 0, -1, 1, 2, 3, 4	!#1

if iRoofType = 1 or iRoofType = 2 then
	if iRoofType = 1 then		! --- Pitched Roof ---
		sideAngle = -(90-roofAngle)
		sideMat = matRoof
	else						! --- Lean-to ---
		sideAngle = 0
		sideMat = matWall
	endif
	addz gutterHeight+roofHeight
	mulz -1
	if iRoofType = 2 and bMirrored then
		mulx -1
		CPRISM_{2} matRoof, matWall, matRoof,
			5, roofHeight,
			-a/2,  refLength/2 + a*(tan(90-endAngleLeft)), 0+bOverhangLeft*(90-roofAngle)-bHipLeft*(90-roofAngle),  15, matEndLeft,
			 a/2,  refLength/2, sideAngle, 15, sideMat,
			 a/2, -refLength/2, 0+bOverhangRight*(90-roofAngle)-bHipRight*(90-roofAngle), 15, matEndRight,
			-a/2, -refLength/2 - a*(tan(90-endAngleRight)), -(90-roofAngle), 15, matRoof,
			-a/2,  refLength/2 + a*(tan(90-endAngleLeft)), 0+bOverhangLeft*(90-roofAngle)-bHipLeft*(90-roofAngle), -1, matEndLeft
		del 1
	else
		CPRISM_{2} matRoof, matWall, matRoof,
			5, roofHeight,
			-a/2,  refLength/2, 0+bOverhangLeft*(90-roofAngle)-bHipLeft*(90-roofAngle),  15, matEndLeft,
			 a/2,  refLength/2 + a*(tan(90-endAngleLeft)), sideAngle, 15, sideMat,
			 a/2, -refLength/2 - a*(tan(90-endAngleRight)), 0+bOverhangRight*(90-roofAngle)-bHipRight*(90-roofAngle), 15, matEndRight,
			-a/2, -refLength/2, -(90-roofAngle), 15, matRoof,
			-a/2,  refLength/2, 0+bOverhangLeft*(90-roofAngle)-bHipLeft*(90-roofAngle), -1, matEndLeft
	endif
	del 2
endif

if iRoofType = 3 then 			! --- Mansard ---
	diffLowerTop = mansardLowerHeight/tan(roofAngle)

	addz gutterHeight+mansardLowerHeight
	mulz -1
	CPRISM_{2} matRoof, matWall, matRoof,
		5, mansardLowerHeight,
		-a/2,  refLength/2, -bHipLeft*(90-roofAngle),  15, matEndLeft,
		 a/2,  refLength/2 + a*(tan(90-endAngleLeft)), -(90-roofAngle), 15, matRoof,
		 a/2, -refLength/2 - a*(tan(90-endAngleRight)), -bHipRight*(90-roofAngle), 15, matEndRight,
		-a/2, -refLength/2, -(90-roofAngle), 15, matRoof,
		-a/2,  refLength/2, -bHipLeft*(90-roofAngle), -1, matEndLeft
	addz -(roofHeight-mansardLowerHeight)
	CPRISM_{2} matRoof, matWall, matRoof,
		5, roofHeight-mansardLowerHeight,
		-a/2+diffLowerTop,  refLength/2 + diffLowerTop*tan(90-endAngleLeft) - bHipLeft*diffLowerTop/sin(endAngleLeft), -bHipLeft*(90-mansardTopAngle),  15, matEndLeft,
		 a/2-diffLowerTop,  refLength/2 + (a-diffLowerTop)*tan(90-endAngleLeft) - bHipLeft*diffLowerTop/sin(endAngleLeft), -(90-mansardTopAngle), 15, matRoof,
		 a/2-diffLowerTop, -refLength/2 - (a-diffLowerTop)*tan(90-endAngleRight) + bHipRight*diffLowerTop/sin(endAngleRight), -bHipRight*(90-mansardTopAngle), 15, matEndRight,
		-a/2+diffLowerTop, -refLength/2 - diffLowerTop*tan(90-endAngleRight) + bHipRight*diffLowerTop/sin(endAngleRight), -(90-mansardTopAngle), 15, matRoof,
		-a/2+diffLowerTop,  refLength/2 + diffLowerTop*tan(90-endAngleLeft) - bHipLeft*diffLowerTop/sin(endAngleLeft), -bHipLeft*(90-mansardTopAngle), -1, matEndLeft
	del 3
endif



! --- Hotspots of roof ---------------------------------------------------------

if iRoofType = 1 then ! --- Pitched roof ---
	yPos = refLength/2 + a/2*(tan(90-endAngleLeft)) - hipModifyLeft  + overhangModifyLeft
	hotspot  0,		yPos,	zzyzx,			unID, roofAngle, 5		: unID = unID + 1
	hotspot  0,		yPos,	gutterHeight,	unID, roofAngle, 4+128  : unID = unID + 1
	hotspot  -a/2,	yPos,	gutterHeight,	unID, roofAngle, 6		: unID = unID +1

	yPos = -refLength/2 - a/2*(tan(90-endAngleRight)) + hipModifyRight - overhangModifyRight
	hotspot  0,		yPos,	zzyzx,			unID, roofAngle, 5		: unID = unID + 1
	hotspot  0,		yPos,	gutterHeight,	unID, roofAngle, 4+128	: unID = unID + 1
	hotspot  -a/2,	yPos,	gutterHeight,	unID, roofAngle, 6		: unID = unID + 1
endif

if iRoofType = 2 then ! --- Lean-to ---
	if bMirrored then
		yPos = refLength/2 - hipModifyLeft  + overhangModifyLeft
		hotspot  -a/2,	 yPos, zzyzx,			unID, roofAngle, 5		: unID = unID + 1
		hotspot  -a/2,	 yPos, gutterHeight,	unID, roofAngle, 4+128	: unID = unID + 1
		hotspot   a/2,	 yPos, gutterHeight,	unID, roofAngle, 6		: unID = unID + 1

		yPos = -refLength/2 + hipModifyRight - overhangModifyRight
		hotspot  -a/2,	yPos, zzyzx,			unID, roofAngle, 5		: unID = unID + 1
		hotspot  -a/2,	yPos, gutterHeight,	unID, roofAngle, 4+128		: unID = unID + 1
		hotspot   a/2,	yPos, gutterHeight,	unID, roofAngle, 6			: unID = unID + 1
	else
		yPos = refLength/2 + a*(tan(90-endAngleLeft))  - hipModifyLeft  + overhangModifyLeft
		hotspot   a/2,	 yPos,	zzyzx,			unID, roofAngle, 5		: unID = unID + 1
		hotspot   a/2,	 yPos,	gutterHeight,	unID, roofAngle, 4+128	: unID = unID + 1
		hotspot  -a/2,	 yPos,	gutterHeight,	unID, roofAngle, 6		: unID = unID + 1

		yPos = -refLength/2 - a*(tan(90-endAngleRight)) + hipModifyRight - overhangModifyRight
		hotspot   a/2,	yPos,	zzyzx,			unID, roofAngle, 5		: unID = unID + 1
		hotspot   a/2,	yPos,	gutterHeight,	unID, roofAngle, 4+128	: unID = unID + 1
		hotspot  -a/2,	yPos,	gutterHeight,	unID, roofAngle, 6		: unID = unID + 1
	endif
endif

if iRoofType = 3 then ! --- Mansard ---
	hipModifyLeftLower = bHipLeft*diffLowerTop/sin(endAngleLeft)
	hipModifyRightLower = bHipRight*diffLowerTop/sin(endAngleRight)
	breakHeight = gutterHeight + mansardLowerHeight

	hotspot -a/2 + diffLowerTop,	refLength/2 + diffLowerTop*tan(90-endAngleLeft) - hipModifyLeftLower,		breakHeight,	unID : unID = unID + 1
	hotspot  a/2 - diffLowerTop,	refLength/2 + (a-diffLowerTop)*tan(90-endAngleLeft) - hipModifyLeftLower,	breakHeight,	unID : unID = unID + 1
	hotspot  a/2 - diffLowerTop,	-refLength/2 - (a-diffLowerTop)*tan(90-endAngleRight) + hipModifyRightLower,	breakHeight,	unID : unID = unID + 1
	hotspot -a/2 + diffLowerTop,	-refLength/2 - diffLowerTop*tan(90-endAngleRight) + hipModifyRightLower,		breakHeight,	unID : unID = unID + 1

	hotspot 0,					 refLength/2 + a/2 * tan (90-endAngleLeft)  - hipModifyLeft,		zzyzx,			unID : unID = unID + 1
	hotspot 0,					-refLength/2 - a/2 * tan (90-endAngleRight) + hipModifyRight,		zzyzx,			unID : unID = unID + 1
endif

end
