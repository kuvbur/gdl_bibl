
!! Shell



pen gs_cont_pen
fill gs_fill_type

hLineID = 1000

min_y=min(-radius_1*cos(angle_1),-(radius_1-shell_thk)*cos(angle_1),-radius_1*cos(angle_1+shell_angle),-(radius_1-shell_thk)*cos(angle_1+shell_angle))
max_y=max(-radius_1*cos(angle_1),-(radius_1-shell_thk)*cos(angle_1),-radius_1*cos(angle_1+shell_angle),-(radius_1-shell_thk)*cos(angle_1+shell_angle))

IF angle_1 < 180 AND angle_1 + shell_angle > 180 THEN max_y = radius_1
IF angle_1 + shell_angle > 540 THEN max_y = radius_1
IF abs(angle_1) < eps OR  angle_1 + shell_angle > 360 THEN min_y = -radius_1

unID=1
if gs_axis then
	hotspot2 0,0,unID : unID=unID+1
	hotspot2 a/2,0,unID : unID=unID+1
	hotspot2 a,0,unID : unID=unID+1
endif

!!----------------!!
!! Length Editing !!
!!----------------!!

hotspot2 0,min_y,unId,a,1+256 : unID=unID+1
hotspot2 -1,min_y,unId,a,3 : unID=unID+1
hotspot2 a,min_y,unId,a,2 : unID=unID+1

hotspot2 0,max_y,unId,a,1+256 : unID=unID+1
hotspot2 -1,max_y,unId,a,3 : unID=unID+1
hotspot2 a,max_y,unId,a,2 : unID=unID+1

!hotspot2 0,-(radius_1-shell_thk)*cos(angle_1),unID,a,1+256 : unID=unID+1
!hotspot2 -1,-(radius_1-shell_thk)*cos(angle_1),unID,a,3 : unID=unID+1
!hotspot2 a,-(radius_1-shell_thk)*cos(angle_1),unID,a,2 : unID=unID+1
!
!hotspot2 0,-(radius_1-shell_thk)*cos(angle_1+shell_angle),unID,a,1+256 : unID=unID+1
!hotspot2 -1,-(radius_1-shell_thk)*cos(angle_1+shell_angle),unID,a,3 : unID=unID+1
!hotspot2 a,-(radius_1-shell_thk)*cos(angle_1+shell_angle),unID,a,2 : unID=unID+1

!!-------------------!!
!! Thickness Editing !!
!!-------------------!!

if abs(angle_1)<eps or abs(angle_1+shell_angle-360)<eps then
	hotspot2 a/2,-radius_1,unId,shell_thk,1+128 : unID=unID+1
	hotspot2 a/2,-radius_1-1,unId,shell_thk,3 : unID=unID+1
	hotspot2 a/2,-radius_1+shell_thk,unId,shell_thk,2 : unID=unID+1
endif

if abs(angle_1-180)<eps or abs(angle_1+shell_angle-180)<eps or abs(angle_1+shell_angle-540)<eps then
	hotspot2 a/2,radius_1,unId,shell_thk,1+128 : unID=unID+1
	hotspot2 a/2,radius_1+1,unId,shell_thk,3 : unID=unID+1
	hotspot2 a/2,radius_1-shell_thk,unId,shell_thk,2 : unID=unID+1
endif


!!-------------------!!
!! Radius Editing 	 !!
!!-------------------!!

if abs(angle_1)<eps or abs(angle_1+shell_angle-360)<eps then
	hotspot2 a/2,0,unId,radius_1,1+128 : unID=unID+1
	hotspot2 a/2,1,unId,radius_1,3 : unID=unID+1
	hotspot2 a/2,-radius_1,unId,radius_1,2 : unID=unID+1
endif

if abs(angle_1-180)<eps or abs(angle_1+shell_angle-180)<eps or abs(angle_1+shell_angle-540)<eps then
	hotspot2 a/2,0,unId,radius_1,1+128 : unID=unID+1
	hotspot2 a/2,-1,unId,radius_1,3 : unID=unID+1
	hotspot2 a/2,radius_1,unId,radius_1,2 : unID=unID+1
endif

poly2_b 5, 1+2+4+64, gs_fill_pen, gs_back_pen,
		0, min_y, 1,
		a, min_y, 1,
		a, max_y, 1,
		0, max_y, 1,
		0, min_y, -1

hotline2 0, min_y,a, min_y, hLineID : hLineID = hLineID + 1
hotline2 a, min_y,a, max_y, hLineID : hLineID = hLineID + 1
hotline2 a, max_y,0, max_y, hLineID : hLineID = hLineID + 1
hotline2 0, max_y,0, min_y, hLineID : hLineID = hLineID + 1

IF angle_1 < 180 OR cos (angle_1) < cos (angle_1 + shell_angle) THEN
	line2 0, -radius_1 * cos (angle_1), a,  -radius_1 * cos (angle_1)
ELSE
	line_type gs_DashedLine
	line2 0, -radius_1 * cos (angle_1), a,  -radius_1 * cos (angle_1)
ENDIF

line_type gs_SolidLine

IF (angle_1 + shell_angle) < 180 OR  ((angle_1 + shell_angle) > 270 and (angle_1 + shell_angle) < 540 and angle_1 > 360 - angle_1-shell_angle) THEN
	line2 0, -radius_1 * cos (angle_1 + shell_angle), a,  -radius_1 * cos (angle_1 + shell_angle)
ELSE
	line_type gs_DashedLine
	line2 0, -radius_1 * cos (angle_1 + shell_angle), a,  -radius_1 * cos (angle_1 + shell_angle)
ENDIF

line_type gs_SolidLine

IF angle_1 > 90 and (radius_1 - shell_thk) * cos (angle_1) < radius_1 * cos (angle_1 + shell_angle) THEN
	line2 0, -(radius_1-shell_thk) * cos (angle_1), a,  -(radius_1-shell_thk) * cos (angle_1)
ELSE
	line_type gs_DashedLine
	line2 0, -(radius_1-shell_thk) * cos (angle_1), a,  -(radius_1-shell_thk) * cos (angle_1)
ENDIF

line_type gs_SolidLine

IF angle_1 + shell_angle < 90 OR (360-(angle_1 + shell_angle) < angle_1 and (angle_1 + shell_angle) < 450) THEN
	line2 0, -(radius_1-shell_thk) * cos (angle_1 + shell_angle), a,  -(radius_1-shell_thk) * cos (angle_1 + shell_angle)
ELSE
	line_type gs_DashedLine
	line2 0, -(radius_1-shell_thk) * cos (angle_1 + shell_angle), a,  -(radius_1-shell_thk) * cos (angle_1 + shell_angle)
ENDIF


if gs_axis then
	pen gs_axis_pen
	line_type gs_axis_line
	line2 0,0,a,0
	hotline2 0,0,a,0, hLineID : hLineID = hLineID + 1
else
	hLineID = hLineID + 1
endif
