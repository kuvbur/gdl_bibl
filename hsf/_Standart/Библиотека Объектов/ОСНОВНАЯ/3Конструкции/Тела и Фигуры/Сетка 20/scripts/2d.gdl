
gs_fill_type = gs_fill_type * gs_bFills
gs_FillSdl   = gs_FillSdl   * gs_bFills
gs_fillGlass = gs_fillGlass * gs_bFills

unID = 1
pen gs_cont_pen
gosub iStyle

end

! =============================================================================
! SUBRUTINES
!
! =============================================================================

! -----------------------------------------------------------------------------
! Horizontal
! -----------------------------------------------------------------------------
1:

	if  u <= 0 or w <= 0 then
		poly2_ 5, 4+1,
			xCoordFrames[1]-thickEdge/2, yCoordFrames[1]-thickEdge/2,  1,
			xCoordFrames[iNumFramesA]+thickEdge/2, yCoordFrames[1]-thickEdge/2,  1,
			xCoordFrames[iNumFramesA]+thickEdge/2, yCoordFrames[iNumFramesB]+thickEdge/2,  1,
			xCoordFrames[1]-thickEdge/2, yCoordFrames[iNumFramesB]+thickEdge/2,  1,
			xCoordFrames[1]-thickEdge/2, yCoordFrames[1]-thickEdge/2, -1
		end
	endif

	gosub 100

	fill gs_fillGlass

	for o = 1 to iNumFramesA-1  step 1

		for e = 1 to iNumFramesB-1  step 1

			if o = 1 then
				dx1 = thickEdge
				dx2 = thickFrame
			else
				dx1 = thickFrame
				dx2 = thickFrame
			endif

			if o = iNumFramesA-1 then
				dx1 = thickFrame
				dx2 = thickEdge
			endif

			if e = 1 then
				dy1 = thickEdge
				dy2 = thickFrame
			else
				dy1 = thickFrame
				dy2 = thickFrame
			endif

			if e = iNumFramesB-1 then
				dy1 = thickFrame
				dy2 = thickEdge
			endif

			put xCoordFrames[o]+dx1/2,   yCoordFrames[e]+dy1/2, 1,
				xCoordFrames[o+1]-dx2/2, yCoordFrames[e]+dy1/2, 1,
				xCoordFrames[o+1]-dx2/2, yCoordFrames[e+1]-dy2/2, 1,
				xCoordFrames[o]+dx1/2,   yCoordFrames[e+1]-dy2/2, 1,
				xCoordFrames[o]+dx1/2,   yCoordFrames[e]+dy1/2,  -1

			poly2_b 4, 1+2+4+64, gs_penGlass_fg, gs_penGlass_bg,
				xCoordFrames[o]+dx1/2, yCoordFrames[e]+dy1/2, 1,
				xCoordFrames[o+1]-dx2/2, yCoordFrames[e]+dy1/2, 1,
				xCoordFrames[o+1]-dx2/2, yCoordFrames[e+1]-dy2/2, 1,
				xCoordFrames[o]+dx1/2, yCoordFrames[e+1]-dy2/2, 1
		next  e
	next  o

	fill gs_fill_type

	poly2_b 5+nsp/3, 1+2+4+64, gs_fill_pen, gs_back_pen,
		xCoordFrames[1]-thickEdge/2, yCoordFrames[1]-thickEdge/2, 1,
		xCoordFrames[iNumFramesA]+thickEdge/2, yCoordFrames[1]-thickEdge/2, 1,
		xCoordFrames[iNumFramesA]+thickEdge/2, yCoordFrames[iNumFramesB]+thickEdge/2, 1,
		xCoordFrames[1]-thickEdge/2, yCoordFrames[iNumFramesB]+thickEdge/2, 1,
		xCoordFrames[1]-thickEdge/2, yCoordFrames[1]-thickEdge/2,-1,

		use (nsp)

return

! -----------------------------------------------------------------------------
! Vertical
! -----------------------------------------------------------------------------
2:
	fill gs_FillSdl
	gosub 200

	poly2_ 5, 1,
		xCoordFrames[1]-thickEdge/2, yCoordEdges[1], 1,
		xCoordFrames[iNumFramesA]+thickEdge/2, yCoordEdges[1], ifx2,
		xCoordFrames[iNumFramesA]+thickEdge/2, yCoordEdges[2], 1,
		xCoordFrames[1]-thickEdge/2, yCoordEdges[2], ifx1,
		xCoordFrames[1]-thickEdge/2, yCoordEdges[1], 1

	poly2_b 5, 2+64, gs_penSdl_fg, gs_penSdl_bg,
		xCoordFrames[1]-thickEdge/2, yCoordEdges[1], 1,
		xCoordFrames[iNumFramesA]+thickEdge/2, yCoordEdges[1], ifx2,
		xCoordFrames[iNumFramesA]+thickEdge/2, yCoordEdges[2], 1,
		xCoordFrames[1]-thickEdge/2, yCoordEdges[2], ifx1,
		xCoordFrames[1]-thickEdge/2, yCoordEdges[1], -1

	fill gs_fill_type

	poly2_b 4, 1+2+4+32, gs_fill_pen, gs_back_pen,
		xCoordFrames[1]+thickEdge/2, yCoordEdges[1], 1+32,
		xCoordFrames[1]+thickEdge/2, yCoordEdges[2], 1+32,
		xCoordFrames[1]-thickEdge/2, yCoordEdges[2], 1+32,
		xCoordFrames[1]-thickEdge/2, yCoordEdges[1], 1+32

	poly2_b 4, 1+2+4+32, gs_fill_pen, gs_back_pen,
		xCoordFrames[iNumFramesA]-thickEdge/2, yCoordEdges[1], 1+32,
		xCoordFrames[iNumFramesA]-thickEdge/2, yCoordEdges[2], 1+32,
		xCoordFrames[iNumFramesA]+thickEdge/2, yCoordEdges[2], 1+32,
		xCoordFrames[iNumFramesA]+thickEdge/2, yCoordEdges[1], 1+32


	for o = 1 to iNumFramesA-2 step 1
		add2 xCoordFrames[o+1]-thickFrame/2, 0
		poly2_b 4, 1+2+4+32,gs_fill_pen,gs_back_pen,
			0, yCoordEdges[1], 1+32,
			0, yCoordEdges[2], 1+32,
			thickFrame, yCoordEdges[2], 1+32,
			thickFrame, yCoordEdges[1], 1+32

		del 1
	next o

return


! -----------------------------------------------------------------------------
! hotspot editing for Horizontal
! -----------------------------------------------------------------------------

100:

	for k1 = 1 to 2
		hotspot2 0,    yCoordEdges[k1], unID, a, 1+256 : unID=unID+1
		hotspot2 -1,   yCoordEdges[k1], unID, a, 3     : unID=unID+1
		hotspot2 a,    yCoordEdges[k1], unID, a, 2     : unID=unID+1
	next k1

	for k1 = 1 to 2
		hotspot2 xCoordEdges[k1],  0, unID, b, 1+128 : unID=unID+1
		hotspot2 xCoordEdges[k1], -1, unID, b, 3     : unID=unID+1
		hotspot2 xCoordEdges[k1],  b, unID, b, 2     : unID=unID+1
	next k1

	xCoordFrames[1] = xCoordEdges[1] + thickEdge/2
	xCoordFrames[iNumFramesA] = xCoordEdges[2] - thickEdge/2
	yCoordFrames[1] = yCoordEdges[1] + thickEdge/2
	yCoordFrames[iNumFramesB] = yCoordEdges[2] - thickEdge/2

	for k = 2 to iNumFramesA-1
		hotspot2 0,yCoordFrames[1], unID,  xCoordFrames[k], 1+128 :unID=unID+1
		hotspot2 -1,yCoordFrames[1], unID, xCoordFrames[k], 3   :unID=unID+1
		hotspot2 xCoordFrames[k],yCoordFrames[1], unID,  xCoordFrames[k], 2   :unID=unID+1

		hotspot2 0,yCoordFrames[iNumFramesB], unID,  xCoordFrames[k], 1+128 :unID=unID+1
		hotspot2 -1,yCoordFrames[iNumFramesB], unID, xCoordFrames[k], 3   :unID=unID+1
		hotspot2 xCoordFrames[k],yCoordFrames[iNumFramesB], unID,  xCoordFrames[k], 2   :unID=unID+1
	next k

	for k = 2 to iNumFramesB-1
		hotspot2 xCoordFrames[1],0, unID,  yCoordFrames[k], 1+128 :unID=unID+1
		hotspot2 xCoordFrames[1],-1, unID, yCoordFrames[k], 3   :unID=unID+1
		hotspot2 xCoordFrames[1],yCoordFrames[k], unID,  yCoordFrames[k], 2   :unID=unID+1

		hotspot2 xCoordFrames[iNumFramesA],0, unID,  yCoordFrames[k], 1+128 :unID=unID+1
		hotspot2 xCoordFrames[iNumFramesA],-1, unID, yCoordFrames[k], 3   :unID=unID+1
		hotspot2 xCoordFrames[iNumFramesA],yCoordFrames[k], unID,  yCoordFrames[k], 2   :unID=unID+1
	next k

return

! -----------------------------------------------------------------------------
! hotspot editing for Vertical
! -----------------------------------------------------------------------------

200:

	for k1 = 1 to 2
		hotspot2  0, yCoordEdges[k1], unID,  a, 1+256 : unID=unID+1
		hotspot2 -1, yCoordEdges[k1], unID,  a, 3     : unID=unID+1
		hotspot2  a, yCoordEdges[k1], unID,  a, 2     : unID=unID+1
	next k1

	for k1 = 1 to 2
		hotspot2 xCoordEdges[k1],  0, unID, b, 1+128 : unID=unID+1
		hotspot2 xCoordEdges[k1], -1, unID, b, 3     : unID=unID+1
		hotspot2 xCoordEdges[k1],  b, unID, b, 2     : unID=unID+1
	next k1

	xCoordFrames[1] = xCoordEdges[1] + thickEdge/2
	xCoordFrames[iNumFramesA] = xCoordEdges[2] - thickEdge/2

	for k = 2 to iNumFramesA-1
		hotspot2     0, (yCoordEdges[2]+yCoordEdges[1])/2, unID, xCoordFrames[k], 1+128 : unID=unID+1
		hotspot2    -1, (yCoordEdges[2]+yCoordEdges[1])/2, unID, xCoordFrames[k], 3     : unID=unID+1
		hotspot2 xCoordFrames[k], (yCoordEdges[2]+yCoordEdges[1])/2, unID, xCoordFrames[k], 2     : unID=unID+1
	next k

return
