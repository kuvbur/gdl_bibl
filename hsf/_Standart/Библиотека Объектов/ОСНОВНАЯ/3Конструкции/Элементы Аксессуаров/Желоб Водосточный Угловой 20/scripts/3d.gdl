
!!MITRESS1_GUTTER BODY 3D - w/ hole [is cut by Downspout]!!

IF gs_detlevel_3D_m = DLEV3D_SIMPLE or (GLOB_CONTEXT>20 and GLOB_CONTEXT<40 and GLOB_CONTEXT<40) THEN gs_resol = 4
IF gs_detlevel_3D_m = DLEV3D_OFF THEN END

RESOL gs_resol
PEN gs_cont_pen
MATERIAL gs_gutter_mat

IF gs_shadow=0 THEN SHADOW OFF
IF gs_shadow=1 THEN SHADOW ON

unID = 1

IF gs_gutter_mitress_ang < 180 THEN
	CUTPLANE  -L/2,  gs_gutter_p_w/2
ELSE
	CUTPLANE  -L/2, -gs_gutter_p_w/2
ENDIF

ADD gs_gutter_lgth1, gs_gutter_p_w/2, 0																		!!CUT rigth END!!
ROTZ gs_gutter_endcap1_ang
	CUTPLANE 0,1,1,0
DEL 2

ROTY(slope_ang1)

if gs_gutter_downspout1=1 then

	CALL "m_DSProfiles" PARAMETERS gs_gutter_ds_profile_num=gs_gutter_g_ds_profile_num,
									 gs_mask=0,
									 gs_gutter_aa=gs_gutter_aa,
									 gs_gutter_bb=gs_gutter_bb,
									 gs_gutter_dd=gs_gutter_dd

	IF gs_gutter_g_ds_profile_num = 1 THEN
	   ADD gs_gutter_downspout_x_pos1 + gs_gutter_dd, gs_gutter_downspout_y_pos1, 0
	ELSE
	   ADD gs_gutter_downspout_x_pos1 + gs_gutter_aa, gs_gutter_downspout_y_pos1, 0
	ENDIF

	CUTPOLYA nsp/3, 1, 0, get(nsp)
	DEL 1

!cutend

Endif

CALL "m_GutterProfiles" PARAMETERS gs_gutter_p_num=gs_gutter_p_num,
								  gs_mask=0, gs_gutter_p_w=gs_gutter_p_w,
								  gs_gutter_p_h=gs_gutter_p_h,
								  gs_gutter_p_r=gs_gutter_p_r

ROTZ -90
ROTX 90

LGTH = -gs_gutter_lgth1/COS(slope_ang1) - ABS(gs_gutter_p_h*TAN(slope_ang1))

IF L_ANG < 0 THEN LGTH = LGTH + gs_gutter_p_w * TAN(L_ANG)

IF gs_gutter_endcap1_ang > 0 THEN LGTH = LGTH - gs_gutter_p_w * TAN(gs_gutter_endcap1_ang)

IF L_ANG < 0 THEN ADDZ -gs_gutter_p_w * TAN(L_ANG)

IF slope_ang1 < 0 THEN ADDZ -gs_gutter_p_h * TAN(slope_ang1)

EXTRUDE   nsp/3, 0, 0, LGTH, 0, get(nsp)											!!GUTTER 'BODY'!!

IF slope_ang1 < 0 THEN DEL 1
DEL 2
IF L_ANG < 0 THEN DEL 1

if gs_gutter_downspout1=1 Then CUTEND


	!!3D GUTTER GUARD!!
IF gs_gutter_guard = 1 THEN									!!3D GUTTER GUARD!!
		ww=0.002							!!guard wire width!!
		hx1=0.023							!!hole width!!
		hy1=0.023							!!hole depth!!

		nx=INT((-LGTH)/hx1)					!!guard x number of holes!!
		ny=INT(gs_gutter_p_w/hy1)			!!guard y number of holes!!

		IF L_ANG < 0 THEN
			ADDX gs_gutter_p_w * TAN(L_ANG)
			hossz= gs_gutter_lgth1-(gs_gutter_p_w * TAN(L_ANG))+gs_gutter_p_w
		Else
			hossz= gs_gutter_lgth1+gs_gutter_p_w
		Endif

		IF L_ANG > 0 THEN 	hossz= hossz + (gs_gutter_p_w * TAN(L_ANG))+gs_gutter_p_w



		ADD 0,-gs_gutter_p_w/2,-sth/10


		material gs_gutter_guard_mat
		FOR j=1 TO nx
			IF j > 1 Then
				Plane 4,
					0,0,0,
					0.002,0,0,
					0.002,gs_gutter_p_w,0,
					0,gs_gutter_p_w,0
			Endif
			addx 0.025
		NEXT j
		DEL nx

		FOR j=1 TO ny
			IF j > 1 Then
				Plane 4,
					0,0,0,
					hossz,0,0,
					hossz,0.002,0,
					0,0.002,0
			Endif
			addy 0.025
		NEXT j
		DEL ny

		DEL 1 : IF L_ANG < 0 THEN DEL 1
		Material gs_gutter_mat
	ENDIF


!!Downspout Part beginning!!
IF gs_gutter_downspout1 THEN

	IF gs_gutter_g_ds_profile_num = 1 THEN
	   ADD gs_gutter_downspout_x_pos1 + gs_gutter_dd, gs_gutter_downspout_y_pos1, 0
	ELSE
	   ADD gs_gutter_downspout_x_pos1 + gs_gutter_aa, gs_gutter_downspout_y_pos1, 0
	ENDIF

	IF gs_gutter_strainer1=1 THEN												!!STRAINER!!
		CALL "m_GutterStrainer"  parameters  all
	ENDIF

	ROTX 90
	ROTY -90

	CALL "m_GutterProfiles" PARAMETERS gs_gutter_p_num=gs_gutter_p_num, !!STACK UPLOAD!!
										gs_mask=0,
										gs_gutter_p_w=gs_gutter_p_w,
										gs_gutter_p_h=gs_gutter_p_h,
										gs_gutter_p_r=gs_gutter_p_r

	CUTPOLYA nsp/3, 1, 0, get(nsp)								!!CUTTING POLYGON!!

	ROTX 90
	ROTZ 90

if gs_gutter_downspout1=1 Then
	CALL "m_DSProfiles" PARAMETERS gs_gutter_ds_profile_num=gs_gutter_g_ds_profile_num,
										gs_mask=0,
										gs_gutter_aa=gs_gutter_aa,
										gs_gutter_bb=gs_gutter_bb,
										gs_gutter_dd=gs_gutter_dd

	TUBE nsp/3,4,4+8+16+32,	get(nsp),
			0,	0,	gs_gutter_p_h + 1,	0,
			0,	0,	gs_gutter_p_h,		0,
			0,	0,	0,					0,
			0,	0,	-1,					0
	DEL 2
Endif
	CUTEND

	DEL 3

	IF gs_gutter_g_ds_profile_num = 1 THEN									!!3D HOTSPOTs DownSpout_Hole!!
		AAA= gs_gutter_dd	: BBB= 0			: GOSUB 1					!!3D HOTSPOTs DownSpout_Hole - Round Profile!!
		AAA= gs_gutter_dd	: BBB= gs_gutter_dd	: GOSUB 1
		AAA= gs_gutter_dd	: BBB=-gs_gutter_dd	: GOSUB 1
		AAA= 0				: BBB= 0			: GOSUB 1
		AAA= 2*gs_gutter_dd	: BBB= 0			: GOSUB 1
	ELSE																	!!3D HOTSPOTs DownSpout_Hole - NOT_Round Profile!!
		AAA= gs_gutter_aa	: BBB= 0			: GOSUB 1
		AAA= 2*gs_gutter_aa	: BBB= gs_gutter_bb	: GOSUB 1
		AAA= 2*gs_gutter_aa	: BBB=-gs_gutter_bb	: GOSUB 1
		AAA= 0				: BBB= gs_gutter_bb	: GOSUB 1
		AAA= 0				: BBB=-gs_gutter_bb	: GOSUB 1
	ENDIF
ENDIF


!!GUTTER_HANGER!!
																														!!3D HOTSPOTs!!
IF gs_gutter_hanger1 THEN
!	sthw = 0
	IF gs_gutter_hanger_positioning1 = HANGER_UNIFORM THEN
		FOR i=1 TO INT((gs_gutter_lgth1-gs_gutter_hanger_off1-sthw)/gs_gutter_hanger_dist1)+1										!!3D HOTSPOTs for HANGER Position setting!!
	
			HOTSPOT  0,									0, 0, unID, gs_gutter_hanger_pos1[i], 1+128	:unID=unID+1 !!base
			HOTSPOT -100,								0, 0, unID, gs_gutter_hanger_pos1[i], 3		:unID=unID+1 !!lgth ref
			HOTSPOT  gs_gutter_hanger_pos1[i],	0, 0, unID, gs_gutter_hanger_pos1[i], 2		:unID=unID+1 !!lgth mov
	
			ADDX gs_gutter_hanger_pos1[i] - sthw/2																						!!GUTTER HANGERs 3D!!
				CALL "m_GutterHanger" PARAMETERS gs_gutter_p_num=gs_gutter_p_num,
												gs_gutter_p_w=gs_gutter_p_w,
												gs_gutter_p_h=gs_gutter_p_h,
												gs_gutter_p_r=gs_gutter_p_r,
												gs_detlevel_3D_m=gs_detlevel_3D_m,
												gs_resol=gs_resol,
												gs_shadow=gs_shadow,
												gs_line_type=gs_line_type,
												gs_cont_pen=gs_cont_pen,
												gs_fill_type=gs_fill_type,
												gs_fill_pen=gs_fill_pen,
												gs_back_pen=gs_back_pen,
												gs_gutter_hanger_mat=gs_gutter_hanger_mat
	!											gs_gutter_slope=gs_gutter_slope1
	
						IF gs_gutter_slope1 > 0 THEN
							zz  = gs_gutter_slope1 * ( (gs_gutter_hanger_pos1[i] / gs_gutter_lgth1))
						ELSE
							zz  = gs_gutter_slope1 * (-1 + (gs_gutter_hanger_pos1[i] / gs_gutter_lgth1))
						ENDIF
						zzz = zz + gs_gutter_hanger_v + sth
						MATERIAL gs_gutter_hanger_mat
							IF iHangerType = HANGERTYPE_BAR1 THEN GOSUB 5
							IF iHangerType = HANGERTYPE_BAR2 THEN GOSUB 6
			DEL 1
		NEXT i
	ELSE
			FOR i=1 TO hangeri1
	
			HOTSPOT  0,									0, 0, unID, gs_gutter_hanger_pos1[i], 1+128	:unID=unID+1 !!base
			HOTSPOT -100,								0, 0, unID, gs_gutter_hanger_pos1[i], 3		:unID=unID+1 !!lgth ref
			HOTSPOT  gs_gutter_hanger_pos1[i],	0, 0, unID, gs_gutter_hanger_pos1[i], 2		:unID=unID+1 !!lgth mov

			ADDX gs_gutter_hanger_pos1[i] - sthw/2																						!!GUTTER HANGERs 3D!!
				CALL "m_GutterHanger" PARAMETERS gs_gutter_p_num=gs_gutter_p_num,
												gs_gutter_p_w=gs_gutter_p_w,
												gs_gutter_p_h=gs_gutter_p_h,
												gs_gutter_p_r=gs_gutter_p_r,
												gs_detlevel_3D_m=gs_detlevel_3D_m,
												gs_resol=gs_resol,
												gs_shadow=gs_shadow,
												gs_line_type=gs_line_type,
												gs_cont_pen=gs_cont_pen,
												gs_fill_type=gs_fill_type,
												gs_fill_pen=gs_fill_pen,
												gs_back_pen=gs_back_pen,
												gs_gutter_hanger_mat=gs_gutter_hanger_mat
	!											gs_gutter_slope=gs_gutter_slope1
	
						IF gs_gutter_slope1 > 0 THEN
							zz  = gs_gutter_slope1 * ( (gs_gutter_hanger_pos1[i] / gs_gutter_lgth1))
						ELSE
							zz  = gs_gutter_slope1 * (-1 + (gs_gutter_hanger_pos1[i] / gs_gutter_lgth1))
						ENDIF
						zzz = zz + gs_gutter_hanger_v + sth
						MATERIAL gs_gutter_hanger_mat
							IF iHangerType = HANGERTYPE_BAR1 THEN GOSUB 5
							IF iHangerType = HANGERTYPE_BAR2 THEN GOSUB 6
			DEL 1
		NEXT i
	
	ENDIF
ENDIF

!!3D HOTSPOTs GUTTER_BODY!!
HOTSPOT 0,					gs_gutter_p_w/2,	0,	unID,	gs_gutter_lgth1,	1+256	:unID=unID+1 !!base
HOTSPOT -1,					gs_gutter_p_w/2,	0,	unID,	gs_gutter_lgth1,	3		:unID=unID+1 !!lgth ref
HOTSPOT gs_gutter_lgth1,	gs_gutter_p_w/2,	0,	unID,	gs_gutter_lgth1,	2		:unID=unID+1 !!lgth mov

!!!!HOTSPOT 0,					-gs_gutter_p_w/2,	0,	unID,	gs_gutter_lgth1,	1+256	:unID=unID+1 !!base
!!!!HOTSPOT -1,					-gs_gutter_p_w/2,	0,	unID,	gs_gutter_lgth1,	3		:unID=unID+1 !!lgth ref
!!!!HOTSPOT gs_gutter_lgth1,	-gs_gutter_p_w/2,	0,	unID,	gs_gutter_lgth1,	2		:unID=unID+1 !!lgth mov

HOTSPOT  gs_gutter_p_w/2 * TAN(L_ANG),											0,	0,	unID	:unID=unID+1				!!Left Middle!!

HOTSPOT  gs_gutter_lgth1 + gs_gutter_p_w/2 * TAN(gs_gutter_endcap1_ang),	0,	0,	unID	:unID=unID+1				!!Rigth Middle!!

HOTSPOT  gs_gutter_p_w * TAN(L_ANG),										-gs_gutter_p_w/2,	0,	unID	:unID=unID+1	!!Left End!!
HOTSPOT  gs_gutter_lgth1 + gs_gutter_p_w * TAN(gs_gutter_endcap1_ang),	-gs_gutter_p_w/2,	0,	unID	:unID=unID+1	!!Rigth End!!

DEL 1																																	!!Sloping!!
CUTEND
CUTEND																																	!!CUTEND rigth END!!


!!GUTTER ENDCAPs 3D!!
IF gs_gutter_endcap1 THEN
		CALL "m_GutterProfiles" PARAMETERS gs_gutter_p_num=gs_gutter_p_num,
										  gs_mask=0,
										  gs_gutter_p_w=gs_gutter_p_w,
										  gs_gutter_p_h=gs_gutter_p_h,
										  gs_gutter_p_r=gs_gutter_p_r
	!ii=nsp
	!FOR i=1 TO ii
	!	IF nsp > i THEN
	!		gs_array1[i]=get(1)
	!	ELSE
	!		temp=get(1)
	!	ENDIF
	!NEXT i

	!FOR i=1 TO ii/2 : PUT gs_array1[i] : NEXT i

	ADDZ -gs_gutter_lgth1*TAN(slope_ang1)
	ADDX gs_gutter_lgth1-st + gs_gutter_p_w/2 * TAN(gs_gutter_endcap1_ang)
	ROTZ gs_gutter_endcap1_ang
	MUL 1, 1/COS(gs_gutter_endcap1_ang), 1
		MATERIAL gs_gutter_mat
		TUBE nsp/3,4,1+2+4+8+16+32,	get(nsp),
			st+1,	0,	0,	0,
			st,		0,	0,	0,
			0,		0,	0,	0,
			-1,		0,	0,	0
	DEL 4
ENDIF


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!MITRESS2_GUTTER BODY 3D - w/ hole [is cut by Downspout]!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
IF gs_gutter_mitress_ang < 180 THEN																			!!   0 < MITRESS_ANGLE < 180!!
	ADD -gs_gutter_p_w/2 * SIN(gs_gutter_mitress_ang), gs_gutter_p_w/2 * (1+COS(gs_gutter_mitress_ang)),0
ELSE																										!! 180 < MITRESS_ANGLE < 360!!
	ADD gs_gutter_p_w/2 * SIN(gs_gutter_mitress_ang), -gs_gutter_p_w/2 * (1+COS(gs_gutter_mitress_ang)),0
ENDIF

ROTZ gs_gutter_mitress_ang
MULY -1

	!!GUTTER BODY 3D - w/ hole [is cut by Downspout]!!
	MATERIAL gs_gutter_mat


	IF gs_gutter_mitress_ang < 180 THEN
		CUTPLANE  -L/2,  gs_gutter_p_w/2
	ELSE
		CUTPLANE  -L/2, -gs_gutter_p_w/2
	ENDIF

	ADD gs_gutter_lgth2, gs_gutter_p_w/2, 0																	!!CUT rigth END!!
	ROTZ gs_gutter_endcap2_ang
		CUTPLANE 0,1,1,0
	DEL 2

	ROTY(slope_ang2)

	IF gs_gutter_downspout2=1 Then

	   CALL "m_DSProfiles" PARAMETERS gs_gutter_ds_profile_num=gs_gutter_g_ds_profile_num,
											gs_mask=0,
											gs_gutter_aa=gs_gutter_aa,
											gs_gutter_bb=gs_gutter_bb,
											gs_gutter_dd=gs_gutter_dd

	   IF gs_gutter_g_ds_profile_num = 1 THEN
		  ADD gs_gutter_downspout_x_pos2 + gs_gutter_dd, gs_gutter_downspout_y_pos2, 0
	   ELSE
		  ADD gs_gutter_downspout_x_pos2 + gs_gutter_aa, gs_gutter_downspout_y_pos2, 0
	   ENDIF

	   CUTPOLYA nsp/3, 1, 0, get(nsp)

	   DEL 1

	ENDIF

	!!GUTTER ENDCAPs 3D!!
	IF gs_gutter_endcap2 THEN
		CALL "m_GutterProfiles" PARAMETERS gs_gutter_p_num=gs_gutter_p_num,
										  gs_mask=0, gs_gutter_p_w=gs_gutter_p_w,
										  gs_gutter_p_h=gs_gutter_p_h,
										  gs_gutter_p_r=gs_gutter_p_r
		!ii=nsp
		!FOR i=1 TO ii
		!	IF nsp > i THEN
		!		gs_array2[i]=get(1)
		!	ELSE
		!		temp=get(1)
		!	ENDIF
		!NEXT i

		!FOR i=1 TO ii/2 : PUT gs_array2[i] : NEXT i

		ADDx gs_gutter_lgth2-st
		ADDX gs_gutter_p_w/2 * TAN(gs_gutter_endcap2_ang)
		ROTZ gs_gutter_endcap2_ang
		MUL 1, 1/COS(gs_gutter_endcap2_ang), 1
			MATERIAL gs_gutter_mat
			TUBE nsp/3,4,1+2+4+8+16+32,	get(nsp),
				st+1,	0,	0,	0,
				st,		0,	0,	0,
				0,		0,	0,	0,
				-1,		0,	0,	0
		DEL 4
	ENDIF



		CALL "m_GutterProfiles" PARAMETERS gs_gutter_p_num=gs_gutter_p_num, gs_mask=0, gs_gutter_p_w=gs_gutter_p_w, gs_gutter_p_h=gs_gutter_p_h, gs_gutter_p_r=gs_gutter_p_r
			!sl=nsp   :   FOR i=1 TO sl/2 : gs_array2[i]=get(1) : NEXT i   :   FOR i=1 TO sl/2 : temp=get(1) : NEXT i   :   FOR i=1 TO sl/2 : put gs_array2[i] : NEXT i
			ROTZ -90 : ROTX 90
				LGTH = -gs_gutter_lgth2/COS(slope_ang2) - ABS(gs_gutter_p_h*TAN(slope_ang2))
				IF L_ANG 					< 0 THEN LGTH = LGTH + gs_gutter_p_w * TAN(L_ANG)
				IF gs_gutter_endcap2_ang 	> 0 THEN LGTH = LGTH - gs_gutter_p_w * TAN(gs_gutter_endcap2_ang)
				IF L_ANG 					< 0 THEN ADDZ -gs_gutter_p_w * TAN(L_ANG)
					IF slope_ang2 < 0 THEN ADDZ -gs_gutter_p_h * TAN(slope_ang2)
						EXTRUDE   nsp/3, 0, 0, LGTH, 0, get(nsp)											!!GUTTER 'BODY'!!
					IF slope_ang2 < 0 THEN DEL 1
			DEL 2 : IF L_ANG < 0 THEN DEL 1
if gs_gutter_downspout2=1 Then CUTEND


		!!3D GUTTER GUARD!!
		IF gs_gutter_guard = 1 THEN																				!!3D GUTTER GUARD!!
			ww=0.002							!!guard wire width!!
			hx1=0.023							!!hole width!!
			hy1=0.023							!!hole depth!!

			nx=INT((-LGTH)/hx1)				!!guard x number of holes!!
			ny=INT(gs_gutter_p_w/hy1)			!!guard y number of holes!!

			IF L_ANG < 0 THEN
				ADDX gs_gutter_p_w * TAN(L_ANG)
				hossz = gs_gutter_lgth2-(gs_gutter_p_w * TAN(L_ANG))+gs_gutter_p_w
			Else
				hossz = gs_gutter_lgth2+gs_gutter_p_w
			Endif

			IF L_ANG > 0 THEN 	hossz= hossz + (gs_gutter_p_w * TAN(L_ANG))+gs_gutter_p_w

			ADD 0,-gs_gutter_p_w/2,-sth/10

			material gs_gutter_guard_mat


			FOR j=1 TO nx
				IF j > 1 Then
					Plane 4,
						0,0,0,
						0.002,0,0,
						0.002,gs_gutter_p_w,0,
						0,gs_gutter_p_w,0
				Endif
				addx 0.025
			NEXT j
			DEL nx

			FOR j=1 TO ny
				IF j > 1 Then
					Plane 4,
						0,0,0,
						hossz,0,0,
						hossz,0.002,0,
						0,0.002,0
				Endif
			addy 0.025
			NEXT j
			DEL ny
			DEL 1 : 	IF L_ANG < 0 THEN DEL 1

			material gs_gutter_mat
		ENDIF


	IF gs_gutter_downspout2 THEN																				!!DOWNSPOUT - Part_begining!!

	   IF gs_gutter_g_ds_profile_num = 1 THEN
		  ADD gs_gutter_downspout_x_pos2 + gs_gutter_dd, gs_gutter_downspout_y_pos2, 0
	   ELSE
		  ADD gs_gutter_downspout_x_pos2 + gs_gutter_aa, gs_gutter_downspout_y_pos2, 0
	   ENDIF

			IF gs_gutter_strainer2=1 THEN																		!!STRAINER!!

				CALL "m_GutterStrainer"  parameters  all
			ENDIF

		ROTX 90
		ROTY -90
			CALL "m_GutterProfiles" PARAMETERS gs_gutter_p_num=gs_gutter_p_num, gs_mask=0, gs_gutter_p_w=gs_gutter_p_w, gs_gutter_p_h=gs_gutter_p_h, gs_gutter_p_r=gs_gutter_p_r !!STACK UPLOAD!!
			!ii=nsp
			!FOR i=1 TO ii
			!	IF nsp > ii/2 THEN
			!		gs_array2[i]=get(1)
			!	ELSE
			!		temp=get(1)
			!	ENDIF
			!NEXT i
			!FOR i=1 TO ii/2 : PUT gs_array2[i] : NEXT i

			CUTPOLYA nsp/3, 1, 0, get(nsp)																		!!CUTTING POLYGON!!
				ROTX 90
				ROTZ 90
					CALL "m_DSProfiles" PARAMETERS gs_gutter_ds_profile_num=gs_gutter_g_ds_profile_num, gs_mask=0, gs_gutter_aa=gs_gutter_aa, gs_gutter_bb=gs_gutter_bb, gs_gutter_dd=gs_gutter_dd
					TUBE nsp/3,4,4+8+16+32,	get(nsp),
						0,	0,	gs_gutter_p_h + 1,	0,
						0,	0,	gs_gutter_p_h,		0,
						0,	0,	0,					0,
						0,	0,	-1,					0
				DEL 2
			CUTEND
		DEL 3

		IF gs_gutter_g_ds_profile_num = 1 THEN																	!!3D HOTSPOTs DownSpout_Hole!!
			AAA= gs_gutter_dd	: BBB= 0			: GOSUB 2													!!3D HOTSPOTs DownSpout_Hole - Round Profile!!
			AAA= gs_gutter_dd	: BBB= gs_gutter_dd	: GOSUB 2
			AAA= gs_gutter_dd	: BBB=-gs_gutter_dd	: GOSUB 2
			AAA= 0				: BBB= 0			: GOSUB 2
			AAA= 2*gs_gutter_dd	: BBB= 0			: GOSUB 2
		ELSE																									!!3D HOTSPOTs DownSpout_Hole - NOT_Round Profile!!
			AAA= gs_gutter_aa	: BBB= 0			: GOSUB 2
			AAA= 2*gs_gutter_aa	: BBB= gs_gutter_bb	: GOSUB 2
			AAA= 2*gs_gutter_aa	: BBB=-gs_gutter_bb	: GOSUB 2
			AAA= 0				: BBB= gs_gutter_bb	: GOSUB 2
			AAA= 0				: BBB=-gs_gutter_bb	: GOSUB 2
		ENDIF
	ENDIF


	!!GUTTER_HANGER!!
	!unID=0																																!!3D HOTSPOTs!!
	IF gs_gutter_hanger2 THEN
		IF gs_gutter_hanger_positioning2 = HANGER_UNIFORM THEN
			FOR i=1 TO INT((gs_gutter_lgth2+LR_END2-gs_gutter_hanger_off2-sthw)/gs_gutter_hanger_dist2)+1									!!3D HOTSPOTs for HANGER Position setting!!
				HOTSPOT  0,									0, 0, unID, gs_gutter_hanger_pos2[i], 1+128	:unID=unID+1 !!base
				HOTSPOT -100,								0, 0, unID, gs_gutter_hanger_pos2[i], 3		:unID=unID+1 !!lgth ref
				HOTSPOT  gs_gutter_hanger_pos2[i],	0, 0, unID, gs_gutter_hanger_pos2[i], 2		:unID=unID+1 !!lgth mov
	
				ADDX gs_gutter_hanger_pos2[i] - sthw/2																						!!GUTTER HANGERs 3D!!
					CALL "m_GutterHanger" PARAMETERS gs_gutter_p_num=gs_gutter_p_num,
													gs_gutter_p_w=gs_gutter_p_w,
													gs_gutter_p_h=gs_gutter_p_h,
													gs_gutter_p_r=gs_gutter_p_r,
													gs_detlevel_3D_m=gs_detlevel_3D_m,
													gs_resol=gs_resol,
													gs_shadow=gs_shadow,
													gs_line_type=gs_line_type,
													gs_cont_pen=gs_cont_pen,
													gs_fill_type=gs_fill_type,
													gs_fill_pen=gs_fill_pen,
													gs_back_pen=gs_back_pen,
													gs_gutter_hanger_mat=gs_gutter_hanger_mat
	!												gs_gutter_slope=gs_gutter_slope
	
					IF gs_gutter_slope2 > 0 THEN
						zz  = gs_gutter_slope2 * ( (gs_gutter_hanger_pos2[i] / gs_gutter_lgth2))
					ELSE
						zz  = gs_gutter_slope2 * (-1 + (gs_gutter_hanger_pos2[i] / gs_gutter_lgth2))
					ENDIF
					zzz = zz + gs_gutter_hanger_v + sth
					MATERIAL gs_gutter_hanger_mat
						IF iHangerType = HANGERTYPE_BAR1 THEN GOSUB 7
						IF iHangerType = HANGERTYPE_BAR2 THEN GOSUB 8
				DEL 1
			NEXT i
		ELSE
				FOR i=1 TO hangeri2
		
				HOTSPOT  0,									0, 0, unID, gs_gutter_hanger_pos2[i], 1+128	:unID=unID+1 !!base
				HOTSPOT -100,								0, 0, unID, gs_gutter_hanger_pos2[i], 3		:unID=unID+1 !!lgth ref
				HOTSPOT  gs_gutter_hanger_pos2[i],	0, 0, unID, gs_gutter_hanger_pos2[i], 2		:unID=unID+1 !!lgth mov

				ADDX gs_gutter_hanger_pos2[i] - sthw/2																						!!GUTTER HANGERs 3D!!
					CALL "m_GutterHanger" PARAMETERS gs_gutter_p_num=gs_gutter_p_num,
													gs_gutter_p_w=gs_gutter_p_w,
													gs_gutter_p_h=gs_gutter_p_h,
													gs_gutter_p_r=gs_gutter_p_r,
													gs_detlevel_3D_m=gs_detlevel_3D_m,
													gs_resol=gs_resol,
													gs_shadow=gs_shadow,
													gs_line_type=gs_line_type,
													gs_cont_pen=gs_cont_pen,
													gs_fill_type=gs_fill_type,
													gs_fill_pen=gs_fill_pen,
													gs_back_pen=gs_back_pen,
													gs_gutter_hanger_mat=gs_gutter_hanger_mat
	!												gs_gutter_slope=gs_gutter_slope
	
					IF gs_gutter_slope2 > 0 THEN
						zz  = gs_gutter_slope2 * ( (gs_gutter_hanger_pos2[i] / gs_gutter_lgth2))
					ELSE
						zz  = gs_gutter_slope2 * (-1 + (gs_gutter_hanger_pos2[i] / gs_gutter_lgth2))
					ENDIF
					zzz = zz + gs_gutter_hanger_v + sth
					MATERIAL gs_gutter_hanger_mat
						IF iHangerType = HANGERTYPE_BAR1 THEN GOSUB 7
						IF iHangerType = HANGERTYPE_BAR2 THEN GOSUB 8
				DEL 1
			NEXT i
		
		ENDIF
	ENDIF

	!!3D HOTSPOTs GUTTER_BODY!!
	HOTSPOT 0,					gs_gutter_p_w/2,		0,	unID,	gs_gutter_lgth2,	1+256	:unID=unID+1 !!base
	HOTSPOT -1,					gs_gutter_p_w/2,		0,	unID,	gs_gutter_lgth2,	3		:unID=unID+1 !!lgth ref
	HOTSPOT gs_gutter_lgth2,	gs_gutter_p_w/2,		0,	unID,	gs_gutter_lgth2,	2		:unID=unID+1 !!lgth mov

!!!!	HOTSPOT 0,					-gs_gutter_p_w/2,	0,	unID,	gs_gutter_lgth2,	1+256	:unID=unID+1 !!base
!!!!	HOTSPOT -1,					-gs_gutter_p_w/2,	0,	unID,	gs_gutter_lgth2,	3		:unID=unID+1 !!lgth ref
!!!!	HOTSPOT gs_gutter_lgth2,	-gs_gutter_p_w/2,	0,	unID,	gs_gutter_lgth2,	2		:unID=unID+1 !!lgth mov
HOTSPOT  gs_gutter_p_w/2 * TAN(L_ANG),										0,	0,	unID	:unID=unID+1								!!Left Middle!!
HOTSPOT  gs_gutter_lgth2 + gs_gutter_p_w/2 * TAN(gs_gutter_endcap2_ang),	0,	0,	unID	:unID=unID+1								!!Rigth Middle!!

HOTSPOT  gs_gutter_p_w * TAN(L_ANG),										-gs_gutter_p_w/2,	0,	unID	:unID=unID+1				!!Left End!!
HOTSPOT  gs_gutter_lgth2 + gs_gutter_p_w * TAN(gs_gutter_endcap2_ang),	-gs_gutter_p_w/2,	0,	unID	:unID=unID+1				!!Rigth End!!

DEL 3																																	!!MITRESS2 side 3D Transformation delete!!

DEL 1																											!!Sloping!!
CUTEND
CUTEND																											!!CUTEND rigth END!!

!	!!GUTTER ENDCAPs 3D!!
!	IF gs_gutter_endcap2 THEN
!!		rotz 90
!		addx -gs_gutter_p_w/2
!		ROTZ gs_gutter_mitress_ang
!		CALL "Gutter_profiles" PARAMETERS gs_gutter_p_num=gs_gutter_p_num,
!										  gs_mask=0, gs_gutter_p_w=gs_gutter_p_w,
!										  gs_gutter_p_h=gs_gutter_p_h,
!										  gs_gutter_p_r=gs_gutter_p_r
!		ii=nsp
!		FOR i=1 TO ii
!			IF nsp > i THEN
!				gs_array2[i]=get(1)
!			ELSE
!				temp=get(1)
!			ENDIF
!		NEXT i
!
!		FOR i=1 TO ii/2 : PUT gs_array2[i] : NEXT i
!
!!		ADDZ -gs_gutter_lgth2*TAN(slope_ang2)
!!		ADDX (gs_gutter_lgth2-st+gs_gutter_p_w/2) + gs_gutter_p_w/2 * TAN(gs_gutter_endcap2_ang)
!!		ADDy gs_gutter_p_w/2
!!		ROTZ -gs_gutter_endcap2_ang
!!		MULY -1
!!		MUL 1, 1/COS(gs_gutter_endcap2_ang), 1
!			MATERIAL gs_gutter_mat
!			TUBE nsp/3,4,1+2+4+8+16+32,	get(nsp),
!				st+1,	0,	0,	0,
!				st,		0,	0,	0,
!				0,		0,	0,	0,
!				-1,		0,	0,	0
!!		DEL 4+2
!	ENDIF


END


1: !!2D HOTSPOTs DOWNSPOUT_HOLE Position!!
	HOTSPOT AAA,							 BBB,	-gs_gutter_p_h,	unID,	gs_gutter_downspout_x_pos1,	1+128:	unID=unID+1 !!base
	HOTSPOT AAA-1,							 BBB,	-gs_gutter_p_h,	unID,	gs_gutter_downspout_x_pos1,	3:		unID=unID+1 !!lgth ref
	HOTSPOT AAA+gs_gutter_downspout_x_pos1,	 BBB,	-gs_gutter_p_h,	unID,	gs_gutter_downspout_x_pos1,	2:		unID=unID+1 !!lgth mov
RETURN

2: !!2D HOTSPOTs DOWNSPOUT_HOLE Position!!
	HOTSPOT AAA,							 BBB,	-gs_gutter_p_h,	unID,	gs_gutter_downspout_x_pos2,	1+128:	unID=unID+1 !!base
	HOTSPOT AAA-1,							 BBB,	-gs_gutter_p_h,	unID,	gs_gutter_downspout_x_pos2,	3:		unID=unID+1 !!lgth ref
	HOTSPOT AAA+gs_gutter_downspout_x_pos2,	 BBB,	-gs_gutter_p_h,	unID,	gs_gutter_downspout_x_pos2,	2:		unID=unID+1 !!lgth mov
RETURN

3:		!!hanger made in Gutter.gsm, because of sloping!!
	TUBE 4,5,1+2+4+8+16+32,																														!!3D hanger horizontal & roof part!!
		0,			-sth/2,		0,
		sthw,		-sth/2,		0,
		sthw,		 sth/2,		0,
		0,			 sth/2,		0,
		0,		2*(sthh * SIN(gs_gutter_roof_angle)),	 zzz + 2*(sthh * COS(gs_gutter_roof_angle)),	0,
		0,		1*(sthh * SIN(gs_gutter_roof_angle)),	 zzz + 1*(sthh * COS(gs_gutter_roof_angle)),	0,
		0,		0,										 zzz,											0,
		0,		0,										 sth,											0,
		0,		0,										-1,												0
RETURN

4:		!!hanger made in Gutter.gsm, because of sloping!!
	TUBE 4,5,1+2+4+8+16+32,																														!!3D hanger horizontal & roof part!!
		0,			-sth/2,		0,
		sthw,		-sth/2,		0,
		sthw,		 sth/2,		0,
		0,			 sth/2,		0,
		0,		gs_gutter_p_w/2+sth/2 + 2*(sthh * SIN(gs_gutter_roof_angle)),	 zzz + 2*(sthh * COS(gs_gutter_roof_angle)),	0,
		0,		gs_gutter_p_w/2+sth/2 + 1*(sthh * SIN(gs_gutter_roof_angle)),	 zzz + 1*(sthh * COS(gs_gutter_roof_angle)),	0,
		0,		gs_gutter_p_w/2+sth/2,										 zzz,											0,
		0,		gs_gutter_p_w/2+sth/2,										 sth,											0,
		0,		gs_gutter_p_w/2+sth/2,										-1,												0
RETURN

5:		!!hanger made in Gutter.gsm, because of sloping!!
	TUBE 4,5,1+2+4+8+16+32,																														!!3D hanger horizontal & roof part!!
		0,			-sth/2,		0,
		sthw,		-sth/2,		0,
		sthw,		 sth/2,		0,
		0,			 sth/2,		0,
		0,		2*(sthh * SIN(90-gs_gutter_roof_angle1)),	 zzz + 2*(sthh * COS(90-gs_gutter_roof_angle1)),	0,
		0,		1*(sthh * SIN(90-gs_gutter_roof_angle1)),	 zzz + 1*(sthh * COS(90-gs_gutter_roof_angle1)),	0,
		0,		0,										 zzz,											0,
		0,		0,										 sth,											0,
		0,		0,										-1,												0
RETURN

6:		!!hanger made in Gutter.gsm, because of sloping!!
	TUBE 4,5,1+2+4+8+16+32,																														!!3D hanger horizontal & roof part!!
		0,			-sth/2,		0,
		sthw,		-sth/2,		0,
		sthw,		 sth/2,		0,
		0,			 sth/2,		0,
		0,		gs_gutter_p_w/2+sth/2 + 2*(sthh * SIN(90-gs_gutter_roof_angle1)),	 zzz + 2*(sthh * COS(90-gs_gutter_roof_angle1)),	0,
		0,		gs_gutter_p_w/2+sth/2 + 1*(sthh * SIN(90-gs_gutter_roof_angle1)),	 zzz + 1*(sthh * COS(90-gs_gutter_roof_angle1)),	0,
		0,		gs_gutter_p_w/2+sth/2,										 zzz,											0,
		0,		gs_gutter_p_w/2+sth/2,										 sth,											0,
		0,		gs_gutter_p_w/2+sth/2,										-1,												0
RETURN

7:		!!hanger made in Gutter.gsm, because of sloping!!
	TUBE 4,5,1+2+4+8+16+32,											!!3D hanger horizontal & roof part!!
		0,			-sth/2,		0,
		sthw,		-sth/2,		0,
		sthw,		 sth/2,		0,
		0,			 sth/2,		0,
		0,		2*(sthh * SIN(90-gs_gutter_roof_angle2)),	 zzz + 2*(sthh * COS(90-gs_gutter_roof_angle2)),	0,
		0,		1*(sthh * SIN(90-gs_gutter_ro0of_angle2)),	 zzz + 1*(sthh * COS(90-gs_gutter_roof_angle2)),	0,
		0,		0,										 zzz,											0,
		0,		0,										 sth,											0,
		0,		0,										-1,												0
RETURN

8:		!!hanger made in Gutter.gsm, because of sloping!!
	TUBE 4,5,1+2+4+8+16+32,											!!3D hanger horizontal & roof part!!
		0,			-sth/2,		0,
		sthw,		-sth/2,		0,
		sthw,		 sth/2,		0,
		0,			 sth/2,		0,
		0,		gs_gutter_p_w/2+sth/2 + 2*(sthh * SIN(90-gs_gutter_roof_angle2)),	 zzz + 2*(sthh * COS(90-gs_gutter_roof_angle2)),	0,
		0,		gs_gutter_p_w/2+sth/2 + 1*(sthh * SIN(90-gs_gutter_roof_angle2)),	 zzz + 1*(sthh * COS(90-gs_gutter_roof_angle2)),	0,
		0,		gs_gutter_p_w/2+sth/2,										 zzz,											0,
		0,		gs_gutter_p_w/2+sth/2,										 sth,											0,
		0,		gs_gutter_p_w/2+sth/2,										-1,												0
RETURN

