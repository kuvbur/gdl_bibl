
! Venetian Blind

if gs_detlevel_3D_m = DLEV3D_OFF then end
IF gs_shadow=0 THEN SHADOW OFF


pen gs_cont_pen

! --- hotspots --------------------------------------------------------------------------
unID = 1

hotspot a/2, 0, 0, unID, openingHeight, 1+128 : unID = unID + 1
hotspot a/2, 0, openingHeight, unID, openingHeight, 2 : unID = unID + 1
hotspot a/2, 0, -1, unID, openingHeight, 3 : unID = unID + 1

hotspot 0, 0, 0, unID : unID = unID + 1
hotspot a, 0, 0, unID : unID = unID + 1
hotspot 0, b, 0, unID : unID = unID + 1
hotspot a, b, 0, unID : unID = unID + 1

hotspot 0, 0, zzyzx, unID : unID = unID + 1
hotspot a, 0, zzyzx, unID : unID = unID + 1
hotspot 0, b, zzyzx, unID : unID = unID + 1
hotspot a, b, zzyzx, unID : unID = unID + 1

hotspot 0, 0, zzyzx - thd, unID : unID = unID + 1
hotspot a, 0, zzyzx - thd, unID : unID = unID + 1
hotspot 0, b, zzyzx - thd, unID : unID = unID + 1
hotspot a, b, zzyzx - thd, unID : unID = unID + 1


ADDZ zzyzx

AYDIST1=-wb*.5
AZDIST1=(wb*.8)

! --- The head --------------------------------------------------------------------------
material hemat
addz -thd
block A, B, thd

! --- The string ------------------------------------------------------------------------
Material strmat
Resol gs_resol
stringLength = zzyzx - openingHeight
ADDZ -(stringLength-thd)

IF gs_detlevel_3D_m = DLEV3D_DETAILED then
	yy = (wb/2-0.005)*cos(ab)-0.001
	ADDX A*.2
	if yy > 0.001 then
		ADDY B/2-yy
		Cylind (stringLength-thd), .001
		del 1

		ADDY B/2+yy
		Cylind (stringLength-thd), .001
		Del 1
	else
		ADDY B/2
		Cylind (stringLength-thd), .001
		Del 1
	endif
	ADDX A*.6
	if yy > 0.001 then
		ADDY B/2-yy
		Cylind (stringLength-thd), .001
		del 1

		ADDY B/2+yy
		Cylind (stringLength-thd), .001
		del 1
	else
		ADDY B/2
		Cylind (stringLength-thd), .001
		del 1
	endif
	Del 2
ENDIF

! --- The blades ------------------------------------------------------------------------
Material blmat
ADDY B*.5
for count = 1 to ABS(stringLength/(wb*.8))
	ROTX ab
	ADDY AYDIST1
	if gs_detlevel_3D_m = DLEV3D_DETAILED then
		block a, wb, 0.0001
	else
		rect A, wb
	endif
	DEL 2
	ADDZ AZDIST1
next count


