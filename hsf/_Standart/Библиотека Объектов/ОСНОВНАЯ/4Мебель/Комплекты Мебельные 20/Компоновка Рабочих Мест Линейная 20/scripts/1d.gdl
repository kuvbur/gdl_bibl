
EPS = 0.0001

partitionFrameThk	= 0.03
maxDeskNumberByWave	= 20

CABINET				= 0
SIMPLE_DESK			= 1
LAYOUT_ISLAND		= 2
LAYOUT_LINEAR		= 3
WS_SOLO				= 4

dim	stLayoutType[3]
	stLayoutType[1] = `Прямой`
	stLayoutType[2] = `Кубическая`
	stLayoutType[3] = `Волна`

LAYOUT_STRAIGHT	= 1
LAYOUT_CUBICLE	= 2
LAYOUT_WAVE		= 3

dim	stArrangement[2]
	stArrangement[1] = `Зеркально`
	stArrangement[2] = `С Поворотом`

ARRANGE_MIRR	= 1
ARRANGE_ROT		= 2

dim	stSizing[2]
	stSizing[1] = `по Размеру Рабочего Места`
	stSizing[2] = `по Количество Рабочих Мест`

SIZING_WS_SIZE	= 1
SIZING_WS_COUNT	= 2

dim	stDeskSizing[2]
	stDeskSizing[1] = `Постоянный Угол`
	stDeskSizing[2] = `Постоянная Ориентация Стола`

DESKSIZING_FIX_AXIS	= 1
DESKSIZING_FIX_ORI	= 2

dim	stExtensionsType[6]
	stExtensionsType[1] = `Нет`
	stExtensionsType[2] = `Закругленный`
	stExtensionsType[3] = `Стол`
	stExtensionsType[4] = `Стол со Стулом`
	stExtensionsType[5] = `Тумбочка`
	stExtensionsType[6] = `Перегородка`

dim stSymbolTypes[16]
	stSymbolTypes[ 1] = `Круглый`
	stSymbolTypes[ 2] = `Круглый со Спинкой`
	stSymbolTypes[ 3] = `Прямоугольный`
	stSymbolTypes[ 4] = `Прямоугольный со Спинкой 1`
	stSymbolTypes[ 5] = `Трапециевидный`
	stSymbolTypes[ 6] = `Трапециевидный со Спинкой`
	stSymbolTypes[ 7] = `Криволинейный`
	stSymbolTypes[ 8] = `Криволинейный со Спинкой`
	stSymbolTypes[ 9] = `Прямоугольный со Спинкой 3`
	stSymbolTypes[10] = `Прямоугольный со Спинкой 2`
	stSymbolTypes[11] = `Круг со Спинкой 2`
	stSymbolTypes[12] = `Круглый со Спинкой 3`
	stSymbolTypes[13] = `Криволинейный со Спинкой 2`
	stSymbolTypes[14] = `Криволинейный со Спинкой 3`
	stSymbolTypes[15] = `Детальный 1`
	stSymbolTypes[16] = `Детальный 2`

EXT_NONE			= 0
EXT_ROUNDED			= 1
EXT_DESK			= 2
EXT_DESK_WCHAIR		= 3
EXT_CABINET			= 4
EXT_PARTITION		= 5
DESK_PARTITION		= 6

PARPOS_ABOVE_D		= 1
PARPOS_BETW_D		= 2

STRAIGHT			= 1
ROUNDED				= 2

DESK_L_SHAPED		= 1
DESK_STRAIGHT		= 2

OFFICECAB_NONE		= 0
OFFICECAB_SIDE1		= 1
OFFICECAB_SIDE2		= 2
OFFICECAB_BOTH		= 3

iTableTopType		= 1 + (iLayoutType = LAYOUT_STRAIGHT)

iDeskAngle			= 90

deskDiagonal		= SQR(tableLength1 ** 2 + tableLength2 ** 2)
diagonalAngle		= ATN(tableLength2 / tableLength1)

xPosSideCorner		= tableLength2 * COS(180 - iDeskAngle)
yPosSideCorner		= tableLength2 * SIN(180 - iDeskAngle) + partitionFrameThk * 2 * TAN(diagonalAngle) * bEndPartitions1 * (iPartitionPos = PARPOS_BETW_D)

callAnyPartition	= bFrontPartitions or bSidePartitions * NOT(iLayoutType = LAYOUT_WAVE) or bEndPartitions1 or bEndPartitions2

bSymmetricalDeskEnd	= (iLayoutType = LAYOUT_STRAIGHT) * bDoubleRow

bDeskNumberIsEven	= (deskNumber / 2 = INT(deskNumber / 2))

deskDist			= tableLength1 + partitionFrameThk * (iPartitionPos = PARPOS_BETW_D) * (bSidePartitions * (iLayoutType <> LAYOUT_WAVE) + bFrontPartitions * (iLayoutType = LAYOUT_WAVE))
deskDist2			= tableLength2 + partitionFrameThk * (iPartitionPos = PARPOS_BETW_D) * bFrontPartitions

if iLayoutType = LAYOUT_STRAIGHT then
	chairPos	= 1
else
	chairPos	= 2
endif

bDeskNumLeftIsEven	= (deskNumberLeft / 2 = INT(deskNumberLeft / 2))
bDeskNumRightIsEven	= (deskNumberRight / 2 = INT(deskNumberRight / 2))

bMirroredCabPos		= (iLayoutType <> LAYOUT_STRAIGHT)

!!!4	- Left End Partition
!!!2	- Side Partition
!!!1	- Front Partition
!!!3	- Right End Partition

dim	iExtensionType[4]
	iExtensionType[4]	= iExtensionTypeLeft
	iExtensionType[2]	= iExtensionTypeRight
	iExtensionType[1]	= iExtensionTypeTop
	iExtensionType[3]	= iExtensionTypeBottom

dim	extDistFromCenter[4]
if bSymmetricalDeskEnd then
	extDistFromCenter[4]	= 0
	extDistFromCenter[2]	= totalLength
	extDistFromCenter[1]	= 0
	extDistFromCenter[3]	= 0
else
	extDistFromCenter[4]	= 0
	extDistFromCenter[2]	= totalLength
	extDistFromCenter[1]	= deskDist
	extDistFromCenter[3]	= 0
endif

dim	layoutEndWidth[4]
	layoutEndWidth[4]		= tableDepth1 + (partitionFrameThk / 2 + partitionFrameThk / 2 * NOT(bSymmetricalDeskEnd)) * (iPartitionPos = PARPOS_BETW_D) * bFrontPartitions
	layoutEndWidth[2]		= tableDepth1 + (partitionFrameThk / 2 + partitionFrameThk / 2 * NOT(bSymmetricalDeskEnd)) * (iPartitionPos = PARPOS_BETW_D) * bFrontPartitions
	layoutEndWidth[1]		= MIN(tableDepth2, tableDepth1) * NOT(bSymmetricalDeskEnd) + tableDepth1 * bSymmetricalDeskEnd + partitionFrameThk * (iPartitionPos = PARPOS_BETW_D) * bFrontPartitions
	layoutEndWidth[3]		= MIN(tableDepth2, tableDepth1) * NOT(bSymmetricalDeskEnd) + tableDepth1 * bSymmetricalDeskEnd + partitionFrameThk * (iPartitionPos = PARPOS_BETW_D) * bFrontPartitions

dim	partLength[4]
partLengthMod = partitionFrameThk * NOT(bDoubleRow) * bFrontPartitions * (iPartitionPos = PARPOS_ABOVE_D)
if iLayoutType = LAYOUT_STRAIGHT then
	partLength[4] =	tableDepth1 - partLengthMod
	partLength[2] =	tableDepth1 - partLengthMod
	partLength[1] =	tableLength1
	partLength[3] =	tableDepth1 - partLengthMod
endif
if iLayoutType = LAYOUT_CUBICLE then
	partLength[4] =	tableLength2 - partLengthMod
	partLength[2] =	tableLength2 - partLengthMod
	partLength[1] =	tableLength1
	partLength[3] =	tableDepth1 - partLengthMod
endif
if iLayoutType = LAYOUT_WAVE then
	partLength[4] =	tableLength2 * bDeskNumLeftIsEven + tableDepth1 * NOT(bDeskNumLeftIsEven) - partitionFrameThk * (deskNumber = 1) * bFrontPartitions * (iPartitionPos = PARPOS_ABOVE_D)
	partLength[2] =	tableLength2 - partitionFrameThk * (iPartitionPos = PARPOS_ABOVE_D)
	partLength[1] =	tableLength1 - partitionFrameThk * (iPartitionPos = PARPOS_ABOVE_D)
	partLength[3] =	tableDepth1 * bDeskNumLeftIsEven + tableLength2 * NOT(bDeskNumLeftIsEven) - partitionFrameThk * (deskNumber = 1) * bFrontPartitions * (iPartitionPos = PARPOS_ABOVE_D)
endif

dim	extPartLengthStart[4]
dim	extPartLengthEnd[4]
extPartLengthMod = partitionFrameThk / 2 * (iPartitionPos = PARPOS_BETW_D) * bFrontPartitions
if iLayoutType = LAYOUT_STRAIGHT then
	extPartLengthStart[4]	= tableDepth1 + extPartLengthMod
	extPartLengthStart[2]	= tableDepth1 - partitionFrameThk / 2 + extPartLengthMod
	extPartLengthStart[1]	= tableDepth1
	extPartLengthStart[3]	= tableDepth1 + extPartLengthMod

	extPartLengthEnd[4]		= tableDepth1 + extPartLengthMod
	extPartLengthEnd[2]		= tableDepth1 + extPartLengthMod
	extPartLengthEnd[1]		= tableDepth1
	extPartLengthEnd[3]		= tableDepth1 + extPartLengthMod
endif
if iLayoutType = LAYOUT_CUBICLE then
	extPartLengthStart[4]	= tableDepth1 * (iArrangement = ARRANGE_ROT) + tableLength2 * (iArrangement = ARRANGE_MIRR) + extPartLengthMod
	extPartLengthStart[2]	= tableLength2 - partitionFrameThk / 2 + extPartLengthMod
	extPartLengthStart[1]	= tableDepth1
	extPartLengthStart[3]	= tableDepth1 + extPartLengthMod

	extPartLengthEnd[4]		= tableLength2 + extPartLengthMod
	extPartLengthEnd[2]		= tableDepth1
	extPartLengthEnd[1]		= tableDepth1
	extPartLengthEnd[3]		= tableDepth1 * (iArrangement = ARRANGE_MIRR) + tableLength2 * (iArrangement = ARRANGE_ROT) + extPartLengthMod
endif
if iLayoutType = LAYOUT_WAVE then
	if bDeskNumLeftIsEven then
		extPartLengthStart[4]	= tableDepth1 + extPartLengthMod
		extPartLengthStart[2]	= tableLength2 - partitionFrameThk * (iPartitionPos = PARPOS_ABOVE_D)
		extPartLengthStart[1]	= tableDepth1
		extPartLengthStart[3]	= tableDepth1 * bDeskNumberIsEven + tableDepth2 * NOT(bDeskNumberIsEven) + extPartLengthMod

		extPartLengthEnd[4]		= tableLength2 + extPartLengthMod
		extPartLengthEnd[2]		= tableDepth1
		extPartLengthEnd[1]		= tableDepth1
		extPartLengthEnd[3]		= tableLength2 * bDeskNumberIsEven + tableLength1 * NOT(bDeskNumberIsEven) + extPartLengthMod
	else
		extPartLengthStart[4]	= tableLength1 + extPartLengthMod
		extPartLengthStart[2]	= tableLength2 - partitionFrameThk * (iPartitionPos = PARPOS_ABOVE_D)
		extPartLengthStart[1]	= tableDepth1
		extPartLengthStart[3]	= tableLength1 * bDeskNumberIsEven + tableLength2 * NOT(bDeskNumberIsEven) + extPartLengthMod

		extPartLengthEnd[4]		= tableDepth2 + extPartLengthMod
		extPartLengthEnd[2]		= tableDepth1
		extPartLengthEnd[1]		= tableDepth1
		extPartLengthEnd[3]		= tableDepth2 * bDeskNumberIsEven + tableDepth1 * NOT(bDeskNumberIsEven) + extPartLengthMod
	endif
endif



! ======================================================================
! Calculation For Object Dimensions and Minimal Space
! ======================================================================

dim extHeight[4]
for iExtNum = 1 to 4
	if iExtensionType[iExtNum] = EXT_NONE then			extHeight[iExtNum] = 0
	if iExtensionType[iExtNum] = EXT_ROUNDED then		extHeight[iExtNum] = tableTopHeight
	if iExtensionType[iExtNum] = EXT_DESK then			extHeight[iExtNum] = tableTopHeight
	if iExtensionType[iExtNum] = EXT_DESK_WCHAIR then	extHeight[iExtNum] = tableTopHeight
	if iExtensionType[iExtNum] = EXT_CABINET then		extHeight[iExtNum] = extCabinetHeight
next iExtNum
maxExtHeight 	= MAX(extHeight[1], extHeight[2], extHeight[3], extHeight[4])
realPartHeight	= (gs_partitionHeight + tableTopHeight * (iPartitionPos = PARPOS_ABOVE_D)) * callAnyPartition

if iLayoutType <> LAYOUT_WAVE then
	dim extWidth[4]
	for iExtNum = 1 to 2
		if iExtensionType[iExtNum * 2] = EXT_NONE then			extWidth[iExtNum * 2] = 0
		if iExtensionType[iExtNum * 2] = EXT_ROUNDED then		extWidth[iExtNum * 2] = layoutEndWidth[iExtNum * 2]
		if iExtensionType[iExtNum * 2] = EXT_DESK then			extWidth[iExtNum * 2] = extraDeskDepth
		if iExtensionType[iExtNum * 2] = EXT_DESK_WCHAIR then	extWidth[iExtNum * 2] = extraDeskDepth
		if iExtensionType[iExtNum * 2] = EXT_CABINET then		extWidth[iExtNum * 2] = extCabinetWidth
	next iExtNum
	extWidthRight			= extWidth[2]
	extWidthLeft			= extWidth[4]

	dim extDepth[4]
	for iExtNum = 1 to 2
		if iExtensionType[iExtNum * 2] = EXT_NONE then			extDepth[iExtNum * 2] = 0
		if iExtensionType[iExtNum * 2] = EXT_ROUNDED then		extDepth[iExtNum * 2] = layoutEndWidth[iExtNum * 2]
		if iExtensionType[iExtNum * 2] = EXT_DESK then			extDepth[iExtNum * 2] = extraDeskWidth / 2
		if iExtensionType[iExtNum * 2] = EXT_DESK_WCHAIR then	extDepth[iExtNum * 2] = extraDeskWidth / 2
		if iExtensionType[iExtNum * 2] = EXT_CABINET then		extDepth[iExtNum * 2] = extCabinetDepth
	next iExtNum
	extDepthRight			= extDepth[2]
	extDepthLeft			= extDepth[4]

	deskGroupLeftSideDimA	=	0
	deskGroupRightSideDimA	=	totalLength
	deskGroupDimA			=	deskGroupLeftSideDimA + deskGroupRightSideDimA

	if iLayoutType = LAYOUT_STRAIGHT then
		deskGroupTopSideDimB	=	tableDepth1 + (partitionFrameThk * NOT(bDoubleRow) + partitionFrameThk / 2 * bDoubleRow) * (iPartitionPos = PARPOS_BETW_D) * bFrontPartitions
		deskGroupBottomSideDimB	=	(tableDepth1 + extPartLengthMod) * bDoubleRow
	endif
	if iLayoutType = LAYOUT_CUBICLE then
		deskGroupTopSideDimB	=	tableLength2 + (partitionFrameThk * NOT(bDoubleRow) + partitionFrameThk / 2 * bDoubleRow) * (iPartitionPos = PARPOS_BETW_D) * bFrontPartitions
		deskGroupBottomSideDimB	=	(tableLength2 + extPartLengthMod) * bDoubleRow
	endif
	deskGroupDimB			=	deskGroupTopSideDimB + deskGroupBottomSideDimB

	layoutLeftSideDimA		=	deskGroupLeftSideDimA + extWidthLeft
	layoutRightSideDimA		=	deskGroupRightSideDimA + extWidthRight
	layoutTopSideDimB		=	MAX(deskGroupTopSideDimB, extDepthLeft, extDepthRight)
	layoutBottomSideDimB	=	MAX(deskGroupBottomSideDimB, extDepthLeft, extDepthRight)

	minSpaceLeftSideDimA	=	layoutLeftSideDimA + MSSide
	minSpaceRightSideDimA	=	layoutRightSideDimA + MSSide2
	minSpaceTopSideDimB		=	deskGroupTopSideDimB + MSFront
	minSpaceBottomSideDimB	=	deskGroupBottomSideDimB + MSFront
else
	cabDiagonal				=	SQR(extCabinetDepth ** 2 + extCabinetWidth ** 2)
	cabAngle				=	ATN(extCabinetDepth / extCabinetWidth)

	dim extDepth[4]
	for iExtNum = 1 to 2
		if iExtensionType[iExtNum * 2 - 1] = EXT_NONE then			extDepth[iExtNum * 2 - 1] = 0
		if iExtensionType[iExtNum * 2 - 1] = EXT_ROUNDED then		extDepth[iExtNum * 2 - 1] = layoutEndWidth[iExtNum * 2 - 1]
		if iExtensionType[iExtNum * 2 - 1] = EXT_DESK then			extDepth[iExtNum * 2 - 1] = 0
		if iExtensionType[iExtNum * 2 - 1] = EXT_DESK_WCHAIR then	extDepth[iExtNum * 2 - 1] = 0
		if iExtensionType[iExtNum * 2 - 1] = EXT_CABINET then		extDepth[iExtNum * 2 - 1] = cabDiagonal * SIN(cabAngle + (90 - totalAngle))
	next iExtNum
	extDepthTop				= extDepth[1]
	extDepthBottom			= extDepth[3]

	if bDeskNumLeftIsEven then
		deskGroupLeftSideDimA	=	tableLength2 / 2 * SIN(diagonalAngle)
	else
		deskGroupLeftSideDimA	=	tableLength1 / 2 * COS(diagonalAngle)
	endif
	if bDeskNumRightIsEven then
		deskGroupRightSideDimA	=	totalLength + tableLength2 / 2 * SIN(diagonalAngle)
	else
		deskGroupRightSideDimA	=	totalLength + (tableLength1 / 2) * COS(diagonalAngle)
	endif
	deskGroupTopSideDimB		=	MAX(tableLength2 / 2 * COS(diagonalAngle) + MAX(tableDepth2 * SIN(diagonalAngle), extDepthTop), tableLength1 * SIN(diagonalAngle) + MAX(tableDepth1 * COS(diagonalAngle), extDepthTop) - tableLength2 / 2 * COS(diagonalAngle))
	if deskNUmber = 1 then
		deskGroupBottomSideDimB	=	tableLength2 / 2 * COS(diagonalAngle)
	else
		deskGroupBottomSideDimB	=	MAX(tableLength2 / 2 * COS(diagonalAngle) + MAX(tableDepth2 * SIN(diagonalAngle), extDepthBottom),\
									tableLength1 * SIN(diagonalAngle) + MAX(tableDepth1 * COS(diagonalAngle), extDepthBottom) - tableLength2 / 2 * COS(diagonalAngle))
	endif


	if bDeskNumLeftIsEven then
		contourPointLeft			= tableLength2 / 2 * COS(diagonalAngle)

		contourPointTopLeft			= -tableLength2 / 2 * COS(diagonalAngle) / TAN(diagonalAngle) + deskGroupTopSideDimB / TAN(diagonalAngle)
		contourPointBottomLeft		= tableLength2 / 2 * SIN(diagonalAngle) + deskGroupBottomSideDimB * TAN(diagonalAngle)
	else
		contourPointLeft			= -tableLength1 / 2 * SIN(diagonalAngle)

		contourPointTopLeft			= tableLength1 / 2 * COS(diagonalAngle) + deskGroupTopSideDimB / TAN(diagonalAngle)
		contourPointBottomLeft		= -tableLength1 / 2 * SIN(diagonalAngle) * TAN(diagonalAngle) + deskGroupBottomSideDimB * TAN(diagonalAngle)
	endif

	if bDeskNumRightIsEven then
		contourPointRight			= -tableLength2 / 2 * COS(diagonalAngle)

		contourPointTopRight		= tableLength2 / 2 * SIN(diagonalAngle) + deskGroupTopSideDimB * TAN(diagonalAngle)
		contourPointBottomRight		= -tableLength2 / 2 * COS(diagonalAngle) / TAN(diagonalAngle) + deskGroupBottomSideDimB / TAN(diagonalAngle)
	else
		contourPointRight			= tableLength1 / 2 * SIN(diagonalAngle)

		contourPointTopRight		= -tableLength1 / 2 * SIN(diagonalAngle) * TAN(diagonalAngle) + deskGroupTopSideDimB * TAN(diagonalAngle)
		contourPointBottomRight		= tableLength1 / 2 * COS(diagonalAngle) + deskGroupBottomSideDimB / TAN(diagonalAngle)
	endif

	layoutLeftSideDimA		=	deskGroupLeftSideDimA
	layoutRightSideDimA		=	deskGroupRightSideDimA
	layoutTopSideDimB		=	deskGroupTopSideDimB
	layoutBottomSideDimB	=	deskGroupBottomSideDimB



	minSpaceTopLeft			=	MAX(EPS, MSSide2)
	msAngle					=	180 - diagonalAngle
	minSpaceAlphaTopLeft	=	ATN(COS(msAngle - 90) / (MSFront / minSpaceTopLeft - SIN(msAngle - 90)))
	minSpaceBetaTopLeft		=	msAngle - 90 - minSpaceAlphaTopLeft

	minSpaceTopRight		=	MAX(EPS, MSSide)
	msAngle					=	90 + diagonalAngle
	minSpaceAlphaTopRight	=	ATN(COS(msAngle - 90) / (MSFront / minSpaceTopRight - SIN(msAngle - 90)))
	minSpaceBetaTopRight	=	msAngle - 90 - minSpaceAlphaTopRight

	minSpaceBottomLeft		=	MAX(EPS, MSSide)
	msAngle					=	90 + diagonalAngle
	minSpaceAlphaBottomLeft	=	ATN(COS(msAngle - 90) / (MSFront / minSpaceBottomLeft - SIN(msAngle - 90)))
	minSpaceBetaBottomLeft	=	msAngle - 90 - minSpaceAlphaBottomLeft

	minSpaceBottomRight		=	MAX(EPS, MSSide2)
	msAngle					=	180 - diagonalAngle
	minSpaceAlphaBottomRight=	ATN(COS(msAngle - 90) / (MSFront / minSpaceBottomRight - SIN(msAngle - 90)))
	minSpaceBetaBottomRight	=	msAngle - 90 - minSpaceAlphaBottomRight
endif




! ======================================================================
! For Parameter Locking and Hiding
! ======================================================================

bShowExtCabParams		= 0
bShowExtDeskParams		= 0
bShowExtDeskChairParams	= 0
for ii = 1 to 4
	if iExtensionType[ii] = EXT_CABINET then		bShowExtCabParams		= 1
	if iExtensionType[ii] = EXT_DESK_WCHAIR then	bShowExtDeskChairParams	= 1
	if iExtensionType[ii] = EXT_DESK then			bShowExtDeskParams 		= 1
	if iExtensionType[ii] = EXT_DESK_WCHAIR then	bShowExtDeskParams		= 1
next ii

bShowPartitionParams	=	bFrontPartitions or\
							bSidePartitions * (iLayoutType <> LAYOUT_WAVE) or\
							bEndPartitions1 or\
							bEndPartitions2
bShowCabParams			=	gs_bOfficeCab * (iTableTopType = DESK_L_SHAPED) or\
							(gs_officeCab_m > 0) * (iTableTopType = DESK_STRAIGHT)
bShowExtDeskCabParams	=	bShowExtDeskParams and (iExtraDeskCab > OFFICECAB_NONE) and bShowCabParams
bShowCommonCabParams	=	bShowExtCabParams or bShowExtDeskCabParams or bShowCabParams




