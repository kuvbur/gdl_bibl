
EPS = 0.0001

partitionFrameThk	= 0.03

CABINET				= 0
SIMPLE_DESK			= 1
LAYOUT_ISLAND		= 2
LAYOUT_LINEAR		= 3
WS_SOLO				= 4

dim	stArrangement[4]
	stArrangement[1] = `4-стола (зеркально)`
	stArrangement[2] = `4-стола (повернуты)`
	stArrangement[3] = `3-стола (выровнены)`
	stArrangement[4] = `3-стола (со сдвигом)`

dim	stExtensionsType[6]
	stExtensionsType[1] = `Нет`
	stExtensionsType[2] = `Закругленный`
	stExtensionsType[3] = `Стол`
	stExtensionsType[4] = `Стол со Стулом`
	stExtensionsType[5] = `Тумбочка`
	stExtensionsType[6] = `Перегородка`

dim stSymbolTypes[16]
	stSymbolTypes[ 1] = `Круглый`
	stSymbolTypes[ 2] = `Круглый со Спинкой`
	stSymbolTypes[ 3] = `Прямоугольный`
	stSymbolTypes[ 4] = `Прямоугольный со Спинкой 1`
	stSymbolTypes[ 5] = `Трапециевидный`
	stSymbolTypes[ 6] = `Трапециевидный со Спинкой`
	stSymbolTypes[ 7] = `Криволинейный`
	stSymbolTypes[ 8] = `Криволинейный со Спинкой`
	stSymbolTypes[ 9] = `Прямоугольный со Спинкой 3`
	stSymbolTypes[10] = `Прямоугольный со Спинкой 2`
	stSymbolTypes[11] = `Круг со Спинкой 2`
	stSymbolTypes[12] = `Круглый со Спинкой 3`
	stSymbolTypes[13] = `Криволинейный со Спинкой 2`
	stSymbolTypes[14] = `Криволинейный со Спинкой 3`
	stSymbolTypes[15] = `Детальный 1`
	stSymbolTypes[16] = `Детальный 2`

ARRANGE_4_DESK_MIRR		= 1
ARRANGE_4_DESK_ROT		= 2
ARRANGE_3_DESK_ALIGN	= 3
ARRANGE_3_DESK_SHIFT	= 4

EXT_NONE			= 0
EXT_ROUNDED			= 1
EXT_DESK			= 2
EXT_DESK_WCHAIR		= 3
EXT_CABINET			= 4
EXT_PARTITION		= 5
DESK_PARTITION		= 6

PARPOS_ABOVE_D		= 1
PARPOS_BETW_D		= 2

PARLENGTH_DESK		= 1
PARLENGTH_CUSTOM	= 2

STRAIGHT			= 1
ROUNDED				= 2

OFFICECAB_NONE		= 0
OFFICECAB_SIDE1		= 1
OFFICECAB_SIDE2		= 2
OFFICECAB_BOTH		= 3

DESK_LAYOUT_4	= 0
DESK_LAYOUT_3	= 0
if iArrangement = ARRANGE_4_DESK_MIRR or iArrangement = ARRANGE_4_DESK_ROT then
	deskNumber		= 4
	DESK_LAYOUT_4	= 1
	iDeskAngle		= 90
else
	deskNumber		= 3
	DESK_LAYOUT_3	= 1
	iDeskAngle		= 120
endif

bSymmetricalDeskEnd	= (iArrangement = ARRANGE_4_DESK_MIRR) or (iArrangement = ARRANGE_3_DESK_ALIGN)

!!!!! Enabled Desks
dim	enableDesk[4]
	enableDesk[1]	= bDesk1
	enableDesk[2]	= bDesk2
	enableDesk[3]	= bDesk3
	enableDesk[4]	= bDesk4

!!!!! Enabled Partitions
dim	enablePartition[4]
	enablePartition[1]	= (bDesk1 or bDesk2)
	enablePartition[2]	= (bDesk2 or bDesk3)
	enablePartition[3]	= ((bDesk3 or bDesk4) and DESK_LAYOUT_4) or ((bDesk3 or bDesk1) and DESK_LAYOUT_3)
	enablePartition[4]	= (bDesk4 or bDesk1)

!!!!! Existing Partitions
dim	existPartition[4]
	existPartition[1]	= bPartition1 * enablePartition[1]
	existPartition[2]	= bPartition2 * enablePartition[2]
	existPartition[3]	= bPartition3 * enablePartition[3]
	existPartition[4]	= bPartition4 * enablePartition[4] * DESK_LAYOUT_4

!!!!! Existing Partition Center Column, and any of Partition
existPartCenterColumn	= 0
if	((iPartitionLength = PARLENGTH_DESK) or ((iPartitionLength = PARLENGTH_CUSTOM) and ABS(partitionOffsetCustom) < EPS)) * (iPartitionPos = PARPOS_ABOVE_D)\
	or (iPartitionPos = PARPOS_BETW_D) then
	existPartCenterColumn	= (existPartition[1] + existPartition[2] + existPartition[3] + existPartition[4]) > (iPartitionPos = PARPOS_ABOVE_D)
endif
callAnyPartition		= (iPartitionPos = PARPOS_ABOVE_D) or existPartCenterColumn * (iPartitionPos = PARPOS_BETW_D)

!!!!! Existing Partition Center Column, and any of Partition
if existPartCenterColumn and (iPartitionPos = PARPOS_BETW_D) then
	layoutDimModX			= partitionFrameThk
	layoutDimModY			= partitionFrameThk
	layoutDimModY3Desk		= partitionFrameThk / TAN(iDeskAngle / 2)
else
	layoutDimModX			= 0
	layoutDimModY			= 0
	layoutDimModY3Desk		= 0
endif

!!!!! Extension Types
dim	iExtensionType[4]
	iExtensionType[1]	= iExtensionTypeTop
	iExtensionType[2]	= iExtensionTypeRight
	iExtensionType[3]	= iExtensionTypeBottom * DESK_LAYOUT_4 + iExtensionTypeLeft * DESK_LAYOUT_3
	iExtensionType[4]	= iExtensionTypeLeft

!!!!! Extension Distance from Center of Layout
dim	extDistFromCenter[4]
if bSymmetricalDeskEnd then
	extDistFromCenter[1]	= tableLength1 + layoutDimModY / 2 * DESK_LAYOUT_4 + layoutDimModY3Desk / 2 * DESK_LAYOUT_3
	extDistFromCenter[2]	= tableLength2 + layoutDimModX / 2 * DESK_LAYOUT_4 + layoutDimModY3Desk / 2 * DESK_LAYOUT_3
	extDistFromCenter[3]	= tableLength1 + layoutDimModY / 2 * DESK_LAYOUT_4 + layoutDimModY3Desk / 2 * DESK_LAYOUT_3
	extDistFromCenter[4]	= tableLength2 + layoutDimModX / 2 * DESK_LAYOUT_4 + layoutDimModY3Desk / 2 * DESK_LAYOUT_3
else
	extDistFromCenter[1]	= tableLength2 + layoutDimModY / 2 * DESK_LAYOUT_4 + layoutDimModY3Desk / 2 * DESK_LAYOUT_3
	extDistFromCenter[2]	= tableLength2 + layoutDimModX / 2 * DESK_LAYOUT_4 + layoutDimModY3Desk / 2 * DESK_LAYOUT_3
	extDistFromCenter[3]	= tableLength2 + layoutDimModY / 2 * DESK_LAYOUT_4 + layoutDimModY3Desk / 2 * DESK_LAYOUT_3
	extDistFromCenter[4]	= tableLength2 + layoutDimModX / 2 * DESK_LAYOUT_4 + layoutDimModY3Desk / 2 * DESK_LAYOUT_3
endif

!!!!! Layout End Width
dim	layoutEndWidth[4]
	layoutEndWidth[1]	= tableDepth2 * 2 * NOT(bSymmetricalDeskEnd) + tableDepth1 * 2 * bSymmetricalDeskEnd + layoutDimModY
	layoutEndWidth[2]	= tableDepth2 * 2 + layoutDimModX
	layoutEndWidth[3]	= tableDepth2 * 2 * NOT(bSymmetricalDeskEnd) + tableDepth1 * 2 * bSymmetricalDeskEnd + layoutDimModY
	layoutEndWidth[4]	= tableDepth2 * 2 + layoutDimModX

!!!!! Desk Partition Length
dim	partLength[4]

!!!!! Desk Partition Center Distance from Layout Center
dim	partCenterDist[4]

for iExtNum = 1 to 4
	if iPartitionPos = PARPOS_BETW_D then
		parLengthMod = (tableLength1 - tableLength2) * NOT(bSymmetricalDeskEnd)
	else
		parLengthMod = -partitionFrameThk * bSymmetricalDeskEnd * (iExtensionType[iExtNum] = EXT_PARTITION)
	endif
	partLength[iExtNum] = extDistFromCenter[iExtNum] - partitionFrameThk / 2 / TAN(iDeskAngle / 2) * existPartCenterColumn + parLengthMod

	if iPartitionLength = PARLENGTH_DESK then
		partCenterDist[iExtNum] = partLength[iExtNum] / 2 + partitionFrameThk / 2 / TAN(iDeskAngle / 2) * existPartCenterColumn
	else
		partCenterDist[iExtNum] = partitionOffsetCustom + partitionLengthCustom / 2 + partitionFrameThk / 2 / TAN(iDeskAngle / 2) * existPartCenterColumn
	endif
next iExtNum

!!!!! Left Side Extension Partition Length at Layout End
dim	extPartLengthStart[4]
	extPartLengthStart[1]	= tableDepth2 * NOT(bSymmetricalDeskEnd) + tableDepth1 * bSymmetricalDeskEnd + layoutDimModY / 2
	extPartLengthStart[2]	= tableDepth2 + layoutDimModX / 2
	extPartLengthStart[3]	= tableDepth1 * NOT(bSymmetricalDeskEnd) + tableDepth1 * bSymmetricalDeskEnd + layoutDimModY / 2
	extPartLengthStart[4]	= tableDepth2 + layoutDimModX / 2

!!!!! Right Side Extension Partition Length at Layout End
dim	extPartLengthEnd[4]
	extPartLengthEnd[1]		= tableDepth1 * NOT(bSymmetricalDeskEnd) + tableDepth1 * bSymmetricalDeskEnd + layoutDimModY / 2
	extPartLengthEnd[2]		= tableDepth2 + layoutDimModX / 2
	extPartLengthEnd[3]		= tableDepth2 * NOT(bSymmetricalDeskEnd) + tableDepth1 * bSymmetricalDeskEnd + layoutDimModY / 2
	extPartLengthEnd[4]		= tableDepth2 + layoutDimModX / 2



! ======================================================================
! Calculation For Object Dimensions and Minimal Space
! ======================================================================

dim extHeight[4]
for iExtNum = 1 to 4
	if iExtensionType[iExtNum] = EXT_NONE then			extHeight[iExtNum] = 0
	if iExtensionType[iExtNum] = EXT_ROUNDED then		extHeight[iExtNum] = tableTopHeight
	if iExtensionType[iExtNum] = EXT_DESK then			extHeight[iExtNum] = tableTopHeight
	if iExtensionType[iExtNum] = EXT_DESK_WCHAIR then	extHeight[iExtNum] = tableTopHeight
	if iExtensionType[iExtNum] = EXT_CABINET then		extHeight[iExtNum] = extCabinetHeight
	if iExtensionType[iExtNum] = EXT_PARTITION then		extHeight[iExtNum] = (gs_partitionHeight + tableTopHeight * (iPartitionPos = PARPOS_ABOVE_D))
next iExtNum
maxExtHeight 	= MAX(extHeight[1], extHeight[2], extHeight[3], extHeight[4])
realPartHeight	= 0
if existPartition[1] or existPartition[2] or existPartition[3] or existPartition[4] then
	realPartHeight	= gs_partitionHeight + tableTopHeight * (iPartitionPos = PARPOS_ABOVE_D)
endif

dim extWidth[4]
for iExtNum = 1 to 4
	if iExtensionType[iExtNum] = EXT_NONE then			extWidth[iExtNum] = 0
	if iExtensionType[iExtNum] = EXT_ROUNDED then		extWidth[iExtNum] = layoutEndWidth[iExtNum]
	if iExtensionType[iExtNum] = EXT_DESK then			extWidth[iExtNum] = extraDeskDepth
	if iExtensionType[iExtNum] = EXT_DESK_WCHAIR then	extWidth[iExtNum] = extraDeskDepth
	if iExtensionType[iExtNum] = EXT_CABINET then		extWidth[iExtNum] = extCabinetWidth
	if iExtensionType[iExtNum] = EXT_PARTITION then		extWidth[iExtNum] = partitionFrameThk * (iPartitionPos = PARPOS_BETW_D)
next iExtNum
extWidthTop		= extWidth[1]
extWidthRight	= extWidth[2]
extWidthBottom	= extWidth[3]
extWidthLeft	= extWidth[4]

if iArrangement = ARRANGE_4_DESK_MIRR then
	deskGroupLeftSideDimA	=	extDistFromCenter[4] * ((bDesk1 or bDesk4) or (iExtensionTypeLeft > EXT_NONE)) +\
								partitionFrameThk / 2 * (iExtensionTypeLeft = EXT_NONE) * existPartCenterColumn * (iPartitionPos = PARPOS_BETW_D) * (NOT(bDesk1) and NOT(bDesk4))
	deskGroupRightSideDimA	=	extDistFromCenter[2] * ((bDesk2 or bDesk3) or (iExtensionTypeRight > EXT_NONE)) +\
								partitionFrameThk / 2 * (iExtensionTypeRight = EXT_NONE) * existPartCenterColumn * (iPartitionPos = PARPOS_BETW_D) * (NOT(bDesk2) and NOT(bDesk3))
	deskGroupDimA			=	deskGroupLeftSideDimA + deskGroupRightSideDimA


	deskGroupTopSideDimB	=	extDistFromCenter[1] * ((bDesk1 or bDesk2) or (iExtensionTypeTop > EXT_NONE)) +\
								partitionFrameThk / 2 * (iExtensionTypeTop = EXT_NONE) * existPartCenterColumn * (iPartitionPos = PARPOS_BETW_D) * (NOT(bDesk1) and NOT(bDesk2))
	deskGroupBottomSideDimB	=	extDistFromCenter[3] * ((bDesk3 or bDesk4) or (iExtensionTypeBottom > EXT_NONE)) +\
								partitionFrameThk / 2 * (iExtensionTypeBottom = EXT_NONE) * existPartCenterColumn * (iPartitionPos = PARPOS_BETW_D) * (NOT(bDesk3) and NOT(bDesk4))
	deskGroupDimB			=	deskGroupTopSideDimB + deskGroupBottomSideDimB

	layoutLeftSideDimA		=	deskGroupLeftSideDimA + extWidthLeft
	layoutRightSideDimA		=	deskGroupRightSideDimA + extWidthRight
	layoutTopSideDimB		=	deskGroupTopSideDimB + extWidthTop
	layoutBottomSideDimB	=	deskGroupBottomSideDimB + extWidthBottom

	dim minSpaceOffset[4]
	for iExtNum = 1 to 4
		if iExtensionType[iExtNum] = EXT_NONE then			minSpaceOffset[iExtNum] = MSAllSides
		if iExtensionType[iExtNum] = EXT_ROUNDED then		minSpaceOffset[iExtNum] = MSAllSides
		if iExtensionType[iExtNum] = EXT_DESK then			minSpaceOffset[iExtNum] = MSFront
		if iExtensionType[iExtNum] = EXT_DESK_WCHAIR then	minSpaceOffset[iExtNum] = MSFront
		if iExtensionType[iExtNum] = EXT_CABINET then		minSpaceOffset[iExtNum] = MSAllSides
		if iExtensionType[iExtNum] = EXT_PARTITION then		minSpaceOffset[iExtNum] = MSAllSides
	next iExtNum
	minSpaceTop				=	minSpaceOffset[1]
	minSpaceRight			=	minSpaceOffset[2]
	minSpaceBottom			=	minSpaceOffset[3]
	minSpaceLeft			=	minSpaceOffset[4]

	minSpaceLeftSideDimA	=	layoutLeftSideDimA + minSpaceLeft
	minSpaceRightSideDimA	=	layoutRightSideDimA + minSpaceRight
	minSpaceTopSideDimB		=	layoutTopSideDimB + minSpaceTop
	minSpaceBottomSideDimB	=	layoutBottomSideDimB + minSpaceBottom
endif

if iArrangement = ARRANGE_4_DESK_ROT then
	deskGroupLeftSideDimA	=	MAX((tableLength1 + layoutDimModX / 2) * (bDesk4 or existPartition[4] * (iPartitionPos = PARPOS_BETW_D)), extDistFromCenter[4] + extWidthLeft) * ((bDesk1 or bDesk4) or (iExtensionTypeLeft > EXT_NONE)) +\
								partitionFrameThk / 2 * (iExtensionTypeLeft = EXT_NONE) * existPartCenterColumn * (iPartitionPos = PARPOS_BETW_D) * (NOT(bDesk1) and NOT(bDesk4))
	deskGroupRightSideDimA	=	MAX((tableLength1 + layoutDimModX / 2) * (bDesk2 or existPartition[2] * (iPartitionPos = PARPOS_BETW_D)), extDistFromCenter[2] + extWidthRight) * ((bDesk2 or bDesk3) or (iExtensionTypeRight > EXT_NONE)) +\
								partitionFrameThk / 2 * (iExtensionTypeRight = EXT_NONE) * existPartCenterColumn * (iPartitionPos = PARPOS_BETW_D) * (NOT(bDesk2) and NOT(bDesk3))
	deskGroupDimA			=	deskGroupLeftSideDimA + deskGroupRightSideDimA


	deskGroupTopSideDimB	=	MAX((tableLength1 + layoutDimModX / 2) * (bDesk1 or existPartition[1] * (iPartitionPos = PARPOS_BETW_D)), extDistFromCenter[1] + extWidthTop) * ((bDesk1 or bDesk2) or (iExtensionTypeTop > EXT_NONE)) +\
								partitionFrameThk / 2 * (iExtensionTypeTop = EXT_NONE) * existPartCenterColumn * (iPartitionPos = PARPOS_BETW_D) * (NOT(bDesk1) and NOT(bDesk2))
	deskGroupBottomSideDimB	=	MAX((tableLength1 + layoutDimModX / 2) * (bDesk3 or existPartition[3] * (iPartitionPos = PARPOS_BETW_D)), extDistFromCenter[3] + extWidthBottom) * ((bDesk3 or bDesk4) or (iExtensionTypeBottom > EXT_NONE)) +\
								partitionFrameThk / 2 * (iExtensionTypeBottom = EXT_NONE) * existPartCenterColumn * (iPartitionPos = PARPOS_BETW_D) * (NOT(bDesk3) and NOT(bDesk4))
	deskGroupDimB			=	deskGroupTopSideDimB + deskGroupBottomSideDimB

	layoutLeftSideDimA		=	deskGroupLeftSideDimA
	layoutRightSideDimA		=	deskGroupRightSideDimA
	layoutTopSideDimB		=	deskGroupTopSideDimB
	layoutBottomSideDimB	=	deskGroupBottomSideDimB

	minSpaceTop				=	MSAllSides
	minSpaceRight			=	MSAllSides
	minSpaceBottom			=	MSAllSides
	minSpaceLeft			=	MSAllSides

	minSpaceLeftSideDimA	=	layoutLeftSideDimA + minSpaceLeft
	minSpaceRightSideDimA	=	layoutRightSideDimA + minSpaceRight
	minSpaceTopSideDimB		=	layoutTopSideDimB + minSpaceTop
	minSpaceBottomSideDimB	=	layoutBottomSideDimB + minSpaceBottom
endif

if iArrangement = ARRANGE_3_DESK_ALIGN then
	maxDeskGroupLeftAxisLength	=	(extDistFromCenter[4] * ((bDesk1 or bDesk3) or (iExtensionTypeLeft > EXT_NONE)) +\
									partitionFrameThk / 2 * (iExtensionTypeLeft = EXT_NONE) * (iPartitionPos = PARPOS_BETW_D) * (NOT(bDesk1) and NOT(bDesk3))) * COS(30)
	maxDeskGroupRightAxisLength	=	(extDistFromCenter[2] * ((bDesk2 or bDesk3) or (iExtensionTypeRight > EXT_NONE)) +\
									partitionFrameThk / 2 * (iExtensionTypeRight = EXT_NONE) * (iPartitionPos = PARPOS_BETW_D) * (NOT(bDesk2) and NOT(bDesk3))) * COS(30)
	maxDeskGroupBottomAxisLength=	(extDistFromCenter[4] * ((bDesk1 or bDesk3) or (iExtensionTypeLeft > EXT_NONE)) +\
									partitionFrameThk / 2 * (iExtensionTypeBottom = EXT_NONE) * (iPartitionPos = PARPOS_BETW_D) * (NOT(bDesk1) and NOT(bDesk3))) * SIN(30)
	deskGroupTopAxisLength		=	extDistFromCenter[1] * ((bDesk1 or bDesk2) or (iExtensionTypeTop > EXT_NONE)) +\
									partitionFrameThk / 2 * (iExtensionTypeTop = EXT_NONE) * (iPartitionPos = PARPOS_BETW_D) * (NOT(bDesk1) and NOT(bDesk2))

	deskGroupLeftSideDimA	=	maxDeskGroupLeftAxisLength + extPartLengthStart[4] * COS(60)
	deskGroupRightSideDimA	=	maxDeskGroupRightAxisLength + extPartLengthStart[2] * COS(60)
	deskGroupDimA			=	deskGroupLeftSideDimA + deskGroupRightSideDimA


	deskGroupTopSideDimB	=	deskGroupTopAxisLength
	deskGroupBottomSideDimB	=	maxDeskGroupBottomAxisLength + extPartLengthStart[4] * SIN(60)
	deskGroupDimB			=	deskGroupTopSideDimB + deskGroupBottomSideDimB

	deskHalfDiagonal		=	SQR(extraDeskDepth ** 2 + (extraDeskWidth / 2) ** 2)
	deskAngle				=	ATN((extraDeskWidth / 2) / extraDeskDepth)
	cabDiagonal				=	SQR(extCabinetDepth ** 2 + extCabinetWidth ** 2)
	cabAngle				=	ATN(extCabinetDepth / extCabinetWidth)
	partHalfDiagonal		=	SQR(partitionFrameThk ** 2 + (layoutEndWidth[4] / 2) ** 2)
	partAngle				=	ATN((layoutEndWidth[4] / 2) / partitionFrameThk)

	dim extOffsetSideX[4]
	dim extOffsetBottomSideY[4]
	for iExtNum = 1 to 2
		if iExtensionType[iExtNum * 2] = EXT_NONE then			extOffsetSideX[iExtNum * 2] = 0
		if iExtensionType[iExtNum * 2] = EXT_ROUNDED then		extOffsetSideX[iExtNum * 2] = layoutEndWidth[iExtNum * 2] / 2 - extPartLengthStart[iExtNum * 2] * COS(60)
		if iExtensionType[iExtNum * 2] = EXT_DESK then			extOffsetSideX[iExtNum * 2] = deskHalfDiagonal * COS(deskAngle - 30) - extPartLengthStart[iExtNum * 2] * COS(60)
		if iExtensionType[iExtNum * 2] = EXT_DESK_WCHAIR then	extOffsetSideX[iExtNum * 2] = deskHalfDiagonal * COS(deskAngle - 30) - extPartLengthStart[iExtNum * 2] * COS(60)
		if iExtensionType[iExtNum * 2] = EXT_CABINET then		extOffsetSideX[iExtNum * 2] = cabDiagonal * COS(cabAngle - 30) - extPartLengthStart[iExtNum * 2] * COS(60)
		if iExtensionType[iExtNum * 2] = EXT_PARTITION then		extOffsetSideX[iExtNum * 2] = partHalfDiagonal * COS(partAngle - 30) - extPartLengthStart[iExtNum * 2] * COS(60) * (iPartitionPos = PARPOS_BETW_D)

		if iExtensionType[iExtNum * 2] = EXT_NONE then			extOffsetBottomSideY[iExtNum * 2] = 0
		if iExtensionType[iExtNum * 2] = EXT_ROUNDED then		extOffsetBottomSideY[iExtNum * 2] = layoutEndWidth[iExtNum * 2] / 2 - extPartLengthStart[iExtNum * 2] * SIN(60)
		if iExtensionType[iExtNum * 2] = EXT_DESK then			extOffsetBottomSideY[iExtNum * 2] = deskHalfDiagonal * COS(60 - deskAngle) - extPartLengthStart[iExtNum * 2] * SIN(60)
		if iExtensionType[iExtNum * 2] = EXT_DESK_WCHAIR then	extOffsetBottomSideY[iExtNum * 2] = deskHalfDiagonal * COS(60 - deskAngle) - extPartLengthStart[iExtNum * 2] * SIN(60)
		if iExtensionType[iExtNum * 2] = EXT_CABINET then		extOffsetBottomSideY[iExtNum * 2] = cabDiagonal * COS(60 - deskAngle) - extPartLengthStart[iExtNum * 2] * SIN(60)
		if iExtensionType[iExtNum * 2] = EXT_PARTITION then		extOffsetBottomSideY[iExtNum * 2] = partHalfDiagonal * COS(60 - deskAngle) - extPartLengthStart[iExtNum * 2] * SIN(60) * (iPartitionPos = PARPOS_BETW_D)
	next iExtNum

	extOffsetLeftX			=	extOffsetSideX[4]
	extOffsetRightX			=	extOffsetSideX[2]
	extOffsetBottomLeftY	=	extOffsetBottomSideY[4]
	extOffsetBottomRightY	=	extOffsetBottomSideY[2]

	layoutLeftSideDimA		=	deskGroupLeftSideDimA + extOffsetLeftX
	layoutRightSideDimA		=	deskGroupRightSideDimA + extOffsetRightX
	layoutTopSideDimB		=	deskGroupTopSideDimB + extWidthTop
	layoutBottomSideDimB	=	deskGroupBottomSideDimB + MAX(extOffsetBottomLeftY, extOffsetBottomRightY)

	dim minSpaceOffset[4]
	for iExtNum = 1 to 4
		if iExtensionType[iExtNum] = EXT_NONE then			minSpaceOffset[iExtNum] = MAX(EPS, MSAllSides)
		if iExtensionType[iExtNum] = EXT_ROUNDED then		minSpaceOffset[iExtNum] = MAX(EPS, MSAllSides)
		if iExtensionType[iExtNum] = EXT_DESK then			minSpaceOffset[iExtNum] = MAX(EPS, MSFront)
		if iExtensionType[iExtNum] = EXT_DESK_WCHAIR then	minSpaceOffset[iExtNum] = MAX(EPS, MSFront)
		if iExtensionType[iExtNum] = EXT_CABINET then		minSpaceOffset[iExtNum] = MAX(EPS, MSAllSides)
		if iExtensionType[iExtNum] = EXT_PARTITION then		minSpaceOffset[iExtNum] = MAX(EPS, MSAllSides)
	next iExtNum
	minSpaceTop				=	minSpaceOffset[1]
	minSpaceRight			=	minSpaceOffset[2]
	minSpaceLeft			=	minSpaceOffset[4]

	minSpaceAlphaLeft		=	ATN(COS(iDeskAngle - 90) / (MSFront / minSpaceLeft - SIN(iDeskAngle - 90)))
	minSpaceBetaLeft		=	iDeskAngle - 90 - minSpaceAlphaLeft
	minSpaceAlphaRight		=	ATN(COS(iDeskAngle - 90) / (MSFront / minSpaceRight - SIN(iDeskAngle - 90)))
	minSpaceBetaRight		=	iDeskAngle - 90 - minSpaceAlphaRight
	minSpaceAlphaTop		=	ATN(COS(iDeskAngle - 90) / (MSFront / minSpaceTop - SIN(iDeskAngle - 90)))
	minSpaceBetaTop			=	iDeskAngle - 90 - minSpaceAlphaTop
endif

if iArrangement = ARRANGE_3_DESK_SHIFT then
	cabDiagonal					=	SQR(extCabinetDepth ** 2 + extCabinetWidth ** 2)
	cabAngle					=	ATN(extCabinetDepth / extCabinetWidth)

	extOffsetLeftX				=	layoutEndWidth[4] / 2 * (iExtensionTypeLeft = EXT_ROUNDED)\
									+ cabDiagonal * COS(cabAngle - 30) * (iExtensionTypeLeft = EXT_CABINET)
	extOffsetBottomLeftY		=	layoutEndWidth[4] / 2 * (iExtensionTypeLeft = EXT_ROUNDED)\
									+ cabDiagonal * COS(60 - cabAngle) * (iExtensionTypeLeft = EXT_CABINET)
	extOffsetRightX				=	layoutEndWidth[2] / 2 * COS(30) * (iExtensionTypeRight = EXT_ROUNDED)\
									+ extCabinetWidth * COS(30) * (iExtensionTypeRight = EXT_CABINET)
	extOffsetBottomRightY		=	layoutEndWidth[2] / 2 * (iExtensionTypeRight = EXT_ROUNDED)\
									+ cabDiagonal * COS(60 - cabAngle) * (iExtensionTypeRight = EXT_CABINET)


	deskGroupLeftAxisLength1	=	((tableLength1 + layoutDimModX / 2) * (bDesk3 or existPartition[4] * (iPartitionPos = PARPOS_BETW_D)) * ((bDesk1 or bDesk3) or (iExtensionTypeLeft > EXT_NONE)) +\
									partitionFrameThk / 2 * (iExtensionTypeLeft = EXT_NONE) * (iPartitionPos = PARPOS_BETW_D) * (NOT(bDesk1) and NOT(bDesk3))) * COS(30)
	deskGroupLeftAxisLength2	=	((extDistFromCenter[4]) * ((bDesk1 or bDesk3) or (iExtensionTypeLeft > EXT_NONE)) +\
									partitionFrameThk / 2 * (iExtensionTypeLeft = EXT_NONE) * (iPartitionPos = PARPOS_BETW_D) * (NOT(bDesk1) and NOT(bDesk3))) * COS(30)
	maxDeskGroupLeftAxisLength	=	MAX(deskGroupLeftAxisLength1, deskGroupLeftAxisLength2)
	deskGroupLeftLength1		=	deskGroupLeftAxisLength1
	deskGroupLeftLength2		=	deskGroupLeftAxisLength2 + extPartLengthStart[4] * COS(60) * (iExtensionTypeLeft = EXT_NONE) + extOffsetLeftX


	deskGroupRightAxisLength1	=	((tableLength1 + layoutDimModX / 2) * (bDesk2 or existPartition[2] * (iPartitionPos = PARPOS_BETW_D)) * ((bDesk2 or bDesk3) or (iExtensionTypeRight > EXT_NONE)) +\
									partitionFrameThk / 2 * (iExtensionTypeRight = EXT_NONE) * (iPartitionPos = PARPOS_BETW_D) * (NOT(bDesk2) and NOT(bDesk3))) * COS(30)
	deskGroupRightAxisLength2	=	((extDistFromCenter[2]) * ((bDesk2 or bDesk3) or (iExtensionTypeRight > EXT_NONE)) +\
									partitionFrameThk / 2 * (iExtensionTypeRight = EXT_NONE) * (iPartitionPos = PARPOS_BETW_D) * (NOT(bDesk2) and NOT(bDesk3))) * COS(30)
	maxDeskGroupRightAxisLength	=	MAX(deskGroupRightAxisLength1, deskGroupRightAxisLength2)
	deskGroupRightLength1		=	deskGroupRightAxisLength1 + extPartLengthEnd[2] * COS(60)
	deskGroupRightLength2		=	deskGroupRightAxisLength2 + extOffsetRightX


	deskGroupBottomAxisLength1	=	((tableLength1 + layoutDimModX / 2) * (bDesk3 or existPartition[3] * (iPartitionPos = PARPOS_BETW_D)) * ((bDesk1 or bDesk3) or (iExtensionTypeLeft > EXT_NONE)) +\
									partitionFrameThk / 2 * (iExtensionTypeLeft = EXT_NONE) * (iPartitionPos = PARPOS_BETW_D) * (NOT(bDesk1) and NOT(bDesk3))) * SIN(30)
	deskGroupBottomAxisLength2	=	((extDistFromCenter[2]) * ((bDesk2 or bDesk3) or (iExtensionTypeRight > EXT_NONE)) +\
									partitionFrameThk / 2 * (iExtensionTypeRight = EXT_NONE) * (iPartitionPos = PARPOS_BETW_D) * (NOT(bDesk2) and NOT(bDesk3))) * SIN(30)
	maxDeskGroupBottomAxisLength=	MAX(deskGroupBottomAxisLength1, deskGroupBottomAxisLength2)

	deskGroupBottomLength1		=	deskGroupBottomAxisLength1 + extPartLengthEnd[4] * SIN(60)
	deskGroupBottomLength2		=	deskGroupBottomAxisLength2 + extPartLengthStart[2] * SIN(60) * (iExtensionTypeRight = EXT_NONE) + extOffsetBottomRightY


	deskGroupTopAxisLength1		=	((tableLength1 + layoutDimModX / 2) * (bDesk1 or existPartition[1] * (iPartitionPos = PARPOS_BETW_D)) * ((bDesk1 or bDesk3) or (iExtensionTypeTop > EXT_NONE)) +\
									partitionFrameThk / 2 * (iExtensionTypeTop = EXT_NONE) * (iPartitionPos = PARPOS_BETW_D) * (NOT(bDesk1) and NOT(bDesk2)))
	deskGroupTopAxisLength2		=	((extDistFromCenter[1]) * ((bDesk1 or bDesk2) or (iExtensionTypeRight > EXT_NONE)) +\
									partitionFrameThk / 2 * (iExtensionTypeTop = EXT_NONE) * (iPartitionPos = PARPOS_BETW_D) * (NOT(bDesk1) and NOT(bDesk2)))
	deskGroupTopLength1			=	deskGroupTopAxisLength1
	deskGroupTopLength2			=	deskGroupTopAxisLength2 + extWidthTop



	deskGroupLeftSideDimA		=	MAX(deskGroupLeftLength1, deskGroupLeftLength2)
	deskGroupRightSideDimA		=	MAX(deskGroupRightLength1, deskGroupRightLength2)
	deskGroupDimA				=	deskGroupLeftSideDimA + deskGroupRightSideDimA

	deskGroupBottomSideDimB		=	MAX(deskGroupBottomLength1, deskGroupBottomLength2)
	deskGroupTopSideDimB		=	MAX(deskGroupTopLength1, deskGroupTopLength2)
	deskGroupDimB				=	deskGroupTopSideDimB + deskGroupBottomSideDimB

	layoutLeftSideDimA			=	deskGroupLeftSideDimA
	layoutRightSideDimA			=	deskGroupRightSideDimA
	layoutBottomSideDimB		=	deskGroupBottomSideDimB
	layoutTopSideDimB			=	deskGroupTopSideDimB

	dim minSpaceOffset[4]
	for iExtNum = 1 to 4
		if iExtensionType[iExtNum] = EXT_NONE then			minSpaceOffset[iExtNum] = MAX(EPS, MSAllSides)
		if iExtensionType[iExtNum] = EXT_ROUNDED then		minSpaceOffset[iExtNum] = MAX(EPS, MSAllSides)
		if iExtensionType[iExtNum] = EXT_DESK then			minSpaceOffset[iExtNum] = MAX(EPS, MSFront)
		if iExtensionType[iExtNum] = EXT_DESK_WCHAIR then	minSpaceOffset[iExtNum] = MAX(EPS, MSFront)
		if iExtensionType[iExtNum] = EXT_CABINET then		minSpaceOffset[iExtNum] = MAX(EPS, MSAllSides)
		if iExtensionType[iExtNum] = EXT_PARTITION then		minSpaceOffset[iExtNum] = MAX(EPS, MSAllSides)
	next iExtNum

	minSpaceLeft				=	minSpaceOffset[4]
	minSpaceAlphaLeft			=	ATN(COS(iDeskAngle - 90) / (MSFront / minSpaceLeft - SIN(iDeskAngle - 90)))
	minSpaceBetaLeft			=	iDeskAngle - 90 - minSpaceAlphaLeft
	minSpaceRight				=	minSpaceOffset[2]
	minSpaceAlphaRight			=	ATN(COS(iDeskAngle - 90) / (MSFront / minSpaceRight - SIN(iDeskAngle - 90)))
	minSpaceBetaRight			=	iDeskAngle - 90 - minSpaceAlphaRight
	minSpaceTop					=	minSpaceOffset[1]
	minSpaceAlphaTop			=	ATN(COS(iDeskAngle - 90) / (MSFront / minSpaceTop - SIN(iDeskAngle - 90)))
	minSpaceBetaTop				=	iDeskAngle - 90 - minSpaceAlphaTop
endif



! ======================================================================
! For Parameter Locking and Hiding
! ======================================================================

bShowExtCabParams		= 0
bShowExtDeskParams		= 0
bShowExtDeskChairParams	= 0
bEnablePartExt			= 0
for ii = 1 to deskNumber
	if iExtensionType[ii] = EXT_CABINET then		bShowExtCabParams		= 1
	if iExtensionType[ii] = EXT_DESK_WCHAIR then	bShowExtDeskChairParams	= 1
	if iExtensionType[ii] = EXT_DESK then			bShowExtDeskParams		= 1
	if iExtensionType[ii] = EXT_DESK_WCHAIR then	bShowExtDeskParams		= 1
	if iExtensionType[ii] = EXT_PARTITION then		bEnablePartExt			= 1
next ii

bShowPartitionParams	=	bEnablePartExt or bPartition1 or bPartition2 or bPartition3 or bPartition4 * DESK_LAYOUT_4
bShowCabParams			=	gs_bOfficeCab
bShowExtDeskCabParams	=	bShowExtDeskParams and (iExtraDeskCab > OFFICECAB_NONE) and bShowCabParams
bShowCommonCabParams	=	bShowExtCabParams or bShowExtDeskCabParams or bShowCabParams
