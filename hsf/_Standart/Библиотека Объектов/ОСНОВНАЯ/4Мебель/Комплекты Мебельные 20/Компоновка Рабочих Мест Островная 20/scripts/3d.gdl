
if gs_detlevel_3D_m = 0 then end

unID = 1
centerunID = 30000

! ======================================================================
! Desks (with Front Panel, Desk Cabinet, Chair, Keyboard, LCD Monitor)
! ======================================================================

for iDe = 1 to deskNumber
	add -layoutDimModX / 2, layoutDimModY / 2 * DESK_LAYOUT_4 + layoutDimModY3Desk / 2 * DESK_LAYOUT_3, 0
	rotz 90

	if enableDesk[iDe] then
		gosub "desk"
	endif

	del 2

	if iArrangement = ARRANGE_4_DESK_MIRR then
		mul 1 - 2 * (iDe = 1 or iDe = 3), 1 - 2 * (iDe = 2 or iDe = 4), 1
	else
		rotz -iDeskAngle
	endif
next iDe

del deskNumber



! ======================================================================
! Extensions (Rounded, Desk, Desk with Chair, Cabinet, Partition)
! ======================================================================

for iExt = 1 to deskNumber
	add layoutDimModX / 2 * NOT(bSymmetricalDeskEnd), extDistFromCenter[iExt], 0
	if iExtensionType[iExt] = EXT_PARTITION then
		add 0, partitionFrameThk / 2 * (iPartitionPos = PARPOS_BETW_D) - partitionFrameThk / 2 * (iPartitionPos = PARPOS_ABOVE_D), 0
	endif

	gosub "extension"

	del 1 + (iExtensionType[iExt] = EXT_PARTITION)
rotz  -iDeskAngle
next iExt

del deskNumber



! ======================================================================
! Desk Partitions
! ======================================================================

if callAnyPartition then
	for iPa = 1 to deskNumber
		if existPartition[iPa] * (iPartitionPos = PARPOS_ABOVE_D) + enablePartition[iPa] * (iPartitionPos = PARPOS_BETW_D) then
			add 0, partCenterDist[iPa], 0
				gosub "partition"
			del 1
		endif
	rotz  -iDeskAngle
	next iPa

	del deskNumber
endif



! ======================================================================
! Desk Center Partitions Column
! ======================================================================

if existPartCenterColumn then
	if iPartitionPos = PARPOS_BETW_D then
		bShowPartEdgeTop		= NOT(enablePartition[1])
		bShowPartEdgeRight		= NOT(enablePartition[2])
		bShowPartEdgeBottom		= NOT(enablePartition[3]) * DESK_LAYOUT_4
		bShowPartEdgeLeft		= NOT(enablePartition[4]) * DESK_LAYOUT_4 + NOT(enablePartition[3]) * DESK_LAYOUT_3
	else
		bShowPartEdgeTop		= NOT(existPartition[1])
		bShowPartEdgeRight		= NOT(existPartition[2])
		bShowPartEdgeBottom		= NOT(existPartition[3]) * DESK_LAYOUT_4
		bShowPartEdgeLeft		= NOT(existPartition[4]) * DESK_LAYOUT_4 + NOT(existPartition[3]) * DESK_LAYOUT_3
	endif
	gosub "partitionColumn"
endif

! ======================================================================
end
! ======================================================================



"desk":
	call "completeTable_m" parameters all	iTableTopType			= 1,
											iDeskAngle				= iDeskAngle,
											bCalledAsExtension		= 0,
											bPartOfLayout			= 1,
											bPartOfWsSolo			= 0,
											bChair					= 1,
											bEnableDeskHsCorner		= 0,
											bEnableDeskHsHalfEdge	= 0,
											bEnableDeskHsEditingX	= 1,
											bEnableDeskHsEditingY	= 1,
											bEnableDeskHsEditingC	= 1,
											bEnableChairHsEditing 	= 1,
											bEnableSeatHeightHsEdit	= 1,
											bMirroredComputer		= (iDe / 2 = INT(iDe / 2)) * (iArrangement = ARRANGE_4_DESK_MIRR),
											bMirroredCabPos			= 0,
											chairPos				= 2,
											zzyzx					= tableTopHeight,
											completeTable_unID		= unID,
											stSymbolTypes			= stSymbolTypes,
											bKnobNoneType			= 0,
											returned_parameters completeTable_unID
	unID = completeTable_unID
return

"extension":
	call "deskClosings_m" parameters all	iExtensionType			= iExtensionType[iExt],
											partitionFrameThk		= partitionFrameThk,
											bSymmetricalDeskEnd		= bSymmetricalDeskEnd,
											extRoundedRad			= layoutEndWidth[iExt] / 2 - layoutDimModX / 2 * NOT(bSymmetricalDeskEnd),
											bCalledAsExtension		= 1,
											bPartOfLayout			= 1,
											bPartOfWsSolo			= 0,
											extPartLengthStart		= extPartLengthStart[iExt],
											extPartLengthEnd		= extPartLengthEnd[iExt],
											bShowExtPartConnEdge	= NOT(existPartition[iExt]) * (iPartitionPos = PARPOS_ABOVE_D) or NOT(callAnyPartition) * (iPartitionPos = PARPOS_BETW_D) or (iPartitionLength = PARLENGTH_CUSTOM),
											anglePartititon			= 0,
											xPartOrigPos			= 0,
											yPartOrigPos			= 0,
											iExtraDeskCab			= iExtraDeskCab * bShowCabParams,
											deskClosings_unID		= unID,
											stSymbolTypes			= stSymbolTypes,
											bKnobNoneType			= 0,
											returned_parameters deskClosings_unID
	unID = deskClosings_unID
	if iExtensionType[iExt] = 2 or iExtensionType[iExt] = 3 then
		hotspot 0, extraDeskDepth / 2, 0,				centerunID, tableTopHeight, 1 : centerunID = centerunID + 1
		hotspot 0, extraDeskDepth / 2, tableTopHeight,	centerunID, tableTopHeight, 2 : centerunID = centerunID + 1
		hotspot 0, extraDeskDepth / 2, -1,				centerunID, tableTopHeight, 3 : centerunID = centerunID + 1
	endif
return

"partition":
	call "deskClosings_m" parameters all	iExtensionType			= DESK_PARTITION,
											partitionFrameThk		= partitionFrameThk,
											iDeskAngle				= iDeskAngle,
											bCalledAsExtension		= 0,
											bPartOfLayout			= 1,
											bPartOfWsSolo			= 0,
											lengthPartition			= partLength[iPa],
											bOnlyPartitionColumn	= 0,
											bOnlyPartitionCover		= NOT(existPartition[iPa]),
											bShowPartEdgeLeft		= ((iPartitionLength = PARLENGTH_CUSTOM) and (ABS(partitionOffsetCustom) > 0)) or NOT(existPartCenterColumn),
											bShowPartEdgeRight		= NOT(iExtensionType[iPa] = EXT_PARTITION) or (iPartitionLength = PARLENGTH_CUSTOM),
											anglePartititon			= 90,
											xPartOrigPos			= 0,
											yPartOrigPos			= 0,
											deskClosings_unID		= unID,
											stSymbolTypes			= stSymbolTypes,
											bKnobNoneType			= 0,
											returned_parameters deskClosings_unID
	unID = deskClosings_unID
return

"partitionColumn":
	call "deskClosings_m" parameters all	iExtensionType			= DESK_PARTITION,
											partitionFrameThk		= partitionFrameThk,
											iDeskAngle				= iDeskAngle,
											bCalledAsExtension		= 0,
											bPartOfLayout			= 1,
											bPartOfWsSolo			= 0,
											bOnlyPartitionColumn	= 1,
											bOnlyPartitionCover		= 0,
											bShowPartEdgeTop		= bShowPartEdgeTop,
											bShowPartEdgeRight		= bShowPartEdgeRight,
											bShowPartEdgeBottom		= bShowPartEdgeBottom,
											bShowPartEdgeLeft		= bShowPartEdgeLeft,
											deskClosings_unID		= unID,
											stSymbolTypes			= stSymbolTypes,
											bKnobNoneType			= 0,
											returned_parameters deskClosings_unID
	unID = deskClosings_unID
return

