
hideparameter all "A", "B", "ZZYZX"

call "FM_types" parameters all

! ======================================================================
! UI
! ======================================================================

call "ui_tabcontrol" parameters		controlType			= 1,
									nTabs				= 10,
									gs_ui_current_page	= gs_ui_current_page


! ======================================================================
! Object sizing
! ======================================================================

a		= layoutLeftSideDimA + layoutRightSideDimA
b		= layoutTopSideDimB + layoutBottomSideDimB
zzyzx	= MAX(tableTopHeight, maxExtHeight, realPartHeight)
parameters a		= a
parameters b		= b
parameters zzyzx	= zzyzx
lock	"a",
		"b",
		"zzyzx"



! ======================================================================
! Desks
! ======================================================================

if GLOB_MODPAR_NAME = "arrangement" or GLOB_MODPAR_NAME = "iArrangement" then
	if bSymmetricalDeskEnd then
		tableLength1			= defaultValues[1]		!1.50
		tableLength2			= defaultValues[2]		!1.50

		defaultExtensionType	= EXT_NONE
	else
		tableLength1			= defaultValues[3]		!1.80
		tableLength2			= defaultValues[4]		!1.20
		tableDepth1				= defaultValues[5]		!0.60
		tableDepth2				= defaultValues[5]		!0.60
		extCabinetWidth			= defaultValues[6]		!0.60
		extCabinetDepth			= defaultValues[7]		!0.50

		defaultExtensionType	= EXT_CABINET
	endif

	parameters tableLength1		= tableLength1
	parameters tableLength2		= tableLength2
	parameters tableDepth1		= tableDepth1
	parameters tableDepth2		= tableDepth2
	parameters extCabinetWidth	= extCabinetWidth
	parameters extCabinetDepth	= extCabinetDepth

	iExtensionTypeTop		= defaultExtensionType
	iExtensionTypeRight		= defaultExtensionType
	iExtensionTypeLeft		= defaultExtensionType
	iExtensionTypeBottom	= defaultExtensionType

	parameters iExtensionTypeTop	= iExtensionTypeTop
	parameters iExtensionTypeRight	= iExtensionTypeRight
	parameters iExtensionTypeLeft	= iExtensionTypeLeft
	parameters iExtensionTypeBottom	= iExtensionTypeBottom
endif

values "MSAllSides" range[0, ]

values "iCabKnobType" 1, 2, 3, 4, 5, 6, 7, 8
values "iCabKnobVerPos" 1, 0, -1
values "iExtCabKnobType" 0, 1, 2, 3, 4, 5, 6, 7, 8
values "iExtCabKnobVerPos" 1, 0, -1
if GLOB_MODPAR_NAME = "iCabKnobType" or GLOB_MODPAR_NAME = "iExtCabKnobType" then
	if GLOB_MODPAR_NAME = "iCabKnobType" then
		gs_knob_type_m = iCabKnobType
		parameters gs_knob_type_m = gs_knob_type_m
	else
		gs_knob_type_m = iExtCabKnobType
		parameters gs_knob_type_m = gs_knob_type_m
	endif
else
	iCabKnobType	= gs_knob_type_m
	iExtCabKnobType	= gs_knob_type_m
	parameters iCabKnobType		= iCabKnobType
	parameters iExtCabKnobType	= iExtCabKnobType
endif
if GLOB_MODPAR_NAME = "iCabKnobVerPos" or GLOB_MODPAR_NAME = "iExtCabKnobVerPos" then
	if GLOB_MODPAR_NAME = "iCabKnobVerPos" then
		gs_knobVerPos_m = iCabKnobVerPos
		parameters gs_knobVerPos_m = gs_knobVerPos_m
	else
		gs_knobVerPos_m = iExtCabKnobVerPos
		parameters gs_knobVerPos_m = gs_knobVerPos_m
	endif
else
	iCabKnobVerPos		= gs_knobVerPos_m
	iExtCabKnobVerPos	= gs_knobVerPos_m
	parameters iCabKnobVerPos		= iCabKnobVerPos
	parameters iExtCabKnobVerPos	= iExtCabKnobVerPos
endif

if ((iExtensionTypeLeft <> 4 and iExtensionTypeRight <> 4 and  iExtensionTypeBottom <> 4 and  iExtensionTypeTop <> 4) or iCabinetScheme = 5) and not(gs_bOfficeCab) then
	hideparameter "iCabKnobType", "bKnob", "iCabKnobVerPos", "gs_bevel"
	lock "iCabKnobType", "bKnob", "iCabKnobVerPos", "gs_bevel"
endif
if not(bKnob) then
	hideparameter "iCabKnobVerPos", "iExtCabKnobVerPos", "iCabKnobType"
	lock "iCabKnobVerPos", "iExtCabKnobVerPos", "iCabKnobType"
endif
if NOT(bShowExtCabParams) then
	hideparameter "iExtCabKnobType", "iExtCabKnobVerPos"
	lock "iExtCabKnobType", "iExtCabKnobVerPos"
endif

call "completeTable_m" parameters all	iTableTopType			= 1,
										zzyzx					= tableTopHeight,
										ideskAngle				= ideskAngle,
										chairPos				= 2,
										bCalledAsExtension		= 0,
										bPartOfLayout			= 1,
										bPartOfWsSolo			= 0,
										bEnableBasetypes		= 0,
										bMirroredCabPos			= 0,
										bShowCommonCabParams	= bShowCommonCabParams,
										bShowCabParams			= bShowCabParams,
										bShowExtDeskCabParams	= bShowExtDeskCabParams,
										bKnobNoneType			= 0,
										stSymbolTypes			= stSymbolTypes



! ======================================================================
! Extensions, Partitions
! ======================================================================

call "deskClosings_m" parameters all	bPartOfLayout			= 1,
										bPartOfWsSolo			= 0,
										bShowCabParams			= bShowCabParams,
										bShowPartitionParams	= bShowPartitionParams,
										bShowExtCabParams		= bShowExtCabParams,
										bShowExtDeskParams		= bShowExtDeskParams,
										bShowExtDeskChairParams	= bShowExtDeskChairParams,
										bShowExtDeskCabParams	= bShowExtDeskCabParams,
										bShowCommonCabParams	= bShowCommonCabParams,
										bEnableCustPartLength	= 1,
										bKnobNoneType			= 0,
										stSymbolTypes			= stSymbolTypes

! enableExtensionTypes - possible values
!	2		- enable None
!	4		- enable Rounded
!	8		- enable Desk
!	16		- enable Desk with Chair
!	32		- enable Cabinet
!	64		- enable Partition

enableExtensionTypes = 2 + 4 + 32 + (8 + 16 + 64) * ((iArrangement = ARRANGE_4_DESK_MIRR) or (iArrangement = ARRANGE_3_DESK_ALIGN))

if enableExtensionTypes < EPS then enableExtensionTypes = 2 + 4 + 8 + 16 + 32 + 64

dim extensionTypeValueList[]
j = 1
for i = 1 to vardim1(stExtensionsType)
	if bittest(enableExtensionTypes, i) then
		put i - 1
		extensionTypeValueList[j] = stExtensionsType[i]
		j = j + 1
	endif
next i

values "extensionTypeTop" extensionTypeValueList
values "iExtensionTypeTop" use(NSP)
if GLOB_MODPAR_NAME = "extensionTypeTop" then
	for iExtTop = 1 to vardim1(stExtensionsType)
		if extensionTypeTop = stExtensionsType[iExtTop] then iExtensionTypeTop = iExtTop - 1
	next iExtTop
	parameters iExtensionTypeTop = iExtensionTypeTop
else
	extensionTypeTop = stExtensionsType[iExtensionTypeTop + 1]
	parameters extensionTypeTop = extensionTypeTop
endif

values "extensionTypeRight" extensionTypeValueList
values "iExtensionTypeRight" use(NSP)
if GLOB_MODPAR_NAME = "extensionTypeRight" then
	for iExtRight = 1 to vardim1(stExtensionsType)
		if extensionTypeRight = stExtensionsType[iExtRight] then iExtensionTypeRight = iExtRight - 1
	next iExtRight
	parameters iExtensionTypeRight = iExtensionTypeRight
else
	extensionTypeRight = stExtensionsType[iExtensionTypeRight + 1]
	parameters extensionTypeRight = extensionTypeRight
endif

values "extensionTypeBottom" extensionTypeValueList
values "iExtensionTypeBottom" use(NSP)
if GLOB_MODPAR_NAME = "extensionTypeBottom" then
	for iExtBottom = 1 to vardim1(stExtensionsType)
		if extensionTypeBottom = stExtensionsType[iExtBottom] then iExtensionTypeBottom = iExtBottom - 1
	next iExtBottom
	parameters iExtensionTypeBottom = iExtensionTypeBottom
else
	extensionTypeBottom = stExtensionsType[iExtensionTypeBottom + 1]
	parameters extensionTypeBottom = extensionTypeBottom
endif

values "extensionTypeLeft" extensionTypeValueList
values "iExtensionTypeLeft" get(NSP)
if GLOB_MODPAR_NAME = "extensionTypeLeft" then
	for iExtLeft = 1 to vardim1(stExtensionsType)
		if extensionTypeLeft = stExtensionsType[iExtLeft] then iExtensionTypeLeft = iExtLeft - 1
	next iExtLeft
	parameters iExtensionTypeLeft = iExtensionTypeLeft
else
	extensionTypeLeft = stExtensionsType[iExtensionTypeLeft + 1]
	parameters extensionTypeLeft = extensionTypeLeft
endif

if NOT(enablePartition[1]) then
	bPartition1 = 0
	parameters bPartition1 = bPartition1
	lock			"bPartition1"
	hideparameter	"bPartition1"
endif
if NOT(enablePartition[2]) then
	bPartition2 = 0
	parameters bPartition2 = bPartition2
	lock			"bPartition2"
	hideparameter	"bPartition2"
endif
if NOT(enablePartition[3]) then
	bPartition3 = 0
	parameters bPartition3 = bPartition3
	lock			"bPartition3"
	hideparameter	"bPartition3"
endif
if NOT(enablePartition[4]) then
	bPartition4 = 0
	parameters bPartition4 = bPartition4
	lock			"bPartition4"
	hideparameter	"bPartition4"
endif



! ======================================================================
! Layout
! ======================================================================

values "arrangement" stArrangement
values "iArrangement" 1, 2, 3, 4
if GLOB_MODPAR_NAME = "arrangement" then
	for iArr = 1 to vardim1(stArrangement)
		if arrangement = stArrangement[iArr] then iArrangement = iArr
	next iArr
	parameters iArrangement = iArrangement
else
	arrangement = stArrangement[max(iArrangement, 1)]
	parameters arrangement = arrangement
endif

if DESK_LAYOUT_3 then
	if (bDesk1 + bDesk2 + bDesk3) < 1 then
		if GLOB_MODPAR_NAME = "bDesk1" and not(bDesk1) then bDesk1 = 1: parameters bDesk1 = bDesk1
		if GLOB_MODPAR_NAME = "bDesk2" and not(bDesk2) then bDesk2 = 1: parameters bDesk2 = bDesk2
		if GLOB_MODPAR_NAME = "bDesk3" and not(bDesk3) then bDesk3 = 1: parameters bDesk3 = bDesk3
	endif

	lock			"bDesk4",
					"extensionTypeBottom",
					"iExtensionTypeBottom"
	hideparameter	"bDesk4",
					"extensionTypeBottom",
					"iExtensionTypeBottom"
endif
if DESK_LAYOUT_4 then
	if (bDesk1 + bDesk2 + bDesk3 + bDesk4) < 1 then
		if GLOB_MODPAR_NAME = "bDesk1" and not(bDesk1) then bDesk1 = 1: parameters bDesk1 = bDesk1
		if GLOB_MODPAR_NAME = "bDesk2" and not(bDesk2) then bDesk2 = 1: parameters bDesk2 = bDesk2
		if GLOB_MODPAR_NAME = "bDesk3" and not(bDesk3) then bDesk3 = 1: parameters bDesk3 = bDesk3
		if GLOB_MODPAR_NAME = "bDesk4" and not(bDesk4) then bDesk4 = 1: parameters bDesk4 = bDesk4
	endif
endif

if iArrangement = ARRANGE_3_DESK_ALIGN then
	tableLength2 = tableLength1
	parameters tableLength2 = tableLength2

	tableDepth2 = tableDepth1
	parameters tableDepth2 = tableDepth2

	lock			"tableLength2",
					"tableDepth2"
	hideparameter 	"tableLength2",
					"tableDepth2"
endif

if iArrangement = ARRANGE_4_DESK_ROT then
	lock			"MSFront"
	hideparameter 	"MSFront"
endif



! ======================================================================
! Layout Components Listing
! ======================================================================

parameters iListDeskNum90	= 0
parameters iListDeskNum120	= 0
parameters iListExtDeskNum	= 0
parameters iListDeskCabNum	= 0
parameters iListExtRounded	= 0
parameters iListExtCab		= 0
parameters iListChairNum	= 0
parameters iListPartNum		= 0

lock	"iListDeskNum90",
		"iListDeskNum120",
		"iListExtDeskNum",
		"iListDeskCabNum",
		"iListExtRounded",
		"iListExtCab",
		"iListChairNum",
		"iListPartNum"

parameters iListDeskNum90	= (bDesk1 + bDesk2 + bDesk3 + bDesk4) * DESK_LAYOUT_4

parameters iListDeskNum120	= (bDesk1 + bDesk2 + bDesk3) * DESK_LAYOUT_3

parameters iListExtCab		= ((iExtensionTypeTop = EXT_CABINET)\
							+ (iExtensionTypeRight = EXT_CABINET)\
							+ (iExtensionTypeBottom = EXT_CABINET)\
							+ (iExtensionTypeLeft = EXT_CABINET) * DESK_LAYOUT_4) * (1 + bSymmetricalDeskEnd)

parameters iListExtDeskNum	= (iExtensionTypeTop = EXT_DESK)\
							+ (iExtensionTypeRight = EXT_DESK)\
							+ (iExtensionTypeBottom = EXT_DESK)\
							+ (iExtensionTypeLeft = EXT_DESK) * DESK_LAYOUT_4\
							+ (iExtensionTypeTop = EXT_DESK_WCHAIR)\
							+ (iExtensionTypeRight = EXT_DESK_WCHAIR)\
							+ (iExtensionTypeBottom = EXT_DESK_WCHAIR)\
							+ (iExtensionTypeLeft = EXT_DESK_WCHAIR) * DESK_LAYOUT_4

parameters iListDeskCabNum	= MAX(iListDeskNum90, iListDeskNum120) * bShowCabParams\
							+ iListExtDeskNum * CEIL(iExtraDeskCab / 2) * bShowCabParams

parameters iListExtRounded	= (iExtensionTypeTop = EXT_ROUNDED)\
							+ (iExtensionTypeRight = EXT_ROUNDED)\
							+ (iExtensionTypeBottom = EXT_ROUNDED)\
							+ (iExtensionTypeLeft = EXT_ROUNDED) * DESK_LAYOUT_4

parameters iListChairNum	= MAX(iListDeskNum90, iListDeskNum120)\
							+ (iExtensionTypeTop = EXT_DESK_WCHAIR)\
							+ (iExtensionTypeRight = EXT_DESK_WCHAIR)\
							+ (iExtensionTypeBottom = EXT_DESK_WCHAIR)\
							+ (iExtensionTypeLeft = EXT_DESK_WCHAIR) * DESK_LAYOUT_4

parameters iListPartNum		= (iExtensionTypeTop = EXT_PARTITION)\
							+ (iExtensionTypeRight = EXT_PARTITION)\
							+ (iExtensionTypeBottom = EXT_PARTITION)\
							+ (iExtensionTypeLeft = EXT_PARTITION) * DESK_LAYOUT_4 * 2\
							+ existPartition[1]\
							+ existPartition[2]\
							+ existPartition[3]\
							+ existPartition[4]



