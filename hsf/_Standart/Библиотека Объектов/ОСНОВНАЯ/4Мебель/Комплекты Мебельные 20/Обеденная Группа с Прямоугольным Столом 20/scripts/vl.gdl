
call "FM_types" parameters all

!Hide all parameters from UI
hideparameter all  "A", "B", "ZZYZX"

! --------------------------------------------------------------------------------

values "gs_detlevel_3D" `Детальный`,`Простой`,`Откл.`
values "gs_detlevel_3D_m" 2,1,0

values{2} "iChairType" 	CHAIRTYPE_RECTANGLE, _strChairType[1],
						CHAIRTYPE_ROUND, _strChairType[2] 

if GLOB_MODPAR_NAME = "gs_detlevel_3D" then
	if gs_detlevel_3D = `Детальный` then gs_detlevel_3D_m = 2
	if gs_detlevel_3D = `Простой` then gs_detlevel_3D_m = 1
	if gs_detlevel_3D = `Откл.` then gs_detlevel_3D_m = 0
	parameters gs_detlevel_3D_m = gs_detlevel_3D_m
else
	if gs_detlevel_3D_m = 2 then gs_detlevel_3D = `Детальный`
	if gs_detlevel_3D_m = 1 then gs_detlevel_3D = `Простой`
	if gs_detlevel_3D_m = 0 then gs_detlevel_3D = `Откл.`
	parameters gs_detlevel_3D = gs_detlevel_3D
endif

if gs_detlevel_3D_m = 1 then
	hideparameter "gs_resol"
	lock "gs_resol"
endif
if gs_detlevel_3D_m = 0 then
	hideparameter "gs_resol", "gs_shadow"
	lock "gs_resol", "gs_shadow"
endif

values "gs_resol" RANGE [3,)

call "2dDetailLevel" parameters gs_detlevel_2D	= gs_detlevel_2D,
							gs_detlevel_2D_m	= gs_detlevel_2D_m,
							enable2dDetLevels	= 2+4+8+16+32

if gs_detlevel_2D_m <> 4 then 
	hideparameter "gs_SymbolType", "gs_SymbolType_m"
	lock "gs_SymbolType", "gs_SymbolType_m"
endif

call "fa_ChairSymbol" parameters all stSymbolTypes = stSymbolTypes

if gs_detlevel_2D_m = 4 & (gs_SymbolType = stSymbolTypes[1] | gs_SymbolType = stSymbolTypes[2] | gs_SymbolType = stSymbolTypes[11] | gs_SymbolType = stSymbolTypes[12]) then
	chaird = chairw
	LOCK "chaird"
	HIDEPARAMETER "chaird"
else
	HIDEPARAMETER "gs_resol"
endif

if gs_cont_pen=0 then PARAMETERS gs_cont_pen=4
if gs_fill_pen=0 then PARAMETERS gs_fill_pen=19

values "LeftSideType" stSideTypes[1], stSideTypes[2]
values "iLeftSideType" SIDETYPE_CHAIR, SIDETYPE_WHEELCHAIR

if GLOB_MODPAR_NAME = "LeftSideType" then
	if LeftSideType = stSideTypes[1] then iLeftSideType = SIDETYPE_CHAIR
	if LeftSideType = stSideTypes[2] then iLeftSideType = SIDETYPE_WHEELCHAIR
	parameters iLeftSideType = iLeftSideType
else
	if iLeftSideType = SIDETYPE_CHAIR then LeftSideType = stSideTypes[1]
	if iLeftSideType = SIDETYPE_WHEELCHAIR then LeftSideType = stSideTypes[2]
	parameters LeftSideType = LeftSideType
endif

values "BottomSideType" stSideTypes[3], stSideTypes[4]
values "iBottomSideType" SIDETYPE_CHAIR, SIDETYPE_WHEELCHAIR
if GLOB_MODPAR_NAME = "BottomSideType" then
	if BottomSideType = stSideTypes[3] then iBottomSideType = SIDETYPE_CHAIR
	if BottomSideType = stSideTypes[4] then iBottomSideType = SIDETYPE_WHEELCHAIR
	parameters iBottomSideType = iBottomSideType
else
	if iBottomSideType = SIDETYPE_CHAIR	then BottomSideType = stSideTypes[3]
	if iBottomSideType = SIDETYPE_WHEELCHAIR	then BottomSideType = stSideTypes[4]
	parameters BottomSideType = BottomSideType
endif

values "SizingType" stSizingTypes[1], stSizingTypes[2]
values "iSizingType" SIZING_CHAIR_DIST, SIZING_TOTAL_SPACE
if GLOB_MODPAR_NAME = "SizingType" then
	if SizingType = stSizingTypes[1] then iSizingType = SIZING_CHAIR_DIST
	if SizingType = stSizingTypes[2] then iSizingType = SIZING_TOTAL_SPACE
	parameters iSizingType = iSizingType
else
	if iSizingType = SIZING_CHAIR_DIST	then SizingType = stSizingTypes[1]
	if iSizingType = SIZING_TOTAL_SPACE	then SizingType = stSizingTypes[2]
	parameters SizingType = SizingType
endif


! --- Minimal Space -----------------------------------------------------------------

values "MSRear" RANGE [0,)
values "MSRearW" RANGE [0, )

! --- Limitation -----------------------------------------------------------------

values "MinDist" RANGE [0,)

values "tableh" RANGE (0,)
values "gs_top_thk" RANGE (0,)
values "tbo" RANGE (0,)
values "tboy" RANGE (0,)
values "gs_leg" RANGE (0,)

values "chairw" RANGE [0.1,)
values "chaird" RANGE [0.1,)
values "chairh" RANGE (gs_seat_height,)
values "gs_seat_height" RANGE [0.1,)

num = 1+1*(iBottomSideType = SIDETYPE_WHEELCHAIR)
values "NumChairsX" RANGE [num, )
if iLeftSideType < 2 then
	values "NumChairsY" RANGE [1, )
else
	values "NumChairsY" 1
endif
values "WidPerChair" RANGE [chairw, )
values "DepPerChair" RANGE [chaird, )

values "wheelchairw" RANGE [0.1, )
values "wheelchaird" RANGE [0.1, )
VALUES "wheelchairh" RANGE [0.1, )

values "DistNextToWheelchair" RANGE [0, )
values "AddSideSpaceSize" RANGE [0, )

values "WidForWheelchair" RANGE [wheelchairw, )
values "DepForWheelchair" RANGE [wheelchaird, )

values "addtablew" RANGE [0, )
values "tablewforchairs" RANGE [0.1, )

if iSizingType = SIZING_CHAIR_DIST then
	PARAMETERS NumChairsX=ChairNumHor
	PARAMETERS NumChairsY=ChairNumVert
endif

if iSizingType = SIZING_TOTAL_SPACE then
	values "ChairTableDist" range [-max(RealDistV/2,RealDistH/2), min_pl-chaird]
else
	values "ChairTableDist" range [-max(RealDistV/2,RealDistH/2),  ]
endif

VALUES "A" RANGE[0.10 + MinDist + (chaird+ChairTableDist)*(iLeftSideType = SIDETYPE_CHAIR) + (wheelchaird)*(iLeftSideType = SIDETYPE_WHEELCHAIR) \
				 + (chaird+ChairTableDist)*RightSide, ]
if GLOB_MODPAR_NAME = "A" AND iSizingType = SIZING_CHAIR_DIST then
	tablew = A - (chaird+ChairTableDist)*(iLeftSideType = SIDETYPE_CHAIR) - (wheelchaird)*(iLeftSideType = SIDETYPE_WHEELCHAIR) \
			   - (chaird+ChairTableDist)*RightSide
	PARAMETERS tablew = tablew
endif

VALUES "B" RANGE[0.10 + MinDist + (chaird+ChairTableDist)*TopSide + (chaird+ChairTableDist)*(iBottomSideType = SIDETYPE_CHAIR)\
				 + (MAX(wheelchaird, chaird+ChairTableDist))*(iBottomSideType = SIDETYPE_WHEELCHAIR), ]
if GLOB_MODPAR_NAME = "B" AND iSizingType = SIZING_CHAIR_DIST then
	tabled = B - (chaird+ChairTableDist)*TopSide - (chaird+ChairTableDist)*(iBottomSideType = SIDETYPE_CHAIR) \
			   - (MAX(wheelchaird, chaird+ChairTableDist))*(iBottomSideType = SIDETYPE_WHEELCHAIR)
	PARAMETERS tabled = tabled
endif


! --- Real Dist. between Chairs, Interactions between Sizing Types ---------------

if GLOB_MODPAR_NAME = "tablehalfw" OR GLOB_MODPAR_NAME = "tablehalfd" then
	tabled = tablehalfd*2
	PARAMETERS tabled = tabled

	tablew = tablehalfw*2
	PARAMETERS tablew = tablew
else
	tablehalfd = tabled/2
	PARAMETERS tablehalfd = tablehalfd

	tablehalfw = tablew/2
	PARAMETERS tablehalfw = tablehalfw
endif

if iSizingType = SIZING_CHAIR_DIST then
	VALUES "tablehalfd" RANGE [chairw/2 + MinDist/2,)
	VALUES "tabled" RANGE [chairw + MinDist,)
	if iLeftSideType < 2 AND iBottomSideType < 2 then
		VALUES "tablehalfw" RANGE [chairw/2 + MinDist/2,)
		VALUES "tablew" RANGE [chairw + MinDist,)
	endif
	tablew_to_calc = tablew
	if iLeftSideType = SIDETYPE_WHEELCHAIR then
		VALUES "tablehalfw" RANGE [addtablew/2+chairw/2+MinDist/2,)
		VALUES "tablew" RANGE [addtablew+chairw+MinDist,)

		if GLOB_MODPAR_NAME = "LeftSideType" OR GLOB_MODPAR_NAME = "iLeftSideType" \
			OR GLOB_MODPAR_NAME = "tablew" OR GLOB_MODPAR_NAME = "tablehalfw" then
				tablewforchairs = tablew - addtablew
				PARAMETERS tablewforchairs = tablewforchairs
				tablew_to_calc = tablewforchairs
		else
			tablew_to_calc = tablewforchairs
			tablew = addtablew + tablewforchairs
			PARAMETERS tablew = tablew
		endif

		tablehalfd = tabled/2
		PARAMETERS tablehalfd = tablehalfd
	endif
	if iBottomSideType = SIDETYPE_WHEELCHAIR then
		VALUES "tablehalfw" RANGE [chairw/2+wheelchairw/2+DistNextToWheelchair+MinDist/2,)
		VALUES "tablew" RANGE [chairw+wheelchairw+DistNextToWheelchair*2+MinDist,)

		if GLOB_MODPAR_NAME = "BottomSideType" OR GLOB_MODPAR_NAME = "iBottomSideType" \
			OR GLOB_MODPAR_NAME = "tablew" OR GLOB_MODPAR_NAME = "tablehalfw" then
				tablewforchairs = tablew - wheelchairw - DistNextToWheelchair*2
				PARAMETERS tablewforchairs = tablewforchairs
				tablew_to_calc = tablewforchairs
		else
			tablew_to_calc = tablewforchairs
			tablew = tablewforchairs + WidForWheelchair
			PARAMETERS tablew = tablew
		endif

		ChairNumHor = ChairNumHor-1
		if ChairNumHor < 2 then ChairNumHor = 1
	endif

	if INT(tablew_to_calc / (MinDist + chairw)) <> 0 then
		PARAMETERS RealDistH =(tablew_to_calc - ChairNumHor * chairw) / ChairNumHor
	else
		PARAMETERS RealDistH = tablew_to_calc - chairw
	endif

!!	if ChairNumHor <= 1 then
!!		HIDEPARAMETER "RealDistH"
!!	endif

	if INT(tabled / (MinDist + chairw)) <> 0 then
		PARAMETERS RealDistV = (tabled - ChairNumVert * chairw) / ChairNumVert
	else
		PARAMETERS RealDistV = tabled - chairw
	endif

!!	if ChairNumVert <= 1 then
!!		HIDEPARAMETER "RealDistV"
!!	endif

	WidPerChair = tablew_to_calc/ChairNumHor
	PARAMETERS WidPerChair = WidPerChair
	DepPerChair = chaird + MSRear + ChairTableDist
	PARAMETERS DepPerChair = DepPerChair

	WidForWheelchair = wheelchairw + DistNextToWheelchair*2
	PARAMETERS WidForWheelchair = WidForWheelchair
	DepForWheelchair = wheelchaird + MSRearW
	PARAMETERS DepForWheelchair = DepForWheelchair
else
	RealDistH = WidPerChair - chairw
	PARAMETERS RealDistH = RealDistH
	RealDistV = RealDistH
	PARAMETERS RealDistV = RealDistV

	if GLOB_MODPAR_NAME = "tabled" OR GLOB_MODPAR_NAME = "tablehalfd" then
		NumChairsY = INT(tabled/WidPerChair)
		PARAMETERS NumChairsY = NumChairsY
		ChairNumVert = NumChairsY
	endif

	if GLOB_MODPAR_NAME = "tablew" OR GLOB_MODPAR_NAME = "tablehalfw" then
		if iBottomSideType < 2 AND iLeftSideType < 2 then
			NumChairsX = INT(tablew/WidPerChair)
			PARAMETERS NumChairsX = NumChairsX
			ChairNumHor = NumChairsX
		else
			if iBottomSideType = SIDETYPE_WHEELCHAIR then
				NumChairsX = 1+INT((tablew-WidForWheelchair)/WidPerChair)
				PARAMETERS NumChairsX = NumChairsX
				ChairNumHor = NumChairsX
			else
				NumChairsX = INT((tablew-addtablew)/WidPerChair)
				PARAMETERS NumChairsX = NumChairsX
				ChairNumHor = NumChairsX
			endif
		endif
	endif

	dist = (WidForWheelchair/2)*(iBottomSideType = SIDETYPE_WHEELCHAIR) + (addtablew/2)*(iLeftSideType = SIDETYPE_WHEELCHAIR)
	FOR i = 1 TO 25
		dist = dist + WidPerChair/2
		PUT dist
	NEXT i
	VALUES "tablehalfw" GET(NSP)

	dist = 0
	FOR i = 1 TO 25
		dist = dist + WidPerChair/2
		PUT dist
	NEXT i
	VALUES "tablehalfd" GET(NSP)

	dist = WidForWheelchair*(iBottomSideType = SIDETYPE_WHEELCHAIR) + addtablew*(iLeftSideType = SIDETYPE_WHEELCHAIR)
	FOR i = 1 TO 25
		dist = dist + WidPerChair
		PUT dist
	NEXT i
	VALUES "tablew" GET(NSP)

	dist = 0
	FOR i = 1 TO 25
		dist = dist + WidPerChair
		PUT dist
	NEXT i
	VALUES "tabled" GET(NSP)

	tabled = WidPerChair*ChairNumVert
	PARAMETERS tabled = tabled

	tablew = WidPerChair*(ChairNumHor-(iBottomSideType = SIDETYPE_WHEELCHAIR))
	if iLeftSideType = SIDETYPE_WHEELCHAIR then
		tablewforchairs = tablew
		PARAMETERS tablewforchairs = tablewforchairs
		tablew = tablew+addtablew

		tablehalfd = tabled/2
		PARAMETERS tablehalfd = tablehalfd
	endif
	if iBottomSideType = SIDETYPE_WHEELCHAIR then
		tablewforchairs = tablew
		PARAMETERS tablewforchairs = tablewforchairs
		tablew = tablew+WidForWheelchair
	endif
	PARAMETERS tablew = tablew

	MinDist = WidPerChair - chairw
	PARAMETERS 	MinDist = MinDist
	MSRear = DepPerChair - chaird - ChairTableDist
	PARAMETERS MSRear = MSRear

	DistNextToWheelchair = (WidForWheelchair - wheelchairw)/2
	PARAMETERS DistNextToWheelchair = DistNextToWheelchair

	MSRearW = DepForWheelchair - wheelchaird
	PARAMETERS MSRearW = MSRearW
endif

! --- Parameters Lock ----------------------------------------------------------

if iBottomSideType < 2 AND iLeftSideType < 2 then
	LOCK 	"MSRearW",
			"DistNextToWheelchair",
			"AddSideSpaceSize",
			"WidForWheelchair",
			"DepForWheelchair",
			"addtablew",
			"tablewforchairs",
			"wheelchairw",
			"wheelchaird",
			"wheelchairh"
endif
if iLeftSideType = SIDETYPE_WHEELCHAIR then LOCK "A", "B"
if iBottomSideType = SIDETYPE_WHEELCHAIR then LOCK "addtablew", "A", "B"
if iSizingType = SIZING_CHAIR_DIST then
	LOCK 	"NumChairsX",
			"NumChairsY",
			"WidPerChair",
			"DepPerChair",
			"WidForWheelchair",
			"DepForWheelchair"
else
	LOCK 	"MSRear",
			"MinDist",
			"MSRearW",
			"DistNextToWheelchair",
			"tablewforchairs",
			"A",
			"B"

	if iLeftSideType = SIDETYPE_WHEELCHAIR then LOCK "tabled"
endif
LOCK "RealDistH","RealDistV"

if not(bChairLeft) then
	hideparameter "iLeftSideType", "LeftSideType"
	lock "iLeftSideType", "LeftSideType"
endif

if not(bChairBottom) then
	hideparameter "iBottomSideType", "BottomSideType"
	lock "iBottomSideType", "BottomSideType"
endif

! --- A,B Sizes-----------------------------------------------------------------

A = tablew + (chaird+ChairTableDist)*(iLeftSideType = SIDETYPE_CHAIR) + (wheelchaird)*(iLeftSideType = SIDETYPE_WHEELCHAIR) \
			+ (chaird+ChairTableDist)*RightSide
PARAMETERS A = A

B = tabled + (chaird+ChairTableDist)*TopSide + (chaird+ChairTableDist)*(iBottomSideType = SIDETYPE_CHAIR) \
			+ (MAX(wheelchaird, chaird+ChairTableDist))*(iBottomSideType = SIDETYPE_WHEELCHAIR)
PARAMETERS B = B

if not(TopSide) and not(bChairBottom) and not(bChairLeft) and not(RightSide) then
	parameters ZZYZX = tableh
else
	parameters ZZYZX = MAX(tableh,chairh)
endif

LOCK "ZZYZX"

! ==============================================================================
! 		Uniform surfaces
! ==============================================================================

if GLOB_MODPAR_NAME = "bUniformSurfaces" then
	if bUniformSurfaces then
		gs_leg_mat		= gs_top_mat
		gs_frame_mat 	= gs_top_mat
		gs_back_mat		= gs_top_mat
		gs_seat_mat		= gs_top_mat

		parameters 	gs_leg_mat 		= gs_leg_mat,
					gs_frame_mat	= gs_frame_mat,
					gs_back_mat		= gs_back_mat,
					gs_seat_mat		= gs_seat_mat
	endif
else
	if bUniformSurfaces then
		if GLOB_MODPAR_NAME = "gs_top_mat" then
			gs_leg_mat		= gs_top_mat
			gs_frame_mat 	= gs_top_mat
			gs_back_mat		= gs_top_mat
			gs_seat_mat		= gs_top_mat
	
			parameters 	gs_leg_mat 		= gs_leg_mat,
						gs_frame_mat	= gs_frame_mat,
						gs_back_mat		= gs_back_mat,
						gs_seat_mat		= gs_seat_mat
		endif
		if GLOB_MODPAR_NAME = "gs_leg_mat" then
			gs_top_mat		= gs_leg_mat
			gs_frame_mat 	= gs_leg_mat
			gs_back_mat		= gs_leg_mat
			gs_seat_mat		= gs_leg_mat

			parameters 	gs_top_mat 		= gs_top_mat,
						gs_frame_mat	= gs_frame_mat,
						gs_back_mat		= gs_back_mat,
						gs_seat_mat		= gs_seat_mat
		endif
		if GLOB_MODPAR_NAME = "gs_frame_mat" then
			gs_top_mat		= gs_frame_mat
			gs_leg_mat 		= gs_frame_mat
			gs_back_mat		= gs_frame_mat
			gs_seat_mat		= gs_frame_mat

			parameters 	gs_top_mat 		= gs_top_mat,
						gs_leg_mat		= gs_leg_mat,
						gs_back_mat		= gs_back_mat,
						gs_seat_mat		= gs_seat_mat
		endif
		if GLOB_MODPAR_NAME = "gs_back_mat" then
			gs_top_mat		= gs_back_mat
			gs_leg_mat 		= gs_back_mat
			gs_frame_mat	= gs_back_mat
			gs_seat_mat		= gs_back_mat

			parameters 	gs_top_mat 		= gs_top_mat,
						gs_leg_mat		= gs_leg_mat,
						gs_frame_mat	= gs_frame_mat,
						gs_seat_mat		= gs_seat_mat
		endif
		if GLOB_MODPAR_NAME = "gs_seat_mat" then
			gs_top_mat		= gs_seat_mat
			gs_leg_mat 		= gs_seat_mat
			gs_frame_mat	= gs_seat_mat
			gs_back_mat		= gs_seat_mat

			parameters 	gs_top_mat 		= gs_top_mat,
						gs_leg_mat		= gs_leg_mat,
						gs_frame_mat	= gs_frame_mat,
						gs_back_mat		= gs_back_mat
		endif
	endif
endif
