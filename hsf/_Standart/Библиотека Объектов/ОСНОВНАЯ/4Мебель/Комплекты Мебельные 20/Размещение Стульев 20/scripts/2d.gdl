
! Contact person: <KR>

! ======================================================================
! SCALE
! ======================================================================
call "2dDetailLevel" parameters gs_detlevel_2D_m = gs_detlevel_2D_m,
				returned_parameters det2D

! ==============================================================================
! 2D
! ==============================================================================

PEN gs_cont_pen
FILL gs_fill_type


! === 2D HOTSPOTS ==============================================================

unID=1

HOTSPOT2  A/2,  -B/2, unID          : unID=unID+1

IF iCalculationMethod =  CALCULATION_BYAREA THEN

	HOTSPOT2  0,  0, unID, A, 1+256 : unID=unID+1
	HOTSPOT2 -1,  0, unID, A, 3     : unID=unID+1
	HOTSPOT2  A,  0, unID, A, 2     : unID=unID+1

	HOTSPOT2  0, -B, unID, A, 1+256 : unID=unID+1
	HOTSPOT2 -1, -B, unID, A, 3     : unID=unID+1
	HOTSPOT2  A, -B, unID, A, 2     : unID=unID+1

	HOTSPOT2  0,  0, unID, B, 1+256 : unID=unID+1
	HOTSPOT2  0,  1, unID, B, 3     : unID=unID+1
	HOTSPOT2  0, -B, unID, B, 2     : unID=unID+1

	HOTSPOT2  A,  0, unID, B, 1+256 : unID=unID+1
	HOTSPOT2  A,  1, unID, B, 3     : unID=unID+1
	HOTSPOT2  A, -B, unID, B, 2     : unID=unID+1

ELSE

	HOTSPOT2  0,  0, unID, AA, 1+256, nColumn : unID=unID+1
	HOTSPOT2 -1,  0, unID, AA, 3,     nColumn : unID=unID+1
	HOTSPOT2  A,  0, unID, AA, 2,     nColumn : unID=unID+1

	HOTSPOT2  0, -B, unID, AA, 1+256, nColumn : unID=unID+1
	HOTSPOT2 -1, -B, unID, AA, 3,     nColumn : unID=unID+1
	HOTSPOT2  A, -B, unID, AA, 2,     nColumn : unID=unID+1

	HOTSPOT2  0,  0, unID, BB, 1+256, nRow    : unID=unID+1
	HOTSPOT2  0,  1, unID, BB, 3,     nRow    : unID=unID+1
	HOTSPOT2  0, -B, unID, BB, 2,     nRow    : unID=unID+1

	HOTSPOT2  A,  0, unID, BB, 1+256, nRow    : unID=unID+1
	HOTSPOT2  A,  1, unID, BB, 3,     nRow    : unID=unID+1
	HOTSPOT2  A, -B, unID, BB, 2,     nRow    : unID=unID+1

ENDIF

IF gs_detlevel_2D_m = 4 & (gs_SymbolType = `Окружность` | gs_SymbolType = `Круглый со Спинкой`) THEN

	! === Seat Width = Depth ===
	HOTSPOT2  0,             -gs_seat_width / 2, unID, gs_seat_width, 1+128 : unID=unID+1
	HOTSPOT2 -1,             -gs_seat_width / 2, unID, gs_seat_width, 3+128 : unID=unID+1
	HOTSPOT2  gs_seat_width, -gs_seat_width / 2, unID, gs_seat_width, 2     : unID=unID+4

ELSE

	! === Seat Width ===
	HOTSPOT2  0,             -gs_seat_depth, unID, gs_seat_width, 1+128 : unID=unID+1
	HOTSPOT2 -1,             -gs_seat_depth, unID, gs_seat_width, 3+128 : unID=unID+1
	HOTSPOT2  gs_seat_width, -gs_seat_depth, unID, gs_seat_width, 2     : unID=unID+1

	! === Seat Depth ===
	HOTSPOT2  gs_seat_width,  0,             unID, gs_seat_depth, 1+128 : unID=unID+1
	HOTSPOT2  gs_seat_width,  1,             unID, gs_seat_depth, 3+128 : unID=unID+1
	HOTSPOT2  gs_seat_width, -gs_seat_depth, unID, gs_seat_depth, 2     : unID=unID+1

ENDIF

! === Dist. between Rows ===
IF nRow>1 THEN
	HOTSPOT2 0,  0,       unID, distRow, 1+128 : unID=unID+1
	HOTSPOT2 0,  1,       unID, distRow, 3+128 : unID=unID+1
	HOTSPOT2 0, -distRow, unID, distRow, 2     : unID=unID+1
ELSE
	unID=unID+3
ENDIF


! === MINIMAL SPACE ============================================================
call "fa_minimalspace" parameters all MSType = 0,
					   returned_parameters reqBMinSpace, reqMSFillType, reqMSFillPen, reqMSFillBackPen, reqMSContLineType, reqMSContLinePen

if reqBMinSpace then
	line_type reqMSContLineType
	pen reqMSContLinePen
	fill reqMSFillType

	POLY2_B 5, 1+2+4+64, reqMSFillPen, reqMSFillBackPen,
			-LeftMinspace,RearMinspace,1,
			a+RightMinspace,RearMinspace,1,
			a+RightMinspace,-b-FrontMinspace,1,
			-LeftMinspace,-b-FrontMinspace,1,
			-LeftMinspace,RearMinspace,-1
endif
unID = 1000


! === 2D PLAN SYMBOL ===========================================================


nColumn=nColumn

chairHotspotUnId = 100		! macro uses maximum 100 hotspot IDs

ADD2 0, - gs_seat_depth
line_type 1

FOR i = 1 TO nRow

	IF iSeatArrangement = ARRANGE_STAGGEREDROWS THEN
		IF i/2 <> INT(i/2) THEN
				ADD2 0, 0
				nColumn = nColumn + 1
				IF i = 1 THEN nColumn = nColumn - 1
			ELSE
				nColumn = nColumn - 1
				ADD2 (gs_seat_width + distChairH) / 2, 0
		ENDIF
	ELSE
		nColumn = nColumn
		ADD2 0, 0
	ENDIF

	HOTSPOT2 0, 0, unID :	unID=unID+1
	HOTSPOT2 gs_seat_width * nColumn + distChairH * (nColumn-1), 0, unID : unID=unID+1

	FOR j = 1 TO nColumn

		IF det2D = 1 THEN						! 1/200
			CALL "fa_ChairSymbol",
				PARAMETERS ALL 	a                   = gs_seat_width,
								b                   = gs_seat_depth,
								gs_SymbolType_m     = 3,
								gs_hotspotUnIdBegin = chairHotspotUnId,
								calledAsMacro = 1

		ENDIF

		IF det2D = 2 THEN						! 1/100
			CALL "fa_ChairSymbol",
				PARAMETERS ALL 	a                   = gs_seat_width,
								b                   = gs_seat_depth,
								gs_SymbolType_m     = 4,
								gs_hotspotUnIdBegin = chairHotspotUnId,
								calledAsMacro = 1

		ENDIF

		IF det2D = 4 THEN						! Symbolic
			CALL "fa_ChairSymbol",
				PARAMETERS ALL 	a                   = gs_seat_width,
								b                   = gs_seat_depth,
								gs_hotspotUnIdBegin = chairHotspotUnId,
								calledAsMacro = 1

		ENDIF


		IF det2D = 3 THEN 	! 1/50

			IF gs_back_pen = 0 THEN
				fillMask = 1+4
			ELSE
				fillMask = 1+2+4+64
			ENDIF

			FILL gs_fill_type
			pen gs_cont_pen

			POLY2_B 5, fillMask, gs_fill_pen, gs_back_pen,
					0,             0,             1,
					gs_seat_width, 0,             1,
					gs_seat_width, gs_seat_depth, 1,
					0,             gs_seat_depth, 1,
					0,             0,            -1

			LINE2 0,                  gs_seat_depth-0.05, gs_seat_width,      gs_seat_depth-0.05
			LINE2 0.05,               gs_seat_depth-0.05, 0.05,               gs_seat_depth
			LINE2 gs_seat_width-0.05, gs_seat_depth-0.05, gs_seat_width-0.05, gs_seat_depth

			HOTSPOT2 gs_seat_width/2, gs_seat_depth, chairHotspotUnId
		ENDIF

		chairHotspotUnId = chairHotspotUnId + 1

		ADD2 gs_seat_width + distChairH, 0

	NEXT j
	DEL nColumn + 1

	ADD2 0, -distRow

NEXT i

DEL TOP


