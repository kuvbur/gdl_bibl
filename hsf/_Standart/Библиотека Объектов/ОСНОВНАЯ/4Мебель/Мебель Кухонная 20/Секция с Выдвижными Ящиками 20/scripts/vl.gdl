
values "A" range [left_cab+right_cab+2*0.03, )
values "B" range [front_cab+rear_cab+2*0.03, )
values "zzyzx" range [toe_h+count_th+drawer_num*0.05, )

if GLOB_MODPAR_NAME = "sKnobVertPos" then
	iKnobVertPos = KNOB_VERTPOS_TOP
	if sKnobVertPos = stKnobVertPos[2] then iKnobVertPos = KNOB_VERTPOS_MIDDLE
	if sKnobVertPos = stKnobVertPos[3] then iKnobVertPos = KNOB_VERTPOS_BOTTOM
	parameters iKnobVertPos = iKnobVertPos
else
	sKnobVertPos = stKnobVertPos[1]		! Top
	if iKnobVertPos = KNOB_VERTPOS_MIDDLE then sKnobVertPos = stKnobVertPos[2]
	if iKnobVertPos = KNOB_VERTPOS_BOTTOM then sKnobVertPos = stKnobVertPos[3]
	parameters sKnobVertPos = sKnobVertPos
endif
values "sKnobVertPos" stKnobVertPos
values "iKnobVertPos" KNOB_VERTPOS_TOP, KNOB_VERTPOS_MIDDLE, KNOB_VERTPOS_BOTTOM

!values "doorframe_w" range [0.03, )

dim drawerScheme[5]
	drawerScheme[1] = `Схема 1`
	drawerScheme[2] = `Схема 2`
	drawerScheme[3] = `Схема 3`
	drawerScheme[4] = `Схема 4`
	drawerScheme[5] = `Спец.`

values "gs_drawerScheme" drawerScheme
values "gs_drawerScheme_m" 1, 2, 3, 4, 5

if GLOB_MODPAR_NAME = "gs_drawerScheme" THEN
	gs_drawerScheme_m = 1
	for i=1 to vardim1(drawerScheme)
		if gs_drawerScheme = drawerScheme[i] THEN gs_drawerScheme_m = i
	next i
	parameters gs_drawerScheme_m = gs_drawerScheme_m
else
	gs_drawerScheme = drawerScheme[gs_drawerScheme_m]
	parameters gs_drawerScheme = gs_drawerScheme
endif

mainHeight = zzyzx - count_th - toe_h
values "drawer_num" range [1, MIN(6, INT(mainHeight / 0.04))]

IF gs_drawerScheme_m = 1 THEN
	drawerHeight = mainHeight / drawer_num
	FOR i = 1 TO drawer_num
		PARAMETERS gs_drawerHeights[i] = drawerHeight
	NEXT i

	HIDEPARAMETER "gs_topDrawerH",
			"gs_bottomDrawerH",
			"gs_drawerH_1",
			"gs_drawerH_2",
			"gs_drawerH_3",
			"gs_drawerH_4",
			"gs_drawerH_5",
			"gs_drawerH_6"

	LOCK	"gs_topDrawerH",
			"gs_bottomDrawerH",
			"gs_drawerH_1",
			"gs_drawerH_2",
			"gs_drawerH_3",
			"gs_drawerH_4",
			"gs_drawerH_5",
			"gs_drawerH_6"
ENDIF

if gs_door_type_m = 0 then
	lock "gs_drawerScheme", "drawer_num"
	hideparameter "gs_drawerScheme", "drawer_num"
endif

IF gs_drawerScheme_m = 2 THEN
	IF drawer_num = 1 THEN
		gs_topDrawerH = mainHeight
		LOCK "gs_topDrawerH"
		PARAMETERS gs_topDrawerH = gs_topDrawerH, gs_drawerHeights[drawer_num] = gs_topDrawerH
	ELSE
		VALUES "gs_topDrawerH" RANGE [0.04, mainHeight - (drawer_num - 1) * 0.04]
		drawerHeight = (mainHeight - gs_topDrawerH) / (drawer_num - 1)

		FOR i = 1 TO drawer_num-1
			PARAMETERS gs_drawerHeights[i] = drawerHeight
		NEXT i

		PARAMETERS gs_drawerHeights[drawer_num] = gs_topDrawerH
	ENDIF

	HIDEPARAMETER "gs_bottomDrawerH",
			"gs_drawerH_1",
			"gs_drawerH_2",
			"gs_drawerH_3",
			"gs_drawerH_4",
			"gs_drawerH_5",
			"gs_drawerH_6"

	LOCK	"gs_bottomDrawerH",
			"gs_drawerH_1",
			"gs_drawerH_2",
			"gs_drawerH_3",
			"gs_drawerH_4",
			"gs_drawerH_5",
			"gs_drawerH_6"
ENDIF

IF gs_drawerScheme_m = 3 THEN
	IF drawer_num = 1 THEN
		gs_bottomDrawerH = mainHeight
		LOCK "gs_bottomDrawerH"
		PARAMETERS gs_bottomDrawerH = gs_bottomDrawerH, gs_drawerHeights[1] = gs_bottomDrawerH
	ELSE
		VALUES "gs_bottomDrawerH" RANGE [0.04, mainHeight - (drawer_num - 1) * 0.04]
		IF gs_bottomDrawerH > mainHeight - (drawer_num - 1) * 0.04 THEN gs_bottomDrawerH = mainHeight - (drawer_num - 1) * 0.04
		IF gs_bottomDrawerH < 0.04 THEN gs_bottomDrawerH = 0.04

		drawerHeight = (mainHeight - gs_bottomDrawerH) / (drawer_num - 1)

		PARAMETERS gs_drawerHeights[1] = gs_bottomDrawerH
		FOR i = 2 TO drawer_num
			PARAMETERS gs_drawerHeights[i] = drawerHeight
		NEXT i
	ENDIF

	HIDEPARAMETER "gs_topDrawerH",
			"gs_drawerH_1",
			"gs_drawerH_2",
			"gs_drawerH_3",
			"gs_drawerH_4",
			"gs_drawerH_5",
			"gs_drawerH_6"

	LOCK	"gs_topDrawerH",
			"gs_drawerH_1",
			"gs_drawerH_2",
			"gs_drawerH_3",
			"gs_drawerH_4",
			"gs_drawerH_5",
			"gs_drawerH_6"
ENDIF

IF gs_drawerScheme_m = 4 THEN
	IF drawer_num = 1 THEN
		gs_topDrawerH = mainHeight
		LOCK "gs_topDrawerH", "gs_bottomDrawerH"
		PARAMETERS gs_topDrawerH = gs_topDrawerH, gs_drawerHeights[1] = gs_topDrawerH
	ELSE
		IF drawer_num = 2 THEN
			VALUES "gs_topDrawerH" RANGE [0.04, mainHeight - 0.04]
			IF gs_topDrawerH > mainHeight - 0.04 THEN gs_topDrawerH = mainHeight - 0.04
			IF gs_topDrawerH < 0.04 THEN gs_topDrawerH = 0.04

			gs_bottomDrawerH = mainHeight - gs_topDrawerH
			LOCK "gs_bottomDrawerH"
			PARAMETERS gs_bottomDrawerH = gs_bottomDrawerH,
						gs_drawerHeights[1] = gs_bottomDrawerH,
						gs_drawerHeights[2] = gs_topDrawerH
		ELSE
			VALUES "gs_topDrawerH" RANGE [0.04, mainHeight - (drawer_num - 1) * 0.04]
			IF gs_topDrawerH > mainHeight - (drawer_num - 1) * 0.04 THEN gs_topDrawerH = mainHeight - (drawer_num - 1) * 0.04
			IF gs_topDrawerH < 0.04 THEN gs_topDrawerH = 0.04

			VALUES "gs_bottomDrawerH" RANGE [0.04, mainHeight - (drawer_num - 2) * 0.04 - gs_topDrawerH]
			IF gs_bottomDrawerH > mainHeight - (drawer_num - 2) * 0.04 - gs_topDrawerH THEN gs_bottomDrawerH = mainHeight - (drawer_num - 2) * 0.04 - gs_topDrawerH
			IF gs_bottomDrawerH < 0.04 THEN gs_bottomDrawerH = 0.04

			drawerHeight = (mainHeight - gs_topDrawerH - gs_bottomDrawerH) / (drawer_num - 2)

			PARAMETERS gs_drawerHeights[1] = gs_bottomDrawerH

			FOR i = 2 TO drawer_num - 1
				PARAMETERS gs_drawerHeights[i] = drawerHeight
			NEXT i

			PARAMETERS gs_drawerHeights[drawer_num] = gs_topDrawerH

		ENDIF
	ENDIF

	HIDEPARAMETER "gs_drawerH_1",
			"gs_drawerH_2",
			"gs_drawerH_3",
			"gs_drawerH_4",
			"gs_drawerH_5",
			"gs_drawerH_6"

	LOCK	"gs_drawerH_1",
			"gs_drawerH_2",
			"gs_drawerH_3",
			"gs_drawerH_4",
			"gs_drawerH_5",
			"gs_drawerH_6"
ENDIF

IF gs_drawerScheme_m = 5 THEN
	IF GLOB_MODPAR_NAME = "gs_drawerScheme_m" OR GLOB_MODPAR_NAME = "gs_drawerScheme" OR GLOB_MODPAR_NAME = "drawer_num" THEN
		IF drawer_num = 1 THEN
			gs_drawerH_1 = mainHeight
		ENDIF

		IF drawer_num = 2 THEN
			gs_drawerH_1 = mainHeight/2
			gs_drawerH_2 = mainHeight/2
		ENDIF

		IF drawer_num = 3 THEN
			gs_drawerH_1 = mainHeight/3
			gs_drawerH_2 = mainHeight/3
			gs_drawerH_3 = mainHeight/3
		ENDIF

		IF drawer_num = 4 THEN
			gs_drawerH_1 = mainHeight/4
			gs_drawerH_2 = mainHeight/4
			gs_drawerH_3 = mainHeight/4
			gs_drawerH_4 = mainHeight/4
		ENDIF

		IF drawer_num = 5 THEN
			gs_drawerH_1 = mainHeight/5
			gs_drawerH_2 = mainHeight/5
			gs_drawerH_3 = mainHeight/5
			gs_drawerH_4 = mainHeight/5
			gs_drawerH_5 = mainHeight/5
		ENDIF

		IF drawer_num = 6 THEN
			gs_drawerH_1 = mainHeight/6
			gs_drawerH_2 = mainHeight/6
			gs_drawerH_3 = mainHeight/6
			gs_drawerH_4 = mainHeight/6
			gs_drawerH_5 = mainHeight/6
			gs_drawerH_6 = mainHeight/6
		ENDIF

		PARAMETERS gs_drawerH_1 = gs_drawerH_1
		PARAMETERS gs_drawerH_2 = gs_drawerH_2
		PARAMETERS gs_drawerH_3 = gs_drawerH_3
		PARAMETERS gs_drawerH_4 = gs_drawerH_4
		PARAMETERS gs_drawerH_5 = gs_drawerH_5
		PARAMETERS gs_drawerH_6 = gs_drawerH_6

	ENDIF

	IF drawer_num = 1 THEN
		gs_drawerH_1 = mainHeight
		PARAMETERS gs_drawerH_1 = gs_drawerH_1
		LOCK "gs_drawerH_1"
	ELSE
		VALUES "gs_drawerH_1" RANGE [0.04, mainHeight - (drawer_num - 1) * 0.04]
	ENDIF

	IF drawer_num > 1 THEN
		IF drawer_num = 2 THEN
			gs_drawerH_2 = mainHeight - gs_drawerH_1
			PARAMETERS gs_drawerH_2 = gs_drawerH_2
			LOCK "gs_drawerH_2"
		ELSE
			VALUES "gs_drawerH_2" RANGE [0.04, mainHeight - gs_drawerH_1 - (drawer_num - 2) * 0.04]
		ENDIF
	ENDIF

	IF drawer_num > 2 THEN
		IF drawer_num = 3 THEN
			gs_drawerH_3 = mainHeight - gs_drawerH_1 - gs_drawerH_2
			PARAMETERS gs_drawerH_3 = gs_drawerH_3
			LOCK "gs_drawerH_3"
		ELSE
			VALUES "gs_drawerH_3" RANGE [0.04, mainHeight - gs_drawerH_1 - gs_drawerH_2 - (drawer_num - 3) * 0.04]
		ENDIF
	ENDIF

	IF drawer_num > 3 THEN
		IF drawer_num = 4 THEN
			gs_drawerH_4 = mainHeight - gs_drawerH_1 - gs_drawerH_2 - gs_drawerH_3
			PARAMETERS gs_drawerH_4 = gs_drawerH_4
			LOCK "gs_drawerH_4"
		ELSE
			VALUES "gs_drawerH_4" RANGE [0.04, mainHeight - gs_drawerH_1 - gs_drawerH_2 - gs_drawerH_3 - (drawer_num - 4) * 0.04]
		ENDIF
	ENDIF

	IF drawer_num > 4 THEN
		IF drawer_num = 5 THEN
			gs_drawerH_5 = mainHeight - gs_drawerH_1 - gs_drawerH_2 - gs_drawerH_3 - gs_drawerH_4
			PARAMETERS gs_drawerH_5 = gs_drawerH_5
			LOCK "gs_drawerH_5"
		ELSE
			VALUES "gs_drawerH_5" RANGE [0.04, mainHeight - gs_drawerH_1 - gs_drawerH_2 - gs_drawerH_3 - gs_drawerH_4 - (drawer_num - 5) * 0.04]
		ENDIF
	ENDIF

	IF drawer_num > 5 THEN
		gs_drawerH_6 = mainHeight - gs_drawerH_1 - gs_drawerH_2 - gs_drawerH_3 - gs_drawerH_4 - gs_drawerH_5
		PARAMETERS gs_drawerH_6 = gs_drawerH_6
		LOCK "gs_drawerH_6"
	ENDIF

	HIDEPARAMETER "gs_topDrawerH",
			"gs_bottomDrawerH"

	LOCK	"gs_topDrawerH",
			"gs_bottomDrawerH"

	PARAMETERS gs_drawerHeights[1] = gs_drawerH_1
	PARAMETERS gs_drawerHeights[2] = gs_drawerH_2
	PARAMETERS gs_drawerHeights[3] = gs_drawerH_3
	PARAMETERS gs_drawerHeights[4] = gs_drawerH_4
	PARAMETERS gs_drawerHeights[5] = gs_drawerH_5
	PARAMETERS gs_drawerHeights[6] = gs_drawerH_6

	IF drawer_num < 2 THEN
		HIDEPARAMETER "gs_drawerH_2"
		LOCK "gs_drawerH_2"
	ENDIF
	IF drawer_num < 3 THEN
		HIDEPARAMETER "gs_drawerH_3"
		LOCK "gs_drawerH_3"
	ENDIF
	IF drawer_num < 4 THEN
		HIDEPARAMETER "gs_drawerH_4"
		LOCK "gs_drawerH_4"
	ENDIF
	IF drawer_num < 5 THEN
		HIDEPARAMETER "gs_drawerH_5"
		LOCK "gs_drawerH_5"
	ENDIF
	IF drawer_num < 6 THEN
		HIDEPARAMETER "gs_drawerH_6"
		LOCK "gs_drawerH_6"
	ENDIF
endif


! --- Custom Elements ---

dim gs_pt[]

if iEndPanelType = 99 then

	call "Object_Panel_Collection" parameters returned_parameters gs_pt

	values "gs_cust_p_end" gs_pt

endif


CALL "Kitchen Cabinets UI macro" parameters all \
									pageIds = pageIds,
									CornCabType = 0,
									bEdgeBevel = 1,
									CabinetType = 0,
									bCounterOverhang = 1,
									bMirror = 1,

									CornerEdgeSizes = 0,
									bToe = 1,
									bShelf = 0,
									bShowSurfaces = 1,

									bDoubleFacadeEdit = 0,
									bOneRearPanelEdit = 1,
									bHorKnobPosition = 1,
									bVerKnobPosition =0,
									bPositionType = 0,

									nDoors = 1,

									bCabSymbol = 0,
									bPossibleSinknTap = 0,
									bApplianceEdit = 0,
									bSymbLineEdit = 0,
									bShadowEdit = 1,
									bHotspotEdit = 1,

									bEnableBackSplash	= 1,
									bEnableDoorpanel	= 1,
									bEnableEndpanel		= 1,
									bDoubleDoor			= 0,
									bEnableKnobPlacing	= 0,
									bEnableShelf		= 0,
									bEnableSink			= 0,
									isTallCabinet		= 0,

									bKnobParams = 1

if gs_knob_type_m = 0 then
	hideparameter "gs_bDoubleKnob", "gs_knobDistFromSide"
	lock "gs_bDoubleKnob", "gs_knobDistFromSide"
else
	if gs_bDoubleKnob then
		hideparameter "knob_pl_x"
		lock "knob_pl_x"
	else
		hideparameter "gs_knobDistFromSide"
		lock "gs_knobDistFromSide"
	endif
endif

IF gs_door_type_m < EPS THEN
	lock "gs_knob_type", "knob_size", "gs_bDoubleKnob", "gs_knobDistFromSide", "knob_pl_x", "sKnobVertPos",
			"doorframe_w", "gs_bevel"
	hideparameter "gs_knob_type", "doorframe_w", "gs_bevel"
ENDIF

VALUES "gs_ui_current_page" 1, 2, 3, 4, 5, 6, 7


