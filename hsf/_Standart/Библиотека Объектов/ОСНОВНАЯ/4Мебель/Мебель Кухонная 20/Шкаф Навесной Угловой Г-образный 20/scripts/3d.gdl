

toe_h = 0
count_th = 0
rrear_cab = 0
lrear_cab = 0
left_cab = 0
right_cab = 0

if gs_detlevel_3D_m=0 then END
if GLOB_CONTEXT>20 and GLOB_CONTEXT<40 then gs_detlevel_3D_m=1

if gs_detlevel_3D_m=1 then resol 4
if gs_detlevel_3D_m=2 then resol gs_resol

if gs_shadow=0 then SHADOW OFF

addz placementHeight

unID=1

! END PANELS OPTION
if dob_face then lrear_cab = lrear_cab
if rrear_panel then rrear_cab = rrear_cab + 0.02
if lrear_panel then lrear_cab = lrear_cab + 0.02
if left_panel then left_cab = left_cab +0.02
if right_panel then right_cab = right_cab +0.02

PEN gs_cont_pen


ADD a/2,b/2,0

! 3D hotspots
HOTSPOT -a/2, -b/2, 0, unID : unID=unID+1
HOTSPOT -a/2+depth_cabl, -b/2, 0, unID : unID=unID+1
HOTSPOT -a/2+depth_cabl,  b/2-depth_cabr, 0, unID : unID=unID+1
HOTSPOT  a/2, b/2-depth_cabr, 0, unID : unID=unID+1
HOTSPOT  a/2, b/2, 0, unID : unID=unID+1
HOTSPOT -a/2, b/2, 0, unID : unID=unID+1

hotspot -a/2, -b/2, 0, unID, zzyzx, 1+128 : unID=unID+1
hotspot -a/2, -b/2, -1, unID, zzyzx, 3 : unID=unID+1
hotspot -a/2, -b/2, zzyzx, unID, zzyzx, 2 : unID=unID+1

hotspot -a/2+depth_cabl, -b/2, 0, unID, zzyzx, 1+128 : unID=unID+1
hotspot -a/2+depth_cabl, -b/2, -1, unID, zzyzx, 3 : unID=unID+1
hotspot -a/2+depth_cabl, -b/2, zzyzx, unID, zzyzx, 2 : unID=unID+1

hotspot -a/2+depth_cabl,  b/2-depth_cabr, 0, unID, zzyzx, 1+128 : unID=unID+1
hotspot -a/2+depth_cabl,  b/2-depth_cabr, -1, unID, zzyzx, 3 : unID=unID+1
hotspot -a/2+depth_cabl,  b/2-depth_cabr, zzyzx, unID, zzyzx, 2 : unID=unID+1

hotspot a/2, b/2-depth_cabr, 0, unID, zzyzx, 1+128 : unID=unID+1
hotspot a/2, b/2-depth_cabr, -1, unID, zzyzx, 3 : unID=unID+1
hotspot a/2, b/2-depth_cabr, zzyzx, unID, zzyzx, 2 : unID=unID+1

hotspot a/2, b/2, 0, unID, zzyzx, 1+128 : unID=unID+1
hotspot a/2, b/2, -1, unID, zzyzx, 3 : unID=unID+1
hotspot a/2, b/2, zzyzx, unID, zzyzx, 2 : unID=unID+1

hotspot -a/2, b/2, 0, unID, zzyzx, 1+128 : unID=unID+1
hotspot -a/2, b/2, -1, unID, zzyzx, 3 : unID=unID+1
hotspot -a/2, b/2, zzyzx, unID, zzyzx, 2 : unID=unID+1
! End of 3D hotspots


ADD -a/2, -b/2, 0

! CABINET

ADDZ toe_h
MATERIAL gs_cabinet_mat

if gs_detlevel_3D_m=2 AND zzyzx-count_th-toe_h>0.041 then

PRISM_ 13, 0.02,		!! bottom panel
		lrear_cab+(fr_th1*dob_face), left_cab, 11,
		depth_cabl-fr_th1, left_cab, 11,
		depth_cabl-fr_th1, 0.02+left_cab, 13,
		depth_cabl-fr_th1, b-depth_cabr-0.01, 9+(1-door)*4,
		depth_cabl-fr_th1, b-depth_cabr+fr_th1, 11+(1-door)*4,
		depth_cabl+0.01, b-depth_cabr+fr_th1, 13,
		a-0.02-right_cab, b-depth_cabr+fr_th1, 9,
		a-right_cab, b-depth_cabr+fr_th1, 11,
		a-right_cab, b-rrear_cab, 11,
		lrear_cab+(fr_th1*dob_face), b-rrear_cab, 11,
		lrear_cab+(fr_th1*dob_face), b-rrear_cab-0.02, 9+dob_face*4,
		lrear_cab+(fr_th1*dob_face), left_cab+0.02, 9,
		lrear_cab+(fr_th1*dob_face), left_cab, -1

ADDZ 0.02
if dob_face=0 then
	PRISM_ 11, zzyzx-count_th-toe_h-0.04,
			lrear_cab, left_cab, 10,
			depth_cabl-fr_th1, left_cab, 10,
			depth_cabl-fr_th1, 0.02+left_cab, 15,
			lrear_cab+0.02, 0.02+left_cab, 15,
			lrear_cab+0.02, b-0.02-rrear_cab, 15,
			a-0.02-right_cab, b-0.02-rrear_cab, 15,
			a-0.02-right_cab, b-depth_cabr+fr_th1, 10,
			a-right_cab, b-depth_cabr+fr_th1, 10,
			a-right_cab, b-rrear_cab, 10,
			lrear_cab, b-rrear_cab, 10,
			lrear_cab, left_cab, -1
endif

if dob_face=1 then
	PRISM_ 5, zzyzx-count_th-toe_h-0.04,
			lrear_cab+(fr_th1*dob_face), left_cab, 10,
			depth_cabl-fr_th1, left_cab, 10,
			depth_cabl-fr_th1, 0.02+left_cab, 15,
			lrear_cab+(fr_th1*dob_face), 0.02+left_cab, 10,
			lrear_cab+(fr_th1*dob_face), left_cab, -1

	PRISM_ 7, zzyzx-count_th-toe_h-0.04,
			lrear_cab+(fr_th1*dob_face), b-0.02-rrear_cab, 15,
			a-0.02-right_cab, b-0.02-rrear_cab, 15,
			a-0.02-right_cab, b-depth_cabr+fr_th1, 10,
			a-right_cab, b-depth_cabr+fr_th1, 10,
			a-right_cab, b-rrear_cab, 10,
			lrear_cab+(fr_th1*dob_face), b-rrear_cab, 10,
			lrear_cab+(fr_th1*dob_face), b-0.02-rrear_cab, -1
endif


if door=1 AND zzyzx-count_th-toe_h>=0.18 then		!!! panel at the corner
	PRISM_ 8, zzyzx-count_th-toe_h-0.04,
			depth_cabl-0.02-fr_th1, b-depth_cabr-0.01, 15,
			depth_cabl-fr_th1, b-depth_cabr-0.01, 10,
			depth_cabl-fr_th1, b-depth_cabr+fr_th1, 10,
			depth_cabl+0.01, b-depth_cabr+fr_th1, 15,
			depth_cabl+0.01, b-depth_cabr+fr_th1+0.02, 15,
			depth_cabl-0.02-fr_th1, b-depth_cabr+0.02+fr_th1, 15,
			depth_cabl-0.02-fr_th1, b-depth_cabr-0.01, 15,
			depth_cabl-0.02-fr_th1, b-depth_cabr-0.01, -1
endif

ADDZ zzyzx-0.04
	PRISM_ 13, 0.02,				!! top panel
			lrear_cab+(fr_th1*dob_face), left_cab, 14,
			depth_cabl-fr_th1, left_cab, 14,
			depth_cabl-fr_th1, 0.02+left_cab, 13,
			depth_cabl-fr_th1, b-depth_cabr-0.01, 12+(1-door),
			depth_cabl-fr_th1, b-depth_cabr+fr_th1, 14+(1-door),
			depth_cabl+0.01, b-depth_cabr+fr_th1, 13,
			a-0.02-right_cab, b-depth_cabr+fr_th1, 12,
			a-right_cab, b-depth_cabr+fr_th1, 14,
			a-right_cab, b-rrear_cab, 14,
			lrear_cab+(fr_th1*dob_face), b-rrear_cab, 14,
			lrear_cab+(fr_th1*dob_face), b-rrear_cab-0.02, 12+dob_face,
			lrear_cab+(fr_th1*dob_face), left_cab+0.02, 12,
			lrear_cab+(fr_th1*dob_face), left_cab, -1

DEL 2

ELSE

	EXTRUDE 7, 0, 0, zzyzx-count_th-toe_h, 55,        !!! Simple cab
			lrear_cab+(fr_th1*dob_face), left_cab, 0,
			depth_cabl-fr_th1, left_cab, 0,
			depth_cabl-fr_th1, b-depth_cabr+fr_th1, 0,
			a-right_cab, b-depth_cabr+fr_th1, 0,
			a-right_cab, b-rrear_cab, 0,
			lrear_cab+(fr_th1*dob_face), b-rrear_cab, 0,
			lrear_cab+(fr_th1*dob_face), left_cab, -1

endif
DEL 1

gosub 1000

if zzyzx-count_th-toe_h<0.18 then END

if gs_detlevel_3D_m=2 then

	!******************************** SHELVES
	MATERIAL gs_cabinet_mat
	if shelf_num>0 AND A>0.04 then

		if door=1 then

			CUTPOLYA 8, 1, 0,
					depth_cabl-0.02-fr_th1, b-depth_cabr-0.01, 15,
					depth_cabl-fr_th1, b-depth_cabr-0.01, 15,
					depth_cabl-fr_th1, b-depth_cabr+fr_th1, 15,
					depth_cabl+0.01, b-depth_cabr+fr_th1, 15,
					depth_cabl+0.01, b-depth_cabr+fr_th1+0.02, 15,
					depth_cabl-0.02-fr_th1, b-depth_cabr+fr_th1+0.02, 15,
					depth_cabl-0.02-fr_th1, b-depth_cabr-0.01, 15,
					depth_cabl-0.02-fr_th1, b-depth_cabr-0.01, -1
		endif

		FOR ii=1 TO shelf_num
			ADDZ ((zzyzx-count_th-toe_h-0.02)/(shelf_num+1))*(ii)
			MATERIAL gs_ShelfMat
			PRISM_ 7,0.02,
				   lrear_cab+0.02*(1-dob_face)+(fr_th1*dob_face), left_cab+0.02, 15,
				   depth_cabl-fr_th1, left_cab+0.02, 15,
				   depth_cabl-fr_th1, b-depth_cabr+fr_th1, 15,
				   a-0.02-right_cab, b-depth_cabr+fr_th1, 15,
				   a-0.02-right_cab, b-0.02-rrear_cab, 15,
				   lrear_cab+0.02*(1-dob_face)+(fr_th1*dob_face), b-0.02-rrear_cab, 15,
				   lrear_cab+0.02*(1-dob_face)+(fr_th1*dob_face), left_cab+0.02, -1
			DEL 1
		next ii

		if door=1 then CUTEND
	endif

endif


cc=zzyzx-count_th-toe_h
ADDZ toe_h

! END PANELS
accessno=2
!! on rear panel there is no glas and grilles and knobs!!
If iEndPanelType = 1 	then gs_door_type_mr=1
If iEndPanelType = 2 	then gs_door_type_mr=2
If iEndPanelType = 4 	then gs_door_type_mr=11
If iEndPanelType = 7	then gs_door_type_mr=4
If iEndPanelType = 9	then gs_door_type_mr=6
If iEndPanelType = 99 then gs_door_type_mr=10

if lrear_panel=1 AND dob_face=0 then
	aa=(b-left_cab-rrear_cab)/2
	ADD lrear_cab, b-rrear_cab, 0
	ROTZ -90

	FOR HI=1 TO 2

	cabdoortyp_unID=unID
	CALL "fa_cabdoortyp" PARAMETERS gs_detlevel_3D_m=gs_detlevel_3D_m,
			gs_full_edit=0,
			door_w=aa, door_h=cc, gs_door_type_m=gs_door_type_mr, gs_shadow=gs_shadow,
			doorframe_w=doorframe_w_end, gs_cont_pen=gs_cont_pen,
			doorframe_mat=doorframe_mat_end, gs_knob_mat=gs_knob_mat,
			doorglas_mat=doorframe_mat_end,
			gs_knob_type_m=0,
			gs_cust_p=gs_cust_p_end,fr_th1=0.02,
			cabdoortyp_unID=cabdoortyp_unID,gs_bevel=gs_bevel,
			returned_parameters cabdoortyp_unID

	unID = cabdoortyp_unID


	ADDX aa
	next HI
	DEL 2

	DEL 2
endif

if rrear_panel=1 then
	aa=(a-right_cab-lrear_cab-(fr_th1*dob_face))/2
	ADD a-right_cab, b-rrear_cab, 0
	ROTZ 180

	FOR HI=1 TO 2

	cabdoortyp_unID=unID
	CALL "fa_cabdoortyp" PARAMETERS gs_detlevel_3D_m=gs_detlevel_3D_m,
			gs_full_edit=0,
			door_w=aa, door_h=cc, gs_door_type_m=gs_door_type_mr, gs_shadow=gs_shadow,
			doorframe_w=doorframe_w_end, gs_cont_pen=gs_cont_pen,
			doorframe_mat=doorframe_mat_end, gs_knob_mat=gs_knob_mat,
			doorglas_mat=doorframe_mat_end,
			gs_knob_type_m=0,gs_bevel=gs_bevel,
			gs_cust_p=gs_cust_p_end,fr_th1=0.02,
			cabdoortyp_unID=cabdoortyp_unID,
		returned_parameters cabdoortyp_unID

	unID = cabdoortyp_unID


	ADDX aa
	next HI
	DEL 2

	DEL 2
endif

if left_panel=1 then
	ADD lrear_cab+(fr_th1*dob_face), left_cab, 0

	cabdoortyp_unID=unID
	CALL "fa_cabdoortyp" PARAMETERS gs_detlevel_3D_m=gs_detlevel_3D_m,
			gs_full_edit=0,
			door_w=depth_cabl-(fr_th1*dob_face)-fr_th1-lrear_cab, door_h=cc,
			gs_door_type_m=gs_door_type_mr, gs_shadow=gs_shadow,
			doorframe_w=doorframe_w_end, gs_cont_pen=gs_cont_pen,
			doorframe_mat=doorframe_mat_end, gs_knob_mat=gs_knob_mat,
			doorglas_mat=doorframe_mat_end,
			gs_knob_type_m=0, gs_bevel=gs_bevel,
			gs_cust_p=gs_cust_p_end,fr_th1=0.02,
			cabdoortyp_unID=cabdoortyp_unID,
		returned_parameters cabdoortyp_unID

	unID = cabdoortyp_unID




	DEL 1
endif

if right_panel=1 then
	ADD a-right_cab, b-depth_cabr+fr_th1, 0
	ROTZ 90

	cabdoortyp_unID=unID
	CALL "fa_cabdoortyp" PARAMETERS gs_detlevel_3D_m=gs_detlevel_3D_m,
			gs_full_edit=0,
			door_w=depth_cabr-fr_th1-rrear_cab, door_h=cc,
			gs_door_type_m=gs_door_type_mr, gs_shadow=gs_shadow,
			doorframe_w=doorframe_w_end, gs_cont_pen=gs_cont_pen,
			doorframe_mat=doorframe_mat_end, gs_knob_mat=gs_knob_mat,
			doorglas_mat=doorframe_mat_end,
			gs_knob_type_m=0, gs_bevel=gs_bevel,
			gs_cust_p=gs_cust_p_end,fr_th1=0.02,
			cabdoortyp_unID=cabdoortyp_unID,
			returned_parameters cabdoortyp_unID

	unID = cabdoortyp_unID



	DEL 2
endif
DEL 1

!-------------------------------------------- DOORS
accessno = 1
if door then
	if gs_bHingedDoubleDoor then
	
	   leftDoorWidth 	= b - depth_cabr  + doorOffset/2
	   rightDoorWidth 	= a - depth_cabl  + doorOffset/2

		! --- Hinged Door Opening Side = Left
		if gs_hingedDoorSide_m = 1 then				
	
	
			leftKnob 	= 0
			rightKnob 	= gs_knob_type_m
	
			add depth_cabl - fr_th1, 0, 0
			rotz - door_ang
	
			rotz 90
			cabdoortyp_unID = unID
			!--- left side
	
			call "fa_cabdoortyp" parameters gs_detlevel_3D_m=gs_detlevel_3D_m,
					gs_full_edit				= 0, 
					door_ang					= 0,
					door_w						= leftDoorWidth, 
					door_h						= cc,
					gs_door_type_m				= gs_door_type_m, 
					gs_shadow					= gs_shadow,
					doorframe_w					= doorframe_w, 
					gs_cont_pen					= gs_cont_pen,
					vert_gnum					= vert_gnum, 
					hor_gnum					= hor_gnum,
					fr_th1						= fr_th1,
					doorframe_mat				= doorframe_mat,
					gs_knob_mat					= gs_knob_mat,
					doorglas_mat				= doorglas_mat,
					knob_size					= knob_size,
					gs_knob_type_m				= leftKnob,
					gs_resol					= gs_resol,
					gs_cust_p					= gs_cust_p,
					gs_knob_p_m					= gs_knob_p_m,
					knob_pl_x					= knob_pl_x,
					knob_pl_y					= knob_pl_y,
					cabdoortyp_unID				= cabdoortyp_unID,
					gs_bevel					= gs_bevel,
					gs_cust_knob 				= gs_cust_knob, 
					gs_customHandleLength 		= gs_customHandleLength,
					gs_customHandleHeight 		= gs_customHandleHeight, 
					gs_customHandleDepth 		= gs_customHandleDepth,
					returned_parameters cabdoortyp_unID
	
					unID = cabdoortyp_unID
			del 1
	
	
			add fr_th1 - doorOffset/2 , b - depth_cabr +  fr_th1, 0
			cabdoortyp_unID = unID
			!--- right side
			call "fa_cabdoortyp" parameters gs_detlevel_3D_m = gs_detlevel_3D_m,
					gs_full_edit				= 0, 
					door_ang					= 0,
					door_w						= rightDoorWidth, 
					door_h						= cc, 
					gs_door_type_m				= gs_door_type_m, 
					gs_shadow					= gs_shadow,
					doorframe_w					= doorframe_w, 
					gs_cont_pen					= gs_cont_pen,
					vert_gnum					= vert_gnum, 
					hor_gnum					= hor_gnum,
					fr_th1						= fr_th1,
					doorframe_mat				= doorframe_mat, 
					gs_knob_mat					= gs_knob_mat,
					doorglas_mat				= doorglas_mat,
					knob_size					= knob_size,
					gs_knob_type_m				= rightKnob,
					gs_resol					= gs_resol,
					gs_cust_p					= gs_cust_p,
					gs_knob_p_m					= gs_knob_p_m,
					knob_pl_x					= knob_pl_x,
					knob_pl_y					= knob_pl_y,
					cabdoortyp_unID				= cabdoortyp_unID,
					gs_bevel                	= gs_bevel,
					gs_cust_knob 				= gs_cust_knob,
					gs_customHandleLength 		= gs_customHandleLength,
					gs_customHandleHeight 		= gs_customHandleHeight, 
					gs_customHandleDepth 		= gs_customHandleDepth,
					returned_parameters cabdoortyp_unID
	
					unID = cabdoortyp_unID
	
			del 1
	
			del 2
		else						
		! --- Hinged Door Opening Side = Right
	
			rightKnob = 0
			leftKnob = gs_knob_type_m
	
			add a , b - depth_cabr + fr_th1, 0
			rotz door_ang
	
			add -(a - depth_cabl + fr_th1 + front_cab) ,-fr_th1 + doorOffset/2,0
			rotz 90
			mulx -1
			cabdoortyp_unID = unID
			!--- left side
			call "fa_cabdoortyp" parameters gs_detlevel_3D_m=gs_detlevel_3D_m,
					gs_full_edit				= 0, 
					door_ang					= 0,
					door_w						= leftDoorWidth, 
					door_h						= cc,
					gs_door_type_m				= gs_door_type_m, 
					gs_shadow					= gs_shadow,
					doorframe_w					= doorframe_w, 
					gs_cont_pen					= gs_cont_pen,
					vert_gnum					= vert_gnum, 
					hor_gnum					= hor_gnum,
					fr_th1						= fr_th1,
					doorframe_mat				= doorframe_mat,
					gs_knob_mat					= gs_knob_mat,
					doorglas_mat				= doorglas_mat,
					knob_size					= knob_size,
					gs_knob_type_m				= leftKnob,
					gs_resol					= gs_resol,
					gs_cust_p					= gs_cust_p,
					gs_knob_p_m					= gs_knob_p_m,
					knob_pl_x					= knob_pl_x,
					knob_pl_y					= knob_pl_y,
					cabdoortyp_unID				= cabdoortyp_unID,
					gs_bevel					= gs_bevel,
					gs_cust_knob 				= gs_cust_knob, 
					gs_customHandleLength 		= gs_customHandleLength,
					gs_customHandleHeight 		= gs_customHandleHeight, 
					gs_customHandleDepth 		= gs_customHandleDepth,
					returned_parameters cabdoortyp_unID
	
			unID = cabdoortyp_unID
			del 3
	
			add -rightDoorWidth, 0, 0
			cabdoortyp_unID = unID
			!--- right side
			call "fa_cabdoortyp" parameters gs_detlevel_3D_m = gs_detlevel_3D_m,
					gs_full_edit				= 0, 
					door_ang					= 0,
					door_w						= rightDoorWidth, 
					door_h						= cc, 
					gs_door_type_m				= gs_door_type_m, 
					gs_shadow					= gs_shadow,
					doorframe_w					= doorframe_w, 
					gs_cont_pen					= gs_cont_pen,
					vert_gnum					= vert_gnum, 
					hor_gnum					= hor_gnum,
					fr_th1						= fr_th1,
					doorframe_mat				= doorframe_mat, 
					gs_knob_mat					= gs_knob_mat,
					doorglas_mat				= doorglas_mat,
					knob_size					= knob_size,
					gs_knob_type_m				= rightKnob,
					gs_resol					= gs_resol,
					gs_cust_p					= gs_cust_p,
					gs_knob_p_m					= gs_knob_p_m,
					knob_pl_x					= knob_pl_x,
					knob_pl_y					= knob_pl_y,
					cabdoortyp_unID				= cabdoortyp_unID,gs_bevel=gs_bevel,
					gs_cust_knob 				= gs_cust_knob,
					gs_customHandleLength 		= gs_customHandleLength,
					gs_customHandleHeight 		= gs_customHandleHeight, 
					gs_customHandleDepth 		= gs_customHandleDepth,
					returned_parameters cabdoortyp_unID

					unID = cabdoortyp_unID
	
			del 1
	
			del 2
		endif

	else
		aa = b - depth_cabr - left_cab - 0.01 +	doorOffset/2
		add depth_cabl - fr_th1, left_cab, toe_h
		rotz 90
		addx aa
		mulx -1
	
		cabdoortyp_unID = unID
		call "fa_cabdoortyp" parameters gs_detlevel_3D_m = gs_detlevel_3D_m,
				gs_full_edit 			= gs_full_edit,
				door_ang 				= door_ang,
				door_w 					= aa,
				door_h 					= cc,
				gs_door_type_m 			= gs_door_type_m, 
				gs_shadow 				= gs_shadow,
				doorframe_w				= doorframe_w, 
				gs_cont_pen				= gs_cont_pen,
				vert_gnum				= vert_gnum, 
				hor_gnum				= hor_gnum,
				fr_th1					= fr_th1,
				doorframe_mat			= doorframe_mat,
				doorglas_mat			= doorglas_mat, 
				gs_resol				= gs_resol,
				gs_cust_p				= gs_cust_p,
				gs_bevel				= gs_bevel,
				gs_knob_type_m			= gs_knob_type_m,
				gs_knob_p_m				= gs_knob_p_m,
				knob_size				= knob_size,
				knob_pl_x				= knob_pl_x,
				knob_pl_y				= knob_pl_y,
				gs_knob_mat				= gs_knob_mat,
				cabdoortyp_unID			= cabdoortyp_unID,
				gs_cust_knob 			= gs_cust_knob, 
				gs_customHandleLength 	= gs_customHandleLength,
				gs_customHandleHeight 	= gs_customHandleHeight, 
				gs_customHandleDepth 	= gs_customHandleDepth,
				returned_parameters cabdoortyp_unID
	
		unID = cabdoortyp_unID
	
		del 1
		del 3
	
		aa = a - depth_cabl - right_cab - 0.01 + doorOffset/2
		add depth_cabl - fr_th1 + 0.01 - doorOffset/2, b - depth_cabr + fr_th1, toe_h
		addx fr_th1
	
		cabdoortyp_unID = unID
		call "fa_cabdoortyp" parameters gs_detlevel_3D_m = gs_detlevel_3D_m,
				gs_full_edit			= gs_full_edit,
				door_ang				= door_ang,
				door_w					= aa, 
				door_h					= cc, 
				gs_door_type_m			= gs_door_type_m, 
				gs_shadow				= gs_shadow,
				doorframe_w				= doorframe_w, 
				gs_cont_pen				= gs_cont_pen,
				vert_gnum				= vert_gnum, 
				hor_gnum				= hor_gnum,
				fr_th1					= fr_th1,
				doorframe_mat			= doorframe_mat,
				doorglas_mat			= doorglas_mat, 
				gs_resol				= gs_resol,
				gs_cust_p				= gs_cust_p,
				gs_bevel				= gs_bevel,
				gs_knob_type_m			= gs_knob_type_m,
				gs_knob_p_m				= gs_knob_p_m,
				knob_size				= knob_size,
				knob_pl_x				= knob_pl_x,
				knob_pl_y				= knob_pl_y,
				gs_knob_mat				= gs_knob_mat,
				cabdoortyp_unID			= cabdoortyp_unID,
				gs_cust_knob 			= gs_cust_knob, 
				gs_customHandleLength 	= gs_customHandleLength,
				gs_customHandleHeight 	= gs_customHandleHeight, 
				gs_customHandleDepth 	= gs_customHandleDepth,
				returned_parameters cabdoortyp_unID
	
		unID = cabdoortyp_unID
	
		del 2
	endif
endif

if dob_face=1 and door=1 then
	aa=b-left_cab-rrear_cab
	ADD lrear_cab+fr_th1, b-rrear_cab, toe_h
	ROTZ -90

	mulx -1
	addx -aa
	
	cabdoortyp_unID=unID
	CALL "fa_cabdoortyp" PARAMETERS gs_detlevel_3D_m=gs_detlevel_3D_m,
			gs_full_edit=gs_full_edit, door_ang=door_ang,
			door_w=aa, door_h=cc, gs_door_type_m=gs_door_type_m, gs_shadow=gs_shadow,
			doorframe_w=doorframe_w, gs_cont_pen=gs_cont_pen,
			vert_gnum=vert_gnum, hor_gnum=hor_gnum,fr_th1=fr_th1,
			doorframe_mat=doorframe_mat,
			doorglas_mat=doorglas_mat, gs_resol=gs_resol,
			gs_cust_p=gs_cust_p,gs_bevel=gs_bevel,
			gs_knob_type_m=gs_knob_type_m,gs_knob_p_m=gs_knob_p_m,knob_size=knob_size,
			knob_pl_x=knob_pl_x,knob_pl_y=knob_pl_y,
			gs_knob_mat=gs_knob_mat,
			cabdoortyp_unID=cabdoortyp_unID,
			gs_cust_knob = gs_cust_knob, gs_customHandleLength = gs_customHandleLength,
			gs_customHandleHeight = gs_customHandleHeight, gs_customHandleDepth = gs_customHandleDepth,
		returned_parameters cabdoortyp_unID

	unID = cabdoortyp_unID
	
	DEL 2

	DEL 2
endif

! --- End of door --------------------------------------------------------------

DEL 3

END

1000:
roty 90
gosub 5000
del 1
return

2000:
gosub 5000
return

5000:

vert 0, 0, 0
vert 1, 0, 0
vert 0, 1, 0
vert 0, 0, 1

coor 2, -1, -2, -3, -4


base

body -1

return
