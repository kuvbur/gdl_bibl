
if bFeeder then
	add2 -feederLength, 0
endif

hotspot2 0, 0
hotspot2 A, 0
hotspot2 A, B
hotspot2 0, B
hotspot2 A/2, B/2

if bFeeder then
	del 1
endif

pen gs_cont_pen
fill gs_fill_type

unID = 1
poly2_b 5, 1+2+64,gs_fill_pen, gs_back_pen,
		0,		0,		1,
		mainLength,	0,		1,
		mainLength,	B,	1,
		0,		B,	1,
		0,		0,		1

hotspot2 0, 			0, unID, copier_width, 1+256 	:unID = unID + 1
hotspot2 -0.001, 		0, unID, copier_width, 3+128 	:unID = unID + 1
hotspot2 copier_width, 	0, unID, copier_width, 2 		:unID = unID + 1

hotspot2 0, 			copier_depth, unID, copier_width, 1+256 	:unID = unID + 1
hotspot2 -0.001, 		copier_depth, unID, copier_width, 3+128 	:unID = unID + 1
hotspot2 copier_width, 	copier_depth, unID, copier_width, 2 		:unID = unID + 1

hotspot2 0, 0, 				unID, copier_depth, 1+256	:unID = unID + 1
hotspot2 0, -0.001, 		unID, copier_depth, 3+128 	:unID = unID + 1
hotspot2 0, copier_depth, 	unID, copier_depth, 2 		:unID = unID + 1

hotspot2 copier_width, 0, 				unID, copier_depth, 1+256	:unID = unID + 1
hotspot2 copier_width, -0.001, 			unID, copier_depth, 3+128 	:unID = unID + 1
hotspot2 copier_width, copier_depth, 	unID, copier_depth, 2 		:unID = unID + 1

if bFeeder then
	poly2_b 5, 1+2+64,gs_fill_pen, gs_back_pen,
			0,		0,		1,
			-feederLength,	0,		1,
			-feederLength ,	B,	1,
			0,		B,	1,
			0,		0,		1

	hotspot2 -feederLength,	0, unID :unID = unID + 1
	hotspot2 -feederLength,	B, unID :unID = unID + 1
endif

if bFinisher1 then
	add2  mainLength, 0
	poly2_b 5, 1+2+64, gs_fill_pen, gs_back_pen,
			0,		0,		1,
			finisher1Length,	0,		1,
			finisher1Length,	B,	1,
			0,		B,	1,
			0,		0,		1

	hotspot2 finisher1Length,	0, unID :unID = unID + 1
	hotspot2 finisher1Length,	B, unID :unID = unID + 1

	if bFinisher2 then
		add2  finisher1Length, 0
		poly2_b 5, 1+2+64, gs_fill_pen, gs_back_pen,
				0,		0,		1,
				finisher2Length,	0,		1,
				finisher2Length,	B,	1,
				0,		B,	1,
				0,		0,		1

		hotspot2 finisher2Length,	0, unID :unID = unID + 1
		hotspot2 finisher2Length,	B, unID :unID = unID + 1
		del 1
	endif
	del 1
endif

! Minimal space
drawindex 10
if bFeeder then
	add2 -feederLength, 0
endif

call "fa_minimalspace" parameters all MSType = 4,
								unID = 3000,
								A = copier_width + finisher1Length*bFinisher1 + finisher2Length*(bFinisher2 and bFinisher1)+ feederLength*bFeeder
if bFeeder then
	del 1
endif

