
unID = 1
pen gs_cont_pen
fill gs_fill_type


! ======================================================================
! Hotspots
! ======================================================================
hotline2 0,B,A,B
if (oldHotspot) then
	hotspot2 0,b
	hotspot2 a/2,b
	hotspot2 a/2,b/2
endif

CALL "Resize_A_B_ZZYZX" Parameters ALL

! --- Module Width editing ------------------------------------------------------
unID = 100
tempDist = 0
for i = 1 to nScreen-1
	hotspot2 tempDist + modulWidth,	B/2, unID	: unID = unID + 1
	tempDist = tempDist + modulWidth
next i


! ======================================================================
! Drawing Screen
! ======================================================================
drawindex 30
tempDist = 0
for i = 1 to nScreen
	poly2_b 5, 1+2+64,gs_fill_pen,gs_back_pen,
		tempDist, 0, 1,
		tempDist+modulWidth, 0, 1,
		tempDist+modulWidth, B, 1,
		tempDist, B, 1,
		tempDist, 0, -1
	tempDist = tempDist + modulWidth
next i


! ======================================================================
! Joint
! ======================================================================
if bJointL then
	IF angleLeft>180 THEN
		tempxL2 = 0
		tempxL1 = B*tan(90-angleLeft/2)
	ELSE
		tempxL2 = B*tan(90-angleLeft/2)
		tempxL1 = 0
	ENDIF

	if abs(180-angleLeft)>EPS then
		poly2_b 5, 1+2+64,gs_fill_pen,gs_back_pen,
			-tempxL2, 0, 1,
			tempxL1, B, 1,
			0, B, 1,
			0, 0, 1,
			-tempxL2, 0, -1
	endif

!	hotspot2 0,B,unID,angleLeft,6  										: unID=unID+1
!	hotspot2 1,B,unID,angleLeft,4+128  									: unID=unID+1
!	hotspot2 cos(angleLeft)*5*B, B+sin(angleLeft)*5*B,unID,angleLeft,5 	: unID=unID+1

	rr = B/sin(angleLeftEnd)
	if angleLeft>180 then
		hotspot2 0, 0, unID, angleLeftEnd, 6: unID=unID+1
		hotspot2 B, 0, unID, angleLeftEnd, 4+128: unID=unID+1
		hotspot2 cos(angleLeftEnd)*rr, sin(angleLeftEnd)*rr, unID, angleLeftEnd, 5: unID=unID+1
	else
		hotspot2 0, B, unID, angleLeftEnd, 6: unID=unID+1
		hotspot2 -B, B, unID, angleLeftEnd, 4+128: unID=unID+1
		hotspot2 -cos(angleLeftEnd)*rr, B-sin(angleLeftEnd)*rr, unID, angleLeftEnd, 5: unID=unID+1
	endif
endif

if bJointR then
	IF angleRight>180 THEN
		tempxL2 = 0
		tempxL1 = B*tan(90-angleRight/2)
	ELSE
		tempxL2 = B*tan(90-angleRight/2)
		tempxL1 = 0
	ENDIF

	if abs(180-angleRight)>EPS then
		poly2_b 5, 1+2+64,gs_fill_pen,gs_back_pen,
			A, 0, 1,
			A, B, 1,
			A-tempxL1, B, 1,
			A+tempxL2, 0, 1,
			A, 0, -1
	endif

!	hotspot2 A,B,unID, angleRight,6+512  										: unID=unID+1
!	hotspot2 A-1, B,unID, angleRight,4+128  									: unID=unID+1
!	hotspot2 A-cos(angleRight)*5*B,B+sin(angleRight)*5*B,unID, angleRight,5 	: unID=unID+1

	rr = B/sin(angleRightEnd)
	if angleRight>180 then
		hotspot2 A, 0, unID, angleRightEnd, 6+512: unID=unID+1
		hotspot2 A-B, 0, unID, angleRightEnd, 4+128: unID=unID+1
		hotspot2 A-cos(angleRightEnd)*rr, sin(angleRightEnd)*rr, unID, angleRightEnd, 5: unID=unID+1
	else
		hotspot2 A, B, unID, angleRightEnd, 6+512: unID=unID+1
		hotspot2 A+B, B, unID, angleRightEnd, 4+128: unID=unID+1
		hotspot2 A+cos(angleRightEnd)*rr, B-sin(angleRightEnd)*rr, unID, angleRightEnd, 5: unID=unID+1
	endif
endif


! ======================================================================
! Toe
! ======================================================================
if bBase and (iToe < 6) and (gs_detlevel_2D_m = 2) then
	drawindex 10
	if iToe <> 5 then		! Solid Foot
		if iToe = 1 then	! Disk
			add2 0, B/2
			tempDist = 0
			for f = 1 to nScreen
				add2 tempDist + legWidth_02*2, 0
				gosub "Toe"
				del 1
				add2 tempDist + modulWidth - legWidth_02*2, 0
				gosub "Toe"
				del 1
				tempDist = tempDist + modulWidth
			next f
			del 1
		else
			add2 0, B/2
			tempDist = 0
			iLegNum = 0
			maxLeg = int(nScreen/2)
			for f = 1 to nScreen
				if f = 1 then
					iLegNum = iLegNum+1
					add2 legWidth_02, 0
					if not(bJointL) or (bJointL and bToeL) then
						if bJointL then
							hotspot2  0,			0, unID, leftToePos, 1 + 128	: unID = unID + 1
							hotspot2  leftToePos,	0, unID, leftToePos, 2			: unID = unID + 1
							hotspot2 -1,			0, unID, leftToePos, 3			: unID = unID + 1

							add2 leftToePos, 0

							if iToe <> 3 then
							rot2 90
								hotspot2 legLength_02,						0,									unID, leftToeAngle, 4 + 128 :	unID = unID + 1
								hotspot2 0,									0,									unID, leftToeAngle, 6 :			unID = unID + 1
								hotspot2 legLength_02 * cos(leftToeAngle),	legLength_02 * sin(leftToeAngle),	unID, leftToeAngle, 5 :			unID = unID + 1
								rot2 180
								hotspot2 legLength_02,						0,									unID, leftToeAngle, 4 + 128 :	unID = unID + 1
								hotspot2 0,									0,									unID, leftToeAngle, 6 :			unID = unID + 1
								hotspot2 legLength_02 * cos(leftToeAngle),	legLength_02 * sin(leftToeAngle),	unID, leftToeAngle, 5 :			unID = unID + 1
								del 2
							endif

							rot2 leftToeAngle
						endif
						gosub "Toe"
						if bJointL then del 2
					endif
					del 1
				else
					if not(fra(f/2)) and iLegNum<maxLeg then
						iLegNum = iLegNum+1
						add2 tempDist + modulWidth, 0
						gosub "Toe"
						del 1
					endif
				endif
				tempDist = tempDist + modulWidth
			next f
			add2 A-legWidth_02, 0
			if not(bJointR) or (bJointR and bToeR) then
				if bJointR then
					hotspot2  0,			0, unID, rightToePos, 1 +128	: unID = unID + 1
					hotspot2  rightToePos,	0, unID, rightToePos, 2			: unID = unID + 1
					hotspot2 -1,			0, unID, rightToePos, 3			: unID = unID + 1

					add2 rightToePos, 0

					if iToe <> 3 then
						rot2 90
						hotspot2 legLength_02,						0,									unID,rightToeAngle, 4 + 128 :	unID = unID + 1
						hotspot2 0,									0,									unID, rightToeAngle, 6 :		unID = unID + 1
						hotspot2 legLength_02 * cos(rightToeAngle),	legLength_02 * sin(rightToeAngle),	unID, rightToeAngle, 5 :		unID = unID + 1
						rot2 180
						hotspot2 legLength_02,						0,									unID, rightToeAngle, 4 + 128 :	unID = unID + 1
						hotspot2 0,									0,									unID, rightToeAngle, 6 :		unID = unID + 1
						hotspot2 legLength_02 * cos(rightToeAngle),	legLength_02 * sin(rightToeAngle),	unID, rightToeAngle, 5 :		unID = unID + 1
						del 2
					endif

					rot2 rightToeAngle

				endif

				gosub "Toe"

				if bJointR then del 2
			endif
			del 2
		endif
	endif
endif

END

! ======================================================================
! SubRoutines
! ======================================================================
! --- Toe ------
"Toe":
	if iToe = 1	then		! Disk
		poly2_b 2, 1+2+64,gs_fill_pen,gs_back_pen,
			0, 0, 901,
			legWidth_01, 360, 4001
	endif

	if iToe = 2	or iToe = 4 then		! Laminate Foot, Wheel
		poly2_b 5, 1+2+64,gs_fill_pen,gs_back_pen,
			-legWidth_02,  legLength_02, 1,
			 legWidth_02,  legLength_02, 1,
			 legWidth_02, -legLength_02, 1,
			-legWidth_02, -legLength_02, 1,
			-legWidth_02,  legLength_02, -1
	endif

	if iToe = 3	then		! Oval Foot
		poly2_b 2, 1+2+64,gs_fill_pen,gs_back_pen,
			0, 0, 901,
			legLength_02, 360, 4001
	endif
return

