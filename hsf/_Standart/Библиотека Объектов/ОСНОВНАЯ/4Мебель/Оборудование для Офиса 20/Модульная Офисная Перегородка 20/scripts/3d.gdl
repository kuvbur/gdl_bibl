
if not(gs_shadow) then shadow off
if gs_detlevel_3D_m = 2 then	! Detailed
	resol gs_resol
	tempFrameWidth = bFrame*frameWidth
	tempFramePlus  = 0
else
	if gs_detlevel_3D_m = 1 then ! Simple
		resol 3
		tempFrameWidth = 0
		tempFramePlus  = bFrame*frameWidth/2
	else
		END	! Off
	endif
endif


!-----Definitions-----
pen gs_cont_pen
unID = 1

	define material	"builtInMatBlackPlastic" 0,
	  0.333333,   0.313725,   0.294118,
	 0.15,  0.15,  0.45,     0,      5,     0,
	  0.784314,   0.784314,   0.784314,
	         0,          0,          0,     0

! ======================================================================
! Hotspots
! ======================================================================
CALL "Resize_A_B_ZZYZX" Parameters ALL
! --- Module Width ------------------------------------------------------
tempDist = 0
for i = 1 to nScreen-1
	hotspot tempDist + modulWidth,	B/2, ZZYZX, unID	: unID = unID + 1
	tempDist = tempDist + modulWidth
next i

! --- Module Height editing------------------------------------------------------
addz _actToeHeight
tempDist = 0
for i = 1 to nScreen
	hotspot tempDist+modulWidth/2,	0, 0,    unID, screenHeight, 1 + 128 						: unID = unID + 1
	hotspot tempDist+modulWidth/2,	0, -1,   unID, screenHeight, 3								: unID = unID + 1
	hotspot tempDist+modulWidth/2,	0, screenHeight, unID, screenHeight, 2 						: unID = unID + 1
	tempDist = tempDist + modulWidth
next i

if bUniform then
	tempDist = 0
	for i = 1 to nScreen
		if nModul > 1 then hotspot tempDist+modulWidth/2, 0, bFrame*frameWidth/2+moduleHeight1,    unID												: unID = unID + 1
		if nModul > 2 then hotspot tempDist+modulWidth/2, 0, bFrame*frameWidth/2+moduleHeight1+moduleHeight2,    unID								: unID = unID + 1
		if nModul > 3 then hotspot tempDist+modulWidth/2, 0, bFrame*frameWidth/2+moduleHeight1+moduleHeight2+moduleHeight3,    unID				: unID = unID + 1
		tempDist = tempDist + modulWidth
	next i
else
	tempDist = 0
	for i = 1 to nScreen
		if nModul > 1 then
			hotspot tempDist+modulWidth/2,	0, bFrame*frameWidth/2+moduleHeight1+moduleHeight2,    unID, moduleHeight2, 1 + 128 					: unID = unID + 1
			hotspot tempDist+modulWidth/2,	0, bFrame*frameWidth/2+moduleHeight1+moduleHeight2+1,  unID, moduleHeight2, 3							: unID = unID + 1
			hotspot tempDist+modulWidth/2,	0, bFrame*frameWidth/2+moduleHeight1, unID, moduleHeight2, 2 											: unID = unID + 1
		endif

		if nModul > 2 then
			hotspot tempDist+modulWidth/2,	0, bFrame*frameWidth/2+moduleHeight1+moduleHeight2+moduleHeight3,    unID, moduleHeight3, 1 + 128 			: unID = unID + 1
			hotspot tempDist+modulWidth/2,	0, bFrame*frameWidth/2+moduleHeight1+moduleHeight2+moduleHeight3+1,  unID, moduleHeight3, 3				: unID = unID + 1
			hotspot tempDist+modulWidth/2,	0, bFrame*frameWidth/2+moduleHeight1+moduleHeight2, unID, moduleHeight3, 2 								: unID = unID + 1
		endif

		if nModul > 3 then
			hotspot tempDist+modulWidth/2,	0, bFrame*frameWidth/2+moduleHeight1+moduleHeight2+moduleHeight3+moduleHeight4,    unID, moduleHeight4, 1 + 128 	: unID = unID + 1
			hotspot tempDist+modulWidth/2,	0, bFrame*frameWidth/2+moduleHeight1+moduleHeight2+moduleHeight3+moduleHeight4+1,  unID, moduleHeight4, 3		: unID = unID + 1
			hotspot tempDist+modulWidth/2,	0, bFrame*frameWidth/2+moduleHeight1+moduleHeight2+moduleHeight3, unID, moduleHeight4, 2 				: unID = unID + 1
		endif
		tempDist = tempDist + modulWidth
	next i
endif
del 1

! ======================================================================
! Panels
! ======================================================================
addz _actToeHeight
tempDist = 0
body -1
for i = 1 to nScreen
	startX = tempFrameWidth + tempDist
	panelLength = modulWidth - 2*tempFrameWidth
	tempHeight = 0
	for f = 1 to nModul
		if f = 1 then
			tempHeight = tempFrameWidth
			panelHeight = moduleHeight1 - tempFrameWidth + tempFramePlus
			defMat = moduleMat1
		endif
		if f = 2 then
			tempHeight = tempFrameWidth + moduleHeight1 + tempFramePlus
			panelHeight = moduleHeight2 - tempFrameWidth
			if f = nModul then panelHeight = panelHeight + tempFramePlus
			defMat = moduleMat2
		endif
		if f = 3 then
			tempHeight = tempFrameWidth + moduleHeight1 + moduleHeight2 + tempFramePlus
			panelHeight = moduleHeight3 - tempFrameWidth
			if f = nModul then panelHeight = panelHeight + tempFramePlus
			defMat = moduleMat3
		endif
		if f = 4 then
			tempHeight = tempFrameWidth + moduleHeight1 + moduleHeight2 + moduleHeight3 + tempFramePlus
			panelHeight = moduleHeight4 - tempFrameWidth + tempFramePlus
			defMat = moduleMat4
		endif
		gosub "Panels"
	next f
	tempDist = tempDist + modulWidth
next i
del 1


! ======================================================================
! Frame
! ======================================================================
if bFrame and frameWidth> EPS and gs_detlevel_3D_m = 2 then
	put 0, 0, 0, 15, edgeMat
	put A, 0, 0, 15, edgeMat
	put A, screenHeight, 0, 15, edgeMat
	put 0, screenHeight, 0, 15, edgeMat
	put 0, 0, 0, -1, edgeMat
	tempDist = 0
	for i = 1 to nScreen
		startX = bFrame*frameWidth + tempDist
		panelLength = modulWidth - 2*bFrame*frameWidth
		tempHeight = 0
		for f = 1 to nModul
			if f = 1 then
				tempHeight = tempFrameWidth
				panelHeight = moduleHeight1 - tempFrameWidth
			endif
			if f = 2 then
				tempHeight = tempFrameWidth + moduleHeight1
				panelHeight = moduleHeight2 - tempFrameWidth
			endif
			if f = 3 then
				tempHeight = tempFrameWidth + moduleHeight1 + moduleHeight2
				panelHeight = moduleHeight3 - tempFrameWidth
			endif
			if f = 4 then
				tempHeight = tempFrameWidth + moduleHeight1+moduleHeight2+moduleHeight3
				panelHeight = moduleHeight4 - tempFrameWidth
			endif
			gosub "Frame"
		next f
		tempDist = tempDist + modulWidth
	next i

	rotx 90
	addy _actToeHeight
	addZ -B
	cprism_{2} fmat, fmat, edgeMat,
		NSP/5, B,
		get(NSP)
	body -1
	del 3
endif


! ======================================================================
! Joint
! ======================================================================
if bJointL then
	if angleLeft>180 then
		tempxL2 = 0
		tempxL1 = B*tan(90-angleLeft/2)
	else
		tempxL2 = B*tan(90-angleLeft/2)
		tempxL1 = 0
	endif

	if abs(180-angleLeft)>EPS then
		addz _actToeHeight
		cprism_{2} edgeMat, edgeMat, fmat,
			4, screenHeight,
			-tempxL2, 0, 0, 15, edgeMat,
			tempxL1, B, 0, 15, fmat,
			0, B, 0, 15, fmat,
			0, 0, 0, 15, fmat
		del 1

		if iToe = 5 and gs_detlevel_3D_m = 2 then
		cprism_ toe_mat, toe_mat, toe_mat,
			4, _actToeHeight,
			-tempxL2, 0, 15,
			tempxL1, B, 15,
			0, B, 15,
			0, 0, 15
		endif
	endif

!	hotspot 0, B, 0, unID, angleLeft, 6  										: unID=unID+1
!	hotspot 1, B, 0, unID, angleLeft, 4+128  									: unID=unID+1
!	hotspot cos(angleLeft)*5*B, B+sin(angleLeft)*5*B, 0, unID,angleLeft,5 		: unID=unID+1

!	hotspot 0, B, ZZYZX, unID, angleLeft, 6  									: unID=unID+1
!	hotspot 1, B, ZZYZX, unID, angleLeft, 4+128  								: unID=unID+1
!	hotspot cos(angleLeft)*5*B, B+sin(angleLeft)*5*B, ZZYZX, unID,angleLeft,5 	: unID=unID+1

	rr = B/sin(angleLeftEnd)
	if angleLeft>180 then
		hotspot 0, 0, 0, unID, angleLeftEnd, 6: unID=unID+1
		hotspot B, 0, 0, unID, angleLeftEnd, 4+128: unID=unID+1
		hotspot cos(angleLeftEnd)*rr, sin(angleLeftEnd)*rr, 0, unID, angleLeftEnd, 5: unID=unID+1

		hotspot 0, 0, ZZYZX, unID, angleLeftEnd, 6: unID=unID+1
		hotspot B, 0, ZZYZX, unID, angleLeftEnd, 4+128: unID=unID+1
		hotspot cos(angleLeftEnd)*rr, sin(angleLeftEnd)*rr, ZZYZX, unID, angleLeftEnd, 5: unID=unID+1
	else
		hotspot 0, B, 0, unID, angleLeftEnd, 6: unID=unID+1
		hotspot -B, B, 0, unID, angleLeftEnd, 4+128: unID=unID+1
		hotspot -cos(angleLeftEnd)*rr, B-sin(angleLeftEnd)*rr, 0, unID, angleLeftEnd, 5: unID=unID+1

		hotspot 0, B, ZZYZX, unID, angleLeftEnd, 6: unID=unID+1
		hotspot -B, B, ZZYZX, unID, angleLeftEnd, 4+128: unID=unID+1
		hotspot -cos(angleLeftEnd)*rr, B-sin(angleLeftEnd)*rr, ZZYZX, unID, angleLeftEnd, 5: unID=unID+1
	endif
endif

if bJointR then
	if angleRight>180 then
		tempxL2 = 0
		tempxL1 = B*tan(90-angleRight/2)
	else
		tempxL2 = B*tan(90-angleRight/2)
		tempxL1 = 0
	endif

	if abs(180-angleRight)>EPS then
		addz _actToeHeight
		cprism_{2} edgeMat, edgeMat, fmat,
			4, screenHeight,
			A, 0, 0, 15, fmat,
			A, B, 0, 15, fmat,
			A-tempxL1, B, 0, 15, edgeMat,
			A+tempxL2, 0, 0, 15, fmat
		del 1

		if iToe = 5 and gs_detlevel_3D_m = 2 then
		cprism_ toe_mat, toe_mat, toe_mat,
			4, _actToeHeight,
			A, 0, 15,
			A, B, 15,
			A-tempxL1, B, 15,
			A+tempxL2, 0, 15
		endif
	endif

!	hotspot A, B, 0, unID, angleRight, 6+512  											: unID=unID+1
!	hotspot A-1, B, 0, unID, angleRight, 4+128  										: unID=unID+1
!	hotspot A-cos(angleRight)*5*B, B+sin(angleRight)*5*B, 0, unID, angleRight, 5 		: unID=unID+1

!	hotspot A, B, ZZYZX, unID, angleRight, 6+512  										: unID=unID+1
!	hotspot A-1, B, ZZYZX, unID, angleRight, 4+128  									: unID=unID+1
!	hotspot A-cos(angleRight)*5*B, B+sin(angleRight)*5*B, ZZYZX, unID, angleRight, 5 	: unID=unID+1

	rr = B/sin(angleRightEnd)
	if angleRight>180 then
		hotspot A, 0, 0, unID, angleRightEnd, 6+512: unID=unID+1
		hotspot A-B, 0, 0, unID, angleRightEnd, 4+128: unID=unID+1
		hotspot A-cos(angleRightEnd)*rr, sin(angleRightEnd)*rr, 0, unID, angleRightEnd, 5: unID=unID+1

		hotspot A, 0, ZZYZX, unID, angleRightEnd, 6+512: unID=unID+1
		hotspot A-B, 0, ZZYZX, unID, angleRightEnd, 4+128: unID=unID+1
		hotspot A-cos(angleRightEnd)*rr, sin(angleRightEnd)*rr, ZZYZX, unID, angleRightEnd, 5: unID=unID+1
	else
		hotspot A, B, 0, unID, angleRightEnd, 6+512: unID=unID+1
		hotspot A+B, B, 0, unID, angleRightEnd, 4+128: unID=unID+1
		hotspot A+cos(angleRightEnd)*rr, B-sin(angleRightEnd)*rr, 0, unID, angleRightEnd, 5: unID=unID+1

		hotspot A, B, ZZYZX, unID, angleRightEnd, 6+512: unID=unID+1
		hotspot A+B, B, ZZYZX, unID, angleRightEnd, 4+128: unID=unID+1
		hotspot A+cos(angleRightEnd)*rr, B-sin(angleRightEnd)*rr, ZZYZX, unID, angleRightEnd, 5: unID=unID+1
	endif
endif


! ======================================================================
! Toe
! ======================================================================
if bBase and (iToe < 6) and (gs_detlevel_3D_m = 2) then
	if iToe = 5 then		! Solid Foot
		tempDist = 0
		for i = 1 to nScreen
			cprism_ toe_mat, toe_mat, toe_mat,
				4, _actToeHeight,
				tempDist, 0, 15,
				tempDist+modulWidth, 0, 15,
				tempDist+modulWidth, B, 15,
				tempDist, B, 15
			tempDist = tempDist + modulWidth
		next i
	else
		if iToe = 1 then	! Disk
			addy B/2
			tempDist = 0
			for f = 1 to nScreen
				addx tempDist + legWidth_02*2
				gosub "Toe"
				del 1
				addx tempDist + modulWidth - legWidth_02*2
				gosub "Toe"
				del 1
				tempDist = tempDist + modulWidth
			next f
			del 1
		else
			addy B/2
			tempDist = 0
			iLegNum = 0
			maxLeg = int(nScreen/2)
			for f = 1 to nScreen
				if f = 1 then
					iLegNum = iLegNum+1
					addx legWidth_02
					if not(bJointL) or (bJointL and bToeL) then
						if bJointL then
							hotspot  0,				0, _actToeHeight, unID, leftToePos, 1 + 128	: unID = unID + 1
							hotspot  leftToePos,	0, _actToeHeight, unID, leftToePos, 2		: unID = unID + 1
							hotspot -1,				0, _actToeHeight, unID, leftToePos, 3		: unID = unID + 1

							addx leftToePos

							if iToe <> 3 then
								rotz 90
								hotspot legLength_02,						0,									0, unID, leftToeAngle, 4 + 128 : unID = unID + 1
								hotspot 0,									0,									0, unID, leftToeAngle, 6 : unID = unID + 1
								hotspot legLength_02 * cos(leftToeAngle),	legLength_02 * sin(leftToeAngle),	0, unID, leftToeAngle, 5 : unID = unID + 1
								hotspot 0,									0,									1, unID, leftToeAngle, 7 : unID = unID + 1

								rotz 180
								hotspot legLength_02,						0,									0, unID, leftToeAngle, 4 + 128 : unID = unID + 1
								hotspot 0,									0,									0, unID, leftToeAngle, 6 : unID = unID + 1
								hotspot legLength_02 * cos(leftToeAngle),	legLength_02 * sin(leftToeAngle),	0, unID, leftToeAngle, 5 : unID = unID + 1
								hotspot 0,									0,									1, unID, leftToeAngle, 7 : unID = unID + 1
								del 2
							endif

							rotz leftToeAngle
						endif

						gosub "Toe"

						if bJointL then del 1
					endif
					del 1
				else
					if not(fra(f/2)) and iLegNum<maxLeg then
						iLegNum = iLegNum+1
						addx tempDist + modulWidth
						gosub "Toe"
						del 1
					endif
				endif
				tempDist = tempDist + modulWidth
			next f
			addx A-legWidth_02
			if not(bJointR) or (bJointR and bToeR) then
				if bJointR then
					hotspot  0,				0, _actToeHeight, unID, rightToePos, 1 +128	: unID = unID + 1
					hotspot  rightToePos,	0, _actToeHeight, unID, rightToePos, 2			: unID = unID + 1
					hotspot -1,				0, _actToeHeight, unID, rightToePos, 3			: unID = unID + 1

					addx rightToePos

					if iToe <> 3 then
						rotz 90
						hotspot legLength_02,						0,									0, unID, rightToeAngle, 4 + 128 : unID = unID + 1
						hotspot 0,									0,									0, unID, rightToeAngle, 6 : unID = unID + 1
						hotspot legLength_02 * cos(rightToeAngle),	legLength_02 * sin(rightToeAngle),	0, unID, rightToeAngle, 5 : unID = unID + 1
						hotspot 0,									0,									1, unID, rightToeAngle, 7 : unID = unID + 1

						rotz 180
						hotspot legLength_02,						0,									0, unID, rightToeAngle, 4 + 128 : unID = unID + 1
						hotspot 0,									0,									0, unID, rightToeAngle, 6 : unID = unID + 1
						hotspot legLength_02 * cos(rightToeAngle),	legLength_02 * sin(rightToeAngle),	0, unID, rightToeAngle, 5 : unID = unID + 1
						hotspot 0,									0,									1, unID, rightToeAngle, 7 : unID = unID + 1
						del 2
					endif

					rotz rightToeAngle
				endif

				gosub "Toe"

				if bJointR then del 2
			endif
			del 2
		endif
	endif
endif


END

! ======================================================================
! SubRoutines
! ======================================================================
! --- Panels ------
"Panels":
	addz tempHeight
	cprism_ defMat, defMat, defMat,
		4, panelHeight,
		startX, 0, 15,
		startx+panelLength, 0, 15,
		startx+panelLength, B, 15,
		startx, B, 15
	body -1

	del 1
return

! --- Frame ------
"Frame":
	put	startX,  tempHeight, 0, 15, fmat
	put	startx+panelLength,  tempHeight, 0, 15, fmat
	put	startx+panelLength, tempHeight+panelHeight, 0, 15, fmat
	put	startx, tempHeight+panelHeight, 0, 15, fmat
	put	startX,  tempHeight, 0, -1, fmat
return


! --- Toe ------
"Toe":
	material toe_mat
	if iToe = 1	then		! Disk
		material "builtInMatBlackPlastic"
		cylind _actToeHeight, legWidth_01
	endif

	if iToe = 2	then		! Laminate Foot
		prism_ 4, 0.005,
			-legWidth_02,  legLength_02, 15,
			 legWidth_02,  legLength_02, 15,
			 legWidth_02, -legLength_02, 15,
			-legWidth_02, -legLength_02, 15
		addz 0.005
		cylind _actToeHeight-0.005, legJoint
		del 1
	endif

	if iToe = 3	then		! Oval Foot
		cylind 0.005, legLength_02
		addz 0.005
		cylind _actToeHeight-0.005, legJoint
		del 1
	endif

	if iToe = 4	then		! Wheel
		addz 0.055
		prism_ 4, 0.005,
			-legWidth_02,  legLength_02, 15,
			 legWidth_02,  legLength_02, 15,
			 legWidth_02, -legLength_02, 15,
			-legWidth_02, -legLength_02, 15
		addz 0.005
		cylind _actToeHeight-0.06, legJoint
		del 2
		rollerR = 0.025
		material wheelmat
		for i=1 to 2
			addy legLength_02 - legWidth_02 - (legLength_02-legWidth_02)*(i-1)*2
			rotz (i=2)*180
			add 0.005,0.01, rollerR
			roty 90
			prism_ 2,0.02,
				0,0,979,
				rollerR,360,4079
			addz -0.03
			prism_ 2,0.02,
				0,0,979,
				rollerR,360,4079
			del 3
			addz rollerR*2
			prism 4,0.005,
				-legWidth_02, -legWidth_02,
				-legWidth_02,  legWidth_02,
				 legWidth_02,  legWidth_02,
				 legWidth_02, -legWidth_02
			roty 90
			addz -0.005
			prism 4,0.01,
				0, -0.01,
				0,  legWidth_02,
				0.03 + rollerR/2,  legWidth_02,
				0.03 + rollerR/2, -0.01
			del 5
		next i
	endif
return

