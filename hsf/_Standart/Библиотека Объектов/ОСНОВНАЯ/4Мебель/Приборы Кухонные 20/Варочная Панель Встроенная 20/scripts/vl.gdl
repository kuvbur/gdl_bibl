
call "FM_types" parameters all

lock "ZZYZX"
ac_bottomlevel = hCountertop - count_th
if cooktopType_m = 3 or cooktopType_m = 4 or cooktopType_m = 8 or cooktopType_m = 9 or cooktopType_m = 13 then
	ZZYZX = count_th + 0.032
	ac_toplevel = hCountertop + 0.032
endif
if cooktopType_m = 2 or cooktopType_m = 5 or cooktopType_m = 6 or cooktopType_m = 7 or cooktopType_m = 11 or cooktopType_m = 12 then
	ZZYZX = count_th + 0.003
	ac_toplevel = hCountertop + 0.003
endif
if cooktopType_m = 1 or cooktopType_m = 10 then
	ZZYZX = count_th + 0.002
	ac_toplevel = hCountertop + 0.002
endif
parameters	ZZYZX 			= ZZYZX
parameters	ac_bottomlevel	= ac_bottomlevel,
			ac_toplevel		= ac_toplevel

values "bs_h" range (0, )
values "count_th" range (0, )

if not(bBacksplash) then lock "bs_h"

if dob_face then
	bBacksplash = 0
    parameters bBacksplash = bBacksplash
	lock "bs_h", "bBacksplash"
endif

dim stCooktopType[13]
	stCooktopType[ 1] = `Тип 1`
	stCooktopType[ 2] = `Тип 2`
	stCooktopType[ 3] = `Тип 3`
	stCooktopType[ 4] = `Тип 4`
	stCooktopType[ 5] = `Тип 5`
	stCooktopType[ 6] = `Тип 6`
	stCooktopType[ 7] = `Тип 7`
	stCooktopType[ 8] = `Тип 8`
	stCooktopType[ 9] = `Тип 9`
	stCooktopType[10] = `Тип 10`
	stCooktopType[11] = `Тип 11`
	stCooktopType[12] = `Тип 12`
	stCooktopType[13] = `Тип 13`

dim idxCooktopType[13]
	idxCooktopType[ 1] = 1
	idxCooktopType[ 2] = 2
	idxCooktopType[ 3] = 3
	idxCooktopType[ 4] = 4
	idxCooktopType[ 5] = 5
	idxCooktopType[ 6] = 6
	idxCooktopType[ 7] = 7
	idxCooktopType[ 8] = 8
	idxCooktopType[ 9] = 9
	idxCooktopType[10] = 10
	idxCooktopType[11] = 11
	idxCooktopType[12] = 12
	idxCooktopType[13] = 13

VALUES "cooktopType" 	stCooktopType
VALUES "cooktopType_m"	idxCooktopType

values "gs_count_type" `Прямоугольник`, `Закругленная`
values "gs_count_type_m" 	1, 2

if GLOB_MODPAR_NAME = "gs_count_type" then
	gs_count_type_m = 1
	if gs_count_type = `Закругленная` then gs_count_type_m = 2
	parameters gs_count_type_m = gs_count_type_m
else
	gs_count_type = `Прямоугольник`
	if gs_count_type_m = 2 then gs_count_type = `Закругленная`
	parameters gs_count_type = gs_count_type
endif

values{2} "gs_detlevel_3D_m" 	2, `Детальный`,
								1, `Простой`,
								0, `Откл.`

VALUES "gs_resol" RANGE [3,)


if GLOB_MODPAR_NAME = "CooktopType" then
	cooktopType_m = 1
	for iCooktopType = 1 to 13
		if cooktopType = stCooktopType[iCooktopType] then
			cooktopType_m = idxCooktopType[iCooktopType]
		endif
	next iCooktopType
	parameters cooktopType_m = cooktopType_m
else
	idx = 1
	for i=1 to vardim1(idxCooktopType)
		if idxCooktopType[i] = cooktopType_m then
			idx = i
		endif
	next i
	parameters cooktopType = stCooktopType[idx]
endif

CALL "fa_CounterCooktop" PARAMETERS ALL
values "A" range [AA, )
values "B" range [BB + 0.04, )

values "side_vis" stSideVisValues
values "side_vis_mirror" stSideVisValues
values "side_vis_m" 1, 2, 3, 4

if GLOB_MODPAR_NAME = "side_vis" then
	if side_vis = stSideVisValues[1] then
		side_vis_m = 1
		side_vis_mirror = stSideVisValues[1]
	endif
	if side_vis = stSideVisValues[2] then
		side_vis_m = 2
		side_vis_mirror = stSideVisValues[3]
	endif
	if side_vis = stSideVisValues[3] then
		side_vis_m = 3
		side_vis_mirror = stSideVisValues[2]
	endif
	if side_vis = stSideVisValues[4] then
		side_vis_m = 4
		side_vis_mirror = stSideVisValues[4]
	endif
	parameters	side_vis_m = side_vis_m,
				side_vis_mirror = side_vis_mirror
else
	if GLOB_MODPAR_NAME = "side_vis_mirror" then
		if side_vis_mirror = stSideVisValues[1] then
			side_vis_m = 1
			side_vis = stSideVisValues[1]
		endif
		if side_vis_mirror = stSideVisValues[2] then
			side_vis_m = 3
			side_vis = stSideVisValues[3]
		endif
		if side_vis_mirror = stSideVisValues[3] then
			side_vis_m = 2
			side_vis = stSideVisValues[2]
		endif
		if side_vis_mirror = stSideVisValues[4] then
			side_vis_m = 4
			side_vis = stSideVisValues[4]
		endif
		parameters	side_vis_m = side_vis_m,
					side_vis = side_vis
	else
		if side_vis_m = 1 then
			side_vis = stSideVisValues[1]
			side_vis_mirror = stSideVisValues[1]
		endif
		if side_vis_m = 2 then
			side_vis = stSideVisValues[2]
			side_vis_mirror = stSideVisValues[3]
		endif
		if side_vis_m = 3 then
			side_vis = stSideVisValues[3]
			side_vis_mirror = stSideVisValues[2]
		endif
		if side_vis_m = 4 then
			side_vis = stSideVisValues[4]
			side_vis_mirror = stSideVisValues[4]
		endif
		parameters	side_vis = side_vis,
					side_vis_mirror = side_vis_mirror
	endif
endif


! === Handling mirroring issues =========================================================

values "side_vis2D" stSideVisValues
values "side_vis2D_mirror" stSideVisValues
values "side_vis2D_m" 1, 2, 3, 4

if GLOB_MODPAR_NAME = "side_vis2D" then
	if side_vis2D = stSideVisValues[1] then
		side_vis2D_m = 1
		side_vis2D_mirror = stSideVisValues[1]
	endif
	if side_vis2D = stSideVisValues[2] then
		side_vis2D_m = 2
		side_vis2D_mirror = stSideVisValues[3]
	endif
	if side_vis2D = stSideVisValues[3] then
		side_vis2D_m = 3
		side_vis2D_mirror = stSideVisValues[2]
	endif
	if side_vis2D = stSideVisValues[4] then
		side_vis2D_m = 4
		side_vis2D_mirror = stSideVisValues[4]
	endif
	parameters	side_vis2D_m = side_vis2D_m,
				side_vis2D_mirror = side_vis2D_mirror
else
	if GLOB_MODPAR_NAME = "side_vis2D_mirror" then
		if side_vis2D_mirror = stSideVisValues[1] then
			side_vis2D_m = 1
			side_vis2D = stSideVisValues[1]
		endif
		if side_vis2D_mirror = stSideVisValues[2] then
			side_vis2D_m = 3
			side_vis2D = stSideVisValues[3]
		endif
		if side_vis2D_mirror = stSideVisValues[3] then
			side_vis2D_m = 2
			side_vis2D = stSideVisValues[2]
		endif
		if side_vis2D_mirror = stSideVisValues[4] then
			side_vis2D_m = 4
			side_vis2D = stSideVisValues[4]
		endif
		parameters	side_vis2D_m = side_vis2D_m,
					side_vis2D = side_vis2D
	else
		if side_vis2D_m = 1 then
			side_vis2D = stSideVisValues[1]
			side_vis2D_mirror = stSideVisValues[1]
		endif
		if side_vis2D_m = 2 then
			side_vis2D = stSideVisValues[2]
			side_vis2D_mirror = stSideVisValues[3]
		endif
		if side_vis2D_m = 3 then
			side_vis2D = stSideVisValues[3]
			side_vis2D_mirror = stSideVisValues[2]
		endif
		if side_vis2D_m = 4 then
			side_vis2D = stSideVisValues[4]
			side_vis2D_mirror = stSideVisValues[4]
		endif
		parameters	side_vis2D = side_vis2D,
					side_vis2D_mirror = side_vis2D_mirror
	endif
endif

if SYMB_MIRRORED then
	hideparameter	"side_vis",
					"side_vis2D"
else
	hideparameter	"side_vis_mirror",
					"side_vis2D_mirror"
endif

if gs_detlevel_3D_m = 1 then
	lock "gs_resol"
	hideparameter "gs_resol"
endif
if gs_detlevel_3D_m = 0 then
	lock "gs_resol", "gs_shadow"
	hideparameter "gs_resol", "gs_shadow"
endif
IF bs_h < eps THEN HIDEPARAMETER "bs_mat"

if cooktopType_m = 3 or cooktopType_m =4 or cooktopType_m = 8 or cooktopType_m =9 or cooktopType_m = 13 then
		b2DSymbol = 0
		parameters b2DSymbol = b2DSymbol
		lock "b2DSymbol"
		hideparameter "b2DSymbol"
endif

values "gs_cooktop_symbol_type" stCooktopSymbolTypes
values "iCooktopSymbolType" 1, 2, 3, 4

if GLOB_MODPAR_NAME = "gs_cooktop_symbol_type" then
	if gs_cooktop_symbol_type = stCooktopSymbolTypes[1] then iCooktopSymbolType = 1
	if gs_cooktop_symbol_type = stCooktopSymbolTypes[2] then iCooktopSymbolType = 2
	if gs_cooktop_symbol_type = stCooktopSymbolTypes[3] then iCooktopSymbolType = 3
	if gs_cooktop_symbol_type = stCooktopSymbolTypes[4] then iCooktopSymbolType = 4
	parameters iCooktopSymbolType = iCooktopSymbolType
else
	if iCooktopSymbolType = 1 then gs_cooktop_symbol_type = stCooktopSymbolTypes[1]
	if iCooktopSymbolType = 2 then gs_cooktop_symbol_type = stCooktopSymbolTypes[2]
	if iCooktopSymbolType = 3 then gs_cooktop_symbol_type = stCooktopSymbolTypes[3]
	if iCooktopSymbolType = 4 then gs_cooktop_symbol_type = stCooktopSymbolTypes[4]
	parameters gs_cooktop_symbol_type = gs_cooktop_symbol_type
endif

if not(b2DSymbol) then
	lock "gs_cooktop_symbol_type", "gs_symbol_pen", "gs_symbol_fill_type", "iCooktopSymbolType"
	hideparameter "gs_cooktop_symbol_type", "gs_symbol_pen", "gs_symbol_fill_type", "iCooktopSymbolType"
endif
if b2DSymbol and iCooktopSymbolType < 3 then
	lock "gs_symbol_fill_type"
	hideparameter "gs_symbol_fill_type"
endif

! Pen<>0
IF gs_cont_pen=0 then parameters gs_cont_pen=4
IF gs_fill_pen=0 then parameters gs_fillpen=19

! --- Minimal Space ---
values "MSFront" range [0, )
values "MSSide" range (-a/2,]
values "MSSide2" range (-a/2,]
values "MSRear" range [0, )
values "RMSSide" range (-a/2,]
values "RMSSide2" range (-a/2,]

if not(dob_face) then
	lock			"MSRear",
					"RMSSide",
					"RMSSide2"
	hideparameter	"MSRear",
					"RMSSide",
					"RMSSide2"
endif

hideparameter all "A", "B", "ZZYZX"	
! =============================================================================
! Onorm list Settings
! =============================================================================
if LibraryLangCode = "AUT" or LibraryLangCode = "CHE" or LibraryLangCode = "GER" then
	call "Onorm_Storage" parameters all
else
	hideparameter "gs_onorm_Title"
endif

