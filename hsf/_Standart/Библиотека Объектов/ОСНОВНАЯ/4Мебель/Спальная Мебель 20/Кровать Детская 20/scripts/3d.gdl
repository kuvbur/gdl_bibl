

! ==============================================================================
! 		3D Detail Level
! ==============================================================================

if gs_detlevel_3D_m = DET3D_OFF then END
if not(gs_shadow) then SHADOW OFF

pen gs_cont_pen

if gs_detlevel_3D_m = DET3D_SIMPLE then
	gs_resol = 8
else
	gs_resol = gs_resol
endif
resol gs_resol


! ==============================================================================
! 		Hotspots
! ==============================================================================

unID = 300

! --- Width Edit ---
hotspot 0,			0,		0,	unID, B, 1+256	: unID = unID + 1
hotspot 0,			B,		0,	unID, B, 2		: unID = unID + 1
hotspot 0,			-1,		0,	unID, B, 3		: unID = unID + 1

hotspot cribLength,	0,	0,	unID, B, 1+256	: unID = unID + 1
hotspot cribLength,	B,	0,	unID, B, 2		: unID = unID + 1
hotspot cribLength,	-1,	0,	unID, B, 3		: unID = unID + 1

if bCabinet then
	hotspot A,	0,	0,	unID, B, 1+256	: unID = unID + 1
	hotspot A,	B,	0,	unID, B, 2		: unID = unID + 1
	hotspot A,	-1,	0,	unID, B, 3		: unID = unID + 1
else
	unID = unID + 3
endif


! --- Crib Length Edit ---
hotspot 0,			B,	0, unID, cribLength, 1+256	: unID = unID + 1
hotspot cribLength,	B,	0, unID, cribLength, 2		: unID = unID + 1
hotspot -1,			B,	0, unID, cribLength, 3		: unID = unID + 1

hotspot 0,			0,	0, unID, cribLength, 1+256	: unID = unID + 1
hotspot cribLength,	0,	0, unID, cribLength, 2		: unID = unID + 1
hotspot -1,			0,	0, unID, cribLength, 3		: unID = unID + 1


! --- Cabinet X Length Edit ---
if bCabinet then
	if iCabOrient = 1 then
		hotspot cribLength,	0,	0, unID, cabWidth, 1+128	: unID = unID + 1
		hotspot A,			0,	0, unID, cabWidth, 2		: unID = unID + 1
		hotspot -1,			0,	0, unID, cabWidth, 3		: unID = unID + 1

		hotspot cribLength,	B,	0, unID, cabWidth, 1+128	: unID = unID + 1
		hotspot A,			B,	0, unID, cabWidth, 2		: unID = unID + 1
		hotspot -1,			B,	0, unID, cabWidth, 3		: unID = unID + 1
	else
		hotspot cribLength,	0,	0, unID, cabDepth, 1+128	: unID = unID + 1
		hotspot A,			0,	0, unID, cabDepth, 2		: unID = unID + 1
		hotspot -1,			0,	0, unID, cabDepth, 3		: unID = unID + 1

		hotspot cribLength,	B,	0, unID, cabDepth, 1+128	: unID = unID + 1
		hotspot A,			B,	0, unID, cabDepth, 2		: unID = unID + 1
		hotspot -1,			B,	0, unID, cabDepth, 3		: unID = unID + 1
	endif
else
	unID = unID +12
endif


! --- Drawer / Leg Height ---
hotspot _headboardThk,	0, 0,				unID, supportHeight, 1+128	: unID = unID + 1
hotspot _headboardThk,	0, supportHeight,	unID, supportHeight, 2		: unID = unID + 1
hotspot _headboardThk,	0, -1,				unID, supportHeight, 3		: unID = unID + 1


! --- Headboard Height ---
addz supportHeight

hotspot _headboardThk,	0, 0,				unID, headboardHeight, 1+128	: unID = unID + 1
hotspot _headboardThk,	0, headboardHeight,	unID, headboardHeight, 2		: unID = unID + 1
hotspot _headboardThk,	0, -1,				unID, headboardHeight, 3		: unID = unID + 1

hotspot _headboardThk,	B, 0,				unID, headboardHeight, 1+128	: unID = unID + 1
hotspot _headboardThk,	B, headboardHeight,	unID, headboardHeight, 2		: unID = unID + 1
hotspot _headboardThk,	B, -1,				unID, headboardHeight, 3		: unID = unID + 1

del 1


! --- Rail Heights ---
_frontRailTop = supportHeight + frontRailHeight
_rearRailTop  = supportHeight + rearRailHeight

hotspot cribLength/2,	0, supportHeight,	unID, frontRailHeight, 1+128	: unID = unID + 1
hotspot cribLength/2,	0, _frontRailTop,	unID, frontRailHeight, 2		: unID = unID + 1
hotspot cribLength/2,	0, -1,				unID, frontRailHeight, 3		: unID = unID + 1

hotspot cribLength/2,	B, supportHeight,	unID, rearRailHeight, 1+128	: unID = unID + 1
hotspot cribLength/2,	B, _rearRailTop,	unID, rearRailHeight, 2		: unID = unID + 1
hotspot cribLength/2,	B, -1,				unID, rearRailHeight, 3		: unID = unID + 1


! --- Platform Height ---
addz supportHeight

hotspot cribLength/2,	0.03, 0,				unID, platformHeight, 1+128	: unID = unID + 1
hotspot cribLength/2,	0.03, platformHeight,	unID, platformHeight, 2		: unID = unID + 1
hotspot cribLength/2,	0.03, -1,				unID, platformHeight, 3		: unID = unID + 1

del 1


! --- Cabinet Height ---
if bCabinet then
	hotspot A,	0, bCabLeg * supportHeight,				unID, cabHeight, 1+128	: unID = unID + 1
	hotspot A,	0, bCabLeg * supportHeight + cabHeight,	unID, cabHeight, 2		: unID = unID + 1
	hotspot A,	0, -1,									unID, cabHeight, 3		: unID = unID + 1

	hotspot A,	B, bCabLeg * supportHeight,				unID, cabHeight, 1+128	: unID = unID + 1
	hotspot A,	B, bCabLeg * supportHeight + cabHeight,	unID, cabHeight, 2		: unID = unID + 1
	hotspot A,	B, -1,									unID, cabHeight, 3		: unID = unID + 1
else
	unID = unID + 6
endif


! ==============================================================================
! 		Main Frame
! ==============================================================================

material gs_frame_mat


add _headboardThk, 0, supportHeight - 0.05
block cribLength - 2 * _headboardThk, legWidth, 0.05

addy B - legWidth
block cribLength - 2 * _headboardThk, legWidth, 0.05
del 2


! ==============================================================================
! 		Lower Drawer
! ==============================================================================

if iSupType = 1 then
	roty 00
	add _headboardThk + 0.02, -0.03, 0.02

	cutform 4, 1, 1+2+0+0,
		0, 0, 1, supportHeight - 0.09,
		0,										0,	15,
		cribLength - 2 * _headboardThk - 0.04,	0,	15,
		cribLength - 2 * _headboardThk - 0.04,	B,	15,
		0,										B,	15

	del 2

	add _headboardThk, doorThk, 0
	block cribLength - 2 * _headboardThk, B - doorThk, supportHeight - 0.05
	del 1

	cutend

	if nUnderDrawer = 2 then
		add cribLength/2 - 0.01, doorThk, 0.02
		block 0.02, B - 0.04 - doorThk, supportHeight - 0.08
		del 1
	endif

	! --- Drawer Door Type ---

	add _headboardThk + 0.0105, doorThk, 0.01
	for i = 1 to nUnderDrawer
		call "fa_cabdoortyp" parameters all	gs_door_type_m	= iDrawerStyle - (iDrawerStyle = 3),
											door_w			= (cribLength - 2 * _headboardThk - 0.02) / nUnderDrawer,
											door_h			= supportHeight - 0.05 - 0.02,
											doorframe_w		= 0.05,
											fr_th1			= doorThk,
											gs_knob_type_m	= iKnobStyle,
											bKnob			= bKnob,
											bKnobNoneType	= 0,
											knob_size		= knobSize,
											knob_pl_x		= (cribLength - 2 * _headboardThk) / (2 * nUnderDrawer) - (iKnobStyle > 3) * knobSize/2,
											knob_pl_y		= (supportHeight - 0.05) / 2 - 0.01,
											doorframe_mat	= matDrawer,
											gs_knob_mat		= matKnob

		addx cribLength/2 - _headboardThk - 0.01
	next i

	del nUnderDrawer + 1
endif


! ==============================================================================
! 		Legs
! ==============================================================================

if not(iSupType = 1) then
	addx _headboardThk + (legWidth - _headboardThk) * (iLegStyle = 2 or iLegStyle = 3 or iLegStyle = 5)
	rotz 90
	muly (_headboardThk / legWidth) * not(iLegStyle = 2 or iLegStyle = 3 or iLegStyle = 5) + (iLegStyle = 2 or iLegStyle = 3 or iLegStyle = 5)

	call "fa_bedlegtyp" parameters all	A			= B,
										iBedLegType	= iLegStyle,
										d			= legWidth,
										leg_h		= supportHeight - 0.05,
										gs_leg_mat	= matLeg
	del 1

	addy -cribLength + _headboardThk + (legWidth - _headboardThk) * (iLegStyle = 2 or iLegStyle = 3 or iLegStyle = 5)
	muly (_headboardThk / legWidth) * not(iLegStyle = 2 or iLegStyle = 3 or iLegStyle = 5) + (iLegStyle = 2 or iLegStyle = 3 or iLegStyle = 5)

	call "fa_bedlegtyp" parameters all	A			= B,
										iBedLegType	= iLegStyle,
										d			= legWidth,
										leg_h		= supportHeight - 0.05,
										gs_leg_mat	= matLeg
	del 1

	if bCabinet and bCabLeg then
		addy -_cabXLength
		muly (_headboardThk / legWidth) * not(iLegStyle = 2 or iLegStyle = 3 or iLegStyle = 5) + (iLegStyle = 2 or iLegStyle = 3 or iLegStyle = 5)

		call "fa_bedlegtyp" parameters all	A			= B,
											iBedLegType	= iLegStyle,
											d			= legWidth,
											leg_h		= supportHeight - 0.05,
											gs_leg_mat	= matLeg
		del 2
	endif
	
	del 3
endif


! ==============================================================================
! 		Headboards
! ==============================================================================

_hBHgt = headboardHeight + _edgeHgt + (iHeadboardStyle = 1 or iHeadboardStyle = 3) * 0.1

add _headboardThk + _edgeThk/2 - (bBoardEdge) * _headboardThk/2, 0, (iSupType = 2) * (supportHeight - 0.05)
rotz 90

call "fa_bed_headboard" parameters	A				= B,
									hbh				= _hBHgt + 0.05 + (iSupType = 1) * (supportHeight - 0.05),
									hbt				= _headboardThk,
									eh				= _edgeHgt,
									et				= _edgeThk,
									hboard_type_m	= iHeadboardStyle,
									frh				= 0.05 + (iSupType = 1) * (supportHeight - 0.05),
									hbmat			= matHeadboard,
									gs_resol		= 2 * gs_resol

del 2

if bCabinet then
	if iHeadboardStyle = 3 or iHeadboardStyle = 4 then
		_iHBStyle = iHeadboardStyle - 2
	else
		_iHBStyle = iHeadboardStyle
	endif
else
	_iHBStyle = iHeadboardStyle
endif


add cribLength + _edgeThk/2 - (bBoardEdge) * _headboardThk/2, 0, (iSupType = 2) * (supportHeight - 0.05)
rotz 90

call "fa_bed_headboard" parameters	A				= B,
									hbh				= _hBHgt + 0.05 + (iSupType = 1) * (supportHeight - 0.05),
									hbt				= _headboardThk,
									eh				= _edgeHgt,
									et				= _edgeThk,
									hboard_type_m	= _iHBStyle,
									frh				= 0.05 + (iSupType = 1) * (supportHeight - 0.05),
									hbmat			= matHeadboard,
									gs_resol		= 2 * gs_resol

del 2


! ==============================================================================
! 		Front and Rear Rails
! ==============================================================================

material gs_frame_mat

! --- Front Rail ---

add _headboardThk, 0, supportHeight + frontRailHeight - 0.06
block cribLength - 2 * _headboardThk, 0.025, 0.06
del 1

_nRods = int((cribLength) / 0.08) - 1

add (cribLength - (_nRods - 1) * 0.08 - 0.015) / 2, 0.005, supportHeight
for i = 1 to _nRods
	block 0.015, 0.015, frontRailHeight - 0.06

	addx 0.08
next i

del _nRods
del 1


! --- Rear Rail ---

addy B - 0.025

add _headboardThk, 0, supportHeight + rearRailHeight - 0.06
block cribLength - 2 * _headboardThk, 0.025, 0.06
del 1

_nRods = int((cribLength) / 0.08) - 1

add (cribLength - (_nRods - 1) * 0.08 - 0.015) / 2, 0.005, supportHeight
for i = 1 to _nRods
	block 0.015, 0.015, rearRailHeight - 0.06

	addx 0.08
next i
del _nRods

del 1

del 1


! ==============================================================================
! 		Cabinet
! ==============================================================================

if (bCabinet) then
	material matCabinet

	add cribLength, 0, (bCabLeg) * (supportHeight)

	if bCabLeg then
		addz -0.05
		block _cabXLength, B, 0.05
		del 1
	endif

	if iCabOrient = 2 then
		_cabinetA = B
		_cabinetB = cabDepth

		addx cabDepth
		rotz 90
	else
		_cabinetA = cabWidth
		_cabinetB = B
	endif

	call "fa_nightTable" parameters all	A					= _cabinetA,
										B					= _cabinetB,
										ZZYZX				= cabHeight,
										bCalledAsMacro		= 1,
										stDoorTypes			= stDrawerStyleValues,
										stKnobTypes			= stKnobStyleValues,
										iNightTableType		= 1,
										gs_door_type_m		= iDrawerStyle,
										gs_cornice_type_m	= 1,
										gs_knob_type_m		= iKnobStyle * bKnob,
										gs_leg_type_m		= 0,
										knob_size			= knobSize,
										dnum				= (iCabStyle = 1) * nDrawer,
										leg_h				= 0,
										fr_th1				= doorThk,
										tbt					= tabletopThk,
										tboh				= tabletopOverhang,
										gs_cabinet_mat		= matCabinet,
										doorframe_mat		= matDoorFrame,
										doorglas_mat		= matDoorGlass,
										gs_cornice_mat		= matCabinet,
										gs_knob_mat			= matKnob

	del 2 * (iCabOrient = 2) + 1

	if iCabStyle = 2 and nDrawer > 1 then
		add cribLength + 0.02, (iCabOrient = 2) * 0.02 + doorThk * (iCabOrient = 1), bCabLeg * supportHeight
		_nTrans = 1

		for i = 1 to nDrawer - 1
			addz (cabHeight - tabletopThk - 0.02) / nDrawer
			_nTrans = _nTrans +1

			block _cabXLength - 0.02 * (1 + (iCabOrient = 1)) - doorThk * (iCabOrient = 2), B - 0.02 * (1 + (iCabOrient = 2)) - doorThk * (iCabOrient = 1), 0.02
		next i
		del _nTrans
	endif
endif


! ==============================================================================
! 		Mattress Support Block
! ==============================================================================

material gs_frame_mat
addz supportHeight
add _headboardThk, 0.03, platformHeight - platformThk

prism_ 10, platformThk - 0.005,
	0,										0,			15,
	cribLength - 2 * _headboardThk,			0,			15,
	cribLength - 2 * _headboardThk,			B - 0.06,	15,
	0,										B - 0.06,	15,
	0,										0,			-1,

	0.03,									0.03,		15,
	cribLength - 2 * _headboardThk - 0.03,	0.03,		15,
	cribLength - 2 * _headboardThk - 0.03,	B - 0.09,	15,
	0.03,									B - 0.09,	15,
	0.03,									0.03,		-1

addz platformThk - 0.005
block cribLength - 2 * _headboardThk, B - 0.06, 0.005
del 2

add (cribLength - 0.03 - (int(cribLength / 0.3) - 1) * 0.3) / 2, 0.06, platformHeight - min(platformThk, 0.035)
for i = 1 to int(cribLength / 0.3)
	block 0.03, B - 0.12, min(platformThk - 0.005, 0.03)

	addx 0.3
next i
del int(cribLength / 0.3)

del 2


! ==============================================================================
! 		Mattress 
! ==============================================================================

addz supportHeight + platformHeight
cutplane 180

add _headboardThk, 0.03, -2 * RadCushEdge

call "fa_cushion" parameters all	cush_a		= cribLength - 2 * _headboardThk,
									cush_b		= B - 0.06,
									cush_h		= mrh + 2 * RadCushEdge,
									r1			= RadCushCorner,
									r2			= RadCushEdge,
									cush_mat	= mmat

del 2

cutend


! ==============================================================================
! 		Pillow 
! ==============================================================================


if pw and gs_detlevel_3D_m = DET3D_DETAILED then
	add cribLength - 0.30 * B, B/2, supportHeight + platformHeight + mrh
	mul 0.75, 0.75, 0.75
	rotz -90

	call "fa_pillow" parameters	all	A			= B,
									gs_resol	= 3 * gs_resol,
									pillow_mat	= pillow_mat
	del 3
endif

! ==============================================================================
  end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! 
! ==============================================================================





