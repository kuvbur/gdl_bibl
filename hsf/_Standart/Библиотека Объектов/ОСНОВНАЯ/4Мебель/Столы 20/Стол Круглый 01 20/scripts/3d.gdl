
IF not(gs_shadow) THEN SHADOW OFF

pen gs_cont_pen

if gs_detlevel_3D_m = DETLEV_OFF then end
if gs_detlevel_3D_m = DETLEV_SIMPLE then gs_resol = 4

if not(drawer) then
	heightDrawer = 0
endif

! ==============================================================================
! Legs
! ==============================================================================

RESOL gs_resol
material gs_leg_mat

hh = 0
hr = 0

if numLeg = 1 then
	hh = 0.02
	hr = max(0.4,max(depthLeg,widthLeg)+max(A,B)/10)
	if iStyleLeg = LEG_ROUND or iStyleLeg = LEG_CONIC or iStyleLeg = LEG_BALUSTER then
		cylind hh, hr/2
		addz hh
	endif
	if iStyleLeg = LEG_BLOCK then
		add -hr/2, -hr/2, 0
		block hr, hr, hh
		del 1
	endif

	if iStyleLeg = LEG_ROUND then
		cylind zzyzx - thickTabletop - hh, widthLeg/2
	endif
	if iStyleLeg = LEG_CONIC then
		roty -90
		revolve 3, 360, 1+2+16+32,
				0,                             widthLeg/4, 1,
			   (zzyzx - thickTabletop - hh)/2, widthLeg/2,   1,
				zzyzx - thickTabletop - hh,    widthLeg/2,   1
		del 1
	endif
	if iStyleLeg = LEG_BALUSTER then gosub "baluster"
	if ABdifference < EPS and (iStyleLeg = LEG_ROUND or iStyleLeg = LEG_CONIC or iStyleLeg = LEG_BALUSTER) then del 1

	if iStyleLeg = LEG_BLOCK then
		add -widthLeg/2, -depthLeg/2, hh
		block widthLeg, depthLeg, zzyzx - thickTabletop - hh
		del 1
	endif
else
	if numLeg = 2 then
		eh = 0.05
		eb = 0.05

		dx = 2 * (min(a,b)/2 - widthOverhang) * sin(45)
		dy = zzyzx - thickTabletop - 0.03

		if a - b > EPS then
			if iTypeTableEnd = TABLEEND_ARC then
				add -ABdifference/2 - dx/2, -dx/2, 0
			else
				add -(a/2 - widthOverhang) * cos(45), -dx/2, 0
			endif
		else
			if iTypeTableEnd = TABLEEND_ARC then
				add -dx/2, -ABdifference/2 - dx/2, 0
			else
				add -dx/2, -(b/2 - widthOverhang) * cos(45), 0
			endif
		endif

		for i = 1 to 2
			if iStyleLeg = LEG_RUSTIC then
				addz 0.03
				if b - a > EPS then
					addy widthLeg
				else
					rotz 90
				endif
				rotx 90
				mul dx, dy, 1
				dt = (dx + 2 * 0.03) / dx
				gosub "rustic"
				del 4
			else
				if b - a > EPS then
					addx dx
					rotz 90
				endif
				if iStyleLeg = LEG_SOLID then
					depthLeg = dx
					gosub "solidLeg"
				else    ! iStyleLeg = LEG_FOLDING
					gosub "folding"
				endif
				if b - a > EPS then del 2
			endif
			if b - a > EPS then
				if iTypeTableEnd = TABLEEND_ARC then
					addy ABdifference + dx - widthLeg
				else
					addy 2 * (b/2 - widthOverhang) * cos(45) - widthLeg
				endif
			else
				if iTypeTableEnd = TABLEEND_ARC then
					addx ABdifference + dx - widthLeg
				else
					addx 2 * (a/2 - widthOverhang) * cos(45) - widthLeg
				endif
			endif
		next i
		del 1 + 2
	else				! numLeg = 3 or 4
		if ABdifference < EPS or iTypeTableEnd = TABLEEND_ELLIP then
			if ABdifference < EPS then
				rotz 45
			else
				ellxy = 0
				if iStyleLeg = LEG_BALUSTER or iStyleLeg = LEG_DESIGN then ellxy = widthLeg/2/2
			endif
			for i = 1 to numLeg
				if  ABdifference < EPS then
					addx a/2 - widthLeg - widthOverhang
					if numLeg = 4 then
						addx -((widthLeg) * (sqr(2) - 1))
					endif
				else
					if iTypeTableEnd = TABLEEND_ELLIP then
						add (a/2 - 5 * widthLeg/4 - widthOverhang - ellxy) * cos(45 + (i - 1) * (360/numLeg)),
							(b/2 - 5 * widthLeg/4 - widthOverhang - ellxy) * sin(45 + (i - 1) * (360/numLeg)), 0
					endif
				endif
				if iStyleLeg = LEG_ROUND or iStyleLeg = LEG_CONIC or iStyleLeg = LEG_BALUSTER or iStyleLeg = LEG_DESIGN then
					if iStyleLeg = LEG_ROUND then
						cylind zzyzx - thickTabletop, widthLeg/2
					endif
					if iStyleLeg = LEG_CONIC then
						roty -90
						revolve 3, 360, 1+2+16+32,
								0,                        widthLeg/4, 1,
							   (zzyzx - thickTabletop)/2, widthLeg/2,   1,
								zzyzx - thickTabletop,    widthLeg/2,   1
						gosub 1000
						del 1
					endif
					if numLeg = 4 then rotz 90*not(i%2)
					if iStyleLeg = LEG_BALUSTER then gosub "baluster"
					gosub 2000
					if iStyleLeg = LEG_DESIGN then gosub "design"
					gosub 1000
					if numLeg = 4 then del 1
				endif
				if iStyleLeg = LEG_BLOCK then
					if iTypeTableEnd = TABLEEND_ELLIP then
						if ABdifference >= EPS then
							if numLeg = 4 then
								rotz -90*(i%2)+90*not(i%2)
							else
								rotz (45 + (i - 1) * (360/numLeg))
							endif
						else
							if numLeg = 4 then rotz 45*(i%2)-45*not(i%2)
						endif
						if numleg = 3 and ABdifference >= EPS then
							add -widthLeg/2, -widthLeg/2, 0
						else
							add -widthLeg/2, -depthLeg/2, 0
						endif
					else
						if numLeg = 4 then rotz 45*(i%2)-45*not(i%2)
						add -widthLeg/2, -depthLeg/2, 0
					endif
					block widthLeg, depthLeg, zzyzx - thickTabletop
					gosub 1000
					if iTypeTableEnd = TABLEEND_ELLIP and ABdifference >= EPS then
						del 1
					else
						if numLeg = 4 then del 1
					endif
					del 1
				endif
				if  ABdifference < EPS then
					del 1
					if numLeg = 4 then del 1
				else
					if (iTypeTableEnd = TABLEEND_ELLIP) then del 1
				endif
				if  ABdifference < EPS then rotz 360 / numLeg
			next i
			if  ABdifference < EPS then del numLeg+1
		else				! iTypeTableEnd = TABLEEND_ARC and ABdifference > EPS
			if numLeg = 4 then
				if ABdifference - 0.5 > EPS then
					if a - b > EPS then
						add -ABdifference/2, -b/2+widthOverhang+3*depthLeg/5, 0
					else
						add -a/2 + widthOverhang + widthLeg, -ABdifference/2, 0
					endif
				endif

				for x = 1 to 2
					if ABdifference - 0.5 < EPS then
						rotz 180*(x=2)
						if a - b > EPS then
							addx ABdifference/2
							rotz -45
						else
							addy ABdifference/2
							rotz 45
						endif
					endif

					for y = 1 to 2
						if ABdifference - 0.5 < EPS then
							addx min(a,b)/2 - widthLeg - widthOverhang-((widthLeg) * (sqr(2) - 1))
							rotz 45
						endif
						if iStyleLeg = LEG_ROUND then
							cylind zzyzx - thickTabletop, widthLeg/2
						endif
						if iStyleLeg = LEG_CONIC then
							roty -90
							revolve 3, 360, 1+2+16+32,
									0,                        widthLeg/4, 1,
								   (zzyzx - thickTabletop)/2, widthLeg/2,   1,
									zzyzx - thickTabletop,    widthLeg/2,   1
							del 1
						endif
						if iStyleLeg = LEG_BLOCK then
							if ABdifference - 0.5 <= EPS then
								rotz 90*(y%2)
							endif
							add -widthLeg/2, -depthLeg/2, 0
							block widthLeg, depthLeg, zzyzx - thickTabletop
							del 1
							if ABdifference - 0.5 <= EPS then del 1
						endif
						if iStyleLeg = LEG_BALUSTER then gosub "baluster"
						if iStyleLeg = LEG_DESIGN then gosub "design"
						if ABdifference - 0.5 > EPS then
							if a - b > EPS then
								addx ABdifference
							else
								addx a - 2 * (widthOverhang + widthLeg/2) - widthLeg
							endif
						else
							del 2
							rotz 90
						endif
					next y
					if ABdifference - 0.5 > EPS then
						del 2
						if a - b > EPS then
							addy b - 2 * (widthOverhang + widthLeg/2) - widthLeg
						else
							addy ABdifference
						endif
					else
						del 2+2
					endif
				next x
				if ABdifference - 0.5 > EPS then del 2+1
			else				! numLeg = 3
				if ABdifference - 0.5 < EPS then
					mod_1 = COS(60)
					mod_2 = SIN(60)*(min(a,b)/2-widthLeg-widthOverhang)
				else
					mod_1 = 1
					mod_2 = 0
				endif
				for i=1 to 3
					if a - b > EPS then
						if ABdifference > 0.5 then
							rotz -90
						else
							rotz 90
						endif
					endif
					if i=1 then add   min(a,b)/2-widthLeg-widthOverhang, 0, 0
					if i=2 then add -mod_1*(min(a,b)/2-widthLeg-widthOverhang), ABdifference/2+mod_2, 0
					if i=3 then add -mod_1*(min(a,b)/2-widthLeg-widthOverhang), -ABdifference/2-mod_2, 0

					if iStyleLeg = LEG_ROUND then
						cylind zzyzx - thickTabletop, widthLeg/2
					endif
					if iStyleLeg = LEG_CONIC then
						roty -90
						revolve 3, 360, 1+2+16+32,
								0,                        widthLeg/4, 1,
							   (zzyzx - thickTabletop)/2, widthLeg/2,   1,
								zzyzx - thickTabletop,    widthLeg/2,   1
						del 1
					endif
					if iStyleLeg = LEG_BLOCK then
						if ABdifference - 0.5 < EPS then
							rotz 55*(i=3)+125*(i=2)
							add -widthLeg/2, -widthLeg/2, 0
						else
							add -widthLeg/2, -depthLeg/2, 0
						endif
						block widthLeg, depthLeg, zzyzx - thickTabletop
						if ABdifference - 0.5 < EPS then del 1
						del 1
					endif
					if iStyleLeg = LEG_BALUSTER then gosub "baluster"
					if iStyleLeg = LEG_DESIGN then
						if ABdifference - 0.5 < EPS then rotz 30*(i=2)+150*(i=3)+90*(i=1)
						gosub "design"
						if ABdifference - 0.5 < EPS then del 1
					endif
					del 1
					if a - b > EPS then del 1
				next i
			endif
		endif
	endif
endif

! ======================================================================
! Shelf
! ======================================================================

if shelf then
	material smat
	if iTypeTableEnd = TABLEEND_ARC then
		if iStyleFrame =  FRAMESTYLE_ARC then
			addz heightShelf
			resol 3* gs_resol
			if a >= b then
				prism_  7, thickShelf,
						-ABdifference/2, 	-b/2-widthFrame+widthOverhang+widthLeg, 	79,
						ABdifference/2,	 	-b/2-widthFrame+widthOverhang+widthLeg, 	79,
						ABdifference/2,	 	0, 											979,
						0, 					180, 										4079,
						-ABdifference/2, 	b/2+widthFrame-widthOverhang-widthLeg, 		79,
						-ABdifference/2, 	0, 											979,
						0, 					180, 										4079
			else
				prism_  7, thickShelf,
						-a/2+widthFrame+widthOverhang+widthLeg, 	ABdifference/2, 	79,
						-a/2+widthFrame+widthOverhang+widthLeg, 	-ABdifference/2, 	79,
						0, 											-ABdifference/2,	979,
						0, 											180, 				4079,
						a/2+widthFrame-widthOverhang-widthLeg, 		ABdifference/2, 	79,
						0,				 							ABdifference/2, 	979,
						0, 											180, 				4079
			endif
			del 1
		else
			! iStyleFrame = FRAMESTYLE_STRAIGHT
			addz heightShelf
			if ABdifference< eps then
				add -(A/sqr(2)/2-widthOverhang-widthLeg/2),-(A/sqr(2)/2-widthOverhang-widthLeg/2),	0
				block (A/sqr(2)/2-widthOverhang-widthLeg/2)*2,	(A/sqr(2)/2-widthOverhang-widthLeg/2)*2,		thickShelf
				del 1
			else
				if ABdifference <= 0.5 then
					if a - b > EPS then
						resol 3
						prism_  4, thickShelf,
								- (ABdifference/2+cos(45)*(b/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1)))), 		-sin(45)*(b/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1))),	 	79,
								(ABdifference/2+cos(45)*(b/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1)))),	 	-sin(45)*(b/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1))), 		79,
								(ABdifference/2+cos(45)*(b/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1)))),	 	sin(45)*(b/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1))),		79,
								-(ABdifference/2+cos(45)*(b/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1)))), 		sin(45)*(b/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1))), 		79
					else
						if b > a then
							resol 3
							prism_  4, thickShelf,
									-sin(45)*(a/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1))), 	(ABdifference/2+cos(45)*(a/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1)))), 	79,
									-sin(45)*(a/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1))), 	-(ABdifference/2+cos(45)*(a/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1)))), 	79,
									sin(45)*(a/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1))), 		-(ABdifference/2+cos(45)*(a/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1)))),	79,
									sin(45)*(a/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1))), 		(ABdifference/2+cos(45)*(a/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1)))), 	79
						endif
					endif
				else
					if a - b > EPS then
						resol 3
						prism_  4, thickShelf,
								-ABdifference/2, 	-b/2-widthFrame+widthOverhang+widthLeg, 	79,
								ABdifference/2,	 	-b/2-widthFrame+widthOverhang+widthLeg, 	79,
								ABdifference/2,	 	b/2+widthFrame-widthOverhang-widthLeg,		79,
								-ABdifference/2, 	b/2+widthFrame-widthOverhang-widthLeg, 		79
					else
						if b > a then
							resol 3
							prism_  4, thickShelf,
									-a/2+widthFrame+widthOverhang+widthLeg, 	ABdifference/2, 	79,
									-a/2+widthFrame+widthOverhang+widthLeg, 	-ABdifference/2, 	79,
									a/2+widthFrame-widthOverhang-widthLeg, 		-ABdifference/2,	79,
									a/2+widthFrame-widthOverhang-widthLeg, 		ABdifference/2, 	79
						endif
					endif
				endif
			endif

			del 1
		endif
		del top
	else
		addz heightShelf
		add -(a/2-3*widthLeg/2-widthOverhang)*cos(45), -(b/2-3*widthLeg/2-widthOverhang)*sin(45), 0
		block (a/2-3*widthLeg/2-widthOverhang)*cos(45)*2,	(b/2-3*widthLeg/2-widthOverhang)*sin(45)*2,		thickShelf
		del 2
	endif
endif
del top

! ======================================================================
! Drawer
! ======================================================================

if drawer then
	material dmat
	addz zzyzx-thickTabletop-heightDrawer
	if iTypeTableEnd = TABLEEND_ARC then
		if ABdifference< eps then
			add -(A/sqr(2)/2-widthOverhang-widthLeg/2),-(A/sqr(2)/2-widthOverhang-widthLeg/2),	0
			block (A/sqr(2)/2-widthOverhang-widthLeg/2)*2,	(A/sqr(2)/2-widthOverhang-widthLeg/2)*2,		heightDrawer
			addz thickTabletop
			widthDrawer = ((A/sqr(2)/2-widthOverhang-widthLeg/2)*2-((numDrawer+1)*.005))/numDrawer
		else
			if ABdifference <= 0.5 then
				if a - b > EPS then
					resol 3
					prism_  4, heightDrawer,
							- (ABdifference/2+cos(45)*(b/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1)))), 	-sin(45)*(b/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1))),	 	79,
							(ABdifference/2+cos(45)*(b/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1)))),	 	-sin(45)*(b/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1))), 		79,
							(ABdifference/2+cos(45)*(b/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1)))),	 	 sin(45)*(b/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1))),		79,
							-(ABdifference/2+cos(45)*(b/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1)))), 		 sin(45)*(b/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1))), 		79

					add - (ABdifference/2+cos(45)*(b/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1)))),	-sin(45)*(b/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1))),	0
					widthDrawer = ((ABdifference/2+cos(45)*(b/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1))))*2-((numDrawer+1)*.005))/numDrawer
				else
					if b > a then
						resol 3
						prism_  4, heightDrawer,
								-sin(45)*(a/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1))), 	 (ABdifference/2+cos(45)*(a/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1)))), 	79,
								-sin(45)*(a/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1))), 	-(ABdifference/2+cos(45)*(a/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1)))), 	79,
								sin(45)*(a/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1))), 	-(ABdifference/2+cos(45)*(a/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1)))),	79,
								sin(45)*(a/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1))), 	 (ABdifference/2+cos(45)*(a/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1)))), 	79
						add -sin(45)*(a/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1))),		  ABdifference/2+cos(45)*(a/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1))),	thickTabletop
						rotz -90
						widthDrawer = ((ABdifference/2+cos(45)*(a/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1))))*2-((numDrawer+1)*.005))/numDrawer
					endif
				endif
			else
				if a - b > EPS then
					resol 3
					prism_  4, heightDrawer,
							-ABdifference/2, 	-b/2-widthFrame+widthOverhang+widthLeg, 	79,
							 ABdifference/2,	-b/2-widthFrame+widthOverhang+widthLeg, 	79,
							 ABdifference/2,	 b/2+widthFrame-widthOverhang-widthLeg,		79,
							-ABdifference/2, 	 b/2+widthFrame-widthOverhang-widthLeg, 		79
					add -ABdifference/2,-b/2-widthFrame+widthOverhang+widthLeg,	thickTabletop
				else
					if b > a then
						resol 3
						prism_  4, heightDrawer,
								-a/2+widthFrame+widthOverhang+widthLeg, 	 ABdifference/2, 	79,
								-a/2+widthFrame+widthOverhang+widthLeg, 	-ABdifference/2, 	79,
								a/2+widthFrame-widthOverhang-widthLeg, 		-ABdifference/2,	79,
								a/2+widthFrame-widthOverhang-widthLeg, 		 ABdifference/2, 	79
						add -a/2+widthFrame+widthOverhang+widthLeg,ABdifference/2,	thickTabletop
						rotz -90
					endif
				endif
				widthDrawer = (ABdifference/2*2-((numDrawer+1)*.005))/numDrawer
			endif
		endif
	else
		if b > a then rotz 90
		add -(max(a,b)/2-3*widthLeg/2-widthOverhang)*cos(45), -(min(a,b)/2-3*widthLeg/2-widthOverhang)*sin(45), 0
		block (max(a,b)/2-3*widthLeg/2-widthOverhang)*cos(45)*2,	(min(a,b)/2-3*widthLeg/2-widthOverhang)*sin(45)*2,		heightDrawer
		add depthLeg/2,	-.024,	.024
		widthDrawer = ((max(a,b)/2-3*widthLeg/2-widthOverhang)*cos(45)*2-((numDrawer+1)*.005))/numDrawer
	endif

	if iStyleLeg = LEG_ROUND then
		widthDrawer = ((max(a,b)/2-3*widthLeg/2-widthOverhang)*cos(45)*2-((numDrawer+1)*.005))/numDrawer
	endif

	add 0.005, -0.02, -thickTabletop
	for i = 1 to numDrawer
		material dmat
		block widthDrawer,.02,heightDrawer

		if gs_knob_type_m <> 0 then
			material gs_knob_mat
			if iStyleLeg <> LEG_ROUND then
				add widthDrawer/2,0,heightDrawer/2
			else
				add widthDrawer/2, 0, heightDrawer/2
			endif
			if gs_knob_type_m <= 3 then CALL "fa_knobtyp" PARAMETERS all
			if gs_knob_type_m = 4 then
				roty 90
				addz 0.05
				CALL "fa_knobtyp" PARAMETERS all
				del 2
			endif
			if gs_knob_type_m >= 5 then
				roty 90
				addz 0.05
				CALL "fa_knobtyp" PARAMETERS all
				del 2
			endif
			del 1
		endif

		ADDX (widthDrawer+0.005)
	next i
	del numDrawer+2
	if b > a then del 1
endif
del top



! ======================================================================
! Table
! ======================================================================
RESOL 3 * gs_resol
material gs_top_mat
addz zzyzx-thickTabletop

if ABdifference < EPS then
   prism_  2, thickTabletop,
		   0, 0, 979,
		   a/2-widthTabletopFrame, 360, 4079
   if widthTabletopFrame > 0 then
	   material gs_topedge_mat
	   prism_  4, thickTabletopFrame,
				0, 0, 979,
				a/2, 360, 4079,
				0, 0, 979,
				a/2-widthTabletopFrame, 360, 4079
   endif
else
	if iTypeTableEnd = TABLEEND_ARC then
		if a - b > EPS then
			prism_  7, thickTabletop,
					-ABdifference/2, 	-b/2+widthTabletopFrame, 	79,
					ABdifference/2, 	-b/2+widthTabletopFrame, 	79,
					ABdifference/2, 	0, 							979,
					0, 					180, 						4079,
					-ABdifference/2, 	b/2-widthTabletopFrame, 	79,
					-ABdifference/2, 	0, 							979,
					0, 					180, 						4079
			if widthTabletopFrame > 0 then
				material gs_topedge_mat
				prism_  16, thickTabletopFrame,
						-ABdifference/2,	-b/2,	79,
						ABdifference/2,		-b/2,	79,
						ABdifference/2,		0,		979,
						0,					180,	4079,
						-ABdifference/2,	b/2,	79,
						-ABdifference/2,	0,		979,
						0,					180,	4079,
						-ABdifference/2,	-b/2,	-1,
						-ABdifference/2,	-b/2+widthTabletopFrame, 79,
						ABdifference/2,		-b/2+widthTabletopFrame, 79,
						ABdifference/2, 	0,		979,
						0, 					180,	4079,
						-ABdifference/2,	b/2-widthTabletopFrame, 79,
						-ABdifference/2, 	0,		979,
						0,					180,	4079,
						-ABdifference/2, -b/2+widthTabletopFrame, -1
			endif
		else
			prism_  7, thickTabletop,
					-a/2+widthTabletopFrame, ABdifference/2, 79,
					-a/2+widthTabletopFrame, -ABdifference/2, 79,
					0, -ABdifference/2, 979,
					0, 180, 4079,
					a/2-widthTabletopFrame, ABdifference/2, 79,
					0, ABdifference/2, 979,
					0, 180, 4079
			if widthTabletopFrame>0 then
				material gs_topedge_mat
				prism_  16, thickTabletopFrame,
					-a/2, ABdifference/2, 79,
					-a/2, -ABdifference/2, 79,
					0, -ABdifference/2, 979,
					0, 180, 4079,
					a/2, ABdifference/2, 79,
					0, ABdifference/2, 979,
					0, 180, 4079,
					-a/2, ABdifference/2, -1,
					-a/2+widthTabletopFrame, ABdifference/2, 79,
					-a/2+widthTabletopFrame, -ABdifference/2, 79,
					0, -ABdifference/2, 979,
					0, 180, 4079,
					a/2-widthTabletopFrame, ABdifference/2, 79,
					0, ABdifference/2, 979,
					0, 180, 4079,
					-a/2+widthTabletopFrame, ABdifference/2, -1
			endif
		endif
	endif

	if iTypeTableEnd = TABLEEND_ELLIP then
		gosub "elliptic_1"
		prism_  n, thickTabletop,
				get(nsp)
		if widthTabletopFrame > 0 then
			material gs_top_mat
			gosub "elliptic_2"
			tube 4, nn, 0,
				 0, 0, 0,
				 -widthTabletopFrame, 0, 0,
				 -widthTabletopFrame, thickTabletopFrame, 0,
				 0, thickTabletopFrame, 0,
				 get(nsp)
		endif
	endif
endif
del 1

! ==============================================================================
! Frame
! ==============================================================================

material fmat
if iStyleLeg = LEG_RUSTIC then frame=1
if frame=0 or ABS(thickFrame)<EPS then end
addz heightFrame

if iStyleLeg = LEG_RUSTIC then
	del 1
	addz depthFrame+dy/2-thickFrame/2
	if abs(a - b)<EPS then
		fho = (a-2*widthOverhang)*sin(45) +2*0.07 -1.5*widthLeg
		eb=0.05
		dx =(b/2-widthOverhang)*sin(45)*2
	else
		if b - a > EPS then
			fho=ABdifference+dx+2*0.07
			rotz 90
		else		! ABdifference <= 0.5
			fho=ABdifference+2*(min(a,b)/2-widthOverhang)*sin(45)+2*0.07
		endif
	endif
	gosub "frame_rustic"
	if not(ABdifference<EPS) and ABdifference > 0.5 and b>a then del 1
	del 1
else
	if ABdifference < EPS then
		rotz 45

		for i=1 to numLeg
			addx a/2-widthLeg/2-widthLeg/2-widthOverhang

			if numLeg=4 and (iStyleFrame = FRAMESTYLE_STRAIGHT or frame=0) then
				addx -((widthLeg/2+widthLeg/2)*(sqr(2)-1))
				rotz 45+90*not(i%2)
			endif

			if iStyleLeg = LEG_ROUND or iStyleLeg = LEG_CONIC then
				gosub "cut_round"
			endif

			if iStyleLeg = LEG_BLOCK then
				gosub "cut_block"
			endif

			if iStyleLeg = LEG_BALUSTER or iStyleLeg = LEG_DESIGN then
				gosub "cut_design"
			endif

			if numLeg=4 and (iStyleFrame = FRAMESTYLE_STRAIGHT or frame=0) then
				del 2
			endif

			del 1
			rotz 360/numLeg

		next i
		del numLeg

		if iStyleFrame = FRAMESTYLE_STRAIGHT then
			if numLeg = 3 then
				put (a/2-widthOverhang-widthLeg/2)*cos(45), (a/2-widthOverhang-widthLeg/2)*sin(45), 79,
					(a/2-widthOverhang-widthLeg/2)*cos(45+120), (a/2-widthOverhang-widthLeg/2)*sin(45+120), 79,
					(a/2-widthOverhang-widthLeg/2)*cos(45+240), (a/2-widthOverhang-widthLeg/2)*sin(45+240), 79,
					(a/2-widthOverhang-widthLeg/2)*cos(45), (a/2-widthOverhang-widthLeg/2)*sin(45), -1
				rotz 75
			else
				put (a/2-widthOverhang-widthLeg/2)*cos(45), (a/2-widthOverhang-widthLeg/2)*sin(45), 79,
					(a/2-widthOverhang-widthLeg/2)*cos(45+90), (a/2-widthOverhang-widthLeg/2)*sin(45+90), 79,
					(a/2-widthOverhang-widthLeg/2)*cos(45+180), (a/2-widthOverhang-widthLeg/2)*sin(45+180), 79,
					(a/2-widthOverhang-widthLeg/2)*cos(45+270), (a/2-widthOverhang-widthLeg/2)*sin(45+270), 79,
					(a/2-widthOverhang-widthLeg/2)*cos(45), (a/2-widthOverhang-widthLeg/2)*sin(45), -1
				rotz 45
			endif
			gosub "frame_straight"
			del 1
		else						! iStyleFrame = FRAMESTYLE_ARC
			prism_  4, thickFrame,
					0, 0, 979,
					A/2-widthOverhang-2*widthLeg/2, 360, 4079,
					0, 0, 979,
					A/2-widthOverhang-2*widthLeg+widthLeg/2, 360, 4079
		endif

		for x=1 to numLeg
			cutend
			if numLeg = 3 and iStyleFrame = FRAMESTYLE_STRAIGHT then cutend
		next x

		del 1
	else					! ABdifference > EPS
		if iTypeTableEnd = TABLEEND_ARC then
			if numLeg = 4 then
				if ABdifference - 0.5 > EPS then
					if a - b > EPS then
						add -ABdifference/2, -b/2+widthOverhang+3*depthLeg/5, 0
					else
						add -a/2 + widthOverhang + 3*depthLeg/5, -ABdifference/2, 0
					endif
				endif

				for x = 1 to 2
					if ABdifference - 0.5 < EPS then
						rotz 180*(x=2)
						if a - b > EPS then
							addx ABdifference/2
							rotz -45
						else
							addy ABdifference/2
							rotz 45
						endif
					endif

					for y = 1 to 2
						if ABdifference - 0.5 < EPS then
							addx min(a,b)/2 - widthLeg - widthOverhang-((widthLeg) * (sqr(2) - 1))
							rotz 45
						endif
						if iStyleLeg = LEG_ROUND or iStyleLeg = LEG_CONIC then
							gosub "cut_round"
						endif
						if iStyleLeg = LEG_BLOCK then
							if ABdifference - 0.5 <= EPS then
								rotz 90*(y%2)
							endif
							gosub "cut_block"
							if ABdifference - 0.5 <= EPS then del 1
						endif
						if iStyleLeg = LEG_BALUSTER or iStyleLeg = LEG_DESIGN then
							gosub "cut_design"
						endif
						if ABdifference - 0.5 > EPS then
							if a - b > EPS then
								addx ABdifference
							else
								addx a - 2 * (widthOverhang + widthLeg/2) - widthLeg
							endif
						else
							del 2
							rotz 90
						endif
					next y
					if ABdifference - 0.5 > EPS then
						del 2
						if a - b > EPS then
							addy b - 2 * (widthOverhang + widthLeg/2) - widthLeg
						else
							addy ABdifference
						endif
					else
						del 2+2
					endif
				next x
				if ABdifference - 0.5 > EPS then del 2+1
			else
				if numLeg = 3 then
					for i=1 to 3
						if a - b > EPS then
							if ABdifference - 0.5 > EPS then
								rotz -90
							else
								rotz 90
							endif
						endif
						if i=1 then add  min(a,b)/2-widthLeg-widthOverhang, 0, 0
						if i=2 then add -mod_1*(min(a,b)/2-(ABdifference - 0.5 < EPS)*widthLeg-widthOverhang), ABdifference/2+mod_2, 0
						if i=3 then add -mod_1*(min(a,b)/2-(ABdifference - 0.5 < EPS)*widthLeg-widthOverhang), -ABdifference/2-mod_2, 0

						if iStyleLeg = LEG_ROUND or iStyleLeg = LEG_CONIC then
							if ABdifference - 0.5 <= EPS then
								rotz -55*(i=3)-55*(i=2)
							endif
							gosub "cut_round"
							if ABdifference - 0.5 <= EPS then del 1
						endif
						if iStyleLeg = LEG_BLOCK then
							if ABdifference - 0.5 <= EPS then
								rotz 55*(i=3)+125*(i=2)
								addy 0.01
							endif
							gosub "cut_block"
							if ABdifference - 0.5 <= EPS then del 2
						endif
						if iStyleLeg = LEG_BALUSTER or iStyleLeg = LEG_DESIGN then
							gosub "cut_design"
						endif
						del 1
						if a - b > EPS then del 1
					next i
				endif
			endif

			rotz 180*(ABdifference - 0.5 > EPS)
			if iStyleFrame =  FRAMESTYLE_ARC then
				if a - b > EPS then
					prism_  16, thickFrame,
							-ABdifference/2, -b/2+widthOverhang+widthLeg/2, 79,
							ABdifference/2, -b/2+widthOverhang+widthLeg/2, 79,
							ABdifference/2, 0, 979,
							0, 180, 4079,
							-ABdifference/2, b/2-widthOverhang-widthLeg/2, 79,
							-ABdifference/2, 0, 979,
							0, 180, 4079,
							-ABdifference/2, -b/2+widthOverhang+widthLeg/2, -1,

							-ABdifference/2, -b/2+widthOverhang+3*widthLeg/2, 79,
							ABdifference/2, -b/2+widthOverhang+3*widthLeg/2, 79,
							ABdifference/2, 0, 979,
							0, 180, 4079,
							-ABdifference/2, b/2-widthOverhang-3*widthLeg/2, 79,
							-ABdifference/2, 0, 979,
							0, 180, 4079,
							-ABdifference/2, -b/2+widthOverhang+3*widthLeg/2, -1
				else						! b - a > EPS
					prism_  16, thickFrame,
							-a/2+widthOverhang+widthLeg/2, ABdifference/2, 79,
							-a/2+widthOverhang+widthLeg/2, -ABdifference/2, 79,
							0, -ABdifference/2, 979,
							0, 180, 4079,
							a/2-widthOverhang-widthLeg/2, ABdifference/2, 79,
							0, ABdifference/2, 979,
							0, 180, 4079,
							-a/2+widthOverhang+widthLeg/2, ABdifference/2, -1,

							-a/2+widthOverhang+3*widthLeg/2, ABdifference/2, 79,
							-a/2+widthOverhang+3*widthLeg/2, -ABdifference/2, 79,
							0, -ABdifference/2, 979,
							0, 180, 4079,
							a/2-widthOverhang-3*widthLeg/2, ABdifference/2, 79,
							0, ABdifference/2, 979,
							0, 180, 4079,
							-a/2+widthOverhang+3*widthLeg/2, ABdifference/2, -1
				endif
			else				! iStyleFrame = FRAMESTYLE_STRAIGHT
				if numLeg = 4 then
					if ABdifference>0.5 then
						if a - b > EPS then
							PUT		-ABdifference/2-widthLeg/2, -b/2+widthOverhang+widthLeg/2, 79,
									ABdifference/2+widthLeg/2, -b/2+widthOverhang+widthLeg/2, 79,
									ABdifference/2+widthLeg/2, b/2-widthOverhang-widthLeg/2, 79,
									-ABdifference/2-widthLeg/2, b/2-widthOverhang-widthLeg/2, 79,
									-ABdifference/2-widthLeg/2, -b/2+widthOverhang+widthLeg/2, -1
						else					! b - a > EPS
							PUT		-a/2+widthOverhang+widthLeg/2, ABdifference/2+widthLeg/2, 79,
									-a/2+widthOverhang+widthLeg/2, -ABdifference/2-widthLeg/2, 79,
									a/2-widthOverhang-widthLeg/2, -ABdifference/2-widthLeg/2, 79,
									a/2-widthOverhang-widthLeg/2, ABdifference/2+widthLeg/2, 79,
									-a/2+widthOverhang+widthLeg/2, ABdifference/2+widthLeg/2, -1
						endif
					else
						if a - b > EPS then
							PUT		-ABdifference/2-(b/2-widthOverhang-widthLeg/2)*sin(45), -(b/2-widthOverhang-widthLeg/2)*sin(45), 79,
									ABdifference/2+(b/2-widthOverhang-widthLeg/2)*sin(45), -(b/2-widthOverhang-widthLeg/2)*sin(45), 79,
									ABdifference/2+(b/2-widthOverhang-widthLeg/2)*sin(45), (b/2-widthOverhang-widthLeg/2)*sin(45), 79,
									-ABdifference/2-(b/2-widthOverhang-widthLeg/2)*sin(45), (b/2-widthOverhang-widthLeg/2)*sin(45), 79,
									-ABdifference/2-(b/2-widthOverhang-widthLeg/2)*sin(45), -(b/2-widthOverhang-widthLeg/2)*sin(45), -1
						else					! b - a > EPS
							PUT		-(a/2-widthOverhang-widthLeg/2)*sin(45), ABdifference/2+(a/2-widthOverhang-widthLeg/2)*sin(45), 79,
									-(a/2-widthOverhang-widthLeg/2)*sin(45), -ABdifference/2-(a/2-widthOverhang-widthLeg/2)*sin(45), 79,
									(a/2-widthOverhang-widthLeg/2)*sin(45), -ABdifference/2-(a/2-widthOverhang-widthLeg/2)*sin(45), 79,
									(a/2-widthOverhang-widthLeg/2)*sin(45), ABdifference/2+(a/2-widthOverhang-widthLeg/2)*sin(45), 79,
									-(a/2-widthOverhang-widthLeg/2)*sin(45), ABdifference/2+(a/2-widthOverhang-widthLeg/2)*sin(45), -1
						endif
					endif
				else
					if numLeg = 3 then
						if ABdifference>0.5 then
							PUT		min(a,b)/2-widthLeg-widthOverhang, 0, 79,
									-(min(a,b)/2-widthLeg-widthOverhang), ABdifference/2+widthLeg/2, 79,
									-(min(a,b)/2-widthLeg-widthOverhang), -ABdifference/2-widthLeg/2, 79,
									min(a,b)/2-widthLeg-widthOverhang, 0, -1
						else
							mod_2 = SIN(60)*(min(a,b)/2-widthLeg/2-widthOverhang)
							if a - b > EPS then

								PUT		-widthLeg/4, min(a,b)/2-widthLeg-widthOverhang, 79,
										 ABdifference/2+mod_2, -mod_1*(min(a,b)/2-widthOverhang), 79,
										-ABdifference/2-mod_2, -mod_1*(min(a,b)/2-widthOverhang), 79,
										-widthLeg/4, min(a,b)/2-widthLeg-widthOverhang, -1
							else
								PUT		min(a,b)/2-widthLeg-widthOverhang, widthLeg/4, 79,
										-mod_1*(min(a,b)/2-widthOverhang), ABdifference/2+mod_2, 79,
										-mod_1*(min(a,b)/2-widthOverhang), -ABdifference/2-mod_2, 79,
										min(a,b)/2-widthLeg-widthOverhang, widthLeg/4, -1
							endif
						endif
					endif
				endif
			endif
			del 1

			if iStyleFrame = FRAMESTYLE_STRAIGHT then
				if numLeg=3 and a - b > EPS and ABdifference > 0.5 then
					rotz -90
				endif
				gosub "frame_straight"
				if numLeg=3 and a - b > EPS and ABdifference > 0.5 then del 1
			endif

			for x=1 to numLeg
				cutend
				if numLeg = 3 and iStyleFrame = FRAMESTYLE_STRAIGHT then cutend
			next x
		else			! iTypeTableEnd = TABLEEND_ELLIP
			! --- cut ---
			if iStyleLeg = LEG_ROUND or iStyleLeg = LEG_CONIC or iStyleLeg = LEG_BLOCK then
				for i=1 to numLeg
					if iStyleLeg = LEG_BALUSTER or iStyleLeg = LEG_DESIGN then ellxy = widthLeg/2/2
					add (a/2 - 5 * widthLeg/4 - widthOverhang - ellxy) * cos(45 + (i - 1) * (360/numLeg)),
						(b/2 - 5 * widthLeg/4 - widthOverhang - ellxy) * sin(45 + (i - 1) * (360/numLeg)), 0
					if iStyleLeg = LEG_ROUND or iStyleLeg = LEG_CONIC then
						gosub "cut_round"
					endif
					if iStyleLeg = LEG_BLOCK then
						if ABdifference < EPS then
							if numLeg = 4 then rotz 45*(i%2)-45*not(i%2)
						else
							if numLeg = 3 then
								rotz 45*(i=1)+105*(i=3)-15*(i=2)
							else
								rotz 90
							endif
						endif
						gosub "cut_block"
						if ABdifference < EPS then
							if numLeg = 4 then del 1
						else
							del 1
						endif
					endif
					del 1
				next i
			endif

			ellxy=0
			if iStyleLeg = LEG_BALUSTER or iStyleLeg = LEG_DESIGN then
				ellxy=widthLeg/2/2
				for i=1 to numLeg
					add (a/2 - 5 * widthLeg/4 - widthOverhang - ellxy) * cos(45 + (i - 1) * (360/numLeg)),
						(b/2 - 5 * widthLeg/4 - widthOverhang - ellxy) * sin(45 + (i - 1) * (360/numLeg)), 0
					gosub "cut_design"
					del 1
				next i
			endif
			! --- cutend ---

			if iStyleFrame = FRAMESTYLE_STRAIGHT then
				if numLeg = 4 then
					put (a/2-5*widthLeg/4-widthOverhang-ellxy)*cos(45)+depthFrame/2, (b/2-5*widthLeg/4-widthOverhang-ellxy)*sin(45)+depthFrame/2, 79,
						(a/2-5*widthLeg/4-widthOverhang-ellxy)*cos(45+90)-depthFrame/2, (b/2-5*widthLeg/4-widthOverhang-ellxy)*sin(45+90)+depthFrame/2, 79,
						(a/2-5*widthLeg/4-widthOverhang-ellxy)*cos(45+180)-depthFrame/2, (b/2-5*widthLeg/4-widthOverhang-ellxy)*sin(45+180)-depthFrame/2, 79,
						(a/2-5*widthLeg/4-widthOverhang-ellxy)*cos(45+270)+depthFrame/2, (b/2-5*widthLeg/4-widthOverhang-ellxy)*sin(45+270)-depthFrame/2, 79,
						(a/2-5*widthLeg/4-widthOverhang-ellxy)*cos(45)+depthFrame/2, (b/2-5*widthLeg/4-widthOverhang-ellxy)*sin(45)+depthFrame/2, -1
				else		! if numLeg = 3
					ellxy = 0
					if iStyleLeg = LEG_BALUSTER or iStyleLeg = LEG_DESIGN then ellxy = widthLeg/4
					put  (a/2-5*widthLeg/4-widthOverhang-ellxy)*cos(45),     (b/2-5*widthLeg/4-widthOverhang-ellxy)*sin(45), 79,
						 (a/2-5*widthLeg/4-widthOverhang-ellxy)*cos(45+120), (b/2-5*widthLeg/4-widthOverhang-ellxy)*sin(45+120), 79,
						 (a/2-5*widthLeg/4-widthOverhang-ellxy)*cos(45+240), (b/2-5*widthLeg/4-widthOverhang-ellxy)*sin(45+240), 79,
						 (a/2-5*widthLeg/4-widthOverhang-ellxy)*cos(45),     (b/2-5*widthLeg/4-widthOverhang-ellxy)*sin(45), -1
				endif
				gosub "frame_straight"
			else				! iStyleFrame =  FRAMESTYLE_ARC
				gosub 20
				tube 4, nf, 0,
					 -widthLeg/4-widthLeg/4, 0, 0,
					 -widthLeg/4-widthLeg/4, thickFrame, 0,
					 widthLeg/4+widthLeg/4, thickFrame, 0,
					 widthLeg/4+widthLeg/4, 0, 0,
					 get(nsp)
			endif

			for x=1 to numLeg
				cutend
				if numLeg = 3 and iStyleFrame = FRAMESTYLE_STRAIGHT then cutend
			next x

		endif
	endif
endif

if iStyleLeg <> LEG_RUSTIC then del 1

end


! ==============================================================================
! Subroutines
! ==============================================================================


! ------------------------------------------------------------------------------
"elliptic_1":
! ------------------------------------------------------------------------------
	n=0
	for x=0 to 360 step 7.5
		n=n+1
		put (a/2-widthTabletopFrame)*cos(x), (b/2-widthTabletopFrame)*sin(x), 79
	next x
	return

! ------------------------------------------------------------------------------
"elliptic_2":
! ------------------------------------------------------------------------------
	nn=0
	for x=0 to 375 step 7.5
		nn=nn+1
		put (a/2-widthTabletopFrame)*cos(x), (b/2-widthTabletopFrame)*sin(x), 0, 0
	next x
	return

20:
	nf=0
	for x=0 to 375 step 7.5
		nf=nf+1
		put (a/2-5*widthLeg/4-widthOverhang-ellxy)*cos(x), (b/2-5*widthLeg/4-widthOverhang-ellxy)*sin(x), 0, 0
	next x
	return

! ------------------------------------------------------------------------------
"rustic":
! ------------------------------------------------------------------------------
	prism_  25, widthLeg,
			0, 0, 79,
			0, 4*eh, 79,
			2*eh, -90, 2079,
			2*eh, 90, 2079,
			4*eb, 12*eh, 79,
			2*eh, 90, 2079,
			2*eh, -90, 2079,
			0, 20*eh, 79,
			20*eb, 20*eh, 79,
			20*eb, 16*eh, 79,
			2*eh, -90, 2079,
			2*eh, 90, 2079,
			16*eb, 8*eh, 79,
			2*eh, 90, 2079,
			2*eh, -90, 2079,
			20*eb, 0, 79,
			12*eb, 0, 79,
			10*eb, 0, 979,
			2*eb, 180, 4079,
			0, 0, -1,
			10*eb-eb/2.5, 10*eh-thickFrame/2/dy, 79,
			10*eb+eb/2.5, 10*eh-thickFrame/2/dy, 79,
			10*eb+eb/2.5, 10*eh+thickFrame/2/dy, 79,
			10*eb-eb/2.5, 10*eh+thickFrame/2/dy, 79,
			10*eb-eb/2.5, 10*eh-thickFrame/2/dy, -1
	add -0.03/dx, -0.03/dy, -0.01
	prism_  7, 0.02+widthLeg,
			0, 0, 15,
			dt, 0, 15,
			dt, 0.02/dy, 15,
			dt-0.01/dx, 0.03/dy, 15,
			0.01/dx, 0.03/dy, 15,
			0, 0.02/dy, 15,
			0, 0, -1
	del 1
	return

! ------------------------------------------------------------------------------
"frame_rustic":
! ------------------------------------------------------------------------------
	material gs_leg_mat
	prism_  15, thickFrame,
			-fho/2, -eb/2.5*dx, 15,
			fho/2, -eb/2.5*dx, 15,
			fho/2, eb/2.5*dx, 15,
			-fho/2, eb/2.5*dx, 15,
			-fho/2, -eb/2.5*dx, -1,
			-fho/2+0.04, -eb/5*dx, 15,
			-fho/2+0.07, -eb/5*dx, 15,
			-fho/2+0.07, eb/5*dx, 15,
			-fho/2+0.04, eb/5*dx, 15,
			-fho/2+0.04, -eb/5*dx, -1,
			fho/2-0.07, -eb/5*dx, 15,
			fho/2-0.04, -eb/5*dx, 15,
			fho/2-0.04, eb/5*dx, 15,
			fho/2-0.07, eb/5*dx, 15,
			fho/2-0.07, -eb/5*dx, -1
	add -0.02, 0, -0.03
	prism_  4, 2*0.03+thickFrame,
			-fho/2+0.04, -eb/5*dx, 15,
			-fho/2+0.07, -eb/5*dx, 15,
			-fho/2+0.07, eb/5*dx, 15,
			-fho/2+0.04, eb/5*dx, 15
	addx 0.02*2
	prism_  4, 2*0.03+thickFrame,
			fho/2-0.07, -eb/5*dx, 15,
			fho/2-0.04, -eb/5*dx, 15,
			fho/2-0.04, eb/5*dx, 15,
			fho/2-0.07, eb/5*dx, 15
	del 2
	return


! ------------------------------------------------------------------------------
"solidLeg":
! ------------------------------------------------------------------------------
	block widthLeg, depthLeg, zzyzx-thickTabletop
	return

! ------------------------------------------------------------------------------
"folding":
! ------------------------------------------------------------------------------
	alfa = -(90-ATN (zzyzx/dx))
	legHeight = zzyzx

	rotx 180
	cutplane
	del 1

	addz legHeight-thickTabletop
	cutplane
	del 1

	gosub "foldingLeg"

	rotz 180
	addx - widthLeg
	addy -dx
	gosub "foldingLeg"
	del 3

	cutend
	cutend
return

! ------------------------------------------------------------------------------
"foldingLeg":
! ------------------------------------------------------------------------------
	beta = ATN (depthLeg/ cos(alfa)/zzyzx)
	rotx alfa+beta
	block widthLeg, depthLeg, dx/abs(sin(alfa))+abs(tan(alfa))*depthLeg
	del 1
return

! ------------------------------------------------------------------------------
"baluster":
! ------------------------------------------------------------------------------
	roty -90
	eh=0.05*(zzyzx-thickTabletop-0.07-hh)
	revolve 22, 360, 3,
			0, 0.02, 0,
			2*eh, 0.02, 0,
			3*eh, 0.023, 1,
			4*eh, 0.028, 1,
			5*eh, 0.031, 1,
			6*eh, 0.033, 1,
			7*eh, 0.033, 1,
			8*eh, 0.03, 1,
			9*eh, 0.026, 1,
			10*eh, 0.018, 0,
			10.5*eh, 0.0235, 1,
			11*eh, 0.026, 1,
			11.5*eh, 0.0235, 1,
			12*eh, 0.018, 0,
			13*eh, 0.026, 1,
			14*eh, 0.03, 1,
			15*eh, 0.033, 1,
			16*eh, 0.033, 1,
			17*eh, 0.031, 1,
			18*eh, 0.028, 1,
			19*eh, 0.023, 1,
			20*eh, 0.02, 0
	del 1
	add -widthLeg/2, -widthLeg/2, (zzyzx-thickTabletop-0.07-hh)
	block widthLeg, widthLeg, 0.07
	del 1
	return

! ------------------------------------------------------------------------------
"design":
! ------------------------------------------------------------------------------
	eh=0.05*(zzyzx-thickTabletop-0.07)
	if (x=2 or x=4) and ABdifference<EPS and numLeg<>3 then rotz 90
	if (x=1 or x=3) and ABdifference<EPS and numLeg<>3 and iStyleFrame =  FRAMESTYLE_ARC then rotz 90
	if numLeg=3 then rotz 90
	if x=2 and ABdifference>EPS then rotz 180
	if ABdifference>EPS and iTypeTableEnd = TABLEEND_ARC and ABdifference<=0.5 then rotz -90
	if ABdifference>EPS and iTypeTableEnd = TABLEEND_ARC and ABdifference<=0.5 and (x=1 or x=3) then rotz 180
	if ABdifference>EPS and iTypeTableEnd = TABLEEND_ARC and ABdifference<=0.5 and (x=1 or x=3) and iStyleFrame = FRAMESTYLE_STRAIGHT then rotz -90
	if ABdifference>EPS and iTypeTableEnd = TABLEEND_ELLIP and x=1 then rotz 180

	sweep   4, 20, 0, 1.025, 1+2+4+16+32,
			-widthLeg/4, -widthLeg/4, 0,
			widthLeg/4, -widthLeg/4, 0,
			widthLeg/4, widthLeg/4, 0,
			-widthLeg/4, widthLeg/4, 0,

			0, 0.00, -20*eh,
			0, 0.00, -19*eh,
			0, 0.00, -18*eh,
			0, 0.005, -17*eh,
			0, 0.009, -16*eh,
			0, 0.013, -15*eh,
			0, 0.015, -14*eh,
			0, 0.013, -13*eh,
			0, 0.009, -12*eh,
			0, 0.000, -11*eh,
			0, -0.009, -10*eh,
			0, -0.018, -9*eh,
			0, -0.023, -8*eh,
			0, -0.025, -7*eh,
			0, -0.023, -6*eh,
			0, -0.018, -5*eh,
			0, -0.009, -4*eh,
			0, -0.005, -3*eh,
			0, 0.00, -2*eh,
			0, 0, 0
	if (x=2 or x=4) and ABdifference<EPS and numLeg<>3 then del 1
	if (x=1 or x=3) and ABdifference<EPS and numLeg<>3 and iStyleFrame =  FRAMESTYLE_ARC then del 1
	if numLeg=3 then del 1
	if x=2 and ABdifference>EPS then del 1
	if ABdifference>EPS and iTypeTableEnd = TABLEEND_ARC and ABdifference<=0.5 then del 1
	if ABdifference>EPS and iTypeTableEnd = TABLEEND_ARC and ABdifference<=0.5 and (x=1 or x=3) then del 1
	if ABdifference>EPS and iTypeTableEnd = TABLEEND_ARC and ABdifference<=0.5 and (x=1 or x=3) and iStyleFrame = FRAMESTYLE_STRAIGHT then del 1
	if ABdifference>EPS and iTypeTableEnd = TABLEEND_ELLIP and x=1 then del 1

	add -widthLeg/2, -widthLeg/2, (zzyzx-thickTabletop-0.07-hh)
	block 2*widthLeg/2, 2*widthLeg/2, 0.07
	del 1
	return

! ------------------------------------------------------------------------------
"cut_round":
! ------------------------------------------------------------------------------
	if ABdifference-0.5 >= EPS and iTypeTableEnd = TABLEEND_ARC and i <> 1 and numLeg = 3 then
		addx widthLeg
	endif
	cutpolya 2, 1, 0,
			0, 0, 915+64,
			widthLeg/2, 360, 4015
	if ABdifference-0.5 >= EPS and iTypeTableEnd = TABLEEND_ARC and i <> 1 and numLeg = 3 then del 1
	if numLeg = 3 and iStyleFrame = FRAMESTYLE_STRAIGHT then
		if i = 1 or ABdifference < EPS then
			roty 90
			xxx1 = 0
			xxx2 = -thickFrame
			if ABdifference >= EPS and iTypeTableEnd = TABLEEND_ELLIP then rotx -55
		else
			if i = 2 or (ABdifference - 0.5 >= EPS and iTypeTableEnd <> TABLEEND_ELLIP) then
				roty -90
				xxx1 = thickFrame
				xxx2 = 0
				if ABdifference - 0.5 >= EPS and iTypeTableEnd = TABLEEND_ARC then
					addz -widthLeg
					rotx 30*(i=3)-30*(i=2)
				endif
			else
				roty 90
				xxx1 = 0
				xxx2 = -thickFrame
				rotx 55
			endif
		endif
		cutpolya 4, 1, 0.0001,
				 xxx1,  thickFrame, 15,
				 xxx1, -thickFrame, 15,
				 xxx2, -thickFrame, 15,
				 xxx2,  thickFrame, 15
		if i = 1 or ABdifference < EPS then
			if ABdifference >= EPS and iTypeTableEnd = TABLEEND_ELLIP then del 1
		else
			if i = 2 or (ABdifference - 0.5 >= EPS and iTypeTableEnd <> TABLEEND_ELLIP) then
				if ABdifference - 0.5 >= EPS and iTypeTableEnd = TABLEEND_ARC then del 2
			else
				del 1
			endif
		endif
		del 1
	endif
return


! ------------------------------------------------------------------------------
"cut_block":
! ------------------------------------------------------------------------------

	if numLeg = 3 then
		if ABdifference-0.5 >= EPS and iTypeTableEnd = TABLEEND_ARC and i <> 1 then
			addx widthLeg
		endif
	endif
	cutpolya 4, 1, 0,
			-widthLeg/2, -depthLeg/2, 15,
			-widthLeg/2,  depthLeg/2, 15,
			 widthLeg/2,  depthLeg/2, 15,
			 widthLeg/2, -depthLeg/2, 15
	if numLeg = 3 then
		if ABdifference-0.5 >= EPS and iTypeTableEnd = TABLEEND_ARC and i <> 1 and numLeg = 3 then del 1
	endif
	if numLeg = 3 and iStyleFrame = FRAMESTYLE_STRAIGHT then
		if i = 1 or ABdifference < EPS then
			roty 90
			xxx1 = 0
			xxx2 = -thickFrame
		else
			if i = 2 and ABdifference-0.5 < EPS and iTypeTableEnd = TABLEEND_ARC then
				roty 90
				xxx1 = 0
				xxx2 = -thickFrame
			else
				roty -90
				xxx1 = thickFrame
				xxx2 = 0
				if ABdifference-0.5 >= EPS and iTypeTableEnd = TABLEEND_ARC then
					addz -widthLeg
				endif
			endif
		endif
		cutpolya 4, 1, 0.0001,
				 xxx1,  thickFrame, 15,
				 xxx1, -thickFrame, 15,
				 xxx2, -thickFrame, 15,
				 xxx2,  thickFrame, 15
		if ABdifference-0.5 >= EPS and iTypeTableEnd = TABLEEND_ARC and i<>1 then del 1
		del 1
	endif
return


! ------------------------------------------------------------------------------
"cut_design":
! ------------------------------------------------------------------------------
	if ABdifference-0.5 >= EPS then
		if iTypeTableEnd = TABLEEND_ARC and i <> 1 and numLeg = 3 then
			addx widthLeg
		endif
	else
		if ABdifference < EPS then
			rotz 45
		else
			rotz (30*(i=2)+150*(i=3)+90*(i=1))*(iStyleLeg <> LEG_BALUSTER)*(iTypeTableEnd = TABLEEND_ARC)
		endif
	endif
	cutpolya 4, 1, 0,
			-widthLeg/2, -widthLeg/2, 15,
			-widthLeg/2, widthLeg/2, 15,
			widthLeg/2, widthLeg/2, 15,
			widthLeg/2, -widthLeg/2, 15
	if ABdifference-0.5 >= EPS then
		if iTypeTableEnd = TABLEEND_ARC and i <> 1 and numLeg = 3 then del 1
	else
		del 1
	endif
	if numLeg = 3 and iStyleFrame = FRAMESTYLE_STRAIGHT then
		if i = 1 or ABdifference < EPS then
			roty 90
			xxx1 = 0
			xxx2 = -thickFrame
			if ABdifference >= EPS then
				if iTypeTableEnd = TABLEEND_ELLIP then
					rotx -45
				endif
			endif
		else
			if i = 2 then
				roty -90
				xxx1 = thickFrame
				xxx2 = 0
				if iTypeTableEnd = TABLEEND_ELLIP then rotx -20
				if iTypeTableEnd = TABLEEND_ARC then
					if ABdifference - 0.5 < EPS then
						rotx -90
					else
						rotx -40
						addz -depthLeg/2
					endif
				endif
			else
				roty 90
				xxx1 = 0
				xxx2 = -thickFrame
				if iTypeTableEnd = TABLEEND_ELLIP then rotx 75
				if iTypeTableEnd = TABLEEND_ARC then
					if ABdifference - 0.5 < EPS then
						rotx 90
					else
						rotx 140
						addz -depthLeg/2
					endif
				endif
			endif
		endif
		cutpolya 4, 1, 0.0001,
				 xxx1,  thickFrame, 15,
				 xxx1, -thickFrame, 15,
				 xxx2, -thickFrame, 15,
				 xxx2,  thickFrame, 15
		del 1
		if i = 1 and ABdifference >= EPS and iTypeTableEnd = TABLEEND_ELLIP then del 1
		if i <> 1 and ABdifference >= EPS and iTypeTableEnd = TABLEEND_ELLIP then del 1
		if i <> 1 and ABdifference >= EPS and iTypeTableEnd = TABLEEND_ARC then del 1
		if i <> 1 and ABdifference - 0.5 >= EPS and iTypeTableEnd = TABLEEND_ARC then del 1
	endif
return


! ------------------------------------------------------------------------------
"frame_straight":
! ------------------------------------------------------------------------------

	dim origPoly[][3]
	for i = 1 to NSP/3
		origPoly[i][1] = get(1)
		origPoly[i][2] = get(1)
		origPoly[i][3] = get(1)
	next i

	! --- Prepare addon and starting containers --------------------------------

	ch = initaddonscope ("PolyOperations", "", "")

	preparefunction ch, "CreateContainer", "mySourceContainer", ""
	preparefunction ch, "CreateContainer", "myDestinationContainer", ""

	preparefunction ch, "SetSourceContainer",       "mySourceContainer", ""
	preparefunction ch, "SetDestinationContainer",  "myDestinationContainer", ""

	! --- Store original polygon -----------------------------------------------

	nVertices = 0
	nContours = 0
	dim vertArr[][3]
	dim inhEdgeInfos[]
	dim contArr[]
	defaultInhEdgeInfo = 0

	for i = 1 to vardim1(origPoly)
		vertArr[i][1]	= origPoly[i][1]
		vertArr[i][2]	= origPoly[i][2]
		vertArr[i][3]	= 0

		nVertices		= nVertices + 1

		inhEdgeInfos[i] = 0

		if origPoly[i][3] < -EPS then
			nContours = nContours + 1
			contArr[nContours] = nVertices
		endif
	next i

	nContours = max(nContours, 1)		! if polygon was not closed

	preparefunction ch, "Store", "OrigPoly", nVertices, nContours, vertArr, contArr, defaultInhEdgeInfo, inhEdgeInfos

	! --- Offset poly ----------------------------------------------------------

	for ijk = 1 to nContours
		dim srcPolyIDArr[]
		numPoly = callfunction(ch, "GetSourcePolygons", "", srcPolyIDArr)

		if ijk = 1 then
			iSign = -1
		else
			iSign = 1
		endif
		preparefunction ch, "OffsetParams", "", ijk, iSign * depthFrame

		dim tempResPolyIDArr[]
		for iii = 1 to numPoly
			tempNumPoly = callfunction(ch, "ResizeContour", srcPolyIDArr[iii], tempResPolyIDArr)
		next iii

		if ijk <> nContours then
			preparefunction ch, "DeleteContainer", prevSourceContainer, ""
			preparefunction ch, "SetSourceContainer", lastDestContainer, ""

			prevSourceContainer = lastDestContainer

			nCont = nCont + 1
			lastDestContainer = "Container " + STR(nCont, 1, 0)
			preparefunction ch, "CreateContainer",		lastDestContainer, ""
			preparefunction ch, "SetDestinationContainer",	lastDestContainer, ""
		endif
	next ijk


	! --- Get result polygons --------------------------------------------------

	dim resPolyIDArr[]
	numPoly = callfunction(ch, "GetDestinationPolygons", "", resPolyIDArr)

	dim resultPoly[][3]
	for iii = 1 to numPoly
		polygonID = resPolyIDArr[iii]
		_status = 15
		gosub "getGDLpolygonFromAddon"

		actIdx = vardim1(resultPoly)
		ijk = 1
		for ii = 1 to NSP step 3
			resultPoly[actIdx + ijk][1] = GET(1)
			resultPoly[actIdx + ijk][2] = GET(1)
			resultPoly[actIdx + ijk][3] = GET(1)

			ijk = ijk +1
		next ii
	next iii

	! --- Close addon ----------------------------------------------------------

	closeaddonscope ch

	! Draw resulting prism ------------------------------------------------------

	for i = 1 to vardim1(origPoly)
		put origPoly[i][1], origPoly[i][2], origPoly[i][3]
	next i
	if abs(origPoly[vardim1(origPoly)][3] + 1) > EPS then
		put origPoly[1][1], origPoly[1][2], -1
	endif

	if vardim1(resultPoly) > EPS then
		for i = 1 to vardim1(resultPoly)
			put resultPoly[i][1], resultPoly[i][2], resultPoly[i][3]
		next i
		if abs(resultPoly[vardim1(resultPoly)][3] + 1) > EPS then
			put resultPoly[1][1], resultPoly[1][2], -1
		endif
	endif

	prism_ NSP/3, thickFrame,
			get(NSP)

return


! ------------------------------------------------------------------------------
1000:
! ------------------------------------------------------------------------------
	roty 45
	gosub 5000
	del 1
return


! ------------------------------------------------------------------------------
2000:
! ------------------------------------------------------------------------------
	gosub 5000
return


! ------------------------------------------------------------------------------
5000:
! ------------------------------------------------------------------------------
	vert 0, 0, 0
	vert 1, 0, 0
	vert 0, 1, 0
	vert 0, 0, 1

	coor 2, -1, -2, -3, -4

	base
	body -1
	return
return


! ==============================================================================
! Get GDL Polygon
! ------------------------------------------------------------------------------
! Input variables:
!	polygonID:			Polygon index
!   _status:			default status
!
! Returned variables:
!	GDL stack:			GDL polygon
! ==============================================================================
"getGDLpolygonFromAddon":

	dim resVertices[]
	numVertices = callfunction(ch, "GETVERTICES", polygonID, resVertices)
	numVertices = numVertices / 3

	dim contArr[]
	numContours = callfunction(ch, "GETCONTOURENDS", polygonID, contArr)

	for contIndex = 1 to numContours

		if contIndex = 1 then
			begIdx = 0
		else
			begIdx = contArr[contIndex] - 1
		endif
		if contIndex = numContours then
			endIdx = numVertices - 1
		else
			endIdx = contArr[contIndex + 1] - 2
		endif

		bClosed = 0
		bStartWithLast = 0

		index = endIdx * 3
		ac2gdl_lpx = resVertices[index + 1]
		ac2gdl_lpy = resVertices[index + 2]
		ac2gdl_lpa = resVertices[index + 3]

		if abs(ac2gdl_lpa) > EPS then
			put ac2gdl_lpx, ac2gdl_lpy, _status
			bStartWithLast = 1
		endif

		for vertIndex = begIdx to endIdx
			index = vertIndex * 3
			ac2gdl_px = resVertices[index + 1]
			ac2gdl_py = resVertices[index + 2]
			ac2gdl_pa = resVertices[index + 3]

			if vertIndex = begIdx then
				if bStartWithLast then
					ac2gdl_spx = ac2gdl_lpx
					ac2gdl_spy = ac2gdl_lpy
				else
					ac2gdl_spx = ac2gdl_px
					ac2gdl_spy = ac2gdl_py
				endif
			endif

			if abs(ac2gdl_lpa) > EPS then
				ac2gdl_mx = (ac2gdl_px + ac2gdl_lpx) / 2
				ac2gdl_my = (ac2gdl_py + ac2gdl_lpy) / 2
				ac2gdl_ratio = 1 / 2 / tan (ac2gdl_lpa / 2)

				ac2gdl_cx = ac2gdl_mx - ac2gdl_ratio * (ac2gdl_py - ac2gdl_lpy)	! Arc center
				ac2gdl_cy = ac2gdl_my + ac2gdl_ratio * (ac2gdl_px - ac2gdl_lpx)

				put ac2gdl_cx,	ac2gdl_cy,	900 + _status,
					0,			ac2gdl_lpa,	400 + _status
			endif

			if vertIndex > begIdx & abs(ac2gdl_spx - ac2gdl_px) < EPS & abs(ac2gdl_spy - ac2gdl_py) < EPS then
				put ac2gdl_px, ac2gdl_py, -1
				bClosed = 1
			else
				if vertIndex < endIdx | not(bStartWithLast) then
					put ac2gdl_px, ac2gdl_py, _status
				endif
			endif

			ac2gdl_lpx = ac2gdl_px
			ac2gdl_lpy = ac2gdl_py
			ac2gdl_lpa = ac2gdl_pa
		next vertIndex

		if not(bClosed) & numContours > 1 then	! Close the polygon if it has holes
			put ac2gdl_spx, ac2gdl_spy, -1
		endif

	next contIndex
return
