
! ======================================================================
! SCALE
! ======================================================================

call "2dDetailLevel" parameters gs_detlevel_2D_m = gs_detlevel_2D_m,
				returned_parameters det2D

! === Minimal Space and Hotspots ===
unID = 1

if bOttoman then
	add2 - A / 2, - ottomanWidth - disOttomanChair
	DRAWINDEX 1
		call "fa_minimalspace" parameters all	MSType	= 3,
												unID	= 4000,
												A		= A, 
												B		= chairWidth + ottomanWidth + disOttomanChair
	del 1

	hotspot2 0, 	0, 					unID, disOttomanChair, 1 + 128	: unID = unID + 1
	hotspot2 0, 	- disOttomanChair, 	unID, disOttomanChair, 2		: unID = unID + 1
	hotspot2 0, 	chairWidth, 		unID, disOttomanChair, 3		: unID = unID + 1


	hotspot2 ottomanDepth / 2, - disOttomanChair, 					unID, ottomanWidth, 1 + 128 	: unID = unID + 1
	hotspot2 ottomanDepth / 2, - ottomanWidth - disOttomanChair, 	unID, ottomanWidth, 2 			: unID = unID + 1
	hotspot2 ottomanDepth / 2, 1,									unID, ottomanWidth, 3	 		: unID = unID + 1

	hotspot2 0,						- ottomanWidth - disOttomanChair, 	unID, halfOttomanDepth, 1 + 128, 	ottomanDepth  	: unID = unID + 1
	hotspot2 - ottomanDepth / 2, 	- ottomanWidth - disOttomanChair, 	unID, halfOttomanDepth, 2, 			ottomanDepth  			: unID = unID + 1
	hotspot2 ottomanDepth / 2, 		- ottomanWidth - disOttomanChair,	unID, halfOttomanDepth, 3, 			ottomanDepth 	 		: unID = unID + 1


	hotspot2 ottomanDepth / 2, 	- disOttomanChair, 					unID, ottomanWidth, 1 + 128 	: unID = unID + 1
	hotspot2 ottomanDepth / 2, 	- ottomanWidth - disOttomanChair, 	unID, ottomanWidth, 2 			: unID = unID + 1
	hotspot2 ottomanDepth / 2, 	0,									unID, ottomanWidth, 3	 		: unID = unID + 1

	hotspot2 0, 					- ottomanWidth - disOttomanChair, 	unID, halfOttomanDepth, 1 + 128, 	ottomanDepth  	: unID = unID + 1
	hotspot2 ottomanDepth / 2, 		- ottomanWidth - disOttomanChair, 	unID, halfOttomanDepth, 2, 			ottomanDepth  			: unID = unID + 1
	hotspot2 - ottomanDepth / 2, 	- ottomanWidth - disOttomanChair,	unID, halfOttomanDepth, 3, 			ottomanDepth 	 		: unID = unID + 1
else
	add2 - A / 2, 0
	call "fa_minimalspace" parameters all	MSType	= 3, 
											unID	= 4000, 
											A		= chairDepth, 
											B		= chairWidth
	del 1
endif

	hotspot2 0, 				chairWidth, unID, halfChairDepth, 1 + 128, 	chairDepth 	: unID = unID + 1
	hotspot2 chairDepth / 2, 	chairWidth, unID, halfChairDepth, 2, 		chairDepth 	: unID = unID + 1
	hotspot2 - chairDepth / 2, 	chairWidth, unID, halfChairDepth, 3, 		chairDepth 	: unID = unID + 1

	hotspot2 chairDepth / 2, 	0,			unID, chairWidth, 1 + 128, 	chairWidth	: unID = unID + 1
	hotspot2 chairDepth / 2, 	chairWidth, unID, chairWidth, 2, 		chairWidth	: unID = unID + 1
	hotspot2 chairDepth / 2, 	-1,			unID, chairWidth, 3, 		chairWidth	: unID = unID + 1

	hotspot2 0, 				chairWidth, unID, halfChairDepth, 1 + 128, 	chairDepth 	: unID = unID + 1
	hotspot2 - chairDepth / 2, 	chairWidth, unID, halfChairDepth, 2, 		chairDepth 	: unID = unID + 1
	hotspot2 chairDepth / 2, 	chairWidth, unID, halfChairDepth, 3, 		chairDepth 	: unID = unID + 1

	hotspot2 - chairDepth / 2, 	0, 			unID, chairWidth, 1 + 128, 	chairWidth 	: unID = unID + 1
	hotspot2 - chairDepth / 2, 	chairWidth, unID, chairWidth, 2, 		chairWidth	: unID = unID + 1
	hotspot2 - chairDepth / 2, 	-1, 		unID, chairWidth, 3, 		chairWidth	: unID = unID + 1

pen gs_cont_pen
fill gs_fill_type

! === 1/100 ===
if det2D = 2 then
	gosub "drawDet2DPoly"
	if bOttoman then
		add2 - ottomanDepth / 2,- ottomanWidth - disOttomanChair
		poly2_b 4, 1+2+4+64, gs_fill_pen, gs_back_pen,
			0, 				0, 					1,
			0,				ottomanWidth,		101,
			ottomanDepth,	0,					101,
			0, 				- ottomanWidth,	101
		del 1
	endif
endif

! === 1/50 ===
if det2D = 3 then
	add2 - chairDepth / 2,0
	poly2_b 9, 1+2+4+64, gs_fill_pen, gs_back_pen,
			r,		0,				 1,
			ta - r, 0,				 1,
			r,		90,				 2001,
			ta,		chairWidth - r, 1,
			r,		90,				 2001,
			r,		chairWidth ,	 1,
			r,		90,				 2001,
			0,		r,				 1,
			r,		90,				 2001
	add2 ta, 0
	poly2_b 4, 1+2+4+64, gs_fill_pen, gs_back_pen,
			chairDepth - 2 * ta,		0,				1,
			0,							chairWidth ,	101,
			- (chairDepth - 2 * ta),	0,				101,
			0,							- chairWidth,	101
	add2 x, 0
	poly2_b 9, 1+2+4+64, gs_fill_pen, gs_back_pen,
			r,			0,				1,
			ta - r,		0,				1,
			r,			90,				2001,
			ta,			chairWidth -r, 1,
			r,			90,				2001,
			r,			chairWidth,	1,
			r,			90,				2001,
			0,			r,				1,
			r,			90,				2001
	del 3

	add2 0, chairWidth - bt
	poly2_b 9, 1+2+4+64, gs_fill_pen, gs_back_pen,
			- x / 2 + rr,	0,						1,
			x - 2 * rr,		0,						101,
			rr,				- 90,					2001,
			0,				- chairWidth / 4 + rr,	101,
			rr,				- 90,					2001,
			- (x - 2 * rr),	0,						101,
			rr,				- 90,					2001,
			0,				chairWidth / 4 - rr,	101,
			rr,				- 90,					2001
	del 1

	if bOttoman then
		add2 - ottomanDepth / 2,- ottomanWidth - disOttomanChair
		poly2_b 9, 1+2+4+64, gs_fill_pen, gs_back_pen,
			0,							rr,							1,
			0,							ottomanWidth - 2 * rr,		101,
			rr,							- 90,						2001,
			ottomanDepth - 2 * rr,		0,							101,
			rr,							- 90,						2001,
			0,							- ottomanWidth + 2 * rr,	101,
			rr,							- 90,						2001,
			- (ottomanDepth - 2 * rr), 0,							101,
			rr,							- 90,						2001
		del 1
	endif
endif

! === 1/200 ===
if det2D = 1 then
	add2 - chairDepth / 2, 0
	fill gs_fill_type
	poly2_b 5, 1+2+64, gs_fill_pen, gs_back_pen,
		0,				0,				0,
		chairDepth,	0,				0,
		chairDepth,	chairWidth,	0,
		0,				chairWidth,	0,
		0,				0,				0

	if bOttoman then
		fill gs_fill_type
		poly2_b 5, 1+2+64, gs_fill_pen, gs_back_pen,
			0,				0,				0,
			chairDepth,	0,				0,
			chairDepth,	-chairWidth,	0,
			0,				-chairWidth,	0,
			0,				0,				0
	endif

	gosub "drawSim2DPoly"
	del 1
endif

! === Symbolic ===
if det2D = 4 then
DRAWINDEX 2
	add2 - chairDepth / 2, 0
	call "fa_ChairSymbol" parameters ALL	gs_OrigoCentered	= 0,
											A					= chairDepth,
											B					= chairWidth
	del 1
	if bOttoman then
		add2 - ottomanDepth / 2,- ottomanWidth - disOttomanChair
		poly2_b 4, 1+2+4+64, gs_fill_pen, gs_back_pen,
			0,				0, 					1,
			0,				ottomanWidth,		101,
			ottomanDepth,	0,					101,
			0, 				- ottomanWidth,	101
		del 1
	endif
endif

end

"drawDet2DPoly":
	add2 - chairDepth / 2, 0
	poly2_b 4, 1+2+4+64, gs_fill_pen, gs_back_pen,
			0,	0,				1,
			ta, 0,				1,
			ta, chairWidth,	1,
			0,	chairWidth,	1
	add2 ta, 0
	poly2_b 4, 1+2+4+64, gs_fill_pen, gs_back_pen,
			0,						chairWidth,	1,
			0,						- bt,			101,
			chairDepth - 2 * ta,	0,				101,
			0,						bt,				101

	poly2_b 4, 1+2+4+64, gs_fill_pen, gs_back_pen,
			0, 0,								1,
			x, 0,								1,
			x, chairWidth - chairWidth / 4,	1,
			0, chairWidth - chairWidth / 4,	1
	add2 x, 0
	poly2_b 4, 1+2+4+64, gs_fill_pen, gs_back_pen,
			0,	0,				1,
			ta, 0,				1,
			ta, chairWidth,	1,
			0,	chairWidth,	1
	del 3

	add2 0, chairWidth
	poly2_b 4, 1+2+4+64, gs_fill_pen, gs_back_pen,
			chairDepth / 2 - ta,	0,					1,
			0,						- chairWidth / 4,	101,
			- x,					0,					101,
			0,						chairWidth / 4,	101
	del 1
return

"drawSim2DPoly":
	fill gs_fill_type
	poly2_b 5, 2+64, gs_fill_pen, gs_back_pen,
		0,				0,				0,
		chairDepth,	0,				0,
		chairDepth,	chairWidth,	0,
		0,				chairWidth,	0,
		0,				0,				0
return
