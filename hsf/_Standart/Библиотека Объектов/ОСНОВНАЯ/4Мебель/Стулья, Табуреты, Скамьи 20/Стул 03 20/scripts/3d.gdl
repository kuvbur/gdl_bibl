
IF gs_detlevel_3D_m = DLEV3D_OFF THEN END


PEN gs_cont_pen


IF gs_shadow=0 THEN SHADOW OFF

IF GLOB_CONTEXT > 20 and GLOB_CONTEXT < 40 THEN gs_detlevel_3D_m = DLEV3D_SIMPLE

if gs_detlevel_3D_m = DLEV3D_SIMPLE then
	iResol = 12
else
	iResol = 24
endif

resol iResol/2

C=gs_seat_height
ADD a/2,b/2,0

unID=1

HOTSPOT -a/2, -b/2, 0, unID: unID=unID+1
HOTSPOT  a/2, -b/2, 0, unID: unID=unID+1
HOTSPOT -a/2,  b/2, 0, unID: unID=unID+1
HOTSPOT  a/2,  b/2, 0, unID: unID=unID+1

! --- Hotspot Editing - zzyzx ---

hotspot -a/2, b/2, 0, unID, zzyzx, 1+128: unID=unID+1
hotspot -a/2, b/2, -1, unID, zzyzx, 3: unID=unID+1
hotspot -a/2, b/2, zzyzx, unID, zzyzx, 2: unID=unID+1

hotspot a/2, b/2, 0, unID, zzyzx, 1+128: unID=unID+1
hotspot a/2, b/2, -1, unID, zzyzx, 3: unID=unID+1
hotspot a/2, b/2, zzyzx, unID, zzyzx, 2: unID=unID+1


! --- Hotspot editing - seat height ---
hotspot -a/2, b/2, 0, unID, gs_seat_height, 1+128: unID=unID+1
hotspot -a/2, b/2, -1, unID, gs_seat_height, 3: unID=unID+1
hotspot -a/2, b/2, gs_seat_height, unID, gs_seat_height, 2: unID=unID+1

hotspot a/2, b/2, 0, unID, gs_seat_height, 1+128: unID=unID+1
hotspot a/2, b/2, -1, unID, gs_seat_height, 3: unID=unID+1
hotspot a/2, b/2, gs_seat_height, unID, gs_seat_height, 2: unID=unID+1

hotspot -a/2, -b/2, 0, unID, gs_seat_height, 1+128: unID=unID+1
hotspot -a/2, -b/2, -1, unID, gs_seat_height, 3: unID=unID+1
hotspot -a/2, -b/2, gs_seat_height, unID, gs_seat_height, 2: unID=unID+1

hotspot a/2, -b/2, 0, unID, gs_seat_height, 1+128: unID=unID+1
hotspot a/2, -b/2, -1, unID, gs_seat_height, 3: unID=unID+1
hotspot a/2, -b/2, gs_seat_height, unID, gs_seat_height, 2: unID=unID+1

	! ======================================================================
	! Wicker Surface + Texture
	! ======================================================================

	define texture "wicker" 1,       0.045,       0.045,    0,          0
	
	define material "builtInMatWicker" 20,
		  0.963821,   0.753536,   0.452461,
		  0.8,  0.74,   0.1,     0,      0,     0,
		  0.995071,   0.797009,   0.504494,
				 0,          0,          0,
				 0,    -1,    -1,
	ind(texture, "wicker")

material gs_frame_mat

mul a/0.43, b/0.48, zzyzx/0.84

addy -0.09

ratioA = 0.43/0.4516
ratioB = 0.48/0.5079*1.2
ratioSeatHeight = (gs_seat_height/0.46) / (zzyzx/0.84)

ratioUp = (0.84-gs_seat_height)/0.38

put		-0.19*ratioA,		-1,									0.265755*ratioB,	0,
		-0.19*ratioA,		0,									0.265755*ratioB,	1,
		-0.185401*ratioA,	0.068239*ratioSeatHeight,			0.242081*ratioB,	2,
		-0.181643*ratioA,	0.13653*ratioSeatHeight,			0.223066*ratioB,	3,
		-0.178727*ratioA,	0.204862*ratioSeatHeight,			0.208487*ratioB,	3,
		-0.176653*ratioA,	0.273224*ratioSeatHeight,			0.198182*ratioB,	2,
		-0.175422*ratioA,	0.341607*ratioSeatHeight,			0.19204*ratioB,		1,
		-0.175*ratioA,		0.42*ratioSeatHeight,				0.19*ratioB,		0,

		-0.17609*ratioA,	gs_seat_height + 0.008827*ratioUp,	0.191738*ratioB,	0,
		-0.179421*ratioA,	gs_seat_height + 0.067571*ratioUp,	0.196962*ratioB,	0,
		-0.184987*ratioA,	gs_seat_height + 0.126144*ratioUp,	0.205696*ratioB,	0,
		-0.19278*ratioA,	gs_seat_height + 0.184464*ratioUp,	0.217984*ratioB,	0,
		-0.202789*ratioA,	gs_seat_height + 0.242443*ratioUp,	0.233891*ratioB,	0,

		-0.215*ratioA,		gs_seat_height + 0.30*ratioUp,		0.253507*ratioB,	0,
		-0.215732*ratioA,	gs_seat_height + 0.306905*ratioUp,	0.256127*ratioB,	0,
		-0.214959*ratioA,	gs_seat_height + 0.313805*ratioUp,	0.258805*ratioB,	0,
		-0.212717*ratioA,	gs_seat_height + 0.320376*ratioUp,	0.261409*ratioB,	0,
		-0.209112*ratioA,	gs_seat_height + 0.32631*ratioUp,	0.263808*ratioB,	0,
		-0.204313*ratioA,	gs_seat_height + 0.331328*ratioUp,	0.265871*ratioB,	0,
		-0.198546*ratioA,	gs_seat_height + 0.335194*ratioUp,	0.267685*ratioB,	0,
		-0.1682*ratioA,		gs_seat_height + 0.345747*ratioUp,	0.271979*ratioB,	0,
		-0.137268*ratioA,	gs_seat_height + 0.354435*ratioUp,	0.275789*ratioB,	0,
		-0.105866*ratioA,	gs_seat_height + 0.361226*ratioUp,	0.278836*ratioB,	0,
		-0.074108*ratioA,	gs_seat_height + 0.366094*ratioUp,	0.281058*ratioB,	0,
		-0.042114*ratioA,	gs_seat_height + 0.369023*ratioUp,	0.28241*ratioB,		0,
		-0.01*ratioA,		gs_seat_height + 0.37*ratioUp,		0.282864*ratioB,	1,
		0.0*ratioA,			gs_seat_height + 0.37*ratioUp,		0.282864*ratioB,	2,
		0.01*ratioA,		gs_seat_height + 0.37*ratioUp,		0.282864*ratioB,	1,
		0.042114*ratioA,	gs_seat_height + 0.369023*ratioUp,	0.28241*ratioB,		0,
		0.074108*ratioA,	gs_seat_height + 0.366094*ratioUp,	0.281058*ratioB,	0,
		0.105866*ratioA,	gs_seat_height + 0.361226*ratioUp,	0.278836*ratioB,	0,
		0.137268*ratioA,	gs_seat_height + 0.354435*ratioUp,	0.275789*ratioB,	0,
		0.1682*ratioA,		gs_seat_height + 0.345747*ratioUp,	0.271979*ratioB,	0,
		0.198546*ratioA,	gs_seat_height + 0.335194*ratioUp,	0.267685*ratioB,	0,
		0.204313*ratioA,	gs_seat_height + 0.331328*ratioUp,	0.265871*ratioB,	0,
		0.209112*ratioA,	gs_seat_height + 0.32631*ratioUp,	0.263808*ratioB,	0,
		0.212717*ratioA,	gs_seat_height + 0.320376*ratioUp,	0.261409*ratioB,	0,
		0.214959*ratioA,	gs_seat_height + 0.313805*ratioUp,	0.258805*ratioB,	0,
		0.215732*ratioA,	gs_seat_height + 0.306905*ratioUp,	0.256127*ratioB,	0,
		0.215*ratioA,		gs_seat_height + 0.30*ratioUp,		0.253507*ratioB,	0,

		0.202789*ratioA,	gs_seat_height + 0.242443*ratioUp,	0.233891*ratioB,	0,
		0.19278*ratioA,		gs_seat_height + 0.184464*ratioUp,	0.217984*ratioB,	0,
		0.184987*ratioA,	gs_seat_height + 0.126144*ratioUp,	0.205696*ratioB,	0,
		0.179421*ratioA,	gs_seat_height + 0.067571*ratioUp,	0.196962*ratioB,	0,
		0.17609*ratioA,		gs_seat_height + 0.008827*ratioUp,	0.191738*ratioB,	0,

		0.175*ratioA,		0.42*ratioSeatHeight,				0.19*ratioB,		0,
		0.175422*ratioA,	0.341607*ratioSeatHeight,			0.19204*ratioB,		1,
		0.176653*ratioA,	0.273224*ratioSeatHeight,			0.198182*ratioB,	2,
		0.178727*ratioA,	0.204862*ratioSeatHeight,			0.208487*ratioB,	3,
		0.181643*ratioA,	0.13653*ratioSeatHeight,			0.223066*ratioB,	3,
		0.185401*ratioA,	0.068239*ratioSeatHeight,			0.242081*ratioB,	2,
		0.19*ratioA,		0,									0.265755*ratioB,	1,
		0.19*ratioA,		-1,									0.265755*ratioB,	0

rotx 90
mulz -1
tube 2, (nsp/4), 1+2+16+32,

	0, 0, 901,
	0.0125, 360, 4001,

	get (nsp)
del 2

put		-0.18969*ratioA,	gs_seat_height + ratioUp * 0.078285,	0.201542*ratioB,	0,
		-0.177969*ratioA,	gs_seat_height + ratioUp * 0.088285,	0.201542*ratioB,	0,
		-0.164878*ratioA,	gs_seat_height + ratioUp * 0.102411,	0.20233*ratioB,		0,
		-0.162478*ratioA,	gs_seat_height + ratioUp * 0.109733,	0.203811*ratioB,	0,
		-0.165239*ratioA,	gs_seat_height + ratioUp * 0.139568,	0.210936*ratioB,	0,
		-0.169064*ratioA,	gs_seat_height + ratioUp * 0.16671,		0.218988*ratioB,	0,
		-0.173796*ratioA,	gs_seat_height + ratioUp * 0.193709,	0.228554*ratioB,	0,
		-0.179428*ratioA,	gs_seat_height + ratioUp * 0.220534,	0.239685*ratioB,	0,
		-0.180006*ratioA,	gs_seat_height + ratioUp * 0.226927,	0.242858*ratioB,	0,
		-0.179231*ratioA,	gs_seat_height + ratioUp *  0.2333,		0.245583*ratioB,	0,
		-0.177138*ratioA,	gs_seat_height + ratioUp * 0.239368,	0.248528*ratioB,	0,
		-0.173818*ratioA,	gs_seat_height + ratioUp * 0.244863,	0.251275*ratioB,	0,
		-0.169421*ratioA,	gs_seat_height + ratioUp * 0.24954,		0.253462*ratioB,	0,
		-0.164141*ratioA,	gs_seat_height + ratioUp * 0.253191,	0.255588*ratioB,	0,
		-0.125426*ratioA,	gs_seat_height + ratioUp * 0.271091,	0.265486*ratioB,	0,
		-0.084684*ratioA,	gs_seat_height + ratioUp * 0.283716,	0.273007*ratioB,	0,
		-0.042631*ratioA,	gs_seat_height + ratioUp * 0.290842,	0.277459*ratioB,	0,
		0.0*ratioA,			gs_seat_height + ratioUp * 0.2925,		0.278517*ratioB,	0,
		0.042631*ratioA,	gs_seat_height + ratioUp * 0.290842,	0.277459*ratioB,	0,
		0.084684*ratioA,	gs_seat_height + ratioUp * 0.283716,	0.273007*ratioB,	0,
		0.125426*ratioA,	gs_seat_height + ratioUp * 0.271091,	0.265486*ratioB,	0,
		0.164141*ratioA,	gs_seat_height + ratioUp * 0.253191,	0.255588*ratioB,	0,
		0.169421*ratioA,	gs_seat_height + ratioUp * 0.24954,		0.253462*ratioB,	0,
		0.173818*ratioA,	gs_seat_height + ratioUp * 0.244863,	0.251275*ratioB,	0,
		0.177138*ratioA,	gs_seat_height + ratioUp * 0.239368,	0.248528*ratioB,	0,
		0.179231*ratioA,	gs_seat_height + ratioUp *  0.2333,		0.245583*ratioB,	0,
		0.180006*ratioA,	gs_seat_height + ratioUp * 0.226927,	0.242858*ratioB,	0,
		0.179428*ratioA,	gs_seat_height + ratioUp * 0.220534,	0.239685*ratioB,	0,
		0.173796*ratioA,	gs_seat_height + ratioUp * 0.193709,	0.228554*ratioB,	0,
		0.169064*ratioA,	gs_seat_height + ratioUp * 0.16671,		0.218988*ratioB,	0,
		0.165239*ratioA,	gs_seat_height + ratioUp * 0.139568,	0.210936*ratioB,	0,
		0.162478*ratioA,	gs_seat_height + ratioUp * 0.109733,	0.203811*ratioB,	0,
		0.164878*ratioA,	gs_seat_height + ratioUp * 0.102411,	0.20233*ratioB,		0,
		0.177969*ratioA,	gs_seat_height + ratioUp * 0.088285,	0.201542*ratioB,	0,
		0.18969*ratioA,		gs_seat_height + ratioUp * 0.078285,	0.201542*ratioB,	0

rotx 90
mulz -1
tube 2, (nsp/4), 0,

	0, 0, 901,
	0.01, 360, 4001,

	get (nsp)

del 3

if gs_armrest then
	for j = 1 to 2
		centery = 0.18
		endRad = 0.09

		fullAngle = 38
		alphaStep = fullAngle / int(iResol/4)
		actAlpha = fullAngle + alphaStep
		for i = 1 to (int(iResol/4) + 1)
			put -0.225 * cos(actAlpha), 0.255 + 0.225 * sin(actAlpha), endRad * 2, 0
			actAlpha = actAlpha - alphaStep
		next i

		put -0.225, 0.215, endRad * 2, 0

		alphaStep = 180 / iResol
		actAlpha = alphaStep
		for i = 1 to iResol
			put -0.225, centery - endRad * sin(actAlpha), endRad + endRad * cos(actAlpha), 0
			actAlpha = actAlpha + alphaStep
		next i

		put -0.225, 0.215, 0, 0

		fullAngle = 40
		alphaStep = fullAngle / int(iResol/4)
		actAlpha = alphaStep
		for i = 1 to (int(iResol/4) + 1)
			put -0.225 * cos(actAlpha), 0.215 + 0.225 * sin(actAlpha), 0, 0
			actAlpha = actAlpha + alphaStep
		next i

		addy -0.24
		addz 0.45

		tube 2, (nsp/4), 0,

			0, 0, 901,
			0.01, 360, 4001,

			get (nsp)

		del 2
		mulx -1
	next j
	del 2
endif

resol iResol

if gs_seat_form_m = 1 then
	addy -0.24
	addz 0.42*ratioSeatHeight

	r1 = 0.025
	r2 = 0.14
	distB = 0.06
	length = 0.48-distB
	halfWidth = 0.43/2

	beta = atn((halfWidth - r1 - halfWidth/5) / (length-r1-r2))
	gamma = asn((r1-r2) / sqr((halfWidth - r1 - halfWidth/5)^2 + (length-r1-r2)^2))
	alpha = beta + gamma

	sideWidth = 0.015

	r1_in = max (0.005, r1 - sideWidth)
	r2_in = max (0.005, r2 - sideWidth)

	length_in = length - 2 * sideWidth
	halfWidth_in = halfWidth - sideWidth

	beta_in = atn((halfWidth_in - r1_in - halfWidth_in/5) / (length_in-r1_in-r2_in))
	gamma_in = asn((r1_in-r2_in) / sqr((halfWidth_in - r1_in - halfWidth_in/5)^2 + (length_in-r1_in-r2_in)^2))
	alpha_in = beta_in + gamma_in

	put	-halfWidth+r1,					0,							15+64,
		 halfWidth-r1,					0,							15+64,
		 halfWidth-r1,					r1,							915+64,
		 halfWidth-r1+r1*cos(alpha),	r1+r1*sin(alpha),			3015+64,
		 halfWidth/5+r2*cos(alpha),		length-r2+r2*sin(alpha),	15+64,
		 halfWidth/5,					length-r2,					915+64,
		 halfWidth/5,					length,						3015+64,
		-halfWidth/5,					length,						15+64,
		-halfWidth/5,					length-r2,					915+64,
		-halfWidth/5-r2*cos(alpha),		length-r2+r2*sin(alpha),	3015+64,
		-halfWidth+r1-r1*cos(alpha),	r1+r1*sin(alpha),			15+64,
		-halfWidth+r1,					r1,							915+64,
		-halfWidth+r1,					0,							3015+64,
		-halfWidth+r1,					0,							-1

	if gs_seat_cover_m > 1 then
		put	-halfWidth_in+r1_in,					sideWidth,							15+64,
			 halfWidth_in-r1_in,					sideWidth,							15+64,
			 halfWidth_in-r1_in,					r1_in + sideWidth,							915+64,
			 halfWidth_in-r1_in+r1_in*cos(alpha_in),	r1_in+r1_in*sin(alpha_in) + sideWidth,			3015+64,
			 halfWidth_in/5+r2_in*cos(alpha_in),		length_in-r2_in+r2_in*sin(alpha_in) + sideWidth,	15+64,
			 halfWidth_in/5,					length_in-r2_in + sideWidth,					915+64,
			 halfWidth_in/5,					length_in + sideWidth,						3015+64,
			-halfWidth_in/5,					length_in + sideWidth,						15+64,
			-halfWidth_in/5,					length_in-r2_in + sideWidth,					915+64,
			-halfWidth_in/5-r2_in*cos(alpha_in),		length_in-r2_in+r2_in*sin(alpha_in) + sideWidth,	3015+64,
			-halfWidth_in+r1_in-r1_in*cos(alpha_in),	r1_in+r1_in*sin(alpha_in) + sideWidth,			15+64,
			-halfWidth_in+r1_in,					r1_in + sideWidth,							915+64,
			-halfWidth_in+r1_in,					sideWidth,							3015+64,
			-halfWidth_in+r1_in,					sideWidth,							-1
	endif

	prism_ (nsp/3), 0.04*ratioSeatHeight,
		get(nsp)

	if gs_seat_cover_m > 1 then
		addz 0.02

		put	-halfWidth_in+r1_in,					sideWidth,							15+64,
			 halfWidth_in-r1_in,					sideWidth,							15+64,
			 halfWidth_in-r1_in,					r1_in + sideWidth,							915+64,
			 halfWidth_in-r1_in+r1_in*cos(alpha_in),	r1_in+r1_in*sin(alpha_in) + sideWidth,			3015+64,
			 halfWidth_in/5+r2_in*cos(alpha_in),		length_in-r2_in+r2_in*sin(alpha_in) + sideWidth,	15+64,
			 halfWidth_in/5,					length_in-r2_in + sideWidth,					915+64,
			 halfWidth_in/5,					length_in + sideWidth,						3015+64,
			-halfWidth_in/5,					length_in + sideWidth,						15+64,
			-halfWidth_in/5,					length_in-r2_in + sideWidth,					915+64,
			-halfWidth_in/5-r2_in*cos(alpha_in),		length_in-r2_in+r2_in*sin(alpha_in) + sideWidth,	3015+64,
			-halfWidth_in+r1_in-r1_in*cos(alpha_in),	r1_in+r1_in*sin(alpha_in) + sideWidth,			15+64,
			-halfWidth_in+r1_in,					r1_in + sideWidth,							915+64,
			-halfWidth_in+r1_in,					sideWidth,							3015+64,
			-halfWidth_in+r1_in,					sideWidth,							-1

		if gs_seat_cover_m = 2 then
			if gs_detlevel_3D_m = DLEV3D_SIMPLE then
				material gs_seat_mat
				prism_ (nsp/3), 0.025*ratioSeatHeight,
					get(nsp)
			else
				fprism_ gs_seat_mat, gs_seat_mat, gs_seat_mat, gs_seat_mat,
					(nsp/3), 0.025*ratioSeatHeight, 45, 0.005*ratioSeatHeight,
					get(nsp)
			endif
		else
			material "builtInMatWicker"
			prism_ (nsp/3), 0.017*ratioSeatHeight,
				get(nsp)
		endif

		del 1
	endif

	del 1

	add 0, 0.03, 0.32*ratioSeatHeight
	material gs_frame_mat

	length = 0.4
	halfWidth = 0.192
	beta = atn((halfWidth - r1 - halfWidth/5) / (length-r1-r2))
	gamma = asn((r1-r2) / sqr((halfWidth - r1 - halfWidth/5)^2 + (length-r1-r2)^2))
	alpha = beta + gamma

	sideWidth = 0.015

	r1_in = max (0.005, r1 - sideWidth)
	r2_in = max (0.005, r2 - sideWidth)

	length_in = length - 2 * sideWidth
	halfWidth_in = halfWidth - sideWidth

	beta_in = atn((halfWidth_in - r1_in - halfWidth_in/5) / (length_in-r1_in-r2_in))
	gamma_in = asn((r1_in-r2_in) / sqr((halfWidth_in - r1_in - halfWidth_in/5)^2 + (length_in-r1_in-r2_in)^2))
	alpha_in = beta_in + gamma_in

	put	-halfWidth+r1,					0,							15+64,
		 halfWidth-r1,					0,							15+64,
		 halfWidth-r1,					r1,							915+64,
		 halfWidth-r1+r1*cos(alpha),	r1+r1*sin(alpha),			3015+64,
		 halfWidth/5+r2*cos(alpha),		length-r2+r2*sin(alpha),	15+64,
		 halfWidth/5,					length-r2,					915+64,
		 halfWidth/5,					length,						3015+64,
		-halfWidth/5,					length,						15+64,
		-halfWidth/5,					length-r2,					915+64,
		-halfWidth/5-r2*cos(alpha),		length-r2+r2*sin(alpha),	3015+64,
		-halfWidth+r1-r1*cos(alpha),	r1+r1*sin(alpha),			15+64,
		-halfWidth+r1,					r1,							915+64,
		-halfWidth+r1,					0,							3015+64,
		-halfWidth+r1,					0,							-1,

		-halfWidth_in+r1_in,					sideWidth,							15+64,
		 halfWidth_in-r1_in,					sideWidth,							15+64,
		 halfWidth_in-r1_in,					r1_in + sideWidth,							915+64,
		 halfWidth_in-r1_in+r1_in*cos(alpha_in),	r1_in+r1_in*sin(alpha_in) + sideWidth,			3015+64,
		 halfWidth_in/5+r2_in*cos(alpha_in),		length_in-r2_in+r2_in*sin(alpha_in) + sideWidth,	15+64,
		 halfWidth_in/5,					length_in-r2_in + sideWidth,					915+64,
		 halfWidth_in/5,					length_in + sideWidth,						3015+64,
		-halfWidth_in/5,					length_in + sideWidth,						15+64,
		-halfWidth_in/5,					length_in-r2_in + sideWidth,					915+64,
		-halfWidth_in/5-r2_in*cos(alpha_in),		length_in-r2_in+r2_in*sin(alpha_in) + sideWidth,	3015+64,
		-halfWidth_in+r1_in-r1_in*cos(alpha_in),	r1_in+r1_in*sin(alpha_in) + sideWidth,			15+64,
		-halfWidth_in+r1_in,					r1_in + sideWidth,							915+64,
		-halfWidth_in+r1_in,					sideWidth,							3015+64,
		-halfWidth_in+r1_in,					sideWidth,							-1

	prism_ (nsp/3), 0.02*ratioSeatHeight,
				get(nsp)
	del 2

else
	add 0, -0.24 + 0.215, 0.42*ratioSeatHeight
	if gs_seat_cover_m = 1 then				! solid
		cylind 0.04*ratioSeatHeight, 0.215
	else
		prism_ 3, 0.04*ratioSeatHeight,
			0, 0, 979,
			0.215, 360, 4079,

			0.2, 360, 4079

		addz 0.02*ratioSeatHeight

		if gs_seat_cover_m = 2 then			! cushion
			if gs_detlevel_3D_m = DLEV3D_SIMPLE then
				material gs_seat_mat
				prism_ 2, 0.025*ratioSeatHeight,
					0, 0, 979,
					0.2, 360, 4079
			else
				if GLOB_CONTEXT = 4 then
					fprism_ gs_seat_mat, gs_seat_mat, gs_seat_mat, gs_seat_mat,
						2, 0.025*ratioSeatHeight, 45, 0.005*ratioSeatHeight,
						0, 0, 979,
						0.2, 360, 4079
				else
					fprism_ gs_seat_mat, gs_seat_mat, gs_seat_mat, gs_seat_mat,
						2, 0.025*ratioSeatHeight, 45, 0.005*ratioSeatHeight,
						0, 0, 979,
						0.2, 360, 4079
				endif
			endif
		else
			material "builtInMatWicker"
			prism_ 2, 0.017*ratioSeatHeight,
				0, 0, 979,
				0.2, 360, 4079
		endif

		del 1
	endif

	del 1

	! circle under seat

	material gs_frame_mat
	add 0, -0.24 + 0.235, 0.32*ratioSeatHeight

	prism_ 3, 0.02*ratioSeatHeight,
		0, 0, 979,
		0.202, 360, 4079,

		0.192, 360, 4079

	del 1
endif


! --- Front Legs
resol iResol / 2
material gs_frame_mat
if gs_seat_form_m = 2 then
	legX = 0.16
	legY = -0.148
else
	legX = 0.195
	legY = -0.21
endif

for i = 1 TO 2
	add legX, legY, 0

	cylind 0.42*ratioSeatHeight, 0.0125

	del 1
	mulx -1
next i
del 2

gosub 1000


del 1 ! mul

end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end

1000:
roty 90
gosub 5000
del 1
return

2000:
gosub 5000
return

3000:
rotz 90
gosub 5000
del 1
return


5000:

vert 0, 0, 0
vert 1, 0, 0
vert 0, 1, 0
vert 0, 0, 1

coor 2, -1, -2, -3, -4

base

body -1

return



