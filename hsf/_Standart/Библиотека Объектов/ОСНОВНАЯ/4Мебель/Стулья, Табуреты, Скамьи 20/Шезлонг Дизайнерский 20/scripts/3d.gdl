
IF gs_detlevel_3D_m=0 THEN END

IF not (gs_shadow) then shadow off

IF GLOB_CONTEXT>20 and GLOB_CONTEXT<40 THEN gs_detlevel_3D_m = 1

bDetailed = (gs_detlevel_3D_m = 2)

unID = 0

PEN gs_cont_pen
IF bDetailed THEN
	RESOL gs_resol
ELSE
	RESOL 4
ENDIF

ADD a/2, b/2, 0

radTube = a/44


! -----------------------------------------------------------------------------
! Hotspots
! -----------------------------------------------------------------------------

HOTSPOT  -a/2, -b/2, 0
HOTSPOT  -a/2,  b/2, 0
HOTSPOT   a/2, -b/2, 0
HOTSPOT   a/2,  b/2, 0

unID=unID+1
hotspot -a/2, b/2, 0, unID, zzyzx, 1+128
unID=unID+1
hotspot -a/2, b/2, -1, unID, zzyzx, 3
unID=unID+1
hotspot -a/2, b/2, zzyzx, unID, zzyzx, 2

unID=unID+1
hotspot a/2, b/2, 0, unID, zzyzx, 1+128
unID=unID+1
hotspot a/2, b/2, -1, unID, zzyzx, 3
unID=unID+1
hotspot a/2, b/2, zzyzx, unID, zzyzx, 2

unID=unID+1
hotspot -a/2, -b/2, 0, unID, gs_seat_height, 1+128
unID=unID+1
hotspot -a/2, -b/2, -1, unID, gs_seat_height, 3
unID=unID+1
hotspot -a/2, -b/2, gs_seat_height, unID, gs_seat_height, 2

unID=unID+1
hotspot a/2, -b/2, 0, unID, gs_seat_height, 1+128
unID=unID+1
hotspot a/2, -b/2, -1, unID, gs_seat_height, 3
unID=unID+1
hotspot a/2, -b/2, gs_seat_height, unID, gs_seat_height, 2



! -----------------------------------------------------------------------------
! Chair Type 1 & 5
! -----------------------------------------------------------------------------

IF gs_chairStyle_m = 1 OR gs_chairStyle_m = 5 THEN
	armrestHeight = 0.055
	radCorner = 0.06

	if not(bArmrest) then
		side = a/2-radTube
		sideBottom = side
	else
		if gs_armrestType_m = ARMREST_TYPE_1 then
			side = a/2-3*radTube
			sideBottom = a/2-radTube
		else
			side = a/2-3*radTube
			sideBottom = side
		endif
	endif


	FOR i = 1 TO 2

		! --- Base & type 1 armrest ---

		MATERIAL gs_frame_mat

		PUT	-1, b/2-radTube, radTube, 0,
			0, b/2-radTube, radTube, 0,
			sideBottom -radCorner,  b/2-radTube, radTube, 0

		IF bDetailed THEN
			stepNum = INT(GS_RESOL/2)
		ELSE
			stepNum = 1
		ENDIF

		alphaStep = 90/stepNum
		actAlpha = alphaStep

		FOR j = 1 TO stepNum
			PUT sideBottom - radCorner + radCorner * sin(actAlpha), b/2-radTube-radCorner + radCorner * cos(actAlpha), radTube, 0
			actAlpha = actAlpha + alphaStep
		NEXT j

		PUT	sideBottom, -b/2+radTube+radCorner, radTube, 0

		actAlpha = alphaStep
		FOR j = 1 TO stepNum
			PUT sideBottom, -b/2+radTube+radCorner-radCorner*sin(actAlpha), radTube+radCorner-radCorner*cos(actAlpha), 0
			actAlpha = actAlpha + alphaStep
		NEXT j

		if (gs_armrestType_m = ARMREST_TYPE_1) & bArmrest then
			PUT	sideBottom, -b/2+radTube, gs_seat_height+armrestHeight, 0

			actAlpha = alphaStep
			FOR j = 1 TO stepNum
				PUT sideBottom, -b/2+radTube+radCorner-radCorner*cos(actAlpha), gs_seat_height+armrestHeight+radCorner*sin(actAlpha), 0
				actAlpha = actAlpha + alphaStep
			NEXT j

			PUT	sideBottom, b/2-radTube-radCorner, gs_seat_height+armrestHeight+radCorner, 0

			actAlpha = alphaStep

			FOR j = 1 TO stepNum
				PUT a/2-radTube - radCorner + radCorner * cos(actAlpha), b/2-radTube-radCorner + radCorner * sin(actAlpha), gs_seat_height+armrestHeight+radCorner, 0
				actAlpha = actAlpha + alphaStep
			NEXT j

			PUT	0, b/2-radTube, gs_seat_height+armrestHeight+radCorner, 0,
				-1, b/2-radTube, gs_seat_height+armrestHeight+radCorner, 0
		else
			if gs_chairStyle_m = 1 then
				smallRad = radTube * 1.2

				zRadDist = smallRad * (sin(5) + cos(5) + sin(5) * sin(5))
				alphaStep95 = 95 / stepNum
				actAlpha = alphaStep95

				PUT sideBottom, -b/2+radTube, gs_seat_height - zRadDist, 0

				FOR j = 1 TO stepNum
					PUT sideBottom, -b/2+radTube+smallRad-smallRad*cos(actAlpha), gs_seat_height-zRadDist+smallRad*sin(actAlpha), 0
					actAlpha = actAlpha + alphaStep95
				NEXT j


				PUT sideBottom, -b/2+radTube+2*radTube*cos(5), gs_seat_height-2*radTube*sin(5), 0
				PUT sideBottom, -b/2+radTube+3*radTube*cos(5), gs_seat_height-3*radTube*sin(5), 0
			else
				PUT sideBottom, -b/2 + radTube, gs_seat_height - radTube - radCorner, 0

				alphaStep95 = 95 / stepNum
				actAlpha = alphaStep95
				FOR j = 1 TO stepNum
					PUT sideBottom, -b/2 + radTube + radCorner - radCorner * cos(actAlpha), gs_seat_height - radTube - radCorner + radCorner * sin(actAlpha), 0
					actAlpha = actAlpha + alphaStep95
				NEXT j

				y0 = zzyzx - gs_seat_height + radTube + radCorner * (1 - cos(5))
				x0 = b - radTube * 2 - radCorner * (1 + sin(5))
				backHorDist = (y0 + x0 * tan(5)) / (tan(5) + tan(75))
				backVertDist = backHorDist * tan(75)

				if gs_backrest then

					centerY = b/2 - radTube - backHorDist - radCorner * tan(40) * cos(5) + radCorner * sin(5)
					centerZ = zzyzx - backVertDist + radCorner * tan(40) * sin(5) + radCorner * cos(5)

					alphaStep80 = 80 / stepNum
					actAlpha = -5
					FOR j = 1 TO stepNum + 1
						PUT sideBottom, centerY + radCorner * sin(actAlpha), centerZ - radCorner * cos(actAlpha), 0
						actAlpha = actAlpha + alphaStep80
					NEXT j

					PUT sideBottom, b/2 - radTube - 4 * radTube * cos(75), zzyzx - 4 * radTube * sin(75), 0
					PUT sideBottom, b/2 - radTube + 0.1 * cos(75), zzyzx + 0.1 * sin(75), 0
				else
					PUT sideBottom, b/2 - radTube - backHorDist - 0.1 * cos(5), zzyzx - backVertDist + 0.1 * sin(5), 0
					PUT sideBottom, b/2 - radTube - backHorDist + 0.1 * cos(5), zzyzx - backVertDist - 0.1 * sin(5), 0
				endif
			endif
		endif

		TUBE 2, NSP/4, 2+32,
				0, 0, 901,
				radTube, 360, 4001,

				GET(NSP)


		! --- Seat ---

		MATERIAL gs_seat_mat

		if i = 1 then
			if gs_chairStyle_m = 1 then

				if (gs_armrestType_m = ARMREST_TYPE_1) and bArmrest then
					cylindLength = b * 0.64 + 2 * radTube
				else
					cylindLength = b * 0.64 - 2 * radTube
				endif

				if (gs_armrestType_m = ARMREST_TYPE_1) and bArmrest then
					PUT side, -b/2+radTube-4*radTube*cos(5), gs_seat_height+4*radTube*sin(5), 0,
						side, -b/2+radTube-2*radTube*cos(5), gs_seat_height+2*radTube*sin(5), 0
				else
					PUT side, -b/2+radTube-2*radTube*cos(5), gs_seat_height+2*radTube*sin(5), 0,
						side, -b/2+radTube+2*radTube*cos(5), gs_seat_height-2*radTube*sin(5), 0
				endif

				PUT	side, -b/2+radTube+b*0.64*cos(5), gs_seat_height-b*0.64*sin(5), 0,
					side, -b/2+radTube+b*0.66*cos(5), gs_seat_height-b*0.66*sin(5), 0

				TUBE 9, NSP/4, 1+2+16+32,
					radTube * cos(30), -radTube/2, 1,
					side * 2 - radTube *cos(30), -radTube/2, 1,
					side * 2, 0, 901,
					side * 2 + radTube, 0, 3001,
					side * 2 - radTube * cos(30), radTube/2, 3001,
					radTube * cos(30), radTube/2, 1,
					0, 0, 901,
					-radTube, 0, 3001,
					radTube * cos(30), -radTube/2, 3001,

					GET(NSP)
			else
				radCoon = 0.04
				widthCoon = a - radTube * 2 - radTube * 2 * bArmrest
				depthCoon = b * 0.8 - (zzyzx - gs_seat_height) * cos(75)
				radSeat = 2 * zzyzx
				matIn = gs_seat_mat2
				matOut = gs_seat_mat

				ADD 0, -b/2 + radTube + radCorner, gs_seat_height
				ROTX -5
				ADDY -radCorner/2
				ADDZ radTube * 0.95

				GOSUB 2000

				DEL 4

			endif
		endif

		IF gs_backrest THEN
			IF gs_chairStyle_m = 1 THEN
				! --- Elbows to back ---

				MATERIAL gs_frame_mat

				PUT side, -b/2, gs_seat_height, 0,
					side, -b/2+radTube+b*0.64*cos(5), gs_seat_height-b*0.64*sin(5), 0,
					side, -b/2+radTube+b*0.66*cos(5), gs_seat_height-b*0.66*sin(5), 0

				actAlpha = alphaStep
				FOR j = 1 TO stepNum

					PUT	side, -b/2+radTube+b*0.66*cos(5)+radCorner*cos(5)*sin(actAlpha), gs_seat_height-b*0.66*sin(5)+radCorner*cos(5)-radCorner*cos(5)*cos(actAlpha), 0
					actAlpha = actAlpha + alphaStep
				NEXT j

				PUT	side, b/2-radCorner-2*radTube, gs_seat_height+armrestHeight + radCorner, 0

				diffY = radCorner+radTube
				diffZ = zzyzx - gs_seat_height-0.055-radCorner

				PUT side, b/2-radCorner-2*radTube+diffY/20, gs_seat_height+armrestHeight +radCorner+diffZ/20, 0

				PUT side, b/2-radTube, zzyzx, 0

				TUBE 2, NSP/4, 1+2,
					0, 0, 901,
					radTube, 360, 4001,

					GET(NSP)

				! --- Back ---

				IF i = 1 THEN
					MATERIAL gs_back_mat
					PUT	side, b/2-radCorner-2*radTube, gs_seat_height+armrestHeight + radCorner, 0
					PUT side, b/2-radCorner-2*radTube+diffY/20, gs_seat_height+armrestHeight +radCorner+diffZ/20, 0

					PUT side, b/2-radTube, zzyzx, 0
					cylindLength = 19/20 * sqr(diffY^2 + diffZ^2)
					cylindAngle = atn(diffY / diffZ)
					PUT side, b/2-radTube+0.1 * sin(cylindAngle), zzyzx + 0.1 * cos(cylindAngle), 0

					TUBE 9, NSP/4, 1+2+16+32,
						radTube * cos(30), -radTube/2, 1,
						side * 2 - radTube *cos(30), -radTube/2, 1,
						side * 2, 0, 901,
						side * 2 + radTube, 0, 3001,
						side * 2 - radTube * cos(30), radTube/2, 3001,
						radTube * cos(30), radTube/2, 1,
						0, 0, 901,
						-radTube, 0, 3001,
						radTube * cos(30), -radTube/2, 3001,

						GET(NSP)
				ENDIF
			ELSE			! chair type 5 - backrest
				IF i = 1 THEN
					radCoon = 0.025
					widthCoon = a - radTube * 2 - radTube * 2 * bArmrest
					depthCoon = (zzyzx - gs_seat_height) / 2
					radSeat = 2 * zzyzx
					matIn = gs_back_mat2
					matOut = gs_back_mat

					ADD 0, b/2 - 2 * radTube, zzyzx
					ROTX 75
					ADD 0, -depthCoon - 2 * radTube, radTube * 0.8

					GOSUB 2000

					DEL 3
				ENDIF
			ENDIF
		ENDIF

		! --- Extra frame for chair 5 with armrest 1 ---

		if	(gs_chairStyle_m = 5) and \
			(gs_armrestType_m = ARMREST_TYPE_1) and \
			bArmrest then
			MATERIAL gs_frame_mat

			PUT side, -b/2+radTube-2*radTube*cos(5), gs_seat_height+2*radTube*sin(5), 0,
				side, -b/2+radTube, gs_seat_height, 0

			y0 = zzyzx - gs_seat_height + radTube + radCorner * (1 - cos(5))
			x0 = b - radTube * 2 - radCorner * (1 + sin(5))
			backHorDist = (y0 + x0 * tan(5)) / (tan(5) + tan(75))
			backVertDist = backHorDist * tan(75)
			if gs_backrest then
				centerY = b/2 - radTube - backHorDist - radCorner * tan(40) * cos(5) + radCorner * sin(5)
				centerZ = zzyzx - backVertDist + radCorner * tan(40) * sin(5) + radCorner * cos(5)
				alphaStep80 = 80 / stepNum
				actAlpha = -5
				FOR j = 1 TO stepNum + 1
					PUT side, centerY + radCorner * sin(actAlpha), centerZ - radCorner * cos(actAlpha), 0
					actAlpha = actAlpha + alphaStep80
				NEXT j

				PUT side, b/2 - radTube - 4 * radTube * cos(75), zzyzx - 4 * radTube * sin(75), 0
				PUT side, b/2 - radTube + 0.1 * cos(75), zzyzx + 0.1 * sin(75), 0
			else
				PUT side, b/2 - radTube - backHorDist - 0.1 * cos(5), zzyzx - backVertDist + 0.1 * sin(5), 0
				PUT side, b/2 - radTube - backHorDist + 0.1 * cos(5), zzyzx - backVertDist - 0.1 * sin(5), 0
			endif

			TUBE 2, NSP/4, 1+2,
				0, 0, 901,
				radTube, 360, 4001,

				GET(NSP)

		endif


		! --- Armrest Type 2 ---

		if (gs_armrestType_m = ARMREST_TYPE_2) and bArmrest then
			MATERIAL gs_frame_mat

			PUT	a/2-radTube, -b/3-1, gs_seat_height+armrestHeight+radCorner, 0,
				a/2-radTube, -b/3, gs_seat_height+armrestHeight+radCorner, 0,
				a/2-radTube, b/2-radTube-radCorner, gs_seat_height+armrestHeight+radCorner, 0

			actAlpha = 90-alphaStep

			FOR j = 1 TO stepNum
				PUT a/2-radTube - radCorner + radCorner * sin(actAlpha), b/2-radTube-radCorner + radCorner * cos(actAlpha), gs_seat_height+armrestHeight+radCorner, 0
				actAlpha = actAlpha - alphaStep
			NEXT j

			PUT	0, b/2-radTube, gs_seat_height+armrestHeight+radCorner, 0,
				-1, b/2-radTube, gs_seat_height+armrestHeight+radCorner, 0

			TUBE 2, NSP/4, 1,
				0, 0, 901,
				radTube, 360, 4001,

				GET(NSP)
		endif

		! --- Armrest extensions ---

		if bArmrest then
			MATERIAL gs_arm_mat
			PUT a/2-radTube, -b/2, gs_seat_height+armrestHeight+radCorner, 0,
				a/2-radTube, -b/3, gs_seat_height+armrestHeight+radCorner, 0,
				a/2-radTube,  b/4, gs_seat_height+armrestHeight+radCorner, 0,
				a/2-radTube,  b/2, gs_seat_height+armrestHeight+radCorner, 0

			TUBE 7, NSP/4, 1+2+16+32,
				-radTube, radTube, 1,
				0, radTube, 1,
				radTube, 0, 1001,
				radTube * 3/2, 0, 1001,
				0, radTube * 3/2, 1001,
				-radTube, radTube * 3/2, 1,
				-radTube, radTube, -1,

				GET(NSP)
		endif

		MULX -1
	NEXT i
	DEL 2
endif


! -----------------------------------------------------------------------------
! Chair Type 2
! -----------------------------------------------------------------------------

IF gs_chairStyle_m = 2 THEN
	radCorner = 0.045

	if (gs_armrestType_m = ARMREST_TYPE_1) and bArmrest then
		sideArm = a/2 - radTube
		sideLeg = a/2 - 3 * radTube
		sideBack = a/2 - 5 * radTube
	else
		sideArm = a/2 - radTube
		sideLeg = a/2 - radTube
		sideBack = a/2 - 3 * radTube
	endif


	FOR i = 1 TO 2
		! --- Back ---
		radCorner2 = 0.03
		lengthBack = min((zzyzx - gs_seat_height) * 0.85, 0.23)
		backLegPosY = b/2 - radTube - radCorner2 - radCorner2 * sin(78) - lengthBack * cos(78)

		IF bDetailed THEN
			stepNum = INT(GS_RESOL/2)
		ELSE
			stepNum = 1
		ENDIF

		alphaStep = 90/stepNum
		actAlpha = alphaStep

		IF gs_backrest THEN
			MATERIAL gs_frame_mat

			PUT	-1, b/2 - radTube, zzyzx - radTube, 0,
				0, b/2 - radTube, zzyzx - radTube, 0,
				sideBack - radCorner2, b/2 - radTube, zzyzx - radTube, 0

			actAlpha = alphaStep
			FOR j = 1 TO stepNum
				PUT	sideBack - radCorner2 + radCorner2 * sin(actAlpha), b/2 - radTube - radCorner2 + radCorner2 * cos(actAlpha), zzyzx - radTube, 0
				actAlpha = actAlpha + alphaStep
			NEXT j

			alphaStep2 = 78/stepNum
			actAlpha = alphaStep2

			FOR j = 1 TO stepNum
				PUT	sideBack, b/2 - radTube - radCorner2 - radCorner2 * sin(actAlpha), zzyzx - radTube - radCorner2 + radCorner2 * cos(actAlpha), 0
				actAlpha = actAlpha + alphaStep2
			NEXT j

			PUT	sideBack, b/2 - radTube - radCorner2 - radCorner2 * sin(78) - radTube * cos(78), zzyzx - radTube - radCorner2 + radCorner2 * cos(78) - radTube * sin(78), 0
			PUT	sideBack, b/2 - radTube - radCorner2 - radCorner2 * sin(78) - (lengthBack - radTube) * cos(78), zzyzx - radTube - radCorner2 + radCorner2 * cos(78) - (lengthBack - radTube) * sin(78), 0

			TUBE 2, NSP/4, 0,
				0, 0, 901,
				radTube, 360, 4001,

				GET(NSP)

			IF i =  1 THEN
				MATERIAL gs_back_mat

				PUT	sideBack, b/2 - radTube - radCorner2 - radCorner2 * sin(78), zzyzx - radTube - radCorner2 + radCorner2 * cos(78), 0
				PUT	sideBack, b/2 - radTube - radCorner2 - radCorner2 * sin(78) - radTube * cos(78), zzyzx - radTube - radCorner2 + radCorner2 * cos(78) - radTube * sin(78), 0
				PUT	sideBack, b/2 - radTube - radCorner2 - radCorner2 * sin(78) - (lengthBack - radTube) * cos(78), zzyzx - radTube - radCorner2 + radCorner2 * cos(78) - (lengthBack - radTube) * sin(78), 0
				PUT	sideBack, backLegPosY, zzyzx - radTube - radCorner2 + radCorner2 * cos(78) - lengthBack * sin(78), 0

				TUBE 9, NSP/4, 1+2+16+32,
					-radTube * cos(30), -radTube/2, 1,
					-sideBack * 2 + radTube *cos(30), -radTube/2, 1,
					-sideBack * 2, 0, 901,
					-sideBack * 2 - radTube, 0, 3001,
					-sideBack * 2 + radTube * cos(30), radTube/2, 3001,
					-radTube * cos(30), radTube/2, 1,
					0, 0, 901,
					radTube, 0, 3001,
					-radTube * cos(30), -radTube/2, 3001,

					GET(NSP)
			ENDIF

			MATERIAL gs_frame_mat

			PUT	sideBack, b/2 - radTube - radCorner2 - radCorner2 * sin(78), zzyzx - radTube - radCorner2 + radCorner2 * cos(78), 0
			PUT	sideBack, b/2 - radTube - radCorner2 - radCorner2 * sin(78) - (lengthBack - radTube) * cos(78), zzyzx - radTube - radCorner2 + radCorner2 * cos(78) - (lengthBack - radTube) * sin(78), 0,
				sideBack, b/2 - radTube - radCorner2 - radCorner2 * sin(78) - lengthBack * cos(78), zzyzx - radTube - radCorner2 + radCorner2 * cos(78) - lengthBack * sin(78), 0,
				sideBack, backLegPosY, 0, 0,
				sideBack, backLegPosY, -1, 0

			TUBE 2, NSP/4, 0,
				0, 0, 901,
				radTube, 360, 4001,

				GET(NSP)
		ELSE
			MATERIAL gs_frame_mat

			ADD sideBack, backLegPosY, 0
			CYLIND gs_seat_height - radTube * 3/2, radTube
			DEL 1
		ENDIF


		! --- Main Frame ---

		MATERIAL gs_frame_mat

		PUT sideLeg, b/2+1, radTube, 0,
			sideLeg, backLegPosY + radTube * 2, radTube, 0,
			sideLeg, -b/2 + radTube + radCorner, radTube, 0

		actAlpha = alphaStep
		FOR j = 1 TO stepNum
			PUT	sideLeg, -b/2 + radTube + radCorner - radCorner * sin(actAlpha), radTube + radCorner - radCorner * cos(actAlpha), 0
			actAlpha = actAlpha + alphaStep
		NEXT j

		PUT	sideLeg, -b/2 + radTube, gs_seat_height - radTube - radCorner, 0

		actAlpha = alphaStep
		FOR j = 1 TO stepNum
			PUT	sideLeg, -b/2 + radTube + radCorner - radCorner * cos(actAlpha), gs_seat_height - radTube - radCorner + radCorner * sin(actAlpha), 0
			actAlpha = actAlpha + alphaStep
		NEXT j

		PUT sideLeg, -b/2 + radTube * 3/2 + radCorner, gs_seat_height - radTube, 0
		PUT sideLeg, backLegPosY + radTube, gs_seat_height - radTube, 0

		TUBE 2, NSP/4, 0,
			0, 0, 901,
			radTube, 360, 4001,

			GET(NSP)

		IF i = 1 THEN
			MATERIAL gs_seat_mat

			PUT sideLeg, -b/2 + radTube + radCorner, gs_seat_height - radTube, 0
			PUT sideLeg, -b/2 + radTube * 3/2 + radCorner, gs_seat_height - radTube, 0
			PUT sideLeg, backLegPosY, gs_seat_height - radTube, 0
			PUT sideLeg, backLegPosY + radTube, gs_seat_height - radTube, 0

			TUBE 9, NSP/4, 1+2+16+32,
				radTube * cos(30), -radTube/2, 1,
				sideLeg * 2 - radTube *cos(30), -radTube/2, 1,
				sideLeg * 2, 0, 901,
				sideLeg * 2 + radTube, 0, 3001,
				sideLeg * 2 - radTube * cos(30), radTube/2, 3001,
				radTube * cos(30), radTube/2, 1,
				0, 0, 901,
				-radTube, 0, 3001,
				radTube * cos(30), -radTube/2, 3001,

				GET(NSP)
		ENDIF

		MATERIAL gs_frame_mat

		PUT sideLeg, backLegPosY - radTube, gs_seat_height - radTube, 0
		PUT sideLeg, backLegPosY, gs_seat_height - radTube, 0

		actAlpha = alphaStep
		FOR j = 1 TO stepNum
			PUT	sideLeg - radCorner + radCorner * cos(actAlpha), backLegPosY + radCorner * sin(actAlpha) + radTube, gs_seat_height - radTube, 0
			actAlpha = actAlpha + alphaStep
		NEXT j

		PUT	0,  backLegPosY + radCorner + radTube, gs_seat_height - radTube, 0,
			-1,  backLegPosY + radCorner + radTube, gs_seat_height - radTube, 0


		TUBE 2, NSP/4, 0,
			0, 0, 901,
			radTube, 360, 4001,

			GET(NSP)


		! --- Armrest type 1-2 ---

		if bArmrest then
			if gs_armrestType_m = ARMREST_TYPE_1 OR gs_armrestType_m = ARMREST_TYPE_2 then

				armrestHeight = 0.2

				GOSUB 1000
			endif
		endif

		MULX -1
	NEXT i
	DEL 2

	! --- Horizontal cylind in front ---

	MATERIAL gs_frame_mat

	CUTPOLYA 2, 2, 0,
		sideLeg, -b/2 + radTube, 900,
		radTube * 0.8, 360, 4000

	CUTPOLYA 2, 2, 0,
		-sideLeg, -b/2 + radTube, 900,
		radTube * 0.8, 360, 4000

	ADD -sideLeg, -b/2 + radTube, gs_seat_height - 0.07
	ROTY 90
	CYLIND 2 * sideLeg, radTube
	ADDX 0.06
	CYLIND 2 * sideLeg, radTube
	DEL 3

	CUTEND
	CUTEND
ENDIF

! -----------------------------------------------------------------------------
! Chair type 3 - 4
! -----------------------------------------------------------------------------

IF gs_chairStyle_m = 3 OR gs_chairStyle_m = 4 THEN
	sideLeg = a/2 - radTube
	if bArmrest then sideLeg = sideLeg - 2 * radTube

	sideArm = a/2 - radTube

	radCorner = 0.04

	FOR i = 1 TO 2
		MATERIAL gs_frame_mat

		IF bDetailed THEN
			stepNum = INT(GS_RESOL/2)
		ELSE
			stepNum = 1
		ENDIF

		alphaStep = 90/stepNum
		actAlpha = alphaStep

		PUT -1, b/2 - radTube, radTube, 0,
			0, b/2 - radTube, radTube, 0,
			sideLeg - radCorner, b/2 - radTube, radTube, 0

		actAlpha = alphaStep
		FOR j = 1 TO stepNum
			PUT sideLeg - radCorner + radCorner * sin(actAlpha), b/2 - radTube - radCorner + radCorner * cos(actAlpha), radTube, 0
			actAlpha = actAlpha + alphaStep
		NEXT j

		IF bDetailed THEN
			stepNumFront = gs_resol
		ELSE
			stepNumFront = 5
		ENDIF
		radFront = gs_seat_height/2 - radTube

		IF gs_chairStyle_m = 3 THEN
			PUT	sideLeg, -b/2 + radTube, radTube, 0

			alphaStepFront = 180/stepNumFront
			actAlpha = alphaStepFront
			FOR j = 1 TO stepNumFront
				PUT sideLeg, -b/2 + radTube - radFront * sin(actAlpha), gs_seat_height / 2 - radFront * cos(actAlpha), 0
				actAlpha = actAlpha + alphaStepFront
			NEXT j

			PUT	sideLeg, b/2 - 0.01 - radTube - radCorner - radCorner * sin(78) * 2, gs_seat_height - radTube, 0

			TUBE 2, NSP/4, 0,
				0, 0, 901,
				radTube, 360, 4001,

				GET(NSP)

			IF i = 1 THEN
				MATERIAL gs_seat_mat

				backOvhg = 0
				IF NOT(gs_backrest) THEN backOvhg = radTube + radCorner

				PUT sideLeg, -b/2 + radTube - radFront * sin(180 - alphaStepFront), gs_seat_height / 2 - radFront * cos(180 - alphaStepFront), 0
				PUT sideLeg, -b/2 + radTube, gs_seat_height - radTube, 0

				heightDiff = zzyzx - gs_seat_height - radCorner * sin(78) * 2
				PUT	sideLeg, backOvhg + b/2 - 0.01 - radTube - radCorner - radCorner * sin(78)*2- heightDiff * cos(78), gs_seat_height - radTube, 0
				PUT	sideLeg, backOvhg + b/2, gs_seat_height - radTube, 0

				TUBE 9, NSP/4, 1+2+16+32,
					radTube * cos(30), -radTube/2, 1,
					sideLeg * 2 - radTube *cos(30), -radTube/2, 1,
					sideLeg * 2, 0, 901,
					sideLeg * 2 + radTube, 0, 3001,
					sideLeg * 2 - radTube * cos(30), radTube/2, 3001,
					radTube * cos(30), radTube/2, 1,
					0, 0, 901,
					-radTube, 0, 3001,
					radTube * cos(30), -radTube/2, 3001,

					GET(NSP)

			ENDIF

			IF gs_backrest THEN
				MATERIAL gs_frame_mat

				PUT	sideLeg, b/2 - 0.01 - radTube - radCorner - radCorner * sin(78)*2 - heightDiff * cos(78) - 0.1, gs_seat_height - radTube, 0
				PUT	sideLeg, b/2 - 0.01 - radTube - radCorner - radCorner * sin(78)*2 - heightDiff * cos(78), gs_seat_height - radTube, 0
				alphaStep78 = 78/stepNum
				actAlpha = alphaStep78
				FOR j = 1 TO stepNum
					PUT	sideLeg, b/2 - 0.01 - radTube - radCorner - radCorner * sin(78) * 2 + radCorner * sin(actAlpha) - heightDiff * cos(78), gs_seat_height - radTube + radCorner - radCorner * cos(actAlpha), 0
					actAlpha = actAlpha + alphaStep78
				NEXT j
				PUT	sideLeg, b/2 - 0.01 - radTube - radCorner - radCorner * sin(78) - heightDiff/2 * cos(78), gs_seat_height - radTube + radCorner - radCorner * cos(78) + heightDiff/2 * sin(78), 0
				PUT	sideLeg, b/2 - 0.01 - radTube - radCorner - radCorner * cos(12), zzyzx - radTube - radCorner + radCorner * sin(12), 0


				TUBE 2, NSP/4, 0,
					0, 0, 901,
					radTube, 360, 4001,

					GET(NSP)

				IF i = 1 THEN
					MATERIAL gs_back_mat

					PUT	sideLeg, b/2 - 0.01 - radTube - radCorner - radCorner * sin(78) - heightDiff * cos(78), gs_seat_height - radTube + radCorner - radCorner * cos(78), 0
					PUT	sideLeg, b/2 - 0.01 - radTube - radCorner - radCorner * sin(78) - heightDiff/2 * cos(78), gs_seat_height - radTube + radCorner - radCorner * cos(78) + heightDiff/2 * sin(78), 0
					PUT	sideLeg, b/2 - 0.01 - radTube - radCorner - radCorner * cos(12), zzyzx - radTube - radCorner + radCorner * sin(12), 0
					PUT	sideLeg, b/2 - 0.01 - radTube - radCorner - radCorner * cos(12) + 0.1 * cos(78), zzyzx - radTube - radCorner + radCorner * sin(12) + 0.1 * sin(78), 0

					TUBE 9, NSP/4, 1+2+16+32,
						radTube * cos(30), -radTube/2, 1,
						sideLeg * 2 - radTube *cos(30), -radTube/2, 1,
						sideLeg * 2, 0, 901,
						sideLeg * 2 + radTube, 0, 3001,
						sideLeg * 2 - radTube * cos(30), radTube/2, 3001,
						radTube * cos(30), radTube/2, 1,
						0, 0, 901,
						-radTube, 0, 3001,
						radTube * cos(30), -radTube/2, 3001,

						GET(NSP)

				ENDIF

				MATERIAL gs_frame_mat

				PUT	sideLeg, b/2 - 0.01 - radTube - radCorner - radCorner * sin(78) - heightDiff * cos(78), gs_seat_height - radTube + radCorner - radCorner * cos(78), 0

				PUT	sideLeg, b/2 - 0.01 - radTube - radCorner - radCorner * cos(12), zzyzx - radTube - radCorner + radCorner * sin(12), 0
				actAlpha = 12 + alphaStep78
				FOR j = 1 TO stepNum
					PUT	sideLeg, b/2 - 0.01 - radTube - radCorner - radCorner * cos(actAlpha), zzyzx - radTube - radCorner + radCorner * sin(actAlpha), 0
					actAlpha = actAlpha + alphaStep78
				NEXT j

				PUT sideLeg, b/2 - 0.01 - radTube - radCorner, zzyzx - radTube, 0,
					sideLeg, b/2 - 0.005 - radTube - radCorner, zzyzx - radTube, 0,
					sideLeg, b/2, zzyzx - radTube, 0

				TUBE 2, NSP/4, 0,
					0, 0, 901,
					radTube, 360, 4001,

					GET(NSP)
			ENDIF
		ELSE
			MATERIAL gs_frame_mat

			PUT	sideLeg, -b/2 + radTube + radCorner, radTube, 0

			alphaStepFront = 160/stepNumFront
			actAlpha = alphaStepFront
			FOR j = 1 TO stepNumFront
				PUT sideLeg, -b/2 + radTube + radCorner - radFront * sin(actAlpha), gs_seat_height / 2 - radFront * cos(actAlpha), 0
				actAlpha = actAlpha + alphaStepFront
			NEXT j

			IF bDetailed THEN
				PUT	sideLeg, -b/2 + radTube + radCorner - radFront * sin(170), gs_seat_height / 2 - radFront * cos(170), 0
			ELSE
				PUT	sideLeg, -b/2 + radTube + radCorner, gs_seat_height - radTube, 0
			ENDIF

			TUBE 2, NSP/4, 0,
				0, 0, 901,
				radTube, 360, 4001,

				GET(NSP)

			IF i = 1 THEN
				MATERIAL gs_seat_mat

				PUT	sideLeg, -b/2 + radTube + radCorner - radFront * sin(160 - alphaStepFront), gs_seat_height / 2 - radFront * cos(160 - alphaStepFront), 0,
					sideLeg, -b/2 + radTube + radCorner - radFront * sin(160), gs_seat_height / 2 - radFront * cos(160), 0

				IF bDetailed THEN
					PUT	sideLeg, -b/2 + radTube + radCorner - radFront * sin(170), gs_seat_height / 2 - radFront * cos(170), 0
				ENDIF

				heightDiff = zzyzx - gs_seat_height - radCorner * sin(78) * 2
				PUT	sideLeg, -b/2 + radTube + radCorner, gs_seat_height - radTube, 0
				PUT	sideLeg, b/2 - 0.01 - radTube - radCorner - radCorner * sin(78)*2- heightDiff * cos(78), gs_seat_height - radTube, 0

				alphaStep78 = 78/stepNum
				actAlpha = alphaStep78
				FOR j = 1 TO stepNum
					PUT	sideLeg, b/2 - 0.01 - radTube - radCorner - radCorner * sin(78) * 2 + radCorner * sin(actAlpha) - heightDiff * cos(78), gs_seat_height - radTube + radCorner - radCorner * cos(actAlpha), 0
					actAlpha = actAlpha + alphaStep78
				NEXT j

				PUT	sideLeg, b/2 - 0.01 - radTube - radCorner - radCorner * cos(12), zzyzx - radTube - radCorner + radCorner * sin(12), 0

				IF gs_backrest THEN
					actAlpha = 12 + alphaStep78
					FOR j = 1 TO stepNum
						PUT	sideLeg, b/2 - 0.01 - radTube - radCorner - radCorner * cos(actAlpha), zzyzx - radTube - radCorner + radCorner * sin(actAlpha), 0
						actAlpha = actAlpha + alphaStep78
					NEXT j

					PUT sideLeg, b/2 - 0.01 - radTube - radCorner, zzyzx - radTube, 0,
						sideLeg, b/2 - 0.005 - radTube - radCorner, zzyzx - radTube, 0,
						sideLeg, b/2, zzyzx - radTube, 0
				ENDIF

				TUBE 9, NSP/4, 1+2+16+32,
					radTube * cos(30), -radTube/2, 1,
					sideLeg * 2 - radTube *cos(30), -radTube/2, 1,
					sideLeg * 2, 0, 901,
					sideLeg * 2 + radTube, 0, 3001,
					sideLeg * 2 - radTube * cos(30), radTube/2, 3001,
					radTube * cos(30), radTube/2, 1,
					0, 0, 901,
					-radTube, 0, 3001,
					radTube * cos(30), -radTube/2, 3001,

					GET(NSP)
			ENDIF
		ENDIF

		IF gs_backrest THEN
			MATERIAL gs_frame_mat

			PUT sideLeg, -b/2, zzyzx - radTube, 0
			PUT sideLeg, b/2 - 0.005 - radTube - radCorner, zzyzx - radTube, 0
			PUT sideLeg, b/2 - radTube - radCorner, zzyzx - radTube, 0

			actAlpha = alphaStep
			FOR j = 1 TO stepNum
				PUT sideLeg - radCorner + radCorner * cos(actAlpha), b/2 - radTube - radCorner + radCorner * sin(actAlpha), zzyzx - radTube, 0
				actAlpha = actAlpha + alphaStep
			NEXT j

			PUT	0, b/2 - radTube, zzyzx - radTube, 0,
				-1, b/2 - radTube, zzyzx - radTube, 0

			TUBE 2, NSP/4, 0,
				0, 0, 901,
				radTube, 360, 4001,

				GET(NSP)

		ENDIF

		! --- Armrest ---

		if bArmrest then

			armrestHeight = 0.17

			GOSUB 1000
		endif


		MULX -1
	NEXT i
	DEL 2

ENDIF




! -----------------------------------------------------------------------------
end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end
! -----------------------------------------------------------------------------


! -----------------------------------------------------------------------------
! Armrest for chair type 2-3-4
! -----------------------------------------------------------------------------
1000:
	MATERIAL gs_frame_mat

	if gs_armrestType_m = ARMREST_TYPE_1 then
		frontDiff = 0
		IF gs_chairStyle_m = 2 THEN frontDiff = radCorner/2

		PUT sideArm, -b/2 + radCorner/2 + frontDiff, 0, 0,
			sideArm, -b/2 + radCorner/2 + frontDiff, gs_seat_height - 2 * radTube, 0

		if NOT(bDetailed) then
			PUT sideArm, -b/2 + radCorner * 3/2 - radCorner + frontDiff, gs_seat_height + armrestHeight - radCorner, 0
		endif

		actAlpha = alphaStep
		FOR j = 1 TO stepNum
			PUT sideArm, -b/2 + radCorner * 3/2 - radCorner * cos(actAlpha) + frontDiff, gs_seat_height + armrestHeight - radCorner + radCorner * sin(actAlpha), 0
			actAlpha = actAlpha + alphaStep
		NEXT j
	endif
	if gs_armrestType_m = ARMREST_TYPE_2 then
		if NOT(bDetailed) then
			PUT sideArm, -b/2 + radCorner * 2 - radCorner * cos(30), gs_seat_height + armrestHeight - radCorner + radCorner * sin(30), 0
			PUT sideArm, -b/2 + radCorner * 2 - radCorner * cos(40), gs_seat_height + armrestHeight - radCorner + radCorner * sin(40), 0
			PUT sideArm, -b/2 + radCorner * 2, gs_seat_height + armrestHeight, 0
		else
			actAlpha = 30
			alphaStep2 = 60 / stepNum
			FOR j = 1 TO stepNum
				PUT sideArm, -b/2 + radCorner * 2 - radCorner * cos(actAlpha), gs_seat_height + armrestHeight - radCorner + radCorner * sin(actAlpha), 0
				actAlpha = actAlpha + alphaStep2
			NEXT j
		endif
	endif
	if gs_armrestType_m = ARMREST_TYPE_3 then
		radFront = (gs_seat_height + armrestHeight - radTube) / 2
		alphaStepFront = 180/stepNumFront
		actAlpha = alphaStepFront

		frontDiff = 0
		if gs_chairStyle_m = 3 then frontDiff = radCorner

		if NOT(bDetailed) then
			PUT sideLeg, -b/2 + radTube + radCorner - radFront * sin(1) - frontDiff, radFront + radTube - radFront * cos(1), 0
			PUT sideLeg, -b/2 + radTube + radCorner - radFront * sin(25) - frontDiff, radFront + radTube - radFront * cos(25), 0
		endif

		FOR j = 1 TO stepNumFront
			PUT sideLeg, -b/2 + radTube + radCorner - radFront * sin(actAlpha) - frontDiff, radFront + radTube - radFront * cos(actAlpha), 0
			actAlpha = actAlpha + alphaStepFront
		NEXT j

	endif

	PUT	sideArm, b/2 - radTube - radCorner*2, gs_seat_height + armrestHeight, 0

	actAlpha = alphaStep
	FOR j = 1 TO stepNum
		PUT sideArm - radCorner + radCorner * cos(actAlpha), b/2 - radTube - radCorner*2 + radCorner * sin(actAlpha), gs_seat_height + armrestHeight, 0
		actAlpha = actAlpha + alphaStep
	NEXT j

	PUT	0, b/2 - radTube - radCorner, gs_seat_height + armrestHeight, 0,
		-1,  b/2 - radTube - radCorner, gs_seat_height + armrestHeight, 0

	TUBE 2, NSP/4, 1+16,
		0, 0, 901,
		radTube, 360, 4001,

		GET(NSP)
RETURN


! -----------------------------------------------------------------------------
! Cushion for type 5
! -----------------------------------------------------------------------------
2000:
	DIM coonLeftCoorDinates[][]
	DIM coonRightCoordinates[][]
	DIM coonBottomCoordinates[][]
	DIM coonTopCoordinates[][]

	IF bDetailed THEN
		stepCorner = INT(gs_resol/2)
	ELSE
		stepCorner = 2
	ENDIF

	alphaStepCorner = 90/stepCorner
	actAlpha = 0
	FOR j = 0 TO stepCorner
		xPos = -widthCoon/2 + radCoon - radCoon * sin(actAlpha)
		yPos = radCoon - radCoon * cos(actAlpha)
		zPos = radSeat - radSeat * cos(asn(abs(xPos)/radSeat))

		coonLeftCoorDinates[j+1][1] = xPos
		coonLeftCoorDinates[j+1][2] = yPos
		coonLeftCoorDinates[j+1][3] = zPos

		actAlpha = actAlpha + alphaStepCorner
	NEXT j

	actAlpha = 0
	FOR j = 0 TO stepCorner
		xPos = -widthCoon/2 + radCoon - radCoon * cos(actAlpha)
		yPos = depthCoon - radCoon + radCoon * sin(actAlpha)
		zPos = radSeat - radSeat * cos(asn(abs(xPos)/radSeat))

		coonLeftCoorDinates[stepCorner+j+2][1] = xPos
		coonLeftCoorDinates[stepCorner+j+2][2] = yPos
		coonLeftCoorDinates[stepCorner+j+2][3] = zPos

		actAlpha = actAlpha + alphaStepCorner
	NEXT j

	FOR j = 1 TO VARDIM1(coonLeftCoorDinates)
		coonRightCoordinates[j][1] = -coonLeftCoorDinates[j][1]
		coonRightCoordinates[j][2] = coonLeftCoorDinates[j][2]
		coonRightCoordinates[j][3] = coonLeftCoorDinates[j][3]
	NEXT j


	stepLine = stepCorner
	lineLength = widthCoon - 2 * radCoon

	xPosAct = -widthCoon/2 + radCoon
	stepLength = lineLength / stepLine
	FOR j = 0 TO stepLine
		xPos = xPosAct
		yPos = 0
		zPos = radSeat - radSeat * cos(asn(abs(xPos)/radSeat))

		coonBottomCoordinates[j+1][1] = xPos
		coonBottomCoordinates[j+1][2] = yPos
		coonBottomCoordinates[j+1][3] = zPos

		xPosAct = xPosAct + stepLength
	NEXT j

	FOR j = 1 TO VARDIM1(coonBottomCoordinates)
		coonTopCoordinates[j][1] = coonBottomCoordinates[j][1]
		coonTopCoordinates[j][2] = coonBottomCoordinates[j][2] + depthCoon
		coonTopCoordinates[j][3] = coonBottomCoordinates[j][3]
	NEXT j

	FOR j = 1 TO VARDIM1(coonLeftCoorDinates)
		PUT coonLeftCoorDinates[j][1], coonLeftCoorDinates[j][2], coonLeftCoorDinates[j][3]
	NEXT j
	FOR j = 1 TO VARDIM1(coonRightCoordinates)
		PUT coonRightCoordinates[j][1], coonRightCoordinates[j][2], coonRightCoordinates[j][3]
	NEXT j
	FOR j = 1 TO VARDIM1(coonBottomCoordinates)
		PUT coonBottomCoordinates[j][1], coonBottomCoordinates[j][2], coonBottomCoordinates[j][3]
	NEXT j
	FOR j = 1 TO VARDIM1(coonTopCoordinates)
		PUT coonTopCoordinates[j][1], coonTopCoordinates[j][2], coonTopCoordinates[j][3]
	NEXT j

	MATERIAL matIn

	COONS VARDIM1(coonLeftCoorDinates), VARDIM1(coonBottomCoordinates), 4+8+16+32,
		GET(NSP)

	FOR j = 1 TO (VARDIM1(coonLeftCoorDinates) - 1)
		PUT coonLeftCoorDinates[j][1], coonLeftCoorDinates[j][2], coonLeftCoorDinates[j][3], 0
	NEXT j
	FOR j = 1 TO (VARDIM1(coonTopCoordinates) - 1)
		PUT coonTopCoordinates[j][1], coonTopCoordinates[j][2], coonTopCoordinates[j][3], 0
	NEXT j
	FOR j = VARDIM1(coonRightCoordinates) TO 2 STEP -1
		PUT coonRightCoordinates[j][1], coonRightCoordinates[j][2], coonRightCoordinates[j][3], 0
	NEXT j
	FOR j = VARDIM1(coonBottomCoordinates) TO 1 STEP -1
		PUT coonBottomCoordinates[j][1], coonBottomCoordinates[j][2], coonBottomCoordinates[j][3], 0
	NEXT j
	PUT coonLeftCoorDinates[2][1], coonLeftCoorDinates[2][2], coonLeftCoorDinates[2][3], 0
	PUT coonLeftCoorDinates[3][1], coonLeftCoorDinates[3][2], coonLeftCoorDinates[3][3], 0

	MATERIAL matOut

	IF bDetailed THEN
		TUBE 7, NSP/4, 0,
			0, 0, 1,
			0, -2.5 * radTube, 1,
			radTube - 0.005, -2.5 * radTube, 1,
			radTube, -2.5 * radTube + 0.005, 1001,
			radTube, -0.005, 1,
			radTube - 0.005, 0, 1001,
			0, 0, -1,

			GET(NSP)
	ELSE
		TUBE 5, NSP/4, 0,
			0, 0, 1,
			0, -2.5 * radTube, 1,
			radTube, -2.5 * radTube, 1,
			radTube, 0, 1,
			0, 0, -1,

			GET(NSP)
	ENDIF
RETURN
