
if not(gs_shadow) then shadow off
if gs_detlevel_3D_m = 2 then	! Detailed
	resol gs_resol
else
	if gs_detlevel_3D_m = 1 then ! Simple
		resol 3
		gs_resol = 6
	else
		END	! Off
	endif
endif

pen gs_cont_pen


!-----Definitions-----
unID = 1

if not(bKnob) then knob_d=0
if gs_knob_type_m=KNOB_STYLE_1 then knob_d=0.025
if gs_knob_type_m=KNOB_STYLE_2 then knob_d=0.025
if gs_knob_type_m=KNOB_STYLE_3 then knob_d=0.03
if gs_knob_type_m=KNOB_STYLE_4 then knob_d=0.024
if gs_knob_type_m=KNOB_STYLE_5 then knob_d=0.025
if gs_knob_type_m=KNOB_STYLE_6 then knob_d=0.025
if gs_knob_type_m=KNOB_STYLE_7 then knob_d=0.03
if gs_knob_type_m=KNOB_STYLE_8 then knob_d=0.03


! ==============================================================================
! Hotspots
! ==============================================================================
if iCabinetForm = SHAPE_SQUARE then
	call "Resize_A_B_ZZYZX" parameters ALL

	hotspot a/2, b, ZZYZX, unID : unID = unID + 1
	hotspot a/2, b, 0, unID 	: unID = unID + 1

	!-----Base Height-----
	if bBase then
		hotspot  0, 0,  0,    unID, leg_h, 1+128				: unID=unID+1
		hotspot  0, 0, -1, 	  unID, leg_h, 3					: unID=unID+1
		hotspot  0, 0, leg_h, unID, leg_h, 2					: unID=unID+1

		hotspot  0, b,  0,    unID, leg_h, 1+128				: unID=unID+1
		hotspot  0, b, -1, 	  unID, leg_h, 3					: unID=unID+1
		hotspot  0, b, leg_h, unID, leg_h, 2					: unID=unID+1

		hotspot  a, b,  0,    unID, leg_h, 1+128				: unID=unID+1
		hotspot  a, b, -1, 	  unID, leg_h, 3					: unID=unID+1
		hotspot  a, b, leg_h, unID, leg_h, 2					: unID=unID+1

		hotspot  a, 0,  0,    unID, leg_h, 1+128				: unID=unID+1
		hotspot  a, 0, -1, 	  unID, leg_h, 3					: unID=unID+1
		hotspot  a, 0, leg_h, unID, leg_h, 2					: unID=unID+1
	endif
else
	!-----Plan-----

	hotspot  0, B, 0, unID, A, 1+256					: unID=unID+1
	hotspot -1, B, 0, unID, A, 3						: unID=unID+1
	hotspot  A, B, 0, unID, A, 2						: unID=unID+1

	hotspot  0,  0, 0, unID, B, 1+256					: unID=unID+1
	hotspot  0, -1, 0, unID, B, 3						: unID=unID+1
	hotspot  0,  B, 0, unID, B, 2						: unID=unID+1

	hotspot  0,  0, 0, unID, sideDepth1, 1+128			: unID=unID+1
	hotspot -1,  0, 0, unID, sideDepth1, 3				: unID=unID+1
	hotspot  sideDepth1,  0, 0, unID, sideDepth1, 2		: unID=unID+1

	hotspot  A,  B, 0, unID, sideDepth2, 1+128			: unID=unID+1
	hotspot  A,  B+1, 0, unID, sideDepth2, 3			: unID=unID+1
	hotspot  A,  B-sideDepth2, 0, unID, sideDepth2, 2	: unID=unID+1

	if iCabinetForm = SHAPE_CORNER_L then
		!hotspot  sideDepth1,  B-sideDepth2, 0, unID	: unID=unID+1

		hotspot  0,  B-sideDepth2, 0, unID, sideDepth1, 1+128		: unID=unID+1
		hotspot -1,  B-sideDepth2, 0, unID, sideDepth1, 3			: unID=unID+1
		hotspot  sideDepth1,  B-sideDepth2, 0, unID, sideDepth1, 2	: unID=unID+1

		hotspot  sideDepth1,  B, 0, unID, sideDepth2, 1+128			: unID=unID+1
		hotspot  sideDepth1,  B+1, 0, unID, sideDepth2, 3			: unID=unID+1
		hotspot  sideDepth1,  B-sideDepth2, 0, unID, sideDepth2, 2	: unID=unID+1
	endif

	!-----ZZYZX-----
	hotspot  0, 0,  0,    unID, ZZYZX, 1+128				: unID=unID+1
	hotspot  0, 0, -1, 	  unID, ZZYZX, 3					: unID=unID+1
	hotspot  0, 0, ZZYZX, unID, ZZYZX, 2					: unID=unID+1

	hotspot  0, b,  0,    unID, ZZYZX, 1+128				: unID=unID+1
	hotspot  0, b, -1, 	  unID, ZZYZX, 3					: unID=unID+1
	hotspot  0, b, ZZYZX, unID, ZZYZX, 2					: unID=unID+1

	hotspot  a, b,  0,    unID, ZZYZX, 1+128				: unID=unID+1
	hotspot  a, b, -1, 	  unID, ZZYZX, 3					: unID=unID+1
	hotspot  a, b, ZZYZX, unID, ZZYZX, 2					: unID=unID+1

	hotspot  sideDepth1, 0,  0,    unID, ZZYZX, 1+128		: unID=unID+1
	hotspot  sideDepth1, 0, -1, unID, ZZYZX, 3				: unID=unID+1
	hotspot  sideDepth1, 0, ZZYZX, unID, ZZYZX, 2			: unID=unID+1

	hotspot  a, B-sideDepth2,  0,    unID, ZZYZX, 1+128		: unID=unID+1
	hotspot  a, B-sideDepth2, -1,    unID, ZZYZX, 3			: unID=unID+1
	hotspot  a, B-sideDepth2, ZZYZX, unID, ZZYZX, 2			: unID=unID+1

	if iCabinetForm = SHAPE_CORNER_L then
		hotspot  sideDepth1, B-sideDepth2,  0,    unID, ZZYZX, 1+128	: unID=unID+1
		hotspot  sideDepth1, B-sideDepth2, -1,    unID, ZZYZX, 3		: unID=unID+1
		hotspot  sideDepth1, B-sideDepth2, ZZYZX, unID, ZZYZX, 2		: unID=unID+1
	endif


	!-----Base Height-----
	if bBase then
		hotspot  0, 0,  0,    unID, leg_h, 1+128				: unID=unID+1
		hotspot  0, 0, -1, 	  unID, leg_h, 3					: unID=unID+1
		hotspot  0, 0, leg_h, unID, leg_h, 2					: unID=unID+1

		hotspot  0, b,  0,    unID, leg_h, 1+128				: unID=unID+1
		hotspot  0, b, -1, 	  unID, leg_h, 3					: unID=unID+1
		hotspot  0, b, leg_h, unID, leg_h, 2					: unID=unID+1

		hotspot  a, b,  0,    unID, leg_h, 1+128				: unID=unID+1
		hotspot  a, b, -1, 	  unID, leg_h, 3					: unID=unID+1
		hotspot  a, b, leg_h, unID, leg_h, 2					: unID=unID+1

		hotspot  sideDepth1, 0,  0,    unID, leg_h, 1+128		: unID=unID+1
		hotspot  sideDepth1, 0, -1, unID, leg_h, 3				: unID=unID+1
		hotspot  sideDepth1, 0, leg_h, unID, leg_h, 2			: unID=unID+1

		hotspot  a, B-sideDepth2,  0,    unID, leg_h, 1+128		: unID=unID+1
		hotspot  a, B-sideDepth2, -1,    unID, leg_h, 3			: unID=unID+1
		hotspot  a, B-sideDepth2, leg_h, unID, leg_h, 2			: unID=unID+1

		if iCabinetForm = SHAPE_CORNER_L then
			hotspot  sideDepth1, B-sideDepth2,  0,    unID, leg_h, 1+128	: unID=unID+1
			hotspot  sideDepth1, B-sideDepth2, -1,    unID, leg_h, 3		: unID=unID+1
			hotspot  sideDepth1, B-sideDepth2, leg_h, unID, leg_h, 2		: unID=unID+1
		endif
	endif
endif


! ==============================================================================
! Base
! ==============================================================================
if iCabinetForm = SHAPE_SQUARE then
	add a/2, b, 0

	! ----- Credenza -----
	CALL "fa_cabinet_credenza" PARAMETERS ALL 	B = B-doorThickness*(iDoorType = 2),
												side_overhang = cooh

	! ----- Cornices -----
	if bCornice then
		mulx -1
		addz zzyzx-cot
		CALL "fa_cornicetyp" PARAMETERS ALL side_overhang = cooh
		del 2
	endif
	! ----- Legs -----
	if bBase then
		CALL "fa_cabinet_legtyp" PARAMETERS 	A = A,
												B = B-doorThickness*(iDoorType = 2), 
												iCabinetForm = iCabinetForm,
												gs_detlevel_3D_m = gs_detlevel_3D_m,
												gs_leg_type_m = gs_leg_type_m,
												leg_h = leg_h,
												leg_w = leg_w,
												cooh = cooh, 
												side_overhang = cooh, 
												gs_resol = gs_resol,
												gs_leg_mat = gs_leg_mat,
												gs_cont_pen = gs_cont_pen,
												gs_lining_m = gs_lining_m
	endif

	del 1
else
	add 0, b, 0
	! ----- Cornices -----
	if bCornice then
		addz zzyzx-cot
		CALL "fa_cornicetyp" PARAMETERS ALL side_overhang = cooh
		del 1
	endif

	! ----- Credenza -----
	CALL "fa_cabinet_credenza" PARAMETERS ALL sideDepth1 = sideDepth1-doorThickness*(iDoorType = 2),
											  	sideDepth2 = sideDepth2-doorThickness*(iDoorType = 2),
												side_overhang = cooh

	! ----- Legs -----
	if bBase then
		CALL "fa_cabinet_legtyp" PARAMETERS 	A = A,
												B = B, 
												iCabinetForm = iCabinetForm,
												sideDepth1 = sideDepth1-doorThickness*(iDoorType = 2),
												sideDepth2 = sideDepth2-doorThickness*(iDoorType = 2),
												gs_detlevel_3D_m = gs_detlevel_3D_m,
												gs_leg_type_m = gs_leg_type_m,
												leg_h = leg_h,
												leg_w = leg_w,
												cooh = cooh, 
												side_overhang = cooh, 
												gs_resol = gs_resol,
												gs_leg_mat = gs_leg_mat,
												gs_cont_pen = gs_cont_pen,
												gs_lining_m = gs_lining_m
	endif
	del 1
endif


! ==============================================================================
! Interior Fittings
! ==============================================================================
if iFunctions <> INTERIOR_NONE then
	addz leg_h
	if iCabinetForm = SHAPE_SQUARE then
		insideA = A - corOverhangR  - corOverhangL - 2*thickness

		! ----- Vertical Panels -----
		nVerticalPanel=ceil(nDoor/2)-1
		material gs_cabinet_mat

		add corOverhangL+(doorFullWidth/nDoor)+(ceil(nDoor/2)=nDoor/2)*(doorFullWidth/nDoor)+thickness/2*(iDoorType = 2)+thickness*(iDoorType <> 2), B-thickness, thickness

		for i=1 to nVerticalPanel
			prism_ 4, zzyzx-cot-leg_h-2*thickness,
					thickness/2,0,15,
					-thickness/2,0,15,
					-thickness/2,-b+doorThickness*(iDoorType > 0)+cooh+thickness+doorThickness*(iDoorType = 1),15,
					thickness/2,-b+doorThickness*(iDoorType > 0)+cooh+thickness+doorThickness*(iDoorType = 1),15
			gosub "textureVertical_01"
			addx (doorFullWidth/nDoor)*2
		next i
		del nVerticalPanel

		! ----- Cut -----
		for i=1 to nVerticalPanel
			cutpolya 4, 1, 0,
					thickness/2,0,15,
					-thickness/2,0,15,
					-thickness/2,-b+doorThickness*(iDoorType > 0)+cooh+thickness+doorThickness*(iDoorType = 1),15,
					thickness/2,-b+doorThickness*(iDoorType > 0)+cooh+thickness+doorThickness*(iDoorType = 1),15
			addx (doorFullWidth/nDoor)*2
		next i
		del nVerticalPanel
		del 1

		! ----- Interior -----
		if iFunctions = INTERIOR_COMBINED then
			insideT = insideA
			if nDoor >= 3 then
				if iDoorType = DOOR_TYPE_SIDEHUNG then
					insideA = ((insideA-thickness*(nDoor-1))/nDoor)*(nDoor-2)+thickness*(nDoor-3)
				else
					insideA = ((insideA)/nDoor)*(nDoor-2)-thickness/2
				endif
			else
				insideA = (insideA-thickness)/2
			endif
		endif

		if iFunctions = INTERIOR_SHELVES or iFunctions = INTERIOR_COMBINED then
			add thickness+corOverhangL, B-thickness,thickness
			gosub "shelves"
			del 1
		endif

		if iFunctions = INTERIOR_COMBINED and nDoor < 3 then
			add thickness+corOverhangL, B-thickness,thickness
			addx insideA
			material gs_cabinet_mat
			prism_ 4, zzyzx-cot-leg_h-2*thickness,
					thickness,0,15,
					thickness,-b+doorThickness+cooh+thickness,15,
					0,-b+doorThickness+cooh+thickness,15,
					0,0,15
			gosub "textureVertical_01"
			del 2
		endif

		if iFunctions = INTERIOR_HANGER or iFunctions = INTERIOR_COMBINED then
			if iFunctions = INTERIOR_HANGER then
				insideTemp = insideA
				addx thickness+corOverhangL
				gosub "hangers"
				del 1
			else
				insideTemp = insideT - insideA -thickness
				addx thickness+corOverhangL+insideA+thickness
				gosub "hangers"
				del 1
			endif
		endif

		for i=1 to nVerticalPanel
			cutend
		next i

	else

		if iFunctions = INTERIOR_SHELVES then
			gosub "shelves"
		endif
		if iFunctions = INTERIOR_HANGER then
			gosub "hangers"
		endif
	endif
	del 1
endif



! ==============================================================================
! Door Settings
! ==============================================================================
if bDoor then
	bMirrored = 0
	gs_full_edit = 1
	bFormMirror = 0
	bSliding = 0
	bAngleEdit = 1
	bDividedDoorWithMirror		= 0

	if iCabinetForm = SHAPE_SQUARE then

		nDoorTemp = nDoor
		doorFullWidthTemp = doorFullWidth
		doorStartX = 0
		doorStartY = doorThickness+cooh
		if iDoorType = DOOR_TYPE_SIDEHUNG then doorStartX = cabinetStartX+thickness/2
		if iDoorType = DOOR_TYPE_SLIDING  then doorStartX  = cabinetStartX+thickness
		gosub "doorCall"

	else

		if iCabinetForm = SHAPE_CORNER_L then
			bSliding = 1
			tempDoorAngle3D		= doorAngle3D

			! For Hotspot
			if not(bKnob) then knob_d=0
			if gs_knob_type_m=KNOB_STYLE_1 then knob_d=0.025
			if gs_knob_type_m=KNOB_STYLE_2 then knob_d=0.025
			if gs_knob_type_m=KNOB_STYLE_3 then knob_d=0.03
			if gs_knob_type_m=KNOB_STYLE_4 then knob_d=0.024
			if gs_knob_type_m=KNOB_STYLE_5 then knob_d=0.025
			if gs_knob_type_m=KNOB_STYLE_6 then knob_d=0.025
			if gs_knob_type_m=KNOB_STYLE_7 then knob_d=0.03
			if gs_knob_type_m=KNOB_STYLE_8 then knob_d=0.03

			! Door with Knob ------------------------------------------
			doorFullWidthTemp	= doorWidthB
			nDoorTemp			= nDoor
			bAngleEdit			= 0
			doorStartX			= 0
			doorStartY			= 0
			rotz 90
			mulx -1

			! angle type editing, base hotspot
			hotspot -thickness/2 - knob_pl_x, -sideDepth1 + cooh - knob_d + 0.001, knob_pl_y + leg_h + thickness/2, unID, doorAngle3D, 4+128 : unID=unID+1

			add	-B + sideDepth2 - cooh - doorThickness , -A + thickness/2, 0

			! angle type editing, center of angle
			! angle type editing, reference hotspot
			hotspot 0,					0,	knob_pl_y + leg_h + thickness/2, unID, doorAngle3D, 6+512	: unID=unID+1
			hotspot 0,					0,	knob_pl_y + leg_h + thickness/2, unID, doorAngle3D, 7		: unID=unID+1


			rotz -doorAngle3D
			add doorThickness, doorWidthA + doorThickness,0
			doorAngle3D = 0

			gosub "doorCall"

			! angle type editing, moving hotspot
			hotspot doorFullWidthTemp - knob_pl_x,	-doorThickness -knob_d,	knob_pl_y + leg_h + thickness/2, unID, doorAngle3D, 5 : unID=unID+1

			del 5

			! Door without Knob ------------------------------------------
			doorAngle3D			= tempDoorAngle3D
			bAngleEdit			= 0
			gs_full_edit		= 0
			bKnob				= 0
			doorFullWidthTemp	= doorWidthA
			doorStartX			= 0
			doorStartY			= 0
			if iDoorStyle = 15 then
				bDividedDoorWithMirror = 1		!one door with 2 different sides
			endif

			mulx -1
			add	-A + thickness/2, B-sideDepth2 + doorThickness + cooh, 0

			gosub "doorCall"
			del 2



		else

			nDoorTemp = nDoor
			doorFullWidthTemp = doorFullWidth
			doorStartX = 0
			doorStartY = 0
			add tempSideDepth1,  cooh*(gs_lining_m=1 or gs_lining_m=3), 0
			rotz beta
			addx doorThickness/tan(beta)
			gosub "doorCall"
			del 3
		endif
	endif
endif


! ======================================================================
! END
! ======================================================================

END

! ======================================================================
! SubRoutines
! ======================================================================
"shelves":
	material gs_shelf_mat
	addz -thickness
	shelvFullHeight=zzyzx-cot-leg_h-2*thickness
	shelvesDistance=(shelvFullHeight+thickness)/(nShelves+1)

	for i=1 to nShelves
		addz shelvesDistance
		if iCabinetForm = SHAPE_SQUARE then
			prism_ 4, thickness,
					insideA,0,15,
					insideA,-b+doorThickness+cooh+thickness+doorThickness*(iDoorType = 1),15,
					0,-b+doorThickness+cooh+thickness+doorThickness*(iDoorType = 1),15,
					0,0,15
		else
			if iCabinetForm = SHAPE_CORNER_L then
				tempSideDepth1 = sideDepth1 - cooh - doorThickness
				tempSideDepth2 = sideDepth2 - cooh - doorThickness

				prism_ 4, thickness,
					thickness, b-thickness, 15,
					a-thickness-corOverhangR, b-thickness, 15,
					a-thickness-corOverhangR, b-tempSideDepth2, 15,
					tempSideDepth1, b-tempSideDepth2, 8
				gosub "textureHorizontal_02"

				prism_ 4, thickness,
					thickness, b-thickness, 8,
					tempSideDepth1, b-tempSideDepth2, 15,
					tempSideDepth1, thickness+corOverhangL, 15,
					thickness, thickness+corOverhangL, 15
				gosub "textureVertical_02"

			else
				prism_ 5, thickness,
					thickness, b-thickness, 15,
					a-thickness-corOverhangR, b-thickness, 15,
					a-thickness-corOverhangR, b-tempSideDepth2-thickness*tan(beta)+doorThickness/cos(beta), 15,
					tempSideDepth1+thickness/tan(beta)-doorThickness/sin(beta), thickness+corOverhangL, 15,
					thickness, thickness+corOverhangL, 15
				gosub "textureAlha"
			endif
		endif
	next i
	del nShelves+1
return


"hangers":
	material gs_hanger_mat

	hangerFullHeight=zzyzx-cot-leg_h-2*thickness-0.1
	hangerDistance=(hangerFullHeight)/(nHangers)
	hangerWidth = 0.03

	if iCabinetForm = SHAPE_CORNER_C then
		cutpolya 4, 1, 0,
				-1, -1, 15,
				-1, b+1, 15,
				thickness, b+1, 15,
				thickness, -1, 15

		cutpolya 4, 1, 0,
				-1, thickness+corOverhangL, 15,
				-1, -1, 15,
				a+1, -1, 15,
				a+1, thickness+corOverhangL, 15

		cutpolya 4, 1, 0,
				-1, b-thickness, 15,
				-1, b+1, 15,
				a+1, b+1, 15,
				a+1, b-thickness, 15

		cutpolya 4, 1, 0,
				a-thickness-corOverhangR, b+1, 15,
				a-thickness-corOverhangR, -1, 15,
				a+1, -1, 15,
				a+1, b+1, 15
	endif

	for i=1 to nHangers
		tempSideDepth1 = sideDepth1 - cooh - doorThickness
		tempSideDepth2 = sideDepth2 - cooh - doorThickness
		addz hangerDistance
		if iCabinetForm = SHAPE_SQUARE then
			tube 6,4,1+2+16+32,
					-hangerWidth/2,-hangerWidth/2,1,
					0,-hangerWidth/2,900,
					hangerWidth/2,-hangerWidth/2,3001,
					hangerWidth/2,-hangerWidth*1.5,1,
					0,-hangerWidth*1.5,900,
					0,-180,4001,

					-1, b-tempSideDepth2/2, 0, 0,
					0, b-tempSideDepth2/2, 0, 0,
					insideTemp, b-tempSideDepth2/2, 0, 0,
					insideTemp+1, b-tempSideDepth2/2, 0, 0
			gosub "textureHorizontal_02"
		else
			if iCabinetForm = SHAPE_CORNER_L then
				tube 6,4,1+2+16+32,
						-hangerWidth/2,-hangerWidth/2,1,
						0,-hangerWidth/2,900,
						hangerWidth/2,-hangerWidth/2,3001,
						hangerWidth/2,-hangerWidth*1.5,1,
						0,-hangerWidth*1.5,900,
						0,-180,4001,

						tempSideDepth1/2, thickness+corOverhangL-1, 0, 0,
						tempSideDepth1/2, thickness+corOverhangL, 0, 0,
						tempSideDepth1/2, b-thickness, 0, 0,
						tempSideDepth1/2, b-thickness+1, 0, 0
				gosub "textureVertical_02"

				tube 6,4,1+2+16+32,
						-hangerWidth/2,-hangerWidth/2,1,
						0,-hangerWidth/2,900,
						hangerWidth/2,-hangerWidth/2,3001,
						hangerWidth/2,-hangerWidth*1.5,1,
						0,-hangerWidth*1.5,900,
						0,-180,4001,

						thickness-1, b-tempSideDepth2/2, 0, 0,
						tempSideDepth1/2, b-tempSideDepth2/2, 0, 0,
						a-thickness-corOverhangR, b-tempSideDepth2/2, 0, 0,
						a-thickness-corOverhangR+1, b-tempSideDepth2/2, 0, 0
				gosub "textureHorizontal_02"
			else
				tube 6,4,1+2+16+32,
						-hangerWidth/2,-hangerWidth/2,1,
						0,-hangerWidth/2,900,
						hangerWidth/2,-hangerWidth/2,3001,
						hangerWidth/2,-hangerWidth*1.5,1,
						0,-hangerWidth*1.5,900,
						0,-180,4001,

						0, corOverhangL, 0, 0,
						thickness, thickness+corOverhangL, 0, 0,
						B/tan(beta), B, 0, 0,
						B/tan(beta)+cos(beta), B+sin(beta), 0, 0
				gosub "textureAlha"
			endif
		endif
	next i
	del nHangers

	if iCabinetForm = SHAPE_CORNER_C then
		cutend
		cutend
		cutend
		cutend
	endif
return


"doorCall":
	if iDoorType = DOOR_TYPE_SIDEHUNG then
		add doorStartX, doorStartY,leg_h+thickness/2
		for i=1 to nDoorTemp
			if ceil(nDoorTemp/2)=nDoorTemp/2 then
				if ceil(i/2)<>i/2  then
					bMirrored = 0
					bFormMirror = 0
				else
					bMirrored = 1
					if iDoorStyle = 18 and nDoorTemp = 2 then
						bFormMirror = 0
					else
						bFormMirror = 1
					endif
				endif
			else
				if ceil(i/2)<>i/2 and i > 1 then
					bMirrored = 1
					bFormMirror = 0
				else
					bMirrored = 0
					bFormMirror = 1
					if i = 1 then bFormMirror = 0
					if 	bDividedDoorWithMirror = 1 then bFormMirror = 1
				endif
			endif
			if iDoorStyle = 16 then bFormMirror = 0
			call "fa_warddoortyp" parameters all bNotMacro = 0,
												gs_full_edit = gs_full_edit,
												bAngleEdit = bAngleEdit,
												bMirrored = bMirrored,
												bFormMirror = bFormMirror,
												bSliding = bSliding,
												cabdoortyp_unID = unID,
												doorWidth = doorFullWidthTemp/nDoorTemp,
												doorHeight = doorHeight,
												bBevel = bBevel,
												returned_parameters cabdoortyp_unID
			unID = cabdoortyp_unID
			addx doorFullWidthTemp/nDoorTemp
		next i
		del nDoorTemp+1
	endif

	if iDoorType = DOOR_TYPE_SLIDING then
		bSliding = 1
		add doorStartX, doorStartY,leg_h+thickness
		for i=1 to nDoorTemp
			if ceil(nDoorTemp/2)=nDoorTemp/2 then
				if ceil(i/2)<>i/2 then
					bMirrored = 1
					bFormMirror = 0
					slidingOffset =  doorThickness
					knobOffset = -knob_d
				else
					bMirrored = 0
					if iDoorStyle = 18 and nDoorTemp = 2 then
						bFormMirror = 0
					else
						bFormMirror = 1
					endif
					slidingOffset = 0
					knobOffset = -knob_d - doorThickness
				endif
			else
				if ceil(i/2)<>i/2 then
					bMirrored = 0
					if i = 1 then bMirrored = 1
					bFormMirror = 0
					slidingOffset =  doorThickness
					knobOffset = -knob_d
				else
					bMirrored = 1
					bFormMirror = 1
					slidingOffset = 0
					knobOffset = -knob_d - doorThickness
				endif
			endif
			if iDoorStyle = 16 then bFormMirror = 0

			doorTempWidth = doorFullWidth/nDoorTemp

			doordirection = 0
			if not(bMirrored) then
				hostspotStart = doorTempWidth-knob_pl_x
				doordirection = -1
			else
				hostspotStart = knob_pl_x
				doordirection = 1
			endif
			openingoffset = doorTempWidth * (openingDoor[i]/100) * doordirection

			hotspot  hostspotStart, knobOffset, knob_pl_y,   			 unID, openingDoorLength[i], 1+128					: unID=unID+1
			hotspot  hostspotStart-doordirection, knobOffset, knob_pl_y, unID, openingDoorLength[i], 3						: unID=unID+1
			hotspot  hostspotStart+openingoffset, knobOffset, knob_pl_y, unID, openingDoorLength[i], 2, openingDoor[i]		: unID=unID+1

			add openingoffset, slidingOffset, 0
			call "fa_warddoortyp" parameters all bNotMacro = 0,
												gs_full_edit = gs_full_edit,
												bAngleEdit = 0,
												doorAngle3D = 0,
												bMirrored = bMirrored,
												bFormMirror = bFormMirror,
												bSliding = bSliding,
												cabdoortyp_unID = unID,
												doorWidth = doorTempWidth,
												doorHeight = doorHeight,
												bBevel = bBevel,
												returned_parameters cabdoortyp_unID
			unID = cabdoortyp_unID
			del 1
			addx doorFullWidthTemp/nDoorTemp
		next i
		del nDoorTemp+1
	endif
return


! ======================================================================
! Textures
! ======================================================================
"textureVertical_01":
	roty 90
	vert 0, 0, 0
	vert 1, 0, 0
	vert 0, 1, 0
	vert 0, 0, 1
	del 1

	coor 2, -1, -2, -3, -4

	base

	body -1
return


"textureVertical_02":
	roty 90
	rotz 90
	vert 0, 0, 0
	vert 1, 0, 0
	vert 0, 1, 0
	vert 0, 0, 1
	del 2

	coor 2, -1, -2, -3, -4

	base

	body -1
return


"textureHorizontal_01":
	vert 0, 0, 0
	vert 1, 0, 0
	vert 0, 1, 0
	vert 0, 0, 1

	coor 2, -1, -2, -3, -4

	base

	body -1
return


"textureHorizontal_02":
	rotx 90
	vert 0, 0, 0
	vert 1, 0, 0
	vert 0, 1, 0
	vert 0, 0, 1
	del 1

	coor 2, -1, -2, -3, -4

	base

	body -1
return


"textureAlha":
	rotz beta+90
	roty 90
	vert 0, 0, 0
	vert 1, 0, 0
	vert 0, 1, 0
	vert 0, 0, 1
	del 2

	coor 2, -1, -2, -3, -4

	base

	body -1
return
