
EPS=0.0001

dim stDetlevel3D[3]
	stDetlevel3D[1] = `Детальный`
	stDetlevel3D[2] = `Простой`
	stDetlevel3D[3] = `Откл.`

dim stCabinetForm[3]
	stCabinetForm[1] = `Прямой`
	stCabinetForm[2] = `L-угол`
	stCabinetForm[3] = `С-угол`

SHAPE_SQUARE   = 1
SHAPE_CORNER_L = 2
SHAPE_CORNER_C = 3

dim stDoorStyle[12]
	stDoorStyle[1] = `Стиль 1`
	stDoorStyle[2] = `Стиль 2`
	stDoorStyle[3] = `Стиль 3`
	stDoorStyle[4] = `Стиль 4`
	stDoorStyle[5] = `Стиль 5`
	stDoorStyle[6] = `Стиль 6`
	stDoorStyle[7] = `Стиль 7`
	stDoorStyle[8] = `Стиль 8`
	stDoorStyle[9] = `Стиль 9`
	stDoorStyle[10] = `Стиль 10`
	stDoorStyle[11] = `Стиль 11`
	stDoorStyle[12] = `Спец. панель`

! const values for parameter: gs_knob_type_m
KNOB_STYLE_1	= 1
KNOB_STYLE_2	= 2
KNOB_STYLE_3	= 3
KNOB_STYLE_4	= 4
KNOB_STYLE_5	= 5
KNOB_STYLE_6	= 6
KNOB_STYLE_7	= 7
KNOB_STYLE_8	= 8

dim stKnobPlacing[2]
	stKnobPlacing[1]=`Вертикальный`
	stKnobPlacing[2]=`Горизонтальный`

dim stInteriorType[4]
	stInteriorType[1]=`Полка`
	stInteriorType[2]=`Штанга`
	stInteriorType[3]=`Комбинированное`
	stInteriorType[4]=`Нет`

INTERIOR_NONE		= 0
INTERIOR_COMBINED	= 1
INTERIOR_HANGER		= 2
INTERIOR_SHELVES	= 3

! const values for parameter: gs_cornice_type_m
CORN_STYLE_1	= 1
CORN_STYLE_2	= 2
CORN_STYLE_3	= 3
CORN_STYLE_4	= 4

dim stCorniceOverhang[4]
	stCorniceOverhang[1]=`Спереди`
	stCorniceOverhang[2]=`Спереди и Слева`
	stCorniceOverhang[3]=`Спереди и Справа`
	stCorniceOverhang[4]=`Спереди и по Бокам`

! const values for parameter: gs_leg_type_m
LEG_STYLE_1		= 1
LEG_STYLE_2		= 2
LEG_STYLE_3		= 3
LEG_STYLE_4		= 4
LEG_STYLE_5		= 5
LEG_STYLE_6		= 6

dim stFrontTypes[4]
	stFrontTypes[1]=`Двери`
	stFrontTypes[2]=`Раздвижная Дверь`
	stFrontTypes[3]=`Ящик`
	stFrontTypes[4]=`Нет`

FRONT_NONE		= 0
FRONT_DRAWER	= 1
FRONT_SLIDING	= 2
FRONT_DOOR		= 3

dim stDrawerTypes[4]
	stDrawerTypes[1]=`Стиль 1`
	stDrawerTypes[2]=`Стиль 2`
	stDrawerTypes[3]=`Стиль 3`
	stDrawerTypes[4]=`Стиль 4`


!-----Definitions-----
thickness = 0.02


!-----Need Parameter Script and 3D-----
corOverhang  = 0
corOverhangL = 0
corOverhangR = 0
cabinetStartX = 0
cornelLMin = 0.03
if not(bCornice) then
	cot=0
	cooh=0
else
	if gs_lining_m=1 then
		corOverhangL = cooh
		corOverhangR = cooh
		cabinetStartX = cooh
	endif
	if gs_lining_m=2 then
		corOverhangR = cooh
		corOverhangL = 0
		cabinetStartX = 0
	endif
	if gs_lining_m=3 then
		corOverhangR = 0
		corOverhangL = cooh
		cabinetStartX = cooh
	endif
endif
corOverhang = corOverhangL+corOverhangR
if cot=0 then cooh=0


bAboveDrawerOrDoor = (iFrontAbove =FRONT_DRAWER or iFrontAbove = FRONT_DOOR )
bUnderDrawerOrDoor = (iFrontUnder =FRONT_DRAWER or iFrontUnder = FRONT_DOOR )

dim doorHeight[2]
dim doorFullWidth[2]
dim doorWidthA[2]
dim doorWidthB[2]

doorHeight[1] = ZZYZX - cot - divisionHeight -2*thickness * not(bAboveDrawerOrDoor) - thickness * bAboveDrawerOrDoor - thickness/2*not(bUnderDrawerOrDoor) + thickness/2*not(bUnderDrawerOrDoor)*(iFrontAbove = FRONT_SLIDING)
doorHeight[2] = divisionHeight - leg_h - thickness * not(bUnderDrawerOrDoor) - thickness/2 * bUnderDrawerOrDoor

if iCabinetForm = SHAPE_SQUARE then
	doorFullWidth[1]=A-corOverhang-2*thickness*not(bAboveDrawerOrDoor)-thickness*bAboveDrawerOrDoor
	doorFullWidth[2]=A-corOverhang-2*thickness*not(bUnderDrawerOrDoor)-thickness*bUnderDrawerOrDoor
else
	if iCabinetForm = SHAPE_CORNER_L then
		doorWidthA[1] = A-sideDepth1+cooh*bCornice-corOverhangR-thickness*not(bAboveDrawerOrDoor)+thickness/2*bAboveDrawerOrDoor-thickness
		doorWidthB[1] = B-sideDepth2+cooh*bCornice-corOverhangL-thickness*not(bAboveDrawerOrDoor)+thickness/2*bAboveDrawerOrDoor-thickness
		doorWidthA[2] = A-sideDepth1+cooh*bCornice-corOverhangR-thickness*not(bUnderDrawerOrDoor)+thickness/2*bUnderDrawerOrDoor-thickness
		doorWidthB[2] = B-sideDepth2+cooh*bCornice-corOverhangL-thickness*not(bUnderDrawerOrDoor)+thickness/2*bUnderDrawerOrDoor-thickness
		doorFullWidth[1] = doorWidthB[1]
		doorFullWidth[2] = doorWidthB[2]
	else
		tempSideDepth1Above = sideDepth1 - cooh - doorThickness*bAboveDrawerOrDoor
		tempSideDepth2Above = sideDepth2 - cooh - doorThickness*bAboveDrawerOrDoor
		tempSideDepth1Under = sideDepth1 - cooh - doorThickness*bUnderDrawerOrDoor
		tempSideDepth2Under = sideDepth2 - cooh - doorThickness*bUnderDrawerOrDoor
		tempB = B
		tempA = A
		if gs_lining_m=3 or gs_lining_m=1 then tempB = b - cooh
		if gs_lining_m=2 or gs_lining_m=1 then tempA = a - cooh

		if abs(tempSideDepth1Above-tempA)< EPS or abs(tempSideDepth2Above-tempB) < EPS then
			beta = 90
		else
			beta = atn((tempB-tempSideDepth2Above)/(tempA-tempSideDepth1Above))
		endif

		doorFullWidth[1]=sqr((tempB-tempSideDepth2Above-doorThickness/cos(beta))**2 + (tempA-tempSideDepth1Above-doorThickness/sin(beta))**2)
		doorFullWidth[2]=sqr((tempB-tempSideDepth2Under-doorThickness/cos(beta))**2 + (tempA-tempSideDepth1Under-doorThickness/sin(beta))**2)
	endif
endif

bDoor = (iFrontAbove = FRONT_DOOR or iFrontAbove = FRONT_SLIDING or iFrontUnder = FRONT_DOOR or iFrontUnder = FRONT_SLIDING)

if GLOB_SCRIPT_TYPE # 2 & GLOB_SCRIPT_TYPE # 3 then 
    _bLockKnob = 0
    _bLockDrawer = 0
    _bLockShelf = 0
    _bLockHanger = 0
    
    if iFrontAbove = FRONT_DRAWER and iFrontUnder = FRONT_DRAWER then
	    _bLockShelf = 1
	    _bLockHanger = 1
    else
	    if not(bKnob) or (iFrontAbove = FRONT_NONE and iFrontUnder = FRONT_NONE) then
		    _bLockKnob = 1
	    endif
	    if iFrontAbove = FRONT_DRAWER then
	    ! Upper part with drawer 										
		    if iInteriorUnder = INTERIOR_NONE then 
			    _bLockShelf = 1
			    _bLockHanger = 1
		    endif
		    if iInteriorUnder = INTERIOR_HANGER then
			    _bLockShelf = 1
		    endif
		    if iInteriorUnder = INTERIOR_SHELVES then 
			    _bLockHanger = 1
		    endif
	    else
		    if iFrontUnder = FRONT_DRAWER then
		    ! Lower part with drawer
			    if iFunctions = INTERIOR_NONE then 
				    _bLockShelf = 1
				    _bLockHanger = 1
			    endif
			    if iFunctions = INTERIOR_HANGER then 
				    _bLockShelf = 1
			    endif
			    if iFunctions = INTERIOR_SHELVES then 
				    _bLockHanger = 1
			    endif
		    else
		    ! Neither part has drawer
			    _bLockDrawer = 1
			    if iFunctions = INTERIOR_NONE and iInteriorUnder = INTERIOR_NONE then
				    _bLockShelf = 1
				    _bLockHanger = 1
			    else
				    if (iFunctions = INTERIOR_NONE and iInteriorUnder = INTERIOR_HANGER) or \
					    (iFunctions = INTERIOR_HANGER and iInteriorUnder = INTERIOR_NONE) or \
					    (iFunctions = INTERIOR_HANGER and iInteriorUnder = INTERIOR_HANGER) then
						    _bLockShelf = 1
				    else
					    if (iFunctions = INTERIOR_NONE and iInteriorUnder = INTERIOR_SHELVES) or \
						    (iFunctions = INTERIOR_SHELVES and iInteriorUnder = INTERIOR_NONE) or \
						    (iFunctions = INTERIOR_SHELVES and iInteriorUnder = INTERIOR_SHELVES) then
							    _bLockHanger = 1
					    endif
				    endif
			    endif			
		    endif		
	    endif		
    endif
endif

if not(iFrontAbove = FRONT_DOOR) and not(iFrontAbove = FRONT_DRAWER) then bKnobAbove = 0
if not(iFrontUnder = FRONT_DOOR) and not(iFrontUnder = FRONT_DRAWER) then bKnob = 0

