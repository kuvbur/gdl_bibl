

!Hide all parameters from UI
hideparameter all  "A", "B", "ZZYZX"

call "FM_types" parameters all

gosub "findElements"

values "a" range [minDist + frameWidth * 2, ]
values "b" range [minDist, ]
values "zzyzx" range [minDist*3+bCornice*cot, ]

_nModuleMaxValue = min( int ((A - frameWidth*2) / minDist), 6)
if _nModuleMaxValue = 0 then
	put 1
else
	for iValue = 1 to _nModuleMaxValue
		put iValue
	next iValue
endif
values "nModule" get(nsp)

values "nTempModule" 1,2,3,4,5,6
if iFrameType = FRAME_WIRE then
	values "frameWidth" range [0.015, ]
else
	values "frameWidth" range [0.02, ]
endif
for i = 1 to nModule
	put i
next i
values "nEditableModule" get(nsp)

if nShelves = 0 then
	hideparameter "gs_shelf_mat"
	lock "gs_shelf_mat"
endif

if nHangers = 0 then
	hideparameter "gs_hanger_mat"
	lock "gs_hanger_mat"
endif


! ----- Frame Type-----
values "frameType" stFrameTypes
values "iFrameType"  FRAME_SOLID, FRAME_SOLID_BACK, FRAME_WIRE
if GLOB_MODPAR_NAME = "frameType"  or GLOB_MODPAR_NAME = "iFrameType" then
	if GLOB_MODPAR_NAME = "frameType" then
		iFrameType = 0
		for i = 1 to vardim1(stFrameTypes)
			if frameType= stFrameTypes[i] then	iFrameType = i
		next i
		parameters iFrameType = iFrameType
	endif

	if GLOB_MODPAR_NAME = "iFrameType" then
		iFrameType = max(min(iFrameType,3),1)
		parameters frameType = stFrameTypes[iFrameType]
	endif

	if iFrameType = FRAME_WIRE then
		frameWidth = 0.015
		parameters frameWidth = frameWidth
	endif

	if not(bUniform) then
		tempModulWidth = 0
		for i = nModule to 2 step -1
			if i = 6 then tempModulWidth = tempModulWidth + modulWidth06
			if i = 5 then tempModulWidth = tempModulWidth + modulWidth05
			if i = 4 then tempModulWidth = tempModulWidth + modulWidth04
			if i = 3 then tempModulWidth = tempModulWidth + modulWidth03
			if i = 2 then tempModulWidth = tempModulWidth + modulWidth02
		next i
		modulWidth01 = A- tempModulWidth - frameWidth
		parameters modulWidth01 = modulWidth01
	else
		gosub "allocationModuleWidth"
	endif
else
	iFrameType = max(min(iFrameType,3),1)
	parameters frameType = stFrameTypes[iFrameType]
endif

if iFrameType = FRAME_WIRE then
	lock "leg_h", "leg_w", "gs_leg_type", "gs_leg_type_m", "gs_leg_mat"
	hideparameter "leg_h", "leg_w", "gs_leg_type", "gs_leg_type_m", "gs_leg_mat"

	lock "gs_cabinet_mat", "gs_shelf_mat"
	hideparameter "gs_cabinet_mat", "gs_shelf_mat"
else
	lock "matSteelCabinet", "matSteelShelf"
	hideparameter "matSteelCabinet", "matSteelShelf"
endif


! ----- LENGTH-----
lock "modulWidth01"
if bUniform then
	if nModule > min(int ((A - frameWidth) / minDist), 6) then
		nModule = min(int ((A - frameWidth) / minDist), 6)
		parameters nModule = nModule
	endif
	gosub "allocationModuleWidth"
	lock "modulWidth02", "modulWidth03", "modulWidth04", "modulWidth05", "modulWidth06"

	nTempModule = nModule
	parameters nTempModule = nTempModule
else
	if GLOB_MODPAR_NAME = "nModule" or GLOB_MODPAR_NAME = "A" or GLOB_MODPAR_NAME = "modulWidth02" or GLOB_MODPAR_NAME = "modulWidth03"\
		or GLOB_MODPAR_NAME = "modulWidth04" or GLOB_MODPAR_NAME = "modulWidth05" or GLOB_MODPAR_NAME = "modulWidth06" then

		if GLOB_MODPAR_NAME = "nModule" then
			if nTempModule > nModule then
				tempModulWidth = 0
				for i = nTempModule to nModule+1 step -1
					if i = 6 then tempModulWidth = tempModulWidth + modulWidth06
					if i = 5 then tempModulWidth = tempModulWidth + modulWidth05
					if i = 4 then tempModulWidth = tempModulWidth + modulWidth04
					if i = 3 then tempModulWidth = tempModulWidth + modulWidth03
					if i = 2 then tempModulWidth = tempModulWidth + modulWidth02
				next i
				modulWidth01 = modulWidth01 + tempModulWidth
				parameters modulWidth01 = modulWidth01
			endif

			if nTempModule < nModule then
				if modulWidth01 / (nModule - nTempModule + 1) >= minDist then
					tempModulWidth = modulWidth01 / (nModule - nTempModule + 1)
					modulWidth01 = tempModulWidth
					parameters modulWidth01 = modulWidth01
					for i = nTempModule+1 to nModule
						if i = 2 then
							modulWidth02 = tempModulWidth
							parameters modulWidth02 = modulWidth02
						endif
						if i = 3 then
							modulWidth03 = tempModulWidth
							parameters modulWidth03 = modulWidth03
						endif
						if i = 4 then
							modulWidth04 = tempModulWidth
							parameters modulWidth04 = modulWidth04
						endif
						if i = 5 then
							modulWidth05 = tempModulWidth
							parameters modulWidth05 = modulWidth05
						endif
						if i = 6 then
							modulWidth06 = tempModulWidth
							parameters modulWidth06 = modulWidth06
						endif
					next i
				else
					if nModule > min(int ((A - frameWidth) / minDist), 6) then
						nModule = min(int ((A - frameWidth) / minDist), 6)
						parameters nModule = nModule
					endif
					gosub "allocationModuleWidth"
				endif
			endif
			nTempModule = nModule
			parameters nTempModule = nTempModule
		endif

		if GLOB_MODPAR_NAME = "A" then
			if nModule > min(int ((A - frameWidth) / minDist), 6) then
				nModule = min(int ((A - frameWidth) / minDist), 6)
				parameters nModule = nModule
			endif
			gosub "allocationModuleWidth"
		endif

		if GLOB_MODPAR_NAME = "modulWidth02" then
			if nModule >= 2 and not(bUniform) then
				modulWidth01 = A-frameWidth-modulWidth02-(nModule>=3)*modulWidth03-(nModule>=4)*modulWidth04-(nModule>=5)*modulWidth05-(nModule>=6)*modulWidth06
				parameters modulWidth01 = modulWidth01
			endif
		endif

		if GLOB_MODPAR_NAME = "modulWidth03" then
			if nModule >= 3 and not(bUniform) then
				modulWidth01 = A-frameWidth-modulWidth02-modulWidth03-(nModule>=4)*modulWidth04-(nModule>=5)*modulWidth05-(nModule>=6)*modulWidth06
				parameters modulWidth01 = modulWidth01
			endif
		endif

		if GLOB_MODPAR_NAME = "modulWidth04" then
			if nModule >= 4 and not(bUniform) then
				modulWidth01 = A-frameWidth-modulWidth02-modulWidth03-modulWidth04-(nModule>=5)*modulWidth05-(nModule>=6)*modulWidth06
				parameters modulWidth01 = modulWidth01
			endif
		endif

		if GLOB_MODPAR_NAME = "modulWidth05" then
			if nModule >= 5 and not(bUniform) then
				modulWidth01 = A-frameWidth-modulWidth02-modulWidth03-modulWidth04-modulWidth05-(nModule>=6)*modulWidth06
				parameters modulWidth01 = modulWidth01
			endif
		endif

		if GLOB_MODPAR_NAME = "modulWidth06" then
			if nModule >= 6 and not(bUniform) then
				modulWidth01 = A-frameWidth-modulWidth02-modulWidth03-modulWidth04-modulWidth05-modulWidth06
				parameters modulWidth01 = modulWidth01
			endif
		endif

	else
		nTempModule = nModule
		parameters nTempModule = nTempModule

		tempModulWidth = 0
		for i = 2 to nModule
			if i = 2 then tempModulWidth = tempModulWidth + modulWidth02
			if i = 3 then tempModulWidth = tempModulWidth + modulWidth03
			if i = 4 then tempModulWidth = tempModulWidth + modulWidth04
			if i = 5 then tempModulWidth = tempModulWidth + modulWidth05
			if i = 6 then tempModulWidth = tempModulWidth + modulWidth06
		next i

		modulWidth01 = A - tempModulWidth - frameWidth
		parameters modulWidth01 = modulWidth01
	endif
endif


! ==============================================================================
! Door Settings
! ==============================================================================
! ----- Door Style -----
dim doorStyleNumber[12]
	doorStyleNumber[1] = 1
	doorStyleNumber[2] = 13
	doorStyleNumber[3] = 3
	doorStyleNumber[4] = 9
	doorStyleNumber[5] = 4
	doorStyleNumber[6] = 5
	doorStyleNumber[7] = 14
	doorStyleNumber[8] = 15
	doorStyleNumber[9] = 16
	doorStyleNumber[10] = 17
	doorStyleNumber[11] = 18
	doorStyleNumber[12] = 10

values "iDoorStyle" doorStyleNumber
values "doorStyle" stDoorStyle
if GLOB_MODPAR_NAME = "doorStyle" then
	iDoorStyle = 1
	for i = 1 to vardim1(stDoorStyle)
		if doorStyle = stDoorStyle[i] then iDoorStyle = doorStyleNumber[i]
	next i
	parameters iDoorStyle = iDoorStyle
else
	for i = 1 to vardim1(stDoorStyle)
		if iDoorStyle = doorStyleNumber[i] then doorStyle = stDoorStyle[i]
	next i
	parameters doorStyle = doorStyle
endif

! ----- Door Type -----
values "doorType" stDoorType
values "iDoorType" DOOR_TYPE_NONE, DOOR_TYPE_SLIDING, DOOR_TYPE_TRIPLE_SIDING
if GLOB_MODPAR_NAME = "doorType"  or GLOB_MODPAR_NAME = "iDoorType" then
	if GLOB_MODPAR_NAME = "doorType" then
		iDoorType = 2
		for i = 1 to vardim1(stDoorType)
			if doorType = stDoorType[i] then	iDoorType = 3-i
		next i
		parameters iDoorType = iDoorType
	else
		iDoorType = max(min(iDoorType,2),0)
		parameters doorType = stDoorType[3-iDoorType]
	endif

	if nDrawersWithFront and iDoorType <> DOOR_TYPE_NONE then
		for i = 1 to nModule
			! Above
			if moduleMatrix[2+(i-1)*nElement][1] = INTERIOR_DRAWERFRONT then
				moduleMatrix[2+(i-1)*nElement][1] = INTERIOR_DRAWER
				moduleMatrix[4+(i-1)*nElement][1] = moduleMatrix[5+(i-1)*nElement][1]
				if i = 1 then
					iInteriorType01 = INTERIOR_DRAWER
					parameters iInteriorType01 = iInteriorType01
					nDrawers01 = nDrawersFront01
					parameters nDrawers01 = nDrawers01
				endif
				if i = 2 then
					iInteriorType02 = INTERIOR_DRAWER
					parameters iInteriorType02 = iInteriorType02
					nDrawers02 = nDrawersFront02
					parameters nDrawers02 = nDrawers02
				endif
				if i = 3 then
					iInteriorType03 = INTERIOR_DRAWER
					parameters iInteriorType03 = iInteriorType03
					nDrawers03 = nDrawersFront03
					parameters nDrawers03 = nDrawers03
				endif
				if i = 4 then
					iInteriorType04 = INTERIOR_DRAWER
					parameters iInteriorType04 = iInteriorType04
					nDrawers04 = nDrawersFront04
					parameters nDrawers04 = nDrawers04
				endif
				if i = 5 then
					iInteriorType05 = INTERIOR_DRAWER
					parameters iInteriorType05 = iInteriorType05
					nDrawers05 = nDrawersFront05
					parameters nDrawers05 = nDrawers05
				endif
				if i = 6 then
					iInteriorType06 = INTERIOR_DRAWER
					parameters iInteriorType06 = iInteriorType06
					nDrawers06 = nDrawersFront06
					parameters nDrawers06 = nDrawers06
				endif
			endif

			! Under
			if moduleMatrix[2+(i-1)*nElement][2] = INTERIOR_DRAWERFRONT then
				moduleMatrix[2+(i-1)*nElement][2] = INTERIOR_DRAWER
				moduleMatrix[4+(i-1)*nElement][2] = moduleMatrix[5+(i-1)*nElement][2]
				if i = 1 then
					iInteriorTypeUnder01 = INTERIOR_DRAWER
					parameters iInteriorTypeUnder01 = iInteriorTypeUnder01
					nDrawersUnder01 = nDrawersFrontUnder01
					parameters nDrawersUnder01 = nDrawersUnder01
				endif
				if i = 2 then
					iInteriorTypeUnder02 = INTERIOR_DRAWER
					parameters iInteriorTypeUnder02 = iInteriorTypeUnder02
					nDrawersUnder02 = nDrawersFrontUnder02
					parameters nDrawersUnder02 = nDrawersUnder02
				endif
				if i = 3 then
					iInteriorTypeUnder03 = INTERIOR_DRAWER
					parameters iInteriorTypeUnder03 = iInteriorTypeUnder03
					nDrawersUnder03 = nDrawersFrontUnder03
					parameters nDrawersUnder03 = nDrawersUnder03
				endif
				if i = 4 then
					iInteriorTypeUnder04 = INTERIOR_DRAWER
					parameters iInteriorTypeUnder04 = iInteriorTypeUnder04
					nDrawersUnder04 = nDrawersFrontUnder04
					parameters nDrawersUnder04 = nDrawersUnder04
				endif
				if i = 4 then
					iInteriorTypeUnder05 = INTERIOR_DRAWER
					parameters iInteriorTypeUnder05 = iInteriorTypeUnder05
					nDrawersUnder05 = nDrawersFrontUnder05
					parameters nDrawersUnder05 = nDrawersUnder05
				endif
				if i = 6 then
					iInteriorTypeUnder06 = INTERIOR_DRAWER
					parameters iInteriorTypeUnder06 = iInteriorTypeUnder06
					nDrawersUnder06 = nDrawersFrontUnder06
					parameters nDrawersUnder06 = nDrawersUnder06
				endif
			endif

		next i
	endif
else
	iDoorType = max(min(iDoorType,2),0)
	parameters doorType = stDoorType[3-iDoorType]
endif

if iDoorType = DOOR_TYPE_NONE then
	hideparameter "doorStyle", "iDoorStyle", "iTempDoorStyle", "doorThickness", "doorFrameWidth", "mullionWidth", "nVerticalMullion", "nHorizontalMullion", "bBevel", "gs_door"
	lock "doorStyle", "iDoorStyle", "iTempDoorStyle", "doorThickness", "doorFrameWidth", "mullionWidth", "nVerticalMullion", "nHorizontalMullion", "bBevel", "gs_door"

	hideparameter "matDoorFrame", "matDoorInset1", "matDoorInset2"
	lock "matDoorFrame", "matDoorInset1", "matDoorInset2"
endif


! ==============================================================================
! Door Style Change
! ==============================================================================
if iDoorStyle <> iTempDoorStyle then
	if (iDoorStyle < 13 | iDoorStyle = 14) and (iTempDoorStyle > 12 & iTempDoorStyle <> 14) then
		doorFrameWidth = 0.1
		parameters doorFrameWidth = doorFrameWidth
	endif

	if (iDoorStyle > 12 & iDoorStyle <> 14) and (iTempDoorStyle < 13 | iTempDoorStyle = 14) then
		doorFrameWidth = 0.02
		parameters doorFrameWidth = doorFrameWidth
	endif

	if (iDoorStyle < 15 & iDoorStyle <> 13) and (iTempDoorStyle >= 15 | iTempDoorStyle = 13) then
		matDoorFrame = 15		! Wd-Pine Horizontal
		parameters matDoorFrame = matDoorFrame
	endif

	if (iDoorStyle >= 15 | iDoorStyle = 13) and (iTempDoorStyle < 15 & iTempDoorStyle <> 13) then
		matDoorFrame = 13		! Mtl-Chrome
		parameters matDoorFrame = matDoorFrame
	endif

	if iDoorStyle < 16 and iTempDoorStyle >= 16 then
		matDoorInset1 = 15		! Wd-Pine Horizontal
		parameters matDoorInset1 = matDoorInset1 
	endif

	if iDoorStyle >= 16 and iTempDoorStyle < 16 then
		matDoorInset1 = 18		! Paint-1
		parameters matDoorInset1 = matDoorInset1
	endif

	if iDoorStyle = 13 and iTempDoorStyle <> 13 then
		nVerticalMullion = 0
		nHorizontalMullion = 3
		parameters nVerticalMullion = nVerticalMullion, nHorizontalMullion = nHorizontalMullion
	endif

	if iDoorStyle <> 13 and iTempDoorStyle = 13 then
		nVerticalMullion = 1
		nHorizontalMullion = 3
		parameters nVerticalMullion = nVerticalMullion, nHorizontalMullion = nHorizontalMullion
	endif

	iTempDoorStyle = iDoorStyle
	parameters iTempDoorStyle = iTempDoorStyle
endif

! ==============================================================================
! Door Parameters
! ==============================================================================
values "doorThickness" range [0.02,]
if iDoorStyle <= 12 then
	values "doorFrameWidth" range [0.03,]
else
	values "doorFrameWidth" range [0,]
endif
values "mullionWidth" range (0, )
values "nVerticalMullion" range [0,]
values "nHorizontalMullion" range [0,]

if iDoorStyle = 1 or iDoorStyle = 8 then
	lock "doorFrameWidth", "matDoorFrame"
	hideparameter "doorFrameWidth", "matDoorFrame"
endif

if iDoorStyle=10 or iDoorStyle>14 then
	lock "bBevel"
	hideparameter "bBevel"
endif

if iDoorStyle <> 3 and iDoorStyle <> 5 and iDoorStyle <> 7 and iDoorStyle <> 12 and iDoorStyle <> 13 then
	lock "mullionWidth", "nVerticalMullion", "nHorizontalMullion"
	hideparameter "mullionWidth", "nVerticalMullion", "nHorizontalMullion"
endif

if iDoorStyle = 10 or iDoorStyle = 99 then
	lock "doorFrameWidth", "matDoorFrame", "matDoorInset1", "matDoorInset2"
	hideparameter "doorFrameWidth", "matDoorFrame", "matDoorInset1", "matDoorInset2"

	dim gs_pt[]
	call "Object_Panel_Collection" parameters returned_parameters gs_pt
	values "doorCustomPanelName" gs_pt
else
	lock "doorCustomPanelName"
	hideparameter "doorCustomPanelName"
endif

! ==============================================================================
! Door Opening
! ==============================================================================
openingRange = 0.9

values "openingDoor1" range [0, openingRange*100]
if nDoor = 3 then
	values "openingDoor2" range [-openingRange*100, openingRange*100]
else
	values "openingDoor2" range [0, openingRange*100]
endif
values "openingDoor3" range [0, openingRange*100]

doorFullWidth = A-2*frameWidth*(iFrameType <> FRAME_WIRE)- 2*railThickness
doorTempWidth = doorFullWidth/nDoor

knob_w = 0
if gs_knob_type_m >=1 & gs_knob_type_m <=3 then knob_w= 0.02
if gs_knob_type_m >=4 & gs_knob_type_m <=8 then
	if gs_knob_p_m = 1 then	! Horizontally
		knob_w= 0.1
	else
		knob_w= 0.012
	endif
endif

minLengthKnob = knob_pl_x + knob_w
slidingRange = 1 - (minLengthKnob/doorTempWidth)

values "openingDoorLength1" range [0, doorTempWidth*slidingRange]
if nDoor = 3 then
	values "openingDoorLength2" range [-doorTempWidth*slidingRange, doorTempWidth*slidingRange]
else
	values "openingDoorLength2" range [0, doorTempWidth*slidingRange]
endif
values "openingDoorLength3" range [0, doorTempWidth*slidingRange]

if GLOB_MODPAR_NAME = "openingDoor1" then
	openingDoorLength1 = doorTempWidth * (openingDoor1/100)
	parameters openingDoorLength1 = openingDoorLength1
else
	! Maximum Range
	if GLOB_MODPAR_NAME = "openingDoorLength1" then
		if openingDoorLength1 > (doorTempWidth * slidingRange) - (nDoor = 2) * openingDoorLength2 + (nDoor = 3) * openingDoorLength2 then
			openingDoorLength1 = (doorTempWidth * slidingRange) - (nDoor = 2) * openingDoorLength2 + (nDoor = 3) * openingDoorLength2
			parameters openingDoorLength1 = openingDoorLength1
		endif
	endif
	openingDoor1 = (openingDoorLength1/doorTempWidth)*100
	parameters openingDoor1 = openingDoor1
endif

if GLOB_MODPAR_NAME = "openingDoor2" then
	openingDoorLength2 = doorTempWidth * (openingDoor2/100)
	parameters openingDoorLength2 = openingDoorLength2
else
	if GLOB_MODPAR_NAME = "openingDoorLength2" then
		if nDoor = 3 then
			! Minimum Range
			if openingDoorLength2 < (-1) * ((doorTempWidth * slidingRange) - openingDoorLength1) then
				openingDoorLength2 = (-1) * ((doorTempWidth * slidingRange) - openingDoorLength1)
				parameters openingDoorLength2 = openingDoorLength2
			endif
			! Maximum Range
			if openingDoorLength2 > ((doorTempWidth * slidingRange) - openingDoorLength3) then
				openingDoorLength2 = (doorTempWidth * slidingRange) - openingDoorLength3
				parameters openingDoorLength2 = openingDoorLength2
			endif
		else
			! Maximum Range
			if openingDoorLength2 > ((doorTempWidth * slidingRange) - openingDoorLength1) then
				openingDoorLength2 = ((doorTempWidth * slidingRange) - openingDoorLength1)
				parameters openingDoorLength2 = openingDoorLength2
			endif
		endif
	endif
	openingDoor2 = (openingDoorLength2/doorTempWidth)*100
	parameters openingDoor2 = openingDoor2
endif

if GLOB_MODPAR_NAME = "openingDoor3" then
	openingDoorLength3 = doorTempWidth * (openingDoor3/100)
	parameters openingDoorLength3 = openingDoorLength3
else
	if GLOB_MODPAR_NAME = "openingDoorLength3" then
		! Maximum Range
		if openingDoorLength3 > (doorTempWidth * slidingRange) - openingDoorLength2 then
			openingDoorLength3 = (doorTempWidth * slidingRange) - openingDoorLength2
			parameters openingDoorLength3 = openingDoorLength3
		endif
	endif
	openingDoor3 = (openingDoorLength3/doorTempWidth)*100
	parameters openingDoor3 = openingDoor3
endif

! ==============================================================================
! Module 01
! ==============================================================================
! ----- Interior Fitting Type Above-----
if iFrameType = FRAME_WIRE then
	values "interiorType01" stInteriorType[1], stInteriorType[4], stInteriorType[5], stInteriorType[6]
	values "interiorTypeAbove01" stInteriorType[1], stInteriorType[4], stInteriorType[5], stInteriorType[6]
	values "iInteriorType01"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_SHELF
else
	if iDoorType <> DOOR_TYPE_NONE then
		values "interiorType01" stInteriorType[1], stInteriorType[2], stInteriorType[4], stInteriorType[5], stInteriorType[6]
		values "interiorTypeAbove01" stInteriorType[1], stInteriorType[2], stInteriorType[4], stInteriorType[5], stInteriorType[6]
		values "iInteriorType01"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_DRAWER, INTERIOR_SHELF
	else
		values "interiorType01" stInteriorType
		values "interiorTypeAbove01" stInteriorType
		values "iInteriorType01"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_DRAWERFRONT, INTERIOR_DRAWER, INTERIOR_SHELF
	endif
endif
if GLOB_MODPAR_NAME = "interiorType01" or GLOB_MODPAR_NAME = "interiorTypeAbove01" then
	iInteriorType01 = 0
	if GLOB_MODPAR_NAME = "interiorType01" then
		for i = 1 to vardim1(stInteriorType)
			if interiorType01= stInteriorType[i] then	iInteriorType01 = 6-i
		next i
		interiorTypeAbove01 = interiorType01
		parameters interiorTypeAbove01 = interiorTypeAbove01
	endif
	if GLOB_MODPAR_NAME = "interiorTypeAbove01" then
		for i = 1 to vardim1(stInteriorType)
			if interiorTypeAbove01= stInteriorType[i] then	iInteriorType01 = 6-i
		next i
		interiorType01 = interiorTypeAbove01
		parameters interiorType01 = interiorType01
	endif
	parameters iInteriorType01 = iInteriorType01
else
	iInteriorType01 = max(min(iInteriorType01,5),0)
	parameters interiorType01 = stInteriorType[6-iInteriorType01]
	parameters interiorTypeAbove01 = stInteriorType[6-iInteriorType01]
endif

values "nShelves01" range [1, ]
values "nDrawers01" range [1, ]
values "nDrawersFront01" range [1, ]
values "nWire01" range [1, ]
values "nHangers01" range [1, ]
values "modulWidth01" range [minDist, ]
values "divisionHeight01" range [leg_h+minDist, ZZYZX-bCornice*cot-minDist]


if bDivision01 then
	lock "interiorType01"
	hideparameter "interiorType01"
else
	lock "interiorTypeUnder01", "iInteriorTypeUnder01", "interiorTypeAbove01", "nHangersUnder01", "nWireUnder01", "nDrawersFrontUnder01", "nDrawersUnder01", "nShelvesUnder01", "divisionHeight01"
	hideparameter "interiorTypeUnder01", "iInteriorTypeUnder01", "interiorTypeAbove01", "nHangersUnder01", "nWireUnder01", "nDrawersFrontUnder01", "nDrawersUnder01", "nShelvesUnder01", "divisionHeight01"
endif

if iInteriorType01 <> INTERIOR_HANGER then
	lock "nHangers01"
	hideparameter "nHangers01"
endif

if iInteriorType01 <> INTERIOR_WIRE then
	lock "nWire01"
	hideparameter "nWire01"
endif

if iInteriorType01 <> INTERIOR_DRAWERFRONT then
	lock "nDrawersFront01"
	hideparameter "nDrawersFront01"
endif

if iInteriorType01 <> INTERIOR_DRAWER then
	lock "nDrawers01"
	hideparameter "nDrawers01"
endif

if iInteriorType01 <> INTERIOR_SHELF then
	lock "nShelves01"
	hideparameter "nShelves01"
endif

! ----- Interior Fitting Type Under-----
if iFrameType = FRAME_WIRE then
	values "interiorTypeUnder01" stInteriorType[1], stInteriorType[4], stInteriorType[5], stInteriorType[6]
	values "iInteriorTypeUnder01"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_SHELF
else
	if iDoorType <> DOOR_TYPE_NONE then
		values "interiorTypeUnder01" stInteriorType[1], stInteriorType[2], stInteriorType[4], stInteriorType[5], stInteriorType[6]
		values "iInteriorTypeUnder01"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_DRAWER, INTERIOR_SHELF
	else
		values "interiorTypeUnder01" stInteriorType
		values "iInteriorTypeUnder01"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_DRAWERFRONT, INTERIOR_DRAWER, INTERIOR_SHELF
	endif
endif
if GLOB_MODPAR_NAME = "interiorTypeUnder01" then
	iInteriorTypeUnder01 = 0
	for i = 1 to vardim1(stInteriorType)
		if interiorTypeUnder01= stInteriorType[i] then	iInteriorTypeUnder01 = 6-i
	next i
	parameters iInteriorTypeUnder01 = iInteriorTypeUnder01
else
	iInteriorTypeUnder01 = max(min(iInteriorTypeUnder01,5),0)
	parameters interiorTypeUnder01 = stInteriorType[6-iInteriorTypeUnder01]
endif

values "nShelvesUnder01" range [1, ]
values "nDrawersUnder01" range [1, ]
values "nDrawersFrontUnder01" range [1, ]
values "nWireUnder01" range [1, ]
values "nHangersUnder01" range [1, ]

if iInteriorTypeUnder01 <> INTERIOR_HANGER then
	lock "nHangersUnder01"
	hideparameter "nHangersUnder01"
endif

if iInteriorTypeUnder01 <> INTERIOR_WIRE then
	lock "nWireUnder01"
	hideparameter "nWireUnder01"
endif

if iInteriorTypeUnder01 <> INTERIOR_DRAWERFRONT then
	lock "nDrawersFrontUnder01"
	hideparameter "nDrawersFrontUnder01"
endif

if iInteriorTypeUnder01 <> INTERIOR_DRAWER then
	lock "nDrawersUnder01"
	hideparameter "nDrawersUnder01"
endif

if iInteriorTypeUnder01 <> INTERIOR_SHELF then
	lock "nShelvesUnder01"
	hideparameter "nShelvesUnder01"
endif


! ==============================================================================
! Module 02
! ==============================================================================
if nModule < 2 then
	lock			"module_02",
					"modulWidth02",
					"bDivision02",
					"divisionHeight02",
					"interiorTypeAbove02",
					"interiorType02",
					"iInteriorType02",
					"nShelves02",
					"nDrawers02",
					"nDrawersFront02",
					"nWire02",
					"nHangers02",
					"interiorTypeUnder02",
					"iInteriorTypeUnder02",
					"nShelvesUnder02",
					"nDrawersUnder02",
					"nDrawersFrontUnder02",
					"nWireUnder02",
					"nShelvesUnder02",
					"nHangersUnder02"

	hideparameter "module_02"
endif

! ----- Interior Fitting Type Above-----
if iFrameType = FRAME_WIRE then
	values "interiorType02" stInteriorType[1], stInteriorType[4], stInteriorType[5], stInteriorType[6]
	values "interiorTypeAbove02" stInteriorType[1], stInteriorType[4], stInteriorType[5], stInteriorType[6]
	values "iInteriorType02"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_SHELF
else
	if iDoorType <> DOOR_TYPE_NONE then
		values "interiorType02" stInteriorType[1], stInteriorType[2], stInteriorType[4], stInteriorType[5], stInteriorType[6]
		values "interiorTypeAbove02" stInteriorType[1], stInteriorType[2], stInteriorType[4], stInteriorType[5], stInteriorType[6]
		values "iInteriorType02"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_DRAWER, INTERIOR_SHELF
	else
		values "interiorType02" stInteriorType
		values "interiorTypeAbove02" stInteriorType
		values "iInteriorType02"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_DRAWERFRONT, INTERIOR_DRAWER, INTERIOR_SHELF
	endif
endif
if GLOB_MODPAR_NAME = "interiorType02" or GLOB_MODPAR_NAME = "interiorTypeAbove02" then
	iInteriorType02 = 0
	if GLOB_MODPAR_NAME = "interiorType02" then
		for i = 1 to vardim1(stInteriorType)
			if interiorType02= stInteriorType[i] then	iInteriorType02 = 6-i
		next i
		interiorTypeAbove02 = interiorType02
		parameters interiorTypeAbove02 = interiorTypeAbove02
	endif
	if GLOB_MODPAR_NAME = "interiorTypeAbove02" then
		for i = 1 to vardim1(stInteriorType)
			if interiorTypeAbove02= stInteriorType[i] then	iInteriorType02 = 6-i
		next i
		interiorType02 = interiorTypeAbove02
		parameters interiorType02 = interiorType02
	endif
	parameters iInteriorType02 = iInteriorType02
else
	iInteriorType02 = max(min(iInteriorType02,5),0)
	parameters interiorType02 = stInteriorType[6-iInteriorType02]
	parameters interiorTypeAbove02 = stInteriorType[6-iInteriorType02]
endif

values "nShelves02" range [1, ]
values "nDrawers02" range [1, ]
values "nDrawersFront02" range [1, ]
values "nWire02" range [1, ]
values "nHangers02" range [1, ]
values "modulWidth02" range [minDist, A-frameWidth-minDist-(nModule>=3)*modulWidth03-(nModule>=4)*modulWidth04-(nModule>=5)*modulWidth05-(nModule>=6)*modulWidth06]
values "divisionHeight02" range [leg_h+minDist, ZZYZX-bCornice*cot-minDist]

if bDivision02 then
	lock "interiorType02"
	hideparameter "interiorType02"
else
	lock "interiorTypeUnder02", "iInteriorTypeUnder02", "interiorTypeAbove02", "nHangersUnder02", "nWireUnder02", "nDrawersFrontUnder02", "nDrawersUnder02", "nShelvesUnder02", "divisionHeight02"
	hideparameter "interiorTypeUnder02", "iInteriorTypeUnder02", "interiorTypeAbove02", "nHangersUnder02", "nWireUnder02", "nDrawersFrontUnder02", "nDrawersUnder02", "nShelvesUnder02", "divisionHeight02"
endif

if iInteriorType02 <> INTERIOR_HANGER then
	lock "nHangers02"
	hideparameter "nHangers02"
endif

if iInteriorType02 <> INTERIOR_WIRE then
	lock "nWire02"
	hideparameter "nWire02"
endif

if iInteriorType02 <> INTERIOR_DRAWERFRONT then
	lock "nDrawersFront02"
	hideparameter "nDrawersFront02"
endif

if iInteriorType02 <> INTERIOR_DRAWER then
	lock "nDrawers02"
	hideparameter "nDrawers02"
endif

if iInteriorType02 <> INTERIOR_SHELF then
	lock "nShelves02"
	hideparameter "nShelves02"
endif

! ----- Interior Fitting Type Under-----
if iFrameType = FRAME_WIRE then
	values "interiorTypeUnder02" stInteriorType[1], stInteriorType[4], stInteriorType[5], stInteriorType[6]
	values "iInteriorTypeUnder02"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_SHELF
else
	if iDoorType <> DOOR_TYPE_NONE then
		values "interiorTypeUnder02" stInteriorType[1], stInteriorType[2], stInteriorType[4], stInteriorType[5], stInteriorType[6]
		values "iInteriorTypeUnder02"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_DRAWER, INTERIOR_SHELF
	else
		values "interiorTypeUnder02" stInteriorType
		values "iInteriorTypeUnder02"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_DRAWERFRONT, INTERIOR_DRAWER, INTERIOR_SHELF
	endif
endif
if GLOB_MODPAR_NAME = "interiorTypeUnder02" then
	iInteriorTypeUnder02 = 0
	for i = 1 to vardim1(stInteriorType)
		if interiorTypeUnder02= stInteriorType[i] then	iInteriorTypeUnder02 = 6-i
	next i
	parameters iInteriorTypeUnder02 = iInteriorTypeUnder02
else
	iInteriorTypeUnder02 = max(min(iInteriorTypeUnder02,5),0)
	parameters interiorTypeUnder02 = stInteriorType[6-iInteriorTypeUnder02]
endif

values "nShelvesUnder02" range [1, ]
values "nDrawersUnder02" range [1, ]
values "nDrawersFrontUnder02" range [1, ]
values "nWireUnder02" range [1, ]
values "nHangersUnder02" range [1, ]

if iInteriorTypeUnder02 <> INTERIOR_HANGER then
	lock "nHangersUnder02"
	hideparameter "nHangersUnder02"
endif

if iInteriorTypeUnder02 <> INTERIOR_WIRE then
	lock "nWireUnder02"
	hideparameter "nWireUnder02"
endif

if iInteriorTypeUnder02 <> INTERIOR_DRAWERFRONT then
	lock "nDrawersFrontUnder02"
	hideparameter "nDrawersFrontUnder02"
endif

if iInteriorTypeUnder02 <> INTERIOR_DRAWER then
	lock "nDrawersUnder02"
	hideparameter "nDrawersUnder02"
endif

if iInteriorTypeUnder02 <> INTERIOR_SHELF then
	lock "nShelvesUnder02"
	hideparameter "nShelvesUnder02"
endif


! ==============================================================================
! Module 03
! ==============================================================================
if nModule < 3 then
	lock			"module_03",
					"modulWidth03",
					"bDivision03",
					"divisionHeight03",
					"interiorTypeAbove03",
					"interiorType03",
					"iInteriorType03",
					"nShelves03",
					"nDrawers03",
					"nDrawersFront03",
					"nWire03",
					"nHangers03",
					"interiorTypeUnder03",
					"iInteriorTypeUnder03",
					"nShelvesUnder03",
					"nDrawersUnder03",
					"nDrawersFrontUnder03",
					"nWireUnder03",
					"nShelvesUnder03",
					"nHangersUnder03"

	hideparameter "module_03"
endif

! ----- Interior Fitting Type Above-----
if iFrameType = FRAME_WIRE then
	values "interiorType03" stInteriorType[1], stInteriorType[4], stInteriorType[5], stInteriorType[6]
	values "interiorTypeAbove03" stInteriorType[1], stInteriorType[4], stInteriorType[5], stInteriorType[6]
	values "iInteriorType03"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_SHELF
else
	if iDoorType <> DOOR_TYPE_NONE then
		values "interiorType03" stInteriorType[1], stInteriorType[2], stInteriorType[4], stInteriorType[5], stInteriorType[6]
		values "interiorTypeAbove03" stInteriorType[1], stInteriorType[2], stInteriorType[4], stInteriorType[5], stInteriorType[6]
		values "iInteriorType03"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_DRAWER, INTERIOR_SHELF
	else
		values "interiorType03" stInteriorType
		values "interiorTypeAbove03" stInteriorType
		values "iInteriorType03"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_DRAWERFRONT, INTERIOR_DRAWER, INTERIOR_SHELF
	endif
endif
if GLOB_MODPAR_NAME = "interiorType03" or GLOB_MODPAR_NAME = "interiorTypeAbove03" then
	iInteriorType03 = 0
	if GLOB_MODPAR_NAME = "interiorType03" then
		for i = 1 to vardim1(stInteriorType)
			if interiorType03= stInteriorType[i] then	iInteriorType03 = 6-i
		next i
		interiorTypeAbove03 = interiorType03
		parameters interiorTypeAbove03 = interiorTypeAbove03
	endif
	if GLOB_MODPAR_NAME = "interiorTypeAbove03" then
		for i = 1 to vardim1(stInteriorType)
			if interiorTypeAbove03= stInteriorType[i] then	iInteriorType03 = 6-i
		next i
		interiorType03 = interiorTypeAbove03
		parameters interiorType03 = interiorType03
	endif
	parameters iInteriorType03 = iInteriorType03
else
	iInteriorType03 = max(min(iInteriorType03,5),0)
	parameters interiorType03 = stInteriorType[6-iInteriorType03]
	parameters interiorTypeAbove03 = stInteriorType[6-iInteriorType03]
endif

values "nShelves03" range [1, ]
values "nDrawers03" range [1, ]
values "nDrawersFront03" range [1, ]
values "nWire03" range [1, ]
values "nHangers03" range [1, ]
values "modulWidth03" range [minDist, A-frameWidth-minDist-modulWidth02-(nModule>=4)*modulWidth04-(nModule>=5)*modulWidth05-(nModule>=6)*modulWidth06]
values "divisionHeight03" range [leg_h+minDist, ZZYZX-bCornice*cot-minDist]

if bDivision03 then
	lock "interiorType03"
	hideparameter "interiorType03"
else
	lock "interiorTypeUnder03", "iInteriorTypeUnder03", "interiorTypeAbove03", "nHangersUnder03", "nWireUnder03", "nDrawersFrontUnder03", "nDrawersUnder03", "nShelvesUnder03", "divisionHeight03"
	hideparameter "interiorTypeUnder03", "iInteriorTypeUnder03", "interiorTypeAbove03", "nHangersUnder03", "nWireUnder03", "nDrawersFrontUnder03", "nDrawersUnder03", "nShelvesUnder03", "divisionHeight03"
endif

if iInteriorType03 <> INTERIOR_HANGER then
	lock "nHangers03"
	hideparameter "nHangers03"
endif

if iInteriorType03 <> INTERIOR_WIRE then
	lock "nWire03"
	hideparameter "nWire03"
endif

if iInteriorType03 <> INTERIOR_DRAWERFRONT then
	lock "nDrawersFront03"
	hideparameter "nDrawersFront03"
endif

if iInteriorType03 <> INTERIOR_DRAWER then
	lock "nDrawers03"
	hideparameter "nDrawers03"
endif

if iInteriorType03 <> INTERIOR_SHELF then
	lock "nShelves03"
	hideparameter "nShelves03"
endif

! ----- Interior Fitting Type Under-----
if iFrameType = FRAME_WIRE then
	values "interiorTypeUnder03" stInteriorType[1], stInteriorType[4], stInteriorType[5], stInteriorType[6]
	values "iInteriorTypeUnder03"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_SHELF
else
	if iDoorType <> DOOR_TYPE_NONE then
		values "interiorTypeUnder03" stInteriorType[1], stInteriorType[2], stInteriorType[4], stInteriorType[5], stInteriorType[6]
		values "iInteriorTypeUnder03"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_DRAWER, INTERIOR_SHELF
	else
		values "interiorTypeUnder03" stInteriorType
		values "iInteriorTypeUnder03"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_DRAWERFRONT, INTERIOR_DRAWER, INTERIOR_SHELF
	endif
endif
if GLOB_MODPAR_NAME = "interiorTypeUnder03" then
	iInteriorTypeUnder03 = 0
	for i = 1 to vardim1(stInteriorType)
		if interiorTypeUnder03= stInteriorType[i] then	iInteriorTypeUnder03 = 6-i
	next i
	parameters iInteriorTypeUnder03 = iInteriorTypeUnder03
else
	iInteriorTypeUnder03 = max(min(iInteriorTypeUnder03,5),0)
	parameters interiorTypeUnder03 = stInteriorType[6-iInteriorTypeUnder03]
endif

values "nShelvesUnder03" range [1, ]
values "nDrawersUnder03" range [1, ]
values "nDrawersFrontUnder03" range [1, ]
values "nWireUnder03" range [1, ]
values "nHangersUnder03" range [1, ]

if iInteriorTypeUnder03 <> INTERIOR_HANGER then
	lock "nHangersUnder03"
	hideparameter "nHangersUnder03"
endif

if iInteriorTypeUnder03 <> INTERIOR_WIRE then
	lock "nWireUnder03"
	hideparameter "nWireUnder03"
endif

if iInteriorTypeUnder03 <> INTERIOR_DRAWERFRONT then
	lock "nDrawersFrontUnder03"
	hideparameter "nDrawersFrontUnder03"
endif

if iInteriorTypeUnder03 <> INTERIOR_DRAWER then
	lock "nDrawersUnder03"
	hideparameter "nDrawersUnder03"
endif

if iInteriorTypeUnder03 <> INTERIOR_SHELF then
	lock "nShelvesUnder03"
	hideparameter "nShelvesUnder03"
endif


! ==============================================================================
! Module 04
! ==============================================================================
if nModule < 4 then
	lock			"module_04",
					"modulWidth04",
					"bDivision04",
					"divisionHeight04",
					"interiorTypeAbove04",
					"interiorType04",
					"iInteriorType04",
					"nShelves04",
					"nDrawers04",
					"nDrawersFront04",
					"nWire04",
					"nHangers04",
					"interiorTypeUnder04",
					"iInteriorTypeUnder04",
					"nShelvesUnder04",
					"nDrawersUnder04",
					"nDrawersFrontUnder04",
					"nWireUnder04",
					"nShelvesUnder04",
					"nHangersUnder04"

	hideparameter "module_04"
endif

! ----- Interior Fitting Type Above-----
if iFrameType = FRAME_WIRE then
	values "interiorType04" stInteriorType[1], stInteriorType[4], stInteriorType[5], stInteriorType[6]
	values "interiorTypeAbove04" stInteriorType[1], stInteriorType[4], stInteriorType[5], stInteriorType[6]
	values "iInteriorType04"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_SHELF
else
	if iDoorType <> DOOR_TYPE_NONE then
		values "interiorType04" stInteriorType[1], stInteriorType[2], stInteriorType[4], stInteriorType[5], stInteriorType[6]
		values "interiorTypeAbove04" stInteriorType[1], stInteriorType[2], stInteriorType[4], stInteriorType[5], stInteriorType[6]
		values "iInteriorType04"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_DRAWER, INTERIOR_SHELF
	else
		values "interiorType04" stInteriorType
		values "interiorTypeAbove04" stInteriorType
		values "iInteriorType04"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_DRAWERFRONT, INTERIOR_DRAWER, INTERIOR_SHELF
	endif
endif
if GLOB_MODPAR_NAME = "interiorType04" or GLOB_MODPAR_NAME = "interiorTypeAbove04" then
	iInteriorType04 = 0
	if GLOB_MODPAR_NAME = "interiorType04" then
		for i = 1 to vardim1(stInteriorType)
			if interiorType04= stInteriorType[i] then	iInteriorType04 = 6-i
		next i
		interiorTypeAbove04 = interiorType04
		parameters interiorTypeAbove04 = interiorTypeAbove04
	endif
	if GLOB_MODPAR_NAME = "interiorTypeAbove04" then
		for i = 1 to vardim1(stInteriorType)
			if interiorTypeAbove04= stInteriorType[i] then	iInteriorType04 = 6-i
		next i
		interiorType04 = interiorTypeAbove04
		parameters interiorType04 = interiorType04
	endif
	parameters iInteriorType04 = iInteriorType04
else
	iInteriorType04 = max(min(iInteriorType04,5),0)
	parameters interiorType04 = stInteriorType[6-iInteriorType04]
	parameters interiorTypeAbove04 = stInteriorType[6-iInteriorType04]
endif

values "nShelves04" range [1, ]
values "nDrawers04" range [1, ]
values "nDrawersFront04" range [1, ]
values "nWire04" range [1, ]
values "nHangers04" range [1, ]
values "modulWidth04" range [minDist, A-frameWidth-minDist-modulWidth02-modulWidth03-(nModule>=5)*modulWidth05-(nModule>=6)*modulWidth06]
values "divisionHeight04" range [leg_h+minDist, ZZYZX-bCornice*cot-minDist]

if bDivision04 then
	lock "interiorType04"
	hideparameter "interiorType04"
else
	lock "interiorTypeUnder04", "iInteriorTypeUnder04", "interiorTypeAbove04", "nHangersUnder04", "nWireUnder04", "nDrawersFrontUnder04", "nDrawersUnder04", "nShelvesUnder04", "divisionHeight04"
	hideparameter "interiorTypeUnder04", "iInteriorTypeUnder04", "interiorTypeAbove04", "nHangersUnder04", "nWireUnder04", "nDrawersFrontUnder04", "nDrawersUnder04", "nShelvesUnder04", "divisionHeight04"
endif

if iInteriorType04 <> INTERIOR_HANGER then
	lock "nHangers04"
	hideparameter "nHangers04"
endif

if iInteriorType04 <> INTERIOR_WIRE then
	lock "nWire04"
	hideparameter "nWire04"
endif

if iInteriorType04 <> INTERIOR_DRAWERFRONT then
	lock "nDrawersFront04"
	hideparameter "nDrawersFront04"
endif

if iInteriorType04 <> INTERIOR_DRAWER then
	lock "nDrawers04"
	hideparameter "nDrawers04"
endif

if iInteriorType04 <> INTERIOR_SHELF then
	lock "nShelves04"
	hideparameter "nShelves04"
endif

! ----- Interior Fitting Type Under-----
if iFrameType = FRAME_WIRE then
	values "interiorTypeUnder04" stInteriorType[1], stInteriorType[4], stInteriorType[5], stInteriorType[6]
	values "iInteriorTypeUnder04"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_SHELF
else
	if iDoorType <> DOOR_TYPE_NONE then
		values "interiorTypeUnder04" stInteriorType[1], stInteriorType[2], stInteriorType[4], stInteriorType[5], stInteriorType[6]
		values "iInteriorTypeUnder04"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_DRAWER, INTERIOR_SHELF
	else
		values "interiorTypeUnder04" stInteriorType
		values "iInteriorTypeUnder04"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_DRAWERFRONT, INTERIOR_DRAWER, INTERIOR_SHELF
	endif
endif
if GLOB_MODPAR_NAME = "interiorTypeUnder04" then
	iInteriorTypeUnder04 = 0
	for i = 1 to vardim1(stInteriorType)
		if interiorTypeUnder04= stInteriorType[i] then	iInteriorTypeUnder04 = 6-i
	next i
	parameters iInteriorTypeUnder04 = iInteriorTypeUnder04
else
	iInteriorTypeUnder04 = max(min(iInteriorTypeUnder04,5),0)
	parameters interiorTypeUnder04 = stInteriorType[6-iInteriorTypeUnder04]
endif

values "nShelvesUnder04" range [1, ]
values "nDrawersUnder04" range [1, ]
values "nDrawersFrontUnder04" range [1, ]
values "nWireUnder04" range [1, ]
values "nHangersUnder04" range [1, ]

if iInteriorTypeUnder04 <> INTERIOR_HANGER then
	lock "nHangersUnder04"
	hideparameter "nHangersUnder04"
endif

if iInteriorTypeUnder04 <> INTERIOR_WIRE then
	lock "nWireUnder04"
	hideparameter "nWireUnder04"
endif

if iInteriorTypeUnder04 <> INTERIOR_DRAWERFRONT then
	lock "nDrawersFrontUnder04"
	hideparameter "nDrawersFrontUnder04"
endif

if iInteriorTypeUnder04 <> INTERIOR_DRAWER then
	lock "nDrawersUnder04"
	hideparameter "nDrawersUnder04"
endif

if iInteriorTypeUnder04 <> INTERIOR_SHELF then
	lock "nShelvesUnder04"
	hideparameter "nShelvesUnder04"
endif


! ==============================================================================
! Module 05
! ==============================================================================
if nModule < 5 then
	lock			"module_05",
					"modulWidth05",
					"bDivision05",
					"divisionHeight05",
					"interiorTypeAbove05",
					"interiorType05",
					"iInteriorType05",
					"nShelves05",
					"nDrawers05",
					"nDrawersFront05",
					"nWire05",
					"nHangers05",
					"interiorTypeUnder05",
					"iInteriorTypeUnder05",
					"nShelvesUnder05",
					"nDrawersUnder05",
					"nDrawersFrontUnder05",
					"nWireUnder05",
					"nShelvesUnder05",
					"nHangersUnder05"

	hideparameter "module_05"
endif

! ----- Interior Fitting Type Above-----
if iFrameType = FRAME_WIRE then
	values "interiorType05" stInteriorType[1], stInteriorType[4], stInteriorType[5], stInteriorType[6]
	values "interiorTypeAbove05" stInteriorType[1], stInteriorType[4], stInteriorType[5], stInteriorType[6]
	values "iInteriorType05"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_SHELF
else
	if iDoorType <> DOOR_TYPE_NONE then
		values "interiorType05" stInteriorType[1], stInteriorType[2], stInteriorType[4], stInteriorType[5], stInteriorType[6]
		values "interiorTypeAbove05" stInteriorType[1], stInteriorType[2], stInteriorType[4], stInteriorType[5], stInteriorType[6]
		values "iInteriorType05"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_DRAWER, INTERIOR_SHELF
	else
		values "interiorType05" stInteriorType
		values "interiorTypeAbove05" stInteriorType
		values "iInteriorType05"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_DRAWERFRONT, INTERIOR_DRAWER, INTERIOR_SHELF
	endif
endif
if GLOB_MODPAR_NAME = "interiorType05" or GLOB_MODPAR_NAME = "interiorTypeAbove05" then
	iInteriorType05 = 0
	if GLOB_MODPAR_NAME = "interiorType05" then
		for i = 1 to vardim1(stInteriorType)
			if interiorType05= stInteriorType[i] then	iInteriorType05 = 6-i
		next i
		interiorTypeAbove05 = interiorType05
		parameters interiorTypeAbove05 = interiorTypeAbove05
	endif
	if GLOB_MODPAR_NAME = "interiorTypeAbove05" then
		for i = 1 to vardim1(stInteriorType)
			if interiorTypeAbove05= stInteriorType[i] then	iInteriorType05 = 6-i
		next i
		interiorType05 = interiorTypeAbove05
		parameters interiorType05 = interiorType05
	endif
	parameters iInteriorType05 = iInteriorType05
else
	iInteriorType05 = max(min(iInteriorType05,5),0)
	parameters interiorType05 = stInteriorType[6-iInteriorType05]
	parameters interiorTypeAbove05 = stInteriorType[6-iInteriorType05]
endif

values "nShelves05" range [1, ]
values "nDrawers05" range [1, ]
values "nDrawersFront05" range [1, ]
values "nWire05" range [1, ]
values "nHangers05" range [1, ]
values "modulWidth05" range [minDist, A-frameWidth-minDist-modulWidth02-modulWidth03-modulWidth04-(nModule>=6)*modulWidth06]
values "divisionHeight05" range [leg_h+minDist, ZZYZX-bCornice*cot-minDist]

if bDivision05 then
	lock "interiorType05"
	hideparameter "interiorType05"
else
	lock "interiorTypeUnder05", "iInteriorTypeUnder05", "interiorTypeAbove05", "nHangersUnder05", "nWireUnder05", "nDrawersFrontUnder05", "nDrawersUnder05", "nShelvesUnder05", "divisionHeight05"
	hideparameter "interiorTypeUnder05", "iInteriorTypeUnder05", "interiorTypeAbove05", "nHangersUnder05", "nWireUnder05", "nDrawersFrontUnder05", "nDrawersUnder05", "nShelvesUnder05", "divisionHeight05"
endif

if iInteriorType05 <> INTERIOR_HANGER then
	lock "nHangers05"
	hideparameter "nHangers05"
endif

if iInteriorType05 <> INTERIOR_WIRE then
	lock "nWire05"
	hideparameter "nWire05"
endif

if iInteriorType05 <> INTERIOR_DRAWERFRONT then
	lock "nDrawersFront05"
	hideparameter "nDrawersFront05"
endif

if iInteriorType05 <> INTERIOR_DRAWER then
	lock "nDrawers05"
	hideparameter "nDrawers05"
endif

if iInteriorType05 <> INTERIOR_SHELF then
	lock "nShelves05"
	hideparameter "nShelves05"
endif

! ----- Interior Fitting Type Under-----
if iFrameType = FRAME_WIRE then
	values "interiorTypeUnder05" stInteriorType[1], stInteriorType[4], stInteriorType[5], stInteriorType[6]
	values "iInteriorTypeUnder05"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_SHELF
else
	if iDoorType <> DOOR_TYPE_NONE then
		values "interiorTypeUnder05" stInteriorType[1], stInteriorType[2], stInteriorType[4], stInteriorType[5], stInteriorType[6]
		values "iInteriorTypeUnder05"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_DRAWER, INTERIOR_SHELF
	else
		values "interiorTypeUnder05" stInteriorType
		values "iInteriorTypeUnder05"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_DRAWERFRONT, INTERIOR_DRAWER, INTERIOR_SHELF
	endif
endif
if GLOB_MODPAR_NAME = "interiorTypeUnder05" then
	iInteriorTypeUnder05 = 0
	for i = 1 to vardim1(stInteriorType)
		if interiorTypeUnder05= stInteriorType[i] then	iInteriorTypeUnder05 = 6-i
	next i
	parameters iInteriorTypeUnder05 = iInteriorTypeUnder05
else
	iInteriorTypeUnder05 = max(min(iInteriorTypeUnder05,5),0)
	parameters interiorTypeUnder05 = stInteriorType[6-iInteriorTypeUnder05]
endif

values "nShelvesUnder05" range [1, ]
values "nDrawersUnder05" range [1, ]
values "nDrawersFrontUnder05" range [1, ]
values "nWireUnder05" range [1, ]
values "nHangersUnder05" range [1, ]

if iInteriorTypeUnder05 <> INTERIOR_HANGER then
	lock "nHangersUnder05"
	hideparameter "nHangersUnder05"
endif

if iInteriorTypeUnder05 <> INTERIOR_WIRE then
	lock "nWireUnder05"
	hideparameter "nWireUnder05"
endif

if iInteriorTypeUnder05 <> INTERIOR_DRAWERFRONT then
	lock "nDrawersFrontUnder05"
	hideparameter "nDrawersFrontUnder05"
endif

if iInteriorTypeUnder05 <> INTERIOR_DRAWER then
	lock "nDrawersUnder05"
	hideparameter "nDrawersUnder05"
endif

if iInteriorTypeUnder05 <> INTERIOR_SHELF then
	lock "nShelvesUnder05"
	hideparameter "nShelvesUnder05"
endif


! ==============================================================================
! Module 06
! ==============================================================================
if nModule < 6 then
	lock			"module_06",
					"modulWidth06",
					"bDivision06",
					"divisionHeight06",
					"interiorTypeAbove06",
					"interiorType06",
					"iInteriorType06",
					"nShelves06",
					"nDrawers06",
					"nDrawersFront06",
					"nWire06",
					"nHangers06",
					"interiorTypeUnder06",
					"iInteriorTypeUnder06",
					"nShelvesUnder06",
					"nDrawersUnder06",
					"nDrawersFrontUnder06",
					"nWireUnder06",
					"nShelvesUnder06",
					"nHangersUnder06"

	hideparameter "module_06"
endif

! ----- Interior Fitting Type Above-----
if iFrameType = FRAME_WIRE then
	values "interiorType06" stInteriorType[1], stInteriorType[4], stInteriorType[5], stInteriorType[6]
	values "interiorTypeAbove06" stInteriorType[1], stInteriorType[4], stInteriorType[5], stInteriorType[6]
	values "iInteriorType06"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_SHELF
else
	if iDoorType <> DOOR_TYPE_NONE then
		values "interiorType06" stInteriorType[1], stInteriorType[2], stInteriorType[4], stInteriorType[5], stInteriorType[6]
		values "interiorTypeAbove06" stInteriorType[1], stInteriorType[2], stInteriorType[4], stInteriorType[5], stInteriorType[6]
		values "iInteriorType06"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_DRAWER, INTERIOR_SHELF
	else
		values "interiorType06" stInteriorType
		values "interiorTypeAbove06" stInteriorType
		values "iInteriorType06"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_DRAWERFRONT, INTERIOR_DRAWER, INTERIOR_SHELF
	endif
endif
if GLOB_MODPAR_NAME = "interiorType06" or GLOB_MODPAR_NAME = "interiorTypeAbove06" then
	iInteriorType06 = 0
	if GLOB_MODPAR_NAME = "interiorType06" then
		for i = 1 to vardim1(stInteriorType)
			if interiorType06= stInteriorType[i] then	iInteriorType06 = 6-i
		next i
		interiorTypeAbove06 = interiorType06
		parameters interiorTypeAbove06 = interiorTypeAbove06
	endif
	if GLOB_MODPAR_NAME = "interiorTypeAbove06" then
		for i = 1 to vardim1(stInteriorType)
			if interiorTypeAbove06= stInteriorType[i] then	iInteriorType06 = 6-i
		next i
		interiorType06 = interiorTypeAbove06
		parameters interiorType06 = interiorType06
	endif
	parameters iInteriorType06 = iInteriorType06
else
	iInteriorType06 = max(min(iInteriorType06,5),0)
	parameters interiorType06 = stInteriorType[6-iInteriorType06]
	parameters interiorTypeAbove06 = stInteriorType[6-iInteriorType06]
endif

values "nShelves06" range [1, ]
values "nDrawers06" range [1, ]
values "nDrawersFront06" range [1, ]
values "nWire06" range [1, ]
values "nHangers06" range [1, ]
values "modulWidth06" range [minDist, A-frameWidth-minDist-modulWidth02-modulWidth03-modulWidth04-modulWidth05]
values "divisionHeight06" range [leg_h+minDist, ZZYZX-bCornice*cot-minDist]

if bDivision06 then
	lock "interiorType06"
	hideparameter "interiorType06"
else
	lock "interiorTypeUnder06", "iInteriorTypeUnder06", "interiorTypeAbove06", "nHangersUnder06", "nWireUnder06", "nDrawersFrontUnder06", "nDrawersUnder06", "nShelvesUnder06", "divisionHeight06"
	hideparameter "interiorTypeUnder06", "iInteriorTypeUnder06", "interiorTypeAbove06", "nHangersUnder06", "nWireUnder06", "nDrawersFrontUnder06", "nDrawersUnder06", "nShelvesUnder06", "divisionHeight06"
endif

if iInteriorType06 <> INTERIOR_HANGER then
	lock "nHangers06"
	hideparameter "nHangers06"
endif

if iInteriorType06 <> INTERIOR_WIRE then
	lock "nWire06"
	hideparameter "nWire06"
endif

if iInteriorType06 <> INTERIOR_DRAWERFRONT then
	lock "nDrawersFront06"
	hideparameter "nDrawersFront06"
endif

if iInteriorType06 <> INTERIOR_DRAWER then
	lock "nDrawers06"
	hideparameter "nDrawers06"
endif

if iInteriorType06 <> INTERIOR_SHELF then
	lock "nShelves06"
	hideparameter "nShelves06"
endif

! ----- Interior Fitting Type Under-----
if iFrameType = FRAME_WIRE then
	values "interiorTypeUnder06" stInteriorType[1], stInteriorType[4], stInteriorType[5], stInteriorType[6]
	values "iInteriorTypeUnder06"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_SHELF
else
	if iDoorType <> DOOR_TYPE_NONE then
		values "interiorTypeUnder06" stInteriorType[1], stInteriorType[2], stInteriorType[4], stInteriorType[5], stInteriorType[6]
		values "iInteriorTypeUnder06"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_DRAWER, INTERIOR_SHELF
	else
		values "interiorTypeUnder06" stInteriorType
		values "iInteriorTypeUnder06"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_DRAWERFRONT, INTERIOR_DRAWER, INTERIOR_SHELF
	endif
endif
if GLOB_MODPAR_NAME = "interiorTypeUnder06" then
	iInteriorTypeUnder06 = 0
	for i = 1 to vardim1(stInteriorType)
		if interiorTypeUnder06= stInteriorType[i] then	iInteriorTypeUnder06 = 6-i
	next i
	parameters iInteriorTypeUnder06 = iInteriorTypeUnder06
else
	iInteriorTypeUnder06 = max(min(iInteriorTypeUnder06,5),0)
	parameters interiorTypeUnder06 = stInteriorType[6-iInteriorTypeUnder06]
endif

values "nShelvesUnder06" range [1, ]
values "nDrawersUnder06" range [1, ]
values "nDrawersFrontUnder06" range [1, ]
values "nWireUnder06" range [1, ]
values "nHangersUnder06" range [1, ]

if iInteriorTypeUnder06 <> INTERIOR_HANGER then
	lock "nHangersUnder06"
	hideparameter "nHangersUnder06"
endif

if iInteriorTypeUnder06 <> INTERIOR_WIRE then
	lock "nWireUnder06"
	hideparameter "nWireUnder06"
endif

if iInteriorTypeUnder06 <> INTERIOR_DRAWERFRONT then
	lock "nDrawersFrontUnder06"
	hideparameter "nDrawersFrontUnder06"
endif

if iInteriorTypeUnder06 <> INTERIOR_DRAWER then
	lock "nDrawersUnder06"
	hideparameter "nDrawersUnder06"
endif

if iInteriorTypeUnder06 <> INTERIOR_SHELF then
	lock "nShelvesUnder06"
	hideparameter "nShelvesUnder06"
endif


! ==============================================================================
! Drawers
! ==============================================================================
! ----- Drawers -----
dim drawerStyleNumber[3]
	drawerStyleNumber[1] = 1
	drawerStyleNumber[2] = 2
	drawerStyleNumber[3] = 3

values "drawerStyle" stDrawerTypes
values "iDrawerStyle"  drawerStyleNumber
if GLOB_MODPAR_NAME = "drawerStyle" then
	iDrawerStyle = 1
	for i = 1 to vardim1(stDrawerTypes)
		if drawerStyle= stDrawerTypes[i] then	iDrawerStyle = drawerStyleNumber[i]
	next i
	parameters iDrawerStyle = iDrawerStyle
else
	for i = 1 to vardim1(stDrawerTypes)
		if iDrawerStyle = drawerStyleNumber[i] then drawerStyle = stDrawerTypes[i]
	next i
	parameters drawerStyle = drawerStyle
endif

values "drawerFrameWidth" range [0.03,]

if iDrawerStyle = 1 then
	hideparameter "drawerFrameWidth"
	lock "drawerFrameWidth"
endif

if nDrawersWithFront = 0 then
	hideparameter "drawer", "drawerFrameWidth", "iDrawerStyle", "drawerStyle"
	lock "drawer", "drawerFrameWidth", "iDrawerStyle", "drawerStyle"
endif

if nDrawersWithFront = 0 then
	hideparameter "gs_drawer_mat", "matDrawerInset"
	lock "gs_drawer_mat", "matDrawerInset"
endif


! ==============================================================================
! Knob
! ==============================================================================
! ----- Knob Style-----
values{2} "gs_knob_type_m"	KNOB_STYLE_1,	`Стиль 1`,
							KNOB_STYLE_2,	`Стиль 2`,
							KNOB_STYLE_3,	`Стиль 3`,
							KNOB_STYLE_4,	`Стиль 4`,
							KNOB_STYLE_5,	`Стиль 5`,
							KNOB_STYLE_6,	`Стиль 6`,
							KNOB_STYLE_7,	`Стиль 7`,
							KNOB_STYLE_8,	`Стиль 8`

if gs_knob_type_m < 4 then
	lock "gs_knob_p", "knob_size"
	hideparameter "gs_knob_p", "knob_size"
endif

if not(bKnob) then
	lock			"gs_knob_type_m", "knob_pl_x", "knob_pl_y"
	hideparameter	"gs_knob_type_m", "knob_pl_x", "knob_pl_y"
endif

! ----- Knob Placing-----
values "gs_knob_p_m" 0,1
values "gs_knob_p" stKnobPlacing
if GLOB_MODPAR_NAME = "gs_knob_p" then
	gs_knob_type_m = KNOB_STYLE_1
	for i = 1 to vardim1(stKnobPlacing)
		if gs_knob_p = stKnobPlacing[i] then gs_knob_p_m = i-1
	next i
	parameters gs_knob_p_m = gs_knob_p_m
else
	gs_knob_p_m = max(min(gs_knob_p_m,1),0)
	parameters gs_knob_p = stKnobPlacing[gs_knob_p_m+1]
endif

if (iDoorType = DOOR_TYPE_NONE and nDrawersWithFront = 0) or not(bKnob) then
	hideparameter "gs_knob_type", "gs_knob_type_m", "knob_pl_x", "knob_pl_y", "gs_knob_p", "gs_knob_p_m", "knob_size", "gs_knob_mat"
	lock "gs_knob_type", "gs_knob_type_m", "knob_pl_x", "knob_pl_y", "gs_knob_p", "gs_knob_p_m", "knob_size", "gs_knob_mat"
endif


! ==============================================================================
! Cornice
! ==============================================================================
! ----- Cornice Style -----
values{2} "gs_cornice_type_m"	CORN_STYLE_1,		`Стиль 1`,
								CORN_STYLE_2,		`Стиль 2`,
								CORN_STYLE_3,		`Стиль 3`,
								CORN_STYLE_4,		`Стиль 4`

! ----- Cornice Overhang-----
values "gs_lining" stCorniceOverhang
values "gs_lining_m" 1,2,3,4
if GLOB_MODPAR_NAME = "gs_lining" then
	gs_lining_m = 0
	for i = 1 to vardim1(stCorniceOverhang)
		if gs_lining = stCorniceOverhang[i] then gs_lining_m= 5-i
	next i
	parameters gs_lining_m = gs_lining_m
else
	gs_lining_m = max(min(gs_lining_m,4),1)
	parameters gs_lining = stCorniceOverhang[5-gs_lining_m]
endif


if not(bCornice) then
	hideparameter "gs_cornice_type_m", "gs_lining", "gs_lining_m", "cot", "cooh", "gs_cornice_mat"
	lock "gs_cornice_type_m", "gs_lining", "gs_lining_m", "cot", "cooh", "gs_cornice_mat"
else

	values "cot" range (0,)
	if gs_cornice_type_m=CORN_STYLE_1  then values "cooh" range [0,)
	if gs_cornice_type_m=CORN_STYLE_2 or gs_cornice_type_m=CORN_STYLE_3  then values "cooh" range [1/2*cot,)
	if gs_cornice_type_m=CORN_STYLE_4 then values "cooh" range [3/4*cot,)
endif


! ==============================================================================
! Leg
! ==============================================================================
! ----- Base Style-----
values{2} "gs_leg_type_m" 	LEG_STYLE_1, `Стиль 1`,
							LEG_STYLE_2, `Стиль 2`,
							LEG_STYLE_3, `Стиль 3`,
							LEG_STYLE_4, `Стиль 4`,
							LEG_STYLE_5, `Стиль 5`,
							LEG_STYLE_6, `Стиль 6`

values "leg_h" range [0, mindist*3]
values "leg_w" range (0, min(a/2, b/2))

if not(bBase) then
	hideparameter	"gs_leg_type_m", "gs_leg_mat", "leg_h", "leg_w"
	lock			"gs_leg_type_m", "gs_leg_mat", "leg_h", "leg_w"
endif


! ==============================================================================
! 2D Style
! ==============================================================================
! ----- 2D Symbol Type -----

if iDoorType = 2 | iDoorType = 1 then				! Double Sliding Door, Triple Sliding Door 
	values{2} "iSymbolStyle" 	1, `Стиль 1`,		! Enable all Symbol Types
								2, `Стиль 2`,
								3, `Стиль 3`,
								4, `Стиль 4`,
								5, `Стиль 5`,
								6, `Стиль 6`,
								7, `Стиль 7`
else												! No Door
	values{2} "iSymbolStyle" 	1, `Стиль 1`,		! Enable only Symbol Type without door and drawer symbol
								2, `Стиль 2`,
								3, `Стиль 3`
endif

if gs_cont_pen=0 then parameters gs_cont_pen=4
if gs_fill_pen=0 then parameters gs_fill_pen=19

! ==============================================================================
! Lock and Hide "bHangers" parameter
! ==============================================================================

if 	iSymbolStyle = 2 |\ 
 	iSymbolStyle = 3 |\ 
 	iSymbolStyle = 4 |\ 
	iSymbolStyle = 5 then		! Lock Hanger Symbol in case of symbols drawn in the cabinet

	hideparameter "bHangers"
	lock "bHangers"
else
	dim _iTypes[6]
		_iTypes[1] = iInteriorType01
		_iTypes[2] = iInteriorType02
        _iTypes[3] = iInteriorType03
		_iTypes[4] = iInteriorType04
		_iTypes[5] = iInteriorType05
        _iTypes[6] = iInteriorType06

    _bLock = 1
    for _iii = 1 to nModule
        if _iTypes[_iii] = INTERIOR_HANGER then
            _bLock = 0
            _iii = nModule
		endif
    next _iii

    if _bLock then
		hideparameter "bHangers"
		lock "bHangers"
	endif
endif



! ==============================================================================
! Minimal Space
! ==============================================================================
values "MSFront" range [0, ]


! ==============================================================================
! 3D Representation
! ==============================================================================
! ----- 3D Representation -----
values "gs_detlevel_3D" stDetlevel3D		! Off(0), Simple(1), Detailed(2)
values "gs_detlevel_3D_m" 0, 1, 2
if GLOB_MODPAR_NAME = "gs_detlevel_3D" then
	gs_detlevel_3D_m = 2
	for i = 1 to vardim1(stDetlevel3D)
		if gs_detlevel_3D = stDetlevel3D[i] then	gs_detlevel_3D_m = 3-i
	next i
	parameters gs_detlevel_3D_m = gs_detlevel_3D_m
else
	gs_detlevel_3D_m = max(min(gs_detlevel_3D_m,2),0)
	parameters gs_detlevel_3D = stDetlevel3D[3-gs_detlevel_3D_m]
endif

values "gs_resol" range [3, )
if gs_resol<3 then parameters gs_resol=3

! =============================================================================
! UI Support
! =============================================================================

if GLOB_UI_BUTTON_ID < 0 then
	parameters gs_ui_current_page = - GLOB_UI_BUTTON_ID
endif

END

! ======================================================================
! SubRoutines
! ======================================================================

"allocationModuleWidth":
	tempModulWidth = (A - frameWidth) / nModule
	if nModule >= 1 then
		modulWidth01 = tempModulWidth
		parameters modulWidth01 = modulWidth01
	endif
	if nModule >= 2 then
		modulWidth02 = tempModulWidth
		parameters modulWidth02 = modulWidth02
	endif
	if nModule >= 3 then
		modulWidth03 = tempModulWidth
		parameters modulWidth03 = modulWidth03
	endif
	if nModule >= 4 then
		modulWidth04 = tempModulWidth
		parameters modulWidth04 = modulWidth04
	endif
	if nModule >= 5 then
		modulWidth05 = tempModulWidth
		parameters modulWidth05 = modulWidth05
	endif
	if nModule >= 6 then
		modulWidth06 = tempModulWidth
		parameters modulWidth06 = modulWidth06
	endif
return
