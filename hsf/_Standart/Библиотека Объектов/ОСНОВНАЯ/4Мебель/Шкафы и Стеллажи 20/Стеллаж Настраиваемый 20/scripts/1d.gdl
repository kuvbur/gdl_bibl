
EPS = 0.0001

LEG_TOE		= 1
LEG_RECT	= 2
LEG_ROUND	= 3
LEG_LEG		= 4


legHeight = bLeg * gs_legHeight

for i = 1 to vardim1(gs_firstShelf)
	if i = 1 then
		if gs_firstShelf[i] < 0 then gs_firstShelf[i] = 0
	else
		for j = 1 to i - 1
			if gs_firstShelf[i] < gs_firstShelf[j] then gs_firstShelf[i] = gs_firstShelf[j]
		next j
	endif

	lastCorrection = INT ((gs_lastShelf[i] + EPS) / gs_colWidth) * gs_colWidth * 0

	if gs_firstShelf[i] > a - lastCorrection - gs_colWidth - gs_frameWidth then gs_firstShelf[i] = a - lastCorrection - gs_colWidth - gs_frameWidth

	gs_firstShelf[i] = INT(gs_firstShelf[i] / gs_colWidth) * gs_colWidth
next i
for i = 1 to vardim1(gs_lastShelf)
	if i = 1 then
		if gs_lastShelf[i] < 0 then gs_lastShelf[i] = 0
	else
		if gs_lastShelf[i] < gs_lastShelf[i-1] then gs_lastShelf[i] = gs_lastShelf[i-1]
	endif

	firstCorrection = INT((gs_firstShelf[i] +  EPS) / gs_colWidth) * gs_colWidth

	for j = i to vardim1(gs_lastShelf)
		if firstCorrection < INT((gs_firstShelf[j] +  EPS) / gs_colWidth) * gs_colWidth then firstCorrection = INT((gs_firstShelf[j] +  EPS) / gs_colWidth) * gs_colWidth
	next j

	if gs_lastShelf[i] > a - firstCorrection - gs_colWidth - gs_frameWidth then gs_lastShelf[i] = a - firstCorrection - gs_colWidth - gs_frameWidth
	gs_lastShelf[i] = INT(gs_lastShelf[i] / gs_colWidth) * gs_colWidth
next i


