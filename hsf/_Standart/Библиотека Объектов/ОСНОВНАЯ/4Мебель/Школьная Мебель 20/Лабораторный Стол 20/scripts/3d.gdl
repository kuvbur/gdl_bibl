
if gs_detlevel_3D_m = DET3D_NONE then end
if GLOB_CONTEXT > 20 and GLOB_CONTEXT < 40 then gs_detlevel_3D_m = DET3D_SIMPLE
if NOT(gs_shadow) then SHADOW OFF
pen gs_cont_pen

!In simple keep in syncron the resol with the makro's simple resol
_resol	= gs_resol * (gs_detlevel_3D_m = DET3D_DETAILED) + 12 * (gs_detlevel_3D_m = DET3D_SIMPLE)
resol _resol


! ======================================================================
! Built-in Surfaces
! ======================================================================

define material	"labMatStainlessSteel" 2,
	0.840208,   0.831708,   0.848692

define material	"labMatBlack" 2,
	0, 0, 0

define material	"labMatRed" 2,
	0.976471, 0, 0

define material	"labMatBlue" 2,
	0.223529, 0.376471, 0.72549

define material	"labMatGreen" 2,
	0.172549, 0.529412, 0.196078


unID = 1

! ======================================================================
! Hotspots
! ======================================================================

hotspot	0,	0,	0,	unID, A, 1 + 256,	tableLength:	unID = unID + 1
hotspot	-1,	0,	0,	unID, A, 3,			tableLength:	unID = unID + 1
hotspot	A,	0,	0,	unID, A, 2, 		tableLength:	unID = unID + 1

hotspot	0,	B,	0,	unID, A, 1 + 256,	tableLength:	unID = unID + 1
hotspot	-1,	B,	0,	unID, A, 3,			tableLength:	unID = unID + 1
hotspot	A,	B,	0,	unID, A, 2,			tableLength:	unID = unID + 1

hotspot	0,	0,	0,	unID, B, 1 + 256,	tableDepth:		unID = unID + 1
hotspot	0,	-1,	0,	unID, B, 3,			tableDepth:		unID = unID + 1
hotspot	0,	B,	0,	unID, B, 2,			tableDepth:		unID = unID + 1

hotspot	A,	0,	0,	unID, B, 1 + 256,	tableDepth:		unID = unID + 1
hotspot	A,	-1,	0,	unID, B, 3,			tableDepth:		unID = unID + 1
hotspot	A,	B,	0,	unID, B, 2,			tableDepth:		unID = unID + 1


! ======================================================================
! Counter
! ======================================================================

for thv = 1 to 2
	for thh = 1 to 2
		hotspot	0,		0,	0,				unID, tableHeight, 1 + 256:	unID = unID + 1
		hotspot	0,		0,	-1,				unID, tableHeight, 3:		unID = unID + 1
		hotspot	0,		0,	tableHeight,	unID, tableHeight, 2:		unID = unID + 1

		addx A
	next thh
	del 2
	addy B
next thv
del 2

material count_mat

if bSinkExist then
	gosub "sink cutting"
endif

addz tableHeight - topThk

if iCounterType = RECTANGULAR then
	prism_ 4, topThk,
		0, 0, 15 - 2 * bConnectionLeft,
		tableLength, 0, 15 - 7 * bConnectionRight,
		tableLength, fullTableDepth, 15 - 2 * bConnectionRight,
		0, fullTableDepth, 15 - 7 * bConnectionLeft
else
	counterRad	= MIN(topThk * 4 / 5, 0.02)
	mask		= 15

	rotz 90
	rotx 90
	if bDoubleRow then
		prism_ 13, tableLength,
			0, 0, 15,
			0, 0.0001, mask,
			0, topThk - counterRad, 64 + mask,
			0, 10, 800,
			counterRad, topThk - counterRad, 900,
			counterRad, topThk, 3064 + mask,
			fullTableDepth - counterRad, topThk, 64 + mask,
			fullTableDepth - counterRad + 10, topThk, 800,
			fullTableDepth - counterRad, topThk - counterRad, 900,
			fullTableDepth, topThk - counterRad, 3064 + mask,
			fullTableDepth, topThk - counterRad, 64 + mask,
			fullTableDepth, 0.0001, mask,
			fullTableDepth, 0, mask
	else
		prism_ 8, tableLength,
			0, 0, 15,
			0, 0.0001, mask,
			0, topThk - counterRad, 64 + mask,
			0, 10, 800,
			counterRad, topThk - counterRad, 900,
			counterRad, topThk, 3064 + mask,
			fullTableDepth, topThk, mask,
			fullTableDepth, 0, mask
	endif
	del 2
endif

del 1

if bSinkExist then
	for si = 1 to iNumSink
		cutend
	next si
endif


! ======================================================================
! Legs
! ======================================================================

dim legPosY[3]

gosub "legsForDesk"


! ======================================================================
! Office Cabinet
! ======================================================================

gosub "officeCabinet"


! ======================================================================
! Front Panel
! ======================================================================

frontPanelThk = 0.013

if gs_leg_type_m = 1 then
	frontPanelLengthModLeft = (legDefPosX * 2 + counterOvLeft) * bEnableLeftLeg + legDefPosX * bEnableLeftLegReinforce
	frontPanelLengthModRight = (legDefPosX * 2 + counterOvRight) * bEnableRightLeg + legDefPosX * bEnableRightLegReinforce
	frontPanelPosMod = -frontPanelThk / 2
endif
if gs_leg_type_m = 2 then
	frontPanelLengthModLeft = (legDefPosX * 2 + counterOvLeft) * bEnableLeftLeg + legDefPosX * bEnableLeftLegReinforce
	frontPanelLengthModRight = (legDefPosX * 2 + counterOvRight) * bEnableRightLeg + legDefPosX * bEnableRightLegReinforce
	frontPanelPosMod = -frontPanelThk / 2
endif
if gs_leg_type_m = 3 then
	frontPanelLengthModLeft = (legDefPosX + 0.025 + counterOvLeft) * bEnableLeftLeg + legDefPosX * bEnableLeftLegReinforce
	frontPanelLengthModRight = (legDefPosX + 0.025 + counterOvRight) * bEnableRightLeg + legDefPosX * bEnableRightLegReinforce
	frontPanelPosMod = -frontPanelThk
endif
if gs_leg_type_m = 4 then
	frontPanelLengthModLeft = (legDefPosX * 2 + counterOvLeft) * bEnableLeftLeg + legDefPosX * bEnableLeftLegReinforce
	frontPanelLengthModRight = (legDefPosX * 2 + counterOvRight) * bEnableRightLeg + legDefPosX * bEnableRightLegReinforce
	frontPanelPosMod = -frontPanelThk
endif
if gs_leg_type_m = 5 then
	frontPanelLengthModLeft = (legDefPosX * 2 + counterOvLeft) * bEnableLeftLeg + legDefPosX * bEnableLeftLegReinforce
	frontPanelLengthModRight = (legDefPosX * 2 + counterOvRight) * bEnableRightLeg + legDefPosX * bEnableRightLegReinforce
	frontPanelPosMod = -frontPanelThk / 2 - 0.015
endif
if gs_leg_type_m = 6 then
	frontPanelLengthModLeft = (legDefPosX * 2 + counterOvLeft) * bEnableLeftLeg + legDefPosX * bEnableLeftLegReinforce
	frontPanelLengthModRight = (legDefPosX * 2 + counterOvRight) * bEnableRightLeg + legDefPosX * bEnableRightLegReinforce
	frontPanelPosMod = -frontPanelThk / 2 - 0.01
endif

if bFrontPanel and bEnableFrontPanel then
	frontPanelPosLeft	= (cab1PosX + gs_officeCab_width) * bOfficeCab1 + frontPanelLengthModLeft * NOT(bOfficeCab1)
	frontPanelPosRight	= cab2PosX * bOfficeCab2 + (tableLength - frontPanelLengthModRight) * NOT(bOfficeCab2)

	if bDoubleRow then
		frontPanelPosY	= legDepth * (gs_leg_type_m = 3) + (legPosY[2] - legDepth) * (gs_leg_type_m > 3) + legPosY[3] * (gs_leg_type_m < 3) + legDepth / 2 * (gs_leg_type_m > 3) + frontPanelPosMod
	else
		frontPanelPosY	= legDepth / 2 * (gs_leg_type_m = 3) + legPosY[2] + legDepth / 2 * (gs_leg_type_m > 3) + frontPanelPosMod
	endif

	if ABS(frontPanelPosLeft - frontPanelPosRight) > EPS then
		material gs_frontPanel_mat
		add 0, frontPanelPosY, gs_frontPanelTop - gs_frontPanelHeight
		prism_ 5, gs_frontPanelHeight,
			frontPanelPosLeft, 0, 15,
			frontPanelPosRight, 0, 15,
			frontPanelPosRight, frontPanelThk, 15,
			frontPanelPosLeft, frontPanelThk, 15,
			frontPanelPosLeft, 0, -1
		del 1
	endif
endif


! ======================================================================
! Sink
! ======================================================================

if bSinkExist then
	for si = 1 to iNumSink
		if si = 1 then
			sinkPosX	= sinkDefPosX + sink1DistX
			sinkPosY	= sinkDefPosY + sink1DistY

			add sinkDefPosX, sinkDefPosY, tableHeight
				hotspot 0,			sink1DistY,	0,	unID, sink1DistX, 1 + 128:		unID = unID + 1
				hotspot -1,			sink1DistY,	0,	unID, sink1DistX, 3:			unID = unID + 1
				hotspot sink1DistX,	sink1DistY,	0,	unID, sink1DistX, 2:			unID = unID + 1

				hotspot sink1DistX,	0,				0,	unID, sink1DistY, 1 + 128:	unID = unID + 1
				hotspot sink1DistX,	-1,				0,	unID, sink1DistY, 3:		unID = unID + 1
				hotspot sink1DistX,	sink1DistY,		0,	unID, sink1DistY, 2:		unID = unID + 1
			del 1

			add sinkPosX, sinkPosY, tableHeight
				hotspot	0,									-sink_b / 2,						0,	unID, sink1RotAngle,	4 + 128	: unID = unID + 1
				hotspot	sink_b / 2 * SIN(sink1RotAngle),	-sink_b / 2 * COS(sink1RotAngle),	0,	unID, sink1RotAngle,	5			: unID = unID + 1
				hotspot	0,									0,									0,	unID, sink1RotAngle,	6			: unID = unID + 1
				hotspot	0,									0,									1,	unID, sink1RotAngle,	7			: unID = unID + 1
			del 1
		else
			sinkPosX	= sinkDefPosX + sink2DistX
			sinkPosY	= sinkDefPosY + sink2DistY

			add sinkDefPosX, sinkDefPosY, tableHeight
				hotspot 0,			sink2DistY,	0,	unID, sink2DistX, 1 + 128:		unID = unID + 1
				hotspot -1,			sink2DistY,	0,	unID, sink2DistX, 3:			unID = unID + 1
				hotspot sink2DistX,	sink2DistY,	0,	unID, sink2DistX, 2:			unID = unID + 1

				hotspot sink2DistX,	0,				0,	unID, sink2DistY, 1 + 128:	unID = unID + 1
				hotspot sink2DistX,	-1,				0,	unID, sink2DistY, 3:		unID = unID + 1
				hotspot sink2DistX,	sink2DistY,		0,	unID, sink2DistY, 2:		unID = unID + 1
			del 1

			add sinkPosX, sinkPosY, tableHeight
				hotspot	0,									-sink_b / 2,						0,	unID, sink2RotAngle,	4 + 128	: unID = unID + 1
				hotspot	sink_b / 2 * SIN(sink2RotAngle),	-sink_b / 2 * COS(sink2RotAngle),	0,	unID, sink2RotAngle,	5			: unID = unID + 1
				hotspot	0,									0,									0,	unID, sink2RotAngle,	6			: unID = unID + 1
				hotspot	0,									0,									1,	unID, sink2RotAngle,	7			: unID = unID + 1
			del 1
		endif

		add sinkPosX, sinkPosY, 0
		rotz sink1RotAngle * (si = 1) + sink2RotAngle * (si = 2)
			add -sink_a / 2, -sink_b / 2, tableHeight - sink_z - topThk * bSinkUnderMounted
				call "fa_sinktyp" parameters all	a				= sink_a,
													b				= sink_b,
													zzyzx			= sink_z,
													sunder			= bSinkUnderMounted,
													count_th		= topThk,
													gs_tap_type_m	= 0,
													bEnableTapEdit	= 0
			del 1

			if gs_tap_type_m > 0 then
				add tapDefPosX, tapDefPosY, tapDefPosZ
					call "laboratoryTap_m" parameters all	tapID		= si,
												start_unID				= si * 100
				del 1
			endif
		del 2

		rotz 180
		add -tableLength, -fullTableDepth, 0
	next si
	del 2 * iNumSink
endif


! ======================================================================
! Shelves, Backsplash
! ======================================================================

if bShelves | bEnableBsplash then
	add 0, tableDepth, 0
		call "laboratoryAccessories_m" parameters all	bsplashMat	= count_mat,
														start_unID	= 300
	del 1
endif


! ======================================================================
! Gas Connection
! ======================================================================

if bGasConnOnTable then
	add gasConnDefPosX, gasConnDefPosY, 0
		for gcNum = 1 to 1 + bDoubleRow
			gosub "gas connections"
	
			if iArrangement = ARRANGE_MIRR then
				muly 1 - bDoubleRow * 2
			else
				rotz 180
			endif
		next gcNum
		del 1 + bDoubleRow
	del 1
endif


! ======================================================================
! MEP Connections
! ======================================================================

if gs_detlevel_3D_m = DET3D_SIMPLE then resol 8
if gs_detlevel_3D_m = DET3D_DETAILED then resol 24

if bShowMEP then
	if useSysMat then
		count_mat			= sMat
		gs_leg_mat			= sMat
		gs_cabinet_mat		= sMat
		gs_base_mat			= sMat
		gs_door_mat			= sMat
		gs_knob_mat			= sMat
		gs_frontPanel_mat	= sMat
		gs_sink_mat			= sMat
		gs_tap_mat			= sMat
		shelfMat			= sMat
		shelfFrameMat		= sMat
		dryingRackMat		= sMat
		powerOutletMat		= sMat
		flaskMat1			= sMat
		flaskMat2			= sMat
		gs_con_mat			= sMat
	endif

	call "MEP_m_ConnectionsACL_4" parameters SetProgram = SetProgram,
		ui_current_con = ui_current_con,
		MEP_NumberConnections = MEP_NumberConnections,
		MEP_NumConnectionData = gs_Connections,
		gs_AddConnections = gs_AddConnections,
		cShow3D = 1,
		gs_ConMat = gs_con_mat,
		MEP_InsShow = 0,
		MEP_cline_show_3D = 0,
		gs_cont_pen = gs_cont_pen,
		ConPosX_1=ConPosX_1, ConPosY_1=ConPosY_1, ConPosZ_1=ConPosZ_1, ConLength_1=ConLength_1, ConEdit_1 = 16 + bDoubleRow,
		ConPosX_2=ConPosX_2, ConPosY_2=ConPosY_2, ConPosZ_2=ConPosZ_2, ConLength_2=ConLength_2, ConEdit_2 = 16 + bDoubleRow,
		ConPosX_3=ConPosX_3, ConPosY_3=ConPosY_3, ConPosZ_3=ConPosZ_3, ConLength_3=ConLength_3, ConEdit_3 = 16 + bDoubleRow,
		ConPosX_4=ConPosX_4, ConPosY_4=ConPosY_4, ConPosZ_4=ConPosZ_4, ConLength_4=ConLength_4, ConEdit_4 = 16 + bDoubleRow,
		ConPosX_5=ConPosX_5, ConPosY_5=ConPosY_5, ConPosZ_5=ConPosZ_5, ConLength_5=ConLength_5, ConEdit_5 = 16 + bDoubleRow,
		ConPosX_6=ConPosX_6, ConPosY_6=ConPosY_6, ConPosZ_6=ConPosZ_6, ConLength_6=ConLength_6, ConEdit_6 = 16 + bDoubleRow,
		ConPosX_7=ConPosX_7, ConPosY_7=ConPosY_7, ConPosZ_7=ConPosZ_7, ConLength_7=ConLength_7, ConEdit_7 = 16 + bDoubleRow
endif

! ======================================================================
! middle hotspot
! ======================================================================

hotspot tableLength/2, fullTableDepth/2, 0,				unID, tableHeight, 1 : unID = unID + 1
hotspot tableLength/2, fullTableDepth/2, tableHeight,	unID, tableHeight, 2 : unID = unID + 1
hotspot tableLength/2, fullTableDepth/2, -1,			unID, tableHeight, 3 : unID = unID + 1

!================================================================================
end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end
!================================================================================

! ======================================================================
"sink cutting":
! ======================================================================

	for si = 1 to iNumSink
		if si = 1 then
			sinkPosX	= sinkDefPosX + sink1DistX
			sinkPosY	= sinkDefPosY + sink1DistY
		else
			sinkPosX	= sinkDefPosX + sink2DistX
			sinkPosY	= sinkDefPosY + sink2DistY
		endif

		add sinkPosX, sinkPosY, 0
		rotz sink1RotAngle * (si = 1) + sink2RotAngle * (si = 2)
		add -sink_a / 2, -sink_b / 2, 0
			if gs_sink_type_m = 1 then
				if bSinkUnderMounted then
					walt = sink_a / 2 - 0.02
				else
					walt = sink_a / 2 - 0.015
				endif
				put	sink_a / 2, sink_b / 2, 979,
					walt, 360, 4079
			else
				if bSinkUnderMounted then
					radCorner		= 0.025 + 0.005
					overhangLower	= 0.045 - 0.005
					overhangUpper	= 0.095 - 0.005
					overhangLeft	= 0.045 - 0.005
					overhangRight	= 0.045 - 0.005
				else
					overhangLower	= 0.025
					overhangUpper	= 0.04
					overhangLeft	= 0.025
					overhangRight	= 0.025
				endif
				if gs_detlevel_3D_m = 2 and bSinkUnderMounted then
					put radCorner + overhangLeft, 	 overhangLower, 	79,
						sink_a - radCorner - overhangRight,  overhangLower, 	79,
						sink_a - overhangRight, 			 radCorner + overhangLower, 1079,
						sink_a - overhangRight, 			sink_b - radCorner - overhangUpper, 79,
						sink_a - radCorner - overhangRight,	sink_b - overhangUpper, 	1079,
						radCorner + overhangLeft,	sink_b - overhangUpper, 	79,
						overhangLeft, 			sink_b - radCorner - overhangUpper, 1079,
						overhangLeft, 			 radCorner + overhangLower, 79,
						radCorner + overhangLeft,	 overhangLower, 	1079,
						radCorner + overhangLeft,	 overhangLower, 	 - 1
				else
					put overhangLeft,	 overhangLower,15,
						sink_a - overhangRight,	overhangLower,15,
						sink_a - overhangRight,	sink_b - overhangUpper,15,
						overhangLeft,	sink_b - overhangUpper,15,
						overhangLeft,	overhangLower,-1
				endif
			endif
	
			cutform nsp/3, 1, 1 + 16,
				0, 0, -1, -tableHeight + sink_z + (topThk + 0.01) * bSinkUnderMounted,
				get(nsp)
		del 3

		rotz 180
		add -tableLength, -fullTableDepth, 0
	next si
	del 2 * iNumSink

return



! ======================================================================
"legsForDesk":
! ======================================================================

	legNumVer = 1 + bDoubleRow + (gs_leg_type_m < 3)

	addz legSoleThk

		for legVer = 1 to legNumVer
			if gs_leg_type_m = 1 then
				legDepth = 0.025 * 2
			endif
			if gs_leg_type_m = 2 then
				legDepth = 0.04
			endif
		
			if bDoubleRow then
				if gs_leg_type_m > 2 then
					legDepth = (tableDepth - counterOvFront) * (legVer = 1) + (tableDepth - counterOvRear) * (legVer = 2)
				endif
		
				legPosY[1] = legDepth / 2 + counterOvFront
				legPosY[2] = tableDepth * 2 - legDepth / 2 - counterOvRear
				legPosY[3] = tableDepth
			else
				if gs_leg_type_m > 2 then
					legDepth = tableDepth - counterOvFront - counterOvRear
				endif
		
				legPosY[1] = legDepth / 2 + counterOvFront
				legPosY[2] = tableDepth - legDepth / 2 - counterOvRear
			endif

			addy legPosY[legVer]
			muly 1 - 2 * (legVer = 2)

			gosub "legPairHor"

			del 2
		next legVer

	del 1

return



! ======================================================================
"legPairHor":
! ======================================================================

	if bEnableLeftLeg then
		addx legDefPosX + counterOvLeft
		gosub "leg"
		del 1
	endif
	
	if bEnableRightLeg then
		addx tableLength - legDefPosX - counterOvRight
		gosub "leg"
		del 1
	endif

	if bReinforceLeft then
		addx 0
		gosub "leg"
		del 1
	endif

	if bReinforceRight then
		addx tableLength
		gosub "leg"
		del 1
	endif

return



! ======================================================================
"leg":
! ======================================================================

	muly 1 - 2 * (gs_leg_type_m = 5)
	call "fa_desklegtyp" parameters	all a			= leg_a * (gs_leg_type_m < 3) + legDepth * (gs_leg_type_m > 2),
										b			= leg_a,
										leg_h		= leg_h,
										gs_resol	= _resol,
										bFullPanel	= 0,
										legbase_mat	= IND(MATERIAL, "labMatBlack")
	del 1

	if bLegSole then
		material "labMatBlack"

		add 0, -legDepth / 2 + legDefPosX + 0.025 * (gs_leg_type_m = 6), -legSoleThk
		for ls = 1 to 2
			cylind legSoleThk, legSoleDia

			addy legDepth - legDefPosX * 2 - 0.025 * (gs_leg_type_m = 6) * 2
			muly -1
		next ls
		del 4 + 1
	endif

return



! ======================================================================
"officeCabinet":
! ======================================================================

	if bSinkExist then
		gosub "sink cutting"
	endif

	cab1PosX	= counterOvLeft + cabOffsetLeft
	cab2PosX	= (tableLength - gs_officeCab_width_2 - counterOvRight) - cabOffsetRight

	if bOfficeCab1 or bOfficeCab2 then
		add 0, 0, cabDistFromFloor * (iCabinetSupportType = CAB_TABLE_MOUNTED)

		for jj = 1 to 1 + bDoubleRow

			for ii = 1 + NOT(bOfficeCab1) to 1 + bOfficeCab2
				if bDoubleRow then
					cabDepth	= tableDepth - counterOvFront
					cabDepth2	= tableDepth - counterOvRear
				else
					cabDepth	= tableDepth - counterOvFront - counterOvRear
					cabDepth2	= 0
				endif
	
				add cab1PosX * (ii = 1) + cab2PosX * (ii = 2), counterOvFront, 0
					call "OfficeCabinet01_m" parameters all	a		= gs_officeCab_width * (ii = 1) + gs_officeCab_width_2 * (ii = 2),
												b					= cabDepth * (jj = 1) + cabDepth2 * (jj = 2),
												zzyzx				= cabHeight,
												gs_resol			= _resol,
												bPartOfLayout		= 1,
												bTopCover			= 0,
												drawer2d			= 0,
												iCabIndex			= ii,
												officeCab01_unID	= 500

					if ii = 1 then
						hotspot	0,					0,	0,	unID, gs_officeCab_width, 1 + 128:	unID = unID + 1
						hotspot	-1,					0,	0,	unID, gs_officeCab_width, 3:		unID = unID + 1
						hotspot	gs_officeCab_width,	0,	0,	unID, gs_officeCab_width, 2:		unID = unID + 1
					else
						addx gs_officeCab_width_2
							hotspot	0,						0,	0,	unID, gs_officeCab_width_2, 1 + 128:	unID = unID + 1
							hotspot	1,						0,	0,	unID, gs_officeCab_width_2, 3:			unID = unID + 1
							hotspot	-gs_officeCab_width_2,	0,	0,	unID, gs_officeCab_width_2, 2:			unID = unID + 1
						del 1
					endif
				del 1
			next ii

			if iArrangement = ARRANGE_MIRR then
				add 0, cabDepth + cabDepth2 + counterOvFront * 2, 0
				muly 1 - bDoubleRow * 2
			else
				add cab1PosX + cab2PosX + gs_officeCab_width_2, cabDepth + cabDepth2 + counterOvFront * 2, 0
				rotz 180
			endif
		next jj

		del 2 * (1 + bDoubleRow)

		del 1
	endif

	if bSinkExist then
		for si = 1 to iNumSink
			cutend
		next si
	endif

return



! ======================================================================
"gas connections":
! ======================================================================

	resol 12 * (gs_detlevel_3D_m = DET3D_DETAILED) + 4 * (gs_detlevel_3D_m = DET3D_SIMPLE)
	
	material labMatStainlessSteel

	unID = 400

	hotspot 0,				-gasConnDistY,	tableHeight,	unID, gasConnDistX, 1 + 128:	unID = unID + 1
	hotspot -1,				-gasConnDistY,	tableHeight,	unID, gasConnDistX, 3:			unID = unID + 1
	hotspot gasConnDistX,	-gasConnDistY,	tableHeight,	unID, gasConnDistX, 2:			unID = unID + 1

	hotspot gasConnDistX,	0,				tableHeight,	unID, gasConnDistY, 1 + 128:	unID = unID + 1
	hotspot gasConnDistX,	1,				tableHeight,	unID, gasConnDistY, 3:			unID = unID + 1
	hotspot gasConnDistX,	-gasConnDistY,	tableHeight,	unID, gasConnDistY, 2:			unID = unID + 1
	
	add gasConnDistX - gasConnDist * (gasConnNum - 1) / 2, -gasConnDistY, tableHeight
	rotx 90
		for gc = 1 to 4
			labMatCover	= "labMatBlue"
			if gc = 3 then labMatCover	= "labMatGreen"
			if gc = 4 then labMatCover	= "labMatRed"
	
			cprism_ "labMatStainlessSteel", "labMatStainlessSteel", "labMatBlack",
				4, gasConnThk,
				-gasConnWidth / 2, 0, 15,
				gasConnWidth / 2, 0, 15,
				gasConnWidth2 / 2, gasConnHeight, 79,
				-gasConnWidth2 / 2, gasConnHeight, 1079
			
			addy gasConnHeight - gasConnWidth2 / 2 * TAN(gAngle)
			
			addz gasConnThk
			cprism_ "labMatStainlessSteel", "labMatStainlessSteel", "labMatStainlessSteel",
				5, gasConnThk2,
				gasConnWidth2 / 2 / COS(gAngle) * 4 / 5, 0, 79,
				0, 1, 800,
				-gasConnWidth2 / 2 / COS(gAngle) * 4 / 5, 0, 1079,
				0, -1, 800,
				gasConnWidth2 / 2 / COS(gAngle) * 4 / 5, 0, 1079
			del 1
			
			addz gasConnThk + gasConnThk2
			cprism_ labMatCover, "labMatStainlessSteel", "labMatStainlessSteel",
				5, gasConnThk2,
				gasConnWidth2 / 2 / COS(gAngle), 0, 79,
				0, 1, 800,
				-gasConnWidth2 / 2 / COS(gAngle), 0, 1079,
				0, -1, 800,
				gasConnWidth2 / 2 / COS(gAngle), 0, 1079
			del 1
			
			del 1
	
			addx gasConnDist
		next gc
		del 4
	del 2
	
	resol gs_resol

return

