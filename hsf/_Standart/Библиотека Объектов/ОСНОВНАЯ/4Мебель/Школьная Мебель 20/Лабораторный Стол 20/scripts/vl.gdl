
call "FM_types" parameters all

! ======================================================================
! UI reset
! ======================================================================

if GLOB_MODPAR_NAME = "gs_officeCab" | GLOB_MODPAR_NAME = "gs_officeCab_m" then
	parameters gs_ui_current_page = iPageIDAccessories
endif

! ======================================================================
! 3D Representation
! ======================================================================

values "gs_detlevel_3D" stDetail3D		! Detailed, Simple, Off
values "gs_detlevel_3D_m" 	DET3D_DETAILED, DET3D_SIMPLE, DET3D_NONE
if GLOB_MODPAR_NAME = "gs_detlevel_3D" then
	gs_detlevel_3D_m = DET3D_NONE		! Off
	if gs_detlevel_3D = stDetail3D[2] then gs_detlevel_3D_m = DET3D_SIMPLE		! Simple
	if gs_detlevel_3D = stDetail3D[1] then gs_detlevel_3D_m = DET3D_DETAILED	! Detailed
	parameters gs_detlevel_3D_m = gs_detlevel_3D_m
else
	gs_detlevel_3D = stDetail3D[3]		! Off
	if gs_detlevel_3D_m = DET3D_SIMPLE then gs_detlevel_3D = stDetail3D[2]		! Simple
	if gs_detlevel_3D_m = DET3D_DETAILED then gs_detlevel_3D = stDetail3D[1]	! Detailed
	parameters gs_detlevel_3D = gs_detlevel_3D
endif


! ======================================================================
! Presets
! ======================================================================

values "presetStyle" stPresetStyle
values "iPresetStyle" 1, 2, 3, 4, 5, 6
if GLOB_MODPAR_NAME = "presetStyle" then
	for i = 1 to vardim1(stPresetStyle)
		if presetStyle = stPresetStyle[i] then iPresetStyle = i
	next i
	parameters iPresetStyle = iPresetStyle
else
	presetStyle = stPresetStyle[max(iPresetStyle, 1)]
	parameters presetStyle = presetStyle
endif


! ======================================================================
! Layout
! ======================================================================

values "arrangement" stArrangement
values "iArrangement" ARRANGE_MIRR, ARRANGE_ROT
if GLOB_MODPAR_NAME = "arrangement" then
	for i = 1 to vardim1(stArrangement)
		if arrangement = stArrangement[i] then iArrangement = i
	next i
	parameters iArrangement = iArrangement
else
	arrangement = stArrangement[max(iArrangement, 1)]
	parameters arrangement = arrangement
endif

if NOT(bDoubleRow) then
	lock			"arrangement",
					"iArrangement"
	hideparameter	"arrangement",
					"iArrangement"
endif

! ======================================================================
! Leg
! ======================================================================

call "fa_desklegtyp" parameters all	enableLegTypes			= 2 + 4 + 8 + 16 + 32 + 64,
									bEnableLegbaseSurface	= 0

if	NOT(bEnableLeftLeg) and NOT(bEnableRightLeg) and\
	NOT(bEnableLeftLegReinforce) and NOT(bEnableRightLegReinforce) then
	lock			"gs_leg_type",
					"gs_leg_type_m",
					"gs_leg_mat"

	hideparameter	"gs_leg_type",
					"gs_leg_type_m",
					"gs_leg_mat"
endif


! ======================================================================
! Sink, Tap
! ======================================================================

values "gs_sink_type" stSinkType
values "gs_sink_type_m" 1, 2, 4, 7, 0
if GLOB_MODPAR_NAME = "gs_sink_type" then
	gs_sink_type_m = 2
	if gs_sink_type = stSinkType[1] then gs_sink_type_m = 1
	if gs_sink_type = stSinkType[3] then gs_sink_type_m = 4
	if gs_sink_type = stSinkType[4] then gs_sink_type_m = 7
	if gs_sink_type = stSinkType[5] then gs_sink_type_m = 0
	parameters gs_sink_type_m  = gs_sink_type_m
else
	gs_sink_type = stSinkType[2]
	if gs_sink_type_m = 1 then gs_sink_type = stSinkType[1]
	if gs_sink_type_m = 4 then gs_sink_type = stSinkType[3]
	if gs_sink_type_m = 7 then gs_sink_type = stSinkType[4]
	if gs_sink_type_m = 0 then gs_sink_type = stSinkType[5]
	parameters gs_sink_type = gs_sink_type
endif

values "iNumSink" 1, 2

if gs_sink_type_m = 0 then
	lock			"iNumSink",
					"bSinkUnderMounted",
					"SinkSymbol",
					"SinkSymbol_m",
					"gs_sink_mat",
					"gs_tap_type",
					"gs_tap_type_m"
	hideparameter	"iNumSink",
					"bSinkUnderMounted",
					"SinkSymbol",
					"SinkSymbol_m",
					"gs_sink_mat",
					"gs_tap_type",
					"gs_tap_type_m"
endif

values "sink1DistX" range[-tableLength / 2 + sink_a / 2, tableLength / 2 - sink_a / 2]
values "sink1DistY" range[-b / 2 + sink_b / 2, b / 2 - sink_b / 2]
values "sink2DistX" range[-tableLength / 2 + sink_a / 2, tableLength / 2 - sink_a / 2]
values "sink2DistY" range[-b / 2 + sink_b / 2, b / 2 - sink_b / 2]

if gs_sink_type_m > 0 then
	if gs_tap_type_m = 1 then
		values "tapOffset1" range[-sink_a / 2 + 0.15, sink_a / 2 - 0.15]
		values "tapOffset2" range[-sink_a / 2 + 0.15, sink_a / 2 - 0.15]
	else
		values "tapOffset1" range[-sink_a / 2 + 0.075, sink_a / 2 - 0.075]
		values "tapOffset2" range[-sink_a / 2 + 0.075, sink_a / 2 - 0.075]
	endif
endif

call "laboratoryTap_m" parameters all

if gs_sink_type_m = 0 | gs_tap_type_m = 0 then
	lock			"TapSymbol",
					"TapSymbol_m",
					"gs_tap_mat"
	hideparameter	"TapSymbol",
					"TapSymbol_m",
					"gs_tap_mat"
endif

if	GLOB_MODPAR_NAME = "gs_tap_type" | GLOB_MODPAR_NAME = "gs_tap_type_m" |\
	GLOB_MODPAR_NAME = "presetStyle" | GLOB_MODPAR_NAME = "iPresetStyle" then

	if gs_tap_type_m = 1 then
		tapHeight = 0.6
	else
		tapHeight = 0.2
	endif
	parameters tapHeight = tapHeight
endif

! ======================================================================
! Gas Connection
! ======================================================================

values "gasConnDistX" range[-tableLength / 2 + gasConnWidthFull / 2, tableLength / 2 - gasConnWidthFull / 2]
values "gasConnDistY" range[0, tableDepth - gasConnThk - gasConnThk2]

if NOT(bGasConnOnTable) then
	lock			"gasConnDistX",
					"gasConnDistY"
	hideparameter	"gasConnDistX",
					"gasConnDistY"
endif


! ======================================================================
! Front panel
! ======================================================================

if bFrontPanel then
	values "gs_frontPanelTop" range(, zzyzx - topThk]
	values "gs_frontPanelHeight" range(, gs_frontPanelTop]
endif
if NOT(bFrontPanel) | NOT(bEnableFrontPanel) then
	lock			"gs_frontPanelHeight",
					"gs_frontPanelTop",
					"gs_frontPanel_mat"
	hideparameter	"gs_frontPanelHeight",
					"gs_frontPanelTop",
					"gs_frontPanel_mat"
endif

! ======================================================================
! Office cabinet
! ======================================================================

values "gs_officeCab" stOfficeCab
values "gs_officeCab_m" 0, 1, 2, 3
if GLOB_MODPAR_NAME = "gs_officeCab" then
	for i = 1 to vardim1(stOfficeCab)
		if gs_officeCab = stOfficeCab[i] then gs_officeCab_m = i - 1
	next i
	parameters gs_officeCab_m = gs_officeCab_m
else
	gs_officeCab = stOfficeCab[gs_officeCab_m + 1]
	parameters gs_officeCab = gs_officeCab
endif

values "cabinetSupportType" stCabinetSupportType
values "iCabinetSupportType" CAB_TABLE_MOUNTED, CAB_FLOOR_MOUNTED
if GLOB_MODPAR_NAME = "cabinetSupportType" then
	iCabinetSupportType = CAB_TABLE_MOUNTED
	if cabinetSupportType = stCabinetSupportType[2]	then iCabinetSupportType = CAB_FLOOR_MOUNTED
	parameters iCabinetSupportType = iCabinetSupportType
else
	cabinetSupportType = stCabinetSupportType[1]
	if iCabinetSupportType = CAB_FLOOR_MOUNTED then cabinetSupportType = stCabinetSupportType[2]
	parameters cabinetSupportType = cabinetSupportType
endif

call "OfficeCabinet01_m" parameters all a	= gs_officeCab_width,
				b							= tableDepth,
				zzyzx						= cabHeight,
				bShowDrawer1Params			= bOfficeCab1,
				bShowDrawer2Params			= bOfficeCab2,
				bShowDrawer1WidthParam		= bOfficeCab1,
				bShowDrawer2WidthParam		= bOfficeCab2,
				bShowCommonCabParams		= bShowCommonCabParams,
				bPartOfLayout				= 1,
				bEnableBasetypes			= 0,
				bCabBase					= (iCabinetSupportType = CAB_FLOOR_MOUNTED),
				enableDrawerSchemes			= 2 + 4 + 8 + 16 + 32

if NOT(bShowCommonCabParams) then
	lock			"cabinetSupportType",
					"iCabinetSupportType"
	hideparameter	"cabinetSupportType",
					"iCabinetSupportType"
endif

if NOT(bShowCommonCabParams) | iCabinetSupportType = CAB_FLOOR_MOUNTED then
	lock			"cabDistFromFloor"
	hideparameter	"cabDistFromFloor"
endif


! ======================================================================
! Counter
! ======================================================================

values "counterType" stCounterType
values "iCounterType" RECTANGULAR, ROUNDED
if GLOB_MODPAR_NAME = "counterType" then
	iCounterType = RECTANGULAR
	if counterType = stCounterType[2]	then iCounterType = ROUNDED
	parameters iCounterType = iCounterType
else
	counterType = stCounterType[1]
	if iCounterType = ROUNDED then counterType = stCounterType[2]
	parameters counterType = counterType
endif

values "topThk" range(0, ]


! ======================================================================
! Ganging
! ======================================================================

values "reinforceLeft" stReinforcement
values "iReinforceLeft" REINFORCE_NONE, REINFORCE_ON, REINFORCE_CONN_ELEM
if GLOB_MODPAR_NAME = "reinforceLeft" then
	for i = 1 to vardim1(stReinforcement)
		if reinforceLeft = stReinforcement[i] then iReinforceLeft = i - 1
	next i
	parameters iReinforceLeft = iReinforceLeft
else
	reinforceLeft = stReinforcement[max(iReinforceLeft + 1, 1)]
	parameters reinforceLeft = reinforceLeft
endif

values "reinforceRight" stReinforcement
values "iReinforceRight" REINFORCE_NONE, REINFORCE_ON, REINFORCE_CONN_ELEM
if GLOB_MODPAR_NAME = "reinforceRight" then
	for i = 1 to vardim1(stReinforcement)
		if reinforceRight = stReinforcement[i] then iReinforceRight = i - 1
	next i
	parameters iReinforceRight = iReinforceRight
else
	reinforceRight = stReinforcement[max(iReinforceRight + 1, 1)]
	parameters reinforceRight = reinforceRight
endif

if NOT(bConnectionLeft) then
	lock			"reinforceLeft",
					"iReinforceLeft"
	hideparameter	"reinforceLeft",
					"iReinforceLeft"
endif

if NOT(bConnectionRight) then
	lock			"reinforceRight",
					"iReinforceRight"
	hideparameter	"reinforceRight",
					"iReinforceRight"
endif


! ======================================================================
! 2D Representation
! ======================================================================

values "SinkSymbol" stSinksymbol
values "SinkSymbol_m" 3, 2, 1
if GLOB_MODPAR_NAME = "SinkSymbol" then
	SinkSymbol_m = 3
	if SinkSymbol = stSinksymbol[2] then SinkSymbol_m = 2
	if SinkSymbol = stSinksymbol[3] then SinkSymbol_m = 1
	parameters SinkSymbol_m  = SinkSymbol_m
else
	SinkSymbol = stSinksymbol[1]
	if SinkSymbol_m = 2 then SinkSymbol = stSinksymbol[2]
	if SinkSymbol_m = 1 then SinkSymbol = stSinksymbol[3]
	parameters SinkSymbol = SinkSymbol
endif

values "side_vis2D" stSideVis
values "side_vis2D_m" SIDEVIS_NONE, SIDEVIS_LEFT, SIDEVIS_RIGHT, SIDEVIS_BOTH
if GLOB_MODPAR_NAME = "side_vis2D" then
	for i = 1 to vardim1(stSideVis)
		if side_vis2D = stSideVis[i] then side_vis2D_m = i - 1
	next i
	parameters side_vis2D_m = side_vis2D_m
else
	side_vis2D = stSideVis[max(side_vis2D_m + 1, 1)]
	parameters side_vis2D = side_vis2D
endif


! ======================================================================
! General
! ======================================================================

if GLOB_MODPAR_NAME = "A" then
	tableLength	= A
	parameters	tableLength = tableLength
else
	A	= tableLength
	parameters	A = A
endif

if bDoubleRow then
	if GLOB_MODPAR_NAME = "A" | GLOB_MODPAR_NAME = "B" then
		tableDepth	= B / 2
		parameters	tableDepth = tableDepth
	else
		B	= tableDepth * 2
		parameters	B = B
	endif
else
	if GLOB_MODPAR_NAME = "A" | GLOB_MODPAR_NAME = "B" then
		tableDepth	= B
		parameters	tableDepth = tableDepth
	else
		B	= tableDepth
		parameters	B = B
	endif
endif

values "tableHeight" range[0.3, ]
values "tableDepth" range[0.2, ]
values "B" range[0.2 * (1 + bDoubleRow), ]

zzyzx = tableHeight + MAX(bShelves * shelfHeight, bsplashHeight * (bsplashRear | bsplashLeft | bsplashRight), tapHeight * ((gs_tap_type_m > 0) and (gs_sink_type_m > 0)))
parameters	zzyzx = zzyzx
lock			"zzyzx"

parameters	ac_bottomlevel	=  0
parameters	ac_toplevel		= zzyzx

for i = 1 to 255
	put i
next i

values "gs_cont_pen" USE(NSP)
values "gs_fill_pen" GET(NSP)

values "gs_resol" range [4,)

if gs_detlevel_3D_m = DET3D_SIMPLE then
	lock			"gs_resol"
endif
if gs_detlevel_3D_m = 0 then
	lock			"gs_resol",
					"gs_shadow"
endif

bEnableFlasks	= 1

minCabWidth1	= 0.2 * bOfficeCab1
minCabWidth2	= 0.2 * bOfficeCab2
minA			= cabOffsetLeft + minCabWidth1 + minCabWidth2

if tableLength < cabOffsetLeft + cabOffsetRight + gs_officeCab_width * bOfficeCab1 + gs_officeCab_width_2 * bOfficeCab2 then
	if gs_officeCab_width * bOfficeCab1 > gs_officeCab_width_2 * bOfficeCab2 then
		gs_officeCab_width = tableLength - cabOffsetLeft - cabOffsetRight - gs_officeCab_width_2 * bOfficeCab2

		if bOfficeCab2 and gs_officeCab_width < gs_officeCab_width_2 then
			gs_officeCab_width = (tableLength - cabOffsetLeft - cabOffsetRight) / 2
			gs_officeCab_width_2 = gs_officeCab_width
		endif
	else
		gs_officeCab_width_2 = tableLength - cabOffsetLeft - cabOffsetRight - gs_officeCab_width * bOfficeCab1

		if bOfficeCab1 and gs_officeCab_width_2 < gs_officeCab_width then
			gs_officeCab_width_2 = (tableLength - cabOffsetLeft - cabOffsetRight) / 2
			gs_officeCab_width = gs_officeCab_width_2
		endif
	endif

	parameters gs_officeCab_width = gs_officeCab_width
	parameters gs_officeCab_width_2 = gs_officeCab_width_2
endif

values "gs_officeCab_width" range[minCabWidth1, )
values "gs_officeCab_width_2" range[minCabWidth2, )

values "tableLength" range[minA, ]
values "A" range[minA, ]

values "MSFront" range[0, ]
values "MSSide" range[-tableLength / 2, ]
values "MSSide2" range[-tableLength / 2, ]


! ======================================================================
! Presets
! ======================================================================

if GLOB_MODPAR_NAME = "presetStyle" | GLOB_MODPAR_NAME = "iPresetStyle" then
	if iPresetStyle = PRESETSTYLE_1 then
				bDoubleRow				= 0
				tableDepth				= 0.8
				tableLength				= 1.4
				tableHeight				= 0.9
	
				gs_leg_type_m			= 4
				bFrontPanel				= 1
				gs_frontPanelHeight		= 0.4
				gs_frontPanelTop		= 0.85
	
				gs_officeCab_m			= 1
				gs_bevel				= 0
	
				gs_officeCab_width		= 0.5
				drawer_num				= 4
				drawerThk				= 0.02
				gs_drawerScheme_m		= 3
				gs_bottomDrawerH		= 0.35
		
				gs_knob_type_m			= 5
	
				iCabinetSupportType		= CAB_TABLE_MOUNTED
				cabDistFromFloor		= 0.08
	
				bShelves				= 1
				shelfHeight				= 0.6
				halfShelfDepth			= 0.25
				iNumShelf				= 1
				iTestTubeRack			= 0
				bEnableFlasks			= 0
				bPowerOutletShelf		= DRYINGRACK_NONE
	
				bsplashRear				= 0
				bsplashLeft				= 0
				bsplashRight			= 0
	
				iCounterType			= RECTANGULAR
	
				gs_sink_type_m			= 0
				bGasConnOnTable			= 0
	
				bConnectionLeft			= 0
				bConnectionRight		= 0
	endif
	if iPresetStyle = PRESETSTYLE_2 then
				bDoubleRow				= 0
				tableDepth				= 0.8
				tableLength				= 1.4
				tableHeight				= 0.9
	
				gs_leg_type_m			= 4
				bFrontPanel				= 0
	
				gs_officeCab_m			= 3
				gs_bevel				= 0
	
				gs_officeCab_width		= tableLength / 2 - cabOffsetLeft
				drawer_num				= 4
				drawerThk				= 0.02
				gs_drawerScheme_m		= 1
	
				gs_officeCab_width_2	= tableLength / 2 - cabOffsetRight
				drawer_num_2			= 4
				drawerThk2				= 0.02
				gs_drawerScheme_m_2		= 1
	
				gs_knob_type_m			= 5
	
				iCabinetSupportType		= CAB_TABLE_MOUNTED
				cabDistFromFloor		= 0.08
	
				bShelves				= 0
	
				bsplashRear				= 1
				bsplashLeft				= 0
				bsplashRight			= 0
				bsplashHeight			= 0.2
				bsplashThk				= 0.02
				bPowerOutletBsplash		= 0
	
				iCounterType			= ROUNDED
				counterOvFront			= 0.05
				counterOvRear			= 0
				counterOvLeft			= 0
				counterOvRight			= 0
	
				iNumSink				= 1
				gs_sink_type_m			= 2
				bSinkUnderMounted		= 1
				sink1DistX				= 0
				sink1DistY				= 0
				sink1RotAngle			= 0
				gs_tap_type_m			= 1
				tapOffset1				= 0
				tapHeight				= 0.6
				bGasConnOnTable			= 1
				gasConnDistX			= 0.4
				gasConnDistY			= 0.05
	
				bConnectionLeft			= 0
				bConnectionRight		= 0
	endif
	if iPresetStyle = PRESETSTYLE_3 then
				bDoubleRow				= 1
				iArrangement			= ARRANGE_MIRR
				tableDepth				= 0.8
				tableLength				= 1.4
				tableHeight				= 0.9
	
				gs_leg_type_m			= 4
				bFrontPanel				= 0
	
				gs_officeCab_m			= 3
				gs_bevel				= 0
	
				gs_officeCab_width		= 0.45
				drawer_num				= 4
				drawerThk				= 0.02
				gs_drawerScheme_m		= 2
				gs_topDrawerH			= 0.1
	
				gs_officeCab_width_2	= 0.45
				drawer_num_2			= 4
				drawerThk2				= 0.02
				gs_drawerScheme_m_2		= 2
				gs_topDrawerH_2			= 0.1
	
				gs_knob_type_m			= 5
	
				iCabinetSupportType		= CAB_TABLE_MOUNTED
				cabDistFromFloor		= 0.1
	
				bShelves				= 1
				shelfHeight				= 0.9
				halfShelfDepth			= 0.125
				iNumShelf				= 2
				iTestTubeRack			= DRYINGRACK_LEFT
				bPowerOutletShelf		= 1
	
				bsplashRear				= 0
				bsplashLeft				= 0
				bsplashRight			= 0
	
				iCounterType			= RECTANGULAR
	
				gs_sink_type_m			= 0
				bGasConnOnTable			= 0
	
				bConnectionLeft			= 0
				bConnectionRight		= 0
	endif
	if iPresetStyle = PRESETSTYLE_4 then
				bDoubleRow				= 0
				tableDepth				= 0.8
				tableLength				= 1.4
				tableHeight				= 0.9
	
				gs_leg_type_m			= 5
				bFrontPanel				= 1
				gs_frontPanelHeight		= 0.3
				gs_frontPanelTop		= 0.65
	
				gs_officeCab_m			= 0
		
				bShelves				= 0
	
				bsplashRear				= 1
				bsplashLeft				= 0
				bsplashRight			= 0
	
				iCounterType			= ROUNDED
	
				iNumSink				= 1
				gs_sink_type_m			= 2
				bSinkUnderMounted		= 0
				sink1DistX				= 0.3
				sink1DistY				= 0
				sink1RotAngle			= 0
				gs_tap_type_m			= 1
				tapOffset1				= 0
				tapHeight				= 0.6
				bGasConnOnTable			= 1
				gasConnDistX			= -0.4
				gasConnDistY			= 0.05
	
				bConnectionLeft			= 0
				bConnectionRight		= 0
	endif
	if iPresetStyle = PRESETSTYLE_5 then
				bDoubleRow				= 1
				iArrangement			= ARRANGE_MIRR
				tableDepth				= 0.8
				tableLength				= 1.4
				tableHeight				= 0.9
	
				gs_leg_type_m			= 4
				bFrontPanel				= 0
	
				gs_officeCab_m			= 3
				gs_bevel				= 0
	
				gs_officeCab_width		= tableLength / 2 - cabOffsetLeft
				drawer_num				= 4
				drawerThk				= 0.02
				gs_drawerScheme_m		= 1
	
				gs_officeCab_width_2	= tableLength / 2 - cabOffsetRight
				drawer_num_2			= 4
				drawerThk2				= 0.02
				gs_drawerScheme_m_2		= 1
	
				gs_knob_type_m			= 5
	
				iCabinetSupportType		= CAB_FLOOR_MOUNTED
	
				bShelves				= 1
				shelfHeight				= 0.8
				halfShelfDepth			= 0.175
				iNumShelf				= 1
				shelfThk				= 0.03
				iTestTubeRack			= DRYINGRACK_LEFT
				bPowerOutletShelf		= 0
	
				bsplashRear				= 0
				bsplashLeft				= 0
				bsplashRight			= 0
	
				iCounterType			= ROUNDED
				counterOvFront			= 0.05
				counterOvRear			= 0
				counterOvLeft			= 0
				counterOvRight			= 0
	
				iNumSink				= 1
				gs_sink_type_m			= 1
				bSinkUnderMounted		= 1
				sink1DistX				= -0.2
				sink1DistY				= 0.4
				sink1RotAngle			= 90
				gs_tap_type_m			= 2
				tapOffset1				= 0
				tapHeight				= 0.2
				bGasConnOnTable			= 0
	
				bConnectionLeft			= 0
				bConnectionRight		= 0
	endif

	parameters 	bDoubleRow				= bDoubleRow,
				iArrangement			= iArrangement,
				tableDepth				= tableDepth,
				tableLength				= tableLength,
				tableHeight				= tableHeight,
				
				gs_leg_type_m			= gs_leg_type_m,
				bFrontPanel				= bFrontPanel,
				gs_frontPanelHeight		= gs_frontPanelHeight,
				gs_frontPanelTop		= gs_frontPanelTop,
				
				gs_officeCab_m			= gs_officeCab_m,
				gs_bevel				= gs_bevel,
				
				gs_officeCab_width		= gs_officeCab_width,
				drawer_num				= drawer_num,
				drawerThk				= drawerThk,
				gs_drawerScheme_m		= gs_drawerScheme_m,
				gs_topDrawerH			= gs_topDrawerH,
				gs_bottomDrawerH		= gs_bottomDrawerH,
				
				gs_officeCab_width_2	= gs_officeCab_width_2,
				drawer_num_2			= drawer_num_2,
				drawerThk2				= drawerThk2,
				gs_drawerScheme_m_2		= gs_drawerScheme_m_2,
				gs_topDrawerH_2			= gs_topDrawerH_2,
				gs_bottomDrawerH_2		= gs_bottomDrawerH_2,
				
				gs_knob_type_m			= gs_knob_type_m,
				
				iCabinetSupportType		= iCabinetSupportType,
				cabDistFromFloor		= cabDistFromFloor,
				
				bShelves				= bShelves,
				shelfHeight				= shelfHeight,
				halfShelfDepth			= halfShelfDepth,
				iNumShelf				= iNumShelf,
				shelfThk				= shelfThk,
				shelfFrameThk			= shelfFrameThk,
				iTestTubeRack			= iTestTubeRack,
				bPowerOutletShelf		= bPowerOutletShelf,
				
				bsplashRear				= bsplashRear,
				bsplashLeft				= bsplashLeft,
				bsplashRight			= bsplashRight,
				bsplashHeight			= bsplashHeight,
				bsplashThk				= bsplashThk,
				bPowerOutletBsplash		= bPowerOutletBsplash,
				
				iCounterType			= iCounterType,
				counterOvFront			= counterOvFront,
				counterOvRear			= counterOvRear,
				counterOvLeft			= counterOvLeft,
				counterOvRight			= counterOvRight,
				
				iNumSink				= iNumSink,
				gs_sink_type_m			= gs_sink_type_m,
				bSinkUnderMounted		= bSinkUnderMounted,
				sink1DistX				= sink1DistX,
				sink1DistY				= sink1DistY,
				sink1RotAngle			= sink1RotAngle,
				gs_tap_type_m			= gs_tap_type_m,
				tapOffset1				= tapOffset1,
				tapHeight				= tapHeight,
				bGasConnOnTable			= bGasConnOnTable,
				gasConnDistX			= gasConnDistX,
				gasConnDistY			= gasConnDistY,
				
				bConnectionLeft			= bConnectionLeft,
				iReinforceLeft			= iReinforceLeft,
				bConnectionRight		= bConnectionRight,
				iReinforceRight			= iReinforceRight
else
	if	GLOB_MODPAR_NAME = "bDoubleRow" |\
		GLOB_MODPAR_NAME = "gs_officeCab" |\
		GLOB_MODPAR_NAME = "gs_officeCab_m" |\
		GLOB_MODPAR_NAME = "bShelves" |\
		GLOB_MODPAR_NAME = "bsplashRear" |\
		GLOB_MODPAR_NAME = "bsplashLeft" |\
		GLOB_MODPAR_NAME = "bsplashRight" |\
		GLOB_MODPAR_NAME = "iNumSink" |\
		GLOB_MODPAR_NAME = "gs_sink_type" |\
		GLOB_MODPAR_NAME = "gs_sink_type_m" then
	
		iPresetStyle = 6
		parameters iPresetStyle = iPresetStyle
	endif
endif


! ======================================================================
! Shelves
! ======================================================================

call "laboratoryAccessories_m" parameters all	bEnableFlasks = bEnableFlasks



! ======================================================================
! MEP Connections
! ======================================================================

if isMEPEnabled then

	DIM shape_typ_to_validation[3]
		shape_typ_to_validation[1] = 0		! Rectangle
		shape_typ_to_validation[2] = 1		! Circle
		shape_typ_to_validation[3] = 0		! Oval

	MEP_NumberConnections	= 7
	parameters MEP_NumberConnections	= MEP_NumberConnections

	if GLOB_MODPAR_NAME = "bDoubleRow" then
		ui_current_con	= 1
		parameters ui_current_con	= ui_current_con
	endif



	! --- 1st CONNECTION --- !

	ConID = 1
	ConName = DimConName[1]

	if NOT(bDoubleRow) then
		ConDVecX = 0
		ConDVecY = 1
		ConDVecZ = 0
	
		ConWVecX = -1
		ConWVecY = 0
		ConWVecZ = 0
	else
		ConDVecX = 1
		ConDVecY = 0
		ConDVecZ = 0
	
		ConWVecX = 0
		ConWVecY = -1
		ConWVecZ = 0
	endif

	if NOT(bDoubleRow) then
		values "ConWidth_1" range (0, MIN(tableLength / 2, (tableHeight - topThk) / 2)]
		parameters ConDepth_1 = ConWidth_1
		values "ConLength_1" range [0, ]
	
		if GLOB_MODPAR_NAME = "bDoubleRow" | GLOB_MODPAR_NAME = "presetStyle" | GLOB_MODPAR_NAME = "iPresetStyle" then
			ConPosX_1 = tableLength / 4 - 0.2
			parameters ConPosX_1 = ConPosX_1
		endif
		values "ConPosX_1" range [ConWidth_1 / 2, tableLength - ConWidth_1 / 2]
		parameters ConPosY_1 = tableDepth
		values "ConPosZ_1" range [ConWidth_1 / 2, tableHeight - topThk - ConWidth_1 / 2]
	else
		values "ConWidth_1" range (0, MIN(tableDepth, (tableHeight - topThk) / 2)]
		parameters ConDepth_1 = ConWidth_1
		values "ConLength_1" range [0, ]

		if GLOB_MODPAR_NAME = "bDoubleRow" | GLOB_MODPAR_NAME = "presetStyle" | GLOB_MODPAR_NAME = "iPresetStyle" then
			ConPosY_1 = tableDepth / 2 - 0.2
			parameters ConPosY_1 = ConPosY_1
		endif
		parameters ConPosX_1 = tableLength
		values "ConPosY_1" range [ConWidth_1 / 2, fullTableDepth - ConWidth_1 / 2]
		values "ConPosZ_1" range [ConWidth_1 / 2, tableHeight - topThk - ConWidth_1 / 2]
	endif

	call "MEP_m_ConnectionsACL_4" parameters SetProgram = SetProgram,
		gs_Connections = gs_Connections,
		MEP_NumConnectionData = MEP_NumConnectionData,
		MEP_StrConnectionData = MEP_StrConnectionData,
		MEP_NumberConnections = MEP_NumberConnections,
		gs_AddConnections = gs_AddConnections,
		ConName = ConName,
		ConID = ConID,
		ConPosX = ConPosX_1,
		ConPosY = ConPosY_1,
		ConPosZ = ConPosZ_1,
		ConDVecX = ConDVecX,
		ConDVecY = ConDVecY,
		ConDVecZ = ConDVecZ,
		ConWVecX = ConWVecX,
		ConWVecY = ConWVecY,
		ConWVecZ = ConWVecZ,

		ConNominalWidth = ConNominalWidth_1,
		ConNominalDepth = ConNominalDepth_1,
		ConWidth = ConWidth_1,
		ConDepth = ConDepth_1,
		ConLength = ConLength_1,
		ConWallThickness = ConWallThickness_1,
		ConConnectorWidth = ConConnectorWidth_1,
		ConConnectorDepth = ConConnectorDepth_1,
		ConConnectorWidth2 = ConConnectorWidth2_1,
		ConToolType = ConToolType_1,
		ConStatus = ConStatus_1 * bSinkExist,
		ConType_1 = ConType_1,
		ConConnectorType_1 = ConConnectorType_1,
		ConSystem_1 = ConSystem_1,
		ui_current_con = ui_current_con,
		shape_typ_to_validation = shape_typ_to_validation,
		MEP_enabled_geometry_mod = 1

	parameters MEP_ConInfo[ConID][1] = STR(ConToolType_1, 1, 0)
	parameters MEP_ConInfo[ConID][2] = ConName
	parameters MEP_ConInfo[ConID][3] = "0"



	! --- 2nd CONNECTION --- !

	ConID = 2
	ConName = DimConName[2]

	if NOT(bDoubleRow) then
		ConDVecX = 0
		ConDVecY = 1
		ConDVecZ = 0
	
		ConWVecX = -1
		ConWVecY = 0
		ConWVecZ = 0
	else
		ConDVecX = 1
		ConDVecY = 0
		ConDVecZ = 0
	
		ConWVecX = 0
		ConWVecY = -1
		ConWVecZ = 0
	endif

	if NOT(bDoubleRow) then
		values "ConWidth_2" range (0, MIN(tableLength / 2, (tableHeight - topThk) / 2)]
		parameters ConDepth_2 = ConWidth_2
		values "ConLength_2" range [0, ]
	
		if GLOB_MODPAR_NAME = "bDoubleRow" | GLOB_MODPAR_NAME = "presetStyle" | GLOB_MODPAR_NAME = "iPresetStyle" then
			ConPosX_2 = tableLength / 4 + 0.2
			parameters ConPosX_2 = ConPosX_2
		endif
		values "ConPosX_2" range [ConWidth_2 / 2, tableLength - ConWidth_2 / 2]
		parameters ConPosY_2 = tableDepth
		values "ConPosZ_2" range [ConWidth_2 / 2, tableHeight - topThk - ConWidth_2 / 2]
	else
		values "ConWidth_2" range (0, MIN(tableDepth, (tableHeight - topThk) / 2)]
		parameters ConDepth_2 = ConWidth_2
		values "ConLength_2" range [0, ]

		if GLOB_MODPAR_NAME = "bDoubleRow" | GLOB_MODPAR_NAME = "presetStyle" | GLOB_MODPAR_NAME = "iPresetStyle" then
			ConPosY_2 = tableDepth / 2 + 0.2
			parameters ConPosY_2 = ConPosY_2
		endif
		parameters ConPosX_2 = tableLength
		values "ConPosY_2" range [ConWidth_2 / 2, fullTableDepth - ConWidth_2 / 2]
		values "ConPosZ_2" range [ConWidth_2 / 2, tableHeight - topThk - ConWidth_2 / 2]
	endif

	call "MEP_m_ConnectionsACL_4" parameters SetProgram = SetProgram,
		gs_Connections = gs_Connections,
		MEP_NumConnectionData = MEP_NumConnectionData,
		MEP_StrConnectionData = MEP_StrConnectionData,
		MEP_NumberConnections = MEP_NumberConnections,
		gs_AddConnections = gs_AddConnections,
		ConName = ConName,
		ConID = ConID,
		ConPosX = ConPosX_2,
		ConPosY = ConPosY_2,
		ConPosZ = ConPosZ_2,
		ConDVecX = ConDVecX,
		ConDVecY = ConDVecY,
		ConDVecZ = ConDVecZ,
		ConWVecX = ConWVecX,
		ConWVecY = ConWVecY,
		ConWVecZ = ConWVecZ,

		ConNominalWidth = ConNominalWidth_2,
		ConNominalDepth = ConNominalDepth_2,
		ConWidth = ConWidth_2,
		ConDepth = ConDepth_2,
		ConLength = ConLength_2,
		ConWallThickness = ConWallThickness_2,
		ConConnectorWidth = ConConnectorWidth_2,
		ConConnectorDepth = ConConnectorDepth_2,
		ConConnectorWidth2 = ConConnectorWidth2_2,
		ConToolType = ConToolType_2,
		ConStatus = ConStatus_2 * bSinkExist,
		ConType_2 = ConType_2,
		ConConnectorType_2 = ConConnectorType_2,
		ConSystem_2 = ConSystem_2,
		shape_typ_to_validation = shape_typ_to_validation,
		MEP_enabled_geometry_mod = 1

	parameters MEP_ConInfo[ConID][1] = STR(ConToolType_2, 1, 0)
	parameters MEP_ConInfo[ConID][2] = ConName
	parameters MEP_ConInfo[ConID][3] = "0"



	! --- 3rd CONNECTION --- !

	ConID = 3
	ConName = DimConName[3]

	if NOT(bDoubleRow) then
		ConDVecX = 0
		ConDVecY = 1
		ConDVecZ = 0
	
		ConWVecX = -1
		ConWVecY = 0
		ConWVecZ = 0
	else
		ConDVecX = 1
		ConDVecY = 0
		ConDVecZ = 0
	
		ConWVecX = 0
		ConWVecY = -1
		ConWVecZ = 0
	endif

	if NOT(bDoubleRow) then
		values "ConWidth_3" range (0, MIN(tableLength / 2, (tableHeight - topThk) / 2)]
		parameters ConDepth_3 = ConWidth_3
		values "ConLength_3" range [0, ]
	
		if GLOB_MODPAR_NAME = "bDoubleRow" | GLOB_MODPAR_NAME = "presetStyle" | GLOB_MODPAR_NAME = "iPresetStyle" then
			ConPosX_3 = tableLength / 4
			parameters ConPosX_3 = ConPosX_3
		endif
		values "ConPosX_3" range [ConWidth_3 / 2, tableLength - ConWidth_3 / 2]
		parameters ConPosY_3 = tableDepth
		values "ConPosZ_3" range [ConWidth_3 / 2, tableHeight - topThk - ConWidth_3 / 2]
	else
		values "ConWidth_3" range (0, MIN(tableDepth, (tableHeight - topThk) / 2)]
		parameters ConDepth_3 = ConWidth_3
		values "ConLength_3" range [0, ]

		if GLOB_MODPAR_NAME = "bDoubleRow" | GLOB_MODPAR_NAME = "presetStyle" | GLOB_MODPAR_NAME = "iPresetStyle" then
			ConPosY_3 = tableDepth / 2
			parameters ConPosY_3 = ConPosY_3
		endif
		parameters ConPosX_3 = tableLength
		values "ConPosY_3" range [ConWidth_3 / 2, fullTableDepth - ConWidth_3 / 2]
		values "ConPosZ_3" range [ConWidth_3 / 2, tableHeight - topThk - ConWidth_3 / 2]
	endif

	call "MEP_m_ConnectionsACL_4" parameters SetProgram = SetProgram,
		gs_Connections = gs_Connections,
		MEP_NumConnectionData = MEP_NumConnectionData,
		MEP_StrConnectionData = MEP_StrConnectionData,
		MEP_NumberConnections = MEP_NumberConnections,
		gs_AddConnections = gs_AddConnections,
		ConName = ConName,
		ConID = ConID,
		ConPosX = ConPosX_3,
		ConPosY = ConPosY_3,
		ConPosZ = ConPosZ_3,
		ConDVecX = ConDVecX,
		ConDVecY = ConDVecY,
		ConDVecZ = ConDVecZ,
		ConWVecX = ConWVecX,
		ConWVecY = ConWVecY,
		ConWVecZ = ConWVecZ,

		ConNominalWidth = ConNominalWidth_3,
		ConNominalDepth = ConNominalDepth_3,
		ConWidth = ConWidth_3,
		ConDepth = ConDepth_3,
		ConLength = ConLength_3,
		ConWallThickness = ConWallThickness_3,
		ConConnectorWidth = ConConnectorWidth_3,
		ConConnectorDepth = ConConnectorDepth_3,
		ConConnectorWidth2 = ConConnectorWidth2_3,
		ConToolType = ConToolType_3,
		ConStatus = ConStatus_3 * bSinkExist,
		ConType_3 = ConType_3,
		ConConnectorType_3 = ConConnectorType_3,
		ConSystem_3 = ConSystem_3,
		shape_typ_to_validation = shape_typ_to_validation,
		MEP_enabled_geometry_mod = 1

	parameters MEP_ConInfo[ConID][1] = STR(ConToolType_3, 1, 0)
	parameters MEP_ConInfo[ConID][2] = ConName
	parameters MEP_ConInfo[ConID][3] = "0"



	! --- 4th CONNECTION --- !

	ConID = 4
	ConName = DimConName[4]

	if NOT(bDoubleRow) then
		ConDVecX = 0
		ConDVecY = 1
		ConDVecZ = 0
	
		ConWVecX = -1
		ConWVecY = 0
		ConWVecZ = 0
	else
		ConDVecX = 1
		ConDVecY = 0
		ConDVecZ = 0
	
		ConWVecX = 0
		ConWVecY = -1
		ConWVecZ = 0
	endif

	if NOT(bDoubleRow) then
		values "ConWidth_4" range (0, MIN(tableLength / 2, (tableHeight - topThk) / 2)]
		parameters ConDepth_4 = ConWidth_4
		values "ConLength_4" range [0, ]
	
		if GLOB_MODPAR_NAME = "bDoubleRow" | GLOB_MODPAR_NAME = "presetStyle" | GLOB_MODPAR_NAME = "iPresetStyle" then
			ConPosX_4 = tableLength * 3 / 4 - 0.2
			parameters ConPosX_4 = ConPosX_4
		endif
		values "ConPosX_4" range [ConWidth_4 / 2, tableLength - ConWidth_4 / 2]
		parameters ConPosY_4 = tableDepth
		values "ConPosZ_4" range [ConWidth_4 / 2, tableHeight - topThk - ConWidth_4 / 2]
	else
		values "ConWidth_4" range (0, MIN(tableDepth, (tableHeight - topThk) / 2)]
		parameters ConDepth_4 = ConWidth_4
		values "ConLength_4" range [0, ]

		if GLOB_MODPAR_NAME = "bDoubleRow" | GLOB_MODPAR_NAME = "presetStyle" | GLOB_MODPAR_NAME = "iPresetStyle" then
			ConPosY_4 = tableDepth * 3 / 2 - 0.2
			parameters ConPosY_4 = ConPosY_4
		endif
		parameters ConPosX_4 = tableLength
		values "ConPosY_4" range [ConWidth_4 / 2, fullTableDepth - ConWidth_4 / 2]
		values "ConPosZ_4" range [ConWidth_4 / 2, tableHeight - topThk - ConWidth_4 / 2]
	endif

	call "MEP_m_ConnectionsACL_4" parameters SetProgram = SetProgram,
		gs_Connections = gs_Connections,
		MEP_NumConnectionData = MEP_NumConnectionData,
		MEP_StrConnectionData = MEP_StrConnectionData,
		MEP_NumberConnections = MEP_NumberConnections,
		gs_AddConnections = gs_AddConnections,
		ConName = ConName,
		ConID = ConID,
		ConPosX = ConPosX_4,
		ConPosY = ConPosY_4,
		ConPosZ = ConPosZ_4,
		ConDVecX = ConDVecX,
		ConDVecY = ConDVecY,
		ConDVecZ = ConDVecZ,
		ConWVecX = ConWVecX,
		ConWVecY = ConWVecY,
		ConWVecZ = ConWVecZ,

		ConNominalWidth = ConNominalWidth_4,
		ConNominalDepth = ConNominalDepth_4,
		ConWidth = ConWidth_4,
		ConDepth = ConDepth_4,
		ConLength = ConLength_4,
		ConWallThickness = ConWallThickness_4,
		ConConnectorWidth = ConConnectorWidth_4,
		ConConnectorDepth = ConConnectorDepth_4,
		ConConnectorWidth2 = ConConnectorWidth2_4,
		ConToolType = ConToolType_4,
		ConStatus = ConStatus_4 * bSink2Exist,
		ConType_4 = ConType_4,
		ConConnectorType_4 = ConConnectorType_4,
		ConSystem_4 = ConSystem_4,
		shape_typ_to_validation = shape_typ_to_validation,
		MEP_enabled_geometry_mod = 1

	parameters MEP_ConInfo[ConID][1] = STR(ConToolType_4, 1, 0)
	parameters MEP_ConInfo[ConID][2] = ConName
	parameters MEP_ConInfo[ConID][3] = "0"



	! --- 5th CONNECTION --- !

	ConID = 5
	ConName = DimConName[5]

	if NOT(bDoubleRow) then
		ConDVecX = 0
		ConDVecY = 1
		ConDVecZ = 0
	
		ConWVecX = -1
		ConWVecY = 0
		ConWVecZ = 0
	else
		ConDVecX = 1
		ConDVecY = 0
		ConDVecZ = 0
	
		ConWVecX = 0
		ConWVecY = -1
		ConWVecZ = 0
	endif

	if NOT(bDoubleRow) then
		values "ConWidth_5" range (0, MIN(tableLength / 2, (tableHeight - topThk) / 2)]
		parameters ConDepth_5 = ConWidth_5
		values "ConLength_5" range [0, ]
	
		if GLOB_MODPAR_NAME = "bDoubleRow" | GLOB_MODPAR_NAME = "presetStyle" | GLOB_MODPAR_NAME = "iPresetStyle" then
			ConPosX_5 = tableLength * 3 / 4 + 0.2
			parameters ConPosX_5 = ConPosX_5
		endif
		values "ConPosX_5" range [ConWidth_5 / 2, tableLength - ConWidth_5 / 2]
		parameters ConPosY_5 = tableDepth
		values "ConPosZ_5" range [ConWidth_5 / 2, tableHeight - topThk - ConWidth_5 / 2]
	else
		values "ConWidth_5" range (0, MIN(tableDepth, (tableHeight - topThk) / 2)]
		parameters ConDepth_5 = ConWidth_5
		values "ConLength_5" range [0, ]

		if GLOB_MODPAR_NAME = "bDoubleRow" | GLOB_MODPAR_NAME = "presetStyle" | GLOB_MODPAR_NAME = "iPresetStyle" then
			ConPosY_5 = tableDepth * 3 / 2 + 0.2
			parameters ConPosY_5 = ConPosY_5
		endif
		parameters ConPosX_5 = tableLength
		values "ConPosY_5" range [ConWidth_5 / 2, fullTableDepth - ConWidth_5 / 2]
		values "ConPosZ_5" range [ConWidth_5 / 2, tableHeight - topThk - ConWidth_5 / 2]
	endif

	call "MEP_m_ConnectionsACL_4" parameters SetProgram = SetProgram,
		gs_Connections = gs_Connections,
		MEP_NumConnectionData = MEP_NumConnectionData,
		MEP_StrConnectionData = MEP_StrConnectionData,
		MEP_NumberConnections = MEP_NumberConnections,
		gs_AddConnections = gs_AddConnections,
		ConName = ConName,
		ConID = ConID,
		ConPosX = ConPosX_5,
		ConPosY = ConPosY_5,
		ConPosZ = ConPosZ_5,
		ConDVecX = ConDVecX,
		ConDVecY = ConDVecY,
		ConDVecZ = ConDVecZ,
		ConWVecX = ConWVecX,
		ConWVecY = ConWVecY,
		ConWVecZ = ConWVecZ,

		ConNominalWidth = ConNominalWidth_5,
		ConNominalDepth = ConNominalDepth_5,
		ConWidth = ConWidth_5,
		ConDepth = ConDepth_5,
		ConLength = ConLength_5,
		ConWallThickness = ConWallThickness_5,
		ConConnectorWidth = ConConnectorWidth_5,
		ConConnectorDepth = ConConnectorDepth_5,
		ConConnectorWidth2 = ConConnectorWidth2_5,
		ConToolType = ConToolType_5,
		ConStatus = ConStatus_5 * bSink2Exist,
		ConType_5 = ConType_5,
		ConConnectorType_5 = ConConnectorType_5,
		ConSystem_5 = ConSystem_5,
		shape_typ_to_validation = shape_typ_to_validation,
		MEP_enabled_geometry_mod = 5

	parameters MEP_ConInfo[ConID][1] = STR(ConToolType_5, 1, 0)
	parameters MEP_ConInfo[ConID][2] = ConName
	parameters MEP_ConInfo[ConID][3] = "0"



	! --- 6th CONNECTION --- !

	ConID = 6
	ConName = DimConName[6]

	if NOT(bDoubleRow) then
		ConDVecX = 0
		ConDVecY = 1
		ConDVecZ = 0
	
		ConWVecX = -1
		ConWVecY = 0
		ConWVecZ = 0
	else
		ConDVecX = 1
		ConDVecY = 0
		ConDVecZ = 0
	
		ConWVecX = 0
		ConWVecY = -1
		ConWVecZ = 0
	endif

	if NOT(bDoubleRow) then
		values "ConWidth_6" range (0, MIN(tableLength / 2, (tableHeight - topThk) / 2)]
		parameters ConDepth_6 = ConWidth_6
		values "ConLength_6" range [0, ]
	
		if GLOB_MODPAR_NAME = "bDoubleRow" | GLOB_MODPAR_NAME = "presetStyle" | GLOB_MODPAR_NAME = "iPresetStyle" then
			ConPosX_6 = tableLength * 3 / 4
			parameters ConPosX_6 = ConPosX_6
		endif
		values "ConPosX_6" range [ConWidth_6 / 2, tableLength - ConWidth_6 / 2]
		parameters ConPosY_6 = tableDepth
		values "ConPosZ_6" range [ConWidth_6 / 2, tableHeight - topThk - ConWidth_6 / 2]
	else
		values "ConWidth_6" range (0, MIN(tableDepth, (tableHeight - topThk) / 2)]
		parameters ConDepth_6 = ConWidth_6
		values "ConLength_6" range [0, ]

		if GLOB_MODPAR_NAME = "bDoubleRow" | GLOB_MODPAR_NAME = "presetStyle" | GLOB_MODPAR_NAME = "iPresetStyle" then
			ConPosY_6 = tableDepth * 3 / 2
			parameters ConPosY_6 = ConPosY_6
		endif
		parameters ConPosX_6 = tableLength
		values "ConPosY_6" range [ConWidth_6 / 2, fullTableDepth - ConWidth_6 / 2]
		values "ConPosZ_6" range [ConWidth_6 / 2, tableHeight - topThk - ConWidth_6 / 2]
	endif

	call "MEP_m_ConnectionsACL_4" parameters SetProgram = SetProgram,
		gs_Connections = gs_Connections,
		MEP_NumConnectionData = MEP_NumConnectionData,
		MEP_StrConnectionData = MEP_StrConnectionData,
		MEP_NumberConnections = MEP_NumberConnections,
		gs_AddConnections = gs_AddConnections,
		ConName = ConName,
		ConID = ConID,
		ConPosX = ConPosX_6,
		ConPosY = ConPosY_6,
		ConPosZ = ConPosZ_6,
		ConDVecX = ConDVecX,
		ConDVecY = ConDVecY,
		ConDVecZ = ConDVecZ,
		ConWVecX = ConWVecX,
		ConWVecY = ConWVecY,
		ConWVecZ = ConWVecZ,

		ConNominalWidth = ConNominalWidth_6,
		ConNominalDepth = ConNominalDepth_6,
		ConWidth = ConWidth_6,
		ConDepth = ConDepth_6,
		ConLength = ConLength_6,
		ConWallThickness = ConWallThickness_6,
		ConConnectorWidth = ConConnectorWidth_6,
		ConConnectorDepth = ConConnectorDepth_6,
		ConConnectorWidth2 = ConConnectorWidth2_6,
		ConToolType = ConToolType_6,
		ConStatus = ConStatus_6 * bSink2Exist,
		ConType_6 = ConType_6,
		ConConnectorType_6 = ConConnectorType_6,
		ConSystem_6 = ConSystem_6,
		shape_typ_to_validation = shape_typ_to_validation,
		MEP_enabled_geometry_mod = 1

	parameters MEP_ConInfo[ConID][1] = STR(ConToolType_6, 1, 0)
	parameters MEP_ConInfo[ConID][2] = ConName
	parameters MEP_ConInfo[ConID][3] = "0"



	! --- 7th CONNECTION --- !

	ConID = 7
	ConName = DimConName[7]

	if NOT(bDoubleRow) then
		ConDVecX = 0
		ConDVecY = 1
		ConDVecZ = 0
	
		ConWVecX = -1
		ConWVecY = 0
		ConWVecZ = 0
	else
		ConDVecX = 1
		ConDVecY = 0
		ConDVecZ = 0
	
		ConWVecX = 0
		ConWVecY = -1
		ConWVecZ = 0
	endif

	if NOT(bDoubleRow) then
		values "ConWidth_7" range (0, MIN(tableLength / 2, (tableHeight - topThk) / 2)]
		parameters ConDepth_7 = ConWidth_7
		values "ConLength_7" range [0, ]
	
		if GLOB_MODPAR_NAME = "bDoubleRow" | GLOB_MODPAR_NAME = "presetStyle" | GLOB_MODPAR_NAME = "iPresetStyle" then
			ConPosX_7 = tableLength / 2
			parameters ConPosX_7 = ConPosX_7
		endif
		values "ConPosX_7" range [ConWidth_7 / 2, tableLength - ConWidth_7 / 2]
		parameters ConPosY_7 = tableDepth
		values "ConPosZ_7" range [ConWidth_7 / 2, tableHeight - topThk - ConWidth_7 / 2]
	else
		values "ConWidth_7" range (0, MIN(tableDepth, (tableHeight - topThk) / 2)]
		parameters ConDepth_7 = ConWidth_7
		values "ConLength_7" range [0, ]

		if GLOB_MODPAR_NAME = "bDoubleRow" | GLOB_MODPAR_NAME = "presetStyle" | GLOB_MODPAR_NAME = "iPresetStyle" then
			ConPosY_7 = fullTableDepth / 2
			parameters ConPosY_7 = ConPosY_7
		endif
		parameters ConPosX_7 = tableLength
		values "ConPosY_7" range [ConWidth_7 / 2, fullTableDepth - ConWidth_7 / 2]
		values "ConPosZ_7" range [ConWidth_7 / 2, tableHeight - topThk - ConWidth_7 / 2]
	endif

	call "MEP_m_ConnectionsACL_4" parameters SetProgram = SetProgram,
		gs_Connections = gs_Connections,
		MEP_NumConnectionData = MEP_NumConnectionData,
		MEP_StrConnectionData = MEP_StrConnectionData,
		MEP_NumberConnections = MEP_NumberConnections,
		gs_AddConnections = gs_AddConnections,
		ConName = ConName,
		ConID = ConID,
		ConPosX = ConPosX_7,
		ConPosY = ConPosY_7,
		ConPosZ = ConPosZ_7,
		ConDVecX = ConDVecX,
		ConDVecY = ConDVecY,
		ConDVecZ = ConDVecZ,
		ConWVecX = ConWVecX,
		ConWVecY = ConWVecY,
		ConWVecZ = ConWVecZ,

		ConNominalWidth = ConNominalWidth_7,
		ConNominalDepth = ConNominalDepth_7,
		ConWidth = ConWidth_7,
		ConDepth = ConDepth_7,
		ConLength = ConLength_7,
		ConWallThickness = ConWallThickness_7,
		ConConnectorWidth = ConConnectorWidth_7,
		ConConnectorDepth = ConConnectorDepth_7,
		ConConnectorWidth2 = ConConnectorWidth2_7,
		ConToolType = ConToolType_7,
		ConStatus = ConStatus_7 * bGasConnOnTable,
		ConType_7 = ConType_7,
		ConConnectorType_7 = ConConnectorType_7,
		ConSystem_7 = ConSystem_7,
		shape_typ_to_validation = shape_typ_to_validation,
		MEP_enabled_geometry_mod = 1

	parameters MEP_ConInfo[ConID][1] = STR(ConToolType_7, 1, 0)
	parameters MEP_ConInfo[ConID][2] = ConName
	parameters MEP_ConInfo[ConID][3] = "0"



	if NOT(bSinkExist) then
		lock			"ConStatus_1",
						"ConStatus_2",
						"ConStatus_3"
		hideparameter	"ConStatus_1",
						"ConStatus_2",
						"ConStatus_3"
	endif
	if NOT(bSink2Exist) then
		lock			"ConStatus_4",
						"ConStatus_5",
						"ConStatus_6"
		hideparameter	"ConStatus_4",
						"ConStatus_5",
						"ConStatus_6"
	endif
	if NOT(bGasConnOnTable) then
		lock			"ConStatus_7"
		hideparameter	"ConStatus_7"
	endif

	if gs_ui_current_page = iPageIDMEP then
		ac_mep_connectionpage_active = 1
	else
		ac_mep_connectionpage_active = 0
	endif
	parameters ac_mep_connectionpage_active = ac_mep_connectionpage_active

	isConnection = 0
	for i = 1 TO VARDIM1(MEP_NumConnectionData)
		isConnection = isConnection + MEP_NumConnectionData[i][22]
	next i
	if isConnection < EPS then
		LOCK "gs_con_mat"
		hideparameter "gs_con_mat"
	endif

	if SetProgram then
		SetProgram = 0
		parameters SetProgram = SetProgram
	endif
else
	if MEP_NumberConnections > 0 then
		hideparameter "gs_connection", "useSysMat"

		ac_mep_connectionpage_active = 0
		parameters ac_mep_connectionpage_active = ac_mep_connectionpage_active
	endif
endif
