
EPS = 0.0001

stStory			= `Этаж`
stSplitLevel	= `Разные Уровни`
stSplitStory	= `Полуэтаж`

dim stDoorPosition[4]
	stDoorPosition[1] = `Спереди`
	stDoorPosition[2] = `Второй Проем`
	stDoorPosition[3] = `С Обеих Сторон`
	stDoorPosition[4] = `Нет`

dim stDetail[3]
	stDetail[1] = `Детальный`
	stDetail[2] = `Простой`
	stDetail[3] = `Откл.`

dim stDetail2D[]
	stDetail2D[1] = `Зависит от Масштаба`
	stDetail2D[2] = `1:50`
	stDetail2D[3] = `1:100`
	stDetail2D[4] = `1:200`
	stDetail2D[5] = `Символический 1`
	stDetail2D[6] = `Символический 2`

dim stElevType[2]
	stElevType[1] = `Механический`
	stElevType[2] = `Гидравлический`

dim stDirection[4]
	stDirection[1] = `Нет`
	stDirection[2] = `Сзади`
	stDirection[3] = `Сторона 1`
	stDirection[4] = `Сторона 2`

! dir_second_opening_m
	SECOND_OPENING_NONE		= 1
	SECOND_OPENING_REAR		= 2
	SECOND_OPENING_SIDE1	= 3
	SECOND_OPENING_SIDE2	= 4

dim stPosition[3]
	stPosition[1] = `Обычное`
	stPosition[2] = `Сторона 1`
	stPosition[3] = `Сторона 2`

! cweight_pos_m
	CW_POS_NORMAL	= 1
	CW_POS_SIDE1	= 2
	CW_POS_SIDE2	= 3
	
dim stElevDoorStyle[2]
	stElevDoorStyle[1] = `Раздвижная`
	stElevDoorStyle[2] = `Распашная`

dim stDoorStyle[6]
	stDoorStyle[1] = `Нет`
	stDoorStyle[2] = `Стиль 1`
	stDoorStyle[3] = `Стиль 2`
	stDoorStyle[4] = `Стиль 3`
	stDoorStyle[5] = `Стиль 4`
	stDoorStyle[6] = `Стиль 5`

dim stElevForm[2]
	stElevForm[1] = `Прямоугольная`
	stElevForm[2] = `Сегментированная`

! elevator_form_m
	FORM_RECT		= 1
	FORM_SEGMENTED	= 2

carWallThk		= 0.08
carEPS			= 0.001
cweightEPS		= 0.001
gap_width		= 0.012
minCarWidth		= 0.2
minCarDepth		= 0.2
minCwDepth		= 0.02
minCarWallFlap	= 0.02
frontGap		= 0.04
segmentedFront	= 0.05
openingFromSide	= 0.04
opening_width	= door_width + 0.36
opening_height	= door_height + 0.18

dim doorThickness[5]
	doorThickness[1] = 0.02
	doorThickness[2] = 0.03
	doorThickness[3] = 0.03
	doorThickness[4] = 0.03
	doorThickness[5] = 0.04

dim doorOffset[5]
	doorOffset[1] = 0
	doorOffset[2] = 0.02
	doorOffset[3] = 0.02
	doorOffset[4] = 0.02
	doorOffset[5] = 0.02

elevCarOffset	= 0
elevCarDoorThk	= 0
elevCarGlassThk	= 0.01
if door_style_m > 0 then
	elevCarDoorThk	= doorThickness[door_style_m]
	elevCarOffset	= doorOffset[door_style_m]
endif


if elevator_form_m = FORM_SEGMENTED then bSplitLevelStories = 0

if GLOB_SCRIPT_TYPE = 7 | GLOB_SCRIPT_TYPE = 8 then goto "endMasterScript"

! ==============================================================================
! Story
! ==============================================================================
home_story_index = 0
storyInfo = REQUEST ("Home_story", "", home_story_index, home_story_name)

if storyInfo then
	num_above_story = 0
	num_below_story = 0

	dim t[]
	n = REQUEST ("STORY_INFO", "", numStories, t)

	parameters home_story_index = home_story_index

	for i = 1 to numStories
		story_index = t [4 * (i - 1) + 1]
		if story_index > home_story_index then
			num_above_story = num_above_story + 1
			story_name_above[num_above_story] = t[4 * (i - 1) + 2]
			story_elev_above[num_above_story] = t[4 * (i - 1) + 3]
			story_height_above[num_above_story] = t[4 * (i - 1) + 4]
		endif
		if story_index = home_story_index then
			home_story_name = t[4 * (i - 1) + 2]
			home_story_elev = t[4 * (i - 1) + 3]
			home_story_height = t[4 * (i - 1) + 4]
		endif
		if story_index < home_story_index then
			num_below_story = num_below_story + 1
			story_name_below[num_below_story] = t[4 * (i - 1) + 2]
			story_elev_below[num_below_story] = t[4 * (i - 1) + 3]
			story_height_below[num_below_story] = t[4 * (i - 1) + 4]
		endif
	next i
	parameters num_above_story = num_above_story
	parameters story_name_above = story_name_above
	parameters story_elev_above = story_elev_above
	parameters story_height_above = story_height_above

	parameters home_story_name = home_story_name
	parameters home_story_elev = home_story_elev
	parameters home_story_height = home_story_height

	parameters num_below_story = num_below_story
	parameters story_name_below = story_name_below
	parameters story_elev_below = story_elev_below
	parameters story_height_below = story_height_below
endif


dim connected_stories_name[]
dim connected_stories_elev[]
dim connected_stories_height[]
dim connected_stories_id[]
dim available_connected_stories_boolean[]
dim available_connected_stories_name[]
dim available_connected_stories_id[]

ii = 0
if num_above_story < num_stories_above_HS then
	num_stories_above_HS = num_above_story
	parameters num_stories_above_HS = num_stories_above_HS

	if num_stories_above_HS < num_SL_stories_above_HS then
		num_SL_stories_above_HS = num_stories_above_HS
		parameters num_SL_stories_above_HS = num_SL_stories_above_HS
	endif
endif
if num_above_story then
	values "num_stories_above_HS" range[0, num_above_story]
	values "num_SL_stories_above_HS" range[0, num_stories_above_HS]

	if num_stories_above_HS then
		for i = num_stories_above_HS to 1 step -1
			ii = ii + 1
			if story_name_above[i] = "" then
				storyName = stStory
			else
				storyName = story_name_above[i]
			endif
			connected_stories_name[ii] = str(i+home_story_index,1,0)+". "+storyName			! --- name to normal story
			connected_stories_elev[ii] = story_elev_above[i]-home_story_elev				! --- elevation to normal story
			connected_stories_height[ii] = story_height_above[i]			! --- height to normal story

			if bSplitLevelStories then
				connected_stories_id[ii] = i*2+home_story_index*2			! --- id to normal story if split-level is exist
				available_connected_stories_boolean[ii] = 1

				ii = ii + 1
				if story_name_above[i] = "" then
					storyName = stSplitStory
				else
					storyName = stSplitLevel+" "+story_name_above[i]
				endif
				connected_stories_name[ii] = str(i+home_story_index-1,1,0)+". "+storyName	! --- name to split-level story
				if i > 1 then
					connected_stories_elev[ii] = story_elev_above[i-1]-home_story_elev+dist_SL_story_to_normal_story	! --- elevation to split-level story
					connected_stories_height[ii] = story_height_above[i-1]	! --- height to split-level story
				else
					connected_stories_elev[ii] = dist_SL_story_to_normal_story
					connected_stories_height[ii] = home_story_height
				endif
				connected_stories_id[ii] = i*2+home_story_index*2-1			! --- id to split-level story
				if num_SL_stories_above_HS+eps > i then
					available_connected_stories_boolean[ii] = 1
				else
					available_connected_stories_boolean[ii] = 0
				endif
			else
				connected_stories_id[ii] = i+home_story_index				! --- id to normal story if split-level is non-exist
			endif
		next i
	else
		lock "num_SL_stories_above_HS"
	endif
else
	lock "num_stories_above_HS"
endif

ii = ii + 1
if home_story_name = "" then home_story_name = stStory
connected_stories_name[ii] = str(home_story_index,1,0)+". "+home_story_name
connected_stories_elev[ii] = 0
connected_stories_height[ii] = home_story_height
connected_stories_id[ii] = home_story_index*(1+bSplitLevelStories)
available_connected_stories_boolean[ii] = 1

if num_below_story < num_stories_below_HS then
	num_stories_below_HS = num_below_story
	parameters num_stories_below_HS = num_stories_below_HS

	if num_stories_below_HS < num_SL_stories_below_HS then
		num_SL_stories_below_HS = num_stories_below_HS
		parameters num_SL_stories_below_HS = num_SL_stories_below_HS
	endif
endif
if num_below_story then
	values "num_stories_below_HS" range[0, num_below_story]
	values "num_SL_stories_below_HS" range[0, num_stories_below_HS]

	if num_stories_below_HS then
		for i = 1 to num_stories_below_HS
			ii = ii + 1
			j = num_below_story+1-i
			if bSplitLevelStories then
				if story_name_below[i] = "" then
					storyName = stSplitStory
				else
					storyName = stSplitLevel+" "+story_name_below[i]
				endif
				connected_stories_name[ii] = str(-i+home_story_index,1,0)+". "+storyName		! --- name to split-level story
				connected_stories_elev[ii] = story_elev_below[j]-home_story_elev+dist_SL_story_to_normal_story	! --- elevation to split-level story
				connected_stories_height[ii] = story_height_below[j]			! --- height to split-level story
				connected_stories_id[ii] = -i*2+home_story_index*2+1			! --- id to split-level story
				if num_SL_stories_below_HS+eps > i then
					available_connected_stories_boolean[ii] = 1
				else
					available_connected_stories_boolean[ii] = 0
				endif

				ii = ii + 1
				connected_stories_id[ii] = -i*2+home_story_index*2			! --- id to normal story if split-level is exist
				available_connected_stories_boolean[ii] = 1
			else
				connected_stories_id[ii] = -i+home_story_index				! --- id to normal story if split-level is non-exist
			endif

			if story_name_below[i] = "" then
				storyName = stStory
			else
				storyName = story_name_above[i]
			endif
			connected_stories_name[ii] = str(-i+home_story_index,1,0)+". "+storyName			! --- name to normal story
			connected_stories_elev[ii] = story_elev_below[j]-home_story_elev				! --- elevation to normal story
			connected_stories_height[ii] = story_height_below[j]			! --- height to normal story
		next i
	else
		lock "num_SL_stories_below_HS"
	endif
else
	lock "num_stories_below_HS"
endif
num_connected_stories = ii

bLockedDoorEditedStory = 0
if bSplitLevelStories then
	ii = 0
	for i = 1 to num_connected_stories
		if available_connected_stories_boolean[i] = 1 then
			ii = ii + 1
			available_connected_stories_name[ii] = connected_stories_name[i]
			available_connected_stories_id[ii] = connected_stories_id[i]
		endif
	next i
	num_available_connected_stories = ii

	values "edited_story" available_connected_stories_name
	values "edited_story_m" available_connected_stories_id

	if GLOB_MODPAR_NAME = "edited_story" then
		for i = 1 to num_connected_stories
			if edited_story = connected_stories_name[i] then
				edited_story_m = -i+1+num_stories_above_HS*2+home_story_index*2
				i = num_connected_stories
			endif
		next i
		parameters edited_story_m = edited_story_m
	else
		if edited_story_m < home_story_index*2 - num_stories_below_HS*2 then edited_story_m = home_story_index*2 - num_stories_below_HS*2
		if edited_story_m > home_story_index*2 + num_stories_above_HS*2 then edited_story_m = home_story_index*2 + num_stories_above_HS*2
		edited_story = connected_stories_name[-edited_story_m+1+num_stories_above_HS*2+home_story_index*2]
		parameters edited_story = edited_story
	endif
	editedStoryID = -edited_story_m+1+num_stories_above_HS*2+home_story_index*2
	parameters edited_story_height	= connected_stories_height[editedStoryID]
	parameters edited_story_elev  	= connected_stories_elev[editedStoryID]


	values "car_pos_story" available_connected_stories_name
	values "car_pos_story_m" available_connected_stories_id

	if GLOB_MODPAR_NAME = "car_pos_story" then
		for i = 1 to num_connected_stories
			if car_pos_story = connected_stories_name[i] then
				car_pos_story_m = -i+1+num_stories_above_HS*2+home_story_index*2
				i = num_connected_stories
			endif
		next i
		parameters car_pos_story_m = car_pos_story_m
	else
		if car_pos_story_m < home_story_index*2 - num_stories_below_HS*2 then car_pos_story_m = home_story_index*2 - num_stories_below_HS*2
		if car_pos_story_m > home_story_index*2 + num_stories_above_HS*2 then car_pos_story_m = home_story_index*2 + num_stories_above_HS*2
		car_pos_story = connected_stories_name[-car_pos_story_m+1+num_stories_above_HS*2+home_story_index*2]
		parameters car_pos_story = car_pos_story
	endif


	if abs(INT(connected_stories_id[editedStoryID]/2)-(connected_stories_id[editedStoryID]/2)) < eps then
		if edited_story_door_pos_m = 2 | edited_story_door_pos_m = 3 then
			edited_story_door_pos_m = 1
			parameters edited_story_door_pos_m = edited_story_door_pos_m
		endif
		values "edited_story_door_pos" stDoorPosition[1], stDoorPosition[4]
		values "edited_story_door_pos_m" 1, 4
	else
		if edited_story_door_pos_m = 1 | edited_story_door_pos_m = 3 then
			edited_story_door_pos_m = 2
			parameters edited_story_door_pos_m = edited_story_door_pos_m
		endif
		if dir_second_opening_m = SECOND_OPENING_NONE then
			bLockedDoorEditedStory	= 1
			edited_story_door_pos	= stDoorPosition[4]
			edited_story_door_pos_m	= 4
			lock "edited_story_door_pos", "edited_story_door_pos_m"
		endif
		stDoorPosition[2] = dir_second_opening
		values "edited_story_door_pos" stDoorPosition[2], stDoorPosition[4]
		values "edited_story_door_pos_m" 2, 4
	endif

	if connected_stories_id[1] > -eps then						 ! --- add defaults to empty (0. 1. 2. ...) stories
		for i = 1 to connected_stories_id[1]+1
			if SL_above_story_door_pos[i] = 0 then
				if abs(INT(i/2)-(i/2)) < eps then
					SL_above_story_door_pos[i] = 2
				else
					SL_above_story_door_pos[i] = 1
				endif
				parameters SL_above_story_door_pos[i] = SL_above_story_door_pos[i]
			endif
		next i

		if dir_second_opening_m = SECOND_OPENING_NONE then
			for i = 1 to connected_stories_id[1]+1
				if abs(INT(i/2)-(i/2)) < eps then
					SL_above_story_door_pos[i] = 4
				endif	
			next i
		endif
	endif

	if connected_stories_id[num_connected_stories] < 0 then	 	! --- add defaults to empty  (-1. -2. ...) stories
		for i = 1 to abs(connected_stories_id[num_connected_stories])
			if SL_below_story_door_pos[i] = 0 then
				if abs(INT(i/2)-(i/2)) < eps then
					SL_below_story_door_pos[i] = 1
				else
					SL_below_story_door_pos[i] = 2
				endif
				parameters SL_below_story_door_pos[i] = SL_below_story_door_pos[i]
			endif
		next i

		if dir_second_opening_m = SECOND_OPENING_NONE then
			for i = 1 to abs(connected_stories_id[num_connected_stories])
				if abs(INT(i/2)-(i/2)) > eps then
					SL_below_story_door_pos[i] = 4
				endif
			next i
		endif
	endif

	if GLOB_MODPAR_NAME = "edited_story" or GLOB_MODPAR_NAME = "bSplitLevelStories" then
		if edited_story_m < 0 then
			edited_story_door_pos_m = SL_below_story_door_pos[abs(edited_story_m)]
		else
			edited_story_door_pos_m = SL_above_story_door_pos[edited_story_m+1]
		endif
		parameters edited_story_door_pos_m = edited_story_door_pos_m

		edited_story_door_pos = stDoorPosition[edited_story_door_pos_m]
		parameters edited_story_door_pos = edited_story_door_pos
	else
		if GLOB_MODPAR_NAME = "edited_story_door_pos" then
			for i = 1 to 4
				if edited_story_door_pos = stDoorPosition[i] then
					edited_story_door_pos_m = i
					i = 4
				endif
			next i
			parameters edited_story_door_pos_m = edited_story_door_pos_m
		else
			edited_story_door_pos = stDoorPosition[edited_story_door_pos_m]
			parameters edited_story_door_pos = edited_story_door_pos
		endif

		if edited_story_m < 0 then
			SL_below_story_door_pos[abs(edited_story_m)] = edited_story_door_pos_m
			parameters SL_below_story_door_pos[abs(edited_story_m)] = SL_below_story_door_pos[abs(edited_story_m)]
		else
			SL_above_story_door_pos[edited_story_m+1] = edited_story_door_pos_m
			parameters SL_above_story_door_pos[edited_story_m+1] = SL_above_story_door_pos[edited_story_m+1]
		endif
	endif
else
	values "edited_story" connected_stories_name
	values "edited_story_m" connected_stories_id

	if GLOB_MODPAR_NAME = "edited_story" then
		for i = 1 to num_connected_stories
			if edited_story = connected_stories_name[i] then
				edited_story_m = -i+1+num_stories_above_HS+home_story_index
				i = num_connected_stories
			endif
		next i
		parameters edited_story_m = edited_story_m
	else
		if edited_story_m < home_story_index - num_stories_below_HS then edited_story_m = home_story_index - num_stories_below_HS
		if edited_story_m > home_story_index + num_stories_above_HS then edited_story_m = home_story_index + num_stories_above_HS
		edited_story = connected_stories_name[-edited_story_m+1+num_stories_above_HS+home_story_index]
		parameters edited_story = edited_story
	endif
	editedStoryID = -edited_story_m+1+num_stories_above_HS+ home_story_index
	parameters edited_story_height = connected_stories_height[editedStoryID]
	parameters edited_story_elev  = connected_stories_elev[editedStoryID]


	values "car_pos_story" connected_stories_name
	values "car_pos_story_m" connected_stories_id

	if GLOB_MODPAR_NAME = "car_pos_story" then
		for i = 1 to num_connected_stories
			if car_pos_story = connected_stories_name[i] then
				car_pos_story_m = -i+1+num_stories_above_HS+home_story_index
				i = num_connected_stories
			endif
		next i
		parameters car_pos_story_m = car_pos_story_m
	else
		if car_pos_story_m < home_story_index - num_stories_below_HS then car_pos_story_m = home_story_index - num_stories_below_HS
		if car_pos_story_m > home_story_index + num_stories_above_HS then car_pos_story_m = home_story_index + num_stories_above_HS
		car_pos_story = connected_stories_name[-car_pos_story_m+1+num_stories_above_HS+home_story_index]
		parameters car_pos_story = car_pos_story
	endif


	if elevator_form_m = FORM_RECT then 			! --- Rectangular
		if dir_second_opening_m = 1 then		! None
			if edited_story_door_pos_m = 2 | edited_story_door_pos_m = 3 then
				edited_story_door_pos_m = 1
				parameters edited_story_door_pos_m = edited_story_door_pos_m
			endif
			values "edited_story_door_pos" stDoorPosition[1], stDoorPosition[4]
			values "edited_story_door_pos_m" 1, 4
		else
			values "edited_story_door_pos" stDoorPosition
			values "edited_story_door_pos_m" 1, 2, 3, 4
		endif

		if connected_stories_id[1] > -eps then			 			! --- add defaults to empty (0. 1. 2. ...) stories
			for i = 1 to connected_stories_id[1]+1
				if above_story_door_pos[i] = 0 then
					above_story_door_pos[i] = 1
					parameters above_story_door_pos[i] = above_story_door_pos[i]
				endif
			next i
		endif

		if connected_stories_id[num_connected_stories] < 0 then		! --- add defaults to empty (-1. -2. ...) stories
			for i = 1 to abs(connected_stories_id[num_connected_stories])
				if below_story_door_pos[i] = 0 then
					below_story_door_pos[i] = 1
					parameters below_story_door_pos[i] = below_story_door_pos[i]
				endif
			next i
		endif

		if GLOB_MODPAR_NAME = "edited_story" or GLOB_MODPAR_NAME = "bSplitLevelStories" or GLOB_MODPAR_NAME = "elevator_form" then
			if edited_story_m < 0 then
				edited_story_door_pos_m = below_story_door_pos[abs(edited_story_m)]
			else
				edited_story_door_pos_m = above_story_door_pos[edited_story_m+1]
			endif
			parameters edited_story_door_pos_m = edited_story_door_pos_m

			edited_story_door_pos = stDoorPosition[edited_story_door_pos_m]
			parameters edited_story_door_pos = edited_story_door_pos
		else
			if GLOB_MODPAR_NAME = "edited_story_door_pos" then
				for i = 1 to 4
					if edited_story_door_pos = stDoorPosition[i] then
						edited_story_door_pos_m = i
						i = 4
					endif
				next i
				parameters edited_story_door_pos_m = edited_story_door_pos_m
			else
				edited_story_door_pos = stDoorPosition[edited_story_door_pos_m]
				parameters edited_story_door_pos = edited_story_door_pos
			endif

			if edited_story_m < 0 then
				below_story_door_pos[abs(edited_story_m)] = edited_story_door_pos_m
				parameters below_story_door_pos[abs(edited_story_m)] = below_story_door_pos[abs(edited_story_m)]
			else
				above_story_door_pos[edited_story_m+1] = edited_story_door_pos_m
				parameters above_story_door_pos[edited_story_m+1] = above_story_door_pos[edited_story_m+1]
			endif
		endif
	else 									! --- Segmented
		if edited_story_door_pos_m = 2 | edited_story_door_pos_m = 3 then
			edited_story_door_pos_m = 1
			parameters edited_story_door_pos_m = edited_story_door_pos_m
		endif
		values "edited_story_door_pos" stDoorPosition[1], stDoorPosition[4]
		values "edited_story_door_pos_m" 1, 4

		if connected_stories_id[1] > -eps then								 ! --- add defaults to empty (0. 1. 2. ...) stories
			for i = 1 to connected_stories_id[1]+1
				if S_above_story_door_pos[i] = 0 then
					S_above_story_door_pos[i] = 1
					parameters S_above_story_door_pos[i] = S_above_story_door_pos[i]
				endif
			next i
		endif

		if connected_stories_id[num_connected_stories] < 0 then 			! --- add defaults to empty (-1. -2. ...) stories
			for i = 1 to abs(connected_stories_id[num_connected_stories])
				if S_below_story_door_pos[i] = 0 then
					S_below_story_door_pos[i] = 1
					parameters S_below_story_door_pos[i] = S_below_story_door_pos[i]
				endif
			next i
		endif

		if GLOB_MODPAR_NAME = "edited_story" or GLOB_MODPAR_NAME = "bSplitLevelStories" or GLOB_MODPAR_NAME = "elevator_form" then
			if edited_story_m < 0 then
				edited_story_door_pos_m = S_below_story_door_pos[abs(edited_story_m)]
			else
				edited_story_door_pos_m = S_above_story_door_pos[edited_story_m+1]
			endif
			parameters edited_story_door_pos_m = edited_story_door_pos_m

			edited_story_door_pos = stDoorPosition[edited_story_door_pos_m]
			parameters edited_story_door_pos = edited_story_door_pos
		else
			if GLOB_MODPAR_NAME = "edited_story_door_pos" then
				for i = 1 to 4
					if edited_story_door_pos = stDoorPosition[i] then
						edited_story_door_pos_m = i
						i = 4
					endif
				next i
				parameters edited_story_door_pos_m = edited_story_door_pos_m
			else
				edited_story_door_pos = stDoorPosition[edited_story_door_pos_m]
				parameters edited_story_door_pos = edited_story_door_pos
			endif

			if edited_story_m < 0 then
				S_below_story_door_pos[abs(edited_story_m)] = edited_story_door_pos_m
				parameters S_below_story_door_pos[abs(edited_story_m)] = S_below_story_door_pos[abs(edited_story_m)]
			else
				S_above_story_door_pos[edited_story_m+1] = edited_story_door_pos_m
				parameters S_above_story_door_pos[edited_story_m+1] = S_above_story_door_pos[edited_story_m+1]
			endif
		endif
	endif
endif


! ==============================================================================
! Shaft Sizes
! ==============================================================================
if elevator_form_m = FORM_RECT then
	totalShaftWidth = shaft_inner_width + elev_shaft_thick*2
	totalShaftDepth = shaft_inner_depth + elev_shaft_thick*2
	car_width		= car_inner_width + 2*carWallThk
	car_depth		= car_inner_depth + 2*carWallThk
	bMechanic		= (elevator_type_m = 1)

	if dir_second_opening_m = SECOND_OPENING_SIDE1 then
		carSpaceSide1	= frontGap
	else
		carSpaceSide1	= (shaft_inner_width - car_width - frontGap*(dir_second_opening_m = SECOND_OPENING_SIDE2)- cweight_depth*(cweight_pos_m <> CW_POS_NORMAL) * bMechanic) /\
						  (1+(dir_second_opening_m <> SECOND_OPENING_SIDE2)+(cweight_pos_m <> CW_POS_NORMAL) * bMechanic)
	endif
	carSide1 = carSpaceSide1 *  (1+(cweight_pos_m = CW_POS_SIDE1) * bMechanic) + cweight_depth*(cweight_pos_m = CW_POS_SIDE1) * bMechanic

	if dir_second_opening_m = SECOND_OPENING_SIDE2 then
		carSpaceSide2	= frontGap
	else
		carSpaceSide2	= (shaft_inner_width - car_width - frontGap*(dir_second_opening_m = SECOND_OPENING_SIDE1) - cweight_depth*(cweight_pos_m <> CW_POS_NORMAL) * bMechanic) /\
						  (1+(dir_second_opening_m <> SECOND_OPENING_SIDE1)+(cweight_pos_m <> CW_POS_NORMAL) * bMechanic)
	endif
	carSide2 = carSpaceSide2 *  (1+(cweight_pos_m = CW_POS_SIDE2) * bMechanic) + cweight_depth*(cweight_pos_m = CW_POS_SIDE2) * bMechanic

	carSpaceFront = frontGap

	if dir_second_opening_m = SECOND_OPENING_REAR then
		carSpaceRear		= frontGap
	else
		carSpaceRear		= (shaft_inner_depth - car_depth - cweight_depth*(cweight_pos_m = CW_POS_NORMAL) * bMechanic - carSpaceFront) / (1+(cweight_pos_m = CW_POS_NORMAL) * bMechanic)
	endif
endif

! ==============================================================================
"endMasterScript":
! ==============================================================================



