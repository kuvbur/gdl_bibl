
! ==============================================================================
! Shower Cabin
! ==============================================================================

pen gs_cont_pen
fill gs_fill_type


! ==========================================================================
! Scale
! ==========================================================================

call "2dDetailLevel" parameters gs_detlevel_2D_m = gs_detlevel_2D_m,
				returned_parameters gs_detlevel_2D_m


unID = 1
drawindex 20

! ==============================================================================
! 1 : 200
! ==============================================================================

if iCabinForm = CABINFORM_SQUAREDALCOVE | iCabinForm = CABINFORM_SQUAREDCORNER | iCabinForm = CABINFORM_SQUAREDPENINSULAR | iCabinForm = CABINFORM_SQUARE then
	hotspot2 0, 0, unID : unID = unID + 1
	hotspot2 -A/2, -B/2, unID : unID = unID + 1
	hotspot2  A/2, -B/2, unID : unID = unID + 1
	hotspot2  A/2,  B/2, unID : unID = unID + 1
	hotspot2 -A/2,  B/2, unID : unID = unID + 1

	poly2_b 4, 1+2+4+64, gs_fill_pen, gs_back_pen,
		-A/2, B/2, 1,
		-A/2, -B/2, 1,
		A/2, -B/2, 1,
		A/2, B/2, 1
endif
if iCabinForm = CABINFORM_ROUNDEDCORNER then
	hotspot2 0, 0, unID : unID = unID + 1
	hotspot2 -A/2, -B/2, unID : unID = unID + 1
	hotspot2  A/2 - doorWidth*cos(45), -B/2, unID : unID = unID + 1
	hotspot2  A/2,  -B/2 + doorWidth*cos(45), unID : unID = unID + 1
	hotspot2  A/2,  B/2, unID : unID = unID + 1
	hotspot2 -A/2,  B/2, unID : unID = unID + 1

	poly2_b 5, 1+2+4+64, gs_fill_pen, gs_back_pen,
		-A/2, B/2, 1,
		-A/2, -B/2, 1,
		A/2 - doorWidth*cos(45), -B/2, 1,
		A/2, -B/2 + doorWidth*cos(45), 1001,
		A/2, B/2, 1
endif
if iCabinForm = CABINFORM_CHAMFERCORNER then
	hotspot2 0, 0, unID : unID = unID + 1
	hotspot2 -A/2, -B/2, unID : unID = unID + 1
	hotspot2  A/2 - doorWidth*cos(45), -B/2, unID : unID = unID + 1
	hotspot2  A/2,  -B/2 + doorWidth*cos(45), unID : unID = unID + 1
	hotspot2  A/2,  B/2, unID : unID = unID + 1
	hotspot2 -A/2,  B/2, unID : unID = unID + 1

	poly2_b 5, 1+2+4+64, gs_fill_pen, gs_back_pen,
		-A/2, B/2, 1,
		-A/2, -B/2, 1,
		A/2 - doorWidth*cos(45), -B/2, 1,
		A/2, -B/2 + doorWidth*cos(45), 1,
		A/2, B/2, 1
endif
if iCabinForm = CABINFORM_ROUNDEDPENINSULAR then
	hotspot2 0, 0, unID : unID = unID + 1
	hotspot2 -A/2, B/2, unID : unID = unID + 1
	hotspot2 -A/2, -B/2 + A/2, unID : unID = unID + 1
	hotspot2 0, -B/2, unID : unID = unID + 1
	hotspot2 A/2, -B/2 + A/2, unID : unID = unID + 1
	hotspot2 A/2, B/2, unID : unID = unID + 1

	poly2_b 4, 1+2+4+64, gs_fill_pen, gs_back_pen,
		-A/2, B/2, 1,
		-A/2, -B/2 + A/2, 1,
		A/2, -B/2 + A/2, 1001,
		A/2, B/2, 1
endif
if iCabinForm = CABINFORM_ROUND then
	hotspot2 0, 0, unID : unID = unID + 1
	hotspot2 0, B/2, unID : unID = unID + 1
	hotspot2 -A/2, 0, unID : unID = unID + 1
	hotspot2 0, -B/2, unID : unID = unID + 1
	hotspot2 A/2, 0, unID : unID = unID + 1

	poly2_b 2, 1+2+4+64, gs_fill_pen, gs_back_pen,
		0, 0, 901,
		A/2, 360, 4001
endif


! ==============================================================================
! 1 : 100
! ==============================================================================

trayFlange = 0.05
trayChamferCorner = 0.07

if gs_detlevel_2D_m > 1 then
	drawindex 30
	circle2 xWasteWaterPos * not(iCabinForm = CABINFORM_ROUND), yWasteWaterPos, 0.025

	if iCabinForm = CABINFORM_SQUAREDALCOVE | iCabinForm = CABINFORM_SQUAREDCORNER | iCabinForm = CABINFORM_SQUAREDPENINSULAR | iCabinForm = CABINFORM_SQUARE then
		poly2_b 9, 1+4, gs_fill_pen, gs_back_pen,
			-A/2 + trayFlange, B/2 - trayFlange - trayChamferCorner, 1,
			-A/2 + trayFlange, -B/2 + trayFlange + trayChamferCorner, 1,
			-A/2 + trayFlange + trayChamferCorner, -B/2 + trayFlange, 1001,
			A/2 - trayFlange - trayChamferCorner, -B/2 + trayFlange, 1,
			A/2 - trayFlange, -B/2 + trayFlange + trayChamferCorner, 1001,
			A/2 - trayFlange, B/2 - trayFlange - trayChamferCorner, 1,
			A/2 - trayFlange - trayChamferCorner, B/2 - trayFlange, 1001,
			-A/2 + trayFlange + trayChamferCorner, B/2 - trayFlange, 1,
			-A/2 + trayFlange, B/2 - trayFlange - trayChamferCorner, 1001
	endif
	if iCabinForm = CABINFORM_ROUNDEDCORNER then
		poly2_b 9, 1+4, gs_fill_pen, gs_back_pen,
			-A/2 + trayFlange, B/2 - trayFlange - trayChamferCorner, 1,
			-A/2 + trayFlange, -B/2 + trayFlange + trayChamferCorner, 1,
			-A/2 + trayFlange + trayChamferCorner, -B/2 + trayFlange, 1001,
			A/2 - doorWidth*cos(45), -B/2 + trayFlange, 1,
			A/2 - trayFlange, -B/2 + doorWidth*cos(45), 1001,
			A/2 - trayFlange, B/2 - trayFlange - trayChamferCorner, 1,
			A/2 - trayFlange - trayChamferCorner, B/2 - trayFlange, 1001,
			-A/2 + trayFlange + trayChamferCorner, B/2 - trayFlange, 1,
			-A/2 + trayFlange, B/2 - trayFlange - trayChamferCorner, 1001
	endif
	if iCabinForm = CABINFORM_CHAMFERCORNER then
		poly2_b 11, 1+4, gs_fill_pen, gs_back_pen,
			-A/2 + trayFlange, B/2 - trayFlange - trayChamferCorner, 1,
			-A/2 + trayFlange, -B/2 + trayFlange + trayChamferCorner, 1,
			-A/2 + trayFlange + trayChamferCorner, -B/2 + trayFlange, 1001,
			A/2 - doorWidth*cos(45) - (trayFlange + trayChamferCorner) * tan(22.5), -B/2 + trayFlange, 1,
			A/2 - doorWidth*cos(45) - (trayFlange + trayChamferCorner) * tan(22.5) + trayChamferCorner * sin(45), -B/2 + trayFlange + trayChamferCorner * (1 - cos(45)), 1001,
			A/2 - trayFlange - trayChamferCorner * (1 - cos(45)), -B/2 + doorWidth*cos(45) + (trayFlange + trayChamferCorner) * tan(22.5) - trayChamferCorner * sin(45), 1,
			A/2 - trayFlange, -B/2 + doorWidth*cos(45) + (trayFlange + trayChamferCorner) * tan(22.5), 1001,
			A/2 - trayFlange, B/2 - trayFlange - trayChamferCorner, 1,
			A/2 - trayFlange - trayChamferCorner, B/2 - trayFlange, 1001,
			-A/2 + trayFlange + trayChamferCorner, B/2 - trayFlange, 1,
			-A/2 + trayFlange, B/2 - trayFlange - trayChamferCorner, 1001
	endif
	if iCabinForm = CABINFORM_ROUNDEDPENINSULAR then
		poly2_b 7, 1+4, gs_fill_pen, gs_back_pen,
			-A/2 + trayFlange, B/2 - trayFlange - trayChamferCorner, 1,
			-A/2 + trayFlange, -B/2 + A/2, 1,
			A/2 - trayFlange, -B/2 + A/2, 1001,
			A/2 - trayFlange, B/2 - trayFlange - trayChamferCorner, 1,
			A/2 - trayFlange - trayChamferCorner, B/2 - trayFlange, 1001,
			-A/2 + trayFlange + trayChamferCorner, B/2 - trayFlange, 1,
			-A/2 + trayFlange, B/2 - trayFlange - trayChamferCorner, 1001
	endif
	if iCabinForm = CABINFORM_ROUND then
		poly2_b 2, 1+2+4+64, gs_fill_pen, gs_back_pen,
			0, 0, 901,
			A/2 - trayFlange, 360, 4001
	endif
endif


! ==============================================================================
! 1 : 50
! ==============================================================================

if gs_detlevel_2D_m > 2 then
	circle2 xWasteWaterPos * not(iCabinForm = CABINFORM_ROUND), yWasteWaterPos, 0.025
	drawindex 50

	if gs_tap_type_m <> TAPTYPE_NONE & bShowShowerKit then
		add2 -A / 2, B / 2
		call "tapType_m" parameters     bEnableTapedit 		= 1,
										bSinkTap			= 0,
										xTapPos				= xTapPos,
										yTapPos				= 0,
										GS_HotspotUnIDBegin	= unID,
										gs_tap_type_m		= gs_tap_type_m,
										gs_cont_pen			= gs_cont_pen,
										gs_fill_type		= gs_fill_type,
										gs_fill_pen			= gs_fill_pen,
										gs_back_pen			= gs_back_pen
		del 1
	endif
	drawindex 40
	if iCabinForm = CABINFORM_SQUAREDALCOVE | iCabinForm = CABINFORM_SQUAREDCORNER | iCabinForm = CABINFORM_SQUAREDPENINSULAR | iCabinForm = CABINFORM_SQUARE then
		szi = atn(B/A)
		line2 xWasteWaterPos + wasteWaterR * 3, yWasteWaterPos, A/2 - trayFlange - wasteWaterR * 4, yWasteWaterPos
		line2 xWasteWaterPos, yWasteWaterPos - wasteWaterR * 3, xWasteWaterPos, -B/2 + trayFlange + wasteWaterR * 4
		line2 xWasteWaterPos + wasteWaterR * 3 * cos(szi), yWasteWaterPos - wasteWaterR * 3 * sin(szi), A/2 - trayFlange - wasteWaterR * 4, -B/2 + trayFlange + wasteWaterR * 4
	endif

	if iCabinForm = CABINFORM_ROUNDEDCORNER then
		drawindex 40
		szi = atn(B/A)
		line2 xWasteWaterPos + wasteWaterR * 3, yWasteWaterPos, A/2 - trayFlange - wasteWaterR * 4, yWasteWaterPos
		line2 xWasteWaterPos, yWasteWaterPos - wasteWaterR * 3, xWasteWaterPos, -B/2 + trayFlange + wasteWaterR * 4
		line2 xWasteWaterPos + wasteWaterR * 3 * cos(szi), yWasteWaterPos - wasteWaterR * 3 * sin(szi), A/2 - trayFlange - wasteWaterR * 8, -B/2 + trayFlange + wasteWaterR * 8
	endif

	if iCabinForm = CABINFORM_CHAMFERCORNER then
		drawindex 40
		szi = atn(B/A)
		line2 xWasteWaterPos + wasteWaterR * 3, yWasteWaterPos, A/2 - trayFlange - wasteWaterR * 4, yWasteWaterPos
		line2 xWasteWaterPos, yWasteWaterPos - wasteWaterR * 3, xWasteWaterPos, -B/2 + trayFlange + wasteWaterR * 4
		line2 xWasteWaterPos + wasteWaterR * 3 * cos(szi), yWasteWaterPos - wasteWaterR * 3 * sin(szi), A/2 - trayFlange - wasteWaterR * 12, -B/2 + trayFlange + wasteWaterR * 12
	endif

	if iCabinForm = CABINFORM_ROUNDEDPENINSULAR then
		drawindex 40
		szi = atn(B/A)
		line2 xWasteWaterPos + wasteWaterR * 3, yWasteWaterPos, A/2 - trayFlange - wasteWaterR * 4, yWasteWaterPos
		line2 xWasteWaterPos, yWasteWaterPos - wasteWaterR * 3, xWasteWaterPos, -B/2 + trayFlange + wasteWaterR * 8
		line2 xWasteWaterPos + wasteWaterR * 3 * cos(szi), yWasteWaterPos - wasteWaterR * 3 * sin(szi), A/2 - trayFlange - wasteWaterR * 8, -B/2 + trayFlange + wasteWaterR * 8
	endif

	if iCabinForm = CABINFORM_ROUND then
		drawindex 40

		line2 0, yWasteWaterPos - wasteWaterR * 3, 0, yWasteWaterPos - wasteWaterR * 3 - A/3
		line2 -wasteWaterR * 3 * cos(45), yWasteWaterPos - wasteWaterR * 3 * sin(45),
			  -wasteWaterR * 3 * cos(45) - A/3 * cos(45), yWasteWaterPos - wasteWaterR * 3 * sin(45) - A/3 * cos(45)
		line2 wasteWaterR * 3 * cos(45), yWasteWaterPos - wasteWaterR * 3 * sin(45),
			  wasteWaterR * 3 * cos(45) + A/3 * cos(45), yWasteWaterPos - wasteWaterR * 3 * sin(45) - A/3 * cos(45)
	endif

	if _iGrabPos <> GRAB_NONE then gosub "DrawDetailedGrabBar"
	if bOpenDoor2D then call "showerCabin_m" parameters all
endif


! ==============================================================================
! Minimal Space
! ==============================================================================

reqBMinSpace = 0
if MSFront > EPS then
	call "fa_minimalspace" parameters all MSType = 0, unID = 3000,
							returned_parameters reqBMinSpace,
												MSFillType,
												MSFillPen,
												MSFillBackPen,
												MSContLineType,
												MSContLinePen
endif
if reqBMinSpace <> 0 then
	unID = 3000
	drawindex 10
	FILL MSFillType
	line_type MSContLineType
	pen MSContLinePen

	if iCabinForm = CABINFORM_SQUAREDALCOVE | iCabinForm = CABINFORM_SQUAREDCORNER | iCabinForm = CABINFORM_SQUAREDPENINSULAR | iCabinForm = CABINFORM_SQUARE then
		put -A/2, -B/2, 0,
			A/2, -B/2, 1,
			A/2, -B/2 - MSFront, 1,
			-A/2, -B/2 - MSFront, 1

		hotspot2 -A/2, -B/2 - MSFront, unID : unID = unID + 1
		hotspot2  A/2, -B/2 - MSFront, unID : unID = unID + 1
	endif
	if iCabinForm = CABINFORM_ROUNDEDCORNER then
		put A/2 - doorWidth*cos(45), -B/2, 0,
			1, 0, 800,
			A/2, -B/2 + doorWidth*cos(45), 1001,
			A/2 + MSFront * cos(45), -B/2 + doorWidth*cos(45) - MSFront * sin(45), 1,
			A/2 - doorWidth*cos(45) + MSFront * cos(45), -B/2 - MSFront * sin(45), 1,
			A/2 - doorWidth*cos(45), -B/2, -1

		hotspot2  A/2 + MSFront * cos(45), -B/2 + doorWidth*cos(45) - MSFront * sin(45), unID : unID = unID + 1
		hotspot2  A/2 - doorWidth*cos(45) + MSFront * cos(45), -B/2 - MSFront * sin(45), unID : unID = unID + 1
	endif
	if iCabinForm = CABINFORM_CHAMFERCORNER then
		put A/2 - doorWidth*cos(45), -B/2, 0,
			A/2, -B/2 + doorWidth*cos(45), 1,
			A/2 + MSFront * cos(45), -B/2 + doorWidth*cos(45) - MSFront * sin(45), 1,
			A/2 - doorWidth*cos(45) + MSFront * cos(45), -B/2 - MSFront * sin(45), 1,
			A/2 - doorWidth*cos(45), -B/2, -1

		hotspot2  A/2 + MSFront * cos(45), -B/2 + doorWidth*cos(45) - MSFront * sin(45), unID : unID = unID + 1
		hotspot2  A/2 - doorWidth*cos(45) + MSFront * cos(45), -B/2 - MSFront * sin(45), unID : unID = unID + 1
	endif
	if iCabinForm = CABINFORM_ROUNDEDPENINSULAR | iCabinForm = CABINFORM_ROUND then
		put  - doorWidth/2, -B/2 + A/2 - A/2 * cos(arcAngle/2), 0,
			doorWidth/2, -B/2 + A/2 - A/2 * cos(arcAngle/2), 1,
			doorWidth/2, -B/2 + A/2 - A/2 * cos(arcAngle/2) - MSFront, 1,
			-doorWidth/2, -B/2 + A/2 - A/2 * cos(arcAngle/2) - MSFront, 1

		hotspot2 -doorWidth/2, -B/2 + A/2 - A/2 * cos(arcAngle/2) - MSFront, unID : unID = unID + 1
		hotspot2 doorWidth/2, -B/2 + A/2 - A/2 * cos(arcAngle/2) - MSFront, unID : unID = unID + 1
	endif

	poly2_b nsp/3, 1+2+4+64, MSFillPen, MSFillBackPen,
			get(nsp)
endif


! ==============================================================================
! MEP
! ==============================================================================

line_type 1

if bShowMEP then

	DrawingNum = 1
	PEN gs_cont_pen

				! --- OTHER VIEWS --- !

	ROT2 -SYMB_ROTANGLE * (DrawingNum > 1 AND NOT(SYMB_MIRRORED))+SYMB_ROTANGLE * (DrawingNum > 1 AND SYMB_MIRRORED)

	IF DrawingNum = 2 THEN PROJECT2 -3, 90, 2	! Bottom
	IF DrawingNum = 3 THEN PROJECT2 4, 270, 2	! Front
	IF DrawingNum = 4 THEN PROJECT2 4, 90, 2	! Back
	IF DrawingNum = 5 THEN PROJECT2 4, 180*(SYMB_MIRRORED), 2		! Right
	IF DrawingNum = 6 THEN PROJECT2 4, 180*NOT(SYMB_MIRRORED), 2	! Left


	ConEdit_1 = 12
	ConEdit_2 = 12
				! --- CONNECTIONS --- !

	add2 -A/2 + xTapPos, 0

	CALL "MEP_m_ConnectionsACL_4" PARAMETERS SetProgram = SetProgram,
		ui_current_con = ui_current_con,
		MEP_NumberConnections = MEP_NumberConnections,
		MEP_NumConnectionData = gs_Connections,
		gs_AddConnections = gs_AddConnections,
		DrawingNum = DrawingNum,
		MEP_InsShow = 0,
		MEP_cline_show = 0,
		gs_cont_pen = gs_cont_pen,
		gs_fill_type=gs_fill_type,
		gs_fill_pen=gs_fill_pen,
		gs_back_pen=gs_back_pen,
		ConPosX_1=ConPosX_1, ConPosY_1=ConPosY_1, ConLength_1=ConLength_1, ConShow_1 = 1, ConEdit_1 = ConEdit_1,
		ConPosX_2=ConPosX_2, ConPosY_2=ConPosY_2, ConLength_2=ConLength_2, ConShow_2 = 1, ConEdit_2 = ConEdit_2,
		ConShow_3 = 0, ConHotspotShow_3 = 0
	DEL 1

	CALL "MEP_m_ConnectionsACL_4" PARAMETERS SetProgram = SetProgram,
		ui_current_con = ui_current_con,
		MEP_NumberConnections = MEP_NumberConnections,
		MEP_NumConnectionData = gs_Connections,
		gs_AddConnections = gs_AddConnections,
		DrawingNum = DrawingNum,
		MEP_InsShow = 0,
		MEP_cline_show = 0,
		gs_cont_pen = gs_cont_pen,
		gs_fill_type=gs_fill_type,
		gs_fill_pen=gs_fill_pen,
		gs_back_pen=gs_back_pen,
		ConShow_1 = 0, ConHotspotShow_1 = 0,
		ConShow_2 = 0, ConHotspotShow_2 = 0,
		ConPosX_3=ConPosX_3, ConPosY_3=ConPosY_3, ConLength_3=ConLength_3, ConShow_3 = 0, ConEdit_3 = 0
	del 1

ENDIF


end


! ==============================================================================
! Subrutines
! ==============================================================================

!--- Grab Bar ---

"DrawDetailedGrabBar":

if bGrabBar2D then
	grabBarR = 0.011
	grabBarL = 0.416
	if _iGrabPos = GRAB_WALL_LEFT then 
		add2 -A/2 + 5*grabBarR, -grabBarL/2
	else
		add2 -grabBarL/2, A/2-5*grabBarR
		rot2 -90
	endif

	poly2_b 13, 1+2+4+64, gs_fill_pen, gs_back_pen,
		0, 0, 1,
		0, grabBarL, 1,
		-grabBarR, grabBarL, 1,
		-grabBarR, grabBarL - 0.035, 1,
		-5*grabBarR, grabBarL - 0.035, 1,
		-5*grabBarR, grabBarL - 0.035 - 0.053, 1,
		-grabBarR, grabBarL - 0.035 - 0.053, 1,
		-grabBarR, 0.035 + 0.053, 1,
		-5*grabBarR, 0.035 + 0.053, 1,
		-5*grabBarR, 0.035, 1,
		-grabBarR, 0.035, 1,
		-grabBarR, 0, 1,
		0, 0, -1
	if _iGrabPos = GRAB_WALL_LEFT then
		del 1
	else
		del 2
	endif
endif
return
