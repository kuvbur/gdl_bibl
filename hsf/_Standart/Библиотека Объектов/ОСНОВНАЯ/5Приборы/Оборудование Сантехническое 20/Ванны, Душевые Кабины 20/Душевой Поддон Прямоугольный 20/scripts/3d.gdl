

if gs_detlevel_3D_m = 0 then end
if not(gs_shadow) then SHADOW OFF

! -----------------------------------------------------------------------------
! Styles
! -----------------------------------------------------------------------------

ress = gs_resol / 360 * 90
if ress - int(ress) < 0.5 then
	ress = int(ress)
	beta = 90 / ress
else
	ress = int(ress) + 1
	beta = 90 / ress
endif

pen gs_cont_pen
gosub iStyle

! -----------------------------------------------------------------------------
! MEP Connections
! -----------------------------------------------------------------------------
if bShowMEP then
	gosub "mepconnection"
endif

end

! =============================================================================
! SUBRUTINES
!
! =============================================================================



! -----------------------------------------------------------------------------
! Shower Tray Rectangular
! -----------------------------------------------------------------------------

1:

	unID = 1
	hotspot 0, 0, 0, unID : unID = unID + 1
	hotspot A, 0, 0, unID : unID = unID + 1
	hotspot A, B, 0, unID : unID = unID + 1
	hotspot 0, B, 0, unID : unID = unID + 1
	hotspot A/2, B/2, 0, unID : unID = unID + 1

	hotspot 0, 0, ZZYZX, unID : unID = unID + 1
	hotspot A, 0, ZZYZX, unID : unID = unID + 1
	hotspot A, B, ZZYZX, unID : unID = unID + 1
	hotspot 0, B, ZZYZX, unID : unID = unID + 1
	hotspot A/2, B/2, ZZYZX, unID : unID = unID + 1



	if GLOB_CONTEXT > 40 and GLOB_CONTEXT < 50 then
		block A, B, zzyzx
	else
		addx a / 2

		if NOT(gs_detlevel_3D_m = 3) then
			add -a / 2 + drainPosX, drainPosY, zzyzx / 3       !! Drain
			material drainmat
			cylind 0.005,0.025
			del 1
		endif

		material gs_tub_mat
	
		bPointsForTube = 1
		gosub "buffer Points for Rect Tray"
	
		mulz zzyzx * 2 / 3 / 0.1
		addz 0.05
			tube 13, 4 + ress * 4 + 3 + 4, 1 + 2,
				0.037,     0.004,     1,
				0.0,     0.1,     1,
				0.006495,     0.09924,     1,
				0.014394,     0.095557,     1,
				0.020557,     0.089394,     1,
				0.02424,     0.081495,     1,
				0.025,     0.075,     1,
				0.025,     0.05,     1,
				0.026519,     0.03701,     1,
				0.033886,     0.021212,     1,
				0.046212,     0.008886,     1,
				0.06201,     0.001519,     1,
				0.075,    0.0,     1,
			
				-a / 2 + showerBorderWidth + showerBorderRadOuter + showerBorderRadOuter * cos(alpha - beta), showerBorderWidth + showerBorderRadOuter + showerBorderRadOuter * sin(alpha - beta), 0, 0,
				-a / 2 + showerBorderWidth + showerBorderRadOuter, showerBorderWidth, 0, 0,
				a / 2 - showerBorderWidth - showerBorderRadOuter, showerBorderWidth, 0, 0,
				get (ress * 4),
				a / 2 - showerBorderWidth, showerBorderWidth + showerBorderRadOuter, 0, 0,
				a / 2 - showerBorderWidth, b - showerBorderWidth - showerBorderRadOuter, 0, 0,
				get (ress * 4),
				a / 2 - showerBorderWidth - showerBorderRadOuter, b - showerBorderWidth, 0, 0,
				-a / 2 + showerBorderWidth + showerBorderRadOuter, b - showerBorderWidth, 0, 0,
				get (ress * 4),
				-a / 2 + showerBorderWidth, b - showerBorderWidth - showerBorderRadOuter, 0, 0,
				-a / 2 + showerBorderWidth, showerBorderWidth + showerBorderRadOuter, 0, 0,
				get (ress * 4),
				-a / 2 + showerBorderWidth + showerBorderRadOuter, showerBorderWidth, 0, 0,
				a / 2 - showerBorderWidth - showerBorderRadOuter, showerBorderWidth, 0, 0
		del 1
	
		addz 0.15
			bPointsForTube = 0
			gosub "buffer Points for Rect Tray"
	
			poly_ 5 + 11 + ress * 4,
				a / 2, 0, 1,
				a / 2, b, 1,
				-a / 2, b, 1,
				-a / 2, 0, 1,
				a / 2, 0, -1,
		
				-a / 2 + showerBorderWidth + showerBorderRadOuter, showerBorderWidth, 1,
				a / 2 - showerBorderWidth - showerBorderRadOuter, showerBorderWidth, 1,
				get (ress * 3),
				a / 2 - showerBorderWidth, showerBorderWidth + showerBorderRadOuter, 1,
				a / 2 - showerBorderWidth, b - showerBorderWidth - showerBorderRadOuter, 1,
				get (ress * 3),
				a / 2 - showerBorderWidth - showerBorderRadOuter, b - showerBorderWidth, 1,
				-a / 2 + showerBorderWidth + showerBorderRadOuter, b - showerBorderWidth, 1,
				get (ress * 3),
				-a / 2 + showerBorderWidth, b - showerBorderWidth - showerBorderRadOuter, 1,
				-a / 2 + showerBorderWidth, showerBorderWidth + showerBorderRadOuter, 1,
				get (ress * 3),
				-a / 2 + showerBorderWidth + showerBorderRadOuter, showerBorderWidth, 1,
				a / 2 - showerBorderWidth - showerBorderRadOuter, showerBorderWidth, 1,
				-a / 2 + showerBorderWidth + showerBorderRadOuter, showerBorderWidth, -1
		del 1
		del 1

		addz zzyzx / 3
			bPointsForTube = 0
			gosub "buffer Points for Rect Tray"
	
			poly_ 11 + ress * 4,
				-a / 2 + showerBorderWidth + showerBorderRadOuter, showerBorderWidth, 1,
				a / 2 - showerBorderWidth - showerBorderRadOuter, showerBorderWidth, 1,
				get (ress * 3),
				a / 2 - showerBorderWidth, showerBorderWidth + showerBorderRadOuter, 1,
				a / 2 - showerBorderWidth, b - showerBorderWidth - showerBorderRadOuter, 1,
				get (ress * 3),
				a / 2 - showerBorderWidth - showerBorderRadOuter, b - showerBorderWidth, 1,
				-a / 2 + showerBorderWidth + showerBorderRadOuter, b - showerBorderWidth, 1,
				get (ress * 3),
				-a / 2 + showerBorderWidth, b - showerBorderWidth - showerBorderRadOuter, 1,
				-a / 2 + showerBorderWidth, showerBorderWidth + showerBorderRadOuter, 1,
				get (ress * 3),
				-a / 2 + showerBorderWidth + showerBorderRadOuter, showerBorderWidth, 1,
				a / 2 - showerBorderWidth - showerBorderRadOuter, showerBorderWidth, 1,
				-a / 2 + showerBorderWidth + showerBorderRadOuter, showerBorderWidth, -1
		del 1
	
		ruled 5, 1 + 4 + 16 + 32 + 64,
			a / 2, 0, 0,
			a / 2, b, 0,
			-a / 2, b, 0,
			-a / 2, 0, 0,
			a / 2, 0, 0,
	
			a / 2, 0, zzyzx,
			a / 2, b, zzyzx,
			-a / 2, b, zzyzx,
			-a / 2, 0, zzyzx,
			a / 2, 0, zzyzx

		del 1
	endif
return

! -----------------------------------------------------------------------------
! Shower Tray Corner
! -----------------------------------------------------------------------------

2:
	add a, 0, 0
	rotz 90
	unID = 1
	hotspot 0, 0, 0, unID : unID = unID + 1
	hotspot 0, 0, zzyzx, unID : unID = unID + 1
	hotspot 0, a, 0, unID : unID = unID + 1
	hotspot 0, a, zzyzx, unID : unID = unID + 1
	hotspot b, a, 0, unID : unID = unID + 1
	hotspot b, a, zzyzx, unID : unID = unID + 1
	hotspot ysl, 0, 0, unID : unID = unID + 1
	hotspot ysl, 0, zzyzx, unID : unID = unID + 1
	hotspot b, a-xsl, 0, unID : unID = unID + 1
	hotspot b, a-xsl, zzyzx, unID : unID = unID + 1

	if gs_detlevel_3D_m = 3 then

		resol gs_resol

		material sdmat
		extrude 6, 0, 0, zzyzx, 1+16+32,
			0, 0, 0,
			ysl, 0, 0,
			b, a-xsl, 0,
			b, a, 0,
			0, a, 0,
			0, 0, -1

		addz zzyzx
		material gs_tub_mat

		poly_ 12,
			0, 0, 1,
			ysl, 0, 1,
			b, a-xsl, 1,
			b, a, 1,
			0, a, 1,
			0, 0, -1,
			0.05, a-0.05, 1,
			0.05, 0.05, 1,
			ysl-TAN((ATN((a-xsl)/(b-ysl)))/2)*0.05, 0.05, 1,
			b-0.05, a-xsl+TAN((ATN((b-ysl)/(a-xsl)))/2)*0.05, 1,
			b-0.05, a-0.05, 1,
			0.05, a-0.05, -1

		addz -dep
		extrude 6, 0, 0, dep, 1+16,
			0.05, a-0.05, 1,
			0.05, 0.05, 1,
			ysl-TAN((ATN((a-xsl)/(b-ysl)))/2)*0.05, 0.05, 1,
			b-0.05, a-xsl+TAN((ATN((b-ysl)/(a-xsl)))/2)*0.05, 1,
			b-0.05, a-0.05, 1,
			0.05, a-0.05, -1
		del 2
	else
		if gs_detlevel_3D_m = 1 then gs_resol = 8		!! Simple Model

		resol gs_resol
		material sdmat
		extrude 6, 0, 0, zzyzx-0.01, 1+16+32,
			0, 0, 0,
			ysl, 0, 0,
			b, a-xsl, 0,
			b, a, 0,
			0, a, 0,
			0, 0, -1

		addz zzyzx-0.01
		material gs_tub_mat

		prism_ 15, 0.01,
			0, 0, 15,
			ysl, 0, 15,
			b, a-xsl, 15,
			b, a, 15,
			0, a, 15,
			0, 0, -1,
			0.07, a-0.05, 12,
			0.05, a-0.07, 12,
			0.05, 0.07, 12,
			0.07, 0.05, 12,
			ysl-TAN((ATN((a-xsl)/(b-ysl)))/2)*0.05, 0.05, 12,
			b-0.05, a-xsl+TAN((ATN((b-ysl)/(a-xsl)))/2)*0.05, 12,
			b-0.05, a-0.07, 12,
			b-0.07, a-0.05, 12,
			0.07, a-0.05, -1

		addz -dep+0.01
		extrude 9, 0, 0, dep-0.01, 1+16,
			0.07, a-0.05, 1,
			0.05, a-0.07, 1,
			0.05, 0.07, 1,
			0.07, 0.05, 1,
			ysl-TAN((ATN((a-xsl)/(b-ysl)))/2)*0.05, 0.05, 1,
			b-0.05, a-xsl+TAN((ATN((b-ysl)/(a-xsl)))/2)*0.05, 1,
			b-0.05, a-0.07, 1,
			b-0.07, a-0.05, 1,
			0.07, a-0.05, -1

		add b/2, a/2, 0
		material drainmat
		cylind 0.005, 0.025
		del 3
	endif

	del 2

return

! -----------------------------------------------------------------------------
! Shower Tray Rounded
! -----------------------------------------------------------------------------

3:

	unID = 1
	hotspot 0, 0, 0, unID : unID = unID + 1
	hotspot 0, 0, zzyzx, unID : unID = unID + 1
	hotspot a, 0, 0, unID : unID = unID + 1
	hotspot a, 0, zzyzx, unID : unID = unID + 1
	hotspot 0, b, 0, unID : unID = unID + 1
	hotspot 0, b, zzyzx, unID : unID = unID + 1

	if gs_detlevel_3D_m = 3 then
		resol 24

		mulx a/0.90
		muly b/0.90
		mulz zzyzx/0.15

		addz 0.15
		material gs_tub_mat

		poly_ 11,
			0,0,1,
			0,0.90,1,
			1,0,801,
			0.90,0,1001,
			0.90,0,1,
			0,0,-1,
			0.025,0.025,1,
			0.875,0.025,1,
			0,1,801,
			0.025,0.875,1001,
			0.025,0.025,-1
		del 1

		extrude 6, 0, 0, 0.15, 1+16+32,
			0,0,0,
			0,0.90,1,
			1,0,801,
			0.90,0,1000,
			0.90,0,0,
			0,0,-1

		addz 0.05
		extrude 5, 0, 0, 0.10, 1+16+32,
			0.025,0.025,1,
			0.875,0.025,1,
			0,1,801,
			0.025,0.875,1001,
			0.025,0.025,-1

		del 4
	else
		addx a / 2

		if NOT(gs_detlevel_3D_m = 3) then
			add -a / 2 + drainPosX, drainPosY, zzyzx / 3       !! Drain
			material drainmat
			cylind 0.005,0.025
			del 1
		endif

		material gs_tub_mat
	
		bPointsForTube = 1
		gosub "buffer Points for Round Tray"
	
		mulz zzyzx * 2 / 3 / 0.1
		addz 0.05
			tube 13, ress * 4 + 8, 1 + 2,
				0.037,     0.004,     1,
				0.0,     0.1,     1,
				0.006495,     0.09924,     1,
				0.014394,     0.095557,     1,
				0.020557,     0.089394,     1,
				0.02424,     0.081495,     1,
				0.025,     0.075,     1,
				0.025,     0.05,     1,
				0.026519,     0.03701,     1,
				0.033886,     0.021212,     1,
				0.046212,     0.008886,     1,
				0.06201,     0.001519,     1,
				0.075,    0.0,     1,
			
				-a / 2 + showerBorderWidth + showerBorderRadOuter + showerBorderRadOuter * cos(alpha - beta), showerBorderWidth + showerBorderRadOuter + showerBorderRadOuter * sin(alpha - beta), 0, 0,
				-a / 2 + showerBorderWidth + showerBorderRadOuter, showerBorderWidth, 0, 0,
				a / 2 - showerBorderWidth - showerBorderRadOuter, showerBorderWidth, 0, 0,
				get (ress * 4),
				a / 2 - showerBorderWidth, showerBorderWidth + showerBorderRadOuter, 0, 0,
				get (ress * 4),
				get (ress * 4),
				-a / 2 + showerBorderWidth, b - showerBorderWidth - showerBorderRadOuter, 0, 0,
				-a / 2 + showerBorderWidth, showerBorderWidth + showerBorderRadOuter, 0, 0,
				get (ress * 4),
				-a / 2 + showerBorderWidth + showerBorderRadOuter, showerBorderWidth, 0, 0,
				a / 2 - showerBorderWidth - showerBorderRadOuter, showerBorderWidth, 0, 0
		del 1
	
		addz 0.15
			bPointsForRuled = 0
			gosub "buffer Points for Round Tray 2"

			bPointsForTube = 0
			gosub "buffer Points for Round Tray"
	
			poly_ 6 + 8 + ress * 5,
				a / 2, 0, 1,
				a / 2, showerBorderWidth + showerBorderRadOuter, 1,
				get (ress * 3),
				-a / 2 + showerBorderWidth + showerBorderRadOuter, b, 1,
				-a / 2, b, 1,
				-a / 2, 0, 1,
				a / 2, 0, -1,
		
				-a / 2 + showerBorderWidth + showerBorderRadOuter, showerBorderWidth, 1,
				a / 2 - showerBorderWidth - showerBorderRadOuter, showerBorderWidth, 1,
				get (ress * 3),
				a / 2 - showerBorderWidth, showerBorderWidth + showerBorderRadOuter, 1,
				get (ress * 3),
				get (ress * 3),
				-a / 2 + showerBorderWidth, b - showerBorderWidth - showerBorderRadOuter, 1,
				-a / 2 + showerBorderWidth, showerBorderWidth + showerBorderRadOuter, 1,
				get (ress * 3),
				-a / 2 + showerBorderWidth + showerBorderRadOuter, showerBorderWidth, 1,
				a / 2 - showerBorderWidth - showerBorderRadOuter, showerBorderWidth, 1,
				-a / 2 + showerBorderWidth + showerBorderRadOuter, showerBorderWidth, -1
		del 1
		del 1
	
		addz zzyzx / 3
			bPointsForTube = 0
			gosub "buffer Points for Round Tray"
	
			poly_ 8 + ress * 4,
				-a / 2 + showerBorderWidth + showerBorderRadOuter, showerBorderWidth, 1,
				a / 2 - showerBorderWidth - showerBorderRadOuter, showerBorderWidth, 1,
				get (ress * 3),
				a / 2 - showerBorderWidth, showerBorderWidth + showerBorderRadOuter, 1,
				get (ress * 3),
				get (ress * 3),
				-a / 2 + showerBorderWidth, b - showerBorderWidth - showerBorderRadOuter, 1,
				-a / 2 + showerBorderWidth, showerBorderWidth + showerBorderRadOuter, 1,
				get (ress * 3),
				-a / 2 + showerBorderWidth + showerBorderRadOuter, showerBorderWidth, 1,
				a / 2 - showerBorderWidth - showerBorderRadOuter, showerBorderWidth, 1,
				-a / 2 + showerBorderWidth + showerBorderRadOuter, showerBorderWidth, -1
		del 1


		bPointsForRuled = 0
		gosub "buffer Points for Round Tray 2"

		bPointsForRuled = 1
		gosub "buffer Points for Round Tray 2"

		ruled 6 + ress, 1 + 4 + 16 + 32,
			a / 2, 0, 0,
			a / 2, showerBorderWidth + showerBorderRadOuter, 1,
			get (ress * 3),
			-a / 2 + showerBorderWidth + showerBorderRadOuter, b, 1,
			-a / 2, b, 0,
			-a / 2, 0, 0,
			a / 2, 0, 0,

			a / 2, 0, zzyzx,
			a / 2, showerBorderWidth + showerBorderRadOuter, zzyzx,
			get (ress * 3),
			-a / 2 + showerBorderWidth + showerBorderRadOuter, b, zzyzx,
			-a / 2, b, zzyzx,
			-a / 2, 0, zzyzx,
			a / 2, 0, zzyzx

		del 1
	endif

return

! -----------------------------------------------------------------------------
! MEP Connections
! -----------------------------------------------------------------------------

"mepconnection":

	if gs_detlevel_3D_m = 1 OR gs_detlevel_3D_m = 3 then resol 8
	if gs_detlevel_3D_m = 2 then resol 24

	if useSysMat then
		gs_tub_mat	= sMat
		sdmat		= sMat
		drainmat	= sMat
		gs_con_mat	= sMat
	endif

	call "MEP_m_ConnectionsACL_4" parameters SetProgram = SetProgram,
		ui_current_con = ui_current_con,
		MEP_NumberConnections = MEP_NumberConnections,
		MEP_NumConnectionData = gs_Connections,
		gs_AddConnections = gs_AddConnections,
		cShow3D = 1,
		gs_ConMat = gs_con_mat,
		MEP_InsShow = 0,
		MEP_cline_show_3D = 0,
		gs_cont_pen = gs_cont_pen,
		ConPosX_1=ConPosX_1, ConPosY_1=ConPosY_1, ConPosZ_1=ConPosZ_1, ConLength_1=ConLength_1, ConEdit_1 = 1

return


"buffer Points for Rect Tray":

	ress = gs_resol / 360 * 90
	if ress - int(ress) < 0.5 then
		ress = int(ress)
		beta = 90 / ress
	else
		ress = int(ress) + 1
		beta = 90 / ress
	endif
	
	if bPointsForTube then
		alpha = -90
		for ii = 1 to ress
			put a / 2 - showerBorderWidth - showerBorderRadOuter + showerBorderRadOuter * cos(alpha), showerBorderWidth + showerBorderRadOuter + showerBorderRadOuter * sin(alpha), 0, 0
			alpha = alpha + beta
		next ii
		
		alpha = 0
		for ii = 1 to ress
			put a / 2 - showerBorderWidth - showerBorderRadOuter + showerBorderRadOuter * cos(alpha), b - showerBorderWidth - showerBorderRadOuter + showerBorderRadOuter * sin(alpha), 0, 0
			alpha = alpha + beta
		next ii
		
		alpha = 90
		for ii = 1 to ress
			put -a / 2 + showerBorderWidth + showerBorderRadOuter + showerBorderRadOuter * cos(alpha), b - showerBorderWidth - showerBorderRadOuter + showerBorderRadOuter * sin(alpha), 0, 0
			alpha = alpha + beta
		next ii
		
		alpha = 180
		for ii = 1 to ress
			put -a / 2 + showerBorderWidth + showerBorderRadOuter + showerBorderRadOuter * cos(alpha), showerBorderWidth + showerBorderRadOuter + showerBorderRadOuter * sin(alpha), 0, 0
			alpha = alpha + beta
		next ii
	else
		alpha = -90
		for ii = 1 to ress
			put a / 2 - showerBorderWidth - showerBorderRadOuter + showerBorderRadOuter * cos(alpha), showerBorderWidth + showerBorderRadOuter + showerBorderRadOuter * sin(alpha), 1
			alpha = alpha + beta
		next ii
		
		alpha = 0
		for ii = 1 to ress
			put a / 2 - showerBorderWidth - showerBorderRadOuter + showerBorderRadOuter * cos(alpha), b - showerBorderWidth - showerBorderRadOuter + showerBorderRadOuter * sin(alpha), 1
			alpha = alpha + beta
		next ii
		
		alpha = 90
		for ii = 1 to ress
			put -a / 2 + showerBorderWidth + showerBorderRadOuter + showerBorderRadOuter * cos(alpha), b - showerBorderWidth - showerBorderRadOuter + showerBorderRadOuter * sin(alpha), 1
			alpha = alpha + beta
		next ii
		
		alpha = 180
		for ii = 1 to ress
			put -a / 2 + showerBorderWidth + showerBorderRadOuter + showerBorderRadOuter * cos(alpha), showerBorderWidth + showerBorderRadOuter + showerBorderRadOuter * sin(alpha), 1
			alpha = alpha + beta
		next ii
	endif

return


"buffer Points for Round Tray":

	if bPointsForTube then
		alpha = -90
		for ii = 1 to ress
			put a / 2 - showerBorderWidth - showerBorderRadOuter + showerBorderRadOuter * cos(alpha), showerBorderWidth + showerBorderRadOuter + showerBorderRadOuter * sin(alpha), 0, 0
			alpha = alpha + beta
		next ii
		
		alpha = 0
		for ii = 1 to ress
			put -a / 2 + showerBorderWidth + showerBorderRadOuter + showerBorderRadRound1 * cos(alpha), showerBorderWidth + showerBorderRadOuter + showerBorderRadRound2 * sin(alpha), 0, 0
			alpha = alpha + beta
		next ii
		
		alpha = 90
		for ii = 1 to ress
			put -a / 2 + showerBorderWidth + showerBorderRadOuter + showerBorderRadOuter * cos(alpha), b - showerBorderWidth - showerBorderRadOuter + showerBorderRadOuter * sin(alpha), 0, 0
			alpha = alpha + beta
		next ii
		
		alpha = 180
		for ii = 1 to ress
			put -a / 2 + showerBorderWidth + showerBorderRadOuter + showerBorderRadOuter * cos(alpha), showerBorderWidth + showerBorderRadOuter + showerBorderRadOuter * sin(alpha), 0, 0
			alpha = alpha + beta
		next ii
	else
		alpha = -90
		for ii = 1 to ress
			put a / 2 - showerBorderWidth - showerBorderRadOuter + showerBorderRadOuter * cos(alpha), showerBorderWidth + showerBorderRadOuter + showerBorderRadOuter * sin(alpha), 1
			alpha = alpha + beta
		next ii
		
		alpha = 0
		for ii = 1 to ress
			put -a / 2 + showerBorderWidth + showerBorderRadOuter + showerBorderRadRound1 * cos(alpha), showerBorderWidth + showerBorderRadOuter + showerBorderRadRound2 * sin(alpha), 1
			alpha = alpha + beta
		next ii
		
		alpha = 90
		for ii = 1 to ress
			put -a / 2 + showerBorderWidth + showerBorderRadOuter + showerBorderRadOuter * cos(alpha), b - showerBorderWidth - showerBorderRadOuter + showerBorderRadOuter * sin(alpha), 1
			alpha = alpha + beta
		next ii
		
		alpha = 180
		for ii = 1 to ress
			put -a / 2 + showerBorderWidth + showerBorderRadOuter + showerBorderRadOuter * cos(alpha), showerBorderWidth + showerBorderRadOuter + showerBorderRadOuter * sin(alpha), 1
			alpha = alpha + beta
		next ii
	endif

return

"buffer Points for Round Tray 2":

	alpha = 0
	for ii = 1 to ress
		put		-a / 2 + showerBorderWidth + showerBorderRadOuter + (showerBorderRadRound1 + showerBorderWidth) * cos(alpha),
				showerBorderWidth + showerBorderRadOuter + (showerBorderRadRound2 + showerBorderWidth) * sin(alpha), not(bPointsForRuled) + zzyzx * bPointsForRuled

		alpha = alpha + beta
	next ii

return
