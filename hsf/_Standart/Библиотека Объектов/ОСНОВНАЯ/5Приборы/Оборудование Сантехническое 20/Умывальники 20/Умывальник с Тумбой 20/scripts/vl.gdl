
! ==============================================================================
! Basin Cabinet
! ==============================================================================


call "FM_types" parameters all

values "gs_detlevel_3D" st_detail3D		!`Detailed`,`Simple`,`Off`
values "gs_detlevel_3D_m" 2, 1, 0

if GLOB_MODPAR_NAME = "gs_detlevel_3D" OR gs_detlevel_3D_m = -1 then
	gs_detlevel_3D_m = 2	! Detailed
	if gs_detlevel_3D = st_detail3D[3] then gs_detlevel_3D_m = 0
	if gs_detlevel_3D = st_detail3D[2] then gs_detlevel_3D_m = 1
	parameters gs_detlevel_3D_m = gs_detlevel_3D_m
else
	gs_detlevel_3D = st_detail3D[1]
	if gs_detlevel_3D_m = 0 then gs_detlevel_3D = st_detail3D[3]
	if gs_detlevel_3D_m = 1 then gs_detlevel_3D = st_detail3D[2]
	parameters gs_detlevel_3D = gs_detlevel_3D
endif

call "2dDetailLevel" parameters	all enable2dDetLevels	= 2 + 4 + 8 + 16

VALUES "numDrawers" 	1, 2

if not(bDrawer) then
	hideparameter "numDrawers", "DrawerMat"
	lock "numDrawers", "DrawerMat"
endif


VALUES "gs_door_type" 	stDoorTypeValues
values "gs_door_type_m" 1, 2, 3, 11, 12, 9, 4, 5, 6, 7, 10, 0

if GLOB_MODPAR_NAME = "gs_door_type" then
	gs_door_type_m = 1
	if gs_door_type = stDoorTypeValues[2] 		then gs_door_type_m = 2
	if gs_door_type = stDoorTypeValues[3] 		then gs_door_type_m = 3
	if gs_door_type = stDoorTypeValues[4] 		then gs_door_type_m = 11
	if gs_door_type = stDoorTypeValues[5] 		then gs_door_type_m = 12
	if gs_door_type = stDoorTypeValues[6] 		then gs_door_type_m = 9
	if gs_door_type = stDoorTypeValues[7] 		then gs_door_type_m = 4
	if gs_door_type = stDoorTypeValues[8] 		then gs_door_type_m = 5
	if gs_door_type = stDoorTypeValues[9] 		then gs_door_type_m = 6
	if gs_door_type = stDoorTypeValues[10] 		then gs_door_type_m = 7
	if gs_door_type = stDoorTypeValues[11]		then gs_door_type_m = 10
	if gs_door_type = stDoorTypeValues[12]		then gs_door_type_m = 0
	parameters gs_door_type_m = gs_door_type_m
else
	gs_door_type=`Стиль 1`
	if gs_door_type_m = 2	then gs_door_type = stDoorTypeValues[2]
	if gs_door_type_m = 3	then gs_door_type = stDoorTypeValues[3]
	if gs_door_type_m = 11	then gs_door_type = stDoorTypeValues[4]
	if gs_door_type_m = 12	then gs_door_type = stDoorTypeValues[5]
	if gs_door_type_m = 9	then gs_door_type = stDoorTypeValues[6]
	if gs_door_type_m = 4	then gs_door_type = stDoorTypeValues[7]
	if gs_door_type_m = 5	then gs_door_type = stDoorTypeValues[8]
	if gs_door_type_m = 6	then gs_door_type = stDoorTypeValues[9]
	if gs_door_type_m = 7	then gs_door_type = stDoorTypeValues[10]
	if gs_door_type_m = 10	then gs_door_type = stDoorTypeValues[11]
	if gs_door_type_m = 0	then gs_door_type = stDoorTypeValues[12]
	parameters gs_door_type = gs_door_type
endif

values "stEndPanelType" stEndPanelTypeValues
values "iEndPanelType" 1, 2, 4, 7, 9, 99

if GLOB_MODPAR_NAME = "stEndPanelType" then
	iEndPanelType = 1
	if stEndPanelType = stEndPanelTypeValues[2] then iEndPanelType = 2
	if stEndPanelType = stEndPanelTypeValues[3] then iEndPanelType = 4
	if stEndPanelType = stEndPanelTypeValues[4] then iEndPanelType = 7
	if stEndPanelType = stEndPanelTypeValues[5] then iEndPanelType = 9
	if stEndPanelType = stEndPanelTypeValues[6] then iEndPanelType = 99
	parameters iEndPanelType = iEndPanelType
else
	stEndPanelType = stEndPanelTypeValues[1]
	if iEndPanelType = 2 then stEndPanelType = stEndPanelTypeValues[2]
	if iEndPanelType = 4 then stEndPanelType = stEndPanelTypeValues[3]
	if iEndPanelType = 7 then stEndPanelType = stEndPanelTypeValues[4]
	if iEndPanelType = 9 then stEndPanelType = stEndPanelTypeValues[5]
	if iEndPanelType = 99 then stEndPanelType = stEndPanelTypeValues[6]
	parameters stEndPanelType = stEndPanelType
endif

VALUES "gs_knob_type" 	stKnobTypeValues
values "gs_knob_type_m" 0, 1, 2, 3, 4, 5, 6, 7, 8

if GLOB_MODPAR_NAME = "gs_knob_type" then
	gs_knob_type_m = 0
	for i = 1 to 8
		if gs_knob_type = stKnobTypeValues[i] then
			gs_knob_type_m = i
			i = 8
		endif
	next i
	parameters gs_knob_type_m = gs_knob_type_m
else
	gs_knob_type = stKnobTypeValues[9]
	if gs_knob_type_m > 0 then
		gs_knob_type = stKnobTypeValues[max(1, min(gs_knob_type_m, 8))]
	endif
	parameters gs_knob_type = gs_knob_type
endif

VALUES "gs_knob_p" st_knobplacing
values "gs_knob_p_m" 0, 1

if GLOB_MODPAR_NAME = "gs_knob_p" then
	gs_knob_p_m = 0
	if gs_knob_p= st_knobplacing[2] then gs_knob_p_m = 1
	parameters gs_knob_p_m = gs_knob_p_m
else
	gs_knob_p = st_knobplacing[1]
	if gs_knob_p_m = 1 then gs_knob_p = st_knobplacing[2]
	parameters gs_knob_p = gs_knob_p
endif


VALUES "gs_sink_type" st_sinktype
VALUES "gs_sink_type_m" 1, 2, 3

if GLOB_MODPAR_NAME = "gs_sink_type" then
	gs_sink_type_m = 1
	if gs_sink_type = st_sinktype[2] then gs_sink_type_m = 2
	if gs_sink_type = st_sinktype[3] then gs_sink_type_m = 3
	parameters gs_sink_type_m = gs_sink_type_m
else
	gs_sink_type = st_sinktype[1]
	if gs_sink_type_m = 2 then gs_sink_type = st_sinktype[2]
	if gs_sink_type_m = 3 then gs_sink_type = st_sinktype[3]
	parameters gs_sink_type = gs_sink_type
endif


TapDistFromSink = 0.03
call "tapType_m" parameters	all	enableTapGroups			= 2 + 4 + 8 + 16 + 32 + 64,
								enableSingleLevelTaps	= 2 + 2**3 + 2**5 + 2**9 + 2**18 + 2**19,
								enableTwoHandleTaps		= 2 + 2**4 + 2**6 + 2**7 + 2**8 + 2**11 + 2**12 + 2**13 + 2**14 + 2**20 + 2**21,
								enableTraditionalTaps	= 2 + 2**10 + 2**16 + 2**17,
								enableSensorFaucets		= 2 + 2**15 + 2**22,
								enableWallMountedTaps	= 2 + 2**23 + 2**24 + 2**25,
								enableCustomTaps		= 0,
								bEnableTapEdit			= 1,
								bShower 				= 0,
								enableTapSymbols		= 2 + 4 + 8 + 32,
								xTapRangeMin 			= -gs_sink_width/2,
								xTapRangeMax 			= gs_sink_width/2,
								yTapRangeMin 			= -0.23 + gs_sink_depth/2 + TapDistFromSink,
								yTapRangeMax 			= B/2 - 0.02 * (bs_h > 0) - 0.23,
								zTapRangeMin 			= ZZYZX - tapHeight + bs_h,
								returned_parameters tapWidthL, tapWidthR, yTap

VALUES "TapSymbol" st_tapsymbol[3],st_tapsymbol[2],st_tapsymbol[4],st_tapsymbol[1]
VALUES "TapSymbol_m" 	0,1,2,3

if GLOB_MODPAR_NAME = "TapSymbol" or TapSymbol_m = -1 then
	for iTap = 1 to vardim1(st_tapsymbol)
		if TapSymbol = st_tapsymbol[iTap] then
			TapSymbol_m = iTap-1
		endif
	next iTap
	parameters TapSymbol_m = TapSymbol_m
else
	TapSymbol = st_tapsymbol[TapSymbol_m+1]
	parameters TapSymbol = TapSymbol
endif


if gs_tap_type_m=0 then
	lock "TapSymbol", "gs_tap_mat", "tapHeight"
	hideparameter "TapSymbol", "gs_tap_mat", "tapHeight"
endif
if not(bWallMountedTap) then
	lock "tapHeight"
	hideparameter "tapHeight"
endif

values "tapHeight" range[zzyzx+bs_h+0.1,]

VALUES "gs_toe_type" st_toetype
values "gs_toe_type_m" 1,2,3,0

if GLOB_MODPAR_NAME = "gs_toe_type" then
	gs_toe_type_m = 0
	if gs_toe_type = st_toetype[2] 		then gs_toe_type_m = 1
	if gs_toe_type = st_toetype[3] 		then gs_toe_type_m = 2
	if gs_toe_type = st_toetype[4] 		then gs_toe_type_m = 3
	parameters gs_toe_type_m = gs_toe_type_m
else
	gs_toe_type = st_toetype[1]
	if gs_toe_type_m = 1 	then gs_toe_type = st_toetype[2]
	if gs_toe_type_m = 2 	then gs_toe_type = st_toetype[3]
	if gs_toe_type_m = 3 	then gs_toe_type = st_toetype[4]
	parameters gs_toe_type = gs_toe_type
endif

values "stCabSymbolType2D" stCabSymbolType2DValues
values "iCabSymbolType2D" 1, 2, 3, 4

if GLOB_MODPAR_NAME = "stCabSymbolType2D" then
	iCabSymbolType2D = 1
	if stCabSymbolType2D = stCabSymbolType2DValues[2] then iCabSymbolType2D = 2
	if stCabSymbolType2D = stCabSymbolType2DValues[3] then iCabSymbolType2D = 3
	if stCabSymbolType2D = stCabSymbolType2DValues[4] then iCabSymbolType2D = 4
	parameters iCabSymbolType2D = iCabSymbolType2D
else
	stCabSymbolType2D = stCabSymbolType2DValues[1]
	if iCabSymbolType2D = 2 then stCabSymbolType2D = stCabSymbolType2DValues[2]
	if iCabSymbolType2D = 3 then stCabSymbolType2D = stCabSymbolType2DValues[3]
	if iCabSymbolType2D = 4 then stCabSymbolType2D = stCabSymbolType2DValues[4]
	parameters stCabSymbolType2D = stCabSymbolType2D
endif

!!! *************************************************
if gs_sink_type_m = 1 then
	values "sink_dist" range [-((A-right_cab-left_cab)/2-gs_sink_depth/2-0.02),((A-right_cab-left_cab)/2-gs_sink_depth/2-0.02)]
else
	values "sink_dist" range [-((A-right_cab-left_cab)/2-gs_sink_width/2-0.02),((A-right_cab-left_cab)/2-gs_sink_width/2-0.02)]
endif
values "gs_sink_width" range (0, )
values "gs_sink_depth" range (0, )
values "knob_size" Range [0.045,)

values "door_ang" range [0,180]

values "gs_resol" range [4,)

values "shelf_num" range [0,)

values "toe_h" range [0,)
values "bs_h" range [0,)
values "count_th" range (0,)

values "front_cab" range [0,)
values "rear_cab" range [0,)
values "left_cab" range [0,)
values "right_cab" range [0,)

values "doorframe_w" range [0.03,)
values "doorframe_w_end" range [0.03,)

if MSFront < 0 then
	MSFront = 0
	parameters MSFront = MSFront
endif

!!! Basin
If gs_sink_type_m = 1 then
	lock "gs_sink_width"
	hideparameter "gs_sink_width"
endif

!!! *************************************************
!!! Custom Elements !!!-------------------------------------

if gs_door_type_m = 10 then

	dim gs_pt[]

	call "Object_Panel_Collection" parameters returned_parameters gs_pt

	values "gs_cust_p" gs_pt

endif

if iEndPanelType = 99 then

	dim gs_pt[]

	call "Object_Panel_Collection" parameters returned_parameters gs_pt

	values "gs_cust_p_end" gs_pt

endif

!!! *************************************************
!!! Handling mirroring issues !!!


values "side_vis" stSideVisValues
values "side_vis_mirror" stSideVisValues
values "side_vis_m" 1, 2, 3, 4

if GLOB_MODPAR_NAME = "side_vis" then
	if side_vis = stSideVisValues[1] then
		side_vis_m = 1
		side_vis_mirror = stSideVisValues[1]
	endif
	if side_vis = stSideVisValues[2] then
		side_vis_m = 2
		side_vis_mirror = stSideVisValues[3]
	endif
	if side_vis = stSideVisValues[3] then
		side_vis_m = 3
		side_vis_mirror = stSideVisValues[2]
	endif
	if side_vis = stSideVisValues[4] then
		side_vis_m = 4
		side_vis_mirror = stSideVisValues[4]
	endif
	parameters	side_vis_m = side_vis_m,
				side_vis_mirror = side_vis_mirror
else
	if GLOB_MODPAR_NAME = "side_vis_mirror" then
		if side_vis_mirror = stSideVisValues[1] then
			side_vis_m = 1
			side_vis = stSideVisValues[1]
		endif
		if side_vis_mirror = stSideVisValues[2] then
			side_vis_m = 3
			side_vis = stSideVisValues[3]
		endif
		if side_vis_mirror = stSideVisValues[3] then
			side_vis_m = 2
			side_vis = stSideVisValues[2]
		endif
		if side_vis_mirror = stSideVisValues[4] then
			side_vis_m = 4
			side_vis = stSideVisValues[4]
		endif
		parameters	side_vis_m = side_vis_m,
					side_vis = side_vis
	else
		if side_vis_m = 1 then
			side_vis = stSideVisValues[1]
			side_vis_mirror = stSideVisValues[1]
		endif
		if side_vis_m = 2 then
			side_vis = stSideVisValues[2]
			side_vis_mirror = stSideVisValues[3]
		endif
		if side_vis_m = 3 then
			side_vis = stSideVisValues[3]
			side_vis_mirror = stSideVisValues[2]
		endif
		if side_vis_m = 4 then
			side_vis = stSideVisValues[4]
			side_vis_mirror = stSideVisValues[4]
		endif
		parameters	side_vis = side_vis,
					side_vis_mirror = side_vis_mirror
	endif
endif


values "side_vis2D" stSideVisValues
values "side_vis2D_mirror" stSideVisValues
values "side_vis2D_m" 1, 2, 3, 4

if GLOB_MODPAR_NAME = "side_vis2D" then
	if side_vis2D = stSideVisValues[1] then
		side_vis2D_m = 1
		side_vis2D_mirror = stSideVisValues[1]
	endif
	if side_vis2D = stSideVisValues[2] then
		side_vis2D_m = 2
		side_vis2D_mirror = stSideVisValues[3]
	endif
	if side_vis2D = stSideVisValues[3] then
		side_vis2D_m = 3
		side_vis2D_mirror = stSideVisValues[2]
	endif
	if side_vis2D = stSideVisValues[4] then
		side_vis2D_m = 4
		side_vis2D_mirror = stSideVisValues[4]
	endif
	parameters	side_vis2D_m = side_vis2D_m,
				side_vis2D_mirror = side_vis2D_mirror
else
	if GLOB_MODPAR_NAME = "side_vis2D_mirror" then
		if side_vis2D_mirror = stSideVisValues[1] then
			side_vis2D_m = 1
			side_vis2D = stSideVisValues[1]
		endif
		if side_vis2D_mirror = stSideVisValues[2] then
			side_vis2D_m = 3
			side_vis2D = stSideVisValues[3]
		endif
		if side_vis2D_mirror = stSideVisValues[3] then
			side_vis2D_m = 2
			side_vis2D = stSideVisValues[2]
		endif
		if side_vis2D_mirror = stSideVisValues[4] then
			side_vis2D_m = 4
			side_vis2D = stSideVisValues[4]
		endif
		parameters	side_vis2D_m = side_vis2D_m,
					side_vis2D = side_vis2D
	else
		if side_vis2D_m = 1 then
			side_vis2D = stSideVisValues[1]
			side_vis2D_mirror = stSideVisValues[1]
		endif
		if side_vis2D_m = 2 then
			side_vis2D = stSideVisValues[2]
			side_vis2D_mirror = stSideVisValues[3]
		endif
		if side_vis2D_m = 3 then
			side_vis2D = stSideVisValues[3]
			side_vis2D_mirror = stSideVisValues[2]
		endif
		if side_vis2D_m = 4 then
			side_vis2D = stSideVisValues[4]
			side_vis2D_mirror = stSideVisValues[4]
		endif
		parameters	side_vis2D = side_vis2D,
					side_vis2D_mirror = side_vis2D_mirror
	endif
endif

if SYMB_MIRRORED then
	hideparameter "side_vis"
	hideparameter "side_vis2D"

	hideparameter "left_cab"
	hideparameter "right_cab"
	parameters left_cab = right_cab_mirror
	parameters right_cab = left_cab_mirror

	hideparameter "left_panel"
	hideparameter "right_panel"
	parameters left_panel = right_panel_mirror
	parameters right_panel = left_panel_mirror

else
	hideparameter "side_vis_mirror"
	hideparameter "side_vis2D_mirror"

	hideparameter "left_cab_mirror"
	hideparameter "right_cab_mirror"
	parameters left_cab_mirror  = right_cab
	parameters right_cab_mirror  = left_cab

	hideparameter "left_panel_mirror"
	hideparameter "right_panel_mirror"
	parameters left_panel_mirror = right_panel
	parameters right_panel_mirror = left_panel
endif

!!! *************************************************
!!! Handling mirroring issues END !!!

!!! *************************************************
IF gs_door_type_m = 0 Then
	parameters door = 0
	door = 0
	lock "gs_cust_p", "gs_bevel", "gs_door_bw", "door_w", "fr_th1", "door_ang", "doorframe_w", "vert_gnum", "hor_gnum", "gs_knob_type", "doorframe_mat", "doorglas_mat"
	hideparameter "gs_cust_p", "gs_bevel", "gs_door_bw", "door_w", "fr_th1", "door_ang", "doorframe_w", "vert_gnum", "hor_gnum","gs_knob_type", "doorframe_mat", "doorglas_mat"
Else
		parameters door = 1
					door = 1
Endif

!!! *************************************************
If GLOB_MODPAR_NAME = "dob_face" THEN
	IF dob_face = 1 Then
			Parameters 	rear_cab = front_cab
						rear_cab = front_cab
	Else
			Parameters 	rear_cab = 0
						rear_cab = 0
	Endif
Endif
!!! *************************************************

values "gs_count_type" st_counttype[2], st_counttype[3]
values "gs_count_type_m" 1, 2

if GLOB_MODPAR_NAME = "gs_count_type" then
	gs_count_type_m = 1
	if gs_count_type = st_counttype[3] then gs_count_type_m = 2
	parameters gs_count_type_m = gs_count_type_m
else
	gs_count_type = st_counttype[2]
	if gs_count_type_m = 2 then gs_count_type = st_counttype[3]
	parameters gs_count_type = gs_count_type
endif

values "cab_size_" `Тумба`,`Столешница`
values "cab_size" 0, 1

if GLOB_MODPAR_NAME = "cab_size_" then
	if cab_size_ = `Столешница` then
		cab_size = 0
	else
		cab_size = 1
	endif
	parameters cab_size	= cab_size
else
	if cab_size = 0 then
		cab_size_ = `Столешница`
	else
		cab_size_ = `Тумба`
	endif
	parameters cab_size_ = cab_size_
endif


!!! *************************************************

if gs_cont_pen=0 then parameters gs_cont_pen=75
if gs_fill_pen=0 then parameters gs_fill_pen=19

IF gs_toe_type_m = 0 THEN LOCK "toe_h","toe_d","toe_mat"
if ABS(bs_h)<EPS or dob_face=1 then lock "bs_mat","bs_h"
IF shelf_num=0 or gs_detlevel_3D_m=1 then lock "gs_ShelfMat"

if gs_detlevel_3D_m = 1 then
	lock "gs_resol"
	hideparameter "gs_resol"
endif

if gs_door_type_m=1 OR gs_door_type_m=10 then lock "doorframe_w","hor_gnum","vert_gnum","doorglas_mat"
if gs_door_type_m=2 or gs_door_type_m=4  or gs_door_type_m=11 then lock "hor_gnum","vert_gnum","doorglas_mat"
if gs_door_type_m=9  then lock "hor_gnum","vert_gnum"
if gs_door_type_m = 0 then HIDEPARAMETER "gs_cust_p","door_ang","doorframe_w","hor_gnum","vert_gnum"	!! UI
if gs_door_type_m = 0 then LOCK "gs_cust_p","door_ang","doorframe_w","hor_gnum","vert_gnum"	!! UI
if gs_door_type_m = 0 and not(bDrawer) THEN LOCK "fr_th1"

if gs_knob_type_m=1 or gs_knob_type_m=2 or gs_knob_type_m=3 or gs_knob_type_m=9  then lock "gs_knob_p"
if gs_knob_type_m=1 or gs_knob_type_m=2 or gs_knob_type_m=3 or gs_knob_type_m=9  then lock "knob_size"
if gs_knob_type_m=0 then HIDEPARAMETER "knob_pl_x","knob_pl_y","gs_knob_p","knob_size"
if gs_knob_type_m=0 then LOCK "knob_pl_x","knob_pl_y","gs_knob_p","knob_size","gs_knob_mat"	!!UI

if rear_panel=1 then lock "dob_face"
if dob_face=1 then lock "rear_panel", "bs_h"

IF gs_door_type_m<>10 THEN HIDEPARAMETER "gs_cust_p"

IF iEndPanelType = 1 OR iEndPanelType = 99 THEN LOCK "doorframe_w_end"
IF iEndPanelType <> 99 THEN
	HIDEPARAMETER "gs_cust_p_end"
	LOCK "gs_cust_p_end"
endif

IF left_panel=0 and right_panel=0 and left_panel_mirror=0 and right_panel_mirror=0 and rear_panel=0 THEN
	LOCK "stEndPanelType", "iEndPanelType", "doorframe_mat_end","doorframe_w_end"
endif


! --- start of modify to Shaft

if gs_sink_type_m = 1 then
	VALUES "A" RANGE [gs_sink_depth + left_cab + right_cab + 0.04, ]
else
	VALUES "A" RANGE [gs_sink_width + left_cab + right_cab + 0.04, ]
endif

if gs_tap_type_m = 0 then
	values "B" range [gs_sink_depth + front_cab + rear_cab + 0.02 * (bs_h > 0), )
else
	values "B" range [gs_sink_depth + front_cab + rear_cab + 0.02 * (bs_h > 0) + 2 * (yTap + TapDistFromSink), )
endif

VALUES "ZZYZX" RANGE(0, ]

PUT 1, 2, 3, 4, 5, 6

if isMEPEnabled then

	nTabs = 6

	IF NOT(ConStatus_1) AND NOT(ConStatus_2) AND NOT(ConStatus_3) THEN
		LOCK "gs_con_mat"
		HIDEPARAMETER "gs_con_mat"
	ENDIF

	DIM shape_typ_to_validation[3]
		shape_typ_to_validation[1] = 0		! Rectangle
		shape_typ_to_validation[2] = 1		! Circle
		shape_typ_to_validation[3] = 0		! Oval

					! --- CONNECTIONS --- !

	PARAMETERS MEP_NumberConnections = 3


					! --- 1st CONNECTION --- !

	ConID = 1
	ConName = `Подключение Горячей Воды`

	ConDVecX = 0
	ConDVecY = 1
	ConDVecZ = 0

	ConWVecX = -1
	ConWVecY = 0
	ConWVecZ = 0

	IF ConWidth_1 < 0.001 THEN
		ConWidth_1 = 0.001
		PARAMETERS ConWidth_1 = ConWidth_1
	ENDIF
	IF ConWidth_1 > MIN(A/2, (zzyzx-count_th-toe_h)/2) THEN
		ConWidth_1 = MIN(A/2, (zzyzx-count_th-toe_h)/2)
		PARAMETERS ConWidth_1 = ConWidth_1
	ENDIF
	VALUES "ConWidth_1" RANGE (0, MIN(A/2, (zzyzx-count_th-toe_h)/2)]
	PARAMETERS ConDepth_1 = ConWidth_1
	VALUES "ConLength_1" RANGE [0, ]

	PARAMETERS ConPosY_1 = B

	! Default Position
	if (GLOB_MODPAR_NAME = "gs_tap_type" | GLOB_MODPAR_NAME = "gs_tap_type_m" | \
	GLOB_MODPAR_NAME = "tapGroup" | GLOB_MODPAR_NAME = "iTapGroup") then
		if bWallMountedTap then
			ConPosX_1 = posTap + widthTap/2
		else
			ConPosX_1 = 0.35
		endif
		parameters ConPosX_1 = ConPosX_1
	endif

	if bWallmountedTap then
		pos1st = -posTap - widthTap + ConWidth_1/2
		pos2nd = -posTap - ConWidth_1/2

		pos3rd = +posTap + ConWidth_1/2
		pos4th = +posTap + widthTap - ConWidth_1/2

		! --- X Range

		values "ConPosX_1"	range [pos1st, pos2nd],
							range [pos3rd, pos4th]


		! --- Change Connection Side
		if GLOB_MODPAR_NAME = "ConPosX_2" then
			if ConPosX_2 < 0 & ConPosX_1 < 0 then
				ConPosX_1 = posTap + widthTap/2
				parameters 	ConPosX_1 = ConPosX_1
			endif
			if ConPosX_2 > 0 & ConPosX_1 > 0 then
				ConPosX_1 = -(posTap + widthTap/2)
				parameters 	ConPosX_1 = ConPosX_1
			endif
		endif

		ConPosZ_1 = tapHeight
		parameters	ConPosX_1 = ConPosX_1,
					ConPosZ_1 = ConPosZ_1
	else
		VALUES "ConPosX_1" RANGE [ConWidth_1/2, A-ConWidth_1/2]
		VALUES "ConPosZ_1" RANGE [toe_h+ConWidth_1/2, zzyzx-count_th-ConWidth_1/2]
	endif


	CALL "MEP_m_ConnectionsACL_4" PARAMETERS SetProgram = SetProgram,
		gs_Connections = gs_Connections,
		MEP_NumConnectionData = MEP_NumConnectionData,
		MEP_StrConnectionData = MEP_StrConnectionData,
		MEP_NumberConnections = MEP_NumberConnections,
		gs_AddConnections = gs_AddConnections,
		ConName = ConName,
		ConID = ConID,
		ConPosX = ConPosX_1+(xTapPos+A/2)*bWallmountedTap,
		ConPosY = ConPosY_1,
		ConPosZ = ConPosZ_1+zTapPos*bWallmountedTap,
		ConDVecX = ConDVecX,
		ConDVecY = ConDVecY,
		ConDVecZ = ConDVecZ,
		ConWVecX = ConWVecX,
		ConWVecY = ConWVecY,
		ConWVecZ = ConWVecZ,

		ConNominalWidth = ConNominalWidth_1,
		ConNominalDepth = ConNominalDepth_1,
		ConWidth = ConWidth_1,
		ConDepth = ConDepth_1,
		ConLength = ConLength_1,
		ConWallThickness = ConWallThickness_1,
		ConConnectorWidth = ConConnectorWidth_1,
		ConConnectorDepth = ConConnectorDepth_1,
		ConConnectorWidth2 = ConConnectorWidth2_1,
		ConToolType = ConToolType_1,
		ConStatus = ConStatus_1,
		ConType_1 = ConType_1,
		ConConnectorType_1 = ConConnectorType_1,
		ConSystem_1 = ConSystem_1,
		ui_current_con = ui_current_con,
		shape_typ_to_validation = shape_typ_to_validation,
		MEP_enabled_geometry_mod = 1

	PARAMETERS MEP_ConInfo[ConID][1] = STR(ConToolType_1, 1, 0)
	PARAMETERS MEP_ConInfo[ConID][2] = ConName
	PARAMETERS MEP_ConInfo[ConID][3] = "0"


					! --- 2nd CONNECTION --- !

	ConID = 2
	ConName = `Подключение Холодной Воды`

	ConDVecX = 0
	ConDVecY = 1
	ConDVecZ = 0

	ConWVecX = -1
	ConWVecY = 0
	ConWVecZ = 0

	IF ConWidth_2 < 0.001 THEN
		ConWidth_2 = 0.001
		PARAMETERS ConWidth_2 = ConWidth_2
	ENDIF
	IF ConWidth_2 > MIN(A/2, (zzyzx-count_th-toe_h)/2) THEN
		ConWidth_2 = MIN(A/2, (zzyzx-count_th-toe_h)/2)
		PARAMETERS ConWidth_2 = ConWidth_2
	ENDIF
	VALUES "ConWidth_2" RANGE (0, MIN(A/2, (zzyzx-count_th-toe_h)/2)]
	PARAMETERS ConDepth_2 = ConWidth_2
	VALUES "ConLength_2" RANGE [0, ]

	PARAMETERS ConPosY_2 = B

	! Default Position
	if (GLOB_MODPAR_NAME = "gs_tap_type" | GLOB_MODPAR_NAME = "gs_tap_type_m" | \
	GLOB_MODPAR_NAME = "tapGroup" | GLOB_MODPAR_NAME = "iTapGroup") then
		if bWallMountedTap then
			ConPosX_2 = -posTap - widthTap/2
		else
			ConPosX_2 = 0.55
		endif
		parameters ConPosX_2 = ConPosX_2
	endif

	if bWallmountedTap then
		pos1st = -posTap - widthTap + ConWidth_2/2
		pos2nd = -posTap - ConWidth_2/2

		pos3rd = +posTap + ConWidth_2/2
		pos4th = +posTap + widthTap - ConWidth_2/2

		! --- X Range

		values "ConPosX_2"	range [pos1st, pos2nd],
							range [pos3rd, pos4th]

		! --- Change Connection Side
		if GLOB_MODPAR_NAME = "ConPosX_1" then
			if ConPosX_1 < 0 & ConPosX_2 < 0 then
				ConPosX_2 = posTap + widthTap/2
				parameters 	ConPosX_2 = ConPosX_2
			endif
			if ConPosX_1 > 0 & ConPosX_2 > 0 then
				ConPosX_2 = -(posTap + widthTap/2)
				parameters 	ConPosX_2 = ConPosX_2
			endif
		endif

		ConPosZ_2 = tapHeight
		parameters	ConPosX_2 = ConPosX_2,
					ConPosZ_2 = ConPosZ_2
	else
		VALUES "ConPosX_2" RANGE [ConWidth_2/2, A-ConWidth_2/2]
		VALUES "ConPosZ_2" RANGE [toe_h+ConWidth_2/2, zzyzx-count_th-ConWidth_2/2]
	endif


	CALL "MEP_m_ConnectionsACL_4" PARAMETERS SetProgram = SetProgram,
		gs_Connections = gs_Connections,
		MEP_NumConnectionData = MEP_NumConnectionData,
		MEP_StrConnectionData = MEP_StrConnectionData,
		MEP_NumberConnections = MEP_NumberConnections,
		gs_AddConnections = gs_AddConnections,
		ConName = ConName,
		ConID = ConID,
		ConPosX = ConPosX_2+(xTapPos+A/2)*bWallmountedTap,
		ConPosY = ConPosY_2,
		ConPosZ = ConPosZ_2+zTapPos*bWallmountedTap,
		ConDVecX = ConDVecX,
		ConDVecY = ConDVecY,
		ConDVecZ = ConDVecZ,
		ConWVecX = ConWVecX,
		ConWVecY = ConWVecY,
		ConWVecZ = ConWVecZ,

		ConNominalWidth = ConNominalWidth_2,
		ConNominalDepth = ConNominalDepth_2,
		ConWidth = ConWidth_2,
		ConDepth = ConDepth_2,
		ConLength = ConLength_2,
		ConWallThickness = ConWallThickness_2,
		ConConnectorWidth = ConConnectorWidth_2,
		ConConnectorDepth = ConConnectorDepth_2,
		ConConnectorWidth2 = ConConnectorWidth2_2,
		ConToolType = ConToolType_2,
		ConStatus = ConStatus_2,
		ConType_2 = ConType_2,
		ConConnectorType_2 = ConConnectorType_2,
		ConSystem_2 = ConSystem_2,
		shape_typ_to_validation = shape_typ_to_validation,
		MEP_enabled_geometry_mod = 1

	PARAMETERS MEP_ConInfo[ConID][1] = STR(ConToolType_2, 1, 0)
	PARAMETERS MEP_ConInfo[ConID][2] = ConName
	PARAMETERS MEP_ConInfo[ConID][3] = "0"


					! --- 3rd CONNECTION --- !

	ConID = 3
	ConName = `Подключение Канализации`

	ConDVecX = 0
	ConDVecY = 1
	ConDVecZ = 0

	ConWVecX = -1
	ConWVecY = 0
	ConWVecZ = 0

	IF ConWidth_3 < 0.001 THEN
		ConWidth_3 = 0.001
		PARAMETERS ConWidth_3 = ConWidth_3
	ENDIF
	IF ConWidth_3 > MIN(A/2, (zzyzx-count_th-toe_h)/2) THEN
		ConWidth_3 = MIN(A/2, (zzyzx-count_th-toe_h)/2)
		PARAMETERS ConWidth_3 = ConWidth_3
	ENDIF
	VALUES "ConWidth_3" RANGE (0, MIN(A/2, (zzyzx-count_th-toe_h)/2)]
	PARAMETERS ConDepth_3 = ConWidth_3
	VALUES "ConLength_3" RANGE [0, ]


	VALUES "ConPosX_3" RANGE [ConWidth_3/2, A-ConWidth_3/2]
	PARAMETERS ConPosY_3 = B
	VALUES "ConPosZ_3" RANGE [toe_h+ConWidth_3/2, zzyzx-count_th-ConWidth_3/2]


	CALL "MEP_m_ConnectionsACL_4" PARAMETERS SetProgram = SetProgram,
		gs_Connections = gs_Connections,
		MEP_NumConnectionData = MEP_NumConnectionData,
		MEP_StrConnectionData = MEP_StrConnectionData,
		MEP_NumberConnections = MEP_NumberConnections,
		gs_AddConnections = gs_AddConnections,
		ConName = ConName,
		ConID = ConID,
		ConPosX = ConPosX_3,
		ConPosY = ConPosY_3,
		ConPosZ = ConPosZ_3,
		ConDVecX = ConDVecX,
		ConDVecY = ConDVecY,
		ConDVecZ = ConDVecZ,
		ConWVecX = ConWVecX,
		ConWVecY = ConWVecY,
		ConWVecZ = ConWVecZ,

		ConNominalWidth = ConNominalWidth_3,
		ConNominalDepth = ConNominalDepth_3,
		ConWidth = ConWidth_3,
		ConDepth = ConDepth_3,
		ConLength = ConLength_3,
		ConWallThickness = ConWallThickness_3,
		ConConnectorWidth = ConConnectorWidth_3,
		ConConnectorDepth = ConConnectorDepth_3,
		ConConnectorWidth2 = ConConnectorWidth2_3,
		ConToolType = ConToolType_3,
		ConStatus = ConStatus_3,
		ConType_3 = ConType_3,
		ConConnectorType_3 = ConConnectorType_3,
		ConSystem_3 = ConSystem_3,
		shape_typ_to_validation = shape_typ_to_validation,
		MEP_enabled_geometry_mod = 1

	PARAMETERS MEP_ConInfo[ConID][1] = STR(ConToolType_3, 1, 0)
	PARAMETERS MEP_ConInfo[ConID][2] = ConName
	PARAMETERS MEP_ConInfo[ConID][3] = "0"

	IF gs_ui_current_page = 7 THEN
		ac_mep_connectionpage_active = 1
	ELSE
		ac_mep_connectionpage_active = 0
	ENDIF
	PARAMETERS ac_mep_connectionpage_active = ac_mep_connectionpage_active

	IF SetProgram THEN
		SetProgram = 0
		PARAMETERS SetProgram = SetProgram
	ENDIF
	PUT 7
ELSE
	nTabs = 5

	HIDEPARAMETER "gs_connection", "useSysMat"

	ac_mep_connectionpage_active = 0
	PARAMETERS ac_mep_connectionpage_active = ac_mep_connectionpage_active
ENDIF

values "gs_ui_current_page" get(nsp)

if not(isMEPEnabled) and gs_ui_current_page > 6 then
	gs_ui_current_page = 1
	parameters gs_ui_current_page = gs_ui_current_page
endif

! =============================================================================
! Onorm list Settings
! =============================================================================
if LibraryLangCode = "AUT" or LibraryLangCode = "CHE" or LibraryLangCode = "GER" then
	call "Onorm_Plumbing" parameters all
else
	hideparameter "gs_onorm_Title"
endif
END
