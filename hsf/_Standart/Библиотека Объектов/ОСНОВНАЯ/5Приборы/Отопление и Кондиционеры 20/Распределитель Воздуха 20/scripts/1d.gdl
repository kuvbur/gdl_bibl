

EPS = 0.0001

! Show MEP Connections -------------------------------------------------------------[

isavailable = 0
isInArchiCAD = APPLICATION_QUERY ("MEPMODELER", "IsAvailable()", isavailable)
isMEPEnabled = (isavailable OR isInArchiCAD = 0)
if isMEPEnabled then
	bShowMEP = 1
	reqBMep = 0
	success = LIBRARYGLOBAL ("LibraryGlobals13", "showMepConnect", reqBMep)
	if success > 0 then
		bShowMEP = reqBMep
	endif
else
	bShowMEP = 0
endif

! Show MEP Connections -------------------------------------------------------------]

!!! ***************
!!! Special parts
!!! ***************

DIM PlenumType_dim[3]
	PlenumType_dim[1]=`Куб`
	PlenumType_dim[2]=`Призма`
	PlenumType_dim[3]=`Цилиндр`

FOR i = 1 TO 2
NEXT i

DIM DiffType_dim[6]
	DiffType_dim[1]=`Коническая`
	DiffType_dim[2]=`Круглая`
	DiffType_dim[3]=`Спиралевидная`
	DiffType_dim[4]=`Потолок`
	DiffType_dim[5]=`4-сторонний`
	DiffType_dim[6]=`Импульс`

FOR i = 1 TO 6
NEXT i


IF GLOB_MODPAR_NAME = "PlenumType" THEN
	IF PlenumType = PlenumType_dim[1] THEN iPlenumType = 1
	IF PlenumType = PlenumType_dim[2] THEN iPlenumType = 2
	IF PlenumType = PlenumType_dim[3] THEN iPlenumType = 3
	PARAMETERS iPlenumType = iPlenumType
ENDIF
IF PlenumType <> PlenumType_dim[iPlenumType] THEN
	PlenumType = PlenumType_dim[iPlenumType]
	PARAMETERS PlenumType = PlenumType
ENDIF

IF GLOB_MODPAR_NAME = "DiffType" THEN
	IF DiffType = DiffType_dim[1] THEN iDiffType = 1
	IF DiffType = DiffType_dim[2] THEN iDiffType = 2
	IF DiffType = DiffType_dim[3] THEN iDiffType = 3
	IF DiffType = DiffType_dim[4] THEN iDiffType = 4
	IF DiffType = DiffType_dim[5] THEN iDiffType = 5
	IF DiffType = DiffType_dim[6] THEN iDiffType = 6
	PARAMETERS iDiffType = iDiffType
ENDIF
IF DiffType <> DiffType_dim[iDiffType] THEN
	DiffType = DiffType_dim[iDiffType]
	PARAMETERS DiffType = DiffType
ENDIF

IF iPlenumType <> 2 THEN
	GrilleLength = GrilleWidth
	PanelOuterLength = PanelOuterWidth
	PlenumLength = PlenumWidth
	NeckLength = NeckWidth
ENDIF

IF ABS(NeckWidth - PlenumWidth) < EPS THEN NeckWidth = PlenumWidth + EPS

PlmE = ConWidth_1+ConWallThickness_1*2
ConHalfW = PlmE/2
ConHalfH = ConDepth_1/2+ConWallThickness_1

tck=0.04     !Blade
NumBlades=24 !Blade
!Plmfl=0.04   !Plenum flange width
!Plmtck=0.004 !Plenum flange plate thickness
Nh=0.03      !Neck Height
PlmCH=PlenumHeight-0.03-PlmE/2   !Connection Depth/Height

gtck = 0.005 ! Grill thickness


						! ---------------- !
						! --- Z vector --- !
						! ---------------- !

dZx = -MEP_Position[3][2]*MEP_Position[2][3]+MEP_Position[3][3]*MEP_Position[2][2]
dZy = -MEP_Position[3][3]*MEP_Position[2][1]+MEP_Position[3][1]*MEP_Position[2][3]
dZz = -MEP_Position[3][1]*MEP_Position[2][2]+MEP_Position[3][2]*MEP_Position[2][1]


					! --- dirAngOnXYPlane of the route  --- !

IF ABS(dZz-1) < EPS THEN
	 arCosVal = MEP_Position[3][1]/1
	IF ABS(arCosVal) > 1 AND SGN(arCosVal) = -1 THEN arCosVal = -1
	IF ABS(arCosVal) > 1 AND SGN(arCosVal) = 1 THEN arCosVal = 1
	dirAngOnXYPlane = ACS(arCosVal)-90
	IF SGN(MEP_Position[3][2]) = -1 THEN dirAngOnXYPlane = 180-dirAngOnXYPlane
ENDIF


					!!! +++ Transformational Matrix +++ !!!

DIM tMatrix[3][3]

tMatrix[1][1] = MEP_Position[2][1]
tMatrix[1][2] = MEP_Position[2][2]
tMatrix[1][3] = MEP_Position[2][3]

tMatrix[2][1] = MEP_Position[3][1]
tMatrix[2][2] = MEP_Position[3][2]
tMatrix[2][3] = MEP_Position[3][3]

tMatrix[3][1] = dZx
tMatrix[3][2] = dZy
tMatrix[3][3] = dZz


						!!! +++ Input Coordinates +++ !!!

PUT ConPosX_1+gs_Connections[1][4]*ConLength_1, ConPosY_1+gs_Connections[1][5]*ConLength_1, ConPosZ_1+gs_Connections[1][6]*ConLength_1
PUT gs_Connections[1][4], gs_Connections[1][5], gs_Connections[1][6]
PUT gs_Connections[1][7], gs_Connections[1][8], gs_Connections[1][9]

IF iPlenumType < 3 THEN !**** Cube, Prism
	PUT PlenumWidth/2
	PUT PlenumLength/2
	PUT Nh

	PUT PlenumWidth/2
	PUT -PlenumLength/2
	PUT Nh

	PUT -PlenumWidth/2
	PUT -PlenumLength/2
	PUT Nh

	PUT -PlenumWidth/2
	PUT PlenumLength/2
	PUT Nh

	PUT PlenumWidth/2
	PUT PlenumLength/2
	PUT Nh+PlenumHeight

	PUT PlenumWidth/2
	PUT -PlenumLength/2
	PUT Nh+PlenumHeight

	PUT -PlenumWidth/2
	PUT -PlenumLength/2
	PUT Nh+PlenumHeight

	PUT -PlenumWidth/2
	PUT PlenumLength/2
	PUT Nh+PlenumHeight
ELSE
	adX = 0
	adY = 0
	PUT PlenumWidth/2
	PUT adY
	PUT Nh

	PUT adX
	PUT PlenumWidth/2
	PUT Nh

	PUT -PlenumWidth/2
	PUT adY
	PUT Nh

	PUT adX
	PUT -PlenumWidth/2
	PUT Nh

	PUT PlenumWidth/2
	PUT adY
	PUT Nh+PlenumHeight

	PUT adX
	PUT PlenumWidth/2
	PUT Nh+PlenumHeight

	PUT -PlenumWidth/2
	PUT adY
	PUT Nh+PlenumHeight

	PUT adX
	PUT -PlenumWidth/2
	PUT Nh+PlenumHeight
ENDIF

Coordinates = NSP/3

DIM inCoords[20][3]

FOR cnum = 1 TO Coordinates
	inCoords[cnum][1] = GET(1)
	inCoords[cnum][2] = GET(1)
	inCoords[cnum][3] = GET(1)
NEXT cnum


! --- the Matrix Operation, what make the Output-Coordinates

DIM outCoords[20][3]

FOR cnum = 1 TO Coordinates
	outCoords[cnum][1] = inCoords[cnum][1]*tMatrix[1][1]+inCoords[cnum][2]*tMatrix[2][1]+inCoords[cnum][3]*tMatrix[3][1]+MEP_Position[1][1]
	outCoords[cnum][2] = inCoords[cnum][1]*tMatrix[1][2]+inCoords[cnum][2]*tMatrix[2][2]+inCoords[cnum][3]*tMatrix[3][2]+MEP_Position[1][2]
	outCoords[cnum][3] = inCoords[cnum][1]*tMatrix[1][3]+inCoords[cnum][2]*tMatrix[2][3]+inCoords[cnum][3]*tMatrix[3][3]+MEP_Position[1][3]
NEXT cnum
