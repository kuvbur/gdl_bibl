
call "GetPlanViewGlobals" parameters all returned_parameters gs_symbtype_2D_m
CALL "RequestSystemGlobals" PARAMETERS ALL returned_parameters gs_cont_pen, gs_fill_type, gs_fill_pen, gs_back_pen

PEN gs_cont_pen
FILL gs_fill_type

IF ABS(dZz-1) < EPS THEN
	ADD2 MEP_Position[1][1], MEP_Position[1][2]
	ROT2 dirAngOnXYPlane

	HOTSPOT2 0,0

	IF gs_symbtype_2D_m = 1 THEN		! Realistic

		IF iPlenumType < 3 THEN !**** Cube, Prism

			HOTSPOT2  PlenumWidth/2, PlenumLength/2
			HOTSPOT2  PlenumWidth/2,-PlenumLength/2
			HOTSPOT2 -PlenumWidth/2, PlenumLength/2
			HOTSPOT2 -PlenumWidth/2,-PlenumLength/2

			IF PlenumWidth < PanelOuterWidth THEN
				POLY2_B 4, 1+2+4+64, gs_fill_pen , gs_back_pen,
					PanelOuterWidth/2, PanelOuterLength/2,1,
				   -PanelOuterWidth/2, PanelOuterLength/2,1,
				   -PanelOuterWidth/2,-PanelOuterLength/2,1,
					PanelOuterWidth/2,-PanelOuterLength/2,1
			ENDIF

			POLY2_B 4, 1+2+4+64, gs_fill_pen , gs_back_pen,
				PlenumWidth/2, PlenumLength/2,1,
				-PlenumWidth/2, PlenumLength/2,1,
				-PlenumWidth/2,-PlenumLength/2,1,
				PlenumWidth/2,-PlenumLength/2,1

			IF PlenumWidth > PanelOuterWidth THEN RECT2 -PanelOuterWidth/2, -PanelOuterLength/2, PanelOuterWidth/2, PanelOuterLength/2
		ELSE
			HOTSPOT2  PlenumWidth/2, 0
			HOTSPOT2 -PlenumWidth/2, 0
			HOTSPOT2 0, PlenumWidth/2
			HOTSPOT2 0,-PlenumWidth/2

			IF PlenumWidth < PanelOuterWidth THEN
				POLY2_B 2, 1+2+4+64, gs_fill_pen , gs_back_pen,
					0,0,901,
					PanelOuterWidth/2,360,4001

			ENDIF

			IX=SQR((PlenumWidth/2)^2-(PlmE/2)^2)
			IXP=SQR((PlenumWidth/2)^2-(PlmE/2)^2)
			alpha=ASN(PlmE/PlenumWidth)
			kx=PlmE/2*tan(alpha)

			POLY2_B 6, 1+2+4+64, gs_fill_pen , gs_back_pen,
				IX, PlmE/2,0,
				0,0,901,
				0,360-2*alpha,4000,
				IX, -PlmE/2,1,
				PlenumWidth/2,-PlmE/2,0,
				PlenumWidth/2, PlmE/2,1

			CIRCLE2 0,0, PlenumWidth/2
			IF PlenumWidth > PanelOuterWidth THEN CIRCLE2 0,0,Pa/2
		ENDIF

		IF iDiffType  < 4 THEN
			CIRCLE2 0, 0, GrilleWidth/2
		ELSE
			RECT2 -GrilleWidth/2, -GrilleLength/2, GrilleWidth/2, GrilleLength/2
		ENDIF
	ENDIF

	IF gs_symbtype_2D_m = 3 THEN			! RCP
		hotspot2 -b/2,-b/2
		hotspot2 -b/2,b/2
		hotspot2 b/2,-b/2
		hotspot2 b/2,b/2

		rect2 -b/2,-b/2,b/2,b/2
		line2 -b/2,-b/2,b/2,b/2
		line2 0,0,b/2,-b/2
	ENDIF
ELSE
	HOTSPOT2 0,0
	HOTSPOT2 outCoords[1][1], outCoords[1][2]
	FOR i = 4 TO 12
		HOTSPOT2 outCoords[i][1], outCoords[i][2]
	NEXT i

	SET FILL gs_fill_type

	PEN gs_cont_pen
	IF gs_fill_pen THEN PEN gs_fill_pen
	PROJECT2{3} 3, 270, 3+32, 4, gs_back_pen, 0, 0, 0, PARAMETERS gs_detlevel_3D_m = 2
	PEN gs_cont_pen
	PROJECT2{3} 3, 270, 2, 8, 0, 0, 0, 0, PARAMETERS gs_detlevel_3D_m = 2
ENDIF

IF gs_symbtype_2D_m = 3 THEN END		! RCP


! --- start of modifying to Shaft

				! --- CONNECTIONS --- !

IF ABS(dZz-1) < EPS THEN
	IF iPlenumType < 3 THEN !**** Cube, Prism
		ConEdit_1 = 13
		ConEdgeVisible_1 = 1
	ELSE
		ConEdit_1 = 1
		ConEdgeVisible_1 = 0
	ENDIF

	CALL "MEP_m_ConnectionsACL_4" PARAMETERS SetProgram = SetProgram,
			MEP_NumberConnections = MEP_NumberConnections,
			MEP_NumConnectionData = gs_Connections,
			gs_AddConnections = gs_AddConnections,
			DrawingNum = 1,
			MEP_InsShow = 0,
			MEP_cline_show = 0,
			gs_cont_pen = gs_cont_pen,
			gs_fill_type=gs_fill_type,
			gs_fill_pen=gs_fill_pen,
			gs_back_pen=gs_back_pen,
			ConPosX_1=ConPosX_1, ConPosY_1=ConPosY_1, ConLength_1=ConLength_1, ConEdit_1 = ConEdit_1, ConEdgeVisible_1 = ConEdgeVisible_1
	DEL 2
ENDIF

end
