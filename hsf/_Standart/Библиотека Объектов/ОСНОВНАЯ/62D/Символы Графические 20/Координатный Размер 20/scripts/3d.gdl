
if NOT(bMarker3D) then end

if NOT(bShadow) then shadow off

resol res

!=============================================================================
! ----------- Project Coordinates (meter, X/Y)
!=============================================================================

text_x_coor = ""
text_y_coor = ""
text_z_coor = ""

if iCoorSystem = PROJECT_COOR then
	x_coor = SYMB_POS_X + GLOB_WORLD_ORIGO_OFFSET_X - CustomOrigX*bCustomOrig
	y_coor = SYMB_POS_Y + GLOB_WORLD_ORIGO_OFFSET_Y - CustomOrigY*bCustomOrig
	z_coor = SYMB_POS_Z - ref_height 				- CustomOrigZ*bCustomOrig

	text_x_coor = STR(workingLengthUnit, x_coor)
	text_y_coor = STR(workingLengthUnit, y_coor)
	text_z_coor = STR(workingLengthUnit, z_coor)
endif


!=============================================================================
! World Coordinates (Degree, Longitude/Latitude)
!=============================================================================

! ------ LATITUDE  = Y (NORTH/SOUTH)
! ------ LONGITUDE = X (EAST/WEST)

! ----- Distance between marker and origin in AC X-Y dimension
dist_X = SYMB_POS_X + GLOB_WORLD_ORIGO_OFFSET_X - CustomOrigX*bCustomOrig
dist_Y = SYMB_POS_Y + GLOB_WORLD_ORIGO_OFFSET_Y - CustomOrigY*bCustomOrig

! ----- Distance between marker and origin
dist = ABS(SQR(dist_X^2 + dist_Y^2))

! ------- Absolute angles of the distance line (marker-origin vector)
alfa_dist = 0
if ABS(dist_X)>EPS then
	if dist_X > EPS and dist_Y > EPS then alfa_dist = ATN(dist_Y/dist_X)
	if dist_X < EPS and dist_Y > EPS then alfa_dist = ATN(dist_Y/dist_X) + 180
	if dist_X > EPS and dist_Y < EPS then alfa_dist = ATN(dist_Y/dist_X) + 360
	if dist_X < EPS and dist_Y < EPS then alfa_dist = ATN(dist_Y/dist_X) + 180
else
	if dist_Y > EPS then alfa_dist =  90
	if dist_Y < EPS then alfa_dist = 270
endif

alfa_north = GLOB_NORTH_DIR - 90
alfa_calc = alfa_dist - alfa_north

! --------- Adjusted Longitude-Latitude distances according to the North direction - (North direction could be rotated - default is 90)
x_rotated = dist * COS(alfa_calc)
y_rotated = dist * SIN(alfa_calc)


! -------- Earth radius in meter

if iCoorSystem = WORLD_COOR_PROJ then
	ANGLE_LAT_ORIG  = GLOB_PROJECT_LATITUDE
	ANGLE_LONG_ORIG = GLOB_PROJECT_LONGITUDE
else
	_multiplyLat = 1 - 2 * (iLatitudeRef = LAT_SOUTH)
	_multiplyLon = 1 - 2 * (iLongitudeRef = LONG_WEST)

	ANGLE_LAT_ORIG  = _multiplyLat * (iLatitudeDegree  + iLatitudeMinute /60 + rLatitudeSecond /3600)
	ANGLE_LONG_ORIG = _multiplyLon * (iLongitudeDegree + iLongitudeMinute/60 + rLongitudeSecond/3600)
endif

! --------- Default earth radius on equator
! --- there are 9 zones in every 10 degrees, the radius are valid in the zone centers (5,15,25... degress)
! --- these radiuses are curveture radius based on 1-degree-distance and circle circumference in zone centers

CURV_RADIUS    = 6335440.942		! ---- Equator

! -------- Radius at zone centers
CURV_RADIUS_05 = 6335924.174
CURV_RADIUS_15 = 6339704.722
CURV_RADIUS_25 = 6346819.884
CURV_RADIUS_35 = 6356427.240
CURV_RADIUS_45 = 6367381.849
CURV_RADIUS_55 = 6378367.914
CURV_RADIUS_65 = 6388055.026
CURV_RADIUS_75 = 6395260.887
CURV_RADIUS_85 = 6399100.621

if abs(iLatitudeDegree) > -EPS 	and abs(iLatitudeDegree) < 10+EPS then CURV_RADIUS = CURV_RADIUS_05
if abs(iLatitudeDegree) > 10 	and abs(iLatitudeDegree) < 20+EPS then CURV_RADIUS = CURV_RADIUS_15
if abs(iLatitudeDegree) > 20 	and abs(iLatitudeDegree) < 30+EPS then CURV_RADIUS = CURV_RADIUS_25
if abs(iLatitudeDegree) > 30 	and abs(iLatitudeDegree) < 40+EPS then CURV_RADIUS = CURV_RADIUS_35
if abs(iLatitudeDegree) > 40 	and abs(iLatitudeDegree) < 50+EPS then CURV_RADIUS = CURV_RADIUS_45
if abs(iLatitudeDegree) > 50 	and abs(iLatitudeDegree) < 60+EPS then CURV_RADIUS = CURV_RADIUS_55
if abs(iLatitudeDegree) > 60 	and abs(iLatitudeDegree) < 70+EPS then CURV_RADIUS = CURV_RADIUS_65
if abs(iLatitudeDegree) > 70 	and abs(iLatitudeDegree) < 80+EPS then CURV_RADIUS = CURV_RADIUS_75
if abs(iLatitudeDegree) > 80 	and abs(iLatitudeDegree) < 90+EPS then CURV_RADIUS = CURV_RADIUS_85


LAT_RADIUS 		= CURV_RADIUS
LONG_RADIUS 	= LAT_RADIUS * COS(ANGLE_LAT_ORIG)

CIRCUMFERENCE_LONG = 2 * LONG_RADIUS * PI
CIRCUMFERENCE_LAT  = 2 * LAT_RADIUS  * PI

angle_x_long = x_rotated / CIRCUMFERENCE_LONG * 360
angle_y_lat  = y_rotated / CIRCUMFERENCE_LAT  * 360


! --------- Decimal angles
ANGLE_LAT_MARKER  = ANGLE_LAT_ORIG  + angle_y_lat
ANGLE_LONG_MARKER = ANGLE_LONG_ORIG + angle_x_long

! --------- Degree/Minute/Second angles
LAT_DEGREE  = INT(ABS(ANGLE_LAT_MARKER ))
LONG_DEGREE = INT(ABS(ANGLE_LONG_MARKER))

LAT_MINUTE  = INT((ABS(ANGLE_LAT_MARKER ) - LAT_DEGREE )*60)
LONG_MINUTE = INT((ABS(ANGLE_LONG_MARKER) - LONG_DEGREE)*60)

LAT_SECOND  = (ABS(ANGLE_LAT_MARKER ) - LAT_DEGREE  - LAT_MINUTE /60)*3600
LONG_SECOND = (ABS(ANGLE_LONG_MARKER) - LONG_DEGREE - LONG_MINUTE/60)*3600


! -------------- North/South, East/West

LAT_LETTER  = `С`
LONG_LETTER = `В`

if ANGLE_LAT_MARKER < -EPS then
	LAT_LETTER = `Ю`
endif

if ANGLE_LONG_MARKER < -EPS then
	LONG_LETTER = `З`
endif


if iCoorSystem = WORLD_COOR_CUST or iCoorSystem = WORLD_COOR_PROJ  then
	text_x_coor = LONG_LETTER + " " + STR(LONG_DEGREE,1,0) + "° " + STR(LONG_MINUTE,1,0) + "' " + STR(LONG_SECOND,3,2) + "''"
	text_y_coor = LAT_LETTER  + " " + STR(LAT_DEGREE, 1,0) + "° " + STR(LAT_MINUTE, 1,0) + "' " + STR(LAT_SECOND, 3,2) + "''"

	text_z_coor = STR(workingLengthUnit, elevWorldCoor + SYMB_POS_Z - CustomOrigZ*bCustomOrig)
endif

unID = 1

!=============================================================================
! Text Styles
!=============================================================================

define style "headerStyle3D"		strFontTypeHeader,		fontSizeHeader3D * 1000,	1,	1 * bBoldHeader + 2 * bItalicHeader + 4 * bUnderlinedHeader
define style "coorStyle3D"			strFontTypeCoor,		fontSizeCoor3D * 1000,		1,	1 * bBoldCoor + 2 * bItalicCoor + 4 * bUnderlinedCoor
define style "IDStyle3D"			strFontTypeID,			fontSizeID3D * 1000,		1,	1 * bBoldID + 2 * bItalicID + 4 * bUnderlinedID
define style "customOrigStyle3D"	strFontTypeCustOrig,	fontSizeCustOrig3D * 1000,	1,	1 * bBoldCustOrig + 2 * bItalicCustOrig + 4 * bUnderlinedCustOrig

set style "headerStyle3D"
req_header = REQUEST ("Height_of_style", "headerStyle3D", hstyle_header3D)
styleHeight_header3D = hstyle_header3D / 1000
fontDepthHeader	= styleHeight_header3D / 10

set style "coorStyle3D"
req_coor = REQUEST ("Height_of_style", "coorStyle3D", hstyle_coor3D)
styleHeight_coor3D = hstyle_coor3D / 1000
fontDepthCoor	= styleHeight_coor3D / 10

set style "IDStyle3D"
req_id = REQUEST ("Height_of_style", "IDStyle3D", hstyle_id3D)
styleHeight_id3D = hstyle_id3D / 1000
fontDepthID		= styleHeight_id3D / 10

set style "customOrigStyle3D"
req_id = REQUEST ("Height_of_style", "customOrigStyle3D", hstyle_OrigStyle3D)
styleHeight_OrigStyle3D = hstyle_OrigStyle3D / 1000
fontDepthOrigStyle		= styleHeight_OrigStyle3D / 10

angleViewRot = 0
rrr = REQUEST ("View_Rotangle", "", angleViewRot)
totalRotate = (SYMB_ROTANGLE + angleViewRot) MOD 360

bReadableTexts		= (iTypeTextRotation = ORIENTATION_READABLE) and (totalRotate > (90 + EPS) and totalRotate < (90 + 180 + EPS))
bHorizontalTexts	= (iTypeTextRotation = ORIENTATION_HORIZONTAL)

rotz -SYMB_ROTANGLE * (iTypeTextRotation = ORIENTATION_HORIZONTAL)

!=============================================================================
! Custom Origin
!=============================================================================

if bCustomOrig and bShowCustomOrig3D then
	rotz -SYMB_ROTANGLE + SYMB_ROTANGLE * (iTypeTextRotation = ORIENTATION_HORIZONTAL)
	add -(SYMB_POS_X + GLOB_WORLD_ORIGO_OFFSET_X), -(SYMB_POS_Y + GLOB_WORLD_ORIGO_OFFSET_Y), -(SYMB_POS_Z + ref_height)

	hotspot 0,				CustomOrigY,	CustomOrigZ,	unID, CustomOrigX, 	1+128
	unID = unID + 1
	hotspot CustomOrigX,	CustomOrigY,	CustomOrigZ,	unID, CustomOrigX, 	2
	unID = unID + 1
	hotspot -1,				CustomOrigY,	CustomOrigZ,	unID, CustomOrigX, 	3
	unID = unID + 1

	hotspot CustomOrigX,	0,				CustomOrigZ,	unID, CustomOrigY, 	1+128
	unID = unID + 1
	hotspot CustomOrigX,	CustomOrigY,	CustomOrigZ,	unID, CustomOrigY, 	2
	unID = unID + 1
	hotspot CustomOrigX,	-1,				CustomOrigZ,	unID, CustomOrigY, 	3
	unID = unID + 1

	hotspot CustomOrigX,	CustomOrigY,	0,				unID, CustomOrigY, 	1+128
	unID = unID + 1
	hotspot CustomOrigX,	CustomOrigY,	CustomOrigZ,	unID, CustomOrigY, 	2
	unID = unID + 1
	hotspot CustomOrigX,	CustomOrigY,	-1,				unID, CustomOrigY, 	3
	unID = unID + 1

	add CustomOrigX, CustomOrigY, CustomOrigZ

	pen penFontCustOrig
	material fontCustOrigMat

	set style "customOrigStyle3D"
	add 0, 0, styleHeight_OrigStyle3D
	rotz SYMB_ROTANGLE * NOT(bHorizontalTexts) + 180 * bReadableTexts
	rotx 90
	text fontDepthOrigStyle, 0, `Специальное Начало`
	del 3

	pen penMarker
	material markerMat1

	rotz 45
	prism_ 12, customOrigThk3D,
		-customOrigThk3D / 2, -customOrigThk3D / 2, 15,
		-customOrigThk3D / 2, -customOrigSize3D / 2, 15,
		customOrigThk3D / 2, -customOrigSize3D / 2, 15,
		customOrigThk3D / 2, -customOrigThk3D / 2, 15,
		customOrigSize3D / 2, -customOrigThk3D / 2, 15,
		customOrigSize3D / 2, customOrigThk3D / 2, 15,
		customOrigThk3D / 2, customOrigThk3D / 2, 15,
		customOrigThk3D / 2, customOrigSize3D / 2, 15,
		-customOrigThk3D / 2, customOrigSize3D / 2, 15,
		-customOrigThk3D / 2, customOrigThk3D / 2, 15,
		-customOrigSize3D / 2, customOrigThk3D / 2, 15,
		-customOrigSize3D / 2, -customOrigThk3D / 2, 15
	del 2

	del 2
endif


!=============================================================================
! Marker
!=============================================================================

pen penMarker

hotspot 0, 0, 0, unID
unID = unID + 1

hotspot 0,	0,	0, unID, markerSize3D, 			1+128
unID = unID + 1
hotspot 0,	0,	markerSize3D, unID, markerSize3D, 	2
unID = unID + 1
hotspot 0,	0,	-1, unID, markerSize3D, 			3
unID = unID + 1

if iMarkerStyle3D = MARKER_CONE then
	coneRad2	= 0.05 * (markerSize3D / 0.18)

	material markerMat1

	addz markerSize3D / 6
	cone markerSize3D * 5 / 6, coneRad2 / 6, coneRad2, 90, 90
	del 1

	material markerMat2

	cone markerSize3D / 6, 0, coneRad2 / 6, 90, 90
endif

if iMarkerStyle3D = MARKER_PYRAMID then
	pyramidRad	= 0.045 * (markerSize3D / 0.18)

	addz markerSize3D
	mulz -1
	fprism_ markerMat1, markerMat1, markerMat1, markerMat1,
		4, markerSize3D * 5 / 6, ATN((markerSize3D * 5 / 6) / (SIN(45) * pyramidRad * 5 / 6)), markerSize3D * 5 / 6,
		-SIN(45) * pyramidRad, -SIN(45) * pyramidRad, 15,
		SIN(45) * pyramidRad, -SIN(45) * pyramidRad, 15,
		SIN(45) * pyramidRad, SIN(45) * pyramidRad, 15,
		-SIN(45) * pyramidRad, SIN(45) * pyramidRad, 15
	del 2

	addz markerSize3D / 6
	mulz -1
	fprism_ markerMat2, markerMat2, markerMat2, markerMat2,
		4, markerSize3D / 6, ATN((markerSize3D * 5 / 6) / (SIN(45) * pyramidRad * 5 / 6)), markerSize3D / 6,
		-SIN(45) * pyramidRad / 6, -SIN(45) * pyramidRad / 6, 15,
		SIN(45) * pyramidRad / 6, -SIN(45) * pyramidRad / 6, 15,
		SIN(45) * pyramidRad / 6, SIN(45) * pyramidRad / 6, 15,
		-SIN(45) * pyramidRad / 6, SIN(45) * pyramidRad / 6, 15
	del 2
endif

if iMarkerStyle3D = MARKER_PIN then
	pinRad		= 0.002 * (markerSize3D / 0.18)
	pinHeadRad	= 0.01 * (markerSize3D / 0.18)

	material markerMat1
	cylind markerSize3D - pinHeadRad * 2, pinRad

	material markerMat2
	addz markerSize3D - pinHeadRad
	sphere pinHeadRad
	del 1
endif

!=============================================================================
! ID at Symbol
!=============================================================================

if bShowMarkerID3D then

	hotspot 0,			ID3D_Y,	ID3D_Z, unID, ID3D_X, 	1+128
	unID = unID + 1
	hotspot ID3D_X,		ID3D_Y,	ID3D_Z, unID, ID3D_X, 	2
	unID = unID + 1
	hotspot -1,			ID3D_Y,	ID3D_Z, unID, ID3D_X, 	3
	unID = unID + 1

	hotspot ID3D_X,		0,		ID3D_Z, unID, ID3D_Y, 	1+128
	unID = unID + 1
	hotspot ID3D_X,		ID3D_Y,	ID3D_Z, unID, ID3D_Y, 	2
	unID = unID + 1
	hotspot ID3D_X,		-1,		ID3D_Z, unID, ID3D_Y, 	3
	unID = unID + 1

	hotspot ID3D_X,		ID3D_Y,	0,		unID, ID3D_Z, 	1+128
	unID = unID + 1
	hotspot ID3D_X,		ID3D_Y,	ID3D_Z, unID, ID3D_Z, 	2
	unID = unID + 1
	hotspot ID3D_X,		ID3D_Y,	-1, 	unID, ID3D_Z, 	3
	unID = unID + 1

	material fontIDMat

	pen penFontID
	set style "IDStyle3D"

	add ID3D_X, ID3D_Y, ID3D_Z
	rotx 90
	text fontDepthID, 0, id_text
	del 2

endif

if bHeader3D or bShowCoorX3D or bShowCoorY3D or (bHeight and bShowCoorZ3D) then

	!=============================================================================
	! Stamp
	!=============================================================================

	hotspot 0,			stamp3D_Y,	stamp3D_Z, unID, stamp3D_X, 	1 + 128
	unID = unID + 1
	hotspot stamp3D_X,	stamp3D_Y,	stamp3D_Z, unID, stamp3D_X, 	2
	unID = unID + 1
	hotspot -1,			stamp3D_Y,	stamp3D_Z, unID, stamp3D_X, 	3
	unID = unID + 1

	hotspot stamp3D_X,	0,			stamp3D_Z, unID, stamp3D_Y, 	1 + 128
	unID = unID + 1
	hotspot stamp3D_X,	stamp3D_Y,	stamp3D_Z, unID, stamp3D_Y, 	2
	unID = unID + 1
	hotspot stamp3D_X,	-1,			stamp3D_Z, unID, stamp3D_Y, 	3
	unID = unID + 1

	hotspot stamp3D_X,	stamp3D_Y,	0, unID, stamp3D_Z, 			1 + 128
	unID = unID + 1
	hotspot stamp3D_X,	stamp3D_Y,	stamp3D_Z, unID, stamp3D_Z, 	2
	unID = unID + 1
	hotspot stamp3D_X,	stamp3D_Y,	-1, unID, stamp3D_Z, 			3
	unID = unID + 1

endif

add stamp3D_X, stamp3D_Y, stamp3D_Z
rotX textRotAngX
rotz textRotAngZ
rotx 90

delnum = 0

pen penFontHeader
set style "headerStyle3D"

if bHeader3D then
	material fontHeaderMat

	if not(bID3D) then
		id_text = ""
		divider = ""
	else
		divider = " "
	endif

	if bAddText3D and strAddTextContent3D <> "" then
		addtext = divider + strAddTextContent3D
	else
		addtext = ""
	endif

	text3D	= id_text + addtext
	gosub "textRotation"

	text fontDepthHeader, 0, text3D

	gosub "textRotationDelete"

	if bID3D or bAddText3D then
		add 0, -styleHeight_header3D, 0
		delnum = delnum + 1
	endif
endif

pen penFontCoor
set style "coorStyle3D"

material fontCoorMat

if bShowCoorX3D then
	text3D	= strPrefix13D + " " + text_x_coor
	gosub "textRotation"

	text fontDepthCoor, 0, text3D

	gosub "textRotationDelete"

	add 0, -styleHeight_coor3D, 0
	delnum = delnum + 1
endif

if bShowCoorY3D then
	text3D	= strPrefix23D + " " + text_y_coor
	gosub "textRotation"

	text fontDepthCoor, 0, text3D

	gosub "textRotationDelete"

	add 0, -styleHeight_coor3D, 0
	delnum = delnum + 1
endif

if bHeight and bShowCoorZ3D then
	text3D	= strPrefix33D + " " + text_z_coor
	gosub "textRotation"

	text fontDepthCoor, 0, text3D

	gosub "textRotationDelete"
endif

del delnum

del 4

del 1

!================================================================================
end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end
!================================================================================

"textRotation":

	if bReadableTexts then
		addx STW(text3D) / 1000
		roty 180
	endif

return

"textRotationDelete":

	if bReadableTexts then del 2

return


