
EPS = 0.0001

POINTER_STRAIGHT		= 1
POINTER_CURVED			= 2

LINECONNTYPE_UP			= 1
LINECONNTYPE_CENTER		= 2
LINECONNTYPE_LO			= 3
LINECONNTYPE_UTEXT		= 4
LINECONNTYPE_UTITLE		= 5

HEADSHAPE_CIRCLE		= 1
HEADSHAPE_RECT			= 2
HEADSHAPE_DIAMOND		= 3
HEADSHAPE_ELLIPSE		= 4
HEADSHAPE_OVAL			= 5
HEADSHAPE_HEXAGON		= 6
HEADSHAPE_OCTOGON		= 7
HEADSHAPE_POINTED_RECT	= 8

TEXT_ALIGN_LEFT			= 1
TEXT_ALIGN_CENTER		= 2
TEXT_ALIGN_RIGHT		= 3

ORIENTATION_READABLE	= 1
ORIENTATION_ALIGNED		= 2

dim stPointerType[2]
	stPointerType[1] = `Прямой`
	stPointerType[2] = `Криволинейная`

dim stLineConnType[5]
	stLineConnType[1] = `Вверху`
	stLineConnType[2] = `По центру`
	stLineConnType[3] = `Внизу`
	stLineConnType[4] = `с Подчеркиванием Текста`
	stLineConnType[5] = `с Подчеркиванием Заголовка`

dim stArrowHeadType[14]
	stArrowHeadType[1] = `Тип 1`
	stArrowHeadType[2] = `Тип 2`
	stArrowHeadType[3] = `Тип 3`
	stArrowHeadType[4] = `Тип 4`
	stArrowHeadType[5] = `Тип 5`
	stArrowHeadType[6] = `Тип 6`
	stArrowHeadType[7] = `Тип 7`
	stArrowHeadType[8] = `Тип 8`
	stArrowHeadType[9] = `Тип 9`
	stArrowHeadType[10] = `Тип 10`
	stArrowHeadType[11] = `Тип 11`
	stArrowHeadType[12] = `Тип 12`
	stArrowHeadType[13] = `Тип 13`
	stArrowHeadType[14] = `Тип 14`

dim stTextAlign[3]
	stTextAlign[1] = `Слева`
	stTextAlign[2] = `По центру`
	stTextAlign[3] = `Справа`

dim stTextOrientation[2]
	stTextOrientation[1] = `Читаемый`
	stTextOrientation[2] = `Выровнять по Символу`

dim stShapeHeadBox[8]
	stShapeHeadBox[1]	= `Окружность`
	stShapeHeadBox[2]	= `Прямоугольник`
	stShapeHeadBox[3]	= `Ромб`
	stShapeHeadBox[4]	= `Эллипс`
	stShapeHeadBox[5]	= `Овал`
	stShapeHeadBox[6]	= `Шестиугольник`
	stShapeHeadBox[7]	= `Восьмиугольник`
	stShapeHeadBox[8]	= `Остроконечный Многоугольник`

bEnablePointersOnSide1	= iPointerNumSide1
bEnablePointersOnSide2	= iPointerNumSide2 * bPointerOnBothSides

textBoxOffsetPaper		= 1.2

totalTextLengthPaper	= textBoxLengthPaper - textBoxOffsetPaper * 2

!=============================================================================
! Title Text Calculations
!=============================================================================

styleTitleTextBit = bTitleTextFontBO + 2 * bTitleTextFontIT + 4 * bTitleTextFontUL + 128 * bTitleTextFontST
define style "titleTextStyle"  titleTextFontType, titleTextFontSize, 1, styleTitleTextBit
set style "titleTextStyle"
rrr = request("Height_of_style", "titleTextStyle", titleTextHeightPaper)

dim	numTitleWordsInRow[]
dim	titleLetterNum[]
dim	titleIsLetter[]
dim	titleWordStartPos[]

tempTitleText			= titleText
numTitleLetters			= strlen(titleText)
startTitleLetterNum		= 0
realTitleRowNum			= 0
maxTitleWordLength		= 0
titleSpaceNum			= 0
titleWordNum			= 1
titleLetterStartPos		= 1
titleTextWidthMod		= titleTextWidthFactor * titleTextSpacingFactor / 10000

for k = 1 to numTitleLetters
	if STRSUB(titleText, k, 1) <> " " and STRSUB(titleText, k, 1) <> "-" then
		titleIsLetter[k] = 1
		startTitleLetterNum = startTitleLetterNum + 1
		titleLetterNum[titleWordNum] = startTitleLetterNum

		if k > 1 then
			if titleIsLetter[k - 1] <> 1 then
				titleWordStartPos[titleLetterStartPos] = k
				titleLetterStartPos = titleLetterStartPos + 1
			endif
		else
			titleWordStartPos[titleLetterStartPos] = k
			titleLetterStartPos = titleLetterStartPos + 1
		endif
	else
		if k > 1 then
			if titleIsLetter[k - 1] <> 0 and k <> numTitleLetters then titleWordNum = titleWordNum + 1
		endif
		titleIsLetter[k] = 0

		titleSpaceNum = titleSpaceNum + 1
		startTitleLetterNum = 0
	endif
next k

titleRealWordNum		= vardim1(titleWordStartPos)
tempTitleRowNum			= titleRealWordNum
tempTitleWordNum		= titleRealWordNum
titleWordN				= 0

dim titleTextRow[]
for j = 1 to tempTitleRowNum
	titleTextRow[j] = ""
next j

for j = 1 to tempTitleRowNum
	for i = 1 to tempTitleWordNum
		tempTitleTextWidthPaper 	= stw(tempTitleText) * titleTextWidthMod

		if tempTitleTextWidthPaper > totalTextLengthPaper then
			if j = 1 then
				tempTitleText	= STRSUB(titleText, 1, titleWordStartPos[tempTitleWordNum - i + 1] - 1)
			else
				tempTitleText	= STRSUB(titleText, titleWordStartPos[titleWordN + 1], titleWordStartPos[vardim1(titleWordStartPos) + 1 - i] - titleWordStartPos[titleWordN + 1])
			endif
		else
			numTitleWordsInRow[j]	= tempTitleWordNum - i + 1
			titleWordN = titleWordN + numTitleWordsInRow[j]
			if numTitleWordsInRow[j] then
				titleTextRow[j]	= tempTitleText
				if titleWordN < vardim1(titleWordStartPos) then tempTitleText	= STRSUB(titleText, titleWordStartPos[titleWordN + 1], strlen(titleText))
				i = tempTitleWordNum

				tempTitleWordNum = tempTitleWordNum - numTitleWordsInRow[j]
			else
				j = tempTitleRowNum
			endif
		endif
	next i
next j

for j = 1 to tempTitleRowNum
	if titleTextRow[j] <> "" then
		realTitleRowNum = realTitleRowNum + 1
	endif
next j

for kk = 1 to titleRealWordNum
	if titleRealWordNum = 1 then
		maxTitleWordPos		= 1
		maxTitleWord 		= STRSUB(titleText, 1, numTitleLetters)
		maxTitleWordLength	= STW(maxTitleWord)
	else
		if kk = 1 then
			maxTitleWordPos		= 1
			maxTitleWord 		= STRSUB(titleText, maxTitleWordPos, titleWordStartPos[kk + 1] - 1)
			maxTitleWordLength	= STW(maxTitleWord)
		else
			if kk = titleRealWordNum then
				if STW(STRSUB(titleText, titleWordStartPos[kk], numTitleLetters - titleWordStartPos[kk] + 1)) > maxTitleWordLength then
					maxTitleWordPos		= titleWordStartPos[kk]
					maxTitleWord 		= STRSUB(titleText, titleWordStartPos[kk], numTitleLetters - titleWordStartPos[kk] + 1)
					maxTitleWordLength	= STW(maxTitleWord)
				endif
			else
				if STW(STRSUB(titleText, titleWordStartPos[kk], titleWordStartPos[kk + 1] - titleWordStartPos[kk])) > maxTitleWordLength then
					maxTitleWordPos		= titleWordStartPos[kk]
					maxTitleWord 		= STRSUB(titleText, titleWordStartPos[kk], titleWordStartPos[kk + 1] - titleWordStartPos[kk])
					maxTitleWordLength	= STW(maxTitleWord)
				endif
			endif
		endif
	endif
next kk

minTitleTextBoxLengthPaper	= maxTitleWordLength + textBoxOffsetPaper * 2
totalTitleTextHeightPaper	= realTitleRowNum * titleTextHeightPaper * titleTextLeading / 100

!=============================================================================
! Label Text Calculations
!=============================================================================

styleLabelTextBit = bLabelTextFontBO + 2 * bLabelTextFontIT + 4 * bLabelTextFontUL + 128 * bLabelTextFontST
define style "labelTextStyle"  labelTextFontType, labelTextFontSize, 1, styleLabelTextBit
set style "labelTextStyle"
rrr = request("Height_of_style", "labelTextStyle", labelTextHeightPaper)

dim	numLabelWordsInRow[]
dim	labelLetterNum[]
dim	labelIsLetter[]
dim	labelWordStartPos[]

tempLabelText			= labelText
numLabelLetters			= strlen(labelText)
startLabelLetterNum		= 0
realLabelRowNum			= 0
maxLabelWordLength		= 0
labelSpaceNum			= 0
labelWordNum			= 1
labelLetterStartPos		= 1
labelTextWidthMod		= labelTextWidthFactor * labelTextSpacingFactor / 10000

for k = 1 to numLabelLetters
	if STRSUB(labelText, k, 1) <> " " and STRSUB(labelText, k, 1) <> "-" then
		labelIsLetter[k] = 1
		startLabelLetterNum = startLabelLetterNum + 1
		labelLetterNum[labelWordNum] = startLabelLetterNum

		if k > 1 then
			if labelIsLetter[k - 1] <> 1 then
				labelWordStartPos[labelLetterStartPos] = k
				labelLetterStartPos = labelLetterStartPos + 1
			endif
		else
			labelWordStartPos[labelLetterStartPos] = k
			labelLetterStartPos = labelLetterStartPos + 1
		endif
	else
		if k > 1 then
			if labelIsLetter[k - 1] <> 0 and k <> numLabelLetters then labelWordNum = labelWordNum + 1
		endif
		labelIsLetter[k] = 0

		labelSpaceNum = labelSpaceNum + 1
		startLabelLetterNum = 0
	endif
next k

labelRealWordNum		= vardim1(labelWordStartPos)
tempLabelRowNum			= labelRealWordNum
tempLabelWordNum		= labelRealWordNum
labelWordN				= 0

dim labelTextRow[]
for j = 1 to tempLabelRowNum
	labelTextRow[j] = ""
next j

for j = 1 to tempLabelRowNum
	for i = 1 to tempLabelWordNum
		tempLabelTextWidthPaper	= stw(tempLabelText) * labelTextWidthMod

		if tempLabelTextWidthPaper > totalTextLengthPaper then
			if j = 1 then
				tempLabelText	= STRSUB(labelText, 1, labelWordStartPos[tempLabelWordNum - i + 1] - 1)
			else
				tempLabelText	= STRSUB(labelText, labelWordStartPos[labelWordN + 1], labelWordStartPos[vardim1(labelWordStartPos) + 1 - i] - labelWordStartPos[labelWordN + 1])
			endif
		else
			numLabelWordsInRow[j]	= tempLabelWordNum - i + 1
			labelWordN = labelWordN + numLabelWordsInRow[j]
			if numLabelWordsInRow[j] then
				labelTextRow[j]	= tempLabelText
				if labelWordN < vardim1(labelWordStartPos) then tempLabelText	= STRSUB(labelText, labelWordStartPos[labelWordN + 1], strlen(labelText))
				i = tempLabelWordNum

				tempLabelWordNum = tempLabelWordNum - numLabelWordsInRow[j]
			else
				j = tempLabelRowNum
			endif
		endif
	next i
next j

for j = 1 to tempLabelRowNum
	if labelTextRow[j] <> "" then
		realLabelRowNum = realLabelRowNum + 1
	endif
next j

for kk = 1 to labelRealWordNum
	if labelRealWordNum = 1 then
		maxLabelWordPos		= 1
		maxLabelWord 		= STRSUB(labelText, 1, numLabelLetters)
		maxLabelWordLength	= STW(maxLabelWord)
	else
		if kk = 1 then
			maxLabelWordPos		= 1
			maxLabelWord 		= STRSUB(labelText, maxLabelWordPos, labelWordStartPos[kk + 1] - 1)
			maxLabelWordLength	= STW(maxLabelWord)
		else
			if kk = labelRealWordNum then
				if STW(STRSUB(labelText, labelWordStartPos[kk], numLabelLetters - labelWordStartPos[kk] + 1)) > maxLabelWordLength then
					maxLabelWordPos		= labelWordStartPos[kk]
					maxLabelWord 		= STRSUB(labelText, labelWordStartPos[kk], numLabelLetters - labelWordStartPos[kk] + 1)
					maxLabelWordLength	= STW(maxLabelWord)
				endif
			else
				if STW(STRSUB(labelText, labelWordStartPos[kk], labelWordStartPos[kk + 1] - labelWordStartPos[kk])) > maxLabelWordLength then
					maxLabelWordPos		= labelWordStartPos[kk]
					maxLabelWord 		= STRSUB(labelText, labelWordStartPos[kk], labelWordStartPos[kk + 1] - labelWordStartPos[kk])
					maxLabelWordLength	= STW(maxLabelWord)
				endif
			endif
		endif
	endif
next kk

minLabelTextBoxLengthPaper	= (maxLabelWordLength + textBoxOffsetPaper * 2)
totalLabelTextHeightPaper	= realLabelRowNum * labelTextHeightPaper * labelTextLeading / 100

totalTextHeightPaper	= totalTitleTextHeightPaper + totalLabelTextHeightPaper
textBoxHeightPaper		= totalTextHeightPaper + textBoxOffsetPaper * 2 

minTextBoxLengthPaper	= MAX(minTitleTextBoxLengthPaper, minLabelTextBoxLengthPaper) * (1 + EPS * 10)

if iLineConnType = LINECONNTYPE_UP 		then commonPointPosYPaper = -textBoxOffsetPaper
if iLineConnType = LINECONNTYPE_CENTER	then commonPointPosYPaper = -textBoxOffsetPaper - totalTextHeightPaper / 2
if iLineConnType = LINECONNTYPE_LO		then commonPointPosYPaper = -textBoxOffsetPaper - totalTextHeightPaper
if iLineConnType = LINECONNTYPE_UTITLE	then commonPointPosYPaper = -textBoxOffsetPaper - titleTextHeightPaper * titleTextLeading / 100
if iLineConnType = LINECONNTYPE_UTEXT	then commonPointPosYPaper = -textBoxOffsetPaper - totalTextHeightPaper

