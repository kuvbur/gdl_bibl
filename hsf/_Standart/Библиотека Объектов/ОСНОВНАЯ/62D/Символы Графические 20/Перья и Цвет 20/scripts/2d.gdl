

dim icolorData[][4]
for i = 1 to nColors

	x = request ("RGB_of_pen", i, red, green, blue)

	if x then
		icolorData[i][1] = i
		icolorData[i][2] = INT (red*255)
		icolorData[i][3] = INT (green*255)
		icolorData[i][4] = INT (blue*255)
	endif
next i


if bLockSymbol then
	! --- Oriented View ------------------------------ [

	angleViewRot = 0
	rrr = REQUEST ("View_Rotangle", "", angleViewRot)
	totalRotate = (SYMB_ROTANGLE + angleViewRot) MOD 360

	! --- Oriented View ------------------------------ ]

	add2 -0.4,1.4
	rot2 -totalRotate
	add2 0.4,-1.4
endif

define style "NumberStyle" fontType,10/GLOB_SCALE*font_size,7,fe
style "NumberStyle"

drawindex 20
unID = 1
nRow = 0
nVertDistance	= 0
nHorizDistance 	= 0

if iPenColorSymbStyle = SYMBOL_STYLE_2 then

	horizDistance = 4.5
vertDistance = 1.2

for i = 1 to nColors

		PEN icolorData[i][1]

	fill fillType

		poly2_b   5,      2,      icolorData[i][1],     icolorData[i][1],
				0.0,     0.0,      1,
			1.0,     0.0,      1,
				1.0,     0.6,      1,
				0.0,     0.6,      1,
				0.0,     0.0,      -1

		line2 1.3, 0.1, 3.7, 0.1

		pen textPen
		add2 1.32,0.11
		text2 0,0,`Перо`

		penNL = STW(`Перо`)*GLOB_SCALE/1000

		text2 penNL,0," "+STR(icolorData[i][1],1,0)+ "    R: " + STR(icolorData[i][2],1,0) \
			+ "    G: " + STR(icolorData[i][3],1,0)+ "    B: " + STR(icolorData[i][4],1,0)

		del 1

	add2 horizDistance,0
	nHorizDistance = nHorizDistance + 1

		if (i % nFillsInARow = 0) and (i <> nColors) then
		del nFillsInARow
		nHorizDistance = nHorizDistance - nFillsInARow
		add2 0, -vertDistance
		nVertDistance= nVertDistance + 1
	endif
	next i

	RectX1 = -0.4
	RectY1 = 1.4
	RectX2 = nFillsInARow * horizDistance
	RectY2 = -(nVertDistance * vertDistance)-0.4

else

	horizDistance = 2
	vertDistance = 1.2

	for i = 1 to nColors

		PEN icolorData[i][1]

		fill fillType

		poly2_b   7,      2,      icolorData[i][1],     icolorData[i][1],
			0.6,     0.0,      1,
				1.0,     0.0,      1,
			1.0,     1.0,      1,
			0.0,     1.0,      1,
			0.0,     0.4,      1,
			0.6,     0.4,      1,
			0.6,     0.0,     -1

		pen textPen
		text2 0.02,0.01,icolorData[i][1]
		rect2 0,0,1,1

		text2 1.05, 0.65,"R:"
		text2 1.05, 0.325,"G:"
		text2 1.05, 0,  "B:"
		text2 1.4,  0.65,   icolorData[i][2]
		text2 1.4,  0.325,  icolorData[i][3]
		text2 1.4,  0,  icolorData[i][4]


		add2 horizDistance,0
		nHorizDistance = nHorizDistance + 1

		if (i % nFillsInARow = 0) and (i <> nColors) then
			del nFillsInARow
			nHorizDistance = nHorizDistance - nFillsInARow
			add2 0, -vertDistance
			nVertDistance = nVertDistance + 1
		endif
next i

	RectX1 = -0.4
	RectY1 = 1.4
	RectX2 = nFillsInARow * horizDistance
	RectY2 = -(nVertDistance * vertDistance) - 0.4
endif


del nVertDistance + nHorizDistance
if nColors / nFillsInARow = int(nColors / nFillsInARow) then nVertDistance  = nVertDistance  -1

hotspot2 RectX1,		RectY1,			unID : unID = unID  + 1
hotspot2 RectX1, 		RectY2,			unID : unID = unID  + 1
hotspot2 RectX2,		RectY2,			unID : unID = unID  + 1
hotspot2 RectX2,		RectY1,			unID : unID = unID  + 1
hotspot2 RectX2/2-0.2,	RectY2/2+0.5,	unID : unID = unID  + 1

if bFrame then rect2 RectX1, RectY1, RectX2, RectY2

drawindex 10

fill gs_fill_type
poly2_B	5,2,gs_fill_pen,gs_back_pen,
		RectX1,			RectY1,				1,
		RectX2,		RectY1,				1,
		RectX2,		RectY2,	1,
		RectX1,		RectY2,	1,
		RectX1,		RectY1,				-1

if bLockSymbol then del 1

END
