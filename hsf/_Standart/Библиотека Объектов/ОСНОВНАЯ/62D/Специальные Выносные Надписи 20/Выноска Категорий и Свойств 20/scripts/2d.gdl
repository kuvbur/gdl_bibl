
! ==============================================================================
! Functions:
! - Offered Tools: all
! - Content: Additional Tags
! - Sizes: in paper size
! ==============================================================================
_isPreview = (GLOB_CONTEXT = 5)
_paperToModel = GLOB_SCALE/1000

! resizing paper size parameters values to model length
widthTextBoxPrefix_mm	= widthTextBoxPrefix_mm * _paperToModel
widthTextBoxContent_mm	= widthTextBoxContent_mm * _paperToModel

gosub "install_label_position"

if not(_isEnabledContent) then
	! - Offered Tools: All Tools exept Independent
	call "label_placeholder" parameters bitAvailableTool 	= 2+4+8+16+32+64+128+256+512+1024+2048+4096+8192+16384+32768+262144+524288+1048576,
										filltypeBackground 	= filltypeBackground
	end
endif

gosub "collect_content"

gosub "position_and_draw_table"

! ==============================================================================
END	!END	!END	!END	!END	!END	!END	!END	!END	!END	!END
! ==============================================================================

! ==============================================================================
"install_label_position":
! ------------------------------------------------------------------------------
! Label positioning - global behavior for Table form Labels
! - origin is where AC gives, the table begins with top left anchor 
! - orientation is rotated with the parent structure by default
! - without AC Arrow
! 		- the origin is at the arrow peak
! 		- rotating with parent elem direction
! 		- Reference Point is cordinated by user
! - with AC Arrow
!		- the origin is at the boundary
!		- handling of rotation is belongs to AC (AC_CustomReadabilty OFF)
!		- Reference Point is cordinated at Pointer tabpage
!
! LABEL_POSITION 	- position of the label
! 					- array[3][2] containing the coordinates of the 3 points defining the label position 
!
! - the other transformations live in the label_form_macro
! ==============================================================================

	nTrans = 0

	if LABEL_CUSTOM_ARROW then
	
		add2 	LABEL_POSITION [2][1]	+	LABEL_POSITION [3][1],
				LABEL_POSITION [2][2]	+	LABEL_POSITION [3][2]

	endif

return

! ==============================================================================
"collect_content":
! ------------------------------------------------------------------------------
! Additional Tags`re sorted from the Tags and Categories
! - subroutine function: setting number of Additional Tags rows and content
! "None" displaying is by design:
! if a user sets the create sortings row type to none, then empty rows 
! (epmty instead "none") would be displayed only between two non-empty rows,
! At the begin and at the end the empty rows are not displyed. 
! For analyzing use TnCParamRequest macro with _sContentTnC array as returned variable
! for help:
! 	call "TnCParamRequest" parameters all bDebug = 1
! ==============================================================================
	nTrans = 0

    ! ==============================================================================
    ! collect content text 
    ! ==============================================================================

	dim prefixTnC[]
		prefixTnC[1] = ""
	dim contentTnC[][1]
		contentTnC[1][1] = ""

	! Initialization for returned parameters
	nRowProperty = 0
	nColuProperty = 0
	dim listProperty[]
		listProperty[1] = ""


	! Request results in multiple rows: 
	!  group = 2; name = 3; value = 5
	DIM _columns[5]	! [iTncDisplayData]
		_columns[1] =     3 * 5	! DISPLAYDATABY_NAMEVALUE
		_columns[2] =     3   	! DISPLAYDATABY_NAME
		_columns[3] =         5	! DISPLAYDATABY_VALUE
		_columns[4] = 2 * 3    	! DISPLAYDATABY_GROUPNAME
		_columns[5] = 2 * 3 * 5	! DISPLAYDATABY_GROUPNAMEVALUE

	call "TnCParamRequest" parameters all 	bShowAdditionalTags	= 1,

											! settings for parameter script
											bEnableHideTnCParameters 	= 1,

											! displayed datas of properties
											bUsePropertyFolder			= not(_columns[iTncDisplayData] mod 2),
											bUsePropertyID				= 0,
											bUsePropertyName			= not(_columns[iTncDisplayData] mod 3),
											bUsePropertyValue 			= not (_columns[iTncDisplayData] mod 5),
											bUsePropertyType			= 0,

						returned_parameters nRowProperty, nColuProperty, listProperty
						! listProperty is became to a single dimension array (a type of linear array)
						! it has to be sepparated by each columns

	! Converting rows of the result
	for i = 1 to nRowProperty
		! initializaton
		prefixTnC[i] = ""
		contentTnC[i][1] = ""

		! Set first column
		contentTnC[i][1] = listProperty[nColuProperty * (i-1) + nColuProperty]

		! Set second column 
		if nColuProperty > 1 then
			prefixTnC[i] = listProperty[nColuProperty * (i-1) + 1]
		endif

		! Hack: if more columns, concatenate to the first column
		for j = 2 to nColuProperty - 1
			cellValue = listProperty[nColuProperty * (i-1) + j]
			_separator1 = ""
			_separator2 = ""
			if prefixTnC[i] # "" and cellValue # "" then
				_separator1 = " ("
				_separator2 = ")"
			endif
			prefixTnC[i] = cellValue + _separator1 + prefixTnC[i] + _separator2
		next j
	next i

	_numTnCRow = nRowProperty

	if _numTnCRow = 0 then
		contentTnC[1][1] = `<нет содержимого>`
	endif
return

! ==============================================================================
"position_and_draw_table":
! ------------------------------------------------------------------------------
! Text Style tabpage:
! LABEL_CUSTOM_ARROW 		- use symbol arrow option
!								- on/off 1 if the Use symbol arrow checkbox is checked, 0 otherwise
! LABEL_ARROW_LINETYPE 		- line type of the line of the arrow
! LABEL_ARROW_PEN 			- pen of the arrow
! LABEL_FONT_NAME 			- font name
! LABEL_TEXT_SIZE			- text size
! LABEL_TEXT_PEN 			- pen of the text
! LABEL_TEXT_BG_PEN			- text box background pen
! 								- 0 if opaque is off, the background pen otherwise
! LABEL_FONT_STYLE2 		- font style in the settings dialog box
!								- 0 - normal, otherwise j1 + 2*j2 + 4*j3 + 32*j6 + 64*j7 + 128*j8, j1 - bold, j2 - italic, j3 - underline, j6 - superscript, j7 - subscript, j8 - strikethrough 
!								- there is strikethrough and this global works well with define style{2} !
! LABEL_FRAME_ON			- label frame on/off 1 if the label frame is checked, 0 otherwise
! LABEL_ROTANGLE 			- rotation angle using by AC (this rotation is not from GDL)
! LABEL_TEXT_ALIGN			- text alignment for full table
!								- 1 - left aligned, 2 - center aligned, 3 - right aligned, 4 - full justified
! LABEL_TEXT_LEADING 		- line spacing factor
! LABEL_TEXT_WIDTH_FACT 	- width factor
! LABEL_TEXT_CHARSPACE_FACT - spacing factor
! ==============================================================================

	_angleParentDirection = 0
	if not(_isPreview) then
		_angleParentDirection = LABEL_ASSOC_ELEM_ORIENTATION
	endif

	call "label_table_form" parameters AC_CustomReadability = AC_CustomReadability,
		bUseBuiltinPointer			= not(LABEL_CUSTOM_ARROW),
		bAlwaysReadable				= LABEL_ALWAYS_READABLE,

		anglePosition 				= LABEL_ROTANGLE,
		angleParentPosition			= _angleParentDirection,
		bUsePrefixColumn			= (nColuProperty > 1),
		bUseContentColumn			= 1,
		sPrefixStrings				= prefixTnC,
		sContentStrings				= contentTnC,
		bWrapText					= LABEL_TEXT_WRAP,
		widthTextBoxPrefix_mm		= widthTextBoxPrefix_mm,
		widthTextBoxContent_mm		= widthTextBoxContent_mm,
		bEnableCustomHeaderStyle 	= 0,
		bUseCustomHeaderStyle		= 0,
		xFirstIndentParagraph		= 0,
		xLeftIndentParagraph		= 0,
		xRightIndentParagraph		= 0,
		xTabPositionParagraph		= 0,
		widthFactorTextBlock		= LABEL_TEXT_WIDTH_FACT,
		charspaceFactorTextBlock	= LABEL_TEXT_CHARSPACE_FACT,
		iFixedHeightTextBlock		= 0,		! fixed_height 	1: the placed TEXTBLOCK will be scale-independent and all specified length type parameters will mean millimeters, !
				 											!0: the placed TEXTBLOCK will be scale-dependent and all specified length type parameters will mean meters in model space
		penTextBody					= LABEL_TEXT_PEN,
		sTypeFontBody				= LABEL_FONT_NAME,
		iStyleFontBody				= LABEL_FONT_STYLE2,
		sizeFontBody				= LABEL_TEXT_SIZE,
		iAlignmentTableColumns		= LABEL_TEXT_ALIGN,			! 0: custom, 1: left aligned, 2: center aligned, 3: right aligned, 4: full justified
		sizeLeadingBody				= LABEL_TEXT_LEADING,
		widthTextBoxOffset			= LABEL_FRAME_OFFSET * _paperToModel,

		bShowFill					= 1,
		filltype					= filltypeBackground,
		penForeground				= LABEL_TEXT_BG_PEN,
		penBackground				= LABEL_TEXT_BG_PEN,
		bShowFrame					= LABEL_FRAME_ON,
		penFrame					= LABEL_ARROW_PEN,
		lineTypeFrame				= LABEL_ARROW_LINETYPE,
		iFrameStyle					= iFrameStyle,
		iReferencePoint				= iReferencePoint,
		iLabelOrientation 			= iLabelOrientation
		
return
