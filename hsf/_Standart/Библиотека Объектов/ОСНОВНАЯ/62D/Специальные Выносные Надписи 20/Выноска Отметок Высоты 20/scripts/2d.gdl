
! ==============================================================================
! Functions:
! - Offered Tools: All except Object, Lamp, Window, Door, Wall, Column, Slab, Beam, Curtain Wall
! - Content: Elevation datas
! - Sizes: in paper size
! ==============================================================================
_isPreview = (GLOB_CONTEXT = 5)
_paperToModel = GLOB_SCALE/1000

! resizing paper size parameters values to model length
widthTextBoxPrefix_mm		= widthTextBoxPrefix_mm * _paperToModel
widthTextBoxContent_mm		= widthTextBoxContent_mm * _paperToModel

gosub "install_label_position"

if not(_isEnabledContent) then
	! - Offered Tools: All except Object, Lamp, Window, Door, Wall, Column, Slab, Beam, Curtain Wall
	call "label_placeholder" parameters bitAvailableTool 	= 2+4+8+16+32+64+128+4096+8192,
										filltypeBackground 	= filltypeBackground
	end
endif


gosub "collect_content"

gosub "position_and_draw_table"

! ==============================================================================
END	!END	!END	!END	!END	!END	!END	!END	!END	!END	!END
! ==============================================================================

! ==============================================================================
"install_label_position":
! ------------------------------------------------------------------------------
! Label positioning - global behavior for Table form Labels
! - origin is where AC gives, the table begins with top left anchor 
! - orientation is rotated with the parent structure by default
! - without AC Arrow
! 		- the origin is at the arrow peak
! 		- rotating with parent elem direction
! 		- Reference Point is cordinated by user
! - with AC Arrow
!		- the origin is at the boundary
!		- handling of rotation is belongs to AC (AC_CustomReadabilty OFF)
!		- Reference Point is cordinated at Pointer tabpage
!
! LABEL_POSITION 	- position of the label
! 					- array[3][2] containing the coordinates of the 3 points defining the label position 
!
! - the other transformations live in the label_form_macro
! ==============================================================================

	nTrans = 0

	if LABEL_CUSTOM_ARROW then
	
		add2 	LABEL_POSITION [2][1]	+	LABEL_POSITION [3][1],
				LABEL_POSITION [2][2]	+	LABEL_POSITION [3][2]
	endif

return

! ==============================================================================
"collect_content":
! ------------------------------------------------------------------------------
! ==============================================================================
	nTrans = 0

    ! ==============================================================================
    ! collect content text
    ! ==============================================================================
	dim _sPrefixStrings[]
	dim _sContentStrings[][]
		_sPrefixStrings[1] = ""
		_sContentStrings[1][1] = `<нет содержимого>`

	dim _sRowsOfLabel[][]
		_sRowsOfLabel[1][1] = ""
	dim _sNameOfRow[]
		_sNameOfRow[1] = ""
	dim _forPrefix[]

	iRow = 1
	if bShowElevTop then
		_forPrefix[iRow] = sDescriptionElevTop
		iRow = iRow + 1
	endif
	if bSHowElevBottom then
		_forPrefix[iRow] = sDescriptionElevBottom
	endif


	_nRowLabel = 1

	gosub "call_general_label_macro"	! returned textblock sizes

	for i = 1 to _nRowLabel
		for j = 1 to 30
			_sPrefixStrings[i] = _forPrefix[i]
			_sContentStrings[i][j] = _sRowsOfLabel[i][j]
		next j
	next i
return

! ==============================================================================
"position_and_draw_table":
! ------------------------------------------------------------------------------
! Text Style tabpage:
! LABEL_CUSTOM_ARROW 		- use symbol arrow option
!								- on/off 1 if the Use symbol arrow checkbox is checked, 0 otherwise
! LABEL_ARROW_LINETYPE 		- line type of the line of the arrow
! LABEL_ARROW_PEN 			- pen of the arrow
! LABEL_FONT_NAME 			- font name
! LABEL_TEXT_SIZE			- text size
! LABEL_TEXT_PEN 			- pen of the text
! LABEL_TEXT_BG_PEN			- text box background pen
! 								- 0 if opaque is off, the background pen otherwise
! LABEL_FONT_STYLE2 		- font style in the settings dialog box
!								- 0 - normal, otherwise j1 + 2*j2 + 4*j3 + 32*j6 + 64*j7 + 128*j8, j1 - bold, j2 - italic, j3 - underline, j6 - superscript, j7 - subscript, j8 - strikethrough 
!								- there is strikethrough and this global works well with define style{2} !
! LABEL_FRAME_ON			- label frame on/off 1 if the label frame is checked, 0 otherwise
! LABEL_ROTANGLE 			- rotation angle using by AC (this rotation is not from GDL)
! LABEL_TEXT_ALIGN			- text alignment for full table
!								- 1 - left aligned, 2 - center aligned, 3 - right aligned, 4 - full justified
! LABEL_TEXT_LEADING 		- line spacing factor
! LABEL_TEXT_WIDTH_FACT 	- width factor
! LABEL_TEXT_CHARSPACE_FACT - spacing factor
! ==============================================================================

	_angleParentDirection = 0
	if not(_isPreview) then
		_angleParentDirection = LABEL_ASSOC_ELEM_ORIENTATION
	endif

	call "label_table_form" parameters AC_CustomReadability = AC_CustomReadability,
		bUseBuiltinPointer			= not(LABEL_CUSTOM_ARROW),
		bAlwaysReadable				= LABEL_ALWAYS_READABLE,

		anglePosition 				= LABEL_ROTANGLE,
		angleParentPosition			= _angleParentDirection,
		bUsePrefixColumn			= bUsePrefixColumn,
		bUseContentColumn			= 1,
		sPrefixStrings				= _sPrefixStrings,
		sContentStrings				= _sContentStrings,
		bWrapText					= LABEL_TEXT_WRAP,
		widthTextBoxPrefix_mm		= widthTextBoxPrefix_mm,
		widthTextBoxContent_mm		= widthTextBoxContent_mm,
		bEnableCustomHeaderStyle 	= 0,
		bUseCustomHeaderStyle		= 0,
		xFirstIndentParagraph		= 0,
		xLeftIndentParagraph		= 0,
		xRightIndentParagraph		= 0,
		xTabPositionParagraph		= 0,
		widthFactorTextBlock		= LABEL_TEXT_WIDTH_FACT,
		charspaceFactorTextBlock	= LABEL_TEXT_CHARSPACE_FACT,
		iFixedHeightTextBlock		= 0,		! fixed_height 	1: the placed TEXTBLOCK will be scale-independent and all specified length type parameters will mean millimeters, !
				 											!0: the placed TEXTBLOCK will be scale-dependent and all specified length type parameters will mean meters in model space
		penTextBody					= LABEL_TEXT_PEN,
		sTypeFontBody				= LABEL_FONT_NAME,
		iStyleFontBody				= LABEL_FONT_STYLE2,
		sizeFontBody				= LABEL_TEXT_SIZE,
		iAlignmentTableColumns		= LABEL_TEXT_ALIGN,			! 0: custom, 1: left aligned, 2: center aligned, 3: right aligned, 4: full justified
		sizeLeadingBody				= LABEL_TEXT_LEADING,
		widthTextBoxOffset			= LABEL_FRAME_OFFSET * _paperToModel,

		bShowFill					= 1,
		filltype					= filltypeBackground,
		penForeground				= LABEL_TEXT_BG_PEN,
		penBackground				= LABEL_TEXT_BG_PEN,
		bShowFrame					= LABEL_FRAME_ON,
		penFrame					= LABEL_ARROW_PEN,
		lineTypeFrame				= LABEL_ARROW_LINETYPE,
		iFrameStyle					= iFrameStyle,
		iReferencePoint				= iReferencePoint,
		iLabelOrientation 			= iLabelOrientation
		
return

! ==============================================================================
"call_general_label_macro":
! ------------------------------------------------------------------------------
! input: 
!	
!	
! input variable
!	totalRotate
!	_drawContent - 0 - calculating only, 1 - draw text
!	_contentType	1 - FOR_HEAD, 2 - FOR_LIST
!
! output variable:
!	_widthTextBlock, _heightTextBlock
! ==============================================================================

	CONTENT_ELEV	= 9
	dim _iSelectedContent[]
		_iSelectedContent[1] = CONTENT_ELEV

	dim _iUnitLocal[11]
		for iA = 1 to 11
			_iUnitLocal[iA] = 0
		next iA
	_iUnitLocal[CONTENT_ELEV] = iWorkUnitLinear

	_nRowLabel = 0
	dim tempsRowsOfLabel[]
		tempsRowsOfLabel[1] = ""

	call "label_content_macro" parameters all iSelectedContent = _iSelectedContent,

			bUsePrefixColumn		= 0,	! no need the Elevation description, this is custom row by row

			bShowHotspots			= 0,
			bShow2D					= 0,
			iAnchorDataBox			= 1,
			bShowFrame				= LABEL_FRAME_ON,
			bShowFill				= 1,
			iUnitLocal				= _iUnitLocal,
			bDecimalOptions			= 1, ! Enable Decimal options
			iWorkUnitLinearDecimal	= iWorkUnitLinearDecimal,
			anglePosition			= 0,
			bShowSuperScript		= 1,
			bShowUnit				= bShowUnit,

			bShowSeparatorLines			= 0,
			bSeparatorLinesbyContent 	= 0,
			bChangeSkinDirection		= 0,

			bShowElevTop				= bShowElevTop,
			bShowElevBottom				= bShowElevBottom,
			strPrefixElevTop			= "",
			strSuffixElevTop			= strSuffixElevTop,
			strPrefixElevBottom			= "",
			strSuffixElevBottom			= strSuffixElevBottom,
			iRefStory					= iRefStory,
			iElevationTopMeasuredTo 	= iElevationTopMeasuredTo,
			iElevationBottomMeasuredTo 	= iElevationBottomMeasuredTo,

			iCallingObject			= 0,
			bUseInSingleRank		= 0,

			AC_TextFont				= LABEL_FONT_NAME,
			AC_TextSize				= LABEL_TEXT_SIZE * GLOB_SCALE/1000,
			AC_TextStyle			= LABEL_FONT_STYLE2,

			returned_parameters _nRowLabel, tempsRowsOfLabel

		dim _sRowsOfLabel[][]
			_sRowsOfLabel[1][1] = ""

		idx = 0
		for i = 1 to _nRowLabel
			for j = 1 to 30
				_sRowsOfLabel[i][j] = tempsRowsOfLabel[idx + j]
			next j
			idx = idx + 30
		next i

return
