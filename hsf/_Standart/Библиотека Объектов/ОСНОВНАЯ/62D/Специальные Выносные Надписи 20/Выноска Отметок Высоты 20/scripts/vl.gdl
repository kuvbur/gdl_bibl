

if not(_isEnabledContent) then
	lock all
endif

! =============================================================================
! Appearence
! =============================================================================

values "gs_ui_current_page" 1,2,3

call "label_table_form" parameters AC_CustomReadability = AC_CustomReadability,
	bUseBuiltinPointer			= not(LABEL_CUSTOM_ARROW),
	anglePosition 				= LABEL_ROTANGLE,
	bUsePrefixColumn			= bUsePrefixColumn & (sDescriptionElevTop <> "" or sDescriptionElevBottom <> ""),
	bUseContentColumn			= 1,
	!sPrefixStrings				= prefixTnC,
	!sContentStrings			= contentTnC,
	bWrapText					= LABEL_TEXT_WRAP,
	widthTextBoxPrefix_mm		= widthTextBoxPrefix_mm,
	widthTextBoxPrefix_pt		= widthTextBoxPrefix_pt,
	widthTextBoxContent_mm		= widthTextBoxContent_mm,
	widthTextBoxContent_pt		= widthTextBoxContent_pt,
	bEnableCustomHeaderStyle 	= 0,
	bUseCustomHeaderStyle		= 0,
	xFirstIndentParagraph		= 0,
	xLeftIndentParagraph		= 0,
	xRightIndentParagraph		= 0,
	xTabPositionParagraph		= 0,
	widthFactorTextBlock		= LABEL_TEXT_WIDTH_FACT,
	charspaceFactorTextBlock	= LABEL_TEXT_CHARSPACE_FACT,
	iFixedHeightTextBlock		= 0,

	penTextBody					= LABEL_TEXT_PEN,
	sTypeFontBody				= LABEL_FONT_NAME,
	iStyleFontBody				= LABEL_FONT_STYLE2,
	sizeFontBody				= LABEL_TEXT_SIZE,
	iAlignmentTableColumns		= LABEL_TEXT_ALIGN,			! 0: custom, 1: left aligned, 2: center aligned, 3: right aligned, 4: full justified
	sizeLeadingBody				= LABEL_TEXT_LEADING,

	bShowFill					= 1,
	filltype					= filltypeBackground,
	penForeground				= LABEL_TEXT_BG_PEN,
	penBackground				= LABEL_TEXT_BG_PEN,
	bShowFrame					= LABEL_FRAME_ON,
	penFrame					= LABEL_ARROW_PEN,
	lineTypeFrame				= LABEL_ARROW_LINETYPE,
	iFrameStyle					= iFrameStyle,
	iReferencePoint				= iReferencePoint,
	iLabelOrientation 			= iLabelOrientation

! ==============================================================================
! Content Setup
! ==============================================================================


values{2} "iRefStory"	_REF_STORY,		_stRefStory

values{2} "iElevationTopMeasuredTo"		ELEV_MESURED_FINISH,	_sElevationMeasuredTo[1],
										ELEV_MESURED_CORE,		_sElevationMeasuredTo[2]

values{2} "iElevationBottomMeasuredTo"	ELEV_MESURED_FINISH,	_sElevationMeasuredTo[1],
										ELEV_MESURED_CORE,		_sElevationMeasuredTo[2]

values{2} "iWorkUnitLinear"	DIMUNIT_MM,			stUnitFormats[1],
							DIMUNIT_CM,			stUnitFormats[2],
							DIMUNIT_DM,			stUnitFormats[3],
							DIMUNIT_METER,		stUnitFormats[4],
							DIMUNIT_INCH,		stUnitFormats[5],
							DIMUNIT_PROJECT,	stUnitFormats[6]


put 0, 1
if iWorkUnitLinear = DIMUNIT_CM		then put 2
if iWorkUnitLinear = DIMUNIT_DM		then put 2, 3
if iWorkUnitLinear = DIMUNIT_METER	then put 2, 3, 4

values "iWorkUnitLinearDecimal" get(NSP)

if iWorkUnitLinear	= DIMUNIT_INCH or iWorkUnitLinear = DIMUNIT_PROJECT then
	lock "iWorkUnitLinearDecimal"
endif
if iWorkUnitLinear = DIMUNIT_INCH then
	lock "bShowUnit"
endif


if _bLockLinearUnitDecimal then
	lock "iWorkUnitLinearDecimal"
	hideparameter "iWorkUnitLinearDecimal"
endif

if not(bShowElevTop) then
	lock	"iElevationTopMeasuredTo",
			"sDescriptionElevTop",
			"strSuffixElevTop"
	hideparameter	"iElevationTopMeasuredTo",
					"sDescriptionElevTop",
					"strSuffixElevTop"		
endif

if not(bShowElevBottom) then
	lock	"iElevationBottomMeasuredTo",
			"sDescriptionElevBottom",
			"strSuffixElevBottom"
	hideparameter	"iElevationBottomMeasuredTo",
					"sDescriptionElevBottom",
					"strSuffixElevBottom"		
endif

if not(bUsePrefixColumn) then
	lock 	"sDescriptionElevTop",
			"sDescriptionElevBottom"
	hideparameter 	"sDescriptionElevTop",
			"sDescriptionElevBottom"
endif

