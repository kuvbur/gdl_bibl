

if not(_isEnabledContent) then
	lock all
endif

lock "A"
lock "B"

parameters gs_GLOB_MODPAR_NAME = GLOB_MODPAR_NAME

values "gs_ui_current_page" 1, 2, 3, 4, 5, 6

if iMarkerShape = SHAPE_CIRCLE | iMarkerShape = SHAPE_FRAGMENT | iMarkerShape = SHAPE_OVAL then
	lock "gs_marker_rotation"
endif

values "markerSizeUnit" `мм`, `см`, `пт.`
values "iMarkerSizeUnit" 1, 2, 3
if GLOB_MODPAR_NAME = "markerSizeUnit" then
	if markerSizeUnit = `мм` 	then iMarkerSizeUnit = 1
	if markerSizeUnit = `см` 	then iMarkerSizeUnit = 2
	if markerSizeUnit = `пт.` then iMarkerSizeUnit = 3
	parameters iMarkerSizeUnit = iMarkerSizeUnit
else
	if iMarkerSizeUnit = 1 then markerSizeUnit = `мм`
	if iMarkerSizeUnit = 2 then markerSizeUnit = `см`
	if iMarkerSizeUnit = 3 then markerSizeUnit = `пт.`
	parameters markerSizeUnit = markerSizeUnit
endif

values "stMarkerDir" stMarkerDirValues
values "iMarkerDir" 1, 2, 3, 4

if GLOB_MODPAR_NAME = "stMarkerDir" then
	iMarkerDir = 1
	if stMarkerDir = stMarkerDirValues[2] then iMarkerDir = 2
	if stMarkerDir = stMarkerDirValues[3] then iMarkerDir = 3
	if stMarkerDir = stMarkerDirValues[4] then iMarkerDir = 4
	parameters iMarkerDir = iMarkerDir
else
	stMarkerDir = stMarkerDirValues[1]
	if iMarkerDir = 2 then stMarkerDir = stMarkerDirValues[2]
	if iMarkerDir = 3 then stMarkerDir = stMarkerDirValues[3]
	if iMarkerDir = 4 then stMarkerDir = stMarkerDirValues[4]
	parameters stMarkerDir = stMarkerDir
endif

if GLOB_MODPAR_NAME = "GS_CustomText_1" then
	GS_iCustomText_1 = CTXT_IDNUMBER
	if GS_CustomText_1 = stCustomText[4] then GS_iCustomText_1 = CTXT_FULLIDNUM		! Full Element ID
	if GS_CustomText_1 = stCustomText[3] then GS_iCustomText_1 = CTXT_CUSTOMTEXT	! Custom Text
	parameters GS_iCustomText_1 = GS_iCustomText_1
else
	GS_CustomText_1 = stCustomText[1]	! ID Number
	if GS_iCustomText_1 = CTXT_FULLIDNUM  then GS_CustomText_1 = stCustomText[4]	! Full Element ID
	if GS_iCustomText_1 = CTXT_CUSTOMTEXT then GS_CustomText_1 = stCustomText[3]	! Custom Text
	parameters GS_CustomText_1 = GS_CustomText_1
endif

values "GS_CustomText_1" stCustomText[1], stCustomText[4], stCustomText[3]	! Compact Element ID, Full Element ID, Custom Text
values "GS_iCustomText_1" CTXT_IDNUMBER, CTXT_FULLIDNUM, CTXT_CUSTOMTEXT

if GLOB_MODPAR_NAME = "GS_CustomText_2" then
	GS_iCustomText_2 = CTXT_MEASUREDVALUE
	if GS_CustomText_2 = stCustomText[3] then GS_iCustomText_2 = CTXT_CUSTOMTEXT	! Custom Text
	parameters GS_iCustomText_2 = GS_iCustomText_2
else
	GS_CustomText_2 = stCustomText[2]	! Measured Value
	if GS_iCustomText_2 = CTXT_CUSTOMTEXT then GS_CustomText_2 = stCustomText[3]	! Custom Text
	parameters GS_CustomText_2 = GS_CustomText_2
endif

values "GS_CustomText_2" stCustomText[2], stCustomText[3]	! Measured Value, Custom Text
values "GS_iCustomText_2" CTXT_MEASUREDVALUE, CTXT_CUSTOMTEXT

if GLOB_MODPAR_NAME = "GS_CustomText_3" then
	GS_iCustomText_3 = CTXT_MEASUREDVALUE
	if GS_CustomText_3 = stCustomText[3] then GS_iCustomText_3 = CTXT_CUSTOMTEXT	! Custom Text
	parameters GS_iCustomText_3 = GS_iCustomText_3
else
	GS_CustomText_3 = stCustomText[2]	! Measured Value
	if GS_iCustomText_3 = CTXT_CUSTOMTEXT then GS_CustomText_3 = stCustomText[3]	! Custom Text
	parameters GS_CustomText_3 = GS_CustomText_3
endif

values "GS_CustomText_3" stCustomText[2], stCustomText[3]	! Measured Value, Custom Text
values "GS_iCustomText_3" CTXT_MEASUREDVALUE, CTXT_CUSTOMTEXT

if GLOB_MODPAR_NAME = "GS_CustomText_4" then
	GS_iCustomText_4 = CTXT_MEASUREDVALUE
	if GS_CustomText_4 = stCustomText[3] then GS_iCustomText_4 = CTXT_CUSTOMTEXT	! Custom Text
	parameters GS_iCustomText_4 = GS_iCustomText_4
else
	GS_CustomText_4 = stCustomText[2]	! Measured Value
	if GS_iCustomText_4 = CTXT_CUSTOMTEXT then GS_CustomText_4 = stCustomText[3]	! Custom Text
	parameters GS_CustomText_4 = GS_CustomText_4
endif

values "GS_CustomText_4" stCustomText[2], stCustomText[3]	! Measured Value, Custom Text
values "GS_iCustomText_4" CTXT_MEASUREDVALUE, CTXT_CUSTOMTEXT

if GLOB_MODPAR_NAME = "GS_CustomText_5" then
	GS_iCustomText_5 = CTXT_MEASUREDVALUE
	if GS_CustomText_5 = stCustomText[3] then GS_iCustomText_5 = CTXT_CUSTOMTEXT	! Custom Text
	parameters GS_iCustomText_5 = GS_iCustomText_5
else
	GS_CustomText_5 = stCustomText[2]	! Measured Value
	if GS_iCustomText_5 = CTXT_CUSTOMTEXT then GS_CustomText_5 = stCustomText[3]	! Custom Text
	parameters GS_CustomText_5 = GS_CustomText_5
endif

values "GS_CustomText_5" stCustomText[2], stCustomText[3]	! Measured Value, Custom Text
values "GS_iCustomText_5" CTXT_MEASUREDVALUE, CTXT_CUSTOMTEXT

if GLOB_MODPAR_NAME = "GS_CustomText_6" then
	GS_iCustomText_6 = CTXT_MEASUREDVALUE
	if GS_CustomText_6 = stCustomText[3] then GS_iCustomText_6 = CTXT_CUSTOMTEXT	! Custom Text
	parameters GS_iCustomText_6 = GS_iCustomText_6
else
	GS_CustomText_6 = stCustomText[2]	! Measured Value
	if GS_iCustomText_6 = CTXT_CUSTOMTEXT then GS_CustomText_6 = stCustomText[3]	! Custom Text
	parameters GS_CustomText_6 = GS_CustomText_6
endif

values "GS_CustomText_6" stCustomText[2], stCustomText[3]	! Measured Value, Custom Text
values "GS_iCustomText_6" CTXT_MEASUREDVALUE, CTXT_CUSTOMTEXT


! ==============================================================================
! Changing marker size unit
! ==============================================================================

dot_in_mm = 25.4 / 72

if GLOB_MODPAR_NAME = "headDistPoint" then
	headDistCm = headDistPoint * dot_in_mm / 10
	headDistMm = headDistPoint * dot_in_mm
	parameters 	headDistCm = headDistCm,
				headDistMm = headDistMm
else
	if GLOB_MODPAR_NAME = "headDistCm" then
		headDistMm = headDistCm * 10
		headDistPoint = headDistCm * 10 / dot_in_mm
		parameters 	headDistMm 		= headDistMm,
					headDistPoint 	= headDistPoint
	else
		headDistCm = headDistMm / 10
		headDistPoint = headDistMm / dot_in_mm
		parameters 	headDistCm 		= headDistCm,
					headDistPoint	= headDistPoint
	endif
endif

if GLOB_MODPAR_NAME = "markerOffsetPoint" then
	markerOffsetCm = markerOffsetPoint * dot_in_mm / 10
	markerOffsetMm = markerOffsetPoint * dot_in_mm
	parameters 	markerOffsetCm = markerOffsetCm,
				markerOffsetMm = markerOffsetMm
else
	if GLOB_MODPAR_NAME = "markerOffsetCm" then
		markerOffsetMm = markerOffsetCm * 10
		markerOffsetPoint = markerOffsetCm * 10 / dot_in_mm
		parameters 	markerOffsetMm 		= markerOffsetMm,
					markerOffsetPoint 	= markerOffsetPoint
	else
		markerOffsetCm = markerOffsetMm / 10
		markerOffsetPoint = markerOffsetMm / dot_in_mm
		parameters 	markerOffsetCm 		= markerOffsetCm,
					markerOffsetPoint 	= markerOffsetPoint
	endif
endif

if GLOB_MODPAR_NAME = "footLengthPoint" then
	footLengthCm = footLengthPoint * dot_in_mm / 10
	footLengthMm = footLengthPoint * dot_in_mm
	parameters 	footLengthCm = footLengthCm,
				footLengthMm = footLengthMm
else
	if GLOB_MODPAR_NAME = "footLengthCm" then
		footLengthMm = footLengthCm * 10
		footLengthPoint = footLengthCm * 10 / dot_in_mm
		parameters 	footLengthMm 	= footLengthMm,
					footLengthPoint = footLengthPoint
	else
		footLengthCm = footLengthMm / 10
		footLengthPoint = footLengthMm / dot_in_mm
		parameters 	footLengthCm 	= footLengthCm,
					footLengthPoint = footLengthPoint
	endif
endif

if GLOB_MODPAR_NAME = "whDistPoint" then
	whDistCm = whDistPoint * dot_in_mm / 10
	whDistMm = whDistPoint * dot_in_mm
	parameters 	whDistCm = whDistCm,
				whDistMm = whDistMm
else
	if GLOB_MODPAR_NAME = "whDistCm" then
		whDistMm = whDistCm * 10
		whDistPoint = whDistCm * 10 / dot_in_mm
		parameters 	whDistMm 	= whDistMm,
					whDistPoint = whDistPoint
	else
		whDistCm = whDistMm / 10
		whDistPoint = whDistMm / dot_in_mm
		parameters 	whDistCm 	= whDistCm,
					whDistPoint = whDistPoint
	endif
endif

if GLOB_MODPAR_NAME = "sillOffsetPoint" then
	sillOffsetCm = sillOffsetPoint * dot_in_mm / 10
	sillOffsetMm = sillOffsetPoint * dot_in_mm
	parameters 	sillOffsetCm = sillOffsetCm,
				sillOffsetMm = sillOffsetMm
else
	if GLOB_MODPAR_NAME = "sillOffsetCm" then
		sillOffsetMm = sillOffsetCm * 10
		sillOffsetPoint = sillOffsetCm * 10 / dot_in_mm
		parameters 	sillOffsetMm 	= sillOffsetMm,
					sillOffsetPoint = sillOffsetPoint
	else
		sillOffsetCm = sillOffsetMm / 10
		sillOffsetPoint = sillOffsetMm / dot_in_mm
		parameters 	sillOffsetCm 	= sillOffsetCm,
					sillOffsetPoint = sillOffsetPoint
	endif
endif

if GLOB_MODPAR_NAME = "sillDistPoint" then
	sillDistCm = sillDistPoint * dot_in_mm / 10
	sillDistMm = sillDistPoint * dot_in_mm
	parameters 	sillDistCm = sillDistCm,
				sillDistMm = sillDistMm
else
	if GLOB_MODPAR_NAME = "sillDistCm" then
		sillDistMm = sillDistCm * 10
		sillDistPoint = sillDistCm * 10 / dot_in_mm
		parameters 	sillDistMm = sillDistMm,
					sillDistPoint = sillDistPoint
	else
		sillDistCm = sillDistMm / 10
		sillDistPoint = sillDistMm / dot_in_mm
		parameters 	sillDistCm = sillDistCm,
					sillDistPoint = sillDistPoint
	endif
endif

if GLOB_MODPAR_NAME = "fireOffsetPoint" then
	fireOffsetCm = fireOffsetPoint * dot_in_mm / 10
	fireOffsetMm = fireOffsetPoint * dot_in_mm
	parameters 	fireOffsetCm = fireOffsetCm,
				fireOffsetMm = fireOffsetMm
else
	if GLOB_MODPAR_NAME = "fireOffsetCm" then
		fireOffsetMm = fireOffsetCm * 10
		fireOffsetPoint = fireOffsetCm * 10 / dot_in_mm
		parameters 	fireOffsetMm 	= fireOffsetMm,
					fireOffsetPoint = fireOffsetPoint
	else
		fireOffsetCm = fireOffsetMm / 10
		fireOffsetPoint = fireOffsetMm / dot_in_mm
		parameters 	fireOffsetCm 	= fireOffsetCm,
					fireOffsetPoint = fireOffsetPoint
	endif
endif

if GLOB_MODPAR_NAME = "fireDistPoint" then
	fireDistCm = fireDistPoint * dot_in_mm / 10
	fireDistMm = fireDistPoint * dot_in_mm
	parameters 	fireDistCm = fireDistCm,
				fireDistMm = fireDistMm
else
	if GLOB_MODPAR_NAME = "fireDistCm" then
		fireDistMm = fireDistCm * 10
		fireDistPoint = fireDistCm * 10 / dot_in_mm
		parameters 	fireDistMm 		= fireDistMm,
					fireDistPoint 	= fireDistPoint
	else
		fireDistCm = fireDistMm / 10
		fireDistPoint = fireDistMm / dot_in_mm
		parameters 	fireDistCm 		= fireDistCm,
					fireDistPoint 	= fireDistPoint
	endif
endif

if GLOB_MODPAR_NAME = "acousticOffsetPoint" then
	acousticOffsetCm = acousticOffsetPoint * dot_in_mm / 10
	acousticOffsetMm = acousticOffsetPoint * dot_in_mm
	parameters 	acousticOffsetCm = acousticOffsetCm,
				acousticOffsetMm = acousticOffsetMm
else
	if GLOB_MODPAR_NAME = "acousticOffsetCm" then
		acousticOffsetMm = acousticOffsetCm * 10
		acousticOffsetPoint = acousticOffsetCm * 10 / dot_in_mm
		parameters 	acousticOffsetMm 	= acousticOffsetMm,
					acousticOffsetPoint = acousticOffsetPoint
	else
		acousticOffsetCm = acousticOffsetMm / 10
		acousticOffsetPoint = acousticOffsetMm / dot_in_mm
		parameters 	acousticOffsetCm 	= acousticOffsetCm,
					acousticOffsetPoint = acousticOffsetPoint
	endif
endif

if GLOB_MODPAR_NAME = "acousticDistPoint" then
	acousticDistCm = acousticDistPoint * dot_in_mm / 10
	acousticDistMm = acousticDistPoint * dot_in_mm
	parameters 	acousticDistCm = acousticDistCm,
				acousticDistMm = acousticDistMm
else
	if GLOB_MODPAR_NAME = "acousticDistCm" then
		acousticDistMm = acousticDistCm * 10
		acousticDistPoint = acousticDistCm * 10 / dot_in_mm
		parameters 	acousticDistMm 		= acousticDistMm,
					acousticDistPoint 	= acousticDistPoint
	else
		acousticDistCm = acousticDistMm / 10
		acousticDistPoint = acousticDistMm / dot_in_mm
		parameters 	acousticDistCm 		= acousticDistCm,
					acousticDistPoint 	= acousticDistPoint
	endif
endif

! ==============================================================================
! Parameter lock
! ==============================================================================

if iMarkerSizeUnit = 1 then ! mm
	hideparameter	"headDistCm", "headDistPoint",
					"markerOffsetCm", "markerOffsetPoint",
					"footLengthCm", "footLengthPoint",
					"whDistCm", "whDistPoint",
					"sillOffsetCm", "sillOffsetPoint",
					"sillDistCm", "sillDistPoint",
					"fireOffsetCm", "fireOffsetPoint",
					"fireDistCm", "fireDistPoint",
					"acousticOffsetCm", "acousticOffsetPoint",
					"acousticDistCm", "acousticDistPoint"

	lock			"headDistCm", "headDistPoint",
					"markerOffsetCm", "markerOffsetPoint",
					"footLengthCm", "footLengthPoint",
					"whDistCm", "whDistPoint",
					"sillOffsetCm", "sillOffsetPoint",
					"sillDistCm", "sillDistPoint",
					"fireOffsetCm", "fireOffsetPoint",
					"fireDistCm", "fireDistPoint",
					"acousticOffsetCm", "acousticOffsetPoint",
					"acousticDistCm", "acousticDistPoint"
endif
if iMarkerSizeUnit = 2 then ! cm
	hideparameter	"headDistMm", "headDistPoint",
					"markerOffsetMm", "markerOffsetPoint",
					"footLengthMm", "footLengthPoint",
					"whDistMm", "whDistPoint",
					"sillOffsetMm", "sillOffsetPoint",
					"sillDistMm", "sillDistPoint",
					"fireOffsetMm", "fireOffsetPoint",
					"fireDistMm", "fireDistPoint",
					"acousticOffsetMm", "acousticOffsetPoint",
					"acousticDistMm", "acousticDistPoint"

	lock			"headDistMm", "headDistPoint",
					"markerOffsetMm", "markerOffsetPoint",
					"footLengthMm", "footLengthPoint",
					"whDistMm", "whDistPoint",
					"sillOffsetMm", "sillOffsetPoint",
					"sillDistMm", "sillDistPoint",
					"fireOffsetMm", "fireOffsetPoint",
					"fireDistMm", "fireDistPoint",
					"acousticOffsetMm", "acousticOffsetPoint",
					"acousticDistMm", "acousticDistPoint"
endif
if iMarkerSizeUnit = 3 then ! point
	hideparameter	"headDistCm", "headDistMm",
					"markerOffsetCm", "markerOffsetMm",
					"footLengthCm", "footLengthMm",
					"whDistCm", "whDistMm",
					"sillOffsetCm", "sillOffsetMm",
					"sillDistCm", "sillDistMm",
					"fireOffsetCm", "fireOffsetMm",
					"fireDistCm", "fireDistMm",
					"acousticOffsetCm", "acousticOffsetMm",
					"acousticDistCm", "acousticDistMm"

	lock			"headDistCm", "headDistMm",
					"markerOffsetCm", "markerOffsetMm",
					"footLengthCm", "footLengthMm",
					"whDistCm", "whDistMm",
					"sillOffsetCm", "sillOffsetMm",
					"sillDistCm", "sillDistMm",
					"fireOffsetCm", "fireOffsetMm",
					"fireDistCm", "fireDistMm",
					"acousticOffsetCm", "acousticOffsetMm",
					"acousticDistCm", "acousticDistMm"
endif

if not(GS_Center_Line) then
	lock "footLengthMm"
	hideparameter "footLengthMm"
endif

if not(AC_ID_On) then
	lock "GS_CustomText_1", "AC_MarkerText_1"
	hideparameter "GS_CustomText_1", "AC_MarkerText_1"
endif

if not(AC_Sill_On) then
	lock	"gs_marker_text_4_title", "GS_CustomText_4", "AC_MarkerText_4",
			"AC_SillPrefix"
	hideparameter	"gs_marker_text_4_title", "GS_CustomText_4", "AC_MarkerText_4",
					"AC_SillPrefix"
endif

if not(AC_WidHei_On) then
	!!! INT version Marker UI page parameter lock
	lock	"gs_marker_text_2_title", "gs_marker_text_3_title",
			"GS_CustomText_2", "AC_MarkerText_2", "GS_CustomText_3",
			"AC_MarkerText_3", "gs_dimension_select", "whDistMm", "whDistCm", "whDistPoint"
	hideparameter	"gs_marker_text_2_title", "gs_marker_text_3_title",
					"GS_CustomText_2", "AC_MarkerText_2", "GS_CustomText_3",
					"AC_MarkerText_3", "gs_dimension_select", "whDistMm", "whDistCm", "whDistPoint"
endif

if not(AC_show_firerating) then
	lock	"gs_marker_text_5_title", "GS_CustomText_5", "AC_MarkerText_5", "AC_FirePrefix",
			"fireOffsetMm", "fireDistMm","AC_Pen_FireRate"
	hideparameter	"gs_marker_text_5_title", "GS_CustomText_5", "AC_MarkerText_5", "AC_FirePrefix",
					"fireOffsetMm", "fireDistMm", "fireOffsetCm", "fireDistCm",
					"fireOffsetPoint", "fireDistPoint","AC_Pen_FireRate"
endif

if not(AC_show_acousticrating) then
	lock	"gs_marker_text_6_title", "GS_CustomText_6", "AC_MarkerText_6", "AC_AcousticPrefix",
			"acousticOffsetMm", "acousticDistMm"
	hideparameter	"gs_marker_text_6_title", "GS_CustomText_6", "AC_MarkerText_6", "AC_AcousticPrefix",
					"acousticOffsetMm", "acousticDistMm", "acousticOffsetCm", "acousticDistCm",
					"acousticOffsetPoint", "acousticDistPoint"
endif

values "gs_marker_shape" stShapes
values "iMarkerShape" SHAPE_CIRCLE, SHAPE_RECT, SHAPE_FRAGMENT, SHAPE_OVAL, SHAPE_TRIANGLE, SHAPE_PENTAGON, SHAPE_HEXAGON, SHAPE_OCTAGON, SHAPE_NONE

if GLOB_MODPAR_NAME = "gs_marker_shape" then
	iMarkerShape = SHAPE_CIRCLE
	for i = 2 to vardim1(stShapes) - 1
		if gs_marker_shape = stShapes[i] then iMarkerShape = i
	next i
	if gs_marker_shape = stShapes[vardim1(stShapes)] then iMarkerShape = SHAPE_NONE

	parameters iMarkerShape = iMarkerShape
else
	if iMarkerShape = SHAPE_NONE then
		gs_marker_shape = stShapes[vardim1(stShapes)]
	else
		gs_marker_shape = stShapes[max(1, min(iMarkerShape, vardim1(stShapes) - 1))]
	endif

	parameters 	gs_marker_shape = gs_marker_shape
endif

if iMarkerShape <> SHAPE_CIRCLE then
	lock "gs_markertext_fit"
	hideparameter "gs_markertext_fit"
else
	if gs_markertext_fit = 1 then
		lock "AC_MarkerSize"
		hideparameter "AC_MarkerSize"
	endif
endif

if not(gs_MarkerFill) then
	lock "AC_MarkerFill","gs_fill_pen","gs_back_pen"
	hideparameter "AC_MarkerFill","gs_fill_pen","gs_back_pen"
endif

if not(AC_Sill_On) then
	lock "sillOffsetMm", "sillDistMm"
	hideparameter "sillOffsetMm", "sillDistMm"
endif


! ==============================================================================
! Label Text
! ==============================================================================

if GS_iCustomText_1 <> CTXT_CUSTOMTEXT then
	lock "AC_MarkerText_1"
endif
if GS_iCustomText_2 <> CTXT_CUSTOMTEXT then lock "AC_MarkerText_2"
if GS_iCustomText_3 <> CTXT_CUSTOMTEXT then lock "AC_MarkerText_3"
if GS_iCustomText_4 <> CTXT_CUSTOMTEXT then lock "AC_MarkerText_4"
if GS_iCustomText_5 <> CTXT_CUSTOMTEXT then lock "AC_MarkerText_5"
if GS_iCustomText_6 <> CTXT_CUSTOMTEXT then lock "AC_MarkerText_6"

if GS_iCustomText_4 = CTXT_CUSTOMTEXT then lock "AC_SillPrefix"
if GS_iCustomText_5 = CTXT_CUSTOMTEXT then lock "AC_FirePrefix"
if GS_iCustomText_6 = CTXT_CUSTOMTEXT then lock "AC_AcousticPrefix"


if AC_TextSize_1 < 0 then parameters AC_TextSize_1 = abs(AC_TextSize_1)
if GS_TextSize_2_e < 0 then parameters GS_TextSize_2_e = abs(GS_TextSize_2_e)
if GS_TextSize_3_e < 0 then parameters GS_TextSize_3_e = abs(GS_TextSize_3_e)
if GS_TextSize_4_e < 0 then parameters GS_TextSize_4_e = abs(GS_TextSize_4_e)
if GS_TextSize_5_e < 0 then parameters GS_TextSize_5_e = abs(GS_TextSize_5_e)
if GS_TextSize_6_e < 0 then parameters GS_TextSize_6_e = abs(GS_TextSize_6_e)

if	GS_iCustomText_1 = CTXT_IDNUMBER | \
	GS_iCustomText_1 = CTXT_FULLIDNUM	  then hideparameter "AC_MarkerText_1"
if GS_iCustomText_2 = CTXT_MEASUREDVALUE then hideparameter "AC_MarkerText_2"
if GS_iCustomText_3 = CTXT_MEASUREDVALUE then hideparameter "AC_MarkerText_3"

if GS_iCustomText_4 = CTXT_MEASUREDVALUE then
	hideparameter "AC_MarkerText_4"
else
	hideparameter "AC_SillPrefix"
endif

if GS_iCustomText_5 = CTXT_MEASUREDVALUE then
	hideparameter "AC_MarkerText_5"
else
	hideparameter "AC_FirePrefix"
endif

if GS_iCustomText_6 = CTXT_MEASUREDVALUE then
	hideparameter "AC_MarkerText_6"
else
	hideparameter "AC_AcousticPrefix"
endif

if GS_UniTextFormat then
	hideparameter "gs_marker_text_2_title", "gs_marker_text_3_title", "gs_marker_text_4_title",
		"gs_marker_text_5_title", "gs_marker_text_6_title"
	hideparameter "AC_TextFont_2", "AC_TextFont_3", "AC_TextFont_4",
		"AC_TextFont_5", "AC_TextFont_6"
	hideparameter "GS_TextSize_2_e", "GS_TextSize_3_e", "GS_TextSize_4_e",
		"GS_TextSize_5_e", "GS_TextSize_6_e"
	hideparameter "AC_TextStyle_2", "AC_TextStyle_3", "AC_TextStyle_4",
		"AC_TextStyle_5", "AC_TextStyle_6"
	hideparameter "AC_TextPen_2", "AC_TextPen_3", "AC_TextPen_4",
		"AC_TextPen_5", "AC_TextPen_6"
	hideparameter "AC_TextSize_2", "AC_TextSize_3", "AC_TextSize_4",
		"AC_TextSize_5", "AC_TextSize_6"
	hideparameter	"gs_Text_Style_1B", "gs_Text_Style_2B", "gs_Text_Style_3B",
					"gs_Text_Style_4B", "gs_Text_Style_5B", "gs_Text_Style_6B"
	hideparameter	"gs_Text_Style_1I", "gs_Text_Style_2I", "gs_Text_Style_3I",
					"gs_Text_Style_4I", "gs_Text_Style_5I", "gs_Text_Style_6I"
	hideparameter	"gs_Text_Style_1U", "gs_Text_Style_2U", "gs_Text_Style_3U",
					"gs_Text_Style_4U", "gs_Text_Style_5U", "gs_Text_Style_6U"


	lock "gs_marker_text_2_title", "gs_marker_text_3_title", "gs_marker_text_4_title",
		"gs_marker_text_5_title", "gs_marker_text_6_title"
	lock "AC_TextFont_2", "AC_TextFont_3", "AC_TextFont_4",
		"AC_TextFont_5", "AC_TextFont_6"
	lock "GS_TextSize_2_e", "GS_TextSize_3_e", "GS_TextSize_4_e",
		"GS_TextSize_5_e", "GS_TextSize_6_e"
	lock "AC_TextStyle_2", "AC_TextStyle_3", "AC_TextStyle_4",
		"AC_TextStyle_5", "AC_TextStyle_6"
	lock "AC_TextPen_2", "AC_TextPen_3", "AC_TextPen_4",
		"AC_TextPen_5", "AC_TextPen_6"
	lock "AC_TextSize_2", "AC_TextSize_3", "AC_TextSize_4",
		"AC_TextSize_5", "AC_TextSize_6"
	lock	"gs_Text_Style_1B", "gs_Text_Style_2B", "gs_Text_Style_3B",
			"gs_Text_Style_4B", "gs_Text_Style_5B", "gs_Text_Style_6B"
	lock	"gs_Text_Style_1I", "gs_Text_Style_2I", "gs_Text_Style_3I",
			"gs_Text_Style_4I", "gs_Text_Style_5I", "gs_Text_Style_6I"
	lock	"gs_Text_Style_1U", "gs_Text_Style_2U", "gs_Text_Style_3U",
			"gs_Text_Style_4U", "gs_Text_Style_5U", "gs_Text_Style_6U"
else
	parameters AC_TextStyle_2 = bittest (AC_TextStyle_2, 0) + 2 * bittest (AC_TextStyle_2, 1) + 4 * bittest (AC_TextStyle_2, 2) + 8 * bittest (AC_TextStyle_2, 3) + 16 * bittest (AC_TextStyle_2, 4)
	values "AC_TextStyle_2" range[0,31]

	parameters AC_TextStyle_3 = bittest (AC_TextStyle_3, 0) + 2 * bittest (AC_TextStyle_3, 1) + 4 * bittest (AC_TextStyle_3, 2) + 8 * bittest (AC_TextStyle_3, 3) + 16 * bittest (AC_TextStyle_3, 4)
	values "AC_TextStyle_3" range[0,31]

	parameters AC_TextStyle_4 = bittest (AC_TextStyle_4, 0) + 2 * bittest (AC_TextStyle_4, 1) + 4 * bittest (AC_TextStyle_4, 2) + 8 * bittest (AC_TextStyle_4, 3) + 16 * bittest (AC_TextStyle_4, 4)
	values "AC_TextStyle_4" range[0,31]

	parameters AC_TextStyle_5 = bittest (AC_TextStyle_5, 0) + 2 * bittest (AC_TextStyle_5, 1) + 4 * bittest (AC_TextStyle_5, 2) + 8 * bittest (AC_TextStyle_5, 3) + 16 * bittest (AC_TextStyle_5, 4)
	values "AC_TextStyle_5" range[0,31]

	parameters AC_TextStyle_6 = bittest (AC_TextStyle_6, 0) + 2 * bittest (AC_TextStyle_6, 1) + 4 * bittest (AC_TextStyle_6, 2) + 8 * bittest (AC_TextStyle_6, 3) + 16 * bittest (AC_TextStyle_6, 4)
	values "AC_TextStyle_6" range[0,31]
endif


! ==============================================================================
! Select Size to Show
! ==============================================================================

if gs_dw_marker_type = 2 then

	! Door size types
	values "gs_dimension_select" stDimensionTypes[1], stDimensionTypes[2], stDimensionTypes[3]
	values "gs_dimension_select_int" DIM_UNIT, DIM_LEAF, DIM_EGRESS

else

	! Window size types
	values "gs_dimension_select" stDimensionTypes[1], stDimensionTypes[4]
	values "gs_dimension_select_int" DIM_UNIT, DIM_REVEAL
endif

if GLOB_MODPAR_NAME = "gs_dimension_select" then
	gs_dimension_select_int = DIM_UNIT
	if gs_dimension_select = stDimensionTypes[2]	then gs_dimension_select_int = DIM_LEAF
	if gs_dimension_select = stDimensionTypes[3]	then gs_dimension_select_int = DIM_EGRESS
	if gs_dimension_select = stDimensionTypes[4]	then gs_dimension_select_int = DIM_REVEAL
	parameters gs_dimension_select_int = gs_dimension_select_int
else
	gs_dimension_select = stDimensionTypes[1]
	if gs_dimension_select_int = DIM_LEAF	then gs_dimension_select = stDimensionTypes[2]
	if gs_dimension_select_int = DIM_EGRESS	then gs_dimension_select = stDimensionTypes[3]
	if gs_dimension_select_int = DIM_REVEAL	then gs_dimension_select = stDimensionTypes[4]
	parameters gs_dimension_select = gs_dimension_select
endif


! ==============================================================================
! Font Size
! ==============================================================================

w_units_form = ""
rrr = request("Linear_dimension", "", w_units_form)
ertek = strstr(w_units_form, "m")

if ertek = 0 then	! Conversion
	ratio = 25.4/72
else
	ratio = 1
endif

if GLOB_MODPAR_NAME = "GS_TextSize_2_e" then parameters AC_TextSize_2 = GS_TextSize_2_e * ratio
if GLOB_MODPAR_NAME = "GS_TextSize_3_e" then parameters AC_TextSize_3 = GS_TextSize_3_e * ratio
if GLOB_MODPAR_NAME = "GS_TextSize_4_e" then parameters AC_TextSize_4 = GS_TextSize_4_e * ratio
if GLOB_MODPAR_NAME = "GS_TextSize_5_e" then parameters AC_TextSize_5 = GS_TextSize_5_e * ratio
if GLOB_MODPAR_NAME = "GS_TextSize_6_e" then parameters AC_TextSize_6 = GS_TextSize_6_e * ratio

if GS_LastUnit = 0 & ertek <> 0 then			! Conversion
	parameters GS_TextSize_2_e	= AC_TextSize_2
	parameters GS_TextSize_3_e	= AC_TextSize_3
	parameters GS_TextSize_4_e	= AC_TextSize_4
	parameters GS_TextSize_5_e	= AC_TextSize_5
	parameters GS_TextSize_6_e	= AC_TextSize_6
endif

ratio = 25.4/72
if GS_LastUnit = 1 & ertek = 0  then			! Conversion
	parameters GS_TextSize_2_e	= AC_TextSize_2 / ratio
	parameters GS_TextSize_3_e	= AC_TextSize_3 / ratio
	parameters GS_TextSize_4_e	= AC_TextSize_4 / ratio
	parameters GS_TextSize_5_e	= AC_TextSize_5 / ratio
	parameters GS_TextSize_6_e	= AC_TextSize_6 / ratio
endif

if ertek = 0 then
	parameters GS_LastUnit = 0
else
	parameters GS_LastUnit = 1
endif

