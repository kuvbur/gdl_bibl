
numConvert			= 10.76391	! Between sq meter and sq feet

! ==============================================================================
! Attributes
! ==============================================================================

maxPenNumber=255
dim iPenNumber[255]
for i=1 to maxPenNumber
	iPenNumber[i]=i
next i

values "zonapen"		iPenNumber
values "zonopen"		iPenNumber
values "codepen"		iPenNumber
values "GrossAreaPen"	iPenNumber
values "areapen"		iPenNumber
values "peripen"		iPenNumber
values "ceilhpen"		iPenNumber
values "VolumePen"		iPenNumber
values "gs_pen_font_occupancy" iPenNumber
values "fontpenZoneID"	iPenNumber
values "AdditionalTagsPen" iPenNumber
values "customTextPen"	iPenNumber
values "roomNumberPen"	iPenNumber
values "nameAndNumberPen" iPenNumber
values "surfaceCodepen" iPenNumber
values "penBackgroundFill"	iPenNumber
values "penBackgroundFill_temp"	iPenNumber

if not(bScaleSensitive) then
	lock "iUIDisplayScale"
	hideparameter "iUIDisplayScale"
endif
values{2} "iUIDisplayScale"	SCALE_50, 	stDisplayScale[SCALE_50],
							SCALE_100,	stDisplayScale[SCALE_100],
							SCALE_200,	stDisplayScale[SCALE_200]

values{2} "iFontSizeType" FONTSCALE_MODEL, stFontSizeTypes[1],
						  FONTSCALE_PAPER, stFontSizeTypes[2]


values{2} "iShowZoneIDAs"	IDVALUE_IDNUMBER, stIDValue[1],
							IDVALUE_FULLIDNUM, stIDValue[2]

! ==============================================================================
! Scale dependent attributes
! ==============================================================================

! Middle Hotspots --------------------------------------------------------------
if GLOB_MODPAR_NAME = "bShowMiddleHotspots_temp" then
	bShowMiddleHotspots[_iUIDisplayScale] = bShowMiddleHotspots_temp
	parameters bShowMiddleHotspots = bShowMiddleHotspots
else
	bShowMiddleHotspots_temp = bShowMiddleHotspots[_iUIDisplayScale]
	parameters bShowMiddleHotspots_temp = bShowMiddleHotspots_temp
endif

! Anchor Point ----------------------------------------------------------------

values{2} "iAnchorStamp_temp" 	ANCHOR_TOP_LEFT, 		strAnchorPoint[1],
								ANCHOR_TOP_MIDDLE,		strAnchorPoint[2],
								ANCHOR_TOP_RIGHT, 		strAnchorPoint[3],
								ANCHOR_MIDDLE_LEFT,		strAnchorPoint[4],
								ANCHOR_CENTER,			strAnchorPoint[5],
								ANCHOR_MIDDLE_RIGHT,	strAnchorPoint[6],
								ANCHOR_BOTTOM_LEFT,		strAnchorPoint[7],
								ANCHOR_BOTTOM_MIDDLE,	strAnchorPoint[8],
								ANCHOR_BOTTOM_RIGHT,	strAnchorPoint[9]

values{2} "iAnchorStamp" 		ANCHOR_TOP_LEFT, 		strAnchorPoint[1],
								ANCHOR_TOP_MIDDLE,		strAnchorPoint[2],
								ANCHOR_TOP_RIGHT, 		strAnchorPoint[3],
								ANCHOR_MIDDLE_LEFT,		strAnchorPoint[4],
								ANCHOR_CENTER,			strAnchorPoint[5],
								ANCHOR_MIDDLE_RIGHT,	strAnchorPoint[6],
								ANCHOR_BOTTOM_LEFT,		strAnchorPoint[7],
								ANCHOR_BOTTOM_MIDDLE,	strAnchorPoint[8],
								ANCHOR_BOTTOM_RIGHT,	strAnchorPoint[9]

if GLOB_MODPAR_NAME = "iAnchorStamp_temp" then
	iAnchorStamp[_iUIDisplayScale] = iAnchorStamp_temp
	parameters iAnchorStamp = iAnchorStamp
else
	iAnchorStamp_temp = iAnchorStamp[_iUIDisplayScale]
	parameters iAnchorStamp_temp = iAnchorStamp_temp
endif

! Zone Stamp Width -----------------------------------------------------------
values{2} "iTypeStampWidth_temp"	WIDTH_AUTOMATIC, 	strTypeStampWidth[1],
									WIDTH_CUSTOM,		strTypeStampWidth[2]

values{2} "iTypeStampWidth"			WIDTH_AUTOMATIC, 	strTypeStampWidth[1],
									WIDTH_CUSTOM,		strTypeStampWidth[2]

if GLOB_MODPAR_NAME = "iTypeStampWidth_temp" then
	iTypeStampWidth[_iUIDisplayScale] = iTypeStampWidth_temp
	parameters iTypeStampWidth = iTypeStampWidth
else
	iTypeStampWidth_temp = iTypeStampWidth[_iUIDisplayScale]
	parameters iTypeStampWidth_temp = iTypeStampWidth_temp
endif

if GLOB_MODPAR_NAME = "widthFixedStamp_temp" then
	widthFixedStamp[_iUIDisplayScale] = widthFixedStamp_temp
	parameters widthFixedStamp = widthFixedStamp
else
	widthFixedStamp_temp = widthFixedStamp[_iUIDisplayScale]
	parameters widthFixedStamp_temp = widthFixedStamp_temp
endif

! UI
if iTypeStampWidth[_iUIDisplayScale] = WIDTH_AUTOMATIC then
	lock "widthFixedStamp"	! array
endif
! Parameter List
if iTypeStampWidth_temp = WIDTH_AUTOMATIC then
	lock "widthFixedStamp_temp"
	hideparameter "widthFixedStamp_temp"
endif

! Font size odf data block -------------------------------------------------

if iFontSizeType = FONTSCALE_MODEL then

	values "sizeFontData_model_temp" range (0,]
	if GLOB_MODPAR_NAME = "sizeFontData_model_temp" then
		sizeFontData_model[_iUIDisplayScale] = sizeFontData_model_temp
		parameters sizeFontData_model = sizeFontData_model
	else
		sizeFontData_model_temp = sizeFontData_model[_iUIDisplayScale]
		parameters sizeFontData_model_temp = sizeFontData_model_temp
	endif

	hideparameter "sizeFontData_mm_temp", "sizeFontData_pt_temp"
	lock "sizeFontData_mm_temp", "sizeFontData_pt_temp"

else

	if bMetricDimensionNeeded then

		values "sizeFontData_mm_temp" range (0,]

		if GLOB_MODPAR_NAME = "sizeFontData_mm_temp" then
			sizeFontData_mm[_iUIDisplayScale] = sizeFontData_mm_temp
			sizeFontData_pt_temp = sizeFontData_mm_temp * DOT_IN_MM
			sizeFontData_pt[_iUIDisplayScale] = sizeFontData_pt_temp

			parameters	sizeFontData_mm			= sizeFontData_mm,
						sizeFontData_pt_temp	= sizeFontData_pt_temp,
						sizeFontData_pt			= sizeFontData_pt
		else
			sizeFontData_mm_temp = sizeFontData_mm[_iUIDisplayScale]
			sizeFontData_pt_temp = sizeFontData_mm[_iUIDisplayScale] * DOT_IN_MM
			sizeFontData_pt[_iUIDisplayScale] = sizeFontData_pt_temp

			parameters	sizeFontData_pt_temp	= sizeFontData_pt_temp,
						sizeFontData_mm_temp	= sizeFontData_mm_temp,
						sizeFontData_pt			= sizeFontData_pt
		endif

		if GLOB_MODPAR_NAME = "sizeFontData_mm" then
			for j = 1 to 4
				sizeFontData_pt[j] = sizeFontData_mm[j] * DOT_IN_MM
				parameters	sizeFontData_pt = sizeFontData_pt
			next j
		endif

		hideparameter "sizeFontData_pt_temp", "sizeFontData_model_temp"
		lock "sizeFontData_pt_temp", "sizeFontData_model_temp"

	else

		values "sizeFontData_pt_temp" range (0,]

		if GLOB_MODPAR_NAME = "sizeFontData_pt_temp" then
			sizeFontData_pt[_iUIDisplayScale] = sizeFontData_pt_temp
			sizeFontData_mm_temp = sizeFontData_pt_temp / DOT_IN_MM
			sizeFontData_mm[_iUIDisplayScale] = sizeFontData_mm_temp

			parameters	sizeFontData_pt			= sizeFontData_pt,
						sizeFontData_mm_temp	= sizeFontData_mm_temp,
						sizeFontData_mm			= sizeFontData_mm
		else
			sizeFontData_pt_temp = sizeFontData_pt[_iUIDisplayScale]
			sizeFontData_mm_temp = sizeFontData_pt[_iUIDisplayScale] / DOT_IN_MM
			sizeFontData_mm[_iUIDisplayScale] = sizeFontData_mm_temp

			parameters	sizeFontData_pt_temp	= sizeFontData_pt_temp,
						sizeFontData_mm_temp	= sizeFontData_mm_temp,
						sizeFontData_mm			= sizeFontData_mm
		endif

		if GLOB_MODPAR_NAME = "sizeFontData_pt" then
			for j = 1 to 4
				sizeFontData_mm[j] = sizeFontData_pt[j] / DOT_IN_MM
				parameters	sizeFontData_mm = sizeFontData_mm
			next j
		endif

		hideparameter "sizeFontData_mm_temp", "sizeFontData_model_temp"
		lock "sizeFontData_mm_temp", "sizeFontData_model_temp"

	endif

endif

! Detail Text Justification -------------------------------------------------

values{2} "iAlignment_temp"	ALIIGN_LEFT, 		stJustification[1],
							ALIIGN_CENTERED,	stJustification[2],
							ALIIGN_RIGHT,		stJustification[3]

values{2} "iAlignment"		ALIIGN_LEFT, 		stJustification[1],
							ALIIGN_CENTERED,	stJustification[2],
							ALIIGN_RIGHT,		stJustification[3]

if GLOB_MODPAR_NAME = "iAlignment_temp" then
	iAlignment[_iUIDisplayScale] = iAlignment_temp
	parameters iAlignment = iAlignment
else
	iAlignment_temp = iAlignment[_iUIDisplayScale]
	parameters iAlignment_temp = iAlignment_temp
endif

! Fill parameters -------------------------------------------------

if GLOB_MODPAR_NAME = "filltypeBackgroundFill_temp" then
	filltypeBackgroundFill[_iUIDisplayScale] = filltypeBackgroundFill_temp
	parameters filltypeBackgroundFill = filltypeBackgroundFill
else
	filltypeBackgroundFill_temp = filltypeBackgroundFill[_iUIDisplayScale]
	parameters filltypeBackgroundFill_temp = filltypeBackgroundFill_temp
endif

if GLOB_MODPAR_NAME = "penBackgroundFill_temp" then
	penBackgroundFill[_iUIDisplayScale] = penBackgroundFill_temp
	parameters penBackgroundFill = penBackgroundFill
else
	penBackgroundFill_temp = penBackgroundFill[_iUIDisplayScale]
	parameters penBackgroundFill_temp = penBackgroundFill_temp
endif

if GLOB_MODPAR_NAME = "backpenBackgroundFill_temp" then
	backpenBackgroundFill[_iUIDisplayScale] = backpenBackgroundFill_temp
	parameters backpenBackgroundFill = backpenBackgroundFill
else
	gs_back_tpen_temp = backpenBackgroundFill[_iUIDisplayScale]
	parameters backpenBackgroundFill_temp = backpenBackgroundFill_temp
endif

! ==============================================================================
! Define Order - scale dependent
! ==============================================================================

values "numDisplayedGroup_temp" range [1, maxFunctionOrder]
values "numDisplayedGroup" range [1, maxFunctionOrder]

! Define Order editing from Parameter List Setting dialog
! -- on UI: Add/Delete buttons are working just on UI
! -- on PL: display maximum Row Number

! for editing on Parameter List
	! there is no visible numDisplayedGroup_temp parameter, but all the order is
	! changing the number of displayed row if the orders set from "none"
for i = maxFunctionOrder to 1 step -1
	if numDisplayedGroup_temp < i then
		if GLOB_MODPAR_NAME = "iOrder_" + str(i,1,0) + "_temp" and functionOrderUI[i] <> ORDER_NONE then
			numDisplayedGroup_temp = i
			numDisplayedGroup[_iUIDisplayScale] = i
			parameters numDisplayedGroup_temp = numDisplayedGroup_temp,
						numDisplayedGroup = numDisplayedGroup
		endif
	endif
next i

! for editing on UI
numDisplayedGroup_temp = numDisplayedGroup[_iUIDisplayScale]
parameters numDisplayedGroup_temp = numDisplayedGroup_temp

! ==============================================================================
! Orders
! ==============================================================================

! initialization ------------------------------------[

! charge string values ------------------------------[

! initialization
dim temp_iGroupOrder[]
dim temp_iGroupOrderArray[]
	for i = 1 to maxFunctionOrder
		temp_iGroupOrder[i] = ORDER_NONE
		temp_iGroupOrderArray[i] = ORDER_NONE
	next i

gosub "charge_temporary_array_with_ordering_integer_params"	! output filled temp_iGroupOrder,temp_iGroupOrderArray

gosub "buffer_ordering_integer_values"	! output stack with values

! string and integer values about groups
dim stringvaluesGroup[]
dim integervaluesGroup[]
for iGet = 1 to nsp
	stringvaluesGroup[iGet] = stGroupText[use(1)]
	integervaluesGroup[iGet] = get(1)
next iGet

dim functionOrderParam[]
for iIni = 1 to _maxOrderingRow
	functionOrderParam[iIni] = ORDER_NONE
next iIni
! values iOrder_1, iOrder_1_temp ...
for iGroup = 1 to maxFunctionOrder
	values{2} "iOrder_" + str(iGroup,1,0) + "_temp" integervaluesGroup, stringvaluesGroup
	values{2} "iOrder_" + str(iGroup,1,0) integervaluesGroup, stringvaluesGroup

	if GLOB_MODPAR_NAME = "iOrder_" + str(iGroup,1,0) + "_temp" then
		functionOrderParam[iGroup] = temp_iGroupOrder[iGroup]
	else
		functionOrderParam[iGroup] = temp_iGroupOrderArray[iGroup]
	endif
next iGroup	
gosub "fill_back_temporary_param_array_values_to_ordering_parameters"	! input functionOrderParam, output fresh ordering parameters

for iGroup = _maxOrderingRow to maxFunctionOrder+1 step -1
	hideparameter "iOrder_" + str(iGroup,1,0) + "_temp"
next iGroup

values{2} "functionOrderUI" integervaluesGroup, stringvaluesGroup
if GLOB_MODPAR_NAME = "functionOrderUI" then
	gosub "fill_back_temporary_UI_array_values_to_ordering_parameters"	! input functionOrderUI, output fresh ordering parameters
else
	dim functionOrderUI[14]
		functionOrderUI[1] =	iOrder_1[_iUIDisplayScale]
		functionOrderUI[2] =	iOrder_2[_iUIDisplayScale]
		functionOrderUI[3] =	iOrder_3[_iUIDisplayScale]
		functionOrderUI[4] =	iOrder_4[_iUIDisplayScale]
		functionOrderUI[5] =	iOrder_5[_iUIDisplayScale]
		functionOrderUI[6] =	iOrder_6[_iUIDisplayScale]
		functionOrderUI[7] =	iOrder_7[_iUIDisplayScale]
		functionOrderUI[8] =	iOrder_8[_iUIDisplayScale]
		functionOrderUI[9] =	iOrder_9[_iUIDisplayScale]
		functionOrderUI[10] =	iOrder_10[_iUIDisplayScale]
		functionOrderUI[11] =	iOrder_11[_iUIDisplayScale]
		functionOrderUI[12] =	iOrder_12[_iUIDisplayScale]
		functionOrderUI[13] =	iOrder_13[_iUIDisplayScale]
		functionOrderUI[14] =	iOrder_14[_iUIDisplayScale]
		parameters functionOrderUI = functionOrderUI
endif

! ==============================================================================
! Zone Name
! ==============================================================================

if LibraryLangCode = "SWE" then
	gosub "collect_zone_name_values"
endif

! ==============================================================================
! Room Number
! ==============================================================================

if not(bEnableZone1CustomText2) then
	hideparameter "titleCustomText2"

	! need to hide all parameters to not be avaiable at lists too
	hideparameter "prefixRoomNumber",
					"contentRoomNumber",
					"fonttypeRoomNumber",
					"roomNumberBoldStyle",
					"roomNumberItalicStyle",
					"roomNumberUnderlStyle",
					"roomNumberPen",
					"bFrameRoomNumber"

	lock			 "prefixRoomNumber",
					"contentRoomNumber",
					"fonttypeRoomNumber",
					"roomNumberBoldStyle",
					"roomNumberItalicStyle",
					"roomNumberUnderlStyle",
					"roomNumberPen",
					"bFrameRoomNumber"

endif

! ==============================================================================
! Zone Name and Zone Number
! ==============================================================================

! Data Order
values "sOrderNameandNumber" strOrderNameandNumber
values "iOrderNameandNumber" 1,2

if GLOB_MODPAR_NAME = "sOrderNameandNumber" then
	iOrderNameandNumber = ZONE_NUMBER_FIRST
	if sOrderNameandNumber = strOrderNameandNumber[2] then iOrderNameandNumber = ZONE_NAME_FIRST
	parameters iOrderNameandNumber = iOrderNameandNumber
else
	sOrderNameandNumber = strOrderNameandNumber[min(max(1,iOrderNameandNumber),vardim1(strOrderNameandNumber))]
	parameters sOrderNameandNumber = sOrderNameandNumber
endif

! ==============================================================================
! Measured and Calculated Area Unit - bEnableTsuboArea
! ==============================================================================

values{2} "iAreaUnit" 	AREA_UNIT_PROJECT, 				stAreaUnit[1],
						AREA_UNIT_TSUBO_AND_PROJECT, 	stAreaUnit[2],
						AREA_UNIT_TSUBO_ONLY, 			stAreaUnit[3]


values "iAreaDecimalOptions" 0,1,2,3,4
if iAreaUnit <> AREA_UNIT_TSUBO_AND_PROJECT &\
	iAreaUnit <> AREA_UNIT_TSUBO_ONLY then
	lock "iAreaDecimalOptions"
endif

if not(bEnableTsuboArea) then
	iAreaUnit = AREA_UNIT_PROJECT
	parameters iAreaUnit = iAreaUnit

	lock "iAreaUnit", "iAreaDecimalOptions"
	hideparameter "iAreaUnit", "iAreaDecimalOptions"
endif

! ==============================================================================
! Surface Code
! ==============================================================================
if bEnableZone1SurfaceCode then
	! Data Order
	values "sComponentSurfaceCode" strComponentSurfaceCode
	values "iComponentSurfaceCode" 1,2,3

	if GLOB_MODPAR_NAME = "sComponentSurfaceCode" then
		iComponentSurfaceCode = CUSTOM_CODE
		if sComponentSurfaceCode = strComponentSurfaceCode[2] then iComponentSurfaceCode = CUSTOM_CODE_AND_SURFACE_NAME
		if sComponentSurfaceCode = strComponentSurfaceCode[3] then iComponentSurfaceCode = SURFACE_NAME
		parameters iComponentSurfaceCode = iComponentSurfaceCode
	else
		sComponentSurfaceCode = strComponentSurfaceCode[min(max(1,iComponentSurfaceCode),vardim1(strComponentSurfaceCode))]
		parameters sComponentSurfaceCode = sComponentSurfaceCode
	endif
	if iComponentSurfaceCode = CUSTOM_CODE then
		lock	"matFloorFinish",
				"matBaseFinish",
				"matWallFinish",
				"matCeilingFinish"
	else
		if iComponentSurfaceCode = SURFACE_NAME then
			lock	"contentFloorFinish",
					"contentBaseFinish",
					"contentWallFinish",
					"contentCeilingFinish"
		endif
	endif
else
	hideparameter "titleSurfaceCode"

	hideparameter "sComponentSurfaceCode",
					"iComponentSurfaceCode",
					"contentFloorFinish",
					"matFloorFinish",
					"contentBaseFinish",
					"matBaseFinish",
					"contentWallFinish",
					"matWallFinish",
					"contentCeilingFinish",
					"matCeilingFinish",
					"fonttypeSurfaceCode",
					"surfaceCodeBoldStyle",
					"surfaceCodeItalicStyle",
					"surfaceCodeUnderlStyle",
					"surfaceCodepen",
					"bFrameSurfaceCode"

	lock			 "sComponentSurfaceCode",
					"iComponentSurfaceCode",
					"contentFloorFinish",
					"matFloorFinish",
					"contentBaseFinish",
					"matBaseFinish",
					"contentWallFinish",
					"matWallFinish",
					"contentCeilingFinish",
					"matCeilingFinish",
					"fonttypeSurfaceCode",
					"surfaceCodeBoldStyle",
					"surfaceCodeItalicStyle",
					"surfaceCodeUnderlStyle",
					"surfaceCodepen",
					"bFrameSurfaceCode"

endif

! ==============================================================================
! Frame
! ==============================================================================

if GLOB_MODPAR_NAME = "bFrame_temp" then
	bFrame[_iUIDisplayScale] = bFrame_temp
	parameters bFrame = bFrame
else
	bFrame_temp = bFrame[_iUIDisplayScale]
	parameters bFrame_temp = bFrame_temp
endif

if GLOB_MODPAR_NAME = "penFrame_temp" then
	penFrame[_iUIDisplayScale] = penFrame_temp
	parameters penFrame = penFrame
else
	penFrame_temp = penFrame[_iUIDisplayScale]
	parameters penFrame_temp = penFrame_temp
endif

if GLOB_MODPAR_NAME = "bCellLineInside_temp" then
	bCellLineInside[_iUIDisplayScale] = bCellLineInside_temp
	parameters bCellLineInside = bCellLineInside
else
	bCellLineInside_temp = bCellLineInside[_iUIDisplayScale]
	parameters bCellLineInside_temp = bCellLineInside_temp
endif

! UI
if not(bFrame[_iUIDisplayScale]) then
	lock "bCellLineInside", "penFrame"	! array
endif
! Parameter List
if not(bFrame_temp) then
	lock "bCellLineInside_temp","penFrame_temp"
	hideparameter "bCellLineInside_temp","penFrame_temp"
endif


if not(bFrame_temp) then
	hideparameter 	"bFrameName", "bFrameNum", "bFrameGrossArea", "bFrameArea",
					"bFrameCode", "bFramePeri", "bFrameCeil", "bFrameVolume",
					"gs_show_frame_occupancy", "bFrameZoneID", "bFrameAdditionalTags",
					"bFrameCustomText",	"bFrameRoomNumber", "bFrameNameAndNumber",
					"bFrameSurfaceCode"
	lock 			"bFrameName", "bFrameNum", "bFrameGrossArea", "bFrameArea",
					"bFrameCode", "bFramePeri", "bFrameCeil", "bFrameVolume",
					"gs_show_frame_occupancy", "bFrameZoneID", "bFrameAdditionalTags",
					"bFrameCustomText",	"bFrameRoomNumber", "bFrameNameAndNumber",
					"bFrameSurfaceCode"
endif
if bFrameName then
	hideparameter "bZoneNameAllign"
	lock "bZoneNameAllign"
endif
if bFrameNameAndNumber then
	lock "bNameAllignNameAndNumber"
endif

! ==============================================================================
! Occupancy
! ==============================================================================

! ----- Occupancy Data --------------------
if not(gs_show_occupancy_area) then
	hideparameter "gs_area_perPerson_sqm", "gs_area_perPerson_sqf", "gs_number_add_occupants"
	lock "gs_area_perPerson_sqm", "gs_area_perPerson_sqf", "gs_number_add_occupants"
else
	hideparameter "gs_number_occupants"
	lock "gs_number_occupants"
endif
lock "result_occupancy"		! For Shedule

if bImperialArea then
	lock "gs_area_perPerson_sqm"
	hideparameter "gs_area_perPerson_sqm"
else
	lock "gs_area_perPerson_sqf"
	hideparameter "gs_area_perPerson_sqf"
endif

values "gs_area_perPerson_sqm" range (0,)
values "gs_area_perPerson_sqf" range (0,)

if GLOB_MODPAR_NAME = "gs_area_perPerson_sqf" then
	gs_area_perPerson_sqm = gs_area_perPerson_sqf / numConvert
	parameters gs_area_perPerson_sqm = gs_area_perPerson_sqm
else
	gs_area_perPerson_sqf = gs_area_perPerson_sqm * numConvert
	parameters gs_area_perPerson_sqf = gs_area_perPerson_sqf
endif

! ==============================================================================
! Ceiling Height
! ==============================================================================

values{2} "iTypeCeilContent"	CEIL_VALUE,		strTypeCeilContent[1],
								CEIL_TYPICAL,	strTypeCeilContent[2]

if iTypeCeilContent = CEIL_TYPICAL then
	hideparameter "ceiltext"
	lock "ceiltext"
endif

! ==============================================================================
! Listing Parameters
! ==============================================================================

if not (LibraryLangCode = "CZE") then
	hideparameter 	"gs_list_FloorSurface", "gs_list_WallSurface", "gs_list_CeilingSurface"
endif

! ==============================================================================
! UI
! ==============================================================================

put SUBTAB_ZONE_ID
put SUBTAB_ZONE_NAME
put SUBTAB_ZONE_NUM
if bEnableZone1CustomText2 then put SUBTAB_ROOM_NUMBER
put SUBTAB_NAME_AND_NUMBER
put SUBTAB_MEASURED_AREA
put SUBTAB_CALC_AREA
put SUBTAB_FLOORING
if bEnableZone1SurfaceCode then put SUBTAB_SURFACE_CODE
put SUBTAB_PERIMETER
put SUBTAB_CEILING_HGT
put SUBTAB_VOLUME
put SUBTAB_OCCUPANCY
put SUBTAB_ADDITIONAL_TAGS
put SUBTAB_CUSTOM_TEXT

values "subTabSelector" get(nsp)

if gs_ui_current_page > 3 then
	gs_ui_current_page = 3
	parameters gs_ui_current_page = gs_ui_current_page
endif

CALL "ui_tabcontrol" parameters	controlType = 1,
								nTabs = 2,
								gs_ui_current_page = gs_ui_current_page

! --- Define Order Button functions ---------------------------------------------------------

isFirstRun = 0
n = APPLICATION_QUERY ("parameter_script", "firstoccasion_in_progress", isFirstRun)

if n and isFirstRun and GLOB_UI_BUTTON_ID > 999 then
	if GLOB_UI_BUTTON_ID = (_idGlobButton[_iUIDisplayScale] + idButton_addnewRow) then		! add new line at end
		numDisplayedGroup[_iUIDisplayScale] = numDisplayedGroup[_iUIDisplayScale] + 1
		parameters numDisplayedGroup = numDisplayedGroup

		! paste empty/none default to last row
		functionOrderUI[numDisplayedGroup[_iUIDisplayScale]]= ORDER_NONE
	endif

	for i = 1 to numDisplayedGroup[_iUIDisplayScale]
		if GLOB_UI_BUTTON_ID = (_idGlobButton[_iUIDisplayScale]  + idButton_pasteRow + i) then		! paste new line
			dim tempTexts[]
				tempTexts = functionOrderUI

			if numDisplayedGroup[_iUIDisplayScale] < maxFunctionOrder then
				numDisplayedGroup[_iUIDisplayScale] = numDisplayedGroup[_iUIDisplayScale] + 1

				! find the first unused group to paste
				iUnused = 0
				for iGet = 1 to vardim1(integervaluesGroup)-1	! values list without NONE
					for iCalcRow = 1 to numDisplayedGroup[_iUIDisplayScale]
						if tempTexts[iCalcRow] <> integervaluesGroup[iGet] then
							iUnused = integervaluesGroup[iGet]
						else
							iUnused = 0
							iCalcRow = numDisplayedGroup[_iUIDisplayScale] ! force loop end
						endif
					next iCalcRow
					if iUnused <> 0 then
						iGet = vardim1(integervaluesGroup) ! force loop end
					endif
				next iGet
				! paste empty/none default if all values are sold out
				if iUnused = 0 then iUnused = ORDER_NONE
			endif

			for j = 1 to numDisplayedGroup[_iUIDisplayScale]
				if j < i then
					functionOrderUI[j] = tempTexts[j]
				else
					if i = j then
						functionOrderUI[j] = iUnused
					else
						functionOrderUI[j] = tempTexts[j - 1]
					endif
				endif
			next j

		parameters numDisplayedGroup = numDisplayedGroup
		endif
	next i

	for i = 1 to numDisplayedGroup[_iUIDisplayScale]
		if GLOB_UI_BUTTON_ID = (_idGlobButton[_iUIDisplayScale] + idButton_dropRow + i) then		! delete line
			dim tempTexts[]
				tempTexts = functionOrderUI

			if numDisplayedGroup[_iUIDisplayScale] > 1 then numDisplayedGroup[_iUIDisplayScale] = numDisplayedGroup[_iUIDisplayScale] - 1

			for j = 1 to numDisplayedGroup[_iUIDisplayScale] + 1
				if j < i then
					functionOrderUI[j] = tempTexts[j]
				else
					functionOrderUI[j] = tempTexts[j + 1]
				endif
			next j
			functionOrderUI[numDisplayedGroup[_iUIDisplayScale] + 1] = ORDER_NONE

			parameters numDisplayedGroup = numDisplayedGroup
		endif
	next i

	gosub "fill_back_temporary_UI_array_values_to_ordering_parameters"	! input functionOrderUI, output fresh ordering parameters
endif

! ==============================================================================
end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end
! ==============================================================================


! ==============================================================================
"buffer_ordering_integer_values":
! ------------------------------------------------------------------------------
!	Input Variables:
!		integer values
!			ORDER_ZONE_ID
!			ORDER_ZONE_NAME ...
!	Output Variables:
!		stack
! ==============================================================================

! integer values
put ORDER_ZONE_ID,
	ORDER_ZONE_NAME,
	ORDER_ZONE_NUMBER
if bEnableZone1CustomText2 then	put ORDER_ROOM_NUMBER
put ORDER_NAME_AND_NUMBER
put ORDER_MEAS_AREA,
	ORDER_CALC_AREA,
	ORDER_FLOORING
if bEnableZone1SurfaceCode then put ORDER_SURFACE_CODE
put	ORDER_PERIMETER,
	ORDER_CEIL_HEIGHT,
	ORDER_VOLUME,
	ORDER_OCCUPANCY,
	ORDER_ADD_TAGS,
	ORDER_CUSTOM_TEXT,
	ORDER_NONE

return

! ==============================================================================
"charge_temporary_array_with_ordering_integer_params":
! ------------------------------------------------------------------------------
!	Input Parameters:	iOrder_1 [array], iOrder_1_temp [integer],
!						iOrder_2 [array], iOrder_2_temp [integer],
!						...
!						iOrder_14 [array], iOrder_14_temp [integer]
!
!	Output Parameters:	none
!
!	Input Variables:	none
!	Output Variables:	temp_iGroupOrder [Integer]
! ==============================================================================

	temp_iGroupOrder[1] = iOrder_1_temp
	temp_iGroupOrder[2] = iOrder_2_temp
	temp_iGroupOrder[3] = iOrder_3_temp
	temp_iGroupOrder[4] = iOrder_4_temp
	temp_iGroupOrder[5] = iOrder_5_temp
	temp_iGroupOrder[6] = iOrder_6_temp 
	temp_iGroupOrder[7] = iOrder_7_temp
	temp_iGroupOrder[8] = iOrder_8_temp
	temp_iGroupOrder[9] = iOrder_9_temp
	temp_iGroupOrder[10] = iOrder_10_temp
	temp_iGroupOrder[11] = iOrder_11_temp
	temp_iGroupOrder[12] = iOrder_12_temp
	temp_iGroupOrder[13] = iOrder_13_temp
	temp_iGroupOrder[14] = iOrder_14_temp

	temp_iGroupOrderArray[1] = iOrder_1[_iUIDisplayScale]
	temp_iGroupOrderArray[2] = iOrder_2[_iUIDisplayScale]
	temp_iGroupOrderArray[3] = iOrder_3[_iUIDisplayScale]
	temp_iGroupOrderArray[4] = iOrder_4[_iUIDisplayScale]
	temp_iGroupOrderArray[5] = iOrder_5[_iUIDisplayScale]
	temp_iGroupOrderArray[6] = iOrder_6[_iUIDisplayScale]
	temp_iGroupOrderArray[7] = iOrder_7[_iUIDisplayScale]
	temp_iGroupOrderArray[8] = iOrder_8[_iUIDisplayScale]
	temp_iGroupOrderArray[9] = iOrder_9[_iUIDisplayScale]
	temp_iGroupOrderArray[10] = iOrder_10[_iUIDisplayScale]
	temp_iGroupOrderArray[11] = iOrder_11[_iUIDisplayScale]
	temp_iGroupOrderArray[12] = iOrder_12[_iUIDisplayScale]
	temp_iGroupOrderArray[13] = iOrder_13[_iUIDisplayScale]
	temp_iGroupOrderArray[14] = iOrder_14[_iUIDisplayScale]



return

! ==============================================================================
"fill_back_temporary_param_array_values_to_ordering_parameters":
! ------------------------------------------------------------------------------
!	Input Parameters:	none
!
!	Output Parameters:	iOrder_1 [array], iOrder_1_temp [integer],
!						iOrder_2 [array], iOrder_2_temp [integer],
!						...
!						iOrder_14 [array], iOrder_14_temp [integer]
!
!	Input Variables:	functionOrder2D [Integer], _iUIDisplayScale [integer]
!	Output Variables:	none
! ==============================================================================

	iOrder_1[_iUIDisplayScale] =	functionOrderParam[1]
	iOrder_2[_iUIDisplayScale] =	functionOrderParam[2]
	iOrder_3[_iUIDisplayScale] =	functionOrderParam[3]
	iOrder_4[_iUIDisplayScale] =	functionOrderParam[4]
	iOrder_5[_iUIDisplayScale] =	functionOrderParam[5]
	iOrder_6[_iUIDisplayScale] =	functionOrderParam[6]
	iOrder_7[_iUIDisplayScale] =	functionOrderParam[7]
	iOrder_8[_iUIDisplayScale] =	functionOrderParam[8]
	iOrder_9[_iUIDisplayScale] =	functionOrderParam[9]
	iOrder_10[_iUIDisplayScale] =	functionOrderParam[10]
	iOrder_11[_iUIDisplayScale] =	functionOrderParam[11]
	iOrder_12[_iUIDisplayScale] =	functionOrderParam[12]
	iOrder_13[_iUIDisplayScale] =	functionOrderParam[13]
	iOrder_14[_iUIDisplayScale] =	functionOrderParam[14]

	iOrder_1_temp =		functionOrderParam[1]
	iOrder_2_temp =		functionOrderParam[2]
	iOrder_3_temp =		functionOrderParam[3]
	iOrder_4_temp =		functionOrderParam[4]
	iOrder_5_temp =		functionOrderParam[5]
	iOrder_6_temp =		functionOrderParam[6]
	iOrder_7_temp =		functionOrderParam[7]
	iOrder_8_temp =		functionOrderParam[8]
	iOrder_9_temp =		functionOrderParam[9]
	iOrder_10_temp =	functionOrderParam[10]
	iOrder_11_temp =	functionOrderParam[11]
	iOrder_12_temp =	functionOrderParam[12]
	iOrder_13_temp =	functionOrderParam[13]
	iOrder_14_temp =	functionOrderParam[14]

	parameters iOrder_1 = iOrder_1,   iOrder_1_temp = iOrder_1_temp, 
				iOrder_2 = iOrder_2,  iOrder_2_temp = iOrder_2_temp,
				iOrder_3 = iOrder_3,  iOrder_3_temp = iOrder_3_temp,
				iOrder_4 = iOrder_4,  iOrder_4_temp = iOrder_4_temp,
				iOrder_5 = iOrder_5,  iOrder_5_temp = iOrder_5_temp,
				iOrder_6 = iOrder_6,  iOrder_6_temp = iOrder_6_temp,
				iOrder_7 = iOrder_7,  iOrder_7_temp = iOrder_7_temp,
				iOrder_8 = iOrder_8,  iOrder_8_temp = iOrder_8_temp,
				iOrder_9 = iOrder_9,  iOrder_9_temp = iOrder_9_temp,
				iOrder_10 = iOrder_10,iOrder_10_temp = iOrder_10_temp,
				iOrder_11 = iOrder_11,iOrder_11_temp = iOrder_11_temp,
				iOrder_12 = iOrder_12,iOrder_12_temp = iOrder_12_temp,
				iOrder_13 = iOrder_13,iOrder_13_temp = iOrder_13_temp,
				iOrder_14 = iOrder_14, iOrder_14_temp = iOrder_14_temp

return

! ==============================================================================
"fill_back_temporary_UI_array_values_to_ordering_parameters":
! ------------------------------------------------------------------------------
!	Input Parameters:	functionOrderUI [Integer]
!
!	Output Parameters:	iOrder_1 [array]
!						iOrder_2 [array]
!						...
!						iOrder_14 [array]
!
!	Input Variables:	_iUIDisplayScale [integer]
!	Output Variables:	none
! ==============================================================================

	iOrder_1[_iUIDisplayScale] = functionOrderUI[1]
	iOrder_2[_iUIDisplayScale] = functionOrderUI[2]
	iOrder_3[_iUIDisplayScale] = functionOrderUI[3]
	iOrder_4[_iUIDisplayScale] = functionOrderUI[4]
	iOrder_5[_iUIDisplayScale] = functionOrderUI[5]
	iOrder_6[_iUIDisplayScale] = functionOrderUI[6]
	iOrder_7[_iUIDisplayScale] = functionOrderUI[7]
	iOrder_8[_iUIDisplayScale] = functionOrderUI[8]
	iOrder_9[_iUIDisplayScale] = functionOrderUI[9]
	iOrder_10[_iUIDisplayScale] = functionOrderUI[10]
	iOrder_11[_iUIDisplayScale] = functionOrderUI[11]
	iOrder_12[_iUIDisplayScale] = functionOrderUI[12]
	iOrder_13[_iUIDisplayScale] = functionOrderUI[13]
	iOrder_14[_iUIDisplayScale] = functionOrderUI[14]

	parameters iOrder_1 = iOrder_1,
				iOrder_2 = iOrder_2,
				iOrder_3 = iOrder_3,
				iOrder_4 = iOrder_4,
				iOrder_5 = iOrder_5,
				iOrder_6 = iOrder_6,
				iOrder_7 = iOrder_7,
				iOrder_8 = iOrder_8,
				iOrder_9 = iOrder_9,
				iOrder_10 = iOrder_10,
				iOrder_11 = iOrder_11,
				iOrder_12 = iOrder_12,
				iOrder_13 = iOrder_13,
				iOrder_14 = iOrder_14

return

! ==============================================================================
"collect_zone_name_values":
! ------------------------------------------------------------------------------
!	Input Parameters:	none
!	Output Parameters:	none
!
!	Input Variables:	none
!	Output Variables:	stZoneNameValues
! ==============================================================================
	dim stZoneNameValues[]

	iv = 1
	stZoneNameValues[iv] = "ALLM KOMMUNIK"				: iv=iv+1
	stZoneNameValues[iv] = "ALLRUM"						: iv=iv+1
	stZoneNameValues[iv] = "ALTAN"						: iv=iv+1
	stZoneNameValues[iv] = "ALTAN/BALKONG"				: iv=iv+1
	stZoneNameValues[iv] = "AMBULANSHALL"				: iv=iv+1
	stZoneNameValues[iv] = "ANDAKTSRUM"					: iv=iv+1
	stZoneNameValues[iv] = "ARBETSRUM"					: iv=iv+1
	stZoneNameValues[iv] = "ARKIV"						: iv=iv+1
	stZoneNameValues[iv] = "ATELJÉ"						: iv=iv+1
	stZoneNameValues[iv] = "AVFALLSHANTERING"			: iv=iv+1
	stZoneNameValues[iv] = "BAD"						: iv=iv+1
	stZoneNameValues[iv] = "BADRUM"						: iv=iv+1
	stZoneNameValues[iv] = "BALKONG"					: iv=iv+1
	stZoneNameValues[iv] = "BARNVAGNAR"					: iv=iv+1
	stZoneNameValues[iv] = "BASTU"						: iv=iv+1
	stZoneNameValues[iv] = "BEREDNING"					: iv=iv+1
	stZoneNameValues[iv] = "BIBLIOTEK"					: iv=iv+1
	stZoneNameValues[iv] = "BRANDUTRUSTNING"			: iv=iv+1
	stZoneNameValues[iv] = "BUTIKSLOKAL"				: iv=iv+1
	stZoneNameValues[iv] = "CAFETERIA"					: iv=iv+1
	stZoneNameValues[iv] = "CARPORT"					: iv=iv+1
	stZoneNameValues[iv] = "CYKELRUM"					: iv=iv+1
	stZoneNameValues[iv] = "DAGRUM"						: iv=iv+1
	stZoneNameValues[iv] = "DATA"						: iv=iv+1
	stZoneNameValues[iv] = "DATARUM"					: iv=iv+1
	stZoneNameValues[iv] = "DIALYS"						: iv=iv+1
	stZoneNameValues[iv] = "DISKRUM"					: iv=iv+1
	stZoneNameValues[iv] = "DJURRUM"					: iv=iv+1
	stZoneNameValues[iv] = "DUSCH"						: iv=iv+1
	stZoneNameValues[iv] = "ELCENTRAL"					: iv=iv+1
	stZoneNameValues[iv] = "ENTRÉ"						: iv=iv+1
	stZoneNameValues[iv] = "ENTRÉ/HALL"					: iv=iv+1
	stZoneNameValues[iv] = "ENTRÉHALL"					: iv=iv+1
	stZoneNameValues[iv] = "EXPEDITION"					: iv=iv+1
	stZoneNameValues[iv] = "FLÄKTRUM"					: iv=iv+1
	stZoneNameValues[iv] = "FOTOATELJÉ"					: iv=iv+1
	stZoneNameValues[iv] = "FRYSRUM"					: iv=iv+1
	stZoneNameValues[iv] = "FÖRBEREDELSERUM"			: iv=iv+1
	stZoneNameValues[iv] = "FÖRELÄSNINGSRUM"			: iv=iv+1
	stZoneNameValues[iv] = "FÖRLOSSNINGSRUM"			: iv=iv+1
	stZoneNameValues[iv] = "FÖRRÅD"						: iv=iv+1
	stZoneNameValues[iv] = "FÖRSÄLJNINGSLOKAL"			: iv=iv+1
	stZoneNameValues[iv] = "GARAGE"						: iv=iv+1
	stZoneNameValues[iv] = "GARAGE/TVÄTTHALL"			: iv=iv+1
	stZoneNameValues[iv] = "GARDEROB"					: iv=iv+1
	stZoneNameValues[iv] = "GRANSKNINGSRUM"				: iv=iv+1
	stZoneNameValues[iv] = "GROVENTRÉ"					: iv=iv+1
	stZoneNameValues[iv] = "GRUPPRUM"					: iv=iv+1
	stZoneNameValues[iv] = "GYMNASTIKSAL"				: iv=iv+1
	stZoneNameValues[iv] = "GÅNG/KORRIDOR"				: iv=iv+1
	stZoneNameValues[iv] = "GÄSTRUM"					: iv=iv+1
	stZoneNameValues[iv] = "HALL"						: iv=iv+1
	stZoneNameValues[iv] = "HISS"						: iv=iv+1
	stZoneNameValues[iv] = "HISSCHAKT"					: iv=iv+1
	stZoneNameValues[iv] = "HISSHALL"					: iv=iv+1
	stZoneNameValues[iv] = "HISSMASKINRUM"				: iv=iv+1
	stZoneNameValues[iv] = "HOTELLRUM"					: iv=iv+1
	stZoneNameValues[iv] = "HÄLSOVÅRD"					: iv=iv+1
	stZoneNameValues[iv] = "HÖRSAL"						: iv=iv+1
	stZoneNameValues[iv] = "IDROTTSHALL"				: iv=iv+1
	stZoneNameValues[iv] = "INLÄMNINGSUTRYMME"			: iv=iv+1
	stZoneNameValues[iv] = "ISHALL"						: iv=iv+1
	stZoneNameValues[iv] = "JOURRUM"					: iv=iv+1
	stZoneNameValues[iv] = "KAPELL"						: iv=iv+1
	stZoneNameValues[iv] = "KAPELL/ANDAKTSRUM"			: iv=iv+1
	stZoneNameValues[iv] = "KAPPRUM"					: iv=iv+1
	stZoneNameValues[iv] = "KARUSELL"					: iv=iv+1
	stZoneNameValues[iv] = "KLASSRUM"					: iv=iv+1
	stZoneNameValues[iv] = "KLK"						: iv=iv+1
	stZoneNameValues[iv] = "KLÄDKAMMARE"				: iv=iv+1
	stZoneNameValues[iv] = "KLÄDVÅRD"					: iv=iv+1
	stZoneNameValues[iv] = "KOMMUNIKATION"				: iv=iv+1
	stZoneNameValues[iv] = "KONFERENS"					: iv=iv+1
	stZoneNameValues[iv] = "KONFERENSRUM"				: iv=iv+1
	stZoneNameValues[iv] = "KONTOR"						: iv=iv+1
	stZoneNameValues[iv] = "KONTORSCELL"				: iv=iv+1
	stZoneNameValues[iv] = "KONTORSLANDSKAP"			: iv=iv+1
	stZoneNameValues[iv] = "KONTORSLOKAL"				: iv=iv+1
	stZoneNameValues[iv] = "KOPIERING"					: iv=iv+1
	stZoneNameValues[iv] = "KORRIDOR"					: iv=iv+1
	stZoneNameValues[iv] = "KULVERT"					: iv=iv+1
	stZoneNameValues[iv] = "KUNDMOTTAGNING"				: iv=iv+1
	stZoneNameValues[iv] = "KYLRUM"						: iv=iv+1
	stZoneNameValues[iv] = "KÖK"						: iv=iv+1
	stZoneNameValues[iv] = "LAB"						: iv=iv+1
	stZoneNameValues[iv] = "LABORATORIUM"				: iv=iv+1
	stZoneNameValues[iv] = "LAGER"						: iv=iv+1
	stZoneNameValues[iv] = "LASTKAJ"					: iv=iv+1
	stZoneNameValues[iv] = "LEKRUM"						: iv=iv+1
	stZoneNameValues[iv] = "LEKSTUGA"					: iv=iv+1
	stZoneNameValues[iv] = "LEKTIONSSAL"				: iv=iv+1
	stZoneNameValues[iv] = "LGH-FÖRRÅD"					: iv=iv+1
	stZoneNameValues[iv] = "LOFTGÅNG"					: iv=iv+1
	stZoneNameValues[iv] = "MANÖVERRUM"					: iv=iv+1
	stZoneNameValues[iv] = "MATPLATS"					: iv=iv+1
	stZoneNameValues[iv] = "MATSAL"						: iv=iv+1
	stZoneNameValues[iv] = "MEDICINRUM"					: iv=iv+1
	stZoneNameValues[iv] = "MOTTAGNING"					: iv=iv+1
	stZoneNameValues[iv] = "OBDUKTION"					: iv=iv+1
	stZoneNameValues[iv] = "OBDUKTION/KYLRUM"			: iv=iv+1
	stZoneNameValues[iv] = "OMKLÄDNINGSRUM"				: iv=iv+1
	stZoneNameValues[iv] = "OPERATION"					: iv=iv+1
	stZoneNameValues[iv] = "OPERATIONSSAL"				: iv=iv+1
	stZoneNameValues[iv] = "PARKERING/GARAGE"			: iv=iv+1
	stZoneNameValues[iv] = "PASSAGE"					: iv=iv+1
	stZoneNameValues[iv] = "PENTRY"						: iv=iv+1
	stZoneNameValues[iv] = "PERSONAL"					: iv=iv+1
	stZoneNameValues[iv] = "PERSONALRUM"				: iv=iv+1
	stZoneNameValues[iv] = "PERSONALUTRYMME"			: iv=iv+1
	stZoneNameValues[iv] = "PROVTAGNINGSRUM"			: iv=iv+1
	stZoneNameValues[iv] = "RELAX"						: iv=iv+1
	stZoneNameValues[iv] = "RENSERI"					: iv=iv+1
	stZoneNameValues[iv] = "RUM"						: iv=iv+1
	stZoneNameValues[iv] = "RWC"						: iv=iv+1
	stZoneNameValues[iv] = "RWC/DUSCH"					: iv=iv+1
	stZoneNameValues[iv] = "RÖNTGENRUM"					: iv=iv+1
	stZoneNameValues[iv] = "RÖR"						: iv=iv+1
	stZoneNameValues[iv] = "SAMLINGSRUM"				: iv=iv+1
	stZoneNameValues[iv] = "SAMLINGSSAL"				: iv=iv+1
	stZoneNameValues[iv] = "SAMTALSRUM"					: iv=iv+1
	stZoneNameValues[iv] = "SAMVARORUM"					: iv=iv+1
	stZoneNameValues[iv] = "SANERINGSHALL"				: iv=iv+1
	stZoneNameValues[iv] = "SCHAKT"						: iv=iv+1
	stZoneNameValues[iv] = "SIMHALL"					: iv=iv+1
	stZoneNameValues[iv] = "SJUKVÅRDSUTRYMME"			: iv=iv+1
	stZoneNameValues[iv] = "SKAFFERI"					: iv=iv+1
	stZoneNameValues[iv] = "SKYDDSRUM"					: iv=iv+1
	stZoneNameValues[iv] = "SKÖTRUM"					: iv=iv+1
	stZoneNameValues[iv] = "SLUSS"						: iv=iv+1
	stZoneNameValues[iv] = "SOVRUM"						: iv=iv+1
	stZoneNameValues[iv] = "SPORTHALL"					: iv=iv+1
	stZoneNameValues[iv] = "STERILFÖRRÅD"				: iv=iv+1
	stZoneNameValues[iv] = "STERILRUM"					: iv=iv+1
	stZoneNameValues[iv] = "STORKÖK"					: iv=iv+1
	stZoneNameValues[iv] = "STUDIERUM"					: iv=iv+1
	stZoneNameValues[iv] = "STÄD"						: iv=iv+1
	stZoneNameValues[iv] = "STÄDFÖRRAD"					: iv=iv+1
	stZoneNameValues[iv] = "SVEPNING"					: iv=iv+1
	stZoneNameValues[iv] = "SVEPNING/VISNING"			: iv=iv+1
	stZoneNameValues[iv] = "TANDVÅRDSUTRYMME"			: iv=iv+1
	stZoneNameValues[iv] = "TEKNISK DRIFT"				: iv=iv+1
	stZoneNameValues[iv] = "TELECENTRAL"				: iv=iv+1
	stZoneNameValues[iv] = "TERAPI"						: iv=iv+1
	stZoneNameValues[iv] = "TERRASS"					: iv=iv+1
	stZoneNameValues[iv] = "TERRASS/BALKONG"			: iv=iv+1
	stZoneNameValues[iv] = "TOALETT"					: iv=iv+1
	stZoneNameValues[iv] = "TORKRUM"					: iv=iv+1
	stZoneNameValues[iv] = "TRAFIK"						: iv=iv+1
	stZoneNameValues[iv] = "TRAPPA"						: iv=iv+1
	stZoneNameValues[iv] = "TRAPPHALL"					: iv=iv+1
	stZoneNameValues[iv] = "TRAPPHUS"					: iv=iv+1
	stZoneNameValues[iv] = "TRAPPLAN"					: iv=iv+1
	stZoneNameValues[iv] = "TRUCKLADDNING"				: iv=iv+1
	stZoneNameValues[iv] = "TVÄTT"						: iv=iv+1
	stZoneNameValues[iv] = "TVÄTTHALL"					: iv=iv+1
	stZoneNameValues[iv] = "UNDERCENTRAL"				: iv=iv+1
	stZoneNameValues[iv] = "UNDERSÖKNINGSRUM"			: iv=iv+1
	stZoneNameValues[iv] = "UNDERVISNING"				: iv=iv+1
	stZoneNameValues[iv] = "UPPSTÄLLNING"				: iv=iv+1
	stZoneNameValues[iv] = "UPPSTÄLLNING/VAGNHALL"		: iv=iv+1
	stZoneNameValues[iv] = "UPPVAKNINGSRUM"				: iv=iv+1
	stZoneNameValues[iv] = "UTBILDNINGSRUM"				: iv=iv+1
	stZoneNameValues[iv] = "UTLÄMNING"					: iv=iv+1
	stZoneNameValues[iv] = "UTSTÄLLNING"				: iv=iv+1
	stZoneNameValues[iv] = "V"							: iv=iv+1
	stZoneNameValues[iv] = "VAGNHALL"					: iv=iv+1
	stZoneNameValues[iv] = "VARDAGSRUM"					: iv=iv+1
	stZoneNameValues[iv] = "VARUINTAG"					: iv=iv+1
	stZoneNameValues[iv] = "VARUINTAG/LASTKAJ"			: iv=iv+1
	stZoneNameValues[iv] = "VATTENRUM"					: iv=iv+1
	stZoneNameValues[iv] = "VERKSTAD"					: iv=iv+1
	stZoneNameValues[iv] = "VILRUM"						: iv=iv+1
	stZoneNameValues[iv] = "VINDFÅNG"					: iv=iv+1
	stZoneNameValues[iv] = "VISNING"					: iv=iv+1
	stZoneNameValues[iv] = "VS"							: iv=iv+1
	stZoneNameValues[iv] = "VVS"						: iv=iv+1
	stZoneNameValues[iv] = "VÅRDRUM"					: iv=iv+1
	stZoneNameValues[iv] = "VÄNTRUM"					: iv=iv+1
	stZoneNameValues[iv] = "WC"							: iv=iv+1
	stZoneNameValues[iv] = "WC/D"						: iv=iv+1
	stZoneNameValues[iv] = "WC/DUSCH"					: iv=iv+1
	stZoneNameValues[iv] = "ÅTERVINNINGSUTRYMME"		: iv=iv+1
	stZoneNameValues[iv] = "ÖPPET NER"					: iv=iv+1
	stZoneNameValues[iv] = "ÖVRE HALL"					: iv=iv+1

	values "ROOM_NAME" stZoneNameValues, custom

return
