
EPS=0.00001
unID=1 : unIDR=800 : unIDD=4000
n = REQUEST ("Name_of_main", "", name)
is_call = 0 : if name<>"" then is_call = 1
dict profile_data : flag = 0


dim ui_page_name[] : i=0
i=i+1 : ui_page_name[i]="Настройки фасонки"
i=i+1 : ui_page_name[i]="Спецификация"
i=i+1 : ui_page_name[i]="Проекция на плане"

if GLOB_SCRIPT_TYPE=2 or GLOB_SCRIPT_TYPE=3 then
	success = LIBRARYGLOBAL ("Libraryflobals-km", "show_connect", show_connect)
	show = 0
	if show_connect and upr then show = 1
	if not(upr) then show = 1
	if show then
		success = LIBRARYGLOBAL ("Libraryflobals-km", "show_list", show_list)
		show = show_list
	endif
	if show then 
		call "Показ_по_типам" PARAMETERS tip_konstr=tip_konstr RETURNED_PARAMETERS show_type
		show = show_type
	endif
	if show then 
		call "Показ_по_группам" PARAMETERS ALL el_views=el_views RETURNED_PARAMETERS show_el
		show = show_el
	endif
	if show then 
		call "Показ_по_сборкам" PARAMETERS ALL subpos=subpos, pos=GLOB_ID RETURNED_PARAMETERS show_subpos, show_marker
		show = show_subpos
	endif
	if show then
		success = LIBRARYGLOBAL ("Libraryflobals-km", "show_izd", show_izd)
		success = LIBRARYGLOBAL ("Libraryflobals-km", "show_metall", show_metall)
		if type_spec = "Металл" and not(show_metall) then show = 0
		if type_spec = "Изделие" and not(show_izd) then show = 0
	endif
	if show then
		success = LIBRARYGLOBAL ("Libraryflobals-km", "ignore_id", ignore_id)
		success = LIBRARYGLOBAL ("Libraryflobals-km", "show_ingore", show_ingore)
		show_spec = 0 : IF STRSTR (GLOB_ID, ignore_id, 1) > 0 or type_spec="Не специфицировать" THEN show_spec = 1
		if not(show_ingore) and show_spec then show = 0
	endif
else
	show = 1
endif

if strlen(syst_name)>1 and (GLOB_SCRIPT_TYPE=2 or GLOB_SCRIPT_TYPE=3) then
	success = LIBRARYGLOBAL ("Libraryflobals-mep", "show_axis", show_axis)
	success = LIBRARYGLOBAL ("Libraryflobals-mep", "show_axis_and", show_axis_and)
	success = LIBRARYGLOBAL ("Libraryflobals-mep", "show_conventions", show_conventions)
	success = LIBRARYGLOBAL ("Libraryflobals-mep", "show_op", show_op)
	call "Показ_систем" PARAMETERS All isMep=0, isEqp=1 RETURNED_PARAMETERS show_el
else
	show_el = 1
endif

VERT_SHEET = 1
GOR_SHEET = 2
POLY_SHEET = 3

_data.bort.set.name_prof = inx_name_prof
_data.bort.set.tip_p = inx_tip_p
_data.bort.set.tip_konstr = tip_konstr


_data.bort.set.profile = inx_profile
_data.bort.set.mater = mater
_data.bort.set.thickness = ZZYZX
_data.bort.set.typesheet = VERT_SHEET
_data.bort.set.fold = 1

csum = "" : if haskey(_data.bort.read.csum) then csum = _data.bort.read.csum
profile_data.set = _data.bort.set
gosub "read_profile"
if flag then _data.bort.read = profile_data.read
if haskey(_data.bort.set.coord) then _d = REMOVEKEY (_data.bort.set.coord)

poly_data.hotspot_addz = B
poly_data.show_line = 1
poly_data.rx = rx
poly_data.ry = ry
poly_data.rz = rz
poly_data.is2d = 0
if (abs(rx)<EPS and abs(ry)<EPS and abs(rz)<EPS) or edit_mod then poly_data.is2d = 1
poly_data.show_line_3d = 0
poly_data.show_line_2d = poly_data.is2d
call "macro_polyline" parameters all poly_data = poly_data
if haskey(poly_data.aprox) then _data.bort.set.coord = poly_data.aprox
if haskey(poly_data.aproxn) then 
	FOR i = 1 TO poly_data.aproxn
		if haskey(poly_data.aprox[i].r) then
			_data.bort.set.coord[i].r = poly_data.aprox[i].r
		else
			_data.bort.set.coord[i].r = 0
		endif
	next i
endif
!Путь профиля
if haskey(_data.bort.set.path) then _d = REMOVEKEY (_data.bort.set.path)
i = 0
i = i + 1
_data.bort.set.path[i].z = -0.001
i = i + 1
_data.bort.set.path[i].z = 0
i = i + 1
_data.bort.set.path[i].z = B
i = i + 1
_data.bort.set.path[i].z = B+0.001

if haskey(_data.bort.set.start) then _d = REMOVEKEY (_data.bort.set.start)

_data.bort.set.start[1].rx = rx
_data.bort.set.start[1].ry = ry
_data.bort.set.start[1].rz = rz

i = 0 : _data.bort.set.n = 0
i = i + 1
_data.bort.set.start[i].x = 0
_data.bort.set.start[i].y = 0
if thickness_mirr then 
	_data.bort.set.cpoint.sgnth = -1
else
	_data.bort.set.cpoint.sgnth = 1
endif
_data.bort.set.n = 1
_data.bort.set.is2d = 0
if haskey(profile_data.set) then _d = REMOVEKEY (profile_data.set)
profile_data.set = _data.bort.set
call "macro_place_sheet" parameters all, profile_data = profile_data


goto "m_end"

"read_profile":
	new_csum = str("%.0",profile_data.set.name_prof)+":"+str("%.0",profile_data.set.tip_p)+":"+str("%.0",profile_data.set.profile)+":"+str("%.0",sort_data.version)
	if new_csum<>csum then
		flag = 0
		profile_data.error = ""
		if haskey(profile_data.read) then _d = REMOVEKEY (profile_data.read)
		call "macro_get_profile" PARAMETERS prof_data = profile_data, sort_data = sort_data, RETURNED_PARAMETERS profile_data
		if profile_data.error = "ok" then flag = 1
		if profile_data.error <> "ok" then goto "m_end"
	endif
return

"m_end":
