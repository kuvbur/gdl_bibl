
if strlen(syst_name)>1 then
	if show_el < EPS then end
	IF show_op < EPS THEN END
	CALL "MEP_m_RequestSystemGlobals" PARAMETERS ALL one_ConID=0 returned_parameters gs_cont_pe, sMat, gs_InsMat
endif

call "Шаблон профиля" parameters all
if not(show) then end

if GLOB_CONTEXT=6 then
	k = 5
	pen SYMB_SECT_PEN
	MUL2 A_/1000, A_/1000 
	line2 0,0,k,0
	end
endif

chStoryDist = GLOB_CH_STORY_DIST
IF gs_StorySensitive = 0 THEN chStoryDist = 0
if chStoryDist > EPS then !"Этажом выше"
	gs_cont_pen = gs_cont_pen_up
	gs_fill_type = gs_fill_type_up
	gs_fill_pen = gs_fill_pen_up
	gs_back_pen = gs_back_pen_up
	gs_line_type = gs_line_type_up
	mark = mark_up
endif
if chStoryDist < EPS then
	if abs(chStoryDist) < EPS then !"Собственный этаж"
		
	else !"Этажом ниже"
		gs_cont_pen = gs_cont_pen_down
		gs_fill_type = gs_fill_type_down
		gs_fill_pen = gs_fill_pen_down
		gs_back_pen = gs_back_pen_down
		gs_line_type = gs_line_type_down
		mark = mark_down
	endif
endif

pen gs_cont_pen
fill gs_fill_type
line_type gs_line_type
SECT_ATTRS gs_fill_type, gs_back_pen, gs_fill_pen, gs_cont_pen, gs_line_type

if abs(rx mod 180)<EPS then
	kx = cos (ry)
	for i = 1 to n_t
		gosub "change_2d"
!		line2 kontur[i][1] * kx, kontur[i][2], kontur[i+1][1] * kx, kontur[i+1][2]
		hotline2 kontur[i][1] * kx, kontur[i][2], kontur[i+1][1] * kx, kontur[i+1][2]
	next i
endif

if show_mvo_proj=2 then
	show_mvo_proj = 0
	success = LIBRARYGLOBAL ("Libraryflobals-km", "show_mvo_proj", show_mvo_proj)
	if show_mvo_proj then
		use_mvo_h = 0 : success = LIBRARYGLOBAL ("Libraryflobals-km", "use_mvo_h", use_mvo_h)
		if use_mvo_h then
			success = LIBRARYGLOBAL ("Libraryflobals-km", "t_proj_down", t_proj_down)
			success = LIBRARYGLOBAL ("Libraryflobals-km", "t_proj_up", t_proj_up)
			success = LIBRARYGLOBAL ("Libraryflobals-km", "h_proj_down", h_proj_down)
			success = LIBRARYGLOBAL ("Libraryflobals-km", "h_proj_up", h_proj_up)
			success = LIBRARYGLOBAL ("Libraryflobals-km", "is_show_lower", is_show_lower)
			success = LIBRARYGLOBAL ("Libraryflobals-km", "is_show_upper", is_show_upper)
		endif
	endif
endif

if show3dhotspot2d then PROJECT2{3} 3, 270, 1, 16+32, gs_back_pen, 0, 0, 90

if show_mvo_proj then 
	if is_show_lower then
		same_pen = (gs_fill_pen_down = gs_cont_pen_down)
		pen gs_fill_pen_down
		fill gs_fill_type_down
		line_type gs_line_type_down
		SECT_ATTRS gs_fill_type_down, gs_back_pen_down, gs_fill_pen_down, gs_cont_pen_down, gs_line_type_down
		PROJECT2{3} 3, 270, 3+32, 1+4+(2+8)*same_pen, gs_back_pen_down, 0, 0, 90, PARAMETERS cutplane_enable = 1, n_part_show = -1
		if not(same_pen) then
			pen gs_cont_pen_down
			PROJECT2{3} 3, 270, 3+32, 2+8, 0, 0, 0, 90, PARAMETERS cutplane_enable = 1, n_part_show = -1
		endif
	endif
	same_pen = (gs_fill_pen = gs_cont_pen)
	pen gs_fill_pen
	fill gs_fill_type
	line_type gs_line_type
	SECT_ATTRS gs_fill_type, gs_back_pen, gs_fill_pen, gs_cont_pen, gs_line_type
	PROJECT2{3} 3, 270, 3+32, 1+4+(2+8)*same_pen, gs_back_pen, 0, 0, 90, PARAMETERS cutplane_enable = 1, n_part_show = 0
	if not(same_pen) then
		pen gs_cont_pen
		PROJECT2{3} 3, 270, 3+32, 2+8, 0, 0, 0, 90, PARAMETERS cutplane_enable = 1, n_part_show = 0
	endif
	if is_show_upper then
		same_pen = (gs_fill_pen_up = gs_cont_pen_up)
		pen gs_fill_pen_up
		fill gs_fill_type_up
		line_type gs_line_type_up
		SECT_ATTRS gs_fill_type_up, gs_back_pen_up, gs_fill_pen_up, gs_cont_pen_up, gs_line_type_up
		PROJECT2{3} 3, 270, 3+32, 1+4+(2+8)*same_pen, gs_back_pen_up, 0, 0, 90, PARAMETERS cutplane_enable = 1, n_part_show = 1
		if not(same_pen) then
			pen gs_cont_pen_up
			PROJECT2{3} 3, 270, 3+32, 2+8, 0, 0, 0, 90, PARAMETERS cutplane_enable = 1, n_part_show = 1
		endif
	endif
	end
endif
same_pen = (gs_fill_pen = gs_cont_pen)
pen gs_fill_pen
fill gs_fill_type
line_type gs_line_type
SECT_ATTRS gs_fill_type, gs_back_pen, gs_fill_pen, gs_cont_pen, gs_line_type
PROJECT2{3} 3, 270, 3+32, 1+4+(2+8)*same_pen, gs_back_pen, 0, 0, 90, PARAMETERS cutplane_enable = 0
if not(same_pen) then
	pen gs_cont_pen
	PROJECT2{3} 3, 270, 3+32, 2+8, 0, 0, 0, 90, PARAMETERS cutplane_enable = 0
endif

goto "2dend"

"change_2d":
	HOTSPOT2 0, kontur[i][2], unID, kontur[i][1], 1+128: unID=unID+1
	HOTSPOT2 -1, kontur[i][2], unID, kontur[i][1], 3: unID=unID+1
	HOTSPOT2 kontur[i][1] * kx, kontur[i][2], unID, kontur[i][1], 2: unID=unID+1
	HOTSPOT2 kontur[i][1] * kx, 0,unID, kontur[i][2], 1+128: unID=unID+1
	HOTSPOT2 kontur[i][1] * kx, -1,unID, kontur[i][2], 3: unID=unID+1
	HOTSPOT2 kontur[i][1] * kx, kontur[i][2],unID, kontur[i][2], 2: unID=unID+1

	!-- Тип сварки
	j = i - 1 : if i=1 then j = n_t
	dx = kontur[j][1]-kontur[i][1]
	dy = kontur[j][2]-kontur[i][2]
	gosub "xytorphi"
	add2 kontur[i][1], kontur[i][2]
	rot2 phi
	add2 r/3,0
	HOTSPOT2 0, 0, unID, weld_side_coord[i][1], 1+128, weld_side[i]: unID=unID+1
	HOTSPOT2 0, -1, unID, weld_side_coord[i][1], 3, weld_side[i]: unID=unID+1
	HOTSPOT2 0, weld_side_coord[i][1], unID, weld_side_coord[i][1], 2, weld_side[i], "Тип шва снизу": unID=unID+1
	del 1
	add2 2*r/3,0
	HOTSPOT2 0, 0, unID, weld_side_coord[i][2], 1+128, weld_side_up[i]: unID=unID+1
	HOTSPOT2 0, -1, unID, weld_side_coord[i][2], 3, weld_side_up[i]: unID=unID+1
	HOTSPOT2 0, weld_side_coord[i][2], unID, weld_side_coord[i][2], 2, weld_side_up[i], "Тип шва сверху": unID=unID+1
	del 3
return

"xytorphi":
	r = SQR(dx*dx+dy*dy)
	if dx>0 and dy>=0 then phi = atn(dy/dx)
	if dx>0 and dy<0 then phi = atn(dy/dx)+360
	if dx<0 then phi = atn(dy/dx)+180
	if dx=0 and dy>0 then phi = 90
	if dx=0 and dy<0 then phi = 270
	if dx=0 and dy=0 then phi = 0
return

"2dend":
