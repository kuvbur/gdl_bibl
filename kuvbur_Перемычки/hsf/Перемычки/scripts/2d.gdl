
PAPER_TO_MODEL = GLOB_SCALE / 1000
if not(flag_not_use) then end
show_perem_2d = 3 : success = LIBRARYGLOBAL ("Libraryflobals-perem", "show_perem_2d", show_perem_2d)

otm_txt_ = "Верх проёма"
success = LIBRARYGLOBAL ("Libraryflobals-perem", "otm_txt_", otm_txt_)
if STRLEN(otm_txt_)<1 then otm_txt_ = "Верх проёма"

!!========== Чтение настроек шрифта ============
Shrift = ""
Shrift_t = "" : Shrift_otm_razm_t = 0 : Shrift_otm_tip_t = 0 : Shrift_razm_razm_t = 0 : Shrift_razm_tip_t = 0
Shrift_from_as = 0 : success = LIBRARYGLOBAL ("Libraryflobals-perem", "Shrift_from_as", Shrift_from_as)
if Shrift_from_as then
	success = LIBRARYGLOBAL ("Libraryflobals-as", "Shrift", Shrift_t)
	success = LIBRARYGLOBAL ("Libraryflobals-as", "Shrift_otm_razm", Shrift_otm_razm_t)
	success = LIBRARYGLOBAL ("Libraryflobals-as", "Shrift_otm_tip", Shrift_otm_tip_t)
	success = LIBRARYGLOBAL ("Libraryflobals-as", "Shrift_razm_razm", Shrift_razm_razm_t)
	success = LIBRARYGLOBAL ("Libraryflobals-as", "Shrift_razm_tip", Shrift_razm_tip_t)
else
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "Shrift", Shrift_t)
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "Shrift_otm_razm", Shrift_otm_razm_t)
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "Shrift_otm_tip", Shrift_otm_tip_t)
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "Shrift_razm_razm", Shrift_razm_razm_t)
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "Shrift_razm_tip", Shrift_razm_tip_t)
endif

!Если прочитать не удалось - применим значения по умолчанию
if strlen(Shrift_t)<EPS then Shrift_t = "ISOCPEUR"
if Shrift_otm_razm_t<EPS then Shrift_otm_razm_t= 2.5
if Shrift_razm_razm_t<EPS then Shrift_razm_razm_t = 2.5
Shrift = Shrift_t
Shrift_otm_razm = Shrift_otm_razm_t
Shrift_razm_razm = Shrift_razm_razm_t
Shrift_otm_tip = Shrift_otm_tip_t
Shrift_razm_tip = Shrift_razm_tip_t
Shrift_razm = max(Shrift_otm_razm, Shrift_razm_razm)
DEFINE STYLE{2} "текст" Shrift, Shrift_razm, Shrift_otm_tip
txtv = "120" : tblockname = "def" : name_style = "текст" : gosub "get_block"
htxt = tbheight

jt = 1
pen 1
!Массив данных для размера
dim coord_razm[1][10]
for i=1 to 9
	coord_razm[1][i] = 0
next i
!Координаты концов выносок
dim cv[4][2]

cv[1][1] = -perem_sum_t/10 
cv[1][2] = htxt

cv[2][1] = -perem_sum_t/10 
cv[2][2] = perem_max_h+htxt

cv[3][1] = perem_sum_t/10 
cv[3][2] = perem_max_h+htxt

cv[4][1] = perem_sum_t/10 
cv[4][2] = -htxt

if perem_ved_pos=1 then
	cv[1][1] = -3*PAPER_TO_MODEL
	cv[1][2] = perem_h[1]+2*PAPER_TO_MODEL
	
	cv[2][1] = -perem_sum_t/100
	cv[2][2] = max(perem_h[1], perem_h[2])+max(htxt,4*PAPER_TO_MODEL)
	
	cv[3][1] = perem_sum_t/100
	cv[3][2] = max(perem_h[3], perem_h[4])+max(htxt,4*PAPER_TO_MODEL)
	
	cv[4][1] = 3*PAPER_TO_MODEL
	cv[4][2] = perem_h[4]+2*PAPER_TO_MODEL
endif

if perem_ved_pos=2 then
	cv[1][1] = -5*PAPER_TO_MODEL
	cv[1][2] = perem_h[1]+2*PAPER_TO_MODEL
	
	cv[2][1] = -perem_sum_t/100
	cv[2][2] = max(perem_h[1], perem_h[2])+max(htxt*2,4*PAPER_TO_MODEL)+htxt*(perem_qty_by_type[2]-1>EPS or perem_type[2]=iType_UTEPL)
	
	cv[3][1] = perem_sum_t/100
	cv[3][2] = max(perem_h[3], perem_h[4])+max(htxt*2,4*PAPER_TO_MODEL)+htxt*(perem_qty_by_type[3]-1>EPS or perem_type[2]=iType_UTEPL)
	
	cv[4][1] = 5*PAPER_TO_MODEL
	cv[4][2] = perem_h[4]+2*PAPER_TO_MODEL
endif

sgnx = SGN(otstup)

shag_v=8
shag_g=8
type_razm = 0
isEmp = 0

!Изображение в ведомость
if (GLOB_VIEW_TYPE=9 and show_perem_2d>EPS) or show_perem_2d=5 then 
	perem_ved_wall_show = 0
	if GLOB_PREVIEW_MODE=1 then rot2 -SYMB_ROTANGLE
	h_st_usl = perem_max_h*2
	if SYMB_MIRRORED then mul2 -1,1
	gosub "top_view"
	del top
	end
endif
if show_perem_2d<EPS then end
if show_perem_2d=4 then 
	if vartype(otstup_2)=1 and main_name<>"" then
		del top
		add2 0,otstup_2
		mul2 1,sgnx
		if (AC_Wall_Direction_Type=0) or (AC_Wall_Direction_Type=2) then 
			mul2 1,-1
		endif
		if abs(otstup)-900<EPS then add2 0,abs(otstup)
		if (AC_Wall_Direction_Type=0) or (AC_Wall_Direction_Type=2) then mul2 1,-1
		mul2 1,-sgnx
		sign_transform = 1
		if WIDO_REVEAL_SIDE then
			sign_transform = -1
			mul2 -1,1
		endif
		if perem_mul then rot2 180
		rot2 sign_transform*90
		add2 -max_t/2,0
	else
		rot2 -90
	endif
	perem_ved_wall_show = 0
	h_st_usl = perem_max_h*2
	gosub "top_view"
	show_perem_2d=2
	del top
endif

if vartype(otstup_2)=1 and main_name<>"" then
	del top
	add2 0,otstup_2
	mul2 1,SGN(otstup)
	if (AC_Wall_Direction_Type=0) or (AC_Wall_Direction_Type=2) then mul2 1,-1
	if abs(otstup)-900<EPS then add2 0,abs(otstup)
	if (AC_Wall_Direction_Type=0) or (AC_Wall_Direction_Type=2) then mul2 1,-1
	mul2 1,-SGN(otstup)
	if WIDO_REVEAL_SIDE then mul2 1,-1
	if perem_mul then rot2 180
	add2 0,-max_t/2
else
	rot2 180
endif

if main_name="" then
	HOTSPOT2	0,				0,	unID,	wallhole_half_width,	1, ac_wallhole_width : unID=unID+1
	HOTSPOT2	wallhole_half_width,	0,	unID,	wallhole_half_width,	2, ac_wallhole_width : unID=unID+1
	HOTSPOT2	-1,			0,	unID,	wallhole_half_width,	3, ac_wallhole_width : unID=unID+1
	HOTSPOT2	0,				0,	unID,	wallhole_half_width,	1, ac_wallhole_width : unID=unID+1
	HOTSPOT2	-wallhole_half_width,	0,	unID,	wallhole_half_width,	2, ac_wallhole_width : unID=unID+1
	HOTSPOT2	1,			0,	unID,	wallhole_half_width,	3, ac_wallhole_width : unID=unID+1
	HOTSPOT2	0,				perem_sum_t,	unID,	wallhole_half_width,	1, ac_wallhole_width : unID=unID+1
	HOTSPOT2	wallhole_half_width,	perem_sum_t,	unID,	wallhole_half_width,	2, ac_wallhole_width : unID=unID+1
	HOTSPOT2	-1,			perem_sum_t,	unID,	wallhole_half_width,	3, ac_wallhole_width : unID=unID+1
	HOTSPOT2	0,				perem_sum_t,	unID,	wallhole_half_width,	1, ac_wallhole_width : unID=unID+1
	HOTSPOT2	-wallhole_half_width,	perem_sum_t,	unID,	wallhole_half_width,	2, ac_wallhole_width : unID=unID+1
	HOTSPOT2	1,			perem_sum_t,	unID,	wallhole_half_width,	3, ac_wallhole_width : unID=unID+1
endif

gosub "side_view"

end

"top_view":
	n_add = 0
	pen perem_pen_cut
	first_emp = 1
	max_dh = 0
	xotm_start = 0
	for inx=1 to vardim1(perem_coord)
		ttt = perem_coord[inx][1]
		if perem_coord[inx][6] = iType_UG then ttt = max(perem_coord[inx][7],ttt)
		if perem_coord[inx][6] = iType_UGMIRR or perem_coord[inx][6] = iType_UGx2 then ttt=perem_coord[inx][7]
		h = perem_coord[inx][2]
		dh = perem_coord[inx][3]
		max_dh = max(max_dh,abs(dh))
		inx_type = perem_coord[inx][8]
		if inx_type<EPS then inx_type = 1
		isEmp = (perem_coord[inx][6]<EPS)
		if isEmp then
			jt = 1+2+3
		else
			jt = 2+3
			first_emp = 1
		endif
		_bmat = perem_material[inx]
		gosub "set_pen" 
		gosub "draw_rect"
		if nsp/3>0 and abs(int(nsp/3)-nsp/3)<EPS and not(isEmp and _bmat<EPS) and first_emp then
			pen pen_cut
			fill _fillType
			if perem_coord[inx][6] = iType_UGx2 then
				POLY2_b nsp/6, 7, _fillPen, _fillBgPen, get(nsp/2)
				POLY2_b nsp/3, 7, _fillPen, _fillBgPen, get(nsp)
				gosub "draw_rect"
			else
				POLY2_b nsp/3, 7, _fillPen, _fillBgPen, use(nsp)
			endif
			x1=0 : y1=0 : s1=0
			x1=get(1)
			y1=get(1)
			s1=get(1)
			hotspot2 x1,y1,unIDR : unIDR=unIDR+1
			for i=1 to nsp step 3
				x2=get(1)
				y2=get(1)
				s2=get(1)
				if s2>EPS then
					hotspot2 x2,y2,unIDR : unIDR=unIDR+1
					hotline2 x1,y1,x2,y2,unIDR : unIDR=unIDR+1
					x1=x2 : y1=y2 : s1=s2
				endif
			next i
		endif
		if NSP>0 then ttr=max(get(NSP))
		qty_arm_osn = qty_arm[inx_type][1]
		if qty_arm_osn>EPS and not(isEmp) and perem_diam>EPS then
			pen 21
			if (qty_arm_osn-1)<EPS then qty_arm_osn = 2
			perem_shag_osn = (ttt-zs_leftright*2)/(qty_arm_osn-1)
			x = zs_leftright
			for j=1 to qty_arm_osn
				circle2 x,dh+zs_updown,perem_diam
				x = x + perem_shag_osn
			next j
		endif
		add2 ttt, 0 : n_add = n_add+1
		xotm_start = xotm_start + ttt
	next inx
	if n_add>EPS then del n_add : n_add = 0
	shag_g = shag_g + max_dh
	x = perem_zazor_type[1]
	xotm = 0
	for i=inx_start_type to flag_not_use
		DRAWINDEX 0
		pen pen_cont
		if perem_qty_type[i]>EPS then
			if perem_type[i]=iType_UGMIRR or perem_type[i]=iType_UG or perem_type[i]=iType_UGx2 then
				if perem_type[i] = iType_UG then
					dx = max(perem_t[i], perem_zazor[i])
				else
					dx = perem_zazor[i]
				endif
				if perem_type[i] = iType_UGMIRR then dx = max(perem_tug[i], perem_zazor[i])
				dt = dx
			else
				dx = perem_t[i]*perem_qty_by_type[i]+perem_zazor[i]*(perem_qty_by_type[i]-1)
				dt = -perem_t[i]
			endif
			if i-1>EPS then x = x + perem_zazor_type[i]
			if i-1>EPS and i=flag_not_use and (perem_type[i]=iType_UG) and dt>EPS then
				coord_razm[1][1]=x
				coord_razm[1][2]=0
				coord_razm[1][3]=x+dt
				coord_razm[1][4]=perem_dh[i]
				coord_razm[1][5]=shag_g+htxt / PAPER_TO_MODEL
				call 'macro_razm' parameters coord_razm=coord_razm, type_razm=1,Shrift_tip=Shrift_razm_tip,Shrift=Shrift,Shrift_razm=Shrift_razm_razm, side_otstup_razm=1
			endif

			if i-1<EPS and (perem_zazor_type[i]>EPS or (perem_type[i]=iType_UGMIRR and dt>EPS)) then
				coord_razm[1][1]=min(0,perem_zazor_type[i]+dx*(perem_type[i] = iType_UGMIRR))
				coord_razm[1][2]=0
				coord_razm[1][3]=0!max(0,perem_zazor_type[i]+dx*(perem_type[i] = iType_UGMIRR))
				coord_razm[1][4]=perem_dh[i]
				coord_razm[1][5]=shag_g+htxt / PAPER_TO_MODEL
				call 'macro_razm' parameters coord_razm=coord_razm, type_razm=1,Shrift_tip=Shrift_razm_tip,Shrift=Shrift,Shrift_razm=Shrift_razm_razm, side_otstup_razm=1
			endif

			if perem_type[i]=iType_UGx2 then
				coord_razm[1][1]=x
				coord_razm[1][2]=0
				coord_razm[1][3]=x+dt
				coord_razm[1][4]=perem_dh[i]
				coord_razm[1][5]=shag_g+htxt / PAPER_TO_MODEL
				call 'macro_razm' parameters coord_razm=coord_razm, type_razm=1,Shrift_tip=Shrift_razm_tip,Shrift=Shrift,Shrift_razm=Shrift_razm_razm, side_otstup_razm=1
			endif

			if abs(perem_dh[i])>EPS and perem_type[i]>EPS then
				if x<perem_sum_t/2 then
					coord_razm[1][1]=x
					coord_razm[1][2]=perem_dh[i]
					coord_razm[1][3]=x + abs(dt)/2
					coord_razm[1][4]=0
					coord_razm[1][5]=shag_v
				else
					coord_razm[1][1]=x
					coord_razm[1][2]=perem_dh[i]
					coord_razm[1][3]=x - abs(dt)/2
					coord_razm[1][4]=0
					coord_razm[1][5]=shag_v
				endif
				call 'macro_razm' parameters coord_razm=coord_razm, type_razm=2,Shrift_tip=Shrift_razm_tip,Shrift=Shrift,Shrift_razm=Shrift_razm_razm, side_otstup_razm=1
			endif
			txt2 = ""
			if perem_ved_pos=2 then
				if perem_type[i]>EPS then 
					txt = perem_profile[i]
				else
					txt = ""
				endif
				if perem_qty_by_type[i]-1>EPS then txt2 = str("%.0", perem_qty_by_type[i])+"шт."
				if perem_type[i]=iType_UGx2 then txt = txt + " 2шт."
				if perem_type[i]=iType_ARM then 
					txt = str("%.0", qty_arm[i][1])+"х"+str("%.0mm", perem_diam)+perem_class+" L="+str("%.0mm", perem_dlin[i])+"мм"
					txt2 = perem_concr + " " + str("%.0mm",perem_h[i])+"(H)x"+str("%.0mm",perem_t[i])+"(B)"
				endif
				if perem_type[i]=iType_CONC then 
					txt = "Ж/б элемент "+str("%.0mm",perem_h[i])+"(H)x"+str("%.0mm",perem_t[i])+"(B)"
					txt2 = "L="+str("%.0mm", perem_dlin[i])+"мм" 
				endif
				if perem_type[i]=iType_UTEPL then 
					txt = perem_profile[i]
					txt2 = "t="+str("%.0mm",perem_t[i])+"мм"
				endif
				if perem_type[i]=iType_UGMIRR or perem_type[i]=iType_UG or perem_type[i]=iType_UGx2 then txt2 = "L="+str("%.0mm", perem_dlin[i])+"мм"
			else
				txt = perem_pos[i]
				if STRSTR(txt, "!")>EPS or txt="-" then txt = ""
			endif
			isTxt = (strlen(txt)>EPS) or (strlen(txt2)>EPS)
			if isTxt then 
				txtv = txt : tblockname = "txt" : name_style = "текст" : gosub "get_block"
				txt_width = tbwidth
				txtv = txt2 : tblockname = "txt2" : name_style = "текст" : gosub "get_block"
				txt2_width = tbwidth
				cx = x+abs(dt/2)*(dt<EPS)+(perem_type[i]=iType_UGMIRR)*dt : cy = perem_h[i]/2 + perem_dh[i]
				csx = cx+3*PAPER_TO_MODEL*sgn(cv[i][1])+cv[i][1]
				csy = cv[i][2]
				if csy<(perem_h[i] + perem_dh[i]) then csy = cv[i][2]/2 + perem_dh[i]+perem_h[i]
				for k=1 to perem_qty_by_type[i]+(perem_type[i]=iType_UGx2)
					ce = cx+3*PAPER_TO_MODEL*sgn(cv[i][1])+cv[i][1]
					line2  ce,csy, cx, cy
					circle2 cx,cy,0.1*PAPER_TO_MODEL
					cx = cx+(abs(dt)+perem_zazor[i])*(dt<EPS)+abs(dt)*(dt>EPS)
				next k
				ll = max(txt_width, txt2_width)
				if cv[i][1]>EPS then				
					line2 ce+ll,csy, csx, csy
					RICHTEXT2 ce+ll/2,csy+tbheight/2-dx_txt, "txt"
					if txt2<>"" then RICHTEXT2 ce+ll/2,csy-tbheight/2+dx_txt, "txt2"
				else
					line2 ce,csy, csx-ll, csy
					RICHTEXT2 csx-ll/2, csy+tbheight/2-dx_txt, "txt"
					if txt2<>"" then RICHTEXT2 csx-ll/2, csy-tbheight/2+dx_txt, "txt2"
				endif
			endif
			x = x + dx
			xotm = xotm + dx
		else
!			x = x + perem_coord[i][1]
		endif
	next i
	DRAWINDEX 0
	pen pen_cont
	dim coord_otm[1][2] : coord_otm[1][1]=0: coord_otm[1][2]=0
	xotm_start = xotm + 5*PAPER_TO_MODEL
	dim otm[1][2] : otm[1][1]="" : otm[1][2]=""
	if GLOB_VIEW_TYPE=9 or show_perem_2d=5 then
		otm[1][1]=otm_txt_
	else
		otm[1][1]=ur
		otm[1][2]=perem_marka
	endif
	call 'macro_otm' parameters otm=otm, polozh = 4, coord=coord_otm,Shrift_tip=Shrift_otm_tip,Shrift=Shrift,Shrift_razm=Shrift_otm_razm,dlin_polki=max(xotm_start, 8*PAPER_TO_MODEL)
return

"side_view":
	n_add = 0
	add2 0,perem_zazor_type[1] : n_add = n_add+1
	if perem_qty_type[1] then
		gosub "hotspot_2d_1"
		add2 0, ht : n_add = n_add+1
	endif
	if perem_qty_type[2] then
		add2 0,perem_zazor_type[2] : n_add = n_add+1
		gosub "hotspot_2d_2"
		add2 0, ht : n_add = n_add+1
	endif
	if perem_qty_type[3] then
		add2 0,perem_zazor_type[3] : n_add = n_add+1
		gosub "hotspot_2d_3"
		add2 0, ht : n_add = n_add+1
	endif
	if perem_qty_type[4] then
		add2 0,perem_zazor_type[4] : n_add = n_add+1
		gosub "hotspot_2d_4"
		add2 0, ht : n_add = n_add+1
	endif
	if n_add>EPS then del n_add : n_add = 0
	inx = 0
	if show_perem_2d = 1 then
		gosub "set_pen"
		DRAWINDEX 30
		pen pen_sim
		if main_name="" then
			th = perem_sum_t/2
		else
			th = max_t/2
		endif
		line2 perem_max_dl+perem_max_l/2, th, perem_max_dl-perem_max_l/2,th
		hotline2 perem_max_dl+perem_max_l/2, th, perem_max_dl-perem_max_l/2,th
		return
	endif

	for inx=1 to vardim1(perem_coord)
		_bmat = perem_material[inx]
		gosub "set_pen"
		l = perem_coord[inx][4]
		dl = perem_coord[inx][5]
		inx_type = perem_coord[inx][8]
		if inx_type<EPS then inx_type = 1
		isEmp = (perem_coord[inx][6]<EPS)
		ttt = perem_coord[inx][1]
		if perem_coord[inx][6] = iType_UGx2 then ttt=max(perem_coord[inx][7],ttt)!perem_coord[inx][7]
		if perem_coord[inx][6] = iType_UGMIRR then
			add2 0, perem_tug[inx_type]-perem_coord[inx][1]+perem_coord[inx][7] : n_add = n_add+1
		endif
		if perem_coord[inx][6] = iType_UG then
			add2 0, -perem_tug[inx_type]: n_add = n_add+1
		endif
		if show_perem_2d=2 and not(isEmp) and isShow[inx_type] then
			DRAWINDEX 40
			pen pen_sim
			flag_form = 0
			tttug = perem_coord[inx][1]
			if perem_coord[inx][6] = iType_UG or perem_coord[inx][6] = iType_UGx2 then
				t_ug = perem_tug[inx_type]
				zaz = perem_coord[inx][7]
				flag_form = 1
				tttx = tttug/2-t_ug
				hotspot2 dl+l/2, tttx
				hotspot2 dl-l/2,tttx
				line2 dl+l/2,tttx,dl-l/2,tttx
				hotline2 dl+l/2,tttx,dl-l/2,tttx,unIDR : unIDR=unIDR+1
			endif
			if perem_coord[inx][6] = iType_UGMIRR or perem_coord[inx][6] = iType_UGx2 then
				t_ug = perem_tug[inx_type]
				zaz = perem_coord[inx][7]
				flag_form = 1
				tttx = ttt/2!(t_ug+zaz-tttug+t_ug+zaz)/2
				hotspot2 dl+l/2, tttx
				hotspot2 dl-l/2,tttx
				line2 dl+l/2,tttx,dl-l/2,tttx
				hotline2 dl+l/2,tttx,dl-l/2,tttx,unIDR : unIDR=unIDR+1
			endif
			if flag_form = 0 then
				hotspot2 dl+l/2, ttt/2
				hotspot2 dl-l/2,ttt/2
				line2 dl+l/2,ttt/2,dl-l/2,ttt/2
				hotline2 dl+l/2,ttt/2,dl-l/2,ttt/2,unIDR : unIDR=unIDR+1
			endif
		endif
		if show_perem_2d=3 and not(isEmp) and isShow[inx_type] then
			DRAWINDEX 40
			pen pen_sim
			fill _fillType
			if NSP>0 then ttr=max(get(NSP))
			if abs(ttt)>EPS then
				put dl+l/2,0,jt
				put dl-l/2,0,jt
				put dl-l/2,ttt,jt
				put dl+l/2,ttt,jt
				put dl+l/2,0,-1
				POLY2_b nsp/3, 7, _fillPen, _fillBgPen,use(nsp)
				x1=get(1)
				y1=get(1)
				s1=get(1)
				hotspot2 x1,y1,unIDR : unIDR=unIDR+1
				for i=1 to nsp step 3
					x2=get(1)
					y2=get(1)
					s2=get(1)
					if s2<10 and s2>EPS then
						hotspot2 x2,y2,unIDR : unIDR=unIDR+1
						hotline2 x1,y1,x2,y2,unIDR : unIDR=unIDR+1
						x1=x2 : y1=y2 : s1=s2
					endif
				next i
			endif
		endif
		if perem_coord[inx][6] = iType_UGMIRR then
			add2 0, -perem_tug[inx_type] : n_add = n_add+1
		endif
		if perem_coord[inx][6] = iType_UG then
			add2 0, perem_coord[inx][7]-perem_coord[inx][1]+perem_tug[inx_type]: n_add = n_add+1
		endif
		add2 0, ttt : n_add = n_add+1
	next inx
	if n_add>EPS then del n_add : n_add = 0
return

"draw_rect":
	is_ugol = perem_coord[inx][6] = iType_UG or perem_coord[inx][6] = iType_UGMIRR or perem_coord[inx][6] = iType_UGx2
	if abs(h)>EPS and ((abs(ttt)>EPS and is_ugol<>1) or is_ugol=1) then
		flag_form = 0
		tttug = perem_coord[inx][1]
		if perem_coord[inx][6] = iType_UG then !Уголок
			t_ug = perem_tug[inx_type]
			zaz = perem_coord[inx][7]
			put 0,dh,jt
			put 0,dh+h-t_ug,jt
			put -t_ug,dh+h-t_ug,jt
			put -t_ug,dh-t_ug,jt
			put tttug-t_ug,dh-t_ug,jt
			put tttug-t_ug,dh,jt
			put 0,dh,-1
			hotspot 0,dh,0
			hotspot 0,dh,l
			hotspot -t_ug,dh-t_ug,0
			hotspot -t_ug,dh-t_ug,l
			ttt=max(zaz,ttt)
			flag_form = 1
		endif

		if perem_coord[inx][6] = iType_UGMIRR then !Уголок зеркально
			t_ug = perem_tug[inx_type]
			zaz = perem_coord[inx][7]
			put 0+zaz,dh,jt
			put 0+zaz,dh+h-t_ug,jt
			put t_ug+zaz,dh+h-t_ug,jt
			put t_ug+zaz,dh-t_ug,jt
			put -tttug +t_ug+zaz,dh-t_ug,jt
			put -tttug +t_ug+zaz,dh,jt
			put 0+zaz,dh,-1
			hotspot 0+zaz,dh,0
			hotspot 0+zaz,dh,l
			hotspot t_ug+zaz,dh-t_ug,0
			hotspot t_ug+zaz,dh-t_ug,l
			ttt=max(zaz,t_ug)
			flag_form = 1
		endif
		if perem_coord[inx][6] = iType_UGx2 then !Спаренный уголок
			t_ug = perem_tug[inx_type]
			zaz = perem_coord[inx][7]
			put 0+zaz,dh,jt
			put 0+zaz,dh+h-t_ug,jt
			put t_ug+zaz,dh+h-t_ug,jt
			put t_ug+zaz,dh-t_ug,jt
			put -tttug+t_ug+zaz,dh-t_ug,jt
			put -tttug+t_ug+zaz,dh,jt
			put 0+zaz,dh,-1
			put 0,dh,jt
			put 0,dh+h-t_ug,jt
			put -t_ug,dh+h-t_ug,jt
			put -t_ug,dh-t_ug,jt
			put tttug-t_ug,dh-t_ug,jt
			put tttug-t_ug,dh,jt
			put 0,dh,-1
			hotspot 0+zaz,dh,0
			hotspot 0+zaz,dh,l
			hotspot t_ug+zaz,dh-t_ug,0
			hotspot t_ug+zaz,dh-t_ug,l
			hotspot 0,dh,0
			hotspot 0,dh,l
			hotspot -t_ug,dh-t_ug,0
			hotspot -t_ug,dh-t_ug,l
			ttt=max(zaz,t_ug)
			flag_form = 1
		endif
		if perem_coord[inx][6] = iType_PROF and flag_form = 0 then 
			gosub "draw_profile_2d"
			if NSP>0 then tt=max(get(NSP))
			flag_form = 1
		endif
		if flag_form = 0 then !Всё остальное
			put 0,dh,jt
			put 0,dh+h,jt
			put ttt,dh+h,jt
			put ttt,dh,jt
			put 0,dh,-1
		endif
	endif
return

"set_pen":
	pen_cont = perem_pen_cont
	pen_cut = perem_pen_cut
	pen_sim = perem_pen_sim
	_fillType = perem_fill
	_fillPen = perem_fill_pen
	_fillBgPen = perem_fill_bg
	if inx = 0 then inx = 1
	if not(perem_pen_eq_sim) then
		ii = perem_coord[inx][6]
		if ii>EPS then pen_sim = perem_pen_sim_m[ii+1]
		if pen_sim<1 or pen_sim>255 then pen_sim=1
	endif
	if abs(show_perem_2d-3)>EPS and GLOB_VIEW_TYPE<>9 and show_perem_2d<>5 then
		pen_cont = pen_sim
		pen_cut = pen_sim
	endif
	drawindex 30
	if isEmp then
		pen_cut = 1
		drawindex 20
	endif
	if perem_fill_eq then
		n = REQUEST{2} ("Building_Material_info", _bmat, "gs_bmat_cutfill_properties", _fillType, _fillPen, _fillBgPen)
	endif
	if perem_ved_wall_eq and perem_material[inx] <> perem_empt_material and perem_coord[inx][6]=-2 then
		_fillType = perem_ved_wall_fill
		_fillPen = perem_ved_wall_fill_pen
		_fillBgPen = perem_ved_wall_fill_bg
		pen_cont = perem_ved_wall_pen
		pen_cut = perem_ved_wall_pen
	endif
	if pen_cont<1 or pen_cont>255 then pen_cont=1
	if pen_cut<1 or pen_cut>255 then pen_cut=1
	if pen_sim<1 or pen_sim>255 then pen_sim=1
	if _fillPen<1 or _fillPen>255 then _fillPen=1
	if _fillBgPen<1 or _fillBgPen>255 then _fillBgPen=0
	if isError then
		pen_cont=pen_alert
		pen_cut=pen_alert
		pen_sim=pen_alert
		_fillPen=pen_alert
		_fillBgPen=pen_alert
	endif
return

"hotspot_2d_1":
	inx=1
	ht = perem_t[inx]*perem_qty_by_type_1+perem_zazor_1*(perem_qty_by_type_1-1)
	if isShow[inx] then
		HOTSPOT2	perem_dlin[inx]/2,				ht/2,	unID,	perem_dl_1,	1+128 : unID=unID+1
		HOTSPOT2	perem_dlin[inx]/2+perem_dl_1,	ht/2,	unID,	perem_dl_1,	2 : unID=unID+1
		HOTSPOT2	perem_dlin[inx]/2-1,			ht/2,	unID,	perem_dl_1,	3 : unID=unID+1
		HOTSPOT2	-perem_dlin[inx]/2,				ht/2,	unID,	perem_dl_1,	1+128 : unID=unID+1
		HOTSPOT2	-perem_dlin[inx]/2+perem_dl_1,	ht/2,	unID,	perem_dl_1,	2 : unID=unID+1
		HOTSPOT2	-perem_dlin[inx]/2-1,			ht/2,	unID,	perem_dl_1,	3 : unID=unID+1
	endif
return

"hotspot_2d_2":
	inx=2
	ht = perem_t[inx]*perem_qty_by_type_2+perem_zazor_2*(perem_qty_by_type_2-1)
	if isShow[inx] then
		HOTSPOT2	perem_dlin[inx]/2,				ht/2,	unID,	perem_dl_2,	1+128 : unID=unID+1
		HOTSPOT2	perem_dlin[inx]/2+perem_dl_2,	ht/2,	unID,	perem_dl_2,	2 : unID=unID+1
		HOTSPOT2	perem_dlin[inx]/2-1,			ht/2,	unID,	perem_dl_2,	3 : unID=unID+1
		HOTSPOT2	-perem_dlin[inx]/2,				ht/2,	unID,	perem_dl_2,	1+128 : unID=unID+1
		HOTSPOT2	-perem_dlin[inx]/2+perem_dl_2,	ht/2,	unID,	perem_dl_2,	2 : unID=unID+1
		HOTSPOT2	-perem_dlin[inx]/2-1,			ht/2,	unID,	perem_dl_2,	3 : unID=unID+1
	endif
return

"hotspot_2d_3":
	inx=3
	ht = perem_t[inx]*perem_qty_by_type_3+perem_zazor_3*(perem_qty_by_type_3-1)
	if isShow[inx] then
		HOTSPOT2	perem_dlin[inx]/2,				ht/2,	unID,	perem_dl_3,	1+128 : unID=unID+1
		HOTSPOT2	perem_dlin[inx]/2+perem_dl_3,	ht/2,	unID,	perem_dl_3,	2 : unID=unID+1
		HOTSPOT2	perem_dlin[inx]/2-1,			ht/2,	unID,	perem_dl_3,	3 : unID=unID+1
		HOTSPOT2	-perem_dlin[inx]/2,				ht/2,	unID,	perem_dl_3,	1+128 : unID=unID+1
		HOTSPOT2	-perem_dlin[inx]/2+perem_dl_3,	ht/2,	unID,	perem_dl_3,	2 : unID=unID+1
		HOTSPOT2	-perem_dlin[inx]/2-1,			ht/2,	unID,	perem_dl_3,	3 : unID=unID+1
	endif
return

"hotspot_2d_4":
	inx=4
	ht = perem_t[inx]*perem_qty_by_type_4+perem_zazor_4*(perem_qty_by_type_4-1)
	if isShow[inx] then
		HOTSPOT2	perem_dlin[inx]/2,				ht/2,	unID,	perem_dl_4,	1+128 : unID=unID+1
		HOTSPOT2	perem_dlin[inx]/2+perem_dl_4,	ht/2,	unID,	perem_dl_4,	2 : unID=unID+1
		HOTSPOT2	perem_dlin[inx]/2-1,			ht/2,	unID,	perem_dl_4,	3 : unID=unID+1
		HOTSPOT2	-perem_dlin[inx]/2,				ht/2,	unID,	perem_dl_4,	1+128 : unID=unID+1
		HOTSPOT2	-perem_dlin[inx]/2+perem_dl_4,	ht/2,	unID,	perem_dl_4,	2 : unID=unID+1
		HOTSPOT2	-perem_dlin[inx]/2-1,			ht/2,	unID,	perem_dl_4,	3 : unID=unID+1
	endif
return

"draw_profile_2d":
	index = perem_archprofile[inx_type]
	for _iComp = 1 to _nComponents_m[inx_type]
		if _bShowPart_m[inx_type][_iComp] then
			_pen = 1
			_bmat = 1
			dim _currPens[]
			dim _currLineTypes[]
			n = REQUEST{4} ("Profile_component_info", index, _iComp, "gs_profile_outlinepen", _pen)
			n = REQUEST{4} ("Profile_component_info", index, _iComp, "gs_profile_bmat", _bmat)
			n = REQUEST{4} ("Profile_component_info", index, _iComp, "gs_profile_comp_pens", _currPens)
			n = REQUEST{4} ("Profile_component_info", index, _iComp, "gs_profile_comp_linetypes", _currLineTypes)
			if not(perem_fill_eq) then _bmat = perem_material_type[inx_type]
			if not(perem_fill_eq) then _pen = perem_pen_cut
			gosub "set_pen"
			if _fillType>EPS then fill _fillType
			pen _pen
			_penLtIdx = 1
			for _i = _idxStartPoints_m[inx_type][_iComp] to _idxEndPoints_m[inx_type][_iComp] step 5
				if not(perem_fill_eq) then _currPens[_penLtIdx] = perem_pen_cut
				put 	_profileGeometryRawData_m[inx_type][_i],		! xn
					_profileGeometryRawData_m[inx_type][_i + 1]+dh,	! yn
					_profileGeometryRawData_m[inx_type][_i + 2] + _profileGeometryRawData_m[inx_type][_i + 4],	! status values : edgeVisible + additionalStatus
					_currPens[_penLtIdx],			! pen
					_currLineTypes[_penLtIdx]		! linetype
				_penLtIdx = _penLtIdx + 1
			next _i	
			poly2_b{6} (NSP/5), 1+2+4, 1, 0,	! cut fill, 0 distortion flag
				_fillPen, _fillBgPen,
				0, 0,				! fill origin
				0.1, 0.1, 0.2, 0.2,		! mxx, mxy, myx, myy
				0.1, 				! gradientInnerRadius
				get (NSP)
		endif
	next _iComp
return

"get_block":
	width_factor = 1
	charspace_factor = 1
	if vartype(tblockname)<>2 then tblockname = "emp"
	if vartype(txtv)=1 then txtv = str("%.0",txtv)
	paragraph tblockname+"p" 2,
			0, 0, 0,
			1
			style name_style
			txtv
	endparagraph
	TEXTBLOCK tblockname 0, 5, 0, width_factor, charspace_factor, 1,tblockname+"p"
	width = Shrift_razm : height = Shrift_razm
	n = REQUEST("TEXTBLOCK_INFO", tblockname, width, height)
	tbwidth = width * PAPER_TO_MODEL
	tbheight = height * PAPER_TO_MODEL
	sss=request("Height_of_style", name_style, height, descent, leading)
	dx_txt = (height/2-descent-leading-Shrift_razm/2)*PAPER_TO_MODEL
return
