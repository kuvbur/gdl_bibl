
if not(flag_not_use) then end
show_perem_3d = 3 : success = LIBRARYGLOBAL ("Libraryflobals-perem", "show_perem_3d", show_perem_3d)
if show_perem_3d<EPS then end

isPlan = (GLOB_VIEW_TYPE=2)
isPrew = (GLOB_PREVIEW_MODE<>0)
isEdit = GLOB_FEEDBACK_MODE

jt = 15

SHADOW OFF, OFF
RESOL 5

if vartype(otstup_2)=1 and main_name<>"" then
	addy ac_wallhole_height
	addz -otstup_2
	bRotated = (round_int (SYMB_ROTANGLE) = 180)
	if bRotated=0 and SYMB_MIRRORED=1 then mulx -1
	if bRotated=1 and SYMB_MIRRORED=0 then mulx -1
	mulz sgn(otstup)
	if not((AC_Wall_Direction_Type=0) or (AC_Wall_Direction_Type=2)) then
		if abs(otstup)-900<EPS then addz -abs(otstup)
	else
		if abs(otstup)-900<EPS then addz abs(otstup)
	endif
	mulz -sgn(otstup)
	if WIDO_REVEAL_SIDE then mulz -1

	if perem_mul then
		roty -90
		addx -max_t/2
	else
		roty 90
		addx -max_t/2
	endif
else
	roty -90
	rotz -90
endif


if isShow[1] then
	HOTSPOT	0, perem_dh[1]+perem_h[inx_start_type]/2, 0,	unID,	perem_zazor_type[1], 1: unID=unID+1
	HOTSPOT	perem_zazor_type[1], perem_dh[1]+perem_h[inx_start_type]/2, 0,	unID,	perem_zazor_type[1],	2: unID=unID+1
	HOTSPOT	-1, perem_dh[1]+perem_h[inx_start_type]/2, 0,	unID,	perem_zazor_type[1],	3: unID=unID+1
endif
x = perem_zazor_type[1]
for i=inx_start_type to flag_not_use
	if perem_qty_by_type[i]>EPS then
		if perem_type[i]=iType_UGMIRR or perem_type[i]=iType_UG or perem_type[i]=iType_UGx2 then
			if perem_type[i] = iType_UG then
				dx = max(perem_t[i], perem_zazor[i])
			else
				dx = perem_zazor[i]
			endif
			if perem_type[i] = iType_UGMIRR then dx = max(perem_tug[i], perem_zazor[i])
			dt = dx
		else
			dx = perem_t[i]*perem_qty_by_type[i]+perem_zazor[i]*(perem_qty_by_type[i]-1)
			dt = -perem_t[i]
		endif
		if isShow[i] then
			dh = perem_dh[i]
			h = perem_h[i]
			ttt = perem_t[i]
			zaz = perem_zazor[i]
			l = perem_dlin[i]
			hl = perem_dl[i]-l/2
			if (i-1)>EPS then
				HOTSPOT	x,		dh+h/4,				0,	unID,	perem_zazor_type[i],	1+256: unID=unID+1
				HOTSPOT	x+perem_zazor_type[i],		dh+h/4,		0,	unID,	perem_zazor_type[i],	2: unID=unID+1
				HOTSPOT	-1,		dh+h/4,				0,	unID,	perem_zazor_type[i],	3: unID=unID+1
				x = x + perem_zazor_type[i]
			endif
			hx = x+abs(dt/2)*(dt<EPS)+(perem_type[i]=iType_UGMIRR)*dt
			if abs(i-1)<EPS then gosub "hotspot_3d_1"
			if abs(i-2)<EPS then gosub "hotspot_3d_2"
			if abs(i-3)<EPS then gosub "hotspot_3d_3"
			if abs(i-4)<EPS then gosub "hotspot_3d_4"
		else
			if (i-1)>EPS then x = x + perem_zazor_type[i]
		endif
		x = x + dx
	endif
next i

if show_perem_3d = 1 then
	t=max_t
	h=perem_max_h
	dh=0
	dl=perem_max_dl
	l=perem_max_l
	isEmp=0
	inx = 2
	gosub "set_pen"
	pen pen_cont
	building_material perem_material[inx]
	material _mat
	sect_attrs{2} pen_cut, 1
	put 0,dh,jt
	put 0,dh+h,jt
	put t,dh+h,jt
	put t,dh,jt
	put 0,dh,-1
	addz dl-l/2
	PRISM_ nsp/3,l, get(nsp)
	del 1
	end
endif

for inx=1 to vardim1(perem_coord)
	ttt = perem_coord[inx][1]
	h = perem_coord[inx][2]
	l = perem_coord[inx][4]
	dh = perem_coord[inx][3]
	dl = perem_coord[inx][5]
	isEmp = (perem_coord[inx][6]<EPS)
	_bmat = perem_material[inx]
	if isPlan or isPrew then
		if not(isEmp) then gosub "draw_rect"
	else
		if not(isEmp and _bmat<EPS) gosub "draw_rect"
	endif
	if nsp/3>0 and abs(int(nsp/3)-nsp/3)<EPS and inx-1>EPS and not(isEmp and GLOB_STRUCTURE_DISPLAY) then
		gosub "set_pen"
		pen pen_cont
		building_material _bmat
		material _mat
		sect_attrs{2} pen_cut, 1
		addz dl-l/2
		PRISM_ nsp/3,l, get(nsp)
		if not(isEmp) and not(isPlan or isPrew or isEdit) and flag_form=0 then gosub "block_plane"
		del 1
	endif
	if NSP>0 then trt=max(get(NSP))
	addx ttt
next inx
del top
end
"draw_rect":
	is_ugol = perem_coord[inx][6] = iType_UG or perem_coord[inx][6] = iType_UGMIRR or perem_coord[inx][6] = iType_UGx2
	if abs(h)>EPS and ((abs(ttt)>EPS and is_ugol<>1) or is_ugol=1) then
		inx_type = perem_coord[inx][8]
		if inx_type<EPS then inx_type = 1
		t_ug = perem_tug[inx_type]
		zaz = perem_coord[inx][7]
		flag_form = 0
		if perem_coord[inx][6] = iType_UG then !Уголок
			put 0,dh,jt
			put 0,dh+h-t_ug,jt
			put -t_ug,dh+h-t_ug,jt
			put -t_ug,dh-t_ug,jt
			put ttt-t_ug,dh-t_ug,jt
			put ttt-t_ug,dh,jt
			put 0,dh,-1
			hotspot 0,dh,dl+l/2
			hotspot 0,dh,dl-l/2
			hotspot -t_ug,dh-t_ug,dl+l/2
			hotspot -t_ug,dh-t_ug,dl-l/2
			ttt=max(zaz,ttt)
			flag_form = 1
		endif
		if perem_coord[inx][6] = iType_UGMIRR then !Уголок зеркально
			put 0+zaz,dh,jt
			put 0+zaz,dh+h-t_ug,jt
			put t_ug+zaz,dh+h-t_ug,jt
			put t_ug+zaz,dh-t_ug,jt
			put -ttt+t_ug+zaz,dh-t_ug,jt
			put -ttt+t_ug+zaz,dh,jt
			put 0+zaz,dh,-1
			hotspot 0+zaz,dh,dl+l/2
			hotspot 0+zaz,dh,dl-l/2
			hotspot t_ug+zaz,dh-t_ug,dl+l/2
			hotspot t_ug+zaz,dh-t_ug,dl-l/2
			ttt=max(zaz,t_ug)
			flag_form = 1
		endif
		if perem_coord[inx][6] = iType_UGx2 then !Спаренный уголок
			put 0+zaz,dh,jt
			put 0+zaz,dh+h-t_ug,jt
			put t_ug+zaz,dh+h-t_ug,jt
			put t_ug+zaz,dh-t_ug,jt
			put -ttt+t_ug+zaz,dh-t_ug,jt
			put -ttt+t_ug+zaz,dh,jt
			put 0+zaz,dh,-1
			put 0,dh,jt
			put 0,dh+h-t_ug,jt
			put -t_ug,dh+h-t_ug,jt
			put -t_ug,dh-t_ug,jt
			put ttt-t_ug,dh-t_ug,jt
			put ttt-t_ug,dh,jt
			put 0,dh,-1
			hotspot 0+zaz,dh,dl+l/2
			hotspot 0+zaz,dh,dl-l/2
			hotspot t_ug+zaz,dh-t_ug,dl+l/2
			hotspot t_ug+zaz,dh-t_ug,dl-l/2
			hotspot 0,dh,dl+l/2
			hotspot 0,dh,dl-l/2
			hotspot -t_ug,dh-t_ug,dl+l/2
			hotspot -t_ug,dh-t_ug,dl-l/2
			ttt=max(zaz,t_ug)
			flag_form = 1
		endif
		priority = 1
		n = REQUEST{2} ("Building_Material_info", _bmat, "gs_bmat_intersectionpriority", priority)
		if isShow[inx_type]<EPS or priority<EPS then
			if NSP>0 then ttr=max(get(NSP))
			flag_form = 1
		endif
		if perem_coord[inx][6] = iType_PROF and flag_form = 0 then 
			gosub "draw_profile_3d"
			if NSP>0 then tt=max(get(NSP))
			flag_form = 1
		endif
		if flag_form = 0 then !Всё остальное
			put 0,dh,jt
			put 0,dh+h,jt
			put ttt,dh+h,jt
			put ttt,dh,jt
			put 0,dh,-1
		endif
	endif
return

"block_plane":
	PLANE 4, 0,dh,0, 0,dh+h,0, 0,dh+h,l, 0,dh,l
	PLANE 4, ttt,dh,0, ttt,dh+h,0, ttt,dh+h,l, ttt,dh,l
	PLANE 4, 0,dh,0, ttt,dh,0, ttt,dh,l, 0,dh,l
	PLANE 4, 0,dh+h,0, ttt,dh+h,0, ttt,dh+h,l, 0,dh+h,l
return

"set_pen":
	pen_cont = perem_pen_cont
	pen_cut = perem_pen_cut
	pen_sim = perem_pen_sim
	_fillType = perem_fill
	_fillPen = perem_fill_pen
	_fillBgPen = perem_fill_bg
	if inx = 0 then inx = 1
	if not(perem_pen_eq_sim) then
		ii = perem_coord[inx][6]
		if ii>EPS then pen_sim = perem_pen_sim_m[ii+1]
	endif
	if abs(show_perem_3d-3)>EPS then
		pen_cont = pen_sim
		pen_cut = pen_sim
	endif
	if isEmp then
		pen_cut = 1
	endif
	if perem_fill_eq then
		n = REQUEST{2} ("Building_Material_info", _bmat, "gs_bmat_cutfill_properties", _fillType, _fillPen, _fillBgPen)
	endif
	bSucceed = request{2} ("Building_Material_info", _bmat, "gs_bmat_surface", _mat)
	if pen_cont<1 or pen_cont>255 then pen_cont=1
	if pen_cut<1 or pen_cut>255 then pen_cut=1
	if pen_sim<1 or pen_sim>255 then pen_sim=1
	if _fillPen<1 or _fillPen>255 then _fillPen=1
	if _fillBgPen<1 or _fillBgPen>255 then _fillBgPen=0
	if isError then
		pen_cont=pen_alert
		pen_cut=pen_alert
		pen_sim=pen_alert
		_fillPen=pen_alert
		_fillBgPen=pen_alert
	endif
return

"draw_profile_3d":
	index = perem_archprofile[inx_type]
	addz dl-l/2
	for _iComp = 1 to _nComponents_m[inx_type]
		if _bShowPart_m[inx_type][_iComp] then
			dim _currSurfaces[]
			_bmat = 1
			_surface = 1
			_pen = 1
			n = REQUEST{4} ("Profile_component_info", index, _iComp, "gs_profile_comp_surfaces", _currSurfaces)
			n = REQUEST{4} ("Profile_component_info", index, _iComp, "gs_profile_bmat", _bmat)
			n = REQUEST{4} ("Profile_component_info", index, _iComp, "gs_profile_surface", _surface)
			n = REQUEST{4} ("Profile_component_info", index, _iComp, "gs_profile_outlinepen", _pen)
			if not(perem_fill_eq) then _bmat = perem_material_type[inx_type]
			gosub "set_pen"
			if not(perem_ved_wall_eq) then _pen = pen_cont
			building_material _bmat
			material _mat
			pen _pen
			sect_attrs{2} pen_cut, 1
			_surfIdx = 1
			for _i = _idxStartPoints_m[inx_type][_iComp] to _idxEndPoints_m[inx_type][_iComp] step 5
				gosub "set_status_code"	 ! input _profileGeometryRawData, returns prismStatus
				put 	_profileGeometryRawData_m[inx_type][_i], 		! xn
					_profileGeometryRawData_m[inx_type][_i + 1]+dh, 	! yn
					0, 					! angle of sides from the perpendicular plane
					prismStatus, 				! sn
					_currSurfaces[_surfIdx]			! surfn
				_surfIdx = _surfIdx + 1
			next _i
			_mask = 8
			cprism_{3} _surface, _surface, _surface, _mask,NSP/5, l,get(NSP)
		endif
	next _iComp
	del 1
return

"set_status_code":
	edgeVisible 		= _profileGeometryRawData_m[inx_type][_i + 2]
	verticalEdgeVisible 	= _profileGeometryRawData_m[inx_type][_i + 3]
	additionalStatus 	= _profileGeometryRawData_m[inx_type][_i + 4]
	poly2Status 	= edgeVisible + additionalStatus
	prismStatus 	= additionalStatus
	tubeStatus 	= additionalStatus
	if additionalStatus >= 0 then        ! not contour end
		if edgeVisible then
			prismStatus = prismStatus + 15    ! j1, j2, j3, j4
		endif
		if verticalEdgeVisible = 0 then
			! status code - j2=1 and j7=1: the vertical edge is only visible when it is a contour observed from the current direction of view
			! needed only if mask 8 is not used for cprism_{3}
			prismStatus = prismStatus + 64
			! in tube, lateral edges starting from the node are used for showing the contour
			! needed only if mask 256 is not used for tube_{2}
			tubeStatus = tubeStatus + 1
		endif
	endif
return


"hotspot_3d_1":
	HOTSPOT	hx,		0,				0,	unID,	perem_dh_1,	1+128: unID=unID+1
	HOTSPOT	hx,		perem_dh_1,		0,	unID,	perem_dh_1,	2: unID=unID+1
	HOTSPOT	hx,		-1,				0,	unID,	perem_dh_1,	3: unID=unID+1
	if perem_type[i]=iType_UGMIRR or perem_type[i]=iType_UG or perem_type[i]=iType_UGx2 then
		HOTSPOT	x,		dh,				0,	unID,	perem_zazor_1,	1+128: unID=unID+1
		HOTSPOT	x+perem_zazor_1,		dh,		0,	unID,	perem_zazor_1,	2: unID=unID+1
		HOTSPOT	-1,		dh,				0,	unID,	perem_zazor_1,	3: unID=unID+1
	endif
	if perem_type[i]=iType_CONC or perem_type[i]=iType_ARM or perem_type[i]=iType_UTEPL or (perem_type[i]=iType_SB and perem_podbor_1)  then
		HOTSPOT	x,		dh+h/2,				0,	unID,	perem_t_1,	1+128: unID=unID+1
		HOTSPOT	x+perem_t_1,		dh+h/2,		0,	unID,	perem_t_1,	2: unID=unID+1
		HOTSPOT	-1,		dh+h/2,				0,	unID,	perem_t_1,	3: unID=unID+1
		HOTSPOT	hx+0.01,		dh,				0,	unID,	perem_h_1,	1+128: unID=unID+1
		HOTSPOT	hx+0.01,		dh+perem_h_1,		0,	unID,	perem_h_1,	2: unID=unID+1
		HOTSPOT	hx+0.01,		-1,				0,	unID,	perem_h_1,	3: unID=unID+1
	endif
	if perem_type[i]=iType_SB and (perem_qty_by_type[i]-1)>EPS then
		HOTSPOT	x+ttt,		dh,				0,	unID,	perem_zazor_1,	1: unID=unID+1
		HOTSPOT	x+ttt+perem_zazor_1,		dh,		0,	unID,	perem_zazor_1,	2: unID=unID+1
		HOTSPOT	-1,		dh,				0,	unID,	perem_zazor_1,	3: unID=unID+1
	endif
return

"hotspot_3d_2":
	HOTSPOT	hx,		0,				0,	unID,	perem_dh_2,	1+128: unID=unID+1
	HOTSPOT	hx,		perem_dh_2,		0,	unID,	perem_dh_2,	2: unID=unID+1
	HOTSPOT	hx,		-1,				0,	unID,	perem_dh_2,	3: unID=unID+1
	if perem_type[i]=iType_UGMIRR or perem_type[i]=iType_UG or perem_type[i]=iType_UGx2 then
		HOTSPOT	x,		dh,				0,	unID,	perem_zazor_2,	1+128: unID=unID+1
		HOTSPOT	x+perem_zazor_2,		dh,		0,	unID,	perem_zazor_2,	2: unID=unID+1
		HOTSPOT	-1,		dh,				0,	unID,	perem_zazor_2,	3: unID=unID+1
	endif
	if perem_type[i]=iType_CONC or perem_type[i]=iType_ARM or perem_type[i]=iType_UTEPL or (perem_type[i]=iType_SB and perem_podbor_2)  then
		HOTSPOT	x,		dh+h/2,				0,	unID,	perem_t_2,	1+256: unID=unID+1
		HOTSPOT	x+perem_t_2,		dh+h/2,		0,	unID,	perem_t_2,	2: unID=unID+1
		HOTSPOT	-1,		dh+h/2,				0,	unID,	perem_t_2,	3: unID=unID+1
		HOTSPOT	hx+0.01,		dh,				0,	unID,	perem_h_2,	1+128: unID=unID+1
		HOTSPOT	hx+0.01,		dh+perem_h_2,		0,	unID,	perem_h_2,	2: unID=unID+1
		HOTSPOT	hx+0.01,		-1,				0,	unID,	perem_h_2,	3: unID=unID+1
	endif
	if perem_type[i]=iType_SB and (perem_qty_by_type[i]-1)>EPS then
		HOTSPOT	x+ttt,		dh,				0,	unID,	perem_zazor_2,	1: unID=unID+1
		HOTSPOT	x+ttt+perem_zazor_2,		dh,		0,	unID,	perem_zazor_2,	2: unID=unID+1
		HOTSPOT	-1,		dh,				0,	unID,	perem_zazor_2,	3: unID=unID+1
	endif
return

"hotspot_3d_3":
	HOTSPOT	hx,		0,				0,	unID,	perem_dh_3,	1+128: unID=unID+1
	HOTSPOT	hx,		perem_dh_3,		0,	unID,	perem_dh_3,	2: unID=unID+1
	HOTSPOT	hx,		-1,				0,	unID,	perem_dh_3,	3: unID=unID+1
	if perem_type[i]=iType_UGMIRR or perem_type[i]=iType_UG or perem_type[i]=iType_UGx2 then
		HOTSPOT	x,		dh,				0,	unID,	perem_zazor_3,	1+128: unID=unID+1
		HOTSPOT	x+perem_zazor_3,		dh,		0,	unID,	perem_zazor_3,	2: unID=unID+1
		HOTSPOT	-1,		dh,				0,	unID,	perem_zazor_3,	3: unID=unID+1
	endif
	if perem_type[i]=iType_CONC or perem_type[i]=iType_ARM or perem_type[i]=iType_UTEPL or (perem_type[i]=iType_SB and perem_podbor_3)  then
		HOTSPOT	x,		dh+h/2,				0,	unID,	perem_t_3,	1+128: unID=unID+1
		HOTSPOT	x+perem_t_3,		dh+h/2,		0,	unID,	perem_t_3,	2: unID=unID+1
		HOTSPOT	-1,		dh+h/2,				0,	unID,	perem_t_3,	3: unID=unID+1
		HOTSPOT	hx+0.01,		dh,				0,	unID,	perem_h_3,	1+128: unID=unID+1
		HOTSPOT	hx+0.01,		dh+perem_h_3,		0,	unID,	perem_h_3,	2: unID=unID+1
		HOTSPOT	hx+0.01,		-1,				0,	unID,	perem_h_3,	3: unID=unID+1
	endif
	if perem_type[i]=iType_SB and (perem_qty_by_type[i]-1)>EPS then
		HOTSPOT	x+ttt,		dh,				0,	unID,	perem_zazor_3,	1: unID=unID+1
		HOTSPOT	x+ttt+perem_zazor_3,		dh,		0,	unID,	perem_zazor_3,	2: unID=unID+1
		HOTSPOT	-1,		dh,				0,	unID,	perem_zazor_3,	3: unID=unID+1
	endif
return

"hotspot_3d_4":
	HOTSPOT	hx,		0,				0,	unID,	perem_dh_4,	1+128: unID=unID+1
	HOTSPOT	hx,		perem_dh_4,		0,	unID,	perem_dh_4,	2: unID=unID+1
	HOTSPOT	hx,		-1,				0,	unID,	perem_dh_4,	3: unID=unID+1
	if perem_type[i]=iType_UGMIRR or perem_type[i]=iType_UG or perem_type[i]=iType_UGx2 then
		HOTSPOT	x,		dh,				0,	unID,	perem_zazor_4,	1+128: unID=unID+1
		HOTSPOT	x+perem_zazor_4,		dh,		0,	unID,	perem_zazor_4,	2: unID=unID+1
		HOTSPOT	-1,		dh,				0,	unID,	perem_zazor_4,	3: unID=unID+1
	endif
	if perem_type[i]=iType_CONC or perem_type[i]=iType_ARM or perem_type[i]=iType_UTEPL or (perem_type[i]=iType_SB and perem_podbor_4)  then
		HOTSPOT	x,		dh+h/2,				0,	unID,	perem_t_4,	1+128: unID=unID+1
		HOTSPOT	x+perem_t_4,		dh+h/2,		0,	unID,	perem_t_4,	2: unID=unID+1
		HOTSPOT	-1,		dh+h/2,				0,	unID,	perem_t_4,	3: unID=unID+1
		HOTSPOT	hx+0.01,		dh,				0,	unID,	perem_h_4,	1+128: unID=unID+1
		HOTSPOT	hx+0.01,		dh+perem_h_4,		0,	unID,	perem_h_4,	2: unID=unID+1
		HOTSPOT	hx+0.01,		-1,				0,	unID,	perem_h_4,	3: unID=unID+1
	endif
	if perem_type[i]=iType_SB and (perem_qty_by_type[i]-1)>EPS then
		HOTSPOT	x+ttt,		dh,				0,	unID,	perem_zazor_4,	1: unID=unID+1
		HOTSPOT	x+ttt+perem_zazor_4,		dh,		0,	unID,	perem_zazor_4,	2: unID=unID+1
		HOTSPOT	-1,		dh,				0,	unID,	perem_zazor_4,	3: unID=unID+1
	endif
return
