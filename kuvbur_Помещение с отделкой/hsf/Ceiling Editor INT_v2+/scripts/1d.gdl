
! ================
! DEFAULT VALUES (INT)
	defValSelRect = 0.20
	defValFrmRateTB = 0.05
	defValFrmIconRateTB = 0.05
	defValWminTB = 0.25
	defValWmaxTB = 3.00
	defValMinSizCeiPanel = 0.150
	defValMinThkCeiPanel = 0.010
	defValMaxThkCeiPanel = 0.050
	defValMaxThkBorder = 0.150
	defValMinThkEdge = 0.005
	defValMinWidthEdge = 0.025
	defValMaxWidthEdge = 0.100
!! DEFAULT VALUES (US)
!	defValSelRect = 8"
!	defValFrmRateTB = 2"
!	defValFrmIconRateTB = 2"
!	defValWminTB = 10"
!	defValWmaxTB = 120"
!	defValMinSizCeiPanel = 6"
!	defValMinThkCeiPanel = 0.4"
!	defValMaxThkCeiPanel = 2"
!	defValMaxThkBorder = 6"
!	defValMinThkEdge = 0.2"
!	defValMinWidthEdge = 1"
!	defValMaxWidthEdge = 4"
! ================

if GLOB_SCRIPT_TYPE = 7 or GLOB_SCRIPT_TYPE = 8 then "Masterend"
uiDialogTitle = `Редактор потолков`

dim stMenu[]
	stMenu[1] = `Проектирование`
	stMenu[2] = `Края и границы`
	stMenu[3] = `Инструменты редактирования`
	stMenu[4] = `Аксессуары (группа)`
	stMenu[5] = `Аксессуары (уникальные)`
	stMenu[6] = `Внешний вид`
	stMenu[7] = `Текст`
	stMenu[8] = `Дополнительная информация`

dim st3Dmodes[]
	st3Dmodes[1] = `Текстуры`
	st3Dmodes[2] = `Модель`

dim stCeiPanelTypes[], stCeiPanelTypesID[]
	stCeiPanelTypes[ 1] = `A-01`	: stCeiPanelTypesID[ 1] = 100
	stCeiPanelTypes[ 2] = `S-01`	: stCeiPanelTypesID[ 2] = 101
	stCeiPanelTypes[ 3] = `S-12`	: stCeiPanelTypesID[ 3] = 112
	stCeiPanelTypes[ 4] = `S-02`	: stCeiPanelTypesID[ 4] = 102
	stCeiPanelTypes[ 5] = `C-02`	: stCeiPanelTypesID[ 5] = 202
	stCeiPanelTypes[ 6] = `C-12`	: stCeiPanelTypesID[ 6] = 212
	stCeiPanelTypes[ 7] = `S-21`	: stCeiPanelTypesID[ 7] = 121
	stCeiPanelTypes[ 8] = `S-22`	: stCeiPanelTypesID[ 8] = 122
	stCeiPanelTypes[ 9] = `S-22a`	: stCeiPanelTypesID[ 9] = 125
	stCeiPanelTypes[10] = `S-24`	: stCeiPanelTypesID[10] = 124
	stCeiPanelTypes[11] = `C-21`	: stCeiPanelTypesID[11] = 221
	stCeiPanelTypes[12] = `C-22`	: stCeiPanelTypesID[12] = 222
	stCeiPanelTypes[13] = `C-22a`	: stCeiPanelTypesID[13] = 225
	stCeiPanelTypes[14] = `C-24`	: stCeiPanelTypesID[14] = 224
	stCeiPanelTypes[15] = `P-01`	: stCeiPanelTypesID[15] = 801
	stCeiPanelTypes[16] = `P-11`	: stCeiPanelTypesID[16] = 811
	stCeiPanelTypes[17] = `P-21`	: stCeiPanelTypesID[17] = 821
	stCeiPanelTypes[18] = `пусто`	: stCeiPanelTypesID[18] = -1

dim stAccTypes[]
	stAccTypes[1] = `Вентиляция`
	stAccTypes[2] = `Освещение`
	stAccTypes[3] = `Пожбез`
	stAccTypes[4] = `Оповещение`

dim stAccVentTypes[], stAccVentTypesID[]
	stAccVentTypes[1] = `Квадрат`				: stAccVentTypesID[1] = 101
	stAccVentTypes[2] = `Прямоугольник`		: stAccVentTypesID[2] = 102
	stAccVentTypes[3] = `Круг`				: stAccVentTypesID[3] = 111
	stAccVentTypes[4] = `Конус`				: stAccVentTypesID[4] = 112
	stAccVentTypes[5] = `Вихревой диффузор`	: stAccVentTypesID[5] = 121

dim stAccLigTypes[], stAccLigTypesID[]
	stAccLigTypes[ 1] = `Круглый светильник`		: stAccLigTypesID[ 1] = 201
	stAccLigTypes[ 2] = `2 круглых светильника`		: stAccLigTypesID[ 2] = 211
	stAccLigTypes[ 3] = `Полусферический светильник`	: stAccLigTypesID[ 3] = 204
	stAccLigTypes[ 4] = `Точечный светильник`		: stAccLigTypesID[ 4] = 221
	stAccLigTypes[ 5] = `2 точечных светильника`	: stAccLigTypesID[ 5] = 222
	stAccLigTypes[ 6] = `3 точечных светильника`	: stAccLigTypesID[ 6] = 223
	stAccLigTypes[ 7] = `4 точечных светильника`	: stAccLigTypesID[ 7] = 224
	stAccLigTypes[ 8] = `6 точечных светильников`	: stAccLigTypesID[ 8] = 226
	stAccLigTypes[ 9] = `Квадратный светильник`		: stAccLigTypesID[ 9] = 202
	stAccLigTypes[10] = `Светильник на всю панель`	: stAccLigTypesID[10] = 203
	stAccLigTypes[11] = `Люминесцентная лампа`		: stAccLigTypesID[11] = 231
	stAccLigTypes[12] = `Компактная люминесцентная`	: stAccLigTypesID[12] = 236

dim stAccSafTypes[], stAccSafTypesID[]
	stAccSafTypes[1] = `Спринклер`			: stAccSafTypesID[1] = 301
	stAccSafTypes[2] = `Детектор дыма`		: stAccSafTypesID[2] = 302
	stAccSafTypes[3] = `Датчик движения`	: stAccSafTypesID[3] = 303
	stAccSafTypes[4] = `Камера`				: stAccSafTypesID[4] = 311

dim stAccAudTypes[], stAccAudTypesID[]
	stAccAudTypes[1] = `Колонка (круглая)`	: stAccAudTypesID[1] = 401
	stAccAudTypes[2] = `Колонка (квадратная)`	: stAccAudTypesID[2] = 402
	stAccAudTypes[3] = `Колонка (4 круга)`	: stAccAudTypesID[3] = 403

dim stDet3d[]
	stDet3d[1] = `Выкл`
	stDet3d[2] = `Упрощённый`
	stDet3d[3] = `Детальный`

! == UI strings ===

st3Dmode = `Настройки 3D-режима`
stCeiPanelType = `Тип потолочной панели`
stDimensions = `Размеры`

stWallConnType = `Тип соединения со стеной`
stClosedBorder = `Закрытая граница`
stEdgeType = `Типы краев`

stSetGridOrigin = `Установить начало сетки и направление`
stShowAccPal = `Показать палитру 'Аксессуары'`
stuseAcc = `Использовать как аксессуар`
stEditNodesNum = `Количество редактируемых узлов на краю`

stSelectionGrid = `Сетка выбора`
stGridX = `Сетка (x)`
stGridY = `Сетка (y)`
stShifting = `Сдвиг`
stAccGroup = `Группа`
stAccType = `Тип`
stCeiPanel = `Потолочная панель`
stAccPanel = `Панель аксессуара`
stAccRotation = `Ориентация`
stButtonAdd = `Добавить / Изменить`
stButtonRotate = `Изменить`
stClear = `Очистить`
stClearAcc = `Очистить аксессуары`
stButtonClear = `Очистить`
stClearSelectedPanel = `на выбранной панели(ях)`
stClearSelectedArea = `на выбранной области`
stClearTotalCeiling = `на всем потолке`
stAlertNoSelection = `Нет выбранных панелей!\nИспользуйте "Сетку выбора" на плане этажа!`

stPattern = `Узор`
stClear = `Очистить`
stRot90p = `Повернутый (+90 град)`
stRot90m = `Повернутый (-90 град)`

stRepres2d = `2D представление`
stGrid = `Сетка`
stShowGridX = `Показать сетку (X)`
stShowGridY = `Показать сетку (Y)`
stShowPattern = `Показать символ узора`
stAccessories = `Аксессуары`
stShowAcc = `Показать аксессуары`
stRepres3d = `3D представление`
stShadow = `Тень`
stResol = `Разрешение`
stGridOrigin = `Начало сетки`

stBold = `Жирный`
stItalic = `Курсив`
stUnderline = `Подчеркнутый`
stOpaque = `Непрозрачный`
stFrame = `Рамка`
stAlignment = `Выравнивание`
stLeading = `Интерлиньяж`
stLeft = `Слева`
stRight = `Справа`
stCenter = `По центру`
stHorText = `Горизонтальный текст`
stTextContent = `Содержимое текстового блока`
stTextArea = `Показать площадь`
stTextPanelQty = `Показать количество панелей`
stTextAccType = `Показать тип аксессуаров`

stPiece = `Шт.`
stPieces = `Шт.`
stUnitM = "мм"
stUnitImp = "Pt"

stSupport = `Поддержка`
stEmail = `эл. почта`
stOurWebsite = `Наш сайт`
stFollowFacebook = `Подпишитесь на Facebook`

stOverrideMVO = `Переопределить параметры просмотра модели *`
stMVOinfo1 = `* Глобальные настройки:`
stMVOinfo2 = `Документ > Установить вид модели > Параметры просмотра модели`

!!!!!uiDialogTitle = `Ceiling Editor`
!!!!!
!!!!!dim stMenu[]
!!!!!	stMenu[1] = `Design`
!!!!!	stMenu[2] = `Edges and Borders`
!!!!!	stMenu[3] = `Editing Tools`
!!!!!	stMenu[4] = `Accessories (group)`
!!!!!	stMenu[5] = `Accessories (unique)`
!!!!!	stMenu[6] = `Appearance`
!!!!!	stMenu[7] = `Text`
!!!!!	stMenu[8] = `More Information`
!!!!!
!!!!!dim st3Dmodes[]
!!!!!	st3Dmodes[1] = `Textures`
!!!!!	st3Dmodes[2] = `Model`
!!!!!
!!!!!dim stCeiPanelTypes[], stCeiPanelTypesID[]
!!!!!	stCeiPanelTypes[ 1] = `A-01`	: stCeiPanelTypesID[ 1] = 100
!!!!!	stCeiPanelTypes[ 2] = `S-01`	: stCeiPanelTypesID[ 2] = 101
!!!!!	stCeiPanelTypes[ 3] = `S-12`	: stCeiPanelTypesID[ 3] = 112
!!!!!	stCeiPanelTypes[ 4] = `S-02`	: stCeiPanelTypesID[ 4] = 102
!!!!!	stCeiPanelTypes[ 5] = `C-02`	: stCeiPanelTypesID[ 5] = 202
!!!!!	stCeiPanelTypes[ 6] = `C-12`	: stCeiPanelTypesID[ 6] = 212
!!!!!	stCeiPanelTypes[ 7] = `S-21`	: stCeiPanelTypesID[ 7] = 121
!!!!!	stCeiPanelTypes[ 8] = `S-22`	: stCeiPanelTypesID[ 8] = 122
!!!!!	stCeiPanelTypes[ 9] = `S-22a`	: stCeiPanelTypesID[ 9] = 125
!!!!!	stCeiPanelTypes[10] = `S-24`	: stCeiPanelTypesID[10] = 124
!!!!!	stCeiPanelTypes[11] = `C-21`	: stCeiPanelTypesID[11] = 221
!!!!!	stCeiPanelTypes[12] = `C-22`	: stCeiPanelTypesID[12] = 222
!!!!!	stCeiPanelTypes[13] = `C-22a`	: stCeiPanelTypesID[13] = 225
!!!!!	stCeiPanelTypes[14] = `C-24`	: stCeiPanelTypesID[14] = 224
!!!!!	stCeiPanelTypes[15] = `P-01`	: stCeiPanelTypesID[15] = 801
!!!!!	stCeiPanelTypes[16] = `P-11`	: stCeiPanelTypesID[16] = 811
!!!!!	stCeiPanelTypes[17] = `P-21`	: stCeiPanelTypesID[17] = 821
!!!!!	stCeiPanelTypes[18] = `empty`	: stCeiPanelTypesID[18] = -1
!!!!!
!!!!!dim stAccTypes[]
!!!!!	stAccTypes[1] = `Вентиляция`
!!!!!	stAccTypes[2] = `Освещение`
!!!!!	stAccTypes[3] = `Пожбез`
!!!!!	stAccTypes[4] = `Оповещение`
!!!!!
!!!!!dim stAccVentTypes[], stAccVentTypesID[]
!!!!!	stAccVentTypes[1] = `Square`			: stAccVentTypesID[1] = 101
!!!!!	stAccVentTypes[2] = `Rectangle`			: stAccVentTypesID[2] = 102
!!!!!	stAccVentTypes[3] = `Circle`			: stAccVentTypesID[3] = 111
!!!!!	stAccVentTypes[4] = `Cone`				: stAccVentTypesID[4] = 112
!!!!!	stAccVentTypes[5] = `Swirl Diffuser`	: stAccVentTypesID[5] = 121
!!!!!
!!!!!dim stAccLigTypes[], stAccLigTypesID[]
!!!!!	stAccLigTypes[ 1] = `Circle Lamp`			: stAccLigTypesID[ 1] = 201
!!!!!	stAccLigTypes[ 2] = `2x Circle Lamp`		: stAccLigTypesID[ 2] = 211
!!!!!	stAccLigTypes[ 3] = `Half Sphere Lamp`		: stAccLigTypesID[ 3] = 204
!!!!!	stAccLigTypes[ 4] = `Spot Lamp`				: stAccLigTypesID[ 4] = 221
!!!!!	stAccLigTypes[ 5] = `2x Spot Lamp`			: stAccLigTypesID[ 5] = 222
!!!!!	stAccLigTypes[ 6] = `3x Spot Lamp`			: stAccLigTypesID[ 6] = 223
!!!!!	stAccLigTypes[ 7] = `4x Spot Lamp`			: stAccLigTypesID[ 7] = 224
!!!!!	stAccLigTypes[ 8] = `6x Spot Lamp`			: stAccLigTypesID[ 8] = 226
!!!!!	stAccLigTypes[ 9] = `Square Lamp`			: stAccLigTypesID[ 9] = 202
!!!!!	stAccLigTypes[10] = `Full Panel Lamp`		: stAccLigTypesID[10] = 203
!!!!!	stAccLigTypes[11] = `Fluorescent Lamp`		: stAccLigTypesID[11] = 231
!!!!!	stAccLigTypes[12] = `Compact Fluorescent`	: stAccLigTypesID[12] = 236
!!!!!
!!!!!dim stAccSafTypes[], stAccSafTypesID[]
!!!!!	stAccSafTypes[1] = `Spinkler`			: stAccSafTypesID[1] = 301
!!!!!	stAccSafTypes[2] = `Smoke Detector`		: stAccSafTypesID[2] = 302
!!!!!	stAccSafTypes[3] = `Motion Detector`	: stAccSafTypesID[3] = 303
!!!!!	stAccSafTypes[4] = `Camera`				: stAccSafTypesID[4] = 311
!!!!!
!!!!!dim stAccAudTypes[], stAccAudTypesID[]
!!!!!	stAccAudTypes[1] = `Speaker (circle)`	: stAccAudTypesID[1] = 401
!!!!!	stAccAudTypes[2] = `Speaker (square)`	: stAccAudTypesID[2] = 402
!!!!!	stAccAudTypes[3] = `Speaker (circle 4)`	: stAccAudTypesID[3] = 403
!!!!!
!!!!!dim stDet3d[]
!!!!!	stDet3d[1] = `Выкл`
!!!!!	stDet3d[2] = `Упрощённый`
!!!!!	stDet3d[3] = `Детальный`
!!!!!
!!!!!! == UI strings ===
!!!!!
!!!!!st3Dmode = `3D Mode Options`
!!!!!stCeiPanelType = `Ceiling Panel Type`
!!!!!stDimensions = `Dimensions`
!!!!!
!!!!!stWallConnType = `Wall Connection Type`
!!!!!stClosedBorder = `Closed Border`
!!!!!stEdgeType = `Edge Types`
!!!!!
!!!!!stSetGridOrigin = `Set grid origin and direction`
!!!!!stShowAccPal = `Show 'Accessories' palette`
!!!!!stEditNodesNum = `Number of editable node(s) per edges`
!!!!!
!!!!!stSelectionGrid = `Selection Grid`
!!!!!stGridX = `Grid (x)`
!!!!!stGridY = `Grid (y)`
!!!!!stShifting = `Shifting`
!!!!!stAccGroup = `Group`
!!!!!stAccType = `Type`
!!!!!stCeiPanel = `Ceiling Panel`
!!!!!stAccPanel = `Accessory Panel`
!!!!!stAccRotation = `Orientation`
!!!!!stButtonAdd = `Add / Change`
!!!!!stButtonRotate = `Change`
!!!!!stClear = `Clear`
!!!!!stClearAcc = `Clear Accessories`
!!!!!stButtonClear = `Clear`
!!!!!stClearSelectedPanel = `on Selected Panel(s)`
!!!!!stClearSelectedArea = `on Selected Area`
!!!!!stClearTotalCeiling = `on Total Ceiling`
!!!!!stAlertNoSelection = `There aren't selected panel(s)!\nUse the "Selection Grid" on Floor Plan!`
!!!!!
!!!!!stPattern = `Pattern`
!!!!!stClear = `Clear`
!!!!!stRot90p = `Rotated (+90 Grad)`
!!!!!stRot90m = `Rotated (-90 Grad)`
!!!!!
!!!!!stRepres2d = `2D Representation`
!!!!!stGrid = `Grid`
!!!!!stShowGridX = `Show Grid (X)`
!!!!!stShowGridY = `Show Grid (Y)`
!!!!!stShowPattern = `Show Pattern Symbol`
!!!!!stAccessories = `Accessories`
!!!!!stShowAcc = `Show Accessories`
!!!!!stRepres3d = `3D Representation`
!!!!!stShadow = `Shadow`
!!!!!stResol = `Resolution`
!!!!!stGridOrigin = `Grid Origin`
!!!!!
!!!!!stBold = `Bold`
!!!!!stItalic = `Italic`
!!!!!stUnderline = `Underline`
!!!!!stOpaque = `Opaque`
!!!!!stFrame = `Frame`
!!!!!stAlignment = `Alignment`
!!!!!stLeading = `Leading`
!!!!!stLeft = `Left`
!!!!!stRight = `Right`
!!!!!stCenter = `Center`
!!!!!stHorText = `Horizontal Text`
!!!!!stTextContent = `Text Block Content`
!!!!!stTextArea = `Show Area`
!!!!!stTextPanelQty = `Show Panel Qty.`
!!!!!stTextAccType = `Show Accessories Type`
!!!!!
!!!!!stPiece = `Pc.`
!!!!!stPieces = `Pcs.`
!!!!!stUnitM = "mm"
!!!!!stUnitImp = "Pt"
!!!!!
!!!!!stSupport = `Support`
!!!!!stEmail = `e-mail`
!!!!!stOurWebsite = `Our Website`
!!!!!stFollowFacebook = `Follow us on Facebook`
!!!!!
!!!!!stOverrideMVO = `Override Model View Options *`
!!!!!stMVOinfo1 = `* Global settings:`
!!!!!stMVOinfo2 = `Document > Set Model View > Model View Options`


eps = 0.0001

bIntWiz = 1

bPlacedElem = not(GLOB_INTGUID = "00000000-0000-0000-0000-000000000000" or GLOB_INTGUID = "")
bMoving = (int (GLOB_CONTEXT / 10) = 2)
if GLOB_MODPAR_NAME = "field_poly" then parameters bMovedIntNodes = 1

workUnit = ""
qq = request ("Working_length_unit", "", workUnit)
if strstr (workUnit, "m") > 0 then wrkU = "m" else wrkU = "f"

! ----
conv = 2.83465		! 1 mm = conv Pt

stUnitUnit = ""
if wrkU = "m" then
	stUnitUnit = stUnitM
endif

if wrkU = "f" then
	stUnitUnit = stUnitImp
endif

! ================

nHoles = 0
if bIntWiz then
	! *** polygon exploding to contour and hole(s) ***
	dim n_hpoly[], hole_poly[][], hole_poly_st[][]
	nc = vardim1 (ac_coords)
	ncont = nc
	hind = 0
	nn = 0
	for w = 1 to nc
		if ac_coords[w][1]>0.030 then
			if nHoles = 0 then
				ncont = nn + 1
			else
				nn = nn+1
				n_hpoly[hind] = nn
				hole_poly[nHoles][nn * 2 - 1] = ac_coords[w][2]
				hole_poly[nHoles][nn * 2] = ac_coords[w][3]
				hole_poly_st[nHoles][nn] = -1
			endif
			nn = 0
			if w < nc then
				nHoles = nHoles + 1
				hind = hind + 1
			endif
		else
			nn = nn + 1
			if nHoles > 0 then
				hole_poly[nHoles][nn * 2 - 1] = ac_coords[w][2]
				hole_poly[nHoles][nn * 2] = ac_coords[w][3]
				hole_poly_st[nHoles][nn] = 15
			endif
		endif
	next w
	
	dim field_poly[1][], field_poly_st[][], n_fpoly[]
	n_fpoly[1] = ncont
	
	for w = 1 to n_fpoly[1]
		idx = 2 * w - 1
		field_poly[1][idx] = ac_coords[w][2]
		field_poly[1][idx + 1] = ac_coords[w][3]
		field_poly_st[1][w] = 15 - 16 * (w = n_fpoly[1])
	NEXT w
endif

if not(bIntWiz) then		! Ceiling object as Object (not with Interior Wizard API)
	nc = 4 * (nIntHotspots + 1) + 1
	ncont = nc
	if not(bMovedIntNodes) then
		field_poly[1][1] = 0
		field_poly[1][2] = 0
		field_poly_st[1][1] = 15
		fpidx = 1
		for w = 2 to nIntHotspots + 1
			fpidx = fpidx + 1
			fp_coordnum = 2 * fpidx - 1
			field_poly[1][fp_coordnum] = 0
			field_poly[1][fp_coordnum + 1] = b / (nIntHotspots + 1) * (w - 1)
			field_poly_st[1][fpidx] = 15
		next w
		fpidx = fpidx + 1
		fp_coordnum = 2 * fpidx - 1
		field_poly[1][fp_coordnum] = 0
		field_poly[1][fp_coordnum + 1] = b
		field_poly_st[1][fpidx] = 15
		for w = 2 to nIntHotspots + 1
			fpidx = fpidx + 1
			fp_coordnum = 2 * fpidx - 1
			field_poly[1][fp_coordnum] = a / (nIntHotspots + 1) * (w - 1)
			field_poly[1][fp_coordnum + 1] = b
			field_poly_st[1][fpidx] = 15
		next w
		fpidx = fpidx + 1
		fp_coordnum = 2 * fpidx - 1
		field_poly[1][fp_coordnum] = a
		field_poly[1][fp_coordnum + 1] = b
		field_poly_st[1][fpidx] = 15
		for w = nIntHotspots + 1 to 2 step -1
			fpidx = fpidx + 1
			fp_coordnum = 2 * fpidx - 1
			field_poly[1][fp_coordnum] = a
			field_poly[1][fp_coordnum + 1] = b / (nIntHotspots + 1) * (w - 1)
			field_poly_st[1][fpidx] = 15
		next w
		fpidx = fpidx + 1
		fp_coordnum = 2 * fpidx - 1
		field_poly[1][fp_coordnum] = a
		field_poly[1][fp_coordnum + 1] = 0
		field_poly_st[1][fpidx] = 15
		for w = nIntHotspots + 1 to 2 step -1
			fpidx = fpidx + 1
			fp_coordnum = 2 * fpidx - 1
			field_poly[1][fp_coordnum] = a / (nIntHotspots + 1) * (w - 1)
			field_poly[1][fp_coordnum + 1] = 0
			field_poly_st[1][fpidx] = 15
		next w
		fpidx = fpidx + 1
		fp_coordnum = 2 * fpidx - 1
		field_poly[1][fp_coordnum] = 0
		field_poly[1][fp_coordnum + 1] = 0
		field_poly_st[1][fpidx] = -1
	endif

	ncont = nc
	n_fpoly[1] = ncont
	fp_coordnum = 2 * ncont - 1
	field_poly[1][fp_coordnum] = field_poly[1][1]
	field_poly[1][fp_coordnum + 1] = field_poly[1][2]
	field_poly_st[1][ncont] = -1
endif


dim rpoly[][], rpoly_st[], rotcrds[][], rotcont[][]
dim rotopng[][], crds[][]
dim sectp[][], sectpx[][], sectpy[][], sectpox[][], sectpoy[][]

goto "MasterCont"

! ================================================
40:
! Coordinates of rotated poligon
for w = 1 to n_fpoly[w0]
	idx = 2 * w - 1
	put field_poly[w0][idx], field_poly[w0][idx + 1], sgn (field_poly_st[w0][w])
next w

if bStack2 then put use (nsp)
	
nrpoly = n_fpoly[w0]
rpoly = field_poly
rpoly_st = field_poly_st[w0]
gosub 200
rotcont = rotcrds
return

200:	! Coordinates on rotated coordinate-system
dx = fieldOrig[w0][1]
dy = fieldOrig[w0][2]
hol = 0
for w = 1 to nrpoly
	if rpoly_st[w] <> -2 and hol = 0 then
		x1 = get (1)
		y1 = get (1)
		qq = get (1)
		rotcrds[w][1] = (y1 - dy) * sin (alf) + (x1 - dx) * cos (alf)
		rotcrds[w][2] = (y1 - dy) * cos (alf) - (x1 - dx) * sin (alf)
	else
		qq = get (1)
		qq = get (1)
		qq = get (1)
		hol = 1
	endif
next w
rtxmin = rotcrds[1][1]
rtymin = rotcrds[1][2]
rtxmax = rotcrds[1][1]
rtymax = rotcrds[1][2]
for w = 2 to nrpoly
	rtxmin = min (rtxmin, rotcrds[w][1])
	rtxmax = max (rtxmax, rotcrds[w][1])
	rtymin = min (rtymin, rotcrds[w][2])
	rtymax = max (rtymax, rotcrds[w][2])
next w
sxmin = rtxmin - 3
symin = rtymin - 3
sxmax = rtxmax + 3
symax = rtymax + 3
rtxmin = rtxmin - xSizCeiPanel * 0.4999
rtymin = rtymin - ySizCeiPanel * 0.4999
rtxmax = rtxmax + xSizCeiPanel * 0.4999
rtymax = rtymax + ySizCeiPanel * 0.4999
return

! ================================================
"MasterCont":

w0 = 1
alf = fieldRot[1]
bStack2 = 0
gosub 40
ddimx = int (rtxmin / xSizCeiPanel) - 1
ddimy = int (rtymin / ySizCeiPanel) - 1
dimx = -int (rtxmin / xSizCeiPanel) + ceil (rtxmax / xSizCeiPanel)
dimy = -int (rtymin / ySizCeiPanel) + ceil (rtymax / ySizCeiPanel)

! === Selection Grid and Accessories ===
if bActiveSelection then
	selRect[1][1] = max (min (selRect[1][1], selRect[2][1] - defValSelRect), rtxmin)
	selRect[1][2] = max (min (selRect[1][2], selRect[2][2] - defValSelRect), rtymin)
	selRect[2][1] = max (min (selRect[2][1], rtxmax), selRect[1][1] + defValSelRect)
	selRect[2][2] = max (min (selRect[2][2], rtymax), selRect[1][2] + defValSelRect)
	parameters selRect = selRect
	ddx = max (selRect[2][1] - selRect[1][1], defValSelRect)
	ddy = max (selRect[2][2] - selRect[1][2], defValSelRect)
	xPosSelection = max (min (xPosSelection, rtxmax - ddx / 2), rtxmin + ddx / 2)
	yPosSelection = max (min (yPosSelection, rtymax - ddy / 2), rtymin + ddy / 2)
	parameters xPosSelection = xPosSelection,
		yPosSelection = yPosSelection
	sx1 = selRect[1][1] / xSizCeiPanel
	sy1 = selRect[1][2] / ySizCeiPanel
	sx2 = selRect[2][1] / xSizCeiPanel
	sy2 = selRect[2][2] / ySizCeiPanel
	if fra (sx1) > 0.5 then nsx1 = ceil (sx1) else nsx1 = int (sx1)
	if fra (sy1) > 0.5 then nsy1 = ceil (sy1) else nsy1 = int (sy1)
	if fra (sx2) > 0.5 then nsx2 = ceil (sx2) else nsx2 = int (sx2)
	if fra (sy2) > 0.5 then nsy2 = ceil (sy2) else nsy2 = int (sy2)
	sx1 = nsx1 * xSizCeiPanel
	sy1 = nsy1 * ySizCeiPanel
	sx2 = nsx2 * xSizCeiPanel
	sy2 = nsy2 * ySizCeiPanel

	! --- Panel Selection in Grid ---
	if not(bShiftY) then
		for w = nsx1 to nsx2 - 1 step nGridX
			dd = 1
			dd0 = bShiftX * int (nGridX / 2 + 0.5)
			for q = nsy1 to nsy2 - 1 step nGridY
				dd = 1 - dd
				if w + dd * dd0 < nsx2 - 0.9 then
					accSel[w + dd * dd0 - ddimx][q - ddimy] = 1
				endif
			next q
		next w
	else
		for q = nsy1 to nsy2 - 1 step nGridY
			dd = 1
			dd0 = bShiftY * int (nGridY / 2 + 0.5)
			for w = nsx1 to nsx2 - 1 step nGridX
				dd = 1 - dd
				if q + dd * dd0 < nsy2 - 0.9 then
					accSel[w - ddimx][q + dd * dd0 - ddimy] = 1
				endif
			next w
		next q
	endif
endif

! === Centerpoint of Panels in Polygon ===

if not (bMoving) then
	dim rotCnt[][], rotHol[][]
	for q = 1 to nc - 1
		idx = 2 * q - 1
		put field_poly[1][idx], field_poly[1][idx + 1], SGN (field_poly_st[1][q])
	next q
	nrpoly = nc - 1
	rpoly = field_poly
	rpoly_st = field_poly_st[1]
	gosub 200
	rotCnt = rotcrds
	for wo = 1 to nHoles
		for q = 1 to n_hpoly[wo]
			idx = 2 * q - 1
			put hole_poly[wo][idx], hole_poly[wo][idx + 1], SGN (hole_poly_st[wo][q])
		next q
		nrpoly = n_hpoly[wo]
		rpoly = hole_poly
		rpoly_st = hole_poly_st[wo]
		gosub 200
		for q = 1 to vardim1 (rotcrds)
			idx = 2 * q - 1
			rotHol[wo][idx] = rotcrds[q][1]
			rotHol[wo][idx + 1] = rotcrds[q][2]
		next q
	next wo
	for w = 1 to dimx
		x0 = (ddimx + w) * xSizCeiPanel + xSizCeiPanel / 2
		y0 = (ddimy + 0) * ySizCeiPanel + ySizCeiPanel / 2
		nSecP = 0
	! --- contour polygon ---
		dim pInPoly[][2], ySecP[]
		pInPoly = rotCnt
		nPip = vardim1 (pInPoly)
		pInPoly[nPip + 1][1] = pInPoly[1][1]
		pInPoly[nPip + 1][2] = pInPoly[1][2]
		pInPoly[nPip + 2][1] = pInPoly[2][1]
		pInPoly[nPip + 2][2] = pInPoly[2][2]
		gosub "PointInPoly"

	! --- holes ---
		dim pInPoly[][2]
		for wp = 1 to nHoles
			for qp = 1 to n_hpoly[wp]
				idx = 2 * qp - 1
				pInPoly[qp][1] = rotHol[wp][idx]
				pInPoly[qp][2] = rotHol[wp][idx + 1]
			next qp
			nPip = vardim1 (pInPoly)
			pInPoly[nPip + 1][1] = pInPoly[1][1]
			pInPoly[nPip + 1][2] = pInPoly[1][2]
			pInPoly[nPip + 2][1] = pInPoly[2][1]
			pInPoly[nPip + 2][2] = pInPoly[2][2]
			gosub "PointInPoly"
		next wp

		for wp = 1 to nSecP - 1
			for qp = wp + 1 to nSecp
				if ySecP[wp] < ySecP[qp] then
					qq = ySecP[wp]
					ySecP[wp] = ySecP[qp]
					ySecP[qp] = qq
				endif
			next qp
		next wp
		if nSecP > 0 then
			ySecP[nSecP + 1] = ySecP[nSecP] - 1
			for q = 1 to dimy
				y0 = (ddimy + q) * ySizCeiPanel + ySizCeiPanel / 2
				qp = 1
				nnSP = 0
				while y0 + eps < ySecP[qp] and qp <= nSecP do
					nnSP = nnSP + 1
					qp = qp + 1
				endwhile
				bInPoly[w][q] = ((nnSP mod 2) = 1)
			next q
		endif
	next w
endif


goto "MasterEnd"

! ==============================================================
"PointInPoly":
	for wp = 1 to nPip
		x1 = pInPoly[wp][1]
		y1 = pInPoly[wp][2]
		x2 = pInPoly[wp + 1][1]
		y2 = pInPoly[wp + 1][2]
		x3 = pInPoly[wp + 2][1]
	
		dx = x2 - x1
		dy = y2 - y1
		dx1 = x0 - x1
		dx2 = x2 - x0
		dx3 = x3 - x2
	
		if sgn (dx2) = sgn (dx1) and abs (dx1) > eps and abs (dx2) > eps then		! not within the vertical section (without endpoints)
			if abs (dx) > eps then
				yy = y1 + dx1 * dy / dx
				if yy > y0 then				! section within the intersection
					nSecP = nSecP + 1
					ySecP[nSecP] = yy
				endif
			endif
		else
			if abs (dx2) < eps then		! endpoint
				if dx > eps and dx3 > -eps or dx < eps and dx3 < -eps then
					if y2 > y0 then		! intersection point on the corner
						nSecP = nSecP + 1
						ySecP[nSecP] = y2
					endif
				endif
			endif
		endif
	next wp
return

! ==============================================================
"MasterEnd":

iPanelType[dimx + 1][dimy + 1] = 0
panelRot[dimx + 1][dimy + 1] = 0
accType[dimx + 1][dimy + 1] = 0
accRot[dimx + 1][dimy + 1] = 0
accSel[dimx + 1][dimy + 1] = 0
bInPoly[dimx + 1][dimy + 1] = 0

! == TOOLBOX ===
sgnMirr = 1 - 2 * SYMB_MIRRORED
symbRotAng = SYMB_ROTANGLE * sgnMirr
if bShowAccPalette then
	nTools = 11
	frmRateTB = defValFrmRateTB
	frmIconRateTB = defValFrmIconRateTB
	iconRate = 1.00		! (width / height)
	
	wTBframe = wTB * frmRateTB
	frmTBIcons = wTB * frmIconRateTB
	wTBicon = wTB * (1 - 2 * (frmRateTB + frmIconRateTB))
	hTBicon = wTBicon * iconRate
	
	nToolGroups = 1
	dim ndTB[]
	ndTB[1] = 0
	for w = 2 to nTools
		if typTBtool[w] <> typTBtool[w - 1] then
			ndTB[nToolGroups] = w - 1
			nToolGroups = nToolGroups + 1
		endif
	next w
	
	openToolID_0 = openToolID
	for w = 1 to nTools
		if openTB[w] > eps and openToolID_0 <> w then openToolID = w
	next w
	
	dim nOpenTool[]
	nOpenTool[ 1] = vardim1 (stCeiPanelTypes)
	nOpenTool[ 2] = 0
	nOpenTool[ 3] = 0
	nOpenTool[ 4] = 0
	nOpenTool[ 5] = vardim1 (stAccVentTypes)
	nOpenTool[ 6] = vardim1 (stAccLigTypes)
	nOpenTool[ 7] = vardim1 (stAccSafTypes)
	nOpenTool[ 8] = vardim1 (stAccAudTypes)
	nOpenTool[ 9] = 0
	nOpenTool[10] = 0
	nOpenTool[11] = 0
	
	dim idTBtools[][]
	if openToolID > 0 then
		idTBtools[1] = stCeiPanelTypesID
		idTBtools[5] = stAccVentTypesID
		idTBtools[6] = stAccLigTypesID
		idTBtools[7] = stAccSafTypesID
		idTBtools[8] = stAccAudTypesID
	
		openTBsideID_0 = openTBsideID
		for q = 1 to nOpenTool[openToolID]
			if openTBside[q] > eps and openTBsideID_0 <> q then openTBsideID = q
		next q
	endif
	
	wminTB = defValWminTB
	wmaxTB = defValWmaxTB
	hminTB = wminTB * (frmRateTB * 2 + frmIconRateTB * (nTools + nToolGroups) + nTools * (1 - 2 * (frmRateTB + frmIconRateTB)) * iconRate)
	hmaxTB = wmaxTB * (frmRateTB * 2 + frmIconRateTB * (nTools + nToolGroups) + nTools * (1 - 2 * (frmRateTB + frmIconRateTB)) * iconRate)
	if GLOB_MODPAR_NAME = "wTB" or GLOB_MODPAR_NAME = "bShowAccPalette" then
		hTB = wTBframe * 2 + frmTBIcons * (nTools + nToolGroups) + nTools * hTBicon
	else
		wTB = hTB / (frmRateTB * 2 + frmIconRateTB * (nTools + nToolGroups) + nTools * (1 - 2 * (frmRateTB + frmIconRateTB)) * iconRate)
	endif
	
	activeToolID_0 = activeToolID
	for w = 1 to nTools
		if (abs (xPosTBtool[w]) > eps or abs (yPosTBtool[w]) > eps) and activeToolID_0 <> w then activeToolID = w
	next w

	dim xTBtool[], yTBtool[]
	dd = 0
	nn = 1
	for w = 1 to nTools
		xTBtool[w] = wTBframe + frmTBIcons + wTBicon / 2
		yTBtool[w] = -(wTBframe + frmTBIcons + hTBicon / 2 + (w - 1) * (hTBicon + frmTBIcons) + dd)
		if nn<=vardim1(ndTB) then
			if w = ndTB[nn] then
				dd = dd + frmTBIcons
				nn = nn + 1
			endif
		endif
	next w

	if activeToolID > 0 then
		w = activeToolID
		xx0 = xPosTB + (xTBtool[w] + xPosTBtool[w]) * cos (symbRotAng) + (yTBtool[w] + yPosTBtool[w]) * sin (symbRotAng) - fieldOrig[1][1]
		yy0 = yPosTB - (xTBtool[w] + xPosTBtool[w]) * sin (symbRotAng) + (yTBtool[w] + yPosTBtool[w]) * cos (symbRotAng) - fieldOrig[1][2]
		xg0 = xx0 * cos (fieldRot[1]) + yy0 * sin (fieldRot[1])
		yg0 = yy0 * cos (fieldRot[1]) - xx0 * sin (fieldRot[1])
		actXgrid = round_int (xg0 / xSizCeiPanel - 0.5) - ddimx
		actYgrid = round_int (yg0 / ySizCeiPanel - 0.5) - ddimy
	endif
endif


"Masterend":
if bIntWiz then CALL "Потолок v2" parameters all is_show_3d = 0

