
unID=sh_unID


! ==============================================================================
! Calculations
! ==============================================================================

alpha = atn((B-h) / (A/2))
inn_alpha = ((90 - alpha) - alpha) / 2
sashWidth_y = gs_sash_width * tan(inn_alpha)
out_radius	= (A/2) / cos((90 - alpha) - alpha)


! ==============================================================================
! Simple Detail Level
! ==============================================================================


if iMullionStyle = MULLION_SOLID_PANEL & gs_optype_m <> SASH_FIXED & (lod3D = 1 | lod3D = 5) then
	A = A - 2*gs_rebate_width
	B = B - 2*gs_rebate_width
endif

if	gs_optype_m = SASH_FIXED |\
	gs_optype_m = SASH_HOR_PIVOT |\
	gs_optype_m = SASH_VER_PIVOT |\
	gs_optype_m = SASH_VER_PIVOT_M |\
	gs_optype_m = SASH_SLIDING_HOR |\
	gs_optype_m = SASH_SLIDING_HOR_M |\
	gs_optype_m = SASH_DOUBLE_SLIDING_HOR |\
	gs_optype_m = SASH_DOUBLE_SLIDING_HOR_M |\
	gs_optype_m = SASH_SLIDING_VER |\
	gs_optype_m = SASH_DOUBLE_SLIDING_VER then

	if ((lod3D = 1 | lod3D = 5) & iMullionStyle <> MULLION_SOLID_PANEL) | gs_optype_m = SASH_FIXED then
		addy gs_rebate_width
		A = A - 2*gs_rebate_width
		B = B - 2*gs_rebate_width
		y_til_h = sqr((out_radius - gs_rebate_width)^2 - (A/2)^2)
		h = B - (out_radius - gs_rebate_width) + y_til_h
	else
		if	gs_optype_m = SASH_HOR_PIVOT |\
			gs_optype_m = SASH_VER_PIVOT |\
			gs_optype_m = SASH_VER_PIVOT_M then
			addz -gs_sash_thk
		else
			addz -gs_frame_thk
		endif
	endif
else
	if lod3D <> 1 & lod3D <> 5 then
		addz -gs_rebate_depth
	else
		if lod3D = 5 then
			y_til_h = sqr( max( (out_radius - gs_rebate_width)^2 - (A/2)^2, 0) )
		else
			y_til_h = sqr( max( (out_radius - gs_rebate_width - (gs_sash_width-gs_rebate_width)*(iMullionStyle <> MULLION_SOLID_PANEL))^2 - \
						(A/2 - (gs_sash_width)*(iMullionStyle <> MULLION_SOLID_PANEL))^2, 0) )
		endif
		h = B - out_radius + gs_rebate_width * (iMullionStyle = MULLION_SOLID_PANEL) + y_til_h
	endif
endif

bShowFrame = 1
if lod3D = 1 | lod3D = 5 then

	bShowFrame = 0

	vgn = 1
	hgn = 1
	vgn2 = 1
	hgn2 = 1

	if iMullionStyle = MULLION_CUSTOM then
		iMullionStyle = MULLION_NONE
	endif

	gs_full_edit = 0
endif


if iMullionStyle = MULLION_SOLID_PANEL & gs_optype_m <> SASH_FIXED & (lod3D = 1 | lod3D = 5) then
	addy gs_rebate_width
endif

gs_sash_width = gs_sash_width * (gs_optype_m <> SASH_FIXED)

resol res

if GLOB_CONTEXT = 6 then	! Window Schedule - 3D view should NOT display sash in open position
	openingAngle = 0
	openingAngle2 = 0
endif

if not(bOpeningDirectionInside) then
	eloj_ref = -1
else
	eloj_ref = 1
endif



! =============================================================================
! Open the Window
! =============================================================================

if gs_full_edit then

! -----------------------------------------------------------------------------
	if gs_optype_m = SASH_SIDE_HUNG_M then
		addx -A/2
		addy  B/2
		rotx -90

		if bEnableSEOpening then
			addy -gs_rebate_depth
			if CasementID = 1 then
				hotspot a,											-gs_rebate_depth,								0, unID, openingAngle_01, 4+128 : unID=unID+1
				hotspot 0,											0,											-1*eloj_ref, 			 unID, openingAngle_01, 7 : unID=unID+1
				hotspot a*sin(90+openingAngle_01)+gs_rebate_depth*cos(90+openingAngle_01),a*cos(90+openingAngle_01)-gs_rebate_depth*sin(90+openingAngle_01),0, unID, openingAngle_01, 5 : unID=unID+1
				hotspot 0, 											0, 											0, unID, openingAngle_01, 6 : unID=unID+1
			endif
			if CasementID = 2 then
				hotspot a,											-gs_rebate_depth,								0, unID, openingAngle_02, 4+128 : unID=unID+1
				hotspot 0,											0,											-1*eloj_ref, 			 unID, openingAngle_02, 7 : unID=unID+1
				hotspot a*sin(90+openingAngle_02)+gs_rebate_depth*cos(90+openingAngle_02),a*cos(90+openingAngle_02)-gs_rebate_depth*sin(90+openingAngle_02),0, unID, openingAngle_02, 5 : unID=unID+1
				hotspot 0, 											0, 											0, unID, openingAngle_02, 6 : unID=unID+1
			endif
			del 1
		endif

		del 2

		if openingAngle>90 then openingAngle=0

		if openingAngle<>0 then
			addz gs_rebate_depth		!!gs_sash_thk/2
			roty -openingAngle
			addz -gs_rebate_depth		!!-gs_sash_thk/2

!!!			addz gs_sash_thk*0.75
!!!			addx -gs_sash_width/4
!!!			roty -openingAngle_01
!!!			addx gs_sash_width/4
!!!			addz -(gs_sash_thk*0.75)
		endif

		addx a/2
	endif

! -----------------------------------------------------------------------------
	if gs_optype_m = SASH_TOP_HUNG then
		addy B
		rotz -90
		rotx -90

!!!		hotspot gs_sash_thk*sin(135)+b*sin(90), gs_sash_thk*cos(135)+b*cos(90), 0, unID, openingAngle_01, 4+128 : unID=unID+1
!!!		hotspot gs_sash_thk*sin(90)+b*sin(0), gs_sash_thk*cos(90)+b*cos(0), 0, unID, openingAngle_01, 7 : unID=unID+1
!!!		hotspot gs_sash_thk*sin(180+openingAngle_01)+b*sin(90+openingAngle_01), gs_sash_thk*cos(180+openingAngle_01)+b*cos(90+openingAngle_01), 0, unID, openingAngle_01, 5 : unID=unID+1
!!!		hotspot 0, -gs_sash_thk, 0, unID, openingAngle_01, 6 : unID=unID+1

		if bEnableSEOpening then
			addy -gs_rebate_depth
			if CasementID = 1 then
				hotspot b,											-gs_rebate_depth,								0, unID, openingAngle_01, 4+128 : unID=unID+1
				hotspot 0,											0,											-1*eloj_ref, unID, openingAngle_01, 7 : unID=unID+1
				hotspot b*sin(90+openingAngle_01)+gs_rebate_depth*cos(90+openingAngle_01),b*cos(90+openingAngle_01)-gs_rebate_depth*sin(90+openingAngle_01),0, unID, openingAngle_01, 5 : unID=unID+1
				hotspot 0, 											0, 											0, unID, openingAngle_01, 6 : unID=unID+1
			endif
			if CasementID = 2 then
				hotspot b,											-gs_rebate_depth,								0, unID, openingAngle_02, 4+128 : unID=unID+1
				hotspot 0,											0,											-1*eloj_ref, unID, openingAngle_02, 7 : unID=unID+1
				hotspot b*sin(90+openingAngle_02)+gs_rebate_depth*cos(90+openingAngle_02),b*cos(90+openingAngle_02)-gs_rebate_depth*sin(90+openingAngle_02),0, unID, openingAngle_02, 5 : unID=unID+1
				hotspot 0, 											0, 											0, unID, openingAngle_02, 6 : unID=unID+1
			endif
			del 1
		endif

		del 2

		if openingAngle>90 then openingAngle=0

		if openingAngle<>0 then
			addz gs_rebate_depth
			rotx -openingAngle
			addz -gs_rebate_depth


!!			addz gs_sash_thk*0.75
!!			addx -gs_sash_width/4
!!			rotx -openingAngle_01
!!			addx gs_sash_width/4
!!			addz -(gs_sash_thk*0.75)
		endif

		addy -B
	endif

! -----------------------------------------------------------------------------
	if gs_optype_m = SASH_SIDE_HUNG then
		mulx -1
		addx -A/2
		addy  B/2
		rotx -90

!!!		hotspot gs_sash_thk*sin(135)+a*sin(90), gs_sash_thk*cos(135)+a*cos(90), (gs_sash_thk), unID, openingAngle_01, 4+128 : unID=unID+1
!!!		hotspot gs_sash_thk*sin(90)+a*sin(0), gs_sash_thk*cos(90)+a*cos(0), gs_sash_thk, unID, openingAngle_01, 7 : unID=unID+1
!!!		hotspot gs_sash_thk*sin(180+openingAngle_01)+a*sin(90+openingAngle_01), gs_sash_thk*cos(180+openingAngle_01)+a*cos(90+openingAngle_01), (gs_sash_thk), unID, openingAngle_01, 5 : unID=unID+1
!!!		hotspot 0, -gs_sash_thk, (gs_sash_thk), unID, openingAngle_01, 6 : unID=unID+1

		if bEnableSEOpening then
			addy -gs_rebate_depth
			if CasementID = 1 then
				hotspot a,											-gs_rebate_depth,								0, unID, openingAngle_01, 4+128 : unID=unID+1
				hotspot 0,											0,											1*eloj_ref, 			 unID, openingAngle_01, 7 : unID=unID+1
				hotspot a*sin(90+openingAngle_01)+gs_rebate_depth*cos(90+openingAngle_01),a*cos(90+openingAngle_01)-gs_rebate_depth*sin(90+openingAngle_01),0, unID, openingAngle_01, 5 : unID=unID+1
				hotspot 0, 											0, 											0, unID, openingAngle_01, 6 : unID=unID+1
			endif
			if CasementID = 2 then
				hotspot a,											-gs_rebate_depth,								0, unID, openingAngle_02, 4+128 : unID=unID+1
				hotspot 0,											0,											1*eloj_ref, 			 unID, openingAngle_02, 7 : unID=unID+1
				hotspot a*sin(90+openingAngle_02)+gs_rebate_depth*cos(90+openingAngle_02),a*cos(90+openingAngle_02)-gs_rebate_depth*sin(90+openingAngle_02),0, unID, openingAngle_02, 5 : unID=unID+1
				hotspot 0, 											0, 											0, unID, openingAngle_02, 6 : unID=unID+1
			endif
			del 1
		endif

		del 2

		if openingAngle>90 then openingAngle=0

		if openingAngle<>0 then
			addz gs_rebate_depth
			roty -openingAngle
			addz -gs_rebate_depth

!!!			addz gs_sash_thk*0.75
!!!			addx -gs_sash_width/4
!!!			roty -openingAngle_01
!!!			addx gs_sash_width/4
!!!			addz -(gs_sash_thk*0.75)
		endif

		addx a/2
		mulx -1
	endif

! -----------------------------------------------------------------------------
	if gs_optype_m = SASH_BOTTOM_HUNG then
		muly	-1
		rotz 	-90
		rotx	-90

!!!		hotspot gs_sash_thk*sin(135)+b*sin(90), gs_sash_thk*cos(135)+b*cos(90), 0, unID, openingAngle_01, 4+128 : unID=unID+1
!!!		hotspot gs_sash_thk*sin(90)+b*sin(0), gs_sash_thk*cos(90)+b*cos(0), 0, unID, openingAngle_01, 7 : unID=unID+1
!!!		hotspot gs_sash_thk*sin(180+openingAngle_01)+b*sin(90+openingAngle_01), gs_sash_thk*cos(180+openingAngle_01)+b*cos(90+openingAngle_01), 0, unID, openingAngle_01, 5 : unID=unID+1
!!!		hotspot 0, -gs_sash_thk, 0, unID, openingAngle_01, 6 : unID=unID+1

		if bEnableSEOpening then
			addy -gs_rebate_depth
			if CasementID = 1 then
				hotspot b,											-gs_rebate_depth,								0, unID, openingAngle_01, 4+128 : unID=unID+1
				hotspot 0,											0,											1*eloj_ref, 			 unID, openingAngle_01, 7 : unID=unID+1
				hotspot b*sin(90+openingAngle_01)+gs_rebate_depth*cos(90+openingAngle_01),b*cos(90+openingAngle_01)-gs_rebate_depth*sin(90+openingAngle_01),0, unID, openingAngle_01, 5 : unID=unID+1
				hotspot 0, 											0, 											0, unID, openingAngle_01, 6 : unID=unID+1
			endif
			if CasementID = 2 then
				hotspot b,											-gs_rebate_depth,								0, unID, openingAngle_02, 4+128 : unID=unID+1
				hotspot 0,											0,											1*eloj_ref, 			 unID, openingAngle_02, 7 : unID=unID+1
				hotspot b*sin(90+openingAngle_02)+gs_rebate_depth*cos(90+openingAngle_02),b*cos(90+openingAngle_02)-gs_rebate_depth*sin(90+openingAngle_02),0, unID, openingAngle_02, 5 : unID=unID+1
				hotspot 0, 											0, 											0, unID, openingAngle_02, 6 : unID=unID+1
			endif
			del 1
		endif

		del 2

		if openingAngle>90 then openingAngle=0

		if openingAngle<>0 then
			addz gs_rebate_depth
			rotx -openingAngle
			addz -gs_rebate_depth


!!!			addz gs_sash_thk*0.75
!!!			addx -gs_sash_width/4
!!!			rotx -openingAngle_01
!!!			addx gs_sash_width/4
!!!			addz -(gs_sash_thk*0.75)
		endif

		muly	-1
	endif

! -----------------------------------------------------------------------------
	if gs_optype_m = SASH_VER_PIVOT then
		addy B/2
		rotx -90
		addy gs_sash_thk/2

		if bEnableSEOpening then
			if CasementID = 1 then
				hotspot gs_sash_thk*sin(135)+a/2*sin(90), gs_sash_thk*cos(135)+a/2*cos(90), (0), unID, openingAngle_01, 4+128 : unID=unID+1
				hotspot gs_sash_thk*sin(90)+a/2*sin(0), gs_sash_thk*cos(90)+a/2*cos(0), 0, unID, openingAngle_01, 7 : unID=unID+1
				hotspot gs_sash_thk*sin(180+openingAngle_01)+a/2*sin(90+openingAngle_01), gs_sash_thk*cos(180+openingAngle_01)+a/2*cos(90+openingAngle_01), (0), unID, openingAngle_01, 5 : unID=unID+1
				hotspot 0, -gs_sash_thk, (0), unID, openingAngle_01, 6 : unID=unID+1
			endif
			if CasementID = 2 then
				hotspot gs_sash_thk*sin(135)+a/2*sin(90), gs_sash_thk*cos(135)+a/2*cos(90), (0), unID, openingAngle_02, 4+128 : unID=unID+1
				hotspot gs_sash_thk*sin(90)+a/2*sin(0), gs_sash_thk*cos(90)+a/2*cos(0), 0, unID, openingAngle_02, 7 : unID=unID+1
				hotspot gs_sash_thk*sin(180+openingAngle_02)+a/2*sin(90+openingAngle_02), gs_sash_thk*cos(180+openingAngle_02)+a/2*cos(90+openingAngle_02), (0), unID, openingAngle_02, 5 : unID=unID+1
				hotspot 0, -gs_sash_thk, (0), unID, openingAngle_02, 6 : unID=unID+1
			endif
		endif

		del 2

!		if openingAngle>180 then openingAngle=0

		if openingAngle<>0 then
			addz gs_sash_thk/2
			roty -openingAngle
			addz -(gs_sash_thk/2)
		endif

		addy -B/2
	endif

! -----------------------------------------------------------------------------
	if gs_optype_m = SASH_TILT_TURN_M then

		addx -A/2
		addy  B/2
		rotx -90

		if bEnableSEOpening then
			addy	-gs_rebate_depth
			if CasementID = 1 then
				hotspot a,											-gs_rebate_depth,								0, unID, openingAngle_01, 4+128 : unID=unID+1
				hotspot 0,											0,											-1*eloj_ref, 			 unID, openingAngle_01, 7 : unID=unID+1
				hotspot a*sin(90+openingAngle_01)+gs_rebate_depth*cos(90+openingAngle_01),a*cos(90+openingAngle_01)-gs_rebate_depth*sin(90+openingAngle_01),0, unID, openingAngle_01, 5 : unID=unID+1
				hotspot 0, 											0, 											0, unID, openingAngle_01, 6 : unID=unID+1
			endif
			if CasementID = 2 then
				hotspot a,											-gs_rebate_depth,								0, unID, openingAngle_02, 4+128 : unID=unID+1
				hotspot 0,											0,											-1*eloj_ref, 			 unID, openingAngle_02, 7 : unID=unID+1
				hotspot a*sin(90+openingAngle_02)+gs_rebate_depth*cos(90+openingAngle_02),a*cos(90+openingAngle_02)-gs_rebate_depth*sin(90+openingAngle_02),0, unID, openingAngle_02, 5 : unID=unID+1
				hotspot 0, 											0, 											0, unID, openingAngle_02, 6 : unID=unID+1
			endif
			del 1
		endif

		del 3

		muly -1
		rotz -90
		rotx -90

		if bEnableSEOpening then
			addy	-gs_rebate_depth
			if CasementID = 1 then
				hotspot b,											-gs_rebate_depth,								0, unID, openingAngle2_01, 4+128 : unID=unID+1
				hotspot 0,											0,											1*eloj_ref, 			 unID, openingAngle2_01, 7 : unID=unID+1
				hotspot b*sin(90+openingAngle2_01)+gs_rebate_depth*cos(90+openingAngle2_01),b*cos(90+openingAngle2_01)-gs_rebate_depth*sin(90+openingAngle2_01),0, unID, openingAngle2_01, 5 : unID=unID+1
				hotspot 0, 											0, 											0, unID, openingAngle2_01, 6 : unID=unID+1
			endif
			if CasementID = 2 then
				hotspot b,											-gs_rebate_depth,								0, unID, openingAngle2_02, 4+128 : unID=unID+1
				hotspot 0,											0,											1*eloj_ref, 			 unID, openingAngle2_02, 7 : unID=unID+1
				hotspot b*sin(90+openingAngle2_02)+gs_rebate_depth*cos(90+openingAngle2_02),b*cos(90+openingAngle2_02)-gs_rebate_depth*sin(90+openingAngle2_02),0, unID, openingAngle2_02, 5 : unID=unID+1
				hotspot 0, 											0, 											0, unID, openingAngle2_02, 6 : unID=unID+1
			endif
			del 1
		endif

		del 3

		if abs(openingAngle2) > EPS then
			muly -1

			if openingAngle2>90 then openingAngle2=0
			if openingAngle2<>0 then
				addz gs_rebate_depth
				rotx -openingAngle2
				addz -gs_rebate_depth
			endif
			muly -1
		endif


		if openingAngle <> 0 then
			addx -A/2

			if openingAngle>90 then openingAngle=0
			if openingAngle<>0 then
				addz gs_rebate_depth
				roty -openingAngle
				addz -gs_rebate_depth
			endif
			addx A/2
		endif
	endif

! -----------------------------------------------------------------------------
	if gs_optype_m = SASH_TILT_TURN then

		mulx -1
		addx -A/2
		addy  B/2
		rotx -90

		if bEnableSEOpening then
			addy	-gs_rebate_depth
			if CasementID = 1 then
				hotspot a,											-gs_rebate_depth,								0, unID, openingAngle_01, 4+128 : unID=unID+1
				hotspot 0,											0,											1*eloj_ref, 			 unID, openingAngle_01, 7 : unID=unID+1
				hotspot a*sin(90+openingAngle_01)+gs_rebate_depth*cos(90+openingAngle_01),a*cos(90+openingAngle_01)-gs_rebate_depth*sin(90+openingAngle_01),0, unID, openingAngle_01, 5 : unID=unID+1
				hotspot 0, 											0, 											0, unID, openingAngle_01, 6 : unID=unID+1
			endif
			if CasementID = 2 then
				hotspot a,											-gs_rebate_depth,								0, unID, openingAngle_02, 4+128 : unID=unID+1
				hotspot 0,											0,											1*eloj_ref, 			 unID, openingAngle_02, 7 : unID=unID+1
				hotspot a*sin(90+openingAngle_02)+gs_rebate_depth*cos(90+openingAngle_02),a*cos(90+openingAngle_02)-gs_rebate_depth*sin(90+openingAngle_02),0, unID, openingAngle_02, 5 : unID=unID+1
				hotspot 0, 											0, 											0, unID, openingAngle_02, 6 : unID=unID+1
			endif
			del 1
		endif

		del 4

		muly -1
		rotz -90
		rotx -90

		if bEnableSEOpening then
			addy	-gs_rebate_depth
			if CasementID = 1 then
				hotspot b,											-gs_rebate_depth,								0, unID, openingAngle2_01, 4+128 : unID=unID+1
				hotspot 0,											0,											1*eloj_ref, 			 unID, openingAngle2_01, 7 : unID=unID+1
				hotspot b*sin(90+openingAngle2_01)+gs_rebate_depth*cos(90+openingAngle2_01),b*cos(90+openingAngle2_01)-gs_rebate_depth*sin(90+openingAngle2_01),0, unID, openingAngle2_01, 5 : unID=unID+1
				hotspot 0, 											0, 											0, unID, openingAngle2_01, 6 : unID=unID+1
			endif
			if CasementID = 2 then
				hotspot b,											-gs_rebate_depth,								0, unID, openingAngle2_02, 4+128 : unID=unID+1
				hotspot 0,											0,											1*eloj_ref, 			 unID, openingAngle2_02, 7 : unID=unID+1
				hotspot b*sin(90+openingAngle2_02)+gs_rebate_depth*cos(90+openingAngle2_02),b*cos(90+openingAngle2_02)-gs_rebate_depth*sin(90+openingAngle2_02),0, unID, openingAngle2_02, 5 : unID=unID+1
				hotspot 0, 											0, 											0, unID, openingAngle2_02, 6 : unID=unID+1
			endif
			del 1
		endif

		del 3

		if openingAngle2 <> 0 then
			muly -1

			if openingAngle2>90 then openingAngle2=0
			if openingAngle2<>0 then
				addz gs_rebate_depth
				rotx -openingAngle2
				addz -gs_rebate_depth
			endif
			muly -1
		endif


		if openingAngle <> 0 then
			mulx -1
			addx -A/2

			if openingAngle>90 then openingAngle=0
			if openingAngle<>0 then
				addz gs_rebate_depth
				roty -openingAngle
				addz -gs_rebate_depth
			endif
			addx A/2
		endif
	endif

endif


! =============================================================================
! Frame Model
! =============================================================================

if iMullionStyle = MULLION_SOLID_PANEL then
	gs_frame_mat	= gs_panel_mat
	gs_frame_mat2	= gs_panel_mat2
endif

var_mater		= gs_frame_mat	! Sash front material
var_mater2		= gs_frame_mat2	! Sash back material
var_mater_side	= gs_frame_mat	! Sash side material

if gs_frame_mat = gs_frame_mat2 then
	in_out_cikl = 1

	out_thk = 0
	part_thk = gs_sash_thk

	in_out_mask = 15
	in_out_mask2 = 13 + 2 * (gs_SashText_typ_num = 1)
	in_out_mask3 = 13 + 2 * (gs_SashText_typ_num = 1)
else												! two bodies
	in_out_cikl = 2

	if not(bOpeningDirectionInside) then
		tempMat = var_mater
		var_mater = var_mater2
		var_mater2 = tempMat

		var_mater_side	= gs_frame_mat2
	else
		var_mater_side	= gs_frame_mat
	endif

	if	gs_optype_m = SASH_SLIDING_HOR |\
		gs_optype_m = SASH_SLIDING_HOR_M |\
		gs_optype_m = SASH_DOUBLE_SLIDING_HOR |\
		gs_optype_m = SASH_DOUBLE_SLIDING_HOR_M |\
		gs_optype_m = SASH_SLIDING_VER |\
		gs_optype_m = SASH_DOUBLE_SLIDING_VER then

		if bSecondSash exor not(bOpeningDirectionInside) then
			var_mater_side	= gs_frame_mat2
		else
			var_mater_side	= gs_frame_mat
		endif
	endif

	if	gs_optype_m = SASH_SLIDING_HOR_M |\
		gs_optype_m = SASH_DOUBLE_SLIDING_HOR_M then

		if bSecondSash exor not(bOpeningDirectionInside) then
			var_mater_side	= gs_frame_mat
		else
			var_mater_side	= gs_frame_mat2
		endif
	endif

	if iMullionStyle = MULLION_SOLID_PANEL then
		if lod3D = 5 then
			out_thk = gs_frame_thk
		else
			out_thk = gs_sash_thk
		endif
		in_out_cikl = 1
	else
		out_thk = gs_sash_thk/2 - gs_glass_thk/2
	endif
	part_thk = out_thk

	in_out_mask = 11
	in_out_mask2 = 9
	in_out_mask3 = 9 + 2 * (gs_SashText_typ_num = 1) + 64
endif


if iMullionStyle <> MULLION_CUSTOM then

	pen gs_sash_pen
	material var_mater
	sect_fill gs_fillSash, gs_penSash_bg, gs_penSash_fg, gs_sash_pen_cont

	if lod3D <> 1 & lod3D <> 5 & gs_optype_m <> SASH_FIXED then		! Not Fixed

		if iMullionStyle = MULLION_SOLID_PANEL then
			sprism_{2} var_mater2,var_mater,var_mater,
				6,
				0,0, 0,1, 0, 0,
				0,0, 0,1, part_thk, 0,
				 0,					B - out_radius,		900,	var_mater2,
				 A/2, 				0, 					15,		var_mater2,
				 A/2, 				h, 					15,		var_mater2,
				 0, 				B, 					3079,	var_mater2,
				-A/2,				h,					3015,	var_mater2,
				-A/2,				0,					15,		var_mater2
		else
			if bShowFrame then
				for ijk = 1 to in_out_cikl
					material var_mater2

					if abs(gs_sash_width) > EPS & abs(gs_sash_thk) > EPS then

						if gs_SashText_typ_num = 1 then
							base
							sprism_{2} var_mater2,var_mater2,var_mater2,
								11,
								0,0, 0,1, 0, 0,
								0,0, 0,1, part_thk, 0,
								-A/2+gs_sash_width,	gs_sash_width,		in_out_mask,		var_mater2,
								-A/2+gs_sash_width,	h - sashWidth_y,	in_out_mask3,		var_mater2,
								 0,					B - out_radius,		900,				var_mater2,
								 0,					B - gs_sash_width,	3064+in_out_mask3,	var_mater2,
								 A/2-gs_sash_width,	h - sashWidth_y,	3000+in_out_mask3,	var_mater2,
								 A/2-gs_sash_width,	gs_sash_width,		10,					var_mater2,
								 A/2, 				0, 					in_out_mask,		var_mater_side,
								 A/2, 				h, 					in_out_mask3,		var_mater_side,
								 0, 				b, 					3064+in_out_mask3,	var_mater_side,
								-A/2,				h,					3000+in_out_mask3,	var_mater_side,
								-A/2,				0,					10,					var_mater_side
							vert 0, 0, 0
							vert 0, 1, 0
							vert 1, 0, 0
							vert 0, 0, 1
							coor 5, -1, -2, -3, -4
							body 1

							sprism_{2} var_mater2,var_mater2,var_mater2,
								4,			!!!part_thk,
								0,0, 0,1, 0, 0,
								 0,0, 0,1, part_thk, 0,
								-A/2,				0,				10,			var_mater2,
								-A/2+gs_sash_width,	gs_sash_width,	in_out_mask,var_mater2,
								 A/2-gs_sash_width,	gs_sash_width,	10,			var_mater2,
								 A/2,				0,				bot_mask,	var_mater2
						endif

						if gs_SashText_typ_num = 2 then
							base
							sprism_{2} var_mater2,var_mater2,var_mater2,
								11,
								0,0, 0,1, 0, 0,
								0,0, 0,1, part_thk, 0,
								-A/2+gs_sash_width,	gs_sash_width,		in_out_mask,		var_mater2,
								-A/2+gs_sash_width,	h - sashWidth_y,	in_out_mask3,		var_mater2,
								 0,					B - out_radius,		900,				var_mater2,
								 0,					B - gs_sash_width,	3064+in_out_mask3,	var_mater2,
								 A/2-gs_sash_width,	h - sashWidth_y,	3000+in_out_mask3,	var_mater2,
								 A/2-gs_sash_width,	gs_sash_width,		10,					var_mater2,
								 A/2, 				gs_sash_width, 		in_out_mask2,		var_mater_side,
								 A/2, 				h, 					in_out_mask3,		var_mater_side,
								 0, 				B, 					3064+in_out_mask3,	var_mater_side,
								-A/2,				h,					3000+in_out_mask3,	var_mater_side,
								-A/2,				gs_sash_width,		8,					var_mater_side
							vert 0, 0, 0
							vert 0, 1, 0
							vert 1, 0, 0
							vert 0, 0, 1
							coor 5, -1, -2, -3, -4
							body 1
							base
							sprism_{2} var_mater2,var_mater2,var_mater2,
								6,			!!!part_thk,
								 0,0, 0,1, 0, 0,
								 0,0, 0,1, part_thk, 0,
								-A/2,				gs_sash_width,	8,				var_mater_side,
								-A/2+gs_sash_width,	gs_sash_width,	in_out_mask,	var_mater2,
								 A/2-gs_sash_width,	gs_sash_width,	10,				var_mater2,
								 A/2,				gs_sash_width,	in_out_mask2,	var_mater2,
								 A/2,				0,				bot_mask,		var_mater_side,
								-A/2,				0,				in_out_mask,	var_mater_side
						endif

						body -1
					endif

					addz part_thk
					part_thk = gs_sash_thk - out_thk

					tempMat = var_mater
					var_mater = var_mater2
					var_mater2 = tempMat

					in_out_mask = 14
					in_out_mask2 = 12
					in_out_mask3 = 78
				next ijk

				del in_out_cikl
			endif

		endif

	else

		! Fixed Glass or Simple model

		if iMullionStyle = MULLION_SOLID_PANEL then
			pen gs_sash_pen
			material var_mater
			sect_fill gs_fillSash, gs_penSash_bg, gs_penSash_fg, gs_sash_pen_cont

			if lod3D = 5 then	! Chinese
				panelThk = gs_frame_thk
			else
				panelThk = gs_sash_thk
			endif

			addz -panelThk
			sprism_{2} var_mater2,var_mater,var_mater,
				6,
				 0,0, 0,1, 0, 0,
				 0,0, 0,1, panelThk, 0,
				-A/2,	0,									15,		var_mater_side,
				-A/2,	h,									15,		var_mater_side,
				 0,		B - out_radius + gs_rebate_width,	900,	var_mater_side,
				 0,		B,									3079,	var_mater_side,
				 A/2,	h,									3079,	var_mater_side,
				 A/2,	0,									15,		var_mater_side
			del 1
		else
			pen gs_glass_pen
			sect_fill gs_fillSash, gs_penSash_bg, gs_penSash_fg, gs_glass_pen_cont
			material gs_glass_mat

			if lod3D = 5 then	! Chinese
				addz -gs_frame_thk
				gl_chi_thk = gs_frame_thk
				gl_chi_mask = 13
			else
				if lod3D = 1 then	! Simple
					addz -gs_frame_thk/2 - gs_glass_thk/2
				else
					addz -gs_rebate_depth - gs_glass_thk/2
				endif
				gl_chi_thk = gs_glass_thk
				gl_chi_mask = 5
			endif

			prism_ 6,gl_chi_thk,
				-A/2+gs_sash_width,	gs_sash_width,						gl_chi_mask,
				-A/2+gs_sash_width,	h,									gl_chi_mask,
				 0,					B - out_radius + gs_rebate_width * (gs_optype_m = SASH_FIXED),	900,
				 0,					B,									3000+gl_chi_mask,
				 A/2-gs_sash_width,	h,									3000+gl_chi_mask,
				 A/2-gs_sash_width,	gs_sash_width,						gl_chi_mask

			body -1

			del 1
		endif
	endif

endif


! =============================================================================
! Glazing
! =============================================================================

if lod3D <> 1 & lod3D <> 5 & gs_optype_m <> SASH_FIXED then

	pen gs_glass_pen
	sect_fill gs_fillSash, gs_penSash_bg, gs_penSash_fg, gs_glass_pen_cont
	material gs_glass_mat

	if iMullionStyle <> MULLION_CUSTOM & iMullionStyle <> MULLION_SOLID_PANEL then		! Don't draw in case of Custom Panel

		if lod3D = 5 then	! chinese
			addz -gs_frame_thk
			gl_chi_thk = gs_frame_thk
			gl_chi_mask = 13
		else
			if lod3D = 1 then	! Simple
				addz -gs_frame_thk/2 - gs_glass_thk/2
			else
				addz gs_sash_thk/2 - gs_glass_thk/2
			endif
			gl_chi_thk = gs_glass_thk
			gl_chi_mask = 5
		endif

		prism_ 6,gl_chi_thk,
			-A/2+gs_sash_width,	gs_sash_width,		gl_chi_mask,
			-A/2+gs_sash_width,	h - sashWidth_y,	gl_chi_mask,
			0,					B - out_radius,		900,
			0,					B - gs_sash_width,	3000+gl_chi_mask,
			A/2-gs_sash_width,	h - sashWidth_y,	3000+gl_chi_mask,
			A/2-gs_sash_width,	gs_sash_width,		gl_chi_mask

		body -1
		del 1

	endif

endif


! ==============================================================================
! Opening Line
! ==============================================================================

if bOplines3d & (gs_optype_m <> SASH_FIXED) then

	oplineGap = 0

	oplineWidth = A - 2 * gs_sash_width * ((lod3D = 1 | lod3D = 5) & (iMullionStyle <> MULLION_SOLID_PANEL))

	iOpeningType	= gs_optype_m
	if gs_optype_m = SASH_TILT_TURN then iOpeningType = SASH_SIDE_HUNG
	if gs_optype_m = SASH_TILT_TURN_M then iOpeningType = SASH_SIDE_HUNG_M

	if lod3D = 5 then	! Chinese
		opLineDist = gs_frame_thk + 2 * oplineGap
	else
		if	(iMullionStyle = MULLION_DIVIDED		|\
			 iMullionStyle = MULLION_CUSTOM			|\
			 iMullionStyle = MULLION_SOLID_PANEL	|\
			 lod3D <> 1) then

			opLineDist = gs_sash_thk + 2 * oplineGap
		else
			opLineDist = gs_glass_thk + 2 * oplineGap
		endif
	endif
	if gs_optype_m = SASH_SIDE_HUNG | gs_optype_m = SASH_SIDE_HUNG_M | gs_optype_m = SASH_TOP_HUNG | gs_optype_m = SASH_TILT_TURN | gs_optype_m = SASH_TILT_TURN_M then
		oplineHeight = h - gs_sash_width * ((lod3D = 1 | lod3D = 5) & (iMullionStyle <> MULLION_SOLID_PANEL))
	else
		oplineHeight = B - 2 * gs_sash_width * ((lod3D = 1 | lod3D = 5) & (iMullionStyle <> MULLION_SOLID_PANEL))
	endif

	if gs_optype_m = SASH_BOTTOM_HUNG & gs_opline_style_m = 2 then

		xo = 0
		yo = B - out_radius
		ro = out_radius - gs_sash_width * ((lod3D = 1 | lod3D = 5) & (iMullionStyle <> MULLION_SOLID_PANEL))

		alpha = min(45, atn(2 * oplineHeight / (oplineWidth  / 2)))

		x1 = 0
		y1 = gs_sash_width * ((lod3D = 1 | lod3D = 5) & (iMullionStyle <> MULLION_SOLID_PANEL))
		x2 = cos(alpha)
		y2 = gs_sash_width + sin(alpha)

		gosub 101	! Circle - Line intersection

		if state = 0 then
			oplineHeight = h - gs_sash_width * ((lod3D = 1 | lod3D = 5) & (iMullionStyle <> MULLION_SOLID_PANEL))
		else
			if ya > EPS & ya > yb then
				oplineHeight	= ya - gs_sash_width * ((lod3D = 1 | lod3D = 5) & (iMullionStyle <> MULLION_SOLID_PANEL))
				oplineWidth		= 2 * xa
			else
				oplineHeight	= yb - gs_sash_width * ((lod3D = 1 | lod3D = 5) & (iMullionStyle <> MULLION_SOLID_PANEL))
				oplineWidth		= 2 * xb
			endif
		endif
	endif

	if (lod3D = 1 | lod3D = 5) & iMullionStyle <> MULLION_SOLID_PANEL then	! Simple, Chinese
		addz -gs_frame_thk/2
	else
		if (lod3D = 1 | lod3D = 5) & (iMullionStyle = MULLION_SOLID_PANEL) then
			if lod3D = 1 then
				addz -gs_sash_thk/2
			else
				addz -gs_frame_thk/2
			endif
		else
			addz gs_sash_thk/2
		endif
	endif

	add -oplineWidth/2, gs_sash_width * ((lod3D = 1 | lod3D = 5) & (iMullionStyle <> MULLION_SOLID_PANEL)), -opLineDist/2
	call "OpeningLines_kmod" parameters A = oplineWidth,
		B					= oplineHeight,
		frameThickness		= opLineDist,
		iOpeningType		= iOpeningType,
		opLineType3dIn		= opLineType3dIn,
		opLineType3dOut		= opLineType3dOut,
		gs_opLinePen		= gs_opLinePen,
		gs_opline_style_m	= gs_opline_style_m

	if gs_optype_m = SASH_TILT_TURN | gs_optype_m = SASH_TILT_TURN_M then
		call "OpeningLines_kmod" parameters A = oplineWidth,
			B					= B - 2 * gs_sash_width * ((lod3D = 1 | lod3D = 5) & (iMullionStyle <> MULLION_SOLID_PANEL)),
			frameThickness		= opLineDist,
			iOpeningType		= SASH_BOTTOM_HUNG,
			opLineType3dIn		= opLineType3dIn,
			opLineType3dOut		= opLineType3dOut,
			gs_opLinePen		= gs_opLinePen,
			gs_opline_style_m	= gs_opline_style_m
	endif

	del 2
endif

if iMullionStyle = MULLION_NONE then end


! =============================================================================
! Grids
! =============================================================================

matGrillSide	= gs_grill_mat
matGrillTop		= gs_grill_mat2
matGrillBottom	= gs_grill_mat2

if (gs_grill_mat = gs_grill_mat2) |\
	iMullionPosition <> MULLION_THROUGHOUT |\
	(iMullionPosition = MULLION_THROUGHOUT & gs_glass_thk >= gth) then

	in_out_cikl_gr	= 1

	part_thk_grill	= gth

	if iMullionPosition = MULLION_INSIDE then
		matGrillSide	= gs_grill_mat2
	else
		matGrillSide	= gs_grill_mat
	endif
	if not(bOpeningDirectionInside) then
		matGrillTop		= gs_grill_mat
		matGrillBottom	= gs_grill_mat2
	else
		matGrillTop		= gs_grill_mat2
		matGrillBottom	= gs_grill_mat
	endif
else
	in_out_cikl_gr	= 2

	out_thk_grill	= gth/2 - gs_glass_thk/2
	part_thk_grill	= out_thk_grill

	if not(bOpeningDirectionInside) then
		matGrillTop		= gs_grill_mat
		matGrillBottom	= gs_grill_mat2
	else
		matGrillTop		= gs_grill_mat2
		matGrillBottom	= gs_grill_mat
	endif
	if iMullionPosition = MULLION_INSIDE exor not(bOpeningDirectionInside) then
		matGrillSide	= gs_grill_mat2
	else
		matGrillSide	= gs_grill_mat
	endif
endif


if lod3D <> 1 & lod3D <> 5 then

	if iMullionPosition = MULLION_THROUGHOUT then
		gz = (gs_optype_m <> SASH_FIXED) * gs_sash_thk/2 - gth/2
	else
		if (iMullionPosition = MULLION_INSIDE) exor (not(bOpeningDirectionInside)) then
			gz = (gs_optype_m <> SASH_FIXED) * gs_sash_thk/2 + gs_glass_thk/2
		else
			gz = (gs_optype_m <> SASH_FIXED) * gs_sash_thk/2 - gs_glass_thk/2 - gth
		endif
	endif
	gz = gz - (gs_optype_m = SASH_FIXED) * gs_rebate_depth

	if gs_optype_m = SASH_FIXED then
		fix_sh_grmod = gs_sash_width
	else
		fix_sh_grmod = 0
	endif

	! Glass pane width between grids
	hgnn=((a - 2*gs_sash_width + gw + 2*fix_sh_grmod)/(vgn+1))-gw


	pen gs_sash_pen
	material matGrillSide
	sect_fill gs_fillSash, gs_penSash_bg, gs_penSash_fg, gs_sash_pen_cont


	if gs_optype_m <> SASH_FIXED then		! Not Fixed
		cutpolya 10, 2, 0,
			-A/2+gs_sash_width,	gs_sash_width,		79,
			-A/2+gs_sash_width,	h - sashWidth_y,	79,
			0,					B - out_radius,		979,
			0,					b - gs_sash_width,	3079,
			A/2-gs_sash_width,	h - sashWidth_y,	3079,
			A/2-gs_sash_width,	gs_sash_width,		15,
			A/2 + 1,			gs_sash_width,		15,
			A/2 + 1,			B+1,				15,
			-A/2 - 1,			B+1,				15,
			-A/2 - 1,			gs_sash_width,		15
	else
		cutpolya 10, 2, 0,
			-A/2,	0,			15,
			-A/2,	h,			79,
			0,		B - out_radius + gs_rebate_width,		979,
			0,		B,			3079,
			A/2,	h,			3079,
			A/2,	0,			15,
			A/2 + 1,	0,		15,
			A/2 + 1,	B+1,	15,
			-A/2 - 1,	B+1,	15,
			-A/2 - 1,	0,		15

	endif


	for ijk= 1 to in_out_cikl_gr

		if ijk = 1 then
			currentGrillThickness = part_thk_grill
		else
			currentGrillThickness = gth - out_thk_grill
		endif

! -----------------------------------------------------------------------------
! H-V GRID
! -----------------------------------------------------------------------------

		if iMullionStyle = MULLION_HVGRID then

			! Vertical grids
			if vgn > 0 then
				for i=1 to vgn
					addx (a-2*gs_sash_width+gw+2*fix_sh_grmod)/(vgn+1)

					add  -a/2+gs_sash_width-gw/2-fix_sh_grmod, 0, gz
					if gw > EPS then
						sprism_ matGrillTop,matGrillBottom,matGrillSide,
							5,
							0,0, 0,1, currentGrillThickness,			0,
							-gw/2,	gs_sash_width-fix_sh_grmod,	15,
							 gw/2,	gs_sash_width-fix_sh_grmod,	15,
							 gw/2,	b-gs_sash_width,			15,
							-gw/2,	b-gs_sash_width,			15,
							-gw/2,	gs_sash_width-fix_sh_grmod,	-1
					else
						lin_ 0,gs_sash_width-fix_sh_grmod,0,
							 0,b-gs_sash_width,0
					endif
					del 1
				next i
				del vgn
			endif

			! Horizontal grids
			if hgn > 0 then
				for i=1 to vgn+1
					for j=1 to hgn
						addy (b-2*gs_sash_width+gw+2*fix_sh_grmod)/(hgn+1)
						add -(a-2*gs_sash_width+2*fix_sh_grmod)/2+hgnn/2, gs_sash_width-gw/2-fix_sh_grmod, gz
						if gw > EPS then
							sprism_ matGrillTop,matGrillBottom,matGrillSide,
								5,
								0,0, 0,1, currentGrillThickness, 0,
								-hgnn/2,-gw/2,15,
								 hgnn/2,-gw/2,15,
								 hgnn/2, gw/2,15,
								-hgnn/2, gw/2,15,
								-hgnn/2,-gw/2,-1
						else
							lin_ -hgnn/2,0,0, hgnn/2,0,0
						endif
						del 1
					next j
					del hgn
					addx (a-2*gs_sash_width+gw+2*fix_sh_grmod)/(vgn+1)
				next i
				del vgn+1
			endif
			body -1
		endif

! -----------------------------------------------------------------------------
! Sunburst Grids
! -----------------------------------------------------------------------------

		if	iMullionStyle = MULLION_SUNBURST_1 |\
			iMullionStyle = MULLION_SUNBURST_2 |\
			iMullionStyle = MULLION_SUNBURST_3 |\
			iMullionStyle = MULLION_SUNBURST_4 |\
			iMullionStyle = MULLION_SUNBURST_5 |\
			iMullionStyle = MULLION_SUNBURST_6 then

			if gw < EPS then gw = EPS

			add -a/2+gs_sash_width-fix_sh_grmod,h-gw,gz
			sprism_ matGrillTop,matGrillBottom,matGrillSide,
				4,
				0,0, 0,1, currentGrillThickness, 0,
				0,									0,		15,
				a-2*gs_sash_width+2*fix_sh_grmod,	0,		15,
				a-2*gs_sash_width+2*fix_sh_grmod,	gw,		15,
				0,									gw,		15
			del 1

			!Glass pane width calculation for grids
			pwh=((h-gs_sash_width-gw+fix_sh_grmod)-(hgn*gw))/(hgn+1)
			pwv=(a-2*gs_sash_width-vgn*gw+2*fix_sh_grmod)/(vgn+1)

			addz gz
			!Vertical grids
			add -a/2+gs_sash_width+pwv-fix_sh_grmod,gs_sash_width,0
			for i=1 to vgn step 1
				sprism_ matGrillTop,matGrillBottom,matGrillSide,
					4,
					0,0, 0,1, currentGrillThickness, 0,
					0,	-fix_sh_grmod,		15,
					gw,	-fix_sh_grmod,		15,
					gw,	h-gs_sash_width-gw,	15,
					0,	h-gs_sash_width-gw,	15
				addx gw+pwv
			next i
			del vgn+1

			!special cutplanes for horizontal grids
			add -a/2+gs_sash_width+pwv-fix_sh_grmod,gs_sash_width-fix_sh_grmod,0
			for i=1 to vgn step 1
				cutpolya 5,1,0,
					0,0,15,
					gw,0,15,
					gw,b-2*gs_sash_width,15,
					0,b-2*gs_sash_width,15,
					0,0,-1
				addx gw+pwv
			next i
			del vgn+1

			!Horizontal grids
			add -a/2+gs_sash_width-fix_sh_grmod,gs_sash_width+pwh-fix_sh_grmod,0
			for i=1 to hgn step 1
				sprism_ matGrillTop,matGrillBottom,matGrillSide,
					4,
					0,0, 0,1, currentGrillThickness, 0,
					0,														0,		15,
					a-2*gs_sash_width+2*fix_sh_grmod,		0,		15,
					a-2*gs_sash_width+2*fix_sh_grmod,		gw,		15,
					0,														gw,		15
				addy gw+pwh
			next i
			del hgn+1

			for i=1 to vgn step 1
				cutend
			next i
			del 1

			if iMullionStyle <> MULLION_SUNBURST_6 then
				!! RADIAL GRIDS !!

				! Cut Plane angle calculation for radial grids

				beta=360/res
				dev=(a/2-gs_sash_width)-(a/2-gs_sash_width)*cos(beta/2)

				!radial grids cut

				cutpolya 8, 2, 0,
					a/2-gs_sash_width+b, b+1,				79,
					a/2-gs_sash_width+b, h,					79,
					a/2-gs_sash_width+fix_sh_grmod, h,		79,
					0, h, 900,
					0, 90,									4079,
					0, 90,									4079,
					-a/2-left_jmb_mod+gs_sash_width-b, h,	79,
					-a/2-left_jmb_mod+gs_sash_width-b, b+b,	79

				if iMullionStyle = MULLION_SUNBURST_1 then
					addy h
					gsp=((a-2*gs_sash_width+2*fix_sh_grmod)-(2*gw))/3
					cutpolya 5,2,0,
						 gsp/2+gw,0,15,
						 0,1,800,
						-gsp/2-gw,0,1015,
						-gsp/2-gw,0,15,
						 gsp/2+gw,0,-1
					del 1
				endif


				addz gz

				!5 radial grids
				if iMullionStyle = MULLION_SUNBURST_4 then
					sprism_ matGrillTop,matGrillBottom,matGrillSide,
						5,
						0,0, 0,1, currentGrillThickness, 0,
						-gw/2,h,15,
						 gw/2,h,15,
						 gw/2,b+1,15,
						-gw/2,b+1,15,
						-gw/2,h,15
					sprism_ matGrillTop,matGrillBottom,matGrillSide,
						5,
						0,0, 0,1, currentGrillThickness, 0,
						gw/2,h,15,
						gw/2+gw/sin(60),h,15,
						gw/2+gw/sin(60)+b*cos(60),h+b*sin(60),15,
						gw/2+gw/sin(60)+b*cos(60)-gw*cos(60),h+b*sin(60)+gw*sin(60),15,
						gw/2,h,-1
					addx gw/sin(60)
					sprism_ matGrillTop,matGrillBottom,matGrillSide,
						5,
						0,0, 0,1, currentGrillThickness, 0,
						gw/2,h,15,
						gw/2+gw/sin(30),h,15,
						gw/2+gw/sin(30)+b*cos(30),h+b*sin(30),15,
						gw/2+gw/sin(30)+b*cos(30)-gw*cos(30),h+b*sin(30)+gw*sin(30),15,
						gw/2,h,-1
					del 1
					mulx -1
					sprism_ matGrillTop,matGrillBottom,matGrillSide,
						5,
						0,0, 0,1, currentGrillThickness, 0,
						gw/2,h,15,
						gw/2+gw/sin(60),h,15,
						gw/2+gw/sin(60)+b*cos(60),h+b*sin(60),15,
						gw/2+gw/sin(60)+b*cos(60)-gw*cos(60),h+b*sin(60)+gw*sin(60),15,
						gw/2,h,-1
					addx gw/sin(60)
					sprism_ matGrillTop,matGrillBottom,matGrillSide,
						5,
						0,0, 0,1, currentGrillThickness, 0,
						gw/2,h,15,
						gw/2+gw/sin(30),h,15,
						gw/2+gw/sin(30)+b*cos(30),h+b*sin(30),15,
						gw/2+gw/sin(30)+b*cos(30)-gw*cos(30),h+b*sin(30)+gw*sin(30),15,
						gw/2,h,-1
					del 2
				endif

				!3 radial grids
				if iMullionStyle = MULLION_SUNBURST_1 or iMullionStyle = MULLION_SUNBURST_2 or iMullionStyle = MULLION_SUNBURST_3 or iMullionStyle = MULLION_SUNBURST_5 then
					sprism_ matGrillTop,matGrillBottom,matGrillSide,
						5,
						0,0, 0,1, currentGrillThickness, 0,
						-gw/2,h,15,
						 gw/2,h,15,
						 gw/2,b+1,15,
						-gw/2,b+1,15,
						-gw/2,h,15
					sprism_ matGrillTop,matGrillBottom,matGrillSide,
						5,
						0,0, 0,1, currentGrillThickness, 0,
						gw/2,h,15,
						gw/2+gw/sin(45),h,15,
						gw/2+gw/sin(45)+b*cos(45),h+b*sin(45),15,
						gw/2+gw/sin(45)+b*cos(45)-gw*cos(45),h+b*sin(45)+gw*sin(45),15,
						gw/2,h,-1
					mulx -1
					sprism_ matGrillTop,matGrillBottom,matGrillSide,
						5,
						0,0, 0,1, currentGrillThickness, 0,
						gw/2,h,15,
						gw/2+gw/sin(45),h,15,
						gw/2+gw/sin(45)+b*cos(45),h+b*sin(45),15,
						gw/2+gw/sin(45)+b*cos(45)-gw*cos(45),h+b*sin(45)+gw*sin(45),15,
						gw/2,h,-1
					del 1
				endif

				del 1

				if iMullionStyle = MULLION_SUNBURST_1 then
					cutend
				endif

				cutend


				!! CURVED GRIDS !!

				addz gz

				if iMullionStyle = MULLION_SUNBURST_1 then
					addy h
					gsp=((a-2*gs_sash_width+2*fix_sh_grmod)-(2*gw))/3
					sprism_ matGrillTop,matGrillBottom,matGrillSide,
						9,
						0,0, 0,1, currentGrillThickness, 0,
						gsp/2,0,15,
						gsp/2+gw,0,79,
						0,1,800,
						-gsp/2-gw,0,1079,
						-gsp/2-gw,0,15,
						-gsp/2,0,79,
						0,1,800,
						gsp/2,0,1079,
						gsp/2,0,-1
					del 1
				endif


				if iMullionStyle = MULLION_SUNBURST_2 then
					cutpolya 5,1,0,
						-gw/2,h,15,
						 gw/2,h,15,
						 gw/2,b,15,
						-gw/2,b,15,
						-gw/2,h,15
					cutpolya 5,1,0,
						gw/2,h,15,
						gw/2+gw/sin(45),h,15,
						gw/2+gw/sin(45)+b*cos(45),h+b*sin(45),15,
						gw/2+gw/sin(45)+b*cos(45)-gw*cos(45),h+b*sin(45)+gw*sin(45),15,
						gw/2,h,-1
					mulx -1
					cutpolya 5,1,0,
						gw/2,h,15,
						gw/2+gw/sin(45),h,15,
						gw/2+gw/sin(45)+b*cos(45),h+b*sin(45),15,
						gw/2+gw/sin(45)+b*cos(45)-gw*cos(45),h+b*sin(45)+gw*sin(45),15,
						gw/2,h,-1
					del 1

					gsp=((a - 2*gs_sash_width+2*fix_sh_grmod)-(3*gw))/4

					addy h
					sprism_ matGrillTop,matGrillBottom,matGrillSide,
						9,
						0,0, 0,1, currentGrillThickness, 0,
						gsp+gw/2,0,15,
						gsp+gw/2+gw,0,79,
						0,1,800,
						-gsp-gw/2-gw,0,1079,
						-gsp-gw/2-gw,0,15,
						-gsp-gw/2,0,79,
						0,1,800,
						gsp+gw/2,0,1079,
						gsp+gw,0,-1
					del 1

					cutend
					cutend
					cutend
				endif


				if iMullionStyle = MULLION_SUNBURST_3 then
					cutpolya 5,1,0,
						-gw/2,h,15,
						 gw/2,h,15,
						 gw/2,b,15,
						-gw/2,b,15,
						-gw/2,h,15
					cutpolya 5,1,0,
						gw/2,h,15,
						gw/2+gw/sin(45),h,15,
						gw/2+gw/sin(45)+b*cos(45),h+b*sin(45),15,
						gw/2+gw/sin(45)+b*cos(45)-gw*cos(45),h+b*sin(45)+gw*sin(45),15,
						gw/2,h,-1
					mulx -1
					cutpolya 5,1,0,
						gw/2,h,15,
						gw/2+gw/sin(45),h,15,
						gw/2+gw/sin(45)+b*cos(45),h+b*sin(45),15,
						gw/2+gw/sin(45)+b*cos(45)-gw*cos(45),h+b*sin(45)+gw*sin(45),15,
						gw/2,h,-1
					del 1

					gsp=((a - 2*gs_sash_width+2*fix_sh_grmod)-(4*gw))/5

					addy h

					sprism_ matGrillTop,matGrillBottom,matGrillSide,
						9,
						0,0, 0,1, currentGrillThickness, 0,
						gsp/2,0,15,
						gsp/2+gw,0,79,
						0,1,800,
						-gsp/2-gw,0,1079,
						-gsp/2-gw,0,15,
						-gsp/2,0,79,
						0,1,800,
						gsp/2,0,1079,
						gsp/2,0,-1

					sprism_ matGrillTop,matGrillBottom,matGrillSide,
						9,
						0,0, 0,1, currentGrillThickness, 0,
						gsp/2+gw+gsp,0,15,
						gsp/2+gw+gsp+gw,0,79,
						0,1,800,
						-gsp/2-gw-gsp-gw,0,1079,
						-gsp/2-gw-gsp-gw,0,15,
						-gsp/2-gw-gsp,0,79,
						0,1,800,
						gsp/2+gw+gsp,0,1079,
						-gsp/2-gw-gsp,0,-1
					del 1

					cutend
					cutend
					cutend
				endif


				if iMullionStyle = MULLION_SUNBURST_4 then
					cutpolya 5,1,0,
						-gw/2,h,15,
						 gw/2,h,15,
						 gw/2,b,15,
						-gw/2,b,15,
						-gw/2,h,15

					cutpolya 5,1,0,
						 gw/2,h,15,
						 gw/2+gw/sin(60),h,15,
						 gw/2+gw/sin(60)+b*cos(60),h+b*sin(60),15,
						 gw/2+gw/sin(60)+b*cos(60)-gw*cos(60),h+b*sin(60)+gw*sin(60),15,
						 gw/2,h,-1

					addx gw/sin(60)
					cutpolya 5,1,0,
						 gw/2,h,15,
						 gw/2+gw/sin(30),h,15,
						 gw/2+gw/sin(30)+b*cos(30),h+b*sin(30),15,
						 gw/2+gw/sin(30)+b*cos(30)-gw*cos(30),h+b*sin(30)+gw*sin(30),15,
						 gw/2,h,-1
					del 1

					mulx -1

					cutpolya 5,1,0,
						 gw/2,h,15,
						 gw/2+gw/sin(60),h,15,
						 gw/2+gw/sin(60)+b*cos(60),h+b*sin(60),15,
						 gw/2+gw/sin(60)+b*cos(60)-gw*cos(60),h+b*sin(60)+gw*sin(60),15,
						 gw/2,h,-1

					addx gw/sin(60)
					cutpolya 5,1,0,
						 gw/2,h,15,
						 gw/2+gw/sin(30),h,15,
						 gw/2+gw/sin(30)+b*cos(30),h+b*sin(30),15,
						 gw/2+gw/sin(30)+b*cos(30)-gw*cos(30),h+b*sin(30)+gw*sin(30),15,
						 gw/2,h,-1
					del 2

					gsp=((a - 2*gs_sash_width+2*fix_sh_grmod)-(5*gw))/6

					addy h

					sprism_ matGrillTop,matGrillBottom,matGrillSide,
						9,
						0,0, 0,1, currentGrillThickness, 0,
						gsp+gw/2,0,15,
						gsp+gw/2+gw,0,79,
						0,1,800,
						-gsp-gw/2-gw,0,1079,
						-gsp-gw/2-gw,0,15,
						-gsp-gw/2,0,79,
						0,1,800,
						gsp+gw/2,0,1079,
						gsp+gw,0,-1

					sprism_ matGrillTop,matGrillBottom,matGrillSide,
						9,
						0,0, 0,1, currentGrillThickness, 0,
						gsp+gw/2+gw+gsp,0,15,
						gsp+gw/2+gw+gw+gsp,0,79,
						0,1,800,
						-gsp-gw/2-gw-gw-gsp,0,1079,
						-gsp-gw/2-gw-gw-gsp,0,15,
						-gsp-gw/2-gw-gsp,0,79,
						0,1,800,
						gsp+gw/2+gw+gsp,0,1079,
						gsp+gw+gw+gsp,0,-1
					del 1


					cutend
					cutend
					cutend
					cutend
					cutend
				endif

				del 1
			endif

		endif

! -----------------------------------------------------------------------------

		addz currentGrillThickness

		matGrillSide = matGrillTop

	next ijk
	del in_out_cikl_gr

	cutend

endif


! =============================================================================
! Custom Panel
! =============================================================================

if iMullionStyle = MULLION_CUSTOM & gs_cust_panel <> "" then
	if gs_optype_m <> SASH_FIXED then		! Not Fixed
		cutpolya	10, 1, 0,
			A/2 + 1,			0,		15,
			A/2, 				0, 					79,
			A/2, 				h, 					79,
			0,					B - out_radius,		979,
			0, 					B, 					3079,
			-A/2,				h,					3079,
			-A/2,				0,					15,
			-A/2 - 1,			0,					15,
			-A/2 - 1,			B+1,				15,
			A/2 + 1,			B+1,				15
	else
		cutpolya	10, 1, 0,
			-A/2,	0,		15,
			-A/2,	h,	79,
			0,		B - out_radius + gs_rebate_width,		979,
			0,		B,	3079,
			A/2,	h,	3079,
			A/2,	0,	79,
			A/2 + 1,	0,	15,
			A/2 + 1,	B+1,	15,
			-A/2 - 1,	B+1,	15,
			-A/2 - 1,	0,	15
	endif

	if gs_optype_m = SASH_FIXED then
		addz -gs_rebate_depth - gs_glass_thk/2
		panelThk = gs_glass_thk
	else
		panelThk = gs_sash_thk
	endif

	add -A/2-fix_sh_grmod, -fix_sh_grmod, 0
	call "Window_Panel_Collection" parameters a=a+2*fix_sh_grmod, b=b+2*fix_sh_grmod, zzyzx=panelThk, gs_ptype=gs_cust_panel
	del 1

	if gs_optype_m = SASH_FIXED then del 1

	cutend
endif


end


! ==============================================================================
! Circle - Line intersection
! ------------------------------------------------------------------------------
! Input variables:
!	EPS:				epsylon
!	xo,yo,ro:			circle
!	x1,y1, x2,y2		line
!
! Returned variables:
!	state:				0 = no intersection point
!						1 = one intersection point (tangential line)
!						2 = two intersection points
!	xa, ya:				intersection point #1
!	xb, yb:				intersection point #2
! ==============================================================================

101:
	tempX1 = x1 - xo: tempY1 = y1 - yo
	tempX2 = x2 - xo: tempY2 = y2 - yo

	if abs(tempX2 - tempX1) < EPS then
		if abs(ro - abs(tempX1)) < EPS then
			state = 1
			xa = tempX1
			ya = 0
			xb = tempX1
			yb = 0
		else
			if abs(ro) - abs(tempX1) < 0 then
				state = 0: xa = 0: ya = 0: xb = 0: yb = 0
			else
				state = 2
				xa = tempX1
				ya = sqr(ro^2 - tempX1^2)
				xb = tempX1
				yb = -sqr(ro^2 - tempX1^2)
			endif
		endif
	else
		kf = (tempY2 - tempY1) / (tempX2 - tempX1)
		ad = 1 + kf^2
		bd = 2 * tempY1 * kf - 2 * tempX1 * kf^2
		cd = tempY1^2 - 2 * tempX1 * tempY1 * kf + tempX1^2 * kf^2 - ro^2

		if bd^2 - 4 * ad * cd < 0 then
			state = 0: xa = 0: ya = 0: xb = 0: yb = 0
		else
			xa = (-bd + sqr(bd^2 - 4 * ad * cd)) / (2 * ad)
			ya = tempY1 + (xa - tempX1) * kf
			xb = (-bd - sqr(bd^2 - 4 * ad * cd)) / (2 * ad)
			yb = tempY1 + (xb - tempX1) * kf

			if abs(xa - xb) < EPS then state = 1 else state = 2
		endif
	endif

	if state = 2 then
		da = sqr((tempX1 - xa)^2 + (tempY1 - ya)^2)
		db = sqr((tempX1 - xb)^2 + (tempY1 - yb)^2)

		if db < da then
			xxo = xa: yyo = ya
			xa = xb:  ya = yb
			xb = xxo: yb = yyo
		endif
	endif

	xa = xa + xo: ya = ya + yo
	xb = xb + xo: yb = yb + yo
return




