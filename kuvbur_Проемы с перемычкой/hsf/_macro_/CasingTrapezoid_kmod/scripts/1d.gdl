
! CasingTrapezoid

EPS = 0.00001

! iWindowShape:
SHAPE_RECTANGULAR			= 0
SHAPE_ARCHED				= 1
SHAPE_ROUND					= 2
SHAPE_EYEBROWS				= 3
SHAPE_HALFCIRCLE			= 4 	! straight side is horizontal
SHAPE_MULTISIDE				= 5
SHAPE_OCTAGONAL				= 6
SHAPE_HALFARCH				= 7
SHAPE_PENTAGON				= 8
SHAPE_QUARTERROUND			= 9
SHAPE_HALFROUND				= 10 	! straight side is vertical
SHAPE_TRAPEZOID				= 11
SHAPE_TRIANGLE				= 12
SHAPE_GOTHICARCH			= 13
SHAPE_ELLIPSEARCH			= 14
SHAPE_ROMBUS				= 15
SHAPE_HORSESHOE				= 16
SHAPE_OGEECENTERED			= 17
SHAPE_SARACENIC				= 18
SHAPE_T						= 19
SHAPE_HALF_T_LEFT			= 20
SHAPE_ARCHED_T				= 21
SHAPE_ARCHED_HALF_T_LEFT	= 22
SHAPE_PARALLELOGRAM			= 23
SHAPE_ELLIPSE				= 24
SHAPE_CORNER_TRIANGLE		= 25
SHAPE_QUARTERROUND_NOFRAME	= 26
SHAPE_HALF_T_RIGHT			= 27
SHAPE_ARCHED_HALF_T_RIGHT	= 28

! iRevealType:
REVEAL_EDGE				= 0
REVEAL_NO				= 1
REVEAL_POSITIVE			= 2
REVEAL_NEGATIVE			= 3
REVEAL_SLANTED			= 4
REVEAL_SPLAYED			= 5
REVEAL_HISTORIC			= 6
REVEAL_DOUBLE			= 7
REVEAL_DOUBLE_SPLAYED	= 8
REVEAL_OUTSIDE_SPLAYED	= 9


widoLeftJamb	= gs_reveal_left
widoRightJamb	= gs_reveal_right
widoHeadDepth	= gs_reveal_top
widoThresDepth	= gs_reveal_bottom


!!Angle and coordinate calculation!!

palpha=atn(ArchHeight / (leftWidth + rightWidth))
pbeta1=(90+palpha)/2
pbeta2=(90-palpha)/2

dyfw1=(gs_frame_width)/tan(pbeta1)     !dy at frame width
dyfw2=(gs_frame_width)/tan(pbeta2)

dyrw1=(gs_frame_width)/tan(pbeta1)     !dy at rebate width
dyrw2=(gs_frame_width)/tan(pbeta2)

dytth1_out=(gs_trim_width_out)/tan(pbeta1)   		 !dy at outside trim thickness
dytth2_out=(gs_trim_width_out)/tan(pbeta2)

dytos1=(gs_trim_width_out-gs_trim_offs_out)/tan(pbeta1)   		 !dy at trim thickness
dytos2=(gs_trim_width_out-gs_trim_offs_out)/tan(pbeta2)

dytw1=(gs_tw_right_out)/tan(pbeta1)     !dy at outside trim width
dytw2=(gs_tw_right_out)/tan(pbeta2)

dytth1_in=(gs_trim_width_in)/tan(pbeta1)   		 !dy at inside trim thickness
dytth2_in=(gs_trim_width_in)/tan(pbeta2)

dytis1=(gs_trim_width_in-gs_trim_offs_in)/tan(pbeta1)   		 !dy at trim thickness
dytis2=(gs_trim_width_in-gs_trim_offs_in)/tan(pbeta2)

idytw1=(gs_tw_right_in)/tan(pbeta1)     !dy at inside trim width
idytw2=(gs_tw_right_in)/tan(pbeta2)

if iRevealType = REVEAL_POSITIVE | iRevealType = REVEAL_NEGATIVE then
	revLTfi = atn(sin(90-palpha)/(widoHeadDepth/widoLeftJamb+cos(90-palpha)))
	revTLfi = 90-palpha-revLTfi
	revRTfi = atn(sin(90+palpha)/(widoHeadDepth/widoRightJamb+cos(90+palpha)))
	revTRfi = 90-palpha-revRTfi

	dyrev2 = widoLeftJamb / tan(revLTfi)
	dyrev1 = widoRightJamb / tan(revRTfi)
else
	revLTfi = 0
	revTLfi = 0
	revRTfi = 0
	revTRfi = 0

	dyrev2 = 0
	dyrev1 = 0
endif

! ==============================================================================
! Calculations for Corner Window
! ==============================================================================

if GLOB_MODPAR_NAME = "rightCornerAngle" then
	if ABS(rightCornerAngle) < EPS OR ABS(180-rightCornerAngle) < EPS OR ABS(360-rightCornerAngle) < EPS then
		bRightCornerFunction = 0
	else
		bRightCornerFunction = 1
	endif
	parameters bRightCornerFunction = bRightCornerFunction
endif

if bRightCornerFunction & abs(rightCornerAngle) > EPS then
	rx = 1 / tan(rightCornerAngle / 2)

	if rightCornerAngle > 180 then
		rightCwDx = WIDO_FRAME_THICKNESS / tan(-rightCornerAngle / 2)
	else
		rightCwDx = 0
	endif

	rightCwDx2 = 0
	if abs(WALL_THICKNESS - rightConnWallThk) > EPS then
		rightCwDx2 = (WALL_THICKNESS - rightConnWallThk) / cos(rightCornerAngle - 90)
	endif
	bFitMode = (rightConnWallThk > WALL_THICKNESS + EPS)

	gs_right_oversize = 0

	beta = atn ((rightConnWallThk * sin(rightCornerAngle)) / (WALL_THICKNESS + rightConnWallThk * cos(rightCornerAngle)))
	rx = 1 / tan(rightCornerAngle / 2)

	if rightCornerAngle > 180 then
		overSizeRightX = max (0, WALL_THICKNESS / tan(360 - rightCornerAngle + beta) + WIDO_SILL / tan(rightCornerAngle / 2)) + 2 * gs_tw_right_out
	else
		overSizeRightX = (WIDO_FRAME_THICKNESS + WIDO_SILL) * rx + max (0, WALL_THICKNESS * tan(rightCornerAngle - beta - 90)) + 2 * gs_tw_right_out
	endif
	overSizeRightY = overSizeRightX * (ArchHeight / (leftWidth + rightWidth))

	cornerPostXbyWidth	= (-WIDO_FRAME_THICKNESS - gs_cc_pr) * abs(tan(90 - rightCornerAngle / 2)) + gs_cc_width
	cornerPostXbyThk	= (gs_cc_thk - WIDO_FRAME_THICKNESS - gs_cc_pr) * abs(tan(90 - rightCornerAngle / 2))
	pxFrameR = max(cornerPostXbyWidth, cornerPostXbyThk)

	tanAngle = tan(rightCornerAngle / 2)
	if (rightCornerAngle > 180) then
		px1R = -gs_cc_pr / tanAngle
		px2R =  WIDO_FRAME_THICKNESS / tanAngle
		px3R =  -(gs_cc_pr - gs_cc_thk) / tanAngle
	else
		px1R =  gs_cc_pr / tanAngle
		px2R = -WIDO_FRAME_THICKNESS / tanAngle
		px3R =  (gs_cc_pr - gs_cc_thk) / tanAngle
	endif
else
	overSizeRightX = 0
	overSizeRightY = 0
endif

if bLeftCornerFunction & abs(leftCornerAngle) > EPS then
	lx = 1 / tan(leftCornerAngle / 2)

	if leftCornerAngle > 180 then
		leftCwDx = WIDO_FRAME_THICKNESS / tan(-leftCornerAngle / 2)
	else
		leftCwDx = 0
	endif

	leftCwDx2 = 0
	if abs(WALL_THICKNESS - leftConnWallThk) > EPS then
		leftCwDx2 = (WALL_THICKNESS - leftConnWallThk) / cos(leftCornerAngle - 90)
	endif
	bFitMode = (leftConnWallThk > WALL_THICKNESS + EPS)

	gs_left_oversize = 0

	beta = atn ((leftConnWallThk * sin(leftCornerAngle)) / (WALL_THICKNESS + leftConnWallThk * cos(leftCornerAngle)))
	lx = 1 / tan(leftCornerAngle / 2)

	if leftCornerAngle > 180 then
		overSizeLeftX = max (0, WALL_THICKNESS / tan(360 - leftCornerAngle + beta) + WIDO_SILL / tan(leftCornerAngle / 2)) + 2 * gs_tw_right_out
	else
		overSizeLeftX = (WIDO_FRAME_THICKNESS + WIDO_SILL) * lx + max (0, WALL_THICKNESS * tan(leftCornerAngle - beta - 90)) + 2 * gs_tw_right_out
	endif
	overSizeLeftY = overSizeLeftX * (ArchHeight / (leftWidth + rightWidth))

	cornerPostXbyWidth	= (-WIDO_FRAME_THICKNESS - gs_cc_pr) * abs(tan(90 - leftCornerAngle / 2)) + gs_cc_width
	cornerPostXbyThk	= (gs_cc_thk - WIDO_FRAME_THICKNESS - gs_cc_pr) * abs(tan(90 - leftCornerAngle / 2))
	pxFrameL = max(cornerPostXbyWidth, cornerPostXbyThk)

	tanAngle = tan(leftCornerAngle / 2)
	if (leftCornerAngle > 180) then
		px1L = -gs_cc_pr / tanAngle
		px2L =  WIDO_FRAME_THICKNESS / tanAngle
		px3L =  -(gs_cc_pr - gs_cc_thk) / tanAngle
	else
		px1L =  gs_cc_pr / tanAngle
		px2L = -WIDO_FRAME_THICKNESS / tanAngle
		px3L =  (gs_cc_pr - gs_cc_thk) / tanAngle
	endif
else
	overSizeLeftX = 0
	overSizeLeftY = 0
endif

if gs_corner_column then
	bMirrorRight	= (rightCornerAngle > 180)
	bMirrorLeft		= (leftCornerAngle > 180)
	offsLeftY		= ((leftCornerAngle > 180) exor (rightCornerAngle > 180)) * (2 * gs_cc_pr - gs_cc_thk)
	if abs(leftCornerAngle) > EPS then
		offsLeftX	= -abs(offsLeftY / tan(leftCornerAngle / 2))
	endif
endif


! ==============================================================================
! Mask Values
! ==============================================================================

!Straight or Inclined Wall

!if abs(WIDO_SILL-(WALL_THICKNESS-WIDO_FRAME_THICKNESS))<EPS then tim=1
!if abs(WIDO_SILL)<EPS then     tom=4

if abs(gs_trim_offs_in) > EPS then
	casInMask = 15
	jambExtInMask = 15
	cutInMask = 7
else
	casInMask = 14
	jambExtInMask = 11
	cutInMask = 7
endif

if abs(gs_trim_offs_out) > EPS then
	casOutMask = 15
	jambExtOutMask = 15
else
	casOutMask = 11
	jambExtOutMask = 14
endif

!Curved Wall

if WIDO_ORIG_DIST<0  then
	btim1=14
	btim2=11
	btim3=11
	btim4=14
	if WIDO_REVEAL_SIDE>0 then
		btim1=11
		btim2=14
		btim3=14
		btim4=11
	endif
endif

if WIDO_ORIG_DIST>0  then
	btim1=11
	btim2=14
	btim3=14
	btim4=11
	if WIDO_REVEAL_SIDE>0 then
		btim1=14
		btim2=11
		btim3=11
		btim4=14
	endif
endif





