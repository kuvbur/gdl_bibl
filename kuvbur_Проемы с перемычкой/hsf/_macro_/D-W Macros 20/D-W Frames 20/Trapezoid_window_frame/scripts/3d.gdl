
! Trapezoid_window_frame


if gs_frame_mat = gs_frame_mat2 then				!!! One body, in case of similar materials
	in_out_cikl = 1

	var_mater = gs_frame_mat
	var_mater2 = gs_frame_mat

	out_thk = 0
	part_thk =gs_frame_thk

	in_out_mask = 15
	in_out_mask2 = 13
	if gs_stack_bottom then bot_mask = 8 else bot_mask = 15
else												!!!two bodies
	in_out_cikl = 2

	!!! Inner-outer Material Control-----------
	temp_frame_mat = gs_frame_mat
	temp_frame_mat2 = gs_frame_mat2
	if WIDO_REVEAL_SIDE then
		gs_frame_mat=temp_frame_mat
		gs_frame_mat2=temp_frame_mat2
	else
		gs_frame_mat=temp_frame_mat2
		gs_frame_mat2=temp_frame_mat
	endif

	var_mater = gs_frame_mat
	var_mater2 = gs_frame_mat2

	if lod3D = 2 then	! Detailed
		out_thk = gs_frame_thk - gs_rebate_depth
		part_thk = out_thk
	else
		if lod3D = 5 then
			out_thk = gs_frame_thk/2
		else
			if WIDO_REVEAL_SIDE then
				out_thk = gs_frame_thk/2 - gs_glass_thk/2
			else
				out_thk = gs_frame_thk/2 + gs_glass_thk/2
			endif
		endif
		part_thk = out_thk
	endif

	in_out_mask = 11
	in_out_mask2 = 9
	if gs_stack_bottom then bot_mask = 8 else bot_mask = 11
endif


bVerticalMullion =	((lod3D = 1 | lod3D = 5)						&\
					 (sash_num = 2									|\
					  gs_optype_m_01 = SASH_DOUBLE_SIDE_HUNG		|\
					  gs_optype_m_01 = SASH_SLIDING_HOR				|\
					  gs_optype_m_01 = SASH_SLIDING_HOR_M			|\
					  gs_optype_m_01 = SASH_DOUBLE_SLIDING_HOR		|\
					  gs_optype_m_01 = SASH_DOUBLE_SLIDING_HOR_M	))

bHorizontalMullion =	((lod3D = 1 | lod3D = 5)					&\
						 gs_UTrans									&\
						 sash_num = 1								&\
						 (gs_optype_m_01 = SASH_SLIDING_VER			|\
						  gs_optype_m_01 = SASH_DOUBLE_SLIDING_VER	))

if bVerticalMullion then
	if sash_num = 2 | gs_optype_m_01 = SASH_DOUBLE_SIDE_HUNG then
		mfx1 = a/2 - gs_SLight_w - gs_sash_width
		mfx2 = mfx1 + 2 * gs_sash_width
	else
		mfx1 = a/2 - gs_SLight_w - gs_sash_width/2
		mfx2 = mfx1 + 2 * gs_sash_width/2
	endif
	if gs_UTrans then
		mfy2 = gs_UTrans_h-gs_UTrans_w/2-simp_mod
		mfy1 = mfy2
	else
		mfy2 = b - dysw1 + (gs_SLight_w - gs_sash_width - gs_frame_width - simp_mod_tr) * tan(topAngle)
		mfy1 = mfy2 + 2 * gs_sash_width * tan(topAngle)
	endif
else
	mfx1 = 0
	mfx2 = 0
	if bHorizontalMullion then
		mfy2 = gs_frame_width/2 + (gs_UTrans_h - gs_UTrans_w/2)/2 - gs_sash_width/2
		mfy1 = mfy2 + gs_sash_width
	else
		mfy1 = 0
		mfy2 = 0
	endif
endif


!! FRAME !!

group "frame"

	sect_fill gs_fillFr, gs_penFr_bg, gs_penFr_fg, gs_frame_pen_cont
	pen gs_frame_pen

	! --- Cutting in case of corner window -----------------------------------------
	halfA = A / 2
	cutLeft = 0
	cutRight = 0
	if abs(gs_frame_ovhg_left_out - gs_frame_ovhg_left_in) > EPS then
		addx -halfA - gs_frame_ovhg_left_out
		rotz 90
		cutplane -90 + atn((gs_frame_ovhg_left_out - gs_frame_ovhg_left_in) / gs_frame_thk)
		del 2
		cutLeft = 1
	endif
	if abs(gs_frame_ovhg_right_out - gs_frame_ovhg_right_in) > EPS then
		addx halfA + gs_frame_ovhg_right_out
		rotz 90
		cutplane 90 - atn((gs_frame_ovhg_right_out - gs_frame_ovhg_right_in) / gs_frame_thk)
		del 2
		cutRight = 1
	endif

	for ijk = 1 to in_out_cikl
		material var_mater

		if gs_SashText_typ_num = 1 then
			base
			if bHorizontalMullion then
				if gs_UTrans then
					cprism_ var_mater2,var_mater,var_mater,
						8, part_thk,
						-a/2+gs_frame_width+simp_mod,		gs_frame_width+simp_mod,					10,
						-a/2-leftOvhg,						-bottomOvhg,								in_out_mask,
						-a/2-leftOvhg,						b+dy2,										10,
						-a/2+gs_frame_width+simp_mod_tr,	b+dysw2,									in_out_mask,
						-a/2+gs_frame_width+simp_mod_tr,	gs_UTrans_h+(gs_UTrans_w/2+simp_mod_tr),	10,
						-a/2+gs_frame_width+simp_mod,		gs_UTrans_h-(gs_UTrans_w/2+simp_mod),		in_out_mask,
						-a/2+gs_frame_width+simp_mod,		mfy1,										10,
						-a/2+gs_frame_width+simp_mod,		mfy2,										in_out_mask
				else
					cprism_ var_mater2,var_mater,var_mater,
						6, part_thk,
						-a/2+gs_frame_width+simp_mod,		gs_frame_width+simp_mod,	10,
						-a/2-leftOvhg,						-bottomOvhg,				in_out_mask,
						-a/2-leftOvhg,						b+dy2,						10,
						-a/2+gs_frame_width+simp_mod_tr,	b+dysw2,					in_out_mask,
						-a/2+gs_frame_width+simp_mod,		mfy1,						10,
						-a/2+gs_frame_width+simp_mod,		mfy2,						in_out_mask
				endif
			else
				if gs_UTrans then
					cprism_ var_mater2,var_mater,var_mater,
						6, part_thk,
						-a/2+gs_frame_width+simp_mod,		gs_frame_width+simp_mod,					10,
						-a/2-leftOvhg,						-bottomOvhg,								in_out_mask,
						-a/2-leftOvhg,						b+dy2,										10,
						-a/2+gs_frame_width+simp_mod_tr,	b+dysw2,									in_out_mask,
						-a/2+gs_frame_width+simp_mod_tr,	gs_UTrans_h+(gs_UTrans_w/2+simp_mod_tr),	10,
						-a/2+gs_frame_width+simp_mod,		gs_UTrans_h-(gs_UTrans_w/2+simp_mod),		in_out_mask
				else
					cprism_ var_mater2,var_mater,var_mater,
						4, part_thk,
						-a/2+gs_frame_width+simp_mod,		gs_frame_width+simp_mod,	10,
						-a/2-leftOvhg,						-bottomOvhg,				in_out_mask,
						-a/2-leftOvhg,						b+dy2,						10,
						-a/2+gs_frame_width+simp_mod_tr,	b+dysw2,					in_out_mask
				endif
			endif
			vert 0, 0, 0
			vert 0, 1, 0
			vert 1, 0, 0
			vert 0, 0, 1
			coor 2, -1, -2, -3, -4
			body 1

			base
			if bHorizontalMullion then
				if gs_UTrans then
					cprism_ var_mater2,var_mater,var_mater,
						8, part_thk,
						a/2-gs_frame_width-simp_mod,	gs_frame_width+simp_mod,					10,
						a/2+rightOvhg,					-bottomOvhg,								in_out_mask,
						a/2+rightOvhg,					b-dy1,										10,
						a/2-gs_frame_width-simp_mod_tr,	b-dysw1,									in_out_mask,
						a/2-gs_frame_width-simp_mod_tr,	gs_UTrans_h+(gs_UTrans_w/2+simp_mod_tr),	10,
						a/2-gs_frame_width-simp_mod,	gs_UTrans_h-(gs_UTrans_w/2+simp_mod),		in_out_mask,
						a/2-gs_frame_width-simp_mod, 	mfy1,										10,
						a/2-gs_frame_width-simp_mod, 	mfy2,										in_out_mask
				else
					cprism_ var_mater2,var_mater,var_mater,
						6, part_thk,
						a/2-gs_frame_width-simp_mod,	gs_frame_width+simp_mod,	10,
						a/2+rightOvhg,					-bottomOvhg,				in_out_mask,
						a/2+rightOvhg,					b-dy1,						10,
						a/2-gs_frame_width-simp_mod_tr,	b-dysw1,					in_out_mask,
						a/2-gs_frame_width-simp_mod, 	mfy1,						10,
						a/2-gs_frame_width-simp_mod, 	mfy2,						in_out_mask
				endif
			else
				if gs_UTrans then
					cprism_ var_mater2,var_mater,var_mater,
						6, part_thk,
						a/2-gs_frame_width-simp_mod,	gs_frame_width+simp_mod,					10,
						a/2+rightOvhg,					-bottomOvhg,								in_out_mask,
						a/2+rightOvhg,					b-dy1,										10,
						a/2-gs_frame_width-simp_mod_tr,	b-dysw1,									in_out_mask,
						a/2-gs_frame_width-simp_mod_tr,	gs_UTrans_h+(gs_UTrans_w/2+simp_mod_tr),	10,
						a/2-gs_frame_width-simp_mod,	gs_UTrans_h-(gs_UTrans_w/2+simp_mod),		in_out_mask
				else
					cprism_ var_mater2,var_mater,var_mater,
						4, part_thk,
						a/2-gs_frame_width-simp_mod,	gs_frame_width+simp_mod,	10,
						a/2+rightOvhg,					-bottomOvhg,				in_out_mask,
						a/2+rightOvhg,					b-dy1,						10,
						a/2-gs_frame_width-simp_mod_tr,	b-dysw1,					in_out_mask
				endif
			endif
			vert 0, 0, 0
			vert 0, 1, 0
			vert 1, 0, 0
			vert 0, 0, 1
			coor 2, -1, -2, -3, -4
			body 1

			if bVerticalMullion & gs_UTrans = 0 then
				base
				cprism_ var_mater2,var_mater,var_mater,
					6, part_thk,
					-a/2-leftOvhg,						b+dy2,		10,
					-a/2+gs_frame_width+simp_mod_tr,	b+dysw2,	in_out_mask,
					mfx1,								mfy1,		8,
					mfx2,								mfy2,		in_out_mask,
					a/2-gs_frame_width-simp_mod_tr,		b-dysw1,	10,
					a/2+rightOvhg,						b-dy1,		in_out_mask
				vert 0, 0, 0
				vert cos(topAngle), -sin(topAngle), 0
				vert sin(topAngle), cos(topAngle), 0
				vert 0, 0, 1
				coor 2, -1, -2, -3, -4
				body 1
			else
				base
				cprism_ var_mater2,var_mater,var_mater,
					4, part_thk,
					-a/2-leftOvhg,						b+dy2,		10,
					-a/2+gs_frame_width+simp_mod_tr,	b+dysw2,	in_out_mask,
					a/2-gs_frame_width-simp_mod_tr,		b-dysw1,	10,
					a/2+rightOvhg,						b-dy1,		in_out_mask
				vert 0, 0, 0
				vert cos(topAngle), -sin(topAngle), 0
				vert sin(topAngle), cos(topAngle), 0
				vert 0, 0, 1
				coor 2, -1, -2, -3, -4
				body 1
			endif

			if bVerticalMullion then
				cprism_ var_mater2,var_mater,var_mater,
					6, part_thk,
					a/2+rightOvhg,					-bottomOvhg,				10,
					a/2-gs_frame_width-simp_mod,	gs_frame_width+simp_mod,	in_out_mask,
					mfx2, 							gs_frame_width+simp_mod,	8+5*(lod3D=2),
					mfx1,							gs_frame_width+simp_mod,	in_out_mask,
					-a/2+gs_frame_width+simp_mod,	gs_frame_width+simp_mod,	10,
					-a/2-leftOvhg,					-bottomOvhg,				bot_mask
			else
				cprism_ var_mater2,var_mater,var_mater,
					4, part_thk,
					a/2+rightOvhg,					-bottomOvhg,				10,
					a/2-gs_frame_width-simp_mod,	gs_frame_width+simp_mod,	in_out_mask,
					-a/2+gs_frame_width+simp_mod,	gs_frame_width+simp_mod,	10,
					-a/2-leftOvhg,					-bottomOvhg,				bot_mask
			endif
			body 1
		endif

		if gs_SashText_typ_num = 2 then
			base
			if bHorizontalMullion then
				if gs_UTrans then
					cprism_ var_mater2,var_mater,var_mater,
						8, part_thk,
						-a/2+gs_frame_width+simp_mod,		gs_frame_width+simp_mod,					10,
						-a/2-leftOvhg,						gs_frame_width+simp_mod,					in_out_mask-2,
						-a/2-leftOvhg,						b+dysw2,									8,
						-a/2+gs_frame_width+simp_mod_tr,	b+dysw2,									in_out_mask,
						-a/2+gs_frame_width+simp_mod_tr,	gs_UTrans_h+(gs_UTrans_w/2+simp_mod_tr),	10,
						-a/2+gs_frame_width+simp_mod,		gs_UTrans_h-(gs_UTrans_w/2+simp_mod),		in_out_mask,
						-a/2+gs_frame_width+simp_mod,		mfy1,										10,
						-a/2+gs_frame_width+simp_mod,		mfy2,										in_out_mask
				else
					cprism_ var_mater2,var_mater,var_mater,
						6, part_thk,
						-a/2+gs_frame_width+simp_mod,		gs_frame_width+simp_mod,	10,
						-a/2-leftOvhg,						gs_frame_width+simp_mod,	in_out_mask-2,
						-a/2-leftOvhg,						b+dysw2,					8,
						-a/2+gs_frame_width+simp_mod_tr,	b+dysw2,					in_out_mask,
						-a/2+gs_frame_width+simp_mod,		mfy1,						10,
						-a/2+gs_frame_width+simp_mod,		mfy2,						in_out_mask

				endif
			else
				if gs_UTrans then
					cprism_ var_mater2,var_mater,var_mater,
						6, part_thk,
						-a/2+gs_frame_width+simp_mod,		gs_frame_width+simp_mod,					10,
						-a/2-leftOvhg,						gs_frame_width+simp_mod,					in_out_mask-2,
						-a/2-leftOvhg,						b+dysw2,									8,
						-a/2+gs_frame_width+simp_mod_tr,	b+dysw2,									in_out_mask,
						-a/2+gs_frame_width+simp_mod_tr,	gs_UTrans_h+(gs_UTrans_w/2+simp_mod_tr),	10,
						-a/2+gs_frame_width+simp_mod,		gs_UTrans_h-(gs_UTrans_w/2+simp_mod),		in_out_mask
				else
					cprism_ var_mater2,var_mater,var_mater,
						4, part_thk,
						-a/2+gs_frame_width+simp_mod,		gs_frame_width+simp_mod,	10,
						-a/2-leftOvhg,						gs_frame_width+simp_mod,	in_out_mask-2,
						-a/2-leftOvhg,						b+dysw2,					8,
						-a/2+gs_frame_width+simp_mod_tr,	b+dysw2,					in_out_mask
				endif
			endif
			vert 0, 0, 0
			vert 0, 1, 0
			vert 1, 0, 0
			vert 0, 0, 1
			coor 2, -1, -2, -3, -4
			body 1

			base
			if bHorizontalMullion then
				if gs_UTrans then
					cprism_ var_mater2,var_mater,var_mater,
						8, part_thk,
						a/2-gs_frame_width-simp_mod,	gs_frame_width+simp_mod,					8,
						a/2+rightOvhg,					gs_frame_width+simp_mod,					in_out_mask-2,
						a/2+rightOvhg,					b-dysw1,									8,
						a/2-gs_frame_width-simp_mod_tr,	b-dysw1,									in_out_mask,
						a/2-gs_frame_width-simp_mod_tr,	gs_UTrans_h+(gs_UTrans_w/2+simp_mod_tr),	10,
						a/2-gs_frame_width-simp_mod,	gs_UTrans_h-(gs_UTrans_w/2+simp_mod),		in_out_mask,
						a/2-gs_frame_width-simp_mod,	mfy1,										10,
						a/2-gs_frame_width-simp_mod,	mfy2,										in_out_mask
				else
					cprism_ var_mater2,var_mater,var_mater,
						6, part_thk,
						a/2-gs_frame_width-simp_mod,	gs_frame_width+simp_mod,	8,
						a/2+rightOvhg,					gs_frame_width+simp_mod,	in_out_mask-2,
						a/2+rightOvhg,					b-dysw1,					8,
						a/2-gs_frame_width-simp_mod_tr,	b-dysw1,					in_out_mask,
						a/2-gs_frame_width-simp_mod,	mfy1,						10,
						a/2-gs_frame_width-simp_mod,	mfy2,						in_out_mask
				endif
			else
				if gs_UTrans then
					cprism_ var_mater2,var_mater,var_mater,
						6, part_thk,
						a/2-gs_frame_width-simp_mod,	gs_frame_width+simp_mod,					8,
						a/2+rightOvhg,					gs_frame_width+simp_mod,					in_out_mask-2,
						a/2+rightOvhg,					b-dysw1,									8,
						a/2-gs_frame_width-simp_mod_tr,	b-dysw1,									in_out_mask,
						a/2-gs_frame_width-simp_mod_tr,	gs_UTrans_h+(gs_UTrans_w/2+simp_mod_tr),	10,
						a/2-gs_frame_width-simp_mod,	gs_UTrans_h-(gs_UTrans_w/2+simp_mod),		in_out_mask
				else
					cprism_ var_mater2,var_mater,var_mater,
						4, part_thk,
						a/2-gs_frame_width-simp_mod,	gs_frame_width+simp_mod,	8,
						a/2+rightOvhg,					gs_frame_width+simp_mod,	in_out_mask-2,
						a/2+rightOvhg,					b-dysw1,					8,
						a/2-gs_frame_width-simp_mod_tr,	b-dysw1,					in_out_mask
				endif
			endif
			vert 0, 0, 0
			vert 0, 1, 0
			vert 1, 0, 0
			vert 0, 0, 1
			coor 2, -1, -2, -3, -4
			body 1

			if bVerticalMullion & gs_UTrans = 0 then
				base
				cprism_ var_mater2,var_mater,var_mater,
					8, part_thk,
					-a/2-leftOvhg,						b+dy2,		in_out_mask,
					-a/2-leftOvhg,						b+dysw2,	8,
					-a/2+gs_frame_width+simp_mod_tr,	b+dysw2,	in_out_mask,
					mfx1, 								mfy1,		8,
					mfx2, 								mfy2,		in_out_mask,
					a/2-gs_frame_width-simp_mod_tr,		b-dysw1,	10,
					a/2+rightOvhg,						b-dysw1,	in_out_mask2,
					a/2+rightOvhg,						b-dy1,		in_out_mask
				vert 0, 0, 0
				vert cos(topAngle), -sin(topAngle), 0
				vert sin(topAngle), cos(topAngle), 0
				vert 0, 0, 1
				coor 2, -1, -2, -3, -4
				body 1
			else
				base
				cprism_ var_mater2,var_mater,var_mater,
					6, part_thk,
					-a/2-leftOvhg,						b+dy2,		in_out_mask,
					-a/2-leftOvhg,						b+dysw2,	8,
					-a/2+gs_frame_width+simp_mod_tr,	b+dysw2,	in_out_mask,
					a/2-gs_frame_width-simp_mod_tr,		b-dysw1,	10,
					a/2+rightOvhg,						b-dysw1,	in_out_mask2,
					a/2+rightOvhg,						b-dy1,		in_out_mask
				vert 0, 0, 0
				vert cos(topAngle), -sin(topAngle), 0
				vert sin(topAngle), cos(topAngle), 0
				vert 0, 0, 1
				coor 2, -1, -2, -3, -4
				body 1
			endif

			if bVerticalMullion then
				cprism_ var_mater2,var_mater,var_mater,
					8, part_thk,
					a/2+rightOvhg,					-bottomOvhg,				in_out_mask,
					a/2+rightOvhg,					gs_frame_width+simp_mod,	8,
					a/2-gs_frame_width-simp_mod,	gs_frame_width+simp_mod,	in_out_mask,
					mfx2,							gs_frame_width+simp_mod,	8+5*(lod3D=2),
					mfx1,							gs_frame_width+simp_mod,	in_out_mask,
					-a/2+gs_frame_width+simp_mod,	gs_frame_width+simp_mod,	10,
					-a/2-leftOvhg,					gs_frame_width+simp_mod,	in_out_mask2,
					-a/2-leftOvhg,					-bottomOvhg,				bot_mask
			else
				cprism_ var_mater2,var_mater,var_mater,
					6, part_thk,
					a/2+rightOvhg,					-bottomOvhg,				in_out_mask,
					a/2+rightOvhg,					gs_frame_width+simp_mod,	8,
					a/2-gs_frame_width-simp_mod,	gs_frame_width+simp_mod,	in_out_mask,
					-a/2+gs_frame_width+simp_mod,	gs_frame_width+simp_mod,	10,
					-a/2-leftOvhg,					gs_frame_width+simp_mod,	in_out_mask2,
					-a/2-leftOvhg,					-bottomOvhg,				bot_mask
			endif
			body 1
		endif

		if gs_UTrans then
			if bVerticalMullion then
				cprism_ var_mater2,var_mater,var_mater,
					6, part_thk,
					a/2-gs_frame_width-simp_mod_tr,		gs_UTrans_h+gs_UTrans_w/2+simp_mod_tr,	10,
					a/2-gs_frame_width-simp_mod,		gs_UTrans_h-gs_UTrans_w/2-simp_mod, 	in_out_mask,
					mfx2,								gs_UTrans_h-gs_UTrans_w/2-simp_mod,		10,
					mfx1,								gs_UTrans_h-gs_UTrans_w/2-simp_mod,		in_out_mask,
					-a/2+gs_frame_width+simp_mod,		gs_UTrans_h-gs_UTrans_w/2-simp_mod,		10,
					-a/2+gs_frame_width+simp_mod_tr,	gs_UTrans_h+gs_UTrans_w/2+simp_mod_tr,	in_out_mask
			else
				cprism_ var_mater2,var_mater,var_mater,
					4, part_thk,
					a/2-gs_frame_width-simp_mod_tr,		gs_UTrans_h+gs_UTrans_w/2+simp_mod_tr,	10,
					a/2-gs_frame_width-simp_mod,		gs_UTrans_h-gs_UTrans_w/2-simp_mod, 	in_out_mask,
					-a/2+gs_frame_width+simp_mod,		gs_UTrans_h-gs_UTrans_w/2-simp_mod,		10,
					-a/2+gs_frame_width+simp_mod_tr,	gs_UTrans_h+gs_UTrans_w/2+simp_mod_tr,	in_out_mask
			endif
			body 1
		endif

		if bVerticalMullion then
			base
			cprism_ var_mater2,var_mater,var_mater,
				5, part_thk,
				mfx1,	gs_frame_width+simp_mod,	10,
				mfx2,	gs_frame_width+simp_mod,	in_out_mask,
				mfx2,	mfy2, 						10,
				mfx1,	mfy1,						in_out_mask,
				mfx1,	gs_frame_width+simp_mod,	-1

			vert 0, 0, 0
			vert 0, 1, 0
			vert 1, 0, 0
			vert 0, 0, 1
			coor 2, -1, -2, -3, -4
			body 1
		endif

		if bHorizontalMullion then
			cprism_ var_mater2,var_mater,var_mater,
				5, part_thk,
				a/2-gs_frame_width-simp_mod, mfy1,	10,
				a/2-gs_frame_width-simp_mod, mfy2,	in_out_mask,
				-a/2+gs_frame_width+simp_mod, mfy2,	10,
				-a/2+gs_frame_width+simp_mod, mfy1,	in_out_mask,
				a/2-gs_frame_width-simp_mod, mfy1,	-1
			body 1
		endif

		addz part_thk
		part_thk= gs_frame_thk-out_thk

		var_mater = gs_frame_mat2
		var_mater2 = gs_frame_mat2

		in_out_mask = 14
		in_out_mask2 = 12
		if gs_stack_bottom then bot_mask = 8 else bot_mask = 14

	next ijk
	del in_out_cikl

	if cutLeft then cutend
	if cutRight then cutend
endgroup


! ==============================================================================
! Sash cavities in Frame
! ==============================================================================

group "harcsi"
	if lod3D = 2 then
		if GLOB_CONTEXT = 4 | GLOB_CONTEXT = 6 then
			pen gs_frame_pen_cont
		else
			pen gs_frame_pen
		endif
		sect_fill gs_fillFr, gs_penFr_bg, gs_penFr_fg, gs_frame_pen_cont

		if gs_UTrans then
			if iSashCutType = SASHCUT_REBATE then
				addz gs_frame_thk - gs_rebate_depth
				material gs_frame_mat2
				prism_ 5, gs_frame_thk,
					-a/2+gs_frame_width-gs_rebate_width, gs_frame_width-gs_rebate_width,			15,
					 a/2-gs_frame_width+gs_rebate_width, gs_frame_width-gs_rebate_width,			15,
					 a/2-gs_frame_width+gs_rebate_width, gs_UTrans_h-gs_UTrans_w/2+gs_rebate_width,	15,
					-a/2+gs_frame_width-gs_rebate_width, gs_UTrans_h-gs_UTrans_w/2+gs_rebate_width,	15,
					-a/2+gs_frame_width-gs_rebate_width, gs_frame_width-gs_rebate_width,			-1
				body 1
				del 1
			endif

			if iSashCutType = SASHCUT_MIDDLE then
				addz gs_frame_thk/2
				material gs_frame_mat2
				prism_ 5, gs_frame_thk,
					-a/2+gs_frame_width, gs_frame_width,			15,
					 a/2-gs_frame_width, gs_frame_width,			15,
					 a/2-gs_frame_width, gs_UTrans_h-gs_UTrans_w/2,	15,
					-a/2+gs_frame_width, gs_UTrans_h-gs_UTrans_w/2,	15,
					-a/2+gs_frame_width, gs_frame_width,			-1
				body 1
				material gs_frame_mat
				prism_ 5, -gs_frame_thk,
					-a/2+gs_frame_width, gs_frame_width,			15,
					 a/2-gs_frame_width, gs_frame_width,			15,
					 a/2-gs_frame_width, gs_UTrans_h-gs_UTrans_w/2,	15,
					-a/2+gs_frame_width, gs_UTrans_h-gs_UTrans_w/2,	15,
					-a/2+gs_frame_width, gs_frame_width,			-1
				body 1
				del 1
			endif

			if gs_optype_m_02 <> SASH_FIXED then
				addz gs_frame_thk - gs_rebate_depth
				material gs_frame_mat2
				prism_ 5, gs_frame_thk,
					-a/2+gs_frame_width-gs_rebate_width, gs_UTrans_h+gs_UTrans_w/2-gs_rebate_width, 15,
					 a/2-gs_frame_width+gs_rebate_width, gs_UTrans_h+gs_UTrans_w/2-gs_rebate_width, 15,
					 a/2-gs_frame_width+gs_rebate_width, b-dyrw1,									15,
					-a/2+gs_frame_width-gs_rebate_width, b+dyrw2,									15,
					-a/2+gs_frame_width-gs_rebate_width, gs_UTrans_h+gs_UTrans_w/2-gs_rebate_width, -1
				body 1
				del 1
			endif
		else
			if iSashCutType = SASHCUT_REBATE then
				addz gs_frame_thk - gs_rebate_depth
				material gs_frame_mat2
				prism_ 5, gs_frame_thk,
					-a/2+gs_frame_width-gs_rebate_width, gs_frame_width-gs_rebate_width,	15,
					 a/2-gs_frame_width+gs_rebate_width, gs_frame_width-gs_rebate_width,	15,
					 a/2-gs_frame_width+gs_rebate_width, b-dyrw1,							15,
					-a/2+gs_frame_width-gs_rebate_width, b+dyrw2,							15,
					-a/2+gs_frame_width-gs_rebate_width, gs_frame_width-gs_rebate_width,	-1
				body 1
				del 1
			endif

			if iSashCutType = SASHCUT_MIDDLE then
				addz gs_frame_thk/2
				material gs_frame_mat2
				prism_ 5, gs_frame_thk,
					-a/2+gs_frame_width, gs_frame_width,	15,
					 a/2-gs_frame_width, gs_frame_width,	15,
					 a/2-gs_frame_width, b-dyfw1,			15,
					-a/2+gs_frame_width, b+dyfw2,			15,
					-a/2+gs_frame_width, gs_frame_width,	-1
				body 1
				material gs_frame_mat
				prism_ 5, -gs_frame_thk,
					-a/2+gs_frame_width, gs_frame_width,	15,
					 a/2-gs_frame_width, gs_frame_width,	15,
					 a/2-gs_frame_width, b-dyfw1,			15,
					-a/2+gs_frame_width, b+dyfw2,			15,
					-a/2+gs_frame_width, gs_frame_width,	-1
				body 1
				del 1
			endif
		endif
	endif
endgroup

pen gs_frame_pen
sect_fill gs_fillFr, gs_penFr_bg, gs_penFr_fg, gs_frame_pen_cont

if lod3D = 2 then	! Detailed
	placegroup subgroup("frame","harcsi")
else
	placegroup "frame"
endif

end
