

! ==============================================================================
! Simple Detail Level
! ==============================================================================

if	gs_optype_m = SASH_FIXED |\
	gs_optype_m = SASH_HOR_PIVOT |\
	gs_optype_m = SASH_VER_PIVOT |\
	gs_optype_m = SASH_VER_PIVOT_M |\
	gs_optype_m = SASH_SLIDING_HOR |\
	gs_optype_m = SASH_SLIDING_HOR_M |\
	gs_optype_m = SASH_DOUBLE_SLIDING_HOR |\
	gs_optype_m = SASH_DOUBLE_SLIDING_HOR_M |\
	gs_optype_m = SASH_SLIDING_VER |\
	gs_optype_m = SASH_DOUBLE_SLIDING_VER then

	if lod3D = 1 | lod3D = 5 | gs_optype_m = SASH_FIXED then
		addy gs_rebate_width
		A = A - 2*gs_rebate_width
		B = B - 2*gs_rebate_width
		if iMullionStyle = MULLION_SOLID_PANEL then
			addz -gs_frame_thk
		endif
	else
		if	gs_optype_m = SASH_HOR_PIVOT |\
			gs_optype_m = SASH_VER_PIVOT |\
			gs_optype_m = SASH_VER_PIVOT_M then
			addz -gs_sash_thk
		else
			addz -gs_frame_thk
		endif
	endif
else
	if lod3D <> 1 & lod3D <> 5 then
		addz -gs_rebate_depth
	endif
endif

if lod3D = 1 | lod3D = 5 then
	vgn = 0
	hgn = 0

	if iMullionStyle = MULLION_CUSTOM then
		iMullionStyle = MULLION_NONE
	endif

	gs_full_edit = 0
endif


! =============================================================================
! 3D Window Model
! =============================================================================

sect_fill gs_fillSash, gs_penSash_bg, gs_penSash_fg, gs_frame_pen_cont
resol res


! =============================================================================
! Frame Model
! =============================================================================

var_mater		= gs_frame_mat	! Sash front material
var_mater2		= gs_frame_mat2	! Sash back material
var_mater_side	= gs_frame_mat	! Sash side material

if gs_frame_mat = gs_frame_mat2 then
	in_out_cikl = 1

	out_thk = 0
	part_thk = gs_sash_thk

	in_out_mask = 15
	in_out_mask2 = 13 + 2 * (gs_SashText_typ_num = 1)
	in_out_mask3 = 13 + 2 * (gs_SashText_typ_num = 1)
else												! two bodies
	in_out_cikl = 2

	if not(bOpeningDirectionInside) then
		tempMat = var_mater
		var_mater = var_mater2
		var_mater2 = tempMat

		var_mater_side	= gs_frame_mat2
	else
		var_mater_side	= gs_frame_mat
	endif

	if	gs_optype_m = SASH_SLIDING_HOR |\
		gs_optype_m = SASH_SLIDING_HOR_M |\
		gs_optype_m = SASH_DOUBLE_SLIDING_HOR |\
		gs_optype_m = SASH_DOUBLE_SLIDING_HOR_M |\
		gs_optype_m = SASH_SLIDING_VER |\
		gs_optype_m = SASH_DOUBLE_SLIDING_VER then

		if bSecondSash exor not(bOpeningDirectionInside) then
			var_mater_side	= gs_frame_mat2
		else
			var_mater_side	= gs_frame_mat
		endif
	endif

	if	gs_optype_m = SASH_SLIDING_HOR_M |\
		gs_optype_m = SASH_DOUBLE_SLIDING_HOR_M then

		if bSecondSash exor not(bOpeningDirectionInside) then
			var_mater_side	= gs_frame_mat
		else
			var_mater_side	= gs_frame_mat2
		endif
	endif

	out_thk = gs_sash_thk/2 - gs_glass_thk/2
	part_thk = out_thk

	in_out_mask = 11
	in_out_mask2 = 9
	in_out_mask3 = 9 + 2 * (gs_SashText_typ_num = 1)
endif

if iMullionStyle <> MULLION_CUSTOM & iMullionStyle <> MULLION_SOLID_PANEL then

	pen gs_frame_pen
	material gs_frame_mat

	if gs_optype_m <> SASH_FIXED then

		! Calculations
		lit_tri_x = a - gs_frame_width
		lit_tri_y = b - gs_frame_width

		start_angle = atn(lit_tri_y / lit_tri_x)
		hur_length = sqr( lit_tri_x^2 + lit_tri_y^2 )

		R_outer = (hur_length/2) / cos(start_angle)

		for ijk = 1 to in_out_cikl
			material var_mater

			if gs_SashText_typ_num = 1 then
				base
				sprism_{2} var_mater2,var_mater2,var_mater2,
					4,
					0,0, 0,1, 0, 0,
					0,0, 0,1, part_thk, 0,
					 a/2,			0,	10,	var_mater,
					 a/2-gs_frame_width,	gs_frame_width,	15,	var_mater,
					-a/2+gs_frame_width,	gs_frame_width,	10,	var_mater,
					-a/2,			0,	15,	var_mater
				vert 0, 0, 0
				vert 1, 0, 0
				vert 0, 1, 0
				vert 0, 0, 1
				coor 5, -1, -2, -3, -4
				body 1

				base
				sprism_{2} var_mater2,var_mater2,var_mater2,
					8,
					0,0, 0,1, 0, 0,
					0,0, 0,1, part_thk, 0,
					 a/2-gs_frame_width,		gs_frame_width,		79,		var_mater,
					0,1,											800,	var_mater,
					-a/2+gs_frame_width,		b-gs_frame_width,	1010,	var_mater,
					-a/2,				b,			15,		var_mater,
					-a/2+gs_frame_width,		b,			79,		var_mater,
					 a/2-R_outer,		gs_frame_width,		979,	var_mater,
					 a/2,				gs_frame_width,		3013,	var_mater,
					 a/2,				0,		10,		var_mater
				vert 0, 0, 0
				vert -1, 1, 0
				vert 1, 0, 0
				vert 0, 0, 1
				coor 5, -1, -2, -3, -4
				body 1

				base
				sprism_{2} var_mater2,var_mater2,var_mater2,
					4,
					0,0, 0,1, 0, 0,
					0,0, 0,1, part_thk, 0,
					-a/2+gs_frame_width,	gs_frame_width,		10,	var_mater,
					-a/2,			0,		15,	var_mater,
					-a/2,			b,			10,	var_mater,
					-a/2+gs_frame_width,	b-gs_frame_width,	15,	var_mater
				vert 0, 0, 0
				vert 0, 1, 0
				vert 1, 0, 0
				vert 0, 0, 1
				coor 5, -1, -2, -3, -4
				body 1

			endif

			if gs_SashText_typ_num = 2 then

				base
				sprism_{2} var_mater2,var_mater2,var_mater2,
					6,
					0,0, 0,1, 0, 0,
					0,0, 0,1, part_thk, 0,
					 a/2,			gs_frame_width,	8,	var_mater,
					 a/2-gs_frame_width,	gs_frame_width,	15,	var_mater,
					-a/2+gs_frame_width,	gs_frame_width,	10,	var_mater,
					-a/2,			gs_frame_width,	13,	var_mater,
					-a/2,			0,	15,	var_mater,
					 a/2,			0,	15,	var_mater

				vert 0, 0, 0
				vert 1, 0, 0
				vert 0, 1, 0
				vert 0, 0, 1
				coor 5, -1, -2, -3, -4
				body 1

				base
				sprism_{2} var_mater2,var_mater2,var_mater2,
					6,
					0,0, 0,1, 0, 0,
					0,0, 0,1, part_thk, 0,
					a/2-gs_frame_width,		gs_frame_width,		79,			var_mater,
					0,1,										800,		var_mater,
					-a/2+gs_frame_width,	b-gs_frame_width,	1008,		var_mater,
					-a/2+gs_frame_width,	b,			79,			var_mater,
					 a/2-R_outer,	gs_frame_width,		979,		var_mater,
					 a/2,			gs_frame_width,		3008,		var_mater
				vert 0, 0, 0
				vert -1, 1, 0
				vert 1, 0, 0
				vert 0, 0, 1
				coor 5, -1, -2, -3, -4
				body 1

				base
				sprism_{2} var_mater2,var_mater2,var_mater2,
					5,
					0,0, 0,1, 0, 0,
					0,0, 0,1, part_thk, 0,
					-a/2+gs_frame_width,		gs_frame_width,		10,	var_mater,
					-a/2,				gs_frame_width,		13,	var_mater,
					-a/2,				b,			15,	var_mater,
					-a/2+gs_frame_width,		b,			8,	var_mater,
					-a/2+gs_frame_width,		b-gs_frame_width,	15,	var_mater
				vert 0, 0, 0
				vert 0, 1, 0
				vert 1, 0, 0
				vert 0, 0, 1
				coor 5, -1, -2, -3, -4
				body 1

			endif


			addz part_thk
			part_thk = gs_frame_thk - out_thk

			tempMat = var_mater
			var_mater = var_mater2
			var_mater2 = tempMat

			in_out_mask = 78

		next ijk

		del in_out_cikl

		body -1

	endif


! =============================================================================
! Glazing
! =============================================================================

	pen gs_glass_pen
	material gs_glass_mat

	if gs_optype_m <> SASH_FIXED then
		if lod3d = 5 then	!!chinese
			addz -gs_sash_thk
			gl_chi_thk = gs_sash_thk
			gl_chi_mask = 13
		else
			if lod3D = 1 then	! Simple
				addz -gs_frame_thk/2 - gs_glass_thk/2
			else
				addz gs_sash_thk/2-gs_glass_thk/2
			endif
			gl_chi_thk = gs_glass_thk
			gl_chi_mask = 5
		endif
	else
		if lod3D = 5 then	! Chinese
			addz -gs_frame_thk
			gl_chi_thk = gs_frame_thk
			gl_chi_mask = 13
		else
			if lod3D = 1 then	! Simple
				addz -gs_frame_thk/2 - gs_glass_thk/2
			else
				addz -gs_rebate_depth - gs_glass_thk/2
			endif
			gl_chi_thk = gs_glass_thk
			gl_chi_mask = 5
		endif
	endif

	body -1

	prism_ 6,gl_chi_thk,
		-a/2+gs_frame_width,					gs_frame_width,gl_chi_mask,
		 a/2-gs_frame_width+0.000015,			gs_frame_width,gl_chi_mask,
		 a/2-gs_frame_width,					gs_frame_width,gl_chi_mask,
		 0,1,800,
		-a/2+gs_frame_width,					b-gs_frame_width,1000+gl_chi_mask,
		-a/2+gs_frame_width,					gs_frame_width,-1
	body -1

	del 1

	if iMullionStyle = MULLION_NONE then end


! =============================================================================
! Grids
! =============================================================================

	if lod3D <> 1 & lod3D <> 5 then
		if gs_grill_mat = gs_grill_mat2 then				! One body, in case of similar materials
			in_out_cikl_gr		= 1

			var_mater_grill		= gs_grill_mat
			var_mater2_grill	= gs_grill_mat

			part_thk_grill		= gth
			out_thk_grill		= 0
		else
			! Inner-outer Material Control -----------
			temp_grill_mat	= gs_grill_mat
			temp_grill_mat2	= gs_grill_mat2
			if not(bOpeningDirectionInside) then
				gs_grill_mat	= temp_grill_mat
				gs_grill_mat2	= temp_grill_mat2
			else
				gs_grill_mat	= temp_grill_mat2
				gs_grill_mat2	= temp_grill_mat
			endif
			! ----------------------------------------

			var_mater_grill		= gs_grill_mat
			var_mater2_grill	= gs_grill_mat2

			if iMullionPosition = MULLION_INSIDE or iMullionPosition = MULLION_OUTSIDE or (iMullionPosition = MULLION_THROUGHOUT and gs_glass_thk>=gth ) then		! Inside, Outside position
				in_out_cikl_gr	= 1
				out_thk_grill	= gth
				part_thk_grill	= out_thk_grill
			else									! Throughout position
				in_out_cikl_gr	= 2
				out_thk_grill	= gth/2 - gs_glass_thk/2
				part_thk_grill	= out_thk_grill
			endif
		endif

		if iMullionPosition = MULLION_INSIDE then
			side_mat = var_mater2_grill
		else
			side_mat = var_mater_grill
		endif

		material gs_grill_mat

		if iMullionPosition = MULLION_THROUGHOUT then
			gz = (gs_optype_m <> SASH_FIXED) * gs_sash_thk/2 - gth/2
		else
			if (iMullionPosition = MULLION_INSIDE) exor not(bOpeningDirectionInside) then
				gz = (gs_optype_m <> SASH_FIXED) * gs_sash_thk/2 + gs_glass_thk/2
			else
				gz = (gs_optype_m <> SASH_FIXED) * gs_sash_thk/2 - gs_glass_thk/2 - gth
			endif
		endif
		gz = gz - (gs_optype_m = SASH_FIXED) * gs_rebate_depth



		if gw < EPS then gw = EPS

		pen gs_sash_pen
		material gs_grill_mat

		gsp=((a-2*gs_frame_width)-(2*gw))/3     !radial grids at 1/3 of window pane


		for ijk = 1 to in_out_cikl_gr


			!!1 spoke!!

			if iMullionStyle = MULLION_SUNBURST_1 then

				! Cut Plane angle calculation for radial grids

				beta=360/res
				gamma=90
				ns=int(gamma/beta)
				if gamma/beta-int(gamma/beta)>=0.5 then ns=ns+1
				beta1=gamma/ns
				dev=(a-2*gs_frame_width)-(a-2*gs_frame_width)*cos(beta1/2)

				!radial grids cut
				add -a/2+gs_frame_width,gs_frame_width,0
				rotz beta1/2
				for i=1 to ns step 1
					addx a-2*gs_frame_width-dev
					cutplane 0,1,1,0
					del 1
					rotz beta1
				next i
				del ns+2

				add -a/2+gs_frame_width,gs_frame_width,gz
				!!!	prism_ 6,gth,
				sprism_ var_mater2_grill,var_mater_grill,side_mat,
					6,
					0,0, 0,1, part_thk_grill, 0,
					 0,0,15,
					 gw*cos(45),0,15,
					 a*cos(45)+gw*cos(45),a*sin(45),15,
					 a*cos(45),a*sin(45)+gw*sin(45),15,
					 0,gw*sin(45),15,
					 0,0,-1
				del 1

				for i=1 to ns step 1
					cutend
				next i

			endif



			!!2 spokes!!

			if iMullionStyle = MULLION_SUNBURST_2 then

				! Cut Plane angle calculation for radial grids

				beta=360/res
				gamma=90
				ns=int(gamma/beta)
				if gamma/beta-int(gamma/beta)>=0.5 then ns=ns+1
				beta1=gamma/ns
				dev=(a-2*gs_frame_width)-(a-2*gs_frame_width)*cos(beta1/2)

				!radial grids cut
				add -a/2+gs_frame_width,gs_frame_width,0
				rotz beta1/2
				for i=1 to ns step 1
					addx a-2*gs_frame_width-dev
					cutplane 0,1,1,0
					del 1
					rotz beta1
				next i
				del ns+2

				add -a/2+gs_frame_width,gs_frame_width,gz
				!!!	prism_ 5,gth,
				sprism_ var_mater2_grill,var_mater_grill,side_mat,
					5,
					0,0, 0,1, part_thk_grill, 0,
					 0,0,15,
					 gw/sin(30),0,15,
					 a*cos(30)+gw*sin(30),a*sin(30)-gw*cos(30),15,
					 a*cos(30),a*sin(30),15,
					 0,0,-1
				!!!	prism_ 5,gth,
				sprism_ var_mater2_grill,var_mater_grill,side_mat,
					5,
					0,0, 0,1, part_thk_grill, 0,
					 0,0,15,
					 0,gw/sin(30),15,
					 a*sin(30)-gw*cos(30),a*cos(30)+gw*sin(30),15,
					 a*sin(30),a*cos(30),15,
					 0,0,-1
				del 1

				for i=1 to ns step 1
				cutend
				next i

			endif



			!!3 spokes/1 band!!

			if iMullionStyle = MULLION_SUNBURST_3 then

				! Cut Plane angle calculation for radial grids

				beta=360/res
				gamma=90
				ns=int(gamma/beta)
				if gamma/beta-int(gamma/beta)>=0.5 then ns=ns+1
				beta1=gamma/ns
				dev=(a-2*gs_frame_width)-(a-2*gs_frame_width)*cos(beta1/2)

				add -a/2+gs_frame_width,gs_frame_width,gz
				cutpolya 6,1,0,
					gsp+gw,0,79,
					0,1,800,
					-gsp-gw,0,1079,
					0,-1,800,
					gsp+gw,0,1079,
					gsp+gw,0,-1
				del 1


				!radial grids cut
				add -a/2+gs_frame_width,gs_frame_width,0
				rotz beta1/2
				for i=1 to ns step 1
					addx a-2*gs_frame_width-dev
					cutplane 0,1,1,0
					del 1
					rotz beta1
				next i
				del ns+2

				add -a/2+gs_frame_width,gs_frame_width,gz
				!!!	prism_ 5,gth,
				sprism_ var_mater2_grill,var_mater_grill,side_mat,
					5,
					0,0, 0,1, part_thk_grill, 0,
					 gw*sin(45),0,15,
					 gw*sin(45)+gw/sin(22.5),0,15,
					 gw*sin(45)+a*cos(22.5)+gw*sin(22.5),a*sin(22.5)-gw*cos(22.5),15,
					 gw*sin(45)+a*cos(22.5),a*sin(22.5),15,
					 gw*sin(45),0,-1
				!!!	prism_ 6,gth,
				sprism_ var_mater2_grill,var_mater_grill,side_mat,
					6,
					0,0, 0,1, part_thk_grill, 0,
					 0,0,15,
					 gw*cos(45),0,15,
					 a*cos(45)+gw*cos(45),a*sin(45),15,
					 a*cos(45),a*sin(45)+gw*sin(45),15,
					 0,gw*sin(45),15,
					 0,0,-1
				!!!	prism_ 5,gth,
				sprism_ var_mater2_grill,var_mater_grill,side_mat,
					5,
					0,0, 0,1, part_thk_grill, 0,
					 0,gw*sin(45),15,
					 0,gw*sin(45)+gw/sin(22.5),15,
					 a*sin(22.5)-gw*cos(22.5),gw*sin(45)+a*cos(22.5)+gw*sin(22.5),15,
					 a*sin(22.5),gw*sin(45)+a*cos(22.5),15,
					 0,gw*sin(45),-1
				del 1

				for i=1 to ns step 1
				cutend
				next i

				cutend

				!!curved grid!!

				add -a/2+gs_frame_width,gs_frame_width,gz
				!!!	prism_ 8,gth,
				sprism_ var_mater2_grill,var_mater_grill,side_mat,
					8,
					0,0, 0,1, part_thk_grill, 0,
					gsp,0,15,
					gsp+gw,0,79,
					0,1,800,
					0,gsp+gw,1079,
					0,gsp,79,
					1,0,800,
					gsp,0,1079,
					gsp,0,-1
				del 1

			endif



			!!3 spokes/2 bands!!

			if iMullionStyle = MULLION_SUNBURST_4 then

				! Cut Plane angle calculation for radial grids

				beta=360/res
				gamma=90
				ns=int(gamma/beta)
				if gamma/beta-int(gamma/beta)>=0.5 then ns=ns+1
				beta1=gamma/ns
				dev=(a-2*gs_frame_width)-(a-2*gs_frame_width)*cos(beta1/2)

				!radial grids cut
				add -a/2+gs_frame_width,gs_frame_width,0
				rotz beta1/2
				for i=1 to ns step 1
					addx a-2*gs_frame_width-dev
					cutplane 0,1,1,0
					del 1
					rotz beta1
				next i
				del ns+2

				add -a/2+gs_frame_width,gs_frame_width,gz
				!!!	prism_ 5,gth,
				sprism_ var_mater2_grill,var_mater_grill,side_mat,
					5,
					0,0, 0,1, part_thk_grill, 0,
					 gw*sin(45),0,15,
					 gw*sin(45)+gw/sin(22.5),0,15,
					 gw*sin(45)+a*cos(22.5)+gw*sin(22.5),a*sin(22.5)-gw*cos(22.5),15,
					 gw*sin(45)+a*cos(22.5),a*sin(22.5),15,
					 gw*sin(45),0,-1
				!!!	prism_ 6,gth,
				sprism_ var_mater2_grill,var_mater_grill,side_mat,
					6,
					0,0, 0,1, part_thk_grill, 0,
					 0,0,15,
					 gw*cos(45),0,15,
					 a*cos(45)+gw*cos(45),a*sin(45),15,
					 a*cos(45),a*sin(45)+gw*sin(45),15,
					 0,gw*sin(45),15,
					 0,0,-1
				!!!	prism_ 5,gth,
				sprism_ var_mater2_grill,var_mater_grill,side_mat,
					5,
					0,0, 0,1, part_thk_grill, 0,
					 0,gw*sin(45),15,
					 0,gw*sin(45)+gw/sin(22.5),15,
					 a*sin(22.5)-gw*cos(22.5),gw*sin(45)+a*cos(22.5)+gw*sin(22.5),15,
					 a*sin(22.5),gw*sin(45)+a*cos(22.5),15,
					 0,gw*sin(45),-1
				del 1

				for i=1 to ns step 1
				cutend
				next i



				!!curved grid!!

				add -a/2+gs_frame_width,gs_frame_width,gz
				cutpolya 5,1,0,
					 gw*sin(45),0,15,
					 gw*sin(45)+gw/sin(22.5),0,15,
					 gw*sin(45)+a*cos(22.5)+gw*sin(22.5),a*sin(22.5)-gw*cos(22.5),15,
					 gw*sin(45)+a*cos(22.5),a*sin(22.5),15,
					 gw*sin(45),0,-1
				cutpolya 6,1,0,
					 0,0,15,
					 gw*cos(45),0,15,
					 a*cos(45)+gw*cos(45),a*sin(45),15,
					 a*cos(45),a*sin(45)+gw*sin(45),15,
					 0,gw*sin(45),15,
					 0,0,-1
				cutpolya 5,1,0,
					 0,gw*sin(45),15,
					 0,gw*sin(45)+gw/sin(22.5),15,
					 a*sin(22.5)-gw*cos(22.5),gw*sin(45)+a*cos(22.5)+gw*sin(22.5),15,
					 a*sin(22.5),gw*sin(45)+a*cos(22.5),15,
					 0,gw*sin(45),-1
				del 1


				add -a/2+gs_frame_width,gs_frame_width,gz
				!!!	prism_ 8,gth,
				sprism_ var_mater2_grill,var_mater_grill,side_mat,
					8,
					0,0, 0,1, part_thk_grill, 0,
					gsp,0,15,
					gsp+gw,0,79,
					0,1,800,
					0,gsp+gw,1079,
					0,gsp,79,
					1,0,800,
					gsp,0,1079,
					gsp,0,-1
				sprism_ var_mater2_grill,var_mater_grill,side_mat,
					8,
					0,0, 0,1, part_thk_grill, 0,
					gsp+gw+gsp,0,15,
					gsp+gw+gsp+gw,0,79,
					0,1,800,
					0,gsp+gw+gsp+gw,1079,
					0,gsp+gw+gsp,79,
					1,0,800,
					gsp+gw+gsp,0,1079,
					gsp+gw+gsp,0,-1
				del 1

				cutend
				cutend
				cutend

			endif


			addz part_thk_grill

			part_thk_grill = gth - out_thk_grill

				var_mater_grill = gs_grill_mat2
				var_mater2_grill = gs_grill_mat2
				side_mat = gs_grill_mat2

		next ijk
		del in_out_cikl_gr
	endif
endif

! =============================================================================
! Solid Panel
! =============================================================================

if iMullionStyle = MULLION_SOLID_PANEL then

	if lod3d = 5 then	!!chinese
		gl_chi_mask = 13
	else
		gl_chi_mask = 15
	endif

	sprism_{2} gs_panel_mat2, gs_panel_mat,gs_panel_mat,
		6,
		0,0, 0,1, 0, 0,
		0,0, 0,1, gs_sash_thk, 0,
		-a/2+gs_frame_width,					gs_frame_width,gl_chi_mask,gs_panel_mat2,
		 a/2-gs_frame_width+0.000015,			gs_frame_width,gl_chi_mask,gs_panel_mat2,
		 a/2-gs_frame_width,					gs_frame_width,gl_chi_mask,gs_panel_mat2,
		 0,1,800,gs_panel_mat2,
		-a/2+gs_frame_width,					b-gs_frame_width,1000+gl_chi_mask,gs_panel_mat2,
		-a/2+gs_frame_width,					gs_frame_width,-1,gs_panel_mat2

	del 1
endif

! =============================================================================
! Custom Panel
! =============================================================================

if iMullionStyle = MULLION_CUSTOM & gs_cust_panel <> "" then

	cutpolya	8, 1, 0,
		 A/2 + 1,	gs_frame_width, 31,
		 A/2 + 1,	B + 1, 31,
		-A/2 - 1,	B + 1, 31,
		-A/2 - 1,	gs_frame_width, 31,
		-A/2 + gs_frame_width,	gs_frame_width, 31,
		-A/2 + gs_frame_width,	B - gs_frame_width, 95,
		 1,0,					895,
		 A/2-gs_frame_width,	gs_frame_width,	1031

	if gs_optype_m = SASH_FIXED then
		addz -gs_rebate_depth - gs_glass_thk/2
		panelThk = gs_glass_thk
	else
		panelThk = gs_sash_thk
	endif

	add -A/2+gs_frame_width, gs_frame_width, 0
	call "Window_Panel_Collection" parameters a=a-2*gs_frame_width, b=b-2*gs_frame_width, zzyzx=panelThk, gs_ptype=gs_cust_panel
	del 1

	if gs_optype_m = SASH_FIXED then del 1

	cutend
endif

