
dim	_actHorgrid[][]
dim	_actVergrid[][]
dim _verGridOrder[]

unID=sh_unID
bEnableSEOpening = GLOB_CONTEXT <> 4 & GLOB_CONTEXT <> 6

if gs_fillSash < 0.5 then gs_fillSash = SYMB_FILL
if gs_penSash_bg < 0.5 then gs_penSash_bg = SYMB_FBGD_PEN
if gs_penSash_fg < 0.5 then gs_penSash_fg = SYMB_FILL_PEN

if not(gs_shadow) then shadow off

if GLOB_CONTEXT = 6 then	! Window Schedule - 3D view should NOT display sash in open position
	opa = 0
	opa2 = 0
	owning = 0
endif

eloj_ref = -1

!! Open the Window!...............................................

if gs_full_edit then

!.......................................................................
	if rots=1 then 		!side-hung left
		addx	-a/2
		addy 	b/2
		rotx -90

	addy -gs_sash_thk/2
		if bEnableSEOpening then
			hotspot a,											-gs_sash_thk/2,								0, unID, opa_d, 4+128 : unID=unID+1
			hotspot 0,											0,											-1*eloj_ref, 			 unID, opa_d, 7 : unID=unID+1
			hotspot a*sin(90+opa)+gs_sash_thk/2*cos(90+opa),a*cos(90+opa)-gs_sash_thk/2*sin(90+opa),0, unID, opa_d, 5 : unID=unID+1
			hotspot 0, 											0, 											0, unID, opa_d, 6 : unID=unID+1
		endif
	del 1
		del 2

		if opa>90 then opa=0

		if opa<>0 then
			addz gs_rebate_depth
			roty -opa
			addz -gs_rebate_depth
		endif

		addx a/2
	endif
!.......................................................................
	if rots=2 then	!top-hung
		addy b
		rotz 	-90
		rotx	-90

	addy -gs_sash_thk/2
		if bEnableSEOpening then
			hotspot b,											-gs_sash_thk/2,								0, unID, opa_d, 4+128 : unID=unID+1
			hotspot 0,											0,											-1*eloj_ref, 			 unID, opa_d, 7 : unID=unID+1
			hotspot b*sin(90+opa)+gs_sash_thk/2*cos(90+opa),b*cos(90+opa)-gs_sash_thk/2*sin(90+opa),0, unID, opa_d, 5 : unID=unID+1
			hotspot 0, 											0, 											0, unID, opa_d, 6 : unID=unID+1
		endif
	del 1

		del 2

		if opa>90 then opa=0

		if opa<>0 then
			addz gs_rebate_depth
			rotx -opa
			addz -gs_rebate_depth
		endif

		addy -b
	endif
!.....................................................................
	if rots=3 then	!side-hung right
		mulx -1
		addx	-a/2
		addy 	b/2
		rotx -90
		addy -gs_sash_thk/2
		if bEnableSEOpening then
			hotspot a,											-gs_sash_thk/2,								0, unID, opa_d, 4+128 : unID=unID+1
			hotspot 0,											0,											1*eloj_ref, 			 unID, opa_d, 7 : unID=unID+1
			hotspot a*sin(90+opa)+gs_sash_thk/2*cos(90+opa),a*cos(90+opa)-gs_sash_thk/2*sin(90+opa),0, unID, opa_d, 5 : unID=unID+1
			hotspot 0, 											0, 											0, unID, opa_d, 6 : unID=unID+1
		endif
	del 1

		del 2

		if opa>90 then opa=0

		if opa<>0 then
			addz gs_rebate_depth
			roty -opa
			addz -gs_rebate_depth
		endif

		addx a/2
		mulx -1
	endif
!.......................................................................
	if rots=4 then	!bottom-hung
		muly	-1
		rotz 	-90
		rotx	-90

	addy -gs_sash_thk/2
		if bEnableSEOpening then
			hotspot b,											-gs_sash_thk/2,								0, unID, opa_d, 4+128 : unID=unID+1
			hotspot 0,											0,											1*eloj_ref, 			 unID, opa_d, 7 : unID=unID+1
			hotspot b*sin(90+opa)+gs_sash_thk/2*cos(90+opa),b*cos(90+opa)-gs_sash_thk/2*sin(90+opa),0, unID, opa_d, 5 : unID=unID+1
			hotspot 0, 											0, 											0, unID, opa_d, 6 : unID=unID+1
		endif
	del 1

		del 2

		if opa>90 then opa=0

		if opa<>0 then
			addz gs_rebate_depth
			rotx -opa
			addz -gs_rebate_depth
		endif

		muly	-1
	endif
!................................................................
	if rots=10 then	!Reversible
		addy b/2
		rotx	-90
		addy	gs_sash_thk/2

		if bEnableSEOpening then
			hotspot gs_sash_thk*sin(135)+a/2*sin(90), gs_sash_thk*cos(135)+a/2*cos(90), 0, unID, opa_d, 4+128 : unID=unID+1
			hotspot gs_sash_thk*sin(90)+a/2*sin(0), gs_sash_thk*cos(90)+a/2*cos(0), 0, unID, opa_d, 7 : unID=unID+1
			hotspot gs_sash_thk*sin(180+opa)+a/2*sin(90+opa), gs_sash_thk*cos(180+opa)+a/2*cos(90+opa), 0, unID, opa_d, 5 : unID=unID+1
			hotspot 0, -gs_sash_thk, 0, unID, opa_d, 6 : unID=unID+1
		endif

		del 2

		if opa>90 then opa=0

		if opa<>0 then
			addz gs_rebate_depth
			roty -opa
			addz -gs_rebate_depth
		endif

		addy -b/2
	endif
!................................................................
	if rots=16 then	!Reversible Mirrored
		addy b/2
		rotx	-90
		addy	gs_sash_thk/2

		if bEnableSEOpening then
			hotspot gs_sash_thk*sin(135)-a/2*sin(90), gs_sash_thk*cos(135)+a/2*cos(90), (0), unID, opa_d, 4+128 : unID=unID+1
			hotspot gs_sash_thk*sin(90)-a/2*sin(0), gs_sash_thk*cos(90)+a/2*cos(0), 0, unID, opa_d, 7 : unID=unID+1
			hotspot gs_sash_thk*sin(180+opa)-a/2*sin(90+opa), gs_sash_thk*cos(180+opa)+a/2*cos(90+opa), (0), unID, opa_d, 5 : unID=unID+1
			hotspot 0, -gs_sash_thk, 0, unID, opa_d, 6 : unID=unID+1
		endif

		del 2

!		if opa>180 then opa=0

		if opa<>0 then
			addz gs_rebate_depth
			roty opa
			addz -gs_rebate_depth
		endif

		addy -b/2
	endif


!........................................................................
	if rots=5 then	! Sliding left
		hotspot a/2, b/2, 0, unID, owning_d, 1+128 : unID=unID+1
		hotspot 2*a, b/2, 0, unID, owning_d, 3 : unID=unID+1
		hotspot a/2-owning, b/2, 0, unID, owning_d, 2 : unID=unID+1

		if owning>owlen then owning=owlen
		if owning<0 then owning=0

		addx -owning
	endif
!.........................................................
	if rots=7 then	! Sliding right
		hotspot -a/2, b/2, 0, unID, owning_d, 1+128 : unID=unID+1
		hotspot -a, b/2, 0, unID, owning_d, 3 : unID=unID+1
		hotspot -a/2+owning, b/2, 0, unID, owning_d, 2 : unID=unID+1

		if owning>owlen then owning=owlen
		if owning<0 then owning=0

		addx owning
	endif
!...............................................................
	if rots=6 then	! Sliding up
		hotspot 0, 0, 0, unID, owning_d, 1+128 : unID=unID+1
		hotspot 0, -1, 0, unID, owning_d, 3 : unID=unID+1
		hotspot 0, owning, 0, unID, owning_d, 2 : unID=unID+1

		if owning>owlen then owning=owlen
		if owning<0 then owning=0

		addy owning
	endif
!......................................................................
	if rots=8 then	! Sliding down
		hotspot 0, b, 0, unID, owning_d, 1+128 : unID=unID+1
		hotspot 0, b+1, 0, unID, owning_d, 3 : unID=unID+1
		hotspot 0, b-owning, 0, unID, owning_d, 2 : unID=unID+1

		if owning>owlen then owning=owlen
		if owning<0 then owning=0

		addy -owning
	endif
!......................................................................
	if rots=30 then		! tilt-turn left

		addx	-a/2
		addy 	b/2
		rotx -90

		addy	-gs_sash_thk/2

		if bEnableSEOpening then
			hotspot a,											-gs_sash_thk/2,								0, unID, opa_d, 4+128 : unID=unID+1
			hotspot 0,											0,											-1*eloj_ref, 			 unID, opa_d, 7 : unID=unID+1
			hotspot a*sin(90+opa)+gs_sash_thk/2*cos(90+opa),a*cos(90+opa)-gs_sash_thk/2*sin(90+opa),0, unID, opa_d, 5 : unID=unID+1
			hotspot 0, 											0, 											0, unID, opa_d, 6 : unID=unID+1
		endif

		del 1

		del 3


		muly	-1
		rotz 	-90
		rotx	-90

		addy	-gs_sash_thk/2

		if bEnableSEOpening then
			hotspot b,											-gs_sash_thk/2,								0, unID, opa_d2, 4+128 : unID=unID+1
			hotspot 0,											0,											1*eloj_ref, 			 unID, opa_d2, 7 : unID=unID+1
			hotspot b*sin(90+opa2)+gs_sash_thk/2*cos(90+opa2),b*cos(90+opa2)-gs_sash_thk/2*sin(90+opa2),0, unID, opa_d2, 5 : unID=unID+1
			hotspot 0, 											0, 											0, unID, opa_d2, 6 : unID=unID+1
		endif

		del 1

		del 3



		if abs(opa2) > EPS then
		muly	-1

			if opa2>90 then opa2=0
			if opa2<>0 then

			addz gs_rebate_depth
			rotx -opa2
			addz -gs_rebate_depth

			endif
			muly	-1
		endif


		if opa <> 0 then
			addx	-a/2

			if opa>90 then opa=0
			if opa<>0 then

			addz gs_rebate_depth
			roty -opa
			addz -gs_rebate_depth

			endif
			addx a/2
		endif
	endif

!......................................................................
	if rots=31 then		! tilt-turn right

		mulx -1
		addx	-a/2
		addy 	b/2
		rotx -90

		addy	-gs_sash_thk/2

		if bEnableSEOpening then
			hotspot a,											-gs_sash_thk/2,								0, unID, opa_d, 4+128 : unID=unID+1
			hotspot 0,											0,											1*eloj_ref, 			 unID, opa_d, 7 : unID=unID+1
			hotspot a*sin(90+opa)+gs_sash_thk/2*cos(90+opa),a*cos(90+opa)-gs_sash_thk/2*sin(90+opa),0, unID, opa_d, 5 : unID=unID+1
			hotspot 0, 											0, 											0, unID, opa_d, 6 : unID=unID+1
		endif

		del 1

		del 4


		muly	-1
		rotz 	-90
		rotx	-90

		addy	-gs_sash_thk/2

		if bEnableSEOpening then
			hotspot b,											-gs_sash_thk/2,								0, unID, opa_d2, 4+128 : unID=unID+1
			hotspot 0,											0,											1*eloj_ref, 			 unID, opa_d2, 7 : unID=unID+1
			hotspot b*sin(90+opa2)+gs_sash_thk/2*cos(90+opa2),b*cos(90+opa2)-gs_sash_thk/2*sin(90+opa2),0, unID, opa_d2, 5 : unID=unID+1
			hotspot 0, 											0, 											0, unID, opa_d2, 6 : unID=unID+1
		endif

		del 1

		del 3



		if opa2 <> 0 then
		muly	-1

			if opa2>90 then opa2=0
			if opa2<>0 then

			addz gs_rebate_depth
			rotx -opa2
			addz -gs_rebate_depth

			endif
			muly	-1
		endif


		if opa <> 0 then
			mulx -1
			addx	-a/2

			if opa>90 then opa=0
			if opa<>0 then

			addz gs_rebate_depth
			roty -opa
			addz -gs_rebate_depth

			endif
			addx a/2
			mulx -1
		endif
	endif
endif


!! EndOpen; nO of extra transformation: 5.  see label 123

!! FRAME !!

if gs_penSash_fg < 0.5 then gs_penSash_fg = SYMB_FILL_PEN

sect_fill gs_fillSash, gs_penSash_bg, gs_penSash_fg, gs_frame_pen_cont


if not(ctreed) then     ! Detailed 3D

	if iMullionStyle <> MULLION_CUSTOM & iMullionStyle <> MULLION_SOLID_PANEL then		! Don't draw in case of Custom Panel and Solid Panel

		! ________________Handling Inner-outer Sash_____________________
		if gs_frame_mat = gs_frame_mat2 then				! One body, in case of similar materials
			in_out_cikl = 1

			gs_frame_mat2 = gs_frame_mat

			out_thk = 0
			part_thk =gs_sash_thk

			in_out_mask = 15
			in_out_mask2 = 13
		else												! two bodies
			in_out_cikl = 2

			! Inner-outer Material Control
			if WIDO_REVEAL_SIDE then
				temp_frame_mat = gs_frame_mat
				gs_frame_mat = gs_frame_mat2
				gs_frame_mat2 = temp_frame_mat
			endif

			out_thk = gs_sash_thk/2-gs_glass_thk/2
			part_thk = out_thk

			in_out_mask = 11
			in_out_mask2 = 9

		endif
		var_mater = gs_frame_mat
		var_mater2 = gs_frame_mat2


		! ________________Handling Inner-outer Grill_____________________
		if gs_grill_mat = gs_grill_mat2 then				! One body, in case of similar materials
			in_out_cikl_gr = 1
			part_thk_grill = gth
		else
			! Inner-outer Material Control-----------
			if WIDO_REVEAL_SIDE then
				temp_grill_mat = gs_grill_mat
				gs_grill_mat = gs_grill_mat2
				gs_grill_mat2 = temp_grill_mat
			endif
			! ----------------------------------------

			if iMullionPosition = MULLION_INSIDE or iMullionPosition = MULLION_OUTSIDE or (iMullionPosition = MULLION_THROUGHOUT and gs_glass_thk>=gth ) then		!!Inside, Outside position
				in_out_cikl_gr = 1
				part_thk_grill = gth
			else									! Throughout position
				in_out_cikl_gr = 2
				out_thk_grill = gth/2 - gs_glass_thk/2
				part_thk_grill = out_thk_grill
			endif

		endif
		var_mater_grill = gs_grill_mat
		var_mater2_grill = gs_grill_mat2

		if iMullionPosition = MULLION_INSIDE then
			side_mat = var_mater_grill
		else
			side_mat = var_mater2_grill
		endif

		if rots <> 100 then		! Not Fixed

			sect_fill gs_fillSash, gs_penSash_bg, gs_penSash_fg, gs_frame_pen_cont

			pen gs_frame_pen
			material gs_frame_mat
			! Model Solid


			! ------------------------------------------------------------------------------
			! Mitered Joint
			! ------------------------------------------------------------------------------
			if gs_SashText_typ_num = 1 then

				for ijk = 1 to in_out_cikl
					material var_mater

					base
					sprism_{2} var_mater2,var_mater,var_mater2,
						4,			! part_thk,
						0,0, 0,1, 0, 0,
						0,0, 0,1, part_thk, 0,
						-a/2+lfw,bfw,							in_out_mask,	var_mater2,
						-a/2+lfw,b-tfw,							8,				var_mater2,
						-a/2+gs_sash_width,b-gs_sash_width,		in_out_mask,	var_mater2,
						-a/2+gs_sash_width,gs_sash_width,		8,				var_mater
					sprism_{2} var_mater2,var_mater,var_mater2,
						4,
						0,0, 0,1, 0, 0,
						0,0, 0,1, part_thk, 0,
						a/2-rfw,bfw,							in_out_mask,	var_mater2,
						a/2-rfw,b-tfw,							8,				var_mater2,
						a/2-gs_sash_width,b-gs_sash_width,		in_out_mask,	var_mater,
						a/2-gs_sash_width,gs_sash_width,		8,				var_mater2

					vert 0, 0, 0
					vert 0, 1, 0
					vert 1, 0, 0
					vert 0, 0, 1
					coor 2, -1, -2, -3, -4
					body 1

					base
					sprism_{2} var_mater2,var_mater,var_mater2,
						4,
						0,0, 0,1, 0, 0,
						0,0, 0,1, part_thk, 0,
						-a/2+lfw,bfw,							8,				var_mater2,
						-a/2+gs_sash_width,gs_sash_width,		in_out_mask,	var_mater2,
						a/2-gs_sash_width,gs_sash_width,		8,				var_mater,
						a/2-rfw,bfw,							in_out_mask,	var_mater2
					sprism_{2} var_mater2,var_mater,var_mater2,
						4,
						0,0, 0,1, 0, 0,
						0,0, 0,1, part_thk, 0,
						-a/2+lfw,b-tfw,							10,				var_mater2,
						-a/2+gs_sash_width,b-gs_sash_width,		in_out_mask,	var_mater,
						a/2-gs_sash_width,b-gs_sash_width,		8,				var_mater2,
						a/2-rfw,b-tfw,							in_out_mask,	var_mater2
					vert 0, 0, 0
					vert 1, 0, 0
					vert 0, 0, 1
					vert 0, 1, 0
					coor 2, -1, -2, -3, -4
					body 1

					addz part_thk
					part_thk= gs_sash_thk-out_thk

					var_mater = gs_frame_mat2
					var_mater2 = gs_frame_mat2

					in_out_mask = 14
				next ijk
				del in_out_cikl

			endif

			! ------------------------------------------------------------------------------
			! Butt Joint
			! ------------------------------------------------------------------------------
			if gs_SashText_typ_num = 2 then


				for ijk = 1 to in_out_cikl
					material var_mater


				base
					sprism_{2} var_mater2,var_mater,var_mater2,
						4,
						0,0, 0,1, 0, 0,
						0,0, 0,1, part_thk, 0,
						-a/2+lfw,gs_sash_width,					in_out_mask2,	var_mater2,
						-a/2+lfw,b-gs_sash_width,				8,				var_mater2,
						-a/2+gs_sash_width,b-gs_sash_width,		in_out_mask,	var_mater2,
						-a/2+gs_sash_width,gs_sash_width,		8,				var_mater
					sprism_{2} var_mater2,var_mater,var_mater2,
						4,
						0,0, 0,1, 0, 0,
						0,0, 0,1, part_thk, 0,
						a/2-rfw,gs_sash_width,					in_out_mask2,	var_mater2,
						a/2-rfw,b-gs_sash_width,				8,				var_mater2,
						a/2-gs_sash_width,b-gs_sash_width,		in_out_mask,	var_mater,
						a/2-gs_sash_width,gs_sash_width,		8,				var_mater2
				vert 0, 0, 0
				vert 0, 1, 0
				vert 1, 0, 0
				vert 0, 0, 1
				coor 2, -1, -2, -3, -4
				body 1

				base
					sprism_{2} var_mater2,var_mater,var_mater2,
						6,
						0,0, 0,1, 0, 0,
						0,0, 0,1, part_thk, 0,
						-a/2+lfw,bfw,							in_out_mask,	var_mater2,
						-a/2+lfw,gs_sash_width,					8,				var_mater2,
						-a/2+gs_sash_width,gs_sash_width,		in_out_mask,	var_mater2,
						a/2-gs_sash_width,gs_sash_width,		10,				var_mater,
						a/2-rfw,gs_sash_width,					in_out_mask2,	var_mater2,
						a/2-rfw,bfw,							in_out_mask,	var_mater2

					sprism_{2} var_mater2,var_mater,var_mater2,
						6,
						0,0, 0,1, 0, 0,
						0,0, 0,1, part_thk, 0,
						-a/2+lfw,b-tfw,							in_out_mask,	var_mater2,
						-a/2+lfw,b-gs_sash_width,				8,				var_mater2,
						-a/2+gs_sash_width,b-gs_sash_width,		in_out_mask,	var_mater,
						a/2-gs_sash_width,b-gs_sash_width,		10,				var_mater2,
						a/2-rfw,b-gs_sash_width,				in_out_mask2,	var_mater2,
						a/2-rfw,b-tfw,							in_out_mask,	var_mater2
				vert 0, 0, 0
				vert 1, 0, 0
				vert 0, 0, 1
				vert 0, 1, 0
				coor 2, -1, -2, -3, -4
				body 1

					addz part_thk
					part_thk= gs_sash_thk-out_thk

					var_mater = gs_frame_mat2
					var_mater2 = gs_frame_mat2

					in_out_mask = 14
					in_out_mask2 = 12
				next ijk
				del in_out_cikl

			endif

		else

			! Fixed !

			pen gs_glass_pen
			material gs_glass_mat

			if lod3d = 5 then	!!chinese
				addz -gs_frame_thk+gs_sash_thk/2
				gl_chi_thk = gs_frame_thk
				gl_chi_mask = 13
			else
				addz gs_sash_thk/2-gs_glass_thk/2-gs_frame_thk/2
				gl_chi_thk = gs_glass_thk
				gl_chi_mask = 5
			endif

			prism_ 5,gl_chi_thk,
					-a/2+gs_rebate_width, gs_rebate_width, gl_chi_mask,
					a/2-gs_rebate_width, gs_rebate_width, gl_chi_mask,
					a/2-gs_rebate_width, b-gs_rebate_width, gl_chi_mask,
					-a/2+gs_rebate_width, b-gs_rebate_width, gl_chi_mask,
					-a/2+gs_rebate_width, gs_rebate_width, -1

			del 1

		endif

	endif	! iMullionStyle <> MULLION_CUSTOM

	body -1
endif


! ==============================================================================
! GLAZING
! ==============================================================================

if (rots <> 100 and not(ctreed)) or ctreed then

	if iMullionStyle <> MULLION_CUSTOM & iMullionStyle <> MULLION_SOLID_PANEL then		! Don't draw in case of Custom Panel and Solid Panel

		pen gs_glass_pen
		material gs_glass_mat

		piv_ext = 0
		if lod3d = 5 then	! chinese
			gl_chi_thk = gs_frame_thk
			gl_chi_mask = 13
			if rots = 10 | rots = 16 then
				piv_ext = gs_rebate_width
			endif
		else
			addz gs_sash_thk/2-gs_glass_thk/2
			gl_chi_thk = gs_glass_thk
			gl_chi_mask = 5
		endif


		prism_ 5,gl_chi_thk,
			-a/2+gs_sash_width-piv_ext, gs_sash_width,             gl_chi_mask,
			a/2-gs_sash_width+piv_ext,  gs_sash_width,             gl_chi_mask,
			a/2-gs_sash_width+piv_ext,  b-gs_sash_width+2*piv_ext, gl_chi_mask,
			-a/2+gs_sash_width-piv_ext, b-gs_sash_width+2*piv_ext, gl_chi_mask,
			-a/2+gs_sash_width-piv_ext, gs_sash_width,             -1


		if lod3d <> 5 then del 1

	endif

endif


! ==============================================================================
! OPENING LINE in 3D
! ==============================================================================

if bOplines3d & (rots <> 100) then
	SASH_FIXED			= 1		! Fixed Glazing
	SASH_FIXED_SCREW	= 2		! Sash Fixed with Screw
	SASH_SIDE_HUNG		= 3		! Side Hung
	SASH_SIDE_HUNG_M	= 4		! Side Hung Mirrored
	SASH_TILT_TURN		= 5		! Tilt and Turn
	SASH_TILT_TURN_M	= 6		! Tilt and Turn Mirrored
	SASH_BOTTOM_HUNG	= 7		! Bottom Hung
	SASH_TOP_HUNG		= 8		! Top Hung
	SASH_HOR_PIVOT		= 9		! Horizontal Pivot Hung
	SASH_VER_PIVOT		= 10	! Vertical Pivotted
	SASH_TILT_SLIDE		= 11	! Tilt and Slide
	SASH_LEFT_SLIDING	= 12	! Left Sliding
	SASH_RIGHT_SLIDING	= 13	! Right Sliding
	SASH_UP_SLIDING		= 14	! Sliding Up
	SASH_DOWN_SLIDING	= 15	! Sliding Down
	SASH_VER_PIVOT_M	= 16	! Vertical Pivotted Mirrored

	iOpeningType = SASH_FIXED
	if rots = 1 then iOpeningType = SASH_SIDE_HUNG_M
	if rots = 2 then iOpeningType = SASH_TOP_HUNG
	if rots = 3 then iOpeningType = SASH_SIDE_HUNG
	if rots = 4 then iOpeningType = SASH_BOTTOM_HUNG
	if rots = 5 then iOpeningType = SASH_LEFT_SLIDING
	if rots = 6 then iOpeningType = SASH_UP_SLIDING
	if rots = 7 then iOpeningType = SASH_RIGHT_SLIDING
	if rots = 8 then iOpeningType = SASH_DOWN_SLIDING
	if rots = 10 then iOpeningType = SASH_VER_PIVOT
	if rots = 16 then iOpeningType = SASH_VER_PIVOT_M
	if rots = 30 then iOpeningType = SASH_TILT_TURN_M
	if rots = 31 then iOpeningType = SASH_TILT_TURN

	if lod3D = 1 | lod3D = 5 then
		SolXmod = 0
		if iMullionStyle = MULLION_SOLID_PANEL then
			opLineDist = gs_sash_thk
		else
			if lod3D = 5 then
				opLineDist = gs_sash_thk
			else
				opLineDist = gs_glass_thk
			endif
			SolXmod = gs_sash_width
		endif
		add -a/2 + SolXmod, SolXmod, gs_sash_thk/2 - opLineDist/2
		call "OpeningLines" parameters a = a - 2 * SolXmod,
					b					= b - 2 * SolXmod,
					frameThickness		= opLineDist,
					iOpeningType		= iOpeningType,
					opLineType3dIn		= opLineType3dIn,
					opLineType3dOut		= opLineType3dOut,
					gs_opLinePen		= gs_opLinePen,
					gs_opline_style_m	= gs_opline_style_m
	else
		opLineDist = gs_sash_thk
		add -a/2, 0, gs_sash_thk/2 - opLineDist/2
		call "OpeningLines" parameters a = a,
					b					= b,
					frameThickness		= opLineDist,
					iOpeningType		= iOpeningType,
					opLineType3dIn		= opLineType3dIn,
					opLineType3dOut		= opLineType3dOut,
					gs_opLinePen		= gs_opLinePen,
					gs_opline_style_m	= gs_opline_style_m
	endif
	del 1
endif



! ==============================================================================
! GRIDS
! ==============================================================================
if iMullionStyle = MULLION_NONE then end

pen gs_frame_pen


!H-V GRID

if iMullionStyle = MULLION_HVGRID then

	for ijk= 1 to in_out_cikl_gr

		if ijk = 1 then
			if in_out_cikl_gr = 2 then
				currentGrillThickness = gth /2
				side_mat = gs_grill_mat
			else
			currentGrillThickness = part_thk_grill
			endif
		else
			currentGrillThickness = gth / 2
			side_mat = gs_grill_mat2
		endif

		! Vertical grids
		if vgn>=1 then
			base
			for i=1 to vgn
				addx (a-2*gs_sash_width+gw+2*fix_sh_grmod)/(vgn+1)

				add  -a/2+gs_sash_width-gw/2-fix_sh_grmod, 0, gz-fix_sh_grshift
				sprism_ var_mater2_grill,var_mater_grill,side_mat,
					4,
					0,0, 0,1, currentGrillThickness, 0,
					-gw/2,gs_sash_width-fix_sh_grmod,		15,		!var_mater_grill,
					gw/2,gs_sash_width-fix_sh_grmod,		15,		!var_mater_grill,
					gw/2,b-gs_sash_width+fix_sh_grmod,		15,		!var_mater_grill,
					-gw/2,b-gs_sash_width+fix_sh_grmod,		15		!var_mater_grill

				del 1

			next i
			del vgn
			vert 0, 0, 0
			vert 0, 1, 0
			vert 1, 0, 0
			vert 0, 0, 1
			coor 2, -1, -2, -3, -4
			body 1
		endif

		! Horizontal grids
		if hgn>=1 then
			for i=1 to vgn+1
				for j=1 to hgn

					addy (b-2*gs_sash_width+gw+2*fix_sh_grmod)/(hgn+1)
					add -(a-2*gs_sash_width+2*fix_sh_grmod)/2+hgnn/2, gs_sash_width-gw/2-fix_sh_grmod, gz-fix_sh_grshift

					sprism_ var_mater2_grill,var_mater_grill,side_mat,
						4,
						0,0, 0,1, currentGrillThickness, 0,
						-hgnn/2,-gw/2,		15,		!var_mater_grill,
						hgnn/2,-gw/2,		15,		!var_mater_grill,
						hgnn/2,gw/2,		15,		!var_mater_grill,
						-hgnn/2,gw/2,		15		!var_mater_grill

					del 1
				next j
				del hgn

				addx (a-2*gs_sash_width+gw+2*fix_sh_grmod)/(vgn+1)

			next i
			del vgn+1
			body -1
		endif

		addz currentGrillThickness

		var_mater_grill = gs_grill_mat2
		var_mater2_grill = gs_grill_mat2

	next ijk
	del in_out_cikl_gr

endif

!Editable Grid.........................

if iMullionStyle = MULLION_EDITABLEGRID then

	for ijk= 1 to in_out_cikl_gr

		if ijk = 1 then
			if in_out_cikl_gr = 2 then
				currentGrillThickness = gth /2
				side_mat = gs_grill_mat
			else
			currentGrillThickness = part_thk_grill
			endif
		else
			currentGrillThickness = gth / 2
			side_mat = gs_grill_mat2
		endif

		if not(ghe) then
			for i=1 to vgn
				 vergrid[i][1]=i*(a-2*gs_sash_width+gw+2*fix_sh_grmod)/(vgn+1)
				 vergrid[i][2]=gs_sash_width-fix_sh_grmod
				 vergrid[i][3]=b-gs_sash_width+fix_sh_grmod
			next i

			for i=1 to hgn
				horgrid[i][1]=i*(b-2*gs_sash_width+gw+2*fix_sh_grmod)/(hgn+1)
				horgrid[i][2]=gs_sash_width-fix_sh_grmod
				horgrid[i][3]=a-gs_sash_width+fix_sh_grmod
			next i
		else
			for i= 1 to vgn
				if vergrid[i][1]<gw then  vergrid[i][1]=gw
				if vergrid[i][1]>a-2*gs_sash_width+2*fix_sh_grmod then  vergrid[i][1]=a-2*gs_sash_width+2*fix_sh_grmod

				if vergrid[i][3]>b-gs_sash_width+fix_sh_grmod then  vergrid[i][3]=b-gs_sash_width+fix_sh_grmod
				if vergrid[i][2]<=gs_sash_width-fix_sh_grmod then  vergrid[i][2]=gs_sash_width-fix_sh_grmod

				if vergrid[i][2]>b-gs_sash_width+fix_sh_grmod then  vergrid[i][2]=b-gs_sash_width+fix_sh_grmod
				if vergrid[i][3]<=gs_sash_width-fix_sh_grmod then  vergrid[i][3]=gs_sash_width-fix_sh_grmod
			next i
			for i= 1 to hgn
				if horgrid[i][1]<gw then horgrid[i][1]=gw
				if horgrid[i][1]>b-2*gs_sash_width+2*fix_sh_grmod then  horgrid[i][1]=b-2*gs_sash_width+2*fix_sh_grmod

				if horgrid[i][3]>a-gs_sash_width+fix_sh_grmod then  horgrid[i][3]=a-gs_sash_width+fix_sh_grmod
				if horgrid[i][2]<=gs_sash_width-fix_sh_grmod then  horgrid[i][2]=gs_sash_width-fix_sh_grmod

				if horgrid[i][2]>a-gs_sash_width+fix_sh_grmod then  horgrid[i][2]=a-gs_sash_width+fix_sh_grmod
				if horgrid[i][3]<=gs_sash_width-fix_sh_grmod then  horgrid[i][3]=gs_sash_width-fix_sh_grmod

			next i
		endif

		if vgn>=1 then
			if ghe and gs_full_edit then
				add  (-a/2+gs_sash_width-gw/2-fix_sh_grmod), 0, gz-fix_sh_grshift
				for i=1 to vgn
					lenghtv=vergrid[i][2]+(vergrid[i][3]-vergrid[i][2])/2

					hotspot 0, lenghtv, 0, unID, vergridx[i][1], 1+128 : unID=unID+1
					hotspot -1, lenghtv, 0, unID, vergridx[i][1], 3 : unID=unID+1
					hotspot vergrid[i][1],	lenghtv, 0, unID, vergridx[i][1], 2 : unID=unID+1

					hotspot vergrid[i][1],	0, 0, unID, vergridx[i][2],	1+128 : unID=unID+1
					hotspot vergrid[i][1], -1, 0, unID, vergridx[i][2], 3 : unID=unID+1
					hotspot vergrid[i][1],vergrid[i][2]+gw/2,	0, unID, vergridx[i][2], 2 : unID=unID+1

					hotspot vergrid[i][1], 0, 0, unID, vergridx[i][3], 1+128 : unID=unID+1
					hotspot vergrid[i][1], -1, 0, unID, vergridx[i][3], 3 : unID=unID+1
					hotspot vergrid[i][1], vergrid[i][3]-gw/2, 0, unID, vergridx[i][3], 2 : unID=unID+1
				next i
				del 1
			endif

			add  (-a/2+gs_sash_width-gw/2-fix_sh_grmod), 0, gz-fix_sh_grshift
			for i= 1 to vgn
				addx vergrid[i][1]

				if abs(vergrid[i][2] - vergrid[i][3]) < EPS then vergrid[i][3] = vergrid[i][2] + EPS

				sprism_ var_mater2_grill,var_mater_grill,side_mat,
					4,
					0,0, 0,1, currentGrillThickness, 0,
					-gw/2,vergrid[i][2],15,
					gw/2,vergrid[i][2],15,
					gw/2,vergrid[i][3],15,
					-gw/2,vergrid[i][3],15

				del 1

			next i
			del 1
		endif

		! Horizontal grids

		if hgn>=1 then
			if ghe and gs_full_edit then
				add -a/2 , -gw/2+gs_sash_width-fix_sh_grmod, gz-fix_sh_grshift
				for i=1 to hgn
					lenghth=horgrid[i][2]+(horgrid[i][3]-horgrid[i][2])/2

					hotspot lenghth, 0, 0, unID, horgridx[i][1], 1+128 : unID=unID+1
					hotspot lenghth, -1, 0, unID, horgridx[i][1], 3 : unID=unID+1
					hotspot lenghth, horgrid[i][1], 0, unID, horgridx[i][1], 2 : unID=unID+1

	!				if horgrid[i][1]<gw then  horgrid[i][1]=gw
	!				if horgrid[i][1]>b-2*gs_sash_width+2*fix_sh_grmod then  horgrid[i][1]=b-2*gs_sash_width+2*fix_sh_grmod

					hotspot 0, horgrid[i][1], 0, unID, horgridx[i][2],	1+128 : unID=unID+1
					hotspot -1,	horgrid[i][1], 0, unID, horgridx[i][2], 3 : unID=unID+1
					hotspot horgrid[i][2]+gw/2,	horgrid[i][1], 0, unID, horgridx[i][2], 2 : unID=unID+1

					hotspot 0, horgrid[i][1], 0, unID, horgridx[i][3],	1+128 : unID=unID+1
					hotspot -1,	horgrid[i][1], 0, unID, horgridx[i][3], 3 : unID=unID+1
					hotspot horgrid[i][3]-gw/2,	horgrid[i][1], 0, unID, horgridx[i][3], 2 : unID=unID+1

	!				if horgrid[i][3]>a-gs_sash_width+fix_sh_grmod then  horgrid[i][3]=a-gs_sash_width+fix_sh_grmod
	!				if horgrid[i][2]<=0 then horgrid[i][2]=0

				next i
				del 1
			endif

			add -a/2 , -gw/2+gs_sash_width-fix_sh_grmod, gz-fix_sh_grshift
			for i= 1 to hgn
				addy horgrid[i][1] !(b-2*gs_sash_width+gw)/(hgn+1)

				if abs(horgrid[i][2] - horgrid[i][3]) < EPS then horgrid[i][3] = horgrid[i][2] + EPS

				_actHorgrid				= horgrid
				_actVergrid				= vergrid
				_actVergridNum			= vgn
				_actGridIdxOffsetVgn	= 0
				gosub "customHVGridHorGrids"

				del 1
			next i
			del 1
		endif

		addz currentGrillThickness

		var_mater_grill = gs_grill_mat2
		var_mater2_grill = gs_grill_mat2

	next ijk
	del in_out_cikl_gr

endif


!Solid Panel-----------------------------------

if iMullionStyle = MULLION_SOLID_PANEL then
	if rots <> 100 then		! Not Fixed
		sprism_{2}	gs_panel_mat2, gs_panel_mat, gs_panel_mat2,
					5,
					0,0, 0,1, 0, 0,
					0,0, 0,1, gs_sash_thk, 0,
					-A/2,	0,	15,gs_panel_mat2,
					 A/2,	0,	15,gs_panel_mat2,
					 A/2,	B,	15,gs_panel_mat2,
					-A/2,	B,	15,gs_panel_mat2,
					-A/2,	0,	-1,gs_panel_mat2
	else
		addz -gs_frame_thk/2
		sprism_{2}	gs_panel_mat2, gs_panel_mat, gs_panel_mat2,
					5,
					0,0, 0,1, 0, 0,
					0,0, 0,1, gs_sash_thk, 0,
					-A/2+gs_rebate_width,	gs_rebate_width,	15,gs_panel_mat2,
					 A/2-gs_rebate_width,	gs_rebate_width,	15,gs_panel_mat2,
					 A/2-gs_rebate_width,	B-gs_rebate_width,	15,gs_panel_mat2,
					-A/2+gs_rebate_width,	B-gs_rebate_width,	15,gs_panel_mat2,
					-A/2+gs_rebate_width,	gs_rebate_width,	-1,gs_panel_mat2
		del 1
	endif
endif


!Custom Panel-----------------------------------

if iMullionStyle = MULLION_CUSTOM then

	if gs_cust_panel<>"" then
		if iOpeningType = SASH_FIXED then
			a = a - 2 * gs_rebate_width
			b = b - 2 * gs_rebate_width
			panelThk = gs_glass_thk
			add 0, gs_rebate_width, -gs_glass_thk/2
		else
			panelThk = gs_sash_thk
		endif

		addx -a/2
		call "Window_Panel_Collection" parameters a=a, b=b, zzyzx=panelThk, gs_ptype=gs_cust_panel
		del 1
	endif

endif


!PRAIRIE STYLE

if iMullionStyle = MULLION_PRAIRIE then
	sx=-a/2+gs_sash_width
	sx2=-sx
	sy=gs_sash_width
	dy3=(b-2*(gs_sash_width)-6"-3*gw)/5
	sx3=a-2*(gs_sash_width)
	pw=gw

	addz gs_sash_thk/2-gth/2
	prism_ 75, gth,
		sx,sy,15,
		sx2,sy,15,
		sx2,b-sy,15,
		sx,b-sy,15,
		sx,sy,-1,

		sx+pw,sy+pw,15,
		sx+pw+3",sy+pw,15,
		sx+pw+3",sy+pw+3",15,
		sx+pw,sy+pw+3",15,
		sx+pw,sy+pw,-1,

		sx2-pw,sy+pw,15,
		sx2-pw-3",sy+pw,15,
		sx2-pw-3",sy+pw+3",15,
		sx2-pw,sy+pw+3",15,
		sx2-pw,sy+pw,-1,

		sx+pw,b-sy-pw,15,
		sx+pw+3",b-sy-pw,15,
		sx+pw+3",b-sy-pw-3",15,
		sx+pw,b-sy-pw-3",15,
		sx+pw,b-sy-pw,-1,

		sx2-pw,b-sy-pw,15,
		sx2-pw-3",b-sy-pw,15,
		sx2-pw-3",b-sy-pw-3",15,
		sx2-pw,b-sy-pw-3",15,
		sx2-pw,b-sy-pw,-1,

		sx+2*pw+3",b-sy-pw,15,
		sx2-2*pw-3",b-sy-pw,15,
		sx2-2*pw-3",b-sy-pw-3",15,
		sx+2*pw+3",b-sy-pw-3",15,
		sx+2*pw+3",b-sy-pw,-1,

		sx+2*pw+3",sy+pw,15,
		sx2-2*pw-3",sy+pw,15,
		sx2-2*pw-3",sy+pw+3",15,
		sx+2*pw+3",sy+pw+3",15,
		sx+2*pw+3",sy+pw,-1,

		sx+pw,sy+2*pw+3",15,
		sx+pw+3",sy+2*pw+3",15,
		sx+pw+3",b-sy-2*pw-3",15,
		sx+pw,b-sy-2*pw-3",15,
		sx+pw,sy+2*pw+3",-1,

		sx2-pw,sy+2*pw+3",15,
		sx2-pw-3",sy+2*pw+3",15,
		sx2-pw-3",b-sy-2*pw-3",15,
		sx2-pw,b-sy-2*pw-3",15,
		sx2-pw,sy+2*pw+3",-1,

		sx+2*pw+3",sy+2*pw+3",15,
		sx+2*pw+3",sy+2*pw+3"+3*dy3-pw,15,
		sx+sx3/2-pw/2,sy+2*pw+3"+3*dy3-pw,15,
		sx+sx3/2-pw/2,sy+2*pw+3",15,
		sx+2*pw+3",sy+2*pw+3",-1,

		sx2-2*pw-3",sy+2*pw+3",15,
		sx2-2*pw-3",sy+2*pw+3"+3*dy3-pw,15,
		sx+sx3/2+pw/2,sy+2*pw+3"+3*dy3-pw,15,
		sx+sx3/2+pw/2,sy+2*pw+3",15,
		sx2-2*pw-3",sy+2*pw+3",-1,

		sx+2*pw+3",sy+2*pw+3"+4*dy3-pw,15,
		sx+2*pw+3",sy+2*pw+3"+3*dy3,15,
		sx+sx3/2-pw/2,sy+2*pw+3"+3*dy3,15,
		sx+sx3/2-pw/2,sy+2*pw+3"+4*dy3-pw,15,
		sx+2*pw+3",sy+2*pw+3"+4*dy3-pw,-1,

		sx2-2*pw-3",sy+2*pw+3"+4*dy3-pw,15,
		sx2-2*pw-3",sy+2*pw+3"+3*dy3,15,
		sx+sx3/2+pw/2,sy+2*pw+3"+3*dy3,15,
		sx+sx3/2+pw/2,sy+2*pw+3"+4*dy3-pw,15,
		sx2-2*pw-3",sy+2*pw+3"+4*dy3-pw,-1,

		sx+2*pw+3",sy+2*pw+3"+5*dy3-pw,15,
		sx+2*pw+3",sy+2*pw+3"+4*dy3,15,
		sx+sx3/2-pw/2,sy+2*pw+3"+4*dy3,15,
		sx+sx3/2-pw/2,sy+2*pw+3"+5*dy3-pw,15,
		sx+2*pw+3",sy+2*pw+3"+5*dy3-pw,-1,

		sx2-2*pw-3",sy+2*pw+3"+5*dy3-pw,15,
		sx2-2*pw-3",sy+2*pw+3"+4*dy3,15,
		sx+sx3/2+pw/2,sy+2*pw+3"+4*dy3,15,
		sx+sx3/2+pw/2,sy+2*pw+3"+5*dy3-pw,15,
		sx2-2*pw-3",sy+2*pw+3"+5*dy3-pw,-1
	del 1

endif

123:
if gs_full_edit then
!	if rots=3 then
!		if opa=0 then del 4 else del 9 !: deleting open_the_window transformation
!	endif
!
!	if rots=1 or rots=2 or rots=4 or rots=10 then
!		if opa=0 then del 2 else del 7 !: deleting open_the_window transformation
!	endif
!
!if rots=5 or rots=7 or rots=6 or rots=8 then del 1

!	if rots=2 then
!		if opa=0 then del 2 else del 7 !: deleting open_the_window transformation
!	endif
!
!	if rots=4 then
!		if opa=0 then del 2 else del 7 !: deleting open_the_window transformation
!	endif
!
!	if rots=5 then
!		if opa=0 then del 2 else del 7 !: deleting open_the_window transformation
!	endif

endif

! =============================================================================
end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end
! =============================================================================


! =============================================================================
"customHVGridHorGrids":
! =============================================================================
	_startGridIdx	= 1 + _actGridIdxOffsetVgn
	_endGridIdx		= _actVergridNum + 1 + _actGridIdxOffsetVgn
	_sashWidth		= gs_sash_width - fix_sh_grmod

	gosub "getVerticalGridOrder"

	for kk = 1 + _actGridIdxOffsetVgn to _actVergridNum + _actGridIdxOffsetVgn
		_startGridIdx	= _startGridIdx + ((_actHorgrid[i][2] - _actVergrid[kk][1] - _sashWidth) > eps)
	next kk
	for kk = _actVergridNum + _actGridIdxOffsetVgn to 1 + _actGridIdxOffsetVgn step -1 
		_endGridIdx		= _endGridIdx - ((_actHorgrid[i][3] - _actVergrid[kk][1] - _sashWidth) < eps)
	next kk

	if _startGridIdx > _endGridIdx then
		_bReverseVerGrid	= 1
		__startGridIdx	= _endGridIdx
		__endGridIdx	= _startGridIdx
	else
		_bReverseVerGrid	= 0
		__startGridIdx	= _startGridIdx
		__endGridIdx	= _endGridIdx
	endif

	for jj = __startGridIdx to __endGridIdx
		if jj < __endGridIdx then
			_verGridIdxBefore		= _verGridOrder[jj - _actGridIdxOffsetVgn]

			if _actVergrid[_verGridIdxBefore][2] > _actVergrid[_verGridIdxBefore][3] then
				_actVerGridTopPointIdx		= 2
				_actVerGridBottomPointIdx	= 3
			else
				_actVerGridTopPointIdx		= 3
				_actVerGridBottomPointIdx	= 2
			endif

			_bGridCrossingOnStart	= (_actVergrid[_verGridIdxBefore][_actVerGridBottomPointIdx] - _actHorgrid[i][1] - _sashWidth + gw) < eps &\
									  (_actVergrid[_verGridIdxBefore][_actVerGridTopPointIdx] - _actHorgrid[i][1] - _sashWidth) > eps
		else
			_bGridCrossingOnStart	= 0
		endif

		if jj > __startGridIdx then
			_verGridIdxAfter	= _verGridOrder[jj - 1 - _actGridIdxOffsetVgn]

			if _actVergrid[_verGridIdxAfter][2] > _actVergrid[_verGridIdxAfter][3] then
				_actVerGridTopPointIdx		= 2
				_actVerGridBottomPointIdx	= 3
			else
				_actVerGridTopPointIdx		= 3
				_actVerGridBottomPointIdx	= 2
			endif

			_bGridCrossingOnEnd	= (_actVergrid[_verGridIdxAfter][_actVerGridBottomPointIdx] - _actHorgrid[i][1] - _sashWidth + gw) < eps &\
								  (_actVergrid[_verGridIdxAfter][_actVerGridTopPointIdx] - _actHorgrid[i][1] - _sashWidth) > eps
		else
			_bGridCrossingOnEnd	= 0
		endif

		if jj = __endGridIdx then
			_gridEndPos		= _actHorgrid[i][3] * not(_bReverseVerGrid) + _actHorgrid[i][2] * (_bReverseVerGrid)
		else
			_gridEndPos		= _actVergrid[_verGridIdxBefore][1] + _sashWidth - gw / 2 - gw / 2 * _bGridCrossingOnStart
		endif
		if jj = __startGridIdx then
			_gridStartPos	= _actHorgrid[i][2] * not(_bReverseVerGrid) + _actHorgrid[i][3] * (_bReverseVerGrid)
		else
			_gridStartPos	= _actVergrid[_verGridIdxAfter][1] + _sashWidth - gw / 2 + gw / 2 * _bGridCrossingOnEnd
		endif

		if __startGridIdx = __endGridIdx then
			_mask1	= 15
			_mask2	= 15
			_mask3	= 15
			_mask4	= 15
		else
			if jj = __startGridIdx then
				_mask1	= 15
				_mask2	= 15 - 7 * not(_bGridCrossingOnStart)
				_mask3	= 15 - 2 * not(_bGridCrossingOnStart)
				_mask4	= 15
			else
				if jj = __endGridIdx then
					_mask1	= 15 - 2 * not(_bGridCrossingOnEnd)
					_mask2	= 15
					_mask3	= 15
					_mask4	= 15 - 7 * not(_bGridCrossingOnEnd)
				else
					_mask1	= 15 - 2 * not(_bGridCrossingOnEnd)
					_mask2	= 15 - 7 * not(_bGridCrossingOnStart)
					_mask3	= 15 - 2 * not(_bGridCrossingOnStart)
					_mask4	= 15 - 7 * not(_bGridCrossingOnEnd)
				endif
			endif
		endif

		sprism_ var_mater2_grill,var_mater_grill,side_mat,
			4,
			0,0, 0,1, currentGrillThickness, 0,
			_gridStartPos,	-gw / 2,	_mask1,
			_gridEndPos,	-gw / 2,	_mask2,
			_gridEndPos,	gw / 2,		_mask3,
			_gridStartPos,	gw / 2,		_mask4
	next jj

return


! =============================================================================
"getVerticalGridOrder":
! =============================================================================
	for ss = 1 to _actVergridNum
		_verGridOrder[ss] = ss + _actGridIdxOffsetVgn
		for ww = ss - 1 to 1 step -1
			if _actVergrid[ss + _actGridIdxOffsetVgn][1] < _actVergrid[_verGridOrder[ww]][1] then
				_verGridOrder[ww + 1] = _verGridOrder[ww]
				_verGridOrder[ww] = ss + _actGridIdxOffsetVgn
			endif
		next ww
	next ss

return
