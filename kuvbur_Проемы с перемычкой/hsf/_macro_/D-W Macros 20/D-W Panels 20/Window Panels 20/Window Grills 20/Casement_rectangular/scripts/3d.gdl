
OpeningUnID			= sh_unID
HorizontalDivUnID	= sh_unID + 10
VerticalGridUnID	= sh_unID + 20
VerticalGridUnID2	= sh_unID + 115
HorizontalGridUnID	= sh_unID + 210
HorizontalGridUnID2	= sh_unID + 305
LouverAngleUnID		= sh_unID + 400

if gs_fillSash   < 1 then gs_fillSash	= SYMB_FILL
if gs_penSash_bg < 1 then gs_penSash_bg	= SYMB_FBGD_PEN
if gs_penSash_fg < 1 then gs_penSash_fg	= SYMB_FILL_PEN


! =============================================================================
!
! =============================================================================

dim vergrid[][]
dim horgrid[][]
dim vergrid2[][]
dim horgrid2[][]
dim	_actHorgrid[][]
dim	_actVergrid[][]
dim _verGridOrder[]
openingAngle = 0
openingAngle2 = 0
openingLength = 0
openingMaxLength = 0
gs_optype_m = 0
b2SashWithIndependentVentilation	= 0
isVentilationProfileInFirstSash		= 0
isVentilationProfileInSecondSash	= 0
gs_glass_mat_t = gs_glass_mat
if CasementID = 1 then
	openingAngle = openingAngle_01
	openingAngle2 = openingAngle2_01
	openingLength = openingLength_01
	openingLength2 = openingLength2_01
	openingMaxLength = openingMaxLength_01
	isVentilationProfileInSash = isVentilationProfileInSash_01
	isLedgeProfileInSash = bSashLedge
	gs_optype_m = gs_optype_m_01
	iMullionStyle = iMullionStyle_01
	gs_horiz_div_height = gs_horiz_div_height_01
	gs_cust_panel = gs_cust_panel_01
	gs_bMirr_cust_panel = gs_bMirr_cust_panel_01
	gs_cust_panel2 = gs_cust_panel2_01
	gs_bMirr_cust_panel2 = gs_bMirr_cust_panel2_01
	vgn = vgn_01
	hgn = hgn_01
	vergrid = vergrid_01
	horgrid = horgrid_01
	vgn2 = vgn2_01
	hgn2 = hgn2_01
	vergrid2 = vergrid2_01
	horgrid2 = horgrid2_01
	if not(gs_glass_mat_eq) then gs_glass_mat_t = gs_glass_01_mat
endif

if CasementID = 2 then
	openingAngle = openingAngle_02
	openingAngle2 = openingAngle2_02
	openingLength = openingLength_02
	openingLength2 = openingLength2_02
	openingMaxLength = openingMaxLength_02
	isVentilationProfileInSash = isVentilationProfileInSash_02
	isLedgeProfileInSash = bSashLedge
	gs_optype_m = gs_optype_m_02
	iMullionStyle = iMullionStyle_02
	gs_horiz_div_height = gs_horiz_div_height_02
	gs_cust_panel = gs_cust_panel_02
	gs_bMirr_cust_panel = gs_bMirr_cust_panel_02
	gs_cust_panel2 = gs_cust_panel2_02
	gs_bMirr_cust_panel2 = gs_bMirr_cust_panel2_02
	vgn = vgn_02
	hgn = hgn_02
	vergrid = vergrid_02
	horgrid = horgrid_02
	vgn2 = vgn2_02
	hgn2 = hgn2_02
	vergrid2 = vergrid2_02
	horgrid2 = horgrid2_02
	if not(gs_glass_mat_eq) then gs_glass_mat_t = gs_glass_02_mat
endif

if CasementID = 3 then
	openingAngle = openingAngle_03
	openingAngle2 = openingAngle2_03
	openingLength = openingLength_03
	openingLength2 = openingLength2_03
	openingMaxLength = openingMaxLength_03
	isVentilationProfileInSash = isVentilationProfileInSash_03
	isLedgeProfileInSash = bSashLedge
	gs_optype_m = gs_optype_m_03
	iMullionStyle = iMullionStyle_03
	gs_horiz_div_height = gs_horiz_div_height_03
	gs_cust_panel = gs_cust_panel_03
	gs_bMirr_cust_panel = gs_bMirr_cust_panel_03
	gs_cust_panel2 = gs_cust_panel2_03
	gs_bMirr_cust_panel2 = gs_bMirr_cust_panel2_03
	vgn = vgn_03
	hgn = hgn_03
	vergrid = vergrid_03
	horgrid = horgrid_03
	vgn2 = vgn2_03
	hgn2 = hgn2_03
	vergrid2 = vergrid2_03
	horgrid2 = horgrid2_03
	if not(gs_glass_mat_eq) then gs_glass_mat_t = gs_glass_03_mat
endif

if CasementID = 4 then
	openingAngle = openingAngle_04
	openingAngle2 = openingAngle2_04
	openingLength = openingLength_04
	openingLength2 = openingLength2_04
	openingMaxLength = openingMaxLength_04
	isVentilationProfileInSash = isVentilationProfileInSash_04
	isLedgeProfileInSash = bSashLedge
	gs_optype_m = gs_optype_m_04
	iMullionStyle = iMullionStyle_04
	gs_horiz_div_height = gs_horiz_div_height_04
	gs_cust_panel = gs_cust_panel_04
	gs_bMirr_cust_panel = gs_bMirr_cust_panel_04
	gs_cust_panel2 = gs_cust_panel2_04
	gs_bMirr_cust_panel2 = gs_bMirr_cust_panel2_04
	vgn = vgn_04
	hgn = hgn_04
	vergrid = vergrid_04
	horgrid = horgrid_04
	vgn2 = vgn2_04
	hgn2 = hgn2_04
	vergrid2 = vergrid2_04
	horgrid2 = horgrid2_04
	if not(gs_glass_mat_eq) then gs_glass_mat_t = gs_glass_04_mat
endif

if CasementID = 5 then
	openingAngle = openingAngle_05
	openingAngle2 = openingAngle2_05
	openingLength = openingLength_05
	openingLength2 = openingLength2_05
	openingMaxLength = openingMaxLength_05
	isVentilationProfileInSash = isVentilationProfileInSash_05
	isLedgeProfileInSash = bSashLedge
	gs_optype_m = gs_optype_m_05
	iMullionStyle = iMullionStyle_05
	gs_horiz_div_height = gs_horiz_div_height_05
	gs_cust_panel = gs_cust_panel_05
	gs_bMirr_cust_panel = gs_bMirr_cust_panel_05
	gs_cust_panel2 = gs_cust_panel2_05
	gs_bMirr_cust_panel2 = gs_bMirr_cust_panel2_05
	vgn = vgn_05
	hgn = hgn_05
	vergrid = vergrid_05
	horgrid = horgrid_05
	vgn2 = vgn2_05
	hgn2 = hgn2_05
	vergrid2 = vergrid2_05
	horgrid2 = horgrid2_05
	if not(gs_glass_mat_eq) then gs_glass_mat_t = gs_glass_05_mat
endif

if CasementID = 6 then
	openingAngle = openingAngle_06
	openingAngle2 = openingAngle2_06
	openingLength = openingLength_06
	openingLength2 = openingLength2_06
	openingMaxLength = openingMaxLength_06
	isVentilationProfileInSash = isVentilationProfileInSash_06
	isLedgeProfileInSash = bSashLedge
	gs_optype_m = gs_optype_m_06
	iMullionStyle = iMullionStyle_06
	gs_horiz_div_height = gs_horiz_div_height_06
	gs_cust_panel = gs_cust_panel_06
	gs_bMirr_cust_panel = gs_bMirr_cust_panel_06
	gs_cust_panel2 = gs_cust_panel2_06
	gs_bMirr_cust_panel2 = gs_bMirr_cust_panel2_06
	vgn = vgn_06
	hgn = hgn_06
	vergrid = vergrid_06
	horgrid = horgrid_06
	vgn2 = vgn2_06
	hgn2 = hgn2_06
	vergrid2 = vergrid2_06
	horgrid2 = horgrid2_06
	if not(gs_glass_mat_eq) then gs_glass_mat_t = gs_glass_06_mat
endif

if CasementID = 7 then
	openingAngle = openingAngle_07
	openingAngle2 = openingAngle2_07
	openingLength = openingLength_07
	openingLength2 = openingLength2_07
	openingMaxLength = openingMaxLength_07
	isVentilationProfileInSash = isVentilationProfileInSash_07
	isLedgeProfileInSash = bSashLedge
	gs_optype_m = gs_optype_m_07
	iMullionStyle = iMullionStyle_07
	gs_horiz_div_height = gs_horiz_div_height_07
	gs_cust_panel = gs_cust_panel_07
	gs_bMirr_cust_panel = gs_bMirr_cust_panel_07
	gs_cust_panel2 = gs_cust_panel2_07
	gs_bMirr_cust_panel2 = gs_bMirr_cust_panel2_07
	vgn = vgn_07
	hgn = hgn_07
	vergrid = vergrid_07
	horgrid = horgrid_07
	vgn2 = vgn2_07
	hgn2 = hgn2_07
	vergrid2 = vergrid2_07
	horgrid2 = horgrid2_07
	if not(gs_glass_mat_eq) then gs_glass_mat_t = gs_glass_07_mat
endif

if CasementID = 8 then
	openingAngle = openingAngle_08
	openingAngle2 = openingAngle2_08
	openingLength = openingLength_08
	openingLength2 = openingLength2_08
	openingMaxLength = openingMaxLength_08
	isVentilationProfileInSash = isVentilationProfileInSash_08
	isLedgeProfileInSash = bSashLedge
	gs_optype_m = gs_optype_m_08
	iMullionStyle = iMullionStyle_08
	gs_horiz_div_height = gs_horiz_div_height_08
	gs_cust_panel = gs_cust_panel_08
	gs_bMirr_cust_panel = gs_bMirr_cust_panel_08
	gs_cust_panel2 = gs_cust_panel2_08
	gs_bMirr_cust_panel2 = gs_bMirr_cust_panel2_08
	vgn = vgn_08
	hgn = hgn_08
	vergrid = vergrid_08
	horgrid = horgrid_08
	vgn2 = vgn2_08
	hgn2 = hgn2_08
	vergrid2 = vergrid2_08
	horgrid2 = horgrid2_08
	if not(gs_glass_mat_eq) then gs_glass_mat_t = gs_glass_08_mat
endif

if CasementID = 9 then
	openingAngle = openingAngle_09
	openingAngle2 = openingAngle2_09
	openingLength = openingLength_09
	openingLength2 = openingLength2_09
	openingMaxLength = openingMaxLength_09
	isVentilationProfileInSash = isVentilationProfileInSash_09
	isLedgeProfileInSash = bSashLedge
	gs_optype_m = gs_optype_m_09
	iMullionStyle = iMullionStyle_09
	gs_horiz_div_height = gs_horiz_div_height_09
	gs_cust_panel = gs_cust_panel_09
	gs_bMirr_cust_panel = gs_bMirr_cust_panel_09
	gs_cust_panel2 = gs_cust_panel2_09
	gs_bMirr_cust_panel2 = gs_bMirr_cust_panel2_09
	vgn = vgn_09
	hgn = hgn_09
	vergrid = vergrid_09
	horgrid = horgrid_09
	vgn2 = vgn2_09
	hgn2 = hgn2_09
	vergrid2 = vergrid2_09
	horgrid2 = horgrid2_09
	if not(gs_glass_mat_eq) then gs_glass_mat_t = gs_glass_09_mat
endif

if CasementID = 10 then
	openingAngle = openingAngle_10
	openingAngle2 = openingAngle2_10
	openingLength = openingLength_10
	openingLength2 = openingLength2_10
	openingMaxLength = openingMaxLength_10
	isVentilationProfileInSash = isVentilationProfileInSash_10
	isLedgeProfileInSash = bSashLedge
	gs_optype_m = gs_optype_m_10
	iMullionStyle = iMullionStyle_10
	gs_horiz_div_height = gs_horiz_div_height_10
	gs_cust_panel = gs_cust_panel_10
	gs_bMirr_cust_panel = gs_bMirr_cust_panel_10
	gs_cust_panel2 = gs_cust_panel2_10
	gs_bMirr_cust_panel2 = gs_bMirr_cust_panel2_10
	vgn = vgn_10
	hgn = hgn_10
	vergrid = vergrid_10
	horgrid = horgrid_10
	vgn2 = vgn2_10
	hgn2 = hgn2_10
	vergrid2 = vergrid2_10
	horgrid2 = horgrid2_10
	if not(gs_glass_mat_eq) then gs_glass_mat_t = gs_glass_10_mat
endif

if CasementID = 11 then
	openingAngle = openingAngle_11
	openingAngle2 = openingAngle2_11
	openingLength = openingLength_11
	openingLength2 = openingLength2_11
	openingMaxLength = openingMaxLength_11
	isVentilationProfileInSash = isVentilationProfileInSash_11
	isLedgeProfileInSash = bSashLedge
	gs_optype_m = gs_optype_m_11
	iMullionStyle = iMullionStyle_11
	gs_horiz_div_height = gs_horiz_div_height_11
	gs_cust_panel = gs_cust_panel_11
	gs_bMirr_cust_panel = gs_bMirr_cust_panel_11
	gs_cust_panel2 = gs_cust_panel2_11
	gs_bMirr_cust_panel2 = gs_bMirr_cust_panel2_11
	vgn = vgn_11
	hgn = hgn_11
	vergrid = vergrid_11
	horgrid = horgrid_11
	vgn2 = vgn2_11
	hgn2 = hgn2_11
	vergrid2 = vergrid2_11
	horgrid2 = horgrid2_11
	if not(gs_glass_mat_eq) then gs_glass_mat_t = gs_glass_11_mat
endif

if not(isWindow) then
	for i = 1 to 10
		if CasementID = sashID[i][SASH_ID] then
			if sashID[i][SASH_ROLE] <> SASHROLE_UPPER_TRANSOM then
				gs_sash_width = gs_sl_sash_width
			endif
			i = 10	! Force loop end
		endif
	next i
endif

! Change ledge bool by mullion style and level of detail
if	not((lod3D = 2) &\
		(iMullionStyle = MULLION_NONE |\
		 iMullionStyle = MULLION_HVGRID |\
		 iMullionStyle = MULLION_DIVIDED |\
		 iMullionStyle = MULLION_EDITABLEGRID)) then

	isLedgeProfileInSash = 0
endif

! Change sash width size by mullion style
if (iMullionStyle = MULLION_FRENCH_PANEL) then
	_sashFrameWidthLeft		= sashFrameWidth[1][CasementID]
	_sashFrameWidthRight	= sashFrameWidth[2][CasementID]
	_sashFrameWidthTop		= sashFrameWidth[3][CasementID]
	_sashFrameWidthBottom	= sashFrameWidth[4][CasementID]
else
	_sashFrameWidthLeft		= gs_sash_width
	_sashFrameWidthRight	= gs_sash_width
	_sashFrameWidthTop		= gs_sash_width
	_sashFrameWidthBottom	= gs_sash_width
endif

if iMullionStyle = MULLION_DIVIDED then
	if	gs_horiz_div_height > B - gs_sash_width - EPS | \
		gs_horiz_div_height < 2 * gs_sash_width + EPS then
		iMullionStyle = MULLION_HVGRID
	endif
endif
if	iMullionStyle = MULLION_DIVIDED |\
	iMullionStyle = MULLION_SOLID_GLAZED |\
	iMullionStyle = MULLION_FRENCH_PANEL  then
	if gs_optype_m = SASH_FIXED then
		iMullionStyle = MULLION_HVGRID
	endif
endif
if iMullionStyle = MULLION_DIVIDED_FRAME then
	if gs_optype_m <> SASH_FIXED then
		iMullionStyle = MULLION_HVGRID
	endif
endif


! ==============================================================================
! Simple Detail Level
! ==============================================================================

if	gs_optype_m = SASH_FIXED |\
	gs_optype_m = SASH_HOR_PIVOT |\
	gs_optype_m = SASH_VER_PIVOT |\
	gs_optype_m = SASH_VER_PIVOT_M |\
	gs_optype_m = SASH_SLIDING_HOR |\
	gs_optype_m = SASH_SLIDING_HOR_M |\
	gs_optype_m = SASH_DOUBLE_SLIDING_HOR |\
	gs_optype_m = SASH_DOUBLE_SLIDING_HOR_M |\
	gs_optype_m = SASH_SLIDING_VER |\
	gs_optype_m = SASH_DOUBLE_SLIDING_VER then

	if ((lod3D = 1 | lod3D = 5) & iMullionStyle <> MULLION_SOLID_PANEL) | gs_optype_m = SASH_FIXED then
		addy gs_rebate_width
		A = A - 2*gs_rebate_width
		B = B - 2*gs_rebate_width
	else
		if	gs_optype_m = SASH_HOR_PIVOT |\
			gs_optype_m = SASH_VER_PIVOT |\
			gs_optype_m = SASH_VER_PIVOT_M then
			addz -gs_sash_thk
		else
			if isWindow | (lod3D = 5 & iMullionStyle = MULLION_SOLID_PANEL) then
				addz -gs_frame_thk
			else
				addz -2 * min(gs_sash_thk, gs_frame_thk/2)
			endif
		endif
	endif
else
	if lod3D = 1 | lod3D = 5 then
		if iMullionStyle = MULLION_SOLID_PANEL then
			if lod3D = 1 then
				addz -gs_sash_thk
			else
				addz -gs_frame_thk
			endif
		endif
	else
		addz -gs_rebate_depth
	endif
endif


bShowFrame = 1
if lod3D = 1 | lod3D = 5 then

	bShowFrame = 0

	if iMullionStyle <> MULLION_DIVIDED_FRAME then
		vgn = 1
		hgn = 1
	endif
	vgn2 = 1
	hgn2 = 1

	gs_sidelight_div_thk = gs_frame_thk

	if iMullionStyle = MULLION_CUSTOM then
		iMullionStyle = MULLION_NONE
	endif

	gs_full_edit = 0
endif


! =============================================================================
!
! =============================================================================

if gs_optype_m = SASH_FIXED then
	fix_sh_grmod = gs_sash_width
else
	fix_sh_grmod = 0
endif

if (gs_optype_m = SASH_HOR_PIVOT |\
	gs_optype_m = SASH_VER_PIVOT |\
	gs_optype_m = SASH_VER_PIVOT_M |\
	gs_optype_m = SASH_SLIDING_HOR |\
	gs_optype_m = SASH_SLIDING_HOR_M |\
	gs_optype_m = SASH_DOUBLE_SLIDING_HOR |\
	gs_optype_m = SASH_DOUBLE_SLIDING_HOR_M |\
	gs_optype_m = SASH_SLIDING_VER |\
	gs_optype_m = SASH_DOUBLE_SLIDING_VER) & lod3D = 2 then

	addy gs_rebate_width
	A = A - 2*gs_rebate_width
	B = B - 2*gs_rebate_width
endif

if iMullionStyle = MULLION_SOLID_PANEL & gs_optype_m <> SASH_FIXED & (lod3D = 1 | lod3D = 5) then
	addy gs_rebate_width
	A = A - 2*gs_rebate_width
	B = B - 2*gs_rebate_width
endif

hgn = hgn - 1	! Grids => Panels
vgn = vgn - 1
hgn = max(0, hgn)
vgn = max(0, vgn)

hgn2 = hgn2 - 1	! Grids => Panels
vgn2 = vgn2 - 1
hgn2 = max(0, hgn2)
vgn2 = max(0, vgn2)


! =============================================================================
!
! =============================================================================

if GLOB_CONTEXT = 6 then	! Window Schedule - 3D view should NOT display sash in open position
	openingAngle = 0
	openingAngle2 = 0
	openingLength = 0
	openingLength2 = 0
endif

bEnableSEOpening = (GLOB_CONTEXT <> 4 & GLOB_CONTEXT <> 6)

if iWindowClass = WINCLASS_SHELL then
	if not(bOpeningDirectionInside) then
		refPointSign = 1
	else
		refPointSign = -1
	endif
else
	if not(bOpeningDirectionInside) exor WIDO_REVEAL_SIDE then
		refPointSign = -1
	else
		refPointSign = 1
	endif
endif


! =============================================================================
! Open the Window
! =============================================================================

unID = OpeningUnID

gridIdxOffsetVgn	= 0
gridIdxOffsetHgn	= 0
gridIdxOffsetVgn2	= 0
gridIdxOffsetHgn2	= 0

bEdwardianSashStyle = 0

! -----------------------------------------------------------------------------
if	gs_optype_m = SASH_FIXED |\
	gs_optype_m = SASH_FIXED_SCREW |\
	gs_optype_m = SASH_FIXED_SLIDE then
	numTrafo = 0

	AA = A
	BB = B

	bSecondSash = 0
	gosub "DrawSash"
endif

! -----------------------------------------------------------------------------
if gs_optype_m = SASH_SIDE_HUNG then
	numTrafo = 0

	AA = A
	BB = B

	if gs_full_edit then
		mulx -1
		addx -A/2

		addy B/2
		rotx -90
		addy -gs_sash_thk/2
		if bEnableSEOpening then
			gosub "hotspots_SIDE_HUNG"
		endif
		del 3

		if openingAngle>90 then openingAngle=0
		if openingAngle<>0 then
			addz gs_rebate_depth
			roty -openingAngle
			addz -gs_rebate_depth
			numTrafo = numTrafo + 3
		endif

		addx A/2
		mulx -1
		numTrafo = numTrafo + 4
	endif

	bSecondSash = 0
	gosub "DrawSash"
endif

! -----------------------------------------------------------------------------
if gs_optype_m = SASH_SIDE_HUNG_M then
	numTrafo = 0

	AA = A
	BB = B

	if gs_full_edit then
		addx -A/2

		addy B/2
		rotx -90
		addy -gs_sash_thk/2
		if bEnableSEOpening then
			gosub "hotspots_SIDE_HUNG_M"
		endif
		del 3

		if openingAngle>90 then openingAngle=0
		if openingAngle<>0 then
			addz gs_rebate_depth
			roty -openingAngle
			addz -gs_rebate_depth
			numTrafo = numTrafo + 3
		endif

		addx A/2
		numTrafo = numTrafo + 2
	endif

	bSecondSash = 0
	gosub "DrawSash"
endif

! -----------------------------------------------------------------------------
if gs_optype_m = SASH_TILT_TURN then
	numTrafo = 0

	AA = A
	BB = B

	if gs_full_edit then
		mulx -1
		addx -A/2
		addy B/2
		rotx -90
		addy -gs_sash_thk/2
		if bEnableSEOpening then
			gosub "hotspots_SIDE_HUNG"
		endif
		del 5

		muly -1
		rotz -90
		rotx -90
		addy -gs_sash_thk/2
		if bEnableSEOpening then
			gosub "hotspots_TILT_BOTTOM_HUNG"
		endif
		del 4

		if abs(openingAngle2) > EPS then
			muly -1

			if openingAngle2>90 then openingAngle2=0
			if openingAngle2<>0 then
				addz gs_rebate_depth
				rotx -openingAngle2
				addz -gs_rebate_depth
				numTrafo = numTrafo + 3
			endif

			muly -1
			numTrafo = numTrafo + 2
		endif

		if abs(openingAngle) > EPS then
			mulx -1
			addx -A/2

			if openingAngle>90 then openingAngle=0
			if openingAngle<>0 then
				addz gs_rebate_depth
				roty -openingAngle
				addz -gs_rebate_depth
				numTrafo = numTrafo + 3
			endif

			addx A/2
			mulx -1
			numTrafo = numTrafo + 4
		endif
	endif

	bSecondSash = 0
	gosub "DrawSash"
endif

! -----------------------------------------------------------------------------
if gs_optype_m = SASH_TILT_TURN_M then
	numTrafo = 0

	AA = A
	BB = B

	if gs_full_edit then
		addx -A/2
		addy B/2
		rotx -90
		addy -gs_sash_thk/2
		if bEnableSEOpening then
			gosub "hotspots_SIDE_HUNG_M"
		endif
		del 4

		muly -1
		rotz -90
		rotx -90
		addy -gs_sash_thk/2
		if bEnableSEOpening then
			gosub "hotspots_TILT_BOTTOM_HUNG"
		endif
		del 4

		if abs(openingAngle2) > EPS then
			muly -1

			if openingAngle2>90 then openingAngle2=0
			if openingAngle2<>0 then
				addz gs_rebate_depth
				rotx -openingAngle2
				addz -gs_rebate_depth
				numTrafo = numTrafo + 3
			endif

			muly -1
			numTrafo = numTrafo + 2
		endif

		if abs(openingAngle) > EPS then
			addx -A/2

			if openingAngle>90 then openingAngle=0
			if openingAngle<>0 then
				addz gs_rebate_depth
				roty -openingAngle
				addz -gs_rebate_depth
				numTrafo = numTrafo + 3
			endif

			addx A/2
			numTrafo = numTrafo + 2
		endif
	endif

	bSecondSash = 0
	gosub "DrawSash"
endif

! -----------------------------------------------------------------------------
if gs_optype_m = SASH_BOTTOM_HUNG then
	numTrafo = 0

	AA = A
	BB = B

	if gs_full_edit then
		muly -1

		rotz -90
		rotx -90
		addy -gs_sash_thk/2
		if bEnableSEOpening then
			if CasementID = 1 then
				hotspot b,											-gs_sash_thk/2,								0, unID, openingAngle_01, 4+128 : unID=unID+1
				hotspot 0,											0,											refPointSign, 			 unID, openingAngle_01, 7 : unID=unID+1
				hotspot b*sin(90+openingAngle)+gs_sash_thk/2*cos(90+openingAngle),b*cos(90+openingAngle)-gs_sash_thk/2*sin(90+openingAngle),0, unID, openingAngle_01, 5 : unID=unID+1
				hotspot 0, 											0, 											0, unID, openingAngle_01, 6 : unID=unID+1
			endif

			if CasementID = 2 then
				hotspot b,											-gs_sash_thk/2,								0, unID, openingAngle_02, 4+128 : unID=unID+1
				hotspot 0,											0,											refPointSign, 			 unID, openingAngle_02, 7 : unID=unID+1
				hotspot b*sin(90+openingAngle)+gs_sash_thk/2*cos(90+openingAngle),b*cos(90+openingAngle)-gs_sash_thk/2*sin(90+openingAngle),0, unID, openingAngle_02, 5 : unID=unID+1
				hotspot 0, 											0, 											0, unID, openingAngle_02, 6 : unID=unID+1
			endif

			if CasementID = 3 then
				hotspot b,											-gs_sash_thk/2,								0, unID, openingAngle_03, 4+128 : unID=unID+1
				hotspot 0,											0,											refPointSign, 			 unID, openingAngle_03, 7 : unID=unID+1
				hotspot b*sin(90+openingAngle)+gs_sash_thk/2*cos(90+openingAngle),b*cos(90+openingAngle)-gs_sash_thk/2*sin(90+openingAngle),0, unID, openingAngle_03, 5 : unID=unID+1
				hotspot 0, 											0, 											0, unID, openingAngle_03, 6 : unID=unID+1
			endif

			if CasementID = 4 then
				hotspot b,											-gs_sash_thk/2,								0, unID, openingAngle_04, 4+128 : unID=unID+1
				hotspot 0,											0,											refPointSign, 			 unID, openingAngle_04, 7 : unID=unID+1
				hotspot b*sin(90+openingAngle)+gs_sash_thk/2*cos(90+openingAngle),b*cos(90+openingAngle)-gs_sash_thk/2*sin(90+openingAngle),0, unID, openingAngle_04, 5 : unID=unID+1
				hotspot 0, 											0, 											0, unID, openingAngle_04, 6 : unID=unID+1
			endif

			if CasementID = 5 then
				hotspot b,											-gs_sash_thk/2,								0, unID, openingAngle_05, 4+128 : unID=unID+1
				hotspot 0,											0,											refPointSign, 			 unID, openingAngle_05, 7 : unID=unID+1
				hotspot b*sin(90+openingAngle)+gs_sash_thk/2*cos(90+openingAngle),b*cos(90+openingAngle)-gs_sash_thk/2*sin(90+openingAngle),0, unID, openingAngle_05, 5 : unID=unID+1
				hotspot 0, 											0, 											0, unID, openingAngle_05, 6 : unID=unID+1
			endif

			if CasementID = 6 then
				hotspot b,											-gs_sash_thk/2,								0, unID, openingAngle_06, 4+128 : unID=unID+1
				hotspot 0,											0,											refPointSign, 			 unID, openingAngle_06, 7 : unID=unID+1
				hotspot b*sin(90+openingAngle)+gs_sash_thk/2*cos(90+openingAngle),b*cos(90+openingAngle)-gs_sash_thk/2*sin(90+openingAngle),0, unID, openingAngle_06, 5 : unID=unID+1
				hotspot 0, 											0, 											0, unID, openingAngle_06, 6 : unID=unID+1
			endif

			if CasementID = 7 then
				hotspot b,											-gs_sash_thk/2,								0, unID, openingAngle_07, 4+128 : unID=unID+1
				hotspot 0,											0,											refPointSign, 			 unID, openingAngle_07, 7 : unID=unID+1
				hotspot b*sin(90+openingAngle)+gs_sash_thk/2*cos(90+openingAngle),b*cos(90+openingAngle)-gs_sash_thk/2*sin(90+openingAngle),0, unID, openingAngle_07, 5 : unID=unID+1
				hotspot 0, 											0, 											0, unID, openingAngle_07, 6 : unID=unID+1
			endif

			if CasementID = 8 then
				hotspot b,											-gs_sash_thk/2,								0, unID, openingAngle_08, 4+128 : unID=unID+1
				hotspot 0,											0,											refPointSign, 			 unID, openingAngle_08, 7 : unID=unID+1
				hotspot b*sin(90+openingAngle)+gs_sash_thk/2*cos(90+openingAngle),b*cos(90+openingAngle)-gs_sash_thk/2*sin(90+openingAngle),0, unID, openingAngle_08, 5 : unID=unID+1
				hotspot 0, 											0, 											0, unID, openingAngle_08, 6 : unID=unID+1
			endif

			if CasementID = 9 then
				hotspot b,											-gs_sash_thk/2,								0, unID, openingAngle_09, 4+128 : unID=unID+1
				hotspot 0,											0,											refPointSign, 			 unID, openingAngle_09, 7 : unID=unID+1
				hotspot b*sin(90+openingAngle)+gs_sash_thk/2*cos(90+openingAngle),b*cos(90+openingAngle)-gs_sash_thk/2*sin(90+openingAngle),0, unID, openingAngle_09, 5 : unID=unID+1
				hotspot 0, 											0, 											0, unID, openingAngle_09, 6 : unID=unID+1
			endif

			if CasementID = 10 then
				hotspot b,											-gs_sash_thk/2,								0, unID, openingAngle_10, 4+128 : unID=unID+1
				hotspot 0,											0,											refPointSign, 			 unID, openingAngle_10, 7 : unID=unID+1
				hotspot b*sin(90+openingAngle)+gs_sash_thk/2*cos(90+openingAngle),b*cos(90+openingAngle)-gs_sash_thk/2*sin(90+openingAngle),0, unID, openingAngle_10, 5 : unID=unID+1
				hotspot 0, 											0, 											0, unID, openingAngle_10, 6 : unID=unID+1
			endif

			if CasementID = 11 then
				hotspot b,											-gs_sash_thk/2,								0, unID, openingAngle_11, 4+128 : unID=unID+1
				hotspot 0,											0,											refPointSign, 			 unID, openingAngle_11, 7 : unID=unID+1
				hotspot b*sin(90+openingAngle)+gs_sash_thk/2*cos(90+openingAngle),b*cos(90+openingAngle)-gs_sash_thk/2*sin(90+openingAngle),0, unID, openingAngle_11, 5 : unID=unID+1
				hotspot 0, 											0, 											0, unID, openingAngle_11, 6 : unID=unID+1
			endif

		endif
		del 3

		if openingAngle>90 then openingAngle=0
		if openingAngle<>0 then
			addz gs_rebate_depth
			rotx -openingAngle
			addz -gs_rebate_depth
			numTrafo = numTrafo + 3
		endif

		muly -1
		numTrafo = numTrafo + 2
	endif

	bSecondSash = 0
	gosub "DrawSash"
endif

! -----------------------------------------------------------------------------
if gs_optype_m = SASH_TOP_HUNG then
	numTrafo = 0

	AA = A
	BB = B

	if gs_full_edit then
		addy B

		rotz -90
		rotx -90
		addy -gs_sash_thk/2
		if bEnableSEOpening then
			if CasementID = 1 then
				hotspot b,											-gs_sash_thk/2,								0, unID, openingAngle_01, 4+128 : unID=unID+1
				hotspot 0,											0,											-refPointSign, unID, openingAngle_01, 7 : unID=unID+1
				hotspot b*sin(90+openingAngle)+gs_sash_thk/2*cos(90+openingAngle),b*cos(90+openingAngle)-gs_sash_thk/2*sin(90+openingAngle),0, unID, openingAngle_01, 5 : unID=unID+1
				hotspot 0, 											0, 											0, unID, openingAngle_01, 6 : unID=unID+1
			endif

			if CasementID = 2 then
				hotspot b,											-gs_sash_thk/2,								0, unID, openingAngle_02, 4+128 : unID=unID+1
				hotspot 0,											0,											-refPointSign, unID, openingAngle_02, 7 : unID=unID+1
				hotspot b*sin(90+openingAngle)+gs_sash_thk/2*cos(90+openingAngle),b*cos(90+openingAngle)-gs_sash_thk/2*sin(90+openingAngle),0, unID, openingAngle_02, 5 : unID=unID+1
				hotspot 0, 											0, 											0, unID, openingAngle_02, 6 : unID=unID+1
			endif

			if CasementID = 3 then
				hotspot b,											-gs_sash_thk/2,								0, unID, openingAngle_03, 4+128 : unID=unID+1
				hotspot 0,											0,											-refPointSign, unID, openingAngle_03, 7 : unID=unID+1
				hotspot b*sin(90+openingAngle)+gs_sash_thk/2*cos(90+openingAngle),b*cos(90+openingAngle)-gs_sash_thk/2*sin(90+openingAngle),0, unID, openingAngle_03, 5 : unID=unID+1
				hotspot 0, 											0, 											0, unID, openingAngle_03, 6 : unID=unID+1
			endif

			if CasementID = 4 then
				hotspot b,											-gs_sash_thk/2,								0, unID, openingAngle_04, 4+128 : unID=unID+1
				hotspot 0,											0,											-refPointSign, unID, openingAngle_04, 7 : unID=unID+1
				hotspot b*sin(90+openingAngle)+gs_sash_thk/2*cos(90+openingAngle),b*cos(90+openingAngle)-gs_sash_thk/2*sin(90+openingAngle),0, unID, openingAngle_04, 5 : unID=unID+1
				hotspot 0, 											0, 											0, unID, openingAngle_04, 6 : unID=unID+1
			endif

			if CasementID = 5 then
				hotspot b,											-gs_sash_thk/2,								0, unID, openingAngle_05, 4+128 : unID=unID+1
				hotspot 0,											0,											-refPointSign, unID, openingAngle_05, 7 : unID=unID+1
				hotspot b*sin(90+openingAngle)+gs_sash_thk/2*cos(90+openingAngle),b*cos(90+openingAngle)-gs_sash_thk/2*sin(90+openingAngle),0, unID, openingAngle_05, 5 : unID=unID+1
				hotspot 0, 											0, 											0, unID, openingAngle_05, 6 : unID=unID+1
			endif

			if CasementID = 6 then
				hotspot b,											-gs_sash_thk/2,								0, unID, openingAngle_06, 4+128 : unID=unID+1
				hotspot 0,											0,											-refPointSign, unID, openingAngle_06, 7 : unID=unID+1
				hotspot b*sin(90+openingAngle)+gs_sash_thk/2*cos(90+openingAngle),b*cos(90+openingAngle)-gs_sash_thk/2*sin(90+openingAngle),0, unID, openingAngle_06, 5 : unID=unID+1
				hotspot 0, 											0, 											0, unID, openingAngle_06, 6 : unID=unID+1
			endif

			if CasementID = 7 then
				hotspot b,											-gs_sash_thk/2,								0, unID, openingAngle_07, 4+128 : unID=unID+1
				hotspot 0,											0,											-refPointSign, unID, openingAngle_07, 7 : unID=unID+1
				hotspot b*sin(90+openingAngle)+gs_sash_thk/2*cos(90+openingAngle),b*cos(90+openingAngle)-gs_sash_thk/2*sin(90+openingAngle),0, unID, openingAngle_07, 5 : unID=unID+1
				hotspot 0, 											0, 											0, unID, openingAngle_07, 6 : unID=unID+1
			endif

			if CasementID = 8 then
				hotspot b,											-gs_sash_thk/2,								0, unID, openingAngle_08, 4+128 : unID=unID+1
				hotspot 0,											0,											-refPointSign, unID, openingAngle_08, 7 : unID=unID+1
				hotspot b*sin(90+openingAngle)+gs_sash_thk/2*cos(90+openingAngle),b*cos(90+openingAngle)-gs_sash_thk/2*sin(90+openingAngle),0, unID, openingAngle_08, 5 : unID=unID+1
				hotspot 0, 											0, 											0, unID, openingAngle_08, 6 : unID=unID+1
			endif

			if CasementID = 9 then
				hotspot b,											-gs_sash_thk/2,								0, unID, openingAngle_09, 4+128 : unID=unID+1
				hotspot 0,											0,											-refPointSign, unID, openingAngle_09, 7 : unID=unID+1
				hotspot b*sin(90+openingAngle)+gs_sash_thk/2*cos(90+openingAngle),b*cos(90+openingAngle)-gs_sash_thk/2*sin(90+openingAngle),0, unID, openingAngle_09, 5 : unID=unID+1
				hotspot 0, 											0, 											0, unID, openingAngle_09, 6 : unID=unID+1
			endif

			if CasementID = 10 then
				hotspot b,											-gs_sash_thk/2,								0, unID, openingAngle_10, 4+128 : unID=unID+1
				hotspot 0,											0,											-refPointSign, unID, openingAngle_10, 7 : unID=unID+1
				hotspot b*sin(90+openingAngle)+gs_sash_thk/2*cos(90+openingAngle),b*cos(90+openingAngle)-gs_sash_thk/2*sin(90+openingAngle),0, unID, openingAngle_10, 5 : unID=unID+1
				hotspot 0, 											0, 											0, unID, openingAngle_10, 6 : unID=unID+1
			endif

			if CasementID = 11 then
				hotspot b,											-gs_sash_thk/2,								0, unID, openingAngle_11, 4+128 : unID=unID+1
				hotspot 0,											0,											-refPointSign, unID, openingAngle_11, 7 : unID=unID+1
				hotspot b*sin(90+openingAngle)+gs_sash_thk/2*cos(90+openingAngle),b*cos(90+openingAngle)-gs_sash_thk/2*sin(90+openingAngle),0, unID, openingAngle_11, 5 : unID=unID+1
				hotspot 0, 											0, 											0, unID, openingAngle_11, 6 : unID=unID+1
			endif
		endif
		del 3

		if openingAngle>90 then openingAngle=0
		if openingAngle<>0 then
			addz gs_rebate_depth
			rotx -openingAngle
			addz -gs_rebate_depth
			numTrafo = numTrafo + 3
		endif

		addy -B
		numTrafo = numTrafo + 2
	endif

	bSecondSash = 0
	gosub "DrawSash"
endif

! -----------------------------------------------------------------------------
if gs_optype_m = SASH_VER_PIVOT | gs_optype_m = SASH_VER_PIVOT_M then
	numTrafo = 0

	AA = A
	BB = B

	if gs_full_edit then
		addy B/2

		rotx -90
		addy -gs_sash_thk/2
		if bEnableSEOpening then
			if gs_optype_m = SASH_VER_PIVOT_M then mulx -1

			if CasementID = 1 then
				hotspot A/2,			-gs_sash_thk/2, 0, unID + 0, openingAngle_01, 4+128
				hotspot gs_sash_thk/2,	 A/2,			0, unID + 1, openingAngle_01, 7
				hotspot (gs_sash_thk/2) * sin(180 + openingAngle) + A/2 * sin(90 + openingAngle),
						(gs_sash_thk/2) * cos(180 + openingAngle) + A/2 * cos(90 + openingAngle),
														0, unID + 2, openingAngle_01, 5
				hotspot 0,				 0,				0, unID + 3, openingAngle_01, 6
				unID = unID + 4
			endif

			if CasementID = 2 then
				hotspot A/2,			-gs_sash_thk/2, 0, unID + 0, openingAngle_02, 4+128
				hotspot gs_sash_thk/2,	 A/2,			0, unID + 1, openingAngle_02, 7
				hotspot (gs_sash_thk/2) * sin(180 + openingAngle) + A/2 * sin(90 + openingAngle),
						(gs_sash_thk/2) * cos(180 + openingAngle) + A/2 * cos(90 + openingAngle),
														0, unID + 2, openingAngle_02, 5
				hotspot 0,				 0,				0, unID + 3, openingAngle_02, 6
				unID = unID + 4
			endif

			if CasementID = 3 then
				hotspot A/2,			-gs_sash_thk/2, 0, unID + 0, openingAngle_03, 4+128
				hotspot gs_sash_thk/2,	 A/2,			0, unID + 1, openingAngle_03, 7
				hotspot (gs_sash_thk/2) * sin(180 + openingAngle) + A/2 * sin(90 + openingAngle),
						(gs_sash_thk/2) * cos(180 + openingAngle) + A/2 * cos(90 + openingAngle),
														0, unID + 2, openingAngle_03, 5
				hotspot 0,				 0,				0, unID + 3, openingAngle_03, 6
				unID = unID + 4
			endif

			if CasementID = 4 then
				hotspot A/2,			-gs_sash_thk/2, 0, unID + 0, openingAngle_04, 4+128
				hotspot gs_sash_thk/2,	 A/2,			0, unID + 1, openingAngle_04, 7
				hotspot (gs_sash_thk/2) * sin(180 + openingAngle) + A/2 * sin(90 + openingAngle),
						(gs_sash_thk/2) * cos(180 + openingAngle) + A/2 * cos(90 + openingAngle),
														0, unID + 2, openingAngle_04, 5
				hotspot 0,				 0,				0, unID + 3, openingAngle_04, 6
				unID = unID + 4
			endif

			if CasementID = 5 then
				hotspot A/2,			-gs_sash_thk/2, 0, unID + 0, openingAngle_05, 4+128
				hotspot gs_sash_thk/2,	 A/2,			0, unID + 1, openingAngle_05, 7
				hotspot (gs_sash_thk/2) * sin(180 + openingAngle) + A/2 * sin(90 + openingAngle),
						(gs_sash_thk/2) * cos(180 + openingAngle) + A/2 * cos(90 + openingAngle),
														0, unID + 2, openingAngle_05, 5
				hotspot 0,				 0,				0, unID + 3, openingAngle_05, 6
				unID = unID + 4
			endif

			if CasementID = 6 then
				hotspot A/2,			-gs_sash_thk/2, 0, unID + 0, openingAngle_06, 4+128
				hotspot gs_sash_thk/2,	 A/2,			0, unID + 1, openingAngle_06, 7
				hotspot (gs_sash_thk/2) * sin(180 + openingAngle) + A/2 * sin(90 + openingAngle),
						(gs_sash_thk/2) * cos(180 + openingAngle) + A/2 * cos(90 + openingAngle),
														0, unID + 2, openingAngle_06, 5
				hotspot 0,				 0,				0, unID + 3, openingAngle_06, 6
				unID = unID + 4
			endif

			if CasementID = 7 then
				hotspot A/2,			-gs_sash_thk/2, 0, unID + 0, openingAngle_07, 4+128
				hotspot gs_sash_thk/2,	 A/2,			0, unID + 1, openingAngle_07, 7
				hotspot (gs_sash_thk/2) * sin(180 + openingAngle) + A/2 * sin(90 + openingAngle),
						(gs_sash_thk/2) * cos(180 + openingAngle) + A/2 * cos(90 + openingAngle),
														0, unID + 2, openingAngle_07, 5
				hotspot 0,				 0,				0, unID + 3, openingAngle_07, 6
				unID = unID + 4
			endif

			if CasementID = 8 then
				hotspot A/2,			-gs_sash_thk/2, 0, unID + 0, openingAngle_08, 4+128
				hotspot gs_sash_thk/2,	 A/2,			0, unID + 1, openingAngle_08, 7
				hotspot (gs_sash_thk/2) * sin(180 + openingAngle) + A/2 * sin(90 + openingAngle),
						(gs_sash_thk/2) * cos(180 + openingAngle) + A/2 * cos(90 + openingAngle),
														0, unID + 2, openingAngle_08, 5
				hotspot 0,				 0,				0, unID + 3, openingAngle_08, 6
				unID = unID + 4
			endif

			if CasementID = 9 then
				hotspot A/2,			-gs_sash_thk/2, 0, unID + 0, openingAngle_09, 4+128
				hotspot gs_sash_thk/2,	 A/2,			0, unID + 1, openingAngle_09, 7
				hotspot (gs_sash_thk/2) * sin(180 + openingAngle) + A/2 * sin(90 + openingAngle),
						(gs_sash_thk/2) * cos(180 + openingAngle) + A/2 * cos(90 + openingAngle),
														0, unID + 2, openingAngle_09, 5
				hotspot 0,				 0,				0, unID + 3, openingAngle_09, 6
				unID = unID + 4
			endif

			if CasementID = 10 then
				hotspot A/2,			-gs_sash_thk/2, 0, unID + 0, openingAngle_10, 4+128
				hotspot gs_sash_thk/2,	 A/2,			0, unID + 1, openingAngle_10, 7
				hotspot (gs_sash_thk/2) * sin(180 + openingAngle) + A/2 * sin(90 + openingAngle),
						(gs_sash_thk/2) * cos(180 + openingAngle) + A/2 * cos(90 + openingAngle),
														0, unID + 2, openingAngle_10, 5
				hotspot 0,				 0,				0, unID + 3, openingAngle_10, 6
				unID = unID + 4
			endif

			if CasementID = 11 then
				hotspot A/2,			-gs_sash_thk/2, 0, unID + 0, openingAngle_11, 4+128
				hotspot gs_sash_thk/2,	 A/2,			0, unID + 1, openingAngle_11, 7
				hotspot (gs_sash_thk/2) * sin(180 + openingAngle) + A/2 * sin(90 + openingAngle),
						(gs_sash_thk/2) * cos(180 + openingAngle) + A/2 * cos(90 + openingAngle),
														0, unID + 2, openingAngle_11, 5
				hotspot 0,				 0,				0, unID + 3, openingAngle_11, 6
				unID = unID + 4
			endif
			if gs_optype_m = SASH_VER_PIVOT_M then del 1
		endif
		del 2

		if openingAngle>90 then openingAngle=0
		if openingAngle<>0 then
			addz gs_rebate_depth
			if gs_optype_m = SASH_VER_PIVOT then
				roty -openingAngle
			else
				roty openingAngle
			endif
			addz -gs_rebate_depth
			numTrafo = numTrafo + 3
		endif

		addy -B/2
		numTrafo = numTrafo + 2
	endif

	bSecondSash = 0
	gosub "DrawSash"
endif

! -----------------------------------------------------------------------------
if gs_optype_m = SASH_HOR_PIVOT then
	numTrafo = 0

	AA = A
	BB = B

	! The Opening Sash is always open outwards from down by Reversible Horizontal Sash Type
	if not(bOpeningDirectionInside) then
		if lod3D = 1 | lod3D = 5 then
			addz -gs_frame_thk
		else
			addz gs_sash_thk
		endif
		mulz -1
		bOpeningDirectionInside = 1
		refPointSign = -refPointSign
	endif

	if gs_full_edit then

		roty -90
		add gs_sash_thk/2, B/2, 0
		if bEnableSEOpening then
			if CasementID = 1 then
				hotspot -gs_sash_thk/2,	-B/2,			0, unID + 0, openingAngle_01, 4+128
				hotspot 0,				0,	-refPointSign, unID + 1, openingAngle_01, 7
				hotspot  (gs_sash_thk/2) * cos(180 + openingAngle) + B/2 * cos(90 + openingAngle),
						-(gs_sash_thk/2) * sin(180 + openingAngle) - B/2 * sin(90 + openingAngle),
														0, unID + 2, openingAngle_01, 5
				hotspot 0,				 0,				0, unID + 3, openingAngle_01, 6
				unID = unID + 4
			endif

			if CasementID = 2 then
				hotspot -gs_sash_thk/2,	-B/2,			0, unID + 0, openingAngle_02, 4+128
				hotspot 0,				0,	-refPointSign, unID + 1, openingAngle_02, 7
				hotspot  (gs_sash_thk/2) * cos(180 + openingAngle) + B/2 * cos(90 + openingAngle),
						-(gs_sash_thk/2) * sin(180 + openingAngle) - B/2 * sin(90 + openingAngle),
														0, unID + 2, openingAngle_02, 5
				hotspot 0,				 0,				0, unID + 3, openingAngle_02, 6
				unID = unID + 4
			endif

			if CasementID = 3 then
				hotspot -gs_sash_thk/2,	-B/2,			0, unID + 0, openingAngle_03, 4+128
				hotspot 0,				0,	-refPointSign, unID + 1, openingAngle_03, 7
				hotspot  (gs_sash_thk/2) * cos(180 + openingAngle) + B/2 * cos(90 + openingAngle),
						-(gs_sash_thk/2) * sin(180 + openingAngle) - B/2 * sin(90 + openingAngle),
														0, unID + 2, openingAngle_03, 5
				hotspot 0,				 0,				0, unID + 3, openingAngle_03, 6
				unID = unID + 4
			endif

			if CasementID = 4 then
				hotspot -gs_sash_thk/2,	-B/2,			0, unID + 0, openingAngle_04, 4+128
				hotspot 0,				0,	-refPointSign, unID + 1, openingAngle_04, 7
				hotspot  (gs_sash_thk/2) * cos(180 + openingAngle) + B/2 * cos(90 + openingAngle),
						-(gs_sash_thk/2) * sin(180 + openingAngle) - B/2 * sin(90 + openingAngle),
														0, unID + 2, openingAngle_04, 5
				hotspot 0,				 0,				0, unID + 3, openingAngle_04, 6
				unID = unID + 4
			endif

			if CasementID = 5 then
				hotspot -gs_sash_thk/2,	-B/2,			0, unID + 0, openingAngle_05, 4+128
				hotspot 0,				0,	-refPointSign, unID + 1, openingAngle_05, 7
				hotspot  (gs_sash_thk/2) * cos(180 + openingAngle) + B/2 * cos(90 + openingAngle),
						-(gs_sash_thk/2) * sin(180 + openingAngle) - B/2 * sin(90 + openingAngle),
														0, unID + 2, openingAngle_05, 5
				hotspot 0,				 0,				0, unID + 3, openingAngle_05, 6
				unID = unID + 4
			endif

			if CasementID = 6 then
				hotspot -gs_sash_thk/2,	-B/2,			0, unID + 0, openingAngle_06, 4+128
				hotspot 0,				0,	-refPointSign, unID + 1, openingAngle_06, 7
				hotspot  (gs_sash_thk/2) * cos(180 + openingAngle) + B/2 * cos(90 + openingAngle),
						-(gs_sash_thk/2) * sin(180 + openingAngle) - B/2 * sin(90 + openingAngle),
														0, unID + 2, openingAngle_06, 5
				hotspot 0,				 0,				0, unID + 3, openingAngle_06, 6
				unID = unID + 4
			endif

			if CasementID = 7 then
				hotspot -gs_sash_thk/2,	-B/2,			0, unID + 0, openingAngle_07, 4+128
				hotspot 0,				0,	-refPointSign, unID + 1, openingAngle_07, 7
				hotspot  (gs_sash_thk/2) * cos(180 + openingAngle) + B/2 * cos(90 + openingAngle),
						-(gs_sash_thk/2) * sin(180 + openingAngle) - B/2 * sin(90 + openingAngle),
														0, unID + 2, openingAngle_07, 5
				hotspot 0,				 0,				0, unID + 3, openingAngle_07, 6
				unID = unID + 4
			endif

			if CasementID = 8 then
				hotspot -gs_sash_thk/2,	-B/2,			0, unID + 0, openingAngle_08, 4+128
				hotspot 0,				0,	-refPointSign, unID + 1, openingAngle_08, 7
				hotspot  (gs_sash_thk/2) * cos(180 + openingAngle) + B/2 * cos(90 + openingAngle),
						-(gs_sash_thk/2) * sin(180 + openingAngle) - B/2 * sin(90 + openingAngle),
														0, unID + 2, openingAngle_08, 5
				hotspot 0,				 0,				0, unID + 3, openingAngle_08, 6
				unID = unID + 4
			endif

			if CasementID = 9 then
				hotspot -gs_sash_thk/2,	-B/2,			0, unID + 0, openingAngle_09, 4+128
				hotspot 0,				0,	-refPointSign, unID + 1, openingAngle_09, 7
				hotspot  (gs_sash_thk/2) * cos(180 + openingAngle) + B/2 * cos(90 + openingAngle),
						-(gs_sash_thk/2) * sin(180 + openingAngle) - B/2 * sin(90 + openingAngle),
														0, unID + 2, openingAngle_09, 5
				hotspot 0,				 0,				0, unID + 3, openingAngle_09, 6
				unID = unID + 4
			endif

			if CasementID = 10 then
				hotspot -gs_sash_thk/2,	-B/2,			0, unID + 0, openingAngle_10, 4+128
				hotspot 0,				0,	-refPointSign, unID + 1, openingAngle_10, 7
				hotspot  (gs_sash_thk/2) * cos(180 + openingAngle) + B/2 * cos(90 + openingAngle),
						-(gs_sash_thk/2) * sin(180 + openingAngle) - B/2 * sin(90 + openingAngle),
														0, unID + 2, openingAngle_10, 5
				hotspot 0,				 0,				0, unID + 3, openingAngle_10, 6
				unID = unID + 4
			endif

			if CasementID = 11 then
				hotspot -gs_sash_thk/2,	-B/2,			0, unID + 0, openingAngle_11, 4+128
				hotspot 0,				0,	-refPointSign, unID + 1, openingAngle_11, 7
				hotspot  (gs_sash_thk/2) * cos(180 + openingAngle) + B/2 * cos(90 + openingAngle),
						-(gs_sash_thk/2) * sin(180 + openingAngle) - B/2 * sin(90 + openingAngle),
														0, unID + 2, openingAngle_11, 5
				hotspot 0,				 0,				0, unID + 3, openingAngle_11, 6
				unID = unID + 4
			endif
		endif
		del 2

		if openingAngle>90 then openingAngle=0
		if openingAngle<>0 then
			add 0, B/2, gs_rebate_depth
			rotx openingAngle
			add 0, -B/2, -gs_rebate_depth
			numTrafo = numTrafo + 3
		endif
	endif

	bSecondSash = 0
	gosub "DrawSash"
endif

! -----------------------------------------------------------------------------
if gs_optype_m = SASH_LEFT_SLIDING then
	numTrafo = 0

	AA = A
	BB = B

	if gs_full_edit then
		gosub "hotspots_LEFT_SLIDING_HOR"

		if openingLength>openingMaxLength then openingLength=openingMaxLength
		if openingLength<0 then openingLength=0

		addx -openingLength
		numTrafo = numTrafo + 1
	endif

	bSecondSash = 0
	gosub "DrawSash"
endif

! -----------------------------------------------------------------------------
if gs_optype_m = SASH_RIGHT_SLIDING then
	numTrafo = 0

	AA = A
	BB = B

	if gs_full_edit then
		if CasementID = 1 then
			hotspot -a/2, b/2, 0, unID, openingLength_01, 1+128 : unID=unID+1
			hotspot -a, b/2, 0, unID, openingLength_01, 3 : unID=unID+1
			hotspot -a/2+openingLength, b/2, 0, unID, openingLength_01, 2 : unID=unID+1
		endif

		if CasementID = 2 then
			hotspot -a/2, b/2, 0, unID, openingLength_02, 1+128 : unID=unID+1
			hotspot -a, b/2, 0, unID, openingLength_02, 3 : unID=unID+1
			hotspot -a/2+openingLength, b/2, 0, unID, openingLength_02, 2 : unID=unID+1
		endif

		if CasementID = 3 then
			hotspot -a/2, b/2, 0, unID, openingLength_03, 1+128 : unID=unID+1
			hotspot -a, b/2, 0, unID, openingLength_03, 3 : unID=unID+1
			hotspot -a/2+openingLength, b/2, 0, unID, openingLength_03, 2 : unID=unID+1
		endif

		if CasementID = 4 then
			hotspot -a/2, b/2, 0, unID, openingLength_04, 1+128 : unID=unID+1
			hotspot -a, b/2, 0, unID, openingLength_04, 3 : unID=unID+1
			hotspot -a/2+openingLength, b/2, 0, unID, openingLength_04, 2 : unID=unID+1
		endif

		if CasementID = 5 then
			hotspot -a/2, b/2, 0, unID, openingLength_05, 1+128 : unID=unID+1
			hotspot -a, b/2, 0, unID, openingLength_05, 3 : unID=unID+1
			hotspot -a/2+openingLength, b/2, 0, unID, openingLength_05, 2 : unID=unID+1
		endif

		if CasementID = 6 then
			hotspot -a/2, b/2, 0, unID, openingLength_06, 1+128 : unID=unID+1
			hotspot -a, b/2, 0, unID, openingLength_06, 3 : unID=unID+1
			hotspot -a/2+openingLength, b/2, 0, unID, openingLength_06, 2 : unID=unID+1
		endif

		if CasementID = 7 then
			hotspot -a/2, b/2, 0, unID, openingLength_07, 1+128 : unID=unID+1
			hotspot -a, b/2, 0, unID, openingLength_07, 3 : unID=unID+1
			hotspot -a/2+openingLength, b/2, 0, unID, openingLength_07, 2 : unID=unID+1
		endif

		if CasementID = 8 then
			hotspot -a/2, b/2, 0, unID, openingLength_08, 1+128 : unID=unID+1
			hotspot -a, b/2, 0, unID, openingLength_08, 3 : unID=unID+1
			hotspot -a/2+openingLength, b/2, 0, unID, openingLength_08, 2 : unID=unID+1
		endif

		if CasementID = 9 then
			hotspot -a/2, b/2, 0, unID, openingLength_09, 1+128 : unID=unID+1
			hotspot -a, b/2, 0, unID, openingLength_09, 3 : unID=unID+1
			hotspot -a/2+openingLength, b/2, 0, unID, openingLength_09, 2 : unID=unID+1
		endif

		if CasementID = 10 then
			hotspot -a/2, b/2, 0, unID, openingLength_10, 1+128 : unID=unID+1
			hotspot -a, b/2, 0, unID, openingLength_10, 3 : unID=unID+1
			hotspot -a/2+openingLength, b/2, 0, unID, openingLength_10, 2 : unID=unID+1
		endif

		if CasementID = 11 then
			hotspot -a/2, b/2, 0, unID, openingLength_11, 1+128 : unID=unID+1
			hotspot -a, b/2, 0, unID, openingLength_11, 3 : unID=unID+1
			hotspot -a/2+openingLength, b/2, 0, unID, openingLength_11, 2 : unID=unID+1
		endif

		if openingLength>openingMaxLength then openingLength=openingMaxLength
		if openingLength<0 then openingLength=0

		addx openingLength
		numTrafo = numTrafo + 1
	endif

	bSecondSash = 0
	gosub "DrawSash"
endif

! -----------------------------------------------------------------------------
if gs_optype_m = SASH_UP_SLIDING then
	numTrafo = 0

	AA = A
	BB = B

	if gs_full_edit then
		gosub "hotspots_UP_SLIDING_VER"

		if openingLength>openingMaxLength then openingLength=openingMaxLength
		if openingLength<0 then openingLength=0

		addy openingLength
		numTrafo = numTrafo + 1
	endif

	bSecondSash = 0
	gosub "DrawSash"
endif

! -----------------------------------------------------------------------------
if gs_optype_m = SASH_DOWN_SLIDING then
	numTrafo = 0

	AA = A
	BB = B

	if gs_full_edit then
		if CasementID = 1 then
			hotspot 0, b, 0, unID, openingLength_01, 1+128 : unID=unID+1
			hotspot 0, b+1, 0, unID, openingLength_01, 3 : unID=unID+1
			hotspot 0, b-openingLength, 0, unID, openingLength_01, 2 : unID=unID+1
		endif

		if CasementID = 2 then
			hotspot 0, b, 0, unID, openingLength_02, 1+128 : unID=unID+1
			hotspot 0, b+1, 0, unID, openingLength_02, 3 : unID=unID+1
			hotspot 0, b-openingLength, 0, unID, openingLength_02, 2 : unID=unID+1
		endif

		if CasementID = 3 then
			hotspot 0, b, 0, unID, openingLength_03, 1+128 : unID=unID+1
			hotspot 0, b+1, 0, unID, openingLength_03, 3 : unID=unID+1
			hotspot 0, b-openingLength, 0, unID, openingLength_03, 2 : unID=unID+1
		endif

		if CasementID = 4 then
			hotspot 0, b, 0, unID, openingLength_04, 1+128 : unID=unID+1
			hotspot 0, b+1, 0, unID, openingLength_04, 3 : unID=unID+1
			hotspot 0, b-openingLength, 0, unID, openingLength_04, 2 : unID=unID+1
		endif

		if CasementID = 5 then
			hotspot 0, b, 0, unID, openingLength_05, 1+128 : unID=unID+1
			hotspot 0, b+1, 0, unID, openingLength_05, 3 : unID=unID+1
			hotspot 0, b-openingLength, 0, unID, openingLength_05, 2 : unID=unID+1
		endif

		if CasementID = 6 then
			hotspot 0, b, 0, unID, openingLength_06, 1+128 : unID=unID+1
			hotspot 0, b+1, 0, unID, openingLength_06, 3 : unID=unID+1
			hotspot 0, b-openingLength, 0, unID, openingLength_06, 2 : unID=unID+1
		endif

		if CasementID = 7 then
			hotspot 0, b, 0, unID, openingLength_07, 1+128 : unID=unID+1
			hotspot 0, b+1, 0, unID, openingLength_07, 3 : unID=unID+1
			hotspot 0, b-openingLength, 0, unID, openingLength_07, 2 : unID=unID+1
		endif

		if CasementID = 8 then
			hotspot 0, b, 0, unID, openingLength_08, 1+128 : unID=unID+1
			hotspot 0, b+1, 0, unID, openingLength_08, 3 : unID=unID+1
			hotspot 0, b-openingLength, 0, unID, openingLength_08, 2 : unID=unID+1
		endif

		if CasementID = 9 then
			hotspot 0, b, 0, unID, openingLength_09, 1+128 : unID=unID+1
			hotspot 0, b+1, 0, unID, openingLength_09, 3 : unID=unID+1
			hotspot 0, b-openingLength, 0, unID, openingLength_09, 2 : unID=unID+1
		endif

		if CasementID = 10 then
			hotspot 0, b, 0, unID, openingLength_10, 1+128 : unID=unID+1
			hotspot 0, b+1, 0, unID, openingLength_10, 3 : unID=unID+1
			hotspot 0, b-openingLength, 0, unID, openingLength_10, 2 : unID=unID+1
		endif

		if CasementID = 11 then
			hotspot 0, b, 0, unID, openingLength_11, 1+128 : unID=unID+1
			hotspot 0, b+1, 0, unID, openingLength_11, 3 : unID=unID+1
			hotspot 0, b-openingLength, 0, unID, openingLength_11, 2 : unID=unID+1
		endif

		if openingLength>openingMaxLength then openingLength=openingMaxLength
		if openingLength<0 then openingLength=0

		addy -openingLength
		numTrafo = numTrafo + 1
	endif

	bSecondSash = 0
	gosub "DrawSash"
endif

! -----------------------------------------------------------------------------
if	gs_optype_m = SASH_DOUBLE_SIDE_HUNG |\
	gs_optype_m = SASH_DOUBLE_TILT_TURN |\
	gs_optype_m = SASH_DOUBLE_TILT_TURN_M then

	numTrafo = 0

	AA = A / 2
	BB = B

	if gs_full_edit then
		mulx -1
		addx -A/2
		addy B/2
		rotx -90
		addy -gs_sash_thk/2
		if bEnableSEOpening then
			gosub "hotspots_SIDE_HUNG"
		endif
		del 5

		if gs_optype_m = SASH_DOUBLE_TILT_TURN then
			muly -1
			rotz -90
			rotx -90
			add 0, -gs_sash_thk/2, A/4
			if bEnableSEOpening then
				gosub "hotspots_TILT_BOTTOM_HUNG"
			endif
			del 4

			if abs(openingAngle2) > EPS then
				muly -1

				if openingAngle2>90 then openingAngle2=0
				if openingAngle2<>0 then
					addz gs_rebate_depth
					rotx -openingAngle2
					addz -gs_rebate_depth
					numTrafo = numTrafo + 3
				endif

				muly -1
				numTrafo = numTrafo + 2
			endif
		endif

		if abs(openingAngle) > EPS then
			mulx -1
			addx -A/2

			if openingAngle>90 then openingAngle=0
			if openingAngle<>0 then
				addz gs_rebate_depth
				roty -openingAngle
				addz -gs_rebate_depth
				numTrafo = numTrafo + 3
			endif

			addx A/2
			mulx -1
			numTrafo = numTrafo + 4
		endif
	endif

	addx A/4
	bSecondSash = 0
	gosub "DrawSash"
	del numTrafo + 1
	numTrafo = 0

	if gs_full_edit then
		addx -A/2
		addy B/2
		rotx -90
		addy -gs_sash_thk/2
		if bEnableSEOpening then
			gosub "hotspots_SIDE_HUNG_M"
		endif
		del 4

		if gs_optype_m = SASH_DOUBLE_TILT_TURN_M then
			muly -1
			rotz -90
			rotx -90
			add 0, -gs_sash_thk/2, -A/4
			if bEnableSEOpening then
				gosub "hotspots_TILT_BOTTOM_HUNG"
			endif
			del 4

			if abs(openingAngle2) > EPS then
				muly -1

				if openingAngle2>90 then openingAngle2=0
				if openingAngle2<>0 then
					addz gs_rebate_depth
					rotx -openingAngle2
					addz -gs_rebate_depth
					numTrafo = numTrafo + 3
				endif

				muly -1
				numTrafo = numTrafo + 2
			endif
		endif

		if abs(openingAngle) > EPS then
			add -A/2, 0, gs_rebate_depth
			roty -openingAngle
			add A/2, 0, -gs_rebate_depth
			numTrafo = numTrafo + 3
		endif
	endif

	addx -A/4
	VerticalGridUnID	= VerticalGridUnID2
	HorizontalGridUnID	= HorizontalGridUnID2
	gridIdxOffsetVgn	= vgn
	gridIdxOffsetHgn	= hgn
	gridIdxOffsetVgn2	= vgn2
	gridIdxOffsetHgn2	= hgn2
	bSecondSash = 1
	gosub"DrawSash"
	del numTrafo + 1
endif

! -----------------------------------------------------------------------------
if	gs_optype_m = SASH_SLIDING_HOR |\
	gs_optype_m = SASH_SLIDING_HOR_M |\
	gs_optype_m = SASH_DOUBLE_SLIDING_HOR |\
	gs_optype_m = SASH_DOUBLE_SLIDING_HOR_M then

	numTrafo = 0

	AA = A / 2 + gs_sash_width / 2
	BB = B
	if isWindow then
		gs_sash_thk	= gs_frame_thk / 2
	else
		gs_sash_thk	= min(gs_sash_thk, gs_frame_thk / 2)
	endif

	if gs_full_edit then
		bMirroredSash = (gs_optype_m = SASH_SLIDING_HOR_M | gs_optype_m = SASH_DOUBLE_SLIDING_HOR_M)

		if bMirroredSash then mulx -1
		addz gs_sash_thk
		gosub "hotspots_LEFT_SLIDING_HOR"
		del 1

		if (gs_optype_m = SASH_DOUBLE_SLIDING_HOR | gs_optype_m = SASH_DOUBLE_SLIDING_HOR_M) then
			gosub "hotspots_DOUBLE_SLIDING_HOR"
		else
			openingLength2 = 0
		endif
		if bMirroredSash then del 1

		if bMirroredSash then
			openingLengthRight	= openingLength2
			openingLengthLeft	= openingLength
		else
			openingLengthRight	= openingLength
			openingLengthLeft	= openingLength2
		endif
	else
		openingLengthRight = 0
		openingLengthLeft  = 0
	endif

	addx A/4 - gs_sash_width / 4 - openingLengthRight
	if (lod3D = 2 | (iMullionStyle = MULLION_SOLID_PANEL & lod3D <> 5)) & (gs_optype_m = SASH_SLIDING_HOR | gs_optype_m = SASH_DOUBLE_SLIDING_HOR) then
		addz gs_sash_thk
		numTrafo = numTrafo + 1
	endif
	bSecondSash = 0
	gosub "DrawSash"
	del numTrafo + 1
	numTrafo = 0

	addx -A/4 + gs_sash_width / 4 + openingLengthLeft
	if (lod3D = 2 | (iMullionStyle = MULLION_SOLID_PANEL & lod3D <> 5)) & (gs_optype_m = SASH_SLIDING_HOR_M | gs_optype_m = SASH_DOUBLE_SLIDING_HOR_M) then
		addz gs_sash_thk
		numTrafo = numTrafo + 1
	endif
	VerticalGridUnID	= VerticalGridUnID2
	HorizontalGridUnID	= HorizontalGridUnID2
	gridIdxOffsetVgn	= vgn
	gridIdxOffsetHgn	= hgn
	gridIdxOffsetVgn2	= vgn2
	gridIdxOffsetHgn2	= hgn2
	bSecondSash = 1
	gosub"DrawSash"
	del numTrafo + 1
endif

! -----------------------------------------------------------------------------
if	gs_optype_m = SASH_SLIDING_VER |\
	gs_optype_m = SASH_DOUBLE_SLIDING_VER then

	numTrafo = 0

	if gs_optype_m = SASH_SLIDING_VER then openingLength2 = 0

	AA = A
	BB = B / 2 + gs_sash_width / 2
	if isWindow then
		gs_sash_thk	= gs_frame_thk / 2
	else
		gs_sash_thk	= min(gs_sash_thk, gs_frame_thk / 2)
	endif

	! The Opening Sash is always inside by Single Hung and Double Hung Sash Type
	if not(bOpeningDirectionInside) then
		if lod3D = 1 | lod3D = 5 then
			addz -2 * gs_sash_thk
		else
			addz 2 * gs_sash_thk
		endif
		mulz -1
		bOpeningDirectionInside = 1
	endif

	!sect_fill gs_fillSash, gs_penSash_bg, gs_penSash_fg, gs_sash_pen_cont

	! planes for separating frames in section
	if lod3D <> 1 & lod3D <> 5 & (GLOB_CONTEXT = 4 | GLOB_CONTEXT = 24) then
		Sash1TopOut		=	openingLength + BB
		Sash1TopInn		=	openingLength + BB - gs_sash_width
		Sash1BottInn	=	openingLength + gs_sash_width
		Sash1BottOut	=	openingLength
		Sash2TopOut		=	B - openingLength2
		Sash2TopInn		=	B - openingLength2 - gs_sash_width
		Sash2BottInn	=	B - openingLength2 - BB + gs_sash_width
		Sash2BottOut	=	B - openingLength2 - BB

		if 0 < (Sash2BottInn - Sash1TopInn) & (Sash2BottInn - Sash1TopInn) < gs_sash_width + EPS &\
			abs(Sash1TopInn - Sash2BottInn) > EPS & AA > EPS then
			plane	4,
					-AA/2,	Sash1TopInn,	gs_sash_thk,
					 AA/2,	Sash1TopInn,	gs_sash_thk,
					 AA/2,	Sash2BottInn, 	gs_sash_thk,
					-AA/2,	Sash2BottInn, 	gs_sash_thk
		endif
		if 0 < (Sash1BottInn - Sash2TopInn) & (Sash1BottInn - Sash2TopInn) < gs_sash_width + EPS &\
			abs(Sash1BottInn - Sash2TopInn) > EPS & AA > EPS then
			plane	4,
					-AA/2,	Sash1BottInn,	gs_sash_thk,
					 AA/2,	Sash1BottInn,	gs_sash_thk,
					 AA/2,	Sash2TopInn, 	gs_sash_thk,
					-AA/2,	Sash2TopInn, 	gs_sash_thk
		endif
		if 0 < (Sash1TopOut - Sash2TopInn) & (Sash1TopOut - Sash2TopInn) < gs_sash_width + EPS &\
			abs(Sash1TopOut - Sash2TopInn) > EPS & AA > EPS then
			plane	4,
					-AA/2,	Sash1TopOut,	gs_sash_thk,
					 AA/2,	Sash1TopOut,	gs_sash_thk,
					 AA/2,	Sash2TopInn, 	gs_sash_thk,
					-AA/2,	Sash2TopInn, 	gs_sash_thk
		endif
		if 0 < (Sash1BottInn - Sash2BottOut) & (Sash1BottInn - Sash2BottOut) < gs_sash_width + EPS &\
			abs(Sash1BottInn - Sash2BottOut) > EPS & AA > EPS then
			plane	4,
					-AA/2,	Sash1BottInn,	gs_sash_thk,
					 AA/2,	Sash1BottInn,	gs_sash_thk,
					 AA/2,	Sash2BottOut, 	gs_sash_thk,
					-AA/2,	Sash2BottOut, 	gs_sash_thk
		endif
		if 0 < (Sash2TopOut - Sash1TopInn) & (Sash2TopOut - Sash1TopInn) < gs_sash_width + EPS &\
			abs(Sash1TopInn - Sash2TopOut) > EPS & AA > EPS then
			plane	4,
					-AA/2,	Sash1TopInn,	gs_sash_thk,
					 AA/2,	Sash1TopInn,	gs_sash_thk,
					 AA/2,	Sash2TopOut, 	gs_sash_thk,
					-AA/2,	Sash2TopOut, 	gs_sash_thk
		endif
		if 0 < (Sash2BottInn - Sash1BottOut) & (Sash2BottInn - Sash1BottOut) < gs_sash_width + EPS &\
			abs(Sash1BottOut - Sash2BottInn) > EPS & AA > EPS then
			plane	4,
					-AA/2,	Sash1BottOut,	gs_sash_thk,
					 AA/2,	Sash1BottOut,	gs_sash_thk,
					 AA/2,	Sash2BottInn, 	gs_sash_thk,
					-AA/2,	Sash2BottInn, 	gs_sash_thk
		endif
	endif

	if gs_full_edit then
		addz gs_sash_thk
		gosub "hotspots_UP_SLIDING_VER"
		del 1
	endif

	if lod3D = 2 | (iMullionStyle = MULLION_SOLID_PANEL & lod3D <> 5) then
		addz gs_sash_thk
		numTrafo = numTrafo + 1
	endif
	bSecondSash = 0
	bEdwardianSashStyle = 0
	addy openingLength * gs_full_edit
	gosub"DrawSash"
	del numTrafo + 1

	if gs_full_edit & gs_optype_m = SASH_DOUBLE_SLIDING_VER then
		gosub "hotspots_DOUBLE_SLIDING_VER"
	else
		openingLength2 = 0
	endif

	addy B/2 - gs_sash_width / 2 - openingLength2 * gs_full_edit

	VerticalGridUnID	= VerticalGridUnID2
	HorizontalGridUnID	= HorizontalGridUnID2
	gridIdxOffsetVgn	= vgn
	gridIdxOffsetHgn	= hgn
	gridIdxOffsetVgn2	= vgn2
	gridIdxOffsetHgn2	= hgn2
	vgn = vgn2
	hgn = hgn2
	bSecondSash = 1
	bEdwardianSashStyle = (bEdwardianSash & gs_optype_m = SASH_SLIDING_VER)
	gosub"DrawSash"
	del numTrafo + 1
endif


! =============================================================================
end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end
! =============================================================================


! =============================================================================
"DrawSash":
! -----------------------------------------------------------------------------
! AA:			Width of sash
! BB:			Height of sash
! bSecondSash:	In case of
!				  SASH_DOUBLE_SIDE_HUNG:
!				  SASH_DOUBLE_TILT_TURN:
!				  SASH_DOUBLE_TILT_TURN_M:
!				  SASH_SLIDING_HOR:
!				  SASH_SLIDING_HOR_M:
!				  SASH_DOUBLE_SLIDING_HOR:
!				  SASH_DOUBLE_SLIDING_HOR_M:
!					0 = Right sash (Side 1), 1 = Left sash (Side 2)
!				  SASH_SLIDING_VER
!				  SASH_DOUBLE_SLIDING_VER
!					0 = Bottom sash, 1 = Upper sash
! =============================================================================

! =============================================================================
! Frame Model
! =============================================================================

if b2SashWithIndependentVentilation then
	if bSecondSash then
		isVentilationProfileInSash = isVentilationProfileInSecondSash
	else
		isVentilationProfileInSash = isVentilationProfileInFirstSash
	endif
endif


! =============================================================================
! Window Handle
! =============================================================================

if	(gs_handle_type_m > 0) &\
	(gs_optype_m <> SASH_FIXED) & (gs_optype_m <> SASH_FIXED_SCREW) &\
	(lod3D = 2) then

	_handlePx = 0
	_handlePy = 0
	_handlePz = 0
	_handleMx = 1
	_handleMz = 1

	_iOpeningType = gs_optype_m
	if gs_optype_m = SASH_DOUBLE_SIDE_HUNG then
		if bSecondSash then
			_iOpeningType = SASH_SIDE_HUNG_M
		else
			_iOpeningType = SASH_SIDE_HUNG
		endif
	endif
	if gs_optype_m = SASH_DOUBLE_TILT_TURN then
		if bSecondSash then
			_iOpeningType = SASH_SIDE_HUNG_M
		else
			_iOpeningType = SASH_TILT_TURN
		endif
	endif
	if gs_optype_m = SASH_DOUBLE_TILT_TURN_M then
		if bSecondSash then
			_iOpeningType = SASH_TILT_TURN_M
		else
			_iOpeningType = SASH_SIDE_HUNG
		endif
	endif
	if gs_optype_m = SASH_SLIDING_HOR then
		if bSecondSash then
			_iOpeningType = SASH_FIXED_SLIDE
		else
			_iOpeningType = SASH_LEFT_SLIDING
		endif
	endif
	if gs_optype_m = SASH_SLIDING_HOR_M then
		if bSecondSash then
			_iOpeningType = SASH_RIGHT_SLIDING
		else
			_iOpeningType = SASH_FIXED_SLIDE
		endif
	endif
	if	gs_optype_m = SASH_DOUBLE_SLIDING_HOR |\
		gs_optype_m = SASH_DOUBLE_SLIDING_HOR_M then
		if bSecondSash then
			_iOpeningType = SASH_RIGHT_SLIDING
		else
			_iOpeningType = SASH_LEFT_SLIDING
		endif
	endif
	if gs_optype_m = SASH_SLIDING_VER then
		if bSecondSash then
			_iOpeningType = SASH_FIXED_SLIDE
		else
			_iOpeningType = SASH_UP_SLIDING
		endif
	endif
	if gs_optype_m = SASH_DOUBLE_SLIDING_VER then
		if bSecondSash then
			_iOpeningType = SASH_DOWN_SLIDING
		else
			_iOpeningType = SASH_UP_SLIDING
		endif
	endif

	if	_iOpeningType = SASH_SIDE_HUNG |\
		_iOpeningType = SASH_TILT_TURN |\
		((_iOpeningType = SASH_LEFT_SLIDING) & mirroredHandlePosition) |\
		((_iOpeningType = SASH_RIGHT_SLIDING) & not(mirroredHandlePosition)) then

		_handlePx = -AA/2+gs_han_pos
		_handlePy = gs_han_height
		_handlePz = gs_sash_thk*(WIDO_REVEAL_SIDE)

		_handleMx = 1

		if (WIDO_REVEAL_SIDE) then
			_handleMz = 1
		else
			_handleMz = -1
		endif
	endif

	if	_iOpeningType = SASH_SIDE_HUNG_M |\
		_iOpeningType = SASH_TILT_TURN_M |\
		(_iOpeningType = SASH_LEFT_SLIDING & not(mirroredHandlePosition)) |\
		(_iOpeningType = SASH_RIGHT_SLIDING & mirroredHandlePosition) then

		_handlePx = AA/2-gs_han_pos
		_handlePy = gs_han_height
		_handlePz = gs_sash_thk*(WIDO_REVEAL_SIDE)

		_handleMx = -1

		if (WIDO_REVEAL_SIDE) then
			_handleMz = 1
		else
			_handleMz = -1
		endif
	endif

	if _iOpeningType = SASH_BOTTOM_HUNG then

		_handlePx = 0
		_handlePy = BB-gs_han_pos
		_handlePz = gs_sash_thk*(WIDO_REVEAL_SIDE)

		_handleMx = 1

		if (WIDO_REVEAL_SIDE) then
			_handleMz = 1
		else
			_handleMz = -1
		endif
	endif

	if _iOpeningType = SASH_TOP_HUNG then

		_handlePx = 0
		_handlePy = gs_han_pos
		_handlePz = gs_sash_thk*(WIDO_REVEAL_SIDE)

		_handleMx = 1

		if (WIDO_REVEAL_SIDE) then
			_handleMz = 1
		else
			_handleMz = -1
		endif
	endif

	if _iOpeningType = SASH_HOR_PIVOT then

		_handlePx = 0
		_handlePy = gs_han_pos
		_handlePz = gs_sash_thk
		_handleMx = 1
		_handleMz = 1
	endif

	if _iOpeningType = SASH_VER_PIVOT then

		_handlePx = AA/2-gs_han_pos
		_handlePy = gs_han_height
		_handlePz = gs_sash_thk*(WIDO_REVEAL_SIDE)
		_handleMx = 1

		if (WIDO_REVEAL_SIDE) then
			_handleMz = 1
		else
			_handleMz = -1
		endif
	endif

	if _iOpeningType = SASH_VER_PIVOT_M then

		_handlePx = -AA/2+gs_han_pos
		_handlePy = gs_han_height
		_handlePz = gs_sash_thk*(WIDO_REVEAL_SIDE)
		_handleMx = -1

		if (WIDO_REVEAL_SIDE) then
			_handleMz = 1
		else
			_handleMz = -1
		endif
	endif

	if _iOpeningType = SASH_UP_SLIDING then

		_handlePx = 0
		_handlePy = gs_han_pos
		_handlePz = gs_sash_thk
		_handleMx = 1
		_handleMz = 1
	endif

	if _iOpeningType = SASH_DOWN_SLIDING then

		_handlePx = 0
		_handlePy = BB-gs_han_pos
		_handlePz = gs_sash_thk
		_handleMx = 1
		_handleMz = 1
	endif

	if _iOpeningType <> SASH_FIXED_SLIDE then

		add _handlePx, _handlePy, _handlePz
		mulx _handleMx
		mulz _handleMz

		call "DoorHandle" parameters A=A,
			bSlidingWindow			= 1,
			bDifferentHandles		= 0,
			bSecondHandle			= 0,
			gs_handle_type_m		= gs_handle_type_m,
			gs_cust_handle			= gs_cust_handle,
			gs_leaf_thk				= gs_sash_thk,
			gs_handle_mat			= gs_handle_mat,
			gs_handle_ac_mat		= gs_handle_ac_mat,
			gs_han_pos				= gs_han_pos,
			gs_han_height			= gs_han_height

		del 3
	endif
endif


if gs_penSash_fg < 1 then gs_penSash_fg = SYMB_FILL_PEN

!sect_fill gs_fillSash, gs_penSash_bg, gs_penSash_fg, gs_sash_pen_cont


if iMullionStyle <> MULLION_CUSTOM then		! Don't draw in case of Custom Panel

! Sash Frame material ---------------------------------------------------------

	if iMullionStyle = MULLION_SOLID_PANEL then
		gs_sash_mat	 = gs_panel_mat
		gs_sash_mat2 = gs_panel_mat2
	endif

	var_mater		= gs_sash_mat2	! Sash front material
	var_mater2		= gs_sash_mat	! Sash back material
	var_mater_side	= gs_sash_mat2	! Sash side material

	if gs_sash_mat = gs_sash_mat2 then
		in_out_cikl = 1

		out_thk = 0
		if (lod3D = 1 & iMullionStyle <> MULLION_SOLID_PANEL) | lod3D = 5 then
			part_thk = gs_frame_thk
		else
			part_thk = gs_sash_thk
		endif

		in_out_mask = 15
		in_out_mask2 = 13 + 2 * (gs_SashText_typ_num = 1)
		in_out_mask3 = 13 + 2 * (gs_SashText_typ_num = 1)
	else												! two bodies
		in_out_cikl = 2

		if not(bOpeningDirectionInside) then
			tempMat = var_mater
			var_mater = var_mater2
			var_mater2 = tempMat

			var_mater_side	= gs_sash_mat
		else
			var_mater_side	= gs_sash_mat2
		endif

		if	gs_optype_m = SASH_SLIDING_HOR |\
			gs_optype_m = SASH_SLIDING_HOR_M |\
			gs_optype_m = SASH_DOUBLE_SLIDING_HOR |\
			gs_optype_m = SASH_DOUBLE_SLIDING_HOR_M |\
			gs_optype_m = SASH_SLIDING_VER |\
			gs_optype_m = SASH_DOUBLE_SLIDING_VER then

			if bSecondSash exor not(bOpeningDirectionInside) then
				var_mater_side	= gs_sash_mat
			else
				var_mater_side	= gs_sash_mat2
			endif
		endif

		if	gs_optype_m = SASH_SLIDING_HOR_M |\
			gs_optype_m = SASH_DOUBLE_SLIDING_HOR_M then

			if bSecondSash exor not(bOpeningDirectionInside) then
				var_mater_side	= gs_sash_mat2
			else
				var_mater_side	= gs_sash_mat
			endif
		endif

		if iMullionStyle = MULLION_SOLID_PANEL then
			if lod3D = 5 then
				out_thk = gs_frame_thk
			else
				out_thk = gs_sash_thk
			endif
			in_out_cikl = 1
		else
			if lod3D = 1 | lod3D = 5 then
				out_thk = gs_frame_thk/2
			else
				out_thk = gs_sash_thk/2 - gs_glass_thk/2
			endif
		endif
		part_thk = out_thk

		in_out_mask = 11
		in_out_mask2 = 9
		in_out_mask3 = 9 + 2 * (gs_SashText_typ_num = 1)
	endif

! Ledge material ---------------------------------------------------------

	ledge_var_mater			= matSashLedgeInside	! Ledge front material
	ledge_var_mater2		= matSashLedgeOutside	! Ledge back material
	ledge_var_mater_side	= matSashLedgeInside	! Ledge side material

	if matSashLedgeOutside = matSashLedgeInside then
		ledge_in_out_cikl = 1

		ledge_out_thk = 0
		ledge_part_thk = sashLedgeThickness

		ledge_in_out_mask = 15
	else												! two bodies
		ledge_in_out_cikl = 2

		if not(bOpeningDirectionInside) then
			tempMat = ledge_var_mater
			ledge_var_mater = ledge_var_mater2
			ledge_var_mater2 = tempMat

			ledge_var_mater_side	= matSashLedgeOutside
		else
			ledge_var_mater_side	= matSashLedgeInside
		endif

		ledge_out_thk = sashLedgeThickness/2 - gs_glass_thk/2
		ledge_part_thk = ledge_out_thk

		ledge_in_out_mask = 11
	endif

! Grid material ------------------------------------------------------------

	if	iMullionStyle = MULLION_HVGRID |\
		iMullionStyle = MULLION_EDITABLEGRID |\
		iMullionStyle = MULLION_FRENCH_PANEL |\
		iMullionStyle = MULLION_DIVIDED |\
		iMullionStyle = MULLION_SUNBURST_1 |\
		iMullionStyle = MULLION_SUNBURST_2 |\
		iMullionStyle = MULLION_SUNBURST_3 |\
		iMullionStyle = MULLION_SUNBURST_4 |\
		iMullionStyle = MULLION_SUNBURST_5 |\
		iMullionStyle = MULLION_SUNBURST_6 |\
		iMullionStyle = MULLION_SOLID_GLAZED then

		if (gs_grill_mat = gs_grill_mat2) |\
			iMullionPosition <> MULLION_THROUGHOUT |\
			(iMullionPosition = MULLION_THROUGHOUT & gs_glass_thk >= gth) then

			in_out_cikl_gr	= 1

			part_thk_grill	= gth

			if iMullionPosition = MULLION_INSIDE then
				matGrillSide	= gs_grill_mat2
			else
				matGrillSide	= gs_grill_mat
			endif
			if not(bOpeningDirectionInside) then
				matGrillTop		= gs_grill_mat
				matGrillBottom	= gs_grill_mat2
			else
				matGrillTop		= gs_grill_mat2
				matGrillBottom	= gs_grill_mat
			endif
		else
			in_out_cikl_gr	= 2

			out_thk_grill	= gth/2 - gs_glass_thk/2
			part_thk_grill	= out_thk_grill

			if not(bOpeningDirectionInside) then
				matGrillTop		= gs_grill_mat
				matGrillBottom	= gs_grill_mat2
			else
				matGrillTop		= gs_grill_mat2
				matGrillBottom	= gs_grill_mat
			endif
			if iMullionPosition = MULLION_INSIDE exor not(bOpeningDirectionInside) then
				matGrillSide	= gs_grill_mat2
			else
				matGrillSide	= gs_grill_mat
			endif
		endif
	endif

! Divider material ------------------------------------------------------------

	if iMullionStyle = MULLION_DIVIDED_FRAME then

		if (gs_frame_mat = gs_frame_mat2) then

			in_out_cikl_gr	= 1

			if lod3D = 1 | lod3D = 5 then
				part_thk_grill	= gs_frame_thk
			else
				part_thk_grill	= gs_sidelight_div_thk
			endif

			matGrillSide	= gs_frame_mat
			if not(bOpeningDirectionInside) then
				matGrillTop		= gs_frame_mat
				matGrillBottom	= gs_frame_mat2
			else
				matGrillTop		= gs_frame_mat2
				matGrillBottom	= gs_frame_mat
			endif

			dividerMask		= 15
		else
			in_out_cikl_gr	= 2

			if lod3D = 1 | lod3D = 5 then
				if not(bOpeningDirectionInside) then
					out_thk_grill = gs_frame_thk/2 + gs_glass_thk/2
				else
					out_thk_grill = gs_frame_thk/2 - gs_glass_thk/2
				endif
			else
				out_thk_grill = gs_sidelight_div_thk - gs_rebate_depth
			endif
			part_thk_grill	= out_thk_grill

			if not(bOpeningDirectionInside) then
				matGrillSide	= gs_frame_mat2
				matGrillTop		= gs_frame_mat
				matGrillBottom	= gs_frame_mat2
			else
				matGrillSide	= gs_frame_mat
				matGrillTop		= gs_frame_mat2
				matGrillBottom	= gs_frame_mat
			endif

			dividerMask		= 11
			dividerMask_2	= 14
		endif
	endif


! =============================================================================
! Sash Frame
! =============================================================================

	if gs_optype_m <> SASH_FIXED then		! Not Fixed

		pen gs_sash_pen
		material var_mater
		!sect_fill gs_fillSash, gs_penSash_bg, gs_penSash_fg, gs_sash_pen_cont

		if gs_SashText_typ_num = 1 then
			! Mitered Joint
			sideOffsetTopY		= 0
			sideOffsetBottomY	= 0
		else
			! Butt Joint
			sideOffsetTopY		= _sashFrameWidthTop
			sideOffsetBottomY	= _sashFrameWidthBottom
		endif

		for ijk = 1 to in_out_cikl
			material var_mater2

			if iMullionStyle = MULLION_SOLID_PANEL then

				material var_mater_side
				numCuts = 0
				if lod3D = 5 then
					if	gs_optype_m = SASH_SLIDING_HOR |\
						gs_optype_m = SASH_DOUBLE_SLIDING_HOR  then
						rotx 90
						if bSecondSash then
							cutpolya 4,1,0,
								AA/2 - gs_sash_width,	part_thk,	15,
								AA/2 - gs_sash_width,	part_thk/2,	15,
								AA,						part_thk/2,	15,
								AA,						part_thk,	15
						else
							cutpolya 4,1,0,
								-AA/2 + gs_sash_width,	0,			15,
								-AA/2 + gs_sash_width,	part_thk/2,	15,
								-AA,					part_thk/2,	15,
								-AA,					0,			15
						endif
						del 1
						numCuts = numCuts + 1
					endif
					if	gs_optype_m = SASH_SLIDING_HOR_M |\
						gs_optype_m = SASH_DOUBLE_SLIDING_HOR_M then
						rotx 90
						if bSecondSash then
							cutpolya 4,1,0,
								AA/2 - gs_sash_width,	0,			15,
								AA/2 - gs_sash_width,	part_thk/2,	15,
								AA,						part_thk/2,	15,
								AA,						0,			15
						else
							cutpolya 4,1,0,
								-AA/2 + gs_sash_width,	part_thk,	15,
								-AA/2 + gs_sash_width,	part_thk/2,	15,
								-AA,					part_thk/2,	15,
								-AA,					part_thk,	15
						endif
						del 1
						numCuts = numCuts + 1
					endif
					if	gs_optype_m = SASH_SLIDING_VER |\
						gs_optype_m = SASH_DOUBLE_SLIDING_VER then
						rotz 90
						rotx 90
						if bSecondSash then
							cutpolya 4,1,0,
								 gs_sash_width,	part_thk,	15,
								 gs_sash_width,	part_thk/2,	15,
								-1,				part_thk/2,	15,
								-1,				part_thk,	15
						else
							cutpolya 4,1,0,
								BB - gs_sash_width,	0,			15,
								BB - gs_sash_width,	part_thk/2,	15,
								BB + 1,				part_thk/2,	15,
								BB + 1,				0,			15
						endif
						del 2
						numCuts = numCuts + 1
					endif
				endif

				if isVentilationProfileInSash then
					addy BB - VentilationProfileHeight
					call "Ventilation_profile" parameters	A							= AA,
															VentilationProfileThickness	= part_thk,
															VentilationProfileHeight	= VentilationProfileHeight,
															gs_ventProfile_pen			= gs_sash_pen,
															gs_ventProfile_pen_cont		= gs_sash_pen_cont,
															gs_ventProfile_fill			= gs_ventProfile_fill,
															gs_ventProfile_pen_bg		= gs_ventProfile_pen_bg,
															gs_ventProfile_pen_fg		= gs_ventProfile_pen_fg,
															gs_ventProfile_mat			= gs_ventProfile_mat
					del 1
				endif

				sprism_{2} var_mater,var_mater2,var_mater2,
					4,
					 0,0, 0,1, 0, 0,
					 0,0, 0,1, part_thk, 0,
					-AA/2,	0,															15,	var_mater_side,
					 AA/2,	0,															15,	var_mater_side,
					 AA/2,	BB - VentilationProfileHeight * isVentilationProfileInSash,	15,	var_mater_side,
					-AA/2,	BB - VentilationProfileHeight * isVentilationProfileInSash,	15,	var_mater_side

				for i=1 to numCuts
					cutend
				next i
			else
				if bShowFrame then
					base
					put	-AA/2 + _sashFrameWidthLeft,	_sashFrameWidthBottom,		8,				var_mater2,
						-AA/2,							sideOffsetBottomY,			in_out_mask2,	var_mater2,
						-AA/2,							BB - sideOffsetTopY,		8,				var_mater_side,
						-AA/2 + _sashFrameWidthLeft,	BB - _sashFrameWidthTop,	in_out_mask,	var_mater2
					if iMullionStyle = MULLION_DIVIDED | iMullionStyle = MULLION_SOLID_GLAZED then
						put -AA/2 + gs_sash_width, gs_horiz_div_height,					10,			var_mater2,
							-AA/2 + gs_sash_width, gs_horiz_div_height - dividerWidth,	in_out_mask,var_mater2
					endif
					sprism_{2} var_mater2,var_mater2,var_mater2,
						nsp/4,
						 0,0, 0,1, 0, 0,
						 0,0, 0,1, part_thk, 0,
						get(nsp)

					put	AA/2 - _sashFrameWidthRight,	_sashFrameWidthBottom,		8,				var_mater2,
						AA/2,							sideOffsetBottomY,			in_out_mask2,	var_mater_side,
						AA/2,							BB - sideOffsetTopY,		8,				var_mater2,
						AA/2 - _sashFrameWidthRight,	BB - _sashFrameWidthTop,	in_out_mask,	var_mater2
					if iMullionStyle = MULLION_DIVIDED | iMullionStyle = MULLION_SOLID_GLAZED then
						put AA/2 - gs_sash_width, gs_horiz_div_height,					10,			var_mater2,
							AA/2 - gs_sash_width, gs_horiz_div_height - dividerWidth,	in_out_mask,var_mater2
					endif
					sprism_{2} var_mater2,var_mater2,var_mater2,
						nsp/4,
						0,0, 0,1, 0, 0,
						0,0, 0,1, part_thk, 0,
						get(nsp)
					vert 0, 0, 0
					vert 0, 1, 0
					vert 1, 0, 0
					vert 0, 0, 1
					coor 2, -1, -2, -3, -4
					body 1

					base
					if gs_SashText_typ_num = 1 then
						! Mitered Joint
						if bEdwardianSashStyle then
							sprism_{2} var_mater2,var_mater2,var_mater2,
								14,
								0,0, 0,1, 0, 0,
								0,0, 0,1, part_thk, 0,
								-AA/2,					0,				8,				var_mater_side,
								-AA/2 + gs_sash_width,	gs_sash_width,	in_out_mask,	var_mater2,
								 AA/2 - gs_sash_width,	gs_sash_width,	8,				var_mater2,
								 AA/2,					0,				13,	var_mater2,
								 AA/2,						-9/10*gs_sash_width,	in_out_mask,	var_mater_side,
								 AA/2-1/3*gs_sash_width,	-9/10*gs_sash_width,	in_out_mask,	var_mater_side,
								 AA/2-1/3*gs_sash_width,	-44/60*gs_sash_width,	in_out_mask,	var_mater_side,
								 AA/2-5/6*gs_sash_width,	-1/3*gs_sash_width,		in_out_mask,	var_mater_side,
								 AA/2-5/6*gs_sash_width,	0,						in_out_mask,	var_mater_side,
								-AA/2+5/6*gs_sash_width,	0,						in_out_mask,	var_mater_side,
								-AA/2+5/6*gs_sash_width,	-1/3*gs_sash_width,		in_out_mask,	var_mater_side,
								-AA/2+1/3*gs_sash_width,	-44/60*gs_sash_width,	in_out_mask,	var_mater_side,
								-AA/2+1/3*gs_sash_width,	-9/10*gs_sash_width,	in_out_mask,	var_mater_side,
								-AA/2,						-9/10*gs_sash_width,	in_out_mask,	var_mater_side
						else
							sprism_{2} var_mater2,var_mater2,var_mater2,
								4,
								0,0, 0,1, 0, 0,
								0,0, 0,1, part_thk, 0,
								-AA/2,							0,						8,				var_mater_side,
								-AA/2 + _sashFrameWidthLeft,	_sashFrameWidthBottom,	in_out_mask,	var_mater2,
								 AA/2 - _sashFrameWidthRight,	_sashFrameWidthBottom,	8,				var_mater2,
								 AA/2,							0,						in_out_mask,	var_mater2
						endif
						sprism_{2} var_mater2,var_mater2,var_mater2,
							4,
							0,0, 0,1, 0, 0,
							0,0, 0,1, part_thk, 0,
							-AA/2,							BB,							10,				var_mater2,
							-AA/2 + _sashFrameWidthLeft,	BB - _sashFrameWidthTop,	in_out_mask,	var_mater2,
							 AA/2 - _sashFrameWidthRight,	BB - _sashFrameWidthTop,	8,				var_mater2,
							 AA/2,							BB,							in_out_mask,	var_mater_side
					else
						! Butt Joint
						if bEdwardianSashStyle then
							sprism_{2} var_mater2,var_mater2,var_mater2,
								14,
								0,0, 0,1, 0, 0,
								0,0, 0,1, part_thk, 0,
								 AA/2 - gs_sash_width,		gs_sash_width,			10,				var_mater2,
								 AA/2,						gs_sash_width,			in_out_mask3,	var_mater2,
								 AA/2,						-9/10*gs_sash_width,	in_out_mask,	var_mater_side,
								 AA/2-1/3*gs_sash_width,	-9/10*gs_sash_width,	in_out_mask,	var_mater_side,
								 AA/2-1/3*gs_sash_width,	-44/60*gs_sash_width,	in_out_mask,	var_mater_side,
								 AA/2-5/6*gs_sash_width,	-1/3*gs_sash_width,		in_out_mask,	var_mater_side,
								 AA/2-5/6*gs_sash_width,	0,						in_out_mask,	var_mater_side,
								-AA/2+5/6*gs_sash_width,	0,						in_out_mask,	var_mater_side,
								-AA/2+5/6*gs_sash_width,	-1/3*gs_sash_width,		in_out_mask,	var_mater_side,
								-AA/2+1/3*gs_sash_width,	-44/60*gs_sash_width,	in_out_mask,	var_mater_side,
								-AA/2+1/3*gs_sash_width,	-9/10*gs_sash_width,	in_out_mask,	var_mater_side,
								-AA/2,						-9/10*gs_sash_width,	in_out_mask,	var_mater_side,
								-AA/2,						gs_sash_width,			8,				var_mater_side,
								-AA/2 + gs_sash_width,		gs_sash_width,			in_out_mask,	var_mater2
						else
							sprism_{2} var_mater2,var_mater2,var_mater2,
								6,
								0,0, 0,1, 0, 0,
								0,0, 0,1, part_thk, 0,
								-AA/2,							0,						in_out_mask,	var_mater_side,
								-AA/2,							_sashFrameWidthBottom,	8,				var_mater_side,
								-AA/2 + _sashFrameWidthLeft,	_sashFrameWidthBottom,	in_out_mask,	var_mater2,
								 AA/2 - _sashFrameWidthRight,	_sashFrameWidthBottom,	10,				var_mater2,
								 AA/2,							_sashFrameWidthBottom,	in_out_mask3,	var_mater2,
								 AA/2,							0,						in_out_mask,	var_mater_side
						endif
						sprism_{2} var_mater2,var_mater2,var_mater2,
							6,
							0,0, 0,1, 0, 0,
							0,0, 0,1, part_thk, 0,
							-AA/2,							BB,							in_out_mask,	var_mater_side,
							-AA/2,							BB - _sashFrameWidthTop,	8,				var_mater2,
							-AA/2 + _sashFrameWidthLeft,	BB - _sashFrameWidthTop,	in_out_mask,	var_mater2,
							 AA/2 - _sashFrameWidthRight,	BB - _sashFrameWidthTop,	10,				var_mater2,
							 AA/2,							BB - _sashFrameWidthTop,	in_out_mask3,	var_mater_side,
							 AA/2,							BB,							in_out_mask,	var_mater_side
					endif
				endif
			endif

			if iMullionStyle = MULLION_DIVIDED | iMullionStyle = MULLION_SOLID_GLAZED then
				add 0, gs_horiz_div_height - dividerWidth, (lod3D = 1 | lod3D = 5) * (-gs_frame_thk)
				sprism_{2} var_mater2,var_mater2,var_mater2,
					4,
					0,0, 0,1, 0, 0,
					0,0, 0,1, part_thk, 0,
					-AA/2+gs_sash_width,0,					10,				var_mater2,
					-AA/2+gs_sash_width,dividerWidth,		in_out_mask,	var_mater2,
					 AA/2-gs_sash_width,dividerWidth,		10,				var_mater2,
					 AA/2-gs_sash_width,0,					in_out_mask,	var_mater2
				del 1
			endif
			vert 0, 0, 0
			vert 1, 0, 0
			vert 0, 0, 1
			vert 0, 1, 0
			coor 2, -1, -2, -3, -4
			body 1

			addz part_thk
			if (lod3D = 1 | lod3D = 5) then
				part_thk = gs_frame_thk - out_thk
			else
				part_thk = gs_sash_thk - out_thk
			endif

			tempMat = var_mater
			var_mater = var_mater2
			var_mater2 = tempMat

			in_out_mask = 14
			in_out_mask2 = 12
			in_out_mask3 = 12
		next ijk

		del in_out_cikl

	else

		! Fixed Glass

		if iMullionStyle = MULLION_SOLID_PANEL then
			pen gs_sash_pen
			material var_mater
			!sect_fill gs_fillSash, gs_penSash_bg, gs_penSash_fg, gs_sash_pen_cont

			if lod3D = 5 then	! Chinese
				panelThk = gs_frame_thk
			else
				panelThk = gs_sash_thk
			endif

			addz -panelThk
			if isVentilationProfileInSash then
				addy BB - VentilationProfileHeight
				call "Ventilation_profile" parameters	A							= AA,
														VentilationProfileThickness	= panelThk,
														VentilationProfileHeight	= VentilationProfileHeight,
														gs_ventProfile_pen			= gs_sash_pen,
														gs_ventProfile_pen_cont		= gs_sash_pen_cont,
														gs_ventProfile_fill			= gs_ventProfile_fill,
														gs_ventProfile_pen_bg		= gs_ventProfile_pen_bg,
														gs_ventProfile_pen_fg		= gs_ventProfile_pen_fg,
														gs_ventProfile_mat			= gs_ventProfile_mat
				del 1
			endif
			
			base
			sprism_{2} var_mater,var_mater2,var_mater2,
				4,
				 0,0, 0,1, 0, 0,
				 0,0, 0,1, panelThk, 0,
				-AA/2,	0,															in_out_mask,	var_mater,
				 AA/2,	0,															in_out_mask,	var_mater,
				 AA/2,	BB - VentilationProfileHeight * isVentilationProfileInSash,	in_out_mask,	var_mater,
				-AA/2,	BB - VentilationProfileHeight * isVentilationProfileInSash,	in_out_mask,	var_mater

			vert 0, 0, 0
			vert 1, 0, 0
			vert 0, 1, 0
			vert 0, 0, 1
			coor 2, -1, -2, -3, -4
			body 1

			del 1
		else
			if iMullionStyle = MULLION_VENT_PANEL then
				_vent_panel_width	= AA
				_vent_panel_height	= BB
				if lod3D = 5 then	! Chinese
					add -AA/2, 0, -gs_frame_thk
				else
					add -AA/2, 0, -gs_frame_thk/2
				endif
				gosub "Louvers"
				del 1
			else
				if lod3D = 5 then	! Chinese
					addz -gs_frame_thk
					gl_chi_thk = gs_frame_thk
					gl_chi_mask = 13
				else
					if lod3D = 1 then	! Simple
						addz -gs_frame_thk/2 - gs_glass_thk/2
					else
						addz -gs_rebate_depth - gs_glass_thk/2
					endif
					gl_chi_thk = gs_glass_thk
					gl_chi_mask = 5
				endif

				if isVentilationProfileInSash then
					addy BB - VentilationProfileHeight
					call "Ventilation_profile" parameters	A							= AA,
															VentilationProfileThickness	= gl_chi_thk,
															VentilationProfileHeight	= VentilationProfileHeight,
															gs_ventProfile_pen			= gs_sash_pen,
															gs_ventProfile_pen_cont		= gs_sash_pen_cont,
															gs_ventProfile_fill			= gs_ventProfile_fill,
															gs_ventProfile_pen_bg		= gs_ventProfile_pen_bg,
															gs_ventProfile_pen_fg		= gs_ventProfile_pen_fg,
															gs_ventProfile_mat			= gs_ventProfile_mat
					del 1
					_FixedGlazingHeight = BB - VentilationProfileHeight
				else
					_FixedGlazingHeight = BB
				endif

				if isLedgeProfileInSash then
					_ledgeWidth = AA

					add -AA/2, 0, gl_chi_thk/2 - sashLedgeThickness/2
					gosub "Ledge"
					del 1

					_FixedGlazingHeight = _FixedGlazingHeight - sashLedgeHeight
				endif

				pen gs_glass_pen
				!sect_fill gs_fillSash, gs_penSash_bg, gs_penSash_fg, gs_glass_pen_cont
				material gs_glass_mat_t

				addy sashLedgeHeight * isLedgeProfileInSash
				if	(iMullionStyle = MULLION_HVGRID & iMullionPosition = MULLION_THROUGHOUT & gth >= gl_chi_thk) |\
					(iMullionStyle = MULLION_DIVIDED_FRAME & gs_sidelight_div_width > EPS) then

					if iMullionStyle = MULLION_HVGRID then
						gridWidth = gw
					else
						gridWidth = gs_sidelight_div_width
					endif

					__actGlazingWidth			= AA
					__actGlazingHeight			= _FixedGlazingHeight
					__actSashFrameWidthLeft		= gs_sash_width
					__actSashFrameWidthRight	= gs_sash_width
					__actSashFrameWidthTop		= gs_sash_width
					__actSashFrameWidthBottom	= gs_sash_width
					__actGridWidth				= gridWidth
					gosub "calculateMaxGridNums"

					hgnn = (AA - 2*gs_sash_width + gridWidth + 2*fix_sh_grmod)/(vgn + 1) - gridWidth
					vgnn = (_FixedGlazingHeight - 2*gs_sash_width + gridWidth + 2*fix_sh_grmod)/(hgn + 1) - gridWidth

					addx -AA/2
					for i=1 to vgn + 1
						for j=1 to hgn + 1
							prism_ 4,gl_chi_thk,
								0,		0,		gl_chi_mask,
								0,		vgnn,	gl_chi_mask,
								hgnn,	vgnn,	gl_chi_mask,
								hgnn,	0,		gl_chi_mask
							addy vgnn + gridWidth
						next j
						del hgn + 1

						addx hgnn + gridWidth
					next i
					del vgn + 2
				else
					 if CasementID = 1 & bBrokenGlass & iMullionStyle = MULLION_NONE then
						Ydist = _FixedGlazingHeight/100
						Xdist = AA/100

						prism_ 5+50,gl_chi_thk,
							-AA/2, 0,					gl_chi_mask,
							 AA/2, 0,					gl_chi_mask,
							 AA/2, _FixedGlazingHeight,	gl_chi_mask,
							-AA/2, _FixedGlazingHeight,	gl_chi_mask,
							-AA/2, 0,					-1,

							48*Xdist, 5*Ydist,      gl_chi_mask,
							48*Xdist, 14*Ydist,      gl_chi_mask,
							47*Xdist, 16*Ydist,      gl_chi_mask,
							48*Xdist, 15*Ydist,      gl_chi_mask,
							48*Xdist, 28*Ydist,      gl_chi_mask,
							47*Xdist, 29*Ydist,      gl_chi_mask,
							48*Xdist, 29*Ydist,      gl_chi_mask,
							48*Xdist, 30*Ydist,      gl_chi_mask,
							45*Xdist, 32*Ydist,      gl_chi_mask,
							47*Xdist, 33*Ydist,      gl_chi_mask,
							43*Xdist, 34*Ydist,      gl_chi_mask,
							47*Xdist, 40*Ydist,      gl_chi_mask,
							48*Xdist, 40*Ydist,      gl_chi_mask,
							48*Xdist, 52*Ydist,      gl_chi_mask,
							47*Xdist, 58*Ydist,      gl_chi_mask,
							45*Xdist, 57*Ydist,      gl_chi_mask,
							47*Xdist, 67*Ydist,      gl_chi_mask,
							48*Xdist, 67*Ydist,      gl_chi_mask,
							42*Xdist, 81*Ydist,      gl_chi_mask,
							48*Xdist, 98*Ydist,      gl_chi_mask,
							41*Xdist, 80*Ydist,      gl_chi_mask,
							15*Xdist, 67*Ydist,      gl_chi_mask,
							23*Xdist, 93*Ydist,      gl_chi_mask,
							14*Xdist, 96*Ydist,      gl_chi_mask,
							-1*Xdist, 80*Ydist,      gl_chi_mask,
							-30*Xdist, 98*Ydist,      gl_chi_mask,
							-9*Xdist, 84*Ydist,      gl_chi_mask,
							-45*Xdist, 96*Ydist,      gl_chi_mask,
							-41*Xdist, 81*Ydist,      gl_chi_mask,
							-16*Xdist, 54*Ydist,      gl_chi_mask,
							-40*Xdist, 62*Ydist,      gl_chi_mask, !
							-49*Xdist, 73*Ydist,      gl_chi_mask,
							-37*Xdist, 58*Ydist,      gl_chi_mask,
							-48*Xdist, 55*Ydist,      gl_chi_mask,
							-29*Xdist, 39*Ydist,      gl_chi_mask,
							-44*Xdist, 46*Ydist,      gl_chi_mask,
							-34*Xdist, 28*Ydist,      gl_chi_mask,
							-44*Xdist, 35*Ydist,      gl_chi_mask,
							-34*Xdist, 16*Ydist,      gl_chi_mask,
							-41*Xdist, 6*Ydist,      gl_chi_mask,
							-48*Xdist, 1*Ydist,      gl_chi_mask,
							-14*Xdist, 25*Ydist,      gl_chi_mask,
							-2*Xdist, 12*Ydist,      gl_chi_mask,
							5*Xdist, 19*Ydist,      gl_chi_mask, !
							19*Xdist, 1*Ydist,      gl_chi_mask,
							2*Xdist, 23*Ydist,      gl_chi_mask,
							15*Xdist, 35*Ydist,      gl_chi_mask,
							26*Xdist, 24*Ydist,      gl_chi_mask,
							35*Xdist, 19*Ydist,      gl_chi_mask,
							48*Xdist, 5*Ydist,      -1
					else
						prism_ 5,gl_chi_thk,
							-AA/2, 0,					gl_chi_mask,
							 AA/2, 0,					gl_chi_mask,
							 AA/2, _FixedGlazingHeight,	gl_chi_mask,
							-AA/2, _FixedGlazingHeight,	gl_chi_mask,
							-AA/2, 0,					-1
					endif
				endif

				del 2
			endif
		endif

	endif

endif	! iMullionStyle <> MULLION_CUSTOM

body -1

if iMullionStyle = MULLION_DIVIDED | iMullionStyle = MULLION_SOLID_GLAZED then
	unID = HorizontalDivUnID

	if CasementID = 1 then
		hotspot AA/2,  0, 0,						unID,	gs_horiz_div_height_01, 1+128
		hotspot AA/2, -1, 0, 						unID+1, gs_horiz_div_height_01, 3
		hotspot AA/2, gs_horiz_div_height_01, 0,	unID+2, gs_horiz_div_height_01, 2

		hotspot -AA/2,  0, 0, 						unID+3, gs_horiz_div_height_01, 1+128
		hotspot -AA/2, -1, 0, 						unID+4, gs_horiz_div_height_01, 3
		hotspot -AA/2, gs_horiz_div_height_01, 0,	unID+5, gs_horiz_div_height_01, 2
	endif

	if CasementID = 2 then
		hotspot AA/2,  0, 0,						unID,	gs_horiz_div_height_02, 1+128
		hotspot AA/2, -1, 0, 						unID+1, gs_horiz_div_height_02, 3
		hotspot AA/2, gs_horiz_div_height_02, 0,	unID+2, gs_horiz_div_height_02, 2

		hotspot -AA/2,  0, 0, 						unID+3, gs_horiz_div_height_02, 1+128
		hotspot -AA/2, -1, 0, 						unID+4, gs_horiz_div_height_02, 3
		hotspot -AA/2, gs_horiz_div_height_02, 0,	unID+5, gs_horiz_div_height_02, 2
	endif

	if CasementID = 3 then
		hotspot AA/2,  0, 0,						unID,	gs_horiz_div_height_03, 1+128
		hotspot AA/2, -1, 0, 						unID+1, gs_horiz_div_height_03, 3
		hotspot AA/2, gs_horiz_div_height_03, 0,	unID+2, gs_horiz_div_height_03, 2

		hotspot -AA/2,  0, 0, 						unID+3, gs_horiz_div_height_03, 1+128
		hotspot -AA/2, -1, 0, 						unID+4, gs_horiz_div_height_03, 3
		hotspot -AA/2, gs_horiz_div_height_03, 0,	unID+5, gs_horiz_div_height_03, 2
	endif

	if CasementID = 4 then
		hotspot AA/2,  0, 0,						unID,	gs_horiz_div_height_04, 1+128
		hotspot AA/2, -1, 0, 						unID+1, gs_horiz_div_height_04, 3
		hotspot AA/2, gs_horiz_div_height_04, 0,	unID+2, gs_horiz_div_height_04, 2

		hotspot -AA/2,  0, 0, 						unID+3, gs_horiz_div_height_04, 1+128
		hotspot -AA/2, -1, 0, 						unID+4, gs_horiz_div_height_04, 3
		hotspot -AA/2, gs_horiz_div_height_04, 0,	unID+5, gs_horiz_div_height_04, 2
	endif

	if CasementID = 5 then
		hotspot AA/2,  0, 0,						unID,	gs_horiz_div_height_05, 1+128
		hotspot AA/2, -1, 0, 						unID+1, gs_horiz_div_height_05, 3
		hotspot AA/2, gs_horiz_div_height_05, 0,	unID+2, gs_horiz_div_height_05, 2

		hotspot -AA/2,  0, 0, 						unID+3, gs_horiz_div_height_05, 1+128
		hotspot -AA/2, -1, 0, 						unID+4, gs_horiz_div_height_05, 3
		hotspot -AA/2, gs_horiz_div_height_05, 0,	unID+5, gs_horiz_div_height_05, 2
	endif

	if CasementID = 6 then
		hotspot AA/2,  0, 0,						unID,	gs_horiz_div_height_06, 1+128
		hotspot AA/2, -1, 0, 						unID+1, gs_horiz_div_height_06, 3
		hotspot AA/2, gs_horiz_div_height_06, 0,	unID+2, gs_horiz_div_height_06, 2

		hotspot -AA/2,  0, 0, 						unID+3, gs_horiz_div_height_06, 1+128
		hotspot -AA/2, -1, 0, 						unID+4, gs_horiz_div_height_06, 3
		hotspot -AA/2, gs_horiz_div_height_06, 0,	unID+5, gs_horiz_div_height_06, 2
	endif

	if CasementID = 7 then
		hotspot AA/2,  0, 0,						unID,	gs_horiz_div_height_07, 1+128
		hotspot AA/2, -1, 0, 						unID+1, gs_horiz_div_height_07, 3
		hotspot AA/2, gs_horiz_div_height_07, 0,	unID+2, gs_horiz_div_height_07, 2

		hotspot -AA/2,  0, 0, 						unID+3, gs_horiz_div_height_07, 1+128
		hotspot -AA/2, -1, 0, 						unID+4, gs_horiz_div_height_07, 3
		hotspot -AA/2, gs_horiz_div_height_07, 0,	unID+5, gs_horiz_div_height_07, 2
	endif

	if CasementID = 8 then
		hotspot AA/2,  0, 0,						unID,	gs_horiz_div_height_08, 1+128
		hotspot AA/2, -1, 0, 						unID+1, gs_horiz_div_height_08, 3
		hotspot AA/2, gs_horiz_div_height_08, 0,	unID+2, gs_horiz_div_height_08, 2

		hotspot -AA/2,  0, 0, 						unID+3, gs_horiz_div_height_08, 1+128
		hotspot -AA/2, -1, 0, 						unID+4, gs_horiz_div_height_08, 3
		hotspot -AA/2, gs_horiz_div_height_08, 0,	unID+5, gs_horiz_div_height_08, 2
	endif

	if CasementID = 9 then
		hotspot AA/2,  0, 0,						unID,	gs_horiz_div_height_09, 1+128
		hotspot AA/2, -1, 0, 						unID+1, gs_horiz_div_height_09, 3
		hotspot AA/2, gs_horiz_div_height_09, 0,	unID+2, gs_horiz_div_height_09, 2

		hotspot -AA/2,  0, 0, 						unID+3, gs_horiz_div_height_09, 1+128
		hotspot -AA/2, -1, 0, 						unID+4, gs_horiz_div_height_09, 3
		hotspot -AA/2, gs_horiz_div_height_09, 0,	unID+5, gs_horiz_div_height_09, 2
	endif

	if CasementID = 10 then
		hotspot AA/2,  0, 0,						unID,	gs_horiz_div_height_10, 1+128
		hotspot AA/2, -1, 0, 						unID+1, gs_horiz_div_height_10, 3
		hotspot AA/2, gs_horiz_div_height_10, 0,	unID+2, gs_horiz_div_height_10, 2

		hotspot -AA/2,  0, 0, 						unID+3, gs_horiz_div_height_10, 1+128
		hotspot -AA/2, -1, 0, 						unID+4, gs_horiz_div_height_10, 3
		hotspot -AA/2, gs_horiz_div_height_10, 0,	unID+5, gs_horiz_div_height_10, 2
	endif

	if CasementID = 11 then
		hotspot AA/2,  0, 0,						unID,	gs_horiz_div_height_11, 1+128
		hotspot AA/2, -1, 0, 						unID+1, gs_horiz_div_height_11, 3
		hotspot AA/2, gs_horiz_div_height_11, 0,	unID+2, gs_horiz_div_height_11, 2

		hotspot -AA/2,  0, 0, 						unID+3, gs_horiz_div_height_11, 1+128
		hotspot -AA/2, -1, 0, 						unID+4, gs_horiz_div_height_11, 3
		hotspot -AA/2, gs_horiz_div_height_11, 0,	unID+5, gs_horiz_div_height_11, 2
	endif
endif


! =============================================================================
! Glazing
! =============================================================================

if gs_optype_m <> SASH_FIXED then

	if	iMullionStyle <> MULLION_CUSTOM &\			! Don't draw in case of Custom Panel
		iMullionStyle <> MULLION_SOLID_PANEL &\		! Don't draw in case of Solid Panel
		iMullionStyle <> MULLION_VENT_PANEL then	! Don't draw in case of Vent Sash

		if lod3D = 5 then	! Chinese
			addz -gs_frame_thk
			gl_chi_thk = gs_frame_thk
			gl_chi_mask = 13
		else
			if lod3D = 1 then	! Simple
				addz -gs_frame_thk/2 - gs_glass_thk/2
			else
				addz gs_sash_thk/2 - gs_glass_thk/2
			endif
			gl_chi_thk = gs_glass_thk
			gl_chi_mask = 5
		endif

		_GlazingHeight = BB

		if isVentilationProfileInSash then
			addy BB - gs_sash_width - VentilationProfileHeight
			call "Ventilation_profile" parameters	A							= AA - gs_sash_width * 2,
													VentilationProfileThickness	= gl_chi_thk,
													VentilationProfileHeight	= VentilationProfileHeight,
													gs_ventProfile_pen			= gs_sash_pen,
													gs_ventProfile_pen_cont		= gs_sash_pen_cont,
													gs_ventProfile_fill			= gs_ventProfile_fill,
													gs_ventProfile_pen_bg		= gs_ventProfile_pen_bg,
													gs_ventProfile_pen_fg		= gs_ventProfile_pen_fg,
													gs_ventProfile_mat			= gs_ventProfile_mat
			del 1

			_GlazingHeight = _GlazingHeight - VentilationProfileHeight
		endif

		if isLedgeProfileInSash then
			_ledgeWidth = AA - _sashFrameWidthLeft - _sashFrameWidthRight

			add -AA/2 + _sashFrameWidthLeft, _sashFrameWidthBottom, gl_chi_thk/2 - sashLedgeThickness/2
			gosub "Ledge"
			del 1

			_GlazingHeight = _GlazingHeight - sashLedgeHeight
		endif

		pen gs_glass_pen
		!sect_fill gs_fillSash, gs_penSash_bg, gs_penSash_fg, gs_glass_pen_cont
		material gs_glass_mat_t

		_dLedgeOffsetY = sashLedgeHeight * isLedgeProfileInSash
		if iMullionStyle = MULLION_DIVIDED | iMullionStyle = MULLION_SOLID_GLAZED then
			prism_ 4,gl_chi_thk,
				-AA/2 + gs_sash_width,	gs_horiz_div_height,			gl_chi_mask,
				 AA/2 - gs_sash_width,	gs_horiz_div_height,			gl_chi_mask,
				 AA/2 - gs_sash_width,	_GlazingHeight - gs_sash_width + _dLedgeOffsetY,	gl_chi_mask,
				-AA/2 + gs_sash_width,	_GlazingHeight - gs_sash_width + _dLedgeOffsetY,	gl_chi_mask
			if iMullionStyle = MULLION_DIVIDED then
				prism_ 4,gl_chi_thk,
					-AA/2 + gs_sash_width,	gs_sash_width + _dLedgeOffsetY,		gl_chi_mask,
					 AA/2 - gs_sash_width,	gs_sash_width + _dLedgeOffsetY,		gl_chi_mask,
					 AA/2 - gs_sash_width,	gs_horiz_div_height - dividerWidth,	gl_chi_mask,
					-AA/2 + gs_sash_width,	gs_horiz_div_height - dividerWidth,	gl_chi_mask
			endif
			if iMullionStyle = MULLION_SOLID_GLAZED then

				if not(bOpeningDirectionInside) then
					var_mater		= gs_sash_mat	! Sash front material
					var_mater2		= gs_sash_mat2	! Sash back material
				else
					var_mater		= gs_sash_mat2	! Sash front material
					var_mater2		= gs_sash_mat	! Sash back material
				endif

				pen gs_sash_pen
				!sect_fill gs_fillSash, gs_penSash_bg, gs_penSash_fg, gs_sash_pen_cont

				base

				if lod3D = 5 then
					panelThk = gs_frame_thk
					addz gl_chi_thk/2 - panelThk/2
				else
					panelThk = 0.01
					addz gl_chi_thk/2 - 0.005
				endif
				cprism_ var_mater, var_mater2, var_mater,
					4, panelThk,
					-AA/2 + gs_sash_width,	gs_sash_width,						15,
					 AA/2 - gs_sash_width,	gs_sash_width,						15,
					 AA/2 - gs_sash_width,	gs_horiz_div_height - dividerWidth,	15,
					-AA/2 + gs_sash_width,	gs_horiz_div_height - dividerWidth,	15

				if lod3D <> 1 & lod3D <> 5 then
					gap = 0.03

					if gs_horiz_div_height - dividerWidth - gs_sash_width > 2 * gap then
						addz 0.01
						material var_mater
						prism_ 4, 0.008,
							-AA/2 + gs_sash_width + gap,	gs_sash_width + gap,						15,
							 AA/2 - gs_sash_width - gap,	gs_sash_width + gap,						15,
							 AA/2 - gs_sash_width - gap,	gs_horiz_div_height - dividerWidth - gap,	15,
							-AA/2 + gs_sash_width + gap,	gs_horiz_div_height - dividerWidth - gap,	15
						del 1

						material var_mater2
						prism_ 4, -0.008,
							-AA/2 + gs_sash_width + gap,	gs_sash_width + gap,						15,
							 AA/2 - gs_sash_width - gap,	gs_sash_width + gap,						15,
							 AA/2 - gs_sash_width - gap,	gs_horiz_div_height - dividerWidth - gap,	15,
							-AA/2 + gs_sash_width + gap,	gs_horiz_div_height - dividerWidth - gap,	15
					endif
				endif

				del 1

				vert 0, 0, 0
				vert 0, 1, 0
				vert 1, 0, 0
				vert 0, 0, 1
				coor 2, -1, -2, -3, -4
				body 1
			endif
		else
			if (iMullionStyle = MULLION_HVGRID | iMullionStyle = MULLION_FRENCH_PANEL) & iMullionPosition = MULLION_THROUGHOUT & gth >= gl_chi_thk then
				__actGlazingWidth			= AA
				__actGlazingHeight			= _GlazingHeight
				__actSashFrameWidthLeft		= _sashFrameWidthLeft
				__actSashFrameWidthRight	= _sashFrameWidthRight
				__actSashFrameWidthTop		= _sashFrameWidthTop
				__actSashFrameWidthBottom	= _sashFrameWidthBottom
				__actGridWidth				= gw
				gosub "calculateMaxGridNums"

				hgnn = (AA - _sashFrameWidthLeft - _sashFrameWidthRight + gw + 2*fix_sh_grmod)/(vgn + 1) - gw
				vgnn = (_GlazingHeight - _sashFrameWidthTop - _sashFrameWidthBottom + gw + 2*fix_sh_grmod)/(hgn + 1) - gw

				add -AA/2 + _sashFrameWidthLeft, _sashFrameWidthBottom + _dLedgeOffsetY, 0
				for i=1 to vgn + 1
					for j=1 to hgn + 1
						prism_ 4,gl_chi_thk,
							0,		0,		gl_chi_mask,
							0,		vgnn,	gl_chi_mask,
							hgnn,	vgnn,	gl_chi_mask,
							hgnn,	0,		gl_chi_mask
						addy vgnn + gw
					next j
					del hgn + 1

					addx hgnn + gw
				next i
				del vgn + 2
			else
				prism_ 4,gl_chi_thk,
					-AA/2 + _sashFrameWidthLeft,	_sashFrameWidthBottom + _dLedgeOffsetY,					gl_chi_mask,
					 AA/2 - _sashFrameWidthRight,	_sashFrameWidthBottom + _dLedgeOffsetY,					gl_chi_mask,
					 AA/2 - _sashFrameWidthRight,	_GlazingHeight - _sashFrameWidthTop + _dLedgeOffsetY,	gl_chi_mask,
					-AA/2 + _sashFrameWidthLeft,	_GlazingHeight - _sashFrameWidthTop + _dLedgeOffsetY,	gl_chi_mask
			endif
		endif

		del 1

	endif

endif


! =============================================================================
! Vent Sash
! =============================================================================

if gs_optype_m <> SASH_FIXED then
	if	iMullionStyle = MULLION_VENT_PANEL then
		_vent_panel_width	= AA - 2 * gs_sash_width
		_vent_panel_height	= BB - 2 * gs_sash_width
		if lod3D = 5 then	! Chinese
			add -AA/2 + gs_sash_width, gs_sash_width, -gs_frame_thk
		else
			if lod3D = 1 then	! Simple
				add -AA/2 + gs_sash_width, gs_sash_width, -gs_frame_thk/2
			else
				add -AA/2 + gs_sash_width, gs_sash_width, gs_sash_thk/2
			endif
		endif
		gosub "Louvers"
		del 1
	endif
endif

! ==============================================================================
! Opening Line
! ==============================================================================

if bOplines3d then

	oplineGap = 0

	if ((lod3D = 1) & (iMullionStyle = MULLION_DIVIDED | iMullionStyle = MULLION_SOLID_GLAZED | iMullionStyle = MULLION_VENT_PANEL)) | (lod3D = 5) then	! Simple, Chinese
		opLineDist = gs_frame_thk + 2 * oplineGap
		if (iMullionStyle <> MULLION_SOLID_PANEL) then
			add -AA/2 + gs_sash_width, gs_sash_width, 0
		else
			addx -AA/2
		endif
	else
		if (lod3D = 1) & (iMullionStyle <> MULLION_SOLID_PANEL) then
			opLineDist = gs_glass_thk + 2 * oplineGap
			add -AA/2 + gs_sash_width, gs_sash_width, 0
		else
			opLineDist = gs_sash_thk + 2 * oplineGap
			addx -AA/2
		endif
	endif

	if (lod3D = 1 | lod3D = 5) & iMullionStyle <> MULLION_SOLID_PANEL then	! Simple, Chinese
		addz -gs_frame_thk/2
	else
		if lod3D = 5 & iMullionStyle = MULLION_SOLID_PANEL then
			addz gs_frame_thk/2
		else
			addz gs_sash_thk/2
		endif
	endif

	iOpeningType = gs_optype_m
	if gs_optype_m = SASH_DOUBLE_SIDE_HUNG then
		if bSecondSash then
			iOpeningType = SASH_SIDE_HUNG_M
		else
			iOpeningType = SASH_SIDE_HUNG
		endif
	endif
	if gs_optype_m = SASH_DOUBLE_TILT_TURN then
		if bSecondSash then
			iOpeningType = SASH_SIDE_HUNG_M
		else
			iOpeningType = SASH_TILT_TURN
		endif
	endif
	if gs_optype_m = SASH_DOUBLE_TILT_TURN_M then
		if bSecondSash then
			iOpeningType = SASH_TILT_TURN_M
		else
			iOpeningType = SASH_SIDE_HUNG
		endif
	endif
	if gs_optype_m = SASH_SLIDING_HOR then
		if bSecondSash then
			iOpeningType = SASH_FIXED_SLIDE
		else
			iOpeningType = SASH_LEFT_SLIDING
		endif
	endif
	if gs_optype_m = SASH_SLIDING_HOR_M then
		if bSecondSash then
			iOpeningType = SASH_RIGHT_SLIDING
		else
			iOpeningType = SASH_FIXED_SLIDE
		endif
	endif
	if	gs_optype_m = SASH_DOUBLE_SLIDING_HOR |\
		gs_optype_m = SASH_DOUBLE_SLIDING_HOR_M then
		if bSecondSash then
			iOpeningType = SASH_RIGHT_SLIDING
		else
			iOpeningType = SASH_LEFT_SLIDING
		endif
	endif
	if gs_optype_m = SASH_SLIDING_VER then
		if bSecondSash then
			iOpeningType = SASH_FIXED_SLIDE
		else
			iOpeningType = SASH_UP_SLIDING
		endif
	endif
	if gs_optype_m = SASH_DOUBLE_SLIDING_VER then
		if bSecondSash then
			iOpeningType = SASH_DOWN_SLIDING
		else
			iOpeningType = SASH_UP_SLIDING
		endif
	endif

	addz -opLineDist/2
	call "OpeningLines" parameters A	= AA - 2 * gs_sash_width * (lod3D = 1 | lod3D = 5) * (iMullionStyle <> MULLION_SOLID_PANEL),
				B						= BB - 2 * gs_sash_width * (lod3D = 1 | lod3D = 5) * (iMullionStyle <> MULLION_SOLID_PANEL),
				frameThickness		= opLineDist,
				iOpeningType		= iOpeningType,
				opLineType3dIn		= opLineType3dIn,
				opLineType3dOut		= opLineType3dOut,
				gs_opLinePen		= gs_opLinePen,
				gs_opline_style_m	= gs_opline_style_m,
				bSkyLight			= bSkyLight

	del 3
endif


! =============================================================================
! Grids
! =============================================================================

if iMullionPosition = MULLION_THROUGHOUT then
	gz = (gs_optype_m <> SASH_FIXED) * gs_sash_thk/2 - gth/2
else
	if (iMullionPosition = MULLION_INSIDE) exor not(bOpeningDirectionInside) then
		gz = (gs_optype_m <> SASH_FIXED) * gs_sash_thk/2 + gs_glass_thk/2
	else
		gz = (gs_optype_m <> SASH_FIXED) * gs_sash_thk/2 - gs_glass_thk/2 - gth
	endif
endif
gz = gz - (gs_optype_m = SASH_FIXED) * gs_rebate_depth

! -----------------------------------------------------------------------------
! H-V GRID
! -----------------------------------------------------------------------------

if isVentilationProfileInSash then
	_GlazingHeight = BB - VentilationProfileHeight
else
	_GlazingHeight = BB
endif

if isLedgeProfileInSash then
	_GlazingHeight = _GlazingHeight - sashLedgeHeight
endif

if	iMullionStyle = MULLION_HVGRID |\
	iMullionStyle = MULLION_FRENCH_PANEL then

	pen gs_sash_pen
	!sect_fill gs_fillSash, gs_penSash_bg, gs_penSash_fg, gs_sash_pen_cont

	__actGlazingWidth			= AA
	__actGlazingHeight			= _GlazingHeight
	__actSashFrameWidthLeft		= _sashFrameWidthLeft
	__actSashFrameWidthRight	= _sashFrameWidthRight
	__actSashFrameWidthTop		= _sashFrameWidthTop
	__actSashFrameWidthBottom	= _sashFrameWidthBottom
	__actGridWidth				= gw
	gosub "calculateMaxGridNums"

	hgnn = ((AA - _sashFrameWidthLeft - _sashFrameWidthRight + gw + 2*fix_sh_grmod)/(vgn + 1)) - gw

	addy sashLedgeHeight * isLedgeProfileInSash
	for ijk= 1 to in_out_cikl_gr

		if ijk = 1 then
			currentGrillThickness = part_thk_grill
		else
			currentGrillThickness = gth - out_thk_grill
		endif

		base

		! Vertical grids
		if vgn > 0 then
			for i=1 to vgn
				addx (AA - _sashFrameWidthLeft - _sashFrameWidthRight + gw + 2*fix_sh_grmod)/(vgn+1)
				add  -AA/2+_sashFrameWidthLeft-gw/2-fix_sh_grmod, 0, gz
					hotspot 0,0,0
					hotspot 0,_GlazingHeight - _sashFrameWidthTop+fix_sh_grmod,0
					hotspot 0,0,currentGrillThickness
					hotspot 0,_GlazingHeight - _sashFrameWidthTop+fix_sh_grmod,currentGrillThickness
				if gw > EPS then
					sprism_ matGrillTop,matGrillBottom,matGrillSide,
						4,
						0,0, 0,1, currentGrillThickness, 0,
						-gw/2, _sashFrameWidthBottom-fix_sh_grmod,					15,
						 gw/2, _sashFrameWidthBottom-fix_sh_grmod,					15,
						 gw/2, _GlazingHeight - _sashFrameWidthTop+fix_sh_grmod,	15,
						-gw/2, _GlazingHeight - _sashFrameWidthTop+fix_sh_grmod,	15
				else
					lin_ 0,_sashFrameWidthBottom-fix_sh_grmod,0, 0,_GlazingHeight - _sashFrameWidthTop+fix_sh_grmod,0
				endif
				del 1
			next i
			del vgn
			vert 0, 0, 0
			vert 0, 1, 0
			vert 1, 0, 0
			vert 0, 0, 1
			coor 2, -1, -2, -3, -4
			body 1
		endif

		! Horizontal grids
		if hgn > 0 then
			for i=1 to vgn+1
				for j=1 to hgn
					addy (_GlazingHeight - _sashFrameWidthTop - _sashFrameWidthBottom + gw+2*fix_sh_grmod)/(hgn+1)
					add -AA/2 + _sashFrameWidthLeft - fix_sh_grmod + hgnn/2, _sashFrameWidthBottom - gw/2 - fix_sh_grmod, gz

					if i=vgn+1 then
						hotspot hgnn/2,0,0
						hotspot hgnn/2,0,currentGrillThickness
					endif

					if i=1 then
						hotspot -hgnn/2,0,0
						hotspot -hgnn/2,0,currentGrillThickness
					endif

					if gw > EPS then
						sprism_ matGrillTop,matGrillBottom,matGrillSide,
							4,
							0,0, 0,1, currentGrillThickness, 0,
							-hgnn/2,-gw/2,		15,
							 hgnn/2,-gw/2,		15,
							 hgnn/2, gw/2,		15,
							-hgnn/2, gw/2,		15
					else
						lin_ -hgnn/2,0,0, hgnn/2,0,0
					endif
					del 1
				next j
				del hgn
				addx (AA -_sashFrameWidthLeft - _sashFrameWidthRight + gw+2*fix_sh_grmod)/(vgn+1)
			next i
			del vgn+1
			body -1
		endif

		addz currentGrillThickness

		matGrillSide = matGrillTop

	next ijk
	del in_out_cikl_gr + 1

endif


! -----------------------------------------------------------------------------
! Divided Frame
! -----------------------------------------------------------------------------

if iMullionStyle = MULLION_DIVIDED_FRAME then

	pen gs_frame_pen
	!sect_fill gs_fillFr, gs_penFr_bg, gs_penFr_fg, gs_frame_pen_cont

	__actGlazingWidth			= AA
	__actGlazingHeight			= _GlazingHeight
	__actSashFrameWidthLeft		= gs_sash_width
	__actSashFrameWidthRight	= gs_sash_width
	__actSashFrameWidthTop		= gs_sash_width
	__actSashFrameWidthBottom	= gs_sash_width
	__actGridWidth				= gs_sidelight_div_width
	gosub "calculateMaxGridNums"

	hgnn = ((AA - 2*gs_sash_width + gs_sidelight_div_width + 2*fix_sh_grmod)/(vgn + 1)) - gs_sidelight_div_width

	for ijk= 1 to in_out_cikl_gr

		if ijk = 1 then
			currentGrillThickness = part_thk_grill
		else
			currentGrillThickness = gs_sidelight_div_thk - out_thk_grill
		endif

		base

		! Vertical divisions
		if vgn > 0 then
			for i=1 to vgn
				addx (AA-2*gs_sash_width+gs_sidelight_div_width+2*fix_sh_grmod)/(vgn+1)

				add  -AA/2+gs_sash_width-gs_sidelight_div_width/2-fix_sh_grmod, 0, -gs_sidelight_div_thk
				if gs_sidelight_div_width > EPS then

					if hgn > 0 then
						dy = (_GlazingHeight-2*gs_sash_width+gs_sidelight_div_width+2*fix_sh_grmod)/(hgn+1)
						for j=1 to hgn
							put gs_sidelight_div_width/2,	j*dy-gs_sidelight_div_width,	10,
								gs_sidelight_div_width/2,	j*dy,							dividerMask
						next j
						for j=hgn to 1 step -1
							put -gs_sidelight_div_width/2,	j*dy,							10,
								-gs_sidelight_div_width/2,	j*dy-gs_sidelight_div_width,	dividerMask
						next j

						sprism_ matGrillTop,matGrillBottom,matGrillSide,
							4 + nsp/3,
							0,0, 0,1, currentGrillThickness, 0,
							-gs_sidelight_div_width/2, gs_sash_width-fix_sh_grmod,					dividerMask,
							 gs_sidelight_div_width/2, gs_sash_width-fix_sh_grmod,					dividerMask,
							get(nsp/2),
							 gs_sidelight_div_width/2, _GlazingHeight - gs_sash_width+fix_sh_grmod,	dividerMask,
							-gs_sidelight_div_width/2, _GlazingHeight - gs_sash_width+fix_sh_grmod,	dividerMask,
							get(nsp)
					else
						sprism_ matGrillTop,matGrillBottom,matGrillSide,
							4,
							0,0, 0,1, currentGrillThickness, 0,
							-gs_sidelight_div_width/2, gs_sash_width-fix_sh_grmod,					dividerMask,
							 gs_sidelight_div_width/2, gs_sash_width-fix_sh_grmod,					dividerMask,
							 gs_sidelight_div_width/2, _GlazingHeight - gs_sash_width+fix_sh_grmod,	dividerMask,
							-gs_sidelight_div_width/2, _GlazingHeight - gs_sash_width+fix_sh_grmod,	dividerMask
					endif
				else
					lin_ 0,gs_sash_width-fix_sh_grmod,0, 0,_GlazingHeight - gs_sash_width+fix_sh_grmod,0
				endif
				del 1
			next i
			del vgn
			vert 0, 0, 0
			vert 0, 1, 0
			vert 1, 0, 0
			vert 0, 0, 1
			coor 2, -1, -2, -3, -4
			body 1
		endif

		! Horizontal divisions
		if hgn > 0 then
			for i=1 to vgn+1
				for j=1 to hgn
					addy (_GlazingHeight-2*gs_sash_width+gs_sidelight_div_width+2*fix_sh_grmod)/(hgn+1)
					add -(AA-2*gs_sash_width+2*fix_sh_grmod)/2+hgnn/2, gs_sash_width-gs_sidelight_div_width/2-fix_sh_grmod, -gs_sidelight_div_thk
					if gs_sidelight_div_width > EPS then
						sprism_ matGrillTop,matGrillBottom,matGrillSide,
							4,
							0,0, 0,1, currentGrillThickness, 0,
							-hgnn/2,-gs_sidelight_div_width/2,	dividerMask,
							 hgnn/2,-gs_sidelight_div_width/2,	10 + 5 * (i=(vgn+1)),
							 hgnn/2, gs_sidelight_div_width/2,	dividerMask,
							-hgnn/2, gs_sidelight_div_width/2,	10 + 5 * (i=1)
					else
						lin_ -hgnn/2,0,0, hgnn/2,0,0
					endif
					del 1
				next j
				del hgn

				addx (AA-2*gs_sash_width+gs_sidelight_div_width+2*fix_sh_grmod)/(vgn+1)

			next i
			del vgn+1
			body -1
		endif

		addz currentGrillThickness

		matGrillSide = matGrillTop
		dividerMask = dividerMask_2

	next ijk
	del in_out_cikl_gr

endif


! -----------------------------------------------------------------------------
! Editable Grid
! -----------------------------------------------------------------------------

if iMullionStyle = MULLION_EDITABLEGRID | iMullionStyle = MULLION_DIVIDED | iMullionStyle = MULLION_SOLID_GLAZED then

	pen gs_sash_pen
	!sect_fill gs_fillSash, gs_penSash_bg, gs_penSash_fg, gs_sash_pen_cont

	_dLedgeOffsetY = sashLedgeHeight * isLedgeProfileInSash

	if iMullionStyle = MULLION_DIVIDED | iMullionStyle = MULLION_SOLID_GLAZED then
		gridHeight = gs_horiz_div_height - gs_sash_width - _dLedgeOffsetY
	else
		gridHeight = _GlazingHeight - gs_sash_width
	endif

	for ijk= 1 to in_out_cikl_gr

		if ijk = 1 then
			currentGrillThickness = part_thk_grill
		else
			currentGrillThickness = gth - out_thk_grill
		endif

		if not(ghe) then
			for i=1 to vgn
				 vergrid[i][1] = i * (AA - 2 * gs_sash_width + gw + 2 * fix_sh_grmod) / (vgn + 1)
				 vergrid[i][2] = gs_sash_width - fix_sh_grmod + _dLedgeOffsetY
				 vergrid[i][3] = gridHeight + fix_sh_grmod + _dLedgeOffsetY
			next i

			for i=1 to hgn
				horgrid[i][1] = i*(gridHeight - gs_sash_width + gw + 2 * fix_sh_grmod) / (hgn + 1)
				horgrid[i][2] = gs_sash_width - fix_sh_grmod
				horgrid[i][3] = AA - gs_sash_width + fix_sh_grmod
			next i

			if iMullionStyle = MULLION_DIVIDED then
				for i=1 to vgn2
					 vergrid2[i][1] = i * (AA - 2 * gs_sash_width + gw + 2 * fix_sh_grmod) / (vgn2 + 1)
					 vergrid2[i][2] = gridHeight + gs_sash_width - fix_sh_grmod + _dLedgeOffsetY
					 vergrid2[i][3] = _GlazingHeight - gs_sash_width + fix_sh_grmod + _dLedgeOffsetY
				next i

				for i=1 to hgn2
					horgrid2[i][1] = i * (_GlazingHeight - gridHeight - 2 * gs_sash_width + gw + 2 * fix_sh_grmod) / (hgn2 + 1) + gridHeight
					horgrid2[i][2] = gs_sash_width - fix_sh_grmod
					horgrid2[i][3] = AA - gs_sash_width + fix_sh_grmod
				next i
			endif
		else
			for i = 1 + gridIdxOffsetVgn to vgn + gridIdxOffsetVgn
				if vergrid[i][1] < gw then vergrid[i][1] = gw
				if vergrid[i][1] > AA - 2 * gs_sash_width + 2 * fix_sh_grmod then vergrid[i][1] = AA - 2 * gs_sash_width + 2 * fix_sh_grmod

				if vergrid[i][3] > gridHeight + fix_sh_grmod + _dLedgeOffsetY then vergrid[i][3] = gridHeight + fix_sh_grmod + _dLedgeOffsetY
				if vergrid[i][2] <= gs_sash_width - fix_sh_grmod + _dLedgeOffsetY then vergrid[i][2] = gs_sash_width - fix_sh_grmod + _dLedgeOffsetY

				if vergrid[i][2] > gridHeight + fix_sh_grmod + _dLedgeOffsetY then vergrid[i][2] = gridHeight + fix_sh_grmod + _dLedgeOffsetY
				if vergrid[i][3] <= gs_sash_width - fix_sh_grmod + _dLedgeOffsetY then vergrid[i][3] = gs_sash_width - fix_sh_grmod + _dLedgeOffsetY
			next i
			for i = 1 + gridIdxOffsetHgn to hgn + gridIdxOffsetHgn
				if horgrid[i][1] < gw + _dLedgeOffsetY then horgrid[i][1] = gw + _dLedgeOffsetY
				if horgrid[i][1] > _GlazingHeight - 2 * gs_sash_width + 2 * fix_sh_grmod + _dLedgeOffsetY then horgrid[i][1] = _GlazingHeight - 2 * gs_sash_width + 2 * fix_sh_grmod + _dLedgeOffsetY

				if horgrid[i][3] > AA - gs_sash_width + fix_sh_grmod then horgrid[i][3] = AA - gs_sash_width + fix_sh_grmod
				if horgrid[i][2] <= gs_sash_width - fix_sh_grmod then horgrid[i][2] = gs_sash_width - fix_sh_grmod

				if horgrid[i][2] > AA - gs_sash_width + fix_sh_grmod then horgrid[i][2] = AA - gs_sash_width + fix_sh_grmod
				if horgrid[i][3] <= gs_sash_width - fix_sh_grmod then horgrid[i][3] = gs_sash_width - fix_sh_grmod
			next i
		endif

! -----------------------------------------------------------------------------
! Vertical grids
! -----------------------------------------------------------------------------

		unID = VerticalGridUnID

		if vgn > 0 & iMullionStyle <> MULLION_SOLID_GLAZED then
			if ghe and gs_full_edit then
				add  (-AA/2+gs_sash_width-gw/2-fix_sh_grmod), 0, gz
				if CasementID = 1 then
					for i = 1 + gridIdxOffsetVgn to vgn + gridIdxOffsetVgn
						lenghtv=vergrid[i][2]+(vergrid[i][3]-vergrid[i][2])/2

						hotspot 0, lenghtv, 0, unID, 						vergrid_01[i][1], 1+128 : unID=unID+1
						hotspot -1, lenghtv, 0, unID, 						vergrid_01[i][1], 3 : unID=unID+1
						hotspot vergrid[i][1], lenghtv, 0, unID, 			vergrid_01[i][1], 2 : unID=unID+1

						hotspot vergrid[i][1], 0, 0, unID, 					vergrid_01[i][2], 1+128 : unID=unID+1
						hotspot vergrid[i][1], -1, 0, unID, 				vergrid_01[i][2], 3 : unID=unID+1
						hotspot vergrid[i][1], vergrid[i][2]+gw/2, 0, unID, vergrid_01[i][2], 2 : unID=unID+1

						hotspot vergrid[i][1], 0, 0, unID, 					vergrid_01[i][3], 1+128 : unID=unID+1
						hotspot vergrid[i][1], -1, 0, unID, 				vergrid_01[i][3], 3 : unID=unID+1
						hotspot vergrid[i][1], vergrid[i][3]-gw/2, 0, unID, vergrid_01[i][3], 2 : unID=unID+1
					next i
				endif

				if CasementID = 2 then
					for i = 1 + gridIdxOffsetVgn to vgn + gridIdxOffsetVgn
						lenghtv=vergrid[i][2]+(vergrid[i][3]-vergrid[i][2])/2

						hotspot 0, lenghtv, 0, unID, 						vergrid_02[i][1], 1+128 : unID=unID+1
						hotspot -1, lenghtv, 0, unID, 						vergrid_02[i][1], 3 : unID=unID+1
						hotspot vergrid[i][1], lenghtv, 0, unID, 			vergrid_02[i][1], 2 : unID=unID+1

						hotspot vergrid[i][1], 0, 0, unID, 					vergrid_02[i][2], 1+128 : unID=unID+1
						hotspot vergrid[i][1], -1, 0, unID, 				vergrid_02[i][2], 3 : unID=unID+1
						hotspot vergrid[i][1], vergrid[i][2]+gw/2, 0, unID, vergrid_02[i][2], 2 : unID=unID+1

						hotspot vergrid[i][1], 0, 0, unID, 					vergrid_02[i][3], 1+128 : unID=unID+1
						hotspot vergrid[i][1], -1, 0, unID, 				vergrid_02[i][3], 3 : unID=unID+1
						hotspot vergrid[i][1], vergrid[i][3]-gw/2, 0, unID, vergrid_02[i][3], 2 : unID=unID+1
					next i
				endif

				if CasementID = 3 then
					for i = 1 + gridIdxOffsetVgn to vgn + gridIdxOffsetVgn
						lenghtv=vergrid[i][2]+(vergrid[i][3]-vergrid[i][2])/2

						hotspot 0, lenghtv, 0, unID, 						vergrid_03[i][1], 1+128 : unID=unID+1
						hotspot -1, lenghtv, 0, unID, 						vergrid_03[i][1], 3 : unID=unID+1
						hotspot vergrid[i][1], lenghtv, 0, unID, 			vergrid_03[i][1], 2 : unID=unID+1

						hotspot vergrid[i][1], 0, 0, unID, 					vergrid_03[i][2], 1+128 : unID=unID+1
						hotspot vergrid[i][1], -1, 0, unID, 				vergrid_03[i][2], 3 : unID=unID+1
						hotspot vergrid[i][1], vergrid[i][2]+gw/2, 0, unID, vergrid_03[i][2], 2 : unID=unID+1

						hotspot vergrid[i][1], 0, 0, unID, 					vergrid_03[i][3], 1+128 : unID=unID+1
						hotspot vergrid[i][1], -1, 0, unID, 				vergrid_03[i][3], 3 : unID=unID+1
						hotspot vergrid[i][1], vergrid[i][3]-gw/2, 0, unID, vergrid_03[i][3], 2 : unID=unID+1
					next i
				endif

				if CasementID = 4 then
					for i = 1 + gridIdxOffsetVgn to vgn + gridIdxOffsetVgn
						lenghtv=vergrid[i][2]+(vergrid[i][3]-vergrid[i][2])/2

						hotspot 0, lenghtv, 0, unID, 						vergrid_04[i][1], 1+128 : unID=unID+1
						hotspot -1, lenghtv, 0, unID, 						vergrid_04[i][1], 3 : unID=unID+1
						hotspot vergrid[i][1], lenghtv, 0, unID, 			vergrid_04[i][1], 2 : unID=unID+1

						hotspot vergrid[i][1], 0, 0, unID, 					vergrid_04[i][2], 1+128 : unID=unID+1
						hotspot vergrid[i][1], -1, 0, unID, 				vergrid_04[i][2], 3 : unID=unID+1
						hotspot vergrid[i][1], vergrid[i][2]+gw/2, 0, unID, vergrid_04[i][2], 2 : unID=unID+1

						hotspot vergrid[i][1], 0, 0, unID, 					vergrid_04[i][3], 1+128 : unID=unID+1
						hotspot vergrid[i][1], -1, 0, unID, 				vergrid_04[i][3], 3 : unID=unID+1
						hotspot vergrid[i][1], vergrid[i][3]-gw/2, 0, unID, vergrid_04[i][3], 2 : unID=unID+1
					next i
				endif

				if CasementID = 5 then
					for i = 1 + gridIdxOffsetVgn to vgn + gridIdxOffsetVgn
						lenghtv=vergrid[i][2]+(vergrid[i][3]-vergrid[i][2])/2

						hotspot 0, lenghtv, 0, unID, 						vergrid_05[i][1], 1+128 : unID=unID+1
						hotspot -1, lenghtv, 0, unID, 						vergrid_05[i][1], 3 : unID=unID+1
						hotspot vergrid[i][1], lenghtv, 0, unID, 			vergrid_05[i][1], 2 : unID=unID+1

						hotspot vergrid[i][1], 0, 0, unID, 					vergrid_05[i][2], 1+128 : unID=unID+1
						hotspot vergrid[i][1], -1, 0, unID, 				vergrid_05[i][2], 3 : unID=unID+1
						hotspot vergrid[i][1], vergrid[i][2]+gw/2, 0, unID, vergrid_05[i][2], 2 : unID=unID+1

						hotspot vergrid[i][1], 0, 0, unID, 					vergrid_05[i][3], 1+128 : unID=unID+1
						hotspot vergrid[i][1], -1, 0, unID, 				vergrid_05[i][3], 3 : unID=unID+1
						hotspot vergrid[i][1], vergrid[i][3]-gw/2, 0, unID, vergrid_05[i][3], 2 : unID=unID+1
					next i
				endif

				if CasementID = 6 then
					for i = 1 + gridIdxOffsetVgn to vgn + gridIdxOffsetVgn
						lenghtv=vergrid[i][2]+(vergrid[i][3]-vergrid[i][2])/2

						hotspot 0, lenghtv, 0, unID, 						vergrid_06[i][1], 1+128 : unID=unID+1
						hotspot -1, lenghtv, 0, unID, 						vergrid_06[i][1], 3 : unID=unID+1
						hotspot vergrid[i][1], lenghtv, 0, unID, 			vergrid_06[i][1], 2 : unID=unID+1

						hotspot vergrid[i][1], 0, 0, unID, 					vergrid_06[i][2], 1+128 : unID=unID+1
						hotspot vergrid[i][1], -1, 0, unID, 				vergrid_06[i][2], 3 : unID=unID+1
						hotspot vergrid[i][1], vergrid[i][2]+gw/2, 0, unID, vergrid_06[i][2], 2 : unID=unID+1

						hotspot vergrid[i][1], 0, 0, unID, 					vergrid_06[i][3], 1+128 : unID=unID+1
						hotspot vergrid[i][1], -1, 0, unID, 				vergrid_06[i][3], 3 : unID=unID+1
						hotspot vergrid[i][1], vergrid[i][3]-gw/2, 0, unID, vergrid_06[i][3], 2 : unID=unID+1
					next i
				endif

				if CasementID = 7 then
					for i = 1 + gridIdxOffsetVgn to vgn + gridIdxOffsetVgn
						lenghtv=vergrid[i][2]+(vergrid[i][3]-vergrid[i][2])/2

						hotspot 0, lenghtv, 0, unID, 						vergrid_07[i][1], 1+128 : unID=unID+1
						hotspot -1, lenghtv, 0, unID, 						vergrid_07[i][1], 3 : unID=unID+1
						hotspot vergrid[i][1], lenghtv, 0, unID, 			vergrid_07[i][1], 2 : unID=unID+1

						hotspot vergrid[i][1], 0, 0, unID, 					vergrid_07[i][2], 1+128 : unID=unID+1
						hotspot vergrid[i][1], -1, 0, unID, 				vergrid_07[i][2], 3 : unID=unID+1
						hotspot vergrid[i][1], vergrid[i][2]+gw/2, 0, unID, vergrid_07[i][2], 2 : unID=unID+1

						hotspot vergrid[i][1], 0, 0, unID, 					vergrid_07[i][3], 1+128 : unID=unID+1
						hotspot vergrid[i][1], -1, 0, unID, 				vergrid_07[i][3], 3 : unID=unID+1
						hotspot vergrid[i][1], vergrid[i][3]-gw/2, 0, unID, vergrid_07[i][3], 2 : unID=unID+1
					next i
				endif

				if CasementID = 8 then
					for i = 1 + gridIdxOffsetVgn to vgn + gridIdxOffsetVgn
						lenghtv=vergrid[i][2]+(vergrid[i][3]-vergrid[i][2])/2

						hotspot 0, lenghtv, 0, unID, 						vergrid_08[i][1], 1+128 : unID=unID+1
						hotspot -1, lenghtv, 0, unID, 						vergrid_08[i][1], 3 : unID=unID+1
						hotspot vergrid[i][1], lenghtv, 0, unID, 			vergrid_08[i][1], 2 : unID=unID+1

						hotspot vergrid[i][1], 0, 0, unID, 					vergrid_08[i][2], 1+128 : unID=unID+1
						hotspot vergrid[i][1], -1, 0, unID, 				vergrid_08[i][2], 3 : unID=unID+1
						hotspot vergrid[i][1], vergrid[i][2]+gw/2, 0, unID, vergrid_08[i][2], 2 : unID=unID+1

						hotspot vergrid[i][1], 0, 0, unID, 					vergrid_08[i][3], 1+128 : unID=unID+1
						hotspot vergrid[i][1], -1, 0, unID, 				vergrid_08[i][3], 3 : unID=unID+1
						hotspot vergrid[i][1], vergrid[i][3]-gw/2, 0, unID, vergrid_08[i][3], 2 : unID=unID+1
					next i
				endif

				if CasementID = 9 then
					for i = 1 + gridIdxOffsetVgn to vgn + gridIdxOffsetVgn
						lenghtv=vergrid[i][2]+(vergrid[i][3]-vergrid[i][2])/2

						hotspot 0, lenghtv, 0, unID, 						vergrid_09[i][1], 1+128 : unID=unID+1
						hotspot -1, lenghtv, 0, unID, 						vergrid_09[i][1], 3 : unID=unID+1
						hotspot vergrid[i][1], lenghtv, 0, unID, 			vergrid_09[i][1], 2 : unID=unID+1

						hotspot vergrid[i][1], 0, 0, unID, 					vergrid_09[i][2], 1+128 : unID=unID+1
						hotspot vergrid[i][1], -1, 0, unID, 				vergrid_09[i][2], 3 : unID=unID+1
						hotspot vergrid[i][1], vergrid[i][2]+gw/2, 0, unID, vergrid_09[i][2], 2 : unID=unID+1

						hotspot vergrid[i][1], 0, 0, unID, 					vergrid_09[i][3], 1+128 : unID=unID+1
						hotspot vergrid[i][1], -1, 0, unID, 				vergrid_09[i][3], 3 : unID=unID+1
						hotspot vergrid[i][1], vergrid[i][3]-gw/2, 0, unID, vergrid_09[i][3], 2 : unID=unID+1
					next i
				endif

				if CasementID = 10 then
					for i = 1 + gridIdxOffsetVgn to vgn + gridIdxOffsetVgn
						lenghtv=vergrid[i][2]+(vergrid[i][3]-vergrid[i][2])/2

						hotspot 0, lenghtv, 0, unID, 						vergrid_10[i][1], 1+128 : unID=unID+1
						hotspot -1, lenghtv, 0, unID, 						vergrid_10[i][1], 3 : unID=unID+1
						hotspot vergrid[i][1], lenghtv, 0, unID, 			vergrid_10[i][1], 2 : unID=unID+1

						hotspot vergrid[i][1], 0, 0, unID, 					vergrid_10[i][2], 1+128 : unID=unID+1
						hotspot vergrid[i][1], -1, 0, unID, 				vergrid_10[i][2], 3 : unID=unID+1
						hotspot vergrid[i][1], vergrid[i][2]+gw/2, 0, unID, vergrid_10[i][2], 2 : unID=unID+1

						hotspot vergrid[i][1], 0, 0, unID, 					vergrid_10[i][3], 1+128 : unID=unID+1
						hotspot vergrid[i][1], -1, 0, unID, 				vergrid_10[i][3], 3 : unID=unID+1
						hotspot vergrid[i][1], vergrid[i][3]-gw/2, 0, unID, vergrid_10[i][3], 2 : unID=unID+1
					next i
				endif

				if CasementID = 11 then
					for i = 1 + gridIdxOffsetVgn to vgn + gridIdxOffsetVgn
						lenghtv=vergrid[i][2]+(vergrid[i][3]-vergrid[i][2])/2

						hotspot 0, lenghtv, 0, unID, 						vergrid_11[i][1], 1+128 : unID=unID+1
						hotspot -1, lenghtv, 0, unID, 						vergrid_11[i][1], 3 : unID=unID+1
						hotspot vergrid[i][1], lenghtv, 0, unID, 			vergrid_11[i][1], 2 : unID=unID+1

						hotspot vergrid[i][1], 0, 0, unID, 					vergrid_11[i][2], 1+128 : unID=unID+1
						hotspot vergrid[i][1], -1, 0, unID, 				vergrid_11[i][2], 3 : unID=unID+1
						hotspot vergrid[i][1], vergrid[i][2]+gw/2, 0, unID, vergrid_11[i][2], 2 : unID=unID+1

						hotspot vergrid[i][1], 0, 0, unID, 					vergrid_11[i][3], 1+128 : unID=unID+1
						hotspot vergrid[i][1], -1, 0, unID, 				vergrid_11[i][3], 3 : unID=unID+1
						hotspot vergrid[i][1], vergrid[i][3]-gw/2, 0, unID, vergrid_11[i][3], 2 : unID=unID+1
					next i
				endif

				del 1
			endif
		endif

		if vgn2 > 0 & iMullionStyle = MULLION_DIVIDED | iMullionStyle = MULLION_SOLID_GLAZED then
			if ghe and gs_full_edit then
				add  (-AA/2+gs_sash_width-gw/2-fix_sh_grmod), 0, gz

				if CasementID = 1 then
					for i=1 + gridIdxOffsetVgn2 to vgn2 + gridIdxOffsetVgn2
						lenghtv=vergrid2[i][2]+(vergrid2[i][3]-vergrid2[i][2])/2

						hotspot 0, lenghtv, 0, unID, 						vergrid2_01[i][1], 1+128 : unID=unID+1
						hotspot -1, lenghtv, 0, unID, 						vergrid2_01[i][1], 3 : unID=unID+1
						hotspot vergrid2[i][1], lenghtv, 0, unID, 			vergrid2_01[i][1], 2 : unID=unID+1

						hotspot vergrid2[i][1], 0, 0, unID, 					vergrid2_01[i][2], 1+128 : unID=unID+1
						hotspot vergrid2[i][1], -1, 0, unID, 					vergrid2_01[i][2], 3 : unID=unID+1
						hotspot vergrid2[i][1], vergrid2[i][2]+gw/2, 0, unID,	vergrid2_01[i][2], 2 : unID=unID+1

						hotspot vergrid2[i][1], 0, 0, unID, 					vergrid2_01[i][3], 1+128 : unID=unID+1
						hotspot vergrid2[i][1], -1, 0, unID, 					vergrid2_01[i][3], 3 : unID=unID+1
						hotspot vergrid2[i][1], vergrid2[i][3]-gw/2, 0, unID,	vergrid2_01[i][3], 2 : unID=unID+1
					next i
				endif

				if CasementID = 2 then
					for i=1 + gridIdxOffsetVgn2 to vgn2 + gridIdxOffsetVgn2
						lenghtv=vergrid2[i][2]+(vergrid2[i][3]-vergrid2[i][2])/2

						hotspot 0, lenghtv, 0, unID, 						vergrid2_02[i][1], 1+128 : unID=unID+1
						hotspot -1, lenghtv, 0, unID, 						vergrid2_02[i][1], 3 : unID=unID+1
						hotspot vergrid2[i][1], lenghtv, 0, unID, 			vergrid2_02[i][1], 2 : unID=unID+1

						hotspot vergrid2[i][1], 0, 0, unID, 					vergrid2_02[i][2], 1+128 : unID=unID+1
						hotspot vergrid2[i][1], -1, 0, unID, 					vergrid2_02[i][2], 3 : unID=unID+1
						hotspot vergrid2[i][1], vergrid2[i][2]+gw/2, 0, unID,	vergrid2_02[i][2], 2 : unID=unID+1

						hotspot vergrid2[i][1], 0, 0, unID, 					vergrid2_02[i][3], 1+128 : unID=unID+1
						hotspot vergrid2[i][1], -1, 0, unID, 					vergrid2_02[i][3], 3 : unID=unID+1
						hotspot vergrid2[i][1], vergrid2[i][3]-gw/2, 0, unID,	vergrid2_02[i][3], 2 : unID=unID+1
					next i
				endif

				if CasementID = 3 then
					for i=1 + gridIdxOffsetVgn2 to vgn2 + gridIdxOffsetVgn2
						lenghtv=vergrid2[i][2]+(vergrid2[i][3]-vergrid2[i][2])/2

						hotspot 0, lenghtv, 0, unID, 						vergrid2_03[i][1], 1+128 : unID=unID+1
						hotspot -1, lenghtv, 0, unID, 						vergrid2_03[i][1], 3 : unID=unID+1
						hotspot vergrid2[i][1], lenghtv, 0, unID, 			vergrid2_03[i][1], 2 : unID=unID+1

						hotspot vergrid2[i][1], 0, 0, unID, 					vergrid2_03[i][2], 1+128 : unID=unID+1
						hotspot vergrid2[i][1], -1, 0, unID, 					vergrid2_03[i][2], 3 : unID=unID+1
						hotspot vergrid2[i][1], vergrid2[i][2]+gw/2, 0, unID,	vergrid2_03[i][2], 2 : unID=unID+1

						hotspot vergrid2[i][1], 0, 0, unID, 					vergrid2_03[i][3], 1+128 : unID=unID+1
						hotspot vergrid2[i][1], -1, 0, unID, 					vergrid2_03[i][3], 3 : unID=unID+1
						hotspot vergrid2[i][1], vergrid2[i][3]-gw/2, 0, unID,	vergrid2_03[i][3], 2 : unID=unID+1
					next i
				endif

				if CasementID = 4 then
					for i=1 + gridIdxOffsetVgn2 to vgn2 + gridIdxOffsetVgn2
						lenghtv=vergrid2[i][2]+(vergrid2[i][3]-vergrid2[i][2])/2

						hotspot 0, lenghtv, 0, unID, 						vergrid2_04[i][1], 1+128 : unID=unID+1
						hotspot -1, lenghtv, 0, unID, 						vergrid2_04[i][1], 3 : unID=unID+1
						hotspot vergrid2[i][1], lenghtv, 0, unID, 			vergrid2_04[i][1], 2 : unID=unID+1

						hotspot vergrid2[i][1], 0, 0, unID, 					vergrid2_04[i][2], 1+128 : unID=unID+1
						hotspot vergrid2[i][1], -1, 0, unID, 					vergrid2_04[i][2], 3 : unID=unID+1
						hotspot vergrid2[i][1], vergrid2[i][2]+gw/2, 0, unID,	vergrid2_04[i][2], 2 : unID=unID+1

						hotspot vergrid2[i][1], 0, 0, unID, 					vergrid2_04[i][3], 1+128 : unID=unID+1
						hotspot vergrid2[i][1], -1, 0, unID, 					vergrid2_04[i][3], 3 : unID=unID+1
						hotspot vergrid2[i][1], vergrid2[i][3]-gw/2, 0, unID,	vergrid2_04[i][3], 2 : unID=unID+1
					next i
				endif

				if CasementID = 5 then
					for i=1 + gridIdxOffsetVgn2 to vgn2 + gridIdxOffsetVgn2
						lenghtv=vergrid2[i][2]+(vergrid2[i][3]-vergrid2[i][2])/2

						hotspot 0, lenghtv, 0, unID, 						vergrid2_05[i][1], 1+128 : unID=unID+1
						hotspot -1, lenghtv, 0, unID, 						vergrid2_05[i][1], 3 : unID=unID+1
						hotspot vergrid2[i][1], lenghtv, 0, unID, 			vergrid2_05[i][1], 2 : unID=unID+1

						hotspot vergrid2[i][1], 0, 0, unID, 					vergrid2_05[i][2], 1+128 : unID=unID+1
						hotspot vergrid2[i][1], -1, 0, unID, 					vergrid2_05[i][2], 3 : unID=unID+1
						hotspot vergrid2[i][1], vergrid2[i][2]+gw/2, 0, unID,	vergrid2_05[i][2], 2 : unID=unID+1

						hotspot vergrid2[i][1], 0, 0, unID, 					vergrid2_05[i][3], 1+128 : unID=unID+1
						hotspot vergrid2[i][1], -1, 0, unID, 					vergrid2_05[i][3], 3 : unID=unID+1
						hotspot vergrid2[i][1], vergrid2[i][3]-gw/2, 0, unID,	vergrid2_05[i][3], 2 : unID=unID+1
					next i
				endif

				if CasementID = 6 then
					for i=1 + gridIdxOffsetVgn2 to vgn2 + gridIdxOffsetVgn2
						lenghtv=vergrid2[i][2]+(vergrid2[i][3]-vergrid2[i][2])/2

						hotspot 0, lenghtv, 0, unID, 						vergrid2_06[i][1], 1+128 : unID=unID+1
						hotspot -1, lenghtv, 0, unID, 						vergrid2_06[i][1], 3 : unID=unID+1
						hotspot vergrid2[i][1], lenghtv, 0, unID, 			vergrid2_06[i][1], 2 : unID=unID+1

						hotspot vergrid2[i][1], 0, 0, unID, 					vergrid2_06[i][2], 1+128 : unID=unID+1
						hotspot vergrid2[i][1], -1, 0, unID, 					vergrid2_06[i][2], 3 : unID=unID+1
						hotspot vergrid2[i][1], vergrid2[i][2]+gw/2, 0, unID,	vergrid2_06[i][2], 2 : unID=unID+1

						hotspot vergrid2[i][1], 0, 0, unID, 					vergrid2_06[i][3], 1+128 : unID=unID+1
						hotspot vergrid2[i][1], -1, 0, unID, 					vergrid2_06[i][3], 3 : unID=unID+1
						hotspot vergrid2[i][1], vergrid2[i][3]-gw/2, 0, unID,	vergrid2_06[i][3], 2 : unID=unID+1
					next i
				endif

				if CasementID = 7 then
					for i=1 + gridIdxOffsetVgn2 to vgn2 + gridIdxOffsetVgn2
						lenghtv=vergrid2[i][2]+(vergrid2[i][3]-vergrid2[i][2])/2

						hotspot 0, lenghtv, 0, unID, 						vergrid2_07[i][1], 1+128 : unID=unID+1
						hotspot -1, lenghtv, 0, unID, 						vergrid2_07[i][1], 3 : unID=unID+1
						hotspot vergrid2[i][1], lenghtv, 0, unID, 			vergrid2_07[i][1], 2 : unID=unID+1

						hotspot vergrid2[i][1], 0, 0, unID, 					vergrid2_07[i][2], 1+128 : unID=unID+1
						hotspot vergrid2[i][1], -1, 0, unID, 					vergrid2_07[i][2], 3 : unID=unID+1
						hotspot vergrid2[i][1], vergrid2[i][2]+gw/2, 0, unID,	vergrid2_07[i][2], 2 : unID=unID+1

						hotspot vergrid2[i][1], 0, 0, unID, 					vergrid2_07[i][3], 1+128 : unID=unID+1
						hotspot vergrid2[i][1], -1, 0, unID, 					vergrid2_07[i][3], 3 : unID=unID+1
						hotspot vergrid2[i][1], vergrid2[i][3]-gw/2, 0, unID,	vergrid2_07[i][3], 2 : unID=unID+1
					next i
				endif

				if CasementID = 8 then
					for i=1 + gridIdxOffsetVgn2 to vgn2 + gridIdxOffsetVgn2
						lenghtv=vergrid2[i][2]+(vergrid2[i][3]-vergrid2[i][2])/2

						hotspot 0, lenghtv, 0, unID, 						vergrid2_08[i][1], 1+128 : unID=unID+1
						hotspot -1, lenghtv, 0, unID, 						vergrid2_08[i][1], 3 : unID=unID+1
						hotspot vergrid2[i][1], lenghtv, 0, unID, 			vergrid2_08[i][1], 2 : unID=unID+1

						hotspot vergrid2[i][1], 0, 0, unID, 					vergrid2_08[i][2], 1+128 : unID=unID+1
						hotspot vergrid2[i][1], -1, 0, unID, 					vergrid2_08[i][2], 3 : unID=unID+1
						hotspot vergrid2[i][1], vergrid2[i][2]+gw/2, 0, unID,	vergrid2_08[i][2], 2 : unID=unID+1

						hotspot vergrid2[i][1], 0, 0, unID, 					vergrid2_08[i][3], 1+128 : unID=unID+1
						hotspot vergrid2[i][1], -1, 0, unID, 					vergrid2_08[i][3], 3 : unID=unID+1
						hotspot vergrid2[i][1], vergrid2[i][3]-gw/2, 0, unID,	vergrid2_08[i][3], 2 : unID=unID+1
					next i
				endif

				if CasementID = 9 then
					for i=1 + gridIdxOffsetVgn2 to vgn2 + gridIdxOffsetVgn2
						lenghtv=vergrid2[i][2]+(vergrid2[i][3]-vergrid2[i][2])/2

						hotspot 0, lenghtv, 0, unID, 						vergrid2_09[i][1], 1+128 : unID=unID+1
						hotspot -1, lenghtv, 0, unID, 						vergrid2_09[i][1], 3 : unID=unID+1
						hotspot vergrid2[i][1], lenghtv, 0, unID, 			vergrid2_09[i][1], 2 : unID=unID+1

						hotspot vergrid2[i][1], 0, 0, unID, 					vergrid2_09[i][2], 1+128 : unID=unID+1
						hotspot vergrid2[i][1], -1, 0, unID, 					vergrid2_09[i][2], 3 : unID=unID+1
						hotspot vergrid2[i][1], vergrid2[i][2]+gw/2, 0, unID,	vergrid2_09[i][2], 2 : unID=unID+1

						hotspot vergrid2[i][1], 0, 0, unID, 					vergrid2_09[i][3], 1+128 : unID=unID+1
						hotspot vergrid2[i][1], -1, 0, unID, 					vergrid2_09[i][3], 3 : unID=unID+1
						hotspot vergrid2[i][1], vergrid2[i][3]-gw/2, 0, unID,	vergrid2_09[i][3], 2 : unID=unID+1
					next i
				endif

				if CasementID = 10 then
					for i=1 + gridIdxOffsetVgn2 to vgn2 + gridIdxOffsetVgn2
						lenghtv=vergrid2[i][2]+(vergrid2[i][3]-vergrid2[i][2])/2

						hotspot 0, lenghtv, 0, unID, 						vergrid2_10[i][1], 1+128 : unID=unID+1
						hotspot -1, lenghtv, 0, unID, 						vergrid2_10[i][1], 3 : unID=unID+1
						hotspot vergrid2[i][1], lenghtv, 0, unID, 			vergrid2_10[i][1], 2 : unID=unID+1

						hotspot vergrid2[i][1], 0, 0, unID, 					vergrid2_10[i][2], 1+128 : unID=unID+1
						hotspot vergrid2[i][1], -1, 0, unID, 					vergrid2_10[i][2], 3 : unID=unID+1
						hotspot vergrid2[i][1], vergrid2[i][2]+gw/2, 0, unID,	vergrid2_10[i][2], 2 : unID=unID+1

						hotspot vergrid2[i][1], 0, 0, unID, 					vergrid2_10[i][3], 1+128 : unID=unID+1
						hotspot vergrid2[i][1], -1, 0, unID, 					vergrid2_10[i][3], 3 : unID=unID+1
						hotspot vergrid2[i][1], vergrid2[i][3]-gw/2, 0, unID,	vergrid2_10[i][3], 2 : unID=unID+1
					next i
				endif

				if CasementID = 11 then
					for i=1 + gridIdxOffsetVgn2 to vgn2 + gridIdxOffsetVgn2
						lenghtv=vergrid2[i][2]+(vergrid2[i][3]-vergrid2[i][2])/2

						hotspot 0, lenghtv, 0, unID, 						vergrid2_11[i][1], 1+128 : unID=unID+1
						hotspot -1, lenghtv, 0, unID, 						vergrid2_11[i][1], 3 : unID=unID+1
						hotspot vergrid2[i][1], lenghtv, 0, unID, 			vergrid2_11[i][1], 2 : unID=unID+1

						hotspot vergrid2[i][1], 0, 0, unID, 					vergrid2_11[i][2], 1+128 : unID=unID+1
						hotspot vergrid2[i][1], -1, 0, unID, 					vergrid2_11[i][2], 3 : unID=unID+1
						hotspot vergrid2[i][1], vergrid2[i][2]+gw/2, 0, unID,	vergrid2_11[i][2], 2 : unID=unID+1

						hotspot vergrid2[i][1], 0, 0, unID, 					vergrid2_11[i][3], 1+128 : unID=unID+1
						hotspot vergrid2[i][1], -1, 0, unID, 					vergrid2_11[i][3], 3 : unID=unID+1
						hotspot vergrid2[i][1], vergrid2[i][3]-gw/2, 0, unID,	vergrid2_11[i][3], 2 : unID=unID+1
					next i
				endif

				del 1
			endif
		endif

		if vgn > 0 | (iMullionStyle = MULLION_DIVIDED & vgn2 > 0) then
			!sect_fill gs_fillSash, gs_penSash_bg, gs_penSash_fg, gs_sash_pen_cont

			if vgn > 0 & iMullionStyle <> MULLION_SOLID_GLAZED then
				add  (-AA/2+gs_sash_width-gw/2-fix_sh_grmod), 0, gz
				for i = 1 + gridIdxOffsetVgn to vgn  + gridIdxOffsetVgn
					if abs(vergrid[i][2] - vergrid[i][3]) < EPS then vergrid[i][3] = vergrid[i][2] + EPS

					addx vergrid[i][1]
					if gw > EPS then
						sprism_ matGrillTop,matGrillBottom,matGrillSide,
							4,
							0,0, 0,1, currentGrillThickness, 0,
							-gw/2,vergrid[i][2],15,
							 gw/2,vergrid[i][2],15,
							 gw/2,vergrid[i][3],15,
							-gw/2,vergrid[i][3],15
					else
						lin_ 0,vergrid[i][2],0, 0,vergrid[i][3],0
					endif
					del 1

				next i
				del 1
			endif

			if vgn2 > 0 & (iMullionStyle = MULLION_DIVIDED | iMullionStyle = MULLION_SOLID_GLAZED) then
				add  (-AA/2+gs_sash_width-gw/2-fix_sh_grmod), 0, gz
				for i = 1 + gridIdxOffsetVgn2 to vgn2  + gridIdxOffsetVgn2
					if abs(vergrid2[i][2] - vergrid2[i][3]) < EPS then vergrid2[i][3] = vergrid2[i][2] + EPS

					addx vergrid2[i][1]
					if gw > EPS then
						sprism_ matGrillTop,matGrillBottom,matGrillSide,
							4,
							0,0, 0,1, currentGrillThickness, 0,
							-gw/2,vergrid2[i][2],15,
							 gw/2,vergrid2[i][2],15,
							 gw/2,vergrid2[i][3],15,
							-gw/2,vergrid2[i][3],15
					else
						lin_ 0,vergrid2[i][2],0, 0,vergrid2[i][3],0
					endif
					del 1

				next i
				del 1
			endif
		endif

! -----------------------------------------------------------------------------
! Horizontal grids
! -----------------------------------------------------------------------------

		unID = HorizontalGridUnID

		if hgn2 > 0 & (iMullionStyle = MULLION_DIVIDED | iMullionStyle = MULLION_SOLID_GLAZED) then
			if ghe and gs_full_edit then
				add -AA/2 , -gw/2+gs_sash_width-fix_sh_grmod, gz
				if CasementID = 1 then
					for i = 1 + gridIdxOffsetHgn2 to hgn2 + gridIdxOffsetHgn2
						lenghth=horgrid2[i][2]+(horgrid2[i][3]-horgrid2[i][2])/2

						hotspot lenghth, 0, 0, unID, 						horgrid2_01[i][1], 1+128 : unID=unID+1
						hotspot lenghth, -1, 0, unID, 						horgrid2_01[i][1], 3 : unID=unID+1
						hotspot lenghth, horgrid2[i][1], 0, unID, 			horgrid2_01[i][1], 2 : unID=unID+1

						hotspot 0, horgrid2[i][1], 0, unID, 					horgrid2_01[i][2], 1+128 : unID=unID+1
						hotspot -1,	horgrid2[i][1], 0, unID,					horgrid2_01[i][2], 3 : unID=unID+1
						hotspot horgrid2[i][2]+gw/2, horgrid2[i][1], 0, unID,	horgrid2_01[i][2], 2 : unID=unID+1

						hotspot 0, horgrid2[i][1], 0, unID, 					horgrid2_01[i][3], 1+128 : unID=unID+1
						hotspot -1,	horgrid2[i][1], 0, unID, 					horgrid2_01[i][3], 3 : unID=unID+1
						hotspot horgrid2[i][3]-gw/2, horgrid2[i][1], 0, unID,	horgrid2_01[i][3], 2 : unID=unID+1
					next i
				endif

				if CasementID = 2 then
					for i = 1 + gridIdxOffsetHgn2 to hgn2 + gridIdxOffsetHgn2
						lenghth=horgrid2[i][2]+(horgrid2[i][3]-horgrid2[i][2])/2

						hotspot lenghth, 0, 0, unID, 						horgrid2_02[i][1], 1+128 : unID=unID+1
						hotspot lenghth, -1, 0, unID, 						horgrid2_02[i][1], 3 : unID=unID+1
						hotspot lenghth, horgrid2[i][1], 0, unID, 			horgrid2_02[i][1], 2 : unID=unID+1

						hotspot 0, horgrid2[i][1], 0, unID, 					horgrid2_02[i][2], 1+128 : unID=unID+1
						hotspot -1,	horgrid2[i][1], 0, unID,					horgrid2_02[i][2], 3 : unID=unID+1
						hotspot horgrid2[i][2]+gw/2, horgrid2[i][1], 0, unID,	horgrid2_02[i][2], 2 : unID=unID+1

						hotspot 0, horgrid2[i][1], 0, unID, 					horgrid2_02[i][3], 1+128 : unID=unID+1
						hotspot -1,	horgrid2[i][1], 0, unID, 					horgrid2_02[i][3], 3 : unID=unID+1
						hotspot horgrid2[i][3]-gw/2, horgrid2[i][1], 0, unID,	horgrid2_02[i][3], 2 : unID=unID+1
					next i
				endif

				if CasementID = 3 then
					for i = 1 + gridIdxOffsetHgn2 to hgn2 + gridIdxOffsetHgn2
						lenghth=horgrid2[i][2]+(horgrid2[i][3]-horgrid2[i][2])/2

						hotspot lenghth, 0, 0, unID, 						horgrid2_03[i][1], 1+128 : unID=unID+1
						hotspot lenghth, -1, 0, unID, 						horgrid2_03[i][1], 3 : unID=unID+1
						hotspot lenghth, horgrid2[i][1], 0, unID, 			horgrid2_03[i][1], 2 : unID=unID+1

						hotspot 0, horgrid2[i][1], 0, unID, 					horgrid2_03[i][2], 1+128 : unID=unID+1
						hotspot -1,	horgrid2[i][1], 0, unID,					horgrid2_03[i][2], 3 : unID=unID+1
						hotspot horgrid2[i][2]+gw/2, horgrid2[i][1], 0, unID,	horgrid2_03[i][2], 2 : unID=unID+1

						hotspot 0, horgrid2[i][1], 0, unID, 					horgrid2_03[i][3], 1+128 : unID=unID+1
						hotspot -1,	horgrid2[i][1], 0, unID, 					horgrid2_03[i][3], 3 : unID=unID+1
						hotspot horgrid2[i][3]-gw/2, horgrid2[i][1], 0, unID,	horgrid2_03[i][3], 2 : unID=unID+1
					next i
				endif

				if CasementID = 4 then
					for i = 1 + gridIdxOffsetHgn2 to hgn2 + gridIdxOffsetHgn2
						lenghth=horgrid2[i][2]+(horgrid2[i][3]-horgrid2[i][2])/2

						hotspot lenghth, 0, 0, unID, 						horgrid2_04[i][1], 1+128 : unID=unID+1
						hotspot lenghth, -1, 0, unID, 						horgrid2_04[i][1], 3 : unID=unID+1
						hotspot lenghth, horgrid2[i][1], 0, unID, 			horgrid2_04[i][1], 2 : unID=unID+1

						hotspot 0, horgrid2[i][1], 0, unID, 					horgrid2_04[i][2], 1+128 : unID=unID+1
						hotspot -1,	horgrid2[i][1], 0, unID,					horgrid2_04[i][2], 3 : unID=unID+1
						hotspot horgrid2[i][2]+gw/2, horgrid2[i][1], 0, unID,	horgrid2_04[i][2], 2 : unID=unID+1

						hotspot 0, horgrid2[i][1], 0, unID, 					horgrid2_04[i][3], 1+128 : unID=unID+1
						hotspot -1,	horgrid2[i][1], 0, unID, 					horgrid2_04[i][3], 3 : unID=unID+1
						hotspot horgrid2[i][3]-gw/2, horgrid2[i][1], 0, unID,	horgrid2_04[i][3], 2 : unID=unID+1
					next i
				endif

				if CasementID = 5 then
					for i = 1 + gridIdxOffsetHgn2 to hgn2 + gridIdxOffsetHgn2
						lenghth=horgrid2[i][2]+(horgrid2[i][3]-horgrid2[i][2])/2

						hotspot lenghth, 0, 0, unID, 						horgrid2_05[i][1], 1+128 : unID=unID+1
						hotspot lenghth, -1, 0, unID, 						horgrid2_05[i][1], 3 : unID=unID+1
						hotspot lenghth, horgrid2[i][1], 0, unID, 			horgrid2_05[i][1], 2 : unID=unID+1

						hotspot 0, horgrid2[i][1], 0, unID, 					horgrid2_05[i][2], 1+128 : unID=unID+1
						hotspot -1,	horgrid2[i][1], 0, unID,					horgrid2_05[i][2], 3 : unID=unID+1
						hotspot horgrid2[i][2]+gw/2, horgrid2[i][1], 0, unID,	horgrid2_05[i][2], 2 : unID=unID+1

						hotspot 0, horgrid2[i][1], 0, unID, 					horgrid2_05[i][3], 1+128 : unID=unID+1
						hotspot -1,	horgrid2[i][1], 0, unID, 					horgrid2_05[i][3], 3 : unID=unID+1
						hotspot horgrid2[i][3]-gw/2, horgrid2[i][1], 0, unID,	horgrid2_05[i][3], 2 : unID=unID+1
					next i
				endif

				if CasementID = 6 then
					for i = 1 + gridIdxOffsetHgn2 to hgn2 + gridIdxOffsetHgn2
						lenghth=horgrid2[i][2]+(horgrid2[i][3]-horgrid2[i][2])/2

						hotspot lenghth, 0, 0, unID, 						horgrid2_06[i][1], 1+128 : unID=unID+1
						hotspot lenghth, -1, 0, unID, 						horgrid2_06[i][1], 3 : unID=unID+1
						hotspot lenghth, horgrid2[i][1], 0, unID, 			horgrid2_06[i][1], 2 : unID=unID+1

						hotspot 0, horgrid2[i][1], 0, unID, 					horgrid2_06[i][2], 1+128 : unID=unID+1
						hotspot -1,	horgrid2[i][1], 0, unID,					horgrid2_06[i][2], 3 : unID=unID+1
						hotspot horgrid2[i][2]+gw/2, horgrid2[i][1], 0, unID,	horgrid2_06[i][2], 2 : unID=unID+1

						hotspot 0, horgrid2[i][1], 0, unID, 					horgrid2_06[i][3], 1+128 : unID=unID+1
						hotspot -1,	horgrid2[i][1], 0, unID, 					horgrid2_06[i][3], 3 : unID=unID+1
						hotspot horgrid2[i][3]-gw/2, horgrid2[i][1], 0, unID,	horgrid2_06[i][3], 2 : unID=unID+1
					next i
				endif

				if CasementID = 7 then
					for i = 1 + gridIdxOffsetHgn2 to hgn2 + gridIdxOffsetHgn2
						lenghth=horgrid2[i][2]+(horgrid2[i][3]-horgrid2[i][2])/2

						hotspot lenghth, 0, 0, unID, 						horgrid2_07[i][1], 1+128 : unID=unID+1
						hotspot lenghth, -1, 0, unID, 						horgrid2_07[i][1], 3 : unID=unID+1
						hotspot lenghth, horgrid2[i][1], 0, unID, 			horgrid2_07[i][1], 2 : unID=unID+1

						hotspot 0, horgrid2[i][1], 0, unID, 					horgrid2_07[i][2], 1+128 : unID=unID+1
						hotspot -1,	horgrid2[i][1], 0, unID,					horgrid2_07[i][2], 3 : unID=unID+1
						hotspot horgrid2[i][2]+gw/2, horgrid2[i][1], 0, unID,	horgrid2_07[i][2], 2 : unID=unID+1

						hotspot 0, horgrid2[i][1], 0, unID, 					horgrid2_07[i][3], 1+128 : unID=unID+1
						hotspot -1,	horgrid2[i][1], 0, unID, 					horgrid2_07[i][3], 3 : unID=unID+1
						hotspot horgrid2[i][3]-gw/2, horgrid2[i][1], 0, unID,	horgrid2_07[i][3], 2 : unID=unID+1
					next i
				endif

				if CasementID = 8 then
					for i = 1 + gridIdxOffsetHgn2 to hgn2 + gridIdxOffsetHgn2
						lenghth=horgrid2[i][2]+(horgrid2[i][3]-horgrid2[i][2])/2

						hotspot lenghth, 0, 0, unID, 						horgrid2_08[i][1], 1+128 : unID=unID+1
						hotspot lenghth, -1, 0, unID, 						horgrid2_08[i][1], 3 : unID=unID+1
						hotspot lenghth, horgrid2[i][1], 0, unID, 			horgrid2_08[i][1], 2 : unID=unID+1

						hotspot 0, horgrid2[i][1], 0, unID, 					horgrid2_08[i][2], 1+128 : unID=unID+1
						hotspot -1,	horgrid2[i][1], 0, unID,					horgrid2_08[i][2], 3 : unID=unID+1
						hotspot horgrid2[i][2]+gw/2, horgrid2[i][1], 0, unID,	horgrid2_08[i][2], 2 : unID=unID+1

						hotspot 0, horgrid2[i][1], 0, unID, 					horgrid2_08[i][3], 1+128 : unID=unID+1
						hotspot -1,	horgrid2[i][1], 0, unID, 					horgrid2_08[i][3], 3 : unID=unID+1
						hotspot horgrid2[i][3]-gw/2, horgrid2[i][1], 0, unID,	horgrid2_08[i][3], 2 : unID=unID+1
					next i
				endif

				if CasementID = 9 then
					for i = 1 + gridIdxOffsetHgn2 to hgn2 + gridIdxOffsetHgn2
						lenghth=horgrid2[i][2]+(horgrid2[i][3]-horgrid2[i][2])/2

						hotspot lenghth, 0, 0, unID, 						horgrid2_09[i][1], 1+128 : unID=unID+1
						hotspot lenghth, -1, 0, unID, 						horgrid2_09[i][1], 3 : unID=unID+1
						hotspot lenghth, horgrid2[i][1], 0, unID, 			horgrid2_09[i][1], 2 : unID=unID+1

						hotspot 0, horgrid2[i][1], 0, unID, 					horgrid2_09[i][2], 1+128 : unID=unID+1
						hotspot -1,	horgrid2[i][1], 0, unID,					horgrid2_09[i][2], 3 : unID=unID+1
						hotspot horgrid2[i][2]+gw/2, horgrid2[i][1], 0, unID,	horgrid2_09[i][2], 2 : unID=unID+1

						hotspot 0, horgrid2[i][1], 0, unID, 					horgrid2_09[i][3], 1+128 : unID=unID+1
						hotspot -1,	horgrid2[i][1], 0, unID, 					horgrid2_09[i][3], 3 : unID=unID+1
						hotspot horgrid2[i][3]-gw/2, horgrid2[i][1], 0, unID,	horgrid2_09[i][3], 2 : unID=unID+1
					next i
				endif

				if CasementID = 10 then
					for i = 1 + gridIdxOffsetHgn2 to hgn2 + gridIdxOffsetHgn2
						lenghth=horgrid2[i][2]+(horgrid2[i][3]-horgrid2[i][2])/2

						hotspot lenghth, 0, 0, unID, 						horgrid2_10[i][1], 1+128 : unID=unID+1
						hotspot lenghth, -1, 0, unID, 						horgrid2_10[i][1], 3 : unID=unID+1
						hotspot lenghth, horgrid2[i][1], 0, unID, 			horgrid2_10[i][1], 2 : unID=unID+1

						hotspot 0, horgrid2[i][1], 0, unID, 					horgrid2_10[i][2], 1+128 : unID=unID+1
						hotspot -1,	horgrid2[i][1], 0, unID,					horgrid2_10[i][2], 3 : unID=unID+1
						hotspot horgrid2[i][2]+gw/2, horgrid2[i][1], 0, unID,	horgrid2_10[i][2], 2 : unID=unID+1

						hotspot 0, horgrid2[i][1], 0, unID, 					horgrid2_10[i][3], 1+128 : unID=unID+1
						hotspot -1,	horgrid2[i][1], 0, unID, 					horgrid2_10[i][3], 3 : unID=unID+1
						hotspot horgrid2[i][3]-gw/2, horgrid2[i][1], 0, unID,	horgrid2_10[i][3], 2 : unID=unID+1
					next i
				endif

				if CasementID = 11 then
					for i = 1 + gridIdxOffsetHgn2 to hgn2 + gridIdxOffsetHgn2
						lenghth=horgrid2[i][2]+(horgrid2[i][3]-horgrid2[i][2])/2

						hotspot lenghth, 0, 0, unID, 						horgrid2_11[i][1], 1+128 : unID=unID+1
						hotspot lenghth, -1, 0, unID, 						horgrid2_11[i][1], 3 : unID=unID+1
						hotspot lenghth, horgrid2[i][1], 0, unID, 			horgrid2_11[i][1], 2 : unID=unID+1

						hotspot 0, horgrid2[i][1], 0, unID, 					horgrid2_11[i][2], 1+128 : unID=unID+1
						hotspot -1,	horgrid2[i][1], 0, unID,					horgrid2_11[i][2], 3 : unID=unID+1
						hotspot horgrid2[i][2]+gw/2, horgrid2[i][1], 0, unID,	horgrid2_11[i][2], 2 : unID=unID+1

						hotspot 0, horgrid2[i][1], 0, unID, 					horgrid2_11[i][3], 1+128 : unID=unID+1
						hotspot -1,	horgrid2[i][1], 0, unID, 					horgrid2_11[i][3], 3 : unID=unID+1
						hotspot horgrid2[i][3]-gw/2, horgrid2[i][1], 0, unID,	horgrid2_11[i][3], 2 : unID=unID+1
					next i
				endif

				del 1
			endif
		endif

		if hgn > 0 & iMullionStyle <> MULLION_SOLID_GLAZED then
			if ghe and gs_full_edit then
				add -AA/2 , -gw/2+gs_sash_width-fix_sh_grmod, gz
				if CasementID = 1 then
					for i = 1 + gridIdxOffsetHgn to hgn + gridIdxOffsetHgn
						lenghth=horgrid[i][2]+(horgrid[i][3]-horgrid[i][2])/2

						hotspot lenghth, 0, 0, unID, 						horgrid_01[i][1],	1+128 : unID=unID+1
						hotspot lenghth, -1, 0, unID, 						horgrid_01[i][1], 3 : unID=unID+1
						hotspot lenghth, horgrid[i][1], 0, unID, 			horgrid_01[i][1],	2 : unID=unID+1

						hotspot 0, horgrid[i][1], 0, unID, 					horgrid_01[i][2], 1+128 : unID=unID+1
						hotspot -1,	horgrid[i][1], 0, unID,					horgrid_01[i][2], 3 : unID=unID+1
						hotspot horgrid[i][2]+gw/2,	horgrid[i][1], 0, unID, horgrid_01[i][2], 2 : unID=unID+1

						hotspot 0, horgrid[i][1], 0, unID, 					horgrid_01[i][3], 1+128 : unID=unID+1
						hotspot -1,	horgrid[i][1], 0, unID, 				horgrid_01[i][3], 3 : unID=unID+1
						hotspot horgrid[i][3]-gw/2,	horgrid[i][1], 0, unID, horgrid_01[i][3], 2 : unID=unID+1
					next i
				endif

				if CasementID = 2 then
					for i = 1 + gridIdxOffsetHgn to hgn + gridIdxOffsetHgn
						lenghth=horgrid[i][2]+(horgrid[i][3]-horgrid[i][2])/2

						hotspot lenghth, 0, 0, unID, 						horgrid_02[i][1],	1+128 : unID=unID+1
						hotspot lenghth, -1, 0, unID, 						horgrid_02[i][1], 3 : unID=unID+1
						hotspot lenghth, horgrid[i][1], 0, unID, 			horgrid_02[i][1],	2 : unID=unID+1

						hotspot 0, horgrid[i][1], 0, unID, 					horgrid_02[i][2], 1+128 : unID=unID+1
						hotspot -1,	horgrid[i][1], 0, unID,					horgrid_02[i][2], 3 : unID=unID+1
						hotspot horgrid[i][2]+gw/2,	horgrid[i][1], 0, unID, horgrid_02[i][2], 2 : unID=unID+1

						hotspot 0, horgrid[i][1], 0, unID, 					horgrid_02[i][3], 1+128 : unID=unID+1
						hotspot -1,	horgrid[i][1], 0, unID, 				horgrid_02[i][3], 3 : unID=unID+1
						hotspot horgrid[i][3]-gw/2,	horgrid[i][1], 0, unID, horgrid_02[i][3], 2 : unID=unID+1
					next i
				endif

				if CasementID = 3 then
					for i = 1 + gridIdxOffsetHgn to hgn + gridIdxOffsetHgn
						lenghth=horgrid[i][2]+(horgrid[i][3]-horgrid[i][2])/2

						hotspot lenghth, 0, 0, unID, 						horgrid_03[i][1],	1+128 : unID=unID+1
						hotspot lenghth, -1, 0, unID, 						horgrid_03[i][1], 3 : unID=unID+1
						hotspot lenghth, horgrid[i][1], 0, unID, 			horgrid_03[i][1],	2 : unID=unID+1

						hotspot 0, horgrid[i][1], 0, unID, 					horgrid_03[i][2], 1+128 : unID=unID+1
						hotspot -1,	horgrid[i][1], 0, unID,					horgrid_03[i][2], 3 : unID=unID+1
						hotspot horgrid[i][2]+gw/2,	horgrid[i][1], 0, unID, horgrid_03[i][2], 2 : unID=unID+1

						hotspot 0, horgrid[i][1], 0, unID, 					horgrid_03[i][3], 1+128 : unID=unID+1
						hotspot -1,	horgrid[i][1], 0, unID, 				horgrid_03[i][3], 3 : unID=unID+1
						hotspot horgrid[i][3]-gw/2,	horgrid[i][1], 0, unID, horgrid_03[i][3], 2 : unID=unID+1
					next i
				endif

				if CasementID = 4 then
					for i = 1 + gridIdxOffsetHgn to hgn + gridIdxOffsetHgn
						lenghth=horgrid[i][2]+(horgrid[i][3]-horgrid[i][2])/2

						hotspot lenghth, 0, 0, unID, 						horgrid_04[i][1],	1+128 : unID=unID+1
						hotspot lenghth, -1, 0, unID, 						horgrid_04[i][1], 3 : unID=unID+1
						hotspot lenghth, horgrid[i][1], 0, unID, 			horgrid_04[i][1],	2 : unID=unID+1

						hotspot 0, horgrid[i][1], 0, unID, 					horgrid_04[i][2], 1+128 : unID=unID+1
						hotspot -1,	horgrid[i][1], 0, unID,					horgrid_04[i][2], 3 : unID=unID+1
						hotspot horgrid[i][2]+gw/2,	horgrid[i][1], 0, unID, horgrid_04[i][2], 2 : unID=unID+1

						hotspot 0, horgrid[i][1], 0, unID, 					horgrid_04[i][3], 1+128 : unID=unID+1
						hotspot -1,	horgrid[i][1], 0, unID, 				horgrid_04[i][3], 3 : unID=unID+1
						hotspot horgrid[i][3]-gw/2,	horgrid[i][1], 0, unID, horgrid_04[i][3], 2 : unID=unID+1
					next i
				endif

				if CasementID = 5 then
					for i = 1 + gridIdxOffsetHgn to hgn + gridIdxOffsetHgn
						lenghth=horgrid[i][2]+(horgrid[i][3]-horgrid[i][2])/2

						hotspot lenghth, 0, 0, unID, 						horgrid_05[i][1],	1+128 : unID=unID+1
						hotspot lenghth, -1, 0, unID, 						horgrid_05[i][1], 3 : unID=unID+1
						hotspot lenghth, horgrid[i][1], 0, unID, 			horgrid_05[i][1],	2 : unID=unID+1

						hotspot 0, horgrid[i][1], 0, unID, 					horgrid_05[i][2], 1+128 : unID=unID+1
						hotspot -1,	horgrid[i][1], 0, unID,					horgrid_05[i][2], 3 : unID=unID+1
						hotspot horgrid[i][2]+gw/2,	horgrid[i][1], 0, unID, horgrid_05[i][2], 2 : unID=unID+1

						hotspot 0, horgrid[i][1], 0, unID, 					horgrid_05[i][3], 1+128 : unID=unID+1
						hotspot -1,	horgrid[i][1], 0, unID, 				horgrid_05[i][3], 3 : unID=unID+1
						hotspot horgrid[i][3]-gw/2,	horgrid[i][1], 0, unID, horgrid_05[i][3], 2 : unID=unID+1
					next i
				endif

				if CasementID = 6 then
					for i = 1 + gridIdxOffsetHgn to hgn + gridIdxOffsetHgn
						lenghth=horgrid[i][2]+(horgrid[i][3]-horgrid[i][2])/2

						hotspot lenghth, 0, 0, unID, 						horgrid_06[i][1],	1+128 : unID=unID+1
						hotspot lenghth, -1, 0, unID, 						horgrid_06[i][1], 3 : unID=unID+1
						hotspot lenghth, horgrid[i][1], 0, unID, 			horgrid_06[i][1],	2 : unID=unID+1

						hotspot 0, horgrid[i][1], 0, unID, 					horgrid_06[i][2], 1+128 : unID=unID+1
						hotspot -1,	horgrid[i][1], 0, unID,					horgrid_06[i][2], 3 : unID=unID+1
						hotspot horgrid[i][2]+gw/2,	horgrid[i][1], 0, unID, horgrid_06[i][2], 2 : unID=unID+1

						hotspot 0, horgrid[i][1], 0, unID, 					horgrid_06[i][3], 1+128 : unID=unID+1
						hotspot -1,	horgrid[i][1], 0, unID, 				horgrid_06[i][3], 3 : unID=unID+1
						hotspot horgrid[i][3]-gw/2,	horgrid[i][1], 0, unID, horgrid_06[i][3], 2 : unID=unID+1
					next i
				endif

				if CasementID = 7 then
					for i = 1 + gridIdxOffsetHgn to hgn + gridIdxOffsetHgn
						lenghth=horgrid[i][2]+(horgrid[i][3]-horgrid[i][2])/2

						hotspot lenghth, 0, 0, unID, 						horgrid_07[i][1],	1+128 : unID=unID+1
						hotspot lenghth, -1, 0, unID, 						horgrid_07[i][1], 3 : unID=unID+1
						hotspot lenghth, horgrid[i][1], 0, unID, 			horgrid_07[i][1],	2 : unID=unID+1

						hotspot 0, horgrid[i][1], 0, unID, 					horgrid_07[i][2], 1+128 : unID=unID+1
						hotspot -1,	horgrid[i][1], 0, unID,					horgrid_07[i][2], 3 : unID=unID+1
						hotspot horgrid[i][2]+gw/2,	horgrid[i][1], 0, unID, horgrid_07[i][2], 2 : unID=unID+1

						hotspot 0, horgrid[i][1], 0, unID, 					horgrid_07[i][3], 1+128 : unID=unID+1
						hotspot -1,	horgrid[i][1], 0, unID, 				horgrid_07[i][3], 3 : unID=unID+1
						hotspot horgrid[i][3]-gw/2,	horgrid[i][1], 0, unID, horgrid_07[i][3], 2 : unID=unID+1
					next i
				endif

				if CasementID = 8 then
					for i = 1 + gridIdxOffsetHgn to hgn + gridIdxOffsetHgn
						lenghth=horgrid[i][2]+(horgrid[i][3]-horgrid[i][2])/2

						hotspot lenghth, 0, 0, unID, 						horgrid_08[i][1],	1+128 : unID=unID+1
						hotspot lenghth, -1, 0, unID, 						horgrid_08[i][1], 3 : unID=unID+1
						hotspot lenghth, horgrid[i][1], 0, unID, 			horgrid_08[i][1],	2 : unID=unID+1

						hotspot 0, horgrid[i][1], 0, unID, 					horgrid_08[i][2], 1+128 : unID=unID+1
						hotspot -1,	horgrid[i][1], 0, unID,					horgrid_08[i][2], 3 : unID=unID+1
						hotspot horgrid[i][2]+gw/2,	horgrid[i][1], 0, unID, horgrid_08[i][2], 2 : unID=unID+1

						hotspot 0, horgrid[i][1], 0, unID, 					horgrid_08[i][3], 1+128 : unID=unID+1
						hotspot -1,	horgrid[i][1], 0, unID, 				horgrid_08[i][3], 3 : unID=unID+1
						hotspot horgrid[i][3]-gw/2,	horgrid[i][1], 0, unID, horgrid_08[i][3], 2 : unID=unID+1
					next i
				endif

				if CasementID = 9 then
					for i = 1 + gridIdxOffsetHgn to hgn + gridIdxOffsetHgn
						lenghth=horgrid[i][2]+(horgrid[i][3]-horgrid[i][2])/2

						hotspot lenghth, 0, 0, unID, 						horgrid_09[i][1],	1+128 : unID=unID+1
						hotspot lenghth, -1, 0, unID, 						horgrid_09[i][1], 3 : unID=unID+1
						hotspot lenghth, horgrid[i][1], 0, unID, 			horgrid_09[i][1],	2 : unID=unID+1

						hotspot 0, horgrid[i][1], 0, unID, 					horgrid_09[i][2], 1+128 : unID=unID+1
						hotspot -1,	horgrid[i][1], 0, unID,					horgrid_09[i][2], 3 : unID=unID+1
						hotspot horgrid[i][2]+gw/2,	horgrid[i][1], 0, unID, horgrid_09[i][2], 2 : unID=unID+1

						hotspot 0, horgrid[i][1], 0, unID, 					horgrid_09[i][3], 1+128 : unID=unID+1
						hotspot -1,	horgrid[i][1], 0, unID, 				horgrid_09[i][3], 3 : unID=unID+1
						hotspot horgrid[i][3]-gw/2,	horgrid[i][1], 0, unID, horgrid_09[i][3], 2 : unID=unID+1
					next i
				endif

				if CasementID = 10 then
					for i = 1 + gridIdxOffsetHgn to hgn + gridIdxOffsetHgn
						lenghth=horgrid[i][2]+(horgrid[i][3]-horgrid[i][2])/2

						hotspot lenghth, 0, 0, unID, 						horgrid_10[i][1],	1+128 : unID=unID+1
						hotspot lenghth, -1, 0, unID, 						horgrid_10[i][1], 3 : unID=unID+1
						hotspot lenghth, horgrid[i][1], 0, unID, 			horgrid_10[i][1],	2 : unID=unID+1

						hotspot 0, horgrid[i][1], 0, unID, 					horgrid_10[i][2], 1+128 : unID=unID+1
						hotspot -1,	horgrid[i][1], 0, unID,					horgrid_10[i][2], 3 : unID=unID+1
						hotspot horgrid[i][2]+gw/2,	horgrid[i][1], 0, unID, horgrid_10[i][2], 2 : unID=unID+1

						hotspot 0, horgrid[i][1], 0, unID, 					horgrid_10[i][3], 1+128 : unID=unID+1
						hotspot -1,	horgrid[i][1], 0, unID, 				horgrid_10[i][3], 3 : unID=unID+1
						hotspot horgrid[i][3]-gw/2,	horgrid[i][1], 0, unID, horgrid_10[i][3], 2 : unID=unID+1
					next i
				endif

				if CasementID = 11 then
					for i = 1 + gridIdxOffsetHgn to hgn + gridIdxOffsetHgn
						lenghth=horgrid[i][2]+(horgrid[i][3]-horgrid[i][2])/2

						hotspot lenghth, 0, 0, unID, 						horgrid_11[i][1],	1+128 : unID=unID+1
						hotspot lenghth, -1, 0, unID, 						horgrid_11[i][1], 3 : unID=unID+1
						hotspot lenghth, horgrid[i][1], 0, unID, 			horgrid_11[i][1],	2 : unID=unID+1

						hotspot 0, horgrid[i][1], 0, unID, 					horgrid_11[i][2], 1+128 : unID=unID+1
						hotspot -1,	horgrid[i][1], 0, unID,					horgrid_11[i][2], 3 : unID=unID+1
						hotspot horgrid[i][2]+gw/2,	horgrid[i][1], 0, unID, horgrid_11[i][2], 2 : unID=unID+1

						hotspot 0, horgrid[i][1], 0, unID, 					horgrid_11[i][3], 1+128 : unID=unID+1
						hotspot -1,	horgrid[i][1], 0, unID, 				horgrid_11[i][3], 3 : unID=unID+1
						hotspot horgrid[i][3]-gw/2,	horgrid[i][1], 0, unID, horgrid_11[i][3], 2 : unID=unID+1
					next i
				endif

				del 1
			endif
		endif

		if hgn > 0 | (iMullionStyle = MULLION_DIVIDED & hgn2 > 0) then
			!sect_fill gs_fillSash, gs_penSash_bg, gs_penSash_fg, gs_sash_pen_cont

			if hgn > 0 & iMullionStyle <> MULLION_SOLID_GLAZED then
				add -AA/2 , -gw/2+gs_sash_width-fix_sh_grmod, gz
				for i = 1 + gridIdxOffsetHgn to hgn + gridIdxOffsetHgn
					if abs(horgrid[i][2] - horgrid[i][3]) < EPS then horgrid[i][3] = horgrid[i][2] + EPS

					addy horgrid[i][1]
					if gw > EPS then
						_actHorgrid				= horgrid
						_actVergrid				= vergrid
						_actVergridNum			= vgn
						_actGridIdxOffsetVgn	= gridIdxOffsetVgn
						gosub "customHVGridHorGrids"
					else
						lin_ horgrid[i][2],0,0, horgrid[i][3],0,0
					endif
					del 1
				next i
				del 1
			endif

			if hgn2 > 0 & (iMullionStyle = MULLION_DIVIDED | iMullionStyle = MULLION_SOLID_GLAZED) then
				add -AA/2 , -gw/2+gs_sash_width-fix_sh_grmod, gz
				for i = 1 + gridIdxOffsetHgn2 to hgn2 + gridIdxOffsetHgn2
					if abs(horgrid2[i][2] - horgrid2[i][3]) < EPS then horgrid2[i][3] = horgrid2[i][2] + EPS

					addy horgrid2[i][1]
					if gw > EPS then
						_actHorgrid				= horgrid2
						_actVergrid				= vergrid2
						_actVergridNum			= vgn2
						_actGridIdxOffsetVgn	= gridIdxOffsetVgn2
						gosub "customHVGridHorGrids"
					else
						lin_ horgrid2[i][2],0,0, horgrid2[i][3],0,0
					endif
					del 1
				next i
				del 1
			endif
		endif

		addz currentGrillThickness

		matGrillSide = matGrillTop

	next ijk
	del in_out_cikl_gr

endif


! =============================================================================
! Custom Panel
! =============================================================================

if iMullionStyle = MULLION_CUSTOM then

	pen gs_sash_pen

	if gs_optype_m = SASH_FIXED then
		addz -gs_rebate_depth - gs_glass_thk/2
		panelThk = gs_glass_thk
	else
		panelThk = gs_sash_thk
	endif

	if bSecondSash then
		if gs_cust_panel2<>"" then
			if gs_bMirr_cust_panel2 then mulx -1
			addx -AA/2
			call "Window_Panel_Collection" parameters A=AA, B=BB, zzyzx=panelThk, gs_ptype=gs_cust_panel2
			del 1
			if gs_bMirr_cust_panel2 then del 1
		endif
	else
		if gs_cust_panel<>"" then
			if gs_bMirr_cust_panel then mulx -1
			addx -AA/2
			call "Window_Panel_Collection" parameters A=AA, B=BB, zzyzx=panelThk, gs_ptype=gs_cust_panel
			del 1
			if gs_bMirr_cust_panel then del 1
		endif
	endif
	if gs_optype_m = SASH_FIXED then del 1
endif


! =============================================================================
! Prairie Style
! =============================================================================

if iMullionStyle = MULLION_PRAIRIE then

	pen gs_sash_pen

	sx	= -AA/2 + gs_sash_width
	sx2	= -sx
	sy	= gs_sash_width
	dy3	= (BB - 2*(gs_sash_width) - 6"-3*gw)/5
	sx3	= AA - 2*(gs_sash_width)
	pw	= gw

	addz gs_sash_thk/2-gth/2
	prism_ 75, gth,
		sx,sy,15,
		sx2,sy,15,
		sx2,BB-sy,15,
		sx,BB-sy,15,
		sx,sy,-1,

		sx+pw,sy+pw,15,
		sx+pw+3",sy+pw,15,
		sx+pw+3",sy+pw+3",15,
		sx+pw,sy+pw+3",15,
		sx+pw,sy+pw,-1,

		sx2-pw,sy+pw,15,
		sx2-pw-3",sy+pw,15,
		sx2-pw-3",sy+pw+3",15,
		sx2-pw,sy+pw+3",15,
		sx2-pw,sy+pw,-1,

		sx+pw,BB-sy-pw,15,
		sx+pw+3",BB-sy-pw,15,
		sx+pw+3",BB-sy-pw-3",15,
		sx+pw,BB-sy-pw-3",15,
		sx+pw,BB-sy-pw,-1,

		sx2-pw,BB-sy-pw,15,
		sx2-pw-3",BB-sy-pw,15,
		sx2-pw-3",BB-sy-pw-3",15,
		sx2-pw,BB-sy-pw-3",15,
		sx2-pw,BB-sy-pw,-1,

		sx+2*pw+3",BB-sy-pw,15,
		sx2-2*pw-3",BB-sy-pw,15,
		sx2-2*pw-3",BB-sy-pw-3",15,
		sx+2*pw+3",BB-sy-pw-3",15,
		sx+2*pw+3",BB-sy-pw,-1,

		sx+2*pw+3",sy+pw,15,
		sx2-2*pw-3",sy+pw,15,
		sx2-2*pw-3",sy+pw+3",15,
		sx+2*pw+3",sy+pw+3",15,
		sx+2*pw+3",sy+pw,-1,

		sx+pw,sy+2*pw+3",15,
		sx+pw+3",sy+2*pw+3",15,
		sx+pw+3",BB-sy-2*pw-3",15,
		sx+pw,BB-sy-2*pw-3",15,
		sx+pw,sy+2*pw+3",-1,

		sx2-pw,sy+2*pw+3",15,
		sx2-pw-3",sy+2*pw+3",15,
		sx2-pw-3",BB-sy-2*pw-3",15,
		sx2-pw,BB-sy-2*pw-3",15,
		sx2-pw,sy+2*pw+3",-1,

		sx+2*pw+3",sy+2*pw+3",15,
		sx+2*pw+3",sy+2*pw+3"+3*dy3-pw,15,
		sx+sx3/2-pw/2,sy+2*pw+3"+3*dy3-pw,15,
		sx+sx3/2-pw/2,sy+2*pw+3",15,
		sx+2*pw+3",sy+2*pw+3",-1,

		sx2-2*pw-3",sy+2*pw+3",15,
		sx2-2*pw-3",sy+2*pw+3"+3*dy3-pw,15,
		sx+sx3/2+pw/2,sy+2*pw+3"+3*dy3-pw,15,
		sx+sx3/2+pw/2,sy+2*pw+3",15,
		sx2-2*pw-3",sy+2*pw+3",-1,

		sx+2*pw+3",sy+2*pw+3"+4*dy3-pw,15,
		sx+2*pw+3",sy+2*pw+3"+3*dy3,15,
		sx+sx3/2-pw/2,sy+2*pw+3"+3*dy3,15,
		sx+sx3/2-pw/2,sy+2*pw+3"+4*dy3-pw,15,
		sx+2*pw+3",sy+2*pw+3"+4*dy3-pw,-1,

		sx2-2*pw-3",sy+2*pw+3"+4*dy3-pw,15,
		sx2-2*pw-3",sy+2*pw+3"+3*dy3,15,
		sx+sx3/2+pw/2,sy+2*pw+3"+3*dy3,15,
		sx+sx3/2+pw/2,sy+2*pw+3"+4*dy3-pw,15,
		sx2-2*pw-3",sy+2*pw+3"+4*dy3-pw,-1,

		sx+2*pw+3",sy+2*pw+3"+5*dy3-pw,15,
		sx+2*pw+3",sy+2*pw+3"+4*dy3,15,
		sx+sx3/2-pw/2,sy+2*pw+3"+4*dy3,15,
		sx+sx3/2-pw/2,sy+2*pw+3"+5*dy3-pw,15,
		sx+2*pw+3",sy+2*pw+3"+5*dy3-pw,-1,

		sx2-2*pw-3",sy+2*pw+3"+5*dy3-pw,15,
		sx2-2*pw-3",sy+2*pw+3"+4*dy3,15,
		sx+sx3/2+pw/2,sy+2*pw+3"+4*dy3,15,
		sx+sx3/2+pw/2,sy+2*pw+3"+5*dy3-pw,15,
		sx2-2*pw-3",sy+2*pw+3"+5*dy3-pw,-1
	del 1

endif

return


! =============================================================================
! SubRoutines
! =============================================================================

"hotspots_SIDE_HUNG_M":
	if CasementID = 1 then
		hotspot AA,											-gs_sash_thk/2,								0, unID, openingAngle_01, 4+128 : unID=unID+1
		hotspot 0,											0,											-refPointSign, 			 unID, openingAngle_01, 7 : unID=unID+1
		hotspot AA*sin(90+openingAngle)+gs_sash_thk/2*cos(90+openingAngle),AA*cos(90+openingAngle)-gs_sash_thk/2*sin(90+openingAngle),0, unID, openingAngle_01, 5 : unID=unID+1
		hotspot 0, 											0, 											0, unID, openingAngle_01, 6 : unID=unID+1
	endif

	if CasementID = 2 then
		hotspot AA,											-gs_sash_thk/2,								0, unID, openingAngle_02, 4+128 : unID=unID+1
		hotspot 0,											0,											-refPointSign, 			 unID, openingAngle_02, 7 : unID=unID+1
		hotspot AA*sin(90+openingAngle)+gs_sash_thk/2*cos(90+openingAngle),AA*cos(90+openingAngle)-gs_sash_thk/2*sin(90+openingAngle),0, unID, openingAngle_02, 5 : unID=unID+1
		hotspot 0, 											0, 											0, unID, openingAngle_02, 6 : unID=unID+1
	endif

	if CasementID = 3 then
		hotspot AA,											-gs_sash_thk/2,								0, unID, openingAngle_03, 4+128 : unID=unID+1
		hotspot 0,											0,											-refPointSign, 			 unID, openingAngle_03, 7 : unID=unID+1
		hotspot AA*sin(90+openingAngle)+gs_sash_thk/2*cos(90+openingAngle),AA*cos(90+openingAngle)-gs_sash_thk/2*sin(90+openingAngle),0, unID, openingAngle_03, 5 : unID=unID+1
		hotspot 0, 											0, 											0, unID, openingAngle_03, 6 : unID=unID+1
	endif

	if CasementID = 4 then
		hotspot AA,											-gs_sash_thk/2,								0, unID, openingAngle_04, 4+128 : unID=unID+1
		hotspot 0,											0,											-refPointSign, 			 unID, openingAngle_04, 7 : unID=unID+1
		hotspot AA*sin(90+openingAngle)+gs_sash_thk/2*cos(90+openingAngle),AA*cos(90+openingAngle)-gs_sash_thk/2*sin(90+openingAngle),0, unID, openingAngle_04, 5 : unID=unID+1
		hotspot 0, 											0, 											0, unID, openingAngle_04, 6 : unID=unID+1
	endif

	if CasementID = 5 then
		hotspot AA,											-gs_sash_thk/2,								0, unID, openingAngle_05, 4+128 : unID=unID+1
		hotspot 0,											0,											-refPointSign, 			 unID, openingAngle_05, 7 : unID=unID+1
		hotspot AA*sin(90+openingAngle)+gs_sash_thk/2*cos(90+openingAngle),AA*cos(90+openingAngle)-gs_sash_thk/2*sin(90+openingAngle),0, unID, openingAngle_05, 5 : unID=unID+1
		hotspot 0, 											0, 											0, unID, openingAngle_05, 6 : unID=unID+1
	endif

	if CasementID = 6 then
		hotspot AA,											-gs_sash_thk/2,								0, unID, openingAngle_06, 4+128 : unID=unID+1
		hotspot 0,											0,											-refPointSign, 			 unID, openingAngle_06, 7 : unID=unID+1
		hotspot AA*sin(90+openingAngle)+gs_sash_thk/2*cos(90+openingAngle),AA*cos(90+openingAngle)-gs_sash_thk/2*sin(90+openingAngle),0, unID, openingAngle_06, 5 : unID=unID+1
		hotspot 0, 											0, 											0, unID, openingAngle_06, 6 : unID=unID+1
	endif

	if CasementID = 7 then
		hotspot AA,											-gs_sash_thk/2,								0, unID, openingAngle_07, 4+128 : unID=unID+1
		hotspot 0,											0,											-refPointSign, 			 unID, openingAngle_07, 7 : unID=unID+1
		hotspot AA*sin(90+openingAngle)+gs_sash_thk/2*cos(90+openingAngle),AA*cos(90+openingAngle)-gs_sash_thk/2*sin(90+openingAngle),0, unID, openingAngle_07, 5 : unID=unID+1
		hotspot 0, 											0, 											0, unID, openingAngle_07, 6 : unID=unID+1
	endif

	if CasementID = 8 then
		hotspot AA,											-gs_sash_thk/2,								0, unID, openingAngle_08, 4+128 : unID=unID+1
		hotspot 0,											0,											-refPointSign, 			 unID, openingAngle_08, 7 : unID=unID+1
		hotspot AA*sin(90+openingAngle)+gs_sash_thk/2*cos(90+openingAngle),AA*cos(90+openingAngle)-gs_sash_thk/2*sin(90+openingAngle),0, unID, openingAngle_08, 5 : unID=unID+1
		hotspot 0, 											0, 											0, unID, openingAngle_08, 6 : unID=unID+1
	endif

	if CasementID = 9 then
		hotspot AA,											-gs_sash_thk/2,								0, unID, openingAngle_09, 4+128 : unID=unID+1
		hotspot 0,											0,											-refPointSign, 			 unID, openingAngle_09, 7 : unID=unID+1
		hotspot AA*sin(90+openingAngle)+gs_sash_thk/2*cos(90+openingAngle),AA*cos(90+openingAngle)-gs_sash_thk/2*sin(90+openingAngle),0, unID, openingAngle_09, 5 : unID=unID+1
		hotspot 0, 											0, 											0, unID, openingAngle_09, 6 : unID=unID+1
	endif

	if CasementID = 10 then
		hotspot AA,											-gs_sash_thk/2,								0, unID, openingAngle_10, 4+128 : unID=unID+1
		hotspot 0,											0,											-refPointSign, 			 unID, openingAngle_10, 7 : unID=unID+1
		hotspot AA*sin(90+openingAngle)+gs_sash_thk/2*cos(90+openingAngle),AA*cos(90+openingAngle)-gs_sash_thk/2*sin(90+openingAngle),0, unID, openingAngle_10, 5 : unID=unID+1
		hotspot 0, 											0, 											0, unID, openingAngle_10, 6 : unID=unID+1
	endif

	if CasementID = 11 then
		hotspot AA,											-gs_sash_thk/2,								0, unID, openingAngle_11, 4+128 : unID=unID+1
		hotspot 0,											0,											-refPointSign, 			 unID, openingAngle_11, 7 : unID=unID+1
		hotspot AA*sin(90+openingAngle)+gs_sash_thk/2*cos(90+openingAngle),AA*cos(90+openingAngle)-gs_sash_thk/2*sin(90+openingAngle),0, unID, openingAngle_11, 5 : unID=unID+1
		hotspot 0, 											0, 											0, unID, openingAngle_11, 6 : unID=unID+1
	endif
return


"hotspots_SIDE_HUNG":
	if CasementID = 1 then
		hotspot AA,											-gs_sash_thk/2,								0, unID, openingAngle_01, 4+128 : unID=unID+1
		hotspot 0,											0,											refPointSign, 			 unID, openingAngle_01, 7 : unID=unID+1
		hotspot AA*sin(90+openingAngle)+gs_sash_thk/2*cos(90+openingAngle),AA*cos(90+openingAngle)-gs_sash_thk/2*sin(90+openingAngle),0, unID, openingAngle_01, 5 : unID=unID+1
		hotspot 0, 											0, 											0, unID, openingAngle_01, 6 : unID=unID+1
	endif

	if CasementID = 2 then
		hotspot AA,											-gs_sash_thk/2,								0, unID, openingAngle_02, 4+128 : unID=unID+1
		hotspot 0,											0,											refPointSign, 			 unID, openingAngle_02, 7 : unID=unID+1
		hotspot AA*sin(90+openingAngle)+gs_sash_thk/2*cos(90+openingAngle),AA*cos(90+openingAngle)-gs_sash_thk/2*sin(90+openingAngle),0, unID, openingAngle_02, 5 : unID=unID+1
		hotspot 0, 											0, 											0, unID, openingAngle_02, 6 : unID=unID+1
	endif

	if CasementID = 3 then
		hotspot AA,											-gs_sash_thk/2,								0, unID, openingAngle_03, 4+128 : unID=unID+1
		hotspot 0,											0,											refPointSign, 			 unID, openingAngle_03, 7 : unID=unID+1
		hotspot AA*sin(90+openingAngle)+gs_sash_thk/2*cos(90+openingAngle),AA*cos(90+openingAngle)-gs_sash_thk/2*sin(90+openingAngle),0, unID, openingAngle_03, 5 : unID=unID+1
		hotspot 0, 											0, 											0, unID, openingAngle_03, 6 : unID=unID+1
	endif

	if CasementID = 4 then
		hotspot AA,											-gs_sash_thk/2,								0, unID, openingAngle_04, 4+128 : unID=unID+1
		hotspot 0,											0,											refPointSign, 			 unID, openingAngle_04, 7 : unID=unID+1
		hotspot AA*sin(90+openingAngle)+gs_sash_thk/2*cos(90+openingAngle),AA*cos(90+openingAngle)-gs_sash_thk/2*sin(90+openingAngle),0, unID, openingAngle_04, 5 : unID=unID+1
		hotspot 0, 											0, 											0, unID, openingAngle_04, 6 : unID=unID+1
	endif

	if CasementID = 5 then
		hotspot AA,											-gs_sash_thk/2,								0, unID, openingAngle_05, 4+128 : unID=unID+1
		hotspot 0,											0,											refPointSign, 			 unID, openingAngle_05, 7 : unID=unID+1
		hotspot AA*sin(90+openingAngle)+gs_sash_thk/2*cos(90+openingAngle),AA*cos(90+openingAngle)-gs_sash_thk/2*sin(90+openingAngle),0, unID, openingAngle_05, 5 : unID=unID+1
		hotspot 0, 											0, 											0, unID, openingAngle_05, 6 : unID=unID+1
	endif

	if CasementID = 6 then
		hotspot AA,											-gs_sash_thk/2,								0, unID, openingAngle_06, 4+128 : unID=unID+1
		hotspot 0,											0,											refPointSign, 			 unID, openingAngle_06, 7 : unID=unID+1
		hotspot AA*sin(90+openingAngle)+gs_sash_thk/2*cos(90+openingAngle),AA*cos(90+openingAngle)-gs_sash_thk/2*sin(90+openingAngle),0, unID, openingAngle_06, 5 : unID=unID+1
		hotspot 0, 											0, 											0, unID, openingAngle_06, 6 : unID=unID+1
	endif

	if CasementID = 7 then
		hotspot AA,											-gs_sash_thk/2,								0, unID, openingAngle_07, 4+128 : unID=unID+1
		hotspot 0,											0,											refPointSign, 			 unID, openingAngle_07, 7 : unID=unID+1
		hotspot AA*sin(90+openingAngle)+gs_sash_thk/2*cos(90+openingAngle),AA*cos(90+openingAngle)-gs_sash_thk/2*sin(90+openingAngle),0, unID, openingAngle_07, 5 : unID=unID+1
		hotspot 0, 											0, 											0, unID, openingAngle_07, 6 : unID=unID+1
	endif

	if CasementID = 8 then
		hotspot AA,											-gs_sash_thk/2,								0, unID, openingAngle_08, 4+128 : unID=unID+1
		hotspot 0,											0,											refPointSign, 			 unID, openingAngle_08, 7 : unID=unID+1
		hotspot AA*sin(90+openingAngle)+gs_sash_thk/2*cos(90+openingAngle),AA*cos(90+openingAngle)-gs_sash_thk/2*sin(90+openingAngle),0, unID, openingAngle_08, 5 : unID=unID+1
		hotspot 0, 											0, 											0, unID, openingAngle_08, 6 : unID=unID+1
	endif

	if CasementID = 9 then
		hotspot AA,											-gs_sash_thk/2,								0, unID, openingAngle_09, 4+128 : unID=unID+1
		hotspot 0,											0,											refPointSign, 			 unID, openingAngle_09, 7 : unID=unID+1
		hotspot AA*sin(90+openingAngle)+gs_sash_thk/2*cos(90+openingAngle),AA*cos(90+openingAngle)-gs_sash_thk/2*sin(90+openingAngle),0, unID, openingAngle_09, 5 : unID=unID+1
		hotspot 0, 											0, 											0, unID, openingAngle_09, 6 : unID=unID+1
	endif

	if CasementID = 10 then
		hotspot AA,											-gs_sash_thk/2,								0, unID, openingAngle_10, 4+128 : unID=unID+1
		hotspot 0,											0,											refPointSign, 			 unID, openingAngle_10, 7 : unID=unID+1
		hotspot AA*sin(90+openingAngle)+gs_sash_thk/2*cos(90+openingAngle),AA*cos(90+openingAngle)-gs_sash_thk/2*sin(90+openingAngle),0, unID, openingAngle_10, 5 : unID=unID+1
		hotspot 0, 											0, 											0, unID, openingAngle_10, 6 : unID=unID+1
	endif

	if CasementID = 11 then
		hotspot AA,											-gs_sash_thk/2,								0, unID, openingAngle_11, 4+128 : unID=unID+1
		hotspot 0,											0,											refPointSign, 			 unID, openingAngle_11, 7 : unID=unID+1
		hotspot AA*sin(90+openingAngle)+gs_sash_thk/2*cos(90+openingAngle),AA*cos(90+openingAngle)-gs_sash_thk/2*sin(90+openingAngle),0, unID, openingAngle_11, 5 : unID=unID+1
		hotspot 0, 											0, 											0, unID, openingAngle_11, 6 : unID=unID+1
	endif
return


"hotspots_TILT_BOTTOM_HUNG":
	if CasementID = 1 then
		hotspot BB,											-gs_sash_thk/2,								0, unID, openingAngle2_01, 4+128 : unID=unID+1
		hotspot 0,											0,											refPointSign, 			 unID, openingAngle2_01, 7 : unID=unID+1
		hotspot BB*sin(90+openingAngle2)+gs_sash_thk/2*cos(90+openingAngle2),BB*cos(90+openingAngle2)-gs_sash_thk/2*sin(90+openingAngle2),0, unID, openingAngle2_01, 5 : unID=unID+1
		hotspot 0, 											0, 											0, unID, openingAngle2_01, 6 : unID=unID+1
	endif

	if CasementID = 2 then
		hotspot BB,											-gs_sash_thk/2,								0, unID, openingAngle2_02, 4+128 : unID=unID+1
		hotspot 0,											0,											refPointSign, 			 unID, openingAngle2_02, 7 : unID=unID+1
		hotspot BB*sin(90+openingAngle2)+gs_sash_thk/2*cos(90+openingAngle2),BB*cos(90+openingAngle2)-gs_sash_thk/2*sin(90+openingAngle2),0, unID, openingAngle2_02, 5 : unID=unID+1
		hotspot 0, 											0, 											0, unID, openingAngle2_02, 6 : unID=unID+1
	endif

	if CasementID = 3 then
		hotspot BB,											-gs_sash_thk/2,								0, unID, openingAngle2_03, 4+128 : unID=unID+1
		hotspot 0,											0,											refPointSign, 			 unID, openingAngle2_03, 7 : unID=unID+1
		hotspot BB*sin(90+openingAngle2)+gs_sash_thk/2*cos(90+openingAngle2),BB*cos(90+openingAngle2)-gs_sash_thk/2*sin(90+openingAngle2),0, unID, openingAngle2_03, 5 : unID=unID+1
		hotspot 0, 											0, 											0, unID, openingAngle2_03, 6 : unID=unID+1
	endif

	if CasementID = 4 then
		hotspot BB,											-gs_sash_thk/2,								0, unID, openingAngle2_04, 4+128 : unID=unID+1
		hotspot 0,											0,											refPointSign, 			 unID, openingAngle2_04, 7 : unID=unID+1
		hotspot BB*sin(90+openingAngle2)+gs_sash_thk/2*cos(90+openingAngle2),BB*cos(90+openingAngle2)-gs_sash_thk/2*sin(90+openingAngle2),0, unID, openingAngle2_04, 5 : unID=unID+1
		hotspot 0, 											0, 											0, unID, openingAngle2_04, 6 : unID=unID+1
	endif

	if CasementID = 5 then
		hotspot BB,											-gs_sash_thk/2,								0, unID, openingAngle2_05, 4+128 : unID=unID+1
		hotspot 0,											0,											refPointSign, 			 unID, openingAngle2_05, 7 : unID=unID+1
		hotspot BB*sin(90+openingAngle2)+gs_sash_thk/2*cos(90+openingAngle2),BB*cos(90+openingAngle2)-gs_sash_thk/2*sin(90+openingAngle2),0, unID, openingAngle2_05, 5 : unID=unID+1
		hotspot 0, 											0, 											0, unID, openingAngle2_05, 6 : unID=unID+1
	endif

	if CasementID = 6 then
		hotspot BB,											-gs_sash_thk/2,								0, unID, openingAngle2_06, 4+128 : unID=unID+1
		hotspot 0,											0,											refPointSign, 			 unID, openingAngle2_06, 7 : unID=unID+1
		hotspot BB*sin(90+openingAngle2)+gs_sash_thk/2*cos(90+openingAngle2),BB*cos(90+openingAngle2)-gs_sash_thk/2*sin(90+openingAngle2),0, unID, openingAngle2_06, 5 : unID=unID+1
		hotspot 0, 											0, 											0, unID, openingAngle2_06, 6 : unID=unID+1
	endif

	if CasementID = 7 then
		hotspot BB,											-gs_sash_thk/2,								0, unID, openingAngle2_07, 4+128 : unID=unID+1
		hotspot 0,											0,											refPointSign, 			 unID, openingAngle2_07, 7 : unID=unID+1
		hotspot BB*sin(90+openingAngle2)+gs_sash_thk/2*cos(90+openingAngle2),BB*cos(90+openingAngle2)-gs_sash_thk/2*sin(90+openingAngle2),0, unID, openingAngle2_07, 5 : unID=unID+1
		hotspot 0, 											0, 											0, unID, openingAngle2_07, 6 : unID=unID+1
	endif

	if CasementID = 8 then
		hotspot BB,											-gs_sash_thk/2,								0, unID, openingAngle2_08, 4+128 : unID=unID+1
		hotspot 0,											0,											refPointSign, 			 unID, openingAngle2_08, 7 : unID=unID+1
		hotspot BB*sin(90+openingAngle2)+gs_sash_thk/2*cos(90+openingAngle2),BB*cos(90+openingAngle2)-gs_sash_thk/2*sin(90+openingAngle2),0, unID, openingAngle2_08, 5 : unID=unID+1
		hotspot 0, 											0, 											0, unID, openingAngle2_08, 6 : unID=unID+1
	endif

	if CasementID = 9 then
		hotspot BB,											-gs_sash_thk/2,								0, unID, openingAngle2_09, 4+128 : unID=unID+1
		hotspot 0,											0,											refPointSign, 			 unID, openingAngle2_09, 7 : unID=unID+1
		hotspot BB*sin(90+openingAngle2)+gs_sash_thk/2*cos(90+openingAngle2),BB*cos(90+openingAngle2)-gs_sash_thk/2*sin(90+openingAngle2),0, unID, openingAngle2_09, 5 : unID=unID+1
		hotspot 0, 											0, 											0, unID, openingAngle2_09, 6 : unID=unID+1
	endif

	if CasementID = 10 then
		hotspot BB,											-gs_sash_thk/2,								0, unID, openingAngle2_10, 4+128 : unID=unID+1
		hotspot 0,											0,											refPointSign, 			 unID, openingAngle2_10, 7 : unID=unID+1
		hotspot BB*sin(90+openingAngle2)+gs_sash_thk/2*cos(90+openingAngle2),BB*cos(90+openingAngle2)-gs_sash_thk/2*sin(90+openingAngle2),0, unID, openingAngle2_10, 5 : unID=unID+1
		hotspot 0, 											0, 											0, unID, openingAngle2_10, 6 : unID=unID+1
	endif

	if CasementID = 11 then
		hotspot BB,											-gs_sash_thk/2,								0, unID, openingAngle2_11, 4+128 : unID=unID+1
		hotspot 0,											0,											refPointSign, 			 unID, openingAngle2_11, 7 : unID=unID+1
		hotspot BB*sin(90+openingAngle2)+gs_sash_thk/2*cos(90+openingAngle2),BB*cos(90+openingAngle2)-gs_sash_thk/2*sin(90+openingAngle2),0, unID, openingAngle2_11, 5 : unID=unID+1
		hotspot 0, 											0, 											0, unID, openingAngle2_11, 6 : unID=unID+1
	endif
return

"hotspots_UP_SLIDING_VER":
	if CasementID = 1 then
		hotspot 0, 0, 0, unID, openingLength_01,	1+128 : unID=unID+1
		hotspot 0, -1, 0, unID, openingLength_01, 3 : unID=unID+1
		hotspot 0, openingLength, 0, unID, openingLength_01, 2 : unID=unID+1
	endif

	if CasementID = 2 then
		hotspot 0, 0, 0, unID, openingLength_02,	1+128 : unID=unID+1
		hotspot 0, -1, 0, unID, openingLength_02, 3 : unID=unID+1
		hotspot 0, openingLength, 0, unID, openingLength_02, 2 : unID=unID+1
	endif

	if CasementID = 3 then
		hotspot 0, 0, 0, unID, openingLength_03,	1+128 : unID=unID+1
		hotspot 0, -1, 0, unID, openingLength_03, 3 : unID=unID+1
		hotspot 0, openingLength, 0, unID, openingLength_03, 2 : unID=unID+1
	endif

	if CasementID = 4 then
		hotspot 0, 0, 0, unID, openingLength_04,	1+128 : unID=unID+1
		hotspot 0, -1, 0, unID, openingLength_04, 3 : unID=unID+1
		hotspot 0, openingLength, 0, unID, openingLength_04, 2 : unID=unID+1
	endif

	if CasementID = 5 then
		hotspot 0, 0, 0, unID, openingLength_05,	1+128 : unID=unID+1
		hotspot 0, -1, 0, unID, openingLength_05, 3 : unID=unID+1
		hotspot 0, openingLength, 0, unID, openingLength_05, 2 : unID=unID+1
	endif

	if CasementID = 6 then
		hotspot 0, 0, 0, unID, openingLength_06,	1+128 : unID=unID+1
		hotspot 0, -1, 0, unID, openingLength_06, 3 : unID=unID+1
		hotspot 0, openingLength, 0, unID, openingLength_06, 2 : unID=unID+1
	endif

	if CasementID = 7 then
		hotspot 0, 0, 0, unID, openingLength_07,	1+128 : unID=unID+1
		hotspot 0, -1, 0, unID, openingLength_07, 3 : unID=unID+1
		hotspot 0, openingLength, 0, unID, openingLength_07, 2 : unID=unID+1
	endif

	if CasementID = 8 then
		hotspot 0, 0, 0, unID, openingLength_08,	1+128 : unID=unID+1
		hotspot 0, -1, 0, unID, openingLength_08, 3 : unID=unID+1
		hotspot 0, openingLength, 0, unID, openingLength_08, 2 : unID=unID+1
	endif

	if CasementID = 9 then
		hotspot 0, 0, 0, unID, openingLength_09,	1+128 : unID=unID+1
		hotspot 0, -1, 0, unID, openingLength_09, 3 : unID=unID+1
		hotspot 0, openingLength, 0, unID, openingLength_09, 2 : unID=unID+1
	endif

	if CasementID = 10 then
		hotspot 0, 0, 0, unID, openingLength_10,	1+128 : unID=unID+1
		hotspot 0, -1, 0, unID, openingLength_10, 3 : unID=unID+1
		hotspot 0, openingLength, 0, unID, openingLength_10, 2 : unID=unID+1
	endif

	if CasementID = 11 then
		hotspot 0, 0, 0, unID, openingLength_11,	1+128 : unID=unID+1
		hotspot 0, -1, 0, unID, openingLength_11, 3 : unID=unID+1
		hotspot 0, openingLength, 0, unID, openingLength_11, 2 : unID=unID+1
	endif
return

"hotspots_DOUBLE_SLIDING_VER":
	if CasementID = 1 then
		hotspot 0, b, 0, unID, openingLength2_01, 1+128 : unID=unID+1
		hotspot 0, b+1, 0, unID, openingLength2_01, 3 : unID=unID+1
		hotspot 0, b-openingLength2, 0, unID, openingLength2_01, 2 : unID=unID+1
	endif

	if CasementID = 2 then
		hotspot 0, b, 0, unID, openingLength2_02, 1+128 : unID=unID+1
		hotspot 0, b+1, 0, unID, openingLength2_02, 3 : unID=unID+1
		hotspot 0, b-openingLength2, 0, unID, openingLength2_02, 2 : unID=unID+1
	endif

	if CasementID = 3 then
		hotspot 0, b, 0, unID, openingLength2_03, 1+128 : unID=unID+1
		hotspot 0, b+1, 0, unID, openingLength2_03, 3 : unID=unID+1
		hotspot 0, b-openingLength2, 0, unID, openingLength2_03, 2 : unID=unID+1
	endif

	if CasementID = 4 then
		hotspot 0, b, 0, unID, openingLength2_04, 1+128 : unID=unID+1
		hotspot 0, b+1, 0, unID, openingLength2_04, 3 : unID=unID+1
		hotspot 0, b-openingLength2, 0, unID, openingLength2_04, 2 : unID=unID+1
	endif

	if CasementID = 5 then
		hotspot 0, b, 0, unID, openingLength2_05, 1+128 : unID=unID+1
		hotspot 0, b+1, 0, unID, openingLength2_05, 3 : unID=unID+1
		hotspot 0, b-openingLength2, 0, unID, openingLength2_05, 2 : unID=unID+1
	endif

	if CasementID = 6 then
		hotspot 0, b, 0, unID, openingLength2_06, 1+128 : unID=unID+1
		hotspot 0, b+1, 0, unID, openingLength2_06, 3 : unID=unID+1
		hotspot 0, b-openingLength2, 0, unID, openingLength2_06, 2 : unID=unID+1
	endif

	if CasementID = 7 then
		hotspot 0, b, 0, unID, openingLength2_07, 1+128 : unID=unID+1
		hotspot 0, b+1, 0, unID, openingLength2_07, 3 : unID=unID+1
		hotspot 0, b-openingLength2, 0, unID, openingLength2_07, 2 : unID=unID+1
	endif

	if CasementID = 8 then
		hotspot 0, b, 0, unID, openingLength2_08, 1+128 : unID=unID+1
		hotspot 0, b+1, 0, unID, openingLength2_08, 3 : unID=unID+1
		hotspot 0, b-openingLength2, 0, unID, openingLength2_08, 2 : unID=unID+1
	endif

	if CasementID = 9 then
		hotspot 0, b, 0, unID, openingLength2_09, 1+128 : unID=unID+1
		hotspot 0, b+1, 0, unID, openingLength2_09, 3 : unID=unID+1
		hotspot 0, b-openingLength2, 0, unID, openingLength2_09, 2 : unID=unID+1
	endif

	if CasementID = 10 then
		hotspot 0, b, 0, unID, openingLength2_10, 1+128 : unID=unID+1
		hotspot 0, b+1, 0, unID, openingLength2_10, 3 : unID=unID+1
		hotspot 0, b-openingLength2, 0, unID, openingLength2_10, 2 : unID=unID+1
	endif

	if CasementID = 11 then
		hotspot 0, b, 0, unID, openingLength2_11, 1+128 : unID=unID+1
		hotspot 0, b+1, 0, unID, openingLength2_11, 3 : unID=unID+1
		hotspot 0, b-openingLength2, 0, unID, openingLength2_11, 2 : unID=unID+1
	endif
return

"hotspots_LEFT_SLIDING_HOR":
	if CasementID = 1 then
		hotspot a/2, b/2, 0, unID, openingLength_01, 1+128 : unID=unID+1
		hotspot 2*a, b/2, 0, unID, openingLength_01, 3 : unID=unID+1
		hotspot a/2-openingLength, b/2, 0, unID, openingLength_01, 2 : unID=unID+1
	endif

	if CasementID = 2 then
		hotspot a/2, b/2, 0, unID, openingLength_02, 1+128 : unID=unID+1
		hotspot 2*a, b/2, 0, unID, openingLength_02, 3 : unID=unID+1
		hotspot a/2-openingLength, b/2, 0, unID, openingLength_02, 2 : unID=unID+1
	endif

	if CasementID = 3 then
		hotspot a/2, b/2, 0, unID, openingLength_03, 1+128 : unID=unID+1
		hotspot 2*a, b/2, 0, unID, openingLength_03, 3 : unID=unID+1
		hotspot a/2-openingLength, b/2, 0, unID, openingLength_03, 2 : unID=unID+1
	endif

	if CasementID = 4 then
		hotspot a/2, b/2, 0, unID, openingLength_04, 1+128 : unID=unID+1
		hotspot 2*a, b/2, 0, unID, openingLength_04, 3 : unID=unID+1
		hotspot a/2-openingLength, b/2, 0, unID, openingLength_04, 2 : unID=unID+1
	endif

	if CasementID = 5 then
		hotspot a/2, b/2, 0, unID, openingLength_05, 1+128 : unID=unID+1
		hotspot 2*a, b/2, 0, unID, openingLength_05, 3 : unID=unID+1
		hotspot a/2-openingLength, b/2, 0, unID, openingLength_05, 2 : unID=unID+1
	endif

	if CasementID = 6 then
		hotspot a/2, b/2, 0, unID, openingLength_06, 1+128 : unID=unID+1
		hotspot 2*a, b/2, 0, unID, openingLength_06, 3 : unID=unID+1
		hotspot a/2-openingLength, b/2, 0, unID, openingLength_06, 2 : unID=unID+1
	endif

	if CasementID = 7 then
		hotspot a/2, b/2, 0, unID, openingLength_07, 1+128 : unID=unID+1
		hotspot 2*a, b/2, 0, unID, openingLength_07, 3 : unID=unID+1
		hotspot a/2-openingLength, b/2, 0, unID, openingLength_07, 2 : unID=unID+1
	endif

	if CasementID = 8 then
		hotspot a/2, b/2, 0, unID, openingLength_08, 1+128 : unID=unID+1
		hotspot 2*a, b/2, 0, unID, openingLength_08, 3 : unID=unID+1
		hotspot a/2-openingLength, b/2, 0, unID, openingLength_08, 2 : unID=unID+1
	endif

	if CasementID = 9 then
		hotspot a/2, b/2, 0, unID, openingLength_09, 1+128 : unID=unID+1
		hotspot 2*a, b/2, 0, unID, openingLength_09, 3 : unID=unID+1
		hotspot a/2-openingLength, b/2, 0, unID, openingLength_09, 2 : unID=unID+1
	endif

	if CasementID = 10 then
		hotspot a/2, b/2, 0, unID, openingLength_10, 1+128 : unID=unID+1
		hotspot 2*a, b/2, 0, unID, openingLength_10, 3 : unID=unID+1
		hotspot a/2-openingLength, b/2, 0, unID, openingLength_10, 2 : unID=unID+1
	endif

	if CasementID = 11 then
		hotspot a/2, b/2, 0, unID, openingLength_11, 1+128 : unID=unID+1
		hotspot 2*a, b/2, 0, unID, openingLength_11, 3 : unID=unID+1
		hotspot a/2-openingLength, b/2, 0, unID, openingLength_11, 2 : unID=unID+1
	endif
return

"hotspots_DOUBLE_SLIDING_HOR":
	if CasementID = 1 then
		hotspot -a/2, b/2, 0, unID, openingLength2_01, 1+128 : unID=unID+1
		hotspot -a, b/2, 0, unID, openingLength2_01, 3 : unID=unID+1
		hotspot -a/2+openingLength2, b/2, 0, unID, openingLength2_01, 2 : unID=unID+1
	endif

	if CasementID = 2 then
		hotspot -a/2, b/2, 0, unID, openingLength2_02, 1+128 : unID=unID+1
		hotspot -a, b/2, 0, unID, openingLength2_02, 3 : unID=unID+1
		hotspot -a/2+openingLength2, b/2, 0, unID, openingLength2_02, 2 : unID=unID+1
	endif

	if CasementID = 3 then
		hotspot -a/2, b/2, 0, unID, openingLength2_03, 1+128 : unID=unID+1
		hotspot -a, b/2, 0, unID, openingLength2_03, 3 : unID=unID+1
		hotspot -a/2+openingLength2, b/2, 0, unID, openingLength2_03, 2 : unID=unID+1
	endif

	if CasementID = 4 then
		hotspot -a/2, b/2, 0, unID, openingLength2_04, 1+128 : unID=unID+1
		hotspot -a, b/2, 0, unID, openingLength2_04, 3 : unID=unID+1
		hotspot -a/2+openingLength2, b/2, 0, unID, openingLength2_04, 2 : unID=unID+1
	endif

	if CasementID = 5 then
		hotspot -a/2, b/2, 0, unID, openingLength2_05, 1+128 : unID=unID+1
		hotspot -a, b/2, 0, unID, openingLength2_05, 3 : unID=unID+1
		hotspot -a/2+openingLength2, b/2, 0, unID, openingLength2_05, 2 : unID=unID+1
	endif

	if CasementID = 6 then
		hotspot -a/2, b/2, 0, unID, openingLength2_06, 1+128 : unID=unID+1
		hotspot -a, b/2, 0, unID, openingLength2_06, 3 : unID=unID+1
		hotspot -a/2+openingLength2, b/2, 0, unID, openingLength2_06, 2 : unID=unID+1
	endif

	if CasementID = 7 then
		hotspot -a/2, b/2, 0, unID, openingLength2_07, 1+128 : unID=unID+1
		hotspot -a, b/2, 0, unID, openingLength2_07, 3 : unID=unID+1
		hotspot -a/2+openingLength2, b/2, 0, unID, openingLength2_07, 2 : unID=unID+1
	endif

	if CasementID = 8 then
		hotspot -a/2, b/2, 0, unID, openingLength2_08, 1+128 : unID=unID+1
		hotspot -a, b/2, 0, unID, openingLength2_08, 3 : unID=unID+1
		hotspot -a/2+openingLength2, b/2, 0, unID, openingLength2_08, 2 : unID=unID+1
	endif

	if CasementID = 9 then
		hotspot -a/2, b/2, 0, unID, openingLength2_09, 1+128 : unID=unID+1
		hotspot -a, b/2, 0, unID, openingLength2_09, 3 : unID=unID+1
		hotspot -a/2+openingLength2, b/2, 0, unID, openingLength2_09, 2 : unID=unID+1
	endif

	if CasementID = 10 then
		hotspot -a/2, b/2, 0, unID, openingLength2_10, 1+128 : unID=unID+1
		hotspot -a, b/2, 0, unID, openingLength2_10, 3 : unID=unID+1
		hotspot -a/2+openingLength2, b/2, 0, unID, openingLength2_10, 2 : unID=unID+1
	endif

	if CasementID = 11 then
		hotspot -a/2, b/2, 0, unID, openingLength2_11, 1+128 : unID=unID+1
		hotspot -a, b/2, 0, unID, openingLength2_11, 3 : unID=unID+1
		hotspot -a/2+openingLength2, b/2, 0, unID, openingLength2_11, 2 : unID=unID+1
	endif
return


! =============================================================================
"Louvers":
! =============================================================================
	louvresh = _vent_panel_height
	louvresn = int(louvresh / gs_louver_width)
	louvresw = louvresh / louvresn

	pen gs_sash_pen
	material gs_ventSashLouver_mat
	!sect_fill gs_fillSash, gs_penSash_bg, gs_penSash_fg, gs_sash_pen_cont

	if lod3D = 5 then	! CHI model
		block _vent_panel_width, _vent_panel_height, gs_frame_thk

		addy louvresw/2
		for i=1 to louvresn
			lin_ 0, 0, 0, _vent_panel_width, 0, 0
			lin_ 0, 0, gs_frame_thk, _vent_panel_width, 0, gs_frame_thk
			addy louvresw
		next i
		del louvresn + 1
	else
		if WIDO_REVEAL_SIDE exor (not(isWindow) & gs_opening_dir_sl_m = 2) then
			mulz -1
		endif

		roty 90
		addy louvresw/2
		for i=1 to louvresn
			rotz gs_louver_opening_angle
			if iLouverStyle = LOUVER_STRAIGHT then
				prism_ 5, _vent_panel_width,
					-louvresw/2,	-gs_louver_thk/2,	15,
					 louvresw/2,	-gs_louver_thk/2,	15,
					 louvresw/2,	 gs_louver_thk/2,	15,
					-louvresw/2,	 gs_louver_thk/2,	15,
					-louvresw/2,	-gs_louver_thk/2,	-1
			endif
			if iLouverStyle = LOUVER_ZPROFILE then
				prism_ 9, _vent_panel_width,
					-louvresw/2,				 gs_louver_thk/2,	15,
					-louvresw/2,				-2.5*gs_louver_thk,	15,
					-louvresw/2+gs_louver_thk,	-2.5*gs_louver_thk,	15,
					-louvresw/2+gs_louver_thk,	-gs_louver_thk/2,	15,
					 louvresw/2,				-gs_louver_thk/2,	15,
					 louvresw/2,				 2.5*gs_louver_thk,	15,
					 louvresw/2-gs_louver_thk,	 2.5*gs_louver_thk,	15,
					 louvresw/2-gs_louver_thk,	 gs_louver_thk/2,	15,
					-louvresw/2,				 gs_louver_thk/2,	-1
			endif
			del 1
			addy louvresw
		next i
		del louvresn + 2

		unID = LouverAngleUnID
		hotspot _vent_panel_width/2,	_vent_panel_height-louvresw/2,	0,			unID, gs_louver_opening_angle, 6:		unID=unID+1
		hotspot 0,						_vent_panel_height-louvresw/2,	0,			unID, gs_louver_opening_angle, 7:		unID=unID+1
		hotspot _vent_panel_width/2,	_vent_panel_height-louvresw/2,	louvresw/2,	unID, gs_louver_opening_angle, 4+128:	unID=unID+1
		hotspot _vent_panel_width/2,	_vent_panel_height-louvresw/2,	louvresw/2,	unID, gs_louver_opening_angle, 5:		unID=unID+1

		if WIDO_REVEAL_SIDE exor (not(isWindow) & gs_opening_dir_sl_m = 2) then
			del 1
		endif
	endif
return


! =============================================================================
"Ledge":
! =============================================================================
	pen gs_sash_pen
	material ledge_var_mater
	!sect_fill gs_fillSash, gs_penSash_bg, gs_penSash_fg, gs_sash_pen_cont

	for ijk = 1 to ledge_in_out_cikl
		material ledge_var_mater2
		sprism_{2} ledge_var_mater2,ledge_var_mater2,ledge_var_mater2,
			4,
			0,0, 0,1, 0, 0,
			0,0, 0,1, ledge_part_thk, 0,

			0,				0,					ledge_in_out_mask,	ledge_var_mater2,
			_ledgeWidth,	0,					ledge_in_out_mask,	ledge_var_mater2,
			_ledgeWidth,	sashLedgeHeight,	ledge_in_out_mask,	ledge_var_mater2,
			0,				sashLedgeHeight,	ledge_in_out_mask,	ledge_var_mater2

		addz ledge_part_thk

		ledge_part_thk = sashLedgeThickness - ledge_out_thk

		tempMat = ledge_var_mater
		ledge_var_mater = ledge_var_mater2
		ledge_var_mater2 = tempMat

		ledge_in_out_mask = 14
	next ijk

	del ledge_in_out_cikl
return

! =============================================================================
"customHVGridHorGrids":
! =============================================================================
	_startGridIdx	= 1 + _actGridIdxOffsetVgn
	_endGridIdx		= _actVergridNum + 1 + _actGridIdxOffsetVgn
	_sashWidth		= gs_sash_width - fix_sh_grmod

	gosub "getVerticalGridOrder"

	for kk = 1 + _actGridIdxOffsetVgn to _actVergridNum + _actGridIdxOffsetVgn
		_startGridIdx	= _startGridIdx + ((_actHorgrid[i][2] - _actVergrid[kk][1] - _sashWidth) > eps)
	next kk
	for kk = _actVergridNum + _actGridIdxOffsetVgn to 1 + _actGridIdxOffsetVgn step -1 
		_endGridIdx		= _endGridIdx - ((_actHorgrid[i][3] - _actVergrid[kk][1] - _sashWidth) < eps)
	next kk

	if _startGridIdx > _endGridIdx then
		_bReverseVerGrid	= 1
		__startGridIdx	= _endGridIdx
		__endGridIdx	= _startGridIdx
	else
		_bReverseVerGrid	= 0
		__startGridIdx	= _startGridIdx
		__endGridIdx	= _endGridIdx
	endif

	for jj = __startGridIdx to __endGridIdx
		if jj < __endGridIdx then
			_verGridIdxBefore		= _verGridOrder[jj - _actGridIdxOffsetVgn]

			if _actVergrid[_verGridIdxBefore][2] > _actVergrid[_verGridIdxBefore][3] then
				_actVerGridTopPointIdx		= 2
				_actVerGridBottomPointIdx	= 3
			else
				_actVerGridTopPointIdx		= 3
				_actVerGridBottomPointIdx	= 2
			endif

			_bGridCrossingOnStart	= (_actVergrid[_verGridIdxBefore][_actVerGridBottomPointIdx] - _actHorgrid[i][1] - _sashWidth + gw) < eps &\
									  (_actVergrid[_verGridIdxBefore][_actVerGridTopPointIdx] - _actHorgrid[i][1] - _sashWidth) > eps
		else
			_bGridCrossingOnStart	= 0
		endif

		if jj > __startGridIdx then
			_verGridIdxAfter	= _verGridOrder[jj - 1 - _actGridIdxOffsetVgn]

			if _actVergrid[_verGridIdxAfter][2] > _actVergrid[_verGridIdxAfter][3] then
				_actVerGridTopPointIdx		= 2
				_actVerGridBottomPointIdx	= 3
			else
				_actVerGridTopPointIdx		= 3
				_actVerGridBottomPointIdx	= 2
			endif

			_bGridCrossingOnEnd	= (_actVergrid[_verGridIdxAfter][_actVerGridBottomPointIdx] - _actHorgrid[i][1] - _sashWidth + gw) < eps &\
								  (_actVergrid[_verGridIdxAfter][_actVerGridTopPointIdx] - _actHorgrid[i][1] - _sashWidth) > eps
		else
			_bGridCrossingOnEnd	= 0
		endif

		if jj = __endGridIdx then
			_gridEndPos		= _actHorgrid[i][3] * not(_bReverseVerGrid) + _actHorgrid[i][2] * (_bReverseVerGrid)
		else
			_gridEndPos		= _actVergrid[_verGridIdxBefore][1] + _sashWidth - gw / 2 - gw / 2 * _bGridCrossingOnStart
		endif
		if jj = __startGridIdx then
			_gridStartPos	= _actHorgrid[i][2] * not(_bReverseVerGrid) + _actHorgrid[i][3] * (_bReverseVerGrid)
		else
			_gridStartPos	= _actVergrid[_verGridIdxAfter][1] + _sashWidth - gw / 2 + gw / 2 * _bGridCrossingOnEnd
		endif

		if __startGridIdx = __endGridIdx then
			_mask1	= 15
			_mask2	= 15
			_mask3	= 15
			_mask4	= 15
		else
			if jj = __startGridIdx then
				_mask1	= 15
				_mask2	= 15 - 7 * not(_bGridCrossingOnStart)
				_mask3	= 15 - 2 * not(_bGridCrossingOnStart)
				_mask4	= 15
			else
				if jj = __endGridIdx then
					_mask1	= 15 - 2 * not(_bGridCrossingOnEnd)
					_mask2	= 15
					_mask3	= 15
					_mask4	= 15 - 7 * not(_bGridCrossingOnEnd)
				else
					_mask1	= 15 - 2 * not(_bGridCrossingOnEnd)
					_mask2	= 15 - 7 * not(_bGridCrossingOnStart)
					_mask3	= 15 - 2 * not(_bGridCrossingOnStart)
					_mask4	= 15 - 7 * not(_bGridCrossingOnEnd)
				endif
			endif
		endif

		sprism_ matGrillTop,matGrillBottom,matGrillSide,
			4,
			0,0, 0,1, currentGrillThickness, 0,
			_gridStartPos,	-gw / 2,	_mask1,
			_gridEndPos,	-gw / 2,	_mask2,
			_gridEndPos,	gw / 2,		_mask3,
			_gridStartPos,	gw / 2,		_mask4
	next jj

return


! =============================================================================
"getVerticalGridOrder":
! =============================================================================
	for ss = 1 to _actVergridNum
		_verGridOrder[ss] = ss + _actGridIdxOffsetVgn
		for ww = ss - 1 to 1 step -1
			if _actVergrid[ss + _actGridIdxOffsetVgn][1] < _actVergrid[_verGridOrder[ww]][1] then
				_verGridOrder[ww + 1] = _verGridOrder[ww]
				_verGridOrder[ww] = ss + _actGridIdxOffsetVgn
			endif
		next ww
	next ss

return

! =============================================================================
"calculateMaxGridNums":
! =============================================================================
	_maxVerGridNum	= int((__actGlazingWidth - __actSashFrameWidthLeft - __actSashFrameWidthRight + 2 * fix_sh_grmod) / __actGridWidth) - 1
	_maxHorGridNum	= int((__actGlazingHeight - __actSashFrameWidthTop - __actSashFrameWidthBottom + 2 * fix_sh_grmod) / __actGridWidth) - 1
	vgn = min(_maxVerGridNum, vgn)
	hgn = min(_maxHorGridNum, hgn)

return

! =============================================================================
"gridhotspot":
! =============================================================================
	_maxVerGridNum	= int((__actGlazingWidth - __actSashFrameWidthLeft - __actSashFrameWidthRight + 2 * fix_sh_grmod) / __actGridWidth) - 1
	_maxHorGridNum	= int((__actGlazingHeight - __actSashFrameWidthTop - __actSashFrameWidthBottom + 2 * fix_sh_grmod) / __actGridWidth) - 1
	vgn = min(_maxVerGridNum, vgn)
	hgn = min(_maxHorGridNum, hgn)

return



