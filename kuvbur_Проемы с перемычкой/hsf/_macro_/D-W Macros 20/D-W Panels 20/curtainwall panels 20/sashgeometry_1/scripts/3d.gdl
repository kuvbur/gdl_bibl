
unID=sh_unID

if gs_opening_dir_m = 1 then
	eloj_ref = -1
else
	eloj_ref = 1
endif

! ------------------------------------------------------------------------------
! --- Open the Window with Hotspots ---
! ------------------------------------------------------------------------------

if gs_full_edit then

! --- Side-hung ----------------------------------------------------------------

	if gs_optype_m = OPTYPE_SIDEHUNG then
		addx -a / 2
		addy  b / 2
		rotx -90
		addy -gs_sash_thk / 2

		hotspot a,											-gs_sash_thk/2,								0, unID, opAngle_horizontal, 4+128 : unID=unID+1
		hotspot 0,											0,											-1*eloj_ref, 			 unID, opAngle_horizontal, 7 : unID=unID+1
		hotspot a*sin(90+opAngle_horizontal)+gs_sash_thk/2*cos(90+opAngle_horizontal),a*cos(90+opAngle_horizontal)-gs_sash_thk/2*sin(90+opAngle_horizontal),0, unID, opAngle_horizontal, 5 : unID=unID+1
		hotspot 0, 											0, 											0, unID, opAngle_horizontal, 6 : unID=unID+1

		del 3

		if abs (opAngle_horizontal) > eps then
			addz gs_rebate_depth
			roty -opAngle_horizontal
			addz -gs_rebate_depth
		endif

		addx a/2
	endif

! --- Top-hung -----------------------------------------------------------------

	if gs_optype_m = OPTYPE_TOPHUNG then
		addy b
		rotz 	-90
		rotx	-90
		addy -gs_sash_thk/2

		hotspot b,											-gs_sash_thk/2,								0, unID, opAngle_vertical, 4+128 : unID=unID+1
		hotspot 0,											0,											-1*eloj_ref, unID, opAngle_vertical, 7 : unID=unID+1
		hotspot b*sin(90+opAngle_vertical)+gs_sash_thk/2*cos(90+opAngle_vertical),b*cos(90+opAngle_vertical)-gs_sash_thk/2*sin(90+opAngle_vertical),0, unID, opAngle_vertical, 5 : unID=unID+1
		hotspot 0, 											0, 											0, unID, opAngle_vertical, 6 : unID=unID+1

		del 3

		if abs (opAngle_vertical) > eps then
			addz gs_rebate_depth
			rotx -opAngle_vertical
			addz -gs_rebate_depth
		endif

		addy -b
	endif

! --- Side-hung Mirrored -------------------------------------------------------

	if gs_optype_m = OPTYPE_SIDEHUNGMIRRORED then	!side-hung right
		mulx -1
		addx	-a/2
		addy 	b/2
		rotx -90
		addy -gs_sash_thk/2

		hotspot a,											-gs_sash_thk/2,								0, unID, opAngle_horizontal, 4+128 : unID=unID+1
		hotspot 0,											0,											1*eloj_ref, 			 unID, opAngle_horizontal, 7 : unID=unID+1
		hotspot a*sin(90+opAngle_horizontal)+gs_sash_thk/2*cos(90+opAngle_horizontal),a*cos(90+opAngle_horizontal)-gs_sash_thk/2*sin(90+opAngle_horizontal),0, unID, opAngle_horizontal, 5 : unID=unID+1
		hotspot 0, 											0, 											0, unID, opAngle_horizontal, 6 : unID=unID+1

		del 3

		if abs (opAngle_horizontal) > eps then
			addz gs_rebate_depth
			roty -opAngle_horizontal
			addz -gs_rebate_depth
		endif

		addx a/2
		mulx -1
	endif

! --- Bottom-hung --------------------------------------------------------------

	if gs_optype_m = OPTYPE_BOTTOMHUNG then
		muly	-1
		rotz 	-90
		rotx	-90
		addy -gs_sash_thk/2

		hotspot b,											-gs_sash_thk/2,								0, unID, opAngle_vertical, 4+128 : unID=unID+1
		hotspot 0,											0,											1*eloj_ref, 			 unID, opAngle_vertical, 7 : unID=unID+1
		hotspot b*sin(90+opAngle_vertical)+gs_sash_thk/2*cos(90+opAngle_vertical),b*cos(90+opAngle_vertical)-gs_sash_thk/2*sin(90+opAngle_vertical),0, unID, opAngle_vertical, 5 : unID=unID+1
		hotspot 0, 											0, 											0, unID, opAngle_vertical, 6 : unID=unID+1

		del 3

		if abs (opAngle_vertical) > eps then
			addz gs_rebate_depth
			rotx -opAngle_vertical
			addz -gs_rebate_depth
		endif

		muly	-1
	endif

! --- Reversible ---------------------------------------------------------------

	if gs_optype_m = OPTYPE_REVERSIBLE then
		addy b/2
		rotx	-90
		addy	gs_sash_thk/2

		hotspot gs_sash_thk*sin(135)+a/2*sin(90), gs_sash_thk*cos(135)+a/2*cos(90), (0), unID, opAngle_horizontal, 4+128 : unID=unID+1
		hotspot gs_sash_thk*sin(90)+a/2*sin(0), gs_sash_thk*cos(90)+a/2*cos(0), 0, unID, opAngle_horizontal, 7 : unID=unID+1
		hotspot gs_sash_thk*sin(180+opAngle_horizontal)+a/2*sin(90+opAngle_horizontal), gs_sash_thk*cos(180+opAngle_horizontal)+a/2*cos(90+opAngle_horizontal), (0), unID, opAngle_horizontal, 5 : unID=unID+1
		hotspot 0, -gs_sash_thk, (0), unID, opAngle_horizontal, 6 : unID=unID+1

		del 2

		if abs (opAngle_horizontal) > eps then
			addz gs_rebate_depth
			roty -opAngle_horizontal
			addz -gs_rebate_depth
		endif

		addy -b/2
	endif

! --- Sliding-left -------------------------------------------------------------

	if gs_optype_m = OPTYPE_SLIDINGLEFT then
		hotspot a/2, b/2, 0, unID, opWidth3d, 1+128 : unID=unID+1
		hotspot 2*a, b/2, 0, unID, opWidth3d, 3 : unID=unID+1
		hotspot a/2-opWidth3d, b/2, 0, unID, opWidth3d, 2 : unID=unID+1

		if opWidth3d > owlen_a then opWidth3d = owlen_a
		if opWidth3d < 0 then opWidth3d = 0

		addx -opWidth3d
	endif

! --- Sliding-right ------------------------------------------------------------

	if gs_optype_m = OPTYPE_SLIDINGRIGHT then
		hotspot -a/2, b/2, 0, unID, opWidth3d, 1+128 : unID=unID+1
		hotspot -a, b/2, 0, unID, opWidth3d, 3 : unID=unID+1
		hotspot -a/2+opWidth3d, b/2, 0, unID, opWidth3d, 2 : unID=unID+1

		if opWidth3d > owlen_a then opWidth3d = owlen_a
		if opWidth3d < 0 then opWidth3d = 0

		addx opWidth3d
	endif

! --- Sliding-up ---------------------------------------------------------------

	if gs_optype_m = OPTYPE_SLIDINGUP then
		hotspot 0, 0, 0, unID, opWidth3d,	1+128 : unID=unID+1
		hotspot 0, -1, 0, unID, opWidth3d, 3 : unID=unID+1
		hotspot 0, 0+opWidth3d, 0, unID, opWidth3d, 2 : unID=unID+1

		if opWidth3d > owlen_a then opWidth3d = owlen_a
		if opWidth3d < 0 then opWidth3d = 0

		addy opWidth3d
	endif

! --- Sliding-down -------------------------------------------------------------

	if gs_optype_m = OPTYPE_SLIDINGDOWN then
		hotspot 0, b, 0, unID, opWidth3d, 1+128 : unID=unID+1
		hotspot 0, b+1, 0, unID, opWidth3d, 3 : unID=unID+1
		hotspot 0, b-opWidth3d, 0, unID, opWidth3d, 2 : unID=unID+1

		if opWidth3d>owlen_a then opWidth3d=owlen_a
		if opWidth3d<0 then opWidth3d=0

		addy -opWidth3d
	endif


! --- Tilt-turn ----------------------------------------------------------------

	if gs_optype_m = OPTYPE_TILTTURN then
		addx	-a/2
		addy 	b/2
		rotx -90
		addy	-gs_sash_thk/2

		hotspot a,											-gs_sash_thk/2,								0, unID, opAngle_horizontal, 4+128 : unID=unID+1
		hotspot 0,											0,											-1*eloj_ref, 			 unID, opAngle_horizontal, 7 : unID=unID+1
		hotspot a*sin(90+opAngle_horizontal)+gs_sash_thk/2*cos(90+opAngle_horizontal),a*cos(90+opAngle_horizontal)-gs_sash_thk/2*sin(90+opAngle_horizontal),0, unID, opAngle_horizontal, 5 : unID=unID+1
		hotspot 0, 											0, 											0, unID, opAngle_horizontal, 6 : unID=unID+1

		del 4

		muly	-1
		rotz 	-90
		rotx	-90
		addy	-gs_sash_thk/2

		hotspot b,											-gs_sash_thk/2,								0, unID, opAngle_vertical, 4+128 : unID=unID+1
		hotspot 0,											0,											1*eloj_ref, 			 unID, opAngle_vertical, 7 : unID=unID+1
		hotspot b*sin(90+opAngle_vertical)+gs_sash_thk/2*cos(90+opAngle_vertical),b*cos(90+opAngle_vertical)-gs_sash_thk/2*sin(90+opAngle_vertical),0, unID, opAngle_vertical, 5 : unID=unID+1
		hotspot 0, 											0, 											0, unID, opAngle_vertical, 6 : unID=unID+1

		del 4

		if abs(opAngle_vertical) > eps then
			muly	-1

			if abs (opAngle_vertical) > eps then
				addz gs_rebate_depth
				rotx -opAngle_vertical
				addz -gs_rebate_depth
			endif

			muly	-1
		endif


		if abs (opAngle_horizontal) > eps then
			addx	-a/2

			if abs (opAngle_horizontal) > eps then
				addz gs_rebate_depth
				roty -opAngle_horizontal
				addz -gs_sash_thk/2
			endif
			addx a/2
		endif
	endif

! --- Tilt-turn Mirrored -------------------------------------------------------

	if gs_optype_m = OPTYPE_TILTTURNMIRRORED then
		mulx -1
		addx	-a/2
		addy 	b/2
		rotx -90
		addy	-gs_sash_thk/2

		hotspot a,											-gs_sash_thk/2,								0, unID, opAngle_horizontal, 4+128 : unID=unID+1
		hotspot 0,											0,											1*eloj_ref, 			 unID, opAngle_horizontal, 7 : unID=unID+1
		hotspot a*sin(90+opAngle_horizontal)+gs_sash_thk/2*cos(90+opAngle_horizontal),a*cos(90+opAngle_horizontal)-gs_sash_thk/2*sin(90+opAngle_horizontal),0, unID, opAngle_horizontal, 5 : unID=unID+1
		hotspot 0, 											0, 											0, unID, opAngle_horizontal, 6 : unID=unID+1

		del 5

		muly	-1
		rotz 	-90
		rotx	-90
		addy	-gs_sash_thk/2

		hotspot b,											-gs_sash_thk/2,								0, unID, opAngle_vertical, 4+128 : unID=unID+1
		hotspot 0,											0,											1*eloj_ref, 			 unID, opAngle_vertical, 7 : unID=unID+1
		hotspot b*sin(90+opAngle_vertical)+gs_sash_thk/2*cos(90+opAngle_vertical),b*cos(90+opAngle_vertical)-gs_sash_thk/2*sin(90+opAngle_vertical),0, unID, opAngle_vertical, 5 : unID=unID+1
		hotspot 0, 											0, 											0, unID, opAngle_vertical, 6 : unID=unID+1

		del 4

		if abs (opAngle_vertical) > eps then
			muly	-1

			if abs (opAngle_vertical) > eps then
				addz gs_rebate_depth
				rotx -opAngle_vertical
				addz -gs_rebate_depth
			endif

			muly	-1
		endif

		if abs (opAngle_horizontal) > eps then
			mulx -1
			addx	-a/2

			if abs (opAngle_horizontal) > eps then
				addz gs_rebate_depth
				roty -opAngle_horizontal
				addz -gs_rebate_depth
			endif

			addx a/2
			mulx -1
		endif
	endif
endif


! ------------------------------------------------------------------------------
! --- Grids ---
! ------------------------------------------------------------------------------
if gs_frame_mat = gs_frame_mat2 then		! One body, in case of similar materials
	in_out_cikl = 1
else
	in_out_cikl = 2
endif

if gs_grill_mat = gs_grill_mat2 then	! One body, in case of similar materials
	in_out_cikl_gr = 1
else
	in_out_cikl_gr = 2
endif

if grill_m = 2 then
	for ijk= 1 to in_out_cikl_gr
		for i = 1 to nVertPanel_1
			if vergrid_1[i][1]<grillWidth_vert_1 then  vergrid_1[i][1]=grillWidth_vert_1
			if vergrid_1[i][1]>a-2*gs_sash_width+2*fix_sh_grmod then  vergrid_1[i][1]=a-2*gs_sash_width+2*fix_sh_grmod

			if vergrid_1[i][3]>b-gs_sash_width+fix_sh_grmod then  vergrid_1[i][3]=b-gs_sash_width+fix_sh_grmod
			if vergrid_1[i][2]<=gs_sash_width-fix_sh_grmod then  vergrid_1[i][2]=gs_sash_width-fix_sh_grmod

			if vergrid_1[i][2]>b-gs_sash_width+fix_sh_grmod then  vergrid_1[i][2]=b-gs_sash_widt+fix_sh_grmod
			if vergrid_1[i][3]<=gs_sash_width-fix_sh_grmod then  vergrid_1[i][3]=gs_sash_width-fix_sh_grmod
		next i

		for i = 1 to nHorPanel_1
			if horgrid_1[i][1]<grillWidth_hor_1 then horgrid_1[i][1]=grillWidth_hor_1
			if horgrid_1[i][1]>b-2*gs_sash_width+2*fix_sh_grmod then  horgrid_1[i][1]=b-2*gs_sash_width+2*fix_sh_grmod

			if horgrid_1[i][3]>a-gs_sash_width+fix_sh_grmod then  horgrid_1[i][3]=a-gs_sash_width+fix_sh_grmod
			if horgrid_1[i][2]<=gs_sash_width-fix_sh_grmod then  horgrid_1[i][2]=gs_sash_width-fix_sh_grmod

			if horgrid_1[i][2]>a-gs_sash_width+fix_sh_grmod then  horgrid_1[i][2]=a-gs_sash_width+fix_sh_grmod
			if horgrid_1[i][3]<=gs_sash_width-fix_sh_grmod then  horgrid_1[i][3]=gs_sash_width-fix_sh_grmod
		next i

		if nVertPanel_1>=1 then
			if gs_full_edit then
				add  (-a/2+gs_sash_width-grillWidth_vert_1/2-fix_sh_grmod), 0, gz-fix_sh_grshift
				for i=1 to nVertPanel_1
					lenghtv=vergrid_1[i][2]+(vergrid_1[i][3]-vergrid_1[i][2])/2

					hotspot 0, lenghtv, 0, unID, vergrid_1[i][1], 1+128 : unID=unID+1
					hotspot -1, lenghtv, 0, unID, vergrid_1[i][1], 3 : unID=unID+1
					hotspot vergrid_1[i][1], lenghtv, 0, unID, vergrid_1[i][1], 2 : unID=unID+1

					hotspot vergrid_1[i][1], 0, 0, unID, vergrid_1[i][2], 1+128 : unID=unID+1
					hotspot vergrid_1[i][1], -1, 0, unID, vergrid_1[i][2], 3 : unID=unID+1
					hotspot vergrid_1[i][1], vergrid_1[i][2]+grillWidth_vert_1/2, 0, unID, vergrid_1[i][2], 2 : unID=unID+1

					hotspot vergrid_1[i][1], 0, 0, unID, vergrid_1[i][3], 1+128 : unID=unID+1
					hotspot vergrid_1[i][1], -1, 0, unID, vergrid_1[i][3], 3 : unID=unID+1
					hotspot vergrid_1[i][1], vergrid_1[i][3]-grillWidth_vert_1/2, 0, unID, vergrid_1[i][3], 2 : unID=unID+1

				next i
				del 1
			endif
		endif

! --- Horizontal grids ---

		if nHorPanel_1 > 0 then
			if gs_full_edit then
				add -a/2 , -grillWidth_hor_1/2+gs_sash_width-fix_sh_grmod, gz-fix_sh_grshift
				for i=1 to nHorPanel_1
					lenghth=horgrid_1[i][2]+(horgrid_1[i][3]-horgrid_1[i][2])/2

					hotspot lenghth, 0, 0, unID, horgrid_1[i][1],	1+128 : unID=unID+1
					hotspot lenghth, -1, 0, unID, horgrid_1[i][1], 3 : unID=unID+1
					hotspot lenghth, horgrid_1[i][1], 0, unID, horgrid_1[i][1],	2 : unID=unID+1

					hotspot 0, horgrid_1[i][1], 0, unID, horgrid_1[i][2], 1+128 : unID=unID+1
					hotspot -1,	horgrid_1[i][1], 0, unID, horgrid_1[i][2], 3 : unID=unID+1
					hotspot horgrid_1[i][2]+grillWidth_hor_1/2,	horgrid_1[i][1], 0, unID, horgrid_1[i][2], 2 : unID=unID+1

					hotspot 0, horgrid_1[i][1], 0, unID, horgrid_1[i][3], 1+128 : unID=unID+1
					hotspot -1,	horgrid_1[i][1], 0, unID, horgrid_1[i][3], 3 : unID=unID+1
					hotspot horgrid_1[i][3]-grillWidth_hor_1/2,	horgrid_1[i][1], 0, unID, horgrid_1[i][3], 2 : unID=unID+1
				next i
				del 1
			 endif
		endif

		addz part_thk_grill

		part_thk_grill = gth - out_thk_grill
	next ijk
	del in_out_cikl_gr
endif


! ------------------------------------------------------------------------------
! --- Calling sash ---
! ------------------------------------------------------------------------------

call "sash" parameters 			a 						= a,
								b 						= b,

						! --- Options ------------------------------------------
								gs_opening_dir_m		= gs_opening_dir_m,
								gs_optype_m				= gs_optype_m,
								opWidth3d				= opWidth3d,
								gs_SashText_typ_num		= gs_SashText_typ_num,

						! --- Frame --------------------------------------------
								gs_frame_width			= gs_frame_width,
								gs_frame_thk			= gs_frame_thk,
								gs_rebate_width 		= gs_rebate_width,

						! --- Sash ---------------------------------------------
								grill_m					= grill_m,
								gs_sash_thk				= gs_sash_thk,
								gs_sash_width			= gs_sash_width,
								gs_glass_thk			= gs_glass_thk,
								nHorPanel				= nHorPanel_1,
								nVertPanel				= nVertPanel_1,
								grillPosition_m			= grillPosition_m,
								gth						= gth,
								grillWidth_hor			= grillWidth_hor_1,
								grillWidth_vert			= grillWidth_vert_1,
								horgrid					= horgrid_1,
								vergrid					= vergrid_1,
								glassFromLeft			= glassFromLeft,
								glassFromRight			= glassFromRight,
								glassFromTop			= glassFromTop,
								glassFromBottom			= glassFromBottom,
								gs_cust_panel			= gs_cust_panel,
								gs_handle_typ_m			= gs_handle_typ_m,
								gs_han_pos				= gs_han_pos,
								gs_han_height			= gs_han_height,
								gs_cust_handle			= gs_cust_handle,
								flipHandle				= flipHandle,

						! --- Window Handle ------------------------------------
								gs_window_handle		= gs_window_handle,
								gs_handle_type_win		= gs_handle_type_win,
								gs_handle_type_win_m	= gs_handle_type_win_m,
								gs_cust_handle_win		= gs_cust_handle_win,
								gs_handle_win_pos		= gs_handle_win_pos,
								bEnableWindowHandle		= bEnableWindowHandle,

						! --- 2D Rep -------------------------------------------
								gs_frame_pen_cont		= gs_frame_pen_cont,
								gs_fillSash				= gs_fillSash,
								gs_penSash_fg			= gs_penSash_fg,
								gs_penSash_bg			= gs_penSash_bg,

						! --- 3D Rep -------------------------------------------
								gs_detlevel_3d_m		= gs_detlevel_3d_m,
								gs_shadow				= gs_shadow,
								gs_resol				= gs_resol,
								gs_frame_pen			= gs_frame_pen,
								gs_glass_pen			= gs_glass_pen,

						! --- Materials ----------------------------------------
								gs_frame_mat			= gs_frame_mat,
								gs_frame_mat2			= gs_frame_mat2,
								gs_glass_mat			= gs_glass_mat,
								gs_grill_mat			= gs_grill_mat,
								gs_grill_mat2			= gs_grill_mat2,
								matHandle				= matHandle,
								matHandleAcc			= matHandleAcc,
								gs_handle_win_mat		= gs_handle_win_mat,

						! --- Others -------------------------------------------
								isWindow				= isWindow,
						! --- MVO Override -------------------------------------------
								or_bOplines3d			= or_bOplines3d,
								or_iOpLineType3dIn		= or_iOpLineType3dIn,
								or_iOpLineType3dOut		= or_iOpLineType3dOut,
								or_iOplineStyle			= or_iOplineStyle,
								or_opLinePen			= or_opLinePen,
								bOverride_MVO_3D		= bOverride_MVO_3D




end
