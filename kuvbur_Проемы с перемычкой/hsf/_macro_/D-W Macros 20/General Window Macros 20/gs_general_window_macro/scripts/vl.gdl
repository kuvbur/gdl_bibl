
! Contact person: <SzL, NJ>

! =============================================================================
! Calculate minUnitWidth/minUnitHeight
! =============================================================================

minUnitWidthMiddle = gs_frame_width + gs_frame_width_left + 2 * gs_sash_width +\
	gs_bSLight * (gs_Mullion_w + 2 * gs_sash_width) +\
	gs_bLeftSLight * (gs_Mullion_w_left + 2 * gs_sash_width) + 0.01

if gs_UTrans then
	minUnitWidthUTransom = gs_frame_width + gs_frame_width_left + 2 * gs_sash_width +\
		gs_bSLight * gs_Mullion_Top * (gs_Mullion_w + 2 * gs_sash_width) +\
		gs_bLeftSLight * gs_LeftMullion_Top * (gs_Mullion_w_left + 2 * gs_sash_width) + 0.01
else
	minUnitWidthUTransom = 0
endif

if gs_LTrans then
	minUnitWidthLTransom = gs_frame_width + gs_frame_width_left + 2 * gs_sash_width +\
		gs_bSLight * gs_Mullion_Bott * (gs_Mullion_w + 2 * gs_sash_width) +\
		gs_bLeftSLight * gs_LeftMullion_Bott * (gs_Mullion_w_left + 2 * gs_sash_width) + 0.01
else
	minUnitWidthLTransom = 0
endif

if	iWindowType = WIN_MultisashHorizontal	|\
	iWindowType = WIN_MultisashVertical		then

	dim MullionWidthArray[9]
		MullionWidthArray[1] = MullionWidth_01
		MullionWidthArray[2] = MullionWidth_02
		MullionWidthArray[3] = MullionWidth_03
		MullionWidthArray[4] = MullionWidth_04
		MullionWidthArray[5] = MullionWidth_05
		MullionWidthArray[6] = MullionWidth_06
		MullionWidthArray[7] = MullionWidth_07
		MullionWidthArray[8] = MullionWidth_08
		MullionWidthArray[9] = MullionWidth_09

	dim TransomWidthArray[9]
		TransomWidthArray[1] = TransomWidth_01
		TransomWidthArray[2] = TransomWidth_02
		TransomWidthArray[3] = TransomWidth_03
		TransomWidthArray[4] = TransomWidth_04
		TransomWidthArray[5] = TransomWidth_05
		TransomWidthArray[6] = TransomWidth_06
		TransomWidthArray[7] = TransomWidth_07
		TransomWidthArray[8] = TransomWidth_08
		TransomWidthArray[9] = TransomWidth_09

	dim	NoRebateSashes[]
		NoRebateSashes[ 1]	= SASH_HOR_PIVOT
		NoRebateSashes[ 2]	= SASH_VER_PIVOT
		NoRebateSashes[ 3]	= SASH_TILT_SLIDE
		NoRebateSashes[ 4]	= SASH_LEFT_SLIDING
		NoRebateSashes[ 5]	= SASH_RIGHT_SLIDING
		NoRebateSashes[ 6]	= SASH_UP_SLIDING
		NoRebateSashes[ 7]	= SASH_DOWN_SLIDING
		NoRebateSashes[ 8]	= SASH_VER_PIVOT_M
		NoRebateSashes[ 9]	= SASH_FIXED_SLIDE
		NoRebateSashes[10]	= SASH_SLIDING_HOR
		NoRebateSashes[11]	= SASH_SLIDING_HOR_M
		NoRebateSashes[12]	= SASH_DOUBLE_SLIDING_HOR
		NoRebateSashes[13]	= SASH_DOUBLE_SLIDING_HOR_M
		NoRebateSashes[14]	= SASH_SLIDING_VER
		NoRebateSashes[15]	= SASH_DOUBLE_SLIDING_VER

	GlassSashMod 		= 2 * (gs_sash_width - gs_rebate_width)
	GlassNoRebateMod 	= 2 * gs_sash_width
endif

if iWindowType = WIN_MultisashHorizontal then
	dim MinSashWidth[]
	for iPane = 1 to gs_panes_number
		_GlassWidthMod = 0
		if optypeIDArray[iPane] <> SASH_FIXED then _GlassWidthMod = GlassSashMod
		for i = 1 to vardim1(NoRebateSashes)
			if optypeIDArray[iPane] = NoRebateSashes[i] then _GlassWidthMod = GlassNoRebateMod
		next i
		MinSashWidth[iPane] = _GlassWidthMod + 0.01
	next iPane

	minPaneWidth = MinSashWidth[1]
	for iPane = 2 to gs_panes_number
		minPaneWidth = minPaneWidth + MullionWidthArray[iPane-1] + MinSashWidth[iPane]
	next iPane

	if gs_repeat_modules then
		if gs_axis_lock then
			minUnitWidth = gs_frame_width_left + gs_frame_width - MullionWidth + 2 * gs_axis_distance
		else
			minUnitWidth =	gs_frame_width + gs_frame_width_left +\
							gs_repeat_modules_number * minPaneWidth +\
							(gs_repeat_modules_number - 1) * MullionWidth
		endif
	else
		minUnitWidth = gs_frame_width_left + gs_frame_width + minPaneWidth
	endif
else
	minUnitWidth = max(minUnitWidthUTransom, minUnitWidthMiddle, minUnitWidthLTransom)
endif

if iWindowType = WIN_MultisashVertical then
	dim MinSashHeight[]
	for iPane = 1 to gs_panes_number
		_GlassHeightMod = 0
		if optypeIDArray[iPane] <> SASH_FIXED then _GlassHeightMod = GlassSashMod
		for i = 1 to vardim1(NoRebateSashes)
			if optypeIDArray[iPane] = NoRebateSashes[i] then _GlassHeightMod = GlassNoRebateMod
		next i
		MinSashHeight[iPane] = _GlassHeightMod + 0.01
	next iPane

	minPaneHeight = MinSashHeight[1]
	for iPane = 2 to gs_panes_number
		minPaneHeight = minPaneHeight + TransomWidthArray[iPane-1] + MinSashHeight[iPane]
	next iPane

	if gs_repeat_modules then
		if gs_axis_lock then
			minUnitHeight = gs_frame_width_upper + gs_frame_width_lower - TransomWidth + 2 * gs_axis_distance
		else
			minUnitHeight =	gs_frame_width_upper + gs_frame_width_lower +\
							gs_repeat_modules_number * minPaneHeight +\
							(gs_repeat_modules_number - 1) * TransomWidth
		endif
	else
		minUnitHeight = gs_frame_width_upper + gs_frame_width_lower + minPaneHeight
	endif
else
	minUnitHeight = gs_frame_width_upper + gs_frame_width_lower + 2 * gs_sash_width + \
					gs_UTrans * (gs_UTrans_w + 2 * gs_sash_width) + \
					gs_LTrans * (gs_LTrans_w + 2 * gs_sash_width) + \
					0.01
endif


! =============================================================================
! GS Corner Window Functions
! =============================================================================

dim stDetail2D[]

call "GS Corner Window Functions",
	parameters all	iWindowShape				= iWindowShape,
					gs_IsCurved					= gs_IsCurved,
					bParalellInCurvedWalls		= bParalellInCurvedWalls,
					bDisabeMirroring			= bDisabeMirroring,
					minUnitWidth				= minUnitWidth,
					minUnitHeight				= minUnitHeight,
					gs_CornConnTypeEnable		= gs_CornConnTypeEnable,
					bLeftCornerFunction			= bLeftCornerFunction,
					leftCornerAngle				= leftCornerAngle,
					bLeftDiffConnWall			= bLeftDiffConnWall,
					leftConnWallThk				= leftConnWallThk,
					bRightCornerFunction		= bRightCornerFunction,
					rightCornerAngle			= rightCornerAngle,
					bRightDiffConnWall			= bRightDiffConnWall,
					rightConnWallThk			= rightConnWallThk,
					bEnableVentilationProfile	= bEnableVentilationProfile,
					bEnableParapetInset			= bEnableParapetInset,
					bEnableMasonryArch			= bEnableMasonryArch,
					bEnableFaschen				= bEnableFaschen,
					bEnableThreshold			= bEnableThreshold,
					bEnableCustomCornerLeft		= bEnableCustomCornerLeft,
					bEnableCustomCornerRight	= bEnableCustomCornerRight,
	returned_parameters	stDetail2D


! FM Types --------------------------------------------------------------------
call "FM_types" parameters all


! =============================================================================
! GeneralWindowUnit
! =============================================================================

call "GeneralWindowUnit" parameters all	bSkylight						= 0,
										CasementIDArray 				= CasementIDArray,
										CasementTypeArray				= CasementTypeArray,
										CasementLinkArray				= CasementLinkArray,
										gs_panes_number					= gs_panes_number,
										gs_bSLight						= gs_bSLight,
										gs_bLeftSLight					= gs_bLeftSLight,
										gs_Mullion_Top					= gs_Mullion_Top,
										gs_Mullion_Bott					= gs_Mullion_Bott,
										gs_LeftMullion_Top				= gs_LeftMullion_Top,
										gs_LeftMullion_Bott				= gs_LeftMullion_Bott,
										gs_UTransom_toLeft				= gs_UTransom_toLeft,
										gs_UTransom_toRight				= gs_UTransom_toRight,
										gs_LTransom_toLeft				= gs_LTransom_toLeft,
										gs_LTransom_toRight				= gs_LTransom_toRight,
										gs_RightMullion_Middle			= gs_RightMullion_Middle,
										gs_LeftMullion_Middle			= gs_LeftMullion_Middle,
										gs_UTransom_Middle				= gs_UTransom_Middle,
										gs_LTransom_Middle				= gs_LTransom_Middle,
										stSashType						= stSashType,
										stMullionPosition				= stMullionPosition,
										stOpeningType					= stOpeningType,
										stLouversinFrame				= stLouversinFrame,
										stShowSashOnSymbol				= stShowSashOnSymbol,
										stPanesConfiguration			= stPanesConfiguration,
										stCornerConnType				= stCornerConnType,
										gs_panel_mat					= gs_panel_mat,
										gs_panel_mat2					= gs_panel_mat2,
										stFixGlassDir					= stFixGlassDir,
										bEnableVentilationProfile		= bEnableVentilationProfile,
										gs_VentilationProfileTypeEnable	= gs_VentilationProfileTypeEnable,
										optypeIDArray					= optypeIDArray


! =============================================================================
! 3D Detail Level
! =============================================================================

if gs_3DDetEnable =0 then

    values{2} "iDWDet3D" 	DETLEVEL_DW3D_DETAILED,		`Детальный`,
						    DETLEVEL_DW3D_SIMPLE,		`Простой`,
						    DETLEVEL_DW3D_OFF,			`Откл.`

else
	dim n3DScaleValueMask[]
	dim n3DScaleValueMask_m[]

	i=1
	if bittest( gs_3DDetEnable, 0) then                                              ! Scale Sensitive in Value list, 1
				n3DScaleValueMask[i] = stDetail[1]
				n3DScaleValueMask_m[i] = DETLEVEL_DW3D_SCALESENS
				i = i + 1
	endif
	if bittest( gs_3DDetEnable, 1) then                                              ! Detailed in Value list,2
				n3DScaleValueMask[i] = stDetail[2]
				n3DScaleValueMask_m[i] = DETLEVEL_DW3D_DETAILED
				i = i + 1
	endif
	if bittest( gs_3DDetEnable, 2) then                                              ! Simple in Value list,4
				n3DScaleValueMask[i] = stDetail[3]
				n3DScaleValueMask_m[i] = DETLEVEL_DW3D_SIMPLE
				i = i + 1
	endif
	if bittest( gs_3DDetEnable, 3) then                                              ! Off in Value list,8
				n3DScaleValueMask[i] = stDetail[4]
				n3DScaleValueMask_m[i] = DETLEVEL_DW3D_OFF
				i = i + 1
	endif
	if bittest( gs_3DDetEnable, 4) then                                              ! Chinese Simple in Value list,16
				n3DScaleValueMask[i] = stDetail[5]
				n3DScaleValueMask_m[i] = DETLEVEL_DW3D_CHI_SIMPLE
				i = i + 1
	endif
	if bittest( gs_3DDetEnable, 5) then                                              ! Chinese Detailed in Value list,32
				n3DScaleValueMask[i] = stDetail[6]
				n3DScaleValueMask_m[i] = DETLEVEL_DW3D_CHI_DETAILED
				i = i + 1
	endif

	values{2} "iDWDet3D" n3DScaleValueMask_m, n3DScaleValueMask
endif


! =============================================================================
! Swedish list parameter control
! =============================================================================

if gs_SWE_listParams_contr > 0 then
	call "SWE_ListParameters_control" parameters gs_SWE_listParams_contr = gs_SWE_listParams_contr,
			swe_list_f1	= swe_list_f1
endif

! =============================================================================
! Japanese list parameter control
! =============================================================================

if gs_JPN_listParams_contr then
	call "ListValuesJPN" parameters all gs_JPNObjectType = 2,		!COMMPARS_INTWINDOWS
			gs_is_p2	= 0,
			gs_is_p6	= 0
endif


