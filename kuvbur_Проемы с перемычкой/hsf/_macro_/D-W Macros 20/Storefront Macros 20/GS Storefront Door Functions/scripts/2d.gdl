
! Contact person: <NJ>

! =============================================================================
! Center Hotspot
! =============================================================================

if curvedWall then
	if WIDO_REVEAL_SIDE exor SYMB_ROTANGLE < EPS then
		radSill = sqr(A^2 / 4 + WOD^2) - WIDO_SILL
		radBoard = radSill + WALL_THICKNESS
	else
		radSill = sqr(A^2 / 4 + WOD^2) + WIDO_SILL
		radBoard = radSill - WALL_THICKNESS
	endif
	if wallIsLeft then
		if WIDO_REVEAL_SIDE then
			py = -radSill * cos(leftAlfa) + WOD - WIDO_FRAME_THICKNESS
		else
			py = radSill * cos(leftAlfa) - WOD
		endif
	else
		if WIDO_REVEAL_SIDE then
			py = radBoard * cos(leftAlfa) + WOD - WIDO_FRAME_THICKNESS
		else
			py = -radBoard * cos(leftAlfa) - WOD
		endif
	endif
else
	if AC_WallType = 2 then
		idx1 = AC_WindowInWallContour[1]
		idx2 = AC_WindowInWallContour[2]
		if idx1 > 0 & idx2 > 0 then
			py = (AC_WallContourPolygon[idx1][2] + AC_WallContourPolygon[idx2][2]) / 2
		else
			py = 0
			if idx1 > 0 then py = AC_WallContourPolygon[idx1][2]
			if idx2 > 0 then py = AC_WallContourPolygon[idx2][2]
		endif
	else
		if bInclinedWall | wallIsLeft then
			if WIDO_REVEAL_SIDE then
				py = -WIDO_SILL - WIDO_FRAME_THICKNESS
			else
				py = WIDO_SILL
			endif
		else
			if WIDO_REVEAL_SIDE then
				py = WALL_THICKNESS - WIDO_SILL - WIDO_FRAME_THICKNESS
			else
				py = WIDO_SILL - WALL_THICKNESS
			endif
		endif
	endif
endif

hotspot2 0,py, 9999


! =============================================================================
! 2D detail level settings
! =============================================================================

! Detail values of Fixtures and Fittings
!lod2D_SillBoard: 0-Off, 1-On
!lod2D_Treshold	: 0-Off, 1-Simple, 2-Detailed
!lod2D_Casing	: 0-Off, 1-On
!lod2D_sunShade	: 0-Off, 1-Simple, 2-Detailed

lod2D_SillBoard		= 0
lod2D_Treshold 		= 0
lod2D_Casing 		= 0
lod2D_sunShade	 	= 0
bShowFrameIn2D		= 1

if	iLoD2D = SYMBD_S_1LINE |\						! Simple --> INT 200
	iLoD2D = SYMBD_S_1LINECL then
	if bGetMVOValueDlev2D then bShowFrameIn2D	= 0
	lod2D_SillBoard = 0
	lod2D_Treshold	= 0
	lod2D_Casing	= 0
	lod2D_sunShade	= 0
endif

if	iLoD2D = SYMBD_M_1LINELEAF_2LINE |\			! Middle --> INT 100, NLD 100
	iLoD2D = SYMBD_M_2LINELEAFCL_GLASS then
	if bShowSillBoardIn2D100NED then
		lod2D_SillBoard = 1
	else
		lod2D_SillBoard = 0
	endif
	lod2D_Treshold	= 1
	lod2D_Casing	= 0
	lod2D_sunShade	= 1
endif

if	iLoD2D = SYMBD_D_2LINELEAFOP_GLASS |\			! Detailed --> INT 50, NLD 50
	iLoD2D = SYMBD_D_2LINELEAFCL_REBATEONGLASS then
	lod2D_SillBoard = 1
	lod2D_Treshold	= 2
	if bNotShowCasingIn2DNOR then
		lod2D_Casing	= 0
	else
		lod2D_Casing	= 1
	endif
	lod2D_sunShade	= 2

	if iLoD2D = SYMBD_D_2LINELEAFOP_GLASS & bGetMVOValueDlev2D then
		! if SWE and simple leaf in 50 is enabled, force disable it if MVO symbol is chosen
		bSimpleLeafin50 = 0
	endif
endif

if iLoD2D = SYMBD_D_2LEAFOPGLASS_GLASS then		! Detailed --> INT 20, Storefronts
	lod2D_SillBoard	= 1
	lod2D_Treshold	= 2
	lod2D_Casing	= 1
	lod2D_sunShade	= 2
endif

if iLoD2D = SYMBD_S_2LINE then
	lod2D_SillBoard	= 0
	lod2D_Treshold	= 0
	lod2D_Casing	= 0
	lod2D_sunShade	= 0
endif

if iLoD2D = SYMBD_D_2LINELEAFOP_2LINE then		! Chinese Detailed
	lod2D_SillBoard	= 0
	lod2D_Treshold	= 0
	lod2D_Casing	= 0
	lod2D_sunShade	= 0
endif

if iLoD2D = SYMBD_SCALESENS then							! Scale sensitive
	if GLOB_SCALE > 150 then
		iLoD2D = SYMBD_S_1LINE
!		if bOpeningSymbDisplay then iLoD2D = SYMBD_S_1LINECL
		lod2D_SillBoard = 0
		lod2D_Treshold 	= 0
		lod2D_Casing 	= 0
		lod2D_sunShade 	= 0
	endif
	if GLOB_SCALE <= 150 and GLOB_SCALE > 75 then
		iLoD2D = SYMBD_M_1LINELEAF_2LINE
!		if bOpeningSymbDisplay then iLoD2D = SYMBD_M_2LINELEAFCL_GLASS
		if bShowSillBoardIn2D100NED then
			lod2D_SillBoard = 1
		else
			lod2D_SillBoard = 0
		endif
		lod2D_Treshold	= 1
		lod2D_Casing	= 0
		lod2D_sunShade	= 1
	endif
	if GLOB_SCALE <=  75 then
		iLoD2D = SYMBD_D_2LINELEAFOP_GLASS
!		if bOpeningSymbDisplay then iLoD2D = SYMBD_D_2LINELEAFCL_REBATEONGLASS
		lod2D_SillBoard = 1
		lod2D_Treshold	= 2
		lod2D_Casing	= 1
		lod2D_sunShade	= 2
	endif
	if GLOB_SCALE < 48 then	iLoD2D = SYMBD_D_2LEAFOPGLASS_GLASS
	if bNotShowCasingIn2DNOR then
		if GLOB_SCALE > 49 then
			lod2D_Casing	= 0
		else
			lod2D_Casing	= 1
		endif
	endif

	if GLOB_SCALE <=  49 then
		! if SWE and simple leaf in 50 is enabled, force disable it for below scales
		bSimpleLeafin50 = 0									! SWE 20
	endif
endif


! =============================================================================

bFeedBack =  (GLOB_CONTEXT > 20 & GLOB_CONTEXT < 40)

if AC_WallType = 2 then
	id1 = AC_WindowInWallContour[1]
	id2 = AC_WindowInWallContour[2]
	id3 = AC_WindowInWallContour[3]
	id4 = AC_WindowInWallContour[4]

	if id1 > 0 & id2 > 0 & id3 > 0 & id4 > 0 & abs(id1 - id2) = 1 & abs(id3 - id4) = 1 then
		if abs(AC_WallContourPolygon[id1][2] - AC_WallContourPolygon[id2][2]) < EPS & abs(AC_WallContourPolygon[id3][2] - AC_WallContourPolygon[id4][2]) < EPS then
			AC_WallType = 1
		endif
	endif
endif

! =============================================================================
! Request Globals for Opening Lines
! =============================================================================

bShowOplines2D			= 1
gs_opLinePen			= 1
gs_iSwingType			= 1
gs_swingLineType		= 1
gs_swingLineType2		= 1

call "OpeningOptions" parameters	bWindow						= 0,
									iLineShapeCategory			= iLineShapeCategory,
									bOverride_MVO_2D			= bOverride_MVO_2D,
									or_bOplines2d				= or_bOplines2d,
									or_opLinePen				= or_opLinePen,
									or_iSwingType				= or_iSwingType,
									or_iSlidingType				= or_iSlidingType,
									or_swingLineType			= or_swingLineType,
									or_swingLineType2			= or_swingLineType2,
									bEnableSwingLineTurnOff		= bEnableSwingLineTurnOff,
									bEnableSecondaryOpLineTypes	= bEnableSecondaryOpLineTypes,
						returned_parameters bShowOplines2D,
											gs_opLinePen,
											gs_iSwingType,
											gs_iSlidingType,
											gs_swingLineType,
											gs_swingLineType2

! -----------------------------------------------------------------------------
! Hotspot Display Control
! -----------------------------------------------------------------------------

if iLoD2D < SYMBD_M_1LINELEAF_2LINE then
	bShowUnitHotspots	= 0
	bShowEgressHotspots	= 0
	bShowLeafHotspots	= 0
	bShowAddHotspots	= 0
else
	bShowUnitHotspots	= ((iLoD2D > SYMBD_M_9) | gs_unit_nominal)
	bShowEgressHotspots	= gs_egress_nominal | ((iLoD2D > SYMBD_M_9) & bShowAddHotspots)
	bShowLeafHotspots	= gs_leaf_nominal | ((iLoD2D > SYMBD_M_9) & bShowAddHotspots)
endif

if bShowAddHotspotsForIS then
	bShowUnitHotspots	= 1
	bShowEgressHotspots	= 1
	bShowLeafHotspots	= 1
	bShowAddHotspots	= 1
endif

if iLoD2D = SYMBD_OFF then 100


! =============================================================================
! Demolition / New construction
! =============================================================================

if iTypeDemolitionFill = RENOVATION_FILL_EXIST then
	gs_wallhole_fill = gs_wallhole_fill
	gs_wallhole_pen_fg = gs_wallhole_pen_fg
	gs_wallhole_pen_bg = gs_wallhole_pen_bg
endif

if iTypeDemolitionFill = RENOVATION_FILL_DEMOLISHED then
	gs_wallhole_fill = gs_Demolition_fill
	gs_wallhole_pen_fg = gs_Demolition_pen_fg
	gs_wallhole_pen_bg = gs_Demolition_pen_bg
endif

if	iTypeDemolitionFill = RENOVATION_FILL_NEW |\
	iTypeDemolitionFill = RENOVATION_FILL_NEW_FULL then

	gs_wallhole_fill = gs_New_fill
	gs_wallhole_pen_fg = gs_New_pen_fg
	gs_wallhole_pen_bg = gs_New_pen_bg
endif


! =============================================================================
! SWE New Symbol
! =============================================================================

if gs_bShowNewOnCC & iTypeDemolitionFill = RENOVATION_FILL_NEW then
	bEnableMasonryArch			= 0
	bEnableFaschen				= 0
	bEnableSill					= 0
	bEnableBoard				= 0
	bEnableThreshold			= 0
	bEnableCasing				= 0
	bEnableShutter				= 0
endif


! =============================================================================
! Turned Plaster Restrictions
! =============================================================================

bOutsideAtRefLine = (wallIsLeft exor (AC_Wall_Direction_Type <> 1 & AC_Wall_Direction_Type <> 3))

if bOutsideAtRefLine then
	if bDrawInsideTrim then
		gs_bAutoTurnOut	= 0
		gs_bOverOut		= 0
	endif
	if bDrawOutsideTrim then
		gs_bAutoTurnIn	= 0
		gs_bOverIn		= 0
	endif
else
	if bDrawOutsideTrim then
		gs_bAutoTurnOut	= 0
		gs_bOverOut		= 0
	endif
	if bDrawInsideTrim then
		gs_bAutoTurnIn	= 0
		gs_bOverIn		= 0
	endif
endif


! =============================================================================
! Wallhole Structure
! =============================================================================

drawindex 40	! Draw Cavity Closure at the top

bDrawSillFill	= not(bDrawSill  | bDrawOutsideTrim)
bDrawBoardFill	= not(bDrawBoard | bDrawInsideTrim)

call "WallholeStructure" parameters all A = A,
	iTypeDemolitionFill		= iTypeDemolitionFill,
	refWidth				= refWidth,
	leftWidth				= leftWallholeWidth,
	rightWidth				= rightWallholeWidth,
	iRevealType				= iRevealType,
	leftWallholeRevealPnts	= leftWallholeRevealPnts,
	rightWallholeRevealPnts	= rightWallholeRevealPnts,
	iRevealPointsIdx		= iRevealPointsIdx,
	bAddPoint				= bAddPoint,
	iClosureType			= iClosureType,
	radSill					= radSill,
	radBoard				= radBoard,
	WOD						= WOD,
	overSizeLeft			= overSizeLeft,
	overSizeRight			= overSizeRight,
	overSizeUpper			= overSizeUpper,
	overSizeLower			= overSizeLower,
	lineSections			= lineSections,
! --- Turned Plaster Skins
	possibleSkinTurnIn		= possibleSkinTurnIn,
	possibleSkinTurnOut		= possibleSkinTurnOut,
	maxSkinTurnIn			= maxSkinTurnIn,
	maxSkinTurnOut			= maxSkinTurnOut,
	nSkinTurnIn				= nSkinTurnIn,
	nSkinTurnOut			= nSkinTurnOut,
	thkPlasterAtSillLeft	= thkPlasterAtSillLeft,
	thkPlasterAtSillRight	= thkPlasterAtSillRight,
	thkPlasterAtBoardLeft	= thkPlasterAtBoardLeft,
	thkPlasterAtBoardRight	= thkPlasterAtBoardRight,
! --- Function Control Parameters
	bEnablePlasterLeftIn	= bEnablePlasterLeftIn,
	bEnablePlasterLeftOut	= bEnablePlasterLeftOut,
	bEnablePlasterRightIn	= bEnablePlasterRightIn,
	bEnablePlasterRightOut	= bEnablePlasterRightOut,
	bEnableParapetInset		= bEnableParapetInset,
	bEnableMasonryArch		= bEnableMasonryArch,
	bEnableFaschen			= bEnableFaschen,
	bEnableWallContourHiddenLine	= bEnableWallContourHiddenLine,
	bWallContHiddenLineIn	= 0,
	bWallContHiddenLineOut	= 0,
! --- Macro Control Parameters
	isWindow				= 1,
	gs_IsCurved				= gs_IsCurved,
	bParalellInCurvedWalls	= bParalellInCurvedWalls,
	bDrawSillFill			= bDrawSillFill,
	bDrawBoardFill			= bDrawBoardFill,
! --- Corner Functions
	bLeftCornerFunction		= bLeftCornerFunction,
	leftCornerAngle			= leftCornerAngle,
	leftConnWallThk			= leftConnWallThk,
	bRightCornerFunction	= bRightCornerFunction,
	rightCornerAngle		= rightCornerAngle,
	rightConnWallThk		= rightConnWallThk,
! --- Window Sizes
	gs_wallhole_hotspots	= 1,
	gs_reveal_hotspots		= 1,
! --- Reveal and Closure Type
	gs_reveal_left			= gs_reveal_left,
	gs_reveal_right			= gs_reveal_right,
	revealInnerLeft 		= revealInnerLeft,
	revealInnerRight		= revealInnerRight,
! --- Casing
	bDrawOutsideTrim		= bDrawOutsideTrim,
	bDrawInsideTrim			= bDrawInsideTrim,
! --- String Resources
	stWallContourLine		= stWallContourLine,
	stCavityClosureSide		= stCavityClosureSide,
	stCavityClosureTurnDir	= stCavityClosureTurnDir,
	stMasonryArchTypes		= stMasonryArchTypes,
	stMasonryArchStructure	= stMasonryArchStructure,
! --- Parapet
	iParapetSize			= 1			! PARAPET_SIZE_AUTO


! =============================================================================
! Minimal Space for Doors
! =============================================================================

reqBMinSpace = 0
success = LIBRARYGLOBAL ("LibraryGlobals13", "showBMinSpace", reqBMinSpace)

if success > 0 and reqBMinSpace then
	drawindex 10

	call "dw_minimalspace" parameters A = A,
									B = B,
									ac_wallhole_width = A,
									EgressMSWidth = EgressMSWidth,
									egressOffset = egressOffset,
									msOpeningSideWidth2 = msOpeningSideWidth2,
									msOpeningSideWidth1 = msOpeningSideWidth1,
									ms_openingSDepth = ms_openingSDepth,
									msOppositeSideWidth2 = msOppositeSideWidth2,
									msOppositeSideWidth1 = msOppositeSideWidth1,
									ms_oppositeSDepth = ms_oppositeSDepth,
									ms_slidingWidth = 0,
									leftRevealPnts = leftWallholeRevealPnts,
									rightRevealPnts =rightWallholeRevealPnts,
									iRevealPointsIdx = iRevealPointsIdx,
									ac_unit_width = ac_unit_width,
									radSill = radSill,
									radBoard = radBoard,
									WOD = WOD,
!									gs_opside_list = gs_opside_list,
!									gs_opside_list_m = gs_opside_list_m,
									bSlidingSingle = 0,
									bSlidingDouble = 0,
									ms_rightOffset = ms_rightOffset,
									ms_leftOffset = ms_leftOffset,
									gs_frame_wthk		= gs_wthk,
									gs_frame_thkin 		= gs_fthk,
									gs_fthk				= gs_fthk,
									gs_sidelight_left 	= bSidelights,
									gs_sidelight_right 	= bSidelights,
									gs_sidelight_width_left = gs_sidelight_width_left,
									gs_sidelight_width_right = gs_sidelight_width_right,
									gs_leaf_optype_m	= gs_leaf_optype_m


endif


! =============================================================================
! NED Fire Rating Symbol
! =============================================================================

if bEnableNEDFireRating then
	_bSuccess = 0
	_bShowSymbol = 0
	_bSuccess = LIBRARYGLOBAL ("LibraryGlobals13", "bShowFireRating", _bShowSymbol)
	if _bSuccess then
		_bSuccess = LIBRARYGLOBAL ("LibraryGlobals13", "fireRatingSymbPen", _fireSymbPen)
	endif

	if _bSuccess and _bShowSymbol then
		pen _fireSymbPen

		_radSymb = 0.072
		_dx = 0.08
		_dy1 = 0.5
		_dy2 = 0.3
		_dy3 = 0.16

		if gs_wthk then
			add2 0, -WALL_THICKNESS/2
		else
			add2 0, -gs_frame_thk/2
		endif

		if iNEDFireRating = 1 or iNEDFireRating = 4 or iNEDFireRating = 5 then
			poly2_ 9, 1,
				0,			 4 * _radSymb,	1,
				0,			 3 *_radSymb,	901,
				_radSymb,	-180,			4001,
				0,			 1 * _radSymb,	901,
				_radSymb,	 180,			4001,
				0,			-_radSymb,		901,
				_radSymb,	-180,			4001,
				0,			-3 * _radSymb,	901,
				_radSymb,	 180,			4001
		endif

		if iNEDFireRating = 2 or iNEDFireRating = 3 or iNEDFireRating = 4 or iNEDFireRating = 5 then
			line2 -_dx,	 _dy1,	 _dx,	 _dy1 + _dy3
			line2 -_dx,	-_dy1,	 _dx,	-_dy1 - _dy3
			line2  _dx,	 _dy1,	-_dx,	 _dy1 + _dy3
			line2  _dx,	-_dy1,	-_dx,	-_dy1 - _dy3
		endif

		if iNEDFireRating = 3 or iNEDFireRating = 5 then
			line2 -_dx,	 _dy2,	 _dx,	 _dy2 + _dy3
			line2 -_dx,	-_dy2,	 _dx,	-_dy2 - _dy3
			line2  _dx,	 _dy2,	-_dx,	 _dy2 + _dy3
			line2  _dx,	-_dy2,	-_dx,	-_dy2 - _dy3
		endif

		if iNEDFireRating > 0 and iNEDFireRating < 6 then
			line2 0, -_dy1 - _dy3, 0, _dy1 + _dy3
		endif
		del 1

	endif

endif


100:
! =============================================================================
! Returned Parameters
! =============================================================================

drawindex 40	! Draw Window Panel in the Middle

addPrmX = offsWindowX + SymbMid_RightDx/2 - SymbMid_LeftDx/2
addPrmY = -(WIDO_REVEAL_SIDE - not(WIDO_REVEAL_SIDE)) * gs_wthk * WIDO_SILL + gs_wthk * WIDO_REVEAL_SIDE * (WALL_THICKNESS - WIDO_FRAME_THICKNESS) + SymbolMid_shiftDy
mulPrmX = not(bMirrored) - bMirrored
mulPrmY = 1

mulPrmX = (not(bMirrored) - bMirrored)

if not(bShowReveal) then
	leftUnitWidth	= min(-leftWallFrameRevealPnts[idxFrameStartRevealLeft][1], -leftWallFrameRevealPnts[idxFrameEndRevealLeft][1])
	rightUnitWidth	= min(rightWallFrameRevealPnts[idxFrameStartRevealRight][1], rightWallFrameRevealPnts[idxFrameEndRevealRight][1])

	ac_unit_width = leftUnitWidth + rightUnitWidth
endif

end ac_unit_width,
	gs_frame_ovhg_left_out,
	gs_frame_ovhg_right_out,
	gs_frame_ovhg_left_in,
	gs_frame_ovhg_right_in,
	gs_wthk,
	gs_fthk,
	bMirrored,
	addPrmX, addPrmY,
	mulPrmX, mulPrmY,
	iLoD2D,
	bSimpleLeafin50,

	bShowOplines2D,
	bShowFrameIn2D,
	bShowGlassInMiddle2D,
	gs_opLinePen,
	gs_iSwingType,
	gs_swingLineType,
	gs_swingLineType2,
	bShowAddHotspots, bShowUnitHotspots, bShowEgressHotspots, bShowLeafHotspots
