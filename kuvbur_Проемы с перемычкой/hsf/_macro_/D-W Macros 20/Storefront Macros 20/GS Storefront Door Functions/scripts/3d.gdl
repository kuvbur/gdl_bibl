
! Contact person: <NJ>

! =============================================================================

bFeedBack = (GLOB_CONTEXT > 20 & GLOB_CONTEXT < 40)

! =============================================================================
! Section detail level settings
! =============================================================================

lodSE = LODSE_20
if GLOB_SCALE > 21  then lodSE = LODSE_50
if GLOB_SCALE > 51  then lodSE = LODSE_100
if GLOB_SCALE > 101 then lodSE = LODSE_200
if GLOB_SCALE > 201 then lodSE = LODSE_500


! =============================================================================
! Request globals for Opening Lines
! =============================================================================

bOplines3d				= 0
opLineType3dIn			= 1
opLineType3dOut			= 1
gs_opline_style_m		= 1
gs_opLinePen			= 1

call "OpeningOptions" parameters	gs_opening_dir_m	= 2,
									bWindow				= 0,
									bOverride_MVO_3D	= bOverride_MVO_3D,
									or_bOplines3d		= or_bOplines3d,
									or_iOpLineType3dIn	= or_iOpLineType3dIn,
									or_iOpLineType3dOut	= or_iOpLineType3dOut,
									or_iOpLineType3dSecondary = or_iOpLineType3dSecondary,
									or_iOplineStyle		= or_iOplineStyle,
									or_opLinePen		= or_opLinePen,
									bEnableSwingLineTurnOff	= bEnableSwingLineTurnOff,
									bEnableSecondaryOpLineTypes = bEnableSecondaryOpLineTypes,
					returned_parameters bOplines3d,
										opLineType3dIn,
										opLineType3dOut,
										opLineTypeSecondary,
										gs_opline_style_m,
										gs_opLinePen


! -----------------------------------------------------------------------------
! Hotspot Display Control
! -----------------------------------------------------------------------------

if GLOB_CONTEXT = 4 | GLOB_CONTEXT = 24 then
	if bLanguageUSA then
		bShowUnitHotspots	= 1
		bShowEgressHotspots	= gs_egress_nominal | bShowAddHotspots
		bShowLeafHotspots	= gs_leaf_nominal | bShowAddHotspots
	else
		if lodSE = LODSE_200 | lodSE = LODSE_500 then
			bShowUnitHotspots	= 0
			bShowEgressHotspots	= 0
			bShowLeafHotspots	= 0
			bShowAddHotspots	= 0
		else
			bShowUnitHotspots	= (lodSE = LODSE_20 | lodSE = LODSE_50 | gs_unit_nominal)
			bShowEgressHotspots	= gs_egress_nominal | ((lodSE = LODSE_20 | lodSE = LODSE_50) & bShowAddHotspots)
			bShowLeafHotspots	= gs_leaf_nominal | ((lodSE = LODSE_20 | lodSE = LODSE_50) & bShowAddHotspots)
		endif
	endif
else
	bShowUnitHotspots	= 0
	bShowEgressHotspots	= 0
	bShowLeafHotspots	= 0
	bShowAddHotspots	= 0
endif

if bShowAddHotspotsForIS then
	bShowUnitHotspots	= 1
	bShowEgressHotspots	= 1
	bShowLeafHotspots	= 1
	bShowAddHotspots	= 1
endif

! =============================================================================
! Wallhole Structure
! =============================================================================

if gs_board_inside then
	gs_reveal_bottom_angle = 0
endif

call "WallholeStructure" parameters all A = A,
	AC_Sill_To_Curr_Story	= AC_Sill_To_Curr_Story,
	ac_wallhole_height		= openingHeight,
	refWidth				= refWidth,
	leftWidth				= leftWallholeWidth,
	rightWidth				= rightWallholeWidth,
	iRevealType				= iRevealType,
	iSillRevealType			= iSillRevealType,
	iBoardRevealType		= iBoardRevealType,
	leftWallholeRevealPnts	= leftWallholeRevealPnts,
	rightWallholeRevealPnts	= rightWallholeRevealPnts,
	iRevealPointsIdx		= iRevealPointsIdx,
	revealInnerLeft			= revealInnerLeft,
	revealInnerRight		= revealInnerRight,
	iClosureType			= iClosureType,
	radSill					= radSill,
	radBoard				= radBoard,
	WOD						= WOD,
	overSizeLeft			= overSizeLeft,
	overSizeRight			= overSizeRight,
	overSizeUpper			= overSizeUpper,
	overSizeLower			= overSizeLower,
! --- Function Control Parameters
	bEnableParapetInset		= bEnableParapetInset,
	bEnableMasonryArch		= bEnableMasonryArch,
	bEnableFaschen			= bEnableFaschen,
! --- Macro Control Parameters
	isWindow				= 1,
	gs_IsCurved				= gs_IsCurved,
	bParalellInCurvedWalls	= bParalellInCurvedWalls,
! --- Corner Functions
	bLeftCornerFunction		= bLeftCornerFunction,
	leftCornerAngle			= leftCornerAngle,
	leftConnWallThk			= leftConnWallThk,
	bRightCornerFunction	= bRightCornerFunction,
	rightCornerAngle		= rightCornerAngle,
	rightConnWallThk		= rightConnWallThk,
! --- Turn Plaster
	possibleSkinTurnIn		= possibleSkinTurnIn,
	possibleSkinTurnOut		= possibleSkinTurnOut,
	gs_turn_plaster_show_3D	= gs_turn_plaster_show_3D,
	thkPlasterAtSillLeft	= thkPlasterAtSillLeft,
	thkPlasterAtSillRight	= thkPlasterAtSillRight,
	thkPlasterAtSillTop		= thkPlasterAtSillTop,
	thkPlasterAtSillBottom	= thkPlasterAtSillBottom,
	thkPlasterAtBoardLeft	= thkPlasterAtBoardLeft,
	thkPlasterAtBoardRight	= thkPlasterAtBoardRight,
	thkPlasterAtBoardTop	= thkPlasterAtBoardTop,
	thkPlasterAtBoardBottom	= thkPlasterAtBoardBottom,
! --- Window Sizes
	gs_wallhole_hotspots	= 1,
	gs_reveal_hotspots		= 1,
! --- Casing
	bDrawOutsideTrim		= bDrawOutsideTrim,
	bDrawInsideTrim			= bDrawInsideTrim,
! --- String Resources
	stWallContourLine		= stWallContourLine,
	stMasonryArchTypes		= stMasonryArchTypes,
	stMasonryArchStructure	= stMasonryArchStructure,
! --- Parapet
	iParapetBottom			= iParapetBottom,
	iParapetSize			= 1			! PARAPET_SIZE_AUTO


! =============================================================================
! Returned Parameters
! =============================================================================

!!if gs_stack_top then
!!	gs_frame_ovhg_top_out	= 0
!!	gs_frame_ovhg_top_in	= 0
!!else
	if iRevealType = REVEAL_SLANTED then
		gs_frame_ovhg_top_out	= gs_tolerance_upper + VentilationProfileHeight * isVentilationOverFrame + WIDO_FRAME_THICKNESS * tan(gs_reveal_top_angle)
		gs_frame_ovhg_top_in	= gs_tolerance_upper + VentilationProfileHeight * isVentilationOverFrame
	else
		gs_frame_ovhg_top_out	= gs_tolerance_upper + VentilationProfileHeight * isVentilationOverFrame
		gs_frame_ovhg_top_in	= gs_tolerance_upper + VentilationProfileHeight * isVentilationOverFrame
	endif
!!endif

gs_frame_ovhg_bottom_out = 0
gs_frame_ovhg_bottom_in	 = 0


if iRevealType = REVEAL_SLANTED & not(WIDO_REVEAL_SIDE) then
	temp = gs_frame_ovhg_top_in
	gs_frame_ovhg_top_in = gs_frame_ovhg_top_out
	gs_frame_ovhg_top_out = temp
endif


! =============================================================================

addPrmX = offsWindowX
addPrmY = -(WIDO_REVEAL_SIDE - not(WIDO_REVEAL_SIDE)) * gs_wthk * WIDO_SILL			!!!WIDO_FRAME_THICKNESS
mulPrmX = not(bMirrored) - bMirrored
mulPrmY = 1

if not(bShowReveal) then
	leftUnitWidth	= min(-leftWallFrameRevealPnts[idxFrameStartRevealLeft][1], -leftWallFrameRevealPnts[idxFrameEndRevealLeft][1])
	rightUnitWidth	= min(rightWallFrameRevealPnts[idxFrameStartRevealRight][1], rightWallFrameRevealPnts[idxFrameEndRevealRight][1])

	ac_unit_width = leftUnitWidth + rightUnitWidth
endif

end ac_unit_width,
	ac_unit_height,
	gs_frame_ovhg_left_out,
	gs_frame_ovhg_right_out,
	gs_frame_ovhg_top_out,
	gs_frame_ovhg_bottom_out,
	gs_frame_ovhg_left_in,
	gs_frame_ovhg_right_in,
	gs_frame_ovhg_top_in,
	gs_frame_ovhg_bottom_in,
	gs_fthk,
	bMirrored,

	mulPrmX, 0,					 0,					 addPrmX,
	0,		 mulPrmY * cos(-90),-sin(-90),			 0,
	0,		 mulPrmY * sin(-90), mulPrmY * cos(-90),-addPrmY,

	bOplines3d,	opLineType3dIn,	opLineType3dOut, opLineTypeSecondary, gs_opline_style_m, gs_opLinePen,
	bShowAddHotspots, bShowAddHotspotsForIS, bShowUnitHotspots, bShowEgressHotspots, bShowLeafHotspots

