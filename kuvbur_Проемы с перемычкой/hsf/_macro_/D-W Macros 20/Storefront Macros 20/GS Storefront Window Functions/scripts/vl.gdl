

! =============================================================================
! Hide All parameters list
! =============================================================================
hideparameter all


! =============================================================================
! 3D Based 2D Symbol Support
! =============================================================================

if AC_Hole_Display_Option = 3 then
	parameters AC_WallContours = 0
else
	parameters AC_WallContours = 1
endif


hideparameter "ac_details"

! =============================================================================
! Show / Hide 2D Fills
! =============================================================================

if not(gs_bFills) then	! Hide
	hideparameter	"gs_wallhole_fill",
					"gs_wallhole_pen_fg",
					"gs_wallhole_pen_bg"

	lock	"gs_wallhole_fill",
			"gs_wallhole_pen_fg",
			"gs_wallhole_pen_bg"
endif


! =============================================================================
! Wall Contour Line Parameter Handling
! =============================================================================

if not(bEnableSill | bEnableThreshold) then
	lock "gs_wcont_hidden_line_out"
	hideparameter "gs_wcont_hidden_line_out"
endif
if not(bEnableBoard | bEnableThreshold) then
	lock "gs_wcont_hidden_line_in"
	hideparameter "gs_wcont_hidden_line_in"
endif


! =============================================================================
! Wallhole Structure
! =============================================================================

call "WallholeStructure" parameters all A = A, B = B,
	refWidth 				= refWidth,
	leftWidth				= leftWidth,
	rightWidth				= rightWidth,
	openingHeight			= openingHeight,
	iRevealType				= iRevealType,
	iSillRevealType			= iSillRevealType,
	iBoardRevealType		= iBoardRevealType,
	leftWallholeRevealPnts	= leftWallholeRevealPnts,
	rightWallholeRevealPnts	= rightWallholeRevealPnts,
	iRevealPointsIdx		= iRevealPointsIdx,
	iClosureType			= iClosureType,
! --- Coustom CC Settings ---
	gs_custom_cc_turn_in		= gs_custom_cc_turn_in,
	iCustomCCThicknessType = iCustomCCThicknessType,
	iCustomCCOrientation = iCustomCCOrientation,
	gs_custom_cc_separator		= gs_custom_cc_separator,
	iCustomCCEditJambSide = iCustomCCEditJambSide,
	iCustomCCEditWallSide = iCustomCCEditWallSide,
	iCustomCCEditSkin = iCustomCCEditSkin,
	gs_custom_cc_array_left		= gs_custom_cc_array_left,
	gs_custom_cc_array_right	= gs_custom_cc_array_right,
	gs_custom_cc_thickness		= gs_custom_cc_thickness,
	gs_custom_cc_overhang		= gs_custom_cc_overhang,
	gs_custom_cc_separator_pen	= gs_custom_cc_separator_pen,
! --- Connections ---
	gs_stack_left			= gs_stack_left,
	gs_stack_right			= gs_stack_right,
	gs_stack_top			= 0,
! --- Function Control Parameters
	bEnablePlasterLeftIn	= bEnablePlasterLeftIn,
	bEnablePlasterLeftOut	= bEnablePlasterLeftOut,
	bEnablePlasterRightIn	= bEnablePlasterRightIn,
	bEnablePlasterRightOut	= bEnablePlasterRightOut,
	bEnablePlasterTopIn		= bEnablePlasterTopIn,
	bEnablePlasterTopOut	= bEnablePlasterTopOut,
	bEnablePlasterBottomIn	= bEnablePlasterBottomIn,
	bEnablePlasterBottomOut	= bEnablePlasterBottomOut,
	bEnableParapetInset		= bEnableParapetInset,
	bEnableMasonryArch		= bEnableMasonryArch,
	bEnableFaschen			= bEnableFaschen,
	gs_RevealTypeEnable		= gs_RevealTypeEnable,
	gs_ClosureTypeEnable	= gs_ClosureTypeEnable,
	bEnableWallContourHiddenLine	= bEnableWallContourHiddenLine,
! --- Macro Control Parameters
	isWindow				= 1,
	iWindowShape			= iWindowShape,
	defaultSillDepth		= defaultSillDepth,
! --- Corner Functions
	bLeftCornerFunction		= bLeftCornerFunction,
!	leftCornerAngle			= leftCornerAngle,
!	leftConnWallThk			= leftConnWallThk,
	bRightCornerFunction	= bRightCornerFunction,
!	rightCornerAngle		= rightCornerAngle,
!	rightConnWallThk		= rightConnWallThk,
! --- Casing
	bDrawOutsideTrim		= bDrawOutsideTrim,
	bDrawInsideTrim			= bDrawInsideTrim,
! --- ventialtion over frame wallhole size modification
	includeVentilationHeight		= VentilationProfileHeight * isVentilationOverFrame,
! --- String Resources
	stRevealTypes					= stRevealTypes,
	stRevealTypesBottom				= stRevealTypesBottom,
	stRevealAngleEditBy				= stRevealAngleEditBy,
	stClosureTypes					= stClosureTypes,
	stWallContourLine				= stWallContourLine,
	stCavityClosureSide				= stCavityClosureSide,
	stCavityClosureTurnDir			= stCavityClosureTurnDir,
	stDutchClosureToSide			= stDutchClosureToSide,
	stCavityClosureEditedJambSide	= stCavityClosureEditedJambSide,
	stCavityClosureEditedWallSide	= stCavityClosureEditedWallSide,
	stCavityClosureEditedSkinNumber	= stCavityClosureEditedSkinNumber,
	stCavityClosureTurnInThickness	= stCavityClosureTurnInThickness,
	stCavityClosureHatchOrientation	= stCavityClosureHatchOrientation
!	stMasonryArchTypes				= stMasonryArchTypes,
!	stMasonryArchStructure			= stMasonryArchStructure,
!	gs_faschen_type 				= gs_faschen_type


! =============================================================================
! Demolition / New construction
! =============================================================================

if gs_bFills = 0 then
	lock "iTypeDemolitionFill"
endif

if gs_bShowDemolitionPar then
	values{2} "iTypeDemolitionFill" 	RENOVATION_FILL_EXIST, `Нет`,
										RENOVATION_FILL_DEMOLISHED, `Демонтаж`,
										RENOVATION_FILL_NEW, `Новая Конструкция - Пустой Символ`,
										RENOVATION_FILL_NEW_FULL, `Новая Конструкция - Полный Символ`

	if iTypeDemolitionFill <> RENOVATION_FILL_EXIST then
		lock "gs_wallhole_fill"
		lock "gs_wallhole_pen_fg"
		lock "gs_wallhole_pen_bg"
	endif
endif


! =============================================================================
! 2D Detail Level
! =============================================================================

if gs_2DDetEnable = 0 then
			values{2} "iDWDet2D" 	DETLEVEL_DW2D_MVO,		`по ПМВ`,
									DETLEVEL_DW2D_SCSENS,	`Зависит от Масштаба`,
									DETLEVEL_DW2D_50,		`1:50`,
									DETLEVEL_DW2D_100,		`1:100`,
									DETLEVEL_DW2D_200,		`1:200`,
									DETLEVEL_DW2D_OFF,		`Откл.`
else

	dim n2DScaleValueMask[]
	dim n2DScaleValueMask_m[]

	i=1
	if bittest( gs_2DDetEnable, 11) then                                              ! by MVO, 2048
				n2DScaleValueMask[i] = stDetail2D[1]
				n2DScaleValueMask_m[i] = DETLEVEL_DW2D_MVO
				i = i + 1
	endif
	if bittest( gs_2DDetEnable, 0) then                                              ! Scale Sensitive in Value list, 1
				n2DScaleValueMask[i] = stDetail2D[2]
				n2DScaleValueMask_m[i] = DETLEVEL_DW2D_SCSENS
				i = i + 1
	endif
	if bittest( gs_2DDetEnable, 10) then                                              ! 1:20 in Value list,1024
				n2DScaleValueMask[i] = stDetail2D[12]
				n2DScaleValueMask_m[i] = DETLEVEL_DW2D_20
				i = i + 1
	endif
	if bittest( gs_2DDetEnable, 1) then                                              ! 1:50 in Value list,2
				n2DScaleValueMask[i] = stDetail2D[3]
				n2DScaleValueMask_m[i] = DETLEVEL_DW2D_50
				i = i + 1
	endif
	if bittest( gs_2DDetEnable, 2) then                                              ! 1:100 in Value list,4
				n2DScaleValueMask[i] = stDetail2D[4]
				n2DScaleValueMask_m[i] = DETLEVEL_DW2D_100
				i = i + 1
	endif
	if bittest( gs_2DDetEnable, 3) then                                              ! Middle Detail in Value list,8
				n2DScaleValueMask[i] = stDetail2D[5]
				n2DScaleValueMask_m[i] = DETLEVEL_DW2D_MIDDET
				i = i + 1
	endif
	if bittest( gs_2DDetEnable, 4) then                                              ! Simple in Value list,16
				n2DScaleValueMask[i] = stDetail2D[6]
				n2DScaleValueMask_m[i] = DETLEVEL_DW2D_SMPL2L
				i = i + 1
	endif
	if bittest( gs_2DDetEnable, 5) then                                              ! 1:200 in Value list,32
				n2DScaleValueMask[i] = stDetail2D[7]
				n2DScaleValueMask_m[i] = DETLEVEL_DW2D_200
				i = i + 1
	endif
	if bittest( gs_2DDetEnable, 12) then                                              ! 1:500 in Value list,4096
				n2DScaleValueMask[i] = stDetail2D[13]
				n2DScaleValueMask_m[i] = DETLEVEL_DW2D_500
				i = i + 1
	endif
	if bittest( gs_2DDetEnable, 6) then                                              ! Off in Value list,64
				n2DScaleValueMask[i] = stDetail2D[8]
				n2DScaleValueMask_m[i] = DETLEVEL_DW2D_OFF
				i = i + 1
	endif
	if bittest( gs_2DDetEnable, 7) then                                              ! Middle USA in Value list,128
				n2DScaleValueMask[i] = stDetail2D[7]
				n2DScaleValueMask_m[i] = DETLEVEL_DW2D_MIDUSA
				i = i + 1
	endif
	if bittest( gs_2DDetEnable, 8) then                                              ! Chinese Simple in Value list,256
				n2DScaleValueMask[i] = stDetail2D[10]
				n2DScaleValueMask_m[i] = DETLEVEL_DW2D_CHISMPL
				i = i + 1
	endif
	if bittest( gs_2DDetEnable, 9) then                                              ! Chinese Detailed in Value list,512
				n2DScaleValueMask[i] = stDetail2D[11]
				n2DScaleValueMask_m[i] = DETLEVEL_DW2D_CHIDET
				i = i + 1
	endif

			values{2} "iDWDet2D"  n2DScaleValueMask_m, n2DScaleValueMask
endif


! =============================================================================
! Show Reveal On Symbol
! =============================================================================

if bCanHaveReveal then
	values{2} "iRevealOnSymbol"	SHOWREV_MVO, stRevealOnSymbValues[1],
					SHOWREV_ALWAYS, stRevealOnSymbValues[2],
					SHOWREV_UPTO50, stRevealOnSymbValues[3],
					SHOWREV_UPTO100, stRevealOnSymbValues[4],
					SHOWREV_UPTO200, stRevealOnSymbValues[5],
					SHOWREV_NEVER, stRevealOnSymbValues[6]
					
else
	lock "iRevealOnSymbol"
	hideparameter "iRevealOnSymbol"
endif


! =============================================================================
! UI Support
! =============================================================================

if GLOB_UI_BUTTON_ID < 0 then
	parameters gs_ui_current_page = -GLOB_UI_BUTTON_ID
endif


! =============================================================================
! Oversize
! =============================================================================

values "gs_left_oversize"  range[0,]
values "gs_right_oversize" range[0,]
values "gs_upper_oversize" range[0,]
values "gs_lower_oversize" range[0,]

! =============================================================================
! Nominal Size Chooser
! =============================================================================
if not(bLanguageUSA) then
	hideparameter "gs_unit_size"
	lock "gs_unit_size"
else
	!! TYPICAL SIZES !!

	if iStorefrontType = 5 then
		dim bTyp_asize[]
			bTyp_asize[1]=24"
			bTyp_asize[2]=30"
			bTyp_asize[3]=32"
			bTyp_asize[4]=36"
			bTyp_asize[5]=40"
			bTyp_asize[6]=44"
			bTyp_asize[7]=60"

		dim bTyp_bsize[]
			bTyp_bsize[1]=36"
			bTyp_bsize[2]=44"
			bTyp_bsize[3]=52"
			bTyp_bsize[4]=60"
			bTyp_bsize[5]=120"
	else
		dim bTyp_asize[]
			bTyp_asize[1]=24"
			bTyp_asize[2]=30"
			bTyp_asize[3]=32"
			bTyp_asize[4]=36"
			bTyp_asize[5]=40"
			bTyp_asize[6]=44"
			bTyp_asize[7]=72"

		dim bTyp_bsize[]
			bTyp_bsize[1]=36"
			bTyp_bsize[2]=44"
			bTyp_bsize[3]=52"
			bTyp_bsize[4]=60"
			bTyp_bsize[5]=120"
	endif

	dim bTypsize[]
		for ib=1 to vardim1(bTyp_bsize)
			for ia=1 to vardim1(bTyp_asize)
				bTypsize[ib+vardim1(bTyp_bsize)*(ia-1)]=str("%0ffi", bTyp_asize[ia])+" x "+str("%0ffi", bTyp_bsize[ib])
			next ia
		next ib

	values "gs_unit_size" `Специальный Размер`, bTypsize

	if not(gs_unit_nominal) then lock "gs_unit_size"
endif

bSetParams = 0

if GLOB_MODPAR_NAME = "gs_wallhole_nominal" | (gs_reveal_nominal & not(bCanHaveReveal)) then
	gs_wallhole_nominal	= 1
	gs_reveal_nominal	= 0
	gs_unit_nominal		= 0

	bSetParams = 1
endif

if GLOB_MODPAR_NAME = "gs_reveal_nominal" then
	gs_wallhole_nominal	= 0
	gs_reveal_nominal	= 1
	gs_unit_nominal		= 0

	bSetParams = 1
endif

if GLOB_MODPAR_NAME = "gs_unit_nominal" then
	gs_wallhole_nominal	= 0
	gs_reveal_nominal	= 0
	gs_unit_nominal		= 1

	bSetParams = 1
endif

if bSetParams then
	parameters	gs_nominal_size		= gs_wallhole_nominal + 2 * gs_reveal_nominal + 4 * gs_unit_nominal,
				gs_wallhole_nominal	= gs_wallhole_nominal,
				gs_reveal_nominal	= gs_reveal_nominal,
				gs_unit_nominal		= gs_unit_nominal
endif


! =============================================================================
! Dimension Link
! =============================================================================

! Unit Size -> Wallhole Size difference
wallholeDLeft	= gs_tolerance_left
wallholeDRight	= gs_tolerance_right
wallholeDUpper	= gs_tolerance_upper + VentilationProfileHeight * isVentilationOverFrame
wallholeDLower	= gs_tolerance_lower

! Reveal Size -> Wallhole Size difference
revealDLeft		= gs_reveal_left
revealDRight	= gs_reveal_right
revealDUpper	= gs_reveal_top
revealDLower	= gs_reveal_bottom


bRecalculate	= (	GLOB_MODPAR_NAME = "gs_frame_width" |		\
					GLOB_MODPAR_NAME = "gs_tolerance_left" |	\
					GLOB_MODPAR_NAME = "gs_tolerance_right" |	\
					GLOB_MODPAR_NAME = "gs_tolerance_upper" |	\
					GLOB_MODPAR_NAME = "gs_tolerance_lower" |	\
					GLOB_MODPAR_NAME = "gs_reveal_left" |		\
					GLOB_MODPAR_NAME = "gs_reveal_right" |		\
					GLOB_MODPAR_NAME = "gs_reveal_top" |		\
					GLOB_MODPAR_NAME = "gs_reveal_bottom"|	\
					GLOB_MODPAR_NAME = "bVentilationProfile"|	\
					GLOB_MODPAR_NAME = "iVentilationProfileType"|	\
					(GLOB_MODPAR_NAME = "VentilationProfileHeight" & isVentilationOverFrame))

!GLOB_MODPAR_NAME = "WIDO_LEFT_JAMB" |		\
!GLOB_MODPAR_NAME = "WIDO_RIGHT_JAMB" |		\
!GLOB_MODPAR_NAME = "WIDO_HEAD_DEPTH" |		\
!GLOB_MODPAR_NAME = "WIDO_THRES_DEPTH" |	\

bNominalSelectChanged	= (	GLOB_MODPAR_NAME = "gs_wallhole_nominal" |	\
							GLOB_MODPAR_NAME = "gs_reveal_nominal" |	\
							GLOB_MODPAR_NAME = "gs_unit_nominal")

minWallholeWidth	= minUnitWidth	+ wallholeDLeft  + wallholeDRight
minWallholeHeight	= minUnitHeight + wallholeDUpper + wallholeDLower
minRevealWidth		= minUnitWidth	+ wallholeDLeft	 + wallholeDRight - revealDLeft  - revealDRight
minRevealHeight		= minUnitHeight + wallholeDUpper + wallholeDLower - revealDUpper - revealDLower

bSizeModified	= 0
gosub 100		! Link Dimensions

if gs_wallhole_nominal then
	minWidth	= minWallholeWidth
	minHeight	= minWallholeHeight
endif
if gs_reveal_nominal then
	minWidth	= minRevealWidth
	minHeight	= minRevealHeight
endif
if gs_unit_nominal then
	minWidth	= minUnitWidth
	minHeight	= minUnitHeight
endif

values "A" range [minWidth,]
values "B" range [minHeight,]

if bSizeModified | (not(gs_retain_nominal_sizes) & bNominalSelectChanged) then

	bSizeModified = 0

	if gs_wallhole_nominal then
		if ac_wallhole_width < minWallholeWidth then
						ac_wallhole_width = minWallholeWidth
			parameters	ac_wallhole_width = minWallholeWidth
			bSizeModified = 1
		endif
		if ac_wallhole_height < minWallholeHeight then
						ac_wallhole_height = minWallholeHeight
			parameters	ac_wallhole_height = minWallholeHeight
			bSizeModified = 1
		endif

		parameters A = ac_wallhole_width,	B = ac_wallhole_height
	endif
	if gs_reveal_nominal then
		if ac_reveal_width < minRevealWidth then
						ac_reveal_width = minRevealWidth
			parameters	ac_reveal_width = minRevealWidth
			bSizeModified = 1
		endif
		if ac_reveal_height < minRevealHeight then
						ac_reveal_height = minRevealHeight
			parameters	ac_reveal_height = minRevealHeight
			bSizeModified = 1
		endif

		parameters A = ac_reveal_width,	B = ac_reveal_height
	endif
	if gs_unit_nominal then
		if ac_unit_width < minUnitWidth then
						ac_unit_width = minUnitWidth
			parameters	ac_unit_width = minUnitWidth
			bSizeModified = 1
		endif
		if ac_unit_height < minUnitHeight then
						ac_unit_height = minUnitHeight
			parameters	ac_unit_height = minUnitHeight
			bSizeModified = 1
		endif

		parameters A = ac_unit_width, B = ac_unit_height
	endif

	if bSizeModified then
		gosub 100		! Link Dimensions
	endif
else
	if gs_wallhole_nominal then
		if A < minWidth then
			A = minWidth
			parameters A = A
		endif
		if B < minHeight then
			B = minHeight
			parameters B = B
		endif

		ac_wallhole_width	= A
		ac_wallhole_height	= B
		parameters ac_wallhole_width = A, ac_wallhole_height = B
	endif
	if gs_reveal_nominal then
		if A < minWidth then
			A = minWidth
			parameters A = A
		endif
		if B < minHeight then
			B = minHeight
			parameters B = B
		endif

		ac_reveal_width  = A
		ac_reveal_height = B
		parameters ac_reveal_width = A, ac_reveal_height = B
	endif
	if gs_unit_nominal then
		if A < minWidth then
			A = minWidth
			parameters A = A
		endif
		if B < minHeight then
			B = minHeight
			parameters B = B
		endif

		ac_unit_width	= A
		ac_unit_height	= B
		parameters ac_unit_width = A, ac_unit_height = B
	endif

	bRecalculate = 1
	gosub 100		! Link Dimensions
endif

if	not(bCanHaveReveal)	then
	lock "gs_reveal_nominal", "ac_reveal_width", "ac_reveal_height"
	hideparameter "gs_reveal_nominal", "ac_reveal_width", "ac_reveal_height"
endif


! =============================================================================
! NED Fire Rating
! =============================================================================
if bEnableNEDFireRating then
	values "gs_list_firerating"			`Нет`, `30 минут`, `60 минут`, CUSTOM

	if GLOB_MODPAR_NAME = "gs_list_firerating" then
		iNEDFireRating = 0
		if gs_list_firerating = `30 минут` then iNEDFireRating = 2
		if gs_list_firerating = `60 минут` then iNEDFireRating = 3
		parameters iNEDFireRating = iNEDFireRating
	else
		if iNEDFireRating = 2 then gs_list_firerating = `30 минут`
		if iNEDFireRating = 3 then gs_list_firerating = `60 минут`
		parameters gs_list_firerating = gs_list_firerating
	endif

	values "NEDFireRatingPos" range [-ac_unit_width/2, ac_unit_width/2]
endif

! =============================================================================
! DACH Fire rating: Self-Closing
! =============================================================================

if bEnableDACHFireRating then
	gs_list_FR_expression = ""
	if LibraryLangCode = "AUT" then
		gs_list_FR_expression = "E"
	endif

	if gs_list_FR_bSelfClosing and (gs_list_FR_indexSelfClosing <> "") then
		gs_list_FR_expression = gs_list_FR_expression + "I" + gs_list_FR_indexSelfClosing
	endif
	gs_list_FR_expression = gs_list_FR_expression + gs_list_firerating
	if gs_list_FR_bSelfClosing then
		gs_list_FR_expression = gs_list_FR_expression + "-C"
	endif
	parameters gs_list_FR_expression = gs_list_FR_expression

	lock "gs_list_FR_expression"
	if not(gs_list_FR_bSelfClosing) then
		lock "gs_list_FR_indexSelfClosing"
	endif
else
	lock	"gs_list_FR_bSelfClosing",
			"gs_list_FR_indexSelfClosing",
			"gs_list_FR_expression"
	hideparameter	"gs_list_FR_bSelfClosing",
					"gs_list_FR_indexSelfClosing",
					"gs_list_FR_expression"
endif


! =============================================================================
end
! =============================================================================


100:
! =============================================================================
! Link Dimensions
! =============================================================================

	if bLanguageUSA and gs_unit_size<>`Специальный Размер` then
		nr=split ( gs_unit_size, "%n x %n", a_size, sep, b_size)

		ac_unit_width=a_size
		ac_unit_height=b_size
		parameters ac_unit_width=a_size
		parameters ac_unit_height=b_size

		ac_wallhole_width	= ac_unit_width		+ wallholeDLeft	+ wallholeDRight
		ac_reveal_width		= ac_wallhole_width	- revealDLeft	- revealDRight
		parameters	ac_wallhole_width	= ac_wallhole_width,
					ac_reveal_width		= ac_reveal_width

		ac_wallhole_height	= ac_unit_height	+ wallholeDUpper + wallholeDLower
		ac_reveal_height	= ac_wallhole_height - revealDUpper	 - revealDLower
		parameters	ac_wallhole_height	= ac_wallhole_height,
					ac_reveal_height	= ac_reveal_height

		lock "ac_wallhole_width", "ac_wallhole_height"
		lock "ac_reveal_width", "ac_reveal_height"

		bSizeModified = 1
	endif

	if GLOB_MODPAR_NAME = "ac_wallhole_width" | (gs_wallhole_nominal & bRecalculate) then
		if ac_wallhole_width < minWallholeWidth then
						ac_wallhole_width = minWallholeWidth
			parameters	ac_wallhole_width = minWallholeWidth
		endif

		ac_reveal_width	= ac_wallhole_width	- revealDLeft	- revealDRight
		ac_unit_width	= ac_wallhole_width	- wallholeDLeft	- wallholeDRight

		parameters	ac_reveal_width	= ac_reveal_width,
					ac_unit_width	= ac_unit_width

		bSizeModified = 1
	endif
	if GLOB_MODPAR_NAME = "ac_reveal_width" | (gs_reveal_nominal & bRecalculate) then
		if ac_reveal_width < minRevealWidth then
						ac_reveal_width = minRevealWidth
			parameters	ac_reveal_width = minRevealWidth
		endif

		ac_wallhole_width	= ac_reveal_width	+ revealDLeft	+ revealDRight
		ac_unit_width		= ac_wallhole_width	- wallholeDLeft	- wallholeDRight

		parameters	ac_wallhole_width	= ac_wallhole_width,
					ac_unit_width		= ac_unit_width

		bSizeModified = 1
	endif
	if GLOB_MODPAR_NAME = "ac_unit_width" | (gs_unit_nominal & bRecalculate) then
		if ac_unit_width < minUnitWidth then
						ac_unit_width = minUnitWidth
			parameters	ac_unit_width = minUnitWidth
		endif

		ac_wallhole_width	= ac_unit_width		+ wallholeDLeft	+ wallholeDRight
		ac_reveal_width		= ac_wallhole_width	- revealDLeft	- revealDRight

		parameters	ac_wallhole_width	= ac_wallhole_width,
					ac_reveal_width		= ac_reveal_width

		bSizeModified = 1
	endif

	! =============================================================================

	if GLOB_MODPAR_NAME = "ac_wallhole_height" | (gs_wallhole_nominal & bRecalculate) then
		if ac_wallhole_height < minWallholeHeight then
						ac_wallhole_height = minWallholeHeight
			parameters	ac_wallhole_height = minWallholeHeight
		endif

		ac_reveal_height	= ac_wallhole_height - revealDUpper		- revealDLower
		ac_unit_height		= ac_wallhole_height - wallholeDUpper	- wallholeDLower

		parameters	ac_reveal_height	= ac_reveal_height,
					ac_unit_height		= ac_unit_height

		bSizeModified = 1
	endif
	if GLOB_MODPAR_NAME = "ac_reveal_height" | (gs_reveal_nominal & bRecalculate) then
		if ac_reveal_height < minRevealHeight then
						ac_reveal_height = minRevealHeight
			parameters	ac_reveal_height = minRevealHeight
		endif

		ac_wallhole_height	= ac_reveal_height	 + revealDUpper		+ revealDLower
		ac_unit_height		= ac_wallhole_height - wallholeDUpper	- wallholeDLower

		parameters	ac_wallhole_height	= ac_wallhole_height,
					ac_unit_height		= ac_unit_height

		bSizeModified = 1
	endif
	if GLOB_MODPAR_NAME = "ac_unit_height" | (gs_unit_nominal & bRecalculate) then
		if ac_unit_height < minUnitHeight then
						ac_unit_height = minUnitHeight
			parameters	ac_unit_height = minUnitHeight
		endif

		ac_wallhole_height	= ac_unit_height	+ wallholeDUpper + wallholeDLower
		ac_reveal_height	= ac_wallhole_height - revealDUpper	 - revealDLower

		parameters	ac_wallhole_height	= ac_wallhole_height,
					ac_reveal_height	= ac_reveal_height

		bSizeModified = 1
	endif
return

! =============================================================================

