

_bListView = (GLOB_PREVIEW_MODE = 2)

if GLOB_CONTEXT = 4 | _bListView then
	if GLOB_SCALE >= 100 then end
endif

pen gs_pen_2D

!************** Parameter

!ecode !** Code for Reihenfenster
					!   (1 Normal, 2 Endelement links, 3 Endelement rechts
					!    4 Zwischenelement)
nh   = max(0, nh)
fbh  = max(0, fbh)
sfbi = max(0, sfbi)
uba  = max(0, fbl-WIDO_SILL)
ubi  = max(0, siv+sts+WIDO_SILL-WALL_THICKNESS)

!*************************

yke=fbl            !********************************** anna


!************** Koordinaten

suba1 = suba_l
suba2 = suba_r
subi1 = subi_l
subi2 = subi_r

suba1 = suba1
suba2 = suba2
subi1 = subi1
subi2 = subi2
wcode1 = 15
wcode2 = 15




if WIDO_SILL+sts>WALL_THICKNESS-0.0002 then feba_i=0

!******  Flip

if WIDO_REVEAL_SIDE then
	rr1 = -WIDO_ORIG_DIST
	rr = rr1 + sts
else
	rr1 = WIDO_ORIG_DIST
	rr = rr1
endif




if ecode = 2 then
	suba2 = 0
	subi2 = 0
	wcode2 = 8
endif
if ecode = 3 then
	suba1 = 0
	subi1 = 0
	wcode1 = 8
endif
if ecode = 4 then
	suba1 = 0
	suba2 = 0
	subi1 = 0
	subi2 = 0
	wcode1 = 8
	wcode2 = 8
endif


!**** inclined wall with jambs

if abs(WIDO_ORIG_DIST)>EPS then
!    if WIDO_RIGHT_JAMB<>0 or WIDO_LEFT_JAMB<>0 then
		goto 9000
!    endif
endif


!******  anti-Flip

if WIDO_REVEAL_SIDE then
	mulz -1
	addz -sts
endif


if abs(rr1) < EPS then          !******   Gerade Wand

	xkn1 = -a/2 + WIDO_LEFT_JAMB
	xkn2 = a/2 - WIDO_RIGHT_JAMB
	xkw1 = -a/2 + WIDO_LEFT_JAMB
	xkw2 = a/2 - WIDO_RIGHT_JAMB
	ykw = WIDO_SILL

	xke1 = xkw1
	xke2 = xkw2
	yke = ykw + uba

	xbn1 = -a/2
	xbn2 = a/2
	xbw1 = -a/2
	xbw2 = a/2
	ybw = WIDO_SILL - WALL_THICKNESS

	xbe1 = -a/2
	xbe2 = a/2
	ybe = ybw - ubi


else                    !******   Gebogene Wand

	if abs(WIDO_RIGHT_JAMB) > EPS or abs(WIDO_LEFT_JAMB) > EPS then
		fbh = 0
		sfbi = 0
	endif

	if rr1 < 0 then      !******   Nach outside gebogen

		rr = abs(rr)

		rnah = sqr( rr^2 + (a/2)^2 ) - WIDO_SILL
		alph = atn((a/2) / rr )

		xkn1 = -a/2
		xkn2 = a/2
		xkw1 = -a/2 + WIDO_SILL*sin(alph)
		xkw2 = a/2 - WIDO_SILL*sin(alph)
		ykw = WIDO_SILL * cos(alph)

		xke1 = xkw1 + uba*tan(alph)
		xke2 = xkw2 - uba*tan(alph)
		yke = ykw + uba

		xbn1 = -a/2 - sts*tan(alph)
		xbn2 = a/2 + sts*tan(alph)
		xbw1 = -((rnah + WALL_THICKNESS) * sin(alph))
		xbw2 = (rnah + WALL_THICKNESS) * sin(alph)
		ybw = -((rnah + WALL_THICKNESS) * cos(alph) - rr)

		xbe1 = xbw1 - ubi * tan(alph)
		xbe2 = xbw2 + ubi * tan(alph)
		ybe = ybw - ubi



	else                !******   Nach innen gebogen

		rweit = sqr( rr^2 + (a/2)^2 ) + WIDO_SILL
		alph = atn((a/2) / (rr-sts))

		xkn1 = -(rr * tan(alph))
		xkn2 = rr * tan(alph)
		xkw1 = xkn1 - (rweit - rr/cos(alph)) * sin(alph)
		xkw2 = xkn2 + (rweit - rr/cos(alph)) * sin(alph)
		ykw = (rweit - rr/cos(alph)) * cos(alph)

		xke1 = xkw1 - uba * tan(alph)
		xke2 = xkw2 + uba * tan(alph)
		yke = ykw + uba

		xbn1 = -a/2
		xbn2 = a/2
		xbw1 = -((rweit - WALL_THICKNESS) * sin(alph))
		xbw2 = (rweit - WALL_THICKNESS) * sin(alph)
		ybw = -(rr - ((rweit - WALL_THICKNESS) * cos(alph)))

		xbe1 = xbw1 + ubi * tan(alph)
		xbe2 = xbw2 - ubi * tan(alph)
		ybe = ybw - ubi

	endif

endif


dz1 = max(abs(xke1-suba1), abs(xkw1-suba1),
		 abs(xbw1-subi1), abs(xbe1-subi1))

dz2 = max(xke2+suba2, xkw2+suba2,
		 xbw2+subi2, xbe2+subi2)

mz = dz1 + dz2





!************** 3D-Korper der Fensterbank


!******   Fensterbank outside

if feba_a=0 then goto 2000

if abs(SYMB_ROTANGLE) < EPS and SYMB_MIRRORED then addx (WIDO_RIGHT_JAMB-WIDO_LEFT_JAMB)
if abs(SYMB_ROTANGLE-180) < EPS and not(SYMB_MIRRORED) then addx (WIDO_RIGHT_JAMB-WIDO_LEFT_JAMB)

material matfa

if fbh <> 0 then

	rotx -90

	if suba1 <= 0.000001 then
		if uba+ykw > 0 then
			cutpolya 4, 1, 0,
				xkw1, 0, wcode1,
				xke1, yke, wcode1,
				-dz1-0.05, yke, wcode1,
				-dz1-0.05, 0, wcode1
		endif
	else
		if ykw > 0 then
			cutpolya 4, 1, 0,
				xkn1, 0, wcode1,
				xkw1, ykw, wcode1,
				-dz1-0.05, ykw, wcode1,
				-dz1-0.05, 0, wcode1
		endif
		if uba > 0 then
			cutpolya 4, 1, 0,
				xkw1-suba1, ykw, wcode1,
				xke1-suba1, yke, wcode1,
				-dz1-0.05, yke, wcode1,
				-dz1-0.05, ykw, wcode1
		endif
	endif


	if suba2 <= 0.000001 then
		if uba+ykw > 0 then
			cutpolya 4, 1, 0,
				xkw2, 0, wcode2,
				xke2, yke, wcode2,
				dz2+0.05, yke, wcode2,
				dz2+0.05, 0, wcode2
		endif
	else
		if ykw > 0 then
			cutpolya 4, 1, 0,
				xkn2, 0, wcode2,
				xkw2, ykw, wcode2,
				dz2+0.05, ykw, wcode2,
				dz2+0.05, 0, wcode2
		endif
		if uba > 0 then
			cutpolya 4, 1, 0,
				xkw2+suba2, ykw, wcode2,
				xke2+suba2, yke, wcode2,
				dz2+0.05, yke, wcode2,
				dz2+0.05, ykw, wcode2
		endif
	endif


	del 1

	rotx -90
	rotz -90
	rotx 90
	addz -dz2-0.02

	addy WIDO_THRES_DEPTH


!*** Fensterbank ***


sect_fill fill_schnitt, pen_bkgd, p_schnittschraff, pen_schnitt

if iSillType = SILL_SOLID then

	if abs(w) < EPS or abs(nd) < EPS then

		 if GLOB_SCALE>20 & (GLOB_CONTEXT = 4 | _bListView) then

			prism_ 4, mz+0.04,
				-yke, 0, 15,
				-yke, nh, 15,
				0, fbh, 15,
				0, 0, 15
		else

			prism_  10, mz+0.04,
				-fbl+fbn+fbn*2/3, 0, 15,
				-fbl+fbn+fbn*2/3, fbn*2/3, 15,
				-fbl+fbn, fbn*2/3, 15,
				-fbl+fbn, 0, 15,
				-fbl, 0, 15,
				-fbl, nh, 15,
				-fbn, fbh-fbn, 15,
				-fbn, fbh, 15,
				 0, fbh, 15,
				 0, 0, 15

		endif

	else


		 if GLOB_SCALE>20 & (GLOB_CONTEXT = 4 | _bListView) then


			prism_ 6, mz+0.04,
				-yke+nd, 0, 15,
				-yke+nd, -w, 15,
				-yke, -w, 15,
				-yke, nh, 15,
				0, fbh, 15,
				0, 0, 15
		else

			prism_ 12, mz+0.04,
				-yke+nd, 0, 15,
				-yke+nd, -w, 15,
				-fbl+nd/2, -w, 15,
				-fbl+nd/2, -w+fbn*2/3, 15,
				-fbl+nd/2-fbn*2/3, -w+fbn*2/3, 15,
				-fbl+nd/2-fbn*2/3, -w, 15,
				-fbl, -w, 15,
				-fbl, nh, 15,
				-fbn, fbh-fbn, 15,
				-fbn, fbh, 15,
				 0, fbh, 15,
				 0, 0, 15

		endif

	endif

else

	if WIDO_SILL>0.005 then

		xh=fbh-fbn

		addy 0.0001

			if GLOB_SCALE<=20 | (GLOB_CONTEXT <> 4 & not(_bListView)) then


				extrude 5,0,0,mz+0.04,16+32,
					0, fbh, 0,
					0, xh, 0,
					-fbl, -(xh/WIDO_SILL)*uba, 0,
					-fbl, -(xh/WIDO_SILL)*uba-nh, 0,
					-fbl+0.01, -(xh/WIDO_SILL)*uba-nh+0.01, 0

			else


				extrude 4,0,0,mz+0.04,16+32,
					0, fbh, 0,
					0, xh, 0,
					-fbl, -(xh/WIDO_SILL)*uba, 0,
					-fbl, -(xh/WIDO_SILL)*uba-nh, 0



			endif

		del 1

	endif

endif



	gosub 1000

	del 1
	del 4

	if suba1 <= 0.000001 then
		if uba+ykw > 0 then
			cutend
		endif
	else
		if ykw > 0 then
			cutend
		endif
		if uba > 0 then
			cutend
		endif
	endif


	if suba2 <= 0.000001 then
		if uba+ykw > 0 then
			cutend
		endif
	else
		if ykw > 0 then
			cutend
		endif
		if uba > 0 then
			cutend
		endif
	endif



endif


if abs(SYMB_ROTANGLE) < EPS and SYMB_MIRRORED then del 1
if abs(SYMB_ROTANGLE-180) < EPS and not(SYMB_MIRRORED) then del 1


2000:



if feba_i=0 then goto 1111

!******   Fensterbank innen

material matfi

if sfbi <> 0 then

	rotx -90

	if subi1 <= 0.000001 then
		if abs(ybw)-sts+ubi > 0 then
			cutpolya 4, 1, 0,
				xbw1, -sts, wcode1,
				xbe1, ybe, wcode1,
				-dz1-0.05, ybe, wcode1,
				-dz1-0.05, -sts, wcode1
			endif
	else
		if abs(ybw) > 0 then
			cutpolya 4, 1, 0,
				xbn1, -sts, wcode1,
				xbw1, ybw, wcode1,
				-dz1-0.05, ybw, wcode1,
				-dz1-0.05, -sts, wcode1
		endif
		if ubi > 0 then
			cutpolya 4, 1, 0,
				xbw1-subi1, ybw, wcode1,
				xbe1-subi1, ybe, wcode1,
				-dz1-0.05, ybe, wcode1,
				-dz1-0.05, ybw, wcode1
		endif
	endif

	if subi2 <= 0.000001 then
		if abs(ybw)-sts+ubi > 0 then
			cutpolya 4, 1, 0,
				xbw2, -sts, wcode2,
				xbe2, ybe, wcode2,
				dz2+0.05, ybe, wcode2,
				dz2+0.05, -sts, wcode2
		endif
	else
		if ybw < sts then
			cutpolya 4, 1, 0,
				xbn2, -sts, wcode2,
				xbw2, ybw, wcode2,
				dz2+0.05, ybw, wcode2,
				dz2+0.05, -sts, wcode2
		endif
		if ubi > 0 then
			cutpolya 4, 1, 0,
				xbw2+subi2, ybw, wcode2,
				xbe2+subi2, ybe, wcode2,
				dz2+0.05, ybe, wcode2,
				dz2+0.05, ybw, wcode2
		endif
	endif


	del 1

	rotx -90
	rotz -90
	rotx 90
	addz -dz2-0.02


	prism_ 5, mz+0.04,
		sts, 0, 15,
		sts+siv, 0, 15,
		sts+siv, sfbi-se, 79,
		sts+siv - se, sfbi, 15,
		sts, sfbi, 15


	gosub 1000

	del 4

	if subi1 <= 0.000001 then
		if abs(ybw)-sts+ubi > 0 then
			cutend
		endif
	else
		if ybw < sts then
			cutend
		endif
		if ubi > 0 then
			cutend
		endif
	endif

	if subi2 <= 0.000001 then
		if abs(ybw)-sts+ubi > 0 then
			cutend
		endif
	else
		if ybw < sts then
			cutend
		endif
		if ubi > 0 then
			cutend
		endif
	endif


endif

1111:



end




!******************** Fensterbank in inclined wall with jambs
!************************************************************

9000:

stock=sts

r0=abs(WIDO_ORIG_DIST)

if lich=0 then
	aaa=a
else
	aaa=a0
endif


if WIDO_ORIG_DIST<0 then
	if not(WIDO_REVEAL_SIDE) then
		ident=1
		rdpi=sqr(aaa*aaa/4+r0^2)
		rweit=rdpi-WIDO_SILL
		rnah=rweit+WALL_THICKNESS
		mulstat=1
		r01=r0
	else
		ident=2
		rdpi=sqr(aaa*aaa/4+(r0+stock)^2)
		rweit=rdpi+WIDO_SILL-WALL_THICKNESS
		rnah=rweit+WALL_THICKNESS
		mulstat=1
		r01=r0+stock
	endif

	r02=r0+stock
	r03=r0
else
	if not(WIDO_REVEAL_SIDE) then
		ident=3
		rdpi=sqr(aaa*aaa/4+r0^2)
		rweit=rdpi+WIDO_SILL
		rnah=rweit-WALL_THICKNESS
		mulstat=-1
		r01=r0
	else
		ident=4
		rdpi=sqr(aaa*aaa/4+(r0-stock)^2)
		rweit=rdpi-WIDO_SILL+WALL_THICKNESS
		rnah=rweit-WALL_THICKNESS
		mulstat=-1
		r01=r0-stock
	endif

	r02=r0-stock
	r03=r0-stock
endif


if lich=0 then

	if WIDO_ORIG_DIST<0 then
		if not(SYMB_MIRRORED) then
			j1=WIDO_RIGHT_JAMB
			j2=WIDO_LEFT_JAMB
		else
			j2=WIDO_RIGHT_JAMB
			j1=WIDO_LEFT_JAMB
		endif

		alpha=2*atn(a/2/r0)
	else
		if not(SYMB_MIRRORED) then
			j2=WIDO_RIGHT_JAMB
			j1=WIDO_LEFT_JAMB
		else
			j1=WIDO_RIGHT_JAMB
			j2=WIDO_LEFT_JAMB
		endif

		alpha=2*atn(a/2/(r0-stock))
	endif

	if not(WIDO_REVEAL_SIDE) then
		rw=rweit
		rn=rnah
		rwn=rweit
	else
		rn=rweit
		rw=rnah
		rwn=rnah
	endif

	alph1=360*j1/(2*rwn*pi)
	alph2=360*j2/(2*rwn*pi)

	rotx 90
	addy WIDO_ORIG_DIST
	muly mulstat

	cutpolya 4, 1, 0,
		-a, r0,15,
		-a, r02,15,
		 a, r02,15,
		 a, r0,15

	gosub 7001

	cutend

	del 2

else

	if not(WIDO_REVEAL_SIDE) then
		rw=rweit
		rn=rnah
		rwn=rweit
	else
		rn=rweit
		rw=rnah
		rwn=rnah
	endif

	if WIDO_ORIG_DIST<0 then

		if not(SYMB_MIRRORED) then
			j1=WIDO_RIGHT_JAMB
			j2=WIDO_LEFT_JAMB

			a11=a/2-(j1-j2)/2
			a22=a/2+(j1-j2)/2

			alpha1=2*atn(a11/r0)
			alpha2=2*atn(a22/r0)
		else
			j2=WIDO_RIGHT_JAMB
			j1=WIDO_LEFT_JAMB

			a11=a/2+(j1-j2)/2
			a22=a/2-(j1-j2)/2

			alpha1=2*atn(a11/r0)
			alpha2=2*atn(a22/r0)
		endif

		alpha=2*atn(a/2/r0)

		if not(SYMB_MIRRORED) then
			alph1=360*j1/(2*rwn*pi)
			alph2=360*j2/(2*rwn*pi)
		else
			alph1=360*j1/(2*rwn*pi)
			alph2=360*j2/(2*rwn*pi)
		endif

	else

		if not(SYMB_MIRRORED) then
			j2=WIDO_RIGHT_JAMB
			j1=WIDO_LEFT_JAMB

			a11=a/2+(j1-j2)/2
			a22=a/2-(j1-j2)/2

			alpha1=2*atn(a11/(r0-stock))
			alpha2=2*atn(a22/(r0-stock))
		else
			j1=WIDO_RIGHT_JAMB
			j2=WIDO_LEFT_JAMB

			a11=a/2-(j1-j2)/2
			a22=a/2+(j1-j2)/2

			alpha1=2*atn(a11/(r0-stock))
			alpha2=2*atn(a22/(r0-stock))
		endif

		alpha=2*atn(a/2/(r0-stock))

		if not(SYMB_MIRRORED) then
			alph1=360*j1/(2*rwn*pi)
			alph2=360*j2/(2*rwn*pi)
		else
			alph1=360*j1/(2*rwn*pi)
			alph2=360*j2/(2*rwn*pi)
		endif

	endif


	rotx 90
	addy WIDO_ORIG_DIST
	muly mulstat

	cutpolya 4, 1, 0,
		-a, r0,15,
		-a, r02,15,
		 a, r02,15,
		 a, r0,15



	gosub 7002

	cutend

	del 2

endif



!************************
!************************


end

7001:

if feba_i=1 then

	dx1=rn*sin(alpha/2)

	if ident=1 or ident=4 then
		dy1=rn*cos(alpha/2)+ubi
		dxl=dx1+subi2+ubi*tan(alpha/2)
		dxr=dx1+subi1+ubi*tan(alpha/2)
	else
		dy1=rn*cos(alpha/2)-ubi
		dxl=dx1+subi2-ubi*tan(alpha/2)
		dxr=dx1+subi1-ubi*tan(alpha/2)
	endif

	gl=dx1+subi2
	gr=dx1+subi1

	f=rn*cos(alpha/2)
	k=1/tan(alpha/2)
	j=1+k*k

	ppl=-(2*gl+2*f*k)/j
	qql=(gl*gl+f*f-rn*rn)/j

	dxxl=-ppl/2-sqr(ppl/2*ppl/2-qql)
	dyyl=dxxl/tan(alpha/2)

	dxx1l=dx1+subi2-dxxl
	dyy1l=rn*cos(alpha/2)-dyyl

	ppr=-(2*gr+2*f*k)/j
	qqr=(gr*gr+f*f-rn*rn)/j

	dxxr=-ppr/2-sqr(ppr/2*ppr/2-qqr)
	dyyr=dxxr/tan(alpha/2)

	dxx1r=dx1+subi1-dxxr
	dyy1r=rn*cos(alpha/2)-dyyr

	material matfi

	addz -sfbi

	prism_ 9, sfbi,
		-dxr,dy1, 15,
		-dxx1r,dyy1r, 15,
		-dx1,rn*cos(alpha/2), 15,
		-a/2, r03, 15,
		 a/2, r03, 15,
		 dx1,rn*cos(alpha/2),15,
		 dxx1l,dyy1l, 15,
		 dxl, dy1, 15,
		-dxr,dy1, 1


	gosub 1000

	del 1

endif


if feba_a=1 then

	dx1=rw*sin(alpha/2-alph1)
	dx11=rw*sin(alpha/2-alph2)

	if ident=1 or ident=4 then
		dy1=rw*cos(alpha/2-alph1)-uba
		dy11=rw*cos(alpha/2-alph2)-uba
	else
		dy1=rw*cos(alpha/2-alph1)+uba
		dy11=rw*cos(alpha/2-alph2)+uba
	endif

	g=dx1+suba2
	f=rw*cos(alpha/2-alph1)
	k=1/tan(alpha/2-alph1)
	j=1+k*k

	pp=-(2*g+2*f*k)/j
	qq=(g*g+f*f-rw*rw)/j

	dxx=-pp/2-sqr(pp/2*pp/2-qq)
	dxx1=dx1+suba2-dxx

	dyy=dxx/tan(alpha/2-alph1)
	dyy1=rw*cos(alpha/2-alph1)-dyy

	g1=dx11+suba1
	f1=rw*cos(alpha/2-alph2)
	k1=1/tan(alpha/2-alph2)
	j1=1+k1*k1

	pp1=-(2*g1+2*f1*k1)/j1
	qq1=(g1*g1+f1*f1-rw*rw)/j1

	dxx2=-pp1/2-sqr(pp1/2*pp1/2-qq1)
	dxx21=dx11+suba1-dxx2

	dyy2=dxx2/tan(alpha/2-alph2)
	dyy21=rw*cos(alpha/2-alph2)-dyy2

	if ident=1 or ident=4 then
		dx21=dx1+suba2-uba*tan(alpha/2-alph1)
		dx22=dx11+suba1-uba*tan(alpha/2-alph2)
	else
		dx21=dx1+suba2+uba*tan(alpha/2-alph1)
		dx22=dx11+suba1+uba*tan(alpha/2-alph2)
	endif

	material matfa

	if ident=1 or ident=4 then
		gamm=atn((fbh-nh)/(r01-rw*cos(alpha/2-alph1)+uba))
	else
		gamm=atn((fbh-nh)/(r01-rw*cos(alpha/2-alph2)-uba))
	endif

		if iSillType = SILL_SOLID then

			addz -fbh-WIDO_THRES_DEPTH

			addy r01
			rotx -gamm-180

			cutplane

			del 2

				if abs(w) < EPS then

					prism_ 13, fbh,      ! anna1
						dx21,dy1, 15,
						dxx1,dyy1, 15,
						dx1,rw*cos(alpha/2-alph1), 15,
						rdpi*sin(alpha/2-alph1), rdpi*cos(alpha/2-alph1),15,
						a/2, r03+stock, 15,
						a/2, r03, 15,
					   -a/2, r03, 15,
					   -a/2, r03+stock, 15,
					   -rdpi*sin(alpha/2-alph2), rdpi*cos(alpha/2-alph2),wcode1,
					   -dx11,rw*cos(alpha/2-alph2), 15,
					   -dxx21,dyy21, 15,
					   -dx22, dy11, 15,
						dx21,dy1, -1

				else

					prism_ 13, fbh+w,      ! anna1
						dx21,dy1, 15,
						dxx1,dyy1, 15,
						dx1,rw*cos(alpha/2-alph1), 15,
						rdpi*sin(alpha/2-alph1), rdpi*cos(alpha/2-alph1),15,
						a/2, r03+stock, 15,
						a/2, r03, 15,
					   -a/2, r03, 15,
					   -a/2, r03+stock, 15,
					   -rdpi*sin(alpha/2-alph2), rdpi*cos(alpha/2-alph2),wcode1,
					   -dx11,rw*cos(alpha/2-alph2), 15,
					   -dxx21,dyy21, 15,
					   -dx22, dy11, 15,
						dx21,dy1, -1

				endif


			gosub 1000


		else     ! fbanktyp=`Metal`

					r0=abs(WIDO_ORIG_DIST)
					resol WALL_RESOL


					!*****************Direktion_Achse Z****************!


					if WIDO_ORIG_DIST<0 then                             !r_<0!

						if WIDO_REVEAL_SIDE>0 then                              !Flip!

							stock=WIDO_FRAME_THICKNESS
							laibung=WIDO_SILL
							wstaerke=WALL_THICKNESS

							mulstat=1
							rdpi=sqr(a*a/4+(r0+stock)^2)
							r=sqr(a*a/4+r0*r0)
							kdpi=rdpi-r+WIDO_SILL
							rnah=r+kdpi
							rweit=rnah-wstaerke
							obmat=WALL_MAT_B
							unmat=WALL_MAT_A

					k_weitoffset=rnah*mulstat+WIDO_ORIG_DIST-stock

						else

							stock=0
							laibung=-WIDO_SILL
							wstaerke=-WALL_THICKNESS

							mulstat=1
							r=sqr(a*a/4+r0*r0)
							rnah=r+laibung
							rweit=rnah-wstaerke
							obmat=WALL_MAT_B
							unmat=WALL_MAT_A

					k_weitoffset=rweit*mulstat+WIDO_ORIG_DIST

						endif

					else                                           !r_>0

						if WIDO_REVEAL_SIDE>0 then                               !Flip!

							stock=WIDO_FRAME_THICKNESS
							laibung=WIDO_SILL
							wstaerke=WALL_THICKNESS

							mulstat=-1
							r0=r0-stock
							r=sqr(a*a/4+r0*r0)
							rweit=r-laibung
							rnah=rweit+wstaerke
							obmat=WALL_MAT_A
							unmat=WALL_MAT_B

					k_weitoffset=rweit*mulstat+WIDO_ORIG_DIST

						else

							stock=WIDO_FRAME_THICKNESS
							laibung=-WIDO_SILL
							wstaerke=-WALL_THICKNESS

							mulstat=-1
							rdpi=sqr(a*a/4+r0*r0)
							r0=r0-stock
							r=sqr(a*a/4+r0*r0)
							kdpi=rdpi-r+WIDO_SILL
							rweit=r+kdpi
							rnah=rweit+wstaerke
							obmat=WALL_MAT_A
							unmat=WALL_MAT_B

					k_weitoffset=rweit*mulstat+WIDO_ORIG_DIST

						endif

					endif


					alpha=2*atn(a/2/r0)


			zeta=atn(fbh/abs(k_weitoffset))                       ! ***** anna
			paz=tan(zeta)*(fbl-abs(k_weitoffset))                 ! ***** anna
			pax=paz+nh                                            ! ***** anna



			addz -fbh-WIDO_THRES_DEPTH
			addy r01

		if not(WIDO_REVEAL_SIDE) then                 ! ***** anna
			if abs(SYMB_ROTANGLE-180) < EPS then
				rotx -(-zeta-180)
			else
				rotx -zeta-180
			endif
		else
			if abs(SYMB_ROTANGLE-180) < EPS then
				rotx -zeta-180
			else
				rotx zeta-180
			endif
		endif

			cutplane

			del 2

			prism_ 13, fbh+pax,      ! anna1
				dx21,dy1, 15,
				dxx1,dyy1, 15,
				dx1,rw*cos(alpha/2-alph1), 15,
				rdpi*sin(alpha/2-alph1), rdpi*cos(alpha/2-alph1),15,
				a/2, r03+stock, 15,
				a/2, r03, 15,
			   -a/2, r03, 15,
			   -a/2, r03+stock, 15,
			   -rdpi*sin(alpha/2-alph2), rdpi*cos(alpha/2-alph2),wcode1,
			   -dx11,rw*cos(alpha/2-alph2), 15,
			   -dxx21,dyy21, 15,
			   -dx22, dy11, 15,
				dx21,dy1, -1


			gosub 1000

		endif

	del 1

	cutend

endif


return


end

7002:

if feba_i=1 then

	dx1=rn*sin(alpha2/2)
	dx2=rn*sin(alpha1/2)

	if ident=1 or ident=4 then
		dy1=rn*cos(alpha2/2)+ubi
		dy2=rn*cos(alpha1/2)+ubi
		dx11=dx1+subi2+ubi*tan(alpha2/2)
		dx22=dx2+subi1+ubi*tan(alpha1/2)
	else
		dy1=rn*cos(alpha2/2)-ubi
		dy2=rn*cos(alpha1/2)-ubi
		dx11=dx1+subi2-ubi*tan(alpha2/2)
		dx22=dx2+subi1-ubi*tan(alpha1/2)
	endif

	g1=dx1+subi2
	f1=rn*cos(alpha2/2)
	k1=1/tan(alpha2/2)
	j1=1+k1*k1

	pp1=-(2*g1+2*f1*k1)/j1
	qq1=(g1*g1+f1*f1-rn*rn)/j1

	dxx1=-pp1/2-sqr(pp1/2*pp1/2-qq1)
	dyy1=dxx1/tan(alpha2/2)

	dxx11=dx1+subi2-dxx1
	dyy11=rn*cos(alpha2/2)-dyy1

	g2=dx2+subi1
	f2=rn*cos(alpha1/2)
	k2=1/tan(alpha1/2)
	j2=1+k2*k2

	pp2=-(2*g2+2*f2*k2)/j2
	qq2=(g2*g2+f2*f2-rn*rn)/j2

	dxx2=-pp2/2-sqr(pp2/2*pp2/2-qq2)
	dyy2=dxx2/tan(alpha1/2)

	dxx21=dx2+subi1-dxx2
	dyy21=rn*cos(alpha1/2)-dyy2

	material matfi

	addz -sfbi
	addx -(-WIDO_LEFT_JAMB+WIDO_RIGHT_JAMB) / 2

	prism_ 9, sfbi,
		dx11,dy1, 15,
		dxx11,dyy11, 15,
		dx1,rn*cos(alpha2/2), 15,
		a/2+(-WIDO_LEFT_JAMB+WIDO_RIGHT_JAMB) / 2, r03, 15,
	   -a/2+(-WIDO_LEFT_JAMB+WIDO_RIGHT_JAMB) / 2, r03, 15,
	   -dx2,rn*cos(alpha1/2), 15,
	   -dxx21,dyy21, 15,
	   -dx22, dy2, 15,
		dx11,dy1, -1


	gosub 1000

	del 2

endif


if feba_a=1 then

	dx1=rw*sin(alpha2/2-alph1)
	dx11=rw*sin(alpha1/2-alph2)

	if ident=1 or ident=4 then
		dy1=rw*cos(alpha2/2-alph1)-uba
		dy11=rw*cos(alpha1/2-alph2)-uba
	else
		dy1=rw*cos(alpha2/2-alph1)+uba
		dy11=rw*cos(alpha1/2-alph2)+uba
	endif

	g=dx1+suba2
	f=rw*cos(alpha2/2-alph1)
	k=1/tan(alpha2/2-alph1)
	j=1+k*k

	pp=-(2*g+2*f*k)/j
	qq=(g*g+f*f-rw*rw)/j

	dxx=-pp/2-sqr(pp/2*pp/2-qq)
	dxx1=dx1+suba2-dxx

	dyy=dxx/tan(alpha2/2-alph1)
	dyy1=rw*cos(alpha2/2-alph1)-dyy

	g1=dx11+suba1
	f1=rw*cos(alpha1/2-alph2)
	k1=1/tan(alpha1/2-alph2)
	j1=1+k1*k1

	pp1=-(2*g1+2*f1*k1)/j1
	qq1=(g1*g1+f1*f1-rw*rw)/j1

	dxx2=-pp1/2-sqr(pp1/2*pp1/2-qq1)
	dxx21=dx11+suba1-dxx2

	dyy2=dxx2/tan(alpha1/2-alph2)
	dyy21=rw*cos(alpha1/2-alph2)-dyy2

	if ident=1 or ident=4 then
		dx21=dx1+suba2-uba*tan(alpha2/2-alph1)
		dx22=dx11+suba1-uba*tan(alpha1/2-alph2)
	else
		dx21=dx1+suba2+uba*tan(alpha2/2-alph1)
		dx22=dx11+suba1+uba*tan(alpha1/2-alph2)
	endif

	material matfa

	addx -(-WIDO_LEFT_JAMB+WIDO_RIGHT_JAMB) / 2

	if ident=1 or ident=4 then
		gamm=atn((fbh-nh)/(r01-rw*cos(alpha2/2-alph1)+uba))
	else
		gamm=atn((fbh-nh)/(r01-rw*cos(alpha1/2-alph2)-uba))
	endif

		if iSillType = SILL_SOLID then

			addz -fbh-WIDO_THRES_DEPTH
			addy r01
			rotx -gamm-180

			cutplane

			del 2

				if abs(w) < EPS then

					prism_ 13, fbh,        ! anna2
						dx21,dy1, 15,
						dxx1,dyy1, 15,
						dx1,rw*cos(alpha2/2-alph1), 15,
						rdpi*sin(alpha2/2-alph1), rdpi*cos(alpha2/2-alph1),15,
						a/2+(-WIDO_LEFT_JAMB+WIDO_RIGHT_JAMB) / 2, r03+stock, 15,
						a/2+(-WIDO_LEFT_JAMB+WIDO_RIGHT_JAMB) / 2, r03, 15,
					   -a/2+(-WIDO_LEFT_JAMB+WIDO_RIGHT_JAMB) / 2, r03, 15,
					   -a/2+(-WIDO_LEFT_JAMB+WIDO_RIGHT_JAMB) / 2, r03+stock, 15,
					   -rdpi*sin(alpha1/2-alph2), rdpi*cos(alpha1/2-alph2),15,
					   -dx11,rw*cos(alpha1/2-alph2), 15,
					   -dxx21,dyy21, 15,
					   -dx22, dy11, 15,
						dx21,dy1, -1

				 else

					prism_ 13, fbh+w,        ! anna2
						dx21,dy1, 15,
						dxx1,dyy1, 15,
						dx1,rw*cos(alpha2/2-alph1), 15,
						rdpi*sin(alpha2/2-alph1), rdpi*cos(alpha2/2-alph1),15,
						a/2+(-WIDO_LEFT_JAMB+WIDO_RIGHT_JAMB) / 2, r03+stock, 15,
						a/2+(-WIDO_LEFT_JAMB+WIDO_RIGHT_JAMB) / 2, r03, 15,
					   -a/2+(-WIDO_LEFT_JAMB+WIDO_RIGHT_JAMB) / 2, r03, 15,
					   -a/2+(-WIDO_LEFT_JAMB+WIDO_RIGHT_JAMB) / 2, r03+stock, 15,
					   -rdpi*sin(alpha1/2-alph2), rdpi*cos(alpha1/2-alph2),15,
					   -dx11,rw*cos(alpha1/2-alph2), 15,
					   -dxx21,dyy21, 15,
					   -dx22, dy11, 15,
						dx21,dy1, -1

				 endif

			gosub 1000

		else        !  fbanktyp=`Metal`


					r0=abs(WIDO_ORIG_DIST)
					resol WALL_RESOL


					!*****************Direktion_Achse Z****************!


					if WIDO_ORIG_DIST<0 then                             !r_<0!

						if WIDO_REVEAL_SIDE>0 then                              !Flip!

							stock=WIDO_FRAME_THICKNESS
							laibung=WIDO_SILL
							wstaerke=WALL_THICKNESS

							mulstat=1
							rdpi=sqr(a*a/4+(r0+stock)^2)
							r=sqr(a*a/4+r0*r0)
							kdpi=rdpi-r+WIDO_SILL
							rnah=r+kdpi
							rweit=rnah-wstaerke
							obmat=WALL_MAT_B
							unmat=WALL_MAT_A

					k_weitoffset=rnah*mulstat+WIDO_ORIG_DIST-stock

						else

							stock=0
							laibung=-WIDO_SILL
							wstaerke=-WALL_THICKNESS

							mulstat=1
							r=sqr(a*a/4+r0*r0)
							rnah=r+laibung
							rweit=rnah-wstaerke
							obmat=WALL_MAT_B
							unmat=WALL_MAT_A

					k_weitoffset=rweit*mulstat+WIDO_ORIG_DIST

						endif

					else                                           !r_>0

						if WIDO_REVEAL_SIDE>0 then                               !Flip!

							stock=WIDO_FRAME_THICKNESS
							laibung=WIDO_SILL
							wstaerke=WALL_THICKNESS

							mulstat=-1
							r0=r0-stock
							r=sqr(a*a/4+r0*r0)
							rweit=r-laibung
							rnah=rweit+wstaerke
							obmat=WALL_MAT_A
							unmat=WALL_MAT_B

					k_weitoffset=rweit*mulstat+WIDO_ORIG_DIST

						else

							stock=WIDO_FRAME_THICKNESS
							laibung=-WIDO_SILL
							wstaerke=-WALL_THICKNESS

							mulstat=-1
							rdpi=sqr(a*a/4+r0*r0)
							r0=r0-stock
							r=sqr(a*a/4+r0*r0)
							kdpi=rdpi-r+WIDO_SILL
							rweit=r+kdpi
							rnah=rweit+wstaerke
							obmat=WALL_MAT_A
							unmat=WALL_MAT_B

					k_weitoffset=rweit*mulstat+WIDO_ORIG_DIST

						endif

					endif


					alpha=2*atn(a/2/r0)



			zeta=atn(fbh/abs(k_weitoffset))                       ! ***** anna
			paz=tan(zeta)*(fbl-abs(k_weitoffset))                 ! ***** anna
			pax=paz+nh                                            ! ***** anna


			addz -fbh-WIDO_THRES_DEPTH
			addy r01


		if not(WIDO_REVEAL_SIDE) then                 ! ***** anna
			if abs(SYMB_ROTANGLE-180) < EPS then
				rotx -(-zeta-180)
			else
				rotx -zeta-180
			endif
		else
			if abs(SYMB_ROTANGLE-180) < EPS then
				rotx -zeta-180
			else
				rotx zeta-180
			endif
		endif

			cutplane

			del 2

			prism_ 13, fbh+pax,        ! anna2
				dx21,dy1, 15,
				dxx1,dyy1, 15,
				dx1,rw*cos(alpha2/2-alph1), 15,
				rdpi*sin(alpha2/2-alph1), rdpi*cos(alpha2/2-alph1),15,
				a/2+(-WIDO_LEFT_JAMB+WIDO_RIGHT_JAMB) / 2, r03+stock, 15,
				a/2+(-WIDO_LEFT_JAMB+WIDO_RIGHT_JAMB) / 2, r03, 15,
			   -a/2+(-WIDO_LEFT_JAMB+WIDO_RIGHT_JAMB) / 2, r03, 15,
			   -a/2+(-WIDO_LEFT_JAMB+WIDO_RIGHT_JAMB) / 2, r03+stock, 15,
			   -rdpi*sin(alpha1/2-alph2), rdpi*cos(alpha1/2-alph2),15,
			   -dx11,rw*cos(alpha1/2-alph2), 15,
			   -dxx21,dyy21, 15,
			   -dx22, dy11, 15,
				dx21,dy1, -1


			gosub 1000


		endif

	del 2

	cutend

endif

return


end




!************** coors for textures ***********
!*********************************************


1000:

roty 90
vert 0, 0, 0
vert 0.1, 0, 0
vert 0, 0.1, 0
vert 0, 0, 0.1
del 1

coor 2, -1, -2, -3, -4

base

body -1

return






