


if gs_opening_dir_m=1 then mirrored = 0
if gs_opening_dir_m=2 then mirrored = 1


!*********************************** inside/outside materials - opening direction

if not(WIDO_REVEAL_SIDE) and gs_opening_dir_m=1 then pos_def=0
if not(WIDO_REVEAL_SIDE) and gs_opening_dir_m=2 then pos_def=1
if WIDO_REVEAL_SIDE and gs_opening_dir_m=1 then pos_def=1
if WIDO_REVEAL_SIDE and gs_opening_dir_m=2 then pos_def=0

if pos_def=1 then

	!*** flip

	topmat=matsash
	botmat=gs_leaf_matin
	sidemat=matsash
	sidematedge=gs_leaf_matin

	multopmat=matpanes
	mulbotmat=gs_grill_matin
	mulsidemat=matpanes

else

	!*** default placement

	topmat=gs_leaf_matin
	botmat=matsash
	sidemat=gs_leaf_matin
	sidematedge=gs_leaf_matin

	multopmat=gs_grill_matin
	mulbotmat=matpanes
	mulsidemat=gs_grill_matin

endif

if matsash = gs_leaf_matin then
	!*** same materials inside / outside
	nn=1
	mmask=15
else
	!*** different materials inside / outside
	nn=2
	mmask=14
endif

if matpanes = gs_grill_matin then
	!*** same materials inside / outside
	mn=1
	multhick=sps
	mulmmask=15
else
	!*** different materials inside / outside
	mn=2
	multhick=sps/2
	mulmmask=14
endif


sect_fill gs_fillSash, gs_penSash_bg, gs_penSash_fg, gs_sash_pen

pen gs_sash_pen


!** z dist. added at opening
!***************************

if abs(vb) < EPS then z1=ras else z1=sts-vt
if altbau=1 then z1=ras/2



!************* hotspot editing for opening ******
!************************************************

unID=sh_unID
gosub 500


if gs_glass_thk <0 then gs_glass_thk = 0.01

!********************** sash *******************
!***********************************************

material matsash


if vt+ras<sts+EPS or abs(vb) < EPS then

	!********** sash lies beneath the frame, no overlapping
	!******************************************************

	!** right / left

	for i=1 to 2

		cprism_ botmat, topmat, sidemat,
			5, ras,
			-a/2, 0, 10,
			-a/2+rab, rab2, 15,
			-a/2+rab, b-rab1, 10,
			-a/2, b, 15,
			-a/2, 0, -1

		mulx -1

	next i

	del 2

	gosub 100

	!** bottom / top

	for i=1 to 2 step 1

		if i=1 then rab3=rab2
		if i=2 then rab3=rab1

		cprism_ botmat, topmat, sidemat,
			5, ras,
			-a/2, 0, 10,
			-a/2+rab, rab3, 15,
			 a/2-rab, rab3, 10,
			 a/2, 0, 15,
			-a/2, 0, -1

		addy b/2
		muly -1
		addy -b/2

	next i

	del 6

	gosub 200

else

	!********* sash overlaps frame
	!*****************************

	if main=1 then

		!******** bottom overlap exists

		material botmat

		addz sts-vt

		!** top part, left / right

		for i=1 to 2 step 1

			prism_ 5, ras-(sts-vt),
				-a/2, 0, 10,
				-a/2+rab, rab2, 14,
				-a/2+rab, b-rab1, 10,
				-a/2, b, 15,
				-a/2, 0, -1

			mulx -1

		next i

		del 2

		gosub 100

		!** top part, bottom / top

		for i=1 to 2 step 1

			if i=1 then rab3=rab2
			if i=2 then rab3=rab1

			prism_ 5, ras-(sts-vt),
				-a/2, 0, 10,
				-a/2+rab, rab3, 14,
				 a/2-rab, rab3, 10,
				 a/2, 0, 15,
				-a/2, 0, -1

			addy b/2
			muly -1
			addy -b/2

		next i

		del 6

		del 1

		gosub 200

		material topmat

		!** bottom part, left / right

		for i=1 to 2 step 1

			prism_ 5, sts-vt,
				-a/2+vb, vb, 10,
				-a/2+rab, rab2, 11,
				-a/2+rab, b-rab1, 10,
				-a/2+vb, b-vb, 15,
				-a/2+vb, vb, -1

			mulx -1

		next i

		del 2

		gosub 100

		!** bottom part, bottom / top

		for i=1 to 2 step 1

			if i=1 then rab3=rab2
			if i=2 then rab3=rab1

			prism_ 5, sts-vt,
				-a/2+vb, vb, 10,
				-a/2+rab, rab3, 11,
				 a/2-rab, rab3, 10,
				 a/2-vb, vb, 15,
				-a/2+vb, vb, -1

			addy b/2
			muly -1
			addy -b/2

		next i

		del 6

		gosub 200

	else

		!******** no overlap at the bottom

		material botmat

		addz sts-vt

		!** top part, left / right

		for i=1 to 2 step 1

			prism_ 5, ras-(sts-vt),
				-a/2, 0, 10,
				-a/2+rab, rab2, 14,
				-a/2+rab, b-rab1, 10,
				-a/2, b, 15,
				-a/2, 0, -1

			mulx -1

		next i

		del 2

		gosub 100

		!** top part, bottom

		prism_ 7, ras-(sts-vt),
			-a/2, 0, 10,
			-a/2+rab, rab2, 14,
			 a/2-rab, rab2, 10,
			 a/2, 0, 15,
			 a/2-vb, 0, 12,
			-a/2+vb, 0, 13,
			-a/2, 0, -1

		!** top part, top

		prism_ 5, ras-(sts-vt),
			-a/2, b, 15,
			 a/2, b, 10,
			 a/2-rab, b-rab1, 14,
			-a/2+rab, b-rab1, 10,
			-a/2, b, -1

		gosub 200

		del 1

		material topmat

		!** bottom part, left / right

		for i=1 to 2 step 1

			prism_ 5, sts-vt,
				-a/2+vb, 0, 10,
				-a/2+rab, rab2, 11,
				-a/2+rab, b-rab1, 10,
				-a/2+vb, b-vb, 15,
				-a/2+vb, 0, -1

			mulx -1

		next i

		del 2

		gosub 100

		!** bottom part, bottom

		prism_ 5, sts-vt,
			-a/2+vb, 0, 10,
			-a/2+rab, rab2, 11,
			 a/2-rab, rab2, 10,
			 a/2-vb, 0, 11,
			-a/2+vb, 0, -1

		!** bottom part, top

		prism_ 5, sts-vt,
			-a/2+vb, b-vb, 10,
			-a/2+rab, b-rab1, 11,
			 a/2-rab, b-rab1, 10,
			 a/2-vb, b-vb, 15,
			-a/2+vb, b-vb, -1

		gosub 200

	endif

endif




!*************** glass *************
!***********************************


material matglas


!******** glass

if matglas<>0 then

	body 1

	material matglas
	addz ras/2-gs_glass_thk/2
	pen pg

	if lod3D = 5 then	! CHI
		mask = 8
	else
		mask = 7
	endif

	prism_ 4, gs_glass_thk,
		-a/2+rab, rab2, mask,
		 a/2-rab, rab2, mask,
		 a/2-rab, b-rab1, mask,
		-a/2+rab, b-rab1, mask

	body 1

	pen gs_sash_pen
	del 1

endif


!********************* opening lines
!***********************************

if bOplines3d then

	if loc_op=2 or loc_op=3 then
		addx a/2
		if loc_op=2 then
			mulx -1
		else
			addx -a
		endif
		size_a=a
		size_b=b
		otype=1
		gosub 1000
		del 2
	endif

	if loc_op=6 then
		addx -a/2
		size_a=a
		size_b=b
		otype=2
		gosub 1000
		del 1
	endif

	if loc_op=7 then
		addx -a/2
		muly -1
		addy -b
		size_a=a
		size_b=b
		otype=2
		gosub 1000
		del 3
	endif

	if loc_op=4 or loc_op=5 then
		addx -a/2
		size_a=a
		size_b=b
		otype=2
		gosub 1000

		del 1

		size_a=a
		size_b=b
		otype=1

		addx a/2
		if loc_op=4 then
			mulx -1
		else
			addx -a
		endif
		size_a=a
		size_b=b
		otype=1
		gosub 1000
		del 2
	endif

	if loc_op>7 then
		mulx -1
		size_a=a/2
		size_b=b
		otype=11
		gosub 1000

		del 1
		size_a=a/2
		size_b=b
		otype=1
		gosub 1000
	endif

	pen gs_sash_pen

endif





! *************** division bars in main part
!*******************************************

xm=(a-2*rab-sv*spb)/(sv+1)
ym=(b-rab1-rab2-sh*spb)/(sh+1)

material matpanes


!*** vertical mullions
!*********************

addz ras/2-sps/2
addx -a/2+rab
addy rab2

for i=1 to sv+1 step 1
addx xm+spb

if i<sv+EPS then

	if spb>0.001 and sps>0.001 then

		for ii=1 to mn step 1

			gosub 900

			cprism_ mulbotmat, multopmat, mulsidemat,
				5, multhick,
				-spb, 0, mulmmask,
				 0, 0, 15,
				 0, b-rab1-rab2, 15,
				-spb, b-rab1-rab2, mulmmask,
				-spb, 0, -1

			gosub 100

			addz sps/2

		next ii

		del mn

		if matglas<>0 then
			pen pg
			lin_ -spb, 0, sps/2-0.005, -spb, b-rab1-rab2, sps/2-0.005
			lin_ 0, 0, sps/2-0.005,     0, b-rab1-rab2, sps/2-0.005
			lin_ -spb, 0, sps/2+0.005, -spb, b-rab1-rab2, sps/2+0.005
			lin_ 0, 0, sps/2+0.005,     0, b-rab1-rab2, sps/2+0.005
			pen gs_sash_pen
		endif

	else

		lin_ -spb/2, 0, sps/2-0.005,  -spb/2,b-rab1-rab2,sps/2-0.005
		lin_ -spb/2, 0, sps/2+0.005,  -spb/2,b-rab1-rab2,sps/2+0.005

	endif

endif


!*** horizontal mullions
!***********************


for j=1 to sh step 1

	addy ym+spb

	if spb>0.001 and sps>0.001 then

		for ii=1 to mn step 1

			gosub 900

			cprism_ mulbotmat, multopmat, mulsidemat,
				5, multhick,
				-xm-spb,-spb, mulmmask,
				-spb,-spb, 15,
				-spb,0, 15,
				-xm-spb,0, mulmmask,
				-xm-spb,-spb, -1

			gosub 200

			addz sps/2

		next ii

		del mn

		if matglas<>0 then
			pen pg
			lin_ -xm-spb,-spb,sps/2-0.005,-spb,-spb,sps/2-0.005
			lin_ -xm-spb,0,sps/2-0.005,-spb,0,sps/2-0.005
			lin_ -xm-spb,-spb,sps/2+0.005,-spb,-spb,sps/2+0.005
			lin_ -xm-spb,0,sps/2+0.005,-spb,0,sps/2+0.005
			pen gs_sash_pen
		endif

	else

		lin_ -xm-spb,-spb/2,sps/2-0.005,-spb,-spb/2,sps/2-0.005
		lin_ -xm-spb,-spb/2,sps/2+0.005,-spb,-spb/2,sps/2+0.005

	endif

next j
del sh

next i
del sv+3




end

!************** coors for textures ***********
!*********************************************


100:

rotz 90
vert 0, 0, 0
vert 0.1, 0, 0
vert 0, 0.1, 0
vert 0, 0, 0.1
del 1

coor 2, -1, -2, -3, -4

base

body -1

return



200:

vert 0, 0, 0
vert 0.1, 0, 0
vert 0, 0.1, 0
vert 0, 0, 0.1

coor 2, -1, -2, -3, -4

base

body -1

return



500:

!********** Open the sash, hotspot editing **************
!********************************************************

if GLOB_CONTEXT <> 4 & GLOB_CONTEXT <> 6 then

!*********** main sashes

if sash_type="mainsash" then

	if sashnumber<2 then

		if loc_op=2 or loc_op=4 then

			!*** base hotspot
			hotspot -a/2,b/2,ras,unID,gs_op,4+128
			unID=unID+1

			!*** moving hotspot
			hotspot -a/2+(a-a*cos(gs_op))+vt*sin(gs_op),b/2,z1+a*sin(gs_op)+vt*cos(gs_op),
					unID,gs_op,5
			unID=unID+1

			!*** center of angle
			hotspot a/2,b/2,ras,unID,gs_op,6
			unID=unID+1

			!*** reference hotspot
			if mirrored then
				hotspot a/2,b,ras,unID,gs_op,7
			else
				hotspot a/2,-b,ras,unID,gs_op,7
			endif
			unID=unID+1

			addx a/2
			addz z1
			roty gs_op
			addx -a/2
			addz -z1

		endif

		if loc_op=3 or loc_op=5 then

			!*** base hotspot
			hotspot a/2,b/2,ras,unID,gs_op,4+128
			unID=unID+1

			!*** moving hotspot
			hotspot a/2-(a-a*cos(gs_op))-vt*sin(gs_op),b/2,z1+a*sin(gs_op)+vt*cos(gs_op),
					unID,gs_op,5
			unID=unID+1

			!*** center of angle
			hotspot -a/2,b/2,ras,unID,gs_op,6
			unID=unID+1

			!*** reference hotspot
			if mirrored then
				hotspot a/2,-b,ras,unID,gs_op,7
			else
				hotspot a/2,b,ras,unID,gs_op,7
			endif
			unID=unID+1

			addx -a/2
			addz z1
			roty -gs_op
			addx a/2
			addz -z1

		endif

		if loc_op=6 then

			!*** base hotspot
			hotspot 0,b,ras,unID,gs_op,4+128
			unID=unID+1

			!*** moving hotspot
			hotspot 0,b-(b-b*cos(gs_op))-vt*sin(gs_op),z1+b*sin(gs_op)+vt*cos(gs_op),
					unID,gs_op,5
			unID=unID+1

			!*** center of angle
			hotspot 0,0,ras,unID,gs_op,6
			unID=unID+1

			!*** reference hotspot
			hotspot -a,0,ras,unID,gs_op,7
			unID=unID+1

			addz z1
			rotx gs_op
			addz -z1

		endif

		if loc_op=7 then

			!*** base hotspot
			hotspot 0,0,ras,unID,gs_op,4+128
			unID=unID+1

			!*** moving hotspot
			hotspot 0, b-b*cos(gs_op)+vt*sin(gs_op),z1+b*sin(gs_op)+vt*cos(gs_op),unID,gs_op,5
			unID=unID+1

			!*** center of angle
			hotspot 0,b,ras,unID,gs_op,6
			unID=unID+1

			!*** reference hotspot
			hotspot a,b,ras,unID,gs_op,7
			unID=unID+1

			addz z1
			addy b
			rotx -gs_op
			addy -b
			addz -z1

		endif

	else

!!		if sashnumber=2 then

			if loc_op=2 or loc_op=4 then

				!*** base hotspot
				hotspot -a/2,b/2,ras,unID,op2,4+128
				unID=unID+1

				!*** moving hotspot
				hotspot -a/2+(a-a*cos(op2))+vt*sin(op2),b/2,z1+a*sin(op2)+vt*cos(op2),
						unID,op2,5
				unID=unID+1

				!*** center of angle
				hotspot a/2,b/2,ras,unID,op2,6
				unID=unID+1

				!*** reference hotspot
				if mirrored then
					hotspot a/2,b,ras,unID,op2,7
				else
					hotspot a/2,-b,ras,unID,op2,7
				endif
				unID=unID+1

				addx a/2
				addz z1
				roty op2
				addx -a/2
				addz -z1

			endif

			if loc_op=3 or loc_op=5 then

				!*** base hotspot
				hotspot a/2,b/2,ras,unID,op2,4+128
				unID=unID+1

				!*** moving hotspot
				hotspot a/2-(a-a*cos(op2))-vt*sin(op2),b/2,z1+a*sin(op2)+vt*cos(op2),
						unID,op2,5
				unID=unID+1

				!*** center of angle
				hotspot -a/2,b/2,ras,unID,op2,6
				unID=unID+1

				!*** reference hotspot
				hotspot a/2,b,ras,unID,op2,7
				unID=unID+1

				addx -a/2
				addz z1
				roty -op2
				addx a/2
				addz -z1

			endif

			if loc_op=6 then

				!*** base hotspot
				hotspot 0,b,ras,unID,op2,4+128
				unID=unID+1

				!*** moving hotspot
				hotspot 0,b-(b-b*cos(op2))-vt*sin(op2),z1+b*sin(op2)+vt*cos(op2),
						unID,op2,5
				unID=unID+1

				!*** center of angle
				hotspot 0,0,ras,unID,op2,6
				unID=unID+1

				!*** reference hotspot
				hotspot -a,0,ras,unID,op2,7
				unID=unID+1

				addz z1
				rotx op2
				addz -z1

			endif

			if loc_op=7 then

				!*** base hotspot
				hotspot 0,0,ras,unID,op2,4+128
				unID=unID+1

				!*** moving hotspot
				hotspot 0, b-b*cos(op2)+vt*sin(op2),z1+b*sin(op2)+vt*cos(op2),
						unID,op2,5
				unID=unID+1

				!*** center of angle
				hotspot 0,b,ras,unID,op2,6
				unID=unID+1

				!*** reference hotspot
				hotspot a,b,ras,unID,op2,7
				unID=unID+1

				addz z1
				addy b
				rotx -op2
				addy -b
				addz -z1

			endif

	endif

endif


!*********** transom sashes

if sash_type="transom" then

	if sashnumber<2 then

		if loc_op=2 or loc_op=4 then

			!*** base hotspot
			hotspot -a/2,b/2,ras,unID,gs_opt,4+128
			unID=unID+1

			!*** moving hotspot
			hotspot -a/2+(a-a*cos(gs_opt))+vt*sin(gs_opt),b/2,z1+a*sin(gs_opt)+vt*cos(gs_opt),
			unID,gs_opt,5
			unID=unID+1

			!*** center of angle
			hotspot a/2,b/2,ras,unID,gs_opt,6
			unID=unID+1

			!*** reference hotspot
			if mirrored then
				hotspot a/2,b,ras,unID,gs_opt,7
			else
				hotspot a/2,-b,ras,unID,gs_opt,7
			endif
			unID=unID+1

			addx a/2
			addz z1
			roty gs_opt
			addx -a/2
			addz -z1

		endif

		if loc_op=3 or loc_op=5 then

			!*** base hotspot
			hotspot a/2,b/2,ras,unID,gs_opt,4+128
			unID=unID+1

			!*** moving hotspot
			hotspot a/2-(a-a*cos(gs_opt))-vt*sin(gs_opt),b/2,z1+a*sin(gs_opt)+vt*cos(gs_opt),
					unID,gs_opt,5
			unID=unID+1

			!*** center of angle
			hotspot -a/2,b/2,ras,unID,gs_opt,6
			unID=unID+1

			!*** reference hotspot
			if mirrored then
				hotspot a/2,-b,ras,unID,gs_opt,7
			else
				hotspot a/2, b,ras,unID,gs_opt,7
			endif
			unID=unID+1

			addx -a/2
			addz z1
			roty -gs_opt
			addx a/2
			addz -z1

		endif

		if loc_op=6 then

			!*** base hotspot
			hotspot 0,b,ras,unID,gs_opt,4+128
			unID=unID+1

			!*** moving hotspot
			hotspot 0,b-(b-b*cos(gs_opt))-vt*sin(gs_opt),z1+b*sin(gs_opt)+vt*cos(gs_opt),unID,gs_opt,5
			unID=unID+1

			!*** center of angle
			hotspot 0,0,ras,unID,gs_opt,6
			unID=unID+1

			!*** reference hotspot
			if mirrored then
				hotspot a,0,ras,unID,gs_opt,7
			else
				hotspot -a,0,ras,unID,gs_opt,7
			endif
			unID=unID+1

			addz z1
			rotx gs_opt
			addz -z1

		endif

		if loc_op=7 then

			!*** base hotspot
			hotspot 0,0,ras,unID,gs_opt,4+128
			unID=unID+1

			!*** moving hotspot
			hotspot 0, b-b*cos(gs_opt)+vt*sin(gs_opt),z1+b*sin(gs_opt)+vt*cos(gs_opt),unID,gs_opt,5
			unID=unID+1

			!*** center of angle
			hotspot 0,b,ras,unID,gs_opt,6
			unID=unID+1

			!*** reference hotspot
			hotspot a,b,ras,unID,gs_opt,7
			unID=unID+1

			addz z1
			addy b
			rotx -gs_opt
			addy -b
			addz -z1

		endif

	else

!!		if sashnumber=2 then

			if loc_op=2 or loc_op=4 then

				!*** base hotspot
				hotspot -a/2,b/2,ras,unID,opt2,4+128
				unID=unID+1

				!*** moving hotspot
				hotspot -a/2+(a-a*cos(opt2))+vt*sin(opt2),b/2,z1+a*sin(opt2)+vt*cos(opt2),
						unID,opt2,5
				unID=unID+1

				!*** center of angle
				hotspot a/2,b/2,ras,unID,opt2,6
				unID=unID+1

				!*** reference hotspot
				if mirrored then
					hotspot a/2,b,ras,unID,opt2,7
				else
					hotspot a/2,-b,ras,unID,opt2,7
				endif
				unID=unID+1

				addx a/2
				addz z1
				roty opt2
				addx -a/2
				addz -z1

			endif

			if loc_op=3 or loc_op=5 then

				!*** base hotspot
				hotspot a/2,b/2,ras,unID,opt2,4+128
				unID=unID+1

				!*** moving hotspot
				hotspot a/2-(a-a*cos(opt2))-vt*sin(opt2),b/2,z1+a*sin(opt2)+vt*cos(opt2),
						unID,opt2,5
				unID=unID+1

				!*** center of angle
				hotspot -a/2,b/2,ras,unID,opt2,6
				unID=unID+1

				!*** reference hotspot
				hotspot a/2,b,ras,unID,opt2,7
				unID=unID+1

				addx -a/2
				addz z1
				roty -opt2
				addx a/2
				addz -z1

			endif

			if loc_op=6 then

				!*** base hotspot
				hotspot 0,b,ras,unID,opt2,4+128
				unID=unID+1

				!*** moving hotspot
				hotspot 0,b-(b-b*cos(opt2))-vt*sin(opt2),z1+b*sin(opt2)+vt*cos(opt2),
						unID,opt2,5
				unID=unID+1

				!*** center of angle
				hotspot 0,0,ras,unID,opt2,6
				unID=unID+1

				!*** reference hotspot
				hotspot -a,0,ras,unID,opt2,7
				unID=unID+1

				addz z1
				rotx opt2
				addz -z1

			endif

			if loc_op=7 then

				!*** base hotspot
				hotspot 0,0,ras,unID,opt2,4+128
				unID=unID+1

				!*** moving hotspot
				hotspot 0, b-b*cos(opt2)+vt*sin(opt2),z1+b*sin(opt2)+vt*cos(opt2),
						unID,opt2,5
				unID=unID+1

				!*** center of angle
				hotspot 0,b,ras,unID,opt2,6
				unID=unID+1

				!*** reference hotspot
				hotspot a,b,ras,unID,opt2,7
				unID=unID+1

				addz z1
				addy b
				rotx -opt2
				addy -b
				addz -z1

			endif

	endif

endif


!*********** bottom sashes

if sash_type="bottom" then

	if sashnumber<2 then

		if loc_op=2 or loc_op=4 then

			!*** base hotspot
			hotspot -a/2,b/2,ras,unID,gs_opb,4+128
			unID=unID+1

			!*** moving hotspot
			hotspot -a/2+(a-a*cos(gs_opb))+vt*sin(gs_opb),b/2,z1+a*sin(gs_opb)+vt*cos(gs_opb),
			unID,gs_opb,5
			unID=unID+1

			!*** center of angle
			hotspot a/2,b/2,ras,unID,gs_opb,6
			unID=unID+1

			!*** reference hotspot
			if mirrored then
				hotspot a/2,b,ras,unID,gs_opb,7
			else
				hotspot a/2,-b,ras,unID,gs_opb,7
			endif
			unID=unID+1

			addx a/2
			addz z1
			roty gs_opb
			addx -a/2
			addz -z1

		endif

		if loc_op=3 or loc_op=5 then

			!*** base hotspot
			hotspot a/2,b/2,ras,unID,gs_opb,4+128
			unID=unID+1

			!*** moving hotspot
			hotspot a/2-(a-a*cos(gs_opb))-vt*sin(gs_opb),b/2,z1+a*sin(gs_opb)+vt*cos(gs_opb),
					unID,gs_opb,5
			unID=unID+1

			!*** center of angle
			hotspot -a/2,b/2,ras,unID,gs_opb,6
			unID=unID+1

			!*** reference hotspot
			if mirrored then
				hotspot a/2,-b,ras,unID,gs_opb,7
			else
				hotspot a/2, b,ras,unID,gs_opb,7
			endif
			unID=unID+1

			addx -a/2
			addz z1
			roty -gs_opb
			addx a/2
			addz -z1

		endif

		if loc_op=6 then

			!*** base hotspot
			hotspot 0,b,ras,unID,gs_opb,4+128
			unID=unID+1

			!*** moving hotspot
			hotspot 0,b-(b-b*cos(gs_opb))-vt*sin(gs_opb),z1+b*sin(gs_opb)+vt*cos(gs_opb),
					unID,gs_opb,5
			unID=unID+1

			!*** center of angle
			hotspot 0,0,ras,unID,gs_opb,6
			unID=unID+1

			!*** reference hotspot
			if mirrored then
				hotspot a,0,ras,unID,gs_opb,7
			else
				hotspot -a,0,ras,unID,gs_opb,7
			endif
			unID=unID+1

			addz z1
			rotx gs_opb
			addz -z1

		endif

		if loc_op=7 then

			!*** base hotspot
			hotspot 0,0,ras,unID,gs_opb,4+128
			unID=unID+1

			!*** moving hotspot
			hotspot 0, b-b*cos(gs_opb)+vt*sin(gs_opb),z1+b*sin(gs_opb)+vt*cos(gs_opb),unID,gs_opb,5
			unID=unID+1

			!*** center of angle
			hotspot 0,b,ras,unID,gs_opb,6
			unID=unID+1

			!*** reference hotspot
			if mirrored then
				hotspot -a,b,ras,unID,gs_opb,7
			else
				hotspot a,b,ras,unID,gs_opb,7
			endif
			unID=unID+1

			addz z1
			addy b
			rotx -gs_opb
			addy -b
			addz -z1

		endif

	else

!!		if sashnumber=2 then

			if loc_op=2 or loc_op=4 then

				!*** base hotspot
				hotspot -a/2,b/2,ras,unID,opb2,4+128
				unID=unID+1
!!2 szarny alsotransom
				!*** moving hotspot
				hotspot -a/2+(a-a*cos(opb2))+vt*sin(opb2),b/2,z1+a*sin(opb2)+vt*cos(opb2),
						unID,opb2,5
				unID=unID+1

				!*** center of angle
				hotspot a/2,b/2,ras,unID,opb2,6
				unID=unID+1

				!*** reference hotspot
				if mirrored=0 then
					hotspot a/2,b,ras,unID,opb2,7
				else
					hotspot a/2,-b,ras,unID,opb2,7
				endif
				unID=unID+1

				addx a/2
				addz z1
				roty opb2
				addx -a/2
				addz -z1

			endif

			if loc_op=3 or loc_op=5 then

				!*** base hotspot
				hotspot a/2,b/2,ras,unID,opb2,4+128
				unID=unID+1

				!*** moving hotspot
				hotspot a/2-(a-a*cos(opb2))-vt*sin(opb2),b/2,z1+a*sin(opb2)+vt*cos(opb2),
						unID,opb2,5
				unID=unID+1

				!*** center of angle
				hotspot -a/2,b/2,ras,unID,opb2,6
				unID=unID+1

				!*** reference hotspot
				hotspot a/2,-b,ras,unID,opb2,7
				unID=unID+1

				addx -a/2
				addz z1
				roty -opb2
				addx a/2
				addz -z1

			endif

			if loc_op=6 then

				!*** base hotspot
				hotspot 0,b,ras,unID,opb2,4+128
				unID=unID+1

				!*** moving hotspot
				hotspot 0,b-(b-b*cos(opb2))-vt*sin(opb2),z1+b*sin(opb2)+vt*cos(opb2),
						unID,opb2,5
				unID=unID+1

				!*** center of angle
				hotspot 0,0,ras,unID,opb2,6
				unID=unID+1

				!*** reference hotspot
				hotspot a,0,ras,unID,opb2,7
				unID=unID+1

				addz z1
				rotx opb2
				addz -z1

			endif

			if loc_op=7 then

				!*** base hotspot
				hotspot 0,0,ras,unID,opb2,4+128
				unID=unID+1

				!*** moving hotspot
				hotspot 0, b-b*cos(opb2)+vt*sin(opb2),z1+b*sin(opb2)+vt*cos(opb2),
						unID,opb2,5
				unID=unID+1

				!*** center of angle
				hotspot 0,b,ras,unID,opb2,6
				unID=unID+1

				!*** reference hotspot
				hotspot -a,b,ras,unID,opb2,7
				unID=unID+1

				addz z1
				addy b
				rotx -opb2
				addy -b
				addz -z1

			endif

	endif

endif


!*********** side sashes

if sash_type="side" then

		!*** base hotspot
		hotspot -a/2,b/2,ras,unID,gs_ops,4+128
		unID=unID+1

		!*** moving hotspot
		hotspot -a/2+(a-a*cos(gs_ops))+vt*sin(gs_op),b/2,z1+a*sin(gs_ops)+vt*cos(gs_ops),
		unID,gs_ops,5
		unID=unID+1

		!*** center of angle
		hotspot a/2,b/2,ras,unID,gs_ops,6
		unID=unID+1

		!*** reference hotspot
		if mirrored then
			hotspot a/2,b,ras,unID,gs_ops,7
		else
			hotspot a/2,-b,ras,unID,gs_ops,7
		endif
		unID=unID+1

		addx a/2
		addz z1
		roty gs_ops
		addx -a/2
		addz -z1

endif

if sash_type="side2" then

		!*** base hotspot
		hotspot -a/2,b/2,ras,unID,ops2,4+128
		unID=unID+1

		!*** moving hotspot
		hotspot -a/2+(a-a*cos(ops2))+vt*sin(gs_op),b/2,z1+a*sin(ops2)+vt*cos(ops2),
		unID,ops2,5
		unID=unID+1

		!*** center of angle
		hotspot a/2,b/2,ras,unID,ops2,6
		unID=unID+1

		!*** reference hotspot
		hotspot -a/2,-b,ras,unID,ops2,7
		unID=unID+1

		addx a/2
		addz z1
		roty ops2
		addx -a/2
		addz -z1

endif

endif

return




900:

if ii=1 then
	sidemat=botmat
	mulsidemat=multopmat
	if gs_leaf_mat1 = gs_leaf_matin then mmask=15 else mmask=11
	if gs_leaf_mat1 = gs_leaf_matin then mmask2=13 else mmask2=9
	if matpanes = gs_grill_matin then mulmmask=15 else mulmmask=11
else
	sidemat=topmat
	mulsidemat=mulbotmat
	mmask=14
	mmask2=12
	mulmmask=14
endif

return

end

1000:
	if otype = 1 then iOpeningType = 4	!side hung mirrored
	if otype = 2 then iOpeningType = 7	!bottom hung

	addz -0.0001
	call "OpeningLines" parameters a = size_a,
				b					= size_b,
				frameThickness		= ras+0.0002,
				iOpeningType		= iOpeningType,
				opLineType3dIn		= 4,
				opLineType3dOut		= opLineType3dOut,
				gs_opLinePen		= gs_opLinePen,
				gs_opline_style_m	= gs_opline_style_m
	add vb, vb, 0
	call "OpeningLines" parameters a = size_a - vb*2,
				b					= size_b - vb*2,
				frameThickness		= ras+0.0002,
				iOpeningType		= iOpeningType,
				opLineType3dIn		= opLineType3dIn,
				opLineType3dOut		= 4,
				gs_opLinePen		= gs_opLinePen,
				gs_opline_style_m	= gs_opline_style_m
	del 2
return


