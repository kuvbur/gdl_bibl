
! Contact person: <NJ>
!
!! ==============================================================================
!! Visualize Wallhole Points
!! ==============================================================================
!
!if WIDO_REVEAL_SIDE then
!	add2 0,-WIDO_FRAME_THICKNESS
!else
!	mul2 1,-1
!endif
!
!! Left Reveal Points
!pen 20
!for iii = 1 to iRevealPointsIdx[6]
!	circle2 leftWallholeRevealPnts[iii][1], leftWallholeRevealPnts[iii][2], 0.008
!	hotspot2 leftWallholeRevealPnts[iii][1], leftWallholeRevealPnts[iii][2], ui : ui = ui + 1
!next iii
!for iii = 1 to iRevealPointsIdx[6] - 1
!	line2 leftWallholeRevealPnts[iii][1],   leftWallholeRevealPnts[iii][2],
!		  leftWallholeRevealPnts[iii+1][1], leftWallholeRevealPnts[iii+1][2]
!next iii
!
!! Left Plaster Points
!pen 6
!for iii = iRevealPointsIdx[7] to iRevealPointsIdx[10]
!	circle2 leftWallholeRevealPnts[iii][1], leftWallholeRevealPnts[iii][2], 0.006
!	hotspot2 leftWallholeRevealPnts[iii][1], leftWallholeRevealPnts[iii][2], ui : ui = ui + 1
!next iii
!for iii = iRevealPointsIdx[7] to iRevealPointsIdx[10] - 1
!	line2 leftWallholeRevealPnts[iii][1],   leftWallholeRevealPnts[iii][2],
!		  leftWallholeRevealPnts[iii+1][1], leftWallholeRevealPnts[iii+1][2]
!next iii
!
!! Right Reveal Points
!pen 4
!for iii = 1 to iRevealPointsIdx[16]
!	circle2 rightWallholeRevealPnts[iii][1], rightWallholeRevealPnts[iii][2], 0.008
!	hotspot2 rightWallholeRevealPnts[iii][1], rightWallholeRevealPnts[iii][2], ui : ui = ui + 1
!next iii
!for iii = 1 to iRevealPointsIdx[16] - 1
!	line2 rightWallholeRevealPnts[iii][1],   rightWallholeRevealPnts[iii][2],
!		  rightWallholeRevealPnts[iii+1][1], rightWallholeRevealPnts[iii+1][2]
!next iii
!
!! Right Plaster Points
!pen 15
!for iii = iRevealPointsIdx[17] to iRevealPointsIdx[20]
!	circle2 rightWallholeRevealPnts[iii][1], rightWallholeRevealPnts[iii][2], 0.006
!	hotspot2 rightWallholeRevealPnts[iii][1], rightWallholeRevealPnts[iii][2], ui : ui = ui + 1
!next iii
!for iii = iRevealPointsIdx[17] to iRevealPointsIdx[20] - 1
!	line2 rightWallholeRevealPnts[iii][1],   rightWallholeRevealPnts[iii][2],
!		  rightWallholeRevealPnts[iii+1][1], rightWallholeRevealPnts[iii+1][2]
!next iii
!
!del 1
!
!
!! ==============================================================================
!! Visualize WallFrame Points
!! ==============================================================================
!
!if WIDO_REVEAL_SIDE then
!	add2 0,-WIDO_FRAME_THICKNESS
!else
!	mul2 1,-1
!endif
!
!! Left Reveal Points
!pen 20
!for iii = 1 to iRevealPointsIdx[6]
!	circle2 leftWallFrameRevealPnts[iii][1], leftWallFrameRevealPnts[iii][2], 0.008
!	hotspot2 leftWallFrameRevealPnts[iii][1], leftWallFrameRevealPnts[iii][2], ui : ui = ui + 1
!next iii
!for iii = 1 to iRevealPointsIdx[6] - 1
!	line2 leftWallFrameRevealPnts[iii][1],   leftWallFrameRevealPnts[iii][2],
!		  leftWallFrameRevealPnts[iii+1][1], leftWallFrameRevealPnts[iii+1][2]
!next iii
!
!! Left Plaster Points
!pen 6
!for iii = iRevealPointsIdx[7] to iRevealPointsIdx[10]
!	circle2 leftWallFrameRevealPnts[iii][1], leftWallFrameRevealPnts[iii][2], 0.006
!	hotspot2 leftWallFrameRevealPnts[iii][1], leftWallFrameRevealPnts[iii][2], ui : ui = ui + 1
!next iii
!for iii = iRevealPointsIdx[7] to iRevealPointsIdx[10] - 1
!	line2 leftWallFrameRevealPnts[iii][1],   leftWallFrameRevealPnts[iii][2],
!		  leftWallFrameRevealPnts[iii+1][1], leftWallFrameRevealPnts[iii+1][2]
!next iii
!
!! Right Reveal Points
!pen 4
!for iii = 1 to iRevealPointsIdx[16]
!	circle2 rightWallFrameRevealPnts[iii][1], rightWallFrameRevealPnts[iii][2], 0.008
!	hotspot2 rightWallFrameRevealPnts[iii][1], rightWallFrameRevealPnts[iii][2], ui : ui = ui + 1
!next iii
!for iii = 1 to iRevealPointsIdx[16] - 1
!	line2 rightWallFrameRevealPnts[iii][1],   rightWallFrameRevealPnts[iii][2],
!		  rightWallFrameRevealPnts[iii+1][1], rightWallFrameRevealPnts[iii+1][2]
!next iii
!
!! Right Plaster Points
!pen 15
!for iii = iRevealPointsIdx[17] to iRevealPointsIdx[20]
!	circle2 rightWallFrameRevealPnts[iii][1], rightWallFrameRevealPnts[iii][2], 0.006
!	hotspot2 rightWallFrameRevealPnts[iii][1], rightWallFrameRevealPnts[iii][2], ui : ui = ui + 1
!next iii
!for iii = iRevealPointsIdx[17] to iRevealPointsIdx[20] - 1
!	line2 rightWallFrameRevealPnts[iii][1],   rightWallFrameRevealPnts[iii][2],
!		  rightWallFrameRevealPnts[iii+1][1], rightWallFrameRevealPnts[iii+1][2]
!next iii
!
!del 1


!! =============================================================================
!! Center Hotspot
!! =============================================================================
!
!if curvedWall then
!	if WIDO_REVEAL_SIDE exor SYMB_ROTANGLE < EPS then
!		radSill = sqr(A^2 / 4 + WOD^2) - WIDO_SILL
!		radBoard = radSill + WALL_THICKNESS
!	else
!		radSill = sqr(A^2 / 4 + WOD^2) + WIDO_SILL
!		radBoard = radSill - WALL_THICKNESS
!	endif
!	if wallIsLeft then
!		if WIDO_REVEAL_SIDE then
!			py = -radSill * cos(leftAlfa) + WOD - WIDO_FRAME_THICKNESS
!		else
!			py = radSill * cos(leftAlfa) - WOD
!		endif
!	else
!		if WIDO_REVEAL_SIDE then
!			py = radBoard * cos(leftAlfa) + WOD - WIDO_FRAME_THICKNESS
!		else
!			py = -radBoard * cos(leftAlfa) - WOD
!		endif
!	endif
!else
!	if AC_WallType = 2 then
!		idx1 = AC_WindowInWallContour[1]
!		idx2 = AC_WindowInWallContour[2]
!		if idx1 > 0 & idx2 > 0 then
!			py = (AC_WallContourPolygon[idx1][2] + AC_WallContourPolygon[idx2][2]) / 2
!		else
!			py = 0
!			if idx1 > 0 then py = AC_WallContourPolygon[idx1][2]
!			if idx2 > 0 then py = AC_WallContourPolygon[idx2][2]
!		endif
!	else
!		if bInclinedWall | wallIsLeft then
!			if WIDO_REVEAL_SIDE then
!				py = -WIDO_SILL - WIDO_FRAME_THICKNESS
!			else
!				py = WIDO_SILL
!			endif
!		else
!			if WIDO_REVEAL_SIDE then
!				py = WALL_THICKNESS - WIDO_SILL - WIDO_FRAME_THICKNESS
!			else
!				py = WIDO_SILL - WALL_THICKNESS
!			endif
!		endif
!	endif
!endif
!
!hotspot2 0,py, 9999


! =============================================================================
! 2D detail level settings
! =============================================================================

! Detail values of Fixtures and Fittings
!lod2D_SillBoard: 0-Off, 1-On
!lod2D_Treshold	: 0-Off, 1-Simple, 2-Detailed
!lod2D_Casing	: 0-Off, 1-On
!lod2D_sunShade	: 0-Off, 1-Simple, 2-Detailed

lod2D_SillBoard		= 0
lod2D_Treshold		= 0
lod2D_Casing		= 0
lod2D_sunShade		= 0
lod2D_CornerColumn	= 1 + 2 * not(bDWSymbolAtMiddle | bDWSymbolAtMiddle2)		! Corner column is just one line when symbol at middle
bOneLineSymbolin2D	= 0

if iLoD2D = SYMBW_S_1LINE then 					! Simple - One Line --> INT 200
	if bGetMVOValueDlev2D and bOneLineSymbolinMVO then bOneLineSymbolin2D = 1		!!! Histroic and Bay and Bow Windows
	lod2D_SillBoard = 0
	lod2D_Treshold 	= 0
	lod2D_Casing 	= 0
	lod2D_sunShade 	= 0
endif

if iLoD2D = SYMBW_S_CENTERLINE then 			! Simple - Center Line --> SWE 200
	if bGetMVOValueDlev2D and bOneLineSymbolinMVO then bOneLineSymbolin2D = 1		!!! Histroic and Bay and Bow Windows
	lod2D_SillBoard = 0
	lod2D_Treshold 	= 0
	lod2D_Casing 	= 0
	lod2D_sunShade 	= 0
endif

if iLoD2D = SYMBW_S_2LINE_ACC then 				! Simple - Two Lines
	lod2D_SillBoard = 1
	lod2D_Treshold	= 1
	lod2D_Casing	= 0
	lod2D_sunShade	= 1

	! Drawing Sill and Board instead of Casing
	if not (gs_sill_outside) and gs_trim_outside then
		gs_sill_outside = 1
		gs_sill_nosing 		= gs_trim_thk_out
		gs_sill_ovhg_left 	= gs_tw_left_out - gs_trim_width_out + gs_trim_offs_out
		gs_sill_ovhg_right 	= gs_tw_right_out - gs_trim_width_out + gs_trim_offs_out
	endif
	if not (gs_board_inside) and gs_trim_inside then
		gs_board_inside = 1
		gs_board_nosing 	= gs_trim_thk_in
		gs_board_ovhg_left 	= gs_tw_left_in - gs_trim_width_in + gs_trim_offs_in
		gs_board_ovhg_right = gs_tw_right_in - gs_trim_width_in + gs_trim_offs_in
	endif
endif

if iLoD2D = SYMBW_M_2LINE_GLASS then 				! Middle - without acc
	lod2D_SillBoard = 1
	lod2D_Treshold	= 1
	lod2D_Casing	= 0
	lod2D_sunShade	= 1
endif

if iLoD2D = SYMBW_M_2LINE_NOGLASS then 			! Middle - with acc --> INT 100
	if bShowSillBoardIn2D100NED then
		lod2D_SillBoard = 1
	else
		lod2D_SillBoard = 0
	endif
	lod2D_Treshold	= 1
	lod2D_Casing	= 0
	lod2D_sunShade	= 1

	! Drawing Sill and Board instead of Casing
	if not (gs_sill_outside) and gs_trim_outside then
		gs_sill_outside = 1
		gs_sill_nosing 		= gs_trim_thk_out
		gs_sill_ovhg_left 	= gs_tw_left_out  - gs_trim_width_out + gs_trim_offs_out
		gs_sill_ovhg_right 	= gs_tw_right_out - gs_trim_width_out + gs_trim_offs_out
	endif
	if not (gs_board_inside) and gs_trim_inside then
		gs_board_inside = 1
		gs_board_nosing 	= gs_trim_thk_in
		gs_board_ovhg_left 	= gs_tw_left_in  - gs_trim_width_in + gs_trim_offs_in
		gs_board_ovhg_right = gs_tw_right_in - gs_trim_width_in + gs_trim_offs_in
	endif
endif

if	iLoD2D = SYMBW_D_SGLASS |\
	iLoD2D = SYMBW_D_REBATEONGLASS |\
	iLoD2D = SYMBW_D_2GLASS then 			! INT 50, NLD 50, DAN 20
	lod2D_SillBoard = 1
	lod2D_Treshold	= 2
	if bNotShowCasingIn2DNOR then
		lod2D_Casing	= bMVOCasing2D
	else
		lod2D_Casing	= 1
	endif
	lod2D_sunShade	= 2
endif

if iLoD2D = SYMBW_M_FRAMESASH then					! Middle NLD
	if bShowSillBoardIn2D100NED then
		lod2D_SillBoard = 1
	else
		lod2D_SillBoard = 0
	endif
	lod2D_Treshold	= 0
	lod2D_Casing	= 0
	lod2D_sunShade	= 0
endif

if iLoD2D = SYMBW_S_2LINE then					! Chinese Simple
	lod2D_SillBoard	= 0
	lod2D_Treshold	= 0
	lod2D_Casing	= 0
	lod2D_sunShade	= 0
endif

if iLoD2D = SYMBW_D_2LINE_HS then				! Chinese Detailed
	lod2D_SillBoard	= 0
	lod2D_Treshold	= 0
	lod2D_Casing	= 0
	lod2D_sunShade	= 0
endif

if iLoD2D = SYMBW_SCALESENS then							! Scale sensitive
	if GLOB_SCALE > 150 then
		iLoD2D = SYMBW_S_1LINE
		if bCenterLineInSimple2D then iLoD2D = SYMBW_S_CENTERLINE
		lod2D_SillBoard = 0
		lod2D_Treshold 	= 0
		lod2D_Casing 	= 0
		lod2D_sunShade 	= 0
	endif
	if GLOB_SCALE <= 150 and GLOB_SCALE > 75 then
		iLoD2D = SYMBW_M_2LINE_NOGLASS
		if bShowSashInMiddle2D then		iLoD2D = SYMBW_M_FRAMESASH			! Middle --> NLD 100
		if bShowGlassInMiddle2D then	iLoD2D = SYMBW_M_2LINE_GLASS		! Middle --> SWE 100
		if bShowSillBoardIn2D100NED then
			lod2D_SillBoard = 1
		else
			lod2D_SillBoard = 0
		endif
		lod2D_Treshold	= 1
		lod2D_Casing	= 0
		lod2D_sunShade	= 1
		! Drawing Sill and Board instead of Casing
		if not (gs_sill_outside) and gs_trim_outside then
			gs_sill_outside = 1
			gs_sill_nosing 		= gs_trim_thk_out
			gs_sill_ovhg_left 	= gs_tw_left_out  - gs_trim_width_out + gs_trim_offs_out
			gs_sill_ovhg_right 	= gs_tw_right_out - gs_trim_width_out + gs_trim_offs_out
		endif
		if not (gs_board_inside) and gs_trim_inside then
			gs_board_inside = 1
			gs_board_nosing 	= gs_trim_thk_in
			gs_board_ovhg_left 	= gs_tw_left_in  - gs_trim_width_in + gs_trim_offs_in
			gs_board_ovhg_right = gs_tw_right_in - gs_trim_width_in + gs_trim_offs_in
		endif
	endif
	if GLOB_SCALE <= 75 then
		iLoD2D = SYMBW_D_SGLASS
		if bShowRebateOnFixGlass then	iLoD2D = SYMBW_D_REBATEONGLASS		! Detailed --> NLD 50
		lod2D_SillBoard = 1
		lod2D_Treshold	= 2
		lod2D_Casing	= 1
		lod2D_sunShade	= 2
	endif
	if bNotShowCasingIn2DNOR then
		if GLOB_SCALE > 49 then
			lod2D_Casing	= 0
		else
			lod2D_Casing	= 1
		endif
	endif
endif

if lod2D_SillBoard = 0 | lod2D_Casing = 0 then
	if (lod2D_SillBoard = 0 & bDrawSill) | (lod2D_Casing = 0 & bDrawOutsideTrim) then
		if iWallContourLine = WALL_CONTOUR_OFF		then iWallContourLine = WALL_CONTOUR_OUTSIDE
		if iWallContourLine = WALL_CONTOUR_INSIDE	then iWallContourLine = WALL_CONTOUR_BOTHSIDES
	endif
	if (lod2D_SillBoard = 0 & bDrawBoard) | (lod2D_Casing = 0 & bDrawInsideTrim) then
		if iWallContourLine = WALL_CONTOUR_OFF		then iWallContourLine = WALL_CONTOUR_INSIDE
		if iWallContourLine = WALL_CONTOUR_OUTSIDE	then iWallContourLine = WALL_CONTOUR_BOTHSIDES
	endif
endif


! =============================================================================
! Request Globals for Opening Lines and Hotspots
! =============================================================================

gs_opLinePen			= 1
gs_iSwingType			= 1
gs_swingLineType		= 1

call "OpeningOptions_kmod" parameters	bWindow				= 1,
									iLineShapeCategory	= iLineShapeCategory,
									bOverride_MVO_2D	= bOverride_MVO_2D,
									or_opLinePen		= or_opLinePen,
									or_iSwingType		= or_iSwingType,
									or_iSlidingType		= or_iSlidingType,
									or_swingLineType	= or_swingLineType,
									bEnableSecondaryOpLineTypes = 0,
									bDisable2DOverride = bDisable2DOverride,
						returned_parameters dummy,
											gs_opLinePen,
											gs_iSwingType,
											gs_iSlidingType,
											gs_swingLineType,
											dummy


! -----------------------------------------------------------------------------
! Hotspot Display Control
! -----------------------------------------------------------------------------

if iLoD2D < SYMBW_M_2LINE_NOGLASS then
	bShowUnitHotspots	= 0
	bShowAddHotspots	= 0
else
	bShowUnitHotspots	= ((iLoD2D > SYMBW_M_9) | gs_unit_nominal)
endif

if bShowAddHotspotsForIS then
	bShowUnitHotspots	= 1
	bShowAddHotspots	= 1
endif

if iLoD2D = SYMBW_OFF then 100


! =============================================================================
! Demolition / New construction
! =============================================================================

if iTypeDemolitionFill = RENOVATION_FILL_EXIST then
	gs_wallhole_fill = gs_wallhole_fill
	gs_wallhole_pen_fg = gs_wallhole_pen_fg
	gs_wallhole_pen_bg = gs_wallhole_pen_bg
endif

if iTypeDemolitionFill = RENOVATION_FILL_DEMOLISHED then
	gs_wallhole_fill = gs_Demolition_fill
	gs_wallhole_pen_fg = gs_Demolition_pen_fg
	gs_wallhole_pen_bg = gs_Demolition_pen_bg
endif

if	iTypeDemolitionFill = RENOVATION_FILL_NEW |\
	iTypeDemolitionFill = RENOVATION_FILL_NEW_FULL then 

	gs_wallhole_fill = gs_New_fill
	gs_wallhole_pen_fg = gs_New_pen_fg
	gs_wallhole_pen_bg = gs_New_pen_bg
endif


! =============================================================================
! SWE New Symbol
! =============================================================================

if gs_bShowNewOnCC & iTypeDemolitionFill = RENOVATION_FILL_NEW then
	bEnableMasonryArch			= 0
	bEnableFaschen				= 0
	bEnableSill					= 0
	bEnableBoard				= 0
	bEnableThreshold			= 0
	bEnableCasing				= 0
	bEnableShutter				= 0
	bEnableCustomCornerLeft		= 0
	bEnableCustomCornerRight	= 0
endif


! =============================================================================
! Wallhole Structure
! =============================================================================

bDrawSillFill	= not((bDrawSill  & lod2D_SillBoard > 0) | (bDrawOutsideTrim & lod2D_Casing > 0))
bDrawBoardFill	= not((bDrawBoard & lod2D_SillBoard > 0) | (bDrawInsideTrim & lod2D_Casing > 0))

bWallContHiddenLineOut	= ( (bEnableSill & (bDrawSill & lod2D_SillBoard > 0) & ((iSillType <> SILL_DUTCH) | (iSillType = SILL_DUTCH & (gs_sill_width > (WIDO_FRAME_THICKNESS + WIDO_SILL))))) |\
							(bEnableCasing & (bDrawOutsideTrim & lod2D_Casing > 0)) )
bWallContHiddenLineIn	= (bWallContHiddenLineIn) | (bEnableBoard & (bDrawBoard & lod2D_SillBoard > 0)) | (bEnableCasing & (bDrawInsideTrim & lod2D_Casing > 0))

call "WallholeStructure_kmod" parameters all A = A,
	iTypeDemolitionFill		= iTypeDemolitionFill,
	refWidth				= refWidth,
	leftWidth				= leftWallholeWidth,
	rightWidth				= rightWallholeWidth,
	iRevealType				= iRevealTypeForDisplay,
	leftWallholeRevealPnts	= leftWallholeRevealPnts,
	rightWallholeRevealPnts	= rightWallholeRevealPnts,
	iRevealPointsIdx		= iRevealPointsIdx,
	bAddPoint				= bAddPoint,
	iClosureType			= iClosureType,
	radSill					= radSill,
	radBoard				= radBoard,
	WOD						= WOD,
	overSizeLeft			= overSizeLeft,
	overSizeRight			= overSizeRight,
	overSizeUpper			= overSizeUpper,
	overSizeLower			= overSizeLower,
	lineSections			= lineSections,
! --- Turned Plaster Skins
	possibleSkinTurnIn		= possibleSkinTurnIn,
	possibleSkinTurnOut		= possibleSkinTurnOut,
	maxSkinTurnIn			= maxSkinTurnIn,
	maxSkinTurnOut			= maxSkinTurnOut,
	nSkinTurnIn				= nSkinTurnIn,
	nSkinTurnOut			= nSkinTurnOut,
	thkPlasterAtSillLeft	= thkPlasterAtSillLeft,
	thkPlasterAtSillRight	= thkPlasterAtSillRight,
	thkPlasterAtBoardLeft	= thkPlasterAtBoardLeft,
	thkPlasterAtBoardRight	= thkPlasterAtBoardRight,
! --- Function Control Parameters
	bEnablePlasterLeftIn	= bEnablePlasterLeftIn,
	bEnablePlasterLeftOut	= bEnablePlasterLeftOut,
	bEnablePlasterRightIn	= bEnablePlasterRightIn,
	bEnablePlasterRightOut	= bEnablePlasterRightOut,
	bEnableParapetInset		= bEnableParapetInset,
	bEnableMasonryArch		= bEnableMasonryArch,
	bEnableFaschen			= bEnableFaschen,
	bEnableWallContourHiddenLine	= bEnableWallContourHiddenLine,
	bWallContHiddenLineIn	= bWallContHiddenLineIn,
	bWallContHiddenLineOut	= bWallContHiddenLineOut,
! --- Macro Control Parameters
	isWindow				= 1,
	gs_IsCurved				= gs_IsCurved,
	bParalellInCurvedWalls	= bParalellInCurvedWalls,
	bDrawSillFill			= bDrawSillFill,
	bDrawBoardFill			= bDrawBoardFill,
! --- Corner Functions
	bLeftCornerFunction		= bLeftCornerFunction,
	leftCornerAngle			= leftCornerAngle,
	leftConnWallThk			= leftConnWallThk,
	bRightCornerFunction	= bRightCornerFunction,
	rightCornerAngle		= rightCornerAngle,
	rightConnWallThk		= rightConnWallThk,
! --- Window Sizes
	gs_wallhole_hotspots	= 1,
	gs_reveal_hotspots		= 1,
! --- Reveal and Closure Type
	gs_reveal_left			= gs_reveal_left,
	gs_reveal_right			= gs_reveal_right,
	revealInnerLeft 		= revealInnerLeft,
	revealInnerRight		= revealInnerRight,
! --- Casing
	bDrawOutsideTrim		= bDrawOutsideTrim,
	bDrawInsideTrim			= bDrawInsideTrim,
! --- String Resources
	stWallContourLine		= stWallContourLine,
	stCavityClosureSide		= stCavityClosureSide,
	stCavityClosureTurnDir	= stCavityClosureTurnDir,
	stMasonryArchTypes		= stMasonryArchTypes,
	stMasonryArchStructure	= stMasonryArchStructure,
! --- Parapet
	iParapetSize			= iParapetSize


! =============================================================================
! Wallhole Framing
! =============================================================================

call "WallholeFraming_kmod" parameters all A = A,
	refWidth				= refWidth,
	leftWidth				= leftWidth,
	rightWidth				= rightWidth,
	SymbolMid_shiftDy		= SymbolMid_shiftDy,
	iRevealType				= iRevealTypeForDisplay,
	leftWallFrameRevealPnts	= leftWallFrameRevealPnts,
	rightWallFrameRevealPnts= rightWallFrameRevealPnts,
	iRevealPointsIdx		= iRevealPointsIdx,
	radSill					= radSill,
	radBoard				= radBoard,
	WOD						= WOD,
	overSizeLeft			= overSizeLeft,
	overSizeRight			= overSizeRight,
	overSizeUpper			= overSizeUpper,
	overSizeLower			= overSizeLower,
	lod2D_SillBoard			= lod2D_SillBoard,
	lod2D_Treshold			= lod2D_Treshold,
	lod2D_Casing			= lod2D_Casing,
	lod2D_sunShade			= lod2D_sunShade,
	lod2D_CornerColumn		= lod2D_CornerColumn,
! --- Function Control Parameters
	bShowAddHotspots		= bShowAddHotspots,
	bEnableSill				= bEnableSill,
	bEnableBoard			= bEnableBoard,
	bEnableThreshold		= bEnableThreshold,
	bEnableCasing			= bEnableCasing,
	bEnableShutter			= bEnableShutter,
	bEnableCustomCornerLeft		= bEnableCustomCornerLeft,
	bEnableCustomCornerRight	= bEnableCustomCornerRight,
	bBoardInPolyWall		= bBoardInPolyWall,
! --- Macro Control Parameters
	isWindow				= 1,
	gs_IsCurved				= gs_IsCurved,
	bParalellInCurvedWalls	= bParalellInCurvedWalls,
	bCasingTolerance		= 0,
! --- Corner Functions
	bLeftCornerFunction		= bLeftCornerFunction,
	leftCornerAngle			= leftCornerAngle,
	leftConnWallThk			= leftConnWallThk,
	bRightCornerFunction	= bRightCornerFunction,
	rightCornerAngle		= rightCornerAngle,
	rightConnWallThk		= rightConnWallThk,
! --- Reveal and Closure Type
	gs_reveal_left			= gs_reveal_left,
	gs_reveal_right			= gs_reveal_right,
	revealInnerLeft 		= revealInnerLeft,
	revealInnerRight		= revealInnerRight,
! --- String Resources
	stSillTypes				= stSillTypes


! =============================================================================
! NED Fire Rating Symbol
! =============================================================================

if bEnableNEDFireRating then
	_bSuccess = 0
	_bShowSymbol = 0
	_bSuccess = LIBRARYGLOBAL ("LibraryGlobals13", "bShowFireRating", _bShowSymbol)
	if _bSuccess then
		_bSuccess = LIBRARYGLOBAL ("LibraryGlobals13", "fireRatingSymbPen", _fireSymbPen)
	endif

	if _bSuccess and _bShowSymbol and iNEDFireRating > 0 and iNEDFireRating < 6 then
		pen _fireSymbPen

		_dx = 0.08
		_dy1 = 0.5
		_dy2 = 0.3
		_dy3 = 0.16

		hotspot2 0, -_dy1 - _dy3, 10501, NEDFireRatingPos, 1+128
		hotspot2 NEDFireRatingPos, -_dy1 - _dy3, 10502, NEDFireRatingPos, 2
		hotspot2 -1, -_dy1 - _dy3, 10503, NEDFireRatingPos, 3

		hotspot2 0, _dy1 + _dy3, 10504, NEDFireRatingPos, 1+128
		hotspot2 NEDFireRatingPos, _dy1 + _dy3, 10505, NEDFireRatingPos, 2
		hotspot2 -1, _dy1 + _dy3, 10506, NEDFireRatingPos, 3

		add2 NEDFireRatingPos, 0

		if iNEDFireRating = 2 or iNEDFireRating = 3 then
			line2 -_dx,	 _dy1,	 _dx,	 _dy1 + _dy3
			line2 -_dx,	-_dy1,	 _dx,	-_dy1 - _dy3
			line2  _dx,	 _dy1,	-_dx,	 _dy1 + _dy3
			line2  _dx,	-_dy1,	-_dx,	-_dy1 - _dy3
		endif

		if iNEDFireRating = 3 then
			line2 -_dx,	 _dy2,	 _dx,	 _dy2 + _dy3
			line2 -_dx,	-_dy2,	 _dx,	-_dy2 - _dy3
			line2  _dx,	 _dy2,	-_dx,	 _dy2 + _dy3
			line2  _dx,	-_dy2,	-_dx,	-_dy2 - _dy3
		endif

		line2 0, -_dy1 - _dy3, 0, _dy1 + _dy3

		del 1
	endif
endif


100:
! =============================================================================
! Returned Parameters
! =============================================================================

drawindex 40	! Draw Window Panel in the Middle

addPrmX = offsWindowX + (SymbMid_RightDx - SymbMid_LeftDx)/2
addPrmY = SymbolMid_shiftDy
mulPrmX = 1
mulPrmY = 1

if not(bShowReveal) then
	leftUnitWidth	= min(-leftWallFrameRevealPnts[idxFrameStartRevealLeft][1], -leftWallFrameRevealPnts[idxFrameEndRevealLeft][1])
	rightUnitWidth	= min(rightWallFrameRevealPnts[idxFrameStartRevealRight][1], rightWallFrameRevealPnts[idxFrameEndRevealRight][1])

	ac_unit_width = leftUnitWidth + rightUnitWidth - cornerPostXRight - cornerPostXLeft
endif

ac_unit_width = ac_unit_width + SymbMid_RightDx + SymbMid_LeftDx

end ac_unit_width,
	gs_frame_ovhg_left_out,
	gs_frame_ovhg_right_out,
	gs_frame_ovhg_left_in,
	gs_frame_ovhg_right_in,
	bMirrored,
	addPrmX, addPrmY,
	mulPrmX, mulPrmY,
	iLoD2D,

	gs_opLinePen,
	gs_iSwingType,
	gs_swingLineType,
	bShowAddHotspots, bShowUnitHotspots,
	bOneLineSymbolin2D
