

! =============================================================================
! Draw Door frame and leaf
! =============================================================================

gs_fillFr	= gs_bFills * gs_fillFr
gs_fillLeaf	= gs_bFills * gs_fillLeaf

lod2D	= DET2D_FS_OFF
bDetailedSlidingLeafSymbol	= 0
iSymbolGlassType			= SYMBGLASS_SIMPLEGLASS
_bOpeningSymbDisplay		= 0
bShowRebateOnFixGlass		= 0

if iLoD2D = SYMBD_S_1LINE then						lod2D	= DET2D_FS_SIMPLE			! Simple --> INT 200
if iLoD2D = SYMBD_S_1LINECL then					lod2D	= DET2D_FS_SIMPLE			! Simple --> NLD 200
if iLoD2D = SYMBD_M_1LINELEAF_2LINE then			lod2D	= DET2D_FS_MIDDLE			! Middle --> INT 100
if iLoD2D = SYMBD_M_2LINELEAFCL_GLASS then			lod2D	= DET2D_FS_MIDDLE			! Middle --> NLD 100
if iLoD2D = SYMBD_D_2LINELEAFOP_GLASS then			lod2D	= DET2D_FS_DETAILED			! Detailed --> INT 50
if iLoD2D = SYMBD_D_1LINELEAF_GLASS then			lod2D	= DET2D_FS_DETAILED			! Detailed --> SWE 50
if iLoD2D = SYMBD_D_2LINELEAFCL_REBATEONGLASS then	lod2D	= DET2D_FS_DETAILED			! Detailed --> NLD 50
if iLoD2D = SYMBD_D_2LEAFOPGLASS_GLASS then			lod2D	= DET2D_FS_DETAILED			! Detailed --> INT 50 Storefronts
if iLoD2D = SYMBD_S_2LINE then						lod2D	= DET2D_FS_SIMPLE_CHI		! Chinese Simple
if iLoD2D = SYMBD_D_2LINELEAFOP_2LINE then			lod2D 	= DET2D_FS_DETAILED_CHI		! Chinese Detailed

if	iLoD2D = SYMBD_S_1LINECL |\							! NLD 200
	iLoD2D = SYMBD_M_2LINELEAFCL_GLASS |\				! NLD 100
	iLoD2D = SYMBD_D_2LINELEAFCL_REBATEONGLASS	then	! NLD 50
	_bOpeningSymbDisplay			= 1
endif
if	iLoD2D = SYMBD_M_2LINELEAFCL_GLASS |\				! NLD 100
	iLoD2D = SYMBD_D_2LINELEAFOP_GLASS |\				! INT 50 
	iLoD2D = SYMBD_D_2LINELEAFCL_REBATEONGLASS |\		! NLD 50
	iLoD2D = SYMBD_D_2LINELEAFOP_2LINE	then			! CHI 50 
	bDetailedSlidingLeafSymbol	= 1
endif
if iLoD2D = SYMBD_D_2LEAFOPGLASS_GLASS 		then		! Detailed --> INT 50 Storefronts
	iSymbolGlassType	= SYMBGLASS_DOUBLEGLASS
endif
if	iLoD2D = SYMBD_D_2LINELEAFCL_REBATEONGLASS	then	! NLD 50
	bShowRebateOnFixGlass		= 1
endif


call "OpeningOptions_kmod" parameters	bWindow				= 1,
									bDoorWithSidelightSupport = 1,
									bOverride_MVO_win_2D= bOverride_MVO_win_2D,
									or_winOpLinePen		= or_winOpLinePen,
									or_iWinSwingType	= or_iWinSwingType,
									or_winSwingLineType	= or_winSwingLineType,
						returned_parameters dummy,
											gs_winOpLinePen,
											gs_iWinSwingType,
											dummy,
											gs_winSwingLineType,
											dummy




pen gs_pen_2D
bFeedBack = (GLOB_CONTEXT > 20 & GLOB_CONTEXT < 40)
if bFeedBack then gs_detlevel_2D_m = 1

if iTypeDemolitionFill = RENOVATION_FILL_DEMOLISHED then		! Demolition
	gs_panelLineType = gs_Demolition_linetype
else
	gs_panelLineType = 1
endif

bShowHandleOnSymbol		= bShowHandleOnSymbol & bEnableShowHandle
bShowGlassPanelOnSymbol	= bShowGlassPanelOnSymbol & bEnableShowGlassPanel
bShowChiSpringSymbol	= bShowChiSpringSymbol & bEnableShowChiSpringSymbol
bShowAirtightPanel		= bShowAirtightPanel & bEnableShowAirtightPanel
bSlidingOpLine2D		= bEnableSlidingOpLine2D & bSlidingOpLine2D

if gs_frame_style_m = FRAME_STYLE_WRAPPED_EXTRUSION then
	if lod2D = DET2D_FS_SIMPLE then
		add2 0, -gs_frame_oversize_thk * 2 * (WIDO_REVEAL_SIDE)
	else
		if WIDO_REVEAL_SIDE then
			add2 0, -gs_frame_oversize_thk
		else
			add2 0, gs_frame_oversize_thk
		endif
	endif
endif


! =============================================================================
! Draw Door Frame
! =============================================================================

if gs_frame_pen_cont > 0 then pen gs_frame_pen_cont

if gs_frame_width > EPS & not(gs_slidingext) then

	call "DoorFrame_kmod" parameters all	A	= ac_unit_width,
									B	= ac_unit_height,
		gs_frame_style_m				= gs_frame_style_m,
		gs_rebate_width					= gs_rebate_width_Sliding,
		gs_frame_ovhg_left_out			= gs_frame_ovhg_left_out,
		gs_frame_ovhg_left_in			= gs_frame_ovhg_left_in,
		gs_frame_ovhg_right_out			= gs_frame_ovhg_right_out,
		gs_frame_ovhg_right_in			= gs_frame_ovhg_right_in,
		gs_frame_left_endline			= not(gs_stack_left & (gs_left_oversize < EPS)),
		gs_frame_right_endline			= not(gs_stack_right & (gs_right_oversize < EPS)),
		iLoD2D							= iLoD2D,
		gs_SashText_typ_num				= gs_SashText_typ_num,
		gs_frame_width_orig				= gs_frame_width_orig,
		gs_frw1							= gs_frame_width_left,
		gs_frw2							= gs_frame_width_right,
		gs_frwt							= gs_frame_width_upper,
		gs_frwm							= gs_frame_width,
		gs_frame_thk					= gs_frame_thk,
		gs_frame_thkin					= gs_frame_thkin,
		bShowAddHotspots				= bShowAddHotspots,
		bShowUnitHotspots				= bShowUnitHotspots,
		bShowEgressHotspots				= bShowEgressHotspots,
		bShowLeafHotspots				= bShowLeafHotspots,
		gs_sliding_fixpanel_width_left	= gs_sliding_fixpanel_width_left,
		gs_sliding_fixpanel_width_right	= gs_sliding_fixpanel_width_right,
		gs_leaf_optype_m				= gs_leaf_optype_m,
		gs_optype_m_05					= gs_optype_m_05,
		gs_optype_m_09					= gs_optype_m_09,
		gs_unit_extra_left				= gs_unit_extra_left,
		gs_unit_extra_right				= gs_unit_extra_right

endif


! =============================================================================
! Draw Sidelight Panels
! =============================================================================

sh_UnID = 5200

call "DoorLeafSymbol_kmod" parameters all	A = ac_unit_width,
										B = ac_unit_height,
			gs_tolerance_left			= gs_tolerance_left,
			gs_tolerance_right			= gs_tolerance_right,
			gs_frame_style_m			= gs_frame_style_m,
			gs_frame_ovhg_left_out		= gs_frame_ovhg_left_out,
			gs_frame_ovhg_right_out		= gs_frame_ovhg_right_out,
			gs_rebate_width				= gs_rebate_width,
			gs_sidelight_rebate_width	= gs_sidelight_rebate_width,
			gs_sidelight_rebate_depth	= gs_sidelight_rebate_depth,
			bParapetLeft				= gs_sidelight_left  & gs_sidelight_parapet_hgt_left > EPS,
			bParapetRight				= gs_sidelight_right & gs_sidelight_parapet_hgt_right > EPS,
			gs_frw1						= gs_frame_width_left,
			gs_frw2						= gs_frame_width_right,
			gs_frwt						= gs_frame_width_upper,
			gs_frame_width_left_2		= gs_frame_width_left_2,
			gs_frame_width_right_2		= gs_frame_width_right_2,
			gs_sl_thk					= gs_sash_thk,
			gs_sl_fw					= gs_sl_sash_width,
			sashFrameWidth				= sashFrameWidth,
			iLoD2D						= iLoD2D,
			bOpeningDirectionSL			= bOpeningDirectionSL,
			lw							= ac_leaf_width,
			gs_sidelight_m				= gs_sidelight_width_left + gs_sidelight_width_right,
			gs_sl_w1					= gs_sidelight_width_left,
			gs_sl_w2					= gs_sidelight_width_right,
			gs_optype_m_09				= gs_optype_m_09,
			gs_optype_m_05				= gs_optype_m_05,
			gs_winOpLinePen				= gs_winOpLinePen,
			gs_winSwingLineType			= gs_winSwingLineType,
			gs_iWinSwingType			= gs_iWinSwingType,
			sh_UnID						= sh_UnID



! =============================================================================
! Draw Leaf Panels
! =============================================================================

unID_Opening = 1000

LeftFrameWidth		= gs_frame_width_left
if gs_sidelight_left then LeftFrameWidth = gs_frame_width_left_2
RightFrameWidth		= gs_frame_width_right
if gs_sidelight_right then RightFrameWidth = gs_frame_width_right_2

frameDiff		= 0
toleranceDiff	= 0
if lod2D = DET2D_FS_SIMPLE | lod2D = DET2D_FS_SIMPLE_CHI then
	frameDiff		= (RightFrameWidth - LeftFrameWidth) / 2
	toleranceDiff	= ((gs_tolerance_right * not(gs_sidelight_right)) - (gs_tolerance_left * not(gs_sidelight_left))) / 2
endif

if gs_pocket then
	TotalLeafWidthin2D = ac_leaf_width
else
	TotalLeafWidthin2D = ac_unit_width - gs_sidelight_width_right * gs_sidelight_right - gs_sidelight_width_left * gs_sidelight_left - \
					gs_frame_width_right * not(gs_sidelight_right) - gs_frame_width_left * not(gs_sidelight_left)
endif

if (lod2D <> DET2D_FS_SIMPLE & lod2D <> DET2D_FS_MIDDLE & lod2D <> DET2D_FS_SIMPLE_CHI & lod2D <> DET2D_FS_DETAILED_CHI) then
	TotalLeafWidthin2D = TotalLeafWidthin2D + 2 * gs_rebate_width
endif
if lod2D = DET2D_FS_SIMPLE | lod2D = DET2D_FS_SIMPLE_CHI | gs_slidingext then
	if gs_pocket then
		TotalLeafWidthin2D = max(TotalLeafWidthin2D, ac_wallhole_width)
	else
		TotalLeafWidthin2D = TotalLeafWidthin2D + LeftFrameWidth + RightFrameWidth + gs_tolerance_left * not(gs_sidelight_left) + gs_tolerance_right * not(gs_sidelight_right)
	endif
endif
if lod2D = DET2D_FS_SIMPLE_CHI then
	TotalLeafWidthin2D = TotalLeafWidthin2D - gs_frame_width_right_2 * gs_sidelight_right - gs_frame_width_left_2 * gs_sidelight_left
endif


if gs_pocket then
	if gs_leaf_optype_m = LEAF_2L_POCKET then
		if gs_pocket_door_frame then
			a_x = -TotalLeafWidthin2D/2 + (gs_frame_width_left - gs_frame_width_right)/2
		else
			a_x = -TotalLeafWidthin2D/2 - (gs_tolerance_left - gs_tolerance_right)/2
		endif
	else
		if gs_pocket_door_frame then
			a_x = -ac_unit_width/2 + (gs_frame_width_left)
		else
			a_x = -ac_unit_width/2 - (gs_tolerance_left)
		endif
	endif
else
	a_x = -ac_unit_width/2 + gs_sidelight_width_left * gs_sidelight_left + gs_frame_width_left * not(gs_sidelight_left)
endif

if (lod2D <> DET2D_FS_SIMPLE & lod2D <> DET2D_FS_MIDDLE & lod2D <> DET2D_FS_SIMPLE_CHI & lod2D <> DET2D_FS_DETAILED_CHI) then
	a_x = a_x - gs_rebate_width
endif
if lod2D = DET2D_FS_SIMPLE | lod2D = DET2D_FS_SIMPLE_CHI | gs_slidingext then
	if gs_pocket then
		if gs_leaf_optype_m <> LEAF_2L_POCKET then
			a_x = a_x - gs_pocket_door_frame * (gs_frame_width_left + gs_tolerance_left)
		endif
	else
		a_x = a_x - LeftFrameWidth - gs_tolerance_left * not(gs_sidelight_left) + gs_frame_width_left_2 * gs_sidelight_left * (lod2D = DET2D_FS_SIMPLE_CHI)
	endif
endif

if (lod2D = DET2D_FS_SIMPLE_CHI | lod2D = DET2D_FS_DETAILED_CHI) & not(gs_sliding) & not(gs_pocket) then
	_yFrameMod = -gs_frame_thk/2
else
	_yFrameMod = 0
endif
add2 0, _yFrameMod


bSecondPanel = 0

lod2D_temp	= lod2D

if iDoorPanelType <> 0 | bAsymmetricLeafs then

	reverse2dAngleMask = 512
	reverse2dAngle2Mask = 0

	unID_Garage	 = 2000


	bShowHandleonActualLeaf = 0
	if gs_handle_type_m <> 0 then bShowHandleonActualLeaf = 1


	bHideInnerContour	= 0


	! =============================================================================
	! 1 Leaf Panels
	! =============================================================================

	if	gs_leaf_optype_m = LEAF_1L_SIDE_HUNG |\
		gs_leaf_optype_m = LEAF_1L_SIDE_HUNG_M |\
		gs_leaf_optype_m = LEAF_1L_DOUBLE_ACTING |\
		gs_leaf_optype_m = LEAF_1L_DOUBLE_ACTING_M then

		aaa = TotalLeafWidthin2D

		if gs_iSwingType = LINE_SHAPE_SWING_SIMPLE_LINE | gs_iSwingType = LINE_SHAPE_SWING_LEAF_LINE then
			add2 a_x + TotalLeafWidthin2D/2, 0
			mul2 -1, 1
			add2 0, (-gs_frame_thk/2) * (lod2D = DET2D_FS_MIDDLE | lod2D = DET2D_FS_DETAILED)
			gosub "LineShapeSimpleLine"
			del 3
		endif

		for ii = 1 to 1 + (gs_leaf_optype_m = LEAF_1L_DOUBLE_ACTING | gs_leaf_optype_m = LEAF_1L_DOUBLE_ACTING_M)
			lod2D	= lod2D_temp

			add2 a_x + aaa/2, 0
			mul2 -1, 1

			if gs_iSwingType <> LINE_SHAPE_SWING_SIMPLE_LINE & gs_iSwingType <> LINE_SHAPE_SWING_LEAF_LINE then
				! -------------- HOTSPOT EDITING
				add2 -aaa/2, 0
				hotspot2 0, 					0, 						unID_Opening,		gs_open_2D,	6 + reverse2dAngleMask * (ii=1) + reverse2dAngle2Mask * (ii<>1)		! 1000
				hotspot2 aaa, 					0,						unID_Opening + 1,	gs_open_2D,	4+128			! 1001
				hotspot2 aaa*cos(gs_open_2D),	aaa*sin(gs_open_2D),	unID_Opening + 2,	gs_open_2D,	5	! 1002
				unID_Opening = unID_Opening + 10
				del 1


				! Swing Line ------------------------------
				pen gs_opLinePen
				drawindex 30
				line_type gs_swingLineType

				if gs_open_2D > 0 then
					if gs_iSwingType = LINE_SHAPE_SWING_CURVED then
						arc2 -aaa/2, 0, aaa, 0, gs_open_2D
!					else
!						line2	aaa/2 , 0,
!								-aaa/2 + aaa * cos(gs_open_2D) + gs_leaf_thk * sin(gs_open_2D) * (lod2D = DET2D_FS_DETAILED & iLoD2D <> SYMBD_D_2LINELEAFCL_REBATEONGLASS),
!								aaa * sin(gs_open_2D) - gs_leaf_thk * cos(gs_open_2D) * (lod2D = DET2D_FS_DETAILED & iLoD2D <> SYMBD_D_2LINELEAFCL_REBATEONGLASS)
					endif
				endif
			endif

			! -------------- Door Leaf
			if ii = 1 then
				line_type gs_panelLineType
			else
				if lod2D = DET2D_FS_SIMPLE_CHI | lod2D = DET2D_FS_DETAILED_CHI | (bShowChiSpringSymbol & lod2D = DET2D_FS_DETAILED) then
					line_type gs_swingLineType
				else
					line_type gs_swing_pen_line
				endif
				if lod2D = DET2D_FS_DETAILED_CHI | (bShowChiSpringSymbol & lod2D = DET2D_FS_DETAILED) then lod2D = DET2D_FS_SIMPLE_CHI
			endif

			add2 -aaa/2, 0
			rot2 gs_open_2D
			add2 aaa/2, 0

			if _bOpeningSymbDisplay then
				if gs_iSwingType <> LINE_SHAPE_SWING_SIMPLE_LINE & gs_iSwingType <> LINE_SHAPE_SWING_LEAF_LINE then
					pen gs_opLinePen
!					line2	-aaa/2, 0,
!							aaa/2, 0
				endif

				del 2
				add2 aaa/2, 0

				if ii = 2 then
					lod2D = DET2D_FS_MIDDLE
				else
					if lod2D_temp = DET2D_FS_MIDDLE then lod2D = DET2D_FS_DETAILED
				endif
				gosub "Leaf_Panel"

				del 4
			else
				if gs_iSwingType <> LINE_SHAPE_SWING_SIMPLE_LINE & gs_iSwingType <> LINE_SHAPE_SWING_LEAF_LINE then
					if ii = 2 & bHide2DDoubAct2ndLeaf then
						lod2D = DET2D_FS_MIDDLE
					endif
					gosub "Leaf_Panel"
					del 5
				endif
			endif

			mul2 1,-1
		next ii
		del 1 + (gs_leaf_optype_m = LEAF_1L_DOUBLE_ACTING | gs_leaf_optype_m = LEAF_1L_DOUBLE_ACTING_M)
	endif


	! =============================================================================
	! 2 Leaf Panels
	! =============================================================================

	if	gs_leaf_optype_m = LEAF_2L_SIDE_HUNG |\
		gs_leaf_optype_m = LEAF_2L_DOUBLE_ACTING |\
		gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS |\
		gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS_M then

		if gs_iSwingType = LINE_SHAPE_SWING_SIMPLE_LINE then
			add2 a_x + TotalLeafWidthin2D/2, 0
			mul2 -1, 1
			add2 0, (-gs_frame_thk/2) * (lod2D = DET2D_FS_MIDDLE | lod2D = DET2D_FS_DETAILED)
			gosub "LineShapeSimpleLine"
			del 3
		endif

		if gs_iSwingType = LINE_SHAPE_SWING_LEAF_LINE then
			add2 a_x + lal/2, 0
			mul2 -1, 1
			add2 0, (-gs_frame_thk/2) * (lod2D = DET2D_FS_MIDDLE | lod2D = DET2D_FS_DETAILED)
			if (not (bAsymmetricLeafs) & iDoorPanelType <> 0) | (bAsymmetricLeafs & iDoorPanelType2 <> 0) then
				gosub "LineShapeSimpleLine"
			endif

			add2 -TotalLeafWidthin2D/2, 0
			unID_Opening = unID_Opening + 2
			if iDoorPanelType <> 0 then
				gosub "LineShapeSimpleLine"
			endif

			del 4
		endif

		if lod2D = DET2D_FS_SIMPLE | lod2D = DET2D_FS_MIDDLE | lod2D = DET2D_FS_SIMPLE_CHI | lod2D = DET2D_FS_DETAILED_CHI then
			lar = lar - gs_rebate_width
			lal = lal - gs_rebate_width
		endif
		if lod2D = DET2D_FS_SIMPLE then
			lar = lar + RightFrameWidth + gs_tolerance_right * not(gs_sidelight_right) - frameDiff - toleranceDiff
			lal = lal + LeftFrameWidth + gs_tolerance_left * not(gs_sidelight_left) + frameDiff + toleranceDiff
		endif
		if lod2D = DET2D_FS_SIMPLE_CHI  then
			lar = lar + (RightFrameWidth + gs_tolerance_right) * not(gs_sidelight_right)
			lal = lal + (LeftFrameWidth + gs_tolerance_left) * not(gs_sidelight_left)
			if not(gs_sidelight_right) * gs_sidelight_left then
				lar = lar - (RightFrameWidth + gs_tolerance_right)/2
				lal = lal + (RightFrameWidth + gs_tolerance_right)/2
			endif
		endif

		add2 a_x+TotalLeafWidthin2D-lar, 0

		for i=1 to 2
			bSecondPanel = (bAsymmetricLeafs & i = 2)

			if (not (bSecondPanel) & iDoorPanelType <> 0) | (bSecondPanel & iDoorPanelType2 <> 0) then
				if i=1 then
					aaa = lar
				else
					aaa = lal
					if gs_leaf_optype_m <> LEAF_2L_DOUBLE_EGRESS then bShowHandleonActualLeaf = 0
				endif
	
				for ii = 1 to 1 + (gs_leaf_optype_m = LEAF_2L_DOUBLE_ACTING | (bShowChiSpringSymbol & gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS))
					lod2D	= lod2D_temp
	
					add2 aaa/2, 0
					mul2 -1, 1
	
					if gs_iSwingType <> LINE_SHAPE_SWING_SIMPLE_LINE & gs_iSwingType <> LINE_SHAPE_SWING_LEAF_LINE then
						! -------------- HOTSPOT EDITING
						add2 -aaa/2, 0
						if i=1 then
							reverseAngle = reverse2dAngleMask * (ii=1) + reverse2dAngle2Mask * (ii<>1)
							hotspot2 0, 					0, 						unID_Opening,		gs_open_2D,	6 + reverseAngle		! 1000
							hotspot2 aaa, 					0,						unID_Opening + 1,	gs_open_2D,	4+128			! 1001
							hotspot2 aaa*cos(gs_open_2D),	aaa*sin(gs_open_2D),	unID_Opening + 2,	gs_open_2D,	5	! 1002
							unID_Opening = unID_Opening + 10
						else
							reverseAngle = reverse2dAngle2Mask * (ii=1) + reverse2dAngleMask * (ii<>1)
							if gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS then reverseAngle = reverse2dAngleMask * (ii=1) + reverse2dAngle2Mask * (ii<>1)
							hotspot2 0, 					0, 						unID_Opening,		gs_open_2D_2,	6 + reverseAngle		! 1010
							hotspot2 aaa, 					0,						unID_Opening + 1,	gs_open_2D_2,	4+128			! 1011
							hotspot2 aaa*cos(gs_open_2D_2),	aaa*sin(gs_open_2D_2),	unID_Opening + 2,	gs_open_2D_2,	5	! 1012
							unID_Opening = unID_Opening + 10
						endif
						del 1
		
						! Swing Line ------------------------------
						pen gs_opLinePen
						drawindex 30
						line_type gs_swingLineType
	
						if	(i = 1 & abs(gs_open_2D) > EPS & abs(gs_open_2D - 360) > EPS) |\
							(i = 2 & abs(gs_open_2D_2) > EPS & abs(gs_open_2D_2 - 360) > EPS) then

							if gs_iSwingType = LINE_SHAPE_SWING_CURVED  then
								if i = 1 then
									arc2 -aaa/2, 0, aaa, 0, gs_open_2D
								else
									arc2 -aaa/2, 0, aaa, 0, gs_open_2D_2
								endif
								if gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS then
!									if i = 1 then
!										line2 aaa/2, -gs_leaf_thk, aaa/2, 0
!									else
!										line2 -aaa/2, -gs_leaf_thk, -aaa/2, 0
!									endif
								endif
							else
!								if i = 1 then
!									line2 aaa/2 , -gs_leaf_thk/2 * (gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS | gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS_M),
!										-aaa/2 + aaa * cos(gs_open_2D) + gs_leaf_thk * sin(gs_open_2D) * (lod2D = DET2D_FS_DETAILED & iLoD2D <> SYMBD_D_2LINELEAFCL_REBATEONGLASS),
!										 aaa * sin(gs_open_2D) - gs_leaf_thk * cos(gs_open_2D) * (lod2D = DET2D_FS_DETAILED & iLoD2D <> SYMBD_D_2LINELEAFCL_REBATEONGLASS)
!								else
!									line2 aaa/2 , -gs_leaf_thk/2 * (gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS | gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS_M),
!										-aaa/2 + aaa * cos(gs_open_2D_2) + gs_leaf_thk * sin(gs_open_2D_2) * (lod2D = DET2D_FS_DETAILED & iLoD2D <> SYMBD_D_2LINELEAFCL_REBATEONGLASS),
!										 aaa * sin(gs_open_2D_2) - gs_leaf_thk * cos(gs_open_2D_2) * (lod2D = DET2D_FS_DETAILED & iLoD2D <> SYMBD_D_2LINELEAFCL_REBATEONGLASS)
!								endif
							endif
						endif
					endif
	
					! -------------- Door Leaf
					if ii = 1 then
						line_type gs_panelLineType
					else
						if lod2D = DET2D_FS_SIMPLE_CHI | lod2D = DET2D_FS_DETAILED_CHI | (bShowChiSpringSymbol & lod2D = DET2D_FS_DETAILED) then
							line_type gs_swingLineType
						else
							line_type gs_swing_pen_line
						endif
						if lod2D = DET2D_FS_DETAILED_CHI | (bShowChiSpringSymbol & lod2D = DET2D_FS_DETAILED) then lod2D = DET2D_FS_SIMPLE_CHI
					endif
	
					add2 -aaa/2, 0
					if i = 1 then
						rot2 gs_open_2D
					else
						rot2 gs_open_2D_2
					endif
					add2 aaa/2, 0
	
					if _bOpeningSymbDisplay then
						if gs_iSwingType <> LINE_SHAPE_SWING_SIMPLE_LINE & gs_iSwingType <> LINE_SHAPE_SWING_LEAF_LINE then
							pen gs_opLinePen
!							line2	-aaa/2, 0,
!									aaa/2, 0
						endif
	
						del 2
						add2 aaa/2, 0
	
						if ii = 2 then
							lod2D = DET2D_FS_MIDDLE
						else
							if lod2D_temp = DET2D_FS_MIDDLE then lod2D = DET2D_FS_DETAILED
						endif
						gosub "Leaf_Panel"
	
						del 1
					else
						if gs_iSwingType <> LINE_SHAPE_SWING_SIMPLE_LINE & gs_iSwingType <> LINE_SHAPE_SWING_LEAF_LINE then
							if ii = 2 & bHide2DDoubAct2ndLeaf then
								lod2D = DET2D_FS_MIDDLE
							endif
							gosub "Leaf_Panel"
							del 2
						endif
					endif
	
					del 3
	
					mul2 1,-1
				next ii
				del 1 + (gs_leaf_optype_m = LEAF_2L_DOUBLE_ACTING | (bShowChiSpringSymbol & gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS))

			endif
	
			mul2 -1, 1

			if gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS | gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS_M then
				mul2 1, -1
				add2 0, gs_leaf_thk
			endif
		next i

		if gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS | gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS_M then del 4
		del 2 + 1
	endif


	! =============================================================================
	! Pivot Door Leafs
	! =============================================================================

	if	gs_leaf_optype_m = LEAF_1L_PIVOT |\
		gs_leaf_optype_m = LEAF_1L_PIVOT_M then

		if bSimpleLeafin50 & lod2D = DET2D_FS_DETAILED then
			lod2D = DET2D_FS_MIDDLE		!simple leaf in detailed symbol
		endif

		if gs_iSwingType = LINE_SHAPE_SWING_SIMPLE_LINE | gs_iSwingType = LINE_SHAPE_SWING_LEAF_LINE then
			add2 a_x + TotalLeafWidthin2D/2, 0
			mul2 -1, 1
			add2 0, (-gs_frame_thk/2) * (lod2D = DET2D_FS_MIDDLE | lod2D = DET2D_FS_DETAILED)
			gosub "LineShapeSimpleLine"
			del 3
		endif

		bHideInnerContour	= 1
		if lod2D = DET2D_FS_DETAILED_CHI & (bShowGlassPanelOnSymbol | bShowAirtightPanel) then bHideInnerContour	= 0

		aaa = TotalLeafWidthin2D

		add2 a_x+aaa/2, -gs_leaf_thk/2
		mul2 -1, 1

		if gs_iSwingType <> LINE_SHAPE_SWING_SIMPLE_LINE & gs_iSwingType <> LINE_SHAPE_SWING_LEAF_LINE then
			! -------------- HOTSPOT EDITING
			add2 -aaa/2, 0
			hotspot2 0, 0,				unID_Opening, gs_pivotOffset, 1+128 : unID_Opening = unID_Opening + 1
			hotspot2 gs_pivotOffset, 0, unID_Opening, gs_pivotOffset, 2 : unID_Opening = unID_Opening + 1
			hotspot2 -1, 0,				unID_Opening, gs_pivotOffset, 3 : unID_Opening = unID_Opening + 1
			del 1
		endif

		aaa_temp = aaa

		add2 -aaa/2 + gs_pivotOffset, 0

		for i = 1 to 2

			if i = 1 then
				aaa = aaa_temp - gs_pivotOffset
			else
				aaa = gs_pivotOffset
				bShowHandleonActualLeaf = 0
			endif

			if gs_iSwingType <> LINE_SHAPE_SWING_SIMPLE_LINE & gs_iSwingType <> LINE_SHAPE_SWING_LEAF_LINE then
				! Swing Line ------------------------------
				pen gs_opLinePen
				drawindex 30
				line_type gs_swingLineType
	
				if gs_open_2D > 0 then
					if gs_iSwingType = LINE_SHAPE_SWING_CURVED then
						arc2 0, 0, aaa, 0, gs_open_2D
!					else
!						line2 aaa, 0,
!						aaa * cos(gs_open_2D) + gs_leaf_thk/2 * sin(gs_open_2D) * (lod2D = DET2D_FS_DETAILED & iLoD2D <> SYMBD_D_2LINELEAFCL_REBATEONGLASS),
!						aaa * sin(gs_open_2D) - gs_leaf_thk/2 * cos(gs_open_2D) * (lod2D = DET2D_FS_DETAILED & iLoD2D <> SYMBD_D_2LINELEAFCL_REBATEONGLASS)
					endif
				endif

				! -------------- HOTSPOT EDITING
				hotspot2 0, 					0,						unID_Opening,		gs_open_2D, 6 + reverse2dAngleMask		! 1000
				hotspot2 aaa, 					0,						unID_Opening + 1,	gs_open_2D, 4+128			! 1001
				hotspot2 aaa*cos(gs_open_2D),	aaa*sin(gs_open_2D),	unID_Opening + 2,	gs_open_2D,	5		! 1002
				unID_Opening = unID_Opening + 10
			endif

			pen gs_leaf_pen_2D
			line_type gs_panelLineType

			if _bOpeningSymbDisplay then
				if gs_iSwingType <> LINE_SHAPE_SWING_SIMPLE_LINE & gs_iSwingType <> LINE_SHAPE_SWING_LEAF_LINE then
					rot2 gs_open_2D
		
					pen gs_opLinePen
!					line2	0, 0,
!							aaa, 0
		
					del 1
				endif
	
				add2 aaa/2, gs_leaf_thk/2
	
				lod2D = DET2D_FS_MIDDLE
				if lod2D_temp = DET2D_FS_MIDDLE | lod2D_temp = DET2D_FS_DETAILED then lod2D = DET2D_FS_DETAILED
				gosub "Leaf_Panel"

				del 1
			else
				if gs_iSwingType <> LINE_SHAPE_SWING_SIMPLE_LINE & gs_iSwingType <> LINE_SHAPE_SWING_LEAF_LINE then
					rot2 gs_open_2D
					add2 aaa/2, gs_leaf_thk/2 * (lod2D = DET2D_FS_DETAILED | lod2D = DET2D_FS_DETAILED_CHI)
					gosub "Leaf_Panel"
					del 2
				endif
			endif

			rot2 180
		next i
		del 5
	endif

	! =============================================================================
	! Sliding Leafs
	! =============================================================================

	if	gs_leaf_optype_m = LEAF_2L_1SLIDING |\
		gs_leaf_optype_m = LEAF_2L_1SLIDING_M |\
		gs_leaf_optype_m = LEAF_2L_2SLIDING |\
		gs_leaf_optype_m = LEAF_2L_2SLIDING_M |\
		gs_leaf_optype_m = LEAF_3L_2SLIDING |\
		gs_leaf_optype_m = LEAF_3L_2SLIDING_M |\
		gs_leaf_optype_m = LEAF_4L_2SLIDING |\
		gs_leaf_optype_m = LEAF_4L_3SLIDING |\
		gs_leaf_optype_m = LEAF_4L_3SLIDING_M |\
		gs_leaf_optype_m = LEAF_4L_4SLIDING |\
		gs_leaf_optype_m = LEAF_4L_4SLIDING_M then

		aaa = TotalLeafWidthin2D/SlidLeafNum + PanelElongOverlap

		add2 a_x+TotalLeafWidthin2D/2, 0

		if gs_door_rail then
			if	gs_leaf_optype_m = LEAF_2L_1SLIDING |\
				gs_leaf_optype_m = LEAF_2L_1SLIDING_M |\
				gs_leaf_optype_m = LEAF_2L_2SLIDING |\
				gs_leaf_optype_m = LEAF_2L_2SLIDING_M |\
				gs_leaf_optype_m = LEAF_4L_2SLIDING |\
				gs_leaf_optype_m = LEAF_4L_4SLIDING |\
				gs_leaf_optype_m = LEAF_4L_4SLIDING_M then

				railWidth = 2 * gs_leaf_thk
			endif

			if	gs_leaf_optype_m = LEAF_3L_2SLIDING |\
				gs_leaf_optype_m = LEAF_3L_2SLIDING_M then

				railWidth = 3 * gs_leaf_thk
			endif

			if	gs_leaf_optype_m = LEAF_4L_3SLIDING |\
				gs_leaf_optype_m = LEAF_4L_3SLIDING_M then

				railWidth = 4 * gs_leaf_thk
			endif

			add2 -TotalLeafWidthin2D/2,0
			pen gs_frame_pen_cont
			line_property 0
			line2 0, 0, 		TotalLeafWidthin2D,	 0
			line2 0,-railWidth,	TotalLeafWidthin2D,	-railWidth
			del 1
		endif

		mul2 -1, 1

		if bDetailedSlidingLeafSymbol then lod2D = DET2D_FS_DETAILED

		if gs_leaf_optype_m <> LEAF_4L_2SLIDING & gs_leaf_optype_m <> LEAF_4L_4SLIDING then

			! -------------- HOTSPOT EDITING
			add2 TotalLeafWidthin2D/2, -SlidLeafNum * gs_leaf_thk - (SlidLeafNum-1) * gs_leaf_gap
			hotspot2 0, 			0,	unID_Opening, gs_open2D, 1+128	: unID_Opening=unID_Opening+1
			hotspot2 -gs_open2D, 	0,	unID_Opening, gs_open2D, 2 		: unID_Opening=unID_Opening+1
			hotspot2 1, 			0,	unID_Opening, gs_open2D, 3 		: unID_Opening=unID_Opening+1
			del 1

			if gs_leaf_optype_m = LEAF_2L_2SLIDING then
				add2 -TotalLeafWidthin2D/2, -gs_leaf_thk * (lod2D = DET2D_FS_DETAILED | lod2D = DET2D_FS_DETAILED_CHI)
				hotspot2 0, 			0,	unID_Opening, gs_open2D_2,	1+128	: unID_Opening=unID_Opening+1
				hotspot2 gs_open2D_2, 	0,	unID_Opening, gs_open2D_2,	2		: unID_Opening=unID_Opening+1
				hotspot2 -1, 			0,	unID_Opening, gs_open2D_2,	3		: unID_Opening=unID_Opening+1
				del 1
			endif

			if gs_iSlidingType = LINE_SHAPE_SLIDING_SIMPLE_LINE then
				add2 0, (-gs_frame_thk/2) * (lod2D = DET2D_FS_MIDDLE | lod2D = DET2D_FS_DETAILED)
				gosub "LineShapeSimpleLine"
				del 1
			endif

			add2 -TotalLeafWidthin2D/2+aaa/2, 0

			for i=1 to SlidLeafNum
				if i=SlidLeafNum then
					add2 -gs_open2D, 0
				else
					if i <> 1 & (gs_leaf_optype_m = LEAF_3L_2SLIDING | gs_leaf_optype_m = LEAF_4L_3SLIDING) then
						add2 ((TotalLeafWidthin2D-gs_open2D-aaa)/(SlidLeafNum-1) - aaa + gs_leaf_overlap) * (i-1), 0
					endif
					if i = 1 & gs_leaf_optype_m = LEAF_2L_2SLIDING then add2 gs_open2D_2, 0
				endif

				if i=SlidLeafNum | (i=1 & (gs_leaf_optype_m = LEAF_2L_2SLIDING | gs_leaf_optype_m = LEAF_4L_4SLIDING)) then
					bShowHandleonActualLeaf = (gs_handle_type_m <> 0)
				else
					bShowHandleonActualLeaf = 0
				endif

				if i > 1 then
					if gs_iSlidingType = LINE_SHAPE_SLIDING_ARROW then
						add2 0, (-gs_leaf_thk/2) * (lod2D = DET2D_FS_DETAILED)
						mul2 -1, -1
						gosub "LineShapeArrow"
						del 2
					endif
				endif

				if i = 1 & gs_leaf_optype_m = LEAF_2L_2SLIDING then
					if gs_iSlidingType = LINE_SHAPE_SLIDING_ARROW then
						add2 0, (-gs_leaf_thk/2) * (lod2D = DET2D_FS_DETAILED)
						gosub "LineShapeArrow"
						del 1
					endif
					mul2 -1, 1
				endif

				gosub "Leaf_Panel"

				if i = 1 & gs_leaf_optype_m = LEAF_2L_2SLIDING then del 1


				if i=SlidLeafNum then
					del 1
				else
					if i = 1 & gs_leaf_optype_m = LEAF_2L_2SLIDING then del 1
					if i <> 1 & (gs_leaf_optype_m = LEAF_3L_2SLIDING | gs_leaf_optype_m = LEAF_4L_3SLIDING) then del 1
				endif

				if (lod2D <> DET2D_FS_SIMPLE & lod2D <> DET2D_FS_MIDDLE & lod2D <> DET2D_FS_SIMPLE_CHI) then
					add2 aaa - gs_leaf_overlap, -gs_leaf_thk - gs_leaf_gap
				else
					add2 aaa - gs_leaf_overlap, -(gs_leaf_thk * SlidLeafNum) / (SlidLeafNum-1) - gs_leaf_gap
				endif

			next i
			del SlidLeafNum + 1
		else

			! -------------- HOTSPOT EDITING
			hotspot2 0, 			-2*gs_leaf_thk - gs_leaf_gap,	unID_Opening, gs_open2D, 1+128	: unID_Opening=unID_Opening+1
			hotspot2 -gs_open2D,	-2*gs_leaf_thk - gs_leaf_gap,	unID_Opening, gs_open2D, 2 		: unID_Opening=unID_Opening+1
			hotspot2 1, 			-2*gs_leaf_thk - gs_leaf_gap,	unID_Opening, gs_open2D, 3 		: unID_Opening=unID_Opening+1

			if gs_leaf_optype_m = LEAF_4L_4SLIDING then
				add2 -TotalLeafWidthin2D/2, -gs_leaf_thk * (lod2D = DET2D_FS_DETAILED | lod2D = DET2D_FS_DETAILED_CHI)
				hotspot2 0, 			0,	unID_Opening, gs_open2D_2, 1+128	: unID_Opening=unID_Opening+1
				hotspot2 gs_open2D_2, 	0,	unID_Opening, gs_open2D_2, 2		: unID_Opening=unID_Opening+1
				hotspot2 -1, 			0,	unID_Opening, gs_open2D_2, 3		: unID_Opening=unID_Opening+1
				del 1

				add2 TotalLeafWidthin2D/2, -gs_leaf_thk * (lod2D = DET2D_FS_DETAILED | lod2D = DET2D_FS_DETAILED_CHI)
				hotspot2 0, 			0,	unID_Opening, gs_open2D_2, 1+128	: unID_Opening=unID_Opening+1
				hotspot2 -gs_open2D_2, 	0,	unID_Opening, gs_open2D_2, 2		: unID_Opening=unID_Opening+1
				hotspot2 1, 			0,	unID_Opening, gs_open2D_2, 3		: unID_Opening=unID_Opening+1
				del 1
			endif

			if gs_iSlidingType = LINE_SHAPE_SLIDING_SIMPLE_LINE then
				add2 0, (-gs_frame_thk/2) * (lod2D = DET2D_FS_MIDDLE | lod2D = DET2D_FS_DETAILED)
				gosub "LineShapeSimpleLine"
				del 1
			endif

			for i = 1 to 2
				add2 TotalLeafWidthin2D/2 - aaa/2, 0

				for j = 1 to 2
					if j=1 & gs_leaf_optype_m = LEAF_4L_2SLIDING then
						bShowHandleonActualLeaf = 0
					else
						bShowHandleonActualLeaf = (gs_handle_type_m <> 0)
					endif

					if j = 2 then
						add2 gs_open2D, 0
						if gs_iSlidingType = LINE_SHAPE_SLIDING_ARROW then
							add2 0, (-gs_leaf_thk/2) * (lod2D = DET2D_FS_DETAILED)
							mul2 1, -1
							gosub "LineShapeArrow"
							del 2
						endif
						mul2 -1, 1
					else
						if gs_leaf_optype_m = LEAF_4L_4SLIDING then
							add2 -gs_open2D_2, 0
							if gs_iSlidingType = LINE_SHAPE_SLIDING_ARROW then
								add2 0, (-gs_leaf_thk/2) * (lod2D = DET2D_FS_DETAILED)
								mul2 -1, 1
								gosub "LineShapeArrow"
								del 2
							endif
						endif
					endif

					gosub "Leaf_Panel"

					if j = 2 then
						del 2
					else
						if gs_leaf_optype_m = LEAF_4L_4SLIDING then del 1
					endif

					if (lod2D <> DET2D_FS_SIMPLE & lod2D <> DET2D_FS_MIDDLE & lod2D <> DET2D_FS_SIMPLE_CHI) then
						add2 -aaa + gs_leaf_overlap, -gs_leaf_thk - gs_leaf_gap
					else
						add2 -aaa + gs_leaf_overlap, -2 * gs_leaf_thk - gs_leaf_gap
					endif

				next j
				del 3
				mul2 -1, 1
			next i
			del 2
		endif

		del 2
	endif



	! =============================================================================
	! External Sliding Leafs
	! =============================================================================

	if	gs_leaf_optype_m = LEAF_1L_EXTERNAL_SLIDING |\
		gs_leaf_optype_m = LEAF_1L_EXTERNAL_SLIDING_M then

		if bDetailedSlidingLeafSymbol then
			lod2D = DET2D_FS_DETAILED
		else
			lod2D = DET2D_FS_MIDDLE
		endif

		if WIDO_REVEAL_SIDE then add2 0, WALL_THICKNESS - gs_frame_thk

		aaa = TotalLeafWidthin2D

		add2 a_x + TotalLeafWidthin2D/2, gs_leaf_thk+posHole

		! -------------- HOTSPOT EDITING
		hotspot2 -aaa/2, 			0,	unID_Opening, gs_open2D, 1+128	:	unID_Opening=unID_Opening+1
		hotspot2 -aaa/2+gs_open2D,	0,	unID_Opening, gs_open2D, 2		:	unID_Opening=unID_Opening+1
		hotspot2 -aaa,				0,	unID_Opening, gs_open2D, 3		:	unID_Opening=unID_Opening+1

		if gs_iSlidingType = LINE_SHAPE_SLIDING_SIMPLE_LINE then
			add2 0, (-gs_leaf_thk/2) * (lod2D = DET2D_FS_DETAILED)
			gosub "LineShapeSimpleLine"
			del 1
		endif

		add2 gs_open2D, 0

		if gs_iSlidingType = LINE_SHAPE_SLIDING_ARROW then
			add2 0, (-gs_leaf_thk/2) * (lod2D = DET2D_FS_DETAILED)
			gosub "LineShapeArrow"
			del 1
		endif

		mul2 -1, 1

		gosub "Leaf_Panel"

		del 3

		if WIDO_REVEAL_SIDE then del 1

	endif



	! =============================================================================
	! External Double Sliding Leafs
	! =============================================================================

	if	gs_leaf_optype_m = LEAF_2L_EXTERNAL_SLIDING then
		if bDetailedSlidingLeafSymbol then
			lod2D = DET2D_FS_DETAILED
		else
			lod2D = DET2D_FS_MIDDLE
		endif

		if WIDO_REVEAL_SIDE then add2 0, WALL_THICKNESS - gs_frame_thk

		aaa = TotalLeafWidthin2D/2

		add2 a_x + TotalLeafWidthin2D/2, gs_leaf_thk+posHole

		! -------------- HOTSPOT EDITING
		hotspot2 0, 		0,	unID_Opening, gs_open2D, 1+128	:	unID_Opening=unID_Opening+1
		hotspot2 gs_open2D,	0,	unID_Opening, gs_open2D, 2		:	unID_Opening=unID_Opening+1
		hotspot2 -1,		0,	unID_Opening, gs_open2D, 3		:	unID_Opening=unID_Opening+1

		if gs_iSlidingType = LINE_SHAPE_SLIDING_SIMPLE_LINE then
			add2 0, (-gs_leaf_thk/2) * (lod2D = DET2D_FS_DETAILED)
			gosub "LineShapeSimpleLine"
			del 1
		endif

		for i = 1 to 2
			mul2 -1, 1
			add2 -aaa/2-gs_open2D, 0

			if gs_iSlidingType = LINE_SHAPE_SLIDING_ARROW then
				add2 0, (-gs_leaf_thk/2) * (lod2D = DET2D_FS_DETAILED)
				mul2 -1, 1
				gosub "LineShapeArrow"
				del 2
			endif

			gosub "Leaf_Panel"

			del 1
		next i
		del 3

		if WIDO_REVEAL_SIDE then del 1
	endif



	! =============================================================================
	! Single Pocket Door Leaf
	! =============================================================================

	if	gs_leaf_optype_m = LEAF_1L_POCKET |\
		gs_leaf_optype_m = LEAF_1L_POCKET_M then

		if bDetailedSlidingLeafSymbol then
			lod2D = DET2D_FS_DETAILED
		else
			lod2D = DET2D_FS_MIDDLE
		endif

		if lod2D = DET2D_FS_SIMPLE & abs(gs_open2D) > EPS then
			aaa = TotalLeafWidthin2D - (LeftFrameWidth + RightFrameWidth) * gs_pocket_door_frame
		else
			aaa = TotalLeafWidthin2D
		endif
		add2 a_x + TotalLeafWidthin2D/2, -posLeafy - posHole

		! -------------- HOTSPOT EDITING
		add2 0, -gs_leaf_thk/2
		hotspot2 -aaa/2, 			0,	unID_Opening, gs_open2D, 1+128	:	unID_Opening=unID_Opening+1
		hotspot2 -aaa/2+gs_open2D,	0,	unID_Opening, gs_open2D, 2		:	unID_Opening=unID_Opening+1
		hotspot2 -aaa,				0,	unID_Opening, gs_open2D, 3		:	unID_Opening=unID_Opening+1

		hotspot2 aaa/2+gs_open2D,	0,	unID_Opening:	unID_Opening=unID_Opening+1
		del 1

		if gs_iSlidingType = LINE_SHAPE_SLIDING_SIMPLE_LINE then
			add2 0, -gs_leaf_thk/2
			gosub "LineShapeSimpleLine"
			del 1
		endif

		add2 gs_open2D, 0

		if gs_iSlidingType = LINE_SHAPE_SLIDING_ARROW then
			if WIDO_REVEAL_SIDE then
				add2 0, WALL_THICKNESS - WIDO_SILL - gs_frame_thk + posLeafy + posHole
			else
				add2 0, WIDO_SILL + posLeafy + posHole
			endif
			gosub "LineShapeArrow"
			del 1
		endif

		if lod2D = DET2D_FS_SIMPLE | lod2D = DET2D_FS_MIDDLE | lod2D = DET2D_FS_SIMPLE_CHI then add2 0, -gs_leaf_thk/2
		mul2 -1, 1

		gosub "Leaf_Panel"

		del 2

		if lod2D = DET2D_FS_SIMPLE | lod2D = DET2D_FS_MIDDLE | lod2D = DET2D_FS_SIMPLE_CHI then del 1

		del 1
	endif


	! =============================================================================
	! Double Pocket Door Leaf
	! =============================================================================

	if	gs_leaf_optype_m = LEAF_2L_POCKET then
		if bDetailedSlidingLeafSymbol then
			lod2D = DET2D_FS_DETAILED
		else
			lod2D = DET2D_FS_MIDDLE
		endif

		add2 a_x + TotalLeafWidthin2D/2, -posLeafy - posHole

		! -------------- HOTSPOT EDITING
		add2 0, -gs_leaf_thk/2
		hotspot2 0, 			0,	unID_Opening, gs_open2D, 1+128	:	unID_Opening=unID_Opening+1
		hotspot2 gs_open2D,		0,	unID_Opening, gs_open2D, 2		:	unID_Opening=unID_Opening+1
		hotspot2 -1,			0,	unID_Opening, gs_open2D, 3		:	unID_Opening=unID_Opening+1
		del 1

		if gs_iSlidingType = LINE_SHAPE_SLIDING_SIMPLE_LINE then
			add2 0, -gs_leaf_thk/2
			gosub "LineShapeSimpleLine"
			del 1
		endif

		for i = 1 to 2
			if lod2D = DET2D_FS_SIMPLE & abs(gs_open2D) > EPS then
				if i = 1 then
					aaa = TotalLeafWidthin2D/2 - LeftFrameWidth * gs_pocket_door_frame
				else
					aaa = TotalLeafWidthin2D/2 - RightFrameWidth * gs_pocket_door_frame
				endif
			else
				aaa = TotalLeafWidthin2D/2
			endif

			mul2 -1, 1
			add2 -aaa/2-gs_open2D, 0

			hotspot2 -aaa/2,	-gs_leaf_thk/2,	unID_Opening:	unID_Opening=unID_Opening+1

			if gs_iSlidingType = LINE_SHAPE_SLIDING_ARROW then
				if WIDO_REVEAL_SIDE then
					add2 0, WALL_THICKNESS - WIDO_SILL - gs_frame_thk + posLeafy + posHole
				else
					add2 0, WIDO_SILL + posLeafy + posHole
				endif
				mul2 -1, 1
				gosub "LineShapeArrow"
				del 2
			endif

			if lod2D = DET2D_FS_SIMPLE | lod2D = DET2D_FS_MIDDLE | lod2D = DET2D_FS_SIMPLE_CHI then add2 0, -gs_leaf_thk/2

			gosub "Leaf_Panel"

			if lod2D = DET2D_FS_SIMPLE | lod2D = DET2D_FS_MIDDLE | lod2D = DET2D_FS_SIMPLE_CHI then del 1

			del 1
		next i
		del 2

		del 1
	endif

	! =============================================================================
	! Sliding Folding Multi-panel 1 Side Panel
	! =============================================================================

	if	gs_leaf_optype_m = LEAF_1L_MULTIPANEL | gs_leaf_optype_m = LEAF_1L_MULTIPANEL_M then
		if bDetailedSlidingLeafSymbol then
			lod2D = DET2D_FS_DETAILED
		else
			lod2D = DET2D_FS_MIDDLE
		endif

		if bSimpleLeafin50 & lod2D = DET2D_FS_DETAILED then
			lod2D = DET2D_FS_MIDDLE		!simple leaf in detailed symbol
		endif

		bOpened = (gs_open2D > EPS)

		opmax = TotalLeafWidthin2D

		add2 a_x + TotalLeafWidthin2D/2, 0

		if gs_leaf_optype_m = LEAF_1L_MULTIPANEL_M then mul2 -1, 1

		! -------------- HOTSPOT EDITING
		add2 TotalLeafWidthin2D/2, 0
		hotspot2 0, 					0,		unID_Opening,	gs_open2D,	1+128	:	unID_Opening=unID_Opening+1
		hotspot2 -gs_open2D, 			0,		unID_Opening,	gs_open2D,	2		:	unID_Opening=unID_Opening+1
		hotspot2 TotalLeafWidthin2D+1, 	0,		unID_Opening,	gs_open2D,	3		:	unID_Opening=unID_Opening+1
		del 1

		if gs_door_rail then
			add2 -TotalLeafWidthin2D/2,0
			pen gs_frame_pen_cont
			line_property 0
			line2 0, 0, 			TotalLeafWidthin2D,  0
			line2 0,-gs_leaf_thk,	TotalLeafWidthin2D,	-gs_leaf_thk
			del 1
		endif

		panelWidth = (TotalLeafWidthin2D) / (gs_leaf_num - bMiddleStacking)


		w = (opmax-gs_open2D) / (gs_leaf_num - bMiddleStacking)

		alph = acs(w/sqr((panelWidth)**2+(gs_leaf_thk**2)))+atn(gs_leaf_thk/panelWidth)

		if	(gs_iSlidingType = LINE_SHAPE_SLIDING_SIMPLE_LINE) &\
			(bOpened | not(gs_opening_leaves | gs_opening_leaves2)) then

			add2 0, (-gs_frame_thk/2) * (lod2D = DET2D_FS_MIDDLE | lod2D = DET2D_FS_DETAILED)
			gosub "LineShapeSimpleLine"
			del 1
		endif

		add2 -TotalLeafWidthin2D/2, 0

		if bOpened then
			for i=1 to gs_leaf_num

				if bMiddleStacking and (i=1 or i=gs_leaf_num) then
					aaa = panelWidth/2
				else
					aaa = panelWidth
				endif

				simpAng = 0
				if lod2D = DET2D_FS_SIMPLE | lod2D = DET2D_FS_SIMPLE_CHI | lod2D = DET2D_FS_MIDDLE then
					simpAng = atn(gs_leaf_thk / aaa)
				endif

				if i = gs_leaf_num then
					bShowHandleonActualLeaf = (gs_handle_type_m <> 0)
				else
					if i = 1 & gs_opening_leaves then
						bShowHandleonActualLeaf = (gs_handle_type_m <> 0)
					else
						bShowHandleonActualLeaf	= 0
					endif
				endif

				if i=1 then
					rot2 alph*bOpened
				else
					if i mod 2 then
						rot2 2*alph*bOpened
						add2 0, 0
					else
						rot2 -2*alph*bOpened
						add2 0,gs_leaf_thk
					endif
				endif

				temp_aaa = aaa

				if SimpAng then
					aaa = sqr(gs_leaf_thk^2 + aaa^2)
					if i mod 2 then
						add2 0,0
						rot2 -SimpAng
					else
						add2 0,-gs_leaf_thk
						rot2 SimpAng
					endif
				endif

				if i=1 and gs_opening_leaves then
					mul2 -1, 1
					add2 -aaa/2, 0
				else
					add2 aaa/2, 0
				endif

				gosub "Leaf_Panel"

				del 1 + (i=1 and gs_opening_leaves)

				if SimpAng then del 2

				aaa = temp_aaa
				if i mod 2 then
					add2 aaa, -gs_leaf_thk
				else
					add2 aaa, 0
				endif
			next i

			del 3 * gs_leaf_num - 1
		else

			if bMiddleStacking then
				leafWidth = panelWidth/2
			else
				leafWidth = panelWidth
			endif
			aaa = leafWidth

			add2 leafWidth, 0
			if gs_opening_leaves then
				if gs_iSwingType = LINE_SHAPE_SWING_SIMPLE_LINE then
					add2 -aaa/2, (-gs_frame_thk/2) * (lod2D = DET2D_FS_MIDDLE | lod2D = DET2D_FS_DETAILED)
					gosub "LineShapeSimpleLine"
					del 1
				else
					! -------------- HOTSPOT EDITING
					hotspot2 0, 							0,							unID_Opening,	gs_open_2D,	6 + reverse2dAngleMask		:	unID_Opening=unID_Opening+1
					hotspot2 -10, 							0,							unID_Opening,	gs_open_2D,	4+128	:	unID_Opening=unID_Opening+1
					hotspot2 -leafWidth*cos(gs_open_2D),	leafWidth*sin(gs_open_2D),	unID_Opening,	gs_open_2D,	5		:	unID_Opening=unID_Opening+1

					! Swing Line ------------------------------
					pen gs_opLinePen
					drawindex 30
					line_type gs_swingLineType

					if gs_open_2D > 0 then
						if gs_iSwingType = LINE_SHAPE_SWING_CURVED then
							arc2 0, 0, aaa, 180-gs_open_2D, 180
!						else
!							line2 -aaa , 0,
!							- aaa * cos(gs_open_2D) - gs_leaf_thk * sin(gs_open_2D) * (lod2D = DET2D_FS_DETAILED),
!							aaa * sin(gs_open_2D) - gs_leaf_thk * cos(gs_open_2D) * (lod2D = DET2D_FS_DETAILED)
						endif
					endif
				endif
				line_type gs_panelLineType
			else
				unID_Opening = unID_Opening + 4
				bShowHandleonActualLeaf	= 0
			endif

			if not(gs_opening_leaves) | (gs_opening_leaves & not(gs_iSwingType = LINE_SHAPE_SWING_SIMPLE_LINE)) then
				rot2 -gs_open_2D * gs_opening_leaves
				add2 -leafWidth/2, 0
				mul2 -1, 1
				gosub "Leaf_Panel"
				del 3
			endif


			bShowHandleonActualLeaf	= 0
			for i=1 to gs_leaf_num-2
				leafWidth = panelWidth
				aaa = leafWidth

				add2 aaa/2, 0
				gosub "Leaf_Panel"
				del 1

				add2 aaa, 0
			next i

			if bMiddleStacking then
				leafWidth = panelWidth/2
			else
				leafWidth = panelWidth
			endif
			aaa = leafWidth

			bShowHandleonActualLeaf = (gs_handle_type_m <> 0)
			if gs_opening_leaves2 then
				if gs_iSwingType = LINE_SHAPE_SWING_SIMPLE_LINE then
					add2 aaa/2, (-gs_frame_thk/2) * (lod2D = DET2D_FS_MIDDLE | lod2D = DET2D_FS_DETAILED)
					gosub "LineShapeSimpleLine"
					del 1
				else
					! -------------- HOTSPOT EDITING
					hotspot2 0, 							0,								unID_Opening,	gs_open_2D_2,	6 + 512 - reverse2dAngleMask		:	unID_Opening=unID_Opening+1
					hotspot2 10, 							0,								unID_Opening,	gs_open_2D_2,	4+128	:	unID_Opening=unID_Opening+1
					hotspot2 leafWidth*cos(gs_open_2D_2),	leafWidth*sin(gs_open_2D_2),	unID_Opening,	gs_open_2D_2,	5		:	unID_Opening=unID_Opening+1

					! Swing Line ------------------------------
					pen gs_opLinePen
					drawindex 30
					line_type gs_swingLineType

					if gs_open_2D_2 > 0 then
						if gs_iSwingType = LINE_SHAPE_SWING_CURVED then	! Curved
							arc2 0, 0, aaa, 0, gs_open_2D_2
!						else
!							line2 aaa , 0,
!							aaa * cos(gs_open_2D_2) + gs_leaf_thk * sin(gs_open_2D_2) * (lod2D = DET2D_FS_DETAILED),
!							aaa * sin(gs_open_2D_2) - gs_leaf_thk * cos(gs_open_2D_2) * (lod2D = DET2D_FS_DETAILED)
						endif
					endif
				endif
				line_type gs_panelLineType
			else
				unID_Opening = unID_Opening + 4
			endif

			if not(gs_opening_leaves2) | (gs_opening_leaves2 & not(gs_iSwingType = LINE_SHAPE_SWING_SIMPLE_LINE)) then
				rot2 gs_open_2D_2 * gs_opening_leaves2
				add2 aaa/2, 0
				gosub "Leaf_Panel"
				del 2
			endif

			del (gs_leaf_num-2)
		endif

		del 1
		if gs_leaf_optype_m = LEAF_1L_MULTIPANEL_M then del 1
		del 1
	endif



	! =============================================================================
	! Sliding Folding Multi-panel 2 Side Panel
	! =============================================================================

	if	gs_leaf_optype_m = LEAF_2L_MULTIPANEL then
		if bDetailedSlidingLeafSymbol then
			lod2D = DET2D_FS_DETAILED
		else
			lod2D = DET2D_FS_MIDDLE
		endif

		if bSimpleLeafin50 & lod2D = DET2D_FS_DETAILED then
			lod2D = DET2D_FS_MIDDLE		!simple leaf in detailed symbol
		endif

		panelWidth = (TotalLeafWidthin2D) / (gs_leaf_num + gs_leaf_num2 - bMiddleStacking)

		add2 a_x + TotalLeafWidthin2D/2, 0

		sideRatio = (gs_leaf_num2-bMiddleStacking * 0.5) / (gs_leaf_num + gs_leaf_num2 - bMiddleStacking)
		opmax = TotalLeafWidthin2D
		opmax2 = opmax * sideRatio
		opmax1 = opmax * (1 - sideRatio)

		! -------------- HOTSPOT EDITING
		openingOrig = TotalLeafWidthin2D/2 - TotalLeafWidthin2D * sideRatio
		hotspot2 openingOrig,				0, unID_Opening, gs_open2D, 1+128	: unID_Opening = unID_Opening + 1
		hotspot2 openingOrig - gs_open2D,	0, unID_Opening, gs_open2D, 2		: unID_Opening = unID_Opening + 1
		hotspot2 openingOrig + 1,			0, unID_Opening, gs_open2D, 3		: unID_Opening = unID_Opening + 1

		hotspot2 openingOrig,				0, unID_Opening, gs_open2D_2, 1		: unID_Opening = unID_Opening + 1
		hotspot2 openingOrig + gs_open2D_2,	0, unID_Opening, gs_open2D_2, 2		: unID_Opening = unID_Opening + 1
		hotspot2 openingOrig - 1,			0, unID_Opening, gs_open2D_2, 3		: unID_Opening = unID_Opening + 1

		if gs_door_rail then
			add2 -TotalLeafWidthin2D/2,0
			pen gs_frame_pen_cont
			line_property 0
			line2 0, 0, 			TotalLeafWidthin2D,  0
			line2 0,-gs_leaf_thk,	TotalLeafWidthin2D,	-gs_leaf_thk
			del 1
		endif

		if	((gs_iSlidingType = LINE_SHAPE_SLIDING_SIMPLE_LINE) &\
			 ((gs_open2D > EPS) | not(gs_opening_leaves)) &\
			 ((gs_open2D_2 > EPS) | not(gs_opening_leaves2))) then

			add2 0, (-gs_frame_thk/2) * (lod2D = DET2D_FS_MIDDLE | lod2D = DET2D_FS_DETAILED)
			gosub "LineShapeSimpleLine"
			del 1
		endif

		add2 -TotalLeafWidthin2D/2, 0

		for j = 1 to 2
			if j = 1 then
				w=(opmax1-gs_open2D) / (gs_leaf_num - bMiddleStacking * 0.5)
				leafNum = gs_leaf_num
				bOpened = (gs_open2D > EPS)
			else
				w=(opmax2-gs_open2D_2) / (gs_leaf_num2 - bMiddleStacking * 0.5)
				leafNum = gs_leaf_num2
				bOpened = (gs_open2D_2 > EPS)
			endif


			alph = acs(w/sqr((panelWidth)^2+(gs_leaf_thk^2))) + atn(gs_leaf_thk/panelWidth)


			if bOpened then
				for i=1 to leafNum

					if bMiddleStacking and (i=1) then
						aaa = panelWidth/2
					else
						aaa = panelWidth
					endif

					simpAng = 0
					if lod2D = DET2D_FS_SIMPLE | lod2D = DET2D_FS_SIMPLE_CHI | lod2D = DET2D_FS_MIDDLE then
						simpAng = atn(gs_leaf_thk / aaa)
					endif


					if i=1 then
						rot2 alph*bOpened
					else
						if i mod 2 then
							rot2 2*alph*bOpened
							add2 0, 0
						else
							rot2 -2*alph*bOpened
							add2 0, gs_leaf_thk
						endif
					endif

					if i = leafNum then
						bShowHandleonActualLeaf = (gs_handle_type_m <> 0)
					else
						if (j = 1 & i = 1 & gs_opening_leaves) | (j = 2 & i = 1 & gs_opening_leaves2) then
							bShowHandleonActualLeaf = (gs_handle_type_m <> 0)
						else
							bShowHandleonActualLeaf = 0
						endif
					endif

					temp_aaa = aaa

					if SimpAng then
						aaa = sqr(gs_leaf_thk^2 + aaa^2)
						if i mod 2 then
							add2 0,0
							rot2 -SimpAng
						else
							add2 0,-gs_leaf_thk
							rot2 SimpAng
						endif
					endif

					if i=1 and gs_opening_leaves then
						mul2 -1, 1
						add2 -aaa/2, 0
					else
						add2 aaa/2, 0
					endif

					gosub "Leaf_Panel"

					del 1 + (i=1 and gs_opening_leaves)
					if SimpAng then del 2

					aaa = temp_aaa
					if i mod 2 then
						add2 aaa, -gs_leaf_thk
					else
						add2 aaa, 0
					endif
				next i
				del 3 * leafNum - 1
			else
				if bMiddleStacking then
					leafWidth = panelWidth/2
				else
					leafWidth = panelWidth
				endif
				aaa = leafWidth

				add2 leafWidth, 0

				if j = 1 then
					if gs_opening_leaves then
						if gs_iSwingType = LINE_SHAPE_SWING_SIMPLE_LINE then
							add2 -aaa/2, (-gs_frame_thk/2) * (lod2D = DET2D_FS_MIDDLE | lod2D = DET2D_FS_DETAILED)
							gosub "LineShapeSimpleLine"
							del 1
						else
							! -------------- HOTSPOT EDITING
							hotspot2 0, 							0, 								unID_Opening,	gs_open_2D, 6 + reverse2dAngleMask		: unID_Opening = unID_Opening + 1
							hotspot2 -10, 							0, 								unID_Opening,	gs_open_2D, 4+128	: unID_Opening = unID_Opening + 1
							hotspot2 -leafWidth*cos(gs_open_2D), 	leafWidth*sin(gs_open_2D),		unID_Opening,	gs_open_2D,	5		: unID_Opening = unID_Opening + 1

							! Swing Line ------------------------------
							pen gs_opLinePen
							drawindex 30
							line_type gs_swingLineType

							if gs_open_2D > 0 then
								if gs_iSwingType = LINE_SHAPE_SWING_CURVED then
									arc2 0, 0, aaa, 180-gs_open_2D, 180
!								else
!									line2 -aaa , 0,
!									- aaa * cos(gs_open_2D) - gs_leaf_thk * sin(gs_open_2D) * (lod2D = DET2D_FS_DETAILED),
!									aaa * sin(gs_open_2D) - gs_leaf_thk * cos(gs_open_2D) * (lod2D = DET2D_FS_DETAILED)
								endif
							endif
						endif
						line_type gs_panelLineType
						bShowHandleonActualLeaf = (gs_handle_type_m <> 0)
					else
						unID_Opening=unID_Opening+4
						bShowHandleonActualLeaf = 0
					endif
					rot2 -gs_open_2D * gs_opening_leaves
				else
					if gs_opening_leaves2 then
						if gs_iSwingType = LINE_SHAPE_SWING_SIMPLE_LINE then
							add2 -aaa/2, (-gs_frame_thk/2) * (lod2D = DET2D_FS_MIDDLE | lod2D = DET2D_FS_DETAILED)
							gosub "LineShapeSimpleLine"
							del 1
						else
							! -------------- HOTSPOT EDITING
							hotspot2 0,								0,								unID_Opening,	gs_open_2D_2, 6 + 512 - reverse2dAngleMask		: unID_Opening = unID_Opening + 1
							hotspot2 -10,							0,								unID_Opening,	gs_open_2D_2, 4+128		: unID_Opening = unID_Opening + 1
							hotspot2 -leafWidth*cos(gs_open_2D_2),	leafWidth*sin(gs_open_2D_2),	unID_Opening,	gs_open_2D_2,5			: unID_Opening = unID_Opening + 1

							! Swing Line ------------------------------
							pen gs_opLinePen
							drawindex 30
							line_type gs_swingLineType

							if gs_open_2D_2 > 0 then
								if gs_iSwingType = LINE_SHAPE_SWING_CURVED then
									arc2 0, 0, aaa, 180-gs_open_2D_2, 180
!								else
!									line2 -aaa , 0,
!									- aaa * cos(gs_open_2D_2) - gs_leaf_thk * sin(gs_open_2D_2) * (lod2D = DET2D_FS_DETAILED),
!									aaa * sin(gs_open_2D_2) - gs_leaf_thk * cos(gs_open_2D_2) * (lod2D = DET2D_FS_DETAILED)
								endif
							endif
						endif
						line_type gs_panelLineType
						bShowHandleonActualLeaf = (gs_handle_type_m <> 0)
					else
						unID_Opening=unID_Opening+4
						bShowHandleonActualLeaf = 0
					endif
					rot2 -gs_open_2D_2 * gs_opening_leaves2
				endif

				if j = 1 & (not(gs_opening_leaves) | (gs_opening_leaves & not(gs_iSwingType = LINE_SHAPE_SWING_SIMPLE_LINE))) then
					add2 -leafWidth/2, 0
					mul2 -1, 1
					gosub "Leaf_Panel"
					del 2
				endif

				if j = 2 & (not(gs_opening_leaves2) | (gs_opening_leaves2 & not(gs_iSwingType = LINE_SHAPE_SWING_SIMPLE_LINE))) then
					add2 -leafWidth/2, 0
					mul2 -1, 1
					gosub "Leaf_Panel"
					del 2
				endif

				del 1

				leafWidth = panelWidth
				aaa = leafWidth

				for i=1 to leafNum-1
					if i = leafNum-1 then
						bShowHandleonActualLeaf = (gs_handle_type_m <> 0)
					else
						bShowHandleonActualLeaf = 0
					endif

					add2 panelWidth/2, 0

					gosub "Leaf_Panel"

					del 1

					add2 panelWidth, 0
				next i
				del leafNum-1

				del 1
			endif

			add2 opmax, 0
			mul2 -1, 1
		next j

		del 4

		del 2
	endif
else

	! =============================================================================
	! 1 Leaf Panels, 2 Leaf Panels, Pivot Door Leafs
	! =============================================================================

	if	gs_leaf_optype_m = LEAF_1L_SIDE_HUNG |\
		gs_leaf_optype_m = LEAF_1L_SIDE_HUNG_M |\
		gs_leaf_optype_m = LEAF_1L_DOUBLE_ACTING |\
		gs_leaf_optype_m = LEAF_1L_DOUBLE_ACTING_M |\
		gs_leaf_optype_m = LEAF_2L_SIDE_HUNG |\
		gs_leaf_optype_m = LEAF_2L_DOUBLE_ACTING |\
		gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS |\
		gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS_M |\
		gs_leaf_optype_m = LEAF_1L_PIVOT |\
		gs_leaf_optype_m = LEAF_1L_PIVOT_M then


		if gs_iSwingType = LINE_SHAPE_SWING_SIMPLE_LINE then
			add2 a_x + TotalLeafWidthin2D/2, 0
			mul2 -1, 1
			add2 0, (-gs_frame_thk/2) * (lod2D = DET2D_FS_MIDDLE | lod2D = DET2D_FS_DETAILED)
			gosub "LineShapeSimpleLine"
			del 3
		endif
	endif


	! =============================================================================
	! Sliding Leafs
	! =============================================================================

	if	gs_leaf_optype_m = LEAF_2L_1SLIDING |\
		gs_leaf_optype_m = LEAF_2L_1SLIDING_M |\
		gs_leaf_optype_m = LEAF_2L_2SLIDING |\
		gs_leaf_optype_m = LEAF_2L_2SLIDING_M |\
		gs_leaf_optype_m = LEAF_3L_2SLIDING |\
		gs_leaf_optype_m = LEAF_3L_2SLIDING_M |\
		gs_leaf_optype_m = LEAF_4L_2SLIDING |\
		gs_leaf_optype_m = LEAF_4L_3SLIDING |\
		gs_leaf_optype_m = LEAF_4L_3SLIDING_M |\
		gs_leaf_optype_m = LEAF_4L_4SLIDING |\
		gs_leaf_optype_m = LEAF_4L_4SLIDING_M then

		if gs_iSlidingType = LINE_SHAPE_SLIDING_SIMPLE_LINE then
			add2 a_x+TotalLeafWidthin2D/2, 0
			mul2 -1, 1
			add2 0, (-gs_frame_thk/2) * (lod2D = DET2D_FS_MIDDLE | lod2D = DET2D_FS_DETAILED)
			gosub "LineShapeSimpleLine"
			del 3
		endif
	endif


	! =============================================================================
	! External Sliding Leafs, External Double Sliding Leafs
	! =============================================================================

	if	gs_leaf_optype_m = LEAF_1L_EXTERNAL_SLIDING |\
		gs_leaf_optype_m = LEAF_1L_EXTERNAL_SLIDING_M |\
		gs_leaf_optype_m = LEAF_2L_EXTERNAL_SLIDING then

		if gs_iSlidingType = LINE_SHAPE_SLIDING_SIMPLE_LINE then
			if WIDO_REVEAL_SIDE then add2 0, WALL_THICKNESS - gs_frame_thk
			add2 a_x + TotalLeafWidthin2D/2,  0
			gosub "LineShapeSimpleLine"
			del 1
			if WIDO_REVEAL_SIDE then del 1
		endif
	endif


	! =============================================================================
	! Single Pocket Door Leaf, Double Pocket Door Leaf
	! =============================================================================

	if	gs_leaf_optype_m = LEAF_1L_POCKET |\
		gs_leaf_optype_m = LEAF_1L_POCKET_M |\
		gs_leaf_optype_m = LEAF_2L_POCKET then

		if gs_iSlidingType = LINE_SHAPE_SLIDING_SIMPLE_LINE then
			add2 a_x + TotalLeafWidthin2D/2, -posLeafy - posHole - gs_leaf_thk/2
			gosub "LineShapeSimpleLine"
			del 1
		endif
	endif


	! =============================================================================
	! Sliding Folding Multi-panel 1 Side Panel/2 Side Panel
	! =============================================================================

	if	gs_leaf_optype_m = LEAF_1L_MULTIPANEL |\
		gs_leaf_optype_m = LEAF_1L_MULTIPANEL_M |\
		gs_leaf_optype_m = LEAF_2L_MULTIPANEL then

		if	gs_iSwingType = LINE_SHAPE_SWING_SIMPLE_LINE |\
			gs_iSlidingType = LINE_SHAPE_SLIDING_SIMPLE_LINE then

			add2 a_x + TotalLeafWidthin2D/2, (-gs_frame_thk/2) * (lod2D = DET2D_FS_MIDDLE | lod2D = DET2D_FS_DETAILED)
			gosub "LineShapeSimpleLine"
			del 1
		endif
	endif
endif

del 1


! =============================================================================
end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end
! =============================================================================


"Leaf_Panel":

	if bSecondPanel then
		_iDoorPanelType		= iDoorPanelType2
		_gs_fw_side			= gs_fw_side2
		_gs_fw_side_right	= gs_fw_side_right2
		_gs_fw_side_left	= gs_fw_side_left2
		_gs_fw_lower		= gs_fw_lower2
		_gs_fw_upper		= gs_fw_upper2
	else
		_iDoorPanelType		= iDoorPanelType
		_gs_fw_side			= gs_fw_side
		_gs_fw_side_right	= gs_fw_side_right
		_gs_fw_side_left	= gs_fw_side_left
		_gs_fw_lower		= gs_fw_lower
		_gs_fw_upper		= gs_fw_upper
	endif
	
	_bShowGlassPanelOnSymbol	= bShowGlassPanelOnSymbol
	if iLoD2D = SYMBD_M_2LINELEAFCL_GLASS then
		_iDoorPanelType				= 1
		_bShowGlassPanelOnSymbol	= 0
	endif
	
		call "DoorLeafPanels_kmod" parameters all A				= aaa,
											 B				= gs_leaf_thk,
								bHideInnerContour			= bHideInnerContour,
								lod2D						= lod2D,
								iSymbolGlassType			= iSymbolGlassType,
								iDoorPanelType				= _iDoorPanelType,
								gs_fw_side					= _gs_fw_side,
								gs_fw_side_right			= _gs_fw_side_right,
								gs_fw_side_left				= _gs_fw_side_left,
								gs_fillAirtight				= gs_fillAirtight,
								gs_penAirtight_fg			= gs_penAirtight_fg,
								gs_penAirtight_bg			= gs_penAirtight_bg,
								bShowHandleOnSymbol			= bShowHandleOnSymbol,
								bShowHandleonActualLeaf		= bShowHandleonActualLeaf,
								bShowGlassPanelOnSymbol		= _bShowGlassPanelOnSymbol,
								bShowChiSpringSymbol		= bShowChiSpringSymbol,
								bShowAirtightPanel			= bShowAirtightPanel
return

"LineShapeSimpleLine":
	drawindex 30

	pen gs_opLinePen
	line_type gs_swingLineType

	hotspot2 0, -0.50, unID_Opening
	hotspot2 0, 0.50, unID_Opening + 1
	line2 0, -0.50, 0, 0.50

	line_type gs_panelLineType
return

"LineShapeArrow":
	drawindex 30

	pen gs_opLinePen
	line_type gs_swingLineType

	if bLineShapeArrowNED then
		line2 0, 0, 0, 0.12
	endif
	line2 0, 0.12, 0.20, 0.12
	line2 0.20, 0.12, 0.15, 0.17
	line2 0.20, 0.12, 0.15, 0.07

	line_type gs_panelLineType
return
