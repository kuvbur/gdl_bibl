
! =============================================================================
! Attributes
! =============================================================================

if gs_pen_2D		<= 0 then parameters gs_pen_2D		= 3
if gs_leaf_pen_2D	<= 0 then parameters gs_leaf_pen_2D	= 3
if gs_frame_pen		<= 0 then parameters gs_frame_pen	= 2
if gs_leaf_pen		<= 0 then parameters gs_leaf_pen	= 2
if gs_glass_pen		<= 0 then parameters gs_glass_pen	= 2

if res<3 then parameters res=3

glassarea_counter = 0


! =============================================================================
! Ventilation Profile
! =============================================================================

if bEnableVentilationProfile then
	call "Ventilation_profile_kmod" parameters	isWindow						= 0,
											iWindowType						= iWindowType,
											gs_UTrans						= gs_door_transom * not(bArchedTop),
											CasementIDArray					= CasementIDArray,
											bVentilationProfile				= bVentilationProfile,
											iVentilationProfileType			= iVentilationProfileType,
											isVentilationProfileInSash_01	= isVentilationProfileInSash_01,
											isVentilationProfileInSash_02	= isVentilationProfileInSash_02,
											isVentilationProfileInSash_03	= isVentilationProfileInSash_03,
											isVentilationProfileInSash_04	= isVentilationProfileInSash_04,
											isVentilationProfileInSash_05	= isVentilationProfileInSash_05,
											isVentilationProfileInSash_06	= isVentilationProfileInSash_06,
											isVentilationProfileInSash_07	= isVentilationProfileInSash_07,
											isVentilationProfileInSash_08	= isVentilationProfileInSash_08,
											isVentilationProfileInSash_09	= isVentilationProfileInSash_09,
											isVentilationProfileInSash_10	= isVentilationProfileInSash_10,
											isVentilationProfileInSash_11	= isVentilationProfileInSash_11,
											iMullionStyle_02				= iMullionStyle_02,
											iMullionStyle_05				= iMullionStyle_05,
											iMullionStyle_06				= iMullionStyle_06,
											iMullionStyle_07				= iMullionStyle_07,
											iMullionStyle_09				= iMullionStyle_09,
											iMullionStyle_10				= iMullionStyle_10,
											iMullionStyle_11				= iMullionStyle_11,
											gs_VentilationProfileTypeEnable	= gs_VentilationProfileTypeEnable
endif


! =============================================================================
! Leaf Opening Type Parameters
! =============================================================================

if GLOB_MODPAR_NAME = "gs_leaf_optype" then
	for i = 1 to vardim1(stLeafOpeningType)
		if gs_leaf_optype = stLeafOpeningType[i] then
			gs_leaf_optype_m = i
			parameters gs_leaf_optype_m = gs_leaf_optype_m
			i = vardim1(stLeafOpeningType)
		endif
	next i
else
	gs_leaf_optype = stLeafOpeningType[gs_leaf_optype_m]
	parameters gs_leaf_optype = gs_leaf_optype
endif


if iOpeningMethod = OPENMETHOD_OPEN_SIMP then
	values "gs_leaf_optype"	stLeafOpeningType[LEAF_1L_SIDE_HUNG],
							stLeafOpeningType[LEAF_1L_DOUBLE_ACTING]
	values "gs_leaf_optype_m"	LEAF_1L_SIDE_HUNG,
								LEAF_1L_DOUBLE_ACTING
	! Handling Multiselection
	if gs_leaf_optype_m = LEAF_2L_SIDE_HUNG		then gs_leaf_optype_m = LEAF_1L_SIDE_HUNG
	if gs_leaf_optype_m = LEAF_2L_DOUBLE_ACTING	then gs_leaf_optype_m = LEAF_1L_DOUBLE_ACTING
	parameters gs_leaf_optype_m = gs_leaf_optype_m
endif
if iOpeningMethod = OPENMETHOD_OPEN_DOUB then
	values "gs_leaf_optype"	stLeafOpeningType[LEAF_2L_SIDE_HUNG],
							stLeafOpeningType[LEAF_2L_DOUBLE_ACTING],
							stLeafOpeningType[LEAF_2L_DOUBLE_EGRESS]
	values "gs_leaf_optype_m"	LEAF_2L_SIDE_HUNG,
								LEAF_2L_DOUBLE_ACTING,
								LEAF_2L_DOUBLE_EGRESS
	! Handling Multiselection
	if gs_leaf_optype_m = LEAF_1L_SIDE_HUNG		then gs_leaf_optype_m = LEAF_2L_SIDE_HUNG
	if gs_leaf_optype_m = LEAF_1L_DOUBLE_ACTING	then gs_leaf_optype_m = LEAF_2L_DOUBLE_ACTING
	parameters gs_leaf_optype_m = gs_leaf_optype_m
endif
if iOpeningMethod = OPENMETHOD_PIVOT then
	values "gs_leaf_optype" stLeafOpeningType[LEAF_1L_PIVOT]
	values "gs_leaf_optype_m" LEAF_1L_PIVOT
endif
if iOpeningMethod = OPENMETHOD_SLIDE_INT then
	values "gs_leaf_optype"	stLeafOpeningType[LEAF_2L_1SLIDING],
							stLeafOpeningType[LEAF_2L_2SLIDING],
							stLeafOpeningType[LEAF_3L_2SLIDING],
							stLeafOpeningType[LEAF_4L_2SLIDING],
							stLeafOpeningType[LEAF_4L_3SLIDING],
							stLeafOpeningType[LEAF_4L_4SLIDING]
	values "gs_leaf_optype_m"	LEAF_2L_1SLIDING,
								LEAF_2L_2SLIDING,
								LEAF_3L_2SLIDING,
								LEAF_4L_2SLIDING,
								LEAF_4L_3SLIDING,
								LEAF_4L_4SLIDING
endif
if iOpeningMethod = OPENMETHOD_SLIDE_EXT_SIMP then
	values "gs_leaf_optype" stLeafOpeningType[LEAF_1L_EXTERNAL_SLIDING]
	values "gs_leaf_optype_m" LEAF_1L_EXTERNAL_SLIDING
endif
if iOpeningMethod = OPENMETHOD_SLIDE_EXT_DOUB then
	values "gs_leaf_optype" stLeafOpeningType[LEAF_2L_EXTERNAL_SLIDING]
	values "gs_leaf_optype_m" LEAF_2L_EXTERNAL_SLIDING
endif
if iOpeningMethod = OPENMETHOD_POCKET_SIMP then
	values "gs_leaf_optype" stLeafOpeningType[LEAF_1L_POCKET]
	values "gs_leaf_optype_m" LEAF_1L_POCKET
endif
if iOpeningMethod = OPENMETHOD_POCKET_DOUB then
	values "gs_leaf_optype" stLeafOpeningType[LEAF_2L_POCKET]
	values "gs_leaf_optype_m" LEAF_2L_POCKET
endif
if iOpeningMethod = OPENMETHOD_SLIDFOLD_SIMP then
	if gs_leaf_optype_m = LEAF_1L_MULTIPANEL_M then
		values "gs_leaf_optype" stLeafOpeningType[LEAF_1L_MULTIPANEL_M]
		values "gs_leaf_optype_m" LEAF_1L_MULTIPANEL_M
	else
		values "gs_leaf_optype" stLeafOpeningType[LEAF_1L_MULTIPANEL]
		values "gs_leaf_optype_m" LEAF_1L_MULTIPANEL
	endif
endif
if iOpeningMethod = OPENMETHOD_SLIDFOLD_BIFOLD then
	values "gs_leaf_optype" stLeafOpeningType[LEAF_2L_MULTIPANEL]
	values "gs_leaf_optype_m" LEAF_2L_MULTIPANEL
endif

if	gs_leaf_optype_m = LEAF_1L_PIVOT |\
	gs_leaf_optype_m = LEAF_1L_PIVOT_M |\
	gs_leaf_optype_m = LEAF_1L_EXTERNAL_SLIDING |\
	gs_leaf_optype_m = LEAF_1L_EXTERNAL_SLIDING_M |\
	gs_leaf_optype_m = LEAF_2L_EXTERNAL_SLIDING |\
	gs_leaf_optype_m = LEAF_1L_POCKET |\
	gs_leaf_optype_m = LEAF_1L_POCKET_M |\
	gs_leaf_optype_m = LEAF_2L_POCKET |\
	gs_leaf_optype_m = LEAF_1L_MULTIPANEL |\
	gs_leaf_optype_m = LEAF_1L_MULTIPANEL_M |\
	gs_leaf_optype_m = LEAF_2L_MULTIPANEL then

	! Hide Leaf Opening Type when only one opening type available
	hideparameter	"gs_leaf_optype",
					"gs_leaf_optype_m"
	lock			"gs_leaf_optype",
					"gs_leaf_optype_m"
endif

if	(gs_leaf_optype_m = LEAF_1L_POCKET |\
	gs_leaf_optype_m = LEAF_1L_POCKET_M |\
	gs_leaf_optype_m = LEAF_2L_POCKET) & not(gs_pocket_frame) then
	hideparameter	"gs_pocket_frame_thk"
	lock			"gs_pocket_frame_thk"
endif


! =============================================================================
! Door Specific Parameters
! =============================================================================

if GLOB_MODPAR_NAME = "gs_SashText_typ" | gs_SashText_typ_num = 0 then
	gs_SashText_typ_num = MITERED_JOINT
	if gs_SashText_typ = stFrameElemJoin[2] then gs_SashText_typ_num = BUTT_JOINT
	parameters gs_SashText_typ_num = gs_SashText_typ_num
else
	gs_SashText_typ = stFrameElemJoin[gs_SashText_typ_num]
	parameters gs_SashText_typ = gs_SashText_typ
endif
values "gs_SashText_typ" stFrameElemJoin
values "gs_SashText_typ_num" MITERED_JOINT, BUTT_JOINT

if	gs_leaf_optype_m = LEAF_2L_1SLIDING |\
	gs_leaf_optype_m = LEAF_2L_1SLIDING_M |\
	gs_leaf_optype_m = LEAF_2L_2SLIDING |\
	gs_leaf_optype_m = LEAF_2L_2SLIDING_M |\
	gs_leaf_optype_m = LEAF_3L_2SLIDING |\
	gs_leaf_optype_m = LEAF_3L_2SLIDING_M |\
	gs_leaf_optype_m = LEAF_4L_2SLIDING |\
	gs_leaf_optype_m = LEAF_4L_3SLIDING |\
	gs_leaf_optype_m = LEAF_4L_3SLIDING_M |\
	gs_leaf_optype_m = LEAF_4L_4SLIDING |\
	gs_leaf_optype_m = LEAF_4L_4SLIDING_M |\
	gs_leaf_optype_m = LEAF_1L_EXTERNAL_SLIDING |\
	gs_leaf_optype_m = LEAF_1L_EXTERNAL_SLIDING_M |\
	gs_leaf_optype_m = LEAF_2L_EXTERNAL_SLIDING |\
	gs_leaf_optype_m = LEAF_1L_POCKET |\
	gs_leaf_optype_m = LEAF_1L_POCKET_M |\
	gs_leaf_optype_m = LEAF_2L_POCKET |\
	gs_leaf_optype_m = LEAF_1L_MULTIPANEL |\
	gs_leaf_optype_m = LEAF_1L_MULTIPANEL_M |\
	gs_leaf_optype_m = LEAF_2L_MULTIPANEL then

	if GLOB_MODPAR_NAME = "gs_door_rail_ext" then
		for i = 1 to vardim1(stRailTypes)
			if gs_door_rail_ext = stRailTypes[i] then
				gs_door_rail_ext_m = i
				parameters gs_door_rail_ext_m = gs_door_rail_ext_m
			endif
		next i
	else
		gs_door_rail_ext = stRailTypes[gs_door_rail_ext_m]
		parameters gs_door_rail_ext = gs_door_rail_ext
	endif
	if	gs_leaf_optype_m = LEAF_1L_EXTERNAL_SLIDING |\
		gs_leaf_optype_m = LEAF_1L_EXTERNAL_SLIDING_M |\
		gs_leaf_optype_m = LEAF_2L_EXTERNAL_SLIDING |\
		gs_leaf_optype_m = LEAF_1L_POCKET |\
		gs_leaf_optype_m = LEAF_1L_POCKET_M |\
		gs_leaf_optype_m = LEAF_2L_POCKET then
		values "gs_door_rail_ext" stRailTypes[2], stRailTypes[3], stRailTypes[4]
		values "gs_door_rail_ext_m" EXT_RAIL_BOTT, EXT_RAIL_TOP, EXT_RAIL_BOTT_TOP

		if not(gs_door_rail) then
			lock "gs_door_rail_ext", "gs_door_rail_ext_m", "gs_rail_mat"
		endif 

		if gs_door_rail_ext_m < 2 then
			hideparameter "gs_rail_mat"
			lock "gs_rail_mat"
		endif
	else
		hideparameter "gs_door_rail_ext", "gs_door_rail_ext_m"
		lock "gs_door_rail_ext", "gs_door_rail_ext_m"
		if not(gs_door_rail) then
			lock "gs_rail_mat"
		endif 	
	endif
else
	hideparameter "gs_door_rail", "gs_door_rail_ext", "gs_door_rail_ext_m", "gs_rail_mat"
	lock "gs_door_rail", "gs_door_rail_ext", "gs_door_rail_ext_m", "gs_rail_mat"
endif


if GLOB_MODPAR_NAME = "gs_opening_dir_sl" | gs_opening_dir_sl_m = 0 then
	gs_opening_dir_sl_m = OPENING_DIR_DEFAULT_OUTSIDE
	if gs_opening_dir_sl = stOpeningDir[2] then gs_opening_dir_sl_m = OPENING_DIR_FLIPPED_INSIDE
	parameters gs_opening_dir_sl_m = gs_opening_dir_sl_m
else
	gs_opening_dir_sl = stOpeningDir[gs_opening_dir_sl_m]
	parameters gs_opening_dir_sl = gs_opening_dir_sl
endif
values "gs_opening_dir_sl"	stOpeningDir
values "gs_opening_dir_sl_m"	OPENING_DIR_DEFAULT_OUTSIDE, OPENING_DIR_FLIPPED_INSIDE


if	gs_leaf_optype_m = LEAF_1L_PIVOT |\
	gs_leaf_optype_m = LEAF_1L_PIVOT_M then
	values "gs_pivotOffset" range [gs_leaf_thk/2, ac_leaf_width/2]
else
	hideparameter "gs_pivotOffset"
	lock "gs_pivotOffset"
endif


! =============================================================================
! Minimal Leaf Width Calclulation
! =============================================================================

minLeafWidth = 0.2 + EPS
if	iDoorPanelType = 1 then minLeafWidth = gs_leaf_thk			! Style 1 (Solid Panel)
if	iDoorPanelType = 41 |\
	iDoorPanelType = 42 |\
	iDoorPanelType = 43 |\
	iDoorPanelType = 44 then minLeafWidth = 0.3 + EPS			! Style 41, Style 42, Style 43, Style 44
if iDoorPanelType = 47 then minLeafWidth = gs_fw_side * 2 + EPS	! H-V Grid
if iDoorPanelType = 49 then minLeafWidth = gs_leaf_thk			! Custom Panel


! =============================================================================
! Frame Style parameter handling
! =============================================================================

if GLOB_MODPAR_NAME = "gs_frame_style" then
	gs_frame_style_m = 	FRAME_STYLE_BLOCK														! Block
	if gs_frame_style = gs_stDoorFrame[2] then gs_frame_style_m = FRAME_STYLE_DOUBLE_REBATE		! Double Rebate
	if gs_frame_style = gs_stDoorFrame[3] then gs_frame_style_m = FRAME_STYLE_SIMPLE_REBATE		! Simple Rebate
	if gs_frame_style = gs_stDoorFrame[6] then gs_frame_style_m = FRAME_STYLE_EXTRUSION			! Extrusion
	if gs_frame_style = gs_stDoorFrame[7] then gs_frame_style_m = FRAME_STYLE_WRAPPED_EXTRUSION	! Wrapped Extrusion
	parameters gs_frame_style_m = gs_frame_style_m
else
	gs_frame_style = gs_stDoorFrame[gs_frame_style_m]
	parameters gs_frame_style= gs_frame_style
endif
if bFrameWOutRebate then
	! double acting, double egress ans sliding doors
	if	bEnableNEDFrameStyles &\
		(gs_leaf_optype_m = LEAF_2L_1SLIDING |\
		 gs_leaf_optype_m = LEAF_2L_1SLIDING_M |\
		 gs_leaf_optype_m = LEAF_2L_2SLIDING |\
		 gs_leaf_optype_m = LEAF_2L_2SLIDING_M |\
		 gs_leaf_optype_m = LEAF_3L_2SLIDING |\
		 gs_leaf_optype_m = LEAF_3L_2SLIDING_M |\
		 gs_leaf_optype_m = LEAF_4L_2SLIDING |\
		 gs_leaf_optype_m = LEAF_4L_3SLIDING |\
		 gs_leaf_optype_m = LEAF_4L_3SLIDING_M |\
		 gs_leaf_optype_m = LEAF_4L_4SLIDING |\
		 gs_leaf_optype_m = LEAF_4L_4SLIDING_M) then

		values "gs_frame_style_m"	FRAME_STYLE_BLOCK,
									FRAME_STYLE_EXTRUSION,
									FRAME_STYLE_WRAPPED_EXTRUSION
		values "gs_frame_style" gs_stDoorFrame[1],
								gs_stDoorFrame[6],
								gs_stDoorFrame[7]
	else
		values "gs_frame_style_m" FRAME_STYLE_BLOCK
		values "gs_frame_style" gs_stDoorFrame[1]
		lock "gs_frame_style", "gs_frame_style_m"
		if not(bForceToShowFrameStyle) then
			hideparameter "gs_frame_style"
		endif
	endif

	if (GLOB_MODPAR_NAME = "gs_leaf_optype"		|\
		GLOB_MODPAR_NAME = "gs_leaf_optype_m")	then

		if (gs_leaf_optype_m = LEAF_1L_DOUBLE_ACTING	|\
			 gs_leaf_optype_m = LEAF_1L_DOUBLE_ACTING_M	|\
			 gs_leaf_optype_m = LEAF_2L_DOUBLE_ACTING	|\
			 gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS	|\
			 gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS_M	) &\
			gs_frame_style_m <> FRAME_STYLE_BLOCK then

			parameters gs_frame_auto_changed = 1
		endif
	else
		parameters gs_frame_auto_changed = 0
	endif
else
	if bBombShelter then
		values "gs_frame_style_m" FRAME_STYLE_BLOCK, FRAME_STYLE_SIMPLE_REBATE
		values "gs_frame_style" gs_stDoorFrame[1], gs_stDoorFrame[3]
	else
		if bEnableNEDFrameStyles then
			values "gs_frame_style_m"	FRAME_STYLE_BLOCK,
										FRAME_STYLE_DOUBLE_REBATE,
										FRAME_STYLE_SIMPLE_REBATE,
										FRAME_STYLE_EXTRUSION,
										FRAME_STYLE_WRAPPED_EXTRUSION
			values "gs_frame_style" gs_stDoorFrame[1],
									gs_stDoorFrame[2],
									gs_stDoorFrame[3],
									gs_stDoorFrame[6],
									gs_stDoorFrame[7]
		else
			values "gs_frame_style_m"	FRAME_STYLE_BLOCK,
										FRAME_STYLE_DOUBLE_REBATE,
										FRAME_STYLE_SIMPLE_REBATE
			values "gs_frame_style" gs_stDoorFrame[1],
									gs_stDoorFrame[2],
									gs_stDoorFrame[3]
			endif
	endif
endif
if bThreshold then
	if (GLOB_MODPAR_NAME = "gs_leaf_optype"		|\
		GLOB_MODPAR_NAME = "gs_leaf_optype_m")	then

		if	(gs_leaf_optype_m = LEAF_1L_DOUBLE_ACTING	|\
			 gs_leaf_optype_m = LEAF_1L_DOUBLE_ACTING_M	|\
			 gs_leaf_optype_m = LEAF_2L_DOUBLE_ACTING	|\
			 gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS	|\
			 gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS_M	) then

			parameters gs_threshold_auto_changed = 1
		endif
	else
		parameters gs_threshold_auto_changed = 0
	endif
endif
if (gs_sill_outside = 1  & iSillType = SILL_TIMBER) then
	if (GLOB_MODPAR_NAME = "gs_leaf_optype"		|\
		GLOB_MODPAR_NAME = "gs_leaf_optype_m")	then

		if	(gs_leaf_optype_m = LEAF_1L_DOUBLE_ACTING	|\
			 gs_leaf_optype_m = LEAF_1L_DOUBLE_ACTING_M	|\
			 gs_leaf_optype_m = LEAF_2L_DOUBLE_ACTING	|\
			 gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS	|\
			 gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS_M	) then

			parameters gs_sill_auto_changed = 1
		endif
	else
		parameters gs_sill_auto_changed = 0
	endif
endif
if not(iRevealType = REVEAL_EDGE | iRevealType = REVEAL_NEGATIVE) then
	if (GLOB_MODPAR_NAME = "gs_frame_style"					|\
		GLOB_MODPAR_NAME = "gs_frame_style_m")				&\
		(gs_frame_style_m = FRAME_STYLE_WRAPPED_EXTRUSION	) then

		parameters gs_reveal_auto_changed_frstyle = 1
	endif
endif
if (gs_trim_inside | gs_trim_outside) then
	if (GLOB_MODPAR_NAME = "gs_frame_style"					|\
		GLOB_MODPAR_NAME = "gs_frame_style_m")				&\
		(gs_frame_style_m = FRAME_STYLE_WRAPPED_EXTRUSION	) then

		parameters gs_casing_auto_changed_frstyle = 1
	endif
endif
if	((gs_sill_outside_sl_left & gs_sidelight_left & gs_sidelight_parapet_hgt_left > EPS)		|\
	 (gs_sill_outside_sl_right & gs_sidelight_right & gs_sidelight_parapet_hgt_right > EPS))	then
	if (GLOB_MODPAR_NAME = "gs_frame_style"					|\
		GLOB_MODPAR_NAME = "gs_frame_style_m")				&\
		(gs_frame_style_m = FRAME_STYLE_WRAPPED_EXTRUSION	) then

		parameters gs_sill_auto_changed_frstyle = 1
	endif
endif
if	((gs_board_inside_sl_left & gs_sidelight_left & gs_sidelight_parapet_hgt_left > EPS)		|\
	 (gs_board_inside_sl_right & gs_sidelight_right & gs_sidelight_parapet_hgt_right > EPS))	then
	if (GLOB_MODPAR_NAME = "gs_frame_style"					|\
		GLOB_MODPAR_NAME = "gs_frame_style_m")				&\
		(gs_frame_style_m = FRAME_STYLE_WRAPPED_EXTRUSION	) then

		parameters gs_board_auto_changed_frstyle = 1
	endif
endif
if GLOB_MODPAR_NAME = "" & GLOB_UI_BUTTON_ID = 0 then
	parameters gs_frame_auto_changed			= 0
	parameters gs_threshold_auto_changed		= 0
	parameters gs_sill_auto_changed				= 0
	parameters gs_reveal_auto_changed_frstyle	= 0
	parameters gs_casing_auto_changed_frstyle	= 0
	parameters gs_sill_auto_changed_frstyle		= 0
	parameters gs_board_auto_changed_frstyle	= 0
endif


! =============================================================================
! Frame, Leaf and Sash parameter handling
! =============================================================================

if not(gs_sidelight_left) & not(gs_sidelight_right) then
	if bArchedTop then
		iWindowShape = SHAPE_ARCHED
	else
		iWindowShape = SHAPE_RECTANGULAR
	endif
endif

if gs_sidelight_left & not(gs_sidelight_right) then
	if bArchedTop then
		iWindowShape = SHAPE_ARCHED_HALF_T_LEFT
	else
		iWindowShape = SHAPE_HALF_T_LEFT
	endif
endif

if not(gs_sidelight_left) & gs_sidelight_right then
	if bArchedTop then
		iWindowShape = SHAPE_ARCHED_HALF_T_RIGHT
	else
		iWindowShape = SHAPE_HALF_T_RIGHT
	endif
endif

if gs_sidelight_left & gs_sidelight_right then
	if bArchedTop then
		iWindowShape = SHAPE_ARCHED_T
	else
		iWindowShape = SHAPE_T
	endif
endif

call "DoorFrame_kmod" parameters A=A,
	iWindowShape					= iWindowShape,
	gs_frame_style_m				= gs_frame_style_m,
	gs_door_transom					= gs_door_transom,
	gs_sidelight_left				= gs_sidelight_left,
	gs_sidelight_parapet_hgt_left	= gs_sidelight_parapet_hgt_left,
	gs_bSidelight_fr_hdiv_left		= gs_bSidelight_fr_hdiv_left,
	gs_sidelight_right				= gs_sidelight_right,
	gs_sidelight_parapet_hgt_right	= gs_sidelight_parapet_hgt_right,
	gs_bSidelight_fr_hdiv_right		= gs_bSidelight_fr_hdiv_right,
	gs_frame_wthk					= gs_frame_wthk,
	gs_sframe						= gs_sframe,
	gs_frame_thk					= gs_frame_thk,
	gs_frame_thkin					= gs_frame_thkin,
	gs_uniform_framewidth			= gs_uniform_framewidth,
	gs_frame_width					= gs_frame_width,
	gs_frame_width_right			= gs_frame_width_right,
	gs_frame_width_right_2			= gs_frame_width_right_2,
	gs_frame_width_low_right_sl		= gs_frame_width_low_right_sl,
	gs_frame_width_left				= gs_frame_width_left,
	gs_frame_width_left_2			= gs_frame_width_left_2,
	gs_frame_width_low_left_sl		= gs_frame_width_low_left_sl,
	gs_frame_width_upper			= gs_frame_width_upper,
	gs_frame_width_transom			= gs_frame_width_transom,
	gs_ds_thk						= gs_ds_thk,
	gs_rebate_width					= gs_rebate_width,
	gs_sidelight_rebate_width		= gs_sidelight_rebate_width,
	gs_sidelight_rebate_depth		= gs_sidelight_rebate_depth,
	gs_opening_dir_SL_m				= gs_opening_dir_SL_m,
	gs_leaf_optype_m				= gs_leaf_optype_m,
	gs_leaf_thk						= gs_leaf_thk,
	bEnableLeafRebateDepth3D		= bEnableLeafRebateDepth3D



if gs_leaf_thk < EPS then
	gs_leaf_thk = EPS
	parameters gs_leaf_thk = gs_leaf_thk
endif
if gs_sash_width < EPS then
	gs_sash_width = EPS
	parameters gs_sash_width = gs_sash_width
endif
if gs_sash_thk < EPS then
	gs_sash_thk = EPS
	parameters gs_sash_thk = gs_sash_thk
endif
if gs_glass_thk < 0 then
	gs_glass_thk = 0
	parameters gs_glass_thk = gs_glass_thk
endif


! =============================================================================
! Double Acting parameters
! =============================================================================

if	not(gs_pocket) &\
	not(gs_leaf_optype_m = LEAF_1L_DOUBLE_ACTING |\
		gs_leaf_optype_m = LEAF_1L_DOUBLE_ACTING_M |\
		gs_leaf_optype_m = LEAF_2L_DOUBLE_ACTING) then
	lock			"gs_swing_pen_line"
	hideparameter	"gs_swing_pen_line"
endif


! =============================================================================
! Pocket Door parameter handling
! =============================================================================

if gs_pocket then

	if not(gs_pocket_door_frame) then
		lock	"gs_frame_wthk",
				"gs_uniform_framewidth",
				"gs_frame_width",
				"gs_frame_width_left",
				"gs_frame_width_left_2",
				"gs_frame_width_low_left_sl",
				"gs_frame_width_right",
				"gs_frame_width_right_2",
				"gs_frame_width_low_right_sl",
				"gs_frame_width_upper",
				"gs_frame_thk",
				"gs_leaf_center",
				"gs_leaf_offset"

		hideparameter	"gs_frame_wthk",
						"gs_uniform_framewidth",
						"gs_frame_width",
						"gs_frame_width_left",
						"gs_frame_width_left_2",
						"gs_frame_width_low_left_sl",
						"gs_frame_width_right",
						"gs_frame_width_right_2",
						"gs_frame_width_low_right_sl",
						"gs_frame_width_upper",
						"gs_frame_thk",
						"gs_leaf_center",
						"gs_leaf_offset"
	else
		values "gs_frame_thk"	range (gs_leaf_thk + 0.005*2,)
		values "gs_leaf_offset"	range [0, gs_fthk - gs_leaf_thk]

		if gs_leaf_center then
			lock "gs_leaf_offset"
			hideparameter "gs_leaf_offset"
		endif
	endif
else
	lock			"gs_pocket_door_frame", "gs_leaf_center", "gs_leaf_offset"
	hideparameter	"gs_pocket_door_frame", "gs_leaf_center", "gs_leaf_offset"
endif


! =============================================================================
! Sliding Folding Multi-panel parameters
! =============================================================================

if gs_leaf_optype_m = LEAF_1L_MULTIPANEL | gs_leaf_optype_m = LEAF_1L_MULTIPANEL_M | gs_leaf_optype_m = LEAF_2L_MULTIPANEL then

	if bMiddleStacking then minLeafWidth = 2 * minLeafWidth
	maxLeafNum = int((ac_unit_width - gs_frame_width_left - gs_frame_width_right) / minLeafWidth)
	if maxLeafNum < 2 then maxLeafNum = 2

	if gs_leaf_optype_m = LEAF_2L_MULTIPANEL then
		if maxLeafNum < gs_leaf_num + gs_leaf_num2 then
			diffLeafNum = gs_leaf_num + gs_leaf_num2 - maxLeafNum

			gs_leaf_num = gs_leaf_num - ceil(diffLeafNum/2)
			if gs_leaf_num < 1 then gs_leaf_num = 1
			gs_leaf_num2 = maxLeafNum - gs_leaf_num
			if gs_leaf_num2 < 1 then gs_leaf_num2 = 1
			parameters gs_leaf_num = gs_leaf_num
			parameters gs_leaf_num2 = gs_leaf_num2
		endif

		values "gs_leaf_num"  range [1, maxLeafNum - gs_leaf_num2]
		values "gs_leaf_num2" range [1, maxLeafNum - gs_leaf_num]
	else
		values "gs_leaf_num" range [2, maxLeafNum]
		lock "gs_leaf_num2"
		hideparameter "gs_leaf_num2"
	endif
else
	if	gs_leaf_optype_m <> LEAF_2L_SIDE_HUNG &\
		gs_leaf_optype_m <> LEAF_2L_DOUBLE_ACTING &\
		gs_leaf_optype_m <> LEAF_2L_DOUBLE_EGRESS &\
		gs_leaf_optype_m <> LEAF_2L_DOUBLE_EGRESS_M then

		lock			"gs_open_3D_2"
		hideparameter	"gs_open_3D_2"
	endif

	lock			"gs_leaf_num", "gs_leaf_num2", "gs_opening_leaves", "gs_opening_leaves2"
	hideparameter	"gs_leaf_num", "gs_leaf_num2", "gs_opening_leaves", "gs_opening_leaves2"
endif


! =============================================================================
! Shape geometry parameters handling
! =============================================================================
!
!if not(bArchedTop) & not(gs_sidelight_left | gs_sidelight_right) then
!	lock "gs_shape_geometry"
!	hideparameter "gs_shape_geometry"
!endif

if not(bArchedTop) then
	lock "gs_shoulder_h"
	hideparameter "gs_shoulder_h"
endif


! =============================================================================
! Sidelight and Transom parameter handling
! =============================================================================

if not(gs_sidelight_left | gs_sidelight_right | gs_door_transom) then
	lock "gs_Sl_Tr_Sashes", "gs_opening_dir_sl", "gs_opening_dir_sl_m"
	hideparameter	"gs_Sl_Tr_Sashes", "gs_opening_dir_sl", "gs_opening_dir_sl_m"

	lock "bOverride_MVO_win_3D"
	hideparameter "bOverride_MVO_win_3D"
endif


if bUncutParametersLock then
	lock "gs_FillSdl", "gs_penSdl_fg", "gs_penSdl_bg"
	hideparameter	"gs_FillSdl", "gs_penSdl_fg", "gs_penSdl_bg"
endif

if bStorefrontDoor & bGlass2DParametersLock then
	lock "gs_glass_pen_cont","gs_gsect", "gs_penGlass_fg", "gs_penGlass_bg"
	hideparameter "gs_glass_pen_cont","gs_gsect", "gs_penGlass_fg", "gs_penGlass_bg"
endif

if (gs_sidelight_left & gs_sidelight_right) then
	bNoParapet = ((gs_sidelight_parapet_hgt_left < EPS) & (gs_sidelight_parapet_hgt_right < EPS))
else
	if gs_sidelight_left then
		bNoParapet = (gs_sidelight_parapet_hgt_left < EPS)
	else
		bNoParapet = (gs_sidelight_parapet_hgt_right < EPS)
	endif
endif

if not(gs_pocket) & (not(gs_sidelight_left | gs_sidelight_right) | bNoParapet) then
	lock	"gs_wcont_line_sl",
			"iWallContourLineSl",
			"gs_wcont_line_sl_in",
			"gs_wcont_line_sl_out",
			"gs_wcont_hidden_line_sl_in",
			"gs_wcont_hidden_line_sl_out",
			"gs_wallhole_fill_sl",
			"gs_wallhole_pen_sl_fg",
			"gs_wallhole_pen_sl_bg"
	hideparameter	"gs_wcont_line_sl",
					"iWallContourLineSl",
					"gs_wcont_line_sl_in",
					"gs_wcont_line_sl_out",
					"gs_wcont_hidden_line_sl_in",
					"gs_wcont_hidden_line_sl_out",
					"gs_wallhole_fill_sl",
					"gs_wallhole_pen_sl_fg",
					"gs_wallhole_pen_sl_bg"
endif

if not(gs_sidelight_left) then
	lock "gs_tolerance_left_2", "gs_tolerance_low_left_sl",
		 "gs_reveal_left_sL", "gs_reveal_double_innerLeft_sL", "gs_reveal_bottom_sL", "gs_reveal_double_innerBottom_sL"
	hideparameter	"gs_tolerance_left_2", "gs_tolerance_low_left_sl",
					"gs_reveal_left_sL", "gs_reveal_double_innerLeft_sL", "gs_reveal_bottom_sL", "gs_reveal_double_innerBottom_sL"
endif

!if not(gs_sidelight_right) then
!	lock "gs_tolerance_right_2", "gs_tolerance_low_right_sl",
!		 "gs_reveal_right_sR", "gs_reveal_double_innerRight_sR", "gs_reveal_bottom_sR", "gs_reveal_double_innerBottom_sR"
!	hideparameter	"gs_tolerance_right_2", "gs_tolerance_low_right_sl",
!					"gs_reveal_right_sR", "gs_reveal_double_innerRight_sR", "gs_reveal_bottom_sR", "gs_reveal_double_innerBottom_sR"
!endif

if not(gs_door_transom) then
	lock "gs_transom_height"
	hideparameter "gs_transom_height"
endif


! =============================================================================
! Sidelight-Transom Relation handling
! =============================================================================

if bArchedTop then
	gs_SidelightTransomRelation_m = SIDELIGHT_UNDER_TRANSOM
	parameters gs_SidelightTransomRelation_m = gs_SidelightTransomRelation_m
	lock "gs_SidelightTransomRelation"
endif

if not(gs_door_transom & (gs_sidelight_left | gs_sidelight_right)) then
	lock "gs_SidelightTransomRelation", "gs_SidelightTransomRelation_m"
	hideparameter "gs_SidelightTransomRelation"
endif

if GLOB_MODPAR_NAME = "gs_SidelightTransomRelation" then
	gs_SidelightTransomRelation_m = SIDELIGHT_UNDER_TRANSOM
	if gs_SidelightTransomRelation = stSidelightTransomRelation[2] then gs_SidelightTransomRelation_m = SIDELIGHT_OVER_TRANSOM
	if gs_SidelightTransomRelation = stSidelightTransomRelation[3] then gs_SidelightTransomRelation_m = SIDELIGHT_CROSSES_TRANSOM
	parameters gs_SidelightTransomRelation_m = gs_SidelightTransomRelation_m
else
	gs_SidelightTransomRelation = stSidelightTransomRelation[gs_SidelightTransomRelation_m]
	parameters gs_SidelightTransomRelation = gs_SidelightTransomRelation
endif

values "gs_SidelightTransomRelation" stSidelightTransomRelation
values "gs_SidelightTransomRelation_m"	SIDELIGHT_UNDER_TRANSOM,
										SIDELIGHT_OVER_TRANSOM,
										SIDELIGHT_CROSSES_TRANSOM


! =============================================================================
! Leaves Configuration handling
! =============================================================================

if GLOB_MODPAR_NAME = "gs_LeavesConfig" then
	gs_iLeavesConfig = LEAVESCONFIG_UNIFORM
	if gs_LeavesConfig = stLeavesConfiguration[2] then gs_iLeavesConfig = LEAVESCONFIG_ASYMM
	parameters gs_iLeavesConfig = gs_iLeavesConfig
else
	gs_LeavesConfig = stLeavesConfiguration[gs_iLeavesConfig]
	parameters gs_LeavesConfig = gs_LeavesConfig
endif

values "gs_LeavesConfig" stLeavesConfiguration
values "gs_iLeavesConfig"	LEAVESCONFIG_UNIFORM,
							LEAVESCONFIG_ASYMM

if bShowLeavesConfig then
	if gs_iLeavesConfig = LEAVESCONFIG_UNIFORM | ac_leaf_width < 2 * minLeafWidth then
		parameters gs_SecondLeaf_w = ac_leaf_width / 2
		lock "gs_SecondLeaf_w"
	else
		values "gs_SecondLeaf_w" range[minLeafWidth, ac_leaf_width - minLeafWidth]
	endif
else
	lock "gs_LeavesConfig", "gs_SecondLeaf_w"
	hideparameter "gs_LeavesConfig", "gs_SecondLeaf_w"
endif


! =============================================================================
! Opening Angle Params handling
! =============================================================================

if	gs_leaf_optype_m = LEAF_1L_DOUBLE_ACTING |\
	gs_leaf_optype_m = LEAF_1L_DOUBLE_ACTING_M |\
	gs_leaf_optype_m = LEAF_2L_DOUBLE_ACTING |\
	gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS |\
	gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS_M |\
	gs_leaf_optype_m = LEAF_2L_1SLIDING |\
	gs_leaf_optype_m = LEAF_2L_1SLIDING_M |\
	gs_leaf_optype_m = LEAF_2L_2SLIDING |\
	gs_leaf_optype_m = LEAF_2L_2SLIDING_M |\
	gs_leaf_optype_m = LEAF_3L_2SLIDING |\
	gs_leaf_optype_m = LEAF_3L_2SLIDING_M |\
	gs_leaf_optype_m = LEAF_4L_2SLIDING |\
	gs_leaf_optype_m = LEAF_4L_3SLIDING |\
	gs_leaf_optype_m = LEAF_4L_3SLIDING_M |\
	gs_leaf_optype_m = LEAF_4L_4SLIDING |\
	gs_leaf_optype_m = LEAF_4L_4SLIDING_M |\
	gs_leaf_optype_m = LEAF_1L_EXTERNAL_SLIDING |\
	gs_leaf_optype_m = LEAF_1L_EXTERNAL_SLIDING_M |\
	gs_leaf_optype_m = LEAF_2L_EXTERNAL_SLIDING |\
	gs_leaf_optype_m = LEAF_1L_POCKET |\
	gs_leaf_optype_m = LEAF_1L_POCKET_M |\
	gs_leaf_optype_m = LEAF_2L_POCKET |\
	gs_leaf_optype_m = LEAF_1L_MULTIPANEL |\
	gs_leaf_optype_m = LEAF_1L_MULTIPANEL_M |\
	gs_leaf_optype_m = LEAF_2L_MULTIPANEL then

	openValues	= 0
	if	gs_leaf_optype_m = LEAF_4L_2SLIDING |\
		gs_leaf_optype_m = LEAF_4L_4SLIDING |\
		gs_leaf_optype_m = LEAF_4L_4SLIDING_M then
		values "gs_open3D"	 range [0, ac_egress_width/2]
		values "gs_open3D_2" range [0, ac_egress_width/2]
		values "gs_open2D"	 range [0, ac_egress_width/2]
		values "gs_open2D_2" range [0, ac_egress_width/2]
		openValues	= 1
	endif
	if gs_leaf_optype_m = LEAF_2L_MULTIPANEL then
		side1Length = (ac_leaf_width) * (gs_leaf_num  - bMiddleStacking * 0.5) / (gs_leaf_num + gs_leaf_num2 - bMiddleStacking)
		side2Length = (ac_leaf_width) * (gs_leaf_num2 - bMiddleStacking * 0.5) / (gs_leaf_num + gs_leaf_num2 - bMiddleStacking)
		values "gs_open3D"	 range [0, side1Length - gs_leaf_num  * gs_leaf_thk]
		values "gs_open3D_2" range [0, side2Length - gs_leaf_num2 * gs_leaf_thk]
		values "gs_open2D"	 range [0, side1Length - gs_leaf_num  * gs_leaf_thk]
		values "gs_open2D_2" range [0, side2Length - gs_leaf_num2 * gs_leaf_thk]
		openValues	= 1
	endif
	if	gs_leaf_optype_m = LEAF_1L_EXTERNAL_SLIDING |\
		gs_leaf_optype_m = LEAF_1L_EXTERNAL_SLIDING_M |\
		gs_leaf_optype_m = LEAF_2L_EXTERNAL_SLIDING then
		if gs_leaf_optype_m = LEAF_2L_EXTERNAL_SLIDING then
			values "gs_open3D"	 range [0, ac_wallhole_width/2]
			values "gs_open3D_2" range [0, ac_wallhole_width/2]
			values "gs_open2D"	 range [0, ac_wallhole_width/2]
			values "gs_open2D_2" range [0, ac_wallhole_width/2]
		else
			values "gs_open3D"	 range [0, ac_wallhole_width]
			values "gs_open3D_2" range [0, ac_wallhole_width]
			values "gs_open2D"	 range [0, ac_wallhole_width]
			values "gs_open2D_2" range [0, ac_wallhole_width]
		endif
		openValues	= 1
	endif
	if gs_leaf_optype_m = LEAF_1L_POCKET | gs_leaf_optype_m = LEAF_1L_POCKET_M | gs_leaf_optype_m = LEAF_2L_POCKET then
		if gs_leaf_optype_m = LEAF_2L_POCKET then
			if gs_pocket_door_frame then
				values "gs_open3D"	 range [0, ac_egress_width - ac_leaf_width/2]
				values "gs_open3D_2" range [0, ac_egress_width - ac_leaf_width/2]
				values "gs_open2D"	 range [0, ac_egress_width - ac_leaf_width/2]
				values "gs_open2D_2" range [0, ac_egress_width - ac_leaf_width/2]
			else
				values "gs_open3D"	 range [0, ac_wallhole_width - ac_leaf_width/2]
				values "gs_open3D_2" range [0, ac_wallhole_width - ac_leaf_width/2]
				values "gs_open2D"	 range [0, ac_wallhole_width - ac_leaf_width/2]
				values "gs_open2D_2" range [0, ac_wallhole_width - ac_leaf_width/2]
			endif
		else
			if gs_pocket_door_frame then
				values "gs_open3D"	range [0, 2*ac_egress_width - ac_leaf_width]
				values "gs_open2D"	range [0, 2*ac_egress_width - ac_leaf_width]
			else
				values "gs_open3D"	range [0, 2*ac_wallhole_width - ac_leaf_width]
				values "gs_open2D"	range [0, 2*ac_wallhole_width - ac_leaf_width]
			endif
		endif
		openValues	= 1
	endif
	if not(openValues) then
		values "gs_open3D"	 range [0, ac_egress_width]
		values "gs_open3D_2" range [0, ac_egress_width]
		values "gs_open2D"	 range [0, ac_egress_width]
		values "gs_open2D_2" range [0, ac_egress_width]
	endif

endif

values "gs_open_3D" range [0, 180]
values "gs_open_2D" range [0, 180]

if	gs_leaf_optype_m = LEAF_1L_MULTIPANEL |\
	gs_leaf_optype_m = LEAF_1L_MULTIPANEL_M |\
	gs_leaf_optype_m = LEAF_2L_MULTIPANEL |\
	gs_leaf_optype_m = LEAF_2L_SIDE_HUNG |\
	gs_leaf_optype_m = LEAF_2L_DOUBLE_ACTING |\
	gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS |\
	gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS_M then
		values "gs_open_2D_2" range [0, 180]
		values "gs_open_3D_2" range [0, 180]
endif

if	gs_sidelight_right | \
	gs_sidelight_left then
	values "gs_open_2D_sl_left"  range [0, 90]
	values "gs_open_2D_sl_right" range [0, 90]
endif

if	gs_leaf_optype_m = LEAF_2L_1SLIDING |\
	gs_leaf_optype_m = LEAF_2L_1SLIDING_M |\
	gs_leaf_optype_m = LEAF_2L_2SLIDING |\
	gs_leaf_optype_m = LEAF_2L_2SLIDING_M |\
	gs_leaf_optype_m = LEAF_3L_2SLIDING |\
	gs_leaf_optype_m = LEAF_3L_2SLIDING_M |\
	gs_leaf_optype_m = LEAF_4L_2SLIDING |\
	gs_leaf_optype_m = LEAF_4L_3SLIDING |\
	gs_leaf_optype_m = LEAF_4L_3SLIDING_M |\
	gs_leaf_optype_m = LEAF_4L_4SLIDING |\
	gs_leaf_optype_m = LEAF_4L_4SLIDING_M |\
	gs_leaf_optype_m = LEAF_1L_EXTERNAL_SLIDING |\
	gs_leaf_optype_m = LEAF_1L_EXTERNAL_SLIDING_M |\
	gs_leaf_optype_m = LEAF_2L_EXTERNAL_SLIDING |\
	gs_leaf_optype_m = LEAF_1L_POCKET |\
	gs_leaf_optype_m = LEAF_1L_POCKET_M |\
	gs_leaf_optype_m = LEAF_2L_POCKET then

	lock "gs_open_3D", "gs_open_2D"
	hideparameter	"gs_open_3D", "gs_open_2D"
endif
if	gs_leaf_optype_m = LEAF_1L_MULTIPANEL | \
	gs_leaf_optype_m = LEAF_1L_MULTIPANEL_M then
	if not(gs_opening_leaves & gs_open2D < EPS) then
		lock "gs_open_2D"
		hideparameter "gs_open_2D"
	endif
	if not(gs_opening_leaves2 & gs_open2D < EPS) then
		lock "gs_open_2D_2"
		hideparameter "gs_open_2D_2"
	endif
	if not(gs_opening_leaves & gs_open3D < EPS) then
		lock "gs_open_3D"
		hideparameter "gs_open_3D"
	endif
	if not(gs_opening_leaves2 & gs_open3D < EPS) then
		lock "gs_open_3D_2"
		hideparameter "gs_open_3D_2"
	endif
endif
if	gs_leaf_optype_m = LEAF_2L_MULTIPANEL then
	if not(gs_opening_leaves & gs_open2D < EPS) then
		lock "gs_open_2D"
		hideparameter "gs_open_2D"
	endif
	if not(gs_opening_leaves2 & gs_open2D_2 < EPS) then
		lock "gs_open_2D_2"
		hideparameter "gs_open_2D_2"
	endif
	if not(gs_opening_leaves & gs_open3D < EPS) then
		lock "gs_open_3D"
		hideparameter "gs_open_3D"
	endif
	if not(gs_opening_leaves2 & gs_open3D_2 < EPS) then
		lock "gs_open_3D_2"
		hideparameter "gs_open_3D_2"
	endif
endif
if	gs_leaf_optype_m <> LEAF_1L_MULTIPANEL & \
	gs_leaf_optype_m <> LEAF_1L_MULTIPANEL_M &\
	gs_leaf_optype_m <> LEAF_2L_MULTIPANEL &\
	gs_leaf_optype_m <> LEAF_2L_SIDE_HUNG &\
	gs_leaf_optype_m <> LEAF_2L_DOUBLE_ACTING &\
	gs_leaf_optype_m <> LEAF_2L_DOUBLE_EGRESS &\
	gs_leaf_optype_m <> LEAF_2L_DOUBLE_EGRESS_M then
	lock "gs_open_2D_2"
	hideparameter "gs_open_2D_2"
endif
if	gs_leaf_optype_m = LEAF_1L_SIDE_HUNG |\
	gs_leaf_optype_m = LEAF_1L_SIDE_HUNG_M |\
	gs_leaf_optype_m = LEAF_1L_DOUBLE_ACTING |\
	gs_leaf_optype_m = LEAF_1L_DOUBLE_ACTING_M |\
	gs_leaf_optype_m = LEAF_2L_SIDE_HUNG |\
	gs_leaf_optype_m = LEAF_2L_DOUBLE_ACTING |\
	gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS |\
	gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS_M |\
	gs_leaf_optype_m = LEAF_1L_PIVOT |\
	gs_leaf_optype_m = LEAF_1L_PIVOT_M then

	lock "gs_open3D", "gs_open2D"
	hideparameter	"gs_open3D", "gs_open2D"
endif
if	gs_leaf_optype_m <> LEAF_2L_2SLIDING & \
	gs_leaf_optype_m <> LEAF_2L_2SLIDING_M & \
	gs_leaf_optype_m <> LEAF_4L_4SLIDING & \
	gs_leaf_optype_m <> LEAF_4L_4SLIDING_M & \
	gs_leaf_optype_m <> LEAF_2L_MULTIPANEL then

	lock "gs_open3D_2", "gs_open2D_2"
	hideparameter "gs_open3D_2", "gs_open2D_2"
endif

if gs_sidelight_right then
	if	(gs_optype_m_05 <> SASH_SIDE_HUNG &\
		gs_optype_m_05 <> SASH_SIDE_HUNG_M &\
		gs_optype_m_05 <> SASH_TILT_TURN &\
		gs_optype_m_05 <> SASH_TILT_TURN_M &\
		gs_optype_m_05 <> SASH_VER_PIVOT &\
		gs_optype_m_05 <> SASH_VER_PIVOT_M &\
		gs_optype_m_05 <> SASH_DOUBLE_SIDE_HUNG &\
		gs_optype_m_05 <> SASH_DOUBLE_TILT_TURN &\
		gs_optype_m_05 <> SASH_DOUBLE_TILT_TURN_M) then
		lock "gs_open_2D_sl_right"
		hideparameter "gs_open_2D_sl_right"
	endif
endif

if gs_sidelight_left then
	if	(gs_optype_m_09 <> SASH_SIDE_HUNG &\
		gs_optype_m_09 <> SASH_SIDE_HUNG_M &\
		gs_optype_m_09 <> SASH_TILT_TURN &\
		gs_optype_m_09 <> SASH_TILT_TURN_M &\
		gs_optype_m_09 <> SASH_VER_PIVOT &\
		gs_optype_m_09 <> SASH_VER_PIVOT_M &\
		gs_optype_m_09 <> SASH_DOUBLE_SIDE_HUNG &\
		gs_optype_m_09 <> SASH_DOUBLE_TILT_TURN &\
		gs_optype_m_09 <> SASH_DOUBLE_TILT_TURN_M) then
		lock "gs_open_2D_sl_left"
		hideparameter "gs_open_2D_sl_left"
	endif
endif


! ==============================================================================
! Uniform Surfaces
! ==============================================================================

dim	surfaceParNames[]							:	dim	surfaceParameters[]
	surfaceParNames[1]	= "gs_frame_mat"		:		surfaceParameters[1]	= gs_frame_mat
	surfaceParNames[2]	= "gs_frame_mat2"		:		surfaceParameters[2]	= gs_frame_mat2
	surfaceParNames[3]	= "gs_leaf_mat"			:		surfaceParameters[3]	= gs_leaf_mat
	surfaceParNames[4]	= "gs_leaf_matin"		:		surfaceParameters[4]	= gs_leaf_matin
	surfaceParNames[5]	= "gs_leaf_mat2"		:		surfaceParameters[5]	= gs_leaf_mat2
	surfaceParNames[6]	= "gs_leaf_mat3"		:		surfaceParameters[6]	= gs_leaf_mat3
	surfaceParNames[7]	= "gs_grill_mat"		:		surfaceParameters[7]	= gs_grill_mat
	surfaceParNames[8]	= "gs_grill_mat2"		:		surfaceParameters[8]	= gs_grill_mat2
	surfaceParNames[9]	= "gs_leaf_grill_mat"	:		surfaceParameters[9]	= gs_leaf_grill_mat
	surfaceParNames[10]	= "gs_leaf_grill_mat2"	:		surfaceParameters[10]	= gs_leaf_grill_mat2
	surfaceParNames[11]	= "gs_panel_mat"		:		surfaceParameters[11]	= gs_panel_mat
	surfaceParNames[12]	= "gs_panel_mat2"		:		surfaceParameters[12]	= gs_panel_mat2

_startDim = 13
sf = _startDim
if gs_door_transom then
	surfaceParNames[sf]	= "gs_transom_mat"		:		surfaceParameters[sf]	= gs_transom_mat		: sf = sf + 1
	surfaceParNames[sf]	= "gs_transom_matin"	:		surfaceParameters[sf]	= gs_transom_matin		: sf = sf + 1
endif

if gs_sidelight_right then
	surfaceParNames[sf]	= "gs_sidelight1_mat"	:		surfaceParameters[sf]	= gs_sidelight1_mat		: sf = sf + 1
	surfaceParNames[sf]	= "gs_sidelight1_matin"	:		surfaceParameters[sf]	= gs_sidelight1_matin	: sf = sf + 1
endif

if gs_sidelight_left then
	surfaceParNames[sf]	= "gs_sidelight2_mat"	:		surfaceParameters[sf]	= gs_sidelight2_mat		: sf = sf + 1
	surfaceParNames[sf]	= "gs_sidelight2_matin"	:		surfaceParameters[sf]	= gs_sidelight2_matin	: sf = sf + 1
endif


_lastModSurfaceParameter = gs_frame_mat

if (stored_material[1][1] <> -9999) & (vardim1(surfaceParNames) = vardim2(stored_material)) then
	for i = 1 to vardim1(surfaceParNames)
		if GLOB_MODPAR_NAME = surfaceParNames[i] then
			_lastModSurfaceParameter	= surfaceParameters[i]
			stored_material[1][i]	= surfaceParameters[i]
			stored_material[2][i]	= 1

			for j = 1 to i-1
				stored_material[2][j]	= 0
				parameters stored_material[2][j]	= stored_material[2][j]
			next j

			for k = i+1 to vardim1(surfaceParNames)
				stored_material[2][k]	= 0
				parameters stored_material[2][k]	= stored_material[2][k]
			next k
		endif

		parameters	stored_material[1][i]	= stored_material[1][i],
					stored_material[2][i]	= stored_material[2][i]

		if stored_material[2][i] = 1 then
			_lastModSurfaceParameter = stored_material[1][i]
		endif
	next i
else
	gosub "preloadSurfaces"
endif

if bLinkSurfacesFrameSash then
	parameters	gs_frame_mat		= _lastModSurfaceParameter,
				gs_frame_mat2		= _lastModSurfaceParameter,
				gs_leaf_mat			= _lastModSurfaceParameter,
				gs_leaf_matin		= _lastModSurfaceParameter,
				gs_leaf_mat2		= _lastModSurfaceParameter,
				gs_leaf_mat3		= _lastModSurfaceParameter,
				gs_grill_mat		= _lastModSurfaceParameter,
				gs_grill_mat2		= _lastModSurfaceParameter,
				gs_leaf_grill_mat	= _lastModSurfaceParameter,
				gs_leaf_grill_mat2	= _lastModSurfaceParameter,
				gs_panel_mat		= _lastModSurfaceParameter,
				gs_panel_mat2		= _lastModSurfaceParameter

	if gs_door_transom then
		parameters	gs_transom_mat		= _lastModSurfaceParameter,
					gs_transom_matin	= _lastModSurfaceParameter
	endif

	if gs_sidelight_right then
		parameters	gs_sidelight1_mat	= _lastModSurfaceParameter,
					gs_sidelight1_matin	= _lastModSurfaceParameter
	endif

	if gs_sidelight_left then
		parameters	gs_sidelight2_mat	= _lastModSurfaceParameter,
					gs_sidelight2_matin	= _lastModSurfaceParameter
	endif
else
	if GLOB_MODPAR_NAME = "bLinkSurfacesFrameSash" then
		parameters	gs_frame_mat		= stored_material[1][1],
					gs_frame_mat2		= stored_material[1][2],
					gs_leaf_mat			= stored_material[1][3],
					gs_leaf_matin		= stored_material[1][4],
					gs_leaf_mat2		= stored_material[1][5],
					gs_leaf_mat3		= stored_material[1][6],
					gs_grill_mat		= stored_material[1][7],
					gs_grill_mat2		= stored_material[1][8],
					gs_leaf_grill_mat	= stored_material[1][9],
					gs_leaf_grill_mat2	= stored_material[1][10],
					gs_panel_mat		= stored_material[1][11],
					gs_panel_mat2		= stored_material[1][12]

		sf = _startDim
		if gs_door_transom then
			parameters	gs_transom_mat		= stored_material[1][sf]	: sf = sf + 1
			parameters	gs_transom_matin	= stored_material[1][sf]	: sf = sf + 1
		endif

		if gs_sidelight_right then
			parameters	gs_sidelight1_mat	= stored_material[1][sf]	: sf = sf + 1
			parameters	gs_sidelight1_matin	= stored_material[1][sf]	: sf = sf + 1
		endif

		if gs_sidelight_left then
			parameters	gs_sidelight2_mat	= stored_material[1][sf]	: sf = sf + 1
			parameters	gs_sidelight2_matin	= stored_material[1][sf]	: sf = sf + 1
		endif
	else
		gosub "preloadSurfaces"
	endif
endif


! ==============================================================================
! Common Door Panel and Sidelight/Transom Parameters
! ==============================================================================

if GLOB_MODPAR_NAME = "gs_leaf_glass_pen" then
	gs_glass_pen = gs_leaf_glass_pen
	parameters gs_glass_pen = gs_glass_pen
else
	gs_leaf_glass_pen = gs_glass_pen
	parameters gs_leaf_glass_pen = gs_leaf_glass_pen
endif

if GLOB_MODPAR_NAME = "gs_leaf_glass_mat" then
	gs_glass_mat = gs_leaf_glass_mat
	parameters gs_glass_mat = gs_glass_mat
else
	gs_leaf_glass_mat = gs_glass_mat
	parameters gs_leaf_glass_mat = gs_leaf_glass_mat
endif

if GLOB_MODPAR_NAME = "gs_leaf_grill_mat" then
	gs_grill_mat = gs_leaf_grill_mat
	parameters gs_grill_mat = gs_grill_mat
else
	gs_leaf_grill_mat = gs_grill_mat
	parameters gs_leaf_grill_mat = gs_leaf_grill_mat
endif

if GLOB_MODPAR_NAME = "gs_leaf_grill_mat2" then
	gs_grill_mat2 = gs_leaf_grill_mat2
	parameters gs_grill_mat2 = gs_grill_mat2
else
	gs_leaf_grill_mat2 = gs_grill_mat2
	parameters gs_leaf_grill_mat2 = gs_leaf_grill_mat2
endif

! ==============================================================================
! Door Panel
! ==============================================================================

if	iOpeningMethod = OPENMETHOD_OPEN_SIMP |\
	iOpeningMethod = OPENMETHOD_OPEN_DOUB then
	iHandleCategoryEnable	= 1 + 2 + 4 + 64
	if bMetalDoor | bStorefrontDoor then
		iHandleCategoryEnable	= 2 + 4 + 8 + 16 + 64
	endif
	if bBombShelter then
		iHandleCategoryEnable	= 2 + 8 + 16 + 32
	endif
endif
if iOpeningMethod = OPENMETHOD_PIVOT then
	iHandleCategoryEnable	= 2 + 4 + 8 + 64
endif
if	iOpeningMethod = OPENMETHOD_SLIDE_INT |\
	iOpeningMethod = OPENMETHOD_SLIDE_EXT_SIMP |\
	iOpeningMethod = OPENMETHOD_SLIDE_EXT_DOUB |\
	iOpeningMethod = OPENMETHOD_POCKET_SIMP |\
	iOpeningMethod = OPENMETHOD_POCKET_DOUB |\
	iOpeningMethod = OPENMETHOD_SLIDFOLD_SIMP |\
	iOpeningMethod = OPENMETHOD_SLIDFOLD_BIFOLD	 then
	iHandleCategoryEnable	= 1 + 4 + 128
endif

if	gs_leaf_optype_m = LEAF_2L_EXTERNAL_SLIDING  |\
	gs_leaf_optype_m = LEAF_1L_EXTERNAL_SLIDING |\
	gs_leaf_optype_m = LEAF_1L_EXTERNAL_SLIDING_M then
		ac_leaf_width	= ac_wallhole_width
		ac_leaf_height	= ac_wallhole_height
endif

dim leafWidthArray[]
leafWidthArray[1] = ac_leaf_width

if	gs_leaf_optype_m = LEAF_2L_SIDE_HUNG |\
	gs_leaf_optype_m = LEAF_2L_DOUBLE_ACTING |\
	gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS |\
	gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS_M |\
	gs_leaf_optype_m = LEAF_2L_1SLIDING |\
	gs_leaf_optype_m = LEAF_2L_1SLIDING_M |\
	gs_leaf_optype_m = LEAF_2L_2SLIDING |\
	gs_leaf_optype_m = LEAF_2L_2SLIDING_M |\
	gs_leaf_optype_m = LEAF_2L_EXTERNAL_SLIDING |\
	gs_leaf_optype_m = LEAF_2L_POCKET then

	if bAsymmetricLeafs then
		leafWidthArray[1] = ac_leaf_width - gs_SecondLeaf_w
		leafWidthArray[2] = gs_SecondLeaf_w
	else
		leafWidthArray[1] = ac_leaf_width / 2
		leafWidthArray[2] = ac_leaf_width / 2
	endif
endif

if	gs_leaf_optype_m = LEAF_3L_2SLIDING |\
	gs_leaf_optype_m = LEAF_3L_2SLIDING_M |\
	gs_leaf_optype_m = LEAF_3L_2SLIDING_CENTER then
		leafWidthArray[1] = ac_leaf_width / 3
		leafWidthArray[2] = ac_leaf_width / 3
		leafWidthArray[3] = ac_leaf_width / 3
endif

if	gs_leaf_optype_m = LEAF_4L_2SLIDING  |\
	gs_leaf_optype_m = LEAF_4L_3SLIDING  |\
	gs_leaf_optype_m = LEAF_4L_3SLIDING_M  |\
	gs_leaf_optype_m = LEAF_4L_4SLIDING  |\
	gs_leaf_optype_m = LEAF_4L_4SLIDING_M then
		leafWidthArray[1] = ac_leaf_width / 4
		leafWidthArray[2] = ac_leaf_width / 4
		leafWidthArray[3] = ac_leaf_width / 4
		leafWidthArray[4] = ac_leaf_width / 4
endif

if gs_leaf_optype_m = LEAF_1L_MULTIPANEL then
	for lnum = 1 to gs_leaf_num
		leafWidthArray[lnum] = ac_leaf_width / gs_leaf_num
	next lnum
endif

if gs_leaf_optype_m = LEAF_2L_MULTIPANEL then
	_leafnum = gs_leaf_num + gs_leaf_num2
	for lnum = 1 to _leafnum
		leafWidthArray[lnum] = ac_leaf_width / _leafnum
	next lnum
endif

if iLeafShape = LEAF_SHAPE_HALFARCHED | iLeafShape = LEAF_SHAPE_ARCHED then
	if lod3D = 5 then
		gs_shoulder_h = (ac_wallhole_height - r2) + fcefw
	else
		gs_shoulder_h = (ac_wallhole_height - r2) + fce_leaf_rebate
	endif
endif

call "DoorLeafPanels_kmod" parameters all A = ac_leaf_width,
									 B = ac_leaf_height,
	iOpeningMethod			= iOpeningMethod,
	bEnableKickBoard		= bEnableKickBoard,
	bSecondKickBoard		= bSecondKickBoard,
	bKickBoardOut			= bKickBoardOut,
	bKickBoardIn			= bKickBoardIn,
	kickBoardHeight			= kickBoardHeight,
	bKickBoardOut2			= bKickBoardOut2,
	bKickBoardIn2			= bKickBoardIn2,
	kickBoardHeight2		= kickBoardHeight2,
	gs_shoulder_h			= gs_shoulder_h,
	iLeafShape				= iLeafShape,
	bAsymmetricLeafs		= bAsymmetricLeafs,
	iHandleCategoryEnable	= iHandleCategoryEnable,
	bMetalDoor				= bMetalDoor,
	bStorefrontDoor			= bStorefrontDoor,
	bFoldingDoor			= bFoldingDoor,
	bBombShelter			= bBombShelter,
	gs_leaf_optype_m		= gs_leaf_optype_m,
	gs_SecondLeaf_w			= gs_SecondLeaf_w,
	stDoorTypes				= stDoorTypes,
	stGrillPos				= stGrillPos,
	leafWidthArray			= leafWidthArray,
returned_parameters	bLockMullionParamsLeaf,
					bLockGlassParamsLeaf,
					PanelGlassArea

glassarea_counter = glassarea_counter + PanelGlassArea


! =============================================================================
! Kick Board
! =============================================================================

if bEnableKickBoard then
	if bAsymmetricLeafs then
		values{2} "gs_kickboard_set_to_edit"	KICKBOARD_IN_MAIN_PANEL,	stKickBoardSetToLeaf[1],
												KICKBOARD_IN_SECOND_PANEL,	stKickBoardSetToLeaf[2]
	endif
endif


! =============================================================================
! Sash Parameters
! =============================================================================

bHaveNonfixSashSidelight = 0
bHaveNonfixSashSidelight = bHaveNonfixSashSidelight | (gs_sidelight_left  & gs_optype_m_09 <> SASH_FIXED)	! Left Sidelight
bHaveNonfixSashSidelight = bHaveNonfixSashSidelight | (gs_sidelight_right & gs_optype_m_05 <> SASH_FIXED)	! Right Sidelight

bHaveNonfixSashTransom = 0
bHaveNonfixSashTransom = bHaveNonfixSashTransom | (gs_door_transom & gs_optype_m_02 <> SASH_FIXED)		! Transom
bHaveNonfixSashTransom = bHaveNonfixSashTransom | (gs_sidelight_left  & gs_LeftMullion_Top  & gs_door_transom & gs_Transom_toLeft  & gs_optype_m_10 <> SASH_FIXED)	! Left Upper Sidelight
bHaveNonfixSashTransom = bHaveNonfixSashTransom | (gs_sidelight_right & gs_RightMullion_Top & gs_door_transom & gs_Transom_toRight & gs_optype_m_06 <> SASH_FIXED)	! Right Upper Sidelight

if not(bHaveNonfixSashSidelight | bHaveNonfixSashTransom) then
	hideparameter "gs_sidelight_rebate_width", "gs_sash_thk"	! Do not lock, just hide it
endif
if not(bHaveNonfixSashTransom) then
	hideparameter "gs_sash_width"	! Do not lock, just hide it
endif
if not(bHaveNonfixSashSidelight) then
	hideparameter "gs_sl_sash_width"	! Do not lock, just hide it
endif

if bDisableSidelightSashWidth then
	lock "gs_sl_sash_width"
endif

if not(gs_sidelight_left & gs_door_transom & (gs_SidelightTransomRelation_m = SIDELIGHT_CROSSES_TRANSOM)) then
	lock	"gs_optype_10", "gs_optype_m_10",
			"iMullionStyle_10", "MullionStyle_10",
			"gs_horiz_div_height_10",
			"gs_cust_panel_10", "gs_cust_panel2_10",
			"hgn_10", "vgn_10", "hgn2_10", "vgn2_10",
			"openingAngle_10", "openingAngle2_10",
			"openingLength_10", "openingLength2_10"
	hideparameter	"gs_optype_10", "gs_optype_m_10",
					"iMullionStyle_10", "MullionStyle_10",
					"gs_horiz_div_height_10",
					"gs_cust_panel_10", "gs_cust_panel2_10",
					"hgn_10", "vgn_10", "hgn2_10", "vgn2_10",
					"openingAngle_10", "openingAngle2_10",
					"openingLength_10", "openingLength2_10"
endif

if not(gs_door_transom) then
	lock	"gs_optype_02", "gs_optype_m_02",
			"iMullionStyle_02", "MullionStyle_02",
			"gs_horiz_div_height_02",
			"gs_cust_panel_02", "gs_cust_panel2_02",
			"hgn_02", "vgn_02", "hgn2_02", "vgn2_02",
			"openingAngle_02", "openingAngle2_02",
			"openingLength_02", "openingLength2_02"
	hideparameter	"gs_optype_02", "gs_optype_m_02",
					"iMullionStyle_02", "MullionStyle_02",
					"gs_horiz_div_height_02",
					"gs_cust_panel_02", "gs_cust_panel2_02",
					"hgn_02", "vgn_02", "hgn2_02", "vgn2_02",
					"openingAngle_02", "openingAngle2_02",
					"openingLength_02", "openingLength2_02"
endif

if not(gs_sidelight_right & gs_door_transom & (gs_SidelightTransomRelation_m = SIDELIGHT_CROSSES_TRANSOM)) then
	lock	"gs_optype_06", "gs_optype_m_06",
			"iMullionStyle_06", "MullionStyle_06",
			"gs_horiz_div_height_06",
			"gs_cust_panel_06", "gs_cust_panel2_06",
			"hgn_06", "vgn_06", "hgn2_06", "vgn2_06",
			"openingAngle_06", "openingAngle2_06",
			"openingLength_06", "openingLength2_06"
	hideparameter	"gs_optype_06", "gs_optype_m_06",
					"iMullionStyle_06", "MullionStyle_06",
					"gs_horiz_div_height_06",
					"gs_cust_panel_06", "gs_cust_panel2_06",
					"hgn_06", "vgn_06", "hgn2_06", "vgn2_06",
					"openingAngle_06", "openingAngle2_06",
					"openingLength_06", "openingLength2_06"
endif

if not(gs_sidelight_left) then
	lock	"gs_optype_09", "gs_optype_m_09",
			"iMullionStyle_09", "MullionStyle_09",
			"gs_horiz_div_height_09",
			"gs_cust_panel_09", "gs_cust_panel2_09",
			"hgn_09", "vgn_09", "hgn2_09", "vgn2_09",
			"openingAngle_09", "openingAngle2_09",
			"openingLength_09", "openingLength2_09"
	hideparameter	"gs_optype_09", "gs_optype_m_09",
					"iMullionStyle_09", "MullionStyle_09",
					"gs_horiz_div_height_09",
					"gs_cust_panel_09", "gs_cust_panel2_09",
					"hgn_09", "vgn_09", "hgn2_09", "vgn2_09",
					"openingAngle_09", "openingAngle2_09",
					"openingLength_09", "openingLength2_09"
endif

if not(gs_sidelight_right) then
	lock	"gs_optype_05", "gs_optype_m_05",
			"iMullionStyle_05", "MullionStyle_05",
			"gs_horiz_div_height_05",
			"gs_cust_panel_05", "gs_cust_panel2_05",
			"hgn_05", "vgn_05", "hgn2_05", "vgn2_05",
			"openingAngle_05", "openingAngle2_05",
			"openingLength_05", "openingLength2_05"
	hideparameter	"gs_optype_05", "gs_optype_m_05",
					"iMullionStyle_05", "MullionStyle_05",
					"gs_horiz_div_height_05",
					"gs_cust_panel_05", "gs_cust_panel2_05",
					"hgn_05", "vgn_05", "hgn2_05", "vgn2_05",
					"openingAngle_05", "openingAngle2_05",
					"openingLength_05", "openingLength2_05"
endif

if gs_sidelight_left & not(gs_bSidelight_fr_hdiv_left) then
	lock	"gs_optype_11", "gs_optype_m_11",
			"iMullionStyle_11", "MullionStyle_11",
			"gs_horiz_div_height_11",
			"gs_cust_panel_11", "gs_cust_panel2_11",
			"hgn_11", "vgn_11", "hgn2_11", "vgn2_11",
			"openingAngle_11", "openingAngle2_11",
			"openingLength_11", "openingLength2_11"
	hideparameter	"gs_optype_11", "gs_optype_m_11",
					"iMullionStyle_11", "MullionStyle_11",
					"gs_horiz_div_height_11",
					"gs_cust_panel_11", "gs_cust_panel2_11",
					"hgn_11", "vgn_11", "hgn2_11", "vgn2_11",
					"openingAngle_11", "openingAngle2_11",
					"openingLength_11", "openingLength2_11"
endif

if gs_sidelight_right & not(gs_bSidelight_fr_hdiv_right) then
	lock	"gs_optype_07", "gs_optype_m_07",
			"iMullionStyle_07", "MullionStyle_07",
			"gs_horiz_div_height_07",
			"gs_cust_panel_07", "gs_cust_panel2_07",
			"hgn_07", "vgn_07", "hgn2_07", "vgn2_07",
			"openingAngle_07", "openingAngle2_07",
			"openingLength_07", "openingLength2_07"
	hideparameter	"gs_optype_07", "gs_optype_m_07",
					"iMullionStyle_07", "MullionStyle_07",
					"gs_horiz_div_height_07",
					"gs_cust_panel_07", "gs_cust_panel2_07",
					"hgn_07", "vgn_07", "hgn2_07", "vgn2_07",
					"openingAngle_07", "openingAngle2_07",
					"openingLength_07", "openingLength2_07"
endif



! =============================================================================
! Sash Options
! =============================================================================

if gs_sash_uniform then
	if gs_sidelight_left then
		lock "vgn_05", "hgn_05", "vgn2_05", "hgn2_05"
		hideparameter "vgn_05", "hgn_05", "vgn2_05", "hgn2_05"

		if gs_bSidelight_fr_hdiv_left then
			lock "vgn_07", "hgn_07", "vgn2_07", "hgn2_07"
			hideparameter "vgn_07", "hgn_07", "vgn2_07", "hgn2_07"
		endif
	endif
	lock "vgn_06", "hgn_06", "vgn2_06", "hgn2_06"
	hideparameter "vgn_06", "hgn_06", "vgn2_06", "hgn2_06"
	lock "vgn_10", "hgn_10", "vgn2_10", "hgn2_10"
	hideparameter "vgn_10", "hgn_10", "vgn2_10", "hgn2_10"
endif

dim sashMullionResetArray[3][3]
for i=1 to 3
	for j=1 to 3
		sashMullionResetArray[i][j]	= 0
	next j
next i
if GLOB_MODPAR_NAME <> "" then
	! Not in case of multiple selection
	if	GLOB_MODPAR_NAME = "A" | \
		GLOB_MODPAR_NAME = "B" | \
		(gs_sash_uniform & (GLOB_MODPAR_NAME = "gs_sash_uniform" | GLOB_MODPAR_NAME = "MullionStyle_00" | GLOB_MODPAR_NAME = "iMullionStyle_00")) | \
		(not(gs_unit_nominal) & (GLOB_MODPAR_NAME = "gs_tolerance_left" | GLOB_MODPAR_NAME = "gs_tolerance_right" | GLOB_MODPAR_NAME = "gs_tolerance_upper" | GLOB_MODPAR_NAME = "gs_tolerance_lower")) |\
		GLOB_MODPAR_NAME = "gs_SidelightTransomRelation" |\
		GLOB_MODPAR_NAME = "gs_SidelightTransomRelation_m" |\
		GLOB_MODPAR_NAME = "bVentilationProfile"		|\
		GLOB_MODPAR_NAME = "iVentilationProfileType"	|\
		(GLOB_MODPAR_NAME = "VentilationProfileHeight" & bVentilationProfile & (iVentilationProfileType = VENTPROFILE_OVER_FRAME)) then
		! Reset all sashes
		for i=1 to 3
			for j=1 to 3
				sashMullionResetArray[i][j]	= 1
			next j
		next i
	else
		! Reset specific sashes
		if gs_door_transom then
			if GLOB_MODPAR_NAME = "gs_door_transom" | GLOB_MODPAR_NAME = "gs_transom_height" | GLOB_MODPAR_NAME = "gs_sidelight_width_right" |\
				(GLOB_MODPAR_NAME = "gs_sash_width" & gs_optype_m_10 <> SASH_FIXED) then
				sashMullionResetArray[1][1]	= 1
			endif
			if GLOB_MODPAR_NAME = "gs_door_transom" | GLOB_MODPAR_NAME = "gs_transom_height" |\
				(gs_SidelightTransomRelation_m <> SIDELIGHT_UNDER_TRANSOM &\
				(GLOB_MODPAR_NAME = "gs_sidelight_width_left" | GLOB_MODPAR_NAME = "gs_sidelight_width_left_half" | GLOB_MODPAR_NAME = "gs_sidelight_width_right" | GLOB_MODPAR_NAME = "gs_sidelight_width_right_half")) |\
				(GLOB_MODPAR_NAME = "gs_sash_width" & gs_optype_m_02 <> SASH_FIXED) then
				sashMullionResetArray[1][2]	= 1
			endif
			if GLOB_MODPAR_NAME = "gs_door_transom" | GLOB_MODPAR_NAME = "gs_transom_height" | GLOB_MODPAR_NAME = "gs_sidelight_width_left" |\
				(GLOB_MODPAR_NAME = "gs_sash_width" & gs_optype_m_06 <> SASH_FIXED) then
				sashMullionResetArray[1][3]	= 1
			endif
		endif
		if	GLOB_MODPAR_NAME = "gs_door_transom" | GLOB_MODPAR_NAME = "gs_transom_height" |\
			GLOB_MODPAR_NAME = "gs_bSidelight_fr_hdiv_left" | GLOB_MODPAR_NAME = "gs_sidelight_fr_hdiv_hgt_left" | GLOB_MODPAR_NAME = "gs_sidelight_fr_hdiv_wdt_left" |\
			GLOB_MODPAR_NAME = "gs_sidelight_width_left" | GLOB_MODPAR_NAME = "gs_sidelight_width_left_half" | GLOB_MODPAR_NAME = "gs_sidelight_parapet_hgt_left" |\
			(GLOB_MODPAR_NAME = "gs_sl_sash_width" & gs_optype_m_09 <> SASH_FIXED) then
			sashMullionResetArray[2][1]	= 1
		endif
		if	GLOB_MODPAR_NAME = "gs_door_transom" | GLOB_MODPAR_NAME = "gs_transom_height" |\
			GLOB_MODPAR_NAME = "gs_bSidelight_fr_hdiv_right" | GLOB_MODPAR_NAME = "gs_sidelight_fr_hdiv_hgt_right" | GLOB_MODPAR_NAME = "gs_sidelight_fr_hdiv_wdt_right" |\
			GLOB_MODPAR_NAME = "gs_sidelight_width_right" | GLOB_MODPAR_NAME = "gs_sidelight_width_right_half" | GLOB_MODPAR_NAME = "gs_sidelight_parapet_hgt_right" |\
			(GLOB_MODPAR_NAME = "gs_sl_sash_width" & gs_optype_m_05 <> SASH_FIXED) then
			sashMullionResetArray[2][3]	= 1
		endif
		if	GLOB_MODPAR_NAME = "gs_bSidelight_fr_hdiv_left" | GLOB_MODPAR_NAME = "gs_sidelight_fr_hdiv_hgt_left" | GLOB_MODPAR_NAME = "gs_sidelight_fr_hdiv_wdt_left" |\
			GLOB_MODPAR_NAME = "gs_sidelight_width_left" | GLOB_MODPAR_NAME = "gs_sidelight_width_left_half" | GLOB_MODPAR_NAME = "gs_sidelight_parapet_hgt_left" |\
			(GLOB_MODPAR_NAME = "gs_sl_sash_width" & gs_optype_m_11 <> SASH_FIXED) then
			sashMullionResetArray[3][1]	= 1
		endif
		if	GLOB_MODPAR_NAME = "gs_bSidelight_fr_hdiv_right" | GLOB_MODPAR_NAME = "gs_sidelight_fr_hdiv_hgt_right" | GLOB_MODPAR_NAME = "gs_sidelight_fr_hdiv_wdt_right" |\
			GLOB_MODPAR_NAME = "gs_sidelight_width_right" | GLOB_MODPAR_NAME = "gs_sidelight_width_right_half" | GLOB_MODPAR_NAME = "gs_sidelight_parapet_hgt_right" |\
			(GLOB_MODPAR_NAME = "gs_sl_sash_width" & gs_optype_m_07 <> SASH_FIXED) then
			sashMullionResetArray[3][3]	= 1
		endif
	endif
endif

if abs(ac_unit_height - gs_shoulder_h) > EPS & bArchedTop then
	arcrad					= ((ac_unit_width^2)/4 + (ac_unit_height - gs_shoulder_h)^2) / (2 * (ac_unit_height - gs_shoulder_h))
	triangHIn				= SQR((arcrad - gs_frame_width_right)^2 -  (ac_unit_width/2 - gs_frame_width_right)^2)
else
	arcrad					= 0
	triangHIn				= 0
endif

call "Casement_rectangular_kmod" parameters	iWindowClass			= 7,		! WINCLASS_DOORSASH
										isWindow				= 0,
										CasementIDArray 		= CasementIDArray,
										CasementTypeArray		= CasementTypeArray,
										CasementShapeArray		= CasementShapeArray,
										sashWidthArray			= sashWidthArray,
										sashHeightArray			= sashHeightArray,
										sashMullionResetArray	= sashMullionResetArray,
										gs_frame_thk			= gs_frame_thkin,
										gs_sash_uniform			= gs_sash_uniform,
										gs_sash_thk				= gs_sash_thk,
										gs_sash_width			= gs_sash_width,
										gs_sl_sash_width		= gs_sl_sash_width,
										gs_rebate_width			= gs_sidelight_rebate_width,
										gs_bLeftSLight			= gs_sidelight_left,
										gs_bSLight				= gs_sidelight_right,
										gs_UTrans				= gs_door_transom,
										gs_LTrans				= gs_bSidelight_fr_hdiv_right | gs_bSidelight_fr_hdiv_left,
										gs_UTrans_Div			= gs_door_transom & (gs_SidelightTransomRelation_m = SIDELIGHT_CROSSES_TRANSOM),
										gs_LTrans_Div			= 1,
										iMullionPosition		= iMullionPosition,
										MullionStyle_00			= MullionStyle_00,
										iMullionStyle_00		= iMullionStyle_00,
										MullionStyle_02			= MullionStyle_02,
										iMullionStyle_02		= iMullionStyle_02,
										iMullionStyleOriginal_02= iMullionStyleOriginal_02,
										MullionStyle_05			= MullionStyle_05,
										iMullionStyle_05		= iMullionStyle_05,
										iMullionStyleOriginal_05= iMullionStyleOriginal_05,
										MullionStyle_06			= MullionStyle_06,
										iMullionStyle_06		= iMullionStyle_06,
										iMullionStyleOriginal_06= iMullionStyleOriginal_06,
										MullionStyle_07			= MullionStyle_07,
										iMullionStyle_07		= iMullionStyle_07,
										iMullionStyleOriginal_07= iMullionStyleOriginal_07,
										MullionStyle_09			= MullionStyle_09,
										iMullionStyle_09		= iMullionStyle_09,
										iMullionStyleOriginal_09= iMullionStyleOriginal_09,
										MullionStyle_10			= MullionStyle_10,
										iMullionStyle_10		= iMullionStyle_10,
										iMullionStyleOriginal_10= iMullionStyleOriginal_10,
										MullionStyle_11			= MullionStyle_11,
										iMullionStyle_11		= iMullionStyle_11,
										iMullionStyleOriginal_11= iMullionStyleOriginal_11,
										MullionPosition			= MullionPosition,
										sashFrameWidth			= sashFrameWidth,
										gs_horiz_div_height_02	= gs_horiz_div_height_02,
										gs_horiz_div_height_05	= gs_horiz_div_height_05,
										gs_horiz_div_height_06	= gs_horiz_div_height_06,
										gs_horiz_div_height_07	= gs_horiz_div_height_07,
										gs_horiz_div_height_09	= gs_horiz_div_height_09,
										gs_horiz_div_height_10	= gs_horiz_div_height_10,
										gs_horiz_div_height_11	= gs_horiz_div_height_11,
										gs_optype_02			= gs_optype_02,
										gs_optype_05			= gs_optype_05,
										gs_optype_06			= gs_optype_06,
										gs_optype_07			= gs_optype_07,
										gs_optype_09			= gs_optype_09,
										gs_optype_10			= gs_optype_10,
										gs_optype_11			= gs_optype_11,
										gs_optype_m_02			= gs_optype_m_02,
										gs_optype_m_05			= gs_optype_m_05,
										gs_optype_m_06			= gs_optype_m_06,
										gs_optype_m_07			= gs_optype_m_07,
										gs_optype_m_09			= gs_optype_m_09,
										gs_optype_m_10			= gs_optype_m_10,
										gs_optype_m_11			= gs_optype_m_11,
										stSashType				= stSashType,
										gw						= gw,
										ghe						= ghe,
										gs_sidelight_div_width	= gs_sidelight_div_width,
										gs_sidelight_div_thk	= gs_sidelight_div_thk,
										vgn_02					= vgn_02,
										hgn_02					= hgn_02,
										vgn_05					= vgn_05,
										hgn_05					= hgn_05,
										vgn_06					= vgn_06,
										hgn_06					= hgn_06,
										vgn_07					= vgn_07,
										hgn_07					= hgn_07,
										vgn_09					= vgn_09,
										hgn_09					= hgn_09,
										vgn_10					= vgn_10,
										hgn_10					= hgn_10,
										vgn_11					= vgn_11,
										hgn_11					= hgn_11,
										vgn2_02					= vgn2_02,
										hgn2_02					= hgn2_02,
										vgn2_05					= vgn2_05,
										hgn2_05					= hgn2_05,
										vgn2_06					= vgn2_06,
										hgn2_06					= hgn2_06,
										vgn2_07					= vgn2_07,
										hgn2_07					= hgn2_07,
										vgn2_09					= vgn2_09,
										hgn2_09					= hgn2_09,
										vgn2_10					= vgn2_10,
										hgn2_10					= hgn2_10,
										vgn2_11					= vgn2_11,
										hgn2_11					= hgn2_11,
										vergrid_02				= vergrid_02,
										horgrid_02				= horgrid_02,
										vergrid_05				= vergrid_05,
										horgrid_05				= horgrid_05,
										vergrid_06				= vergrid_06,
										horgrid_06				= horgrid_06,
										vergrid_07				= vergrid_07,
										horgrid_07				= horgrid_07,
										vergrid_09				= vergrid_09,
										horgrid_09				= horgrid_09,
										vergrid_10				= vergrid_10,
										horgrid_10				= horgrid_10,
										vergrid_11				= vergrid_11,
										horgrid_11				= horgrid_11,
										vergrid2_05				= vergrid2_05,
										horgrid2_05				= horgrid2_05,
										vergrid2_06				= vergrid2_06,
										horgrid2_06				= horgrid2_06,
										vergrid2_07				= vergrid2_07,
										horgrid2_07				= horgrid2_07,
										vergrid2_09				= vergrid2_09,
										horgrid2_09				= horgrid2_09,
										vergrid2_10				= vergrid2_10,
										horgrid2_10				= horgrid2_10,
										vergrid2_11				= vergrid2_11,
										horgrid2_11				= horgrid2_11,
										bVentilationProfile				= bVentilationProfile,
										iVentilationProfileType			= iVentilationProfileType,
										VentilationProfileHeight		= VentilationProfileHeight,
										isVentilationProfileInSash_01	= isVentilationProfileInSash_01,
										isVentilationProfileInSash_02	= isVentilationProfileInSash_02,
										isVentilationProfileInSash_03	= isVentilationProfileInSash_03,
										isVentilationProfileInSash_04	= isVentilationProfileInSash_04,
										isVentilationProfileInSash_05	= isVentilationProfileInSash_05,
										isVentilationProfileInSash_06	= isVentilationProfileInSash_06,
										isVentilationProfileInSash_07	= isVentilationProfileInSash_07,
										isVentilationProfileInSash_08	= isVentilationProfileInSash_08,
										isVentilationProfileInSash_09	= isVentilationProfileInSash_09,
										isVentilationProfileInSash_10	= isVentilationProfileInSash_10,
										isVentilationProfileInSash_11	= isVentilationProfileInSash_11,
										stMullionPosition		= stMullionPosition,
										stOpeningType			= stOpeningType,
										openingAngle_02			= openingAngle_02,
										openingAngle_05			= openingAngle_05,
										openingAngle_06			= openingAngle_06,
										openingAngle_07			= openingAngle_07,
										openingAngle_09			= openingAngle_09,
										openingAngle_10			= openingAngle_10,
										openingAngle_11			= openingAngle_11,
										openingAngle2_02		= openingAngle2_02,
										openingAngle2_05		= openingAngle2_05,
										openingAngle2_06		= openingAngle2_06,
										openingAngle2_07		= openingAngle2_07,
										openingAngle2_09		= openingAngle2_09,
										openingAngle2_10		= openingAngle2_10,
										openingAngle2_11		= openingAngle2_11,
										glassShoulderHeight		= gs_transom_height - gs_frame_width_right - (arcrad - triangHIn),
										LouverStyle				= LouverStyle,
										iLouverStyle			= iLouverStyle,
										gs_louver_thk			= gs_louver_thk,
										gs_louver_width			= gs_louver_width,
										gs_louver_opening_angle	= gs_louver_opening_angle,
										gs_ventSashLouver_mat	= gs_ventSashLouver_mat,
										bSlidingUIalternative	= bSlidingUIalternative,
								returned_parameters	bLockMullionParamsSash,
													bLockGlassParamsSash,
													PanelGlassArea

glassarea_counter = glassarea_counter + PanelGlassArea

if not(bLockMullionParamsLeaf | bLockMullionParamsSash) then
	hideparameter "gs_leaf_grill_mat"
	hideparameter "gs_leaf_grill_mat2"
endif
if bLockGlassParamsLeaf & bLockGlassParamsSash then
	hideparameter "gs_leaf_glass_pen", "gs_leaf_glass_mat"
	lock "gs_leaf_glass_pen", "gs_leaf_glass_mat"
endif
if not(bLockGlassParamsSash) then
	hideparameter "gs_leaf_glass_pen", "gs_leaf_glass_mat"
endif

! =============================================================================
! Total Glazed Area Listing Parameters
! =============================================================================
if NOT(gs_list_glassarea_override) then
	if GLOB_MODPAR_NAME = "gs_list_glassarea" then
		gs_list_glassarea_tmp = gs_list_glassarea
		parameters gs_list_glassarea_tmp = gs_list_glassarea_tmp
	else
		gs_list_glassarea = gs_list_glassarea_tmp
		parameters gs_list_glassarea = gs_list_glassarea
	endif

	parameters gs_list_glassarea = glassarea_counter
	lock "gs_list_glassarea"
else
	if GLOB_MODPAR_NAME = "gs_list_glassarea" then
		gs_list_glassarea_tmp = gs_list_glassarea
		parameters gs_list_glassarea_tmp = gs_list_glassarea_tmp
	else
		gs_list_glassarea = gs_list_glassarea_tmp
		parameters gs_list_glassarea = gs_list_glassarea
	endif
endif


! =============================================================================
! Orientation
! =============================================================================

values{2} "gs_list_orientationDef_m"	0, `Автоматически`,
										1, `Специальный`

if gs_list_orientationDef_m = 0 then
	ac_OpeningSide = ""
	if	gs_leaf_optype_m = LEAF_1L_SIDE_HUNG |\
		gs_leaf_optype_m = LEAF_2L_SIDE_HUNG |\
		gs_leaf_optype_m = LEAF_2L_1SLIDING |\
		gs_leaf_optype_m = LEAF_3L_2SLIDING |\
		gs_leaf_optype_m = LEAF_4L_3SLIDING |\
		gs_leaf_optype_m = LEAF_1L_EXTERNAL_SLIDING |\
		gs_leaf_optype_m = LEAF_1L_POCKET then

		if SYMB_MIRRORED then
			ac_OpeningSide = stOpeningSide[2]
		else
			ac_OpeningSide = stOpeningSide[1]
		endif
	endif
	if	gs_leaf_optype_m = LEAF_1L_SIDE_HUNG_M |\
		gs_leaf_optype_m = LEAF_2L_1SLIDING_M |\
		gs_leaf_optype_m = LEAF_3L_2SLIDING_M |\
		gs_leaf_optype_m = LEAF_4L_3SLIDING_M |\
		gs_leaf_optype_m = LEAF_1L_EXTERNAL_SLIDING_M |\
		gs_leaf_optype_m = LEAF_1L_POCKET_M then

		if SYMB_MIRRORED then
			ac_OpeningSide = stOpeningSide[1]
		else
			ac_OpeningSide = stOpeningSide[2]
		endif
	endif
	parameters ac_OpeningSide = ac_OpeningSide

	lock "ac_OpeningSide"
	hideparameter "ac_OpeningSide"
endif

!
!! =============================================================================
!! Door Leaf Widths for Listing
!! =============================================================================
!
!if	((iOpeningMethod = OPENMETHOD_OPEN_SIMP		|\
!	  iOpeningMethod = OPENMETHOD_OPEN_DOUB)	&\
!	 not(bBombShelter)) then
!
!	_formatStr = ""
!	rrr = REQUEST ("Window_door_dimension", "", _formatStr)
!
!	if (iOpeningMethod = OPENMETHOD_OPEN_DOUB)	then
!		if gs_iLeavesConfig = LEAVESCONFIG_UNIFORM then
!			gs_list_doorleafwidths = STR{2}(_formatStr, ac_leaf_width/2)
!			gs_list_doorleafwidths = gs_list_doorleafwidths + " / " + gs_list_doorleafwidths
!		else
!			gs_list_doorleafwidths = STR{2}(_formatStr, gs_SecondLeaf_w) + " / " + STR{2}(_formatStr, (ac_leaf_width - gs_SecondLeaf_w))
!		endif
!	else
!		gs_list_doorleafwidths = STR{2}(_formatStr, ac_leaf_width)
!	endif
!
!	parameters gs_list_doorleafwidths = gs_list_doorleafwidths
!endif
!

! =============================================================================
! IFC Parameters
! =============================================================================

ifc_optype = DOOR_OP_USER_DEFINED

if not(gs_sidelight_left | gs_sidelight_right) then
	if iDoorPanelType = 0 then
		ifc_optype = DOOR_OP_NOT_DEFINED
	else
		if gs_leaf_optype_m = LEAF_1L_SIDE_HUNG then
			ifc_optype = DOOR_OP_SINGLE_DOOR_SINGLE_SWING
		endif

		if gs_leaf_optype_m = LEAF_1L_DOUBLE_ACTING then
			ifc_optype = DOOR_OP_SINGLE_DOOR_DOUBLE_SWING
		endif

		if gs_leaf_optype_m = LEAF_2L_SIDE_HUNG | gs_leaf_optype_m = LEAF_GAR_2L_SIDE_HUNG then
			ifc_optype = DOOR_OP_DOUBLE_DOOR_SINGLE_SWING
		endif

		if gs_leaf_optype_m = LEAF_2L_DOUBLE_ACTING then
			ifc_optype = DOOR_OP_DOUBLE_DOOR_DOUBLE_SWING
		endif

		if gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS then
			ifc_optype = DOOR_OP_DOUBLE_DOOR_SINGLE_SWING_OPP
		endif

		if gs_leaf_optype_m = LEAF_1L_EXTERNAL_SLIDING then
			ifc_optype = DOOR_OP_SINGLE_DOOR_SLIDING
		endif

		if gs_leaf_optype_m = LEAF_2L_EXTERNAL_SLIDING then
			ifc_optype = DOOR_OP_DOUBLE_DOOR_SLIDING
		endif

		if gs_leaf_optype_m = LEAF_1L_MULTIPANEL then
			ifc_optype = DOOR_OP_SINGLE_DOOR_FOLDING
		endif

		if gs_leaf_optype_m = LEAF_2L_MULTIPANEL then
			ifc_optype = DOOR_OP_DOUBLE_DOOR_FOLDING
		endif

		if	gs_leaf_optype_m = LEAF_GAR_1L_UP_AND_OVER |\
			gs_leaf_optype_m = LEAF_GAR_1L_UP_SLIDING |\
			gs_leaf_optype_m = LEAF_GAR_1L_SECTIONAL |\
			gs_leaf_optype_m = LEAF_GAR_1L_ROLLUP then

			ifc_optype = DOOR_OP_ROLLING_UP
		endif
	endif
endif

parameters ifc_optype = ifc_optype

call "IFC_optype_door_kmod" parameters ifc_optype = ifc_optype

lock "ifc_optypestr"

bNoFrame =	((gs_leaf_optype_m = LEAF_1L_EXTERNAL_SLIDING	|\
			  gs_leaf_optype_m = LEAF_1L_EXTERNAL_SLIDING_M	|\
			  gs_leaf_optype_m = LEAF_2L_EXTERNAL_SLIDING) 	|\
			((gs_leaf_optype_m = LEAF_1L_POCKET 			|\
			  gs_leaf_optype_m = LEAF_1L_POCKET_M 			|\
			  gs_leaf_optype_m = LEAF_2L_POCKET				&\
			  not(gs_pocket_door_frame))))

if gs_frame_wthk | bNoFrame then
	ifc_LiningDepth = 0
else
	ifc_LiningDepth = WIDO_FRAME_THICKNESS
endif
parameters	ifc_LiningDepth = ifc_LiningDepth

if bNoFrame then
	ifc_LiningThickness	= 0
	ifc_LiningOffset	= 0
else
	ifc_LiningThickness	= gs_frame_width
	ifc_LiningOffset	= WIDO_FRAME_THICKNESS * WIDO_REVEAL_SIDE
endif
parameters	ifc_LiningThickness	= ifc_LiningThickness,
			ifc_LiningOffset	= ifc_LiningOffset

if gs_door_transom then
	ifc_TransomOffset		= ac_unit_height - gs_transom_height
	ifc_TransomThickness	= gs_frame_width_transom
else
	ifc_TransomOffset		= 0
	ifc_TransomThickness 	= 0
endif
parameters	ifc_TransomOffset		= ifc_TransomOffset,
			ifc_TransomThickness	= ifc_TransomThickness

dim ifc_DoorPanel[][4]
	ifc_DoorPanel[1][1] = 0
	ifc_DoorPanel[1][2] = 0
	ifc_DoorPanel[1][3] = 0		! NOTDEFINED
	ifc_DoorPanel[1][4] = 0		! NOTDEFINED

if not(ifc_optype = DOOR_OP_NOT_DEFINED | ifc_optype = DOOR_OP_USER_DEFINED) then
	iDoorPanelOperation = 0		! NOTDEFINED
	if	gs_leaf_optype_m = LEAF_1L_SIDE_HUNG |\
		gs_leaf_optype_m = LEAF_1L_SIDE_HUNG_M |\
		gs_leaf_optype_m = LEAF_2L_SIDE_HUNG |\
		gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS |\
		gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS_M |\
		gs_leaf_optype_m = LEAF_GAR_2L_SIDE_HUNG then

		iDoorPanelOperation = 1		! SWINGING
	endif
	if	gs_leaf_optype_m = LEAF_1L_DOUBLE_ACTING |\
		gs_leaf_optype_m = LEAF_1L_DOUBLE_ACTING_M |\
		gs_leaf_optype_m = LEAF_2L_DOUBLE_ACTING then

		iDoorPanelOperation = 2		! DOUBLE_ACTING
	endif
	if	gs_slidingext |\
		gs_pocket |\
		gs_sliding then

		iDoorPanelOperation = 3		! SLIDING
	endif
	if gs_bifold then
		iDoorPanelOperation = 4		! FOLDING
	endif
	if gs_leaf_optype_m = LEAF_REVOLVING then
		iDoorPanelOperation = 5		! REVOLVING
	endif
	if	gs_leaf_optype_m = LEAF_GAR_1L_UP_AND_OVER |\
		gs_leaf_optype_m = LEAF_GAR_1L_UP_SLIDING |\
		gs_leaf_optype_m = LEAF_GAR_1L_SECTIONAL |\
		gs_leaf_optype_m = LEAF_GAR_1L_ROLLUP then

		iDoorPanelOperation = 6		! ROLLINGUP
	endif
	if	gs_leaf_optype_m = LEAF_1L_PIVOT |\
		gs_leaf_optype_m = LEAF_1L_PIVOT_M |\
		gs_leaf_optype_m = LEAF_GAR_2L_ROLLSIDE then

		iDoorPanelOperation = 7		! USERDEFINED
	endif


	if	gs_leaf_optype_m = LEAF_1L_SIDE_HUNG |\
		gs_leaf_optype_m = LEAF_1L_SIDE_HUNG_M |\
		gs_leaf_optype_m = LEAF_1L_DOUBLE_ACTING |\
		gs_leaf_optype_m = LEAF_1L_DOUBLE_ACTING_M |\
		gs_leaf_optype_m = LEAF_1L_PIVOT |\
		gs_leaf_optype_m = LEAF_1L_PIVOT_M |\
		gs_leaf_optype_m = LEAF_1L_EXTERNAL_SLIDING |\
		gs_leaf_optype_m = LEAF_1L_EXTERNAL_SLIDING_M |\
		gs_leaf_optype_m = LEAF_1L_POCKET |\
		gs_leaf_optype_m = LEAF_1L_POCKET_M |\
		gs_leaf_optype_m = LEAF_GAR_1L_UP_AND_OVER |\
		gs_leaf_optype_m = LEAF_GAR_1L_UP_SLIDING |\
		gs_leaf_optype_m = LEAF_GAR_1L_SECTIONAL |\
		gs_leaf_optype_m = LEAF_GAR_1L_ROLLUP then

		ifc_DoorPanel[1][1] = gs_leaf_thk
		ifc_DoorPanel[1][2] = ac_leaf_width/ac_egress_width
		ifc_DoorPanel[1][3] = iDoorPanelOperation
		ifc_DoorPanel[1][4] = 2		! MIDDLE
	endif

	if	gs_leaf_optype_m = LEAF_2L_SIDE_HUNG |\
		gs_leaf_optype_m = LEAF_2L_DOUBLE_ACTING |\
		gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS |\
		gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS_M |\
		gs_leaf_optype_m = LEAF_2L_EXTERNAL_SLIDING |\
		gs_leaf_optype_m = LEAF_2L_POCKET |\
		gs_leaf_optype_m = LEAF_GAR_2L_SIDE_HUNG |\
		gs_leaf_optype_m = LEAF_GAR_2L_ROLLSIDE then

		ifc_DoorPanel[1][1] = gs_leaf_thk
		ifc_DoorPanel[1][2] = lal/ac_egress_width
		ifc_DoorPanel[1][3] = iDoorPanelOperation
		ifc_DoorPanel[1][4] = 1		! LEFT

		ifc_DoorPanel[2][1] = gs_leaf_thk
		ifc_DoorPanel[2][2] = lar/ac_egress_width
		ifc_DoorPanel[2][3] = iDoorPanelOperation
		ifc_DoorPanel[2][4] = 3		! RIGHT
	endif

	if gs_leaf_optype_m = LEAF_REVOLVING then
		ifc_DoorPanel[1][1] = gs_leaf_thk
		ifc_DoorPanel[1][2] = 0
		ifc_DoorPanel[1][3] = iDoorPanelOperation
		ifc_DoorPanel[1][4] = 0		! NOTDEFINED
	endif

	if gs_sliding then
		LeafNum = 2
		SlidingLeafNum = 1
		if	gs_leaf_optype_m = LEAF_2L_2SLIDING |\
			gs_leaf_optype_m = LEAF_2L_2SLIDING_M then

			LeafNum = 2
			SlidingLeafNum = 2
		endif
		if	gs_leaf_optype_m = LEAF_3L_2SLIDING |\
			gs_leaf_optype_m = LEAF_3L_2SLIDING_M then

			LeafNum = 3
			SlidingLeafNum = 2
		endif
		if gs_leaf_optype_m = LEAF_4L_2SLIDING then
			LeafNum = 4
			SlidingLeafNum = 2
		endif
		if	gs_leaf_optype_m = LEAF_4L_3SLIDING |\
			gs_leaf_optype_m = LEAF_4L_3SLIDING_M then

			LeafNum = 4
			SlidingLeafNum = 3
		endif
		if	gs_leaf_optype_m = LEAF_4L_4SLIDING |\
			gs_leaf_optype_m = LEAF_4L_4SLIDING_M then

			LeafNum = 4
			SlidingLeafNum = 4
		endif

		TotalLeafWidth = ac_unit_width - gs_sidelight_width_right * gs_sidelight_right - gs_sidelight_width_left * gs_sidelight_left - \
						gs_frame_width_right * not(gs_sidelight_right) - gs_frame_width_left * not(gs_sidelight_left) + 2 * gs_rebate_width

		panelWidth = TotalLeafWidth/LeafNum

		for i = 1 to SlidingLeafNum
			if SlidingLeafNum = 1 then
				iDoorPanelPosition = 2		! MIDDLE
			else
				if i = 1 then
					iDoorPanelPosition = 1		! LEFT
				else
					if i = SlidingLeafNum then
						iDoorPanelPosition = 3		! RIGHT
					else
						iDoorPanelPosition = 2		! MIDDLE
					endif
				endif
			endif

			ifc_DoorPanel[i][1] = gs_leaf_thk
			ifc_DoorPanel[i][2] = panelWidth/ac_egress_width
			ifc_DoorPanel[i][3] = iDoorPanelOperation
			ifc_DoorPanel[i][4] = iDoorPanelPosition
		next i
	endif

	if gs_bifold then
		TotalLeafWidth = ac_unit_width - gs_sidelight_width_right * gs_sidelight_right - gs_sidelight_width_left * gs_sidelight_left - \
						gs_frame_width_right * not(gs_sidelight_right) - gs_frame_width_left * not(gs_sidelight_left) + 2 * gs_rebate_width

		if gs_leaf_optype_m = LEAF_2L_MULTIPANEL then
			panelWidth = TotalLeafWidth/(gs_leaf_num + gs_leaf_num2 - bMiddleStacking)

			for i = 1 to gs_leaf_num + gs_leaf_num2
				if i < (gs_leaf_num + 1) then
					iDoorPanelPosition = 1		! LEFT
				else
					iDoorPanelPosition = 3		! RIGHT
				endif

				ifc_DoorPanel[i][1] = gs_leaf_thk
				ifc_DoorPanel[i][2] = (panelWidth - (panelWidth/2) * ((i = 1) | (i = (gs_leaf_num + gs_leaf_num2))) * bMiddleStacking)/ac_egress_width
				ifc_DoorPanel[i][3] = iDoorPanelOperation
				ifc_DoorPanel[i][4] = iDoorPanelPosition
			next i
		else
			panelWidth = TotalLeafWidth/(gs_leaf_num - bMiddleStacking)

			if gs_leaf_optype_m = LEAF_1L_MULTIPANEL then
				iDoorPanelPosition = 1		! LEFT
			else
				iDoorPanelPosition = 3		! RIGHT
			endif

			for i = 1 to gs_leaf_num
				ifc_DoorPanel[i][1] = gs_leaf_thk
				ifc_DoorPanel[i][2] = (panelWidth - (panelWidth/2) * ((i = 1) | (i = gs_leaf_num)) * bMiddleStacking)/ac_egress_width
				ifc_DoorPanel[i][3] = iDoorPanelOperation
				ifc_DoorPanel[i][4] = iDoorPanelPosition
			next i
		endif
	endif
endif
parameters ifc_DoorPanel = ifc_DoorPanel


end

"preloadSurfaces":
	parameters	stored_material[1][1]	= gs_frame_mat,
				stored_material[1][2]	= gs_frame_mat2,
				stored_material[1][3]	= gs_leaf_mat,
				stored_material[1][4]	= gs_leaf_matin,
				stored_material[1][5]	= gs_leaf_mat2,
				stored_material[1][6]	= gs_leaf_mat3,
				stored_material[1][7]	= gs_grill_mat,
				stored_material[1][8]	= gs_grill_mat2,
				stored_material[1][9]	= gs_leaf_grill_mat,
				stored_material[1][10]	= gs_leaf_grill_mat2,
				stored_material[1][11]	= gs_panel_mat,
				stored_material[1][12]	= gs_panel_mat2

	sf = _startDim
	if gs_door_transom then
		parameters	stored_material[1][sf]	= gs_transom_mat		: sf = sf + 1
		parameters	stored_material[1][sf]	= gs_transom_matin		: sf = sf + 1
	endif

	if gs_sidelight_right then
		parameters	stored_material[1][sf]	= gs_sidelight1_mat		: sf = sf + 1
		parameters	stored_material[1][sf]	= gs_sidelight1_matin	: sf = sf + 1
	endif

	if gs_sidelight_left then
		parameters	stored_material[1][sf]	= gs_sidelight2_mat		: sf = sf + 1
		parameters	stored_material[1][sf]	= gs_sidelight2_matin	: sf = sf + 1
	endif
return
