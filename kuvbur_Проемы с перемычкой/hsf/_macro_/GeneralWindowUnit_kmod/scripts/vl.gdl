
! =============================================================================
! Attributes
! =============================================================================

if gs_pen_2D	<= 0 then parameters gs_pen_2D		= 3
if gs_frame_pen	<= 0 then parameters gs_frame_pen	= 2
if gs_sash_pen	<= 0 then parameters gs_sash_pen	= 2
if gs_glass_pen	<= 0 then parameters gs_glass_pen	= 2


! =============================================================================
! Ventilation Profile
! =============================================================================

if bEnableVentilationProfile then
	call "Ventilation_profile_kmod" parameters	isWindow						= 1,
											iWindowType						= iWindowType,
											gs_bSLight						= gs_bSLight,
											gs_bLeftSLight					= gs_bLeftSLight,
											gs_LTrans						= gs_LTrans,
											gs_LTrans_Div					= gs_LTrans_Div,
											gs_UTrans						= gs_UTrans,
											gs_UTrans_Div					= gs_UTrans_Div,
											gs_panes_number					= gs_panes_number,
											CasementIDArray					= CasementIDArray,
											bVentilationProfile				= bVentilationProfile,
											iVentilationProfileType			= iVentilationProfileType,
											isVentilationProfileInSash_01	= isVentilationProfileInSash_01,
											isVentilationProfileInSash_02	= isVentilationProfileInSash_02,
											isVentilationProfileInSash_03	= isVentilationProfileInSash_03,
											isVentilationProfileInSash_04	= isVentilationProfileInSash_04,
											isVentilationProfileInSash_05	= isVentilationProfileInSash_05,
											isVentilationProfileInSash_06	= isVentilationProfileInSash_06,
											isVentilationProfileInSash_07	= isVentilationProfileInSash_07,
											isVentilationProfileInSash_08	= isVentilationProfileInSash_08,
											isVentilationProfileInSash_09	= isVentilationProfileInSash_09,
											isVentilationProfileInSash_10	= isVentilationProfileInSash_10,
											isVentilationProfileInSash_11	= isVentilationProfileInSash_11,
											iMullionStyle_01				= iMullionStyle_01,
											iMullionStyle_02				= iMullionStyle_02,
											iMullionStyle_03				= iMullionStyle_03,
											iMullionStyle_04				= iMullionStyle_04,
											iMullionStyle_05				= iMullionStyle_05,
											iMullionStyle_06				= iMullionStyle_06,
											iMullionStyle_07				= iMullionStyle_07,
											iMullionStyle_08				= iMullionStyle_08,
											iMullionStyle_09				= iMullionStyle_09,
											iMullionStyle_10				= iMullionStyle_10,
											iMullionStyle_11				= iMullionStyle_11,
											gs_VentilationProfileTypeEnable	= gs_VentilationProfileTypeEnable
else
	if not(bSkylight) then
		lock	"bVentilationProfile",
				"gs_select_sash_vent_profile",
				"gs_list_freeAirPerformance"
		hideparameter	"bVentilationProfile",
						"gs_select_sash_vent_profile",
						"gs_list_freeAirPerformance"
	endif
endif


! =============================================================================
! Frame
! =============================================================================

values "gs_frame_thk"			range (gs_rebate_depth, ]
values "gs_sash_thk"			range (0, ]
values "gs_frame_width"			range (gs_rebate_width, ]
values "gs_frame_width_left"	range (gs_rebate_width, ]
values "gs_frame_width_upper"	range (gs_rebate_width, ]
values "gs_frame_width_lower"	range (gs_rebate_width, ]
values "gs_sash_width"			range (0, ]
values "gs_glass_thk"			range (0, )
if iWindowType = WIN_MultisashHorizontal then
	values "MullionWidth" range (gs_rebate_width, 2*(min(gs_frame_width, gs_frame_width_left))]
	values "MullionWidth_01" range (gs_rebate_width, ]
	values "MullionWidth_02" range (gs_rebate_width, ]
	values "MullionWidth_03" range (gs_rebate_width, ]
	values "MullionWidth_04" range (gs_rebate_width, ]
	values "MullionWidth_05" range (gs_rebate_width, ]
	values "MullionWidth_06" range (gs_rebate_width, ]
	values "MullionWidth_07" range (gs_rebate_width, ]
	values "MullionWidth_08" range (gs_rebate_width, ]
	values "MullionWidth_09" range (gs_rebate_width, ]
endif
if iWindowType = WIN_MultisashVertical then
	values "TransomWidth" range (gs_rebate_width, 2*(min(gs_frame_width_upper, gs_frame_width_lower))]
	values "TransomWidth_01" range (gs_rebate_width, ]
	values "TransomWidth_02" range (gs_rebate_width, ]
	values "TransomWidth_03" range (gs_rebate_width, ]
	values "TransomWidth_04" range (gs_rebate_width, ]
	values "TransomWidth_05" range (gs_rebate_width, ]
	values "TransomWidth_06" range (gs_rebate_width, ]
	values "TransomWidth_07" range (gs_rebate_width, ]
	values "TransomWidth_08" range (gs_rebate_width, ]
	values "TransomWidth_09" range (gs_rebate_width, ]
endif

if	iWindowType = WIN_MultisashHorizontal |\
	iWindowType = WIN_MultisashVertical then

	values "gs_panes_number" 1,2,3,4,5,6,7,8,9,10

	if gs_repeat_modules then
		if gs_repeat_modules_number < 2 then
			gs_repeat_modules_number = 2
			parameters gs_repeat_modules_number = gs_repeat_modules_number
		endif
		values "gs_repeat_modules_number" range[2, ]
		if iWindowType = WIN_MultisashHorizontal then
			minPaneWidth = MinSashWidth[1]
			for iPane = 2 to gs_panes_number
				minPaneWidth = minPaneWidth + MullionWidthArray[iPane-1] + MinSashWidth[iPane]
			next iPane

			values "gs_axis_distance" range[(minPaneWidth + MullionWidth), ]
		else
			minPaneHeight = MinSashHeight[1]
			for iPane = 2 to gs_panes_number
				minPaneHeight = minPaneHeight + TransomWidthArray[iPane-1] + MinSashHeight[iPane]
			next iPane

			values "gs_axis_distance" range[(minPaneHeight + TransomWidth), ]
		endif
	else
		lock "gs_repeat_modules_number",
			 "gs_axis_lock",
			 "gs_axis_distance"

		if iWindowType = WIN_MultisashHorizontal then
			lock "MullionWidth"
			hideparameter "MullionWidth"
		else
			lock "TransomWidth"
			hideparameter "TransomWidth"
		endif
	endif
endif

minframeWidth = min(gs_frame_width, gs_frame_width_left, gs_frame_width_upper, gs_frame_width_lower)
if gs_bSLight then
	minframeWidth = min(minframeWidth, gs_Mullion_w)
endif
if gs_bLeftSLight then
	minframeWidth = min(minframeWidth, gs_Mullion_w_left)
endif
if gs_UTrans then
	minframeWidth = min(minframeWidth, gs_UTrans_w)
endif
if gs_LTrans then
	minframeWidth = min(minframeWidth, gs_LTrans_w)
endif
if iWindowType = WIN_MultisashHorizontal then
	for i = 2 to gs_panes_number
		minframeWidth = min(minframeWidth, MullionWidthArray[i-1])
	next i
endif
if iWindowType = WIN_MultisashVertical then
	for i = 2 to gs_panes_number
		minframeWidth = min(minframeWidth, TransomWidthArray[i-1])
	next i
endif

values "gs_rebate_width"	range (0, minframeWidth)
values "gs_rebate_depth"	range (0, gs_frame_thk)

values{2} "gs_SashText_typ_num" 	MITERED_JOINT, `Угловое Соединение`,
									BUTT_JOINT, `Соединение Встык`

if gs_uniform_framewidth then
	lock	"gs_frame_width_left",
			"gs_frame_width_upper",
			"gs_frame_width_lower"

	if iWindowType = WIN_MultisashHorizontal then
		lock	"MullionWidth",
				"MullionWidth_01",
				"MullionWidth_02",
				"MullionWidth_03",
				"MullionWidth_04",
				"MullionWidth_05",
				"MullionWidth_06",
				"MullionWidth_07",
				"MullionWidth_08",
				"MullionWidth_09"

		hideparameter	"MullionWidth",
						"MullionWidth_01",
						"MullionWidth_02",
						"MullionWidth_03",
						"MullionWidth_04",
						"MullionWidth_05",
						"MullionWidth_06",
						"MullionWidth_07",
						"MullionWidth_08",
						"MullionWidth_09"
	endif
	if iWindowType = WIN_MultisashVertical then
		lock	"TransomWidth",
				"TransomWidth_01",
				"TransomWidth_02",
				"TransomWidth_03",
				"TransomWidth_04",
				"TransomWidth_05",
				"TransomWidth_06",
				"TransomWidth_07",
				"TransomWidth_08",
				"TransomWidth_09"

		hideparameter	"TransomWidth",
						"TransomWidth_01",
						"TransomWidth_02",
						"TransomWidth_03",
						"TransomWidth_04",
						"TransomWidth_05",
						"TransomWidth_06",
						"TransomWidth_07",
						"TransomWidth_08",
						"TransomWidth_09"
	endif
	if	iWindowType <> WIN_MultisashHorizontal	&\
		iWindowType <> WIN_MultisashVertical	then

		lock	"gs_UTrans_w",
				"gs_LTrans_w",
				"gs_Mullion_w",
				"gs_Mullion_w_left"
	endif
else
	if iWindowType = WIN_MultisashHorizontal then
		for i = 2 to 10
			if (CasementIDArray[1][i] = 2) & not(i < (gs_panes_number + 1)) then
				lock "MullionWidth_01"
				hideparameter "MullionWidth_01"
			endif
			if (CasementIDArray[1][i] = 3) & not(i < (gs_panes_number + 1)) then
				lock "MullionWidth_02"
				hideparameter "MullionWidth_02"
			endif
			if (CasementIDArray[1][i] = 4) & not(i < (gs_panes_number + 1)) then
				lock "MullionWidth_03"
				hideparameter "MullionWidth_03"
			endif
			if (CasementIDArray[1][i] = 5) & not(i < (gs_panes_number + 1)) then
				lock "MullionWidth_04"
				hideparameter "MullionWidth_04"
			endif
			if (CasementIDArray[1][i] = 6) & not(i < (gs_panes_number + 1)) then
				lock "MullionWidth_05"
				hideparameter "MullionWidth_05"
			endif
			if (CasementIDArray[1][i] = 7) & not(i < (gs_panes_number + 1)) then
				lock "MullionWidth_06"
				hideparameter "MullionWidth_06"
			endif
			if (CasementIDArray[1][i] = 8) & not(i < (gs_panes_number + 1)) then
				lock "MullionWidth_07"
				hideparameter "MullionWidth_07"
			endif
			if (CasementIDArray[1][i] = 9) & not(i < (gs_panes_number + 1)) then
				lock "MullionWidth_08"
				hideparameter "MullionWidth_08"
			endif
			if (CasementIDArray[1][i] = 10) & not(i < (gs_panes_number + 1)) then
				lock "MullionWidth_09"
				hideparameter "MullionWidth_09"
			endif
		next i
	endif

	if iWindowType = WIN_MultisashVertical then
		for i = 2 to 10
			if (CasementIDArray[1][i] = 2) & not(i < (gs_panes_number + 1)) then
				lock "TransomWidth_01"
				hideparameter "TransomWidth_01"
			endif
			if (CasementIDArray[1][i] = 3) & not(i < (gs_panes_number + 1)) then
				lock "TransomWidth_02"
				hideparameter "TransomWidth_02"
			endif
			if (CasementIDArray[1][i] = 4) & not(i < (gs_panes_number + 1)) then
				lock "TransomWidth_03"
				hideparameter "TransomWidth_03"
			endif
			if (CasementIDArray[1][i] = 5) & not(i < (gs_panes_number + 1)) then
				lock "TransomWidth_04"
				hideparameter "TransomWidth_04"
			endif
			if (CasementIDArray[1][i] = 6) & not(i < (gs_panes_number + 1)) then
				lock "TransomWidth_05"
				hideparameter "TransomWidth_05"
			endif
			if (CasementIDArray[1][i] = 7) & not(i < (gs_panes_number + 1)) then
				lock "TransomWidth_06"
				hideparameter "TransomWidth_06"
			endif
			if (CasementIDArray[1][i] = 8) & not(i < (gs_panes_number + 1)) then
				lock "TransomWidth_07"
				hideparameter "TransomWidth_07"
			endif
			if (CasementIDArray[1][i] = 9) & not(i < (gs_panes_number + 1)) then
				lock "TransomWidth_08"
				hideparameter "TransomWidth_08"
			endif
			if (CasementIDArray[1][i] = 10) & not(i < (gs_panes_number + 1)) then
				lock "TransomWidth_09"
				hideparameter "TransomWidth_09"
			endif
		next i
	endif
endif

if iWindowType = WIN_MultisashVertical then
	dim stAvailableSashOnSymbol[]
	dim iAvailableSashOnSymbol[]
	for iPane = 1 to gs_panes_number
		stAvailableSashOnSymbol[iPane] = stShowSashOnSymbol[iPane]
		iAvailableSashOnSymbol[iPane] = iPane
	next iPane

	values "gs_ShowSashOnSymbol"	stAvailableSashOnSymbol
	values "gs_iShowSashOnSymbol"	iAvailableSashOnSymbol

	if GLOB_MODPAR_NAME = "gs_ShowSashOnSymbol" then
		for iPane = 1 to gs_panes_number
			if gs_ShowSashOnSymbol = stShowSashOnSymbol[iPane] then
				gs_iShowSashOnSymbol = iPane				
				iPane = gs_panes_number
			endif
		next iPane
		parameters gs_iShowSashOnSymbol = gs_iShowSashOnSymbol
	else
		gs_ShowSashOnSymbol = stShowSashOnSymbol[gs_iShowSashOnSymbol]
		parameters gs_ShowSashOnSymbol = gs_ShowSashOnSymbol
	endif
endif

if	iWindowType = WIN_W2					|\
	iWindowType = WIN_WSingleHung2			|\
	iWindowType = WIN_WDoubleHung2			|\
	iWindowType = WIN_WDoubleSash			|\
	iWindowType = WIN_W2Sidelight			|\
	iWindowType = WIN_WVariable				then

	values "gs_PanesConfig"		stPanesConfiguration[1], stPanesConfiguration[3]
	values "gs_iPanesConfig"	PANESCONFIG_UNIFORM, PANESCONFIG_ASYMM
endif

if	iWindowType = WIN_W3				|\
	iWindowType = WIN_WSingleHung3		|\
	iWindowType = WIN_WDoubleHung3		|\
	iWindowType = WIN_W32Sidelights1	|\
	iWindowType = WIN_W32Sidelights2	then

	values "gs_PanesConfig"		stPanesConfiguration[1], stPanesConfiguration[2], stPanesConfiguration[3]
	values "gs_iPanesConfig"	PANESCONFIG_UNIFORM, PANESCONFIG_SYMM, PANESCONFIG_ASYMM
endif

if	iWindowType = WIN_WVariableDoubleSash	then
	values "gs_PanesConfig"		stPanesConfiguration[1], stPanesConfiguration[3], stPanesConfiguration[4]
	values "gs_iPanesConfig"	PANESCONFIG_UNIFORM, PANESCONFIG_ASYMM, PANESCONFIG_UNIF_DOUBSASHES
endif

if	iWindowType = WIN_MultisashHorizontal	then
	values "gs_PanesConfig"		stPanesConfiguration[1], stPanesConfiguration[3]
	values "gs_iPanesConfig"	PANESCONFIG_UNIFORM, PANESCONFIG_ASYMM

	if gs_panes_number = 1 then
		lock "gs_PanesConfig", "gs_iPanesConfig"
	endif
endif

if	iWindowType <> WIN_MultisashVertical	then
	if GLOB_MODPAR_NAME = "gs_PanesConfig" then
		gs_iPanesConfig	= PANESCONFIG_UNIFORM
		if gs_PanesConfig = stPanesConfiguration[2]	then gs_iPanesConfig	= PANESCONFIG_SYMM
		if gs_PanesConfig = stPanesConfiguration[3]	then gs_iPanesConfig	= PANESCONFIG_ASYMM
		if gs_PanesConfig = stPanesConfiguration[4]	then gs_iPanesConfig	= PANESCONFIG_UNIF_DOUBSASHES

		parameters gs_iPanesConfig = gs_iPanesConfig
	else
		gs_PanesConfig = stPanesConfiguration[gs_iPanesConfig]
		parameters gs_PanesConfig = gs_PanesConfig
	endif
endif


if	iWindowType = WIN_W1					|\
	iWindowType = WIN_W2					|\
	iWindowType = WIN_W3					|\
	iWindowType = WIN_WVariable				|\
	iWindowType = WIN_WDoubleSash			|\
	iWindowType = WIN_WVariableDoubleSash	then

	if gs_UTrans & gs_LTrans then
		values "gs_PanesConfigVertical"		stPanesConfiguration
		values "gs_iPanesConfigVertical"	PANESCONFIG_UNIFORM, PANESCONFIG_SYMM, PANESCONFIG_ASYMM
	else
		values "gs_PanesConfigVertical"		stPanesConfiguration[1], stPanesConfiguration[3]
		values "gs_iPanesConfigVertical"	PANESCONFIG_UNIFORM, PANESCONFIG_ASYMM
	endif
endif

if	iWindowType = WIN_W2Sidelight			then
	if gs_LTrans then
		values "gs_PanesConfigVertical"		stPanesConfiguration
		values "gs_iPanesConfigVertical"	PANESCONFIG_UNIFORM, PANESCONFIG_SYMM, PANESCONFIG_ASYMM
	else
		values "gs_PanesConfigVertical"		stPanesConfiguration[1], stPanesConfiguration[3]
		values "gs_iPanesConfigVertical"	PANESCONFIG_UNIFORM, PANESCONFIG_ASYMM
	endif
endif

if	iWindowType = WIN_W32Sidelights1		|\
	iWindowType = WIN_W32Sidelights2		then

	values "gs_PanesConfigVertical"		stPanesConfiguration[1], stPanesConfiguration[3]
	values "gs_iPanesConfigVertical"	PANESCONFIG_UNIFORM, PANESCONFIG_ASYMM
endif

if iWindowType = WIN_MultisashVertical then
	values "gs_PanesConfigVertical"		stPanesConfiguration[1], stPanesConfiguration[3]
	values "gs_iPanesConfigVertical"	PANESCONFIG_UNIFORM, PANESCONFIG_ASYMM

	if gs_panes_number = 1 then
		lock "gs_PanesConfigVertical", "gs_iPanesConfigVertical"
	endif
endif

if	iWindowType <> WIN_MultisashHorizontal	then

	if GLOB_MODPAR_NAME = "gs_PanesConfigVertical" then
		gs_iPanesConfigVertical	= PANESCONFIG_UNIFORM
		if gs_PanesConfigVertical = stPanesConfiguration[2]	then gs_iPanesConfigVertical	= PANESCONFIG_SYMM
		if gs_PanesConfigVertical = stPanesConfiguration[3]	then gs_iPanesConfigVertical	= PANESCONFIG_ASYMM

		parameters gs_iPanesConfigVertical = gs_iPanesConfigVertical
	else
		gs_PanesConfigVertical = stPanesConfiguration[gs_iPanesConfigVertical]
		parameters gs_PanesConfigVertical = gs_PanesConfigVertical
	endif
endif

if	iWindowType = WIN_MultisashHorizontal	|\
	iWindowType = WIN_MultisashVertical		then

	if iWindowType = WIN_MultisashHorizontal then
		if gs_iPanesConfig = PANESCONFIG_UNIFORM then
			lock	"PaneWidth_01",
					"PaneWidth_02",
					"PaneWidth_03",
					"PaneWidth_04",
					"PaneWidth_05",
					"PaneWidth_06",
					"PaneWidth_07",
					"PaneWidth_08",
					"PaneWidth_09",
					"PaneWidth_Remain"

			hideparameter	"PaneWidth_01",
							"PaneWidth_02",
							"PaneWidth_03",
							"PaneWidth_04",
							"PaneWidth_05",
							"PaneWidth_06",
							"PaneWidth_07",
							"PaneWidth_08",
							"PaneWidth_09",
							"PaneWidth_Remain"
		else
			for i = 2 to 10
				if (CasementIDArray[1][i] = 2) & not(i < (gs_panes_number + 1)) then
					lock "PaneWidth_01"
					hideparameter "PaneWidth_01"
				endif
				if (CasementIDArray[1][i] = 3) & not(i < (gs_panes_number + 1)) then
					lock "PaneWidth_02"
					hideparameter "PaneWidth_02"
				endif
				if (CasementIDArray[1][i] = 4) & not(i < (gs_panes_number + 1)) then
					lock "PaneWidth_03"
					hideparameter "PaneWidth_03"
				endif
				if (CasementIDArray[1][i] = 5) & not(i < (gs_panes_number + 1)) then
					lock "PaneWidth_04"
					hideparameter "PaneWidth_04"
				endif
				if (CasementIDArray[1][i] = 6) & not(i < (gs_panes_number + 1)) then
					lock "PaneWidth_05"
					hideparameter "PaneWidth_05"
				endif
				if (CasementIDArray[1][i] = 7) & not(i < (gs_panes_number + 1)) then
					lock "PaneWidth_06"
					hideparameter "PaneWidth_06"
				endif
				if (CasementIDArray[1][i] = 8) & not(i < (gs_panes_number + 1)) then
					lock "PaneWidth_07"
					hideparameter "PaneWidth_07"
				endif
				if (CasementIDArray[1][i] = 9) & not(i < (gs_panes_number + 1)) then
					lock "PaneWidth_08"
					hideparameter "PaneWidth_08"
				endif
				if (CasementIDArray[1][i] = 10) & not(i < (gs_panes_number + 1)) then
					lock "PaneWidth_09"
					hideparameter "PaneWidth_09"
				endif
			next i

			lock "PaneWidth_Remain"
			parameters PaneWidth_Remain = PaneWidth_Remain
		endif
	endif

	if iWindowType = WIN_MultisashVertical then
		if gs_iPanesConfigVertical = PANESCONFIG_UNIFORM then
			lock	"PaneHeight_01",
					"PaneHeight_02",
					"PaneHeight_03",
					"PaneHeight_04",
					"PaneHeight_05",
					"PaneHeight_06",
					"PaneHeight_07",
					"PaneHeight_08",
					"PaneHeight_09",
					"PaneHeight_Remain"

			hideparameter	"PaneHeight_01",
							"PaneHeight_02",
							"PaneHeight_03",
							"PaneHeight_04",
							"PaneHeight_05",
							"PaneHeight_06",
							"PaneHeight_07",
							"PaneHeight_08",
							"PaneHeight_09",
							"PaneHeight_Remain"
		else
			for i = 2 to 10
				if (CasementIDArray[1][i] = 2) & not(i < (gs_panes_number + 1)) then
					lock "PaneHeight_01"
					hideparameter "PaneHeight_01"
				endif
				if (CasementIDArray[1][i] = 3) & not(i < (gs_panes_number + 1)) then
					lock "PaneHeight_02"
					hideparameter "PaneHeight_02"
				endif
				if (CasementIDArray[1][i] = 4) & not(i < (gs_panes_number + 1)) then
					lock "PaneHeight_03"
					hideparameter "PaneHeight_03"
				endif
				if (CasementIDArray[1][i] = 5) & not(i < (gs_panes_number + 1)) then
					lock "PaneHeight_04"
					hideparameter "PaneHeight_04"
				endif
				if (CasementIDArray[1][i] = 6) & not(i < (gs_panes_number + 1)) then
					lock "PaneHeight_05"
					hideparameter "PaneHeight_05"
				endif
				if (CasementIDArray[1][i] = 7) & not(i < (gs_panes_number + 1)) then
					lock "PaneHeight_06"
					hideparameter "PaneHeight_06"
				endif
				if (CasementIDArray[1][i] = 8) & not(i < (gs_panes_number + 1)) then
					lock "PaneHeight_07"
					hideparameter "PaneHeight_07"
				endif
				if (CasementIDArray[1][i] = 9) & not(i < (gs_panes_number + 1)) then
					lock "PaneHeight_08"
					hideparameter "PaneHeight_08"
				endif
				if (CasementIDArray[1][i] = 10) & not(i < (gs_panes_number + 1)) then
					lock "PaneHeight_09"
					hideparameter "PaneHeight_09"
				endif
			next i

			lock "PaneHeight_Remain"
			parameters PaneHeight_Remain = PaneHeight_Remain
		endif
	endif
else
	if gs_iPanesConfig = PANESCONFIG_UNIFORM then
		if gs_bSLight then
			lock "gs_SLight_w"
			hideparameter "gs_SLight_w"
		endif
		if gs_bSLight & gs_bLeftSLight then
			lock "gs_MidPane_w"
			hideparameter "gs_MidPane_w"
		endif
	endif
	if gs_iPanesConfigVertical = PANESCONFIG_UNIFORM then
		if gs_UTrans then
			lock "gs_UTrans_h"
			hideparameter "gs_UTrans_h"
		endif
		if gs_LTrans then
			lock "gs_LTrans_h"
			hideparameter "gs_LTrans_h"
		endif
	endif
	if gs_iPanesConfigVertical = PANESCONFIG_SYMM then
		lock "gs_UTrans_h"
		hideparameter "gs_UTrans_h"
	endif

	if not(gs_UTrans) & not(gs_LTrans) then
		lock "gs_PanesConfigVertical", "gs_iPanesConfigVertical"
		hideparameter "gs_PanesConfigVertical", "gs_iPanesConfigVertical"
	endif
endif


! =============================================================================
! Transom
! =============================================================================

if	iWindowType <> WIN_MultisashHorizontal	&\
	iWindowType <> WIN_MultisashVertical	then

	values "gs_UTrans_w"		range(gs_rebate_width, ]
	values "gs_LTrans_w"		range(gs_rebate_width, ]
	values "gs_Mullion_w"		range(gs_rebate_width, ]
	values "gs_Mullion_w_left"	range(gs_rebate_width, ]

	values "gs_UTrans_h" range( gs_LTrans*(gs_LTrans_h+gs_UTrans_w/2) + not(gs_LTrans)*gs_frame_width_lower - gs_rebate_width+gs_sash_width + gs_UTrans_w/2,
								ac_unit_height - (gs_frame_width_upper - gs_rebate_width + gs_sash_width + gs_UTrans_w/2))
	if	gs_iPanesConfigVertical = PANESCONFIG_SYMM then
		values "gs_LTrans_h" range( gs_frame_width_lower - gs_rebate_width + gs_sash_width + gs_LTrans_w/2,
									ac_unit_height/2-( gs_sash_width - gs_rebate_width+gs_LTrans_w/2))
	else
		values "gs_LTrans_h" range( gs_frame_width_lower - gs_rebate_width + gs_sash_width + gs_LTrans_w/2,
									not(gs_UTrans)*(ac_unit_height - gs_frame_width_upper) + gs_UTrans*(gs_UTrans_h-gs_UTrans_w/2)-( gs_sash_width - gs_rebate_width+gs_LTrans_w/2))
	endif

	if not(gs_UTrans) then
		lock "gs_UTrans_w", "gs_UTrans_h", "gs_UTrans_Div"
		hideparameter "gs_UTrans_w", "gs_UTrans_h", "gs_UTrans_Div"
	endif

	if not(gs_LTrans) & iWindowType <> WIN_W2Sidelight  then
		lock "gs_LTrans_w", "gs_LTrans_h", "gs_LTrans_Div"
		hideparameter "gs_LTrans_w", "gs_LTrans_h", "gs_LTrans_Div"
	endif
endif

if	iWindowType = WIN_W2					|\
	iWindowType = WIN_WSingleHung2			|\
	iWindowType = WIN_WDoubleHung2			|\
	iWindowType = WIN_WDoubleSash			|\
	iWindowType = WIN_W2Sidelight			|\
	iWindowType = WIN_WVariable				|\
	iWindowType = WIN_WVariableDoubleSash	then

	values "gs_SLight_w" range ( gs_frame_width - gs_rebate_width + gs_sash_width + gs_Mullion_w/2,
								ac_unit_width - gs_frame_width_left - gs_Mullion_w/2 - 2 * (gs_sash_width - gs_rebate_width) )
endif

if	iWindowType = WIN_W3				|\
	iWindowType = WIN_WSingleHung3		|\
	iWindowType = WIN_WDoubleHung3		|\
	iWindowType = WIN_W32Sidelights1	|\
	iWindowType = WIN_W32Sidelights2	then

	if gs_iPanesConfig = PANESCONFIG_SYMM then
		values "gs_SLight_w" range (max(gs_frame_width, gs_frame_width_left) + 2 *(gs_sash_width - gs_rebate_width) + (max(gs_Mullion_w, gs_Mullion_w_left))/2,
									ac_unit_width/2 - (max(gs_Mullion_w, gs_Mullion_w_left))/2 - (gs_sash_width - gs_rebate_width)]
	endif
	if gs_iPanesConfig = PANESCONFIG_ASYMM then
		values "gs_SLight_w" range( gs_frame_width + 2 *(gs_sash_width - gs_rebate_width) + gs_Mullion_w/2,
									ac_unit_width - gs_MidPane_w - gs_frame_width - gs_frame_width_left - gs_Mullion_w/2 - gs_Mullion_w_left/2 - 4 *( gs_sash_width - gs_rebate_width))
		values "gs_MidPane_w" range(2 *(gs_sash_width - gs_rebate_width) + gs_Mullion_w/2 + gs_Mullion_w_left/2,
									ac_unit_width - gs_SLight_w - gs_frame_width_left - gs_Mullion_w_left - 2 *(gs_sash_width - gs_rebate_width))
	endif
endif

if	iWindowType = WIN_WVariable				|\
	iWindowType = WIN_WVariableDoubleSash	then

	if not(gs_bSLight) then
		lock "gs_SLight_w", "gs_Mullion_w"
		hideparameter "gs_SLight_w", "gs_Mullion_w"
	endif

	if not(gs_bSLight & gs_UTrans) then
		lock "gs_Mullion_Top"
		hideparameter "gs_Mullion_Top"
	endif

	if not(gs_bSLight & gs_LTrans) then
		lock "gs_Mullion_Bott"
		hideparameter "gs_Mullion_Bott"
	endif
endif

if iWindowType = WIN_MultisashHorizontal then
	if gs_panes_number > 1 then
		for iPane = 1 to gs_panes_number - 1
			if iPane = 1 then
				if gs_repeat_modules then
					minPaneWidth = MullionWidth/2 + MullionWidthArray[iPane]/2
				else
					minPaneWidth = gs_frame_width_left + MullionWidthArray[iPane]/2
				endif
			else
				minPaneWidth = MullionWidthArray[iPane-1]/2 + MullionWidthArray[iPane]/2
			endif
			minPaneWidth = minPaneWidth + MinSashWidth[iPane]

			_SumLeftPaneWidth = 0
			for jPane = 1 to iPane - 1
				_SumLeftPaneWidth = _SumLeftPaneWidth + PaneWidthArray[jPane]
			next jPane

			_SumRightMinPaneWidth = 0
			for jPane = iPane + 1 to gs_panes_number
				if jPane = gs_panes_number then
					if gs_repeat_modules then
						_SumRightMinPaneWidth = _SumRightMinPaneWidth + MinSashWidth[jPane] + MullionWidthArray[jPane-1]/2 + Mullionwidth/2
					else
						_SumRightMinPaneWidth = _SumRightMinPaneWidth + MinSashWidth[jPane] + MullionWidthArray[jPane-1]/2 + gs_frame_width
					endif
				else
					_SumRightMinPaneWidth = _SumRightMinPaneWidth + MinSashWidth[jPane] + MullionWidthArray[jPane-1]/2 + MullionWidthArray[jPane]/2
				endif
			next jPane

			if gs_repeat_modules then
				maxPaneWidth = gs_axis_distance - _SumLeftPaneWidth - _SumRightMinPaneWidth
			else
				maxPaneWidth = ac_unit_width - _SumLeftPaneWidth - _SumRightMinPaneWidth
			endif

			_VariableName = "PaneWidth_0" + STR (iPane, 1, 0)
			values _VariableName range[minPaneWidth, maxPaneWidth]
		next iPane
	endif

	values "gs_mullion_set_to_edit" validMullionID
endif

if iWindowType = WIN_MultisashVertical then
	if gs_panes_number > 1 then
		for iPane = 1 to gs_panes_number - 1
			if iPane = 1 then
				if gs_repeat_modules then
					minPaneHeight = TransomWidth/2 + TransomWidthArray[iPane]/2
				else
					minPaneHeight = gs_frame_width_lower + TransomWidthArray[iPane]/2
				endif
			else
				minPaneHeight = TransomWidthArray[iPane-1]/2 + TransomWidthArray[iPane]/2
			endif
			minPaneHeight = minPaneHeight + MinSashHeight[iPane]

			_SumLowerPaneHeight = 0
			for jPane = 1 to iPane - 1
				_SumLowerPaneHeight = _SumLowerPaneHeight + PaneHeightArray[jPane]
			next jPane

			_SumUpperMinPaneHeight = 0
			for jPane = iPane + 1 to gs_panes_number
				if jPane = gs_panes_number then
					if gs_repeat_modules then
						_SumUpperMinPaneHeight = _SumUpperMinPaneHeight + MinSashHeight[jPane] + TransomWidthArray[jPane-1]/2 + TransomWidth/2
					else
						_SumUpperMinPaneHeight = _SumUpperMinPaneHeight + MinSashHeight[jPane] + TransomWidthArray[jPane-1]/2 + gs_frame_width_upper
					endif
				else
					_SumUpperMinPaneHeight = _SumUpperMinPaneHeight + MinSashHeight[jPane] + TransomWidthArray[jPane-1]/2 + TransomWidthArray[jPane]/2
				endif
			next jPane

			if gs_repeat_modules then
				maxPaneHeight = gs_axis_distance - _SumLowerPaneHeight - _SumUpperMinPaneHeight
			else
				maxPaneHeight = ac_unit_height - _SumLowerPaneHeight - _SumUpperMinPaneHeight
			endif

			_VariableName = "PaneHeight_0" + STR (iPane, 1, 0)
			values _VariableName range[minPaneHeight, maxPaneHeight]
		next iPane
	endif

	values "gs_pane_set_to_edit" validPaneID
	values "gs_transom_set_to_edit" validTransomID
endif


! =============================================================================
! Sash
! =============================================================================

if bSkylight then
	values "gs_opening_dir"		stOpeningDir
endif

if	iWindowClass = WINCLASS_SINGLE_HUNG |\
	iWindowClass = WINCLASS_DOUBLE_HUNG |\
	iWindowClass = WINCLASS_HORIZONTAL_SLIDING then
	parameters gs_sash_thk = gs_frame_thk/2
	lock "gs_sash_thk"
endif


! =============================================================================
! Sash Options
! =============================================================================

if iWindowClass = WINCLASS_MULTISASH then
	if gs_sash_uniform then
		for i = 1 to gs_panes_number
			if CasementIDArray[1][i] = 2 then
				lock "vgn_02", "hgn_02", "vgn2_02", "hgn2_02"
				hideparameter "vgn_02", "hgn_02", "vgn2_02", "hgn2_02"
			endif
			if CasementIDArray[1][i] = 3 then
				lock "vgn_03", "hgn_03", "vgn2_03", "hgn2_03"
				hideparameter "vgn_03", "hgn_03", "vgn2_03", "hgn2_03"
			endif
			if CasementIDArray[1][i] = 4 then
				lock "vgn_04", "hgn_04", "vgn2_04", "hgn2_04"
				hideparameter "vgn_04", "hgn_04", "vgn2_04", "hgn2_04"
			endif
			if CasementIDArray[1][i] = 5 then
				lock "vgn_05", "hgn_05", "vgn2_05", "hgn2_05"
				hideparameter "vgn_05", "hgn_05", "vgn2_05", "hgn2_05"
			endif
			if CasementIDArray[1][i] = 6 then
				lock "vgn_06", "hgn_06", "vgn2_06", "hgn2_06"
				hideparameter "vgn_06", "hgn_06", "vgn2_06", "hgn2_06"
			endif
			if CasementIDArray[1][i] = 7 then
				lock "vgn_07", "hgn_07", "vgn2_07", "hgn2_07"
				hideparameter "vgn_07", "hgn_07", "vgn2_07", "hgn2_07"
			endif
			if CasementIDArray[1][i] = 8 then
				lock "vgn_08", "hgn_08", "vgn2_08", "hgn2_08"
				hideparameter "vgn_08", "hgn_08", "vgn2_08", "hgn2_08"
			endif
			if CasementIDArray[1][i] = 9 then
				lock "vgn_09", "hgn_09", "vgn2_09", "hgn2_09"
				hideparameter "vgn_09", "hgn_09", "vgn2_09", "hgn2_09"
			endif
			if CasementIDArray[1][i] = 10 then
				lock "vgn_10", "hgn_10", "vgn2_10", "hgn2_10"
				hideparameter "vgn_10", "hgn_10", "vgn2_10", "hgn2_10"
			endif
		next i
	endif

	dim sashMullionResetArray[1][]
	for i = 1 to 10
		sashMullionResetArray[1][i]	= 0
	next i
	if GLOB_MODPAR_NAME <> "" then
		! Not in case of multiple selection
		if	(iWindowType = WIN_MultisashHorizontal & (GLOB_MODPAR_NAME = "B" | (GLOB_MODPAR_NAME = "A" & not(gs_repeat_modules & gs_axis_lock)))) | \
			(iWindowType = WIN_MultisashVertical & (GLOB_MODPAR_NAME = "A" | (GLOB_MODPAR_NAME = "B" &  not(gs_repeat_modules & gs_axis_lock)))) | \
			(gs_repeat_modules & GLOB_MODPAR_NAME = "gs_axis_distance") | \
			(gs_sash_uniform & (GLOB_MODPAR_NAME = "gs_sash_uniform" | GLOB_MODPAR_NAME = "MullionStyle_00" | GLOB_MODPAR_NAME = "iMullionStyle_00")) | \
			(not(gs_unit_nominal) & (GLOB_MODPAR_NAME = "gs_tolerance_left" | GLOB_MODPAR_NAME = "gs_tolerance_right" | GLOB_MODPAR_NAME = "gs_tolerance_upper" | GLOB_MODPAR_NAME = "gs_tolerance_lower")) |\
			GLOB_MODPAR_NAME = "bVentilationProfile"		|\
			GLOB_MODPAR_NAME = "iVentilationProfileType"	|\
			(GLOB_MODPAR_NAME = "VentilationProfileHeight" & bVentilationProfile & (iVentilationProfileType = VENTPROFILE_OVER_FRAME)) then
			! Reset all sashes
			for i = 1 to gs_panes_number
				sashMullionResetArray[1][i]	= 1
			next i
		else
			! Reset specific sashes
			if iWindowType = WIN_MultisashHorizontal then
				if GLOB_MODPAR_NAME = "PaneWidth_01" then
					sashMullionResetArray[1][1] = 1
					sashMullionResetArray[1][gs_panes_number] = 1
				endif
				if GLOB_MODPAR_NAME = "PaneWidth_02" then
					sashMullionResetArray[1][2] = 1
					sashMullionResetArray[1][gs_panes_number] = 1
				endif
				if GLOB_MODPAR_NAME = "PaneWidth_03" then
					sashMullionResetArray[1][3] = 1
					sashMullionResetArray[1][gs_panes_number] = 1
				endif
				if GLOB_MODPAR_NAME = "PaneWidth_04" then
					sashMullionResetArray[1][4] = 1
					sashMullionResetArray[1][gs_panes_number] = 1
				endif
				if GLOB_MODPAR_NAME = "PaneWidth_05" then
					sashMullionResetArray[1][5] = 1
					sashMullionResetArray[1][gs_panes_number] = 1
				endif
				if GLOB_MODPAR_NAME = "PaneWidth_06" then
					sashMullionResetArray[1][6] = 1
					sashMullionResetArray[1][gs_panes_number] = 1
				endif
				if GLOB_MODPAR_NAME = "PaneWidth_07" then
					sashMullionResetArray[1][7] = 1
					sashMullionResetArray[1][gs_panes_number] = 1
				endif
				if GLOB_MODPAR_NAME = "PaneWidth_08" then
					sashMullionResetArray[1][8] = 1
					sashMullionResetArray[1][gs_panes_number] = 1
				endif
				if GLOB_MODPAR_NAME = "PaneWidth_09" then
					sashMullionResetArray[1][9] = 1
					sashMullionResetArray[1][gs_panes_number] = 1
				endif
			endif

			if iWindowType = WIN_MultisashVertical then
				if GLOB_MODPAR_NAME = "PaneHeight_01" then
					sashMullionResetArray[1][1] = 1
					sashMullionResetArray[1][gs_panes_number] = 1
				endif
				if GLOB_MODPAR_NAME = "PaneHeight_02" then
					sashMullionResetArray[1][2] = 1
					sashMullionResetArray[1][gs_panes_number] = 1
				endif
				if GLOB_MODPAR_NAME = "PaneHeight_03" then
					sashMullionResetArray[1][3] = 1
					sashMullionResetArray[1][gs_panes_number] = 1
				endif
				if GLOB_MODPAR_NAME = "PaneHeight_04" then
					sashMullionResetArray[1][4] = 1
					sashMullionResetArray[1][gs_panes_number] = 1
				endif
				if GLOB_MODPAR_NAME = "PaneHeight_05" then
					sashMullionResetArray[1][5] = 1
					sashMullionResetArray[1][gs_panes_number] = 1
				endif
				if GLOB_MODPAR_NAME = "PaneHeight_06" then
					sashMullionResetArray[1][6] = 1
					sashMullionResetArray[1][gs_panes_number] = 1
				endif
				if GLOB_MODPAR_NAME = "PaneHeight_07" then
					sashMullionResetArray[1][7] = 1
					sashMullionResetArray[1][gs_panes_number] = 1
				endif
				if GLOB_MODPAR_NAME = "PaneHeight_08" then
					sashMullionResetArray[1][8] = 1
					sashMullionResetArray[1][gs_panes_number] = 1
				endif
				if GLOB_MODPAR_NAME = "PaneHeight_09" then
					sashMullionResetArray[1][9] = 1
					sashMullionResetArray[1][gs_panes_number] = 1
				endif
			endif
		endif
	endif
else
	if gs_sash_uniform then
		for i = 1 to 3
			for j = 1 to 3
				if (CasementIDArray[i][j] > 0) & (CasementIDArray[i][j] <> CasementLinkArray[i][j]) then
					if CasementIDArray[i][j] = 1 then
						lock "vgn_01", "hgn_01", "vgn2_01", "hgn2_01"
						hideparameter "vgn_01", "hgn_01", "vgn2_01", "hgn2_01"
					endif
					if CasementIDArray[i][j] = 2 then
						lock "vgn_02", "hgn_02", "vgn2_02", "hgn2_02"
						hideparameter "vgn_02", "hgn_02", "vgn2_02", "hgn2_02"
					endif
					if CasementIDArray[i][j] = 3 then
						lock "vgn_03", "hgn_03", "vgn2_03", "hgn2_03"
						hideparameter "vgn_03", "hgn_03", "vgn2_03", "hgn2_03"
					endif

					if CasementIDArray[i][j] = 5 then
						lock "vgn_05", "hgn_05", "vgn2_05", "hgn2_05"
						hideparameter "vgn_05", "hgn_05", "vgn2_05", "hgn2_05"
					endif
					if CasementIDArray[i][j] = 6 then
						lock "vgn_06", "hgn_06", "vgn2_06", "hgn2_06"
						hideparameter "vgn_06", "hgn_06", "vgn2_06", "hgn2_06"
					endif
					if CasementIDArray[i][j] = 7 then
						lock "vgn_07", "hgn_07", "vgn2_07", "hgn2_07"
						hideparameter "vgn_07", "hgn_07", "vgn2_07", "hgn2_07"
					endif

					if CasementIDArray[i][j] = 9 then
						lock "vgn_09", "hgn_09", "vgn2_09", "hgn2_09"
						hideparameter "vgn_09", "hgn_09", "vgn2_09", "hgn2_09"
					endif
					if CasementIDArray[i][j] = 10 then
						lock "vgn_10", "hgn_10", "vgn2_10", "hgn2_10"
						hideparameter "vgn_10", "hgn_10", "vgn2_10", "hgn2_10"
					endif
					if CasementIDArray[i][j] = 11 then
						lock "vgn_11", "hgn_11", "vgn2_11", "hgn2_11"
						hideparameter "vgn_11", "hgn_11", "vgn2_11", "hgn2_11"
					endif
				endif
			next j
		next i
	endif

	dim sashMullionResetArray[3][3]
	for i=1 to 3
		for j=1 to 3
			sashMullionResetArray[i][j]	= 0
		next j
	next i
	if GLOB_MODPAR_NAME <> "" then
		! Not in case of multiple selection
		if	GLOB_MODPAR_NAME = "A" | \
			GLOB_MODPAR_NAME = "B" | \
			(gs_sash_uniform & (GLOB_MODPAR_NAME = "gs_sash_uniform" | GLOB_MODPAR_NAME = "MullionStyle_00" | GLOB_MODPAR_NAME = "iMullionStyle_00")) | \
			(not(gs_unit_nominal) & (GLOB_MODPAR_NAME = "gs_tolerance_left" | GLOB_MODPAR_NAME = "gs_tolerance_right" | GLOB_MODPAR_NAME = "gs_tolerance_upper" | GLOB_MODPAR_NAME = "gs_tolerance_lower"))	|\
			GLOB_MODPAR_NAME = "bVentilationProfile"		|\
			GLOB_MODPAR_NAME = "iVentilationProfileType"	|\
			(GLOB_MODPAR_NAME = "VentilationProfileHeight" & bVentilationProfile & (iVentilationProfileType = VENTPROFILE_OVER_FRAME)) then
			! Reset all sashes
			for i=1 to 3
				for j=1 to 3
					sashMullionResetArray[i][j]	= 1
				next j
			next i
		else
			! Reset specific sashes
			bColumnReset1 = 0
			bColumnReset2 = 0
			bColumnReset3 = 0
			if iWindowType = WIN_W3 then
				if GLOB_MODPAR_NAME = "gs_SLight_w" then
					bColumnReset1 = 1
					if gs_iPanesConfig = PANESCONFIG_SYMM then
						bColumnReset2 = 1
					endif
					bColumnReset3 = 1
				endif
				if GLOB_MODPAR_NAME = "gs_MidPane_w" then
					bColumnReset1 = 1
					bColumnReset2 = 1
				endif
			endif

			if gs_bLeftSLight & gs_UTrans & gs_LeftMullion_Top then
				if GLOB_MODPAR_NAME = "gs_UTrans" | GLOB_MODPAR_NAME = "gs_UTrans_h" | bColumnReset1 | bColumnReset2 then
					sashMullionResetArray[1][1]	= 1
					sashMullionResetArray[1][2]	= 1
				endif
			endif
			if gs_bSLight & gs_UTrans & gs_Mullion_Top then
				if GLOB_MODPAR_NAME = "gs_UTrans" | GLOB_MODPAR_NAME = "gs_UTrans_h" | bColumnReset2 | bColumnReset3 then
					sashMullionResetArray[1][2]	= 1
					sashMullionResetArray[1][3]	= 1
				endif
			endif

			if gs_bLeftSLight & gs_UTrans & gs_UTransom_toLeft then
				if GLOB_MODPAR_NAME = "gs_UTrans" | GLOB_MODPAR_NAME = "gs_UTrans_h" | bColumnReset1 then
					sashMullionResetArray[1][1]	= 1
					sashMullionResetArray[2][1]	= 1
				endif
			endif
			if gs_UTrans & gs_UTransom_Middle then
				if GLOB_MODPAR_NAME = "gs_UTrans" | GLOB_MODPAR_NAME = "gs_UTrans_h" | bColumnReset2 then
					sashMullionResetArray[1][2]	= 1
					sashMullionResetArray[2][2]	= 1
				endif
			endif
			if gs_bSLight & gs_UTrans & gs_UTransom_toRight then
				if GLOB_MODPAR_NAME = "gs_UTrans" | GLOB_MODPAR_NAME = "gs_UTrans_h" | bColumnReset3 then
					sashMullionResetArray[1][3]	= 1
					sashMullionResetArray[2][3]	= 1
				endif
			endif

			if gs_bLeftSLight & gs_LeftMullion_Middle then
				if GLOB_MODPAR_NAME = "gs_UTrans" | GLOB_MODPAR_NAME = "gs_UTrans_h" | GLOB_MODPAR_NAME = "gs_LTrans" | GLOB_MODPAR_NAME = "gs_LTrans_h" | bColumnReset1 | bColumnReset2 then
					sashMullionResetArray[2][1]	= 1
					sashMullionResetArray[2][2]	= 1
				endif
			endif
			if gs_bSLight & gs_RightMullion_Middle then
				if GLOB_MODPAR_NAME = "gs_UTrans" | GLOB_MODPAR_NAME = "gs_UTrans_h" | GLOB_MODPAR_NAME = "gs_LTrans" | GLOB_MODPAR_NAME = "gs_LTrans_h" | bColumnReset2 | bColumnReset3 then
					sashMullionResetArray[2][2]	= 1
					sashMullionResetArray[2][3]	= 1
				endif
			endif

			if gs_bLeftSLight & gs_LTrans & gs_LTransom_toLeft then
				if GLOB_MODPAR_NAME = "gs_LTrans" | GLOB_MODPAR_NAME = "gs_LTrans_h" | bColumnReset1 then
					sashMullionResetArray[2][1]	= 1
					sashMullionResetArray[3][1]	= 1
				endif
			endif
			if gs_LTrans & gs_LTransom_Middle then
				if GLOB_MODPAR_NAME = "gs_LTrans" | GLOB_MODPAR_NAME = "gs_LTrans_h" | bColumnReset2 then
					sashMullionResetArray[2][2]	= 1
					sashMullionResetArray[3][2]	= 1
				endif
			endif
			if gs_bSLight & gs_LTrans & gs_LTransom_toRight then
				if GLOB_MODPAR_NAME = "gs_LTrans" | GLOB_MODPAR_NAME = "gs_LTrans_h" | bColumnReset3 then
					sashMullionResetArray[2][3]	= 1
					sashMullionResetArray[3][3]	= 1
				endif
			endif

			if gs_bLeftSLight & gs_LTrans & gs_LeftMullion_Bott then
				if GLOB_MODPAR_NAME = "gs_LTrans" | GLOB_MODPAR_NAME = "gs_LTrans_h" | bColumnReset1 | bColumnReset2 then
					sashMullionResetArray[3][1]	= 1
					sashMullionResetArray[3][2]	= 1
				endif
			endif
			if gs_bSLight & gs_LTrans & gs_Mullion_Bott then
				if GLOB_MODPAR_NAME = "gs_LTrans" | GLOB_MODPAR_NAME = "gs_LTrans_h" | bColumnReset2 | bColumnReset3 then
					sashMullionResetArray[3][2]	= 1
					sashMullionResetArray[3][3]	= 1
				endif
			endif
		endif
	endif
endif

call "Casement_rectangular" parameters	iWindowClass			= iWindowClass,
										iWindowType				= iWindowType,
										CasementIDArray 		= CasementIDArray,
										CasementTypeArray		= CasementTypeArray,
										sashWidthArray			= sashWidthArray,
										sashHeightArray			= sashHeightArray,
										sashMullionResetArray	= sashMullionResetArray,
										gs_panes_number			= gs_panes_number,
										gs_repeat_modules		= gs_repeat_modules,
										gs_repeat_modules_number= gs_repeat_modules_number,
										gs_iShowSashOnSymbol	= gs_iShowSashOnSymbol,
										gs_sash_uniform			= gs_sash_uniform,
										gs_sash_width			= gs_sash_width,
										gs_rebate_width			= gs_rebate_width,
										gs_bLeftSLight			= gs_bLeftSLight,
										gs_bSLight				= gs_bSLight,
										gs_UTrans				= gs_UTrans,
										gs_LTrans				= gs_LTrans,
										gs_UTrans_Div			= gs_UTrans_Div,
										gs_LTrans_Div			= gs_LTrans_Div,
										iMullionPosition		= iMullionPosition,
										MullionStyle_00			= MullionStyle_00,
										iMullionStyle_00		= iMullionStyle_00,
										MullionStyle_01			= MullionStyle_01,
										iMullionStyle_01		= iMullionStyle_01,
										iMullionStyleOriginal_01= iMullionStyleOriginal_01,
										MullionStyle_02			= MullionStyle_02,
										iMullionStyle_02		= iMullionStyle_02,
										iMullionStyleOriginal_02= iMullionStyleOriginal_02,
										MullionStyle_03			= MullionStyle_03,
										iMullionStyle_03		= iMullionStyle_03,
										iMullionStyleOriginal_03= iMullionStyleOriginal_03,
										MullionStyle_04			= MullionStyle_04,
										iMullionStyle_04		= iMullionStyle_04,
										iMullionStyleOriginal_04= iMullionStyleOriginal_04,
										MullionStyle_05			= MullionStyle_05,
										iMullionStyle_05		= iMullionStyle_05,
										iMullionStyleOriginal_05= iMullionStyleOriginal_05,
										MullionStyle_06			= MullionStyle_06,
										iMullionStyle_06		= iMullionStyle_06,
										iMullionStyleOriginal_06= iMullionStyleOriginal_06,
										MullionStyle_07			= MullionStyle_07,
										iMullionStyle_07		= iMullionStyle_07,
										iMullionStyleOriginal_07= iMullionStyleOriginal_07,
										MullionStyle_08			= MullionStyle_08,
										iMullionStyle_08		= iMullionStyle_08,
										iMullionStyleOriginal_08= iMullionStyleOriginal_08,
										MullionStyle_09			= MullionStyle_09,
										iMullionStyle_09		= iMullionStyle_09,
										iMullionStyleOriginal_09= iMullionStyleOriginal_09,
										MullionStyle_10			= MullionStyle_10,
										iMullionStyle_10		= iMullionStyle_10,
										iMullionStyleOriginal_10= iMullionStyleOriginal_10,
										MullionStyle_11			= MullionStyle_11,
										iMullionStyle_11		= iMullionStyle_11,
										iMullionStyleOriginal_11= iMullionStyleOriginal_11,
										MullionPosition			= MullionPosition,
										gs_horiz_div_height_01	= gs_horiz_div_height_01,
										gs_horiz_div_height_02	= gs_horiz_div_height_02,
										gs_horiz_div_height_03	= gs_horiz_div_height_03,
										gs_horiz_div_height_04	= gs_horiz_div_height_04,
										gs_horiz_div_height_05	= gs_horiz_div_height_05,
										gs_horiz_div_height_06	= gs_horiz_div_height_06,
										gs_horiz_div_height_07	= gs_horiz_div_height_07,
										gs_horiz_div_height_08	= gs_horiz_div_height_08,
										gs_horiz_div_height_09	= gs_horiz_div_height_09,
										gs_horiz_div_height_10	= gs_horiz_div_height_10,
										gs_horiz_div_height_11	= gs_horiz_div_height_11,
										stFixGlassDir			= stFixGlassDir,
										FixGlassDir				= FixGlassDir,
										FixGlassDir_m			= FixGlassDir_m,
										gs_optype_01			= gs_optype_01,
										gs_optype_02			= gs_optype_02,
										gs_optype_03			= gs_optype_03,
										gs_optype_04			= gs_optype_04,
										gs_optype_05			= gs_optype_05,
										gs_optype_06			= gs_optype_06,
										gs_optype_07			= gs_optype_07,
										gs_optype_08			= gs_optype_08,
										gs_optype_09			= gs_optype_09,
										gs_optype_10			= gs_optype_10,
										gs_optype_11			= gs_optype_11,
										gs_optype_m_01			= gs_optype_m_01,
										gs_optype_m_02			= gs_optype_m_02,
										gs_optype_m_03			= gs_optype_m_03,
										gs_optype_m_04			= gs_optype_m_04,
										gs_optype_m_05			= gs_optype_m_05,
										gs_optype_m_06			= gs_optype_m_06,
										gs_optype_m_07			= gs_optype_m_07,
										gs_optype_m_08			= gs_optype_m_08,
										gs_optype_m_09			= gs_optype_m_09,
										gs_optype_m_10			= gs_optype_m_10,
										gs_optype_m_11			= gs_optype_m_11,
										bVentilationProfile				= bVentilationProfile,
										iVentilationProfileType			= iVentilationProfileType,
										VentilationProfileHeight		= VentilationProfileHeight,
										isVentilationProfileInSash_01	= isVentilationProfileInSash_01,
										isVentilationProfileInSash_02	= isVentilationProfileInSash_02,
										isVentilationProfileInSash_03	= isVentilationProfileInSash_03,
										isVentilationProfileInSash_04	= isVentilationProfileInSash_04,
										isVentilationProfileInSash_05	= isVentilationProfileInSash_05,
										isVentilationProfileInSash_06	= isVentilationProfileInSash_06,
										isVentilationProfileInSash_07	= isVentilationProfileInSash_07,
										isVentilationProfileInSash_08	= isVentilationProfileInSash_08,
										isVentilationProfileInSash_09	= isVentilationProfileInSash_09,
										isVentilationProfileInSash_10	= isVentilationProfileInSash_10,
										isVentilationProfileInSash_11	= isVentilationProfileInSash_11,
										stSashType				= stSashType,
										gw						= gw,
										ghe						= ghe,
										vgn_01					= vgn_01,
										hgn_01					= hgn_01,
										vgn_02					= vgn_02,
										hgn_02					= hgn_02,
										vgn_03					= vgn_03,
										hgn_03					= hgn_03,
										vgn_04					= vgn_04,
										hgn_04					= hgn_04,
										vgn_05					= vgn_05,
										hgn_05					= hgn_05,
										vgn_06					= vgn_06,
										hgn_06					= hgn_06,
										vgn_07					= vgn_07,
										hgn_07					= hgn_07,
										vgn_08					= vgn_08,
										hgn_08					= hgn_08,
										vgn_09					= vgn_09,
										hgn_09					= hgn_09,
										vgn_10					= vgn_10,
										hgn_10					= hgn_10,
										vgn_11					= vgn_11,
										hgn_11					= hgn_11,
										vgn2_01					= vgn2_01,
										hgn2_01					= hgn2_01,
										vgn2_02					= vgn2_02,
										hgn2_02					= hgn2_02,
										vgn2_03					= vgn2_03,
										hgn2_03					= hgn2_03,
										vgn2_04					= vgn2_04,
										hgn2_04					= hgn2_04,
										vgn2_05					= vgn2_05,
										hgn2_05					= hgn2_05,
										vgn2_06					= vgn2_06,
										hgn2_06					= hgn2_06,
										vgn2_07					= vgn2_07,
										hgn2_07					= hgn2_07,
										vgn2_08					= vgn2_08,
										hgn2_08					= hgn2_08,
										vgn2_09					= vgn2_09,
										hgn2_09					= hgn2_09,
										vgn2_10					= vgn2_10,
										hgn2_10					= hgn2_10,
										vgn2_11					= vgn2_11,
										hgn2_11					= hgn2_11,
										vergrid_01				= vergrid_01,
										horgrid_01				= horgrid_01,
										vergrid_02				= vergrid_02,
										horgrid_02				= horgrid_02,
										vergrid_03				= vergrid_03,
										horgrid_03				= horgrid_03,
										vergrid_04				= vergrid_04,
										horgrid_04				= horgrid_04,
										vergrid_05				= vergrid_05,
										horgrid_05				= horgrid_05,
										vergrid_06				= vergrid_06,
										horgrid_06				= horgrid_06,
										vergrid_07				= vergrid_07,
										horgrid_07				= horgrid_07,
										vergrid_08				= vergrid_08,
										horgrid_08				= horgrid_08,
										vergrid_09				= vergrid_09,
										horgrid_09				= horgrid_09,
										vergrid_10				= vergrid_10,
										horgrid_10				= horgrid_10,
										vergrid_11				= vergrid_11,
										horgrid_11				= horgrid_11,
										vergrid2_01				= vergrid2_01,
										horgrid2_01				= horgrid2_01,
										vergrid2_02				= vergrid2_02,
										horgrid2_02				= horgrid2_02,
										vergrid2_03				= vergrid2_03,
										horgrid2_03				= horgrid2_03,
										vergrid2_04				= vergrid2_04,
										horgrid2_04				= horgrid2_04,
										vergrid2_05				= vergrid2_05,
										horgrid2_05				= horgrid2_05,
										vergrid2_06				= vergrid2_06,
										horgrid2_06				= horgrid2_06,
										vergrid2_07				= vergrid2_07,
										horgrid2_07				= horgrid2_07,
										vergrid2_08				= vergrid2_08,
										horgrid2_08				= horgrid2_08,
										vergrid2_09				= vergrid2_09,
										horgrid2_09				= horgrid2_09,
										vergrid2_10				= vergrid2_10,
										horgrid2_10				= horgrid2_10,
										vergrid2_11				= vergrid2_11,
										horgrid2_11				= horgrid2_11,
										stMullionPosition		= stMullionPosition,
										stOpeningType			= stOpeningType,
										stLouversinFrame		= stLouversinFrame,
										openingAngle_01			= openingAngle_01,
										openingAngle_02			= openingAngle_02,
										openingAngle_03			= openingAngle_03,
										openingAngle_04			= openingAngle_04,
										openingAngle_05			= openingAngle_05,
										openingAngle_06			= openingAngle_06,
										openingAngle_07			= openingAngle_07,
										openingAngle_08			= openingAngle_08,
										openingAngle_09			= openingAngle_09,
										openingAngle_10			= openingAngle_10,
										openingAngle_11			= openingAngle_11,
										openingAngle2_01		= openingAngle2_01,
										openingAngle2_02		= openingAngle2_02,
										openingAngle2_03		= openingAngle2_03,
										openingAngle2_04		= openingAngle2_04,
										openingAngle2_05		= openingAngle2_05,
										openingAngle2_06		= openingAngle2_06,
										openingAngle2_07		= openingAngle2_07,
										openingAngle2_08		= openingAngle2_08,
										openingAngle2_09		= openingAngle2_09,
										openingAngle2_10		= openingAngle2_10,
										openingAngle2_11		= openingAngle2_11,
										gs_panel_mat			= gs_panel_mat,
										gs_panel_mat2			= gs_panel_mat2,
										LouverStyle				= LouverStyle,
										iLouverStyle			= iLouverStyle,
										gs_louver_thk			= gs_louver_thk,
										gs_louver_width			= gs_louver_width,
										gs_louver_opening_angle	= gs_louver_opening_angle,
										gs_ventSashLouver_mat	= gs_ventSashLouver_mat,
										gs_ui_current_page	= gs_ui_current_page,
								returned_parameters	bLockMullionParamsSash,
													bLockGlassParamsSash,
													PanelGlassArea


! ==============================================================================
! Uniform Surfaces
! ==============================================================================

dim	surfaceParNames[8]						:	dim	surfaceParameters[8]
	surfaceParNames[1]	= "gs_frame_mat"	:		surfaceParameters[1]	= gs_frame_mat
	surfaceParNames[2]	= "gs_frame_mat2"	:		surfaceParameters[2]	= gs_frame_mat2
	surfaceParNames[3]	= "gs_sash_mat"		:		surfaceParameters[3]	= gs_sash_mat
	surfaceParNames[4]	= "gs_sash_mat2"	:		surfaceParameters[4]	= gs_sash_mat2
	surfaceParNames[5]	= "gs_grill_mat"	:		surfaceParameters[5]	= gs_grill_mat
	surfaceParNames[6]	= "gs_grill_mat2"	:		surfaceParameters[6]	= gs_grill_mat2
	surfaceParNames[7]	= "gs_panel_mat"	:		surfaceParameters[7]	= gs_panel_mat
	surfaceParNames[8]	= "gs_panel_mat2"	:		surfaceParameters[8]	= gs_panel_mat2

_lastModSurfaceParameter = gs_frame_mat

if iWindowClass	<> WINCLASS_SHELL then
	if stored_material[1][1] <> -9999 then
		for i = 1 to vardim1(surfaceParNames)
			if GLOB_MODPAR_NAME = surfaceParNames[i] then
				_lastModSurfaceParameter	= surfaceParameters[i]
				stored_material[1][i]	= surfaceParameters[i]
				stored_material[2][i]	= 1
	
				for j = 1 to i-1
					stored_material[2][j]	= 0
					parameters stored_material[2][j]	= stored_material[2][j]
				next j
	
				for k = i+1 to vardim1(surfaceParNames)
					stored_material[2][k]	= 0
					parameters stored_material[2][k]	= stored_material[2][k]
				next k
			endif
	
			parameters	stored_material[1][i]	= stored_material[1][i],
						stored_material[2][i]	= stored_material[2][i]
	
			if stored_material[2][i] = 1 then
				_lastModSurfaceParameter = stored_material[1][i]
			endif
		next i
	else
		gosub "preloadSurfaces"
	endif
	
	if bLinkSurfacesFrameSash then
		parameters	gs_frame_mat	= _lastModSurfaceParameter,
					gs_frame_mat2	= _lastModSurfaceParameter,
					gs_sash_mat		= _lastModSurfaceParameter,
					gs_sash_mat2	= _lastModSurfaceParameter,
					gs_grill_mat	= _lastModSurfaceParameter,
					gs_grill_mat2	= _lastModSurfaceParameter,
					gs_panel_mat	= _lastModSurfaceParameter,
					gs_panel_mat2	= _lastModSurfaceParameter
	else
		if GLOB_MODPAR_NAME = "bLinkSurfacesFrameSash" then
			parameters	gs_frame_mat	= stored_material[1][1],
						gs_frame_mat2	= stored_material[1][2],
						gs_sash_mat		= stored_material[1][3],
						gs_sash_mat2	= stored_material[1][4],
						gs_grill_mat	= stored_material[1][5],
						gs_grill_mat2	= stored_material[1][6],
						gs_panel_mat	= stored_material[1][7],
						gs_panel_mat2	= stored_material[1][8]
		else
			gosub "preloadSurfaces"
		endif
	endif
endif

! =============================================================================
! Total Glazed Area Listing Parameters
! =============================================================================
if NOT(gs_list_glassarea_override) then
	if GLOB_MODPAR_NAME = "gs_list_glassarea" then
		gs_list_glassarea_tmp = gs_list_glassarea
		parameters gs_list_glassarea_tmp = gs_list_glassarea_tmp
	else
		gs_list_glassarea = gs_list_glassarea_tmp
		parameters gs_list_glassarea = gs_list_glassarea
	endif

	gs_list_glassarea = PanelGlassArea
	parameters gs_list_glassarea = gs_list_glassarea
	lock "gs_list_glassarea"
else
	if GLOB_MODPAR_NAME = "gs_list_glassarea" then
		gs_list_glassarea_tmp = gs_list_glassarea
		parameters gs_list_glassarea_tmp = gs_list_glassarea_tmp
	else
		gs_list_glassarea = gs_list_glassarea_tmp
		parameters gs_list_glassarea = gs_list_glassarea
	endif
endif


! =============================================================================
! Orientation
! =============================================================================

if not(bSkylight) then
	values{2} "gs_list_orientationDef_m"	0, `Автоматически`,
											1, `Специальный`

	if gs_list_orientationDef_m = 0 then
		ac_OpeningSide = ""
		if	(iWindowType = WIN_W1 |\
			 iWindowType = WIN_WDoubleSash |\
			 iWindowType = WIN_WVariable |\
			 iWindowType = WIN_W2Sidelight |\
			 ((iWindowType = WIN_MultisashHorizontal | iWindowType = WIN_MultisashVertical) &\
			  (gs_panes_number = 1) &\
			  (not(gs_repeat_modules) | (gs_repeat_modules & (gs_repeat_modules_number = 1))))) then

			if	gs_optype_m_01 = SASH_SIDE_HUNG |\
				gs_optype_m_01 = SASH_TILT_TURN |\
				gs_optype_m_01 = SASH_DOUBLE_SIDE_HUNG |\
				gs_optype_m_01 = SASH_SLIDING_HOR_M then

				if SYMB_MIRRORED then
					ac_OpeningSide = stOpeningSide[2]
				else
					ac_OpeningSide = stOpeningSide[1]
				endif
			endif
			if	gs_optype_m_01 = SASH_SIDE_HUNG_M |\
				gs_optype_m_01 = SASH_TILT_TURN_M |\
				gs_optype_m_01 = SASH_SLIDING_HOR then

				if SYMB_MIRRORED then
					ac_OpeningSide = stOpeningSide[1]
				else
					ac_OpeningSide = stOpeningSide[2]
				endif
			endif
		endif
		if iWindowType = WIN_WVariableDoubleSash then
			if	gs_optype_m_09 = SASH_SIDE_HUNG |\
				gs_optype_m_09 = SASH_TILT_TURN then

				if SYMB_MIRRORED then
					ac_OpeningSide = stOpeningSide[2]
				else
					ac_OpeningSide = stOpeningSide[1]
				endif
			endif
			if gs_optype_m_09 = SASH_TILT_TURN_M then
				if SYMB_MIRRORED then
					ac_OpeningSide = stOpeningSide[1]
				else
					ac_OpeningSide = stOpeningSide[2]
				endif
			endif
		endif
		parameters ac_OpeningSide = ac_OpeningSide

		lock "ac_OpeningSide"
		hideparameter "ac_OpeningSide"
	endif
endif


! =============================================================================
! IFC Parameters
! =============================================================================

ifc_optype = WIN_OP_USER_DEFINED

if iWindowType = WIN_W1 then
	if not(gs_UTrans | gs_LTrans) then
		ifc_optype = WIN_OP_SINGLE_PANEL
	endif

	if gs_UTrans & not(gs_LTrans) then
		ifc_optype = WIN_OP_DOUBLE_PANEL_HORIZONTAL
	endif

	if not(gs_UTrans) & gs_LTrans then
		ifc_optype = WIN_OP_DOUBLE_PANEL_HORIZONTAL
	endif

	if gs_UTrans & gs_LTrans then
		ifc_optype = WIN_OP_TRIPLE_PANEL_HORIZONTAL
	endif
endif

if	iWindowType = WIN_WDoubleHung1 |\
	iWindowType = WIN_WSingleHung1 then

	ifc_optype = WIN_OP_SINGLE_PANEL
endif

if iWindowType = WIN_W2 | iWindowType = WIN_WDoubleSash then
	if not(gs_UTrans | gs_LTrans) then
		ifc_optype = WIN_OP_DOUBLE_PANEL_VERTICAL
	endif

	if (gs_UTrans & not(gs_UTrans_Div)) & not(gs_LTrans) then
		ifc_optype = WIN_OP_TRIPLE_PANEL_TOP
	endif

	if not(gs_UTrans) & (gs_LTrans & not(gs_LTrans_Div)) then
		ifc_optype = WIN_OP_TRIPLE_PANEL_BOTTOM
	endif
endif

if iWindowType = WIN_W3 then
	if not(gs_UTrans | gs_LTrans) then
		ifc_optype = WIN_OP_TRIPLE_PANEL_VERTICAL
	endif
endif

if iWindowType = WIN_WVariable then
	if gs_bSLight then
		if not(gs_UTrans | gs_LTrans) then
			ifc_optype = WIN_OP_DOUBLE_PANEL_VERTICAL
		endif

		if gs_UTrans & not(gs_LTrans) then
			if gs_Mullion_Top then
				ifc_optype = WIN_OP_TRIPLE_PANEL_RIGHT
			else
				ifc_optype = WIN_OP_TRIPLE_PANEL_TOP
			endif
		endif

		if not(gs_UTrans) & gs_LTrans then
			if gs_Mullion_Bott then
				ifc_optype = WIN_OP_TRIPLE_PANEL_RIGHT
			else
				ifc_optype = WIN_OP_TRIPLE_PANEL_BOTTOM
			endif
		endif
	else
		if not(gs_UTrans | gs_LTrans) then
			ifc_optype = WIN_OP_SINGLE_PANEL
		endif

		if gs_UTrans & not(gs_LTrans) then
			ifc_optype = WIN_OP_DOUBLE_PANEL_HORIZONTAL
		endif

		if not(gs_UTrans) & gs_LTrans then
			ifc_optype = WIN_OP_DOUBLE_PANEL_HORIZONTAL
		endif

		if gs_UTrans & gs_LTrans then
			ifc_optype = WIN_OP_TRIPLE_PANEL_HORIZONTAL
		endif
	endif
endif

if iWindowType = WIN_WVariableDoubleSash then
	if gs_bSLight then
		if not(gs_UTrans | gs_LTrans) then
			ifc_optype = WIN_OP_TRIPLE_PANEL_VERTICAL
		endif
	else
		if not(gs_UTrans | gs_LTrans) then
			ifc_optype = WIN_OP_DOUBLE_PANEL_VERTICAL
		endif

		if gs_UTrans & not(gs_LTrans) then
			ifc_optype = WIN_OP_TRIPLE_PANEL_TOP
		endif

		if not(gs_UTrans) & gs_LTrans then
			ifc_optype = WIN_OP_TRIPLE_PANEL_BOTTOM
		endif
	endif
endif

if iWindowType = WIN_W2Sidelight then
	if not(gs_LTrans) then
		ifc_optype = WIN_OP_TRIPLE_PANEL_RIGHT
	endif
endif

if iWindowType = WIN_MultisashHorizontal then
	if gs_repeat_modules then
		if gs_panes_number = 1 then
			if gs_repeat_modules_number = 2 then
				ifc_optype = WIN_OP_DOUBLE_PANEL_VERTICAL
			endif

			if gs_repeat_modules_number = 3 then
				ifc_optype = WIN_OP_TRIPLE_PANEL_VERTICAL
			endif
		endif
	else
		if gs_panes_number = 1 then
			ifc_optype = WIN_OP_SINGLE_PANEL
		endif

		if gs_panes_number = 2 then
			ifc_optype = WIN_OP_DOUBLE_PANEL_VERTICAL
		endif

		if gs_panes_number = 3 then
			ifc_optype = WIN_OP_TRIPLE_PANEL_VERTICAL
		endif
	endif
endif

if iWindowType = WIN_MultisashVertical then
	if gs_repeat_modules then
		if gs_panes_number = 1 then
			if gs_repeat_modules_number = 2 then
				ifc_optype = WIN_OP_DOUBLE_PANEL_HORIZONTAL
			endif

			if gs_repeat_modules_number = 3 then
				ifc_optype = WIN_OP_TRIPLE_PANEL_HORIZONTAL
			endif
		endif
	else
		if gs_panes_number = 1 then
			ifc_optype = WIN_OP_SINGLE_PANEL
		endif

		if gs_panes_number = 2 then
			ifc_optype = WIN_OP_DOUBLE_PANEL_HORIZONTAL
		endif

		if gs_panes_number = 3 then
			ifc_optype = WIN_OP_TRIPLE_PANEL_HORIZONTAL
		endif
	endif
endif

parameters ifc_optype = ifc_optype

if iWindowClass	= WINCLASS_SHELL then
	ifc_LiningDepth = gs_frame_thk
else
	ifc_LiningDepth = WIDO_FRAME_THICKNESS
endif
parameters ifc_LiningDepth = ifc_LiningDepth

ifc_LiningThickness = gs_frame_width
parameters ifc_LiningThickness = ifc_LiningThickness


ifc_MullionThickness	= 0
ifc_FirstMullionOffset	= 0
ifc_SecondMullionOffset	= 0
if	ifc_optype = WIN_OP_DOUBLE_PANEL_VERTICAL |\
	ifc_optype = WIN_OP_TRIPLE_PANEL_BOTTOM |\
	ifc_optype = WIN_OP_TRIPLE_PANEL_TOP |\
	ifc_optype = WIN_OP_TRIPLE_PANEL_LEFT |\
	ifc_optype = WIN_OP_TRIPLE_PANEL_RIGHT then

	ifc_MullionThickness	= gs_frame_width
	if iWindowType = WIN_MultisashHorizontal then
		ifc_FirstMullionOffset	= PaneWidthArray[1]/ac_unit_width
	else
		ifc_FirstMullionOffset	= (ac_unit_width - gs_SLight_w)/ac_unit_width
	endif
endif
if ifc_optype = WIN_OP_TRIPLE_PANEL_VERTICAL then
	ifc_MullionThickness	= gs_frame_width
	if iWindowType = WIN_MultisashHorizontal then
		ifc_FirstMullionOffset	= PaneWidthArray[1]/ac_unit_width
		if gs_repeat_modules then
			ifc_SecondMullionOffset	= (PaneWidthArray[1] + PaneWidthArray[1])/ac_unit_width
		else
			ifc_SecondMullionOffset	= (PaneWidthArray[1] + PaneWidthArray[2])/ac_unit_width
		endif
	else
		ifc_FirstMullionOffset	= (ac_unit_width - gs_SLight_w - gs_MidPane_w)/ac_unit_width
		ifc_SecondMullionOffset	= (ac_unit_width - gs_SLight_w)/ac_unit_width
	endif
endif
parameters	ifc_MullionThickness	= ifc_MullionThickness,
			ifc_FirstMullionOffset	= ifc_FirstMullionOffset,
			ifc_SecondMullionOffset	= ifc_SecondMullionOffset


ifc_TransomThickness	= 0
ifc_FirstTransomOffset	= 0
ifc_SecondTransomOffset	= 0
if	ifc_optype = WIN_OP_DOUBLE_PANEL_HORIZONTAL |\
	ifc_optype = WIN_OP_TRIPLE_PANEL_BOTTOM |\
	ifc_optype = WIN_OP_TRIPLE_PANEL_TOP |\
	ifc_optype = WIN_OP_TRIPLE_PANEL_LEFT |\
	ifc_optype = WIN_OP_TRIPLE_PANEL_RIGHT then

	ifc_TransomThickness = gs_frame_width
	if iWindowType = WIN_MultisashVertical then
		ifc_FirstTransomOffset = PaneHeightArray[1]/ac_unit_height
	else
		if gs_UTrans then
			ifc_FirstTransomOffset = gs_UTrans_h/ac_unit_height
		else
			ifc_FirstTransomOffset = gs_LTrans_h/ac_unit_height
		endif
	endif
endif
if ifc_optype = WIN_OP_TRIPLE_PANEL_HORIZONTAL then
	ifc_TransomThickness	= gs_frame_width
	if iWindowType = WIN_MultisashVertical then
		ifc_FirstTransomOffset	= PaneHeightArray[1]/ac_unit_height
		if gs_repeat_modules then
			ifc_SecondTransomOffset	= (PaneHeightArray[1] + PaneHeightArray[1])/ac_unit_height
		else
			ifc_SecondTransomOffset	= (PaneHeightArray[1] + PaneHeightArray[2])/ac_unit_height
		endif
	else
		ifc_FirstTransomOffset	= gs_LTrans_h/ac_unit_height
		ifc_SecondTransomOffset	= gs_UTrans_h/ac_unit_height
	endif
endif
parameters	ifc_TransomThickness	= ifc_TransomThickness,
			ifc_FirstTransomOffset	= ifc_FirstTransomOffset,
			ifc_SecondTransomOffset	= ifc_SecondTransomOffset

dim ifc_WindowPanel[][4]
	ifc_WindowPanel[1][1] = 0
	ifc_WindowPanel[1][2] = 0
	ifc_WindowPanel[1][3] = 0		! NOTDEFINED
	ifc_WindowPanel[1][4] = 0		! NOTDEFINED

if not(ifc_optype = WIN_OP_NOT_DEFINED | ifc_optype = WIN_OP_USER_DEFINED) then

	bIFCParametersDone = 0

	if ifc_optype = WIN_OP_SINGLE_PANEL & not(bIFCParametersDone) then
		if iWindowClass = WINCLASS_MULTISASH then
			CasementID	= CasementIDArray[1][1]
		else
			CasementID	= CasementIDArray[2][2]
		endif
		optypeID	= optypeIDArray[CasementID]
		gosub "two sash"

		if bTwoSash then
			if (optypeID = SASH_SLIDING_VER			|\
				optypeID = SASH_DOUBLE_SLIDING_VER	)	then

				ifc_optype = WIN_OP_DOUBLE_PANEL_HORIZONTAL
			else
				ifc_optype = WIN_OP_DOUBLE_PANEL_VERTICAL
			endif
			parameters ifc_optype = ifc_optype

			ifc_WindowPanel[1][1] = gs_sash_thk
			ifc_WindowPanel[1][2] = gs_sash_width

			ifc_WindowPanel[2][1] = gs_sash_thk
			ifc_WindowPanel[2][2] = gs_sash_width

			if	optypeID = SASH_SLIDING_VER			|\
				optypeID = SASH_DOUBLE_SLIDING_VER	then

				ifc_WindowPanel[1][4] = 5	! TOP
				ifc_WindowPanel[2][4] = 4	! BOTTOM

				ifc_FirstTransomOffset = 0.5
				parameters ifc_FirstTransomOffset = ifc_FirstTransomOffset
			else
				ifc_WindowPanel[1][4] = 1	! LEFT
				ifc_WindowPanel[2][4] = 3	! RIGHT

				ifc_FirstMullionOffset = 0.5
				parameters ifc_FirstMullionOffset = ifc_FirstMullionOffset
			endif

			_sashMullionThickness = 0
			_sashTransomThickness = 0

			if optypeID = SASH_DOUBLE_SIDE_HUNG	then
				ifc_WindowPanel[1][3] = 1	! SIDEHUNGRIGHTHAND
				ifc_WindowPanel[2][3] = 2	! SIDEHUNGLEFTHAND
				_sashMullionThickness = 2 * gs_sash_width
			endif
			if optypeID = SASH_SLIDING_HOR then
				ifc_WindowPanel[1][3] = 12	! FIXEDCASEMENT
				ifc_WindowPanel[2][3] = 9	! SLIDINGHORIZONTAL
				_sashMullionThickness = gs_sash_width
			endif
			if optypeID = SASH_SLIDING_HOR_M then
				ifc_WindowPanel[1][3] = 9	! SLIDINGHORIZONTAL
				ifc_WindowPanel[2][3] = 12	! FIXEDCASEMENT
				_sashMullionThickness = gs_sash_width
			endif
			if	optypeID = SASH_DOUBLE_SLIDING_HOR		|\
				optypeID = SASH_DOUBLE_SLIDING_HOR_M	then

				ifc_WindowPanel[1][3] = 9	! SLIDINGHORIZONTAL
				ifc_WindowPanel[2][3] = 9	! SLIDINGHORIZONTAL
				_sashMullionThickness = gs_sash_width
			endif
			if optypeID = SASH_SLIDING_VER then
				ifc_WindowPanel[1][3] = 12	! FIXEDCASEMENT
				ifc_WindowPanel[2][3] = 10	! SLIDINGVERTICAL
				_sashTransomThickness = gs_sash_width
			endif
			if optypeID = SASH_DOUBLE_SLIDING_VER then
				ifc_WindowPanel[1][3] = 10	! SLIDINGVERTICAL
				ifc_WindowPanel[2][3] = 10	! SLIDINGVERTICAL
				_sashTransomThickness = gs_sash_width
			endif

			if ifc_MullionThickness < EPS then
				ifc_MullionThickness = _sashMullionThickness
				parameters ifc_MullionThickness = ifc_MullionThickness
			endif
			if ifc_TransomThickness < EPS then
				ifc_TransomThickness = _sashTransomThickness
				parameters ifc_TransomThickness = ifc_TransomThickness
			endif
		else
			gosub "paneloperation"
			ifc_WindowPanel[1][1] = gs_sash_thk * (optypeID <> SASH_FIXED)
			ifc_WindowPanel[1][2] = gs_sash_width * (optypeID <> SASH_FIXED)
			ifc_WindowPanel[1][3] = panelOperationID
			ifc_WindowPanel[1][4] = 2	! MIDDLE
		endif

		bIFCParametersDone = 1
	endif

	if ifc_optype = WIN_OP_DOUBLE_PANEL_VERTICAL & not(bIFCParametersDone) then
		if iWindowClass = WINCLASS_MULTISASH then
			CasementID	= CasementIDArray[1][1]
		else
			CasementID	= CasementIDArray[2][2]
		endif
		optypeID		= optypeIDArray[CasementID]
		optypeID_Left	= optypeID
		gosub "two sash"
		bTwoSash_Left =	bTwoSash

		if iWindowClass = WINCLASS_MULTISASH then
			if gs_repeat_modules then
				CasementID	= CasementIDArray[1][1]
			else
				CasementID	= CasementIDArray[1][2]
			endif
		else
			CasementID	= CasementIDArray[2][3]
		endif
		optypeID		= optypeIDArray[CasementID]
		optypeID_Right	= optypeID
		gosub "two sash"
		bTwoSash_Right = bTwoSash

		if bTwoSash_Left exor bTwoSash_Right then
			if bTwoSash_Left then
				optypeID = optypeID_Left
			else
				optypeID = optypeID_Right
			endif

			bPanelVertical = (optypeID = SASH_SLIDING_VER		|\
							  optypeID = SASH_DOUBLE_SLIDING_VER)

			ifc_WindowPanel[1][1] = gs_sash_thk
			ifc_WindowPanel[1][2] = gs_sash_width

			ifc_WindowPanel[2][1] = gs_sash_thk
			ifc_WindowPanel[2][2] = gs_sash_width

			if bPanelVertical then
				ifc_FirstTransomOffset = 0.5
				parameters ifc_FirstTransomOffset = ifc_FirstTransomOffset

				ifc_WindowPanel[1][4] = 5	! TOP
				ifc_WindowPanel[2][4] = 4	! BOTTOM
			else
				if bTwoSash_Left then
					ifc_FirstMullionOffset	= ((ac_unit_width - gs_SLight_w - gs_Mullion_w/2+gs_frame_width_left)/2)/ac_unit_width
					ifc_SecondMullionOffset	= (ac_unit_width - gs_SLight_w)/ac_unit_width
				else
					ifc_FirstMullionOffset	= (ac_unit_width - gs_SLight_w)/ac_unit_width
					ifc_SecondMullionOffset	= ((ac_unit_width - gs_SLight_w) + (gs_SLight_w + gs_Mullion_w/2-gs_frame_width)/2)/ac_unit_width
				endif
				parameters	ifc_FirstMullionOffset	= ifc_FirstMullionOffset,
							ifc_SecondMullionOffset	= ifc_SecondMullionOffset

				ifc_WindowPanel[1][4] = 2	! MIDDLE
				if bTwoSash_Left then
					ifc_WindowPanel[2][4] = 1	! LEFT
				else
					ifc_WindowPanel[2][4] = 3	! RIGHT
				endif
			endif

			_sashTransomThickness = 0

			if optypeID = SASH_DOUBLE_SIDE_HUNG	then
				ifc_WindowPanel[1][3] = 1	! SIDEHUNGRIGHTHAND
				ifc_WindowPanel[2][3] = 2	! SIDEHUNGLEFTHAND
			endif
			if optypeID = SASH_SLIDING_HOR then
				ifc_WindowPanel[1][3] = 12	! FIXEDCASEMENT
				ifc_WindowPanel[2][3] = 9	! SLIDINGHORIZONTAL
			endif
			if optypeID = SASH_SLIDING_HOR_M then
				ifc_WindowPanel[1][3] = 9	! SLIDINGHORIZONTAL
				ifc_WindowPanel[2][3] = 12	! FIXEDCASEMENT
			endif
			if	optypeID = SASH_DOUBLE_SLIDING_HOR		|\
				optypeID = SASH_DOUBLE_SLIDING_HOR_M	then

				ifc_WindowPanel[1][3] = 9	! SLIDINGHORIZONTAL
				ifc_WindowPanel[2][3] = 9	! SLIDINGHORIZONTAL
			endif
			if optypeID = SASH_SLIDING_VER then
				ifc_WindowPanel[1][3] = 12	! FIXEDCASEMENT
				ifc_WindowPanel[2][3] = 10	! SLIDINGVERTICAL
				_sashTransomThickness = gs_sash_width
			endif
			if optypeID = SASH_DOUBLE_SLIDING_VER then
				ifc_WindowPanel[1][3] = 10	! SLIDINGVERTICAL
				ifc_WindowPanel[2][3] = 10	! SLIDINGVERTICAL
				_sashTransomThickness = gs_sash_width
			endif

			if ifc_TransomThickness < EPS then
				ifc_TransomThickness = _sashTransomThickness
				parameters ifc_TransomThickness = ifc_TransomThickness
			endif

			if bTwoSash_Left then
				if bPanelVertical then
					ifc_optype = WIN_OP_TRIPLE_PANEL_RIGHT
				else
					ifc_optype = WIN_OP_TRIPLE_PANEL_VERTICAL
				endif
				parameters ifc_optype = ifc_optype

				if iWindowClass = WINCLASS_MULTISASH then
					if gs_repeat_modules then
						CasementID	= CasementIDArray[1][1]
					else
						CasementID	= CasementIDArray[1][2]
					endif
				else
					CasementID	= CasementIDArray[2][3]
				endif
				optypeID	= optypeIDArray[CasementID]
				gosub "paneloperation"
				ifc_WindowPanel[3][1] = gs_sash_thk * (optypeID <> SASH_FIXED)
				ifc_WindowPanel[3][2] = gs_sash_width * (optypeID <> SASH_FIXED)
				ifc_WindowPanel[3][3] = panelOperationID
				ifc_WindowPanel[3][4] = 3	! RIGHT
			else
				if bPanelVertical then
					ifc_optype = WIN_OP_TRIPLE_PANEL_LEFT
				else
					ifc_optype = WIN_OP_TRIPLE_PANEL_VERTICAL
				endif
				parameters ifc_optype = ifc_optype

				if iWindowClass = WINCLASS_MULTISASH then
					CasementID	= CasementIDArray[1][1]
				else
					CasementID	= CasementIDArray[2][2]
				endif
				optypeID	= optypeIDArray[CasementID]
				gosub "paneloperation"
				ifc_WindowPanel[3][1] = gs_sash_thk * (optypeID <> SASH_FIXED)
				ifc_WindowPanel[3][2] = gs_sash_width * (optypeID <> SASH_FIXED)
				ifc_WindowPanel[3][3] = panelOperationID
				ifc_WindowPanel[3][4] = 1	! LEFT
			endif
		else
			if not(bTwoSash_Left | bTwoSash_Right) then
				if iWindowClass = WINCLASS_MULTISASH then
					CasementID	= CasementIDArray[1][1]
				else
					CasementID	= CasementIDArray[2][2]
				endif
				optypeID	= optypeIDArray[CasementID]
				if iWindowType = WIN_WDoubleSash then
					panelOperationID = 1	! SIDEHUNGRIGHTHAND
					if optypeID = SASH_TILT_TURN_M	then panelOperationID = 3	! TILTANDTURNRIGHTHAND
				else
					gosub "paneloperation"
				endif
				ifc_WindowPanel[1][1] = gs_sash_thk * (optypeID <> SASH_FIXED)
				ifc_WindowPanel[1][2] = gs_sash_width * (optypeID <> SASH_FIXED)
				ifc_WindowPanel[1][3] = panelOperationID
				ifc_WindowPanel[1][4] = 1	! LEFT

				if iWindowType = WIN_WDoubleSash then
					panelOperationID = 2	! SIDEHUNGLEFTHAND
					if optypeID = SASH_TILT_TURN then panelOperationID = 4	! TILTANDTURNLEFTHAND
				else
					if iWindowClass = WINCLASS_MULTISASH then
						if gs_repeat_modules then
							CasementID	= CasementIDArray[1][1]
						else
							CasementID	= CasementIDArray[1][2]
						endif
					else
						CasementID	= CasementIDArray[2][3]
					endif
					optypeID	= optypeIDArray[CasementID]
					gosub "paneloperation"
				endif
				ifc_WindowPanel[2][1] = gs_sash_thk * (optypeID <> SASH_FIXED)
				ifc_WindowPanel[2][2] = gs_sash_width * (optypeID <> SASH_FIXED)
				ifc_WindowPanel[2][3] = panelOperationID
				ifc_WindowPanel[2][4] = 3	! RIGHT
			else
				ifc_optype = WIN_OP_USER_DEFINED
				parameters ifc_optype = ifc_optype
			endif
		endif

		bIFCParametersDone = 1
	endif

	if ifc_optype = WIN_OP_DOUBLE_PANEL_HORIZONTAL & not(bIFCParametersDone) then
		TwoSashOptypeID = 0
		if gs_UTrans then
			CasementID	= CasementIDArray[1][2]
			optypeID	= optypeIDArray[CasementID]
			bTwoSash_Top =	(optypeID = SASH_DOUBLE_SIDE_HUNG		|\
							 optypeID = SASH_SLIDING_HOR			|\
							 optypeID = SASH_SLIDING_HOR_M			|\
							 optypeID = SASH_DOUBLE_SLIDING_HOR		|\
							 optypeID = SASH_DOUBLE_SLIDING_HOR_M	|\
							 optypeID = SASH_SLIDING_VER			|\
							 optypeID = SASH_DOUBLE_SLIDING_VER		)
			if bTwoSash_Top then TwoSashOptypeID = optypeID

			CasementID	= CasementIDArray[2][2]
			optypeID	= optypeIDArray[CasementID]
			bTwoSash_Bottom =  (optypeID = SASH_DOUBLE_SIDE_HUNG	|\
								optypeID = SASH_SLIDING_HOR			|\
								optypeID = SASH_SLIDING_HOR_M		|\
								optypeID = SASH_DOUBLE_SLIDING_HOR	|\
								optypeID = SASH_DOUBLE_SLIDING_HOR_M|\
								optypeID = SASH_SLIDING_VER			|\
								optypeID = SASH_DOUBLE_SLIDING_VER	)
			if bTwoSash_Bottom then TwoSashOptypeID = optypeID
		else
			if iWindowClass = WINCLASS_MULTISASH then
				if gs_repeat_modules then
					CasementID	= CasementIDArray[1][1]
				else
					CasementID	= CasementIDArray[1][2]
				endif
			else
				CasementID	= CasementIDArray[2][2]
			endif
			optypeID	= optypeIDArray[CasementID]
			bTwoSash_Top =	(optypeID = SASH_DOUBLE_SIDE_HUNG		|\
							 optypeID = SASH_SLIDING_HOR			|\
							 optypeID = SASH_SLIDING_HOR_M			|\
							 optypeID = SASH_DOUBLE_SLIDING_HOR		|\
							 optypeID = SASH_DOUBLE_SLIDING_HOR_M	|\
							 optypeID = SASH_SLIDING_VER			|\
							 optypeID = SASH_DOUBLE_SLIDING_VER		)
			if bTwoSash_Top then TwoSashOptypeID = optypeID

			if iWindowClass = WINCLASS_MULTISASH then
				CasementID	= CasementIDArray[1][1]
			else
				CasementID	= CasementIDArray[3][2]
			endif
			optypeID	= optypeIDArray[CasementID]
			bTwoSash_Bottom =  (optypeID = SASH_DOUBLE_SIDE_HUNG	|\
								optypeID = SASH_SLIDING_HOR			|\
								optypeID = SASH_SLIDING_HOR_M		|\
								optypeID = SASH_DOUBLE_SLIDING_HOR	|\
								optypeID = SASH_DOUBLE_SLIDING_HOR_M|\
								optypeID = SASH_SLIDING_VER			|\
								optypeID = SASH_DOUBLE_SLIDING_VER	)
			if bTwoSash_Bottom then TwoSashOptypeID = optypeID
		endif

		if bTwoSash_Top exor bTwoSash_Bottom then
			if	(TwoSashOptypeID = SASH_SLIDING_VER	|\
				 TwoSashOptypeID = SASH_DOUBLE_SLIDING_VER	) then

				ifc_optype = WIN_OP_TRIPLE_PANEL_HORIZONTAL
				parameters ifc_optype = ifc_optype

				if bTwoSash_Top then
					ifc_WindowPanel[1][1] = gs_sash_thk
					ifc_WindowPanel[1][2] = gs_sash_width
					ifc_WindowPanel[1][4] = 5	! TOP

					ifc_WindowPanel[2][1] = gs_sash_thk
					ifc_WindowPanel[2][2] = gs_sash_width
					ifc_WindowPanel[2][4] = 2	! MIDDLE

					if TwoSashOptypeID = SASH_SLIDING_VER then
						ifc_WindowPanel[1][3] = 12	! FIXEDCASEMENT
						ifc_WindowPanel[2][3] = 10	! SLIDINGVERTICAL
					endif

					if TwoSashOptypeID = SASH_DOUBLE_SLIDING_VER then
						ifc_WindowPanel[1][3] = 10	! SLIDINGVERTICAL
						ifc_WindowPanel[2][3] = 10	! SLIDINGVERTICAL
					endif

					if gs_UTrans then
						ifc_FirstTransomOffset	= gs_UTrans_h/ac_unit_height
						ifc_SecondTransomOffset	= (ac_unit_height/2+(gs_UTrans_h + gs_UTrans_w/2-gs_frame_width_upper)/2)/ac_unit_height

						CasementID	= CasementIDArray[2][2]
						optypeID	= optypeIDArray[CasementID]
					else
						ifc_FirstTransomOffset	= gs_LTrans_h/ac_unit_height
						ifc_SecondTransomOffset	= (ac_unit_height/2+(gs_LTrans_h + gs_LTrans_w/2-gs_frame_width_upper)/2)/ac_unit_height

						if iWindowClass = WINCLASS_MULTISASH then
							CasementID	= CasementIDArray[1][1]
						else
							CasementID	= CasementIDArray[3][2]
						endif
						optypeID	= optypeIDArray[CasementID]
					endif
					gosub "paneloperation"
					ifc_WindowPanel[3][1] = gs_sash_thk * (optypeID <> SASH_FIXED)
					ifc_WindowPanel[3][2] = gs_sash_width * (optypeID <> SASH_FIXED)
					ifc_WindowPanel[3][3] = panelOperationID
					ifc_WindowPanel[3][4] = 4	! BOTTOM
				else
					ifc_WindowPanel[2][1] = gs_sash_thk
					ifc_WindowPanel[2][2] = gs_sash_width
					ifc_WindowPanel[2][4] = 2	! MIDDLE

					ifc_WindowPanel[3][1] = gs_sash_thk
					ifc_WindowPanel[3][2] = gs_sash_width
					ifc_WindowPanel[3][4] = 4	! BOTTOM

					if TwoSashOptypeID = SASH_SLIDING_VER then
						ifc_WindowPanel[2][3] = 12	! FIXEDCASEMENT
						ifc_WindowPanel[3][3] = 10	! SLIDINGVERTICAL
					endif

					if TwoSashOptypeID = SASH_DOUBLE_SLIDING_VER then
						ifc_WindowPanel[2][3] = 10	! SLIDINGVERTICAL
						ifc_WindowPanel[3][3] = 10	! SLIDINGVERTICAL
					endif

					if gs_UTrans then
						ifc_FirstTransomOffset	= (gs_frame_width_lower/2+(gs_UTrans_h-gs_UTrans_w/2)/2)/ac_unit_height
						ifc_SecondTransomOffset	= gs_UTrans_h/ac_unit_height

						CasementID	= CasementIDArray[1][2]
						optypeID	= optypeIDArray[CasementID]
					else
						ifc_FirstTransomOffset	= (gs_frame_width_lower/2+(gs_LTrans_h-gs_LTrans_w/2)/2)/ac_unit_height
						ifc_SecondTransomOffset	= gs_LTrans_h/ac_unit_height

						if iWindowClass = WINCLASS_MULTISASH then
							if gs_repeat_modules then
								CasementID	= CasementIDArray[1][1]
							else
								CasementID	= CasementIDArray[1][2]
							endif
						else
							CasementID	= CasementIDArray[2][2]
						endif
						optypeID	= optypeIDArray[CasementID]
					endif
					gosub "paneloperation"
					ifc_WindowPanel[1][1] = gs_sash_thk * (optypeID <> SASH_FIXED)
					ifc_WindowPanel[1][2] = gs_sash_width * (optypeID <> SASH_FIXED)
					ifc_WindowPanel[1][3] = panelOperationID
					ifc_WindowPanel[1][4] = 5	! TOP
				endif
				parameters	ifc_FirstTransomOffset	= ifc_FirstTransomOffset,
							ifc_SecondTransomOffset	= ifc_SecondTransomOffset
			else
				ifc_FirstMullionOffset = 0.5
				parameters ifc_FirstMullionOffset = ifc_FirstMullionOffset

				ifc_WindowPanel[1][1] = gs_sash_thk
				ifc_WindowPanel[1][2] = gs_sash_width
				ifc_WindowPanel[1][4] = 1	! LEFT

				ifc_WindowPanel[2][1] = gs_sash_thk
				ifc_WindowPanel[2][2] = gs_sash_width
				ifc_WindowPanel[2][4] = 3	! RIGHT

				if TwoSashOptypeID = SASH_DOUBLE_SIDE_HUNG	then
					ifc_WindowPanel[1][3] = 1	! SIDEHUNGRIGHTHAND
					ifc_WindowPanel[2][3] = 2	! SIDEHUNGLEFTHAND
					_sashMullionThickness = 2 * gs_sash_width
				endif
				if TwoSashOptypeID = SASH_SLIDING_HOR then
					ifc_WindowPanel[1][3] = 12	! FIXEDCASEMENT
					ifc_WindowPanel[2][3] = 9	! SLIDINGHORIZONTAL
					_sashMullionThickness = gs_sash_width
				endif
				if TwoSashOptypeID = SASH_SLIDING_HOR_M then
					ifc_WindowPanel[1][3] = 9	! SLIDINGHORIZONTAL
					ifc_WindowPanel[2][3] = 12	! FIXEDCASEMENT
					_sashMullionThickness = gs_sash_width
				endif
				if	TwoSashOptypeID = SASH_DOUBLE_SLIDING_HOR		|\
					TwoSashOptypeID = SASH_DOUBLE_SLIDING_HOR_M	then

					ifc_WindowPanel[1][3] = 9	! SLIDINGHORIZONTAL
					ifc_WindowPanel[2][3] = 9	! SLIDINGHORIZONTAL
					_sashMullionThickness = gs_sash_width
				endif

				if ifc_MullionThickness < EPS then
					ifc_MullionThickness = _sashMullionThickness
					parameters ifc_MullionThickness = ifc_MullionThickness
				endif

				if bTwoSash_Top then
					ifc_optype = WIN_OP_TRIPLE_PANEL_BOTTOM
					parameters ifc_optype = ifc_optype

					if gs_UTrans then
						CasementID	= CasementIDArray[2][2]
						optypeID	= optypeIDArray[CasementID]
					else
						if iWindowClass = WINCLASS_MULTISASH then
							CasementID	= CasementIDArray[1][1]
						else
							CasementID	= CasementIDArray[3][2]
						endif
						optypeID	= optypeIDArray[CasementID]
					endif
					gosub "paneloperation"
					ifc_WindowPanel[3][1] = gs_sash_thk * (optypeID <> SASH_FIXED)
					ifc_WindowPanel[3][2] = gs_sash_width * (optypeID <> SASH_FIXED)
					ifc_WindowPanel[3][3] = panelOperationID
					ifc_WindowPanel[3][4] = 4	! BOTTOM
				else
					ifc_optype = WIN_OP_TRIPLE_PANEL_TOP
					parameters ifc_optype = ifc_optype

					if gs_UTrans then
						CasementID	= CasementIDArray[1][2]
						optypeID	= optypeIDArray[CasementID]
					else
						if iWindowClass = WINCLASS_MULTISASH then
							if gs_repeat_modules then
								CasementID	= CasementIDArray[1][1]
							else
								CasementID	= CasementIDArray[1][2]
							endif
						else
							CasementID	= CasementIDArray[2][2]
						endif
						optypeID	= optypeIDArray[CasementID]
					endif
					gosub "paneloperation"
					ifc_WindowPanel[3][1] = gs_sash_thk * (optypeID <> SASH_FIXED)
					ifc_WindowPanel[3][2] = gs_sash_width * (optypeID <> SASH_FIXED)
					ifc_WindowPanel[3][3] = panelOperationID
					ifc_WindowPanel[3][4] = 5	! TOP
				endif
			endif
		else
			if not(bTwoSash_Top | bTwoSash_Bottom) then
				if gs_UTrans then
					CasementID	= CasementIDArray[1][2]
					optypeID	= optypeIDArray[CasementID]
					gosub "paneloperation"
					ifc_WindowPanel[1][1] = gs_sash_thk * (optypeID <> SASH_FIXED)
					ifc_WindowPanel[1][2] = gs_sash_width * (optypeID <> SASH_FIXED)
					ifc_WindowPanel[1][3] = panelOperationID
					ifc_WindowPanel[1][4] = 5	! TOP

					CasementID	= CasementIDArray[2][2]
					optypeID	= optypeIDArray[CasementID]
					gosub "paneloperation"
					ifc_WindowPanel[2][1] = gs_sash_thk * (optypeID <> SASH_FIXED)
					ifc_WindowPanel[2][2] = gs_sash_width * (optypeID <> SASH_FIXED)
					ifc_WindowPanel[2][3] = panelOperationID
					ifc_WindowPanel[2][4] = 4	! BOTTOM
				else
					if iWindowClass = WINCLASS_MULTISASH then
						if gs_repeat_modules then
							CasementID	= CasementIDArray[1][1]
						else
							CasementID	= CasementIDArray[1][2]
						endif
					else
						CasementID	= CasementIDArray[2][2]
					endif
					optypeID	= optypeIDArray[CasementID]
					gosub "paneloperation"
					ifc_WindowPanel[1][1] = gs_sash_thk * (optypeID <> SASH_FIXED)
					ifc_WindowPanel[1][2] = gs_sash_width * (optypeID <> SASH_FIXED)
					ifc_WindowPanel[1][3] = panelOperationID
					ifc_WindowPanel[1][4] = 5	! TOP

					if iWindowClass = WINCLASS_MULTISASH then
						CasementID	= CasementIDArray[1][1]
					else
						CasementID	= CasementIDArray[3][2]
					endif
					optypeID	= optypeIDArray[CasementID]
					gosub "paneloperation"
					ifc_WindowPanel[2][1] = gs_sash_thk * (optypeID <> SASH_FIXED)
					ifc_WindowPanel[2][2] = gs_sash_width * (optypeID <> SASH_FIXED)
					ifc_WindowPanel[2][3] = panelOperationID
					ifc_WindowPanel[2][4] = 4	! BOTTOM
				endif
			else
				ifc_optype = WIN_OP_USER_DEFINED
				parameters ifc_optype = ifc_optype
			endif
		endif

		bIFCParametersDone = 1
	endif

	if ifc_optype = WIN_OP_TRIPLE_PANEL_VERTICAL & not(bIFCParametersDone) then
		for i = 1 to 3
			if iWindowClass = WINCLASS_MULTISASH then
				if gs_repeat_modules then
					CasementID	= CasementIDArray[1][1]
				else
					CasementID	= CasementIDArray[1][i]
				endif
			else
				CasementID	= CasementIDArray[2][i]
			endif
			optypeID	= optypeIDArray[CasementID]
			gosub "two sash"
			if bTwoSash then i = 3
		next i

		if bTwoSash then
			ifc_optype = WIN_OP_USER_DEFINED
			parameters ifc_optype = ifc_optype
		else
			if iWindowClass = WINCLASS_MULTISASH then
				CasementID	= CasementIDArray[1][1]
			else
				CasementID	= CasementIDArray[2][1]
			endif
			optypeID	= optypeIDArray[CasementID]
			if iWindowType = WIN_WVariableDoubleSash then
				panelOperationID = 1	! SIDEHUNGRIGHTHAND
				if optypeID = SASH_TILT_TURN_M	then panelOperationID = 3	! TILTANDTURNRIGHTHAND
			else
				gosub "paneloperation"
			endif
			ifc_WindowPanel[1][1] = gs_sash_thk * (optypeID <> SASH_FIXED)
			ifc_WindowPanel[1][2] = gs_sash_width * (optypeID <> SASH_FIXED)
			ifc_WindowPanel[1][3] = panelOperationID
			ifc_WindowPanel[1][4] = 1	! LEFT

			if iWindowType = WIN_WVariableDoubleSash then
				panelOperationID = 2	! SIDEHUNGLEFTHAND
				if optypeID = SASH_TILT_TURN then panelOperationID = 4	! TILTANDTURNLEFTHAND
			else
				if iWindowClass = WINCLASS_MULTISASH then
					if gs_repeat_modules then
						CasementID	= CasementIDArray[1][1]
					else
						CasementID	= CasementIDArray[1][2]
					endif
				else
					CasementID	= CasementIDArray[2][2]
				endif
				optypeID	= optypeIDArray[CasementID]
				gosub "paneloperation"
			endif
			ifc_WindowPanel[2][1] = gs_sash_thk * (optypeID <> SASH_FIXED)
			ifc_WindowPanel[2][2] = gs_sash_width * (optypeID <> SASH_FIXED)
			ifc_WindowPanel[2][3] = panelOperationID
			ifc_WindowPanel[2][4] = 2	! MIDDLE

			if iWindowClass = WINCLASS_MULTISASH then
				if gs_repeat_modules then
					CasementID	= CasementIDArray[1][1]
				else
					CasementID	= CasementIDArray[1][3]
				endif
			else
				CasementID	= CasementIDArray[2][3]
			endif
			optypeID	= optypeIDArray[CasementID]
			gosub "paneloperation"
			ifc_WindowPanel[3][1] = gs_sash_thk * (optypeID <> SASH_FIXED)
			ifc_WindowPanel[3][2] = gs_sash_width * (optypeID <> SASH_FIXED)
			ifc_WindowPanel[3][3] = panelOperationID
			ifc_WindowPanel[3][4] = 3	! RIGHT
		endif

		bIFCParametersDone = 1
	endif

	if ifc_optype = WIN_OP_TRIPLE_PANEL_HORIZONTAL & not(bIFCParametersDone) then
		for i = 1 to 3
			if iWindowClass = WINCLASS_MULTISASH then
				if gs_repeat_modules then
					CasementID	= CasementIDArray[1][1]
				else
					CasementID	= CasementIDArray[1][i]
				endif
			else
				CasementID	= CasementIDArray[i][2]
			endif
			optypeID	= optypeIDArray[CasementID]
			gosub "two sash"
			if bTwoSash then i = 3
		next i

		if bTwoSash then
			ifc_optype = WIN_OP_USER_DEFINED
			parameters ifc_optype = ifc_optype
		else
			if iWindowClass = WINCLASS_MULTISASH then
				if gs_repeat_modules then
					CasementID	= CasementIDArray[1][1]
				else
					CasementID	= CasementIDArray[1][3]
				endif
			else
				CasementID	= CasementIDArray[1][2]
			endif
			optypeID	= optypeIDArray[CasementID]
			gosub "paneloperation"
			ifc_WindowPanel[1][1] = gs_sash_thk * (optypeID <> SASH_FIXED)
			ifc_WindowPanel[1][2] = gs_sash_width * (optypeID <> SASH_FIXED)
			ifc_WindowPanel[1][3] = panelOperationID
			ifc_WindowPanel[1][4] = 5	! TOP

			if iWindowClass = WINCLASS_MULTISASH then
				if gs_repeat_modules then
					CasementID	= CasementIDArray[1][1]
				else
					CasementID	= CasementIDArray[1][2]
				endif
			else
				CasementID	= CasementIDArray[2][2]
			endif
			optypeID	= optypeIDArray[CasementID]
			gosub "paneloperation"
			ifc_WindowPanel[2][1] = gs_sash_thk * (optypeID <> SASH_FIXED)
			ifc_WindowPanel[2][2] = gs_sash_width * (optypeID <> SASH_FIXED)
			ifc_WindowPanel[2][3] = panelOperationID
			ifc_WindowPanel[2][4] = 2	! MIDDLE

			if iWindowClass = WINCLASS_MULTISASH then
				CasementID	= CasementIDArray[1][1]
			else
				CasementID	= CasementIDArray[3][2]
			endif
			optypeID	= optypeIDArray[CasementID]
			gosub "paneloperation"
			ifc_WindowPanel[3][1] = gs_sash_thk * (optypeID <> SASH_FIXED)
			ifc_WindowPanel[3][2] = gs_sash_width * (optypeID <> SASH_FIXED)
			ifc_WindowPanel[3][3] = panelOperationID
			ifc_WindowPanel[3][4] = 4	! BOTTOM
		endif

		bIFCParametersDone = 1
	endif

	if ifc_optype = WIN_OP_TRIPLE_PANEL_BOTTOM & not(bIFCParametersDone) then
		CasementID	= CasementIDArray[2][2]
		optypeID	= optypeIDArray[CasementID]
		gosub "two sash"
		if not(bTwoSash) then
			CasementID	= CasementIDArray[2][3]
			optypeID	= optypeIDArray[CasementID]
			gosub "two sash"
		endif
		if not(bTwoSash) then
			CasementID	= CasementIDArray[3][2]
			optypeID	= optypeIDArray[CasementID]
			gosub "two sash"
		endif

		if bTwoSash then
			ifc_optype = WIN_OP_USER_DEFINED
			parameters ifc_optype = ifc_optype
		else
			CasementID	= CasementIDArray[2][2]
			optypeID	= optypeIDArray[CasementID]
			gosub "paneloperation"
			ifc_WindowPanel[1][1] = gs_sash_thk * (optypeID <> SASH_FIXED)
			ifc_WindowPanel[1][2] = gs_sash_width * (optypeID <> SASH_FIXED)
			ifc_WindowPanel[1][3] = panelOperationID
			ifc_WindowPanel[1][4] = 1	! LEFT

			CasementID	= CasementIDArray[2][3]
			optypeID	= optypeIDArray[CasementID]
			gosub "paneloperation"
			ifc_WindowPanel[2][1] = gs_sash_thk * (optypeID <> SASH_FIXED)
			ifc_WindowPanel[2][2] = gs_sash_width * (optypeID <> SASH_FIXED)
			ifc_WindowPanel[2][3] = panelOperationID
			ifc_WindowPanel[2][4] = 3	! RIGHT

			CasementID	= CasementIDArray[3][2]
			optypeID	= optypeIDArray[CasementID]
			gosub "paneloperation"
			ifc_WindowPanel[3][1] = gs_sash_thk * (optypeID <> SASH_FIXED)
			ifc_WindowPanel[3][2] = gs_sash_width * (optypeID <> SASH_FIXED)
			ifc_WindowPanel[3][3] = panelOperationID
			ifc_WindowPanel[3][4] = 4	! BOTTOM
		endif

		bIFCParametersDone = 1
	endif

	if ifc_optype = WIN_OP_TRIPLE_PANEL_TOP & not(bIFCParametersDone) then
		CasementID	= CasementIDArray[2][2]
		optypeID	= optypeIDArray[CasementID]
		gosub "two sash"
		if not(bTwoSash) then
			CasementID	= CasementIDArray[2][3]
			optypeID	= optypeIDArray[CasementID]
			gosub "two sash"
		endif
		if not(bTwoSash) then
			CasementID	= CasementIDArray[1][2]
			optypeID	= optypeIDArray[CasementID]
			gosub "two sash"
		endif

		if bTwoSash then
			ifc_optype = WIN_OP_USER_DEFINED
			parameters ifc_optype = ifc_optype
		else
			CasementID	= CasementIDArray[2][2]
			optypeID	= optypeIDArray[CasementID]
			gosub "paneloperation"
			ifc_WindowPanel[1][1] = gs_sash_thk * (optypeID <> SASH_FIXED)
			ifc_WindowPanel[1][2] = gs_sash_width * (optypeID <> SASH_FIXED)
			ifc_WindowPanel[1][3] = panelOperationID
			ifc_WindowPanel[1][4] = 1	! LEFT

			CasementID	= CasementIDArray[2][3]
			optypeID	= optypeIDArray[CasementID]
			gosub "paneloperation"
			ifc_WindowPanel[2][1] = gs_sash_thk * (optypeID <> SASH_FIXED)
			ifc_WindowPanel[2][2] = gs_sash_width * (optypeID <> SASH_FIXED)
			ifc_WindowPanel[2][3] = panelOperationID
			ifc_WindowPanel[2][4] = 3	!RIGHT

			CasementID	= CasementIDArray[1][2]
			optypeID	= optypeIDArray[CasementID]
			gosub "paneloperation"
			ifc_WindowPanel[3][1] = gs_sash_thk * (optypeID <> SASH_FIXED)
			ifc_WindowPanel[3][2] = gs_sash_width * (optypeID <> SASH_FIXED)
			ifc_WindowPanel[3][3] = panelOperationID
			ifc_WindowPanel[3][4] = 5	! TOP
		endif

		bIFCParametersDone = 1
	endif

	if (ifc_optype = WIN_OP_TRIPLE_PANEL_LEFT |\
		ifc_optype = WIN_OP_TRIPLE_PANEL_RIGHT) & not(bIFCParametersDone) then

		CasementID	= CasementIDArray[2][3]
		optypeID	= optypeIDArray[CasementID]
		gosub "two sash"
		if gs_UTrans then
			if not(bTwoSash) then
				CasementID	= CasementIDArray[1][2]
				optypeID	= optypeIDArray[CasementID]
				gosub "two sash"
			endif
			if not(bTwoSash) then
				CasementID	= CasementIDArray[2][2]
				optypeID	= optypeIDArray[CasementID]
				gosub "two sash"
			endif
		else
			if not(bTwoSash) then
				CasementID	= CasementIDArray[2][2]
				optypeID	= optypeIDArray[CasementID]
				gosub "two sash"
			endif
			if not(bTwoSash) then
				CasementID	= CasementIDArray[3][2]
				optypeID	= optypeIDArray[CasementID]
				gosub "two sash"
			endif
		endif

		if bTwoSash then
			ifc_optype = WIN_OP_USER_DEFINED
			parameters ifc_optype = ifc_optype
		else
			if gs_UTrans then
				CasementID	= CasementIDArray[1][2]
				optypeID	= optypeIDArray[CasementID]
				gosub "paneloperation"
				ifc_WindowPanel[1][1] = gs_sash_thk * (optypeID <> SASH_FIXED)
				ifc_WindowPanel[1][2] = gs_sash_width * (optypeID <> SASH_FIXED)
				ifc_WindowPanel[1][3] = panelOperationID
				ifc_WindowPanel[1][4] = 5	! TOP

				CasementID	= CasementIDArray[2][2]
				optypeID	= optypeIDArray[CasementID]
				gosub "paneloperation"
				ifc_WindowPanel[2][1] = gs_sash_thk * (optypeID <> SASH_FIXED)
				ifc_WindowPanel[2][2] = gs_sash_width * (optypeID <> SASH_FIXED)
				ifc_WindowPanel[2][3] = panelOperationID
				ifc_WindowPanel[2][4] = 4	! BOTTOM
			else
				CasementID	= CasementIDArray[2][2]
				optypeID	= optypeIDArray[CasementID]
				gosub "paneloperation"
				ifc_WindowPanel[1][1] = gs_sash_thk * (optypeID <> SASH_FIXED)
				ifc_WindowPanel[1][2] = gs_sash_width * (optypeID <> SASH_FIXED)
				ifc_WindowPanel[1][3] = panelOperationID
				ifc_WindowPanel[1][4] = 5	! TOP

				CasementID	= CasementIDArray[3][2]
				optypeID	= optypeIDArray[CasementID]
				gosub "paneloperation"
				ifc_WindowPanel[2][1] = gs_sash_thk * (optypeID <> SASH_FIXED)
				ifc_WindowPanel[2][2] = gs_sash_width * (optypeID <> SASH_FIXED)
				ifc_WindowPanel[2][3] = panelOperationID
				ifc_WindowPanel[2][4] = 4	! BOTTOM
			endif

			CasementID	= CasementIDArray[2][3]
			optypeID	= optypeIDArray[CasementID]
			gosub "paneloperation"
			ifc_WindowPanel[3][1] = gs_sash_thk * (optypeID <> SASH_FIXED)
			ifc_WindowPanel[3][2] = gs_sash_width * (optypeID <> SASH_FIXED)
			ifc_WindowPanel[3][3] = panelOperationID
			if ifc_optype = WIN_OP_TRIPLE_PANEL_LEFT then
				ifc_WindowPanel[3][4] = 1	! LEFT
			else
				ifc_WindowPanel[3][4] = 3	! RIGHT
			endif
		endif

		bIFCParametersDone = 1
	endif
endif
parameters ifc_WindowPanel = ifc_WindowPanel

if ifc_optype = WIN_OP_NOT_DEFINED | ifc_optype = WIN_OP_USER_DEFINED then
	ifc_MullionThickness	= 0
	ifc_FirstMullionOffset	= 0
	ifc_SecondMullionOffset	= 0
	parameters	ifc_MullionThickness	= ifc_MullionThickness,
				ifc_FirstMullionOffset	= ifc_FirstMullionOffset,
				ifc_SecondMullionOffset	= ifc_SecondMullionOffset

	ifc_TransomThickness	= 0
	ifc_FirstTransomOffset	= 0
	ifc_SecondTransomOffset	= 0
	parameters	ifc_TransomThickness	= ifc_TransomThickness,
				ifc_FirstTransomOffset	= ifc_FirstTransomOffset,
				ifc_SecondTransomOffset	= ifc_SecondTransomOffset
endif

call "IFC_optype_door_kmod" parameters ifc_optype = ifc_optype

lock "ifc_optypestr"

end

"preloadSurfaces":
	parameters	stored_material[1][1]	= gs_frame_mat,
				stored_material[1][2]	= gs_frame_mat2,
				stored_material[1][3]	= gs_sash_mat,
				stored_material[1][4]	= gs_sash_mat2,
				stored_material[1][5]	= gs_grill_mat,
				stored_material[1][6]	= gs_grill_mat2,
				stored_material[1][7]	= gs_panel_mat,
				stored_material[1][8]	= gs_panel_mat2
return


"paneloperation":
	panelOperationID = 13	! OTHEROPERATION
	if optypeID = SASH_FIXED		then panelOperationID = 12 	! FIXEDCASEMENT
	if optypeID = SASH_FIXED_SCREW	then panelOperationID = 12 	! FIXEDCASEMENT
	if optypeID = SASH_SIDE_HUNG	then panelOperationID = 2	! SIDEHUNGLEFTHAND
	if optypeID = SASH_SIDE_HUNG_M	then panelOperationID = 1	! SIDEHUNGRIGHTHAND
	if optypeID = SASH_TILT_TURN	then panelOperationID = 4	! TILTANDTURNLEFTHAND
	if optypeID = SASH_TILT_TURN_M	then panelOperationID = 3	! TILTANDTURNRIGHTHAND
	if optypeID = SASH_BOTTOM_HUNG	then panelOperationID = 6	! BOTTOMHUNG
	if optypeID = SASH_TOP_HUNG		then panelOperationID = 5	! TOPHUNG
	if optypeID = SASH_VER_PIVOT	then panelOperationID = 8	! PIVOTVERTICAL
	if optypeID = SASH_VER_PIVOT_M	then panelOperationID = 8	! PIVOTVERTICAL
	if optypeID = SASH_HOR_PIVOT	then panelOperationID = 7	! PIVOTHORIZONTAL
return

"two sash":
	bTwoSash = (optypeID = SASH_DOUBLE_SIDE_HUNG		|\
				optypeID = SASH_SLIDING_HOR				|\
				optypeID = SASH_SLIDING_HOR_M			|\
				optypeID = SASH_DOUBLE_SLIDING_HOR		|\
				optypeID = SASH_DOUBLE_SLIDING_HOR_M	|\
				optypeID = SASH_SLIDING_VER				|\
				optypeID = SASH_DOUBLE_SLIDING_VER		)
return

