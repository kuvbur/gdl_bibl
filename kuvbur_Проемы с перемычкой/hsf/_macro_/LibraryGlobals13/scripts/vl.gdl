
dim ttype_shrift_tip[]
dim itype_shrift_tip[] : i=0
i=i+1 : itype_shrift_tip[i]=0 : ttype_shrift_tip[i] = "Обычный"
i=i+1 : itype_shrift_tip[i]=1 : ttype_shrift_tip[i] = "Жирный(Ж)"
i=i+1 : itype_shrift_tip[i]=2 : ttype_shrift_tip[i] = "Курсив(К)"
i=i+1 : itype_shrift_tip[i]=4 : ttype_shrift_tip[i] = "Подчеркнутый(П)"
i=i+1 : itype_shrift_tip[i]=3 : ttype_shrift_tip[i] = "Ж+К"
i=i+1 : itype_shrift_tip[i]=5 : ttype_shrift_tip[i] = "Ж+П"
i=i+1 : itype_shrift_tip[i]=6 : ttype_shrift_tip[i] = "К+П"
i=i+1 : itype_shrift_tip[i]=7 : ttype_shrift_tip[i] = "Ж+К+П"

values{2} "Shrift_tip" itype_shrift_tip, ttype_shrift_tip

dim fontnames[]
n = REQUEST ("FONTNAMES_LIST", "", fontnames)
values "Shrift" fontnames, CUSTOM


![#COMPATIBILITY] - START
	if W_iSwingType = -1 | D_iSwingType = -1 then
		W_showBOpLine3D = showBOpLine3D
		W_iSwingType 	= gs_iSwingType
		W_swingLineType	= gs_swingLineType
		W_opLinePen		= gs_opLinePen
		W_iOpLinePen	= iOplinePen
		parameters 	W_showBOpLine3D = showBOpLine3D,
					W_iSwingType 	= gs_iSwingType,
					W_swingLineType	= gs_swingLineType,
					W_opLinePen		= gs_opLinePen,
					W_iOpLinePen	= iOplinePen

		D_showBOpLine3D = showBOpLine3D
		D_iSwingType 	= gs_iSwingType
		D_swingLineType	= gs_swingLineType
		D_opLinePen		= gs_opLinePen
		D_iOpLinePen	= iOplinePen
		parameters 	D_showBOpLine3D = showBOpLine3D,
					D_iSwingType 	= gs_iSwingType,
					D_swingLineType	= gs_swingLineType,
					D_opLinePen		= gs_opLinePen,
					D_iOpLinePen	= iOplinePen
	else
		showBOpLine3D 	= D_showBOpLine3D
		gs_iSwingType 	= D_iSwingType
		gs_swingLineType= D_swingLineType
		gs_opLinePen	= D_opLinePen
		iOpLinePen		= D_iOplinePen
		parameters	showBOpLine3D = showBOpLine3D,
					gs_iSwingType = gs_iSwingType,
					gs_swingLineType = gs_swingLineType,
					gs_opLinePen = gs_opLinePen,
					iOpLinePen = iOpLinePen
	endif

	if not(bInitialized_S_showBOpLine3D) & GLOB_CONTEXT <> 1 then
		S_showBOpLine3D = showBOpLine3D
		parameters 	S_showBOpLine3D = showBOpLine3D,
					bInitialized_S_showBOpLine3D = 1
	endif

	parameters bShowAddHotspots = 1

![#COMPATIBILITY] - END

values "gs_opline_type_m" 1, 2, 3, 4
values "gs_opline_type_m_out" 1, 2, 3, 4

values "D_iOpLineType2" 1, 2, 3, 4, 5
values "W_iOpLineType2" 1, 2, 3, 4, 5

values "gs_opline_style_m" 1, 2

values "gs_iSwingType" 	LINE_SHAPE_SWING_CURVED,
						LINE_SHAPE_SWING_STRAIGHT

values "W_iSwingType"	LINE_SHAPE_SWING_CURVED,
						LINE_SHAPE_SWING_STRAIGHT

if bEnableSimpleLine then
	values "D_iSwingType"	LINE_SHAPE_SWING_CURVED,
							LINE_SHAPE_SWING_STRAIGHT,
							LINE_SHAPE_SWING_SIMPLE_LINE,
							LINE_SHAPE_SWING_LEAF_LINE

	values "D_iSlidingType" LINE_SHAPE_SLIDING_NONE	,
							LINE_SHAPE_SLIDING_ARROW,
							LINE_SHAPE_SLIDING_SIMPLE_LINE
else
	values "D_iSwingType"	LINE_SHAPE_SWING_CURVED,
							LINE_SHAPE_SWING_STRAIGHT

	values "D_iSlidingType" LINE_SHAPE_SLIDING_NONE	,
							LINE_SHAPE_SLIDING_ARROW
endif

values "iLSymbol" 1, 2, 3


if not(W_showBOpLine3D) and not(D_showBOpLine3D) and not(S_showBOpLine3D) then
	lock "gs_opline_type_m_out", "gs_opline_type_m", "gs_opline_style_m"
endif

if not(showBMinSpace) then
	lock "MSFillType", "MSFillPen", "MSFillBackPen", "MSContLineType", "MSContLinePen", "iMSFillPen",
			"iMSFillBackPen", "iMSContLinePen"
endif

if not(W_showBOpLine3D) then
	lock "W_iOpLineType2"
endif

if not(D_showBOpLine3D) then
	lock "D_iOpLineType2"
endif

!old Ceiling plan/Floor plan option merged and controlled by the new MVO

if GLOB_MODPAR_NAME = "iLSymbol" then
	original_AC_Ceiling_Plan = AC_Ceiling_Plan
	if iLSymbol = 3 then
		AC_Ceiling_Plan = 1
	else
		AC_Ceiling_Plan = 0
	endif
	if AC_Ceiling_Plan <> original_AC_Ceiling_Plan then
		parameters AC_Ceiling_Plan = AC_Ceiling_Plan
	endif
else
	original_iLSymbol = ilSymbol
	if AC_Ceiling_Plan = 1 and iLSymbol <> 3 then
		iLSymbol = 3
	endif
	if AC_Ceiling_Plan = 0 and iLSymbol = 3 then
		iLSymbol = 1
	endif
	if original_iLSymbol <> iLSymbol then
		parameters iLSymbol = iLSymbol
	endif
endif

! --- Connecting integer and pencolor type parameters ---

for i = 1 to 255
	put i
next i

values "gs_opLinePen" use(NSP)
values "W_opLinePen" use(NSP)
values "D_opLinePen" use(NSP)

values "fireRatingSymbPen" use(NSP)

values "MSContLinePen" use(NSP)
values "MSFillPen" get(NSP)

if GLOB_MODPAR_NAME = "iMSFillBackPen" then
	if iMSFillBackPen < -1 | iMSFillBackPen > 255 then
		iMSFillBackPen = 1
		parameters iMSFillBackPen = iMSFillBackPen
	endif
	parameters MSFillBackPen = iMSFillBackPen
else
	parameters iMSFillBackPen = MSFillBackPen
endif

if GLOB_MODPAR_NAME = "iMSContLinePen" then
	if iMSContLinePen < 1 | iMSContLinePen > 255 then
		iMSContLinePen = 1
		parameters iMSContLinePen = iMSContLinePen
	endif
	parameters MSContLinePen= iMSContLinePen
else
	parameters iMSContLinePen= MSContLinePen
endif

if GLOB_MODPAR_NAME = "iMSFillPen" then
	if iMSFillPen < 1 | iMSFillPen > 255 then
		iMSFillPen = 1
		parameters iMSFillPen = iMSFillPen
	endif
	parameters MSFillPen= iMSFillPen
else
	parameters iMSFillPen= MSFillPen
endif

if GLOB_MODPAR_NAME = "iOplinePen" then
	if iOplinePen < 1 | iOplinePen > 255 then
		iOplinePen = 1
		parameters iOplinePen = iOplinePen
	endif
	parameters gs_opLinePen = iOplinePen
else
	parameters iOplinePen = gs_opLinePen
endif

if GLOB_MODPAR_NAME = "W_iOpLinePen" then
	if W_iOpLinePen < 1 | W_iOplinePen > 255 then
		W_iOpLinePen = 1
		parameters W_iOpLinePen = W_iOpLinePen
	endif
	parameters W_opLinePen = W_iOpLinePen
else
	parameters W_iOpLinePen = W_opLinePen
endif

if GLOB_MODPAR_NAME = "D_iOpLinePen" then
	if D_iOpLinePen < 1 | D_iOpLinePen > 255 then
		D_iOpLinePen = 1
		parameters D_iOpLinePen = D_iOpLinePen
	endif
	parameters D_opLinePen = D_iOpLinePen
else
	parameters D_iOpLinePen = D_opLinePen
endif

if GLOB_MODPAR_NAME = "iFireRatingSymbPen" then
	if iFireRatingSymbPen < 1 | iFireRatingSymbPen > 255 then
		iFireRatingSymbPen = 1
		parameters iFireRatingSymbPen = iFireRatingSymbPen
	endif
	parameters fireRatingSymbPen = iFireRatingSymbPen
else
	parameters iFireRatingSymbPen = fireRatingSymbPen
endif

!DACH UI lock
if bEnableSecondaryOpLineTypes then
	if not(D_showBOpLine2D) then
		lock "D_iSwingType", "D_swingLineType", "D_swingLineType2"
	endif
	if not(W_showBOpLine2D) then
		lock "W_iSwingType", "W_swingLineType", "W_swingLineType2"
	endif
endif
