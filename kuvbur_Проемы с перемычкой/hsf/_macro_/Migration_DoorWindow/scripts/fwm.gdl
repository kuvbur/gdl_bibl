
bMigrationSuccess = 1

if iMigrationStep = 1 then
	! ==============================================================================
	! Migrate New Door Leaves
	! ==============================================================================

	if bMigrateDoorLeaf then
		! Empty step
	endif


	! ==============================================================================
	! Migrate New Door Handle
	! ==============================================================================

	if bMigrateDoorHandle then
		_iHandleType = 0		! Default None
		bHas = STORED_PAR_VALUE("gs_handle_type_m", _iHandleType)

		gs_handle_type_m = _iHandleType

		parameters gs_handle_type_m = gs_handle_type_m
	endif


	! ==============================================================================
	! Migrate New Kick Board Function
	! ==============================================================================

	if bMigrateKickBoard then
		bKickBoardOut	= 0		! Default Off
		bKickBoardIn	= 0		! Default Off

		parameters	bKickBoardOut	= bKickBoardOut,
					bKickBoardIn	= bKickBoardIn
	endif

	if bMigrateKickBoard2 then
		bKickBoardOut2	= 0		! Default Off
		bKickBoardIn2	= 0		! Default Off

		parameters	bKickBoardOut2	= bKickBoardOut2,
					bKickBoardIn2	= bKickBoardIn2
	endif


	! ==============================================================================
	! Migrate New Casing Functions
	! ==============================================================================

	if bMigrateCasingType then
		if not(LibraryLangCode = "SWE") then
			gs_trimtype_in_int = CASING_NORMAL
			parameters gs_trimtype_in_int = gs_trimtype_in_int

			gs_trimtype_out_int = CASING_NORMAL
			parameters gs_trimtype_out_int = gs_trimtype_out_int
		endif
	endif

	if bMigrateBottomCasing then
		_gs_trim_below_sill = 0
		_gs_sill_outside = 0
		bHas =	DELETED_PAR_VALUE("gs_trim_below_sill", _gs_trim_below_sill) &\
				STORED_PAR_VALUE("gs_sill_outside", _gs_sill_outside)

		if bHas then
			if _gs_sill_outside then
				bCasingBottomOutside = _gs_trim_below_sill
			else
				bCasingBottomOutside = 1
			endif
			parameters bCasingBottomOutside = bCasingBottomOutside
		endif
	endif

	if bMigrateCasingCover then
		gs_trim_show_cover_in	= 1
		gs_trim_show_cover_out	= 1
		parameters	gs_trim_show_cover_in	= gs_trim_show_cover_in,
					gs_trim_show_cover_out	= gs_trim_show_cover_out
	endif
endif


if iMigrationStep = 2 then
	! ==============================================================================
	! Migrate Transom Surfaces
	! ==============================================================================

	if bMigrateTransomSurface then
		bHas =	STORED_PAR_VALUE ("gs_leaf_mat", _leafMatOut) & \
				STORED_PAR_VALUE ("gs_leaf_matin", _leafMatIn)

		gs_transom_mat		= _leafMatOut
		gs_transom_matin	= _leafMatIn

		parameters	gs_transom_mat		= gs_transom_mat,
					gs_transom_matin	= gs_transom_matin

	endif

	! ==============================================================================
	! Migrate Sidelight 1 Surfaces
	! ==============================================================================

	if bMigrateSidelight1Surface then
		bHas =	STORED_PAR_VALUE ("gs_leaf_mat", _leafMatOut) & \
				STORED_PAR_VALUE ("gs_leaf_matin", _leafMatIn)

		gs_sidelight1_mat	= _leafMatOut
		gs_sidelight1_matin	= _leafMatIn

		parameters	gs_sidelight1_mat	= gs_sidelight1_mat,
					gs_sidelight1_matin	= gs_sidelight1_matin

	endif

	! ==============================================================================
	! Migrate Sidelight 2 Surfaces
	! ==============================================================================

	if bMigrateSidelight2Surface then
		bHas =	STORED_PAR_VALUE ("gs_leaf_mat", _leafMatOut) & \
				STORED_PAR_VALUE ("gs_leaf_matin", _leafMatIn)

		gs_sidelight2_mat	= _leafMatOut
		gs_sidelight2_matin	= _leafMatIn

		parameters	gs_sidelight2_mat	= gs_sidelight2_mat,
					gs_sidelight2_matin	= gs_sidelight2_matin

	endif

endif


end bMigrationSuccess
