
line_type gs_sunShade_lineType
pen gs_sunShade_unCutLinesPen

dummyPen = 1

add2 -(rightCornerCorr - leftCornerCorr) / 2, 0

if gs_shutRoll_iPlacement = SHUTROLL_BEHIND then
	poly2_b 5, 1+4, dummyPen, dummyPen,
			-boxLength/2 - gs_shutRoll_boxOffsetLeft,	gs_shutRoll_railDepth,							1,
			-boxLength/2 - gs_shutRoll_boxOffsetLeft,	gs_shutRoll_railDepth + gs_shutRoll_boxWidth,	1,
			 boxLength/2 + gs_shutRoll_boxOffsetRight,	gs_shutRoll_railDepth + gs_shutRoll_boxWidth,	1,
			 boxLength/2 + gs_shutRoll_boxOffsetRight,	gs_shutRoll_railDepth,							1,
			-boxLength/2 - gs_shutRoll_boxOffsetLeft,	gs_shutRoll_railDepth,							-1
else
	boxWidth = gs_shutRoll_boxWidth

	if  gs_shutRoll_iPlacement = SHUTROLL_ONFACADE then
		add2 0, -wallBoxDist
	else
		add2 0, WIDO_SILL * (WIDO_SILL > (gs_shutRoll_boxWidth - EPS))
	endif

	if gs_shutRoll_iPlacement = SHUTROLL_ONFACADE & gs_shutRoll_distFromWall > EPS then
		inLineStat = 1
	else
		inLineStat = 0
	endif

	sideLineStat = 1
	if gs_shutRoll_iPlacement = SHUTROLL_TOWINDOW then
		if  WIDO_SILL < (gs_shutRoll_boxWidth - EPS) then
			boxWidth = gs_shutRoll_boxWidth - WIDO_SILL
		else
			sideLineStat = 0
		endif
	endif

	poly2_b 5, 1+4, dummyPen, dummyPen,
			-boxLength/2,	 0,				sideLineStat,
			-boxLength/2,	-boxWidth,		1,
			 boxLength/2,	-boxWidth,		sideLineStat,
			 boxLength/2,	 0,				inLineStat,
			-boxLength/2,	 0,				-1

	del 1
endif

del 1

if bDrawShutterRailon2D & lod2D_sunShade = 2 then
	if gs_shutRoll_iPlacement = SHUTROLL_TOWINDOW | gs_shutRoll_iPlacement = SHUTROLL_BEHIND then
		posShutRoll = WIDO_SILL
	else
		posShutRoll = -gs_shutRoll_distFromWall
	endif

	for i = 1 to 2
		add2 boxLength/2, posShutRoll-railThk

		poly2_b  9, 1+4, dummyPen, dummyPen,
			0, 0, 1,
			-railWidth, 0, 1,
			-railWidth, boxWallThk, 1,
			-boxWallThk, boxWallThk, 1,
			-boxWallThk, railThk - boxWallThk, 1,
			-railThk, railThk - boxWallThk, 1,
			-railWidth, railThk, 1,
			0, railThk, 1,
			0, 0, -1

		del 1

		mul2 -1, 1
	next i
endif

