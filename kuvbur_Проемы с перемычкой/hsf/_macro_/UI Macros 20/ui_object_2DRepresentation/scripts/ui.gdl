

! Used 2D symbol categories in macro for picture popup
SYMBOLCLAS_OFF				= 0
SYMBOLCLAS_CABINET			= 1
SYMBOLCLAS_BED				= 2
SYMBOLCLAS_BED_DOUBLE		= 3
SYMBOLCLAS_SOFA				= 4
SYMBOLCLAS_COOKTOP_BUILTIN	= 5
SYMBOLCLAS_DRYER			= 6
SYMBOLCLAS_WASHER			= 7
SYMBOLCLAS_BED_CANOPY		= 8
SYMBOLCLAS_DESIGNER_COUCH 	= 9
SYMBOLCLAS_SOFA_SET 		= 10
SYMBOLCLAS_OFFICE_LAYOUT	= 11
SYMBOLCLAS_SOLAR_PANEL		= 12
SYMBOLCLAS_CABINET_SHELVES	= 13
SYMBOLCLAS_CHAIRS			= 14
SYMBOLCLAS_REFRIGERATOR		= 15
SYMBOLCLAS_COOKTOP_ELECTRIC	= 16
SYMBOLCLAS_COOKTOP_GAS		= 17
SYMBOLCLAS_CHAIRS_BED		= 18
SYMBOLCLAS_DESIGNER_SOFA	= 19
SYMBOLCLAS_MEDICAL			= 20

!iFillFor
BED		= 1
PILLOW	= 2
BLANKET = 3


_stType = `Тип`
_stPen = `Перо`
_stBgPen = `Перо Фона`


dim gs_detlevel_2D[5]
	gs_detlevel_2D[1] = `Зависит от Масштаба`
	gs_detlevel_2D[2] = `1:50`
	gs_detlevel_2D[3] = `1:100`
	gs_detlevel_2D[4] = `1:200`
	gs_detlevel_2D[5] = `Символический`

dim stDetail2D[3]
	stDetail2D[1]=`Детальный`
	stDetail2D[2]=`Простой`
	stDetail2D[3]=`Упрощенный`


x1 = 0
x2 = 171
x3 = 261
x4 = x2 + 100
x5 = x2 + 200	!200 (Style Guide => _fillWidth)
_xEnd = 444

_outfHeight		= 15
_infHeight 		= 19
_penWidth 	= 33
_fillWidth 	= 200
_fillHeight	= 25

_dy 			= 24
_yEnd 			= 266
_yCurr 			= pageStartY + 1
_yOffset		= 4

ui_style 0, 0

if iSymbolClass <> SYMBOLCLAS_OFF then
	if (iSymbolClass <> SYMBOLCLAS_BED &\
		iSymbolClass <> SYMBOLCLAS_BED_DOUBLE &\
		iSymbolClass <> SYMBOLCLAS_BED_CANOPY &\
		iSymbolClass <> SYMBOLCLAS_DRYER &\
		iSymbolClass <> SYMBOLCLAS_WASHER &\
		iSymbolClass <> SYMBOLCLAS_COOKTOP_BUILTIN &\
		iSymbolClass <> SYMBOLCLAS_COOKTOP_ELECTRIC &\
		iSymbolClass <> SYMBOLCLAS_COOKTOP_GAS &\
		iSymbolClass <> SYMBOLCLAS_CABINET_SHELVES &\
		iSymbolClass <> SYMBOLCLAS_MEDICAL) then

		ui_outfield	`2D-детализация`, x1,    _yCurr+4, 	x2 - 2,	_outfHeight

		if iSymbolClass = SYMBOLCLAS_SOLAR_PANEL then
			ui_infield{3} "gs_detlevel_2D_m", 	 x2,   _yCurr, 	x3 - x2, _infHeight,
						8, "",
						0, 0,
						0, 0, 0, 0,
						"", stDetail2D[1], 2,
						"", stDetail2D[2], 1,
						"", stDetail2D[3], 0
		else
			ui_infield{3} "gs_detlevel_2D_m", x2, _yCurr, x3 - x2, _infHeight,
						8, "",
						0, 0,
						0, 0, 0, 0,
						"", gs_detlevel_2D[1], 0,
						"", gs_detlevel_2D[2], 3,
						"", gs_detlevel_2D[3], 2,
						"", gs_detlevel_2D[4], 1,
						"", gs_detlevel_2D[5], 4
		endif
	endif
endif

if iSymbolClass = SYMBOLCLAS_COOKTOP_BUILTIN then
	ui_infield{3} "b2DSymbol", x1, _yCurr, x2 - 2, _infHeight,
				7, "",
				0, 0,
				0, 0, 0, 0,
				"", `Электрический Символ`, 0,
				"", `Электрический Символ`, 1
endif

if iSymbolClass = SYMBOLCLAS_COOKTOP_ELECTRIC then
	ui_infield{3} "b2DSymbol", x1, _yCurr, x2 - 2, _infHeight,
				7, "",
				0, 0,
				0, 0, 0, 0,
				"", `2D-символ`, 0,
				"", `2D-символ`, 1
endif

if iSymbolClass = SYMBOLCLAS_CABINET |\
	iSymbolClass = SYMBOLCLAS_BED |\
	iSymbolClass = SYMBOLCLAS_DESIGNER_COUCH |\
	iSymbolClass = SYMBOLCLAS_BED_DOUBLE |\
	iSymbolClass = SYMBOLCLAS_BED_CANOPY |\
	iSymbolClass = SYMBOLCLAS_SOFA |\
	iSymbolClass = SYMBOLCLAS_CHAIRS |\
	iSymbolClass = SYMBOLCLAS_CHAIRS_BED |\
	iSymbolClass = SYMBOLCLAS_COOKTOP_BUILTIN |\
	iSymbolClass = SYMBOLCLAS_COOKTOP_ELECTRIC |\
	iSymbolClass = SYMBOLCLAS_COOKTOP_GAS |\
	iSymbolClass = SYMBOLCLAS_DRYER |\
	iSymbolClass = SYMBOLCLAS_WASHER |\
	iSymbolClass = SYMBOLCLAS_CABINET_SHELVES|\
	iSymbolClass = SYMBOLCLAS_REFRIGERATOR |\
	iSymbolClass = SYMBOLCLAS_DESIGNER_SOFA |\
	iSymbolClass = SYMBOLCLAS_MEDICAL then


	_infWidth	= 97
	_infHeight	= 50
	_cellWidth	= 84
	_cellHeight	= 43

	if (iSymbolClass = SYMBOLCLAS_BED |\
		iSymbolClass = SYMBOLCLAS_BED_DOUBLE |\
		iSymbolClass = SYMBOLCLAS_BED_CANOPY|\
		iSymbolClass = SYMBOLCLAS_CABINET_SHELVES |\
		iSymbolClass = SYMBOLCLAS_MEDICAL) then

		x4 = x2
		ui_outfield	`Тип Символа`, x1,    _yCurr+4, 	x2 - 2,	_outfHeight
	endif

	gosub "symbolTypeControls"

	_infHeight	= 19
endif

if bCabLineType then
	_yCurr = _yCurr +  2 * _dy + _yOffset + 5
	ui_outfield `Тип Линии`, x1, _yCurr + 4, x2 - 2,	_outfHeight
	ui_infield  "gs_line_type",	x2,		_yCurr-3,	_fillWidth,		_fillHeight + 2
	_yCurr = _yCurr - _dy
endif

if bOpeningAngle then
	_yCurr = _yCurr +  2 * _dy + _yOffset + 5
	_flagAngle = 4
	if iSymbolStyle = 8 or iSymbolStyle = 9 then _flagAngle = 0
	ui_outfield `Угол Открывания в 2D`, x1, _yCurr, x2 - 2,	_outfHeight, _flagAngle
	_yCurr = _yCurr - _yOffset
	ui_infield "opa2", x4, _yCurr, 60, _infHeight ui_tooltip `Угол Открывания в 2D`
	_yCurr = _yCurr + _dy + 5
endif

if bShowHangersin2D then
	if bOpeningAngle then 
		_yCurr = _yCurr - 5
	else
		_yCurr = _yCurr +  2 * _dy + 5
	endif

	ui_infield{3} "bHangers", x1, _yCurr, 444, _infHeight,
				7, "",
				2, 0,
				0, 0, 0, 0,
				"", `Показ Штанги в 2D`, 0,
				"", `Показ Штанги в 2D`, 1
	_yCurr = _yCurr + _dy + 5
endif

if bShowbDrawer2D then
	if bOpeningAngle or bShowHangersin2D  then 
		_yCurr = _yCurr - 5
	else
		_yCurr = _yCurr +  2 * _dy + 5
	endif
	ui_infield{3} "bDrawer2D", x1, _yCurr, 444, _infHeight,
				7, "",
				2, 0,
				0, 0, 0, 0,
				"", `Ящик в 2D`, 0,
				"", `Ящик в 2D`, 1
	_yCurr = _yCurr + _dy + 5
endif

if bShowDrawer2D then
	if bOpeningAngle or bShowHangersin2D or bShowbDrawer2D then 
		_yCurr = _yCurr - 5
	else
		_yCurr = _yCurr +  2 * _dy + 5
	endif
	ui_infield{3} "drawer2d", x1, _yCurr, 444, _infHeight,
				7, "",
				2, 0,
				0, 0, 0, 0,
				"", `Ящик в 2D`, 0,
				"", `Ящик в 2D`, 1
	_yCurr = _yCurr + _dy + 5
endif


if iSymbolClass = SYMBOLCLAS_CABINET |\
	iSymbolClass = SYMBOLCLAS_SOFA |\
	iSymbolClass = SYMBOLCLAS_CHAIRS |\
	iSymbolClass = SYMBOLCLAS_CHAIRS_BED |\
	iSymbolClass = SYMBOLCLAS_DRYER |\
	iSymbolClass = SYMBOLCLAS_WASHER |\
	iSymbolClass = SYMBOLCLAS_DESIGNER_COUCH |\
	iSymbolClass = SYMBOLCLAS_OFFICE_LAYOUT |\
	iSymbolClass = SYMBOLCLAS_COOKTOP_ELECTRIC |\
	iSymbolClass = SYMBOLCLAS_COOKTOP_GAS |\
	iSymbolClass = SYMBOLCLAS_CABINET_SHELVES|\
	iSymbolClass = SYMBOLCLAS_DESIGNER_SOFA then

	if not(bOpeningAngle) and not(bShowHangersin2D) and not(bShowbDrawer2D) and not(bShowDrawer2D) then _yCurr = _yCurr + 2 * _dy + 10

	if iSymbolClass = SYMBOLCLAS_OFFICE_LAYOUT then _yCurr = _yCurr + 5

	ui_separator 0, _yCurr, _xEnd, _yCurr
	_yCurr= _yCurr + _dy - 10
endif

if iSymbolClass = SYMBOLCLAS_COOKTOP_BUILTIN then
	_yCurr = _yCurr + 60
	ui_outfield `Показ Торца в 2D`,	x1, _yCurr,		x2 - 2,	_outfHeight
	ui_infield{3}	"side_vis2D_m",			x2 - 1,	_yCurr - 4,	97,	32,
		2,"ui_CabSideVis(13)", 4, 1,
		34, 34, 30, 30,
		1, `Нет`, 1,
		2, `Слева`, 2,
		3, `Справа`, 3,
		4, `Обе`, 4

	_yCurr = _yCurr + _dy + 7
	ui_separator 0, _yCurr, _xEnd, _yCurr
	_yCurr= _yCurr + _dy - 10
endif

if iSymbolClass = SYMBOLCLAS_BED |\
	iSymbolClass = SYMBOLCLAS_BED_DOUBLE |\
	iSymbolClass = SYMBOLCLAS_BED_CANOPY |\
	iSymbolClass = SYMBOLCLAS_MEDICAL then

	if not(bOpeningAngle) then _yCurr = _yCurr + 2 * _dy + 10
endif

if iSymbolClass = SYMBOLCLAS_SOFA_SET then
	if not(bOpeningAngle) then _yCurr = _yCurr + _dy
	ui_separator 0, _yCurr, _xEnd, _yCurr
	_yCurr= _yCurr + _dy - 13
endif

if iSymbolClass = SYMBOLCLAS_REFRIGERATOR then
	_yCurr = _yCurr + _dy + 5
	if symboltypes_enable then
		if not((gs_detlevel_2D_m = 3) | (gs_detlevel_2D_m = 0)) then
			_iFlag = 4
		else
			_iFlag = 0
		endif
		ui_outfield 	`Символ Двери`,	x1,		_yCurr,		x2 - 2,	_outfHeight, _iFlag
		ui_infield{3} "iSymbolType", 	 x2,   _yCurr - 4, 	x3 - x2, _infHeight,
					8, "",
					0, 0,
					0, 0, 0, 0,
					"", `Детальный`, 1,
					"", `Простой`, 2
	endif
	_yCurr = _yCurr + _dy 

	ui_separator 0, _yCurr, _xEnd, _yCurr
	_yCurr = _yCurr + _dy - 11

	ui_outfield `Тип Линии`,		x1,		_yCurr,		x2 - 2,	_outfHeight
	ui_infield  "gs_line_type",	x2,		_yCurr-7,	_fillWidth,		_fillHeight + 2
	_yCurr= _yCurr + _dy
endif

if iSymbolClass = SYMBOLCLAS_SOLAR_PANEL then
	if not(bOpeningAngle) then _yCurr = _yCurr + _dy + 7
	ui_separator 0, _yCurr, _xEnd, _yCurr
	_yCurr= _yCurr + _dy - 5
endif

if (iSymbolClass = SYMBOLCLAS_BED | iSymbolClass = SYMBOLCLAS_BED_DOUBLE | iSymbolClass = SYMBOLCLAS_BED_CANOPY | iSymbolClass = SYMBOLCLAS_MEDICAL) then
	_itemID = 1
	ui_listfield iFillListID, 0, _yCurr-3, 444, _yEnd - _yCurr, 1, "", ""
		if bDetailedHeadCushion then
			! CHI detailed cushion symbol meaning parameter enabling extra cushions
			ui_listitem _itemID, iFillListID, "bExtraCushion",0, "",`Дополнительная Подушка на Плане Этажа` : _itemID = _itemID + 1
		endif
		ui_listitem _itemID, iFillListID, "gs_cont_pen", 	0, "ui_list_contourPen_flat(1)",`Перо Контура` : _itemID = _itemID + 1
		ui_listitem _itemID, iFillListID, "bUniformFill", 	0, "",`Одинаковая Штриховка` : _itemID = _itemID + 1	
	if bUniformFill then
		ui_listitem _itemID, iFillListID, "", 0, "",`Штриховка` : _itemID = _itemID + 1
			ui_listitem _itemID, iFillListID, "fillTypeUniform",	1, "ui_list_fillType_flat(1)", 	_stType 	: _itemID = _itemID + 1
			ui_listitem _itemID, iFillListID, "fillPenUniform",		1, "ui_list_fillPen_flat(1)", 	_stPen 		: _itemID = _itemID + 1
			ui_listitem _itemID, iFillListID, "backPenUniform",		1, "ui_list_fillBgPen_flat(1)", 	_stBgPen 	: _itemID = _itemID + 1
	else
		ui_listitem _itemID, iFillListID, "", 0, "",`Штриховка Кровати` : _itemID = _itemID + 1
			ui_listitem _itemID, iFillListID, "gs_fill_type", 	1, "ui_list_fillType_flat(1)", 	_stType 	: _itemID = _itemID + 1
			ui_listitem _itemID, iFillListID, "gs_fill_pen", 	1, "ui_list_fillPen_flat(1)",	_stPen 		: _itemID = _itemID + 1
			ui_listitem _itemID, iFillListID, "gs_back_pen", 	1, "ui_list_fillBgPen_flat(1)", 	_stBgPen 	: _itemID = _itemID + 1
		ui_listitem _itemID, iFillListID, "", 0, "",`Штриховка Подушки` : _itemID = _itemID + 1
			ui_listitem _itemID, iFillListID, "fillTypePillow", 1, "ui_list_fillType_flat(1)", 	_stType 	: _itemID = _itemID + 1
			ui_listitem _itemID, iFillListID, "fillPenPillow", 	1, "ui_list_fillPen_flat(1)", 	_stPen 		: _itemID = _itemID + 1
			ui_listitem _itemID, iFillListID, "backPenPillow", 	1, "ui_list_fillBgPen_flat(1)", 	_stBgPen 	: _itemID = _itemID + 1
		ui_listitem _itemID, iFillListID, "", 0, "",`Штриховка Покрывала` : _itemID = _itemID + 1
			ui_listitem _itemID, iFillListID, "fillTypeBlanket",	1, "ui_list_fillType_flat(1)", 	_stType 	: _itemID = _itemID + 1
			ui_listitem _itemID, iFillListID, "fillPenBlanket",		1, "ui_list_fillPen_flat(1)", 	_stPen 		: _itemID = _itemID + 1
			ui_listitem _itemID, iFillListID, "backPenBlanket",		1, "ui_list_fillBgPen_flat(1)",	_stBgPen 	: _itemID = _itemID + 1
		if bLayout then
			ui_listitem _itemID, iFillListID, "", 0, "", `Штриховка Тумбочки` : _itemID = _itemID + 1
				ui_listitem _itemID, iFillListID, "fillTypeNightTable", 1, "ui_list_fillType_flat(1)", 	`Тип Штриховки Тумбочки` 			: _itemID = _itemID + 1
				ui_listitem _itemID, iFillListID, "fillPenNightTable", 	1, "ui_list_fillPen_flat(1)",	`Перо Штриховки Тумбочки` 				: _itemID = _itemID + 1
				ui_listitem _itemID, iFillListID, "backPenNightTable", 	1, "ui_list_fillBgPen_flat(1)", 	`Перо Фона Штриховки Тумбочки` 	: _itemID = _itemID + 1
			ui_listitem _itemID, iFillListID, "", 0, "", `Штриховка Лампы` : _itemID = _itemID + 1
				ui_listitem _itemID, iFillListID, "fillTypeLamp", 	1, "ui_list_fillType_flat(1)", 	`Тип Штриховки Лампы` 			: _itemID = _itemID + 1
				ui_listitem _itemID, iFillListID, "fillPenLamp", 	1, "ui_list_fillPen_flat(1)",	`Перо Штриховки Лампы` 			: _itemID = _itemID + 1
				ui_listitem _itemID, iFillListID, "backPenLamp", 	1, "ui_list_fillBgPen_flat(1)", 	`Перо Фона Штриховки Лампы` 	: _itemID = _itemID + 1
		endif
		if bExaminationTable then
			ui_listitem _itemID, iFillListID, "", 0, "", `Штриховка Табурета` : _itemID = _itemID + 1
				ui_listitem _itemID, iFillListID, "fillTypeStep", 	1, "ui_list_fillType_flat(1)", 	`Тип Штриховки Табурета` 			: _itemID = _itemID + 1
				ui_listitem _itemID, iFillListID, "fillPenStep", 	1, "ui_list_fillPen_flat(1)",	`Перо Штриховки Табурета` 			: _itemID = _itemID + 1
				ui_listitem _itemID, iFillListID, "backPenStep", 	1, "ui_list_fillBgPen_flat(1)", 	`Перо Фона Штриховки Табурета` 	: _itemID = _itemID + 1
		endif
	endif

	file_dependence "ui_list_contourPen_flat(1)"
	file_dependence "ui_list_fillType_flat(1)"
	file_dependence "ui_list_fillPen_flat(1)"
	file_dependence "ui_list_fillBgPen_flat(1)"

else
	ui_outfield `Перо Контура`,	x1,		_yCurr,		x2 - x1 - 2,	_outfHeight
	ui_infield "gs_cont_pen",	x2,		_yCurr-4,	_penWidth,		_infHeight
	_yCurr = _yCurr + _dy

	ui_outfield `Тип Штриховки`,	x1,		_yCurr,		x2 - x1 - 2,	_outfHeight
	ui_infield "gs_fill_type",	x2,		_yCurr-7,	_fillWidth,		_fillHeight
	_yCurr = _yCurr + _dy
	
	ui_outfield `Перо Штриховки`,		x1,		_yCurr,		x2 - x1 - 2,	_outfHeight
	ui_infield "gs_fill_pen",	x2,		_yCurr-4,	_penWidth,		_infHeight
	_yCurr = _yCurr + _dy
	
	ui_outfield `Перо Фона Штриховки`,	x1,		_yCurr,		x2 - x1 - 2,	_outfHeight
	ui_infield "gs_back_pen",			x2,		_yCurr-4,	_penWidth,		_infHeight
	_yCurr = _yCurr + _dy
endif

if iSymbolClass = SYMBOLCLAS_REFRIGERATOR then

	if gs_detlevel_2D_m <> 4 then 
		_iFlag = 4
	else
		_iFlag = 0
	endif

	ui_outfield `Перо Символа`,	x1,		_yCurr,		x2 - 2,	_outfHeight, _iFlag
	ui_infield "gs_symbol_pen",	x2,		_yCurr-4,	_penWidth,		_infHeight
	_yCurr= _yCurr + _dy

	if gs_detlevel_2D_m <> 4 | iFridgeSymbolType < 2 | iFridgeSymbolType > 3 then
		_iFlag = 4
	else
		_iFlag = 0
	endif

	ui_outfield `Тип Штриховки Символа`,	x1,		_yCurr,		x2 - x1 - 2,	_outfHeight, _iFlag
	ui_infield "gs_symbol_fill_type",	x2,		_yCurr-7,	_fillWidth,		_fillHeight
	_yCurr = _yCurr + _dy

	ui_infield{3} "dt", x1,		_yCurr,		x2 - 2,	_infHeight,
				7, "",
				0, 0,
				0, 0, 0, 0,
				"", `Показ Текста`, 0,
				"", `Показ Текста`, 1

	ui_pict_button ui_function, "", "uiFunctionText_flat(1)", x2, _yCurr - 1, 37, 22, -TABID_Text
endif

if iSymbolClass = SYMBOLCLAS_COOKTOP_ELECTRIC | iSymbolClass = SYMBOLCLAS_COOKTOP_BUILTIN then

	if b2DSymbol then 
		_iFlag = 0
	else
		_iFlag = 4
	endif

	ui_outfield `Перо Символа`,	x1,		_yCurr,		x2 - 2,	_outfHeight, _iFlag
	ui_infield "gs_symbol_pen",	x2,		_yCurr-4,	_penWidth,		_infHeight
	_yCurr= _yCurr + _dy

	if b2DSymbol & (iCooktopSymbolType = 3 | iCooktopSymbolType = 4) then
		_iFlag = 0
	else
		_iFlag = 4
	endif

	ui_outfield `Тип Штриховки Символа`,	x1,		_yCurr,		x2 - x1 - 2,	_outfHeight, _iFlag
	ui_infield "gs_symbol_fill_type",	x2,		_yCurr-7,	_fillWidth,		_fillHeight
	_yCurr = _yCurr + _dy

endif

if bShowSeatsIn2D then
	ui_infield{3} "gs_2DSeat",	x1,		_yCurr-4,	_xEnd-x1,		_infHeight,
					7, "",
					0, 0,
					0, 0, 0, 0,
					"", `Показ Сидений в 2D`, 0,
					"", `Показ Сидений в 2D`, 1

	_yCurr = _yCurr + _dy
endif

if bShowOpenSofaBed then
	ui_infield{3} "op_sofa",	x1,		_yCurr-4,	_xEnd-x1,		_infHeight,
					7, "",
					0, 0,
					0, 0, 0, 0,
					"", `Диван Разложен`, 0,
					"", `Диван Разложен`, 1

	_yCurr = _yCurr + _dy

endif

if bShowDashedLine | bShowOpenSofaBed then
	if bShowOpenSofaBed then
		_stDashedLineParName = "gs_dashed"
		_flagDashed = 4-4*op_sofa
	else
		_stDashedLineParName = "ltDashed"
		_flagDashed = 0
	endif

	ui_outfield `Тип Штриховой Линии`,	x1,		_yCurr,		x2 - 2,	_outfHeight, _flagDashed
	ui_infield{4}  _stDashedLineParName,	x2,		_yCurr-7,	_fillWidth,		_fillHeight + 2
	
	_yCurr = _yCurr + _dy
endif

! ================================================================================
end
! ================================================================================


"symbolTypeControls":
	! general parameters for popup
	_builtInPicIndex = iSymbolClass
	_typeParName = "iSymbolType"
	_pictWidth	= 84
	_pictHeight	= 43

	if iSymbolClass = SYMBOLCLAS_CABINET then
		_pictNum	= 8
		_pictRow	= 2
	endif
	
	if iSymbolClass = SYMBOLCLAS_BED or iSymbolClass = SYMBOLCLAS_DESIGNER_COUCH or	iSymbolClass = SYMBOLCLAS_MEDICAL then
		_builtInPicIndex = SYMBOLCLAS_BED		! SymbTypes_Bed.png
		_pictNum	= 6
		_pictRow	= 3
	endif
	
	if iSymbolClass = SYMBOLCLAS_MEDICAL then
		_builtInPicIndex = SYMBOLCLAS_BED		! SymbTypes_Bed.png
		_pictNum	= 6
		_pictRow	= 3
	endif

	if iSymbolClass = SYMBOLCLAS_BED_DOUBLE or  iSymbolClass = SYMBOLCLAS_BED_CANOPY then
		_builtInPicIndex = SYMBOLCLAS_BED_DOUBLE	! SymbTypes_BedDouble.png
		_pictNum	= 4
		_pictRow	= 2
	endif
	
	if iSymbolClass = SYMBOLCLAS_SOFA | iSymbolClass = SYMBOLCLAS_DESIGNER_SOFA then
		! SymbTypes_Sofa.png
		_typeParName = "iSofaSymbolType"
		_builtInPicIndex = SYMBOLCLAS_SOFA
		_pictNum	= 8
		_pictRow	= 2
	endif

	if iSymbolClass = SYMBOLCLAS_CHAIRS then
		! SymbTypes_Chairs.png
		_typeParName = "gs_SymbolType_m"
		_builtInPicIndex = 10
		_pictNum	= 16
		_pictRow	= 4
	endif

	if iSymbolClass = SYMBOLCLAS_CHAIRS_BED then
		_typeParName = "iSymbolType"
		_builtInPicIndex = SYMBOLCLAS_BED
		_pictNum	= 6
		_pictRow	= 3
	endif
	
	if iSymbolClass = SYMBOLCLAS_DRYER then
		! SymbTypes_Dryer.png
		_typeParName = "iDrierSymbolType"
		_pictNum	= 2
		_pictRow	= 1
	endif
	
	if iSymbolClass = SYMBOLCLAS_WASHER then
		! SymbTypes_Washer.png
		_typeParName = "iWasherSymbolType"
		_pictNum	= 4
		_pictRow	= 2
	endif

	if 	iSymbolClass = SYMBOLCLAS_COOKTOP_BUILTIN |\ 
		iSymbolClass = SYMBOLCLAS_COOKTOP_GAS |\
		iSymbolClass = SYMBOLCLAS_COOKTOP_ELECTRIC then
		! SymbTypes_Washer.png
		if iSymbolClass = SYMBOLCLAS_COOKTOP_GAS then
			_typeParName = "iCooktopType"
		else
			_typeParName = "iCooktopSymbolType"
		endif
		_builtInPicIndex = 5					! SYMBOLCLAS_COOKTOP_BUILTIN
		_pictNum	= 4
		_pictRow	= 2
		x4			= x1 + 170
	endif

	if iSymbolClass = SYMBOLCLAS_CABINET_SHELVES then
		! SymbTypes_CabinetandShelves.png
		_typeParName = "iSymbolStyle"
		_builtInPicIndex = 8
		_pictNum	= 10
		_pictRow	= 2
	endif

	if iSymbolClass = SYMBOLCLAS_REFRIGERATOR then
		!SymbTypes_Refrigerator.png
		_typeParName = "iFridgeSymbolType"
		_builtInPicIndex = 9
		_pictNum	= 8
		_pictRow	= 2
	endif

	! all picture indexes and parameter values are continuous integers
	if iSymbolClass = SYMBOLCLAS_CHAIRS then
		dim _idxPic[]
		dim _stTypes[]
		dim iSymbolTypesArray[]

		call "fa_ChairSymbol" parameters all stSymbolTypes = stSymbolTypes,
						returned_parameters	iSymbolTypesArray

		for _idxArray = 1 to vardim1(iSymbolTypesArray)
			_idxPic[_idxArray] = iSymbolTypesArray[_idxArray]
			_stTypes[_idxArray] = stSymbolTypes[iSymbolTypesArray[_idxArray]]
		next _idxArray

		ui_infield{4} _typeParName, x4, _yCurr, _infWidth, _infHeight,
					2, _builtInPicIndex,
					_pictNum, _pictRow,
					_cellWidth, _cellHeight,
					_pictWidth, _pictHeight,
					_idxPic, _stTypes, iSymbolTypesArray
	else
		if vardim1(stSymbolTypes) > 0 then
			dim _idxPic[]
			dim _parValue[]
			dim _emptyStrArray[]
	
			for _idxArray = 1 to vardim1(stSymbolTypes)
				_idxPic[_idxArray]			= _idxArray
				_parValue[_idxArray]		= _idxArray
				_emptyStrArray[_idxArray]	= ""
			next _idxArray
	
			if iSymbolClass = SYMBOLCLAS_DESIGNER_SOFA then ! Different style names
				! ui popup with dinamic parameter values
				ui_infield{4} _typeParName, x4, _yCurr, _infWidth, _infHeight,
							2, _builtInPicIndex,
							_pictNum, _pictRow,
							_cellWidth, _cellHeight,
							_pictWidth, _pictHeight,
							_idxPic, stSymbolTypes, _parValue
			else
				! ui popup with dinamic parameter values
				ui_infield{4} _typeParName, x4, _yCurr, _infWidth, _infHeight,
							2, _builtInPicIndex,
							_pictNum, _pictRow,
							_cellWidth, _cellHeight,
							_pictWidth, _pictHeight,
							_idxPic, _emptyStrArray, _parValue
			endif			
		endif
	endif
return
