
! Contact person: <NJ>

bFeedBack = (GLOB_CONTEXT > 20 & GLOB_CONTEXT < 40)

gs_sill_fill			= gs_bFills * gs_sill_fill
gs_sill_pen_fg			= gs_bFills * gs_sill_pen_fg
gs_sill_pen_bg			= gs_bFills * gs_sill_pen_bg
gs_board_fill			= gs_bFills * gs_board_fill
gs_board_pen_fg			= gs_bFills * gs_board_pen_fg
gs_board_pen_bg			= gs_bFills * gs_board_pen_bg
gs_treshold_fill		= gs_bFills * gs_treshold_fill
gs_treshold_pen_fg		= gs_bFills * gs_treshold_pen_fg
gs_treshold_pen_bg		= gs_bFills * gs_treshold_pen_bg
gs_trim_fill_in			= gs_bFills * gs_trim_fill_in
gs_trim_pen_bg_in		= gs_bFills * gs_trim_pen_bg_in
gs_trim_pen_fg_in		= gs_bFills * gs_trim_pen_fg_in
gs_trim_fill_out		= gs_bFills * gs_trim_fill_out
gs_trim_pen_fg_out		= gs_bFills * gs_trim_pen_fg_out
gs_trim_pen_bg_out		= gs_bFills * gs_trim_pen_bg_out
gs_shutter_fill			= gs_bFills * gs_sunShade_cutFillType
gs_shutter_fill_pen_fg	= gs_bFills * gs_sunShade_cutFillPen
gs_shutter_fill_pen_bg	= gs_bFills * gs_sunShade_cutFillBackPen

addy elevationOffset

! =============================================================================
! Draw Sill
! =============================================================================

dim sillPoly[]
sillPoly[1] 		= 0
sillBottom			= 0
sillBottomOutside	= 0
sillSideHeight		= 0
sillSideAngle		= 0
sillRight			= 0
sillLeft			= 0
sillLeft_sL			= 0
sillRight_sL		= 0
sillLeft_sR			= 0
sillRight_sR		= 0

if not(bFeedBack) & bEnableSill & bDrawSill & lod3D_Sill > 0 then
	if isWindow then
		leftFrameOffset		= gs_frame_width_left + gs_tolerance_left
		rightFrameOffset	= gs_frame_width + gs_tolerance_right
	else
		leftFrameOffset		= gs_sidelight_left  * gs_sidelight_width_left  + not(gs_sidelight_left)  * gs_frame_width_left  + gs_tolerance_left
		rightFrameOffset	= gs_sidelight_right * gs_sidelight_width_right + not(gs_sidelight_right) * gs_frame_width_right + gs_tolerance_right
	endif

	call "Sill" parameters gs_macro_version = 12,
		B						= openingHeight,
		AC_Hole_Position_Angle	= AC_Hole_Position_Angle,
		AC_HoleSideMaterial		= AC_HoleSideMaterial,
		AC_WallType				= AC_WallType,
		AC_WindowInWallContour	= AC_WindowInWallContour,
		AC_WallContourPolygon	= AC_WallContourPolygon,
		AC_Wall_Direction_Type	= AC_Wall_Direction_Type,
	! --- Wallhole Geometry
		refWidth				= refWidth,
		leftWidth				= leftWidth,
		rightWidth				= rightWidth,
		radSill					= radSill,
		WOD						= WOD,
		overSizeLower			= overSizeLower,
		offsY					= offsY,
		gs_reveal_nominal		= gs_reveal_nominal,
	! --- Sidelight
		gs_sidelight_left				= gs_sidelight_left,
		gs_sidelight_WHole_width_left	= gs_sidelight_WHole_width_left,
		gs_sidelight_parapet_hgt_left	= gs_sidelight_parapet_hgt_left,
		gs_sidelight_right				= gs_sidelight_right,
		gs_sidelight_WHole_width_right	= gs_sidelight_WHole_width_right,
		gs_sidelight_parapet_hgt_right	= gs_sidelight_parapet_hgt_right,
	! --- Macro Control Parameters
		gs_IsCurved					= gs_IsCurved,
		bParalellInCurvedWalls		= bParalellInCurvedWalls,
		iWindowShape				= iWindowShape,
		bDoorWithSidelightSupport	= bDoorWithSidelightSupport,
	! --- Reveal Parameters
		iRevealType					= iRevealType,
		iSillRevealType				= iSillRevealType,
		gs_reveal_left_angle		= gs_reveal_left_angle,
		gs_reveal_right_angle		= gs_reveal_right_angle,
		leftRevealPnts				= leftWallFrameRevealPnts,
		iRevealPointsIdx			= iRevealPointsIdx,
		rightRevealPnts				= rightWallFrameRevealPnts,
		original_gs_reveal_bottom	= original_gs_reveal_bottom,
		gs_reveal_left_sL			= gs_reveal_left_sL,
		gs_reveal_right_sR			= gs_reveal_right_sR,
		gs_reveal_bottom			= gs_reveal_bottom,
		gs_reveal_bottom_sL			= gs_reveal_bottom_sL,
		gs_reveal_bottom_sR			= gs_reveal_bottom_sR,
		gs_reveal_outerBottom_angle	= gs_reveal_outerBottom_angle,
		gs_mountingFrame			= gs_mountingFrame,
		gs_mountingFrame_depth		= gs_mountingFrame_depth,
	! --- Turn Plaster
		gs_turn_plaster_show_3D	= gs_turn_plaster_show_3D,
		nSkinTurnOut			= nSkinTurnOut,
		nSkinTurnIn				= nSkinTurnIn,
		thkPlasterAtSillLeft	= thkPlasterAtSillLeft,
		thkPlasterAtSillSlLeft	= thkPlasterAtSillSlLeft,
		thkPlasterAtSillRight	= thkPlasterAtSillRight,
		thkPlasterAtSillSlRight	= thkPlasterAtSillSlRight,
	! --- Corner Functions
		bLeftCornerFunction	= bLeftCornerFunction,
		leftCornerAngle		= leftCornerAngle,
		leftConnWallThk		= leftConnWallThk,
		bRightCornerFunction	= bRightCornerFunction,
		rightCornerAngle	= rightCornerAngle,
		rightConnWallThk	= rightConnWallThk,
	! --- Oversize
		gs_left_oversize	= gs_left_oversize,
		gs_right_oversize	= gs_right_oversize,
		gs_lower_oversize	= gs_lower_oversize,
		ac_right_oversize	= ac_right_oversize,
	! --- Casing
		bDrawOutsideTrim		= bDrawOutsideTrim,
		gs_trim_width_out	= gs_trim_width_out,
	! --- Window Sizes
		thresholdExtraHole3D = thresholdExtraHole3D,
	! --- Sill Parameters
		gs_sill_outside				= gs_sill_outside,
		gs_sill_outside_sl_left		= gs_sill_outside_sl_left,
		gs_sill_outside_sl_right	= gs_sill_outside_sl_right,
		bDrawSill			= bDrawSill,
		gs_fsill			= gs_fsill,
		iSillType			= iSillType,
		gs_sill_thk			= gs_sill_thk,
		gs_sill_nosing		= gs_sill_nosing,
		gs_sill_angle		= gs_sill_angle,
		gs_sill_ovhg_left	= gs_sill_ovhg_left,
		gs_sill_ovhg_right	= gs_sill_ovhg_right,
		gs_sill_slip_in		= gs_sill_slip_in,
		gs_sill_slip_wall	= gs_sill_slip_wall,
		gs_sill_holeDepthBehind = gs_sill_holeDepthBehind,
		gs_sill_width		= gs_sill_width,
		gs_sill_topWidth	= gs_sill_topWidth,
		gs_sill_topHeight	= gs_sill_topHeight,
		gs_sill_edge		= gs_sill_edge,
		gs_sill_element_thk	= gs_sill_element_thk,
		gs_sill_curved		= gs_sill_curved,
		gs_sill_ins_below	= gs_sill_ins_below,
		gs_board_thk		= gs_board_thk,
		gs_board_slip_in	= gs_board_slip_in,
		bShowSillSplice		= 1,
		gs_sill_ins_use_wall_skin = gs_sill_ins_use_wall_skin,

		gs_sill_oversize	= gs_sill_oversize,
		gs_sill_endthk		= gs_sill_endthk,
		gs_sill_elev		= gs_sill_elev,
		gs_sill_drip		= gs_sill_drip,
		gs_sill_dripnos		= gs_sill_dripnos,
		gs_sill_dripwidth	= gs_sill_dripwidth,
		iBrickSilldetlevel	= iBrickSilldetlevel,
		gs_brick_sill_br_thk= gs_brick_sill_br_thk,
		gs_brick_sill_mort_thk = gs_brick_sill_mort_thk,
	! --- 2D Representation
		gs_sill_pen_sectcont	= gs_sill_pen_sectcont,
		gs_sill_fill			= gs_sill_fill,
		gs_sill_pen_fg			= gs_sill_pen_fg,
		gs_sill_pen_bg			= gs_sill_pen_bg,
		gs_sill_pen_ins_sectcont= gs_sill_pen_ins_sectcont,
		gs_sill_fill_ins_fg		= gs_sill_fill_ins_fg,
		gs_sill_pen_ins_fg		= gs_sill_pen_ins_fg,
		gs_sill_pen_ins_bg		= gs_sill_pen_ins_bg,
	! --- 3D Representation
		lod3D				= lod3D,
		iLoD3D				= iLoD3D,
		lod3D_Sill			= lod3D_Sill,
		gs_frame_pen		= gs_frame_pen,
		gs_sill_pen_3D		= gs_sill_pen_3D,
	! --- Materials
		gs_sill_mat			= gs_sill_mat,
		gs_brick_sill_mort_mat	= gs_brick_sill_mort_mat,
	! --- Stacked Window
		gs_stack_left		= gs_stack_left,
		gs_stack_right		= gs_stack_right,
		gs_stack_bottom		= gs_stack_bottom,
		stSillEdge			= stSillEdge,

		leftFrameOffset		= leftFrameOffset,
		rightFrameOffset	= rightFrameOffset,
	returned_parameters sillRight,
						sillLeft,
						sillLeft_sL,
						sillRight_sL,
						sillLeft_sR,
						sillRight_sR,
						sillBottom,
						sillBottomOutside,
						sillSideHeight,
						sillSideAngle,
						sillPoly

endif

!! Sill geometry test ----------------------------------------------------------
!
!rotx -90
!addz sillBottom
!block 0.3, 0.3, 0
!addz sillSideHeight
!rotx -sillSideAngle
!block 0.3, 0.3, 0
!del 3
!del 1


! =============================================================================
! Draw Board
! =============================================================================

dim boardPoly[]
boardPoly[1] = 0
boardLeft_sL	= 0
boardRight_sL	= 0
boardLeft_sR	= 0
boardRight_sR	= 0
boardBottom		= 0
boardSideHeight	= 0
boardSideAngle	= 0

if not(bFeedBack) & bEnableBoard & bDrawBoard & lod3D_Board > 0 then

	call "Board" parameters gs_macro_version = 12,
		B						= openingHeight,
		AC_Hole_Position_Angle	= AC_Hole_Position_Angle,
		AC_WallType				= AC_WallType,
		AC_WindowInWallContour	= AC_WindowInWallContour,
		AC_WallContourPolygon	= AC_WallContourPolygon,
		AC_Wall_Direction_Type	= AC_Wall_Direction_Type,
	! --- Wallhole Geometry
		refWidth				= refWidth,
		leftWidth				= leftWidth,
		rightWidth				= rightWidth,
		radBoard				= radBoard,
		WOD						= WOD,
		overSizeLower			= overSizeLower,
		offsY					= offsY,
	! --- Sidelight
		gs_sidelight_left				= gs_sidelight_left,
		gs_sidelight_WHole_width_left	= gs_sidelight_WHole_width_left,
		gs_sidelight_parapet_hgt_left	= gs_sidelight_parapet_hgt_left,
		gs_sidelight_right				= gs_sidelight_right,
		gs_sidelight_WHole_width_right	= gs_sidelight_WHole_width_right,
		gs_sidelight_parapet_hgt_right	= gs_sidelight_parapet_hgt_right,
	! --- Macro Control Parameters
		gs_IsCurved					= gs_IsCurved,
		bParalellInCurvedWalls		= bParalellInCurvedWalls,
		iWindowShape				= iWindowShape,
		bDoorWithSidelightSupport	= bDoorWithSidelightSupport,
	! --- Reveal Parameters
		iRevealType						= iRevealType,
		gs_reveal_double_innerLeft_sL	= gs_reveal_double_innerLeft_sL,
		gs_reveal_double_innerRight_sR	= gs_reveal_double_innerRight_sR,
		gs_reveal_left_angle			= gs_reveal_left_angle,
		gs_reveal_right_angle			= gs_reveal_right_angle,
		gs_reveal_splayed_innerBottom	= gs_reveal_splayed_innerBottom,
		gs_reveal_double_innerBottom	= gs_reveal_double_innerBottom,
		gs_reveal_double_innerBottom_sL	= gs_reveal_double_innerBottom_sL,
		gs_reveal_double_innerBottom_sR	= gs_reveal_double_innerBottom_sR,
		gs_reveal_bottom_angle			= gs_reveal_bottom_angle,
		leftRevealPnts					= leftWallFrameRevealPnts,
		rightRevealPnts					= rightWallFrameRevealPnts,
		iRevealPointsIdx				= iRevealPointsIdx,
	! --- Turn Plaster
		gs_turn_plaster_show_3D	= gs_turn_plaster_show_3D,
		thkPlasterAtBoardLeft	= thkPlasterAtBoardLeft,
		thkPlasterAtBoardSlLeft	= thkPlasterAtBoardSlLeft,
		thkPlasterAtBoardRight	= thkPlasterAtBoardRight,
		thkPlasterAtBoardSlRight= thkPlasterAtBoardSlRight,
	! --- Corner Functions
		bLeftCornerFunction	= bLeftCornerFunction,
		leftCornerAngle		= leftCornerAngle,
		leftConnWallThk		= leftConnWallThk,
		bRightCornerFunction	= bRightCornerFunction,
		rightCornerAngle	= rightCornerAngle,
		rightConnWallThk	= rightConnWallThk,
	! --- Oversize
		gs_left_oversize	= gs_left_oversize,
		gs_right_oversize	= gs_right_oversize,
		gs_lower_oversize	= gs_lower_oversize,
		ac_right_oversize	= ac_right_oversize,
	! --- Sill Parameters
		iSillType			= iSillType,
		gs_sill_thk			= gs_sill_thk,
	! --- Board Parameters
		gs_board_inside				= gs_board_inside,
		gs_board_inside_sl_left		= gs_board_inside_sl_left,
		gs_board_inside_sl_right	= gs_board_inside_sl_right,
		bDrawBoard			= bDrawBoard,
		gs_board_thk		= gs_board_thk,
		gs_board_nosing		= gs_board_nosing,
		gs_board_angle		= gs_board_angle,
		gs_board_ovhg_left	= gs_board_ovhg_left,
		gs_board_ovhg_right	= gs_board_ovhg_right,
		gs_board_slip_in	= gs_board_slip_in * not(iSillType = SILL_TIMBER),
		gs_board_curved		= gs_board_curved,
		bBoardInPolyWall	= bBoardInPolyWall,
		bShowBoardSplice	= 0,
	! --- Casing
		bDrawInsideTrim		= bDrawInsideTrim,
		gs_trim_width_in	= gs_trim_width_in,
	! --- 2D Representation
		gs_board_fill			= gs_board_fill,
		gs_board_pen_fg			= gs_board_pen_fg,
		gs_board_pen_bg			= gs_board_pen_bg,
		gs_board_pen_sectcont	= gs_board_pen_sectcont,
	! --- 3D Representation
		lod3D = lod3D,
		gs_frame_pen		= gs_frame_pen,
		gs_board_pen_3D		= gs_board_pen_3D,
	! --- Materials
		gs_board_mat		= gs_board_mat,
	! --- Stacked Window
		gs_stack_left		= gs_stack_left,
		gs_stack_right		= gs_stack_right,
		gs_stack_bottom		= gs_stack_bottom,
		bBoardElevUsa		= bBoardElevUsa,
		bBoardNnosUsa		= bBoardNnosUsa,
		frameWidthLeft		= gs_frame_width + gs_tolerance_left,
		frameWidthRight		= gs_frame_width + gs_tolerance_right,
		gs_sill_angle		= gs_sill_angle,
		gs_rebw_lower		= gs_rebw_lower,
	returned_parameters boardRight,
						boardLeft,
						boardLeft_sL,
						boardRight_sL,
						boardLeft_sR,
						boardRight_sR,
						boardBottom,
						boardSideHeight,
						boardSideAngle,
						boardPoly
endif


! =============================================================================
! Draw Threshold
! =============================================================================

if not(bFeedBack) & bEnableThreshold & bDrawThreshold then

	leftFrameOffset		= gs_sidelight_left  * gs_sidelight_width_left  + not(gs_sidelight_left)  * gs_frame_width_left  + gs_tolerance_left
	rightFrameOffset	= gs_sidelight_right * gs_sidelight_width_right + not(gs_sidelight_right) * gs_frame_width_right + gs_tolerance_right

	call "Threshold" parameters gs_macro_version = 12,
		refWidth				= refWidth,
		leftWidth				= leftWidth,
		rightWidth				= rightWidth,
		B						= openingHeight,
		leftFrameOffset			= leftFrameOffset,
		rightFrameOffset		= rightFrameOffset,
		gs_tolerance_left		= gs_tolerance_left,
		gs_tolerance_right		= gs_tolerance_right,
		AC_Hole_Position_Angle	= AC_Hole_Position_Angle,
	! --- Macro Control Parameters
		gs_IsCurved				= gs_IsCurved,
		bParalellInCurvedWalls  = bParalellInCurvedWalls,
		iWindowShape			= iWindowShape,
	! --- Wallhole Geometry
		leftRevealPnts 			= leftWallFrameRevealPnts,
		rightRevealPnts			= rightWallFrameRevealPnts,
		iRevealPointsIdx		= iRevealPointsIdx,
		radSill					= radSill,
		radBoard				= radBoard,
		WOD						= WOD,
	! --- Reveal Parameters
		gs_reveal_left_sL				= gs_reveal_left_sL,
		gs_reveal_right_sR				= gs_reveal_right_sR,
		gs_reveal_double_innerLeft_sL	= gs_reveal_double_innerLeft_sL,
		gs_reveal_double_innerRight_sR	= gs_reveal_double_innerRight_sR,
		iRevealType						= iRevealType,
	! --- Door Frame
		iFrameStyle				= iFrameStyle,
		gs_frame_wthk			= gs_frame_wthk,
		gs_fthk					= gs_fthk,
		gs_frame_thkin			= gs_frame_thkin,
		gs_frame_width_left		= gs_frame_width_left,
		gs_frame_width_right	= gs_frame_width_right,
		gs_ds_thk				= gs_ds_thk,
		gs_ds_w					= gs_ds_w,
		gs_rebate_depth			= gs_rebate_depth,
		gs_rebate_width			= gs_rebate_width,
		gs_frame_oversize_thk	= gs_frame_oversize_thk,
	! --- Door Leaf
		gs_leaf_thk				= gs_leaf_thk,
	! --- Sidelight
		gs_sidelight_left				= gs_sidelight_left,
		gs_sidelight_width_left			= gs_sidelight_width_left,
		gs_sidelight_WHole_width_left	= gs_sidelight_WHole_width_left,
		gs_sidelight_parapet_hgt_left	= gs_sidelight_parapet_hgt_left,
		gs_sidelight_right				= gs_sidelight_right,
		gs_sidelight_width_right		= gs_sidelight_width_right,
		gs_sidelight_WHole_width_right	= gs_sidelight_WHole_width_right,
		gs_sidelight_parapet_hgt_right	= gs_sidelight_parapet_hgt_right,
	! --- Trim Parameters
		gs_trim_outside		= gs_trim_outside,
		gs_trim_inside		= gs_trim_inside,
		gs_trim_width_in	= gs_trim_width_in,
		gs_trim_width_out	= gs_trim_width_out,
	! --- Threshold
		bThreshold			= bThreshold,
		iThresholdType		= iThresholdType,
		gs_treshold_inFloor	= gs_treshold_inFloor,
		gs_treshold_thk		= gs_treshold_thk,
		gs_treshold_width	= gs_treshold_width,
		gs_treshold_angle	= gs_treshold_angle,
		gs_treshold_ext_hgt	= gs_treshold_ext_hgt,
		gs_treshold_nosing	= gs_treshold_nosing,
		gs_treshold_nosing_2 = gs_treshold_nosing_2,
		gs_treshold_ovhg 	= gs_treshold_ovhg,
		gs_treshold_ovhg_2 	= gs_treshold_ovhg_2,
	! --- Turn Plaster
		gs_turn_plaster_show_3D		= gs_turn_plaster_show_3D,
		thkPlasterAtBoardSlLeft		= thkPlasterAtBoardSlLeft,
		thkPlasterAtBoardSlRight	= thkPlasterAtBoardSlRight,
		thkPlasterAtSillSlLeft		= thkPlasterAtSillSlLeft,
		thkPlasterAtSillSlRight		= thkPlasterAtSillSlRight,
	! --- Oversize
		gs_left_oversize	= gs_left_oversize,
		gs_right_oversize	= gs_right_oversize,
		gs_upper_oversize	= gs_upper_oversize,
	! --- Stacked Window
		gs_stack_left		= gs_stack_left,
		gs_stack_right		= gs_stack_right,
	! --- 2D Representation
		gs_treshold_pen_sectcont	= gs_treshold_pen_sectcont,
		gs_treshold_fill			= gs_treshold_fill,
		gs_treshold_pen_fg			= gs_treshold_pen_fg,
		gs_treshold_pen_bg			= gs_treshold_pen_bg,
	! --- 3D Representation
		lod3D				= lod3D,
		gs_frame_pen		= gs_frame_pen,
	! --- Materials
		gs_treshold_mat		= gs_treshold_mat,
		gs_treshold_metal_mat = gs_treshold_metal_mat
endif

! =============================================================================
! Draw Shutter
! =============================================================================
dim sunshadepoly[]
sunshadepoly[1] = 0
posSunShade		= 0
lengthSunShade	= 0

if bEnableShutter & bDrawShutter then
	outfolding_innerPanelLeft = gs_outFoldingShutter_panelIn
	outfolding_innerPanelRight = gs_outFoldingShutter_panelIn

	if iRevealType = REVEAL_DOUBLE_SPLAYED | iRevealType = REVEAL_OUTSIDE_SPLAYED then
		leftWallAngle	= gs_reveal_outerLeft_angle		* not(gs_stack_left)
		rightWallAngle	= gs_reveal_outerRight_angle	* not(gs_stack_right)
		topWallAngle	= gs_reveal_outerTop_angle		* not(gs_stack_top)
		bottomWallAngle	= gs_reveal_outerBottom_angle	* not(gs_stack_bottom)

		slantedRevealDepth = WIDO_SILL - gs_reveal_outer_jamb_depth
	else
		leftWallAngle	= 0
		rightWallAngle	= 0
		topWallAngle	= 0
		bottomWallAngle	= 0

		slantedRevealDepth = 0
	endif

	bUseInnerRevealPoints = 0
	if iRevealType = REVEAL_DOUBLE_SPLAYED | iRevealType = REVEAL_OUTSIDE_SPLAYED then
		if gs_sunShade_iType = SUNSHADE_FOLDING | gs_sunShade_iType = SUNSHADE_OUTFOLDING then bUseInnerRevealPoints = 1

		if gs_sunShade_iType = SUNSHADE_ROLLING & gs_shutRoll_iPlacement <> 1 then bUseInnerRevealPoints = 1
		if gs_sunShade_iType = SUNSHADE_EXTVENETIAN & gs_shutLam_iPlacement <> 1 then bUseInnerRevealPoints = 1
	endif

	if bUseInnerRevealPoints then
		leftCornerX		= leftWallFrameRevealPnts[idxSillStartPlasterLeft+1][1]
		rightCornerX	=  rightWallFrameRevealPnts[idxSillStartPlasterRight+1][1]
		leftX1		= leftWallFrameRevealPnts[idxSillStartPlasterLeft][1]
		rightX1		= rightWallFrameRevealPnts[idxSillStartPlasterRight][1]

		if WIDO_REVEAL_SIDE then
			leftCornerY		= leftWallFrameRevealPnts[idxSillStartPlasterLeft][2] - WIDO_FRAME_THICKNESS
			rightCornerY	= rightWallFrameRevealPnts[idxSillStartPlasterRight][2] - WIDO_FRAME_THICKNESS

			leftY2	= leftWallFrameRevealPnts[idxSillStartPlasterLeft+1][2] - WIDO_FRAME_THICKNESS
			rightY2	= rightWallFrameRevealPnts[idxSillStartPlasterRight+1][2] - WIDO_FRAME_THICKNESS
		else
			leftCornerY		= -leftWallFrameRevealPnts[idxSillStartPlasterLeft][2]
			rightCornerY	= -rightWallFrameRevealPnts[idxSillStartPlasterRight][2]

			leftY2	= -leftWallFrameRevealPnts[idxSillStartPlasterLeft+1][2]
			rightY2	= -rightWallFrameRevealPnts[idxSillStartPlasterRight+1][2]
		endif

		if abs(leftWallAngle) < EPS then
			outfolding_innerPanelLeft = WIDO_SILL - gs_reveal_outer_jamb_depth
		else
			outfolding_innerPanelLeft = sqr((leftCornerX - leftX1)^2 + (leftY2 - leftCornerY)^2)
		endif
		if abs(rightWallAngle) < EPS then
			outfolding_innerPanelRight = WIDO_SILL - gs_reveal_outer_jamb_depth
		else
			outfolding_innerPanelRight = sqr((rightCornerX - rightX1)^2 + (rightY2 -rightCornerY)^2)
		endif
	else
		leftCornerX		= leftWallFrameRevealPnts[idxSillStartPlasterLeft][1]
		rightCornerX	= rightWallFrameRevealPnts[idxSillStartPlasterRight][1]

		if WIDO_REVEAL_SIDE then
			leftCornerY		= leftWallFrameRevealPnts[idxSillStartPlasterLeft][2] - WIDO_FRAME_THICKNESS
			rightCornerY	= rightWallFrameRevealPnts[idxSillStartPlasterRight][2] - WIDO_FRAME_THICKNESS
		else
			leftCornerY		= -leftWallFrameRevealPnts[idxSillStartPlasterLeft][2]
			rightCornerY	= -rightWallFrameRevealPnts[idxSillStartPlasterRight][2]
		endif
	endif

	sunShadeLength = rightCornerX - leftCornerX
	sunShadeLength3D = sunShadeLength
	if not(gs_turn_plaster_show_3D) then
		sunShadeLength3D = sunShadeLength + thkPlasterAtSillLeft * not(gs_stack_left) + thkPlasterAtSillRight * not(gs_stack_right)
	endif

	casingThkAtWindow	= 0
	casingThkOnFacade	= 0

	if gs_trim_outside then
		casingThkAtWindow = gs_trim_width_out
		if gs_sunShade_iType = SUNSHADE_ROLLING &  gs_shutRoll_iPlacement <> SHUTROLL_ONFACADE & gs_shutRoll_iRailPos = 2 then		! ON WALL
			casingThkAtWindow = 0
		endif
		if gs_sunShade_iType = SUNSHADE_EXTVENETIAN & gs_shutLam_iPlacement <> SHUTLAM_ONFACADE & gs_shutLam_iRailPos = 2 then		! ON WALL
			casingThkAtWindow = 0
		endif

		if gs_trim_show_cover_out then
			casingThkOnFacade = gs_trim_thk_out
		else
			casingThkOnFacade = gs_trim_jambext_nosing_out
		endif
	endif

	elevateSunShadeBottom	= 0
	bottomCorrection		= 0
	topCorrection			= 0
	bottomCorrection3D		= 0
	topCorrection3D			= 0

	if gs_sunShade_bModifyRevealSize then	! DACH types
		topCorrection = thkPlasterAtSillTop * not(gs_stack_top)
		topCorrection3D = topCorrection * gs_turn_plaster_show_3D

		if gs_sill_outside then
			if gs_sill_oversize then
				if iSillType = SILL_BRICK | iSillType = SILL_STONE then
					elevateSunShadeBottom = 0
				else
					elevateSunShadeBottom = gs_sill_thk + gs_sill_elev * (iSillType = SILL_TIMBER | iSillType = SILL_SOLID_11 | iSillType =  SILL_SOLID_12 | iSillType = SILL_SOLID_22)
				endif

				bottomCorrection = 0
				bottomCorrection3D = bottomCorrection
			else
				if iSillType = SILL_BRICK | iSillType = SILL_STONE then
					bottomCorrection = 0
				else
					bottomCorrection = gs_sill_thk + gs_sill_elev * (iSillType = SILL_TIMBER | iSillType = SILL_SOLID_11 | iSillType =  SILL_SOLID_12 | iSillType = SILL_SOLID_22)
				endif
				bottomCorrection3D = bottomCorrection

				elevateSunShadeBottom = bottomCorrection
			endif
		else
			if gs_trim_outside then
				bottomCorrection = 0
				elevateSunShadeBottom = gs_trim_width_out
			else
				bottomCorrection = thkPlasterAtSillBottom * not(gs_stack_bottom)
				elevateSunShadeBottom = bottomCorrection * gs_turn_plaster_show_3D
			endif

			bottomCorrection3D = bottomCorrection * gs_turn_plaster_show_3D
		endif

		if iRevealType = REVEAL_DOUBLE_SPLAYED | iRevealType = REVEAL_OUTSIDE_SPLAYED then
			elevateSunShadeBottom = not(gs_stack_bottom) * gs_sill_outside * gs_sill_element_thk / cos(gs_reveal_outerBottom_angle)

			if gs_mountingFrame then
				topCorrection	= elevateSunShadeBottom - gs_mountingFrame_width_top - gs_mountingFrame_width_bottom - thresholdExtraHole3D
				topCorrection3D	= elevateSunShadeBottom - gs_mountingFrame_width_top - gs_mountingFrame_width_bottom - thresholdExtraHole3D
			else
				topCorrection	= 0
				topCorrection3D	= 0
			endif
			if gs_sunShade_iType = SUNSHADE_SHUTTER then
				slantedDepthTop		= max(0, WIDO_SILL - gs_shutter_closingDepth - gs_shutter_bExtraFrame * gs_shutter_extraFrameThk - gs_reveal_outer_jamb_depth)
				slantedDepthBottom	= WIDO_SILL - gs_shutter_closingDepth - gs_shutter_bExtraFrame * gs_shutter_extraFrameThk - gs_mountingFrame * gs_mountingFrame_depth
			else
				slantedDepthTop		= WIDO_SILL - gs_reveal_outer_jamb_depth
				slantedDepthBottom	= WIDO_SILL - gs_mountingFrame * gs_mountingFrame_depth
			endif
			slantedCorrectionTop	= not(gs_stack_top) * slantedDepthTop * tan(gs_reveal_outerTop_angle)
			slantedCorrectionBottom	= not(gs_stack_bottom) * slantedDepthBottom * tan(gs_reveal_outerBottom_angle)

			if not(bUseInnerRevealPoints) then
				elevateSunShadeBottom = elevateSunShadeBottom - slantedCorrectionBottom
				elevateSunShadeBottom = elevateSunShadeBottom + gs_stack_bottom * gs_sill_outside * gs_sill_oversize * gs_sill_element_thk / cos(gs_reveal_outerBottom_angle)
			endif
			if bUseInnerRevealPoints then
				topCorrection = 0
			else
				topCorrection	= topCorrection - slantedCorrectionBottom - slantedCorrectionTop
				topCorrection	= topCorrection - gs_stack_top * not(gs_mountingFrame) * gs_reveal_top
			endif
			topCorrection3D	= topCorrection

			if bUseInnerRevealPoints then
				bottomCorrection = 0
			else
				bottomCorrection	= not(gs_stack_bottom) * not(gs_mountingFrame) * gs_sill_outside * not(gs_sill_oversize) * gs_sill_element_thk / cos(gs_reveal_outerBottom_angle)
			endif
			bottomCorrection3D	= bottomCorrection
		endif

		if not(gs_sill_oversize) then
			topCorrection3D	= gs_sunShade_winMountingCorr + gs_sunShade_winMountingCorrTop
		else
			if not(isWindow) then
				topCorrection3D	= elevateSunShadeBottom
			endif
		endif
		
	else	! INT types
		if gs_trim_outside then
			topCorrection = gs_trim_width_out
			topCorrection3D = topCorrection
		else
			topCorrection = thkPlasterAtSillTop * not(gs_stack_top)
			topCorrection3D = topCorrection * gs_turn_plaster_show_3D
		endif

		if gs_sill_outside then

			bSunshadeReachesFrame = (gs_sunShade_iType = SUNSHADE_FOLDING | gs_sunShade_iType = SUNSHADE_OUTFOLDING)
			bottomCorrection = 0

			if	iSillType = SILL_BRICK | \
				iSillType = SILL_STONE | \
				iSillType = SILL_CERAMIC | \
				iSillType = SILL_ETHERNIT | \
				iSillType = SILL_CONCRETE_TUB | \
				iSillType = SILL_ALUMINIUM | \
				iSillType = SILL_SIMPLEBLOCK | \
				iSillType = SILL_BLOCK | \
				iSillType = SILL_DUTCH then

				if iSillType = SILL_BRICK		 then bottomCorrection = -(not(bSunshadeReachesFrame) * WIDO_SILL + gs_sill_slip_in) * tan(gs_sill_angle)
				if iSillType = SILL_STONE		 then bottomCorrection = -(not(bSunshadeReachesFrame) * WIDO_SILL + gs_sill_slip_in - gs_sill_frame_nosing) * tan(gs_sill_angle) - gs_sill_frame_keep
				if iSillType = SILL_CERAMIC		 then bottomCorrection = -((gs_sill_thk - gs_sill_endthk) * cos(gs_sill_angle) + tan(gs_sill_angle) * (not(bSunshadeReachesFrame) * WIDO_SILL + gs_sill_slip_in))
				if iSillType = SILL_ETHERNIT	 then bottomCorrection = -(not(bSunshadeReachesFrame) * WIDO_SILL + gs_sill_slip_in - gs_sill_frame_nosing) * tan(gs_sill_angle) - gs_sill_frame_keep
				if iSillType = SILL_CONCRETE_TUB then bottomCorrection = not(bSunshadeReachesFrame) * (0.17 * gs_sill_thk / 0.185 - gs_sill_thk)
				if iSillType = SILL_ALUMINIUM	 then bottomCorrection = -(not(bSunshadeReachesFrame) * WIDO_SILL + gs_sill_slip_in - 0.002) * tan(gs_sill_angle) - 0.01
				if iSillType = SILL_SIMPLEBLOCK	 then bottomCorrection = 0
				if iSillType = SILL_BLOCK		 then bottomCorrection = -gs_sill_thk
				if iSillType = SILL_DUTCH		 then bottomCorrection = -gs_sill_thk
			else
				if iSillType = SILL_TIMBER	 then bottomCorrection = -not(bSunshadeReachesFrame) * max(0, WIDO_SILL) * tan(gs_sill_angle)
				if iSillType = SILL_SOLID_22 then bottomCorrection = - 0.01 - not(bSunshadeReachesFrame) * max(0, gs_sill_thk - gs_sill_endthk - gs_sill_elev - 0.01) + \
					 max(0, gs_sill_thk - gs_sill_endthk - 0.01) / (max(0, WIDO_SILL) + gs_sill_nosing - 0.01) * gs_sill_nosing
				if iSillType = SILL_METAL_1	 then bottomCorrection = - 0.01 - not(bSunshadeReachesFrame) * max(0, gs_sill_thk - gs_sill_endthk - 0.01)

				if not(gs_sill_oversize) then
					bottomCorrection = bottomCorrection + gs_sill_thk + (iSillType = SILL_SOLID_22) * gs_sill_elev
				endif
			endif
			bottomCorrection3D = bottomCorrection
		else
			if gs_trim_outside then
				bottomCorrection = gs_trim_width_out * isWindow
				bottomCorrection3D = bottomCorrection
			else
				bottomCorrection = thkPlasterAtSillBottom * not(gs_stack_bottom) * isWindow
				bottomCorrection3D = bottomCorrection * gs_turn_plaster_show_3D
			endif
		endif

		elevateSunShadeBottom = bottomCorrection3D
	endif

	if gs_shutRoll_iBoxDefaultSize = 2 then 		! internal size
		if abs(leftWallFrameRevealPnts[iRevealPointsIdx[10]][1]) > sunShadeLength/2 then
			gs_shutRoll_boxOffsetLeft = gs_shutRoll_boxOffsetLeft + abs(leftWallFrameRevealPnts[iRevealPointsIdx[10]][1]) - sunShadeLength/2
		endif

		if abs(rightWallFrameRevealPnts[iRevealPointsIdx[20]][1]) > sunShadeLength/2 then
			gs_shutRoll_boxOffsetRight = gs_shutRoll_boxOffsetRight + abs(rightWallFrameRevealPnts[iRevealPointsIdx[20]][1]) - sunShadeLength/2
		endif
	endif

	gs_shutPanel_archHeight = openingArchHeight
	if iWindowShape = SHAPE_ARCHED then
		halfSegmentAngle = 2 * atn((openingArchHeight) / (ac_wallhole_width / 2))
		radWallhole = (ac_wallhole_width / 2) / sin(halfSegmentAngle)
		origFromTop = -openingArchHeight - sqr(radWallhole^2 - (ac_wallhole_width / 2)^2)

		if iRevealType = REVEAL_DOUBLE_SPLAYED | iRevealType = REVEAL_OUTSIDE_SPLAYED then
			diffSlantedReveal = tan(gs_reveal_outerTop_angle) * (gs_wido_sill - gs_reveal_outer_jamb_depth)
		else
			diffSlantedReveal = 0
		endif

		radSunshade = radWallhole - gs_reveal_right - casingThkAtWindow + diffSlantedReveal
		diffSunshadeArchHeight	= origFromTop + sqr(radSunshade^2 - (ac_wallhole_width / 2 - gs_reveal_right - casingThkAtWindow + diffSlantedReveal)^2) + openingArchHeight - diffSlantedReveal

		gs_shutPanel_archHeight = openingArchHeight - gs_reveal_right - casingThkAtWindow - diffSunshadeArchHeight
	endif

	add leftCornerX + sunShadeLength3D / 2 - thkPlasterAtSillLeft * not(gs_stack_left) * not(gs_turn_plaster_show_3D),
		elevateSunShadeBottom + gs_reveal_bottom + gs_sunShade_winMountingCorr, 0

	call "SunShade" parameters		A			= sunShadeLength - casingThkAtWindow * 2,
				B								= ac_reveal_height - bottomCorrection - topCorrection,
				AC_HoleSideMaterial				= AC_HoleSideMaterial,
				sunShadeLength3D				= sunShadeLength3D - casingThkAtWindow * 2,
				sunShadeHeight3D				= ac_reveal_height - bottomCorrection3D - topCorrection3D,

				lod3D_sunShade					= lod3D_sunShade,
				gs_sunShade_iType				= gs_sunShade_iType,
				gs_shutter_nPanels				= gs_shutter_nPanels,
				gs_shutter_nPanels2				= gs_shutter_nPanels2,
				gs_shutter_iPanelPos			= gs_shutter_iPanelPos,

				gs_sunShade_bAutomaticHeight	= gs_sunShade_bAutomaticHeight,
				gs_sunShade_height				= gs_sunShade_height,

				gs_shutter_innerOffset			= gs_shutter_innerOffset,
				gs_shutter_closingDepth			= gs_shutter_closingDepth,
				gs_shutter_bExtraFrame			= gs_shutter_bExtraFrame,
				gs_shutter_extraFrameWidth		= gs_shutter_extraFrameWidth,
				gs_shutter_extraFrameThk		= gs_shutter_extraFrameThk,

				gs_slidingShutter_iCover		= gs_slidingShutter_iCover,
				gs_slidingShutter_railWidth		= gs_slidingShutter_railWidth,
				gs_slidingShutter_stickLength	= gs_slidingShutter_stickLength,
				gs_slidingShutter_stickRad		= gs_slidingShutter_stickRad,
				gs_slidingShutter_panelDist		= gs_slidingShutter_panelDist,

				gs_foldingShutter_iStacking		= gs_foldingShutter_iStacking,
				gs_foldingShutter_ovhg			= gs_foldingShutter_ovhg,

				gs_outFoldingShutter_panelIn	= gs_outFoldingShutter_panelIn,
				outfolding_innerPanelLeft		= outfolding_innerPanelLeft,
				outfolding_innerPanelRight		= outfolding_innerPanelRight,

				gs_shutter_opened				= gs_shutter_opened,
				gs_shutter_opAngle				= gs_shutter_opAngle,
				gs_shutter_opLength				= gs_shutter_opLength,
				gs_shutter_closedLength			= gs_shutter_closedLength,
				gs_shutter_opLength_1			= gs_shutter_opLength_1,
				gs_shutter_opLength_2			= gs_shutter_opLength_2,
				gs_shutter_opHeight				= gs_shutter_opHeight,
				gs_shutter_closedHeight			= gs_shutter_closedHeight,

				gs_shutPanel_archHeight			= gs_shutPanel_archHeight,
				gs_shutPanel_iType				= gs_shutPanel_iType,
				gs_cust_shutterPanel			= gs_cust_shutterPanel,
				gs_shutPanel_Thk				= gs_shutPanel_Thk,
				gs_shutPanel_frameWidth			= gs_shutPanel_frameWidth,
				gs_shutPanel_BDiffBottomFrame	= gs_shutPanel_BDiffBottomFrame,
				gs_shutPanel_frameWidthBottom	= gs_shutPanel_frameWidthBottom,
				gs_shutPanel_bAutomaticWidth	= gs_shutPanel_bAutomaticWidth,
				gs_shutPanel_panelWidth			= gs_shutPanel_panelWidth,
				gs_shutPanel_fieldThk			= gs_shutPanel_fieldThk,
				gs_shutPanel_louverThk			= gs_shutPanel_louverThk,
				gs_shutPanel_louverWidth		= gs_shutPanel_louverWidth,
				gs_shutPanel_louverAngle		= gs_shutPanel_louverAngle,
				gs_shutPanel_midFrameHorW		= gs_shutPanel_midFrameHorW,
				gs_shutPanel_midFrameVertW		= gs_shutPanel_midFrameVertW,
				gs_shutPanel_nHoleHor			= gs_shutPanel_nHoleHor,
				gs_shutPanel_nHoleVert			= gs_shutPanel_nHoleVert,
				gs_shutPanel_holeRadius			= gs_shutPanel_holeRadius,
				gs_shutPanel_ZBoardW			= gs_shutPanel_ZBoardW,
				gs_shutPanel_ZWidth				= gs_shutPanel_ZWidth,
				gs_shutPanel_ZThk				= gs_shutPanel_ZThk,
				gs_shutPanel_boardThkVert		= gs_shutPanel_boardThkVert,
				gs_shutPanel_boardThkHor		= gs_shutPanel_boardThkHor,
				gs_shutPanel_vertBoardW			= gs_shutPanel_vertBoardW,
				gs_shutPanel_horBoardW			= gs_shutPanel_horBoardW,

				gs_shutRoll_iPlacement			= gs_shutRoll_iPlacement,
				gs_shutRoll_iBoxType			= gs_shutRoll_iBoxType,
				gs_shutRoll_iRailPos			= gs_shutRoll_iRailPos,
				gs_shutRoll_cutWallBehind		= gs_shutRoll_cutWallBehind,
				gs_shutRoll_boxHeight			= gs_shutRoll_boxHeight,
				gs_shutRoll_boxWidth			= gs_shutRoll_boxWidth,
				gs_shutRoll_boxAngle			= gs_shutRoll_boxAngle,
				gs_shutRoll_iBoxDefaultSize		= gs_shutRoll_iBoxDefaultSize,
				gs_shutRoll_boxOffsetLeft		= gs_shutRoll_boxOffsetLeft,
				gs_shutRoll_boxOffsetRight		= gs_shutRoll_boxOffsetRight,
				gs_shutRoll_railDepth			= gs_shutRoll_railDepth,
				gs_shutRoll_distFromWall		= gs_shutRoll_distFromWall,
				gs_shutRoll_distFromHead		= gs_shutRoll_distFromHead,
				gs_shutRoll_segmentWidth		= gs_shutRoll_segmentWidth,

				gs_shutLam_iPlacement			= gs_shutLam_iPlacement,
				gs_shutLam_cutWallBehind		= gs_shutLam_cutWallBehind,
				gs_shutLam_boxHeight			= gs_shutLam_boxHeight,
				gs_shutLam_boxWidth				= gs_shutLam_boxWidth,
				gs_shutLam_bOpenBox				= gs_shutLam_bOpenBox,
				gs_shutLam_bRail				= gs_shutLam_bRail,
				gs_shutLam_coverWidth			= gs_shutLam_coverWidth,
				gs_shutLam_distFromWall			= gs_shutLam_distFromWall,
				gs_shutLam_distFromHead			= gs_shutLam_distFromHead,
				gs_shutLam_segmentWidth			= gs_shutLam_segmentWidth,
				gs_shutLam_rotation				= gs_shutLam_rotation,

				gs_shutLam2_boxHeight			= gs_shutLam2_boxHeight,
				gs_shutLam2_boxWidth			= gs_shutLam2_boxWidth,
				gs_shutLam2_distFromWindow		= gs_shutLam2_distFromWindow,
				gs_shutLam2_distFromHead		= gs_shutLam2_distFromHead,
				gs_shutLam2_axisFromHead		= gs_shutLam2_axisFromHead,
				gs_shutLam2_segmentWidth		= gs_shutLam2_segmentWidth,
				gs_shutLam2_rotation			= gs_shutLam2_rotation,

				gs_sunShade_cutLinesPen			= gs_sunShade_cutLinesPen,
				gs_sunShade_unCutLinesPen		= gs_sunShade_unCutLinesPen,
				gs_sunShade_cutFillType			= gs_sunShade_cutFillType,
				gs_sunShade_cutFillPen			= gs_sunShade_cutFillPen,
				gs_sunShade_cutFillBackPen		= gs_sunShade_cutFillBackPen,
				gs_sunShade_insFillType			= gs_sunShade_insFillType,
				gs_sunShade_insFillPen			= gs_sunShade_insFillPen,
				gs_sunShade_insFillBackPen		= gs_sunShade_insFillBackPen,

				gs_shutPanel_materialMain		= gs_shutPanel_materialMain,
				gs_shutPanel_materialAcc		= gs_shutPanel_materialAcc,
				gs_shutRoll_matBox				= gs_shutRoll_matBox,
				gs_shutRoll_matSegm				= gs_shutRoll_matSegm,
				gs_shutRoll_matRail				= gs_shutRoll_matRail,
				gs_shutLam_matBox				= gs_shutLam_matBox,
				gs_shutLam_matLam				= gs_shutLam_matLam,
				gs_shutSliding_matRail			= gs_shutSliding_matRail,

				radSill							= radSill,
				radBoard						= radBoard,
				gs_casingThkOnFacade			= casingThkOnFacade,
				gs_casingThkAtWindow			= casingThkAtWindow,
				iWindowShape					= iWindowShape,
				bLeftCornerFunction				= bLeftCornerFunction,
				bRightCornerFunction			= bRightCornerFunction,
				leftCornerAngle					= leftCornerAngle,
				rightCornerAngle				= rightCornerAngle,
				nArchResolution					= nArchResolution,
				smallRadiusEllips				= smallRadiusEllips,

				leftWallAngle					= leftWallAngle,
				rightWallAngle					= rightWallAngle,
				topWallAngle					= topWallAngle,
				bottomWallAngle					= bottomWallAngle,
				iRevealType						= iRevealType,
				slantedRevealDepth				= slantedRevealDepth,
				returned_parameters posSunShade,
									lengthSunShade,
									sunshadepoly
	del 1

endif



! =============================================================================
! Draw Casing
! =============================================================================
if not(bFeedBack) & bEnableCasing & (gs_trim_inside | gs_trim_outside) & lod3D_Casing > 0 then

	if WIDO_REVEAL_SIDE then
		addz WIDO_FRAME_THICKNESS
		mulz -1
	endif

	pen gs_frame_pen

	numCuts = 0

	if bEnableShutter & bDrawShutter & (gs_sunShade_iType = SUNSHADE_ROLLING | gs_sunShade_iType = SUNSHADE_EXTVENETIAN | gs_sunShade_iType = SUNSHADE_VENETIAN) then
		addz -WIDO_SILL
		if vardim1(sunshadepoly) > 1 then
			for i = 1 to (vardim1(sunshadepoly)-2) step 2
				put sunshadepoly[i], sunshadepoly[i+1], 31
			next i


			add 0, elevateSunShadeBottom + gs_reveal_bottom, posSunShade
			roty -90
			addz -lengthSunShade/2

!			prism_ nsp/3, lengthSunShade,
!				use(nsp)

			material gs_trim_in_mat
			cutform nsp/3, 1, 2,
				0, 0, 1, lengthSunShade,
				get (nsp)
			numCuts = numCuts + 1

			del 3
		endif
		del 1
	endif

	if (bEnableBoard & bDrawBoard & gs_trim_inside & not(gs_stack_bottom)) then
		if vardim1(boardPoly) > 1 then

			roty -90
			muly -1

			if (iWindowShape = SHAPE_T | \
				iWindowShape = SHAPE_HALF_T_LEFT | \
				iWindowShape = SHAPE_ARCHED_T | \
				iWindowShape = SHAPE_ARCHED_HALF_T_LEFT) & \
				gs_sidelight_parapet_hgt_left > 0 & \
				gs_board_inside_sl_left then

				add 0, -gs_sidelight_parapet_hgt_left, boardLeft_sL

				if curvedWall then
					if wallIsLeft then
						addx WIDO_FRAME_THICKNESS
						sideAngle = atn(boardLeft_sL / (WOD - WIDO_FRAME_THICKNESS))
						mulRatio = 1/cos(sideAngle)
						roty sideAngle
						addx -mulRatio * WIDO_FRAME_THICKNESS + EPS
					else
						sideAngle = atn(boardLeft_sL / WOD)
						mulRatio = 1/cos(sideAngle)
						roty sideAngle
						addx EPS
					endif

					for i = 1 to (vardim1(boardPoly)-1) step 2
						put mulRatio * boardPoly[i], boardPoly[i+1], 31
					next i

!					prism_ nsp/3, boardRight_sL - boardLeft_sL - EPS+0.1,
!						use (nsp)

					cutform nsp/3, 1, 2,
						-sin(sideAngle), 0, cos(sideAngle), boardRight_sL - boardLeft_sL - EPS,
						get (nsp)
					numCuts = numCuts + 1

					del 2 + wallIsLeft
				endif

				if not(curvedWall) | not(wallIsLeft) then
					for i = 1 to (vardim1(boardPoly)-1) step 2
						put boardPoly[i], boardPoly[i+1], 31
					next i

					addx EPS

!					prism_ nsp/3, boardRight_sL - boardLeft_sL - EPS,
!						use (nsp)

					cutform nsp/3, 1, 2,
						0, 0, 1, boardRight_sL - boardLeft_sL - EPS,
						get (nsp)
					numCuts = numCuts + 1

					del 1
				endif

				del 1
			endif

			if (iWindowShape = SHAPE_T | \
				iWindowShape = SHAPE_HALF_T_RIGHT | \
				iWindowShape = SHAPE_ARCHED_T | \
				iWindowShape = SHAPE_ARCHED_HALF_T_RIGHT) & \
				gs_sidelight_parapet_hgt_right > 0 & \
				gs_board_inside_sl_right then

				add 0, -gs_sidelight_parapet_hgt_right, -boardRight_sR

				if curvedWall then
					if wallIsLeft then
						addx WIDO_FRAME_THICKNESS
						sideAngle = atn(boardRight_sR / (WOD - WIDO_FRAME_THICKNESS))
						mulRatio = 1/cos(sideAngle)
						roty -sideAngle
						addx -mulRatio * WIDO_FRAME_THICKNESS + EPS
					else
						sideAngle = atn(boardRight_sR / WOD)
						mulRatio = 1/cos(sideAngle)
						roty -sideAngle
						addx EPS
					endif

					for i = 1 to (vardim1(boardPoly)-1) step 2
						put mulRatio * boardPoly[i], boardPoly[i+1], 31
					next i

!					prism_ nsp/3, boardRight_sR - boardLeft_sR + EPS,
!						use (nsp)

					cutform nsp/3, 1, 2,
						sin(sideAngle), 0, cos(sideAngle), boardRight_sR - boardLeft_sR + EPS,
						get (nsp)
					numCuts = numCuts + 1

					del 2 + wallIsLeft
				endif

				if not(curvedWall) | not(wallIsLeft) then
					for i = 1 to (vardim1(boardPoly)-1) step 2
						put boardPoly[i], boardPoly[i+1], 31
					next i

					addx EPS

!					prism_ nsp/3, boardRight_sR - boardLeft_sR + EPS,
!						use (nsp)

					cutform nsp/3, 1, 2,
						0, 0, 1, boardRight_sR - boardLeft_sR + EPS,
						get (nsp)
					numCuts = numCuts + 1

					del 1
				endif

				del 1
			endif

			if gs_board_inside then
				addz boardLeft

				for i = 1 to (vardim1(boardPoly)-1) step 2
					put boardPoly[i], boardPoly[i+1], 31
				next i

!				prism_ nsp/3, abs(boardRight) + abs(boardLeft),
!					use(nsp)

				material gs_trim_in_mat
				cutform nsp/3, 1, 2,
					0, 0, 1, abs(boardRight) + abs(boardLeft),
						get(nsp)
				numCuts = numCuts + 1

				del 1
			endif

			for ii= 1 to nsp
				dummy = get(1)
			next ii

			del 2
		endif
		if gs_trim_below_board then bBoardPlaneCut = 0
	else
		bBoardPlaneCut = 0
	endif

	if (gs_trim_outside & not(gs_stack_bottom)) then
		if (bEnableSill & bDrawSill) then
			if vardim1(sillPoly) > 1 then
				for i = 1 to (vardim1(sillPoly)-1) step 2
					put sillPoly[i], sillPoly[i+1], 31
				next i

				roty 90
				muly -1

				material gs_trim_out_mat

				if (iWindowShape = SHAPE_T | \
					iWindowShape = SHAPE_HALF_T_LEFT | \
					iWindowShape = SHAPE_ARCHED_T | \
					iWindowShape = SHAPE_ARCHED_HALF_T_LEFT) & \
					gs_sidelight_parapet_hgt_left > 0 & \
					gs_sill_outside_sl_left then

					add 0, -gs_sidelight_parapet_hgt_left - (gs_reveal_bottom_sL - gs_reveal_bottom), -sillLeft_sL

!					prism_ nsp/3, sillLeft_sL - sillRight_sL + EPS,
!						use (nsp)

					cutform nsp/3, 1, 2,
						0, 0, 1, sillLeft_sL - sillRight_sL + EPS,
						use (nsp)
					numCuts = numCuts + 1
					del 1
				endif

				if (iWindowShape = SHAPE_T | \
					iWindowShape = SHAPE_HALF_T_RIGHT | \
					iWindowShape = SHAPE_ARCHED_T | \
					iWindowShape = SHAPE_ARCHED_HALF_T_RIGHT) & \
					gs_sidelight_parapet_hgt_right > 0 & \
					gs_sill_outside_sl_right then

					add 0, -gs_sidelight_parapet_hgt_right - (gs_reveal_bottom_sR - gs_reveal_bottom), sillRight_sR

!					prism_ nsp/3, sillLeft_sR - sillRight_sR - EPS,
!						use (nsp)

					cutform nsp/3, 1, 2,
						0, 0, -1, sillRight_sR - sillLeft_sR - EPS,
						use (nsp)
					numCuts = numCuts + 1
					del 1
				endif

				if gs_sill_outside then
					addz -sillLeft
					cutform nsp/3, 1, 2,
						0, 0, 1, sillRight + sillLeft,
						use (nsp)
					numCuts = numCuts + 1

!					prism_ nsp/3, sillRight + sillLeft,
!						use (nsp)
					del 1
				endif

				for ii= 1 to nsp
					dummy = get(1)
				next ii

				del 2
			endif
		endif

		if bCasingBottomOutside & (isWindow) then bSillPlaneCut = 0
	else
		bSillPlaneCut = 0
	endif

	if (gs_trim_outside & not(gs_stack_bottom) & gs_wt_m = 4 & gs_sill_nosing2>0) then
			add -sillLeft-A, gs_frame_width_lower-gs_rebate_width, 0
			roty 90
			muly 1
!			prism_ 3, sillRight + sillLeft + 2 * A,
!				0, 0, 31,
!				2*gs_sill_thk/tan(gs_sill_angle2), -2*gs_sill_thk, 31,
!				0, -2*gs_sill_thk, 31

			cutform 3, 1, 2,
				0, 0, 1, sillRight + sillLeft + 2 * A,
				0, 0, 31,
				2*gs_sill_thk/tan(gs_sill_angle2), -2*gs_sill_thk, 31,
				0, -2*gs_sill_thk, 31
			numCuts = numCuts + 1
			del 3
	endif

	if (bEnableSill & bDrawSill & gs_trim_outside & not(gs_stack_bottom) & gs_wt_m = 4) then
			add -sillLeft, 0, gs_sill_slip_in
			roty 90
			muly 1
!			prism_ 3, sillRight + sillLeft,
!				0, 0, 31,
!				2*gs_sill_thk/tan(gs_sill_angle), -2*gs_sill_thk, 31,
!				0, -2*gs_sill_thk, 31

			cutform 3, 1, 2,
				0, 0, 1, sillRight + sillLeft,
				0, 0, 31,
				2*gs_sill_thk/tan(gs_sill_angle), -2*gs_sill_thk, 31,
				0, -2*gs_sill_thk, 31
			numCuts = numCuts + 1
			del 3
	endif

	if WIDO_REVEAL_SIDE then
		del 2
	endif

	bThresholdBoardPlaneCut	 = 0
	bThresholdSillPlaneCut	 = 0
	ThresholdSillSideHeight	 = 0
	ThresholdBoardSideHeight = 0
	if bEnableThreshold & bThreshold then
		if iThresholdType = TRESHOLD_BOTHEXTENDED or (iThresholdType = TRESHOLD_EXTENDED & WIDO_REVEAL_SIDE) then
			bThresholdSillPlaneCut 	= 1
			ThresholdSillSideHeight	= gs_treshold_thk
		endif
		if iThresholdType = TRESHOLD_BOTHEXTENDED or (iThresholdType = TRESHOLD_EXTENDED & not(WIDO_REVEAL_SIDE)) then
			bThresholdBoardPlaneCut  = 1
			ThresholdBoardSideHeight = gs_treshold_thk
		endif
	endif

	addy -overSizeLower

	if	iWindowShape = SHAPE_TRAPEZOID |\
		iWindowShape = SHAPE_PARALLELOGRAM then

		call "CasingTrapezoid" parameters A						= A,
			B						= openingHeight,
			AC_Hole_Position_Angle	= AC_Hole_Position_Angle,
		! --- Wallhole Geometry
			refWidth				= refWidth,
			leftWidth				= leftWidth,
			rightWidth				= rightWidth,
		! --- Macro Control Parameters
			iWindowShape			= iWindowShape,
			archHeight				= openingArchHeight,
		! --- Reveal Parameters
			iRevealType				= iRevealType,
			gs_reveal_left			= gs_reveal_left,
			gs_reveal_right			= gs_reveal_right,
			gs_reveal_top			= gs_reveal_top,
			gs_reveal_bottom		= gs_reveal_bottom,
		! --- Corner Functions
			bLeftCornerFunction	= bLeftCornerFunction,
			leftCornerAngle		= leftCornerAngle,
			leftConnWallThk		= leftConnWallThk,
			bRightCornerFunction= bRightCornerFunction,
			rightCornerAngle	= rightCornerAngle,
			rightConnWallThk	= rightConnWallThk,
		! --- Trim Parameters
			bDrawInsideTrim		= bDrawInsideTrim,
			bDrawOutsideTrim	= bDrawOutsideTrim,
			bCasingBottomOutside= bCasingBottomOutside,
			gs_trim_width_in	= gs_trim_width_in,
			gs_trim_width_out	= gs_trim_width_out,
			gs_trim_offs_in		= gs_trim_offs_in,
			gs_trim_offs_out	= gs_trim_offs_out,
			gs_trim_thk_in		= gs_trim_thk_in,
			gs_trim_thk_out		= gs_trim_thk_out,
			gs_tw_right_in		= gs_tw_right_in,
			gs_tw_bottom_in		= gs_tw_bottom_in,
			gs_tw_right_out		= gs_tw_right_out,
			gs_tw_bottom_out	= gs_tw_bottom_out,
			gs_frame_width			= gs_frame_width,
			bLinkCasingSurfaces		= bLinkCasingSurfaces,
		! --- Sill
			bDrawSill				= bDrawSill,
			iSillType				= iSillType,
			sillBottom				= sillBottom + overSizeLower,
			sillBottomOutside		= sillBottomOutside + overSizeLower,
			bSillPlaneCut			= bSillPlaneCut,
			sillSideHeight			= sillSideHeight,
			sillSideAngle			= sillSideAngle,
		! --- Board
			bDrawBoard				= bDrawBoard,
			boardBottom				= boardBottom,
			bBoardPlaneCut			= bBoardPlaneCut,
			boardSideHeight			= boardSideHeight,
			boardSideAngle			= boardSideAngle,
		! --- 2D Representation
			gs_trim_pen_cont	= gs_trim_pen_cont,
			gs_trim_fill_in		= gs_trim_fill_in,
			gs_trim_pen_bg_in	= gs_trim_pen_bg_in,
			gs_trim_pen_fg_in	= gs_trim_pen_fg_in,
			gs_trim_fill_out	= gs_trim_fill_out,
			gs_trim_pen_fg_out	= gs_trim_pen_fg_out,
			gs_trim_pen_bg_out	= gs_trim_pen_bg_out,
			! --- 3D Representation
			lod3D = lod3D,
			gs_frame_pen		= gs_frame_pen,
		! --- Materials
			gs_trim_in_mat		= gs_trim_in_mat,
			gs_trim_out_mat		= gs_trim_out_mat,
		! --- Corner Column Geometry
			gs_corner_column 		= gs_corner_column,
			gs_cc_width				= gs_cc_width,
			gs_cc_thk				= gs_cc_thk,
			gs_cc_pr				= gs_cc_pr,
		! --- USA Parameters
			gs_board_thk			= gs_board_thk
	else
		call "Casing" parameters gs_macro_version = 12,
			A						= A,
			B						= openingHeight,
			AC_Hole_Position_Angle	= AC_Hole_Position_Angle,
			AC_HoleSideMaterial		= AC_HoleSideMaterial,
		! --- Wallhole Geometry
			refWidth				= refWidth,
			leftWidth				= leftWidth,
			rightWidth				= rightWidth,
			radSill					= radSill,
			radBoard				= radBoard,
			WOD						= WOD,
			offsY					= offsY,
			sillRight				= sillRight,
			sillLeft				= sillLeft,
			sillLeft_sL				= sillLeft_sL,
			sillRight_sL			= sillRight_sL,
			sillLeft_sR				= sillLeft_sR,
			sillRight_sR			= sillRight_sR,
			boardLeft_sL			= boardLeft_sL,
			boardRight_sL			= boardRight_sL,
			boardLeft_sR			= boardLeft_sR,
			boardRight_sR			= boardRight_sR,
		! --- Macro Control Parameters
			isWindow				= isWindow,
			Suppress_isWindow		= Suppress_isWindow,
			gs_IsCurved				= gs_IsCurved,
			gs_CasingOutTypeEnable	= gs_CasingOutTypeEnable,
			gs_CasingInTypeEnable	= gs_CasingInTypeEnable,
			bParalellInCurvedWalls  = bParalellInCurvedWalls,
			bCasingTolerance		= bCasingTolerance,
			iWindowShape			= iWindowShape,
			archHeight				= openingArchHeight,
			nArchResolution			= nArchResolution,
			smallRadiusEllips		= smallRadiusEllips,
			bTelescopic				= bTelescopic,
			gs_frame_style_m		= iFrameStyle,
			iDoorType				= iDoorType,
		! --- Reveal Parameters
			iRevealType						= iRevealType,
			gs_reveal_left					= gs_reveal_left,
			gs_reveal_right					= gs_reveal_right,
			gs_reveal_top					= gs_reveal_top,
			gs_reveal_bottom				= gs_reveal_bottom,
			revealInnerLeft					= revealInnerLeft,
			revealInnerRight				= revealInnerRight,
			gs_reveal_splayed_innerTop		= gs_reveal_splayed_innerTop,
			gs_reveal_splayed_innerBottom	= gs_reveal_splayed_innerBottom,
			gs_reveal_double_innerTop		= gs_reveal_double_innerTop,
			gs_reveal_double_innerBottom	= gs_reveal_double_innerBottom,
			gs_reveal_left_angle			= gs_reveal_left_angle,
			gs_reveal_right_angle			= gs_reveal_right_angle,
			gs_reveal_top_angle				= gs_reveal_top_angle,
			gs_reveal_bottom_angle			= gs_reveal_bottom_angle,
			gs_reveal_right_sR				= gs_reveal_right_sR,
			gs_reveal_left_sL				= gs_reveal_left_sL,
			gs_reveal_double_innerRight_sR	= gs_reveal_double_innerRight_sR,
			gs_reveal_double_innerLeft_sL	= gs_reveal_double_innerLeft_sL,
			gs_reveal_bottom_sR				= gs_reveal_bottom_sR,
			gs_reveal_bottom_sL				= gs_reveal_bottom_sL,
			gs_reveal_double_innerBottom_sR	= gs_reveal_double_innerBottom_sR,
			gs_reveal_double_innerBottom_sL	= gs_reveal_double_innerBottom_sL,
			leftRevealPnts					= leftWallFrameRevealPnts,
			rightRevealPnts					= rightWallFrameRevealPnts,
			iRevealPointsIdx				= iRevealPointsIdx,
		! --- Corner Functions
			bLeftCornerFunction	= bLeftCornerFunction,
			leftCornerAngle		= leftCornerAngle,
			leftConnWallThk		= leftConnWallThk,
			bRightCornerFunction= bRightCornerFunction,
			rightCornerAngle	= rightCornerAngle,
			rightConnWallThk	= rightConnWallThk,
		! --- Sidelight
			gs_sidelight_WHole_width_left	= gs_sidelight_WHole_width_left,
			gs_sidelight_parapet_hgt_left	= gs_sidelight_parapet_hgt_left,
			gs_sidelight_WHole_width_right	= gs_sidelight_WHole_width_right,
			gs_sidelight_parapet_hgt_right	= gs_sidelight_parapet_hgt_right,
		! --- Tolerance
			gs_tolerance_left	= gs_tolerance_left,
			gs_tolerance_right	= gs_tolerance_right,
			gs_tolerance_upper	= gs_tolerance_upper,
			gs_tolerance_lower	= gs_tolerance_lower,
		! --- Oversize
			gs_left_oversize	= gs_left_oversize,
			gs_right_oversize	= gs_right_oversize,
			gs_upper_oversize	= gs_upper_oversize,
			gs_lower_oversize	= gs_lower_oversize,
		! --- Trim Parameters
			bDrawInsideTrim			= bDrawInsideTrim,
			bDrawOutsideTrim		= bDrawOutsideTrim,
			gs_trim_below_board		= gs_trim_below_board,
			bCasingBottomOutside	= bCasingBottomOutside,
			gs_trimtype_in_int		= gs_trimtype_in_int,
			gs_trimtype_out_int		= gs_trimtype_out_int,
			gs_trim_inside_uniform	= gs_trim_inside_uniform,
			gs_trim_outside_uniform	= gs_trim_outside_uniform,
			gs_trim_width_in	= gs_trim_width_in,
			gs_trim_width_out	= gs_trim_width_out,
			gs_trim_offs_in		= gs_trim_offs_in,
			gs_trim_offs_out	= gs_trim_offs_out,
			gs_trim_thk_in		= gs_trim_thk_in,
			gs_trim_thk_out		= gs_trim_thk_out,
			gs_tw_left_in		= gs_tw_left_in,
			gs_tw_right_in		= gs_tw_right_in,
			gs_tw_top_in		= gs_tw_top_in,
			gs_tw_bottom_in		= gs_tw_bottom_in,
			gs_tw_left_out		= gs_tw_left_out,
			gs_tw_right_out		= gs_tw_right_out,
			gs_tw_top_out		= gs_tw_top_out,
			gs_tw_bottom_out	= gs_tw_bottom_out,
			gs_trimov_top_left_out	= gs_trimov_top_left_out,
			gs_trimov_top_right_out	= gs_trimov_top_right_out,
			gs_trimov_bot_left_out	= gs_trimov_bot_left_out,
			gs_trimov_bot_right_out	= gs_trimov_bot_right_out,
			gs_trimov_top_left_in	= gs_trimov_top_left_in,
			gs_trimov_top_right_in	= gs_trimov_top_right_in,
			gs_trimov_bot_left_in	= gs_trimov_bot_left_in,
			gs_trimov_bot_right_in	= gs_trimov_bot_right_in,
			casingOverhangBottomSideOut	= casingOverhangBottomSideOut,
			bShowTrimInsideSplice	= 0,
			bShowTrimOutsideSplice	= 0,
			gs_trim_atframe_out		= gs_trim_atframe_out,
			gs_trimb_atframe_out	= gs_trimb_atframe_out,
			gs_trim_atframe_in		= gs_trim_atframe_in,
			gs_trim_stack_left		= gs_trim_stack_left,
			gs_trim_stack_right		= gs_trim_stack_right,
			gs_trim_stack_bottom	= gs_trim_stack_bottom,
			gs_trim_stack_top		= gs_trim_stack_top,
			gs_trim_show_cover_in	= gs_trim_show_cover_in,
			gs_trim_show_cover_out	= gs_trim_show_cover_out,
			gs_trim_jambext_nosing_in	= gs_trim_jambext_nosing_in,
			gs_trim_jambext_nosing_out	= gs_trim_jambext_nosing_out,
			gs_frame_width			= gs_frame_width,
			bLinkCasingSurfaces		= bLinkCasingSurfaces,
		! --- Complex Casing ---
			iCasingHeadTypeOut		= iCasingHeadTypeOut,
			bArchitraveCapital		= bArchitraveCapital,
			iArchitraveCapitalType	= iArchitraveCapitalType,
			architraveCapitalWidth	= architraveCapitalWidth,
		! --- Apron
			bEnableApron			= bEnableApron,
			gs_apron				= gs_apron,
			gs_apron_thk 			= gs_apron_thk,
			gs_apron_width			= gs_apron_width,
		! --- Sill
			bDrawSill				= bDrawSill,
			iSillType				= iSillType,
			sillBottom				= sillBottom + overSizeLower,
			sillBottomOutside		= sillBottomOutside + overSizeLower,
			bSillPlaneCut			= bSillPlaneCut,
			sillSideHeight			= sillSideHeight,
			sillSideAngle			= sillSideAngle,
			bThresholdSillPlaneCut	= bThresholdSillPlaneCut,
			ThresholdSillSideHeight	= ThresholdSillSideHeight,
		! --- Board
			bDrawBoard				= bDrawBoard,
			boardBottom				= boardBottom,
			bBoardPlaneCut			= bBoardPlaneCut,
			boardSideHeight			= boardSideHeight,
			boardSideAngle			= boardSideAngle,
			bThresholdBoardPlaneCut	= bThresholdBoardPlaneCut,
			ThresholdBoardSideHeight= ThresholdBoardSideHeight,
		! --- 2D Representation
			gs_trim_pen_cont		= gs_trim_pen_cont,
			gs_trim_fill_in		= gs_trim_fill_in,
			gs_trim_pen_bg_in	= gs_trim_pen_bg_in,
			gs_trim_pen_fg_in	= gs_trim_pen_fg_in,
			gs_trim_fill_out	= gs_trim_fill_out,
			gs_trim_pen_fg_out	= gs_trim_pen_fg_out,
			gs_trim_pen_bg_out	= gs_trim_pen_bg_out,
			! --- 3D Representation
			lod3D = lod3D,
			gs_frame_pen		= gs_frame_pen,
		! --- Materials
			gs_trim_in_mat		= gs_trim_in_mat,
			gs_trim_out_mat		= gs_trim_out_mat,
			gs_apron_mat		= gs_apron_mat,
		! --- Stacked Window
			bEnableCasingAtGanging	= bEnableCasingAtGanging,
			gs_stack_left		= gs_stack_left,
			gs_stack_right		= gs_stack_right,
			gs_stack_top		= gs_stack_top,
			gs_stack_bottom		= gs_stack_bottom,
			bBoardElevUsa		= bBoardElevUsa,
		! --- Corner Column Geometry
			gs_corner_column 		= gs_corner_column,
			gs_cc_width				= gs_cc_width,
			gs_cc_thk				= gs_cc_thk,
			gs_cc_pr				= gs_cc_pr,
			openingHeight			= openingHeight,
			gs_sill_outside_sl_left	= gs_sill_outside_sl_left,
			gs_sill_outside_sl_right= gs_sill_outside_sl_right,
			gs_board_inside_sl_left	= gs_board_inside_sl_left,
			gs_board_inside_sl_right= gs_board_inside_sl_right,
			gs_frame_wthk			= gs_frame_wthk,
		! --- USA Parameters
			gs_sill_angle 			= gs_sill_angle,
			gs_board_thk			= gs_board_thk,
			gs_fsill				= gs_fsill,
			gs_trim_offs_out_top	= gs_trim_offs_out_top,
			gs_trim_offs_out_bottom	= gs_trim_offs_out_bottom,
			trim_offs_out_modify	= trim_offs_out_modify,
			gs_sectgar				= gs_sectgar,
			gs_casing_nor			= gs_casing_nor,
			bCasingUSA				= bCasingUSA,

		! --- SunShade Parameters

			casingSetBackOnSides_out= casingSetBack3D_out,
			casingSetBackOnSides_in	= casingSetBack3D_in,
			lengthCasingSetBack		= lengthSunshade
	endif

	del 1

	for i=1 to numCuts
		cutend
	next i
	numCuts = 0
endif



! =============================================================================
! Draw Corner Column
! =============================================================================

if gs_corner_column & (bEnableCustomCornerLeft | bEnableCustomCornerRight) then
	call "Corner Column" parameters gs_macro_version = 12,
		openingHeight			= openingHeight,
		openingArchHeight		= openingArchHeight,
		leftWidth				= leftWidth,
		rightWidth				= rightWidth,
		ac_wallhole_width		= ac_wallhole_width,
	! --- Reveal Parameters
		iRevealType				= iRevealType,
		leftRevealPnts			= leftWallFrameRevealPnts,
		rightRevealPnts			= rightWallFrameRevealPnts,
		iRevealPointsIdx		= iRevealPointsIdx,
	! --- Corner Functions
		bLeftCornerFunction		= bLeftCornerFunction,
		leftCornerAngle			= leftCornerAngle,
		bRightCornerFunction	= bRightCornerFunction,
		rightCornerAngle		= rightCornerAngle,
	! --- Corner Column Geometry
		gs_corner_column 		= gs_corner_column,
		gs_cc_width				= gs_cc_width,
		gs_cc_thk				= gs_cc_thk,
		gs_cc_pr				= gs_cc_pr,
	! --- 2D Representation
		gs_frame_pen_cont		= gs_frame_pen_cont,
		gs_fillFr				= gs_fillFr,
		gs_penFr_fg				= gs_penFr_fg,
		gs_penFr_bg				= gs_penFr_bg,
	! --- 3D Representation
		gs_frame_pen			= gs_frame_pen,
	! --- Materials
		matCornerColumn			= matCornerColumn
endif

! =============================================================================

del 1	! elevationOffset


! =============================================================================
end sillRight,
	sillLeft,
	sillBottom,
	sillBottomOutside,
	sillSideHeight,
	sillSideAngle,
	sillPoly




