
! Contact person: @MikiEremiki (telegram)
! Блок кода создающий проекцию окна с размерами по осям всех переплетов вместо 2д-символа для использования в каталоге
! Размеры простраиваются снизу и справа
! Отсуп размерной линии вынесен в параметр (otstup), для возможности вывода в интерфейс (сейчас не реализовано) или просто в каталог, для ручной корректировки отступов размерной линии. 
! Оптимальный масштаб не менее 1:50
! mod 29/04/2025 kuvbur
dim window_dim[9][2]
PAPER_TO_MODEL = GLOB_SCALE / 1000
otstup_t = 0.7 : success = LIBRARYGLOBAL ("Libraryflobals-as", "otstup", otstup_t)
dopusk_r_t = 0 : success = LIBRARYGLOBAL ("Libraryflobals-as", "dopusk_r", dopusk_r_t)
stvorka_r_t = 0 : success = LIBRARYGLOBAL ("Libraryflobals-as", "stvorka_r", stvorka_r_t)
if abs(otstup_t)>0.001 then otstup = otstup_t
n = REQUEST ("Name_of_main", "", name)
is_door = strstr(name, "door")>0 or strstr(name, "Ворота")>0
dop_otstup_hor = 1 : dop_otstup_vert = 1
tolerance_half = (gs_tolerance_right-gs_tolerance_left)/2
dim coord_razm[1][10]
for k = 1 to 10
	coord_razm[1][k] = 0
next k
if is_door then mul2 -1,1
pen 1
if is_door then 
	gosub "door"
else
	gosub "window"
endif
IF dopusk_r_t = 1 THEN gosub "dopusk"
gosub "gabarit"
gosub "kontur"
end

"door":
	! ======================== Размеры боковых панелей
	!Если нет боковых панелей, то учитываем толщтну коробки
	korobka = 0
	IF gs_sidelight_width_right + gs_sidelight_width_left = 0 THEN korobka = gs_frame_width-gs_rebate_width

	! ======================== Размеры полотен дверей
	IF iOpeningMethod = 2 THEN !Двухстворчатая дверь
		dop_otstup_hor = dop_otstup_hor + 1
		coord_razm[1][1] = ac_wallhole_width/2 - gs_tolerance_right - gs_SecondLeaf_w - korobka
		coord_razm[1][2] = 0
		coord_razm[1][3] = ac_wallhole_width/2 - gs_tolerance_right
		coord_razm[1][4] = 0
		coord_razm[1][5] = otstup
		gosub "sub_macro_razm_X"

		coord_razm[1][1] = - ac_wallhole_width/2 + gs_tolerance_left
		coord_razm[1][2] = 0
		coord_razm[1][3] = - ac_wallhole_width/2 + gs_tolerance_left + ac_unit_width - gs_SecondLeaf_w - korobka
		coord_razm[1][4] = 0
		coord_razm[1][5] = otstup
		gosub "sub_macro_razm_X"
	ENDIF

	IF gs_door_transom = 1 THEN !Фрамуга двери
		dop_otstup_vert = dop_otstup_vert + 1
		coord_razm[1][1] = ac_unit_width/2
		coord_razm[1][2] = gs_tolerance_lower
		coord_razm[1][3] = ac_unit_width/2
		coord_razm[1][4] = gs_tolerance_lower + ac_unit_height - gs_transom_height
		coord_razm[1][5] = otstup
		gosub "sub_macro_razm_Y"
	
		coord_razm[1][1] = ac_unit_width/2
		coord_razm[1][2] = gs_tolerance_lower + ac_unit_height - gs_transom_height
		coord_razm[1][3] = ac_unit_width/2
		coord_razm[1][4] = gs_tolerance_lower + ac_unit_height
		coord_razm[1][5] = otstup
		gosub "sub_macro_razm_Y"
	ENDIF

	if iDoorPanelType = 26 or iDoorPanelType = 25 then !Остекление двери
		if iDoorPanelType = 26 then
			aa = 0.120
			bbe = -0.1
			bbs = 1.1
		endif

		if iDoorPanelType = 25 then
			aa = 0.120
			bbe = -0.1
			bbs = ac_leaf_height + bbe - 0.4 
		endif

		coord_razm[1][1] = -ac_unit_width/2+aa
		coord_razm[1][2] = gs_tolerance_lower
		coord_razm[1][3] = -ac_unit_width/2+aa
		coord_razm[1][4] = gs_tolerance_lower + bbs
		coord_razm[1][5] = -otstup
		gosub "sub_macro_razm_Y"

		coord_razm[1][1] = -ac_unit_width/2+aa
		coord_razm[1][2] = gs_tolerance_lower + bbs
		coord_razm[1][3] = -ac_unit_width/2+aa
		coord_razm[1][4] = ac_leaf_height + bbe
		coord_razm[1][5] = -otstup
		gosub "sub_macro_razm_Y"

		IF iOpeningMethod = 2 THEN !Двухстворчатая дверь
			coord_razm[1][1] = -ac_leaf_width/2 - tolerance_half + aa
			coord_razm[1][2] = ac_leaf_height + bbe
			coord_razm[1][3] = -ac_leaf_width/2 - tolerance_half - (gs_SecondLeaf_w-ac_leaf_width) - aa
			coord_razm[1][4] = ac_leaf_height + bbe
			coord_razm[1][5] = -otstup
			gosub "sub_macro_razm_X"
			coord_razm[1][1] = ac_leaf_width/2 - tolerance_half - gs_SecondLeaf_w + aa
			coord_razm[1][2] = ac_leaf_height + bbe
			coord_razm[1][3] = ac_leaf_width/2 - tolerance_half - aa
			coord_razm[1][4] = ac_leaf_height + bbe
			coord_razm[1][5] = -otstup
			gosub "sub_macro_razm_X"
		else
			coord_razm[1][1] = -ac_leaf_width/2 - tolerance_half + aa
			coord_razm[1][2] = ac_leaf_height + bbe
			coord_razm[1][3] = ac_leaf_width/2 - tolerance_half - aa
			coord_razm[1][4] = ac_leaf_height + bbe
			coord_razm[1][5] = -otstup
			gosub "sub_macro_razm_X"
		endif
	endif



	if bDoor then !Ворота
		doorHeight = 1.920 : if doorPrahType = 2 then doorHeight = 1.990
		if doorPositionX = 1 then
			coord_razm[1][1] = ac_wallhole_width/2 - 0.104
			coord_razm[1][2] = gs_tolerance_lower + doorHeight + doorPrahHeight
			coord_razm[1][3] = ac_wallhole_width/2 - 0.104 - doorWidth
			coord_razm[1][4] = gs_tolerance_lower + doorHeight + doorPrahHeight
			coord_razm[1][5] = otstup
			gosub "sub_macro_razm_X"
			coord_razm[1][1] = ac_wallhole_width/2 - 0.104 - doorWidth
			coord_razm[1][2] = gs_tolerance_lower + doorPrahHeight
			coord_razm[1][3] = ac_wallhole_width/2 - 0.104 - doorWidth
			coord_razm[1][4] = gs_tolerance_lower + doorHeight + doorPrahHeight
			coord_razm[1][5] = - otstup
			gosub "sub_macro_razm_Y"
		endif
		if doorPositionX = 2 then
			coord_razm[1][1] = doorWidth/2
			coord_razm[1][2] = gs_tolerance_lower + doorHeight + doorPrahHeight
			coord_razm[1][3] = -doorWidth/2
			coord_razm[1][4] = gs_tolerance_lower + doorHeight + doorPrahHeight
			coord_razm[1][5] = otstup
			gosub "sub_macro_razm_X"
			coord_razm[1][1] = doorWidth/2
			coord_razm[1][2] = gs_tolerance_lower + doorPrahHeight
			coord_razm[1][3] = doorWidth/2
			coord_razm[1][4] = gs_tolerance_lower + doorHeight + doorPrahHeight
			coord_razm[1][5] = otstup
			gosub "sub_macro_razm_Y"
		endif
		if doorPositionX = 3 then
			coord_razm[1][1] = -ac_wallhole_width/2 + 0.104 + doorWidth
			coord_razm[1][2] = gs_tolerance_lower + doorHeight + doorPrahHeight
			coord_razm[1][3] = -ac_wallhole_width/2 + 0.104
			coord_razm[1][4] = gs_tolerance_lower + doorHeight + doorPrahHeight
			coord_razm[1][5] = otstup
			gosub "sub_macro_razm_X"
			coord_razm[1][1] = -ac_wallhole_width/2 + 0.104 + doorWidth
			coord_razm[1][2] = gs_tolerance_lower + doorPrahHeight
			coord_razm[1][3] = -ac_wallhole_width/2 + 0.104 + doorWidth
			coord_razm[1][4] = gs_tolerance_lower + doorHeight + doorPrahHeight
			coord_razm[1][5] = otstup
			gosub "sub_macro_razm_Y"
		endif
	endif
return

"window":
	if iWindowType = 42 or iWindowType = 43 then
		if gs_repeat_modules = 0 then gs_repeat_modules_number = 1
		window_dim[1][1] = PaneHeight_01 : window_dim[1][2] = PaneWidth_01
		window_dim[2][1] = PaneHeight_02 : window_dim[2][2] = PaneWidth_02
		window_dim[3][1] = PaneHeight_03 : window_dim[3][2] = PaneWidth_03
		window_dim[4][1] = PaneHeight_04 : window_dim[4][2] = PaneWidth_04
		window_dim[5][1] = PaneHeight_05 : window_dim[5][2] = PaneWidth_05
		window_dim[6][1] = PaneHeight_06 : window_dim[6][2] = PaneWidth_06
		window_dim[7][1] = PaneHeight_07 : window_dim[7][2] = PaneWidth_07
		window_dim[8][1] = PaneHeight_08 : window_dim[8][2] = PaneWidth_08
		window_dim[9][1] = PaneHeight_09 : window_dim[9][2] = PaneWidth_09
		gs_MidPane_w = 0
		gs_SLight_w = 0
		gs_UTrans = 0
		gs_LTrans = 0
	endif

	if iWindowType = 42 then
		dop_otstup_hor = dop_otstup_hor + 1
		sum = 0
		for j=1 to gs_repeat_modules_number
			sum_one = 0
			for i = 1 to gs_panes_number-1
				sum_one = sum_one + window_dim[i][2]
				coord_razm[1][1] = -ac_unit_width/2 - tolerance_half + sum  : sum = sum + window_dim[i][2]
				coord_razm[1][2] = 0
				coord_razm[1][3] = -ac_unit_width/2 - tolerance_half + sum
				coord_razm[1][4] = 0
				coord_razm[1][5] = otstup
				gosub "sub_macro_razm_X"
			next i

			coord_razm[1][1] = -ac_unit_width/2 - tolerance_half + sum
			coord_razm[1][2] = 0
			if gs_repeat_modules then
				coord_razm[1][3] = -ac_unit_width/2 - tolerance_half + gs_axis_distance*j
			else
				coord_razm[1][3] = ac_unit_width/2 - tolerance_half
			endif
			coord_razm[1][4] = 0
			coord_razm[1][5] = otstup
			gosub "sub_macro_razm_X"
			sum = gs_axis_distance*j
		next j
	endif

	if iWindowType = 43 then
		dop_otstup_vert = dop_otstup_vert + 1
		sum = 0
		for j=1 to gs_repeat_modules_number
			for i = 1 to gs_panes_number-1
				coord_razm[1][1] = ac_unit_width/2
				coord_razm[1][2] = sum + gs_tolerance_lower : sum = sum + window_dim[i][1]
				coord_razm[1][3] = ac_unit_width/2
				coord_razm[1][4] = sum + gs_tolerance_lower
				coord_razm[1][5] = otstup
				gosub "sub_macro_razm_Y"
			next i
			coord_razm[1][1] = ac_unit_width/2
			coord_razm[1][2] = sum + gs_tolerance_lower
			coord_razm[1][3] = ac_unit_width/2
			if gs_repeat_modules then
				coord_razm[1][4] = gs_axis_distance*j + gs_tolerance_lower
			else
				coord_razm[1][4] = ac_unit_height + gs_tolerance_lower
			endif
			coord_razm[1][5] = otstup
			gosub "sub_macro_razm_Y"
			sum = gs_axis_distance*j
		next j
	endif

	if iWindowType <> 5 and iWindowType <> 6 and iWindowType <> 7 and iWindowType <> 9 then
		gs_MidPane_w = 0
	endif

	if iWindowType = 9 and not(gs_bSLight) then gs_MidPane_w = 0
	if iWindowType = 8 and not(gs_bSLight) then gs_SLight_w = 0

	if gs_SLight_w > 0 then
		dop_otstup_hor = 2
		coord_razm[1][1] = ac_unit_width/2 - tolerance_half - gs_SLight_w
		coord_razm[1][2] = 0
		coord_razm[1][3] = ac_unit_width/2 - tolerance_half
		coord_razm[1][4] = 0
		coord_razm[1][5] = otstup
		gosub "sub_macro_razm_X"
	endif

	if gs_MidPane_w > 0 then
		dop_otstup_hor = 2
		coord_razm[1][1] = ac_unit_width/2 - tolerance_half - gs_SLight_w - gs_MidPane_w
		coord_razm[1][2] = 0
		coord_razm[1][3] = ac_unit_width/2 - tolerance_half - gs_SLight_w
		coord_razm[1][4] = 0
		coord_razm[1][5] = otstup
		gosub "sub_macro_razm_X"
	endif

	if gs_MidPane_w > 0 or gs_SLight_w > 0 then
		dop_otstup_hor = 2
		coord_razm[1][1] = -ac_unit_width/2 - tolerance_half 
		coord_razm[1][2] = 0
		coord_razm[1][3] = ac_unit_width/2 - tolerance_half - gs_SLight_w - gs_MidPane_w
		coord_razm[1][4] = 0
		coord_razm[1][5] = otstup
		gosub "sub_macro_razm_X"
	endif

	if gs_UTrans = 1 then
		dop_otstup_vert = 2
		coord_razm[1][1] = ac_unit_width/2
		coord_razm[1][2] = gs_UTrans_h + gs_tolerance_lower
		coord_razm[1][3] = ac_unit_width/2
		coord_razm[1][4] = ac_unit_height + gs_tolerance_lower
		coord_razm[1][5] = otstup
		! Размер по высоте верхней фрамуги
		gosub "sub_macro_razm_Y"
	else
		gs_UTrans_h = ac_unit_height
	endif
	
	if gs_LTrans = 1 then
		dop_otstup_vert = 2
		coord_razm[1][1] = ac_unit_width/2
		coord_razm[1][2] = gs_tolerance_lower
		coord_razm[1][3] = ac_unit_width/2
		coord_razm[1][4] = gs_LTrans_h + gs_tolerance_lower
		coord_razm[1][5] = otstup
		! Размер по высоте нижней фрамуги
		gosub "sub_macro_razm_Y"
	else
		gs_LTrans_h = 0
	endif
	if gs_UTrans = 1 | gs_LTrans = 1 then
		dop_otstup_vert = 2
		coord_razm[1][1] = ac_unit_width/2
		coord_razm[1][2] = gs_LTrans_h + gs_tolerance_lower
		coord_razm[1][3] = ac_unit_width/2
		coord_razm[1][4] = gs_UTrans_h + gs_tolerance_lower
		coord_razm[1][5] = otstup
		! Размер по высоте боковой створки, если есть фрамуга/(-и)
		gosub "sub_macro_razm_Y"
	endif
return


"gabarit":
	coord_razm[1][1] = ac_unit_width/2
	coord_razm[1][2] = gs_tolerance_lower
	coord_razm[1][3] = ac_unit_width/2
	coord_razm[1][4] = ac_unit_height+gs_tolerance_lower
	coord_razm[1][5] = otstup * dop_otstup_vert
	gosub "sub_macro_razm_Y"

	coord_razm[1][1] = ac_wallhole_width/2 - gs_tolerance_right
	coord_razm[1][2] = 0
	coord_razm[1][3] = -ac_wallhole_width/2 + gs_tolerance_left
	coord_razm[1][4] = 0
	coord_razm[1][5] = -otstup * dop_otstup_hor
	gosub "sub_macro_razm_X"
return

"dopusk":
	coord_razm[1][1] = -ac_wallhole_width/2
	coord_razm[1][2] = 0
	coord_razm[1][3] = -ac_wallhole_width/2 + gs_tolerance_left
	coord_razm[1][4] = 0
	coord_razm[1][5] = otstup
	coord_razm[1][7] = -0.2
	gosub "sub_macro_razm_X"
	
	coord_razm[1][1] = ac_wallhole_width/2 - gs_tolerance_right
	coord_razm[1][2] = 0
	coord_razm[1][3] = ac_wallhole_width/2
	coord_razm[1][4] = 0
	coord_razm[1][5] = otstup
	coord_razm[1][7] = 0.2
	gosub "sub_macro_razm_X"
	
	coord_razm[1][1] = ac_unit_width/2
	coord_razm[1][2] = ac_unit_height + gs_tolerance_lower
	coord_razm[1][3] = ac_unit_width/2
	coord_razm[1][4] = ac_unit_height + gs_tolerance_upper + gs_tolerance_lower
	coord_razm[1][5] = otstup
	coord_razm[1][7] = 0.2
	gosub "sub_macro_razm_Y"

	coord_razm[1][1] = ac_unit_width/2
	coord_razm[1][2] = 0
	coord_razm[1][3] = ac_unit_width/2
	coord_razm[1][4] = gs_tolerance_lower
	coord_razm[1][5] = otstup
	coord_razm[1][7] = -0.2
	gosub "sub_macro_razm_Y"
return

"kontur":
	rect2 ac_wallhole_width/2,	0,	-ac_wallhole_width/2,	ac_wallhole_height
	rect2 ac_wallhole_width/2-gs_tolerance_right,	gs_tolerance_lower,	-ac_wallhole_width/2+gs_tolerance_left,	ac_wallhole_height-gs_tolerance_upper
	IF gs_sidelight_parapet_hgt_right > 0 THEN
		line2 ac_unit_width/2-gs_sidelight_width_right,	gs_tolerance_lower+gs_tolerance_low_right_sl+gs_sidelight_parapet_hgt_right,	ac_unit_width/2,		gs_tolerance_lower+gs_tolerance_low_right_sl+gs_sidelight_parapet_hgt_right
	ENDIF
	IF gs_sidelight_parapet_hgt_left > 0 THEN
		line2 -ac_unit_width/2+gs_sidelight_width_left,	gs_tolerance_lower+gs_tolerance_low_left_sl+gs_sidelight_parapet_hgt_left,		-ac_unit_width/2,		gs_tolerance_lower+gs_tolerance_low_left_sl+gs_sidelight_parapet_hgt_left
	ENDIF
return

"sub_macro_razm_Y":
	is_mirrored = is_door
	if not(SYMB_MIRRORED) then 
		is_mirrored = not(is_mirrored)
		mul2 -1,1
	endif
	if not(is_door) then
		is_mirrored = not(is_mirrored)
		mul2 -1,1
	endif 
	coord_razm[1][5] = coord_razm[1][5] / PAPER_TO_MODEL
	call "macro_razm" parameters 	coord_razm = coord_razm,
									type_razm = 2,
									Shrift = "", use_hotspot = 0, is_mirrored = is_mirrored
	gosub "clear_arr"
	if not(SYMB_MIRRORED) then del 1
	if not(is_door) then del 1
return

"sub_macro_razm_X":
	is_mirrored = is_door
	coord_razm[1][5] = coord_razm[1][5] / PAPER_TO_MODEL
	call "macro_razm" parameters 	coord_razm = coord_razm,
									type_razm = 1,
									Shrift = "", use_hotspot = 0, is_mirrored = is_mirrored
	gosub "clear_arr"
return

"clear_arr":
	for k = 6 to 10
		coord_razm[1][k] = 0
	next k
return
