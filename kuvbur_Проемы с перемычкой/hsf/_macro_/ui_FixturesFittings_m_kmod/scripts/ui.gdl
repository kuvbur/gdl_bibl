
bShowCasing					= bEnableCasing
bShowGanging				= (not(isWindow) & bEnableGanging) | \
								(isWindow) & not(isEmptyOpening) & \
								(iWindowShape = SHAPE_RECTANGULAR |\
								iWindowShape = SHAPE_ARCHED |\
								iWindowShape = SHAPE_TRAPEZOID |\
								iWindowShape = SHAPE_HALFCIRCLE |\
								iWindowShape = SHAPE_PENTAGON |\
								iWindowShape = SHAPE_QUARTERROUND |\
								iWindowShape = SHAPE_TRIANGLE |\
								iWindowShape = SHAPE_ELLIPSEARCH)
bShowThreshold				= bEnableThreshold | bForceToShowThresholdUI
bShowSill					= bEnableSill
bShowShutter				= bEnableShutter
bShowBoard					= bEnableBoard & (isWindow | ((bTShapedOpening | bArchedTShapedOpening) & not(isWindow)))
bShowRail					= bEnableRail
bShowCustomCorner			= isWindow & (bEnableCustomCornerLeft | bEnableCustomCornerRight)

bPopupControlForSillType	= not(bUSASillPage)
_bUseLineControls			= bTShapedOpening | bArchedTShapedOpening
numLineFeed					= 0

pageStartY 	= 0
if bSlidingLeaf then
	dyLineControls = 25
else
	dyLineControls = 28
endif
dy			= 24


! --------------------------------------------------------------------------------
! Cell position conditions for blocks
! --------------------------------------------------------------------------------
iUiCellPosition_Casing = 0
if bShowCasing then
	iUiCellPosition_Casing = 1		! POS_LEFT_TOP
endif

iUiCellPosition_Ganging = 0
if bShowGanging then
	iUiCellPosition_Ganging = 4		! POS_RIGHT_TOP
endif

iUiCellPosition_CustCorner = 0
if bShowCustomCorner then
	iUiCellPosition_CustCorner = 4 + 2*(bShowGanging&bShowShutter) + 1*(not(bShowShutter)&bShowGanging) ! POS_RIGHT_TOP | POS_RIGHT_BOTTOM | POS_RIGHT_MIDDLE
endif

iUiCellPosition_Shutter = 0
if bShowShutter then
	iUiCellPosition_Shutter = 4 + 1*(bShowGanging|bShowCustomCorner)		! POS_RIGHT_MIDDLE | POS_RIGHT_TOP
endif

iUiCellPosition_Threshold = 0
if bShowThreshold then
	iUiCellPosition_Threshold = 1 + 1*bShowCasing		! POS_LEFT_TOP | POS_LEFT_MIDDLE
endif

iUiCellPosition_Rail = 0		! exclusive to Threshold, except in normal sliding doors
if bShowRail then
	iUiCellPosition_Rail = not(bSlidingLeaf)*(1 + 1*bShowCasing) + bSlidingLeaf*(4+1*bShowGanging+1*bShowShutter)	! POS_LEFT_TOP | POS_LEFT_MIDDLE | POS_RIGHT_BOTTOM
endif

iUiCellPosition_Sill = 0
if bShowSill then
	iUiCellPosition_Sill = 1 + 1*bShowThreshold + 1*bShowCasing
endif

iUiCellPosition_Board = 0
if bShowBoard then
	iUiCellPosition_Board = iUiCellPosition_Sill + 1		! Always under Sill cell
endif

! --------------------------------------------------------------------------------
! Variables for separator handling
! --------------------------------------------------------------------------------
_bCellOccupied_1 = 0
_bCellOccupied_2 = 0
_bCellOccupied_3 = 0
_bCellOccupied_4 = 0
_bCellOccupied_5 = 0
_bCellOccupied_6 = 0


! ======================================================================
! Casing
! ======================================================================

if bShowCasing then
	__bCellPosition = iUiCellPosition_Casing
	__bEnableLineControls = 0
	gosub "cellOccupancy"
	gosub "cellCoordinates"

	y = yCell

	ui_style 0,1
	ui_outfield st_uiFixtureFitting[1], x1, y+4, xCellEnd-x1-1, 15	! Casing
	ui_style 0,0

	y = y + dy

	if	bEnableCasingNORUI then
		ui_infield{3} "gs_trim_outside", x1, y, 73 - x1, 19,
			7, "",
			1, 1,
			0, 0, 0, 0,
			"", st_uiFixtureFitting[2], 0,	! Outside
			"", st_uiFixtureFitting[2], 1	! Outside

		ui_infield{3} "iNORCasingType", x1 + 70, y, xJumpButton - x1 - 78, 19,
			8, "",
			18,
			1, 20, 20, 20, 20,
			18,	stNORCasingTypes[1],	ARCHITRAV_SIMPLE_CASING,
			17,	stNORCasingTypes[17],	ARCHITRAV_ALL,
			2,	stNORCasingTypes[2],	ARCHITRAV_SILL,
			3,	stNORCasingTypes[3],	ARCHITRAV_LEFT,
			4,	stNORCasingTypes[4],	ARCHITRAV_LEFT_SILL,
			5,	stNORCasingTypes[5],	ARCHITRAV_RIGHT,
			6,	stNORCasingTypes[6],	ARCHITRAV_RIGHT_SILL,
			7,	stNORCasingTypes[7], 	ARCHITRAV_LEFT_RIGHT,
			8,	stNORCasingTypes[8],	ARCHITRAV_LEFT_RIGHT_SILL,
			9,	stNORCasingTypes[9],	ARCHITRAV_ENTAB,
			10,	stNORCasingTypes[10],	ARCHITRAV_ENTAB_SILL,
			11,	stNORCasingTypes[11],	ARCHITRAV_ENTAB_LEFT,
			12,	stNORCasingTypes[12],	ARCHITRAV_ENTAB_LEFT_SILL,
			13,	stNORCasingTypes[13],	ARCHITRAV_ENTAB_RIGHT,
			14,	stNORCasingTypes[14],	ARCHITRAV_ENTAB_RIGHT_SILL,
			15,	stNORCasingTypes[15],	ARCHITRAV_ENTAB_LEFT_RIGHT,
			16,	stNORCasingTypes[16],	ARCHITRAV_ENTAB_LEFT_RIGHT_SILL
	else
		ui_infield{3} "gs_trim_outside", x1, y, xJumpButton - x1 - 49, 19,
			7, "",
			1, 1,
			0, 0, 0, 0,
			"", st_uiFixtureFitting[2], 0,	! Outside
			"", st_uiFixtureFitting[2], 1	! Outside
	endif

	if not(bUSACasingPage) then
		ui_pict_button ui_function, "...", "uiFunctionDOutsideCasing_flat(1)", xJumpButton, y, 36, 22, -iUiID_CasingOut
	endif

	y = y + dy
	ui_infield{3} "gs_trim_inside", x1, y, xJumpButton - x1 - 49, 19,
		7, "",
		1, 1,
		0, 0, 0, 0,
		"", st_uiFixtureFitting[3], 0,	! Inside
		"", st_uiFixtureFitting[3], 1	! Inside

	if bUSACasingPage then
		ui_pict_button ui_function, "...", "uiFunctionDWCasing_flat(1)", xJumpButton, y, 36, 22, -iUiID_Casing_USA
	else
		ui_pict_button ui_function, "...", "uiFunctionDInsideCasing_flat(1)", xJumpButton, y, 36, 22, -iUiID_CasingIn
	endif
endif

! ======================================================================
! Ganging
! ======================================================================

if bShowGanging then
	__bCellPosition = iUiCellPosition_Ganging
	__bEnableLineControls = 0
	gosub "cellOccupancy"
	gosub "cellCoordinates"

	y = yCell
	xPic = xCellEnd - 105

	ui_style 0,1
	ui_outfield st_uiFixtureFitting[4], x1, y+4, xPic-x1-5, 15		! Ganging
	ui_style 0,0

	y = y + 23

	stx = 0
	slx = 0
	srx = 0
	sbx = 0
	if bEnableCasingAtGanging then
		if gs_stack_top 	then stx = -10
		if gs_stack_left 	then slx = -10
		if gs_stack_right 	then srx = -10
		if gs_stack_bottom 	then sbx = -10
	endif

	if isWindow then
		if iWindowShape = SHAPE_RECTANGULAR then
			ui_pict 5, xPic, y, 29, 39, 1	! ui_window_shape_0.png

			if isEmptyOpening then
				ui_infield "gs_stack_left_contour",		xPic-20, y+10, 18, 19
				ui_infield "gs_stack_right_contour",	xPic+35, y+10, 18, 19
			else
				gosub "stackTop"
				gosub "stackLeft"
				gosub "stackRight"
				gosub "stackBottom"
			endif
		endif
		if iWindowShape = SHAPE_ARCHED then
			ui_pict 6,xPic, y, 29, 39, 1	! ui_window_shape_1.png
			if isEmptyOpening then
				ui_infield "gs_stack_left_contour",	xPic-20,y+10, 18, 19
				ui_infield "gs_stack_right_contour",	xPic+35,y+10, 18, 19
			else
				gosub "stackBottom"
			endif
		endif
		if iWindowShape = SHAPE_TRAPEZOID then
			ui_pict 7, xPic,y, 29,39, 1	! ui_window_shape_11.png
		endif
		if iWindowShape = SHAPE_HALFCIRCLE then
			ui_pict 9, xPic,y+19, 29, 15, 1	! ui_window_shape_HalfRound.png
		endif
		if iWindowShape = SHAPE_PENTAGON then
			ui_pict 10, xPic,y, 29, 39, 1	! ui_window_shape_Pentagon.png
		endif
		if iWindowShape = SHAPE_QUARTERROUND then
			ui_pict 11, xPic,y, 29, 30, 1	! ui_window_shape_QuartRound.png
		endif
		if iWindowShape = SHAPE_TRIANGLE then
			ui_pict 12, xPic,y, 29, 30, 1	! ui_window_shape_Triangle.png
		endif
		if iWindowShape = SHAPE_ELLIPSEARCH then
			ui_pict 8, xPic,y, 29, 39, 1	! ui_door_shape_EllipseArch.png
		endif

		if	iWindowShape = SHAPE_TRAPEZOID |\
			iWindowShape = SHAPE_HALFCIRCLE |\
			iWindowShape = SHAPE_PENTAGON |\
			iWindowShape = SHAPE_QUARTERROUND |\
			iWindowShape = SHAPE_TRIANGLE |\
			iWindowShape = SHAPE_ELLIPSEARCH then

			gosub "stackBottom"
		endif
		if 	iWindowShape = SHAPE_TRAPEZOID |\
			iWindowShape = SHAPE_PENTAGON then

			gosub "stackLeft"
			gosub "stackRight"
		endif
		if 	iWindowShape = SHAPE_QUARTERROUND then
			gosub "stackLeft"
		endif
	else
		if	iWindowShape = SHAPE_RECTANGULAR | \
			iWindowShape = SHAPE_T | \
			iWindowShape = SHAPE_HALF_T_LEFT | \
			iWindowShape = SHAPE_HALF_T_RIGHT then
	
			ui_pict 1, xPic, y, 29, 49, 1	! ui_door_shape_0.png
			gosub "stackTop"
			if not(bD2Sliding)	 then gosub "stackLeft"
			if not(bSlidingDoor) then gosub "stackRight"
		endif
		if	iWindowShape = SHAPE_ARCHED | \
			iWindowShape = SHAPE_ARCHED_T | \
			iWindowShape = SHAPE_ARCHED_HALF_T_LEFT | \
			iWindowShape = SHAPE_ARCHED_HALF_T_RIGHT then
	
			ui_pict 2, xPic, y, 29, 49, 1	! ui_door_shape_1.png
		endif
	endif
endif


! ======================================================================
! Threshold
! ======================================================================

if bShowThreshold then
	__bCellPosition = iUiCellPosition_Threshold
	__bEnableLineControls = _bUseLineControls
	gosub "cellOccupancy"
	gosub "cellCoordinates"
	if _bUseLineControls then
		y = ySingleLine  + dyLineControls*numLineFeed
	else
		y = yCell
	endif

	ui_style 0,1
	ui_infield{3} "bThreshold", x1, y, xCellEnd-x1-1, 19,
		7, "",
		1, 1,
		0, 0, 0, 0,
		"", st_uiFixtureFitting[5], 0,	! Threshold
		"", st_uiFixtureFitting[5], 1	! Threshold
	ui_style 0,0

	if	_bUseLineControls then
		ui_infield{3} "iThresholdType", x2, y, x3 - x2, 19,
			8, "",
			1, 1,
			x2+65-x1-30, 18, x2+65-x1-30, 18,
			1,	stThresholdTypes[1], TRESHOLD_OFF,			! Off
			1,	stThresholdTypes[2], TRESHOLD_NORMAL,		! Normal Threshold
			1,	stThresholdTypes[3], TRESHOLD_EXTENDED,		! Extended Threshold
			1,	stThresholdTypes[4], TRESHOLD_BOTHEXTENDED,	! Extended Both Sides
			1,	stThresholdTypes[5], TRESHOLD_BENEATHPANEL,	! Beneath Panel
			1,	stThresholdTypes[6], TRESHOLD_PROFILED,		! Profiled
			1,	stThresholdTypes[7], TRESHOLD_FLAT,			! Flat Terskel
			1,	stThresholdTypes[8], TRESHOLD_ANSLAG,		! Anslagterskel
			1,	stThresholdTypes[9], TRESHOLD_GUMMI,		! Gummiterskel m slepelist
			1,	stThresholdTypes[10], TRESHOLD_HEVE,		! Heveterskel
			1,	stThresholdTypes[11], TRESHOLD_HC,			! H-C Terskel
			1,	stThresholdTypes[12], TRESHOLD_BRANN,		! Brannterskel
			1,	stThresholdTypes[13], TRESHOLD_BADEROMS,	! Baderomsterskel
			1,	stThresholdTypes[14], TRESHOLD_AKKUSTIKK,	! Akkustikkterskel
			1,	stThresholdTypes[15], TRESHOLD_SIMPLE,		! Simple Threshold
			1,	stThresholdTypes[16], TRESHOLD_SLOPINGEXT,	! Sloping Extended
			1,	stThresholdTypes[17], TRESHOLD_METAL		! Metal

		y = y + 20 - 22
		if bThresholdSillPage then
			ui_pict_button ui_function, "...", "uiFunctionThreshold_flat(1)", xJumpButton, y, 36, 22, -iUiID_ThresholdSill
		else
			ui_pict_button ui_function, "...", "uiFunctionThreshold_flat(1)", xJumpButton, y, 36, 22, -iUiID_Threshold
		endif
		numLineFeed = numLineFeed + 1
	else
		y = y + 22
		px = 90
		py = 45
		cx = px + 10
		cy = py + 4

		ui_infield{3} "iThresholdType", x1, y, x2 - x1, 60,
			2, 3,											! ui_threshold_type_new.png
			16, 1,
			cx, cy, px, py,
			1,	stThresholdTypes[2], TRESHOLD_NORMAL,		! Normal Threshold
			2,	stThresholdTypes[3], TRESHOLD_EXTENDED,		! Extended Threshold
			3,	stThresholdTypes[4], TRESHOLD_BOTHEXTENDED,	! Extended Both Sides
			4,	stThresholdTypes[5], TRESHOLD_BENEATHPANEL,	! Beneath Panel
			5,	stThresholdTypes[6], TRESHOLD_PROFILED,		! Profiled
			6,	stThresholdTypes[7], TRESHOLD_FLAT,			! Flat Terskel
			7,	stThresholdTypes[8], TRESHOLD_ANSLAG,		! Anslagterskel
			8,	stThresholdTypes[9], TRESHOLD_GUMMI,		! Gummiterskel m slepelist
			9,	stThresholdTypes[10], TRESHOLD_HEVE,		! Heveterskel
			10,	stThresholdTypes[11], TRESHOLD_HC,			! H-C Terskel
			11,	stThresholdTypes[12], TRESHOLD_BRANN,		! Brannterskel
			12,	stThresholdTypes[13], TRESHOLD_BADEROMS,	! Baderomsterskel
			13,	stThresholdTypes[14], TRESHOLD_AKKUSTIKK,	! Akkustikkterskel
			14,	stThresholdTypes[15], TRESHOLD_SIMPLE,		! Simple Threshold
			15,	stThresholdTypes[16], TRESHOLD_SLOPINGEXT,	! Sloping Extended
			16,	stThresholdTypes[17], TRESHOLD_METAL		! Metal
	
		y = y + 60 - 22 - 2
		if bThresholdSillPage then
			ui_pict_button ui_function, "...", "uiFunctionThreshold_flat(1)", xJumpButton, y, 36, 22, -iUiID_ThresholdSill
		else
			ui_pict_button ui_function, "...", "uiFunctionThreshold_flat(1)", xJumpButton, y, 36, 22, -iUiID_Threshold
		endif
	endif
endif

! ======================================================================
! Sunshade
! ======================================================================

if bShowShutter then
	__bCellPosition = iUiCellPosition_Shutter
	__bEnableLineControls = _bUseLineControls
	gosub "cellOccupancy"
	gosub "cellCoordinates"
	if _bUseLineControls then
		y = ySingleLine  + dyLineControls*numLineFeed
	else
		y = yCell
	endif

	ui_style 0,1
	ui_infield{3} "bSunshade", x1, y, xCellEnd-x1-1, 19,
		7, "",
		1, 1,
		0, 0, 0, 0,
		"", st_uiFixtureFitting[11], 0,	! Sunshade
		"", st_uiFixtureFitting[11], 1	! Sunshade
	ui_style 0,0

	if	_bUseLineControls then
		ui_infield{3} "gs_sunShade_iType", x2, y, x3 - x2, 19,
			8, "",
			1, 1,
			0,0,0,0,
			1, stSunShadeTypes[1], SUNSHADE_NONE,
			1, stSunShadeTypes[2], SUNSHADE_DECORATIVE,
			1, stSunShadeTypes[3], SUNSHADE_SHUTTER,
			1, stSunShadeTypes[4], SUNSHADE_FOLDING,
			1, stSunShadeTypes[5], SUNSHADE_OUTFOLDING,
			1, stSunShadeTypes[6], SUNSHADE_SLIDING,
			1, stSunShadeTypes[7], SUNSHADE_ROLLING,
			1, stSunShadeTypes[8], SUNSHADE_EXTVENETIAN,
			1, stSunShadeTypes[9], SUNSHADE_VENETIAN

		y = y + 20 - 22 - 2
		ui_pict_button ui_function, "...", "uiFunctionSunshade_flat(1)", xJumpButton, y, 36, 22, -iUiID_Shutter
		numLineFeed = numLineFeed + 1
	else
		y = y + 22

		px = 90
		py = 45
		cx = px + 10
		cy = py + 4

		ui_infield{3} "gs_sunShade_iType", x1, y, x2 - x1, 60,
				2, 13,					! ui_shutter_type_new.png
				8, 1,
				cx, cy, px, py,
				1, stSunShadeTypes[2], SUNSHADE_DECORATIVE,
				2, stSunShadeTypes[3], SUNSHADE_SHUTTER,
				3, stSunShadeTypes[4], SUNSHADE_FOLDING,
				4, stSunShadeTypes[5], SUNSHADE_OUTFOLDING,
				5, stSunShadeTypes[6], SUNSHADE_SLIDING,
				6, stSunShadeTypes[7], SUNSHADE_ROLLING,
				7, stSunShadeTypes[8], SUNSHADE_EXTVENETIAN,
				8, stSunShadeTypes[9], SUNSHADE_VENETIAN

		y = y + 60 - 22 - 2
		ui_pict_button ui_function, "...", "uiFunctionSunshade_flat(1)", xJumpButton, y, 36, 22, -iUiID_Shutter
	endif
endif


! ======================================================================
! Sill
! ======================================================================

if bShowSill then
	__bCellPosition = iUiCellPosition_Sill
	__bEnableLineControls = _bUseLineControls
	gosub "cellOccupancy"
	gosub "cellCoordinates"
	if _bUseLineControls then
		y = ySingleLine  + dyLineControls*numLineFeed
	else
		y = yCell
	endif

	if _bUseLineControls then

		ui_style 0,1
		ui_outfield st_uiFixtureFitting[6], x1, y+4, xCellEnd-x1-1, 15	!Sill
		ui_style 0,0

		ui_infield{3} "iSillType", x2, y, x3 - x2, 19,
			8, "",
			1, 1,
			0,0,0,0,
			1,	stSillTypes[1], SILL_TIMBER,		! Timber Sill
			1,	stSillTypes[2], SILL_BRICK,			! Brick Sill
			1,	stSillTypes[3], SILL_STONE,			! Stone Sill
			1,	stSillTypes[4], SILL_CERAMIC,		! Ceramic Sill
			1,	stSillTypes[5], SILL_ETHERNIT,		! Eternite Sill
			1,	stSillTypes[6], SILL_CONCRETE_TUB,	! Concrete Tub
			1,	stSillTypes[7], SILL_ALUMINIUM,		! Aluminum Sill
			1,	stSillTypes[8], SILL_SOLID_11,		! Solid Sill 1.1 / Massiv-Fensterbank 1.1 (CHE)
			1,	stSillTypes[9], SILL_SOLID_12,		! Solid Sill 1.2 / Massiv-Fensterbank 1.2 (CHE)
			1,	stSillTypes[10], SILL_SOLID_22,		! Solid Sill 2.2 / Massiv-Fensterbank 2.2 (CHE)
			1,	stSillTypes[11], SILL_METAL_1,		! Metal Sheet / Metallfensterbank 1.1 (CHE)
			1,	stSillTypes[13], SILL_METAL_2,		! Metal Sheet 2 (CHE)
			1,	stSillTypes[12], SILL_PARALLEL,		! Solid Parallel (CHE)
			1,	stSillTypes[14], SILL_PARALLEL_2,	! Solid Parallel 2 (CHE)
			1,	stSillTypes[15], SILL_SIMPLEBLOCK,	! Simple Block
			1,	stSillTypes[16], SILL_BLOCK,		! Block Sill
			1,	stSillTypes[17], SILL_DUTCH			! Dutch Profiled Sill

		if bThresholdSillPage then
			ui_pict_button ui_function, "...", "uiFunctionSill_flat(1)", xJumpButton, y, 36, 22, -iUiID_ThresholdSill
		else
			ui_pict_button ui_function, "...", "uiFunctionSill_flat(1)", xJumpButton, y, 36, 22, -iUiID_Sill
		endif

		y = y + 25
		numLineFeed = numLineFeed + 1
		xSillDoor = x1
		if iWindowShape = SHAPE_T | iWindowShape = SHAPE_ARCHED_T then
			ui_infield{3} "gs_sill_outside_sl_right", x1, y, 143, 19,
				7, "",
				1, 1,
				0, 0, 0, 0,
				"", st_uiFixtureFitting[7], 0,		! Under Sidelight 1
				"", st_uiFixtureFitting[7], 1		! Under Sidelight 1

			ui_infield{3} "gs_sill_outside_sl_left", x1 + 145, y, 143, 19,
				7, "",
				1, 1,
				0, 0, 0, 0,
				"", st_uiFixtureFitting[8], 0,		! Under Sidelight 2
				"", st_uiFixtureFitting[8], 1		! Under Sidelight 2
			xSillDoor = x1 + 290
		else
			if iWindowShape = SHAPE_HALF_T_LEFT | iWindowShape = SHAPE_ARCHED_HALF_T_LEFT then
				ui_infield{3} "gs_sill_outside_sl_left", x1, y, 143, 19,
					7, "",
					1, 1,
					0, 0, 0, 0,
					"", st_uiFixtureFitting[9], 0,	! Under Sidelight
					"", st_uiFixtureFitting[9], 1	! Under Sidelight
				xSillDoor = x1 + 145
			else
				if iWindowShape = SHAPE_HALF_T_RIGHT | iWindowShape = SHAPE_ARCHED_HALF_T_RIGHT then
					ui_infield{3} "gs_sill_outside_sl_right", x1, y, 143, 19,
						7, "",
						1, 1,
						0, 0, 0, 0,
						"", st_uiFixtureFitting[9], 0,	! Under Sidelight
						"", st_uiFixtureFitting[9], 1		! Under Sidelight
				xSillDoor = x1 + 145
				endif
			endif
		endif

		ui_infield{3} "gs_sill_outside", xSillDoor, y, 145, 19,
			7, "",
			1, 1,
			0, 0, 0, 0,
			"", st_uiFixtureFitting[10], 0,		! Under Door
			"", st_uiFixtureFitting[10], 1		! Under Door

		numLineFeed = numLineFeed + 1
	else

		ui_style 0,1
		ui_infield{3} "gs_sill_outside", x1, y, xJumpButton - x1 - 1, 19,
			7, "",
			1, 1,
			0, 0, 0, 0,
			"", st_uiFixtureFitting[6], 0,	! Sill
			"", st_uiFixtureFitting[6], 1	! Sill
		ui_style 0,0

		if bPopupControlForSillType then
			y = y + 22

			px = 90
			py = 45
			cx = px + 10
			cy = py + 4

			ui_infield{3} "iSillType", x1, y, x2 - x1, 60,
					2, 4,									! ui_sill_type_new.png
					17, 1,
					cx, cy, px, py,
					1,	stSillTypes[1], SILL_TIMBER,		! Timber Sill
					2,	stSillTypes[2], SILL_BRICK,			! Brick Sill
					3,	stSillTypes[3], SILL_STONE,			! Stone Sill
					4,	stSillTypes[4], SILL_CERAMIC,		! Ceramic Sill
					5,	stSillTypes[5], SILL_ETHERNIT,		! Eternite Sill
					6,	stSillTypes[6], SILL_CONCRETE_TUB,	! Concrete Tub
					7,	stSillTypes[7], SILL_ALUMINIUM,		! Aluminum Sill
					8,	stSillTypes[8], SILL_SOLID_11,		! Solid Sill 1.1 / Massiv-Fensterbank 1.1 (CHE)
					9,	stSillTypes[9], SILL_SOLID_12,		! Solid Sill 1.2 / Massiv-Fensterbank 1.2 (CHE)
					10,	stSillTypes[10], SILL_SOLID_22,		! Solid Sill 2.2 / Massiv-Fensterbank 2.2 (CHE)
					11,	stSillTypes[11], SILL_METAL_1,		! Metal Sheet / Metallfensterbank 1.1 (CHE)
					13,	stSillTypes[13], SILL_METAL_2,		! Metal Sheet 2 (CHE)
					12,	stSillTypes[12], SILL_PARALLEL,		! Solid Parallel (CHE)
					14,	stSillTypes[14], SILL_PARALLEL_2,	! Solid Parallel 2 (CHE)
					15,	stSillTypes[15], SILL_SIMPLEBLOCK,	! Simple Block
					16,	stSillTypes[16], SILL_BLOCK,		! Block Sill
					17,	stSillTypes[17], SILL_DUTCH			! Dutch Profiled Sill
		endif

		y = y + 36 * bPopupControlForSillType
		if bThresholdSillPage then
			ui_pict_button ui_function, "...", "uiFunctionSill_flat(1)", xJumpButton, y, 36, 22, -iUiID_ThresholdSill
		else
			if bUSASillPage then
				ui_pict_button ui_function, "...", "uiFunctionSill_flat(1)", xJumpButton, y, 36, 22, -iUiID_Sill_USA
			else
				ui_pict_button ui_function, "...", "uiFunctionSill_flat(1)", xJumpButton, y, 36, 22, -iUiID_Sill
			endif
		endif
	endif
endif


! ======================================================================
! Board
! ======================================================================

if	bShowBoard then
	__bCellPosition = iUiCellPosition_Board
	__bEnableLineControls = _bUseLineControls
	gosub "cellOccupancy"
	gosub "cellCoordinates"
	if _bUseLineControls then
		y = ySingleLine  + dyLineControls*numLineFeed
	else
		y = yCell
	endif

	if isWindow then
		ui_style 0, 1
		ui_infield{3} "gs_board_inside", x1, y, xJumpButton - x1 - 1, 19,
				7, "",
				1, 1,
				0, 0, 0, 0,
				"", st_uiFixtureFitting[12], 0,		! Board
				"", st_uiFixtureFitting[12], 1		! Board
		ui_style 0,0
	else
		ui_style 0, 1
		ui_outfield st_uiFixtureFitting[12], x1, y+4, x2-x1-1, 15	! Board
		ui_style 0, 0
	
		y = y + 25
		numLineFeed = numLineFeed + 1

		if iWindowShape = SHAPE_T | iWindowShape = SHAPE_ARCHED_T then
			ui_infield{3} "gs_board_inside_sl_right", x1, y, 143, 19,
					7, "",
					1, 1,
					0, 0, 0, 0,
					"", st_uiFixtureFitting[7], 0,		! Under Sidelight 1
					"", st_uiFixtureFitting[7], 1		! Under Sidelight 1

			ui_infield{3} "gs_board_inside_sl_left", x1 + 145, y, 143, 19,
					7, "",
					1, 1,
					0, 0, 0, 0,
					"", st_uiFixtureFitting[8], 0,		! Under Sidelight 2
					"", st_uiFixtureFitting[8], 1		! Under Sidelight 2
		else
			if iWindowShape = SHAPE_HALF_T_LEFT | iWindowShape = SHAPE_ARCHED_HALF_T_LEFT then
				ui_infield{3} "gs_board_inside_sl_left", x1, y, 143, 19,
						7, "",
						1, 1,
						0, 0, 0, 0,
						"", st_uiFixtureFitting[9], 0,	! Under Sidelight
						"", st_uiFixtureFitting[9], 1	! Under Sidelight
			else
				if iWindowShape = SHAPE_HALF_T_RIGHT | iWindowShape = SHAPE_ARCHED_HALF_T_RIGHT then
					ui_infield{3} "gs_board_inside_sl_right", x1, y, 143, 19,
						7, "",
						1, 1,
						0, 0, 0, 0,
						"", st_uiFixtureFitting[9], 0,	! Under Sidelight
						"", st_uiFixtureFitting[9], 1	! Under Sidelight
				endif
			endif
		endif
		numLineFeed = numLineFeed + 1
	endif

	if bUSASillPage then
		ui_pict_button ui_function, "...", "uiFunctionBoard_flat(1)", xJumpButton, y, 36, 22, -iUiID_Sill_USA	
	else
		ui_pict_button ui_function, "...", "uiFunctionBoard_flat(1)", xJumpButton, y, 36, 22, -iUiID_Board
	endif
endif

! ======================================================================
! Rail
! ======================================================================

if bShowRail then
	__bCellPosition = iUiCellPosition_Rail
	__bEnableLineControls = _bUseLineControls
	gosub "cellOccupancy"
	gosub "cellCoordinates"

	if _bUseLineControls then
		y = ySingleLine  + dyLineControls*numLineFeed
	else
		y = yCell
	endif

	ui_style 0,1
	if bSlidingLeaf | ((bUSARail | bNORRail) & bMultipanelDoor)then
		stRail = st_uiFixtureFitting[17]	! Rail under Leaves | Leading Track USA
	else
		stRail = st_uiFixtureFitting[13]	! Rail
	endif
	ui_infield{3} "gs_door_rail", x1, y, xCellEnd-x1-1, 19,
		7, "",
		2,
		1, 20, 20, 20, 20,
		0, stRail, 0,
		1, stRail, 1

	numLineFeed = numLineFeed + 1
	ui_style 0,0

	y = y + 20

	if (bUSARail | bNORRail) and not(bMultipanelDoor) then
		ui_infield{3} "iRailPosition", x1, y, xJumpButton-x1, 19,
				8, "",
				1, 1,
				0, 0, 0, 0,
				"", stRailTypes[2], 1,		! Rail at Bottom
				"", stRailTypes[3], 2,		! Rail at Top
				"", stRailTypes[4], 3		! Rail at Top and Bottom
	else
		if bExtSlidingDoor | bPocketDoor then
			ui_infield{3} "gs_door_rail_ext_m", x1, y, xJumpButton-x1, 19,
					8, "",
					1, 1,
					0, 0, 0, 0,
					"", stRailTypes[1], 1,		! Off
					"", stRailTypes[2], 2,		! Rail at Bottom
					"", stRailTypes[3], 3,		! Rail at Top
					"", stRailTypes[4], 4		! Rail at Top and Bottom
		endif
	endif
endif

! ======================================================================
! Custom Corner
! ======================================================================

if bShowCustomCorner then
	__bCellPosition = iUiCellPosition_CustCorner
	__bEnableLineControls = 0
	gosub "cellOccupancy"
	gosub "cellCoordinates"

	dy = 25
	y = yCell

	ui_style 0,1
	if ac_cw_function then
		stCornerWindowTooltip = `Деактивация маркера отменяет автоматическое соединение углового окна.`
		ui_infield{3} "ac_corner_window", x1, y, xCellEnd-x1, 19,
					7, "",
					1, 1,
					0, 0, 0, 0,
					"", `Функция Углового Окна`, 0,
					"", `Функция Углового Окна`, 1 ui_tooltip stCornerWindowTooltip

		dy = 20
		y = y + dy
	endif

	ui_outfield st_uiFixtureFitting[14], x1, y+4, xJumpButton-x1-1, 15	! Custom Corner
	ui_pict_button ui_function, "...", "uiFunctionCustomCorner_flat(1)", xJumpButton, y, 36, 22, -iUiID_CustomCorner
	ui_style 0,0

	y = y + dy
	ui_infield{3} "bRightCornerFunction", x1, y, xCellEnd - x1, 19,
		7, "",
		2,
		1, 20, 20, 20, 20,
		0, st_uiFixtureFitting[15], 0,	! Right
		1, st_uiFixtureFitting[15], 1	! Right

	y = y + dy
	ui_infield{3} "bLeftCornerFunction", x1, y, xCellEnd - x1, 19,
		7, "",
		2,
		1, 20, 20, 20, 20,
		0, st_uiFixtureFitting[16], 0,	! Left
		1, st_uiFixtureFitting[16], 1	! Left

		y = y + 20 - 22 - 2
endif


! ================================================================================
! Separators
! ===============================================================================
_bFullHorizontalSep = 0

if bShowCasing and _bCellOccupied_1 and _bCellOccupied_4 and _bCellOccupied_2 then
	_bFullHorizontalSep = 1
	ui_separator 0, pageStartY + 85, 444, pageStartY + 85
endif

if _bCellOccupied_1 and _bCellOccupied_4 then
	if _bFullHorizontalSep then
		ui_separator 222, pageStartY + 3, 222, pageStartY + 85-3
		if not(_bUseLineControls) and _bCellOccupied_2 then
			ui_separator 222, pageStartY + 85 + 6, 222, 264
		endif
	else
		if _bCellOccupied_4 and _bCellOccupied_5 then
			ui_separator 222 + 5, pageStartY + 85, 444, pageStartY + 85
		endif
		ui_separator 222, pageStartY + 5, 222, 264
	endif
endif

if _bCellOccupied_5 and _bCellOccupied_6 and not(_bUseLineControls) then
	ui_separator 222 + 5, pageStartY + 177, 444, pageStartY + 177
endif


! ================================================================================
end
! ================================================================================


! --------------------------------------------------------------------------------
! input parameters
! __bCellPosition : containing actual parameter position number
! output parameters
! bCellOccupied_n: set to 1, if cell is used
! --------------------------------------------------------------------------------
"cellOccupancy":
! --------------------------------------------------------------------------------
	if __bCellPosition = POS_LEFT_TOP		then _bCellOccupied_1 = 1
	if __bCellPosition = POS_LEFT_MIDDLE 	then _bCellOccupied_2 = 1
	if __bCellPosition = POS_LEFT_BOTTOM	then _bCellOccupied_3 = 1
	if __bCellPosition = POS_RIGHT_TOP		then _bCellOccupied_4 = 1
	if __bCellPosition = POS_RIGHT_MIDDLE	then _bCellOccupied_5 = 1
	if __bCellPosition = POS_RIGHT_BOTTOM	then _bCellOccupied_6 = 1
return


! --------------------------------------------------------------------------------
! input parameters
! __bCellPosition : containing actual parameter position number
! __bEnableLineControls: T or ArchedT shape and single line parameter group
! output parameters
! x1: cell left coordinate
! x2: end of popups or checkboxes
! xJumpButton: start coordinate of jump button
! xCellEnd: left border of cell
! yCell: start y coordinate for cell
! --------------------------------------------------------------------------------
"cellCoordinates":
! --------------------------------------------------------------------------------
	if __bCellPosition = POS_LEFT_TOP | __bCellPosition = POS_RIGHT_TOP then
		yCell = pageStartY
	endif

	if __bEnableLineControls then
		ySingleLine = pageStartY + 95
		dy = 30
		x1 = 5
		x2 = 222
		x3 = x2+175
		xJumpButton = 407
		xCellEnd = x2		
	else
		if __bCellPosition = POS_LEFT_MIDDLE | __bCellPosition = POS_RIGHT_MIDDLE then
			yCell = pageStartY + 88 + 5
		endif
		if __bCellPosition = POS_LEFT_BOTTOM | __bCellPosition = POS_RIGHT_BOTTOM then
			yCell = pageStartY + 177 + 5
			if __bCellPosition = iUiCellPosition_Board and not(bPopupControlForSillType) then
			! USA window board controls are right under Sill controls
				yCell = pageStartY + 88 + 5	 + 30
			endif
		endif
		if __bCellPosition = POS_LEFT_TOP | __bCellPosition = POS_LEFT_MIDDLE | __bCellPosition = POS_LEFT_BOTTOM then
			x1 = 5
			x2 = x1+163
			xJumpButton = x2 + 8
			xCellEnd = 222
		endif
		if __bCellPosition = POS_RIGHT_TOP | __bCellPosition = POS_RIGHT_MIDDLE | __bCellPosition = POS_RIGHT_BOTTOM then
			x1 = 222+10
			x2 = x1+163
			xJumpButton = x2 + 8
			xCellEnd = 444
		endif
	endif
return


! --------------------------------------------------------------------------------
"stackTop":
! --------------------------------------------------------------------------------

	ui_infield "gs_stack_top",		xPic+7+stx, y-20, 18, 19
	if bEnableCasingAtGanging & gs_stack_top then
		ui_infield "gs_trim_stack_top",		xPic+7+stx+20, y-20, 18, 19
		ui_outfield st_uiFixtureFitting[1], xPic+7+stx+40, y-20+2, 40, 15, 4 * not(gs_trim_inside | gs_trim_outside)	! Casing
	endif

return


! --------------------------------------------------------------------------------
"stackLeft":
! --------------------------------------------------------------------------------

	ui_infield "gs_stack_left",	xPic-20, y+12+slx, 18, 19
	if bEnableCasingAtGanging & gs_stack_left then
		ui_infield "gs_trim_stack_left",	xPic-20, y+12+slx+20, 18, 19
		ui_outfield st_uiFixtureFitting[1], xPic-62, y+12+slx+20+2, 40, 15, 4 * not(gs_trim_inside | gs_trim_outside)	! Casing
	endif

return


! --------------------------------------------------------------------------------
"stackRight":
! --------------------------------------------------------------------------------

	ui_infield "gs_stack_right",	xPic+35, y+12+srx, 18, 19
	if bEnableCasingAtGanging & gs_stack_right then
		ui_infield "gs_trim_stack_right",	xPic+35,	y+12+srx+20, 18, 19
		ui_outfield st_uiFixtureFitting[1], xPic+35+20,	y+12+srx+20+2, 50, 15, 4 * not(gs_trim_inside | gs_trim_outside)	! Casing
	endif

return


! --------------------------------------------------------------------------------
"stackBottom":
! --------------------------------------------------------------------------------

	ui_infield "gs_stack_bottom",	xPic+7+sbx, y+42, 18, 19
	if bEnableCasingAtGanging & gs_stack_bottom then
		ui_infield "gs_trim_stack_bottom",	xPic+7+sbx+20, y+42, 18, 19
		ui_outfield st_uiFixtureFitting[1], xPic+7+sbx+40, y+42+2, 40, 15, 4 * not(gs_trim_inside | gs_trim_outside)	! Casing
	endif

return





