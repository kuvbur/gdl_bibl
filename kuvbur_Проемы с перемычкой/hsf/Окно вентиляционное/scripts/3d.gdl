
	lod3D = 0										! Don't draw anything
	if gs_detlevel_3D = stDetail[3] then lod3D = 1	! Simple
	if gs_detlevel_3D = stDetail[2] then lod3D = 2	! Detailed
	if gs_detlevel_3D = stDetail[5] | gs_detlevel_3D = stDetail[6] then
		if (GLOB_CONTEXT = 4 | GLOB_CONTEXT = 24 | GLOB_CONTEXT = 6) then
			lod3D = 5								! Chinese
		else
			lod3D = 2
		endif
	endif
	
	gs_fillFr		= gs_bFills * gs_fillFr
	gs_penFr_fg		= gs_bFills * gs_penFr_fg
	gs_penFr_bg		= gs_bFills * gs_penFr_bg
	
	gs_fillSash		= gs_bFills * gs_fillSash
	gs_penSash_fg	= gs_bFills * gs_penSash_fg
	gs_penSash_bg	= gs_bFills * gs_penSash_bg
	
	if not(gs_shadow) then shadow off
	
	
	! =============================================================================
	! GS Corner Window Functions
	! =============================================================================
	
	call "GS Corner Window Functions_kmod",
		parameters all	iWindowShape			= iWindowShape,
						gs_IsCurved				= gs_IsCurved,
						bParalellInCurvedWalls	= bParalellInCurvedWalls,
						lod3D					= lod3D,
						bOpeningDirection		= bOpeningDirection,
						bDisabeMirroring		= bDisabeMirroring,
		returned_parameters	ac_unit_width, ac_unit_height,
							gs_frame_ovhg_left_out,
							gs_frame_ovhg_right_out,
							gs_frame_ovhg_top_out,
							gs_frame_ovhg_bottom_out,
							gs_frame_ovhg_left_in,
							gs_frame_ovhg_right_in,
							gs_frame_ovhg_top_in,
							gs_frame_ovhg_bottom_in,
							bMirrored,
							xform11, xform12, xform13, xform14,
							xform21, xform22, xform23, xform24,
							xform31, xform32, xform33, xform34,
	
							bOplines3d, opLineType3dIn, opLineType3dOut, gs_opline_style_m, gs_opLinePen,
							bShowAddHotspots, bShowAddHotspotsForIS, bShowUnitHotspots
	
	
	! =============================================================================
	! Block for operator mode
	! =============================================================================
	
	if GLOB_CONTEXT > 40 & GLOB_CONTEXT < 50 then
		prism_ 4, WIDO_FRAME_THICKNESS,
			-ac_unit_width/2, 0, 15,
			 ac_unit_width/2, 0, 15,
			 ac_unit_width/2, ac_unit_height, 15,
			-ac_unit_width/2, ac_unit_height, 15
	
		end
	endif
	
	if gs_DemolitionOrNew = stDemolitionOrNew[3] & gs_bShowNewOnCC then end		! New
	
	if lod3D = 0 then end
	
	xform	xform11, xform12, xform13, xform14,
			xform21, xform22, xform23, xform24,
			xform31, xform32, xform33, xform34
	
	
	if lod3D = 5 then	! Chinese
		fr_sect_fill_type	= gs_fillShCover
		fr_sect_fill_fg		= gs_penShCov_fg
		fr_sect_fill_bg		= gs_penShCov_bg
	else
		fr_sect_fill_type	= gs_fillFr
		fr_sect_fill_fg		= gs_penFr_fg
		fr_sect_fill_bg		= gs_penFr_bg
	endif
	
	
	A = ac_unit_width
	B = ac_unit_height
	
	
	! =============================================================================
	! Draw window frame and sash
	! =============================================================================
	
	gs_optype_m_01 = SASH_FIXED
	gs_optype_m_02 = SASH_FIXED
	gs_optype_m_03 = SASH_FIXED
	gs_optype_m_04 = SASH_FIXED
	gs_optype_m_05 = SASH_FIXED
	
	rotx 90
	
	call "Rectangular_window_frame_kmod" parameters A= A,
				B								= B,
				ZZYZX							= ZZYZX,
				ac_cw_function					= ac_cw_function,
				ac_corner_angle					= ac_corner_angle,
				ac_diff_con_wall_thk			= ac_diff_con_wall_thk,
				ac_con_wall_thk					= ac_con_wall_thk,
				lod3D							= lod3D,
				gs_opening_dir_num				= gs_opening_dir_num,
				gs_SashText_typ_num				= gs_SashText_typ_num,
				gs_frame_pen					= gs_frame_pen,
				gs_frame_mat					= gs_frame_mat,
				gs_frame_mat2					= gs_frame_mat2,
				gs_frame_thk					= gs_frame_thk,
				gs_frame_width					= gs_frame_width,
				gs_frame_width_left				= gs_frame_width,
				gs_frame_width_upper			= gs_frame_width,
				gs_frame_width_lower			= gs_frame_width,
				gs_UTrans						= 0,
				gs_UTrans_w						= 0,
				gs_UTrans_h						= 0,
				gs_LTrans						= 0,
				gs_LTrans_w						= 0,
				gs_LTrans_h						= 0,
				gs_frame_pen_cont				= gs_frame_pen_cont,
				gs_fillFr						= fr_sect_fill_type,
				gs_penFr_fg						= fr_sect_fill_fg,
				gs_penFr_bg						= fr_sect_fill_bg,
				gs_sash_thk						= gs_sash_thk,
				gs_sash_width					= gs_sash_width,
				gs_frame_ovhg_left_out			= gs_frame_ovhg_left_out,
				gs_frame_ovhg_right_out			= gs_frame_ovhg_right_out,
				gs_frame_ovhg_top_out			= gs_frame_ovhg_top_out,
				gs_frame_ovhg_bottom_out		= gs_frame_ovhg_bottom_out,
				gs_frame_ovhg_left_in			= gs_frame_ovhg_left_in,
				gs_frame_ovhg_right_in			= gs_frame_ovhg_right_in,
				gs_frame_ovhg_top_in			= gs_frame_ovhg_top_in,
				gs_frame_ovhg_bottom_in			= gs_frame_ovhg_bottom_in,
				CasementIDArray					= CasementIDArray,
				gs_optype_m_01					= gs_optype_m_01,
				gs_optype_m_02					= gs_optype_m_02,
				gs_optype_m_03					= gs_optype_m_03,
				gs_optype_m_04					= gs_optype_m_04,
				gs_optype_m_05					= gs_optype_m_05,
				gs_bSLight						= 0,
				gs_SLight_w						= 0,
				gs_Mullion_w					= 0,
				gs_Mullion_w_left				= 0,
				gs_Mullion_Top					= 0,
				gs_Mullion_Bott					= 0,
				sash_num						= 1,
				gs_stack_left					= gs_stack_left,
				gs_stack_right					= gs_stack_right,
				gs_stack_bottom					= gs_stack_bottom,
				gs_stack_top					= gs_stack_top,
				bShowUnitHotspots				= bShowUnitHotspots
	
	body -1
	
	
	! =============================================================================
	! Louvers
	! =============================================================================
	
	louvresh = B - 2 * gs_frame_width
	louvresn = int(louvresh / gs_sash_width)
	louvresw = louvresh / louvresn
	
	material gs_sash_mat
	pen gs_sash_pen
	
	if lod3D = 5 then	! CHI model
	
		sect_fill fr_sect_fill_type, fr_sect_fill_bg, fr_sect_fill_fg, gs_frame_pen_cont
	
		add -A/2 + gs_frame_width, gs_frame_width, 0
		block A - 2*gs_frame_width, B - 2*gs_frame_width, gs_frame_thk
	
		addy louvresw/2
		for i=1 to louvresn
			lin_ 0,0,0, A - 2*gs_frame_width,0,0
			lin_ 0,0,gs_frame_thk, A - 2*gs_frame_width,0,gs_frame_thk
			addy louvresw
		next i
		del louvresn + 2
	else
		if bOpeningDirection then
			mulz -1
			addz -gs_frame_thk
		endif
	
		add -a/2+gs_frame_width,gs_frame_width+louvresw/2,gs_frame_thk/2
		roty 90
		for i=1 to louvresn
			rotz opa_a
			if grill=`Стиль 1` then
				prism_ 5,a - 2*gs_frame_width,
					-louvresw/2,-gs_sash_thk/2,15,
					 louvresw/2,-gs_sash_thk/2,15,
					 louvresw/2, gs_sash_thk/2,15,
					-louvresw/2, gs_sash_thk/2,15,
					-louvresw/2,-gs_sash_thk/2,-1
			endif
			if grill=`Стиль 2` then
				prism_ 9,a - 2*gs_frame_width,
					-louvresw/2, gs_sash_thk/2,15,
					-louvresw/2,-2.5*gs_sash_thk,15,
					-louvresw/2+gs_sash_thk,-2.5*gs_sash_thk,15,
					-louvresw/2+gs_sash_thk,-gs_sash_thk/2,15,
					 louvresw/2,-gs_sash_thk/2,15,
					 louvresw/2, 2.5*gs_sash_thk,15,
					 louvresw/2-gs_sash_thk, 2.5*gs_sash_thk,15,
					 louvresw/2-gs_sash_thk,gs_sash_thk/2,15,
					-louvresw/2, gs_sash_thk/2,-1
			endif
			del 1
			addy louvresw
		next i
		del louvresn + 2
	
		unID=1000
		hotspot 0,		b-(gs_frame_width+louvresw/2),	gs_frame_thk/2,				unID,opa_a,6:unID=unID+1
		hotspot a/2,	b-(gs_frame_width+louvresw/2),	gs_frame_thk/2,				unID,opa_a,7:unID=unID+1
		hotspot 0,		b-(gs_frame_width+louvresw/2),	gs_frame_thk/2+louvresw/2,	unID,opa_a,4+128:unID=unID+1
		hotspot 0,		b-(gs_frame_width+louvresw/2),	gs_frame_thk/2+louvresw/2,	unID,opa_a,5
	endif

