<?xml version="1.0" encoding="UTF-8"?>
<Symbol IsArchivable="false" IsPlaceable="true" MainGUID="B74085AD-E76B-4D27-A8D9-8680D3AB7A9B" MigrationValue="Normal" Owner="1196638531" Signature="1196644685" Version="43">
<Ancestry SectVersion="1" SectionFlags="0" SubIdent="0" Template="false">
	<MainGUID>F938E33A-329D-4A36-BE3E-85E126820996</MainGUID>
	<MainGUID>103E8D2C-8230-42E1-9597-46F84CCE28C0</MainGUID>
	<MainGUID>6ACDA889-69B2-4EC5-936C-CB1DA7032A92</MainGUID>
</Ancestry>

<CalledMacros SectVersion="2" SectionFlags="0" SubIdent="0">
	<Macro>
		<MName><![CDATA["macro_razm"]]></MName>
		<MainGUID>13FF491C-A806-4362-ADF9-FED3E95F2359</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["macro_otm"]]></MName>
		<MainGUID>BC75FFAC-EF9E-44EA-84BF-240AC9BCC90A</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["Libraryflobals-perem"]]></MName>
		<MainGUID>1A5E44F8-F396-462B-A9C3-8ACFD3BDB548</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["LibraryGlobals13"]]></MName>
		<MainGUID>9137124A-DDF2-4A06-A532-5FC0CE873258</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["Libraryflobals-kzh"]]></MName>
		<MainGUID>F72542D8-E777-4AC3-B709-60D3307436E1</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["Спецификатор"]]></MName>
		<MainGUID>88E821BC-A95F-4CEA-9F73-6500A781AE09</MainGUID>
	</Macro>
</CalledMacros>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_3D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
if not(flag_not_use) then end
show_perem_3d = 3 : success = LIBRARYGLOBAL ("Libraryflobals-perem", "show_perem_3d", show_perem_3d)
if show_perem_3d<EPS then end

isPlan = (GLOB_VIEW_TYPE=2)
isPrew = (GLOB_PREVIEW_MODE<>0)
isEdit = GLOB_FEEDBACK_MODE

jt = 15

SHADOW OFF, OFF
RESOL 5

if vartype(otstup_2)=1 and main_name<>"" then
	addy ac_wallhole_height
	addz -otstup_2
	bRotated = (round_int (SYMB_ROTANGLE) = 180)
	if bRotated=0 and SYMB_MIRRORED=1 then mulx -1
	if bRotated=1 and SYMB_MIRRORED=0 then mulx -1
	mulz sgn(otstup)
	if not((AC_Wall_Direction_Type=0) or (AC_Wall_Direction_Type=2)) then
		if abs(otstup)-900<EPS then addz -abs(otstup)
	else
		if abs(otstup)-900<EPS then addz abs(otstup)
	endif
	mulz -sgn(otstup)
	if WIDO_REVEAL_SIDE then mulz -1

	if perem_mul then
		roty -90
		addx -max_t/2
	else
		roty 90
		addx -max_t/2
	endif
else
	roty -90
	rotz -90
endif


if isShow[1] then
	HOTSPOT	0, perem_dh[1]+perem_h[inx_start_type]/2, 0,	unID,	perem_zazor_type[1], 1: unID=unID+1
	HOTSPOT	perem_zazor_type[1], perem_dh[1]+perem_h[inx_start_type]/2, 0,	unID,	perem_zazor_type[1],	2: unID=unID+1
	HOTSPOT	-1, perem_dh[1]+perem_h[inx_start_type]/2, 0,	unID,	perem_zazor_type[1],	3: unID=unID+1
endif
x = perem_zazor_type[1]
for i=inx_start_type to flag_not_use
	if perem_qty_by_type[i]>EPS then
		if perem_type[i]=iType_UGMIRR or perem_type[i]=iType_UG or perem_type[i]=iType_UGx2 then
			if perem_type[i] = iType_UG then
				dx = max(perem_t[i], perem_zazor[i])
			else
				dx = perem_zazor[i]
			endif
			dt = dx
		else
			dx = perem_t[i]*perem_qty_by_type[i]+perem_zazor[i]*(perem_qty_by_type[i]-1)
			dt = -perem_t[i]
		endif
		if isShow[i] then
			dh = perem_dh[i]
			h = perem_h[i]
			ttt = perem_t[i]
			zaz = perem_zazor[i]
			l = perem_dlin[i]
			hl = perem_dl[i]-l/2
			if (i-1)>EPS then
				HOTSPOT	x,		dh+h/4,				0,	unID,	perem_zazor_type[i],	1+256: unID=unID+1
				HOTSPOT	x+perem_zazor_type[i],		dh+h/4,		0,	unID,	perem_zazor_type[i],	2: unID=unID+1
				HOTSPOT	-1,		dh+h/4,				0,	unID,	perem_zazor_type[i],	3: unID=unID+1
				x = x + perem_zazor_type[i]
			endif
			hx = x+abs(dt/2)*(dt<EPS)+(perem_type[i]=iType_UGMIRR)*dt
			if abs(i-1)<EPS then gosub "hotspot_3d_1"
			if abs(i-2)<EPS then gosub "hotspot_3d_2"
			if abs(i-3)<EPS then gosub "hotspot_3d_3"
			if abs(i-4)<EPS then gosub "hotspot_3d_4"
		else
			if (i-1)>EPS then x = x + perem_zazor_type[i]
		endif
		x = x + dx
	endif
next i

if show_perem_3d = 1 then
	t=max_t
	h=perem_max_h
	dh=0
	dl=perem_max_dl
	l=perem_max_l
	isEmp=0
	inx = 2
	gosub "set_pen"
	pen pen_cont
	building_material perem_material[inx]
	material _mat
	sect_attrs{2} pen_cut, 1
	put 0,dh,jt
	put 0,dh+h,jt
	put t,dh+h,jt
	put t,dh,jt
	put 0,dh,-1
	addz dl-l/2
	PRISM_ nsp/3,l, get(nsp)
	del 1
	end
endif

for inx=1 to vardim1(perem_coord)
	ttt = perem_coord[inx][1]
	h = perem_coord[inx][2]
	l = perem_coord[inx][4]
	dh = perem_coord[inx][3]
	dl = perem_coord[inx][5]
	isEmp = (perem_coord[inx][6]<EPS)
	_bmat = perem_material[inx]
	if isPlan or isPrew then
		if not(isEmp) then gosub "draw_rect"
	else
		if not(isEmp and _bmat<EPS) gosub "draw_rect"
	endif
	if nsp/3>0 and abs(int(nsp/3)-nsp/3)<EPS and inx-1>EPS and not(isEmp and GLOB_STRUCTURE_DISPLAY) then
		gosub "set_pen"
		pen pen_cont
		building_material _bmat
		material _mat
		sect_attrs{2} pen_cut, 1
		addz dl-l/2
		PRISM_ nsp/3,l, get(nsp)
		if not(isEmp) and not(isPlan or isPrew or isEdit) and flag_form=0 then gosub "block_plane"
		del 1
	endif
	if NSP>0 then trt=max(get(NSP))
	addx ttt
next inx
del top
end
"draw_rect":
	if abs(h)>EPS and abs(ttt)>EPS then
		inx_type = perem_coord[inx][8]
		if inx_type<EPS then inx_type = 1
		t_ug = perem_tug[inx_type]
		zaz = perem_coord[inx][7]
		flag_form = 0
		if perem_coord[inx][6] = iType_UG then !Уголок
			put 0,dh,jt
			put 0,dh+h-t_ug,jt
			put -t_ug,dh+h-t_ug,jt
			put -t_ug,dh-t_ug,jt
			put ttt-t_ug,dh-t_ug,jt
			put ttt-t_ug,dh,jt
			put 0,dh,-1
			hotspot 0,dh,dl+l/2
			hotspot 0,dh,dl-l/2
			hotspot -t_ug,dh-t_ug,dl+l/2
			hotspot -t_ug,dh-t_ug,dl-l/2
			ttt=max(zaz,ttt)
			flag_form = 1
		endif
		if perem_coord[inx][6] = iType_UGMIRR then !Уголок зеркально
			put 0+zaz,dh,jt
			put 0+zaz,dh+h-t_ug,jt
			put t_ug+zaz,dh+h-t_ug,jt
			put t_ug+zaz,dh-t_ug,jt
			put -ttt+t_ug+zaz,dh-t_ug,jt
			put -ttt+t_ug+zaz,dh,jt
			put 0+zaz,dh,-1
			hotspot 0+zaz,dh,dl+l/2
			hotspot 0+zaz,dh,dl-l/2
			hotspot t_ug+zaz,dh-t_ug,dl+l/2
			hotspot t_ug+zaz,dh-t_ug,dl-l/2
			ttt=zaz
			flag_form = 1
		endif
		if perem_coord[inx][6] = iType_UGx2 then !Спаренный уголок
				put 0+zaz,dh,jt
				put 0+zaz,dh+h-t_ug,jt
				put t_ug+zaz,dh+h-t_ug,jt
				put t_ug+zaz,dh-t_ug,jt
				put -ttt+t_ug+zaz,dh-t_ug,jt
				put -ttt+t_ug+zaz,dh,jt
				put 0+zaz,dh,-1
				put 0,dh,jt
				put 0,dh+h-t_ug,jt
				put -t_ug,dh+h-t_ug,jt
				put -t_ug,dh-t_ug,jt
				put ttt-t_ug,dh-t_ug,jt
				put ttt-t_ug,dh,jt
				put 0,dh,-1
				hotspot 0+zaz,dh,dl+l/2
				hotspot 0+zaz,dh,dl-l/2
				hotspot t_ug+zaz,dh-t_ug,dl+l/2
				hotspot t_ug+zaz,dh-t_ug,dl-l/2
				hotspot 0,dh,dl+l/2
				hotspot 0,dh,dl-l/2
				hotspot -t_ug,dh-t_ug,dl+l/2
				hotspot -t_ug,dh-t_ug,dl-l/2
				ttt=zaz
			flag_form = 1
		endif
		priority = 1
		n = REQUEST{2} ("Building_Material_info", _bmat, "gs_bmat_intersectionpriority", priority)
		if isShow[inx_type]<EPS or priority<EPS then
			if NSP>0 then ttr=max(get(NSP))
			flag_form = 1
		endif
		if perem_coord[inx][6] = iType_PROF and flag_form = 0 then 
			gosub "draw_profile_3d"
			if NSP>0 then tt=max(get(NSP))
			flag_form = 1
		endif
		if flag_form = 0 then !Всё остальное
			put 0,dh,jt
			put 0,dh+h,jt
			put ttt,dh+h,jt
			put ttt,dh,jt
			put 0,dh,-1
		endif
	endif
return

"block_plane":
	PLANE 4, 0,dh,0, 0,dh+h,0, 0,dh+h,l, 0,dh,l
	PLANE 4, ttt,dh,0, ttt,dh+h,0, ttt,dh+h,l, ttt,dh,l
	PLANE 4, 0,dh,0, ttt,dh,0, ttt,dh,l, 0,dh,l
	PLANE 4, 0,dh+h,0, ttt,dh+h,0, ttt,dh+h,l, 0,dh+h,l
return

"set_pen":
	pen_cont = perem_pen_cont
	pen_cut = perem_pen_cut
	pen_sim = perem_pen_sim
	_fillType = perem_fill
	_fillPen = perem_fill_pen
	_fillBgPen = perem_fill_bg
	if inx = 0 then inx = 1
	if not(perem_pen_eq_sim) then
		ii = perem_coord[inx][6]
		if ii>EPS then pen_sim = perem_pen_sim_m[ii+1]
	endif
	if abs(show_perem_3d-3)>EPS then
		pen_cont = pen_sim
		pen_cut = pen_sim
	endif
	if isEmp then
		pen_cut = 1
	endif
	if perem_fill_eq then
		n = REQUEST{2} ("Building_Material_info", _bmat, "gs_bmat_cutfill_properties", _fillType, _fillPen, _fillBgPen)
	endif
	bSucceed = request{2} ("Building_Material_info", _bmat, "gs_bmat_surface", _mat)
	if pen_cont<1 or pen_cont>255 then pen_cont=1
	if pen_cut<1 or pen_cut>255 then pen_cut=1
	if pen_sim<1 or pen_sim>255 then pen_sim=1
	if _fillPen<1 or _fillPen>255 then _fillPen=1
	if _fillBgPen<1 or _fillBgPen>255 then _fillBgPen=0
	if isError then
		pen_cont=pen_alert
		pen_cut=pen_alert
		pen_sim=pen_alert
		_fillPen=pen_alert
		_fillBgPen=pen_alert
	endif
return

"draw_profile_3d":
	index = perem_archprofile[inx_type]
	addz dl-l/2
	for _iComp = 1 to _nComponents_m[inx_type]
		if _bShowPart_m[inx_type][_iComp] then
			dim _currSurfaces[]
			_bmat = 1
			_surface = 1
			_pen = 1
			n = REQUEST{4} ("Profile_component_info", index, _iComp, "gs_profile_comp_surfaces", _currSurfaces)
			n = REQUEST{4} ("Profile_component_info", index, _iComp, "gs_profile_bmat", _bmat)
			n = REQUEST{4} ("Profile_component_info", index, _iComp, "gs_profile_surface", _surface)
			n = REQUEST{4} ("Profile_component_info", index, _iComp, "gs_profile_outlinepen", _pen)
			if not(perem_fill_eq) then _bmat = perem_material_type[inx_type]
			gosub "set_pen"
			if not(perem_ved_wall_eq) then _pen = pen_cont
			building_material _bmat
			material _mat
			pen _pen
			sect_attrs{2} pen_cut, 1
			_surfIdx = 1
			for _i = _idxStartPoints_m[inx_type][_iComp] to _idxEndPoints_m[inx_type][_iComp] step 5
				gosub "set_status_code"	 ! input _profileGeometryRawData, returns prismStatus
				put 	_profileGeometryRawData_m[inx_type][_i], 		! xn
					_profileGeometryRawData_m[inx_type][_i + 1]+dh, 	! yn
					0, 					! angle of sides from the perpendicular plane
					prismStatus, 				! sn
					_currSurfaces[_surfIdx]			! surfn
				_surfIdx = _surfIdx + 1
			next _i
			_mask = 8
			cprism_{3} _surface, _surface, _surface, _mask,NSP/5, l,get(NSP)
		endif
	next _iComp
	del 1
return

"set_status_code":
	edgeVisible 		= _profileGeometryRawData_m[inx_type][_i + 2]
	verticalEdgeVisible 	= _profileGeometryRawData_m[inx_type][_i + 3]
	additionalStatus 	= _profileGeometryRawData_m[inx_type][_i + 4]
	poly2Status 	= edgeVisible + additionalStatus
	prismStatus 	= additionalStatus
	tubeStatus 	= additionalStatus
	if additionalStatus >= 0 then        ! not contour end
		if edgeVisible then
			prismStatus = prismStatus + 15    ! j1, j2, j3, j4
		endif
		if verticalEdgeVisible = 0 then
			! status code - j2=1 and j7=1: the vertical edge is only visible when it is a contour observed from the current direction of view
			! needed only if mask 8 is not used for cprism_{3}
			prismStatus = prismStatus + 64
			! in tube, lateral edges starting from the node are used for showing the contour
			! needed only if mask 256 is not used for tube_{2}
			tubeStatus = tubeStatus + 1
		endif
	endif
return


"hotspot_3d_1":
	HOTSPOT	hx,		0,				0,	unID,	perem_dh_1,	1+128: unID=unID+1
	HOTSPOT	hx,		perem_dh_1,		0,	unID,	perem_dh_1,	2: unID=unID+1
	HOTSPOT	hx,		-1,				0,	unID,	perem_dh_1,	3: unID=unID+1
	if perem_type[i]=iType_UGMIRR or perem_type[i]=iType_UG or perem_type[i]=iType_UGx2 then
		HOTSPOT	x,		dh,				0,	unID,	perem_zazor_1,	1+128: unID=unID+1
		HOTSPOT	x+perem_zazor_1,		dh,		0,	unID,	perem_zazor_1,	2: unID=unID+1
		HOTSPOT	-1,		dh,				0,	unID,	perem_zazor_1,	3: unID=unID+1
	endif
	if perem_type[i]=iType_CONC or perem_type[i]=iType_ARM or (perem_type[i]=iType_SB and perem_podbor_1)  then
		HOTSPOT	x,		dh+h/2,				0,	unID,	perem_t_1,	1+128: unID=unID+1
		HOTSPOT	x+perem_t_1,		dh+h/2,		0,	unID,	perem_t_1,	2: unID=unID+1
		HOTSPOT	-1,		dh+h/2,				0,	unID,	perem_t_1,	3: unID=unID+1
		HOTSPOT	hx+0.01,		dh,				0,	unID,	perem_h_1,	1+128: unID=unID+1
		HOTSPOT	hx+0.01,		dh+perem_h_1,		0,	unID,	perem_h_1,	2: unID=unID+1
		HOTSPOT	hx+0.01,		-1,				0,	unID,	perem_h_1,	3: unID=unID+1
	endif
	if perem_type[i]=iType_SB and (perem_qty_by_type[i]-1)>EPS then
		HOTSPOT	x+ttt,		dh,				0,	unID,	perem_zazor_1,	1: unID=unID+1
		HOTSPOT	x+ttt+perem_zazor_1,		dh,		0,	unID,	perem_zazor_1,	2: unID=unID+1
		HOTSPOT	-1,		dh,				0,	unID,	perem_zazor_1,	3: unID=unID+1
	endif
return

"hotspot_3d_2":
	HOTSPOT	hx,		0,				0,	unID,	perem_dh_2,	1+128: unID=unID+1
	HOTSPOT	hx,		perem_dh_2,		0,	unID,	perem_dh_2,	2: unID=unID+1
	HOTSPOT	hx,		-1,				0,	unID,	perem_dh_2,	3: unID=unID+1
	if perem_type[i]=iType_UGMIRR or perem_type[i]=iType_UG or perem_type[i]=iType_UGx2 then
		HOTSPOT	x,		dh,				0,	unID,	perem_zazor_2,	1+128: unID=unID+1
		HOTSPOT	x+perem_zazor_2,		dh,		0,	unID,	perem_zazor_2,	2: unID=unID+1
		HOTSPOT	-1,		dh,				0,	unID,	perem_zazor_2,	3: unID=unID+1
	endif
	if perem_type[i]=iType_CONC or perem_type[i]=iType_ARM or (perem_type[i]=iType_SB and perem_podbor_2)  then
		HOTSPOT	x,		dh+h/2,				0,	unID,	perem_t_2,	1+256: unID=unID+1
		HOTSPOT	x+perem_t_2,		dh+h/2,		0,	unID,	perem_t_2,	2: unID=unID+1
		HOTSPOT	-1,		dh+h/2,				0,	unID,	perem_t_2,	3: unID=unID+1
		HOTSPOT	hx+0.01,		dh,				0,	unID,	perem_h_2,	1+128: unID=unID+1
		HOTSPOT	hx+0.01,		dh+perem_h_2,		0,	unID,	perem_h_2,	2: unID=unID+1
		HOTSPOT	hx+0.01,		-1,				0,	unID,	perem_h_2,	3: unID=unID+1
	endif
	if perem_type[i]=iType_SB and (perem_qty_by_type[i]-1)>EPS then
		HOTSPOT	x+ttt,		dh,				0,	unID,	perem_zazor_2,	1: unID=unID+1
		HOTSPOT	x+ttt+perem_zazor_2,		dh,		0,	unID,	perem_zazor_2,	2: unID=unID+1
		HOTSPOT	-1,		dh,				0,	unID,	perem_zazor_2,	3: unID=unID+1
	endif
return

"hotspot_3d_3":
	HOTSPOT	hx,		0,				0,	unID,	perem_dh_3,	1+128: unID=unID+1
	HOTSPOT	hx,		perem_dh_3,		0,	unID,	perem_dh_3,	2: unID=unID+1
	HOTSPOT	hx,		-1,				0,	unID,	perem_dh_3,	3: unID=unID+1
	if perem_type[i]=iType_UGMIRR or perem_type[i]=iType_UG or perem_type[i]=iType_UGx2 then
		HOTSPOT	x,		dh,				0,	unID,	perem_zazor_3,	1+128: unID=unID+1
		HOTSPOT	x+perem_zazor_3,		dh,		0,	unID,	perem_zazor_3,	2: unID=unID+1
		HOTSPOT	-1,		dh,				0,	unID,	perem_zazor_3,	3: unID=unID+1
	endif
	if perem_type[i]=iType_CONC or perem_type[i]=iType_ARM or (perem_type[i]=iType_SB and perem_podbor_3)  then
		HOTSPOT	x,		dh+h/2,				0,	unID,	perem_t_3,	1+128: unID=unID+1
		HOTSPOT	x+perem_t_3,		dh+h/2,		0,	unID,	perem_t_3,	2: unID=unID+1
		HOTSPOT	-1,		dh+h/2,				0,	unID,	perem_t_3,	3: unID=unID+1
		HOTSPOT	hx+0.01,		dh,				0,	unID,	perem_h_3,	1+128: unID=unID+1
		HOTSPOT	hx+0.01,		dh+perem_h_3,		0,	unID,	perem_h_3,	2: unID=unID+1
		HOTSPOT	hx+0.01,		-1,				0,	unID,	perem_h_3,	3: unID=unID+1
	endif
	if perem_type[i]=iType_SB and (perem_qty_by_type[i]-1)>EPS then
		HOTSPOT	x+ttt,		dh,				0,	unID,	perem_zazor_3,	1: unID=unID+1
		HOTSPOT	x+ttt+perem_zazor_3,		dh,		0,	unID,	perem_zazor_3,	2: unID=unID+1
		HOTSPOT	-1,		dh,				0,	unID,	perem_zazor_3,	3: unID=unID+1
	endif
return

"hotspot_3d_4":
	HOTSPOT	hx,		0,				0,	unID,	perem_dh_4,	1+128: unID=unID+1
	HOTSPOT	hx,		perem_dh_4,		0,	unID,	perem_dh_4,	2: unID=unID+1
	HOTSPOT	hx,		-1,				0,	unID,	perem_dh_4,	3: unID=unID+1
	if perem_type[i]=iType_UGMIRR or perem_type[i]=iType_UG or perem_type[i]=iType_UGx2 then
		HOTSPOT	x,		dh,				0,	unID,	perem_zazor_4,	1+128: unID=unID+1
		HOTSPOT	x+perem_zazor_4,		dh,		0,	unID,	perem_zazor_4,	2: unID=unID+1
		HOTSPOT	-1,		dh,				0,	unID,	perem_zazor_4,	3: unID=unID+1
	endif
	if perem_type[i]=iType_CONC or perem_type[i]=iType_ARM or (perem_type[i]=iType_SB and perem_podbor_4)  then
		HOTSPOT	x,		dh+h/2,				0,	unID,	perem_t_4,	1+128: unID=unID+1
		HOTSPOT	x+perem_t_4,		dh+h/2,		0,	unID,	perem_t_4,	2: unID=unID+1
		HOTSPOT	-1,		dh+h/2,				0,	unID,	perem_t_4,	3: unID=unID+1
		HOTSPOT	hx+0.01,		dh,				0,	unID,	perem_h_4,	1+128: unID=unID+1
		HOTSPOT	hx+0.01,		dh+perem_h_4,		0,	unID,	perem_h_4,	2: unID=unID+1
		HOTSPOT	hx+0.01,		-1,				0,	unID,	perem_h_4,	3: unID=unID+1
	endif
	if perem_type[i]=iType_SB and (perem_qty_by_type[i]-1)>EPS then
		HOTSPOT	x+ttt,		dh,				0,	unID,	perem_zazor_4,	1: unID=unID+1
		HOTSPOT	x+ttt+perem_zazor_4,		dh,		0,	unID,	perem_zazor_4,	2: unID=unID+1
		HOTSPOT	-1,		dh,				0,	unID,	perem_zazor_4,	3: unID=unID+1
	endif
return
]]>
</Script_3D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_2D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
PAPER_TO_MODEL = GLOB_SCALE / 1000
if not(flag_not_use) then end
show_perem_2d = 3 : success = LIBRARYGLOBAL ("Libraryflobals-perem", "show_perem_2d", show_perem_2d)

Shrift = ""
!Если имя шрифта пустое, то читаем его из ПМВ
if strlen(Shrift)<EPS then
	Shrift_t = "" : success = LIBRARYGLOBAL ("LibraryGlobals13", "Shrift", Shrift_t)
	Shrift_razm_t = 0 : success = LIBRARYGLOBAL ("LibraryGlobals13", "Shrift_razm", Shrift_razm_t)
	Shrift_tip_t = 0 : success = LIBRARYGLOBAL ("LibraryGlobals13", "Shrift_tip", Shrift_tip_t)
	!Если прочитать не удалось - применим значения по умолчанию
	if strlen(Shrift_t)<EPS then Shrift_t = "ISOCPEUR"
	if Shrift_razm_t<EPS then Shrift_razm_t = 2.5
	Shrift = Shrift_t
	Shrift_razm = Shrift_razm_t
	Shrift_tip = Shrift_tip_t
endif

DEFINE STYLE{2} "текст" Shrift, Shrift_razm, Shrift_tip
txtv = "120" : tblockname = "def" : name_style = "текст" : gosub "get_block"
htxt = tbheight

jt = 1
pen 1
!Массив данных для размера
dim coord_razm[1][9]
for i=1 to 9
	coord_razm[1][i] = 0
next i
!Координаты концов выносок
dim cv[4][2]
!cv[1][1] = -2*PAPER_TO_MODEL 
!cv[1][2] = perem_max_h/2
!cv[2][1] = -5*PAPER_TO_MODEL
!cv[2][2] = perem_max_h+5*PAPER_TO_MODEL
!cv[3][1] = 5*PAPER_TO_MODEL
!cv[3][2] = perem_max_h+5*PAPER_TO_MODEL
!cv[4][1] = 5*PAPER_TO_MODEL
!cv[4][2] = perem_max_h/2

cv[1][1] = -perem_sum_t/10 
cv[1][2] = htxt
cv[2][1] = -perem_sum_t/10 
cv[2][2] = perem_max_h+htxt*2
cv[3][1] = perem_sum_t/10 
cv[3][2] = perem_max_h+htxt*2
cv[4][1] = perem_sum_t/10 
cv[4][2] = htxt

sgnx = SGN(otstup)

shag_v=8
shag_g=8
type_razm = 0
isEmp = 0

!Изображение в ведомость
if GLOB_VIEW_TYPE=9 and show_perem_2d>EPS then 
	perem_ved_wall_show = 0
	if GLOB_PREVIEW_MODE=1 then rot2 -SYMB_ROTANGLE
	h_st_usl = perem_max_h*2
	if SYMB_MIRRORED then mul2 -1,1
	gosub "top_view"
	del top
	end
endif
if show_perem_2d<EPS then end
if show_perem_2d=4 then 
	if vartype(otstup_2)=1 and main_name<>"" then
		del top
		add2 0,otstup_2
		mul2 1,SGN(otstup)
		if (AC_Wall_Direction_Type=0) or (AC_Wall_Direction_Type=2) then mul2 1,-1
		if abs(otstup)-900<EPS then add2 0,abs(otstup)
		if (AC_Wall_Direction_Type=0) or (AC_Wall_Direction_Type=2) then mul2 1,-1
		mul2 1,-SGN(otstup)
		if WIDO_REVEAL_SIDE then mul2 -1,1
		if perem_mul then rot2 180
		rot2 -90
		add2 -max_t/2,0
	else
		rot2 -90
	endif
	perem_ved_wall_show = 0
	h_st_usl = perem_max_h*2
	gosub "top_view"
	show_perem_2d=2
	del top
endif

if vartype(otstup_2)=1 and main_name<>"" then
	del top
	add2 0,otstup_2
	mul2 1,SGN(otstup)
	if (AC_Wall_Direction_Type=0) or (AC_Wall_Direction_Type=2) then mul2 1,-1
	if abs(otstup)-900<EPS then add2 0,abs(otstup)
	if (AC_Wall_Direction_Type=0) or (AC_Wall_Direction_Type=2) then mul2 1,-1
	mul2 1,-SGN(otstup)
	if WIDO_REVEAL_SIDE then mul2 1,-1
	if perem_mul then rot2 180
	add2 0,-max_t/2
else
	rot2 180
endif

if main_name="" then
	HOTSPOT2	0,				0,	unID,	wallhole_half_width,	1, ac_wallhole_width : unID=unID+1
	HOTSPOT2	wallhole_half_width,	0,	unID,	wallhole_half_width,	2, ac_wallhole_width : unID=unID+1
	HOTSPOT2	-1,			0,	unID,	wallhole_half_width,	3, ac_wallhole_width : unID=unID+1
	HOTSPOT2	0,				0,	unID,	wallhole_half_width,	1, ac_wallhole_width : unID=unID+1
	HOTSPOT2	-wallhole_half_width,	0,	unID,	wallhole_half_width,	2, ac_wallhole_width : unID=unID+1
	HOTSPOT2	1,			0,	unID,	wallhole_half_width,	3, ac_wallhole_width : unID=unID+1
	HOTSPOT2	0,				perem_sum_t,	unID,	wallhole_half_width,	1, ac_wallhole_width : unID=unID+1
	HOTSPOT2	wallhole_half_width,	perem_sum_t,	unID,	wallhole_half_width,	2, ac_wallhole_width : unID=unID+1
	HOTSPOT2	-1,			perem_sum_t,	unID,	wallhole_half_width,	3, ac_wallhole_width : unID=unID+1
	HOTSPOT2	0,				perem_sum_t,	unID,	wallhole_half_width,	1, ac_wallhole_width : unID=unID+1
	HOTSPOT2	-wallhole_half_width,	perem_sum_t,	unID,	wallhole_half_width,	2, ac_wallhole_width : unID=unID+1
	HOTSPOT2	1,			perem_sum_t,	unID,	wallhole_half_width,	3, ac_wallhole_width : unID=unID+1
endif

gosub "side_view"

end

"top_view":
	n_add = 0
	pen perem_pen_cut
	for inx=1 to vardim1(perem_coord)
		ttt = perem_coord[inx][1]
		h = perem_coord[inx][2]
		dh = perem_coord[inx][3]
		inx_type = perem_coord[inx][8]
		if inx_type<EPS then inx_type = 1
		isEmp = (perem_coord[inx][6]<EPS)
		if isEmp then
			jt = 1+2+3
		else
			jt = 2+3
		endif
		_bmat = perem_material[inx]
		gosub "set_pen" 
		gosub "draw_rect"
		if nsp/3>0 and abs(int(nsp/3)-nsp/3)<EPS and not(isEmp and _bmat<EPS) then
			pen pen_cut
			fill _fillType
			POLY2_b nsp/3, 7, _fillPen, _fillBgPen, use(nsp)
			x1=0 : y1=0 : s1=0
			x1=get(1)
			y1=get(1)
			s1=get(1)
			hotspot2 x1,y1,unIDR : unIDR=unIDR+1
			for i=1 to nsp step 3
				x2=get(1)
				y2=get(1)
				s2=get(1)
				if s2>EPS then
					hotspot2 x2,y2,unIDR : unIDR=unIDR+1
					hotline2 x1,y1,x2,y2,unIDR : unIDR=unIDR+1
					x1=x2 : y1=y2 : s1=s2
				endif
			next i
		endif
		if NSP>0 then ttr=max(get(NSP))
		qty_arm_osn = qty_arm[inx_type][1]
		if qty_arm_osn>EPS and not(isEmp) then
			pen 21
			if (qty_arm_osn-1)<EPS then qty_arm_osn = 2
			perem_shag_osn = (ttt-zs_leftright*2)/(qty_arm_osn-1)
			x = zs_leftright
			for j=1 to qty_arm_osn
				circle2 x,dh+zs_updown,perem_diam
				x = x + perem_shag_osn
			next j
		endif
		add2 ttt, 0 : n_add = n_add+1
	next inx
	if n_add>EPS then del n_add : n_add = 0
	x = perem_zazor_type[1]
!	if WALL_COMPS_NAME_="" and perem_ved_wall_show and abs(x)>EPS then 
!		DRAWINDEX 10
!		put	x,perem_dh[inx_start_type]*(perem_qty_by_type[inx_start_type]<2)-0.001,17
!		put	x,h_st_usl,17
!		put	0,h_st_usl,17
!		put	0,perem_dh[inx_start_type]*(perem_qty_by_type[inx_start_type]<2)-0.001,17
!		pen perem_ved_wall_pen
!		fill perem_ved_wall_fill
!		POLY2_b nsp/3, 2+4, perem_ved_wall_fill_pen, perem_ved_wall_fill_bg, get(nsp)
!	endif
	for i=inx_start_type to flag_not_use
		DRAWINDEX 0
		pen pen_cont
		if perem_qty_type[i]>EPS then
			if perem_type[i]=iType_UGMIRR or perem_type[i]=iType_UG or perem_type[i]=iType_UGx2 then
				if perem_type[i] = iType_UG then
					dx = max(perem_t[i], perem_zazor[i])
				else
					dx = perem_zazor[i]
				endif
				dt = dx
			else
				dx = perem_t[i]*perem_qty_by_type[i]+perem_zazor[i]*(perem_qty_by_type[i]-1)
				dt = -perem_t[i]
			endif
			if i-1>EPS then x = x + perem_zazor_type[i]
			if i-1>EPS and i=flag_not_use and (perem_type[i]=iType_UG) and dt>EPS then
				coord_razm[1][1]=x
				coord_razm[1][2]=0
				coord_razm[1][3]=x+dt
				coord_razm[1][4]=perem_dh[i]
				coord_razm[1][5]=shag_g+htxt / PAPER_TO_MODEL
				call 'macro_razm' parameters coord_razm=coord_razm, type_razm=1,Shrift_tip=Shrift_tip,Shrift=Shrift,Shrift_razm=Shrift_razm
			endif

			if i-1<EPS and (perem_zazor_type[i]>EPS or (perem_type[i]=iType_UGMIRR and dt>EPS)) then
				coord_razm[1][1]=min(0,perem_zazor_type[i]+dx*(perem_type[i] = iType_UGMIRR))
				coord_razm[1][2]=0
				coord_razm[1][3]=max(0,perem_zazor_type[i]+dx*(perem_type[i] = iType_UGMIRR))
				coord_razm[1][4]=perem_dh[i]
				coord_razm[1][5]=shag_g+htxt / PAPER_TO_MODEL
				call 'macro_razm' parameters coord_razm=coord_razm, type_razm=1,Shrift_tip=Shrift_tip,Shrift=Shrift,Shrift_razm=Shrift_razm
			endif

			if perem_type[i]=iType_UGx2 then
				coord_razm[1][1]=x
				coord_razm[1][2]=0
				coord_razm[1][3]=x+dt
				coord_razm[1][4]=perem_dh[i]
				coord_razm[1][5]=shag_g+htxt / PAPER_TO_MODEL
				call 'macro_razm' parameters coord_razm=coord_razm, type_razm=1,Shrift_tip=Shrift_tip,Shrift=Shrift,Shrift_razm=Shrift_razm
			endif

			if abs(perem_dh[i])>EPS and perem_type[i]>EPS then
				if x<perem_sum_t/2 then
					coord_razm[1][1]=x + abs(dt)/2
					coord_razm[1][2]=0
					coord_razm[1][3]=x
					coord_razm[1][4]=perem_dh[i]
					coord_razm[1][5]=shag_v
				else
					coord_razm[1][1]=x - abs(dt)/2
					coord_razm[1][2]=0
					coord_razm[1][3]=x
					coord_razm[1][4]=perem_dh[i]
					coord_razm[1][5]=shag_v
				endif
				call 'macro_razm' parameters coord_razm=coord_razm, type_razm=2,Shrift_tip=Shrift_tip,Shrift=Shrift,Shrift_razm=Shrift_razm
			endif
			txt2 = ""
			if perem_ved_pos=2 then
				if perem_type[i]>EPS then 
					txt = perem_profile[i]
				else
					txt = ""
				endif
				if perem_qty_by_type[i]-1>EPS then txt2 = str("%.0", perem_qty_by_type[i])+"шт."
				if perem_type[i]=iType_UGx2 then txt = txt + " 2шт."
				if perem_type[i]=iType_ARM then 
					txt = str("%.0", qty_arm[i][1])+"х"+str("%.0mm", perem_diam)+perem_class+" L="+str("%.0mm", perem_dlin[i])+"мм"
					txt2 = perem_concr + " " + str("%.0mm",perem_h[i])+"(H)x"+str("%.0mm",perem_t[i])+"(B)"
				endif
				if perem_type[i]=iType_CONC then 
					txt = "Ж/б элемент "+str("%.0mm",perem_h[i])+"(H)x"+str("%.0mm",perem_t[i])+"(B)"
					txt2 = "L="+str("%.0mm", perem_dlin[i])+"мм" 
				endif
				if perem_type[i]=iType_UGMIRR or perem_type[i]=iType_UG or perem_type[i]=iType_UGx2 then txt2 = "L="+str("%.0mm", perem_dlin[i])+"мм"
			else
				txt = perem_pos[i]
				if STRSTR(txt, "!")>EPS or txt="-" then txt = ""
			endif
			isTxt = (strlen(txt)>EPS) or (strlen(txt2)>EPS)
			if isTxt then 
				txtv = txt : tblockname = "txt" : name_style = "текст" : gosub "get_block"
				txt_width = tbwidth
				txtv = txt2 : tblockname = "txt2" : name_style = "текст" : gosub "get_block"
				txt2_width = tbwidth
				cx = x+abs(dt/2)*(dt<EPS)+(perem_type[i]=iType_UGMIRR)*dt : cy = perem_h[i]/2 + perem_dh[i]
				csx = cx+8*PAPER_TO_MODEL*sgn(cv[i][1]) : csy = cv[i][2]
				if csy<(perem_h[i] + perem_dh[i]) then csy = cv[i][2]/2 + perem_dh[i]+perem_h[i]
				for k=1 to perem_qty_by_type[i]+(perem_type[i]=iType_UGx2)
					ce = cx+8*PAPER_TO_MODEL*sgn(cv[i][1])
					line2  ce,csy, cx, cy
					circle2 cx,cy,0.2*PAPER_TO_MODEL
					cx = cx+(abs(dt)+perem_zazor[i])*(dt<EPS)+abs(dt)*(dt>EPS)
				next k
				ll = max(txt_width, txt2_width)
				if cv[i][1]>EPS then				
					line2 ce+ll,csy, csx, csy
					RICHTEXT2 ce+ll/2,csy-dx_txt+tbheight/2, "txt"
					if txt2<>"" then RICHTEXT2 ce+ll/2,csy, "txt2"
				else
					line2 ce,csy, csx-ll, csy
					RICHTEXT2 csx-ll/2, csy-dx_txt+tbheight/2, "txt"
					if txt2<>"" then RICHTEXT2 csx-ll/2, csy+dx_txt-tbheight/2, "txt2"
				endif
			endif
!			if WALL_COMPS_NAME_="" and perem_ved_wall_show then 
!				DRAWINDEX 10
!				put	x-perem_zazor_type[i],perem_h[i]*(dt<EPS) + perem_dh[i]*(perem_qty_by_type[i]<2)-0.001,17
!				put	x-perem_zazor_type[i],h_st_usl,17
!				put	x+dx,h_st_usl,17
!				put	x+dx,perem_h[i]*(dt<EPS) + perem_dh[i]*(perem_qty_by_type[i]<2)-0.001,17
!				pen perem_ved_wall_pen
!				fill perem_ved_wall_fill
!				POLY2_b nsp/3, 2+4, perem_ved_wall_fill_pen, perem_ved_wall_fill_bg, get(nsp)
!			endif
			x = x + dx
		endif
	next i
	DRAWINDEX 0
	pen pen_cont
	dim coord_otm[1][2] : coord_otm[1][1]=perem_zazor_type[1] : coord_otm[1][2]=0
	dim otm[1][2] : otm[1][1]="" : otm[1][2]=""
	if GLOB_VIEW_TYPE=9 then
		otm[1][1]="Верх проёма"
	else
		otm[1][1]=ur
		otm[1][2]=perem_marka
	endif
	call 'macro_otm' parameters otm=otm, polozh = 4, coord=coord_otm,Shrift_tip=Shrift_tip,Shrift=Shrift,Shrift_razm=Shrift_razm, dlin_polki=x-perem_zazor_type[1]+5*PAPER_TO_MODEL
	if perem_ved_wall_show then
		DRAWINDEX 10
		pen perem_ved_wall_pen
		line2 0,perem_dh[inx_start_type],0,h_st_usl
		line2 x,perem_dh[flag_not_use],x,h_st_usl
	endif
return

"side_view":
	n_add = 0
	add2 0,perem_zazor_type[1] : n_add = n_add+1
	if perem_qty_type[1] then
		gosub "hotspot_2d_1"
		add2 0, ht : n_add = n_add+1
	endif
	if perem_qty_type[2] then
		add2 0,perem_zazor_type[2] : n_add = n_add+1
		gosub "hotspot_2d_2"
		add2 0, ht : n_add = n_add+1
	endif
	if perem_qty_type[3] then
		add2 0,perem_zazor_type[3] : n_add = n_add+1
		gosub "hotspot_2d_3"
		add2 0, ht : n_add = n_add+1
	endif
	if perem_qty_type[4] then
		add2 0,perem_zazor_type[4] : n_add = n_add+1
		gosub "hotspot_2d_4"
		add2 0, ht : n_add = n_add+1
	endif
	if n_add>EPS then del n_add : n_add = 0
	inx = 0
	if show_perem_2d = 1 then
		gosub "set_pen"
		DRAWINDEX 30
		pen pen_sim
		if main_name="" then
			th = perem_sum_t/2
		else
			th = max_t/2
		endif
		line2 perem_max_dl+perem_max_l/2, th, perem_max_dl-perem_max_l/2,th
		hotline2 perem_max_dl+perem_max_l/2, th, perem_max_dl-perem_max_l/2,th
		return
	endif
	for inx=1 to vardim1(perem_coord)
		_bmat = perem_material[inx]
		gosub "set_pen"
		ttt = perem_coord[inx][1]
		l = perem_coord[inx][4]
		dl = perem_coord[inx][5]
		inx_type = perem_coord[inx][8]
		if inx_type<EPS then inx_type = 1
		isEmp = (perem_coord[inx][6]<EPS)
		if perem_coord[inx][6] = iType_UG then ttt = max(perem_coord[inx][7],ttt)
		if perem_coord[inx][6] = iType_UGMIRR or perem_coord[inx][6] = iType_UGx2 then ttt=perem_coord[inx][7]
		if show_perem_2d=2 and not(isEmp) and isShow[inx_type] then
			DRAWINDEX 40
			pen pen_sim
			hotspot2 dl+l/2, ttt/2
			hotspot2 dl-l/2,ttt/2
			line2 dl+l/2,ttt/2,dl-l/2,ttt/2
			hotline2 dl+l/2,ttt/2,dl-l/2,ttt/2,unIDR : unIDR=unIDR+1
		endif
		if show_perem_2d=3 and not(isEmp) and isShow[inx_type] then
			DRAWINDEX 40
			pen pen_sim
			fill _fillType
			if NSP>0 then ttr=max(get(NSP))
			if abs(ttt)>EPS then
				put dl+l/2,0,jt
				put dl-l/2,0,jt
				put dl-l/2,ttt,jt
				put dl+l/2,ttt,jt
				put dl+l/2,0,-1
				POLY2_b nsp/3, 7, _fillPen, _fillBgPen,use(nsp)
				x1=get(1)
				y1=get(1)
				s1=get(1)
				hotspot2 x1,y1,unIDR : unIDR=unIDR+1
				for i=1 to nsp step 3
					x2=get(1)
					y2=get(1)
					s2=get(1)
					if s2<10 and s2>EPS then
						hotspot2 x2,y2,unIDR : unIDR=unIDR+1
						hotline2 x1,y1,x2,y2,unIDR : unIDR=unIDR+1
						x1=x2 : y1=y2 : s1=s2
					endif
				next i
			endif
		endif
		add2 0, ttt : n_add = n_add+1
	next inx
	if n_add>EPS then del n_add : n_add = 0
return

"draw_rect":
	if abs(h)>EPS and abs(ttt)>EPS then
		flag_form = 0
		if perem_coord[inx][6] = iType_UG then !Уголок
			t_ug = perem_tug[inx_type]
			zaz = perem_coord[inx][7]
			put 0,dh,jt
			put 0,dh+h-t_ug,jt
			put -t_ug,dh+h-t_ug,jt
			put -t_ug,dh-t_ug,jt
			put ttt-t_ug,dh-t_ug,jt
			put ttt-t_ug,dh,jt
			put 0,dh,-1
			hotspot 0,dh,0
			hotspot 0,dh,l
			hotspot -t_ug,dh-t_ug,0
			hotspot -t_ug,dh-t_ug,l
			t=max(zaz,t)
			flag_form = 1
		endif
		if perem_coord[inx][6] = iType_UGMIRR then !Уголок зеркально
			t_ug = perem_tug[inx_type]
			zaz = perem_coord[inx][7]
			put 0+zaz,dh,jt
			put 0+zaz,dh+h-t_ug,jt
			put t_ug+zaz,dh+h-t_ug,jt
			put t_ug+zaz,dh-t_ug,jt
			put -ttt+t_ug+zaz,dh-t_ug,jt
			put -ttt+t_ug+zaz,dh,jt
			put 0+zaz,dh,-1

			hotspot 0+zaz,dh,0
			hotspot 0+zaz,dh,l
			hotspot t_ug+zaz,dh-t_ug,0
			hotspot t_ug+zaz,dh-t_ug,l
			t=zaz
			flag_form = 1
		endif
		if perem_coord[inx][6] = iType_UGx2 then !Спаренный уголок
				t_ug = perem_tug[inx_type]
				zaz = perem_coord[inx][7]
				put 0+zaz,dh,jt
				put 0+zaz,dh+h-t_ug,jt
				put t_ug+zaz,dh+h-t_ug,jt
				put t_ug+zaz,dh-t_ug,jt
				put -ttt+t_ug+zaz,dh-t_ug,jt
				put -ttt+t_ug+zaz,dh,jt
				put 0+zaz,dh,-1
				put 0,dh,jt
				put 0,dh+h-t_ug,jt
				put -t_ug,dh+h-t_ug,jt
				put -t_ug,dh-t_ug,jt
				put ttt-t_ug,dh-t_ug,jt
				put ttt-t_ug,dh,jt
				put 0,dh,-1
				hotspot 0+zaz,dh,0
				hotspot 0+zaz,dh,l
				hotspot t_ug+zaz,dh-t_ug,0
				hotspot t_ug+zaz,dh-t_ug,l
				hotspot 0,dh,0
				hotspot 0,dh,l
				hotspot -t_ug,dh-t_ug,0
				hotspot -t_ug,dh-t_ug,l
				t=zaz
			flag_form = 1
		endif
		if perem_coord[inx][6] = iType_PROF and flag_form = 0 then 
			gosub "draw_profile_2d"
			if NSP>0 then tt=max(get(NSP))
			flag_form = 1
		endif
		if flag_form = 0 then !Всё остальное
			put 0,dh,jt
			put 0,dh+h,jt
			put ttt,dh+h,jt
			put ttt,dh,jt
			put 0,dh,-1
			t = ttt
		endif
	endif
return

"set_pen":
	pen_cont = perem_pen_cont
	pen_cut = perem_pen_cut
	pen_sim = perem_pen_sim
	_fillType = perem_fill
	_fillPen = perem_fill_pen
	_fillBgPen = perem_fill_bg
	if inx = 0 then inx = 1
	if not(perem_pen_eq_sim) then
		ii = perem_coord[inx][6]
		if ii>EPS then pen_sim = perem_pen_sim_m[ii+1]
		if pen_sim<1 or pen_sim>255 then pen_sim=1
	endif
	if abs(show_perem_2d-3)>EPS and GLOB_VIEW_TYPE<>9 then
		pen_cont = pen_sim
		pen_cut = pen_sim
	endif
	drawindex 30
	if isEmp then
		pen_cut = 1
		drawindex 20
	endif
	if perem_fill_eq then
		n = REQUEST{2} ("Building_Material_info", _bmat, "gs_bmat_cutfill_properties", _fillType, _fillPen, _fillBgPen)
	endif
	if perem_ved_wall_eq and perem_material[inx] <> perem_empt_material and perem_coord[inx][6]=-2 then
		_fillType = perem_ved_wall_fill
		_fillPen = perem_ved_wall_fill_pen
		_fillBgPen = perem_ved_wall_fill_bg
		pen_cont = perem_ved_wall_pen
		pen_cut = perem_ved_wall_pen
	endif
	if pen_cont<1 or pen_cont>255 then pen_cont=1
	if pen_cut<1 or pen_cut>255 then pen_cut=1
	if pen_sim<1 or pen_sim>255 then pen_sim=1
	if _fillPen<1 or _fillPen>255 then _fillPen=1
	if _fillBgPen<1 or _fillBgPen>255 then _fillBgPen=0
	if isError then
		pen_cont=pen_alert
		pen_cut=pen_alert
		pen_sim=pen_alert
		_fillPen=pen_alert
		_fillBgPen=pen_alert
	endif
return

"hotspot_2d_1":
	inx=1
	ht = perem_t[inx]*perem_qty_by_type_1+perem_zazor_1*(perem_qty_by_type_1-1)
	if isShow[inx] then
		HOTSPOT2	perem_dlin[inx]/2,				ht/2,	unID,	perem_dl_1,	1+128 : unID=unID+1
		HOTSPOT2	perem_dlin[inx]/2+perem_dl_1,	ht/2,	unID,	perem_dl_1,	2 : unID=unID+1
		HOTSPOT2	perem_dlin[inx]/2-1,			ht/2,	unID,	perem_dl_1,	3 : unID=unID+1
		HOTSPOT2	-perem_dlin[inx]/2,				ht/2,	unID,	perem_dl_1,	1+128 : unID=unID+1
		HOTSPOT2	-perem_dlin[inx]/2+perem_dl_1,	ht/2,	unID,	perem_dl_1,	2 : unID=unID+1
		HOTSPOT2	-perem_dlin[inx]/2-1,			ht/2,	unID,	perem_dl_1,	3 : unID=unID+1
	endif
return

"hotspot_2d_2":
	inx=2
	ht = perem_t[inx]*perem_qty_by_type_2+perem_zazor_2*(perem_qty_by_type_2-1)
	if isShow[inx] then
		HOTSPOT2	perem_dlin[inx]/2,				ht/2,	unID,	perem_dl_2,	1+128 : unID=unID+1
		HOTSPOT2	perem_dlin[inx]/2+perem_dl_2,	ht/2,	unID,	perem_dl_2,	2 : unID=unID+1
		HOTSPOT2	perem_dlin[inx]/2-1,			ht/2,	unID,	perem_dl_2,	3 : unID=unID+1
		HOTSPOT2	-perem_dlin[inx]/2,				ht/2,	unID,	perem_dl_2,	1+128 : unID=unID+1
		HOTSPOT2	-perem_dlin[inx]/2+perem_dl_2,	ht/2,	unID,	perem_dl_2,	2 : unID=unID+1
		HOTSPOT2	-perem_dlin[inx]/2-1,			ht/2,	unID,	perem_dl_2,	3 : unID=unID+1
	endif
return

"hotspot_2d_3":
	inx=3
	ht = perem_t[inx]*perem_qty_by_type_3+perem_zazor_3*(perem_qty_by_type_3-1)
	if isShow[inx] then
		HOTSPOT2	perem_dlin[inx]/2,				ht/2,	unID,	perem_dl_3,	1+128 : unID=unID+1
		HOTSPOT2	perem_dlin[inx]/2+perem_dl_3,	ht/2,	unID,	perem_dl_3,	2 : unID=unID+1
		HOTSPOT2	perem_dlin[inx]/2-1,			ht/2,	unID,	perem_dl_3,	3 : unID=unID+1
		HOTSPOT2	-perem_dlin[inx]/2,				ht/2,	unID,	perem_dl_3,	1+128 : unID=unID+1
		HOTSPOT2	-perem_dlin[inx]/2+perem_dl_3,	ht/2,	unID,	perem_dl_3,	2 : unID=unID+1
		HOTSPOT2	-perem_dlin[inx]/2-1,			ht/2,	unID,	perem_dl_3,	3 : unID=unID+1
	endif
return

"hotspot_2d_4":
	inx=4
	ht = perem_t[inx]*perem_qty_by_type_4+perem_zazor_4*(perem_qty_by_type_4-1)
	if isShow[inx] then
		HOTSPOT2	perem_dlin[inx]/2,				ht/2,	unID,	perem_dl_4,	1+128 : unID=unID+1
		HOTSPOT2	perem_dlin[inx]/2+perem_dl_4,	ht/2,	unID,	perem_dl_4,	2 : unID=unID+1
		HOTSPOT2	perem_dlin[inx]/2-1,			ht/2,	unID,	perem_dl_4,	3 : unID=unID+1
		HOTSPOT2	-perem_dlin[inx]/2,				ht/2,	unID,	perem_dl_4,	1+128 : unID=unID+1
		HOTSPOT2	-perem_dlin[inx]/2+perem_dl_4,	ht/2,	unID,	perem_dl_4,	2 : unID=unID+1
		HOTSPOT2	-perem_dlin[inx]/2-1,			ht/2,	unID,	perem_dl_4,	3 : unID=unID+1
	endif
return

"draw_profile_2d":
	index = perem_archprofile[inx_type]
	for _iComp = 1 to _nComponents_m[inx_type]
		if _bShowPart_m[inx_type][_iComp] then
			_pen = 1
			_bmat = 1
			dim _currPens[]
			dim _currLineTypes[]
			n = REQUEST{4} ("Profile_component_info", index, _iComp, "gs_profile_outlinepen", _pen)
			n = REQUEST{4} ("Profile_component_info", index, _iComp, "gs_profile_bmat", _bmat)
			n = REQUEST{4} ("Profile_component_info", index, _iComp, "gs_profile_comp_pens", _currPens)
			n = REQUEST{4} ("Profile_component_info", index, _iComp, "gs_profile_comp_linetypes", _currLineTypes)
			if not(perem_fill_eq) then _bmat = perem_material_type[inx_type]
			if not(perem_fill_eq) then _pen = perem_pen_cut
			gosub "set_pen"
			if _fillTyp>EPS then fill _fillType
			pen _pen
			_penLtIdx = 1
			for _i = _idxStartPoints_m[inx_type][_iComp] to _idxEndPoints_m[inx_type][_iComp] step 5
				if not(perem_fill_eq) then _currPens[_penLtIdx] = perem_pen_cut
				put 	_profileGeometryRawData_m[inx_type][_i],		! xn
					_profileGeometryRawData_m[inx_type][_i + 1]+dh,	! yn
					_profileGeometryRawData_m[inx_type][_i + 2] + _profileGeometryRawData_m[inx_type][_i + 4],	! status values : edgeVisible + additionalStatus
					_currPens[_penLtIdx],			! pen
					_currLineTypes[_penLtIdx]		! linetype
				_penLtIdx = _penLtIdx + 1
			next _i	
			poly2_b{6} (NSP/5), 1+2+4, 1, 0,	! cut fill, 0 distortion flag
				_fillPen, _fillBgPen,
				0, 0,				! fill origin
				0.1, 0.1, 0.2, 0.2,		! mxx, mxy, myx, myy
				0.1, 				! gradientInnerRadius
				get (NSP)
		endif
	next _iComp
return

"get_block":
	width_factor = 1
	charspace_factor = 1
	if vartype(tblockname)<>2 then tblockname = "emp"
	if vartype(txtv)=1 then txtv = str("%.0",txtv)
	paragraph tblockname+"p" 2,
			0, 0, 0,
			1
			style name_style
			txtv
	endparagraph
	TEXTBLOCK tblockname 0, 5, 0, width_factor, charspace_factor, 1,tblockname+"p"
	width = Shrift_razm : height = Shrift_razm
	n = REQUEST("TEXTBLOCK_INFO", tblockname, width, height)
	tbwidth = width * PAPER_TO_MODEL
	tbheight = height * PAPER_TO_MODEL
	sss=request("Height_of_style", name_style, height, descent, leading)
	dx_txt = (height/2-descent-leading-Shrift_razm/2)*PAPER_TO_MODEL
return
]]>
</Script_2D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_1D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
FILE_DEPENDENCE "Libraryflobals-perem", "LibraryGlobals13"
EPS=0.0001
unIDR = 9000 : unID = 120

!----- Нужно бы это в параметры вынести --------------------------------
min_opir = 0.12 !Минимально возможное опирание
max_opir = 1	!Максимально возможное опирание
zs_updown = 0.03 !Защитный слой снизу
zs_leftright = 0.02 !Защитный слой слева-справа
zs_top = 0.02 !Защитны слой в торцах
gost_ug = ""
Shrift = "ISOCPEUR"
Shrift_razm = 3
Shrift_razmr = 2.5
Shrift_tip = 0
pen_alert = 20
!----- Нужно бы это в параметры вынести -------------------------------
COMPTYPE_CORE = 0
COMPTYPE_FINISH = 1
COMPTYPE_OTHER = 2
!-------- Список возможных типов --------------------------------------
iType_NO = 0
iType_SB = 1
iType_CONC = 2
iType_ARM = 3
iType_UG = 4
iType_UGMIRR = 5
iType_UGx2 = 6
iType_PROF = 7
dim t_type_perem[8] : dim itype_perem[8]
	t_type_perem[1] = "Нет"					: itype_perem[1] = iType_NO
	t_type_perem[2] = "Сборная"				: itype_perem[2] = iType_SB
	t_type_perem[3] = "Монолитная"			: itype_perem[3] = iType_CONC
	t_type_perem[4] = "Рядовая"				: itype_perem[4] = iType_ARM
	t_type_perem[5] = "Уголок"				: itype_perem[5] = iType_UG
	t_type_perem[6] = "Уголок зеркально"	: itype_perem[6] = iType_UGMIRR
	t_type_perem[7] = "Спар. уголок"		: itype_perem[7] = iType_UGx2
	t_type_perem[8] = "Сложный профиль"		: itype_perem[8] = iType_PROF
!Префиксы к наименованиям в спецификации
dim t_perem_naen_prefix[6]
	t_perem_naen_prefix[1] = "Брусковая "
	t_perem_naen_prefix[2] = "Фибробетонная D600 B2.0 "
	t_perem_naen_prefix[3] = "Рядовая из "
	t_perem_naen_prefix[4] = "Монолитная ж/б "
	t_perem_naen_prefix[5] = "Уголок "
	t_perem_naen_prefix[6] = "Уголок "
!-------- Список возможных типов ---------------------------------------

!---------Данные по типам - в массивы ----------------------------------
dim epm1i[] : epm1i[1] = 0
dim isShow[4] : isShow[1] = 0
dim perem_pos[4]
dim perem_profile[4]
dim perem_subtype[4]
dim perem_qty_by_type[4]
dim perem_dh[4]
dim perem_dl[4]
dim perem_zazor[4]
dim perem_type[4]
dim perem_pos[4]
dim perem_min_opir[4]
dim perem_material_type[4]
dim perem_archprofile[4]
dim perem_ves_p[4]
dim perem_dhe[4]
dim perem_dhf[4]
dim perem_podbor[4]
dim perem_mh[4]
dim perem_mt[4]

perem_pos[1]=perem_pos_1
perem_profile[1]=perem_profile_1
perem_qty_by_type[1]=perem_qty_by_type_1*perem_qty_type[1]
perem_dh[1]=perem_dh_1
perem_dl[1]=perem_dl_1
perem_zazor[1]=perem_zazor_1
perem_material_type[1]=perem_material_1
perem_type[1]=perem_type_1
perem_min_opir[1] = perem_min_opir_1
perem_archprofile[1]=perem_archprofile_1
perem_ves_p[1]=perem_ves_p_1
perem_dhe[1] = perem_dhe_1
perem_dhf[1] = perem_dhf_1
perem_subtype[1] = perem_subtype_1
perem_podbor[1] = perem_podbor_1
perem_mh[1]=perem_h_1
perem_mt[1]=perem_t_1

perem_pos[2]=perem_pos_2
perem_profile[2]=perem_profile_2
perem_qty_by_type[2]=perem_qty_by_type_2*perem_qty_type[2]
perem_dh[2]=perem_dh_2
perem_dl[2]=perem_dl_2
perem_zazor[2]=perem_zazor_2
perem_material_type[2]=perem_material_2
perem_type[2]=perem_type_2
perem_min_opir[2] = perem_min_opir_2
perem_archprofile[2]=perem_archprofile_2
perem_ves_p[2]=perem_ves_p_2
perem_dhe[2] = perem_dhe_2
perem_dhf[2] = perem_dhf_2
perem_subtype[2] = perem_subtype_2
perem_podbor[2] = perem_podbor_2
perem_mh[2]=perem_h_2
perem_mt[2]=perem_t_2

perem_pos[3]=perem_pos_3
perem_profile[3]=perem_profile_3
perem_qty_by_type[3]=perem_qty_by_type_3*perem_qty_type[3]
perem_dh[3]=perem_dh_3
perem_dl[3]=perem_dl_3
perem_zazor[3]=perem_zazor_3
perem_material_type[3]=perem_material_3
perem_type[3]=perem_type_3
perem_min_opir[3] = perem_min_opir_3
perem_archprofile[3]=perem_archprofile_3
perem_ves_p[3]=perem_ves_p_3
perem_dhe[3] = perem_dhe_3
perem_dhf[3] = perem_dhf_3
perem_subtype[3] = perem_subtype_3
perem_podbor[3] = perem_podbor_3
perem_mh[3]=perem_h_3
perem_mt[3]=perem_t_3

perem_pos[4]=perem_pos_4
perem_profile[4]=perem_profile_4
perem_qty_by_type[4]=perem_qty_by_type_4*perem_qty_type[4]
perem_dh[4]=perem_dh_4
perem_dl[4]=perem_dl_4
perem_zazor[4]=perem_zazor_4
perem_material_type[4]=perem_material_4
perem_type[4]=perem_type_4
perem_min_opir[4] = perem_min_opir_4
perem_archprofile[4]=perem_archprofile_4
perem_ves_p[4]=perem_ves_p_4
perem_dhe[4] = perem_dhe_4
perem_dhf[4] = perem_dhf_4
perem_subtype[4] = perem_subtype_4
perem_podbor[4] = perem_podbor_4
perem_mh[4]=perem_h_4
perem_mt[4]=perem_t_4
!---------Данные по типам - в массивы ----------------------------------

!--------- Используются ли перемычки и каковы границы типов ------------
flag_not_use = 0 : inx_start_type = 0 	!Конец и начало
has_SB = 0 : has_ARM = 0 : has_CONC = 0 : has_UG = 0 : has_PROF = 0 !Какие типы испольуются
for i=1 to vardim1(perem_qty_type)
	if perem_qty_type[i]>EPS then 
		flag_not_use = i
		if perem_type[i]=iType_SB then has_SB = 1
		if perem_type[i]=iType_CONC or perem_type[i]=iType_ARM then has_ARM = 1
		if perem_type[i]=iType_CONC then has_CONC = 1
		if perem_type[i]=iType_UG or perem_type[i]=iType_UGMIRR or perem_type[i]=iType_UGx2 then has_UG = 1
		if perem_type[i]=iType_PROF and perem_archprofile[i]>EPS then has_PROF = 1
		isShow[i]=1
	endif
	if perem_qty_type[i]>EPS and inx_start_type<EPS then inx_start_type = i
next i
!--------- Используются ли перемычки и каковы границы типов ------------

main_name = "" : n = REQUEST ("Name_of_main", "", main_name)
isPrew = (GLOB_PREVIEW_MODE<>0)
isEdit = GLOB_FEEDBACK_MODE

if main_name="" then
	if not(isPrew) then
		DIM tt[]
		DIM name_elev[]
		DIM size_elev[][]
		DIM numb_elev[]
		n = REQUEST ("STORY_INFO", "", nelev, tt)
		FOR i = 1 TO nelev
			numb_elev[i] = tt [4 * (i - 1) + 1]
			name_elev[i] = tt [4 * (i - 1) + 2]
			size_elev[i][1] = tt [4 * (i - 1) + 3]
			size_elev[i][2] = size_elev[i][1] + tt [4 * (i - 1) + 4]
		NEXT i
		aaz = SYMB_POS_Z
		if abs(aaz)<EPS then
			az = "0.000"
			znak1 = ""
		 else
			az = str("%.3m", abs(aaz))
			if aaz < EPS then 
				znak1 = "-"
			else
				znak1 = "+"
			endif
		endif
		parameters ur_num = aaz
		parameters ur = znak1 + az
		if not(manual_elev) then
			FOR i = 1 TO nelev
				if aaz>=size_elev[i][1] and aaz<size_elev[i][2] then parameters n_elev = numb_elev[i]
			next i
		endif
	endif
endif

if not(flag_not_use) then goto "mend"

if GLOB_SCRIPT_TYPE = 2 or GLOB_SCRIPT_TYPE = 3 then
	!------------ Параметры отображения -------------------------------------------------------------
	dim perem_pen_sim_m[] : perem_pen_sim_m[1]=1
	_fillType=1 : _fillPen=1 : _fillBgPen=0 : pen_cont = 1 : pen_sim = 1 : _mat = 0 : perem_ved_wall_pen=1 : perem_ved_wall_show = 0
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "perem_pen_cut", perem_pen_cut)
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "perem_pen_cont", perem_pen_cont)
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "perem_pen_eq_sim", perem_pen_eq_sim)
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "perem_pen_sim", perem_pen_sim)
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "perem_pen_sim_m", perem_pen_sim_m)
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "perem_fill_eq", perem_fill_eq)
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "perem_fill", perem_fill)
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "perem_fill_pen", perem_fill_pen)
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "perem_fill_bg", perem_fill_bg)
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "perem_ved_wall_show", perem_ved_wall_show)
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "perem_ved_wall_pen", perem_ved_wall_pen)
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "perem_ved_wall_eq", perem_ved_wall_eq)
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "perem_ved_wall_fill", perem_ved_wall_fill)
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "perem_ved_wall_fill_pen", perem_ved_wall_fill_pen)
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "perem_ved_wall_fill_bg", perem_ved_wall_fill_bg)
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "perem_ved_pos", perem_ved_pos)

	if perem_pen_cut<1 or perem_pen_cut>255 then perem_pen_cut=1
	if perem_pen_cont<1 or perem_pen_cont>255 then perem_pen_cont=1
	if perem_pen_sim<1 or perem_pen_sim>255 then perem_pen_sim=1
	if perem_fill_pen<1 or perem_fill_pen>255 then perem_fill_pen=1
	if perem_fill_bg<1 or perem_fill_bg>255 then perem_fill_bg=19
	if perem_ved_wall_pen<1 or perem_ved_wall_pen>255 then perem_ved_wall_pen=1
	if perem_ved_wall_fill_pen<1 or perem_ved_wall_fill_pen>255 then perem_ved_wall_fill_pen=1
	if perem_ved_wall_fill_bg<1 or perem_ved_wall_fill_bg>255 then perem_ved_wall_fill_bg=19
	!------------ Параметры отображения -------------------------------------------------------------

	!---------- Сложный профиль -------------
	!Т.к. клятый архикад не даёт записать данные о профиле в параметры
	if has_PROF then
		_nComponents = 0
		dim _componentTypes[]
		dim _bShowPart[]
		dim _profileGeometryRawData[]
		dim _idxStartPoints[]
		dim _idxEndPoints[]
		dim _nComponents_m[]
		dim _bShowPart_m[][]
		dim _idxStartPoints_m[][]
		dim _idxEndPoints_m[][]
		dim _profileGeometryRawData_m[][]
		for i=inx_start_type to flag_not_use
			if perem_type[i]=iType_PROF then 
				index = perem_archprofile[i]
				n = REQUEST ("Profile_default_boundingbox", index, xmin, ymin, xmax, ymax)
				perem_h[i] = ymax + ymin
				perem_t[i] = xmax + xmin
				if (strlen(perem_profile[i])-2)<EPS then
					name = ""
					n = REQUEST ("Name_of_Profile", index, name)
					perem_profile[i] = name
				endif
				_componentTypes=epm1i
				_nComponents=0
				_bShowPart=epm1i
				_profileGeometryRawData=epm1i
				_idxStartPoints=epm1i
				_idxEndPoints=epm1i
				!Запрашиваем геометрию
				n = REQUEST ("Profile_components", index, _nComponents, _componentTypes)
				if n then
					_needRequestDetails = 0
					for _i = 1 to _nComponents
						_bShowPart[_i] = 1    
						  if (GLOB_STRUCTURE_DISPLAY = 1 or GLOB_VIEW_TYPE=9) AND _componentTypes[_i] <> COMPTYPE_CORE then _bShowPart[_i] = 0
						  if (GLOB_STRUCTURE_DISPLAY = 2 or GLOB_VIEW_TYPE=9) AND _componentTypes[_i] = COMPTYPE_FINISH then _bShowPart[_i] = 0
						  if _bShowPart[_i] then _needRequestDetails = 1
					next _i
					if _needRequestDetails then
						n = REQUEST ("Profile_default_geometry", index, _profileGeometryRawData)	 
						_idxStartPoints[1] = _nComponents + 1
						_numPropertybyNodes = 5
						for _i = 2 to _nComponents
							_numCompNodes = _profileGeometryRawData[_i - 1]
							_idxStartPoints[_i] = _idxStartPoints[_i - 1] + _numCompNodes * _numPropertybyNodes
							_idxEndPoints[_i-1] = _idxStartPoints[_i] - 1
						next _i
						_idxEndPoints[_nComponents] = vardim1(_profileGeometryRawData)
					endif
				endif
				!Распихиваем геометрию по массивам
				for n = 1 to _nComponents
					_idxStartPoints_m[i][n] = _idxStartPoints[n]
					_idxEndPoints_m[i][n] = _idxEndPoints[n]
					_bShowPart_m[i][n] = _bShowPart[n]
				next n
				if vardim1(_profileGeometryRawData)>EPS then
					for n = 1 to vardim1(_profileGeometryRawData)
						_profileGeometryRawData_m[i][n] = _profileGeometryRawData[n]
					next n
				endif
				_nComponents_m[i]=_nComponents
			endif
		next i
	endif
	!---------- Сложный профиль -------------
endif

dim perem_coord[][8]
dim perem_material[]
inx = 1
perem_sum_t = 0
perem_coord[inx][1] = perem_zazor_type[1]
perem_coord[inx][2] = 0
perem_coord[inx][3] = 0
perem_coord[inx][4] = 0
perem_coord[inx][5] = 0
perem_coord[inx][6] = -1 
perem_coord[inx][7] = 0 : perem_coord[inx][8] = 0
perem_material[inx] = -1
perem_sum_t = perem_sum_t + perem_coord[inx][1]+(perem_coord[inx][6] = 5 or perem_coord[inx][6] = 6)*perem_coord[inx][7]+(perem_coord[inx][6] = 4)*max(perem_coord[inx][7],perem_coord[inx][1])

inx_last = 2
for i=inx_start_type to flag_not_use
	if perem_qty_type[i]>EPS then
		if main_name<>"" and WALL_COMPS_NAME_<>"" and perem_th_by_layer[i]>EPS then
			it = perem_th_by_layer[i]
			if (GLOB_STRUCTURE_DISPLAY = 1 or GLOB_STRUCTURE_DISPLAY = 2) AND WALL_SKINS_PARAMS_[it][6]<EPS then isShow[i] = 0
!			if GLOB_STRUCTURE_DISPLAY = 2 AND WALL_SKINS_PARAMS_[it][15]>1 then isShow[i] = 0
			if perem_type[i]<EPS then isShow[i] = 0
		endif
		!Зазор между типами
		if i-1>EPS then
			inx = inx+1
			dh = perem_dh[i]
			if perem_dhe[i] then dh=0
			perem_coord[inx][1] = perem_zazor_type[i] !Ширина зазора
			perem_coord[inx][2] = perem_h[i]	!Высотa зазора
			perem_coord[inx][3] = max(dh,perem_dh[inx_last])			!Смещение зазора по вертикали
			perem_coord[inx][4] = perem_dlin[i]		!Длина зазора
			perem_coord[inx][5] = perem_dl[i]			!Смещение зазора по горизонтали
			perem_coord[inx][6] = -2					!Тип 
			perem_coord[inx][7] = 0
			perem_coord[inx][8] = 0
			perem_material[inx] = perem_empt_material*(abs(perem_zazor_by_layer[i])<EPS)
			perem_sum_t = perem_sum_t + perem_coord[inx][1]+(perem_coord[inx][6] = 5 or perem_coord[inx][6] = 6)*perem_coord[inx][7]+(perem_coord[inx][6] = 4)*max(perem_coord[inx][7],perem_coord[inx][1])
		endif
		for j=1 to perem_qty_by_type[i]
			dh = perem_dh[i]
			if perem_dhf[i] and (j-1)>EPS then dh=0
			if perem_dhe[i] and (perem_qty_by_type[i]-j)>EPS then dh=0
			inx = inx+1
			perem_coord[inx][1] = perem_t[i]
			perem_coord[inx][2] = perem_h[i]
			perem_coord[inx][3] = dh
			perem_coord[inx][4] = perem_dlin[i]
			perem_coord[inx][5] = perem_dl[i]	
			perem_coord[inx][6] = perem_type[i]
			perem_coord[inx][7] = perem_zazor[i]
			perem_coord[inx][8] = i
			perem_material[inx] = perem_material_type[i]
			perem_sum_t = perem_sum_t + perem_coord[inx][1]+(perem_coord[inx][6] = 5 or perem_coord[inx][6] = 6)*perem_coord[inx][7]+(perem_coord[inx][6] = 4)*max(perem_coord[inx][7],perem_coord[inx][1])
			!Зазор между элементами
			if abs(perem_qty_by_type[i]-1)>EPS and (perem_qty_by_type[i]-j)>EPS then
				inx = inx+1
				perem_coord[inx][1] = perem_zazor[i]
				perem_coord[inx][2] = perem_h[i]
				perem_coord[inx][3] = dh
				perem_coord[inx][4] = perem_dlin[i]
				perem_coord[inx][5] = perem_dl[i]
				perem_coord[inx][6] = -1
				perem_coord[inx][7] = 0 : perem_coord[inx][8] = 0
				perem_material[inx] = perem_empt_material
				perem_sum_t = perem_sum_t + perem_coord[inx][1]+(perem_coord[inx][6] = 5 or perem_coord[inx][6] = 6)*perem_coord[inx][7]+(perem_coord[inx][6] = 4)*max(perem_coord[inx][7],perem_coord[inx][1])
			endif
		next j
		inx_last = i
	endif
next i
dim qty_arm[4][2] : qty_arm[1][1] = 0 !Количество стержней в рядовой или монолитнй [основная][хомуты]
perem_max_h = 0
perem_max_l = 0
perem_max_dl = 0
perem_max_dh = 0
isError = 0
for i=inx_start_type to flag_not_use
	qty_arm[i][1] = 0 : qty_arm[i][2] = 0
	if perem_qty_by_type[i]>EPS then
		if (perem_h[i]-perem_dh[i])-perem_max_h>EPS then perem_max_h = perem_h[i]+perem_dh[i]
		if (perem_dh[i]-perem_max_dh)>EPS then perem_max_dh = perem_dh[i]
		if perem_dlin[i]-perem_max_l>EPS then perem_max_l = perem_dlin[i]
		if perem_dl[i]-perem_max_dl>EPS then perem_max_dl = perem_dl[i]
		if perem_type[i]=iType_ARM then
			if perem_shag_osn<EPS then perem_shag_osn = 50/1000
			qty_arm_osn = (perem_t[i]-zs_leftright*2)/perem_shag_osn
			if (qty_arm_osn-1)>EPS then
				if ceil(qty_arm_osn)>EPS then qty_arm_osn = int(qty_arm_osn)+1
			else
				qty_arm_osn = 2
			endif
			qty_arm[i][1] = qty_arm_osn
		endif
!------ПРОВЕРКА ДЛИНЫ ТУТ ------------
		less_opir = (perem_dlin[i]<ac_wallhole_width)
		if less_opir and perem_type[i]<>iType_NO then isError = 1
!------ПРОВЕРКА ДЛИНЫ ТУТ ------------
	endif
next i

"mend":
]]>
</Script_1D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_PR SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
if not(flag_not_use) then end

call "Спецификатор" parameters tip_el="70",
								subpos = perem_marka,
								pos = perem_marka,
								obozn="",
								naen=perem_marka_sum,
								kol_vo_spec=1,
								komment="",
								n_elev = n_elev,
								mun_elev = 1,
								otm_elem = ur_num
for i=inx_start_type to flag_not_use
	if perem_qty_by_type[i]>EPS and perem_naen[i]<>"" then
		qty = perem_qty_by_type[i]
		if perem_pos[i]="!" then perem_pos[i]=""
		if perem_type[i]=iType_UGx2 then qty=qty*2
		komment = " "
		call "Спецификатор" parameters tip_el="71",
										subpos = perem_marka, 
										pos = perem_pos[i], 
										obozn=perem_obozn[i],
										naen=perem_naen[i],
										ves=perem_ves[i],
										kol_vo_spec=qty,
										komment=komment, n_elev = n_elev, mun_elev = 1, otm_elem = ur_num
		if perem_type[i]=iType_UG or perem_type[i]=iType_UGMIRR or perem_type[i]=iType_UGx2 then
			tip_el = "20"
			dlin_prof=perem_dl[i]
			if dlin_prof<EPS then dlin_prof = 0.001
			dlin_prof = round_int(dlin_prof*1000)/1000
			call "Спецификатор" parameters tip_el=tip_el,
											subpos = "Всего уголка", 
											pos = "",
											tip_konstr=" ",
											stal_gost=" ",
											mater="C245",
											obozn=gost_ug,
											tip_profile=perem_profile[i],
											dlin_prof=perem_dlin[i],
											ves=perem_ves[i],
											naen="@@п.м.", n_elev = n_elev, mun_elev = 1, otm_elem = ur_num, spec_add_param = "@per=1"
		endif
		if perem_type[i]=iType_ARM then
			vol = perem_t[i]*perem_h[i]*perem_dlin[i]*1.05
			komment = "куб.м."
			call "Спецификатор" parameters tip_el="30",
											subpos = "Итого на рядовые перемычки",  
											obozn=" ",
											naen="Раствор " + perem_concr,
											kol_vo_spec=vol,
											komment=komment, n_elev = n_elev, mun_elev = 1, otm_elem = ur_num, spec_add_param = "@per=1"
			call "Спецификатор" parameters tip_el="10",
											subpos = "Всего на рядовые", 
											pos = " ",
											marka=perem_class,
											diam_arm=perem_diam,
											dlin_st=perem_dlin[i]-zs_top*2,
											kol_vo_spec=qty_arm[i][1],
											fon=1,
											plit=0,
											gnut=0, n_elev = n_elev, mun_elev = 1, otm_elem = ur_num, spec_add_param = "@per=1"
		endif
	endif
next i
]]>
</Script_PR>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_UI SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
if main_name = "" then 
	UI_dialog `Пар-ры перемычки`,444,300
	pId = 1
else
	pId = 903
endif
UI_PAGE pId, -1, "Перемычки"
sx = 0 : sy = 0
b_pg=444
sx=int(b_pg/vardim1(perem_qty_type))-20
n_use=0
for i=1 to 4
	UI_OUTFIELD	`Тип `+str("%.0",i),	sx-10,	sy,	30,15
	UI_INFIELD{3} perem_qty_type[i], sx, sy+18, 15, 15
	if perem_qty_type[i]>EPS then
		n_use=n_use+1
		UI_OUTFIELD	`Зазор`,	sx-int(b_pg/4)/2-10,	sy,	40,15
		UI_INFIELD{3} perem_zazor_type[i], sx-int(b_pg/4)+25, sy+18, 38, 15 UI_tooltip "Величина зазора в мм"
		if main_name<>"" and WALL_COMPS_NAME_<>"" then
			UI_OUTFIELD	`(`,sx-int(b_pg/4)/2+15,	sy+18,	3,15
			UI_INFIELD{3} perem_zazor_by_layer[i], sx-int(b_pg/4)+75, sy+18, 20, 15 UI_tooltip "Номер слоя для"
			UI_OUTFIELD	`)`,sx-int(b_pg/4)/2+40,	sy+18,	5,15
		endif
	endif
	sx=sx+int(b_pg/4)
next i
sx = 5 : sys = 40
if n_use<EPS then
	UI_OUTFIELD	`Перемычки не используются`,sx+130,	sys+60,	180,15
	end
endif

hx = int((b_pg-5*n_use)/n_use)
hxf = hx-10

i=1
if perem_qty_type[i]>EPS then 
	gosub "t_1"
	sx=sx+hx+5
endif
i=2
if perem_qty_type[i]>EPS then 
	gosub "t_2"
	sx=sx+hx+5
endif
i=3
if perem_qty_type[i]>EPS then 
	gosub "t_3"
	sx=sx+hx+5
endif
i=4
if perem_qty_type[i]>EPS then 
	gosub "t_4"
	sx=sx+hx+5
endif
UI_INFIELD	"perem_config", 5, 270, b_pg-10, 20 UI_tooltip "Строка конфигурации"

UI_PAGE pId+1, pId, "Общие параметры"
un_f = 44
un = un_f + 1
ui_listfield un_f, 0, 0, 432, 220
ui_listitem un, un_f, "perem_marka", 0 : un = un + 1
ui_listitem un, un_f, "perem_mul", 0 : un = un + 1
ui_listitem un, un_f, "perem_reverse", 0 : un = un + 1

ui_listitem un, un_f, "", 0, "", "Сброс данных" : un = un + 1
ui_listitem un, un_f, "perem_pos_reset", 1 : un = un + 1
ui_listitem un, un_f, "perem_marka_reset", 1 : un = un + 1
ui_listitem un, un_f, "perem_reset", 1 : un = un + 1

ui_listitem un, un_f, "", 0, "", "Минимальное опирание" : un = un + 1
if perem_qty_type[1]>EPS then ui_listitem un, un_f, "perem_min_opir_1", 1 : un = un + 1
if perem_qty_type[2]>EPS then ui_listitem un, un_f, "perem_min_opir_2", 1 : un = un + 1
if perem_qty_type[3]>EPS then ui_listitem un, un_f, "perem_min_opir_3", 1 : un = un + 1
if perem_qty_type[4]>EPS then ui_listitem un, un_f, "perem_min_opir_4", 1 : un = un + 1
ui_listitem un, un_f, "", 0, "", "Материалы" : un = un + 1
ui_listitem un, un_f, "perem_empt_material", 1 : un = un + 1
if perem_qty_type[1]>EPS then ui_listitem un, un_f, "perem_material_1", 1 : un = un + 1
if perem_qty_type[2]>EPS then ui_listitem un, un_f, "perem_material_2", 1 : un = un + 1
if perem_qty_type[3]>EPS then ui_listitem un, un_f, "perem_material_3", 1 : un = un + 1
if perem_qty_type[4]>EPS then ui_listitem un, un_f, "perem_material_4", 1 : un = un + 1

if has_ARM then
	ui_listitem un, un_f, "", 0, "", "Параметры рядовых и монолитных перемычек" : un = un + 1
	ui_listitem un, un_f, "perem_concr", 1 : un = un + 1
	ui_listitem un, un_f, "perem_diam", 1 : un = un + 1
	ui_listitem un, un_f, "perem_shag_osn", 1 : un = un + 1
	ui_listitem un, un_f, "perem_class", 1 : un = un + 1
	if has_CONC then
		ui_listitem un, un_f, "perem_diam_dop", 1 : un = un + 1
		ui_listitem un, un_f, "perem_shag_dop", 1 : un = un + 1
		ui_listitem un, un_f, "perem_class_dop", 1 : un = un + 1
	endif
endif
if main_name="" then
	ui_listitem un, un_f, "", 0, "", "Спецификация" : un = un + 1
	ui_listitem un, un_f, "manual_elev", 1 : un = un + 1
	ui_listitem un, un_f, "n_elev", 1 : un = un + 1
endif
goto 235
"t_1":
	sy = sys
	UI_GROUPBOX "Тип "+str("%.0",i), sx, sy, hx, 225
	sy = sy + 15 : UI_INFIELD	"perem_pos_1", sx+45, sy, hxf-70, 20 UI_tooltip "Позиция элемента"
				   UI_OUTFIELD	`Поз`,sx+20,	sy+3,	25,15
	dx=0 : if n_use<3 then dx = 95
	sy = sy + 23 : UI_INFIELD	"perem_dh_1", sx+23+dx, sy, hxf-40-dx, 20 UI_tooltip "Смещение по вертикали в мм"
				   UI_INFIELD	"perem_dhf_1", sx+5, sy+3, 15, 15 UI_tooltip "Сместить первый элемент?"
				   UI_INFIELD	"perem_dhe_1", sx+hxf-6, sy+3, 15, 15 UI_tooltip "Сместить последний элемент?"
	if dx>EPS then UI_OUTFIELD	`Смещение верт.`,sx+23,	sy+3,	dx-5,15
	sy = sy + 23
	dx=0 : if n_use<3 then dx = 50
	UI_INFIELD	"perem_type_1", sx+5+dx, sy, hxf-dx, 20 UI_tooltip "Тип перемычки "+str("%.0",i)
	if dx>EPS then UI_OUTFIELD	`Тип`,sx+5,	sy+3,	dx-5,15
	if perem_type[i]=iType_SB then
		dx=0 : if n_use<3 then dx = 50
		sy = sy + 23 : UI_INFIELD	"perem_subtype_1", sx+5+dx, sy, hxf-dx, 20 UI_tooltip "Ограничение выбора"
		if dx>EPS then UI_OUTFIELD	`Подтип`,sx+5,	sy+3,	dx-5,15

		dx=28 : if n_use<3 then dx = 50
		sy = sy + 23 : UI_INFIELD	"perem_t_1", sx+dx+5, sy, hxf-dx, 20 UI_tooltip "ОГРАНИЧЕНИЕ ширины в мм"
		ttx=`B,мм` : if n_use<3 then ttx=`Ширина`
					   UI_OUTFIELD	ttx,sx+3,	sy+3,	dx,15
		ttx=`Н,мм` : if n_use<3 then ttx=`Высота`
		sy = sy + 23 : UI_INFIELD	"perem_h_1", sx+dx+5, sy, hxf-dx, 20 UI_tooltip "ОГРАНИЧЕНИЕ высоты в мм"
					   UI_OUTFIELD	ttx,sx+3,	sy+3,	dx,15
		sy = sy + 23 : UI_INFIELD	"perem_podbor_1", sx+5, sy, 15, 15 UI_tooltip "Автоподбор"
		ttx=`Автоподбор` : if n_use<3 then ttx=`Автоподбор по проёму`
					   UI_OUTFIELD	ttx,sx+23,	sy+0,	hxf-20,15
		sy = sy + 23 : UI_INFIELD	"perem_profile_1", sx+5, sy, hxf, 20 UI_tooltip "Элемент"
		
		dx=0 : if n_use<3 then dx = 50
		sy = sy + 23 : UI_INFIELD	"perem_qty_by_type_1", sx+5+dx, sy, hxf-60-dx, 20 UI_tooltip "Кол-во элементов"
					   UI_OUTFIELD	`шт`,sx+hxf-52,	sy+3,	20,15
		if dx>EPS then UI_OUTFIELD	`Кол-во`,sx+5,	sy+3,	dx-5,15
		if main_name<>"" and WALL_COMPS_NAME_<>"" then
			UI_OUTFIELD	`(`,sx+hxf-35,	sy+3,	3,15
			UI_INFIELD{3} perem_th_by_layer[i], sx+hxf-29, sy+3, 20, 15 UI_tooltip "Номер слоя стены для расчёта ширины"
			UI_OUTFIELD	`)`,sx+hxf-5,	sy+3,	3,15
		endif
	endif
	if perem_type[i]=iType_CONC or perem_type[i]=iType_ARM then
		dx=28 : if n_use<3 then dx = 50
		sy = sy + 23 : UI_INFIELD	"perem_t_1", sx+dx+5, sy, hxf-dx, 20 UI_tooltip "ОГРАНИЧЕНИЕ ширины в мм"
		ttx=`B,мм` : if n_use<3 then ttx=`Ширина`
					   UI_OUTFIELD	ttx,sx+3,	sy+3,	dx,15
		ttx=`Н,мм` : if n_use<3 then ttx=`Высота`
		sy = sy + 23 : UI_INFIELD	"perem_h_1", sx+dx+5, sy, hxf-dx, 20 UI_tooltip "ОГРАНИЧЕНИЕ высоты в мм"
					   UI_OUTFIELD	ttx,sx+3,	sy+3,	dx,15
		sy = sy + 25 : UI_INFIELD	"perem_profile_1", sx+5, sy, hxf, 20 UI_tooltip "Элемент"
		sy = sy + 25 :  UI_OUTFIELD	"L= "+STR("%.0mm",perem_dlin[i])+" мм", sx+10, sy, hxf-10, 20 UI_tooltip "Элемент"
		sy = sy + 25
		if main_name<>"" and WALL_COMPS_NAME_<>"" then 
			UI_OUTFIELD	`(`,sx+hxf-35,	sy,	3,15
			UI_INFIELD{3} perem_th_by_layer[i], sx+hxf-29, sy, 20, 15 UI_tooltip "Номер слоя стены для расчёта ширины"
			UI_OUTFIELD	`)`,sx+hxf-5,	sy,	3,15
		endif
	endif

	if perem_type[i]=iType_UG or perem_type[i]=iType_UGMIRR or perem_type[i]=iType_UGx2 then
		sy = sy + 25 : UI_INFIELD	"perem_profile_1", sx+5, sy, hxf, 20 UI_tooltip "Элемент"
		sy = sy + 25 :  UI_OUTFIELD	"L= "+STR("%.0mm",perem_dlin[i])+" мм", sx+10, sy, hxf-10, 20 UI_tooltip "Элемент"
		dx=0 : if n_use<3 then dx = 50
		sy = sy + 23 : UI_INFIELD	"perem_zazor_1", sx+5+dx, sy, hxf-40-dx, 20 UI_tooltip "Зазор между элементами в мм"
					   UI_OUTFIELD	`мм`,sx+hxf-32,	sy+3,	20,15
		if dx>EPS then UI_OUTFIELD	`Отступ`,sx+5,	sy+3,	dx-5,15
		sy = sy + 25
		if main_name<>"" and WALL_COMPS_NAME_<>"" then 
			UI_OUTFIELD	`(`,sx+hxf-35,	sy,	3,15
			UI_INFIELD{3} perem_th_by_layer[i], sx+hxf-29, sy, 20, 15 UI_tooltip "Номер слоя стены для расчёта ширины"
			UI_OUTFIELD	`)`,sx+hxf-5,	sy,	3,15
		endif
	endif
	if perem_type[i]=iType_PROF then
		sy = sy + 25 : UI_INFIELD	"perem_archprofile_1", sx+5, sy, hxf, 20 UI_tooltip "Элемент"
		sy = sy + 25 : UI_INFIELD	"perem_ves_p_1", sx+50, sy, hxf-45, 20 UI_tooltip "Вес погонного метра, кг"
					   UI_OUTFIELD	`Вес кг/м`,sx+3,	sy+3,	46,15
		sy = sy + 25 : UI_INFIELD	"perem_profile_1", sx+5, sy, hxf, 20 UI_tooltip "Наименование элемента"
	endif
return
"t_2":
	sy = sys
	UI_GROUPBOX "Тип "+str("%.0",i), sx, sy, hx, 225
	sy = sy + 15 : UI_INFIELD	"perem_pos_2", sx+45, sy, hxf-70, 20 UI_tooltip "Позиция элемента"
				   UI_OUTFIELD	`Поз`,sx+20,	sy+3,	25,15
	dx=0 : if n_use<3 then dx = 95
	sy = sy + 23 : UI_INFIELD	"perem_dh_2", sx+23+dx, sy, hxf-40-dx, 20 UI_tooltip "Смещение по вертикали в мм"
				   UI_INFIELD	"perem_dhf_2", sx+5, sy+3, 15, 15 UI_tooltip "Сместить первый элемент?"
				   UI_INFIELD	"perem_dhe_2", sx+hxf-6, sy+3, 15, 15 UI_tooltip "Сместить последний элемент?"
	if dx>EPS then UI_OUTFIELD	`Смещение верт.`,sx+23,	sy+3,	dx-5,15
	sy = sy + 23
	dx=0 : if n_use<3 then dx = 50
	UI_INFIELD	"perem_type_2", sx+5+dx, sy, hxf-dx, 20 UI_tooltip "Тип перемычки "+str("%.0",i)
	if dx>EPS then UI_OUTFIELD	`Тип`,sx+5,	sy+3,	dx-5,15
	if perem_type[i]=iType_SB then
		dx=0 : if n_use<3 then dx = 50
		sy = sy + 23 : UI_INFIELD	"perem_subtype_2", sx+5+dx, sy, hxf-dx, 20 UI_tooltip "Ограничение выбора"
		if dx>EPS then UI_OUTFIELD	`Подтип`,sx+5,	sy+3,	dx-5,15

		dx=28 : if n_use<3 then dx = 50
		sy = sy + 23 : UI_INFIELD	"perem_t_2", sx+dx+5, sy, hxf-dx, 20 UI_tooltip "ОГРАНИЧЕНИЕ ширины в мм"
		ttx=`B,мм` : if n_use<3 then ttx=`Ширина`
					   UI_OUTFIELD	ttx,sx+3,	sy+3,	dx,15
		ttx=`Н,мм` : if n_use<3 then ttx=`Высота`
		sy = sy + 23 : UI_INFIELD	"perem_h_2", sx+dx+5, sy, hxf-dx, 20 UI_tooltip "ОГРАНИЧЕНИЕ высоты в мм"
					   UI_OUTFIELD	ttx,sx+3,	sy+3,	dx,15


		sy = sy + 23 : UI_INFIELD	"perem_podbor_2", sx+5, sy, 15, 15 UI_tooltip "Автоподбор"
		ttx=`Автоподбор` : if n_use<3 then ttx=`Автоподбор по проёму`
					   UI_OUTFIELD	ttx,sx+23,	sy+0,	hxf-20,15
		sy = sy + 23 : UI_INFIELD	"perem_profile_2", sx+5, sy, hxf, 20 UI_tooltip "Элемент"
		
		dx=0 : if n_use<3 then dx = 50
		sy = sy + 23 : UI_INFIELD	"perem_qty_by_type_2", sx+5+dx, sy, hxf-60-dx, 20 UI_tooltip "Кол-во элементов"
					   UI_OUTFIELD	`шт`,sx+hxf-52,	sy+3,	20,15
		if dx>EPS then UI_OUTFIELD	`Кол-во`,sx+5,	sy+3,	dx-5,15
		if main_name<>"" and WALL_COMPS_NAME_<>"" then
			UI_OUTFIELD	`(`,sx+hxf-35,	sy+3,	3,15
			UI_INFIELD{3} perem_th_by_layer[i], sx+hxf-29, sy+3, 20, 15 UI_tooltip "Номер слоя стены для расчёта ширины"
			UI_OUTFIELD	`)`,sx+hxf-5,	sy+3,	3,15
		endif
	endif
	if perem_type[i]=iType_CONC or perem_type[i]=iType_ARM then
		dx=28 : if n_use<3 then dx = 50
		sy = sy + 23 : UI_INFIELD	"perem_t_2", sx+dx+5, sy, hxf-dx, 20 UI_tooltip "ОГРАНИЧЕНИЕ ширины в мм"
		ttx=`B,мм` : if n_use<3 then ttx=`Ширина`
					   UI_OUTFIELD	ttx,sx+3,	sy+3,	dx,15
		ttx=`Н,мм` : if n_use<3 then ttx=`Высота`
		sy = sy + 23 : UI_INFIELD	"perem_h_2", sx+dx+5, sy, hxf-dx, 20 UI_tooltip "ОГРАНИЧЕНИЕ высоты в мм"
					   UI_OUTFIELD	ttx,sx+3,	sy+3,	dx,15
		sy = sy + 25 : UI_INFIELD	"perem_profile_2", sx+5, sy, hxf, 20 UI_tooltip "Элемент"
		sy = sy + 25 :  UI_OUTFIELD	"L= "+STR("%.0mm",perem_dlin[i])+" мм", sx+10, sy, hxf-10, 20 UI_tooltip "Элемент"
		sy = sy + 25
		if main_name<>"" and WALL_COMPS_NAME_<>"" then 
			UI_OUTFIELD	`(`,sx+hxf-35,	sy,	3,15
			UI_INFIELD{3} perem_th_by_layer[i], sx+hxf-29, sy, 20, 15 UI_tooltip "Номер слоя стены для расчёта ширины"
			UI_OUTFIELD	`)`,sx+hxf-5,	sy,	3,15
		endif
	endif

	if perem_type[i]=iType_UG or perem_type[i]=iType_UGMIRR or perem_type[i]=iType_UGx2 then
		sy = sy + 25 : UI_INFIELD	"perem_profile_2", sx+5, sy, hxf, 20 UI_tooltip "Элемент"
		sy = sy + 25 :  UI_OUTFIELD	"L= "+STR("%.0mm",perem_dlin[i])+" мм", sx+10, sy, hxf-10, 20 UI_tooltip "Элемент"
		dx=0 : if n_use<3 then dx = 50
		sy = sy + 23 : UI_INFIELD	"perem_zazor_2", sx+5+dx, sy, hxf-40-dx, 20 UI_tooltip "Зазор между элементами в мм"
					   UI_OUTFIELD	`мм`,sx+hxf-32,	sy+3,	20,15
		if dx>EPS then UI_OUTFIELD	`Отступ`,sx+5,	sy+3,	dx-5,15
		sy = sy + 25
		if main_name<>"" and WALL_COMPS_NAME_<>"" then 
			UI_OUTFIELD	`(`,sx+hxf-35,	sy,	3,15
			UI_INFIELD{3} perem_th_by_layer[i], sx+hxf-29, sy, 20, 15 UI_tooltip "Номер слоя стены для расчёта ширины"
			UI_OUTFIELD	`)`,sx+hxf-5,	sy,	3,15
		endif
	endif
	if perem_type[i]=iType_PROF then
		sy = sy + 25 : UI_INFIELD	"perem_archprofile_2", sx+5, sy, hxf, 20 UI_tooltip "Элемент"
		sy = sy + 25 : UI_INFIELD	"perem_ves_p_2", sx+50, sy, hxf-45, 20 UI_tooltip "Вес погонного метра, кг"
					   UI_OUTFIELD	`Вес кг/м`,sx+3,	sy+3,	46,15
		sy = sy + 25 : UI_INFIELD	"perem_profile_2", sx+5, sy, hxf, 20 UI_tooltip "Наименование элемента"
	endif
return
"t_3":
	sy = sys
	UI_GROUPBOX "Тип "+str("%.0",i), sx, sy, hx, 225
	sy = sy + 15 : UI_INFIELD	"perem_pos_3", sx+45, sy, hxf-70, 20 UI_tooltip "Позиция элемента"
				   UI_OUTFIELD	`Поз`,sx+20,	sy+3,	25,15
	dx=0 : if n_use<3 then dx = 95
	sy = sy + 23 : UI_INFIELD	"perem_dh_3", sx+23+dx, sy, hxf-40-dx, 20 UI_tooltip "Смещение по вертикали в мм"
				   UI_INFIELD	"perem_dhf_3", sx+5, sy+3, 15, 15 UI_tooltip "Сместить первый элемент?"
				   UI_INFIELD	"perem_dhe_3", sx+hxf-6, sy+3, 15, 15 UI_tooltip "Сместить последний элемент?"
	if dx>EPS then UI_OUTFIELD	`Смещение верт.`,sx+23,	sy+3,	dx-5,15
	sy = sy + 23
	dx=0 : if n_use<3 then dx = 50
	UI_INFIELD	"perem_type_3", sx+5+dx, sy, hxf-dx, 20 UI_tooltip "Тип перемычки "+str("%.0",i)
	if dx>EPS then UI_OUTFIELD	`Тип`,sx+5,	sy+3,	dx-5,15
	if perem_type[i]=iType_SB then
		dx=0 : if n_use<3 then dx = 50
		sy = sy + 23 : UI_INFIELD	"perem_subtype_3", sx+5+dx, sy, hxf-dx, 20 UI_tooltip "Ограничение выбора"
		if dx>EPS then UI_OUTFIELD	`Подтип`,sx+5,	sy+3,	dx-5,15

		dx=28 : if n_use<3 then dx = 50
		sy = sy + 23 : UI_INFIELD	"perem_t_3", sx+dx+5, sy, hxf-dx, 20 UI_tooltip "ОГРАНИЧЕНИЕ ширины в мм"
		ttx=`B,мм` : if n_use<3 then ttx=`Ширина`
					   UI_OUTFIELD	ttx,sx+3,	sy+3,	dx,15
		ttx=`Н,мм` : if n_use<3 then ttx=`Высота`
		sy = sy + 23 : UI_INFIELD	"perem_h_3", sx+dx+5, sy, hxf-dx, 20 UI_tooltip "ОГРАНИЧЕНИЕ высоты в мм"
					   UI_OUTFIELD	ttx,sx+3,	sy+3,	dx,15


		sy = sy + 23 : UI_INFIELD	"perem_podbor_3", sx+5, sy, 15, 15 UI_tooltip "Автоподбор"
		ttx=`Автоподбор` : if n_use<3 then ttx=`Автоподбор по проёму`
					   UI_OUTFIELD	ttx,sx+23,	sy+0,	hxf-20,15
		sy = sy + 23 : UI_INFIELD	"perem_profile_3", sx+5, sy, hxf, 20 UI_tooltip "Элемент"
		dx=0 : if n_use<3 then dx = 50
		sy = sy + 23 : UI_INFIELD	"perem_qty_by_type_3", sx+5+dx, sy, hxf-60-dx, 20 UI_tooltip "Кол-во элементов"
					   UI_OUTFIELD	`шт`,sx+hxf-52,	sy+3,	20,15
		if dx>EPS then UI_OUTFIELD	`Кол-во`,sx+5,	sy+3,	dx-5,15
		if main_name<>"" and WALL_COMPS_NAME_<>"" then
			UI_OUTFIELD	`(`,sx+hxf-35,	sy+3,	3,15
			UI_INFIELD{3} perem_th_by_layer[i], sx+hxf-29, sy+3, 20, 15 UI_tooltip "Номер слоя стены для расчёта ширины"
			UI_OUTFIELD	`)`,sx+hxf-5,	sy+3,	3,15
		endif
	endif
	if perem_type[i]=iType_CONC or perem_type[i]=iType_ARM then
		dx=28 : if n_use<3 then dx = 50
		sy = sy + 23 : UI_INFIELD	"perem_t_3", sx+dx+5, sy, hxf-dx, 20 UI_tooltip "ОГРАНИЧЕНИЕ ширины в мм"
		ttx=`B,мм` : if n_use<3 then ttx=`Ширина`
					   UI_OUTFIELD	ttx,sx+3,	sy+3,	dx,15
		ttx=`Н,мм` : if n_use<3 then ttx=`Высота`
		sy = sy + 23 : UI_INFIELD	"perem_h_3", sx+dx+5, sy, hxf-dx, 20 UI_tooltip "ОГРАНИЧЕНИЕ высоты в мм"
					   UI_OUTFIELD	ttx,sx+3,	sy+3,	dx,15
		sy = sy + 25 : UI_INFIELD	"perem_profile_3", sx+5, sy, hxf, 20 UI_tooltip "Элемент"
		sy = sy + 25 :  UI_OUTFIELD	"L= "+STR("%.0mm",perem_dlin[i])+" мм", sx+10, sy, hxf-10, 20 UI_tooltip "Элемент"
		sy = sy + 25
		if main_name<>"" and WALL_COMPS_NAME_<>"" then 
			UI_OUTFIELD	`(`,sx+hxf-35,	sy,	3,15
			UI_INFIELD{3} perem_th_by_layer[i], sx+hxf-29, sy, 20, 15 UI_tooltip "Номер слоя стены для расчёта ширины"
			UI_OUTFIELD	`)`,sx+hxf-5,	sy,	3,15
		endif
	endif

	if perem_type[i]=iType_UG or perem_type[i]=iType_UGMIRR or perem_type[i]=iType_UGx2 then
		sy = sy + 25 : UI_INFIELD	"perem_profile_3", sx+5, sy, hxf, 20 UI_tooltip "Элемент"
		sy = sy + 25 :  UI_OUTFIELD	"L= "+STR("%.0mm",perem_dlin[i])+" мм", sx+10, sy, hxf-10, 20 UI_tooltip "Элемент"
		dx=0 : if n_use<3 then dx = 50
		sy = sy + 23 : UI_INFIELD	"perem_zazor_3", sx+5+dx, sy, hxf-40-dx, 20 UI_tooltip "Зазор между элементами в мм"
					   UI_OUTFIELD	`мм`,sx+hxf-32,	sy+3,	20,15
		if dx>EPS then UI_OUTFIELD	`Отступ`,sx+5,	sy+3,	dx-5,15
		sy = sy + 25
		if main_name<>"" and WALL_COMPS_NAME_<>"" then 
			UI_OUTFIELD	`(`,sx+hxf-35,	sy,	3,15
			UI_INFIELD{3} perem_th_by_layer[i], sx+hxf-29, sy, 20, 15 UI_tooltip "Номер слоя стены для расчёта ширины"
			UI_OUTFIELD	`)`,sx+hxf-5,	sy,	3,15
		endif
	endif
	if perem_type[i]=iType_PROF then
		sy = sy + 25 : UI_INFIELD	"perem_archprofile_3", sx+5, sy, hxf, 20 UI_tooltip "Элемент"
		sy = sy + 25 : UI_INFIELD	"perem_ves_p_3", sx+50, sy, hxf-45, 20 UI_tooltip "Вес погонного метра, кг"
					   UI_OUTFIELD	`Вес кг/м`,sx+3,	sy+3,	46,15
		sy = sy + 25 : UI_INFIELD	"perem_profile_3", sx+5, sy, hxf, 20 UI_tooltip "Наименование элемента"
	endif
return
"t_4":
	sy = sys
	UI_GROUPBOX "Тип "+str("%.0",i), sx, sy, hx, 225
	sy = sy + 15 : UI_INFIELD	"perem_pos_4", sx+45, sy, hxf-70, 20 UI_tooltip "Позиция элемента"
				   UI_OUTFIELD	`Поз`,sx+20,	sy+3,	25,15
	dx=0 : if n_use<3 then dx = 95
	sy = sy + 23 : UI_INFIELD	"perem_dh_4", sx+23+dx, sy, hxf-40-dx, 20 UI_tooltip "Смещение по вертикали в мм"
				   UI_INFIELD	"perem_dhf_4", sx+5, sy+3, 15, 15 UI_tooltip "Сместить первый элемент?"
				   UI_INFIELD	"perem_dhe_4", sx+hxf-6, sy+3, 15, 15 UI_tooltip "Сместить последний элемент?"
	if dx>EPS then UI_OUTFIELD	`Смещение верт.`,sx+23,	sy+3,	dx-5,15
	sy = sy + 23
	dx=0 : if n_use<3 then dx = 50
	UI_INFIELD	"perem_type_4", sx+5+dx, sy, hxf-dx, 20 UI_tooltip "Тип перемычки "+str("%.0",i)
	if dx>EPS then UI_OUTFIELD	`Тип`,sx+5,	sy+3,	dx-5,15
	if perem_type[i]=iType_SB then
		dx=0 : if n_use<3 then dx = 50
		sy = sy + 23 : UI_INFIELD	"perem_subtype_4", sx+5+dx, sy, hxf-dx, 20 UI_tooltip "Ограничение выбора"
		if dx>EPS then UI_OUTFIELD	`Подтип`,sx+5,	sy+3,	dx-5,15

		dx=28 : if n_use<3 then dx = 50
		sy = sy + 23 : UI_INFIELD	"perem_t_4", sx+dx+5, sy, hxf-dx, 20 UI_tooltip "ОГРАНИЧЕНИЕ ширины в мм"
		ttx=`B,мм` : if n_use<3 then ttx=`Ширина`
					   UI_OUTFIELD	ttx,sx+3,	sy+3,	dx,15
		ttx=`Н,мм` : if n_use<3 then ttx=`Высота`
		sy = sy + 23 : UI_INFIELD	"perem_h_4", sx+dx+5, sy, hxf-dx, 20 UI_tooltip "ОГРАНИЧЕНИЕ высоты в мм"
					   UI_OUTFIELD	ttx,sx+3,	sy+3,	dx,15


		sy = sy + 23 : UI_INFIELD	"perem_podbor_4", sx+5, sy, 15, 15 UI_tooltip "Автоподбор"
		ttx=`Автоподбор` : if n_use<3 then ttx=`Автоподбор по проёму`
					   UI_OUTFIELD	ttx,sx+23,	sy+0,	hxf-20,15
		sy = sy + 23 : UI_INFIELD	"perem_profile_4", sx+5, sy, hxf, 20 UI_tooltip "Элемент"
		
		dx=0 : if n_use<3 then dx = 50
		sy = sy + 23 : UI_INFIELD	"perem_qty_by_type_4", sx+5+dx, sy, hxf-60-dx, 20 UI_tooltip "Кол-во элементов"
					   UI_OUTFIELD	`шт`,sx+hxf-52,	sy+3,	20,15
		if dx>EPS then UI_OUTFIELD	`Кол-во`,sx+5,	sy+3,	dx-5,15
		if main_name<>"" and WALL_COMPS_NAME_<>"" then
			UI_OUTFIELD	`(`,sx+hxf-35,	sy+3,	3,15
			UI_INFIELD{3} perem_th_by_layer[i], sx+hxf-29, sy+3, 20, 15 UI_tooltip "Номер слоя стены для расчёта ширины"
			UI_OUTFIELD	`)`,sx+hxf-5,	sy+3,	3,15
		endif
	endif
	if perem_type[i]=iType_CONC or perem_type[i]=iType_ARM then
		dx=28 : if n_use<3 then dx = 50
		sy = sy + 23 : UI_INFIELD	"perem_t_4", sx+dx+5, sy, hxf-dx, 20 UI_tooltip "ОГРАНИЧЕНИЕ ширины в мм"
		ttx=`B,мм` : if n_use<3 then ttx=`Ширина`
					   UI_OUTFIELD	ttx,sx+3,	sy+3,	dx,15
		ttx=`Н,мм` : if n_use<3 then ttx=`Высота`
		sy = sy + 23 : UI_INFIELD	"perem_h_4", sx+dx+5, sy, hxf-dx, 20 UI_tooltip "ОГРАНИЧЕНИЕ высоты в мм"
					   UI_OUTFIELD	ttx,sx+3,	sy+3,	dx,15
		sy = sy + 25 : UI_INFIELD	"perem_profile_4", sx+5, sy, hxf, 20 UI_tooltip "Элемент"
		sy = sy + 25 :  UI_OUTFIELD	"L= "+STR("%.0mm",perem_dlin[i])+" мм", sx+10, sy, hxf-10, 20 UI_tooltip "Элемент"
		sy = sy + 25
		if main_name<>"" and WALL_COMPS_NAME_<>"" then 
			UI_OUTFIELD	`(`,sx+hxf-35,	sy,	3,15
			UI_INFIELD{3} perem_th_by_layer[i], sx+hxf-29, sy, 20, 15 UI_tooltip "Номер слоя стены для расчёта ширины"
			UI_OUTFIELD	`)`,sx+hxf-5,	sy,	3,15
		endif
	endif

	if perem_type[i]=iType_UG or perem_type[i]=iType_UGMIRR or perem_type[i]=iType_UGx2 then
		sy = sy + 25 : UI_INFIELD	"perem_profile_4", sx+5, sy, hxf, 20 UI_tooltip "Элемент"
		sy = sy + 25 :  UI_OUTFIELD	"L= "+STR("%.0mm",perem_dlin[i])+" мм", sx+10, sy, hxf-10, 20 UI_tooltip "Элемент"
		dx=0 : if n_use<3 then dx = 50
		sy = sy + 23 : UI_INFIELD	"perem_zazor_4", sx+5+dx, sy, hxf-40-dx, 20 UI_tooltip "Зазор между элементами в мм"
					   UI_OUTFIELD	`мм`,sx+hxf-32,	sy+3,	20,15
		if dx>EPS then UI_OUTFIELD	`Отступ`,sx+5,	sy+3,	dx-5,15
		sy = sy + 25
		if main_name<>"" and WALL_COMPS_NAME_<>"" then 
			UI_OUTFIELD	`(`,sx+hxf-35,	sy,	3,15
			UI_INFIELD{3} perem_th_by_layer[i], sx+hxf-29, sy, 20, 15 UI_tooltip "Номер слоя стены для расчёта ширины"
			UI_OUTFIELD	`)`,sx+hxf-5,	sy,	3,15
		endif
	endif
	if perem_type[i]=iType_PROF then
		sy = sy + 25 : UI_INFIELD	"perem_archprofile_4", sx+5, sy, hxf, 20 UI_tooltip "Элемент"
		sy = sy + 25 : UI_INFIELD	"perem_ves_p_4", sx+50, sy, hxf-45, 20 UI_tooltip "Вес погонного метра, кг"
					   UI_OUTFIELD	`Вес кг/м`,sx+3,	sy+3,	46,15
		sy = sy + 25 : UI_INFIELD	"perem_profile_4", sx+5, sy, hxf, 20 UI_tooltip "Наименование элемента"
	endif
return
235:
]]>
</Script_UI>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_VL SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
if not(flag_not_use) then
	perem_marka = "!"
	perem_otm = ""
	for i=1 to vardim1(perem_qty_type)
		perem_pos[i]="!"
	next i
	PARAMETERS perem_marka = perem_marka, perem_otm=perem_otm
	perem_pos_1 = perem_pos[1]
	perem_pos_2 = perem_pos[2]
	perem_pos_3 = perem_pos[3]
	perem_pos_4 = perem_pos[4]
	parameters perem_pos_1=perem_pos_1
	parameters perem_pos_2=perem_pos_2
	parameters perem_pos_3=perem_pos_3
	parameters perem_pos_4=perem_pos_4
	end
endif

dim t_perem_nagr[4]
dim t_perem_naen[4]
dim t_perem_obozn[4]
dim t_perem_h[4]
dim t_perem_t[4]
dim t_perem_ves[4]
dim t_perem_dlin[4]
dim t_perem_tug[]
for i=1 to 4
	t_perem_nagr[i] = 0
	t_perem_naen[i] = ""
	t_perem_h[i] = 0
	t_perem_t[i] = 0
	t_perem_ves[i] = 0
	t_perem_dlin[i] = 0
	t_perem_tug[i] = 0
next i
dim emp1t[] : emp1t[1] = ""
dim un_vis[] : un_vis[1]=0
dim un_tolsh[] : un_tolsh[1]=0
dim naen_type[] : naen_type[1]=""
dim tdlin_m[] : tdlin_m[1]=0
dim tvis_m[] : tvis_m[1]=0
dim ttolsh_m[] : ttolsh_m[1]=0
t_perem_podbor=0
t_perem_podbor_flag=0
t_perem_tu = 0
th = 0

!!!Символы для удаления
dim del_ch[] : i=0
	i=i+1 : del_ch[i]="("
	i=i+1 : del_ch[i]=")"
	i=i+1 : del_ch[i]="x"
	i=i+1 : del_ch[i]="H"
	i=i+1 : del_ch[i]="B"
	i=i+1 : del_ch[i]="L"
	i=i+1 : del_ch[i]=" "
	i=i+1 : del_ch[i]="х"
	i=i+1 : del_ch[i]=" "
	i=i+1 : del_ch[i]="."
	i=i+1 : del_ch[i]=","

if GLOB_MODPAR_NAME = "perem_dl_2" and perem_eq_dl then
	PARAMETERS perem_dl_1 = perem_dl_2
	PARAMETERS perem_dl_3 = perem_dl_2
	PARAMETERS perem_dl_4 = perem_dl_2
endif

!------------------------- Чтение и восстановление конфигурации -----------------------------------------
perem_config_t=""
for i=1 to vardim1(perem_qty_type)
	perem_config_t = perem_config_t + str("%.0", perem_qty_type[i])+";"					!1
	if perem_qty_type[i]>EPS then
		perem_config_t = perem_config_t + str("%.0", perem_type[i])+";"					!2
		perem_config_t = perem_config_t + perem_subtype[i]+";"							!3
		perem_config_t = perem_config_t + str("%.0mm", perem_min_opir[i])+".;"			!4
		perem_config_t = perem_config_t + str("%.0", perem_podbor[i])+";"				!5
		perem_config_t = perem_config_t + str("%.0mm", perem_mt[i])+".;"				!6
		perem_config_t = perem_config_t + str("%.0mm", perem_mh[i])+".;"				!7
		perem_config_t = perem_config_t + str("%.0mm", perem_t[i])+".;"					!8
		perem_config_t = perem_config_t + str("%.0mm", perem_h[i])+".;"					!9
		perem_config_t = perem_config_t + str("%.0mm", perem_dh[i])+".;"				!10
		perem_config_t = perem_config_t + str("%.0", perem_dhe[i])+";"					!11
		perem_config_t = perem_config_t + str("%.0", perem_dhf[i])+";"					!12
		perem_config_t = perem_config_t + str("%.0mm", perem_zazor[i])+".;"				!13
		perem_config_t = perem_config_t + str("%.0", perem_qty_by_type[i])+";"			!14
		perem_config_t = perem_config_t + str("%.0", perem_archprofile[i])+";"			!15
		perem_config_t = perem_config_t + str("%.0", perem_ves_p[i])+";"				!16
		perem_config_t = perem_config_t + str("%.0mm", perem_zazor_type[i])+".;"		!17
		perem_config_t = perem_config_t + str("%.0mm", perem_zazor_by_layer[i])+".;"	!18
		perem_config_t = perem_config_t + str("%.0", perem_th_by_layer[i])+";"			!19
		perem_config_t = perem_config_t + perem_profile[i]+";"							!20
	endif
	perem_config_t = perem_config_t + str("%.0",i)+"/"									!21
next i

if GLOB_MODPAR_NAME = "perem_config" and perem_config<>perem_config_t and strlen(perem_config)>1 then
	max_param = 21
	dim read_param[][4]
	for i=1 to vardim1(perem_qty_type)
		for j=1 to max_param
			if j=3 or j=20 then
				read_param[j][i] = ""
			else
				read_param[j][i] = 0
			endif
		next j
	next i
	perem_config_part = perem_config : part = "" : isRead = 1
	for i=1 to vardim1(perem_qty_type)
		inx = STRSTR(perem_config_part, "/")
		part = STRSUB (perem_config_part, 1, inx-1)
		perem_config_part = STRSUB (perem_config_part, inx+1, STRLEN(perem_config_part)+10)
		qty = STRSUB (part, 1, STRSTR(part, ";")-1)
		num_qty=0 : n = SPLIT (qty, "%n", num_qty)
		inx = STRSUB (part, STRLEN(part), 1)
		num_inx=0 : n = SPLIT (inx, "%n", num_inx)
		if num_inx<>i then isRead = 0
		if num_qty>EPS then
			for j=1 to max_param
				inx = STRSTR(part, ";")
				val = STRSUB (part, 1, inx-1)
				part = STRSUB (part, inx+1, STRLEN(part)+10)
				if j=3 or j=20 then
					if vartype(val)=1 then val = ""
					read_param[j][i] = val
				else
					mn = 1
					if STRSTR(val, ".")>EPS then
						val = STRSUB (val, 1, strlen(val)-1)
						mn = 1000
					endif
					_newChar = "" : _currStr = "" : _charToReplace=""
					for k=1 to vardim1(del_ch)
						_charToReplace = del_ch[k]
						_currStr = val
						gosub "purge_txt"
						val=_newStr
					next k
					if vartype(val)=1 then val = "0"
					if vartype(val)=2 then
						num = 0
						n = SPLIT (val, "%n", num)
						read_param[j][i] = num/mn
					endif					
				endif
			next j
		endif
		read_param[1][i] = num_qty
		read_param[max_param][i] = num_inx
	next i
	if isRead = 1 then
		for i=1 to vardim1(perem_qty_type)
			perem_qty_type[i] = read_param[1][i]
			perem_type[i] = read_param[2][i]
			perem_subtype[i] = read_param[3][i]
			perem_min_opir[i] = read_param[4][i]
			perem_podbor[i] = read_param[5][i]
			perem_mt[i] = read_param[6][i]
			perem_mh[i] = read_param[7][i]
			perem_t[i] = read_param[8][i]
			perem_h[i] = read_param[9][i]
			perem_dh[i] = read_param[10][i]
			perem_dhe[i] = read_param[11][i]
			perem_dhf[i] = read_param[12][i]
			perem_zazor[i] = read_param[13][i]
			perem_qty_by_type[i] = read_param[14][i]
			perem_archprofile[i] = read_param[15][i]
			perem_ves_p[i] = read_param[16][i]
			perem_zazor_type[i] = read_param[17][i]
			perem_zazor_by_layer[i] = read_param[18][i]
			perem_th_by_layer[i] = read_param[19][i]
			perem_profile[i] = read_param[20][i]
		next i

		PARAMETERS perem_qty_type=perem_qty_type, perem_th_by_layer=perem_th_by_layer, perem_zazor_by_layer=perem_zazor_by_layer, perem_zazor_type=perem_zazor_type, perem_t=perem_t, perem_h=perem_h 
!		if perem_qty_type[1]>EPS then
			parameters perem_profile_1=perem_profile[1]
			parameters perem_qty_by_type_1=perem_qty_by_type[1]
			parameters perem_dh_1=perem_dh[1]
			parameters perem_zazor_1=perem_zazor[1]
			parameters perem_type_1=perem_type[1]
			parameters perem_min_opir_1=perem_min_opir[1] 
			parameters perem_archprofile_1=perem_archprofile[1]
			parameters perem_ves_p_1=perem_ves_p[1]
			parameters perem_dhe_1=perem_dhe[1] 
			parameters perem_dhf_1=perem_dhf[1] 
			parameters perem_subtype_1=perem_subtype[1] 
			parameters perem_podbor_1=perem_podbor[1]
			parameters perem_h_1 = perem_mh[1] 
			parameters perem_t_1 = perem_mt[1]
!		endif
!		if perem_qty_type[2]>EPS then
			parameters perem_profile_2=perem_profile[2]
			parameters perem_qty_by_type_2=perem_qty_by_type[2]
			parameters perem_dh_2=perem_dh[2]
			parameters perem_dl_2=perem_dl[2]
			parameters perem_zazor_2=perem_zazor[2]
			parameters perem_type_2=perem_type[2]
			parameters perem_min_opir_2=perem_min_opir[2] 
			parameters perem_archprofile_2=perem_archprofile[2]
			parameters perem_ves_p_2=perem_ves_p[2]
			parameters perem_dhe_2=perem_dhe[2] 
			parameters perem_dhf_2=perem_dhf[2] 
			parameters perem_subtype_2=perem_subtype[2] 
			parameters perem_podbor_2=perem_podbor[2]
			parameters perem_h_2 = perem_mh[2] 
			parameters perem_t_2 = perem_mt[2]
!		endif
!		if perem_qty_type[3]>EPS then
			parameters perem_profile_3=perem_profile[3]
			parameters perem_qty_by_type_3=perem_qty_by_type[3]
			parameters perem_dh_3=perem_dh[3]
			parameters perem_dl_3=perem_dl[3]
			parameters perem_zazor_3=perem_zazor[3]
			parameters perem_type_3=perem_type[3]
			parameters perem_min_opir_3=perem_min_opir[3] 
			parameters perem_archprofile_3=perem_archprofile[3]
			parameters perem_ves_p_3=perem_ves_p[3]
			parameters perem_dhe_3=perem_dhe[3] 
			parameters perem_dhf_3=perem_dhf[3] 
			parameters perem_subtype_3=perem_subtype[3] 
			parameters perem_podbor_3=perem_podbor[3]
			parameters perem_h_3 = perem_mh[3] 
			parameters perem_t_3 = perem_mt[3]
!		endif
!		if perem_qty_type[4]>EPS then
			parameters perem_profile_4=perem_profile[4]
			parameters perem_qty_by_type_4=perem_qty_by_type[4]
			parameters perem_dh_4=perem_dh[4]
			parameters perem_dl_4=perem_dl[4]
			parameters perem_zazor_4=perem_zazor[4]
			parameters perem_type_4=perem_type[4]
			parameters perem_min_opir_4=perem_min_opir[4] 
			parameters perem_archprofile_4=perem_archprofile[4]
			parameters perem_ves_p_4=perem_ves_p[4]
			parameters perem_dhe_4=perem_dhe[4] 
			parameters perem_dhf_4=perem_dhf[4] 
			parameters perem_subtype_4=perem_subtype[4] 
			parameters perem_podbor_4=perem_podbor[4]
			parameters perem_h_4 = perem_mh[4] 
			parameters perem_t_4 = perem_mt[4]
!		endif
	endif
else
	PARAMETERS perem_config = perem_config_t
endif
!------------------------- Чтение и восстановление конфигурации -----------------------------------------

!---------------------------------Сброс марки и перепозичивание ------------------------------------
if perem_marka_reset or perem_reset then
	perem_marka_in_read = 0
	perem_marka_reset = 0
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "perem_marka_in_read", perem_marka_in_read)
	perem_marka = "-" : if perem_marka_in_read then perem_marka = "!"
	if perem_marka_in_read then
		perem_otm = ""
		dim perem_sum_in[] : perem_sum_in[1]=""
		dim perem_otm_in[] : perem_otm_in[1]=""
		dim perem_marka_in[] : perem_marka_in[1]=""
		success = LIBRARYGLOBAL ("Libraryflobals-perem", "perem_sum_in", perem_sum_in)
		success = LIBRARYGLOBAL ("Libraryflobals-perem", "perem_otm_in", perem_otm_in)
		success = LIBRARYGLOBAL ("Libraryflobals-perem", "perem_marka_in", perem_marka_in)
		for i=1 to vardim1(perem_sum_in)
			if perem_sum_in[i] = perem_marka_sum and strstr(perem_marka, "!!")<EPS then 
				perem_otm = perem_otm_in[i]
				perem_marka = perem_marka_in[i]
				i=vardim1(perem_sum_in)
			endif
		next i
		PARAMETERS perem_marka = perem_marka, perem_otm=perem_otm
	endif
	PARAMETERS perem_marka_reset = perem_marka_reset
endif

if perem_pos_reset or perem_reset then
	perem_pos_in_read = 0
	perem_pos_reset = 0
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "perem_pos_in_read", perem_pos_in_read)
	if perem_pos_in_read then
		for i=1 to 4
			perem_pos[i]=""
		next i
		zzt = "-" : if perem_pos_in_read then zzt = "!"
		for i=inx_start_type to flag_not_use
			if perem_qty_type[i]>EPS then perem_pos[i]=zzt
		next i
		dim perem_pos_in[] : perem_pos_in[1]=""
		dim perem_naen_in[] : perem_naen_in[1]=""
		dim perem_obozn_in[] : perem_obozn_in[1]=""
		success = LIBRARYGLOBAL ("Libraryflobals-perem", "perem_pos_in", perem_pos_in)
		success = LIBRARYGLOBAL ("Libraryflobals-perem", "perem_naen_in", perem_naen_in)
		success = LIBRARYGLOBAL ("Libraryflobals-perem", "perem_obozn_in", perem_obozn_in)
		for i=1 to min(vardim1(perem_naen_in),vardim1(perem_pos_in), vardim1(perem_obozn_in))
			for j=inx_start_type to flag_not_use
				if perem_qty_type[j]>EPS then
					if perem_naen_in[i] = perem_naen[j] and strstr(perem_pos[j], "!!")<EPS then
						perem_pos[j]=perem_pos_in[i]
						if perem_obozn_in[i]<>"-" then
							PARAMETERS perem_obozn[j]=perem_obozn_in[i]
						endif
					endif
				endif
			next j
		next i
		perem_pos_1 = perem_pos[1]
		perem_pos_2 = perem_pos[2]
		perem_pos_3 = perem_pos[3]
		perem_pos_4 = perem_pos[4]
		parameters perem_pos_1=perem_pos_1
		parameters perem_pos_2=perem_pos_2
		parameters perem_pos_3=perem_pos_3
		parameters perem_pos_4=perem_pos_4
	endif
	PARAMETERS perem_pos_reset = perem_pos_reset
endif
if perem_reset and not(perem_pos_reset) and not(perem_marka_reset) then 
	perem_reset = 0
	PARAMETERS perem_reset=perem_reset
endif
!!---------------------------------Сброс марки и перепозичивание ------------------------------------


!---------------------------------Ограничения при использовании вне окна/проёма --------------------
if main_name="" then
	values "ac_wallhole_width" range [min_opir,)
	values "max_t" range [0.05,)
	if GLOB_MODPAR_NAME = "wallhole_half_width" then
		ac_wallhole_width = wallhole_half_width * 2
		PARAMETERS ac_wallhole_width = ac_wallhole_width
	else
		wallhole_half_width = ac_wallhole_width / 2
		PARAMETERS wallhole_half_width = wallhole_half_width
	endif
	if GLOB_MODPAR_NAME = "A" then
		PARAMETERS ac_wallhole_width = A
	else
		PARAMETERS A = ac_wallhole_width
	endif
	PARAMETERS B = perem_max_h : LOCK "B"
	PARAMETERS ZZYZX = perem_sum_t : LOCK "ZZYZX"
	parameters ac_toplevel = perem_max_h
	parameters ac_bottomlevel = 0
	if manual_elev then
		values 'n_elev' numb_elev
	else
		parameters n_elev = n_elev
		LOCK "n_elev"
	endif
	for i=1 to vardim1(perem_qty_type)
		perem_zazor_by_layer[i]=0
		perem_th_by_layer[i]=0
	next i
	parameters perem_zazor_by_layer=perem_zazor_by_layer, perem_th_by_layer=perem_th_by_layer
	LOCK "perem_zazor_by_layer", "perem_th_by_layer"
	LOCK "perem_mul", "perem_reverse"
	! ----- Параметры для выносной надписи --------
	hideparameter "label_sp"
	dim label_posxyz[]
	dim label_posang[]
	label_posxyz[1] = 0 : label_posxyz[2] = 0 : label_posxyz[3] = 0
	label_posang[1] = 0 : label_posang[2] = 0
	parameters label_posxyz = label_posxyz, label_posang = label_posang, label_posset = 1
	dim param_name_out_t[] : i=1
	param_name_out_t[1] = "!!Перемычка!!"
	i=i+1 : param_name_out_t[i] = "perem_marka - марка перемычки"
	i=i+1 : param_name_out_t[i] = "ur - уровень низа марки"
	parameters param_name_out = param_name_out_t
	dim param_temp_out_t[] : i=0
	i=i+1 : param_temp_out_t[i] = "%perem_marka%"
	i=i+1 : param_temp_out_t[i] = "%ur%"
	parameters param_temp_out = param_temp_out_t
	! --------------------------------------------------
else
	if vardim1(perem_zazor_by_layer)<>vardim1(perem_qty_type) or vardim1(perem_th_by_layer)<>vardim1(perem_qty_type) then
		dim t[]
		for i=1 to vardim1(perem_qty_type)
			t[i]=0
		next i
		parameters perem_zazor_by_layer = t
		parameters perem_th_by_layer = t
	endif
	if WALL_COMPS_NAME_<>"" then 

		t_before_core = 0 : t_after_core = 0 : core_flag = 0
		for i=1 to WALL_SKINS_NUMBER_
			isCore = (WALL_SKINS_PARAMS_[i][6]>EPS)
			if isCore then core_flag = 1
			if core_flag = 0 and not(isCore) then t_before_core = t_before_core + WALL_SKINS_PARAMS_[i][2]
			if core_flag = 1 and not(isCore) then t_after_core = t_after_core + WALL_SKINS_PARAMS_[i][2]
		next i

		for i=1 to vardim1(perem_qty_type)
			if perem_th_by_layer[i]>WALL_SKINS_NUMBER_ or perem_th_by_layer[i]<EPS then
				parameters perem_th_by_layer[i] = 0
			else
				if perem_reverse=1 then perem_th_by_layer[i] = WALL_SKINS_NUMBER_ - perem_th_by_layer[i] + 1
			endif
			
			inx_sl = perem_zazor_by_layer[i]
			if abs(inx_sl)>EPS and abs(inx_sl)<=WALL_SKINS_NUMBER_ then
				if perem_reverse=1 then inx_sl = WALL_SKINS_NUMBER_ - inx_sl + 1
				parameters perem_zazor_type[i]=WALL_SKINS_PARAMS_[abs(inx_sl)][2]*sgn(inx_sl)
			endif
			if inx_sl>WALL_SKINS_NUMBER_ and not(perem_reverse) then parameters perem_zazor_type[i] = -t_after_core
			if inx_sl<-EPS and not(perem_reverse)  then parameters perem_zazor_type[i] = t_before_core
			if inx_sl>WALL_SKINS_NUMBER_ and perem_reverse then parameters perem_zazor_type[i] = t_after_core
			if inx_sl<-EPS and perem_reverse  then parameters perem_zazor_type[i] = -t_before_core
		next i
	endif
endif
!---------------------------------Ограничения при использовании вне окна/проёма --------------------

!!!---------------------------Сортамент уголков ----------------------------------------------------
dim ugol_r[][4] !Высота, ширина, толщина, вес
dim ugol_m[] : i=0
if has_UG then
	!Список наименований
	dim ugol_m[] : ugol_m[1] = ""
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "naen_m_ug", ugol_m)
	!Список размеров
	dim b_ug_m[] : b_ug_m[1] = 0
	dim h_ug_m[] : h_ug_m[1] = 0
	dim t_ug_m[] : t_ug_m[1] = 0
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "b_ug", b_ug_m)
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "h_ug", h_ug_m)
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "t_ug", t_ug_m)
	!Список веса
	dim ves_m_ug[] : ves_m_ug[1] = 0
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "ves_m_ug", ves_m_ug)
	!ГОСТы
	dim gost_ug_m[] : gost_ug_m[1] = ""
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "gost_ug", gost_ug_m)
	!Собираем размеры и вес в один массив
	n_ug = min(vardim1(b_ug_m), vardim1(h_ug_m), vardim1(t_ug_m), vardim1(ves_m_ug), vardim1(ugol_m), vardim1(gost_ug_m))
	for i=1 to n_ug
		ugol_r[i][1] = h_ug_m[i]
		ugol_r[i][2] = b_ug_m[i]
		ugol_r[i][3] = t_ug_m[i]
		ugol_r[i][4] = ves_m_ug[i]
	next i
endif
!!!---------------------------Сортамент уголков ----------------------------------------------------

!!!---------------------------Сортамент арматуры ----------------------------------------------------
if has_ARM then
	dim reinforce_class[8]
	dim reinforce_diam[16][8]
	dim reinforce_weight[16][8]
	dim diam_temp[] : diam_temp[1] = 0
	dim diam_d[] : diam_d[1] = 0
	dim diam_o[] : diam_o[1] = 0
	success = LIBRARYGLOBAL ("Libraryflobals-kzh", "reinforce_class", reinforce_class)
	success = LIBRARYGLOBAL ("Libraryflobals-kzh", "reinforce_diam", reinforce_diam)
	success = LIBRARYGLOBAL ("Libraryflobals-kzh", "reinforce_weight", reinforce_weight)
	!Основная
	values "perem_class" reinforce_class
	class = perem_class : gosub "get_diam" : diam_o = diam_temp !Список диаметров для выбранного класса
	values "perem_diam" diam_o
	diam_arm = perem_diam : gosub "get_weight" : weight_osn = weight !Вес выбранного диаметра
	!Хомуты
	values "perem_class_dop" reinforce_class
	class = perem_class_dop : gosub "get_diam" : diam_d = diam_temp !Список диаметров для выбранного класса
	values "perem_diam_dop" diam_d
	diam_arm = perem_diam_dop : gosub "get_weight" : weight_dop = weight !Вес выбранного диаметра
endif
!!!---------------------------Сортамент арматуры ----------------------------------------------------

!!!---------------------------Сортамент сборных перемычек -------------------------------------------
if has_SB then
	!Список марок перемычек
	dim mark_perem[] : mark_perem[1] = ""
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "mark_perem", mark_perem)
	!Список наименований
	dim naen_m[] : naen_m[1] = ""
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "naen_m", naen_m)
	!Список максимальных длин проёма
	dim dlin_per_m[]
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "dlin_m", dlin_per_m)
	!Список длин перемычек
	dim dlin_m[]
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "max_pr_m", dlin_m)
	!Список толщин
	dim tolsh_m[]
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "tolsh_m", tolsh_m)
	!Список высот
	dim vis_m[]
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "vis_m", vis_m)
	!Список нагрузок
	dim nagr_m[]
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "nagr_m", nagr_m)
	!Список веса
	dim ves_m[]
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "ves_m", ves_m)
	!ГОСТ на брусковые
	gost_br = ""
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "gost_br", gost_br)
	!ГОСТ на фибробетонные
	gost_fb = ""
	success = LIBRARYGLOBAL ("Libraryflobals-perem", "gost_fb", gost_fb)
endif
!!!---------------------------Сортамент сборных перемычек -------------------------------------------

!--------- ТИП 1 --------------
inx=1
if perem_qty_type[inx] then
	values{2} "perem_type_1" itype_perem, t_type_perem
!	values "perem_min_opir_1" range [min_opir, max_opir]
!	values "perem_dl_1" range[-perem_min_opir_1,perem_min_opir_1]
	t_perem_type = perem_type_1
	t_perem_sub_type = perem_subtype_1
	t_perem_podbor = perem_podbor_1
	t_perem_hogr = perem_h_1
	t_perem_togr = perem_t_1
	t_perem_profile = perem_profile_1
	t_perem_min_opir = perem_min_opir_1
	t_perem_qty_by_type = perem_qty_by_type_1
	t_perem_zazor = perem_zazor_1
	if t_perem_type = iType_SB then
		values "perem_subtype_1" mark_perem
		gosub "get_sort"
		values "perem_profile_1" naen_type
		values 'perem_h_1' 0,un_vis
		values 'perem_t_1' 0,un_tolsh
	endif
	gosub "get_param"
	if t_perem_type = iType_SB then
		if t_perem_podbor and t_perem_podbor_flag<EPS then
			perem_podbor_1 = 0
			PARAMETERS perem_podbor_1 = 0
		else
			if t_perem_podbor then 
				PARAMETERS perem_profile_1 = t_perem_profile
				LOCK "perem_profile_1"
			endif
		endif
		if th<EPS then
			values "perem_qty_by_type_1" range[1,5]
		else
			PARAMETERS perem_qty_by_type_1 = t_perem_qty_by_type : LOCK "perem_qty_by_type_1"
			PARAMETERS perem_zazor_1 = t_perem_zazor
		endif
		if (perem_qty_by_type[inx]-1)<EPS then
			PARAMETERS perem_dhf_1=0, perem_dhe_1=0
			LOCK "perem_dhf_1", "perem_dhe_1"
			hideparameter "perem_dhf_1", "perem_dhe_1"
		else
			if perem_dhf_1 then PARAMETERS perem_dhe_1 = 0
			if perem_dhe_1 then PARAMETERS perem_dhf_1 = 0				
		endif
	else
		LOCK "perem_subtype_1"
		PARAMETERS perem_podbor_1 = 0 : LOCK "perem_podbor_1"
		PARAMETERS perem_qty_by_type_1 = 1 : LOCK "perem_qty_by_type_1"
	endif
	if t_perem_type = iType_CONC or t_perem_type = iType_ARM then
		PARAMETERS perem_zazor_1 = 0 : LOCK "perem_zazor_1"
		PARAMETERS perem_profile_1 = t_perem_profile : LOCK "perem_profile_1"
		values 'perem_h_1' range[0.03,1]
		if th>EPS then 
			PARAMETERS perem_t_1 = t_perem_togr : LOCK "perem_t_1"
		else
			values 'perem_t_1' range[0.03,1]
		endif
	endif
	if t_perem_type = iType_UG or t_perem_type = iType_UGMIRR or t_perem_type = iType_UGx2 then
		PARAMETERS perem_h_1 = t_perem_hogr : LOCK "perem_h_1"
		PARAMETERS perem_t_1 = t_perem_togr : LOCK "perem_t_1"
		values "perem_profile_1" ugol_m
		if th>EPS then 
			PARAMETERS perem_zazor_1 = th : LOCK "perem_zazor_1"
		endif
	endif
	if t_perem_type = iType_UGx2 then
		if th>EPS then 
			PARAMETERS perem_zazor_1 = th : LOCK "perem_zazor_1"
		else
			values 'perem_zazor_1' range[t_perem_togr*2,1]
		endif
	endif
	if t_perem_type = iType_PROF then
		hideparameter "perem_t_1", "perem_h_1", "perem_zazor_1"
		LOCK "perem_t_1", "perem_h_1", "perem_zazor_1"
	else
		hideparameter "perem_ves_p_1", "perem_archprofile_1"
		LOCK "perem_ves_p_1", "perem_archprofile_1"
	endif
else
	hideparameter "perem_sp_type_1" 
	PARAMETERS perem_profile_1 = ""
endif
!--------- ТИП 2 --------------
inx=2
if perem_qty_type[inx] then
	values{2} "perem_type_2" itype_perem, t_type_perem
!	values "perem_min_opir_2" range [min_opir, max_opir]
!	values "perem_dl_2" range[-perem_min_opir_2,perem_min_opir_2]
	t_perem_type = perem_type_2
	t_perem_sub_type = perem_subtype_2
	t_perem_podbor = perem_podbor_2
	t_perem_hogr = perem_h_2
	t_perem_togr = perem_t_2
	t_perem_profile = perem_profile_2
	t_perem_min_opir = perem_min_opir_2
	t_perem_qty_by_type = perem_qty_by_type_2
	t_perem_zazor = perem_zazor_2
	if t_perem_type = iType_SB then
		values "perem_subtype_2" mark_perem
		gosub "get_sort"
		values "perem_profile_2" naen_type
		values 'perem_h_2' 0,un_vis
		values 'perem_t_2' 0,un_tolsh
	endif
	gosub "get_param"
	if t_perem_type = iType_SB then
		if t_perem_podbor and t_perem_podbor_flag<EPS then
			perem_podbor_2 = 0
			PARAMETERS perem_podbor_2 = 0
		else
			if t_perem_podbor then 
				PARAMETERS perem_profile_2 = t_perem_profile
				LOCK "perem_profile_2"
			endif
		endif
		if th<EPS then
			values "perem_qty_by_type_2" range[1,5]
		else
			PARAMETERS perem_qty_by_type_2 = t_perem_qty_by_type : LOCK "perem_qty_by_type_2"
			PARAMETERS perem_zazor_2 = t_perem_zazor
		endif
		if (perem_qty_by_type[inx]-1)<EPS then
			PARAMETERS perem_dhf_2=0, perem_dhe_2=0
			LOCK "perem_dhf_2", "perem_dhe_2"
			hideparameter "perem_dhf_2", "perem_dhe_2"
		else
			if perem_dhf_2 then PARAMETERS perem_dhe_2 = 0
			if perem_dhe_2 then PARAMETERS perem_dhf_2 = 0				
		endif
	else
		LOCK "perem_subtype_2"
		PARAMETERS perem_podbor_2 = 0 : LOCK "perem_podbor_2"
		PARAMETERS perem_qty_by_type_2 = 1 : LOCK "perem_qty_by_type_2"
	endif
	if t_perem_type = iType_CONC or t_perem_type = iType_ARM then
		PARAMETERS perem_zazor_2 = 0 : LOCK "perem_zazor_2"
		PARAMETERS perem_profile_2 = t_perem_profile : LOCK "perem_profile_2"
		values 'perem_h_2' range[0.03,1]
		if th>EPS then 
			PARAMETERS perem_t_2 = t_perem_togr : LOCK "perem_t_2"
		else
			values 'perem_t_2' range[0.03,1]
		endif
	endif
	if t_perem_type = iType_UG or t_perem_type = iType_UGMIRR or t_perem_type = iType_UGx2 then
		PARAMETERS perem_h_2 = t_perem_hogr : LOCK "perem_h_2"
		PARAMETERS perem_t_2 = t_perem_togr : LOCK "perem_t_2"
		values "perem_profile_2" ugol_m
		if th>EPS then 
			PARAMETERS perem_zazor_2 = th : LOCK "perem_zazor_2"
		endif
	endif
	if t_perem_type = iType_UGx2 then
		if th>EPS then 
			PARAMETERS perem_zazor_2 = th : LOCK "perem_zazor_2"
		else
			values 'perem_zazor_2' range[t_perem_togr*2,1]
		endif
	endif
	if t_perem_type = iType_PROF then
		hideparameter "perem_t_2", "perem_h_2", "perem_zazor_2"
		LOCK "perem_t_2", "perem_h_2", "perem_zazor_2"
	else
		hideparameter "perem_ves_p_2", "perem_archprofile_2"
		LOCK "perem_ves_p_2", "perem_archprofile_2"
	endif
else
	hideparameter "perem_sp_type_2"
	PARAMETERS perem_profile_2 = ""
endif
!--------- ТИП 3 --------------
inx=3
if perem_qty_type[inx] then
	values{2} "perem_type_3" itype_perem, t_type_perem
!	values "perem_min_opir_3" range [min_opir, max_opir]
!	values "perem_dl_3" range[-perem_min_opir_3,perem_min_opir_3]
	t_perem_type = perem_type_3
	t_perem_sub_type = perem_subtype_3
	t_perem_podbor = perem_podbor_3
	t_perem_hogr = perem_h_3
	t_perem_togr = perem_t_3
	t_perem_profile = perem_profile_3
	t_perem_min_opir = perem_min_opir_3
	t_perem_qty_by_type = perem_qty_by_type_3
	t_perem_zazor = perem_zazor_3
	if t_perem_type = iType_SB then
		values "perem_subtype_3" mark_perem
		gosub "get_sort"
		values "perem_profile_3" naen_type
		values 'perem_h_3' 0,un_vis
		values 'perem_t_3' 0,un_tolsh
	endif
	gosub "get_param"
	if t_perem_type = iType_SB then
		if t_perem_podbor and t_perem_podbor_flag<EPS then
			perem_podbor_3 = 0
			PARAMETERS perem_podbor_3 = 0
		else
			if t_perem_podbor then 
				PARAMETERS perem_profile_3 = t_perem_profile
				LOCK "perem_profile_3"
			endif
		endif
		if th<EPS then
			values "perem_qty_by_type_3" range[1,5]
		else
			PARAMETERS perem_qty_by_type_3 = t_perem_qty_by_type : LOCK "perem_qty_by_type_3"
			PARAMETERS perem_zazor_3 = t_perem_zazor
		endif
		if (perem_qty_by_type[inx]-1)<EPS then
			PARAMETERS perem_dhf_3=0, perem_dhe_3=0
			LOCK "perem_dhf_3", "perem_dhe_3"
			hideparameter "perem_dhf_3", "perem_dhe_3"
		else
			if perem_dhf_3 then PARAMETERS perem_dhe_3 = 0
			if perem_dhe_3 then PARAMETERS perem_dhf_3 = 0				
		endif
	else
		LOCK "perem_subtype_3"
		PARAMETERS perem_podbor_3 = 0 : LOCK "perem_podbor_3"
		PARAMETERS perem_qty_by_type_3 = 1 : LOCK "perem_qty_by_type_3"
	endif
	if t_perem_type = iType_CONC or t_perem_type = iType_ARM then
		PARAMETERS perem_zazor_3 = 0 : LOCK "perem_zazor_3"
		PARAMETERS perem_profile_3 = t_perem_profile : LOCK "perem_profile_3"
		values 'perem_h_3' range[0.03,1]
		if th>EPS then 
			PARAMETERS perem_t_3 = t_perem_togr : LOCK "perem_t_3"
		else
			values 'perem_t_3' range[0.03,1]
		endif
	endif
	if t_perem_type = iType_UG or t_perem_type = iType_UGMIRR or t_perem_type = iType_UGx2 then
		PARAMETERS perem_h_3 = t_perem_hogr : LOCK "perem_h_3"
		PARAMETERS perem_t_3 = t_perem_togr : LOCK "perem_t_3"
		values "perem_profile_3" ugol_m
		if th>EPS then 
			PARAMETERS perem_zazor_3 = th : LOCK "perem_zazor_3"
		endif
	endif
	if t_perem_type = iType_UGx2 then
		if th>EPS then 
			PARAMETERS perem_zazor_3 = th : LOCK "perem_zazor_3"
		else
			values 'perem_zazor_3' range[t_perem_togr*2,1]
		endif
	endif
	if t_perem_type = iType_PROF then
		hideparameter "perem_t_3", "perem_h_3", "perem_zazor_3"
		LOCK "perem_t_3", "perem_h_3", "perem_zazor_3"
	else
		hideparameter "perem_ves_p_2", "perem_archprofile_3"
		LOCK "perem_ves_p_3", "perem_archprofile_3"
	endif
else
	hideparameter "perem_sp_type_3"
	PARAMETERS perem_profile_3 = ""
endif
!--------- ТИП 4 --------------
inx=4
if perem_qty_type[inx] then
	values{2} "perem_type_4" itype_perem, t_type_perem
!	values "perem_min_opir_4" range [min_opir, max_opir]
!	values "perem_dl_4" range[-perem_min_opir_4,perem_min_opir_4]
	t_perem_type = perem_type_4
	t_perem_sub_type = perem_subtype_4
	t_perem_podbor = perem_podbor_4
	t_perem_hogr = perem_h_4
	t_perem_togr = perem_t_4
	t_perem_profile = perem_profile_4
	t_perem_min_opir = perem_min_opir_4
	t_perem_qty_by_type = perem_qty_by_type_4
	t_perem_zazor = perem_zazor_4
	if t_perem_type = iType_SB then
		values "perem_subtype_4" mark_perem
		gosub "get_sort"
		values "perem_profile_4" naen_type
		values 'perem_h_4' 0,un_vis
		values 'perem_t_4' 0,un_tolsh
	endif
	gosub "get_param"
	if t_perem_type = iType_SB then
		if t_perem_podbor and t_perem_podbor_flag<EPS then
			perem_podbor_4 = 0
			PARAMETERS perem_podbor_4 = 0
		else
			if t_perem_podbor then 
				PARAMETERS perem_profile_4 = t_perem_profile
				LOCK "perem_profile_4"
			endif
		endif
		if th<EPS then
			values "perem_qty_by_type_4" range[1,5]
		else
			PARAMETERS perem_qty_by_type_4 = t_perem_qty_by_type : LOCK "perem_qty_by_type_4"
			PARAMETERS perem_zazor_4 = t_perem_zazor
		endif
		if (perem_qty_by_type[inx]-1)<EPS then
			PARAMETERS perem_dhf_4=0, perem_dhe_4=0
			LOCK "perem_dhf_4", "perem_dhe_4"
			hideparameter "perem_dhf_4", "perem_dhe_4"
		else
			if perem_dhf_4 then PARAMETERS perem_dhe_4 = 0
			if perem_dhe_4 then PARAMETERS perem_dhf_4 = 0				
		endif
	else
		LOCK "perem_subtype_4"
		PARAMETERS perem_podbor_4 = 0 : LOCK "perem_podbor_4"
		PARAMETERS perem_qty_by_type_4 = 1 : LOCK "perem_qty_by_type_4"
	endif
	if t_perem_type = iType_CONC or t_perem_type = iType_ARM then
		PARAMETERS perem_zazor_4 = 0 : LOCK "perem_zazor_4"
		PARAMETERS perem_profile_4 = t_perem_profile : LOCK "perem_profile_4"
		values 'perem_h_4' range[0.03,1]
		if th>EPS then 
			PARAMETERS perem_t_4 = t_perem_togr : LOCK "perem_t_4"
		else
			values 'perem_t_4' range[0.03,1]
		endif
	endif
	if t_perem_type = iType_UG or t_perem_type = iType_UGMIRR or t_perem_type = iType_UGx2 then
		PARAMETERS perem_h_4 = t_perem_hogr : LOCK "perem_h_4"
		PARAMETERS perem_t_4 = t_perem_togr : LOCK "perem_t_4"
		values "perem_profile_4" ugol_m
		if th>EPS then 
			PARAMETERS perem_zazor_4 = th : LOCK "perem_zazor_4"
		endif
	endif
	if t_perem_type = iType_UGx2 then
		if th>EPS then 
			PARAMETERS perem_zazor_4 = th : LOCK "perem_zazor_4"
		else
			values 'perem_zazor_4' range[t_perem_togr*2,1]
		endif
	endif
	if t_perem_type = iType_PROF then
		hideparameter "perem_t_4", "perem_h_4", "perem_zazor_4"
		LOCK "perem_t_3", "perem_h_4", "perem_zazor_4"
	else
		hideparameter "perem_ves_p_4", "perem_archprofile_4"
		LOCK "perem_ves_p_4", "perem_archprofile_4"
	endif
else
	hideparameter "perem_sp_type_4"
	PARAMETERS perem_profile_4 = ""
endif

t_perem_nagr_max = 10000000
for inx=1 to vardim1(t_perem_nagr)
	if t_perem_nagr[inx]-t_perem_nagr_max<EPS and perem_qty_type[inx] then t_perem_nagr_max=t_perem_nagr[inx]
next inx

!-----------Формирование контрольной строки для разбивки------------------
t_perem_marka_sum = ""
for i=inx_start_type to flag_not_use
	var = ""
	if perem_qty_type[i]>EPS then
		var = var + perem_profile[i]+"/"
		var = var + str("%.0",perem_qty_by_type[i])+"/"
		if t_perem_type = iType_UG or t_perem_type = iType_UGMIRR or t_perem_type = iType_UGx2 then var = var + str("%.0mm",perem_dlin[i])+"/"
		if perem_dh[i]>EPS then var = var + str("%.0mm",perem_dh[i])+"/"
		var = var + "_"
	endif
	t_perem_marka_sum = t_perem_marka_sum + var
next i
if strlen(t_perem_marka_sum)>EPS then
	_newChar = ""
	for i=1 to vardim1(del_ch)
		_charToReplace = del_ch[i]
		_currStr = t_perem_marka_sum
		gosub "purge_txt"
		t_perem_marka_sum=_newStr
	next i
endif
!-----------Формирование контрольной строки для разбивки------------------

PARAMETERS perem_nagr_max = t_perem_nagr_max
PARAMETERS perem_nagr = t_perem_nagr
PARAMETERS perem_naen = t_perem_naen
PARAMETERS perem_h = t_perem_h
PARAMETERS perem_t = t_perem_t
PARAMETERS perem_ves = t_perem_ves
PARAMETERS perem_dlin = t_perem_dlin
PARAMETERS perem_tug = t_perem_tug
PARAMETERS perem_marka_sum = t_perem_marka_sum
hideparameter "perem_marka_sum" : LOCK "perem_marka_sum"

goto 20
"get_param":
	th=0
	if perem_th_by_layer[inx]>EPS then
		if main_name="" then
			th = max_t
		else
			if WALL_COMPS_NAME_<>"" then
				th=WALL_SKINS_PARAMS_[perem_th_by_layer[inx]][2]
			else
				th=WALL_THICKNESS_
			endif
		endif
		for i=inx_start_type to flag_not_use
			flag_find = 0
			if perem_th_by_layer[inx]=perem_th_by_layer[i] then flag_find = 1
			if i<inx and flag_find then
				th = 0
			endif
			if i>inx and flag_find then
				th = th - perem_t[i] - perem_zazor_type[i]
			endif
		next i
	endif
	!Сборная
	if t_perem_type = iType_SB then
		if t_perem_podbor then
			gosub "podbor"
			if t_perem_podbor_flag > EPS then t_perem_profile = naen_type[t_perem_podbor_flag]
		endif
		i=0
		REPEAT
			i = i + 1
		UNTIL ((t_perem_profile = naen_m[i])+(i=vardim1(naen_m)))
		t_inx_sub_type = i
		if strstr(t_perem_sub_type,"Любая брусковая")>0 or strstr(t_perem_sub_type,"ПБ")>0 or strstr(t_perem_sub_type,"ПП")>0 then
			t_perem_naen[inx] = t_perem_naen_prefix[1] + t_perem_profile
			PARAMETERS perem_obozn[inx] = gost_br
		endif
		if strstr(t_perem_sub_type,"Любая фибро")>0 or strstr(t_perem_sub_type,"ПБФ")>0 then
			t_perem_naen[inx] = t_perem_naen_prefix[2] + t_perem_profile
			PARAMETERS perem_obozn[inx] = gost_fb
		endif
		t_perem_nagr[inx] = nagr_m[t_inx_sub_type]
		t_perem_h[inx] = vis_m[t_inx_sub_type]
		t_perem_t[inx] = tolsh_m[t_inx_sub_type]
		t_perem_ves[inx] = ves_m[t_inx_sub_type]
		t_perem_dlin[inx] = dlin_per_m[t_inx_sub_type]
		if th>EPS then
			t_perem_qty_by_type = int(th/t_perem_t[inx])
			if t_perem_qty_by_type-1>EPS then t_perem_zazor = (th - t_perem_qty_by_type*t_perem_t[inx])/(t_perem_qty_by_type-1)
		endif
	endif
	!Монолитная
	if t_perem_type = iType_CONC then
		if th>EPS then t_perem_togr = th-perem_zazor_type[inx]
		t_dlin = round_int((ac_wallhole_width + 2*t_perem_min_opir+perem_dl[inx])*50)/50
		t_perem_profile = str("%.0mm",t_perem_hogr)+"(H)x"+str("%.0mm",t_perem_togr)+"(B)x"+str("%.0mm",t_dlin)+"(L)"
		t_ves = t_dlin * t_perem_hogr * t_perem_togr * 2560
		t_perem_naen[inx] = t_perem_naen_prefix[4] + t_perem_profile
		t_perem_h[inx] = t_perem_hogr
		t_perem_t[inx] = t_perem_togr
		t_perem_ves[inx] = t_ves
		t_perem_dlin[inx] = t_dlin
		PARAMETERS perem_obozn[inx] = "-"
	endif
	!Рядовая
	if t_perem_type = iType_ARM then
		if th>EPS then t_perem_togr = th
		t_dlin = round_int((ac_wallhole_width + 2*t_perem_min_opir+perem_dl[inx])*50)/50
		t_perem_profile = str("%.0", qty_arm[inx][1])+"х"+str("%.0mm", perem_diam)+perem_class+" "+str("%.0mm",t_dlin)+"(L)x"+str("%.0mm",t_perem_hogr)+"(H)x"+str("%.0mm",t_perem_togr)+"(B)"
		t_ves = t_dlin * weight_osn * qty_arm[inx][1]
		t_perem_naen[inx] = t_perem_naen_prefix[3] + t_perem_profile
		t_perem_h[inx] = t_perem_hogr
		t_perem_t[inx] = t_perem_togr
		t_perem_ves[inx] = t_ves
		t_perem_dlin[inx] = t_dlin
		PARAMETERS perem_obozn[inx] = "-"
	endif
	!Уголок или спаренный уголок
	if t_perem_type = iType_UG or t_perem_type = iType_UGMIRR or t_perem_type = iType_UGx2 then
		ik = 1
		for k=1 to vardim1(ugol_m)
			if ugol_m[k]=perem_profile[inx] then ik = k
		next k
		t_dlin = round_int((ac_wallhole_width + 2*t_perem_min_opir)*20)/20
		t_perem_hogr=ugol_r[ik][1]
		t_perem_togr=ugol_r[ik][2]
		t_perem_tu=ugol_r[ik][3]
		t_ves = ugol_r[ik][4]*t_dlin
		gost_ug = gost_ug_m[ik]
		if t_perem_type = iType_UGx2 then
			t_perem_naen[inx] = t_perem_naen_prefix[6] +t_perem_profile+" L="+str("%.0mm",t_dlin)+"мм."
		else
			t_perem_naen[inx] = t_perem_naen_prefix[5] +t_perem_profile+" L="+str("%.0mm",t_dlin)+"мм."
		endif
		PARAMETERS perem_obozn[inx] = gost_ug
		t_perem_h[inx] = t_perem_hogr
		t_perem_t[inx] = t_perem_togr
		t_perem_tug[inx] = t_perem_tu
		t_perem_ves[inx] = t_ves
		t_perem_dlin[inx] = t_dlin
	endif
	!Сложный профиль
	if t_perem_type = iType_PROF then
		t_dlin = round_int((ac_wallhole_width + 2*t_perem_min_opir)*50)/50
		t_ves = perem_ves_p[inx] * t_dlin
		t_perem_ves[inx] = t_ves
		t_perem_dlin[inx] = t_dlin
		t_perem_naen[inx] = t_perem_profile+" L="+str("%.0mm",t_dlin)+"мм."
	endif
return

"get_sort":
	naen_type = emp1t
	tdlin_m = epm1i
	tvis_m = epm1i
	ttolsh_m = epm1i
	un_vis = epm1i
	un_tolsh = epm1i
	j = 0
	for i=1 to vardim1(naen_m)
		fl_type = 0
		if t_perem_sub_type="Любая брусковая" and (strstr(naen_m[i],"ПБ")>0 or strstr(naen_m[i],"ПП")>0) and strstr(naen_m[i],"Ф")=0 then fl_type = 1
		if t_perem_sub_type="Любая фибро" and strstr(naen_m[i],"ПБФ")>0 then fl_type = 1
		if STRSUB (naen_m[i], 1, strlen(t_perem_sub_type))=t_perem_sub_type and strstr(naen_m[i],"Ф")=strstr(t_perem_sub_type,"Ф") then fl_type = 1
		if fl_type = 1 then 
			j = j + 1
			naen_type[j] = naen_m[i]
			tdlin_m[j] = dlin_m[i]
			tvis_m[j] = vis_m[i]
			ttolsh_m[j] = tolsh_m[i]
		endif
	next i
	n_type = j
	j=1 : un_vis[1] = tvis_m[1]
	for i=1 to n_type
		flag = 1
		for k=1 to j
			if un_vis[k] = tvis_m[i] then flag = 0
		next k
		if flag = 1 then
			j = j + 1
			un_vis[j] = tvis_m[i]
		endif
	next i
	j=1 : un_tolsh[1] = ttolsh_m[1]
	for i=1 to n_type
		flag = 1
		for k=1 to j
			if un_tolsh[k] = ttolsh_m[i] then flag = 0
		next k
		if flag = 1 then
			j = j + 1
			un_tolsh[j] = ttolsh_m[i]
		endif
	next i
return

"podbor":
	t_perem_podbor_flag = 0
	min_diff = ac_wallhole_width*3 !Начальное значение
	for i=1 to vardim1(tdlin_m)
		diff = tdlin_m[i]-ac_wallhole_width-t_perem_min_opir*2
		if (diff-min_diff)<EPS and diff>EPS and (abs(tvis_m[i]-t_perem_hogr)<EPS or t_perem_hogr<EPS) and (abs(ttolsh_m[i]-t_perem_togr)<EPS or t_perem_togr<EPS) then 
			min_diff = diff
			t_perem_podbor_flag = i
		endif
	next i
return

"get_diam":
	diam_temp = epm1i
	nstolb = 1
	for i = 1 to vardim1(reinforce_class)
		if class = reinforce_class[i] then 
			nstolb = i
			i = vardim1(reinforce_class)
		endif
	next i
	i = 1 : usl = 0
	REPEAT
		if i<=vardim1(reinforce_diam) then
			if reinforce_diam[i][nstolb]>EPS then
				diam_temp[i] = reinforce_diam[i][nstolb]
			else
				usl = 1
			endif
		else
			usl = 1
		endif
		i = i + 1
	UNTIL usl
return

"get_weight":
	nstolb = 1
	for i = 1 to vardim1(reinforce_class)
		if class = reinforce_class[i] then 
			nstolb = i
			i = vardim1(reinforce_class)
		endif
	next i
	nstrok = 1
	for i = 1 to vardim1(reinforce_diam)
		if diam_arm = reinforce_diam[i][nstolb] then 
			nstrok = i
			i = vardim1(reinforce_diam)
		endif
	next i
	if nstrok>EPS and nstolb>EPS then weight = reinforce_weight[nstrok][nstolb]
return
"purge_txt":
    _newStr = ""     ! intialize a new empty string
    _i = 1000        ! creating a "guard" for the while, set the max number of runs
    while _currStr <> "" and _i > 0 do
        _n = STRSTR (_currStr, _charToReplace, 1)   ! check the script for _charToReplace
        if _n > 0 then	
            ! _charToReplace is first found in position _n
            ! add the first part of _currStr to _newStr, plus add _newChar
            _newStr = _newStr + STRSUB (_currStr, 1, _n - 1) + _newChar
            ! get a new _currStr from the chars after position _n
            _currStr = STRSUB (_currStr, _n + 1, STRLEN(_currStr) - _n)	 
        else
            ! if _charToReplace is not found then add _currStr to _newStr
            _newStr = _newStr + _currStr
            ! close the loop with changing _currStr to empty string
            _currStr = ""
        endif
        _i = _i - 1	! decrease the "guard" variable in each run
    endwhile
return
20:

]]>
</Script_VL>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_FWM SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_FWM>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_BWM SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_BWM>

<ParamSection SectVersion="27" SectionFlags="0" SubIdent="0">
	<ParamSectHeader>
		<AutoHotspots>false</AutoHotspots>
		<StatBits>
			<STBit_UIDefault/>
			<STBit_FixSize/>
			<STBit_UIUseHierarchicalPages/>
		</StatBits>
		<WDLeftFrame>0</WDLeftFrame>
		<WDRightFrame>0</WDRightFrame>
		<WDTopFrame>0</WDTopFrame>
		<WDBotFrame>0</WDBotFrame>
		<LayFlags>65535</LayFlags>
		<WDMirrorThickness>0</WDMirrorThickness>
		<WDWallInset>0</WDWallInset>
	</ParamSectHeader>
	<Parameters>
		<String Name="perem_marka">
			<Description><![CDATA["Марка перемычки"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["!"]]></Value>
		</String>
		<Length Name="A">
			<Description><![CDATA["Ширина"]]></Description>
			<Fix/>
			<Value>0.12</Value>
		</Length>
		<Length Name="B">
			<Description><![CDATA["Высота"]]></Description>
			<Fix/>
			<Value>0.02</Value>
		</Length>
		<Length Name="ZZYZX">
			<Description><![CDATA["Размер Z"]]></Description>
			<Fix/>
			<Value>0.12</Value>
		</Length>
		<Boolean Name="AC_show2DHotspotsIn3D">
			<Description><![CDATA["Показ Узловых 2D Точек в 3D"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="ac_bottomlevel">
			<Description><![CDATA["Отметка Низа"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ac_toplevel">
			<Description><![CDATA["Отметка Верха"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.02</Value>
		</Length>

		<!-- perem_sp_comm: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="perem_sp_comm">
			<Description><![CDATA["Общие параметры"]]></Description>
		</Title>
		<Boolean Name="perem_qty_type">
			<Description><![CDATA["Использовать тип"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="4" SecondDimension="0">
				<AVal Row="1">0</AVal>
				<AVal Row="2">0</AVal>
				<AVal Row="3">0</AVal>
				<AVal Row="4">0</AVal>
			</ArrayValues>
		</Boolean>
		<Boolean Name="perem_eq_dl">
			<Description><![CDATA["Одинаковое смещение по горизонтали"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Integer Name="perem_th_by_layer">
			<Description><![CDATA["Ширина типа по слою"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="4" SecondDimension="0">
				<AVal Row="1">0</AVal>
				<AVal Row="2">0</AVal>
				<AVal Row="3">0</AVal>
				<AVal Row="4">0</AVal>
			</ArrayValues>
		</Integer>
		<String Name="perem_config">
			<Description><![CDATA["Конфигурация"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["1;7;6ПБ;120.;0;0.;0.;0.;0.;0.;0;0;100.;1;2;0;0.;0.;0;1;1/1;6;Любая брусковая;120.;0;20.;20.;20.;20.;0.;0;0;100.;1;0;0;0.;0.;0;L20x3;2/0;3/0;4/"]]></Value>
		</String>
		<Boolean Name="perem_mul">
			<Description><![CDATA["Отзеркалить перемычку"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="perem_reverse">
			<Description><![CDATA["Изменить направление слоёв стены"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<String Name="perem_note">
			<Description><![CDATA["Состав марки перемычки"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>

		<!-- perem_sp_zazor: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="perem_sp_zazor">
			<Description><![CDATA["Параметры зазоров"]]></Description>
		</Title>
		<BuildingMaterial Name="perem_empt_material">
			<Description><![CDATA["Материал заполнения зазоров"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>38</Value>
		</BuildingMaterial>
		<Length Name="perem_zazor_type">
			<Description><![CDATA["Зазор между типами"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="4" SecondDimension="0">
				<AVal Row="1">0</AVal>
				<AVal Row="2">0</AVal>
				<AVal Row="3">0</AVal>
				<AVal Row="4">0</AVal>
			</ArrayValues>
		</Length>
		<Integer Name="perem_zazor_by_layer">
			<Description><![CDATA["Величина зазора по слою"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="4" SecondDimension="0">
				<AVal Row="1">0</AVal>
				<AVal Row="2">0</AVal>
				<AVal Row="3">0</AVal>
				<AVal Row="4">0</AVal>
			</ArrayValues>
		</Integer>

		<!-- perem_sp_type_1: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="perem_sp_type_1">
			<Description><![CDATA["Тип 1"]]></Description>
		</Title>
		<Integer Name="perem_type_1">
			<Description><![CDATA["Тип перемычки 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>7</Value>
		</Integer>
		<String Name="perem_subtype_1">
			<Description><![CDATA["Тип сборной перемычки 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["6ПБ"]]></Value>
		</String>
		<Length Name="perem_min_opir_1">
			<Description><![CDATA["Минимальное опирание 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.12</Value>
		</Length>
		<Boolean Name="perem_podbor_1">
			<Description><![CDATA["Автоподбор 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="perem_t_1">
			<Description><![CDATA["Ограничение толщины 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="perem_h_1">
			<Description><![CDATA["Ограничение высоты 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="perem_dh_1">
			<Description><![CDATA["Смещение по высоте 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Boolean Name="perem_dhf_1">
			<Description><![CDATA["Смещение только первого"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="perem_dhe_1">
			<Description><![CDATA["Смещение только последнего"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="perem_dl_1">
			<Description><![CDATA["Смещение по длине 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="perem_zazor_1">
			<Description><![CDATA["Зазор между элементами 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<BuildingMaterial Name="perem_material_1">
			<Description><![CDATA["Материал 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>24</Value>
		</BuildingMaterial>
		<Integer Name="perem_qty_by_type_1">
			<Description><![CDATA["Кол-во элементов тип 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="perem_profile_1">
			<Description><![CDATA["Элемент 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["1"]]></Value>
		</String>
		<Profile Name="perem_archprofile_1">
			<Description><![CDATA["Сложный профиль 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Profile>
		<RealNum Name="perem_ves_p_1">
			<Description><![CDATA["Вес п.м. 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="perem_pos_1">
			<Description><![CDATA["Поз. типа 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["!"]]></Value>
		</String>

		<!-- perem_sp_type_2: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="perem_sp_type_2">
			<Description><![CDATA["Тип 2"]]></Description>
		</Title>
		<Integer Name="perem_type_2">
			<Description><![CDATA["Тип перемычки 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>6</Value>
		</Integer>
		<String Name="perem_subtype_2">
			<Description><![CDATA["Тип сборной перемычки 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Любая брусковая"]]></Value>
		</String>
		<Length Name="perem_min_opir_2">
			<Description><![CDATA["Минимальное опирание 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.12</Value>
		</Length>
		<Boolean Name="perem_podbor_2">
			<Description><![CDATA["Автоподбор 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="perem_t_2">
			<Description><![CDATA["Ограничение толщины 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.02</Value>
		</Length>
		<Length Name="perem_h_2">
			<Description><![CDATA["Ограничение высоты 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.02</Value>
		</Length>
		<Length Name="perem_dh_2">
			<Description><![CDATA["Смещение по высоте 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Boolean Name="perem_dhf_2">
			<Description><![CDATA["Смещение только первого"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="perem_dhe_2">
			<Description><![CDATA["Смещение только последнего"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="perem_dl_2">
			<Description><![CDATA["Смещение по длине 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="perem_zazor_2">
			<Description><![CDATA["Зазор между элементами 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<BuildingMaterial Name="perem_material_2">
			<Description><![CDATA["Материал 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</BuildingMaterial>
		<Integer Name="perem_qty_by_type_2">
			<Description><![CDATA["Кол-во элементов тип 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="perem_profile_2">
			<Description><![CDATA["Элемент 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["L20x3"]]></Value>
		</String>
		<String Name="perem_pos_2">
			<Description><![CDATA["Поз. типа 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["!"]]></Value>
		</String>
		<Profile Name="perem_archprofile_2">
			<Description><![CDATA["Сложный профиль 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Profile>
		<RealNum Name="perem_ves_p_2">
			<Description><![CDATA["Вес п.м. 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>

		<!-- perem_sp_type_3: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="perem_sp_type_3">
			<Description><![CDATA["Тип 3"]]></Description>
		</Title>
		<Integer Name="perem_type_3">
			<Description><![CDATA["Тип перемычки 3"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<String Name="perem_subtype_3">
			<Description><![CDATA["Тип сборной перемычки 3"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Любая брусковая"]]></Value>
		</String>
		<Length Name="perem_min_opir_3">
			<Description><![CDATA["Минимальное опирание 3"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.12</Value>
		</Length>
		<Boolean Name="perem_podbor_3">
			<Description><![CDATA["Автоподбор 3"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="perem_t_3">
			<Description><![CDATA["Ограничение толщины 3"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="perem_h_3">
			<Description><![CDATA["Ограничение высоты 3"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="perem_dh_3">
			<Description><![CDATA["Смещение по высоте 3"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Boolean Name="perem_dhf_3">
			<Description><![CDATA["Смещение только первого"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="perem_dhe_3">
			<Description><![CDATA["Смещение только последнего"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="perem_dl_3">
			<Description><![CDATA["Смещение по длине 3"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="perem_zazor_3">
			<Description><![CDATA["Зазор между элементами 3"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<BuildingMaterial Name="perem_material_3">
			<Description><![CDATA["Материал 3"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</BuildingMaterial>
		<Integer Name="perem_qty_by_type_3">
			<Description><![CDATA["Кол-во элементов тип 3"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<String Name="perem_profile_3">
			<Description><![CDATA["Элемент 3"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="perem_pos_3">
			<Description><![CDATA["Поз. типа 3"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["!"]]></Value>
		</String>
		<RealNum Name="perem_ves_p_3">
			<Description><![CDATA["Вес п.м. 3"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<Profile Name="perem_archprofile_3">
			<Description><![CDATA["Сложный профиль 3"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Profile>

		<!-- perem_sp_type_4: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="perem_sp_type_4">
			<Description><![CDATA["Тип 4"]]></Description>
		</Title>
		<Integer Name="perem_type_4">
			<Description><![CDATA["Тип перемычки 4"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<String Name="perem_subtype_4">
			<Description><![CDATA["Тип сборной перемычки 4"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Любая брусковая"]]></Value>
		</String>
		<Length Name="perem_min_opir_4">
			<Description><![CDATA["Минимальное опирание 4"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.12</Value>
		</Length>
		<Boolean Name="perem_podbor_4">
			<Description><![CDATA["Автоподбор 4"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="perem_t_4">
			<Description><![CDATA["Ограничение толщины 4"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="perem_h_4">
			<Description><![CDATA["Ограничение высоты 4"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="perem_dh_4">
			<Description><![CDATA["Смещение по высоте 4"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Boolean Name="perem_dhf_4">
			<Description><![CDATA["Смещение только первого"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="perem_dhe_4">
			<Description><![CDATA["Смещение только последнего"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="perem_dl_4">
			<Description><![CDATA["Смещение по длине 4"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="perem_zazor_4">
			<Description><![CDATA["Зазор между элементами 4"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<BuildingMaterial Name="perem_material_4">
			<Description><![CDATA["Материал 4"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</BuildingMaterial>
		<Integer Name="perem_qty_by_type_4">
			<Description><![CDATA["Кол-во элементов тип 4"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<String Name="perem_profile_4">
			<Description><![CDATA["Элемент 4"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="perem_pos_4">
			<Description><![CDATA["Поз. типа 4"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["!"]]></Value>
		</String>
		<RealNum Name="perem_ves_p_4">
			<Description><![CDATA["Вес п.м. 4"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<Profile Name="perem_archprofile_4">
			<Description><![CDATA["Сложный профиль 4"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Profile>

		<!-- perem_arm: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="perem_arm">
			<Description><![CDATA["Параметры рядовой и монолитной перемычки"]]></Description>
		</Title>
		<Length Name="perem_diam">
			<Description><![CDATA["Диаметр основной арматуры"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.008</Value>
		</Length>
		<Length Name="perem_diam_dop">
			<Description><![CDATA["Диаметр хомутов"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.003</Value>
		</Length>
		<Length Name="perem_shag_dop">
			<Description><![CDATA["Шаг хомутов"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="perem_shag_osn">
			<Description><![CDATA["Шаг основной арматуры"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<String Name="perem_class">
			<Description><![CDATA["Класс основной арматуры"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["A-I(A240)"]]></Value>
		</String>
		<String Name="perem_class_dop">
			<Description><![CDATA["Класс арматуры хомутов"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Вр-I"]]></Value>
		</String>
		<String Name="perem_concr">
			<Description><![CDATA["Марка раствора (бетона)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["М150"]]></Value>
		</String>

		<!-- perem_array: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="perem_array">
			<Description><![CDATA["Массивы для отрисовки и смет"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
		</Title>
		<RealNum Name="perem_nagr_max">
			<Description><![CDATA["Максимальная нагрузка на марку"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<RealNum Name="perem_nagr">
			<Description><![CDATA["Максимальная нагрузка на элемент"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="4" SecondDimension="0">
				<AVal Row="1">0</AVal>
				<AVal Row="2">0</AVal>
				<AVal Row="3">0</AVal>
				<AVal Row="4">0</AVal>
			</ArrayValues>
		</RealNum>
		<RealNum Name="perem_ves">
			<Description><![CDATA["Вес типа"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="4" SecondDimension="0">
				<AVal Row="1">0</AVal>
				<AVal Row="2">0.3115</AVal>
				<AVal Row="3">0</AVal>
				<AVal Row="4">0</AVal>
			</ArrayValues>
		</RealNum>
		<String Name="perem_obozn">
			<Description><![CDATA["Обозначение типа"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="4" SecondDimension="0">
				<AVal Row="1"><![CDATA["ГОСТ 948-2016"]]></AVal>
				<AVal Row="2"><![CDATA["ГОСТ 8509-93"]]></AVal>
				<AVal Row="3"><![CDATA["ГОСТ 948-2016"]]></AVal>
				<AVal Row="4"><![CDATA["ГОСТ 948-2016"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="perem_naen">
			<Description><![CDATA["Наименование типа"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="4" SecondDimension="0">
				<AVal Row="1"><![CDATA["1 L=360мм."]]></AVal>
				<AVal Row="2"><![CDATA["Уголок LL20x3 L=350мм."]]></AVal>
				<AVal Row="3"><![CDATA[""]]></AVal>
				<AVal Row="4"><![CDATA[""]]></AVal>
			</ArrayValues>
		</String>
		<Length Name="perem_dlin">
			<Description><![CDATA["Длина типа"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="4" SecondDimension="0">
				<AVal Row="1">0.36</AVal>
				<AVal Row="2">0.35</AVal>
				<AVal Row="3">0</AVal>
				<AVal Row="4">0</AVal>
			</ArrayValues>
		</Length>
		<Length Name="perem_t">
			<Description><![CDATA["Толщина типа"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="4" SecondDimension="0">
				<AVal Row="1">0</AVal>
				<AVal Row="2">0.02</AVal>
				<AVal Row="3">0</AVal>
				<AVal Row="4">0</AVal>
			</ArrayValues>
		</Length>
		<Length Name="perem_h">
			<Description><![CDATA["Высота типа"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="4" SecondDimension="0">
				<AVal Row="1">0</AVal>
				<AVal Row="2">0.02</AVal>
				<AVal Row="3">0</AVal>
				<AVal Row="4">0</AVal>
			</ArrayValues>
		</Length>
		<Length Name="perem_tug">
			<Description><![CDATA["Толщина уголка"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="4" SecondDimension="0">
				<AVal Row="1">0</AVal>
				<AVal Row="2">0.003</AVal>
				<AVal Row="3">0</AVal>
				<AVal Row="4">0</AVal>
			</ArrayValues>
		</Length>

		<!-- callparam: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="callparam">
			<Description><![CDATA["Параметры из проёма"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
		</Title>
		<Length Name="ac_wallhole_width">
			<Description><![CDATA["Ширина проёма"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.12</Value>
		</Length>
		<Length Name="wallhole_half_width">
			<Description><![CDATA["Половина ширины"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="ac_wallhole_height">
			<Description><![CDATA["Высота проёма"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="otstup_2">
			<Description><![CDATA["Отступ"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="otstup">
			<Description><![CDATA["Отступ"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Integer Name="AC_Wall_Direction_Type">
			<Description><![CDATA["Направление стены"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Length Name="max_t">
			<Description><![CDATA["Толщина несущих слоёв"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="ac_revealToWallCore">
			<Description><![CDATA["Четверть к ядру"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<String Name="WALL_COMPS_NAME_">
			<Description><![CDATA["Имя стены"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="WALL_SKINS_NUMBER_">
			<Description><![CDATA["Количество слоёв"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Length Name="WALL_SKINS_PARAMS_">
			<Description><![CDATA["Слои"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="2">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0</AVal>
			</ArrayValues>
		</Length>
		<Length Name="WALL_THICKNESS_">
			<Description><![CDATA["Толщина"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>

		<!-- label_sp: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="label_sp">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
		</Title>
		<Length Name="label_posxyz">
			<Description><![CDATA["Привязка выносной надписи"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="3" SecondDimension="0">
				<AVal Row="1">0</AVal>
				<AVal Row="2">0</AVal>
				<AVal Row="3">0</AVal>
			</ArrayValues>
		</Length>
		<Angle Name="label_posang">
			<Description><![CDATA["Угла поворота выносной надписи"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="2" SecondDimension="0">
				<AVal Row="1">0</AVal>
				<AVal Row="2">0</AVal>
			</ArrayValues>
		</Angle>
		<Boolean Name="label_posset">
			<Description><![CDATA["Есть данные для передачи в выноску"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<String Name="param_name_out">
			<Description><![CDATA["Возможные параметры"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="3" SecondDimension="0">
				<AVal Row="1"><![CDATA["!!Перемычка!!"]]></AVal>
				<AVal Row="2"><![CDATA["perem_marka - марка перемычки"]]></AVal>
				<AVal Row="3"><![CDATA["ur - уровень низа марки"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="param_temp_out">
			<Description><![CDATA["Шаблоны"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="2" SecondDimension="0">
				<AVal Row="1"><![CDATA["%perem_marka%"]]></AVal>
				<AVal Row="2"><![CDATA["%ur%"]]></AVal>
			</ArrayValues>
		</String>

		<!-- GS_daimoon_C: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="GS_daimoon_C">
			<Description><![CDATA["Спецификация"]]></Description>
		</Title>
		<Boolean Name="manual_elev">
			<Description><![CDATA["Вручную выставить собственный этаж"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="n_elev">
			<Description><![CDATA["Номер этажа"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<String Name="ur">
			<Description><![CDATA["Уровень"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["0.000"]]></Value>
		</String>
		<Length Name="ur_num">
			<Description><![CDATA["Уровень числом"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<String Name="perem_otm">
			<Description><![CDATA["Отметки низа марки"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="perem_marka_sum">
			<Description><![CDATA["Контрольная строка"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["1/1/360/_203/1/350/_"]]></Value>
		</String>
		<Boolean Name="perem_pos_reset">
			<Description><![CDATA["Сброс позиций"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="perem_marka_reset">
			<Description><![CDATA["Сброс имени марки"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="perem_reset">
			<Description><![CDATA["Сброс позиции и марки"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
	</Parameters>
</ParamSection>

<Copyright SectVersion="1" SectionFlags="0" SubIdent="0">
	<Author></Author>
	<License>
		<Type>CC0</Type>
		<Version>1.0</Version>
	</License>
</Copyright>

<Keywords SectVersion="1" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Keywords>

<Comment SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Comment>

<Picture MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="0" length_in_bytes="7722" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D494844520000029E0000
	01D20802000000CA665C4E000000017352474200AECE1CE90000000467414D41
	0000B18F0BFC6105000000097048597300000B1200000B1201D2DD7EFC00001D
	B549444154785EEDDD0B76A2CA1A06D0F41D8E3A9CD6331C7538AD3D1CC974FA
	168F18346A8000C2EFDE6B9D3E3E28AD08D4474101BFFEFDFBF7060044F1BFEA
	FF004008A21D004211ED00108A68078050443B008422DA012014D10E00A18876
	000845B4034028A21D004211ED00108A68078050443B008422DA012014D10E00
	A18876000845B4034028A21D004211ED00108A68078050443B008422DA012014
	D10E00A18876000845B4034028A21D004211ED00108A68078050443B008422DA
	012014D10E00A18876000845B4034028A21D004211ED00108A68078050443B00
	8422DA012014D10E00A18876000845B4034028A21D004211ED00108A68078050
	443B008422DA012014D10E00A18876000845B4034028A21D004211ED00108A68
	078050443B008422DA012014D10E00A18876000845B4034028A21D004211ED00
	108A68078050443B008422DA012014D10E00A18876000845B4034028A21D0042
	11ED00108A68078050443B008422DA012014D10E00A18876000845B4034028A2
	1D004211ED00108A68078050443B008422DA012014D10E00A18876000845B403
	4028A21D004211ED00108A68078050443B008422DA012014D10E00A188760008
	45B4034028A21D004211ED00108A6807805044FBEBC98EFBD5EA5761B5D967D5
	AB6FD9BE7AF1CAEA63925B139CDFFC70E7C32B8FDFBDE7B8298B54569B63D392
	C053E42BED97D621F7D376A6596B90ED37C5A7B468663EDCADF9BC88F65773DC
	AC36BBC5F6F42F396DDF76ABFA52BCDC15AF9F9D76CBB72C7BAFDE4DBE4CB05D
	56EF141E7EF837EFDEB73EE4252AA7C3FA7DD3B424F00CD97B6A35168B8BD6E1
	D34FDA9926AD416A6976EFEBF4116D9A99CAE39ACF87687F2DD97E7F4CABCD61
	5D2CB9CBF5E1B0CE76FB63F1DE8F3DFEF09EBE7AB9DEFED92DFBAB34D0B7EC6F
	EA4BAFD7EBEAE9606EB606654BF327DF1A48EFA7B78F7F9B67FB58351F9C687F
	2DCBD467BEEA69BFBDBDBFF7D3057EFCE1FD7DF572B1E8AFD240CFC6CCC72FAD
	41F1E5E76EF7F2F7BA4DB6874976D1FEE28EC7B4B93BD4DEA7C71FDEFDABA3EC
	32839046CDC72FADC17B76F1E579F45FECEC7F244EB28BF69776DC6C52BC0EB4
	243FFEF0CE5F9D1DF7FFEDA2AC7E10501EAECB65EA4C0FEE466B5044FDB5A6FB
	F8C6ABF9E044FBEBCA0F49E5A3520E2D4232DBD546AFAE36FBB48D7BDBE30F6F
	FFD5E761B3ABCD2E2B0ED4576F009392EF8F5BAE7FFF64AFDA37EDCC77ADC145
	3A2F968D6BD243CD2743B4BFAAACD8DC5DEEB6AD32B23E72F5B42DC6BCA78CFE
	E2F18777F9EAFC487DF5B5F9B898A2CF0F4C4E3D1FD39ADAE1F4B36FDB99815A
	833E6A3E19A2FD357DA46B318CB4A3B4B5FC67B7BCB15E3DFEF09F7EF5321F13
	5B1EA90726A65833CFC7BEDFDFB363D303DD77DC6D6772B75B838B63EBF94EF6
	467AAFF95389F69774DCFF38D80BF9F0D32FC7B11E7FF89D776F5EC8E2CE09A9
	46C8C34415F9D8F748989BED4CE5BA35289E5F3B07F6837666909A3F8F687F41
	D510B6ED4F83FDA6C71F7EF7DDCF5D6C355FCE9503A6AC1CC476BE62DC2A6DC7
	57CF6E76BA87901F5BAF457D5EA3CF63EFF7DB9909D4BC57A2FDE554E9DACB40
	B4CB534893C71FDED3577F39DD059884ABE8CC2F339756F8FCE14F56FA2FED4C
	CD97D6E0F24CF6BC68A39171C3D4FC7944FB8BE9322CFE8EECB8F96F97D53FAA
	EF61F13715C7EADB0EFF03E6E96B3B5373AB35586EB7EB6CF75FBE973DCB8FFF
	4519F3DE8E687F2DC5E66F6DB753E1F135962F4E24A99F94B2DAA79C3ED556B8
	C71FDEE1AB2B57458E8BC3C9AE7A988786E789376D679AB40669FADDE2983E22
	95DD756F2C1AD67C9A7EFDFBF7AF7A0800CC9F5E3B008422DA0120143BE45FC8
	AF5FBFAA47708706610AACAAD334A3B543B43363A9059CC502AC9EB432D31961
	F9990E3BE4012644AEF373A29DFB2ECF33F9B5DA14A7AF4D486A4A52BDAA2713
	A69EF08DECB85F55A7BCCDFBC62CD320DAB9AFBC1853E57458BF6F568D4E4407
	6823BFD1DA6E515E11EEB47DDB69697EC82E149ACBD266F56E7198D49517D336
	FE2C9661F5A48999FEFE3FAC76DEB21CD7B58BCB1C37BF366FD36A696646AF9D
	E6DC720DE85F7E01F72F178DD3D2FC8468A7B98B3B31E4B7473CEF34CB8FCA5F
	3C39DF2DE9E65D14738EA70137D56E9DDEA49DD1C87C25DA69283BE67762E874
	43E3E5AEBAA952BE7FAD7A725ABFEF56E70D80EED247A555B87A3261EAC9B7D2
	2F9F7EFFEAC97CF45DEDEA0E91ED5A9A211B993912ED3C76DE205E6DF27B28F5
	71CBB8427E7BA672E31CE0438F37A77CE54646B4F3D8E76D8C4FBB65566E4F03
	0CA1B84B6BEA75BB69F30F89769A5A6EFFEC963ADA3088BE776B8FA4D76A7F04
	FB1F376DFE29D14E73131D219F5A96D4BE544F264C3DE191E35EB0F745B403F0
	74D5E8B9AD60EF8368A7B98B93DF80BED81B5F057B6FE3745F9D68A7A9E238D8
	E7F896E5EFF5323BEEFBB8ACFCC589F0C0ABB93F2C5E3BD38D68E7BE7C55F8B4
	3A2E0EB54B41E6C3EA0E8BF74D716E5CBEC264BBEA3439290DB490FD2DA2FBAA
	C1292F37A39DE964967B81E0ABB4AECF6261564FBE9AE3AF6D099932BD768067
	9291F44EB4034028A21D8076EC699838D10EF03432922188768248ED636A25AB
	2713A69EC0D0443B002DD8D3307DA21DE03964240311ED00108A68270E87B1FB
	E5703B5FD9D3300BA21DE0096424C311ED00108A6807A0117B1AE642B4038C4D
	463228D14E287319F9A59EC070443B00DFB3A76146443BC0A864244313ED0010
	8A6807E01BF634CC8B68271A23D4FA35977ACE858C6404A21D004211ED003C62
	4FC3EC88768091C848C621DA09C861EC7ECDA59E4049B40370973D0D7324DA01
	C62023198D68078050443B00B7D9D33053A29D988C50EBD75CEA0924B6C8086B
	2E1D0EF5ECD75C3641EA3FE61CEBCC94E9B50371CC2523937355E75867264EAF
	9DB05233A437DCA359D4B3CC9E09D6F3EAD7ABD7738E7566E2F4DA0186759591
	3034D14E58A9312DFB1913A79E632AFF84567F48B722ADA64F4628524EDCB048
	9AAC9CE30DA76752443BF05ACAAC6A95581D8A241D42B17991F394ADBEA59CB8
	6DC5DA4ECFD3D94D4464A9499AC512AE9E7D2943685295BCF9A3D5EB39C13A27
	5FAB3DCD7A72935E3B00176E6E8E3023A29DC852F3547635264E3D811E897680
	A1E8FEF214A21D804F36470210ED00108A68071884EE2FCF22DA09CE08B57ECD
	A59EF0CA443B00157B1A6210ED00FD93913C9168078050443B00397B1AC210ED
	C467845ABFE652CF2792913C976807024AE1DA76FB638422E5C4231469357DD2
	A1085326DA81B09AC7D579CA418B24AD262E95451A16EC50AB0E5562E2EC35E2
	25A4C66B168BBA7AFE509952CFAD5B931FA75ECF29D439F9B6DA13A9274DE8B5
	F312527B54364C13A79EC0CF89768057F76D979D7911ED00BD91914C81680780
	50443BC04BB3A7211ED1CEAB3042AD5F73A927BC20D10ED00FDD5F2642B403BC
	2E9B23218976000845B403F440F797E910EDBC1023D4FA35977A728FCD91A844
	3BF05A529EB5DD22E956A47AD44CB7AF18A748F588F910EDC00B4941D5B69FDA
	A4C8D534E5D3B6A1387491AB4A36D1ED0FE1E9443BF05ACAA06A15579D8BB432
	7495927AA9F46F93A46FFB154C41EB8D3898BB862DDAD3A96707650E8D5F9FB6
	3F42BD9E73AC3313A7D70EF0236D33128626DA015E8ECD91D8443B008422DA01
	BAD3FD6582443B2F2735C4E580A089534F066273243CD10E00A18876808E747F
	9926D10EF0426C8EBC02D10E00A188765E91116AFD9A4B3DFBA5FBCB64897680
	576173E445887620A0946149F5A499118A94138F50A4D5F44987224C996807C2
	6A1E57E7291B16A94FD62A145B4D5C2A8BB4AD58F32FEA508489B3738617955A
	B1592CFCEAD94A194E23D4E4877F6FBD9E73AC331337E95E7BB65FA585E9C26A
	9F556FE6B2FDA69862B5B978F9A1E3A6F8A00FABCDB1715122492D549AFFD593
	09534FA0ADC9EF905FEE4EA9CD383B6D97D51B7948AF76EFEBF4F669FBB65B5D
	86FE7DEB43F551B9D361FDBE695C1420491B31A9F9A89EC0F4CCF7587BB6DF1F
	97BB3F79D42FD7DBDD323BFE6D1FD0A9E49F5474B73F562F00446473E4A5CC36
	DAB3BFC7EC6DB1A8FAF0CBDFEB6ED99E8A2E166F6FEFEFFAED00C430DB687FCF
	B2B7F57A5D3D2B023ACBDEAB67F941FA8BBDECF901F63BBBDDB3F754EABC8DC0
	2B499D1887B17B34977A4278738DF62290AF9DFBDE45277EF7DF4796E7FBEEDF
	96EBDF5FE33B3BEEFFDB5D6C23003C32C73DDBF6C6BF9AC9477BB63B8F925F6D
	F617A3D997CB45F528592CEBC1BD2C0FA117E19EE5E95D1D95AF9C87DEAF36E9
	ADF5E120D9018862D2D1BEDCD647C7E7E3E037AB4DC3016F1FE1BED97C09F6FA
	079FF2F1779BA61F0A009337A31DF265EFFAB83F1F32FF3CB69EE4C7DE2F95E1
	7E3C7E09F6BA62A2B7E351B603DFFB656F3C7330AF63ED9F7BDD8B71EDD73A0D
	863342FEA5A5262F357CD59309534FA0B9B90EA32B52BE16C8F9B0BA8B63EF1F
	C7D8D71703EA0020BA79457B6DAFFBE599ECF959EE9743E03F06CF1D0E9F03EA
	6E72F21BBC965F85EA49336591A4F99EED3471F5A899F2F3AB27CD34299226A8
	D7B949912B6DA76712D25C9F8953318EBD769DD8FC79711DDAE29D8B2BD29E76
	29AACFAF5C3EBBF0E02D5EC45CD602F56C227DFBE30A94EF3E9EE6CAB948F352
	E722E5D3AF8A0FABDE2D1F27E5E3F2C5269A14A9BFFBC3AF48FF960F98BE49F7
	DA2F6F0FB3DABFED0E65BE97D687D36E714C93E4EF9CEA57972F3AF19F83E796
	DBEDFAEDA38B7F797B98D57171B8280A049756FCF3BF0DB59AB83474910E7F45
	D2A154DBAF600A8C9C84BCF19AC58AA09EDF2A7368886FEFF78FAAD7738E7566
	E2663B8C0E00B845B4034028A21DE0915F85D9ED889E639DE94BFFF33E2D4FD5
	A317668D9A9DB9B483EAF958D9FEF4FBD543FC2DF57A0E51E7A4F76A0F544F86
	308F66625E86680818DA13E75AD962D2A3E9AF80F5989C4B64CEA59E2483EC90
	FF72BBF4768E9B06C52F4F8CABD44ADD78FFCB6766FBF44DF91B9BEE95BD212D
	FAE943AB27F0904505E8DDE48EB5A75CDF1CB3CB5BBFDC727957B8EADA335717
	95BBBA14CDD5E9EBE99B76EFEB34457E4BB9D50F3645E0A7AA45B4815613F768
	5EF5841737AD682F737D7971EBF586F26BD05E5D44FEA16CBF3F5657B559AEB7
	F92DE23E2E5ADB87D4C4E88D01F014538AF6FCBEE9D9FA70FAF379C1B9C68ADB
	C35C5C44FEB1FC7A759F9DFCCB0BD2F38AE6B235A69EC0B7A614ED29D54FFF0E
	EB0E5DF6ABA46E20EFE4AFD7E76D88FCCEAE9FC7006E8D15B878EDDB09124D1B
	004F31AD1DF25DF6C4175AEF8ECF6FF776EDE2A6EDD96EB539568FCBE3F25703
	00BE9D00009E61EC68BF3170FDC6D0F5368ADBBDE4219BB2F6EA83D22BE51714
	83E053BFFEC2C5A6407EFBF76BF90182CB0757BE9B40C79D1E95CB52AB252A5F
	F45B2E81231429271EA148ABE993118A94138F50A4D5F44987224CD9D8D17E3D
	B0BDF0A33BAFAD0FC5E8F862347CED832EBF281F049F0FD1ABDE6C60B93BEC96
	A92FBECF8ADC5EEFF211F875DF4E007DEBD6F8362F759E72D0224939F1D04592
	E6D39FA71CB448D26AE25259A461C10EB5EA5084899BD60EF96E1A1C685FAE0F
	87F5DB715FEFD55FEC3DCFF7E85F596CFFEC96E56EF754FA77F56ACDB713302F
	691B70CA4D5BB9955A6A58CF6AEAC6A784555317AA97BE534D5DA85EFA905EB9
	59CF72E252F5D277AAA90BD54BDFA9A67ED2DF7E4F3575E3E993AA40A17AE9A1
	6AD242F5D277AAA90BD54BCC5C84686F76A0FD62977B3E6CEE8B2F5B07CB3CBB
	F3FD01B59BC45FF876827C9DB1210CC09802447B3124AECDE8F85C1EF4B56173
	C5B97337B60E96DBD3A938F7FD9E6F27008071CD7F185DD3D1F197BBDC2FCF64
	CF77E9DF3B2BFEDB51FBDF4DA0E30EC098E63F8CAED1C56AAAA16EDBFA30BBED
	3ADBFD976F5464C7FDEE6EB2F352D2D2388BED30F5041E182CDA6B279E95DA75
	CD9B9FA49EF7C66FEC8EBFDC3DB0DABFED0E5747C4D787D36E714C53E56F9E9A
	6C5E7C5BA97B1368E000188DDB8F8E2445BB9F7A16469E53E5365F876F54CF9B
	3AD77364F57ACEB1CE4C5C8411F200C099681F49DAD42DB779016050A21D2ECC
	65234C3D817B44FB78B471008C40B4034028A27D543AEE7C2B2D216D1792718A
	241DBEA57AD44C51A93845AA47CD74FB8A718A548F980FD10E93D36113B05591
	34659ABE7A3298F25B06FD434A43FFED9D8B0CFA8794C6F9DBDBD68AA713ED63
	B39E4CDF13E751F9BD0DBFBDAC67AB2267DD4A25AD8A941337FC3D3B54A94391
	649C2F6A5BAB64E82A251D4AB5FD0AA6A0F5461C3F9756153FFBC48D368FCA76
	B3F377A9E7951FD67334F57ACEB1CE4C9C5E3B008422DA9F206DF696DBBF00D0
	3BD10E37CC65F34B3D81AF1CF47D9AD4D2F9F10735A32CF9C99230CE8254FE98
	AF50CF71D4EB39C73A33717AEDC4543643002F48C7F19952FCF8FD07F2F31EC6
	3873473DFBF5F37A8EA35ECF39D69989D36B07805044FB33A5EDDF724398099A
	CBDC514FE08A68078050443B008422DA9FCC5E4A00FA25DA092E6D39B5DD781A
	A14839F108455A4D9F8C50A49C788422ADA64F4628524E3C429156D3271D8A30
	65A2FDF974DC47D0FC173E4F991E349C35F522E583265A4D5C2A8B7C2DF8B89E
	CDBFE83CE54045CEF5ACFFDB50872249F3E9CF530E5A24693571A92CD2B06087
	5A7528C2C439AF7A12D21A6546F4AB6CA47EFEAB0E3D6BD4B35F7DD57368F57A
	CEB1CE4C9C5EFB24A4B5A55C6D00E087443B008422DAE191B9EC50514FE04CB4
	4F85260F805E8876000845B44F888E3B003F27DA012014D13E2D3AEE1364845A
	BF2CE43034D10E00A188F6C9D1A701E027443B008422DA795DBF0AD59366BA15
	A91E35D3ED2B46289274F896EA513345A5E214A91E35D3ED2BC629523D623E44
	FB14D9273F82F40BA7DFB97AF29D728EB42A522A8BA47FABE7CD742ED2B06039
	65F564300FEAF3A09E0DFF84BA5645CA5A554F9AE95C64D03FA434CEDFDEB656
	3C9D68E775950D56AB66AB739186C6A952D2AD54D2A16E0D75A8528722C9385F
	D4B656C9D0554A3A946AFB154C41EB8D384693D62873A7B3B23DEAF1071C6876
	A867BF7AAFE740EAF59C639D9938BD76000845B44F57DA3A2E37939982B9CC0E
	F504443B008422DA274DCF0680B6443B008422DA012014D13E75F6C94F87116A
	FDB26CC3405E22DA351FB3369DD9379705493DE1C5E9B5CF80CECD74A479513D
	9A36F5845726DAA12979D92FB90E03091EED613ABBA9117CC18EBB7D15001DC4
	BF4A79190F01FECCF487BC602FA7F3EC3B17ECF009231449D39FEBC6CB2A1798
	792D06ADD60B9E25665A68310102B025D1CD4B7404DBF6A826ABECEA554F5E46
	B7D93797991E66E18426CA053EB1CC0FEA5586D1A5C5E8BC48313B661F0490D6
	E232D1ADD1437BA111F20116A6575E1FB405306BE75C2F59A307F55A27BFD517
	2C66C7EC8399BACAF592741F8EF3DA67E6EBCA909E5A3D80C94A0DD4BDED72E9
	3E10D17ED72C16B87325AD1EC0043DC8F592741F82689F1F6B02300BDFE67A49
	9BD6BB39477B961DF79BCD2A494B45217FBCD9EC8F59564DC274997D105A5AA7
	9BE47A49BAF7ABC54F3F2DC7CD6A737C5BAE9345AE78F13D774CB2B7F5E17458
	172FB65CC2CEBA951AC7B96EF595614EB37294D997FE9DFE6F32977A422B0F56
	DB6E6FD1CA4C7FC7E3E6D77E793A6D97D5F36BD97EB5CAB6FFAA74E8B6B84C7C
	212BAB97FEAD9ECF291E469A7DE9DFE9FF2673A92734F7789DFDC9BB3434E31D
	F2D9FBDDFDB60FDE6222CC3E08E987D99CCA96DBBBFCC46CB78F8A3DBA59BE4B
	7791FF57BDFAFE7ECC8EE9BF6C197B877CE96A0598D3AC1C65F6A57FA7FF9BCC
	A59ED04493B5B5AF697860D63F5F961DFFFECDC3E0BD7AE1ED6DB1582FD7BF7F
	AF97F57DBDDD9692E92F5BA986D5A3C2DC66E5E0B32FFDFBB8609369AE742BF2
	60FA0E1F08D3F478513FEB77326E7A89DFAEDB22328B052B55B27A14371E3ACF
	BEF4EF8382E5C7B6FAF0218AA4B7D2BFCD3F10A6A9F97A31C4945C715E3BAFAB
	8CD5F2DF863A1781D886C860B9DE599868CF8E9BF309D2ABE2382E33F284D997
	5A8DB3EAA5EF545317AA97BE534DAD85829AFDF96A16C96AB39F637B7DDCFC5A
	9515CFD29FB339162F4EC64CA33DFD94174B433E2AEB7DB13D95B68BF7E2B469
	26CAEC8357B73E545BBDA7EDF2B8AA4292BECCF448467EE2F36E71F838F3396D
	3E1DD71F4F0A17AFA4EDC20E7F66B752234B95AC1ECD69E7D548B32FFD3B9739
	389F79073F9596F9DDF2EDF3CA15C50AFFF04A17B436D35EFB72FB67B74C7DBD
	FD9D3DB7596DD4359363F601F3575C2CBBB83876F5C274CCF658FB727B3AEDDE
	769B557EA0E6F89E9F127DB6DFFC97DEDAD67A814C8CD90714523EEE8FCBF5EF
	7397BD1879B32A6E30F179E02E3F9EFDE9F3885DFEFAE7E1BBD4FD7F74D4FBDE
	87240FDE4A9F5ABD77F172FAAED566977A21EF7943F6F14EFE39F5A30B97CFCF
	9F547850D39FFB376FA7C36EBDFC627D3855EF17BAFD99B3F8718A7958A95E9A
	936167DF2C7E93B9D413FA9216F8DDD5AEF7DA3A7FDA2D97BBEA597AFC714CBE
	F6F0EA49BE5BBF7C923F3A97BDE5FE87DC7F2B7F9C9EE4C380EA9F9FBF7C51CF
	EA4931F9C5549FCF52F98B229FDFDEBFB98F905FAEB7C56F7EE9B0BE5A709826
	B30F5E542D550FEBCF91B3D9DF63B658542DC072B1783B1EBFF66DF3D7DF3FAE
	47BD3E1CD6C77CAFF866735CEEFE343E607FF121976A6FE5F559EEB6451764BD
	DD2DB3E3DF73918B7A66D9F930E272F9B6FB2FF5D4B3FD7FBBFC49253FD0782E
	32B43027BF013043CBF5211F7CF319E1F96EF552B35DD645B8EFDA057B1B1711
	5E73AF9E8BEDE9B0D8AD7EAD766FA94617454623DA0178AACB1EF4E58EEAF338
	FAC97950CF7C6B233FB4F8B441FFA21D80A7FAD9BEEA7C57FC7A775867C56EF0
	8948B9FECC8D92E0D1FECB353EE7CCEC83F8B2E3D54931778E807FBAD8122882
	FD70D8E61DE59EC2BDF6F9CBDFEBE5715F7CE8C550FE0747EAEFA917C9DEB3F4
	A05DF976AA7D097175FE3347FB71CA1AFE5CF571B174FED3CA827351551A5E40
	5AE08B81E367CBF5C7B8F1DCD538DA8B91E71F96E77DE19723CDF37EF2E56EF2
	0B5F263E0F58BFFBF9B97385EEBC5CA8D5F36AAADAB7D48A2CD7F9E3CFB77A16
	F3BE3A93EAED3DFE857BAC6A9859F9829DF590AB21DC9456F0F60B7CB65FADEA
	17B0EBDBD09F3FB6983BE4D3725377F3C56F75287253F9ED3457FD701F6EBE18
	4CF93702F42266AFFD4AB991D87653B1D3A6656B3DF650A3CECA6EB30F98A61E
	1BBD1919B9F97A89E6F29C0AADE2612E59123EF3BACD3E8097F55A27BF8D190C
	F54B0767FBEACAC1ABAB3B91575714BEBC603177C87580269CD73E887C48C6AE
	0AF1E2F1DB361F07795ABF6D6AE7661C379BF7757AFDB47EDF087700FAF112D1
	3E726FAFCCF2DDAE1C6A99BD678B5D753AC772BB4D6FECAB143F1EAB73248B33
	276F5C289982CE3A402B7AED0358AC77A7D3C7958397F9C514CEE73216D72928
	E5615EBF2A826C07A00FA2BD7FCBF5F6CE8583B37DEAB1AFD7E7332797CBE7DC
	390080C044FB78F23BFC65F9C510CB67F54B2576B8682100DC24DA4773DCEF8A
	FBFE564F016010A27D24F92D0C2EEE267CD1511FF51EFD008426DA47511E64BF
	77081E00FA23DA47707990FDC37ABDCE8E7F8B6E7BF6F798D546D7014077A27D
	70B7833D3967BB6407A03FA27D68796EE787DA8B0BCD16CE179E4B79BF38AE7E
	FD5A1D1737921F00BA70BF8DBB5208973FCEF9C134CDA59E008C43AFFD1B73C9
	4BB90E4049B43F22D701981D91F0290564F568E6CC53805726DAEFD26507608E
	EC90BF6D2E3DF8307B1A00E88B68BF6D2EFD60FD7500AE8876000845B4034028
	46600140287AED00108A68078050443B008422DA012014D10E00A18876000845
	B4034028A21D004211ED00108A68078050443B008422DA012014D10E00A18876
	000845B4034028A21D004211ED00108A68078050443B008422DA012014D10E00
	A18876000845B4034028A21D004211ED00108A68078050443B008422DA012014
	D10E00A18876000845B4034028A21D004211ED00108A68078050443B008422DA
	012014D10E00A18876000845B4034028A21D004211ED00108A68078050443B00
	8422DA012014D10E00A18876000845B4034028A21D004211ED00108A68078050
	443B008422DA012014D10E00A18876000845B4034028A21D004211ED00108A68
	078050443B008422DA012014D10E00A18876000845B4034028A21D004211ED00
	108A68078050443B008422DA012014D10E00A18876000845B4034028A21D0042
	11ED00108A68078050443B008422DA012014D10E00A18876000845B4034028A2
	1D004211ED00108A68078050443B008422DA012014D10E00A18876000845B403
	4028A21D004211ED00108A68078050443B008422DA012014D10E00A188760008
	45B4034028A21D004211ED00108A68078050443B008422DA012014D10E00A188
	76000845B4034028A21D004211ED00108A68078050443B008422DA012014D10E
	00A18876000845B4034028A21D004211ED00108A68078050443B008422DA0120
	14D10E00A18876000845B4034028A21D0002797BFB3F3E6EE2E0A246DF090000
	000049454E44AE426082
	]]>
</Picture>

</Symbol>
