<?xml version="1.0" encoding="UTF-8"?>
<Symbol IsArchivable="false" IsPlaceable="false" MainGUID="77A711C9-F118-EC4C-8E36-504F31BDB4CB" MigrationValue="Normal" Owner="1196638531" Signature="1196644685" Version="43">
<Ancestry SectVersion="1" SectionFlags="0" SubIdent="0" Template="false">
	<MainGUID>F938E33A-329D-4A36-BE3E-85E126820996</MainGUID>
	<MainGUID>103E8D2C-8230-42E1-9597-46F84CCE28C0</MainGUID>
</Ancestry>

<CalledMacros SectVersion="2" SectionFlags="0" SubIdent="0">
</CalledMacros>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_3D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_3D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_2D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
!------------------------
! Reinforcement
! 2012, Éptár Kft.
!------------------------
if isigntype=sign_type_none then end
line_type 1
pen penfont
unid=unidstart
ntrans=0
if bsimplelabel then
line2 labelcorners[1][1],labelcorners[1][2],labelcorners[2][1],labelcorners[2][2]
labelcenterx=(labelcorners[2][1]-labelcorners[1][1])/2+labelcorners[1][1]
labelcentery=(labelcorners[2][2]-labelcorners[1][2])/2+labelcorners[1][2]
if abs(labelcorners[2][1]-labelcorners[1][1])>eps then
startangle=atn((labelcorners[2][2]-labelcorners[1][2])/(labelcorners[2][1]-labelcorners[1][1]) )
else
if labelcorners[2][1]>labelcorners[1][1] then
startangle=90
else
startangle=-90
endif
endif
ntrans=2
add2 labelcenterx,labelcentery
rot2 startangle
endif
readangle=90
angleviewrot=0
qq=request( "View_Rotangle","",angleviewrot)
totalrotate=(labelangle*not(bsimplelabel)+symb_rotangle*labelmirrored+startangle) mod 360
if totalrotate<-eps then totalrotate=totalrotate+360
textrotate=180*(totalrotate>(readangle+eps*labelmirrored)&totalrotate<(readangle+180+eps*labelmirrored) )
define style "styleID" stylefont,heightfont,5,1
style "styleID"
_idl=max(stw(strid),stw( "PP" ) )*paper_to_model
_idh=0
qq=request( "Height_of_style","styleID",_h,_descent,_leading)
if qq then _idh=_h*paper_to_model
_idrad=sqr(_idh^2+_idl^2)/2
if isigntype=sign_type_rect then
_idl=_idl+_idh*0.1
_idh=_idh*1.1
_idrad=_idl/2
endif
if not(bonlysign)|bsimplelabel then
if abs(textrotate)<eps then
brot=0
ianchor=7
else
brot=1
ianchor=9
endif
define style "styleText" stylefont,heightfont,ianchor,0
style "styleText"
if not(bonlysign) then
_textl1=stw(labeltext1)*paper_to_model
_textl2=stw(labeltext2)*paper_to_model
_textl=max(_textl1,_textl2)
_spacel=stw( " " )*paper_to_model
else
_textl=0
_spacel=0
endif
_texth=0
qq=request( "Height_of_style","styleText",_h,_descent,_leading)
if qq then _texth=_h*paper_to_model
_totl=_idrad+_spacel+_textl
else
_totl=_idrad
endif
if not(bsimplelabel) then
hotspot2 0,labelpos[1][2],unid,labelpos[1][1],1+128:unid=unid+1
hotspot2 labelpos[1][1],labelpos[1][2],unid,labelpos[1][1],2:unid=unid+1
hotspot2-1,labelpos[1][2],unid,labelpos[1][1],3:unid=unid+1
hotspot2 labelpos[1][1],0,unid,labelpos[1][2],1+128:unid=unid+1
hotspot2 labelpos[1][1],labelpos[1][2],unid,labelpos[1][2],2:unid=unid+1
hotspot2 labelpos[1][1],-1,unid,labelpos[1][2],3:unid=unid+1
if isigntype=sign_type_round then
vx=labelpos[1][1]
vy=labelpos[1][2]
gosub "directionAngle"
line2 0,0,labelpos[1][1]-cos(angle)*_idrad,labelpos[1][2]-sin(angle)*_idrad
else
borderidx=0
x11=0
y11=0
x12=labelpos[1][1]
y12=labelpos[1][2]
dim p[5][2]
p[1][1]=-_idl/2
p[1][2]=-_idh/2
p[2][1]=_idl/2
p[2][2]=-_idh/2
p[3][1]=_idl/2
p[3][2]=_idh/2
p[4][1]=-_idl/2
p[4][2]=_idh/2
p[5][1]=-_idl/2
p[5][2]=-_idh/2
dim an[4][2]
an[1][1]=270
an[1][2]=_idh/2
an[2][1]=0
an[2][2]=_idl/2
an[3][1]=90
an[3][2]=_idh/2
an[4][1]=180
an[4][2]=_idl/2
for i=1 to 4
x21=labelpos[1][1]+p[i][1]*cos(labelangle)-p[i][2]*sin(labelangle)
y21=labelpos[1][2]+p[i][1]*sin(labelangle)+p[i][2]*cos(labelangle)
x22=labelpos[1][1]+p[i+1][1]*cos(labelangle)-p[i+1][2]*sin(labelangle)
y22=labelpos[1][2]+p[i+1][1]*sin(labelangle)+p[i+1][2]*cos(labelangle)
gosub "intersection_Segment_Segment"
if state=3 then
borderidx=i
i=4
endif
next i
if borderidx then
line2 0,0,labelpos[1][1]+cos(an[borderidx][1]+labelangle)*an[borderidx][2],labelpos[1][2]+sin(an[borderidx][1]+labelangle)*an[borderidx][2]
endif
endif
add2 labelpos[1][1],labelpos[1][2]
hotspot2 0,0,unid,labelangle,6:unid=unid+1
hotspot2 _totl,0,unid,labelangle,4+128:unid=unid+1
hotspot2 _totl*cos(labelangle),_totl*sin(labelangle),unid,labelangle,5:unid=unid+1
rot2 labelangle
else
add2 0,_texth*labelmirrored
hotspot2 0,simplelabelpos[1][2],unid,simplelabelpos[1][1],1+128:unid=unid+1
hotspot2 simplelabelpos[1][1],simplelabelpos[1][2],unid,simplelabelpos[1][1],2:unid=unid+1
hotspot2-1,simplelabelpos[1][2],unid,simplelabelpos[1][1],3:unid=unid+1
hotspot2 simplelabelpos[1][1],0,unid,simplelabelpos[1][2],1+128:unid=unid+1
hotspot2 simplelabelpos[1][1],simplelabelpos[1][2],unid,simplelabelpos[1][2],2:unid=unid+1
hotspot2 simplelabelpos[1][1],-1,unid,simplelabelpos[1][2],3:unid=unid+1
add2 simplelabelpos[1][1],simplelabelpos[1][2]
endif
if isigntype=sign_type_round then
if(_idrad>eps) then
circle2 0,0,_idrad
endif
else
if _idh>eps&_idl>eps then
rect2-_idl/2,-_idh/2,_idl/2,_idh/2
endif
endif
rot2 textrotate
style "styleID"
text2 0,0,strid
del 1
if _textl>eps&not(bonlysign) then
style "styleText"
add2 _idrad+_spacel,0
if glob_context>20&glob_context<30 then
rect2 0,-_texth,_textl,_texth
else
rot2 textrotate
text2 0,0,labeltext1
text2 0,-_texth,labeltext2
del 1
endif
del 1
endif
del 1+ntrans
end
"intersection_Line_Line":
v1x=x11-x12
v2x=x21-x22
v1y=y11-y12
v2y=y21-y22
llidiv=v1x*v2y-v1y*v2x
temp1=x11*y12-y11*x12
temp2=x21*y22-y21*x22
if abs(llidiv)>eps then
tempx=temp1*v2x-v1x*temp2
tempy=temp1*v2y-v1y*temp2
state=1
cx=(tempx/llidiv)
cy=(tempy/llidiv)
else
cx=0
cy=0
if abs(abs(temp1)-abs(temp2) )<eps then
state=-1
else
state=0
endif
endif
return
"intersection_Segment_Segment":
gosub "intersection_Line_Line"
if state then
state=0
if abs(x11-x12)<eps then
if(y11-eps<=cy&cy<=y12+eps)|(y11+eps>=cy&cy>=y12-eps) then state=1
else
if(x11-eps<=cx&cx<=x12+eps)|(x11+eps>=cx&cx>=x12-eps) then state=1
endif
if abs(x21-x22)<eps then
if(y21-eps<=cy&cy<=y22+eps)|(y21+eps>=cy&cy>=y22-eps) then state=state+2
else
if(x21-eps<=cx&cx<=x22+eps)|(x21+eps>=cx&cx>=x22-eps) then state=state+2
endif
if state=0 then state=-1
endif
return
"directionAngle":
if abs(vx)<eps&abs(vy)<eps then
angle=0
return
endif
if abs(vx)<eps then
if vy>0 then
angle=90
else
angle=270
endif
else
angle=atn(vy/vx)
if vx>=0 then
if angle<0 then
angle=angle+360
endif
else
angle=180+angle
endif
endif
return
]]>
</Script_2D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_1D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
!------------------------
! Reinforcement
! 2012, Éptár Kft.
!------------------------
eps=0.0001
paper_to_model=glob_scale/1000
model_to_paper=1000*glob_scale
dim stsigntype[3]
stsigntype[1]=`None Label`
stsigntype[2]=`Round Label`
stsigntype[3]=`Rectangle Label`
sign_type_none=0
sign_type_round=1
sign_type_rect=2
]]>
</Script_1D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_PR SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_PR>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_UI SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
!------------------------
! Reinforcement
! 2012, Éptár Kft.
!------------------------
xhalf=222
xside=10
ui_style 0,1
ui_infield{3} "iSignType",xside,uiy,xhalf-2*xside,24,
2,2,
3,1,
20,20,20,20,
1,stsigntype[1],sign_type_none,
2,stsigntype[2],sign_type_round,
3,stsigntype[3],sign_type_rect
ui_style 0,0
iflag=4*(isigntype=sign_type_none)
end iflag
]]>
</Script_UI>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_VL SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
!------------------------
! Reinforcement
! 2012, Éptár Kft.
!------------------------

values "signType" stsigntype
values "iSignType" sign_type_none,sign_type_round,sign_type_rect
if glob_modpar_name="signType" then
isigntype=0
for i=2 to vardim1(stsigntype)
if signtype=stsigntype[i] then
isigntype=i-1
i=vardim1(stsigntype)
endif
next i
parameters isigntype=isigntype
else
isigntype=max(min(isigntype,vardim1(stsigntype)-1),0)
parameters signtype=stsigntype[isigntype+1]
endif
dim fontnames[]
qq=request( "FONTNAMES_LIST","",fontnames)
if qq then values "styleFont" fontnames,custom
values "heightFont" range(0,)
if isigntype=sign_type_none then
hideparameter "styleFont","heightFont","penFont","bOnlySign"
lock "styleFont","heightFont","penFont","bOnlySign"
endif
]]>
</Script_VL>

<Comment SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Comment>

<ParamSection SectVersion="21" SectionFlags="0" SubIdent="0">
	<ParamSectHeader>
		<AutoHotspots>false</AutoHotspots>
		<StatBits>
			<STBit_FixSize/>
		</StatBits>
		<WDLeftFrame>0</WDLeftFrame>
		<WDRightFrame>0</WDRightFrame>
		<WDTopFrame>0</WDTopFrame>
		<WDBotFrame>0</WDBotFrame>
		<LayFlags>65535</LayFlags>
		<WDMirrorThickness>0</WDMirrorThickness>
		<WDWallInset>0</WDWallInset>
	</ParamSectHeader>
	<Parameters>
		<Length Name="A">
			<Description><![CDATA["Dimension 1"]]></Description>
			<Fix/>
			<Value>1</Value>
		</Length>
		<Length Name="B">
			<Description><![CDATA["Dimension 2"]]></Description>
			<Fix/>
			<Value>1</Value>
		</Length>
		<Length Name="ZZYZX">
			<Description><![CDATA["Height"]]></Description>
			<Fix/>
			<Value>1</Value>
		</Length>
		<Boolean Name="AC_show2DHotspotsIn3D">
			<Description><![CDATA["Show 2D Hotspots in 3D"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="ac_bottomlevel">
			<Description><![CDATA["Bottom Level"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="ac_toplevel">
			<Description><![CDATA["Top Level"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<String Name="strID">
			<Description><![CDATA[""]]></Description>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="labelText1">
			<Description><![CDATA[""]]></Description>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="labelText2">
			<Description><![CDATA[""]]></Description>
			<Value><![CDATA[""]]></Value>
		</String>

		<!-- attributes: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="attributes">
			<Description><![CDATA["2D Representation"]]></Description>
		</Title>
		<String Name="signType">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Round Label"]]></Value>
		</String>
		<Integer Name="iSignType">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="bOnlySign">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<String Name="styleFont">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Arial"]]></Value>
		</String>
		<RealNum Name="heightFont">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</RealNum>
		<PenColor Name="penFont">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</PenColor>
		<Boolean Name="bSimpleLabel">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- labels: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="labels">
			<Description><![CDATA["Data Label"]]></Description>
		</Title>
		<Length Name="simpleLabelPos">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="2">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0</AVal>
			</ArrayValues>
		</Length>
		<Length Name="labelCorners">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="2" SecondDimension="2">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0</AVal>
				<AVal Column="1" Row="2">0</AVal>
				<AVal Column="2" Row="2">0</AVal>
			</ArrayValues>
		</Length>
		<Length Name="labelPos">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="2">
				<AVal Column="1" Row="1">0.3</AVal>
				<AVal Column="2" Row="1">0.3</AVal>
			</ArrayValues>
		</Length>
		<Angle Name="labelAngle">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Integer Name="labelMirrored">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>

		<!-- data_arrays: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="data_arrays">
			<Description><![CDATA["Data Arrays"]]></Description>
		</Title>
		<Angle Name="startAngle">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Integer Name="uiY">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="unIDStart">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>10000</Value>
		</Integer>
	</Parameters>
</ParamSection>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="2" length_in_bytes="176" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D494844520000003C0000
	00140103000000EBCDCC6A00000006504C5445FF000000000041A31203000000
	0174524E530040E6D8660000004E49444154785E6DCECD0DC0200805E007E1C0
	B11BB49BB4A3308A2338929BD990289828A72FE1E78163DDE5EDCD61F6E08312
	CAE51026A883658094210ED4090BACAD18CEF53C9811119A6F6CF5035EE20F7F
	2CA636DB0000000049454E44AE426082
	]]>
</GDLPict>

</Symbol>
