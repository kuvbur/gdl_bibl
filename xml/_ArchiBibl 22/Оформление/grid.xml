<?xml version="1.0" encoding="UTF-8"?>
<Symbol IsArchivable="false" IsPlaceable="false" MainGUID="0E7237F9-02B4-4A29-AE07-A9F252708F83" MigrationValue="Normal" Owner="1196638531" Signature="1196644685" Version="43">
<Ancestry SectVersion="1" SectionFlags="0" SubIdent="0" Template="false">
	<MainGUID>F938E33A-329D-4A36-BE3E-85E126820996</MainGUID>
	<MainGUID>103E8D2C-8230-42E1-9597-46F84CCE28C0</MainGUID>
	<MainGUID>31759AEF-8A25-4BAC-A237-48E1094B43E7</MainGUID>
</Ancestry>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_3D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
text2 0,0,"Test"

if AC_ShowIn3D=0 or GLOB_CONTEXT=7 then end

documentType = ""
rrr = APPLICATION_QUERY ("Document_Feature", "view_direction", documentType)
if documentType <> "free" and GLOB_CONTEXT = 4 then end

pen AC_LinePen
material AC_GridLineMat

Marker_Diameter = GLOB_SCALE/1000*AC_MarkerSize

marker1Cx = 0
marker1Cy = 0
marker2Cx = 0
marker2Cy = 0

if cstype_3d_i = i_Rectangle then
	res_3d=4
else
	res_3d=8
endif

! ================== normalized vectors tangent to the ends

ve1x = 0.0
ve1y = 0.0
ve2x = 0.0
ve2y = 0.0

if AC_MarkerType_i = i_hexagon then
	if GLOB_CONTEXT=5 then rot2 10
endif

if AC_MarkerType_i = i_pentagon then
	if GLOB_CONTEXT=5 then rot2 90
endif


if AC_Type_i = i_Line then

	AC_HalfLength = AC_Length/2
	AC_SecHalf = AC_HalfLength - AC_Staggering - abs(AC_StaggerDist)

	addx AC_HalfLength

	ve1x = -1
	ve1y = 0
	ve2x = 1
	ve2y = 0

	stag_dist  =  AC_HalfLength - AC_SecHalf - AC_Staggering - abs(AC_StaggerDist)
	AC_StartX = -AC_SecHalf
	AC_StartY = 0
	AC_EndX = AC_SecHalf
	AC_EndY = 0

endif


if AC_Type_i = i_Arc then

	angle1 = 0
	angle2 = angle1 + AC_Angle

	AC_StartX = AC_Radius*cos(angle1)
	AC_StartY = AC_Radius*sin(angle1)

	AC_EndX = AC_Radius*cos(angle2)
	AC_EndY = AC_Radius*sin(angle2)

	AC_MidX = AC_Radius*cos((angle1+angle2)/2)
	AC_MidY = sin((angle1+angle2)/2)*AC_Radius

	ve1x = cos(angle1)
	ve1y = sin(angle1)
	veT = ve1x
	ve1x = ve1y
	ve1y = -veT


	AC_EndX = AC_Radius*cos(angle2)
	AC_EndY = sin(angle2)*AC_Radius
	ve2x = cos(angle2)
	ve2y = sin(angle2)
	veT = ve2x
	ve2x = -ve2y
	ve2y = veT

	stag_dist  =  AC_Extension - AC_Staggering - abs(AC_StaggerDist)

endif


! ================== coordinates of polyline

!! p4
p4x=AC_StartX
p4y=AC_StartY

! p3
p3x=p4x + ve1x * stag_dist
p3y=p4y + ve1y * stag_dist

! p2
p2x=p3x + ( ve1y * AC_StaggerDist) + (ve1x * abs(AC_StaggerDist))
p2y=p3y + (-ve1x * AC_StaggerDist) + (ve1y * abs(AC_StaggerDist))

! p1
p1x=p2x + (ve1x * AC_Staggering)
p1y=p2y + (ve1y * AC_Staggering)

! p0
p0x=p1x + (ve1x * Marker_Diameter/2)
p0y=p1y + (ve1y * Marker_Diameter/2)


! p5
p5x=AC_EndX
p5y=AC_EndY

! p6
p6x=p5x + ve2x * stag_dist
p6y=p5y + ve2y * stag_dist

! p7
p7x=p6x + (-ve2y * AC_StaggerDist) + (ve2x * abs(AC_StaggerDist))
p7y=p6y + ( ve2x * AC_StaggerDist) + (ve2y * abs(AC_StaggerDist))

! p8
p8x=p7x + (ve2x * AC_Staggering)
p8y=p7y + (ve2y * AC_Staggering)

! p9
p9x=p8x + (ve2x * Marker_Diameter/2)
p9y=p8y + (ve2y * Marker_Diameter/2)


if AC_Type_i = i_Arc then
	if AC_MarkerStart=0 then
		p2x=p3x
		p1x=p3x
		p1y=p2y
		p0x=p3x
	endif
	if AC_MarkerEnd=0 then
		p7x=p6x + ve2x*AC_StaggerDist
		p7y=p6y + ve2y*AC_StaggerDist
		p8x=p7x
		p8y=p7y
		p9x=p7x + ve2x*AC_Staggering
		p9y=p7y + ve2y*AC_Staggering
	endif
else
	if AC_MarkerStart=0 then
		p2y=p3y
		p1y=p3y
		p0y=p3y
	endif
	if AC_MarkerEnd=0 then
		p7y=p6y
		p8y=p6y
		p9y=p6y
	endif
endif

lineUnID=1000
hotline p1x, p1y, 0, p2x, p2y, 0, lineUnID : lineUnID=lineUnID+1
hotline  p2x, p2y, 0, p3x, p3y, 0, lineUnID : lineUnID=lineUnID+1

if line_3d=0 then		! ********** NOT ONLY LINES IN 3D ***************

!  ********** Cross-section points of polyline

	alfa_t=360/res_3d

	for i=1 to res_3d
		PUT (line_diameter_3d/2)*cos(alfa_t*i), (line_diameter_3d/2)*sin(alfa_t*i), 1
	next i

	if AC_Type_i = i_Line then

		if AC_LineVisibility_i = i_Full then
			tube (nsp)/3, 8, 0,
				  GET (nsp),

					p0x, p0y, 0, 0,
					p1x, p1y, 0, 0,
					p2x, p2y, 0, 0,
					p3x, p3y, 0, 0,
					p6x, p6y, 0, 0,
					p7x, p7y, 0, 0,
					p8x, p8y, 0, 0,
					p9x, p9y, 0, 0

			hotline p3x, p3y, 0, p6x, p6y, 0, lineUnID : lineUnID=lineUnID+1

		endif

		if AC_LineVisibility_i = i_Short then
			tube (nsp)/3, 6, 0,
				  USE (nsp),

					p0x, p0y, 0, 0,
					p1x, p1y, 0, 0,
					p2x, p2y, 0, 0,
					p3x, p3y, 0, 0,
					-AC_SecHalf + AC_VisLength, 0, 0, 0,
					 AC_SecHalf-AC_VisLength, 0, 0, 0

			tube (nsp)/3, 6, 0,
				  GET (nsp),

					-AC_SecHalf + AC_VisLength, 0, 0, 0,
					 AC_SecHalf-AC_VisLength, 0, 0, 0,
					p6x, p6y, 0, 0,
					p7x, p7y, 0, 0,
					p8x, p8y, 0, 0,
					p9x, p9y, 0, 0

			hotline p3x, p3y, 0, -AC_SecHalf + AC_VisLength, 0, 0, lineUnID : lineUnID=lineUnID+1
			hotline AC_SecHalf-AC_VisLength, 0, 0, p6x, p6y, 0, lineUnID : lineUnID=lineUnID+1

		endif

		if AC_LineVisibility_i = i_Hidden then
			tube (nsp)/3, 5, 0,
				  USE (nsp),

					p0x, p0y, 0, 0,
					p1x, p1y, 0, 0,
					p2x, p2y, 0, 0,
					p3x, p3y, 0, 0,
					-AC_SecHalf + 1, 0, 0, 0

			tube (nsp)/3, 5, 0,
				  GET (nsp),

					 AC_SecHalf - 1, 0, 0, 0,
					p6x, p6y, 0, 0,
					p7x, p7y, 0, 0,
					p8x, p8y, 0, 0,
					p9x, p9y, 0, 0

			hotline p3x, p3y, 0, -AC_SecHalf + 1, 0, 0, lineUnID : lineUnID=lineUnID+1
			hotline AC_SecHalf - 1, 0, 0, p6x, p6y, 0, lineUnID : lineUnID=lineUnID+1

		endif
	endif

	if AC_Type_i = i_Arc then

	! ========== 3D arc-points =========[

		alfa_a=AC_Angle/res_arc_3D

		for arcp=1 to res_arc_3D-1
			PUT (AC_Radius)*cos(alfa_a*arcp), (AC_Radius)*sin(alfa_a*arcp), 0, 0
		next arcp

	! ]========= 3D arc-points ==========

		if AC_LineVisibility_i = i_Short then

			lenAlfa = (AC_VisLength * 180) / (AC_Radius * PI)

			p44x=AC_Radius*cos(angle1+lenAlfa)
			p44y=AC_Radius*sin(angle1+lenAlfa)

			p55x=AC_Radius*cos(angle2-lenAlfa)
			p55y=AC_Radius*sin(angle2-lenAlfa)

			cutpolya 6, 2, 0,
				0, 0, 15,
				p44x, p44y, 15,
				2*p44x, 2*p44y, 15,
				0, 2*AC_Radius, 15,
				2*p55x, 2*p55y, 15,
				p55x, p55y, 15

		endif

		if AC_LineVisibility_i = i_Hidden then
			cutpolya 6, 2, 0,
				0, 0, 15,
				p4x, p4y, 15,
				2*p4x, 2*p4y, 15,
				0, 2*AC_Radius, 15,
				2*p5x, 2*p5y, 15,
				p5x, p5y, 15
		endif


		tube res_3d, 10+res_arc_3D-1, 16,
			   GET (res_3d*3),

				p0x, p0y, 0, 0,
				p1x, p1y, 0, 0,
				p2x, p2y, 0, 0,
				p3x, p3y, 0, 0,
				p4x, p4y, 0, 0,

				GET ((res_arc_3D-1)*4),

				p5x, p5y, 0, 0,
				p6x, p6y, 0, 0,
				p7x, p7y, 0, 0,
				p8x, p8y, 0, 0,
				p9x, p9y, 0, 0


		if AC_LineVisibility_i = i_Short then cutend
		if AC_LineVisibility_i = i_Hidden then cutend


		!!************

		unID=100

		hotspot 0, 0, 0, unID, AC_Radius, 1+128
		unID=unID+1

		hotspot 0, 0, 0, unID, AC_Radius, 3
		unID=unID+1

		hotspot AC_MidX , AC_MidY, 0, unID, AC_Radius, 2
		unID=unID+1

		!!************

		hotspot AC_StartX, AC_StartY, 0, unID, AC_Angle, 4+256
		unID=unID+1

		hotspot 0, 0, 0, unID, AC_Angle, 6
		unID=unID+1

		hotspot AC_MidX , AC_MidY, 0, unID, AC_Angle, 7
		unID=unID+1

		hotspot AC_EndX , AC_EndY, 0, unID, AC_Angle, 5
		unID=unID+1

	endif

endif								! NOT ONLY LINES IN 3D

! ===========================================================
! Cross-section points of polyline if line_3d is ON
! ===========================================================

if line_3d=1 then					! ONLY LINES IN 3D

	if AC_Type_i = i_Line then

		if AC_LineVisibility_i = i_Full then

			lin_ p1x, p1y, 0, p2x, p2y, 0
			lin_ p2x, p2y, 0, p3x, p3y, 0

			lin_ p3x, p3y, 0, p6x, p6y, 0
			hotline p3x, p3y, 0, p6x, p6y, 0, lineUnID : lineUnID=lineUnID+1

			lin_ p6x, p6y, 0, p7x, p7y, 0
			lin_ p7x, p7y, 0, p8x, p8y, 0
		endif

		if AC_LineVisibility_i = i_Short then

			lin_ p1x, p1y, 0, p2x, p2y, 0
			lin_ p2x, p2y, 0, p3x, p3y, 0

			lin_ p3x, p3y, 0, -AC_SecHalf + AC_VisLength, 0, 0
			hotline p3x, p3y, 0, -AC_SecHalf + AC_VisLength, 0, 0, lineUnID : lineUnID=lineUnID+1

			lin_ AC_SecHalf-AC_VisLength, 0, 0, p6x, p6y, 0
			hotline AC_SecHalf-AC_VisLength, 0, 0, p6x, p6y, 0, lineUnID : lineUnID=lineUnID+1

			lin_ p6x, p6y, 0, p7x, p7y, 0
			lin_ p7x, p7y, 0, p8x, p8y, 0
		endif

		if AC_LineVisibility_i = i_Hidden then

			lin_ p1x, p1y, 0, p2x, p2y, 0
			lin_ p2x, p2y, 0, p3x, p3y, 0

			lin_ p6x, p6y, 0, p7x, p7y, 0
			lin_ p7x, p7y, 0, p8x, p8y, 0
		endif
	endif

	if AC_Type_i = i_Arc then

		! ========== 3D arc-points =========[

		alfa_a=AC_Angle/res_arc_3D

		for arcp=1 to res_arc_3D
			PUT (AC_Radius)*cos(alfa_a*(arcp-1)), (AC_Radius)*sin(alfa_a*(arcp-1)), 0
			PUT (AC_Radius)*cos(alfa_a*arcp), (AC_Radius)*sin(alfa_a*arcp), 0
		next arcp

		! ]========= 3D arc-points ==========


		if AC_LineVisibility_i = i_Short then

			lenAlfa = (AC_VisLength * 180) / (AC_Radius * PI)

			p44x=AC_Radius*cos(angle1+lenAlfa)
			p44y=AC_Radius*sin(angle1+lenAlfa)

			p55x=AC_Radius*cos(angle2-lenAlfa)
			p55y=AC_Radius*sin(angle2-lenAlfa)

			cutpolya 6, 2, 0,
				0, 0, 15,
				p44x, p44y, 15,
				2*p44x, 2*p44y, 15,
				0, 2*AC_Radius, 15,
				2*p55x, 2*p55y, 15,
				p55x, p55y, 15

		endif

		if AC_LineVisibility_i = i_Hidden then

			cutpolya 6, 2, 0,
				0, 0, 15,
				p4x, p4y, 15,
				2*p4x, 2*p4y, 15,
				0, 2*AC_Radius, 15,
				2*p5x, 2*p5y, 15,
				p5x, p5y, 15

		endif

		lin_ p1x, p1y, 0, p2x, p2y, 0
		lin_ p2x, p2y, 0, p3x, p3y, 0
		lin_ p3x, p3y, 0, p4x, p4y, 0
		hotline p3x, p3y, 0, p4x, p4y, 0, lineUnID : lineUnID=lineUnID+1

		for arcp=1 to res_arc_3D
			lin_ GET (6)
		next arcp

		lin_ p5x, p5y, 0, p6x, p6y, 0
		hotline p5x, p5y, 0, p6x, p6y, 0, lineUnID : lineUnID=lineUnID+1

		lin_ p6x, p6y, 0, p7x, p7y, 0
		lin_ p7x, p7y, 0, p8x, p8y, 0

		if AC_LineVisibility_i = i_Short then cutend
		if AC_LineVisibility_i = i_Hidden then cutend


		!!************

		unID=100

		hotspot 0, 0, 0, unID, AC_Radius, 1+128
		unID=unID+1

		hotspot 0, 0, 0, unID, AC_Radius, 3
		unID=unID+1

		hotspot AC_MidX , AC_MidY, 0, unID, AC_Radius, 2
		unID=unID+1

		!!************

		hotspot AC_StartX, AC_StartY, 0, unID, AC_Angle, 4+256
		unID=unID+1

		hotspot 0, 0, 0, unID, AC_Angle, 6
		unID=unID+1

		hotspot AC_MidX , AC_MidY, 0, unID, AC_Angle, 7
		unID=unID+1

		hotspot AC_EndX , AC_EndY, 0, unID, AC_Angle, 5
		unID=unID+1

		!!************
	endif
endif									! ONLY LINES IN 3D

hotline p6x, p6y, 0, p7x, p7y, 0, lineUnID : lineUnID=lineUnID+1
hotline p7x, p7y, 0, p8x, p8y, 0, lineUnID : lineUnID=lineUnID+1

! ==========================================================
! Hotspots
! ==========================================================

! ======== Staggering length hotspots ========[
unID = 1

hotspot p1x, p1y, 0, unID, AC_Staggering, 1+128
unID=unID+1

hotspot p1x, p1y, 0, unID, AC_Staggering, 3
unID=unID+1

hotspot p2x, p2y, 0, unID, AC_Staggering, 2
unID=unID+1


hotspot p8x, p8y, 0, unID, AC_Staggering, 1+128
unID=unID+1

hotspot p8x, p8y, 0, unID, AC_Staggering, 3
unID=unID+1

hotspot p7x, p7y, 0, unID, AC_Staggering, 2
unID=unID+1

! ]======= Staggering length hotspots =========

! ======== Staggering distance hotspots =======[

hotspot p3x+(ve1x * abs(AC_StaggerDist)), p3y+(ve1y * abs(AC_StaggerDist)), 0, unID, AC_StaggerDist, 1+128
unID=unID+1

hotspot p3x+(ve1x * abs(AC_StaggerDist)), p3y+(ve1y * abs(AC_StaggerDist)), 0, unID, AC_StaggerDist, 3
unID=unID+1

hotspot p2x, p2y, 0, unID, AC_StaggerDist, 2
unID=unID+1


hotspot p6x+(ve2x * abs(AC_StaggerDist)), p6y+(ve2y * abs(AC_StaggerDist)), 0, unID, AC_StaggerDist, 1+128
unID=unID+1

hotspot p6x+(ve2x * abs(AC_StaggerDist)), p6y+(ve2y * abs(AC_StaggerDist)), 0, unID, AC_StaggerDist, 3
unID=unID+1

hotspot p7x, p7y, 0, unID, AC_StaggerDist, 2
unID=unID+1


if AC_Type_i = i_Line then

	hotspot p1x, p1y, 0, unID, AC_Length, 1+256
	unID=unID+1

	hotspot p8x, p8y, 0, unID, AC_Length, 2
	unID=unID+1

else

	hotspot p1x-(ve1x*AC_Extension), p1y-(ve1y*AC_Extension), 0, unID, AC_Extension, 1+128
	unID=unID+1

	hotspot p1x-(ve1x*AC_Extension), p1y-(ve1y*AC_Extension), 0, unID, AC_Extension, 3
	unID=unID+1

	hotspot p1x, p1y, 0, unID, AC_Extension, 2
	unID=unID+1


	hotspot p8x-(ve2x*AC_Extension), p8y-(ve2y*AC_Extension), 0, unID, AC_Extension, 1+128
	unID=unID+1

	hotspot p8x-(ve2x*AC_Extension), p8y-(ve2y*AC_Extension), 0, unID, AC_Extension, 3
	unID=unID+1

	hotspot p8x, p8y, 0, unID, AC_Extension, 2
	unID=unID+1

endif

! ]======= Staggering distance hotspots ========

hotspot p3x+(ve1x * abs(AC_StaggerDist))+(ve1x * abs(AC_Staggering)),
		p3y+(ve1y * abs(AC_StaggerDist))+(ve1y * abs(AC_Staggering)),
		 0, unID, AC_StaggerDist, 1+128
unID=unID+1

hotspot p3x+(ve1x * abs(AC_StaggerDist))+(ve1x * abs(AC_Staggering)),
		p3y+(ve1y * abs(AC_StaggerDist))+(ve1y * abs(AC_Staggering)),
		 0, unID, AC_StaggerDist, 3
unID=unID+1

hotspot p1x, p1y, 0, unID, AC_StaggerDist, 2
unID=unID+1



hotspot p6x+(ve2x * abs(AC_StaggerDist))+(ve2x * abs(AC_Staggering)),
		p6y+(ve2y * abs(AC_StaggerDist))+(ve2y * abs(AC_Staggering)),
		 0, unID, AC_StaggerDist, 1+128
unID=unID+1

hotspot p6x+(ve2x * abs(AC_StaggerDist))+(ve2x * abs(AC_Staggering)),
		p6y+(ve2y * abs(AC_StaggerDist))+(ve2y * abs(AC_Staggering)),
		 0, unID, AC_StaggerDist, 3
unID=unID+1

hotspot p8x, p8y, 0, unID, AC_StaggerDist, 2
unID=unID+1


! ==============================================================================
! MARKER STYLE
! ==============================================================================

DEFINE STYLE "markertext_style" AC_TextFont_1, AC_TextSize_1*GLOB_SCALE, 5, AC_TextStyle_1
SET STYLE "markertext_style"
pen AC_MarkerPen


if line_3d=0 then											! NOT ONLY LINES IN 3D

	if (AC_MarkerStart = 1) then

		! =========== Cross-section points of polyline if line_3d is OFF ============[

		alfa_t=360/res_3d

		for i=1 to res_3d
			PUT (line_diameter_3d/2)*cos(alfa_t*i), (line_diameter_3d/2)*sin(alfa_t*i), 1
		next i

		! ]========== Cross-section points of polyline if line_3d is OFF =============

		ADD p0x , p0y, 0

		! =========== Marker polyline-points ============[

		alfa_m=360/res_mark
		dy=Marker_Diameter/2-Marker_Diameter/2*cos(alfa_m/2)

		for m=0 to res_mark+2
			PUT (Marker_Diameter/2)*cos(alfa_m*m), (Marker_Diameter/2)*sin(alfa_m*m), 0, 0
		next m

		! ]========== Marker polyline-points =============

		if AC_Type_i = i_Arc then rotz 90
		if AC_MarkerRot=1 then
			add dy, 0, 0
			rotz alfa_m/2
		endif
		tube res_3d, res_mark+3, 16,
			GET (NSP)

		if AC_MarkerRot=1 then del 2
		if AC_Type_i = i_Arc then del 1

	!	hotspot 0 , 0 , 0

		pen AC_TextPen_1
		material AC_TextMat

		addz -line_diameter_3d/2
		if AC_MarkerRot=1 then add dy*sgn(AC_Type_i = i_Line), dy*sgn(AC_Type_i = i_Arc), 0
		ROTz -SYMB_ROTANGLE * NOT(SYMB_MIRRORED)+SYMB_ROTANGLE * SYMB_MIRRORED
		if AC_TextFollowsView then gosub 100
		MULx 1-2*SYMB_MIRRORED
		text line_diameter_3d, 0, AC_MarkerText_1
		del 1
		if AC_TextFollowsView then del 1
		del 2

		if AC_MarkerRot=1 then del 1

		del 1

	endif

	material AC_GridLineMat
	pen AC_MarkerPen

	if (AC_MarkerEnd = 1) then

		! ========= Cross-section points of polyline ========[

		alfa_t=360/res_3d

		for i=1 to res_3d
			PUT (line_diameter_3d/2)*cos(alfa_t*i), (line_diameter_3d/2)*sin(alfa_t*i), 1
		next i

		! ]======== Cross-section points of polyline =========

		ADD p9x , p9y, 0

		! ========= Marker polyline-points =========[

		alfa_m=360/res_mark
		dy=Marker_Diameter/2-Marker_Diameter/2*cos(alfa_m/2)

		for m=0 to res_mark+2
			PUT (Marker_Diameter/2)*cos(alfa_m*m), (Marker_Diameter/2)*sin(alfa_m*m), 0, 0
		next m

		! ]======= Marker polyline-points ==========

		if AC_Type_i = i_Arc then rotz AC_Angle+90
		if AC_MarkerRot=1 then
			add -dy, 0, 0
			rotz alfa_m/2
		endif
		rotz 180
		tube res_3d, res_mark+3, 16,
			GET (NSP)
		del 1
		if AC_MarkerRot=1 then del 2
		if AC_Type_i = i_Arc then del 1

	!	hotspot 0 , 0 , 0

		pen AC_TextPen_1
		material AC_TextMat

		addz -line_diameter_3d/2
		if AC_MarkerRot=1 then add -dy*sgn(AC_Type_i = i_Line) +dy*sin(AC_Angle)*sgn(AC_Type_i = i_Arc), -dy*cos(AC_Angle)*sgn(AC_Type_i = i_Arc), 0
		ROTz -SYMB_ROTANGLE * NOT(SYMB_MIRRORED)+SYMB_ROTANGLE * SYMB_MIRRORED
		if AC_TextFollowsView then gosub 100
		MULx 1-2*SYMB_MIRRORED
		text line_diameter_3d, 0, AC_MarkerText_1
		del 1
		if AC_TextFollowsView then del 1
		del 2

		if AC_MarkerRot=1 then del 1

		del 1

	endif

endif										! NOT ONLY LINES IN 3D


if line_3d=1 then							! ONLY LINES IN 3D

	if (AC_MarkerStart = 1) then

		ADD p0x , p0y, 0

		! ========= Marker polyline-points =========[

		alfa_m=360/res_mark
		dy=Marker_Diameter/2-Marker_Diameter/2*cos(alfa_m/2)

		for m=0 to res_mark+2
			PUT (Marker_Diameter/2)*cos(alfa_m*m), (Marker_Diameter/2)*sin(alfa_m*m), 0
			PUT (Marker_Diameter/2)*cos(alfa_m*(m+1)), (Marker_Diameter/2)*sin(alfa_m*(m+1)), 0
		next m

		! ]======= Marker polyline-points ==========

		if AC_Type_i = i_Arc then rotz 90
		if AC_MarkerRot=1 then
			add dy, 0, 0
			rotz alfa_m/2
		endif

		for m=0 to res_mark+2
			lin_ GET (6)
		next m

		if AC_MarkerRot=1 then del 2
		if AC_Type_i = i_Arc then del 1

		pen AC_TextPen_1
		material AC_TextMat

		addz 0
		if AC_MarkerRot=1 then add dy*sgn(AC_Type_i = i_Line), dy*sgn(AC_Type_i = i_Arc), 0
		ROTz -SYMB_ROTANGLE * NOT(SYMB_MIRRORED)+SYMB_ROTANGLE * SYMB_MIRRORED
		if AC_TextFollowsView then gosub 100
		MULx 1-2*SYMB_MIRRORED
		text 0.00001, 0, AC_MarkerText_1
		del 1
		if AC_TextFollowsView then del 1
		del 2

		if AC_MarkerRot=1 then del 1

		del 1

	endif


	pen AC_MarkerPen
	material AC_GridLineMat

	if (AC_MarkerEnd = 1) then

		ADD p9x , p9y, 0

		! ========= Marker polyline-points =========[

		alfa_m=360/res_mark
		dy=Marker_Diameter/2-Marker_Diameter/2*cos(alfa_m/2)

		for m=0 to res_mark+2
			PUT (Marker_Diameter/2)*cos(alfa_m*m), (Marker_Diameter/2)*sin(alfa_m*m), 0
			PUT (Marker_Diameter/2)*cos(alfa_m*(m+1)), (Marker_Diameter/2)*sin(alfa_m*(m+1)), 0
		next m

		! ]======== Marker polyline-points ==========

		if AC_Type_i = i_Arc then rotz AC_Angle+90
		if AC_MarkerRot=1 then
			add -dy, 0, 0
			rotz alfa_m/2
		endif
		rotz 180

		for m=0 to res_mark+2
			lin_ GET (6)
		next m

		del 1
		if AC_MarkerRot=1 then del 2
		if AC_Type_i = i_Arc then del 1

		pen AC_TextPen_1
		material AC_TextMat

		addz 0
		if AC_MarkerRot=1 then add -dy*sgn(AC_Type_i = i_Line) +dy*sin(AC_Angle)*sgn(AC_Type_i = i_Arc), -dy*cos(AC_Angle)*sgn(AC_Type_i = i_Arc), 0
		ROTz -SYMB_ROTANGLE * NOT(SYMB_MIRRORED)+SYMB_ROTANGLE * SYMB_MIRRORED
		if AC_TextFollowsView then gosub 100
		MULx 1-2*SYMB_MIRRORED
		text 0.00001, 0, AC_MarkerText_1
		del 1
		if AC_TextFollowsView then del 1
		del 2

		if AC_MarkerRot=1 then del 1

		del 1

	endif

endif												! ONLY LINES IN 3D

END


! ===================================================================
! Subroutines
! ===================================================================

100:				! ROTATING 3D TEXT

dx= GLOB_EYEPOS_X - GLOB_TARGPOS_X
dy= GLOB_EYEPOS_Y - GLOB_TARGPOS_Y

textFollowsViewAng = 0

if abs(GLOB_EYEPOS_X-GLOB_TARGPOS_X)<EPS then
	if GLOB_EYEPOS_Y > GLOB_TARGPOS_Y then
		textFollowsViewAng = textFollowsViewAng + 180
	endif
else
	alf=atn(abs(dy/dx))

	if dx<0 and dy>0 then textFollowsViewAng = textFollowsViewAng + (180-alf)
	if dx<0 and dy<0 then textFollowsViewAng = textFollowsViewAng + (180+alf)
	if dx>0 and dy<0 then textFollowsViewAng = textFollowsViewAng + (-alf)
	if dx>0 and dy>0 then textFollowsViewAng = textFollowsViewAng + (alf)

	textFollowsViewAng = textFollowsViewAng + 90
endif

rotz textFollowsViewAng * NOT(SYMB_MIRRORED) - textFollowsViewAng * SYMB_MIRRORED

return
]]>
</Script_3D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_2D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
text2 0,0,"Test"

! ===== Story visibility =====

n = REQUEST ("Home_story", "", home_s_index, homes_story_name)
n = REQUEST ("Story", "", current_s_index, current_story_name)

if AC_StoryVisibility_i = i_Current then
	if home_s_index <> current_s_index then end
else
	if AC_StoryVisibility_i = i_Selected then
		was = 0
		for i = 1 to AC_StoryNum
			if AC_Stories[i] = current_s_index then
				was = 1
			endif
		next i
		if was = 0 then	end
	endif
endif


hLineID = 1000
hArcID	= 2000

! --- Oriented View ------------------------------[

rrr = REQUEST ("View_Rotangle", "", angleViewRot)
totalRotate = (SYMB_ROTANGLE + angleViewRot)
if totalRotate > 360 then totalRotate = totalRotate - 360

! --- Oriented View ------------------------------]

Marker_Diameter = GLOB_SCALE/1000*AC_MarkerSize

marker1Cx = 0
marker1Cy = 0
marker2Cx = 0
marker2Cy = 0

! ========= hotline2 and hotarc2 ID-s =========

hLineID = 1000
hArcID	= 2000

! ========= normalized vectors tangent to the ends =========

ve1x = 0.0
ve1y = 0.0
ve2x = 0.0
ve2y = 0.0

!AC_Extension = (AC_FullLength - AC_Length) / 2

AC_HalfLength = AC_Length/2

AC_SecHalf = AC_HalfLength - AC_Staggering - abs(AC_StaggerDist)

SET LINE_TYPE AC_LineType

pen AC_LinePen

if AC_Type_i = i_Line then

	add2 AC_HalfLength, 0

	if GLOB_CONTEXT<>30 then
		HOTLINE2 -AC_SecHalf, 0, AC_SecHalf, 0, hLineID : hLineID = hLineID + 1
		if AC_LineVisibility_i = i_Full then
			line2 -AC_SecHalf, 0, AC_SecHalf, 0
		else
			if AC_LineVisibility_i = i_Short then
				line2 -AC_SecHalf, 0, -AC_SecHalf + AC_VisLength, 0
				line2 AC_SecHalf-AC_VisLength, 0, AC_SecHalf, 0
			endif
		endif
	else
		hLineID = hLineID + 1
	endif

	ve1x = -1
	ve1y = 0
	ve2x = 1
	ve2y = 0

	stag_dist  =  AC_HalfLength - AC_SecHalf - AC_Staggering - abs(AC_StaggerDist)
	if AC_MarkerStart=1 then
		stag_dist1 = stag_dist
	else
		stag_dist1 = AC_HalfLength - AC_SecHalf
	endif
	if AC_MarkerEnd=1 then
		stag_dist2 = stag_dist
	else
		stag_dist2 = AC_HalfLength - AC_SecHalf
	endif

	AC_StartX = -AC_SecHalf
	AC_StartY = 0
	AC_EndX = AC_SecHalf
	AC_EndY = 0

else
	add2 0, 0

	angle1 = 0

	angle2 = angle1 + AC_Angle

	if GLOB_CONTEXT<>30 then
		if AC_LineVisibility_i = i_Full then
			hotarc2 0, 0, AC_Radius, angle1 , angle2, hArcID : hArcID = hArcID + 1
			arc2 0, 0, AC_Radius, angle1 , angle2
		else
			hArcID = hArcID + 1
			if AC_LineVisibility_i = i_Short then
				lenAlfa = (AC_VisLength * 180) / (AC_Radius * PI)
				hotarc2 0, 0, AC_Radius, angle1 , angle1 + lenAlfa, hArcID : hArcID = hArcID + 1
				hotarc2  0, 0, AC_Radius, angle2-lenAlfa , angle2, hArcID : hArcID = hArcID + 1
				arc2 0, 0, AC_Radius, angle1 , angle1 + lenAlfa
				arc2 0, 0, AC_Radius, angle2-lenAlfa , angle2
			endif
		endif
	else
		hArcID = hArcID + 3
	endif

	AC_StartX = AC_Radius*cos(angle1)
	AC_StartY = AC_Radius*sin(angle1)

	AC_EndX = AC_Radius*cos(angle2)
	AC_EndY = AC_Radius*sin(angle2)

	AC_MidX = AC_Radius*cos((angle1+angle2)/2)
	AC_MidY = sin((angle1+angle2)/2)*AC_Radius

	ve1x = cos(angle1)
	ve1y = sin(angle1)
	veT = ve1x
	ve1x = ve1y
	ve1y = -veT

	AC_EndX = AC_Radius*cos(angle2)
	AC_EndY = sin(angle2)*AC_Radius
	ve2x = cos(angle2)
	ve2y = sin(angle2)
	veT = ve2x
	ve2x = -ve2y
	ve2y = veT

	stag_dist  =  AC_Extension - AC_Staggering - abs(AC_StaggerDist)
	if AC_MarkerStart=1 then
		stag_dist1 = stag_dist
	else
		stag_dist1 = AC_Extension - AC_Staggering
	endif
	if AC_MarkerEnd=1 then
		stag_dist2 = stag_dist
	else
		stag_dist2 = AC_Extension - AC_Staggering
	endif

endif

!SET LINE_TYPE 1

! ========== Staggering start lines ==========

marker1Cx = AC_StartX + ve1x * stag_dist1
marker1Cy = AC_StartY + ve1y * stag_dist1

if GLOB_CONTEXT<>30 then
	line2 AC_StartX, AC_StartY, marker1Cx , marker1Cy
	hotline2 AC_StartX, AC_StartY, marker1Cx , marker1Cy, hLineID : hLineID = hLineID + 1
else
	hLineID = hLineID + 1
endif

mex = marker1Cx
mey = marker1Cy

! ========== line end hotspot ==========

hot5x = mex
hot5y = mey

ax = mex + (ve1x * abs(AC_StaggerDist))
ay = mey + (ve1y * abs(AC_StaggerDist))

marker1Cx = mex + (ve1y * AC_StaggerDist) + (ve1x * abs(AC_StaggerDist))
marker1Cy = mey + (-ve1x * AC_StaggerDist) + (ve1y * abs(AC_StaggerDist))

if GLOB_CONTEXT<>30 and AC_MarkerStart=1 then
	line2 mex, mey, marker1Cx, marker1Cy
	hotline2 mex, mey, marker1Cx, marker1Cy, hLineID : hLineID = hLineID + 1
else
	hLineID = hLineID + 1
endif

mex = marker1Cx
mey = marker1Cy
marker1Cx = mex + (ve1x * AC_Staggering)
marker1Cy = mey + (ve1y * AC_Staggering)

if GLOB_CONTEXT<>30 and AC_MarkerStart=1 then
	line2 mex, mey, marker1Cx, marker1Cy
	hotline2 mex, mey, marker1Cx, marker1Cy, hLineID : hLineID = hLineID + 1
else
	hLineID = hLineID + 1
endif

!!for marker preview only
if GLOB_CONTEXT = 30 then
	line2 marker1Cx, marker1Cy, marker1Cx + 0.1, marker1Cy
	hotline2 marker1Cx, marker1Cy, marker1Cx + 0.1, marker1Cy, hLineID : hLineID = hLineID + 1

	markerSize = Marker_Diameter		! circle
	if AC_MarkerType_i = i_square then
		if AC_MarkerRot then
			markerSize = Marker_Diameter / sqr(2)
		else
			markerSize = Marker_Diameter
		endif
	endif
	if AC_MarkerType_i = i_pentagon then
		markerSize = Marker_Diameter / 2 * (1 + cos(36))
	endif
	if AC_MarkerType_i = i_hexagon then
		if AC_MarkerRot then
			markerSize = Marker_Diameter * cos(30)
		else
			markerSize = Marker_Diameter
		endif
	endif

	sss = request("Pen_of_RGB", "1 1 1", whitePen)
	if sss then pen whitePen
	line2 marker1Cx - markerSize, marker1Cy, marker1Cx - markerSize - 0.1, marker1Cy
	pen AC_LinePen
else
	hLineID = hLineID + 1
endif

hot4x = ax
hot4y = ay
hot3x = mex
hot3y = mey
hot1x = marker1Cx
hot1y = marker1Cy

mex = marker1Cx
mey = marker1Cy

ax = ax + (ve1x * abs(AC_Staggering))
ay = ay + (ve1y * abs(AC_Staggering))

hot2x = ax
hot2y = ay
marker1Cx = mex + (ve1x * Marker_Diameter/2)
marker1Cy = mey + (ve1y * Marker_Diameter/2)

! ========== Staggering end lines ==========

marker2Cx = AC_EndX + ve2x * stag_dist2
marker2Cy = AC_EndY + ve2y * stag_dist2

if GLOB_CONTEXT<>30 then
	line2 AC_EndX, AC_EndY, marker2Cx , marker2Cy
	hotline2 AC_EndX, AC_EndY, marker2Cx , marker2Cy, hLineID : hLineID = hLineID + 1
else
	hLineID = hLineID + 1
endif

mex = marker2Cx
mey = marker2Cy

! ========== line end hotspot ==========

	hot6x = mex
	hot6y = mey

	ax = mex + (ve2x * abs(AC_StaggerDist))
	ay = mey + (ve2y * abs(AC_StaggerDist))

	marker2Cx = mex + (-ve2y * AC_StaggerDist) + (ve2x * abs(AC_StaggerDist))
	marker2Cy = mey + (ve2x * AC_StaggerDist) + (ve2y * abs(AC_StaggerDist))

	if GLOB_CONTEXT<>30 and AC_MarkerEnd=1 then
		line2 mex, mey, marker2Cx, marker2Cy
		hotline2 mex, mey, marker2Cx, marker2Cy, hLineID : hLineID = hLineID + 1
	else
		hLineID = hLineID + 1
	endif

	mex = marker2Cx
	mey = marker2Cy
	marker2Cx = mex + (ve2x * AC_Staggering)
	marker2Cy = mey + (ve2y * AC_Staggering)

	if GLOB_CONTEXT<>30 and AC_MarkerEnd=1 then
		line2 mex, mey, marker2Cx, marker2Cy
		hotline2 mex, mey, marker2Cx, marker2Cy, hLineID : hLineID = hLineID + 1
	else
		hLineID = hLineID + 1
	endif

	hot7x = ax
	hot7y = ay
	hot8x = mex
	hot8y = mey
	hot10x = marker2Cx
	hot10y = marker2Cy

	mex = marker2Cx
	mey = marker2Cy

	ax = ax + (ve2x * abs(AC_Staggering))
	ay = ay + (ve2y * abs(AC_Staggering))

	hot9x = ax
	hot9y = ay

	marker2Cx = mex + (ve2x * Marker_Diameter/2)
	marker2Cy = mey + (ve2y * Marker_Diameter/2)

! make Paragraph & TextBlock
! ------------------------------------------------------------------------------

	define style{2} "textStyleName" AC_TextFont_1, AC_TextSize_1, AC_TextStyle_1

	_parAlignment = 1 	! unecessary function for one row
	_parLineSpace = 1 	! default
	_blockAnchor = 2	! topCenter
	_blockHeight = 1	! scale independent paper size

	textStyleHeight = 0
	textStyleDescent = 0
	textStyleLeading = 0
	req_id = REQUEST ("Height_of_style", "textStyleName", textStyleHeight, textStyleDescent, textStyleLeading)
	textStyleAscent = (textStyleHeight - textStyleDescent - textStyleLeading) 
	markerTextBlockPosY = (textStyleAscent - AC_TextSize_1 / 2) * GLOB_SCALE / 1000

	PARAGRAPH "parName" _parAlignment, 0, 0, 0, _parLineSpace , 0
		pen AC_TextPen_1
		style "textStyleName"
		AC_MarkerText_1
	ENDPARAGRAPH
	TEXTBLOCK "markerTextBlock" 0, _blockAnchor, 0, AC_TextCharWidthFactor_1, AC_TextCharSpaceFactor_1, _blockHeight, "parName"

SET LINE_TYPE 1

! ========== dimension hostposts /must be the first 2/ ==========

if AC_Type_i = i_Line then
	hotspot2 hot5x, hot5y, 31
	hotspot2 hot6x, hot6y, 49
else
	hotspot2 AC_StartX, AC_StartY, 31
	hotspot2 AC_EndX, AC_EndY, 49
endif

if (AC_MarkerStart = 1 OR GLOB_CONTEXT=30) then

	ADD2 marker1Cx , marker1Cy
	pen AC_MarkerPen
	fill gs_fill_type

	if AC_MarkerType_i = i_circle then
		if not(shBackgroundFill) then
			circle2 0 , 0 , Marker_Diameter/2
		else
			poly2_b 2, 1+2+4+64, gs_fill_pen, gs_back_pen,
					0, 0, 901,
					Marker_Diameter/2, 360, 4001
		endif
	else
		alfa_m2=360/res_mark
		dy=Marker_Diameter/2-Marker_Diameter/2*cos(alfa_m2/2)

		if AC_Type_i = i_Arc then rot2 90
		if AC_MarkerRot=1 then
			add2 dy, 0
			rot2 alfa_m2/2
		endif

		for m = 1 to res_mark+1
			PUT (Marker_Diameter/2)*cos(alfa_m2*m), (Marker_Diameter/2)*sin(alfa_m2*m), 1
		next m

		poly2_b res_mark+1, 1+2*shBackgroundFill+4+64*shBackgroundFill, gs_fill_pen, gs_back_pen,
			GET (NSP)

		if AC_MarkerRot=1 then del 2
		if AC_Type_i = i_Arc then del 1
	endif

	pen AC_TextPen_1
	if AC_MarkerRot=1 then add2 dy*sgn(AC_Type_i = i_Line), dy*sgn(AC_Type_i = i_Arc)
	ROT2 (-1+SYMB_MIRRORED*2)*totalRotate
	richtext2 0, markerTextBlockPosY, "markerTextBlock"
	hotspot2 0 , 0 , 61
	DEL 2
	if AC_MarkerRot=1 then del 1

endif


if (AC_MarkerEnd = 1 AND GLOB_CONTEXT<>30) then

	ADD2 marker2Cx , marker2Cy
	pen AC_MarkerPen
	fill gs_fill_type

	if AC_MarkerType_i = i_circle then
		if not(shBackgroundFill) then
			circle2 0 , 0 , Marker_Diameter/2
		else
			poly2_b 2, 1+2+4+64, gs_fill_pen, gs_back_pen,
					0, 0, 901,
					Marker_Diameter/2, 360, 4001
		endif
	else
		alfa_m2=360/res_mark
		dy=Marker_Diameter/2-Marker_Diameter/2*cos(alfa_m2/2)

		if AC_Type_i = i_Arc then rot2 AC_Angle+90
		if AC_MarkerRot=1 then
			add2 -dy, 0
			rot2 alfa_m2/2
		endif
		rot2 180

		for m = 1 to res_mark+1
			PUT (Marker_Diameter/2)*cos(alfa_m2*m), (Marker_Diameter/2)*sin(alfa_m2*m), 1
		next m

		poly2_b res_mark+1, 1+2*shBackgroundFill+4+64*shBackgroundFill, gs_fill_pen, gs_back_pen,
			GET (NSP)

		del 1
		if AC_MarkerRot=1 then del 2
		if AC_Type_i = i_Arc then del 1
	endif

	pen AC_TextPen_1
	if AC_MarkerRot=1 then add2 -dy*sgn(AC_Type_i = i_Line) +dy*sin(AC_Angle)*sgn(AC_Type_i = i_Arc), -dy*cos(AC_Angle)*sgn(AC_Type_i = i_Arc)
	ROT2 (-1+SYMB_MIRRORED*2)*totalRotate
	richtext2 0, markerTextBlockPosY, "markerTextBlock"
	hotspot2 0 , 0 , 62
	DEL 2
	if AC_MarkerRot=1 then del 1

endif

! =========================================================================
! HotSpots from 1 - 10
! =========================================================================

if GLOB_CONTEXT<>30 then

	if AC_MarkerStart=0 then
		hot1x = hot5x
		hot1y = hot5y
	endif
	if AC_MarkerEnd=0 then
		hot10x = hot6x
		hot10y = hot6y
	endif

	! ===== 1st half =====

	! ===== staggering distance hotspots !end =====

	if (AC_Staggering > Eps AND AC_MarkerStart=1) then

		hotspot2 hot2x, hot2y, 22, AC_StaggerDist, 1+128

		if (abs(hot2x - hot1x) > Eps OR abs(hot2y - hot1y) > Eps) then
			hotspot2 hot2x, hot2y, 23, AC_StaggerDist, 3
		else
			hotspot2 hot2x-ve1y*0.0001, hot2y+((ve1x)*0.0001), 23, AC_StaggerDist, 3
		endif

		hotspot2 hot1x, hot1y, 24, AC_StaggerDist, 2

	endif

	if (AC_Type_i = i_Line OR (AC_Type_i = i_Arc AND AC_Extension > Eps)) AND AC_MarkerStart=1 then

	! ===== staggering distance hotspots =====

		hotspot2 hot3x, hot3y, 25, AC_StaggerDist, 2
		if (abs(hot4x - hot3x) > Eps OR abs(hot4y - hot3y) > Eps) then
			hotspot2 hot4x, hot4y, 26, AC_StaggerDist, 3
		else
			hotspot2 hot4x-(ve1y*0.0001), hot4y+((ve1x)*0.0001), 26, AC_StaggerDist, 3
		endif
		hotspot2 hot4x, hot4y, 27, AC_StaggerDist, 1+128

	! ===== staggering length hotspots =====

		hotspot2 hot3x, hot3y, 28, AC_Staggering, 2
		!hotspot2 hot1x, hot1y, 29, AC_Staggering, 3
		if (abs(hot1x - hot3x) > Eps OR abs(hot1y - hot3y) > Eps) then
			hotspot2 hot1x, hot1y, 29, AC_Staggering, 3
		else
			hotspot2 hot1x+(ve1x*0.0001), hot1y+((ve1y)*0.0001), 29, AC_Staggering, 3
		endif
		hotspot2 hot1x, hot1y, 30, AC_Staggering, 1+128

	endif

	if AC_Type_i = i_Arc then
		if (AC_Extension < Eps OR AC_Staggering > Eps OR AC_MarkerStart=0) then
			hotspot2 hot1x-(ve1x*AC_Extension), hot1y - (ve1y*AC_Extension), 32, AC_Extension, 1+128
			if (AC_Extension > Eps) then
				hotspot2 hot1x-(ve1x*AC_Extension), hot1y - (ve1y*AC_Extension), 33, AC_Extension, 3
			else
				hotspot2 hot1x-(ve1x*0.0001), hot1y-((ve1y)*0.0001), 33, AC_Extension, 3
			endif
			hotspot2 hot1x, hot1y, 34, AC_Extension, 2
		endif
	endif


	! ===== 2nd half =====

	! ===== staggering distance hotspots end =====

	if (AC_Staggering > Eps  AND AC_MarkerEnd=1) then
		hotspot2 hot9x, hot9y, 40, AC_StaggerDist, 1+128
		if (abs(hot9x - hot10x) > Eps OR abs(hot9y - hot10y) > Eps) then
			hotspot2 hot9x, hot9y, 41, AC_StaggerDist, 3
		else
			hotspot2 hot9x+ve2y*0.0001, hot9y-ve2x*0.0001, 41, AC_StaggerDist, 3
		endif
		hotspot2 hot10x, hot10y, 42, AC_StaggerDist, 2
	endif

	if (AC_Type_i = i_Line OR (AC_Type_i = i_Arc AND AC_Extension > Eps)) AND AC_MarkerEnd=1 then

	! ===== staggering length hotspots =====

		hotspot2 hot8x, hot8y, 46, AC_Staggering, 2
		if (abs(hot10x - hot8x) > Eps OR abs(hot10y - hot8y) > Eps) then
			hotspot2 hot10x, hot10y, 47, AC_Staggering, 3
		else
			hotspot2 hot10x+(ve2x*0.0001), hot10y+((ve2y)*0.0001), 47, AC_Staggering, 3
		endif
		hotspot2 hot10x, hot10y, 48, AC_Staggering, 1+128

	! ===== staggering distance hotspots =====

		hotspot2 hot8x, hot8y, 43, AC_StaggerDist, 2
		if (abs(hot7x - hot8x) > Eps OR abs(hot7y - hot8y) > Eps) then
			hotspot2 hot7x, hot7y, 44, AC_StaggerDist, 3
		else
			hotspot2 hot7x+ve2y*0.0001, hot7y-ve2x*0.0001, 44, AC_StaggerDist, 3
		endif
		hotspot2 hot7x, hot7y, 45, AC_StaggerDist, 1+128

	endif

	if AC_Type_i = i_Arc then
		if (AC_Extension < Eps OR AC_Staggering > Eps OR AC_MarkerEnd=0) then
			hotspot2 hot10x-(ve2x*AC_Extension), hot10y - (ve2y*AC_Extension), 50, AC_Extension, 1+128
			if (AC_Extension > Eps) then
				hotspot2 hot10x-(ve2x*AC_Extension), hot10y - (ve2y*AC_Extension), 51, AC_Extension, 3
			else
				hotspot2 hot10x-(ve2x*0.0001), hot10y -((ve2y)*0.0001), 51, AC_Extension, 3
			endif
			hotspot2 hot10x, hot10y, 52, AC_Extension, 2
		endif
	endif

! ===== Full line length edit =====

	if AC_Type_i = i_Line then

		if (AC_Staggering > Eps OR AC_MarkerEnd=0) then
			hotspot2 hot10x, hot10y, 2, AC_Length, 2
			hotspot2 hot10x-(ve2x*AC_Length), hot10y, 4, AC_Length, 1+128
		endif
		if (AC_Staggering > Eps OR AC_MarkerStart=0) then
			hotspot2 hot1x, hot1y, 1, AC_Length, 1+256
			hotspot2 hot1x-(ve1x*AC_Length), hot1y, 3, AC_Length, 2+128
		endif

	else

		!hotspot2 0, 0, 12
		hotspot2 0, 0, 70, AC_Radius, 1
		hotspot2 0, 0, 71, AC_Radius, 3
		hotspot2 AC_MidX , AC_MidY, 72, AC_Radius, 2

		if (AC_Extension > Eps) then
			hotspot2 AC_StartX, AC_StartY, 73, AC_Angle, 4+256
			hotspot2 0, 0, 74, AC_Angle, 6
			hotspot2 AC_MidX , AC_MidY, 75, AC_Angle, 7
			hotspot2 AC_EndX , AC_EndY, 76, AC_Angle, 5
		endif

	endif

endif

DEL 1
]]>
</Script_2D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_1D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
text2 0,0,"Test"
EPS = 0.000001

if GLOB_SCRIPT_TYPE = 7 | GLOB_SCRIPT_TYPE = 8 then goto "MasterEnd"

i_Line = 1
i_Arc = 2
dim AC_Type_s[2]
	AC_Type_s[1] = `Линия`
	AC_Type_s[2] = `Дугообразный`

i_Full = 1
i_Short = 2
i_Hidden = 3
dim AC_LineVisibility_s[3]
	AC_LineVisibility_s[1] = `Полный`
	AC_LineVisibility_s[2] = `Короткая`
	AC_LineVisibility_s[3] = `Скрытая`

i_All      = 1
i_Current  = 2
i_Selected = 3
dim AC_StoryVisibility_s[3]
	AC_StoryVisibility_s[1] = `Все`
	AC_StoryVisibility_s[2] = `Текущий`
	AC_StoryVisibility_s[3] = `Выбранный`

i_Rectangle = 1
i_Circle    = 2
dim cstype_3d_s[2]
	cstype_3d_s[1] = `Прямоугольный`
	cstype_3d_s[2] = `Окружность`

i_circle   = 1
i_square   = 2
i_pentagon = 3
i_hexagon  = 4
dim AC_MarkerType_s[4]
	AC_MarkerType_s[1] = `Окружность`
	AC_MarkerType_s[2] = `Квадрат`
	AC_MarkerType_s[3] = `Пятиугольник`
	AC_MarkerType_s[4] = `Шестиугольник`

"MasterEnd":
]]>
</Script_1D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_VL SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
values "AC_Type" AC_Type_s
if GLOB_MODPAR_NAME = "AC_Type" then
	AC_Type_i = 1
	if AC_Type = AC_Type_s[2] then AC_Type_i = 2
	parameters AC_Type_i = AC_Type_i
else
	AC_Type = AC_Type_s[max(1, min(AC_Type_i, vardim1(AC_Type_s)) )]
	parameters AC_Type = AC_Type
endif

values "AC_LineVisibility" AC_LineVisibility_s
if GLOB_MODPAR_NAME = "AC_LineVisibility" then
	AC_LineVisibility_i = 1
	if AC_LineVisibility = AC_LineVisibility_s[2] then AC_LineVisibility_i = 2
	if AC_LineVisibility = AC_LineVisibility_s[3] then AC_LineVisibility_i = 3
	parameters AC_LineVisibility_i = AC_LineVisibility_i
else
	AC_LineVisibility = AC_LineVisibility_s[max(1, min(AC_LineVisibility_i, vardim1(AC_LineVisibility_s)) )]
	parameters AC_LineVisibility = AC_LineVisibility
endif

values "AC_StoryVisibility" AC_StoryVisibility_s
if GLOB_MODPAR_NAME = "AC_StoryVisibility" then
	AC_StoryVisibility_i = 1
	if AC_StoryVisibility = AC_StoryVisibility_s[2] then AC_StoryVisibility_i = 2
	if AC_StoryVisibility = AC_StoryVisibility_s[3] then AC_StoryVisibility_i = 3
	parameters AC_StoryVisibility_i = AC_StoryVisibility_i
else
	AC_StoryVisibility = AC_StoryVisibility_s[max(1, min(AC_StoryVisibility_i, vardim1(AC_StoryVisibility_s)) )]
	parameters AC_StoryVisibility = AC_StoryVisibility
endif

values "AC_Radius" range (0,]

values "AC_Angle" range (0,360)

if not(shBackgroundFill) then HIDEPARAMETER "gs_fill_type", "gs_fill_pen", "gs_back_pen"

if AC_Type_i = i_Line then
	values "AC_Staggering" range [0, AC_Length/2 - abs(AC_StaggerDist)-Eps]
	values "AC_StaggerDist" range [-(AC_Length/2 - AC_Staggering)+Eps, AC_Length/2 - AC_Staggering - Eps]

	HIDEPARAMETER "AC_Radius"
	HIDEPARAMETER "AC_Extension"
	HIDEPARAMETER "AC_Angle"
else
	values "AC_Staggering" range [0, AC_Extension - abs(AC_StaggerDist)-Eps]
	values "AC_StaggerDist" range [-(AC_Extension - AC_Staggering)+Eps, AC_Extension - AC_Staggering - Eps]

	HIDEPARAMETER "AC_Length"
endif

if line_3d=1 then lock "AC_GridLineMat", "cstype_3d", "line_diameter_3d"

values "cstype_3d" cstype_3d_s
if GLOB_MODPAR_NAME = "cstype_3d" then
	cstype_3d_i = 1
	if cstype_3d = cstype_3d_s[2] then cstype_3d_i = 2
	parameters cstype_3d_i = cstype_3d_i
else
	cstype_3d = cstype_3d_s[max(1, min(cstype_3d_i, vardim1(cstype_3d_s)) )]
	parameters cstype_3d = cstype_3d
endif

values "AC_MarkerType" AC_MarkerType_s
if GLOB_MODPAR_NAME = "AC_MarkerType" then
	AC_MarkerType_i = 1
	if AC_MarkerType = AC_MarkerType_s[2] then AC_MarkerType_i = 2
	if AC_MarkerType = AC_MarkerType_s[3] then AC_MarkerType_i = 3
	if AC_MarkerType = AC_MarkerType_s[4] then AC_MarkerType_i = 4
	parameters AC_MarkerType_i = AC_MarkerType_i
else
	AC_MarkerType = AC_MarkerType_s[max(1, min(AC_MarkerType_i, vardim1(AC_MarkerType_s)) )]
	parameters AC_MarkerType = AC_MarkerType
endif

if  AC_MarkerType_i = i_circle then
	res_mark = 24
	parameters AC_MarkerRot=0
	lock "AC_MarkerRot"
endif
if  AC_MarkerType_i = i_square then
	res_mark = 4
endif
if  AC_MarkerType_i = i_pentagon then
	res_mark = 5
endif
if  AC_MarkerType_i = i_hexagon then
	res_mark = 6
endif
parameters res_mark = res_mark
]]>
</Script_VL>

<ParamSection SectVersion="27" SectionFlags="0" SubIdent="0">
	<ParamSectHeader>
		<AutoHotspots>false</AutoHotspots>
		<StatBits>
			<STBit_FixSize/>
		</StatBits>
		<WDLeftFrame>0</WDLeftFrame>
		<WDRightFrame>0</WDRightFrame>
		<WDTopFrame>0</WDTopFrame>
		<WDBotFrame>0</WDBotFrame>
		<LayFlags>65535</LayFlags>
		<WDMirrorThickness>0</WDMirrorThickness>
		<WDWallInset>0</WDWallInset>
	</ParamSectHeader>
	<Parameters>
		<Length Name="A">
			<Description><![CDATA["Размер 1"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>2</Value>
		</Length>
		<Length Name="B">
			<Description><![CDATA["Размер 2"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="ZZYZX">
			<Description><![CDATA["Высота"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Boolean Name="AC_show2DHotspotsIn3D">
			<Description><![CDATA["Показ Узловых 2D Точек в 3D"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="ac_bottomlevel">
			<Description><![CDATA["Отметка Низа"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="ac_toplevel">
			<Description><![CDATA["Отметка Верха"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>

		<!-- GridElemen_sp0: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="GridElemen_sp0">
			<Description><![CDATA["Параметры Маркера"]]></Description>
			<Fix/>
		</Title>
		<RealNum Name="AC_MarkerSize">
			<Description><![CDATA["Размер Маркера"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>10</Value>
		</RealNum>
		<PenColor Name="AC_MarkerPen">
			<Description><![CDATA["Перо Маркера"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>7</Value>
		</PenColor>
		<FillPattern Name="AC_MarkerFill">
			<Description><![CDATA["Штриховка Маркера"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>64</Value>
		</FillPattern>
		<String Name="AC_TextFont_1">
			<Description><![CDATA["Тип Текста"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Arial"]]></Value>
		</String>
		<RealNum Name="AC_TextSize_1">
			<Description><![CDATA["Размер Шрифта"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3.5</Value>
		</RealNum>
		<Integer Name="AC_TextStyle_1">
			<Description><![CDATA["Стиль Текста"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<PenColor Name="AC_TextPen_1">
			<Description><![CDATA["Перо Текста"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</PenColor>
		<RealNum Name="AC_TextCharWidthFactor_1">
			<Description><![CDATA["Фактор Ширины Символов Текста Маркера 1 (по умолчанию)"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</RealNum>
		<RealNum Name="AC_TextCharSpaceFactor_1">
			<Description><![CDATA["Фактор Межсимвольного Расстояния Текста Маркера 1 (по умолчанию)"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</RealNum>
		<String Name="AC_MarkerText_1">
			<Description><![CDATA["Текст Маркера"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["X1"]]></Value>
		</String>
		<String Name="AC_MarkerType">
			<Description><![CDATA["Форма маркера"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Окружность"]]></Value>
		</String>
		<Integer Name="AC_MarkerType_i">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="AC_MarkerRot">
			<Description><![CDATA["Поворот Маркера"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="shBackgroundFill">
			<Description><![CDATA["Показать Штриховку Фона"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<FillPattern Name="gs_fill_type">
			<Description><![CDATA["Тип Штриховки"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_fill_pen">
			<Description><![CDATA["Перо Штриховки"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_back_pen">
			<Description><![CDATA["Перо Фона Штриховки"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>

		<!-- GridElemen_sp1: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="GridElemen_sp1">
			<Description><![CDATA["Геометрия"]]></Description>
			<Fix/>
		</Title>
		<String Name="AC_Type">
			<Description><![CDATA["Тип"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Линия"]]></Value>
		</String>
		<Integer Name="AC_Type_i">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="AC_Length">
			<Description><![CDATA["Длина"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>10</Value>
		</Length>
		<Length Name="AC_Radius">
			<Description><![CDATA["Радиус"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>5</Value>
		</Length>
		<Angle Name="AC_Angle">
			<Description><![CDATA["Угол"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>120</Value>
		</Angle>
		<Length Name="AC_Extension">
			<Description><![CDATA["Продление"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>4</Value>
		</Length>
		<Boolean Name="AC_ShowIn3D">
			<Description><![CDATA["Показ в 3D"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="AC_TextFollowsView">
			<Description><![CDATA["Текст следует за видом"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="AC_Staggering">
			<Description><![CDATA["Смещение"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="AC_StaggerDist">
			<Description><![CDATA["Расстояние Смещения"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Length>

		<!-- GridElemen_sp2: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="GridElemen_sp2">
			<Description><![CDATA["2D-отображение"]]></Description>
			<Fix/>
		</Title>
		<String Name="AC_StoryVisibility">
			<Description><![CDATA["Показ на Этажах"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Все"]]></Value>
		</String>
		<Integer Name="AC_StoryVisibility_i">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="AC_LineVisibility">
			<Description><![CDATA["Отображение Линий Осей"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Полный"]]></Value>
		</String>
		<Integer Name="AC_LineVisibility_i">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="AC_VisLength">
			<Description><![CDATA["Отображаемая Длина"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Length>
		<LineType Name="AC_LineType">
			<Description><![CDATA["Тип Линии"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</LineType>
		<PenColor Name="AC_LinePen">
			<Description><![CDATA["Перо Линии"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>4</Value>
		</PenColor>
		<Boolean Name="AC_MarkerStart">
			<Description><![CDATA["Маркер в Начале"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="AC_MarkerEnd">
			<Description><![CDATA["Маркер в Конце"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Integer Name="AC_StoryNum">
			<Description><![CDATA["Номер Выбранного Этажа"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="AC_Stories">
			<Description><![CDATA["Выбранные Этажи"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="30" SecondDimension="0">
				<AVal Row="1">0</AVal>
				<AVal Row="2">1</AVal>
				<AVal Row="3">0</AVal>
				<AVal Row="4">0</AVal>
				<AVal Row="5">0</AVal>
				<AVal Row="6">0</AVal>
				<AVal Row="7">0</AVal>
				<AVal Row="8">0</AVal>
				<AVal Row="9">0</AVal>
				<AVal Row="10">0</AVal>
				<AVal Row="11">0</AVal>
				<AVal Row="12">0</AVal>
				<AVal Row="13">0</AVal>
				<AVal Row="14">0</AVal>
				<AVal Row="15">0</AVal>
				<AVal Row="16">0</AVal>
				<AVal Row="17">0</AVal>
				<AVal Row="18">0</AVal>
				<AVal Row="19">0</AVal>
				<AVal Row="20">0</AVal>
				<AVal Row="21">0</AVal>
				<AVal Row="22">0</AVal>
				<AVal Row="23">0</AVal>
				<AVal Row="24">0</AVal>
				<AVal Row="25">0</AVal>
				<AVal Row="26">0</AVal>
				<AVal Row="27">0</AVal>
				<AVal Row="28">0</AVal>
				<AVal Row="29">0</AVal>
				<AVal Row="30">0</AVal>
			</ArrayValues>
		</Integer>

		<!-- Standardgr_sp0: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="Standardgr_sp0">
			<Description><![CDATA["3D-вид"]]></Description>
			<Fix/>
		</Title>
		<Boolean Name="line_3d">
			<Description><![CDATA["Только линии в 3D"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Integer Name="res_arc_3D">
			<Description><![CDATA["Количество Дуговых Сегментов"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>12</Value>
		</Integer>
		<Material Name="AC_TextMat">
			<Description><![CDATA["Покрытие Текста Оси"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</Material>
		<Material Name="AC_GridLineMat">
			<Description><![CDATA["Покрытие Линии Оси"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>10</Value>
		</Material>
		<String Name="cstype_3d">
			<Description><![CDATA["Тип 3D-линии Поперечного Сечения"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Прямоугольный"]]></Value>
		</String>
		<Integer Name="cstype_3d_i">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="line_diameter_3d">
			<Description><![CDATA["Диаметр 3D-линии"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Integer Name="res_mark">
			<Description><![CDATA["Разрешение Маркера"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>24</Value>
		</Integer>
		<Integer Name="res_3d">
			<Description><![CDATA["Аппроксимация в Сечении"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>8</Value>
		</Integer>
		<Integer Name="link_Id">
			<Description><![CDATA["Связанный ID"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<String Name="link_Guid">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
	</Parameters>
</ParamSection>

<CalledMacros SectVersion="2" SectionFlags="0" SubIdent="0">
</CalledMacros>

<Copyright SectVersion="1" SectionFlags="0" SubIdent="0">
	<Author>GRAPHISOFT</Author>
	<License>
		<Type>CC BY</Type>
		<Version>4.0</Version>
	</License>
</Copyright>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_FWM SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
actualGUID = FROM_GUID

! ==============================================================================
! New integer parameter AC15 --> AC16
! ==============================================================================

if actualGUID = "14B9B303-491C-49DB-B71E-09E6147BD4B5" then
	returnedActID = 1

	dim stACType[2]
		stACType[1] = `Линия`
		stACType[2] = `Дугообразный`

	dim stACStoryVisibility[3]
		stACStoryVisibility[1] = `Все`
		stACStoryVisibility[2] = `Текущий`
		stACStoryVisibility[3] = `Выбранный`

	dim stACLineVisibility[3]
		stACLineVisibility[1] = `Полный`
		stACLineVisibility[2] = `Короткая`
		stACLineVisibility[3] = `Скрытая`

	dim stCStype3D[2]
		stCStype3D[1] = `Прямоугольный`
		stCStype3D[2] = `Окружность`

	dim stACMarkerType[4]
		stACMarkerType[1] = `Окружность`
		stACMarkerType[2] = `Квадрат`
		stACMarkerType[3] = `Пятиугольник`
		stACMarkerType[4] = `Шестиугольник`

! ==============================================================================

	if DELETED_PAR_VALUE ("AC_Type", AC_Type) then
		bHasParameters = DELETED_PAR_VALUE ("AC_Type_i", AC_Type_i)

		if not(bHasParameters) | (bHasParameters & AC_Type_i = 0) then

			! AUT, CHE, GER
			if AC_Type = "Linie"		then AC_Type = "Line"
			if AC_Type = "Kreisbogen"	then AC_Type = "Arc"

			! CHI
			if AC_Type = "直线"			then AC_Type = "Line"
			if AC_Type = "弧形的"		then AC_Type = "Arc"

			! CZE
			if AC_Type = "čára"			then AC_Type = "Line"
			if AC_Type = "oblouk"		then AC_Type = "Arc"

			! FIN
			if AC_Type = "Viiva"		then AC_Type = "Line"
			if AC_Type = "Kaari"		then AC_Type = "Arc"

			! FRA
			if AC_Type = "Ligne "			then AC_Type = "Line"
			if AC_Type = "Circulaire"		then AC_Type = "Arc"

			! GRE
			if AC_Type = "Γραμμή"		then AC_Type = "Line"
			if AC_Type = "Τόξο"			then AC_Type = "Arc"

			! HUN
			if AC_Type = "Vonal"		then AC_Type = "Line"
			if AC_Type = "íves"			then AC_Type = "Arc"

			! ITA
			if AC_Type = "Linea"		then AC_Type = "Line"
			if AC_Type = "Arco"			then AC_Type = "Arc"

			! JPN
			if AC_Type = "線種"			then AC_Type = "Line"
			if AC_Type = "円弧"			then AC_Type = "Arc"

			! KOR
			if AC_Type = "선"			then AC_Type = "Line"
			if AC_Type = "호"			then AC_Type = "Arc"

			! NED, FLA
			if AC_Type = "Lijn"			then AC_Type = "Line"
			if AC_Type = "Boog"			then AC_Type = "Arc"

			! POL
			if AC_Type = "Linia"		then AC_Type = "Line"
			if AC_Type = "Po łuku"		then AC_Type = "Arc"

			! BRA, POR
			if AC_Type = "Linha"		then AC_Type = "Line"
			if AC_Type = "Arco"			then AC_Type = "Arc"

			! RUS
			if AC_Type = "Линия"			then AC_Type = "Line"
			if AC_Type = "Дугообразный"		then AC_Type = "Arc"

			! SPA
			if AC_Type = "Línea"			then AC_Type = "Line"
			if AC_Type = "Arco"				then AC_Type = "Arc"

			! SWE
			if AC_Type = "Linjär"			then AC_Type = "Line"
			if AC_Type = "Bågformad"		then AC_Type = "Arc"

			! TAI
			if AC_Type = "直線"				then AC_Type = "Line"
			if AC_Type = "弧形的"			then AC_Type = "Arc"

			! TUR
			if AC_Type = "Çizgi"			then AC_Type = "Line"
			if AC_Type = "Yay"				then AC_Type = "Arc"

			! TODO

		! ------------------------------------------------------------------------------
			! AUS, DEN, INT, NOR, NZE, USA
			if AC_Type = "Line"				then AC_Type = stACType[1]
			if AC_Type = "Arc"				then AC_Type = stACType[2]

			AC_Type_i = 1		! Line
			if AC_Type = stACType[2] then AC_Type_i = 2	! Arc
			parameters AC_Type_i = AC_Type_i
		endif
	else
		returnedActID = 0
	endif

! ==============================================================================

	if DELETED_PAR_VALUE ("AC_StoryVisibility", AC_StoryVisibility) then
		bHasParameters = DELETED_PAR_VALUE ("AC_StoryVisibility_i", AC_StoryVisibility_i)

		if not(bHasParameters) | (bHasParameters & AC_StoryVisibility_i = 0) then

			! AUT, CHE, GER
			if AC_StoryVisibility = "Alle"			then AC_StoryVisibility = "All"
			if AC_StoryVisibility = "Aktuell"		then AC_StoryVisibility = "Current"
			if AC_StoryVisibility = "Gewählt"		then AC_StoryVisibility = "Selected"

			! CHI
			if AC_StoryVisibility = "全部"			then AC_StoryVisibility = "All"
			if AC_StoryVisibility = "当前"			then AC_StoryVisibility = "Current"
			if AC_StoryVisibility = "选定 "			then AC_StoryVisibility = "Selected"

			! CZE
			if AC_StoryVisibility = "vše"			then AC_StoryVisibility = "All"
			if AC_StoryVisibility = "aktuální"		then AC_StoryVisibility = "Current"
			if AC_StoryVisibility = "vybraná"		then AC_StoryVisibility = "Selected"

			! FIN
			if AC_StoryVisibility = "Kaikki"		then AC_StoryVisibility = "All"
			if AC_StoryVisibility = "Aktiivinen"	then AC_StoryVisibility = "Current"
			if AC_StoryVisibility = "Valittu"		then AC_StoryVisibility = "Selected"

			! FRA
			if AC_StoryVisibility = "Tout "			then AC_StoryVisibility = "All"
			if AC_StoryVisibility = "Courant"		then AC_StoryVisibility = "Current"
			if AC_StoryVisibility = "Sélectionné "	then AC_StoryVisibility = "Selected"

			! GRE
			if AC_StoryVisibility = "Όλοι"			then AC_StoryVisibility = "All"
			if AC_StoryVisibility = "Τρέχων"		then AC_StoryVisibility = "Current"
			if AC_StoryVisibility = "Επιλεγμένος"	then AC_StoryVisibility = "Selected"

			! HUN
			if AC_StoryVisibility = "Mind"			then AC_StoryVisibility = "All"
			if AC_StoryVisibility = "Jelenlegi"		then AC_StoryVisibility = "Current"
			if AC_StoryVisibility = "kiválasztott"	then AC_StoryVisibility = "Selected"

			! ITA
			if AC_StoryVisibility = "Tutto"			then AC_StoryVisibility = "All"
			if AC_StoryVisibility = "Corrente"		then AC_StoryVisibility = "Current"
			if AC_StoryVisibility = "Selezionato"	then AC_StoryVisibility = "Selected"

			! JPN
			if AC_StoryVisibility = "全て"			then AC_StoryVisibility = "All"
			if AC_StoryVisibility = "現在"			then AC_StoryVisibility = "Current"
			if AC_StoryVisibility = "選択内容"		then AC_StoryVisibility = "Selected"

			! KOR
			if AC_StoryVisibility = "모두"			then AC_StoryVisibility = "All"
			if AC_StoryVisibility = "현재"			then AC_StoryVisibility = "Current"
			if AC_StoryVisibility = "선택"			then AC_StoryVisibility = "Selected"

			! NED, FLA
			if AC_StoryVisibility = "Alle"			then AC_StoryVisibility = "All"
			if AC_StoryVisibility = "Huidige"		then AC_StoryVisibility = "Current"
			if AC_StoryVisibility = "Geselecteerde"	then AC_StoryVisibility = "Selected"

			! POL
			if AC_StoryVisibility = "Wszystko"		then AC_StoryVisibility = "All"
			if AC_StoryVisibility = "bieżące"		then AC_StoryVisibility = "Current"
			if AC_StoryVisibility = "Wybrane "		then AC_StoryVisibility = "Selected"

			! BRA, POR
			if AC_StoryVisibility = "Tudo"			then AC_StoryVisibility = "All"
			if AC_StoryVisibility = "Actual"		then AC_StoryVisibility = "Current"
			if AC_StoryVisibility = "Seleccionado"	then AC_StoryVisibility = "Selected"
			if AC_StoryVisibility = "Selecionado"	then AC_StoryVisibility = "Selected"

			! RUS
			if AC_StoryVisibility = "Все"			then AC_StoryVisibility = "All"
			if AC_StoryVisibility = "Текущий"		then AC_StoryVisibility = "Current"
			if AC_StoryVisibility = "Выбранный"		then AC_StoryVisibility = "Selected"

			! SPA
			if AC_StoryVisibility = "Todo"			then AC_StoryVisibility = "All"
			if AC_StoryVisibility = "Actual"		then AC_StoryVisibility = "Current"
			if AC_StoryVisibility = "Seleccionado"	then AC_StoryVisibility = "Selected"

			! SWE
			if AC_StoryVisibility = "Alla"			then AC_StoryVisibility = "All"
			if AC_StoryVisibility = "Nuvarande"		then AC_StoryVisibility = "Current"
			if AC_StoryVisibility = "Vald"			then AC_StoryVisibility = "Selected"

			! TAI
			if AC_StoryVisibility = "全部"			then AC_StoryVisibility = "All"
			if AC_StoryVisibility = "當前"			then AC_StoryVisibility = "Current"
			if AC_StoryVisibility = "選定"			then AC_StoryVisibility = "Selected"

			! TUR
			if AC_StoryVisibility = "Tümü"			then AC_StoryVisibility = "All"
			if AC_StoryVisibility = "Mevcut"		then AC_StoryVisibility = "Current"
			if AC_StoryVisibility = "Seçili"		then AC_StoryVisibility = "Selected"

			! TODO

		! ------------------------------------------------------------------------------
			! AUS, DEN, INT, NOR, NZE, USA
			if	AC_StoryVisibility = "All"			then AC_StoryVisibility = stACStoryVisibility[1]
			if	AC_StoryVisibility = "Current"		then AC_StoryVisibility = stACStoryVisibility[2]
			if	AC_StoryVisibility = "Selected"		then AC_StoryVisibility = stACStoryVisibility[3]

			AC_StoryVisibility_i = 1		! All
			if AC_StoryVisibility = stACStoryVisibility[2] then AC_StoryVisibility_i = 2	! Current
			if AC_StoryVisibility = stACStoryVisibility[3] then AC_StoryVisibility_i = 3	! Selected
			parameters AC_StoryVisibility_i = AC_StoryVisibility_i
		endif
	else
		returnedActID = 0
	endif

! ==============================================================================

	if DELETED_PAR_VALUE ("AC_LineVisibility", AC_LineVisibility) then
		bHasParameters = DELETED_PAR_VALUE ("AC_LineVisibility_i", AC_LineVisibility_i)

		if not(bHasParameters) | (bHasParameters & AC_LineVisibility_i = 0) then

			! AUT, CHE, GER
			if AC_LineVisibility = "Komplett"		then AC_LineVisibility = "Full"
			if AC_LineVisibility = "Kurz"			then AC_LineVisibility = "Short"
			if AC_LineVisibility = "Ausgeblendet"	then AC_LineVisibility = "Hidden"

			! CHI
			if AC_LineVisibility = "完全"			then AC_LineVisibility = "Full"
			if AC_LineVisibility = "短"				then AC_LineVisibility = "Short"
			if AC_LineVisibility = "隐藏"			then AC_LineVisibility = "Hidden"

			! CZE
			if AC_LineVisibility = "celá"			then AC_LineVisibility = "Full"
			if AC_LineVisibility = "krátká"			then AC_LineVisibility = "Short"
			if AC_LineVisibility = "skrytá"			then AC_LineVisibility = "Hidden"

			! FIN
			if AC_LineVisibility = "Täysi"			then AC_LineVisibility = "Full"
			if AC_LineVisibility = "Lyhyt"			then AC_LineVisibility = "Short"
			if AC_LineVisibility = "Piilossa"		then AC_LineVisibility = "Hidden"

			! FRA
			if AC_LineVisibility = "Entier"			then AC_LineVisibility = "Full"
			if AC_LineVisibility = "Court "			then AC_LineVisibility = "Short"
			if AC_LineVisibility = "Masqué "		then AC_LineVisibility = "Hidden"

			! GRE
			if AC_LineVisibility = "Πλήρης"			then AC_LineVisibility = "Full"
			if AC_LineVisibility = "Μικρή"			then AC_LineVisibility = "Short"
			if AC_LineVisibility = "Κρυφή"			then AC_LineVisibility = "Hidden"

			! HUN
			if AC_LineVisibility = "folytonos"		then AC_LineVisibility = "Full"
			if AC_LineVisibility = "Rövid "			then AC_LineVisibility = "Short"
			if AC_LineVisibility = "rejtett"		then AC_LineVisibility = "Hidden"

			! ITA
			if AC_LineVisibility = "Completa"		then AC_LineVisibility = "Full"
			if AC_LineVisibility = "Corta "			then AC_LineVisibility = "Short"
			if AC_LineVisibility = "Nascosta"		then AC_LineVisibility = "Hidden"

			! JPN
			if AC_LineVisibility = "全体"			then AC_LineVisibility = "Full"
			if AC_LineVisibility = "簡易"			then AC_LineVisibility = "Short"
			if AC_LineVisibility = "非表示"			then AC_LineVisibility = "Hidden"

			! KOR
			if AC_LineVisibility = "가득 채우기"		then AC_LineVisibility = "Full"
			if AC_LineVisibility = "짧음"			then AC_LineVisibility = "Short"
			if AC_LineVisibility = "숨기기"			then AC_LineVisibility = "Hidden"

			! NED, FLA
			if AC_LineVisibility = "Volledig"		then AC_LineVisibility = "Full"
			if AC_LineVisibility = "Kort"			then AC_LineVisibility = "Short"
			if AC_LineVisibility = "Verborgen"		then AC_LineVisibility = "Hidden"

			! POL
			if AC_LineVisibility = "Pełna"			then AC_LineVisibility = "Full"
			if AC_LineVisibility = "Krótkie"		then AC_LineVisibility = "Short"
			if AC_LineVisibility = "Ukryte"			then AC_LineVisibility = "Hidden"

			! BRA, POR
			if AC_LineVisibility = "Completo"		then AC_LineVisibility = "Full"
			if AC_LineVisibility = "Pequena"		then AC_LineVisibility = "Short"
			if AC_LineVisibility = "Escondida"		then AC_LineVisibility = "Hidden"

			! RUS
			if AC_LineVisibility = "Сплошная"		then AC_LineVisibility = "Full"
			if AC_LineVisibility = "Короткий"		then AC_LineVisibility = "Short"
			if AC_LineVisibility = "Спрятанный"		then AC_LineVisibility = "Hidden"

			! SPA
			if AC_LineVisibility = "Completo"		then AC_LineVisibility = "Full"
			if AC_LineVisibility = "Corto"			then AC_LineVisibility = "Short"
			if AC_LineVisibility = "Oculto"			then AC_LineVisibility = "Hidden"

			! SWE
			if AC_LineVisibility = "Hel linje"			then AC_LineVisibility = "Full"
			if AC_LineVisibility = "Förkortad Linje"	then AC_LineVisibility = "Short"
			if AC_LineVisibility = "Gömd Linje"			then AC_LineVisibility = "Hidden"

			! TAI
			if AC_LineVisibility = "完全"			then AC_LineVisibility = "Full"
			if AC_LineVisibility = "短"				then AC_LineVisibility = "Short"
			if AC_LineVisibility = "隱藏"			then AC_LineVisibility = "Hidden"

			! TUR
			if AC_LineVisibility = "Tam"			then AC_LineVisibility = "Full"
			if AC_LineVisibility = "Kısa"			then AC_LineVisibility = "Short"
			if AC_LineVisibility = "Gizli"			then AC_LineVisibility = "Hidden"

			! TODO

		! ------------------------------------------------------------------------------
			! AUS, DEN, INT, NOR, NZE, USA
			if	AC_LineVisibility = "Full"			then AC_LineVisibility = stACLineVisibility[1]
			if	AC_LineVisibility = "Short"			then AC_LineVisibility = stACLineVisibility[2]
			if	AC_LineVisibility = "Hidden"		then AC_LineVisibility = stACLineVisibility[3]

			AC_LineVisibility_i = 1		! Full
			if AC_LineVisibility = stACLineVisibility[2] then AC_LineVisibility_i = 2	! Short
			if AC_LineVisibility = stACLineVisibility[3] then AC_LineVisibility_i = 3	! Hidden
			parameters AC_LineVisibility_i = AC_LineVisibility_i
		endif
	else
		returnedActID = 0
	endif

! ==============================================================================

	if DELETED_PAR_VALUE ("cstype_3d", cstype_3d) then
		bHasParameters = DELETED_PAR_VALUE ("cstype_3d_i", cstype_3d_i)

		if not(bHasParameters) | (bHasParameters & cstype_3d_i = 0) then

			! AUT, CHE, GER
			if cstype_3d = "Rechteck"			then cstype_3d = "Rectangle"
			if cstype_3d = "Kreis"				then cstype_3d = "Circle"

			! CHI
			if cstype_3d = "矩形"				then cstype_3d = "Rectangle"
			if cstype_3d = "圆形"				then cstype_3d = "Circle"

			! CZE
			if cstype_3d = "obdélník"			then cstype_3d = "Rectangle"
			if cstype_3d = "kruh"				then cstype_3d = "Circle"

			! FIN
			if cstype_3d = "Suorakaide"			then cstype_3d = "Rectangle"
			if cstype_3d = "Ympyrä"				then cstype_3d = "Circle"

			! FRA
			if cstype_3d = "Rectangle"			then cstype_3d = "Rectangle"
			if cstype_3d = "Cercle"				then cstype_3d = "Circle"

			! GRE
			if cstype_3d = "Ορθογώνιο"			then cstype_3d = "Rectangle"
			if cstype_3d = "Κύκλος"				then cstype_3d = "Circle"

			! HUN
			if cstype_3d = "téglalap"			then cstype_3d = "Rectangle"
			if cstype_3d = "kör"				then cstype_3d = "Circle"

			! ITA
			if cstype_3d = "Rettangolare"		then cstype_3d = "Rectangle"
			if cstype_3d = "Cerchio"			then cstype_3d = "Circle"

			! JPN
			if cstype_3d = "直交型"				then cstype_3d = "Rectangle"
			if cstype_3d = "円"					then cstype_3d = "Circle"

			! KOR
			if cstype_3d = "사각형"				then cstype_3d = "Rectangle"
			if cstype_3d = "원"					then cstype_3d = "Circle"

			! NED, FLA
			if cstype_3d = "Rechthoek"			then cstype_3d = "Rectangle"
			if cstype_3d = "Cirkel"				then cstype_3d = "Circle"

			! POL
			if cstype_3d = "Prostokąt"			then cstype_3d = "Rectangle"
			if cstype_3d = "Okrąg"				then cstype_3d = "Circle"

			! BRA, POR
			if cstype_3d = "Rectângulo"			then cstype_3d = "Rectangle"
			if cstype_3d = "Círculo"			then cstype_3d = "Circle"

			! RUS
			if cstype_3d = "Прямоугольная"		then cstype_3d = "Rectangle"
			if cstype_3d = "Окружность"			then cstype_3d = "Circle"

			! SPA
			if cstype_3d = "Rectángulo"			then cstype_3d = "Rectangle"
			if cstype_3d = "Círculo"			then cstype_3d = "Circle"

			! SWE
			if cstype_3d = "Rektangel"			then cstype_3d = "Rectangle"
			if cstype_3d = "Cirkel"				then cstype_3d = "Circle"

			! TAI
			if cstype_3d = "矩形"				then cstype_3d = "Rectangle"
			if cstype_3d = "圓形"				then cstype_3d = "Circle"

			! TUR
			if cstype_3d = "Dikdörtgen"			then cstype_3d = "Rectangle"
			if cstype_3d = "Çember"				then cstype_3d = "Circle"

			! TODO

		! ------------------------------------------------------------------------------
			! AUS, DEN, INT, NOR, NZE, USA
			if	cstype_3d = "Rectangle"		then cstype_3d = stCStype3D[1]
			if	cstype_3d = "Circle"		then cstype_3d = stCStype3D[2]

			cstype_3d_i = 1		! Rectangle
			if cstype_3d = stCStype3D[2] then cstype_3d_i = 2	! Circle
			parameters cstype_3d_i = cstype_3d_i
		endif
	else
		returnedActID = 0
	endif

! ==============================================================================

	if DELETED_PAR_VALUE ("AC_MarkerType", AC_MarkerType) then
		bHasParameters = DELETED_PAR_VALUE ("AC_MarkerType_i", AC_MarkerType_i)

		if not(bHasParameters) | (bHasParameters & AC_MarkerType_i = 0) then

			! AUT, CHE, GER
			if AC_MarkerType = "Kreis"			then AC_MarkerType = "circle"
			if AC_MarkerType = "Rechteck"		then AC_MarkerType = "square"
			if AC_MarkerType = "Pentagon"		then AC_MarkerType = "pentagon"
			if AC_MarkerType = "Hexagon"		then AC_MarkerType = "hexagon"

			! CHI
			if AC_MarkerType = "圆形"			then AC_MarkerType = "circle"
			if AC_MarkerType = "正方形"			then AC_MarkerType = "square"
			if AC_MarkerType = "五边形"			then AC_MarkerType = "pentagon"
			if AC_MarkerType = "六边形"			then AC_MarkerType = "hexagon"

			! CZE
			if AC_MarkerType = "kruh"			then AC_MarkerType = "circle"
			if AC_MarkerType = "čtverec"		then AC_MarkerType = "square"
			if AC_MarkerType = "pětiúhelník"	then AC_MarkerType = "pentagon"
			if AC_MarkerType = "šestiúhelník"	then AC_MarkerType = "hexagon"

			! FIN
			if AC_MarkerType = "ympyrä"			then AC_MarkerType = "circle"
			if AC_MarkerType = "neliö"			then AC_MarkerType = "square"
			if AC_MarkerType = "viisikulmio"	then AC_MarkerType = "pentagon"
			if AC_MarkerType = "8-kulmio"		then AC_MarkerType = "hexagon"

			! FRA
			if AC_MarkerType = "CERCLE"			then AC_MarkerType = "circle"
			if AC_MarkerType = "carré"			then AC_MarkerType = "square"
			if AC_MarkerType = "pentagone"		then AC_MarkerType = "pentagon"
			if AC_MarkerType = "hexagone"		then AC_MarkerType = "hexagon"

			! GRE
			if AC_MarkerType = "Κύκλος"			then AC_MarkerType = "circle"
			if AC_MarkerType = "Τετράγωνο"		then AC_MarkerType = "square"
			if AC_MarkerType = "Πεντάγωνο"		then AC_MarkerType = "pentagon"
			if AC_MarkerType = "Εξάγωνο"		then AC_MarkerType = "hexagon"

			! HUN
			if AC_MarkerType = "kör"			then AC_MarkerType = "circle"
			if AC_MarkerType = "négyzetes"		then AC_MarkerType = "square"
			if AC_MarkerType = "ötszög"			then AC_MarkerType = "pentagon"
			if AC_MarkerType = "hatszög"		then AC_MarkerType = "hexagon"

			! ITA
			if AC_MarkerType = "circolare"		then AC_MarkerType = "circle"
			if AC_MarkerType = "quadrato"		then AC_MarkerType = "square"
			if AC_MarkerType = "pentagono"		then AC_MarkerType = "pentagon"
			if AC_MarkerType = "esagono"		then AC_MarkerType = "hexagon"

			! JPN
			if AC_MarkerType = "円形"		then AC_MarkerType = "circle"
			if AC_MarkerType = "矩形"		then AC_MarkerType = "square"
			if AC_MarkerType = "五角形"		then AC_MarkerType = "pentagon"
			if AC_MarkerType = "六角形"		then AC_MarkerType = "hexagon"

			! KOR
			if AC_MarkerType = "원"				then AC_MarkerType = "circle"
			if AC_MarkerType = "정사각형"		then AC_MarkerType = "square"
			if AC_MarkerType = "오각형"			then AC_MarkerType = "pentagon"
			if AC_MarkerType = "육각형"			then AC_MarkerType = "hexagon"

			! NED, FLA
			if AC_MarkerType = "cirkel"			then AC_MarkerType = "circle"
			if AC_MarkerType = "Vierkant"		then AC_MarkerType = "square"
			if AC_MarkerType = "Vijfhoek"		then AC_MarkerType = "pentagon"
			if AC_MarkerType = "Zeshoek"		then AC_MarkerType = "hexagon"

			! POL
			if AC_MarkerType = "okrąg"			then AC_MarkerType = "circle"
			if AC_MarkerType = "kwadrat"		then AC_MarkerType = "square"
			if AC_MarkerType = "pięciokąt"		then AC_MarkerType = "pentagon"
			if AC_MarkerType = "sześciokąt"		then AC_MarkerType = "hexagon"

			! BRA, POR
			if AC_MarkerType = "círculo"		then AC_MarkerType = "circle"
			if AC_MarkerType = "quadrado"		then AC_MarkerType = "square"
			if AC_MarkerType = "pentágono"		then AC_MarkerType = "pentagon"
			if AC_MarkerType = "hexágono"		then AC_MarkerType = "hexagon"

			! RUS
			if AC_MarkerType = "окружность"		then AC_MarkerType = "circle"
			if AC_MarkerType = "Квадрат"		then AC_MarkerType = "square"
			if AC_MarkerType = "5-угольник"		then AC_MarkerType = "pentagon"
			if AC_MarkerType = "6-угольник"		then AC_MarkerType = "hexagon"

			! SPA
			if AC_MarkerType = "Círculo"		then AC_MarkerType = "circle"
			if AC_MarkerType = "Cuadrado"		then AC_MarkerType = "square"
			if AC_MarkerType = "pentágono"		then AC_MarkerType = "pentagon"
			if AC_MarkerType = "hexágono"		then AC_MarkerType = "hexagon"

			! SWE
			if AC_MarkerType = "Cirkel"			then AC_MarkerType = "circle"
			if AC_MarkerType = "Kvadrat"		then AC_MarkerType = "square"
			if AC_MarkerType = "Pentagonform"	then AC_MarkerType = "pentagon"
			if AC_MarkerType = "Hexagonform"	then AC_MarkerType = "hexagon"

			! TAI
			if AC_MarkerType = "圓形"		then AC_MarkerType = "circle"
			if AC_MarkerType = "正方形"		then AC_MarkerType = "square"
			if AC_MarkerType = "五邊形"		then AC_MarkerType = "pentagon"
			if AC_MarkerType = "六邊形"		then AC_MarkerType = "hexagon"

			! TUR
			if AC_MarkerType = "çember"		then AC_MarkerType = "circle"
			if AC_MarkerType = "kare"		then AC_MarkerType = "square"
			if AC_MarkerType = "beşgen"		then AC_MarkerType = "pentagon"
			if AC_MarkerType = "altıgen"	then AC_MarkerType = "hexagon"

			! TODO

		! ------------------------------------------------------------------------------
			! AUS, DEN, INT, NOR, NZE, USA
			if	AC_MarkerType = "circle"		then AC_MarkerType = stACMarkerType[1]
			if	AC_MarkerType = "square"		then AC_MarkerType = stACMarkerType[2]
			if	AC_MarkerType = "pentagon"		then AC_MarkerType = stACMarkerType[3]
			if	AC_MarkerType = "hexagon"		then AC_MarkerType = stACMarkerType[4]

			AC_MarkerType_i = 1		! circle
			if AC_MarkerType = stACMarkerType[2] then AC_MarkerType_i = 2	! square
			if AC_MarkerType = stACMarkerType[3] then AC_MarkerType_i = 3	! pentagon
			if AC_MarkerType = stACMarkerType[4] then AC_MarkerType_i = 4	! hexagon

			parameters AC_MarkerType_i = AC_MarkerType_i
		endif
	else
		returnedActID = 0
	endif

	if returnedActID = 1 then
		actualGUID = "B286E7FF-8856-42D5-B293-6084B1784DB2"
	else
		actualGUID = ""
	endif
endif


! ==============================================================================
! Set migration GUID
! ==============================================================================

setmigrationguid actualGUID
]]>
</Script_FWM>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_BWM SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
bContinue = 1

! ==============================================================================
! New integer parameter AC16 --> AC15
! ==============================================================================

if bContinue then
	! from B286E7FF-8856-42D5-B293-6084B1784DB2 to 14B9B303-491C-49DB-B71E-09E6147BD4B5

	targetGUID = "14B9B303-491C-49DB-B71E-09E6147BD4B5"
	if TO_GUID = "14B9B303-491C-49DB-B71E-09E6147BD4B5" then bContinue = 0
endif

! ==============================================================================
! Set migration GUID
! ==============================================================================

setmigrationguid targetGuid
]]>
</Script_BWM>

<MigrationTable SectVersion="1" SectionFlags="0" SubIdent="0">
	<MigrationTableElement>
		<MainGUID>14B9B303-491C-49DB-B71E-09E6147BD4B5</MainGUID>
		<Version>15</Version>
		<Name><![CDATA[""]]></Name>
		<AutoMigration>false</AutoMigration>
	</MigrationTableElement>
</MigrationTable>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_PR SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_PR>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_UI SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_UI>

<Keywords SectVersion="1" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Keywords>

<Comment SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Comment>

</Symbol>
