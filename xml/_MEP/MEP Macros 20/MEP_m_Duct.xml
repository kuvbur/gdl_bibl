<?xml version="1.0" encoding="UTF-8"?>
<Symbol IsArchivable="false" IsPlaceable="false" MainGUID="6A7B4B9E-95E2-421C-8BC5-CA2FE2B83906" MigrationValue="Normal" Owner="1196638531" Signature="1196644685" Version="43">
<Ancestry SectVersion="1" SectionFlags="0" SubIdent="0" Template="false">
	<MainGUID>F938E33A-329D-4A36-BE3E-85E126820996</MainGUID>
	<MainGUID>103E8D2C-8230-42E1-9597-46F84CCE28C0</MainGUID>
	<MainGUID>B2970E4C-8680-4061-8670-2F4B638F3953</MainGUID>
</Ancestry>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_3D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
! MEP_m_Duct
! Zsolt Feke/2007


RESOL res
PEN gs_cont_pen

IF gs_detlevel_3D = `Откл.` THEN END

HptsUnIDBeginForConnEnds = 30000

hceID_1 = HptsUnIDBeginForConnEnds+100
hceID_2 = HptsUnIDBeginForConnEnds+200

operatedMode = 0
addStatus = 0
IF GLOB_CONTEXT > 40 AND GLOB_CONTEXT < 50 THEN
	operatedMode = 1
	addStatus = 3
ENDIF

IF macroCallin2D AND GLOB_CONTEXT <> 5 AND AC_AutoOnStoryVisibility THEN
	IF ABS(shapeTypeA-shapeTypeB) < EPS OR ABS(ductHalfWidthA-ductHalfWidthB) < EPS OR ABS(ductHalfHeightA-ductHalfHeightB) < EPS THEN
		IF SGN(dz) <> 0 AND SGN(dx) <> 0 OR SGN(dz) <> 0 AND SGN(dy) <> 0 THEN
			Length=SQR(dx^2+dy^2)
			ar = ABS(dz)/MEP_StraightLength
			br = Length/MEP_StraightLength

			IF ABS(shapeTypeA - 2) < EPS THEN
				decreaseLenA = MAX((ductHalfWidthA+MEP_InsThickness)*br*MEP_InsShow, connectorHalfWidthA*br+connectorLengthA*2*ar)
				decreaseLenB = MAX((ductHalfWidthA+MEP_InsThickness)*br*MEP_InsShow, connectorHalfWidthB*br+connectorLengthA*2*ar)
			ELSE
				 IF ABS(MEP_Position[3][3]) > EPS THEN
					ductHalfHeightA_temp 		= ductHalfHeightA
					ductHalfHeightA 			= ductHalfWidthA
					connectorHalfHeightA_temp 	= connectorHalfHeightA
					connectorHalfHeightA 		= connectorHalfWidthA
					connectorHalfHeightB_temp 	= connectorHalfHeightB
					connectorHalfHeightB 		= connectorHalfWidthB
				ENDIF
				decreaseLenA = MAX((ductHalfHeightA+MEP_InsThickness)*br*MEP_InsShow, connectorHalfHeightA*br+connectorLengthA*2*ar)
				decreaseLenB = MAX((ductHalfHeightA+MEP_InsThickness)*br*MEP_InsShow, connectorHalfHeightB*br+connectorLengthA*2*ar)
			ENDIF
			decreaseLen = MAX(decreaseLenA, decreaseLenB)

			dz = ABS(dz)
			dz_temp = dz
			dz = dz - decreaseLen*2

			specCase = 0
			IF dz < EPS THEN specCase = 1

			SYMB_POS_Z_temp = SYMB_POS_Z
			IF rz1 > rz2 THEN
				SYMB_POS_Z 	= SYMB_POS_Z-dz_temp+decreaseLen
			ELSE
				SYMB_POS_Z 	= SYMB_POS_Z+decreaseLen
			ENDIF

			diffZLA = GLOB_CSTORY_ELEV-SYMB_POS_Z		! ha - akkor felette van
			diffZUA = GLOB_CSTORY_ELEV+GLOB_CSTORY_HEIGHT-SYMB_POS_Z ! ha + akkor alatta van

			diffZLB = GLOB_CSTORY_ELEV-SYMB_POS_Z-dz		! ha - akkor felette van
			diffZUB = GLOB_CSTORY_ELEV+GLOB_CSTORY_HEIGHT-SYMB_POS_Z-dz ! ha + akkor alatta van

			IF specCase THEN
				addZL = -diffZLA-decreaseLen*2
				addZU = decreaseLen*2-diffZUB
			ELSE
				IF diffZLA < EPS AND SGN(diffZUA) = 1 THEN addZL = -diffZLA-decreaseLen*2

				IF SGN(diffZLA) = -1 AND diffZUA < EPS THEN addZU = -diffZUA-decreaseLen*2+decreaseLen*nn

				IF SGN(diffZLB) = -1 AND diffZUB > EPS THEN addZU = decreaseLen*2-diffZUB

				IF diffZLB > EPS AND SGN(diffZUB) = 1 THEN addZL = decreaseLen*2-diffZLB
			ENDIF

			SYMB_POS_Z = SYMB_POS_Z_temp
			dz = dz_temp

			ADDz GLOB_CSTORY_ELEV-SYMB_POS_Z+addZL
			CUTPLANE{2} 180, 1
			DEL 1

			ADDz GLOB_CSTORY_ELEV+GLOB_CSTORY_HEIGHT-SYMB_POS_Z+addZU
			CUTPLANE{2} 0, 1
			DEL 1

			IF ABS(MEP_Position[3][3]) > EPS AND ABS(shapeTypeA - 2) > EPS THEN
				ductHalfHeightA 		= ductHalfHeightA_temp
				connectorHalfHeightA 	= connectorHalfHeightA_temp
				connectorHalfHeightB 	= connectorHalfHeightB_temp
			ENDIF
		ENDIF
	ENDIF
ENDIF

IF gs_detlevel_3D = `Простой` THEN
	connectorLengthA = 0
	connectorLengthB = 0
ENDIF


IF duct_show THEN		! -----> duct straight <----- !

	MATERIAL gs_DuctMat

	IF MEP_NumberConnections > 2 AND operatedMode < EPS THEN
		ith = 0
		insul = 0
		GOSUB 400

		GROUP "ductStraight"
	ENDIF

	XFORM   MEP_Position[2][1], MEP_Position[3][1], dZx, MEP_Position[1][1],
			MEP_Position[2][2], MEP_Position[3][2], dZy, MEP_Position[1][2],
			MEP_Position[2][3], MEP_Position[3][3], dZz, MEP_Position[1][3]

	ROTy 90

	alpha_i = 360/res
	cSnum = (res+4)/4

	ADDz connectorLengthA

	ww = ductHalfWidthA: dd = ductHalfHeightA
	rr = ductHalfWidthA*(shapeTypeA < 3)+(MIN(ductHalfWidthA, ductHalfHeightA))*(ABS(shapeTypeA - 3) < EPS)
	yy = 0: zz = 0: mm = 1*(NOT(ABS(shapeTypeA - 1) < EPS AND ABS(shapeTypeA - shapeTypeB) < EPS))
	GOSUB 100+shapeTypeA


	ww = ductHalfWidthB: dd = ductHalfHeightB
	rr = ductHalfWidthB*(shapeTypeB < 3)+(MIN(ductHalfWidthB, ductHalfHeightB))*(ABS(shapeTypeB - 3) < EPS)
	yy = MEP_offset_y: zz = -MEP_offset_z: mm = MEP_StraightLength-connectorLengthA-connectorLengthB
	GOSUB 100+shapeTypeB

	RULED NSP/6, addStatus+4+16+32,

		GET(NSP)

	DEL 3

	IF MEP_NumberConnections > 2 AND operatedMode < EPS THEN
		ENDGROUP
		PLACEGROUP SUBGROUP("ductStraight", "holes")
	ENDIF

	IF ABS(shapeTypeA - 1) > EPS OR ABS(shapeTypeB - 1) > EPS THEN
		XFORM   MEP_Position[2][1], MEP_Position[3][1], dZx, MEP_Position[1][1],
				MEP_Position[2][2], MEP_Position[3][2], dZy, MEP_Position[1][2],
				MEP_Position[2][3], MEP_Position[3][3], dZz, MEP_Position[1][3]
		ROTy 90

		BASE
		VERT    0,    0,    0
		VERT    ductHalfWidthA,    0,    0
		VERT    0,    1,    0
		VERT    0,    0,    1
		COOR    3,    -1,   -2,    -3,    -4

		DEL 2
	ENDIF
	BODY -1
ENDIF


XFORM   MEP_Position[2][1], MEP_Position[3][1], dZx, MEP_Position[1][1],
		MEP_Position[2][2], MEP_Position[3][2], dZy, MEP_Position[1][2],
		MEP_Position[2][3], MEP_Position[3][3], dZz, MEP_Position[1][3]

IF duct_show AND showHtps THEN
	IF editable AND ABS(MEP_offset_y) < EPS AND ABS(MEP_offset_z) < EPS AND connectedA + connectedB < 1 + EPS THEN
		HOTSPOT 0, 0, 0, hceID_1, MEP_StraightLength, 1+256*(connectedA < EPS)
		HOTSPOT -1, 0, 0, HptsUnIDBeginForConnEnds, MEP_StraightLength, 3
		IF ABS(connectedA) < EPS AND ABS(connectedB - 1) < EPS THEN
			hID = hceID_2+1
			IF nonEditHtps THEN
				ROTy 90
				HOTSPOT -MEP_offset_z, MEP_offset_y, MEP_StraightLength, hceID_2
				DEL 1
			ENDIF
		ELSE
			hID = hceID_2
		ENDIF
		HOTSPOT MEP_StraightLength, 0, 0, hID, MEP_StraightLength, 2+128*connectedB
	ELSE
		IF nonEditHtps THEN
			ROTy 90
			HOTSPOT 0, 0, 0, hceID_1
			HOTSPOT -MEP_offset_z, MEP_offset_y, MEP_StraightLength, hceID_2
			DEL 1
		ENDIF
	ENDIF
ENDIF

ROTy 90

IF GLOB_CONTEXT < 41 OR GLOB_CONTEXT > 49 THEN
	IF MEP_cline_show_3D THEN LIN_ 0, 0, 0, -MEP_offset_z, MEP_offset_y, MEP_StraightLength
	IF MEP_StatusLine THEN HOTLINE 0, 0, 0, 0, 0, MEP_StraightLength, 0
ENDIF


IF duct_show THEN		! -----> duct flanges <----- !
	MATERIAL gs_DuctMat

	IF flangeA THEN
		length		= connectorLengthA
		halfWidth 	= ductHalfWidthA
		halfHeight 	= ductHalfHeightA
		halfWidthC 	= connectorHalfWidthA
		halfHeightC = connectorHalfHeightA

		GOSUB 200+shapeTypeA
	ENDIF

	IF flangeB THEN
		length = connectorLengthB
		halfWidth 	= ductHalfWidthB
		halfHeight 	= ductHalfHeightB
		halfWidthC 	= connectorHalfWidthB
		halfHeightC = connectorHalfHeightB

		ADD -MEP_offset_z, MEP_offset_y, MEP_StraightLength-connectorLengthB
			GOSUB 200+shapeTypeB
		DEL 1
	ENDIF
	BODY -1
ENDIF
DEL 2


IF MEP_InsShow THEN			! -----> insulation <----- !
	MATERIAL gs_InsMat

	ductInsHalfWidthA 	= ductHalfWidthA+MEP_InsThickness
	ductInsHalfHeightA 	= ductHalfHeightA+MEP_InsThickness

	ductInsHalfWidthB 	= ductHalfWidthB+MEP_InsThickness
	ductInsHalfHeightB 	= ductHalfHeightB+MEP_InsThickness

	IF MEP_NumberConnections > 2 AND operatedMode < EPS THEN
		ith = MEP_InsThickness
		insul = 1
		GOSUB 400

		GROUP "ductStraightIns"
	ENDIF

	XFORM   MEP_Position[2][1], MEP_Position[3][1], dZx, MEP_Position[1][1],
			MEP_Position[2][2], MEP_Position[3][2], dZy, MEP_Position[1][2],
			MEP_Position[2][3], MEP_Position[3][3], dZz, MEP_Position[1][3]

	ROTy 90

	alpha_i = 360/res
	cSnum = (res+4)/4

	ww = ductInsHalfWidthA: dd = ductInsHalfHeightA
	rr = ductInsHalfWidthA*(shapeTypeA < 3)+(MIN(ductInsHalfWidthA, ductInsHalfHeightA))*(ABS(shapeTypeA - 3) < EPS)
	yy = 0: zz = 0: mm = 1*(NOT(ABS(shapeTypeA - 1) < EPS AND ABS(shapeTypeA - shapeTypeB) < EPS))
	GOSUB 100+shapeTypeA

	ww = ductInsHalfWidthB: dd = ductInsHalfHeightB
	rr = ductInsHalfWidthB*(shapeTypeB < 3)+(MIN(ductInsHalfWidthB, ductInsHalfHeightB))*(ABS(shapeTypeB - 3) < EPS)
	yy = MEP_offset_y: zz = -MEP_offset_z: mm = MEP_StraightLength
	GOSUB 100+shapeTypeB

	RULED NSP/6, addStatus+4+16+32,

		GET(NSP)

	DEL 2

	IF MEP_NumberConnections > 2 AND operatedMode < EPS THEN
		ENDGROUP
		PLACEGROUP SUBGROUP("ductStraightIns", "holesIns")
	ENDIF

	IF ABS(shapeTypeA - 1) > EPS OR ABS(shapeTypeB - 1) > EPS THEN
		XFORM   MEP_Position[2][1], MEP_Position[3][1], dZx, MEP_Position[1][1],
				MEP_Position[2][2], MEP_Position[3][2], dZy, MEP_Position[1][2],
				MEP_Position[2][3], MEP_Position[3][3], dZz, MEP_Position[1][3]
		ROTy 90

		BASE
		VERT    0,    0,    0
		VERT    ductHalfWidthA+MEP_InsThickness,    0,    0
		VERT    0,    1,    0
		VERT    0,    0,    1
		COOR    3,    -1,   -2,    -3,    -4

		DEL 2
	ENDIF
	BODY -1
ENDIF


IF macroCallin2D AND GLOB_CONTEXT <> 5 AND AC_AutoOnStoryVisibility THEN
	IF ABS(shapeTypeA-shapeTypeB) < EPS OR ABS(ductHalfWidthA-ductHalfWidthB) < EPS OR ABS(ductHalfHeightA-ductHalfHeightB) < EPS THEN
		IF SGN(dz) <> 0 AND SGN(dx) <> 0 OR SGN(dz) <> 0 AND SGN(dy) <> 0 THEN
			CUTEND
			CUTEND
		ENDIF
	ENDIF
ENDIF

END

					! ----------------- !
					! -- Rectangular -- !
					! ----------------- !
101:
	IF ABS(shapeTypeA - shapeTypeB) < EPS THEN cSnum = 1

	FOR i = 1 TO cSnum
		PUT dd+zz, ww+yy, mm
	NEXT i

	FOR i = 1 TO cSnum
		PUT -dd+zz, ww+yy, mm
	NEXT i

	FOR i = 1 TO cSnum
		PUT -dd+zz, -ww+yy, mm
	NEXT i

	FOR i = 1 TO cSnum
		PUT dd+zz, -ww+yy, mm
	NEXT i
RETURN

201:
	PRISM_ 10, length,
		halfHeightC, halfWidthC, 15,
		-halfHeightC, halfWidthC, 15,
		-halfHeightC, -halfWidthC, 15,
		halfHeightC, -halfWidthC, 15,
		halfHeightC, halfWidthC, -1,
		halfHeight, halfWidth, 15,
		-halfHeight, halfWidth, 15,
		-halfHeight, -halfWidth, 15,
		halfHeight, -halfWidth, 15,
		halfHeight, halfWidth, -1
RETURN

301:
!!	CUTPOLYA 5, 2, dist,
	PRISM_ 5, dist,
		halfHeight, halfWidth, mm,
		-halfHeight, halfWidth, nn,
		-halfHeight, -halfWidth, mm,
		halfHeight, -halfWidth, nn,
		halfHeight, halfWidth, -1
RETURN


					! ---------------- !
					! --- Circular --- !
					! ---------------- !
102:
	 alpha = 0: kk = 0
	IF ABS(shapeTypeA - 2) > EPS OR ABS(shapeTypeB - 2) > EPS THEN kk = 1
	FOR j = 1 TO 4
		FOR i = 1 TO (res+4*kk)/4
			PUT rr*COS(alpha)+zz, rr*SIN(alpha)+yy, mm
			IF NOT(kk) THEN alpha = alpha + alpha_i
			IF kk THEN alpha = alpha + alpha_i*(NOT(i = cSnum))
		NEXT i
	NEXT j
RETURN

202:
	PRISM_ 4, length,
		0, 0, 979,
		halfWidthC, 360, 4079,
		0, 0, 979,
		halfWidth, 360, 4079
RETURN

302:
!!	CUTPOLYA 2, 2, dist,
	PRISM_ 2, dist,
		0, 0, 908,
		halfWidth, 360, 4008
RETURN


					! ---------------- !
					! ----- Oval ----- !
					! ---------------- !
103:
	IF ww > dd THEN
		 alpha = 0
		FOR j = 1 TO 4
			 dWD = (ww-dd)*(j <= 2)-(ww-dd)*(j > 2)
			FOR i = 1 TO (res+4)/4
				PUT rr*COS(alpha)+zz, rr*SIN(alpha)+yy+dWD, mm
				 alpha = alpha + alpha_i*(NOT(i = cSnum))
			NEXT i
		NEXT j
	ELSE
		 alpha = 0
		FOR j = 1 TO 4
			 dWD = (ww-dd)*(j = 2 OR j = 3 )-(ww-dd)*(j = 1 OR j = 4)
			FOR i = 1 TO (res+4)/4
				PUT rr*COS(alpha)+zz+dWD, rr*SIN(alpha)+yy, mm
				 alpha = alpha + alpha_i*(NOT(i = cSnum))
			NEXT i
		NEXT j
	ENDIF
RETURN

203:
	IF ABS(halfWidth-halfHeight) < EPS THEN
		PRISM_ 4, length,
			0, 0, 979,
			halfWidthC, 360, 4079,
			0, 0, 979,
			halfWidth, 360, 4079
	ENDIF
	IF NOT(ABS(halfWidth-halfHeight) < EPS) AND halfWidth > halfHeight THEN
		rrC = halfHeightC
		rr = halfHeight
		PRISM_ 12, length,
			halfHeightC, -halfWidthC+rrC, 79,
			halfHeightC, halfWidthC-rrC, 79,
			-halfHeightC, halfWidthC-rrC, 1079,
			-halfHeightC, -halfWidthC+rrC, 79,
			halfHeightC, -halfWidthC+rrC, 1079,
			halfHeightC, -halfWidthC+rrC, -1,
			halfHeight, -halfWidth+rr, 79,
			halfHeight, halfWidth-rr, 79,
			-halfHeight, halfWidth-rr, 1079,
			-halfHeight, -halfWidth+rr, 79,
			halfHeight, -halfWidth+rr, 1079,
			halfHeight, -halfWidth+rr, -1
	ENDIF
	IF NOT(ABS(halfWidth-halfHeight) < EPS) AND halfWidth < halfHeight THEN
		rrC = halfWidthC
		rr = halfWidth
		PRISM_ 12, length,
			halfHeightC-rrC, halfWidthC, 79,
			-halfHeightC+rrC, halfWidthC, 79,
			-halfHeightC+rrC, -halfWidthC, 1079,
			halfHeightC-rrC, -halfWidthC, 79,
			halfHeightC-rrC, halfWidthC, 1079,
			halfHeightC-rrC, halfWidthC, -1,
			halfHeight-rr, halfWidth, 79,
			-halfHeight+rr, halfWidth, 79,
			-halfHeight+rr, -halfWidth, 1079,
			halfHeight-rr, -halfWidth, 79,
			halfHeight-rr, halfWidth, 1079,
			halfHeight-rr, halfWidth, -1
	ENDIF
RETURN

303:
	IF ABS(halfWidth-halfHeight) < EPS THEN
!!		CUTPOLYA 2, 2, dist,
		PRISM_ 2, dist,
			0, 0, 908,
			halfWidth, 360, 4008
	ENDIF
	IF NOT(ABS(halfWidth-halfHeight) < EPS) AND halfWidth > halfHeight THEN
		rrC = halfHeightC
		rr = halfHeight
!!		CUTPOLYA 6, 2, dist,
		PRISM_ 6, dist,
			halfHeight, -halfWidth+rr, 8,
			halfHeight, halfWidth-rr, 8,
			-halfHeight, halfWidth-rr, 1008,
			-halfHeight, -halfWidth+rr, 8,
			halfHeight, -halfWidth+rr, 1008,
			halfHeight, -halfWidth+rr, -1
	ENDIF
	IF NOT(ABS(halfWidth-halfHeight) < EPS) AND halfWidth < halfHeight THEN
		rrC = halfWidthC
		rr = halfWidth
!!		CUTPOLYA 6, 2, dist,
		PRISM_ 6, dist,
			halfHeight-rr, halfWidth, 8,
			-halfHeight+rr, halfWidth, 8,
			-halfHeight+rr, -halfWidth, 1008,
			halfHeight-rr, -halfWidth, 8,
			halfHeight-rr, halfWidth, 1008,
			halfHeight-rr, halfWidth, -1
	ENDIF
RETURN

400:
	IF insul < 1 THEN
		GROUP "holes"
	ELSE
		GROUP "holesIns"
	ENDIF

	FOR j = 3 TO MEP_NumberConnections

		halfWidth 	= MEP_NumConnectionData[j][12]/2+MEP_NumConnectionData[j][14]+ith
		halfHeight 	= MEP_NumConnectionData[j][13]/2+MEP_NumConnectionData[j][14]+ith

		DIM tMatrix[][]

		tMatrix[1][1] = MEP_NumConnectionData[j][4]
		tMatrix[1][2] = MEP_NumConnectionData[j][5]
		tMatrix[1][3] = MEP_NumConnectionData[j][6]

		tMatrix[2][1] = MEP_NumConnectionData[j][7]
		tMatrix[2][2] = MEP_NumConnectionData[j][8]
		tMatrix[2][3] = MEP_NumConnectionData[j][9]

		tMatrix[3][1] = -tMatrix[2][2]*tMatrix[1][3]+tMatrix[2][3]*tMatrix[1][2]
		tMatrix[3][2] = -tMatrix[2][3]*tMatrix[1][1]+tMatrix[2][1]*tMatrix[1][3]
		tMatrix[3][3] = -tMatrix[2][1]*tMatrix[1][2]+tMatrix[2][2]*tMatrix[1][1]

		XFORM	tMatrix[1][1], tMatrix[2][1], tMatrix[3][1], MEP_NumConnectionData[j][1],
				tMatrix[1][2], tMatrix[2][2], tMatrix[3][2], MEP_NumConnectionData[j][2],
				tMatrix[1][3], tMatrix[2][3], tMatrix[3][3], MEP_NumConnectionData[j][3]

		mm = 8: nn = 8
		halfWidth 	= halfWidth - 0.00002
		halfHeight 	= halfHeight - 0.00002

		ROTy 90

		ax = MEP_Position[2][1]
		ay = MEP_Position[2][2]
		az = MEP_Position[2][3]

		bx = MEP_NumConnectionData[j][7]
		by = MEP_NumConnectionData[j][8]
		bz = MEP_NumConnectionData[j][9]

		arcVal = (ax*bx + ay*by + az*bz)/((SQR(ax^2+ay^2+az^2))*(SQR(bx^2+by^2+bz^2)))
		IF arcVal < -1 THEN arcVal = -1
		IF arcVal > 1 THEN arcVal = 1
		angY = ACS(arcVal)

		bx = MEP_NumConnectionData[j][4]
		by = MEP_NumConnectionData[j][5]
		bz = MEP_NumConnectionData[j][6]

		arcVal = (ax*bx + ay*by + az*bz)/((SQR(ax^2+ay^2+az^2))*(SQR(bx^2+by^2+bz^2)))
		IF arcVal < -1 THEN arcVal = -1
		IF arcVal > 1 THEN arcVal = 1
		ang = ACS(arcVal)

		IF ABS(MEP_NumConnectionData[1][21] - 2) < EPS THEN
			dist = ductHalfWidthA/SIN(ang)+MEP_NumConnectionData[j][23]
		ELSE
			tMatrix[1][1] = MEP_Position[2][1]
			tMatrix[1][2] = MEP_Position[2][2]
			tMatrix[1][3] = MEP_Position[2][3]

			tMatrix[2][1] = MEP_NumConnectionData[j][4]
			tMatrix[2][2] = MEP_NumConnectionData[j][5]
			tMatrix[2][3] = MEP_NumConnectionData[j][6]

			tMatrix[3][1] = -tMatrix[2][2]*tMatrix[1][3]+tMatrix[2][3]*tMatrix[1][2]
			tMatrix[3][2] = -tMatrix[2][3]*tMatrix[1][1]+tMatrix[2][1]*tMatrix[1][3]
			tMatrix[3][3] = -tMatrix[2][1]*tMatrix[1][2]+tMatrix[2][2]*tMatrix[1][1]

			ax = MEP_Position[3][1]
			ay = MEP_Position[3][2]
			az = MEP_Position[3][3]

			bx = tMatrix[3][1]
			by = tMatrix[3][2]
			bz = tMatrix[3][3]

			ab = ay*bz-az*by - (ax*bz-az*bx) + (ax*by - ay*bx)

			IF ABS(ab) < EPS THEN
				dist = ductHalfHeightA/SIN(ang)+MEP_NumConnectionData[j][23]
			ELSE
				dist = ductHalfWidthA/SIN(ang)+MEP_NumConnectionData[j][23]
			ENDIF
		ENDIF

		ADDz -dist

		ang_temp = ang
		IF ang_temp > 90 AND angY < 90 THEN ang = ang_temp/2
		IF ang_temp < 90 AND angY < 90 THEN ang = ang_temp*2
		IF ABS(ang_temp - 90) < EPS THEN ang = ang_temp

		CUTPLANE 90+ang

		ADDz -dist
		dist = dist*6

		GOSUB 300+MEP_NumConnectionData[j][21]

		CUTEND

		DEL 4
	NEXT j
	ENDGROUP
RETURN
]]>
</Script_3D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_2D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
! MEP_m_Duct
! Zsolt Feke/2007


PEN gs_cont_pen
IF gs_fill_pen THEN SET FILL gs_fill_type

IF ABS(dx) < EPS THEN dx = 0
IF ABS(dy) < EPS THEN dy = 0
IF ABS(dz) < EPS THEN dz = 0

HptsUnIDBeginForConnEnds = 30000

hceID_1 = HptsUnIDBeginForConnEnds+100
hceID_2 = HptsUnIDBeginForConnEnds+200

IF SGN(dz) = 0 THEN		! -----> the duct in the xy-plane <----- !

	ADD2 rx1, ry1
	ROT2 dirAngOnXYPlane

	IF ABS(MEP_Position[3][3]) < EPS THEN
		offset = MEP_offset_y
		IF SGN(dZz) = -1 THEN MUL2 1, -1
	ELSE
		offset = -MEP_offset_z
		IF SGN(MEP_Position[3][3]) = -1 THEN MUL2 1, -1
	ENDIF

	IF editable AND ABS(MEP_offset_y) < EPS AND ABS(MEP_offset_z) < EPS AND connectedA + connectedB < 1 + EPS THEN
		HOTSPOT2 0, 0, hceID_1, MEP_StraightLength, 1+256*(connectedA < EPS)
		HOTSPOT2 -1, 0, HptsUnIDBeginForConnEnds, MEP_StraightLength, 3
		IF ABS(connectedA) < EPS AND ABS(connectedB - 1) < EPS THEN
			hID = hceID_2+1
			HOTSPOT2 MEP_StraightLength, offset, hceID_2
		ELSE
			hID = hceID_2
		ENDIF
		HOTSPOT2 MEP_StraightLength, 0, hID, MEP_StraightLength, 2+128*connectedB
	ELSE
		HOTSPOT2 0, 0, hceID_1
		HOTSPOT2 MEP_StraightLength, offset, hceID_2
	ENDIF

	IF ABS(ABS(MEP_Position[3][3])-1) < EPS AND ABS(shapeTypeA - 2) > EPS THEN
		ductHalfWidthA_temp = ductHalfWidthA
		ductHalfWidthA = ductHalfHeightA
		connectorHalfWidthA_temp = connectorHalfWidthA
		connectorHalfWidthA = connectorHalfHeightA
	ENDIF

	IF ABS(ABS(MEP_Position[3][3])-1) < EPS AND ABS(shapeTypeB - 2) > EPS THEN
		ductHalfWidthB_temp = ductHalfWidthB
		ductHalfWidthB = ductHalfHeightB
		connectorHalfWidthB_temp = connectorHalfWidthB
		connectorHalfWidthB = connectorHalfHeightB
	ENDIF

	IF ABS(MEP_NumConnectionData[1][21] - 1) < EPS AND\
			ABS(MEP_NumConnectionData[2][21] - 1) < EPS AND\
			ABS(MEP_NumConnectionData[1][12] - MEP_NumConnectionData[2][12]) < EPS AND\
			ABS(MEP_NumConnectionData[1][13] - MEP_NumConnectionData[2][13]) < EPS THEN
		HOTSPOT2 0, ductHalfWidthA, HptsUnIDBeginForConnEnds+1
		HOTSPOT2 0, -ductHalfWidthA, HptsUnIDBeginForConnEnds+2

		HOTSPOT2 MEP_StraightLength, offset+ductHalfWidthA, HptsUnIDBeginForConnEnds+3
		HOTSPOT2 MEP_StraightLength, offset-ductHalfWidthA, HptsUnIDBeginForConnEnds+4
	ENDIF

	IF flangeA THEN
		PUT connectorLengthA, ductHalfWidthA, 1
		PUT connectorLengthA, connectorHalfWidthA, 1
		PUT 0, connectorHalfWidthA, 1
		PUT 0, -connectorHalfWidthA, 1
		PUT connectorLengthA, -connectorHalfWidthA, 1
		PUT connectorLengthA, -ductHalfWidthA, 1

		LINE2 connectorLengthA, -ductHalfWidthA, connectorLengthA, ductHalfWidthA
	ELSE
		PUT 0, ductHalfWidthA, 1
		PUT 0, -ductHalfWidthA, 1
	ENDIF

	IF flangeB THEN
		PUT MEP_StraightLength-connectorLengthB, offset-ductHalfWidthB, 1
		PUT MEP_StraightLength-connectorLengthB, offset-connectorHalfWidthB, 1
		PUT MEP_StraightLength, offset-connectorHalfWidthB, 1
		PUT MEP_StraightLength, offset+connectorHalfWidthB, 1
		PUT MEP_StraightLength-connectorLengthB, offset+connectorHalfWidthB, 1
		PUT MEP_StraightLength-connectorLengthB, offset+ductHalfWidthB, 1

		LINE2 MEP_StraightLength-connectorLengthB, offset-ductHalfWidthB, MEP_StraightLength-connectorLengthB, offset+ductHalfWidthB
	ELSE
		PUT MEP_StraightLength, offset-ductHalfWidthB, 1
		PUT MEP_StraightLength, offset+ductHalfWidthB, 1
	ENDIF

	POLY2_B NSP/3, 1+2+4+64, gs_fill_pen, gs_back_pen,

		GET (NSP)

	IF MEP_InsShow THEN			! -----> insulation <----- !
		PEN gs_cont_pen
		POLY2_ 5, 1,
			0, ductHalfWidthA+MEP_InsThickness, 0,
			0, -ductHalfWidthA-MEP_InsThickness, 1,
			MEP_StraightLength, offset-ductHalfWidthB-MEP_InsThickness, 0,
			MEP_StraightLength, offset+ductHalfWidthB+MEP_InsThickness, 1,
			0, ductHalfWidthA+MEP_InsThickness, -1
	ENDIF

	IF MEP_cline_show THEN		! -----> center line <----- !
		PEN MEP_cline_pen
		SET LINE_TYPE MEP_cline_type

		LINE2 0, 0, MEP_StraightLength, offset

		HOTLINE2 0, 0, MEP_StraightLength, offset
	ENDIF
	END
ENDIF


		! -----> if it is reducer and there is no in the xy-plane <----- !

IF ABS(shapeTypeA-shapeTypeB) > EPS OR ABS(ductHalfWidthA-ductHalfWidthB) > EPS OR ABS(ductHalfHeightA-ductHalfHeightB) > EPS THEN
	rx = rx1+MEP_Position[2][1]*MEP_StraightLength+MEP_Position[3][1]*MEP_offset_y+dZx*MEP_offset_z
	ry = ry1+MEP_Position[3][2]*MEP_offset_y+MEP_Position[2][2]*MEP_StraightLength+dZy*MEP_offset_z

	HOTSPOT2 rx1, ry1, hceID_1
	HOTSPOT2 rx, ry, hceID_2

	SET FILL gs_fill_type

	PEN gs_cont_pen
	IF gs_fill_pen THEN PEN gs_fill_pen
	PROJECT2{3} 3, 270, 3+32, 4, gs_back_pen, 0, 0, 0, PARAMETERS duct_show = 1, MEP_InsShow = 0, MEP_cline_show_3D = 0, gs_detlevel_3D = `Детальный`
	PEN gs_cont_pen
	PROJECT2{3} 3, 270, 2, 8, 0, 0, 0, 0, PARAMETERS duct_show = 1, MEP_InsShow = 0, MEP_cline_show_3D = 0, gs_detlevel_3D = `Детальный`

	IF MEP_InsShow THEN PROJECT2{3} 3, 270, 2, 8, gs_back_pen, 0, 0, 0, PARAMETERS duct_show = 0, MEP_InsShow = 1, MEP_cline_show_3D = 0, gs_detlevel_3D = `Детальный`

	IF MEP_cline_show THEN		! -----> center line <----- !
		PEN MEP_cline_pen
		SET LINE_TYPE MEP_cline_type

		PROJECT2{3} 3, 270, 3+32, 8, 0, 0, 0, 0, PARAMETERS macroCallin2D = 1, duct_show = 0, MEP_InsShow = 0, MEP_cline_show_3D = 1, gs_detlevel_3D = `Детальный`
	ENDIF

	HOTLINE2 rx1, ry1, rx, ry
	END
ENDIF


IF rz1 > rz2 THEN
	dz = ABS(dz)

	SYMB_POS_Z_temp = SYMB_POS_Z
	SYMB_POS_Z 		= SYMB_POS_Z-dz

	flangeA_temp 	= flangeA
	flangeA 		= flangeB
	flangeB 		= flangeA_temp

	ductHalfWidthA_temp			= ductHalfWidthA
	ductHalfWidthA				= ductHalfWidthB
	ductHalfWidthB				= ductHalfWidthA_temp

	ductHalfHeightA_temp		= ductHalfHeightA
	ductHalfHeightA				= ductHalfHeightB
	ductHalfHeightB				= ductHalfHeightA_temp

	connectorHalfWidthA_temp	= connectorHalfWidthA
	connectorHalfWidthA			= connectorHalfWidthB
	connectorHalfWidthB			= connectorHalfWidthA_temp

	connectorHalfHeightA_temp	= connectorHalfHeightA
	connectorHalfHeightA		= connectorHalfHeightB
	connectorHalfHeightB		= connectorHalfHeightA_temp

	connectedA_temp 			= connectedA
	connectedA 					= connectedB
	connectedB 					= connectedA_temp
ENDIF

IF SGN(dx) = 0 AND SGN(dy) = 0 THEN		! -----> the duct on the xy-plane <----- !
	ADD2 rx1, ry1
	ROT2 dirAngOnXYPlane

	ins = 0: drawIns = 0
	halfWidth 	= ductHalfWidthA
	halfHeight 	= ductHalfHeightA

	IF GLOB_CONTEXT <> 5 AND AC_AutoOnStoryVisibility THEN
		IF  GLOB_CSTORY_ELEV - SYMB_POS_Z < EPS THEN
			IF (GLOB_CSTORY_ELEV + GLOB_CSTORY_HEIGHT) - (SYMB_POS_Z  + MEP_StraightLength) > -EPS THEN
				GOSUB 40

				DRAWINDEX 10
				IF flangeA THEN
					halfWidthC 	= connectorHalfWidthA
					halfHeightC = connectorHalfHeightA
					GOSUB 20+shapeTypeA
				ENDIF

				DRAWINDEX 20
				IF flangeB THEN
					halfWidthC 	= connectorHalfWidthB
					halfHeightC = connectorHalfHeightB
					GOSUB 20+shapeTypeA
				ENDIF

				DRAWINDEX 30
				duct = 1: ins = 0: symbSect = 0
				GOSUB 10+shapeTypeA

				IF NOT(connectedB) THEN
					SYMB_SECT_PEN = gs_cont_pen
					duct = 0: ins = 0: symb = 1
					GOSUB 13+shapeTypeA
					drawIns = 1
				ENDIF
			ENDIF
			IF  GLOB_CSTORY_ELEV + GLOB_CSTORY_HEIGHT > SYMB_POS_Z AND GLOB_CSTORY_ELEV + GLOB_CSTORY_HEIGHT < SYMB_POS_Z + MEP_StraightLength THEN
				GOSUB 40

				IF flangeA THEN
					halfWidthC 	= connectorHalfWidthA
					halfHeightC = connectorHalfHeightA
					GOSUB 20+shapeTypeA
				ENDIF
				PEN SYMB_SECT_PEN
				duct = 1: ins = 0: symb = 0
				GOSUB 10+shapeTypeA

				PEN SYMB_SECT_PEN
				duct = 0: ins = 0: symb = 1
				GOSUB 13+shapeTypeA
				drawIns = 1
			ENDIF
		ELSE
			IF GLOB_CSTORY_ELEV + GLOB_CSTORY_HEIGHT < SYMB_POS_Z + MEP_StraightLength THEN
				GOSUB 40

				PEN SYMB_SECT_PEN
				duct = 1: ins = 0: symb = 0
				GOSUB 10+shapeTypeA

				PEN SYMB_SECT_PEN
				duct = 0: ins = 0: symb = 1
				GOSUB 13+shapeTypeA
				drawIns = 1
			ENDIF
			IF GLOB_CSTORY_ELEV < SYMB_POS_Z  + MEP_StraightLength AND (GLOB_CSTORY_ELEV + GLOB_CSTORY_HEIGHT) - (SYMB_POS_Z  + MEP_StraightLength) > -EPS THEN
				GOSUB 40

				IF flangeB THEN
					halfWidthC 	= connectorHalfWidthB
					halfHeightC = connectorHalfHeightB
					GOSUB 20+shapeTypeA
				ENDIF
				duct = 1: ins = 0: symb = 0
				GOSUB 10+shapeTypeA

				IF NOT(connectedB) THEN
					SYMB_SECT_PEN = gs_cont_pen
					duct = 0: ins = 0: symb = 1
					GOSUB 13+shapeTypeA
					drawIns = 1
				ENDIF
			ENDIF
		ENDIF
	ELSE
		GOSUB 40

		DRAWINDEX 10
		IF flangeA THEN
			halfWidthC 	= connectorHalfWidthA
			halfHeightC = connectorHalfHeightA
			GOSUB 20+shapeTypeA
		ENDIF

		DRAWINDEX 20
		IF flangeB THEN
			halfWidthC 	= connectorHalfWidthB
			halfHeightC = connectorHalfHeightB
			GOSUB 20+shapeTypeA
		ENDIF

		DRAWINDEX 30
		duct = 1: ins = 0: symbSect = 0
		GOSUB 10+shapeTypeA

		SYMB_SECT_PEN = gs_cont_pen
		duct = 0: ins = 0: symb = 1
		GOSUB 13+shapeTypeA
		drawIns = 1
	ENDIF

	SYMB_POS_Z = SYMB_POS_Z_temp

	IF MEP_InsShow AND drawIns THEN			! -----> insulation <----- !

		duct = 0: ins = 1: symb = 0
		halfWidth 	= ductHalfWidthA+MEP_InsThickness
		halfHeight 	= ductHalfHeightA+MEP_InsThickness

		GOSUB 10+shapeTypeA
	ENDIF
	DEL 2

	END
ENDIF


							! -----< other positions of the duct >----- !


	Length=SQR(dx^2+dy^2)
	ar = ABS(dz)/MEP_StraightLength
	br = Length/MEP_StraightLength

	IF ABS(shapeTypeA - 2) < EPS THEN
		decreaseLenA = MAX((ductHalfWidthA+MEP_InsThickness)*br*MEP_InsShow, connectorHalfWidthA*br+connectorLengthA*2*ar)
		decreaseLenB = MAX((ductHalfWidthA+MEP_InsThickness)*br*MEP_InsShow, connectorHalfWidthB*br+connectorLengthA*2*ar)
	ELSE
		decreaseLenA = MAX((ductHalfHeightA+MEP_InsThickness)*br*MEP_InsShow, connectorHalfHeightA*br+connectorLengthA*2*ar)
		decreaseLenB = MAX((ductHalfHeightA+MEP_InsThickness)*br*MEP_InsShow, connectorHalfHeightB*br+connectorLengthA*2*ar)
	ENDIF

	decreaseLen = MAX(decreaseLenA, decreaseLenB)

	dz = ABS(dz)

	Length=SQR(dx^2+dy^2)
	ar = MEP_StraightLength/dz
	br = dz/MEP_StraightLength
	cr = Length/dz

	dz_temp = dz

	dz = dz - decreaseLen*2
	specCase = 0
	IF dz < EPS THEN specCase = 1

	is2DSymb = 0
	IF GLOB_CSTORY_ELEV+GLOB_CSTORY_HEIGHT > SYMB_POS_Z AND GLOB_CSTORY_ELEV < SYMB_POS_Z+dz_temp AND specCase THEN is2DSymb = 1
	IF AC_AutoOnStoryVisibility < 0.5 THEN is2DSymb = 1

	SYMB_POS_Z 	= SYMB_POS_Z+decreaseLen

	diffZLA = GLOB_CSTORY_ELEV-SYMB_POS_Z						! ha - akkor felette van
	diffZUA = GLOB_CSTORY_ELEV+GLOB_CSTORY_HEIGHT-SYMB_POS_Z	! ha + akkor alatta van

	diffZLB = GLOB_CSTORY_ELEV-SYMB_POS_Z-dz					! ha - akkor felette van
	diffZUB = GLOB_CSTORY_ELEV+GLOB_CSTORY_HEIGHT-SYMB_POS_Z-dz	! ha + akkor alatta van

IF GLOB_CSTORY_ELEV+GLOB_CSTORY_HEIGHT > SYMB_POS_Z AND GLOB_CSTORY_ELEV < SYMB_POS_Z+dz OR is2DSymb THEN
	HOTSPOT2 rx1, ry1, hceID_1
	HOTSPOT2 rx2, ry2, hceID_2

	HOTLINE2 rx1, ry1, rx2, ry2

	GOSUB 30

	SET FILL gs_fill_type

	PEN gs_cont_pen
	IF gs_fill_pen THEN PEN gs_fill_pen
	PROJECT2{3} 3, 270, 3+32, 4, gs_back_pen, 0, 0, 0, PARAMETERS macroCallin2D = 1, duct_show = 1, MEP_InsShow = 0, MEP_cline_show_3D = 0, gs_detlevel_3D = `Детальный`

	PEN gs_cont_pen
	PROJECT2{3} 3, 270, 2+32, 8, 0, 0, 0, 0, PARAMETERS macroCallin2D = 1, duct_show = 1, MEP_InsShow = 0, MEP_cline_show_3D = 0, gs_detlevel_3D = `Детальный`

	IF MEP_InsShow THEN PROJECT2{3} 3, 270, 2+32, 8, 0, 0, 0, 0, PARAMETERS macroCallin2D = 1, duct_show = 0, MEP_InsShow = 1, MEP_cline_show_3D = 0, gs_detlevel_3D = `Детальный`

	PEN SYMB_SECT_PEN
	PROJECT2{3} 3, 270, 2+32, 2, 0, 0, 0, 0, PARAMETERS macroCallin2D = 1, duct_show = 1, MEP_InsShow = 0, MEP_cline_show_3D = 0, gs_detlevel_3D = `Детальный`

	IF MEP_InsShow THEN PROJECT2{3} 3, 270, 2+32, 2, 0, 0, 0, 0, PARAMETERS macroCallin2D = 1, duct_show = 0, MEP_InsShow = 1, MEP_cline_show_3D = 0, gs_detlevel_3D = `Детальный`

	PEN gs_cont_pen

	ADD2 rx1, ry1
	ROT2 dirAngOnXYPlane
	ins = 0: drawIns = 0
	halfWidth 	= ductHalfWidthA
	halfHeight 	= ductHalfHeightA

	IF ABS(shapeTypeA - 2) > EPS AND ABS(dZz) < EPS THEN
		halfWidth_temp = halfWidth
		halfWidth = halfHeight
		halfHeight = halfWidth_temp
	ENDIF

!!IF diffZLA < EPS AND SGN(diffZUA) = 1 THEN addZL = -diffZLA-decreaseLen*2
!!
!!IF SGN(diffZLA) = -1 AND diffZUA < EPS THEN addZU = -diffZUA-decreaseLen*2
!!
!!IF SGN(diffZLB) = -1 AND diffZUB > EPS THEN addZU = decreaseLen*2-diffZUB
!!
!!IF diffZLB > EPS AND SGN(diffZUB) = 1 THEN addZL = decreaseLen*2-diffZLB
!!
!!TEXT2 0, -0.75, dz_temp
!!TEXT2 3, -0.75, specCase
!!
!!TEXT2 0, -1.5, dz
!!TEXT2 0, -2.25, decreaseLen
!!TEXT2 0, -3, diffZLA
!!TEXT2 0, -3.75, diffZUA
!!TEXT2 0, -4.5, diffZLB
!!TEXT2 0, -5.25, diffZUB

	IF GLOB_CONTEXT <> 5 AND AC_AutoOnStoryVisibility THEN
		IF SGN(diffZLB) = -1 AND diffZUB > EPS OR specCase THEN
			ADD2 Length*(rz1 < rz2), 0
			MUL2 br, 1
			duct = 1: ins = 0: symb = 0
			GOSUB 10+shapeTypeA

			IF NOT(connectedB) THEN
				SYMB_SECT_PEN = gs_cont_pen
				duct = 0: ins = 0: symb = 1
				GOSUB 13+shapeTypeA
				drawIns = 1
			ENDIF
			DEL 2
		ELSE
			IF rz1 < rz2 THEN  ADD2 (GLOB_CSTORY_ELEV + GLOB_CSTORY_HEIGHT - SYMB_POS_Z + decreaseLen)*cr, 0
			IF rz1 > rz2 THEN  ADD2 (-GLOB_CSTORY_ELEV - GLOB_CSTORY_HEIGHT + SYMB_POS_Z + dz + decreaseLen)*cr, 0
			MUL2 ar, 1
			PEN SYMB_SECT_PEN
			duct = 1: ins = 0: symb = 0
			GOSUB 10+shapeTypeA

			PEN SYMB_SECT_PEN
			duct = 0: ins = 0: symb = 1
			GOSUB 13+shapeTypeA
			drawIns = 1
			DEL 2
		ENDIF
	ELSE
		ADD2 Length*(rz1 < rz2), 0
		MUL2 br, 1
		duct = 1: ins = 0: symb = 0
		GOSUB 10+shapeTypeA

		SYMB_SECT_PEN = gs_cont_pen
		duct = 0: ins = 0: symb = 1
		GOSUB 13+shapeTypeA
		drawIns = 1
		DEL 2
	ENDIF
	SYMB_POS_Z = SYMB_POS_Z_temp
	dz = dz_temp

!!TEXT2 0, -6.00, GLOB_CSTORY_ELEV-SYMB_POS_Z+addZL
!!
!!TEXT2 0, -6.75, GLOB_CSTORY_ELEV+GLOB_CSTORY_HEIGHT-SYMB_POS_Z+addZU

	DEL 2

	IF MEP_cline_show THEN		! -----> center line <----- !
		PEN MEP_cline_pen
		SET LINE_TYPE MEP_cline_type

		PROJECT2{3} 3, 270, 3+32, 8, 0, 0, 0, 0, PARAMETERS macroCallin2D = 1, duct_show = 0, MEP_InsShow = 0, MEP_cline_show_3D = 1, gs_detlevel_3D = `Детальный`
	ENDIF
ENDIF

IF rz1 > rz2 THEN SYMB_POS_Z = SYMB_POS_Z_temp

END

10:
	IF rotated THEN ROT2 45
	IF ins THEN
		POLY2_ NSP/3, 5,

			GET (NSP)
	ENDIF
	IF duct THEN
		POLY2_B NSP/3, 1+2+4+64, -1, -1,

			GET (NSP)
	ENDIF
	IF symb THEN
		POLY2_B NSP/3, 1+2+4+64, SYMB_SECT_PEN, SYMB_SECT_PEN,

			GET (NSP)
	ENDIF
	IF rotated THEN DEL 1
RETURN

11:
	SET FILL 65

	PUT halfHeight, halfWidth, 1
	PUT -halfHeight, halfWidth, 1
	PUT -halfHeight, -halfWidth, 1
	PUT halfHeight, -halfWidth, 1

	GOSUB 10
RETURN

12:
	SET FILL 65

	PUT 0, 0, 901
	PUT halfWidth, 360, 4001

	GOSUB 10
RETURN

13:
	SET FILL 65

	IF ABS(halfWidth-halfHeight) < EPS THEN
		PUT 0, 0, 901
		PUT halfWidth, 360, 4001
	ENDIF
	IF ABS(halfWidth-halfHeight) > EPS AND halfWidth > halfHeight THEN
		rr = halfHeight

		PUT halfHeight, -halfWidth+rr, 1
		PUT halfHeight, halfWidth-rr, 1
		PUT -halfHeight, halfWidth-rr, 1001
		PUT -halfHeight, -halfWidth+rr, 1
		PUT halfHeight, -halfWidth+rr, 1001
		PUT halfHeight, -halfWidth+rr, -1
	ENDIF
	IF ABS(halfWidth-halfHeight) > EPS AND halfWidth < halfHeight THEN
		rr = halfWidth

		PUT halfHeight-rr, halfWidth, 1
		PUT -halfHeight+rr, halfWidth, 1
		PUT -halfHeight+rr, -halfWidth, 1001
		PUT halfHeight-rr, -halfWidth, 1
		PUT halfHeight-rr, halfWidth, 1001
		PUT halfHeight-rr, halfWidth, -1
	ENDIF

	GOSUB 10
RETURN

14:
	SET FILL 65

	PUT halfHeight, halfWidth, 1
	PUT -halfHeight, halfWidth, 1
	PUT halfHeight*0.75, halfWidth*0.75, 1
	PUT halfHeight, -halfWidth, 1

	GOSUB 10
RETURN

15:
	SET FILL 65

	alpha = 180-2*ATN(halfWidth/(halfWidth*0.75))
	rr = halfWidth/SIN(alpha)

	PUT 0, halfWidth, 1
	PUT 0, 0, 901
	PUT 0, -halfWidth, 3001
	PUT -(rr-halfWidth*0.75), 0, 901
	PUT 0, halfWidth, 3001

	rotated = 1
	GOSUB 10
	rotated = 0
RETURN

16:
	SET FILL 65

	IF ABS(halfWidth-halfHeight) < EPS THEN
		alpha = 180-2*ATN(halfWidth/(halfWidth*0.75))
		rr = halfWidth/SIN(alpha)

		PUT 0, halfWidth, 1
		PUT 0, 0, 901
		PUT 0, -halfWidth, 3001
		PUT -(rr-halfWidth*0.75), 0, 901
		PUT 0, halfWidth, 3001

		rotated = 1
		GOSUB 10
		rotated = 0
	ENDIF
	IF ABS(halfWidth-halfHeight) > EPS AND halfWidth > halfHeight THEN
		rr = halfHeight
		iHalfHeight = halfHeight*0.875
		iHalfWidth = halfWidth*0.875
		irr = iHalfHeight
		adxy = (-rr*0.15)/SQR(2)

		PUT halfHeight, -halfWidth+rr, 1
		PUT halfHeight, halfWidth-rr, 1
		PUT -halfHeight, halfWidth-rr, 1001
		PUT -halfHeight, -halfWidth+rr, 1
		PUT halfHeight, -halfWidth+rr, 1001
		PUT halfHeight, -halfWidth+rr, -1
		PUT adxy+iHalfHeight, adxy-iHalfWidth+irr, 1
		PUT adxy+iHalfHeight, adxy+iHalfWidth-irr, 1
		PUT adxy-iHalfHeight, adxy+iHalfWidth-irr, 1001
		PUT adxy-iHalfHeight, adxy-iHalfWidth+irr, 1
		PUT adxy+iHalfHeight, adxy-iHalfWidth+irr, 1001
		PUT adxy+iHalfHeight, adxy-iHalfWidth+irr, -1

		GOSUB 10
	ENDIF
	IF ABS(halfWidth-halfHeight) > EPS AND halfWidth < halfHeight THEN
		rr = halfWidth
		iHalfHeight = halfHeight*0.875
		iHalfWidth = halfWidth*0.875
		irr = iHalfWidth
		adxy = (-rr*0.15)/SQR(2)


		alpha = 180-2*ATN(halfWidth/(halfWidth*0.75))
		rrr = halfWidth/SIN(alpha)


		PUT halfHeight-rr+rr*COS(45), -rr*SIN(45), 1
		PUT halfHeight-rr, 0, 901
		PUT 0, 135, 4001
		PUT -halfHeight+rr, rr, 1
		PUT -halfHeight+rr-rr*SIN(60), rr*COS(60), 1001

		distX = (halfHeight-rr+rr*SIN(60)) - (halfHeight-rr)
		distY = rr-(rr-rr*COS(60))*0.40 - rr*COS(60)

		alpha = 180-2*ATN(distX/distY)
		rrr = distX/SIN(alpha)

		PUT -halfHeight+rr, rr-(rr-rr*COS(60))*0.40-rrr, 901
		PUT -halfHeight+rr, rr-(rr-rr*COS(60))*0.40, 3001

		PUT halfHeight-rr, rr-(rr-rr*COS(60))*0.40, 1
		PUT halfHeight-rr+rr*COS(45), -rr*SIN(45), 1001

		GOSUB 10
	ENDIF
RETURN

21:
	IF gs_fill_pen THEN SET FILL gs_fill_type

	PUT halfHeightC, halfWidthC, 1
	PUT -halfHeightC, halfWidthC, 1
	PUT -halfHeightC, -halfWidthC, 1
	PUT halfHeightC, -halfWidthC, 1
	PUT halfHeightC, halfWidthC, -1
	PUT halfHeight, halfWidth, 1
	PUT -halfHeight, halfWidth, 1
	PUT -halfHeight, -halfWidth, 1
	PUT halfHeight, -halfWidth, 1
	PUT halfHeight, halfWidth, -1

	POLY2_B NSP/3, 1+2+4+64, gs_fill_pen, gs_back_pen,

		GET (NSP)
RETURN

22:
	IF gs_fill_pen THEN SET FILL gs_fill_type

		PUT 0, 0, 901
		PUT halfWidthC, 360, 4001
		PUT 0, 0, 900
		PUT halfWidth, 360, 4000

	POLY2_B NSP/3, 1+2+4+64, gs_fill_pen, gs_back_pen,

		GET (NSP)
RETURN

23:
	IF gs_fill_pen THEN SET FILL gs_fill_type

	IF ABS(halfWidth-halfHeight) < EPS THEN
		PUT 0, 0, 901
		PUT halfWidthC, 360, 4001
		PUT 0, 0, 900
		PUT halfWidth, 360, 4000
	ENDIF
	IF ABS(halfWidth-halfHeight) > EPS AND halfWidth > halfHeight THEN
		rrC = halfHeightC
		rr = halfHeight

		PUT halfHeightC, -halfWidthC+rrC, 1
		PUT halfHeightC, halfWidthC-rrC, 1
		PUT -halfHeightC, halfWidthC-rrC, 1001
		PUT -halfHeightC, -halfWidthC+rrC, 1
		PUT halfHeightC, -halfWidthC+rrC, 1001
		PUT halfHeight, -halfWidthC+rrC, -1
		PUT halfHeight, -halfWidth+rr, 1
		PUT halfHeight, halfWidth-rr, 1
		PUT -halfHeight, halfWidth-rr, 1001
		PUT -halfHeight, -halfWidth+rr, 1
		PUT halfHeight, -halfWidth+rr, 1001
		PUT halfHeight, -halfWidth+rr, -1
	ENDIF
	IF ABS(halfWidth-halfHeight) > EPS AND halfWidth < halfHeight THEN
		rrC = halfWidthC
		rr = halfWidth

		PUT halfHeightC-rrC, halfWidthC, 1
		PUT -halfHeightC+rrC, halfWidthC, 1
		PUT -halfHeightC+rrC, -halfWidthC, 1001
		PUT halfHeightC-rrC, -halfWidthC, 1
		PUT halfHeightC-rrC, halfWidthC, 1001
		PUT halfHeightC-rrC, halfWidthC, -1
		PUT halfHeight-rr, halfWidth, 1
		PUT -halfHeight+rr, halfWidth, 1
		PUT -halfHeight+rr, -halfWidth, 1001
		PUT halfHeight-rr, -halfWidth, 1
		PUT halfHeight-rr, halfWidth, 1001
		PUT halfHeight-rr, halfWidth, -1
	ENDIF

	POLY2_B NSP/3, 1+2+4+64, gs_fill_pen, gs_back_pen,

		GET (NSP)
RETURN

30:
	IF ABS(MEP_NumConnectionData[1][21] - 1) < EPS THEN

		! --- Building of Transformational Matrix

		DIM MatrixT[3][3]

		MatrixT[1][1] = MEP_Position[2][1]
		MatrixT[1][2] = MEP_Position[2][2]
		MatrixT[1][3] = MEP_Position[2][3]

		MatrixT[2][1] = MEP_Position[3][1]
		MatrixT[2][2] = MEP_Position[3][2]
		MatrixT[2][3] = MEP_Position[3][3]

		MatrixT[3][1] = -MEP_Position[3][2]*MEP_Position[2][3]+MEP_Position[3][3]*MEP_Position[2][2]
		MatrixT[3][2] = -MEP_Position[3][3]*MEP_Position[2][1]+MEP_Position[3][1]*MEP_Position[2][3]
		MatrixT[3][3] = -MEP_Position[3][1]*MEP_Position[2][2]+MEP_Position[3][2]*MEP_Position[2][1]


		ductHalfWidthToHtps = MEP_NumConnectionData[1][12]/2+MEP_NumConnectionData[1][14]
		ductHalfHeightToHtps = MEP_NumConnectionData[1][13]/2+MEP_NumConnectionData[1][14]

		! --- Input Coordinates

		PUT 0, ductHalfWidthToHtps, ductHalfHeightToHtps
		PUT 0, -ductHalfWidthToHtps, ductHalfHeightToHtps
		PUT 0, -ductHalfWidthToHtps, -ductHalfHeightToHtps
		PUT 0, ductHalfWidthToHtps, -ductHalfHeightToHtps

		PUT MEP_StraightLength, ductHalfWidthToHtps, ductHalfHeightToHtps
		PUT MEP_StraightLength, -ductHalfWidthToHtps, ductHalfHeightToHtps
		PUT MEP_StraightLength, -ductHalfWidthToHtps, -ductHalfHeightToHtps
		PUT MEP_StraightLength, ductHalfWidthToHtps, -ductHalfHeightToHtps

		Coordinates = NSP/3

		DIM inCoords[20][3]

		FOR cnum = 1 TO Coordinates
			inCoords[cnum][1] = GET(1)
			inCoords[cnum][2] = GET(1)
			inCoords[cnum][3] = GET(1)
		NEXT cnum

		! --- the Matrix Operation, what make the Output-Coordinates

		DIM outCoords[20][3]

		FOR cnum = 1 TO Coordinates
			outCoords[cnum][1] = inCoords[cnum][1]*MatrixT[1][1]+inCoords[cnum][2]*MatrixT[2][1]+inCoords[cnum][3]*MatrixT[3][1]
			outCoords[cnum][2] = inCoords[cnum][1]*MatrixT[1][2]+inCoords[cnum][2]*MatrixT[2][2]+inCoords[cnum][3]*MatrixT[3][2]
			outCoords[cnum][3] = inCoords[cnum][1]*MatrixT[1][3]+inCoords[cnum][2]*MatrixT[2][3]+inCoords[cnum][3]*MatrixT[3][3]
		NEXT cnum

		unID = 1
		FOR i = 1 TO 8
			HOTSPOT2 outCoords[i][1], outCoords[i][2], HptsUnIDBeginForConnEnds+unID: unID=unID+1
		NEXT i
	ENDIF
RETURN

40:
	HOTSPOT2 0, 0, hceID_1

	HOTSPOT2 halfHeight, halfWidth, HptsUnIDBeginForConnEnds+1
	HOTSPOT2 -halfHeight, halfWidth, HptsUnIDBeginForConnEnds+2
	HOTSPOT2 halfHeight, -halfWidth, HptsUnIDBeginForConnEnds+3
	HOTSPOT2 -halfHeight, -halfWidth, HptsUnIDBeginForConnEnds+4
RETURN
]]>
</Script_2D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_1D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
! MEP_m_Duct
! Zsolt Feke/2007


EPS = 0.00001

IF gs_detlevel_3D = `Детальный` THEN res = 24
IF gs_detlevel_3D = `Простой` THEN res = 8
IF gs_detlevel_3D = `Откл.` THEN res = 24


ductHalfWidthA			= MEP_NumConnectionData[1][12]/2+MEP_NumConnectionData[1][14]
ductHalfHeightA			= MEP_NumConnectionData[1][13]/2+MEP_NumConnectionData[1][14]
connectorLengthA		= MEP_NumConnectionData[1][14]
connectorHalfWidthA		= ductHalfWidthA+MEP_NumConnectionData[1][15]
connectorHalfHeightA	= ductHalfHeightA+MEP_NumConnectionData[1][15]
connectedA				= MEP_NumConnectionData[1][18]
shapeTypeA 				= MEP_NumConnectionData[1][21]

ductHalfWidthB			= MEP_NumConnectionData[2][12]/2+MEP_NumConnectionData[1][14]
ductHalfHeightB			= MEP_NumConnectionData[2][13]/2+MEP_NumConnectionData[1][14]
connectorLengthB		= connectorLengthA
connectorHalfWidthB		= ductHalfWidthB+MEP_NumConnectionData[2][15]
connectorHalfHeightB	= ductHalfHeightB+MEP_NumConnectionData[2][15]
connectedB				= MEP_NumConnectionData[2][18]
shapeTypeB 				= MEP_NumConnectionData[2][21]

flangeA = 1
IF MEP_NumConnectionData[1][15] < EPS OR ABS(gs_AddConnections[1][1] - 1) < EPS THEN
	flangeA = 0
	connectorLengthA = 0
ENDIF

flangeB = 1
IF MEP_NumConnectionData[2][15] < EPS OR ABS(gs_AddConnections[2][1] - 1) < EPS THEN
	flangeB = 0
	connectorLengthB = 0
ENDIF


						! ---------------- !
						! --- Z vector --- !
						! ---------------- !

dZx = -MEP_Position[3][2]*MEP_Position[2][3]+MEP_Position[3][3]*MEP_Position[2][2]
dZy = -MEP_Position[3][3]*MEP_Position[2][1]+MEP_Position[3][1]*MEP_Position[2][3]
dZz = -MEP_Position[3][1]*MEP_Position[2][2]+MEP_Position[3][2]*MEP_Position[2][1]


						! ------------------------ !
						! --- 2 points of pipe --- !
						! ------------------------ !

! --- x,y,z coordinates of 1st point ---

rx1 = MEP_Position[1][1]
ry1 = MEP_Position[1][2]
rz1 = MEP_Position[1][3]


! --- x,y,z coordinates of 2nd point ---

rx2 = rx1+MEP_Position[2][1]*MEP_StraightLength
ry2 = ry1+MEP_Position[2][2]*MEP_StraightLength
rz2 = rz1+MEP_Position[2][3]*MEP_StraightLength

dx = rx2-rx1
dy = ry2-ry1
dz = rz2-rz1


! --- dirAngOnXYPlane of the route ---

IF ABS(ABS(MEP_Position[2][3])-1) < EPS THEN
	 arCosVal = MEP_Position[3][1]/1
	IF ABS(arCosVal) > 1 AND SGN(arCosVal) = -1 THEN arCosVal = -1
	IF ABS(arCosVal) > 1 AND SGN(arCosVal) = 1 THEN arCosVal = 1
	dirAngOnXYPlane = ACS(arCosVal)-90
	IF SGN(MEP_Position[3][2]) = -1 THEN dirAngOnXYPlane = 180-dirAngOnXYPlane
ELSE
	IF ABS(dx)>EPS OR ABS(dy)>EPS THEN
		arCosVal = dx/(SQR(dx^2+dy^2))

		IF ABS(arCosVal) > 1 AND SGN(arCosVal) = -1 THEN arCosVal = -1
		IF ABS(arCosVal) > 1 AND SGN(arCosVal) = 1 THEN arCosVal = 1

		dirAngOnXYPlane = ACS(arCosVal)
		IF SGN(dy) = -1 THEN dirAngOnXYPlane = 360-dirAngOnXYPlane
	ENDIF
ENDIF
]]>
</Script_1D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_PR SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_PR>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_UI SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_UI>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_VL SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
! MEP_m_Duct
! Zsolt Feke/2007


VALUES "gs_detlevel_3D" `Детальный`,`Простой`,`Откл.`
]]>
</Script_VL>

<Comment SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Comment>

<ParamSection SectVersion="26" SectionFlags="0" SubIdent="0">
	<ParamSectHeader>
		<AutoHotspots>false</AutoHotspots>
		<StatBits>
			<STBit_FixSize/>
		</StatBits>
		<WDLeftFrame>0</WDLeftFrame>
		<WDRightFrame>0</WDRightFrame>
		<WDTopFrame>0</WDTopFrame>
		<WDBotFrame>0</WDBotFrame>
		<LayFlags>65535</LayFlags>
		<WDMirrorThickness>0</WDMirrorThickness>
		<WDWallInset>0</WDWallInset>
	</ParamSectHeader>
	<Parameters>
		<Length Name="A">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="B">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="ZZYZX">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Boolean Name="AC_show2DHotspotsIn3D">
			<Description><![CDATA["Show 2D Hotspots in 3D"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="ac_bottomlevel">
			<Description><![CDATA["Bottom Level"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="ac_toplevel">
			<Description><![CDATA["Top Level"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="MEP_StraightLength">
			<Description><![CDATA["Length"]]></Description>
			<Value>2.048</Value>
		</Length>
		<Boolean Name="MEP_InsShow">
			<Description><![CDATA["Show Insulation"]]></Description>
			<Value>1</Value>
		</Boolean>
		<Length Name="MEP_InsThickness">
			<Description><![CDATA["Insulation Thickness"]]></Description>
			<Value>0.152</Value>
		</Length>
		<Length Name="MEP_offset_y">
			<Description><![CDATA["Offset Y"]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="MEP_offset_z">
			<Description><![CDATA["Offset Z"]]></Description>
			<Value>0</Value>
		</Length>
		<Boolean Name="MEP_StatusLine">
			<Description><![CDATA["Status Line"]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="nonEditHtps">
			<Description><![CDATA["Non Editable Hotspots"]]></Description>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="showHtps">
			<Description><![CDATA["Show Hotspots"]]></Description>
			<Value>1</Value>
		</Boolean>

		<!-- gs_2D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_2D_representation">
			<Description><![CDATA["2D Representation"]]></Description>
		</Title>
		<Boolean Name="macroCallin2D">
			<Description><![CDATA["Macro Calling in 2D"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="MEP_cline_show">
			<Description><![CDATA["Show Centerline"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<LineType Name="MEP_cline_type">
			<Description><![CDATA["Centerline Line Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>6</Value>
		</LineType>
		<PenColor Name="MEP_cline_pen">
			<Description><![CDATA["Centerline Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</PenColor>
		<PenColor Name="gs_cont_pen">
			<Description><![CDATA["Contour Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</PenColor>
		<PenColor Name="gs_fill_pen">
			<Description><![CDATA["Fill Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</PenColor>
		<PenColor Name="gs_back_pen">
			<Description><![CDATA["Fill Background Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</PenColor>
		<FillPattern Name="gs_fill_type">
			<Description><![CDATA["Fill Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>64</Value>
		</FillPattern>

		<!-- gs_3D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_3D_representation">
			<Description><![CDATA["3D Representation"]]></Description>
		</Title>
		<String Name="gs_detlevel_3D">
			<Description><![CDATA["3D model"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Детальный"]]></Value>
		</String>
		<Boolean Name="duct_show">
			<Description><![CDATA["Show Duct"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="MEP_cline_show_3D">
			<Description><![CDATA["Show Centerline in 3D"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Material Name="gs_DuctMat">
			<Description><![CDATA["Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>45</Value>
		</Material>
		<Material Name="gs_InsMat">
			<Description><![CDATA["Insulation Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>6</Value>
		</Material>
		<Boolean Name="editable">
			<Description><![CDATA["Editable"]]></Description>
			<Value>0</Value>
		</Boolean>
		<Length Name="MEP_Position">
			<Description><![CDATA["Position"]]></Description>
			<ArrayValues FirstDimension="3" SecondDimension="3">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0</AVal>
				<AVal Column="3" Row="1">0</AVal>
				<AVal Column="1" Row="2">1</AVal>
				<AVal Column="2" Row="2">0</AVal>
				<AVal Column="3" Row="2">0</AVal>
				<AVal Column="1" Row="3">0</AVal>
				<AVal Column="2" Row="3">1</AVal>
				<AVal Column="3" Row="3">0</AVal>
			</ArrayValues>
		</Length>
		<Length Name="gs_Connections">
			<Description><![CDATA[""]]></Description>
			<ArrayValues FirstDimension="4" SecondDimension="25">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0</AVal>
				<AVal Column="3" Row="1">0</AVal>
				<AVal Column="4" Row="1">0</AVal>
				<AVal Column="5" Row="1">0</AVal>
				<AVal Column="6" Row="1">0</AVal>
				<AVal Column="7" Row="1">0</AVal>
				<AVal Column="8" Row="1">0</AVal>
				<AVal Column="9" Row="1">0</AVal>
				<AVal Column="10" Row="1">0</AVal>
				<AVal Column="11" Row="1">0</AVal>
				<AVal Column="12" Row="1">0</AVal>
				<AVal Column="13" Row="1">0</AVal>
				<AVal Column="14" Row="1">0</AVal>
				<AVal Column="15" Row="1">0</AVal>
				<AVal Column="16" Row="1">0</AVal>
				<AVal Column="17" Row="1">0</AVal>
				<AVal Column="18" Row="1">0</AVal>
				<AVal Column="19" Row="1">0</AVal>
				<AVal Column="20" Row="1">0</AVal>
				<AVal Column="21" Row="1">0</AVal>
				<AVal Column="22" Row="1">0</AVal>
				<AVal Column="23" Row="1">0</AVal>
				<AVal Column="24" Row="1">0</AVal>
				<AVal Column="25" Row="1">0</AVal>
				<AVal Column="1" Row="2">0</AVal>
				<AVal Column="2" Row="2">0</AVal>
				<AVal Column="3" Row="2">0</AVal>
				<AVal Column="4" Row="2">0</AVal>
				<AVal Column="5" Row="2">0</AVal>
				<AVal Column="6" Row="2">0</AVal>
				<AVal Column="7" Row="2">0</AVal>
				<AVal Column="8" Row="2">0</AVal>
				<AVal Column="9" Row="2">0</AVal>
				<AVal Column="10" Row="2">0</AVal>
				<AVal Column="11" Row="2">0</AVal>
				<AVal Column="12" Row="2">0</AVal>
				<AVal Column="13" Row="2">0</AVal>
				<AVal Column="14" Row="2">0</AVal>
				<AVal Column="15" Row="2">0</AVal>
				<AVal Column="16" Row="2">0</AVal>
				<AVal Column="17" Row="2">0</AVal>
				<AVal Column="18" Row="2">0</AVal>
				<AVal Column="19" Row="2">0</AVal>
				<AVal Column="20" Row="2">0</AVal>
				<AVal Column="21" Row="2">0</AVal>
				<AVal Column="22" Row="2">0</AVal>
				<AVal Column="23" Row="2">0</AVal>
				<AVal Column="24" Row="2">0</AVal>
				<AVal Column="25" Row="2">0</AVal>
				<AVal Column="1" Row="3">0.5</AVal>
				<AVal Column="2" Row="3">0</AVal>
				<AVal Column="3" Row="3">0</AVal>
				<AVal Column="4" Row="3">0</AVal>
				<AVal Column="5" Row="3">0</AVal>
				<AVal Column="6" Row="3">1</AVal>
				<AVal Column="7" Row="3">1</AVal>
				<AVal Column="8" Row="3">0</AVal>
				<AVal Column="9" Row="3">0</AVal>
				<AVal Column="10" Row="3">0</AVal>
				<AVal Column="11" Row="3">0</AVal>
				<AVal Column="12" Row="3">0.32</AVal>
				<AVal Column="13" Row="3">0.45</AVal>
				<AVal Column="14" Row="3">0.002</AVal>
				<AVal Column="15" Row="3">0</AVal>
				<AVal Column="16" Row="3">0</AVal>
				<AVal Column="17" Row="3">0</AVal>
				<AVal Column="18" Row="3">0</AVal>
				<AVal Column="19" Row="3">0</AVal>
				<AVal Column="20" Row="3">0</AVal>
				<AVal Column="21" Row="3">1</AVal>
				<AVal Column="22" Row="3">0</AVal>
				<AVal Column="23" Row="3">0</AVal>
				<AVal Column="24" Row="3">0</AVal>
				<AVal Column="25" Row="3">0</AVal>
				<AVal Column="1" Row="4">1.5</AVal>
				<AVal Column="2" Row="4">0</AVal>
				<AVal Column="3" Row="4">0</AVal>
				<AVal Column="4" Row="4">0</AVal>
				<AVal Column="5" Row="4">0</AVal>
				<AVal Column="6" Row="4">1</AVal>
				<AVal Column="7" Row="4">-1</AVal>
				<AVal Column="8" Row="4">0</AVal>
				<AVal Column="9" Row="4">0</AVal>
				<AVal Column="10" Row="4">0</AVal>
				<AVal Column="11" Row="4">0</AVal>
				<AVal Column="12" Row="4">0.45</AVal>
				<AVal Column="13" Row="4">0.32</AVal>
				<AVal Column="14" Row="4">0.002</AVal>
				<AVal Column="15" Row="4">0</AVal>
				<AVal Column="16" Row="4">0</AVal>
				<AVal Column="17" Row="4">0</AVal>
				<AVal Column="18" Row="4">0</AVal>
				<AVal Column="19" Row="4">0</AVal>
				<AVal Column="20" Row="4">0</AVal>
				<AVal Column="21" Row="4">1</AVal>
				<AVal Column="22" Row="4">0</AVal>
				<AVal Column="23" Row="4">0</AVal>
				<AVal Column="24" Row="4">0</AVal>
				<AVal Column="25" Row="4">0</AVal>
			</ArrayValues>
		</Length>
		<Integer Name="MEP_NumberConnections">
			<Description><![CDATA["Number of Connections"]]></Description>
			<Value>4</Value>
		</Integer>
		<Length Name="MEP_NumConnectionData">
			<Description><![CDATA[""]]></Description>
			<ArrayValues FirstDimension="4" SecondDimension="25">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0</AVal>
				<AVal Column="3" Row="1">0</AVal>
				<AVal Column="4" Row="1">0</AVal>
				<AVal Column="5" Row="1">0</AVal>
				<AVal Column="6" Row="1">0</AVal>
				<AVal Column="7" Row="1">0</AVal>
				<AVal Column="8" Row="1">0</AVal>
				<AVal Column="9" Row="1">0</AVal>
				<AVal Column="10" Row="1">0</AVal>
				<AVal Column="11" Row="1">0</AVal>
				<AVal Column="12" Row="1">0.45</AVal>
				<AVal Column="13" Row="1">0.32</AVal>
				<AVal Column="14" Row="1">0.002</AVal>
				<AVal Column="15" Row="1">0.102</AVal>
				<AVal Column="16" Row="1">0</AVal>
				<AVal Column="17" Row="1">0.152</AVal>
				<AVal Column="18" Row="1">0</AVal>
				<AVal Column="19" Row="1">0</AVal>
				<AVal Column="20" Row="1">0</AVal>
				<AVal Column="21" Row="1">1</AVal>
				<AVal Column="22" Row="1">0</AVal>
				<AVal Column="23" Row="1">2</AVal>
				<AVal Column="24" Row="1">0</AVal>
				<AVal Column="25" Row="1">0</AVal>
				<AVal Column="1" Row="2">0</AVal>
				<AVal Column="2" Row="2">0</AVal>
				<AVal Column="3" Row="2">0</AVal>
				<AVal Column="4" Row="2">0</AVal>
				<AVal Column="5" Row="2">0</AVal>
				<AVal Column="6" Row="2">0</AVal>
				<AVal Column="7" Row="2">0</AVal>
				<AVal Column="8" Row="2">0</AVal>
				<AVal Column="9" Row="2">0</AVal>
				<AVal Column="10" Row="2">0</AVal>
				<AVal Column="11" Row="2">0</AVal>
				<AVal Column="12" Row="2">0.45</AVal>
				<AVal Column="13" Row="2">0.32</AVal>
				<AVal Column="14" Row="2">0.002</AVal>
				<AVal Column="15" Row="2">0.102</AVal>
				<AVal Column="16" Row="2">0</AVal>
				<AVal Column="17" Row="2">0.152</AVal>
				<AVal Column="18" Row="2">0</AVal>
				<AVal Column="19" Row="2">0</AVal>
				<AVal Column="20" Row="2">0</AVal>
				<AVal Column="21" Row="2">1</AVal>
				<AVal Column="22" Row="2">0</AVal>
				<AVal Column="23" Row="2">2</AVal>
				<AVal Column="24" Row="2">0</AVal>
				<AVal Column="25" Row="2">0</AVal>
				<AVal Column="1" Row="3">0.4</AVal>
				<AVal Column="2" Row="3">-0.227</AVal>
				<AVal Column="3" Row="3">0</AVal>
				<AVal Column="4" Row="3">0.5</AVal>
				<AVal Column="5" Row="3">-0.866</AVal>
				<AVal Column="6" Row="3">0</AVal>
				<AVal Column="7" Row="3">-0.866</AVal>
				<AVal Column="8" Row="3">-0.5</AVal>
				<AVal Column="9" Row="3">0</AVal>
				<AVal Column="10" Row="3">0</AVal>
				<AVal Column="11" Row="3">0</AVal>
				<AVal Column="12" Row="3">0.45</AVal>
				<AVal Column="13" Row="3">0.32</AVal>
				<AVal Column="14" Row="3">0.002</AVal>
				<AVal Column="15" Row="3">0</AVal>
				<AVal Column="16" Row="3">0</AVal>
				<AVal Column="17" Row="3">0</AVal>
				<AVal Column="18" Row="3">0</AVal>
				<AVal Column="19" Row="3">0</AVal>
				<AVal Column="20" Row="3">0</AVal>
				<AVal Column="21" Row="3">3</AVal>
				<AVal Column="22" Row="3">0</AVal>
				<AVal Column="23" Row="3">0</AVal>
				<AVal Column="24" Row="3">0</AVal>
				<AVal Column="25" Row="3">0</AVal>
				<AVal Column="1" Row="4">1.2</AVal>
				<AVal Column="2" Row="4">0</AVal>
				<AVal Column="3" Row="4">0.162</AVal>
				<AVal Column="4" Row="4">0</AVal>
				<AVal Column="5" Row="4">0</AVal>
				<AVal Column="6" Row="4">1</AVal>
				<AVal Column="7" Row="4">-1</AVal>
				<AVal Column="8" Row="4">0</AVal>
				<AVal Column="9" Row="4">0</AVal>
				<AVal Column="10" Row="4">0</AVal>
				<AVal Column="11" Row="4">0</AVal>
				<AVal Column="12" Row="4">0.32</AVal>
				<AVal Column="13" Row="4">0.45</AVal>
				<AVal Column="14" Row="4">0.002</AVal>
				<AVal Column="15" Row="4">0</AVal>
				<AVal Column="16" Row="4">0</AVal>
				<AVal Column="17" Row="4">0</AVal>
				<AVal Column="18" Row="4">0</AVal>
				<AVal Column="19" Row="4">0</AVal>
				<AVal Column="20" Row="4">0</AVal>
				<AVal Column="21" Row="4">3</AVal>
				<AVal Column="22" Row="4">0</AVal>
				<AVal Column="23" Row="4">0</AVal>
				<AVal Column="24" Row="4">0</AVal>
				<AVal Column="25" Row="4">0</AVal>
			</ArrayValues>
		</Length>
		<Length Name="gs_AddConnections">
			<Description><![CDATA[""]]></Description>
			<ArrayValues FirstDimension="2" SecondDimension="2">
				<AVal Column="1" Row="1">2</AVal>
				<AVal Column="2" Row="1">0</AVal>
				<AVal Column="1" Row="2">2</AVal>
				<AVal Column="2" Row="2">0</AVal>
			</ArrayValues>
		</Length>
		<Boolean Name="AC_AutoOnStoryVisibility">
			<Description><![CDATA["Auto on Story Visibility"]]></Description>
			<Value>0</Value>
		</Boolean>

		<!-- mep_par_h: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="mep_par_h">
			<Description><![CDATA["Скрытые параметры"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
		</Title>
		<Boolean Name="mun_elev">
			<Description><![CDATA["Ручной этаж"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="n_elev">
			<Description><![CDATA["Номер этажа"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Length Name="otm_elem">
			<Description><![CDATA["Отметка оси элемента"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="otm_elem_abs">
			<Description><![CDATA["Отметка оси элемента абсолютная"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Boolean Name="show_el">
			<Description><![CDATA["Показ элемента"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="tConToolType">
			<Description><![CDATA["Тип инструмента"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>

		<!-- mep_par_geom: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="mep_par_geom">
			<Description><![CDATA["Геометрия"]]></Description>
		</Title>
		<Length Name="mep_th_elem">
			<Description><![CDATA["Толщина стенки"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<String Name="mep_razm">
			<Description><![CDATA["Размер сечения (BxH), мм"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="mep_razm_abs">
			<Description><![CDATA["Размер сечения (MAXxMIN), мм"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<RealNum Name="mep_vol">
			<Description><![CDATA["Внутренний объём, куб.м."]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<RealNum Name="mep_s_el">
			<Description><![CDATA["Наружная площадь, кв.м."]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<RealNum Name="mep_s_in">
			<Description><![CDATA["Площадь сечения, кв.м."]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>

		<!-- mep_par_spec: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="mep_par_spec">
			<Description><![CDATA["Спецификация"]]></Description>
		</Title>
		<String Name="type_spec">
			<Description><![CDATA["Тип спецификации"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="syst_name">
			<Description><![CDATA["Имя системы"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="spec_add_param">
			<Description><![CDATA["Доп.параметры в смету"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="subpos">
			<Description><![CDATA["Входит в сборку"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="naen">
			<Description><![CDATA["Наименование"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="obozn">
			<Description><![CDATA["Обозначение"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="eq_code">
			<Description><![CDATA["Код"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<String Name="eq_plant">
			<Description><![CDATA["Завод-изготовитель"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="komment">
			<Description><![CDATA["Единица измерения"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<RealNum Name="kol_vo_spec">
			<Description><![CDATA["Кол-во"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<RealNum Name="ves">
			<Description><![CDATA["Масса ед., кг."]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<RealNum Name="mep_m_ves">
			<Description><![CDATA["Вес п.м., кг."]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<RealNum Name="mep_l">
			<Description><![CDATA["Длина, м"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<RealNum Name="mep_s_ins">
			<Description><![CDATA["Площадь изоляции, кв.м."]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<RealNum Name="mep_s_pokr">
			<Description><![CDATA["Площадь покрытия, кв.м."]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<Material Name="mep_m_ins">
			<Description><![CDATA["Материал изоляции"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Material>
		<Material Name="mep_m_pokr">
			<Description><![CDATA["Материал покрытия"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Material>
		<RealNum Name="mep_ra">
			<Description><![CDATA["Расход"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="mep_m_gost">
			<Description><![CDATA["ГОСТ на материал"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="mep_gost">
			<Description><![CDATA["ГОСТ на элемент"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
	</Parameters>
</ParamSection>

<CalledMacros SectVersion="2" SectionFlags="0" SubIdent="0">
</CalledMacros>

<Copyright SectVersion="1" SectionFlags="0" SubIdent="0">
	<Author>GRAPHISOFT</Author>
	<License>
		<Type>CC BY-ND</Type>
		<Version>3.0</Version>
	</License>
</Copyright>

</Symbol>
