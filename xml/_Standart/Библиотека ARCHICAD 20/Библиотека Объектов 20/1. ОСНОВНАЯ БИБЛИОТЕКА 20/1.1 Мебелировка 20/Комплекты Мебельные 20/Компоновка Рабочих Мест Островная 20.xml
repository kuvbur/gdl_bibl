<?xml version="1.0" encoding="UTF-8"?>
<Symbol IsArchivable="true" IsPlaceable="true" MainGUID="AC4B3B94-10D6-4910-B5F0-137F8B0D090F" MigrationValue="Normal" Owner="1196638531" Signature="1196644685" Version="38">
<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_3D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
if gs_detlevel_3D_m = 0 then end

unID = 1
centerunID = 30000

! ======================================================================
! Desks (with Front Panel, Desk Cabinet, Chair, Keyboard, LCD Monitor)
! ======================================================================

for iDe = 1 to deskNumber
	add -layoutDimModX / 2, layoutDimModY / 2 * DESK_LAYOUT_4 + layoutDimModY3Desk / 2 * DESK_LAYOUT_3, 0
	rotz 90

	if enableDesk[iDe] then
		gosub "desk"
	endif

	del 2

	if iArrangement = ARRANGE_4_DESK_MIRR then
		mul 1 - 2 * (iDe = 1 or iDe = 3), 1 - 2 * (iDe = 2 or iDe = 4), 1
	else
		rotz -iDeskAngle
	endif
next iDe

del deskNumber



! ======================================================================
! Extensions (Rounded, Desk, Desk with Chair, Cabinet, Partition)
! ======================================================================

for iExt = 1 to deskNumber
	add layoutDimModX / 2 * NOT(bSymmetricalDeskEnd), extDistFromCenter[iExt], 0
	if iExtensionType[iExt] = EXT_PARTITION then
		add 0, partitionFrameThk / 2 * (iPartitionPos = PARPOS_BETW_D) - partitionFrameThk / 2 * (iPartitionPos = PARPOS_ABOVE_D), 0
	endif

	gosub "extension"

	del 1 + (iExtensionType[iExt] = EXT_PARTITION)
rotz  -iDeskAngle
next iExt

del deskNumber



! ======================================================================
! Desk Partitions
! ======================================================================

if callAnyPartition then
	for iPa = 1 to deskNumber
		if existPartition[iPa] * (iPartitionPos = PARPOS_ABOVE_D) + enablePartition[iPa] * (iPartitionPos = PARPOS_BETW_D) then
			add 0, partCenterDist[iPa], 0
				gosub "partition"
			del 1
		endif
	rotz  -iDeskAngle
	next iPa

	del deskNumber
endif



! ======================================================================
! Desk Center Partitions Column
! ======================================================================

if existPartCenterColumn then
	if iPartitionPos = PARPOS_BETW_D then
		bShowPartEdgeTop		= NOT(enablePartition[1])
		bShowPartEdgeRight		= NOT(enablePartition[2])
		bShowPartEdgeBottom		= NOT(enablePartition[3]) * DESK_LAYOUT_4
		bShowPartEdgeLeft		= NOT(enablePartition[4]) * DESK_LAYOUT_4 + NOT(enablePartition[3]) * DESK_LAYOUT_3
	else
		bShowPartEdgeTop		= NOT(existPartition[1])
		bShowPartEdgeRight		= NOT(existPartition[2])
		bShowPartEdgeBottom		= NOT(existPartition[3]) * DESK_LAYOUT_4
		bShowPartEdgeLeft		= NOT(existPartition[4]) * DESK_LAYOUT_4 + NOT(existPartition[3]) * DESK_LAYOUT_3
	endif
	gosub "partitionColumn"
endif

! ======================================================================
end
! ======================================================================



"desk":
	call "completeTable_m" parameters all	iTableTopType			= 1,
											iDeskAngle				= iDeskAngle,
											bCalledAsExtension		= 0,
											bPartOfLayout			= 1,
											bPartOfWsSolo			= 0,
											bChair					= 1,
											bEnableDeskHsCorner		= 0,
											bEnableDeskHsHalfEdge	= 0,
											bEnableDeskHsEditingX	= 1,
											bEnableDeskHsEditingY	= 1,
											bEnableDeskHsEditingC	= 1,
											bEnableChairHsEditing 	= 1,
											bEnableSeatHeightHsEdit	= 1,
											bMirroredComputer		= (iDe / 2 = INT(iDe / 2)) * (iArrangement = ARRANGE_4_DESK_MIRR),
											bMirroredCabPos			= 0,
											chairPos				= 2,
											zzyzx					= tableTopHeight,
											completeTable_unID		= unID,
											stSymbolTypes			= stSymbolTypes,
											bKnobNoneType			= 0,
											returned_parameters completeTable_unID
	unID = completeTable_unID
return

"extension":
	call "deskClosings_m" parameters all	iExtensionType			= iExtensionType[iExt],
											partitionFrameThk		= partitionFrameThk,
											bSymmetricalDeskEnd		= bSymmetricalDeskEnd,
											extRoundedRad			= layoutEndWidth[iExt] / 2 - layoutDimModX / 2 * NOT(bSymmetricalDeskEnd),
											bCalledAsExtension		= 1,
											bPartOfLayout			= 1,
											bPartOfWsSolo			= 0,
											extPartLengthStart		= extPartLengthStart[iExt],
											extPartLengthEnd		= extPartLengthEnd[iExt],
											bShowExtPartConnEdge	= NOT(existPartition[iExt]) * (iPartitionPos = PARPOS_ABOVE_D) or NOT(callAnyPartition) * (iPartitionPos = PARPOS_BETW_D) or (iPartitionLength = PARLENGTH_CUSTOM),
											anglePartititon			= 0,
											xPartOrigPos			= 0,
											yPartOrigPos			= 0,
											iExtraDeskCab			= iExtraDeskCab * bShowCabParams,
											deskClosings_unID		= unID,
											stSymbolTypes			= stSymbolTypes,
											bKnobNoneType			= 0,
											returned_parameters deskClosings_unID
	unID = deskClosings_unID
	if iExtensionType[iExt] = 2 or iExtensionType[iExt] = 3 then
		hotspot 0, extraDeskDepth / 2, 0,				centerunID, tableTopHeight, 1 : centerunID = centerunID + 1
		hotspot 0, extraDeskDepth / 2, tableTopHeight,	centerunID, tableTopHeight, 2 : centerunID = centerunID + 1
		hotspot 0, extraDeskDepth / 2, -1,				centerunID, tableTopHeight, 3 : centerunID = centerunID + 1
	endif
return

"partition":
	call "deskClosings_m" parameters all	iExtensionType			= DESK_PARTITION,
											partitionFrameThk		= partitionFrameThk,
											iDeskAngle				= iDeskAngle,
											bCalledAsExtension		= 0,
											bPartOfLayout			= 1,
											bPartOfWsSolo			= 0,
											lengthPartition			= partLength[iPa],
											bOnlyPartitionColumn	= 0,
											bOnlyPartitionCover		= NOT(existPartition[iPa]),
											bShowPartEdgeLeft		= ((iPartitionLength = PARLENGTH_CUSTOM) and (ABS(partitionOffsetCustom) > 0)) or NOT(existPartCenterColumn),
											bShowPartEdgeRight		= NOT(iExtensionType[iPa] = EXT_PARTITION) or (iPartitionLength = PARLENGTH_CUSTOM),
											anglePartititon			= 90,
											xPartOrigPos			= 0,
											yPartOrigPos			= 0,
											deskClosings_unID		= unID,
											stSymbolTypes			= stSymbolTypes,
											bKnobNoneType			= 0,
											returned_parameters deskClosings_unID
	unID = deskClosings_unID
return

"partitionColumn":
	call "deskClosings_m" parameters all	iExtensionType			= DESK_PARTITION,
											partitionFrameThk		= partitionFrameThk,
											iDeskAngle				= iDeskAngle,
											bCalledAsExtension		= 0,
											bPartOfLayout			= 1,
											bPartOfWsSolo			= 0,
											bOnlyPartitionColumn	= 1,
											bOnlyPartitionCover		= 0,
											bShowPartEdgeTop		= bShowPartEdgeTop,
											bShowPartEdgeRight		= bShowPartEdgeRight,
											bShowPartEdgeBottom		= bShowPartEdgeBottom,
											bShowPartEdgeLeft		= bShowPartEdgeLeft,
											deskClosings_unID		= unID,
											stSymbolTypes			= stSymbolTypes,
											bKnobNoneType			= 0,
											returned_parameters deskClosings_unID
	unID = deskClosings_unID
return

]]>
</Script_3D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_2D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
unID = 1
centerunID = 20000

! ======================================================================
! Desks (with Front Panel, Desk Cabinet, Chair, Keyboard, LCD Monitor)
! ======================================================================

for iDe = 1 to deskNumber
	add2 -layoutDimModX / 2, layoutDimModY / 2 * DESK_LAYOUT_4 + layoutDimModY3Desk / 2 * DESK_LAYOUT_3
	rot2 90

	if enableDesk[iDe] then
		gosub "desk"
	endif

	del 2

	if iArrangement = ARRANGE_4_DESK_MIRR then
		mul2 1 - 2 * (iDe = 1 or iDe = 3), 1 - 2 * (iDe = 2 or iDe = 4)
	else
		rot2 -iDeskAngle
	endif
next iDe

del deskNumber



! ======================================================================
! Extensions (Rounded, Desk, Desk with Chair, Cabinet, Partition)
! ======================================================================

for iExt = 1 to deskNumber
	add2 layoutDimModX / 2 * NOT(bSymmetricalDeskEnd), extDistFromCenter[iExt]
	if iExtensionType[iExt] = EXT_PARTITION then
		add2 0, partitionFrameThk / 2 * (iPartitionPos = PARPOS_BETW_D) - partitionFrameThk / 2 * (iPartitionPos = PARPOS_ABOVE_D)
	endif

	gosub "extension"

	del 1 + (iExtensionType[iExt] = EXT_PARTITION)
rot2  -iDeskAngle
next iExt

del deskNumber



! ======================================================================
! Desk Partitions
! ======================================================================

if callAnyPartition then
	for iPa = 1 to deskNumber
		if existPartition[iPa] * (iPartitionPos = PARPOS_ABOVE_D) + enablePartition[iPa] * (iPartitionPos = PARPOS_BETW_D) then
			add2 0, partCenterDist[iPa]

			gosub "partition"

			del 1
		endif
	rot2  -iDeskAngle
	next iPa

	del deskNumber
endif



! ======================================================================
! Desk Center Partitions Column
! ======================================================================

if existPartCenterColumn then
	if iPartitionPos = PARPOS_BETW_D then
		bShowPartEdgeTop		= NOT(enablePartition[1])
		bShowPartEdgeRight		= NOT(enablePartition[2])
		bShowPartEdgeBottom		= NOT(enablePartition[3]) * DESK_LAYOUT_4
		bShowPartEdgeLeft		= NOT(enablePartition[4]) * DESK_LAYOUT_4 + NOT(enablePartition[3]) * DESK_LAYOUT_3
	else
		bShowPartEdgeTop		= NOT(existPartition[1])
		bShowPartEdgeRight		= NOT(existPartition[2])
		bShowPartEdgeBottom		= NOT(existPartition[3]) * DESK_LAYOUT_4
		bShowPartEdgeLeft		= NOT(existPartition[4]) * DESK_LAYOUT_4 + NOT(existPartition[3]) * DESK_LAYOUT_3
	endif
	gosub "partitionColumn"
endif



! ======================================================================
! Minimal Space
! ======================================================================

reqBMinSpace = 0
minSpaceUnID = 3000
call "fa_minimalspace" parameters all MSType = 0, unID = 3000,
							returned_parameters reqBMinSpace,
												MSFillType,
												MSFillPen,
												MSFillBackPen,
												MSContLineType,
												MSContLinePen

if reqBMinSpace <> 0 then
	drawindex 10
	FILL MSFillType
	pen MSContLinePen
	line_type MSContLineType

	if DESK_LAYOUT_4 then
		poly2_b 4, 1+2+4+64, MSFillPen, MSFillBackPen,
			minSpaceRightSideDimA, minSpaceTopSideDimB, 1,
			minSpaceRightSideDimA, -minSpaceBottomSideDimB, 1,
			-minSpaceLeftSideDimA, -minSpaceBottomSideDimB, 1,
			-minSpaceLeftSideDimA, minSpaceTopSideDimB, 1

		hotspot2 minSpaceRightSideDimA, minSpaceTopSideDimB,		minSpaceUnID : minSpaceUnID = minSpaceUnID + 1
		hotspot2 minSpaceRightSideDimA, -minSpaceBottomSideDimB,	minSpaceUnID : minSpaceUnID = minSpaceUnID + 1
		hotspot2 -minSpaceLeftSideDimA, -minSpaceBottomSideDimB,	minSpaceUnID : minSpaceUnID = minSpaceUnID + 1
		hotspot2 -minSpaceLeftSideDimA, minSpaceTopSideDimB,		minSpaceUnID : minSpaceUnID = minSpaceUnID + 1
	endif
	if DESK_LAYOUT_3 then
		calcExtWidthForMinSpaceFill	= (iArrangement = ARRANGE_3_DESK_ALIGN)

		poly2_b 6, 1+2+4+64, MSFillPen, MSFillBackPen,
			-extPartLengthStart[1] + extWidthTop / TAN(60) * calcExtWidthForMinSpaceFill - SIN(60) * MSFront - COS(60) * MSFront * TAN(minSpaceBetaTop),
			deskGroupTopSideDimB + extWidthTop * calcExtWidthForMinSpaceFill + minSpaceTop, 1,
			extPartLengthEnd[1] - extWidthTop / TAN(60) * calcExtWidthForMinSpaceFill + SIN(60) * MSFront + COS(60) * MSFront * TAN(minSpaceBetaTop),
			deskGroupTopSideDimB + extWidthTop * calcExtWidthForMinSpaceFill + minSpaceTop, 1,
			maxdeskGroupRightAxisLength + extPartLengthEnd[2] * COS(60) + extWidthRight / COS(30) * COS(60) * calcExtWidthForMinSpaceFill + SIN(60) * MSFront - COS(60) * MSFront * TAN(minSpaceBetaRight),
			-maxdeskGroupBottomAxisLength + extPartLengthEnd[2] * SIN(60) - extWidthRight / COS(30) * SIN(60) * calcExtWidthForMinSpaceFill + COS(60) * MSFront + SIN(60) * MSFront * TAN(minSpaceBetaRight), 1,
			maxdeskGroupRightAxisLength - extPartLengthStart[2] * COS(60) + extWidthRight / COS(30) * calcExtWidthForMinSpaceFill - MSFront * TAN(minSpaceBetaRight),
			-maxdeskGroupBottomAxisLength - extPartLengthStart[2] * SIN(60) - MSFront, 1,
			-maxdeskGroupLeftAxisLength + extPartLengthEnd[4] * COS(60) - extWidthLeft / COS(30) * calcExtWidthForMinSpaceFill + MSFront * TAN(minSpaceBetaLeft),
			-maxdeskGroupBottomAxisLength - extPartLengthEnd[4] * SIN(60) - MSFront, 1,
			-maxdeskGroupLeftAxisLength - extPartLengthStart[4] * COS(60) - extWidthLeft / COS(30) * COS(60) * calcExtWidthForMinSpaceFill - SIN(60) * MSFront + COS(60) * MSFront * TAN(minSpaceBetaLeft),
			-maxdeskGroupBottomAxisLength + extPartLengthStart[4] * SIN(60) - extWidthLeft / COS(30) * SIN(60) * calcExtWidthForMinSpaceFill + COS(60) * MSFront + SIN(60) * MSFront * TAN(minSpaceBetaLeft), 1


		hotspot2 -extPartLengthStart[1] + extWidthTop / TAN(60) * calcExtWidthForMinSpaceFill - SIN(60) * MSFront - COS(60) * MSFront * TAN(minSpaceBetaTop),
				deskGroupTopSideDimB + extWidthTop * calcExtWidthForMinSpaceFill + minSpaceTop,																						minSpaceUnID : minSpaceUnID = minSpaceUnID + 1
		hotspot2 extPartLengthEnd[1] - extWidthTop / TAN(60) * calcExtWidthForMinSpaceFill + SIN(60) * MSFront + COS(60) * MSFront * TAN(minSpaceBetaTop),
				deskGroupTopSideDimB + extWidthTop * calcExtWidthForMinSpaceFill + minSpaceTop,																						minSpaceUnID : minSpaceUnID = minSpaceUnID + 1
		hotspot2 maxdeskGroupRightAxisLength + extPartLengthEnd[2] * COS(60) + extWidthRight / COS(30) * COS(60) * calcExtWidthForMinSpaceFill + SIN(60) * MSFront - COS(60) * MSFront * TAN(minSpaceBetaRight),
				-maxdeskGroupBottomAxisLength + extPartLengthEnd[2] * SIN(60) - extWidthRight / COS(30) * SIN(60) * calcExtWidthForMinSpaceFill + COS(60) * MSFront + SIN(60) * MSFront * TAN(minSpaceBetaRight),	minSpaceUnID : minSpaceUnID = minSpaceUnID + 1
		hotspot2 maxdeskGroupRightAxisLength - extPartLengthStart[2] * COS(60) + extWidthRight / COS(30) * calcExtWidthForMinSpaceFill - MSFront * TAN(minSpaceBetaRight),
				-maxdeskGroupBottomAxisLength - extPartLengthStart[2] * SIN(60) - MSFront,																							minSpaceUnID : minSpaceUnID = minSpaceUnID + 1
		hotspot2 -maxdeskGroupLeftAxisLength + extPartLengthEnd[4] * COS(60) - extWidthLeft / COS(30) * calcExtWidthForMinSpaceFill + MSFront * TAN(minSpaceBetaLeft),
				-maxdeskGroupBottomAxisLength - extPartLengthEnd[4] * SIN(60) - MSFront,																							minSpaceUnID : minSpaceUnID = minSpaceUnID + 1
		hotspot2 -maxdeskGroupLeftAxisLength - extPartLengthStart[4] * COS(60) - extWidthLeft / COS(30) * COS(60) * calcExtWidthForMinSpaceFill - SIN(60) * MSFront + COS(60) * MSFront * TAN(minSpaceBetaLeft),
				-maxdeskGroupBottomAxisLength + extPartLengthStart[4] * SIN(60) - extWidthLeft / COS(30) * SIN(60) * calcExtWidthForMinSpaceFill + COS(60) * MSFront + SIN(60) * MSFront * TAN(minSpaceBetaLeft),	minSpaceUnID : minSpaceUnID = minSpaceUnID + 1
	endif

	line_type 1
endif

! ======================================================================
end
! ======================================================================



"desk":
	call "completeTable_m" parameters all	iTableTopType			= 1,
											iDeskAngle				= iDeskAngle,
											bCalledAsExtension		= 0,
											bPartOfLayout			= 1,
											bPartOfWsSolo			= 0,
											bChair					= 1,
											bEnableDeskHsCorner		= 0,
											bEnableDeskHsHalfEdge	= 0,
											bEnableDeskHsEditingX	= 1,
											bEnableDeskHsEditingY	= 1,
											bEnableDeskHsEditingC	= 1,
											bEnableChairHsEditing 	= 1,
											bMirroredComputer		= (iDe / 2 = INT(iDe / 2)) * (iArrangement = ARRANGE_4_DESK_MIRR),
											bMirroredCabPos			= 0,
											chairPos				= 2,
											zzyzx					= tableTopHeight,
											completeTable_unID		= unID,
											stSymbolTypes			= stSymbolTypes,
											returned_parameters completeTable_unID
	unID = completeTable_unID
return

"extension":
	call "deskClosings_m" parameters all	iExtensionType			= iExtensionType[iExt],
											partitionFrameThk		= partitionFrameThk,
											bSymmetricalDeskEnd		= bSymmetricalDeskEnd,
											extRoundedRad			= layoutEndWidth[iExt] / 2 - layoutDimModX / 2 * NOT(bSymmetricalDeskEnd),
											bCalledAsExtension		= 1,
											bPartOfLayout			= 1,
											bPartOfWsSolo			= 0,
											extPartLengthStart		= extPartLengthStart[iExt],
											extPartLengthEnd		= extPartLengthEnd[iExt],
											bShowExtPartConnEdge	= NOT(existPartition[iExt]) * (iPartitionPos = PARPOS_ABOVE_D) or NOT(callAnyPartition) * (iPartitionPos = PARPOS_BETW_D) or (iPartitionLength = PARLENGTH_CUSTOM),
											anglePartititon			= 0,
											xPartOrigPos			= 0,
											yPartOrigPos			= 0,
											iExtraDeskCab			= iExtraDeskCab * bShowCabParams,
											deskClosings_unID		= unID,
											stSymbolTypes			= stSymbolTypes,
											returned_parameters deskClosings_unID
	unID = deskClosings_unID
	if iExtensionType[iExt] = 2 or iExtensionType[iExt] = 3 then
		hotspot2 0, extraDeskDepth / 2, centerunID : centerunID = centerunID + 1
	endif
return

"partition":
	call "deskClosings_m" parameters all	iExtensionType			= DESK_PARTITION,
											partitionFrameThk		= partitionFrameThk,
											iDeskAngle				= iDeskAngle,
											bCalledAsExtension		= 0,
											bPartOfLayout			= 1,
											bPartOfWsSolo			= 0,
											lengthPartition			= partLength[iPa],
											bOnlyPartitionColumn	= 0,
											bOnlyPartitionCover		= NOT(existPartition[iPa]),
											bShowPartEdgeLeft		= ((iPartitionLength = PARLENGTH_CUSTOM) and (ABS(partitionOffsetCustom) > 0)) or NOT(existPartCenterColumn),
											bShowPartEdgeRight		= NOT(iExtensionType[iPa] = EXT_PARTITION) or (iPartitionLength = PARLENGTH_CUSTOM),
											anglePartititon			= 90,
											xPartOrigPos			= 0,
											yPartOrigPos			= 0,
											deskClosings_unID		= unID,
											stSymbolTypes			= stSymbolTypes,
											returned_parameters deskClosings_unID
	unID = deskClosings_unID
return

"partitionColumn":
	call "deskClosings_m" parameters all	iExtensionType			= DESK_PARTITION,
											partitionFrameThk		= partitionFrameThk,
											iDeskAngle				= iDeskAngle,
											bCalledAsExtension		= 0,
											bPartOfLayout			= 1,
											bPartOfWsSolo			= 0,
											bOnlyPartitionColumn	= 1,
											bOnlyPartitionCover		= 0,
											bShowPartEdgeTop		= bShowPartEdgeTop,
											bShowPartEdgeRight		= bShowPartEdgeRight,
											bShowPartEdgeBottom		= bShowPartEdgeBottom,
											bShowPartEdgeLeft		= bShowPartEdgeLeft,
											deskClosings_unID		= unID,
											stSymbolTypes			= stSymbolTypes,
											returned_parameters deskClosings_unID
	unID = deskClosings_unID
return


]]>
</Script_2D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_1D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
EPS = 0.0001

partitionFrameThk	= 0.03

CABINET				= 0
SIMPLE_DESK			= 1
LAYOUT_ISLAND		= 2
LAYOUT_LINEAR		= 3
WS_SOLO				= 4

dim	stArrangement[4]
	stArrangement[1] = `4-стола (зеркально)`
	stArrangement[2] = `4-стола (повернуты)`
	stArrangement[3] = `3-стола (выровнены)`
	stArrangement[4] = `3-стола (со сдвигом)`

dim	stExtensionsType[6]
	stExtensionsType[1] = `Нет`
	stExtensionsType[2] = `Закругленный`
	stExtensionsType[3] = `Стол`
	stExtensionsType[4] = `Стол со Стулом`
	stExtensionsType[5] = `Тумбочка`
	stExtensionsType[6] = `Перегородка`

dim stSymbolTypes[16]
	stSymbolTypes[ 1] = `Круглый`
	stSymbolTypes[ 2] = `Круглый со Спинкой`
	stSymbolTypes[ 3] = `Прямоугольный`
	stSymbolTypes[ 4] = `Прямоугольный со Спинкой 1`
	stSymbolTypes[ 5] = `Трапециевидный`
	stSymbolTypes[ 6] = `Трапециевидный со Спинкой`
	stSymbolTypes[ 7] = `Криволинейный`
	stSymbolTypes[ 8] = `Криволинейный со Спинкой`
	stSymbolTypes[ 9] = `Прямоугольный со Спинкой 3`
	stSymbolTypes[10] = `Прямоугольный со Спинкой 2`
	stSymbolTypes[11] = `Круг со Спинкой 2`
	stSymbolTypes[12] = `Круглый со Спинкой 3`
	stSymbolTypes[13] = `Криволинейный со Спинкой 2`
	stSymbolTypes[14] = `Криволинейный со Спинкой 3`
	stSymbolTypes[15] = `Детальный 1`
	stSymbolTypes[16] = `Детальный 2`

ARRANGE_4_DESK_MIRR		= 1
ARRANGE_4_DESK_ROT		= 2
ARRANGE_3_DESK_ALIGN	= 3
ARRANGE_3_DESK_SHIFT	= 4

EXT_NONE			= 0
EXT_ROUNDED			= 1
EXT_DESK			= 2
EXT_DESK_WCHAIR		= 3
EXT_CABINET			= 4
EXT_PARTITION		= 5
DESK_PARTITION		= 6

PARPOS_ABOVE_D		= 1
PARPOS_BETW_D		= 2

PARLENGTH_DESK		= 1
PARLENGTH_CUSTOM	= 2

STRAIGHT			= 1
ROUNDED				= 2

OFFICECAB_NONE		= 0
OFFICECAB_SIDE1		= 1
OFFICECAB_SIDE2		= 2
OFFICECAB_BOTH		= 3

DESK_LAYOUT_4	= 0
DESK_LAYOUT_3	= 0
if iArrangement = ARRANGE_4_DESK_MIRR or iArrangement = ARRANGE_4_DESK_ROT then
	deskNumber		= 4
	DESK_LAYOUT_4	= 1
	iDeskAngle		= 90
else
	deskNumber		= 3
	DESK_LAYOUT_3	= 1
	iDeskAngle		= 120
endif

bSymmetricalDeskEnd	= (iArrangement = ARRANGE_4_DESK_MIRR) or (iArrangement = ARRANGE_3_DESK_ALIGN)

!!!!! Enabled Desks
dim	enableDesk[4]
	enableDesk[1]	= bDesk1
	enableDesk[2]	= bDesk2
	enableDesk[3]	= bDesk3
	enableDesk[4]	= bDesk4

!!!!! Enabled Partitions
dim	enablePartition[4]
	enablePartition[1]	= (bDesk1 or bDesk2)
	enablePartition[2]	= (bDesk2 or bDesk3)
	enablePartition[3]	= ((bDesk3 or bDesk4) and DESK_LAYOUT_4) or ((bDesk3 or bDesk1) and DESK_LAYOUT_3)
	enablePartition[4]	= (bDesk4 or bDesk1)

!!!!! Existing Partitions
dim	existPartition[4]
	existPartition[1]	= bPartition1 * enablePartition[1]
	existPartition[2]	= bPartition2 * enablePartition[2]
	existPartition[3]	= bPartition3 * enablePartition[3]
	existPartition[4]	= bPartition4 * enablePartition[4] * DESK_LAYOUT_4

!!!!! Existing Partition Center Column, and any of Partition
existPartCenterColumn	= 0
if	((iPartitionLength = PARLENGTH_DESK) or ((iPartitionLength = PARLENGTH_CUSTOM) and ABS(partitionOffsetCustom) < EPS)) * (iPartitionPos = PARPOS_ABOVE_D)\
	or (iPartitionPos = PARPOS_BETW_D) then
	existPartCenterColumn	= (existPartition[1] + existPartition[2] + existPartition[3] + existPartition[4]) > (iPartitionPos = PARPOS_ABOVE_D)
endif
callAnyPartition		= (iPartitionPos = PARPOS_ABOVE_D) or existPartCenterColumn * (iPartitionPos = PARPOS_BETW_D)

!!!!! Existing Partition Center Column, and any of Partition
if existPartCenterColumn and (iPartitionPos = PARPOS_BETW_D) then
	layoutDimModX			= partitionFrameThk
	layoutDimModY			= partitionFrameThk
	layoutDimModY3Desk		= partitionFrameThk / TAN(iDeskAngle / 2)
else
	layoutDimModX			= 0
	layoutDimModY			= 0
	layoutDimModY3Desk		= 0
endif

!!!!! Extension Types
dim	iExtensionType[4]
	iExtensionType[1]	= iExtensionTypeTop
	iExtensionType[2]	= iExtensionTypeRight
	iExtensionType[3]	= iExtensionTypeBottom * DESK_LAYOUT_4 + iExtensionTypeLeft * DESK_LAYOUT_3
	iExtensionType[4]	= iExtensionTypeLeft

!!!!! Extension Distance from Center of Layout
dim	extDistFromCenter[4]
if bSymmetricalDeskEnd then
	extDistFromCenter[1]	= tableLength1 + layoutDimModY / 2 * DESK_LAYOUT_4 + layoutDimModY3Desk / 2 * DESK_LAYOUT_3
	extDistFromCenter[2]	= tableLength2 + layoutDimModX / 2 * DESK_LAYOUT_4 + layoutDimModY3Desk / 2 * DESK_LAYOUT_3
	extDistFromCenter[3]	= tableLength1 + layoutDimModY / 2 * DESK_LAYOUT_4 + layoutDimModY3Desk / 2 * DESK_LAYOUT_3
	extDistFromCenter[4]	= tableLength2 + layoutDimModX / 2 * DESK_LAYOUT_4 + layoutDimModY3Desk / 2 * DESK_LAYOUT_3
else
	extDistFromCenter[1]	= tableLength2 + layoutDimModY / 2 * DESK_LAYOUT_4 + layoutDimModY3Desk / 2 * DESK_LAYOUT_3
	extDistFromCenter[2]	= tableLength2 + layoutDimModX / 2 * DESK_LAYOUT_4 + layoutDimModY3Desk / 2 * DESK_LAYOUT_3
	extDistFromCenter[3]	= tableLength2 + layoutDimModY / 2 * DESK_LAYOUT_4 + layoutDimModY3Desk / 2 * DESK_LAYOUT_3
	extDistFromCenter[4]	= tableLength2 + layoutDimModX / 2 * DESK_LAYOUT_4 + layoutDimModY3Desk / 2 * DESK_LAYOUT_3
endif

!!!!! Layout End Width
dim	layoutEndWidth[4]
	layoutEndWidth[1]	= tableDepth2 * 2 * NOT(bSymmetricalDeskEnd) + tableDepth1 * 2 * bSymmetricalDeskEnd + layoutDimModY
	layoutEndWidth[2]	= tableDepth2 * 2 + layoutDimModX
	layoutEndWidth[3]	= tableDepth2 * 2 * NOT(bSymmetricalDeskEnd) + tableDepth1 * 2 * bSymmetricalDeskEnd + layoutDimModY
	layoutEndWidth[4]	= tableDepth2 * 2 + layoutDimModX

!!!!! Desk Partition Length
dim	partLength[4]

!!!!! Desk Partition Center Distance from Layout Center
dim	partCenterDist[4]

for iExtNum = 1 to 4
	if iPartitionPos = PARPOS_BETW_D then
		parLengthMod = (tableLength1 - tableLength2) * NOT(bSymmetricalDeskEnd)
	else
		parLengthMod = -partitionFrameThk * bSymmetricalDeskEnd * (iExtensionType[iExtNum] = EXT_PARTITION)
	endif
	partLength[iExtNum] = extDistFromCenter[iExtNum] - partitionFrameThk / 2 / TAN(iDeskAngle / 2) * existPartCenterColumn + parLengthMod

	if iPartitionLength = PARLENGTH_DESK then
		partCenterDist[iExtNum] = partLength[iExtNum] / 2 + partitionFrameThk / 2 / TAN(iDeskAngle / 2) * existPartCenterColumn
	else
		partCenterDist[iExtNum] = partitionOffsetCustom + partitionLengthCustom / 2 + partitionFrameThk / 2 / TAN(iDeskAngle / 2) * existPartCenterColumn
	endif
next iExtNum

!!!!! Left Side Extension Partition Length at Layout End
dim	extPartLengthStart[4]
	extPartLengthStart[1]	= tableDepth2 * NOT(bSymmetricalDeskEnd) + tableDepth1 * bSymmetricalDeskEnd + layoutDimModY / 2
	extPartLengthStart[2]	= tableDepth2 + layoutDimModX / 2
	extPartLengthStart[3]	= tableDepth1 * NOT(bSymmetricalDeskEnd) + tableDepth1 * bSymmetricalDeskEnd + layoutDimModY / 2
	extPartLengthStart[4]	= tableDepth2 + layoutDimModX / 2

!!!!! Right Side Extension Partition Length at Layout End
dim	extPartLengthEnd[4]
	extPartLengthEnd[1]		= tableDepth1 * NOT(bSymmetricalDeskEnd) + tableDepth1 * bSymmetricalDeskEnd + layoutDimModY / 2
	extPartLengthEnd[2]		= tableDepth2 + layoutDimModX / 2
	extPartLengthEnd[3]		= tableDepth2 * NOT(bSymmetricalDeskEnd) + tableDepth1 * bSymmetricalDeskEnd + layoutDimModY / 2
	extPartLengthEnd[4]		= tableDepth2 + layoutDimModX / 2



! ======================================================================
! Calculation For Object Dimensions and Minimal Space
! ======================================================================

dim extHeight[4]
for iExtNum = 1 to 4
	if iExtensionType[iExtNum] = EXT_NONE then			extHeight[iExtNum] = 0
	if iExtensionType[iExtNum] = EXT_ROUNDED then		extHeight[iExtNum] = tableTopHeight
	if iExtensionType[iExtNum] = EXT_DESK then			extHeight[iExtNum] = tableTopHeight
	if iExtensionType[iExtNum] = EXT_DESK_WCHAIR then	extHeight[iExtNum] = tableTopHeight
	if iExtensionType[iExtNum] = EXT_CABINET then		extHeight[iExtNum] = extCabinetHeight
	if iExtensionType[iExtNum] = EXT_PARTITION then		extHeight[iExtNum] = (gs_partitionHeight + tableTopHeight * (iPartitionPos = PARPOS_ABOVE_D))
next iExtNum
maxExtHeight 	= MAX(extHeight[1], extHeight[2], extHeight[3], extHeight[4])
realPartHeight	= 0
if existPartition[1] or existPartition[2] or existPartition[3] or existPartition[4] then
	realPartHeight	= gs_partitionHeight + tableTopHeight * (iPartitionPos = PARPOS_ABOVE_D)
endif

dim extWidth[4]
for iExtNum = 1 to 4
	if iExtensionType[iExtNum] = EXT_NONE then			extWidth[iExtNum] = 0
	if iExtensionType[iExtNum] = EXT_ROUNDED then		extWidth[iExtNum] = layoutEndWidth[iExtNum]
	if iExtensionType[iExtNum] = EXT_DESK then			extWidth[iExtNum] = extraDeskDepth
	if iExtensionType[iExtNum] = EXT_DESK_WCHAIR then	extWidth[iExtNum] = extraDeskDepth
	if iExtensionType[iExtNum] = EXT_CABINET then		extWidth[iExtNum] = extCabinetWidth
	if iExtensionType[iExtNum] = EXT_PARTITION then		extWidth[iExtNum] = partitionFrameThk * (iPartitionPos = PARPOS_BETW_D)
next iExtNum
extWidthTop		= extWidth[1]
extWidthRight	= extWidth[2]
extWidthBottom	= extWidth[3]
extWidthLeft	= extWidth[4]

if iArrangement = ARRANGE_4_DESK_MIRR then
	deskGroupLeftSideDimA	=	extDistFromCenter[4] * ((bDesk1 or bDesk4) or (iExtensionTypeLeft > EXT_NONE)) +\
								partitionFrameThk / 2 * (iExtensionTypeLeft = EXT_NONE) * existPartCenterColumn * (iPartitionPos = PARPOS_BETW_D) * (NOT(bDesk1) and NOT(bDesk4))
	deskGroupRightSideDimA	=	extDistFromCenter[2] * ((bDesk2 or bDesk3) or (iExtensionTypeRight > EXT_NONE)) +\
								partitionFrameThk / 2 * (iExtensionTypeRight = EXT_NONE) * existPartCenterColumn * (iPartitionPos = PARPOS_BETW_D) * (NOT(bDesk2) and NOT(bDesk3))
	deskGroupDimA			=	deskGroupLeftSideDimA + deskGroupRightSideDimA


	deskGroupTopSideDimB	=	extDistFromCenter[1] * ((bDesk1 or bDesk2) or (iExtensionTypeTop > EXT_NONE)) +\
								partitionFrameThk / 2 * (iExtensionTypeTop = EXT_NONE) * existPartCenterColumn * (iPartitionPos = PARPOS_BETW_D) * (NOT(bDesk1) and NOT(bDesk2))
	deskGroupBottomSideDimB	=	extDistFromCenter[3] * ((bDesk3 or bDesk4) or (iExtensionTypeBottom > EXT_NONE)) +\
								partitionFrameThk / 2 * (iExtensionTypeBottom = EXT_NONE) * existPartCenterColumn * (iPartitionPos = PARPOS_BETW_D) * (NOT(bDesk3) and NOT(bDesk4))
	deskGroupDimB			=	deskGroupTopSideDimB + deskGroupBottomSideDimB

	layoutLeftSideDimA		=	deskGroupLeftSideDimA + extWidthLeft
	layoutRightSideDimA		=	deskGroupRightSideDimA + extWidthRight
	layoutTopSideDimB		=	deskGroupTopSideDimB + extWidthTop
	layoutBottomSideDimB	=	deskGroupBottomSideDimB + extWidthBottom

	dim minSpaceOffset[4]
	for iExtNum = 1 to 4
		if iExtensionType[iExtNum] = EXT_NONE then			minSpaceOffset[iExtNum] = MSAllSides
		if iExtensionType[iExtNum] = EXT_ROUNDED then		minSpaceOffset[iExtNum] = MSAllSides
		if iExtensionType[iExtNum] = EXT_DESK then			minSpaceOffset[iExtNum] = MSFront
		if iExtensionType[iExtNum] = EXT_DESK_WCHAIR then	minSpaceOffset[iExtNum] = MSFront
		if iExtensionType[iExtNum] = EXT_CABINET then		minSpaceOffset[iExtNum] = MSAllSides
		if iExtensionType[iExtNum] = EXT_PARTITION then		minSpaceOffset[iExtNum] = MSAllSides
	next iExtNum
	minSpaceTop				=	minSpaceOffset[1]
	minSpaceRight			=	minSpaceOffset[2]
	minSpaceBottom			=	minSpaceOffset[3]
	minSpaceLeft			=	minSpaceOffset[4]

	minSpaceLeftSideDimA	=	layoutLeftSideDimA + minSpaceLeft
	minSpaceRightSideDimA	=	layoutRightSideDimA + minSpaceRight
	minSpaceTopSideDimB		=	layoutTopSideDimB + minSpaceTop
	minSpaceBottomSideDimB	=	layoutBottomSideDimB + minSpaceBottom
endif

if iArrangement = ARRANGE_4_DESK_ROT then
	deskGroupLeftSideDimA	=	MAX((tableLength1 + layoutDimModX / 2) * (bDesk4 or existPartition[4] * (iPartitionPos = PARPOS_BETW_D)), extDistFromCenter[4] + extWidthLeft) * ((bDesk1 or bDesk4) or (iExtensionTypeLeft > EXT_NONE)) +\
								partitionFrameThk / 2 * (iExtensionTypeLeft = EXT_NONE) * existPartCenterColumn * (iPartitionPos = PARPOS_BETW_D) * (NOT(bDesk1) and NOT(bDesk4))
	deskGroupRightSideDimA	=	MAX((tableLength1 + layoutDimModX / 2) * (bDesk2 or existPartition[2] * (iPartitionPos = PARPOS_BETW_D)), extDistFromCenter[2] + extWidthRight) * ((bDesk2 or bDesk3) or (iExtensionTypeRight > EXT_NONE)) +\
								partitionFrameThk / 2 * (iExtensionTypeRight = EXT_NONE) * existPartCenterColumn * (iPartitionPos = PARPOS_BETW_D) * (NOT(bDesk2) and NOT(bDesk3))
	deskGroupDimA			=	deskGroupLeftSideDimA + deskGroupRightSideDimA


	deskGroupTopSideDimB	=	MAX((tableLength1 + layoutDimModX / 2) * (bDesk1 or existPartition[1] * (iPartitionPos = PARPOS_BETW_D)), extDistFromCenter[1] + extWidthTop) * ((bDesk1 or bDesk2) or (iExtensionTypeTop > EXT_NONE)) +\
								partitionFrameThk / 2 * (iExtensionTypeTop = EXT_NONE) * existPartCenterColumn * (iPartitionPos = PARPOS_BETW_D) * (NOT(bDesk1) and NOT(bDesk2))
	deskGroupBottomSideDimB	=	MAX((tableLength1 + layoutDimModX / 2) * (bDesk3 or existPartition[3] * (iPartitionPos = PARPOS_BETW_D)), extDistFromCenter[3] + extWidthBottom) * ((bDesk3 or bDesk4) or (iExtensionTypeBottom > EXT_NONE)) +\
								partitionFrameThk / 2 * (iExtensionTypeBottom = EXT_NONE) * existPartCenterColumn * (iPartitionPos = PARPOS_BETW_D) * (NOT(bDesk3) and NOT(bDesk4))
	deskGroupDimB			=	deskGroupTopSideDimB + deskGroupBottomSideDimB

	layoutLeftSideDimA		=	deskGroupLeftSideDimA
	layoutRightSideDimA		=	deskGroupRightSideDimA
	layoutTopSideDimB		=	deskGroupTopSideDimB
	layoutBottomSideDimB	=	deskGroupBottomSideDimB

	minSpaceTop				=	MSAllSides
	minSpaceRight			=	MSAllSides
	minSpaceBottom			=	MSAllSides
	minSpaceLeft			=	MSAllSides

	minSpaceLeftSideDimA	=	layoutLeftSideDimA + minSpaceLeft
	minSpaceRightSideDimA	=	layoutRightSideDimA + minSpaceRight
	minSpaceTopSideDimB		=	layoutTopSideDimB + minSpaceTop
	minSpaceBottomSideDimB	=	layoutBottomSideDimB + minSpaceBottom
endif

if iArrangement = ARRANGE_3_DESK_ALIGN then
	maxDeskGroupLeftAxisLength	=	(extDistFromCenter[4] * ((bDesk1 or bDesk3) or (iExtensionTypeLeft > EXT_NONE)) +\
									partitionFrameThk / 2 * (iExtensionTypeLeft = EXT_NONE) * (iPartitionPos = PARPOS_BETW_D) * (NOT(bDesk1) and NOT(bDesk3))) * COS(30)
	maxDeskGroupRightAxisLength	=	(extDistFromCenter[2] * ((bDesk2 or bDesk3) or (iExtensionTypeRight > EXT_NONE)) +\
									partitionFrameThk / 2 * (iExtensionTypeRight = EXT_NONE) * (iPartitionPos = PARPOS_BETW_D) * (NOT(bDesk2) and NOT(bDesk3))) * COS(30)
	maxDeskGroupBottomAxisLength=	(extDistFromCenter[4] * ((bDesk1 or bDesk3) or (iExtensionTypeLeft > EXT_NONE)) +\
									partitionFrameThk / 2 * (iExtensionTypeBottom = EXT_NONE) * (iPartitionPos = PARPOS_BETW_D) * (NOT(bDesk1) and NOT(bDesk3))) * SIN(30)
	deskGroupTopAxisLength		=	extDistFromCenter[1] * ((bDesk1 or bDesk2) or (iExtensionTypeTop > EXT_NONE)) +\
									partitionFrameThk / 2 * (iExtensionTypeTop = EXT_NONE) * (iPartitionPos = PARPOS_BETW_D) * (NOT(bDesk1) and NOT(bDesk2))

	deskGroupLeftSideDimA	=	maxDeskGroupLeftAxisLength + extPartLengthStart[4] * COS(60)
	deskGroupRightSideDimA	=	maxDeskGroupRightAxisLength + extPartLengthStart[2] * COS(60)
	deskGroupDimA			=	deskGroupLeftSideDimA + deskGroupRightSideDimA


	deskGroupTopSideDimB	=	deskGroupTopAxisLength
	deskGroupBottomSideDimB	=	maxDeskGroupBottomAxisLength + extPartLengthStart[4] * SIN(60)
	deskGroupDimB			=	deskGroupTopSideDimB + deskGroupBottomSideDimB

	deskHalfDiagonal		=	SQR(extraDeskDepth ** 2 + (extraDeskWidth / 2) ** 2)
	deskAngle				=	ATN((extraDeskWidth / 2) / extraDeskDepth)
	cabDiagonal				=	SQR(extCabinetDepth ** 2 + extCabinetWidth ** 2)
	cabAngle				=	ATN(extCabinetDepth / extCabinetWidth)
	partHalfDiagonal		=	SQR(partitionFrameThk ** 2 + (layoutEndWidth[4] / 2) ** 2)
	partAngle				=	ATN((layoutEndWidth[4] / 2) / partitionFrameThk)

	dim extOffsetSideX[4]
	dim extOffsetBottomSideY[4]
	for iExtNum = 1 to 2
		if iExtensionType[iExtNum * 2] = EXT_NONE then			extOffsetSideX[iExtNum * 2] = 0
		if iExtensionType[iExtNum * 2] = EXT_ROUNDED then		extOffsetSideX[iExtNum * 2] = layoutEndWidth[iExtNum * 2] / 2 - extPartLengthStart[iExtNum * 2] * COS(60)
		if iExtensionType[iExtNum * 2] = EXT_DESK then			extOffsetSideX[iExtNum * 2] = deskHalfDiagonal * COS(deskAngle - 30) - extPartLengthStart[iExtNum * 2] * COS(60)
		if iExtensionType[iExtNum * 2] = EXT_DESK_WCHAIR then	extOffsetSideX[iExtNum * 2] = deskHalfDiagonal * COS(deskAngle - 30) - extPartLengthStart[iExtNum * 2] * COS(60)
		if iExtensionType[iExtNum * 2] = EXT_CABINET then		extOffsetSideX[iExtNum * 2] = cabDiagonal * COS(cabAngle - 30) - extPartLengthStart[iExtNum * 2] * COS(60)
		if iExtensionType[iExtNum * 2] = EXT_PARTITION then		extOffsetSideX[iExtNum * 2] = partHalfDiagonal * COS(partAngle - 30) - extPartLengthStart[iExtNum * 2] * COS(60) * (iPartitionPos = PARPOS_BETW_D)

		if iExtensionType[iExtNum * 2] = EXT_NONE then			extOffsetBottomSideY[iExtNum * 2] = 0
		if iExtensionType[iExtNum * 2] = EXT_ROUNDED then		extOffsetBottomSideY[iExtNum * 2] = layoutEndWidth[iExtNum * 2] / 2 - extPartLengthStart[iExtNum * 2] * SIN(60)
		if iExtensionType[iExtNum * 2] = EXT_DESK then			extOffsetBottomSideY[iExtNum * 2] = deskHalfDiagonal * COS(60 - deskAngle) - extPartLengthStart[iExtNum * 2] * SIN(60)
		if iExtensionType[iExtNum * 2] = EXT_DESK_WCHAIR then	extOffsetBottomSideY[iExtNum * 2] = deskHalfDiagonal * COS(60 - deskAngle) - extPartLengthStart[iExtNum * 2] * SIN(60)
		if iExtensionType[iExtNum * 2] = EXT_CABINET then		extOffsetBottomSideY[iExtNum * 2] = cabDiagonal * COS(60 - deskAngle) - extPartLengthStart[iExtNum * 2] * SIN(60)
		if iExtensionType[iExtNum * 2] = EXT_PARTITION then		extOffsetBottomSideY[iExtNum * 2] = partHalfDiagonal * COS(60 - deskAngle) - extPartLengthStart[iExtNum * 2] * SIN(60) * (iPartitionPos = PARPOS_BETW_D)
	next iExtNum

	extOffsetLeftX			=	extOffsetSideX[4]
	extOffsetRightX			=	extOffsetSideX[2]
	extOffsetBottomLeftY	=	extOffsetBottomSideY[4]
	extOffsetBottomRightY	=	extOffsetBottomSideY[2]

	layoutLeftSideDimA		=	deskGroupLeftSideDimA + extOffsetLeftX
	layoutRightSideDimA		=	deskGroupRightSideDimA + extOffsetRightX
	layoutTopSideDimB		=	deskGroupTopSideDimB + extWidthTop
	layoutBottomSideDimB	=	deskGroupBottomSideDimB + MAX(extOffsetBottomLeftY, extOffsetBottomRightY)

	dim minSpaceOffset[4]
	for iExtNum = 1 to 4
		if iExtensionType[iExtNum] = EXT_NONE then			minSpaceOffset[iExtNum] = MAX(EPS, MSAllSides)
		if iExtensionType[iExtNum] = EXT_ROUNDED then		minSpaceOffset[iExtNum] = MAX(EPS, MSAllSides)
		if iExtensionType[iExtNum] = EXT_DESK then			minSpaceOffset[iExtNum] = MAX(EPS, MSFront)
		if iExtensionType[iExtNum] = EXT_DESK_WCHAIR then	minSpaceOffset[iExtNum] = MAX(EPS, MSFront)
		if iExtensionType[iExtNum] = EXT_CABINET then		minSpaceOffset[iExtNum] = MAX(EPS, MSAllSides)
		if iExtensionType[iExtNum] = EXT_PARTITION then		minSpaceOffset[iExtNum] = MAX(EPS, MSAllSides)
	next iExtNum
	minSpaceTop				=	minSpaceOffset[1]
	minSpaceRight			=	minSpaceOffset[2]
	minSpaceLeft			=	minSpaceOffset[4]

	minSpaceAlphaLeft		=	ATN(COS(iDeskAngle - 90) / (MSFront / minSpaceLeft - SIN(iDeskAngle - 90)))
	minSpaceBetaLeft		=	iDeskAngle - 90 - minSpaceAlphaLeft
	minSpaceAlphaRight		=	ATN(COS(iDeskAngle - 90) / (MSFront / minSpaceRight - SIN(iDeskAngle - 90)))
	minSpaceBetaRight		=	iDeskAngle - 90 - minSpaceAlphaRight
	minSpaceAlphaTop		=	ATN(COS(iDeskAngle - 90) / (MSFront / minSpaceTop - SIN(iDeskAngle - 90)))
	minSpaceBetaTop			=	iDeskAngle - 90 - minSpaceAlphaTop
endif

if iArrangement = ARRANGE_3_DESK_SHIFT then
	cabDiagonal					=	SQR(extCabinetDepth ** 2 + extCabinetWidth ** 2)
	cabAngle					=	ATN(extCabinetDepth / extCabinetWidth)

	extOffsetLeftX				=	layoutEndWidth[4] / 2 * (iExtensionTypeLeft = EXT_ROUNDED)\
									+ cabDiagonal * COS(cabAngle - 30) * (iExtensionTypeLeft = EXT_CABINET)
	extOffsetBottomLeftY		=	layoutEndWidth[4] / 2 * (iExtensionTypeLeft = EXT_ROUNDED)\
									+ cabDiagonal * COS(60 - cabAngle) * (iExtensionTypeLeft = EXT_CABINET)
	extOffsetRightX				=	layoutEndWidth[2] / 2 * COS(30) * (iExtensionTypeRight = EXT_ROUNDED)\
									+ extCabinetWidth * COS(30) * (iExtensionTypeRight = EXT_CABINET)
	extOffsetBottomRightY		=	layoutEndWidth[2] / 2 * (iExtensionTypeRight = EXT_ROUNDED)\
									+ cabDiagonal * COS(60 - cabAngle) * (iExtensionTypeRight = EXT_CABINET)


	deskGroupLeftAxisLength1	=	((tableLength1 + layoutDimModX / 2) * (bDesk3 or existPartition[4] * (iPartitionPos = PARPOS_BETW_D)) * ((bDesk1 or bDesk3) or (iExtensionTypeLeft > EXT_NONE)) +\
									partitionFrameThk / 2 * (iExtensionTypeLeft = EXT_NONE) * (iPartitionPos = PARPOS_BETW_D) * (NOT(bDesk1) and NOT(bDesk3))) * COS(30)
	deskGroupLeftAxisLength2	=	((extDistFromCenter[4]) * ((bDesk1 or bDesk3) or (iExtensionTypeLeft > EXT_NONE)) +\
									partitionFrameThk / 2 * (iExtensionTypeLeft = EXT_NONE) * (iPartitionPos = PARPOS_BETW_D) * (NOT(bDesk1) and NOT(bDesk3))) * COS(30)
	maxDeskGroupLeftAxisLength	=	MAX(deskGroupLeftAxisLength1, deskGroupLeftAxisLength2)
	deskGroupLeftLength1		=	deskGroupLeftAxisLength1
	deskGroupLeftLength2		=	deskGroupLeftAxisLength2 + extPartLengthStart[4] * COS(60) * (iExtensionTypeLeft = EXT_NONE) + extOffsetLeftX


	deskGroupRightAxisLength1	=	((tableLength1 + layoutDimModX / 2) * (bDesk2 or existPartition[2] * (iPartitionPos = PARPOS_BETW_D)) * ((bDesk2 or bDesk3) or (iExtensionTypeRight > EXT_NONE)) +\
									partitionFrameThk / 2 * (iExtensionTypeRight = EXT_NONE) * (iPartitionPos = PARPOS_BETW_D) * (NOT(bDesk2) and NOT(bDesk3))) * COS(30)
	deskGroupRightAxisLength2	=	((extDistFromCenter[2]) * ((bDesk2 or bDesk3) or (iExtensionTypeRight > EXT_NONE)) +\
									partitionFrameThk / 2 * (iExtensionTypeRight = EXT_NONE) * (iPartitionPos = PARPOS_BETW_D) * (NOT(bDesk2) and NOT(bDesk3))) * COS(30)
	maxDeskGroupRightAxisLength	=	MAX(deskGroupRightAxisLength1, deskGroupRightAxisLength2)
	deskGroupRightLength1		=	deskGroupRightAxisLength1 + extPartLengthEnd[2] * COS(60)
	deskGroupRightLength2		=	deskGroupRightAxisLength2 + extOffsetRightX


	deskGroupBottomAxisLength1	=	((tableLength1 + layoutDimModX / 2) * (bDesk3 or existPartition[3] * (iPartitionPos = PARPOS_BETW_D)) * ((bDesk1 or bDesk3) or (iExtensionTypeLeft > EXT_NONE)) +\
									partitionFrameThk / 2 * (iExtensionTypeLeft = EXT_NONE) * (iPartitionPos = PARPOS_BETW_D) * (NOT(bDesk1) and NOT(bDesk3))) * SIN(30)
	deskGroupBottomAxisLength2	=	((extDistFromCenter[2]) * ((bDesk2 or bDesk3) or (iExtensionTypeRight > EXT_NONE)) +\
									partitionFrameThk / 2 * (iExtensionTypeRight = EXT_NONE) * (iPartitionPos = PARPOS_BETW_D) * (NOT(bDesk2) and NOT(bDesk3))) * SIN(30)
	maxDeskGroupBottomAxisLength=	MAX(deskGroupBottomAxisLength1, deskGroupBottomAxisLength2)

	deskGroupBottomLength1		=	deskGroupBottomAxisLength1 + extPartLengthEnd[4] * SIN(60)
	deskGroupBottomLength2		=	deskGroupBottomAxisLength2 + extPartLengthStart[2] * SIN(60) * (iExtensionTypeRight = EXT_NONE) + extOffsetBottomRightY


	deskGroupTopAxisLength1		=	((tableLength1 + layoutDimModX / 2) * (bDesk1 or existPartition[1] * (iPartitionPos = PARPOS_BETW_D)) * ((bDesk1 or bDesk3) or (iExtensionTypeTop > EXT_NONE)) +\
									partitionFrameThk / 2 * (iExtensionTypeTop = EXT_NONE) * (iPartitionPos = PARPOS_BETW_D) * (NOT(bDesk1) and NOT(bDesk2)))
	deskGroupTopAxisLength2		=	((extDistFromCenter[1]) * ((bDesk1 or bDesk2) or (iExtensionTypeRight > EXT_NONE)) +\
									partitionFrameThk / 2 * (iExtensionTypeTop = EXT_NONE) * (iPartitionPos = PARPOS_BETW_D) * (NOT(bDesk1) and NOT(bDesk2)))
	deskGroupTopLength1			=	deskGroupTopAxisLength1
	deskGroupTopLength2			=	deskGroupTopAxisLength2 + extWidthTop



	deskGroupLeftSideDimA		=	MAX(deskGroupLeftLength1, deskGroupLeftLength2)
	deskGroupRightSideDimA		=	MAX(deskGroupRightLength1, deskGroupRightLength2)
	deskGroupDimA				=	deskGroupLeftSideDimA + deskGroupRightSideDimA

	deskGroupBottomSideDimB		=	MAX(deskGroupBottomLength1, deskGroupBottomLength2)
	deskGroupTopSideDimB		=	MAX(deskGroupTopLength1, deskGroupTopLength2)
	deskGroupDimB				=	deskGroupTopSideDimB + deskGroupBottomSideDimB

	layoutLeftSideDimA			=	deskGroupLeftSideDimA
	layoutRightSideDimA			=	deskGroupRightSideDimA
	layoutBottomSideDimB		=	deskGroupBottomSideDimB
	layoutTopSideDimB			=	deskGroupTopSideDimB

	dim minSpaceOffset[4]
	for iExtNum = 1 to 4
		if iExtensionType[iExtNum] = EXT_NONE then			minSpaceOffset[iExtNum] = MAX(EPS, MSAllSides)
		if iExtensionType[iExtNum] = EXT_ROUNDED then		minSpaceOffset[iExtNum] = MAX(EPS, MSAllSides)
		if iExtensionType[iExtNum] = EXT_DESK then			minSpaceOffset[iExtNum] = MAX(EPS, MSFront)
		if iExtensionType[iExtNum] = EXT_DESK_WCHAIR then	minSpaceOffset[iExtNum] = MAX(EPS, MSFront)
		if iExtensionType[iExtNum] = EXT_CABINET then		minSpaceOffset[iExtNum] = MAX(EPS, MSAllSides)
		if iExtensionType[iExtNum] = EXT_PARTITION then		minSpaceOffset[iExtNum] = MAX(EPS, MSAllSides)
	next iExtNum

	minSpaceLeft				=	minSpaceOffset[4]
	minSpaceAlphaLeft			=	ATN(COS(iDeskAngle - 90) / (MSFront / minSpaceLeft - SIN(iDeskAngle - 90)))
	minSpaceBetaLeft			=	iDeskAngle - 90 - minSpaceAlphaLeft
	minSpaceRight				=	minSpaceOffset[2]
	minSpaceAlphaRight			=	ATN(COS(iDeskAngle - 90) / (MSFront / minSpaceRight - SIN(iDeskAngle - 90)))
	minSpaceBetaRight			=	iDeskAngle - 90 - minSpaceAlphaRight
	minSpaceTop					=	minSpaceOffset[1]
	minSpaceAlphaTop			=	ATN(COS(iDeskAngle - 90) / (MSFront / minSpaceTop - SIN(iDeskAngle - 90)))
	minSpaceBetaTop				=	iDeskAngle - 90 - minSpaceAlphaTop
endif



! ======================================================================
! For Parameter Locking and Hiding
! ======================================================================

bShowExtCabParams		= 0
bShowExtDeskParams		= 0
bShowExtDeskChairParams	= 0
bEnablePartExt			= 0
for ii = 1 to deskNumber
	if iExtensionType[ii] = EXT_CABINET then		bShowExtCabParams		= 1
	if iExtensionType[ii] = EXT_DESK_WCHAIR then	bShowExtDeskChairParams	= 1
	if iExtensionType[ii] = EXT_DESK then			bShowExtDeskParams		= 1
	if iExtensionType[ii] = EXT_DESK_WCHAIR then	bShowExtDeskParams		= 1
	if iExtensionType[ii] = EXT_PARTITION then		bEnablePartExt			= 1
next ii

bShowPartitionParams	=	bEnablePartExt or bPartition1 or bPartition2 or bPartition3 or bPartition4 * DESK_LAYOUT_4
bShowCabParams			=	gs_bOfficeCab
bShowExtDeskCabParams	=	bShowExtDeskParams and (iExtraDeskCab > OFFICECAB_NONE) and bShowCabParams
bShowCommonCabParams	=	bShowExtCabParams or bShowExtDeskCabParams or bShowCabParams
]]>
</Script_1D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_VL SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
hideparameter all "A", "B", "ZZYZX"

call "FM_types" parameters all

! ======================================================================
! UI
! ======================================================================

call "ui_tabcontrol" parameters		controlType			= 1,
									nTabs				= 10,
									gs_ui_current_page	= gs_ui_current_page


! ======================================================================
! Object sizing
! ======================================================================

a		= layoutLeftSideDimA + layoutRightSideDimA
b		= layoutTopSideDimB + layoutBottomSideDimB
zzyzx	= MAX(tableTopHeight, maxExtHeight, realPartHeight)
parameters a		= a
parameters b		= b
parameters zzyzx	= zzyzx
lock	"a",
		"b",
		"zzyzx"



! ======================================================================
! Desks
! ======================================================================

if GLOB_MODPAR_NAME = "arrangement" or GLOB_MODPAR_NAME = "iArrangement" then
	if bSymmetricalDeskEnd then
		tableLength1			= defaultValues[1]		!1.50
		tableLength2			= defaultValues[2]		!1.50

		defaultExtensionType	= EXT_NONE
	else
		tableLength1			= defaultValues[3]		!1.80
		tableLength2			= defaultValues[4]		!1.20
		tableDepth1				= defaultValues[5]		!0.60
		tableDepth2				= defaultValues[5]		!0.60
		extCabinetWidth			= defaultValues[6]		!0.60
		extCabinetDepth			= defaultValues[7]		!0.50

		defaultExtensionType	= EXT_CABINET
	endif

	parameters tableLength1		= tableLength1
	parameters tableLength2		= tableLength2
	parameters tableDepth1		= tableDepth1
	parameters tableDepth2		= tableDepth2
	parameters extCabinetWidth	= extCabinetWidth
	parameters extCabinetDepth	= extCabinetDepth

	iExtensionTypeTop		= defaultExtensionType
	iExtensionTypeRight		= defaultExtensionType
	iExtensionTypeLeft		= defaultExtensionType
	iExtensionTypeBottom	= defaultExtensionType

	parameters iExtensionTypeTop	= iExtensionTypeTop
	parameters iExtensionTypeRight	= iExtensionTypeRight
	parameters iExtensionTypeLeft	= iExtensionTypeLeft
	parameters iExtensionTypeBottom	= iExtensionTypeBottom
endif

values "MSAllSides" range[0, ]

values "iCabKnobType" 1, 2, 3, 4, 5, 6, 7, 8
values "iCabKnobVerPos" 1, 0, -1
values "iExtCabKnobType" 0, 1, 2, 3, 4, 5, 6, 7, 8
values "iExtCabKnobVerPos" 1, 0, -1
if GLOB_MODPAR_NAME = "iCabKnobType" or GLOB_MODPAR_NAME = "iExtCabKnobType" then
	if GLOB_MODPAR_NAME = "iCabKnobType" then
		gs_knob_type_m = iCabKnobType
		parameters gs_knob_type_m = gs_knob_type_m
	else
		gs_knob_type_m = iExtCabKnobType
		parameters gs_knob_type_m = gs_knob_type_m
	endif
else
	iCabKnobType	= gs_knob_type_m
	iExtCabKnobType	= gs_knob_type_m
	parameters iCabKnobType		= iCabKnobType
	parameters iExtCabKnobType	= iExtCabKnobType
endif
if GLOB_MODPAR_NAME = "iCabKnobVerPos" or GLOB_MODPAR_NAME = "iExtCabKnobVerPos" then
	if GLOB_MODPAR_NAME = "iCabKnobVerPos" then
		gs_knobVerPos_m = iCabKnobVerPos
		parameters gs_knobVerPos_m = gs_knobVerPos_m
	else
		gs_knobVerPos_m = iExtCabKnobVerPos
		parameters gs_knobVerPos_m = gs_knobVerPos_m
	endif
else
	iCabKnobVerPos		= gs_knobVerPos_m
	iExtCabKnobVerPos	= gs_knobVerPos_m
	parameters iCabKnobVerPos		= iCabKnobVerPos
	parameters iExtCabKnobVerPos	= iExtCabKnobVerPos
endif

if ((iExtensionTypeLeft <> 4 and iExtensionTypeRight <> 4 and  iExtensionTypeBottom <> 4 and  iExtensionTypeTop <> 4) or iCabinetScheme = 5) and not(gs_bOfficeCab) then
	hideparameter "iCabKnobType", "bKnob", "iCabKnobVerPos", "gs_bevel"
	lock "iCabKnobType", "bKnob", "iCabKnobVerPos", "gs_bevel"
endif
if not(bKnob) then
	hideparameter "iCabKnobVerPos", "iExtCabKnobVerPos", "iCabKnobType"
	lock "iCabKnobVerPos", "iExtCabKnobVerPos", "iCabKnobType"
endif
if NOT(bShowExtCabParams) then
	hideparameter "iExtCabKnobType", "iExtCabKnobVerPos"
	lock "iExtCabKnobType", "iExtCabKnobVerPos"
endif

call "completeTable_m" parameters all	iTableTopType			= 1,
										zzyzx					= tableTopHeight,
										ideskAngle				= ideskAngle,
										chairPos				= 2,
										bCalledAsExtension		= 0,
										bPartOfLayout			= 1,
										bPartOfWsSolo			= 0,
										bEnableBasetypes		= 0,
										bMirroredCabPos			= 0,
										bShowCommonCabParams	= bShowCommonCabParams,
										bShowCabParams			= bShowCabParams,
										bShowExtDeskCabParams	= bShowExtDeskCabParams,
										bKnobNoneType			= 0,
										stSymbolTypes			= stSymbolTypes



! ======================================================================
! Extensions, Partitions
! ======================================================================

call "deskClosings_m" parameters all	bPartOfLayout			= 1,
										bPartOfWsSolo			= 0,
										bShowCabParams			= bShowCabParams,
										bShowPartitionParams	= bShowPartitionParams,
										bShowExtCabParams		= bShowExtCabParams,
										bShowExtDeskParams		= bShowExtDeskParams,
										bShowExtDeskChairParams	= bShowExtDeskChairParams,
										bShowExtDeskCabParams	= bShowExtDeskCabParams,
										bShowCommonCabParams	= bShowCommonCabParams,
										bEnableCustPartLength	= 1,
										bKnobNoneType			= 0,
										stSymbolTypes			= stSymbolTypes

! enableExtensionTypes - possible values
!	2		- enable None
!	4		- enable Rounded
!	8		- enable Desk
!	16		- enable Desk with Chair
!	32		- enable Cabinet
!	64		- enable Partition

enableExtensionTypes = 2 + 4 + 32 + (8 + 16 + 64) * ((iArrangement = ARRANGE_4_DESK_MIRR) or (iArrangement = ARRANGE_3_DESK_ALIGN))

if enableExtensionTypes < EPS then enableExtensionTypes = 2 + 4 + 8 + 16 + 32 + 64

dim extensionTypeValueList[]
j = 1
for i = 1 to vardim1(stExtensionsType)
	if bittest(enableExtensionTypes, i) then
		put i - 1
		extensionTypeValueList[j] = stExtensionsType[i]
		j = j + 1
	endif
next i

values "extensionTypeTop" extensionTypeValueList
values "iExtensionTypeTop" use(NSP)
if GLOB_MODPAR_NAME = "extensionTypeTop" then
	for iExtTop = 1 to vardim1(stExtensionsType)
		if extensionTypeTop = stExtensionsType[iExtTop] then iExtensionTypeTop = iExtTop - 1
	next iExtTop
	parameters iExtensionTypeTop = iExtensionTypeTop
else
	extensionTypeTop = stExtensionsType[iExtensionTypeTop + 1]
	parameters extensionTypeTop = extensionTypeTop
endif

values "extensionTypeRight" extensionTypeValueList
values "iExtensionTypeRight" use(NSP)
if GLOB_MODPAR_NAME = "extensionTypeRight" then
	for iExtRight = 1 to vardim1(stExtensionsType)
		if extensionTypeRight = stExtensionsType[iExtRight] then iExtensionTypeRight = iExtRight - 1
	next iExtRight
	parameters iExtensionTypeRight = iExtensionTypeRight
else
	extensionTypeRight = stExtensionsType[iExtensionTypeRight + 1]
	parameters extensionTypeRight = extensionTypeRight
endif

values "extensionTypeBottom" extensionTypeValueList
values "iExtensionTypeBottom" use(NSP)
if GLOB_MODPAR_NAME = "extensionTypeBottom" then
	for iExtBottom = 1 to vardim1(stExtensionsType)
		if extensionTypeBottom = stExtensionsType[iExtBottom] then iExtensionTypeBottom = iExtBottom - 1
	next iExtBottom
	parameters iExtensionTypeBottom = iExtensionTypeBottom
else
	extensionTypeBottom = stExtensionsType[iExtensionTypeBottom + 1]
	parameters extensionTypeBottom = extensionTypeBottom
endif

values "extensionTypeLeft" extensionTypeValueList
values "iExtensionTypeLeft" get(NSP)
if GLOB_MODPAR_NAME = "extensionTypeLeft" then
	for iExtLeft = 1 to vardim1(stExtensionsType)
		if extensionTypeLeft = stExtensionsType[iExtLeft] then iExtensionTypeLeft = iExtLeft - 1
	next iExtLeft
	parameters iExtensionTypeLeft = iExtensionTypeLeft
else
	extensionTypeLeft = stExtensionsType[iExtensionTypeLeft + 1]
	parameters extensionTypeLeft = extensionTypeLeft
endif

if NOT(enablePartition[1]) then
	bPartition1 = 0
	parameters bPartition1 = bPartition1
	lock			"bPartition1"
	hideparameter	"bPartition1"
endif
if NOT(enablePartition[2]) then
	bPartition2 = 0
	parameters bPartition2 = bPartition2
	lock			"bPartition2"
	hideparameter	"bPartition2"
endif
if NOT(enablePartition[3]) then
	bPartition3 = 0
	parameters bPartition3 = bPartition3
	lock			"bPartition3"
	hideparameter	"bPartition3"
endif
if NOT(enablePartition[4]) then
	bPartition4 = 0
	parameters bPartition4 = bPartition4
	lock			"bPartition4"
	hideparameter	"bPartition4"
endif



! ======================================================================
! Layout
! ======================================================================

values "arrangement" stArrangement
values "iArrangement" 1, 2, 3, 4
if GLOB_MODPAR_NAME = "arrangement" then
	for iArr = 1 to vardim1(stArrangement)
		if arrangement = stArrangement[iArr] then iArrangement = iArr
	next iArr
	parameters iArrangement = iArrangement
else
	arrangement = stArrangement[max(iArrangement, 1)]
	parameters arrangement = arrangement
endif

if DESK_LAYOUT_3 then
	if (bDesk1 + bDesk2 + bDesk3) < 1 then
		if GLOB_MODPAR_NAME = "bDesk1" and not(bDesk1) then bDesk1 = 1: parameters bDesk1 = bDesk1
		if GLOB_MODPAR_NAME = "bDesk2" and not(bDesk2) then bDesk2 = 1: parameters bDesk2 = bDesk2
		if GLOB_MODPAR_NAME = "bDesk3" and not(bDesk3) then bDesk3 = 1: parameters bDesk3 = bDesk3
	endif

	lock			"bDesk4",
					"extensionTypeBottom",
					"iExtensionTypeBottom"
	hideparameter	"bDesk4",
					"extensionTypeBottom",
					"iExtensionTypeBottom"
endif
if DESK_LAYOUT_4 then
	if (bDesk1 + bDesk2 + bDesk3 + bDesk4) < 1 then
		if GLOB_MODPAR_NAME = "bDesk1" and not(bDesk1) then bDesk1 = 1: parameters bDesk1 = bDesk1
		if GLOB_MODPAR_NAME = "bDesk2" and not(bDesk2) then bDesk2 = 1: parameters bDesk2 = bDesk2
		if GLOB_MODPAR_NAME = "bDesk3" and not(bDesk3) then bDesk3 = 1: parameters bDesk3 = bDesk3
		if GLOB_MODPAR_NAME = "bDesk4" and not(bDesk4) then bDesk4 = 1: parameters bDesk4 = bDesk4
	endif
endif

if iArrangement = ARRANGE_3_DESK_ALIGN then
	tableLength2 = tableLength1
	parameters tableLength2 = tableLength2

	tableDepth2 = tableDepth1
	parameters tableDepth2 = tableDepth2

	lock			"tableLength2",
					"tableDepth2"
	hideparameter 	"tableLength2",
					"tableDepth2"
endif

if iArrangement = ARRANGE_4_DESK_ROT then
	lock			"MSFront"
	hideparameter 	"MSFront"
endif



! ======================================================================
! Layout Components Listing
! ======================================================================

parameters iListDeskNum90	= 0
parameters iListDeskNum120	= 0
parameters iListExtDeskNum	= 0
parameters iListDeskCabNum	= 0
parameters iListExtRounded	= 0
parameters iListExtCab		= 0
parameters iListChairNum	= 0
parameters iListPartNum		= 0

lock	"iListDeskNum90",
		"iListDeskNum120",
		"iListExtDeskNum",
		"iListDeskCabNum",
		"iListExtRounded",
		"iListExtCab",
		"iListChairNum",
		"iListPartNum"

parameters iListDeskNum90	= (bDesk1 + bDesk2 + bDesk3 + bDesk4) * DESK_LAYOUT_4

parameters iListDeskNum120	= (bDesk1 + bDesk2 + bDesk3) * DESK_LAYOUT_3

parameters iListExtCab		= ((iExtensionTypeTop = EXT_CABINET)\
							+ (iExtensionTypeRight = EXT_CABINET)\
							+ (iExtensionTypeBottom = EXT_CABINET)\
							+ (iExtensionTypeLeft = EXT_CABINET) * DESK_LAYOUT_4) * (1 + bSymmetricalDeskEnd)

parameters iListExtDeskNum	= (iExtensionTypeTop = EXT_DESK)\
							+ (iExtensionTypeRight = EXT_DESK)\
							+ (iExtensionTypeBottom = EXT_DESK)\
							+ (iExtensionTypeLeft = EXT_DESK) * DESK_LAYOUT_4\
							+ (iExtensionTypeTop = EXT_DESK_WCHAIR)\
							+ (iExtensionTypeRight = EXT_DESK_WCHAIR)\
							+ (iExtensionTypeBottom = EXT_DESK_WCHAIR)\
							+ (iExtensionTypeLeft = EXT_DESK_WCHAIR) * DESK_LAYOUT_4

parameters iListDeskCabNum	= MAX(iListDeskNum90, iListDeskNum120) * bShowCabParams\
							+ iListExtDeskNum * CEIL(iExtraDeskCab / 2) * bShowCabParams

parameters iListExtRounded	= (iExtensionTypeTop = EXT_ROUNDED)\
							+ (iExtensionTypeRight = EXT_ROUNDED)\
							+ (iExtensionTypeBottom = EXT_ROUNDED)\
							+ (iExtensionTypeLeft = EXT_ROUNDED) * DESK_LAYOUT_4

parameters iListChairNum	= MAX(iListDeskNum90, iListDeskNum120)\
							+ (iExtensionTypeTop = EXT_DESK_WCHAIR)\
							+ (iExtensionTypeRight = EXT_DESK_WCHAIR)\
							+ (iExtensionTypeBottom = EXT_DESK_WCHAIR)\
							+ (iExtensionTypeLeft = EXT_DESK_WCHAIR) * DESK_LAYOUT_4

parameters iListPartNum		= (iExtensionTypeTop = EXT_PARTITION)\
							+ (iExtensionTypeRight = EXT_PARTITION)\
							+ (iExtensionTypeBottom = EXT_PARTITION)\
							+ (iExtensionTypeLeft = EXT_PARTITION) * DESK_LAYOUT_4 * 2\
							+ existPartition[1]\
							+ existPartition[2]\
							+ existPartition[3]\
							+ existPartition[4]



]]>
</Script_VL>

<ParamSection SectVersion="26" SectionFlags="0" SubIdent="0">
	<ParamSectHeader>
		<Version>26</Version>
		<AutoHotspots>false</AutoHotspots>
		<StatBits>
			<STBit_UIDefault/>
			<STBit_FixSize/>
			<STBit_UIUseHierarchicalPages/>
		</StatBits>
		<WDLeftFrame>0</WDLeftFrame>
		<WDRightFrame>0</WDRightFrame>
		<WDTopFrame>0</WDTopFrame>
		<WDBotFrame>0</WDBotFrame>
		<LayFlags>65535</LayFlags>
		<WDMirrorThickness>0</WDMirrorThickness>
		<WDWallInset>0</WDWallInset>
		<SymbolColor>0</SymbolColor>
	</ParamSectHeader>
	<Parameters>
		<Length Name="A">
			<Description><![CDATA["Размер 1"]]></Description>
			<Fix/>
			<Value>3</Value>
		</Length>
		<Length Name="B">
			<Description><![CDATA["Размер 2"]]></Description>
			<Fix/>
			<Value>3</Value>
		</Length>
		<Length Name="zzyzx">
			<Description><![CDATA["Размер 3"]]></Description>
			<Fix/>
			<Value>1.15</Value>
		</Length>
		<Boolean Name="AC_show2DHotspotsIn3D">
			<Description><![CDATA["Показ Узловых 2D Точек в 3D"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="ac_bottomlevel">
			<Description><![CDATA["Отметка Низа"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="ac_toplevel">
			<Description><![CDATA["Отметка Верха"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="innerCornerPos">
			<Description><![CDATA["Положение по Х Внутреннего Угла"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.6</Value>
		</Length>
		<Length Name="innerArcStartPos">
			<Description><![CDATA["Положение по Х Начала Внутренней Дуги"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.9</Value>
		</Length>
		<Length Name="innerArcEndPos">
			<Description><![CDATA["Конечное Положение Внутренней Дуги"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.9</Value>
		</Length>

		<!-- gs_layout: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_layout">
			<Description><![CDATA["Компоновка"]]></Description>
		</Title>
		<String Name="arrangement">
			<Description><![CDATA["Расположение"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["4-стола (зеркально)"]]></Value>
		</String>
		<Integer Name="iArrangement">
			<Description><![CDATA["Расположение"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="bDesk1">
			<Description><![CDATA["Стол 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="bDesk2">
			<Description><![CDATA["Стол 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="bDesk3">
			<Description><![CDATA["Стол 3"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="bDesk4">
			<Description><![CDATA["Стол 4"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>

		<!-- gs_dimensions: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_dimensions">
			<Description><![CDATA["Размеры"]]></Description>
		</Title>
		<Length Name="tableLength1">
			<Description><![CDATA["Длина Стола 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1.5</Value>
		</Length>
		<Length Name="tableLength2">
			<Description><![CDATA["Длина Стола 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1.5</Value>
		</Length>
		<Length Name="tableDepth1">
			<Description><![CDATA["Глубина Стола 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.6</Value>
		</Length>
		<Length Name="tableDepth2">
			<Description><![CDATA["Глубина Стола 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.6</Value>
		</Length>
		<Length Name="tableTopHeight">
			<Description><![CDATA["Высота Столешницы"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.75</Value>
		</Length>
		<Length Name="topThk">
			<Description><![CDATA["Толщина Столешницы"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.025</Value>
		</Length>
		<Length Name="tableChairDistX">
			<Description><![CDATA["Расстояние Стул-Стол 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.5</Value>
		</Length>
		<Length Name="xPosDeskChair">
			<Description><![CDATA["Реальное Расстояние Стол-Стул 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.5</Value>
		</Length>
		<Length Name="tableChairDistY">
			<Description><![CDATA["Расстояние Стул-Стол 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.5</Value>
		</Length>
		<String Name="innerEdge">
			<Description><![CDATA["Внутренний Угол"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Прямой"]]></Value>
		</String>
		<Integer Name="iInnerEdge">
			<Description><![CDATA["Внутренний Угол"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="innerEdgeRad">
			<Description><![CDATA["Радиус"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.3</Value>
		</Length>

		<!-- gs_extensions: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_extensions">
			<Description><![CDATA["Приставные Элементы"]]></Description>
		</Title>
		<String Name="extensionTypeTop">
			<Description><![CDATA["Элемент Сверху"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Нет"]]></Value>
		</String>
		<Integer Name="iExtensionTypeTop">
			<Description><![CDATA["Элемент Сверху"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<String Name="extensionTypeRight">
			<Description><![CDATA["Элемент Справа"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Нет"]]></Value>
		</String>
		<Integer Name="iExtensionTypeRight">
			<Description><![CDATA["Элемент Справа"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<String Name="extensionTypeLeft">
			<Description><![CDATA["Элемент Слева"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Нет"]]></Value>
		</String>
		<Integer Name="iExtensionTypeLeft">
			<Description><![CDATA["Элемент Слева"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<String Name="extensionTypeBottom">
			<Description><![CDATA["Элемент Внизу"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Нет"]]></Value>
		</String>
		<Integer Name="iExtensionTypeBottom">
			<Description><![CDATA["Элемент Внизу"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Length Name="extCabinetWidth">
			<Description><![CDATA["Ширина"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.6</Value>
		</Length>
		<Length Name="extCabinetDepth">
			<Description><![CDATA["Глубина"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.5</Value>
		</Length>
		<Length Name="extCabinetHeight">
			<Description><![CDATA["Высота"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1.15</Value>
		</Length>
		<String Name="cabinetScheme">
			<Description><![CDATA["Схема"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Двери и Ящики"]]></Value>
		</String>
		<Integer Name="iCabinetScheme">
			<Description><![CDATA["Схема"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="cupboardDoors">
			<Description><![CDATA["Двери Шкафа"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Двойные"]]></Value>
		</String>
		<Integer Name="iCupboardDoors">
			<Description><![CDATA["Двери Шкафа"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Length Name="gs_drawerHeight">
			<Description><![CDATA["Высота Ящика"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.233333333333</Value>
		</Length>
		<Length Name="totalDrawerHeight">
			<Description><![CDATA["Общая Высота Ящиков"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.75</Value>
		</Length>
		<Length Name="gs_upperCabHeight">
			<Description><![CDATA["Высота Верхнего Шкафа"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.4</Value>
		</Length>
		<Integer Name="drawerNum">
			<Description><![CDATA["Количество Ящиков"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3</Value>
		</Integer>
		<Integer Name="shelfNum">
			<Description><![CDATA["Количество Полок"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="iExtCabKnobType">
			<Description><![CDATA["Тип Ручки Приставного Шкафа"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="iExtCabKnobVerPos">
			<Description><![CDATA["Вертикальное Расположения Ручки Приставного Шкафа"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="bCabinetBase">
			<Description><![CDATA["Основание Приставного Шкафа"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="cabinetBaseHeight">
			<Description><![CDATA["Высота Основания Приставного Шкафа"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="extraDeskWidth">
			<Description><![CDATA["Ширина Приставного Стола"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1.2</Value>
		</Length>
		<Length Name="halfExtraDeskWidth">
			<Description><![CDATA["Половина Ширины Приставного Стола для Редактирования Узловой Точки"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.6</Value>
		</Length>
		<Length Name="extraDeskDepth">
			<Description><![CDATA["Глубина Дополнительного Стола"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.6</Value>
		</Length>
		<String Name="extraDeskCab">
			<Description><![CDATA["Тумбочка Приставного Стола"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Нет"]]></Value>
		</String>
		<Integer Name="iExtraDeskCab">
			<Description><![CDATA["Тумбочка Приставного Стола"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Length Name="extraDeskChairDistX">
			<Description><![CDATA["Расстояние Стула Приставного Стола X"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="extraDeskChairDistY">
			<Description><![CDATA["Расстояние Стула Приставного Стола"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.5</Value>
		</Length>

		<!-- gs_chair: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_chair">
			<Description><![CDATA["Стул"]]></Description>
		</Title>
		<Length Name="chairWidth">
			<Description><![CDATA["Ширина Стула"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.62</Value>
		</Length>
		<Length Name="chairDepth">
			<Description><![CDATA["Глубина Стула"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.59</Value>
		</Length>
		<Length Name="chairHeight">
			<Description><![CDATA["Высота Стула"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.95</Value>
		</Length>
		<Length Name="gs_seat_height">
			<Description><![CDATA["Высота Сидения"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.45</Value>
		</Length>
		<Boolean Name="gs_armrest">
			<Description><![CDATA["Подлокотники"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_headrest">
			<Description><![CDATA["Подголовник"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<String Name="gs_back_type">
			<Description><![CDATA["Стиль Спинки"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Низкая"]]></Value>
		</String>
		<Integer Name="gs_back_type_m">
			<Description><![CDATA["Стиль Спинки"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>

		<!-- gs_partition: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_partition">
			<Description><![CDATA["Перегородка"]]></Description>
		</Title>
		<String Name="partitionPos">
			<Description><![CDATA["Расположение Перегородки"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Над Столами"]]></Value>
		</String>
		<Integer Name="iPartitionPos">
			<Description><![CDATA["Расположение Перегородки"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="bPartition1">
			<Description><![CDATA["Перегородка 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="bPartition2">
			<Description><![CDATA["Перегородка 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="bPartition3">
			<Description><![CDATA["Перегородка 3"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="bPartition4">
			<Description><![CDATA["Перегородка 4"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="gs_partitionHeight">
			<Description><![CDATA["Высота Перегородки"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.4</Value>
		</Length>
		<String Name="partitionLength">
			<Description><![CDATA["Длина Перегородки"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Как Стол"]]></Value>
		</String>
		<Integer Name="iPartitionLength">
			<Description><![CDATA["Длина Перегородки"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="partitionLengthCustom">
			<Description><![CDATA["Специальная Длина"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1.5</Value>
		</Length>
		<Length Name="partitionOffsetCustom">
			<Description><![CDATA["Специальное Смещение"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="partitionBaseHeight">
			<Description><![CDATA["Высота Основания"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Integer Name="iPartitionDiv">
			<Description><![CDATA["Перегородки"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3</Value>
		</Integer>

		<!-- gs_accessories: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_accessories">
			<Description><![CDATA["Аксессуары"]]></Description>
		</Title>
		<String Name="gs_leg_type">
			<Description><![CDATA["Стиль Ножек"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA["Стиль 1"]]></Value>
		</String>
		<Integer Name="gs_leg_type_m">
			<Description><![CDATA["Стиль Ножек"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="bComputer">
			<Description><![CDATA["Компьютер"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_bFrontPanel">
			<Description><![CDATA["Передняя Панель"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_frontPanelHeight">
			<Description><![CDATA["Высота Передней Панели"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.72</Value>
		</Length>
		<Length Name="gs_frontPanelTop">
			<Description><![CDATA["Отметка Верха Передней Панели"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.72</Value>
		</Length>
		<Boolean Name="gs_bOfficeCab">
			<Description><![CDATA["Тумбочка"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="gs_officeCab_width">
			<Description><![CDATA["Ширина Тумбочки"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.4</Value>
		</Length>
		<Integer Name="drawer_num">
			<Description><![CDATA["Количество Ящиков"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>4</Value>
		</Integer>
		<Length Name="drawerThk">
			<Description><![CDATA["Толщина Панели Ящика"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.02</Value>
		</Length>
		<String Name="gs_drawerScheme">
			<Description><![CDATA["Схема"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Схема 1"]]></Value>
		</String>
		<Integer Name="gs_drawerScheme_m">
			<Description><![CDATA["Схема"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="gs_topDrawerH">
			<Description><![CDATA["Высота Верхнего Ящика"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Length Name="gs_bottomDrawerH">
			<Description><![CDATA["Высота Нижнего Ящика"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.25</Value>
		</Length>
		<Length Name="gs_drawerHeights">
			<Description><![CDATA["Высота Ящиков"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="6" SecondDimension="0">
				<AVal Row="1">0.16875</AVal>
				<AVal Row="2">0.16875</AVal>
				<AVal Row="3">0.16875</AVal>
				<AVal Row="4">0.16875</AVal>
				<AVal Row="5">0.135</AVal>
				<AVal Row="6">0.0916666666667</AVal>
			</ArrayValues>
		</Length>
		<Boolean Name="gs_bevel">
			<Description><![CDATA["Фаска Торца"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bKnob">
			<Description><![CDATA["Ручка"]]></Description>
			<Value>1</Value>
		</Boolean>
		<Integer Name="iCabKnobType">
			<Description><![CDATA["Стиль Ручки"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="iCabKnobVerPos">
			<Description><![CDATA["Расположение Ручки по Вертикали"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="gs_knob_type">
			<Description><![CDATA["Стиль Ручки"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Стиль 1"]]></Value>
		</String>
		<Integer Name="gs_knob_type_m">
			<Description><![CDATA["Стиль Ручки"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="gs_knobHorPos">
			<Description><![CDATA["Расположение Ручки по Горизонтали"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<String Name="gs_knobVerPos">
			<Description><![CDATA["Расположение Ручки по Вертикали"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Верх"]]></Value>
		</String>
		<Integer Name="gs_knobVerPos_m">
			<Description><![CDATA["Расположение Ручки по Вертикали"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="gs_editableKnobs">
			<Description><![CDATA["Узловые Точки Редактирования Расположения Ручки"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_knobPosArray">
			<Description><![CDATA["Расположение Ручки для Узловой Точки"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="6" SecondDimension="2">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0</AVal>
				<AVal Column="1" Row="2">0</AVal>
				<AVal Column="2" Row="2">0</AVal>
				<AVal Column="1" Row="3">0</AVal>
				<AVal Column="2" Row="3">0</AVal>
				<AVal Column="1" Row="4">0</AVal>
				<AVal Column="2" Row="4">0</AVal>
				<AVal Column="1" Row="5">0</AVal>
				<AVal Column="2" Row="5">0</AVal>
				<AVal Column="1" Row="6">0</AVal>
				<AVal Column="2" Row="6">0</AVal>
			</ArrayValues>
		</Length>
		<Boolean Name="bCabBase">
			<Description><![CDATA["Основание"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Integer Name="gs_baseType_m">
			<Description><![CDATA["Тип Основания"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Length Name="gs_baseHeight">
			<Description><![CDATA["Высота Основания"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>

		<!-- gs_2D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_2D_representation">
			<Description><![CDATA["2D-отображение"]]></Description>
			<Fix/>
		</Title>
		<String Name="gs_detlevel_2D">
			<Description><![CDATA["2D-детализация"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Зависит от Масштаба"]]></Value>
		</String>
		<Integer Name="gs_detlevel_2D_m">
			<Description><![CDATA["2D-детализация"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<String Name="gs_SymbolType">
			<Description><![CDATA["Тип Символа"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Круглый"]]></Value>
		</String>
		<Integer Name="gs_SymbolType_Mask">
			<Description><![CDATA["Активировать Маску Типа Символа"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>4019</Value>
		</Integer>
		<Integer Name="gs_SymbolType_m">
			<Description><![CDATA["Тип Символа"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<PenColor Name="gs_cont_pen">
			<Description><![CDATA["Перо Контура"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>4</Value>
		</PenColor>
		<FillPattern Name="gs_fill_type">
			<Description><![CDATA["Тип Штриховки"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_fill_pen">
			<Description><![CDATA["Перо Штриховки"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_back_pen">
			<Description><![CDATA["Перо Фона Штриховки"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>

		<!-- gs_min_space: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_min_space">
			<Description><![CDATA["Минимальное Пространство"]]></Description>
		</Title>
		<Length Name="MSFront">
			<Description><![CDATA["Минимальное Пространство перед Столами"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1.1</Value>
		</Length>
		<Length Name="MSAllSides">
			<Description><![CDATA["Минимальное Пространство со всех Сторон"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.75</Value>
		</Length>

		<!-- gs_3D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_3D_representation">
			<Description><![CDATA["3D-отображение"]]></Description>
		</Title>
		<String Name="gs_detlevel_3D">
			<Description><![CDATA["3D-детализация"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Простой"]]></Value>
		</String>
		<Integer Name="gs_detlevel_3D_m">
			<Description><![CDATA["3D-детализация"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="gs_resol">
			<Description><![CDATA["Разрешение Столешницы"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>24</Value>
		</Integer>
		<Integer Name="gs_leg_resol">
			<Description><![CDATA["Разрешение"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>8</Value>
		</Integer>
		<Boolean Name="gs_shadow">
			<Description><![CDATA["Отбрасывание Теней"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>

		<!-- gs_material: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_material">
			<Description><![CDATA["Покрытия"]]></Description>
			<Fix/>
		</Title>
		<Material Name="gs_top_mat">
			<Description><![CDATA["Столешница"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>18</Value>
		</Material>
		<Material Name="gs_leg_mat">
			<Description><![CDATA["Ножки Стола"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>11</Value>
		</Material>
		<Material Name="legbase_mat">
			<Description><![CDATA["Опора Ножки Стола"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>49</Value>
		</Material>
		<Material Name="gs_partition_mat">
			<Description><![CDATA["Заполнение Перегородки"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3</Value>
		</Material>
		<Material Name="gs_partitionFrame_mat">
			<Description><![CDATA["Обвязка Перегородки"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>49</Value>
		</Material>
		<Material Name="gs_frontPanel_mat">
			<Description><![CDATA["Передняя Панель"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>18</Value>
		</Material>
		<Material Name="gs_cabinet_mat">
			<Description><![CDATA["Корпус"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>18</Value>
		</Material>
		<Material Name="gs_door_mat">
			<Description><![CDATA["Дверь / Ящик"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>18</Value>
		</Material>
		<Material Name="gs_knob_mat">
			<Description><![CDATA["Ручка"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>49</Value>
		</Material>
		<Material Name="gs_base_mat">
			<Description><![CDATA["Основание"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>49</Value>
		</Material>
		<Material Name="gs_frame_mat">
			<Description><![CDATA["Корпус Стула"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>49</Value>
		</Material>
		<Material Name="gs_seat_mat">
			<Description><![CDATA["Обивка Стула"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>48</Value>
		</Material>
		<Material Name="box_mat">
			<Description><![CDATA["Монитор, Корпус Клавиатуры"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>18</Value>
		</Material>
		<Material Name="feetmat">
			<Description><![CDATA["Опора Монитора"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>99</Value>
		</Material>
		<Material Name="dispmat">
			<Description><![CDATA["Экран Монитора"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>29</Value>
		</Material>
		<Material Name="cover_mat">
			<Description><![CDATA["Верхняя Панель Клавиатуры"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3</Value>
		</Material>
		<Material Name="keyb_mat">
			<Description><![CDATA["Клавиши Клавиатуры"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>10</Value>
		</Material>
		<Length Name="defaultValues">
			<Description><![CDATA["Значения по Умолчанию"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="7" SecondDimension="0">
				<AVal Row="1">1.5</AVal>
				<AVal Row="2">1.5</AVal>
				<AVal Row="3">1.8</AVal>
				<AVal Row="4">1.2</AVal>
				<AVal Row="5">0.6</AVal>
				<AVal Row="6">0.6</AVal>
				<AVal Row="7">0.5</AVal>
			</ArrayValues>
		</Length>

		<!-- gs_list: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_list">
			<Description><![CDATA["Параметры Спецификаций"]]></Description>
			<Fix/>
		</Title>
		<RealNum Name="gs_list_cost">
			<Description><![CDATA["Цена"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="gs_list_manufacturer">
			<Description><![CDATA["Производитель"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_note">
			<Description><![CDATA["Примечания"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_location">
			<Description><![CDATA["Расположение"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_accessories">
			<Description><![CDATA["Аксессуары"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_Type">
			<Description><![CDATA["Тип Группы"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Мебель"]]></Value>
		</String>
		<Integer Name="iFMType">
			<Description><![CDATA["Тип Группы"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>16</Value>
		</Integer>
		<String Name="FM_InventoryNumber">
			<Description><![CDATA["Инвентарный Номер"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_SerialNumber">
			<Description><![CDATA["Серийный Номер"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_ProductionYear">
			<Description><![CDATA["Год Производства"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<RealNum Name="FM_ObjectWeight">
			<Description><![CDATA["Вес Изделия"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="FM_ObjectWeightUnit">
			<Description><![CDATA["Единица Веса"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["кг"]]></Value>
		</String>
		<String Name="gs_list_custom1">
			<Description><![CDATA["Пользовательское Значение 1"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom2">
			<Description><![CDATA["Пользовательское Значение 2"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom3">
			<Description><![CDATA["Пользовательское Значение 3"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom4">
			<Description><![CDATA["Пользовательское Значение 4"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom5">
			<Description><![CDATA["Пользовательское Значение 5"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="iListDeskNum90">
			<Description><![CDATA["Количество Столов (90°)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>4</Value>
		</Integer>
		<Integer Name="iListDeskNum120">
			<Description><![CDATA["Количество Столов (120°)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="iListExtDeskNum">
			<Description><![CDATA["Количество Приставных Столов"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="iListDeskCabNum">
			<Description><![CDATA["Количество Тумбочек"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>4</Value>
		</Integer>
		<Integer Name="iListExtRounded">
			<Description><![CDATA["Количество Закругленных Приставных Столов"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="iListExtCab">
			<Description><![CDATA["Количество Приставных Шкафов"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="iListChairNum">
			<Description><![CDATA["Количество Стульев"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>4</Value>
		</Integer>
		<Integer Name="iListPartNum">
			<Description><![CDATA["Количество Перегородок"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>4</Value>
		</Integer>
		<Integer Name="gs_ui_current_page">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
	</Parameters>
</ParamSection>

<DescDef NumDescs="1" SectVersion="4" SectionFlags="0" SubIdent="0">
	<DescRec>
		<Code><![CDATA[""]]></Code>
		<Keycode><![CDATA[""]]></Keycode>
		<DBSetname><![CDATA[""]]></DBSetname>
		<Reference>false</Reference>
		<Name><![CDATA[""]]></Name>
	</DescRec>
</DescDef>

<Picture MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="0" length_in_bytes="17871" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000800000
	00800806000000C33E61CB000000097048597300002E2300002E230178A53F76
	000020004944415478DAECBD698C66D979DFF73BCB5DDEBD96AEAAAE5EA67BBA
	677A7A160E39121791E2128A1229998EE2248A22CB7284C47290E4439CD87080
	008911048E0304CA17038681208B635B8123394A9CC87222CB02B5901239E470
	389CE919CEF4DE5DBDD45EF5AEF7DEB3E4C339F7BED5D3CDE1D88A96D87D8142
	7755BFFDD67BEF79CEB3FCFFFFE739C27BEF797CFD0B7BC9C78FE0B1013CBE1E
	1BC0E3EBB1013CBE1E1BC0E3EBB1013CBE1E1BC0E3EBB1013CBE1E1BC0E3EBB1
	013CBE1E1BC0E3EBB1013CBE1E1BC0E3EBB1013CBE1E1BC0E3EBB1013CBE1E1B
	C0E3EBB1013CBE1E1BC0E3EB9F1B03F0DEF35816F8D803501BC25163786C18FF
	FC5FC2870B21C4030B7FF4FBC7D7BFA039C0A3C2C3E390F1CF610EF028777FD4
	0B3C2A3C7CB710F1D838FE7F1A021EFA87F70801F5EB8F1AC8BBFFCFD1F7FCA3
	0827B3E9106B2D9D6E0F508F57FABB5CFADD0BF9EEC57AF742BE577E504E467C
	F94BFF98BDADFB2CAFADB3BCB2C6F113A738B67EEA0FDC2826E33D7EE5FFFE3F
	79E55BDFE4EACD77184E4A8CF548E7F9891FFF37F8F3FFF6BFF747F8983DF0C7
	33A712CE39FFDD16E5DD9EE15106E0BD47E0F8BD2FFD06D7DF7E1DA915526AAC
	A9F0DE417C6DA7DB6765F5048B2B2BAC9F3845FFD8DA43E1E6519EE4FD5E7FE1
	2FFD1CDF78ED1D3AFD2E5A4924E02C381CC3ED09BFF8F7FE0E27A221FE615EDB
	776F71F9D26B7CDF273E4BDA6AFFF1F300471FFC7BC5F1EFB628DFFCBDDFE2ED
	D75F0520CD5B781FD65CA659F3FF841098B264E3E6156E5D7B9B6FC59FF70703
	9656D6595E5D63FDC4295A83A57FA69BD8DABCC3ABAFBDC5F2F2324870C6E162
	8A2B1DA01CBFF19BFF849FF9A99FFDC37BB2CE72E5CD6F73E99B5F6556947CE8
	073EF3C73304BCD7E21F358E77EFCE375FFD3AAF7FF3AB9445419A660829E3BF
	D75F82E05CC297D21285C2E391422285A02C0AEEDCB8C2EDEB6FF38DB2A2BFB0
	C4E77FE2CF3EF4BBBF5789FAF557BE4665414A30CE810F06205DF0007996F0FF
	FCFAAFF1333FF56FFDA1B8E2623CE4D22BBFC78DAB9771CE229442C83F9E2140
	BFFB613EEAFBA30B71F5AD37F8D6D77F97D1709F2CCD49B31C04BCFBFE9CF748
	19AC410989C72310082191522000A514524A8C01212D446FF12840EABD12CC4B
	6FBD49A21461D91D61F5C1B9F09A244FB872E5166FBE7D89672F3CFF071AEBB7
	EFDEE68DAF7F999DAD6DA4D648290185907F3C1351FD7E5F78E7E6555EFDDA57
	D8DBBA4F9265B45B1D9CF7713F89C6F50B219A3D268444368B2F4178A40029C2
	DF4D65A88A12E72DDEC36C36FD9EF9C6BB8D12E0F54BDF22EDE6E11B1B7F688E
	18230E047CE5777FF70FC400AAB2C05615F76E5EE1CD6FBD4C515408A55052E0
	BDA22C2BAEBEF906ED6E8F34CFC9B29C34CFC8F2163A49FF781BC0D6DD0D5E7D
	F92BDCDFB8814E12F276273CFCB890E211B98292F31D1F420008190D0281B506
	53199C33781F4242652D6551BCAF24F0A861ECECDCE7EAD59B741717C3E617E0
	2471FB3B9C0BA1A995257CED95AFF1E77EF6E77EDF0FAD2C0AF677B6D8B8718D
	1B97BF43A6054BC796D9DADCA434062DC373F13E7C0D0FF7F93BFFD55FA6D81F
	91B435BD9535FA6BA7595C5D67F9C429D64E9D65EDE469064BCBB4DB9D269CFE
	911AC0E1FE2EDFFCBDDFE1F6B5CB28ADC8B3365E78F02045D8F18DDB172009EE
	5E361F5E44971E3D03029CA37296AAA81080C3639DC3BBE0F29DB3EF89393CAA
	4AD9D8B84561A11BDE1EE9C3E2BB77DF68AA79E3F54BDCDBBCC3F1D513EF896B
	7CD767B2BBC3EBAF7C9D37BFF65B5CFEEA6FE3CA191FFAFC9F60F1C9A7B97BE7
	2EDE3B9224C1397724FF11E041B75A382100C1E1DE01873B3BDC7AEDEB38E3F0
	C691F5734EBFF0FD9CFBC047B9F0C197583B718ABCDD6E8C5D08F9876300C574
	C2AB2F7F856B6FBD8E739E34CB828BC7870FE1C39F5A4ABC005F579132FC5BBD
	F84278EACF2C1094B382FB9BF7E9F5BAF4BB3D94D678E7B0CE622A8B7586D178
	F4C00E7F5485F26E0F707BE37688F91E104D1670341B99FFCDC1E52B571E3280
	77E71DEF0E3BDE59BEFA1BBFC66FFED2FFC0F6B5EB5860FDC2337CE4735F40EA
	94DD9D7D1C16AD3478D7F83D671D5209BC0B3FD332A4A04E4A04293E4B830795
	1E6FE0EA2B2FF39DAF7C995FCF35173FF9793EF6235FE4DCC5E7489214B02825
	A377107F300670E9B557F8F6CB5FC155069DA62452E29C8BBB588607157FB975
	0E2965F3B064DCEA22BA7BA5342070D660AA92C964C4683C613A9D624A43DE6E
	916849AA53DAED164A293A9D0E37BFF36D9EB8F02CA0DFD7CEDCD9DD99931A47
	6CA54E009D3B6A008E9BB76EE27FC03F32CF785402BABFBDC93FF89FFE266FFC
	DAFF4EBEB4446BA1CFF9973ECAD32FBEC4785A301AEE212468A1F11EACF5CDC6
	972AEC005355585B065BD401970C8ECA63DD7CFF24AD8CA4932180377FEBD778
	E3377E950FFFF84FF1B97FEDA758583E86AB0C52CAE68BFF0FC0B4070CE0C695
	B7B971ED3ACB2BC7680B41966764591236B600E1C34374D1068508EE2DB8FD90
	F50B21C33A788F7706575598AAA22C2BF00E2933B456217C789895059445F413
	F0B5DFF90D5EF9DD2FD1EEF4585E5963617985636B2718ACAE3F64F9420826D3
	29F87A9F3B9C0B384028064248F1660EC86D6F6F3F6054DFCDB88410BCF1F5AF
	F2CB7FFDBF60BCB343BEB884CE533EF8E92FB07AF209EEDFDFC27B87560AEB1C
	0E17BDA18F062971DE515596CA9438EB1BCB9488C6401BC02A3E0FE9C23BE4BD
	161EF8DAFFF10B6CDDBAC2BFF91FFEA70C9696F1D6E1BC44F96004BF5F8FF080
	010C068B4CA61346D76F525A439668D2BC45A7D5A6D7EBD0ED74E877BB482571
	DE1F8975A0A5022191028C0D0B2E1118EB30C686186F2D4E19ACB35863418394
	022955301CEFF05E0092D168CCF0F06DDC3BDF4169499A24F4078B2C1E5B6361
	F918C7D64ED01A2CA3A5244B34B3D92C3C41139E6A9348B9E86201AD25E564C4
	5BBFF32B9C7CEA797AC79F7C3486634A7EF57FFDBBFCC6DFFAEB74060BF83465
	B07E8A973EF5396492B271E72E788FD61A636DF8BD5EC4ACAFCE6D0C0ECF7456
	301ECF022C2DC03BF1AE050B3F3F1AE2ED3C8BA2B3BCC095977F872FFFA3FF8B
	CFFFE49F412915379747298FF43E7A03F9FB3780BCD5A2D56E5156063BB5EC1F
	1C7070738383C331335331E8E6AC2E1D63F9D8326B6BAB2C2F0E68773AE45986
	31166B0D6555E26D7D2321B67BE7C2E2BB103A9CF34D7218712284F028A5C28E
	8CB9859449136E109283FD7D76777670CE92284592669C5DE8F29FFCF99F6538
	1E73777B9BDB9BF7D9DCD9E5EECE2ED5AC8AEF1F2A93D24CB970E159EEDFBDC1
	9D4B5FE2A3FFEA7F446FF5F4038CE7BD5B37F87B7FE3E7B9FCF57F4277619DCA
	592E7EE4933CFDE287188E678CB6B71042A254C86102C02370CE3588BF75166B
	1D5565D8B8B3C1C63B97484B439A2AA40427C2A65148841478174D420683D5D1
	8BB890D690F7075CFEF6D7F8F88FFECBF4FA0384002FC2E795B511088F54EA08
	1059F1BFFDEA2F7378B8CD0B4F5DE4631FFD0C8887737E5D55154208B4D6289D
	8658EEA13286F164C6643623CB155D99E1082EF4DEE626AFBF7E893455F41607
	2CF617F9F04B2F92260A6B1D22268DD658AC7154A6C258176ED07B9C77186B00
	8152217C58E7B1316992223C98505D804A822138215032A089C658CACA505983
	1492C54E879585011FBAF03465659816057B8743363637B9B3B5C5ADBB77595C
	79821FFDB13FC9C63BAFF3FA3F7E9DCB5FFF355EFA137FAE89F9AFFCD6AFF3AB
	7FF3AF515596A59575749EF1C14FFD28C78EAFB3B5BD43599468A510C2E3BDC3
	85A01FEF371891B10EEB1DB359C18D6BD7B9F3F63B6853403BC3C7E2B84E31A4
	08B1CB03D681960221690A68150DCA4B451217B7CE69644C7A7C9DF844A712F2
	0EC16B97BECDDFFEA5FF9EE5C515BEF2EA97B97AE50DFEF44FFF070FE5FD3A49
	12ACB538E748B20C630D07072386E321004BCB8BE8F0A97038AC757867839138
	C7783866676B97A7CF3FC9DACA12018975D19D87D2CEB9801B78EBB1226C79E7
	C343AC8CC33A47A255080548AC3548AFE790AE0F19429D5479EF4813DD208EE0
	29AB8AE96C165C24A004AC2E2D706A75058460561424AD36D3BD6DD25697BD59
	8BC1DE0EAE9C319D15FCEADFFDEF78ED1FFE8FB4964F22A464F9F4599EFBD8A7
	31283636EEA29424D1BADE97586FE7C99E1058EB70D6515ACB783CE2DAE577D8
	BD768D3C95247986D6024928973DE179D85819D43F1775325BFFC50950600EC6
	9C79F645F256ABC15782C71208EF838795800BE1C039C397BFFADB745A7DBAAD
	2EAD6E8B2F7DEB655E7AEEF7B8F8A14F3E1C02EA87D6EB7629CA0A702C2D2DA2
	A58A961DACDDDAB0A0C65638E3C99DC3E42DD2641A08202171A68C49A0A5AA4C
	8CFF0E9CC3E371361891140EAD3C4A6ABC7718EB50DEA3948E865067C7756E10
	0C5022B0DEC5E453A0950EBB427A9492C8E8219C75546545312B9AA40C3BE437
	FFD12FA39394F5731F446409DF79EDEB5CF9F637D8BBF50EAB173FC6F4608793
	2FBCC8E9679EE76034663C1CA1B4426B8531362CB6777817BC999082CA599CF5
	94A6627F6F8FAB6F5E62BCB94527D324A94249D04ACC37AA144D75EA5D04C922
	8FE22C485557AF9E6A5672F2032FF191CF7D31B8F8F83B851031E9164D32EEE3
	9BDCB87D83DF7BE577E8B43A282D4833CDE49E63EBD695471B407D757A7D8E2D
	2D73F2C4C9C0E0194B5955144541652DB632186BC3AEB616EB1CD65AB40EC48F
	B52658B7F79495C5598773E175C6861C01A1B0C69126026B2C4E7AA4A82D3958
	AF52222E9978A08493489CA0A9B3BDF3586C48826202E95D30568F47098954F3
	9CA2369CE974C638560F77EEDE276BB738F9C247D14AD06EE5089D329E8CF1DE
	91B772AAAAC21883733E924D75FAE6F026FCCC58C7CED61637BEF33A66FF805E
	274349893A929B09195CB78C46E08E540C8D6A40CDAB83AA3274D74EF0C57FE7
	2FD05F5CC6BB489BD76537A2A9029AD210F8C6AB2F339A4C586D75C21B09988C
	67E84710520F1A40B74359166CEDECA0A426CD125A594EBFDF8BB14F60AC6536
	9D319DCD288A12630DA94E626808266DADC7FB6028DE7B9C71586331C6637D41
	5116245A21D204E53D2EBA6C11E39AF3313EFA905039EB1052229C6F548C5286
	3ADA79D7988AF30EE3C2BF89E8297C74AF5284CA05E143AEE21D95314829181E
	0EC9F39CF5E3C7D9DCDAE6C6CD9BACADACD0EF77235ED1C379475954185B319B
	9594651943A76556946CDEB9CBE6B577506549ABDB0A9F5147F71E09B0C6BDD7
	21AD36E69A4297341581292DED636B3CFBF1CFD25B5C7A001391474AD780BB44
	6F2025A3D1215F7FED655A593B862785F082D2984712520F18409AE60C068BCC
	A605D3A264EF602FEC96F114EB1C0B831E6BABABAC1C5BE6F8EA0A2028AB92FD
	FDC3E07E80CA0458CEBB980D1B87F516EB2CB3724A5959F27C82921AE71D4A6B
	12A5C35DDB481D7B891506BC0C1FDAFBE0214480A1A494219438871492D25621
	698C4FD298E05F958AAFB33686927976ED6CA8DB05929327D6C9B29CCDAD2DAE
	5EBBCE743AA3AAEED13B68A1D394546B5A798BBC95912609F9A0859092AAAA38
	1C0ED9DEDC646FE3329999A1F3042DA3C14637CD11CC46025E88B8D8622ECB75
	122983C17AEB4817D7699FBE487F71A5499CE70B2F1AE2CD13F0999A49BD7CED
	1DDEB9F116FD7C0921544CEA3D6561508FE0181E3000A13479BB0D42E0BDA32C
	0DC3F198725622A4647B678FED9D3DA48456D6666171C0D2C202DD6E977EA71B
	63634800AD09A5907596A2ACD81F0DB97FE71E5559311D1D305E5AA2D7EDD3E9
	76C9D214AD154992A023A884903867433CF4E0B1314C08ACB00DB0E384430915
	FD67B8591F777A554578C8D9A6440B5974484253AD59595DA5AC2AEE6CDCA128
	8B806F78879221E994089CF74C67138A7216286D29504A93A629DD4E9B8BCF5D
	E4E2C5673065C1E8609FE1EE16E3FD3DA6073B98AA42B83A3F110835DFBDB547
	763EC47D2935D5ACA4FFC4D3CCF2631C3FF3244AEB88B0D67C409DF5CF8DA0CE
	09BC77BCFCCDAFA2BC8EEF17F795B398CA90E5D94370FA43856196E5CCA613F6
	0F464CA653F2AC4DAFD3414A8D20C43AEF3C0EC7DEEE1E9B9BF7296715CF3D7F
	910FBFF83CDE7BAAAAA23286AAB24C8B199B9B9BDCBB7E936A3A269130BB3FE2
	EEE60E5BAD9476A745DE1DD01DF4C9F216AD569B763B27D149886B362C867502
	A542200DBC44586C89A4C2449451364991AD637574B3D6DA0678B1C6D2EBF558
	5C5AE4E0E090FDFD839037B890F086FBF3B15C7328A9220013562D910A0714B3
	19655184DF250569A2E9AD1C67E9C4E968AC86623A61B4BBC3786F9BE9F880E2
	7007676DE05794402981123AC47C63E89D7D96E3E79EC1388F9E1D624CBB5978
	EF5D84E4690C5E46CA5D08C9DEFE2EAFBFFD1A599205A3402055F488CE9265AD
	87E0F5870C40671907C311499AB0D65B0DD9AB07EBC3AE71C68644D03A6C6E71
	95659A1578EFB1DE8785B786CA3A86A311B76F5E67747F8B0C47AF9505775823
	5ECE60F60ED8DFD963D73B54AB45D64AC93A7D3AFD019D5E8FBCD526CB3274A2
	491B0F11ACBF41C52243E19C0F15797C403E267D355A5997BBC78F1F8F2E7F87
	D9641A92283C5504AD3CB6E172BDF7542694B2215995D8C88D48151EBED20A6B
	029D5DCCCA106E02BA4596A40C4E9C66E5CC797021919E4D868C76B6980D0F98
	8DF628C77B5416DCD2197AC79F08BBDE5A0E8787F48FAD226548B2958A5E4048
	A45221CF31150E874E52EEDEBBCD9DCD0D3A493FA2A1A0B4663A2ED108B256FB
	2125F74306D0EDF638F7E459F24E1B6F1D4559521625C60637E2BC6BA05C631C
	2EABD0A5422B4D55559455C57852B0B3759F9D8D1B98D1945EAA5069DA88B35D
	CC11128054E1A38AC73A87198E991C8C19DEBE85D719793727ED74C93B3D3ABD
	01793BA7D56A93A669308AA8BAF1350CEB6C530A36E49008BB3ECF328EAFAF53
	941577EEDCC158135E6B6DA878CA0A636D53E279EFB056A222ABE085407887F7
	12552754625E466B95CC49A558AF5755495116603D522B94D2A8B4CDC213E7D1
	4A81B7B8A260349E32719E76BB4559550C4763B234A1DD6EE13CA8C8B3D8AA60
	7A70C0787B83C9FE2693D10107FB5BCC5C8E19AC92CA1C445D014994524C2605
	C7BA6D064BAB0FD1DF8F0801193BDBDBB4A65DF22C25CD72BA4B1DB4D678EB98
	5525C5AC605614545585B58EACAA48F394C9B46073738B7BB76F30DBDEA19D4A
	BADD04A1043A66C10EB0B1D67531FE39A74006E42B4915388F2309D0F164CA64
	34666CEEB22925593B2369B7493B3D3A8305DAED36ED769B3C6FA175E014AC3B
	C2FE1070F3C5C505169796393C3C60381C058049AA58360664D2794F2C3E7035
	C54C005AC08712348A60BC087900029C0D4687F7912277755285D63A10413535
	E10C55691145A0D30582446BB27E9FAE0AD2312104799A51D990A48AE8FEB7AE
	5E62FBDA2B8CF6EE505486F1A4605A394E5DFC38DFFFE14F716F679B593122D5
	8B205CDCED8EF168CAEAA0456FE1D843D2BF870CA0D3E992651993C998EDED2D
	C6C58CAAAC1042737C7D95638305FA833EC79697B0CE3299CE188DC641027DEF
	0E77DE7A03594E19B47384F4082550DE239C002DD0021225E6499907EB62D510
	2DD34663918E6078B1E6AFBD44B57F40B1BBC3DE55876C65649D3649A747A7D7
	27EF74C9F39C3C6F216316FEC4E953F47A03B6B6B7188F26282D111E4C5DA6DA
	20240DFA84E88D4CE035B44F505AA35CAD8009221657EFA25891F808D0D4E590
	F73E48248C38C2FDC4989DC4981E6395F30E3B2DA8A4C07987960A9524244AB2
	73EF16DF1A1D90E76D0EEF5DA6280B0E8792E1E188D1709B33173FC10FFD2B3F
	134A7404EDAC8D7186C46964E41946938A17CE2CA17BFD8724750F7B80569B34
	5518A77148669382BDBD111F78EE048B1756B971F91677BFF675969717595C5C
	62697191A5853EDB372FB375F51DDA5A2174DE94398298F9CAF9822B55A39D02
	252089F8B88994A9731EE7C0A8BA669ECB8F12C069DD74FB3807763CA63C1832
	E1360E49DACE2149585A3FCD273EF983689D70FBCE1D9CB5E84445883A2E780D
	6C791FC02C13C25C1D42ACB34827705245489AA86D1451C9E402B0177304190B
	FB1A7F105244635001D3888624621EE37D848075A815A50BA08EB515A60A063F
	1C8E5052A2930C95B519E48B2CAE9CC19A8295134FB0B7BD49BBD365696189A7
	9E7C96D7DFFE1659CCB7ACF14CA623CE9C7A09C81ED2593E640079AB8DF792F1
	64C67058F3010B3CB9BECC580BCE5C3CCBE1CD1DC69382C3E10D2E5FBDC620D3
	AC771C4BAB8BD8621220E3CA1153B2D881025E867DEF6D843D09AAA198D6A195
	4022F1CAE185C7D9102EEC118187C483026BC59C3A8D506D2A05384F311A71F2
	E2053EF4F18F61AD677B7B33DCAC5601D6B60EE76D00AC9CC359029B193D4065
	036EE17C60DAAC315805DA4BBC74E0245ED134A05053D9362A10C45C972A7DA0
	3D7D34B8A372658F0CDEA866926DE448083A03B4201581EF30360057D698605C
	52A075C6D6FDFBDCFF87BF4496B7F9E8A77F841FF8F00FF2DB5FFB32AD560FE7
	61329D606725EBEB271F29817B8401E48CC7638AA26061A14F92A63807CAC3CA
	74C2DDACC3B1F555C6879300F3DA80F7DF358A17CE3FCDEEE67D842D49ED9404
	0366162062EB31A6617FA9392FEFC2228A06060DC89EC72154844F1111CAF558
	13768C568DFA1B87A0721E3B3324A9E2235FF8519E7CE639F60F0E190EF763F6
	2C02B9645D4DDB07D43242D836024645555114254A09129D926769683021BCD6
	4B11D9C0B0C45AA946FF675DACCD7DD4463A8FC545A574281585F028291B32CC
	1A17AB1A81D49204150DD186FC8280FCE923546F0DF956A68CDED2E3EC10672D
	9FFAC467F8EACB5FE6E6F53758D08B180F8914745BF9FBD304A659CEF2CA2AAB
	EB1A21021E3D2D0A2C86B56E0B6D3C77B5A2D7ED04B997F11857E19D2769B5A8
	544AE9A0F412EF2D179EF930C39D2DC46497B69B21AA31C6B8C89ED9B08811D1
	6A1277E51A31474D927819E9B3C87AD5AA24153D48591A165717F9D8677F94C1
	F231B67676A86625898E8456DC75028171A629F19CAB89AE00581DEC1F329D8E
	28665D9CF574DA2DB23443291BC9A750F148E1A82ADFA08C4A4ABC170DE0537F
	F0487EE263660E60E22E1642C45C22C8AD54A5F08AB9E4AE017964D35812AAD3
	50FA4AA9902A94B752271C6CDD62B67383CF5F3C49712AA5DF09AD68623C8C06
	E7BF771998A519555570707848AB95D3CA73569797C999301E4FB033C3EE78C8
	F995E394D3223C409B5155510E1D153E603056D05A5A6586665F64A40A26BBF7
	4955454A45E22A9437786BA25B760D3F2E6A42ACD60408504A60840F25999B7B
	125F1A9E7AFE053EF8033F48611D5B9B5BB123474466708E1558672299157699
	F71E630CB3B2E0FEC606B39D6DB4AB60366338D9679CE564799B24EF042D7F96
	91A42959A2514AA3950C4CA5F731D197782FC37D785042052F26540473E6F717
	505311C240A4B6AD3181FB8FEFE9239F81F5B1CF42346AA71AF872D693E8846B
	AFFE16893D60B0B04867B0C09D9D7D5EB97D9F6FDED9E58B51A5F3EEDE8A8781
	A024A1DDEE70783862F3F080C974CA785AF0C46A8F972EAC93279A044B67D063
	757189F164CA643A633A9B801428A931D2A2B50A8B6A2C4ACA90E42845856686
	C2BB14E52CD65A522A3AA9A7A31C6E3AC2462B88380F51E28777A01048054902
	A6B090485EF8F48F72F6E967D8DDDF673C1E93488D8F14A98B3D0C44E2C83A17
	C25174F9C658C6D319776E5C63727F8BA55490E679F4160E5F8D70C588EA4062
	12CD244911499BB4DD41A739AD4E8B3CCB104204F4520495901212A125781358
	4CE73076DE3E872724767A0EEF8A28AF773EA8A66A57EFAD6BE0791F3477A1E3
	AA0E6D1174BA71ED0EFB772F9377FB741696D9DA1F73BF9AA145C5683C7E64AB
	9F7E580C296977BA68BD8310A1AB65F760484B39AC5D6371D0E144BFC7B53B77
	E859C9E2E222ABC716F17E9156DE424A81120A8301E931B642488556092A9651
	D2C5F24F282A2C53AB3944F1D4990B8C37DE219F6CE19D0989FE5C480432D6E8
	809955F456D678E9D33F42BBBFC0E6D616CE7A529D06DAD907BA560AD1F41FD4
	1A46E31CD65694A5E5F0F0903B372EE30E0E18B443DDAE9358A508894035794B
	48F466F86A8A19EE502582994A216D93B53A24AD36499E93A5395A6912AB2218
	130396080AEB2614D840510B6A5E7FAE1508E1C121BD88C412CDBD101941676D
	5C488F92A15A92DE311B8E18EF1FE28464693AE1F9EFFB044F3EF791478A60F5
	BB7BD88594A4694A59148CC613CAAA6469D023495B54D6D16BE5BC70FE047FFF
	E5B7198D4BAE5EBF81043ABD1E1F7AF1059224A12C4DB819176EACDD6A7178B0
	4F921E6983AA6BC2BA42C022B316E37489FEEA69E4FDB7984E0E1B55BF173494
	AF2D0CA72E7E908BDFFF311C92EDED9DC0182A81B5162124CE8792CB3BFB80D5
	5B67A8ACA5AA2C5BDB5BDCBF7E195D96F4BB298912D15D8B48291F697A89B4AB
	73E0A524B12129949488A2A41AEF319102548A4FDAE8BC4D92B7D159081B6992
	92241AA1245AD59A4885F2616787E573112B10E8441352478FA94A940A7C84A8
	B188C8837817E471C656D8CA042FA982D4C81525679F79969FF877FF12ED2320
	D0BB0C2060DE41FF1F7965A5198E26E479C6C2A08790813F9F5502E31DE74FAE
	C037AED15D48C993842C8D0FDE162CF67294308C268EA2346821495BADD818A1
	C3A354202DD828D470DE40A5F1368848F56019313B8E18EDC78A20EAE64A8B4C
	14CF7EFA0BAC9F3DCF783CA1280A941001613401C37784E4AC4EFC42AD1FD54C
	9565362BB9776783CD6BD7D1542479820B793ABA166E1C6D0E69E26DA83E00BC
	0E9FCBFA48DFAA39D267CB7DDC6C9FA9F3201386690A698B340F5E226FB5C8B2
	3C904C3A36D910C82C29240E49519651691D3C838B1E8CA88B0C16E422712A71
	C6519A19C607099D2B4B3A8B6DBEF8EFFF67DF75F1437BB8734D478FB51684A4
	3FE873FEDC59B2764E55545455C9B4AC9859CF7038216FB5E96978F2C402CFAC
	0EC85245966A12A562A2D561561A2EDFDEA332151DAD03E599E8C8EF5B3C12EF
	2B8C35CC8A0AEF2B2A13A0E5C39D1DD4E675949221DC2910C633583BCE858F7C
	9ACE60818383438C09DD32D6BA06F6B5F17E6AA1A6F511C67596D21886E3091B
	D7AE7270F71E9976A43A0D881D1EE342D68D150815F40422FA20292492A036A9
	93382982C17835C72942BE269B50E52A87B313CCE198D9DE361325D99709E45D
	92BC4596B7821ABB959324A1674247BF5C79DB34DB060A3A2445260A611B2978
	AC424C59E20554D382A5B5E37CEEE7FE22CBC7DF7B2886AE55A6CEB923658264
	736793CEB487D69A389229BD00002000494441546EA74DAFD727559E5975C0E1
	C1217D0DFBB3099322A5AAE06018943FA53514A5675C18EEED151C6F3B54A2A3
	E2A5964F3BACF798CA339D16CC662569A7CBAC28A12A296FBC465B96C1214A89
	3796EED23A1FF8D40F83D48C0EC778E723B0E363176E0056A408AE39ECF839DA
	571AC3FEC121372EBFC56C678F6EAAD06958FC3AF952322093B5EB0F4A257D44
	B321D1622EEF1204099B4752F7670840FB794B825532347324F3763153955493
	6D8A03C7444A84D2C824541A79A74DDEEA90B773D22445EBF0EC1012252D890E
	F9941704612A2200504E511515C5A86479FD243FF997FF1B8E9DF8DE1351F4D1
	09602EB67B753A1D1295323C3CE06034623C2EF038FAAD169F7CF124ADCCB0D6
	4979E5FE9095FE1A5D3FA4988D71160A5BB1376D312E1D656159AECA1065A2FA
	C6C71ADE988AE17844651CDD85011EC9C1C6358EF97D849F615C78A8DE81A92C
	BAD5C609C96C3A89CA9698D1FA98E0198B25B4D8B808D15A1FB4884551B0B3BD
	CB9D6B6F620E0B3A794292CA505A221AAD5EEDEF03D02310CE45C459C6B0C091
	C17A32EE4C5DBF0411A55D4DBB9773480F5EC940F746B02B5592CC81CFA35118
	8BB1438AFD7DF63703D42D134D9277C9BB7DB2768B346991B753D22445E99224
	D14D28080A29CF6C72406FB1CF4FFCC7FFE5FB5AFCB901C4A60662F74E92E624
	4A5188407414C584E9ACA21C4F707E1D632A8E2F76185EDF625C3A06AD8C4E3B
	4095BE10C8992651162B6478BF24096E538AC0ADFB8AD17084473358EA83332C
	987D16CC2C60FB44EBB675AB5423A46BC0905A4B176AE55A311C5021EF2555EC
	1B984E67DCBFBBC1CE8DAB6863E9F475282585C0C9B8CB2548155D6D9DF2A9B8
	F6B1E934B4B6CFC518352BA88EF624D60212015E04A3A94383120EEBC3F7C687
	16F6604F8E2415A44ED14E15B60D95F554A6A21A6E33DCBBCF3E413FA9B30E69
	B743DEEA92B7DA743A2DA44E69B773F244538E66FCE45FFCAF39F1E453EF7B30
	956E3EF7914C39CB739CB78CA7138AB2A2DDEED2EF295A7942A203F4D9CB3356
	73C9A51B5719E79A67CF2D51949E5969B03E0F39AD73CCCA02255548603C9426
	F40A76168ED1EE74290F77E9996DDA2264B0B5A65F22623F5DC8C8ADB1E01C3A
	C67CDFB4960700A9967B59EB30C6505415E3C9945BD7AE72B8718B5C439AAB98
	4445424A86B2C8DA80350825D1116696F0E0184DEF7042222C7809228256755B
	96C4052AB826BDE3CD88230D1BC2066FA009B239E3C0223151BC12D43E8E4C0B
	32ADB0898AB980C7540E3BDDA71CEE307312A713742B45E55DFAC75639B7BEC2
	8B7FF2CF70FCEC533CD029F27E46C4C8D8054C54E84AAD991625A94E39B9DE43
	4841693CFD5CA095C4794853C54A27E74E01A302EE6D0DD9DFDFC7A80EA22D30
	42E05B8AD21A2C21EE7B40EA848585658E1F5F237325BB9BAF93288939F2915D
	64793C61B1BC056F6DC3D3FB08DDD661C0454CDDFA80F095A6627FFF805B57DF
	66B2B9452B55A4B94289BAB3391053CA09A4F401DE954D2B3F26B66D050432FC
	59E75BDE45E5AEAFB77F443009D97B30C69AA1889DD5B57E51867C400A895092
	044804586FB091FF886C74349A900329C06B015E454CC3E32A4F55CD30D32193
	83FB64CFFE34EB179EE7F6AD5B6C6DDE0F65679A90A429DD4E9776A7F35E3382
	22C1214428C5AC65F5D8B180883947691C4551D04E1C4A85E605BC606DD0E1FA
	ED3D4CA7CFC6DE0C95642CAC2ED2EEE4A4BA835292CAC3EEEE15BC35780FED6E
	1F5F16C8DD0D269B6F932411ED723E823751F72EE770B07150591BBA93BD8DFA
	BD40EA8450118CC019CBB42CD8D9DCE6F6954B548753DA79949189F9BED03A42
	F5B14BD74987B161B19592A4046F507B4713B509F5E7513EE40F41AB175C3ED1
	041032F60984DD5DFFBBAA9145C004C974F80C5EA2D048E54265244C5341CCE7
	2D850752871CA5025F92781056B0F2FC0F72EAD91771CE519405C65AC64C63A3
	AE6571719173E7CEBF571238172B28A5E8F517593B7D8ED96448359DA0134FAF
	DB211733BC1FC720E86967094E1A3EF0F4326796FB74B3844C6BB49C9316410E
	5E92AD2B366D899F1ED219DD65B26F5059786D43EB111E5CF4AEF38E19C0125A
	B0A59478671151CA5563FA556599CD666C6CDC66FBDA15A4A9E8B713041295CC
	BBADA46E20AFC8D9CF7FBF8B6C618544F9100A9408CD1DF268CC1781D0A9113A
	53CE1036E41132B28849223155E0361DA18DCE5B17F202C05B19A5700E291D3A
	F60378291BF4B3494A7148113AA8EA44D20B89280DC79EFF048373CF36555CAF
	DBA5DF1F2055E8A87EE59557F8C55FFC45FEDA5FFDABA847CC23D2CEFB239D2E
	E12F6BEBEB7CF2B33FCCE1C10107FB7BECEFED70B8B78B986CE3CC1021032961
	1C48158AD66256E2AA0AE589A2514F51950C2BC3AE8543EB117BDFA13FB98BC5
	522A1D923C1B2767B8E8EE0461371C91F47917449B4DF341ADEEF5B1EBC85846
	E33137AF5E66F3C62D5A292479984096A89A78897303EB0C5E1D31AEE8D6E7A8
	7C70DFD6E9B04816B47261F8A5F3582F91AD3E5E26A0123A4B4B4150624BAA6A
	C66C7F0B3B3E2055822491A4A9264F72BC960DD3E744308ED0160733330F1732
	CCB70B38446C1BAE9B5C6A1184B4158B17BE9F173FFB636CEFEC84F73186CBEF
	5CE6D4E9532C2D2DE39DA3AC2A068301E3C984FEE0610310655178EFE70EC718
	D3A867AD0D7D7DA6321465C9DD2BAF73F7DBBF4E9275C8D384576FDCE3DB0763
	3ADD0E1E58CF33BEEF581BE72C55E5188DA7BC39B3CC90F4EF6F908EC6B8D812
	E509265F598B8959BD168244CA28FE71F5BC459C75B49796F9D0BFF463944545
	E50C384F59961445C9FEC12157DEBCC4786B8B4EAA50A9426BD1741B498E9479
	31933FDA8F17E1F5F9A4915AEF59033A368847FAA79E41B4FAA8EE80D5E3EBDC
	BB778FFE603150E3DECD85A2CE624DC9E4F080F1EE26B3FD6DA63BB791DE46D1
	0BA854C65D4D94C3053CC1BA10226A597B0D3889260F91D872C6B1F31FE2FBBE
	F0137821D8DBDD63B0B0409224ECEEECB0B7BFC7D3172E70F6CC195AAD1632C2
	FB4A270F7301DECFEFDE471CA0C605021B1534E76996E14F3FC9F6DB1D121D78
	EF43EFD14A604A8390707FEC70AB7DDA694A294BA695A19A1AF464488AC6250A
	33AB62B364F0FD5229126B31B1029956B6016464540C090FAE1EB04090A65795
	61329BB2BDB5C58DB72E518EC6B4BA0A85426AD1F4DBD7757E0D441DE9CE6A92
	B3A38B1F627CECD813504E67A4AB67C88F9D61E1F849F60FF6E92C2C91A45990
	B0291524DA3E40B452AAA8FE550C8E1D475E780E672BC6E343B6EF5CE1E0DE35
	FCCCB177FF0EBE18932A89CA34499A042D8170A4486C3361C4852A214212D21A
	4E5DFC28CFFFD08F2362C3AA8A9A87344B79FE85E7B979F326B76EDC64D0EFB3
	B8B8182066A5BFD7A858DF8C350B95816AFAFC45AC6716574F72F6C5CFB0FDF6
	6F73681CF70B43312D49D3E0AE4656B0339EB1B0DCC35412631D7BC30916C18B
	DFF7497A79C6E1DE0E93DD2D8AC31D26FB9BB8B2420911994281553E66C23EC6
	CA101E126F1AB2AA282BC693311BB76E71FFDA659429197413B4148D4CCB1C49
	E042BD2B62D9F66091248F207BCED5C611A4E0B351C1B94F7E9132EB309A9610
	E724D515880862C048B30A64A249738DC262CD185B16B84989A26260272CAE28
	F4B1F3B497CFB167FB4C0EF7D8BBBFC1EEBD0DB66FBD8319EDA1B5244914599E
	A394244B25B9AF390DC7A80456CF91C7AC5E50C4E19B12AD35D65A9E3A7F1E63
	0CDFF8C62B9C3D7BF6015EE31106307F1C01AAB5F316245977A4CC15B0CBA79F
	E2D6EBBFC9958DDB6C6DEF622AE8B603B76DACE3DBD7EFB1D64E71CEF2CECDBB
	BCF99D4D70153F74F1250683453ABD3EE2CC399CA9A866532687FB1C6CDD67B8
	B7C9E4600B5F0606AF694D072AE7A9ACC1B9307367FFF0905B57DE61FFD62D32
	0D693B090CDE91DA375121B7B00E4A44206D543D794434251D72EE6243B2A7C1
	57CCC615E73FF3A7F0AD1EAE2CC1850EA57A40451D2EE7D31E2455B10DF7AED0
	4A533A5A87D72B85D60949AA10B20D58841DB2B2FA24766595279E7E166B2A8A
	E994E1C11E9B776EB179EB06FB77AF30DBDC0923705A8A569EB278F219CE5EFC
	08AF5D7A8B8F7EFCE3B4DB6DC63191F13E8842B4569465C9C6C606BFF84B7F9F
	1FF9911F0E3394DF0B099C97822062B659B7E879E65222EF1CFDC5159EFEF89F
	E23CF0FD0787FCCAAFFD035E7DEB12A6803C4BD82A0C4F2FB639B5D263F5C493
	FCEC073E45B7D361B99307E38ACD8C599ED36A7758585EE1C4934F53CEA68C47
	430EF7B638DCDE64B4BBC9F4700F6B1D4A7AEC6C86F38E83E1216FBFFE2D66DB
	3BA1BE4F058912A1CCAA17368A2CAD03211559CD263A8789461219D3D0D811CB
	441147AB18E378FA73FF3A5314D3C34366B3292AC922A914F87B29C380AA5931
	43300069490FEEB0361820948E2A68D148D37DD3CFA5B0935D325F31B20148D2
	691A54BDABAB3CF9CCB35863984D260C0FF6D8BA7B9B9BEFBC819B8D39FD91CF
	F2E48567B9F8DCF3F47A3DD22CA5288A6660449AA6F47B7DACB3FCE0273EC1F3
	CFBF40ABD57ACF69627ADE9A2C9BE8E8BD6CDAAAEA4DE59C432885D49AD3175E
	C45ACBBA359C3FFB1477EEDCE2F0E0805B1B77E8757AD8FB97D029FCF0173ECF
	60FD2CB6AAD8DAB8CEFEFDDB512EE68FC4E2107AD2568BACDD6169750DF794C3
	562593F121BB9BF7D8BDBFC1686F8BBDCDBBDC7EFB0AD5BDBBF4FB2D940A495A
	191B4D9218AEA49F8FAB93588408DE442A19163D2A737D68CAC5DA88FE398B50
	09E73FF145B6862346D3295BF7EFE3ACE7DC53E7F9CEDBEFE09CE3A9FE80E96C
	168D2AE02798215DEDF0323472083F878DFD91292EBE4E818B43D0CB61B3A170
	D622E2E74E9294D6729B636B6B5C78EE45D6CF3D137012A5C9B38C634B8B41CE
	A575A08263436E9224E451CDD4EF0D38735635731DDFD790285937A77B7F0407
	0D614149455D2DD8383BD03B479EB7B9F0CC0B5465894ADE20CB3236AA92C533
	67E8AD9CC0566560EC74E003B4924D6EE1F1A177BF69EAACE70F0A74AB45D66E
	B3BCBA4E79E139C6A311C3BD1DD6D796E9661718EDDCC594161154DA71E92305
	CC7CEC8A3C520910A7AE38EF62CB76ECF2D1B1FEF770EEFB7F88511566179BB2
	244D72743BC4D6BDFD3D3AAD3678CFABAF7E93A228C9744A9269D65B87E46916
	50C0872A56DF48BF43F1A3B0D33DF4C2B1B9C833D6BDDE799C0C8335BC096374
	AD7564791E26AFC55A51C6B84F5D1EFA30E7A91E1425559CE1F83D8654EB30B5
	4337B22BD18CEF3A6218F14DC3B8571FF5691EA515AF7DFBDBECEFEDF1F4D34F
	B3B8B0C874362169F7E92F1C4348C5E1FE3E9BDBDBCC0EF648A57CD0AB580791
	735742350F41AA7AD66E803DB54EE8F407B4BB7DD69E78125B958C8743F676B6
	D8DBBCC7747F8BD9E16EA3307208BC14A19FC0838E7AFCBA655A5363F6E14F6B
	0D59ABCBCA332FD1EE0DD8BCBBC5F5ABD748D28C6EA74D96B7A82AC3CAB11594
	52545585B3418973E7CE1D666687A79E5A46487D04823F32B5D207597B600C05
	4268CC789B64F1290A175AD79C70482F9B8614E77C00879DC359331F0E119B42
	EBEF8DB18D0A398D95848B9344DECFE8385D55553CF54334B0EC23C6261E1D0A
	8C7416AD1457AF5EE56B5F7B99F5E36B7CE94B5F62756D8D33679EC0988A372F
	BDCE703462776787A2A838716CC0F9D36B181B64D84A8938419CA603074F6C98
	9C0B3962248DAA251BFF6F426FB04877B0C0C933E7994E278C8743C607BB8C76
	EE333BDC6336DAC39850C35811B058E1434551C3AA02B055896C2D20D7CED11E
	2C32998E393C3844A71993F198ADCD4D3A9D0ECB6B6B0C0F872C2DF6298A82E3
	27D6393C38C058C7A9D584B69E0F6388CD834D636A7D17754E8500578E494568
	34AD47D87024EF72CD083ADF48C8EB507DF48495A2AC428FA3F71C1C1C2085A0
	DBEBBDEF81D3BAB6E89AB97A3FE3CB7DE4E0B7B7B7F9CEDBDFE1DCB97374BA1D
	6E5CBB8E1070FDDA35AE5EBECCA9334F70EAE429B256CEFEF6FDB0737C3DB9C3
	23856BEA3089683C8D3FE226ACB3D8381C4A4915AA87B26AFA033C9E2C6F91A4
	19FDA565FCD9A728A753A6E34326FB3B8CF6B6991D6C524DA70DE4EBE35C1E6B
	2BD4E21AD3EE3A83B553A032BA49C6CADA1A9D4E37B4B957863276488F27238C
	355827180F0FE9F5BAAC3FB1CAA9D6E881512F3EB6B3D5C39B88DD3DB5FB0ED3
	4E04C255B1401591E88A4D2456808ADA89E821EAB1328D78A7F60055D978CBAF
	7EE5B7190D0FF9814F7E96173EF081F735495667591667DE97CD7005A593F7FC
	4F42496C51F0C4E953FCD99FFED3DCBF7F8FE1648AD29A372FBDC9783CE489B3
	67C159C6E321FDC180A7CE3F85AA4661E4DC7C8A7C5352D5B37E421B55EC1C8A
	38BC8D946F2D7EB036208122EA15A49C53D91241BBDB256FB7E91F5B0D2DEED3
	31C578C478779BC9E116B3FD1D8A62CAE0D4053AEB4F3236B03AE8510CB77169
	876EBB4DB7DDC63B173A85CA92AA2C39B1B6C8785A329E5528AD39188E198CB7
	E875DB47A1C6070ECDA847E6D73BB6F63DDE7B702636A6CCA781D7ECA68C62D1
	80FFFB79AF73EC63A8751C4559E29C633C1E339D15B4BA0B0D1EA0F5F73E0E42
	EB244CAC9E7A4F5914CD0C9EEF76C2C5C1FE1E1B1BB7D9D9DAC658834E12968E
	ADB0AA34D3E994B7DEBCC4C2E202CF5CBC88339683FD7DB6B6B6182A38B3B638
	67E5442DA1AAF5FB8143A8D53EB63EFAC5C7D9BAB14D3BD4EB32BA49DF345FD6
	43AD5D9CF021C33741E6DE5DA0D35B6071ED04655972B8BFC76C3C6279FD24CE
	79DAA6C44C0F180DC7741652B2AC87F50E25641899E321119693D91E460CB839
	4CB8BB7580C5B1D62BD06A3E74FAA8F722CE359235B61CC7C8361BC09408D589
	832D2C0215A688BA7010978D6729A89824D793CBABD859E48B82C383039092EB
	D76FD06EE53CF7C207387DFAF4F73CE1EDC13981494A0B184F264D79D3CAF387
	32C8BB7736D8D8D8204D12D64F9E244DC3645163829BDCDDDDA52C0BCE9D7F8A
	3C4DB1D2727C7D3D0C65988D3193BD785C8C4428D1B8B4395B13163E18856FC6
	A1D5D3C0C2CFA24E1EE224B2B9A8358C23748D8A37286C3DC694F30721044B2B
	ABC8E3EBB8D8022E8D607F38246F65743A1D0A2F034D2BE767FD082F188FA774
	B3111706038EAF3DC3F668446F72654E5AF9DA7335E97E1887E1E7E3DD020E12
	87591523682D34ADE2CEBB70C8950C2D63F2C868DDC05486C52F8B19DEC3D6D6
	166F5C7A9D95D575A4143CFBEC739C39F304792B7FE4F90A8FBA1ABFA5923412
	07826236633A9D624DF9C0CEFF855FF85F98CD0A4E9D3ECDE2E222DD6E37489C
	F38C344D298A197996D3ED7649D3204808E08AA1DBEE04AC5CA87949D4B482BB
	661C7D9DF6B8884BD7670FE988B92342595AB7716BA503CE1D3B65A4920D655C
	CF05525ACDBB62E21411EF1CC639CACA321C0E514A912419CE86619561746E6C
	14D19A24EF304B5798160E333BA06DF6C8B427F1EEC89CD61A850AD070986E36
	AFAA44D3FF18E622EACE529C18269B433582CCCD35849C31154AA9C6886CE441
	46E33187A32120D9DDD9E1990BCF70E6CC193AED4E9C19F43E154147BF49D28C
	96F74C2663A6B3694097B290184E261386C3217B7BBB8D4B0A4A5981779A4A56
	CCC643DAAD9CA5E52512A58EDC8441094FA935CE9A66E7FB7A716AF7E8DD034A
	3647E405BC6B76501D4FEB24D05A13F57AE1B532AA378592581BF408CDF45D11
	F87A2525DE7AAAB264321E511887D51989086714681581A33866857A9A48B6C0
	E1FE0DA44C986E5E63AA7A2CA77A7E5E42844FEADEFF669A1773A5B18814A4C7
	23548AB4A229BF1F5A34114AE57ADC5D50820BCAB264677B0B2515CB4BCBAC9F
	3CC1D927CFD21FF40396622D8914EF5F13F86077708AF78EC978C2AC9835B379
	D7D656F9CFFFCA5F09CA21EB9A3AD4794795560801ED4E87B5F5751606FD6648
	530D7498AA64B4FD6099548B186A83924252457C5DC888D6C5A6C66622472304
	9D7F09619B9D534FDE0E9333058888B249197BF43D5EC2AC9A311E8F513AA1C2
	716C7181F2701793240126D6BA5994304C3BC17A431109AE3BE392528D79627D
	69AE07AFB5C2A23950E1C8F762DE055D277432417AD9CCEF135244BD3F7122B9
	C2FAB061E65233D8D9D9E6F56F7E9334CF3875F61CE79E3CC7F2D252E341EA1E
	8F201A96FFB4670649B22C4C92984E2614459CC39FA66158B24CE65258EF5042
	A3A4647FFF80FDE1B499C0256333633807C053CEC21C5F730417952AC477632C
	883964393F8D6C3E80893824C1130626591B5AAEA50CE251878F7C7C3D79DC3E
	3050B1EEBF43C0AC2828A6050B8301E3E9845EA6613662369B4092D04DD3D871
	23E2ECE2600093F12EDE95144EF2EABD7D4E2DF7B13E720ACD2E3F3AC573BEAB
	EBC513718EB24C7B78A951C8788F817E1791740BF3FF14655581906157EB8444
	6B56D78EF3E2873FC26432E1FC534FB1B6B68652BA6914ADE7931C9922F9BD73
	8077D5796469469EB7C234D0B2A22A4BAACA40338049C4890EA195ECDAB56BFC
	FC7FFBF36C6D6D91A529699AC6593D19699A90B75A61C6FE91F82E3892687930
	95097306B48E9D38A271AD6104CB5C23A7940C1346DD7CE7F92389A39432680E
	625B55DD0AEE5C98C13358E8475049D3CE53A6933178E8B63B21DFD012A5F5FC
	400B2949D356CC130CD3D194BDC3319573CDD2368BDCF8FB23AC87E081B9C769
	67112F62AE21253A49D03A41C661D952AA3886C635096651145CBB719DB2AC78
	EEB9E7F8CCA73FC3E953A7438F803A327FCFD350FCDF2B0CE8EF5EEB6BB22C05
	7C98096C4C43136B1D4FE410F3DFF8D24B1FE26FFFCF7F8B5EB7479EE70F1CFA
	64AD8DC95ADDDFAE82B4CA0618530A014A8330473E3C481D5E87B0914689E2D5
	7A68731CB0D454DB8DBED137BC4070A5228E7C99C3CCB5841C1FAA1FE73DDD6E
	270E7B0AFD7A6147D6431AA0DB5B64DA5FE3EAAD6F727838A202F6C725DD45DD
	E0FCF50234034F1F740AE1739A827CE90C855431FCF1D0F4AE26E98B27A9D5D4
	B3292BB6B77648124DF7C95E3C648307CE6DFAA75085BFF7B98152A7A47141CA
	B2C298AA39404ACF67BA2084A2DDE971A6D36B42435DB3D74FA4288A38562DC6
	391576ABB5F3EE5D198F4733F554CF58D6B910E09B0317E6D54234C438DECD1D
	697245D4C7C8FA48FA04B54D0DB97A1742D0703C0D21C10A5402B908E7F0D48B
	1F7479F5E00B8D739E3B7B7BCC0A03C58CEB5BFB9C18B410D23FD8C61C57C1D7
	6128AE89315374EF38BEB588126A9E50C7D250D4FD8C9E4696571405A3E13002
	4196C5A530A0AB3972267210470753D52CA4E09F2504FCBFED5DCB725C4719FE
	BAFB5C66CE9919CD489646B2258DE4926F51C581828210082B481659B0E509C8
	8E1414CF125E8147200102C5225485720A9C1052911D5BB291C673BF9E993997
	6E167D9923E3B29C58964DE5FC55B6E585644FF7DFFFFDFFBE9430DB86EBE6E0
	BA8EF2D73112359C814750BA69D740981C9804B300E6C0B21C838011F358B651
	C5BCF19128F879CD1DC813AE1421FDBA8562199DC70873081695022A6A3573B0
	44AE5D7315906A1C9A9827E80F4688A3184108142A4B0A535828B3CCC02C997A
	32C6A43B6014A5EA36CAF93C964B92A7E8A35B8738EC0CCDCE81488D72A74BC2
	4408CC2623D8C50B286CBF0A4E6D39BDA403606599F46FDA7206E30986C32186
	C3216EEDEDC1F30AA8D5B6502A95CC67458A8F99A438049E84AFF809A8630998
	6DC3515FC7712C5BB69C0348649A44D863BF5F25E308C358EDEF330832A74622
	948008A6366BD4748E259742A1661389028FE6BAD84215BA780A205A833AC8C3
	E386BE5EA4400905803889311A05F05C17334A51141479C4E88DC7604E0E2B29
	5A36696235DF3101AD54F1FA1B3FC72B930037BEF81C7FFEE0AFF8DD5F3EC6CF
	BE7F0D5BABCB701D4BE56F7253284C04C220C2381658AC5D477E6D0709B5CD92
	A9AE861242241EA998F75BA6D3191ACD260E0E0E90F73C6C6D6FA3B6B989C54A
	05B66DA708B78869FFCEB183F5D3214FAB005A091C382AB88AE318499C805854
	1244B2939B479C7378C5051CDDBB03CFF7411953269FCC83262E406D4B41D28A
	943BD3C00D12345223916BF0A78709AE35C8B309CDA81CB0E4A9F6AC9FCF8350
	C929B0E051F40703C40947C1F76544ADAD880269A2BACC4B288A2BEB283386D5
	F58BB87EE91AFEF9D927F8F06E1D9F1EB4E1B9804D2876B7D6E0E55DF038825D
	5C45F5A557E1FBC5E3D609C7DBEF54A5DC844B9F7FFBD617A8D78F90C4312A95
	0AAE5EB9826A75455660CDE5C32881767DE64CC9A95880943B5063C544957F39
	4F2420F113449B8410AC5ED8C0FE977B188CC6E04904D79115443DD9A2CBCA42
	41BC732E60DBCABFE99631178855EB584098DE017D68C55D671B141C8432C5D0
	C5D5F758120F30927BF6836008CE054A455F5D3A95B0B3AA9C9CA6AF49376D1C
	C7C5E5CBBBB8B4731580C03F6EDE44FDDE5D2C163DF8F90039D706B71916CF6F
	C22B2F1EABCFD34761F72BDAD9308AB07FF72E3EFFEC53B86E1EE737B770F5CA
	15AC6FAC2B600905C445907A44D24A09134892A70F021F1934300B8E7A1949A2
	6AD782E324334029456969193FF8C95B18F75AA81F1DA1D538C2783040140EE0
	580CB60280664AA32572A70ADCF4C450CA252449628A42147AD153A17D03A9E1
	4F6EE0DF850028959944C23926D329C22842304B20881CA6B095EFD73D073333
	A98663F40B93999600610C1663B8707E1D57AFEEC2F3F2D8FFD747B8B57F80D7
	7FFA16BC42093A57D11620CDBA4AE8F1D26DBFDF47B7DDC242D147AEB8889D9D
	1D6C6E6E209FCBAB748F18734FC81C361E29E6F6AFC51BF8C442286CC705C250
	41AEC994ED71AF5F3292382897CB28954A585A5DC76C36C364D443ABD140B37E
	847EA78D41B70F4A807CCE9538C1C2510192A69291D335442DEBE90C2149C36F
	99916F6682469EE235D65DB97036431CC7E80C26F08A258306C274CA6A2E4616
	B52CCBC2FEDDBBE80FFA585828C3F37C787989F00126D14A83600C42291E8C09
	86A488843A729A81D054704655097CFE779A827E2B572AB87CED1ABADD552C94
	2BB8B4B38342A1607881B415D234315F29EF3B150550FFA0EDB848E250068527
	B801FDE1F5448B6559C8E57228168B585A398FAD4BD7301D0FD169B7D07A5047
	A7DDC070D0431C0EE13A96347D296249AAD8A388CAF5F56B14A9892C8E449140
	9804120AC0135345316759367CDF47D9CFA3F5E03FA85DBE66227F927E518461
	3018E2F0A80E2E043A9D1EE23892153ADB463E27A76FB72E6E631204B2B96451
	F47A3D78F9BCE40454432F5405964C079AEA4F7DC1E7CE9DC3CACA8A6A8F4B26
	153312F690E5785AB19EF60730CB014D62F038063D6190E471CAE0388EBC88A5
	656C6CEF603A19A1D76EA1DD6CA2F9A08E51BF8BC49651600000055F49444154
	68349298C00A3A45932452AA08AB0837E450D41C92EA34EB117710D961A30C8E
	23639A0A047ADD2688EBCBE10CE8BD3C62EAF000F0FBF7DEC3077FFA00EFBCF3
	4B944A254C6753846184E9648A5EAF8BDB5FFC1BD3E90C8EEBE2E8F03EAACBCB
	38BC7F1F6118A25229C3F70BF07D09BD4F299943C42A6C25B9C1C38C4F771DCB
	3490D27D89D3B8787317423C3299FFEAA24FF9A494E0846C219D35C8459008B3
	698041AF8B4EAB8566A38E5EBB89E96808088966E23896EA1150B3E16C489C29
	553939375640074C5114613C9EA2D56E21A10ECE6F6E61B3B6A52E8919054DD4
	CAFCCD4F3EC1E1E111765F7A09954A5995C943DCBF7780DBB7F660DB2EA6510C
	C7B6706E6911CBD55500924247241CB663C3B16DF885027CBF80D5B5559417CA
	C60530C652669E185692742F835082D3A48F3F3D053865492B835688388E114E
	27180EFAD255341A6837EB08867D44E1143663701C178EE39A8898A65344B500
	22717D81601AA0DDEC2022162E6C6E63A35693F848B66D0E3DE18982B29B2B64
	144588A318BD7E0FFB5FDE411487A8AE5D40B952C1C1C13D8C47232C140BD87D
	F96578BE6F82532E1284B350D2EA8421D6D7D7B1B22C994D2DDDFF60733FAF61
	FBCCCE0621A77ECE2FAC023C4A21E6BF24D267349D61341AA1DB69A3DD6AA2DD
	686038E860321E8211AA5C8BAD3A7A745E6F8064416D75DA0805C385DA45D46A
	35140A3E6CDB994F1319EA5B6E88320160341AE1F6ADDBE875DA285516515D5B
	932E613201E71C77EEDC41BF59C7EE2BDFC6F24A55BE6CC64029816D3BB871E3
	063EFCDB8778FB176F636363C35C3C510015E9CB3F6EF24F5F01AC67745DA7FE
	9F4D0F4C0821D9BB6DDB412EEF617169091BB51A82F10483814CA15ACD067AED
	2686839EAC39D80E6CC7318055BD6E179C39A86D6E63B3B68562A1A83674D97C
	D88573084E652389C8F5B307F53AF6F6F690CF7BD8BDFE2D942B654C8209A641
	2049A21C176BAB6B988CBAE8341FE0DC7235D5A103C2D90CE360825E6F30A7B5
	55AF9ED2E3AF7E5E2422CFEC613D330B201446F0D7E5B5FFEAAE2251882109C2
	30C4743A35134C9D660BED561DC35E17E1648C308A607925D42E5E466D6B0BC5
	A21C6193B1C39C834F4F3471457D3B0D2668B6DB4812C93C96C4D21DE8FD49C1
	E7AE667F7F1FF583DBF8EE6B3FC6E2E29282946726701582C3F37DE473B9B9CB
	21C77B03CFF2E2CFC4058824567E979E95A33044D59A31344E62CC663304C104
	FD5E17DD4E0783410F4BCB5554AB55E47239D987D753397AFA56F9FC44F11F47
	718CF7DFFF23DEFBC3FBF8CDAF7F85825FF8DF228E06A8A60CC3D108373FFE3B
	56AB555CFFCEF760310B96C20DB02CEB588F4197C50192C20326677262D633D5
	2E6681279124703E930F444024C62B1893742FB6E0C8B939148B25ACAC2CCB0E
	9D1A17D32FD60CA0AAD7AED9C7B910B0146E1063317CCFC3C5ED6DC47182BCE7
	197F6DCABA42F2112409C7B9A525D42E5E42B1509028642A1EA1942952097AAC
	1F3237F967F558CE300814492C57A65F90CC225D9D4CA7B1F30073FEB5569238
	960DAA280CE7A5D8141FB10E50B5DB68341A78F7DDDFE28D37DFC48F7EF89A9C
	92B66D93EA990E2399D7F5CFEAD59F9905485B02D92FA0CF55011E3B2A6D5AA8
	4CF115735359149CC3B26D0801E4F39E710F7AA7921BE51186F9248A228C8300
	C1786478861FCEF3A999AA22CFEF4CCE340DE4C989EBCA2F78326A9A4B42A481
	338451023D7C10273186A3111C5B563859BAB7F09C2FFDF9D6015E004BF02C95
	E3D8E2E30B72C92F602148FC5F1CCE37419ED353CC2EFF1BAE0099640A9049A6
	0099640A9049A60099640A9049A60099640A9049A60099640A9049A60099640A
	9049A60099640A9049A60099640A9049A60099640A90C93391FF02A9E6E9453B
	AC3D000000000049454E44AE426082
	]]>
</Picture>

<Ancestry SectVersion="1" SectionFlags="0" SubIdent="0" Template="false">
	<MainGUID>F938E33A-329D-4A36-BE3E-85E126820996</MainGUID>
	<MainGUID>103E8D2C-8230-42E1-9597-46F84CCE28C0</MainGUID>
	<MainGUID>C76BC373-89AE-4368-A490-BB2485825242</MainGUID>
	<MainGUID>FC9AA201-5720-4CD0-AA2F-A9E9D5812565</MainGUID>
</Ancestry>

<CalledMacros SectVersion="2" SectionFlags="0" SubIdent="0">
	<Macro>
		<MName><![CDATA["fa_minimalspace"]]></MName>
		<MainGUID>948022D5-BA0C-4407-8518-A3B5922DF84C</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["completeTable_m"]]></MName>
		<MainGUID>842042EF-1396-4BDE-82C8-BA46B2D57950</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["deskClosings_m"]]></MName>
		<MainGUID>31AF2F3D-8018-41F0-B40F-C43BB5A93422</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["ui_officeLayout"]]></MName>
		<MainGUID>FB90EF3A-0F3B-47C9-B4E2-B542F0BE127E</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["FM_types"]]></MName>
		<MainGUID>2759D2DF-AA8E-44D1-AD1D-261581266B34</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["ui_tabcontrol"]]></MName>
		<MainGUID>D512885C-336A-4161-B8CB-EE5DC5D09FFE</MainGUID>
	</Macro>
</CalledMacros>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_PR SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_PR>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_UI SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
! ======================================================================
! UI
! ======================================================================

ui_dialog `Параметры Компоновки Офисной Мебели`

call "ui_officeLayout" parameters all	iCallerType				= LAYOUT_ISLAND,
										bShowCabParams			= bShowCabParams,
										bShowPartitionParams	= bShowPartitionParams,
										bShowExtDeskParams		= bShowExtDeskParams,
										bShowExtDeskChairParams	= bShowExtDeskChairParams,
										bShowExtDeskCabParams	= bShowExtDeskCabParams,
										bShowExtCabParams		= bShowExtCabParams,
										bShowCommonCabParams	= bShowCommonCabParams,
										stSymbolTypes			= stSymbolTypes,
										iTableTopType			= 1,						!iTableTopType = 2 == the desk allways "L" shaped
										iInnerEdge				= iInnerEdge

]]>
</Script_UI>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Comment SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[Вспомогательные средства проектирования с минимальным пространством и 3D-модель.]]>
</Comment>

<Keywords SectVersion="1" SectionFlags="0" SubIdent="0">
<![CDATA[Стили расположения, стили стульев, стили ножек, шкаф, перегородка, расширение стола и шкафа, 2D-символы, рабочий стол, письменный стол]]>
</Keywords>

<Copyright SectVersion="1" SectionFlags="0" SubIdent="0">
	<Author>GRAPHISOFT</Author>
	<License>
		<Type>CC BY-ND</Type>
		<Version>3.0</Version>
	</License>
</Copyright>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_FWM SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
actualGUID = FROM_GUID

! ==============================================================================
! Subroutines
! ==============================================================================

	_autoID		= "790FF380-73A2-475E-B802-F521998BB3FE"
	_startID	= "097AC818-B6F5-45E2-9E0E-24EC12419F3B"
	_endID		= "AC4B3B94-10D6-4910-B5F0-137F8B0D090F"
gosub "newparameters_FWM"

! ==============================================================================
! Set migration GUID
! ==============================================================================

setmigrationguid actualGUID

! ==============================================================================
end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! en
! ==============================================================================


! ==============================================================================
! newparameters
! ==============================================================================
"newparameters_FWM":
	if actualGuid = _startID | actualGuid = _autoID then
	
		bHas = STORED_PAR_VALUE("gs_knob_type_m",_gs_knob_type_m)
		
		! If Knob Style was 0, that equals with Knob being off, otherwise it is on.
		if _gs_knob_type_m = 0 then
			bKnob = 0
			gs_knob_type_m = 1
		else
			bKnob = 1
		endif
		
		parameters	bKnob			= bKnob,
					gs_knob_type_m	= gs_knob_type_m
		
		actualGuid = _endID
	endif
return

]]>
</Script_FWM>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_BWM SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
targetGUID = TO_GUID

! ==============================================================================
! Subroutines
! ==============================================================================

gosub "newparameters_BWM"

! ==============================================================================
! Set migration GUID
! ==============================================================================

setmigrationguid targetGuid

! ==============================================================================
end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! en
! ==============================================================================


! ==============================================================================
! newparameters
! ==============================================================================
"newparameters_BWM":
	if targetGUID # "" then
	
		! If Knob Style was 0, that equals with Knob being off, otherwise it is on.
		if not(bKnob) then
			gs_knob_type_m = 0
		else
			gs_knob_type_m = gs_knob_type_m
		endif

		parameters gs_knob_type_m = gs_knob_type_m

	endif
return

]]>
</Script_BWM>

<MigrationTable SectVersion="1" SectionFlags="0" SubIdent="0">
	<MigrationTableElement>
		<MainGUID>790FF380-73A2-475E-B802-F521998BB3FE</MainGUID>
		<Version>18</Version>
		<Name><![CDATA[""]]></Name>
		<AutoMigration>false</AutoMigration>
	</MigrationTableElement>
	<MigrationTableElement>
		<MainGUID>097AC818-B6F5-45E2-9E0E-24EC12419F3B</MainGUID>
		<Version>19</Version>
		<Name><![CDATA[""]]></Name>
		<AutoMigration>false</AutoMigration>
	</MigrationTableElement>
</MigrationTable>

</Symbol>
