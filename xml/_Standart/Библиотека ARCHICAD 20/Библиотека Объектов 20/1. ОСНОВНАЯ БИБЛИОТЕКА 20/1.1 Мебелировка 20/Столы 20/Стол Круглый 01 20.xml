<?xml version="1.0" encoding="UTF-8"?>
<Symbol IsArchivable="true" IsPlaceable="true" MainGUID="EAC02FC2-E255-4361-8BFB-3664A49E749D" MigrationValue="Normal" Owner="1196638531" Signature="1196644685" Version="43">
<Ancestry SectVersion="1" SectionFlags="0" SubIdent="0" Template="false">
	<MainGUID>F938E33A-329D-4A36-BE3E-85E126820996</MainGUID>
	<MainGUID>103E8D2C-8230-42E1-9597-46F84CCE28C0</MainGUID>
	<MainGUID>C76BC373-89AE-4368-A490-BB2485825242</MainGUID>
	<MainGUID>FC9AA201-5720-4CD0-AA2F-A9E9D5812565</MainGUID>
</Ancestry>

<MigrationTable SectVersion="1" SectionFlags="0" SubIdent="0">
	<MigrationTableElement>
		<MainGUID>C3813E2B-2A35-4F01-8BA2-BDF194E18CB9</MainGUID>
		<Version>18</Version>
		<Name><![CDATA[""]]></Name>
		<AutoMigration>true</AutoMigration>
	</MigrationTableElement>
</MigrationTable>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_3D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
IF not(gs_shadow) THEN SHADOW OFF

pen gs_cont_pen

if gs_detlevel_3D_m = DETLEV_OFF then end
if gs_detlevel_3D_m = DETLEV_SIMPLE then gs_resol = 4

if not(drawer) then
	heightDrawer = 0
endif

! ==============================================================================
! Legs
! ==============================================================================

RESOL gs_resol
material gs_leg_mat

hh = 0
hr = 0

if numLeg = 1 then
	hh = 0.02
	hr = max(0.4,max(depthLeg,widthLeg)+max(A,B)/10)
	if iStyleLeg = LEG_ROUND or iStyleLeg = LEG_CONIC or iStyleLeg = LEG_BALUSTER then
		cylind hh, hr/2
		addz hh
	endif
	if iStyleLeg = LEG_BLOCK then
		add -hr/2, -hr/2, 0
		block hr, hr, hh
		del 1
	endif

	if iStyleLeg = LEG_ROUND then
		cylind zzyzx - thickTabletop - hh, widthLeg/2
	endif
	if iStyleLeg = LEG_CONIC then
		roty -90
		revolve 3, 360, 1+2+16+32,
				0,                             widthLeg/4, 1,
			   (zzyzx - thickTabletop - hh)/2, widthLeg/2,   1,
				zzyzx - thickTabletop - hh,    widthLeg/2,   1
		del 1
	endif
	if iStyleLeg = LEG_BALUSTER then gosub "baluster"
	if ABdifference < EPS and (iStyleLeg = LEG_ROUND or iStyleLeg = LEG_CONIC or iStyleLeg = LEG_BALUSTER) then del 1

	if iStyleLeg = LEG_BLOCK then
		add -widthLeg/2, -depthLeg/2, hh
		block widthLeg, depthLeg, zzyzx - thickTabletop - hh
		del 1
	endif
else
	if numLeg = 2 then
		eh = 0.05
		eb = 0.05

		dx = 2 * (min(a,b)/2 - widthOverhang) * sin(45)
		dy = zzyzx - thickTabletop - 0.03

		if a - b > EPS then
			if iTypeTableEnd = TABLEEND_ARC then
				add -ABdifference/2 - dx/2, -dx/2, 0
			else
				add -(a/2 - widthOverhang) * cos(45), -dx/2, 0
			endif
		else
			if iTypeTableEnd = TABLEEND_ARC then
				add -dx/2, -ABdifference/2 - dx/2, 0
			else
				add -dx/2, -(b/2 - widthOverhang) * cos(45), 0
			endif
		endif

		for i = 1 to 2
			if iStyleLeg = LEG_RUSTIC then
				addz 0.03
				if b - a > EPS then
					addy widthLeg
				else
					rotz 90
				endif
				rotx 90
				mul dx, dy, 1
				dt = (dx + 2 * 0.03) / dx
				gosub "rustic"
				del 4
			else
				if b - a > EPS then
					addx dx
					rotz 90
				endif
				if iStyleLeg = LEG_SOLID then
					depthLeg = dx
					gosub "solidLeg"
				else    ! iStyleLeg = LEG_FOLDING
					gosub "folding"
				endif
				if b - a > EPS then del 2
			endif
			if b - a > EPS then
				if iTypeTableEnd = TABLEEND_ARC then
					addy ABdifference + dx - widthLeg
				else
					addy 2 * (b/2 - widthOverhang) * cos(45) - widthLeg
				endif
			else
				if iTypeTableEnd = TABLEEND_ARC then
					addx ABdifference + dx - widthLeg
				else
					addx 2 * (a/2 - widthOverhang) * cos(45) - widthLeg
				endif
			endif
		next i
		del 1 + 2
	else				! numLeg = 3 or 4
		if ABdifference < EPS or iTypeTableEnd = TABLEEND_ELLIP then
			if ABdifference < EPS then
				rotz 45
			else
				ellxy = 0
				if iStyleLeg = LEG_BALUSTER or iStyleLeg = LEG_DESIGN then ellxy = widthLeg/2/2
			endif
			for i = 1 to numLeg
				if  ABdifference < EPS then
					addx a/2 - widthLeg - widthOverhang
					if numLeg = 4 then
						addx -((widthLeg) * (sqr(2) - 1))
					endif
				else
					if iTypeTableEnd = TABLEEND_ELLIP then
						add (a/2 - 5 * widthLeg/4 - widthOverhang - ellxy) * cos(45 + (i - 1) * (360/numLeg)),
							(b/2 - 5 * widthLeg/4 - widthOverhang - ellxy) * sin(45 + (i - 1) * (360/numLeg)), 0
					endif
				endif
				if iStyleLeg = LEG_ROUND or iStyleLeg = LEG_CONIC or iStyleLeg = LEG_BALUSTER or iStyleLeg = LEG_DESIGN then
					if iStyleLeg = LEG_ROUND then
						cylind zzyzx - thickTabletop, widthLeg/2
					endif
					if iStyleLeg = LEG_CONIC then
						roty -90
						revolve 3, 360, 1+2+16+32,
								0,                        widthLeg/4, 1,
							   (zzyzx - thickTabletop)/2, widthLeg/2,   1,
								zzyzx - thickTabletop,    widthLeg/2,   1
						gosub 1000
						del 1
					endif
					if numLeg = 4 then rotz 90*not(i%2)
					if iStyleLeg = LEG_BALUSTER then gosub "baluster"
					gosub 2000
					if iStyleLeg = LEG_DESIGN then gosub "design"
					gosub 1000
					if numLeg = 4 then del 1
				endif
				if iStyleLeg = LEG_BLOCK then
					if iTypeTableEnd = TABLEEND_ELLIP then
						if ABdifference >= EPS then
							if numLeg = 4 then
								rotz -90*(i%2)+90*not(i%2)
							else
								rotz (45 + (i - 1) * (360/numLeg))
							endif
						else
							if numLeg = 4 then rotz 45*(i%2)-45*not(i%2)
						endif
						if numleg = 3 and ABdifference >= EPS then
							add -widthLeg/2, -widthLeg/2, 0
						else
							add -widthLeg/2, -depthLeg/2, 0
						endif
					else
						if numLeg = 4 then rotz 45*(i%2)-45*not(i%2)
						add -widthLeg/2, -depthLeg/2, 0
					endif
					block widthLeg, depthLeg, zzyzx - thickTabletop
					gosub 1000
					if iTypeTableEnd = TABLEEND_ELLIP and ABdifference >= EPS then
						del 1
					else
						if numLeg = 4 then del 1
					endif
					del 1
				endif
				if  ABdifference < EPS then
					del 1
					if numLeg = 4 then del 1
				else
					if (iTypeTableEnd = TABLEEND_ELLIP) then del 1
				endif
				if  ABdifference < EPS then rotz 360 / numLeg
			next i
			if  ABdifference < EPS then del numLeg+1
		else				! iTypeTableEnd = TABLEEND_ARC and ABdifference > EPS
			if numLeg = 4 then
				if ABdifference - 0.5 > EPS then
					if a - b > EPS then
						add -ABdifference/2, -b/2+widthOverhang+3*depthLeg/5, 0
					else
						add -a/2 + widthOverhang + widthLeg, -ABdifference/2, 0
					endif
				endif

				for x = 1 to 2
					if ABdifference - 0.5 < EPS then
						rotz 180*(x=2)
						if a - b > EPS then
							addx ABdifference/2
							rotz -45
						else
							addy ABdifference/2
							rotz 45
						endif
					endif

					for y = 1 to 2
						if ABdifference - 0.5 < EPS then
							addx min(a,b)/2 - widthLeg - widthOverhang-((widthLeg) * (sqr(2) - 1))
							rotz 45
						endif
						if iStyleLeg = LEG_ROUND then
							cylind zzyzx - thickTabletop, widthLeg/2
						endif
						if iStyleLeg = LEG_CONIC then
							roty -90
							revolve 3, 360, 1+2+16+32,
									0,                        widthLeg/4, 1,
								   (zzyzx - thickTabletop)/2, widthLeg/2,   1,
									zzyzx - thickTabletop,    widthLeg/2,   1
							del 1
						endif
						if iStyleLeg = LEG_BLOCK then
							if ABdifference - 0.5 <= EPS then
								rotz 90*(y%2)
							endif
							add -widthLeg/2, -depthLeg/2, 0
							block widthLeg, depthLeg, zzyzx - thickTabletop
							del 1
							if ABdifference - 0.5 <= EPS then del 1
						endif
						if iStyleLeg = LEG_BALUSTER then gosub "baluster"
						if iStyleLeg = LEG_DESIGN then gosub "design"
						if ABdifference - 0.5 > EPS then
							if a - b > EPS then
								addx ABdifference
							else
								addx a - 2 * (widthOverhang + widthLeg/2) - widthLeg
							endif
						else
							del 2
							rotz 90
						endif
					next y
					if ABdifference - 0.5 > EPS then
						del 2
						if a - b > EPS then
							addy b - 2 * (widthOverhang + widthLeg/2) - widthLeg
						else
							addy ABdifference
						endif
					else
						del 2+2
					endif
				next x
				if ABdifference - 0.5 > EPS then del 2+1
			else				! numLeg = 3
				if ABdifference - 0.5 < EPS then
					mod_1 = COS(60)
					mod_2 = SIN(60)*(min(a,b)/2-widthLeg-widthOverhang)
				else
					mod_1 = 1
					mod_2 = 0
				endif
				for i=1 to 3
					if a - b > EPS then
						if ABdifference > 0.5 then
							rotz -90
						else
							rotz 90
						endif
					endif
					if i=1 then add   min(a,b)/2-widthLeg-widthOverhang, 0, 0
					if i=2 then add -mod_1*(min(a,b)/2-widthLeg-widthOverhang), ABdifference/2+mod_2, 0
					if i=3 then add -mod_1*(min(a,b)/2-widthLeg-widthOverhang), -ABdifference/2-mod_2, 0

					if iStyleLeg = LEG_ROUND then
						cylind zzyzx - thickTabletop, widthLeg/2
					endif
					if iStyleLeg = LEG_CONIC then
						roty -90
						revolve 3, 360, 1+2+16+32,
								0,                        widthLeg/4, 1,
							   (zzyzx - thickTabletop)/2, widthLeg/2,   1,
								zzyzx - thickTabletop,    widthLeg/2,   1
						del 1
					endif
					if iStyleLeg = LEG_BLOCK then
						if ABdifference - 0.5 < EPS then
							rotz 55*(i=3)+125*(i=2)
							add -widthLeg/2, -widthLeg/2, 0
						else
							add -widthLeg/2, -depthLeg/2, 0
						endif
						block widthLeg, depthLeg, zzyzx - thickTabletop
						if ABdifference - 0.5 < EPS then del 1
						del 1
					endif
					if iStyleLeg = LEG_BALUSTER then gosub "baluster"
					if iStyleLeg = LEG_DESIGN then
						if ABdifference - 0.5 < EPS then rotz 30*(i=2)+150*(i=3)+90*(i=1)
						gosub "design"
						if ABdifference - 0.5 < EPS then del 1
					endif
					del 1
					if a - b > EPS then del 1
				next i
			endif
		endif
	endif
endif

! ======================================================================
! Shelf
! ======================================================================

if shelf then
	material smat
	if iTypeTableEnd = TABLEEND_ARC then
		if iStyleFrame =  FRAMESTYLE_ARC then
			addz heightShelf
			resol 3* gs_resol
			if a >= b then
				prism_  7, thickShelf,
						-ABdifference/2, 	-b/2-widthFrame+widthOverhang+widthLeg, 	79,
						ABdifference/2,	 	-b/2-widthFrame+widthOverhang+widthLeg, 	79,
						ABdifference/2,	 	0, 											979,
						0, 					180, 										4079,
						-ABdifference/2, 	b/2+widthFrame-widthOverhang-widthLeg, 		79,
						-ABdifference/2, 	0, 											979,
						0, 					180, 										4079
			else
				prism_  7, thickShelf,
						-a/2+widthFrame+widthOverhang+widthLeg, 	ABdifference/2, 	79,
						-a/2+widthFrame+widthOverhang+widthLeg, 	-ABdifference/2, 	79,
						0, 											-ABdifference/2,	979,
						0, 											180, 				4079,
						a/2+widthFrame-widthOverhang-widthLeg, 		ABdifference/2, 	79,
						0,				 							ABdifference/2, 	979,
						0, 											180, 				4079
			endif
			del 1
		else
			! iStyleFrame = FRAMESTYLE_STRAIGHT
			addz heightShelf
			if ABdifference< eps then
				add -(A/sqr(2)/2-widthOverhang-widthLeg/2),-(A/sqr(2)/2-widthOverhang-widthLeg/2),	0
				block (A/sqr(2)/2-widthOverhang-widthLeg/2)*2,	(A/sqr(2)/2-widthOverhang-widthLeg/2)*2,		thickShelf
				del 1
			else
				if ABdifference <= 0.5 then
					if a - b > EPS then
						resol 3
						prism_  4, thickShelf,
								- (ABdifference/2+cos(45)*(b/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1)))), 		-sin(45)*(b/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1))),	 	79,
								(ABdifference/2+cos(45)*(b/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1)))),	 	-sin(45)*(b/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1))), 		79,
								(ABdifference/2+cos(45)*(b/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1)))),	 	sin(45)*(b/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1))),		79,
								-(ABdifference/2+cos(45)*(b/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1)))), 		sin(45)*(b/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1))), 		79
					else
						if b > a then
							resol 3
							prism_  4, thickShelf,
									-sin(45)*(a/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1))), 	(ABdifference/2+cos(45)*(a/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1)))), 	79,
									-sin(45)*(a/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1))), 	-(ABdifference/2+cos(45)*(a/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1)))), 	79,
									sin(45)*(a/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1))), 		-(ABdifference/2+cos(45)*(a/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1)))),	79,
									sin(45)*(a/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1))), 		(ABdifference/2+cos(45)*(a/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1)))), 	79
						endif
					endif
				else
					if a - b > EPS then
						resol 3
						prism_  4, thickShelf,
								-ABdifference/2, 	-b/2-widthFrame+widthOverhang+widthLeg, 	79,
								ABdifference/2,	 	-b/2-widthFrame+widthOverhang+widthLeg, 	79,
								ABdifference/2,	 	b/2+widthFrame-widthOverhang-widthLeg,		79,
								-ABdifference/2, 	b/2+widthFrame-widthOverhang-widthLeg, 		79
					else
						if b > a then
							resol 3
							prism_  4, thickShelf,
									-a/2+widthFrame+widthOverhang+widthLeg, 	ABdifference/2, 	79,
									-a/2+widthFrame+widthOverhang+widthLeg, 	-ABdifference/2, 	79,
									a/2+widthFrame-widthOverhang-widthLeg, 		-ABdifference/2,	79,
									a/2+widthFrame-widthOverhang-widthLeg, 		ABdifference/2, 	79
						endif
					endif
				endif
			endif

			del 1
		endif
		del top
	else
		addz heightShelf
		add -(a/2-3*widthLeg/2-widthOverhang)*cos(45), -(b/2-3*widthLeg/2-widthOverhang)*sin(45), 0
		block (a/2-3*widthLeg/2-widthOverhang)*cos(45)*2,	(b/2-3*widthLeg/2-widthOverhang)*sin(45)*2,		thickShelf
		del 2
	endif
endif
del top

! ======================================================================
! Drawer
! ======================================================================

if drawer then
	material dmat
	addz zzyzx-thickTabletop-heightDrawer
	if iTypeTableEnd = TABLEEND_ARC then
		if ABdifference< eps then
			add -(A/sqr(2)/2-widthOverhang-widthLeg/2),-(A/sqr(2)/2-widthOverhang-widthLeg/2),	0
			block (A/sqr(2)/2-widthOverhang-widthLeg/2)*2,	(A/sqr(2)/2-widthOverhang-widthLeg/2)*2,		heightDrawer
			addz thickTabletop
			widthDrawer = ((A/sqr(2)/2-widthOverhang-widthLeg/2)*2-((numDrawer+1)*.005))/numDrawer
		else
			if ABdifference <= 0.5 then
				if a - b > EPS then
					resol 3
					prism_  4, heightDrawer,
							- (ABdifference/2+cos(45)*(b/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1)))), 	-sin(45)*(b/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1))),	 	79,
							(ABdifference/2+cos(45)*(b/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1)))),	 	-sin(45)*(b/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1))), 		79,
							(ABdifference/2+cos(45)*(b/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1)))),	 	 sin(45)*(b/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1))),		79,
							-(ABdifference/2+cos(45)*(b/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1)))), 		 sin(45)*(b/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1))), 		79

					add - (ABdifference/2+cos(45)*(b/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1)))),	-sin(45)*(b/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1))),	0
					widthDrawer = ((ABdifference/2+cos(45)*(b/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1))))*2-((numDrawer+1)*.005))/numDrawer
				else
					if b > a then
						resol 3
						prism_  4, heightDrawer,
								-sin(45)*(a/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1))), 	 (ABdifference/2+cos(45)*(a/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1)))), 	79,
								-sin(45)*(a/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1))), 	-(ABdifference/2+cos(45)*(a/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1)))), 	79,
								sin(45)*(a/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1))), 	-(ABdifference/2+cos(45)*(a/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1)))),	79,
								sin(45)*(a/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1))), 	 (ABdifference/2+cos(45)*(a/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1)))), 	79
						add -sin(45)*(a/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1))),		  ABdifference/2+cos(45)*(a/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1))),	thickTabletop
						rotz -90
						widthDrawer = ((ABdifference/2+cos(45)*(a/2-widthLeg-widthOverhang -(widthLeg*(sqr(2)-1))))*2-((numDrawer+1)*.005))/numDrawer
					endif
				endif
			else
				if a - b > EPS then
					resol 3
					prism_  4, heightDrawer,
							-ABdifference/2, 	-b/2-widthFrame+widthOverhang+widthLeg, 	79,
							 ABdifference/2,	-b/2-widthFrame+widthOverhang+widthLeg, 	79,
							 ABdifference/2,	 b/2+widthFrame-widthOverhang-widthLeg,		79,
							-ABdifference/2, 	 b/2+widthFrame-widthOverhang-widthLeg, 		79
					add -ABdifference/2,-b/2-widthFrame+widthOverhang+widthLeg,	thickTabletop
				else
					if b > a then
						resol 3
						prism_  4, heightDrawer,
								-a/2+widthFrame+widthOverhang+widthLeg, 	 ABdifference/2, 	79,
								-a/2+widthFrame+widthOverhang+widthLeg, 	-ABdifference/2, 	79,
								a/2+widthFrame-widthOverhang-widthLeg, 		-ABdifference/2,	79,
								a/2+widthFrame-widthOverhang-widthLeg, 		 ABdifference/2, 	79
						add -a/2+widthFrame+widthOverhang+widthLeg,ABdifference/2,	thickTabletop
						rotz -90
					endif
				endif
				widthDrawer = (ABdifference/2*2-((numDrawer+1)*.005))/numDrawer
			endif
		endif
	else
		if b > a then rotz 90
		add -(max(a,b)/2-3*widthLeg/2-widthOverhang)*cos(45), -(min(a,b)/2-3*widthLeg/2-widthOverhang)*sin(45), 0
		block (max(a,b)/2-3*widthLeg/2-widthOverhang)*cos(45)*2,	(min(a,b)/2-3*widthLeg/2-widthOverhang)*sin(45)*2,		heightDrawer
		add depthLeg/2,	-.024,	.024
		widthDrawer = ((max(a,b)/2-3*widthLeg/2-widthOverhang)*cos(45)*2-((numDrawer+1)*.005))/numDrawer
	endif

	if iStyleLeg = LEG_ROUND then
		widthDrawer = ((max(a,b)/2-3*widthLeg/2-widthOverhang)*cos(45)*2-((numDrawer+1)*.005))/numDrawer
	endif

	add 0.005, -0.02, -thickTabletop
	for i = 1 to numDrawer
		material dmat
		block widthDrawer,.02,heightDrawer

		if gs_knob_type_m <> 0 then
			material gs_knob_mat
			if iStyleLeg <> LEG_ROUND then
				add widthDrawer/2,0,heightDrawer/2
			else
				add widthDrawer/2, 0, heightDrawer/2
			endif
			if gs_knob_type_m <= 3 then CALL "fa_knobtyp" PARAMETERS all
			if gs_knob_type_m = 4 then
				roty 90
				addz 0.05
				CALL "fa_knobtyp" PARAMETERS all
				del 2
			endif
			if gs_knob_type_m >= 5 then
				roty 90
				addz 0.05
				CALL "fa_knobtyp" PARAMETERS all
				del 2
			endif
			del 1
		endif

		ADDX (widthDrawer+0.005)
	next i
	del numDrawer+2
	if b > a then del 1
endif
del top



! ======================================================================
! Table
! ======================================================================
RESOL 3 * gs_resol
material gs_top_mat
addz zzyzx-thickTabletop

if ABdifference < EPS then
   prism_  2, thickTabletop,
		   0, 0, 979,
		   a/2-widthTabletopFrame, 360, 4079
   if widthTabletopFrame > 0 then
	   material gs_topedge_mat
	   prism_  4, thickTabletopFrame,
				0, 0, 979,
				a/2, 360, 4079,
				0, 0, 979,
				a/2-widthTabletopFrame, 360, 4079
   endif
else
	if iTypeTableEnd = TABLEEND_ARC then
		if a - b > EPS then
			prism_  7, thickTabletop,
					-ABdifference/2, 	-b/2+widthTabletopFrame, 	79,
					ABdifference/2, 	-b/2+widthTabletopFrame, 	79,
					ABdifference/2, 	0, 							979,
					0, 					180, 						4079,
					-ABdifference/2, 	b/2-widthTabletopFrame, 	79,
					-ABdifference/2, 	0, 							979,
					0, 					180, 						4079
			if widthTabletopFrame > 0 then
				material gs_topedge_mat
				prism_  16, thickTabletopFrame,
						-ABdifference/2,	-b/2,	79,
						ABdifference/2,		-b/2,	79,
						ABdifference/2,		0,		979,
						0,					180,	4079,
						-ABdifference/2,	b/2,	79,
						-ABdifference/2,	0,		979,
						0,					180,	4079,
						-ABdifference/2,	-b/2,	-1,
						-ABdifference/2,	-b/2+widthTabletopFrame, 79,
						ABdifference/2,		-b/2+widthTabletopFrame, 79,
						ABdifference/2, 	0,		979,
						0, 					180,	4079,
						-ABdifference/2,	b/2-widthTabletopFrame, 79,
						-ABdifference/2, 	0,		979,
						0,					180,	4079,
						-ABdifference/2, -b/2+widthTabletopFrame, -1
			endif
		else
			prism_  7, thickTabletop,
					-a/2+widthTabletopFrame, ABdifference/2, 79,
					-a/2+widthTabletopFrame, -ABdifference/2, 79,
					0, -ABdifference/2, 979,
					0, 180, 4079,
					a/2-widthTabletopFrame, ABdifference/2, 79,
					0, ABdifference/2, 979,
					0, 180, 4079
			if widthTabletopFrame>0 then
				material gs_topedge_mat
				prism_  16, thickTabletopFrame,
					-a/2, ABdifference/2, 79,
					-a/2, -ABdifference/2, 79,
					0, -ABdifference/2, 979,
					0, 180, 4079,
					a/2, ABdifference/2, 79,
					0, ABdifference/2, 979,
					0, 180, 4079,
					-a/2, ABdifference/2, -1,
					-a/2+widthTabletopFrame, ABdifference/2, 79,
					-a/2+widthTabletopFrame, -ABdifference/2, 79,
					0, -ABdifference/2, 979,
					0, 180, 4079,
					a/2-widthTabletopFrame, ABdifference/2, 79,
					0, ABdifference/2, 979,
					0, 180, 4079,
					-a/2+widthTabletopFrame, ABdifference/2, -1
			endif
		endif
	endif

	if iTypeTableEnd = TABLEEND_ELLIP then
		gosub "elliptic_1"
		prism_  n, thickTabletop,
				get(nsp)
		if widthTabletopFrame > 0 then
			material gs_top_mat
			gosub "elliptic_2"
			tube 4, nn, 0,
				 0, 0, 0,
				 -widthTabletopFrame, 0, 0,
				 -widthTabletopFrame, thickTabletopFrame, 0,
				 0, thickTabletopFrame, 0,
				 get(nsp)
		endif
	endif
endif
del 1

! ==============================================================================
! Frame
! ==============================================================================

material fmat
if iStyleLeg = LEG_RUSTIC then frame=1
if frame=0 or ABS(thickFrame)<EPS then end
addz heightFrame

if iStyleLeg = LEG_RUSTIC then
	del 1
	addz depthFrame+dy/2-thickFrame/2
	if abs(a - b)<EPS then
		fho = (a-2*widthOverhang)*sin(45) +2*0.07 -1.5*widthLeg
		eb=0.05
		dx =(b/2-widthOverhang)*sin(45)*2
	else
		if b - a > EPS then
			fho=ABdifference+dx+2*0.07
			rotz 90
		else		! ABdifference <= 0.5
			fho=ABdifference+2*(min(a,b)/2-widthOverhang)*sin(45)+2*0.07
		endif
	endif
	gosub "frame_rustic"
	if not(ABdifference<EPS) and ABdifference > 0.5 and b>a then del 1
	del 1
else
	if ABdifference < EPS then
		rotz 45

		for i=1 to numLeg
			addx a/2-widthLeg/2-widthLeg/2-widthOverhang

			if numLeg=4 and (iStyleFrame = FRAMESTYLE_STRAIGHT or frame=0) then
				addx -((widthLeg/2+widthLeg/2)*(sqr(2)-1))
				rotz 45+90*not(i%2)
			endif

			if iStyleLeg = LEG_ROUND or iStyleLeg = LEG_CONIC then
				gosub "cut_round"
			endif

			if iStyleLeg = LEG_BLOCK then
				gosub "cut_block"
			endif

			if iStyleLeg = LEG_BALUSTER or iStyleLeg = LEG_DESIGN then
				gosub "cut_design"
			endif

			if numLeg=4 and (iStyleFrame = FRAMESTYLE_STRAIGHT or frame=0) then
				del 2
			endif

			del 1
			rotz 360/numLeg

		next i
		del numLeg

		if iStyleFrame = FRAMESTYLE_STRAIGHT then
			if numLeg = 3 then
				put (a/2-widthOverhang-widthLeg/2)*cos(45), (a/2-widthOverhang-widthLeg/2)*sin(45), 79,
					(a/2-widthOverhang-widthLeg/2)*cos(45+120), (a/2-widthOverhang-widthLeg/2)*sin(45+120), 79,
					(a/2-widthOverhang-widthLeg/2)*cos(45+240), (a/2-widthOverhang-widthLeg/2)*sin(45+240), 79,
					(a/2-widthOverhang-widthLeg/2)*cos(45), (a/2-widthOverhang-widthLeg/2)*sin(45), -1
				rotz 75
			else
				put (a/2-widthOverhang-widthLeg/2)*cos(45), (a/2-widthOverhang-widthLeg/2)*sin(45), 79,
					(a/2-widthOverhang-widthLeg/2)*cos(45+90), (a/2-widthOverhang-widthLeg/2)*sin(45+90), 79,
					(a/2-widthOverhang-widthLeg/2)*cos(45+180), (a/2-widthOverhang-widthLeg/2)*sin(45+180), 79,
					(a/2-widthOverhang-widthLeg/2)*cos(45+270), (a/2-widthOverhang-widthLeg/2)*sin(45+270), 79,
					(a/2-widthOverhang-widthLeg/2)*cos(45), (a/2-widthOverhang-widthLeg/2)*sin(45), -1
				rotz 45
			endif
			gosub "frame_straight"
			del 1
		else						! iStyleFrame = FRAMESTYLE_ARC
			prism_  4, thickFrame,
					0, 0, 979,
					A/2-widthOverhang-2*widthLeg/2, 360, 4079,
					0, 0, 979,
					A/2-widthOverhang-2*widthLeg+widthLeg/2, 360, 4079
		endif

		for x=1 to numLeg
			cutend
			if numLeg = 3 and iStyleFrame = FRAMESTYLE_STRAIGHT then cutend
		next x

		del 1
	else					! ABdifference > EPS
		if iTypeTableEnd = TABLEEND_ARC then
			if numLeg = 4 then
				if ABdifference - 0.5 > EPS then
					if a - b > EPS then
						add -ABdifference/2, -b/2+widthOverhang+3*depthLeg/5, 0
					else
						add -a/2 + widthOverhang + 3*depthLeg/5, -ABdifference/2, 0
					endif
				endif

				for x = 1 to 2
					if ABdifference - 0.5 < EPS then
						rotz 180*(x=2)
						if a - b > EPS then
							addx ABdifference/2
							rotz -45
						else
							addy ABdifference/2
							rotz 45
						endif
					endif

					for y = 1 to 2
						if ABdifference - 0.5 < EPS then
							addx min(a,b)/2 - widthLeg - widthOverhang-((widthLeg) * (sqr(2) - 1))
							rotz 45
						endif
						if iStyleLeg = LEG_ROUND or iStyleLeg = LEG_CONIC then
							gosub "cut_round"
						endif
						if iStyleLeg = LEG_BLOCK then
							if ABdifference - 0.5 <= EPS then
								rotz 90*(y%2)
							endif
							gosub "cut_block"
							if ABdifference - 0.5 <= EPS then del 1
						endif
						if iStyleLeg = LEG_BALUSTER or iStyleLeg = LEG_DESIGN then
							gosub "cut_design"
						endif
						if ABdifference - 0.5 > EPS then
							if a - b > EPS then
								addx ABdifference
							else
								addx a - 2 * (widthOverhang + widthLeg/2) - widthLeg
							endif
						else
							del 2
							rotz 90
						endif
					next y
					if ABdifference - 0.5 > EPS then
						del 2
						if a - b > EPS then
							addy b - 2 * (widthOverhang + widthLeg/2) - widthLeg
						else
							addy ABdifference
						endif
					else
						del 2+2
					endif
				next x
				if ABdifference - 0.5 > EPS then del 2+1
			else
				if numLeg = 3 then
					for i=1 to 3
						if a - b > EPS then
							if ABdifference - 0.5 > EPS then
								rotz -90
							else
								rotz 90
							endif
						endif
						if i=1 then add  min(a,b)/2-widthLeg-widthOverhang, 0, 0
						if i=2 then add -mod_1*(min(a,b)/2-(ABdifference - 0.5 < EPS)*widthLeg-widthOverhang), ABdifference/2+mod_2, 0
						if i=3 then add -mod_1*(min(a,b)/2-(ABdifference - 0.5 < EPS)*widthLeg-widthOverhang), -ABdifference/2-mod_2, 0

						if iStyleLeg = LEG_ROUND or iStyleLeg = LEG_CONIC then
							if ABdifference - 0.5 <= EPS then
								rotz -55*(i=3)-55*(i=2)
							endif
							gosub "cut_round"
							if ABdifference - 0.5 <= EPS then del 1
						endif
						if iStyleLeg = LEG_BLOCK then
							if ABdifference - 0.5 <= EPS then
								rotz 55*(i=3)+125*(i=2)
								addy 0.01
							endif
							gosub "cut_block"
							if ABdifference - 0.5 <= EPS then del 2
						endif
						if iStyleLeg = LEG_BALUSTER or iStyleLeg = LEG_DESIGN then
							gosub "cut_design"
						endif
						del 1
						if a - b > EPS then del 1
					next i
				endif
			endif

			rotz 180*(ABdifference - 0.5 > EPS)
			if iStyleFrame =  FRAMESTYLE_ARC then
				if a - b > EPS then
					prism_  16, thickFrame,
							-ABdifference/2, -b/2+widthOverhang+widthLeg/2, 79,
							ABdifference/2, -b/2+widthOverhang+widthLeg/2, 79,
							ABdifference/2, 0, 979,
							0, 180, 4079,
							-ABdifference/2, b/2-widthOverhang-widthLeg/2, 79,
							-ABdifference/2, 0, 979,
							0, 180, 4079,
							-ABdifference/2, -b/2+widthOverhang+widthLeg/2, -1,

							-ABdifference/2, -b/2+widthOverhang+3*widthLeg/2, 79,
							ABdifference/2, -b/2+widthOverhang+3*widthLeg/2, 79,
							ABdifference/2, 0, 979,
							0, 180, 4079,
							-ABdifference/2, b/2-widthOverhang-3*widthLeg/2, 79,
							-ABdifference/2, 0, 979,
							0, 180, 4079,
							-ABdifference/2, -b/2+widthOverhang+3*widthLeg/2, -1
				else						! b - a > EPS
					prism_  16, thickFrame,
							-a/2+widthOverhang+widthLeg/2, ABdifference/2, 79,
							-a/2+widthOverhang+widthLeg/2, -ABdifference/2, 79,
							0, -ABdifference/2, 979,
							0, 180, 4079,
							a/2-widthOverhang-widthLeg/2, ABdifference/2, 79,
							0, ABdifference/2, 979,
							0, 180, 4079,
							-a/2+widthOverhang+widthLeg/2, ABdifference/2, -1,

							-a/2+widthOverhang+3*widthLeg/2, ABdifference/2, 79,
							-a/2+widthOverhang+3*widthLeg/2, -ABdifference/2, 79,
							0, -ABdifference/2, 979,
							0, 180, 4079,
							a/2-widthOverhang-3*widthLeg/2, ABdifference/2, 79,
							0, ABdifference/2, 979,
							0, 180, 4079,
							-a/2+widthOverhang+3*widthLeg/2, ABdifference/2, -1
				endif
			else				! iStyleFrame = FRAMESTYLE_STRAIGHT
				if numLeg = 4 then
					if ABdifference>0.5 then
						if a - b > EPS then
							PUT		-ABdifference/2-widthLeg/2, -b/2+widthOverhang+widthLeg/2, 79,
									ABdifference/2+widthLeg/2, -b/2+widthOverhang+widthLeg/2, 79,
									ABdifference/2+widthLeg/2, b/2-widthOverhang-widthLeg/2, 79,
									-ABdifference/2-widthLeg/2, b/2-widthOverhang-widthLeg/2, 79,
									-ABdifference/2-widthLeg/2, -b/2+widthOverhang+widthLeg/2, -1
						else					! b - a > EPS
							PUT		-a/2+widthOverhang+widthLeg/2, ABdifference/2+widthLeg/2, 79,
									-a/2+widthOverhang+widthLeg/2, -ABdifference/2-widthLeg/2, 79,
									a/2-widthOverhang-widthLeg/2, -ABdifference/2-widthLeg/2, 79,
									a/2-widthOverhang-widthLeg/2, ABdifference/2+widthLeg/2, 79,
									-a/2+widthOverhang+widthLeg/2, ABdifference/2+widthLeg/2, -1
						endif
					else
						if a - b > EPS then
							PUT		-ABdifference/2-(b/2-widthOverhang-widthLeg/2)*sin(45), -(b/2-widthOverhang-widthLeg/2)*sin(45), 79,
									ABdifference/2+(b/2-widthOverhang-widthLeg/2)*sin(45), -(b/2-widthOverhang-widthLeg/2)*sin(45), 79,
									ABdifference/2+(b/2-widthOverhang-widthLeg/2)*sin(45), (b/2-widthOverhang-widthLeg/2)*sin(45), 79,
									-ABdifference/2-(b/2-widthOverhang-widthLeg/2)*sin(45), (b/2-widthOverhang-widthLeg/2)*sin(45), 79,
									-ABdifference/2-(b/2-widthOverhang-widthLeg/2)*sin(45), -(b/2-widthOverhang-widthLeg/2)*sin(45), -1
						else					! b - a > EPS
							PUT		-(a/2-widthOverhang-widthLeg/2)*sin(45), ABdifference/2+(a/2-widthOverhang-widthLeg/2)*sin(45), 79,
									-(a/2-widthOverhang-widthLeg/2)*sin(45), -ABdifference/2-(a/2-widthOverhang-widthLeg/2)*sin(45), 79,
									(a/2-widthOverhang-widthLeg/2)*sin(45), -ABdifference/2-(a/2-widthOverhang-widthLeg/2)*sin(45), 79,
									(a/2-widthOverhang-widthLeg/2)*sin(45), ABdifference/2+(a/2-widthOverhang-widthLeg/2)*sin(45), 79,
									-(a/2-widthOverhang-widthLeg/2)*sin(45), ABdifference/2+(a/2-widthOverhang-widthLeg/2)*sin(45), -1
						endif
					endif
				else
					if numLeg = 3 then
						if ABdifference>0.5 then
							PUT		min(a,b)/2-widthLeg-widthOverhang, 0, 79,
									-(min(a,b)/2-widthLeg-widthOverhang), ABdifference/2+widthLeg/2, 79,
									-(min(a,b)/2-widthLeg-widthOverhang), -ABdifference/2-widthLeg/2, 79,
									min(a,b)/2-widthLeg-widthOverhang, 0, -1
						else
							mod_2 = SIN(60)*(min(a,b)/2-widthLeg/2-widthOverhang)
							if a - b > EPS then

								PUT		-widthLeg/4, min(a,b)/2-widthLeg-widthOverhang, 79,
										 ABdifference/2+mod_2, -mod_1*(min(a,b)/2-widthOverhang), 79,
										-ABdifference/2-mod_2, -mod_1*(min(a,b)/2-widthOverhang), 79,
										-widthLeg/4, min(a,b)/2-widthLeg-widthOverhang, -1
							else
								PUT		min(a,b)/2-widthLeg-widthOverhang, widthLeg/4, 79,
										-mod_1*(min(a,b)/2-widthOverhang), ABdifference/2+mod_2, 79,
										-mod_1*(min(a,b)/2-widthOverhang), -ABdifference/2-mod_2, 79,
										min(a,b)/2-widthLeg-widthOverhang, widthLeg/4, -1
							endif
						endif
					endif
				endif
			endif
			del 1

			if iStyleFrame = FRAMESTYLE_STRAIGHT then
				if numLeg=3 and a - b > EPS and ABdifference > 0.5 then
					rotz -90
				endif
				gosub "frame_straight"
				if numLeg=3 and a - b > EPS and ABdifference > 0.5 then del 1
			endif

			for x=1 to numLeg
				cutend
				if numLeg = 3 and iStyleFrame = FRAMESTYLE_STRAIGHT then cutend
			next x
		else			! iTypeTableEnd = TABLEEND_ELLIP
			! --- cut ---
			if iStyleLeg = LEG_ROUND or iStyleLeg = LEG_CONIC or iStyleLeg = LEG_BLOCK then
				for i=1 to numLeg
					if iStyleLeg = LEG_BALUSTER or iStyleLeg = LEG_DESIGN then ellxy = widthLeg/2/2
					add (a/2 - 5 * widthLeg/4 - widthOverhang - ellxy) * cos(45 + (i - 1) * (360/numLeg)),
						(b/2 - 5 * widthLeg/4 - widthOverhang - ellxy) * sin(45 + (i - 1) * (360/numLeg)), 0
					if iStyleLeg = LEG_ROUND or iStyleLeg = LEG_CONIC then
						gosub "cut_round"
					endif
					if iStyleLeg = LEG_BLOCK then
						if ABdifference < EPS then
							if numLeg = 4 then rotz 45*(i%2)-45*not(i%2)
						else
							if numLeg = 3 then
								rotz 45*(i=1)+105*(i=3)-15*(i=2)
							else
								rotz 90
							endif
						endif
						gosub "cut_block"
						if ABdifference < EPS then
							if numLeg = 4 then del 1
						else
							del 1
						endif
					endif
					del 1
				next i
			endif

			ellxy=0
			if iStyleLeg = LEG_BALUSTER or iStyleLeg = LEG_DESIGN then
				ellxy=widthLeg/2/2
				for i=1 to numLeg
					add (a/2 - 5 * widthLeg/4 - widthOverhang - ellxy) * cos(45 + (i - 1) * (360/numLeg)),
						(b/2 - 5 * widthLeg/4 - widthOverhang - ellxy) * sin(45 + (i - 1) * (360/numLeg)), 0
					gosub "cut_design"
					del 1
				next i
			endif
			! --- cutend ---

			if iStyleFrame = FRAMESTYLE_STRAIGHT then
				if numLeg = 4 then
					put (a/2-5*widthLeg/4-widthOverhang-ellxy)*cos(45)+depthFrame/2, (b/2-5*widthLeg/4-widthOverhang-ellxy)*sin(45)+depthFrame/2, 79,
						(a/2-5*widthLeg/4-widthOverhang-ellxy)*cos(45+90)-depthFrame/2, (b/2-5*widthLeg/4-widthOverhang-ellxy)*sin(45+90)+depthFrame/2, 79,
						(a/2-5*widthLeg/4-widthOverhang-ellxy)*cos(45+180)-depthFrame/2, (b/2-5*widthLeg/4-widthOverhang-ellxy)*sin(45+180)-depthFrame/2, 79,
						(a/2-5*widthLeg/4-widthOverhang-ellxy)*cos(45+270)+depthFrame/2, (b/2-5*widthLeg/4-widthOverhang-ellxy)*sin(45+270)-depthFrame/2, 79,
						(a/2-5*widthLeg/4-widthOverhang-ellxy)*cos(45)+depthFrame/2, (b/2-5*widthLeg/4-widthOverhang-ellxy)*sin(45)+depthFrame/2, -1
				else		! if numLeg = 3
					ellxy = 0
					if iStyleLeg = LEG_BALUSTER or iStyleLeg = LEG_DESIGN then ellxy = widthLeg/4
					put  (a/2-5*widthLeg/4-widthOverhang-ellxy)*cos(45),     (b/2-5*widthLeg/4-widthOverhang-ellxy)*sin(45), 79,
						 (a/2-5*widthLeg/4-widthOverhang-ellxy)*cos(45+120), (b/2-5*widthLeg/4-widthOverhang-ellxy)*sin(45+120), 79,
						 (a/2-5*widthLeg/4-widthOverhang-ellxy)*cos(45+240), (b/2-5*widthLeg/4-widthOverhang-ellxy)*sin(45+240), 79,
						 (a/2-5*widthLeg/4-widthOverhang-ellxy)*cos(45),     (b/2-5*widthLeg/4-widthOverhang-ellxy)*sin(45), -1
				endif
				gosub "frame_straight"
			else				! iStyleFrame =  FRAMESTYLE_ARC
				gosub 20
				tube 4, nf, 0,
					 -widthLeg/4-widthLeg/4, 0, 0,
					 -widthLeg/4-widthLeg/4, thickFrame, 0,
					 widthLeg/4+widthLeg/4, thickFrame, 0,
					 widthLeg/4+widthLeg/4, 0, 0,
					 get(nsp)
			endif

			for x=1 to numLeg
				cutend
				if numLeg = 3 and iStyleFrame = FRAMESTYLE_STRAIGHT then cutend
			next x

		endif
	endif
endif

if iStyleLeg <> LEG_RUSTIC then del 1

end


! ==============================================================================
! Subroutines
! ==============================================================================


! ------------------------------------------------------------------------------
"elliptic_1":
! ------------------------------------------------------------------------------
	n=0
	for x=0 to 360 step 7.5
		n=n+1
		put (a/2-widthTabletopFrame)*cos(x), (b/2-widthTabletopFrame)*sin(x), 79
	next x
	return

! ------------------------------------------------------------------------------
"elliptic_2":
! ------------------------------------------------------------------------------
	nn=0
	for x=0 to 375 step 7.5
		nn=nn+1
		put (a/2-widthTabletopFrame)*cos(x), (b/2-widthTabletopFrame)*sin(x), 0, 0
	next x
	return

20:
	nf=0
	for x=0 to 375 step 7.5
		nf=nf+1
		put (a/2-5*widthLeg/4-widthOverhang-ellxy)*cos(x), (b/2-5*widthLeg/4-widthOverhang-ellxy)*sin(x), 0, 0
	next x
	return

! ------------------------------------------------------------------------------
"rustic":
! ------------------------------------------------------------------------------
	prism_  25, widthLeg,
			0, 0, 79,
			0, 4*eh, 79,
			2*eh, -90, 2079,
			2*eh, 90, 2079,
			4*eb, 12*eh, 79,
			2*eh, 90, 2079,
			2*eh, -90, 2079,
			0, 20*eh, 79,
			20*eb, 20*eh, 79,
			20*eb, 16*eh, 79,
			2*eh, -90, 2079,
			2*eh, 90, 2079,
			16*eb, 8*eh, 79,
			2*eh, 90, 2079,
			2*eh, -90, 2079,
			20*eb, 0, 79,
			12*eb, 0, 79,
			10*eb, 0, 979,
			2*eb, 180, 4079,
			0, 0, -1,
			10*eb-eb/2.5, 10*eh-thickFrame/2/dy, 79,
			10*eb+eb/2.5, 10*eh-thickFrame/2/dy, 79,
			10*eb+eb/2.5, 10*eh+thickFrame/2/dy, 79,
			10*eb-eb/2.5, 10*eh+thickFrame/2/dy, 79,
			10*eb-eb/2.5, 10*eh-thickFrame/2/dy, -1
	add -0.03/dx, -0.03/dy, -0.01
	prism_  7, 0.02+widthLeg,
			0, 0, 15,
			dt, 0, 15,
			dt, 0.02/dy, 15,
			dt-0.01/dx, 0.03/dy, 15,
			0.01/dx, 0.03/dy, 15,
			0, 0.02/dy, 15,
			0, 0, -1
	del 1
	return

! ------------------------------------------------------------------------------
"frame_rustic":
! ------------------------------------------------------------------------------
	material gs_leg_mat
	prism_  15, thickFrame,
			-fho/2, -eb/2.5*dx, 15,
			fho/2, -eb/2.5*dx, 15,
			fho/2, eb/2.5*dx, 15,
			-fho/2, eb/2.5*dx, 15,
			-fho/2, -eb/2.5*dx, -1,
			-fho/2+0.04, -eb/5*dx, 15,
			-fho/2+0.07, -eb/5*dx, 15,
			-fho/2+0.07, eb/5*dx, 15,
			-fho/2+0.04, eb/5*dx, 15,
			-fho/2+0.04, -eb/5*dx, -1,
			fho/2-0.07, -eb/5*dx, 15,
			fho/2-0.04, -eb/5*dx, 15,
			fho/2-0.04, eb/5*dx, 15,
			fho/2-0.07, eb/5*dx, 15,
			fho/2-0.07, -eb/5*dx, -1
	add -0.02, 0, -0.03
	prism_  4, 2*0.03+thickFrame,
			-fho/2+0.04, -eb/5*dx, 15,
			-fho/2+0.07, -eb/5*dx, 15,
			-fho/2+0.07, eb/5*dx, 15,
			-fho/2+0.04, eb/5*dx, 15
	addx 0.02*2
	prism_  4, 2*0.03+thickFrame,
			fho/2-0.07, -eb/5*dx, 15,
			fho/2-0.04, -eb/5*dx, 15,
			fho/2-0.04, eb/5*dx, 15,
			fho/2-0.07, eb/5*dx, 15
	del 2
	return


! ------------------------------------------------------------------------------
"solidLeg":
! ------------------------------------------------------------------------------
	block widthLeg, depthLeg, zzyzx-thickTabletop
	return

! ------------------------------------------------------------------------------
"folding":
! ------------------------------------------------------------------------------
	alfa = -(90-ATN (zzyzx/dx))
	legHeight = zzyzx

	rotx 180
	cutplane
	del 1

	addz legHeight-thickTabletop
	cutplane
	del 1

	gosub "foldingLeg"

	rotz 180
	addx - widthLeg
	addy -dx
	gosub "foldingLeg"
	del 3

	cutend
	cutend
return

! ------------------------------------------------------------------------------
"foldingLeg":
! ------------------------------------------------------------------------------
	beta = ATN (depthLeg/ cos(alfa)/zzyzx)
	rotx alfa+beta
	block widthLeg, depthLeg, dx/abs(sin(alfa))+abs(tan(alfa))*depthLeg
	del 1
return

! ------------------------------------------------------------------------------
"baluster":
! ------------------------------------------------------------------------------
	roty -90
	eh=0.05*(zzyzx-thickTabletop-0.07-hh)
	revolve 22, 360, 3,
			0, 0.02, 0,
			2*eh, 0.02, 0,
			3*eh, 0.023, 1,
			4*eh, 0.028, 1,
			5*eh, 0.031, 1,
			6*eh, 0.033, 1,
			7*eh, 0.033, 1,
			8*eh, 0.03, 1,
			9*eh, 0.026, 1,
			10*eh, 0.018, 0,
			10.5*eh, 0.0235, 1,
			11*eh, 0.026, 1,
			11.5*eh, 0.0235, 1,
			12*eh, 0.018, 0,
			13*eh, 0.026, 1,
			14*eh, 0.03, 1,
			15*eh, 0.033, 1,
			16*eh, 0.033, 1,
			17*eh, 0.031, 1,
			18*eh, 0.028, 1,
			19*eh, 0.023, 1,
			20*eh, 0.02, 0
	del 1
	add -widthLeg/2, -widthLeg/2, (zzyzx-thickTabletop-0.07-hh)
	block widthLeg, widthLeg, 0.07
	del 1
	return

! ------------------------------------------------------------------------------
"design":
! ------------------------------------------------------------------------------
	eh=0.05*(zzyzx-thickTabletop-0.07)
	if (x=2 or x=4) and ABdifference<EPS and numLeg<>3 then rotz 90
	if (x=1 or x=3) and ABdifference<EPS and numLeg<>3 and iStyleFrame =  FRAMESTYLE_ARC then rotz 90
	if numLeg=3 then rotz 90
	if x=2 and ABdifference>EPS then rotz 180
	if ABdifference>EPS and iTypeTableEnd = TABLEEND_ARC and ABdifference<=0.5 then rotz -90
	if ABdifference>EPS and iTypeTableEnd = TABLEEND_ARC and ABdifference<=0.5 and (x=1 or x=3) then rotz 180
	if ABdifference>EPS and iTypeTableEnd = TABLEEND_ARC and ABdifference<=0.5 and (x=1 or x=3) and iStyleFrame = FRAMESTYLE_STRAIGHT then rotz -90
	if ABdifference>EPS and iTypeTableEnd = TABLEEND_ELLIP and x=1 then rotz 180

	sweep   4, 20, 0, 1.025, 1+2+4+16+32,
			-widthLeg/4, -widthLeg/4, 0,
			widthLeg/4, -widthLeg/4, 0,
			widthLeg/4, widthLeg/4, 0,
			-widthLeg/4, widthLeg/4, 0,

			0, 0.00, -20*eh,
			0, 0.00, -19*eh,
			0, 0.00, -18*eh,
			0, 0.005, -17*eh,
			0, 0.009, -16*eh,
			0, 0.013, -15*eh,
			0, 0.015, -14*eh,
			0, 0.013, -13*eh,
			0, 0.009, -12*eh,
			0, 0.000, -11*eh,
			0, -0.009, -10*eh,
			0, -0.018, -9*eh,
			0, -0.023, -8*eh,
			0, -0.025, -7*eh,
			0, -0.023, -6*eh,
			0, -0.018, -5*eh,
			0, -0.009, -4*eh,
			0, -0.005, -3*eh,
			0, 0.00, -2*eh,
			0, 0, 0
	if (x=2 or x=4) and ABdifference<EPS and numLeg<>3 then del 1
	if (x=1 or x=3) and ABdifference<EPS and numLeg<>3 and iStyleFrame =  FRAMESTYLE_ARC then del 1
	if numLeg=3 then del 1
	if x=2 and ABdifference>EPS then del 1
	if ABdifference>EPS and iTypeTableEnd = TABLEEND_ARC and ABdifference<=0.5 then del 1
	if ABdifference>EPS and iTypeTableEnd = TABLEEND_ARC and ABdifference<=0.5 and (x=1 or x=3) then del 1
	if ABdifference>EPS and iTypeTableEnd = TABLEEND_ARC and ABdifference<=0.5 and (x=1 or x=3) and iStyleFrame = FRAMESTYLE_STRAIGHT then del 1
	if ABdifference>EPS and iTypeTableEnd = TABLEEND_ELLIP and x=1 then del 1

	add -widthLeg/2, -widthLeg/2, (zzyzx-thickTabletop-0.07-hh)
	block 2*widthLeg/2, 2*widthLeg/2, 0.07
	del 1
	return

! ------------------------------------------------------------------------------
"cut_round":
! ------------------------------------------------------------------------------
	if ABdifference-0.5 >= EPS and iTypeTableEnd = TABLEEND_ARC and i <> 1 and numLeg = 3 then
		addx widthLeg
	endif
	cutpolya 2, 1, 0,
			0, 0, 915+64,
			widthLeg/2, 360, 4015
	if ABdifference-0.5 >= EPS and iTypeTableEnd = TABLEEND_ARC and i <> 1 and numLeg = 3 then del 1
	if numLeg = 3 and iStyleFrame = FRAMESTYLE_STRAIGHT then
		if i = 1 or ABdifference < EPS then
			roty 90
			xxx1 = 0
			xxx2 = -thickFrame
			if ABdifference >= EPS and iTypeTableEnd = TABLEEND_ELLIP then rotx -55
		else
			if i = 2 or (ABdifference - 0.5 >= EPS and iTypeTableEnd <> TABLEEND_ELLIP) then
				roty -90
				xxx1 = thickFrame
				xxx2 = 0
				if ABdifference - 0.5 >= EPS and iTypeTableEnd = TABLEEND_ARC then
					addz -widthLeg
					rotx 30*(i=3)-30*(i=2)
				endif
			else
				roty 90
				xxx1 = 0
				xxx2 = -thickFrame
				rotx 55
			endif
		endif
		cutpolya 4, 1, 0.0001,
				 xxx1,  thickFrame, 15,
				 xxx1, -thickFrame, 15,
				 xxx2, -thickFrame, 15,
				 xxx2,  thickFrame, 15
		if i = 1 or ABdifference < EPS then
			if ABdifference >= EPS and iTypeTableEnd = TABLEEND_ELLIP then del 1
		else
			if i = 2 or (ABdifference - 0.5 >= EPS and iTypeTableEnd <> TABLEEND_ELLIP) then
				if ABdifference - 0.5 >= EPS and iTypeTableEnd = TABLEEND_ARC then del 2
			else
				del 1
			endif
		endif
		del 1
	endif
return


! ------------------------------------------------------------------------------
"cut_block":
! ------------------------------------------------------------------------------

	if numLeg = 3 then
		if ABdifference-0.5 >= EPS and iTypeTableEnd = TABLEEND_ARC and i <> 1 then
			addx widthLeg
		endif
	endif
	cutpolya 4, 1, 0,
			-widthLeg/2, -depthLeg/2, 15,
			-widthLeg/2,  depthLeg/2, 15,
			 widthLeg/2,  depthLeg/2, 15,
			 widthLeg/2, -depthLeg/2, 15
	if numLeg = 3 then
		if ABdifference-0.5 >= EPS and iTypeTableEnd = TABLEEND_ARC and i <> 1 and numLeg = 3 then del 1
	endif
	if numLeg = 3 and iStyleFrame = FRAMESTYLE_STRAIGHT then
		if i = 1 or ABdifference < EPS then
			roty 90
			xxx1 = 0
			xxx2 = -thickFrame
		else
			if i = 2 and ABdifference-0.5 < EPS and iTypeTableEnd = TABLEEND_ARC then
				roty 90
				xxx1 = 0
				xxx2 = -thickFrame
			else
				roty -90
				xxx1 = thickFrame
				xxx2 = 0
				if ABdifference-0.5 >= EPS and iTypeTableEnd = TABLEEND_ARC then
					addz -widthLeg
				endif
			endif
		endif
		cutpolya 4, 1, 0.0001,
				 xxx1,  thickFrame, 15,
				 xxx1, -thickFrame, 15,
				 xxx2, -thickFrame, 15,
				 xxx2,  thickFrame, 15
		if ABdifference-0.5 >= EPS and iTypeTableEnd = TABLEEND_ARC and i<>1 then del 1
		del 1
	endif
return


! ------------------------------------------------------------------------------
"cut_design":
! ------------------------------------------------------------------------------
	if ABdifference-0.5 >= EPS then
		if iTypeTableEnd = TABLEEND_ARC and i <> 1 and numLeg = 3 then
			addx widthLeg
		endif
	else
		if ABdifference < EPS then
			rotz 45
		else
			rotz (30*(i=2)+150*(i=3)+90*(i=1))*(iStyleLeg <> LEG_BALUSTER)*(iTypeTableEnd = TABLEEND_ARC)
		endif
	endif
	cutpolya 4, 1, 0,
			-widthLeg/2, -widthLeg/2, 15,
			-widthLeg/2, widthLeg/2, 15,
			widthLeg/2, widthLeg/2, 15,
			widthLeg/2, -widthLeg/2, 15
	if ABdifference-0.5 >= EPS then
		if iTypeTableEnd = TABLEEND_ARC and i <> 1 and numLeg = 3 then del 1
	else
		del 1
	endif
	if numLeg = 3 and iStyleFrame = FRAMESTYLE_STRAIGHT then
		if i = 1 or ABdifference < EPS then
			roty 90
			xxx1 = 0
			xxx2 = -thickFrame
			if ABdifference >= EPS then
				if iTypeTableEnd = TABLEEND_ELLIP then
					rotx -45
				endif
			endif
		else
			if i = 2 then
				roty -90
				xxx1 = thickFrame
				xxx2 = 0
				if iTypeTableEnd = TABLEEND_ELLIP then rotx -20
				if iTypeTableEnd = TABLEEND_ARC then
					if ABdifference - 0.5 < EPS then
						rotx -90
					else
						rotx -40
						addz -depthLeg/2
					endif
				endif
			else
				roty 90
				xxx1 = 0
				xxx2 = -thickFrame
				if iTypeTableEnd = TABLEEND_ELLIP then rotx 75
				if iTypeTableEnd = TABLEEND_ARC then
					if ABdifference - 0.5 < EPS then
						rotx 90
					else
						rotx 140
						addz -depthLeg/2
					endif
				endif
			endif
		endif
		cutpolya 4, 1, 0.0001,
				 xxx1,  thickFrame, 15,
				 xxx1, -thickFrame, 15,
				 xxx2, -thickFrame, 15,
				 xxx2,  thickFrame, 15
		del 1
		if i = 1 and ABdifference >= EPS and iTypeTableEnd = TABLEEND_ELLIP then del 1
		if i <> 1 and ABdifference >= EPS and iTypeTableEnd = TABLEEND_ELLIP then del 1
		if i <> 1 and ABdifference >= EPS and iTypeTableEnd = TABLEEND_ARC then del 1
		if i <> 1 and ABdifference - 0.5 >= EPS and iTypeTableEnd = TABLEEND_ARC then del 1
	endif
return


! ------------------------------------------------------------------------------
"frame_straight":
! ------------------------------------------------------------------------------

	dim origPoly[][3]
	for i = 1 to NSP/3
		origPoly[i][1] = get(1)
		origPoly[i][2] = get(1)
		origPoly[i][3] = get(1)
	next i

	! --- Prepare addon and starting containers --------------------------------

	ch = initaddonscope ("PolyOperations", "", "")

	preparefunction ch, "CreateContainer", "mySourceContainer", ""
	preparefunction ch, "CreateContainer", "myDestinationContainer", ""

	preparefunction ch, "SetSourceContainer",       "mySourceContainer", ""
	preparefunction ch, "SetDestinationContainer",  "myDestinationContainer", ""

	! --- Store original polygon -----------------------------------------------

	nVertices = 0
	nContours = 0
	dim vertArr[][3]
	dim inhEdgeInfos[]
	dim contArr[]
	defaultInhEdgeInfo = 0

	for i = 1 to vardim1(origPoly)
		vertArr[i][1]	= origPoly[i][1]
		vertArr[i][2]	= origPoly[i][2]
		vertArr[i][3]	= 0

		nVertices		= nVertices + 1

		inhEdgeInfos[i] = 0

		if origPoly[i][3] < -EPS then
			nContours = nContours + 1
			contArr[nContours] = nVertices
		endif
	next i

	nContours = max(nContours, 1)		! if polygon was not closed

	preparefunction ch, "Store", "OrigPoly", nVertices, nContours, vertArr, contArr, defaultInhEdgeInfo, inhEdgeInfos

	! --- Offset poly ----------------------------------------------------------

	for ijk = 1 to nContours
		dim srcPolyIDArr[]
		numPoly = callfunction(ch, "GetSourcePolygons", "", srcPolyIDArr)

		if ijk = 1 then
			iSign = -1
		else
			iSign = 1
		endif
		preparefunction ch, "OffsetParams", "", ijk, iSign * depthFrame

		dim tempResPolyIDArr[]
		for iii = 1 to numPoly
			tempNumPoly = callfunction(ch, "ResizeContour", srcPolyIDArr[iii], tempResPolyIDArr)
		next iii

		if ijk <> nContours then
			preparefunction ch, "DeleteContainer", prevSourceContainer, ""
			preparefunction ch, "SetSourceContainer", lastDestContainer, ""

			prevSourceContainer = lastDestContainer

			nCont = nCont + 1
			lastDestContainer = "Container " + STR(nCont, 1, 0)
			preparefunction ch, "CreateContainer",		lastDestContainer, ""
			preparefunction ch, "SetDestinationContainer",	lastDestContainer, ""
		endif
	next ijk


	! --- Get result polygons --------------------------------------------------

	dim resPolyIDArr[]
	numPoly = callfunction(ch, "GetDestinationPolygons", "", resPolyIDArr)

	dim resultPoly[][3]
	for iii = 1 to numPoly
		polygonID = resPolyIDArr[iii]
		_status = 15
		gosub "getGDLpolygonFromAddon"

		actIdx = vardim1(resultPoly)
		ijk = 1
		for ii = 1 to NSP step 3
			resultPoly[actIdx + ijk][1] = GET(1)
			resultPoly[actIdx + ijk][2] = GET(1)
			resultPoly[actIdx + ijk][3] = GET(1)

			ijk = ijk +1
		next ii
	next iii

	! --- Close addon ----------------------------------------------------------

	closeaddonscope ch

	! Draw resulting prism ------------------------------------------------------

	for i = 1 to vardim1(origPoly)
		put origPoly[i][1], origPoly[i][2], origPoly[i][3]
	next i
	if abs(origPoly[vardim1(origPoly)][3] + 1) > EPS then
		put origPoly[1][1], origPoly[1][2], -1
	endif

	if vardim1(resultPoly) > EPS then
		for i = 1 to vardim1(resultPoly)
			put resultPoly[i][1], resultPoly[i][2], resultPoly[i][3]
		next i
		if abs(resultPoly[vardim1(resultPoly)][3] + 1) > EPS then
			put resultPoly[1][1], resultPoly[1][2], -1
		endif
	endif

	prism_ NSP/3, thickFrame,
			get(NSP)

return


! ------------------------------------------------------------------------------
1000:
! ------------------------------------------------------------------------------
	roty 45
	gosub 5000
	del 1
return


! ------------------------------------------------------------------------------
2000:
! ------------------------------------------------------------------------------
	gosub 5000
return


! ------------------------------------------------------------------------------
5000:
! ------------------------------------------------------------------------------
	vert 0, 0, 0
	vert 1, 0, 0
	vert 0, 1, 0
	vert 0, 0, 1

	coor 2, -1, -2, -3, -4

	base
	body -1
	return
return


! ==============================================================================
! Get GDL Polygon
! ------------------------------------------------------------------------------
! Input variables:
!	polygonID:			Polygon index
!   _status:			default status
!
! Returned variables:
!	GDL stack:			GDL polygon
! ==============================================================================
"getGDLpolygonFromAddon":

	dim resVertices[]
	numVertices = callfunction(ch, "GETVERTICES", polygonID, resVertices)
	numVertices = numVertices / 3

	dim contArr[]
	numContours = callfunction(ch, "GETCONTOURENDS", polygonID, contArr)

	for contIndex = 1 to numContours

		if contIndex = 1 then
			begIdx = 0
		else
			begIdx = contArr[contIndex] - 1
		endif
		if contIndex = numContours then
			endIdx = numVertices - 1
		else
			endIdx = contArr[contIndex + 1] - 2
		endif

		bClosed = 0
		bStartWithLast = 0

		index = endIdx * 3
		ac2gdl_lpx = resVertices[index + 1]
		ac2gdl_lpy = resVertices[index + 2]
		ac2gdl_lpa = resVertices[index + 3]

		if abs(ac2gdl_lpa) > EPS then
			put ac2gdl_lpx, ac2gdl_lpy, _status
			bStartWithLast = 1
		endif

		for vertIndex = begIdx to endIdx
			index = vertIndex * 3
			ac2gdl_px = resVertices[index + 1]
			ac2gdl_py = resVertices[index + 2]
			ac2gdl_pa = resVertices[index + 3]

			if vertIndex = begIdx then
				if bStartWithLast then
					ac2gdl_spx = ac2gdl_lpx
					ac2gdl_spy = ac2gdl_lpy
				else
					ac2gdl_spx = ac2gdl_px
					ac2gdl_spy = ac2gdl_py
				endif
			endif

			if abs(ac2gdl_lpa) > EPS then
				ac2gdl_mx = (ac2gdl_px + ac2gdl_lpx) / 2
				ac2gdl_my = (ac2gdl_py + ac2gdl_lpy) / 2
				ac2gdl_ratio = 1 / 2 / tan (ac2gdl_lpa / 2)

				ac2gdl_cx = ac2gdl_mx - ac2gdl_ratio * (ac2gdl_py - ac2gdl_lpy)	! Arc center
				ac2gdl_cy = ac2gdl_my + ac2gdl_ratio * (ac2gdl_px - ac2gdl_lpx)

				put ac2gdl_cx,	ac2gdl_cy,	900 + _status,
					0,			ac2gdl_lpa,	400 + _status
			endif

			if vertIndex > begIdx & abs(ac2gdl_spx - ac2gdl_px) < EPS & abs(ac2gdl_spy - ac2gdl_py) < EPS then
				put ac2gdl_px, ac2gdl_py, -1
				bClosed = 1
			else
				if vertIndex < endIdx | not(bStartWithLast) then
					put ac2gdl_px, ac2gdl_py, _status
				endif
			endif

			ac2gdl_lpx = ac2gdl_px
			ac2gdl_lpy = ac2gdl_py
			ac2gdl_lpa = ac2gdl_pa
		next vertIndex

		if not(bClosed) & numContours > 1 then	! Close the polygon if it has holes
			put ac2gdl_spx, ac2gdl_spy, -1
		endif

	next contIndex
return
]]>
</Script_3D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_2D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
unID = 1
hotspot2 0, 0,	unID : unID = unID + 1
hotspot2 -a/2, 0,	unID : unID = unID + 1
hotspot2 a/2, 0,	unID : unID = unID + 1
hotspot2 0, b/2,	unID : unID = unID + 1
hotspot2 0, -b/2,	unID : unID = unID + 1

! Minimal Space
reqBMinSpace = 0
call "fa_minimalspace" parameters all MSType = 0, unID = 3000,
							returned_parameters reqBMinSpace,
												MSFillType,
												MSFillPen,
												MSFillBackPen,
												MSContLineType,
												MSContLinePen

if reqBMinSpace <> 0 then
	unID = 3000
	hotspot2 -a/2-MSFront,	0,	unID : unID = unID + 1
	hotspot2 a/2+MSFront,	0,	unID : unID = unID + 1
	hotspot2 0,				b/2+MSFront,	unID : unID = unID + 1
	hotspot2 0,				-b/2-MSFront,	unID : unID = unID + 1

	FILL MSFillType
	pen MSContLinePen
	line_type MSContLineType

	if ABdifference<EPS then		!! A=B
	POLY2_B 3, 1+2+4+64,MSFillPen,MSFillBackPen,
				0, 0,					900,
				a/2+MSFront,	360,	4001,
				a/2,			360,	4000
	endif

	if ABdifference>EPS and iTypeTableEnd = TABLEEND_ARC then	!!a<>b
		if a>b then
			hotspot2 -ABdifference/2,	-b/2-MSFront,	unID : unID = unID + 1
			hotspot2 ABdifference/2,	-b/2-MSFront,	unID : unID = unID + 1
			hotspot2 ABdifference/2,	b/2+MSFront,	unID : unID = unID + 1
			hotspot2 -ABdifference/2,	b/2+MSFront,	unID : unID = unID + 1

			POLY2_B 16, 1+2+4+64,MSFillPen,MSFillBackPen,
					-ABdifference/2,	-b/2-MSFront,	1,
					ABdifference/2,		-b/2-MSFront,	1,
					ABdifference/2,		0,				900,
					b/2+MSFront,		180,			4001,
					-ABdifference/2,	b/2+MSFront,	1,
					-ABdifference/2,	0,				900,
					b/2+MSFront,		180,			4001,
					-ABdifference/2,	-b/2-MSFront,	-1,
					-ABdifference/2,	-b/2,			0,
					ABdifference/2,		-b/2,			0,
					ABdifference/2,		0,				900,
					b/2,				180,			4000,
					-ABdifference/2,	b/2,			0,
					-ABdifference/2,	0,				900,
					b/2,				180,			4000,
					-ABdifference/2,	-b/2,			-1
		endif
		if a<b then
			hotspot2 -a/2-MSFront,	ABdifference/2,	unID : unID = unID + 1
			hotspot2 -a/2-MSFront,	-ABdifference/2,	unID : unID = unID + 1
			hotspot2 a/2+MSFront,	ABdifference/2,	unID : unID = unID + 1
			hotspot2 a/2+MSFront,	-ABdifference/2,	unID : unID = unID + 1

			POLY2_B 16, 1+2+4+64,MSFillPen,MSFillBackPen,
					-a/2-MSFront,	ABdifference/2,		1,
					-a/2-MSFront,	-ABdifference/2,	1,
					0,				-ABdifference/2,	900,
					a/2+MSFront,	180,				4001,
					a/2+MSFront,	ABdifference/2,		1,
					0,				ABdifference/2,		900,
					a/2+MSFront,	180,				4001,
					-a/2-MSFront,	ABdifference/2,		-1,
					-a/2,			ABdifference/2,		0,
					-a/2,			-ABdifference/2,	0,
					0,				-ABdifference/2,	900,
					a/2,			180,				4000,
					a/2,			ABdifference/2,		0,
					0,				ABdifference/2,		900,
					a/2,			180,				4000,
					-a/2,			ABdifference/2,		-1
		endif
	endif

	if ABdifference>EPS and iTypeTableEnd = TABLEEND_ELLIP then		!!a<>b
		v=-MSFront
		contourFlag = 1
		gosub "ellipse"
		v=0
		contourFlag = 0
		gosub "ellipse"
		poly2_b nn+nn, 1+2+4+64, MSFillPen, MSFillBackPen,
				get(nsp)
	endif

endif

! 2D Symbol

pen gs_cont_pen
line_type 1
fill gs_fill_type

! 2D Symbol * A=B
if ABdifference<EPS then		!!a=b
	poly2_b 2, 1+2+4+64, gs_fill_pen, gs_back_pen,
			0, 0, 901,
			a/2, 360, 4001


	HOTARC2 0,0,A/2,0,180
	HOTARC2 0,0,A/2,180,360

!!		if widthTabletopFrame>0 then circle2 0, 0, a/2-widthTabletopFrame
endif


! 2D Symbol * A<>B * ARC
if ABdifference>EPS and iTypeTableEnd = TABLEEND_ARC then	!!a<>b
	if a>b then
		hotspot2 -ABdifference/2, -b/2,	unID : unID = unID + 1
		hotspot2 ABdifference/2, -b/2,	unID : unID = unID + 1
		hotspot2 ABdifference/2, b/2,	unID : unID = unID + 1
		hotspot2 -ABdifference/2, b/2,	unID : unID = unID + 1

		HOTLINE2 -ABdifference/2, -b/2,ABdifference/2, -b/2
		HOTLINE2 -ABdifference/2, b/2,ABdifference/2, b/2

		ADD2 ABdifference/2,0
		ROT2 -90
		HOTARC2 0,0,b/2,0,180
		DEL 2
		ADD2 -ABdifference/2,0
		ROT2 90
		HOTARC2 0,0,b/2,0,180
		DEL 2


		fill gs_fill_type
		poly2_b 7, 1+2+4+64, gs_fill_pen, gs_back_pen,
				-ABdifference/2, -b/2, 1,
				ABdifference/2, -b/2, 1,
				ABdifference/2, 0, 901,
				b/2, 180, 4001,
				-ABdifference/2, b/2, 1,
				-ABdifference/2, 0, 901,
				b/2, 180, 4001
		pen gs_cont_pen
		poly2_ 7, 1,                  !!contour
				-ABdifference/2, -b/2, 1,
				ABdifference/2, -b/2, 1,
				ABdifference/2, 0, 901,
				b/2, 180, 4001,
				-ABdifference/2, b/2, 1,
				-ABdifference/2, 0, 901,
				b/2, 180, 4001

!			if widthTabletopFrame>0 then
!				arc2 ABdifference/2, 0, b/2-widthTabletopFrame, -90, 90
!				arc2 -ABdifference/2, 0, b/2-widthTabletopFrame, 90, 270
!				line2 -ABdifference/2, -b/2+widthTabletopFrame, ABdifference/2, -b/2+widthTabletopFrame
!				line2 -ABdifference/2, b/2-widthTabletopFrame, ABdifference/2, b/2-widthTabletopFrame
!			endif
	endif

	if a<b then
		hotspot2 -a/2, ABdifference/2,	unID : unID = unID + 1
		hotspot2 -a/2, -ABdifference/2,	unID : unID = unID + 1
		hotspot2 a/2, ABdifference/2,	unID : unID = unID + 1
		hotspot2 a/2, -ABdifference/2,	unID : unID = unID + 1

		HOTLINE2 -a/2, ABdifference/2,-a/2, -ABdifference/2
		HOTLINE2 a/2, ABdifference/2,a/2, -ABdifference/2

		HOTARC2 0,ABdifference/2,a/2,0,180
		HOTARC2 0,-ABdifference/2,a/2,180,360


		fill gs_fill_type

		poly2_b 7, 1+2+4+64, gs_fill_pen, gs_back_pen,
				-a/2, ABdifference/2, 1,
				-a/2, -ABdifference/2, 1,
				0, -ABdifference/2, 901,
				a/2, 180, 4001,
				a/2, ABdifference/2, 1,
				0, ABdifference/2, 901,
				a/2, 180, 4001
		pen gs_cont_pen
		poly2_ 7, 1,   !!contour
				-a/2, ABdifference/2, 1,
				-a/2, -ABdifference/2, 1,
				0, -ABdifference/2, 901,
				a/2, 180, 4001,
				a/2, ABdifference/2, 1,
				0, ABdifference/2, 901,
				a/2, 180, 4001

!			if widthTabletopFrame>0 then
!				arc2  0, ABdifference/2, a/2-widthTabletopFrame, 0, 180
!				arc2 0, -ABdifference/2, a/2-widthTabletopFrame, 180, 360
!				line2 -a/2+widthTabletopFrame, -ABdifference/2, -a/2+widthTabletopFrame, ABdifference/2
!				line2 a/2-widthTabletopFrame, -ABdifference/2, a/2-widthTabletopFrame, ABdifference/2
!			endif
	endif

endif

! 2D Symbol * A<>B * Elliptic

if ABdifference>EPS and iTypeTableEnd = TABLEEND_ELLIP then		!!A<>b
	v=0
	gosub 10

	pen gs_cont_pen
	fill gs_fill_type

		poly2_b n, 1+2+4+64, gs_fill_pen, gs_back_pen,
				get(nsp)
!			if widthTabletopFrame>0 then
!				v=widthTabletopFrame
!				gosub 10
!
!				poly2_b n, 1+2+64, gs_fill_pen, 19,
!						get(nsp)
!			endif

	IF B>A THEN
		MUL2 1,B/A
			HOTARC2 0,0,a/2,0,180
			HOTARC2 0,0,a/2,180,360
		DEL 1
	ENDIF

	IF A>B THEN
		MUL2 A/B,1
			HOTARC2 0,0,b/2,0,180
			HOTARC2 0,0,b/2,180,360
		DEL 1
	ENDIF
endif
END

! GOSUB

10:
	n=0
	for x=0 to 360 step 10
		n=n+1
		put (a/2-v)*cos(x), (b/2-v)*sin(x), 1
	next x
	return

"ellipse":
	nn=0
	for x=0 to 360 step 10
		nn=nn+1
		put (a/2-v)*cos(x), (b/2-v)*sin(x), contourFlag
	next x
		put (a/2-v)*cos(0), (b/2-v)*sin(0), -1
		nn=nn+1
	return
]]>
</Script_2D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_1D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
! const values for parameter: iPresetTableStyle
TABLE_PRESET_DINING  = 1
TABLE_PRESET_KITCHEN = 2
TABLE_PRESET_SMALL   = 3
TABLE_PRESET_LOBBY   = 4
TABLE_PRESET_GARDEN  = 5
TABLE_PRESET_CUSTOM  = 6


EPS = 0.0001

ABdifference = abs(a - b)

dim stDetLevels[3]
	stDetLevels[1] = `Детальный`
	stDetLevels[2] = `Простой`
	stDetLevels[3] = `Откл.`

DETLEV_OFF		= 0
DETLEV_SIMPLE	= 1
DETLEV_DETAILED	= 2

dim stLegStyle[8]
	stLegStyle[1] = `Круглая`
	stLegStyle[2] = `Квадратные`
	stLegStyle[3] = `Конические`
	stLegStyle[4] = `Фигурные`
	stLegStyle[5] = `Специальные`
	stLegStyle[6] = `Скрещенные`
	stLegStyle[7] = `Сплошные`
	stLegStyle[8] = `Грубые`

LEG_ROUND		= 1
LEG_BLOCK		= 2
LEG_CONIC		= 3
LEG_BALUSTER	= 4
LEG_DESIGN		= 5
LEG_FOLDING		= 6
LEG_SOLID		= 7
LEG_RUSTIC		= 8

dim stFramePos[2]
	stFramePos[1] = `Внизу`
	stFramePos[2] = `Вверху`

FRAMEPOS_LOWER = 1
FRAMEPOS_UPPER = 2

dim stFrameStyle[2]
	stFrameStyle[1] = `Дугообразная`
	stFrameStyle[2] = `Прямой`

FRAMESTYLE_ARC		= 1
FRAMESTYLE_STRAIGHT	= 2

dim stTableEnd[2]
	stTableEnd[1] = `Дугообразная`
	stTableEnd[2] = `Эллиптическая`

TABLEEND_ARC	= 1
TABLEEND_ELLIP	= 2

if GLOB_SCRIPT_TYPE = 7 | GLOB_SCRIPT_TYPE = 8 then
	dim stDetLevelsMigration[3]
		stDetLevelsMigration[1] = `Детальный`
		stDetLevelsMigration[2] = `Простой`
		stDetLevelsMigration[3] = `Откл.`

	dim stFramePosMigration[2]
		stFramePosMigration[1] = `Внизу`
		stFramePosMigration[2] = `Вверху`

	dim stLegStyleMigration[8]
		stLegStyleMigration[1] = `Круглая`
		stLegStyleMigration[2] = `Квадратные`
		stLegStyleMigration[3] = `Конические`
		stLegStyleMigration[4] = `Фигурные`
		stLegStyleMigration[5] = `Специальные`
		stLegStyleMigration[6] = `Скрещенные`
		stLegStyleMigration[7] = `Сплошные`
		stLegStyleMigration[8] = `Грубые`

	dim stFrameStyleMigration[2]
		stFrameStyleMigration[1] = `Дугообразная`
		stFrameStyleMigration[2] = `Прямой`

	dim stTableEndMigration[2]
		stTableEndMigration[1] = `Дугообразная`
		stTableEndMigration[2] = `Эллиптическая`
endif

]]>
</Script_1D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_UI SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
call "Table01_m" parameters all iTableCode = 2
]]>
</Script_UI>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_VL SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
call "Table01_m" parameters all iTableCode = 2
]]>
</Script_VL>

<ParamSection SectVersion="22" SectionFlags="0" SubIdent="0">
	<ParamSectHeader>
		<AutoHotspots>false</AutoHotspots>
		<StatBits>
			<STBit_UIDefault/>
			<STBit_FixSize/>
			<STBit_UIUseHierarchicalPages/>
		</StatBits>
		<WDLeftFrame>0</WDLeftFrame>
		<WDRightFrame>0</WDRightFrame>
		<WDTopFrame>0</WDTopFrame>
		<WDBotFrame>0</WDBotFrame>
		<LayFlags>65535</LayFlags>
		<WDMirrorThickness>0</WDMirrorThickness>
		<WDWallInset>0</WDWallInset>
	</ParamSectHeader>
	<Parameters>
		<Length Name="A">
			<Description><![CDATA["Ширина"]]></Description>
			<Fix/>
			<Value>1.2</Value>
		</Length>
		<Length Name="B">
			<Description><![CDATA["Длина"]]></Description>
			<Fix/>
			<Value>1.2</Value>
		</Length>
		<Length Name="zzyzx">
			<Description><![CDATA["Высота"]]></Description>
			<Fix/>
			<Value>0.75</Value>
		</Length>
		<String Name="gs_detlevel_3D">
			<Description><![CDATA["3D-детализация"]]></Description>
			<Value><![CDATA["Детальный"]]></Value>
		</String>
		<Integer Name="gs_detlevel_3D_m">
			<Description><![CDATA["3D-детализация"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>2</Value>
		</Integer>

		<!-- gs_leg: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_leg">
			<Description><![CDATA["Ножки"]]></Description>
		</Title>
		<String Name="styleLeg">
			<Description><![CDATA["Стиль Ножек"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Квадратные"]]></Value>
		</String>
		<Integer Name="iStyleLeg">
			<Description><![CDATA["Стиль Ножек"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="numLeg">
			<Description><![CDATA["Количество Ножек"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>4</Value>
		</Integer>
		<Length Name="widthLeg">
			<Description><![CDATA["Толщина/Диаметр Ножек"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.03</Value>
		</Length>
		<Length Name="depthLeg">
			<Description><![CDATA["Толщина Ножки"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>

		<!-- gs_tabletop: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_tabletop">
			<Description><![CDATA["Столешница"]]></Description>
		</Title>
		<Length Name="widthOverhang">
			<Description><![CDATA["Свес"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="thickTabletop">
			<Description><![CDATA["Толщина Столешницы"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.025</Value>
		</Length>
		<Length Name="widthTabletopFrame">
			<Description><![CDATA["Толщина Окантовки (0-Нет)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.02</Value>
		</Length>
		<Length Name="thickTabletopFrame">
			<Description><![CDATA["Высота Окантовки"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.025</Value>
		</Length>
		<String Name="typeTableEnd">
			<Description><![CDATA["Тип Столешницы"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Дугообразная"]]></Value>
		</String>
		<Integer Name="iTypeTableEnd">
			<Description><![CDATA["Тип Столешницы"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>

		<!-- gs_ops: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_ops">
			<Description><![CDATA["Дополнительные Параметры"]]></Description>
		</Title>
		<Integer Name="iPresetTableStyle">
			<Description><![CDATA["Стиль Стола"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="frame">
			<Description><![CDATA["Окантовка"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<String Name="positionFrame">
			<Description><![CDATA["Расположение Царги"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Внизу"]]></Value>
		</String>
		<Integer Name="iPositionFrame">
			<Description><![CDATA["Расположение Царги"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="heightFrame">
			<Description><![CDATA["Высота Царги"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.5</Value>
		</Length>
		<Length Name="thickFrame">
			<Description><![CDATA["Толщина"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<String Name="styleFrame">
			<Description><![CDATA["Форма Царги"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Прямой"]]></Value>
		</String>
		<Integer Name="iStyleFrame">
			<Description><![CDATA["Форма Царги"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Length Name="depthFrame">
			<Description><![CDATA["Ширина Царги"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.03</Value>
		</Length>
		<Boolean Name="shelf">
			<Description><![CDATA["Полка"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="heightShelf">
			<Description><![CDATA["Высота Полки"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.3</Value>
		</Length>
		<Length Name="thickShelf">
			<Description><![CDATA["Толщина Полки"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.01</Value>
		</Length>
		<Boolean Name="drawer">
			<Description><![CDATA["Ящик"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="numDrawer">
			<Description><![CDATA["Количество Ящиков"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="heightDrawer">
			<Description><![CDATA["Высота Ящика"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.15</Value>
		</Length>
		<String Name="gs_knob_type">
			<Description><![CDATA["Стиль Ручки"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Стиль 1"]]></Value>
		</String>

		<!-- gs_2D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_2D_representation">
			<Description><![CDATA["2D-отображение"]]></Description>
			<Fix/>
		</Title>
		<PenColor Name="gs_cont_pen">
			<Description><![CDATA["Перо Контура"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>4</Value>
		</PenColor>
		<FillPattern Name="gs_fill_type">
			<Description><![CDATA["Тип Штриховки"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_fill_pen">
			<Description><![CDATA["Перо Штриховки"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_back_pen">
			<Description><![CDATA["Перо Фона Штриховки"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<Integer Name="iTableCode">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>

		<!-- gs_min_space: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_min_space">
			<Description><![CDATA["Минимальное Пространство"]]></Description>
		</Title>
		<Length Name="MSFront">
			<Description><![CDATA["Минимальное Пространство"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.8</Value>
		</Length>

		<!-- gs_3D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_3D_representation">
			<Description><![CDATA["3D-отображение"]]></Description>
		</Title>
		<Integer Name="gs_resol">
			<Description><![CDATA["Разрешение"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>10</Value>
		</Integer>
		<Boolean Name="gs_shadow">
			<Description><![CDATA["Отбрасывание Теней"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="AC_show2DHotspotsIn3D">
			<Description><![CDATA["Показ Узловых 2D Точек в 3D"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="ac_bottomlevel">
			<Description><![CDATA["Отметка Низа"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="ac_toplevel">
			<Description><![CDATA["Отметка Верха"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>

		<!-- gs_material: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_material">
			<Description><![CDATA["Покрытия"]]></Description>
			<Fix/>
		</Title>
		<Material Name="gs_top_mat">
			<Description><![CDATA["Столешница"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="gs_topedge_mat">
			<Description><![CDATA["Торец Столешницы"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>59</Value>
		</Material>
		<Material Name="gs_leg_mat">
			<Description><![CDATA["Ножки"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="fmat">
			<Description><![CDATA["Царга"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="smat">
			<Description><![CDATA["Полка"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>29</Value>
		</Material>
		<Material Name="dmat">
			<Description><![CDATA["Ящик"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="gs_knob_mat">
			<Description><![CDATA["Ручка"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>11</Value>
		</Material>
		<Integer Name="gs_knob_type_m">
			<Description><![CDATA["Стиль Ручки"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="gs_ui_current_page">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="LibraryLangCode">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value><![CDATA["RUS"]]></Value>
		</String>

		<!-- gs_list: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_list">
			<Description><![CDATA["Параметры Спецификаций"]]></Description>
			<Fix/>
		</Title>
		<RealNum Name="gs_list_cost">
			<Description><![CDATA["Цена"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="gs_list_manufacturer">
			<Description><![CDATA["Производитель"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_note">
			<Description><![CDATA["Примечания"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_location">
			<Description><![CDATA["Расположение"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_accessories">
			<Description><![CDATA["Аксессуары"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_Type">
			<Description><![CDATA["Тип Группы"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Мебель"]]></Value>
		</String>
		<Integer Name="iFMType">
			<Description><![CDATA["Тип Группы"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>16</Value>
		</Integer>
		<String Name="FM_InventoryNumber">
			<Description><![CDATA["Инвентарный Номер"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_SerialNumber">
			<Description><![CDATA["Серийный Номер"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_ProductionYear">
			<Description><![CDATA["Год Производства"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<RealNum Name="FM_ObjectWeight">
			<Description><![CDATA["Вес Изделия"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="FM_ObjectWeightUnit">
			<Description><![CDATA["Единица Веса"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["кг"]]></Value>
		</String>
		<String Name="gs_list_custom1">
			<Description><![CDATA["Пользовательское Значение 1"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom2">
			<Description><![CDATA["Пользовательское Значение 2"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom3">
			<Description><![CDATA["Пользовательское Значение 3"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom4">
			<Description><![CDATA["Пользовательское Значение 4"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom5">
			<Description><![CDATA["Пользовательское Значение 5"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
	</Parameters>
</ParamSection>

<Picture MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="0" length_in_bytes="11285" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000800000
	008008020000004C5CF69C000000097048597300002E2300002E230178A53F76
	00000A396943435050686F746F73686F70204943432070726F66696C65000078
	DA9D96775454D71687CFBD777AA1CD30025286DEBBC000D27B935E4561981960
	28030E3334B121A2021145449A224850C480D150245644B1101454B007240828
	311845542C6F46D68BAEACBCF7F2F2FBE3AC6FEDB3F7B9FBECBDCF5A170092A7
	2F9797064B0190CA13F0833C9CE911915174EC0080011E608029004C5646BA5F
	B07B0810C9CBCD859E2172025F0401F07A58BC0270D3D033804E07FF9FA459E9
	7C81E89800119BB339192C11178838254B902EB6CF8A981A972C66182566BE28
	4111CB893961910D3EFB2CB2A398D9A93CB688C539A7B353D962EE15F1B64C21
	47C488AF880B33B99C2C11DF12B1468A30952BE237E2D8540E33030014496C17
	70588922361131891F12E422E2E500E048095F71DC572CE0640BC49772494BCF
	E173131205741D962EDDD4DA9A41F7E464A5700402C300262B99C967D35DD252
	D399BC1C0016EFFC5932E2DAD24545B634B5B6B434343332FDAA50FF75F36F4A
	DCDB457A19F8B96710ADFF8BEDAFFCD21A0060CC896AB3F38B2DAE0A80CE2D00
	C8DDFB62D3380080A4A86F1DD7BFBA0F4D3C2F890241BA8DB1715656961197C3
	321217F40FFD4F87BFA1AFBE67243EEE8FF2D05D39F14C618A802EAE1B2B2D25
	4DC8A767A433591CBAE19F87F81F07FE751E06419C780E9FC313458489A68CCB
	4B10B59BC7E60AB8693C3A97F79F9AF80FC3FEA4C5B91689D2F81150638C80D4
	752A407EED07280A1120D1FBC55DFFA36FBEF830207E79E12A938B73FFEF37FD
	67C1A5E225839BF039CE252884CE12F23317F7C4CF12A0010148022A9007CA40
	1DE800436006AC802D70046EC01BF8831010095603164804A9800FB2401ED804
	0A4131D809F6806A50071A41336805C741273805CE834BE01AB8016E83FB6014
	4C80676016BC060B10046121324481E421154813D287CC2006640FB941BE5010
	1409C54209100F124279D066A8182A83AAA17AA819FA1E3A099D87AE4083D05D
	680C9A867E87DEC1084C82A9B012AC051BC30CD809F68143E0557002BC06CE85
	0BE01D7025DC001F853BE0F3F035F8363C0A3F83E7108010111AA28A18220CC4
	05F147A29078848FAC478A900AA4016945BA913EE426328ACC206F5118140545
	4719A26C519EA850140BB506B51E5582AA461D4675A07A51375163A859D44734
	19AD88D647DBA0BDD011E8047416BA105D816E42B7A32FA26FA327D0AF31180C
	0DA38DB1C2786222314998B59812CC3E4C1BE61C6610338E99C362B1F2587DAC
	1DD61FCBC40AB085D82AEC51EC59EC107602FB0647C4A9E0CC70EEB8281C0F97
	8FABC01DC19DC10DE126710B7829BC26DE06EF8F67E373F0A5F8467C37FE3A7E
	02BF4090266813EC08218424C2264225A1957091F080F0924824AA11AD898144
	2E7123B192788C789938467C4B9221E9915C48D124216907E910E91CE92EE925
	994CD6223B92A3C802F20E7233F902F911F98D0445C248C24B822DB141A246A2
	436248E2B9245E5253D24972B564AE6485E409C9EB92335278292D291729A6D4
	7AA91AA99352235273D2146953697FE954E912E923D257A4A764B0325A326E32
	6C99029983321764C62908459DE242615136531A29172913540C559BEA454DA2
	1653BFA30E506765656497C986C966CBD6C89E961DA521342D9A172D85564A3B
	4E1BA6BD5BA2B4C4690967C9F625AD4B8696CCCB2D957394E3C815C9B5C9DD96
	7B274F9777934F96DF25DF29FF5001A5A0A710A890A5B05FE1A2C2CC52EA52DB
	A5ACA5454B8F2FBDA7082BEA290629AE553CA8D8AF38A7A4ACE4A194AE54A574
	41694699A6ECA89CA45CAE7C46795A85A262AFC255295739ABF2942E4B77A2A7
	D02BE9BDF4595545554F55A16ABDEA80EA829AB65AA85ABE5A9BDA4375823A43
	3D5EBD5CBD477D564345C34F234FA345E39E265E93A199A8B957B34F735E4B5B
	2B5C6BAB56A7D694B69CB69776AE768BF6031DB28E83CE1A9D069D5BBA185D86
	6EB2EE3EDD1B7AB09E855EA25E8DDE757D58DF529FABBF4F7FD0006D606DC033
	6830183124193A19661AB6188E19D18C7C8DF28D3A8D9E1B6B184719EF32EE33
	FE6862619262D26872DF54C6D4DB34DFB4DBF477333D3396598DD92D73B2B9BB
	F906F32EF317CBF4977196ED5F76C78262E167B1D5A2C7E283A59525DFB2D572
	DA4AC32AD6AAD66A84416504304A1897ADD1D6CED61BAC4F59BFB5B1B411D81C
	B7F9CDD6D036D9F688EDD472EDE59CE58DCBC7EDD4EC9876F576A3F674FB58FB
	03F6A30EAA0E4C870687C78EEA8E6CC726C749275DA724A7A34ECF9D4D9CF9CE
	EDCEF32E362EEB5CCEB922AE1EAE45AE036E326EA16ED56E8FDCD5DC13DC5BDC
	673D2C3CD67A9CF3447BFA78EEF21CF152F26279357BCD7A5B79AFF3EEF521F9
	04FB54FB3CF6D5F3E5FB76FBC17EDE7EBBFD1EACD05CC15BD1E90FFCBDFC77FB
	3F0CD00E5813F06320263020B026F0499069505E505F30253826F848F0EB10E7
	90D290FBA13AA1C2D09E30C9B0E8B0E6B0F970D7F0B2F0D108E3887511D72215
	22B9915D51D8A8B0A8A6A8B9956E2BF7AC9C88B6882E8C1E5EA5BD2A7BD595D5
	0AAB53569F8E918C61C69C8845C786C71E897DCFF4673630E7E2BCE26AE36659
	2EACBDAC676C4776397B9A63C729E34CC6DBC597C54F25D825EC4E984E7448AC
	489CE1BA70ABB92F923C93EA92E693FD930F257F4A094F694BC5A5C6A69EE4C9
	F09279BD69CA69D96983E9FAE985E9A36B6CD6EC5933CBF7E137654019AB32BA
	0454D1CF54BF5047B8453896699F5993F9262B2CEB44B674362FBB3F472F677B
	CE64AE7BEEB76B516B596B7BF254F336E58DAD735A57BF1E5A1FB7BE6783FA86
	820D131B3D361EDE44D894BCE9A77C93FCB2FC579BC337771728156C2C18DFE2
	B1A5A550A2905F38B2D5766BDD36D436EEB681EDE6DBABB67F2C62175D2D3629
	AE287E5FC22AB9FA8DE93795DF7CDA11BF63A0D4B274FF4ECC4EDECEE15D0EBB
	0E974997E5968DEFF6DBDD514E2F2F2A7FB52766CF958A6515757B097B857B47
	2B7D2BBBAA34AA7656BDAF4EACBE5DE35CD356AB58BBBD767E1F7BDFD07EC7FD
	AD754A75C575EF0E700FDCA9F7A8EF68D06AA83888399879F049635863DFB78C
	6F9B9B149A8A9B3E1CE21D1A3D1C74B8B7D9AAB9F988E291D216B845D8327D34
	FAE88DEF5CBFEB6A356CAD6FA3B5151F03C784C79E7E1FFBFDF0719FE33D2718
	275A7FD0FCA1B69DD25ED40175E474CC7626768E7645760D9EF43ED9D36DDBDD
	FEA3D18F874EA99EAA392D7BBAF40CE14CC1994F6773CFCE9D4B3F37733EE1FC
	784F4CCFFD0B11176EF506F60E5CF4B978F992FBA50B7D4E7D672FDB5D3E75C5
	E6CAC9AB8CAB9DD72CAF75F45BF4B7FF64F153FB80E540C775ABEB5D37AC6F74
	0F2E1F3C33E43074FEA6EBCD4BB7BC6E5DBBBDE2F6E070E8F09D91E891D13BEC
	3B537753EEBEB897796FE1FEC607E807450FA51E563C527CD4F0B3EECF6DA396
	A3A7C75CC7FA1F073FBE3FCE1A7FF64BC62FEF270A9E909F544CAA4C364F994D
	9D9A769FBEF174E5D38967E9CF16660A7F95FEB5F6B9CEF31F7E73FCAD7F3662
	76E205FFC5A7DF4B5ECABF3CF46AD9AB9EB980B947AF535F2FCC17BD917F73F8
	2DE36DDFBBF077930B59EFB1EF2B3FE87EE8FEE8F3F1C1A7D44F9FFE050398F3
	FC91C05ADB0000000467414D410000B18E7CFB5193000000206348524D00007A
	25000080830000F9FF000080E9000075300000EA6000003A980000176F925FC5
	460000213C4944415478DA62FCFFFF3FC32818380010404CA34130B000208046
	2360800140008D46C0000380001A8D8001060001341A01030C00026834020618
	0004D068040C300008A0D1081860001040A31130C00020804623608001400041
	2300794002CE8630D0B8A380BA002080982021CBC8C8080F6220FB3F184054C0
	B9C86A3001B29651403C00082026CC040E8F0664410817337AFEC300231860C6
	CA68EEC10F00028805397031730372E8A389206717AC19022DDA46C31A2B0008
	20C67FFFFE6111458D12B440C7AA1E1E73987908578C128CB691000002081A01
	98818B350EF0247FB45A046BB0422203334671A91F0971031080D96AD9011006
	619D9B63F3FFFF55908D891E8D8FAB213D900069DAA4E1AAFB53B0BCA4D0AD37
	9F630F7C141B4356089BB00AF7AE4D78D8B0A6BED59BC2ECB889117052F282BF
	12DE3AC29CC906A614634A2917472C059950175005E86F06EC02F05A45390C82
	30B4804118BAB8ECFE575CA622E0441805167FF47769D2342DBC36AF85F4D870
	AEBE88D3B1BDD2A7A41F68DEC0FCFECCA39B5EDE99CD2DABD1BBD5DEEAE06D0C
	21FE36B33D16830440BA13044D9281D28345AEB3064C0485FD9AAB568C2708C6
	AB9312BC927B8558AC954CDEB9ECB9505474CD4D89E109FD03C4F0E7067C05A0
	B55A5618848160B2115A3DF8A078D0FFFF39C182010F8AACE964A29482A5A76E
	12D8641F8499259B8B27E8DB77F3670FF8807BF1DB38CCCF619DA715A0FB5117
	8F63566F882ED6897380DC4A46288515CD86618FC24E2A1672638A50219A64C2
	D23D983725D11DD63DC5820739987062C2793D89B118605C55778AA624B06293
	15F5AD7AE4657BAFEABCED4DD3B12AFE222F0184A884D14A763C99009B9A7F0C
	6F9E7C7EFEE8FBC7D7DFDFBDFCF5E9F5BF7F7FC0C90FA8840514B84CCCC0F062
	6202971D08531820964314828397011A8CFF61299709A4035EFE03594CA078F8
	070E55B0DBE02E026704A06A708601719940D10A3589092CFF1F2C0B34F32F38
	F618A0B1F31FE20CB0C12051607C00A3E6DF5F6071F7F71FD0D0FFFF18991939
	F8257944A47844A5D8641418D8A996510002083D07602D55B05709BFBE7E7D78
	EBF3CB875F5F3FFDFBE90D2313581928AC4121FE0F926E216A99C0891198B880
	C107093546A8578161F1EFFF7F58DA07050713232C5C61A50752E102C99A200C
	8E18889EFF602DD06A80091CD28CD05289115E5801D540621F14F48CD0B8045A
	F70F62FD7F0684AD608703B500C31EC8FA0749FC40C1BF7F19FEFDFEF3E70F50
	909991915D48924F52915F4E8541449E920800084087D5AB200C03E16BAE74D1
	4170EBE8242EBEFFA314846E820E1DDA4D9B9C77F92E5A2A1D03C991FBFEF253
	ADFE1BFE35BECA96F8E887BE9BEEB7F7F8545D6B8C70DD88D99AA2A35E44AE18
	2568AE008C1EA149B6E6590920822D10D999862FDA0B0578594B702836041647
	9F703EE4C872E0E1EBE071F3E35272D1AC066F09DB127F5416C6C556E938C152
	3EC1C8D09A46599C537CA951544ACDA13D9E2EBBF39578BF7505DFBA777C04E0
	BBEC7510866120DC980A215189AD6FD015F100BCFFD8B97BB78A85A552D59FC3
	F63914061813254A74CE7DE77C39E0D7EFD7261FFDD0B5CFBEDBA6D1443F9EDC
	E8B2F962EAAC82B25EF4B6501B9021766781C9ED288F94D4C3757810017B9BE0
	C54EF47007761B24DB1F414BB2F0454B7A6732654A6B7E406E38D829BE2B6A93
	8B4C3221AA60F7D44420F70C4739E411360A53233B47679665C6AC0DDB5A9E2F
	7573ABAEF7A2283FD1FDA77B7E0920C4B802D6BA1728F8F9C6A957D74EFFFCF8
	8299859D89991598E8FF41C38F01925CFFC3CAD6FFB084FC1FDE3684B895E13F
	13D8AD901201EC4D50AC3041620192BA60D503AC7880660268250B2B5118C171
	0629E221553434D5C35482122930A6C10EFBC780DC374414F14CF0B0FF0FAA89
	19A06E83FAE51F24DCFFFD8707C67F0658BEFC0F8969C6FFF0F800E57B68250A
	D1F1FBD77786BFBF79C415642CDC1804A408763F010208CBB81B5CE9E73B179E
	9DD9F7E7DB0766364E462694E082B7C42189065AD8FF4758056B1D32A2DB0C2B
	8718C0691F1E3A90E083D710302F431325722DC0C808CB59D090870628A431C4
	02B6EA1FEE9127465889FF1FD1C4801A0D8E0C08E33F383733FC83B565C10C46
	46984F215980095CAB31424B44485304EADD3FBF7FFDFDF195535842D1359C81
	53082D372017360001E82E7B2C80602008270AEF792AAD3368955A4775073751
	7A8EA051202391D94D0A6EB03FB333DF060BFACA58B7CED3BE2D6555FBAF267B
	D044E3C446EB7479B29EE45A946CF0096790E56AACC088CC794EA0E2893DB1BD
	22237C2BA069AC323EBF0324374FC3A586C1DC0930EA33075020954343140F5D
	05B8A5091727F5D65128EDCAD317025D9D43CC4A07F42EF03A8FBDED86A61FFF
	F2E0114028CD5098F4FF5B6BA6FC06366CD8B8619D1D480D0A6F5CC04217DDCB
	B05C05E63231800A1F48320599006EB720DA98B0DC841C1310650CB0F2075E1B
	835DC6086992C2A204D88F80DA0F2912E1BEFA078E6DC41017BC51CB08ACF8E1
	0D5248828596A5E0F40EAD06A04519B8A46382C60178D89801D6E140D454B01E
	CB7F689B0A12A3CCD0DA1AD2FEF8FFEBDB1741390D09C730AC636B0001B8B062
	1C066118189B0CADC4CAC6D8A5127FEF13FA081EC0C0080B5B872A41F69D83C4
	9C0C67FB7C3E3BB7BCB787F5FBF91D5B7EF46A3C47F943D82BD942E181EB0E7E
	091178DAA9E40110ECBE5E39065AA320088916332576ADBDCEA966736BAC5AF6
	FF5F0C339C97134E81A1A4D274144DA4EC1872DF2A84C95CB158F0921E56274E
	EB8E469173AC749CD2C9ED76824D75F04538D8C52AE501749C66293FFB7D9987
	D7A4E3FBAEC722A7006498D10D80200C44410989CEA00BB8FF207EBA8143685A
	E17A05A33FFE1831F47AD707E96F8A923C29CF911666056D31ECB1B79B3AB8F5
	51098B831449D016EF68A696E7D4817DA2E1C5E11A3A08690BA53E90F1FEAA88
	8E32FB073805542DA45D4C94FF0F9199E242DE42DC69E7309F6C6ADC49A9C207
	CD013DD0983155C847245AC5EB6AE8F99146306738AAD467CAD379ECCBBABD91
	C7CAFE08C08619E5000C8230149DF73FF1B4130A9DC9F663E28F3182AF2DE363
	959C81C3C3146F6EE5B62AA248BAB3EB93A2ED0C4A5E89A22BBF65BC167B2DC2
	81D4CC9A36CDA473ADC8451445FDEC9E6B417199BE5386F245218A93F58A7EED
	4949C960810DA30E8D3AB0A03992E1087F3CEDF2196196814A4B261347319B72
	6F9C9D1AFF05E9B45198ECF81BEEEEF511800D33C601180661A02DB573FFFFD1
	2E55A00A1884D42E99C89080CCD9C7C7F4FABD709DD9F1221E3A86A4FA4408A0
	6542B94B217583296A81275AC89A62866A4A7CA831379139A546E39086B76BA3
	0AA58C518198CE5C9525E2EEB337DBE62677B2A7A71F55B6404288C5B06D4461
	6EFC4C6EDDB82E0B62B6A934F38F6EA3420E3EF61FA0BD02B0612D3B0083204C
	FDFF2F5DB28371F1B00C3A4050B3ECEA41DEB4A57C2E0DE2ED71D6AB7773DDBB
	9D6DA0B01AD50E0BB1F554F5E4213953CC8C45C798C277ADB8400D6C8421B060
	4EBDFE39932B6F523926B82FE02DFB93180DA762DB9731D0C88BA424D720B6C7
	241C62C6D600D90DA92D321AFA2854A8BC2776B21D6464E537C36F7F6464068A
	F3861C51ADC19B5BABADDFBF0AF715802D6B59811086816DD79B201EF6E0FF7F
	96887AF02C2BE2499A583369545CE8AD8FD0C9A3936978ABFCA1ACBBA15FD6AD
	B0C68F556361ABCC0ED1AAEC9F403A18AF9B401FC96A8CCF77B766E1C2037E45
	DEFAA7F22330A91775138C62259BCF6EE9C9F7C7048603840A67121039638427
	D921D143056599DB13F4310D9273933328D353B516D96409FE78CD2EAF42134B
	0FE176D2D62185CDFC5BA6B1ADBECDDF0FAE4300B2AC65894110061A9CE97FF4
	DA5F68EFFEFF1FD8C78CE2C593A36D85AD24813053EE8100D965B3B87FF7FF72
	ED9679EA1FCFFBE0DFDF8FE3AA8A39C880CC382C9FF250E98164951C3B6E5BD3
	3B8C69AAD691FE4DF661C25CEF17FAEDAF2285ABB2D1B98AD5A6C8105E497C1E
	A3E44846E375AB05B2C78332E3407D9454BF727621A0C096D78688AA3D068145
	B60E991B1BDA219D334771F905CD348178DDB6D1FBC9BFE04EE75B4779D4D7F0
	13405886F88122E776AEBBBC752E2BB7301B1BBB001F9F90003F371727B4E265
	848D31406B3826F8D831A4C5C1C408AF3BA1CD6FC8380F0322F7C207322003CB
	B0EA14E610262626501B0A18ACFFE03D5C46489B941131BA80D27D834F204087
	39A1A30720C5987DC07FFF51FA2D88BA8A11D66180F73AA1450FA4BF0DB39211
	314A0B19DE00253B6834430625FF7FFFF6FDCBD72F3F7F7CFFF5EDD3AF1FDFFC
	ABA733700B61ED8B010410CE39965B270E9CD930EBEF9F5FC026293313331727
	B780203F2F17073B2B1BB45908CECEB04E0978808C110C2129E0DF7F344FC2C2
	8011A98602893121CA4AA80A58EF9A1156DAFE87CC8741DBB470673332C0CAF4
	FFC863D8FF61251DBCD3C404EB64FD67807536FE23D584700741CA1AC44C2774
	568E91F13FD29C03A4BA61844DBB313043BB69A08CF2EBD7AF1F3F7E7CFBFEF5
	F78F5F7FFFFDF9F1F1159F8CA6437633E684365C04208018F1ACD8F9F1E1CDA9
	6D6B1E9ED90354C1C2C1C5CCC8C2C2CAC4C9C5038C066E0E4E4E0E366650D317
	9EF4FF31205222245DC0879961DD34D4112126783C825531C10621E0BEFF0F6B
	62323142671560AD2B46C4A0374A6B8A113A34CB803A9780C8B2B0CE372CCFFD
	FF8F70357CAE0D3E91016D4D30A0A419A02250730E5211028BAFFFFF7EFFFAFD
	FB3730F07F7EFFFE03589FFCF9FBF3EFD74FCC5CFC26FEC9C25A26F8A76F0102
	8891E092A9CF2F9E5C3AB4E3E1F9437FBE7F6461E766004602B0CFC1C4C4C1CE
	C6C1C1C1C5CDC5C1CAC6CECECACACCCA08AF2BC1DD1A48238A199EE4FF232A59
	F078037CFCE63F7C90033258FC0FA957C008AB9F611D31685041CB08A4820B3E
	C9C388686940FAF0F02861FC8F3252054DCB084740C64BFEC16A07E83C00D810
	D88406B881CCF0F7CF9F3FA019B35FC060FFF3E7E76F60AD0D1EC5FEFD0D98F6
	3FF348A9EAB9040B6918E1994F848B03041023916BD6FEFFFC76F3EC89FBE78F
	BEBE7B1E98D89999D9593938213D5960DA646661E16063E560E7E006E60B5656
	563666361656A4811C440B08642B3313C37F2CCD53D8C00E24AFC0BA3088763A
	23A29789985C81C614A4DF0D1FAE410C5881470CE01300FFFE4193017C580AA5
	150E1EAAFE0BE9ADC09CC4C40869E481431C18F0BFFF00933B74CE123C5BF3FF
	CFAF3F3FBFFFFBF39D955B44D6D05EDDD68D81838FF8750B0001C448EAA2C1DF
	9FDEDFBF7AFED1B5F36FEF5FF9F9E52D6886958D13942D4083638C90A13456F0
	AA10604470002B7136567636506105AC5A99C100364D8BDC7FFDFF0F65DA1136
	D8F91F310E0AED7E833BD248FD2646F890272323529F8011A11B12A34C30BFC2
	07BD2153A4D02915C844CD7F48CBEA2FB0C5036A9BFEFFFDE73728CC41C52B68
	32F22F249380BA717F7F3102C3FD0FB0A0FFCB2FA522AD61AA606C01A96671AD
	70C09CE585880304102305AB36FFBF7B74EFF18DCBAF1FDD7AF3E0C6EFCF6FC0
	9D0526665676265676603B14E86C2688ADCC4CACCC2CA02944066035C2CCCA06
	8E20265616362620C9049E25676206EB656402B76299A04D1146A4D60B7C9606
	3AF00B6BFB3032208FD9C1FAB60C8C98331FC02EED7F48DF0ADCC180B43B8125
	F69FBFE04E00A873FC0F18E4A0C512D05144F8081DB074F9FFFB17A837F8FF0F
	3073F2492B8B2A68C9A8EB71CAAAE25ABE46E4C24E800062A4D6B2D99FEF5F3F
	7F70F7E5C3BB1F5F3EFEF4E2E1F70FCFC199011CAC2CCC8CCC1CA07065618674
	1DE1352238A58306E941B903948140DD26A07A16D0C83D030B480CDCD6832CA9
	80072B3313AC25C604EFCF4167D540CDF6BFB09E02644C1A4C810315AC143200
	FF1FD2D163443402A0F90A52DE8042FCEF2FE8EC262B2BB7B8B2A094BCB09482
	988A0630A5638638E66C2EAEF580680A0002889156EB967F7E7BFFEAF9DBA78F
	3FBE7AFAE5FDEBAFEF5E7D7BFBE4F7F74FA0051EB0C621B09802E60A5004B080
	0A2860FC00C3043C738B98EC8516554CB099CE7FD01203363F03A9B119E1F53A
	34593182270F40FD0F06C8C0362374CC13520180BBAB7FFF80E9DF0CD0A169F0
	90322333A780388FA80CAFA018BFA89890941CBBA41CB00D487041149E455358
	D7CEC2230C2000EF66B783200C43E1A1D8F05B3110DEFF014526830DE6C89CAD
	891706E31577E701DAA627E73BD1AEE0B89B8DECD5AD53FD75929D5677ABC765
	94761A1E5A3A3D788A593879A7095E298609F7891D833FC61043C2B8CFE721F2
	EFA0C05913A6970D342156FEB5436C8FE8A01C823C01E41514156498E225C9CA
	B43C63D362DD0AAC8588BEDB12FF606A3FCA135B282DEBA700621C5C2BF781E9
	11D87BFCF1FD3790FCF9FDE7F76F7F40CDEB1F7F7FFFF8FFE70FD08BDFBF7C7C
	7AFF36130B3BB0E50B99F10746CEAF9FBF81BD4D60ED22ADA4C6CEC1051465E7
	E462626165E7E0042220C5CEC5CDC4C9C9006C43A32E70C3152EF8D335AE7A15
	EBE257347330ED020820C621B77562E3C60D2222A2222222400FB0B181FA221F
	3F7E7CF8F021B0D1E5E8E8486CFB0163A9089E55F868A18927F9E35ADD832767
	000410CB505CD10DAE30C08D5E266005098C05362626D2D66E625F2182BA0B08
	33DC3135A2ED17428B5D3C0BC8E152000134F4764902831BEE13D03C3BB00A07
	56E6D83648511225F8F3019E1D7398E258FB04702E40000DBD086086B447A14D
	1D685E8064082A6734A40C811C647006E6B6385C618DD9F881E71B80001A7A45
	1064D49989110120B140BF12106FF185AB8EC12CAC2022000134F47200131322
	F021BD37709F82896180762F61E603E45208576105CF43000134F472002324FD
	43CB1CE8125D48C40C2A47A20534AE661840000DC9A30A20C3C4E0E4CFC4005D
	89CD3CB4DAD3F028010820A6A1980360E358B0AC0D66B0B1B20EC5C404104043
	3207C0761EFC878F3983C7FC9887A25F00026848E600D8AE32E8BA45E8D8DBD0
	DC420C1040433207206606601B541987EC0E6E80001A921100DE580A9D9419EA
	3BE8010268C81ED8F41F69D13364926568C60140000DC50880EEA1400CCE0CE5
	1C001040432F025859D9105B6B214BC35077C80C2D00104043762802BE82F31F
	64D13AD310CD0300013464EB00F0181C7CEB2003D25EE2A105000268A83643A1
	A741C0F7B80CD923D10002682876C4E0552F03E63A832107000268E845007841
	3E6CED2638461806D95028490020808666110421605D3026D48D0F430B0004D0
	504D38FFFE41F73631C2B6FF0ED108000820A6A19AFCA165D1903FCC0F208098
	86A88B216B3C4124E868AB7F905D6A433102000268E845C03FD85E7006D03271
	70F08301E3D06C880204D0906C86423765FE871644D0E5D143B3140208A02158
	07C0766DC0D6D68006238018B4F363080280001A820BB3C0538F90F980FF908D
	1660C0C232149759320004D0D07334331313E8E842E826F7BFD0686040D9153B
	840040000DC16C8BB4411FF90CD2211A030001340423007A8C0112006D7EFC37
	44730040000DC58A0B726C140303D2D13E43B70C0208A0215971416A60C8592A
	FFE0E7880CCD116980001A8ACDD07F0CB0A3C1E0EB8DFFFD1FAA953040000DC5
	08F88F72BA0DA839F417720CD0508C0080001A9A1D317825CC887406C8D02C82
	000268482E4B811C0FC6C0001D90809FF43D142300208086E8F274D8A94CB043
	B618862C0008A021381AFA0FBA1E087ACA2DE2F8AB21190D00013454474361A7
	DFFF1BEA37F80104D050DC25C90C1D7B809E55F00F9E218662040004D0108C00
	1626F874C03FF881AE43361B0004D0501C0B82D7C3D0C3C510B79E0C41001040
	43B012062F09FA07DBED0FDB2B30543B62000134247300F458AC7F8801897F43
	B60E0008A0A1B92EE8DF3FC45810EC542CE6A1B9490F2080865E04FCFCF90372
	62F17FD8D16F90C8F80D9A261B7A00208006E37034F24ADB5FDFBF7FFCF4F1EB
	B76FBF7EFDFAFDEBF7CF5F3F5FBE7A2D222CFC0F52E8404E38FEFF8F9189E9D1
	A3C7A04BE45898D9D8D84167347172F2F1F1B17170629A39A8004000B10CC270
	7FF7E6F5878F1F3F7DFA040C77D0F1D9908BC7C0277200C3FDE58B17BC3CDC4C
	8CFCD0DB35C0C4AF9F3FDFBD7D2B2525F9FDE7BFFF5FBE205FC0C4C5C5C5CBC3
	232020202422CA30F8AEC50508A0815F590F0BF7FF4F9F3C79F5EAD5D7AF5F19
	A0DB2F60A72CFC47D4BE40EEDE3D7BFFFCFDA3A7AB2B2A26CAC6CA0E2CFD5FBD
	7973F9F2652E6E6E5B1BDB7FFFFE422EE9805CFDC0083A88F52FF8BE3B90595C
	5C9CE262E2125252E07AE4DF6058D20B10402C031EF4DFBF7E79F8F0E19BB7EF
	40978580CF76055FBAC6042E5E18918FCE851C1ECDC4CCF4E6E5DB03870E0113
	351727D77720F8F1E3DFBF3F7CBC7C0CB0D6112338AF40CEF5065D2EC102BDA9
	EFC78F1FF71F3E00024121417959390E6EEE018F0680001A9808801CDDF9EFF7
	AF1B376FBE7BFF0198D88165F77FD82D2E90D0875CF1033D3F1B360C04197E00
	C6011B2BDBDF3F7F7FFEFC09BA7D9699F90F6C9BEA7FA4E3A461A7A4FFFF0F3B
	031674BC2F580A58C4BD7B7F51909F5F4D4DED1F23F4B8A1018906800062A17F
	AA6700EFA778F2F8D1FDFB0F984187BEB13232C2E61419A1F7E431812F40449C
	620FEBFB3241AFB9FBFBEFCF1F460E0E06C4351C0CFF601B87C1F782FD039F1B
	FA1F7A022662EC1A1A1F4CE0220E58CF9C3A73464E46564A46E6EFDFBF03120D
	0001C442E7A0FF075A43C87CF3FAF557AF5FB3B0B230C26EDBFBCFF08F0976A5
	33F4F626C8A11CB0DB5B902E110405D33FD82518F03D4AE08949D0D9C2D0C38E
	A1CB26A05724412F63FB0FB9FB0EB6A5037C8AEF93A74F7EFCFCA1A4AC028C03
	88303D9B4C0001C442CFD0870C1DDFB975F3F59B376C6CAC900B11FF822F1F62
	6260445C9D8DB87C8711722527F4B249F0D9DD4C907E1824CB403A648CD03BA3
	C0CBD4FF41AF96805C37032EE221CD27A00033330BE48A3CD8F9F4A04A859585
	F5CD9BB7C0642129250D24E159813E00208098E8160140F0FBF7EF8FEFDE3E7B
	F69C9585057EE00623ECB236F891F4E003BC1921B74131426FAB810CFDFFFBF3
	F7EFAF3F7F80147C3522687FC01FE871F2BF7FFFFA0BBE861976BC3DA8C6065F
	BE01AADC418787834420C78483CFFEFB0FAAF681A6B3B2B20073E4CFEF5F812E
	445B6F416B0010404C74087A68950BBEC1FDE9F3E7AC6CACB0DE2B23ECFA9F7F
	E0AB97FE41CF60FA07BB40035A8B3242AE7FFFFDFB0FB0BDFF1BD823031DFB0C
	320D0220D392BF7EFD04C90001383EFEC1E609E01770C1CF0CFF070B5CF091ED
	D0F39F80F1F4FCF94BD0C50C1033711C894B75001080B733C80118048120D8F6
	FFDF554A691781FA032FC683214137B078997343E5890D72930EC7D81777272B
	3217B685F24F2D332F8D9B8683C1F167621354F10AC725820802CD9A0DACC4B8
	7B77535E65A0F636DDD4A445FFECA005E7A41A322CDB7B638CD94EC1B8C386BD
	7B3AC1278098E853FE0093FFAF5FBF809DDBBF7FFEC26F6DF90F5F620EBAB0FD
	1FBCDA849436E073E4FFC11531808212544F48888BF3F3F1FD07DD6CF8F73738
	C102C349809F4F58589885951552D4C04E33008738E20E33D8C5C5B02B4AC053
	3AF02B8440D5F5F76FDF7E832EC8F887968068070002881E9530242F0343EACB
	E7CFC054C6CACAF60FE9523EA4BA17721314A4C4075F3C09BB170B763339E8C6
	224101415919B96FDFBE31831B51A023D25998B9B9B8808D7A46F0842510C2AF
	5862825C96CE043FEC1E725D2EA40C62825F7E05595CF7FBFF9F4F9F3F0BB0B0
	C23B2B90AC40D37C0010402CB40E7A786A027A0698B8BE7DFDC6C7CF0ABF3912
	DC6601CFAE30415432222EAC05150BC0EA98095C3780A203B42D8091918D9D8D
	9B871B588BB280C79F2123719C5C5C403E78CBD83F68A50E0A7A48B70D7A610C
	F85A0226C4EE56E8854AF03DC6FF3F7FFA043407B2E38C6E1D02800062A275E1
	03AFCA808503371F3FB0EFFAEDDB5748B1CF08BB5C90111EDC4CE0EB02C01818
	C290A2015CAAC0EE5302A74A0E76764E4E0E9038E8AE1AF059F6ECECACA0EB20
	98C017A230436391197A921C64DC1A71AE30F4FA5546983C48FCF3972FBF7EFF
	64015F7D0377331D8A208000A2472B087ECA2D2F2FAF9090E0BBB7EF80B528F4
	8661D45D1690286064829E3E03890F68E7E81FF4322A7010B1816E6A02DFBC01
	0A3236361666164670B843A60A1861A749436ED0868FEB41231E7A4107F42644
	480BEAD5AB57224222DCDCDC2C9088443A9F97A6E10310404C74A80020210B8C
	002E2E2E5979055E3E9ED7AF5FFFF9FD1B24064AA5CCE0E0620637D861372621
	2E3746BEE81852BC30402E99018614331430011BF2CCE00B102173C490CBB5FF
	43CB77E8B98AD06B37613784426F99F9CF002CD99E3F7F2E262ACA2720C0C1C1
	C10AAEC9E9D611030820263A843E243D027D05F49E909090BA86161727E7C74F
	9F80ED7690143313524263845D87CEC008BBB407D26E07B67720B35FE09A16DC
	918260605C8049E8159090A40D8E08C4FDEF903A19DCC885DD8805ED6B005BC6
	6F5EBF111212169794141414042611C879D4741B8A000820163A943F7006301A
	383939C5C4C4809E7CF4E0C1972F9F815D26A008900B5EDB005B6DF80F31EE03
	6DAF820712FE42A71F213706037300F4AE3CD0981223F4CE5AC82425E4F66C26
	502DF21F767F1C6C1307B867C0C4C20AACB03F7FFE0CECBD494A4AF20B02DB50
	FCC0D087943FB80E7CA605000820163AE4006400C907E2E2E240F2EDAB97AFDE
	BEFDFAF52B300ED8D880B528E466D9BFFFFFC36F3DFC0F5BF1001DFF81D417C0
	B29F057409D27FC8B81A38D498919645FC878C69834B24C4B52290328B09DC30
	FBF1E327B04BC8C1CE212129059A32E3E505BA07924DE93C3C0C1040741A8C43
	BB0C01E855487EE71712FEF8FEDDC78F1FBF7FFFC60EBA8B841DD4B8048511E4
	3E35C8A43B68D4E10F30C0E109191CAC4C902B11E183976069A04AF015A3A08B
	9841775E32B380271B40001819C0E2FEC7AF9F40B38095B8A084042B070730E8
	D9C0001EF47468FB23038000C49D410A80300C048B4AA9FEFFA39528A6E9C149
	03E20BF4DED396766713483E6D49BED92EC2108A00A622A2E751EBDE0C3A4AD8
	2068138AC4267AD4375C5B49BEA66439BD7C4644EFE31A66BE2014848B8A0369
	892D8A8B9BFA345CD9576F4689C7DB0F399775E300CF2E2CF7019EF4C7E0A75B
	000DC09C30DAFD2AE0CE13288D83E7167FFCFA01ECE47EFF05AE9F810A5958C0
	430BCC8CCCE07B0EC1AB41211D54D8D40A38F898C1F906129090B572A03C03BE
	1F1B52F1B2021BAB9CA03BA9B9C0009821E0F73FA09DF54F670010400336298F
	7CAF167CEC1754D4FC015D1D065A84F2FB37B0E1024CED4036749019DC258636
	2861F32A0C88CBE2191097A0022B06703B157CDB39284B817A6AA08C056DE3C3
	533A9D0B1C4C00104083E5BC41E47289113A1E07CD1CC0988044CC1FD8D22B46
	D87CD9FFFF08CD405D906164563000DF7005199B438438FCA44BA4232F077855
	0440000DBA031F91EB09F8900064ED02244A18A12DFD7F0CA837D42117DF985C
	8899039EDE310140000DDE1337D1CA28F87811BCBCC2BC1F10EB74EE203FCD0C
	208086D291A7586FB71BBAA7C541004000310EE90D56C300000410D368100C2C
	0008A0D1081860001040A31130C0002080462360800140008D46C00003800003
	0079D22F521A610FFC0000000049454E44AE426082
	]]>
</Picture>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_PR SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_PR>

<Comment SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[Различные типы круглых столов.]]>
</Comment>

<Keywords SectVersion="1" SectionFlags="0" SubIdent="0">
<![CDATA[Предварительно установленные типы столов, ящик, коробка, полка, стили ножек, минимальное пространство]]>
</Keywords>

<CalledMacros SectVersion="2" SectionFlags="0" SubIdent="0">
	<Macro>
		<MName><![CDATA["fa_minimalspace"]]></MName>
		<MainGUID>948022D5-BA0C-4407-8518-A3B5922DF84C</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["fa_knobtyp"]]></MName>
		<MainGUID>29F83AA1-B564-436E-9586-290736E65631</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["Table01_m"]]></MName>
		<MainGUID>34AC5792-7F82-4B63-AB70-FEBD2DA716E4</MainGUID>
	</Macro>
</CalledMacros>

<Copyright SectVersion="1" SectionFlags="0" SubIdent="0">
	<Author>GRAPHISOFT</Author>
	<License>
		<Type>CC BY-ND</Type>
		<Version>3.0</Version>
	</License>
</Copyright>

</Symbol>
