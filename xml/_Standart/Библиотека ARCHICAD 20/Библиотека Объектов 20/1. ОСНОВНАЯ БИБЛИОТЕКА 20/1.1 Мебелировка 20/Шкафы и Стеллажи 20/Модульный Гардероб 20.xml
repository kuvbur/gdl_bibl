<?xml version="1.0" encoding="UTF-8"?>
<Symbol IsArchivable="false" IsPlaceable="true" MainGUID="A2CDE4AA-F966-43B2-825F-D7A23455EF99" MigrationValue="Normal" Owner="1196638531" Signature="1196644685" Version="38">
<Ancestry SectVersion="1" SectionFlags="0" SubIdent="0" Template="false">
	<MainGUID>F938E33A-329D-4A36-BE3E-85E126820996</MainGUID>
	<MainGUID>103E8D2C-8230-42E1-9597-46F84CCE28C0</MainGUID>
	<MainGUID>C76BC373-89AE-4368-A490-BB2485825242</MainGUID>
	<MainGUID>3FCE1BC2-9644-44D4-9D5F-4DBF6C762CA4</MainGUID>
</Ancestry>

<CalledMacros SectVersion="2" SectionFlags="0" SubIdent="0">
	<Macro>
		<MName><![CDATA["Resize_A_B_ZZYZX"]]></MName>
		<MainGUID>33A17ABE-882E-11D6-95A3-00039318F8B6</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["fa_minimalspace"]]></MName>
		<MainGUID>948022D5-BA0C-4407-8518-A3B5922DF84C</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["LibraryGlobals13"]]></MName>
		<MainGUID>9137124A-DDF2-4A06-A532-5FC0CE873258</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["fa_cornicetyp"]]></MName>
		<MainGUID>6354EDCE-9321-4170-82DD-48110BC4F9E7</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["fa_cabinet_legtyp"]]></MName>
		<MainGUID>2EE80734-8480-4039-BC50-3593928A2978</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["fa_warddoortyp"]]></MName>
		<MainGUID>C3FB387D-CB3E-4713-9BA9-0876E02B5378</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["ui_cabinetBase"]]></MName>
		<MainGUID>EAEDEDCA-FBDB-4B13-9DCC-2BB7981A9EC9</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["ui_cabinetDoor"]]></MName>
		<MainGUID>D75B1F07-A902-4026-9545-0E0E57C44CCD</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["ui_cabinetDrawer"]]></MName>
		<MainGUID>E600CE01-6294-4046-A9A7-650C5015B281</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["ui_cabinetKnob"]]></MName>
		<MainGUID>AB174BC3-5175-4A11-AD40-4B333DCCCD6B</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["ui_object_2DRepresentation"]]></MName>
		<MainGUID>8D378A7C-DA4B-46B3-84DD-06BE5F49D896</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["ui_object_3DRepresentation"]]></MName>
		<MainGUID>92D44D41-C0F2-4A1B-912E-C6DB0026E3AF</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["ui_object_listing"]]></MName>
		<MainGUID>5E5E7258-404A-491C-940D-0DA037D87125</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["FM_types"]]></MName>
		<MainGUID>2759D2DF-AA8E-44D1-AD1D-261581266B34</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["Object_Panel_Collection"]]></MName>
		<MainGUID>F846F2AE-D5D0-4EAA-894F-F4CAAF3737B6</MainGUID>
	</Macro>
</CalledMacros>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_3D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[

if not(gs_shadow) then shadow off
if gs_detlevel_3D_m = 2 then	! Detailed
	resol gs_resol
else
	if gs_detlevel_3D_m = 1 then ! Simple
		resol 3
		gs_resol = 6
	else
		END	! Off
	endif
endif

pen gs_cont_pen


!-----Definitions-----
unID = 1
thickness = 0.02
emptyDoorBack = 0.01
plateThicknes = 0.002
hangerWidth = 0.025
hangerOversize = 0.032
wireDiameter = 0.003/2
minWireAlpha = 85
wireMeshDivision = 0.04
wireHandle = 0.1
if iFrameType = FRAME_WIRE then gs_cabinet_mat = matSteelCabinet

if not(bKnob) then knob_d=0
if gs_knob_type_m=KNOB_STYLE_1 then knob_d=0.025
if gs_knob_type_m=KNOB_STYLE_2 then knob_d=0.025
if gs_knob_type_m=KNOB_STYLE_3 then knob_d=0.03
if gs_knob_type_m=KNOB_STYLE_4 then knob_d=0.024
if gs_knob_type_m=KNOB_STYLE_5 then knob_d=0.025
if gs_knob_type_m=KNOB_STYLE_6 then knob_d=0.025
if gs_knob_type_m=KNOB_STYLE_7 then knob_d=0.03
if gs_knob_type_m=KNOB_STYLE_8 then knob_d=0.03

	! ======================================================================
	! Wire Basket Texture
	! ======================================================================

	DIM	tmp_C4D_ChCol_Color[3]
		tmp_C4D_ChCol_Color[1] = 0.642266824085
		tmp_C4D_ChCol_Color[2] = 0.6509023444088
		tmp_C4D_ChCol_Color[3] = 0.6530612244898
	DIM	tmp_C4D_GKRGB_Color_4[3]
		tmp_C4D_GKRGB_Color_4[1] =            1
		tmp_C4D_GKRGB_Color_4[2] =            1
		tmp_C4D_GKRGB_Color_4[3] =            1
	DIM	tmp_C4D_GKRGB_Color_5[3]
		tmp_C4D_GKRGB_Color_5[1] = 0.765306122449
		tmp_C4D_GKRGB_Color_5[2] = 0.765306122449
		tmp_C4D_GKRGB_Color_5[3] = 0.765306122449
	DIM	tmp_C4D_ShNoise_Color1_6[3]
		tmp_C4D_ShNoise_Color1_6[1] = 0.6428571428571
		tmp_C4D_ShNoise_Color1_6[2] = 0.6428571428571
		tmp_C4D_ShNoise_Color1_6[3] = 0.6428571428571
	DIM	tmp_C4D_ShNoise_Color2_6[3]
		tmp_C4D_ShNoise_Color2_6[1] =            1
		tmp_C4D_ShNoise_Color2_6[2] =            1
		tmp_C4D_ShNoise_Color2_6[3] =            1
	DIM	tmp_C4D_ShNoise_RelativeScale_6[3]
		tmp_C4D_ShNoise_RelativeScale_6[1] =            1
		tmp_C4D_ShNoise_RelativeScale_6[2] =            1
		tmp_C4D_ShNoise_RelativeScale_6[3] =            1
	DIM	tmp_C4D_ChLum_Color[3]
		tmp_C4D_ChLum_Color[1] =            1
		tmp_C4D_ChLum_Color[2] =            1
		tmp_C4D_ChLum_Color[3] =            1
	DIM	tmp_C4D_ChTra_Color[3]
		tmp_C4D_ChTra_Color[1] =            1
		tmp_C4D_ChTra_Color[2] =            1
		tmp_C4D_ChTra_Color[3] =            1
	DIM	tmp_C4D_ChTra_AbsorptionColor[3]
		tmp_C4D_ChTra_AbsorptionColor[1] =            1
		tmp_C4D_ChTra_AbsorptionColor[2] =            1
		tmp_C4D_ChTra_AbsorptionColor[3] =            1
	DIM	tmp_C4D_ChRef_Color[3]
		tmp_C4D_ChRef_Color[1] =            1
		tmp_C4D_ChRef_Color[2] =            1
		tmp_C4D_ChRef_Color[3] =            1
	DIM	tmp_C4D_GKRGB_Color_9[3]
		tmp_C4D_GKRGB_Color_9[1] =            1
		tmp_C4D_GKRGB_Color_9[2] =            1
		tmp_C4D_GKRGB_Color_9[3] =            1
	DIM	tmp_C4D_GKRGB_Color_10[3]
		tmp_C4D_GKRGB_Color_10[1] =            0
		tmp_C4D_GKRGB_Color_10[2] =            0
		tmp_C4D_GKRGB_Color_10[3] =            0
	DIM	tmp_C4D_ChEnv_Color[3]
		tmp_C4D_ChEnv_Color[1] =            1
		tmp_C4D_ChEnv_Color[2] =            1
		tmp_C4D_ChEnv_Color[3] =            1
	DIM	tmp_C4D_ChFog_Color[3]
		tmp_C4D_ChFog_Color[1] =            1
		tmp_C4D_ChFog_Color[2] =            1
		tmp_C4D_ChFog_Color[3] =            1
	DIM	tmp_C4D_ShNoise_Color1_12[3]
		tmp_C4D_ShNoise_Color1_12[1] =         0.98
		tmp_C4D_ShNoise_Color1_12[2] =         0.98
		tmp_C4D_ShNoise_Color1_12[3] =         0.98
	DIM	tmp_C4D_ShNoise_Color2_12[3]
		tmp_C4D_ShNoise_Color2_12[1] =            1
		tmp_C4D_ShNoise_Color2_12[2] =            1
		tmp_C4D_ShNoise_Color2_12[3] =            1
	DIM	tmp_C4D_ShNoise_RelativeScale_12[3]
		tmp_C4D_ShNoise_RelativeScale_12[1] =            1
		tmp_C4D_ShNoise_RelativeScale_12[2] =            1
		tmp_C4D_ShNoise_RelativeScale_12[3] =            1
	DIM	tmp_C4D_ShNoise_Color1_13[3]
		tmp_C4D_ShNoise_Color1_13[1] =            0
		tmp_C4D_ShNoise_Color1_13[2] =            0
		tmp_C4D_ShNoise_Color1_13[3] =            0
	DIM	tmp_C4D_ShNoise_Color2_13[3]
		tmp_C4D_ShNoise_Color2_13[1] =            1
		tmp_C4D_ShNoise_Color2_13[2] =            1
		tmp_C4D_ShNoise_Color2_13[3] =            1
	DIM	tmp_C4D_ShNoise_RelativeScale_13[3]
		tmp_C4D_ShNoise_RelativeScale_13[1] =            1
		tmp_C4D_ShNoise_RelativeScale_13[2] =            1
		tmp_C4D_ShNoise_RelativeScale_13[3] =            1
	DIM	tmp_C4D_ChAlp_Color[3]
		tmp_C4D_ChAlp_Color[1] =            1
		tmp_C4D_ChAlp_Color[2] =            1
		tmp_C4D_ChAlp_Color[3] =            1
	DIM	tmp_C4D_ChAlp_Delta[3]
		tmp_C4D_ChAlp_Delta[1] = 0.1000000014901
		tmp_C4D_ChAlp_Delta[2] = 0.1000000014901
		tmp_C4D_ChAlp_Delta[3] = 0.1000000014901
	DIM	tmp_C4D_ChSpe_Color[3]
		tmp_C4D_ChSpe_Color[1] =            1
		tmp_C4D_ChSpe_Color[2] =            1
		tmp_C4D_ChSpe_Color[3] =            1
	DIM	tmp_C4D_ChGlo_Color[3]
		tmp_C4D_ChGlo_Color[1] =            1
		tmp_C4D_ChGlo_Color[2] =            1
		tmp_C4D_ChGlo_Color[3] =            1
	DIM	tmp_C4D_GKRGB_Color_15[3]
		tmp_C4D_GKRGB_Color_15[1] =            0
		tmp_C4D_GKRGB_Color_15[2] =            0
		tmp_C4D_GKRGB_Color_15[3] =            0
	DIM	tmp_C4D_GKRGB_Color_16[3]
		tmp_C4D_GKRGB_Color_16[1] =            1
		tmp_C4D_GKRGB_Color_16[2] =            1
		tmp_C4D_GKRGB_Color_16[3] =            1
	define material	"builtInMatWireBasket" 0,
	  0.642252,   0.650889,   0.653056,
	 0.65,  0.65,   0.9,     0,     11,     0,
	         1,          1,          1,
	         0,          0,          0,     0,
	ADDITIONAL_DATA		C4D_VER_MAIN= 1,
	C4D_VER_SUB =            0,
	C4D_ChCol_State =            1,
	C4D_ChCol_Color = tmp_C4D_ChCol_Color,
	C4D_ChCol_Brightness =          0.5,
	C4D_ChCol_Texture = "1",
	C4D_ShLayer_BlendMode_1 = "Normal",
	C4D_ShLayer_BlendStre_1 =            1,
	C4D_ShLayer_BlurOffset_1 =            0,
	C4D_ShLayer_BlurScale_1 =            0,
	C4D_ShLayer_Shaders_1 = "2,6",
	C4D_ShFresnel_BlendMode_2 = "Multiply",
	C4D_ShFresnel_BlendStre_2 =            1,
	C4D_ShFresnel_BlurOffset_2 =            0,
	C4D_ShFresnel_BlurScale_2 =            0,
	C4D_ShFresnel_UseBump_2 =            1,
	C4D_ShFresnel_Render_2 = "FrontAndBack",
	C4D_ShFresnel_Gradient_2 = "3",
	C4D_GradientRGB_Interpol_3 = "SmoothKnot",
	C4D_GradientRGB_Knots_3 = "4,5",
	C4D_GKRGB_Color_4 = tmp_C4D_GKRGB_Color_4,
	C4D_GKRGB_Intensity_4 =            1,
	C4D_GKRGB_Position_4 =            1,
	C4D_GKRGB_Bias_4 =          0.5,
	C4D_GKRGB_Color_5 = tmp_C4D_GKRGB_Color_5,
	C4D_GKRGB_Intensity_5 =            1,
	C4D_GKRGB_Position_5 =       0.0022,
	C4D_GKRGB_Bias_5 =          0.5,
	C4D_ShFresnel_Physical_2 =            0,
	C4D_ShFresnel_IOR_2 =      1.33283,
	C4D_ShFresnel_Preset_2 = "Water",
	C4D_ShFresnel_Invert_2 =            0,
	C4D_ShNoise_BlendMode_6 = "Normal",
	C4D_ShNoise_BlendStre_6 =            1,
	C4D_ShNoise_BlurOffset_6 =            0,
	C4D_ShNoise_BlurScale_6 =            0,
	C4D_ShNoise_Color1_6 = tmp_C4D_ShNoise_Color1_6,
	C4D_ShNoise_Color2_6 = tmp_C4D_ShNoise_Color2_6,
	C4D_ShNoise_Seed_6 =          610,
	C4D_ShNoise_Noise_6 = "Turbulence",
	C4D_ShNoise_Octaves_6 =            5,
	C4D_ShNoise_Space_6 = "Texture",
	C4D_ShNoise_GlobalScale_6 = 0.002000000094995,
	C4D_ShNoise_RelativeScale_6 = tmp_C4D_ShNoise_RelativeScale_6,
	C4D_ShNoise_Absolute_6 =            0,
	C4D_ShNoise_Cycles_6 =            0,
	C4D_ShNoise_LowClip_6 =            0,
	C4D_ShNoise_HighClip_6 =            1,
	C4D_ShNoise_Brightness_6 =            0,
	C4D_ShNoise_Contrast_6 =            0,
	C4D_ChCol_MixMode = "Multiply",
	C4D_ChCol_MixStrength =            1,
	C4D_ChDif_State =            0,
	C4D_ChDif_Brightness =            1,
	C4D_ChDif_Luminance =            0,
	C4D_ChDif_Specular =            1,
	C4D_ChDif_Reflection =            0,
	C4D_ChDif_MixMode = "Normal",
	C4D_ChDif_MixStrength =            1,
	C4D_ChLum_State =            0,
	C4D_ChLum_Color = tmp_C4D_ChLum_Color,
	C4D_ChLum_Brightness =            1,
	C4D_ChLum_MixMode = "Normal",
	C4D_ChLum_MixStrength =            1,
	C4D_ChTra_State =            0,
	C4D_ChTra_Color = tmp_C4D_ChTra_Color,
	C4D_ChTra_Brightness =            1,
	C4D_ChTra_Refraction =            1,
	C4D_ChTra_InternalReflections =            0,
	C4D_ChTra_ExitReflection =            1,
	C4D_ChTra_FresnelReflectivity =            1,
	C4D_ChTra_Additive =            0,
	C4D_ChTra_MixMode = "Normal",
	C4D_ChTra_MixStrength =            1,
	C4D_ChTra_AbsorptionColor = tmp_C4D_ChTra_AbsorptionColor,
	C4D_ChTra_AbsorptionDistance =          100,
	C4D_ChTra_Blurriness =            0,
	C4D_ChTra_MinSamples =            5,
	C4D_ChTra_MaxSamples =          128,
	C4D_ChTra_Accuracy =          0.5,
	C4D_ChRef_State =            1,
	C4D_ChRef_Color = tmp_C4D_ChRef_Color,
	C4D_ChRef_Brightness =            1,
	C4D_ChRef_Additive =            1,
	C4D_ChRef_Texture = "7",
	C4D_ShFresnel_BlendMode_7 = "Normal",
	C4D_ShFresnel_BlendStre_7 =            1,
	C4D_ShFresnel_BlurOffset_7 =            0,
	C4D_ShFresnel_BlurScale_7 =            0,
	C4D_ShFresnel_UseBump_7 =            1,
	C4D_ShFresnel_Render_7 = "FrontAndBack",
	C4D_ShFresnel_Gradient_7 = "8",
	C4D_GradientRGB_Interpol_8 = "SmoothKnot",
	C4D_GradientRGB_Knots_8 = "9,10",
	C4D_GKRGB_Color_9 = tmp_C4D_GKRGB_Color_9,
	C4D_GKRGB_Intensity_9 =            1,
	C4D_GKRGB_Position_9 =            0,
	C4D_GKRGB_Bias_9 =          0.5,
	C4D_GKRGB_Color_10 = tmp_C4D_GKRGB_Color_10,
	C4D_GKRGB_Intensity_10 =            1,
	C4D_GKRGB_Position_10 =            1,
	C4D_GKRGB_Bias_10 =          0.5,
	C4D_ShFresnel_Physical_7 =            1,
	C4D_ShFresnel_IOR_7 =          2.5,
	C4D_ShFresnel_Preset_7 = "Custom",
	C4D_ShFresnel_Invert_7 =            0,
	C4D_ChRef_MixMode = "Multiply",
	C4D_ChRef_MixStrength =            1,
	C4D_ChRef_Blurriness =          0.2,
	C4D_ChRef_MinSamples =            5,
	C4D_ChRef_MaxSamples =          128,
	C4D_ChRef_Accuracy =          0.5,
	C4D_ChEnv_State =            0,
	C4D_ChEnv_Color = tmp_C4D_ChEnv_Color,
	C4D_ChEnv_Brightness =            1,
	C4D_ChEnv_MixMode = "Multiply",
	C4D_ChEnv_MixStrength =            1,
	C4D_ChEnv_TilesX =            1,
	C4D_ChEnv_TilesY =            1,
	C4D_ChEnv_Exclusive =            1,
	C4D_ChFog_State =            0,
	C4D_ChFog_Color = tmp_C4D_ChFog_Color,
	C4D_ChFog_Brightness =            1,
	C4D_ChFog_Distance =           10,
	C4D_ChBum_State =            1,
	C4D_ChBum_Strength =         0.02,
	C4D_ChBum_MipFalloff =            1,
	C4D_ChBum_Texture = "11",
	C4D_ShLayer_BlendMode_11 = "Normal",
	C4D_ShLayer_BlendStre_11 =            1,
	C4D_ShLayer_BlurOffset_11 =            0,
	C4D_ShLayer_BlurScale_11 =            0,
	C4D_ShLayer_Shaders_11 = "12,13",
	C4D_ShNoise_BlendMode_12 = "Multiply",
	C4D_ShNoise_BlendStre_12 =            1,
	C4D_ShNoise_BlurOffset_12 =            0,
	C4D_ShNoise_BlurScale_12 =            0,
	C4D_ShNoise_Color1_12 = tmp_C4D_ShNoise_Color1_12,
	C4D_ShNoise_Color2_12 = tmp_C4D_ShNoise_Color2_12,
	C4D_ShNoise_Seed_12 =          665,
	C4D_ShNoise_Noise_12 = "Noise",
	C4D_ShNoise_Octaves_12 =            5,
	C4D_ShNoise_Space_12 = "UV",
	C4D_ShNoise_GlobalScale_12 =         0.01,
	C4D_ShNoise_RelativeScale_12 = tmp_C4D_ShNoise_RelativeScale_12,
	C4D_ShNoise_Absolute_12 =            0,
	C4D_ShNoise_Cycles_12 =            0,
	C4D_ShNoise_LowClip_12 =            0,
	C4D_ShNoise_HighClip_12 =            1,
	C4D_ShNoise_Brightness_12 =            0,
	C4D_ShNoise_Contrast_12 =            0,
	C4D_ShNoise_BlendMode_13 = "Normal",
	C4D_ShNoise_BlendStre_13 =            1,
	C4D_ShNoise_BlurOffset_13 =            0,
	C4D_ShNoise_BlurScale_13 =            0,
	C4D_ShNoise_Color1_13 = tmp_C4D_ShNoise_Color1_13,
	C4D_ShNoise_Color2_13 = tmp_C4D_ShNoise_Color2_13,
	C4D_ShNoise_Seed_13 =          665,
	C4D_ShNoise_Noise_13 = "Turbulence",
	C4D_ShNoise_Octaves_13 =            5,
	C4D_ShNoise_Space_13 = "UV",
	C4D_ShNoise_GlobalScale_13 =            8,
	C4D_ShNoise_RelativeScale_13 = tmp_C4D_ShNoise_RelativeScale_13,
	C4D_ShNoise_Absolute_13 =            0,
	C4D_ShNoise_Cycles_13 =            0,
	C4D_ShNoise_LowClip_13 =            0,
	C4D_ShNoise_HighClip_13 =            1,
	C4D_ShNoise_Brightness_13 =            0,
	C4D_ShNoise_Contrast_13 = 0.3199999332428,
	C4D_ChNor_State =            0,
	C4D_ChNor_Strength =            1,
	C4D_ChNor_Method = "Tangent",
	C4D_ChNor_FlipX =            0,
	C4D_ChNor_FlipY =            0,
	C4D_ChNor_FlipZ =            0,
	C4D_ChNor_SwapYZ =            0,
	C4D_ChAlp_State =            0,
	C4D_ChAlp_Color = tmp_C4D_ChAlp_Color,
	C4D_ChAlp_Delta = tmp_C4D_ChAlp_Delta,
	C4D_ChAlp_Invert =            0,
	C4D_ChAlp_Soft =            1,
	C4D_ChAlp_ImageAlpha =            1,
	C4D_ChAlp_PreMultiplied =            0,
	C4D_ChSpe_State =            1,
	C4D_ChSpe_Color = tmp_C4D_ChSpe_Color,
	C4D_ChSpe_Brightness =            1,
	C4D_ChSpe_MixMode = "Normal",
	C4D_ChSpe_MixStrength =            1,
	C4D_ChSpe_Mode = "Colored",
	C4D_ChSpe_Width =          0.7,
	C4D_ChSpe_Height =            2,
	C4D_ChSpe_Falloff =            0,
	C4D_ChSpe_InnerWidth =            0,
	C4D_ChGlo_State =            0,
	C4D_ChGlo_Color = tmp_C4D_ChGlo_Color,
	C4D_ChGlo_Brightness =            1,
	C4D_ChGlo_InnerStrength =            1,
	C4D_ChGlo_OuterStrength =            5,
	C4D_ChGlo_Radius =           10,
	C4D_ChGlo_Random =            0,
	C4D_ChGlo_Frequency =            1,
	C4D_ChGlo_UseMatColor =            1,
	C4D_ChDis_State =            0,
	C4D_ChDis_Strength =            1,
	C4D_ChDis_Height =            5,
	C4D_ChDis_Type = "IntensityCentered",
	C4D_ChDis_SubDivision =            0,
	C4D_ChDis_Level =            4,
	C4D_ChDis_RoundGeometry =            0,
	C4D_ChDis_RoundContour =            1,
	C4D_ChDis_MapRounded =            1,
	C4D_ChDis_MapResult =            0,
	C4D_ChDis_KeepEdges =            1,
	C4D_ChDis_BestDistribution =            1,
	C4D_ChGra_State =            0,
	C4D_ChGra_Color = "14",
	C4D_GradientRGB_Interpol_14 = "SmoothKnot",
	C4D_GradientRGB_Knots_14 = "15,16",
	C4D_GKRGB_Color_15 = tmp_C4D_GKRGB_Color_15,
	C4D_GKRGB_Intensity_15 =            1,
	C4D_GKRGB_Position_15 =            0,
	C4D_GKRGB_Bias_15 =          0.5,
	C4D_GKRGB_Color_16 = tmp_C4D_GKRGB_Color_16,
	C4D_GKRGB_Intensity_16 =            1,
	C4D_GKRGB_Position_16 =            1,
	C4D_GKRGB_Bias_16 =          0.5,
	C4D_ChGra_MixStrength =          0.5,
	C4D_ChGra_Density =            1,
	C4D_ChGra_Length =          0.1,
	C4D_ChGra_Width =        0.005,
	C4D_ChGra_Crinkle =          0.1,
	C4D_ChGra_Bend =          0.6,
	C4D_ChGra_Wetness =         0.05,
	C4D_ChIll_GenerateGI =            1,
	C4D_ChIll_GenGIStrength =            1,
	C4D_ChIll_GenGISaturat =            1,
	C4D_ChIll_ReceiveGI =            1,
	C4D_ChIll_RecGIStrength =            1,
	C4D_ChIll_RecGISaturat =            1,
	C4D_ChIll_GIPortal =            0,
	C4D_ChIll_GILight =            0,
	C4D_ChIll_GenerateCaustics =            1,
	C4D_ChIll_GenCausticsStrength =            1,
	C4D_ChIll_ReceiveCaustics =            1,
	C4D_ChIll_RecCausticsStrength =            1,
	C4D_ChIll_Radius =          0.1,
	C4D_ChIll_CausticsSamples =          100,
	C4D_ChIll_Model = "Blinn",
	C4D_ChIll_DiffuseFalloff =            0,
	C4D_ChIll_DiffuseLevel =            1,
	C4D_ChIll_Roughness =          0.5


! ==============================================================================
! Hotspots
! ==============================================================================
call "Resize_A_B_ZZYZX" parameters ALL

hotspot a/2, b, ZZYZX, unID : unID = unID + 1
hotspot a/2, b, 0, unID 	: unID = unID + 1

!-----Base Height-----
if bBase and iFrameType <> FRAME_WIRE then
	hotspot  0, 0,  0,    unID, leg_h, 1+128				: unID=unID+1
	hotspot  0, 0, -1, 	  unID, leg_h, 3					: unID=unID+1
	hotspot  0, 0, leg_h, unID, leg_h, 2					: unID=unID+1

	hotspot  0, b,  0,    unID, leg_h, 1+128				: unID=unID+1
	hotspot  0, b, -1, 	  unID, leg_h, 3					: unID=unID+1
	hotspot  0, b, leg_h, unID, leg_h, 2					: unID=unID+1

	hotspot  a, b,  0,    unID, leg_h, 1+128				: unID=unID+1
	hotspot  a, b, -1, 	  unID, leg_h, 3					: unID=unID+1
	hotspot  a, b, leg_h, unID, leg_h, 2					: unID=unID+1

	hotspot  a, 0,  0,    unID, leg_h, 1+128				: unID=unID+1
	hotspot  a, 0, -1, 	  unID, leg_h, 3					: unID=unID+1
	hotspot  a, 0, leg_h, unID, leg_h, 2					: unID=unID+1
endif

for i = 1 to nModule
	if i > 1 then
		startModulX = frameWidth
		for kk = 1 to i-1
			startModulX = startModulX + moduleWidth[kk]
		next kk
		tempModulWidth = moduleWidth[i]

		if i = 2 then
			hotspot  startModulX+tempModulWidth, 0, leg_h, unID											: unID=unID+1
			hotspot  startModulX+tempModulWidth, 0, ZZYZX, unID											: unID=unID+1
			if not(bUniform) then
				hotspot  startModulX+tempModulWidth, 0, ZZYZX/2, unID, modulWidth02, 1					: unID=unID+1
				hotspot  startModulX+tempModulWidth+1, 0, ZZYZX/2, unID, modulWidth02, 3				: unID=unID+1
				hotspot  startModulX, 0, ZZYZX/2, unID, modulWidth02, 2									: unID=unID+1
			endif

			if bDivision02 then
				hotspot  startModulX+tempModulWidth/2, 0,  0, unID, divisionHeight02, 1+128				: unID=unID+1
				hotspot  startModulX+tempModulWidth/2, 0, -1, unID, divisionHeight02, 3					: unID=unID+1
				hotspot  startModulX+tempModulWidth/2, 0, divisionHeight02, unID, divisionHeight02, 2	: unID=unID+1
			endif
		endif

		if i = 3 then
			hotspot  startModulX+tempModulWidth, 0, leg_h, unID											: unID=unID+1
			hotspot  startModulX+tempModulWidth, 0, ZZYZX, unID											: unID=unID+1
			if not(bUniform) then
				hotspot  startModulX+tempModulWidth, 0, ZZYZX/2, unID, modulWidth03, 1+128				: unID=unID+1
				hotspot  startModulX+tempModulWidth+1, 0, ZZYZX/2, unID, modulWidth03, 3				: unID=unID+1
				hotspot  startModulX, 0, ZZYZX/2, unID, modulWidth03, 2									: unID=unID+1
			endif

			if bDivision03 then
				hotspot  startModulX+tempModulWidth/2, 0,  0, unID, divisionHeight03, 1+128				: unID=unID+1
				hotspot  startModulX+tempModulWidth/2, 0, -1, unID, divisionHeight03, 3					: unID=unID+1
				hotspot  startModulX+tempModulWidth/2, 0, divisionHeight03, unID, divisionHeight03, 2	: unID=unID+1
			endif
		endif

		if i = 4 then
			hotspot  startModulX+tempModulWidth, 0, leg_h, unID											: unID=unID+1
			hotspot  startModulX+tempModulWidth, 0, ZZYZX, unID											: unID=unID+1
			if not(bUniform) then
				hotspot  startModulX+tempModulWidth, 0, ZZYZX/2, unID, modulWidth04, 1+128				: unID=unID+1
				hotspot  startModulX+tempModulWidth+1, 0, ZZYZX/2, unID, modulWidth04, 3				: unID=unID+1
				hotspot  startModulX, 0, ZZYZX/2, unID, modulWidth04, 2									: unID=unID+1
			endif

			if bDivision04 then
				hotspot  startModulX+tempModulWidth/2, 0,  0, unID, divisionHeight04, 1+128				: unID=unID+1
				hotspot  startModulX+tempModulWidth/2, 0, -1, unID, divisionHeight04, 3					: unID=unID+1
				hotspot  startModulX+tempModulWidth/2, 0, divisionHeight04, unID, divisionHeight04, 2	: unID=unID+1
			endif
		endif

		if i = 5 then
			hotspot  startModulX+tempModulWidth, 0, leg_h, unID											: unID=unID+1
			hotspot  startModulX+tempModulWidth, 0, ZZYZX, unID											: unID=unID+1
			if not(bUniform) then
				hotspot  startModulX+tempModulWidth, 0, ZZYZX/2, unID, modulWidth05, 1+128				: unID=unID+1
				hotspot  startModulX+tempModulWidth+1, 0, ZZYZX/2, unID, modulWidth05, 3				: unID=unID+1
				hotspot  startModulX, 0, ZZYZX/2, unID, modulWidth05, 2									: unID=unID+1
			endif

			if bDivision05 then
				hotspot  startModulX+tempModulWidth/2, 0,  0, unID, divisionHeight05, 1+128				: unID=unID+1
				hotspot  startModulX+tempModulWidth/2, 0, -1, unID, divisionHeight05, 3					: unID=unID+1
				hotspot  startModulX+tempModulWidth/2, 0, divisionHeight05, unID, divisionHeight05, 2	: unID=unID+1
			endif
		endif

		if i = 6 then
			hotspot  startModulX+tempModulWidth, 0, leg_h,unID											: unID=unID+1
			hotspot  startModulX+tempModulWidth, 0, ZZYZX, unID											: unID=unID+1
			if not(bUniform) then
				hotspot  startModulX+tempModulWidth, 0, ZZYZX/2, unID, modulWidth06, 1+128				: unID=unID+1
				hotspot  startModulX+tempModulWidth+1, 0, ZZYZX/2, unID, modulWidth06, 3				: unID=unID+1
				hotspot  startModulX, 0, ZZYZX/2, unID, modulWidth06, 2									: unID=unID+1
			endif

			if bDivision06 then
				hotspot  startModulX+tempModulWidth/2, 0,  0, unID, divisionHeight06, 1+128				: unID=unID+1
				hotspot  startModulX+tempModulWidth/2, 0, -1, unID, divisionHeight06, 3					: unID=unID+1
				hotspot  startModulX+tempModulWidth/2, 0, divisionHeight06, unID, divisionHeight06, 2	: unID=unID+1
			endif
		endif
	else
		startModulX = 0
		tempModulWidth = moduleWidth[i] + frameWidth
		hotspot  startModulX+tempModulWidth, 0, leg_h, unID												: unID=unID+1
		hotspot  startModulX+tempModulWidth, 0, ZZYZX, unID												: unID=unID+1

		if bDivision01 then
			hotspot  startModulX+tempModulWidth/2, 0,  0, unID, divisionHeight01, 1+128					: unID=unID+1
			hotspot  startModulX+tempModulWidth/2, 0, -1, unID, divisionHeight01, 3						: unID=unID+1
			hotspot  startModulX+tempModulWidth/2, 0, divisionHeight01, unID, divisionHeight01, 2		: unID=unID+1
		endif
	endif
next i


! ==============================================================================
! Base
! ==============================================================================
corOverhang  = 0
corOverhangL = 0
corOverhangR = 0
cabinetStartX = 0
if abs(cot)<eps then cooh=0
if not(bCornice) then
	cot=0
	cooh=0
else
	if gs_lining_m=1 then
		corOverhangL = cooh
		corOverhangR = cooh
		cabinetStartX = -cooh
	endif
	if gs_lining_m=2 then
		corOverhangR = cooh
		corOverhangL = 0
		cabinetStartX = 0
	endif
	if gs_lining_m=3 then
		corOverhangR = 0
		corOverhangL = cooh
		cabinetStartX = -cooh
	endif
endif
corOverhang = corOverhangL+corOverhangR


! ----- Frame -----
panelWidth = B-(iFrameType = FRAME_SOLID_BACK)*frameWidth-2*doorThickness*(nDoor>1) - doorThickness*(iFrameType <> FRAME_WIRE) - emptyDoorBack*(iFrameType <> FRAME_WIRE)
panelHeight = ZZYZX-cot-leg_h-frameWidth-frameWidth*(iFrameType <> FRAME_WIRE and leg_h > 0)
if iFrameType = FRAME_WIRE then
	gosub "steelFrames"
else
	gosub "woodFrames"
endif

! -----Panels -----
addx frameWidth
for i = 1 to nModule-1
	addx moduleWidth[i]
	gosub "panels"
next i
del nModule

! -----Divisions -----
addx frameWidth
bPreDiv = 0
for i = 1 to nModule
	tempModulWidth = moduleWidth[i]-frameWidth
	if iFrameType = FRAME_WIRE then
		addz frameWidth
		cprism_ gs_cabinet_mat, gs_cabinet_mat, gs_cabinet_mat,
			4, frameWidth,
			0,b,15,
			0, b-frameWidth,15,
			tempModulWidth, b-frameWidth,15,
			tempModulWidth, b, 15
		gosub "textureHorizontal_01"
		del 1
	endif
	if (moduleMatrix[1+(i-1)*nElement][1]) then

		divisionHeight = moduleMatrix[1+(i-1)*nElement][2]
		gosub "divisions"
		bPreDiv = 1
	else
		bPreDiv = 0
	endif
	addx moduleWidth[i]
next i
del nModule+1


add (a+corOverhang)/2-corOverhangL, b, 0
! ----- Cornices -----
if bCornice then
	mulx -1
	addz zzyzx-cot
	CALL "fa_cornicetyp" PARAMETERS ALL A=A+corOverhang, B=B+cooh, side_overhang = cooh
	del 2
endif

! ----- Legs -----
if bBase then
	CALL "fa_cabinet_legtyp" PARAMETERS A = A+corOverhang,
										B = B+cooh,
										gs_detlevel_3D_m = gs_detlevel_3D_m,
										gs_leg_type_m = gs_leg_type_m,
										leg_h = leg_h,
										leg_w = leg_w,
										cooh=cooh,
										side_overhang = cooh,
										gs_resol = gs_resol,
										gs_leg_mat = gs_leg_mat,
										gs_cont_pen = gs_cont_pen,
										gs_lining_m = gs_lining_m
endif

del 1


! ==============================================================================
! Interior Fittings
! ==============================================================================
addx frameWidth
for i = 1 to nModule
	tempModulWidth = moduleWidth[i]-frameWidth
	bDivision = moduleMatrix[1+(i-1)*nElement][1]
	if bDivision then															!! Horizontal division
		divisionHeight = moduleMatrix[1+(i-1)*nElement][2]

		! Above
		addz divisionHeight
		AboveOrUnder = 1
		tempModulHeight = ZZYZX-cot-frameWidth - divisionHeight
		gosub "interior"
		del 1

		! Under
		addz leg_h+frameWidth*(iFrameType <> FRAME_WIRE and leg_h > 0)
		AboveOrUnder = 2
		tempModulHeight = divisionHeight-leg_h-frameWidth*(iFrameType <> FRAME_WIRE and leg_h > 0) - frameWidth
		gosub "interior"
		del 1
	else																		!! No Division
		addz leg_h+frameWidth*(iFrameType <> FRAME_WIRE and leg_h > 0)
		AboveOrUnder = 1
		tempModulHeight = panelHeight
		gosub "interior"
		del 1
	endif
	addx moduleWidth[i]
next i
del nModule+1



! ==============================================================================
! Door Settings
! ==============================================================================
if iDoorType <> DOOR_TYPE_NONE then

	! Rail
	doorHeight = panelHeight + frameWidth*(iFrameType = FRAME_WIRE)
	doorFullWidth = A-2*frameWidth*(iFrameType <> FRAME_WIRE)
	doorOffsetX = frameWidth*(iFrameType <> FRAME_WIRE)
	doorOffsetZ = leg_h+frameWidth*(iFrameType <> FRAME_WIRE and leg_h > 0)

	rotx 90
	add doorOffsetX, doorOffsetZ, -2*doorThickness - emptyDoorBack*(iFrameType <> FRAME_WIRE)
	cprism_ matSteelCabinet, matSteelCabinet, matSteelCabinet,
			10, 2*doorThickness,
			0, 0, 15,
			doorFullWidth, 0, 15,
			doorFullWidth, doorHeight, 15,
			0, doorHeight, 15,
			0, 0, -1,
			railThickness, railThickness, 15,
			doorFullWidth-railThickness, railThickness, 15,
			doorFullWidth-railThickness, doorHeight-railThickness, 15,
			railThickness, doorHeight-railThickness, 15,
			railThickness, railThickness, -1
	del 2

	! Door
	bMirrored = 0
	gs_full_edit = 0
	bFormMirror = 0
	bSliding = 1
	bAngleEdit = 0
	opening = 0

	doorHeight = doorHeight - 2*railThickness
	doorFullWidth = doorFullWidth - 2*railThickness

	add frameWidth*(iFrameType <> FRAME_WIRE)+railThickness, emptyDoorBack*(iFrameType <> FRAME_WIRE)+doorThickness,doorOffsetZ+railThickness
	for i=1 to nDoor
		if i = 1 then opening = openingDoor1
		if i = 2 then opening = openingDoor2
		if i = 3 then opening = openingDoor3
		if ceil(nDoor/2)=nDoor/2 then
			if ceil(i/2)<>i/2 then
				bMirrored = 1
				bFormMirror = 0
				slidingOffset =  doorThickness
				knobOffset = -knob_d
			else
				bMirrored = 0
				if iDoorStyle = 18 and nDoor= 2 then
					bFormMirror = 0
				else
					bFormMirror = 1
				endif
				slidingOffset = 0
				knobOffset = -knob_d - doorThickness
			endif
		else
			if ceil(i/2)<>i/2 then
				bMirrored = 0
				if i = 1 then bMirrored = 1
				bFormMirror = 0
				slidingOffset =  doorThickness
				knobOffset = -knob_d
			else
				bMirrored = 1
				bFormMirror = 1
				slidingOffset = 0
				knobOffset = -knob_d - doorThickness
			endif
		endif
		if iDoorStyle = 16 then bFormMirror = 0

		doorTempWidth = doorFullWidth/nDoor

		doordirection = 0
		if not(bMirrored) then
			hostspotStart = doorTempWidth-knob_pl_x
			doordirection = -1
		else
			hostspotStart = knob_pl_x
			doordirection = 1
		endif
		openingoffset = doorTempWidth * (opening/100) * doordirection

		if i = 1 then
			hotspot  hostspotStart, knobOffset, knob_pl_y,   			unID, openingDoorLength1, 1+128					: unID=unID+1
			hotspot  hostspotStart-doordirection, knobOffset, knob_pl_y, unID, openingDoorLength1, 3					: unID=unID+1
			hotspot  hostspotStart+openingoffset, knobOffset, knob_pl_y, unID, openingDoorLength1, 2, openingDoor1		: unID=unID+1
		endif

		if i = 2 then
			hotspot  hostspotStart, knobOffset, knob_pl_y,   			unID, openingDoorLength2, 1+128					: unID=unID+1
			hotspot  hostspotStart-doordirection, knobOffset, knob_pl_y, unID, openingDoorLength2, 3					: unID=unID+1
			hotspot  hostspotStart+openingoffset, knobOffset, knob_pl_y, unID, openingDoorLength2, 2, openingDoor2		: unID=unID+1
		endif

		if i = 3 then
			hotspot  hostspotStart, knobOffset, knob_pl_y,   			unID, openingDoorLength3, 1+128					: unID=unID+1
			hotspot  hostspotStart-doordirection, knobOffset, knob_pl_y, unID, openingDoorLength3, 3					: unID=unID+1
			hotspot  hostspotStart+openingoffset, knobOffset, knob_pl_y, unID, openingDoorLength3, 2, openingDoor3		: unID=unID+1
		endif

		add openingoffset, slidingOffset, 0

		if iDoorStyle = 14 or iDoorStyle = 15 then
			_matDoorDecor1 = matDoorInset2
		else
			_matDoorDecor1 = matDoorInset1
		endif

		call "fa_warddoortyp" parameters all	bNotMacro		= 0,
												gs_full_edit	= gs_full_edit,
												bAngleEdit		= 0,
												doorAngle3D		= 0,
												bMirrored		= bMirrored,
												bFormMirror		= bFormMirror,
												doorFrameWidth	= doorFrameWidth,
												bSliding		= bSliding,
												cabdoortyp_unID	= unID,
												doorWidth		= doorTempWidth,
												doorHeight		= doorHeight,
												bBevel			= bBevel,
												matDoorGlass	= matDoorInset1,
												matDoorMirror	= matDoorInset1,
												matDoorDecor1	= _matDoorDecor1,
												matDoorDecor2	= matDoorInset2,
												matDoorFrame	= matDoorFrame,
												returned_parameters cabdoortyp_unID
		unID = cabdoortyp_unID
		del 1
		addx doorTempWidth
	next i
	del nDoor+1
endif


! ======================================================================
! END
! ======================================================================

END

! ======================================================================
! SubRoutines
! ======================================================================
"interior":
	iInteriorType = moduleMatrix[2+(i-1)*nElement][AboveOrUnder]
	tModulWidth = tempModulWidth

	if iInteriorType = INTERIOR_SHELF then
		nTempNumber = moduleMatrix[3+(i-1)*nElement][AboveOrUnder]
		gosub "shelves"
	endif

	if iInteriorType = INTERIOR_DRAWER then
		nTempNumber = moduleMatrix[4+(i-1)*nElement][AboveOrUnder]
		gosub "drawers"
	endif

	if iInteriorType = INTERIOR_DRAWERFRONT then
		nTempNumber = moduleMatrix[5+(i-1)*nElement][AboveOrUnder]
		gosub "drawers"
	endif

	if iInteriorType = INTERIOR_WIRE then
		nTempNumber = moduleMatrix[6+(i-1)*nElement][AboveOrUnder]
		gosub "wireBaskets"
	endif

	if iInteriorType = INTERIOR_HANGER then
		nTempNumber = moduleMatrix[7+(i-1)*nElement][AboveOrUnder]
		gosub "hangers"
	endif
return



! ======================================================================
! Frames Macro
! ======================================================================
"woodFrames":
	addz leg_h
	rotx 90
	addz -b

	if (iFrameType = FRAME_SOLID_BACK) then
		cprism_ gs_cabinet_mat, gs_cabinet_mat, gs_cabinet_mat,
				4, frameWidth,
				a-frameWidth, frameWidth*(leg_h > 0),14+(leg_h < eps),
				frameWidth, frameWidth*(leg_h > 0),14,
				frameWidth, zzyzx-cot-leg_h-frameWidth,14,
				a-frameWidth, zzyzx-cot-leg_h-frameWidth,14
		gosub "textureHorizontal_01"
	endif

	bBack = (iFrameType = FRAME_SOLID)
	if leg_h > 0 then
		cprism_ gs_cabinet_mat, gs_cabinet_mat, gs_cabinet_mat,
			10, B,
			a,0,15,
			0,0,15,
			0, zzyzx-cot-leg_h,15,
			a, zzyzx-cot-leg_h,15,
			a, 0, -1,
			a-frameWidth, frameWidth,14+bBack,
			frameWidth, frameWidth,14+bBack,
			frameWidth, zzyzx-cot-leg_h-frameWidth,14+bBack,
			a-frameWidth, zzyzx-cot-leg_h-frameWidth,14+bBack,
			a-frameWidth, frameWidth,-1

		gosub "textureHorizontal_01"
	else
		cprism_ gs_cabinet_mat, gs_cabinet_mat, gs_cabinet_mat,
			8, B,
			0,0,15,
			0, zzyzx-cot,15,
			a, zzyzx-cot,15,
			a, 0, 15,
			a-frameWidth, 0, 14+bBack,
			a-frameWidth, zzyzx-cot-frameWidth, 14+bBack,
			frameWidth, zzyzx-cot-frameWidth,14+bBack,
			frameWidth, 0, 15

		gosub "textureHorizontal_01"
	endif
	del 3
return


"steelFrames":
	!Horizontal beam
	addz panelHeight
	cprism_ gs_cabinet_mat, gs_cabinet_mat, gs_cabinet_mat,
		4, frameWidth,
		0, b,15,
		a, b, 15,
		a, b-frameWidth, 15,
		0, b-frameWidth, 15
	gosub "textureHorizontal_01"

	cprism_ gs_cabinet_mat, gs_cabinet_mat, gs_cabinet_mat,
		4, frameWidth,
		0, b-panelWidth,15,
		a, b-panelWidth, 15,
		a, b-panelWidth+frameWidth, 15,
		0, b-panelWidth+frameWidth, 15
	gosub "textureHorizontal_01"

	del 1

	addx frameWidth
	gosub "steelFrame"
	addx a-frameWidth
	gosub "steelFrame"
	del 2
return

"steelFrame":
	addy b
	cprism_ gs_cabinet_mat, gs_cabinet_mat, gs_cabinet_mat,
		4, panelHeight,
		0,0,15,
		-frameWidth, 0, 15,
		-frameWidth, -frameWidth, 15,
		0, -frameWidth, 15
	gosub "textureVertical_01"

	cprism_ gs_cabinet_mat, gs_cabinet_mat, gs_cabinet_mat,
		4, panelHeight,
		0,-panelWidth,15,
		-frameWidth, -panelWidth, 15,
		-frameWidth, -panelWidth+frameWidth, 15,
		0, -panelWidth+frameWidth, 15
	gosub "textureVertical_01"

	addz panelHeight
	cprism_ gs_cabinet_mat, gs_cabinet_mat, gs_cabinet_mat,
		4, frameWidth,
		0,-frameWidth,15,
		-frameWidth, -frameWidth, 15,
		-frameWidth, -panelWidth+frameWidth, 15,
		0, -panelWidth+frameWidth, 15
	gosub "textureVertical_02"
	del 1

	addz frameWidth
	cprism_ gs_cabinet_mat, gs_cabinet_mat, gs_cabinet_mat,
		4, frameWidth,
		0,-frameWidth,15,
		-frameWidth, -frameWidth, 15,
		-frameWidth, -panelWidth+frameWidth, 15,
		0, -panelWidth+frameWidth, 15
	gosub "textureVertical_02"
	del 1

	del 1
return


! ======================================================================
! Panels Macro
! ======================================================================
"panels":
	if (iFrameType = FRAME_WIRE) then
		gosub "steelFrame"
	else
		add 0, B-(iFrameType = FRAME_SOLID_BACK)*frameWidth, leg_h + frameWidth*(leg_h > 0)
		cprism_ gs_cabinet_mat, gs_cabinet_mat, gs_cabinet_mat,
			4, panelHeight,
			0,0,15,
			0, -panelWidth,15,
			-frameWidth, -panelWidth,15,
			-frameWidth, 0, 15
		gosub "textureVertical_01"
		del 1
	endif
return


! ======================================================================
! Divisions Macro
! ======================================================================
"divisions":
	if (iFrameType = FRAME_WIRE) then
		addz divisionHeight-frameWidth
		yOffset = 2*doorThickness*(nDoor>1) + doorThickness*(iFrameType <> FRAME_WIRE) + emptyDoorBack*(iFrameType <> FRAME_WIRE)

		cprism_ gs_cabinet_mat, gs_cabinet_mat, gs_cabinet_mat,
			4, frameWidth,
			0,b,15,
			0, b-frameWidth,15,
			tempModulWidth, b-frameWidth,15,
			tempModulWidth, b, 15
		gosub "textureHorizontal_01"

		cprism_ gs_cabinet_mat, gs_cabinet_mat, gs_cabinet_mat,
			4, frameWidth,
			0, yOffset,15,
			0, yOffset+frameWidth,15,
			tempModulWidth, yOffset+frameWidth,15,
			tempModulWidth, yOffset, 15
		gosub "textureHorizontal_01"

		if not(bPreDiv) then
			cprism_ gs_cabinet_mat, gs_cabinet_mat, gs_cabinet_mat,
				4, frameWidth,
				0, b-frameWidth,15,
				-frameWidth, b-frameWidth, 15,
				-frameWidth, b-panelWidth+frameWidth, 15,
				0, b-panelWidth+frameWidth, 15
			gosub "textureVertical_02"
		endif

		cprism_ gs_cabinet_mat, gs_cabinet_mat, gs_cabinet_mat,
			4, frameWidth,
			tempModulWidth, b-frameWidth,15,
			tempModulWidth+frameWidth, b-frameWidth, 15,
			tempModulWidth+frameWidth, b-panelWidth+frameWidth, 15,
			tempModulWidth, b-panelWidth+frameWidth, 15
		gosub "textureVertical_02"

		del 1
	else
		add 0, B-(iFrameType = FRAME_SOLID_BACK)*frameWidth, divisionHeight-frameWidth
		cprism_ gs_cabinet_mat, gs_cabinet_mat, gs_cabinet_mat,
			4, frameWidth,
			0,0,15,
			0, -panelWidth,15,
			tempModulWidth, -panelWidth,15,
			tempModulWidth, 0, 15
		gosub "textureHorizontal_01"
		del 1
	endif
return


! ======================================================================
! Drawers Macro
! ======================================================================
"drawers":
	if iFrameType = FRAME_WIRE then tModulWidth = tempModulWidth - 2*plateThicknes
	doorHeight = (tempModulHeight+bDivision*thickness/2)/nTempNumber
	doorWidth = tModulWidth+thickness/2*(i<>1 and nModule<>1)+thickness/2*(i<>nModule and nModule<>1)
	drawerDepth = panelWidth+thickness

	add -thickness/2*(i<>1), B-(iFrameType = FRAME_SOLID_BACK)*frameWidth-panelWidth, -thickness/2*bDivision*(AboveOrUnder = 1)
	for kk=1 to nTempNumber
		if iInteriorType = INTERIOR_DRAWER then gosub "drawer"
		if iInteriorType = INTERIOR_DRAWERFRONT then gosub "drawerWithFront"
		addz doorHeight
	next kk
	del nTempNumber+1
return

"drawerWithFront":
	call "fa_warddoortyp" parameters all bNotMacro 			= 0,
										gs_full_edit 		= 0,
										bAngleEdit			= 0,
										doorAngle3D			= 0,
										bDrawer				= 1,
										iDrawerKnobPos		= 1,
										drawerDepth			= panelWidth+frameWidth+thickness,
										iDoorStyle			= iDrawerStyle,
										gs_knob_type_m		= gs_knob_type_m,
										bKnob				= bKnob * (iDoorType = DOOR_TYPE_NONE),
										matDoorGlass		= matDrawerInset,
										matDoorFrame		= gs_drawer_mat,
										xDrawerKnobPos		= 0,
										zDrawerKnobPos		= 0,
										doorFrameWidth		= thickness,
										nVerticalMullion	= 0,
										nHorizontalMullion	= 0,
										bMirrored			= 0,
										bFormMirror			= 0,
										bSliding			= 0,
										doorWidth			= doorWidth,
										doorHeight			= doorHeight,
										bBevel				= bBevel

return

"drawer":
	! Front
	drawerCutZ			= 0.03
	drawerCutX			= 0.06
	if doorWidth > drawerCutX and doorHeight > drawerCutZ+thickness*1.5 then
		reducedDoorWidth	= doorWidth -0.001
		reducedDoorHeight	= doorHeight -0.001
		frameHillHeight		= 0.01
		mindistSmall		= 0.01

		add (doorWidth-reducedDoorWidth)/2, 0, (doorHeight-reducedDoorHeight)/2

		addx reducedDoorWidth/2
		rotx 90
		if bBevel then
			fprism_ gs_drawer_mat, gs_drawer_mat, gs_drawer_mat, gs_drawer_mat,
				8,doorThickness,45,frameHillHeight,
				-reducedDoorWidth/2,0,15,
				reducedDoorWidth/2,0,15,
				reducedDoorWidth/2,reducedDoorHeight,15,
				reducedDoorWidth/2-drawerCutX,reducedDoorHeight,15,
				reducedDoorWidth/2-drawerCutX,reducedDoorHeight-drawerCutZ,15,
				-reducedDoorWidth/2+drawerCutX,reducedDoorHeight-drawerCutZ,15,
				-reducedDoorWidth/2+drawerCutX,reducedDoorHeight,15,
				-reducedDoorWidth/2,reducedDoorHeight,15
		else
			cprism_ gs_drawer_mat, gs_drawer_mat, gs_drawer_mat,
				8,doorThickness,
				-reducedDoorWidth/2,0,15,
				reducedDoorWidth/2,0,15,
				reducedDoorWidth/2,reducedDoorHeight,15,
				reducedDoorWidth/2-drawerCutX,reducedDoorHeight,15,
				reducedDoorWidth/2-drawerCutX,reducedDoorHeight-drawerCutZ,15,
				-reducedDoorWidth/2+drawerCutX,reducedDoorHeight-drawerCutZ,15,
				-reducedDoorWidth/2+drawerCutX,reducedDoorHeight,15,
				-reducedDoorWidth/2,reducedDoorHeight,15
		endif

		if reducedDoorHeight>reducedDoorWidth then gosub "textureVertical_02" else gosub "textureHorizontal_01"

		del 3

		! Drawer
		drawerWidth = doorWidth - thickness
		drawerHeight= doorHeight - thickness*1.5
		drawerDepth = panelWidth - mindistSmall

		if drawerWidth<2*thickness+mindistSmall or drawerHeight<2*thickness+mindistSmall or drawerDepth<thickness+mindistSmall then return !!Not draw Drawer

		material gs_drawer_mat
		add thickness/2, 0, thickness/2

		!!Bottom
		prism_ 4, thickness,
			thickness, 0, 15,
			drawerWidth-thickness, 0, 15,
			drawerWidth-thickness, drawerDepth-thickness, 15,
			thickness, drawerDepth-thickness, 15
		gosub "textureHorizontal_02"

		!!Left Side
		prism_ 4, drawerHeight,
			0, 0, 15,
			thickness, 0, 15,
			thickness, drawerDepth, 15,
			0, drawerDepth, 15
		gosub "textureHorizontal_01"

		!!Right Side
		prism_ 4, drawerHeight,
			drawerWidth, 0, 15,
			drawerWidth-thickness, 0, 15,
			drawerWidth-thickness, drawerDepth, 15,
			drawerWidth, drawerDepth, 15
		gosub "textureHorizontal_01"

		!!Back Side
		prism_ 4, drawerHeight,
			thickness, drawerDepth-thickness, 15,
			drawerWidth-thickness, drawerDepth-thickness, 15,
			drawerWidth-thickness, drawerDepth, 15,
			thickness, drawerDepth, 15
		gosub "textureHorizontal_01"

		del 1
	else
		call "fa_warddoortyp" parameters all bNotMacro			= 0,
											gs_full_edit		= 0,
											bAngleEdit			= 0,
											doorAngle3D			= 0,
											bDrawer				= 1,
											iDrawerKnobPos		= 1,
											drawerDepth			= panelWidth+frameWidth+thickness,
											iDoorStyle			= 1,					!!!Simple
											bKnob				= 0,
											gs_knob_type_m		= gs_knob_type_m,
											matDoorGlass		= matDrawerInset,
											matDoorFrame		= gs_drawer_mat,
											xDrawerKnobPos		= 0,
											zDrawerKnobPos		= 0,
											doorFrameWidth		= thickness,
											nVerticalMullion	= 0,
											nHorizontalMullion	= 0,
											bMirrored			= 0,
											bFormMirror			= 0,
											bSliding			= 0,
											doorWidth			= doorWidth,
											doorHeight			= doorHeight,
											bBevel				= bBevel


	endif
return


! ======================================================================
! Shelves Macro
! ======================================================================
"shelves":
	if iFrameType = FRAME_WIRE then
		resol max(3, gs_resol/2)
		tModulDepth = panelWidth
		shelvesDistance=(tempModulHeight+wireDiameter*4)/(nTempNumber+1)

		add 0, B-(iFrameType = FRAME_SOLID_BACK)*frameWidth, -wireDiameter*2
		for kk=1 to nTempNumber
			addz shelvesDistance

			if gs_detlevel_3D_m = 1 or GLOB_CONTEXT = 5 or GLOB_CONTEXT = 4 or (GLOB_CONTEXT > 20 & GLOB_CONTEXT < 50) then
				addz -wireDiameter*2
				cprism_ "builtInMatWireBasket", "builtInMatWireBasket", "builtInMatWireBasket",
					4, wireDiameter*4,
					0,0,15,
					0, -panelWidth,15,
					tempModulWidth, -panelWidth,15,
					tempModulWidth, 0, 15
				gosub "textureHorizontal_01"
				del 1
			else
				addy -panelWidth
				gosub "plates_shelf"

				material matSteelShelf
				add 0.01 + wireDiameter/2, 0.01 + wireDiameter/2, 0

				wireReducedSizeX = tModulWidth - 2* 0.01 - wireDiameter
				wireReducedSizeY = tModulDepth - 2* 0.01 - wireDiameter

				! --- Z direction ----
				iRes = max(3, gs_resol/2)
				iAlpha = 90/iRes
				wireRadius = 0.02

				put  wireReducedSizeX, 0, 0, 0
				put  wireRadius, 0, 0, 0
				for jj=1 to iRes-1
					put wireRadius-sin(jj*iAlpha)*wireRadius, wireRadius-cos(jj*iAlpha)*wireRadius, 0, 0
				next jj
				put 0, wireRadius, 0, 0
				put 0, wireReducedSizeY-wireRadius, 0, 0
				for jj=1 to iRes-1
					put wireRadius-cos(jj*iAlpha)*wireRadius, wireReducedSizeY-wireRadius+sin(jj*iAlpha)*wireRadius, 0, 0
				next jj
				put wireRadius, wireReducedSizeY, 0, 0
				put wireReducedSizeX-wireRadius, wireReducedSizeY, 0, 0
				for jj=1 to iRes-1
					put wireReducedSizeX-wireRadius+sin(jj*iAlpha)*wireRadius, wireReducedSizeY-wireRadius+cos(jj*iAlpha)*wireRadius, 0, 0
				next jj
				put wireReducedSizeX, wireReducedSizeY-wireRadius, 0, 0
				put wireReducedSizeX, wireRadius, 0, 0
				for jj=1 to iRes-1
					put wireReducedSizeX-wireRadius+cos(jj*iAlpha)*wireRadius, wireRadius-sin(jj*iAlpha)*wireRadius,0, 0
				next jj
				put wireReducedSizeX-wireRadius, 0, 0, 0
				put wireRadius, 0, 0, 0
				put wireRadius-sin(iAlpha)*wireRadius, wireRadius-cos(iAlpha)*wireRadius, 0, 0

				tube 2, nsp/4, 1+2,
					0,0,901,
					wireDiameter*4, 360, 4001,
					get(nsp)


				! --- X direction ----
				tempSize = wireReducedSizeY
				tempNumber = int((wireReducedSizeX-2*wireRadius) / wireMeshDivision)

				rotz 90
				add 0, -(tempNumber-1)*wireMeshDivision - ((wireReducedSizeX-(tempNumber-1)*wireMeshDivision)/2), wireDiameter
				for jj = 1 to tempNumber
					tube 2, 4, 1+2+16+32,
						0,0,901,
						wireDiameter, 360, 4001,

						-1, 0, 0, 0,
						0, 0, 0, 0,
						tempSize, 0, 0, 0,
						tempSize+1, 0, 0, 0
					addy wireMeshDivision
				next jj
				del tempNumber
				del 2

				! --- Y direction ----
				tempSize = wireReducedSizeX
				tempNumber = int((wireReducedSizeY-2*wireRadius) / wireMeshDivision)

				add	0, (wireReducedSizeY-(tempNumber-1)*wireMeshDivision)/2, -wireDiameter
				for jj = 1 to tempNumber
					tube 2, 4, 1+2+16+32,
						0,0,901,
						wireDiameter, 360, 4001,

						-1, 0, 0, 0,
						0, 0, 0, 0,
						tempSize, 0, 0, 0,
						tempSize+1, 0, 0, 0
					addy wireMeshDivision
				next jj
				del tempNumber
				del 1


				del 2
			endif
		next kk
		del nTempNumber+1
	else
		shelvesDistance=(tempModulHeight+thickness)/(nTempNumber+1)

		add 0, B-(iFrameType = FRAME_SOLID_BACK)*frameWidth, -thickness
		for kk=1 to nTempNumber
			addz shelvesDistance
			cprism_ gs_shelf_mat, gs_shelf_mat, gs_shelf_mat,
				4, thickness,
				0,0,15,
				0, -panelWidth,15,
				tempModulWidth, -panelWidth,15,
				tempModulWidth, 0, 15
			gosub "textureHorizontal_01"
		next kk
		del nTempNumber+1
	endif
return


! ======================================================================
! WireBasket Macro
! ======================================================================
"wireBaskets":
	resol max(3, gs_resol/4)
	tModulDepth = panelWidth
	wireDistance=(tempModulHeight)/(nTempNumber)

	wireAlpha = max ( atn(wireDistance/0.04), minWireAlpha )

	yOffset = 2*doorThickness*(nDoor>1) + doorThickness*(iFrameType <> FRAME_WIRE)  + emptyDoorBack*(iFrameType <> FRAME_WIRE)

	addy yOffset
	for kk=1 to nTempNumber
		addz wireDistance
		gosub "wireBasket"
	next kk
	del nTempNumber+1
	resol gs_resol
return


"wireBasket":
	wireBasketHeight = wireDistance - 0.03
	if wireBasketHeight < minDist/2 then return

	if gs_detlevel_3D_m = 1 or GLOB_CONTEXT = 5 or GLOB_CONTEXT = 4 or (GLOB_CONTEXT > 20 & GLOB_CONTEXT < 50) then
		material "builtInMatWireBasket"
		wireReducedSizeX = tModulWidth - 2* 0.01 - wireDiameter
		wireReducedSizeY = tModulDepth - 2* 0.01 - wireDiameter

		add 0.01, 0.01, -wireDistance
		block wireReducedSizeX, wireReducedSizeY, wireBasketHeight
		del 1
	else
		material matWireBasket
		gosub "plates_wire"

		wireReducedSizeX = tModulWidth - 2* 0.01 - wireDiameter
		wireReducedSizeY = tModulDepth - 2* 0.01 - wireDiameter

		add 0.01 + wireDiameter/2, 0.01 + wireDiameter/2, -0.03

		! --- X direction ----
		tempWireY = wireBasketHeight - wireDiameter
		tempWireX = tempWireY / tan(wireAlpha)
		tempSize = wireReducedSizeY
		tempNumber = int((wireReducedSizeX-2*tempWireX) / wireMeshDivision)

		if wireReducedSizeX > (wireHandle+wireDiameter+0.01)*2 then
			rotx 90
			cutpolya 6, 0, -tempWireX,
				wireHandle, wireDiameter, 15,
				wireHandle, 0, 15,
				wireHandle+0.01, -0.03, 15,
				wireReducedSizeX-wireHandle-0.01, -0.03, 15,
				wireReducedSizeX-wireHandle, 0, 15,
				wireReducedSizeX-wireHandle, wireDiameter, 15
			del 1
		endif

		rotz 90
		addy -(tempNumber-1)*wireMeshDivision - ((wireReducedSizeX-(tempNumber-1)*wireMeshDivision)/2)
		for jj = 1 to tempNumber
			tube 2, 6, 1+2+16+32,
				0,0,901,
				wireDiameter, 360, 4001,

				-tempWireX, 0, tempWireY, 0,
				0, 0, 0, 0,
				tempWireX, 0, -tempWireY, 0,
				tempSize-tempWireX, 0, -tempWireY, 0,
				tempSize, 0, 0, 0,
				tempSize+tempWireX, 0, tempWireY, 0
			addy wireMeshDivision
		next jj
		del tempNumber
		del 2

		! --- Z direction ----
		tempNumber = int(wireBasketHeight / wireMeshDivision)
		iRes = max(3, gs_resol/2)
		iAlpha = 90/iRes
		wireRadius = 0.02
		for ii = 1 to tempNumber
			tempZ = ii*wireMeshDivision
			tempX = tempZ / tan(wireAlpha)-wireDiameter*2

			put  wireReducedSizeX, tempX, -tempZ, 0
			put  tempX+wireRadius, tempX, -tempZ, 0
			for jj=1 to iRes-1
				put tempX+wireRadius-sin(jj*iAlpha)*wireRadius, tempX+wireRadius-cos(jj*iAlpha)*wireRadius, -tempZ, 0
			next jj
			put tempX, tempX+wireRadius, -tempZ, 0
			put tempX, wireReducedSizeY-wireRadius-tempX, -tempZ, 0
			for jj=1 to iRes-1
				put tempX+wireRadius-cos(jj*iAlpha)*wireRadius, wireReducedSizeY-tempX-wireRadius+sin(jj*iAlpha)*wireRadius, -tempZ, 0
			next jj
			put tempX+wireRadius, wireReducedSizeY-tempX, -tempZ, 0
			put wireReducedSizeX-wireRadius-tempX, wireReducedSizeY-tempX, -tempZ, 0
			for jj=1 to iRes-1
				put wireReducedSizeX-wireRadius-tempX+sin(jj*iAlpha)*wireRadius, wireReducedSizeY-tempX-wireRadius+cos(jj*iAlpha)*wireRadius, -tempZ, 0
			next jj
			put wireReducedSizeX-tempX, wireReducedSizeY-wireRadius-tempX, -tempZ, 0
			put wireReducedSizeX-tempX, tempX+wireRadius, -tempZ, 0
			for jj=1 to iRes-1
				put wireReducedSizeX-wireRadius-tempX+cos(jj*iAlpha)*wireRadius, tempX+wireRadius-sin(jj*iAlpha)*wireRadius, -tempZ, 0
			next jj
			put wireReducedSizeX-wireRadius-tempX, tempX, -tempZ, 0
			put tempX+wireRadius, tempX, -tempZ, 0
			put tempX+wireRadius-sin(iAlpha)*wireRadius, tempX+wireRadius-cos(iAlpha)*wireRadius, -tempZ, 0

			tube 2, nsp/4, 1+2,
				0,0,901,
				wireDiameter, 360, 4001,
				get(nsp)
		next ii

		if wireReducedSizeX > (wireHandle+wireDiameter+0.01)*2 then cutend


		! --- Y direction ----
		tempWireY = wireBasketHeight - 3*wireDiameter
		tempWireX = tempWireY / tan(wireAlpha)
		tempSize = wireReducedSizeX
		tempNumber = int((wireReducedSizeY-2*tempWireX) / wireMeshDivision)

		addy (wireReducedSizeY-(tempNumber-1)*wireMeshDivision)/2
		for jj = 1 to tempNumber
			tube 2, 6, 1+2+16+32,
				0,0,901,
				wireDiameter, 360, 4001,

				-tempWireX, 0, tempWireY, 0,
				0, 0, 0, 0,
				tempWireX, 0, -tempWireY, 0,
				tempSize-tempWireX, 0, -tempWireY, 0,
				tempSize, 0, 0, 0,
				tempSize+tempWireX, 0, tempWireY, 0
			addy wireMeshDivision
		next jj
		del tempNumber
		del 1


		! --- Frame ----
		put  wireRadius+1, 0, 0, 0
		put  wireRadius, 0, 0, 0
		for jj=1 to iRes-1
			put wireRadius-sin(jj*iAlpha)*wireRadius, wireRadius-cos(jj*iAlpha)*wireRadius, 0, 0
		next jj
		put 0, wireRadius, 0, 0
		put 0, wireReducedSizeY-wireRadius, 0, 0
		for jj=1 to iRes-1
			put wireRadius-cos(jj*iAlpha)*wireRadius, wireReducedSizeY-wireRadius+sin(jj*iAlpha)*wireRadius, 0, 0
		next jj
		put wireRadius, wireReducedSizeY, 0, 0
		put wireReducedSizeX-wireRadius, wireReducedSizeY, 0, 0
		for jj=1 to iRes-1
			put wireReducedSizeX-wireRadius+sin(jj*iAlpha)*wireRadius, wireReducedSizeY-wireRadius+cos(jj*iAlpha)*wireRadius, 0, 0
		next jj
		put wireReducedSizeX, wireReducedSizeY-wireRadius, 0, 0
		put wireReducedSizeX, wireRadius, 0, 0
		for jj=1 to iRes-1
			put wireReducedSizeX-wireRadius+cos(jj*iAlpha)*wireRadius, wireRadius-sin(jj*iAlpha)*wireRadius, 0, 0
		next jj
		put wireReducedSizeX-wireRadius, 0, 0, 0
		if wireReducedSizeX > (wireHandle+wireDiameter+0.01)*2 then
			put wireReducedSizeX-wireHandle, 0, 0, 0
			put wireReducedSizeX-wireHandle-0.01, 0.03/tan(wireAlpha), -0.03, 0
			put wireHandle+0.01, 0.03/tan(wireAlpha), -0.03, 0
			put wireHandle, 0, 0, 0
		endif
		put wireRadius, 0, 0, 0
		put wireRadius-sin(iAlpha)*wireRadius, wireRadius-cos(iAlpha)*wireRadius, 0, 0


		tube 2, nsp/4, 1+2+128,
			0, 0, 901,
			wireDiameter*2 , 360, 4001,
			get(nsp)

		del 1
	endif
return


! ======================================================================
! Hanger Macro
! ======================================================================
"hangers":
	resol max(4, gs_resol/2)
	material gs_hanger_mat
	hangerDistance=(tempModulHeight-0.1)/(nTempNumber)
	yOffset = 2*doorThickness*(nDoor>1) + doorThickness*(iFrameType <> FRAME_WIRE)  + emptyDoorBack*(iFrameType <> FRAME_WIRE)
	if iFrameType = FRAME_WIRE then tModulWidth = tempModulWidth - 2*plateThicknes

	addy yOffset + panelWidth/2
	for kk=1 to nTempNumber
		addz hangerDistance
		if iFrameType = FRAME_WIRE then
			plateHeight = 3*hangerWidth
			add 0, -panelWidth/2-yOffset, -plateHeight/2-hangerWidth
			gosub "plates_normal"
			del 1

			addx plateThicknes
			gosub "hanger"
			del 1
		else
			gosub "hanger"
		endif
	next kk
	del nTempNumber+1
	resol gs_resol
return

"hanger":
	rotx 90
	roty 90
	if tModulWidth > 2 * hangerWidth then
		cprism_  gs_hanger_mat, gs_hanger_mat, gs_hanger_mat,
				6, hangerWidth,
				-hangerOversize/2,-hangerWidth/2, 79,
				0,-hangerWidth/2, 900,
				hangerOversize/2,-hangerWidth/2, 3079,
				hangerOversize/2,-hangerWidth*1.5, 79,
				0,-hangerWidth*1.5,900,
				0,-180,4079
		gosub "textureVertical_01"

		addz hangerWidth
		cprism_  gs_hanger_mat, gs_hanger_mat, gs_hanger_mat,
				6, tModulWidth-2*hangerWidth,
				-hangerWidth/2,-hangerWidth/2, 79,
				0,-hangerWidth/2, 900,
				hangerWidth/2,-hangerWidth/2, 3079,
				hangerWidth/2,-hangerWidth*1.5, 79,
				0,-hangerWidth*1.5,900,
				0,-180,4079
		gosub "textureVertical_01"

		addz tModulWidth-2*hangerWidth
		cprism_  gs_hanger_mat, gs_hanger_mat, gs_hanger_mat,
				6, hangerWidth,
				-hangerOversize/2,-hangerWidth/2, 79,
				0,-hangerWidth/2, 900,
				hangerOversize/2,-hangerWidth/2, 3079,
				hangerOversize/2,-hangerWidth*1.5, 79,
				0,-hangerWidth*1.5,900,
				0,-180,4079
		gosub "textureVertical_01"
		del 2
	else
		cprism_  gs_hanger_mat, gs_hanger_mat, gs_hanger_mat,
				6, tModulWidth,
				-hangerWidth/2,-hangerWidth/2, 79,
				0,-hangerWidth/2, 900,
				hangerWidth/2,-hangerWidth/2, 3079,
				hangerWidth/2,-hangerWidth*1.5, 79,
				0,-hangerWidth*1.5,900,
				0,-180,4079
		gosub "textureVertical_01"
	endif
	del 2
return

! ======================================================================
! Plates
! ======================================================================
"plates_normal":
	addy B-(iFrameType = FRAME_SOLID_BACK)*frameWidth
	for jj = 1 to 2
		cprism_ gs_cabinet_mat, gs_cabinet_mat, gs_cabinet_mat,
			4, plateHeight,
			0,0,15,
			0, -panelWidth,15,
			plateThicknes, -panelWidth,15,
			plateThicknes, 0, 15
		gosub "textureHorizontal_01"
		mulx -1
		addx -tempModulWidth
	next jj
	del 1+4
return


"plates_wire":
	plateHeight = 0.02
	addz -0.03+plateHeight-wireDiameter*2
	for jj = 1 to 2
		rotx 90
		addz -panelWidth
		cprism_ gs_cabinet_mat, gs_cabinet_mat, gs_cabinet_mat,
			8, panelWidth,
			0, 0, 15,
			plateThicknes, 0, 15,
			plateThicknes, -plateHeight, 15,
			plateThicknes+0.007, -plateHeight,15,
			plateThicknes+0.007, -plateHeight-plateThicknes,15,
			plateThicknes, -plateHeight-plateThicknes,15,
			plateThicknes, -2*plateHeight,15,
			0, -2*plateHeight,15
		gosub "textureVertical_01"
		del 2
		mulx -1
		addx -tempModulWidth
	next jj
	del 1+4
return


"plates_shelf":
	plateHeight = 0.02
	addz plateHeight-wireDiameter*4
	for jj = 1 to 2
		rotx 90
		addz -panelWidth
		cprism_ gs_cabinet_mat, gs_cabinet_mat, gs_cabinet_mat,
			8, panelWidth,
			0, 0, 15,
			plateThicknes, 0, 15,
			plateThicknes, -plateHeight, 15,
			plateThicknes+0.01, -plateHeight,15,
			plateThicknes+0.01, -plateHeight-plateThicknes,15,
			plateThicknes, -plateHeight-plateThicknes,15,
			plateThicknes, -2*plateHeight,15,
			0, -2*plateHeight,15
		gosub "textureVertical_01"
		del 2
		mulx -1
		addx -tempModulWidth
	next jj
	del 1+4
return


! ======================================================================
! Textures
! ======================================================================
"textureVertical_01":
	roty 90
	vert 0, 0, 0
	vert 1, 0, 0
	vert 0, 1, 0
	vert 0, 0, 1
	del 1

	coor 2, -1, -2, -3, -4

	base

	body -1
return


"textureVertical_02":
	roty 90
	rotz 90
	vert 0, 0, 0
	vert 1, 0, 0
	vert 0, 1, 0
	vert 0, 0, 1
	del 2

	coor 2, -1, -2, -3, -4

	base

	body -1
return


"textureHorizontal_01":
	vert 0, 0, 0
	vert 1, 0, 0
	vert 0, 1, 0
	vert 0, 0, 1

	coor 2, -1, -2, -3, -4

	base

	body -1
return


"textureHorizontal_02":
	rotx 90
	vert 0, 0, 0
	vert 1, 0, 0
	vert 0, 1, 0
	vert 0, 0, 1
	del 1

	coor 2, -1, -2, -3, -4

	base

	body -1
return
]]>
</Script_3D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_2D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
unID = 1
pen gs_cont_pen
fill gs_fill_type
drawindex 20

if  iSymbolStyle = 2 |\ 
 	iSymbolStyle = 3 |\ 
 	iSymbolStyle = 4 |\ 
	iSymbolStyle = 5 then 		! Do not draw Hanger Symbol in case of symbols drawn in the cabinet

	bHangers = 0
endif

! ======================================================================
! HOTSPOTS
! ======================================================================
CALL "Resize_A_B_ZZYZX" Parameters ALL
hotspot2  A/2, B, unID				: unID=unID+1

! ======================================================================
! BODY
! ======================================================================
! ----- Base Polygon -----
poly2_b 5, 1+2+64,gs_fill_pen,gs_back_pen,
	0,0,1,
	A,0,1,
	A,B,1,
	0,B,1,
	0,0,-1

if 	iSymbolStyle = 4 |\
	iSymbolStyle = 5 |\
	iSymbolStyle = 7 then 

	tempDoorWidth = A / nDoor									! Calculate Width of Doors for Symbols depending on Doors
endif

if iSymbolStyle = 4 then										! Draw V

	if iDoorType = 2 then										! Double Sliding Door
		line2 0, 				B, tempDoorWidth,	0
		line2 tempDoorWidth, 	0, A,				B
	endif	
	if iDoorType = 1 then										! Triple Sliding Door
		line2 0, 					0, tempDoorWidth,		B
		line2 tempDoorWidth, 		B, tempDoorWidth * 2,	0
		line2 tempDoorWidth * 2, 	0, A,					B
	endif
endif

if iSymbolStyle = 5 then										! Draw A

	if iDoorType = 2 then										! Double Sliding Door
		line2 0, 				0, tempDoorWidth,	B
		line2 tempDoorWidth, 	B, A,				0
	endif	
	if iDoorType = 1 then										! Triple Sliding Door
		line2 0, 					B, tempDoorWidth,		0
		line2 tempDoorWidth, 		0, tempDoorWidth * 2,	B
		line2 tempDoorWidth * 2, 	B, A,					0
	endif
endif

if 	iSymbolStyle = 6 |\											! Draw Door Thickness
	iSymbolStyle = 7 then 

	line2 0, doorThickness, a, doorThickness
	_depthmod = doorThickness
else
	_depthmod = 0
endif

if iSymbolStyle = 7 then										! Draw Door Number
	tempDoorWidth = A / nDoor
	for i = 1 to nDoor-1
		line2 tempDoorWidth * i, 0, tempDoorWidth * i, doorThickness
	next i
endif

for i = 1 to nModule
	if i > 1 then
		startModulX = frameWidth
		for kk = 1 to i-1
			startModulX = startModulX + moduleWidth[kk]
		next kk
		tempModulWidth = moduleWidth[i]

		if i = 2 then
			hotspot2  startModulX+tempModulWidth, 0, unID								: unID=unID+1
			if not(bUniform) then
				hotspot2  startModulX+tempModulWidth, B/2, unID, modulWidth02, 1+128	: unID=unID+1
				hotspot2  startModulX+tempModulWidth+1, B/2, unID, modulWidth02, 3		: unID=unID+1
				hotspot2  startModulX, B/2, unID, modulWidth02, 2						: unID=unID+1
			endif
		endif

		if i = 3 then
			hotspot2  startModulX+tempModulWidth, 0, unID								: unID=unID+1
			if not(bUniform) then
				hotspot2  startModulX+tempModulWidth, B/2, unID, modulWidth03, 1+128	: unID=unID+1
				hotspot2  startModulX+tempModulWidth+1, B/2, unID, modulWidth03, 3		: unID=unID+1
				hotspot2  startModulX, B/2, unID, modulWidth03, 2						: unID=unID+1
			endif
		endif

		if i = 4 then
			hotspot2  startModulX+tempModulWidth, 0, unID								: unID=unID+1
			if not(bUniform) then
				hotspot2  startModulX+tempModulWidth, B/2, unID, modulWidth04, 1+128	: unID=unID+1
				hotspot2  startModulX+tempModulWidth+1, B/2, unID, modulWidth04, 3		: unID=unID+1
				hotspot2  startModulX, B/2, unID, modulWidth04, 2						: unID=unID+1
			endif
		endif

		if i = 5 then
			hotspot2  startModulX+tempModulWidth, 0, unID								: unID=unID+1
			if not(bUniform) then
				hotspot2  startModulX+tempModulWidth, B/2, unID, modulWidth05, 1+128	: unID=unID+1
				hotspot2  startModulX+tempModulWidth+1, B/2, unID, modulWidth05, 3		: unID=unID+1
				hotspot2  startModulX, B/2, unID, modulWidth05, 2						: unID=unID+1
			endif
		endif

		if i = 6 then
			hotspot2  startModulX+tempModulWidth, 0, unID								: unID=unID+1
			if not(bUniform) then
				hotspot2  startModulX+tempModulWidth, B/2, unID, modulWidth06, 1+128	: unID=unID+1
				hotspot2  startModulX+tempModulWidth+1, B/2, unID, modulWidth06, 3		: unID=unID+1
				hotspot2  startModulX, B/2, unID, modulWidth06, 2						: unID=unID+1
			endif
		endif
	else
		startModulX = 0
		tempModulWidth = moduleWidth[i] + frameWidth
		hotspot2  startModulX+tempModulWidth, 0, unID									: unID=unID+1
	endif

	if i < nModule then
		line2 startModulX+tempModulWidth,_depthmod,startModulX+tempModulWidth,b
	endif

	if iSymbolStyle = 2 then			! Draw X
		line2 startModulX, 0, startModulX + tempModulWidth, b
		line2 startModulX, b, startModulX + tempModulWidth, 0
	endif

	if iSymbolStyle = 3 then			! Draw /
		line2 startModulX, 0, startModulX + tempModulWidth, b
	endif

	tempHangers =  (moduleMatrix[2+(i-1)*nElement][1] = INTERIOR_HANGER)

	! ----- Hangers -----
	if bHangers and tempHangers then
		add2 startModulX, 0
		line2 0,b/2,tempModulWidth,b/2
		gosub "hangers"
		del 1
	endif
next i


! ======================================================================
! Minimal Space
! ======================================================================
if MSFront> EPS then
	reqBMinSpace = 0
	drawindex 10
	success = LIBRARYGLOBAL ("LibraryGlobals13", "showBMinSpace", reqBMinSpace)
	if success > 0 and reqBMinSpace then
		call "fa_minimalspace" parameters all 	MSType 	= 1,
												unID 	= 3000
	endif
endif


END

! ======================================================================
! SubRoutines
! ======================================================================

"hangers":
	add2 0.1, b/2
	hn = tempModulWidth - 2*0.05
	cn=int(hn/0.1)
	for ii=1 to cn
		ff=rnd(.2)
		rot2 ff*100
		line2 -doorThickness, -b/2 + 0.02 + doorThickness , doorThickness, b/2 - 0.02 - doorThickness
		del 1
		add2 0.1, 0
	next ii
	del cn+1
return
]]>
</Script_2D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_1D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
EPS=0.0001

dim stDetlevel3D[3]
	stDetlevel3D[1] = `Детальный`
	stDetlevel3D[2] = `Простой`
	stDetlevel3D[3] = `Откл.`

dim stDoorType[3]
	stDoorType[1] = `Дверь Двойная Раздвижная`
	stDoorType[2] = `Дверь Тройная Раздвижная`
	stDoorType[3] = `Нет`

DOOR_TYPE_NONE			= 0
DOOR_TYPE_TRIPLE_SIDING	= 1
DOOR_TYPE_SLIDING		= 2

dim stDoorStyle[12]
	stDoorStyle[1] = `Стиль 1`
	stDoorStyle[2] = `Стиль 2`
	stDoorStyle[3] = `Стиль 3`
	stDoorStyle[4] = `Стиль 4`
	stDoorStyle[5] = `Стиль 5`
	stDoorStyle[6] = `Стиль 6`
	stDoorStyle[7] = `Стиль 7`
	stDoorStyle[8] = `Стиль 8`
	stDoorStyle[9] = `Стиль 9`
	stDoorStyle[10] = `Стиль 10`
	stDoorStyle[11] = `Стиль 11`
	stDoorStyle[12] = `Спец. панель`

! const values for parameter: gs_knob_type_m
KNOB_STYLE_1	= 1
KNOB_STYLE_2	= 2
KNOB_STYLE_3	= 3
KNOB_STYLE_4	= 4
KNOB_STYLE_5	= 5
KNOB_STYLE_6	= 6
KNOB_STYLE_7	= 7
KNOB_STYLE_8	= 8

dim stKnobPlacing[2]
	stKnobPlacing[1]=`Вертикальный`
	stKnobPlacing[2]=`Горизонтальный`

dim stInteriorType[6]
	stInteriorType[1]=`Полка`
	stInteriorType[2]=`Ящик`
	stInteriorType[3]=`Ящик с Лицевой Стороной`
	stInteriorType[4]=`Сетчатая Корзина`
	stInteriorType[5]=`Штанга`
	stInteriorType[6]=`Нет`

INTERIOR_NONE		= 0
INTERIOR_HANGER		= 1
INTERIOR_WIRE		= 2
INTERIOR_DRAWERFRONT= 3
INTERIOR_DRAWER		= 4
INTERIOR_SHELF		= 5

! const values for parameter: gs_cornice_type_m
CORN_STYLE_1	= 1
CORN_STYLE_2	= 2
CORN_STYLE_3	= 3
CORN_STYLE_4	= 4

dim stCorniceOverhang[4]
	stCorniceOverhang[1]=`Спереди`
	stCorniceOverhang[2]=`Спереди и Слева`
	stCorniceOverhang[3]=`Спереди и Справа`
	stCorniceOverhang[4]=`Спереди и по Бокам`

! const values for parameter: gs_leg_type_m
LEG_STYLE_1		= 1
LEG_STYLE_2		= 2
LEG_STYLE_3		= 3
LEG_STYLE_4		= 4
LEG_STYLE_5		= 5
LEG_STYLE_6		= 6

dim stFrameTypes[3]
	stFrameTypes[1]=`Сплошной`
	stFrameTypes[2]=`Сплошной с Задней Стенкой`
	stFrameTypes[3]=`Каркасный`

FRAME_SOLID		= 1
FRAME_SOLID_BACK= 2
FRAME_WIRE		= 3

dim stDrawerTypes[3]
	stDrawerTypes[1]=`Стиль 1`
	stDrawerTypes[2]=`Стиль 2`
	stDrawerTypes[3]=`Стиль 3`


!-----Definitions-----
if iFrameType = FRAME_WIRE then
	leg_h = 0
endif
minDist = 0.1
nDoor = 1
if iDoorType = DOOR_TYPE_SLIDING then nDoor = 2
if iDoorType = DOOR_TYPE_TRIPLE_SIDING then nDoor = 3
railThickness = 0.005


!-----Fill Array-----
dim moduleWidth[]
dim moduleMatrix[][2]
m = 1
nElement = 7
if nModule >= 1 then
	moduleWidth[1] = modulWidth01
	 moduleMatrix[m][1] = bDivision01
	 moduleMatrix[m][2] = divisionHeight01		: m = m + 1
	 moduleMatrix[m][1] = iInteriorType01
	 moduleMatrix[m][2] = iInteriorTypeUnder01	: m = m + 1
	 moduleMatrix[m][1] = nShelves01
	 moduleMatrix[m][2] = nShelvesUnder01		: m = m + 1
	 moduleMatrix[m][1] = nDrawers01
	 moduleMatrix[m][2] = nDrawersUnder01		: m = m + 1
	 moduleMatrix[m][1] = nDrawersFront01
	 moduleMatrix[m][2] = nDrawersFrontUnder01	: m = m + 1
	 moduleMatrix[m][1] = nWire01
	 moduleMatrix[m][2] = nWireUnder01			: m = m + 1
	 moduleMatrix[m][1] = nHangers01
	 moduleMatrix[m][2] = nHangersUnder01		: m = m + 1
endif

if nModule >= 2 then
	moduleWidth[2] = modulWidth02
	 moduleMatrix[m][1] = bDivision02
	 moduleMatrix[m][2] = divisionHeight02		: m = m + 1
	 moduleMatrix[m][1] = iInteriorType02
	 moduleMatrix[m][2] = iInteriorTypeUnder02	: m = m + 1
	 moduleMatrix[m][1] = nShelves02
	 moduleMatrix[m][2] = nShelvesUnder02		: m = m + 1
	 moduleMatrix[m][1] = nDrawers02
	 moduleMatrix[m][2] = nDrawersUnder02		: m = m + 1
	 moduleMatrix[m][1] = nDrawersFront02
	 moduleMatrix[m][2] = nDrawersFrontUnder02	: m = m + 1
	 moduleMatrix[m][1] = nWire02
	 moduleMatrix[m][2] = nWireUnder02			: m = m + 1
	 moduleMatrix[m][1] = nHangers02
	 moduleMatrix[m][2] = nHangersUnder02		: m = m + 1
endif

if nModule >= 3 then
	moduleWidth[3] = modulWidth03
	 moduleMatrix[m][1] = bDivision03
	 moduleMatrix[m][2] = divisionHeight03		: m = m + 1
	 moduleMatrix[m][1] = iInteriorType03
	 moduleMatrix[m][2] = iInteriorTypeUnder03	: m = m + 1
	 moduleMatrix[m][1] = nShelves03
	 moduleMatrix[m][2] = nShelvesUnder03		: m = m + 1
	 moduleMatrix[m][1] = nDrawers03
	 moduleMatrix[m][2] = nDrawersUnder03		: m = m + 1
	 moduleMatrix[m][1] = nDrawersFront03
	 moduleMatrix[m][2] = nDrawersFrontUnder03	: m = m + 1
	 moduleMatrix[m][1] = nWire03
	 moduleMatrix[m][2] = nWireUnder03			: m = m + 1
	 moduleMatrix[m][1] = nHangers03
	 moduleMatrix[m][2] = nHangersUnder03		: m = m + 1
endif

if nModule >= 4 then
	moduleWidth[4] = modulWidth04
	 moduleMatrix[m][1] = bDivision04
	 moduleMatrix[m][2] = divisionHeight04		: m = m + 1
	 moduleMatrix[m][1] = iInteriorType04
	 moduleMatrix[m][2] = iInteriorTypeUnder04	: m = m + 1
	 moduleMatrix[m][1] = nShelves04
	 moduleMatrix[m][2] = nShelvesUnder04		: m = m + 1
	 moduleMatrix[m][1] = nDrawers04
	 moduleMatrix[m][2] = nDrawersUnder04		: m = m + 1
	 moduleMatrix[m][1] = nDrawersFront04
	 moduleMatrix[m][2] = nDrawersFrontUnder04	: m = m + 1
	 moduleMatrix[m][1] = nWire04
	 moduleMatrix[m][2] = nWireUnder04			: m = m + 1
	 moduleMatrix[m][1] = nHangers04
	 moduleMatrix[m][2] = nHangersUnder04		: m = m + 1
endif

if nModule >= 5 then
	moduleWidth[5] = modulWidth05
	 moduleMatrix[m][1] = bDivision05
	 moduleMatrix[m][2] = divisionHeight05		: m = m + 1
	 moduleMatrix[m][1] = iInteriorType05
	 moduleMatrix[m][2] = iInteriorTypeUnder05	: m = m + 1
	 moduleMatrix[m][1] = nShelves05
	 moduleMatrix[m][2] = nShelvesUnder05		: m = m + 1
	 moduleMatrix[m][1] = nDrawers05
	 moduleMatrix[m][2] = nDrawersUnder05		: m = m + 1
	 moduleMatrix[m][1] = nDrawersFront05
	 moduleMatrix[m][2] = nDrawersFrontUnder05	: m = m + 1
	 moduleMatrix[m][1] = nWire05
	 moduleMatrix[m][2] = nWireUnder05			: m = m + 1
	 moduleMatrix[m][1] = nHangers05
	 moduleMatrix[m][2] = nHangersUnder05		: m = m + 1
endif

if nModule >= 6 then
	moduleWidth[6] = modulWidth06
	 moduleMatrix[m][1] = bDivision06
	 moduleMatrix[m][2] = divisionHeight06		: m = m + 1
	 moduleMatrix[m][1] = iInteriorType06
	 moduleMatrix[m][2] = iInteriorTypeUnder06	: m = m + 1
	 moduleMatrix[m][1] = nShelves06
	 moduleMatrix[m][2] = nShelvesUnder06		: m = m + 1
	 moduleMatrix[m][1] = nDrawers06
	 moduleMatrix[m][2] = nDrawersUnder06		: m = m + 1
	 moduleMatrix[m][1] = nDrawersFront06
	 moduleMatrix[m][2] = nDrawersFrontUnder06	: m = m + 1
	 moduleMatrix[m][1] = nWire06
	 moduleMatrix[m][2] = nWireUnder06			: m = m + 1
	 moduleMatrix[m][1] = nHangers06
	 moduleMatrix[m][2] = nHangersUnder06		: m = m + 1
endif

goto 1000

"findElements":
	!-----Find Element-----
	nDrawersWithFront = 0
	nDrawers = 0
	nHangers = 0
	nShelves = 0
	for i = 1 to nModule
		if moduleMatrix[1+(i-1)*nElement][1] then									!! Horizontal division

			! Above
			if moduleMatrix[2+(i-1)*nElement][1] = INTERIOR_DRAWER then nDrawers = nDrawers + 1
			if moduleMatrix[2+(i-1)*nElement][1] = INTERIOR_DRAWERFRONT then nDrawersWithFront = nDrawersWithFront + 1
			if moduleMatrix[2+(i-1)*nElement][1] = INTERIOR_HANGER then nHangers = nHangers + 1
			if moduleMatrix[2+(i-1)*nElement][1] = INTERIOR_SHELF then nShelves = nShelves + 1

			! Under
			if moduleMatrix[2+(i-1)*nElement][2] = INTERIOR_DRAWER then nDrawers = nDrawers + 1
			if moduleMatrix[2+(i-1)*nElement][2] = INTERIOR_DRAWERFRONT then nDrawersWithFront = nDrawersWithFront + 1
			if moduleMatrix[2+(i-1)*nElement][2] = INTERIOR_HANGER then nHangers = nHangers + 1
			if moduleMatrix[2+(i-1)*nElement][2] = INTERIOR_SHELF then nShelves = nShelves + 1

		else																		!! No Division

			if moduleMatrix[2+(i-1)*nElement][1] = INTERIOR_DRAWER then nDrawers = nDrawers + 1
			if moduleMatrix[2+(i-1)*nElement][1] = INTERIOR_DRAWERFRONT then nDrawersWithFront = nDrawersWithFront + 1
			if moduleMatrix[2+(i-1)*nElement][1] = INTERIOR_HANGER then nHangers = nHangers + 1
			if moduleMatrix[2+(i-1)*nElement][1] = INTERIOR_SHELF then nShelves = nShelves + 1
		endif
	next i
return

1000:


]]>
</Script_1D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_PR SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_PR>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_UI SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[

gosub "findElements"

! =============================================================================
! Tabpage Structure Definition
! =============================================================================

TABID_Root 				= -1
_idxTab					= 1

TABID_StyleAndDim		= _idxTab  : _idxTab = _idxTab + 1
TABID_Module1			= _idxTab  : _idxTab = _idxTab + 1
TABID_Module2			= _idxTab  : _idxTab = _idxTab + 1
TABID_Module3			= _idxTab  : _idxTab = _idxTab + 1
TABID_Module4			= _idxTab  : _idxTab = _idxTab + 1
TABID_Module5			= _idxTab  : _idxTab = _idxTab + 1
TABID_Module6			= _idxTab  : _idxTab = _idxTab + 1
TABID_CorniceAndBase	= _idxTab  : _idxTab = _idxTab + 1
TABID_Door				= _idxTab  : _idxTab = _idxTab + 1
TABID_Drawer			= _idxTab  : _idxTab = _idxTab + 1
TABID_Knob				= _idxTab  : _idxTab = _idxTab + 1
TABID_2DRepr			= _idxTab  : _idxTab = _idxTab + 1
TABID_3DRepr			= _idxTab  : _idxTab = _idxTab + 1
TABID_MinSpace			= _idxTab  : _idxTab = _idxTab + 1
TABID_Descriptions		= _idxTab  : _idxTab = _idxTab + 1

pageStartY = 5

! =============================================================================
! Display actual tabpages
! =============================================================================

ui_dialog `Параметры Гардеробного Шкафа`,444,266
ui_current_page gs_ui_current_page

ui_page TABID_StyleAndDim,	TABID_Root,			`Стиль и Размеры`,	"uiTab_Dimension_flat(1)"
	gosub "StyleAndDimPage"

ui_page TABID_Module1,		TABID_StyleAndDim,	`Модуль 1`,				"uiTab_WardrobeModules_flat(1)"
	gosub "Module1Page"

ui_page TABID_Module2,		TABID_StyleAndDim,	`Модуль 2`,				"uiTab_WardrobeModules_flat(1)"
	gosub "Module2Page"

ui_page TABID_Module3,		TABID_StyleAndDim,	`Модуль 3`,				"uiTab_WardrobeModules_flat(1)"
	gosub "Module3Page"

ui_page TABID_Module4,		TABID_StyleAndDim,	`Модуль 4`,				"uiTab_WardrobeModules_flat(1)"
	gosub "Module4Page"

ui_page TABID_Module5,		TABID_StyleAndDim,	`Модуль 5`,				"uiTab_WardrobeModules_flat(1)"
	gosub "Module5Page"

ui_page TABID_Module6,		TABID_StyleAndDim,	`Модуль 6`,				"uiTab_WardrobeModules_flat(1)"
	gosub "Module6Page"

ui_page TABID_CorniceAndBase,	TABID_Root,		`Карниз и Основание`,		"uiTab_Leg_flat(1)"
	gosub "CorniceAndBasePage"

ui_page TABID_Door,				TABID_Root,		`Двери`,					"uiTab_WardrobeDoor_flat(1)"
	gosub "DoorPage"

ui_page TABID_Drawer,			TABID_Root,		`Ящик`,				"uiTab_Drawer_flat(1)"
	gosub "DrawerPage"

ui_page TABID_Knob,				TABID_Root,		`Ручка`,					"uiTab_Knob_flat(1)"
	gosub "KnobPage"

ui_page TABID_2DRepr,			TABID_Root,		`2D-отображение`,	"uiTab_2DRepr_flat(1)"
	gosub "2DReprPage"

ui_page TABID_3DRepr,			TABID_Root,		`3D-отображение и Покрытия`,	"uiTab_3DRepr_flat(1)"
	gosub "3DReprPage"

ui_page TABID_MinSpace,			TABID_Root,		`Минимальное Пространство`,		"uiTab_MinSpace_flat(1)"
	gosub "MinSpacePage"

ui_page TABID_Descriptions,		TABID_Root,		`Характеристики`,			"uiTab_Descriptions_flat(1)"
	gosub "DescriptionsPage"


! ==============================================================================
end
! ==============================================================================


! ==============================================================================
!Subroutines
! ==============================================================================

! ------------------------------------------------------------------------------
"StyleAndDimPage":
! ------------------------------------------------------------------------------

	pageStartY	= 5
	_yCurr		= pageStartY
	_dy			= 24
	_infHeight 	= 19
	_outfHeight = 15
	_offsetY	= 4

	_infWidth	= 90
	_infWidthShort = 54
	widthInf2 = 37
	x1	= 0
	x4	= 210
	x2	= x4 - _infWidth
	x3	= x4 - _infWidthShort

	x_separator = 220

	x5	= x_separator + 10
	x6	= 315
	x7	= x6 + _infWidth

	x8	= 407
	x9	= x8 + widthInf2

	y_separator	= 166

	x_pict		= 9
	y_pict		= 192


	ui_outfield `Количество Модулей`,	x1, _yCurr,				x3-x1-2,	_outfHeight
	ui_infield{3} "nModule",		x3, _yCurr - _offsetY,	x4-x3,		_infHeight,
		8, "",
		0, 0, 0, 0, 0, 0,
		0, `1`,	1,
		0, `2`,	2,
		0, `3`,	3,
		0, `4`,	4,
		0, `5`,	5,
		0, `6`,	6	ui_tooltip `Количество Модулей`
	_yCurr = _yCurr + _dy


	ui_outfield `Тип Дверей`,	x1, _yCurr,				x2-x1-2,	_outfHeight
	ui_infield{3} "iDoorType",	x2, _yCurr - _offsetY,	x4-x2,		_infHeight,
		8, "",
		0, 0, 0, 0, 0, 0,
		0, stDoorType[1],	2,
		0, stDoorType[2],	1,
		0, stDoorType[3],	0  ui_tooltip `Тип Дверей`
	_yCurr = _yCurr + _dy

	ui_outfield `Тип Корпуса`,	x1, _yCurr,				x2-x1-2,	_outfHeight
	ui_infield{3} "iFrameType",	x2, _yCurr - _offsetY,	x4-x2,		_infHeight,
		8, "",
		0, 0, 0, 0, 0, 0,
		0, stFrameTypes[1],	1,
		0, stFrameTypes[2],	2,
		0, stFrameTypes[3],	3  ui_tooltip `Тип Корпуса`
	_yCurr = _yCurr + _dy

	ui_outfield `Высота Шкафа`,	x1, _yCurr,			x2-x1-2,	_outfHeight
	ui_infield "ZZYZX",			x2, _yCurr - _offsetY,	x4-x2,		_infHeight ui_tooltip `Высота Шкафа`
	_yCurr = _yCurr + _dy

	ui_outfield `Толщина Стенок`,	x1, _yCurr,				x2-x1-2,	_outfHeight
	ui_infield "frameWidth",	x2, _yCurr - _offsetY,	x4-x2,		_infHeight ui_tooltip `Толщина Стенок`
	_yCurr = _yCurr + _dy

	ui_separator x_separator, 0, x_separator, y_separator-3


	_yCurr = pageStartY

	ui_infield{3} "bUniform", x5,	_yCurr - _offsetY,	x9-x5,	_infHeight,
		7, "",
		0, 0, 0, 0, 0, 0,
		"",`Одинаковая Ширина Модулей`, 0,
		"",`Одинаковая Ширина Модулей`, 1
	_yCurr = _yCurr + _dy

	dimensionForm = ""
	qq= REQUEST ("Working_length_unit", "", dimensionForm)

	ui_outfield `Модуль 1`,							x5, _yCurr, x6-x5-2,	_outfHeight
	ui_outfield str(dimensionForm, modulWidth01),	x6, _yCurr, x7-x6,		_outfHeight ui_tooltip `Ширина Модуля 1`

	ui_pict_button ui_function, ``, "uiFunctionWardrobeModules_flat(1)", x8, _yCurr - _offsetY - 1, x9-x8, 22, -TABID_Module1 ! Set GLOB_UI_BUTTON_ID
	_yCurr = _yCurr + _dy


	if nModule > 1 then
		ui_outfield `Модуль 2`,		x5, _yCurr,				x6-x5-2,	_outfHeight
		ui_infield "modulWidth02",	x6, _yCurr - _offsetY,	x7-x6,		_infHeight ui_tooltip `Ширина Модуля 2`

		ui_pict_button ui_function, ``, "uiFunctionWardrobeModules_flat(1)", x8, _yCurr - _offsetY - 1, x9-x8, 22, -TABID_Module2 ! Set GLOB_UI_BUTTON_ID
		_yCurr = _yCurr + _dy
	endif

	if nModule > 2 then
		ui_outfield `Модуль 3`,		x5, _yCurr,				x6-x5-2,	_outfHeight
		ui_infield "modulWidth03",	x6, _yCurr - _offsetY,	x7-x6,		_infHeight ui_tooltip `Ширина Модуля 3`

		ui_pict_button ui_function, ``, "uiFunctionWardrobeModules_flat(1)", x8, _yCurr - _offsetY - 1, x9-x8, 22, -TABID_Module3 ! Set GLOB_UI_BUTTON_ID
		_yCurr = _yCurr + _dy
	endif

	if nModule > 3 then
		ui_outfield `Модуль 4`,		x5, _yCurr,				x6-x5-2,	_outfHeight
		ui_infield "modulWidth04",	x6, _yCurr - _offsetY,	x7-x6,		_infHeight ui_tooltip `Ширина Модуля 4`

		ui_pict_button ui_function, ``, "uiFunctionWardrobeModules_flat(1)", x8, _yCurr - _offsetY - 1, x9-x8, 22, -TABID_Module4 ! Set GLOB_UI_BUTTON_ID
		_yCurr = _yCurr + _dy
	endif

	if nModule > 4 then
		ui_outfield `Модуль 5`,		x5, _yCurr,				x6-x5-2,	_outfHeight
		ui_infield "modulWidth05",	x6, _yCurr - _offsetY,	x7-x6,		_infHeight ui_tooltip `Ширина Модуля 5`

		ui_pict_button ui_function, ``, "uiFunctionWardrobeModules_flat(1)", x8, _yCurr - _offsetY - 1, x9-x8, 22, -TABID_Module5 ! Set GLOB_UI_BUTTON_ID
		_yCurr = _yCurr + _dy
	endif

	if nModule > 5 then
		ui_outfield `Модуль 6`,		x5, _yCurr,				x6-x5-2,	_outfHeight
		ui_infield "modulWidth06",	x6, _yCurr - _offsetY,	x7-x6,		_infHeight ui_tooltip `Ширина Модуля 6`

		ui_pict_button ui_function, ``, "uiFunctionWardrobeModules_flat(1)", x8, _yCurr - _offsetY - 1, x9-x8, 22, -TABID_Module6 ! Set GLOB_UI_BUTTON_ID
		_yCurr = _yCurr + _dy
	endif

	ui_separator 0, y_separator, 444, y_separator

	if nModule = 1 then ui_pict 1, x_pict, y_pict, 424, 56, 1 ! ModularWardrobe_StyleandDim_1Modul.png
	if nModule = 2 then ui_pict 2, x_pict, y_pict, 424, 56, 1 ! ModularWardrobe_StyleandDim_2Modul.png
	if nModule = 3 then ui_pict 3, x_pict, y_pict, 424, 56, 1 ! ModularWardrobe_StyleandDim_3Modul.png
	if nModule = 4 then ui_pict 4, x_pict, y_pict, 424, 56, 1 ! ModularWardrobe_StyleandDim_4Modul.png
	if nModule = 5 then ui_pict 5, x_pict, y_pict, 424, 56, 1 ! ModularWardrobe_StyleandDim_5Modul.png
	if nModule = 6 then ui_pict 6, x_pict, y_pict, 424, 56, 1 ! ModularWardrobe_StyleandDim_6Modul.png

	!Positions for numbers subroutine
	x_pict2 = x_pict + 10 
	y_pict2 = y_pict + 16
	gosub "ModuleNumbersForPictures"

	ui_infield "B", x_pict - 9, y_pict - 22,_infWidth, _infHeight ui_tooltip `Длина`
	_xOffsetForInf = 114
	if nModule = 5 then _xOffsetForInf = 145
	if nModule = 6 then _xOffsetForInf = 177
	ui_infield "A", x_pict + _xOffsetForInf, y_pict - 22,_infWidth, _infHeight ui_tooltip `Общая Ширина`

	return


! ------------------------------------------------------------------------------
"Module1Page":
! ------------------------------------------------------------------------------

	_nEditedModule	= 1
	_actBDivision	= bDivision01
	_strBDivision	= "bDivision01"

	_actInteriorType	= iInteriorType01
	_strInteriorType	= "iInteriorType01"
	_strHangers			= "nHangers01"
	_strWire			= "nWire01"
	_strDrawersFront	= "nDrawersFront01"
	_strDrawers			= "nDrawers01"
	_strShelves			= "nShelves01"

	_actInteriorTypeUnder	= iInteriorTypeUnder01
	_strInteriorTypeUnder	= "iInteriorTypeUnder01"
	_strHangersUnder		= "nHangersUnder01"
	_strWireUnder			= "nWireUnder01"
	_strDrawersFrontUnder	= "nDrawersFrontUnder01"
	_strDrawersUnder		= "nDrawersUnder01"
	_strShelvesUnder		= "nShelvesUnder01"

	_strDivisionHeight		= "divisionHeight01"

	gosub "ModulePages"

return

! ------------------------------------------------------------------------------
"Module2Page":
! ------------------------------------------------------------------------------

	_nEditedModule	= 2
	_actBDivision	= bDivision02
	_strBDivision	= "bDivision02"

	_actInteriorType	= iInteriorType02
	_strInteriorType	= "iInteriorType02"
	_strHangers			= "nHangers02"
	_strWire			= "nWire02"
	_strDrawersFront	= "nDrawersFront02"
	_strDrawers			= "nDrawers02"
	_strShelves			= "nShelves02"

	_actInteriorTypeUnder	= iInteriorTypeUnder02
	_strInteriorTypeUnder	= "iInteriorTypeUnder02"
	_strHangersUnder		= "nHangersUnder02"
	_strWireUnder			= "nWireUnder02"
	_strDrawersFrontUnder	= "nDrawersFrontUnder02"
	_strDrawersUnder		= "nDrawersUnder02"
	_strShelvesUnder		= "nShelvesUnder02"

	_strDivisionHeight		= "divisionHeight02"

	gosub "ModulePages"

return

! ------------------------------------------------------------------------------
"Module3Page":
! ------------------------------------------------------------------------------

	_nEditedModule	= 3
	_actBDivision	= bDivision03
	_strBDivision	= "bDivision03"

	_actInteriorType	= iInteriorType03
	_strInteriorType	= "iInteriorType03"
	_strHangers			= "nHangers03"
	_strWire			= "nWire03"
	_strDrawersFront	= "nDrawersFront03"
	_strDrawers			= "nDrawers03"
	_strShelves			= "nShelves03"

	_actInteriorTypeUnder	= iInteriorTypeUnder03
	_strInteriorTypeUnder	= "iInteriorTypeUnder03"
	_strHangersUnder		= "nHangersUnder03"
	_strWireUnder			= "nWireUnder03"
	_strDrawersFrontUnder	= "nDrawersFrontUnder03"
	_strDrawersUnder		= "nDrawersUnder03"
	_strShelvesUnder		= "nShelvesUnder03"

	_strDivisionHeight		= "divisionHeight03"

	gosub "ModulePages"

return

! ------------------------------------------------------------------------------
"Module4Page":
! ------------------------------------------------------------------------------


	_nEditedModule	= 4
	_actBDivision	= bDivision04
	_strBDivision	= "bDivision04"

	_actInteriorType	= iInteriorType04
	_strInteriorType	= "iInteriorType04"
	_strHangers			= "nHangers04"
	_strWire			= "nWire04"
	_strDrawersFront	= "nDrawersFront04"
	_strDrawers			= "nDrawers04"
	_strShelves			= "nShelves04"

	_actInteriorTypeUnder	= iInteriorTypeUnder04
	_strInteriorTypeUnder	= "iInteriorTypeUnder04"
	_strHangersUnder		= "nHangersUnder04"
	_strWireUnder			= "nWireUnder04"
	_strDrawersFrontUnder	= "nDrawersFrontUnder04"
	_strDrawersUnder		= "nDrawersUnder04"
	_strShelvesUnder		= "nShelvesUnder04"

	_strDivisionHeight		= "divisionHeight04"

	gosub "ModulePages"

return

! ------------------------------------------------------------------------------
"Module5Page":
! ------------------------------------------------------------------------------

	_nEditedModule	= 5
	_actBDivision	= bDivision05
	_strBDivision	= "bDivision05"

	_actInteriorType	= iInteriorType05
	_strInteriorType	= "iInteriorType05"
	_strHangers			= "nHangers05"
	_strWire			= "nWire05"
	_strDrawersFront	= "nDrawersFront05"
	_strDrawers			= "nDrawers05"
	_strShelves			= "nShelves05"

	_actInteriorTypeUnder	= iInteriorTypeUnder05
	_strInteriorTypeUnder	= "iInteriorTypeUnder05"
	_strHangersUnder		= "nHangersUnder05"
	_strWireUnder			= "nWireUnder05"
	_strDrawersFrontUnder	= "nDrawersFrontUnder05"
	_strDrawersUnder		= "nDrawersUnder05"
	_strShelvesUnder		= "nShelvesUnder05"

	_strDivisionHeight		= "divisionHeight05"

	gosub "ModulePages"

return

! ------------------------------------------------------------------------------
"Module6Page":
! ------------------------------------------------------------------------------

	_nEditedModule	= 6
	_actBDivision	= bDivision06
	_strBDivision	= "bDivision06"

	_actInteriorType	= iInteriorType06
	_strInteriorType	= "iInteriorType06"
	_strHangers			= "nHangers06"
	_strWire			= "nWire06"
	_strDrawersFront	= "nDrawersFront06"
	_strDrawers			= "nDrawers06"
	_strShelves			= "nShelves06"

	_actInteriorTypeUnder	= iInteriorTypeUnder06
	_strInteriorTypeUnder	= "iInteriorTypeUnder06"
	_strHangersUnder		= "nHangersUnder06"
	_strWireUnder			= "nWireUnder06"
	_strDrawersFrontUnder	= "nDrawersFrontUnder06"
	_strDrawersUnder		= "nDrawersUnder06"
	_strShelvesUnder		= "nShelvesUnder06"

	_strDivisionHeight		= "divisionHeight06"

	gosub "ModulePages"

return

! ------------------------------------------------------------------------------
"CorniceAndBasePage":
! ------------------------------------------------------------------------------

	call "ui_cabinetBase" parameters all	iBaseClass = 1,	! BASECLASS_BASECORNICE
											iItemClass = 4	! ITEMCLASS_NO_SIDEOVERHANG
return

! ------------------------------------------------------------------------------
"DoorPage":
! ------------------------------------------------------------------------------

	call "ui_cabinetDoor" parameters all	iItemClass = 5	! ITEMCLASS_WARDROBE_MODULAR

return

! ------------------------------------------------------------------------------
"DrawerPage":
! ------------------------------------------------------------------------------

	call "ui_cabinetDrawer" parameters all 	iItemClass = 3,	! ITEMCLASS_WARDROBE_MODULAR
											nDrawersWithFront = nDrawersWithFront

return

! ------------------------------------------------------------------------------
"KnobPage":
! ------------------------------------------------------------------------------

	call "ui_cabinetKnob" parameters all	iKnobClass = 2,	! KNOBCLASS_DOOR
											iItemClass = 0	! ITEMCLASS_OTHER
return

! ------------------------------------------------------------------------------
"2DReprPage":
! ------------------------------------------------------------------------------
	dim stSymbolTypes[7]
		stSymbolTypes[1] = `Стиль 1`
		stSymbolTypes[2] = `Стиль 2`
		stSymbolTypes[3] = `Стиль 3`
		stSymbolTypes[4] = `Стиль 4`
		stSymbolTypes[5] = `Стиль 5`
		stSymbolTypes[6] = `Стиль 6`
		stSymbolTypes[7] = `Стиль 7`

	call "ui_object_2DRepresentation" parameters	iSymbolClass		= 13,
													stSymbolTypes 		= stSymbolTypes,
													iSymbolStyle 		= iSymbolStyle,
													bOpeningAngle		= 0,
													bShowHangersin2D	= 1,
													bHangers			= bHangers,
													iFillListID			= TABID_2DRepr
return

! ------------------------------------------------------------------------------
"3DReprPage":
! ------------------------------------------------------------------------------
	dim surfacesArray[] 
	SurfItemID = 1   
		surfacesArray[SurfItemID]	= "gs_cabinet_mat"
		SurfItemID = SurfItemID + 1
		if  iDoorType <> 0 and (iDoorStyle <> 1 or iDoorStyle <> 8 or iDoorStyle <> 10 or iDoorStyle <> 99) then
			surfacesArray[SurfItemID]	= "matDoorFrame"
			SurfItemID = SurfItemID + 1
		endif
		if iDoorType <> 0 and (iDoorStyle = 3 or iDoorStyle = 5 or iDoorStyle = 7 or iDoorStyle = 9 or iDoorStyle = 12) then
			surfacesArray[SurfItemID]	= "matDoorGlass"
			SurfItemID = SurfItemID + 1
		endif
		if iDoorType <> 0 and (iDoorStyle = 14 or iDoorStyle = 15) then
			surfacesArray[SurfItemID]	= "matDoorInset1"
			SurfItemID = SurfItemID + 1
		endif
		if iDoorType <> 0 and (iDoorStyle <> 3 and iDoorStyle <> 5 and iDoorStyle <> 7 and iDoorStyle <> 9 and iDoorStyle <> 12) then
			if iDoorStyle = 14 or iDoorStyle = 15 then
				surfacesArray[SurfItemID]	= "matDoorInset2"
			else
				surfacesArray[SurfItemID]	= "matDoorInset1"
			endif
			SurfItemID = SurfItemID + 1
		endif
		if iDoorType <> 0 and (iDoorStyle > 15) then
			surfacesArray[SurfItemID]	= "matDoorDecor2"
			SurfItemID = SurfItemID + 1
		endif
		if iDoorType <> 0 and bKnob then
			surfacesArray[SurfItemID]	= "gs_knob_mat"
			SurfItemID = SurfItemID + 1
		endif
		if iFrameType <> FRAME_WIRE and nShelves > 0 then
			surfacesArray[SurfItemID]	= "gs_shelf_mat"
			SurfItemID = SurfItemID + 1
		endif
		if iFrameType = FRAME_WIRE then
			surfacesArray[SurfItemID]	= "matSteelShelf"
			SurfItemID = SurfItemID + 1
		endif
		if nDrawersWithFront > 0 and nDrawers > 0 then
			surfacesArray[SurfItemID]	= "gs_drawer_mat"
			SurfItemID = SurfItemID + 1
		endif
		if iFrameType = FRAME_WIRE then
			surfacesArray[SurfItemID]	= "matDrawerInset"
			SurfItemID = SurfItemID + 1
		endif
		if nHangers > 0 then
			surfacesArray[SurfItemID]	= "gs_hanger_mat"
			SurfItemID = SurfItemID + 1
		endif
		if bCornice then
			surfacesArray[SurfItemID]	= "gs_cornice_mat"
			SurfItemID = SurfItemID + 1
		endif
		if bBase then
			surfacesArray[SurfItemID]	= "gs_leg_mat"
			SurfItemID = SurfItemID + 1
		endif

	dim childFlagArray[]
	for k = 1 to vardim1(surfacesArray)
		childFlagArray[k]	= 0
	next k
	
	call "ui_object_3DRepresentation" parameters 	bShowAnimation		= 0,
													surfacesArray		= surfacesArray,
													childFlagArray		= childFlagArray,
													gs_detlevel_3D_m	= gs_detlevel_3D_m,
													bShowResol			= 1,
													gs_shadow			= gs_shadow,
													gs_resol			= gs_resol,
													iSurfaceListID		= TABID_3DRepr
return

! ------------------------------------------------------------------------------
"MinSpacePage":
! ------------------------------------------------------------------------------

	x_pict		= 135
	y_pict		= 65
	_infWidth	= 90
	_infHeight 	= 19


	ui_pict 15, x_pict, y_pict, 141, 144, 1 !modularWardrobe_MinSpace.png

	ui_infield "A",			x_pict + 20,	y_pict - 22, _infWidth, _infHeight ui_tooltip `Общая Ширина`
	ui_infield "B",			x_pict + 143,	y_pict + 23, _infWidth, _infHeight ui_tooltip `Длина`
	ui_infield "MSFront",	x_pict + 143,	y_pict + 87, _infWidth, _infHeight ui_tooltip `Минимальное Пространство Спереди`

return

! ------------------------------------------------------------------------------
"DescriptionsPage":
! ------------------------------------------------------------------------------

	dim stParamNames[16]
		stParamNames[1] = "gs_list_cost"
		stParamNames[2] = "gs_list_manufacturer"
		stParamNames[3] = "gs_list_note"
		stParamNames[4] = "gs_list_location"
		stParamNames[5] = "gs_list_accessories"
		stParamNames[6] = "FM_Type"
		stParamNames[7] = "FM_InventoryNumber"
		stParamNames[8] = "FM_SerialNumber"
		stParamNames[9] = "FM_ProductionYear"
		stParamNames[10] = "FM_ObjectWeight"
		stParamNames[11] = "FM_ObjectWeightUnit"
		stParamNames[12] = "gs_list_custom1"
		stParamNames[13] = "gs_list_custom2"
		stParamNames[14] = "gs_list_custom3"
		stParamNames[15] = "gs_list_custom4"
		stParamNames[16] = "gs_list_custom5"

	dim stOnormNames[]
		stOnormNames[1] = "gs_onorm_dimensions"
		stOnormNames[2] = "gs_onorm_manufacturer"
		stOnormNames[3] = "gs_onorm_baseheight_value"
		stOnormNames[4] = "gs_onorm_baseheight"
		stOnormNames[5] = "gs_onorm_assemblydate"
		stOnormNames[6] = "gs_onorm_customtext1"
		stOnormNames[7] = "gs_onorm_customtext2"
		stOnormNames[8] = "gs_onorm_aks"
		stOnormNames[9] = "gs_onorm_product"
		stOnormNames[10] = "gs_onorm_leistungbuch"
		stOnormNames[11] = "gs_onorm_description"
		stOnormNames[12] = "gs_onorm_number"
		stOnormNames[13] = "gs_onorm_id"
		stOnormNames[14] = "gs_onorm_admission"
		stOnormNames[15] = "gs_onorm_modification"
		stOnormNames[16] = "gs_onorm_tozonenumber"

	if LibraryLangCode = "AUT" or LibraryLangCode = "CHE" or LibraryLangCode = "GER" then
		_bShowOnormItems = 1
	else
		_bShowOnormItems = 0
	endif

	call "ui_object_listing" parameters all listfieldID 	= TABID_Descriptions,
										listFieldPosY 		= 0,
										listFieldHeight 	= 265,
										stDescHeader 		= "",
										stValueHeader 		= "",
										bShowOnormItems 	= _bShowOnormItems,
										stParamNames 		= stParamNames,
										stOnormNames 		= stOnormNames
return

! ------------------------------------------------------------------------------
"ModulePages":
! ------------------------------------------------------------------------------

	pageStartY	= 30
	_yCurr		= pageStartY
	_dy			= 24
	_infHeight 	= 19
	_outfHeight = 15
	_offsetY	= 4

	_infWidth	= 115
	_infWidthShort = 55
	x1	= 0
	x4	= 290
	x2	= x4 - _infWidth
	x3	= x4 - _infWidthShort

	x_separator = 297

	x_pict		= 397
	y_pict		= 19

	y_separator	= 190

	x_pict2		= 19
	y_pict2		= 202

	! --- Flag for outfields
	_outfFlag = 0
	if nModule < _nEditedModule then
		_outfFlag = 4
	endif 

	ui_infield{4} _strBDivision, x1, _yCurr - _offsetY, x4 - x1, _infHeight,
		7, "",
		0, 0, 0, 0, 0, 0,
		0, `Нижнее Отделение`, 0,
		0, `Нижнее Отделение`, 1
	_yCurr = _yCurr + _dy
	
	if _actBDivision then
		_stDivisionType = `Тип Верхнего Отделения`
	else
		_stDivisionType = `Тип`
	endif

	ui_outfield		_stDivisionType,	x1, _yCurr,				x2-x1-2,	_outfHeight, _outfFlag
	ui_infield{4}	_strInteriorType,	x2, _yCurr - _offsetY,	x4-x2,		_infHeight,
			8, "", 6, 1, 0, 0, 0, 0,
			1, stInteriorType[1], 5,
			2, stInteriorType[2], 4,
			3, stInteriorType[3], 3,
			4, stInteriorType[4], 2,
			5, stInteriorType[5], 1,
			6, stInteriorType[6], 0   ui_tooltip _stDivisionType
	_yCurr = _yCurr + _dy

		if _actInteriorType = INTERIOR_HANGER then
			ui_outfield `Количество Штанг`,	x1, _yCurr,				x3-x1-2,	_outfHeight, _outfFlag
			ui_infield{4} _strHangers,		x3, _yCurr - _offsetY,	x4-x3,		_infHeight ui_tooltip `Количество Штанг`
		endif
		if _actInteriorType = INTERIOR_WIRE then
			ui_outfield `Количество Сетчатых Корзин`,	x1, _yCurr,				x3-x1-2,	_outfHeight, _outfFlag
			ui_infield{4} _strWire,				x3, _yCurr - _offsetY,	x4-x3,		_infHeight ui_tooltip `Количество Сетчатых Корзин`
		endif
	
		if _actInteriorType = INTERIOR_DRAWERFRONT then
			ui_outfield `Количество Ящиков с Фасадами`,	x1, _yCurr,				x3-x1-2,	_outfHeight, _outfFlag
			ui_infield{4} _strDrawersFront,				x3, _yCurr - _offsetY,	x4-x3,		_infHeight ui_tooltip `Количество Ящиков с Фасадами`
		endif
	
		if _actInteriorType = INTERIOR_DRAWER then
			ui_outfield `Количество Ящиков`,	x1, _yCurr,				x3-x1-2,	_outfHeight, _outfFlag
			ui_infield{4} _strDrawers,		x3, _yCurr - _offsetY,	x4-x3,		_infHeight ui_tooltip `Количество Ящиков`
		endif
	
		if _actInteriorType = INTERIOR_SHELF then
			ui_outfield `Кол-во Полок`,	x1, _yCurr,				x3-x1-2,	_outfHeight, _outfFlag
			ui_infield{4} _strShelves,		x3, _yCurr - _offsetY,	x4-x3,		_infHeight ui_tooltip `Кол-во Полок`
		endif

	
	_yCurr = _yCurr + _dy

	if _actBDivision then
		ui_outfield `Тип Нижнего Отделения`, x1 , _yCurr, x2-x1-2, _outfHeight, _outfFlag
		ui_infield{4} _strInteriorTypeUnder, x2, _yCurr - _offsetY, x4-x2, _infHeight,
				8, "", 6, 1, 0, 0, 0, 0,
				1, stInteriorType[1], 5,
				2, stInteriorType[2], 4,
				3, stInteriorType[3], 3,
				4, stInteriorType[4], 2,
				5, stInteriorType[5], 1,
				6, stInteriorType[6], 0   ui_tooltip `Тип Нижнего Отделения`
		_yCurr = _yCurr + _dy

		if _actInteriorTypeUnder = INTERIOR_HANGER then
			ui_outfield `Количество Штанг`,	x1, _yCurr,				x3-x1-2,	_outfHeight, _outfFlag
			ui_infield{4} _strHangersUnder,	x3, _yCurr - _offsetY,	x4-x3,		_infHeight ui_tooltip `Количество Штанг`
		endif
		if _actInteriorTypeUnder = INTERIOR_WIRE then
			ui_outfield `Количество Сетчатых Корзин`,	x1, _yCurr,				x3-x1-2,	_outfHeight, _outfFlag
			ui_infield{4} _strWireUnder,		x3, _yCurr - _offsetY,	x4-x3,		_infHeight ui_tooltip `Количество Сетчатых Корзин`
		endif
	
		if _actInteriorTypeUnder = INTERIOR_DRAWERFRONT then
			ui_outfield `Количество Ящиков с Фасадами`,	x1, _yCurr,				x3-x1-2,	_outfHeight, _outfFlag
			ui_infield{4} _strDrawersFrontUnder,		x3, _yCurr - _offsetY,	x4-x3,		_infHeight ui_tooltip `Количество Ящиков с Фасадами`
		endif
	
		if _actInteriorTypeUnder = INTERIOR_DRAWER then
			ui_outfield `Количество Ящиков`,	x1, _yCurr,				x3-x1-2,	_outfHeight, _outfFlag
			ui_infield{4} _strDrawersUnder,	x3, _yCurr - _offsetY,	x4-x3,		_infHeight ui_tooltip `Количество Ящиков`
		endif
	
		if _actInteriorTypeUnder = INTERIOR_SHELF then
			ui_outfield `Кол-во Полок`,	x1, _yCurr,				x3-x1-2,	_outfHeight, _outfFlag
			ui_infield{4} _strShelvesUnder,	x3, _yCurr - _offsetY,	x4-x3,		_infHeight ui_tooltip `Кол-во Полок`
		endif

	endif

	ui_separator x_separator, 0, x_separator, 187

	ui_separator 0, y_separator, 444, y_separator

	ui_pict 7, x_pict, y_pict, 46, 139, 1 !ModularWardrobe_DivHeight.png
	ui_infield{4} _strDivisionHeight, x_pict-93, y_pict + 103, 90, _infHeight ui_tooltip `Высота Нижнего Отделения`


	gosub "PictOnModulePage"

	gosub "ModuleNumbersForPictures"

return

! ------------------------------------------------------------------------------
"PictOnModulePage":
! ------------------------------------------------------------------------------

	if _nEditedModule = 1 then
		ui_pict 9, x_pict2, y_pict2, 6, 36, 1 !modularWardrobe_start_active.png
	else
		ui_pict 8, x_pict2, y_pict2, 6, 36, 1 !modularWardrobe_start.png
	endif
	
	for iModule = 1 to nModule
		if iModule = nModule then
			if iModule = _nEditedModule then
				ui_pict 14,		x_pict2 + 6 + (iModule-1)*68, y_pict2, 68, 36, 1 !modularWardrobe_end_active.png
			else
				ui_pict 13,		x_pict2 + 6 + (iModule-1)*68, y_pict2, 68, 36, 1 !modularWardrobe_end.png
			endif
		else
			if iModule = _nEditedModule then
				ui_pict 11,		x_pict2 + 6 + (iModule-1)*68, y_pict2, 68, 36, 1 !modularWardrobe_middle_active.png
			else
				if iModule + 1 = _nEditedModule then
					ui_pict 12,	x_pict2 + 6 + (iModule-1)*68, y_pict2, 68, 36, 1 !modularWardrobe_middle_nextactive.png
				else
					ui_pict 10,	x_pict2 + 6 + (iModule-1)*68, y_pict2, 68, 36, 1 !modularWardrobe_middle.png
				endif
			endif
	
		endif
	next iModule

return

! ------------------------------------------------------------------------------
"ModuleNumbersForPictures":
! ------------------------------------------------------------------------------

	for iModuleforNum = 1 to nModule
		ui_outfield str(iModuleforNum, 1, 0), x_pict2 + 34 + (iModuleforNum - 1) * 68, y_pict2 + 40, 20, _outfHeight
	next iModuleforNum

return

]]>
</Script_UI>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_VL SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[

!Hide all parameters from UI
hideparameter all  "A", "B", "ZZYZX"

call "FM_types" parameters all

gosub "findElements"

values "a" range [minDist + frameWidth * 2, ]
values "b" range [minDist, ]
values "zzyzx" range [minDist*3+bCornice*cot, ]

_nModuleMaxValue = min( int ((A - frameWidth*2) / minDist), 6)
if _nModuleMaxValue = 0 then
	put 1
else
	for iValue = 1 to _nModuleMaxValue
		put iValue
	next iValue
endif
values "nModule" get(nsp)

values "nTempModule" 1,2,3,4,5,6
if iFrameType = FRAME_WIRE then
	values "frameWidth" range [0.015, ]
else
	values "frameWidth" range [0.02, ]
endif
for i = 1 to nModule
	put i
next i
values "nEditableModule" get(nsp)

if nShelves = 0 then
	hideparameter "gs_shelf_mat"
	lock "gs_shelf_mat"
endif

if nHangers = 0 then
	hideparameter "gs_hanger_mat"
	lock "gs_hanger_mat"
endif


! ----- Frame Type-----
values "frameType" stFrameTypes
values "iFrameType"  FRAME_SOLID, FRAME_SOLID_BACK, FRAME_WIRE
if GLOB_MODPAR_NAME = "frameType"  or GLOB_MODPAR_NAME = "iFrameType" then
	if GLOB_MODPAR_NAME = "frameType" then
		iFrameType = 0
		for i = 1 to vardim1(stFrameTypes)
			if frameType= stFrameTypes[i] then	iFrameType = i
		next i
		parameters iFrameType = iFrameType
	endif

	if GLOB_MODPAR_NAME = "iFrameType" then
		iFrameType = max(min(iFrameType,3),1)
		parameters frameType = stFrameTypes[iFrameType]
	endif

	if iFrameType = FRAME_WIRE then
		frameWidth = 0.015
		parameters frameWidth = frameWidth
	endif

	if not(bUniform) then
		tempModulWidth = 0
		for i = nModule to 2 step -1
			if i = 6 then tempModulWidth = tempModulWidth + modulWidth06
			if i = 5 then tempModulWidth = tempModulWidth + modulWidth05
			if i = 4 then tempModulWidth = tempModulWidth + modulWidth04
			if i = 3 then tempModulWidth = tempModulWidth + modulWidth03
			if i = 2 then tempModulWidth = tempModulWidth + modulWidth02
		next i
		modulWidth01 = A- tempModulWidth - frameWidth
		parameters modulWidth01 = modulWidth01
	else
		gosub "allocationModuleWidth"
	endif
else
	iFrameType = max(min(iFrameType,3),1)
	parameters frameType = stFrameTypes[iFrameType]
endif

if iFrameType = FRAME_WIRE then
	lock "leg_h", "leg_w", "gs_leg_type", "gs_leg_type_m", "gs_leg_mat"
	hideparameter "leg_h", "leg_w", "gs_leg_type", "gs_leg_type_m", "gs_leg_mat"

	lock "gs_cabinet_mat", "gs_shelf_mat"
	hideparameter "gs_cabinet_mat", "gs_shelf_mat"
else
	lock "matSteelCabinet", "matSteelShelf"
	hideparameter "matSteelCabinet", "matSteelShelf"
endif


! ----- LENGTH-----
lock "modulWidth01"
if bUniform then
	if nModule > min(int ((A - frameWidth) / minDist), 6) then
		nModule = min(int ((A - frameWidth) / minDist), 6)
		parameters nModule = nModule
	endif
	gosub "allocationModuleWidth"
	lock "modulWidth02", "modulWidth03", "modulWidth04", "modulWidth05", "modulWidth06"

	nTempModule = nModule
	parameters nTempModule = nTempModule
else
	if GLOB_MODPAR_NAME = "nModule" or GLOB_MODPAR_NAME = "A" or GLOB_MODPAR_NAME = "modulWidth02" or GLOB_MODPAR_NAME = "modulWidth03"\
		or GLOB_MODPAR_NAME = "modulWidth04" or GLOB_MODPAR_NAME = "modulWidth05" or GLOB_MODPAR_NAME = "modulWidth06" then

		if GLOB_MODPAR_NAME = "nModule" then
			if nTempModule > nModule then
				tempModulWidth = 0
				for i = nTempModule to nModule+1 step -1
					if i = 6 then tempModulWidth = tempModulWidth + modulWidth06
					if i = 5 then tempModulWidth = tempModulWidth + modulWidth05
					if i = 4 then tempModulWidth = tempModulWidth + modulWidth04
					if i = 3 then tempModulWidth = tempModulWidth + modulWidth03
					if i = 2 then tempModulWidth = tempModulWidth + modulWidth02
				next i
				modulWidth01 = modulWidth01 + tempModulWidth
				parameters modulWidth01 = modulWidth01
			endif

			if nTempModule < nModule then
				if modulWidth01 / (nModule - nTempModule + 1) >= minDist then
					tempModulWidth = modulWidth01 / (nModule - nTempModule + 1)
					modulWidth01 = tempModulWidth
					parameters modulWidth01 = modulWidth01
					for i = nTempModule+1 to nModule
						if i = 2 then
							modulWidth02 = tempModulWidth
							parameters modulWidth02 = modulWidth02
						endif
						if i = 3 then
							modulWidth03 = tempModulWidth
							parameters modulWidth03 = modulWidth03
						endif
						if i = 4 then
							modulWidth04 = tempModulWidth
							parameters modulWidth04 = modulWidth04
						endif
						if i = 5 then
							modulWidth05 = tempModulWidth
							parameters modulWidth05 = modulWidth05
						endif
						if i = 6 then
							modulWidth06 = tempModulWidth
							parameters modulWidth06 = modulWidth06
						endif
					next i
				else
					if nModule > min(int ((A - frameWidth) / minDist), 6) then
						nModule = min(int ((A - frameWidth) / minDist), 6)
						parameters nModule = nModule
					endif
					gosub "allocationModuleWidth"
				endif
			endif
			nTempModule = nModule
			parameters nTempModule = nTempModule
		endif

		if GLOB_MODPAR_NAME = "A" then
			if nModule > min(int ((A - frameWidth) / minDist), 6) then
				nModule = min(int ((A - frameWidth) / minDist), 6)
				parameters nModule = nModule
			endif
			gosub "allocationModuleWidth"
		endif

		if GLOB_MODPAR_NAME = "modulWidth02" then
			if nModule >= 2 and not(bUniform) then
				modulWidth01 = A-frameWidth-modulWidth02-(nModule>=3)*modulWidth03-(nModule>=4)*modulWidth04-(nModule>=5)*modulWidth05-(nModule>=6)*modulWidth06
				parameters modulWidth01 = modulWidth01
			endif
		endif

		if GLOB_MODPAR_NAME = "modulWidth03" then
			if nModule >= 3 and not(bUniform) then
				modulWidth01 = A-frameWidth-modulWidth02-modulWidth03-(nModule>=4)*modulWidth04-(nModule>=5)*modulWidth05-(nModule>=6)*modulWidth06
				parameters modulWidth01 = modulWidth01
			endif
		endif

		if GLOB_MODPAR_NAME = "modulWidth04" then
			if nModule >= 4 and not(bUniform) then
				modulWidth01 = A-frameWidth-modulWidth02-modulWidth03-modulWidth04-(nModule>=5)*modulWidth05-(nModule>=6)*modulWidth06
				parameters modulWidth01 = modulWidth01
			endif
		endif

		if GLOB_MODPAR_NAME = "modulWidth05" then
			if nModule >= 5 and not(bUniform) then
				modulWidth01 = A-frameWidth-modulWidth02-modulWidth03-modulWidth04-modulWidth05-(nModule>=6)*modulWidth06
				parameters modulWidth01 = modulWidth01
			endif
		endif

		if GLOB_MODPAR_NAME = "modulWidth06" then
			if nModule >= 6 and not(bUniform) then
				modulWidth01 = A-frameWidth-modulWidth02-modulWidth03-modulWidth04-modulWidth05-modulWidth06
				parameters modulWidth01 = modulWidth01
			endif
		endif

	else
		nTempModule = nModule
		parameters nTempModule = nTempModule

		tempModulWidth = 0
		for i = 2 to nModule
			if i = 2 then tempModulWidth = tempModulWidth + modulWidth02
			if i = 3 then tempModulWidth = tempModulWidth + modulWidth03
			if i = 4 then tempModulWidth = tempModulWidth + modulWidth04
			if i = 5 then tempModulWidth = tempModulWidth + modulWidth05
			if i = 6 then tempModulWidth = tempModulWidth + modulWidth06
		next i

		modulWidth01 = A - tempModulWidth - frameWidth
		parameters modulWidth01 = modulWidth01
	endif
endif


! ==============================================================================
! Door Settings
! ==============================================================================
! ----- Door Style -----
dim doorStyleNumber[12]
	doorStyleNumber[1] = 1
	doorStyleNumber[2] = 13
	doorStyleNumber[3] = 3
	doorStyleNumber[4] = 9
	doorStyleNumber[5] = 4
	doorStyleNumber[6] = 5
	doorStyleNumber[7] = 14
	doorStyleNumber[8] = 15
	doorStyleNumber[9] = 16
	doorStyleNumber[10] = 17
	doorStyleNumber[11] = 18
	doorStyleNumber[12] = 10

values "iDoorStyle" doorStyleNumber
values "doorStyle" stDoorStyle
if GLOB_MODPAR_NAME = "doorStyle" then
	iDoorStyle = 1
	for i = 1 to vardim1(stDoorStyle)
		if doorStyle = stDoorStyle[i] then iDoorStyle = doorStyleNumber[i]
	next i
	parameters iDoorStyle = iDoorStyle
else
	for i = 1 to vardim1(stDoorStyle)
		if iDoorStyle = doorStyleNumber[i] then doorStyle = stDoorStyle[i]
	next i
	parameters doorStyle = doorStyle
endif

! ----- Door Type -----
values "doorType" stDoorType
values "iDoorType" DOOR_TYPE_NONE, DOOR_TYPE_SLIDING, DOOR_TYPE_TRIPLE_SIDING
if GLOB_MODPAR_NAME = "doorType"  or GLOB_MODPAR_NAME = "iDoorType" then
	if GLOB_MODPAR_NAME = "doorType" then
		iDoorType = 2
		for i = 1 to vardim1(stDoorType)
			if doorType = stDoorType[i] then	iDoorType = 3-i
		next i
		parameters iDoorType = iDoorType
	else
		iDoorType = max(min(iDoorType,2),0)
		parameters doorType = stDoorType[3-iDoorType]
	endif

	if nDrawersWithFront and iDoorType <> DOOR_TYPE_NONE then
		for i = 1 to nModule
			! Above
			if moduleMatrix[2+(i-1)*nElement][1] = INTERIOR_DRAWERFRONT then
				moduleMatrix[2+(i-1)*nElement][1] = INTERIOR_DRAWER
				moduleMatrix[4+(i-1)*nElement][1] = moduleMatrix[5+(i-1)*nElement][1]
				if i = 1 then
					iInteriorType01 = INTERIOR_DRAWER
					parameters iInteriorType01 = iInteriorType01
					nDrawers01 = nDrawersFront01
					parameters nDrawers01 = nDrawers01
				endif
				if i = 2 then
					iInteriorType02 = INTERIOR_DRAWER
					parameters iInteriorType02 = iInteriorType02
					nDrawers02 = nDrawersFront02
					parameters nDrawers02 = nDrawers02
				endif
				if i = 3 then
					iInteriorType03 = INTERIOR_DRAWER
					parameters iInteriorType03 = iInteriorType03
					nDrawers03 = nDrawersFront03
					parameters nDrawers03 = nDrawers03
				endif
				if i = 4 then
					iInteriorType04 = INTERIOR_DRAWER
					parameters iInteriorType04 = iInteriorType04
					nDrawers04 = nDrawersFront04
					parameters nDrawers04 = nDrawers04
				endif
				if i = 5 then
					iInteriorType05 = INTERIOR_DRAWER
					parameters iInteriorType05 = iInteriorType05
					nDrawers05 = nDrawersFront05
					parameters nDrawers05 = nDrawers05
				endif
				if i = 6 then
					iInteriorType06 = INTERIOR_DRAWER
					parameters iInteriorType06 = iInteriorType06
					nDrawers06 = nDrawersFront06
					parameters nDrawers06 = nDrawers06
				endif
			endif

			! Under
			if moduleMatrix[2+(i-1)*nElement][2] = INTERIOR_DRAWERFRONT then
				moduleMatrix[2+(i-1)*nElement][2] = INTERIOR_DRAWER
				moduleMatrix[4+(i-1)*nElement][2] = moduleMatrix[5+(i-1)*nElement][2]
				if i = 1 then
					iInteriorTypeUnder01 = INTERIOR_DRAWER
					parameters iInteriorTypeUnder01 = iInteriorTypeUnder01
					nDrawersUnder01 = nDrawersFrontUnder01
					parameters nDrawersUnder01 = nDrawersUnder01
				endif
				if i = 2 then
					iInteriorTypeUnder02 = INTERIOR_DRAWER
					parameters iInteriorTypeUnder02 = iInteriorTypeUnder02
					nDrawersUnder02 = nDrawersFrontUnder02
					parameters nDrawersUnder02 = nDrawersUnder02
				endif
				if i = 3 then
					iInteriorTypeUnder03 = INTERIOR_DRAWER
					parameters iInteriorTypeUnder03 = iInteriorTypeUnder03
					nDrawersUnder03 = nDrawersFrontUnder03
					parameters nDrawersUnder03 = nDrawersUnder03
				endif
				if i = 4 then
					iInteriorTypeUnder04 = INTERIOR_DRAWER
					parameters iInteriorTypeUnder04 = iInteriorTypeUnder04
					nDrawersUnder04 = nDrawersFrontUnder04
					parameters nDrawersUnder04 = nDrawersUnder04
				endif
				if i = 4 then
					iInteriorTypeUnder05 = INTERIOR_DRAWER
					parameters iInteriorTypeUnder05 = iInteriorTypeUnder05
					nDrawersUnder05 = nDrawersFrontUnder05
					parameters nDrawersUnder05 = nDrawersUnder05
				endif
				if i = 6 then
					iInteriorTypeUnder06 = INTERIOR_DRAWER
					parameters iInteriorTypeUnder06 = iInteriorTypeUnder06
					nDrawersUnder06 = nDrawersFrontUnder06
					parameters nDrawersUnder06 = nDrawersUnder06
				endif
			endif

		next i
	endif
else
	iDoorType = max(min(iDoorType,2),0)
	parameters doorType = stDoorType[3-iDoorType]
endif

if iDoorType = DOOR_TYPE_NONE then
	hideparameter "doorStyle", "iDoorStyle", "iTempDoorStyle", "doorThickness", "doorFrameWidth", "mullionWidth", "nVerticalMullion", "nHorizontalMullion", "bBevel", "gs_door"
	lock "doorStyle", "iDoorStyle", "iTempDoorStyle", "doorThickness", "doorFrameWidth", "mullionWidth", "nVerticalMullion", "nHorizontalMullion", "bBevel", "gs_door"

	hideparameter "matDoorFrame", "matDoorInset1", "matDoorInset2"
	lock "matDoorFrame", "matDoorInset1", "matDoorInset2"
endif


! ==============================================================================
! Door Style Change
! ==============================================================================
if iDoorStyle <> iTempDoorStyle then
	if (iDoorStyle < 13 | iDoorStyle = 14) and (iTempDoorStyle > 12 & iTempDoorStyle <> 14) then
		doorFrameWidth = 0.1
		parameters doorFrameWidth = doorFrameWidth
	endif

	if (iDoorStyle > 12 & iDoorStyle <> 14) and (iTempDoorStyle < 13 | iTempDoorStyle = 14) then
		doorFrameWidth = 0.02
		parameters doorFrameWidth = doorFrameWidth
	endif

	if (iDoorStyle < 15 & iDoorStyle <> 13) and (iTempDoorStyle >= 15 | iTempDoorStyle = 13) then
		matDoorFrame = 15		! Wd-Pine Horizontal
		parameters matDoorFrame = matDoorFrame
	endif

	if (iDoorStyle >= 15 | iDoorStyle = 13) and (iTempDoorStyle < 15 & iTempDoorStyle <> 13) then
		matDoorFrame = 13		! Mtl-Chrome
		parameters matDoorFrame = matDoorFrame
	endif

	if iDoorStyle < 16 and iTempDoorStyle >= 16 then
		matDoorInset1 = 15		! Wd-Pine Horizontal
		parameters matDoorInset1 = matDoorInset1 
	endif

	if iDoorStyle >= 16 and iTempDoorStyle < 16 then
		matDoorInset1 = 18		! Paint-1
		parameters matDoorInset1 = matDoorInset1
	endif

	if iDoorStyle = 13 and iTempDoorStyle <> 13 then
		nVerticalMullion = 0
		nHorizontalMullion = 3
		parameters nVerticalMullion = nVerticalMullion, nHorizontalMullion = nHorizontalMullion
	endif

	if iDoorStyle <> 13 and iTempDoorStyle = 13 then
		nVerticalMullion = 1
		nHorizontalMullion = 3
		parameters nVerticalMullion = nVerticalMullion, nHorizontalMullion = nHorizontalMullion
	endif

	iTempDoorStyle = iDoorStyle
	parameters iTempDoorStyle = iTempDoorStyle
endif

! ==============================================================================
! Door Parameters
! ==============================================================================
values "doorThickness" range [0.02,]
if iDoorStyle <= 12 then
	values "doorFrameWidth" range [0.03,]
else
	values "doorFrameWidth" range [0,]
endif
values "mullionWidth" range (0, )
values "nVerticalMullion" range [0,]
values "nHorizontalMullion" range [0,]

if iDoorStyle = 1 or iDoorStyle = 8 then
	lock "doorFrameWidth", "matDoorFrame"
	hideparameter "doorFrameWidth", "matDoorFrame"
endif

if iDoorStyle=10 or iDoorStyle>14 then
	lock "bBevel"
	hideparameter "bBevel"
endif

if iDoorStyle <> 3 and iDoorStyle <> 5 and iDoorStyle <> 7 and iDoorStyle <> 12 and iDoorStyle <> 13 then
	lock "mullionWidth", "nVerticalMullion", "nHorizontalMullion"
	hideparameter "mullionWidth", "nVerticalMullion", "nHorizontalMullion"
endif

if iDoorStyle = 10 or iDoorStyle = 99 then
	lock "doorFrameWidth", "matDoorFrame", "matDoorInset1", "matDoorInset2"
	hideparameter "doorFrameWidth", "matDoorFrame", "matDoorInset1", "matDoorInset2"

	dim gs_pt[]
	call "Object_Panel_Collection" parameters returned_parameters gs_pt
	values "doorCustomPanelName" gs_pt
else
	lock "doorCustomPanelName"
	hideparameter "doorCustomPanelName"
endif

! ==============================================================================
! Door Opening
! ==============================================================================
openingRange = 0.9

values "openingDoor1" range [0, openingRange*100]
if nDoor = 3 then
	values "openingDoor2" range [-openingRange*100, openingRange*100]
else
	values "openingDoor2" range [0, openingRange*100]
endif
values "openingDoor3" range [0, openingRange*100]

doorFullWidth = A-2*frameWidth*(iFrameType <> FRAME_WIRE)- 2*railThickness
doorTempWidth = doorFullWidth/nDoor

knob_w = 0
if gs_knob_type_m >=1 & gs_knob_type_m <=3 then knob_w= 0.02
if gs_knob_type_m >=4 & gs_knob_type_m <=8 then
	if gs_knob_p_m = 1 then	! Horizontally
		knob_w= 0.1
	else
		knob_w= 0.012
	endif
endif

minLengthKnob = knob_pl_x + knob_w
slidingRange = 1 - (minLengthKnob/doorTempWidth)

values "openingDoorLength1" range [0, doorTempWidth*slidingRange]
if nDoor = 3 then
	values "openingDoorLength2" range [-doorTempWidth*slidingRange, doorTempWidth*slidingRange]
else
	values "openingDoorLength2" range [0, doorTempWidth*slidingRange]
endif
values "openingDoorLength3" range [0, doorTempWidth*slidingRange]

if GLOB_MODPAR_NAME = "openingDoor1" then
	openingDoorLength1 = doorTempWidth * (openingDoor1/100)
	parameters openingDoorLength1 = openingDoorLength1
else
	! Maximum Range
	if GLOB_MODPAR_NAME = "openingDoorLength1" then
		if openingDoorLength1 > (doorTempWidth * slidingRange) - (nDoor = 2) * openingDoorLength2 + (nDoor = 3) * openingDoorLength2 then
			openingDoorLength1 = (doorTempWidth * slidingRange) - (nDoor = 2) * openingDoorLength2 + (nDoor = 3) * openingDoorLength2
			parameters openingDoorLength1 = openingDoorLength1
		endif
	endif
	openingDoor1 = (openingDoorLength1/doorTempWidth)*100
	parameters openingDoor1 = openingDoor1
endif

if GLOB_MODPAR_NAME = "openingDoor2" then
	openingDoorLength2 = doorTempWidth * (openingDoor2/100)
	parameters openingDoorLength2 = openingDoorLength2
else
	if GLOB_MODPAR_NAME = "openingDoorLength2" then
		if nDoor = 3 then
			! Minimum Range
			if openingDoorLength2 < (-1) * ((doorTempWidth * slidingRange) - openingDoorLength1) then
				openingDoorLength2 = (-1) * ((doorTempWidth * slidingRange) - openingDoorLength1)
				parameters openingDoorLength2 = openingDoorLength2
			endif
			! Maximum Range
			if openingDoorLength2 > ((doorTempWidth * slidingRange) - openingDoorLength3) then
				openingDoorLength2 = (doorTempWidth * slidingRange) - openingDoorLength3
				parameters openingDoorLength2 = openingDoorLength2
			endif
		else
			! Maximum Range
			if openingDoorLength2 > ((doorTempWidth * slidingRange) - openingDoorLength1) then
				openingDoorLength2 = ((doorTempWidth * slidingRange) - openingDoorLength1)
				parameters openingDoorLength2 = openingDoorLength2
			endif
		endif
	endif
	openingDoor2 = (openingDoorLength2/doorTempWidth)*100
	parameters openingDoor2 = openingDoor2
endif

if GLOB_MODPAR_NAME = "openingDoor3" then
	openingDoorLength3 = doorTempWidth * (openingDoor3/100)
	parameters openingDoorLength3 = openingDoorLength3
else
	if GLOB_MODPAR_NAME = "openingDoorLength3" then
		! Maximum Range
		if openingDoorLength3 > (doorTempWidth * slidingRange) - openingDoorLength2 then
			openingDoorLength3 = (doorTempWidth * slidingRange) - openingDoorLength2
			parameters openingDoorLength3 = openingDoorLength3
		endif
	endif
	openingDoor3 = (openingDoorLength3/doorTempWidth)*100
	parameters openingDoor3 = openingDoor3
endif

! ==============================================================================
! Module 01
! ==============================================================================
! ----- Interior Fitting Type Above-----
if iFrameType = FRAME_WIRE then
	values "interiorType01" stInteriorType[1], stInteriorType[4], stInteriorType[5], stInteriorType[6]
	values "interiorTypeAbove01" stInteriorType[1], stInteriorType[4], stInteriorType[5], stInteriorType[6]
	values "iInteriorType01"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_SHELF
else
	if iDoorType <> DOOR_TYPE_NONE then
		values "interiorType01" stInteriorType[1], stInteriorType[2], stInteriorType[4], stInteriorType[5], stInteriorType[6]
		values "interiorTypeAbove01" stInteriorType[1], stInteriorType[2], stInteriorType[4], stInteriorType[5], stInteriorType[6]
		values "iInteriorType01"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_DRAWER, INTERIOR_SHELF
	else
		values "interiorType01" stInteriorType
		values "interiorTypeAbove01" stInteriorType
		values "iInteriorType01"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_DRAWERFRONT, INTERIOR_DRAWER, INTERIOR_SHELF
	endif
endif
if GLOB_MODPAR_NAME = "interiorType01" or GLOB_MODPAR_NAME = "interiorTypeAbove01" then
	iInteriorType01 = 0
	if GLOB_MODPAR_NAME = "interiorType01" then
		for i = 1 to vardim1(stInteriorType)
			if interiorType01= stInteriorType[i] then	iInteriorType01 = 6-i
		next i
		interiorTypeAbove01 = interiorType01
		parameters interiorTypeAbove01 = interiorTypeAbove01
	endif
	if GLOB_MODPAR_NAME = "interiorTypeAbove01" then
		for i = 1 to vardim1(stInteriorType)
			if interiorTypeAbove01= stInteriorType[i] then	iInteriorType01 = 6-i
		next i
		interiorType01 = interiorTypeAbove01
		parameters interiorType01 = interiorType01
	endif
	parameters iInteriorType01 = iInteriorType01
else
	iInteriorType01 = max(min(iInteriorType01,5),0)
	parameters interiorType01 = stInteriorType[6-iInteriorType01]
	parameters interiorTypeAbove01 = stInteriorType[6-iInteriorType01]
endif

values "nShelves01" range [1, ]
values "nDrawers01" range [1, ]
values "nDrawersFront01" range [1, ]
values "nWire01" range [1, ]
values "nHangers01" range [1, ]
values "modulWidth01" range [minDist, ]
values "divisionHeight01" range [leg_h+minDist, ZZYZX-bCornice*cot-minDist]


if bDivision01 then
	lock "interiorType01"
	hideparameter "interiorType01"
else
	lock "interiorTypeUnder01", "iInteriorTypeUnder01", "interiorTypeAbove01", "nHangersUnder01", "nWireUnder01", "nDrawersFrontUnder01", "nDrawersUnder01", "nShelvesUnder01", "divisionHeight01"
	hideparameter "interiorTypeUnder01", "iInteriorTypeUnder01", "interiorTypeAbove01", "nHangersUnder01", "nWireUnder01", "nDrawersFrontUnder01", "nDrawersUnder01", "nShelvesUnder01", "divisionHeight01"
endif

if iInteriorType01 <> INTERIOR_HANGER then
	lock "nHangers01"
	hideparameter "nHangers01"
endif

if iInteriorType01 <> INTERIOR_WIRE then
	lock "nWire01"
	hideparameter "nWire01"
endif

if iInteriorType01 <> INTERIOR_DRAWERFRONT then
	lock "nDrawersFront01"
	hideparameter "nDrawersFront01"
endif

if iInteriorType01 <> INTERIOR_DRAWER then
	lock "nDrawers01"
	hideparameter "nDrawers01"
endif

if iInteriorType01 <> INTERIOR_SHELF then
	lock "nShelves01"
	hideparameter "nShelves01"
endif

! ----- Interior Fitting Type Under-----
if iFrameType = FRAME_WIRE then
	values "interiorTypeUnder01" stInteriorType[1], stInteriorType[4], stInteriorType[5], stInteriorType[6]
	values "iInteriorTypeUnder01"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_SHELF
else
	if iDoorType <> DOOR_TYPE_NONE then
		values "interiorTypeUnder01" stInteriorType[1], stInteriorType[2], stInteriorType[4], stInteriorType[5], stInteriorType[6]
		values "iInteriorTypeUnder01"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_DRAWER, INTERIOR_SHELF
	else
		values "interiorTypeUnder01" stInteriorType
		values "iInteriorTypeUnder01"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_DRAWERFRONT, INTERIOR_DRAWER, INTERIOR_SHELF
	endif
endif
if GLOB_MODPAR_NAME = "interiorTypeUnder01" then
	iInteriorTypeUnder01 = 0
	for i = 1 to vardim1(stInteriorType)
		if interiorTypeUnder01= stInteriorType[i] then	iInteriorTypeUnder01 = 6-i
	next i
	parameters iInteriorTypeUnder01 = iInteriorTypeUnder01
else
	iInteriorTypeUnder01 = max(min(iInteriorTypeUnder01,5),0)
	parameters interiorTypeUnder01 = stInteriorType[6-iInteriorTypeUnder01]
endif

values "nShelvesUnder01" range [1, ]
values "nDrawersUnder01" range [1, ]
values "nDrawersFrontUnder01" range [1, ]
values "nWireUnder01" range [1, ]
values "nHangersUnder01" range [1, ]

if iInteriorTypeUnder01 <> INTERIOR_HANGER then
	lock "nHangersUnder01"
	hideparameter "nHangersUnder01"
endif

if iInteriorTypeUnder01 <> INTERIOR_WIRE then
	lock "nWireUnder01"
	hideparameter "nWireUnder01"
endif

if iInteriorTypeUnder01 <> INTERIOR_DRAWERFRONT then
	lock "nDrawersFrontUnder01"
	hideparameter "nDrawersFrontUnder01"
endif

if iInteriorTypeUnder01 <> INTERIOR_DRAWER then
	lock "nDrawersUnder01"
	hideparameter "nDrawersUnder01"
endif

if iInteriorTypeUnder01 <> INTERIOR_SHELF then
	lock "nShelvesUnder01"
	hideparameter "nShelvesUnder01"
endif


! ==============================================================================
! Module 02
! ==============================================================================
if nModule < 2 then
	lock			"module_02",
					"modulWidth02",
					"bDivision02",
					"divisionHeight02",
					"interiorTypeAbove02",
					"interiorType02",
					"iInteriorType02",
					"nShelves02",
					"nDrawers02",
					"nDrawersFront02",
					"nWire02",
					"nHangers02",
					"interiorTypeUnder02",
					"iInteriorTypeUnder02",
					"nShelvesUnder02",
					"nDrawersUnder02",
					"nDrawersFrontUnder02",
					"nWireUnder02",
					"nShelvesUnder02",
					"nHangersUnder02"

	hideparameter "module_02"
endif

! ----- Interior Fitting Type Above-----
if iFrameType = FRAME_WIRE then
	values "interiorType02" stInteriorType[1], stInteriorType[4], stInteriorType[5], stInteriorType[6]
	values "interiorTypeAbove02" stInteriorType[1], stInteriorType[4], stInteriorType[5], stInteriorType[6]
	values "iInteriorType02"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_SHELF
else
	if iDoorType <> DOOR_TYPE_NONE then
		values "interiorType02" stInteriorType[1], stInteriorType[2], stInteriorType[4], stInteriorType[5], stInteriorType[6]
		values "interiorTypeAbove02" stInteriorType[1], stInteriorType[2], stInteriorType[4], stInteriorType[5], stInteriorType[6]
		values "iInteriorType02"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_DRAWER, INTERIOR_SHELF
	else
		values "interiorType02" stInteriorType
		values "interiorTypeAbove02" stInteriorType
		values "iInteriorType02"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_DRAWERFRONT, INTERIOR_DRAWER, INTERIOR_SHELF
	endif
endif
if GLOB_MODPAR_NAME = "interiorType02" or GLOB_MODPAR_NAME = "interiorTypeAbove02" then
	iInteriorType02 = 0
	if GLOB_MODPAR_NAME = "interiorType02" then
		for i = 1 to vardim1(stInteriorType)
			if interiorType02= stInteriorType[i] then	iInteriorType02 = 6-i
		next i
		interiorTypeAbove02 = interiorType02
		parameters interiorTypeAbove02 = interiorTypeAbove02
	endif
	if GLOB_MODPAR_NAME = "interiorTypeAbove02" then
		for i = 1 to vardim1(stInteriorType)
			if interiorTypeAbove02= stInteriorType[i] then	iInteriorType02 = 6-i
		next i
		interiorType02 = interiorTypeAbove02
		parameters interiorType02 = interiorType02
	endif
	parameters iInteriorType02 = iInteriorType02
else
	iInteriorType02 = max(min(iInteriorType02,5),0)
	parameters interiorType02 = stInteriorType[6-iInteriorType02]
	parameters interiorTypeAbove02 = stInteriorType[6-iInteriorType02]
endif

values "nShelves02" range [1, ]
values "nDrawers02" range [1, ]
values "nDrawersFront02" range [1, ]
values "nWire02" range [1, ]
values "nHangers02" range [1, ]
values "modulWidth02" range [minDist, A-frameWidth-minDist-(nModule>=3)*modulWidth03-(nModule>=4)*modulWidth04-(nModule>=5)*modulWidth05-(nModule>=6)*modulWidth06]
values "divisionHeight02" range [leg_h+minDist, ZZYZX-bCornice*cot-minDist]

if bDivision02 then
	lock "interiorType02"
	hideparameter "interiorType02"
else
	lock "interiorTypeUnder02", "iInteriorTypeUnder02", "interiorTypeAbove02", "nHangersUnder02", "nWireUnder02", "nDrawersFrontUnder02", "nDrawersUnder02", "nShelvesUnder02", "divisionHeight02"
	hideparameter "interiorTypeUnder02", "iInteriorTypeUnder02", "interiorTypeAbove02", "nHangersUnder02", "nWireUnder02", "nDrawersFrontUnder02", "nDrawersUnder02", "nShelvesUnder02", "divisionHeight02"
endif

if iInteriorType02 <> INTERIOR_HANGER then
	lock "nHangers02"
	hideparameter "nHangers02"
endif

if iInteriorType02 <> INTERIOR_WIRE then
	lock "nWire02"
	hideparameter "nWire02"
endif

if iInteriorType02 <> INTERIOR_DRAWERFRONT then
	lock "nDrawersFront02"
	hideparameter "nDrawersFront02"
endif

if iInteriorType02 <> INTERIOR_DRAWER then
	lock "nDrawers02"
	hideparameter "nDrawers02"
endif

if iInteriorType02 <> INTERIOR_SHELF then
	lock "nShelves02"
	hideparameter "nShelves02"
endif

! ----- Interior Fitting Type Under-----
if iFrameType = FRAME_WIRE then
	values "interiorTypeUnder02" stInteriorType[1], stInteriorType[4], stInteriorType[5], stInteriorType[6]
	values "iInteriorTypeUnder02"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_SHELF
else
	if iDoorType <> DOOR_TYPE_NONE then
		values "interiorTypeUnder02" stInteriorType[1], stInteriorType[2], stInteriorType[4], stInteriorType[5], stInteriorType[6]
		values "iInteriorTypeUnder02"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_DRAWER, INTERIOR_SHELF
	else
		values "interiorTypeUnder02" stInteriorType
		values "iInteriorTypeUnder02"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_DRAWERFRONT, INTERIOR_DRAWER, INTERIOR_SHELF
	endif
endif
if GLOB_MODPAR_NAME = "interiorTypeUnder02" then
	iInteriorTypeUnder02 = 0
	for i = 1 to vardim1(stInteriorType)
		if interiorTypeUnder02= stInteriorType[i] then	iInteriorTypeUnder02 = 6-i
	next i
	parameters iInteriorTypeUnder02 = iInteriorTypeUnder02
else
	iInteriorTypeUnder02 = max(min(iInteriorTypeUnder02,5),0)
	parameters interiorTypeUnder02 = stInteriorType[6-iInteriorTypeUnder02]
endif

values "nShelvesUnder02" range [1, ]
values "nDrawersUnder02" range [1, ]
values "nDrawersFrontUnder02" range [1, ]
values "nWireUnder02" range [1, ]
values "nHangersUnder02" range [1, ]

if iInteriorTypeUnder02 <> INTERIOR_HANGER then
	lock "nHangersUnder02"
	hideparameter "nHangersUnder02"
endif

if iInteriorTypeUnder02 <> INTERIOR_WIRE then
	lock "nWireUnder02"
	hideparameter "nWireUnder02"
endif

if iInteriorTypeUnder02 <> INTERIOR_DRAWERFRONT then
	lock "nDrawersFrontUnder02"
	hideparameter "nDrawersFrontUnder02"
endif

if iInteriorTypeUnder02 <> INTERIOR_DRAWER then
	lock "nDrawersUnder02"
	hideparameter "nDrawersUnder02"
endif

if iInteriorTypeUnder02 <> INTERIOR_SHELF then
	lock "nShelvesUnder02"
	hideparameter "nShelvesUnder02"
endif


! ==============================================================================
! Module 03
! ==============================================================================
if nModule < 3 then
	lock			"module_03",
					"modulWidth03",
					"bDivision03",
					"divisionHeight03",
					"interiorTypeAbove03",
					"interiorType03",
					"iInteriorType03",
					"nShelves03",
					"nDrawers03",
					"nDrawersFront03",
					"nWire03",
					"nHangers03",
					"interiorTypeUnder03",
					"iInteriorTypeUnder03",
					"nShelvesUnder03",
					"nDrawersUnder03",
					"nDrawersFrontUnder03",
					"nWireUnder03",
					"nShelvesUnder03",
					"nHangersUnder03"

	hideparameter "module_03"
endif

! ----- Interior Fitting Type Above-----
if iFrameType = FRAME_WIRE then
	values "interiorType03" stInteriorType[1], stInteriorType[4], stInteriorType[5], stInteriorType[6]
	values "interiorTypeAbove03" stInteriorType[1], stInteriorType[4], stInteriorType[5], stInteriorType[6]
	values "iInteriorType03"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_SHELF
else
	if iDoorType <> DOOR_TYPE_NONE then
		values "interiorType03" stInteriorType[1], stInteriorType[2], stInteriorType[4], stInteriorType[5], stInteriorType[6]
		values "interiorTypeAbove03" stInteriorType[1], stInteriorType[2], stInteriorType[4], stInteriorType[5], stInteriorType[6]
		values "iInteriorType03"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_DRAWER, INTERIOR_SHELF
	else
		values "interiorType03" stInteriorType
		values "interiorTypeAbove03" stInteriorType
		values "iInteriorType03"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_DRAWERFRONT, INTERIOR_DRAWER, INTERIOR_SHELF
	endif
endif
if GLOB_MODPAR_NAME = "interiorType03" or GLOB_MODPAR_NAME = "interiorTypeAbove03" then
	iInteriorType03 = 0
	if GLOB_MODPAR_NAME = "interiorType03" then
		for i = 1 to vardim1(stInteriorType)
			if interiorType03= stInteriorType[i] then	iInteriorType03 = 6-i
		next i
		interiorTypeAbove03 = interiorType03
		parameters interiorTypeAbove03 = interiorTypeAbove03
	endif
	if GLOB_MODPAR_NAME = "interiorTypeAbove03" then
		for i = 1 to vardim1(stInteriorType)
			if interiorTypeAbove03= stInteriorType[i] then	iInteriorType03 = 6-i
		next i
		interiorType03 = interiorTypeAbove03
		parameters interiorType03 = interiorType03
	endif
	parameters iInteriorType03 = iInteriorType03
else
	iInteriorType03 = max(min(iInteriorType03,5),0)
	parameters interiorType03 = stInteriorType[6-iInteriorType03]
	parameters interiorTypeAbove03 = stInteriorType[6-iInteriorType03]
endif

values "nShelves03" range [1, ]
values "nDrawers03" range [1, ]
values "nDrawersFront03" range [1, ]
values "nWire03" range [1, ]
values "nHangers03" range [1, ]
values "modulWidth03" range [minDist, A-frameWidth-minDist-modulWidth02-(nModule>=4)*modulWidth04-(nModule>=5)*modulWidth05-(nModule>=6)*modulWidth06]
values "divisionHeight03" range [leg_h+minDist, ZZYZX-bCornice*cot-minDist]

if bDivision03 then
	lock "interiorType03"
	hideparameter "interiorType03"
else
	lock "interiorTypeUnder03", "iInteriorTypeUnder03", "interiorTypeAbove03", "nHangersUnder03", "nWireUnder03", "nDrawersFrontUnder03", "nDrawersUnder03", "nShelvesUnder03", "divisionHeight03"
	hideparameter "interiorTypeUnder03", "iInteriorTypeUnder03", "interiorTypeAbove03", "nHangersUnder03", "nWireUnder03", "nDrawersFrontUnder03", "nDrawersUnder03", "nShelvesUnder03", "divisionHeight03"
endif

if iInteriorType03 <> INTERIOR_HANGER then
	lock "nHangers03"
	hideparameter "nHangers03"
endif

if iInteriorType03 <> INTERIOR_WIRE then
	lock "nWire03"
	hideparameter "nWire03"
endif

if iInteriorType03 <> INTERIOR_DRAWERFRONT then
	lock "nDrawersFront03"
	hideparameter "nDrawersFront03"
endif

if iInteriorType03 <> INTERIOR_DRAWER then
	lock "nDrawers03"
	hideparameter "nDrawers03"
endif

if iInteriorType03 <> INTERIOR_SHELF then
	lock "nShelves03"
	hideparameter "nShelves03"
endif

! ----- Interior Fitting Type Under-----
if iFrameType = FRAME_WIRE then
	values "interiorTypeUnder03" stInteriorType[1], stInteriorType[4], stInteriorType[5], stInteriorType[6]
	values "iInteriorTypeUnder03"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_SHELF
else
	if iDoorType <> DOOR_TYPE_NONE then
		values "interiorTypeUnder03" stInteriorType[1], stInteriorType[2], stInteriorType[4], stInteriorType[5], stInteriorType[6]
		values "iInteriorTypeUnder03"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_DRAWER, INTERIOR_SHELF
	else
		values "interiorTypeUnder03" stInteriorType
		values "iInteriorTypeUnder03"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_DRAWERFRONT, INTERIOR_DRAWER, INTERIOR_SHELF
	endif
endif
if GLOB_MODPAR_NAME = "interiorTypeUnder03" then
	iInteriorTypeUnder03 = 0
	for i = 1 to vardim1(stInteriorType)
		if interiorTypeUnder03= stInteriorType[i] then	iInteriorTypeUnder03 = 6-i
	next i
	parameters iInteriorTypeUnder03 = iInteriorTypeUnder03
else
	iInteriorTypeUnder03 = max(min(iInteriorTypeUnder03,5),0)
	parameters interiorTypeUnder03 = stInteriorType[6-iInteriorTypeUnder03]
endif

values "nShelvesUnder03" range [1, ]
values "nDrawersUnder03" range [1, ]
values "nDrawersFrontUnder03" range [1, ]
values "nWireUnder03" range [1, ]
values "nHangersUnder03" range [1, ]

if iInteriorTypeUnder03 <> INTERIOR_HANGER then
	lock "nHangersUnder03"
	hideparameter "nHangersUnder03"
endif

if iInteriorTypeUnder03 <> INTERIOR_WIRE then
	lock "nWireUnder03"
	hideparameter "nWireUnder03"
endif

if iInteriorTypeUnder03 <> INTERIOR_DRAWERFRONT then
	lock "nDrawersFrontUnder03"
	hideparameter "nDrawersFrontUnder03"
endif

if iInteriorTypeUnder03 <> INTERIOR_DRAWER then
	lock "nDrawersUnder03"
	hideparameter "nDrawersUnder03"
endif

if iInteriorTypeUnder03 <> INTERIOR_SHELF then
	lock "nShelvesUnder03"
	hideparameter "nShelvesUnder03"
endif


! ==============================================================================
! Module 04
! ==============================================================================
if nModule < 4 then
	lock			"module_04",
					"modulWidth04",
					"bDivision04",
					"divisionHeight04",
					"interiorTypeAbove04",
					"interiorType04",
					"iInteriorType04",
					"nShelves04",
					"nDrawers04",
					"nDrawersFront04",
					"nWire04",
					"nHangers04",
					"interiorTypeUnder04",
					"iInteriorTypeUnder04",
					"nShelvesUnder04",
					"nDrawersUnder04",
					"nDrawersFrontUnder04",
					"nWireUnder04",
					"nShelvesUnder04",
					"nHangersUnder04"

	hideparameter "module_04"
endif

! ----- Interior Fitting Type Above-----
if iFrameType = FRAME_WIRE then
	values "interiorType04" stInteriorType[1], stInteriorType[4], stInteriorType[5], stInteriorType[6]
	values "interiorTypeAbove04" stInteriorType[1], stInteriorType[4], stInteriorType[5], stInteriorType[6]
	values "iInteriorType04"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_SHELF
else
	if iDoorType <> DOOR_TYPE_NONE then
		values "interiorType04" stInteriorType[1], stInteriorType[2], stInteriorType[4], stInteriorType[5], stInteriorType[6]
		values "interiorTypeAbove04" stInteriorType[1], stInteriorType[2], stInteriorType[4], stInteriorType[5], stInteriorType[6]
		values "iInteriorType04"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_DRAWER, INTERIOR_SHELF
	else
		values "interiorType04" stInteriorType
		values "interiorTypeAbove04" stInteriorType
		values "iInteriorType04"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_DRAWERFRONT, INTERIOR_DRAWER, INTERIOR_SHELF
	endif
endif
if GLOB_MODPAR_NAME = "interiorType04" or GLOB_MODPAR_NAME = "interiorTypeAbove04" then
	iInteriorType04 = 0
	if GLOB_MODPAR_NAME = "interiorType04" then
		for i = 1 to vardim1(stInteriorType)
			if interiorType04= stInteriorType[i] then	iInteriorType04 = 6-i
		next i
		interiorTypeAbove04 = interiorType04
		parameters interiorTypeAbove04 = interiorTypeAbove04
	endif
	if GLOB_MODPAR_NAME = "interiorTypeAbove04" then
		for i = 1 to vardim1(stInteriorType)
			if interiorTypeAbove04= stInteriorType[i] then	iInteriorType04 = 6-i
		next i
		interiorType04 = interiorTypeAbove04
		parameters interiorType04 = interiorType04
	endif
	parameters iInteriorType04 = iInteriorType04
else
	iInteriorType04 = max(min(iInteriorType04,5),0)
	parameters interiorType04 = stInteriorType[6-iInteriorType04]
	parameters interiorTypeAbove04 = stInteriorType[6-iInteriorType04]
endif

values "nShelves04" range [1, ]
values "nDrawers04" range [1, ]
values "nDrawersFront04" range [1, ]
values "nWire04" range [1, ]
values "nHangers04" range [1, ]
values "modulWidth04" range [minDist, A-frameWidth-minDist-modulWidth02-modulWidth03-(nModule>=5)*modulWidth05-(nModule>=6)*modulWidth06]
values "divisionHeight04" range [leg_h+minDist, ZZYZX-bCornice*cot-minDist]

if bDivision04 then
	lock "interiorType04"
	hideparameter "interiorType04"
else
	lock "interiorTypeUnder04", "iInteriorTypeUnder04", "interiorTypeAbove04", "nHangersUnder04", "nWireUnder04", "nDrawersFrontUnder04", "nDrawersUnder04", "nShelvesUnder04", "divisionHeight04"
	hideparameter "interiorTypeUnder04", "iInteriorTypeUnder04", "interiorTypeAbove04", "nHangersUnder04", "nWireUnder04", "nDrawersFrontUnder04", "nDrawersUnder04", "nShelvesUnder04", "divisionHeight04"
endif

if iInteriorType04 <> INTERIOR_HANGER then
	lock "nHangers04"
	hideparameter "nHangers04"
endif

if iInteriorType04 <> INTERIOR_WIRE then
	lock "nWire04"
	hideparameter "nWire04"
endif

if iInteriorType04 <> INTERIOR_DRAWERFRONT then
	lock "nDrawersFront04"
	hideparameter "nDrawersFront04"
endif

if iInteriorType04 <> INTERIOR_DRAWER then
	lock "nDrawers04"
	hideparameter "nDrawers04"
endif

if iInteriorType04 <> INTERIOR_SHELF then
	lock "nShelves04"
	hideparameter "nShelves04"
endif

! ----- Interior Fitting Type Under-----
if iFrameType = FRAME_WIRE then
	values "interiorTypeUnder04" stInteriorType[1], stInteriorType[4], stInteriorType[5], stInteriorType[6]
	values "iInteriorTypeUnder04"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_SHELF
else
	if iDoorType <> DOOR_TYPE_NONE then
		values "interiorTypeUnder04" stInteriorType[1], stInteriorType[2], stInteriorType[4], stInteriorType[5], stInteriorType[6]
		values "iInteriorTypeUnder04"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_DRAWER, INTERIOR_SHELF
	else
		values "interiorTypeUnder04" stInteriorType
		values "iInteriorTypeUnder04"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_DRAWERFRONT, INTERIOR_DRAWER, INTERIOR_SHELF
	endif
endif
if GLOB_MODPAR_NAME = "interiorTypeUnder04" then
	iInteriorTypeUnder04 = 0
	for i = 1 to vardim1(stInteriorType)
		if interiorTypeUnder04= stInteriorType[i] then	iInteriorTypeUnder04 = 6-i
	next i
	parameters iInteriorTypeUnder04 = iInteriorTypeUnder04
else
	iInteriorTypeUnder04 = max(min(iInteriorTypeUnder04,5),0)
	parameters interiorTypeUnder04 = stInteriorType[6-iInteriorTypeUnder04]
endif

values "nShelvesUnder04" range [1, ]
values "nDrawersUnder04" range [1, ]
values "nDrawersFrontUnder04" range [1, ]
values "nWireUnder04" range [1, ]
values "nHangersUnder04" range [1, ]

if iInteriorTypeUnder04 <> INTERIOR_HANGER then
	lock "nHangersUnder04"
	hideparameter "nHangersUnder04"
endif

if iInteriorTypeUnder04 <> INTERIOR_WIRE then
	lock "nWireUnder04"
	hideparameter "nWireUnder04"
endif

if iInteriorTypeUnder04 <> INTERIOR_DRAWERFRONT then
	lock "nDrawersFrontUnder04"
	hideparameter "nDrawersFrontUnder04"
endif

if iInteriorTypeUnder04 <> INTERIOR_DRAWER then
	lock "nDrawersUnder04"
	hideparameter "nDrawersUnder04"
endif

if iInteriorTypeUnder04 <> INTERIOR_SHELF then
	lock "nShelvesUnder04"
	hideparameter "nShelvesUnder04"
endif


! ==============================================================================
! Module 05
! ==============================================================================
if nModule < 5 then
	lock			"module_05",
					"modulWidth05",
					"bDivision05",
					"divisionHeight05",
					"interiorTypeAbove05",
					"interiorType05",
					"iInteriorType05",
					"nShelves05",
					"nDrawers05",
					"nDrawersFront05",
					"nWire05",
					"nHangers05",
					"interiorTypeUnder05",
					"iInteriorTypeUnder05",
					"nShelvesUnder05",
					"nDrawersUnder05",
					"nDrawersFrontUnder05",
					"nWireUnder05",
					"nShelvesUnder05",
					"nHangersUnder05"

	hideparameter "module_05"
endif

! ----- Interior Fitting Type Above-----
if iFrameType = FRAME_WIRE then
	values "interiorType05" stInteriorType[1], stInteriorType[4], stInteriorType[5], stInteriorType[6]
	values "interiorTypeAbove05" stInteriorType[1], stInteriorType[4], stInteriorType[5], stInteriorType[6]
	values "iInteriorType05"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_SHELF
else
	if iDoorType <> DOOR_TYPE_NONE then
		values "interiorType05" stInteriorType[1], stInteriorType[2], stInteriorType[4], stInteriorType[5], stInteriorType[6]
		values "interiorTypeAbove05" stInteriorType[1], stInteriorType[2], stInteriorType[4], stInteriorType[5], stInteriorType[6]
		values "iInteriorType05"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_DRAWER, INTERIOR_SHELF
	else
		values "interiorType05" stInteriorType
		values "interiorTypeAbove05" stInteriorType
		values "iInteriorType05"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_DRAWERFRONT, INTERIOR_DRAWER, INTERIOR_SHELF
	endif
endif
if GLOB_MODPAR_NAME = "interiorType05" or GLOB_MODPAR_NAME = "interiorTypeAbove05" then
	iInteriorType05 = 0
	if GLOB_MODPAR_NAME = "interiorType05" then
		for i = 1 to vardim1(stInteriorType)
			if interiorType05= stInteriorType[i] then	iInteriorType05 = 6-i
		next i
		interiorTypeAbove05 = interiorType05
		parameters interiorTypeAbove05 = interiorTypeAbove05
	endif
	if GLOB_MODPAR_NAME = "interiorTypeAbove05" then
		for i = 1 to vardim1(stInteriorType)
			if interiorTypeAbove05= stInteriorType[i] then	iInteriorType05 = 6-i
		next i
		interiorType05 = interiorTypeAbove05
		parameters interiorType05 = interiorType05
	endif
	parameters iInteriorType05 = iInteriorType05
else
	iInteriorType05 = max(min(iInteriorType05,5),0)
	parameters interiorType05 = stInteriorType[6-iInteriorType05]
	parameters interiorTypeAbove05 = stInteriorType[6-iInteriorType05]
endif

values "nShelves05" range [1, ]
values "nDrawers05" range [1, ]
values "nDrawersFront05" range [1, ]
values "nWire05" range [1, ]
values "nHangers05" range [1, ]
values "modulWidth05" range [minDist, A-frameWidth-minDist-modulWidth02-modulWidth03-modulWidth04-(nModule>=6)*modulWidth06]
values "divisionHeight05" range [leg_h+minDist, ZZYZX-bCornice*cot-minDist]

if bDivision05 then
	lock "interiorType05"
	hideparameter "interiorType05"
else
	lock "interiorTypeUnder05", "iInteriorTypeUnder05", "interiorTypeAbove05", "nHangersUnder05", "nWireUnder05", "nDrawersFrontUnder05", "nDrawersUnder05", "nShelvesUnder05", "divisionHeight05"
	hideparameter "interiorTypeUnder05", "iInteriorTypeUnder05", "interiorTypeAbove05", "nHangersUnder05", "nWireUnder05", "nDrawersFrontUnder05", "nDrawersUnder05", "nShelvesUnder05", "divisionHeight05"
endif

if iInteriorType05 <> INTERIOR_HANGER then
	lock "nHangers05"
	hideparameter "nHangers05"
endif

if iInteriorType05 <> INTERIOR_WIRE then
	lock "nWire05"
	hideparameter "nWire05"
endif

if iInteriorType05 <> INTERIOR_DRAWERFRONT then
	lock "nDrawersFront05"
	hideparameter "nDrawersFront05"
endif

if iInteriorType05 <> INTERIOR_DRAWER then
	lock "nDrawers05"
	hideparameter "nDrawers05"
endif

if iInteriorType05 <> INTERIOR_SHELF then
	lock "nShelves05"
	hideparameter "nShelves05"
endif

! ----- Interior Fitting Type Under-----
if iFrameType = FRAME_WIRE then
	values "interiorTypeUnder05" stInteriorType[1], stInteriorType[4], stInteriorType[5], stInteriorType[6]
	values "iInteriorTypeUnder05"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_SHELF
else
	if iDoorType <> DOOR_TYPE_NONE then
		values "interiorTypeUnder05" stInteriorType[1], stInteriorType[2], stInteriorType[4], stInteriorType[5], stInteriorType[6]
		values "iInteriorTypeUnder05"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_DRAWER, INTERIOR_SHELF
	else
		values "interiorTypeUnder05" stInteriorType
		values "iInteriorTypeUnder05"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_DRAWERFRONT, INTERIOR_DRAWER, INTERIOR_SHELF
	endif
endif
if GLOB_MODPAR_NAME = "interiorTypeUnder05" then
	iInteriorTypeUnder05 = 0
	for i = 1 to vardim1(stInteriorType)
		if interiorTypeUnder05= stInteriorType[i] then	iInteriorTypeUnder05 = 6-i
	next i
	parameters iInteriorTypeUnder05 = iInteriorTypeUnder05
else
	iInteriorTypeUnder05 = max(min(iInteriorTypeUnder05,5),0)
	parameters interiorTypeUnder05 = stInteriorType[6-iInteriorTypeUnder05]
endif

values "nShelvesUnder05" range [1, ]
values "nDrawersUnder05" range [1, ]
values "nDrawersFrontUnder05" range [1, ]
values "nWireUnder05" range [1, ]
values "nHangersUnder05" range [1, ]

if iInteriorTypeUnder05 <> INTERIOR_HANGER then
	lock "nHangersUnder05"
	hideparameter "nHangersUnder05"
endif

if iInteriorTypeUnder05 <> INTERIOR_WIRE then
	lock "nWireUnder05"
	hideparameter "nWireUnder05"
endif

if iInteriorTypeUnder05 <> INTERIOR_DRAWERFRONT then
	lock "nDrawersFrontUnder05"
	hideparameter "nDrawersFrontUnder05"
endif

if iInteriorTypeUnder05 <> INTERIOR_DRAWER then
	lock "nDrawersUnder05"
	hideparameter "nDrawersUnder05"
endif

if iInteriorTypeUnder05 <> INTERIOR_SHELF then
	lock "nShelvesUnder05"
	hideparameter "nShelvesUnder05"
endif


! ==============================================================================
! Module 06
! ==============================================================================
if nModule < 6 then
	lock			"module_06",
					"modulWidth06",
					"bDivision06",
					"divisionHeight06",
					"interiorTypeAbove06",
					"interiorType06",
					"iInteriorType06",
					"nShelves06",
					"nDrawers06",
					"nDrawersFront06",
					"nWire06",
					"nHangers06",
					"interiorTypeUnder06",
					"iInteriorTypeUnder06",
					"nShelvesUnder06",
					"nDrawersUnder06",
					"nDrawersFrontUnder06",
					"nWireUnder06",
					"nShelvesUnder06",
					"nHangersUnder06"

	hideparameter "module_06"
endif

! ----- Interior Fitting Type Above-----
if iFrameType = FRAME_WIRE then
	values "interiorType06" stInteriorType[1], stInteriorType[4], stInteriorType[5], stInteriorType[6]
	values "interiorTypeAbove06" stInteriorType[1], stInteriorType[4], stInteriorType[5], stInteriorType[6]
	values "iInteriorType06"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_SHELF
else
	if iDoorType <> DOOR_TYPE_NONE then
		values "interiorType06" stInteriorType[1], stInteriorType[2], stInteriorType[4], stInteriorType[5], stInteriorType[6]
		values "interiorTypeAbove06" stInteriorType[1], stInteriorType[2], stInteriorType[4], stInteriorType[5], stInteriorType[6]
		values "iInteriorType06"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_DRAWER, INTERIOR_SHELF
	else
		values "interiorType06" stInteriorType
		values "interiorTypeAbove06" stInteriorType
		values "iInteriorType06"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_DRAWERFRONT, INTERIOR_DRAWER, INTERIOR_SHELF
	endif
endif
if GLOB_MODPAR_NAME = "interiorType06" or GLOB_MODPAR_NAME = "interiorTypeAbove06" then
	iInteriorType06 = 0
	if GLOB_MODPAR_NAME = "interiorType06" then
		for i = 1 to vardim1(stInteriorType)
			if interiorType06= stInteriorType[i] then	iInteriorType06 = 6-i
		next i
		interiorTypeAbove06 = interiorType06
		parameters interiorTypeAbove06 = interiorTypeAbove06
	endif
	if GLOB_MODPAR_NAME = "interiorTypeAbove06" then
		for i = 1 to vardim1(stInteriorType)
			if interiorTypeAbove06= stInteriorType[i] then	iInteriorType06 = 6-i
		next i
		interiorType06 = interiorTypeAbove06
		parameters interiorType06 = interiorType06
	endif
	parameters iInteriorType06 = iInteriorType06
else
	iInteriorType06 = max(min(iInteriorType06,5),0)
	parameters interiorType06 = stInteriorType[6-iInteriorType06]
	parameters interiorTypeAbove06 = stInteriorType[6-iInteriorType06]
endif

values "nShelves06" range [1, ]
values "nDrawers06" range [1, ]
values "nDrawersFront06" range [1, ]
values "nWire06" range [1, ]
values "nHangers06" range [1, ]
values "modulWidth06" range [minDist, A-frameWidth-minDist-modulWidth02-modulWidth03-modulWidth04-modulWidth05]
values "divisionHeight06" range [leg_h+minDist, ZZYZX-bCornice*cot-minDist]

if bDivision06 then
	lock "interiorType06"
	hideparameter "interiorType06"
else
	lock "interiorTypeUnder06", "iInteriorTypeUnder06", "interiorTypeAbove06", "nHangersUnder06", "nWireUnder06", "nDrawersFrontUnder06", "nDrawersUnder06", "nShelvesUnder06", "divisionHeight06"
	hideparameter "interiorTypeUnder06", "iInteriorTypeUnder06", "interiorTypeAbove06", "nHangersUnder06", "nWireUnder06", "nDrawersFrontUnder06", "nDrawersUnder06", "nShelvesUnder06", "divisionHeight06"
endif

if iInteriorType06 <> INTERIOR_HANGER then
	lock "nHangers06"
	hideparameter "nHangers06"
endif

if iInteriorType06 <> INTERIOR_WIRE then
	lock "nWire06"
	hideparameter "nWire06"
endif

if iInteriorType06 <> INTERIOR_DRAWERFRONT then
	lock "nDrawersFront06"
	hideparameter "nDrawersFront06"
endif

if iInteriorType06 <> INTERIOR_DRAWER then
	lock "nDrawers06"
	hideparameter "nDrawers06"
endif

if iInteriorType06 <> INTERIOR_SHELF then
	lock "nShelves06"
	hideparameter "nShelves06"
endif

! ----- Interior Fitting Type Under-----
if iFrameType = FRAME_WIRE then
	values "interiorTypeUnder06" stInteriorType[1], stInteriorType[4], stInteriorType[5], stInteriorType[6]
	values "iInteriorTypeUnder06"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_SHELF
else
	if iDoorType <> DOOR_TYPE_NONE then
		values "interiorTypeUnder06" stInteriorType[1], stInteriorType[2], stInteriorType[4], stInteriorType[5], stInteriorType[6]
		values "iInteriorTypeUnder06"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_DRAWER, INTERIOR_SHELF
	else
		values "interiorTypeUnder06" stInteriorType
		values "iInteriorTypeUnder06"  INTERIOR_NONE, INTERIOR_HANGER, INTERIOR_WIRE, INTERIOR_DRAWERFRONT, INTERIOR_DRAWER, INTERIOR_SHELF
	endif
endif
if GLOB_MODPAR_NAME = "interiorTypeUnder06" then
	iInteriorTypeUnder06 = 0
	for i = 1 to vardim1(stInteriorType)
		if interiorTypeUnder06= stInteriorType[i] then	iInteriorTypeUnder06 = 6-i
	next i
	parameters iInteriorTypeUnder06 = iInteriorTypeUnder06
else
	iInteriorTypeUnder06 = max(min(iInteriorTypeUnder06,5),0)
	parameters interiorTypeUnder06 = stInteriorType[6-iInteriorTypeUnder06]
endif

values "nShelvesUnder06" range [1, ]
values "nDrawersUnder06" range [1, ]
values "nDrawersFrontUnder06" range [1, ]
values "nWireUnder06" range [1, ]
values "nHangersUnder06" range [1, ]

if iInteriorTypeUnder06 <> INTERIOR_HANGER then
	lock "nHangersUnder06"
	hideparameter "nHangersUnder06"
endif

if iInteriorTypeUnder06 <> INTERIOR_WIRE then
	lock "nWireUnder06"
	hideparameter "nWireUnder06"
endif

if iInteriorTypeUnder06 <> INTERIOR_DRAWERFRONT then
	lock "nDrawersFrontUnder06"
	hideparameter "nDrawersFrontUnder06"
endif

if iInteriorTypeUnder06 <> INTERIOR_DRAWER then
	lock "nDrawersUnder06"
	hideparameter "nDrawersUnder06"
endif

if iInteriorTypeUnder06 <> INTERIOR_SHELF then
	lock "nShelvesUnder06"
	hideparameter "nShelvesUnder06"
endif


! ==============================================================================
! Drawers
! ==============================================================================
! ----- Drawers -----
dim drawerStyleNumber[3]
	drawerStyleNumber[1] = 1
	drawerStyleNumber[2] = 2
	drawerStyleNumber[3] = 3

values "drawerStyle" stDrawerTypes
values "iDrawerStyle"  drawerStyleNumber
if GLOB_MODPAR_NAME = "drawerStyle" then
	iDrawerStyle = 1
	for i = 1 to vardim1(stDrawerTypes)
		if drawerStyle= stDrawerTypes[i] then	iDrawerStyle = drawerStyleNumber[i]
	next i
	parameters iDrawerStyle = iDrawerStyle
else
	for i = 1 to vardim1(stDrawerTypes)
		if iDrawerStyle = drawerStyleNumber[i] then drawerStyle = stDrawerTypes[i]
	next i
	parameters drawerStyle = drawerStyle
endif

values "drawerFrameWidth" range [0.03,]

if iDrawerStyle = 1 then
	hideparameter "drawerFrameWidth"
	lock "drawerFrameWidth"
endif

if nDrawersWithFront = 0 then
	hideparameter "drawer", "drawerFrameWidth", "iDrawerStyle", "drawerStyle"
	lock "drawer", "drawerFrameWidth", "iDrawerStyle", "drawerStyle"
endif

if nDrawersWithFront = 0 then
	hideparameter "gs_drawer_mat", "matDrawerInset"
	lock "gs_drawer_mat", "matDrawerInset"
endif


! ==============================================================================
! Knob
! ==============================================================================
! ----- Knob Style-----
values{2} "gs_knob_type_m"	KNOB_STYLE_1,	`Стиль 1`,
							KNOB_STYLE_2,	`Стиль 2`,
							KNOB_STYLE_3,	`Стиль 3`,
							KNOB_STYLE_4,	`Стиль 4`,
							KNOB_STYLE_5,	`Стиль 5`,
							KNOB_STYLE_6,	`Стиль 6`,
							KNOB_STYLE_7,	`Стиль 7`,
							KNOB_STYLE_8,	`Стиль 8`

if gs_knob_type_m < 4 then
	lock "gs_knob_p", "knob_size"
	hideparameter "gs_knob_p", "knob_size"
endif

if not(bKnob) then
	lock			"gs_knob_type_m", "knob_pl_x", "knob_pl_y"
	hideparameter	"gs_knob_type_m", "knob_pl_x", "knob_pl_y"
endif

! ----- Knob Placing-----
values "gs_knob_p_m" 0,1
values "gs_knob_p" stKnobPlacing
if GLOB_MODPAR_NAME = "gs_knob_p" then
	gs_knob_type_m = KNOB_STYLE_1
	for i = 1 to vardim1(stKnobPlacing)
		if gs_knob_p = stKnobPlacing[i] then gs_knob_p_m = i-1
	next i
	parameters gs_knob_p_m = gs_knob_p_m
else
	gs_knob_p_m = max(min(gs_knob_p_m,1),0)
	parameters gs_knob_p = stKnobPlacing[gs_knob_p_m+1]
endif

if (iDoorType = DOOR_TYPE_NONE and nDrawersWithFront = 0) or not(bKnob) then
	hideparameter "gs_knob_type", "gs_knob_type_m", "knob_pl_x", "knob_pl_y", "gs_knob_p", "gs_knob_p_m", "knob_size", "gs_knob_mat"
	lock "gs_knob_type", "gs_knob_type_m", "knob_pl_x", "knob_pl_y", "gs_knob_p", "gs_knob_p_m", "knob_size", "gs_knob_mat"
endif


! ==============================================================================
! Cornice
! ==============================================================================
! ----- Cornice Style -----
values{2} "gs_cornice_type_m"	CORN_STYLE_1,		`Стиль 1`,
								CORN_STYLE_2,		`Стиль 2`,
								CORN_STYLE_3,		`Стиль 3`,
								CORN_STYLE_4,		`Стиль 4`

! ----- Cornice Overhang-----
values "gs_lining" stCorniceOverhang
values "gs_lining_m" 1,2,3,4
if GLOB_MODPAR_NAME = "gs_lining" then
	gs_lining_m = 0
	for i = 1 to vardim1(stCorniceOverhang)
		if gs_lining = stCorniceOverhang[i] then gs_lining_m= 5-i
	next i
	parameters gs_lining_m = gs_lining_m
else
	gs_lining_m = max(min(gs_lining_m,4),1)
	parameters gs_lining = stCorniceOverhang[5-gs_lining_m]
endif


if not(bCornice) then
	hideparameter "gs_cornice_type_m", "gs_lining", "gs_lining_m", "cot", "cooh", "gs_cornice_mat"
	lock "gs_cornice_type_m", "gs_lining", "gs_lining_m", "cot", "cooh", "gs_cornice_mat"
else

	values "cot" range (0,)
	if gs_cornice_type_m=CORN_STYLE_1  then values "cooh" range [0,)
	if gs_cornice_type_m=CORN_STYLE_2 or gs_cornice_type_m=CORN_STYLE_3  then values "cooh" range [1/2*cot,)
	if gs_cornice_type_m=CORN_STYLE_4 then values "cooh" range [3/4*cot,)
endif


! ==============================================================================
! Leg
! ==============================================================================
! ----- Base Style-----
values{2} "gs_leg_type_m" 	LEG_STYLE_1, `Стиль 1`,
							LEG_STYLE_2, `Стиль 2`,
							LEG_STYLE_3, `Стиль 3`,
							LEG_STYLE_4, `Стиль 4`,
							LEG_STYLE_5, `Стиль 5`,
							LEG_STYLE_6, `Стиль 6`

values "leg_h" range [0, mindist*3]
values "leg_w" range (0, min(a/2, b/2))

if not(bBase) then
	hideparameter	"gs_leg_type_m", "gs_leg_mat", "leg_h", "leg_w"
	lock			"gs_leg_type_m", "gs_leg_mat", "leg_h", "leg_w"
endif


! ==============================================================================
! 2D Style
! ==============================================================================
! ----- 2D Symbol Type -----

if iDoorType = 2 | iDoorType = 1 then				! Double Sliding Door, Triple Sliding Door 
	values{2} "iSymbolStyle" 	1, `Стиль 1`,		! Enable all Symbol Types
								2, `Стиль 2`,
								3, `Стиль 3`,
								4, `Стиль 4`,
								5, `Стиль 5`,
								6, `Стиль 6`,
								7, `Стиль 7`
else												! No Door
	values{2} "iSymbolStyle" 	1, `Стиль 1`,		! Enable only Symbol Type without door and drawer symbol
								2, `Стиль 2`,
								3, `Стиль 3`
endif

if gs_cont_pen=0 then parameters gs_cont_pen=4
if gs_fill_pen=0 then parameters gs_fill_pen=19

! ==============================================================================
! Lock and Hide "bHangers" parameter
! ==============================================================================

if 	iSymbolStyle = 2 |\ 
 	iSymbolStyle = 3 |\ 
 	iSymbolStyle = 4 |\ 
	iSymbolStyle = 5 then		! Lock Hanger Symbol in case of symbols drawn in the cabinet

	hideparameter "bHangers"
	lock "bHangers"
else
	dim _iTypes[6]
		_iTypes[1] = iInteriorType01
		_iTypes[2] = iInteriorType02
        _iTypes[3] = iInteriorType03
		_iTypes[4] = iInteriorType04
		_iTypes[5] = iInteriorType05
        _iTypes[6] = iInteriorType06

    _bLock = 1
    for _iii = 1 to nModule
        if _iTypes[_iii] = INTERIOR_HANGER then
            _bLock = 0
            _iii = nModule
		endif
    next _iii

    if _bLock then
		hideparameter "bHangers"
		lock "bHangers"
	endif
endif



! ==============================================================================
! Minimal Space
! ==============================================================================
values "MSFront" range [0, ]


! ==============================================================================
! 3D Representation
! ==============================================================================
! ----- 3D Representation -----
values "gs_detlevel_3D" stDetlevel3D		! Off(0), Simple(1), Detailed(2)
values "gs_detlevel_3D_m" 0, 1, 2
if GLOB_MODPAR_NAME = "gs_detlevel_3D" then
	gs_detlevel_3D_m = 2
	for i = 1 to vardim1(stDetlevel3D)
		if gs_detlevel_3D = stDetlevel3D[i] then	gs_detlevel_3D_m = 3-i
	next i
	parameters gs_detlevel_3D_m = gs_detlevel_3D_m
else
	gs_detlevel_3D_m = max(min(gs_detlevel_3D_m,2),0)
	parameters gs_detlevel_3D = stDetlevel3D[3-gs_detlevel_3D_m]
endif

values "gs_resol" range [3, )
if gs_resol<3 then parameters gs_resol=3

! =============================================================================
! UI Support
! =============================================================================

if GLOB_UI_BUTTON_ID < 0 then
	parameters gs_ui_current_page = - GLOB_UI_BUTTON_ID
endif

END

! ======================================================================
! SubRoutines
! ======================================================================

"allocationModuleWidth":
	tempModulWidth = (A - frameWidth) / nModule
	if nModule >= 1 then
		modulWidth01 = tempModulWidth
		parameters modulWidth01 = modulWidth01
	endif
	if nModule >= 2 then
		modulWidth02 = tempModulWidth
		parameters modulWidth02 = modulWidth02
	endif
	if nModule >= 3 then
		modulWidth03 = tempModulWidth
		parameters modulWidth03 = modulWidth03
	endif
	if nModule >= 4 then
		modulWidth04 = tempModulWidth
		parameters modulWidth04 = modulWidth04
	endif
	if nModule >= 5 then
		modulWidth05 = tempModulWidth
		parameters modulWidth05 = modulWidth05
	endif
	if nModule >= 6 then
		modulWidth06 = tempModulWidth
		parameters modulWidth06 = modulWidth06
	endif
return
]]>
</Script_VL>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Comment SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[Гардероб для спальни с раздвижными дверями и индивидуально определенными элементами для интерьера.]]>
</Comment>

<Keywords SectVersion="1" SectionFlags="0" SubIdent="0">
<![CDATA[Количество модулей, тип каркаса, полка, ящик, сетчатая корзина, подвес, дверь, ручка ящика, стили ножек и карниза, 2D-символы, минимальное пространство]]>
</Keywords>

<ParamSection SectVersion="26" SectionFlags="0" SubIdent="0">
	<ParamSectHeader>
		<Version>26</Version>
		<AutoHotspots>false</AutoHotspots>
		<StatBits>
			<STBit_UIDefault/>
			<STBit_FixSize/>
			<STBit_UIUseHierarchicalPages/>
		</StatBits>
		<WDLeftFrame>0</WDLeftFrame>
		<WDRightFrame>0</WDRightFrame>
		<WDTopFrame>0</WDTopFrame>
		<WDBotFrame>0</WDBotFrame>
		<LayFlags>65535</LayFlags>
		<WDMirrorThickness>0</WDMirrorThickness>
		<WDWallInset>0</WDWallInset>
		<SymbolColor>0</SymbolColor>
	</ParamSectHeader>
	<Parameters>
		<Length Name="A">
			<Description><![CDATA["Общая Ширина"]]></Description>
			<Fix/>
			<Value>3.02</Value>
		</Length>
		<Length Name="B">
			<Description><![CDATA["Длина"]]></Description>
			<Fix/>
			<Value>0.5</Value>
		</Length>
		<Length Name="ZZYZX">
			<Description><![CDATA["Высота"]]></Description>
			<Fix/>
			<Value>2.1</Value>
		</Length>
		<Integer Name="nModule">
			<Description><![CDATA["Количество Модулей"]]></Description>
			<Value>4</Value>
		</Integer>
		<Integer Name="nTempModule">
			<Description><![CDATA["Количество Модулей"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>4</Value>
		</Integer>
		<Boolean Name="bUniform">
			<Description><![CDATA["Одинаковая Ширина Модулей"]]></Description>
			<Value>0</Value>
		</Boolean>
		<String Name="frameType">
			<Description><![CDATA["Тип Корпуса"]]></Description>
			<Value><![CDATA["Сплошной"]]></Value>
		</String>
		<Integer Name="iFrameType">
			<Description><![CDATA["Тип Корпуса"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="frameWidth">
			<Description><![CDATA["Ширина Стоек и Полок"]]></Description>
			<Value>0.02</Value>
		</Length>
		<String Name="doorType">
			<Description><![CDATA["Тип Дверей"]]></Description>
			<Value><![CDATA["Дверь Двойная Раздвижная"]]></Value>
		</String>
		<Integer Name="iDoorType">
			<Description><![CDATA["Тип Дверей"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="nEditableModule">
			<Description><![CDATA["Выбор Модуля для Редактирования"]]></Description>
			<Value>1</Value>
		</Integer>

		<!-- module_01: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="module_01">
			<Description><![CDATA["Модуль 1"]]></Description>
		</Title>
		<Length Name="modulWidth01">
			<Description><![CDATA["Ширина Модуля"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.5</Value>
		</Length>
		<Boolean Name="bDivision01">
			<Description><![CDATA["Нижнее Отделение"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="divisionHeight01">
			<Description><![CDATA["Высота Нижнего Отделения"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.6</Value>
		</Length>
		<String Name="interiorTypeAbove01">
			<Description><![CDATA["Внутреннее Наполнение Верхнего Отделения"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA["Полка"]]></Value>
		</String>
		<String Name="interiorType01">
			<Description><![CDATA["Тип Внутреннего Наполнения"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA["Полка"]]></Value>
		</String>
		<Integer Name="iInteriorType01">
			<Description><![CDATA["Тип Внутреннего Наполнения"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>5</Value>
		</Integer>
		<Integer Name="nShelves01">
			<Description><![CDATA["Количество Полок"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>6</Value>
		</Integer>
		<Integer Name="nDrawers01">
			<Description><![CDATA["Количество Ящиков"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nDrawersFront01">
			<Description><![CDATA["Количество Ящиков с Лицевой Стороной"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nWire01">
			<Description><![CDATA["Количество Сетчатых Корзин"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nHangers01">
			<Description><![CDATA["Количество Штанг"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="interiorTypeUnder01">
			<Description><![CDATA["Внутреннее Наполнение Нижнего Отделения"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA["Нет"]]></Value>
		</String>
		<Integer Name="iInteriorTypeUnder01">
			<Description><![CDATA["Внутреннее Наполнение Нижнего Отделения"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="nShelvesUnder01">
			<Description><![CDATA["Количество Полок"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nDrawersUnder01">
			<Description><![CDATA["Количество Ящиков"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nDrawersFrontUnder01">
			<Description><![CDATA["Количество Ящиков с Лицевой Стороной"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nWireUnder01">
			<Description><![CDATA["Количество Сетчатых Корзин"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nHangersUnder01">
			<Description><![CDATA["Количество Штанг"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>

		<!-- module_02: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="module_02">
			<Description><![CDATA["Модуль 2"]]></Description>
		</Title>
		<Length Name="modulWidth02">
			<Description><![CDATA["Ширина Модуля"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Boolean Name="bDivision02">
			<Description><![CDATA["Нижнее Отделение"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="divisionHeight02">
			<Description><![CDATA["Высота Нижнего Отделения"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.3</Value>
		</Length>
		<String Name="interiorTypeAbove02">
			<Description><![CDATA["Внутреннее Наполнение Верхнего Отделения"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA["Штанга"]]></Value>
		</String>
		<String Name="interiorType02">
			<Description><![CDATA["Тип Внутреннего Наполнения"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA["Штанга"]]></Value>
		</String>
		<Integer Name="iInteriorType02">
			<Description><![CDATA["Тип Внутреннего Наполнения"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nShelves02">
			<Description><![CDATA["Количество Полок"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>6</Value>
		</Integer>
		<Integer Name="nDrawers02">
			<Description><![CDATA["Количество Ящиков"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nDrawersFront02">
			<Description><![CDATA["Количество Ящиков с Лицевой Стороной"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nWire02">
			<Description><![CDATA["Количество Сетчатых Корзин"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nHangers02">
			<Description><![CDATA["Количество Штанг"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="interiorTypeUnder02">
			<Description><![CDATA["Внутреннее Наполнение Нижнего Отделения"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA["Нет"]]></Value>
		</String>
		<Integer Name="iInteriorTypeUnder02">
			<Description><![CDATA["Внутреннее Наполнение Нижнего Отделения"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="nShelvesUnder02">
			<Description><![CDATA["Количество Полок"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nDrawersUnder02">
			<Description><![CDATA["Количество Ящиков"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nDrawersFrontUnder02">
			<Description><![CDATA["Количество Ящиков с Лицевой Стороной"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nWireUnder02">
			<Description><![CDATA["Количество Сетчатых Корзин"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nHangersUnder02">
			<Description><![CDATA["Количество Штанг"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>

		<!-- module_03: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="module_03">
			<Description><![CDATA["Модуль 3"]]></Description>
		</Title>
		<Length Name="modulWidth03">
			<Description><![CDATA["Ширина Модуля"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.5</Value>
		</Length>
		<Boolean Name="bDivision03">
			<Description><![CDATA["Нижнее Отделение"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="divisionHeight03">
			<Description><![CDATA["Высота Нижнего Отделения"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.7</Value>
		</Length>
		<String Name="interiorTypeAbove03">
			<Description><![CDATA["Внутреннее Наполнение Верхнего Отделения"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA["Полка"]]></Value>
		</String>
		<String Name="interiorType03">
			<Description><![CDATA["Тип Внутреннего Наполнения"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA["Полка"]]></Value>
		</String>
		<Integer Name="iInteriorType03">
			<Description><![CDATA["Тип Внутреннего Наполнения"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>5</Value>
		</Integer>
		<Integer Name="nShelves03">
			<Description><![CDATA["Количество Полок"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>6</Value>
		</Integer>
		<Integer Name="nDrawers03">
			<Description><![CDATA["Количество Ящиков"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nDrawersFront03">
			<Description><![CDATA["Количество Ящиков с Лицевой Стороной"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nWire03">
			<Description><![CDATA["Количество Сетчатых Корзин"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>4</Value>
		</Integer>
		<Integer Name="nHangers03">
			<Description><![CDATA["Количество Штанг"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="interiorTypeUnder03">
			<Description><![CDATA["Внутреннее Наполнение Нижнего Отделения"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA["Ящик"]]></Value>
		</String>
		<Integer Name="iInteriorTypeUnder03">
			<Description><![CDATA["Внутреннее Наполнение Нижнего Отделения"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>4</Value>
		</Integer>
		<Integer Name="nShelvesUnder03">
			<Description><![CDATA["Количество Полок"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nDrawersUnder03">
			<Description><![CDATA["Количество Ящиков"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3</Value>
		</Integer>
		<Integer Name="nDrawersFrontUnder03">
			<Description><![CDATA["Количество Ящиков с Лицевой Стороной"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nWireUnder03">
			<Description><![CDATA["Количество Сетчатых Корзин"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nHangersUnder03">
			<Description><![CDATA["Количество Штанг"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>

		<!-- module_04: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="module_04">
			<Description><![CDATA["Модуль 4"]]></Description>
		</Title>
		<Length Name="modulWidth04">
			<Description><![CDATA["Ширина Модуля"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Boolean Name="bDivision04">
			<Description><![CDATA["Нижнее Отделение"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="divisionHeight04">
			<Description><![CDATA["Высота Нижнего Отделения"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.6</Value>
		</Length>
		<String Name="interiorTypeAbove04">
			<Description><![CDATA["Внутреннее Наполнение Верхнего Отделения"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA["Штанга"]]></Value>
		</String>
		<String Name="interiorType04">
			<Description><![CDATA["Тип Внутреннего Наполнения"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA["Штанга"]]></Value>
		</String>
		<Integer Name="iInteriorType04">
			<Description><![CDATA["Тип Внутреннего Наполнения"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nShelves04">
			<Description><![CDATA["Количество Полок"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>6</Value>
		</Integer>
		<Integer Name="nDrawers04">
			<Description><![CDATA["Количество Ящиков"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nDrawersFront04">
			<Description><![CDATA["Количество Ящиков с Лицевой Стороной"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nWire04">
			<Description><![CDATA["Количество Сетчатых Корзин"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nHangers04">
			<Description><![CDATA["Количество Штанг"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="interiorTypeUnder04">
			<Description><![CDATA["Внутреннее Наполнение Нижнего Отделения"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA["Нет"]]></Value>
		</String>
		<Integer Name="iInteriorTypeUnder04">
			<Description><![CDATA["Внутреннее Наполнение Нижнего Отделения"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="nShelvesUnder04">
			<Description><![CDATA["Количество Полок"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nDrawersUnder04">
			<Description><![CDATA["Количество Ящиков"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nDrawersFrontUnder04">
			<Description><![CDATA["Количество Ящиков с Лицевой Стороной"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nWireUnder04">
			<Description><![CDATA["Количество Сетчатых Корзин"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nHangersUnder04">
			<Description><![CDATA["Количество Штанг"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>

		<!-- module_05: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="module_05">
			<Description><![CDATA["Модуль 5"]]></Description>
		</Title>
		<Length Name="modulWidth05">
			<Description><![CDATA["Ширина Модуля"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Boolean Name="bDivision05">
			<Description><![CDATA["Нижнее Отделение"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="divisionHeight05">
			<Description><![CDATA["Высота Нижнего Отделения"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.6</Value>
		</Length>
		<String Name="interiorTypeAbove05">
			<Description><![CDATA["Внутреннее Наполнение Верхнего Отделения"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA["Полка"]]></Value>
		</String>
		<String Name="interiorType05">
			<Description><![CDATA["Тип Внутреннего Наполнения"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA["Полка"]]></Value>
		</String>
		<Integer Name="iInteriorType05">
			<Description><![CDATA["Тип Внутреннего Наполнения"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>5</Value>
		</Integer>
		<Integer Name="nShelves05">
			<Description><![CDATA["Количество Полок"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>6</Value>
		</Integer>
		<Integer Name="nDrawers05">
			<Description><![CDATA["Количество Ящиков"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nDrawersFront05">
			<Description><![CDATA["Количество Ящиков с Лицевой Стороной"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nWire05">
			<Description><![CDATA["Количество Сетчатых Корзин"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nHangers05">
			<Description><![CDATA["Количество Штанг"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="interiorTypeUnder05">
			<Description><![CDATA["Внутреннее Наполнение Нижнего Отделения"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA["Нет"]]></Value>
		</String>
		<Integer Name="iInteriorTypeUnder05">
			<Description><![CDATA["Внутреннее Наполнение Нижнего Отделения"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="nShelvesUnder05">
			<Description><![CDATA["Количество Полок"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nDrawersUnder05">
			<Description><![CDATA["Количество Ящиков"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nDrawersFrontUnder05">
			<Description><![CDATA["Количество Ящиков с Лицевой Стороной"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nWireUnder05">
			<Description><![CDATA["Количество Сетчатых Корзин"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nHangersUnder05">
			<Description><![CDATA["Количество Штанг"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>

		<!-- module_06: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="module_06">
			<Description><![CDATA["Модуль 6"]]></Description>
		</Title>
		<Length Name="modulWidth06">
			<Description><![CDATA["Ширина Модуля"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.3</Value>
		</Length>
		<Boolean Name="bDivision06">
			<Description><![CDATA["Нижнее Отделение"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="divisionHeight06">
			<Description><![CDATA["Высота Нижнего Отделения"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.6</Value>
		</Length>
		<String Name="interiorTypeAbove06">
			<Description><![CDATA["Внутреннее Наполнение Верхнего Отделения"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA["Полка"]]></Value>
		</String>
		<String Name="interiorType06">
			<Description><![CDATA["Тип Внутреннего Наполнения"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA["Полка"]]></Value>
		</String>
		<Integer Name="iInteriorType06">
			<Description><![CDATA["Тип Внутреннего Наполнения"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>5</Value>
		</Integer>
		<Integer Name="nShelves06">
			<Description><![CDATA["Количество Полок"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>6</Value>
		</Integer>
		<Integer Name="nDrawers06">
			<Description><![CDATA["Количество Ящиков"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nDrawersFront06">
			<Description><![CDATA["Количество Ящиков с Лицевой Стороной"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nWire06">
			<Description><![CDATA["Количество Сетчатых Корзин"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nHangers06">
			<Description><![CDATA["Количество Штанг"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="interiorTypeUnder06">
			<Description><![CDATA["Внутреннее Наполнение Нижнего Отделения"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA["Нет"]]></Value>
		</String>
		<Integer Name="iInteriorTypeUnder06">
			<Description><![CDATA["Внутреннее Наполнение Нижнего Отделения"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="nShelvesUnder06">
			<Description><![CDATA["Количество Полок"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nDrawersUnder06">
			<Description><![CDATA["Количество Ящиков"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nDrawersFrontUnder06">
			<Description><![CDATA["Количество Ящиков с Лицевой Стороной"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nWireUnder06">
			<Description><![CDATA["Количество Сетчатых Корзин"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nHangersUnder06">
			<Description><![CDATA["Количество Штанг"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>

		<!-- gs_door: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_door">
			<Description><![CDATA["Двери"]]></Description>
		</Title>
		<String Name="doorStyle">
			<Description><![CDATA["Стиль Дверей"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Стиль 8"]]></Value>
		</String>
		<Integer Name="iDoorStyle">
			<Description><![CDATA["Стиль Дверей"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>15</Value>
		</Integer>
		<Integer Name="iTempDoorStyle">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>15</Value>
		</Integer>
		<Boolean Name="bBevel">
			<Description><![CDATA["Фаска Торца"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<String Name="doorCustomPanelName">
			<Description><![CDATA["Имя Специальной Панели"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Length Name="doorThickness">
			<Description><![CDATA["Толщина Двери"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.02</Value>
		</Length>
		<Length Name="doorFrameWidth">
			<Description><![CDATA["Ширина Обвязки"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="mullionWidth">
			<Description><![CDATA["Ширина Раскладки"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Integer Name="nHorizontalMullion">
			<Description><![CDATA["Горизонтальная Раскладка"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>4</Value>
		</Integer>
		<Integer Name="nVerticalMullion">
			<Description><![CDATA["Вертикальная Раскладка"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<RealNum Name="openingDoor1">
			<Description><![CDATA["Расположение Двери 1 %"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<Length Name="openingDoorLength1">
			<Description><![CDATA["Расположение Двери 1 %"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<RealNum Name="openingDoor2">
			<Description><![CDATA["Расположение Двери 2 %"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<Length Name="openingDoorLength2">
			<Description><![CDATA["Расположение Двери 2 %"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<RealNum Name="openingDoor3">
			<Description><![CDATA["Расположение Двери 3 %"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<Length Name="openingDoorLength3">
			<Description><![CDATA["Расположение Двери 3 %"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>

		<!-- drawer: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="drawer">
			<Description><![CDATA["Выдвижные Ящики"]]></Description>
		</Title>
		<String Name="drawerStyle">
			<Description><![CDATA["Стиль Выдвижных Ящиков"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Стиль 1"]]></Value>
		</String>
		<Integer Name="iDrawerStyle">
			<Description><![CDATA["Стиль Выдвижных Ящиков"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="drawerFrameWidth">
			<Description><![CDATA["Обвязка Передней Панели"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.03</Value>
		</Length>

		<!-- bKnob: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Boolean Name="bKnob">
			<Description><![CDATA["Ручка"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Integer Name="gs_knob_type_m">
			<Description><![CDATA["Стиль Ручки"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="knob_pl_x">
			<Description><![CDATA["Горизонтальное Расположение"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="knob_pl_y">
			<Description><![CDATA["Вертикальное Расположение"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.85</Value>
		</Length>
		<String Name="gs_knob_p">
			<Description><![CDATA["Расположение"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Горизонтальный"]]></Value>
		</String>
		<Integer Name="gs_knob_p_m">
			<Description><![CDATA["Расположение"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="knob_size">
			<Description><![CDATA["Длина Ручки"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>

		<!-- bCornice: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Boolean Name="bCornice">
			<Description><![CDATA["Карниз"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Integer Name="gs_cornice_type_m">
			<Description><![CDATA["Стиль Карниза"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="gs_lining">
			<Description><![CDATA["Выступ Сбоку"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Спереди"]]></Value>
		</String>
		<Integer Name="gs_lining_m">
			<Description><![CDATA["Выступ Сбоку"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>4</Value>
		</Integer>
		<Length Name="cot">
			<Description><![CDATA["Толщина Карниза"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.03</Value>
		</Length>
		<Length Name="cooh">
			<Description><![CDATA["Выступ Карниза"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>

		<!-- bBase: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Boolean Name="bBase">
			<Description><![CDATA["Основание"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Integer Name="gs_leg_type_m">
			<Description><![CDATA["Стиль Основания"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>4</Value>
		</Integer>
		<Length Name="leg_h">
			<Description><![CDATA["Высота Основания"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Length Name="leg_w">
			<Description><![CDATA["Ширина Основания"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.02</Value>
		</Length>

		<!-- gs_2D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_2D_representation">
			<Description><![CDATA["2D-отображение"]]></Description>
			<Fix/>
		</Title>
		<Integer Name="iSymbolStyle">
			<Description><![CDATA["Стиль 2D-символа"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="bHangers">
			<Description><![CDATA["Показ Штанги в 2D"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<PenColor Name="gs_cont_pen">
			<Description><![CDATA["Перо Контура"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>4</Value>
		</PenColor>
		<FillPattern Name="gs_fill_type">
			<Description><![CDATA["Тип Штриховки"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_fill_pen">
			<Description><![CDATA["Перо Штриховки"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_back_pen">
			<Description><![CDATA["Перо Фона Штриховки"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>

		<!-- gs_min_space: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_min_space">
			<Description><![CDATA["Минимальное Пространство"]]></Description>
		</Title>
		<Length Name="MSFront">
			<Description><![CDATA["Минимальное Пространство Спереди"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.9</Value>
		</Length>

		<!-- gs_3D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_3D_representation">
			<Description><![CDATA["3D-отображение"]]></Description>
		</Title>
		<String Name="gs_detlevel_3D">
			<Description><![CDATA["3D-детализация"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Детальный"]]></Value>
		</String>
		<Integer Name="gs_detlevel_3D_m">
			<Description><![CDATA["3D-детализация"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="gs_resol">
			<Description><![CDATA["Аппроксимация"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>12</Value>
		</Integer>
		<Boolean Name="gs_shadow">
			<Description><![CDATA["Отбрасывание Теней"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="AC_show2DHotspotsIn3D">
			<Description><![CDATA["Показ Узловых 2D-точек в 3D"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="ac_bottomlevel">
			<Description><![CDATA["Отметка Низа"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="ac_toplevel">
			<Description><![CDATA["Отметка Верха"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>

		<!-- gs_material: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_material">
			<Description><![CDATA["Покрытия"]]></Description>
		</Title>
		<Material Name="gs_cabinet_mat">
			<Description><![CDATA["Корпус"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="matSteelCabinet">
			<Description><![CDATA["Корпус"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>45</Value>
		</Material>
		<Material Name="matDoorFrame">
			<Description><![CDATA["Коробка Двери"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>13</Value>
		</Material>
		<Material Name="matDoorInset1">
			<Description><![CDATA["Дверь (Вставка 1)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>91</Value>
		</Material>
		<Material Name="matDoorInset2">
			<Description><![CDATA["Дверь (Вставка 2)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="gs_knob_mat">
			<Description><![CDATA["Ручка"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>45</Value>
		</Material>
		<Material Name="gs_shelf_mat">
			<Description><![CDATA["Полка"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="matSteelShelf">
			<Description><![CDATA["Полка"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>45</Value>
		</Material>
		<Material Name="gs_hanger_mat">
			<Description><![CDATA["Штанга"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>45</Value>
		</Material>
		<Material Name="gs_drawer_mat">
			<Description><![CDATA["Ящик (Обвязка)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="matDrawerInset">
			<Description><![CDATA["Ящик (Вставка)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Material>
		<Material Name="gs_cornice_mat">
			<Description><![CDATA["Карниз"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="gs_leg_mat">
			<Description><![CDATA["Ножки"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="matWireBasket">
			<Description><![CDATA["Сетчатая Корзина"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>45</Value>
		</Material>
		<String Name="LibraryLangCode">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value><![CDATA["RUS"]]></Value>
		</String>
		<Integer Name="gs_ui_current_page">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>

		<!-- gs_list: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_list">
			<Description><![CDATA["Параметры Спецификаций"]]></Description>
			<Fix/>
		</Title>
		<RealNum Name="gs_list_cost">
			<Description><![CDATA["Цена"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="gs_list_manufacturer">
			<Description><![CDATA["Производитель"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_note">
			<Description><![CDATA["Примечания"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_location">
			<Description><![CDATA["Расположение"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_accessories">
			<Description><![CDATA["Аксессуары"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_Type">
			<Description><![CDATA["Тип Группы"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Мебель"]]></Value>
		</String>
		<Integer Name="iFMType">
			<Description><![CDATA["Тип Группы"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>16</Value>
		</Integer>
		<String Name="FM_InventoryNumber">
			<Description><![CDATA["Инвентарный Номер"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_SerialNumber">
			<Description><![CDATA["Серийный Номер"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_ProductionYear">
			<Description><![CDATA["Год Производства"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<RealNum Name="FM_ObjectWeight">
			<Description><![CDATA["Вес Изделия"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="FM_ObjectWeightUnit">
			<Description><![CDATA["Единица Веса"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["кг"]]></Value>
		</String>
		<String Name="gs_list_custom1">
			<Description><![CDATA["Пользовательское Значение 1"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom2">
			<Description><![CDATA["Пользовательское Значение 2"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom3">
			<Description><![CDATA["Пользовательское Значение 3"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom4">
			<Description><![CDATA["Пользовательское Значение 4"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom5">
			<Description><![CDATA["Пользовательское Значение 5"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>

		<!-- gs_onorm_Title: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_onorm_Title">
			<Description><![CDATA["Дополнительные Параметры Спецификаций"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
		</Title>
		<String Name="gs_onorm_dimensions">
			<Description><![CDATA["Ширина/Глубина/Высота"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_manufacturer">
			<Description><![CDATA["Дополнительный Производитель"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_baseheight_value">
			<Description><![CDATA["Значение Высоты Основания"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_baseheight">
			<Description><![CDATA["Дополнительная Высота Основания"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_assemblydate">
			<Description><![CDATA["Дата Сборки"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_customtext1">
			<Description><![CDATA["Дополнительная Информация 1"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_customtext2">
			<Description><![CDATA["Дополнительная Информация 2"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_aks">
			<Description><![CDATA["Номер AKS"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_product">
			<Description><![CDATA["Название Изделия"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_leistungbuch">
			<Description><![CDATA["Коллекция ID Спецификаций"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_description">
			<Description><![CDATA["Дополнительное Описание"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_number">
			<Description><![CDATA["Дополнительный Номер"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_id">
			<Description><![CDATA["Номер ID"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_admission">
			<Description><![CDATA["Дата Приема"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_modification">
			<Description><![CDATA["Дата Изменения"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_tozonenumber">
			<Description><![CDATA["Номер Зоны"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
	</Parameters>
</ParamSection>

<Picture MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="0" length_in_bytes="19457" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000800000
	008008020000004C5CF69C000000097048597300002E2300002E230178A53F76
	00000A396943435050686F746F73686F70204943432070726F66696C65000078
	DA9D96775454D71687CFBD777AA1CD30025286DEBBC000D27B935E4561981960
	28030E3334B121A2021145449A224850C480D150245644B1101454B007240828
	311845542C6F46D68BAEACBCF7F2F2FBE3AC6FEDB3F7B9FBECBDCF5A170092A7
	2F9797064B0190CA13F0833C9CE911915174EC0080011E608029004C5646BA5F
	B07B0810C9CBCD859E2172025F0401F07A58BC0270D3D033804E07FF9FA459E9
	7C81E89800119BB339192C11178838254B902EB6CF8A981A972C66182566BE28
	4111CB893961910D3EFB2CB2A398D9A93CB688C539A7B353D962EE15F1B64C21
	47C488AF880B33B99C2C11DF12B1468A30952BE237E2D8540E33030014496C17
	70588922361131891F12E422E2E500E048095F71DC572CE0640BC49772494BCF
	E173131205741D962EDDD4DA9A41F7E464A5700402C300262B99C967D35DD252
	D399BC1C0016EFFC5932E2DAD24545B634B5B6B434343332FDAA50FF75F36F4A
	DCDB457A19F8B96710ADFF8BEDAFFCD21A0060CC896AB3F38B2DAE0A80CE2D00
	C8DDFB62D3380080A4A86F1DD7BFBA0F4D3C2F890241BA8DB1715656961197C3
	321217F40FFD4F87BFA1AFBE67243EEE8FF2D05D39F14C618A802EAE1B2B2D25
	4DC8A767A433591CBAE19F87F81F07FE751E06419C780E9FC313458489A68CCB
	4B10B59BC7E60AB8693C3A97F79F9AF80FC3FEA4C5B91689D2F81150638C80D4
	752A407EED07280A1120D1FBC55DFFA36FBEF830207E79E12A938B73FFEF37FD
	67C1A5E225839BF039CE252884CE12F23317F7C4CF12A0010148022A9007CA40
	1DE800436006AC802D70046EC01BF8831010095603164804A9800FB2401ED804
	0A4131D809F6806A50071A41336805C741273805CE834BE01AB8016E83FB6014
	4C80676016BC060B10046121324481E421154813D287CC2006640FB941BE5010
	1409C54209100F124279D066A8182A83AAA17AA819FA1E3A099D87AE4083D05D
	680C9A867E87DEC1084C82A9B012AC051BC30CD809F68143E0557002BC06CE85
	0BE01D7025DC001F853BE0F3F035F8363C0A3F83E7108010111AA28A18220CC4
	05F147A29078848FAC478A900AA4016945BA913EE426328ACC206F5118140545
	4719A26C519EA850140BB506B51E5582AA461D4675A07A51375163A859D44734
	19AD88D647DBA0BDD011E8047416BA105D816E42B7A32FA26FA327D0AF31180C
	0DA38DB1C2786222314998B59812CC3E4C1BE61C6610338E99C362B1F2587DAC
	1DD61FCBC40AB085D82AEC51EC59EC107602FB0647C4A9E0CC70EEB8281C0F97
	8FABC01DC19DC10DE126710B7829BC26DE06EF8F67E373F0A5F8467C37FE3A7E
	02BF4090266813EC08218424C2264225A1957091F080F0924824AA11AD898144
	2E7123B192788C789938467C4B9221E9915C48D124216907E910E91CE92EE925
	994CD6223B92A3C802F20E7233F902F911F98D0445C248C24B822DB141A246A2
	436248E2B9245E5253D24972B564AE6485E409C9EB92335278292D291729A6D4
	7AA91AA99352235273D2146953697FE954E912E923D257A4A764B0325A326E32
	6C99029983321764C62908459DE242615136531A29172913540C559BEA454DA2
	1653BFA30E506765656497C986C966CBD6C89E961DA521342D9A172D85564A3B
	4E1BA6BD5BA2B4C4690967C9F625AD4B8696CCCB2D957394E3C815C9B5C9DD96
	7B274F9777934F96DF25DF29FF5001A5A0A710A890A5B05FE1A2C2CC52EA52DB
	A5ACA5454B8F2FBDA7082BEA290629AE553CA8D8AF38A7A4ACE4A194AE54A574
	41694699A6ECA89CA45CAE7C46795A85A262AFC255295739ABF2942E4B77A2A7
	D02BE9BDF4595545554F55A16ABDEA80EA829AB65AA85ABE5A9BDA4375823A43
	3D5EBD5CBD477D564345C34F234FA345E39E265E93A199A8B957B34F735E4B5B
	2B5C6BAB56A7D694B69CB69776AE768BF6031DB28E83CE1A9D069D5BBA185D86
	6EB2EE3EDD1B7AB09E855EA25E8DDE757D58DF529FABBF4F7FD0006D606DC033
	6830183124193A19661AB6188E19D18C7C8DF28D3A8D9E1B6B184719EF32EE33
	FE6862619262D26872DF54C6D4DB34DFB4DBF477333D3396598DD92D73B2B9BB
	F906F32EF317CBF4977196ED5F76C78262E167B1D5A2C7E283A59525DFB2D572
	DA4AC32AD6AAD66A84416504304A1897ADD1D6CED61BAC4F59BFB5B1B411D81C
	B7F9CDD6D036D9F688EDD472EDE59CE58DCBC7EDD4EC9876F576A3F674FB58FB
	03F6A30EAA0E4C870687C78EEA8E6CC726C749275DA724A7A34ECF9D4D9CF9CE
	EDCEF32E362EEB5CCEB922AE1EAE45AE036E326EA16ED56E8FDCD5DC13DC5BDC
	673D2C3CD67A9CF3447BFA78EEF21CF152F26279357BCD7A5B79AFF3EEF521F9
	04FB54FB3CF6D5F3E5FB76FBC17EDE7EBBFD1EACD05CC15BD1E90FFCBDFC77FB
	3F0CD00E5813F06320263020B026F0499069505E505F30253826F848F0EB10E7
	90D290FBA13AA1C2D09E30C9B0E8B0E6B0F970D7F0B2F0D108E3887511D72215
	22B9915D51D8A8B0A8A6A8B9956E2BF7AC9C88B6882E8C1E5EA5BD2A7BD595D5
	0AAB53569F8E918C61C69C8845C786C71E897DCFF4673630E7E2BCE26AE36659
	2EACBDAC676C4776397B9A63C729E34CC6DBC597C54F25D825EC4E984E7448AC
	489CE1BA70ABB92F923C93EA92E693FD930F257F4A094F694BC5A5C6A69EE4C9
	F09279BD69CA69D96983E9FAE985E9A36B6CD6EC5933CBF7E137654019AB32BA
	0454D1CF54BF5047B8453896699F5993F9262B2CEB44B674362FBB3F472F677B
	CE64AE7BEEB76B516B596B7BF254F336E58DAD735A57BF1E5A1FB7BE6783FA86
	820D131B3D361EDE44D894BCE9A77C93FCB2FC579BC337771728156C2C18DFE2
	B1A5A550A2905F38B2D5766BDD36D436EEB681EDE6DBABB67F2C62175D2D3629
	AE287E5FC22AB9FA8DE93795DF7CDA11BF63A0D4B274FF4ECC4EDECEE15D0EBB
	0E974997E5968DEFF6DBDD514E2F2F2A7FB52766CF958A6515757B097B857B47
	2B7D2BBBAA34AA7656BDAF4EACBE5DE35CD356AB58BBBD767E1F7BDFD07EC7FD
	AD754A75C575EF0E700FDCA9F7A8EF68D06AA83888399879F049635863DFB78C
	6F9B9B149A8A9B3E1CE21D1A3D1C74B8B7D9AAB9F988E291D216B845D8327D34
	FAE88DEF5CBFEB6A356CAD6FA3B5151F03C784C79E7E1FFBFDF0719FE33D2718
	275A7FD0FCA1B69DD25ED40175E474CC7626768E7645760D9EF43ED9D36DDBDD
	FEA3D18F874EA99EAA392D7BBAF40CE14CC1994F6773CFCE9D4B3F37733EE1FC
	784F4CCFFD0B11176EF506F60E5CF4B978F992FBA50B7D4E7D672FDB5D3E75C5
	E6CAC9AB8CAB9DD72CAF75F45BF4B7FF64F153FB80E540C775ABEB5D37AC6F74
	0F2E1F3C33E43074FEA6EBCD4BB7BC6E5DBBBDE2F6E070E8F09D91E891D13BEC
	3B537753EEBEB897796FE1FEC607E807450FA51E563C527CD4F0B3EECF6DA396
	A3A7C75CC7FA1F073FBE3FCE1A7FF64BC62FEF270A9E909F544CAA4C364F994D
	9D9A769FBEF174E5D38967E9CF16660A7F95FEB5F6B9CEF31F7E73FCAD7F3662
	76E205FFC5A7DF4B5ECABF3CF46AD9AB9EB980B947AF535F2FCC17BD917F73F8
	2DE36DDFBBF077930B59EFB1EF2B3FE87EE8FEE8F3F1C1A7D44F9FFE050398F3
	FC91C05ADB0000000467414D410000B18E7CFB5193000000206348524D00007A
	25000080830000F9FF000080E9000075300000EA6000003A980000176F925FC5
	46000041284944415478DA62FCFFFF3FC3B006400F3232322273812450042EFE
	1F0C18C1E0EFDFBFCCCCCC10112626A67FFFFE41D4209B405D0010408CC33E02
	A81B7F54070001C4341AC40452282D431F08000268340206180004D068040C30
	0008A0D1081860001040A31130C0002080462360800140008D46C0000380001A
	8D8001060001341A01030C000268340206180004D068040C300008A0D1081860
	001040A31130C0002080462360800140008D46C0000380001A8D800106000134
	1A01030C000288653408A805FE81C1DFBF7FFFFFFF0F61FCF9F307C8F8FAE50B
	3B0787B8B838565D0001341A0120000F32208030E021089402929060859010C5
	400061404219A8F41F78F29289890932BD0C64804A1826A6870F1F5EBF7E5D42
	42425151514D4D0D2D2600026808CF09A305192480E000C2454E95F0E0838843
	020E28090C00C8C4EF7F1800872178461E680B387C20E20CB0397D78B4C1B910
	95701188A540063333F3F7EFDF6FDEBCF9FBF76FA0A12C2C2C8282823636369A
	9A9A108D0001783597148041180A125A446805EF7F41B76E6BECE725AF849EA0
	9B207E1233CC4ED73F2D430C64D4CA06AAE4C4991713FC421BE84124081A321C
	718230EBFE342CBE8D4A1A4D94730A5617D157593D1ED98126DCE712FF4084DD
	3875FB8CED1739752EEB82B453E7B66F507E8C41E32FBF2D128AE74154DC75EA
	718C524AAD35E79C526277ADB5DE7B60790420D48A91208441A066E00779CDD5
	B6F7FF27686171AD122E6E58279ED7D8444666C9024B2AE45165940CF5C21AFD
	DA7D54990CDBFEF70EC246FFE962E128B79E7FBD6BE75A1889C44E604C35810C
	C26827439C2C74EC955C46C0976516513CC480AB08E16DFD24AEF8467C8C012A
	3B26FC61CF6A1A93633E82C3C031810F1FAF9F758667A8DE1461D638B879018B
	D2B0D08A59F17DDFEC35BD4983A7AAC2C839F70A1F027069763B0CC220146EA1
	3EC412DFFF61FA2866F773F6C77D50A76E31A90453E41C0E5C711520E73C1663
	066BE77902FEDB9071E190DB35C4EED360B07308131D3953A68EAFFABC5AE6E3
	93DAB8244E3711F9155A153F17090277A88954462F702DAA420D0FB1EA813924
	4D63387394B2D5867F7FBFD6C73CA3C4E7B284BAAA2657788363C0057F491CE5
	2B96432D58AD97668AD97ADF303B46D893D0108E8BBF8AAA4C2606B116B0506A
	206CEAEFA25162D24A8CD6A7C98084DFF596FB1CFB0840A4B9E4200CC340D4F9
	4A08945E8A6BB0E58EDC806BC0221B7620A1B4F93176DA5255561535B13C7E9E
	55FE0D8831A694BC735546125CAD68C8C38C633F7F54CEC559B1A215ADAE0AC9
	8607186BFBA6B5E0C9615C802AD2D4304DDEBBB2646C2E526C690C11D59ECBAC
	F8B786F1E6F485471926D58444F055877183AF9605DEA5CDA83E138E4B1F2A0A
	1A1886982A4420FABECBF9720D21BCE2F371BF1D4EC0DF746D77E356DA58894A
	778E24AF1B02719DB01D658EC213BAAC89DD8883710E688896CAEB8EA14395D0
	DA2A99AADE9CADAE6A6EF9760F0CCB833C68B5CBFE1380C9B24742108682707E
	2150E8053891BD07F084D65E022B672CBC84E2580824EE6EC6512A08338FBCDD
	6F5FF8DD4DD3348EE3300CF82A6CE0A8A5C40C1F4A92622F27355DC817012686
	D4619EB9CA103236797E339F9559FD22C809BE7CBEEEBBFDE176BD9C4FC7D861
	738B6F22D902639590B54844A3A4C043748EF642B1BEF0A9302C50101DA375C6
	8CD1060931F5F8A83795326CBAC13CB1F12158431BDB7E9B52B7E184A17EA686
	DA5174E1496D752A38E59A45C3D725D643188342690DF604E933426DB104EB84
	976024B3A8991730E0B281E2AE9EE74E5765FFDF808F005C5ACB0EC2300C4BD2
	166912FCFFBFC1850B374E9B84A8A6AED8091B15A7755A1F9EEDB89DB45FCB77
	1ABDDFAEF3F351680B69E091F613F05DEB226B5D37EDED9DAD8F1F72464471A2
	CA9804A29D920382AB28B8578E3A1CC9AFA5E265B3E5E95CCA74A1A44CECA06C
	B8EC33631E9A2B484DAC4B45D8782F2FC8F023C7A81CA8D040E1B7245C1D5423
	31340139B0C1D5B86309F480EDB9CE2E64DF5C06B24D6D765AA80956C530691B
	05B3AF30F087D8719C44090962D09F207822728C02FCEFACE3CF5E1F01B83483
	1D06611886D2360C5469FFFF717CC1B469670E8CCECF45A0ED0A495AA78E0D52
	AF03D0B0D45A9FEFD76359E6FB0CB1105662348A93208C93D56CEC8B77D96F6C
	5E6E465FD2F573DD04353A16DCE2A3D6A30A4A5E57B9A0906AAB25D3408F8E49
	6C274C3D2B43474BEE89512F6F3CA3EFA9476A32553A514DE161AF4C58965325
	6A10B160E0A2C21E1EE14C8DCD74B3AAF7358A8F743F2F89C661782498D49844
	338591ACC2EC805D250EC425D9C89C25F70ED8336C21BB1A7EBEF5FFAEDA7D05
	20BB4C76108661201A074414E0FF7F963661DED815077AABBAD9B378DC1F012A
	7B8CF17CBFFA6C63CE4E030235DC63C37D28712752CE1BF8355A1AD0745B443A
	167C1EBB1C1CB635FD7F1ECD6B9DDEE519C3E3515EEFED72407889ACEB8B8121
	F9C2085E42D42125B29F187A17731E9E4E45B9FF8236C40B5972B2A70E422E3A
	936E95741896BB415C574C12A1422E95855196EF8DA8F0BDD1AFBEB57198AB07
	5F09DDD0C60E6F1324BBA626299209F8BF91E7F115804E334A01108661E8AA22
	E8FD4F2B8E99974CF047F04370B6B449D3087E2588BEC82C9D87DC524BF5BA6E
	38D36AEAC31B4B61293873208EF5291398775A6F0DE2B12697930B708EBB8720
	8E24215833306568634EA3B12F7283B259E4EAF84073209F8947933913A29047
	24B44A90C2CE5EF56B5C712726E7CEBE2545656D781A7C0746E2198DEECBC8E0
	65D9080F914C25E9ED66A28909B54DBD33E276C7DD42938FDFE823B12E2C564D
	73F4F393EF2300196690C3200C03C126B168FFFFE0C0CEC4952AF5C00585E0D8
	EBF5C0AF052D41FB04D76B37498C44E2A010F919F253CAEE0E9D8805D1C757F5
	54583B53C859FA4EA218A1C4440315FE65DE6800AE79E481CE229905BA50394F
	32BAEE2960DD9FD7A1B0DB1EDB0E4C76DEAE4B7FCEEEA1C52D4D0E1BD3AD8862
	5A0420D1A4DB361478E8E90B42C16D2AB8A1718B4A2624CF5C607442E480C5DB
	87DA490085DB050A3886B887E455C5D60F7B8BEF07D0FF7F874700B2CD208741
	180682C410FEFFE1C6F58C832AD41BA01CC8C63B6B23F142D073449735A28BCD
	4846012C780E5A6D15EA8B432483E3FBDA81E446832592CFE9977C18DD69CC3A
	A6FCB4D532369BC60E00C89E3AA43A8BD5F059D460B91ED4E73662EDB09E1C31
	B19B4A2E272B6F61B15F1590677594C386A842B9CD4DA7A92E062B43CAA61C0C
	A0568B24B86565A785308B948DEE5C4BABEAFEE69093DD0C207D2530EF9C9809
	21CA57CCC9F9FB0BE1DF075F01C82EB71C00412006F2D0FB1FD800B6533431FA
	67024477B7EDF0B1A06EBD9936E32CDA1BCB8945AAEA5284C0D334E801569987
	D329291401D6515FC6EECFC173A117D5675DF3000E58057A361A238701B4AB05
	A5FC98A8CBD3E7B7BE5130481CCFD1A4F19F699B8F28BEC9CDD10C610A78B909
	ADA736AD0014B9E8A215F909069D8F85205CDAE23A6A11C0DE495A2A1C0AF576
	2675B90B10986A26A159CDC41CC479AE9A7C2121C60EF67F00E8B905A0C28C72
	188461189A9472FFF34EA2657E369BB61F840AA8217562C77F15405CC65F98DF
	A5643665D7BE08463A4C0F165A57C8EE8C2B8F0C351CE0A523F0D9610D8B77AB
	1B44F7F4146986EBA47C44E895E77F5ACBE35214E29FF9AC3300A5C09CC462DD
	352E2A5E77D43C41728171C8C7B17CF2812D66CE96201172CE8FD6A4D5294A0E
	706AAF3230D2D689E1F4688D03C246C35D5875323B7E45F96DBEB9877DA304A6
	7B7E4B6B635B40AABBBD628E7EAD9ADF22780BC086B92C310C8330D0904CFFFF
	8789CB4AD4874EEE793036482BFE4D780DAE280B067B90E307603C6A0AD36D0B
	EB32FA9464B7861743C1D24CE9F29FC1214494850D9DD609F173FBFA6AFC3BAD
	75EB193635286DF18CB4EC3620A5DC6822134EAEB7744E1C18465E57F73FC6BD
	7E1CAE0798A4742D1DCE74E7EAF9948CEA0B8C1E6959B9324E5CC615B61CAA7F
	EB2DA90F1CFCDCAA206A0091D083B9650F7C641C6D7F5D3C7F0560DA0C8C1806
	6118580768B2FFBA7050EB4569278018DB7AE92E7F13E0B4EBB5EEA6378C0946
	E051B5FE75CFA5D7D6B2F06D37124D3CBBC3A130365A0F3956394BB60F2B2CEC
	8B109820492A3FFB8496C0398110D46A1A3AE06557E194BD78205261E7808950
	F36DE2B0A481DD5D7DB3C2E83DF5B269F60A9C33B554C81FB4F745D4D926595A
	F5365F428FA9BEEA216974ABB886A594235D11527C391972B6A8A1E7D8CB2CBC
	EEF75394FD8DF34BDAF5CD854ED93F02306525490082300C86F2FF070BD42C80
	EAD98A5DD2247E05B09E46473F829E46CCAB071D345638ED20671708D74D8338
	751DDDBFC0C869CC0E1C4F3AC9896BE7A55E9E29B9C4B6C4778B492C254F1EC7
	16D5B929EF4ACBCABCC763666795B695E2228F8A8E28B31D01CD758544765B28
	C56616394CE6A0DB8467398F2EEF123A692A1132365F52F56C735462BB0BCB5F
	2E026AE07D02CE0804D48143DD195A0EC506C7D93488D382775C08B2F5FDBF5E
	01B832B703006110068AA8FB0F6C512E693F7401ED03C2253D7EE13362D19D5E
	2C749062A68E1EE6E03298556D68D3AAB1B200E68E4C08D6E322839B7BA70D6C
	9065117BC763CE5D0FBCB396DB2D7DA9748EBBE201DF5B4D67B519A9D2C1CB10
	C13F227DD2091580A798EA514CB53B4E8058EE015CA84BD2EF2D8F03386BF721
	D5EB8A53F41C27788388888E43AC0B7FFB8526522C66FD4716FA3A6034D6C6BF
	F1DFCC1D2A44015A6CF161FD2F05BD02706506390C033108B47DE9FFBF5BD575
	97C151A344CA2997D50630E0FF0F3831B8989238BF4E9B06BD0A944A76B952DE
	28B7E38C9C1F62F835EBC4934D67960819D5B178C481DD6BA546E77B173831E4
	3D293BF222D640553600B165C7DC6AAB836639EE00D1C5B55CC41EFC7AB21A34
	B9E069091CCA077C62DCAAD996BE5055C868228988E6F88A515B62D0A8D76C0F
	5B890FC3C655BAA5FB60BD3F5A7B55DAB9879A54C4F09181378AF0FC0460CA5C
	52000661204A4CBCFF815BB47D3306DC17A1C6F9E6AAE584942C714FD755F615
	337D6D10B99C7B9EECB4698B4232A981A73CFE29D39C51FDB4C12338C9859EE5
	1003446BF651FF8D0525899691CC4982828D00D7134E5EDB9BC2052054FD683E
	8EA01322589DA4EBEC67C3C9CD26C7793A42A602A6D00EE6B5860CB792D835AA
	A2E89FC3B10E3938BF7DA8EEFFE0A1B0061F003F5D3E964A825708BCE477F57E
	ED1EC02700536690C43008C3C0D890E6FFFF2DB86835A41C73233696A5A59FDD
	D104E4CA54D7E786723001A1A5DFCAA2EA25697050FF9E2E25B112EAAECE223F
	E89A377E5B7341B3C867A0AFD5C71B1A469691004CD18D0E8934BB52ACA4AA63
	C7343401E26A62ED2A845C54CBC7E2AEDC53F8E5C2DB7FF38AAD9640D9D2F9E4
	EF3C1D25894C22CD501DD7474F6F7FF5A885ED93E81C0598D6B79A460C6183E2
	5DC94CF0448270C428BF13EF3ABDCFCEA704FD0460DA8C72000461180A44EF7F
	6085B9BE0EA2FF920CECB6BEC9AF0D354ED2E7785BD1C63619144D81CF43497C
	D067ED1628F2D02F254AB95318A3D0501424361C20F9CBA8D2A0D5A5F4944E63
	A8250FABCDBE10BACC2FE33154066674048B45FB136619B25A41DECFD0670846
	E5AAAF4002169A421D8755A745B212D5DDFB6F84893416A2EEE00440D0F4DB64
	B46EC0A73CEC3DAE0A6D9DB43391CAE237566DF1B68C9E0A32586EBFBBF9058C
	F6F309C0A61924410884305018FFFF6205270D581EFCC0966B85103A7E274073
	B8C4E10CD307B147D67B2F568C834E4B61BD5979BA909F7AC5136F391CCDE430
	8E68E302FFAB80F54BDAC12CCC30CA489F9253489DDFEA4C099622A1338072D8
	24C42FB8049A467227DEBE68C5F6385FC39A928F1FB46F3139D11E6E7BFE055B
	645B17E981EB81309A4666AACC30621414AA94967D0F7937C608C66BE7DE75AC
	58F195B7C1FD39051E01E834832C8841108656B1AFF7BFEFA8353F38EDA69E40
	0592107802E06D0341995BCD289E50F023A80368B198869C5FF800129F534EA3
	47A6CDB8300DA76360B9ADBA5674EBFC450A9533E2A2187AA547409C703BAAE2
	3064FCE7514A81B6A1B2EDB43245C8F9A321B2EB3376B47A4FA2614FA2D8C42D
	8C26780B758B8C3B226DBF8A1C0D4B4FC854B8A5B7BD0CFD1474CE305D64B167
	D0A2F043F687149F99F3CBCF6596756E019834031C8A611084C6FAFFFD4FDC3A
	79D4650758B2DA0A087E4878D63444045976DB05DE9ECFFBD82B37C010FC04B6
	7854CC56CCCCD85DD0B48D55D70608CBEBC44BCCEB91FC12891B62E6AD505B9E
	0935CF758BBEDD6EBECD437665BE5E7585D141B328109F2100A2B1A49204946A
	C789F308C7A3E923E59F51A58C5078D8CA50C19DFE486B2F6489E5863C280B71
	DA78474604CDAA3C452700064ADCC4C979E25DA868E27D1767BE1DF008C0A5B9
	E5000802311058D4FB1F18954E1743FC33263E586599B6F4DF0E14539FDE5778
	93AE48E553228237D5B62A35AC3505CC60A71B8DC548C3DDFD92B279BE5F79A8
	705CD692A2427968C53F7E589BE1F16A7E789D01B4491927FA857A95CA6583C8
	23674104D4C3564FF320325D4ED78A76D254D138C30E81A53E8D0556BEEF81B4
	2E44132B17A52CDD683CC1BFCEFE793C605892AF9F4094A919846DC8EDF39A7D
	BBCD2E055E01B8348324866110881992FCFFC3B569570B9D691F908319638136
	3F9B7086A141A274BA27A18738ACABF68C13388D857910979B618F32A0626C68
	0D4389E1E07BE642CF471C98D610B909DC6AD0225110267BC563E12773E0F9D8
	15CFEA4426CD4FA799AD55D764D5E5B80D6F90931F043FA5ECEBBA3F6DCD53F4
	3AD16126CF4717555DB18BED4B36D7C64C5B9AA63395E156E6BE90C25E3E8A04
	2A6CC0726EC097C37F24780BC0A5B9E45008024150E0DDFFBA6F038CD3D5A351
	B726468330FD29DF651C0D0D52C7F3F2856761C3F03A82B48696CCA06BB74B90
	8F8B8DB49B651B9DD85C132832CF23988729D1E8E517FA2DD775630EA655C246
	EE417BFB36A6A41759F1E887E4BE973E2A15CF74B0D2D6CD4DFA377827AFEABF
	8C3A334162CAE9B7251721A4FEC37F4904076C406D496C77710481259BE010D0
	DC7575F6DC0648A4AB9336E90A3363D2A8177A7E90804F123E0520D38C720084
	41183A8CF7BFF036277D654B8C07F04360145EF9A008EC97FA4FCAC8C2AD72BD
	BD3A72647415164338CF1D83CF08CCA44E822D52CDA4C4CB6DCD4FF64CD4B774
	0CF6D441668670EC391704E00C66831A9914BD907CFECB655CDE8DAC8489DFD9
	6594340816B23B15F39DFE1AE8F5694ACEC2268EF08A23F22965E055C15E0661
	B381E0E5452D526D588D76401C2A0697C053E0FCC31E2862462806E488DEFB39
	83FCD3D0570036CE0005401886815D37F6FFF70A3A974B15047D42DD6C920B7E
	8918FE768E24AA7FE6E88065CF51FD9DFD7A6505F83E0A969E55E820007FA34B
	53326FFBE69230D136DAD0A880B5AB938C99371A61092760C0A302AF2364E58E
	454AC8D43820BE345794AC96B2242256701269045801076516421D3738A45547
	785BC6E1024D9BE857A22B6D0A5FC72C26DA6C9D4B6276E43943C7A58565349A
	B38C7A8717AD554D83BFBF76F9B905A0D34C7200846118D885FFBFB84DC09E54
	8203678490AA60A71E7F9830E3028B2FBE9C252C09EF92D1E9C836818E215130
	D4C112F79AFD5675002F53E6B773900B19766B5B0F045D1539762DCE5C051ED2
	EDEE32C934210AD46BE0A75577A4C6D3AB13B283C7CFBB4BD78425D9887EF23E
	A5CAFAD38AE3C9B1A53C40147D91A41C779115E68993C8C86D66D798ED401EDF
	9DC250B4110B5909B5076E36C144B1FA5F2BE216804B334A81108861E8B60AAE
	F7BFADA0D5E47506F47B6028A5A469921704ADEE2CE6DA10611C89C869CB5885
	12E91EB39EAEAA9A1875A464BCB1197CF3786AEB77A4E57B5F10F2EE0DE6DCF9
	1540062E93159592484FE265621D8531F946E70A782997AD1B780AA92F36B4FA
	B54ADD9209F430F613D93209ED05F4D1D2EF2253B7A9008C57F4D76658562710
	161CE840FB69A528626C3F228802D2E7C3DAFFDB24F73356FC5903B7004C9A59
	0EC3200C444D1655BDFF519BCA88B2D49E31885F14116112DB33CFBB19E7176B
	B930AB7D080A8346AEC98FC85E83B48C34E107FFED55DDD31C1697701E60F0B7
	D5DAF491BFC5566AABE5B1E79F2DC9E11C4C5A1DD21A7EE448118C1FA4220882
	05FA62CFCE6361E34ECD4DFDE47BBA201455A9B5DE2F2BBA4D3F997C0A860750
	A2578E13E37018C3462F0330396DE4A0B920EB68C40E029750EF1CCE12C8C9D3
	F1155E4056DF4A3BEEF7D834F08AD3EE46FC05E0E20C76108481200A8B3431E1
	8C31F12089D122E2FFFF9031F1132C14E9CCD4182F5C7A5B683B33FB965F1564
	5308E77EEC8771FD5240BBA7CB1D8A33EF23B9B2E44DB0DB2AADC0802C34CC48
	6D16DC5726A05CA312EB7A98DEDBA6F1B7FBE1D88167869382B84BA5D1384424
	8A2659A756237B0E46EE3D0ADE2900EEF05DF02787EA2C29708A73BBDB3F9EAF
	EE723D795F6F6A764C411B25F5C258CB52EDA46A2C23563CE8F128734A6A263E
	95CD63856725655AC54388C31A055959E7DC1F10C7318D6FD93F02506D363908
	83501006B1257465625CB930DEFF502E4C344462BA3026345A8437F3AC9E0028
	2D9D9F8FBF23A8CAB2748BCF31F5BEC78845D12FFE8A548211D406BFA8BA13F9
	19834C591A921129A34B53D1C6E4296FB6BB78BDC4F3C9B9F5A25BA5FF60D135
	D36B43E9144652127C35FB607D08A62C149D35B4B5460F709AA0BA01AF690843
	9DC63DA5FC187BDFD56FCA75166F3A088482A673455EAE19404546E1B150E233
	0E6216AB23212F955658966325216F30F35BD0B8FDE168F5D2D2EF1D88EF33FF
	0840B5D9AB20100341383F26DE71FE741636BE82602116FAEADA5808E203D85C
	6121A29CCA215A98A03B7387671E2010D8DD61BE9DFCED849D6BDD8B73BE5DA6
	593B089E52CCB6B2A0EAB2221F1393C5041A1E1CC90DC551029629F04AA99F48
	9049D1B28FF2399ECE6FC565BF59FB2E173E9AAB27747CF84D5F4A11432F740F
	E007900769416B4CEDAF3982A82C965829221CF12AC36038B249E77A3A1E76AB
	A4974ABB287C4A20C762C2D430E0A6648C049950743C1146CA54E12ACC1809A5
	414190C6336F5145B9C058E79DAE58E55701E4D381CFFA93D9423784B7994FE1
	F908C0B5B5ED300C82D0296064A6FFFFA9CBD6840D0ED865F3B10FC6B6C8B978
	FC51C2C1DB988776B91F92A9389C61E4394868718663B3BD88C2875E7487DAF7
	B955396E859E71C1F0EE4F38B2A4AB4F5D80325FAAA3DF0BFBBD643502CD4193
	6ED5950A2B683B8F9707D5AA84D915586232088E116E25C8F198539FFE4B06F1
	12F2770BC447583C0DB8922FB6F38AE6B43E0A6D12C0D4A0E862DAC808A1B920
	21D13306D3C6BBDA301A9BC338140DE176C529AA6D7F830B00FEC647002ACE64
	85611806A2B69A26876EB7FEFF2F16023645B62BCDC8699B6320102C45CBCC23
	7F9B70ADC50E45D767D95F97FB2DB1DB8F634E95A9840778177C1EE61C898EE5
	737A9E02EAB411251C34A021240CCED7472DFBBA6DC83B7BE165741ABB89F2E8
	49486E09F3DB57F296C20BC8418A85788DA463986DE269164BC83B4110E7E0DF
	2219C054CDD59DD58D5F120B9AEB49BE5F2A42D2F9A89B064D074ABCDB4D92BF
	EEA8DD876A856380F6DED0B4EA5B75E9B48B7FDBEFF1375E5E1F01E836631D84
	41200CC3690763DA2675320EDD7C03DFC167F0DD5DDC9CEC60222D1CC8FD0746
	07D91818380877F77F3FF47B006EDB769B7E58FC7305602D9B102309505945E4
	1677B3F86D41A973E03C6034339A2C51EDA8EAC89FE60048846876AFB61FBAC3
	F1314DB1767BFAB2356B717AC0BA6263908872A110C2A9D4889377E42143E6C8
	054C59FA7EC362818A5EE48246757FF3E59445AD4328532DBE95A49AC6492F93
	380F511024E5A1496B51037B4FD194B8700223CB25A9815669DA034A66E4B9E0
	97DD7E3C9D2FD7DB7D999DF9F3F8E8780B40B599E53008C3403486D06FC447EF
	7FC95209252CB3180107888864D933CF93D710C6AB232D3F1A041F3992836A1C
	B7649B6977B55EDD93ED785231A32B6243220CA1D61928A4703BC47020887009
	38D1ABE9A96B948A82677014CC083CA679FAC9510F129CC3AB699ADBA3B2AFDE
	5C33DB1C3CAB74FD5328C7D4ED128A0546C9F498AE660513D65E1A31D8BCB36B
	B192FC440799DC43B1A41E893E11CF9E60C5C76853FDCCCBF7F75FB7ADDD20E8
	F601CFEF14806B73BB02108461A82DB8FFC240350FF8C009143969D3DE5C6C68
	3BFA8AF44D8DD02E23CEA1667A40DD68444ADDEA66F5A0E1184A782284DF827A
	54402C88F6A76C336FDC339284BED606ECE3195412F743EB4AA657F86289B5F2
	4CC326E414A3C53E498B6C9947822CAB13709AFBEE87CA43DF442B0136BF9259
	1E7D9DD81934372F73A811CE26A4C785DA0987835B54B292ECA23AA097981388
	C12A0795C53C5CFAF33F9F00649BCB0DC0200C430961FF85DB421B3F73405D00
	2440C1DF438A00AB879A8926BEFB0F0D4582BE011E6605C83ACE4D05E86076E8
	9BA0C9949CC7132AA5A1524EBD69C4D86B1D65CB34423A1FE72D619A28068F9B
	C420613AD750ACD16AD95DD26CF8A4A23F3A46CDE9946D2757D165A6BAAE1B89
	E952C8D2B219A0D57D9E056DCFBE3B0ABA8E2E609DB96CFB0A1D49B31EC906B4
	47ECA63CE5EA192CC42944FF43EAAF006C9B411280200C032DF0FF1F03DA6C8A
	1EFC808EB42349B31DDF01C5538339A12B91377CB8FEF6FDE0FA9959273E0C30
	A6B74FCDE27AAB60824B720B0BE5E642D2E9D0A35014E85AC1AD5B4B38101235
	5E5D96439228270ECB831D4E422F2FB2C72247A69D37182A2C9F8D1D44552430
	379C42A83CEAEACD9E424021DA468C660BAE9A81D045F628C8438EB55AD8FDB5
	6218F4A82E5E28C279C8EB747E55D02D00DB567204200803B9FA6F5813247BF8
	70A40166D00DECB53EDD25129004278535DFA4C7135EF54926BB451E3AE98E1D
	7E8CB7D3260E3B9442E7B308D2160DC464C0C956CE68B8EB2C786CAB78D4C383
	C21CE38805717A2C1DC6085C756B819D931C403C8F937D0BC898600A3022BBE9
	02806884F8F332EA4BB206AC2B36AFE3EF71E14061AB458DD0324692F3697725
	30A7F2C3BCD9CFA699F12BC3713D02906D2E39008230101525DEFFBC0845E683
	185DB321A429D3CE9BFC0B8F2529126330203F7089C6878F855A8AEA8151BC79
	EE54527199FF8219A8A0B12024772E1B2CE9DF44E33822433B874204E81F9B7D
	08B73E294480022156D7DFBB6972853B77167661571AD55961FF6309853A9A45
	9418F2E6799FA4BB2676EE4CE47A9A5831F43185C51042C9E61F26DF1E8F0B45
	EF0B280BD7681C12E31CC7C82ED7ABB1A04B29EFD7FFB4A05B0036CE20094010
	86811418FFFF5F19D46E021EF4CE91861036F44F7D327B426D4859AF02CBAFE2
	CB44A8495E92D51334E2B85CB1093E3E04CDCEED035500081F75729CEC6E0C6E
	6ECE0356A5F732A647BC61B862E7E1C154665FCEC301E26C0493A7CA67F5E190
	20B6AFADA754B92CFD25045A22C8DD6A450EB5D597C2E65867DCF10757624791
	AFD17DAE42B3E63B6F3D047C69A20C7F99D7F02F20E54D407FF9DC5B002ACE20
	074010068229C2FF3FAC623A43095E4D8807B05DBAB3FE9AF07200905903BEA4
	2270066ED87BEC360BC7E1C010A24C55E97F17F094272CACA61983CDBC58A264
	A64228A818DD82F1A0174960819B25A6E0159ADEC01E559E824ED3631389373C
	5DD3F2DD3088F30926D3B09E79D2B11D5E9F3705164044F90322C6B0F8A25DCD
	EE0152974B81C5FD68D2450B42244F8CAB33D0238E184B2B355F5713BB7DF64F
	31FA09C0C519E0000C8230300CF5FF0F5E74D2ABCBB21F101309B457DA2F3F59
	0741E691788CCA89780A5F4AA0A900874C78780B834A622F5C0E85D975A98041
	36ADA9856777CD07FBD3DFD5E08BB2DDD384621EEC19F520582D6915D01C3689
	336DA30BCEF86CC417400AF5D0C4949978815D7605B3F6580861E598A89EE465
	CAB4D360B39A2FD1D23A769CC0453AB28B6D6204827174F4B1B7FDCCD10BB5FE
	9B625F35F411808C2B4902108461D0F2FF17A395246DC7D1AB5C9C61CBCAC794
	B7E58BB8E550B103D37DE6B9C1702BECEA71567FB4E968B364F95C8CB7552E21
	87054A984AE7EF46F9772621D9107F29419F78C6D483601D9AB72F9E1AD0CCA8
	8983C45906AE6782A61465FBA3C88C83ADB04EDC09652A257472A2B958468070
	80D3CE1F65EA4AF29740044283ED70016BCBD466BC8EC4521ACD96F8B219AD74
	7684E525BC76C0FF2A7E0460EB5C76180481284A41C3C6A4FEFF17BAAF718543
	B90FDB98F805C64898E1CE39786B436BADC7FE89635BDEEB043F03F6E0D8F051
	5EC64698CFD28AD690D7639767A73737E82FEDDA1131F379B1028643447D73D8
	5A61BD4A09947CADC9870CBA940C81A19646FA1FC1DDE86AFC09AC28F38A08CE
	EAAE564D912F7AB74294F1B469854F32D377891C97C6366A737EF9AE81AEFCD7
	CF1036AA6224B6995D1E66E15D536C539161357962CAD49AE8562294E9976B3F
	FF8EE62B001F679283300C43D166202C600312F73F173760D9A25608A862F0B3
	13C4A627A8D42891FFF0FCF7049552D6E752A7717F3CBCDE8F008035D07B3553
	81A04A9A5EB126646E734B74BAC2CD033856077D2C58645FCAAAEB549679BADF
	AEA7CB395248D62CCB6D67563A90986056248B6FBFFF6F97FA2B443FC4C62CEF
	5605D7A1EDD8BD7BA1A3B4A06C5297F294B738A338F42E8FE51E066D684D4300
	FFDCA7421655934302332BD9C88110EA2F88E4DBC600699E95B91F80349B9CF0
	47002ECE6607411808C26D693D1A12896FE1D9F77F16E3C91B07042B606766DB
	18AE243D00ED767FBE992319D75F8678BB7BA975D05F5B48E96FF93BC30201AE
	288E2E32B93CCD9FB7DB972089A8EE3DBE1E27E2F5BEA064944C070F0A1622C8
	6FE3D49D23475B8175E31EA3291D955C3137A7B18F18883534DA8FE9B5B78151
	3D2BA6C4A8B9BD67034104A724012544A455AD3995D2360300B4CA7E8271BC4E
	3BDD1BE0CC6F67789CC074C8F6517CC2BFA52ABE99D40599BE94F8394FE3EBF9
	18AE7D3AA546E9B47EDCFF6FF809C0D7D9EB200CC34038043B14464485A898BA
	F10E6CBC3F2313030B1B2BA289D314FF04C4C4DEA5AA1B5B77E72F3F3D4005E7
	F5A6EDBA8E1FC1B030181702F2486BB415D13410650FCCDBB5670224322696E6
	F4A700A22CF307E20694551AE5A32BBE06A5DA65A57CA566B96AB7BBC3F164BC
	2A757933D74C8AC208521AD0C0332FE5340A8CC9A54853114E4BA128E4AD428E
	48E3AB95942521353FFF3A331FC35AAA955E649924610F3D87A05D47BDDF4A9D
	B1296B9641F7662D6F39790013195D1D1C6D3DD27CC852CBC01283DED7F8A6B7
	77E11F630CD83CEED7DBE5DCEF7B0074CEFD4115BC05E0E2DA712A8681A0127B
	1D2B0D4222EF3D2151702A0ECB15B84328E86852C1F33AB69959A721652C6BAD
	7876FD59EFCCBF0719E7FCD7E7BA7EBCCF31B4232F88FD3C522F2ACC001C1DC4
	05F4043CDC6910691248A9F56C24556460AD9995203691E8813FC2563C627A14
	CF1A26C794C5E5FA1CC28448C5844E53C43F4A083CB61BC5A7E7C4AC58B0C429
	EE25DB3977A46A9B48CE6AE4DB0638E10D6C34FFD59CDC48838013065352584A
	F7DF87C7E57BDB6E2FAFCBD35BEB2235B56576E670FD9E5E8A1AF18D7E42AF28
	BB69E494B6272C055A74A85D3FEA8E2134FD605DF3C73D9E0F54C63EEBD5F396
	4A1A151F98A9AAB9D6B3DADF09863F01C8B8821B84611858852475C20448CCC9
	5A4CC0102C8078B00082548A684ACF9744AA60817CCE767CF6F97E99B0753646
	2BB22FB4E3D2DFAF646037E7670DB10F71999A0FCD50E7B4AD3A2F9D4C52D3C3
	C9B2D908E5B4A8BD5FE9703C3DEEB7EBE52C8099E2465090996A353C06BCD1F5
	7CB5ABB67864148A7991203AE54779F50BF5E2EA9A80B0702862839E2132387D
	8848CAD1072E69CD28A2A1C97E1E4082CD2220428800C08918B353C184775A6E
	7937C5EDF2D007ECADF933F5944037C9962CB52FE3751551E82855D9A1C979D2
	2B4E3AA10189945273A6DB382EFE6B435701A8B8922384612046B083D798E141
	835440879440013CE04113194E0F2BC931430B89F7D2F537847D1F08B32F5368
	0644894246E7355C9D51EE66A506E8B0ECD0F0CF1328D1E7D0C6B612060CBA3E
	2F86316FCC2C572ACD4885D2934EDB0A5ED5F3F121533CDD9742DC944D515B84
	4443292AD91F92A78CB319444193FBE4CC7D4DEFDDFEE0FBF8E57ABE9D8E79BB
	E6BDB650D80895386DA3C6470B31A502322EAC68EAF31A4EF4CD21ACC3AB5C56
	E13165C8B322F67C80A4114F2159D67DEC05ED7DD44A412151EADFD750F5DB9E
	9BA53FF115808A2BC741208681B1B5D2A2858E8E3F5050F0FF4F211AB2599C99
	B105453EE0C48A3DD7AF3471EEDC3B727746295500DC6375CD159F1C3A0820D3
	5CA9819CC5144822178324BBC38ABF4DFD6D4BD387F80627CF9FE11D96B10493
	C56412A5BB7ACC602AE6950F461FB6B2E9E703401CD4BEBCA3953A6A7D3A6FEB
	7AD13AEDB26099B288086DCD0AC4E9A3C7C8FA69AF1809611B91F18B9C353F3C
	29B4FEA94544CE0140758F2F6CBBDEEE8F2718A7A3E006A6159467EF2B001567
	90032008C44041628CFFFFADC115A605F1E6052F04D86DA75B7E435C513A6EF5
	78C210A8ADABA11163228AB793C5A3B88E991F151EB1869E94AB324861583409
	84B7F8F268A499DCD61878AF17872B0C2C40259DF298E9A6884AA6A32EE36876
	BC0E9A168DB0C3D02855553B1600B7E9A3D8F48B5D20CD463984F61DA826C811
	583A869FBA475FD40DEABE1AD861E48913F132B74D688FE3715E16BE96619DAB
	37D93E5E01B8B8921C00411898D1C4FF3F18AC761642E02A1C8C86B6B31DBA20
	6AC2140251C245B624B611D53D6D216C85859CC4A18B70913A694361DCDC10AA
	D9482FC3AC662CBCE429CBC91E45B2B725FB989E2D16B3517E5B6F97E6338F58
	892FB5C2E46DC9F12DB0EAC6D36504FEE27D7740AE60125D88DD939AEFD7764E
	FEE9E4DB358DFE45715406FC80B504EC92A126517B447EDD5B3B12EF1886D7FA
	0420E38C72000461186A86F7BF304174AF6568FC279144916D6DDF9796C2DAF3
	005280936AAA310F0BF1659260D73287FBAB5EFE04940C6759B7BF7AD8975204
	A6C3E3047E5B4A547B4E44193442283441D28684C84A7ACD37F359EED9589309
	857989473439271148830116B829099FE0E27430637B3F9E6766A1CA957C59FA
	52D69AB7627219673A52B395E8D8E80D926060C2016A1C3D51869F7BFF73AA2B
	AE740BC0C519A0000CC230D08EB1FF3FD8E9D6E4AA6C1F10844630CDE5F30FD0
	38E8C613E320E48C7623FCF6F38A8A483DA27AC37A3CEEB6E0C3114FBC0AE26A
	439125EFD135A652652D2F6AE545C0B115EA3239A71536B2BB9A6385F7C66E53
	930B51A8A23A7742B45E6F49C264FF25D09B5E1D143B65757986DD830E88EA36
	B4F7F8EB3C8C8C1AE7C825C03D1C9ABA71AA1052C658B2B510CEB9AB687995FC
	FE628A8F004C9C010E8030080365D9FFFFAB194EE901FA0193B94046B976FEB7
	0129D2D27B116D093C007E2AF3C52E2470B9EAD16D85ABC4BC7E47AF54B6B553
	2A29109CF6BAE1ACDCA6DB7A3DCB616475EB588E4CD5A2B4F1B49713362DA2CC
	C3C5440CB5B2FBBC5CD298328CE3611F90009BF3912907A17544AF5A9BAC07A1
	A213363D3EE2C2DE905D738EF51885C3A6B6F12D415DB0F2C75695D0F8A146FB
	3144C6C3B4E5E8F74A1E01A838A31C0061108602BBFF8D1D53DAC2E29F9FC6B8
	D1D0D7FE0D997A555A9A303FFC26586DFEFC3E19C8D97591DFE6278327B3A2E7
	2D8519537C6A19D8E49746D112AA1A2D64DA88D1D8706DFC7476D386F3D20046
	3DCBC9EE2FE8503AA22FC209816F5E8E6FDC90486903038AF370A1578E53C0E0
	AA614E4D904B3C4ADD0687117B6DE2A31AAA43D5B8C5048066DF082A6008C0D2
	715D3B43454C07FEF7FC0A40C519E5000C823054DD76FF032FC0A42DC45DC00F
	62504AFBEE5F7609C9D8453116E73AC4199228CB91321470C020001B7008D0E4
	74419455A27F99A83911A12B2A68328F0CB05A713E0756426B13692532F7844C
	4251D4AE7D91F909898D4E62EE8D90B37908D2B0A10BE08E8DCF22C8285D1E41
	E0271C5FEFC84713C3276DBAF9A5818378DFF2DD88F6EC0D4A0B3B08B5F829DD
	CF6C0210290B26CA715FA2CBB1C867F5BB0B7D0230752E0900822014ACECFE17
	2E21791F63D79E028561BAFBEFEDF94E06EF629B790A593659E82F24A594024E
	1A0DA8F09046659D91D6362DF099D66E51B9C57C3234AA34E89C1B3DD111C2FA
	48C5946950E7510377E7AFF44835EAB52C5EDFE913E97DFB628D37CF1B072162
	2CA001A82073C4F5783160401C9071AAC8BD68EDA2430B8A005321568E15B00A
	CC34F2C50A54EA80817E74F4895897C4AF874F0036AE24094010868995FF3F58
	491D92143CC803B850BA65F9FC00AFECA717D05DB8BED4EBAA8B925058029A4B
	7D9BDB6AF85077614E8D1A76609B0AEBFE428898D8186B14B1B69AD635819F7C
	33D5F986DA67A02A069B6B426D5E7F5859606E44E5C9DE693E86B17ED21A793A
	FD5CC95B13E7A1D911F0C99021D7CCC51376CCE179848C2EBBEB280A0321D8E0
	322C0847B2682035FAE0EF0D745E01D838A32B0041180622B8FFC23E45924BF1
	C715A0B4254DEFFC84BACCAAB359C479415F48462FBD37B3EF98440E185102FD
	854AA1D782E17206724311374150DE04DDE74DEBC04E74EEAC7E100EC4989132
	748779D3986791896CB9D38125E2C2BF017C90972189C9BDCBB3E778AD2C4710
	98DC74A04E1B85B92AD850829F6CA821AFDA496D8413EB534E3CA3D7B0A053F6
	CABD87267B41D297112321FEDB05BD027075063800C2200C8CF8FF0F9B491D2D
	C5E80F966C611B6D8FDF25EC63069277437194E38586B5E2DEFAB0D259F0F227
	2119046CDF9264FCD48629CBCA738EDE9176B5C8F9A9BAA4084EBDAF674A01C1
	A1DD699E0836B1D4EA76C44C6469817DEF9F1A4C4585DBD57825AECC5329C8B0
	6F37A59B77B8979F726AE2744CDCBE0BE9CEC18A0A6B1A00454C82982EE8D47A
	8A2A40236D9572D0B2F8ED83CE84199DFB4700AACE608B61100482A1A6FFFFBF
	55D7D41DB0AF979C733120EC4CEEBF01A9311781495CA91E9816CA5758351B75
	99DDFDBEDCE4025016F3B0A946D0A8550700395BEA6AD360589D6AE83AEB94FD
	E83002846901806D6FCC314C36CBF13B8E55CC4B58E00CA74D1D4BE3D305C5B6
	EF01DA8AB4BE74A6874C1DDB063F5DEC9663D6A6C03832EF9633D1C89539F662
	765493E89F97F2834D3FD1050D2776E37560183E41FC790595FD89A13C023075
	06490082300C14E4FF2F46AACDA6C8CD8B33C28186A659C70914EDF6D83C2BB8
	C87AE58267822CFFE0BFC4659B3259BBAD3D3D4479520811B7DBBAEDC2BB6AA7
	3529AF21FCC1DAE842D51CC188DD58D27D8DA9D9B3FA985B0BC55DE6EC539526
	054F37108BA2977CBDEF581815E230030CD66DC65B61CD791869C66226B17606
	93D5FDC8472703BDFFE0EB93FA2283158F181354618D88EBCCC8EFDF2CB1EDAF
	00545D01120421085A27FFFFE01B572F2066DA2754A684487943229C0C1DDFE7
	24E7D48AC18E84B4A7D4F7B4E23DC38C9B18DDE278FA483FD68221AA2C6D0D33
	EED60673ADDF58E2B1DFE301AC6D339236ABEA0DD5213E734947C33615A70CB3
	F00FDB852809CCCBEE11BF10852E7295ECF72AF8D7D805DE5A54CD57D1950401
	52B534F85A6F6D5CF06316D88F014E48A7D614F477256985F72FF465C9360D33
	92F9F1CB0BE5ABCDFA0B40C599180108C240D028F65FB01024F738D882635E36
	FB6F4319EF6CD887B66C8CE8E908A34064C5F74D8391E30E12C73598800E12D8
	81B20639099828FCC5287D0D87EAB2730A640B13C5E6E8D510C95FCF64546510
	5430C1596D01D3925E2ABCAD38E0FD57F28475D466B39D49CBA76E02B0EF09FB
	8C951549800465C43511837AC355184C56F3396A36A88F7DA147EEA817CE6A75
	BC169DAC7BE6D755EF30D6FE28F60AC0D5191C0008C2305005F75F9882E4D2F2
	70011F5221A4E9F98F264EB771D14BEDAA05E0CA1969C43C4E05272A6591B9D4
	6BEEC00BE73EF814F4287E008F7DA9042877035BBCB7DC188E5FB13CA154C1D4
	0211A43A1A9617D82C26CC2197FC7B81306E11D2A6F11E02473F8E5178A26A51
	F9227388409B1BDBC0D101785F2863EB781D18CEFC2AE0071B99C47103ECBD6B
	6184AC179A075AF308F7F5EEFCB4404A09FC5B938DE7F2350B5F769CD14F00AA
	CE2807401086A10EE3FD0F8C0CB3BE62E0CF5F0363ED68CBA98A5019117937B4
	E79A8A606677D0981CFDA507505F8C7FBA5B110E3D38654416724D8DF5FFA180
	89BB16806765E827A410B3A16B651AE27EDD212A960CE053E7E2DC1847B6E5E5
	871B16FF7C18C15D4CD203AF68C15623BF12EEE94AE01D928939D14B48CB20CE
	753B2C3F6A24549B352CA704BA1C2551BBCB06596A7A5D27301330A04CBC7F07
	E6D9BD027C7C0250756E4B0082201015A8FFFF6193740F76796FC6644AB60D0E
	C7571ECD8BBBC0214E0A92561F4FDE7370626E874E557B3CB4647A4EB5A7362C
	0AE14F46543AA59050929C780768F781E9BB76137A9A9218E95DEB7846B27529
	DCAF8401CB218BD094045FDDA7EF6C13E9C793C67E9D68FC46AF990FF97A4760
	46E70A1DACC5262299BB7DAA75D7FD680183372751541FA8A9090E49695D1395
	AB5D94E07BE47F3AC06E5E2F6D7A0BC0D595E00008C2309CF1FF1F06A7BD30D1
	0F18B92CDDDAFE83DCACC11BCE416C23B476DA81ECB39711605582565CA2C83C
	11097354DD25255C85B6A7D82DCE66B807478B5A073B66B9CA45B297B06F0E51
	8F908F0959DD231A26FB9DA31784FCBF135D6831AFEEF314ADC1F52CD426F5E1
	672EEF877D9FD1EEC6D77C4EC95AFFD4BFEBA05381A1CC15BF9BBEED4D2B501D
	BC2D415C49CB873F3923A6F685F7E2B3E7E01180AA6BC90210044293F9E9FEE7
	D52C3EDA6BD3BA45348C20FCBDA1F08817049BE7268149997161BAC29F904D81
	62C7DBBB2419200EDF2B77E48FDD32AB2C037EAA7A09CCADD496DB6480278095
	56CA22A717FBF83A24147CC4B4BA70E9BCC383F1549344882983740FAFCD90C9
	8D32BC47510A02D4B19279AE098EC3591E5FC89B50B534521EEB6D38035EBA5B
	D86D434C23D9ADA80C252DEEF6BA4F1151133D2E8AB145793775AD46C5F7F908
	C0D599E40008C3309026E2FFFF0555A1F1248872E480C4A22E4E3CEED611BBEF
	CB806D8FB5650E771A4021DA0A6277547E409F72D9EB076F2604430F32A36900
	B4BE94876A32D867926916DF1665FB3F2A0996C5765D9D3A128AF61FD692C0F7
	A8427D8EC6C4D9F19223400AC199DA7B39BA39637BBA5CBDEE702F02923EA36D
	1EE7B0D168B3F59FC051BA149C314451D91991392B834A5341D5911C8470D457
	7A8F0FFD45967DFD718F005C9D0B0E80200C43FD20DEFFB2466080D016831E40
	130326EBB6BE7EC8B931A6ADDA758756B579E78B75FF4B814F837243E63CA181
	0BBD40F2D06220D7450A960FF765CCC2DE510E54A159E0C9F48A240731B41077
	C0DD06B69AB5689D397BA97481B3498EE2DADA8536C00C7731D6322F482E4815
	C47BBA26453F9E09A9A99AAB60C5B14E454C05D9985AE39F405F2BE880F810FD
	F44EDCED95A1036E786944C5134B4EF38FF640130DFE38E7F8D01F1C9167F008
	40D5D9EC200CC330B83F826E2FC09133EFFF6E032DEB52643B45E3DADBD4A94D
	9DF8F31F39F7BD6DEBDA1ECFD71DED4E64088E6EB67F0EDB310C1AA13BF88FA5
	EB2A4928D3C40692DCA89A0D1859F57689E9067D1A8F5113D7DD931DBDB626E2
	5A629594209D4F819A736994B271F4F43925E15D985BA09EA7805EE8E40A9A1A
	FB497C345EDFCCCC0F2077D0C39791483E93E25F82857F7A385F66AD8E0B107D
	B43CFD19119522986A76913468B98CAE0C77E816A5686DCB524984B9EE813489
	DFE25700AAAE2087411886A96C4C1A7C61EC3CEDFF4F9B044D9AB2D80948DC22
	4E0511A9B11DFB625733CFD36B793F3F5F320CF818D68C0B5E8835945AD986A8
	D55FA86EFEC8940A4EC47E0AB57BAB89986C5E9514496044E6FF881160FD29F1
	5033ED2A9AC115A19FB33878A2BFC0A4EE14C89FF86E123269CA42312CCC87BA
	86CE81E9624466E8020EB87A3C10503FD52DDCE549F837B427126702D0DE8FAB
	1037EC534B810EA47141B7DCC7B012664D64F5C8D86AE90FBF3A72381C62A7A0
	8777D6D018C4BA5F5D22828E3FF377BDF80BC0D5B52B310CC2B023850E6548AF
	FD9BE6FF7F875EB3A4C7B396EC5C729D18190C58C6B2740420C6F85A9694D23C
	DFC91FAAE7F94A49DCCA372CA51C3EAFBC7ACCF274A1A6FB6608BED15D52EE0E
	19228C57CDB24A08D7F58D631AAEB7C7136F40C9DBF6C1570C91A9A613138B93
	EDBF3A3C3099E8A287FC555388EE27943F64C5B55D47D12347E9C49C2144AB6D
	D5D1B5D324C9D91F8B3311726B032949A617B6D7D9437726D70680AC83C98326
	922C73FAD89D683201AA4EDE5C6030831E42451925A7B7513B699CD9707F860D
	3F01B83A9B1D046120086B6D82079EC0D4C48307FBECF072C6A4A5B40577675A
	8D122EFC9CD82C9D85DDF97EF80121C4699ABDF7CE39926FBB97FBF1334A6FFB
	06D3EDD37918CC38C211A830DD5873CB0DC40ECB4397C35596771800F3E4FDE1
	2FD71B0323CB62AE801F6397C049E8242E2984ADAE6549AB327B5391AC4A7221
	C6D7F39095FA652D7BE7F0AB99B0376A33150F84B71965B1E29BA2A46714195F
	1643C4189C28B7EE86D4EA71A8CDD65182D9E0BA6720B414D86751EBB2218746
	DB14DD802E1ABA406655A69C58A90A1B6E2FFCFDCF34F45B7819F31680AD6B57
	6210048291280576C0FF7F64324E7808C9DE1E3114B1A5D099853BBCD9C70F80
	9412D6BCF731C61082B596F3D2A13F66D9D2F97BC721C83937894DEDF3BFF55C
	E60CD9392279228C8C397A6FD63AE716C1A3496CE2BE5FF455D5E98F4DB1AEAA
	EDC78BD471B69454CB490B2A29FDC008C891AC5EF02DA87B4086201EE85B0DF0
	9D096DABBE8E876E82DA812C7AD9629EE6A6BEB4CA82E2705199AE7765632815
	8F1E73721BDA3A75FADFB8E191BF370272165EB3298ED30937A58974235233FD
	FE27386C4E01C7F31180ABB3C9411006A2B0C12EEAC613B8411678FF7B68BC4A
	D3A6C512C579F3CAA06C486043607E60A6D3F7396331A7944208728C31E69CE5
	0A8340C728E0FA7C53FF02ECAC57B696371D9CCB75368104C18A958DFDDB0BB4
	C86283C9A28B37E5F0AC6E35913F78F107BF91B035CE28354E8D3C79D293F7A4
	516BEAC35E1C6445E08BCFF7C7F3D25F87F1C66942D8512CF8AEF80AD502D32E
	CA71AEC014BF4A966409FB4EE5739890E19756F6A86EA86B6526968E5D63451C
	8976E828B2A3A29EC041CF2B74DC2612772B6272FA1580AB2BC8412084811AD7
	153DF0032E3C85FFFFC5DBBAE002763A69A31EF6C06533092D9474A6B338572B
	C698522AA548128410FCBD40BB7277A92796694F6A17C1FEB47B16F2012EDF43
	F379FB73D0E4E06FE7349E9C8256976C44756BB244987773143766AE493941DD
	D390C0770571FCFCD40AE7B6AEF4010101FBFEE02D9573A6309163544FDAEA12
	8C820192AE777785B9C48E6C38BCB0E57C6C874E0141DA0196D45148BA8AEA03
	C6DB3875FB81FA103B57B77D7B0DEDB8B1F64220ECB58FFEA7CEA04FB927C447
	00AEAEED06401804A2266EE026DD7FB1B689F7B269E4C318BF10286838B8A885
	607F24ADB51D3E67BB5BFCD0314E23C952108DBE0CB3C6FF58CD5DEB97338C37
	3B956DE2954A5D09D9C171D6463961E6B35C8990AAA5928138560E95C389912D
	A7F40F329C686C85B150DA414281C36EED2EC1BDA9AB39D09A95A2A2289F43AD
	2B1E4EBC24ADC966D6E580E0265C7E9ECEFAF6AFEB3C85DE9A712B7BC01FD0B8
	7346233FC09E10922BFBCA01AF006C5D410E80200C4B8CC8FFBF8A076ECCAD2D
	0B8A9CF4C4421B06DA75E7EF47EABDD1C33E56FFB90F5444389F39B1E71850DB
	184142956A1939EA2C85B8BAADC856F1751090B30E5E0FB9780E18E519774280
	44261983094EFBA5A677FE68C04EA9B66D0775FCF2CC4646005A3ED385D29D5A
	A3DCD7F356886DA7286F2A5663C9B3068F04E5B2B476FBB9614C72442FE6526C
	191EEA230067D7AE042008C394736595FFFF4F1E26245406273B31701CB421ED
	40C375FC35372B4FB2DE7FA5F93457032B66F2BBDC2438C718860CAF8BA550E9
	4831812D69B31610A2456E7C4FD5C74E89492A97FE7E33C9E3C3AAF216B96DA4
	A0D385D37845E6BD437813790029811565EDF1CE3BB495D68034486D588241FD
	91ECE469AD943BE70CA608BD2061316087151E01447E04900408E627B4C5C3F0
	E90B78A1871C5B40125422830581E5CF8F9F3F21B1F50756E9414A4578ACC37D
	0B4D34E0261AA4D00316488CE06540F000859C810A6F1D20375D20FB6AFE4117
	1AC1078FA1170682BAA63FC091077607B02103EC5AE9EAEA727172414E0F8524
	ACAF5FBF024978920508203A450049190BEE38080398F1F1642C48F102892DE4
	420FDEDD870B02BDFD13D4CF4000480CFD04178C90C61BFC7C6948A306394B41
	1A60D07537E02A0D92F3402BF2C1A91BB6D60C7C25EC1F500440FCF21F5A00FE
	01362F81964A49497DF8F001D8E0E4E4E4049648000134E822808C8C454CF642
	2E03E1AD0948C4FC868DD7438209129190F605900D89337843E33FF41860C882
	CFFF90629015B40194191E4F90B527C09207187DF0540FAC7B80CD4B15300032
	E0152740000DED08A0A40CC495B1E035247C3D333C4B41620B528EC15B7DBF61
	35D56F700B07DED4F9FA15D4977AFBF60D30BD03F381B1B1B18686868484040F
	0F0F24C740004000613F4D7414105F63C1BB96F01A0B022071032CFDBF7EF9C2
	C3CBCBC5C585DCC784B73901026834020618000410D368100C2C0008A0D10818
	60001040A31130C0002080462360800140008D46C0000380001A8D8001060001
	341A01030C000268340206180004D068040C300008A0D1081860001040A31130
	C000208046236080014080010027FEDC2FBA8B5BD50000000049454E44AE4260
	82
	]]>
</Picture>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="1" length_in_bytes="1531" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000001A80000
	003808030000009F7D9C05000000206348524D00007A25000080830000F9FF00
	0080E9000075300000EA6000003A980000176F925FC54600000300504C544500
	0000040404B3B3B3FFFFFF000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	000000000000000000000000000000000000000000000000000000000000004B
	3AC7500000010074524E53FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFF0053F70725000000097048597300000EC200000EC201
	15284A800000001874455874536F667477617265007061696E742E6E65742034
	2E302E35658532650000013B49444154785EEDDBD18AC2301040D1D6FDFF6FAE
	314951D39762662097BD4761FB1461EE461BD0ED38CAB37B5F4DB8BF48C8CBFD
	179FC3DA624239FF0C65AAE760B73065C97B0FDDF6392C77D4C2CA54CFC106FD
	8BBB5352385488AF1D15C4F8091C2A843B0AC2A142D41DD51E7B98BEB6029542
	E7C1676FA7D579864AD0465B2FF7ED11C25019EA5B5F63A8950DA1DA069B61A8
	1C63A87E3BF0334325B984FA9B62A82C8682301484A1200C056128084341180A
	C250108682301484A1200C056128084341180AC250108682301484A1200C0561
	28084341180AC250108682301444FB667FBD34D4CAC61FB24D877AADD1D653A4
	FAD6E74F43D7777E40697163A888DD60FC040E15C21D05E15021C650E5E6AF5F
	FD6A377E86CB50A76FAEBD3B4F31862AA7A0D7997582E7A814EE2888EBE7C974
	A8FE57818EE309E2B220EB61263A380000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="2" length_in_bytes="1547" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000001A80000
	003808030000009F7D9C05000000206348524D00007A25000080830000F9FF00
	0080E9000075300000EA6000003A980000176F925FC54600000300504C544500
	0000040404B3B3B3FFFFFF000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	000000000000000000000000000000000000000000000000000000000000004B
	3AC7500000010074524E53FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFF0053F70725000000097048597300000EC200000EC201
	15284A800000001874455874536F667477617265007061696E742E6E65742034
	2E302E35658532650000014B49444154785EEDDBD18AC3201046616DDFFF99AD
	D59136E35D1CC8FC70BEDD855C89CC896D03DBD25AFF35BFAB87A5D9481EFF23
	29794251CAEB13594329A9D8A660FE07C2894AAC4F640DA55CAA3D2AD156B260
	20222E272A116E20878188E04489602022C6899A3F3515DB1F4C2FB41E5AEA7C
	D2CC8150CE1CCBB8ACE59506A1BCF1D237112A33176A1EB013416B10CAF1A1EC
	ADFCB6B0356C53305BA8F791B8356C5330841241281184124128118412412811
	8412412811841241281184124128118412412811841241281184124128118412
	412811841241281184124128118412412811F3BFF2C725A132F35F643B1E72D4
	1A734F58C64B1F5F0DCD6FBD4121391F2AE24E8E58831BC86120223851221888
	081FAA7FF8B3ABBB6AD01AB8D80672FCC1B82F10B106AE7CA8FE04F37DDE3C30
	9E82ECFA2E9EA3369C2811FB7BC1F190EDEF049D9CD63EE7783016DA86477300
	00000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="3" length_in_bytes="1542" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000001A80000
	003808030000009F7D9C05000000206348524D00007A25000080830000F9FF00
	0080E9000075300000EA6000003A980000176F925FC54600000300504C544500
	0000040404B3B3B3FFFFFF000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	000000000000000000000000000000000000000000000000000000000000004B
	3AC7500000010074524E53FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFF0053F70725000000097048597300000EC200000EC201
	15284A800000001874455874536F667477617265007061696E742E6E65742034
	2E302E35658532650000014649444154785EEDDBD16EC230104451BBFCFF371B
	636F44E3BCC511DA19DDD356CA93A5E5B240A4525AEBBFE17B65C06A98F338C5
	2B9457A93ECD3150B1138359F83F0C1B95589FE618A89CAAC9B31B07124E1B65
	868DC2EFB15122D8281163A3E64FB513335AE8858E1B8E3AEF127D78851AC665
	2D7F56CC428DDF8150992DA1E682ED48748675A8781BBE2DD5193198854BA8D7
	965C67C460160825825022082582502208258250220825825022082582502208
	2582502208258250220825825022082582502208258250220825825022082582
	50220825825022E67FD48F4B4265B67E916DFB01CA74C69CCBC378E9E3ABA1F9
	1D6F50486E0DF5C4B330CB19564F42364A041B25828D12B186EA1FFEE2EAAE9A
	E80C239761B63FD4F603B29CE1640DD5EF3E3EF78A1BC61D4C5CDFF5D0193193
	05364AC4F5757CFB018ABF1D4F9D61A3B5371B0A2A56643A549C000000004945
	4E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="4" length_in_bytes="1581" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000001A80000
	003808030000009F7D9C05000000206348524D00007A25000080830000F9FF00
	0080E9000075300000EA6000003A980000176F925FC54600000300504C544500
	0000040404B3B3B3FFFFFF000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	000000000000000000000000000000000000000000000000000000000000004B
	3AC7500000010074524E53FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFF0053F70725000000097048597300000EC200000EC201
	15284A800000001874455874536F667477617265007061696E742E6E65742034
	2E302E35658532650000016D49444154785EEDDBE1AE82300C4061B8BEFF3373
	E756226C2D0DCC6475399F9AF06BC11DAB92E8B26DE92E3E47C8026DC8F15416
	425502ED483A93FD6416286473863B9E0813550B3A51A76A48026D096D7EC469
	A2D060A2700F13758D89C23D79A2CA6D8542F669B85468BF5858CB151E8EE284
	CAF2E1BAFCA1122854BE67846A850D5506ACC7646B840D251FA18F4DB7866CCE
	704DA85797F9D690CD198E5026423908A5219489500E42690865229483501A42
	9908E52094865026423908A5219489500E42690865229483501A429908E52094
	865026423908A5219489500E42690865229483501A429908E520948650264239
	08A529BF86CF87843A0B16AAFA235BF7939B6D8DB237E3E5B73EFE1A6A937D1A
	6EFF80427075A86FBC82665A23CC0B9989FA114CD435260AF7D4A1D2973F397A
	6A9D6C8D209A13E9FE429A1698698D28EA50E9CAE17D9DD7215F7DC8F15381D6
	907D198E89BAD2BDC0F7B4EFC1DD4F4E1E3D22AD11C2B6FD03D59C24963129CE
	500000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="5" length_in_bytes="1674" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000001A80000
	003808030000009F7D9C05000000206348524D00007A25000080830000F9FF00
	0080E9000075300000EA6000003A980000176F925FC54600000300504C544500
	0000040404B3B3B3FFFFFF000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	000000000000000000000000000000000000000000000000000000000000004B
	3AC7500000010074524E53FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFF0053F70725000000097048597300000EC200000EC201
	15284A800000001874455874536F667477617265007061696E742E6E65742034
	2E302E3565853265000001CA49444154785EEDDBE16AC2401844D1A47DFF674E
	E3EE48B3099F506716AADE5385FC1A6486D50875D9B6FD21BF578809957A8C59
	186A8250AB7BCA3D68C1242AD8720CE144CD30E1440DAB2124542BDBBC88E144
	610A4ED427E144CDC789FA24ED44F5BF1593A86BCBBED0FD467FEDDFCE909619
	AA6997EBF285094243B547C350734C19AA1F300719A33D63CA50FAF87B1A19A3
	96A1822D97A1BE2D648C7A860AB630542997A1822D0C55CA65A8600B43957219
	2AD8C250A55C860AB630542997A1822D0C55CA65A8600B439572192AD8C250A5
	5C860AB630542997A1822D0C55CA65A8600B439572192AD8C250A55C860AB630
	542997A1822D0C55CA65A8600B439572192AD8C250A55C860AB630542997A182
	2D0C55CA65A8600B439572192AD8C250A55C860AB630542997A1822D0C55CA65
	A8600B439572192AD8C250A55C860AB630542997A1822D0C55CA65A8604BFF4F
	F67649C9A35C46ABD774FE219BFDC2C838EA19BD5F4F7BEBE3A7A173A96BCBFD
	030AFFDC79A8C4FA648C22878113F52238518F71A2F037E7A1F69B3F5D3D6B25
	6370CB08B884D837937B0019077640771E6ABFEBBF7D4733B46F0EBA7ED69B65
	A85B0B27EA915046C2F5FDD37E617A3ADE2DC3B66D3F175B1ED637633C4D0000
	000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="6" length_in_bytes="1574" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000001A80000
	003808030000009F7D9C05000000206348524D00007A25000080830000F9FF00
	0080E9000075300000EA6000003A980000176F925FC54600000300504C544500
	0000040404B3B3B3FFFFFF000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	000000000000000000000000000000000000000000000000000000000000004B
	3AC7500000010074524E53FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFF0053F70725000000097048597300000EC200000EC201
	15284A800000001874455874536F667477617265007061696E742E6E65742034
	2E302E35658532650000016649444154785EED9CC16EC23018C6C8F6FECFDCA5
	3483A6D9B703C9C1956C40E4E48BF94990681FDB569F8DF74A507495EADA5050
	6A9953AB87906995769C282A97897AAD04464D639B9BD04D946071A2EE821375
	0F9CA8BBF09CA8E35104CC7EF06B53558E1F5642A4C569A1BE044A0DF53E4418
	8ACB10EA18B01974F42C720CA1DAD6F5313A7A96398650DF53E8E859E7305484
	E5305484E5305484E5305484E5305484E5305484E5305484E5305484E5305484
	E5305484E5305484E5305484E5305484E5305484E5305484E5305484E5305484
	E5305484E5305484E5305484E5305484E5305484E5305484E5305484E5305484
	E5305484E538FE856EA83F6039AE17B24D4B759C59E7787EF57969289FDF0D4A
	E05C4395F63E838E9E150E6F5F70179CA8FFA1389CA8BB700D550F7F6DF52945
	47C722C73051655A5A749C59E418F6A87A629FE338F5CFA1A36737B4402F289F
	201D27AA603C4C4C4BDB6B061D3D65DB7E00E01A1916995A4AE7000000004945
	4E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="7" length_in_bytes="3015" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D494844520000002E0000
	008B08060000001E68AB6A000000097048597300000EC300000EC301C76FA864
	00000A4F6943435050686F746F73686F70204943432070726F66696C65000078
	DA9D53675453E9163DF7DEF4424B8880944B6F5215082052428B801491262A21
	09104A8821A1D91551C1114545041BC8A088038E8E808C15512C0C8A0AD807E4
	21A28E83A3888ACAFBE17BA36BD6BCF7E6CDFEB5D73EE7ACF39DB3CF07C0080C
	9648335135800CA9421E11E083C7C4C6E1E42E40810A2470001008B3642173FD
	230100F87E3C3C2B22C007BE000178D30B0800C04D9BC0301C87FF0FEA42995C
	01808401C07491384B08801400407A8E42A600404601809D98265300A0040060
	CB6362E300502D0060277FE6D300809DF8997B01005B94211501A09100201365
	884400683B00ACCF568A450058300014664BC43900D82D00304957664800B0B7
	00C0CE100BB200080C00305188852900047B0060C8232378008499001446F257
	3CF12BAE10E72A00007899B23CB9243945815B082D710757572E1E28CE49172B
	14366102619A402EC27999193281340FE0F3CC0000A0911511E083F3FD78CE0E
	AECECE368EB60E5F2DEABF06FF226262E3FEE5CFAB70400000E1747ED1FE2C2F
	B31A803B06806DFEA225EE04685E0BA075F78B66B20F40B500A0E9DA57F370F8
	7E3C3C45A190B9D9D9E5E4E4D84AC4425B61CA577DFE67C25FC057FD6CF97E3C
	FCF7F5E0BEE22481325D814704F8E0C2CCF44CA51CCF92098462DCE68F47FCB7
	0BFFFC1DD322C44962B9582A14E35112718E449A8CF332A52289429229C525D2
	FF64E2DF2CFB033EDF3500B06A3E017B912DA85D6303F64B27105874C0E2F700
	00F2BB6FC1D4280803806883E1CF77FFEF3FFD47A02500806649927100005E44
	242E54CAB33FC708000044A0812AB0411BF4C1182CC0061CC105DCC10BFC6036
	844224C4C24210420A64801C726029AC82422886CDB01D2A602FD4401D34C051
	688693700E2EC255B80E3D700FFA61089EC128BC81090441C808136121DA8801
	628A58238E08179985F821C14804128B2420C9881451224B91354831528A5420
	55481DF23D720239875C46BA913BC8003282FC86BC47319481B2513DD40CB543
	B9A8371A8446A20BD06474319A8F16A09BD072B41A3D8C36A1E7D0AB680FDA8F
	3E43C730C0E8180733C46C302EC6C342B1382C099363CBB122AC0CABC61AB056
	AC03BB89F563CFB17704128145C0093604774220611E4148584C584ED848A820
	1C243411DA093709038451C2272293A84BB426BA11F9C4186232318758482C23
	D6128F132F107B8843C437241289433227B9900249B1A454D212D246D26E5223
	E92CA99B34481A2393C9DA646BB20739942C202BC885E49DE4C3E433E41BE421
	F25B0A9D624071A4F853E22852CA6A4A19E510E534E5066598324155A39A52DD
	A8A15411358F5A42ADA1B652AF5187A81334759A39CD8316494BA5ADA295D31A
	681768F769AFE874BA11DD951E4E97D057D2CBE947E897E803F4770C0D861583
	C7886728199B18071867197718AF984CA619D38B19C754303731EB98E7990F99
	6F55582AB62A7C1591CA0A954A9526951B2A2F54A9AAA6AADEAA0B55F355CB54
	8FA95E537DAE46553353E3A909D496AB55AA9D50EB531B5367A93BA887AA67A8
	6F543FA47E59FD890659C34CC34F43A451A0B15FE3BCC6200B6319B3782C216B
	0DAB86758135C426B1CDD97C762ABB98FD1DBB8B3DAAA9A13943334A3357B352
	F394663F07E39871F89C744E09E728A797F37E8ADE14EF29E2291BA6344CB931
	655C6BAA96979658AB48AB51AB47EBBD36AEEDA79DA6BD45BB59FB810E41C74A
	275C2747678FCE059DE753D953DDA70AA7164D3D3AF5AE2EAA6BA51BA1BB4477
	BF6EA7EE989EBE5E809E4C6FA7DE79BDE7FA1C7D2FFD54FD6DFAA7F5470C5806
	B30C2406DB0CCE183CC535716F3C1D2FC7DBF151435DC34043A561956197E184
	91B9D13CA3D5468D460F8C69C65CE324E36DC66DC6A326062621264B4DEA4DEE
	9A524DB9A629A63B4C3B4CC7CDCCCDA2CDD699359B3D31D732E79BE79BD79BDF
	B7605A785A2CB6A8B6B86549B2E45AA659EEB6BC6E855A3959A558555A5DB346
	AD9DAD25D6BBADBBA711A7B94E934EAB9ED667C3B0F1B6C9B6A9B719B0E5D806
	DBAEB66DB67D6167621767B7C5AEC3EE93BD937DBA7D8DFD3D070D87D90EAB1D
	5A1D7E73B472143A563ADE9ACE9CEE3F7DC5F496E92F6758CF10CFD833E3B613
	CB29C4699D539BD347671767B97383F3888B894B82CB2E973E2E9B1BC6DDC8BD
	E44A74F5715DE17AD2F59D9BB39BC2EDA8DBAFEE36EE69EE87DC9FCC349F299E
	593373D0C3C843E051E5D13F0B9F95306BDFAC7E4F434F8167B5E7232F632F91
	57ADD7B0B7A577AAF761EF173EF63E729FE33EE33C37DE32DE595FCC37C0B7C8
	B7CB4FC36F9E5F85DF437F23FF64FF7AFFD100A78025016703898141815B02FB
	F87A7C21BF8E3F3ADB65F6B2D9ED418CA0B94115418F82AD82E5C1AD2168C8EC
	90AD21F7E798CE91CE690E85507EE8D6D00761E6618BC37E0C2785878557863F
	8E7088581AD131973577D1DC4373DF44FA449644DE9B67314F39AF2D4A352A3E
	AA2E6A3CDA37BA34BA3FC62E6659CCD5589D58496C4B1C392E2AAE366E6CBEDF
	FCEDF387E29DE20BE37B17982FC85D7079A1CEC2F485A716A92E122C3A96404C
	884E3894F041102AA8168C25F21377258E0A79C21DC267222FD136D188D8435C
	2A1E4EF2482A4D7A92EC91BC357924C533A52CE5B98427A990BC4C0D4CDD9B3A
	9E169A76206D323D3ABD31839291907142AA214D93B667EA67E66676CBAC6585
	B2FEC56E8BB72F1E9507C96BB390AC05592D0AB642A6E8545A28D72A07B26765
	5766BFCD89CA3996AB9E2BCDEDCCB3CADB90379CEF9FFFED12C212E192B6A586
	4B572D1D58E6BDAC6A39B23C7179DB0AE315052B865606AC3CB88AB62A6DD54F
	ABED5797AE7EBD267A4D6B815EC1CA82C1B5016BEB0B550AE5857DEBDCD7ED5D
	4F582F59DFB561FA869D1B3E15898AAE14DB1797157FD828DC78E51B876FCABF
	99DC94B4A9ABC4B964CF66D266E9E6DE2D9E5B0E96AA97E6970E6E0DD9DAB40D
	DF56B4EDF5F645DB2F97CD28DBBB83B643B9A3BF3CB8BC65A7C9CECD3B3F54A4
	54F454FA5436EED2DDB561D7F86ED1EE1B7BBCF634ECD5DB5BBCF7FD3EC9BEDB
	5501554DD566D565FB49FBB3F73FAE89AAE9F896FB6D5DAD4E6D71EDC703D203
	FD07230EB6D7B9D4D51DD23D54528FD62BEB470EC71FBEFE9DEF772D0D360D55
	8D9CC6E223704479E4E9F709DFF71E0D3ADA768C7BACE107D31F761D671D2F6A
	429AF29A469B539AFB5B625BBA4FCC3ED1D6EADE7AFC47DB1F0F9C343C59794A
	F354C969DAE982D39367F2CF8C9D959D7D7E2EF9DC60DBA2B67BE763CEDF6A0F
	6FEFBA1074E1D245FF8BE73BBC3BCE5CF2B874F2B2DBE51357B8579AAF3A5F6D
	EA74EA3CFE93D34FC7BB9CBB9AAEB95C6BB9EE7ABDB57B66F7E91B9E37CEDDF4
	BD79F116FFD6D59E393DDDBDF37A6FF7C5F7F5DF16DD7E7227FDCECBBBD97727
	EEADBC4FBC5FF440ED41D943DD87D53F5BFEDCD8EFDC7F6AC077A0F3D1DC47F7
	068583CFFE91F58F0F43058F998FCB860D86EB9E383E3939E23F72FDE9FCA743
	CF64CF269E17FEA2FECBAE17162F7EF8D5EBD7CED198D1A197F29793BF6D7CA5
	FDEAC0EB19AFDBC6C2C61EBEC97833315EF456FBEDC177DC771DEFA3DF0F4FE4
	7C207F28FF68F9B1F553D0A7FB93199393FF040398F3FC63332DDB0000002063
	48524D00007A25000080830000F9FF000080E9000075300000EA6000003A9800
	00176F925FC546000000E84944415478DAECDC410AC4200C0550EF7F1D0F98D9
	74219D32A4506A465F217423F8908FABC416112D53ADB52855DBC07BEF536BBF
	131795B7A322E3329E80CFF8CE11050707070707070707070707070707070707
	0707070707070707070707070707070707070707070707070707070707070707
	DF197EC07EFE67D6257C5C104527AFBEE0578BA2D0905E3A2A516CBAF03178A9
	8C2F0F2F7D1D8283838383838383838383838383838383838383838383838383
	8383AF042FF96EEDF2F0726F332F0F97F137E1E3151591EFA07BA2CEFBFF2FFC
	4E3359B913CFB6EF958E4AB66172067CACCF002A555EFC5579C8660000000049
	454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="8" length_in_bytes="207" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000060000
	00240806000000AAA84B75000000017352474200AECE1CE90000000467414D41
	0000B18F0BFC6105000000097048597300000EC300000EC301C76FA864000000
	1874455874536F667477617265007061696E742E6E657420342E302E35658532
	650000003649444154384F63606161F90F0418340388D8BC79F37F740C568155
	823A3A408AB1EAC0E9AA511D2882203CAA6390EA0049A2D22CFF01FA164A6FD9
	3DF4830000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="9" length_in_bytes="196" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000060000
	0024080200000025CADC22000000017352474200AECE1CE90000000467414D41
	0000B18F0BFC6105000000097048597300000EC300000EC301C76FA864000000
	1874455874536F667477617265007061696E742E6E657420342E302E35658532
	650000002B4944415428536360C100202106340011DA8C040809817401019A10
	883B2A342A845D080EA0422880850500510C9235245ACE3C0000000049454E44
	AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="10" length_in_bytes="346" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000440000
	0024080600000030E79CE8000000017352474200AECE1CE90000000467414D41
	0000B18F0BFC6105000000097048597300000EC300000EC301C76FA864000000
	1874455874536F667477617265007061696E742E6E657420342E302E35658532
	65000000C1494441546843ED94C109C35014C372F8FB2F9301D3BA94168437B0
	02E281E34B84C975CE79DE8FF77BAFFBBE1FF9A310A010A01070B51FCBCAA58C
	E41F218BE4E32924792DAF40212E044292D7F20A14E2422024792DAF40212E04
	4292D7F20A14E2422024792DAF40212E044292D7F20A14E2422024792DAF4021
	2E044292D7F20A14E2422024792DAF40212E044292D7F20A14E2422024792DAF
	40212E044292D7F20A14E2422024792DAF40212E044292D7F20A14E2422024F9
	EFA537F73C2FC579C34CD4BB794A0000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="11" length_in_bytes="273" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000440000
	0024080600000030E79CE80000000467414D410000B18F0BFC61050000000970
	48597300000EC200000EC20115284A800000001874455874536F667477617265
	007061696E742E6E657420342E302E356585326500000085494441546843EDD4
	C109C0201005510FDB7F3316B87115890C76E00C7C031E1FC11611E9D646ADAA
	D38DF5DEB3D5E1FE09828D3FE5FEFBBCB203627D6F8FCB2B23C8BCABA7F5C504
	4182204190204810240812040982044182204190204810240812040982044182
	2041902048102408120409820441822041902068839C9B7775B8BDC80F4E7132
	9F672D02270000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="12" length_in_bytes="327" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000440000
	0024080600000030E79CE8000000017352474200AECE1CE90000000467414D41
	0000B18F0BFC6105000000097048597300000EC300000EC301C76FA864000000
	1874455874536F667477617265007061696E742E6E657420342E302E35658532
	65000000AE494441546843EDD4410A84301044D15EE4FE97C901A3862A90522F
	60FF814706C78DC51F6B8CB1CE4FCBB3AA569E35E75C5DED01D2DB8D9D314868
	FF97B97FDFBE5E387F3F3DC07D907DFDBAA1238FF25A48471E804284428207A0
	10A190E0012844282478000A110A091E804284428207A010A190E00128442824
	78000A110A091E804284428207A010A190E0012844282478000A110A091E8042
	84428207A01071210FFEB1DB793DFCF31CEB008D08E8AFEC7FE2BE0000000049
	454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="13" length_in_bytes="354" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000440000
	0024080600000030E79CE8000000017352474200AECE1CE90000000467414D41
	0000B18F0BFC6105000000097048597300000EC300000EC301C76FA864000000
	1874455874536F667477617265007061696E742E6E657420342E302E35658532
	65000000C9494441546843ED94C109854014033D6CFFCD6C81AB511119620326
	1FE63F88B93804B731C63A7EBDF7DDE69CAB5C484A85BCE842401702CE85E8EF
	EB03F3F74B21CA4F2189E8E52944B92DA740215D088428B7E51428A40B8110E5
	B69C0285742110A2DC9653A0902E044294DB720A14D2854088725B4E8142BA10
	08516ECB295048170221CA6D39050AE9422044B92DA740215D088428B7E51428
	A40B8110E5B69C0285742110A2DC9653A0902E044294DB720A14D2854088725B
	4E8142BA100851FE3CECD51D6B0729F2BEFCBD87994D0000000049454E44AE42
	6082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="14" length_in_bytes="276" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000440000
	00240802000000BF850BBF000000017352474200AECE1CE90000000467414D41
	0000B18F0BFC6105000000097048597300000EC300000EC301C76FA864000000
	1874455874536F667477617265007061696E742E6E657420342E302E35658532
	650000007B494441545847EDD9B10D80300C055117DE7F190604A1EF864C7046
	F78A4874FF148926D5DD55738AE2BD8FEB172668BE969B98EDCE98D5FF804FCC
	BD56F61BC393FDC6F064BF313CD96F0C4FF61BC393FDC6F064BF313CD96F0C4F
	F61BC393FDC6F064BF313CD96F0C4FF61BC393FDC6F04CC061FB4BE0ECEF7E00
	12E59165785B1D2C0000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="15" length_in_bytes="3224" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D494844520000008D0000
	009008060000003516E8E0000000097048597300000EC300000EC301C76FA864
	00000A4F6943435050686F746F73686F70204943432070726F66696C65000078
	DA9D53675453E9163DF7DEF4424B8880944B6F5215082052428B801491262A21
	09104A8821A1D91551C1114545041BC8A088038E8E808C15512C0C8A0AD807E4
	21A28E83A3888ACAFBE17BA36BD6BCF7E6CDFEB5D73EE7ACF39DB3CF07C0080C
	9648335135800CA9421E11E083C7C4C6E1E42E40810A2470001008B3642173FD
	230100F87E3C3C2B22C007BE000178D30B0800C04D9BC0301C87FF0FEA42995C
	01808401C07491384B08801400407A8E42A600404601809D98265300A0040060
	CB6362E300502D0060277FE6D300809DF8997B01005B94211501A09100201365
	884400683B00ACCF568A450058300014664BC43900D82D00304957664800B0B7
	00C0CE100BB200080C00305188852900047B0060C8232378008499001446F257
	3CF12BAE10E72A00007899B23CB9243945815B082D710757572E1E28CE49172B
	14366102619A402EC27999193281340FE0F3CC0000A0911511E083F3FD78CE0E
	AECECE368EB60E5F2DEABF06FF226262E3FEE5CFAB70400000E1747ED1FE2C2F
	B31A803B06806DFEA225EE04685E0BA075F78B66B20F40B500A0E9DA57F370F8
	7E3C3C45A190B9D9D9E5E4E4D84AC4425B61CA577DFE67C25FC057FD6CF97E3C
	FCF7F5E0BEE22481325D814704F8E0C2CCF44CA51CCF92098462DCE68F47FCB7
	0BFFFC1DD322C44962B9582A14E35112718E449A8CF332A52289429229C525D2
	FF64E2DF2CFB033EDF3500B06A3E017B912DA85D6303F64B27105874C0E2F700
	00F2BB6FC1D4280803806883E1CF77FFEF3FFD47A02500806649927100005E44
	242E54CAB33FC708000044A0812AB0411BF4C1182CC0061CC105DCC10BFC6036
	844224C4C24210420A64801C726029AC82422886CDB01D2A602FD4401D34C051
	688693700E2EC255B80E3D700FFA61089EC128BC81090441C808136121DA8801
	628A58238E08179985F821C14804128B2420C9881451224B91354831528A5420
	55481DF23D720239875C46BA913BC8003282FC86BC47319481B2513DD40CB543
	B9A8371A8446A20BD06474319A8F16A09BD072B41A3D8C36A1E7D0AB680FDA8F
	3E43C730C0E8180733C46C302EC6C342B1382C099363CBB122AC0CABC61AB056
	AC03BB89F563CFB17704128145C0093604774220611E4148584C584ED848A820
	1C243411DA093709038451C2272293A84BB426BA11F9C4186232318758482C23
	D6128F132F107B8843C437241289433227B9900249B1A454D212D246D26E5223
	E92CA99B34481A2393C9DA646BB20739942C202BC885E49DE4C3E433E41BE421
	F25B0A9D624071A4F853E22852CA6A4A19E510E534E5066598324155A39A52DD
	A8A15411358F5A42ADA1B652AF5187A81334759A39CD8316494BA5ADA295D31A
	681768F769AFE874BA11DD951E4E97D057D2CBE947E897E803F4770C0D861583
	C7886728199B18071867197718AF984CA619D38B19C754303731EB98E7990F99
	6F55582AB62A7C1591CA0A954A9526951B2A2F54A9AAA6AADEAA0B55F355CB54
	8FA95E537DAE46553353E3A909D496AB55AA9D50EB531B5367A93BA887AA67A8
	6F543FA47E59FD890659C34CC34F43A451A0B15FE3BCC6200B6319B3782C216B
	0DAB86758135C426B1CDD97C762ABB98FD1DBB8B3DAAA9A13943334A3357B352
	F394663F07E39871F89C744E09E728A797F37E8ADE14EF29E2291BA6344CB931
	655C6BAA96979658AB48AB51AB47EBBD36AEEDA79DA6BD45BB59FB810E41C74A
	275C2747678FCE059DE753D953DDA70AA7164D3D3AF5AE2EAA6BA51BA1BB4477
	BF6EA7EE989EBE5E809E4C6FA7DE79BDE7FA1C7D2FFD54FD6DFAA7F5470C5806
	B30C2406DB0CCE183CC535716F3C1D2FC7DBF151435DC34043A561956197E184
	91B9D13CA3D5468D460F8C69C65CE324E36DC66DC6A326062621264B4DEA4DEE
	9A524DB9A629A63B4C3B4CC7CDCCCDA2CDD699359B3D31D732E79BE79BD79BDF
	B7605A785A2CB6A8B6B86549B2E45AA659EEB6BC6E855A3959A558555A5DB346
	AD9DAD25D6BBADBBA711A7B94E934EAB9ED667C3B0F1B6C9B6A9B719B0E5D806
	DBAEB66DB67D6167621767B7C5AEC3EE93BD937DBA7D8DFD3D070D87D90EAB1D
	5A1D7E73B472143A563ADE9ACE9CEE3F7DC5F496E92F6758CF10CFD833E3B613
	CB29C4699D539BD347671767B97383F3888B894B82CB2E973E2E9B1BC6DDC8BD
	E44A74F5715DE17AD2F59D9BB39BC2EDA8DBAFEE36EE69EE87DC9FCC349F299E
	593373D0C3C843E051E5D13F0B9F95306BDFAC7E4F434F8167B5E7232F632F91
	57ADD7B0B7A577AAF761EF173EF63E729FE33EE33C37DE32DE595FCC37C0B7C8
	B7CB4FC36F9E5F85DF437F23FF64FF7AFFD100A78025016703898141815B02FB
	F87A7C21BF8E3F3ADB65F6B2D9ED418CA0B94115418F82AD82E5C1AD2168C8EC
	90AD21F7E798CE91CE690E85507EE8D6D00761E6618BC37E0C2785878557863F
	8E7088581AD131973577D1DC4373DF44FA449644DE9B67314F39AF2D4A352A3E
	AA2E6A3CDA37BA34BA3FC62E6659CCD5589D58496C4B1C392E2AAE366E6CBEDF
	FCEDF387E29DE20BE37B17982FC85D7079A1CEC2F485A716A92E122C3A96404C
	884E3894F041102AA8168C25F21377258E0A79C21DC267222FD136D188D8435C
	2A1E4EF2482A4D7A92EC91BC357924C533A52CE5B98427A990BC4C0D4CDD9B3A
	9E169A76206D323D3ABD31839291907142AA214D93B667EA67E66676CBAC6585
	B2FEC56E8BB72F1E9507C96BB390AC05592D0AB642A6E8545A28D72A07B26765
	5766BFCD89CA3996AB9E2BCDEDCCB3CADB90379CEF9FFFED12C212E192B6A586
	4B572D1D58E6BDAC6A39B23C7179DB0AE315052B865606AC3CB88AB62A6DD54F
	ABED5797AE7EBD267A4D6B815EC1CA82C1B5016BEB0B550AE5857DEBDCD7ED5D
	4F582F59DFB561FA869D1B3E15898AAE14DB1797157FD828DC78E51B876FCABF
	99DC94B4A9ABC4B964CF66D266E9E6DE2D9E5B0E96AA97E6970E6E0DD9DAB40D
	DF56B4EDF5F645DB2F97CD28DBBB83B643B9A3BF3CB8BC65A7C9CECD3B3F54A4
	54F454FA5436EED2DDB561D7F86ED1EE1B7BBCF634ECD5DB5BBCF7FD3EC9BEDB
	5501554DD566D565FB49FBB3F73FAE89AAE9F896FB6D5DAD4E6D71EDC703D203
	FD07230EB6D7B9D4D51DD23D54528FD62BEB470EC71FBEFE9DEF772D0D360D55
	8D9CC6E223704479E4E9F709DFF71E0D3ADA768C7BACE107D31F761D671D2F6A
	429AF29A469B539AFB5B625BBA4FCC3ED1D6EADE7AFC47DB1F0F9C343C59794A
	F354C969DAE982D39367F2CF8C9D959D7D7E2EF9DC60DBA2B67BE763CEDF6A0F
	6FEFBA1074E1D245FF8BE73BBC3BCE5CF2B874F2B2DBE51357B8579AAF3A5F6D
	EA74EA3CFE93D34FC7BB9CBB9AAEB95C6BB9EE7ABDB57B66F7E91B9E37CEDDF4
	BD79F116FFD6D59E393DDDBDF37A6FF7C5F7F5DF16DD7E7227FDCECBBBD97727
	EEADBC4FBC5FF440ED41D943DD87D53F5BFEDCD8EFDC7F6AC077A0F3D1DC47F7
	068583CFFE91F58F0F43058F998FCB860D86EB9E383E3939E23F72FDE9FCA743
	CF64CF269E17FEA2FECBAE17162F7EF8D5EBD7CED198D1A197F29793BF6D7CA5
	FDEAC0EB19AFDBC6C2C61EBEC97833315EF456FBEDC177DC771DEFA3DF0F4FE4
	7C207F28FF68F9B1F553D0A7FB93199393FF040398F3FC63332DDB0000002063
	48524D00007A25000080830000F9FF000080E9000075300000EA6000003A9800
	00176F925FC546000001B94944415478DAECDC316E83401086D119C4FDEFC129
	FF3459844882D9A48A79AF014B76B3FE34BB764127A9AAAAEE4E922E1EE537DF
	FB323E68F99E1DCED4FBAB4A305455D5DD89D349F6D26C4FCF9D3233DFFDE22C
	43929ED9A27A1C84616AD258064C1A4C1A4C1AFE7B60E57F1A4EBFA2AEAE7B34
	A60DDDFDE37F35C7AD2B492F968B99B34E7767B52CBCDAB2462CE3DEA461FE27
	B72540348806D1201A4403A241348806D1201A100DA241348806D18068100DA2
	41348806D18068100DA241348806448368100DA24134201A448368100D6FCAD3
	3DB9747C24ECB83769B8747E2075925E3F0BB23AECD3E4D563EED76DDBAC145F
	26CBF13AB6A5118EED89DB679AF1DA41985B93C763EEF913D1201A448368100D
	A201D1201A448368100D8806D1201A44836840348806D1201A44836840348806
	D1201A4403A241348806D1201A100DA241348806D18068100DA241348806D180
	68100DA241348806448368100DA24134201A448368100DA201D1201A44836810
	0DA201D1201A448368100D8806D1201A44836840348806D1201A4403A2413488
	06D1F016564BC095EECEF9DEA4E152923EBF160DDF4E96E3758433AE1F000000
	FFFF030060109C192495F1010000000049454E44AE426082
	]]>
</GDLPict>

<Copyright SectVersion="1" SectionFlags="0" SubIdent="0">
	<Author>GRAPHISOFT</Author>
	<License>
		<Type>CC BY-ND</Type>
		<Version>3.0</Version>
	</License>
</Copyright>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_FWM SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
actualGUID = FROM_GUID
! ==============================================================================
! Subroutines
! ==============================================================================

	_autoID		= "80622B61-A050-4660-B343-54EA6636258A"
	_startID	= "7F7C135C-A01F-46F9-A957-05CF11154442"
	_endID		= "1F7EDE9D-7E9D-4695-B349-186DC3CE53FA"
gosub "AccessoryBooleans_FWM"

	_startID	= "1F7EDE9D-7E9D-4695-B349-186DC3CE53FA"
	_endID		= "9166588D-58DB-4F25-ABB2-202BC5CFE85B"
gosub "Newparameters_FWM"

	_startID	= "9166588D-58DB-4F25-ABB2-202BC5CFE85B"
	_endID		= "A2CDE4AA-F966-43B2-825F-D7A23455EF99"
gosub "2DSymbolStyles_FWM"

! ==============================================================================
! Set migration GUID
! ==============================================================================

setmigrationguid actualGUID

! ==============================================================================
end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! en
! ==============================================================================


! ==============================================================================
! AccessoryBooleans
! ==============================================================================
"AccessoryBooleans_FWM":
	if actualGuid = _startID | actualGuid = _autoID then
	
		! If gs_cornice_type_m was 0, that equals with bCornice being off, otherwise it is on.
		bHas = STORED_PAR_VALUE("gs_cornice_type_m", _gs_cornice_type_m)
		if _gs_cornice_type_m = 0 then
			bCornice = 0
		else
			bCornice = 1
		endif
		parameters bCornice = bCornice

		! If gs_leg_type_m was 0, that equals with bBase being off, otherwise it is on.
		bHas = STORED_PAR_VALUE("gs_leg_type_m", _gs_leg_type_m)
		if _gs_leg_type_m = 0 then
			bBase = 0
			gs_leg_type_m = 4
			parameters	bBase			= bBase,
						gs_leg_type_m	= gs_leg_type_m
		else
			bBase = 1
			parameters bBase = bBase
		endif
	
		! If gs_knob_type_m was 0, that equals with bKnob being off, otherwise it is on.
		bHas = STORED_PAR_VALUE("gs_knob_type_m", _gs_knob_type_m)

		if _gs_knob_type_m = 0 then
			bKnob = 0
		else
			bKnob = 1
		endif
		parameters bKnob = bKnob

		actualGuid = _endID
	endif
return

! ==============================================================================
! Newparameters_EnablebBevel_matDoorInset1_matDoorInset2
! ==============================================================================

"Newparameters_FWM":
	if actualGuid = _startID then
	
		! bBevel was a hidden parameter, so it is turned off.
		bBevel = 0
		parameters bBevel = bBevel

		bHas = DELETED_PAR_VALUE("matDoorGlass", _matDoorGlass)
		bHas = DELETED_PAR_VALUE("matDoorMirror", _matDoorMirror)
		bHas = DELETED_PAR_VALUE("matDoorDecor1", _matDoorDecor1)
		bHas = DELETED_PAR_VALUE("matDoorDecor2", _matDoorDecor2)

		if iDoorType = 1 or iDoorType = 2 then	! Double Sliding Door, Triple Sliding Door
			if iDoorStyle = 1 then matDoorInset1 = _matDoorDecor1
			if iDoorStyle = 3 then matDoorInset1 = _matDoorGlass
			if iDoorStyle = 4 then matDoorInset1 = _matDoorDecor1
			if iDoorStyle = 5 then matDoorInset1 = _matDoorGlass
			if iDoorStyle = 9 then matDoorInset1 = _matDoorDecor1
			if iDoorStyle = 10 then matDoorInset1 = _matDoorGlass
			if iDoorStyle = 13 then matDoorInset1 = _matDoorDecor1
			if iDoorStyle = 14 then matDoorInset1 = _matDoorMirror
			if iDoorStyle = 15 then matDoorInset1 = _matDoorMirror
			if iDoorStyle = 16 then matDoorInset1 = _matDoorDecor1
			if iDoorStyle = 17 then matDoorInset1 = _matDoorDecor1
			if iDoorStyle = 18 then matDoorInset1 = _matDoorDecor1
			if iDoorStyle = 14 or iDoorStyle = 15 then
				matDoorInset2 = _matDoorDecor1
			else
				matDoorInset2 = _matDoorDecor2
			endif
		else	! None (Drawer)
			matDrawerInset = _matDoorGlass
		endif

		
		parameters matDoorInset1 = matDoorInset1
		parameters matDoorInset2 = matDoorInset2
		parameters matDrawerInset = matDrawerInset

		actualGuid = _endID
	endif
return

! ==============================================================================
! New Symbol 2D Styles
! ==============================================================================
"2DSymbolStyles_FWM":
	if actualGuid = _startID then
	
		bHas = DELETED_PAR_VALUE("iSymbolType", _iSymbolType)
		bHas = STORED_PAR_VALUE("iDoorType", _iDoorType)
		
		if _iDoorType = 0 then								! No Door
			if 	_iSymbolType = 1 |\
				_iSymbolType = 4 then						! Style 1
				
				iSymbolStyle = 1
			endif
			
			if _iSymbolType = 2 then iSymbolStyle = 2		! Style 2
			if _iSymbolType = 3 then iSymbolStyle = 3		! Style 3
		else												! Double Door Sliding, Triple Door Sliding
			if _iSymbolType = 1 then iSymbolStyle = 1		! Style 1
			if _iSymbolType = 2 then iSymbolStyle = 2		! Style 2
			if _iSymbolType = 3 then iSymbolStyle = 4		! Style 4
			if _iSymbolType = 4 then iSymbolStyle = 7		! Style 7
		endif
		
		parameters 	iSymbolStyle = iSymbolStyle

		actualGuid = _endID
	endif
return
]]>
</Script_FWM>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_BWM SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
targetGUID = TO_GUID

! ==============================================================================
! Subroutines
! ==============================================================================

gosub "2DSymbolStyles_BWM"
gosub "Newparameters_BWM"
gosub "AccessoryBooleans_BWM"

! ==============================================================================
! Set migration GUID
! ==============================================================================

setmigrationguid targetGuid

! ==============================================================================
end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! en
! ==============================================================================


! ==============================================================================
! New Symbol 2D Styles
! ==============================================================================
"2DSymbolStyles_BWM":
	if targetGUID # "" then
		_bMigrationSuccess = 1
		
		newparameter "iSymbolType", "Integer"
		
		if iSymbolStyle = 1	then	_iSymbolType = 1		! Style 1

		if 	iSymbolStyle = 2 |\								! Style 2, Style 3
			iSymbolStyle = 3 then
			
			_iSymbolType = 2
		endif
		
		if iSymbolStyle = 4	then	_iSymbolType = 3		! Style 4
		
		if iSymbolStyle = 5 then	_bMigrationSuccess = 0	! Cut migration in case of 'Style 5'
				
		if 	iSymbolStyle = 6 |\								! Style 6, Style 7
			iSymbolStyle = 7 then
			
			_iSymbolType = 4
		endif
				
		if _bMigrationSuccess = 1 then
			parameters 	iSymbolType = _iSymbolType
		else
			targetGUID = ""
		endif
	endif
return

! ==============================================================================
! AccessoryBooleans
! ==============================================================================
"AccessoryBooleans_BWM":
	if targetGUID # "" then
	
		! If gs_cornice_type_m was 0, that equals with bCornice being off, otherwise it is on.
		if not(bCornice) then
			gs_cornice_type_m = 0
			parameters	gs_cornice_type_m = gs_cornice_type_m
		endif
	
		newparameter "gs_cornice_type", "String"
		if gs_cornice_type_m = 0	then _gs_cornice_type = `Нет`
		if gs_cornice_type_m = 1	then _gs_cornice_type = `Стиль 1`
		if gs_cornice_type_m = 2	then _gs_cornice_type = `Стиль 2`
		if gs_cornice_type_m = 3	then _gs_cornice_type = `Стиль 3`
		if gs_cornice_type_m = 4	then _gs_cornice_type = `Стиль 4`
		parameters gs_cornice_type = _gs_cornice_type
	
		! If gs_leg_type_m was 0, that equals with bBase being off, otherwise it is on.
		if not(bBase) then
			gs_leg_type_m = 0
			parameters	gs_leg_type_m = gs_leg_type_m
		endif

		newparameter "gs_leg_type", "String"
		if gs_leg_type_m = 0	then _gs_leg_type = `Нет`
		if gs_leg_type_m = 1	then _gs_leg_type = `Стиль 1`
		if gs_leg_type_m = 2	then _gs_leg_type = `Стиль 2`
		if gs_leg_type_m = 3	then _gs_leg_type = `Стиль 3`
		if gs_leg_type_m = 4	then _gs_leg_type = `Стиль 4`
		if gs_leg_type_m = 5	then _gs_leg_type = `Стиль 5`
		if gs_leg_type_m = 6	then _gs_leg_type = `Стиль 6`
		parameters gs_leg_type = _gs_leg_type

		! If gs_knob_type_m was 0, that equals with bKnob being off, otherwise it is on.
		if not(bKnob) then
			gs_knob_type_m = 0
			parameters	gs_knob_type_m = gs_knob_type_m
		endif

		newparameter "gs_knob_type", "String"
		if gs_knob_type_m = 0	then _gs_knob_type = `Нет`
		if gs_knob_type_m = 1	then _gs_knob_type = `Стиль 1`
		if gs_knob_type_m = 2	then _gs_knob_type = `Стиль 2`
		if gs_knob_type_m = 3	then _gs_knob_type = `Стиль 3`
		if gs_knob_type_m = 4	then _gs_knob_type = `Стиль 4`
		if gs_knob_type_m = 5	then _gs_knob_type = `Стиль 5`
		if gs_knob_type_m = 6	then _gs_knob_type = `Стиль 6`
		if gs_knob_type_m = 7	then _gs_knob_type = `Стиль 7`
		if gs_knob_type_m = 8	then _gs_knob_type = `Стиль 8`
		parameters gs_knob_type = _gs_knob_type

	endif
return

! ==============================================================================
! Newparameters_EnablebBevel_matDoorInset1_matDoorInset2_matDoorDecor2
! ==============================================================================

"Newparameters_BWM":
	if targetGUID # "" then
		
		! bBevel was a hidden parameter, so it is turned off.
		bBevel = 0
		parameters bBevel = bBevel
		
		if iDoorType = 1 or iDoorType = 2 then	! Double Sliding Door, Triple Sliding Door
			newparameter "matDoorMirror", "Material"
			if iDoorStyle = 14 or iDoorStyle = 15 then
				matDoorMirror = matDoorInset1
				parameters matDoorMirror = matDoorMirror
			endif

			newparameter "matDoorGlass", "Material"
			if iDoorStyle = 3 or iDoorStyle = 5 or iDoorStyle = 10 then
				matDoorGlass = matDoorInset1
				parameters matDoorGlass = matDoorGlass
			endif

			newparameter "matDoorDecor1", "Material"
			if iDoorStyle = 14 or iDoorStyle = 15 then
				matDoorDecor1 = matDoorInset2
				parameters matDoorDecor1 = matDoorDecor1
			else
				if iDoorStyle = 1 or iDoorStyle = 4 or iDoorStyle = 9 or iDoorStyle = 13 or iDoorStyle > 15 then
					matDoorDecor1 = matDoorInset1
					parameters matDoorDecor1 = matDoorDecor1
				endif
			endif

			newparameter "matDoorDecor2", "Material"
			matDoorDecor2 = matDoorInset2
			parameters matDoorDecor2 = matDoorDecor2
		endif
	endif
return
]]>
</Script_BWM>

<MigrationTable SectVersion="1" SectionFlags="0" SubIdent="0">
	<MigrationTableElement>
		<MainGUID>80622B61-A050-4660-B343-54EA6636258A</MainGUID>
		<Version>18</Version>
		<Name><![CDATA[""]]></Name>
		<AutoMigration>false</AutoMigration>
	</MigrationTableElement>
	<MigrationTableElement>
		<MainGUID>7F7C135C-A01F-46F9-A957-05CF11154442</MainGUID>
		<Version>19</Version>
		<Name><![CDATA[""]]></Name>
		<AutoMigration>false</AutoMigration>
	</MigrationTableElement>
	<MigrationTableElement>
		<MainGUID>1F7EDE9D-7E9D-4695-B349-186DC3CE53FA</MainGUID>
		<Version>0</Version>
		<Name><![CDATA[""]]></Name>
		<AutoMigration>false</AutoMigration>
	</MigrationTableElement>
	<MigrationTableElement>
		<MainGUID>9166588D-58DB-4F25-ABB2-202BC5CFE85B</MainGUID>
		<Version>0</Version>
		<Name><![CDATA[""]]></Name>
		<AutoMigration>false</AutoMigration>
	</MigrationTableElement>
</MigrationTable>

</Symbol>
