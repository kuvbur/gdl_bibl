<?xml version="1.0" encoding="UTF-8"?>
<Symbol IsArchivable="true" IsPlaceable="true" MainGUID="E922838D-B971-4E7C-86C2-DB8AFBFD2B30" MigrationValue="Normal" Owner="1196638531" Signature="1196644685" Version="43">
<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_3D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
!!! Molding Curved 02


if gs_detlevel_3D_m = 1 | GLOB_FEEDBACK_MODE then gs_resol = 4	!!Simple
if gs_detlevel_3D_m = 0 then END

resol gs_resol
pen gs_cont_pen

if gs_shadow=0 then SHADOW OFF
if gs_shadow=1 then SHADOW ON

gamma = 180-ASN((rr*SIN(90+beta))/(rr+profileWidth))
etab = 180-gamma-(90-beta)

gamma = 180-ASN((rr*SIN(90-alpha))/(rr+profileWidth))
etaa = 180-gamma-(90-alpha)

bb = -((rr+profileWidth)*SIN(etaa))/COS(alpha)

unID = 1
!! Angle of Molding
	hotspot 0, rr, 0, unID, malpha, 6: unID=unID+1
	hotspot 0, 0, 0, unID, malpha, 4+256: unID=unID+1
	hotspot rr*SIN(malpha), rr-rr*COS(malpha), 0, unID, malpha, 5: unID=unID+1

!! Height of Molding
	hotspot rr*SIN(malpha), rr-rr*COS(malpha), 0, unID, profileHeight, 1+128: unID=unID+1
	hotspot rr*SIN(malpha), rr-rr*COS(malpha), 1, unID, profileHeight, 3: unID=unID+1
	hotspot rr*SIN(malpha), rr-rr*COS(malpha), -profileHeight, unID, profileHeight, 2: unID=unID+1

	hotspot 0, 0, 0, unID, profileHeight, 1+128: unID=unID+1
	hotspot 0, 0, 1, unID, profileHeight, 3: unID=unID+1
	hotspot 0, 0, -profileHeight, unID, profileHeight, 2: unID=unID+1

!! Connected Angles
	hotspot 0, 0, 0, unID, beta, 6+512: unID=unID+1
	hotspot ABS((rr+profileWidth)*SIN(-etab))*(NOT(abs(beta-90)<eps))+profileWidth*(abs(beta-90)<eps), 0, 0, unID, beta, 4+128: unID=unID+1
	hotspot (rr+profileWidth)*SIN(-etab), rr-(rr+profileWidth)*COS(-etab), 0, unID, beta, 5: unID=unID+1

	hotspot rr*SIN(malpha), rr-rr*COS(malpha), 0, unID, alpha, 6: unID=unID+1
	hotspot rr*SIN(malpha)-(ABS((rr+profileWidth)*SIN(-etaa)))*COS(malpha)*(NOT(abs(alpha-90)<eps))-profileWidth*COS(malpha)*(abs(alpha-90)<eps),\
	 rr-rr*COS(malpha)-(ABS((rr+profileWidth)*SIN(-etaa)))*SIN(malpha)*(NOT(abs(alpha-90)<eps))-profileWidth*SIN(malpha)*(abs(alpha-90)<eps), 0, unID, alpha, 4+128: unID=unID+1
	hotspot (rr+profileWidth)*SIN(malpha+etaa), rr-(rr+profileWidth)*COS(malpha+etaa), 0, unID, alpha, 5: unID=unID+1

addz -profileHeight
snum = INT((rr*(pi/180)*malpha)/0.05)
if not(INT(snum/2)=snum/2) then snum = snum + 1

snum = MAX(12, snum)


material gs_molding_mat


roty -90
CUTPLANE 90-beta: DEL 1

cnum = 1
if beta>90 then cnum=2

gosub mtypes_m

gosub cnum

tube pnum, ppnum, 1+2+16,
	get (NSP)

CUTEND


add rr*SIN(malpha/2), rr-rr*COS(malpha/2), 0
rotz malpha/2

add rr*SIN(malpha/2), rr-rr*COS(malpha/2), 0
rotz malpha/2
roty -90
	CUTPLANE 90+alpha: DEL 3

cnum = 1
if alpha>90 then cnum=3

gosub mtypes_m

gosub cnum

tube pnum, ppnum, 1+2+32,
	get (NSP)

CUTEND

! ================================================================================
END
! ================================================================================

1:
	ss=snum/2
	mmalpha=malpha/snum
	put rr*SIN(-mmalpha), rr-rr*COS(-mmalpha), 0, 0
	FOR i=1 TO ss+1
	 put rr*SIN(mmalpha*(i-1)), rr-rr*COS(mmalpha*(i-1)), 0, 0
	NEXT i
	put rr*SIN(mmalpha*(ss+1)), rr-rr*COS(mmalpha*(ss+1)), 0, 0
	ppnum=ss+3
return

2:
	ss=snum/2
	mmalpha=malpha/snum
	FOR i=1 TO ss+1
	 put rr*SIN(-malpha/2+mmalpha*(i-1)), rr-rr*COS(-malpha/2+mmalpha*(i-1)), 0, 0
	NEXT i
	FOR i=1 TO ss+1
	 put rr*SIN(mmalpha*(i-1)), rr-rr*COS(mmalpha*(i-1)), 0, 0
	NEXT i
	put rr*SIN(mmalpha*(ss+1)), rr-rr*COS(mmalpha*(ss+1)), 0, 0
	ppnum=2*ss+3
return

3:
	ss=snum/2
	mmalpha=malpha/snum
	put rr*SIN(-mmalpha), rr-rr*COS(-mmalpha), 0, 0
	FOR i=1 TO ss+1
	 put rr*SIN(mmalpha*(i-1)), rr-rr*COS(mmalpha*(i-1)), 0, 0
	NEXT i
	FOR i=1 TO ss+1
	 put rr*SIN(malpha/2+mmalpha*(i-1)), rr-rr*COS(malpha/2+mmalpha*(i-1)), 0, 0
	NEXT i
	ppnum=2*ss+3
return

101:
   pnum=9
   put 0, 0, 0
   put -profileWidth, 0, 0
   put -profileWidth, profileHeight*26/41, 1
   put -profileWidth*2/7, profileHeight, 1000
   put 0, profileHeight, 0
   put 0, profileHeight*32.5/41, 0
   put -profileWidth*1/7, profileHeight*31.5/41, 0
   put -profileWidth*1/7, profileHeight*10/41, 0
   put 0, profileHeight*9/41, 0
return

102:
	pnum=10
	put 0, 0, 0
	put -profileWidth, 0, 0
	put -profileWidth, profileHeight*33.01/41, 0
	put -profileWidth*6.99/7, profileHeight*33.0125/41, 1
	put -profileWidth*4/7, profileHeight*37/41, 1001
	put 0, profileHeight, 1000
	put 0, profileHeight*32.5/41, 0
	put -profileWidth*1/7, profileHeight*31.5/41, 0
	put -profileWidth*1/7, profileHeight*10/41, 0
	put 0, profileHeight*9/41, 0
return

103:
	pnum=13
	put 0, 0, 0
	put -profileWidth, 0, 0
	put -profileWidth, profileHeight*33/41, 0
	put -profileWidth*6/7, profileHeight*33/41, 0
	put -profileWidth*6/7, profileHeight*33.0005/41, 0
	put -profileWidth*6/7, profileHeight*33.001/41, 1
	put -profileWidth*4.25/7, profileHeight*37/41, 1001
	put -profileWidth*2.5/7, profileHeight, 1000
	put 0, profileHeight, 0
	put 0, profileHeight*32.5/41, 0
	put -profileWidth*1/7, profileHeight*31.5/41, 0
	put -profileWidth*1/7, profileHeight*10/41, 0
	put 0, profileHeight*9/41, 0
return

104:
	pnum=12
	put 0, 0, 0
	put -profileWidth, 0, 0
	put -profileWidth, profileHeight*34/41, 0
	put -profileWidth*5/7, profileHeight*34.5/41, 0
	put -profileWidth*5/7, profileHeight*35.5/41, 0
	put -profileWidth*5.02/7, profileHeight*35.51/41, 1
	put -profileWidth*4/7, profileHeight, 1001
	put 0, profileHeight, 0
	put 0, profileHeight*32.5/41, 0
	put -profileWidth*1/7, profileHeight*31.5/41, 0
	put -profileWidth*1/7, profileHeight*10/41, 0
	put 0, profileHeight*9/41, 0
return

105:
	pnum=15
	put 0, 0, 0
	put 0, profileHeight*13/67, 0
	put -profileWidth*1/8.5, profileHeight*14/67, 0
	put -profileWidth*1/8.5, profileHeight*56/67, 0
	put 0, profileHeight*57/67, 0
	put 0, profileHeight, 0
	put -profileWidth*3/8.5, profileHeight, 0
	put -profileWidth*4/8.5, profileHeight*65/67, 1
	put -profileWidth*3.9/8.5, profileHeight*63.75/67, 1001
	put -profileWidth*3.55/8.5, profileHeight*62.73/67, 1001
	put -profileWidth*5/8.5, profileHeight*59/67, 1001
	put -profileWidth*8/8.5, profileHeight*53/67, 1001
	put -profileWidth*5.5/8.5, profileHeight*49/67, 1000
	put -profileWidth, profileHeight*49/67, 0
	put -profileWidth, 0, 0
return

106:
	pnum=10
	put 0, 0, 0
	put -profileWidth, 0, 0
	put -profileWidth, profileHeight*48/70, 0
	put -profileWidth*6.5/9.5, profileHeight*48/70, 0
	put -profileWidth*6.5/9.5, profileHeight, 0
	put 0, profileHeight, 0
	put 0, profileHeight*57/70, 0
	put -profileWidth*1/9.5, profileHeight*56/70, 0
	put -profileWidth*1/9.5, profileHeight*14/70, 0
	put 0, profileHeight*13/70, 0
return


107:
	pnum=6
	put 0, 0, 0
	put 0, profileHeight, 0
	put -profileWidth*10.5/14.5, profileHeight, 1
	put -profileWidth, profileHeight*5.5/9.5, 1001
	put -profileWidth*11/14.5, profileHeight*1.5/9.5, 1000
	put -profileWidth*11/14.5, 0, 0
return

108:
	pnum=8
	put 0, 0, 0
	put -profileWidth*4.95/9, 0, 0
	put -profileWidth*4.95/9, profileHeight*0.5/17.5, 0
	put -profileWidth*5/9, profileHeight*0.5/17.5, 1
	put -profileWidth*5/9, profileHeight*4.5/17.5, 901
	put 0, -148, 4001
	put -profileWidth*1/9, profileHeight, 1000
	put 0, profileHeight, 0
return

109:
	pnum=10
	put 0, 0, 0
	put -profileWidth*5.45/9, 0, 0
	put -profileWidth*5.45/9, profileHeight*0.5/17.5, 0
	put -profileWidth*5.5/9, profileHeight*0.5/17.5, 1
	put -profileWidth*5.5/9, profileHeight*4/17.5, 901
	put 0, -135, 4001
	put -profileWidth*3/9, profileHeight*11/17.5, 1
	put -profileWidth*4/9, profileHeight*14/17.5, 1000
	put -profileWidth*1.5/9, profileHeight, 0
	put 0, profileHeight, 0
return

110:
	pnum=11
	put 0, 0, 0
	put -profileWidth*7.5/11, 0, 0
	put -profileWidth*7.5/11, profileHeight*0.5/24, 0
	put -profileWidth*7.503/11, profileHeight*0.5015/24, 1
	put -profileWidth, profileHeight*6.5/24, 1001
	put -profileWidth*6/11, profileHeight*12.5/24, 1000
	put -profileWidth*6/11, profileHeight*14/24, 0
	put -profileWidth*5.9985/11, profileHeight*14.001/24, 1
	put -profileWidth*5/11, profileHeight*21/24, 1000
	put -profileWidth*2/11, profileHeight, 0
	put 0, profileHeight, 0
return

111:
	pnum=11
	put 0, 0, 0
	put -profileWidth, 0, 0
	put -profileWidth, profileHeight*12/25.5, 0
	put -profileWidth*12.98/13, profileHeight*12.001/25.5, 1
	put -profileWidth*10.5/13, profileHeight*14/25.5, 1000
	put -profileWidth*10.51/13, profileHeight*14/25.5, 1
	put -profileWidth*10.51/13, profileHeight*14.8/25.5, 901
	put -0, -78, 4001
	put -profileWidth*6/13, profileHeight*19.75/25.5, 1001
	put -profileWidth*2.5/13, profileHeight, 1000
	put 0, profileHeight, 0
return

112:
	pnum=11
	put 0, 0, 0
	put -profileWidth*10/13.5, 0, 0
	put -profileWidth*10/13.5, -profileHeight*5/15, 0
	put -profileWidth*10.05/13.5, -profileHeight*4.98/15, 1
	put -profileWidth, 0, 1001
	put -profileWidth*9.5/13.5, profileHeight*5.5/15, 1000
	put -profileWidth*9.5/13.5, profileHeight*7/15, 0
	put -profileWidth*5.5/13.5, profileHeight*9.5/15, 0
	put -profileWidth*5.505/13.5, profileHeight*9.5/15, 1
	put -profileWidth*5.505/13.5, profileHeight, 1001
	put 0, profileHeight, 0
return

113:
	pnum=8
	put 0, 0, 0
	put -profileWidth*4/15, 0, 0
	put -profileWidth*4/15, profileHeight*1/30, 1
	put -(profileWidth-profileWidth*1/30), profileHeight-profileHeight*4/15, 1001
	put -profileWidth, profileHeight-profileHeight*4/15, 0
	put -profileWidth, profileHeight, 0
	put -profileWidth*8/15, profileHeight, 0
	put 0, profileHeight*7/15, 0
return

114:
	pnum=10
	put 0, 0, 0
	put -profileWidth*8/35, 0, 0
	put -profileWidth*8/35, profileHeight*7/38, 1
	put -(profileWidth-profileWidth*6/35), profileHeight*7/38, 900
	put -(profileWidth-profileWidth*6/35), profileHeight-profileHeight*10/38, 3000
	put -(profileWidth-profileWidth*6/35), profileHeight-profileHeight*5/38, 0
	put -profileWidth, profileHeight-profileHeight*5/38, 0
	put -profileWidth, profileHeight, 0
	put -profileWidth*19/35, profileHeight, 0
	put 0, profileHeight*19/38, 0
return

115:
	pnum=10
	put 0, 0, 0
	put -profileWidth*7/29, 0, 0
	put -profileWidth*7/29, profileHeight*5/46, 0
	put -profileWidth*7.02/29, profileHeight*5.01/46, 1
	put 0, profileHeight*21.66/46, 900
	put -profileWidth*18/29, profileHeight*20/46, 3001
	put -profileWidth, profileHeight-profileHeight*11/46, 1000
	put -profileWidth, profileHeight, 0
	put -(profileWidth-profileWidth*3.5/29), profileHeight, 0
	put 0, profileHeight*6/46, 0
return

116:
	pnum=12
	put 0, 0, 0
	put -profileWidth*2.01/20, 0, 0
	put -profileWidth*2.01/20, profileHeight*0.1/26, 1
	put -profileWidth*7/20, profileHeight*5/26, 1000
	put -profileWidth*7/20, profileHeight*7.5/26, 0
	put -profileWidth*7.002/20, profileHeight*7.501/26, 1
	put -profileWidth*6/20, profileHeight*12.8/26, 901
	put -profileWidth*11.34/20, profileHeight*12/26, 3001
	put -profileWidth, profileHeight-profileHeight*5/26, 1000
	put -profileWidth, profileHeight, 0
	put -(profileWidth-profileWidth*5.5/20), profileHeight, 0
	put 0, profileHeight*7/26, 0
return

117:
	pnum=9
	put 0, 0, 0
	put -profileWidth*4/20, 0, 0
	put -profileWidth*4/20, profileHeight*1/29, 1
	put -profileWidth*11/20, profileHeight*10/29, 1000
	put -profileWidth*11/20, profileHeight*14/29, 0
	put -profileWidth*11.02/20, profileHeight*14.009/29, 1
	put -profileWidth, profileHeight, 1000
	put -(profileWidth-profileWidth*4/20), profileHeight, 0
	put 0, profileHeight*7/29, 0
return

118:
	pnum=20
	put 0, 0, 0
	put -profileWidth*2/32, 0, 0
	put -profileWidth*2/32, profileHeight*1/36, 1
	put -profileWidth*5/32, profileHeight*4/36, 1001
	put -profileWidth*8/32, profileHeight*7/36, 1001
	put -profileWidth*8/32, profileHeight*8/36, 0
	put -profileWidth*10/32, profileHeight*8/36, 0
	put -profileWidth*10/32, profileHeight*10/36, 0
	put -profileWidth*15/32, profileHeight*17.5/36, 0
	put -profileWidth*17.5/32, profileHeight*17.5/36, 0
	put -profileWidth*17.5/32, profileHeight*20/36, 0
	put -profileWidth*18/32, profileHeight*20/36, 1
	put -profileWidth*23.5/32, profileHeight*25.5/36, 1001
	put -profileWidth*29/32, profileHeight*31/36, 1000
	put -profileWidth*30/32, profileHeight*31/36, 0
	put -profileWidth*30/32, profileHeight*33/36, 0
	put -profileWidth, profileHeight*33/36, 0
	put -profileWidth, profileHeight, 0
	put -(profileWidth-profileWidth*11/32), profileHeight, 0
	put 0, profileHeight*12.5/36, 0
return
]]>
</Script_3D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_2D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
!!! Molding Curved 02

pen gs_cont_pen
unID = 1

gamma = 180-ASN((rr*SIN(90+beta))/(rr+profileWidth))
etab = 180-gamma-(90-beta)

gamma = 180-ASN((rr*SIN(90-alpha))/(rr+profileWidth))
etaa = 180-gamma-(90-alpha)

bb = -((rr+profileWidth)*SIN(etaa))/COS(alpha)


fill gs_fill_type
if abs(malpha-360) < EPS then
	poly2_b 4, 2+64,gs_fill_pen,gs_back_pen,
			0, rr, 901,
			rr, 360, 4001,
			0, rr, 901,
			rr+profileWidth, 360, 4001

	line_type 1
	poly2_ 2, 1,
			0, rr, 901,
			rr, 360, 4001

	line_type gs_line_type
	poly2_ 2, 1,
			0, rr, 901,
			rr+profileWidth, 360, 4001
else
   poly2_b 7, 2+64,gs_fill_pen,gs_back_pen,
		0, 0, 1,
		0, rr, 901,
		rr, malpha, 4001,
		profileWidth*(abs(alpha-90)<eps)+bb*(abs(alpha-90)>eps), -(180-malpha-alpha), 201,
		0, rr, 901,
		rr+profileWidth, -(malpha+etab+etaa), 4001,
		0, 0, 1

	line_type 1
	poly2_ 7, 1,
		0, 0, 1,
		0, rr, 900,
		rr, malpha, 4000,
		profileWidth*(abs(alpha-90)<eps)+bb*(abs(alpha-90)>eps), -(180-malpha-alpha), 200,
		0, rr, 900,
		rr+profileWidth, -(malpha+etab+etaa), 4000,
		0, 0, 1

	line_type gs_line_type
	poly2_ 7, 1,
		0, 0, 0,
		0, rr, 901,
		rr, malpha, 4001,
		profileWidth*(abs(alpha-90)<eps)+bb*(abs(alpha-90)>eps), -(180-malpha-alpha), 201,
		0, rr, 901,
		rr+profileWidth, -(malpha+etab+etaa), 4001,
		0, 0, 1
endif

unID = 1
!! Angle of Molding
	hotspot2 0, rr, unID, malpha, 6: unID=unID+1
	hotspot2 0, 0, unID, malpha, 4+256: unID=unID+1
	hotspot2 rr*SIN(malpha), rr-rr*COS(malpha), unID, malpha, 5: unID=unID+1

!! Connected Angles
	hotspot2 0, 0, unID, beta, 6+512: unID=unID+1
	hotspot2 ABS((rr+profileWidth)*SIN(-etab))*(NOT(abs(beta-90)<eps))+profileWidth*(abs(beta-90)<eps), 0, unID, beta, 4+128: unID=unID+1
	hotspot2 (rr+profileWidth)*SIN(-etab), rr-(rr+profileWidth)*COS(-etab), unID, beta, 5: unID=unID+1

	hotspot2 rr*SIN(malpha), rr-rr*COS(malpha), unID, alpha, 6: unID=unID+1
	hotspot2 	rr*SIN(malpha)-(ABS((rr+profileWidth)*SIN(-etaa)))*COS(malpha)*(NOT(abs(alpha-90)<eps))-profileWidth*COS(malpha)*(abs(alpha-90)<eps),\
				rr-rr*COS(malpha)-(ABS((rr+profileWidth)*SIN(-etaa)))*SIN(malpha)*(NOT(abs(alpha-90)<eps))-profileWidth*SIN(malpha)*(abs(alpha-90)<eps), unID, alpha, 4+128
				unID=unID+1
	hotspot2 (rr+profileWidth)*SIN(malpha+etaa), rr-(rr+profileWidth)*COS(malpha+etaa), unID, alpha, 5: unID=unID+1

!! Radius Editing
add2 0,rr
rot2 -90+malpha/2
hotspot2 0, 0, unID, rr, 1+256 : unID=unID+1
hotspot2 -1, 0,  unID, rr, 3 : unID=unID+1
hotspot2 rr, 0,  unID, rr, 2 : unID=unID+1
del 2



]]>
</Script_2D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_1D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
EPS = 0.00001

dim stMoldingStyle[18]
   stMoldingStyle[1]=`Плинт 1`
   stMoldingStyle[2]=`Плинт 2`
   stMoldingStyle[3]=`Плинт 3`
   stMoldingStyle[4]=`Плинт 4`
   stMoldingStyle[5]=`Плинт 5`
   stMoldingStyle[6]=`Плинт 6`
   stMoldingStyle[7]=`База 1`
   stMoldingStyle[8]=`База 2`
   stMoldingStyle[9]=`База 3`
   stMoldingStyle[10]=`База 4`
   stMoldingStyle[11]=`База 5`
   stMoldingStyle[12]=`База 6`
   stMoldingStyle[13]=`Венчающий 1`
   stMoldingStyle[14]=`Венчающий 2`
   stMoldingStyle[15]=`Венчающий 3`
   stMoldingStyle[16]=`Венчающий 4`
   stMoldingStyle[17]=`Венчающий 5`
   stMoldingStyle[18]=`Венчающий 6`

dim stDetail3D[3]
	stDetail3D[1] = `Детальный`
	stDetail3D[2] = `Простой`
	stDetail3D[3] = `Откл.`


mtypes_m = 100 + iMoldingStyle


]]>
</Script_1D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_VL SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
hideparameter all

call "FM_types" parameters all

values{2} "gs_detlevel_3D_m"	2, stDetail3D[1],
								1, stDetail3D[2],
								0, stDetail3D[3]

values{2} "iMoldingStyle"	1, stMoldingStyle[1],
							2, stMoldingStyle[2],
							3, stMoldingStyle[3],
							4, stMoldingStyle[4],
							5, stMoldingStyle[5],
							6, stMoldingStyle[6],
							7, stMoldingStyle[7],
							8, stMoldingStyle[8],
							9, stMoldingStyle[9],
							10, stMoldingStyle[10],
							11, stMoldingStyle[11],
							12, stMoldingStyle[12],
							13, stMoldingStyle[13],
							14, stMoldingStyle[14],
							15, stMoldingStyle[15],
							16, stMoldingStyle[16],
							17, stMoldingStyle[17],
							18, stMoldingStyle[18]

lock "A", "B", "ZZYZX"

if gs_cont_pen = 0 then parameters gs_cont_pen = 2
if gs_fill_pen = 0 then parameters gs_fill_pen = 91

if gs_resol < 3 then parameters gs_resol = 3
if gs_detlevel_3D_m = 1 then lock "gs_resol"

values "malpha" range[5, 360]
values "rr" range[0.001, ]

values "alpha" range[MAX(ATN((-rr+(rr+profileWidth)*COS(malpha/2))/((rr+profileWidth)*SIN(malpha/2))), 0), 180+ATN((-rr+(rr)*COS(malpha/2))/((rr)*SIN(malpha/2)))]
values "beta" range[MAX(ATN((-rr+(rr+profileWidth)*COS(malpha/2))/((rr+profileWidth)*SIN(malpha/2))), 0), 180+ATN((-rr+(rr)*COS(malpha/2))/((rr)*SIN(malpha/2)))]

if GLOB_MODPAR_NAME = "profileWidth" then
	if	iMoldingStyle = 1 | iMoldingStyle = 2 |\
		iMoldingStyle = 3 | iMoldingStyle = 4 then

		profileHeight = profileWidth * 41/7
	endif
	if iMoldingStyle = 5 then
		profileHeight = profileWidth * 67/8.5
	endif
	if iMoldingStyle = 6 then
		profileHeight = profileWidth * 70/9.5
	endif
	if iMoldingStyle = 7 then
		profileHeight = profileWidth * 9.5/14.5
	endif
	if iMoldingStyle = 8 | iMoldingStyle = 9 then
		profileHeight = profileWidth * 17.5/9
	endif
	if iMoldingStyle = 10 then
		profileHeight = profileWidth * 24/11
	endif
	if iMoldingStyle = 11 then
		profileHeight = profileWidth * 25.5/13
	endif
	if iMoldingStyle = 12 then
		profileHeight = profileWidth * 15/13.5
	endif
	if iMoldingStyle = 13 then
		profileHeight = profileWidth
	endif
	if iMoldingStyle = 14 then
		profileHeight = profileWidth * 38/35
	endif
	if iMoldingStyle = 15 then
		profileHeight = profileWidth * 46/29
	endif
	if iMoldingStyle = 16 then
		profileHeight = profileWidth * 26/20
	endif
	if iMoldingStyle = 17 then
		profileHeight = profileWidth * 29/20
	endif
	if iMoldingStyle = 18 then
		profileHeight = profileWidth * 36/32
	endif

	parameters profileHeight = profileHeight
else
	if	iMoldingStyle = 1 | iMoldingStyle = 2 |\
		iMoldingStyle = 3 | iMoldingStyle = 4 then

		profileWidth = profileHeight * 7/41
	endif
	if iMoldingStyle = 5 then
		profileWidth = profileHeight * 8.5/67
	endif
	if iMoldingStyle = 6 then
		profileWidth = profileHeight * 9.5/70
	endif
	if iMoldingStyle = 7 then
		profileWidth = profileHeight * 14.5/9.5
	endif
	if iMoldingStyle = 8 | iMoldingStyle = 9 then
		profileWidth = profileHeight * 9/17.5
	endif
	if iMoldingStyle = 10 then
		profileWidth = profileHeight * 11/24
	endif
	if iMoldingStyle = 11 then
		profileWidth = profileHeight * 13/25.5
	endif
	if iMoldingStyle = 12 then
		profileWidth = profileHeight * 13.5/15
	endif
	if iMoldingStyle = 13 then
		profileWidth = profileHeight
	endif
	if iMoldingStyle = 14 then
		profileWidth = profileHeight * 35/38
	endif
	if iMoldingStyle = 15 then
		profileWidth = profileHeight * 29/46
	endif
	if iMoldingStyle = 16 then
		profileWidth = profileHeight * 20/26
	endif
	if iMoldingStyle = 17 then
		profileWidth = profileHeight * 20/29
	endif
	if iMoldingStyle = 18 then
		profileWidth = profileHeight * 32/36
	endif

	parameters profileWidth = profileWidth
endif
parameters A 		= rr
parameters B 		= profileWidth
parameters ZZYZX 	= profileHeight
]]>
</Script_VL>

<ParamSection SectVersion="22" SectionFlags="0" SubIdent="0">
	<ParamSectHeader>
		<AutoHotspots>false</AutoHotspots>
		<StatBits>
			<STBit_UIDefault/>
			<STBit_FixSize/>
			<STBit_UIUseHierarchicalPages/>
		</StatBits>
		<WDLeftFrame>0</WDLeftFrame>
		<WDRightFrame>0</WDRightFrame>
		<WDTopFrame>0</WDTopFrame>
		<WDBotFrame>0</WDBotFrame>
		<LayFlags>65535</LayFlags>
		<WDMirrorThickness>0</WDMirrorThickness>
		<WDWallInset>0</WDWallInset>
	</ParamSectHeader>
	<Parameters>
		<Length Name="A">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Value>1</Value>
		</Length>
		<Length Name="B">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Value>0.13</Value>
		</Length>
		<Length Name="zzyzx">
			<Description><![CDATA["Высота"]]></Description>
			<Fix/>
			<Value>0.13</Value>
		</Length>
		<Length Name="profileWidth">
			<Description><![CDATA["Ширина Профиля"]]></Description>
			<Value>0.13</Value>
		</Length>
		<Length Name="profileHeight">
			<Description><![CDATA["Высота Профиля"]]></Description>
			<Value>0.13</Value>
		</Length>
		<Integer Name="gs_detlevel_3D_m">
			<Description><![CDATA["3D-детализация"]]></Description>
			<Value>2</Value>
		</Integer>
		<Integer Name="iMoldingStyle">
			<Description><![CDATA["Стиль Профиля"]]></Description>
			<Value>13</Value>
		</Integer>

		<!-- gs_settings: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_settings">
			<Description><![CDATA["Дополнительные Параметры"]]></Description>
		</Title>
		<Angle Name="beta">
			<Description><![CDATA["Угол Подрезки Слева"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>90</Value>
		</Angle>
		<Angle Name="alpha">
			<Description><![CDATA["Угол Подрезки Справа"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>90</Value>
		</Angle>
		<Angle Name="malpha">
			<Description><![CDATA["Угол Профиля"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>60</Value>
		</Angle>
		<Length Name="rr">
			<Description><![CDATA["Радиус Профиля"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Length>

		<!-- gs_3D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_3D_representation">
			<Description><![CDATA["3D-отображение"]]></Description>
		</Title>
		<Integer Name="gs_resol">
			<Description><![CDATA["Аппроксимация"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>24</Value>
		</Integer>
		<Boolean Name="gs_shadow">
			<Description><![CDATA["Отбрасывание Теней"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="AC_show2DHotspotsIn3D">
			<Description><![CDATA["Показ Узловых 2D Точек в 3D"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="ac_bottomlevel">
			<Description><![CDATA["Отметка Низа"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="ac_toplevel">
			<Description><![CDATA["Отметка Верха"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>

		<!-- gs_2D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_2D_representation">
			<Description><![CDATA["2D-отображение"]]></Description>
			<Fix/>
		</Title>
		<LineType Name="gs_line_type">
			<Description><![CDATA["Тип Линии Символа"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>4</Value>
		</LineType>
		<PenColor Name="gs_cont_pen">
			<Description><![CDATA["Перо Контура"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</PenColor>
		<FillPattern Name="gs_fill_type">
			<Description><![CDATA["Тип Штриховки"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_fill_pen">
			<Description><![CDATA["Перо Штриховки"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_back_pen">
			<Description><![CDATA["Перо Фона Штриховки"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>

		<!-- gs_material: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_material">
			<Description><![CDATA["Покрытия"]]></Description>
		</Title>
		<Material Name="gs_molding_mat">
			<Description><![CDATA["Профиль"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>18</Value>
		</Material>
		<Integer Name="gs_ui_current_page">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>

		<!-- gs_list: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_list">
			<Description><![CDATA["Параметры Спецификаций"]]></Description>
			<Fix/>
		</Title>
		<RealNum Name="gs_list_cost">
			<Description><![CDATA["Цена"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="gs_list_manufacturer">
			<Description><![CDATA["Производитель"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_note">
			<Description><![CDATA["Примечания"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_location">
			<Description><![CDATA["Расположение"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_accessories">
			<Description><![CDATA["Аксессуары"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_Type">
			<Description><![CDATA["Тип Группы"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Другой"]]></Value>
		</String>
		<Integer Name="iFMType">
			<Description><![CDATA["Тип Группы"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>25</Value>
		</Integer>
		<String Name="FM_InventoryNumber">
			<Description><![CDATA["Инвентарный Номер"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_SerialNumber">
			<Description><![CDATA["Серийный Номер"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_ProductionYear">
			<Description><![CDATA["Год Производства"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<RealNum Name="FM_ObjectWeight">
			<Description><![CDATA["Вес Изделия"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="FM_ObjectWeightUnit">
			<Description><![CDATA["Единица Веса"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["кг"]]></Value>
		</String>
		<String Name="gs_list_custom1">
			<Description><![CDATA["Пользовательское Значение 1"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom2">
			<Description><![CDATA["Пользовательское Значение 2"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom3">
			<Description><![CDATA["Пользовательское Значение 3"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom4">
			<Description><![CDATA["Пользовательское Значение 4"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom5">
			<Description><![CDATA["Пользовательское Значение 5"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
	</Parameters>
</ParamSection>

<Ancestry SectVersion="1" SectionFlags="0" SubIdent="0" Template="false">
	<MainGUID>F938E33A-329D-4A36-BE3E-85E126820996</MainGUID>
	<MainGUID>103E8D2C-8230-42E1-9597-46F84CCE28C0</MainGUID>
	<MainGUID>784EAEA1-5041-4AA6-B6F4-EF263A891EE7</MainGUID>
	<MainGUID>21DE7666-EF71-4885-8222-629F88CB3F4A</MainGUID>
	<MainGUID>C04A0B33-A510-4C54-AA8C-F8C484C1FEA3</MainGUID>
</Ancestry>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_PR SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_PR>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_UI SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[

call "ui_moldings" parameters all	iMoldingObject = 2,
									stMoldingStyle = stMoldingStyle
									
]]>
</Script_UI>

<Comment SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[Положительный криволинейный молдинг с различными профилями.]]>
</Comment>

<CalledMacros SectVersion="2" SectionFlags="0" SubIdent="0">
	<Macro>
		<MName><![CDATA["ui_moldings"]]></MName>
		<MainGUID>20D5CED0-B0AA-4698-9847-86C7244E2EF9</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["FM_types"]]></MName>
		<MainGUID>2759D2DF-AA8E-44D1-AD1D-261581266B34</MainGUID>
	</Macro>
</CalledMacros>

<Picture MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="0" length_in_bytes="6511" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000800000
	008008020000004C5CF69C0000192C49444154785EECD1310100000C02A0F52F
	ED62780815B854B111200001021020000102102000010210208067EFCA9FA338
	B2745756E93CD08124C465B08131D81C32D8D8606C83B1F1323EF0DA5E3B7663
	663736F697DD7F7237F6F80366768CC746C880005DAD3ED4F75595FB65BE3CA3
	5AB267627F68A47E92AAB3B2B38B88EFBDFCDECBF7329B28F3574A5FC87C1348
	8C1F488C6B4C2DA7B3838692C4343B094F2AD5CAA99367FF0205F4015F7AF4E7
	72B998F00C60558026314FE48F10DD4830447564782613040600B4C43D13AFF7
	7FB83F3D35FF6B15D097FB3FFDE1F1CAC340A0292F9C10C50F7504AA03BF8C31
	0D36290082A6E90B59F8E8F1E37CBE30100DFC2A05F4E5CF0FFEF8E4E9C3C1C1
	21CD3D462CAC5A11F2CE0C61746F3516456136BBB5F2F429A9E99715D0979F96
	FEF47865298A062DCA9C3B901B097C5518E4ED6489A2A85AA92E3F7A0476C290
	5FA5803EFA8F9E3C88C201176AB409502BFEBD357A6E7504F41B8DC6D2C3A57A
	A3CE429674925F52401FFD8702FD308C5C478AB68B30DD78036CA71D1786E176
	A9B4BCBC5C2A97A33084F7163ADC45017D79F0F0FB474F96C26840710EAEBE99
	CB5BD3DFDD2D18DB2F954A3FFDF4A05EAF4313C44914A7EEA4803EFAF725F344
	0163BEB95B25A491E6A6578DB5B6FF6069A9D96CC0032712FE4EA733313E3937
	77A88B02FAF2E3D29F9EAC2C29E6E106776BE969E1E95B8974C8D8F6F6F6C3E5
	9F9BCDA6B47DF94EDCE109FFECEEDF1E9C99EDAA807ECCE3795D6BFB96FB2DE2
	6E8B9A26FEC4EFE6E6E6F3D5D556AB15868C276A289CF0ADF7EFBC7EEE623727
	DC8F7934FAE90047757173E57471B989C630C6E2385E5D5D5BDF5C07EEB8352A
	ABD76BAF9DBD70FBE627685B05F40504FDE3D2FFAE6D3C03FAC4FB562CDC7E93
	40B7E8AB810872EA8DC6D3A72BC5E276202702D7E31BCD0678FFDEA7DF808EAC
	02FAB2915D5D5ABE5FA996911B305CA2FFA8B9B3387385050C8280E7E9B3955A
	AD0694292944E39AADC6F4D4CC775FFDEEC0814905405F01006569F987E76B4F
	8062140D70432A7EBC9F96748A2D640C29BACDECE6FAFA461CB7C328E48933C3
	1AF5E9C999EFBEFEFDA1438755575F01EB1BCF1E2CFF50AD9511A7834180BB6B
	FEDDF30D7E38A46C1BC258A552595D5BC3158F620CB66FE107F3CCCCCC7EFBD5
	EFE6E716C47D5F01B55A75F9F18FABEB2B400FB4B3434CC925AFD32F7735C16D
	325484F908EAB39B9BD96C368E1316845275341E5A0DEACDFADCC1B96FBFFAFD
	C18373E8DBEF0A68B75B2BCF7E7EF20C81793D52AB5C27BCE409B7BE9569C3E7
	867038847422052FE54A6573631357F43216D003B4F05ABD7E64E1E8979F7F87
	90BF3B93E181FBA78205AE7FFC64A95CD9666068C6BAD13BE1EB05A0067A2FC6
	67ACD96A150A857C3EDFE9C45006CF90C7A5A11C65AF46AB79FEDCC54F6E7F3E
	32320A00F6B502B6721B3F3F7990CB6FB200E047E9CC0DDF557596EE29C64F92
	72A994CDE51A8D260B2857A4804C7882BF56BB85CE1BD76E5D7BFB7D0260FF2A
	A0B85D402D6563F339A0912BAC8C1F5E7262126ABB6E20F087D1F20A70952BE5
	42A158AD56C5988049F5108AA216096934EAE3E3139F7CF4D999536733BEEC2F
	1F50286C81EBB3B9F5B8D30961F62C246B0E0CAF18E87DF4FD452F0D14868E6C
	7E2E9FDBDE2E61B050861328E9008AD71BB5978E9EF8E4E3CF670FCEA3679F2A
	2097CFAE3C5B06ED7492386251948A7374DAC067175F075C8F02D68D66B3582C
	22ADD6893BB8B543ACDFE0499C743AEDAB57AEDFB87E6B08C54B2DFB8B8260EF
	2B4F7F06D783A6013CD1B381DB17C27F07E1005EA0DF6AB56BF52A38A7D96CB9
	CB2FAE7CAE7A8670B98DC6871FDC79EBCA751AB0BF1400D3DBC8AEADAE3DC917
	B71201FD002843009F829507296BE70ED53B2126102F9551BFAAE0E1D4072F62
	A224B5E744101A94D4AC562B1FDDBCFBCED51B786B7F29A05AABACAD3FC59AB6
	5C2D010B707DE027EEB9F7E279D5B4D067913DAE94C54FBBDDA11E08F958196D
	060981266717A0C742ECA35B77AF5EB996F1658FFB805C21FB7C75652BB7865A
	070B43B1A025C2E126B8F1D10FFC98D2D70586035D3CAA5C2ED7AAD5B608ED33
	92EE4D7EC82F76614224712E9F1F1F9BF8FADEDF9F7AF90CBDBDF7670056B09B
	5BEBC822148A39C936110B9841D80556B2B40D78BA4F00829EF376A7532E97B0
	6704093539D642EF2B804B1DF05AB5962FE47E73FAECBDCFFE6E6A721A23F6B8
	02E0E5F285ECFAC6F36C61A35EAB01239548F024B040D9640E24AD034E740315
	225356ADD690A280A86E2E5E314863EF2DA7DBED367C03EA2AEFBEF3C19DDB9F
	52669F646F5250A95C58DF58DDDC5A2D574AC00B2C3F3030E801CF774E241891
	B0EABE00B79D761B2BA626A4D502B913E1A041CF4BFB0632824AB55ADC2E4E8C
	4D7CF3E53F2C5EBC4203F6A602800E624A78D7C2F6168C2E6421A08FC2DD6AE1
	69DF6BEF124EB1282086B1371B4DAC98E03C03298C752FB3936230208E634499
	E56AA5D56CBE7EF6C2C71FFE766E96D6597B4E01C005517C766B0D148F362C8F
	4CDE2482790AE8A00BE21E6BD3F824468AA60DFA82C9F324C9908FED2EC69167
	003DE608F6F3546BD5C9C9A9BB1F7DFED6957768CC9E5200B0CEE737E15D41F4
	8D660D561731E03E10B810F384B2079C3A7DA4A987D3BD5EC6D22D58BBD96AE2
	0A939783C9E677747E8C0550100623D706C7804D0C50C3C5F38B883529ABBC77
	1400DC9130D8CCAE15B773C01DE0842AA024A0CD2A36B051830A430C7EB6EA4A
	DBF34D12B99374DA9016806F0341D12F85F394B17B5CCF31B8566F80A6E4A79B
	08726EBEF7F1E5C5B77601E0458A820053A55242BA2657D82C6EE7C1F5E80C29
	411F708D82DD0D4848932DBBFCE32A819B520AE564509395614D1C27B4247029
	C9BCBAD013DB40570D29982CF8F8C8F0C8C50B6F5C7FFB7D37D07C516700D6EB
	A57211F60E72AF544B600374B290A94DF7DDF235C0D40D6038FDC8067538410D
	185D20D802D73405EE89D09F2C6AF1EE697FC35B2AC2E974108CD6EAF0CC3174
	C7187BEDECF91BD76E1E3D72DC00F0E2CD009825AAAFC8CFE4F3D962B900634F
	9298410266D0B0F4ED99B58DC39D60DF355D15D5A01DC7A01AFC098E07F064F2
	369EF46AECDCF7B10CE151B3D9C61612315D24F471121F3F76F2C6B50F5E3DF3
	1A0D7EF11480F421CE5201F7ED52A15A2DA33C44E77264919558C567023F29AC
	998783ACFC532768D88FC409EFB4C50F808B13453506652FA0E7DEBF47532A49
	007DB35E6F82701229C07F667AF6ED37AF5F5EBC1AA5AA66BD4E41B06E300C38
	1DBF955AB9D56A702E1081B1DB74BCB2DC805A96582CF19350270F288027BFA0
	2B7F310C5E084C1E2A883503053B4F437B95C3445004DC2172E9CBF12C3C12E1
	CDA58B97AF2CBE3D3A3A6600E8F51900D0CBD5ED5279BB50DC825F853D0112C1
	2FF803F2E940CFCFACF8BD86D04D3029ADD4D82DC04E12097C2C66860E8FB861
	2D9F67B8D5AF7A243E0EA029A847961F5DA44794AE2E5DB8BC78E10AEA882E00
	BD3803C08FA014B850700BF61620138B280D28C9C52438061270139550C33F2D
	024015B758A128C58EC61D5906060BD43A123AC06EE602E1DE45C169960FA48D
	C7229C6C0991877839CC038F9D9E9E79E3D25B17CF5F1EF3ADBEB76600181CDC
	52AD968A92D0B1244481829008256D40D26ECE068BD6EEC97013771A987A2B91
	15F5611CE0867512E8808C70F46691BCF35FEC33A513164F01F4584CC13FC3D2
	6128B4D90743E075A727A7FFF91FFF756C749C80E851052032FEE1C11FD6D69E
	031026806290EE56E7271A5D70A424103404D89940B6B545E389B217F8C41001
	BB521246521E87704D53176E8DA51B179D48A602C50376FCE2566B2543B30126
	95CFE73EFEF0EEDD3B5F647CE9390ACA15515C6D4E4D4D8277886A804177D0ED
	3E0327F2A368832E34308EC59D0217C2381D384F20966428C8F4A2C81DD5AEF2
	65C4E932EB00843BB1FC87288C3519FFA64C2DE03D249768CF484F2B00D65828
	6C0288D1D1512C97B02D00AB7A58AB226EBFA861E89E7017662E60172442391C
	9A06BA1DE8A2764C6BD8809CAAB7F44DA70A3CAD90AA94C9B761F02D0874201E
	A71E2E237DCEC55B6275166BDFC30F4C1C585850BB947B97827285F5A7CF1FC2
	B54A644298173666C0C44CD13555E8D3224125E8095AAE0C5C8C33E8F8E44D37
	5D8B8650971D4ACA8610D5C0DC21201BD2B5D61303D6E07DC1419D18C29D9017
	813F2A59FFF24FFF06FDF52E05018EED520EF06A7092308A2627275132C5621F
	28D82DC436D4B67C6FD334D2D8935815F98CA63CC8D3E2B81102C9E47362211D
	0D3B51BCF8B31342B08D30799A7FE478032E4D8D2B569C9F5FC0E09EA6A072A5
	58A96E33C6DCF2441486D3535355849F95AA9902165115EB109773A6CAADA25F
	34BC9885EFB2295321C33DDC3B52DADAA213889A65A42495C56CCB1180983ECB
	028D3B34802E79C19C9E993E88464F2B20975F4B781C0691B33455508E8F8FE3
	065A003E663BAABA664C8CAF80E3DD50A6BEAE9514E384F138B34C6D496387B7
	06E2E4ABDDE983BE764B06ADA01A8A035868F991C778511A08C473C3804D4F4D
	F7B402AAB55219E61F84BAC3AE7D88E227C6C741448D7A23C344FE97DE70491A
	92109DEFB02910AA1443FC5CBC5EF102F35840AEAC3DD6A1143118855A0CFD2D
	029E72CEB2CC12A4D61FE8858E4C891E8AC00C383031D9D30A2814B3C0200A23
	37E4F35296263B6670D71212111B0BF53FA8C59CFE5797984BA4A5DFD44B30F1
	C7696E191EA3988734830B22E38CCA7CA4D4AC67AD68B2C039B5120919E85D05
	E0DC5AA9920F19F35DB2039D11E69A35C52AE49CA9AD0773FAB1B44E0A01BA40
	105012B92B664FB417A7DD7F345D32E812800BE4F508A02E521FC05E06B0D630
	D0F075AFBC89E246A98030EC5D05148A9BD08132FFB470AE738F814B28363DAF
	7B1960F2E925E3A63365029FBE54CD103B1A5C426FF2CF622C0D57B52D4669D3
	28949443E0DB74935583DD43252E414233412B20EC5905A02251D8DEF4F30DDE
	067A163222048F5EC845B8E52BBF12181B33EFC4F8A3D52F8658932772D79F07
	E02D39D8243004645CC32C7A9852802F14EFD0A4A11788E8528F472749D0A30A
	D82EA3385EF7CD5FF105051CA81B0D0D0E26C6ED1A5408702D4922689CE27453
	1677ED9C9A4432842ABA504F8C3513510D272453D7491EC5F521BA20447C3BBB
	29DCF86B39B7E6D08B0A001CD89D001C1D3BF6BD3063856C6E786418611C81E2
	822E03C10458035C802E23980EDA5AD032C09B9C66803108A8C8A9A28BB11014
	01DC0DB7E87537473F976112A19FA18B59D1058620B9BAAAD4856221EE4D809E
	5480483BD74AB03BC325E9081D4CF2FCD973B009638C6E058D43DAE803E8C429
	CAD2A5F334E8DBE4070411241087C9836D982C272041A613A37A3B8AE742304A
	4E028686019FA2235BC34153A38F8BDD1E8A0B83EEA8DD9B3300A06CE5D77125
	5FB9CBA612408DAF01191C1C246FAA39C364228864D4AD93444B64DEA6852BFC
	2AE7316007C50C0F0DCB60463B745C346874D5F38071C1721C0DEA744FF0721A
	A974209BDCBDD09F330578EF29A0DEA8546A2558A2B6BFEEDB2F1319380631D0
	6C6A985DF4BD6D6A6853460C59605CA139F48A201C1C130DC1EA358305DE8F01
	C9BC2D258E4D14A474E2F927D29EB84FF43FEFFA5DEE44CC3D3903B023136442
	EED7E8202D22DFD212FC43B893187FC075BEAC25A4295755312C17B401CCC746
	4761F38CCA5F1EC64C1F1735AC4D1D8179325D7DF00303B4F9642228482DBB48
	1D7EDEBCE7BC7064B60862F51BAADC83673221134421939A9CC276983248C329
	29AAD5A9A0F538418282D232E26351048F1D42A0011BB3D3ABE571AD03121EA0
	ADE185D005DAA6D58541DFC43C41A859465621CC37E9D944947ED1F5B5DE5340
	BEB081AAB5BB498D8C10DB63B123FEE1C3E572B93A3737FBF2899300934B910E
	20C60E4A2802BE94D6534C682B1C1A1A8E4248C420817E9E06DD77AE96E90D8A
	964FE8852966619EC2027FA7107977153BC8F17E0E906E6D0FEF2105C0728BA5
	9C4016E6135A564658B295CBFEFB7FFC67369B850D23347CF4E811F66EA0A2AD
	D6B1714C4188047D08DC8E312CC0AF00C2C04E96AB4DDEE110EEBA528CE52E6A
	2C601ED636E475CF599BE2B1E21A85BF0FB1AB0B0CA5FA4C0F29008517B84995
	FB840EA4D10253E4FDFFEBBFFF071518D400022938275E281689C6C5B6CE81E1
	500AA5C31C82D6D740E1E686358ED55B54CCA76C2AC37100E864320AB2CFB6C5
	1DD29D9AB4CE19235FD49241C4CD5353D3F8F68C1E5200627F9AE0947724B080
	E9F7F7BFC759CD898971B25D403C383424C026C8192E04926B90368EA18FA0E1
	43AF604D2164779438BEC11AB0EB8F6DAD8DB4A8175F96CC78F71DB9D233B1BF
	B9F305B6BFF58C022C74BAF6C8F9E0C040766BEBE9B36728C7C39332412B9144
	3D0C988D4D0819699A1EBE44D706149F320C3F90D2FD0AB09E38D4EF2B409725
	EC40CE802911BE4EC7A6D9DD501817BEAA71E7F66F5F3D7DAEE79CB04DC8C86D
	51F0BEABABAB5138303C3C24535E3A16B13F5E655ED1B5473074E380E889CD23
	D868CA277DC6EC8362EE4C0B5B06B57E75C76D148EB671B074F1D29BEFBF7BBB
	17C3501BB149BBC379A852A904F3A770D39A252E165C174CD3CFD3EFFA50D884
	84BD55F8D37448738DE783B98E2ABBC63B9CDB012EBB61C3F6A50B6FDCFBEC1B
	3CA5171540B3D4D45E803E36B162C11A40448F084964938CDF9A9A554CBA5C63
	556107736EDA9CE033C7B268B73EA9C243C9277E6A12F44E006B1F6E7D305994
	40BF76F1FC1B5F7EF62D6D3AEFDD6CA8849B25495C28141813AC9FB671D79099
	8EE9D33C6319C31AB09A641A44C6399D0325519EDF2544FF699C9A3AF4518B75
	C70DD8E9679213098F71A2FAD2852BF73EFD5A2C277B4F221F3684EBAC93B46B
	F25BD61D4B54E8A781B69D69DCDC370C3E7A88A520DFE489BF52E750135FF7BE
	D968A550D299EB31B491E5DD6B373FFCE013526D8F2A80FB7340964FDA51145A
	33C6C5C7D6BDB1438214F7183028476F01F4D33D7A22E922BD2BCCFAA734FA7E
	2586AEE6481A16E4773FFE02E493E961890C1E266869D69BB02811713A50A624
	3D1FD2224DD26711DCF38428DBB57D8B39936DEE76ED9C410E8C92AD7AC4AE74
	9CECC517D4DEBD730F5F1999E96D89D2A8E1D4147945EF6C45DA2BF25DA0F7C1
	E3E6D51E9A50E8777DC4EE0F0E529127B76D2AF42F5E7CF383F73ED2C72E7A5F
	0154B0629C709555279D310EBA3A421FA4EEEC4CB89B5049EF51502CED53BFFB
	FF9DD114D14243D3F8A735804FA19A8D5376EF5DBF650E38F6BE44BE29C9F3F9
	F50653753F1FE2C0326DE07B8EDD30B2EED503539EF5D0DE18BCB313B9FBEE3A
	2D3497C0F87802CE795D7FE7E6F8D878EFE39E76C29C809375F5380859C64E00
	C3D214F939E985DD746085A7D20D54E275D98CBB2A63B4878AEF8C38AEF61003
	CA6D87E60F5F7BEBC6E953AF665E2C4987A1941AA6345B7A351A30955FEEEA8B
	2DCC3E8128D2F1933D76D310DF9167825D2B8874D017BB3CAF5D7D1FC71C913C
	47E70BA900828380410C0A27C0184B1979CA177337F54954AF41F331F5AB5236
	0BE49F7BF135D7DDF3EA0B07F42DA46671A2FAF2A5AB131307322FAC440A3C2D
	6DA100CE42F6CB418EB734B3A8A78372CEB98FAA3D88DA3587C993DDF664A0D6
	8C3ADD6F4E9FBBBCF8F6A1F9851716F9F43A403A435D5909D04EED29F741B6B6
	CF3D36E27E259C1A5C88597979CF359AE866FADC219C761BD00F027A9CEC3D72
	F858664F48E4513CCA754942B838F840FC7D97DD4447F7BB8B8BBE579CF14828
	CDF5ADC6E0C0E0B9572F9C7F7D7161FE08F5EF2D05D88372D648AD99FB3700DA
	10B71BC6508F661E9FBFB5A5773D8AB4D37125DA173D3232F21AA07F6DD1FCFF
	1F7B520112FB44C2C954886EF676F84558B752A5A047CBE6C2A8253FEA2C9881
	7EE224837CD7E1099D086BE33A3939FDCACB674EBF72767A6A26B34725F251E0
	2C1344A2D81BDA214CFB5281A15491564AEAC88BE77E8994CCACA124B13FDAF4
	704BF49D76188487178E9E397DEEC44BA7B07131B387259D0B02F8B479CD18AA
	8DE3B9FC664D9EB82E361D66DA2D22A63692D695154E02AAC1934747C65E3E71
	E6CCA9578F1C3E6E68709F2840B30A9DFB31C87188C195DEA7162DBB5201BD4B
	474E7CC45DDC0DA9C9B3D4E0F9816810267FE2F82BF8AA2A3A3EB77F244A27F7
	E9573BCD40A7CA1C787700807BCDB470734D78DC692778D4E48129807EF2A557
	E666BB38D8FD350388ABBDA49B49E13363B38663765581FF8D0386EEE5F9D30E
	DA63A313278E1D39F1D22BA01AC497997D2C9101DF159F2B9C6847C1EFD7A7D2
	B8FBED589EE080FE40F1F3C7168E1F3DB970E8287D514F5F2203A09D00E98D52
	6A0303CD08D7A9FA5AB02D731AB28D8F8F8C8E1D9F3D7CECC84BDD71EF2BC06A
	809B4222DA3A9024C88981A8DBE520FFDB267992D07753C1938F8F4DE0EBD816
	0E1D838385EDF7B1DEA51E403073CE28076D683B4DF5FE91132E2F10817B8CBB
	A181A1B9E983F0A848181C9C991F1CFC35FCDE570077CC39F0C0B66756FC0C33
	1DF105C990B18F0C8FE2FB470ECD1F999F3B3C3539F5979D42E92B0008263C71
	539881140EF1B7B4259C83D7631E6324367D4C1E98999D99C7376E4E4F1D1C1E
	1EF92B01E82BE0C8A193B0E57C7173201870BE2CC9D20BBC29E96270707866EA
	E0F4F4ECECCC1C1235FF0F1EB52FE6BCD1A3FF6BA70E52100402008A76FF7B14
	881016CA3488B898308448880817D162202944130D74A198ADBA40CCA6FFAFF0
	E0EBF47054DBD877A5BD1696E32D96EE7C25AC4DE04471783A27B74C37AF7AFC
	6934017CCBEE5AEDA427ED50897D125DAE695E3CBAAE1DCD04C0545597CFAAF8
	3CC75000FC4300100000100000100000100000100000100000D01B2CE2B88AF2
	DC4FF40000000049454E44AE426082
	]]>
</Picture>

<Copyright SectVersion="1" SectionFlags="0" SubIdent="0">
	<Author>GRAPHISOFT</Author>
	<License>
		<Type>CC BY-ND</Type>
		<Version>3.0</Version>
	</License>
</Copyright>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_FWM SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
actualGUID = FROM_GUID

! ==============================================================================
! Subroutines
! ==============================================================================

	_autoID		= "E9BBAB34-37D1-48DA-9FB9-BB45193523B9"
	_startID	= "D3EB0EE0-F87E-4476-9B2D-93D6220F04E1"
	_endID		= "E026F0E5-0BF0-471C-84F7-D681DDAAD3C6"
gosub "paramNameChange_FWM"

	_startID	= "E026F0E5-0BF0-471C-84F7-D681DDAAD3C6"
	_endID		= "E922838D-B971-4E7C-86C2-DB8AFBFD2B30"
gosub "newparameters_FWM"

! ==============================================================================
! Set migration GUID
! ==============================================================================

setmigrationguid actualGUID

! ==============================================================================
end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! en
! ==============================================================================


! ==============================================================================
! newParameters
! ==============================================================================
"paramNameChange_FWM":
	if actualGuid = _startID | actualGuid = _autoID then
		_bHasParam = DELETED_PAR_VALUE("mtypes_m", _tempMoldingTypes)
		if _bHasParam then
			iMoldingStyle = _tempMoldingTypes
			parameters iMoldingStyle = iMoldingStyle
		endif
		actualGuid = _endID
	endif
return

! ==============================================================================
! newparameters: profileWidth, profileHeight
! ==============================================================================
"newparameters_FWM":
	if actualGuid = _startID then
		bHas = STORED_PAR_VALUE("B", _B)
		if bHas then
			profileWidth = _B
			parameters profileWidth = profileWidth
		endif
		
		bHas = STORED_PAR_VALUE("zzyzx", _zzyzx)
		if bHas then
			profileHeight = _zzyzx
			parameters profileHeight = profileHeight
		endif

		actualGuid = _endID
	endif
return

]]>
</Script_FWM>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_BWM SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
targetGUID = TO_GUID

! ==============================================================================
! Subroutines
! ==============================================================================

gosub "newparameters_BWM"

gosub "paramNameChange_BWM"

! ==============================================================================
! Set migration GUID
! ==============================================================================

setmigrationguid targetGuid

! ==============================================================================
end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! en
! ==============================================================================


! ==============================================================================
! newparameters: profileWidth, profileHeight
! ==============================================================================
"newparameters_BWM":
	if targetGUID # "" then
		
		! Migrate in every case
		B = profileWidth
		parameters B = B
		zzyzx = profileHeight
		parameters zzyzx = zzyzx
		
	endif
return

! ==============================================================================
! newParameters
! ==============================================================================
"paramNameChange_BWM":
	if targetGUID # "" then
		newparameter "mtypes", "String"
		newparameter "mtypes_m", "Integer"

		mtypes_m = iMoldingStyle
		mtypes = stMoldingStyle[iMoldingStyle]
		parameters mtypes_m = mtypes_m,
					mtypes = mtypes
	endif
return

]]>
</Script_BWM>

<MigrationTable SectVersion="1" SectionFlags="0" SubIdent="0">
	<MigrationTableElement>
		<MainGUID>E9BBAB34-37D1-48DA-9FB9-BB45193523B9</MainGUID>
		<Version>18</Version>
		<Name><![CDATA[""]]></Name>
		<AutoMigration>false</AutoMigration>
	</MigrationTableElement>
	<MigrationTableElement>
		<MainGUID>D3EB0EE0-F87E-4476-9B2D-93D6220F04E1</MainGUID>
		<Version>19</Version>
		<Name><![CDATA[""]]></Name>
		<AutoMigration>false</AutoMigration>
	</MigrationTableElement>
	<MigrationTableElement>
		<MainGUID>E026F0E5-0BF0-471C-84F7-D681DDAAD3C6</MainGUID>
		<Version>0</Version>
		<Name><![CDATA[""]]></Name>
		<AutoMigration>false</AutoMigration>
	</MigrationTableElement>
</MigrationTable>

</Symbol>
