<?xml version="1.0" encoding="UTF-8"?>
<Symbol IsArchivable="true" IsPlaceable="true" MainGUID="C2CC3B8F-6B72-4B1F-A287-8959BB959BBF" MigrationValue="Normal" Owner="0" Signature="1196644685" Version="38">
<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_3D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
IF gs_detlevel_3D_m = 0 THEN END

sectWidth	= sectWidth	/1000
sectDepth	= sectDepth	/1000
sectThick	= sectThick	/1000
Rad		= Rad /1000
toeRad		= toeRad /1000

! Revision of Cutting Angles

! Cut1,Cut2
gs_cutang12_bot = (-gs_cutang1_bot)	!!<gs_cutang12_bot=(-gs_cutang2_bot)
gs_cutang21_bot = gs_cutang2_bot		!!<gs_cutang21_bot=gs_cutang1_bot
gs_cutang43_up = (-gs_cutang4_up)		!!<gs_cutang43_up=(-gs_cutang3_up)
gs_cutang34_up = gs_cutang3_up		!!<gs_cutang34_up=(gs_cutang4_up)

! Cut3
gs_cutang23_bot=-gs_cutang2_bot
gs_cutang33_up=-gs_cutang3_up


pen gs_cont_pen
material col_mat
if gs_shadow=0 then
	shadow off
else
	shadow on
endif

if iInsertPoint <> INSERTPOINT_BOTTOM then
	mulz -1
	Angle=Angle*(-1)
endif

rotz 90
rotx 90
if iRotAxis = ROT_CROSSECT then rotx -Angle
if iRotAxis = ROT_AXIS then rotz Angle

if iInsertPoint = INSERTPOINT_CENTER then
	Addy -sectDepth/2
endif

unID=1

! ==============================================================================
! HOTSPOTS
! ==============================================================================

hotspot 0,sectDepth/2,0,unID : unID=unID+1				! BEAM LENGTH in AXIS
hotspot 0,sectDepth/2,0,unID,a,1+256 : unID=unID+1
hotspot 0,sectDepth/2,-1,unID,a,3 : unID=unID+1
hotspot 0,sectDepth/2,a,unID,a,2 : unID=unID+1

if iRotAxis = ROT_AXIS then

	if iInsertPoint <> INSERTPOINT_BOTTOM then temp_ang=temp_ang*(-1)
		rotz -(temp_ang)

		HOTSPOT 0,0,a/2,unID,temp_ang,6,Angle : unID=unID+1
		HOTSPOT 0,sectDepth,a/2,unID,temp_ang,4+128,Angle : unID=unID+1
		HOTSPOT 0,0,a/2+1,unID,temp_ang,7,Angle : unID=unID+1
		HOTSPOT -(sectDepth)*sin(temp_ang),(sectDepth)*cos(temp_ang),a/2,unID,temp_ang,5,Angle : unID=unID+1

	DEL 1

	! lower side
	if iCutModeBottom = CUTMODE_PERPENDICULAR then
		hotspot -sectWidth/2,sectDepth/1,sectWidth/2*tan(gs_cutang21_bot),unID : unID=unID+1
		hotspot -sectWidth/2,0,sectWidth/2*tan(gs_cutang21_bot),unID : unID=unID+1
		if iInsertPoint = INSERTPOINT_BOTTOM then
			hotspot sectWidth/2,0,-sectWidth/2*tan(gs_cutang12_bot),unID : unID=unID+1
		else
			hotspot sectWidth/2,sectDepth/1,-sectWidth/2*tan(gs_cutang12_bot),unID : unID=unID+1
		endif
	endif
	if iCutModeBottom = CUTMODE_ALONGHORIZONTAL then
		if iInsertPoint = INSERTPOINT_BOTTOM then
			hotspot -sectWidth/2,sectDepth/1,sectDepth/2*tan(gs_cutang1_bot),unID : unID=unID+1
			hotspot -sectWidth/2,0,-sectDepth/2*tan(gs_cutang23_bot),unID : unID=unID+1
			hotspot sectWidth/2,0,-sectDepth/2*tan(gs_cutang23_bot),unID : unID=unID+1
		else
			hotspot -sectWidth/2,0,sectDepth/2*tan(gs_cutang1_bot),unID : unID=unID+1
			hotspot -sectWidth/2,sectDepth/1,-sectDepth/2*tan(gs_cutang23_bot),unID : unID=unID+1
			hotspot sectWidth/2,sectDepth/1,-sectDepth/2*tan(gs_cutang23_bot),unID : unID=unID+1
		endif
	endif

	! upper side
	if iCutModeTop = CUTMODE_PERPENDICULAR then
		hotspot -sectWidth/2,sectDepth/1,a+sectWidth/2*tan(gs_cutang43_up),unID : unID=unID+1
		hotspot -sectWidth/2,0,a+sectWidth/2*tan(gs_cutang43_up),unID : unID=unID+1
		if iInsertPoint = INSERTPOINT_BOTTOM then
			hotspot sectWidth/2,0,a-sectWidth/2*tan(gs_cutang34_up),unID : unID=unID+1
		else
			hotspot sectWidth/2,sectDepth/1,a-sectWidth/2*tan(gs_cutang34_up),unID : unID=unID+1
		endif
    endif

	if iCutModeTop = CUTMODE_ALONGHORIZONTAL then
		if iInsertPoint = INSERTPOINT_BOTTOM then
			hotspot -sectWidth/2,sectDepth/1,a+sectDepth/2*tan(gs_cutang33_up),unID : unID=unID+1
			hotspot -sectWidth/2,0,a-sectDepth/2*tan(gs_cutang4_up),unID : unID=unID+1
			hotspot sectWidth/2,0,a-sectDepth/2*tan(gs_cutang4_up),unID : unID=unID+1
		else
			hotspot -sectWidth/2,0,a+sectDepth/2*tan(gs_cutang33_up),unID : unID=unID+1
			hotspot -sectWidth/2,sectDepth/1,a-sectDepth/2*tan(gs_cutang4_up),unID : unID=unID+1
			hotspot sectWidth/2,sectDepth/1,a-sectDepth/2*tan(gs_cutang4_up),unID : unID=unID+1
		endif
	endif
endif

unID=100
if iRotAxis = ROT_CROSSECT then
	! rotation of axis

	if iInsertPoint <> INSERTPOINT_BOTTOM then temp_ang=temp_ang*(-1)
	if iInsertPoint = INSERTPOINT_CENTER then Addy sectDepth/2

	ROTx temp_ang
		HOTSPOT 0,0,0,unID,temp_ang,6,Angle : unID=unID+1
		HOTSPOT 0,0,1,unID,temp_ang,4+128,Angle : unID=unID+1
		HOTSPOT -1,0,0,unID,temp_ang,7,Angle : unID=unID+1
		HOTSPOT 0,a/2*sin(temp_ang),a/2*cos(temp_ang),unID,temp_ang,5,Angle : unID=unID+1
	DEL 1

	if iInsertPoint = INSERTPOINT_CENTER then DEL 1

	! lower side
	IF iCutModeBottom = CUTMODE_PERPENDICULAR then
		hotspot -sectWidth/2,sectDepth/1,sectWidth/2*tan(gs_cutang21_bot),unID : unID=unID+1
		hotspot -sectWidth/2,0,sectWidth/2*tan(gs_cutang21_bot),unID : unID=unID+1
		IF iInsertPoint = INSERTPOINT_BOTTOM then
			hotspot sectWidth/2,0,-sectWidth/2*tan(gs_cutang12_bot),unID : unID=unID+1
		else
			hotspot sectWidth/2,sectDepth/1,-sectWidth/2*tan(gs_cutang12_bot),unID : unID=unID+1
		endif
	endif
	IF iCutModeBottom = CUTMODE_ALONGVERTICAL then
		hotspot -sectWidth/2,sectDepth/1,sectDepth/2*tan(Angle)+(sectWidth/2*tan(gs_cutang21_bot)/cos(Angle)),unID : unID=unID+1
		hotspot -sectWidth/2,0,-sectDepth/2*tan(Angle)+(sectWidth/2*tan(gs_cutang21_bot)/cos(Angle)),unID : unID=unID+1
		IF iInsertPoint = INSERTPOINT_BOTTOM then
			hotspot sectWidth/2,0,-sectDepth/2*tan(Angle)-(sectWidth/2*tan(gs_cutang12_bot)/cos(Angle)),unID : unID=unID+1
		else
			hotspot sectWidth/2,sectDepth/1,sectDepth/2*tan(Angle)-(sectWidth/2*tan(gs_cutang12_bot)/cos(Angle)),unID : unID=unID+1
		endif
	endif
	IF iCutModeBottom = CUTMODE_ALONGHORIZONTAL then
		IF iInsertPoint = INSERTPOINT_BOTTOM then
			hotspot -sectWidth/2,sectDepth/1,sectDepth/2*tan(gs_cutang1_bot),unID : unID=unID+1
			hotspot -sectWidth/2,0,-sectDepth/2*tan(gs_cutang23_bot),unID : unID=unID+1
			hotspot sectWidth/2,0,-sectDepth/2*tan(gs_cutang23_bot),unID : unID=unID+1
		else
			hotspot -sectWidth/2,0,sectDepth/2*tan(gs_cutang1_bot),unID : unID=unID+1
			hotspot -sectWidth/2,sectDepth/1,-sectDepth/2*tan(gs_cutang23_bot),unID : unID=unID+1
			hotspot sectWidth/2,sectDepth/1,-sectDepth/2*tan(gs_cutang23_bot),unID : unID=unID+1
		endif
	endif

	! upper side
	if iCutModeTop = CUTMODE_PERPENDICULAR then
		hotspot -sectWidth/2,sectDepth/1,a+sectWidth/2*tan(gs_cutang43_up),unID : unID=unID+1
		hotspot -sectWidth/2,0,a+sectWidth/2*tan(gs_cutang43_up),unID : unID=unID+1
		if iInsertPoint = INSERTPOINT_BOTTOM then
			hotspot sectWidth/2,0,a-sectWidth/2*tan(gs_cutang34_up),unID : unID=unID+1
		else
			hotspot sectWidth/2,sectDepth/1,a-sectWidth/2*tan(gs_cutang34_up),unID : unID=unID+1
		endif
	endif
	
	if iCutModeTop = CUTMODE_ALONGVERTICAL then
		hotspot -sectWidth/2,sectDepth/1,a+sectDepth/2*tan(Angle)+(sectWidth/2*tan(gs_cutang43_up)/cos(Angle)),unID : unID=unID+1
		hotspot -sectWidth/2,0,a-sectDepth/2*tan(Angle)+(sectWidth/2*tan(gs_cutang43_up)/cos(Angle)),unID : unID=unID+1
		if iInsertPoint = INSERTPOINT_BOTTOM then
			hotspot sectWidth/2,0,a-sectDepth/2*tan(Angle)-(sectWidth/2*tan(gs_cutang34_up)/cos(Angle)),unID : unID=unID+1
		else
			hotspot sectWidth/2,sectDepth/1,a+sectDepth/2*tan(Angle)-(sectWidth/2*tan(gs_cutang34_up)/cos(Angle)),unID : unID=unID+1
		endif
	endif
	
	if iCutModeTop = CUTMODE_ALONGHORIZONTAL then
		if iInsertPoint = INSERTPOINT_BOTTOM then
			hotspot sectWidth/2,0,a-sectDepth/2*tan(gs_cutang4_up),unID : unID=unID+1
			hotspot -sectWidth/2,sectDepth/1,a+sectDepth/2*tan(gs_cutang33_up),unID : unID=unID+1
			hotspot -sectWidth/2,0,a-sectDepth/2*tan(gs_cutang4_up),unID : unID=unID+1
		else
			hotspot sectWidth/2,sectDepth/1,a-sectDepth/2*tan(gs_cutang4_up),unID : unID=unID+1
			hotspot -sectWidth/2,0,a+sectDepth/2*tan(gs_cutang33_up),unID : unID=unID+1
			hotspot -sectWidth/2,sectDepth/1,a-sectDepth/2*tan(gs_cutang4_up),unID : unID=unID+1
		endif
	endif
endif


! ==============================================================================
! CUTPOLY
! ==============================================================================
nCutPoly = 0

! Cutplanes on the bottom

dz = 0

IF iCutModeBottom = CUTMODE_PERPENDICULAR then
	ROTx -90
	if ABS(gs_cutang2_bot) > EPS or ABS(gs_cutang1_bot) > EPS then
		dz=max(2*sectWidth/2*tan(gs_cutang21_bot),2*sectWidth/2*tan(-gs_cutang1_bot),1)
		CUTPOLYA 4,0,0,
				0,0,15,
				sectWidth/2,sectWidth/2*tan(gs_cutang12_bot),15,
				sectWidth/2,dz,15,
				0,dz,15
		CUTPOLYA 4,0,0,
				0,0,15,
				-sectWidth/2,sectWidth/2*tan(-gs_cutang21_bot),15,
				-sectWidth/2,dz,15,
				0,dz,15
		nCutPoly = nCutPoly + 2
	endif
	DEL 1
endif

if iCutModeBottom = CUTMODE_ALONGVERTICAL then
	  if iRotAxis = ROT_AXIS then
		ROTx -90
		ROTy -Angle
			IF ABS(gs_cutang2_bot)>0.001 or ABS(gs_cutang1_bot)>0.001 THEN
			dz=max(2*((sectWidth/2)*sin(Angle)+(sectDepth/2)*cos(Angle))*tan(gs_cutang12_bot), \
        2*((sectWidth/2)*sin(Angle)+(sectDepth/2)*cos(Angle))*tan(gs_cutang21_bot),1)
			ADDy 0
			CUTPOLYA 4,0,0,
				0,0,15,
				(sectWidth/1)*sin(Angle)+(sectDepth/2)*cos(Angle),((sectWidth/1)*sin(Angle)+(sectDepth/2)*cos(Angle))*tan(gs_cutang12_bot),15,
				sectWidth/1+0.001,dz,15,
				0,dz,15

			CUTPOLYA 4,0,0,
				0,0,15,
				-sectWidth/2-0.005,-sectWidth/2*tan(gs_cutang21_bot),15,
				-sectWidth/2-0.005,dz,15,
				0,dz,15
			DEL 1
			ENDIF
		DEL 2
	  endif

	  if iRotAxis = ROT_CROSSECT then
		ROTx Angle-90
		ADDy sectDepth/2*sin(Angle)
			dz=max(2*sectWidth/2*tan(gs_cutang21_bot)+sectDepth*sin(Angle),2*sectWidth/2*tan(gs_cutang12_bot)+sectDepth*sin(Angle),1)
			dzz=dz*cos(Angle)+ABS(sectDepth*sin(Angle))
			CUTPOLYA 4,0,0,
				0,0,15,
				sectWidth/2,sectWidth/2*tan(gs_cutang12_bot),15,
				sectWidth/2,dzz,15,
				0,dzz,15
			CUTPOLYA 4,0,0,
				0,0,15,
				-sectWidth/2,-sectWidth/2*tan(gs_cutang21_bot),15,
				-sectWidth/2,dzz,15,
				0,dzz,15
		DEL 2
	  endif
endif

if iCutModeBottom = CUTMODE_ALONGHORIZONTAL then
	IF ABS(gs_cutang1_bot)>0.001 or ABS(gs_cutang2_bot)>0.001 then
		dz = abs(max((-sectDepth/1)*tan(gs_cutang1_bot),(sectDepth/1)*tan(gs_cutang23_bot),1))
		ADDy sectDepth/2
		ROTy 90
		ROTz 90
		if iInsertPoint = INSERTPOINT_BOTTOM then
			CUTPOLYA 6,0,0,
					(sectDepth/1),-dz,15,
					(sectDepth/1),(sectDepth/1)*tan(gs_cutang1_bot),15,
					0,0,15,
					-(sectDepth/1),-(sectDepth/1)*tan(gs_cutang23_bot),15,
					-(sectDepth/1),-dz,15,
					0,-dz,15
		else
			CUTPOLYA 6,0,0,
					(sectDepth/1),-dz,15,
					(sectDepth/1),(sectDepth/1)*tan(-gs_cutang23_bot),15,
					0,0,15,
					-(sectDepth/1),-(sectDepth/1)*tan(-gs_cutang1_bot),15,
					-(sectDepth/1),-dz,15,
					0,-dz,15
		endif
		DEL 3
	endif
endif

! --- Cutplanes on the top ---

dz2 = 0
addz a
if iCutModeTop = CUTMODE_PERPENDICULAR then
	ROTx -90
	if ABS(gs_cutang4_up)>0.001 or ABS(gs_cutang3_up)>0.001 then
		dz2 = max(1,ABS(2*((sectWidth/2)*tan(gs_cutang43_up))),ABS(2*((sectWidth/2)*tan(-gs_cutang34_up))))
		CUTPOLYA 4,0,0,
				0,0,15,
				sectWidth/2,-sectWidth/2*tan(-gs_cutang34_up),15,
				sectWidth/2,-dz2,15,
				0,-dz2,15
		CUTPOLYA 4,0,0,
				0,0,15,
				-sectWidth/2,-sectWidth/2*tan(gs_cutang43_up),15,
				-sectWidth/2,-dz2,15,
				0,-dz2,15
	ENDIF
	DEL 1
endif
if iCutModeTop = CUTMODE_ALONGVERTICAL then
	if iRotAxis = ROT_CROSSECT THEN ADDz -sectDepth/2*tan(Angle)
	ROTx Angle-90
	dz2 = max(ABS(2*sectWidth/2*tan(gs_cutang43_up)+sectDepth*sin(Angle)),ABS(2*sectWidth/2*tan(gs_cutang34_up)+sectDepth*sin(Angle)),1)
	dzz2 = dz2*cos(Angle)+ABS(sectDepth*sin(Angle))
	CUTPOLYA 4,0,0,
			0,0,15,
			sectWidth/2,-sectWidth/2*tan(-gs_cutang34_up),15,
			sectWidth/2,-dzz2,15,
			0,-dzz2,15
	CUTPOLYA 4,0,0,
			0,0,15,
			-sectWidth/2,-sectWidth/2*tan(gs_cutang43_up),15,
			-sectWidth/2,-dzz2,15,
			0,-dzz2,15
	DEL 1
	if iRotAxis = ROT_CROSSECT then DEL 1
endif

if iCutModeTop = CUTMODE_ALONGHORIZONTAL then
	if ABS(gs_cutang3_up)>0.001 or ABS(gs_cutang4_up)>0.001 then
		dz2=max(ABS(sectDepth/1*tan(gs_cutang33_up)),ABS(sectDepth/1*tan(gs_cutang4_up)),1)
		ADDy sectDepth/2
		ROTy 90
		ROTz 90
		if iInsertPoint = INSERTPOINT_BOTTOM then
			CUTPOLYA 6,0,0,
				(sectDepth/1)/cos(gs_cutang33_up),dz2,15,
				(sectDepth/1)/cos(gs_cutang4_up),((sectDepth/1)/cos(gs_cutang4_up))*tan(gs_cutang33_up),15,
				0,0,15,
				-(sectDepth/1)/cos(gs_cutang33_up),((sectDepth/1)/cos(gs_cutang33_up))*tan(-gs_cutang4_up),15,
				-(sectDepth/1)/cos(gs_cutang33_up),dz2,15,
				0,dz2,15
		else
			CUTPOLYA 6,0,0,
				(sectDepth/1)/cos(-gs_cutang4_up),dz2,15,
				(sectDepth/1)/cos(-gs_cutang33_up),((sectDepth/1)/cos(-gs_cutang33_up))*tan(-gs_cutang4_up),15,
				0,0,15,
				-(sectDepth/1)/cos(-gs_cutang4_up),((sectDepth/1)/cos(-gs_cutang4_up))*tan(gs_cutang33_up),15,
				-(sectDepth/1)/cos(-gs_cutang4_up),dz2,15,
				0,dz2,15
		endif
		DEL 3
	endif
endif
del 1

ADDz -dz

! ==============================================================================
!
! ==============================================================================

if iInsertPoint <> INSERTPOINT_BOTTOM then
	addy sectDepth
	muly -1
endif

IF  iFlangePos = FLANGEPOS_TOP THEN
	rotz 180
	roty 180
	ADDz -(a+dz+dz2)
	ADDy -sectDepth
ENDIF

! SIMPLE
ADDx -sectWidth/2

if gs_detlevel_3D_m = 1 | GLOB_CONTEXT=2 then
	PRISM_ 7, a+dz+dz2,
			0,0,15,
			sectWidth,0,15,
			sectWidth,sectThick,15,
			sectThick,sectThick,15,
			sectThick,sectDepth,15,
			0,sectDepth,15,
			0,0,-1
else
	RESOL gs_resol

	PRISM_ 13,a+dz+dz2,
			sectWidth,0,15,
			sectWidth,sectThick-toeRad,79,
			sectWidth-toeRad,sectThick-toeRad,979,
			sectWidth-toeRad,sectThick,3079,
			sectThick+Rad,sectThick,79,
			sectThick+Rad,sectThick+Rad,979,
			sectThick,sectThick+Rad,3079,
			sectThick,sectDepth-toeRad,79,
			sectThick-toeRad,sectDepth-toeRad,979,
			sectThick-toeRad,sectDepth,3079,
			0,sectDepth,15,
			0,0,15,
			sectWidth,0,-1

endif
del 1

IF  iFlangePos = FLANGEPOS_TOP  THEN DEL 4

IF iInsertPoint <> INSERTPOINT_BOTTOM THEN DEL 2

DEL 3

IF ABS(gs_cutang1_bot)>0.001 or ABS(gs_cutang2_bot)>0.001 THEN
	IF iCutModeBottom = CUTMODE_PERPENDICULAR THEN :CUTEND:CUTEND: ENDIF
	IF iCutModeBottom = CUTMODE_ALONGVERTICAL AND iRotAxis = ROT_AXIS THEN :CUTEND:CUTEND: ENDIF
	IF iCutModeBottom = CUTMODE_ALONGHORIZONTAL THEN :CUTEND: ENDIF
ENDIF
!IF gs_cutang1_bot>=0 or gs_cutang2_bot>=0 THEN
	IF iCutModeBottom = CUTMODE_ALONGVERTICAL AND iRotAxis = ROT_CROSSECT THEN :CUTEND:CUTEND: ENDIF
!ENDIF

IF ABS(gs_cutang3_up)>0.001 or ABS(gs_cutang4_up)>0.001 THEN
	IF iCutModeTop = CUTMODE_PERPENDICULAR THEN :CUTEND:CUTEND: ENDIF
	IF iCutModeTop = CUTMODE_ALONGHORIZONTAL THEN :CUTEND: ENDIF
ENDIF
!IF gs_cutang3_up>=0 or gs_cutang4_up>=0 THEN
	IF iCutModeTop = CUTMODE_ALONGVERTICAL AND iRotAxis = ROT_CROSSECT THEN :CUTEND:CUTEND: ENDIF
!ENDIF

DEL 1

IF iInsertPoint <> INSERTPOINT_BOTTOM THEN DEl 1
IF iInsertPoint = INSERTPOINT_CENTER THEN DEL 1

End
]]>
</Script_3D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_2D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[

sectWidth=sectWidth/1000
sectDepth=sectDepth/1000
sectThick=sectThick/1000
Rad=Rad/1000
toeRad=toeRad/1000

PEN gs_cont_pen
FILL gs_fill_type
LINE_TYPE 1

hLineID = 1000

IF Angle=0 THEN GOTO 100
IF Angle=90 OR Angle=-90 THEN GOTO 200
IF Angle>0 AND Angle<90 OR Angle<0 AND Angle>-90 THEN GOTO 300


100:


unID=100

IF (axis=1) THEN
	PEN axis_line_pen
	LINE_TYPE axis_line_type
	LINE2 0, 0, A*cos(Angle),0
	HOTLINE2 0, 0, A*cos(Angle),0, hLineID
ENDIF

HOTSPOT2 0, 0, unID, a, 1+256: unID=unID+1	! AXIS (Length)
HOTSPOT2 -1, 0, unID, a, 3: unID=unID+1
HOTSPOT2 a, 0, unID, a, 2: unID=unID+1

HOTSPOT2 a/2, 0,unID : unID=unID+1			! AXIS (Length/2)


PEN gs_cont_pen
FILL gs_fill_type
LINE_TYPE 1

IF axis=1 AND only_axis=0 OR axis=0 THEN


	110:


	IF iCutModeBottom = CUTMODE_PERPENDICULAR OR iCutModeBottom = CUTMODE_ALONGVERTICAL THEN

		! Cut. Angle (1)
		IF gs_cutang1_bot=0 THEN
			P1xCutMod12=0
		ELSE
			P1xCutMod12=(sectWidth/2)*TAN(gs_cutang1_bot)
		ENDIF

		! Cut. Angle (2)
		IF gs_cutang2_bot=0 THEN
			P2xCutMod12=0
		ELSE
			P2xCutMod12=(sectWidth/2)*TAN(gs_cutang2_bot)
		ENDIF

		! Contour
		POLY2_b 6, 1, gs_fill_pen, gs_back_pen,
				0,0,1,
				P1xCutMod12,sectWidth/2,1,
				A/2,sectWidth/2,0,
				A/2,-sectWidth/2,1,
				P2xCutMod12,-sectWidth/2,1,
				0,0,-1

		!!! *** Background Fill
		IF GLOB_CONTEXT<>22 THEN	!! (DO NOT SHOW FILL IN HOTSPOT EDITING)
			POLY2_b 6, 2+64, gs_fill_pen, gs_back_pen,
					0,0,0,
					P1xCutMod12,sectWidth/2,0,
					A/2,sectWidth/2,0,
					A/2,-sectWidth/2,0,
					P2xCutMod12,-sectWidth/2,0,
					0,0,-1
		ENDIF

		! Hotspots
		! Cut. Angle (1)
		P1CutMod12_RR=(sectWidth/2)/COS(gs_cutang1_bot)

		IF bCutPlanes THEN
			ROT2 -30
			unID=110
			HOTSPOT2 0,0, unID, temp_cutang1_bot, 6+512, gs_cutang1_bot : unID=unID+1 !Center
			HOTSPOT2 -P1CutMod12_RR,0, unID, temp_cutang1_bot, 4+128,  gs_cutang1_bot : unID=unID+1 !Base
			HOTSPOT2 -COS(temp_cutang1_bot) * P1CutMod12_RR, SIN(temp_cutang1_bot) * P1CutMod12_RR,  unID, \
        temp_cutang1_bot, 5,  gs_cutang1_bot : unID=unID+1 !Move
			DEL 1
		ELSE
			unID=113
			HOTSPOT2 0,sectWidth/2 : unID=unID+1
		ENDIF


		! Cut. Angle (2)
		P2CutMod12_RR=(sectWidth/2)/COS(gs_cutang2_bot)

		IF bCutPlanes THEN
			ROT2 30
			unID=114
			HOTSPOT2 0,0, unID, temp_cutang2_bot, 6, gs_cutang2_bot : unID=unID+1 !Center
			HOTSPOT2 -P2CutMod12_RR,0, unID, temp_cutang2_bot, 4+128,  gs_cutang2_bot : unID=unID+1 !Base
			HOTSPOT2 -COS(temp_cutang2_bot) * P2CutMod12_RR, -SIN(temp_cutang2_bot) * P2CutMod12_RR,  unID, \
        temp_cutang2_bot, 5,  gs_cutang2_bot : unID=unID+1 !Move
			DEL 1
		ELSE
			unID=117
			HOTSPOT2 0,-sectWidth/2 : unID=unID+1
		ENDIF

	ENDIF

	120:



	IF iCutModeTop = CUTMODE_PERPENDICULAR OR iCutModeTop = CUTMODE_ALONGVERTICAL THEN

		! Cut. Angle (3)
		IF gs_cutang3_up=0 THEN
			P3xCutMod12=0
		ELSE
			P3xCutMod12=(sectWidth/2)*TAN(gs_cutang3_up)
		ENDIF

		! Cut. Angle (4)
		IF gs_cutang4_up=0 THEN
			P4xCutMod12=0
		ELSE
			P4xCutMod12=(sectWidth/2)*TAN(gs_cutang4_up)
		ENDIF

		! Contour
		POLY2_b 6, 1, gs_fill_pen, gs_back_pen,
				A,0,1,
				A-P3xCutMod12,sectWidth/2,1,
				A/2,sectWidth/2,0,
				A/2,-sectWidth/2,1,
				A-P4xCutMod12,-sectWidth/2,1,
				A,0,-1

		! Contour and Background Fill
		IF GLOB_CONTEXT<>22 THEN			! (DO NOT SHOW FILL IN HOTSPOT EDITING)
			POLY2_b 6, 2+64, gs_fill_pen, gs_back_pen,
					A,0,0,
					A-P3xCutMod12,sectWidth/2,0,
					A/2,sectWidth/2,0,
					A/2,-sectWidth/2,0,
					A-P4xCutMod12,-sectWidth/2,0,
					A,0,-1
		ENDIF

		! Hotspots
		! Cut. Angle (3)
		P3CutMod3_RR=(sectWidth/2)/COS(gs_cutang3_up)


		IF bCutPlanes THEN

			ADD2 A,0
			ROT2 30
			unID=120
			HOTSPOT2 0,0, unID, temp_cutang3_up, 6, gs_cutang3_up : unID=unID+1 !Center
			HOTSPOT2 P3CutMod3_RR,0, unID, temp_cutang3_up, 4+128,  gs_cutang3_up : unID=unID+1 !Base
			HOTSPOT2 COS(temp_cutang3_up) * P3CutMod3_RR, SIN(temp_cutang3_up) * P3CutMod3_RR,  unID, \
        temp_cutang3_up, 5,  gs_cutang3_up : unID=unID+1 !Move
			DEL 2
		ELSE
			unID=123
			HOTSPOT2 a,sectWidth/2 : unID=unID+1
		ENDIF


		! Cut. Angle (4)
		P4CutMod3_RR=(sectWidth/2)/COS(gs_cutang4_up)

		IF bCutPlanes THEN
			ADD2 A,0
			ROT2 -30
			unID=124
			HOTSPOT2 0,0, unID, temp_cutang4_up, 6+512, gs_cutang4_up : unID=unID+1 !Center
			HOTSPOT2 P4CutMod3_RR,0, unID, temp_cutang4_up, 4+128,  gs_cutang4_up : unID=unID+1 !Base
			HOTSPOT2 COS(temp_cutang4_up) * P4CutMod3_RR, -SIN(temp_cutang4_up) * P4CutMod3_RR,  unID, \
        temp_cutang4_up, 5,  gs_cutang4_up : unID=unID+1 !Move
			DEL 2

		ELSE
			unID=127
			HOTSPOT2 a,-sectWidth/2 : unID=unID+1
		ENDIF


	ENDIF


	130:

	unID=130

	IF iCutModeBottom = CUTMODE_ALONGHORIZONTAL THEN

		IF gs_cutang1_bot=0 THEN
			P1xCutMod3=0
		ELSE
			P1xCutMod3=(sectWidth/2)*TAN(gs_cutang1_bot)
		ENDIF


		IF gs_cutang2_bot=0 THEN
			P2xCutMod3=0
		ELSE
			P2xCutMod3=(sectWidth/2)*TAN(gs_cutang2_bot)
		ENDIF


		! MIN. Horiz. Length

		tempP12CutMod3=MIN(0,P1xCutMod3,P2xCutMod3)


		! Lines Types
		IF P1xCutMod3<0 THEN
			tempLineOrigo=DashedLineType
		ELSE
			tempLineOrigo=1
		ENDIF

		IF P2xCutMod3<P1xCutMod3 AND  P2xCutMod3<=0 THEN
			tempLineAng2=1
		ELSE
			tempLineAng2=DashedLineType
		ENDIF

		! ORIGO
		LINE_TYPE tempLineOrigo
		IF gs_cutang1_bot<>-gs_cutang2_bot OR -gs_cutang1_bot<>gs_cutang2_bot THEN LINE2 0,sectWidth/2,0,-sectWidth/2

		! Cut. Angle (1)
		LINE_TYPE 1
		LINE2 P1xCutMod3,sectWidth/2,P1xCutMod3,-sectWidth/2
		IF gs_ShowMoreHtps2D=1 THEN HOTSPOT2 P1xCutMod3,0,unID : unID=unID+1

		! Cut. Angle (2)
		LINE_TYPE tempLineAng2
		IF gs_cutang1_bot<>gs_cutang2_bot THEN
			LINE2 P2xCutMod3,sectWidth/2,P2xCutMod3,-sectWidth/2
			IF gs_ShowMoreHtps2D=1 THEN HOTSPOT2 P2xCutMod3,0,unID : unID=unID+1
		ENDIF

		LINE_TYPE 1

		! Contour
		POLY2_b 5, 1, gs_fill_pen, gs_back_pen,
				tempP12CutMod3,sectWidth/2,1,
				A/2,sectWidth/2,0,
				A/2,-sectWidth/2,1,
				tempP12CutMod3,-sectWidth/2,0,
				tempP12CutMod3,sectWidth/2,-1

		IF gs_ShowMoreHtps2D=1 THEN HOTSPOT2 tempP12CutMod3,sectWidth/2,unID : unID=unID+1
		IF gs_ShowMoreHtps2D=1 THEN HOTSPOT2 tempP12CutMod3,-sectWidth/2,unID : unID=unID+1

		! Background Fill
		IF GLOB_CONTEXT<>22 THEN	!! (DO NOT SHOW FILL IN HOTSPOT EDITING)
			POLY2_b 5, 2+64, gs_fill_pen, gs_back_pen,
					tempP12CutMod3,sectWidth/2,0,
					A/2,sectWidth/2,0,
					A/2,-sectWidth/2,0,
					tempP12CutMod3,-sectWidth/2,0,
					tempP12CutMod3,sectWidth/2,-1
		ENDIF

	ENDIF

	140:

	unID=140

	IF iCutModeTop = CUTMODE_ALONGHORIZONTAL THEN

		IF gs_cutang3_up=0 THEN
			P3xCutMod3=0
		ELSE
			P3xCutMod3=(sectWidth/2)*TAN(gs_cutang3_up)
		ENDIF


		IF gs_cutang4_up=0 THEN
			P4xCutMod3=0
		ELSE
			P4xCutMod3=(sectWidth/2)*TAN(gs_cutang4_up)
		ENDIF


		! MIN. Horiz. Length

		tempP34CutMod3=MIN(0,P3xCutMod3,P4xCutMod3)


		! Lines Types
		IF P3xCutMod3<0 THEN
			tempLineOrigo=DashedLineType
		ELSE
			tempLineOrigo=1
		ENDIF

		IF P4xCutMod3<P3xCutMod3 AND  P4xCutMod3<=0 THEN
			tempLineAng4=1
		ELSE
			tempLineAng4=DashedLineType
		ENDIF

		! ORIGO
		LINE_TYPE tempLineOrigo
		IF gs_cutang3_up<>-gs_cutang4_up OR -gs_cutang3_up<>gs_cutang4_up THEN LINE2 A,sectWidth/2,A,-sectWidth/2

		! Cut. Angle (3)
		LINE_TYPE 1
		LINE2 A-P3xCutMod3,sectWidth/2,A-P3xCutMod3,-sectWidth/2
		IF gs_ShowMoreHtps2D=1 THEN HOTSPOT2 A-P3xCutMod3,0,unID : unID=unID+1

		! Cut. Angle (4)
		LINE_TYPE tempLineAng4
		IF gs_cutang3_up<>gs_cutang4_up THEN
			LINE2 A-P4xCutMod3,sectWidth/2,A-P4xCutMod3,-sectWidth/2
			IF gs_ShowMoreHtps2D=1 THEN HOTSPOT2 A-P4xCutMod3,0,unID : unID=unID+1
		ENDIF

		LINE_TYPE 1

		! Contour
		POLY2_b 5, 1, gs_fill_pen, gs_back_pen,
				A-tempP34CutMod3,sectWidth/2,1,
				A/2,sectWidth/2,0,
				A/2,-sectWidth/2,1,
				A-tempP34CutMod3,-sectWidth/2,1,
				A-tempP34CutMod3,sectWidth/2,-1

		IF gs_ShowMoreHtps2D=1 THEN HOTSPOT2 A-tempP34CutMod3,sectWidth/2,unID : unID=unID+1
		IF gs_ShowMoreHtps2D=1 THEN HOTSPOT2 A-tempP34CutMod3,-sectWidth/2,unID : unID=unID+1

		! Background Fill
		IF GLOB_CONTEXT<>22 THEN	!! (DO NOT SHOW FILL IN HOTSPOT EDITING)
			POLY2_b 5, 1+2+4+64, gs_fill_pen, gs_back_pen,
					A-tempP34CutMod3,sectWidth/2,0,
					A/2,sectWidth/2,0,
					A/2,-sectWidth/2,0,
					A-tempP34CutMod3,-sectWidth/2,0,
					A-tempP34CutMod3,sectWidth/2,-1
		ENDIF


	ENDIF

ENDIF

150:
END


200:

210:

unID=210

IF iRotAxis = ROT_AXIS THEN

PEN gs_cont_pen
IF axis=1 AND only_axis=0 OR axis=0 THEN PROJECT2{2} 3,270,3+32, gs_back_pen,0,0,0

	IF iInsertPoint = INSERTPOINT_TOP AND Angle=90 OR iInsertPoint = INSERTPOINT_BOTTOM AND Angle=-90 THEN ADD2 0,sectDepth/2
	IF iInsertPoint = INSERTPOINT_BOTTOM AND Angle=90 OR iInsertPoint = INSERTPOINT_TOP AND Angle=-90 THEN ADD2 0,-sectDepth/2

	HOTSPOT2 0, 0, unID, a, 1+256: unID=unID+1	!!! AXIS (Length)
	HOTSPOT2 -1, 0, unID, a, 3: unID=unID+1
	HOTSPOT2 a, 0, unID, a, 2: unID=unID+1

	HOTSPOT2 a/2, 0,unID : unID=unID+1			!!! AXIS (Length/2)

	IF gs_ShowMoreHtps2D=1 THEN
		HOTSPOT2 0, sectDepth/2,unID : unID=unID+1			!!! BOUNDING BOX
		HOTSPOT2 A, sectDepth/2,unID : unID=unID+1
		HOTSPOT2 A, -sectDepth/2,unID : unID=unID+1
		HOTSPOT2 0, -sectDepth/2,unID : unID=unID+1
	ENDIF

	IF (axis=1) THEN
		PEN axis_line_pen
		LINE_TYPE axis_line_type

		LINE2 0, 0, A,0
		HOTLINE2 0, 0, A,0, hLineID
	ENDIF

	IF iInsertPoint <> INSERTPOINT_CENTER THEN DEL 1

PEN gs_cont_pen

ENDIF


220:

unID=220

IF iRotAxis = ROT_CROSSECT THEN

	PEN gs_cont_pen

	IF iInsertPoint = INSERTPOINT_TOP AND Angle=90 OR iInsertPoint = INSERTPOINT_BOTTOM AND Angle=-90 THEN ADD2 0,-sectWidth/2
	IF iInsertPoint = INSERTPOINT_CENTER THEN ADD2 -sectDepth/2,-sectWidth/2
	IF iInsertPoint = INSERTPOINT_BOTTOM AND Angle=90 OR iInsertPoint = INSERTPOINT_TOP AND Angle=-90 THEN ADD2 -sectDepth,-sectWidth/2

	HOTSPOT2 sectDepth/2,sectWidth/2,unID : unID=unID+1		!!! ORIGO
	IF gs_ShowMoreHtps2D=1 THEN HOTSPOT2 sectDepth,sectWidth/2,unID : unID=unID+1
	IF gs_ShowMoreHtps2D=1 THEN HOTSPOT2 0,sectWidth/2,unID : unID=unID+1

	IF axis=1 AND only_axis=0 OR axis=0 THEN

		IF iInsertPoint = INSERTPOINT_TOP AND Angle=90 OR iInsertPoint = INSERTPOINT_BOTTOM AND Angle=90 THEN
			MUL2 -1,1
			ADD2 -sectDepth,0
		ENDIF

		POLY2_b 7, 1+2+4+64, gs_fill_pen, gs_back_pen,
				0,0,1+32,
				0,sectWidth,1+32,
				sectThick,sectWidth,1+32,
				sectThick,sectThick,1+32,
				sectDepth,sectThick,1+32,
				sectDepth,0,1+32,
				0,0,-1

		IF gs_ShowMoreHtps2D=1 THEN
			HOTSPOT2 sectDepth,sectWidth,unID : unID=unID+1	!!! BOUNDING BOX
			HOTSPOT2 sectDepth,0,unID : unID=unID+1
			HOTSPOT2 0,0,unID : unID=unID+1
			HOTSPOT2 0,sectWidth,unID : unID=unID+1
		ENDIF

		IF iInsertPoint = INSERTPOINT_TOP AND Angle=90 OR iInsertPoint = INSERTPOINT_BOTTOM AND Angle=90 THEN DEL 2

	ENDIF

	IF (axis=1) THEN
		PEN axis_line_pen
		LINE_TYPE axis_line_type

		LINE2 -0.05, sectWidth/2, sectDepth+0.05,sectWidth/2
		LINE2 sectDepth/2, -0.05, sectDepth/2,sectWidth+0.05

		PEN gs_cont_pen

		IF gs_ShowMoreHtps2D=1 THEN HOTSPOT2 sectDepth/2,0,unID : unID=unID+1
		IF gs_ShowMoreHtps2D=1 THEN HOTSPOT2 sectDepth/2,sectWidth,unID : unID=unID+1

	ENDIF

	DEL 1

	PEN gs_cont_pen

ENDIF
END

300:

unID=300

PEN gs_cont_pen

IF axis=1 AND only_axis=0 OR axis=0 THEN PROJECT2{2} 3,270,3+32, gs_back_pen,0,0,0
IF (axis=1) THEN
	PEN axis_line_pen
	LINE_TYPE axis_line_type
	IF iRotAxis = ROT_AXIS THEN
		LINE2 0, 0, A,0
		HOTLINE2 0, 0, A,0, hLineID

		HOTSPOT2 0, 0, unID, a, 1+256: unID=unID+1	!!! AXIS (Length)
		HOTSPOT2 -1, 0, unID, a, 3: unID=unID+1
		HOTSPOT2 a, 0, unID, a, 2: unID=unID+1

		HOTSPOT2 A/2,0,unID : unID=unID+1			!!! AXIS (Length/2)

	ENDIF
	IF iRotAxis = ROT_CROSSECT THEN

		IF iInsertPoint = INSERTPOINT_BOTTOM THEN ADD2 -sectDepth/2*sin(Angle),0
		IF iInsertPoint = INSERTPOINT_TOP THEN ADD2 sectDepth/2*sin(Angle),0

		LINE2 0, 0, A*cos(Angle),0
		HOTLINE2 0, 0, A*cos(Angle),0, hLineID

		HOTSPOT2 0, 0, unID, a_temp, 1+256, A: unID=unID+1		!!! AXIS (Length/2)
		HOTSPOT2 -1, 0, unID, a_temp, 3, A: unID=unID+1
		HOTSPOT2 a_temp, 0, unID, a_temp, 2, A: unID=unID+1

		HOTSPOT2 A*cos(Angle)/2,0,unID : unID=unID+1	!!! AXIS (Length)

		IF gs_ShowMoreHtps2D=1 THEN
			HOTSPOT2 0,sectWidth/2,unID : unID=unID+1			!!! BOUNDING BOX
			HOTSPOT2 0,-sectWidth/2,unID : unID=unID+1
			HOTSPOT2 A*cos(Angle),sectWidth/2,unID : unID=unID+1
			HOTSPOT2 A*cos(Angle),-sectWidth/2,unID : unID=unID+1
		ENDIF
		IF iInsertPoint <> INSERTPOINT_CENTER THEN DEL 1
	ENDIF
ENDIF
PEN gs_cont_pen
END
]]>
</Script_2D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_1D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[

EPS=0.00001
iStructureCode = 21	!CODEBEAM_EQUAL

! iRotAxis
ROT_AXIS = 1
ROT_CROSSECT = 2

! iCutModeBottom, iCutModeTop
CUTMODE_PERPENDICULAR	= 1
CUTMODE_ALONGVERTICAL	= 2
CUTMODE_ALONGHORIZONTAL	= 3

! iInsertPoint
INSERTPOINT_TOP	= 1
INSERTPOINT_CENTER	= 2
INSERTPOINT_BOTTOM	= 3

! iFlangePos
FLANGEPOS_TOP = 1
FLANGEPOS_BOTTOM = 2

DIM pol_matr [60] !!! necessary matrix for the 2D background polygon
IF not(bCutPlanes) THEN
	gs_cutang1_bot=0
	gs_cutang2_bot=0
	gs_cutang3_up=0
	gs_cutang4_up=0
ENDIF

IF Angle>90 and Angle<=225 THEN: Parameters Angle=90:Angle=90: ENDIF
IF Angle>225 THEN: Parameters Angle=0:Angle=0: ENDIF


]]>
</Script_1D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_VL SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[

! --------------------------------------------------------------------------------
! hide All Parameters list
! --------------------------------------------------------------------------------

hideparameter all "A", "B", "ZZYZX"

call "FM_types" parameters all

if GLOB_MODPAR_NAME = "Profile" or siz_mtr[1]="" then
	dim namevekt[]
	dim vekt[]
	vekt[30] = 0
	nTypes = 0
	szelv = open("text", "L_eq(14).txt", "separator='\t', mode = ro, Library")
	iRow = 2
	n = input(szelv, iRow, 2, v1, v2)
	while n > 1 do
		bHaveThisType = 0
		for k = 1 to nTypes
			if vekt[k] 	= v2 then
				bHaveThisType = 1
			endif
		next k
		if not(bHaveThisType) then
			nTypes = nTypes + 1
			vekt[nTypes] = v2
			namevekt[nTypes] = v1
		endif
		iRow = iRow + 1
		n = input(szelv, iRow, 2, v1, v2)
	endwhile
	close szelv

	namevekt[nTypes+1] = `СПЕЦИАЛЬНЫЕ`

	PARAMETERS siz_mtr=namevekt

	siz_mtr = namevekt

	if Profile <> `СПЕЦИАЛЬНЫЕ` then
		for inumType = 1 to nTypes
			if siz_mtr[inumType] = Profile then
				sectDepth = vekt[inumType]
				parameters sectDepth = sectDepth
			endif
		next inumType
	endif
endif

values "Profile" 	siz_mtr

if Profile <> `СПЕЦИАЛЬНЫЕ` & (Profile <> lastProfile or abs(availableThicknesses[1]) < EPS) then

	bFoundExactMatch = 0
	szelv = open("text", "L_eq(14).txt", "separator='\t', mode=ro, Library")
	iRow = 2
	n = input(szelv, iRow, 3, ker1, ker2)
	while n > 0 do
		if sectDepth = ker1 then
			n = input(szelv, iRow, 4, osectThick)
			put osectThick						! collect possible thickness values
			if sectThick = ker2 then			! look up all data fields for the profile
				n = input(szelv, iRow, 5, omassPerMeter, oRad, otoeRad, osectArea, osecondMomentXY, oelastMod, ogyrationRadXY, osecondMomentU, ogyrationRadU, osecondMomentV,  ogyrationRadV)
				bFoundExactMatch = 1
			endif
		endif
		iRow = iRow + 1
		n = input(szelv, iRow, 3, ker1, ker2)
	endwhile
	close szelv

	! store collected thickness values
	if NSP > 0 then
		i = 1
		dim tempAvailableThicknesses[]
		while NSP > 0 do
			tempAvailableThicknesses[i] = get(1)
			i = i + 1
		endwhile
		availableThicknesses = tempAvailableThicknesses
		parameters availableThicknesses = availableThicknesses
	endif

	! set the predefined dimensions
	if bFoundExactMatch then
		lastProfile = Profile
		parameters lastProfile = lastProfile

		sectWidth 		= sectDepth
		B 		= sectWidth / 1000
		ZZYZX	= sectDepth / 1000
		massPerMeter	= omassPerMeter
		Rad		= oRad
		toeRad		= otoeRad
		secondMomentXY	= osecondMomentXY
		secondMomentU	= osecondMomentU
		secondMomentV	= osecondMomentV
		gyrationRadXY	= ogyrationRadXY
		gyrationRadU		= ogyrationRadU
		gyrationRadV		= ogyrationRadV
		elastMod		= oelastMod
		sectArea		= osectArea
		massSum	= massPerMeter * a

		parameters 	sectWidth 		= sectWidth,
					B 		= B,
					ZZYZX	= ZZYZX,
					massPerMeter	= massPerMeter,
					Rad		= Rad,
					toeRad		= toeRad,
					secondMomentXY	= secondMomentXY,
					secondMomentU	= secondMomentU,
					secondMomentV	= secondMomentV,
					gyrationRadXY	= gyrationRadXY,
					gyrationRadU		= gyrationRadU,
					gyrationRadV		= gyrationRadV,
					elastMod		= elastMod,
					sectArea		= sectArea,
					massSum	= massSum
	endif
endif

values "sectThick" availableThicknesses

lock "B"
lock "ZZYZX"

if Profile <> `СПЕЦИАЛЬНЫЕ` then
	lock "sectDepth"
	lock "sectWidth"
	lock "massPerMeter"
	lock "Rad"
	lock "toeRad"
	lock "secondMomentXY"
	lock "secondMomentU"
	lock "secondMomentV"
	lock "gyrationRadXY"
	lock "gyrationRadU"
	lock "gyrationRadV"
	lock "elastMod"
	lock "sectArea"
else
	values "sectWidth" range (sectThick, )
	values "sectDepth" range (sectThick, )
	values "Rad" range [0, min(sectWidth-sectThick-toeRad, sectDepth-sectThick-toeRad)]
	values "toeRad" range [0, sectThick]

	if GLOB_MODPAR_NAME = "sectWidth" | GLOB_MODPAR_NAME = "sectDepth" | GLOB_MODPAR_NAME = "toeRad" then
		if Rad > min(sectWidth-sectThick-toeRad, sectDepth-sectThick-toeRad) then Rad = min(sectWidth-sectThick-toeRad, sectDepth-sectThick-toeRad)
		parameters Rad = Rad
	endif
	B		= sectWidth/1000
	ZZYZX	= sectDepth/1000
	parameters 	B		= B,
				ZZYZX	= ZZYZX
	values "toeRad" range (, sectThick]
endif

massSum = massPerMeter * A
parameters massSum=massSum
lock "massSum"

IF gs_cont_pen <= 0 THEN PARAMETERS gs_cont_pen = 90
IF gs_fill_pen <= 0 THEN PARAMETERS gs_fill_pen = 19

dim stFlangePosValues[2]
	stFlangePosValues[1] = `Вверху`
	stFlangePosValues[2] = `Внизу`

values "stFlangePos" stFlangePosValues
values "iFlangePos" FLANGEPOS_TOP, FLANGEPOS_BOTTOM

if GLOB_MODPAR_NAME = "stFlangePos" then
	iFlangePos = FLANGEPOS_TOP
	if stFlangePos = stFlangePosValues[2] then iFlangePos = FLANGEPOS_BOTTOM
	parameters iFlangePos = iFlangePos
else
	stFlangePos = stFlangePosValues[1]
	if iFlangePos = FLANGEPOS_BOTTOM then stFlangePos = stFlangePosValues[2]
	parameters stFlangePos = stFlangePos
endif
dim stDetLevel3d[3]
	stDetLevel3d[1] = `Простой`
	stDetLevel3d[2] = `Детальный`
	stDetLevel3d[3] = `Откл.`

values "gs_detlevel_3D" stDetLevel3d
values "gs_detlevel_3D_m" 1, 2, 0

if GLOB_MODPAR_NAME = "gs_detlevel_3D" then
	gs_detlevel_3D_m = 1
	if gs_detlevel_3D = stDetLevel3d[2] then gs_detlevel_3D_m = 2
	if gs_detlevel_3D = stDetLevel3d[3] then gs_detlevel_3D_m = 0
	parameters gs_detlevel_3D_m = gs_detlevel_3D_m
else
	gs_detlevel_3D = stDetLevel3d[1]
	if gs_detlevel_3D_m = 2 then gs_detlevel_3D = stDetLevel3d[2]
	if gs_detlevel_3D_m = 0 then gs_detlevel_3D = stDetLevel3d[3]
	parameters gs_detlevel_3D = gs_detlevel_3D
endif
dim stRotAxisValues[2]
	stRotAxisValues[1] = `Вдоль оси`
	stRotAxisValues[2] = `Вдоль поперечного сечения`

values "stRotAxis" stRotAxisValues
values "iRotAxis" ROT_AXIS, ROT_CROSSECT

if GLOB_MODPAR_NAME = "stRotAxis" then
	iRotAxis = ROT_AXIS
	if stRotAxis = stRotAxisValues[2] then iRotAxis = ROT_CROSSECT
	parameters iRotAxis = iRotAxis
else
	stRotAxis = stRotAxisValues[1]
	if iRotAxis = ROT_CROSSECT then stRotAxis = stRotAxisValues[2]
	parameters stRotAxis = stRotAxis
endif
dim stInsertPointValues[3]
	stInsertPointValues[1] = `Вверху`
	stInsertPointValues[2] = `По центру`
	stInsertPointValues[3] = `Внизу`

values "stInsertPoint" stInsertPointValues
values "iInsertPoint" INSERTPOINT_TOP, INSERTPOINT_CENTER, INSERTPOINT_BOTTOM

if GLOB_MODPAR_NAME = "stInsertPoint" then
	iInsertPoint = INSERTPOINT_TOP
	if stInsertPoint = stInsertPointValues[2] then iInsertPoint = INSERTPOINT_CENTER
	if stInsertPoint = stInsertPointValues[3] then iInsertPoint = INSERTPOINT_BOTTOM
	parameters iInsertPoint = iInsertPoint
else
	stInsertPoint = stInsertPointValues[1]
	if iInsertPoint = INSERTPOINT_CENTER then stInsertPoint = stInsertPointValues[2]
	if iInsertPoint = INSERTPOINT_BOTTOM then stInsertPoint = stInsertPointValues[3]
	parameters stInsertPoint = stInsertPoint
endif
values "gs_resol" RANGE [3,)
IF gs_detlevel_3D_m <> 2 then lock "gs_resol"

dim stCutModeValues[3]
	stCutModeValues[1] = `Перпендикулярно оси`
	stCutModeValues[2] = `Вдоль вертикальной оси`
	stCutModeValues[3] = `Вдоль горизонтальной оси`

if iRotAxis = ROT_AXIS or Angle>60 THEN
    values "stCutModeBottom" stCutModeValues[1],
			stCutModeValues[3]
    values "iCutModeBottom" CUTMODE_PERPENDICULAR, CUTMODE_ALONGHORIZONTAL
    values "stCutModeTop" stCutModeValues[1],
			stCutModeValues[3]
    values "iCutModeTop" CUTMODE_PERPENDICULAR, CUTMODE_ALONGHORIZONTAL
else
    values "stCutModeBottom" stCutModeValues
    values "iCutModeBottom" CUTMODE_PERPENDICULAR, CUTMODE_ALONGVERTICAL, CUTMODE_ALONGHORIZONTAL
    values "stCutModeTop" stCutModeValues
    values "iCutModeTop" CUTMODE_PERPENDICULAR, CUTMODE_ALONGVERTICAL, CUTMODE_ALONGHORIZONTAL
endif

if GLOB_MODPAR_NAME = "stCutModeBottom" then
	iCutModeBottom = CUTMODE_PERPENDICULAR
	if stCutModeBottom = stCutModeValues[2] then iCutModeBottom = CUTMODE_ALONGVERTICAL
	if stCutModeBottom = stCutModeValues[3] then iCutModeBottom = CUTMODE_ALONGHORIZONTAL
	parameters iCutModeBottom = iCutModeBottom
else
	stCutModeBottom = stCutModeValues[1]
	if iCutModeBottom = CUTMODE_ALONGVERTICAL then stCutModeBottom = stCutModeValues[2]
	if iCutModeBottom = CUTMODE_ALONGHORIZONTAL then stCutModeBottom = stCutModeValues[3]
	parameters stCutModeBottom = stCutModeBottom
endif

if GLOB_MODPAR_NAME = "stCutModeTop" then
	iCutModeTop = CUTMODE_PERPENDICULAR
	if stCutModeTop = stCutModeValues[2] then iCutModeTop = CUTMODE_ALONGVERTICAL
	if stCutModeTop = stCutModeValues[3] then iCutModeTop = CUTMODE_ALONGHORIZONTAL
	parameters iCutModeTop = iCutModeTop
else
	stCutModeTop = stCutModeValues[1]
	if iCutModeTop = CUTMODE_ALONGVERTICAL then stCutModeTop = stCutModeValues[2]
	if iCutModeTop = CUTMODE_ALONGHORIZONTAL then stCutModeTop = stCutModeValues[3]
	parameters stCutModeTop = stCutModeTop
endif

if not(bCutPlanes) THEN LOCK "stCutModeBottom", "iCutModeBottom",
				"gs_cutang1_bot", "gs_cutang2_bot",
				"stCutModeTop", "iCutModeTop",
				"gs_cutang3_up","gs_cutang4_up"

if not(axis) then
	lock "only_axis", "axis_line_type", "axis_line_pen"
endif
if axis and only_axis then
	lock "gs_ShowMoreHtps2D", "gs_cont_pen", "gs_fill_type", "gs_fill_pen", "gs_back_pen"
endif

IF Angle=0 AND iCutModeBottom <> CUTMODE_ALONGHORIZONTAL AND iCutModeTop <> CUTMODE_ALONGHORIZONTAL OR Angle<>0 THEN
    hideparameter "DashedLineType"
    lock "DashedLineType"
ENDIF


! ---------- Rotation Angle --------------------------------------------------

VALUES "Angle" range[-90,90]

if temp_ang >= 270 and temp_ang <= 360 THEN PARAMETERS temp_ang = 0		!! Bottom
if temp_ang < 270 and temp_ang >= 180 THEN PARAMETERS temp_ang = 180

IF GLOB_MODPAR_NAME = "temp_ang" THEN
	PARAMETERS Angle = temp_ang - 90
ELSE
	PARAMETERS temp_ang = Angle + 90
ENDIF

if GLOB_MODPAR_NAME = "a_temp" then
    if iRotAxis = ROT_CROSSECT then
        A = a_temp/cos(Angle)
    else
        A = a_temp
    endif
    parameters A = A
else
    if iRotAxis = ROT_CROSSECT then
        a_temp = A*cos(Angle)
    else
        a_temp = A
    endif
    parameters a_temp = a_temp
endif


! ---------- Cutting Angles --------------------------------------------------

VALUES "gs_cutang1_bot" range[-60,60]
VALUES "gs_cutang2_bot" range[-60,60]
VALUES "gs_cutang3_up" range[-60,60]
VALUES "gs_cutang4_up" range[-60,60]


if temp_cutang1_bot > 120 and temp_cutang1_bot < (360-120)/2+120 THEN PARAMETERS temp_cutang1_bot = 120
if temp_cutang1_bot < 360 and temp_cutang1_bot >= (360-120)/2+120 THEN PARAMETERS temp_cutang1_bot = 0

if temp_cutang2_bot > 120 and temp_cutang2_bot < (360-120)/2+120 THEN PARAMETERS temp_cutang2_bot = 120
if temp_cutang2_bot < 360 and temp_cutang2_bot >= (360-120)/2+120 THEN PARAMETERS temp_cutang2_bot = 0

if temp_cutang3_up > 120 and temp_cutang3_up < (360-120)/2+120 THEN PARAMETERS temp_cutang3_up = 120
if temp_cutang3_up < 360 and temp_cutang3_up >= (360-120)/2+120 THEN PARAMETERS temp_cutang3_up = 0

if temp_cutang4_up > 120 and temp_cutang4_up < (360-120)/2+120 THEN PARAMETERS temp_cutang4_up = 120
if temp_cutang4_up < 360 and temp_cutang4_up >= (360-120)/2+120 THEN PARAMETERS temp_cutang4_up = 0


IF GLOB_MODPAR_NAME = "temp_cutang1_bot" THEN
	PARAMETERS gs_cutang1_bot = temp_cutang1_bot - 60
ELSE
	PARAMETERS temp_cutang1_bot = gs_cutang1_bot + 60
ENDIF

IF GLOB_MODPAR_NAME = "temp_cutang2_bot" THEN
	PARAMETERS gs_cutang2_bot = temp_cutang2_bot - 60
ELSE
	PARAMETERS temp_cutang2_bot = gs_cutang2_bot + 60
ENDIF

IF GLOB_MODPAR_NAME = "temp_cutang3_up" THEN
	PARAMETERS gs_cutang3_up = temp_cutang3_up - 60
ELSE
	PARAMETERS temp_cutang3_up = gs_cutang3_up + 60
ENDIF

IF GLOB_MODPAR_NAME = "temp_cutang4_up" THEN
	PARAMETERS gs_cutang4_up = temp_cutang4_up - 60
ELSE
	PARAMETERS temp_cutang4_up = gs_cutang4_up + 60
ENDIF
! ================================================================================
! Toplevel, Bottomlevel
! ================================================================================
ac_bottomlevel = 0
ac_toplevel = ZZYZX
tempAng =  abs(atn((ZZYZX-sectThick/1000)/(B-sectThick/1000)) )

if iRotAxis = ROT_AXIS then

	ac_bottomlevel =  - abs(sin (Angle)* B/2)
	if (Angle < 0) then
		ac_toplevel = abs(sin (Angle)* B/2) + cos(Angle)* ZZYZX
	else
		if (abs(Angle) < tempAng) then
			ac_toplevel = abs(sin(90-Angle)* ZZYZX) - abs(sin(Angle)*B/2) + abs(sin(Angle)* sectThick/1000)
		else
			ac_toplevel = abs(sin(Angle) * B/2) + abs(cos(Angle)*sectThick/1000)
		endif
	endif

	if 	iInsertPoint = INSERTPOINT_BOTTOM then
		ac_bottomlevel = ac_bottomlevel 
		ac_toplevel =ac_toplevel
	else
		if iInsertPoint = INSERTPOINT_CENTER then 
			ac_bottomlevel =  ac_bottomlevel - abs( cos(Angle)*ZZYZX/2)
			ac_toplevel = ac_toplevel- abs( cos(Angle)*ZZYZX/2)	
		else				!INSERTPOINT_TOP  	
			ac_toplevel = ac_toplevel- abs( cos(Angle)*ZZYZX)	
			ac_bottomlevel = ac_bottomlevel - abs( cos(Angle)*ZZYZX)
		endif
	endif


else    ! iRotAxis = ROT_CROSSECT 
	if iInsertPoint = INSERTPOINT_BOTTOM then
		if not(Angle<0) then
			ac_bottomlevel =  0
			ac_toplevel = abs(cos(90-Angle) * A) + abs(sin(90-Angle)*ZZYZX)
		else
			ac_toplevel =  abs(sin(90-Angle)*ZZYZX)
			ac_bottomlevel = -abs(cos(90-Angle) * A)
		endif
	else
		if iInsertPoint = INSERTPOINT_CENTER then
			if not(Angle<0) then
				ac_bottomlevel =  -abs(sin (90-Angle)* ZZYZX/2)
				ac_toplevel = abs(cos(90-Angle) * A) + abs(sin(90-Angle)*ZZYZX) -abs(sin (90-Angle)* ZZYZX/2)
			else
				ac_toplevel =  abs(sin (90-Angle)* ZZYZX/2)
				ac_bottomlevel = -abs(cos(90-Angle) * A) - abs(sin(90-Angle)*ZZYZX) +abs(sin (90-Angle)* ZZYZX/2)
			endif
		else				!INSERTPOINT_TOP 
			if not(Angle<0) then 	
				ac_bottomlevel =  -2*abs(sin (90-Angle)* ZZYZX/2)
				ac_toplevel = abs(cos(90-Angle) * A) + abs(sin(90-Angle)*ZZYZX) -2*abs(sin (90-Angle)* ZZYZX/2)
			else
				ac_toplevel = 0
				ac_bottomlevel = -abs(cos(90-Angle) * A) - abs(sin(90-Angle)*ZZYZX)
			endif
		endif
	endif
endif


parameters ac_bottomlevel = ac_bottomlevel
parameters ac_toplevel = ac_toplevel

]]>
</Script_VL>

<ParamSection SectVersion="26" SectionFlags="0" SubIdent="0">
	<ParamSectHeader>
		<Version>26</Version>
		<AutoHotspots>false</AutoHotspots>
		<StatBits>
			<STBit_UIDefault/>
			<STBit_FixSize/>
			<STBit_UIUseHierarchicalPages/>
		</StatBits>
		<WDLeftFrame>0</WDLeftFrame>
		<WDRightFrame>0</WDRightFrame>
		<WDTopFrame>0</WDTopFrame>
		<WDBotFrame>0</WDBotFrame>
		<LayFlags>65535</LayFlags>
		<WDMirrorThickness>0</WDMirrorThickness>
		<WDWallInset>0</WDWallInset>
		<SymbolColor>0</SymbolColor>
	</ParamSectHeader>
	<Parameters>
		<Length Name="A">
			<Description><![CDATA["Длина Элемента"]]></Description>
			<Fix/>
			<Value>2</Value>
		</Length>
		<Length Name="B">
			<Description><![CDATA["Ширина профиля (мм)"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Unique/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Length Name="zzyzx">
			<Description><![CDATA["Высота Профиля (мм)"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Unique/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Length Name="a_temp">
			<Description><![CDATA["Длина Элемента"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>2</Value>
		</Length>

		<!-- Placement_title: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="Placement_title">
			<Description><![CDATA["Размещение"]]></Description>
		</Title>
		<String Name="stRotAxis">
			<Description><![CDATA["Ось Поворота"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Вдоль поперечного сечения"]]></Value>
		</String>
		<Integer Name="iRotAxis">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Angle Name="Angle">
			<Description><![CDATA["Угол Поворота"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<String Name="stInsertPoint">
			<Description><![CDATA["Точка Вставки"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Внизу"]]></Value>
		</String>
		<Integer Name="iInsertPoint">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>3</Value>
		</Integer>

		<!-- bCutPlanes: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Boolean Name="bCutPlanes">
			<Description><![CDATA["Плоскости Сечения"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<String Name="stCutModeBottom">
			<Description><![CDATA["Способ Сечения - Нижний Конец"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Перпендикулярно оси"]]></Value>
		</String>
		<Integer Name="iCutModeBottom">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Angle Name="gs_cutang1_bot">
			<Description><![CDATA["Угол Сечения (1)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Angle Name="gs_cutang2_bot">
			<Description><![CDATA["Угол Сечения (2)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<String Name="stCutModeTop">
			<Description><![CDATA["Способ Сечения - Верхний Конец"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Перпендикулярно оси"]]></Value>
		</String>
		<Integer Name="iCutModeTop">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Angle Name="gs_cutang3_up">
			<Description><![CDATA["Угол Сечения (3)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Angle Name="gs_cutang4_up">
			<Description><![CDATA["Угол Сечения (4)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>

		<!-- titleDimensions: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="titleDimensions">
			<Description><![CDATA["Размеры"]]></Description>
		</Title>
		<String Name="Profile">
			<Description><![CDATA["Серийный Размер (стандарт EN)"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value><![CDATA["L 100x100"]]></Value>
		</String>
		<String Name="lastProfile">
			<Description><![CDATA["Серийный Размер (стандарт EN)"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value><![CDATA["L 100x100"]]></Value>
		</String>
		<String Name="stFlangePos">
			<Description><![CDATA["Расположение Полки"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Внизу"]]></Value>
		</String>
		<Integer Name="iFlangePos">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<RealNum Name="sectThick">
			<Description><![CDATA["Толщина Стенки (мм)"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>8</Value>
		</RealNum>
		<RealNum Name="sectWidth">
			<Description><![CDATA["Ширина профиля (мм)"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>100</Value>
		</RealNum>
		<RealNum Name="sectDepth">
			<Description><![CDATA["Высота Профиля (мм)"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>100</Value>
		</RealNum>
		<RealNum Name="Rad">
			<Description><![CDATA["Радиус основания (мм)"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>12</Value>
		</RealNum>
		<RealNum Name="toeRad">
			<Description><![CDATA["Радиус Основания (мм)"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>6</Value>
		</RealNum>

		<!-- titleProperties: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="titleProperties">
			<Description><![CDATA["Свойства"]]></Description>
		</Title>
		<RealNum Name="secondMomentXY">
			<Description><![CDATA["Мом.инерции плоск.x-x (см4)"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>144.8</Value>
		</RealNum>
		<RealNum Name="gyrationRadXY">
			<Description><![CDATA["Радиус инерции x-x (см)"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>3.06</Value>
		</RealNum>
		<RealNum Name="elastMod">
			<Description><![CDATA["Модуль Упругости x-x (см3)"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>19.94</Value>
		</RealNum>
		<RealNum Name="secondMomentU">
			<Description><![CDATA["Мом.инерции плоск.u-u (см4)"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>230.2</Value>
		</RealNum>
		<RealNum Name="secondMomentV">
			<Description><![CDATA["Мом.инерции плоск. v-v (см4)"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>59.47</Value>
		</RealNum>
		<RealNum Name="gyrationRadU">
			<Description><![CDATA["Радиус Инерции u-u (см)"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>3.85</Value>
		</RealNum>
		<RealNum Name="gyrationRadV">
			<Description><![CDATA["Радиус Инерции v-v (см)"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>1.96</Value>
		</RealNum>
		<RealNum Name="sectArea">
			<Description><![CDATA["Площадь Сечения (см2)"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>15.51</Value>
		</RealNum>
		<RealNum Name="massPerMeter">
			<Description><![CDATA["Масса на Метр (кг/м)"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>12.2</Value>
		</RealNum>
		<RealNum Name="massSum">
			<Description><![CDATA["Масса (кг)"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>24.4</Value>
		</RealNum>

		<!-- gs_3D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_3D_representation">
			<Description><![CDATA["3D-отображение"]]></Description>
		</Title>
		<String Name="gs_detlevel_3D">
			<Description><![CDATA["3D-детализация"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Простой"]]></Value>
		</String>
		<Integer Name="gs_detlevel_3D_m">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="gs_resol">
			<Description><![CDATA["Аппроксимация"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>8</Value>
		</Integer>
		<Boolean Name="gs_shadow">
			<Description><![CDATA["Отбрасывание Теней"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>

		<!-- gs_2D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_2D_representation">
			<Description><![CDATA["2D-отображение"]]></Description>
			<Fix/>
		</Title>
		<Boolean Name="axis">
			<Description><![CDATA["Ось"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="only_axis">
			<Description><![CDATA["Только Ось"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<LineType Name="axis_line_type">
			<Description><![CDATA["Тип Линии Оси"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>6</Value>
		</LineType>
		<PenColor Name="axis_line_pen">
			<Description><![CDATA["Перо Линии Оси"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>69</Value>
		</PenColor>
		<LineType Name="DashedLineType">
			<Description><![CDATA["Тип Штриховой Линии"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>21</Value>
		</LineType>
		<Boolean Name="gs_ShowMoreHtps2D">
			<Description><![CDATA["Дополнительные Узловые Точки в 2D"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<PenColor Name="gs_cont_pen">
			<Description><![CDATA["Перо Контура"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>90</Value>
		</PenColor>
		<FillPattern Name="gs_fill_type">
			<Description><![CDATA["Тип Штриховки"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_fill_pen">
			<Description><![CDATA["Перо Штриховки"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_back_pen">
			<Description><![CDATA["Перо Фона Штриховки"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>

		<!-- gs_material: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_material">
			<Description><![CDATA["Покрытия"]]></Description>
		</Title>
		<Material Name="col_mat">
			<Description><![CDATA["Балка"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>11</Value>
		</Material>
		<Boolean Name="AC_show2DHotspotsIn3D">
			<Description><![CDATA["Показ Узловых 2D Точек в 3D"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="ac_bottomlevel">
			<Description><![CDATA["Отметка Низа"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="ac_toplevel">
			<Description><![CDATA["Отметка Верха"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<String Name="siz_mtr">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="0">
				<AVal Row="1"><![CDATA[""]]></AVal>
			</ArrayValues>
		</String>
		<Angle Name="temp_cutang1_bot">
			<Description><![CDATA["Угол Сечения (1)"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>60</Value>
		</Angle>
		<Angle Name="temp_cutang2_bot">
			<Description><![CDATA["Угол Сечения (2)"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>60</Value>
		</Angle>
		<Angle Name="temp_cutang3_up">
			<Description><![CDATA["Угол Сечения (3)"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>60</Value>
		</Angle>
		<Angle Name="temp_cutang4_up">
			<Description><![CDATA["Угол Сечения (4)"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>60</Value>
		</Angle>
		<Angle Name="temp_ang">
			<Description><![CDATA["Угол Поворота"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>90</Value>
		</Angle>
		<Integer Name="gs_ui_current_page">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<RealNum Name="availableThicknesses">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="7" SecondDimension="0">
				<AVal Row="1">6</AVal>
				<AVal Row="2">8</AVal>
				<AVal Row="3">10</AVal>
				<AVal Row="4">12</AVal>
				<AVal Row="5">14</AVal>
				<AVal Row="6">16</AVal>
				<AVal Row="7">20</AVal>
			</ArrayValues>
		</RealNum>

		<!-- gs_list: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_list">
			<Description><![CDATA["Параметры Спецификаций"]]></Description>
			<Fix/>
		</Title>
		<RealNum Name="gs_list_cost">
			<Description><![CDATA["Цена"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="gs_list_manufacturer">
			<Description><![CDATA["Производитель"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_note">
			<Description><![CDATA["Примечания"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_location">
			<Description><![CDATA["Расположение"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_accessories">
			<Description><![CDATA["Аксессуары"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_Type">
			<Description><![CDATA["Тип Группы"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Другой"]]></Value>
		</String>
		<Integer Name="iFMType">
			<Description><![CDATA["Тип Группы"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>25</Value>
		</Integer>
		<String Name="FM_InventoryNumber">
			<Description><![CDATA["Инвентарный Номер"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_SerialNumber">
			<Description><![CDATA["Серийный Номер"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_ProductionYear">
			<Description><![CDATA["Год Производства"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<RealNum Name="FM_ObjectWeight">
			<Description><![CDATA["Вес Изделия"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="FM_ObjectWeightUnit">
			<Description><![CDATA["Единица Веса"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["кг"]]></Value>
		</String>
		<String Name="gs_list_custom1">
			<Description><![CDATA["Пользовательское Значение 1"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom2">
			<Description><![CDATA["Пользовательское Значение 2"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom3">
			<Description><![CDATA["Пользовательское Значение 3"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom4">
			<Description><![CDATA["Пользовательское Значение 4"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom5">
			<Description><![CDATA["Пользовательское Значение 5"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="LibraryLangCode">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value><![CDATA["RUS"]]></Value>
		</String>
	</Parameters>
</ParamSection>

<Picture MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="0" length_in_bytes="223" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000800000
	0080040300000031107CF80000000F504C5445FFFFFF89888AC4C3C4E1E1E1A6
	A5A7595884BB0000008149444154785EEDCC411183401045418882FD0C02B6C0
	C078C0BFA79C222079B940BD16D0CB13AC49260DD234281A04079306E3568181
	818181818181818181818181818181818181818141D160BB7F101C4C1A0C1A14
	0DD2341834D81B06291AE4A4412E1A24DBF185F313FCECA2419A0645839D0669
	1ACCFF0406AF03E8E501DE70D16995E69370490000000049454E44AE426082
	]]>
</Picture>

<Ancestry SectVersion="1" SectionFlags="0" SubIdent="0" Template="false">
	<MainGUID>F938E33A-329D-4A36-BE3E-85E126820996</MainGUID>
	<MainGUID>103E8D2C-8230-42E1-9597-46F84CCE28C0</MainGUID>
	<MainGUID>784EAEA1-5041-4AA6-B6F4-EF263A891EE7</MainGUID>
	<MainGUID>37669729-B714-4F9B-B074-6C4DE055DAE0</MainGUID>
</Ancestry>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_PR SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_PR>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_UI SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[

dim stPropParamNames[10]
	stPropParamNames[1] = "secondMomentXY"
	stPropParamNames[2] = "gyrationRadXY"
	stPropParamNames[3] = "elastMod"
	stPropParamNames[4] = "secondMomentU"
	stPropParamNames[5] = "secondMomentV"
	stPropParamNames[6] = "gyrationRadU"
	stPropParamNames[7] = "gyrationRadV"
	stPropParamNames[8] = "sectArea"
	stPropParamNames[9] = "massPerMeter"
	stPropParamNames[10] = "massSum"


call "steelStructure_m" parameters all iStructureCode = iStructureCode,		!CODEBEAM_EQUAL
					stPropParamNames = stPropParamNames

]]>
</Script_UI>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Comment SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[Равнобокая угловая стальная балка с плоскостями сечений на концах, поворачиваемая вокруг оси или поперечного сечения и с различными размерами согласно стандарту EN.]]>
</Comment>

<CalledMacros SectVersion="2" SectionFlags="0" SubIdent="0">
	<Macro>
		<MName><![CDATA["steelStructure_m"]]></MName>
		<MainGUID>BE5540A2-4186-4B3B-9776-0011D5A68E15</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["FM_types"]]></MName>
		<MainGUID>2759D2DF-AA8E-44D1-AD1D-261581266B34</MainGUID>
	</Macro>
</CalledMacros>

<Copyright SectVersion="1" SectionFlags="0" SubIdent="0">
	<Author>GRAPHISOFT</Author>
	<License>
		<Type>CC BY-ND</Type>
		<Version>3.0</Version>
	</License>
</Copyright>

<MigrationTable SectVersion="1" SectionFlags="0" SubIdent="0">
	<MigrationTableElement>
		<MainGUID>11359460-0046-4A2D-9922-FD2F11188C68</MainGUID>
		<Version>19</Version>
		<Name><![CDATA[""]]></Name>
		<AutoMigration>true</AutoMigration>
	</MigrationTableElement>
</MigrationTable>

<Keywords SectVersion="1" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Keywords>

</Symbol>
