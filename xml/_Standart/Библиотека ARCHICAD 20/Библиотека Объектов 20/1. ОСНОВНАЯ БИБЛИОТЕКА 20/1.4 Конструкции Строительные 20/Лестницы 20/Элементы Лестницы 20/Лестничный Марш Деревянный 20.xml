<?xml version="1.0" encoding="UTF-8"?>
<Symbol IsArchivable="true" IsPlaceable="true" MainGUID="1BB089CE-62AE-4D66-A7C1-BDAF45D5CA81" MigrationValue="Normal" Owner="1196638531" Signature="1196644685" Version="43">
<Ancestry SectVersion="1" SectionFlags="0" SubIdent="0" Template="false">
	<MainGUID>F938E33A-329D-4A36-BE3E-85E126820996</MainGUID>
	<MainGUID>103E8D2C-8230-42E1-9597-46F84CCE28C0</MainGUID>
	<MainGUID>784EAEA1-5041-4AA6-B6F4-EF263A891EE7</MainGUID>
	<MainGUID>57B7C584-5C0D-11D6-A0D8-036F034B6792</MainGUID>
</Ancestry>

<MigrationTable SectVersion="1" SectionFlags="0" SubIdent="0">
	<MigrationTableElement>
		<MainGUID>5B526D35-19C2-481B-BD86-D876E3D3DA5C</MainGUID>
		<Version>19</Version>
		<Name><![CDATA[""]]></Name>
		<AutoMigration>true</AutoMigration>
	</MigrationTableElement>
</MigrationTable>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_3D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
IF gs_detlevel_3D_m=0 THEN END

IF GLOB_CONTEXT>20 and GLOB_CONTEXT<40 THEN 		!! for Simple Model and in 3D Windoow
	gs_detlevel_3D_m=1
ENDIF

IF gs_shadow=0 THEN SHADOW OFF

PEN gs_cont_pen



!!!!!!!!!!!!!!!!!!! *** HOTSPOTs RailUNID *** !!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

	!!! FlightUNID=1	!!! 1,5,100
	!!! RailUNID=1000	!!! 1000-2300
	!!! PostUNID=5000	!!! 5000,
	!!! StringUNID=6000	!!! 6000-6900

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!! *** NEWEL POST *** !!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

ADDx st
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!! *** Left Newel Post *** !!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
	IF np_m = POSTPOS_LEFT or np_m = POSTPOS_BOTH THEN

		IF iBottomStepArrangement <> BSTEPARRANGE_NORMAL THEN
			ADD -nps,td-nps/2,0
		ELSE
			ADD -nps,0,0
		ENDIF

				MATERIAL matnp
				PRISM_ 5,nph,
					0,0,15,
					nps,0,15,
					nps,nps,15,
					0,nps,15,
					0,0,-1

			if posthead_m = POSTHEAD_SPHERE or posthead_m = POSTHEAD_PYRAMID then
			ADD  nps/2,nps/2,nph
				PYRAMID 5, nps, 1+2+16+32+64,
					-nps/2, nps/2, 0,
					-nps/2, -nps/2, 0,
					nps/2, -nps/2, 0,
					nps/2, nps/2, 0,
					-nps/2, nps/2, 0

					addz (sqr(2)+1)*nps/2
					RESOL res
					if posthead_m = POSTHEAD_SPHERE then SPHERE sqr(2)*nps/2
					del 1
			DEL 1
			ENDIF

			PostUNID=5000
			HOTSPOT nps/2,nps/2,0,	PostUNID, nph, 1+128 : PostUNID=PostUNID+1
			HOTSPOT nps/2,nps/2,-1,	PostUNID, nph, 3 : PostUNID=PostUNID+1
			HOTSPOT nps/2,nps/2,nph,PostUNID, nph, 2 : PostUNID=PostUNID+1

		DEL 1
	ENDIF

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!! *** Right Newel Post *** !!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
IF np_m = POSTPOS_RIGHT or np_m = POSTPOS_BOTH THEN

	IF iBottomStepArrangement <> BSTEPARRANGE_NORMAL THEN
		ADD FlightWidth,td-nps/2,0
	ELSE
		ADD FlightWidth,0,0
	ENDIF

			MATERIAL matnp
			PRISM_ 5,nph,
				0,0,15,
				nps,0,15,
				nps,nps,15,
				0,nps,15,
				0,0,-1

			if posthead_m = POSTHEAD_SPHERE or posthead_m = POSTHEAD_PYRAMID then
			ADD  nps/2,nps/2,nph
				PYRAMID 5, nps, 1+2+16+32+64,
					-nps/2, nps/2, 0,
					-nps/2, -nps/2, 0,
					nps/2, -nps/2, 0,
					nps/2, nps/2, 0,
					-nps/2, nps/2, 0

					addz (sqr(2)+1)*nps/2
					RESOL res
					if posthead_m = POSTHEAD_SPHERE then SPHERE sqr(2)*nps/2
					del 1
			DEL 1
			ENDIF

			PostUNID=5100
			HOTSPOT nps/2,nps/2,0,	PostUNID, nph, 1+128 : PostUNID=PostUNID+1
			HOTSPOT nps/2,nps/2,-1,	PostUNID, nph, 3 : PostUNID=PostUNID+1
			HOTSPOT nps/2,nps/2,nph,PostUNID, nph, 2 : PostUNID=PostUNID+1

	DEL 1
ENDIF


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!! *** SIDE STRINGS *** !!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

!!shvert= sh/cos(atn(th/td))	!!Dim. of Vert. Projection of String
!!pdvert= pd*shvert/sh			!!Dim. of Vert. Projection of Pitch Line

!!! String
LowerEndX1=(th+pdvert)/TAN(ang)
LowerEndX2=(shvert-th-pdvert)/TAN(ang)

LowerEndHgtX=LowerEndHgt/TAN(ang)
LowerEndHgtY=LowerEndHgt*TAN(ang)

UpperEndHgtX=(pdvert-UpperEndHgt)/TAN(ang)
UpperEndX2=(shvert-pdvert-lst)/TAN(ang)

IF iFlightSectionType = FLIGHTSECTION_WITHOUT_SOFFIT or iFlightSectionType = FLIGHTSECTION_WITH_SOFFIT THEN
!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!! *** Left String *** !!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!
		Addx -st
		Rotz 90
		ROTx 90
			MATERIAL matstr
			SECT_FILL typeFillStringer, penBackFillStringer, penFillStringer, penLineStringer

			IF np_m = POSTPOS_RIGHT or np_m = POSTPOS_NONE THEN		!!! (Newel Post=NO on Left Side)
			!!! *** Lower Junction Type
				IF iLowerJunctionType = LOWERJUNCTION_GROUND_FLOOR THEN
					PRISM_ 6, st,
						-LowerEndX1+LowerEndHgtX,0,15,
						LowerEndX2,0,15,
						(rnu-1)*td/2, (tan(ang)*(rnu-1)*td)/2-(shvert-th-pdvert), 8,
						(rnu-1)*td/2, (tan(ang)*(rnu-1)*td)/2-(-th-pdvert), 13,
						-LowerEndX1+LowerEndHgtX,LowerEndHgt,15,
						-LowerEndX1+LowerEndHgtX,0,-1
				ENDIF

				IF iLowerJunctionType = LOWERJUNCTION_FLOOR_OR_LANDING THEN
					PRISM_ 7, st,
						-LowerEndX1+LowerEndHgtX,0,15,
						0,0,15,
						0,-shvert+th+pdvert,15,
						(rnu-1)*td/2, (tan(ang)*(rnu-1)*td)/2-(shvert-th-pdvert), 8,
						(rnu-1)*td/2, (tan(ang)*(rnu-1)*td)/2-(-th-pdvert), 13,
						-LowerEndX1+LowerEndHgtX,LowerEndHgt,15,
						-LowerEndX1+LowerEndHgtX,0,-1
				ENDIF

				IF iLowerJunctionType = LOWERJUNCTION_STRAIGHT_END THEN
					ADDy -(shvert-th-pdvert)
					PRISM_ 6, st,
						0,LowerEndHgtY,15,
						LowerEndHgt,LowerEndHgtY,15,
						(rnu-1)*td/2, (tan(ang)*(rnu-1)*td)/2, 8,
						(rnu-1)*td/2, (tan(ang)*(rnu-1)*td)/2+shvert, 13,
						0, shvert, 15,
						0,LowerEndHgtY,-1
					DEL 1
				ENDIF

			ELSE		!!! *** IF np_m = POSTPOS_LEFT or np_m = POSTPOS_NONE !!! (Newel Post=YES on Left Side)

				IF iBottomStepArrangement <> BSTEPARRANGE_NORMAL THEN
					ADDx td+nps/2
				ELSE
					ADDx nps
				ENDIF

				ROTy 90
				CUTPLANE 180
				DEL 2

				ROTx 90
				CUTPLANE
				DEL 1

					ADDy -(shvert-th-pdvert)
					PRISM_ 5, st,
						0,0,15,
						(rnu-1)*td/2, (tan(ang)*(rnu-1)*td)/2, 8,
						(rnu-1)*td/2, (tan(ang)*(rnu-1)*td)/2+shvert, 13,
						0, shvert, 15,
						0,0,-1
					DEL 1
				CUTEND
				CUTEND
			ENDIF

			IF rnu=3 and np_m <> POSTPOS_RIGHT THEN
				Addx td+nps/2
				roty 90
				CUTPLANE 180
				del 2
			ENDIF

			!!! *** Upper Junction Type *** !!!
				IF iUpperJunctionType = UPPERJUNCTION_FLOOR_OR_LANDING THEN
					ADDy -(shvert-th-pdvert)
					PRISM_ 7, st,
						(rnu-1)*td/2, (tan(ang)*(rnu-1)*td)/2, 13,
						(rnu-1)*td+UpperEndX2, (tan(ang)*(rnu-1)*td)+shvert-pdvert-lst, 15,
						(rnu-1)*td, (tan(ang)*(rnu-1)*td)+shvert-pdvert-lst, 15,
						(rnu-1)*td, (tan(ang)*(rnu-1)*td)+shvert-pdvert+UpperEndHgt, 15,
						(rnu-1)*td-UpperEndHgtx, (tan(ang)*(rnu-1)*td)+shvert-pdvert+UpperEndHgt, 15,
						(rnu-1)*td/2, (tan(ang)*(rnu-1)*td)/2+shvert, 8,
						(rnu-1)*td/2, (tan(ang)*(rnu-1)*td)/2,-1
					DEL 1
				ENDIF

				IF iUpperJunctionType = UPPERJUNCTION_STRAIGHT_END THEN
					ADDy -(shvert-th-pdvert)
					PRISM_ 6, st,
						(rnu-1)*td/2, (tan(ang)*(rnu-1)*td)/2, 13,
						(rnu-1)*td, (tan(ang)*(rnu-1)*td), 15,
						(rnu-1)*td, (tan(ang)*(rnu-1)*td)+shvert-pdvert+UpperEndHgt, 15,
						(rnu-1)*td-UpperEndHgtx, (tan(ang)*(rnu-1)*td)+shvert-pdvert+UpperEndHgt, 15,
						(rnu-1)*td/2, (tan(ang)*(rnu-1)*td)/2+shvert, 8,
						(rnu-1)*td/2, (tan(ang)*(rnu-1)*td)/2,-1
					DEL 1
				ENDIF

			IF rnu=3 and np_m <> POSTPOS_RIGHT THEN CUTEND

		DEL 3

!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!! *** Right String *** !!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!

	ADDx FlightWidth+st
		Addx -st
		Rotz 90
		ROTx 90
			MATERIAL matstr
			SECT_FILL typeFillStringer, penBackFillStringer, penFillStringer, penLineStringer

			IF np_m = POSTPOS_LEFT or np_m = POSTPOS_NONE THEN
			!!! *** Lower Junction Type
				IF iLowerJunctionType = LOWERJUNCTION_GROUND_FLOOR THEN
					PRISM_ 6, st,
						-LowerEndX1+LowerEndHgtX,0,15,
						LowerEndX2,0,15,
						(rnu-1)*td/2, (tan(ang)*(rnu-1)*td)/2-(shvert-th-pdvert), 8,
						(rnu-1)*td/2, (tan(ang)*(rnu-1)*td)/2-(-th-pdvert), 13,
						-LowerEndX1+LowerEndHgtX,LowerEndHgt,15,
						-LowerEndX1+LowerEndHgtX,0,-1
				ENDIF

				IF iLowerJunctionType = LOWERJUNCTION_FLOOR_OR_LANDING THEN
					PRISM_ 7, st,
						-LowerEndX1+LowerEndHgtX,0,15,
						0,0,15,
						0,-shvert+th+pdvert,15,
						(rnu-1)*td/2, (tan(ang)*(rnu-1)*td)/2-(shvert-th-pdvert), 8,
						(rnu-1)*td/2, (tan(ang)*(rnu-1)*td)/2-(-th-pdvert), 13,
						-LowerEndX1+LowerEndHgtX,LowerEndHgt,15,
						-LowerEndX1+LowerEndHgtX,0,-1
				ENDIF

				IF iLowerJunctionType = LOWERJUNCTION_STRAIGHT_END THEN
					ADDy -(shvert-th-pdvert)
					PRISM_ 6, st,
						0,LowerEndHgtY,15,
						LowerEndHgt,LowerEndHgtY,15,
						(rnu-1)*td/2, (tan(ang)*(rnu-1)*td)/2, 8,
						(rnu-1)*td/2, (tan(ang)*(rnu-1)*td)/2+shvert, 13,
						0, shvert, 15,
						0,LowerEndHgtY,-1
					DEL 1
				ENDIF
			ELSE	!!! *** IF np_m = POSTPOS_RIGHT or np_m = POSTPOS_BOTH THEN

				IF iBottomStepArrangement <> BSTEPARRANGE_NORMAL THEN
					ADDx td+nps/2
				ELSE
					ADDx nps
				ENDIF

				ROTy 90
				CUTPLANE 180
				DEL 2

				ROTx 90
				CUTPLANE
				DEL 1

					ADDy -(shvert-th-pdvert)
					PRISM_ 5, st,
						0,0,15,
						(rnu-1)*td/2, (tan(ang)*(rnu-1)*td)/2, 8,
						(rnu-1)*td/2, (tan(ang)*(rnu-1)*td)/2+shvert, 13,
						0, shvert, 15,
						0,0,-1
					DEL 1
				CUTEND
				CUTEND
			ENDIF

			IF rnu=3 and np_m <> POSTPOS_LEFT THEN
				Addx td+nps/2
				roty 90
				CUTPLANE 180
				del 2
			ENDIF

			!!! *** Upper Junction Type
				IF iUpperJunctionType = UPPERJUNCTION_FLOOR_OR_LANDING THEN
					ADDy -(shvert-th-pdvert)
					PRISM_ 7, st,
						(rnu-1)*td/2, (tan(ang)*(rnu-1)*td)/2, 13,
						(rnu-1)*td+UpperEndX2, (tan(ang)*(rnu-1)*td)+shvert-pdvert-lst, 15,
						(rnu-1)*td, (tan(ang)*(rnu-1)*td)+shvert-pdvert-lst, 15,
						(rnu-1)*td, (tan(ang)*(rnu-1)*td)+shvert-pdvert+UpperEndHgt, 15,
						(rnu-1)*td-UpperEndHgtx, (tan(ang)*(rnu-1)*td)+shvert-pdvert+UpperEndHgt, 15,
						(rnu-1)*td/2, (tan(ang)*(rnu-1)*td)/2+shvert, 8,
						(rnu-1)*td/2, (tan(ang)*(rnu-1)*td)/2,-1
					DEL 1
				ENDIF

				IF iUpperJunctionType = UPPERJUNCTION_STRAIGHT_END THEN
					ADDy -(shvert-th-pdvert)
					PRISM_ 6, st,
						(rnu-1)*td/2, (tan(ang)*(rnu-1)*td)/2, 13,
						(rnu-1)*td, (tan(ang)*(rnu-1)*td), 15,
						(rnu-1)*td, (tan(ang)*(rnu-1)*td)+shvert-pdvert+UpperEndHgt, 15,
						(rnu-1)*td-UpperEndHgtx, (tan(ang)*(rnu-1)*td)+shvert-pdvert+UpperEndHgt, 15,
						(rnu-1)*td/2, (tan(ang)*(rnu-1)*td)/2+shvert, 8,
						(rnu-1)*td/2, (tan(ang)*(rnu-1)*td)/2,-1
					DEL 1
				ENDIF
			IF rnu=3 and np_m <> POSTPOS_LEFT THEN CUTEND
		DEL 3
	DEL 1

ENDIF


!!! *** End of Side Strings	*** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!! *** SOFFIT *** !!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

SoffitVert=softh/cos(atn(th/td))
LowerSoffitX1=softh/sin(ang)

IF iFlightSectionType = FLIGHTSECTION_WITH_SOFFIT THEN		!!! SOFFIT

	Addx -st
	Rotz 90
	ROTx 90

	MATERIAL matsoff
	SECT_FILL typeFillSoffit, penBackFillSoffit, penFillSoffit, penLineSoffit

	IF np_m = POSTPOS_NONE THEN
			!!! *** Lower Junction Type
			IF iLowerJunctionType = LOWERJUNCTION_GROUND_FLOOR THEN
				IF iFlightSectionType = FLIGHTSECTION_WITH_SOFFIT THEN		!!! SOFFIT
					ADDz st
						PRISM_ 5, FlightWidth,
						LowerEndX2-LowerSoffitX1,0,15,
						LowerEndX2,0,15,
						(rnu-1)*td/2, (tan(ang)*(rnu-1)*td)/2-(shvert-th-pdvert), 8,
						(rnu-1)*td/2, (tan(ang)*(rnu-1)*td)/2-(shvert-th-pdvert)+SoffitVert, 13,
						LowerEndX2-LowerSoffitX1,0,-1
					DEL 1
				ENDIF
			ENDIF

			IF iLowerJunctionType = LOWERJUNCTION_FLOOR_OR_LANDING THEN
				IF iFlightSectionType = FLIGHTSECTION_WITH_SOFFIT THEN		!!! SOFFIT
					ADDz st
						PRISM_ 5, FlightWidth,
							0,-shvert+th+pdvert+SoffitVert,15,
							0,-shvert+th+pdvert,15,
							(rnu-1)*td/2, (tan(ang)*(rnu-1)*td)/2-(shvert-th-pdvert), 8,
							(rnu-1)*td/2, (tan(ang)*(rnu-1)*td)/2-(shvert-th-pdvert)+SoffitVert, 13,
							0,-shvert+th+pdvert+SoffitVert,-1
					DEL 1
				ENDIF
			ENDIF

			IF iLowerJunctionType = LOWERJUNCTION_STRAIGHT_END THEN
				ADDy -(shvert-th-pdvert)
					IF iFlightSectionType = FLIGHTSECTION_WITH_SOFFIT THEN		!!! SOFFIT
						ADDz st
						IF LowerEndHgt>LowerSoffitX1 THEN
							Point1=LowerEndHgt-LowerSoffitX1
							Point2=LowerEndHgtY
						ELSE
							Point1=0
							Point2=SoffitVert
						ENDIF

						PRISM_ 6, FlightWidth,
							Point1,Point2,15,
							Point1,LowerEndHgtY,15,
							LowerEndHgt,LowerEndHgtY,15,
							(rnu-1)*td/2, (tan(ang)*(rnu-1)*td)/2, 8,
							(rnu-1)*td/2, (tan(ang)*(rnu-1)*td)/2+SoffitVert, 13,
							Point1,Point2,-1
						DEL 1
					ENDIF
				DEL 1
			ENDIF
	ELSE

			IF iBottomStepArrangement <> BSTEPARRANGE_NORMAL THEN
				ADDx td+nps/2
			ELSE
				ADDx nps
			ENDIF

			ROTy 90
			CUTPLANE 180
			DEL 2

			ROTx 90
			CUTPLANE
			DEL 1

				IF iFlightSectionType = FLIGHTSECTION_WITH_SOFFIT THEN		!!! SOFFIT
					ADDz st
						PRISM_ 5, FlightWidth,
						LowerEndX2-LowerSoffitX1,0,15,
						LowerEndX2,0,15,
						(rnu-1)*td/2, (tan(ang)*(rnu-1)*td)/2-(shvert-th-pdvert), 8,
						(rnu-1)*td/2, (tan(ang)*(rnu-1)*td)/2-(shvert-th-pdvert)+SoffitVert, 13,
						LowerEndX2-LowerSoffitX1,0,-1
					DEL 1
				ENDIF

			CUTEND
			CUTEND

	ENDIF

		!!! *** Upper Junction Type *** !!!
			IF iUpperJunctionType = UPPERJUNCTION_FLOOR_OR_LANDING THEN
				ADDy -(shvert-th-pdvert)
					IF iFlightSectionType = FLIGHTSECTION_WITH_SOFFIT THEN		!!! SOFFIT
						ADDz st
						PRISM_ 5, FlightWidth,
							(rnu-1)*td/2, (tan(ang)*(rnu-1)*td)/2, 13,
							(rnu-1)*td+UpperEndX2, (tan(ang)*(rnu-1)*td)+shvert-pdvert-lst, 15,
							(rnu-1)*td+UpperEndX2-LowerSoffitX1, (tan(ang)*(rnu-1)*td)+shvert-pdvert-lst, 15,
							(rnu-1)*td/2, (tan(ang)*(rnu-1)*td)/2+SoffitVert, 8,
							(rnu-1)*td/2, (tan(ang)*(rnu-1)*td)/2, -1
						DEL 1
					ENDIF

				DEL 1
			ENDIF

			IF iUpperJunctionType = UPPERJUNCTION_STRAIGHT_END THEN
				ADDy -(shvert-th-pdvert)
					IF iFlightSectionType = FLIGHTSECTION_WITH_SOFFIT THEN		!!! SOFFIT
						ADDz st
						PRISM_ 5, FlightWidth,
							(rnu-1)*td/2, (tan(ang)*(rnu-1)*td)/2, 13,
							(rnu-1)*td, (tan(ang)*(rnu-1)*td), 15,
							(rnu-1)*td, (tan(ang)*(rnu-1)*td)+SoffitVert, 15,
							(rnu-1)*td/2, (tan(ang)*(rnu-1)*td)/2+SoffitVert, 8,
							(rnu-1)*td/2, (tan(ang)*(rnu-1)*td)/2, -1
						DEL 1
					ENDIF
				DEL 1
			ENDIF
	DEL 3
ENDIF
DEL 1

!!! *** End of Soffit *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!! *** TREADS *** !!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

ADDx st

IF iBottomStepArrangement = BSTEPARRANGE_NORMAL THEN
	RiserEndValue = (rnu-1)
ELSE
	RiserEndValue = (rnu-2)
ENDIF


FOR NumRisers=1 to RiserEndValue

	IF NumRisers=RiserEndValue then
	temp_tdo=0
	ELSE
	temp_tdo=tdo
	ENDIF

		IF iBottomStepArrangement <> BSTEPARRANGE_NORMAL THEN add 0,td,th
		ADDZ th-rt
			MATERIAL mat_tread
			SECT_FILL typeFillTread, penBackFillTread, penFillTread, penLineTread

			PRISM_ 5, rt,
				0,-ns,15,
				FlightWidth,-ns,15,
				FlightWidth,td+temp_tdo,15,
				0,td+temp_tdo,15,
				0,-ns,-1
		DEL 1
		IF iBottomStepArrangement <> BSTEPARRANGE_NORMAL THEN DEL 1
	ADD 0,td,th
NEXT NumRisers
DEL RiserEndValue

!!!!!!!!!!!!!!!!!!!!!!!!!! *** BATTENS *** !!!!!!!!!!!!!!!!!!!!!!!!!!
if bt_m <> BATTEN_NONE then
ADDx -st
		if bt_m = BATTEN_NOSING then
			btts=th*2/3-rt
			bttl=th/3
		endif
		if bt_m = BATTEN_INTERM then
			btts=(th)/3-rt/2
			bttl=th/3
		endif
		if bt_m = BATTEN_TREAD then
			btts=0
			bttl=th/3
		endif
		if bt_m = BATTEN_FULL then
			btts=0
			bttl=th-rt
		endif

		FOR NumRisers=1 to RiserEndValue
			SECT_FILL typeFillRiser, penBackFillRiser, penFillRiser, penLineRiser

				IF iBottomStepArrangement <> BSTEPARRANGE_NORMAL THEN add 0,td,th
					ADDz btts
						MATERIAL mat_riser
						PRISM 5, bttl,
							st, rt,
							st, 0,
							st+FlightWidth, 0,
							st+FlightWidth, rt,
							st, rt
					DEL 1
				IF iBottomStepArrangement <> BSTEPARRANGE_NORMAL THEN DEL 1
			ADD 0,td,th
		NEXT NumRisers
		DEL RiserEndValue
DEL 1
ENDIF

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!! *** BOTTOM STEP *** !!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

CutPostX=nps
CutPostY=nps/2


IF np_m = POSTPOS_BOTH THEN
		IF iBottomStepArrangement = BSTEPARRANGE_DSTEP THEN
			ADDz th-rt
			MATERIAL mat_tread
			SECT_FILL typeFillTread, penBackFillTread, penFillTread, penLineTread

			!!! *** TREAD
			PRISM_ 15, rt,
				-CutPostX,-ns,79,
				FlightWidth+CutPostX,-ns,79,
				FlightWidth+CutPostX,td/2,900,
				0,180,4000,
				FlightWidth+CutPostX,td+ns,15,
				FlightWidth+CutPostX,td-CutPostY,15,
				FlightWidth,td-CutPostY,15,
				FlightWidth,td+tdo,15,
				0,td+tdo,79,
				0,td-CutPostY,79,
				-CutPostX,td-CutPostY,79,
				-CutPostX,td+ns,79,
				-CutPostX,td/2,900,
				-CutPostX,180,4000,
				-CutPostX,-ns,-1
		DEL 1
			MATERIAL mat_riser
			SECT_FILL typeFillRiser, penBackFillRiser, penFillRiser, penLineRiser

			!!! *** TREAD
			PRISM_ 17, th-rt,
				-CutPostX,0,79,
				FlightWidth+CutPostX,0,79,
				FlightWidth+CutPostX,td/2,900,
				0,180,4000,
				FlightWidth+CutPostX,td,15,
				FlightWidth+CutPostX,td-rt,79,
				FlightWidth+CutPostX,td/2,900,
				0,-180,4000,
				FlightWidth+CutPostX,rt,15,
				-CutPostX,rt,79,
				-CutPostX,td/2,900,
				-CutPostX,-180,4000,
				-CutPostX,td-rt,15,
				-CutPostX,td,79,
				-CutPostX,td/2,900,
				-CutPostX,180,4000,
				-CutPostX,0,-1
		ENDIF

		IF iBottomStepArrangement = BSTEPARRANGE_BULLNOSE THEN
		ADDz th-rt
			MATERIAL mat_tread
			SECT_FILL typeFillTread, penBackFillTread, penFillTread, penLineTread

			!!! *** TREAD
			PRISM_ 13, rt,
				0, td+tdo,15,
				0, td-CutPostY,15,
				-ns, td-CutPostY,79,
				td-CutPostY, td-CutPostY,900,
				0, 90,4000,
				td-CutPostY,-ns,13,
				FlightWidth-(td-CutPostY),-ns,79,
				FlightWidth-(td-CutPostY),td-CutPostY,900,
				0,90,4000,
				FlightWidth+ns,td-CutPostY,15,
				FlightWidth,td-CutPostY,15,
				FlightWidth,td+tdo,15,
				0,td+tdo,-1
		DEL 1
			MATERIAL mat_riser
			SECT_FILL typeFillRiser, penBackFillRiser, penFillRiser, penLineRiser
			!!! *** TREAD
			PRISM_ 21, th-rt,
				0, td+CutPostY,15,
				0, td-CutPostY,79,
				td-CutPostY, td-CutPostY,900,
				0, 90,4000,
				td-CutPostY,0,13,
				FlightWidth-(td-CutPostY),0,79,
				FlightWidth-(td-CutPostY),td-CutPostY,900,
				0,90,4000,
				FlightWidth,td-CutPostY,15,
				FlightWidth,td+tdo,15,
				FlightWidth-rt,td+tdo,15,
				FlightWidth-rt,td-CutPostY,79,
				FlightWidth-(td-CutPostY),td-CutPostY,900,
				0,-90,4000,
				FlightWidth-(td-CutPostY),rt,13,
				td-CutPostY,rt,79,
				td-CutPostY, td-CutPostY,900,
				0,-90,4000,
				rt,td-CutPostY,13,
				rt,td+CutPostY,15,
				0, td+CutPostY,-1
		ENDIF

		IF iBottomStepArrangement = BSTEPARRANGE_SPLAYED THEN
		ADDz th-rt
			MATERIAL mat_tread
			SECT_FILL typeFillTread, penBackFillTread, penFillTread, penLineTread
			!!! *** TREAD
			PRISM_ 11,rt,
				0,td+tdo,15,
				0,td-CutPostY,15,
				-ns,td-CutPostY,15,
				-ns,2/3*td-ns*tan(22.5),15,
				2/3*td-ns*tan(22.5),-ns,15,
				FlightWidth-2/3*td+ns*tan(22.5),-ns,15,
				FlightWidth+ns,2/3*td-ns*tan(22.5),15,
				FlightWidth+ns,td-CutPostY,15,
				FlightWidth,td-CutPostY,15,
				FlightWidth,td+tdo,15,
				0,td+tdo,-1
		DEL 1
			MATERIAL mat_riser
			SECT_FILL typeFillRiser, penBackFillRiser, penFillRiser, penLineRiser
			!!! *** TREAD
			PRISM_ 13,th-rt,
				0,td+CutPostY,15,
				0,2/3*td,15,
				2/3*td,0,15,
				FlightWidth-2/3*td,0,15,
				FlightWidth,2/3*td,15,
				FlightWidth,td+CutPostY,15,
				FlightWidth-rt,td+CutPostY,15,
				FlightWidth-rt,2/3*td+ns*tan(22.5),15,
				FlightWidth-2/3*td-ns*tan(22.5),rt,15,
				2/3*td+ns*tan(22.5),rt,15,
				rt,2/3*td+ns*tan(22.5),15,
				rt,td+CutPostY,15,
				0,td+CutPostY,-1
		ENDIF

ENDIF
IF np_m = POSTPOS_LEFT or np_m = POSTPOS_RIGHT THEN

IF np_m = POSTPOS_RIGHT THEN
mul -1,1,1
ADDx -FlightWidth
ENDIF

		IF iBottomStepArrangement = BSTEPARRANGE_DSTEP THEN
		ADDz th-rt
			MATERIAL mat_tread
			SECT_FILL typeFillTread, penBackFillTread, penFillTread, penLineTread
			!!! *** TREAD
			PRISM_ 10, rt,
				-CutPostX,-ns,15,
				FlightWidth,-ns,15,
				FlightWidth,td+tdo,15,
				0,td+tdo,79,
				0,td-CutPostY,79,
				-CutPostX,td-CutPostY,79,
				-CutPostX,td+ns,79,
				-CutPostX,td/2,900,
				-CutPostX,180,4000,
				-CutPostX,-ns,-1
		DEL 1
			MATERIAL mat_riser
			SECT_FILL typeFillRiser, penBackFillRiser, penFillRiser, penLineRiser
			!!! *** TREAD
			PRISM_ 11, th-rt,
				-CutPostX,0,79,
				FlightWidth,0,79,
				FlightWidth,rt,15,
				-CutPostX,rt,79,
				-CutPostX,td/2,900,
				-CutPostX,-180,4000,
				-CutPostX,td-rt,15,
				-CutPostX,td,79,
				-CutPostX,td/2,900,
				-CutPostX,180,4000,
				-CutPostX,0,-1
		ENDIF

		IF iBottomStepArrangement = BSTEPARRANGE_BULLNOSE THEN
		ADDz th-rt
			MATERIAL mat_tread
			SECT_FILL typeFillTread, penBackFillTread, penFillTread, penLineTread
			!!! *** TREAD
			PRISM_ 9, rt,
				0, td+tdo,15,
				0, td-CutPostY,15,
				-ns, td-CutPostY,79,
				td-CutPostY, td-CutPostY,900,
				0, 90,4000,
				td-CutPostY,-ns,13,
				FlightWidth,-ns,15,
				FlightWidth,td+tdo,15,
				0,td+tdo,-1
		DEL 1
			MATERIAL mat_riser
			SECT_FILL typeFillRiser, penBackFillRiser, penFillRiser, penLineRiser
			!!! *** TREAD
			PRISM_ 13, th-rt,
				0, td+CutPostY,15,
				0, td-CutPostY,79,
				td-CutPostY, td-CutPostY,900,
				0, 90,4000,
				td-CutPostY,0,13,
				FlightWidth,0,15,
				FlightWidth,rt,15,
				td-CutPostY,rt,79,
				td-CutPostY, td-CutPostY,900,
				0,-90,4000,
				rt,td-CutPostY,13,
				rt,td+CutPostY,15,
				0, td+CutPostY,-1
		ENDIF

		IF iBottomStepArrangement = BSTEPARRANGE_SPLAYED THEN
		ADDz th-rt
			MATERIAL mat_tread
			SECT_FILL typeFillTread, penBackFillTread, penFillTread, penLineTread
			!!! *** TREAD
			PRISM_ 8,rt,
				0,td+tdo,15,
				0,td-CutPostY,15,
				-ns,td-CutPostY,15,
				-ns,2/3*td-ns*tan(22.5),15,
				2/3*td-ns*tan(22.5),-ns,15,
				FlightWidth,-ns,15,
				FlightWidth,td+tdo,15,
				0,td+tdo,-1
		DEL 1
			MATERIAL mat_riser
			SECT_FILL typeFillRiser, penBackFillRiser, penFillRiser, penLineRiser
			!!! *** TREAD
			PRISM_ 9,th-rt,
				0,td+CutPostY,15,
				0,2/3*td,15,
				2/3*td,0,15,
				FlightWidth,0,15,
				FlightWidth,rt,15,
				2/3*td+ns*tan(22.5),rt,15,
				rt,2/3*td+ns*tan(22.5),15,
				rt,td+CutPostY,15,
				0,td+CutPostY,-1
		ENDIF

IF np_m = POSTPOS_RIGHT THEN DEL 2
ENDIF

DEL 1
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!! *** RAILING *** !!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

IF hrtr_m=1 THEN		!!! HANDRAIL RIGHT WIDTH
		HandrailHgtR=hrhr
	ELSE
		HandrailHgtR=hrdr
ENDIF

IF hrtl_m=1 THEN		!!! HANDRAIL RIGHT WIDTH
		HandrailHgtL=hrhl
	ELSE
		HandrailHgtL=hrdl
ENDIF

! ------------------------------------------------------------------------------
! Left rail
! ------------------------------------------------------------------------------

IF rail_m = RAILPOS_LEFT or rail_m = RAILPOS_BOTH THEN
	if bSameRails then
		leftRailType_m = rightRailType_m
	endif

	rplPostBase = (leftRailType_m = 7 or leftRailType_m = 8 or leftRailType_m = 9 or leftRailType_m = 11)

	IF np_m = POSTPOS_LEFT or np_m = POSTPOS_BOTH THEN
		OverhangLBottom=0
		temp_npsLX=nps
		temp_npsLY=nps*tan(ang)

		IF ptl_m = POST_RECTANGULAR THEN
			temp_LengL2=bComplexRailLeft*pwl/2
			CutRailBottomL=pwl/2*tan(ang)
			temp_hrol=pwl/2		!! No Handrail Overhang if Newel Post=1
			ELSE
			temp_LengL2=bComplexRailLeft*pdl/2
			CutRailBottomL=pdl/2*tan(ang)
			temp_hrol=pdl/2		!! No Handrail Overhang if Newel Post=1
		ENDIF

		IF iBottomStepArrangement <> BSTEPARRANGE_NORMAL THEN
			temp_rnuL=rnu-3
			temp_btaLx=td-nps/2
			temp_btaLY=(td-nps/2)*tan(ang)
			temp_LengL1=nps/2
		ELSE
			temp_rnuL=rnu-2
			temp_btaLx=0
			temp_btaLY=0
			temp_LengL1=0
		ENDIF
	ELSE
		temp_npsLX=0
		temp_npsLY=0
		temp_rnuL=rnu-2
		temp_btaLx=0
		temp_btaLY=0
		temp_LengL1=0
	ENDIF

	!!! Railing Length in Vertical Orientation Method
	LRailLength=td*(temp_rnuL)+OverhangLBottom+OverhangLTop-temp_npsLX+temp_LengL1-temp_LengL2

	!!! Railing Length in Perpendicular Orientation Method
	atfogL=sqr((temp_rnuL)*(temp_rnuL)*(td*td+th*th))+(OverhangLBottom+OverhangLTop)/cos(ang)

	add 0,-OverhangLBottom+temp_npsLX+temp_btaLX+temp_LengL2,-OverhangLBottom*tan(ang)+temp_npsLY+temp_btaLY+temp_LengL2*tan(ang)
	ADD st/2-roffl,0,th+pdvert
	ROTz 90

	IF roml_m = RAILORIENT_VERTICAL THEN
		Roty -ang
		IF ABS(gs_PostBaseOverhangR)<EPS and bComplexRailLeft THEN CUTPLANE 180
		DEL 1

		lraSimple=LRailLength
		lraComplex=LRailLength
		additionXComplex=0
		additionZComplex=-CutRailBottomL
		hrovL=temp_hrol
		hrovR=hrol
		postNumber = npl
		rom_m = 1
		rmm_m = 1
		side = SIDE_LEFT
		gosub "callRailsForStair"

		IF ABS(gs_PostBaseOverhangR)<EPS and bComplexRailLeft THEN cutend
	else
		lraSimple=atfogL
		lraComplex=atfogL
		additionXComplex=0
		additionZComplex=0
		hrovL=temp_hrol
		hrovR=hrol
		postNumber = npl
		rom_m = 2
		rmm_m = 2
		side = SIDE_LEFT
		gosub "callRailsForStair"
	endif

	DEL 3

ENDIF

! ------------------------------------------------------------------------------
! Right rail
! ------------------------------------------------------------------------------

IF rail_m = RAILPOS_RIGHT or rail_m = RAILPOS_BOTH THEN
	rprPostBase = (rightRailType_m = 7 or rightRailType_m = 8 or rightRailType_m = 9 or rightRailType_m = 11)

	IF np_m = POSTPOS_RIGHT or np_m = POSTPOS_BOTH THEN
		OverhangRBottom=0
		temp_npsRX=nps
		temp_npsRY=nps*tan(ang)
		temp_hror=hror	!! Handrail Overhang if Newel Post=0

		IF ptr_m = POST_RECTANGULAR THEN
			temp_LengR2=bComplexRailRight*pwr/2
			CutRailBottomR=pwr/2*tan(ang)
			temp_hror=pwr/2		!! No Handrail Overhang if Newel Post=1
			ELSE
			temp_LengR2=bComplexRailRight*pdr/2
			CutRailBottomR=pdr/2*tan(ang)
			temp_hror=pdr/2		!! No Handrail Overhang if Newel Post=1
		ENDIF

		IF iBottomStepArrangement <> BSTEPARRANGE_NORMAL THEN
			temp_rnuR=rnu-3
			temp_btaRx=td-nps/2
			temp_btaRY=(td-nps/2)*tan(ang)
			temp_LengR1=nps/2
		ELSE
			temp_rnuR=rnu-2
			temp_btaRx=0
			temp_btaRY=0
			temp_LengR1=0
		ENDIF
	ELSE
		temp_npsRX=0
		temp_npsRY=0
		temp_rnuR=rnu-2
		temp_btaRx=0
		temp_btaRY=0
		temp_LengR1=0
		temp_LengR2=0
		temp_hror=hror	!! Handrail Overhang if Newel Post=0
	ENDIF

	!!! Railing Length in Vertical Orientation Method
	RRailLength=td*(temp_rnuR)+OverhangRBottom+OverhangRTop-temp_npsRX+temp_LengR1-temp_LengR2

	!!! Railing Length in Perpendicular Orientation Method
	atfogR=sqr((temp_rnuR)*(temp_rnuR)*(td*td+th*th))+(OverhangRBottom+OverhangRTop)/cos(ang)

	add 0,-OverhangRBottom+temp_npsRX+temp_btaRX+temp_LengR2,-OverhangRBottom*tan(ang)+temp_npsRY+temp_btaRY+temp_LengR2*tan(ang)
	ADD flw-st/2+roffr,0,th+pdvert
	ROTz 90

	IF romr_m = RAILORIENT_VERTICAL THEN
		Roty -ang
		IF ABS(gs_PostBaseOverhangR)<EPS and bComplexRailRight THEN CUTPLANE 180			!!gs_PostBaseOverhangR=0
		DEL 1

		!!! *** Right Railing/Lower Part
		lraSimple=RRailLength
		lraComplex=RRailLength
		additionXComplex=0
		additionZComplex=-CutRailBottomR
		hrovL=temp_hror
		hrovR=hror
		postNumber = npr
		side = SIDE_RIGHT
		rom_m = 1
		rmm_m = 1
		gosub "callRailsForStair"

		IF ABS(gs_PostBaseOverhangR)<EPS and bComplexRailRight THEN cutend			!!gs_PostBaseOverhangR=0
	else
		!!! *** Right Railing/Lower Part
		lraSimple=atfogR
		lraComplex=atfogR
		additionXComplex=0
		additionZComplex=0
		hrovL=temp_hror
		hrovR=hror
		postNumber = npr
		side = SIDE_RIGHT
		rom_m = 2
		rmm_m = 2
		gosub "callRailsForStair"
	endif

	del 3

ENDIF

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!! HOTSPOTS in 3D / Stair !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

	lrah=td*(rnu-1)		!!! Length

	FlightUNID=1

	!!! FLIGHT WIDTH
	HOTSPOT 		0,	0,	0, FlightUNID, flw, 1+256: FlightUNID=FlightUNID+1
	HOTSPOT 		-1,	0,	0, FlightUNID, flw, 3: FlightUNID=FlightUNID+1
	HOTSPOT 		flw,0,	0, FlightUNID, flw, 2: FlightUNID=FlightUNID+1

	HOTSPOT 		flw,lrah,	(rnu)*th, FlightUNID : FlightUNID=FlightUNID+1
	HOTSPOT 		0,	lrah,	(rnu)*th, FlightUNID : FlightUNID=FlightUNID+1

	IF iUpperJunctionType = UPPERJUNCTION_FLOOR_OR_LANDING then

		FlightUNID=50

		HOTSPOT 		0,	lrah+UpperEndX2,(rnu)*th-lst, FlightUNID, flw, 1+256: FlightUNID=FlightUNID+1
		HOTSPOT 		-1,	lrah+UpperEndX2,(rnu)*th-lst, FlightUNID, flw, 3: FlightUNID=FlightUNID+1
		HOTSPOT 		flw,lrah+UpperEndX2,(rnu)*th-lst, FlightUNID, flw, 2: FlightUNID=FlightUNID+1
	ELSE

		FlightUNID=100

		HOTSPOT 		0,	lrah,(rnu)*th-shvert+pdvert, FlightUNID, flw, 1+256: FlightUNID=FlightUNID+1
		HOTSPOT 		-1,	lrah,(rnu)*th-shvert+pdvert, FlightUNID, flw, 3: FlightUNID=FlightUNID+1
		HOTSPOT 		flw,lrah,(rnu)*th-shvert+pdvert, FlightUNID, flw, 2: FlightUNID=FlightUNID+1
	ENDIF



	!!!*** HOTSPOTS at LOWER JUNCTION *** !!!/!!! Right String - Lower End

	IF np_m = POSTPOS_LEFT or np_m = POSTPOS_NONE THEN
		IF iLowerJunctionType <> LOWERJUNCTION_STRAIGHT_END THEN

			StringUNID=6000

			!!! LOWER STRING END HEIGHT
			HOTSPOT 		flw,	-LowerEndX1+LowerEndHgtX, 0, StringUNID, LowerEndHgt, 1+128: StringUNID=StringUNID+1
			HOTSPOT 		flw,	-LowerEndX1+LowerEndHgtX, -1, StringUNID, LowerEndHgt, 3: StringUNID=StringUNID+1
			HOTSPOT 		flw, 	-LowerEndX1+LowerEndHgtX, LowerEndHgt, StringUNID, LowerEndHgt, 2: StringUNID=StringUNID+1

			!!! STRING WIDTH
			HOTSPOT 		flw,	-LowerEndX1+LowerEndHgtX,LowerEndHgt, StringUNID, st, 1+128: StringUNID=StringUNID+1
			HOTSPOT 		flw+1,	-LowerEndX1+LowerEndHgtX,LowerEndHgt, StringUNID, st, 3: StringUNID=StringUNID+1
			HOTSPOT 		flw-st, -LowerEndX1+LowerEndHgtX,LowerEndHgt, StringUNID, st, 2: StringUNID=StringUNID+1

			IF iLowerJunctionType = LOWERJUNCTION_FLOOR_OR_LANDING THEN
				HOTSPOT flw,0,	-shvert+th+pdvert, StringUNID : StringUNID=StringUNID+1
			ENDIF
		ELSE

			StringUNID=6100

			ADDz -shvert+th+pdvert
				!!! LOWER STRING END HEIGHT
				HOTSPOT 		flw-st,	0, 	LowerEndHgtY, StringUNID, LowerEndHgt, 1+128: StringUNID=StringUNID+1
				HOTSPOT 		flw-st,	-1, LowerEndHgtY, StringUNID, LowerEndHgt, 3: StringUNID=StringUNID+1
				HOTSPOT 		flw-st, LowerEndHgt, LowerEndHgtY, StringUNID, LowerEndHgt, 2: StringUNID=StringUNID+1

				!!! STRING WIDTH
				HOTSPOT 		flw,	0,LowerEndHgtY, StringUNID, st, 1+128: StringUNID=StringUNID+1
				HOTSPOT 		flw+1,	0,LowerEndHgtY, StringUNID, st, 3: StringUNID=StringUNID+1
				HOTSPOT 		flw-st, 0,LowerEndHgtY, StringUNID, st, 2: StringUNID=StringUNID+1
			DEL 1

				HOTSPOT 		flw,	0,th+pdvert, StringUNID, st, 1+128: StringUNID=StringUNID+1
				HOTSPOT 		flw+1,	0,th+pdvert, StringUNID, st, 3: StringUNID=StringUNID+1
				HOTSPOT 		flw-st, 0,th+pdvert, StringUNID, st, 2: StringUNID=StringUNID+1
		ENDIF
	ENDIF

	IF np_m = POSTPOS_LEFT or np_m = POSTPOS_BOTH THEN
			IF iBottomStepArrangement <> BSTEPARRANGE_NORMAL THEN
				ADD 0,td+nps/2,2*th+pdvert+nps/2*tan(ang)
			ELSE
				ADD 0,nps,th+pdvert+nps*tan(ang)
			ENDIF

			StringUNID=6200

			!!! STRING WIDTH if there is Newel Post on Left Side
			HOTSPOT 		0,		0, 	0, StringUNID, st, 1+128: StringUNID=StringUNID+1
			HOTSPOT 		-1,		0, 	0, StringUNID, st, 3: StringUNID=StringUNID+1
			HOTSPOT 		st,		0, 	0, StringUNID, st, 2: StringUNID=StringUNID+1
			DEL 1
	ENDIF

	!!!*** HOTSPOTS at LOWER JUNCTION *** !!!/!!! Left String - Lower End

	IF np_m = POSTPOS_RIGHT or np_m = POSTPOS_NONE THEN
		IF iLowerJunctionType <> LOWERJUNCTION_STRAIGHT_END THEN

			StringUNID=6300

			!!! LOWER STRING END HEIGHT
			HOTSPOT 		0,	-LowerEndX1+LowerEndHgtX, 0, StringUNID, LowerEndHgt, 1+128: StringUNID=StringUNID+1
			HOTSPOT 		0,	-LowerEndX1+LowerEndHgtX, -1, StringUNID, LowerEndHgt, 3: StringUNID=StringUNID+1
			HOTSPOT 		0, 	-LowerEndX1+LowerEndHgtX, LowerEndHgt, StringUNID, LowerEndHgt, 2: StringUNID=StringUNID+1

			!!! STRING WIDTH
			HOTSPOT 		0,	-LowerEndX1+LowerEndHgtX,LowerEndHgt, StringUNID, st, 1+128: StringUNID=StringUNID+1
			HOTSPOT 		-1,	-LowerEndX1+LowerEndHgtX,LowerEndHgt, StringUNID, st, 3: StringUNID=StringUNID+1
			HOTSPOT 		st, -LowerEndX1+LowerEndHgtX,LowerEndHgt, StringUNID, st, 2: StringUNID=StringUNID+1

			IF iLowerJunctionType = LOWERJUNCTION_FLOOR_OR_LANDING THEN
				HOTSPOT 0,0,	-shvert+th+pdvert, StringUNID : StringUNID=StringUNID+1
			ENDIF

		ELSE

			StringUNID=6400

			ADDz -shvert+th+pdvert
				!!! LOWER STRING END HEIGHT
				HOTSPOT 		st,	0, 	LowerEndHgtY, StringUNID, LowerEndHgt, 1+128: StringUNID=StringUNID+1
				HOTSPOT 		st,	-1, LowerEndHgtY, StringUNID, LowerEndHgt, 3: StringUNID=StringUNID+1
				HOTSPOT 		st, LowerEndHgt, LowerEndHgtY, StringUNID, LowerEndHgt, 2: StringUNID=StringUNID+1

				!!! STRING WIDTH
				HOTSPOT 		0,	0,LowerEndHgtY, StringUNID, st, 1+128: StringUNID=StringUNID+1
				HOTSPOT 		-1,	0,LowerEndHgtY, StringUNID, st, 3: StringUNID=StringUNID+1
				HOTSPOT 		st,0,LowerEndHgtY, StringUNID, st, 2: StringUNID=StringUNID+1
			DEL 1

				HOTSPOT 		0,	0,th+pdvert, StringUNID, st, 1+128: StringUNID=StringUNID+1
				HOTSPOT 		-1,	0,th+pdvert, StringUNID, st, 3: StringUNID=StringUNID+1
				HOTSPOT 		st,0,th+pdvert, StringUNID, st, 2: StringUNID=StringUNID+1
		ENDIF
	ENDIF

	IF np_m = POSTPOS_RIGHT or np_m = POSTPOS_BOTH THEN
			IF iBottomStepArrangement <> BSTEPARRANGE_NORMAL THEN
				ADD flw,td+nps/2,2*th+pdvert+nps/2*tan(ang)
			ELSE
				ADD flw,nps,th+pdvert+nps*tan(ang)
			ENDIF

			StringUNID=6500

			!!! STRING WIDTH if there is Newel Post on Right Side
			HOTSPOT 		0,		0, 	0, StringUNID, st, 1+128: StringUNID=StringUNID+1
			HOTSPOT 		+1,		0, 	0, StringUNID, st, 3: StringUNID=StringUNID+1
			HOTSPOT 		-st,		0, 	0, StringUNID, st, 2: StringUNID=StringUNID+1
			DEL 1
	ENDIF

	!!!*** HOTSPOTS at UPPER JUNCTION *** !!!

	StringUNID=6600

	!!! UPPER STRING END HEIGHT
	HOTSPOT 		0,	lrah,	(rnu)*th, StringUNID, UpperEndHgt, 1+128: StringUNID=StringUNID+1
	HOTSPOT 		0,	lrah,	(rnu)*th-1, StringUNID, UpperEndHgt, 3: StringUNID=StringUNID+1
	HOTSPOT 		0, 	lrah,	(rnu)*th+UpperEndHgt, StringUNID, UpperEndHgt, 2: StringUNID=StringUNID+1

	HOTSPOT 		st,lrah,	(rnu)*th, StringUNID, UpperEndHgt, 1+128: StringUNID=StringUNID+1
	HOTSPOT 		st,lrah,	(rnu)*th-1, StringUNID, UpperEndHgt, 3: StringUNID=StringUNID+1
	HOTSPOT 		st, lrah,	(rnu)*th+UpperEndHgt, StringUNID, UpperEndHgt, 2: StringUNID=StringUNID+1

	HOTSPOT 		flw,lrah,	(rnu)*th, StringUNID, UpperEndHgt, 1+128: StringUNID=StringUNID+1
	HOTSPOT 		flw,lrah,	(rnu)*th-1, StringUNID, UpperEndHgt, 3: StringUNID=StringUNID+1
	HOTSPOT 		flw,lrah,	(rnu)*th+UpperEndHgt, StringUNID, UpperEndHgt, 2: StringUNID=StringUNID+1

	HOTSPOT 		flw-st,lrah,(rnu)*th, StringUNID, UpperEndHgt, 1+128: StringUNID=StringUNID+1
	HOTSPOT 		flw-st,lrah,(rnu)*th-1, StringUNID, UpperEndHgt, 3: StringUNID=StringUNID+1
	HOTSPOT 		flw-st,lrah,(rnu)*th+UpperEndHgt, StringUNID, UpperEndHgt, 2: StringUNID=StringUNID+1

	!!! STRING WIDTH
	IF iUpperJunctionType = UPPERJUNCTION_FLOOR_OR_LANDING then

		StringUNID=6700

		HOTSPOT 		0,	lrah+UpperEndX2,(rnu)*th-lst, StringUNID, st, 1+128: StringUNID=StringUNID+1
		HOTSPOT 		-1,	lrah+UpperEndX2,(rnu)*th-lst, StringUNID, st, 3: StringUNID=StringUNID+1
		HOTSPOT 		+st,lrah+UpperEndX2,(rnu)*th-lst, StringUNID, st, 2: StringUNID=StringUNID+1

		HOTSPOT 		flw,	lrah+UpperEndX2,(rnu)*th-lst, StringUNID, st, 1+128: StringUNID=StringUNID+1
		HOTSPOT 		flw+1,	lrah+UpperEndX2,(rnu)*th-lst, StringUNID, st, 3: StringUNID=StringUNID+1
		HOTSPOT 		flw-st, lrah+UpperEndX2,(rnu)*th-lst, StringUNID, st, 2: StringUNID=StringUNID+1
	ELSE

		StringUNID=6800

		HOTSPOT 		0,	lrah,(rnu)*th-shvert+pdvert, StringUNID, st, 1+128: StringUNID=StringUNID+1
		HOTSPOT 		-1,	lrah,(rnu)*th-shvert+pdvert, StringUNID, st, 3: StringUNID=StringUNID+1
		HOTSPOT 		+st,lrah,(rnu)*th-shvert+pdvert, StringUNID, st, 2: StringUNID=StringUNID+1

		HOTSPOT 		flw,	lrah,(rnu)*th-shvert+pdvert, StringUNID, st, 1+128: StringUNID=StringUNID+1
		HOTSPOT 		flw+1,	lrah,(rnu)*th-shvert+pdvert, StringUNID, st, 3: StringUNID=StringUNID+1
		HOTSPOT 		flw-st, lrah,(rnu)*th-shvert+pdvert, StringUNID, st, 2: StringUNID=StringUNID+1
	ENDIF

	!!! UPPER JUNCTION TYPE
	IF iUpperJunctionType = UPPERJUNCTION_FLOOR_OR_LANDING then

		StringUNID=6900

		HOTSPOT 		0,	lrah,	(rnu)*th, StringUNID, lst, 1+128: StringUNID=StringUNID+1
		HOTSPOT 		0,	lrah,	(rnu)*th+1, StringUNID, lst, 3: StringUNID=StringUNID+1
		HOTSPOT 		0, 	lrah,	(rnu)*th-lst, StringUNID, lst, 2: StringUNID=StringUNID+1

		HOTSPOT 		st,	lrah,	(rnu)*th, StringUNID, lst, 1+128: StringUNID=StringUNID+1
		HOTSPOT 		st,	lrah,	(rnu)*th+1, StringUNID, lst, 3: StringUNID=StringUNID+1
		HOTSPOT 		st, 	lrah,	(rnu)*th-lst, StringUNID, lst, 2: StringUNID=StringUNID+1

		HOTSPOT 		flw,lrah,	(rnu)*th, StringUNID, lst, 1+128: StringUNID=StringUNID+1
		HOTSPOT 		flw,lrah,	(rnu)*th+1, StringUNID, lst, 3: StringUNID=StringUNID+1
		HOTSPOT 		flw,lrah,	(rnu)*th-lst, StringUNID, lst, 2: StringUNID=StringUNID+1

		HOTSPOT 		flw-st,lrah,	(rnu)*th, StringUNID, lst, 1+128: StringUNID=StringUNID+1
		HOTSPOT 		flw-st,lrah,	(rnu)*th+1, StringUNID, lst, 3: StringUNID=StringUNID+1
		HOTSPOT 		flw-st,lrah,	(rnu)*th-lst, StringUNID, lst, 2: StringUNID=StringUNID+1

		HOTSPOT 		0,	lrah+UpperEndX2,(rnu)*th-lst, StringUNID : StringUNID=StringUNID+1
		HOTSPOT 		flw,lrah+UpperEndX2,(rnu)*th-lst, StringUNID : StringUNID=StringUNID+1
	ENDIF

!!!!!!!!!!!!!!!!!!!!!!!!!! *** RAILING in 3D *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!



IF rail_m = RAILPOS_RIGHT or rail_m = RAILPOS_BOTH THEN
	if bSameRails then
		leftRailType_m = rightRailType_m
	endif

	RailRZZ=-OverhangRBottom*tan(ang)+temp_npsRY+temp_btaRY
	RailRXX=-OverhangRBottom+temp_npsRX+temp_btaRX

	rprPostBase = (rightRailType_m = 7 or rightRailType_m = 8 or rightRailType_m = 9 or rightRailType_m = 11)

	RailUNID=1000

	ADDZ th+pdvert
		!!! RAIL OFFSET
		HOTSPOT flw-st/2,		RailRXX, RailRZZ, RailUNID, roffr, 1+128 : RailUNID=RailUNID+1
		HOTSPOT flw-st/2-1,		RailRXX, RailRZZ, RailUNID, roffr, 3 : RailUNID=RailUNID+1
		HOTSPOT flw-st/2+roffr,	RailRXX, RailRZZ, RailUNID, roffr, 2 : RailUNID=RailUNID+1

		HOTSPOT flw-st/2,		lrah-td+OverhangRTop, (rnu-2)*th+OverhangRTop*tan(ang), RailUNID, roffr, 1+128 : RailUNID=RailUNID+1
		HOTSPOT flw-st/2-1,		lrah-td+OverhangRTop, (rnu-2)*th+OverhangRTop*tan(ang), RailUNID, roffr, 3 : RailUNID=RailUNID+1
		HOTSPOT flw-st/2+roffr,	lrah-td+OverhangRTop, (rnu-2)*th+OverhangRTop*tan(ang), RailUNID, roffr, 2 : RailUNID=RailUNID+1
	DEL 1

	IF romr_m = RAILORIENT_VERTICAL THEN
			ADDZ th+pdvert

			RailUNID=1050

			!!! Dist. from Top of String
			HOTSPOT flw-st/2+roffr, RailRXX,	RailRZZ,		RailUNID, dsr, 1+128 : RailUNID=RailUNID+1
			HOTSPOT flw-st/2+roffr, RailRXX,	RailRZZ-1,	RailUNID, dsr, 3 : RailUNID=RailUNID+1
			HOTSPOT flw-st/2+roffr, RailRXX,	RailRZZ+dsr,	RailUNID, dsr, 2 : RailUNID=RailUNID+1

			HOTSPOT flw-st/2+roffr, lrah-td+OverhangRTop,	(rnu-2)*th+OverhangRTop*tan(ang),		RailUNID, dsr, 1+128 : RailUNID=RailUNID+1
			HOTSPOT flw-st/2+roffr, lrah-td+OverhangRTop,	(rnu-2)*th-1+OverhangRTop*tan(ang),		RailUNID, dsr, 3 : RailUNID=RailUNID+1
			HOTSPOT flw-st/2+roffr, lrah-td+OverhangRTop,	(rnu-2)*th+dsr+OverhangRTop*tan(ang),	RailUNID, dsr, 2 : RailUNID=RailUNID+1

			!!! Height of Rail
			HOTSPOT flw-st/2+roffr, RailRXX,	RailRZZ+dsr,		RailUNID, hrr, 1+128 : RailUNID=RailUNID+1
			HOTSPOT flw-st/2+roffr, RailRXX,	RailRZZ+dsr-1,	RailUNID, hrr, 3 : RailUNID=RailUNID+1
			HOTSPOT flw-st/2+roffr, RailRXX,	RailRZZ+dsr+hrr,	RailUNID, hrr, 2 : RailUNID=RailUNID+1

			HOTSPOT flw-st/2+roffr, lrah-td+OverhangRTop,	(rnu-2)*th+OverhangRTop*tan(ang)+dsr,		RailUNID, hrr, 1+128 : RailUNID=RailUNID+1
			HOTSPOT flw-st/2+roffr, lrah-td+OverhangRTop,	(rnu-2)*th+OverhangRTop*tan(ang)+dsr-1,	RailUNID, hrr, 3 : RailUNID=RailUNID+1
			HOTSPOT flw-st/2+roffr, lrah-td+OverhangRTop,	(rnu-2)*th+OverhangRTop*tan(ang)+dsr+hrr,	RailUNID, hrr, 2 : RailUNID=RailUNID+1

			IF rprPostBase=1 THEN

				RailUNID=1100

				!!!POST BASE OVERHANG
				HOTSPOT flw-st/2+roffr, RailRXX,RailRZZ,RailUNID,gs_PostBaseOverhangR,1 : RailUNID=RailUNID+1
				HOTSPOT flw-st/2+roffr, RailRXX,RailRZZ-gs_PostBaseOverhangR,RailUNID,gs_PostBaseOverhangR,2 : RailUNID=RailUNID+1
				HOTSPOT flw-st/2+roffr, RailRXX,RailRZZ+1,RailUNID,gs_PostBaseOverhangR,3 : RailUNID=RailUNID+1

				HOTSPOT flw-st/2+roffr, lrah-td+OverhangRTop,(rnu-2)*th+OverhangRTop*tan(ang),RailUNID,gs_PostBaseOverhangR,1 : RailUNID=RailUNID+1
				HOTSPOT flw-st/2+roffr, lrah-td+OverhangRTop,(rnu-2)*th+OverhangRTop*tan(ang)-gs_PostBaseOverhangR,RailUNID,gs_PostBaseOverhangR,2 : RailUNID=RailUNID+1
				HOTSPOT flw-st/2+roffr, lrah-td+OverhangRTop,(rnu-2)*th+OverhangRTop*tan(ang)+1,RailUNID,gs_PostBaseOverhangR,3 : RailUNID=RailUNID+1
			ENDIF

			IF rightRailType_m = 9 THEN

				RailUNID=1150

				HOTSPOT flw-st/2+roffr, RailRXX,	hrr+RailRZZ+dsr-HandrailHgtR,		RailUNID, sbhr, 1+128 : RailUNID=RailUNID+1
				HOTSPOT flw-st/2+roffr, RailRXX,	hrr+RailRZZ+dsr-HandrailHgtR+1,		RailUNID, sbhr, 3 : RailUNID=RailUNID+1
				HOTSPOT flw-st/2+roffr, RailRXX,	hrr+RailRZZ+dsr-HandrailHgtR-sbhr,	RailUNID, sbhr, 2 : RailUNID=RailUNID+1

				HOTSPOT flw-st/2+roffr, lrah-td+OverhangRTop,	hrr+(rnu-2)*th+OverhangRTop*tan(ang)+dsr-HandrailHgtR,		RailUNID, sbhr, 1+128 : RailUNID=RailUNID+1
				HOTSPOT flw-st/2+roffr, lrah-td+OverhangRTop,	hrr+(rnu-2)*th+OverhangRTop*tan(ang)+dsr-HandrailHgtR+1,	RailUNID, sbhr, 3 : RailUNID=RailUNID+1
				HOTSPOT flw-st/2+roffr, lrah-td+OverhangRTop,	hrr+(rnu-2)*th+OverhangRTop*tan(ang)+dsr-HandrailHgtR-sbhr,	RailUNID, sbhr, 2 : RailUNID=RailUNID+1
			ENDIF

			DEL 1

			!!! Rail Overhang at Bottom
			IF np_m = POSTPOS_NONE or np_m = POSTPOS_LEFT THEN

				RailUNID=1200

				HOTSPOT flw-st/2+roffr,	0,	th+pdvert+dsr,	RailUNID, temp_OverhangRBottom, 1+128,OverhangRBottom : RailUNID=RailUNID+1
				HOTSPOT flw-st/2+roffr,	1,	th+pdvert+dsr+tan(ang),	RailUNID, temp_OverhangRBottom, 3,OverhangRBottom : RailUNID=RailUNID+1
				HOTSPOT flw-st/2+roffr,-OverhangRBottom,	th+pdvert+dsr-OverhangRBottom*tan(ang),	RailUNID, temp_OverhangRBottom, 2,OverhangRBottom : RailUNID=RailUNID+1
			ENDIF

			RailUNID=1250

			!!! Rail Overhang at Top
			HOTSPOT flw-st/2+roffr,	lrah-td,				th+pdvert+(rnu-2)*th+dsr,		RailUNID, temp_OverhangRTop, 1+128,OverhangRTop : RailUNID=RailUNID+1
			HOTSPOT flw-st/2+roffr,	lrah-td-1,				th+pdvert+(rnu-2)*th+dsr-tan(ang),		RailUNID, temp_OverhangRTop, 3,OverhangRTop : RailUNID=RailUNID+1
			HOTSPOT flw-st/2+roffr,	lrah-td+OverhangRTop,	th+pdvert+(rnu-2)*th+dsr+OverhangRTop*tan(ang),	RailUNID, temp_OverhangRTop, 2,OverhangRTop : RailUNID=RailUNID+1

	ELSE

		ADDz th+pdvert
		ROTx atn(th/td)

			RailUNID=1300

			!! Distance from Top of Tread

			HOTSPOT flw-st/2+roffr,	-OverhangRBottom/cos(ang),	0,	RailUNID, dsr, 1+128 : RailUNID=RailUNID+1
			HOTSPOT flw-st/2+roffr,	-OverhangRBottom/cos(ang),	dsr,RailUNID, dsr, 2 : RailUNID=RailUNID+1
			HOTSPOT flw-st/2+roffr,	-OverhangRBottom/cos(ang),	-1,	RailUNID, dsr, 3 : RailUNID=RailUNID+1

			HOTSPOT flw-st/2+roffr,(lrah-td)*th/(td*sin(atn(th/td)))+OverhangRTop/cos(ang),0,	RailUNID, dsr, 1+128 : RailUNID=RailUNID+1
			HOTSPOT flw-st/2+roffr,(lrah-td)*th/(td*sin(atn(th/td)))+OverhangRTop/cos(ang),dsr,	RailUNID, dsr, 2 : RailUNID=RailUNID+1
			HOTSPOT flw-st/2+roffr,(lrah-td)*th/(td*sin(atn(th/td)))+OverhangRTop/cos(ang),-1,	RailUNID, dsr, 3 : RailUNID=RailUNID+1

			!! Height of Rail

			HOTSPOT flw-st/2+roffr,-OverhangRBottom/cos(ang),dsr,	RailUNID, hrr, 1+128 : RailUNID=RailUNID+1
			HOTSPOT flw-st/2+roffr,-OverhangRBottom/cos(ang),dsr+hrr,	RailUNID, hrr, 2 : RailUNID=RailUNID+1
			HOTSPOT flw-st/2+roffr,-OverhangRBottom/cos(ang),dsr-1,	RailUNID, hrr, 3 : RailUNID=RailUNID+1

			HOTSPOT flw-st/2+roffr,(lrah-td)*th/(td*sin(atn(th/td)))+OverhangRTop/cos(ang),dsr,	RailUNID, hrr, 1+128 : RailUNID=RailUNID+1
			HOTSPOT flw-st/2+roffr,(lrah-td)*th/(td*sin(atn(th/td)))+OverhangRTop/cos(ang),dsr+hrr,	RailUNID, hrr, 2 : RailUNID=RailUNID+1
			HOTSPOT flw-st/2+roffr,(lrah-td)*th/(td*sin(atn(th/td)))+OverhangRTop/cos(ang),dsr-1,	RailUNID, hrr, 3 : RailUNID=RailUNID+1

			!!! Rail Overhang at Bottom

			HOTSPOT flw-st/2+roffr,	0,	dsr,	RailUNID, temp_OverhangRBottom, 1+128,OverhangRBottom  : RailUNID=RailUNID+1
			HOTSPOT flw-st/2+roffr, 1	,dsr,RailUNID, temp_OverhangRBottom, 3,OverhangRBottom : RailUNID=RailUNID+1
			HOTSPOT flw-st/2+roffr,-temp_OverhangRBottom,dsr,RailUNID, temp_OverhangRBottom, 2,OverhangRBottom : RailUNID=RailUNID+1

			!!! Rail Overhang at Top
			HOTSPOT flw-st/2+roffr,	(lrah-td)*th/(td*sin(atn(th/td))),	dsr,	RailUNID, temp_OverhangRTop, 1+128,OverhangRTop  : RailUNID=RailUNID+1
			HOTSPOT flw-st/2+roffr, (lrah-td)*th/(td*sin(atn(th/td)))-1	,dsr,RailUNID, temp_OverhangRTop, 3,OverhangRTop : RailUNID=RailUNID+1
			HOTSPOT flw-st/2+roffr, (lrah-td)*th/(td*sin(atn(th/td)))+temp_OverhangRTop,dsr,RailUNID, temp_OverhangRTop, 2,OverhangRTop : RailUNID=RailUNID+1

			IF rprPostBase=1 THEN

				RailUNID=1350

				!!!POST BASE OVERHANG
				HOTSPOT flw-st/2+roffr, -OverhangRBottom/cos(ang), 0,RailUNID,gs_PostBaseOverhangR,1 : RailUNID=RailUNID+1
				HOTSPOT flw-st/2+roffr, -OverhangRBottom/cos(ang),-gs_PostBaseOverhangR,RailUNID,gs_PostBaseOverhangR,2 : RailUNID=RailUNID+1
				HOTSPOT flw-st/2+roffr, -OverhangRBottom/cos(ang), 1,RailUNID,gs_PostBaseOverhangR,3 : RailUNID=RailUNID+1

				HOTSPOT flw-st/2+roffr,(lrah-td)*th/(td*sin(atn(th/td)))+OverhangRTop/cos(ang),0,RailUNID,gs_PostBaseOverhangR,1 : RailUNID=RailUNID+1
				HOTSPOT flw-st/2+roffr,(lrah-td)*th/(td*sin(atn(th/td)))+OverhangRTop/cos(ang),-gs_PostBaseOverhangR,RailUNID,gs_PostBaseOverhangR,2 : RailUNID=RailUNID+1
				HOTSPOT flw-st/2+roffr,(lrah-td)*th/(td*sin(atn(th/td)))+OverhangRTop/cos(ang),1,RailUNID,gs_PostBaseOverhangR,3 : RailUNID=RailUNID+1
			ENDIF

			IF rightRailType_m = 9 THEN

				RailUNID=1400

				HOTSPOT flw-st/2+roffr,-OverhangRBottom/cos(ang),hrr+dsr-HandrailHgtR/cos(ang),	RailUNID,sbhPerpR,1+128,sbhr : RailUNID=RailUNID+1
				HOTSPOT flw-st/2+roffr,-OverhangRBottom/cos(ang),hrr+dsr-HandrailHgtR/cos(ang)-sbhr,	RailUNID,sbhPerpR,2,sbhr : RailUNID=RailUNID+1
				HOTSPOT flw-st/2+roffr,-OverhangRBottom/cos(ang),hrr+dsr-HandrailHgtR/cos(ang)+1,	RailUNID,sbhPerpR,3,sbhr : RailUNID=RailUNID+1

				HOTSPOT flw-st/2+roffr,(lrah-td)*th/(td*sin(atn(th/td)))+OverhangRTop/cos(ang),hrr+dsr-HandrailHgtR/cos(ang),	RailUNID,sbhPerpR,1+128,sbhr : RailUNID=RailUNID+1
				HOTSPOT flw-st/2+roffr,(lrah-td)*th/(td*sin(atn(th/td)))+OverhangRTop/cos(ang),hrr+dsr-HandrailHgtR/cos(ang)-sbhr,	RailUNID,sbhPerpR,2,sbhr : RailUNID=RailUNID+1
				HOTSPOT flw-st/2+roffr,(lrah-td)*th/(td*sin(atn(th/td)))+OverhangRTop/cos(ang),hrr+dsr-HandrailHgtR/cos(ang)+1,	RailUNID,sbhPerpR,3,sbhr : RailUNID=RailUNID+1
			ENDIF

		DEL 2
	ENDIF
ENDIF

IF rail_m = RAILPOS_LEFT or rail_m = RAILPOS_BOTH THEN
	rplPostBase = (leftRailType_m = 7 or leftRailType_m = 8 or leftRailType_m = 9 or leftRailType_m = 11)

	IF bSameRails THEN		!!! Same as Right

	RailRZZ=-OverhangRBottom*tan(ang)+temp_npsRY+temp_btaRY
	RailRXX=-OverhangRBottom+temp_npsRX+temp_btaRX

	ADDZ th+pdvert

		RailUNID=1450

		!!! RAIL OFFSET
		HOTSPOT st/2,		RailRXX, RailRZZ, RailUNID, roffr, 1+128 : RailUNID=RailUNID+1
		HOTSPOT st/2+1,	RailRXX, RailRZZ, RailUNID, roffr, 3 : RailUNID=RailUNID+1
		HOTSPOT st/2-roffr,RailRXX, RailRZZ, RailUNID, roffr, 2 : RailUNID=RailUNID+1

		HOTSPOT st/2,		lrah-td+OverhangRTop, (rnu-2)*th+OverhangRTop*tan(ang), RailUNID, roffr, 1+128 : RailUNID=RailUNID+1
		HOTSPOT st/2+1,	lrah-td+OverhangRTop, (rnu-2)*th+OverhangRTop*tan(ang), RailUNID, roffr, 3 : RailUNID=RailUNID+1
		HOTSPOT st/2-roffr,lrah-td+OverhangRTop, (rnu-2)*th+OverhangRTop*tan(ang), RailUNID, roffr, 2 : RailUNID=RailUNID+1
	DEL 1

	IF roml_m = RAILORIENT_VERTICAL THEN
			ADDZ th+pdvert

			RailUNID=1500

			!!! Dist. from Top of String
			HOTSPOT st/2-roffr, RailRXX,	RailRZZ,		RailUNID, dsr, 1+128 : RailUNID=RailUNID+1
			HOTSPOT st/2-roffr, RailRXX,	RailRZZ-1,	RailUNID, dsr, 3 : RailUNID=RailUNID+1
			HOTSPOT st/2-roffr, RailRXX,	RailRZZ+dsr,	RailUNID, dsr, 2 : RailUNID=RailUNID+1

			HOTSPOT st/2-roffr, lrah-td+OverhangRTop,	(rnu-2)*th+OverhangRTop*tan(ang),		RailUNID, dsr, 1+128 : RailUNID=RailUNID+1
			HOTSPOT st/2-roffr, lrah-td+OverhangRTop,	(rnu-2)*th-1+OverhangRTop*tan(ang),		RailUNID, dsr, 3 : RailUNID=RailUNID+1
			HOTSPOT st/2-roffr, lrah-td+OverhangRTop,	(rnu-2)*th+dsr+OverhangRTop*tan(ang),	RailUNID, dsr, 2 : RailUNID=RailUNID+1

			!!! Height of Rail
			HOTSPOT st/2-roffr, RailRXX,	RailRZZ+dsr,		RailUNID, hrr, 1+128 : RailUNID=RailUNID+1
			HOTSPOT st/2-roffr, RailRXX,	RailRZZ+dsr-1,	RailUNID, hrr, 3 : RailUNID=RailUNID+1
			HOTSPOT st/2-roffr, RailRXX,	RailRZZ+dsr+hrr,	RailUNID, hrr, 2 : RailUNID=RailUNID+1

			HOTSPOT st/2-roffr, lrah-td+OverhangRTop,	(rnu-2)*th+OverhangRTop*tan(ang)+dsr,		RailUNID, hrr, 1+128 : RailUNID=RailUNID+1
			HOTSPOT st/2-roffr, lrah-td+OverhangRTop,	(rnu-2)*th+OverhangRTop*tan(ang)+dsr-1,	RailUNID, hrr, 3 : RailUNID=RailUNID+1
			HOTSPOT st/2-roffr, lrah-td+OverhangRTop,	(rnu-2)*th+OverhangRTop*tan(ang)+dsr+hrr,	RailUNID, hrr, 2 : RailUNID=RailUNID+1

			IF rplPostBase=1 THEN

				RailUNID=1550

				!!!POST BASE OVERHANG
				HOTSPOT st/2-roffr, RailRXX,RailRZZ,RailUNID,gs_PostBaseOverhangR,1 : RailUNID=RailUNID+1
				HOTSPOT st/2-roffr, RailRXX,RailRZZ-gs_PostBaseOverhangR,RailUNID,gs_PostBaseOverhangR,2 : RailUNID=RailUNID+1
				HOTSPOT st/2-roffr, RailRXX,RailRZZ+1,RailUNID,gs_PostBaseOverhangR,3 : RailUNID=RailUNID+1

				HOTSPOT st/2-roffr, lrah-td+OverhangRTop,(rnu-2)*th+OverhangRTop*tan(ang),RailUNID,gs_PostBaseOverhangR,1 : RailUNID=RailUNID+1
				HOTSPOT st/2-roffr, lrah-td+OverhangRTop,(rnu-2)*th+OverhangRTop*tan(ang)-gs_PostBaseOverhangR,RailUNID,gs_PostBaseOverhangR,2 : RailUNID=RailUNID+1
				HOTSPOT st/2-roffr, lrah-td+OverhangRTop,(rnu-2)*th+OverhangRTop*tan(ang)+1,RailUNID,gs_PostBaseOverhangR,3 : RailUNID=RailUNID+1
			ENDIF

			IF leftRailType_m = 9 THEN

				RailUNID=1600

				HOTSPOT st/2-roffr, RailRXX,	hrr+RailRZZ+dsr-HandrailHgtR,		RailUNID, sbhr, 1+128 : RailUNID=RailUNID+1
				HOTSPOT st/2-roffr, RailRXX,	hrr+RailRZZ+dsr-HandrailHgtR+1,		RailUNID, sbhr, 3 : RailUNID=RailUNID+1
				HOTSPOT st/2-roffr, RailRXX,	hrr+RailRZZ+dsr-HandrailHgtR-sbhr,	RailUNID, sbhr, 2 : RailUNID=RailUNID+1

				HOTSPOT st/2-roffr, lrah-td+OverhangRTop,	hrr+(rnu-2)*th+OverhangRTop*tan(ang)+dsr-HandrailHgtR,		RailUNID, sbhr, 1+128 : RailUNID=RailUNID+1
				HOTSPOT st/2-roffr, lrah-td+OverhangRTop,	hrr+(rnu-2)*th+OverhangRTop*tan(ang)+dsr-HandrailHgtR+1,	RailUNID, sbhr, 3 : RailUNID=RailUNID+1
				HOTSPOT st/2-roffr, lrah-td+OverhangRTop,	hrr+(rnu-2)*th+OverhangRTop*tan(ang)+dsr-HandrailHgtR-sbhr,	RailUNID, sbhr, 2 : RailUNID=RailUNID+1
			ENDIF

			DEL 1

			!!! Rail Overhang at Bottom
			IF np_m = POSTPOS_NONE or np_m = POSTPOS_LEFT THEN

				RailUNID=1650

				HOTSPOT st/2-roffr,	0,	th+pdvert+dsr,	RailUNID, temp_OverhangRBottom, 1+128,OverhangRBottom : RailUNID=RailUNID+1
				HOTSPOT st/2-roffr,	1,	th+pdvert+dsr+tan(ang),	RailUNID, temp_OverhangRBottom, 3,OverhangRBottom : RailUNID=RailUNID+1
				HOTSPOT st/2-roffr,-OverhangRBottom,	th+pdvert+dsr-OverhangRBottom*tan(ang),	RailUNID, temp_OverhangRBottom, 2,OverhangRBottom : RailUNID=RailUNID+1
			ENDIF

			RailUNID=1700

			!!! Rail Overhang at Top
			HOTSPOT st/2-roffr,	lrah-td,				th+pdvert+(rnu-2)*th+dsr,		RailUNID, temp_OverhangRTop, 1+128,OverhangRTop : RailUNID=RailUNID+1
			HOTSPOT st/2-roffr,	lrah-td-1,				th+pdvert+(rnu-2)*th+dsr-tan(ang),		RailUNID, temp_OverhangRTop, 3,OverhangRTop : RailUNID=RailUNID+1
			HOTSPOT st/2-roffr,	lrah-td+OverhangRTop,	th+pdvert+(rnu-2)*th+dsr+OverhangRTop*tan(ang),	RailUNID, temp_OverhangRTop, 2,OverhangRTop : RailUNID=RailUNID+1

	ELSE
		ADDz th+pdvert
		ROTx atn(th/td)

			RailUNID=1750

			!! Distance from Top of Tread

			HOTSPOT st/2-roffr,	-OverhangRBottom/cos(ang),	0,	RailUNID, dsr, 1+128 : RailUNID=RailUNID+1
			HOTSPOT st/2-roffr,	-OverhangRBottom/cos(ang),	dsr,RailUNID, dsr, 2 : RailUNID=RailUNID+1
			HOTSPOT st/2-roffr,	-OverhangRBottom/cos(ang),	-1,	RailUNID, dsr, 3 : RailUNID=RailUNID+1

			HOTSPOT st/2-roffr,(lrah-td)*th/(td*sin(atn(th/td)))+OverhangRTop/cos(ang),0,	RailUNID, dsr, 1+128 : RailUNID=RailUNID+1
			HOTSPOT st/2-roffr,(lrah-td)*th/(td*sin(atn(th/td)))+OverhangRTop/cos(ang),dsr,	RailUNID, dsr, 2 : RailUNID=RailUNID+1
			HOTSPOT st/2-roffr,(lrah-td)*th/(td*sin(atn(th/td)))+OverhangRTop/cos(ang),-1,	RailUNID, dsr, 3 : RailUNID=RailUNID+1

			!! Height of Rail

			HOTSPOT st/2-roffr,-OverhangRBottom/cos(ang),dsr,	RailUNID, hrr, 1+128 : RailUNID=RailUNID+1
			HOTSPOT st/2-roffr,-OverhangRBottom/cos(ang),dsr+hrr,	RailUNID, hrr, 2 : RailUNID=RailUNID+1
			HOTSPOT st/2-roffr,-OverhangRBottom/cos(ang),dsr-1,	RailUNID, hrr, 3 : RailUNID=RailUNID+1

			HOTSPOT st/2-roffr,(lrah-td)*th/(td*sin(atn(th/td)))+OverhangRTop/cos(ang),dsr,	RailUNID, hrr, 1+128 : RailUNID=RailUNID+1
			HOTSPOT st/2-roffr,(lrah-td)*th/(td*sin(atn(th/td)))+OverhangRTop/cos(ang),dsr+hrr,	RailUNID, hrr, 2 : RailUNID=RailUNID+1
			HOTSPOT st/2-roffr,(lrah-td)*th/(td*sin(atn(th/td)))+OverhangRTop/cos(ang),dsr-1,	RailUNID, hrr, 3 : RailUNID=RailUNID+1

			!!! Rail Overhang at Bottom

			HOTSPOT st/2-roffr,	0,	dsr,	RailUNID, temp_OverhangRBottom, 1+128,OverhangRBottom  : RailUNID=RailUNID+1
			HOTSPOT st/2-roffr, 1	,dsr,RailUNID, temp_OverhangRBottom, 3,OverhangRBottom : RailUNID=RailUNID+1
			HOTSPOT st/2-roffr,-temp_OverhangRBottom,dsr,RailUNID, temp_OverhangRBottom, 2,OverhangRBottom : RailUNID=RailUNID+1

			!!! Rail Overhang at Top
			HOTSPOT st/2-roffr,(lrah-td)*th/(td*sin(atn(th/td))),	dsr,	RailUNID, temp_OverhangRTop, 1+128,OverhangRTop  : RailUNID=RailUNID+1
			HOTSPOT st/2-roffr,(lrah-td)*th/(td*sin(atn(th/td)))-1	,dsr,RailUNID, temp_OverhangRTop, 3,OverhangRTop : RailUNID=RailUNID+1
			HOTSPOT st/2-roffr,(lrah-td)*th/(td*sin(atn(th/td)))+temp_OverhangRTop,dsr,RailUNID, temp_OverhangRTop, 2,OverhangRTop : RailUNID=RailUNID+1

			IF rplPostBase=1 THEN

				RailUNID=1800

				!!!POST BASE OVERHANG
				HOTSPOT st/2-roffr, -OverhangRBottom/cos(ang), 0,RailUNID,gs_PostBaseOverhangR,1 : RailUNID=RailUNID+1
				HOTSPOT st/2-roffr, -OverhangRBottom/cos(ang),-gs_PostBaseOverhangR,RailUNID,gs_PostBaseOverhangR,2 : RailUNID=RailUNID+1
				HOTSPOT st/2-roffr, -OverhangRBottom/cos(ang), 1,RailUNID,gs_PostBaseOverhangR,3 : RailUNID=RailUNID+1

				HOTSPOT st/2-roffr,(lrah-td)*th/(td*sin(atn(th/td)))+OverhangRTop/cos(ang),0,RailUNID,gs_PostBaseOverhangR,1 : RailUNID=RailUNID+1
				HOTSPOT st/2-roffr,(lrah-td)*th/(td*sin(atn(th/td)))+OverhangRTop/cos(ang),-gs_PostBaseOverhangR,RailUNID,gs_PostBaseOverhangR,2 : RailUNID=RailUNID+1
				HOTSPOT st/2-roffr,(lrah-td)*th/(td*sin(atn(th/td)))+OverhangRTop/cos(ang),1,RailUNID,gs_PostBaseOverhangR,3 : RailUNID=RailUNID+1
			ENDIF

			IF leftRailType_m = 9 THEN

				RailUNID=1850

				HOTSPOT st/2-roffr,-OverhangRBottom/cos(ang),hrr+dsr-HandrailHgtR/cos(ang),	RailUNID,sbhPerpR,1+128,sbhr : RailUNID=RailUNID+1
				HOTSPOT st/2-roffr,-OverhangRBottom/cos(ang),hrr+dsr-HandrailHgtR/cos(ang)-sbhr,	RailUNID,sbhPerpR,2,sbhr : RailUNID=RailUNID+1
				HOTSPOT st/2-roffr,-OverhangRBottom/cos(ang),hrr+dsr-HandrailHgtR/cos(ang)+1,	RailUNID,sbhPerpR,3,sbhr : RailUNID=RailUNID+1

				HOTSPOT st/2-roffr,(lrah-td)*th/(td*sin(atn(th/td)))+OverhangRTop/cos(ang),hrr+dsr-HandrailHgtR/cos(ang),	RailUNID,sbhPerpR,1+128,sbhr : RailUNID=RailUNID+1
				HOTSPOT st/2-roffr,(lrah-td)*th/(td*sin(atn(th/td)))+OverhangRTop/cos(ang),hrr+dsr-HandrailHgtR/cos(ang)-sbhr,	RailUNID,sbhPerpR,2,sbhr : RailUNID=RailUNID+1
				HOTSPOT st/2-roffr,(lrah-td)*th/(td*sin(atn(th/td)))+OverhangRTop/cos(ang),hrr+dsr-HandrailHgtR/cos(ang)+1,	RailUNID,sbhPerpR,3,sbhr : RailUNID=RailUNID+1
			ENDIF
		DEL 2
	ENDIF

	ELSE		!!! <> Same as Right

		RailLZZ=-OverhangLBottom*tan(ang)+temp_npsLY+temp_btaLY
		RailLXX=-OverhangLBottom+temp_npsLX+temp_btaLX

		ADDZ th+pdvert

			RailUNID=1900

			!!! RAIL OFFSET
			HOTSPOT st/2,		RailLXX, RailLZZ, RailUNID, roffl, 1+128 : RailUNID=RailUNID+1
			HOTSPOT st/2+1,	RailLXX, RailLZZ, RailUNID, roffl, 3 : RailUNID=RailUNID+1
			HOTSPOT st/2-roffl,RailLXX, RailLZZ, RailUNID, roffl, 2 : RailUNID=RailUNID+1

			HOTSPOT st/2,		lrah-td+OverhangLTop, (rnu-2)*th+OverhangLTop*tan(ang), RailUNID, roffl, 1+128 : RailUNID=RailUNID+1
			HOTSPOT st/2+1,	lrah-td+OverhangLTop, (rnu-2)*th+OverhangLTop*tan(ang), RailUNID, roffl, 3 : RailUNID=RailUNID+1
			HOTSPOT st/2-roffl,lrah-td+OverhangLTop, (rnu-2)*th+OverhangLTop*tan(ang), RailUNID, roffl, 2 : RailUNID=RailUNID+1
		DEL 1

		IF roml_m = RAILORIENT_VERTICAL THEN
			ADDZ th+pdvert

			RailUNID=1950

			!!! Distance from Top of String
			HOTSPOT st/2-roffl, RailLXX,	RailLZZ,		RailUNID, dsl, 1+128 : RailUNID=RailUNID+1
			HOTSPOT st/2-roffl, RailLXX,	RailLZZ-1,	RailUNID, dsl, 3 : RailUNID=RailUNID+1
			HOTSPOT st/2-roffl, RailLXX,	RailLZZ+dsl,	RailUNID, dsl, 2 : RailUNID=RailUNID+1

			HOTSPOT st/2-roffl, lrah-td+OverhangLTop,	(rnu-2)*th+OverhangLTop*tan(ang),		RailUNID, dsl, 1+128 : RailUNID=RailUNID+1
			HOTSPOT st/2-roffl, lrah-td+OverhangLTop,	(rnu-2)*th-1+OverhangLTop*tan(ang),		RailUNID, dsl, 3 : RailUNID=RailUNID+1
			HOTSPOT st/2-roffl, lrah-td+OverhangLTop,	(rnu-2)*th+dsl+OverhangLTop*tan(ang),	RailUNID, dsl, 2 : RailUNID=RailUNID+1

			!!! Height of Rail
			HOTSPOT st/2-roffl, RailLXX,	RailLZZ+dsl,		RailUNID, hrl, 1+128 : RailUNID=RailUNID+1
			HOTSPOT st/2-roffl, RailLXX,	RailLZZ+dsl-1,	RailUNID, hrl, 3 : RailUNID=RailUNID+1
			HOTSPOT st/2-roffl, RailLXX,	RailLZZ+dsl+hrl,	RailUNID, hrl, 2 : RailUNID=RailUNID+1

			HOTSPOT st/2-roffl, lrah-td+OverhangLTop,	(rnu-2)*th+OverhangLTop*tan(ang)+dsl,		RailUNID, hrl, 1+128 : RailUNID=RailUNID+1
			HOTSPOT st/2-roffl, lrah-td+OverhangLTop,	(rnu-2)*th+OverhangLTop*tan(ang)+dsl-1,	RailUNID, hrl, 3 : RailUNID=RailUNID+1
			HOTSPOT st/2-roffl, lrah-td+OverhangLTop,	(rnu-2)*th+OverhangLTop*tan(ang)+dsl+hrl,	RailUNID, hrl, 2 : RailUNID=RailUNID+1

			IF rplPostBase=1 THEN

				RailUNID=2000

				!!!POST BASE OVERHANG
				HOTSPOT st/2-roffl, RailLXX, RailLZZ,RailUNID,gs_PostBaseOverhangL,1 : RailUNID=RailUNID+1
				HOTSPOT st/2-roffl, RailLXX, RailLZZ-gs_PostBaseOverhangL,RailUNID,gs_PostBaseOverhangL,2 : RailUNID=RailUNID+1
				HOTSPOT st/2-roffl, RailLXX, RailLZZ+1,RailUNID,gs_PostBaseOverhangL,3 : RailUNID=RailUNID+1

				HOTSPOT st/2-roffl, lrah-td+OverhangLTop,(rnu-2)*th+OverhangLTop*tan(ang),RailUNID,gs_PostBaseOverhangL,1 : RailUNID=RailUNID+1
				HOTSPOT st/2-roffl, lrah-td+OverhangLTop,(rnu-2)*th+OverhangLTop*tan(ang)-gs_PostBaseOverhangL,RailUNID,gs_PostBaseOverhangL,2 : RailUNID=RailUNID+1
				HOTSPOT st/2-roffl, lrah-td+OverhangLTop,(rnu-2)*th+OverhangLTop*tan(ang)+1,RailUNID,gs_PostBaseOverhangL,3 : RailUNID=RailUNID+1
			ENDIF

			IF leftRailType_m = 9 THEN

				RailUNID=2050

				HOTSPOT st/2-roffl, RailLXX,	hrl+RailLZZ+dsl-HandrailHgtL,		RailUNID, sbhl, 1+128 : RailUNID=RailUNID+1
				HOTSPOT st/2-roffl, RailLXX,	hrl+RailLZZ+dsl-HandrailHgtL+1,	RailUNID, sbhl, 3 : RailUNID=RailUNID+1
				HOTSPOT st/2-roffl, RailLXX,	hrl+RailLZZ+dsl-HandrailHgtL-sbhl,	RailUNID, sbhl, 2 : RailUNID=RailUNID+1

				HOTSPOT st/2-roffl, lrah-td+OverhangLTop,	hrl+(rnu-2)*th+OverhangLTop*tan(ang)+dsl-HandrailHgtL,		RailUNID, sbhl, 1+128 : RailUNID=RailUNID+1
				HOTSPOT st/2-roffl, lrah-td+OverhangLTop,	hrl+(rnu-2)*th+OverhangLTop*tan(ang)+dsl-HandrailHgtL+1,	RailUNID, sbhl, 3 : RailUNID=RailUNID+1
				HOTSPOT st/2-roffl, lrah-td+OverhangLTop,	hrl+(rnu-2)*th+OverhangLTop*tan(ang)+dsl-HandrailHgtL-sbhl,		RailUNID, sbhl, 2 : RailUNID=RailUNID+1

			ENDIF

			DEL 1

			!!! Rail Overhang at Bottom
			IF np_m = POSTPOS_NONE or np_m = POSTPOS_RIGHT THEN

				RailUNID=2100

				HOTSPOT st/2-roffl,	0,	th+pdvert+dsl,	RailUNID, temp_OverhangLBottom, 1+128,OverhangLBottom : RailUNID=RailUNID+1
				HOTSPOT st/2-roffl,	1,	th+pdvert+dsl+tan(ang),	RailUNID, temp_OverhangLBottom, 3,OverhangLBottom : RailUNID=RailUNID+1
				HOTSPOT st/2-roffl,-OverhangLBottom,	th+pdvert+dsl-OverhangLBottom*tan(ang),	RailUNID, temp_OverhangLBottom, 2,OverhangLBottom : RailUNID=RailUNID+1
			ENDIF

			RailUNID=2150

			!!! Rail Overhang at Top
			HOTSPOT st/2-roffl,	lrah-td,				th+pdvert+(rnu-2)*th+dsl,		RailUNID, temp_OverhangLTop, 1+128,OverhangLTop : RailUNID=RailUNID+1
			HOTSPOT st/2-roffl,	lrah-td-1,				th+pdvert+(rnu-2)*th+dsl-tan(ang),		RailUNID, temp_OverhangLTop, 3,OverhangLTop : RailUNID=RailUNID+1
			HOTSPOT st/2-roffl,	lrah-td+OverhangLTop,	th+pdvert+(rnu-2)*th+dsl+OverhangLTop*tan(ang),	RailUNID, temp_OverhangLTop, 2,OverhangLTop : RailUNID=RailUNID+1

		ELSE
			ADDz th+pdvert
			ROTx atn(th/td)

				RailUNID=2200

				!! Distance from Top of Tread

				HOTSPOT st/2-roffl,-OverhangLBottom/cos(ang),	0,	RailUNID, dsl, 1+128 : RailUNID=RailUNID+1
				HOTSPOT st/2-roffl,-OverhangLBottom/cos(ang),	dsl,RailUNID, dsl, 2 : RailUNID=RailUNID+1
				HOTSPOT st/2-roffl,-OverhangLBottom/cos(ang),	-1,	RailUNID, dsl, 3 : RailUNID=RailUNID+1

				HOTSPOT st/2-roffl,(lrah-td)*th/(td*sin(atn(th/td)))+OverhangLTop/cos(ang),0,	RailUNID, dsl, 1+128 : RailUNID=RailUNID+1
				HOTSPOT st/2-roffl,(lrah-td)*th/(td*sin(atn(th/td)))+OverhangLTop/cos(ang),dsl,	RailUNID, dsl, 2 : RailUNID=RailUNID+1
				HOTSPOT st/2-roffl,(lrah-td)*th/(td*sin(atn(th/td)))+OverhangLTop/cos(ang),-1,	RailUNID, dsl, 3 : RailUNID=RailUNID+1

				!! Height of Rail

				HOTSPOT st/2-roffl,-OverhangLBottom/cos(ang),dsl,	RailUNID, hrl, 1+128 : RailUNID=RailUNID+1
				HOTSPOT st/2-roffl,-OverhangLBottom/cos(ang),dsl+hrl,	RailUNID, hrl, 2 : RailUNID=RailUNID+1
				HOTSPOT st/2-roffl,-OverhangLBottom/cos(ang),dsl-1,	RailUNID, hrl, 3 : RailUNID=RailUNID+1

				HOTSPOT st/2-roffl,(lrah-td)*th/(td*sin(atn(th/td)))+OverhangLTop/cos(ang),dsl,	RailUNID, hrl, 1+128 : RailUNID=RailUNID+1
				HOTSPOT st/2-roffl,(lrah-td)*th/(td*sin(atn(th/td)))+OverhangLTop/cos(ang),dsl+hrl,	RailUNID, hrl, 2 : RailUNID=RailUNID+1
				HOTSPOT st/2-roffl,(lrah-td)*th/(td*sin(atn(th/td)))+OverhangLTop/cos(ang),dsl-1,	RailUNID, hrl, 3 : RailUNID=RailUNID+1

				!!! Rail Overhang at Bottom

				HOTSPOT st/2-roffl,0,	dsl,	RailUNID, temp_OverhangLBottom, 1+128,OverhangLBottom  : RailUNID=RailUNID+1
				HOTSPOT st/2-roffl,1	,dsl,RailUNID, temp_OverhangLBottom, 3,OverhangLBottom : RailUNID=RailUNID+1
				HOTSPOT st/2-roffl,-temp_OverhangLBottom,dsl,RailUNID, temp_OverhangLBottom, 2,OverhangLBottom : RailUNID=RailUNID+1

				!!! Rail Overhang at Top
				HOTSPOT st/2-roffl,(lrah-td)*th/(td*sin(atn(th/td))),	dsl,	RailUNID, temp_OverhangLTop, 1+128,OverhangLTop  : RailUNID=RailUNID+1
				HOTSPOT st/2-roffl,(lrah-td)*th/(td*sin(atn(th/td)))-1	,dsl,RailUNID, temp_OverhangLTop, 3,OverhangLTop : RailUNID=RailUNID+1
				HOTSPOT st/2-roffl,(lrah-td)*th/(td*sin(atn(th/td)))+temp_OverhangLTop,dsl,RailUNID, temp_OverhangLTop, 2,OverhangLTop : RailUNID=RailUNID+1

				IF rplPostBase=1 THEN

					RailUNID=2250

					!!!POST BASE OVERHANG
					HOTSPOT st/2-roffl, -OverhangLBottom/cos(ang), 0,RailUNID,gs_PostBaseOverhangL,1 : RailUNID=RailUNID+1
					HOTSPOT st/2-roffl, -OverhangLBottom/cos(ang),-gs_PostBaseOverhangL,RailUNID,gs_PostBaseOverhangL,2 : RailUNID=RailUNID+1
					HOTSPOT st/2-roffl, -OverhangLBottom/cos(ang), 1,RailUNID,gs_PostBaseOverhangL,3 : RailUNID=RailUNID+1

					HOTSPOT st/2-roffl,(lrah-td)*th/(td*sin(atn(th/td)))+OverhangLTop/cos(ang),0,RailUNID,gs_PostBaseOverhangL,1 : RailUNID=RailUNID+1
					HOTSPOT st/2-roffl,(lrah-td)*th/(td*sin(atn(th/td)))+OverhangLTop/cos(ang),-gs_PostBaseOverhangL,RailUNID,gs_PostBaseOverhangL,2 : RailUNID=RailUNID+1
					HOTSPOT st/2-roffl,(lrah-td)*th/(td*sin(atn(th/td)))+OverhangLTop/cos(ang),1,RailUNID,gs_PostBaseOverhangL,3 : RailUNID=RailUNID+1
				ENDIF

				IF leftRailType_m = 9 THEN
					RailUNID=2300

					HOTSPOT st/2-roffl,-OverhangLBottom/cos(ang),hrl+dsl-HandrailHgtL/cos(ang),	RailUNID,sbhPerpL,1+128,sbhl : RailUNID=RailUNID+1
					HOTSPOT st/2-roffl,-OverhangLBottom/cos(ang),hrl+dsl-HandrailHgtL/cos(ang)-sbhl,	RailUNID,sbhPerpL,2,sbhl : RailUNID=RailUNID+1
					HOTSPOT st/2-roffl,-OverhangLBottom/cos(ang),hrl+dsl-HandrailHgtL/cos(ang)+1,	RailUNID,sbhPerpL,3,sbhl : RailUNID=RailUNID+1

					HOTSPOT st/2-roffl,(lrah-td)*th/(td*sin(atn(th/td)))+OverhangLTop/cos(ang),hrl+dsl-HandrailHgtL/cos(ang),	RailUNID,sbhPerpL,1+128,sbhl : RailUNID=RailUNID+1
					HOTSPOT st/2-roffl,(lrah-td)*th/(td*sin(atn(th/td)))+OverhangLTop/cos(ang),hrl+dsl-HandrailHgtL/cos(ang)-sbhl,	RailUNID,sbhPerpL,2,sbhl : RailUNID=RailUNID+1
					HOTSPOT st/2-roffl,(lrah-td)*th/(td*sin(atn(th/td)))+OverhangLTop/cos(ang),hrl+dsl-HandrailHgtL/cos(ang)+1,	RailUNID,sbhPerpL,3,sbhl : RailUNID=RailUNID+1
				ENDIF
			DEL 2
		ENDIF
	ENDIF
ENDIF



!================================================================================
end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end
!================================================================================

! ==============================================================================
"callRailsForStair":
! ------------------------------------------------------------------------------
!	lraSimple
!	lraComplex
!	additionXComplex
!	additionZComplex
!	hrovL: rail overhang start
!	hrovR: rail overhang end
!	postNumber:   number of posts
!	side: SIDE_LEFT or SIDE_RIGHT
! ==============================================================================
	ani = ang
	additionXComplex = additionXComplex
	additionZComplex = additionZComplex
	gosub "callRails"
return

! ==============================================================================
"callRails":
! ------------------------------------------------------------------------------
!	ani
!	additionXComplex
!	additionZComplex
!	dsComplex
!  ------------------
!	side: SIDE_LEFT or SIDE_RIGHT
!	lraSimple
!	lraComplex
!	hrovL: rail overhang start
!	hrovR: rail overhang end
!	postNumber:   number of posts
! ==============================================================================
	if side = SIDE_LEFT then
		railBarDepth	= bwl
		railBarDiam		= bdl
		railHeight		= hrl
		railBarThk		= fthl
		railBarType		= btypl_m
		railFrameThk	= fthl
		railDist		= dsl
		railType_m		= leftRailType_m
		railPostDiam	= pdl
		railPostWidth	= pwl
		railPostThk		= pthl
		railPostType	= ptl_m
		barNumber		= nbl
		iBalusterStyle	= btl_m
		railFramesWSide	= fswl
		railFramesWTop	= ftwl
		railFramesWBot	= fbwl
		railBarHeight	= bhl
		railBarFillThk	= bthl
		balusterDist	= abdistl
		railFrameMat	= fmatl
		railBaluFillMat	= bmatl
		railPostMat		= pmatl
		balusterNumber	= nbtl
		railFillDist	= fdfl
		railPostBaseType= gs_PostBaseTypeL_m
		railDistFromHr	= sbhl
		railPostBaseOv	= gs_PostBaseOverhangL
		handRailType	= hrtl_m
		handRailWidth	= hrwl
		handRailDiam	= hrdl
		handRailHeight	= hrhl
	else
		railBarDepth	= bwr
		railBarDiam		= bdr
		railHeight		= hrr
		railBarThk		= fthr
		railBarType		= btypr_m
		railFrameThk	= fthr
		railDist		= dsr
		railType_m		= rightRailType_m
		railPostDiam	= pdr
		railPostWidth	= pwr
		railPostThk		= pthr
		railPostType	= ptr_m
		barNumber		= nbr
		iBalusterStyle	= btr_m
		railFramesWSide	= fswr
		railFramesWTop	= ftwr
		railFramesWBot	= fbwr
		railBarHeight	= bhr
		railBarFillThk	= bthr
		balusterDist	= abdistr
		railFrameMat	= fmatr
		railBaluFillMat	= bmatr
		railPostMat		= pmatr
		balusterNumber	= nbtr
		railFillDist	= fdfr
		railPostBaseType= gs_PostBaseTypeR_m
		railDistFromHr	= sbhr
		railPostBaseOv	= gs_PostBaseOverhangR
		handRailType	= hrtr_m
		handRailWidth	= hrwr
		handRailDiam	= hrdr
		handRailHeight	= hrhr
	endif

	call "stairRails_m" parameters	railType_m				= railType_m,
									iStairType				= 2,
									bEnableWired02Rail		= 1,
									bEnableNonVerticalRail	= 1,
									additionXComplex		= additionXComplex,
									additionZComplex		= additionZComplex,
									ptyp_m					= 1,
									ani						= ani,
									ab						= 0,
									rb						= 0,
									rom_m					= rom_m,
									rmm_m					= rmm_m,
									lraSimple				= lraSimple,
									lraComplex				= lraComplex,
									railHeight				= railHeight,
									railDist				= railDist,
									gs_detlevel_3D_m		= gs_detlevel_3D_m,
									gs_cont_pen				= gs_cont_pen,
									res						= res,
									rescs					= rescs,
									gs_shadow				= gs_shadow,
									railFrameThk			= railFrameThk,
									railFramesWSide			= railFramesWSide,
									railFramesWTop			= railFramesWTop,
									railFramesWBot			= railFramesWBot,
									railBarType				= railBarType,
									railBarDepth			= railBarDepth,
									railBarFillThk			= railBarFillThk,
									railBarDiam				= railBarDiam,
									balusterDist			= balusterDist,
									railFrameMat			= railFrameMat,
									railBaluFillMat			= railBaluFillMat,
									barNumber				= barNumber,
									railBarHeight			= railBarHeight,
									railFillDist			= railFillDist,
									handRailType			= handRailType,
									handRailDiam			= handRailDiam,
									handRailWidth			= handRailWidth,
									handRailHeight			= handRailHeight,
									hrovL					= hrovL,
									hrovR					= hrovR,
									iBalusterStyle			= iBalusterStyle,
									railPostDiam			= railPostDiam,
									railPostWidth			= railPostWidth,
									railPostThk				= railPostThk,
									railPostType			= railPostType,
									postNumber				= postNumber,
									railPostMat				= railPostMat,
									iParamInputType			= 1,
									balusterNumber			= balusterNumber,
									railPostBaseType		= railPostBaseType,
									railPostBaseOv			= railPostBaseOv,
									railDistFromHr			= railDistFromHr
return





]]>
</Script_3D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_2D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[

! ---------- Hotspots ----------[

	!!! FlightUNID=1		!!! 1,50,100,150
	!!! RailUNID=1000		!!! 1000-1250
	!!! BreakUNID=2000		!!! 2000,2050,2100,2150
	!!! StartSymbUNID=3000	!!! 3000,3100
	!!! ArrowUNID=4000		!!! 4000,4100,4200,4300,4400
	!!! RiseRunUNID=5000	!!! 5000,5050,5100
	!!! UpDownUNID=6000		!!! 6000
	!!! NumUNID=7000		!!! 7000,7100

! ---------- Hotspots ----------]

tempLine19  = 0
covthicky = 0
temp_wLineLength = 0
temp_wLineLengthAbove = 0

bCarriageLineExist		= bShowCarriage and bEnableCarriageLine and (GLOB_SCALE <= iShowCarriageUpTo | iShowCarriageUpTo = 1)

if bCarriageLineExist then
	FlightWidth		= flw - 2 * st
	tempStringWidth	= st
else
	FlightWidth		= flw
	tempStringWidth	= 0
endif

FlightUNID=1
HOTSPOT2 0,0, FlightUNID: FlightUNID=FlightUNID+1


!!!!!!!!!!!!!!!!!!! *** Story Sensitive *** !!!!!!!!!!!!!!!!!!!!!!

chStoryDist = GLOB_CH_STORY_DIST
IF not(gs_StorySensitive) THEN chStoryDist = 0

!!!!!!!!!!!!!!! *** Settings of 2D Symbol Type *** !!!!!!!!!!!!!!!
!!!!!!!!!!!! *** Stories, where the object is placed on !!!!!!!!!!

	!!! The default settings is ON of the next parameters:
	!!!	gs_2DTread,gs_2DTreadAbove,gs_2DRiserAbove,gs_2DContourAbove,

	!!! The default settings is OFF of the next parameters:
	!!!	gs_FillAbove

	temp_RiserLine= dash_line		!!because of Type 17, Type 20
	temp_RiserLinePEN= gs_DashLinePen

	IF walkl=0 THEN bShowRiseAndRunText=0			!! If no walking line > no Rise and Run Text

	! ---------- Settings of 2D Symbol Type ----------
	_iSymbolType = 1
	if gs_detlevel_2D_m = DET2D_SCALESENSITIVE then
		if GLOB_SCALE <= _iScaleMD then									!! Detailed Scale
			_iSymbolType = iEnabledSymbolTypes[iSymbolGroup][3]
		else
			if GLOB_SCALE > _iScaleMD & GLOB_SCALE <= _iScaleSM then	!! Middle Scale
				_iSymbolType = iEnabledSymbolTypes[iSymbolGroup][2]
			else														!! Simple Scale
				_iSymbolType = iEnabledSymbolTypes[iSymbolGroup][1]
			endif
		endif
	else
		_iSymbolType = gs_SymbolType_m
	endif
	
	IF _iSymbolType = 1 THEN
		!!! Treads
		ns=0
		brk=0
		gs_2DTread=0
		solid_line = dash_line
		gs_cont_pen = gs_DashLinePen
		gs_NosingLine = solid_line
		!!! Numbering
		gs_NumBelow = 1
		gs_NumAbove = 1
		!!! Walking Line
		temp_wLineType=gs_wLineType2
		!!! Railing
		rail_m = RAILPOS_NONE
	ENDIF

	IF _iSymbolType = 2 THEN
		!!! Treads
		ns=0
		brk=0
		gs_2DTread=0
		!!! Numbering
		gs_NumBelow = 1
		gs_NumAbove = 1
		!!! Walking Line
		temp_wLineType=gs_wLineType1
		!!! Railing
		rail_m = RAILPOS_NONE
	ENDIF

	IF _iSymbolType = 3 THEN
		!!! Treads
		ns=0
		brk=1
		iLineTypeAboveBreak = LINETYPEABOVEBREAK_INTERSECT
		gs_2DContourAbove=0
		gs_2DTread=0
		gs_2DTreadAbove=0
		!!! Numbering
		gs_NumBelow = 1
		IF chStoryDist > EPS  then
			gs_NumAbove = 1
			ELSE
			gs_NumAbove = 0
		ENDIF
		!!! Walking Line
		temp_wLineType=gs_wLineType1
		!!! Railing
		rail_m = RAILPOS_NONE
	ENDIF

	IF _iSymbolType = 4 THEN
		!!! Treads
		ns=0
		brk=1
		iLineTypeAboveBreak = LINETYPEABOVEBREAK_INTERSECT
		gs_2DTread=0
		gs_2DTreadAbove=0
		!!! Walking Line
		temp_wLineType=gs_wLineType1
		!!! Railing
		rail_m = RAILPOS_NONE
	ENDIF

	IF _iSymbolType = 5 THEN
		!!! Treads
		ns=0
		brk=1
		iLineTypeAboveBreak = LINETYPEABOVEBREAK_INTERSECT
		gs_2DTread=0
		gs_2DTreadAbove=0
		IF chStoryDist > -EPS  then
			dash_line = solid_line
			gs_DashLinePen = gs_cont_pen
		ENDIF
		!!! Walking Line
		temp_wLineType = gs_wLineType1
		gs_wLineTypeAbove = gs_wLineType1
		!!! Railing
		rail_m = RAILPOS_NONE
	ENDIF

	IF _iSymbolType = 6 THEN
		!!! Treads
		ns=0
		brk=0
		iLineTypeAboveBreak = LINETYPEABOVEBREAK_FULL
		solid_line = dash_line
		gs_cont_pen = gs_DashLinePen
		gs_NosingLine = solid_line
		!!! Numbering
		gs_NumBelow = 1
		gs_NumAbove = 1
		!!! Walking Line
		temp_wLineType=gs_wLineType2
		!!! Railing
		rail_m = RAILPOS_NONE
	ENDIF

	IF _iSymbolType = 7 THEN
		!!! Treads
		ns=0
		brk=0
		iLineTypeAboveBreak = LINETYPEABOVEBREAK_FULL
		!!! Numbering
		gs_NumBelow = 1
		gs_NumAbove = 1
		!!! Walking Line
		temp_wLineType=gs_wLineType1
		!!! Railing
		rail_m = RAILPOS_NONE
	ENDIF

	IF _iSymbolType = 8 THEN
		!!! Treads
		ns=0
		brk=1
		iLineTypeAboveBreak = LINETYPEABOVEBREAK_INTERSECT
		gs_2DContourAbove=0
		gs_2DTreadAbove=0
		!!! Numbering
		gs_NumBelow = 1
		IF chStoryDist > EPS  then
			gs_NumAbove = 1
			ELSE
			gs_NumAbove = 0
		ENDIF
		!!! Walking Line
		temp_wLineType=gs_wLineType1
		!!! Railing
		rail_m = RAILPOS_NONE
	ENDIF

	IF _iSymbolType = 9 THEN
		!!! Treads
		ns=0
		brk=1
		iLineTypeAboveBreak = LINETYPEABOVEBREAK_INTERSECT
		gs_2DTreadAbove=0
		!!! Walking Line
		temp_wLineType=gs_wLineType1
		!!! Railing
		rail_m = RAILPOS_NONE
	ENDIF

	IF _iSymbolType = 10 THEN
		!!! Treads
		ns=0
		brk=1
		iLineTypeAboveBreak = LINETYPEABOVEBREAK_INTERSECT
		gs_2DTreadAbove=0
		IF chStoryDist > -EPS  then
			dash_line = solid_line
			gs_DashLinePen = gs_cont_pen
		ENDIF
		!!! Walking Line
		temp_wLineType=gs_wLineType1
		gs_wLineTypeAbove = gs_wLineType1
		!!! Railing
		rail_m = RAILPOS_NONE
	ENDIF

	IF _iSymbolType = 11 THEN
		!!! Treads
		ns=0
		brk=1
		iLineTypeAboveBreak = LINETYPEABOVEBREAK_INTERSECT
		!!! Walking Line
		temp_wLineType=gs_wLineType1
		!!! Railing
		rail_m = RAILPOS_NONE
	ENDIF

	IF _iSymbolType = 12 THEN
		!!! Treads
		ns=0
		brk=1
		iLineTypeAboveBreak = LINETYPEABOVEBREAK_INTERSECT
		IF chStoryDist > -EPS  then
			dash_line = solid_line
			gs_DashLinePen = gs_cont_pen
		ENDIF
		!!! Walking Line
		temp_wLineType=gs_wLineType1
		gs_wLineTypeAbove = gs_wLineType1
		!!! Railing
		rail_m = RAILPOS_NONE
	ENDIF

	IF _iSymbolType = 13 THEN
		!!! Treads
		brk=0
		iLineTypeAboveBreak = LINETYPEABOVEBREAK_FULL
		solid_line = dash_line
		gs_cont_pen = gs_DashLinePen
		!!! Numbering
		gs_NumBelow = 1
		gs_NumAbove = 1
		!!! Walking Line
		temp_wLineType=gs_wLineType2
	ENDIF

	IF _iSymbolType = 14 THEN
		!!! Treads
		brk=0
		iLineTypeAboveBreak = LINETYPEABOVEBREAK_FULL
		!!! Numbering
		gs_NumBelow = 1
		gs_NumAbove = 1
		!!! Walking Line
		temp_wLineType=gs_wLineType1
	ENDIF

	IF _iSymbolType = 15 THEN
		!!! Treads
		brk=1
		iLineTypeAboveBreak = LINETYPEABOVEBREAK_INTERSECT
		gs_2DContourAbove=0
		gs_2DTreadAbove=0
		gs_2DRiserAbove=0
		!!! Numbering
		gs_NumBelow = 1
		IF chStoryDist > EPS  then
			gs_NumAbove = 1
			gs_2DRiserAbove=1
			ELSE
			gs_NumAbove = 0
			gs_2DRiserAbove=0
		ENDIF
		!!! Walking Line
		temp_wLineType=gs_wLineType1
	ENDIF

	IF _iSymbolType = 16 THEN
		!!! Treads
		brk=1
		iLineTypeAboveBreak = LINETYPEABOVEBREAK_INTERSECT
		gs_2DTreadAbove=0
		!!! Walking Line
		temp_wLineType=gs_wLineType1
	ENDIF

	IF _iSymbolType = 17 THEN
		!!! Treads
		brk=1
		iLineTypeAboveBreak = LINETYPEABOVEBREAK_INTERSECT
		gs_2DTreadAbove=0
		IF ABS(chStoryDist) < EPS  then
			dash_line = solid_line
			gs_DashLinePen = gs_cont_pen
			ELSE
			dash_line = dash_line
			gs_DashLinePen = gs_DashLinePen
		ENDIF
		!!! Walking Line
		temp_wLineType=gs_wLineType1
		gs_wLineTypeAbove = gs_wLineType1
	ENDIF

	IF _iSymbolType = 18 THEN
		!!! Treads
		brk=1
		iLineTypeAboveBreak = LINETYPEABOVEBREAK_INTERSECT
		!!! Walking Line
		temp_wLineType=gs_wLineType1
	ENDIF

	IF _iSymbolType = 19 THEN
		!!! Treads
		brk=1
		iLineTypeAboveBreak = LINETYPEABOVEBREAK_INTERSECT
		gs_2DRiserAbove=0
		!!! Walking Line
		temp_wLineType=gs_wLineType1
	ENDIF

	IF _iSymbolType = 20 THEN
		!!! Treads
		brk=1
		iLineTypeAboveBreak = LINETYPEABOVEBREAK_INTERSECT
		IF ABS(chStoryDist) < EPS  then
			dash_line = solid_line
			gs_DashLinePen = gs_cont_pen
			ELSE
			dash_line = dash_line
			gs_DashLinePen = gs_DashLinePen
		ENDIF
		!!! Walking Line
		temp_wLineType=gs_wLineType1
		gs_wLineTypeAbove = gs_wLineType1
	ENDIF

!!!!!!!!!!!!!! *** 2D Representation on Stories *** !!!!!!!!!!!!!!
!!! *** Stories above the story, where the object is placed on !!!

IF gs_StorySensitive=1 THEN

	IF chStoryDist > EPS  then

		!!! Line Type and Pen
		solid_line = gs_LineTypeStUp
			IF gs_BreaklineStUp=0 THEN
				dash_line = dash_line
				ELSE
				dash_line = gs_LineTypeStUp
			ENDIF
		gs_cont_pen = gs_LinePenStUp
		IF gs_BreaklineStUp=1 THEN gs_DashLinePen = gs_LinePenStUp

		!!! Walking Line
		gs_wLineType1 = gs_wLineTypeStUp
		gs_wLineType2 = gs_wLineTypeStUp
		gs_wLineTypeAbove = gs_wLineTypeStUp
		temp_wLineType = gs_wLineTypeStUp



		!!! Rise and Run Text
		IF gs_txStUp = 1 THEN
			bShowRiseAndRunText = 1
			ELSE
			bShowRiseAndRunText = 0
		ENDIF

		!!! NUMBERING
		IF gs_numaStUp = 1 THEN
			bShowNumbering = 1
			gs_NumAbove = 1
			gs_NumBelow = 1
			ELSE
			bShowNumbering = 0
			gs_NumAbove = 0
			gs_NumBelow = 0
		ENDIF

		IF gs_BreaklineStUp=1 THEN
			brk=1
			iLineTypeAboveBreak = LINETYPEABOVEBREAK_INTERSECT
			ELSE
			brk=0
			iLineTypeAboveBreak = LINETYPEABOVEBREAK_FULL
		ENDIF

		IF gs_BreaklineStUp=0 AND gs_TreadStUp=1  THEN gs_2DTread=1
		IF gs_BreaklineStUp=0 AND gs_TreadStUp=0  THEN gs_2DTread=0


		IF gs_BreaklineStUp=1 THEN

			IF gs_UpperPartStUp=1 THEN
				gs_2DContourAbove=1
				gs_NumAbove = 1
				ELSE
				gs_2DTreadAbove=0
				gs_2DContourAbove=0
				gs_NumAbove = 0
			ENDIF

			IF gs_LowerPartStUp=1 THEN
				gs_2DContourBelow=1
				gs_NumBelow = 1
				ELSE
				gs_2DTread=0
				gs_2DContourBelow=0
				gs_NumBelow = 0
			ENDIF

			IF gs_UpperPartStUp=1 AND gs_TreadStUp=1  THEN gs_2DTreadAbove=1
			IF gs_UpperPartStUp=1 AND gs_TreadStUp=0  THEN gs_2DTreadAbove=0

			IF gs_LowerPartStUp=1 AND gs_TreadStUp=1  THEN gs_2DTread=1
			IF gs_LowerPartStUp=1 AND gs_TreadStUp=0  THEN gs_2DTread=0

		ENDIF

	ENDIF
ENDIF


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!! *** Stories down the story, where the object is placed on !!!!

	IF chStoryDist < -EPS  then
		rail_m = RAILPOS_NONE
		bShowNumbering=0
		bShowRiseAndRunText=0
		walkingDirUPDN_m = WALKDIRSTR_NONE
		brk=0
		walkl=0
		solid_line = dash_line
		gs_cont_pen=gs_DashLinePen
		SET LINE_TYPE dash_line
		gs_fill_type=65
		gs_back_pen=0
	endif

	if bCarriageLineExist then
		sideMask	= 0
	ELSE
		sideMask	= 1
	ENDIF

	IF chStoryDist > -EPS THEN
		IF NOT(gs_2DTread) THEN
			MASK2=0
		ELSE
			MASK2=1
		ENDIF
	ENDIF

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!! Arrow Size

	ArrowDist=gs_ArrowHalfWidth

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

PEN gs_cont_pen
FILL gs_fill_type
DRAWINDEX 10

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!! *** CONTOUR LINES AND FILL *** !!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

ADD2 tempStringWidth, 0
!!NumStline=INT (1/th)	!!! POSITION of BREAK LINE
NumStline=INT (gs_BreakHeight/th)	!!! POSITION of BREAK LINE
IF ZZYZX <= (NumStline+1)*th THEN brk=0		!!!IF value of ZZYZX is less than BREAK LINE

	!!! Contour Line and Fill Type
	IF iLineTypeAboveBreak = LINETYPEABOVEBREAK_INTERSECT THEN
		temp_line=dash_line
		temp_pen=gs_DashLinePen
		IF gs_FillAbove=1 THEN
			FullFill=2+64
			temp_FillTypeAbove=gs_fill_type
			temp_BackPen=gs_back_pen
		ELSE
			FullFill=0
			temp_FillTypeAbove=gs_FillTypeAbove		!!! because of Area Fill Selection
			temp_BackPen=0							!!! because of Area Fill Selection
		ENDIF
	ELSE
		temp_line=solid_line
		temp_pen=gs_cont_pen
		FullFill=2+64
		temp_FillTypeAbove=gs_fill_type
		temp_BackPen=gs_back_pen
	ENDIF


	!!! BREAK LINE Distance
		brkLineX=(brkLineY*FlightWidth)/(2*td)

	!! No BREAK LINE
	IF brk=0 THEN

		PEN gs_cont_pen
		SET LINE_TYPE solid_line

		POLY2_b 5, 1+2+64, gs_fill_pen, gs_back_pen,
			0, td-ns, gs_2DTread,
			FlightWidth, td-ns, sideMask,
			FlightWidth, (rnu-1)*td, 1,
			0, (rnu-1)*td, sideMask,
			0, td-ns, -1

	ELSE	!!! with Break Line

			IF breakline_style_m = BREAKLINE_STRAIGHT THEN

				IF gs_2DContourBelow=1 THEN

					PEN gs_cont_pen
					SET LINE_TYPE solid_line

					POLY2_b 5, 1+2+64, gs_fill_pen, gs_back_pen,
						0, td-ns, 0,
						FlightWidth, td-ns, sideMask,
						FlightWidth, (NumStline+1)*td-ns, 1,
						0, (NumStline-1)*td-ns, sideMask,
						0, td-ns, -1

					BreakUNID=2000
					HOTSPOT2 0, (NumStline-1)*td-ns, BreakUNID: BreakUNID=BreakUNID+1
					HOTSPOT2 FlightWidth, (NumStline+1)*td-ns, BreakUNID: BreakUNID=BreakUNID+1

				ENDIF


				IF gs_2DContourAbove=1 THEN		!!IF No Contour above Break Line

					PEN temp_pen
					FILL temp_FillTypeAbove
					SET LINE_TYPE temp_line

					LINE2 0, (NumStline-1)*td-ns+brkLineY,FlightWidth, (NumStline+1)*td-ns+brkLineY


					POLY2_b 5, 1+FullFill, gs_fill_pen, temp_BackPen,
						0, (NumStline-1)*td-ns+brkLineY, 0,
						FlightWidth, (NumStline+1)*td-ns+brkLineY, sideMask,
						FlightWidth, (rnu-1)*td, 1,
						0, (rnu-1)*td, sideMask,
						0, (NumStline-1)*td-ns+brkLineY, -1

						BreakUNID=2050

						!!! BREAK LINE
						HOTSPOT2 FlightWidth/2,		(NumStline)*td-ns, BreakUNID, brkLineY, 1+128 : BreakUNID=BreakUNID+1
						HOTSPOT2 FlightWidth/2,		(NumStline)*td-ns-1, BreakUNID, brkLineY, 3 : BreakUNID=BreakUNID+1
						HOTSPOT2 FlightWidth/2,		(NumStline)*td-ns+brkLineY, BreakUNID, brkLineY, 2 : BreakUNID=BreakUNID+1

						HOTSPOT2 0, (NumStline-1)*td-ns+brkLineY, BreakUNID: BreakUNID=BreakUNID+1
						HOTSPOT2 FlightWidth, (NumStline+1)*td-ns+brkLineY, BreakUNID: BreakUNID=BreakUNID+1


				ENDIF


			ELSE
				if breakline_style_m = BREAKLINE_ZIGZAG_CHI then

					angle_breakline=ATN(2*td/FlightWidth)
					ZigZag1Y=(2/5*FlightWidth)*tan(angle_breakline)
					ZigZag2Y=(2/5*FlightWidth)*tan(angle_breakline)

					IF gs_2DContourBelow=1 THEN

						PEN gs_cont_pen
						SET LINE_TYPE solid_line

						POLY2_b 9, 1+2+64, gs_fill_pen, gs_back_pen,
							0, td-ns, 0,
							FlightWidth, td-ns, sideMask,
							FlightWidth, (NumStline+1)*td-ns, 1,
							6/10*FlightWidth,(NumStline+1)*td-ns-ZigZag1Y, 1,
							6/10*FlightWidth,(NumStline-1)*td-ns+ZigZag1Y, 1,
							4/10*FlightWidth,(NumStline+1)*td-ns-ZigZag1Y+brkLineY, 1,
							4/10*FlightWidth,(NumStline-1)*td-ns+ZigZag1Y, 1,
							0, (NumStline-1)*td-ns, sideMask,
							0, td-ns, -1

						BreakUNID=2100

						HOTSPOT2 0, (NumStline-1)*td-ns, BreakUNID: BreakUNID=BreakUNID+1
						HOTSPOT2 FlightWidth, (NumStline+1)*td-ns, BreakUNID: BreakUNID=BreakUNID+1

					ENDIF


					IF gs_2DContourAbove=1 THEN		!!IF No Contour above Break Line

						PEN temp_pen
						FILL temp_FillTypeAbove
						SET LINE_TYPE temp_line

						POLY2_b 9, 1+FullFill, gs_fill_pen, temp_BackPen,
							0, (NumStline-1)*td-ns+brkLineY, 1,
							4/10*FlightWidth, (NumStline-1)*td -ns + brkLineY+ZigZag2Y, 1,
							4/10*FlightWidth, (NumStline+1)*td -ns + brkLineY-ZigZag1Y, 1,
							6/10*FlightWidth, (NumStline-1)*td -ns+ZigZag1Y, 1,
							6/10*FlightWidth, (NumStline-1)*td -ns+ brkLineY+ZigZag2Y+2*(td-ZigZag1Y), 1,
							FlightWidth, (NumStline+1)*td-ns+brkLineY, sideMask,
							FlightWidth, (rnu-1)*td, 1,
							0, (rnu-1)*td, sideMask,
							0, (NumStline-1)*td-ns+brkLineY, -1

						BreakUNID=2150

						!!! BREAK LINE
						HOTSPOT2 FlightWidth/2,		(NumStline)*td-ns, BreakUNID, brkLineY, 1+128 : BreakUNID=BreakUNID+1
						HOTSPOT2 FlightWidth/2,		(NumStline)*td-ns-1, BreakUNID, brkLineY, 3 : BreakUNID=BreakUNID+1
						HOTSPOT2 FlightWidth/2,		(NumStline)*td-ns+brkLineY, BreakUNID, brkLineY, 2 : BreakUNID=BreakUNID+1

						HOTSPOT2 0, (NumStline-1)*td-ns+brkLineY, BreakUNID: BreakUNID=BreakUNID+1
						HOTSPOT2 FlightWidth, (NumStline+1)*td-ns+brkLineY, BreakUNID: BreakUNID=BreakUNID+1


					ENDIF
				else	!!! breakline_style=`Zigzag`

					angle_breakline=ATN(2*td/FlightWidth)
					ZigZag1Y=(2/5*FlightWidth)*tan(angle_breakline)
					ZigZag2Y=(7/20*FlightWidth)*tan(angle_breakline)

					IF gs_2DContourBelow=1 THEN

						PEN gs_cont_pen
						SET LINE_TYPE solid_line

						POLY2_b 9, 1+2+64, gs_fill_pen, gs_back_pen,
							0, td-ns, 0,
							FlightWidth, td-ns, sideMask,
							FlightWidth, (NumStline+1)*td-ns, 1,
							6/10*FlightWidth,(NumStline+1)*td-ns-ZigZag1Y, 1,
							6/10*FlightWidth,(NumStline-1)*td-ns+ZigZag1Y, 1,
							4/10*FlightWidth,(NumStline+1)*td-ns-ZigZag1Y, 1,
							4/10*FlightWidth,(NumStline-1)*td-ns+ZigZag1Y, 1,
							0, (NumStline-1)*td-ns, sideMask,
							0, td-ns, -1

						BreakUNID=2100

						HOTSPOT2 0, (NumStline-1)*td-ns, BreakUNID: BreakUNID=BreakUNID+1
						HOTSPOT2 FlightWidth, (NumStline+1)*td-ns, BreakUNID: BreakUNID=BreakUNID+1

					ENDIF


					IF gs_2DContourAbove=1 THEN		!!IF No Contour above Break Line

						PEN temp_pen
						FILL temp_FillTypeAbove
						SET LINE_TYPE temp_line

						POLY2_b 9, 1+FullFill, gs_fill_pen, temp_BackPen,
							0, (NumStline-1)*td-ns+brkLineY, 1,
							7/20*FlightWidth, (NumStline-1)*td -ns + brkLineY+ZigZag2Y, 1,
							7/20*FlightWidth, (NumStline-1)*td -ns + brkLineY+ZigZag2Y+2*(td-ZigZag1Y), 1,
							11/20*FlightWidth, (NumStline-1)*td -ns+ brkLineY+ZigZag2Y, 1,
							11/20*FlightWidth, (NumStline-1)*td -ns+ brkLineY+ZigZag2Y+2*(td-ZigZag1Y), 1,
							FlightWidth, (NumStline+1)*td-ns+brkLineY, sideMask,
							FlightWidth, (rnu-1)*td, 1,
							0, (rnu-1)*td, sideMask,
							0, (NumStline-1)*td-ns+brkLineY, -1

						BreakUNID=2150

						!!! BREAK LINE
						HOTSPOT2 FlightWidth/2,		(NumStline)*td-ns, BreakUNID, brkLineY, 1+128 : BreakUNID=BreakUNID+1
						HOTSPOT2 FlightWidth/2,		(NumStline)*td-ns-1, BreakUNID, brkLineY, 3 : BreakUNID=BreakUNID+1
						HOTSPOT2 FlightWidth/2,		(NumStline)*td-ns+brkLineY, BreakUNID, brkLineY, 2 : BreakUNID=BreakUNID+1

						HOTSPOT2 0, (NumStline-1)*td-ns+brkLineY, BreakUNID: BreakUNID=BreakUNID+1
						HOTSPOT2 FlightWidth, (NumStline+1)*td-ns+brkLineY, BreakUNID: BreakUNID=BreakUNID+1


					ENDIF
				endif



			ENDIF

	ENDIF

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!! *** TREADS *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

	IF brk=0 THEN		!!! IF NO BREAK LINE

		IF chStoryDist > -EPS  then

			IF gs_2DTread=1 THEN
				ADD2 0,2*td-ns
					FOR numTread=1 to rnu-3

						PEN gs_cont_pen
						SET LINE_TYPE solid_line

						LINE2 0,0,FlightWidth,0
						IF ns=0 THEN HOTLINE2 0,0,FlightWidth,0
						ADD2 0,td
					NEXT numTread
					DEL rnu-3
				DEL 1

				IF ns> 0 THEN	!!! IF TREAD NOSING > 0
				ADD2 0,td
					FOR numTread=1 to rnu-2

						PEN gs_DashLinePen
						SET LINE_TYPE dash_line

						LINE2 0,0,FlightWidth,0
						HOTLINE2 0,0,FlightWidth,0
						ADD2 0,td
					NEXT numTread
					DEL rnu-2
				DEL 1
				ENDIF
			ENDIF

		ENDIF

	ELSE	!!! with Break Line

		!!! TREAD UNDER BREAK LINE

		IF gs_2DTread=1 THEN
			ADD2 0,td-ns
				FOR numTread=1 to NumStline
					StartSolid=0

					IF breakline_style_m = BREAKLINE_STRAIGHT THEN
						IF numTread=NumStline THEN StartSolid=FlightWidth/2
						ELSE
						IF numTread=NumStline THEN StartSolid=FlightWidth*6/10
					ENDIF

					PEN gs_cont_pen
					SET LINE_TYPE solid_line

					!!! SOLID LINE

					LINE2 StartSolid,0,FlightWidth,0
					IF ns=0 THEN HOTLINE2 StartSolid,0,FlightWidth,0

					IF ns> 0 THEN	!!! IF TREAD NOSING > 0

						StartDashed=0
						IF breakline_style_m = BREAKLINE_STRAIGHT THEN

							IF numTread=NumStline THEN StartDashed=FlightWidth/2+((ns)*FlightWidth)/(2*td)
							IF numTread=NumStline-1 THEN StartDashed=((ns)*FlightWidth)/(2*td)

						ELSE

							IF distZigZag >= 4/10*FlightWidth THEN
							distZigZag = 4/10*FlightWidth
							ELSE
							distZigZag=(FlightWidth*(td-ns))/(2*td)
							ENDIF

							IF numTread=NumStline THEN StartDashed=FlightWidth-distZigZag
							IF numTread=NumStline-1 THEN StartDashed=(FlightWidth*(ns))/(2*td)

						ENDIF

						ADD2 0,ns
							PEN temp_RiserLinePen
							SET LINE_TYPE temp_RiserLine
							!!! DASHED LINE
							LINE2 StartDashed,0,FlightWidth,0
							HOTLINE2 StartDashed,0,FlightWidth,0
						DEL 1
						ENDIF

					ADD2 0,td
				NEXT numTread
				DEL NumStline
			DEL 1
		ENDIF

		!!! TREADS ABOVE BREAK LINE

		IF gs_2DTreadAbove=1 THEN
			ADD2 0,(NumStline)*td-ns
				FOR numTread=1 to rnu-NumStline-1

					EndSolid=FlightWidth

					IF breakline_style_m = BREAKLINE_STRAIGHT THEN
						IF numTread=1 THEN EndSolid=FlightWidth/2-brkLineX
						IF numTread=2 THEN EndSolid=FlightWidth-brkLineX
					ELSE
						if breakline_style_m = BREAKLINE_ZIGZAG_CHI then
							ZigZagCorrection = 1/10
						else
							ZigZagCorrection = 3/20
						endif
						IF brkLineX <= ZigZagCorrection*FlightWidth THEN
							IF numTread=1 THEN EndSolid=FlightWidth/2-ZigZagCorrection*FlightWidth
							else
							IF numTread=1 THEN EndSolid=FlightWidth/2-brkLineX
						endif


						IF (FlightWidth/2-brkLineX) <= (4/20-ZigZagCorrection)*FlightWidth THEN
							IF numTread=2 THEN EndSolid=FlightWidth/2-ZigZagCorrection*FlightWidth
							else
							IF numTread=2 THEN EndSolid=FlightWidth-brkLineX
						endif

					ENDIF

					PEN temp_pen
					SET LINE_TYPE temp_line

					!!! SOLID LINE
					LINE2 0,0,EndSolid,0
					IF ns=0 THEN HOTLINE2 0,0,EndSolid,0

					!!! DASHED LINE/RISER
					IF gs_2DRiserAbove=1 THEN
						IF ns> 0 THEN	!!! IF TREAD NOSING > 0
							EndDashed=FlightWidth
							IF breakline_style_m = BREAKLINE_STRAIGHT THEN
								IF numTread=1 THEN EndDashed=FlightWidth/2+((ns)*FlightWidth)/(2*td)-brkLineX
								IF numTread=2 THEN EndDashed=FlightWidth-brkLineX+((ns)*FlightWidth)/(2*td)

							ELSE

								IF distZigZag <= (0.5-ZigZagCorrection)*FlightWidth THEN
									distZigZag = (0.5-ZigZagCorrection)*FlightWidth
								ELSE
									distZigZag=(FlightWidth*(td/2+ns))/(2*td)
								ENDIF

								IF (brkLineX-((ns)*FlightWidth)/(2*td)) <= ZigZagCorrection*FlightWidth  AND FlightWidth/2+((ns)*FlightWidth)/(2*td)-brkLineX< FlightWidth/2+(4/20-ZigZagCorrection)*FlightWidth THEN
									IF numTread=1 THEN EndDashed=FlightWidth/2-ZigZagCorrection*FlightWidth
									else
									IF numTread=1 THEN EndDashed=FlightWidth/2-brkLineX+((ns)*FlightWidth)/(2*td)
								endif

								IF (FlightWidth-brkLineX+((ns)*FlightWidth)/(2*td)) >= FlightWidth THEN
									IF numTread=2 THEN EndDashed=FlightWidth
									else
									IF numTread=2 THEN EndDashed=FlightWidth-brkLineX+((ns)*FlightWidth)/(2*td)
								endif

							ENDIF

								ADD2 0,ns
									PEN temp_RiserLinePen
									SET LINE_TYPE temp_RiserLine
									!!! DASHED LINE
									LINE2 0,0,EndDashed,0
									HOTLINE2 0,0,EndDashed,0
								DEL 1
						ENDIF
					ENDIF

					ADD2 0,td
				NEXT numTread
				DEL rnu-NumStline-1
			DEL 1
		ENDIF
	ENDIF


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!! *** NEWEL POST *** !!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
IF gs_2DContourBelow=1 THEN
	if bCarriageLineExist then
		IF np_m = POSTPOS_LEFT or np_m = POSTPOS_BOTH THEN
			IF iBottomStepArrangement <> BSTEPARRANGE_NORMAL THEN
				ADD2 -nps,td-nps/2
			ELSE
				ADD2 -nps,0
			ENDIF

				PEN gs_cont_pen
				SET LINE_TYPE solid_line

					POLY2_b 5, 1+2+64, gs_fill_pen, gs_back_pen,
						0, 0, 1,
						nps, 0, 1,
						nps, nps, 1,
						0, nps, 1,
						0, 0, -1
			DEL 1
		ENDIF

		IF np_m = POSTPOS_RIGHT or np_m = POSTPOS_BOTH THEN

			IF iBottomStepArrangement <> BSTEPARRANGE_NORMAL THEN
				ADD2 FlightWidth,td-nps/2
			ELSE
				ADD2 FlightWidth,0
			ENDIF

				PEN gs_cont_pen
				SET LINE_TYPE solid_line

				POLY2_b 5, 1+2+64, gs_fill_pen, gs_back_pen,
					0, 0, 1,
					nps, 0, 1,
					nps, nps, 1,
					0, nps, 1,
					0, 0, -1
			DEL 1
		ENDIF
	ENDIF
ENDIF
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!! *** BOTTOM STEP *** !!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

IF gs_2DContourBelow=1 THEN
IF iBottomStepArrangement = BSTEPARRANGE_NORMAL THEN

		PEN gs_cont_pen
		SET LINE_TYPE solid_line

		POLY2_b 5, 1+2+64, gs_fill_pen, gs_back_pen,
			0, -ns, 1,
			FlightWidth, -ns, 1,
			FlightWidth, td-ns, gs_2DTread,
			0,td-ns, 1,
			0, -ns, -1

		IF ns>0 and chStoryDist > -EPS OR ns>0 and chStoryDist > EPS AND gs_TreadStUp=1 THEN

			PEN gs_DashLinePen
			SET LINE_TYPE dash_line

			LINE2 0,0,FlightWidth,0

		ENDIF
ELSE

	CutPostX=nps
	CutPostY=nps/2

	IF np_m = POSTPOS_BOTH THEN
		IF iBottomStepArrangement = BSTEPARRANGE_DSTEP THEN

				PEN gs_cont_pen
				SET LINE_TYPE solid_line

				if bCarriageLineExist then

					put	-CutPostX,				-ns,			1,
						FlightWidth+CutPostX,	-ns,			1,
						FlightWidth+CutPostX,	td/2,			901,
						0,						180,			4001,
						FlightWidth+CutPostX,	td-CutPostY,	1

					if abs(CutPostY-ns) > EPS then
						put	FlightWidth,	td-CutPostY,	1,
							FlightWidth,	td-ns,			gs_2DTread,
							0,				td-ns,			1,
							0,				td-CutPostY,	1,
							-CutPostX,		td-CutPostY,	1,
							-CutPostX,		td+ns,			1,
							-CutPostX,		td/2,			901,
							-CutPostX,		180,			4001
					else
						put	FlightWidth,	td-CutPostY,	gs_2DTread,
							0,				td-CutPostY,	1,
							-CutPostX,		td-CutPostY,	1,
							-CutPostX,		td+ns,			1,
							-CutPostX,		td/2,			901,
							-CutPostX,		180,			4001
					endif

					POLY2_b NSP/3, 1+2+4+64, gs_fill_pen, gs_back_pen,
						get (NSP)
				ELSE
					modFlightWidth = FlightWidth - 2 * st
					add2 (FlightWidth - modFlightWidth)/2,0

					POLY2_b 7, 1+2+64, gs_fill_pen, gs_back_pen,
						-CutPostX,-ns,1,
						modFlightWidth+CutPostX,-ns,1,
						modFlightWidth+CutPostX,td/2,901,
						0,180,4001,
						-CutPostX,td+ns,1,
						-CutPostX,td/2,901,
						-CutPostX,180,4001
					del 1
				ENDIF

!			IF ns>0 and chStoryDist > -EPS THEN
			IF ns>0 and chStoryDist > -EPS OR ns>0 and chStoryDist > EPS AND gs_TreadStUp=1 THEN

				PEN gs_DashLinePen
				SET LINE_TYPE dash_line

				if bCarriageLineExist then
					LINE2 -nps,0,FlightWidth+nps,0
					ARC2 -nps,td/2,td/2,90,270
					ARC2 FlightWidth+nps,td/2,td/2,-90,-270
				else
					LINE2 0,0,FlightWidth,0
					ARC2 0,td/2,td/2,90,270
					ARC2 FlightWidth,td/2,td/2,-90,-270
				endif

			ENDIF
		ENDIF

		IF iBottomStepArrangement = BSTEPARRANGE_BULLNOSE THEN

				PEN gs_cont_pen
				SET LINE_TYPE solid_line

				if abs(CutPostY-ns) > EPS then
					put	0,							td-ns,			1,
						0,							td-CutPostY,	1,
						-ns,						td-CutPostY,	1,
						td-CutPostY,				td-CutPostY,	901,
						0,							90,				4001,
						FlightWidth-(td-CutPostY),	-ns,			1,
						FlightWidth-(td-CutPostY),	td-CutPostY,	901,
						0,							90,				4001,
						FlightWidth,				td-CutPostY,	1,
						FlightWidth,				td-ns,			gs_2DTread,
						0,							td,				-1
				else
					put	0,							td-CutPostY,	1,
						-ns,						td-CutPostY,	1,
						td-CutPostY,				td-CutPostY,	901,
						0,							90,				4001,
						FlightWidth-(td-CutPostY),	-ns,			1,
						FlightWidth-(td-CutPostY),	td-CutPostY,	901,
						0,							90,				4001,
						FlightWidth,				td-CutPostY,	gs_2DTread,
						0,							td,				-1
				endif

				POLY2_b NSP/3, 1+2+64, gs_fill_pen, gs_back_pen,
					get (NSP)

			IF ns>0 and chStoryDist > -EPS OR ns>0 and chStoryDist > EPS AND gs_TreadStUp=1 THEN

					PEN gs_DashLinePen
					SET LINE_TYPE dash_line

					LINE2 td-CutPostY,0,FlightWidth-(td-CutPostY),0
					ARC2 td-CutPostY,td-CutPostY,td-CutPostY,180,270
					ARC2 FlightWidth-(td-CutPostY),td-CutPostY,td-CutPostY,270,360
			ENDIF
		ENDIF

		IF iBottomStepArrangement = BSTEPARRANGE_SPLAYED THEN

				PEN gs_cont_pen
				SET LINE_TYPE solid_line

				POLY2_b 11, 1+2+64, gs_fill_pen, gs_back_pen,
					0,td-ns,1,
					0,td-CutPostY,1,
					-ns,td-CutPostY,1,
					-ns,2/3*td-ns*tan(22.5),1,
					2/3*td-ns*tan(22.5),-ns,1,
					FlightWidth-2/3*td+ns*tan(22.5),-ns,1,
					FlightWidth+ns,2/3*td-ns*tan(22.5),1,
					FlightWidth+ns,td-CutPostY,1,
					FlightWidth,td-CutPostY,1,
					FlightWidth,td-ns,gs_2DTread,
					0,td-ns,-1

			IF ns>0 and chStoryDist > -EPS OR ns>0 and chStoryDist > EPS AND gs_TreadStUp=1 THEN

				PEN gs_DashLinePen
				SET LINE_TYPE dash_line

				LINE2 0,td+CutPostY,0,2/3*td
				LINE2 0,2/3*td,2/3*td,0
				LINE2 2/3*td,0,FlightWidth-2/3*td,0
				LINE2 FlightWidth-2/3*td,0,FlightWidth,2/3*td
				LINE2 FlightWidth,2/3*td,FlightWidth,td+CutPostY

			ENDIF
		ENDIF
	ENDIF


	IF np_m = POSTPOS_LEFT or np_m = POSTPOS_RIGHT THEN

	IF np_m = POSTPOS_RIGHT THEN
	mul2 -1,1
	ADD2 -FlightWidth,0
	ENDIF

		IF iBottomStepArrangement = BSTEPARRANGE_DSTEP THEN

				PEN gs_cont_pen
				SET LINE_TYPE solid_line

				if bCarriageLineExist then
					POLY2_b 9, 1+2+64, gs_fill_pen, gs_back_pen,
						FlightWidth,-ns,1,
						FlightWidth,td-ns,gs_2DTread,
						0,td-ns,1,
						0,td-CutPostY,1,
						-CutPostX,td-CutPostY,1,
						-CutPostX,td+ns,1,
						-CutPostX,td/2,901,
						-CutPostX,180,4001,
						FlightWidth,-ns,-1
				ELSE
					POLY2_b 8, 1+2+64, gs_fill_pen, gs_back_pen,
						0,-ns,1,
						FlightWidth,-ns,1,
						FlightWidth,td-ns,gs_2DTread,
						0,td-ns,1,
						0,td+ns,1,
						0,td/2,901,
						0,180,4001,
						0,-ns,-1
				ENDIF

			IF ns>0 and chStoryDist > -EPS OR ns>0 and chStoryDist > EPS AND gs_TreadStUp=1 THEN


				PEN gs_DashLinePen
				SET LINE_TYPE dash_line

				if bCarriageLineExist then
					LINE2 -nps,0,FlightWidth,0
					ARC2 -nps,td/2,td/2,90,270
				else
					LINE2 0,0,FlightWidth,0
					ARC2 0,td/2,td/2,90,270
				endif

			ENDIF

		ENDIF

		IF iBottomStepArrangement = BSTEPARRANGE_BULLNOSE THEN

				PEN gs_cont_pen
				SET LINE_TYPE solid_line

				POLY2_b 8, 1+2+64, gs_fill_pen, gs_back_pen,
					0, td-ns,1,
					0, td-CutPostY,1,
					-ns, td-CutPostY,1,
					td-CutPostY, td-CutPostY,901,
					0, 90,4001,
					FlightWidth,-ns,1,
					FlightWidth,td-ns,gs_2DTread,
					0,td-ns,-1

			IF ns>0 and chStoryDist > -EPS OR ns>0 and chStoryDist > EPS AND gs_TreadStUp=1 THEN

				PEN gs_DashLinePen
				SET LINE_TYPE dash_line

				LINE2 td-CutPostY,0,FlightWidth,0
				ARC2 td-CutPostY,td-CutPostY,td-CutPostY,180,270
			ENDIF
		ENDIF

		IF iBottomStepArrangement = BSTEPARRANGE_SPLAYED THEN

				PEN gs_cont_pen
				SET LINE_TYPE solid_line

				POLY2_b 8, 1+2+64, gs_fill_pen, gs_back_pen,
					0,td-ns,1,
					0,td-CutPostY,1,
					-ns,td-CutPostY,1,
					-ns,2/3*td-ns*tan(22.5),1,
					2/3*td-ns*tan(22.5),-ns,1,
					FlightWidth,-ns,1,
					FlightWidth,td-ns,gs_2DTread,
					0,td-ns,-1

				IF ns>0 and chStoryDist > -EPS OR ns>0 and chStoryDist > EPS AND gs_TreadStUp=1 THEN


					PEN gs_DashLinePen
					SET LINE_TYPE dash_line

					LINE2 0,td+CutPostY,0,2/3*td
					LINE2 0,2/3*td,2/3*td,0
					LINE2 2/3*td,0,FlightWidth,0

				ENDIF
			ENDIF

	IF np_m = POSTPOS_RIGHT THEN DEL 2
	ENDIF

ENDIF
ENDIF
DEL 1


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!! *** STRING *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

if bCarriageLineExist then
	IF iFlightSectionType = FLIGHTSECTION_WITHOUT_SOFFIT or iFlightSectionType = FLIGHTSECTION_WITH_SOFFIT THEN
	Add2 st,0
		!!! String Overhang on Lower Side
		LowerEndX1=(th+pdvert)/TAN(ang)
		LowerEndHgtX=LowerEndHgt/TAN(ang)

		!!! Start Point of String on Lower Side

		IF np_m = POSTPOS_NONE THEN
				IF iLowerJunctionType = LOWERJUNCTION_STRAIGHT_END THEN
					StringStartPointL=0
					StringStartPointR=0
				ELSE
					StringStartPointL=-LowerEndX1+LowerEndHgtX
					StringStartPointR=-LowerEndX1+LowerEndHgtX
				ENDIF
		ENDIF

		IF np_m = POSTPOS_RIGHT THEN
				IF iBottomStepArrangement <> BSTEPARRANGE_NORMAL THEN
					StringStartPointL=-LowerEndX1+LowerEndHgtX
					StringStartPointR=td+nps/2
				ELSE
					StringStartPointL=-LowerEndX1+LowerEndHgtX
					StringStartPointR=nps
				ENDIF
		ENDIF

		IF np_m = POSTPOS_LEFT THEN
				IF iBottomStepArrangement <> BSTEPARRANGE_NORMAL THEN
					StringStartPointR=-LowerEndX1+LowerEndHgtX
					StringStartPointL=td+nps/2
				ELSE
					StringStartPointR=-LowerEndX1+LowerEndHgtX
					StringStartPointL=nps
				ENDIF
		ENDIF

		IF np_m = POSTPOS_BOTH THEN
				IF iBottomStepArrangement <> BSTEPARRANGE_NORMAL THEN
					StringStartPointR=td+nps/2
					StringStartPointL=td+nps/2
				ELSE
					StringStartPointR=nps
					StringStartPointL=nps
				ENDIF
		ENDIF

		!!! temp_parameters at Break Line
		String_distBreakline=(2*td*(st))/(FlightWidth)

		IF breakline_style_m = BREAKLINE_STRAIGHT THEN
			temp_brkLineY=brkLineY
			ELSE
			temp_brkLineY=brkLineY
		ENDIF

		!!!!!!!!!!!!!!!!!!!!!!! *** LEFT STRING *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!

				IF brk=0 THEN

						PEN carriagePen
						SET LINE_TYPE carriageLineType

						POLY2_b 5, 1+2+64, gs_fill_pen, gs_back_pen,
							0,StringStartPointL,1,
							-st,StringStartPointL,1,
							-st,(rnu-1)*td,1,
							0,(rnu-1)*td,1,
							0,StringStartPointL,-1

				ELSE

					IF gs_2DContourBelow=1 THEN

							PEN carriagePen
							SET LINE_TYPE carriageLineType

							POLY2_b 5, 1+2+64, gs_fill_pen, gs_back_pen,
								0,StringStartPointL,1,
								-st,StringStartPointL,1,
								-st,(NumStline-1)*td-ns-String_distBreakline,1,
								0,(NumStline-1)*td-ns,1,
								0,StringStartPointL,-1
					ENDIF

					IF gs_2DContourAbove=1 THEN	!!IF No Contour above Break Line

							PEN carriagePen
							FILL temp_FillTypeAbove
							SET LINE_TYPE temp_line

							POLY2_b 5, 1+FullFill, gs_fill_pen, temp_BackPen,
								-st,(rnu-1)*td,1,
								-st,(NumStline-1)*td-ns-String_distBreakline+temp_brkLineY,1,
								0,(NumStline-1)*td-ns+temp_brkLineY,1,
								0,(rnu-1)*td,1,
								-st,(rnu-1)*td,-1

					ENDIF

				ENDIF

		!!!!!!!!!!!!!!!!!!!!!!! *** RIGHT STRING *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!
			ADD2 FlightWidth+st,0
				IF brk=0 THEN

						PEN carriagePen
						SET LINE_TYPE carriageLineType

						POLY2_b 5, 1+2+64, gs_fill_pen, gs_back_pen,
							0,StringStartPointR,1,
							-st,StringStartPointR,1,
							-st,(rnu-1)*td,1,
							0,(rnu-1)*td,1,
							0,StringStartPointR,-1

				ELSE

					IF gs_2DContourBelow=1 THEN

							PEN carriagePen
							SET LINE_TYPE carriageLineType

							POLY2_b 5, 1+2+64, gs_fill_pen, gs_back_pen,
								0,StringStartPointR,1,
								-st,StringStartPointR,1,
								-st,(NumStline+1)*td-ns,1,
								0,(NumStline+1)*td-ns+String_distBreakline,1,
								0,StringStartPointR,-1
					ENDIF


					IF gs_2DContourAbove=1 THEN	!!IF No Contour above Break Line

							PEN carriagePen
							FILL temp_FillTypeAbove
							SET LINE_TYPE temp_line

							POLY2_b 5, 1+FullFill, gs_fill_pen, temp_BackPen,
								-st,(rnu-1)*td,1,
								-st,(NumStline+1)*td-ns+temp_brkLineY,1,
								0,(NumStline+1)*td-ns+String_distBreakline+temp_brkLineY,1,
								0,(rnu-1)*td,1,
								-st,(rnu-1)*td,-1
					ENDIF

				ENDIF
			DEL 1
		DEL 1
	ENDIF
ENDIF


! ==============================================================================
! WALKING LINE / ARROWHEAD / START END SYMBOL
! ==============================================================================

IF walkl THEN
	add2 tempStringWidth, 0
	DRAWINDEX 40

		!!! Arrow Size !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

		ArrowDist=gs_ArrowHalfWidth

		!!! ********** Arrowhead Contour Conditions
		IF arrow_style_m = ARROW_STYLE_1 OR arrow_style_m = ARROW_STYLE_2 OR arrow_style_m = ARROW_STYLE_3 THEN
			temp_ArrowMask=0
		else
			temp_ArrowMask=1
		endif

		!!! ********** Arrowhead Contour Points Conditions
		IF arrow_style_m = ARROW_STYLE_1 OR arrow_style_m = ARROW_STYLE_4 OR arrow_style_m = ARROW_STYLE_7 THEN
			temp_1XContour=0
			temp_2XContour=FlightWidth
			temp_1YContourTop=(rnu-2)*td-ns
			temp_2YContourTop=(rnu-2)*td-ns
			temp_1YContourBreak=(NumStline-1)*td-ns
			temp_2YContourBreak=(NumStline-1)*td-ns
		endif

		IF arrow_style_m = ARROW_STYLE_2 OR arrow_style_m = ARROW_STYLE_5 OR arrow_style_m = ARROW_STYLE_8 THEN
			temp_1XContour=FlightWidth/4
			temp_2XContour=FlightWidth*3/4
			temp_1YContourTop=(rnu-2)*td-ns
			temp_2YContourTop=(rnu-2)*td-ns
			temp_1YContourBreak=(NumStline-1)*td-ns
			temp_2YContourBreak=(NumStline-1)*td-ns
		endif

		IF arrow_style_m = ARROW_STYLE_3 OR arrow_style_m = ARROW_STYLE_6 OR arrow_style_m = ARROW_STYLE_9 THEN
			temp_1XContour=FlightWidth/2-ArrowDist
			temp_2XContour=FlightWidth/2+ArrowDist
			temp_1YContourTop=(rnu-1)*td-gs_ArrowHeight
			temp_2YContourTop=(rnu-1)*td-gs_ArrowHeight
			temp_1YContourBreak=(NumStline)*td-ns-gs_ArrowHeight
			temp_2YContourBreak=(NumStline)*td-ns-gs_ArrowHeight
		endif

		!!! ********** Arrowhead Fill Contour Points Conditions
		IF arrow_style_m = ARROW_STYLE_4 OR arrow_style_m = ARROW_STYLE_5 OR arrow_style_m = ARROW_STYLE_6 THEN
			temp_1XFill=temp_1XContour
		endif

		IF arrow_style_m = ARROW_STYLE_7 OR arrow_style_m = ARROW_STYLE_8 OR arrow_style_m = ARROW_STYLE_9 THEN
			temp_1XFill=FlightWidth/2
		endif

		! Walking Line Length Conditions
		temp_wLineLength = 0
		temp_wLineLengthAbove = 0
		IF arrow_style_m = ARROW_STYLE_4 OR arrow_style_m = ARROW_STYLE_5 THEN temp_wLineLength = td+ns
		IF arrow_style_m = ARROW_STYLE_4 OR arrow_style_m = ARROW_STYLE_5 THEN temp_wLineLengthAbove = td+ns
		IF arrow_style_m = ARROW_STYLE_6 THEN temp_wLineLength = gs_ArrowHeight
		IF arrow_style_m = ARROW_STYLE_6 THEN temp_wLineLengthAbove = gs_ArrowHeight


		PEN gs_wLinePen
		Fill gs_ArrowFill

		IF brk THEN
			! ---------------------------------------------------------------------------
			! with Break Line
			! ---------------------------------------------------------------------------

			IF gs_2DContourBelow THEN

				! Geometry of ArrowHead Contour at Break Line
				SET LINE_TYPE gs_wLineType1
				POLY2_b 4, 1, gs_ArrowFillPen, gs_fill_pen,
					temp_1XContour,temp_1YContourBreak, temp_ArrowMask,
					temp_2XContour,temp_2YContourBreak, 1,
					FlightWidth/2,(NumStline)*td-ns, 1,
					temp_1XContour,temp_1YContourBreak, -1

				IF gs_ArrowFillPen<>0 THEN
					IF arrow_style_m <> ARROW_STYLE_1 AND arrow_style_m <> ARROW_STYLE_2 AND arrow_style_m <> ARROW_STYLE_3 THEN
						! Geometry of ArrowHead Fill
						POLY2_b 4, 2, gs_ArrowFillPen, gs_fill_pen,
							temp_1XFill,temp_1YContourBreak, temp_ArrowMask,
							temp_2XContour,temp_2YContourBreak, 1,
							FlightWidth/2,(NumStline)*td-ns, 1,
							temp_1XFill,temp_1YContourBreak, -1
					ENDIF
				ENDIF

			ENDIF

			IF gs_2DContourAbove THEN		! IF No Contour above Break Line
				SET LINE_TYPE gs_wLineTypeAbove
				! Geometry of ArrowHead Contour
				POLY2_b 4, 1, gs_ArrowFillPen, gs_fill_pen,
					temp_1XContour,temp_1YContourTop, temp_ArrowMask,
					temp_2XContour,temp_2YContourTop, 1,
					FlightWidth/2,(rnu-1)*td, 1,
					temp_1XContour,temp_1YContourTop, -1


				IF gs_ArrowFillPenAbove<>0 THEN
					IF arrow_style_m <> ARROW_STYLE_1 AND arrow_style_m <> ARROW_STYLE_2 AND arrow_style_m <> ARROW_STYLE_3 THEN
						! Geometry of ArrowHead Fill
						POLY2_b 4, 2, gs_ArrowFillPenAbove, gs_fill_pen,
							temp_1XFill,temp_1YContourTop, temp_ArrowMask,
							temp_2XContour,temp_2YContourTop, 1,
							FlightWidth/2,(rnu-1)*td, 1,
							temp_1XFill,temp_1YContourTop, -1
					ENDIF
				ENDIF
			ENDIF

			! Walkin Line Length under Break Line
			IF gs_2DContourBelow=1 THEN
				SET LINE_TYPE gs_wLineType1
				line2 FlightWidth/2,-ns, FlightWidth/2, (NumStline)*td-ns-temp_wLineLength
			ENDIF

			! Walkin Line Length above Break Line

			IF gs_2DContourAbove=1 THEN		! IF No Contour above Break Line
				SET LINE_TYPE gs_wLineTypeAbove
				IF breakline_style_m = BREAKLINE_STRAIGHT THEN
					line2 FlightWidth/2,(NumStline)*td-ns+brkLineY, FlightWidth/2, (rnu-1)*td-temp_wLineLengthAbove
				ELSE
					line2 FlightWidth/2,(NumStline)*td-ns+brkLineY-(td-ZigZag1Y), FlightWidth/2, (rnu-1)*td-temp_wLineLengthAbove
				ENDIF
			ENDIF

		ELSE
			! ---------------------------------------------------------------------------
			! NO BREAK LINE
			! ---------------------------------------------------------------------------

			SET LINE_TYPE temp_wLineType

			! Walking Line Length
			line2 FlightWidth/2,-ns, FlightWidth/2, (rnu-1)*td-temp_wLineLength


			! Geometry of ArrowHead Contour
			POLY2_b 4, 1, gs_ArrowFillPen, gs_fill_pen,
				temp_1XContour,temp_1YContourTop, temp_ArrowMask,
				temp_2XContour,temp_2YContourTop, 1,
				FlightWidth/2,(rnu-1)*td, 1,
				temp_1XContour,temp_1YContourTop, -1

			IF gs_ArrowFillPen<>0 THEN
				IF arrow_style_m <> ARROW_STYLE_1 AND arrow_style_m <> ARROW_STYLE_2 AND arrow_style_m <> ARROW_STYLE_3 THEN
					! Geometry of ArrowHead Fill
					POLY2_b 4, 2, gs_ArrowFillPen, gs_fill_pen,
						temp_1XFill,temp_1YContourTop, temp_ArrowMask,
						temp_2XContour,temp_2YContourTop, 1,
						FlightWidth/2,(rnu-1)*td, 1,
						temp_1XFill,temp_1YContourTop, -1
				ENDIF
			ENDIF

		ENDIF


				!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
				!!! ********** Start End Symbol ********** !!!
				!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

				DRAWINDEX 45
				IF brk THEN
				SET LINE_TYPE gs_wLineType1
				ELSE
				SET LINE_TYPE temp_wLineType
				ENDIF

				Fill gs_StartEndFill

					IF gs_StartEndFillPen<>0 THEN temp_FillStatus=2
					IF gs_StartEndFillPen=0 THEN temp_FillStatus=0

					IF gs_2DContourBelow=1 THEN

						IF gs_StartEndStyle_m = STARTSYMB_STYLE1 THEN

							POLY2_B 2, 1+temp_FillStatus, gs_StartEndFillPen, gs_fill_pen,
							FlightWidth/2,-ns,901,
							gs_CircleRadius,360,4001

						ENDIF


						IF gs_StartEndStyle_m = STARTSYMB_STYLE2 THEN

							FOR kk=1 TO 2
								POLY2_B 6, 1+temp_FillStatus, gs_StartEndFillPen, gs_fill_pen,
									FlightWidth/2,-ns,1,
									FlightWidth/2+gs_CircleRadius,-ns,1,
									FlightWidth/2,-ns,901,
									0,90,4001,
									FlightWidth/2,-ns+gs_CircleRadius,0,
									FlightWidth/2,-ns,-1

								POLY2_B 6, 1, gs_StartEndFillPen, gs_fill_pen,
									FlightWidth/2,-ns,1,
									FlightWidth/2,-ns+gs_CircleRadius,1,
									FlightWidth/2,-ns,901,
									0,90,4001,
									FlightWidth/2-gs_CircleRadius,-ns,0,
									FlightWidth/2,-ns,-1
							ROT2 180
							ADD2 -FlightWidth,2*ns
							NEXT kk
							DEL 4

						ENDIF

						IF gs_StartEndStyle_m = STARTSYMB_STYLE3 THEN
							LINE2 FlightWidth/2+gs_StartWidth,-ns-gs_StartHeight,FlightWidth/2+gs_StartWidth,-ns+gs_StartHeight
							LINE2 FlightWidth/2-gs_StartWidth,-ns-gs_StartHeight,FlightWidth/2-gs_StartWidth,-ns+gs_StartHeight
						ENDIF


						!!! ********* Hotspots of StartEnd Symbol
						IF gs_StartEndStyle_m = STARTSYMB_STYLE1 OR gs_StartEndStyle_m = STARTSYMB_STYLE2 THEN

							StartSymbUNID=3000

							ADD2 FlightWidth/2,-ns
								FOR kk=1 to 4
									HOTSPOT2 0, 0, StartSymbUNID, gs_CircleRadius, 1+128		:StartSymbUNID=StartSymbUNID+1
									HOTSPOT2 -1, 0, StartSymbUNID, gs_CircleRadius, 3+128	:StartSymbUNID=StartSymbUNID+1
									HOTSPOT2 gs_CircleRadius, 0, StartSymbUNID, gs_CircleRadius,2	:StartSymbUNID=StartSymbUNID+1

									ROT2 90
								NEXT KK
								DEL 4
							DEL 1
						ENDIF

						IF gs_StartEndStyle_m = STARTSYMB_STYLE3 THEN

							StartSymbUNID=3100

							ADD2 FlightWidth/2,0
								FOR kk=1 to 2
									ADD2 0, -ns
										!!! Symbol Width/2
										HOTSPOT2 0, -gs_StartHeight, StartSymbUNID, gs_StartWidth, 1+128		:StartSymbUNID=StartSymbUNID+1
										HOTSPOT2 -1, -gs_StartHeight, StartSymbUNID, gs_StartWidth, 3	:StartSymbUNID=StartSymbUNID+1
										HOTSPOT2 gs_StartWidth, -gs_StartHeight, StartSymbUNID, gs_StartWidth,2	:StartSymbUNID=StartSymbUNID+1

										HOTSPOT2 0, gs_StartHeight, StartSymbUNID, gs_StartWidth, 1+128		:StartSymbUNID=StartSymbUNID+1
										HOTSPOT2 -1, gs_StartHeight, StartSymbUNID, gs_StartWidth, 3	:StartSymbUNID=StartSymbUNID+1
										HOTSPOT2 gs_StartWidth, gs_StartHeight, StartSymbUNID, gs_StartWidth,2	:StartSymbUNID=StartSymbUNID+1
									DEL 1

									ADD2 0, -ns
										!!! Symbol Height
										HOTSPOT2 gs_StartWidth, 0, StartSymbUNID, gs_StartHeight, 1+128		:StartSymbUNID=StartSymbUNID+1
										HOTSPOT2 gs_StartWidth, -1, StartSymbUNID, gs_StartHeight, 3	:StartSymbUNID=StartSymbUNID+1
										HOTSPOT2 gs_StartWidth, gs_StartHeight, StartSymbUNID, gs_StartHeight,2	:StartSymbUNID=StartSymbUNID+1

										HOTSPOT2 gs_StartWidth, 0, StartSymbUNID, gs_StartHeight, 1+128		:StartSymbUNID=StartSymbUNID+1
										HOTSPOT2 gs_StartWidth, 1, StartSymbUNID, gs_StartHeight, 3	:StartSymbUNID=StartSymbUNID+1
										HOTSPOT2 gs_StartWidth, -gs_StartHeight, StartSymbUNID, gs_StartHeight,2	:StartSymbUNID=StartSymbUNID+1
									DEL 1

								MUL2 -1,1
								NEXT kk
								DEL 2
							DEL 1
						ENDIF
					ENDIF

				DRAWINDEX 40
				Fill gs_ArrowFill



		!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
		!!! ********** ARROWHEAD HOTSPOTS ********** !!!

		ArrowUNID=4000
		IF gs_2DContourBelow=1 THEN HOTSPOT2 FlightWidth/2,-ns,ArrowUNID: ArrowUNID=ArrowUNID+1

		IF brk=0 OR brk=1 AND gs_2DContourAbove=1 THEN

			ArrowUNID=4100
			HOTSPOT2 FlightWidth/2,td*(rnu-1),ArrowUNID: ArrowUNID=ArrowUNID+1

			!!! ********** Hotspot editing of Height and Width of Arrowhead
			IF arrow_style_m = ARROW_STYLE_3 OR arrow_style_m = ARROW_STYLE_6 OR arrow_style_m = ARROW_STYLE_9 THEN

				ArrowUNID=4200
				ADD2 FlightWidth/2+ArrowDist,(rnu-1)*td
				ROT2 180
					HOTSPOT2 0,0,	ArrowUNID, gs_ArrowHeight, 1+128 : ArrowUNID=ArrowUNID+1
					HOTSPOT2 0,gs_ArrowHeight, ArrowUNID, gs_ArrowHeight, 2 : ArrowUNID=ArrowUNID+1
					HOTSPOT2 0,-1,	ArrowUNID, gs_ArrowHeight, 3: ArrowUNID=ArrowUNID+1
				DEL 2

				ADD2 FlightWidth/2-ArrowDist,(rnu-1)*td
				ROT2 180
					HOTSPOT2 0,0,	ArrowUNID, gs_ArrowHeight, 1+128 : ArrowUNID=ArrowUNID+1
					HOTSPOT2 0,gs_ArrowHeight, ArrowUNID, gs_ArrowHeight, 2 : ArrowUNID=ArrowUNID+1
					HOTSPOT2 0,-1,	ArrowUNID, gs_ArrowHeight, 3: ArrowUNID=ArrowUNID+1
				DEL 2

				ADD2 FlightWidth/2,(rnu-1)*td-gs_ArrowHeight
					HOTSPOT2 0,0,	ArrowUNID, gs_ArrowHalfWidth, 1+128 : ArrowUNID=ArrowUNID+1
					HOTSPOT2 gs_ArrowHalfWidth,0, ArrowUNID, gs_ArrowHalfWidth, 2 : ArrowUNID=ArrowUNID+1
					HOTSPOT2 -1,0,	ArrowUNID, gs_ArrowHalfWidth, 3: ArrowUNID=ArrowUNID+1
				DEL 1

				ADD2 FlightWidth/2,(rnu-1)*td-gs_ArrowHeight
					HOTSPOT2 0,0,	ArrowUNID, gs_ArrowHalfWidth, 1+128 : ArrowUNID=ArrowUNID+1
					HOTSPOT2 -gs_ArrowHalfWidth,0, ArrowUNID, gs_ArrowHalfWidth, 2 : ArrowUNID=ArrowUNID+1
					HOTSPOT2 01,0,	ArrowUNID, gs_ArrowHalfWidth, 3: ArrowUNID=ArrowUNID+1
				DEL 1
			ENDIF
		ENDIF


		IF brk=1 AND gs_2DContourBelow=1 THEN

			ArrowUNID=4300
			HOTSPOT2 FlightWidth/2, (NumStline)*td-ns,ArrowUNID: ArrowUNID=ArrowUNID+1

			!!! ********** Hotspot editing of Height and Width of Arrowhead
			IF arrow_style_m = ARROW_STYLE_3 OR arrow_style_m = ARROW_STYLE_6 OR arrow_style_m = ARROW_STYLE_9 THEN

				ArrowUNID=4400
				ADD2 FlightWidth/2+ArrowDist,(NumStline)*td-ns
				ROT2 180
					HOTSPOT2 0,0,	ArrowUNID, gs_ArrowHeight, 1+128 : ArrowUNID=ArrowUNID+1
					HOTSPOT2 0,gs_ArrowHeight, ArrowUNID, gs_ArrowHeight, 2 : ArrowUNID=ArrowUNID+1
					HOTSPOT2 0,-1,	ArrowUNID, gs_ArrowHeight, 3: ArrowUNID=ArrowUNID+1
				DEL 2

				ADD2 FlightWidth/2-ArrowDist,(NumStline)*td-ns
				ROT2 180
					HOTSPOT2 0,0,	ArrowUNID, gs_ArrowHeight, 1+128 : ArrowUNID=ArrowUNID+1
					HOTSPOT2 0,gs_ArrowHeight, ArrowUNID, gs_ArrowHeight, 2 : ArrowUNID=ArrowUNID+1
					HOTSPOT2 0,-1,	ArrowUNID, gs_ArrowHeight, 3: ArrowUNID=ArrowUNID+1
				DEL 2

				ADD2 FlightWidth/2,(NumStline)*td-ns-gs_ArrowHeight
					HOTSPOT2 0,0,	ArrowUNID, gs_ArrowHalfWidth, 1+128 : ArrowUNID=ArrowUNID+1
					HOTSPOT2 gs_ArrowHalfWidth,0, ArrowUNID, gs_ArrowHalfWidth, 2 : ArrowUNID=ArrowUNID+1
					HOTSPOT2 -1,0,	ArrowUNID, gs_ArrowHalfWidth, 3: ArrowUNID=ArrowUNID+1
				DEL 1

				ADD2 FlightWidth/2,(NumStline)*td-ns-gs_ArrowHeight
					HOTSPOT2 0,0,	ArrowUNID, gs_ArrowHalfWidth, 1+128 : ArrowUNID=ArrowUNID+1
					HOTSPOT2 -gs_ArrowHalfWidth,0, ArrowUNID, gs_ArrowHalfWidth, 2 : ArrowUNID=ArrowUNID+1
					HOTSPOT2 01,0,	ArrowUNID, gs_ArrowHalfWidth, 3: ArrowUNID=ArrowUNID+1
				DEL 1
			ENDIF
		ENDIF

	PEN gs_cont_pen
	FILL gs_fill_type
	DRAWINDEX 10
DEL 1
ENDIF



!===============================================================================
! --- Text / Up-Down Text / Numbering ---
!===============================================================================

! --- Oriented View ------------------------------ [

angleViewRot = 0
if bShowRiseAndRunText | walkingDirUPDN_m <> WALKDIRSTR_NONE | bShowNumbering then
	rrr = REQUEST ("View_Rotangle", "", angleViewRot)
endif
totalRotate = (SYMB_ROTANGLE + angleViewRot) MOD 360

! --- Oriented View ------------------------------ ]

! --- Define Font Style --------------------------------------------------------

define style "UPDN" fontType, UPDNfontsize, 5, 0		  	!!- UP/DN

define style "stepnum" fontType, gs_NumTextSize, 1, 0		!! - Numbering

! --- Rise and Run Text -------------------------------------------------------
DRAWINDEX 50

if bShowRiseAndRunText then
	call "Stair_RiseRun_Text" PARAMETERS ALL	totalRotate				= totalRotate,
												iRotateType 			= 1,
												iRiseRunTextPosition	= 1,
												flightWidth				= flw,
												nRisers					= rnu,
												treadHeight				= th,
												treadDepth				= td,
												RiseRunUNID				= 5000
endif

! --- Up and Down Text -------------------------------------------------------
iReadable = 0
if walkingDirUPDN_m <> WALKDIRSTR_NONE and walkl then
	set STYLE "UPDN"
	pen UPDNfontpen

	nTransUPDN = 0
	nTransHotspot = 0
	add2 flw/2+DirUPDN_X,DirUPDN_Y
	nTransUPDN = nTransUPDN + 1
	! Text Rotation - Readable / Parallel with Walking Line / Align with Symbol
	! ----------------------------------------------------------------------
	if typeTextRotation_UpDn_m = 2 then									! Readable
		if (totalRotate > (gs_readable_angle + eps) & totalRotate < (gs_readable_angle + 180 + eps)) then
			rot2 180
			nTransUPDN = nTransUPDN + 1
		endif
	else
		if typeTextRotation_UpDn_m = 1 then								! Parallel with Walking Line
			if not(SYMB_MIRRORED) then
				iReadable = (totalRotate > (gs_readable_angle - 90 + eps) & totalRotate < (gs_readable_angle + 180 - 90 + eps))- not(totalRotate > (gs_readable_angle - 90 + eps) & totalRotate < (gs_readable_angle + 180 - 90 + eps))
			else
				iReadable = (totalRotate < (gs_readable_angle - 90 + eps) | totalRotate > (gs_readable_angle + 180 - 90 + eps))- not(totalRotate < (gs_readable_angle - 90 + eps) | totalRotate > (gs_readable_angle + 180 - 90 + eps))
			endif
			rot2 -90 * iReadable
			nTransUPDN = nTransUPDN + 1
		endif
	endif
	! ----------------------------------------------------------------------
	rot2 AngUPDN
	nTransUPDN = nTransUPDN + 1

	text2 0,0, walkingDirUPDN
	del nTransUPDN

	width	= STW (walkingDirUPDN)/1000*GLOB_SCALE
	rb		= width/2


	UpDownUNID=6000
	hotspot2 flw/2,				DirUPDN_Y,	UpDownUNID, DirUPDN_X, 1+128	: UpDownUNID=UpDownUNID+1
	hotspot2 flw/2-1,			DirUPDN_Y,	UpDownUNID, DirUPDN_X, 3		: UpDownUNID=UpDownUNID+1
	hotspot2 flw/2+DirUPDN_X,	DirUPDN_Y,	UpDownUNID, DirUPDN_X, 2		: UpDownUNID=UpDownUNID+1

	hotspot2 flw/2+DirUPDN_X,	0,			UpDownUNID, DirUPDN_Y, 1+128	: UpDownUNID=UpDownUNID+1
	hotspot2 flw/2+DirUPDN_X,	-1,			UpDownUNID, DirUPDN_Y, 3		: UpDownUNID=UpDownUNID+1
	hotspot2 flw/2+DirUPDN_X,	DirUPDN_Y,	UpDownUNID, DirUPDN_Y, 2		: UpDownUNID=UpDownUNID+1

	ADD2 flw/2+DirUPDN_X,DirUPDN_Y
	nTransHotspot = nTransHotspot +1
	if typeTextRotation_UpDn_m = 1 then	! Parallel with Walking Line
		rot2 -90 * iReadable
		nTransHotspot = nTransHotspot +1
	endif
	hotspot2 0,					0,				UpDownUNID,	AngUPDN,6		: UpDownUNID=UpDownUNID+1
	hotspot2 rb,				0,				UpDownUNID,	AngUPDN,4+128	: UpDownUNID=UpDownUNID+1
	hotspot2 rb*cos(AngUPDN),	rb*sin(AngUPDN),UpDownUNID,	AngUPDN,5		: UpDownUNID=UpDownUNID+1
	del nTransHotspot
endif

! --- Numbering -------------------------------------------------------

if bShowNumbering & (gs_NumBelow | gs_NumAbove) then
	Add2 tempStringWidth, 0

	if gs_BreakHeight < ZZYZX then
		if DirNumText_x <= flw/2 then
			tempNumBelow = NumStline
			tempNumAbove = NumStline+1
		else
			tempNumBelow = NumStline+1
			tempNumAbove = NumStline+2
		endif
	else
		tempNumBelow = rnu
	endif

	if gs_NumBelow then
		if gs_NumAbove & gs_BreakHeight < ZZYZX then
			numBegin = 1
			numFinish = rnu
		else
			numBegin = 1
			numFinish = tempNumBelow
		endif
	else
		if gs_NumAbove & gs_BreakHeight < ZZYZX then
			numBegin = tempNumAbove
			numFinish = rnu
		endif
	endif

	set style "stepnum"
	pen gs_NumTextPen
	rrrr = REQUEST ("Height_of_style", "stepnum", strHeight)
	strHeight = strHeight / 1000 * GLOB_SCALE
	nTextPos = 0
	nTextTransformations = 0

	add2 DirNumText_X, -td/2 + DirNumText_Y
	nTextPos = nTextPos + 1
	if not(gs_NumBelow) & gs_NumAbove then
		add2 0, (numBegin-1) * td
		nTextPos = nTextPos + 1
	endif
	for iNumStep = numBegin to numFinish
		add2 0, td
		nTextPos = nTextPos + 1
		! Text Rotation - Readable / Align with Symbol
		! ----------------------------------------------------------------------
		if typeTextRotation_Num_m = 2 then								! Readable
			if (totalRotate > (gs_readable_angle + eps) & totalRotate < (gs_readable_angle + 180 + eps)) then
				rot2 180
				strWidth = STW(str("%.0", iNumStep + nStartNumbering - 1)) / 1000 * GLOB_SCALE
				add2 -strWidth, strHeight
				nTextTransformations = 2
			endif
		endif
		! ----------------------------------------------------------------------

		text2 0,0,iNumStep + nStartNumbering - 1
		if nTextTransformations > 0 then del nTextTransformations
	next iNumStep
	del nTextPos

	if gs_NumBelow then
		NumUNID=7000
		HOTSPOT2 0,				DirNumText_Y, NumUNID, DirNumText_X, 1+128	:NumUNID=NumUNID+1
		HOTSPOT2 -1,			DirNumText_Y, NumUNID, DirNumText_X, 3		:NumUNID=NumUNID+1
		HOTSPOT2 DirNumText_X,	DirNumText_Y, NumUNID, DirNumText_X, 2		:NumUNID=NumUNID+1

		HOTSPOT2 DirNumText_X,	0,				NumUNID, DirNumText_Y, 1+128:NumUNID=NumUNID+1
		HOTSPOT2 DirNumText_X,	-1,				NumUNID, DirNumText_Y, 3	:NumUNID=NumUNID+1
		HOTSPOT2 DirNumText_X,	DirNumText_Y,	NumUNID, DirNumText_Y, 2	:NumUNID=NumUNID+1
	endif
	if gs_NumAbove then
		NumUNID=7100
		HOTSPOT2 0,				DirNumText_Y+(rnu)*td, NumUNID, DirNumText_X, 1+128		:NumUNID=NumUNID+1
		HOTSPOT2 -1,			DirNumText_Y+(rnu)*td, NumUNID, DirNumText_X, 3	:NumUNID=NumUNID+1
		HOTSPOT2 DirNumText_X,	DirNumText_Y+(rnu)*td, NumUNID, DirNumText_X,2	:NumUNID=NumUNID+1

		HOTSPOT2 DirNumText_X,	0+(rnu)*td,				NumUNID, DirNumText_Y, 1+128		:NumUNID=NumUNID+1
		HOTSPOT2 DirNumText_X,	-1+(rnu)*td,			NumUNID, DirNumText_Y, 3	:NumUNID=NumUNID+1
		HOTSPOT2 DirNumText_X,	DirNumText_Y+(rnu)*td,	NumUNID, DirNumText_Y,2	:NumUNID=NumUNID+1
	endif

	del 1
endif
DRAWINDEX 10

!===============================================================================
! --- Railings ---
!===============================================================================

_bShowRailIn2D = 1
if _bShowRailIn2D then
	angle_breakline=ATN(2*td/FlightWidth)

	bShowRailPart1	= 0
	bShowRailPart2	= 0
	breakLineW		= brkLineY
	breakLineDist	= 0

	drawindex 30
	fill gs_fill_type

	! --- Left Rail ----------------------------------------------------------------
	if rail_m = 3 | rail_m = 1 then		! Left, Both
		if bSameRails then
			leftRailType_m = rightRailType_m
		endif

		IF np_m = POSTPOS_LEFT or np_m = POSTPOS_BOTH THEN
			OverhangLBottom=0
			temp_npsLX=nps
			temp_npsLY=nps*tan(ang)

			IF ptl_m = POST_RECTANGULAR THEN
				temp_LengL2=bComplexRailLeft*pwl/2
				CutRailBottomL=pwl/2*tan(ang)
				temp_hrol=pwl/2		!! No Handrail Overhang if Newel Post=1
			ELSE
				temp_LengL2=bComplexRailLeft*pdl/2
				CutRailBottomL=pdl/2*tan(ang)
				temp_hrol=pdl/2		!! No Handrail Overhang if Newel Post=1
			ENDIF

			IF iBottomStepArrangement <> BSTEPARRANGE_NORMAL THEN
				temp_rnuL=rnu-3
				temp_btaLx=td-nps/2
				temp_btaLY=(td-nps/2)*tan(ang)
				temp_LengL1=nps/2
			ELSE
				temp_rnuL=rnu-2
				temp_btaLx=0
				temp_btaLY=0
				temp_LengL1=0
			ENDIF
		ELSE
			temp_npsLX=0
			temp_npsLY=0
			temp_rnuL=rnu-2
			temp_btaLx=0
			temp_btaLY=0
			temp_LengL1=0
		ENDIF

		!!! Railing Length in Vertical Orientation Method
		LRailLength=td*(temp_rnuL)+OverhangLBottom+OverhangLTop-temp_npsLX+temp_LengL1-temp_LengL2

		!!! Railing Length in Perpendicular Orientation Method
		atfogL=sqr((temp_rnuL)*(temp_rnuL)*(td*td+th*th))+(OverhangLBottom+OverhangLTop)/cos(ang)

		add2 0,-OverhangLBottom+temp_npsLX+temp_btaLX+temp_LengL2
		ADD2 st/2-roffl, 0
		ROT2 90

		if bCarriageLineExist then
			brLineDist	= (NumStline-1)*td-ns -(temp_npsLX+temp_btaLX-OverhangLBottom) - (roffl + st / 2 - handRailWidthL / 2) * TAN(angle_breakline)
		else
			brLineDist	= (NumStline-1)*td-ns -(temp_npsLX+temp_btaLX-OverhangLBottom) - (roffl - st / 2 - handRailWidthL / 2) * TAN(angle_breakline)
		endif

		PEN railPen
		SET LINE_TYPE railLineType

		if brk then
			if bShowRailOnFloorPlan then
				IF gs_2DContourBelow=1 THEN
					if bSymbolic2D then
						bShowRailOn1stRun		= 1
						bBreakRailLine			= 1
						brLineAngle				= angle_breakline
						bShowRailPart1			= gs_2DContourBelow
						breakLineDist			= brLineDist
						breakLineW				= brkLineY
						bRailAboveBreakLine		= 0
						gosub "left rail"
					else
						POLY2_b 5, 1+2+64, gs_fill_pen, gs_back_pen,
							-temp_hrol * bComplexRailLeft, handRailWidthL / 2, 1,
							-temp_hrol * bComplexRailLeft, -handRailWidthL / 2, 1,
							brLineDist - temp_hrol * bComplexRailLeft, -handRailWidthL / 2, 1,
							brLineDist - temp_hrol * bComplexRailLeft - handRailWidthL * TAN(angle_breakline), handRailWidthL / 2, 1,
							-temp_hrol * bComplexRailLeft, handRailWidthL / 2, -1
					ENDIF
				endif

				IF gs_2DContourAbove=1 and bShowRailAboveBreakLine THEN	!!IF No Contour above Break Line
					if bSymbolic2D then
						bShowRailOn1stRun		= 1
						bBreakRailLine			= 1
						brLineAngle				= angle_breakline
						bShowRailPart2			= gs_2DContourAbove
						breakLineDist			= brLineDist
						breakLineW				= brkLineY
						bRailAboveBreakLine		= 1
						gosub "left rail"
					else
						FILL temp_FillTypeAbove
						SET LINE_TYPE temp_line

						POLY2_b 5, 1+2+64, gs_fill_pen, temp_BackPen,
							brLineDist - temp_hrol * bComplexRailLeft - handRailWidthL * TAN(angle_breakline) + brkLineY, handRailWidthL / 2, 1,
							brLineDist - temp_hrol * bComplexRailLeft + brkLineY, -handRailWidthL / 2, 1,
							LRailLength + hrol * bComplexRailLeft, -handRailWidthL / 2, 1,
							LRailLength + hrol * bComplexRailLeft, handRailWidthL / 2, 1,
							brLineDist - temp_hrol * bComplexRailLeft - handRailWidthL * TAN(angle_breakline) + brkLineY, handRailWidthL / 2, 1
					ENDIF
				endif
			endif

			IF bShowRailAxis THEN
				line_type railAxisLineType
				pen gs_RailAxisPen
				IF gs_2DContourBelow=1 THEN LINE2 -temp_hrol * bComplexRailLeft, 0, brLineDist - temp_hrol * bComplexRailLeft - handRailWidthL / 2 * TAN(angle_breakline), 0
				IF gs_2DContourAbove=1 THEN	LINE2 brLineDist - temp_hrol * bComplexRailLeft - handRailWidthL / 2 * TAN(angle_breakline) + brkLineY, 0, LRailLength + hrol * bComplexRailLeft, 0
			ENDIF
		else
			if bShowRailOnFloorPlan then
				if bSymbolic2D then
					bShowRailOn1stRun		= 1
					bBreakRailLine			= 0
					bRailAboveBreakLine		= 0
					gosub "left rail"
				else
					poly2_b 5, 1+2+64, gs_fill_pen, gs_back_pen,
						-temp_hrol * bComplexRailLeftLeft, handRailWidthL / 2, 1,
						-temp_hrol * bComplexRailLeft, -handRailWidthL / 2, 1,
						LRailLength + hrol * bComplexRailLeft, -handRailWidthL / 2, 1,
						LRailLength + hrol * bComplexRailLeft, handRailWidthL / 2, 1,
						-temp_hrol * bComplexRailLeft, handRailWidthL / 2, -1
				endif
			endif

			if bShowRailAxis then
				line_type railAxisLineType
				pen gs_RailAxisPen
				line2 -temp_hrol * bComplexRailLeft, 0, LRailLength + hrol * bComplexRailLeft, 0
			endif
		endif

		del 3
	endif

	! --- Right Rail ---------------------------------------------------------------
	pen gs_cont_pen
	if rail_m = 2 | rail_m = 1 then		! Right, Both
		IF np_m = POSTPOS_RIGHT or np_m = POSTPOS_BOTH THEN
			OverhangRBottom=0
			temp_npsRX=nps
			temp_npsRY=nps*tan(ang)
			temp_hror=hror	!! Handrail Overhang if Newel Post=0

			IF ptr_m = POST_RECTANGULAR THEN
				temp_LengR2=bComplexRailRight*pwr/2
				CutRailBottomR=pwr/2*tan(ang)
				temp_hror=pwr/2		!! No Handrail Overhang if Newel Post=1
				ELSE
				temp_LengR2=bComplexRailRight*pdr/2
				CutRailBottomR=pdr/2*tan(ang)
				temp_hror=pdr/2		!! No Handrail Overhang if Newel Post=1
			ENDIF

			IF iBottomStepArrangement <> BSTEPARRANGE_NORMAL THEN
				temp_rnuR=rnu-3
				temp_btaRx=td-nps/2
				temp_btaRY=(td-nps/2)*tan(ang)
				temp_LengR1=nps/2
			ELSE
				temp_rnuR=rnu-2
				temp_btaRx=0
				temp_btaRY=0
				temp_LengR1=0
			ENDIF
		ELSE
			temp_npsRX=0
			temp_npsRY=0
			temp_rnuR=rnu-2
			temp_btaRx=0
			temp_btaRY=0
			temp_LengR1=0
			temp_LengR2=0
			temp_hror=hror	!! Handrail Overhang if Newel Post=0
		ENDIF

		!!! Railing Length in Vertical Orientation Method
		RRailLength=td*(temp_rnuR)+OverhangRBottom+OverhangRTop-temp_npsRX+temp_LengR1-temp_LengR2

		!!! Railing Length in Perpendicular Orientation Method
		atfogR=sqr((temp_rnuR)*(temp_rnuR)*(td*td+th*th))+(OverhangRBottom+OverhangRTop)/cos(ang)

		add2 0,-OverhangRBottom+temp_npsRX+temp_btaRX+temp_LengR2
		ADD2 flw-st/2+roffr, 0
		ROT2 90

		if bCarriageLineExist then
			brLineDist	= (NumStline+1)*td-ns -(temp_npsRX+temp_btaRX-OverhangRBottom) + (roffr + st / 2 + handRailWidthR / 2) * TAN(angle_breakline)
		else
			brLineDist	= (NumStline+1)*td-ns -(temp_npsRX+temp_btaRX-OverhangRBottom) + (roffr - st / 2 + handRailWidthR / 2) * TAN(angle_breakline)
		endif

		PEN railPen
		SET LINE_TYPE railLineType

		if brk then
			if bShowRailOnFloorPlan then
				IF gs_2DContourBelow=1 THEN
					if bSymbolic2D then
						bShowRailOn1stRun		= 1
						bBreakRailLine			= 1
						brLineAngle				= angle_breakline
						bShowRailPart1			= gs_2DContourBelow
						breakLineDist			= brLineDist
						breakLineW				= brkLineY
						bRailAboveBreakLine		= 0
						gosub "right rail"
					else
						POLY2_b 5, 1+2+64, gs_fill_pen, gs_back_pen,
							-temp_hror * bComplexRailRight, handRailWidthR / 2, 1,
							-temp_hror * bComplexRailRight, -handRailWidthR / 2, 1,
							brLineDist - temp_hror * bComplexRailRight, -handRailWidthR / 2, 1,
							brLineDist - temp_hror * bComplexRailRight - handRailWidthR * TAN(angle_breakline), handRailWidthR / 2, 1,
							-temp_hror * bComplexRailRight, handRailWidthR / 2, -1
					ENDIF
				endif

				IF gs_2DContourAbove=1 and bShowRailAboveBreakLine THEN	!!IF No Contour above Break Line
					if bSymbolic2D then
						bShowRailOn1stRun		= 1
						bBreakRailLine			= 1
						brLineAngle				= angle_breakline
						bShowRailPart2			= gs_2DContourAbove
						breakLineDist			= brLineDist
						breakLineW				= brkLineY
						bRailAboveBreakLine		= 1
						gosub "right rail"
					else
						FILL temp_FillTypeAbove
						SET LINE_TYPE temp_line

						POLY2_b 5, 1+2+64, gs_fill_pen, temp_BackPen,
							brLineDist - temp_hror * bComplexRailRight - handRailWidthR * TAN(angle_breakline) + brkLineY, handRailWidthR / 2, 1,
							brLineDist - temp_hror * bComplexRailRight + brkLineY, -handRailWidthR / 2, 1,
							RRailLength + hror * bComplexRailRight, -handRailWidthR / 2, 1,
							RRailLength + hror * bComplexRailRight, handRailWidthR / 2, 1,
							brLineDist - temp_hror * bComplexRailRight - handRailWidthR * TAN(angle_breakline) + brkLineY, handRailWidthR / 2, 1
					ENDIF
				endif
			endif

			IF bShowRailAxis THEN
				line_type railAxisLineType
				pen gs_RailAxisPen
				IF gs_2DContourBelow=1 THEN LINE2 -temp_hror * bComplexRailRight, 0, brLineDist - temp_hror * bComplexRailRight - handRailWidthR / 2 * TAN(angle_breakline), 0
				IF gs_2DContourAbove=1 THEN	LINE2 brLineDist - temp_hror * bComplexRailRight - handRailWidthR / 2 * TAN(angle_breakline) + brkLineY, 0, RRailLength + hror * bComplexRailRight, 0
			ENDIF
		else
			if bShowRailOnFloorPlan then
				if bSymbolic2D then
					bShowRailOn1stRun		= 1
					bBreakRailLine			= 0
					bRailAboveBreakLine		= 0
					gosub "right rail"
				else
					poly2_b 5, 1+2+64, gs_fill_pen, gs_back_pen,
						-temp_hror * bComplexRailRight, handRailWidthR / 2, 1,
						-temp_hror * bComplexRailRight, -handRailWidthR / 2, 1,
						RRailLength + hror * bComplexRailRight, -handRailWidthR / 2, 1,
						RRailLength + hror * bComplexRailRight, handRailWidthR / 2, 1,
						-temp_hror * bComplexRailRight, handRailWidthR / 2, -1
				endif
			endif

			if bShowRailAxis then
				line_type railAxisLineType
				pen gs_RailAxisPen
				line2 -temp_hror * bComplexRailRight, 0, RRailLength + hror * bComplexRailRight, 0
			endif
		endif

		del 3
	endif
endif

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!! *** HOTSPOT EDITING in 2D / RAILING AND FLIGHT *** !!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


!-- FLIGHT WIDTH ---------------------------------------------------

	FlightUNID=50
	HOTSPOT2 0,0,	FlightUNID, flw, 1+256 : FlightUNID=FlightUNID+1
	HOTSPOT2 flw,0, FlightUNID, flw, 2 : FlightUNID=FlightUNID+1
	HOTSPOT2 -1,0,	FlightUNID, flw, 3: FlightUNID=FlightUNID+1

	HOTSPOT2 0,(rnu-1)*td,	FlightUNID, flw, 1+256 : FlightUNID=FlightUNID+1
	HOTSPOT2 flw,(rnu-1)*td, FlightUNID, flw, 2 : FlightUNID=FlightUNID+1
	HOTSPOT2 -1,(rnu-1)*td,	FlightUNID, flw, 3 : FlightUNID=FlightUNID+1


!-- STRING WIDTH ---------------------------------------------------

	if bCarriageLineExist then
		IF gs_2DContourBelow=1 THEN

			FlightUNID=100

			HOTSPOT2 flw,	StringStartPointR,	FlightUNID, st, 1+128 : FlightUNID=FlightUNID+1
			HOTSPOT2 flw-st,StringStartPointR, FlightUNID, st, 2 : FlightUNID=FlightUNID+1
			HOTSPOT2 flw+1,	StringStartPointR,	FlightUNID, st, 3: FlightUNID=FlightUNID+1

			HOTSPOT2 0,		StringStartPointL,	FlightUNID, st, 1+128 : FlightUNID=FlightUNID+1
			HOTSPOT2 0+st,	StringStartPointL, FlightUNID, st, 2 : FlightUNID=FlightUNID+1
			HOTSPOT2 0-1,	StringStartPointL,	FlightUNID, st, 3: FlightUNID=FlightUNID+1
		ENDIF
		IF gs_2DContourAbove=1 THEN

			FlightUNID=150

			HOTSPOT2 flw,	(rnu-1)*td,	FlightUNID, st, 1+128 : FlightUNID=FlightUNID+1
			HOTSPOT2 flw-st,(rnu-1)*td, FlightUNID, st, 2 : FlightUNID=FlightUNID+1
			HOTSPOT2 flw+1,	(rnu-1)*td,	FlightUNID, st, 3: FlightUNID=FlightUNID+1

			HOTSPOT2 0,		(rnu-1)*td,	FlightUNID, st, 1+128 : FlightUNID=FlightUNID+1
			HOTSPOT2 0+st,	(rnu-1)*td, FlightUNID, st, 2 : FlightUNID=FlightUNID+1
			HOTSPOT2 0-1,	(rnu-1)*td,	FlightUNID, st, 3: FlightUNID=FlightUNID+1
		ENDIF
	ENDIF

!!! RAILING  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

if bShowRailOnFloorPlan then
	IF rail_m = RAILPOS_RIGHT or rail_m = RAILPOS_BOTH THEN

			IF gs_2DContourBelow=1 THEN

			RailUNID=1000

				!!! RAIL OFFSET
				HOTSPOT2 flw-st/2,			-OverhangRBottom+temp_npsRX+temp_btaRX+temp_LengR2-temp_hror * bComplexRailRight, RailUNID, roffr, 1+128 : RailUNID=RailUNID+1
				HOTSPOT2 flw-st/2+roffr,	-OverhangRBottom+temp_npsRX+temp_btaRX+temp_LengR2-temp_hror * bComplexRailRight, RailUNID, roffr, 2 : RailUNID=RailUNID+1
				HOTSPOT2 flw-st/2-1,		-OverhangRBottom+temp_npsRX+temp_btaRX+temp_LengR2-temp_hror * bComplexRailRight, RailUNID, roffr, 3 : RailUNID=RailUNID+1

				IF np_m = POSTPOS_NONE THEN
					!!! RAIL BOTTOM OVERHANG
					HOTSPOT2 flw-st/2+roffr,		0, RailUNID, OverhangRBottom, 1+128 : RailUNID=RailUNID+1
					HOTSPOT2 flw-st/2+roffr,		0+1, RailUNID, OverhangRBottom, 3 : RailUNID=RailUNID+1
					HOTSPOT2 flw-st/2+roffr,		0-OverhangRBottom, RailUNID, OverhangRBottom, 2 : RailUNID=RailUNID+1
				ENDIF
			ENDIF

			IF gs_2DContourAbove=1 THEN

			RailUNID=1050

				HOTSPOT2 flw-st/2,			(rnu-2)*td+OverhangRTop, RailUNID, roffr, 1+128 : RailUNID=RailUNID+1
				HOTSPOT2 flw-st/2+roffr,	(rnu-2)*td+OverhangRTop, RailUNID, roffr, 2 : RailUNID=RailUNID+1
				HOTSPOT2 flw-st/2-1,		(rnu-2)*td+OverhangRTop, RailUNID, roffr, 3 : RailUNID=RailUNID+1

				!!! RAIL TOP OVERHANG
				HOTSPOT2 flw-st/2+roffr,		td*(rnu-2), RailUNID, OverhangRTop, 1+128 : RailUNID=RailUNID+1
				HOTSPOT2 flw-st/2+roffr,		td*(rnu-2)-1, RailUNID, OverhangRTop, 3 : RailUNID=RailUNID+1
				HOTSPOT2 flw-st/2+roffr,		td*(rnu-2)+OverhangRTop, RailUNID, OverhangRTop, 2 : RailUNID=RailUNID+1
			ENDIF
	ENDIF

	IF rail_m = RAILPOS_LEFT or rail_m = RAILPOS_BOTH THEN
		if bSameRails then
			leftRailType_m = rightRailType_m
		endif

		IF bSameRails THEN
			IF gs_2DContourBelow=1 THEN

			RailUNID=1100

				!!! RAIL OFFSET
				HOTSPOT2 st/2,			-OverhangLBottom+temp_npsLX+temp_btaLX+temp_LengL2-temp_hrol * bComplexRailLeft, RailUNID, roffr, 1+128 : RailUNID=RailUNID+1
				HOTSPOT2 st/2-roffr,	-OverhangLBottom+temp_npsLX+temp_btaLX+temp_LengL2-temp_hrol * bComplexRailLeft, RailUNID, roffr, 2 : RailUNID=RailUNID+1
				HOTSPOT2 st/2+1,		-OverhangLBottom+temp_npsLX+temp_btaLX+temp_LengL2-temp_hrol * bComplexRailLeft, RailUNID, roffr, 3 : RailUNID=RailUNID+1

				IF np_m = POSTPOS_NONE THEN
					!!! RAIL BOTTOM OVERHANG
					HOTSPOT2 st/2-roffr,		0, RailUNID, OverhangRBottom, 1+128 : RailUNID=RailUNID+1
					HOTSPOT2 st/2-roffr,		0+1, RailUNID, OverhangRBottom, 3 : RailUNID=RailUNID+1
					HOTSPOT2 st/2-roffr,		0-OverhangRBottom, RailUNID, OverhangRBottom, 2 : RailUNID=RailUNID+1
				ENDIF
			ENDIF

			IF gs_2DContourAbove=1 THEN

			RailUNID=1150

				HOTSPOT2 st/2,			(rnu-2)*td+OverhangRTop, RailUNID, roffr, 1+128 : RailUNID=RailUNID+1
				HOTSPOT2 st/2-roffr,	(rnu-2)*td+OverhangRTop, RailUNID, roffr, 2 : RailUNID=RailUNID+1
				HOTSPOT2 st/2+1,		(rnu-2)*td+OverhangRTop, RailUNID, roffr, 3 : RailUNID=RailUNID+1

				!!! RAIL TOP OVERHANG
				HOTSPOT2 st/2-roffr,		td*(rnu-2), RailUNID, OverhangRTop, 1+128 : RailUNID=RailUNID+1
				HOTSPOT2 st/2-roffr,		td*(rnu-2)-1, RailUNID, OverhangRTop, 3 : RailUNID=RailUNID+1
				HOTSPOT2 st/2-roffr,		td*(rnu-2)+OverhangRTop, RailUNID, OverhangRTop, 2 : RailUNID=RailUNID+1
			ENDIF
		ELSE

			IF gs_2DContourBelow=1 THEN

			RailUNID=1200

				!!! RAIL OFFSET
				HOTSPOT2 st/2,			-OverhangLBottom+temp_npsLX+temp_btaLX+temp_LengL2-temp_hrol * bComplexRailLeft, RailUNID, roffl, 1+128 : RailUNID=RailUNID+1
				HOTSPOT2 st/2-roffl,	-OverhangLBottom+temp_npsLX+temp_btaLX+temp_LengL2-temp_hrol * bComplexRailLeft, RailUNID, roffl, 2 : RailUNID=RailUNID+1
				HOTSPOT2 st/2+1,		-OverhangLBottom+temp_npsLX+temp_btaLX+temp_LengL2-temp_hrol * bComplexRailLeft, RailUNID, roffl, 3 : RailUNID=RailUNID+1

				IF np_m = POSTPOS_NONE THEN
					!!! RAIL BOTTOM OVERHANG
					HOTSPOT2 st/2-roffl,		0, RailUNID, OverhangLBottom, 1+128 : RailUNID=RailUNID+1
					HOTSPOT2 st/2-roffl,		0+1, RailUNID, OverhangLBottom, 3 : RailUNID=RailUNID+1
					HOTSPOT2 -st/2-roffl,		0-OverhangLBottom, RailUNID, OverhangLBottom, 2 : RailUNID=RailUNID+1
				ENDIF
			ENDIF

			IF gs_2DContourAbove=1 THEN

			RailUNID=1250

				HOTSPOT2 st/2,			(rnu-2)*td+OverhangLTop, RailUNID, roffl, 1+128 : RailUNID=RailUNID+1
				HOTSPOT2 st/2-roffl,	(rnu-2)*td+OverhangLTop, RailUNID, roffl, 2 : RailUNID=RailUNID+1
				HOTSPOT2 st/2+1,		(rnu-2)*td+OverhangLTop, RailUNID, roffl, 3 : RailUNID=RailUNID+1

				!!! RAIL TOP OVERHANG
				HOTSPOT2 st/2-roffl,		td*(rnu-2), RailUNID, OverhangLTop, 1+128 : RailUNID=RailUNID+1
				HOTSPOT2 st/2-roffl,		td*(rnu-2)-1, RailUNID, OverhangLTop, 3 : RailUNID=RailUNID+1
				HOTSPOT2 st/2-roffl,		td*(rnu-2)+OverhangLTop, RailUNID, OverhangLTop, 2 : RailUNID=RailUNID+1
			ENDIF
		ENDIF
	ENDIF
endif

!================================================================================
end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end
!================================================================================

"left rail":

	! ---  Rail on 1st Run -----------------------------------------------------
	if bShowRailOn1stRun then
		lraSimple=LRailLength
		lraComplex=LRailLength
		additionXComplex=0
		additionZComplex=0
		hrovL=temp_hrol
		hrovR=hrol
		postNumber = npl
		side = SIDE_LEFT
		gosub "callRailsForStair"
	endif
return


"right rail":

	! ---  Rail on 1st Run -----------------------------------------------------
	if bShowRailOn1stRun then
		lraSimple=RRailLength
		lraComplex=RRailLength
		additionXComplex=0
		additionZComplex=0
		hrovL=temp_hror
		hrovR=hror
		postNumber = npr
		side = SIDE_RIGHT
		gosub "callRailsForStair"
	endif
return

"callRailsForStair":
! ------------------------------------------------------------------------------
!	lraSimple
!	lraComplex
!	additionXComplex
!	additionZComplex
!	hrovL: rail overhang start
!	hrovR: rail overhang end
!	postNumber:   number of posts
!	side: SIDE_LEFT or SIDE_RIGHT
! ==============================================================================
	ani = ang
	additionXComplex = additionXComplex
	additionZComplex = additionZComplex
	gosub "callRails"
return

! ==============================================================================
"callRails":
! ------------------------------------------------------------------------------
!	ani
!	additionXComplex
!	additionZComplex
!	dsComplex
!  ------------------
!	side: SIDE_LEFT or SIDE_RIGHT
!	lraSimple
!	lraComplex
!	hrovL: rail overhang start
!	hrovR: rail overhang end
!	postNumber:   number of posts
! ==============================================================================
	if side = SIDE_LEFT then
		railBarDepth	= bwl
		railBarDiam		= bdl
		railHeight		= hrl
		railBarThk		= fthl
		railFrameThk	= fthl
		railDist		= dsl
		railType_m		= leftRailType_m
		railPostDia		= pdl
		railPostWidth	= pwl
		railPostThk		= pthl
		railPostType	= ptl_m
		nBarsRail		= nbl
		bt_m			= btl_m
		railFramesWSide	= fswl
		railFramesWTop	= ftwl
		railFramesWBot	= fbwl
		railBarHeight	= bhl
		railBarFillThk	= bthl
		abdist			= abdistl
		railFrameMat	= fmatl
		railBaluFillMat	= bmatl
		railPostMat		= pmatl
		nbt				= nbtl
		railFillDist	= fdfl
		railPostBaseType= gs_PostBaseTypeL_m
		railDistFromHr	= sbhl
		railPostBaseOv	= gs_PostBaseOverhangL
		railHrailHeight	= hrhl
		handRailWidth	= handRailWidthL
		bComplexRail	= bComplexRailLeft
	else
		railBarDepth	= bwr
		railBarDiam		= bdr
		railHeight		= hrr
		railBarThk		= fthr
		railFrameThk	= fthr
		railDist		= dsr
		railType_m		= rightRailType_m
		railPostDia		= pdr
		railPostWidth	= pwr
		railPostThk		= pthr
		railPostType	= ptr_m
		nBarsRail		= nbr
		bt_m			= btr_m
		railFramesWSide	= fswr
		railFramesWTop	= ftwr
		railFramesWBot	= fbwr
		railBarHeight	= bhr
		railBarFillThk	= bthr
		abdist			= abdistr
		railFrameMat	= fmatr
		railBaluFillMat	= bmatr
		railPostMat		= pmatr
		nbt				= nbtr
		railFillDist	= fdfr
		railPostBaseType= gs_PostBaseTypeR_m
		railDistFromHr	= sbhr
		railPostBaseOv	= gs_PostBaseOverhangR
		railHrailHeight	= hrhr
		handRailWidth	= handRailWidthR
		bComplexRail	= bComplexRailRight
	endif

	add2 additionXComplex * bComplexRail, 0
	call "railSymbol2D_m" parameters all	cfs					= 1,
											bEnable2DPosts		= bComplexRail,
											ptyp_m				= 1,
											ani					= ani,
											rom_m				= 1,
											rmm_m				= 1,
											LengthSize			= 0,
											lra					= lraSimple * NOT(bComplexRail) + lraComplex * (bComplexRail),
											hr					= railHeight,
											hrPerp				= railHeight,
											ab					= 0,
											rb					= 0,
											ds					= railDist,
											gs_AngleL			= 90,
											gs_AngleR			= 90,
											iHandRailStyle		= 1,
											handRailDiameter	= handRailWidth,
											handRailWidth		= handRailWidth,
											hroL				= hrovL,
											hroR				= hrovR,
											np					= postNumber,
											pd					= railPostDia,
											pw					= railPostWidth,
											pth					= railPostThk,
											gs_cont_pen			= railPen,
											sa					= 0,
											bBreakRailLine		= bBreakRailLine,
											breakLineAngle		= brLineAngle,
											breakLineDist		= breakLineDist,
											breakLineWidth		= brkLineY,
											bRailAboveBreakLine	= bRailAboveBreakLine,
											bShowRailBelowBrL	= bShowRailPart1,
											bShowRailAboveBrL	= bShowRailPart2,
											bPostNoCalculation	= (railType_m = 10),
											pit_m				= 1,
											dp					= abdist,
											nbt					= nbt
	del 1

	bShowRailPart1			= 0
	bShowRailPart2			= 0

return

]]>
</Script_2D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_1D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
! const values for parameter: iFlightSectionType
FLIGHTSECTION_WITHOUT_SOFFIT = 1
FLIGHTSECTION_WITH_SOFFIT    = 2


! const values for parameter: iLineTypeAboveBreak
LINETYPEABOVEBREAK_INTERSECT = 1
LINETYPEABOVEBREAK_FULL      = 2


! const values for parameter: iBottomStepArrangement
BSTEPARRANGE_DSTEP    = 1
BSTEPARRANGE_BULLNOSE = 2
BSTEPARRANGE_SPLAYED  = 3
BSTEPARRANGE_NORMAL   = 4


! const values for parameter: ptl_m
POST_RECTANGULAR = 1
POST_ROUND       = 2


! const values for parameter: iLowerJunctionType
LOWERJUNCTION_GROUND_FLOOR     = 1
LOWERJUNCTION_FLOOR_OR_LANDING = 2
LOWERJUNCTION_STRAIGHT_END     = 3


! const values for parameter: arrow_style_m
ARROW_STYLE_1 = 1
ARROW_STYLE_2 = 2
ARROW_STYLE_3 = 3
ARROW_STYLE_4 = 4
ARROW_STYLE_5 = 5
ARROW_STYLE_6 = 6
ARROW_STYLE_7 = 7
ARROW_STYLE_8 = 8
ARROW_STYLE_9 = 9


! const values for parameter: breakline_style_m
BREAKLINE_STRAIGHT   = 1
BREAKLINE_ZIGZAG     = 2
BREAKLINE_ZIGZAG_CHI = 3


! const values for parameter: btr_m
BOARD_RECTANGULAR = 1
BOARD_ROUND       = 2


! const values for parameter: iCalculationMode
CALCMODE_NO_OF_RISERS = 1
CALCMODE_TREAD_HEIGHT = 2


! const values for parameter: iUpperJunctionType
UPPERJUNCTION_GROUND_FLOOR     = 1
UPPERJUNCTION_FLOOR_OR_LANDING = 2
UPPERJUNCTION_STRAIGHT_END     = 3


! const values for parameter: btl_m
BOARD_RECTANGULAR = 1
BOARD_ROUND       = 2


! const values for parameter: ptr_m
POST_RECTANGULAR = 1
POST_ROUND       = 2


! const values for parameter: btypl_m
BAR_RECTANGULAR = 1
BAR_ROUND       = 2


! const values for parameter: gs_PostBaseTypeL_m
POSTBASE_VERTICALSURF   = 1
POSTBASE_HORIZONTALSURF = 2


! const values for parameter: roml_m
RAILORIENT_VERTICAL      = 1
RAILORIENT_PERPENDICULAR = 2


! const values for parameter: romr_m
RAILORIENT_VERTICAL      = 1
RAILORIENT_PERPENDICULAR = 2


! const values for parameter: gs_PostBaseTypeR_m
POSTBASE_VERTICALSURF   = 1
POSTBASE_HORIZONTALSURF = 2

! Stair Straight Wood

EPS=0.0001

SIDE_LEFT				= 1
SIDE_RIGHT				= 2

dim stRiseRunText[7]
	stRiseRunText[1] = `Кол-во x Подступенок = Высота Марша`
	stRiseRunText[2] = `Кол-во Проступей/Подступенок @`
	stRiseRunText[3] = `Кол-во х Проступь х Подступенок`
	stRiseRunText[4] = `Кол-во х Подступенок х Проступь`
	stRiseRunText[5] = `Кол-во <текст подступенка> Подступенок / Проступь`
	stRiseRunText[6] = `Кол-во <текст подступенка> // Подступенок / Проступь`
	stRiseRunText[7] = `Специальный Текст`

dim stStartSymbolStyles[4]
	stStartSymbolStyles[1] = `Стиль 1`
	stStartSymbolStyles[2] = `Стиль 2`
	stStartSymbolStyles[3] = `Стиль 3`
	stStartSymbolStyles[4] = `Нет`

STARTSYMB_STYLE1	= 1
STARTSYMB_STYLE2	= 2
STARTSYMB_STYLE3	= 3
STARTSYMB_NONE		= 4

dim stWalkingDirUPDN[3]
	stWalkingDirUPDN[1] = `Нет`
	stWalkingDirUPDN[2] = `ВВЕРХ`
	stWalkingDirUPDN[3] = `ВНИЗ`

WALKDIRSTR_NONE			= 1
WALKDIRSTR_UP			= 2
WALKDIRSTR_DOWN			= 3

dim stRailPosition[4]
	stRailPosition[1] = `Оба`
	stRailPosition[2] = `Справа`
	stRailPosition[3] = `Слева`
	stRailPosition[4] = `Нет`

RAILPOS_BOTH	= 1
RAILPOS_RIGHT	= 2
RAILPOS_LEFT	= 3
RAILPOS_NONE	= 4

dim stBattenStyle[5]
	stBattenStyle[1] = `Нет`
	stBattenStyle[2] = `Выступ`
	stBattenStyle[3] = `Промежуточный`
	stBattenStyle[4] = `Проступь`
	stBattenStyle[5] = `Сплошная`

BATTEN_NONE		= 1
BATTEN_NOSING	= 2
BATTEN_INTERM	= 3
BATTEN_TREAD	= 4
BATTEN_FULL		= 5

dim stPostHeadStyle[3]
	stPostHeadStyle[1] = `Нет`
	stPostHeadStyle[2] = `Сфера`
	stPostHeadStyle[3] = `Пирамида`

POSTHEAD_NONE		= 1
POSTHEAD_SPHERE		= 2
POSTHEAD_PYRAMID	= 3

dim stPostPosition[4]
	stPostPosition[1] = `Оба`
	stPostPosition[2] = `Слева`
	stPostPosition[3] = `Справа`
	stPostPosition[4] = `Нет`

POSTPOS_BOTH	= 1
POSTPOS_LEFT	= 2
POSTPOS_RIGHT	= 3
POSTPOS_NONE	= 4

dim stDetlevel2D[2]
	stDetlevel2D[1] = `Зависит от Масштаба`
	stDetlevel2D[2] = `Специальный`

DET2D_SCALESENSITIVE	= 1
DET2D_CUSTOM			= 2

dim stDetlevel3D[3]
	stDetlevel3D[1] = `Детальный`
	stDetlevel3D[2] = `Простой`
	stDetlevel3D[3] = `Откл.`

! const values for parameter: gs_detlevel_3D_m
DET3D_OFF      = 0
DET3D_SIMPLE   = 1
DET3D_DETAILED = 2
DET3D_DRAFT    = 3

dim stRailTypes[12]
	stRailTypes[ 1] = `Балюстрада Ограждения`
	stRailTypes[ 2] = `Параллельные Прутья`
	stRailTypes[ 3] = `Простой Брусок`
	stRailTypes[ 4] = `Объемная Рама с Панелью`
	stRailTypes[ 5] = `Объемная Рама`
	stRailTypes[ 6] = `Панель Ограждения`
	stRailTypes[ 7] = `Стойки Ограждения с Балясинами`
	stRailTypes[ 8] = `Стойки с Леерами`
	stRailTypes[ 9] = `Стойки с Леерами 02`
	stRailTypes[10] = `Деревянная Балюстрада`
	stRailTypes[11] = `Стойки Ограждения с Брусками`
	stRailTypes[12] = `Как и Правое`

dim stShowCarriageValues[5]
	stShowCarriageValues[1]	= `Всегда`
	stShowCarriageValues[2]	= `До 1:20`
	stShowCarriageValues[3]	= `До 1:50`
	stShowCarriageValues[4]	= `До 1:100`
	stShowCarriageValues[5]	= `До 1:200`

RAIL_BALUSTRADE				= 1
RAIL_PARALLEL_BARS			= 2
RAIL_SIMPLE_BAR				= 3
RAIL_SOLID_FRAME_FILLED		= 4
RAIL_SOLID_FRAME			= 5
RAIL_SOLID					= 6
RAIL_POST_WITH_BALUSTERS	= 7
RAIL_WIRED					= 8
RAIL_WIRED02				= 9
RAIL_WOODEN_BALUSTRADE		= 10
RAIL_POST_WITH_BARS			= 11
RAIL_SAMERAILS				= 12

dim stPostSymbolType[5]
	stPostSymbolType[1] = `Тип 1`
	stPostSymbolType[2] = `Тип 2`
	stPostSymbolType[3] = `Тип 3`
	stPostSymbolType[4] = `Тип 4`
	stPostSymbolType[5] = `Нет`

RECTANGULAR					= 1
ROUND						= 2

! -------------- 2D Symbol variables --------------

! gs_SymbolType_m
SYMBOL_TYPE1	= 1
SYMBOL_TYPE2	= 2
SYMBOL_TYPE3	= 3
SYMBOL_TYPE4	= 4
SYMBOL_TYPE5	= 5
SYMBOL_TYPE6	= 6
SYMBOL_TYPE7	= 7
SYMBOL_TYPE8	= 8
SYMBOL_TYPE9	= 9
SYMBOL_TYPE10	= 10
SYMBOL_TYPE11	= 11
SYMBOL_TYPE12	= 12
SYMBOL_TYPE13	= 13
SYMBOL_TYPE14	= 14
SYMBOL_TYPE15	= 15
SYMBOL_TYPE16	= 16
SYMBOL_TYPE17	= 17
SYMBOL_TYPE18	= 18
SYMBOL_TYPE19	= 19
SYMBOL_TYPE20	= 20

dim stStairSymbolTypes[20]
	stStairSymbolTypes[ 1] = `Тип 1`
	stStairSymbolTypes[ 2] = `Тип 2`
	stStairSymbolTypes[ 3] = `Тип 3`
	stStairSymbolTypes[ 4] = `Тип 4`
	stStairSymbolTypes[ 5] = `Тип 5`
	stStairSymbolTypes[ 6] = `Тип 6`
	stStairSymbolTypes[ 7] = `Тип 7`
	stStairSymbolTypes[ 8] = `Тип 8`
	stStairSymbolTypes[ 9] = `Тип 9`
	stStairSymbolTypes[10] = `Тип 10`
	stStairSymbolTypes[11] = `Тип 11`
	stStairSymbolTypes[12] = `Тип 12`
	stStairSymbolTypes[13] = `Тип 13`
	stStairSymbolTypes[14] = `Тип 14`
	stStairSymbolTypes[15] = `Тип 15`
	stStairSymbolTypes[16] = `Тип 16`
	stStairSymbolTypes[17] = `Тип 17`
	stStairSymbolTypes[18] = `Тип 18`
	stStairSymbolTypes[19] = `Тип 19`
	stStairSymbolTypes[20] = `Тип 20`

! iSymbolGroup
SYMBOLGROUP_TYPE1	= 1
SYMBOLGROUP_TYPE2	= 2
SYMBOLGROUP_TYPE3	= 3
SYMBOLGROUP_TYPE4	= 4
SYMBOLGROUP_TYPE5	= 5
SYMBOLGROUP_TYPE6	= 6
SYMBOLGROUP_TYPE7	= 7
SYMBOLGROUP_TYPE8	= 8

dim stSymbolGroup[8]
	stSymbolGroup[1] = `Тип 1`
	stSymbolGroup[2] = `Тип 2`
	stSymbolGroup[3] = `Тип 3`
	stSymbolGroup[4] = `Тип 4`
	stSymbolGroup[5] = `Тип 5`
	stSymbolGroup[6] = `Тип 6`
	stSymbolGroup[7] = `Тип 7`
	stSymbolGroup[8] = `Тип 8`

dim	iEnabledSymbolTypes[8][3]
	iEnabledSymbolTypes[1][1] = 1
	iEnabledSymbolTypes[1][2] = 6
	iEnabledSymbolTypes[1][3] = 13

	iEnabledSymbolTypes[2][1] = 2
	iEnabledSymbolTypes[2][2] = 7
	iEnabledSymbolTypes[2][3] = 14

	iEnabledSymbolTypes[3][1] = 3
	iEnabledSymbolTypes[3][2] = 8
	iEnabledSymbolTypes[3][3] = 15

	iEnabledSymbolTypes[4][1] = 4
	iEnabledSymbolTypes[4][2] = 9
	iEnabledSymbolTypes[4][3] = 16

	iEnabledSymbolTypes[5][1] = 5
	iEnabledSymbolTypes[5][2] = 10
	iEnabledSymbolTypes[5][3] = 17

	iEnabledSymbolTypes[6][1] = 4
	iEnabledSymbolTypes[6][2] = 11
	iEnabledSymbolTypes[6][3] = 18

	iEnabledSymbolTypes[7][1] = 4
	iEnabledSymbolTypes[7][2] = 11
	iEnabledSymbolTypes[7][3] = 19

	iEnabledSymbolTypes[8][1] = 5
	iEnabledSymbolTypes[8][2] = 12
	iEnabledSymbolTypes[8][3] = 20


! iScaleType
SCALE_10		= 10
SCALE_20		= 20
SCALE_50		= 50
SCALE_100		= 100
SCALE_200		= 200
SCALE_500		= 500

SCALE_1_1		= 1
SCALE_1_4		= 4
SCALE_1_8		= 8
SCALE_1_16		= 16
SCALE_1_24		= 24
SCALE_1_48		= 48
SCALE_1_96		= 96
SCALE_1_192		= 192
SCALE_CUSTOM	= 999

dim	iScaleType[15]
	iScaleType[1]	= SCALE_10
	iScaleType[2]	= SCALE_20
	iScaleType[3]	= SCALE_50
	iScaleType[4]	= SCALE_100
	iScaleType[5]	= SCALE_200
	iScaleType[6]	= SCALE_500
	iScaleType[7]	= SCALE_1_1
	iScaleType[8]	= SCALE_1_4
	iScaleType[9]	= SCALE_1_8
	iScaleType[10]	= SCALE_1_16
	iScaleType[11]	= SCALE_1_24
	iScaleType[12]	= SCALE_1_48
	iScaleType[13]	= SCALE_1_96
	iScaleType[14]	= SCALE_1_192
	iScaleType[15]	= SCALE_CUSTOM

dim stScaleType[15]
	stScaleType[1]	= `1:10`
	stScaleType[2]	= `1:20`
	stScaleType[3]	= `1:50`
	stScaleType[4]	= `1:100`
	stScaleType[5]	= `1:200`
	stScaleType[6]	= `1:500`
	
	stScaleType[7]	= `1'=1'-0"`
	stScaleType[8]	= `3"=1'-0"`
	stScaleType[9]	= `1 1/2"=1'-0"`
	stScaleType[10]	= `3/4"=1'-0"`
	stScaleType[11]	= `1/2"=1'-0"`
	stScaleType[12]	= `1/4"=1'-0"`
	stScaleType[13]	= `1/8"=1'-0"`
	stScaleType[14]	= `1/16"=1'-0"`
	stScaleType[15]	= `Специальный Масштаб`

if iScaleChangeSM = SCALE_CUSTOM then
	_iScaleSM = gs_ScaleChangeSM
else
	_iScaleSM = iScaleChangeSM
endif
if iScaleChangeMD = SCALE_CUSTOM then
	_iScaleMD = gs_ScaleChangeMD
else
	_iScaleMD = iScaleChangeMD
endif

! -------------- End of 2D Symbol variables --------------

bEnableCarriageLine		= 1

if GLOB_SCRIPT_TYPE = 7 | GLOB_SCRIPT_TYPE = 8 then goto "MasterEnd"


ang=atn(th/td)	!!! Pitch ang of Stair
FlightWidth=flw-2*st


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


parameters cfs=1
rescs=res/2

shvert= sh/cos(atn(th/td))	!!Dim. of Vert. Projection of String
pdvert= pd*shvert/sh		!!Dim. of Vert. Projection of Pitch Line

if ad then
	if iCalculationMode = CALCMODE_TREAD_HEIGHT then			!Tread Height

		_rnu= INT(zzyzx/pth)

		IF FRA (zzyzx/pth) > 0.5 THEN
			_rnu = _rnu+1
		ENDIF

		_th = zzyzx/_rnu
!		_td = abs(thd - 2 * _th)

		IF 2*pth >=thd-0.1 then
		_td =0.1
		ELSE
		_td =(thd - 2 * _th)
		ENDIF

		parameters rnu=_rnu
		parameters th=_th
		parameters td=_td

		lock "rnu", "td", "th"
	else								    !No of Risers
		_th = zzyzx/rnu
		_pth= _th
		_td = abs(thd-2*_th)
		parameters th=_th, pth=_pth, td=_td

		lock "td", "th", "pth"
	endif
else
	lock "pth", "thd"
endif

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

if bSameRails then
!!!	depthTreadOut			= depthTreadIn
	roffl					= roffr
	hrl						= hrr
	dsl						= dsr
	fswl					= fswr
	fthl					= fthr
	ftwl					= ftwr
	fbwl					= fbwr
	bwl						= bwr
	bthl					= bthr
	abdistl					= abdistr
	pmatl					= pmatr
	fmatl					= fmatr
	bmatl					= bmatr
	bhl						= bhr
	nbl						= nbr
	btypl_m					= btypr_m
	bdl						= bdr
	fdfl					= fdfr
	hrtl_m					= hrtr_m
	hrdl					= hrdr
	hrwl					= hrwr
	hrhl					= hrhr
	hrol					= hror
	ptl_m					= ptr_m
	npl						= npr
	pdl						= pdr
	pwl						= pwr
	pthl					= pthr
	btl_m					= btr_m
	nbtl					= nbtr
	sbhl					= sbhr
	gs_PostBaseTypeL_m		= gs_PostBaseTypeR_m
	gs_PostBaseOverhangL	= gs_PostBaseOverhangR
	OverhangLBottom			= OverhangRBottom
	OverhangLTop			= OverhangRTop
	roml_m					= romr_m
	rmml_m					= romr_m
endif

bComplexRailRight		= (rightRailType_m > 6)
if bSameRails then
	bComplexRailLeft 	= (rightRailType_m > 6)
else
	bComplexRailLeft 	= (leftRailType_m > 6)
endif

if NOT(bComplexRailLeft) then
	handRailWidthL = fthl
else
	IF hrtl_m = 2 THEN
		handRailWidthL = hrdl
	ELSE
		handRailWidthL = hrwl
	ENDIF
endif
if NOT(bComplexRailRight) then
	handRailWidthR = fthr
else
	IF hrtr_m = 2 THEN
		handRailWidthR = hrdr
	ELSE
		handRailWidthR = hrwr
	ENDIF
endif

"MasterEnd":
]]>
</Script_1D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_PR SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_PR>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_UI SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[

bCustom2dDetlevel = (gs_detlevel_2D_m = DET2D_CUSTOM)

dim stStairUI[128]
	for i = 1 to 128
		stStairUI[i] = ""
	next i

	stStairUI[1] = `2D-детализация`
	stStairUI[2] = `Масштаб`
	stStairUI[3] = `Тип Маркера Разрыва`
	stStairUI[4] = `Видимые Конструкции`
	stStairUI[5] = `Штриховка Фона`
	stStairUI[6] = `Перо Линии`
	stStairUI[7] = `Тип Линии`
	stStairUI[8] = `Перо Штриховки`
	stStairUI[9] = `Перо Фона Штриховки`
	stStairUI[10] = `Невидимые Конструкции`
	stStairUI[11] = `Перо Линии Всхода`
	stStairUI[12] = `Тип Линии Всхода`
	stStairUI[13] = `Конец Линии Всхода`
	stStairUI[14] = `Начало Линии Всхода`
	stStairUI[15] = `Перо Штриховки (0 - нет)`
	stStairUI[16] = `Перо Штрих. Выше (0 - нет)`
	stStairUI[17] = `Тип Шрифта`
	stStairUI[18] = `Начать с`
	stStairUI[19] = `Формат`
	stStairUI[20] = `Размер Шрифта`
	stStairUI[21] = `Специальный Текст 1`
	stStairUI[22] = `Перо Текста`
	stStairUI[23] = `Специальный Текст 2`
	stStairUI[24] = `Текст Подъема и Спуска`
	stStairUI[25] = `Текст`
	stStairUI[26] = `Тип Символа Стойки`
	stStairUI[27] = `Тип Линии Стойки`
	stStairUI[28] = `Перо Линии Стойки`
	stStairUI[29] = `Линия Невидимой Тетивы`
	stStairUI[30] = `Перо Невидимой Тетивы`
	stStairUI[31] = `2D выше Собственного Этажа`
	stStairUI[32] = `Лестница`
	stStairUI[33] = `Ограждение`
	stStairUI[34] = `Основание`
	stStairUI[35] = `Панели Ограждения`
	stStairUI[36] = `Проступь`
	stStairUI[37] = `Обвязка`
	stStairUI[38] = `Подступенок`
	stStairUI[39] = `Стойка`
	stStairUI[40] = `Поручень`
	stStairUI[41] = `Штриховка выше Линии Разрыва`
	stStairUI[42] = `Показ Линии Всхода`
	stStairUI[43] = `Стрелка к Линии Разрыва`
	stStairUI[44] = `Показ Нумерации`
	stStairUI[45] = `Текст Подступенков/Проступей`
	stStairUI[46] = `Читаемый Текст`
	stStairUI[47] = `Показ Ограждения на Плане`
	stStairUI[48] = `Показ Осей Ограждения`
	stStairUI[49] = `Показ Тетивы на Плане Этажа`
	stStairUI[50] = `Символ Зависит от Этажа`
	stStairUI[51] = `Линия Разрыва`
	stStairUI[52] = `Показ 2D ниже Линии Разрыва`
	stStairUI[53] = `Показ 2D выше Линии Разрыва`
	stStairUI[54] = `Отбрасывание Теней`
	stStairUI[55] = `Единицы Измерения Рабочей Среды Проекта`
	stStairUI[56] = `Ориентация`
	stStairUI[57] = `Ориентация Текста в Символе`

	stStairUI[80] = `Показ Проступей`
	stStairUI[81] = `Линия Всхода выше Линии Разрыва`

	stStairUI[86] = `Описание`
	stStairUI[87] = `Текст Спуска`
	stStairUI[88] = `Тип Видимой Линии`
	stStairUI[89] = `Тип Невидимой Линии`
	stStairUI[90] = `Размер Символа`
	stStairUI[91] = `Текст Подступенка`
	stStairUI[92] = `мм`
	stStairUI[93] = `п.`

	stStairUI[94] = `Перо Контура`
	stStairUI[95] = `Тип Штриховки`
	stStairUI[96] = `Перо Штриховки`
	stStairUI[97] = `Перо Фона Штриховки`
	stStairUI[98] = `Подступенок`

	stStairUI[99] = `Показ Ограждения выше Линии Разрыва`
	stStairUI[100] = `2D-символ`
	stStairUI[101] = stPostSymbolType[1]
	stStairUI[102] = stPostSymbolType[2]
	stStairUI[103] = stPostSymbolType[3]
	stStairUI[104] = stPostSymbolType[4]
	stStairUI[105] = stPostSymbolType[5]

	stStairUI[106] = stDetlevel2D[1]
	stStairUI[107] = stDetlevel2D[2]

	stStairUI[108] = `Прямой`
	if bSimpleZigZag then
		stStairUI[109] = `Зигзаг CHI`
	else
		stStairUI[109] = `Зигзаг`
	endif

	stStairUI[110] = stWalkingDirUPDN[1]
	stStairUI[111] = stWalkingDirUPDN[2]
	stStairUI[112] = stWalkingDirUPDN[3]

	stStairUI[116] = `Выровнять по Символу`
	stStairUI[117] = `Параллельно Линии Всхода`
	stStairUI[118] = `Читаемый`

	stStairUI[119] = stRiseRunText[1]
	stStairUI[120] = stRiseRunText[2]
	stStairUI[121] = stRiseRunText[3]
	stStairUI[122] = stRiseRunText[4]
	stStairUI[123] = stRiseRunText[5]
	stStairUI[124] = stRiseRunText[6]
	stStairUI[125] = stRiseRunText[7]

	stStairUI[126] = `Ограждение Справа`
	stStairUI[127] = `Ограждение Слева`
	stStairUI[128] = `Показ Тетивы`

dim stRailTypesForUI[12]
	stRailTypesForUI[ 1] = `Балюстрада`
	stRailTypesForUI[ 2] = `Параллельные Прутья`
	stRailTypesForUI[ 3] = `Простой Брусок`
	stRailTypesForUI[ 4] = `Объемная Рама с Панелью`
	stRailTypesForUI[ 5] = `Объемная Рама`
	stRailTypesForUI[ 6] = `Панель`
	stRailTypesForUI[ 7] = `Стойки с Балясинами`
	stRailTypesForUI[ 8] = `Стойки с Прутьями`
	stRailTypesForUI[ 9] = `Лееры 02`
	stRailTypesForUI[10] = `Деревянная Балюстрада`
	stRailTypesForUI[11] = `Стойки с Брусками`
	stRailTypesForUI[12] = `Как и Правое`

dim stStairUITabNames[15]
	for i = 1 to 15
		stStairUITabNames[i] = ""
	next i

	stStairUITabNames[1] = `Типы 2D-символа`
	stStairUITabNames[2] = `Реквизиты 2D-символа`
	stStairUITabNames[4] = `Подъем и Спуск, Нумерация`
	stStairUITabNames[5] = `Ограждение и Тетива в Символе`
	stStairUITabNames[8] = `Тип Ограждения - Справа`
	stStairUITabNames[9] = `Тип Ограждения - Слева`
	stStairUITabNames[13] = `Спуск и Подъем`
	stStairUITabNames[15] = `Стили Стрелки и Начальной Точки`

call "ui_stairs" parameters gs_ui_current_page		= gs_ui_current_page,
! --- 2D symbol type ---
			gs_detlevel_2D_m		= gs_detlevel_2D_m,
			gs_ScaleChangeSM		= gs_ScaleChangeSM,
			iScaleChangeSM			= iScaleChangeSM,
			gs_ScaleChangeMD		= gs_ScaleChangeMD,
			iScaleChangeMD			= iScaleChangeMD,
			stScaleType				= stScaleType,
			bCustom2dDetlevel		= bCustom2dDetlevel,
			gs_SymbolType_m			= gs_SymbolType_m,
			iSymbolGroup			= iSymbolGroup,
! --- 2D symbol attributes ---
			bEnableBreakLineStyle	= 1,
			breakline_style_m = breakline_style_m,
			gs_cont_pen				= gs_cont_pen,
			gs_DashLinePen			= gs_DashLinePen,
			solid_line				= solid_line,
			dash_line				= dash_line,
			gs_fill_type			= gs_fill_type,
			gs_fill_pen				= gs_fill_pen,
			gs_back_pen				= gs_back_pen,
			gs_FillAbove			= gs_FillAbove,
! --- Walkline ---
			arrow_style_m = arrow_style_m,
			gs_StartEndStyle		= gs_StartEndStyle,
! --- Text Display ---
			fontType				= fontType,
			bShowNumbering			= bShowNumbering,
			bShowRiseAndRunText		= bShowRiseAndRunText,
			nStartNumbering			= nStartNumbering,
			gs_NumTextSize			= gs_NumTextSize,
			gs_text_size_pt_num 	= gs_text_size_pt_num,
			gs_NumTextPen			= gs_NumTextPen,
			gs_RiseRunText			= gs_RiseRunText,
			iRiseRunText			= iRiseRunText,
			gs_CustomText1			= gs_CustomText1,
			gs_CustomText2			= gs_CustomText2,
			gs_customText_rise		= gs_customText_rise,
			fontsize				= fontsize,
			gs_text_size_pt			= gs_text_size_pt,
			gs_text_pen				= gs_text_pen,
			walkingDirUPDN			= walkingDirUPDN,
			bEnableCustomDownText	= 0,
			UPDNfontsize			= UPDNfontsize,
			gs_text_size_pt_UpDn	= gs_text_size_pt_UpDn,
			UPDNfontpen				= UPDNfontpen,
			typeTextRotation_RiseRun 	= typeTextRotation_RiseRun,
			typeTextRotation_Num 		= typeTextRotation_Num,
			typeTextRotation_UpDn 		= typeTextRotation_UpDn,
			bEnableDescription		= 0,
! --- Rail & Carriage 2D ---
			bShowRailOnFloorPlan	= bShowRailOnFloorPlan,
			railLineType			= railLineType,
			railPen					= railPen,
			bShowRailAxis			= bShowRailAxis,
			railAxisLineType		= railAxisLineType,
			gs_RailAxisPen			= gs_RailAxisPen,
			bSymbolic2D				= bSymbolic2D,
			postSymbolType			= postSymbolType,
			iPostSymbolType			= iPostSymbolType,
			postLineType			= postLineType,
			postPen					= postPen,
			bEnableCarriageLine		= bEnableCarriageLine,
			bShowCarriage			= bShowCarriage,
			carriageLineType		= carriageLineType,
			carriagePen				= carriagePen,
! --- Rail Types ---
			bRightRail				= bRightRail,
			bLeftRail				= bLeftRail,
			leftRailType			= leftRailType,
			rightRailType			= rightRailType,
			leftRailType_m			= leftRailType_m,
			rightRailType_m			= rightRailType_m,
! --- String resources ---
			stStairUITabNames		= stStairUITabNames,
			stStairSymbolTypes		= stStairSymbolTypes,
			stSymbolGroup			= stSymbolGroup,
			stRailTypesForUI		= stRailTypesForUI,
			stRailTypes				= stRailTypes,
			stStairUI				= stStairUI,
			bEnableWired02Rail		= 1,
! --- Stair Type ---
			iStairType				= 12		! Stair Straight Wood

]]>
</Script_UI>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_VL SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
call "FM_types" parameters all
call "ui_stairs" parameters gs_ui_current_page	= gs_ui_current_page

! ---------- Length Unit ----------
w_units_form = ""
rrr					= request("Linear_dimension", "", w_units_form)
bLinearDimIsMetric	= (strstr(w_units_form, "m") > 0)


! ---------- 3D detail level ----------
values{2} "gs_detlevel_3D_m" 	DET3D_DETAILED,		stDetlevel3D[1],
								DET3D_SIMPLE,		stDetlevel3D[2],
								DET3D_OFF,			stDetlevel3D[3]

if gs_detlevel_3D_m = DET3D_SIMPLE then
	lock "gs_resol"
	hideparameter "gs_resol"
endif

if gs_detlevel_3D_m = DET3D_OFF then
	lock "gs_resol", "gs_shadow"
	hideparameter "gs_resol", "gs_shadow"
endif


!! ---------- 2D detail level ----------
values{2} "gs_detlevel_2D_m"	DET2D_SCALESENSITIVE,	stDetlevel2D[1],
								DET2D_CUSTOM,			stDetlevel2D[2]

!! ---------- Symbol Type ----------
if gs_detlevel_2D_m = DET2D_SCALESENSITIVE then
	values{2} "iSymbolGroup"	SYMBOLGROUP_TYPE1,	stSymbolGroup[1],
								SYMBOLGROUP_TYPE2,	stSymbolGroup[2],
								SYMBOLGROUP_TYPE3,	stSymbolGroup[3],
								SYMBOLGROUP_TYPE4,	stSymbolGroup[4],
								SYMBOLGROUP_TYPE5,	stSymbolGroup[5],
								SYMBOLGROUP_TYPE6,	stSymbolGroup[6],
								SYMBOLGROUP_TYPE7,	stSymbolGroup[7],
								SYMBOLGROUP_TYPE8,	stSymbolGroup[8]

	lock			"gs_SymbolType_m"
	hideparameter	"gs_SymbolType_m"


	!! ----------------- Simple to Middle Scale -----------------
	if bLinearDimIsMetric then
		_iEnableScaleSMTypes	= 2 + 4 + 8 + 16 + 32 + 64
	else
		_iEnableScaleSMTypes	= 128 + 256 + 512 + 1024 + 2048 + 4096 + 8192 + 16384
	endif

	dim _iEnableScaleSMTypeValueList[]
	dim _stEnableScaleSMTypeValueList[]
	j = 1
	for i = 1 to vardim1(iScaleType)
		if bittest(_iEnableScaleSMTypes, i) then
			_iEnableScaleSMTypeValueList[j] = iScaleType[i]
			_stEnableScaleSMTypeValueList[j] = stScaleType[i]
			j = j + 1
		endif
	next i
	_iEnableScaleSMTypeValueList[j] = iScaleType[15]
	_stEnableScaleSMTypeValueList[j] = stScaleType[15]
	values{2} "iScaleChangeSM" _iEnableScaleSMTypeValueList, _stEnableScaleSMTypeValueList
	if iScaleChangeSM = SCALE_CUSTOM then
		values "gs_ScaleChangeSM"	range (1,)
	else
		gs_ScaleChangeSM = iScaleChangeSM
		parameters	gs_ScaleChangeSM = gs_ScaleChangeSM

		lock			"gs_ScaleChangeSM"
		hideparameter	"gs_ScaleChangeSM"
	endif

	
	!! ----------------- Middle to Detailed Scale -----------------
	if bLinearDimIsMetric then
		_iEnableScaleMDTypes	= 2 + 4 + 8 + 16 + 32 + 64
	else
		_iEnableScaleMDTypes	= 128 + 256 + 512 + 1024 + 2048 + 4096 + 8192 + 16384
	endif

	dim _iEnableScaleMDTypeValueList[]
	dim _stEnableScaleMDTypeValueList[]
	j = 1
	for i = 1 to vardim1(iScaleType)
		if bittest(_iEnableScaleMDTypes, i) then
			if iScaleChangeSM = SCALE_CUSTOM then
				if gs_ScaleChangeSM > iScaleType[i] then
					_iEnableScaleMDTypeValueList[j] = iScaleType[i]
					_stEnableScaleMDTypeValueList[j] = stScaleType[i]
					j = j + 1
				else
					i = vardim1(iScaleType)
				endif
			else
				_iEnableScaleMDTypeValueList[j] = iScaleType[i]
				_stEnableScaleMDTypeValueList[j] = stScaleType[i]

				if gs_ScaleChangeSM = _iEnableScaleSMTypeValueList[j] then
					i = vardim1(iScaleType)
				else
					j = j + 1
				endif
			endif
		endif
	next i
	_iEnableScaleMDTypeValueList[j] = iScaleType[15]
	_stEnableScaleMDTypeValueList[j] = stScaleType[15]
	values{2} "iScaleChangeMD" _iEnableScaleMDTypeValueList, _stEnableScaleMDTypeValueList

	if iScaleChangeMD = SCALE_CUSTOM then
		values "gs_ScaleChangeMD"	range (, _iScaleSM)
	else
		gs_ScaleChangeMD = iScaleChangeMD
		parameters	gs_ScaleChangeMD = gs_ScaleChangeMD

		lock			"gs_ScaleChangeMD"
		hideparameter	"gs_ScaleChangeMD"
	endif
	if (gs_ScaleChangeMD >= gs_ScaleChangeSM)  then
		gs_ScaleChangeMD = gs_ScaleChangeSM - 1
		parameters	gs_ScaleChangeMD = gs_ScaleChangeMD
	endif
else
	values{2} "gs_SymbolType_m"	SYMBOL_TYPE1,	stStairSymbolTypes[1],
								SYMBOL_TYPE2,	stStairSymbolTypes[2],
								SYMBOL_TYPE3,	stStairSymbolTypes[3],
								SYMBOL_TYPE4,	stStairSymbolTypes[4],
								SYMBOL_TYPE5,	stStairSymbolTypes[5],
								SYMBOL_TYPE6,	stStairSymbolTypes[6],
								SYMBOL_TYPE7,	stStairSymbolTypes[7],
								SYMBOL_TYPE8,	stStairSymbolTypes[8],
								SYMBOL_TYPE9,	stStairSymbolTypes[9],
								SYMBOL_TYPE10,	stStairSymbolTypes[10],
								SYMBOL_TYPE11,	stStairSymbolTypes[11],
								SYMBOL_TYPE12,	stStairSymbolTypes[12],
								SYMBOL_TYPE13,	stStairSymbolTypes[13],
								SYMBOL_TYPE14,	stStairSymbolTypes[14],
								SYMBOL_TYPE15,	stStairSymbolTypes[15],
								SYMBOL_TYPE16,	stStairSymbolTypes[16],
								SYMBOL_TYPE17,	stStairSymbolTypes[17],
								SYMBOL_TYPE18,	stStairSymbolTypes[18],
								SYMBOL_TYPE19,	stStairSymbolTypes[19],
								SYMBOL_TYPE20,	stStairSymbolTypes[20]

	lock			"iSymbolGroup",
					"gs_ScaleChangeSM",
					"iScaleChangeSM",
					"gs_ScaleChangeMD",
					"iScaleChangeMD"
	hideparameter	"iSymbolGroup",
					"gs_ScaleChangeSM",
					"iScaleChangeSM",
					"gs_ScaleChangeMD",
					"iScaleChangeMD"
endif


!!! *** GENERAL FLIGHT PARAMETERS *** !!!
values{2} "iCalculationMode" 	CALCMODE_TREAD_HEIGHT, `Высота Ступени`,
								CALCMODE_NO_OF_RISERS, `Кол-во Подступенков`
values{2} "iBottomStepArrangement" 	BSTEPARRANGE_DSTEP, `С Выступом`,
									BSTEPARRANGE_BULLNOSE, `Закругленная`,
									BSTEPARRANGE_SPLAYED, `Скошенная`,
									BSTEPARRANGE_NORMAL, `Обычные`

if iBottomStepArrangement <> BSTEPARRANGE_NORMAL then
	values "np" stPostPosition[1], stPostPosition[2], stPostPosition[3]		! Both, Left, Right
	values "np_m" POSTPOS_BOTH, POSTPOS_LEFT, POSTPOS_RIGHT
	_valuesMax = 3
else
	values "np" stPostPosition		! Both, Left, Right, None
	values "np_m" POSTPOS_BOTH, POSTPOS_LEFT, POSTPOS_RIGHT, POSTPOS_NONE
	_valuesMax = vardim1(stPostPosition)
endif

if GLOB_MODPAR_NAME = "np" then
	np_m = 1
	for i = 1 to _valuesMax
		if np = stPostPosition[i] then
			np_m = i
			i = _valuesMax
		endif
	next i
	parameters np_m = np_m
else
	np_m = max(1, min(np_m, _valuesMax))
	np = stPostPosition[np_m]
	parameters np = np, np_m = np_m
endif


IF np_m = POSTPOS_NONE THEN
	values{2} "iLowerJunctionType" 	LOWERJUNCTION_GROUND_FLOOR, `Первый Этаж`,
									LOWERJUNCTION_FLOOR_OR_LANDING, `Пол или Площадка`,
									LOWERJUNCTION_STRAIGHT_END, `Прямой Конец`
	HIDEPARAMETER "matnp"
	ELSE
	values{2} "iLowerJunctionType" 	LOWERJUNCTION_GROUND_FLOOR, `Первый Этаж`
ENDIF

values{2} "iUpperJunctionType" 	UPPERJUNCTION_FLOOR_OR_LANDING, `Пол или Площадка`,
								UPPERJUNCTION_STRAIGHT_END, `Прямой Конец`
values{2} "iFlightSectionType" 	FLIGHTSECTION_WITHOUT_SOFFIT, `Брус по бокам`,
								FLIGHTSECTION_WITH_SOFFIT, `Брус по бокам с софитом`

values "bt" stBattenStyle		! None, Nosing, Intermediate, Tread, Full
values "bt_m" BATTEN_NONE, BATTEN_NOSING, BATTEN_INTERM, BATTEN_TREAD, BATTEN_FULL

if GLOB_MODPAR_NAME = "bt" then
	bt_m = 1
	for i = 1 to vardim1(stBattenStyle)
		if bt = stBattenStyle[i] then
			bt_m = i
			i = vardim1(stBattenStyle)
		endif
	next i
	parameters bt_m = bt_m
else
	bt_m = max(1, min(bt_m, vardim1(stBattenStyle)))
	bt = stBattenStyle[bt_m]
	parameters bt_m = bt_m, bt = bt
endif

IF bt_m = BATTEN_NONE THEN HIDEPARAMETER "mat_riser", "penLineRiser", "typeFillRiser", "penFillRiser", "penBackFillRiser"

values "posthead" stPostHeadStyle			! None, Sphere, Pyramid
values "posthead_m" POSTHEAD_NONE, POSTHEAD_SPHERE, POSTHEAD_PYRAMID

if GLOB_MODPAR_NAME = "posthead" then
	posthead_m = 1		! None
	if posthead = stPostHeadStyle[2] then posthead_m = POSTHEAD_SPHERE
	if posthead = stPostHeadStyle[3] then posthead_m = POSTHEAD_PYRAMID
	parameters posthead_m = posthead_m
else
	posthead = stPostHeadStyle[1]
	if posthead_m = POSTHEAD_SPHERE		then posthead = stPostHeadStyle[2]
	if posthead_m = POSTHEAD_PYRAMID	then posthead = stPostHeadStyle[3]
	parameters posthead = posthead
endif


values{2} "gs_PostBaseTypeR_m" 	POSTBASE_VERTICALSURF, `Соединение с Вертикальной Поверхностью`,
								POSTBASE_HORIZONTALSURF, `Соединение с Горизонтальной Поверхностью`
values{2} "gs_PostBaseTypeL_m" 	POSTBASE_VERTICALSURF, `Соединение с Вертикальной Поверхностью`,
								POSTBASE_HORIZONTALSURF, `Соединение с Горизонтальной Поверхностью`


! ---------- Rise and Run Text ----------

values "gs_RiseRunText" stRiseRunText
values "iRiseRunText" 1, 2, 3, 4, 5, 6, 99

if GLOB_MODPAR_NAME = "gs_RiseRunText" then
	for i = 1 to vardim1(stRiseRunText)
	   if gs_RiseRunText = stRiseRunText[i]	then iRiseRunText = i
	next i
	if gs_RiseRunText = stRiseRunText[7]	then iRiseRunText = 99
	parameters iRiseRunText = iRiseRunText
else
	if iRiseRunText = 99 then
		gs_RiseRunText = stRiseRunText[7]
	else
		gs_RiseRunText = stRiseRunText[max(1, min(iRiseRunText, vardim1(stRiseRunText)) )]
	endif
	parameters gs_RiseRunText = gs_RiseRunText
endif

values "typeTextRotation_RiseRun" `Читаемый`,`Выровнять по Символу`
values "typeTextRotation_RiseRun_m" 2, 0

if GLOB_MODPAR_NAME = "typeTextRotation_RiseRun" then
	if typeTextRotation_RiseRun = `Читаемый`			then typeTextRotation_RiseRun_m = 2
	if typeTextRotation_RiseRun = `Выровнять по Символу`	then typeTextRotation_RiseRun_m = 0
	parameters typeTextRotation_RiseRun_m = typeTextRotation_RiseRun_m
else
	if typeTextRotation_RiseRun_m = 2					then typeTextRotation_RiseRun = `Читаемый`
	if typeTextRotation_RiseRun_m = 0					then typeTextRotation_RiseRun = `Выровнять по Символу`
	parameters typeTextRotation_RiseRun = typeTextRotation_RiseRun
endif

if not(bShowRiseAndRunText) then
	lock			"gs_RiseRunText","gs_CustomText1", "gs_CustomText2", "gs_customText_rise",
					"fontsize","gs_text_size_pt", "typeTextRotation_RiseRun","gs_text_pen","bUseACLinearUnit"
	hideparameter	"gs_RiseRunText","gs_CustomText1", "gs_CustomText2", "gs_customText_rise",
					"fontsize","gs_text_size_pt", "typeTextRotation_RiseRun","gs_text_pen","bUseACLinearUnit"
endif

if iRiseRunText <> 99 then
	lock 	"gs_CustomText1","gs_CustomText2"
	hideparameter 	"gs_CustomText1","gs_CustomText2"
endif

if iRiseRunText <> 5 & iRiseRunText <> 6 then
	lock "gs_customText_rise"
	hideparameter "gs_customText_rise"
endif

if iRiseRunText = 99 then		! Custom
	if bLinearDimIsMetric then hideparameter	"gs_CustomText2"
endif

! ---------- Numbering ----------

values "typeTextRotation_Num" `Читаемый`,`Выровнять по Символу`
values "typeTextRotation_Num_m" 2, 0

if GLOB_MODPAR_NAME = "typeTextRotation_Num" then
	if typeTextRotation_Num = `Читаемый`			then typeTextRotation_Num_m = 2
	if typeTextRotation_Num = `Выровнять по Символу`	then typeTextRotation_Num_m = 0
	parameters typeTextRotation_Num_m = typeTextRotation_Num_m
else
	if typeTextRotation_Num_m = 2					then typeTextRotation_Num = `Читаемый`
	if typeTextRotation_Num_m = 0					then typeTextRotation_Num = `Выровнять по Символу`
	parameters typeTextRotation_Num= typeTextRotation_Num
endif

if not(bShowNumbering) then
	 lock			"nStartNumbering","gs_NumTextSize", "gs_text_size_pt_num", "gs_NumTextPen","gs_NumBelow","gs_NumAbove", "typeTextRotation_Num"
	 hideparameter	"nStartNumbering","gs_NumTextSize", "gs_text_size_pt_num", "gs_NumTextPen","gs_NumBelow","gs_NumAbove", "typeTextRotation_Num"
endif

! ---------- UP and Down ----------
values "walkingDirUPDN" stWalkingDirUPDN		! None, UP, DOWN
values "walkingDirUPDN_m" WALKDIRSTR_NONE, WALKDIRSTR_UP, WALKDIRSTR_DOWN

if GLOB_MODPAR_NAME = "walkingDirUPDN" then
	walkingDirUPDN_m = 1
	for i = 1 to vardim1(stWalkingDirUPDN)
		if walkingDirUPDN = stWalkingDirUPDN[i] then
			walkingDirUPDN_m = i
			i = vardim1(stWalkingDirUPDN)
		endif
	next i
	parameters walkingDirUPDN_m = walkingDirUPDN_m
else
	walkingDirUPDN_m = max(1, min(walkingDirUPDN_m, vardim1(stWalkingDirUPDN)))
	walkingDirUPDN = stWalkingDirUPDN[walkingDirUPDN_m]
	parameters	walkingDirUPDN_m	= walkingDirUPDN_m,
				walkingDirUPDN		= walkingDirUPDN
endif

values "typeTextRotation_UpDn" `Читаемый`,`Параллельно Линии Всхода`,`Выровнять по Символу`
values "typeTextRotation_UpDn_m" 2, 1, 0

if GLOB_MODPAR_NAME = "typeTextRotation_UpDn" then
	if typeTextRotation_UpDn = `Читаемый`					then typeTextRotation_UpDn_m = 2
	if typeTextRotation_UpDn = `Параллельно Линии Всхода`	then typeTextRotation_UpDn_m = 1
	if typeTextRotation_UpDn = `Выровнять по Символу`			then typeTextRotation_UpDn_m = 0
	parameters typeTextRotation_UpDn_m = typeTextRotation_UpDn_m
else
	if typeTextRotation_UpDn_m = 2					then typeTextRotation_UpDn = `Читаемый`
	if typeTextRotation_UpDn_m = 1					then typeTextRotation_UpDn = `Параллельно Линии Всхода`
	if typeTextRotation_UpDn_m = 0					then typeTextRotation_UpDn = `Выровнять по Символу`
	parameters typeTextRotation_UpDn = typeTextRotation_UpDn
endif

if walkingDirUPDN_m = WALKDIRSTR_NONE  then
	 lock			"UPDNfontsize", "gs_text_size_pt_UpDn", "UPDNfontpen","AngUPDN", "typeTextRotation_UpDn"
	 HIDEPARAMETER	"UPDNfontsize", "gs_text_size_pt_UpDn", "UPDNfontpen","AngUPDN", "typeTextRotation_UpDn"
endif

values{2} "iLineTypeAboveBreak" 	LINETYPEABOVEBREAK_INTERSECT, `Штриховая`,
									LINETYPEABOVEBREAK_FULL, `Сплошная`
values{2} "arrow_style_m" 	ARROW_STYLE_1, `Стиль 1`,
							ARROW_STYLE_2, `Стиль 2`,
							ARROW_STYLE_3, `Стиль 3`,
							ARROW_STYLE_4, `Стиль 4`,
							ARROW_STYLE_5, `Стиль 5`,
							ARROW_STYLE_6, `Стиль 6`,
							ARROW_STYLE_7, `Стиль 7`,
							ARROW_STYLE_8, `Стиль 8`,
							ARROW_STYLE_9, `Стиль 9`

values "gs_StartEndStyle" stStartSymbolStyles		! Style 1, Style 2, Style 3, None
values "gs_StartEndStyle_m" STARTSYMB_STYLE1, STARTSYMB_STYLE2, STARTSYMB_STYLE3, STARTSYMB_NONE

if GLOB_MODPAR_NAME = "gs_StartEndStyle" then
	gs_StartEndStyle_m = 1
	for i = 1 to vardim1(stStartSymbolStyles)
		if gs_StartEndStyle = stStartSymbolStyles[i] then
			gs_StartEndStyle_m = i
			i = vardim1(stStartSymbolStyles)
		endif
	next i
	parameters gs_StartEndStyle_m = gs_StartEndStyle_m
else
	gs_StartEndStyle_m = max(1, min(gs_StartEndStyle_m, vardim1(stStartSymbolStyles)))
	gs_StartEndStyle = stStartSymbolStyles[gs_StartEndStyle_m]
	parameters	gs_StartEndStyle_m	= gs_StartEndStyle_m,
				gs_StartEndStyle	= gs_StartEndStyle
endif

if bSimpleZigZag then
	values{2} "breakline_style_m" 	BREAKLINE_STRAIGHT, `Прямой`,
								BREAKLINE_ZIGZAG_CHI, `Зигзаг CHI`
else
	values{2} "breakline_style_m" 	BREAKLINE_STRAIGHT, `Прямой`,
								BREAKLINE_ZIGZAG, `Зигзаг`
endif

!!!!!! ***  RANGE OF PARAMETERS  *** !!!!!!!

VALUES "flw" RANGE (0,)
VALUES "st" RANGE (0, flw/2)
VALUES "sh" RANGE (0, )

IF iBottomStepArrangement = BSTEPARRANGE_NORMAL THEN
	VALUES "rnu" RANGE [2,)
	ELSE
	VALUES "rnu" RANGE [3,)
ENDIF

VALUES "pth"	RANGE [0.05,)
VALUES "th"		RANGE [0.05,)
VALUES "td" 	RANGE [0.1, )
VALUES "thd" 	RANGE [0.2, )
VALUES "LowerEndHgt"  	RANGE [0,)
VALUES "UpperEndHgt" 	RANGE [0,pdvert]
VALUES "lst" 	RANGE (0,shvert-pdvert]
VALUES "rt" 	RANGE (0,)
VALUES "tdo" 	RANGE [0,)
VALUES "ns" 	RANGE [0,)
VALUES "nps" 	RANGE (0,)
VALUES "nph" 	RANGE (0,)
VALUES "softh" 	RANGE (0,)
VALUES "res" 	RANGE[3,)
VALUES "rescs" 	RANGE[3,)

VALUES "gs_BreakHeight" 	RANGE [2*th,)
VALUES "gs_ArrowHeight" 	RANGE (0,)
VALUES "gs_ArrowHalfWidth" 	RANGE (0,)
VALUES "gs_CircleRadius" 	RANGE (0,)
VALUES "gs_StartWidth" 		RANGE (0,)
VALUES "gs_StartHeight" 	RANGE (0,)
VALUES "brkLineY"	RANGE (0,td]
VALUES "sbhr" RANGE [0.01+(pthr-0.004),)
VALUES "sbhl" RANGE [0.01+(pthl-0.004),)
VALUES "sbhPerpR" RANGE [0.01+(pthr-0.004)/cos(ang),)
VALUES "sbhPerpL" RANGE [0.01+(pthl-0.004)/cos(ang),)
VALUES "gs_PostBaseOverhangR" RANGE [0,)
VALUES "gs_PostBaseOverhangL" RANGE [0,)

VALUES "fontsize" RANGE (0,)
VALUES "gs_NumTextSize" RANGE (0,)
VALUES "UPDNfontsize" RANGE (0,)

if GLOB_MODPAR_NAME = "hrtr" then
	hrtr_m=1
	if hrtr=`Круглые` 	then hrtr_m=2
	parameters hrtr_m = hrtr_m
else
	if hrtr_m=1			then hrtr=`Прямоугольные`
	if hrtr_m=2			then hrtr=`Круглые`
	parameters hrtr = hrtr
endif

if GLOB_MODPAR_NAME = "hrtl" then
	hrtl_m = 1		! Rectangular
	if hrtl=`Круглые` 	then hrtl_m=2
	parameters hrtl_m = hrtl_m
else
	if hrtl_m=1			then hrtl=`Прямоугольные`
	if hrtl_m=2			then hrtl=`Круглые`
	parameters hrtl = hrtl
endif

IF np_m = POSTPOS_BOTH THEN lock	"iLowerJunctionType",
									"LowerEndHgt"

IF iFlightSectionType <> FLIGHTSECTION_WITH_SOFFIT THEN
	LOCK "softh"
	HIDEPARAMETER "matsoff", "penLineSoffit", "typeFillSoffit", "penFillSoffit", "penBackFillSoffit"
ENDIF

!!! *** RAILING PARAMETERS *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

values "rail_m" 1, 2, 3, 4
if GLOB_MODPAR_NAME = "bRightRail" or GLOB_MODPAR_NAME = "bLeftRail" then
	if bRightRail then
		if bLeftRail then
			rail_m = RAILPOS_BOTH
		else
			rail_m = RAILPOS_RIGHT
		endif
	else
		if bLeftRail then
			rail_m = RAILPOS_LEFT
		else
			rail_m = RAILPOS_NONE
		endif
	endif
	parameters rail_m = rail_m
else
	if rail_m = 1 then
		bRightRail	= 1
		bLeftRail	= 1
	endif
	if rail_m = 2 then
		bRightRail	= 1
		bLeftRail	= 0
	endif
	if rail_m = 3 then
		bRightRail	= 0
		bLeftRail	= 1
	endif
	if rail_m = 4 then
		bRightRail	= 0
		bLeftRail	= 0
	endif
	parameters bRightRail	= bRightRail
	parameters bLeftRail	= bLeftRail
endif

if NOT(bRightRail) then
	lock			"rightRailType"
	hideparameter	"rightRailType"
endif
if NOT(bLeftRail) then
	lock			"leftRailType"
	hideparameter	"leftRailType"
endif

values{2} "btypr_m" 	BAR_RECTANGULAR, `Прямоугольные`,
						BAR_ROUND, `Круглые`
values{2} "btypl_m" 	BAR_RECTANGULAR, `Прямоугольные`,
						BAR_ROUND, `Круглые`

VALUES "rightRailType" 	stRailTypes[1],
						stRailTypes[2],
						stRailTypes[3],
						stRailTypes[4],
						stRailTypes[5],
						stRailTypes[6],
						stRailTypes[7],
						stRailTypes[8],
						stRailTypes[9],
						stRailTypes[10],
						stRailTypes[11]

if GLOB_MODPAR_NAME = "rightRailType" then
	for i = 1 to vardim1(stRailTypes)
	   if rightRailType = stRailTypes[i]	then rightRailType_m = i
	next i
	parameters rightRailType_m = rightRailType_m
else
	parameters rightRailType = stRailTypes[rightRailType_m]
endif

if rail_m = RAILPOS_BOTH then		! Both
	VALUES "leftRailType" 	stRailTypes[12],
							stRailTypes[1],
							stRailTypes[2],
							stRailTypes[3],
							stRailTypes[4],
							stRailTypes[5],
							stRailTypes[6],
							stRailTypes[7],
							stRailTypes[8],
							stRailTypes[9],
							stRailTypes[10],
							stRailTypes[11]
else
	VALUES "leftRailType" 	stRailTypes[1],
							stRailTypes[2],
							stRailTypes[3],
							stRailTypes[4],
							stRailTypes[5],
							stRailTypes[6],
							stRailTypes[7],
							stRailTypes[8],
							stRailTypes[9],
							stRailTypes[10],
							stRailTypes[11]
endif
if GLOB_MODPAR_NAME = "leftRailType" then
	for i = 1 to vardim1(stRailTypes)
	   if leftRailType = stRailTypes[i]	then leftRailType_m = i
	next i
	parameters leftRailType_m = leftRailType_m
else
	parameters leftRailType = stRailTypes[leftRailType_m]
endif
bSameRails = (leftRailType_m = RAIL_SAMERAILS)
parameters bSameRails = bSameRails

if GLOB_MODPAR_NAME = "rightRailType" or GLOB_MODPAR_NAME = "rightRailType_m" then
	if rightRailType_m = RAIL_WIRED then
		bwr		= 0.005
		bthr	= 0.005
		bdr		= 0.005
	else
		bwr		= 0.025
		bthr	= 0.025
		bdr		= 0.05
	endif

	parameters bwr = bwr
	parameters bthr = bthr
	parameters bdr = bdr
endif

if GLOB_MODPAR_NAME = "leftRailType" or GLOB_MODPAR_NAME = "leftRailType_m" then
	if leftRailType_m = RAIL_WIRED then
		bwl		= 0.005
		bthl	= 0.005
		bdl		= 0.005
	else
		bwl		= 0.025
		bthl	= 0.025
		bdl		= 0.05
	endif

	parameters bwl = bwr
	parameters bthl = bthr
	parameters bdl = bdr
endif

! ==============================================================================
! Symbolic 2D
! ==============================================================================

values "postSymbolType" stPostSymbolType
values "iPostSymbolType" 1, 2, 3, 4, 0
if GLOB_MODPAR_NAME = "postSymbolType" then
	iPostSymbolType = 1
	if postSymbolType = stPostSymbolType[2] then iPostSymbolType = 2
	if postSymbolType = stPostSymbolType[3] then iPostSymbolType = 3
	if postSymbolType = stPostSymbolType[4] then iPostSymbolType = 4
	if postSymbolType = stPostSymbolType[5] then iPostSymbolType = 0
	parameters iPostSymbolType = iPostSymbolType
else
	postSymbolType = stPostSymbolType[1]
	if iPostSymbolType = 2 then postSymbolType = stPostSymbolType[2]
	if iPostSymbolType = 3 then postSymbolType = stPostSymbolType[3]
	if iPostSymbolType = 4 then postSymbolType = stPostSymbolType[4]
	if iPostSymbolType = 0 then postSymbolType = stPostSymbolType[5]
	parameters postSymbolType = postSymbolType
endif

if NOT(bShowRailOnFloorPlan) then
	lock			"railLineType",
					"railPen",
					"bSymbolic2D",
					"postSymbolType",
					"iPostSymbolType",
					"postLineType",
					"postPen",
					"bShowRailAboveBreakLine"
	hideparameter	"railLineType",
					"railPen",
					"bSymbolic2D",
					"postSymbolType",
					"iPostSymbolType",
					"postLineType",
					"postPen",
					"bShowRailAboveBreakLine"
endif
if NOT(iPostSymbolType) then
	lock			"postLineType",
					"postPen"
	hideparameter	"postLineType",
					"postPen"
endif
if NOT(bSymbolic2D) then
	lock			"postSymbolType",
					"iPostSymbolType",
					"postLineType",
					"postPen"
	hideparameter	"postSymbolType",
					"iPostSymbolType",
					"postLineType",
					"postPen"
endif
if not(bShowRailAxis) then
	lock 			"railAxisLineType",
					"gs_RailAxisPen"
	hideparameter	"railAxisLineType",
					"gs_RailAxisPen"
endif
if	gs_detlevel_2D_m = DET2D_CUSTOM &\
	(gs_SymbolType_m = 3 |\
	gs_SymbolType_m = 8 |\
	gs_SymbolType_m = 15) then
	lock			"bShowRailAboveBreakLine"
	hideparameter	"bShowRailAboveBreakLine"
endif
if NOT(bShowCarriage) then
	lock			"iShowCarriageUpTo",
					"stShowCarriageUpTo",
					"carriageLineType",
					"carriagePen"
	hideparameter	"stShowCarriageUpTo",
					"carriageLineType",
					"carriagePen"
endif
if NOT(bEnableCarriageLine) then
	lock			"bShowCarriage",
					"iShowCarriageUpTo",
					"stShowCarriageUpTo",
					"carriageLineType",
					"carriagePen"
	hideparameter	"bShowCarriage",
					"stShowCarriageUpTo",
					"carriageLineType",
					"carriagePen"
endif

values "stShowCarriageUpTo" stShowCarriageValues
values "iShowCarriageUpTo" 1, 20, 50, 100, 200

if GLOB_MODPAR_NAME = "stShowCarriageUpTo" then
	iShowCarriageUpTo = 1
	if stShowCarriageUpTo = stShowCarriageValues[2]	then iShowCarriageUpTo = 20
	if stShowCarriageUpTo = stShowCarriageValues[3]	then iShowCarriageUpTo = 50
	if stShowCarriageUpTo = stShowCarriageValues[4]	then iShowCarriageUpTo = 100
	if stShowCarriageUpTo = stShowCarriageValues[5]	then iShowCarriageUpTo = 200
	parameters iShowCarriageUpTo = iShowCarriageUpTo
else
	stShowCarriageUpTo = stShowCarriageValues[1]
	if iShowCarriageUpTo = 20	then stShowCarriageUpTo = stShowCarriageValues[2]
	if iShowCarriageUpTo = 50	then stShowCarriageUpTo = stShowCarriageValues[3]
	if iShowCarriageUpTo = 100	then stShowCarriageUpTo = stShowCarriageValues[4]
	if iShowCarriageUpTo = 200	then stShowCarriageUpTo = stShowCarriageValues[5]
	parameters stShowCarriageUpTo = stShowCarriageUpTo
endif

!!! *** HIDE RAILING PARAMETERS *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

LOCK "ggr","sgr","ggl","sgl"

IF leftRailType_m = RAIL_BALUSTRADE THEN
	hideparameter	"fdfl",
				"bhl",
				"nbl",
				"btypl_m",
				"bdl",
				"hrtl",
				"hrdl"
	hideparameter	"hrwl",
				"hrhl",
				"hrol",
				"ptl_m",
				"npl"
	hideparameter	"nbtl",
				"pdl",
				"pwl",
				"pthl",
				"sbhl",
				"btl_m"
	hideparameter	"pmatl",
				"gs_PostBaseTypeL_m",
				"gs_PostBaseOverhangL"
ENDIF

IF leftRailType_m = RAIL_PARALLEL_BARS THEN
	HIDEPARAMETER "fswl", "ftwl", "fbwl", "bwl", "bthl", "abdistl"
	hideparameter	"fdfl",
				"btypl_m",
				"bdl",
				"hrtl",
				"hrdl"
	hideparameter	"hrwl",
				"hrhl",
				"hrol",
				"ptl_m",
				"npl"
	hideparameter	"nbtl",
				"pdl",
				"pwl",
				"pthl",
				"sbhl",
				"btl_m"
	hideparameter	"bmatl",
				"pmatl",
				"gs_PostBaseTypeL_m",
				"gs_PostBaseOverhangL"
ENDIF

IF leftRailType_m = RAIL_SIMPLE_BAR THEN
	HIDEPARAMETER "fswl", "ftwl", "fbwl", "bwl", "bthl", "abdistl"
	HIDEPARAMETER "fdfl", "nbl", "hrtl", "hrdl"
	hideparameter	"hrwl",
				"hrhl",
				"hrol",
				"ptl_m",
				"npl"
	hideparameter	"nbtl",
				"pdl",
				"pwl",
				"pthl",
				"sbhl",
				"btl_m"
	hideparameter	"bmatl",
				"pmatl",
				"gs_PostBaseTypeL_m",
				"gs_PostBaseOverhangL"
ENDIF

IF leftRailType_m = RAIL_SOLID_FRAME_FILLED THEN
	hideparameter	"bhl",
				"nbl",
				"btypl_m",
				"bdl",
				"hrtl",
				"hrdl"
	hideparameter	"hrwl",
				"hrhl",
				"hrol",
				"ptl_m",
				"npl",
				"btl_m"
	HIDEPARAMETER "nbtl", "pdl", "pwl", "pthl", "sbhl", "bwl", "abdistl"
	hideparameter	"pmatl",
				"gs_PostBaseTypeL_m",
				"gs_PostBaseOverhangL"
ENDIF

IF leftRailType_m = RAIL_SOLID_FRAME THEN
	hideparameter	"bthl",
				"fdfl",
				"bhl",
				"nbl",
				"btypl_m",
				"bdl",
				"hrtl",
				"hrdl"
	hideparameter	"hrwl",
				"hrhl",
				"hrol",
				"ptl_m",
				"npl",
				"btl_m"
	HIDEPARAMETER "nbtl", "pdl", "pwl", "pthl", "sbhl", "bwl", "abdistl"
	hideparameter	"bmatl",
				"pmatl",
				"gs_PostBaseTypeL_m",
				"gs_PostBaseOverhangL"
ENDIF

IF leftRailType_m = RAIL_SOLID THEN
	HIDEPARAMETER "fswl", "ftwl", "fbwl", "bthl", "fdfl"
	hideparameter	"bthl",
				"fdfl",
				"bhl",
				"nbl",
				"btypl_m",
				"bdl",
				"hrtl",
				"hrdl"
	hideparameter	"hrwl",
				"hrhl",
				"hrol",
				"ptl_m",
				"npl",
				"btl_m"
	HIDEPARAMETER "nbtl", "pdl", "pwl", "pthl", "sbhl", "bwl", "abdistl"
	hideparameter	"bmatl",
				"pmatl",
				"gs_PostBaseTypeL_m",
				"gs_PostBaseOverhangL"
ENDIF

IF leftRailType_m = RAIL_POST_WITH_BALUSTERS THEN
	HIDEPARAMETER "ggl","sgl"
	HIDEPARAMETER "fswl", "ftwl", "fbwl", "fdfl", "fthl"
	hideparameter	"fdfl",
				"bhl",
				"btypl_m"
	hideparameter	"nbtl",
				"sbhl",
				"abdistl",
				"gs_PostBaseTypeL_m"
ENDIF

IF leftRailType_m = RAIL_WIRED THEN
	HIDEPARAMETER "ggl","sgl"
	HIDEPARAMETER "fswl", "ftwl", "fbwl", "fdfl", "fthl"
	hideparameter	"fdfl",
				"bhl",
				"btypl_m"
	HIDEPARAMETER "sbhl"
	hideparameter	"nbtl",
				"abdistl",
				"gs_PostBaseTypeL_m"
ENDIF

IF leftRailType_m = RAIL_WIRED02 THEN
	HIDEPARAMETER "ggl","sgl"
	HIDEPARAMETER "fswl", "ftwl", "fbwl", "fdfl", "fthr"
	hideparameter	"fdfl",
				"bhl",
				"btypl_m"
	hideparameter	"nbtl",
				"abdistl",
				"ptl_m",
				"pdl",
				"gs_PostBaseTypeL_m"
ENDIF

IF leftRailType_m = RAIL_WOODEN_BALUSTRADE THEN
	HIDEPARAMETER "ggl","sgl"
	HIDEPARAMETER "fswl", "ftwl", "fbwl", "bthl", "fdfl", "fthl"
	hideparameter	"bthl",
				"fdfl",
				"bhl",
				"btypl_m"
	hideparameter	"sbhl",
				"abdistl",
				"ptl_m",
				"npl",
				"pwl"
	hideparameter	"pthl",
				"btl_m",
				"nbl"
	hideparameter	"bmatl",
				"gs_PostBaseTypeL_m",
				"gs_PostBaseOverhangL"
ENDIF

IF leftRailType_m = RAIL_POST_WITH_BARS THEN
	HIDEPARAMETER "ggl","sgl"
	HIDEPARAMETER "fswl", "ftwl", "fbwl", "fdfl", "fthl"
	hideparameter	"bhl",
				"btypl_m"
	HIDEPARAMETER "nbtl", "abdistl"
	hideparameter	"gs_PostBaseTypeL_m"
ENDIF

IF rightRailType_m = RAIL_BALUSTRADE THEN
	HIDEPARAMETER "fdfr", "bhr", "nbr", "btypr_m", "bdr", "hrtr", "hrdr"
	hideparameter	"hrwr",
				"hrhr",
				"hror",
				"ptr_m",
				"npr"
	hideparameter	"nbtr",
				"pdr",
				"pwr",
				"pthr",
				"sbhr",
				"btr_m"
	hideparameter	"pmatr",
				"gs_PostBaseTypeR_m",
				"gs_PostBaseOverhangR"
ENDIF

IF rightRailType_m = RAIL_PARALLEL_BARS THEN
	HIDEPARAMETER "fswr", "ftwr", "fbwr", "bwr", "bthr", "abdistr"
	HIDEPARAMETER "fdfr", "btypr_m", "bdr", "hrtr", "hrdr"
	hideparameter	"hrwr",
				"hrhr",
				"hror",
				"ptr_m",
				"npr"
	hideparameter	"nbtr",
				"pdr",
				"pwr",
				"pthr",
				"sbhr",
				"btr_m"
	hideparameter	"bmatr",
				"pmatr",
				"gs_PostBaseTypeR_m",
				"gs_PostBaseOverhangR"
ENDIF

IF rightRailType_m = RAIL_SIMPLE_BAR THEN
	HIDEPARAMETER "fswr", "ftwr", "fbwr", "bwr", "bthr", "abdistr"
	HIDEPARAMETER "fdfr", "nbr", "hrtr", "hrdr"
	hideparameter	"hrwr",
				"hrhr",
				"hror",
				"ptr_m",
				"npr"
	hideparameter	"nbtr",
				"pdr",
				"pwr",
				"pthr",
				"sbhr",
				"btr_m"
	hideparameter	"bmatr",
				"pmatr",
				"gs_PostBaseTypeR_m",
				"gs_PostBaseOverhangR"
ENDIF

IF rightRailType_m = RAIL_SOLID_FRAME_FILLED THEN
	HIDEPARAMETER "bhr", "nbr", "btypr_m", "bdr", "hrtr", "hrdr"
	hideparameter	"hrwr",
				"hrhr",
				"hror",
				"ptr_m",
				"npr",
				"btr_m"
	HIDEPARAMETER "nbtr", "pdr", "pwr", "pthr", "sbhr", "bwr", "abdistr"
	hideparameter	"pmatr",
				"gs_PostBaseTypeR_m",
				"gs_PostBaseOverhangR"
ENDIF

IF rightRailType_m = RAIL_SOLID_FRAME THEN
	HIDEPARAMETER "bthr", "fdfr", "bhr", "nbr", "btypr_m", "bdr", "hrtr", "hrdr"
	hideparameter	"hrwr",
				"hrhr",
				"hror",
				"ptr_m",
				"npr",
				"btr_m"
	HIDEPARAMETER "nbtr", "pdr", "pwr", "pthr", "sbhr", "bwr", "abdistr"
	hideparameter	"bmatr",
				"pmatr",
				"gs_PostBaseTypeR_m",
				"gs_PostBaseOverhangR"
ENDIF

IF rightRailType_m = RAIL_SOLID THEN
	HIDEPARAMETER "fswr", "ftwr", "fbwr", "bthr", "fdfr"
	HIDEPARAMETER "bthr", "fdfr", "bhr", "nbr", "btypr_m", "bdr", "hrtr", "hrdr"
	hideparameter	"hrwr",
				"hrhr",
				"hror",
				"ptr_m",
				"npr",
				"btr_m"
	HIDEPARAMETER "nbtr", "pdr", "pwr", "pthr", "sbhr", "bwr", "abdistr"
	hideparameter	"bmatr",
				"pmatr",
				"gs_PostBaseTypeR_m",
				"gs_PostBaseOverhangR"
ENDIF

IF rightRailType_m = RAIL_POST_WITH_BALUSTERS THEN
	HIDEPARAMETER "ggr","sgr"
	HIDEPARAMETER "fswr", "ftwr", "fbwr", "fdfr", "fthr"
	HIDEPARAMETER "fdfr", "bhr", "btypr_m"
	hideparameter	"nbtr",
				"sbhr",
				"abdistr",
				"gs_PostBaseTypeR_m"
ENDIF

IF rightRailType_m = RAIL_WIRED THEN
	HIDEPARAMETER "ggr","sgr"
	HIDEPARAMETER "fswr", "ftwr", "fbwr", "fdfr", "fthr"
	HIDEPARAMETER "fdfr", "bhr", "btypr_m"
	HIDEPARAMETER "sbhr"
	hideparameter	"nbtr",
				"abdistr",
				"gs_PostBaseTypeR_m"
ENDIF

IF rightRailType_m = RAIL_WIRED02 THEN
	HIDEPARAMETER "ggr","sgr"
	HIDEPARAMETER "fswr", "ftwr", "fbwr", "fdfr", "fthr"
	HIDEPARAMETER "fdfr", "bhr", "btypr_m"
	hideparameter	"nbtr",
				"abdistr",
				"ptr_m",
				"pdr",
				"gs_PostBaseTypeR_m"
ENDIF

IF rightRailType_m = RAIL_WOODEN_BALUSTRADE THEN
	HIDEPARAMETER "ggr","sgr"
	HIDEPARAMETER "fswr", "ftwr", "fbwr", "bthr", "fdfr", "fthr"
	HIDEPARAMETER "bthr", "fdfr", "bhr", "btypr_m"
	hideparameter	"sbhr",
				"abdistr",
				"ptr_m",
				"npr",
				"pwr"
	hideparameter	"pthr",
				"btr_m",
				"nbr"
	hideparameter	"bmatr",
				"gs_PostBaseTypeR_m",
				"gs_PostBaseOverhangR"
ENDIF

IF rightRailType_m = RAIL_POST_WITH_BARS THEN
	HIDEPARAMETER "ggr","sgr"
	HIDEPARAMETER "fswr", "ftwr", "fbwr", "fdfr", "fthr"
	HIDEPARAMETER "bhr", "btypr_m"
	HIDEPARAMETER "nbtr", "abdistr"
	hideparameter	"gs_PostBaseTypeR_m"
ENDIF

!!! *** FULL HIDE OF RAILING PARAMETERS *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

IF rail_m = RAILPOS_NONE or rail_m = RAILPOS_LEFT THEN
	hideparameter	"ggr",
				"hrr",
				"dsr",
				"roffr",
				"sgr",
				"fswr",
				"fthr",
				"ftwr",
				"fbwr",
				"bwr",
				"bthr",
				"abdistr",
				"fdfr",
				"bhr",
				"bdr",
				"nbr",
				"btypr_m",
				"fmatr",
				"bmatr",
				"romr_m",
				"rmmr",
				"hrtr",
				"hrdr",
				"hrwr",
				"hrhr",
				"hror",
				"ptr_m",
				"npr",
				"nbtr",
				"pdr",
				"pwr",
				"pthr",
				"btr_m",
				"nbr",
				"bwr",
				"bthr",
				"bdr",
				"sbhr",
				"bmatr",
				"fmatr",
				"pmatr"
ENDIF
IF rail_m = RAILPOS_NONE or rail_m = RAILPOS_RIGHT THEN
	hideparameter	"ggl",
				"hrl",
				"dsl",
				"roffl",
				"sgl",
				"fswl",
				"fthl",
				"ftwl",
				"fbwl",
				"bwl",
				"bthl",
				"abdistl",
				"fdfl",
				"bhl",
				"bdl",
				"nbl",
				"btypl_m",
				"fmatl",
				"bmatl",
				"roml_m",
				"rmml",
				"hrtl",
				"hrdl",
				"hrwl",
				"hrhl",
				"hrol",
				"ptl_m",
				"npl",
				"nbtl",
				"pdl",
				"pwl",
				"pthl",
				"btl_m",
				"nbl",
				"bwl",
				"bthl",
				"bdl",
				"sbhl",
				"bmatl",
				"fmatl",
				"pmatl"
ENDIF

!!! *** RIGHT RAIL STRUCTURAL DIMENSION PARAMETERS *** !!!!!!!!!!!!!!!!!!!!!!!!!

!!! Rail Orientation Method on Right Side
IF np_m = POSTPOS_LEFT or np_m = POSTPOS_NONE THEN
	values{2} "romr_m" 	RAILORIENT_VERTICAL, `Вертикальный`,
						RAILORIENT_PERPENDICULAR, `Перпендикулярно Наклону`
	ELSE
	values{2} "romr_m" 	RAILORIENT_VERTICAL, `Вертикальный`
ENDIF

!!! Rail Orientation Method on Left Side
IF np_m = POSTPOS_RIGHT or np_m = POSTPOS_NONE THEN
	values{2} "roml_m" 	RAILORIENT_VERTICAL, `Вертикальный`,
						RAILORIENT_PERPENDICULAR, `Перпендикулярно Наклону`
	ELSE
	values{2} "roml_m" 	RAILORIENT_VERTICAL, `Вертикальный`
ENDIF

values{2} "gs_PostBaseTypeR_m" 	POSTBASE_VERTICALSURF, `Соединение с Вертикальной Поверхностью`,
								POSTBASE_HORIZONTALSURF, `Соединение с Горизонтальной Поверхностью`
values{2} "gs_PostBaseTypeL_m" 	POSTBASE_VERTICALSURF, `Соединение с Вертикальной Поверхностью`,
								POSTBASE_HORIZONTALSURF, `Соединение с Горизонтальной Поверхностью`


VALUES "hrtr" `Прямоугольные`,`Круглые`
IF hrtr_m = ROUND THEN
	HIDEPARAMETER "hrwr"
	HIDEPARAMETER "hrhr"
ELSE
	HIDEPARAMETER "hrdr"
ENDIF

values{2} "ptr_m" 	POST_RECTANGULAR, `Прямоугольные`,
					POST_ROUND, `Круглые`
IF ptr_m = POST_ROUND THEN
	HIDEPARAMETER "pwr"
	HIDEPARAMETER "pthr"
ELSE
	HIDEPARAMETER "pdr"
ENDIF

IF rightRailType_m <> RAIL_SIMPLE_BAR THEN
	values{2} "btr_m" 	BOARD_RECTANGULAR, `Прямоугольные`,
					BOARD_ROUND, `Круглые`
	IF btr_m = BOARD_ROUND THEN
		HIDEPARAMETER "bwr"
		HIDEPARAMETER "bthr"
	ELSE
		HIDEPARAMETER "bdr"
	ENDIF
ELSE
	IF btypr_m = BAR_ROUND THEN
		HIDEPARAMETER "bhr"
		HIDEPARAMETER "fthr"
	ELSE
		HIDEPARAMETER "bdr"
	ENDIF
ENDIF

IF leftRailType_m <> RAIL_SIMPLE_BAR THEN
	values{2} "btl_m" 	BOARD_RECTANGULAR, `Прямоугольные`,
					BOARD_ROUND, `Круглые`
	IF btl_m = BOARD_ROUND THEN
		HIDEPARAMETER "bwl"
		HIDEPARAMETER "bthl"
	ELSE
		HIDEPARAMETER "bdl"
	ENDIF
ELSE
	IF btypl_m = BAR_ROUND THEN
		HIDEPARAMETER "bhl"
		HIDEPARAMETER "fthl"
	ELSE
		HIDEPARAMETER "bdl"
	ENDIF
ENDIF

!!! *** LEFT RAIL STRUCTURAL DIMENSION PARAMETERS *** !!!!!!!!!!!!!!!!!!!!!!!!!!

IF bSameRails THEN
	hideparameter	"ggl",
				"roml_m",
				"hrl",
				"dsl",
				"roffl",
				"sgl",
				"fswl",
				"fthl",
				"ftwl",
				"fbwl",
				"abdistl",
				"fdfl",
				"bhl",
				"btypl_m",
				"hrtl",
				"hrdl",
				"hrwl",
				"hrhl",
				"hrol",
				"ptl_m",
				"npl",
				"nbtl",
				"pdl",
				"pwl",
				"pthl",
				"btl_m",
				"nbl",
				"bwl",
				"bthl",
				"bdl",
				"sbhl",
				"bmatl",
				"fmatl",
				"pmatl"
ENDIF

VALUES "hrtl" `Прямоугольные`,`Круглые`
IF hrtl_m = ROUND THEN
	HIDEPARAMETER "hrwl"
	HIDEPARAMETER "hrhl"
ELSE
	HIDEPARAMETER "hrdl"
ENDIF

values{2} "ptl_m" 	POST_RECTANGULAR, `Прямоугольные`,
					POST_ROUND, `Круглые`
IF ptl_m = POST_ROUND THEN
	HIDEPARAMETER "pwl"
	HIDEPARAMETER "pthl"
ELSE
	HIDEPARAMETER "pdl"
ENDIF

IF GLOB_MODPAR_NAME = "OverhangRBottom" THEN PARAMETERS temp_OverhangRBottom = OverhangRBottom/cos(angle)
IF GLOB_MODPAR_NAME = "temp_OverhangRBottom" THEN PARAMETERS OverhangRBottom = temp_OverhangRBottom*cos(angle)

IF GLOB_MODPAR_NAME = "OverhangRTop" THEN PARAMETERS temp_OverhangRTop = OverhangRTop/cos(angle)
IF GLOB_MODPAR_NAME = "temp_OverhangRTop" THEN PARAMETERS OverhangRTop = temp_OverhangRTop*cos(angle)

IF GLOB_MODPAR_NAME = "OverhangLBottom" THEN PARAMETERS temp_OverhangLBottom = OverhangLBottom/cos(angle)
IF GLOB_MODPAR_NAME = "temp_OverhangLBottom" THEN PARAMETERS OverhangLBottom = temp_OverhangLBottom*cos(angle)

IF GLOB_MODPAR_NAME = "OverhangLTop" THEN PARAMETERS temp_OverhangLTop = OverhangLTop/cos(angle)
IF GLOB_MODPAR_NAME = "temp_OverhangLTop" THEN PARAMETERS OverhangLTop = temp_OverhangLTop*cos(angle)

!!! Distance under Handrail
IF GLOB_MODPAR_NAME = "sbhr" 	THEN PARAMETERS sbhPerpR=sbhr/cos(angle)
IF GLOB_MODPAR_NAME = "sbhPerpR" THEN PARAMETERS sbhr=sbhPerpR*cos(angle)
IF GLOB_MODPAR_NAME = "ani" 	THEN PARAMETERS sbhPerpR=sbhr/cos(angle)

IF GLOB_MODPAR_NAME = "sbhl" 	THEN PARAMETERS sbhPerpL=sbhl/cos(angle)
IF GLOB_MODPAR_NAME = "sbhPerpL" THEN PARAMETERS sbhl=sbhPerpL*cos(angle)
IF GLOB_MODPAR_NAME = "ani" 	THEN PARAMETERS sbhPerpL=sbhl/cos(angle)

!!! End of RAILING !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

!!! A, B, ZZYZX !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
	PARAMETERS A=FlightWidth
	LOCK "A"

	PARAMETERS B=(rnu-1)*td
	LOCK "B"



!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!! Settings of 2D Symbol Type *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

!!!! GENERAL SETTINGS
	lock	"gs_2DTread",
		"gs_2DTreadAbove",
		"gs_2DRiserAbove",
		"gs_2DContourAbove",
		"gs_2DContourBelow",
		"brk",
		"iLineTypeAboveBreak",
		"gs_ArrowFill",
		"gs_ArrowHeight",
		"gs_ArrowHalfWidth",
		"gs_StartEndFill",
		"gs_CircleRadius",
		"gs_StartWidth",
		"gs_StartHeight",
		"DirNumText_X",
		"DirNumText_Y",
		"DirUPDN_X",
		"DirUPDN_Y",
		"AngUPDN",
		"brkLineY",
		"sbhPerpR",
		"sbhPerpL",
		"gs_FillTypeAbove"


	IF walkl=0 THEN
		 hideparameter	"gs_wLineType1",
					"gs_wLineType2",
					"gs_wLineTypeAbove",
					"gs_wLinePen",
					"arrow_style_m",
					"gs_ArrowFillPen",
					"gs_ArrowFillPenAbove",
					"gs_StartEndStyle",
					"gs_StartEndFillPen",
					"gs_RiseRunText",
					"gs_CustomText1",
					"gs_CustomText2",
					"bShowRiseAndRunText",
					"fontsize",
					"typeTextRotation_RiseRun",
					"gs_text_pen",
					"bUseACLinearUnit",
					"walkingDirUPDN",
					"UPDNfontsize",
					"UPDNfontpen",
					"gs_wLineTypeStUp",
					"typeTextRotation_UpDn"
	ENDIF

	IF arrow_style_m = ARROW_STYLE_1 OR arrow_style_m = ARROW_STYLE_2 OR arrow_style_m = ARROW_STYLE_3 THEN
		 HIDEPARAMETER 	"gs_ArrowFillPen","gs_ArrowFillPenAbove"
	ENDIF

	IF gs_StartEndStyle_m = STARTSYMB_STYLE3 OR gs_StartEndStyle_m = STARTSYMB_NONE  THEN
		 HIDEPARAMETER 	"gs_StartEndFillPen"
	ENDIF

	! ------ Story Sensitive ------------------------------
	if not(gs_StorySensitive) then
		hideparameter "gs_AboveHomeStory"
	else
		if not(gs_BreaklineStUp) then
			hideparameter "gs_LowerPartStUp","gs_UpperPartStUp"
		endif
		if not(gs_LowerPartStUp) & not(gs_UpperPartStUp) & gs_BreaklineStUp then
			hideparameter "gs_TreadStUp"
		endif
	endif

	! ------ for 2D above Home Story ------------------------------[
	if	(GLOB_MODPAR_NAME = "gs_SymbolType" | GLOB_MODPAR_NAME = "gs_SymbolType_m" |\
		GLOB_MODPAR_NAME = "gs_detlevel_2D" | GLOB_MODPAR_NAME = "gs_detlevel_2D_m") &\
		gs_detlevel_2D_m = DET2D_CUSTOM then
		if gs_SymbolType_m  = 1 | gs_SymbolType_m  = 2 then
			parameters	gs_BreaklineStUp	= 0,
						gs_TreadStUp		= 0
		endif
		if gs_SymbolType_m  = 3 | gs_SymbolType_m  = 4 | gs_SymbolType_m  = 5 then
			parameters	gs_BreaklineStUp	= 1,
						gs_LowerPartStUp	= 0,
						gs_UpperPartStUp	= 1,
						gs_TreadStUp		= 0
		endif
		if gs_SymbolType_m  = 6 | gs_SymbolType_m  = 7 | \
			gs_SymbolType_m  = 13 | gs_SymbolType_m  = 14 then
			parameters	gs_BreaklineStUp	= 0,
						gs_TreadStUp		= 1
		endif
		if gs_SymbolType_m  = 8 | gs_SymbolType_m  = 9 | gs_SymbolType_m  = 10 | \
			gs_SymbolType_m  = 11 | gs_SymbolType_m  = 12 | \
			gs_SymbolType_m  = 15 | gs_SymbolType_m  = 16 | gs_SymbolType_m  = 17 | \
			gs_SymbolType_m  = 18 | gs_SymbolType_m  = 19 | gs_SymbolType_m  = 20 then
			parameters	gs_BreaklineStUp = 1,
						gs_LowerPartStUp = 0,
						gs_UpperPartStUp = 1,
						gs_TreadStUp = 1
		endif
	endif
	! ------ for 2D above Home Story ------------------------------]

	!!! SETTINGS BY SYMBOL TYPES !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
	!!! ******************************************************* !!

	IF gs_SymbolType_m = 1 THEN   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
		HIDEPARAMETER	"gs_NosingLine",
						"gs_NumBelow","gs_NumAbove","gs_FillAbove",
						"gs_wLineType1","gs_wLineTypeAbove","bShowRailAxis","railAxisLineType",
						"gs_RailAxisPen","gs_ArrowFillPenAbove",
						"gs_cont_pen","solid_line"

		IF bShowRiseAndRunText=0 AND walkingDirUPDN_m = WALKDIRSTR_NONE OR walkl=0 THEN HIDEPARAMETER "fontType"
		IF gs_StorySensitive=0 OR gs_StorySensitive=1 AND gs_BreaklineStUp=0 THEN
			hideparameter	"gs_BreakHeight",
					"breakline_style_m"
		ENDIF

	ENDIF

	IF gs_SymbolType_m = 2 THEN   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
		HIDEPARAMETER 	"gs_NosingLine",
						"gs_NumBelow","gs_NumAbove","gs_FillAbove",
						"gs_wLineType2","gs_wLineTypeAbove","bShowRailAxis","railAxisLineType",
						"gs_RailAxisPen","gs_ArrowFillPenAbove",
						"gs_DashLinePen","dash_line"

		IF bShowRiseAndRunText=0 AND walkingDirUPDN_m = WALKDIRSTR_NONE OR walkl=0 THEN HIDEPARAMETER "fontType"
		IF gs_StorySensitive=0 OR gs_StorySensitive=1 AND gs_BreaklineStUp=0 THEN
		hideparameter	"gs_BreakHeight",
				"breakline_style_m"
		ENDIF

	ENDIF

	IF gs_SymbolType_m = 3 THEN   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
		HIDEPARAMETER 	"gs_NosingLine",
						"gs_NumBelow","gs_NumAbove","gs_FillAbove",
						"gs_wLineType2","gs_wLineTypeAbove","bShowRailAxis","railAxisLineType",
						"gs_RailAxisPen","gs_ArrowFillPenAbove",
						"gs_DashLinePen","dash_line"

		IF bShowRiseAndRunText=0 AND walkingDirUPDN_m = WALKDIRSTR_NONE OR walkl=0 THEN HIDEPARAMETER "fontType"

	ENDIF

	IF gs_SymbolType_m = 4 THEN   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
		HIDEPARAMETER 	"gs_NosingLine",
						"gs_wLineType2","bShowRailAxis","railAxisLineType","gs_RailAxisPen"

		IF bShowRiseAndRunText=0 AND walkingDirUPDN_m = WALKDIRSTR_NONE OR walkl=0 THEN HIDEPARAMETER "fontType"

	ENDIF

	IF gs_SymbolType_m = 5 THEN   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
		HIDEPARAMETER 	"gs_NosingLine",
						"gs_wLineType2","gs_wLineTypeAbove","bShowRailAxis","railAxisLineType","gs_RailAxisPen",
						"gs_DashLinePen","dash_line"

		IF bShowRiseAndRunText=0 AND walkingDirUPDN_m = WALKDIRSTR_NONE OR walkl=0 THEN HIDEPARAMETER "fontType"

	ENDIF

	IF gs_SymbolType_m = 6 THEN   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
		HIDEPARAMETER 	"gs_NosingLine",
						"gs_NumBelow","gs_NumAbove","gs_FillAbove",
						"gs_wLineType1","gs_wLineTypeAbove","bShowRailAxis","railAxisLineType",
						"gs_RailAxisPen","gs_ArrowFillPenAbove",
						"gs_cont_pen","solid_line"

		IF bShowRiseAndRunText=0 AND walkingDirUPDN_m = WALKDIRSTR_NONE and bShowNumbering=0 OR walkl=0 and bShowNumbering=0 THEN HIDEPARAMETER "fontType"
		IF gs_StorySensitive=0 OR gs_StorySensitive=1 AND gs_BreaklineStUp=0 THEN
		hideparameter	"gs_BreakHeight",
				"breakline_style_m"
		ENDIF

	ENDIF

	IF gs_SymbolType_m = 7 THEN   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
		HIDEPARAMETER 	"gs_NosingLine",
						"gs_NumBelow","gs_NumAbove","gs_FillAbove",
						"gs_wLineType2","gs_wLineTypeAbove","bShowRailAxis","railAxisLineType",
						"gs_RailAxisPen","gs_ArrowFillPenAbove",
						"gs_DashLinePen","dash_line"

		IF bShowRiseAndRunText=0 AND walkingDirUPDN_m = WALKDIRSTR_NONE and bShowNumbering=0 OR walkl=0 and bShowNumbering=0 THEN HIDEPARAMETER "fontType"
		IF gs_StorySensitive=0 OR gs_StorySensitive=1 AND gs_BreaklineStUp=0 THEN
		hideparameter	"gs_BreakHeight",
				"breakline_style_m"
		ENDIF

	ENDIF

	IF gs_SymbolType_m = 8 THEN   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
		HIDEPARAMETER 	"gs_NosingLine","gs_wLineType2","gs_wLineTypeAbove",
						"gs_NumBelow","gs_NumAbove","gs_FillAbove",
						"bShowRailAxis","railAxisLineType","gs_RailAxisPen","gs_ArrowFillPenAbove",
						"gs_DashLinePen","dash_line"

		IF bShowRiseAndRunText=0 AND walkingDirUPDN_m = WALKDIRSTR_NONE OR walkl=0 THEN HIDEPARAMETER "fontType"

	ENDIF

	IF gs_SymbolType_m = 9 THEN   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
		HIDEPARAMETER 	"gs_NosingLine","gs_wLineType2",
						"bShowRailAxis","railAxisLineType","gs_RailAxisPen"

		IF bShowRiseAndRunText=0 AND walkingDirUPDN_m = WALKDIRSTR_NONE OR walkl=0 THEN HIDEPARAMETER "fontType"

	ENDIF

	IF gs_SymbolType_m = 10 THEN   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
		HIDEPARAMETER 	"gs_NosingLine","gs_wLineType2","gs_wLineTypeAbove",
						"bShowRailAxis","railAxisLineType","gs_RailAxisPen",
						"gs_DashLinePen","dash_line"

		IF bShowRiseAndRunText=0 AND walkingDirUPDN_m = WALKDIRSTR_NONE OR walkl=0 THEN HIDEPARAMETER "fontType"

	ENDIF

	IF gs_SymbolType_m = 11 THEN   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
		HIDEPARAMETER 	"gs_NosingLine","gs_wLineType2","bShowRailAxis","railAxisLineType","gs_RailAxisPen"

		IF bShowRiseAndRunText=0 AND walkingDirUPDN_m = WALKDIRSTR_NONE and bShowNumbering=0 OR walkl=0 and bShowNumbering=0 THEN HIDEPARAMETER "fontType"

	ENDIF

	IF gs_SymbolType_m = 12 THEN   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
		HIDEPARAMETER 	"gs_NosingLine","gs_wLineType2","gs_wLineTypeAbove","bShowRailAxis","railAxisLineType","gs_RailAxisPen",
						"gs_DashLinePen","dash_line"

		IF bShowRiseAndRunText=0 AND walkingDirUPDN_m = WALKDIRSTR_NONE and bShowNumbering=0 OR walkl=0 and bShowNumbering=0 THEN HIDEPARAMETER "fontType"

	ENDIF

	IF gs_SymbolType_m = 13 THEN   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
		HIDEPARAMETER 	"gs_NumBelow","gs_NumAbove","gs_FillAbove",
						"gs_wLineType1","gs_wLineTypeAbove","gs_ArrowFillPenAbove",
						"gs_cont_pen","solid_line"

		IF bShowRiseAndRunText=0 AND walkingDirUPDN_m = WALKDIRSTR_NONE and bShowNumbering=0 OR walkl=0 and bShowNumbering=0 THEN HIDEPARAMETER "fontType"
		IF gs_StorySensitive=0 OR gs_StorySensitive=1 AND gs_BreaklineStUp=0 THEN
		hideparameter	"gs_BreakHeight",
				"breakline_style_m"
		ENDIF

	ENDIF

	IF gs_SymbolType_m = 14 THEN   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
		HIDEPARAMETER 	"gs_NumBelow","gs_NumAbove","gs_FillAbove",
						"gs_wLineType2","gs_wLineTypeAbove","gs_ArrowFillPenAbove"

		IF bShowRiseAndRunText=0 AND walkingDirUPDN_m = WALKDIRSTR_NONE and bShowNumbering=0 OR walkl=0 and bShowNumbering=0 THEN HIDEPARAMETER "fontType"
		IF gs_StorySensitive=0 OR gs_StorySensitive=1 AND gs_BreaklineStUp=0 THEN
		hideparameter	"gs_BreakHeight",
				"breakline_style_m"
		ENDIF

	ENDIF

	IF gs_SymbolType_m = 15 THEN   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
		HIDEPARAMETER 	"gs_wLineType2","gs_wLineTypeAbove",
						"gs_NumBelow","gs_NumAbove","gs_FillAbove",
						"gs_ArrowFillPenAbove"

		IF bShowRiseAndRunText=0 AND walkingDirUPDN_m = WALKDIRSTR_NONE OR walkl=0 THEN HIDEPARAMETER "fontType"

	ENDIF

	IF gs_SymbolType_m = 16 THEN   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
		HIDEPARAMETER 	"gs_wLineType2"

		IF bShowRiseAndRunText=0 AND walkingDirUPDN_m = WALKDIRSTR_NONE OR walkl=0 THEN HIDEPARAMETER "fontType"

	ENDIF

	IF gs_SymbolType_m = 17 THEN   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
		HIDEPARAMETER 	"gs_wLineType2","gs_wLineTypeAbove"

		IF bShowRiseAndRunText=0 AND walkingDirUPDN_m = WALKDIRSTR_NONE OR walkl=0 THEN HIDEPARAMETER "fontType"

	ENDIF

	IF gs_SymbolType_m = 18 THEN   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
		HIDEPARAMETER 	"gs_wLineType2"

		IF bShowRiseAndRunText=0 AND walkingDirUPDN_m = WALKDIRSTR_NONE and bShowNumbering=0 OR walkl=0 and bShowNumbering=0 THEN HIDEPARAMETER "fontType"

	ENDIF

	IF gs_SymbolType_m = 19 THEN   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
		HIDEPARAMETER 	"gs_wLineType2"

		IF bShowRiseAndRunText=0 AND walkingDirUPDN_m = WALKDIRSTR_NONE and bShowNumbering=0 OR walkl=0 and bShowNumbering=0 THEN HIDEPARAMETER "fontType"

	ENDIF

	IF gs_SymbolType_m = 20 THEN   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
		HIDEPARAMETER 	"gs_wLineType2","gs_wLineTypeAbove"

		IF bShowRiseAndRunText=0 AND walkingDirUPDN_m = WALKDIRSTR_NONE and bShowNumbering=0 OR walkl=0 and bShowNumbering=0 THEN HIDEPARAMETER "fontType"

	ENDIF


! ==============================================================================
! mm / point conversion
! ==============================================================================

MM_IN_A_DOT = 25.4 / 72

if GLOB_MODPAR_NAME = "gs_text_size_pt_UpDn" then
	UPDNfontsize = gs_text_size_pt_UpDn * MM_IN_A_DOT
	parameters UPDNfontsize = UPDNfontsize
else
	gs_text_size_pt_UpDn = UPDNfontsize / MM_IN_A_DOT
	parameters gs_text_size_pt_UpDn = gs_text_size_pt_UpDn
endif

if GLOB_MODPAR_NAME = "gs_text_size_pt" then
	fontsize = gs_text_size_pt * MM_IN_A_DOT
	parameters fontsize = fontsize
else
	gs_text_size_pt = fontsize / MM_IN_A_DOT
	parameters gs_text_size_pt = gs_text_size_pt
endif

if GLOB_MODPAR_NAME = "gs_text_size_pt_num" then
	gs_NumTextSize = gs_text_size_pt_num * MM_IN_A_DOT
	parameters gs_NumTextSize = gs_NumTextSize
else
	gs_text_size_pt_num = gs_NumTextSize / MM_IN_A_DOT
	parameters gs_text_size_pt_num = gs_text_size_pt_num
endif


! --- Connecting integer and section pencolor type parameters ---

dim iPenNumber[255]
for i=1 to 255
	iPenNumber[i]=i
next i

values "gs_cont_pen"		iPenNumber
values "gs_DashLinePen"		iPenNumber
values "railPen"			iPenNumber
values "gs_RailAxisPen"		iPenNumber
values "postPen"			iPenNumber
values "carriagePen"		iPenNumber
values "gs_fill_pen"		iPenNumber
values "gs_wLinePen"		iPenNumber
values "gs_NumTextPen"		iPenNumber
values "gs_text_pen"		iPenNumber
values "UPDNfontpen"		iPenNumber
values "gs_LinePenStUp"		iPenNumber
values "penLineStringer" 	iPenNumber
values "penFillStringer" 	iPenNumber
values "penLineTread" 		iPenNumber
values "penFillTread" 		iPenNumber
values "penLineRiser" 		iPenNumber
values "penFillRiser" 		iPenNumber
values "penLineSoffit" 		iPenNumber
values "penFillSoffit" 		iPenNumber

if GLOB_MODPAR_NAME = "penLineStringer_m" then
	if penLineStringer_m < -1 | penLineStringer_m > 255 then
		penLineStringer_m = 1
		parameters penLineStringer_m = penLineStringer_m
	endif
	parameters penLineStringer = penLineStringer_m
else
	parameters penLineStringer_m = penLineStringer
endif
if GLOB_MODPAR_NAME = "penFillStringer_m" then
	if penFillStringer_m < -1 | penFillStringer_m > 255 then
		penFillStringer_m = 1
		parameters penFillStringer_m = penFillStringer_m
	endif
	parameters penFillStringer = penFillStringer_m
else
	parameters penFillStringer_m = penFillStringer
endif

if GLOB_MODPAR_NAME = "penLineTread_m" then
	if penLineTread_m < 1 | penLineTread_m > 255 then
		penLineTread_m = 1
		parameters penLineTread_m = penLineTread_m
	endif
	parameters penLineTread = penLineTread_m
else
	parameters penLineTread_m = penLineTread
endif
if GLOB_MODPAR_NAME = "penFillTread_m" then
	if penFillTread_m < 1 | penFillTread_m > 255 then
		penFillTread_m = 1
		parameters penFillTread_m = penFillTread_m
	endif
	parameters penFillTread = penFillTread_m
else
	parameters penFillTread_m = penFillTread
endif

if GLOB_MODPAR_NAME = "penLineRiser_m" then
	if penLineRiser_m < 1 | penLineRiser_m > 255 then
		penLineRiser_m = 1
		parameters penLineRiser_m = penLineRiser_m
	endif
	parameters penLineRiser = penLineRiser_m
else
	parameters penLineRiser_m = penLineRiser
endif
if GLOB_MODPAR_NAME = "penFillRiser_m" then
	if penFillRiser_m < 1 | penFillRiser_m > 255 then
		penFillRiser_m = 1
		parameters penFillRiser_m = penFillRiser_m
	endif
	parameters penFillRiser = penFillRiser_m
else
	parameters penFillRiser_m = penFillRiser
endif

if GLOB_MODPAR_NAME = "penLineSoffit_m" then
	if penLineSoffit_m < 1 | penLineSoffit_m > 255 then
		penLineSoffit_m = 1
		parameters penLineSoffit_m = penLineSoffit_m
	endif
	parameters penLineSoffit = penLineSoffit_m
else
	parameters penLineSoffit_m = penLineSoffit
endif
if GLOB_MODPAR_NAME = "penFillSoffit_m" then
	if penFillSoffit_m < 1 | penFillSoffit_m > 255 then
		penFillSoffit_m = 1
		parameters penFillSoffit_m = penFillSoffit_m
	endif
	parameters penFillSoffit = penFillSoffit_m
else
	parameters penFillSoffit_m = penFillSoffit
endif

if GLOB_MODPAR_NAME = "penBackFillStringer_m" then
	if penBackFillStringer_m < -1 | penBackFillStringer_m > 255 then
		penBackFillStringer_m = 1
		parameters penBackFillStringer_m = penBackFillStringer_m
	endif
	parameters penBackFillStringer = penBackFillStringer_m
else
	parameters penBackFillStringer_m = penBackFillStringer
endif

if GLOB_MODPAR_NAME = "penBackFillTread_m" then
	if penBackFillTread_m < -1 | penBackFillTread_m > 255 then
		penBackFillTread_m = 1
		parameters penBackFillTread_m = penBackFillTread_m
	endif
	parameters penBackFillTread = penBackFillTread_m
else
	parameters penBackFillTread_m = penBackFillTread
endif

if GLOB_MODPAR_NAME = "penBackFillRiser_m" then
	if penBackFillRiser_m < -1 | penBackFillRiser_m > 255 then
		penBackFillRiser_m = 1
		parameters penBackFillRiser_m = penBackFillRiser_m
	endif
	parameters penBackFillRiser = penBackFillRiser_m
else
	parameters penBackFillRiser_m = penBackFillRiser
endif

if GLOB_MODPAR_NAME = "penBackFillSoffit_m" then
	if penBackFillSoffit_m < -1 | penBackFillSoffit_m > 255 then
		penBackFillSoffit_m = 1
		parameters penBackFillSoffit_m = penBackFillSoffit_m
	endif
	parameters penBackFillSoffit = penBackFillSoffit_m
else
	parameters penBackFillSoffit_m = penBackFillSoffit
endif

! =============================================================================
! Onorm list Settings
! =============================================================================

if LibraryLangCode = "AUT" or LibraryLangCode = "CHE" or LibraryLangCode = "GER" then
	call "Onorm_Stair" parameters all matTread = mat_tread
else
	hideparameter "gs_onorm_Title", "gs_list_soundinsul"
endif

! =============================================================================
! IFC2x3 Property Set for Stairs
! =============================================================================

STRAIGHT_RUN_STAIR = 1
parameters ifc_StairType 		= STRAIGHT_RUN_STAIR
parameters ifc_NumberOfRiser 	= rnu
parameters ifc_NumberOfTreads 	= rnu-1
parameters ifc_RiserHeight		= th
parameters ifc_TreadLength		= td
]]>
</Script_VL>

<Comment SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Comment>

<ParamSection SectVersion="22" SectionFlags="0" SubIdent="0">
	<ParamSectHeader>
		<AutoHotspots>false</AutoHotspots>
		<StatBits>
			<STBit_UIDefault/>
			<STBit_FixSize/>
			<STBit_UIUseHierarchicalPages/>
		</StatBits>
		<WDLeftFrame>0</WDLeftFrame>
		<WDRightFrame>0</WDRightFrame>
		<WDTopFrame>0</WDTopFrame>
		<WDBotFrame>0</WDBotFrame>
		<LayFlags>65407</LayFlags>
		<WDMirrorThickness>0</WDMirrorThickness>
		<WDWallInset>0</WDWallInset>
	</ParamSectHeader>
	<Parameters>
		<Length Name="A">
			<Description><![CDATA["Размер 1"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Unique/>
			</Flags>
			<Value>1.1</Value>
		</Length>
		<Length Name="B">
			<Description><![CDATA["Размер 2"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Unique/>
			</Flags>
			<Value>5.02444444444</Value>
		</Length>
		<Length Name="ZZYZX">
			<Description><![CDATA["Высота"]]></Description>
			<Fix/>
			<Value>3.1</Value>
		</Length>
		<Integer Name="gs_detlevel_3d_m">
			<Description><![CDATA["3D"]]></Description>
			<Value>2</Value>
		</Integer>
		<Boolean Name="cfs">
			<Description><![CDATA["Вызов как Макрос из Лестницы"]]></Description>
			<Flags>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="ad">
			<Description><![CDATA["Ступени Вычисляются на основе Высоты Лестницы"]]></Description>
			<Flags>
				<ParFlg_Unique/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Integer Name="iCalculationMode">
			<Description><![CDATA["Способ Вычисления"]]></Description>
			<Flags>
				<ParFlg_Unique/>
			</Flags>
			<Value>2</Value>
		</Integer>

		<!-- WoodenStra_sp1: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="WoodenStra_sp1">
			<Description><![CDATA["Параметры Марша"]]></Description>
		</Title>
		<Length Name="flw">
			<Description><![CDATA["Ширина Марша"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1.2</Value>
		</Length>
		<Integer Name="iFlightSectionType">
			<Description><![CDATA["Тип Секции Марша"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="iLowerJunctionType">
			<Description><![CDATA["Тип Стыка Внизу"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="iUpperJunctionType">
			<Description><![CDATA["Тип Стыка Вверху"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Length Name="lst">
			<Description><![CDATA["Толщина Верхней Площадки"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0.25</Value>
		</Length>
		<Length Name="pd">
			<Description><![CDATA["Расстояние Линии Уклона"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0.12</Value>
		</Length>
		<Length Name="sh">
			<Description><![CDATA["Высота Бруса"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0.5</Value>
		</Length>
		<Length Name="st">
			<Description><![CDATA["Толщина Бруса"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="LowerEndHgt">
			<Description><![CDATA["Высота Конца Нижнего Бруса"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Length Name="UpperEndHgt">
			<Description><![CDATA["Высота Конца Верхнего Бруса"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="softh">
			<Description><![CDATA["Толщина Софита"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0.04</Value>
		</Length>

		<!-- WoodenStra_sp2: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="WoodenStra_sp2">
			<Description><![CDATA["Размеры Подступенков и Проступей"]]></Description>
		</Title>
		<Integer Name="rnu">
			<Description><![CDATA["Количество Подступенков"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>18</Value>
		</Integer>
		<Length Name="thd">
			<Description><![CDATA["Две Высоты Подступенка + Проступь"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0.64</Value>
		</Length>
		<Length Name="pth">
			<Description><![CDATA["Предпочтительная Высота Ступени"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0.172222222222</Value>
		</Length>
		<Length Name="th">
			<Description><![CDATA["Высота Ступени"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0.172222222222</Value>
		</Length>
		<Length Name="td">
			<Description><![CDATA["Глубина Ступени"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0.295555555556</Value>
		</Length>
		<Length Name="rt">
			<Description><![CDATA["Толщина Ступени"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0.03</Value>
		</Length>
		<Length Name="ns">
			<Description><![CDATA["Выступ"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0.02</Value>
		</Length>
		<Length Name="tdo">
			<Description><![CDATA["Выступ Проступи"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<String Name="bt">
			<Description><![CDATA["Стиль Планки"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value><![CDATA["Сплошная"]]></Value>
		</String>
		<Integer Name="bt_m">
			<Description><![CDATA["Стиль Планки"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>5</Value>
		</Integer>
		<Integer Name="iBottomStepArrangement">
			<Description><![CDATA["Форма Нижней Ступени"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>1</Value>
		</Integer>

		<!-- np: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<String Name="np">
			<Description><![CDATA["Расположение Декоративной Стойки"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
				<ParFlg_Unique/>
			</Flags>
			<Value><![CDATA["Оба"]]></Value>
		</String>
		<Integer Name="np_m">
			<Description><![CDATA["Расположение Декоративной Стойки"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="nps">
			<Description><![CDATA["Размер Декоративной Стойки"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Length Name="nph">
			<Description><![CDATA["Высота Декоративной Стойки"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>1.5</Value>
		</Length>
		<String Name="posthead">
			<Description><![CDATA["Стиль Декоративной Стойки"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value><![CDATA["Пирамида"]]></Value>
		</String>
		<Integer Name="posthead_m">
			<Description><![CDATA["Стиль Декоративной Стойки"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>3</Value>
		</Integer>
		<Integer Name="rail_m">
			<Description><![CDATA["Ограждение"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>

		<!-- bRightRail: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Boolean Name="bRightRail">
			<Description><![CDATA["Ограждение Справа"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<String Name="rightRailType">
			<Description><![CDATA["Тип Ограждения"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Балюстрада Ограждения"]]></Value>
		</String>
		<String Name="ggr">
			<Description><![CDATA["Конструктивные Размеры"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="romr_m">
			<Description><![CDATA["Способ Ориентации Ограждения"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="hrr">
			<Description><![CDATA["Высота Ограждения"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.8</Value>
		</Length>
		<Length Name="dsr">
			<Description><![CDATA["Расстояние от Лестницы"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Length Name="roffr">
			<Description><![CDATA["Смещение Правого Ограждения"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="OverhangRBottom">
			<Description><![CDATA["Выступ Ограждения Внизу"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="OverhangRTop">
			<Description><![CDATA["Выступ Ограждения Вверху"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<String Name="sgr">
			<Description><![CDATA["Размеры Элементов Ограждения"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Length Name="fthr">
			<Description><![CDATA["Толщина Рамы"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.04</Value>
		</Length>
		<Length Name="ftwr">
			<Description><![CDATA["Ширина Рамы Вверху"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="fswr">
			<Description><![CDATA["Ширина Рамы по Бокам"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Length Name="fbwr">
			<Description><![CDATA["Ширина Рамы Внизу"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="abdistr">
			<Description><![CDATA["Приблизительный Шаг Балясин"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.15</Value>
		</Length>
		<Length Name="fdfr">
			<Description><![CDATA["Расстояние от Рамы до Экрана"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="bhr">
			<Description><![CDATA["Высота Бруска"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Integer Name="btypr_m">
			<Description><![CDATA["Стиль Бруска"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="hrtr">
			<Description><![CDATA["Стиль Поручня"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA["Прямоугольные"]]></Value>
		</String>
		<Length Name="hrdr">
			<Description><![CDATA["Диаметр Поручня"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="hrwr">
			<Description><![CDATA["Ширина Поручня"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="hrhr">
			<Description><![CDATA["Толщина Поручня"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="hror">
			<Description><![CDATA["Выступ Поручня"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.15</Value>
		</Length>
		<Integer Name="ptr_m">
			<Description><![CDATA["Стиль Стойки/Балясины"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="npr">
			<Description><![CDATA["Количество Стоек/Балясин"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>4</Value>
		</Integer>
		<Integer Name="nbtr">
			<Description><![CDATA["Количество Балясин"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>16</Value>
		</Integer>
		<Length Name="pdr">
			<Description><![CDATA["Диаметр Стойки"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.03</Value>
		</Length>
		<Length Name="pwr">
			<Description><![CDATA["Ширина Стоек"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.03</Value>
		</Length>
		<Length Name="pthr">
			<Description><![CDATA["Толщина Стоек"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.03</Value>
		</Length>
		<Integer Name="gs_PostBaseTypeR_m">
			<Description><![CDATA["Тип Основания Стойки"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="gs_PostBaseOverhangR">
			<Description><![CDATA["Выступ Основания Стойки"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Integer Name="btr_m">
			<Description><![CDATA["Стиль Балясин/Брусков"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nbr">
			<Description><![CDATA["Количество Брусков"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>4</Value>
		</Integer>
		<Length Name="bwr">
			<Description><![CDATA["Диаметр Балясины"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.025</Value>
		</Length>
		<Length Name="bthr">
			<Description><![CDATA["Толщина Балясины/Панели"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.025</Value>
		</Length>
		<Length Name="bdr">
			<Description><![CDATA["Диаметр Бруска"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="sbhr">
			<Description><![CDATA["Высота суб-доски"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.15</Value>
		</Length>
		<Length Name="sbhPerpR">
			<Description><![CDATA["Высота суб-доски"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.15</Value>
		</Length>

		<!-- bLeftRail: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Boolean Name="bLeftRail">
			<Description><![CDATA["Ограждение Слева"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<String Name="leftRailType">
			<Description><![CDATA["Тип Ограждения"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Как и Правое"]]></Value>
		</String>
		<Boolean Name="bSameRails">
			<Description><![CDATA["Как и Правое Ограждение"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<String Name="ggl">
			<Description><![CDATA["Конструктивные Размеры"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="roml_m">
			<Description><![CDATA["Способ Ориентации Ограждения"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="hrl">
			<Description><![CDATA["Высота Ограждения"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.8</Value>
		</Length>
		<Length Name="dsl">
			<Description><![CDATA["Расстояние от Перекрытия/Лестницы"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Length Name="roffl">
			<Description><![CDATA["Смещение Левого Ограждения"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="OverhangLBottom">
			<Description><![CDATA["Выступ Ограждения Внизу"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="OverhangLTop">
			<Description><![CDATA["Выступ Ограждения Вверху"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<String Name="sgl">
			<Description><![CDATA["Размеры Элементов Ограждения"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Length Name="fswl">
			<Description><![CDATA["Ширина Рамы по Бокам"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Length Name="fthl">
			<Description><![CDATA["Толщина Рамы/Бруска"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.04</Value>
		</Length>
		<Length Name="ftwl">
			<Description><![CDATA["Ширина Рамы Вверху"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="fbwl">
			<Description><![CDATA["Ширина Рамы Внизу"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="abdistl">
			<Description><![CDATA["Приблизительный Шаг Балясин"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.15</Value>
		</Length>
		<Length Name="fdfl">
			<Description><![CDATA["Расстояние от Рамы до Экрана"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="bhl">
			<Description><![CDATA["Высота Бруска"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Integer Name="btypl_m">
			<Description><![CDATA["Стиль Бруска"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="hrtl">
			<Description><![CDATA["Стиль Поручня"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA["Прямоугольные"]]></Value>
		</String>
		<Length Name="hrdl">
			<Description><![CDATA["Диаметр Поручня"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="hrwl">
			<Description><![CDATA["Ширина Поручня"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="hrhl">
			<Description><![CDATA["Толщина Поручня"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="hrol">
			<Description><![CDATA["Выступ Поручня"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.15</Value>
		</Length>
		<Integer Name="ptl_m">
			<Description><![CDATA["Стиль Стойки/Балясины"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="npl">
			<Description><![CDATA["Количество Стоек/Балясин"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>4</Value>
		</Integer>
		<Integer Name="nbtl">
			<Description><![CDATA["Количество Балясин"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>16</Value>
		</Integer>
		<Length Name="pdl">
			<Description><![CDATA["Диаметр Стойки"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.03</Value>
		</Length>
		<Length Name="pwl">
			<Description><![CDATA["Ширина Стоек"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.03</Value>
		</Length>
		<Length Name="pthl">
			<Description><![CDATA["Толщина Стоек"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.03</Value>
		</Length>
		<Integer Name="gs_PostBaseTypeL_m">
			<Description><![CDATA["Тип Основания Стойки"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="gs_PostBaseOverhangL">
			<Description><![CDATA["Выступ Основания Стойки"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Integer Name="btl_m">
			<Description><![CDATA["Стиль Балясин/Брусков"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nbl">
			<Description><![CDATA["Количество Брусков"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>4</Value>
		</Integer>
		<Length Name="bwl">
			<Description><![CDATA["Диаметр Балясины"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.025</Value>
		</Length>
		<Length Name="bthl">
			<Description><![CDATA["Толщина Балясины/Панели"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.025</Value>
		</Length>
		<Length Name="bdl">
			<Description><![CDATA["Диаметр Бруска"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="sbhl">
			<Description><![CDATA["Высота суб-доски"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.15</Value>
		</Length>
		<Length Name="sbhPerpL">
			<Description><![CDATA["Высота суб-доски"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.15</Value>
		</Length>

		<!-- gs_3D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_3D_representation">
			<Description><![CDATA["3D-отображение"]]></Description>
		</Title>
		<Integer Name="res">
			<Description><![CDATA["Аппроксимация"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>16</Value>
		</Integer>
		<Integer Name="rescs">
			<Description><![CDATA["Аппроксимация Поперечного Сечения"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>8</Value>
		</Integer>
		<Boolean Name="gs_shadow">
			<Description><![CDATA["Отбрасывание Теней"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="AC_show2DHotspotsIn3D">
			<Description><![CDATA["Показ Узловых 2D Точек в 3D"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="ac_bottomlevel">
			<Description><![CDATA["Отметка Низа"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="ac_toplevel">
			<Description><![CDATA["Отметка Верха"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>

		<!-- gs_2D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_2D_representation">
			<Description><![CDATA["2D-отображение"]]></Description>
			<Fix/>
		</Title>
		<Integer Name="gs_detlevel_2D_m">
			<Description><![CDATA["2D-детализация"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="iScaleChangeSM">
			<Description><![CDATA["Простой/Средний Масштаб изменяется в"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>999</Value>
		</Integer>
		<Integer Name="gs_ScaleChangeSM">
			<Description><![CDATA["Простой/Средний Масштаб изменяется в"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>100</Value>
		</Integer>
		<Integer Name="iScaleChangeMD">
			<Description><![CDATA["Средний/Детальный Масштаб изменяется в"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>999</Value>
		</Integer>
		<Integer Name="gs_ScaleChangeMD">
			<Description><![CDATA["Средний/Детальный Масштаб изменяется в"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>50</Value>
		</Integer>

		<!-- Symbol2D: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="Symbol2D">
			<Description><![CDATA["2D-символ"]]></Description>
		</Title>
		<Integer Name="gs_SymbolType_m">
			<Description><![CDATA["Тип 2D-символа"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>11</Value>
		</Integer>
		<Integer Name="iSymbolGroup">
			<Description><![CDATA["Тип Группы Символа"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>6</Value>
		</Integer>
		<Boolean Name="gs_2DTread">
			<Description><![CDATA["Показать Проступи"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_2DTreadAbove">
			<Description><![CDATA["Показать Проступи Выше"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_2DRiserAbove">
			<Description><![CDATA["Показать Подступенки Выше"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_2DContourAbove">
			<Description><![CDATA["Показать Линию Контура Выше"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_2DContourBelow">
			<Description><![CDATA["Показать Линию Контура Ниже"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<PenColor Name="gs_cont_pen">
			<Description><![CDATA["Перо Линий Видимых Конструкций"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>91</Value>
		</PenColor>
		<PenColor Name="gs_DashLinePen">
			<Description><![CDATA["Перо Линий Невидимых Конструкций"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>91</Value>
		</PenColor>
		<LineType Name="solid_line">
			<Description><![CDATA["Тип Линий Видимых Конструкций"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</LineType>
		<LineType Name="dash_line">
			<Description><![CDATA["Тип Линий Невидимых Конструкций"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>4</Value>
		</LineType>
		<LineType Name="gs_NosingLine">
			<Description><![CDATA["Тип Линии Выступа"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>4</Value>
		</LineType>
		<Boolean Name="bShowRailOnFloorPlan">
			<Description><![CDATA["Показать Ограждение на Плане"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<LineType Name="railLineType">
			<Description><![CDATA["Тип Линии Ограждения"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</LineType>
		<PenColor Name="railPen">
			<Description><![CDATA["Перо Ограждения"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>91</Value>
		</PenColor>
		<Boolean Name="bSymbolic2D">
			<Description><![CDATA["Символический 2D"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<String Name="postSymbolType">
			<Description><![CDATA["Тип Символа Стойки"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Тип 1"]]></Value>
		</String>
		<Integer Name="iPostSymbolType">
			<Description><![CDATA["Тип Символа Стойки"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<LineType Name="postLineType">
			<Description><![CDATA["Тип Линии Стойки"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</LineType>
		<PenColor Name="postPen">
			<Description><![CDATA["Перо Линии Стойки"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>23</Value>
		</PenColor>
		<Boolean Name="bShowRailAboveBreakLine">
			<Description><![CDATA["Показать Ограждение выше Линии Разрыва"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="bShowCarriage">
			<Description><![CDATA["Показать Тетиву на Плане Этажа"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<String Name="stShowCarriageUpTo">
			<Description><![CDATA["Показать Тетиву"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["До 1:50"]]></Value>
		</String>
		<Integer Name="iShowCarriageUpTo">
			<Description><![CDATA["Показать Тетиву"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>50</Value>
		</Integer>
		<LineType Name="carriageLineType">
			<Description><![CDATA["Линия Невидимой Тетивы"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</LineType>
		<PenColor Name="carriagePen">
			<Description><![CDATA["Перо Невидимой Тетивы"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>23</Value>
		</PenColor>
		<FillPattern Name="gs_fill_type">
			<Description><![CDATA["Штриховка Фона"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<FillPattern Name="gs_FillTypeAbove">
			<Description><![CDATA["Штриховка Фона"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_fill_pen">
			<Description><![CDATA["Перо Штриховки"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_back_pen">
			<Description><![CDATA["Перо Фона Штриховки"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<Boolean Name="gs_FillAbove">
			<Description><![CDATA["Штриховка Выше Линии Разрыва"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="brk">
			<Description><![CDATA["Линия Разрыва"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Integer Name="breakline_style_m">
			<Description><![CDATA["Стиль Линии Разрыва"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="bSimpleZigZag">
			<Description><![CDATA["Линия Разрыва в виде Простого Зигзага"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_BreakHeight">
			<Description><![CDATA["Расположение Линии Разрыва (Высота)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="brkLineY">
			<Description><![CDATA["Ширина Линии Разрыва"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.2</Value>
		</Length>
		<Integer Name="iLineTypeAboveBreak">
			<Description><![CDATA["Тип Линии выше Линии Разрыва"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="walkl">
			<Description><![CDATA["Показать Линию Всхода"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<LineType Name="gs_wLineType1">
			<Description><![CDATA["Тип Линии"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</LineType>
		<LineType Name="gs_wLineType2">
			<Description><![CDATA["Тип Линии"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>6</Value>
		</LineType>
		<LineType Name="gs_wLineTypeAbove">
			<Description><![CDATA["Тип Линии выше Линии Разрыва"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>6</Value>
		</LineType>
		<PenColor Name="gs_wLinePen">
			<Description><![CDATA["Перо Линии"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>71</Value>
		</PenColor>
		<Integer Name="arrow_style_m">
			<Description><![CDATA["Стиль Стрелки"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>3</Value>
		</Integer>
		<FillPattern Name="gs_ArrowFill">
			<Description><![CDATA["Тип Штриховки Стрелки"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>64</Value>
		</FillPattern>
		<PenColor Name="gs_ArrowFillPen">
			<Description><![CDATA["Перо Штриховки (0 - нет)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_ArrowFillPenAbove">
			<Description><![CDATA["Перо Штриховки Выше (0 - Нет)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</PenColor>
		<Length Name="gs_ArrowHeight">
			<Description><![CDATA["Высота Стрелки"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.2</Value>
		</Length>
		<Length Name="gs_ArrowHalfWidth">
			<Description><![CDATA["Половина Ширины Стрелки"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.2</Value>
		</Length>
		<String Name="gs_StartEndStyle">
			<Description><![CDATA["Символ в Начале"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA["Стиль 1"]]></Value>
		</String>
		<Integer Name="gs_StartEndStyle_m">
			<Description><![CDATA["Символ в Начале"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<FillPattern Name="gs_StartEndFill">
			<Description><![CDATA["Тип Штриховки Символа"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>64</Value>
		</FillPattern>
		<PenColor Name="gs_StartEndFillPen">
			<Description><![CDATA["Перо Штриховки (0 - нет)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</PenColor>
		<Length Name="gs_CircleRadius">
			<Description><![CDATA["Радиус Окружности"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Length Name="gs_StartWidth">
			<Description><![CDATA["Половина Ширины Символа"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_StartHeight">
			<Description><![CDATA["Половина Высоты Символа"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.15</Value>
		</Length>
		<Boolean Name="bShowNumbering">
			<Description><![CDATA["Показать Нумерацию"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="nStartNumbering">
			<Description><![CDATA["Начать Нумерацию с <Номер>"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="gs_NumBelow">
			<Description><![CDATA["Нумерация ниже Линии Разрыва"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_NumAbove">
			<Description><![CDATA["Нумерация выше Линии Разрыва"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<RealNum Name="gs_NumTextSize">
			<Description><![CDATA["Размер Шрифта (мм)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</RealNum>
		<RealNum Name="gs_text_size_pt_num">
			<Description><![CDATA["Размер Шрифта (пт)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2.83</Value>
		</RealNum>
		<PenColor Name="gs_NumTextPen">
			<Description><![CDATA["Перо Текста"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>86</Value>
		</PenColor>
		<Length Name="DirNumText_X">
			<Description><![CDATA["Расположение Нумерации по X"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Length Name="DirNumText_Y">
			<Description><![CDATA["Расположение Нумерации по Y"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<String Name="typeTextRotation_Num">
			<Description><![CDATA["Ориентация Текста в Символе"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Выровнять по Символу"]]></Value>
		</String>
		<Integer Name="typeTextRotation_Num_m">
			<Description><![CDATA["Ориентация Текста в Символе"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Boolean Name="bShowRiseAndRunText">
			<Description><![CDATA["Текст Подступенков и Проступей"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<String Name="gs_RiseRunText">
			<Description><![CDATA["Текст"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Кол-во x Подступенок = Высота Марша"]]></Value>
		</String>
		<Integer Name="iRiseRunText">
			<Description><![CDATA["Текст"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="gs_CustomText1">
			<Description><![CDATA["Специальный Текст_1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Специальный Текст_1"]]></Value>
		</String>
		<String Name="gs_CustomText2">
			<Description><![CDATA["Специальный Текст_2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Специальный Текст_2"]]></Value>
		</String>
		<String Name="gs_customText_rise">
			<Description><![CDATA["Текст Подступенка"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["П"]]></Value>
		</String>
		<RealNum Name="fontsize">
			<Description><![CDATA["Размер Шрифта (мм)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</RealNum>
		<RealNum Name="gs_text_size_pt">
			<Description><![CDATA["Размер Шрифта (пт)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2.83</Value>
		</RealNum>
		<PenColor Name="gs_text_pen">
			<Description><![CDATA["Перо Текста"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>86</Value>
		</PenColor>
		<Boolean Name="bUseACLinearUnit">
			<Description><![CDATA["Единицы Измерения Рабочей Среды Проекта"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="DirRiseRunText_X">
			<Description><![CDATA["Текст Подступенков и Проступей по X"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="DirRiseRunText_Y">
			<Description><![CDATA["Текст Подступенков и Проступей по Y"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.8</Value>
		</Length>
		<Angle Name="DirRiseRunAngle">
			<Description><![CDATA["Угол Поворота Текста Подступенков и Проступей"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<String Name="typeTextRotation_RiseRun">
			<Description><![CDATA["Ориентация Текста в Символе"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Читаемый"]]></Value>
		</String>
		<Integer Name="typeTextRotation_RiseRun_m">
			<Description><![CDATA["Ориентация Текста в Символе"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<String Name="walkingDirUPDN">
			<Description><![CDATA["Размер Текста ВВЕРХ/ВНИЗ"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA["Нет"]]></Value>
		</String>
		<Integer Name="walkingDirUPDN_m">
			<Description><![CDATA["Размер Текста ВВЕРХ/ВНИЗ"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<RealNum Name="UPDNfontsize">
			<Description><![CDATA["Размер Текста ВВЕРХ/ВНИЗ (мм)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</RealNum>
		<RealNum Name="gs_text_size_pt_UpDn">
			<Description><![CDATA["Размер Текста ВВЕРХ/ВНИЗ (точки)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>5.66</Value>
		</RealNum>
		<PenColor Name="UPDNfontpen">
			<Description><![CDATA["Текст ВВЕРХ/ВНИЗ"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>86</Value>
		</PenColor>
		<Length Name="DirUPDN_X">
			<Description><![CDATA["Расположение Текста ВВЕРХ/ВНИЗ по Х"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="DirUPDN_Y">
			<Description><![CDATA["Расположение Текста ВВЕРХ/ВНИЗ по Y"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>-0.25</Value>
		</Length>
		<Angle Name="AngUPDN">
			<Description><![CDATA["Угол Текста ВВЕРХ/ВНИЗ"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<String Name="typeTextRotation_UpDn">
			<Description><![CDATA["Ориентация Текста в Символе"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Выровнять по Символу"]]></Value>
		</String>
		<Integer Name="typeTextRotation_UpDn_m">
			<Description><![CDATA["Ориентация Текста в Символе"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<String Name="fontType">
			<Description><![CDATA["Тип Шрифта"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA["Arial"]]></Value>
		</String>
		<Boolean Name="bShowRailAxis">
			<Description><![CDATA["Показать Ось Ограждения"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<LineType Name="railAxisLineType">
			<Description><![CDATA["Тип Линии Оси Ограждения"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>6</Value>
		</LineType>
		<PenColor Name="gs_RailAxisPen">
			<Description><![CDATA["Перо Линии Оси Ограждения"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>71</Value>
		</PenColor>
		<Boolean Name="gs_StorySensitive">
			<Description><![CDATA["Зависит от Этажа"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- gs_AboveHomeStory: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_AboveHomeStory">
			<Description><![CDATA["2D выше Собственного Этажа"]]></Description>
		</Title>
		<Boolean Name="gs_BreaklineStUp">
			<Description><![CDATA["Линия Разрыва"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_LowerPartStUp">
			<Description><![CDATA["Нижняя Часть"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_UpperPartStUp">
			<Description><![CDATA["Верхняя Часть"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_TreadStUp">
			<Description><![CDATA["Показать Проступи"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<LineType Name="gs_LineTypeStUp">
			<Description><![CDATA["Тип Линии"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</LineType>
		<PenColor Name="gs_LinePenStUp">
			<Description><![CDATA["Перо Линии"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>71</Value>
		</PenColor>
		<LineType Name="gs_wLineTypeStUp">
			<Description><![CDATA["Тип Линии Всхода"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</LineType>
		<Boolean Name="gs_numaStUp">
			<Description><![CDATA["Показать Нумерацию"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_txStUp">
			<Description><![CDATA["Текст Подступенков и Проступей"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- gs_section_attributes: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_section_attributes">
			<Description><![CDATA["Реквизиты Сечения"]]></Description>
		</Title>
		<PenColor Name="penLineStringer">
			<Description><![CDATA["Перо Контура Сечения Тетивы"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>29</Value>
		</PenColor>
		<Integer Name="penLineStringer_m">
			<Description><![CDATA["Перо Контура Сечения Тетивы"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>29</Value>
		</Integer>
		<FillPattern Name="typeFillStringer">
			<Description><![CDATA["Штриховка Сечения Тетивы"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>24</Value>
		</FillPattern>
		<PenColor Name="penFillStringer">
			<Description><![CDATA["Перо Штриховки Сечения Тетивы"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>109</Value>
		</PenColor>
		<Integer Name="penFillStringer_m">
			<Description><![CDATA["Перо Штриховки Сечения Тетивы"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>109</Value>
		</Integer>
		<PenColor Name="penBackFillStringer">
			<Description><![CDATA["Перо Фона Штриховки Сечения Тетивы"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</PenColor>
		<Integer Name="penBackFillStringer_m">
			<Description><![CDATA["Перо Фона Штриховки Сечения Тетивы"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<PenColor Name="penLineTread">
			<Description><![CDATA["Перо Контура Сечения Проступи"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</PenColor>
		<Integer Name="penLineTread_m">
			<Description><![CDATA["Перо Контура Сечения Проступи"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<FillPattern Name="typeFillTread">
			<Description><![CDATA["Штриховка Сечения Проступи"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>23</Value>
		</FillPattern>
		<PenColor Name="penFillTread">
			<Description><![CDATA["Перо Штриховки Сечения Проступи"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>109</Value>
		</PenColor>
		<Integer Name="penFillTread_m">
			<Description><![CDATA["Перо Штриховки Сечения Проступи"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>109</Value>
		</Integer>
		<PenColor Name="penBackFillTread">
			<Description><![CDATA["Перо Фона Штриховки Сечения Проступи"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>-1</Value>
		</PenColor>
		<Integer Name="penBackFillTread_m">
			<Description><![CDATA["Перо Фона Штриховки Сечения Проступи"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>-1</Value>
		</Integer>
		<PenColor Name="penLineRiser">
			<Description><![CDATA["Перо Контура Сечения Подступенка"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</PenColor>
		<Integer Name="penLineRiser_m">
			<Description><![CDATA["Перо Контура Сечения Подступенка"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<FillPattern Name="typeFillRiser">
			<Description><![CDATA["Штриховка Сечения Подступенка"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>23</Value>
		</FillPattern>
		<PenColor Name="penFillRiser">
			<Description><![CDATA["Перо Штриховки Сечения Подступенка"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>109</Value>
		</PenColor>
		<Integer Name="penFillRiser_m">
			<Description><![CDATA["Перо Штриховки Сечения Подступенка"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>109</Value>
		</Integer>
		<PenColor Name="penBackFillRiser">
			<Description><![CDATA["Перо Фона Штриховки Сечения Подступенка"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>-1</Value>
		</PenColor>
		<Integer Name="penBackFillRiser_m">
			<Description><![CDATA["Перо Фона Штриховки Сечения Подступенка"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>-1</Value>
		</Integer>
		<PenColor Name="penLineSoffit">
			<Description><![CDATA["Перо Контура Сечения Софита"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</PenColor>
		<Integer Name="penLineSoffit_m">
			<Description><![CDATA["Перо Контура Сечения Софита"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<FillPattern Name="typeFillSoffit">
			<Description><![CDATA["Штриховка Сечения Софита"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>23</Value>
		</FillPattern>
		<PenColor Name="penFillSoffit">
			<Description><![CDATA["Перо Штриховки Сечения Софита"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>109</Value>
		</PenColor>
		<Integer Name="penFillSoffit_m">
			<Description><![CDATA["Перо Штриховки Сечения Софита"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>109</Value>
		</Integer>
		<PenColor Name="penBackFillSoffit">
			<Description><![CDATA["Перо Фона Штриховки Сечения Софита"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>-1</Value>
		</PenColor>
		<Integer Name="penBackFillSoffit_m">
			<Description><![CDATA["Перо Фона Штриховки Сечения Софита"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>-1</Value>
		</Integer>

		<!-- WoodenStra_sp3: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="WoodenStra_sp3">
			<Description><![CDATA["Покрытия"]]></Description>
		</Title>
		<Material Name="mat_tread">
			<Description><![CDATA["Проступь"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="mat_riser">
			<Description><![CDATA["Подступенок"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="matstr">
			<Description><![CDATA["Тетива"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="matsoff">
			<Description><![CDATA["Софит"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="matnp">
			<Description><![CDATA["Декоративная Стойка"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="pmatr">
			<Description><![CDATA["Стойка Справа"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="fmatr">
			<Description><![CDATA["Рама Справа"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="bmatr">
			<Description><![CDATA["Балясина/Панель Справа"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="pmatl">
			<Description><![CDATA["Стойка Слева"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="fmatl">
			<Description><![CDATA["Рама Слева"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="bmatl">
			<Description><![CDATA["Балясина/Панель Слева"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Integer Name="hrtr_m">
			<Description><![CDATA["Стиль Поручня Справа"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="hrtl_m">
			<Description><![CDATA["Стиль Поручня Слева"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="bth">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="fth">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="bh">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="bd">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="hrd">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="hrw">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="hrh">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="pw">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="bw">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="sbh">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_PostBaseOverhang">
			<Description><![CDATA["Выступ Основания Стойки"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="temp_OverhangRBottom">
			<Description><![CDATA["Выступ Ограждения Внизу"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="temp_OverhangRTop">
			<Description><![CDATA["Выступ Ограждения Вверху"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="temp_OverhangLBottom">
			<Description><![CDATA["Выступ Ограждения Внизу"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="temp_OverhangLTop">
			<Description><![CDATA["Выступ Ограждения Вверху"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Angle Name="gs_readable_angle">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>90</Value>
		</Angle>
		<Integer Name="rightRailType_m">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="leftRailType_m">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>12</Value>
		</Integer>

		<!-- ifc_Title: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="ifc_Title">
			<Description><![CDATA["IFC2x3 Набор Свойств для Лестниц"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
		</Title>
		<Integer Name="ifc_StairType">
			<Description><![CDATA["Тип Лестницы"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="ifc_NumberOfRiser">
			<Description><![CDATA["Количество Подступенков"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="ifc_NumberOfTreads">
			<Description><![CDATA["Количество Проступей"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Length Name="ifc_RiserHeight">
			<Description><![CDATA["Высота Подступенка"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ifc_TreadLength">
			<Description><![CDATA["Длина Проступи"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0</Value>
		</Length>

		<!-- gs_list: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_list">
			<Description><![CDATA["Параметры Спецификаций"]]></Description>
			<Fix/>
		</Title>
		<RealNum Name="gs_list_cost">
			<Description><![CDATA["Цена"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="gs_list_manufacturer">
			<Description><![CDATA["Производитель"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_note">
			<Description><![CDATA["Примечания"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_location">
			<Description><![CDATA["Расположение"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_accessories">
			<Description><![CDATA["Аксессуары"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_soundinsul">
			<Description><![CDATA["Звукоизоляция"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_Type">
			<Description><![CDATA["Тип Группы"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Лестницы"]]></Value>
		</String>
		<Integer Name="iFMType">
			<Description><![CDATA["Тип Группы"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>6</Value>
		</Integer>
		<String Name="FM_InventoryNumber">
			<Description><![CDATA["Инвентарный Номер"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_SerialNumber">
			<Description><![CDATA["Серийный Номер"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_ProductionYear">
			<Description><![CDATA["Год Производства"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<RealNum Name="FM_ObjectWeight">
			<Description><![CDATA["Вес Изделия"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="FM_ObjectWeightUnit">
			<Description><![CDATA["Единица Веса"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["кг"]]></Value>
		</String>
		<RealNum Name="FM_Stories">
			<Description><![CDATA["Кол-во Этажей"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<RealNum Name="FM_HalfLandings">
			<Description><![CDATA["Кол-во Промежуточных Площадок"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<RealNum Name="FM_LevelHeight">
			<Description><![CDATA["Высота Уровня"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<RealNum Name="FM_HeadRoom">
			<Description><![CDATA["Высота Помещения"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="FM_BearingStructure">
			<Description><![CDATA["Несущая Конструкция"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<RealNum Name="FM_BearingCapacity">
			<Description><![CDATA["Несущая Способность"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<Boolean Name="FM_SmokeFree">
			<Description><![CDATA["Незадымляемая Лестница"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<RealNum Name="FM_StepsLength">
			<Description><![CDATA["Длина Проступей"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="FM_MaterialFootstep">
			<Description><![CDATA["Покрытие Проступей"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_MaterialStairRailing">
			<Description><![CDATA["Покрытие Ограждения"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_MaterialHandhold">
			<Description><![CDATA["Покрытие Поручней"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom1">
			<Description><![CDATA["Пользовательское Значение 1"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom2">
			<Description><![CDATA["Пользовательское Значение 2"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom3">
			<Description><![CDATA["Пользовательское Значение 3"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom4">
			<Description><![CDATA["Пользовательское Значение 4"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom5">
			<Description><![CDATA["Пользовательское Значение 5"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="LibraryLangCode">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value><![CDATA["RUS"]]></Value>
		</String>
		<Integer Name="gs_ui_current_page">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>

		<!-- gs_onorm_Title: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_onorm_Title">
			<Description><![CDATA["Дополнительные Параметры Спецификаций"]]></Description>
			<Fix/>
		</Title>
		<String Name="gs_onorm_treadnumber">
			<Description><![CDATA["Количество Ступеней"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_treadriser">
			<Description><![CDATA["Глубина Проступи / Высота Подступенка"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_person">
			<Description><![CDATA["Количество Людей"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_bardist_auto">
			<Description><![CDATA["Значение Чистой Ширины между Прутьями Ограждения"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_bardist">
			<Description><![CDATA["Чистая Ширина между Прутьями Ограждения"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_botlevheight_auto">
			<Description><![CDATA["Значение Отметки Нижнего Уровня"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_botlevheight">
			<Description><![CDATA["Отметка Нижнего Уровня"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_toplevheight_auto">
			<Description><![CDATA["Значение Отметки Верхнего Уровня"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_toplevheight">
			<Description><![CDATA["Отметка Верхнего Уровня"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_construction">
			<Description><![CDATA["Конструкция"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_soundinsul">
			<Description><![CDATA["Звукоизоляция"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_mat1">
			<Description><![CDATA["Дополнительный Материал 1"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_finish1_value">
			<Description><![CDATA["Значение Отделки 1"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_finish1">
			<Description><![CDATA["Отделка 1"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_customtext1">
			<Description><![CDATA["Дополнительная Информация 1"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_customtext2">
			<Description><![CDATA["Дополнительная Информация 2"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_aks">
			<Description><![CDATA["Номер AKS"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_product">
			<Description><![CDATA["Продукт"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_leistungbuch">
			<Description><![CDATA["Коллекция ID Спецификаций"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_description">
			<Description><![CDATA["Дополнительное Описание"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_number">
			<Description><![CDATA["Дополнительный Номер"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_id">
			<Description><![CDATA["Номер ID"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_admission">
			<Description><![CDATA["Дата Приема"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_modification">
			<Description><![CDATA["Дата Изменения"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_tozonenumber">
			<Description><![CDATA["Номер Зоны"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
	</Parameters>
</ParamSection>

<CalledMacros SectVersion="2" SectionFlags="0" SubIdent="0">
	<Macro>
		<MName><![CDATA["Stair_RiseRun_Text"]]></MName>
		<MainGUID>E42F5F06-4225-4F32-A64C-ADCF1D4F9EDC</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["railSymbol2D_m"]]></MName>
		<MainGUID>C5C904E6-1706-4CD1-BC8D-6C294B5B40F7</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["stairRails_m"]]></MName>
		<MainGUID>4A3DDA4A-B43E-4039-B45A-463905CF42AD</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["ui_stairs"]]></MName>
		<MainGUID>D8D2E274-0A82-4EF4-845A-78AD6980E72F</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["FM_types"]]></MName>
		<MainGUID>2759D2DF-AA8E-44D1-AD1D-261581266B34</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["Onorm_Stair"]]></MName>
		<MainGUID>F021AF23-E4F7-4961-964D-C9BCAFB786DD</MainGUID>
	</Macro>
</CalledMacros>

<Picture MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="0" length_in_bytes="3451" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D494844520000007F0000
	007F0803000000F163ED2100000102504C5445FFFFFFB2935374633A725D3393
	7A44AC8B4B7C6A42AB8E508B7342826B3CB08D4CB49C61C3A25B9C824BB3904E
	DBD6CC6E5A31C3A561C29C54AD9052816D42BCA262948464B9B19CB8AE998D7D
	5BCAC2B39B855292743DDDD9D0B18E5070592ED2B26D8B713EF0F0EEA99D83EE
	EDEBE6E1D99D8E71A6987EC3954CC3BCAAD4B97CD3CEC1907D5AD2AD63BDA05E
	A191698F8160D1AB5DD9BD83EADDC1EBD6ACBDB4A1D9C28CE5DFD8F0EEEDA07D
	42ADA18AD2CBBEF0ECDCD7B15DB0A48CAE904E6F582ED5C8A9EBDAB2E7C98CCD
	B16C9E9073EACA7BDAC391936E38CEB273BCA976C7B998EDE2BDE8CE9BEDE4C3
	E9D19CCFAF70E5CCA2C5AF80A18C638F805DDED5BAF32B5E1600000C2A494441
	54785EC59B6592244B9284430D1C8231998AB199B91F0E2EC2FDAFB2E191B222
	6F76FE9677691EE0132B575183CC4A22EA34795CBDFEE951F1FFAAF3C7C49F36
	FBC523E2DF7F71F523F24F6FD76FF811F9FF22C9C22C1ECF7B76992CEA47E35F
	E4AB5932E7C7E2BF7F7B96CC1EAFFED3B7DD3C79C4FAFFAD481623FFCD3FD57F
	DAFC90D84DEF8EFC7FF2FFADFF11DE6B97D5C8BF4C16B4FA7FFD40F80778EFF0
	715E25E1FDCDD93F027EEE78FF03BC373EFEC45F2EAB8B3F023EB72BE6F8DEB3
	8B64AAFF9E2EFA3FF6BFF3E62A31141BFF73F7EEC85F7175FFC7FC79FF52E609
	D5B163B75D2413FF8A6FCE68ECBFD5F26FE7C77E50DCCD93D87FFFCFB7B3C05F
	54E77CF58988CF66F464187E3A1DFB012EB68B8423D77FFB5FD5B1FED9B22226
	A67D7E381CF2BFBEBA689E275574FE9FECE9C45FCCDC454F445A6ED22F5FBE1C
	7E1DF2AB45E0C7F5FFDFB10C9079B2A0ED7F1309BAAC4C37E58B2F87C3E6E93A
	B95B246462E65EB33AF22F82F758530019548BEB2F9BCDA1C8BECEA3F2DF1FD6
	C92CF017747643CC5C20285305AEDD97EE80D90D55F1F0B77636F2B7F3C4DD57
	01AFD80025BAAC6D371BFFE2DB21776457F1E63D3D7F9EFC9654F333B3ED89FB
	A2CB9BB2284B2D6FBD2D4FE4E44BBE2F2CFF741A29F7C6D242FDD53DDDCDC8AC
	3B00659E175AE64ED79987A83FB926CE86FF89123CF9729B5C8EFC3BBA3963B6
	C89E01E9082F5F145A684710474A7B3E1C6416E3F1CFE655A8FF7D7F76C37B32
	6B6000342D73259122F59963F5B4A7D2D3C5C3F7DCDFFB64BE0DFCD932C42EDB
	ACE8B20C28CB5C4E5A1178257135D19EF6112CF8CB6C9D2CA6FAA9EA99BC00B9
	AEBB0178E14AD2543F90714244CCFBAB18DEBB984DFC15DDDD1B124D7765F934
	5F174F0F4E3A9F8ACDA91726C3CCCB18BBC6D7306C57C99242EE59A43AEA1B72
	0C85956CE4ABF7209E3EE711726F369FF8E7F4F186C91801543B55CDB53891C6
	A3EB593D8F227AF7E0F8F35F9E55D3B05B2DD79F88B9D6562CAC7669794DDFE0
	C4C192F41C44AB18BB46554DF52FCD76A49020CB77B2EBCA34DF6CB4281AB2B5
	576262E6B318F3DE65F52AF0BFF2A71991A429B2167931B65DAF1B51817324C4
	860D2F63CC7BAB45B57D93CCB6C17B6401688A0C0DF28D2FC5AE252542CFA61E
	3F51BC97BCD98EEF3F735737C4C614D8295200B73BF590429DF207C7756D4CFD
	F0DE3BFDE559305EB5385F2EEF88996C2669FA214DD33677709DB7D6D5E28999
	EA7A15A1E71649089EED62ECB98ED9AFD1362A23BE6C5C91B97C2D3D3B2162E6
	3A82F7FEDE5513BF5AD2A7E78605C880BCDD6CAE5F4871A21E829EC4333147F1
	DE70564DC173C73767A6B6BB1DA6A6F3E41A05E4C47A48DFC3B361E618DE6B16
	D554FF6AECB94453FDBB0E59B6CB4BDAA8689F3A53F89088751D21F77EF7C9C4
	9F9BD91D111B4090AAEDD0E4E21B71E895C487A7678EE1BDF5FD917F65AA9ED9
	089A4605658AC388868A1239211E6562E45E76310BFCCB1BFA3463966E972A5A
	147A9D8B87834ACEF48199E378EFF3D3AFC9C43763EEED4991013BB5698B5641
	70CF541CC1D3A818DE3BFD75117A5E15F6DC1B223216C178D66A6E4504942AB1
	ED8F234784DCBBFDEB74E0AA3EDD8FB9370A1000197668C9E6A40EC222CC6C4C
	94DC93E38169BB3655BFE75ED2A6B11B00684504AE25A580AF4D1D23F75EEFAE
	AAA9FE9B7AF4DE5E904127F7B7B72799A8F538F15EC830D714C17BA758CD27FE
	3BBAF9486C33002980A6698ADE3A8B1E9EE0899963F4DCCF4FAE92C5C47721F7
	C8DB2C830D4D2FEF2CA522592F6469B29E89E0BDB7578BC09F9F2F9FDF9121C6
	334186324DAF71D278F53B785A7B0EFC3AC6BCF7EC74E2879EBBAC0D15C89B6E
	3D0068BD28356BA7B52B88994C14EFE9480FFC25DFCDBE936809A0C944DB179B
	D073B58021E5A0FA3242CFC5D5F1C0554DBB86EA6EA7E5B72ECBD1CAA04E3D5C
	4F200E5A46E8B94FBE4E07A637ABE03D662FA55AD50E683A276B419F6E487A62
	2236DB08DE3B4926FEC22DB701825446BA5A45BE2E9AC2E1C4D6226C884D8C9E
	FBBA5B26D57CE45F9AF39E0C5934F907E9C29A7F02C93AB144AEE0C9FB517AEE
	BBCBC05FDC50B56416ED06A08128DA4D5F4A6965A0BD3033B199C598F766C703
	DB15ADCEF6B5450A3C1B9037692B65AF528A388F7ECABD6584DC6B169713FF9C
	B215337B0B94E534F2AA6C36102899A267A228B997BCCCA603D7ABB3FBD93640
	D2A218F91A72DFE109C93AB32412E81CA7E76E27FEB63717BD612AB236D7354A
	2D9BF5DAC2B5AE98760D136BCFFDEDC87F63B63332F71900B4D00E2FBCB5EBAC
	1FAC3F8EBB663F8B725B9E0E4C9715AD3E322990658096D769BEF12ADAB9678E
	10F06C2278EFF440C9F1C067CE82F7C8E25B3784A6D7AA12AC8094EC848F927B
	B7D974E0BA1CF7DCE9B61C88E832A02D4FCA93B5604724C24C1C67D7B0E1E147
	FF7DA4E97B0D49F366AD009EE6223B0FED0B1661326CBE2FE2F4DCCB503FD1AB
	69CF4D9196396C91FF2A99D83E55F5A414F81C23F770B9489E278BEDAB31F7D8
	7419D2D4DA1279F9D429D6F0104F29EDC3B81BA3E71EE6AF16D39E3B79AFEE9F
	35805A5B6A5E3A07811F84F578E48832EFB96A3BF1CD6CCBCC94C10D03ACA668
	45BA42E095AD238A74DFFBE5D9D723FFB7FEC2186641D314C5002077E5465B11
	229168F7BDD7B85854D5C8BFA1EDD2B0A00CE4416CF3427C2A02C9BDB1CC8623
	796F961CF9667546C6E2A8A74DD714D9C8B7903F130C8F9F7D1F65DE3BF2CF5D
	B82D53AF405A96698943E7373E731686B567AE4D945DE3F62A39F29F3FDF1213
	436507D5B06B386DF67A6F3B92131E559B18BBC66671E41B73D133B3CD5A8886
	FB5E2E858383B7E48B63EC7E7CC066F75375F45E76335DB6B737BC9D316DD021
	6B01D1F4854F0B419F0B11C830D1837AEFF5AD3B7A6F355DF6E70B5E5D11EDB0
	B34086364FAFFFECB510F57006348D1CE641F33E0FD55CB83E992EFB0BBABA61
	32A4D84DF73D3C493754EA49EA85749A381EF8C4F35A47FEB9BB9C4DFCF7F7F7
	15EDC94005E854BB6638B9F6B2111049C0D3437BEF36A524B95C9E5F2621783E
	D22BC34C82B6115504EF39F479EA9545A7DCA9170F3CE916FB64D1CF8FC33ED1
	BBA5611F36FCB2E9C29E5BC0C0C10AD107E2A0E7C9C3EAAD7E5F99D5915F4DDE
	931418B053345DB0BF8787250F36A1FC07CFBDB7EBDA9D1D0F6C57FDD91B36EC
	15E80600C8F544E0530F319DA7DA70849EFBD69A7A7EE4D3AC6222DA6981E375
	BFFC20563C9C1A714C4CE6FBC3E7DECBA2AE17D381EFA379454C54A041019468
	72C246735F1039E1C9FB8B24027F4FE1CA71197A2EB3200390A3F856DE163E13
	856B3C173CE93289C0D7FD38C6BE4966B4BA620A8993639396ADE69AFA7269E1
	85115287D99CC7E00BF3F8FE17E66CCE4CAEC3F097DF0B29CBCD86D4A9AC3366
	F544C4C6BC8BF3332636F3E4EB785B0E94AC28BA016EC4D38982D6A2960BC723
	3CECB951F8EBE07FEA2B579311347981DC97EA37E1C0032FC60B3133C5FA79F3
	DBA2E6C59CAB59CDB20380A629BFABA762E4532B869578CFA67E9EC4D1CB0DD7
	CBD17BC4D034450AE4291B23D69EA84F3D8189A61B4B2CBE8659FA6F340A48D3
	4E01D464C95AC1D4730D31336D23E1A7FC99DD0548AA27A5D50E7966EAC69ABE
	80A3A267327FD87363F8AF76DB9E8D97A18514484B800892596F8FBB06C5D835
	FE98FFDBA5A9DD0E18867C278A167B86582BFF37729859124F2FD7F5A5E10C29
	006439549006BE58EAC141C17BF1F417AD99D9033B040D6D8B72E4AFAD63DB13
	FFE37D2F52FE32756B49479540B8B4B169C5B17A0AE29BB83F23D5907B433388
	5CA7A3D0FD3B4CED84DCC971D15C2451F552F91E5986B649E51B4A5520ABEB96
	58794F6C28A6F78EF9DF95C7035FDBAAA0D30E60769CF228E2A8DE4B3E5F5CBC
	2C1C82860CC8F362835D5E724DB667C391BD77FA9F788AB65051001D06A46872
	D15C9945883866EE055D60E89E222D5B88850219A0436375C74E988FB7E5983A
	4536845563875C0528C323A469D30C741F9CC71CDB7B6D0E3C45A94079FDA168
	0120031A1007993E89AC97CDA1C100A845795D8A2268008E78739EC4D6EBA6F9
	15D9002DD3B26CB1064AA0C19E8EDF6BC4D7E99FF2BCC50020A46FAB6BB400F6
	6C42EEFD107D3EB4D739B201690AA0B5C5D086E8A1CBE447E9E7C3759363389A
	AF8564308697C98FD3E97FE47983E08306BBB6CD070AB9F723F5FE25261F6440
	3ACD3F773FFC5F189FB47983C04FA17E91FC78BD7EF2E430D940A1AF9247D0FB
	9F9E348736CBA076953C8ACEDF8E2EC8A175F258FAF9F6FA3AF5DF9347D3FBD7
	B76516CDFDFF0BCFEEFE9B668EE41C0000000049454E44AE426082
	]]>
</Picture>

<Copyright SectVersion="1" SectionFlags="0" SubIdent="0">
	<Author>GRAPHISOFT</Author>
	<License>
		<Type>CC BY-ND</Type>
		<Version>3.0</Version>
	</License>
</Copyright>

</Symbol>
