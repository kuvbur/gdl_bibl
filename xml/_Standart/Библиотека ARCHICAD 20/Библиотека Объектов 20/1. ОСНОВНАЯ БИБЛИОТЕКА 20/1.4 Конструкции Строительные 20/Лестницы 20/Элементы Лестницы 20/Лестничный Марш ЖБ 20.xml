<?xml version="1.0" encoding="UTF-8"?>
<Symbol IsArchivable="true" IsPlaceable="true" MainGUID="8C4B0C8D-F69C-4AD3-9313-C3AC4AD13BA1" MigrationValue="Normal" Owner="1196638531" Signature="1196644685" Version="43">
<Ancestry SectVersion="1" SectionFlags="0" SubIdent="0" Template="false">
	<MainGUID>F938E33A-329D-4A36-BE3E-85E126820996</MainGUID>
	<MainGUID>103E8D2C-8230-42E1-9597-46F84CCE28C0</MainGUID>
	<MainGUID>784EAEA1-5041-4AA6-B6F4-EF263A891EE7</MainGUID>
	<MainGUID>57B7C584-5C0D-11D6-A0D8-036F034B6792</MainGUID>
</Ancestry>

<MigrationTable SectVersion="1" SectionFlags="0" SubIdent="0">
	<MigrationTableElement>
		<MainGUID>28AA88ED-DA6F-4B35-8CA1-FBD85A9F3E03</MainGUID>
		<Version>19</Version>
		<Name><![CDATA[""]]></Name>
		<AutoMigration>true</AutoMigration>
	</MigrationTableElement>
</MigrationTable>

<ParamSection SectVersion="22" SectionFlags="0" SubIdent="0">
	<ParamSectHeader>
		<AutoHotspots>false</AutoHotspots>
		<StatBits>
			<STBit_UIDefault/>
			<STBit_FixSize/>
			<STBit_UIUseHierarchicalPages/>
		</StatBits>
		<WDLeftFrame>0</WDLeftFrame>
		<WDRightFrame>0</WDRightFrame>
		<WDTopFrame>0</WDTopFrame>
		<WDBotFrame>0</WDBotFrame>
		<LayFlags>65535</LayFlags>
		<WDMirrorThickness>0</WDMirrorThickness>
		<WDWallInset>0</WDWallInset>
	</ParamSectHeader>
	<Parameters>
		<Length Name="A">
			<Description><![CDATA["Размер 1"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Unique/>
			</Flags>
			<Value>1.2</Value>
		</Length>
		<Length Name="B">
			<Description><![CDATA["Размер 2"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Unique/>
			</Flags>
			<Value>4.96</Value>
		</Length>
		<Length Name="ZZYZX">
			<Description><![CDATA["Высота"]]></Description>
			<Fix/>
			<Value>3.1</Value>
		</Length>
		<Integer Name="gs_detlevel_3D_m">
			<Description><![CDATA["3D"]]></Description>
			<Value>2</Value>
		</Integer>
		<Boolean Name="cfs">
			<Description><![CDATA["Вызов как Макрос из Лестницы"]]></Description>
			<Flags>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="ad">
			<Description><![CDATA["Ступени Вычисляются на основе Высоты Лестницы"]]></Description>
			<Flags>
				<ParFlg_Unique/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Integer Name="iCalculationMode">
			<Description><![CDATA["Способ Вычисления"]]></Description>
			<Flags>
				<ParFlg_Unique/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="gs_structure_landing_m">
			<Description><![CDATA["Тип Лестницы"]]></Description>
			<Flags>
				<ParFlg_Unique/>
			</Flags>
			<Value>1</Value>
		</Integer>

		<!-- RCStraight_sp0: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="RCStraight_sp0">
			<Description><![CDATA["Параметры Марша"]]></Description>
		</Title>
		<Integer Name="firstTreadLevel_m">
			<Description><![CDATA["Уровень Первой Ступени"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="topTreadLevel_m">
			<Description><![CDATA["Уровень Верхней Ступени"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="flw">
			<Description><![CDATA["Ширина Марша"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1.2</Value>
		</Length>
		<Integer Name="iUpperJunctionType">
			<Description><![CDATA["Тип Стыка Вверху"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="iLowerJunctionType">
			<Description><![CDATA["Тип Стыка Внизу"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Length Name="sst">
			<Description><![CDATA["Толщина Плиты Лестницы"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0.212</Value>
		</Length>
		<Length Name="lst2">
			<Description><![CDATA["Толщина Плиты Внизу"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0.25</Value>
		</Length>
		<Length Name="lst">
			<Description><![CDATA["Толщина Плиты Вверху"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0.25</Value>
		</Length>
		<Length Name="ljl">
			<Description><![CDATA["Длина Соединения Внизу"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0.4</Value>
		</Length>
		<Length Name="ljh">
			<Description><![CDATA["Высота Соединения Внизу"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Length Name="ujl">
			<Description><![CDATA["Длина Соединения Вверху"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0.2</Value>
		</Length>
		<Length Name="ujh">
			<Description><![CDATA["Высота Соединения Вверху"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<String Name="fst">
			<Description><![CDATA["Тип Секции Марша"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value><![CDATA["без Косоура"]]></Value>
		</String>
		<Integer Name="iFlightSectionType">
			<Description><![CDATA["Тип Секции Марша"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="rfthickness">
			<Description><![CDATA["Толщина Армирования"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="beamx">
			<Description><![CDATA["Размер Балки по Горизонтали"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0.2</Value>
		</Length>
		<Length Name="beamy">
			<Description><![CDATA["Размер Балки по Вертикали"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0.15</Value>
		</Length>

		<!-- noseType: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<String Name="noseType">
			<Description><![CDATA["Размеры Подступенков и Проступей"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
				<ParFlg_Unique/>
			</Flags>
			<Value><![CDATA["Обычные"]]></Value>
		</String>
		<Integer Name="iNoseType">
			<Description><![CDATA["Размеры Подступенков и Проступей"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="tproj">
			<Description><![CDATA["Проекция Проступи"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.025</Value>
		</Length>
		<Integer Name="rnu">
			<Description><![CDATA["Количество Подступенков"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>18</Value>
		</Integer>
		<Length Name="thd">
			<Description><![CDATA["Две Высоты Подступенка + Проступь"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0.62</Value>
		</Length>
		<Length Name="td">
			<Description><![CDATA["Глубина Ступени"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0.275555555556</Value>
		</Length>
		<Length Name="pth">
			<Description><![CDATA["Предпочтительная Высота Ступени"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0.172222222222</Value>
		</Length>
		<Length Name="th">
			<Description><![CDATA["Высота Ступени"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0.172222222222</Value>
		</Length>
		<Boolean Name="cover">
			<Description><![CDATA["Защитный Слой Проступи"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="covthick">
			<Description><![CDATA["Толщина Защитного Слоя Проступи"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Boolean Name="covery">
			<Description><![CDATA["Защитный Слой Подступенка"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="covthicky">
			<Description><![CDATA["Толщина Защитного Слоя Подступенка"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0.03</Value>
		</Length>
		<Length Name="ns">
			<Description><![CDATA["Выступ"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0.02</Value>
		</Length>
		<Boolean Name="recefice">
			<Description><![CDATA["Противоскользящие Вставки"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="reclen">
			<Description><![CDATA["Длина Вставки"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0.005</Value>
		</Length>
		<Integer Name="rail_m">
			<Description><![CDATA["Ограждение"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>

		<!-- bRightRail: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Boolean Name="bRightRail">
			<Description><![CDATA["Ограждение Справа"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<String Name="rightRailType">
			<Description><![CDATA["Тип Ограждения"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Балюстрада Ограждения"]]></Value>
		</String>
		<String Name="ggr">
			<Description><![CDATA["Конструктивные Размеры"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="romr_m">
			<Description><![CDATA["Способ Ориентации Ограждения"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="hrr">
			<Description><![CDATA["Высота Ограждения"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.8</Value>
		</Length>
		<Length Name="dsr">
			<Description><![CDATA["Расстояние от Верха Ступени"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Length Name="roffr">
			<Description><![CDATA["Смещение Ограждения"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="OverhangRBottom">
			<Description><![CDATA["Выступ Ограждения Внизу"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="OverhangRTop">
			<Description><![CDATA["Выступ Ограждения Вверху"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<String Name="sgr">
			<Description><![CDATA["Размеры Элементов Ограждения"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Length Name="fswr">
			<Description><![CDATA["Ширина Рамы по Бокам"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Length Name="fthr">
			<Description><![CDATA["Толщина Рамы/Бруска"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.04</Value>
		</Length>
		<Length Name="ftwr">
			<Description><![CDATA["Ширина Рамы Вверху"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="fbwr">
			<Description><![CDATA["Ширина Рамы Внизу"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="abdistr">
			<Description><![CDATA["Приблизительный Шаг Балясин"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.15</Value>
		</Length>
		<Length Name="fdfr">
			<Description><![CDATA["Расстояние от Рамы до Экрана"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="bhr">
			<Description><![CDATA["Высота Бруска"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Integer Name="btypr_m">
			<Description><![CDATA["Стиль Бруска"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="hrtr_m">
			<Description><![CDATA["Стиль Поручня"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="hrdr">
			<Description><![CDATA["Диаметр Поручня"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="hrwr">
			<Description><![CDATA["Ширина Поручня"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="hrhr">
			<Description><![CDATA["Толщина Поручня"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.025</Value>
		</Length>
		<Length Name="hror">
			<Description><![CDATA["Выступ Поручня"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Integer Name="ptr_m">
			<Description><![CDATA["Стиль Стойки/Балясины"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="npr">
			<Description><![CDATA["Количество Стоек/Балясин"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>4</Value>
		</Integer>
		<Integer Name="nbtr">
			<Description><![CDATA["Количество Балясин"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</Integer>
		<Length Name="pdr">
			<Description><![CDATA["Диаметр Стойки"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.035</Value>
		</Length>
		<Length Name="pwr">
			<Description><![CDATA["Ширина Стоек"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.035</Value>
		</Length>
		<Length Name="pthr">
			<Description><![CDATA["Толщина Стоек"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.035</Value>
		</Length>
		<Integer Name="gs_PostBaseTypeR_m">
			<Description><![CDATA["Тип Основания Стойки"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="gs_PostBaseOverhangR">
			<Description><![CDATA["Выступ Основания Стойки"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Integer Name="btr_m">
			<Description><![CDATA["Стиль Доски"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nbr">
			<Description><![CDATA["Количество Брусков"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>4</Value>
		</Integer>
		<Length Name="bwr">
			<Description><![CDATA["Ширина Балясины"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.025</Value>
		</Length>
		<Length Name="bthr">
			<Description><![CDATA["Толщина Балясины/Панели"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.025</Value>
		</Length>
		<Length Name="bdr">
			<Description><![CDATA["Диаметр Бруска"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="sbhr">
			<Description><![CDATA["Высота суб-доски"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.15</Value>
		</Length>
		<Length Name="sbhPerpR">
			<Description><![CDATA["Высота суб-доски"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.169001035027</Value>
		</Length>

		<!-- bLeftRail: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Boolean Name="bLeftRail">
			<Description><![CDATA["Ограждение Слева"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<String Name="leftRailType">
			<Description><![CDATA["Тип Ограждения"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Как и Правое"]]></Value>
		</String>
		<Boolean Name="bSameRails">
			<Description><![CDATA["Как и Правое"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<String Name="ggl">
			<Description><![CDATA["Конструктивные Размеры"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="roml_m">
			<Description><![CDATA["Способ Ориентации Ограждения"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="hrl">
			<Description><![CDATA["Высота Ограждения"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.8</Value>
		</Length>
		<Length Name="dsl">
			<Description><![CDATA["Расстояние от Верха Ступени"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Length Name="roffl">
			<Description><![CDATA["Смещение Ограждения"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="OverhangLBottom">
			<Description><![CDATA["Выступ Ограждения Внизу"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="OverhangLTop">
			<Description><![CDATA["Выступ Ограждения Вверху"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<String Name="sgl">
			<Description><![CDATA["Размеры Элементов Ограждения"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Length Name="fswl">
			<Description><![CDATA["Ширина Рамы по Бокам"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Length Name="fthl">
			<Description><![CDATA["Толщина Рамы/Бруска"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.04</Value>
		</Length>
		<Length Name="ftwl">
			<Description><![CDATA["Ширина Рамы Вверху"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="fbwl">
			<Description><![CDATA["Ширина Рамы Внизу"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="abdistl">
			<Description><![CDATA["Приблизительный Шаг Балясин"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.15</Value>
		</Length>
		<Length Name="fdfl">
			<Description><![CDATA["Расстояние от Рамы до Экрана"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="bhl">
			<Description><![CDATA["Высота Бруска"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Integer Name="btypl_m">
			<Description><![CDATA["Стиль Бруска"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="hrtl_m">
			<Description><![CDATA["Стиль Поручня"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="hrdl">
			<Description><![CDATA["Диаметр Поручня"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="hrwl">
			<Description><![CDATA["Ширина Поручня"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="hrhl">
			<Description><![CDATA["Толщина Поручня"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.025</Value>
		</Length>
		<Length Name="hrol">
			<Description><![CDATA["Выступ Поручня"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Integer Name="ptl_m">
			<Description><![CDATA["Стиль Стойки/Балясины"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="npl">
			<Description><![CDATA["Количество Стоек/Балясин"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>4</Value>
		</Integer>
		<Integer Name="nbtl">
			<Description><![CDATA["Количество Балясин"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</Integer>
		<Length Name="pdl">
			<Description><![CDATA["Диаметр Стойки"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.035</Value>
		</Length>
		<Length Name="pwl">
			<Description><![CDATA["Ширина Стоек"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.035</Value>
		</Length>
		<Length Name="pthl">
			<Description><![CDATA["Толщина Стоек"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.035</Value>
		</Length>
		<Integer Name="gs_PostBaseTypeL_m">
			<Description><![CDATA["Тип Основания Стойки"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="gs_PostBaseOverhangL">
			<Description><![CDATA["Выступ Основания Стойки"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Integer Name="btl_m">
			<Description><![CDATA["Стиль Доски"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nbl">
			<Description><![CDATA["Количество Брусков"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>4</Value>
		</Integer>
		<Length Name="bwl">
			<Description><![CDATA["Ширина Балясины"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.025</Value>
		</Length>
		<Length Name="bthl">
			<Description><![CDATA["Толщина Балясины/Панели"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.025</Value>
		</Length>
		<Length Name="bdl">
			<Description><![CDATA["Диаметр Бруска"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="sbhl">
			<Description><![CDATA["Высота суб-доски"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.15</Value>
		</Length>
		<Length Name="sbhPerpL">
			<Description><![CDATA["Высота суб-доски"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.169001035027</Value>
		</Length>

		<!-- gs_3D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_3D_representation">
			<Description><![CDATA["3D-отображение"]]></Description>
		</Title>
		<Integer Name="res">
			<Description><![CDATA["Аппроксимация"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>32</Value>
		</Integer>
		<Integer Name="rescs">
			<Description><![CDATA["Аппроксимация Ограждения"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>8</Value>
		</Integer>
		<Boolean Name="gs_shadow">
			<Description><![CDATA["Отбрасывание Теней"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="AC_show2DHotspotsIn3D">
			<Description><![CDATA["Показ Узловых 2D Точек в 3D"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="ac_bottomlevel">
			<Description><![CDATA["Отметка Низа"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="ac_toplevel">
			<Description><![CDATA["Отметка Верха"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>

		<!-- gs_2D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_2D_representation">
			<Description><![CDATA["2D-отображение"]]></Description>
			<Fix/>
		</Title>
		<Integer Name="gs_detlevel_2D_m">
			<Description><![CDATA["2D-детализация"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="iScaleChangeSM">
			<Description><![CDATA["Простой/Средний Масштаб изменяется в"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>999</Value>
		</Integer>
		<Integer Name="gs_ScaleChangeSM">
			<Description><![CDATA["Простой/Средний Масштаб изменяется в"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>100</Value>
		</Integer>
		<Integer Name="iScaleChangeMD">
			<Description><![CDATA["Средний/Детальный Масштаб изменяется в"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>999</Value>
		</Integer>
		<Integer Name="gs_ScaleChangeMD">
			<Description><![CDATA["Средний/Детальный Масштаб изменяется в"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>50</Value>
		</Integer>

		<!-- Symbol2D: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="Symbol2D">
			<Description><![CDATA["2D-символ"]]></Description>
		</Title>
		<Integer Name="gs_SymbolType_m">
			<Description><![CDATA["Тип 2D-символа"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>11</Value>
		</Integer>
		<Integer Name="iSymbolGroup">
			<Description><![CDATA["Тип Группы Символа"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>6</Value>
		</Integer>
		<Boolean Name="gs_2DTread">
			<Description><![CDATA["Показать Проступи"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_2DTreadAbove">
			<Description><![CDATA["Показать Проступи Выше"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_2DRiserAbove">
			<Description><![CDATA["Показать Подступенки Выше"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_2DContourAbove">
			<Description><![CDATA["Показать Линию Контура Выше"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_2DContourBelow">
			<Description><![CDATA["Показать Линию Контура Ниже"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<PenColor Name="gs_cont_pen">
			<Description><![CDATA["Перо Линий Видимых Конструкций"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>91</Value>
		</PenColor>
		<PenColor Name="gs_DashLinePen">
			<Description><![CDATA["Перо Линий Невидимых Конструкций"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>91</Value>
		</PenColor>
		<LineType Name="solid_line">
			<Description><![CDATA["Тип Линий Видимых Конструкций"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</LineType>
		<LineType Name="dash_line">
			<Description><![CDATA["Тип Линий Невидимых Конструкций"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>4</Value>
		</LineType>
		<LineType Name="gs_NosingLine">
			<Description><![CDATA["Тип Линии Выступа"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>4</Value>
		</LineType>
		<Boolean Name="bottom_line">
			<Description><![CDATA["Показать Нижнюю Проступь"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="top_line">
			<Description><![CDATA["Показать Верхнюю Проступь"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="bShowRailOnFloorPlan">
			<Description><![CDATA["Показать Ограждение на Плане"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<LineType Name="railLineType">
			<Description><![CDATA["Тип Линии Ограждения"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</LineType>
		<PenColor Name="railPen">
			<Description><![CDATA["Перо Ограждения"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>91</Value>
		</PenColor>
		<Boolean Name="bSymbolic2D">
			<Description><![CDATA["Символический 2D"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<String Name="postSymbolType">
			<Description><![CDATA["Тип Символа Стойки"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Тип 1"]]></Value>
		</String>
		<Integer Name="iPostSymbolType">
			<Description><![CDATA["Тип Символа Стойки"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<LineType Name="postLineType">
			<Description><![CDATA["Тип Линии Стойки"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</LineType>
		<PenColor Name="postPen">
			<Description><![CDATA["Перо Линии Стойки"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>23</Value>
		</PenColor>
		<Boolean Name="bShowRailAboveBreakLine">
			<Description><![CDATA["Показать Ограждение выше Линии Разрыва"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="bShowCarriage">
			<Description><![CDATA["Показать Тетиву на Плане Этажа"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<String Name="stShowCarriageUpTo">
			<Description><![CDATA["Показать Тетиву"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["До 1:50"]]></Value>
		</String>
		<Integer Name="iShowCarriageUpTo">
			<Description><![CDATA["Показать Тетиву"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>50</Value>
		</Integer>
		<LineType Name="carriageLineType">
			<Description><![CDATA["Линия Невидимой Тетивы"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</LineType>
		<PenColor Name="carriagePen">
			<Description><![CDATA["Перо Невидимой Тетивы"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>23</Value>
		</PenColor>
		<FillPattern Name="gs_fill_type">
			<Description><![CDATA["Штриховка Фона"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<FillPattern Name="gs_FillTypeAbove">
			<Description><![CDATA["Штриховка Фона"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_fill_pen">
			<Description><![CDATA["Перо Штриховки"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_back_pen">
			<Description><![CDATA["Перо Фона Штриховки"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<Boolean Name="gs_FillAbove">
			<Description><![CDATA["Штриховка Выше Линии Разрыва"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="brk">
			<Description><![CDATA["Линия Разрыва"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Integer Name="breakline_style_m">
			<Description><![CDATA["Стиль Линии Разрыва"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="bSimpleZigZag">
			<Description><![CDATA["Линия Разрыва в виде Простого Зигзага"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_BreakHeight">
			<Description><![CDATA["Расположение Линии Разрыва (Высота)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="brkLineY">
			<Description><![CDATA["Ширина Линии Разрыва"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.2</Value>
		</Length>
		<Integer Name="iLineTypeAboveBreak">
			<Description><![CDATA["Тип Линии выше Линии Разрыва"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="walkl">
			<Description><![CDATA["Показать Линию Всхода"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<LineType Name="gs_wLineType1">
			<Description><![CDATA["Тип Линии"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</LineType>
		<LineType Name="gs_wLineType2">
			<Description><![CDATA["Тип Линии"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>6</Value>
		</LineType>
		<LineType Name="gs_wLineTypeAbove">
			<Description><![CDATA["Тип Линии выше Линии Разрыва"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>6</Value>
		</LineType>
		<PenColor Name="gs_wLinePen">
			<Description><![CDATA["Перо Линии"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>71</Value>
		</PenColor>
		<Integer Name="arrow_style_m">
			<Description><![CDATA["Стиль Стрелки"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>3</Value>
		</Integer>
		<FillPattern Name="gs_ArrowFill">
			<Description><![CDATA["Тип Штриховки Стрелки"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>64</Value>
		</FillPattern>
		<PenColor Name="gs_ArrowFillPen">
			<Description><![CDATA["Перо Штриховки (0 - нет)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_ArrowFillPenAbove">
			<Description><![CDATA["Перо Штриховки Выше (0 - Нет)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</PenColor>
		<Length Name="gs_ArrowHeight">
			<Description><![CDATA["Высота Стрелки"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.2</Value>
		</Length>
		<Length Name="gs_ArrowHalfWidth">
			<Description><![CDATA["Половина Ширины Стрелки"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.2</Value>
		</Length>
		<String Name="gs_StartEndStyle">
			<Description><![CDATA["Символ в Начале"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA["Стиль 1"]]></Value>
		</String>
		<Integer Name="gs_StartEndStyle_m">
			<Description><![CDATA["Символ в Начале"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<FillPattern Name="gs_StartEndFill">
			<Description><![CDATA["Тип Штриховки Символа"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>64</Value>
		</FillPattern>
		<PenColor Name="gs_StartEndFillPen">
			<Description><![CDATA["Перо Штриховки (0 - нет)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</PenColor>
		<Length Name="gs_CircleRadius">
			<Description><![CDATA["Радиус Окружности"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Length Name="gs_StartWidth">
			<Description><![CDATA["Половина Ширины Символа"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_StartHeight">
			<Description><![CDATA["Половина Высоты Символа"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.15</Value>
		</Length>
		<Boolean Name="bShowNumbering">
			<Description><![CDATA["Показать Нумерацию"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="nStartNumbering">
			<Description><![CDATA["Начать Нумерацию с"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="gs_NumBelow">
			<Description><![CDATA["Нумерация ниже Линии Разрыва"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_NumAbove">
			<Description><![CDATA["Нумерация выше Линии Разрыва"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<RealNum Name="gs_NumTextSize">
			<Description><![CDATA["Размер Шрифта (мм)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</RealNum>
		<RealNum Name="gs_text_size_pt_num">
			<Description><![CDATA["Размер Шрифта (пт)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2.83</Value>
		</RealNum>
		<PenColor Name="gs_NumTextPen">
			<Description><![CDATA["Перо Текста"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>86</Value>
		</PenColor>
		<Length Name="DirNumText_X">
			<Description><![CDATA["Расположение Нумерации по X"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Length Name="DirNumText_Y">
			<Description><![CDATA["Расположение Нумерации по Y"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<String Name="typeTextRotation_Num">
			<Description><![CDATA["Ориентация Текста в Символе"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Выровнять по Символу"]]></Value>
		</String>
		<Integer Name="typeTextRotation_Num_m">
			<Description><![CDATA["Ориентация Текста в Символе"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Boolean Name="bShowRiseAndRunText">
			<Description><![CDATA["Текст Подступенков и Проступей"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<String Name="gs_RiseRunText">
			<Description><![CDATA["Текст"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Кол-во x Подступенок = Высота Марша"]]></Value>
		</String>
		<Integer Name="iRiseRunText">
			<Description><![CDATA["Текст"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="gs_CustomText1">
			<Description><![CDATA["Специальный Текст_1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Специальный Текст_1"]]></Value>
		</String>
		<String Name="gs_CustomText2">
			<Description><![CDATA["Специальный Текст_2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Специальный Текст_2"]]></Value>
		</String>
		<String Name="gs_customText_rise">
			<Description><![CDATA["Текст Подступенка"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["П"]]></Value>
		</String>
		<RealNum Name="fontsize">
			<Description><![CDATA["Размер Шрифта (мм)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</RealNum>
		<RealNum Name="gs_text_size_pt">
			<Description><![CDATA["Размер Шрифта (пт)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2.83</Value>
		</RealNum>
		<PenColor Name="gs_text_pen">
			<Description><![CDATA["Перо Текста"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>86</Value>
		</PenColor>
		<Boolean Name="bUseACLinearUnit">
			<Description><![CDATA["Единицы Измерения Рабочей Среды Проекта"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="DirRiseRunText_X">
			<Description><![CDATA["Текст Подступенков и Проступей по X"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="DirRiseRunText_Y">
			<Description><![CDATA["Текст Подступенков и Проступей по Y"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.8</Value>
		</Length>
		<Angle Name="DirRiseRunAngle">
			<Description><![CDATA["Угол Поворота Текста Подступенков и Проступей"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<String Name="typeTextRotation_RiseRun">
			<Description><![CDATA["Ориентация Текста в Символе"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Читаемый"]]></Value>
		</String>
		<Integer Name="typeTextRotation_RiseRun_m">
			<Description><![CDATA["Ориентация Текста в Символе"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<String Name="walkingDirUPDN">
			<Description><![CDATA["Размер Текста ВВЕРХ/ВНИЗ"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA["Нет"]]></Value>
		</String>
		<Integer Name="walkingDirUPDN_m">
			<Description><![CDATA["Размер Текста ВВЕРХ/ВНИЗ"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<RealNum Name="UPDNfontsize">
			<Description><![CDATA["Размер Текста ВВЕРХ/ВНИЗ (мм)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</RealNum>
		<RealNum Name="gs_text_size_pt_UpDn">
			<Description><![CDATA["Размер Текста ВВЕРХ/ВНИЗ (точки)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>5.66</Value>
		</RealNum>
		<PenColor Name="UPDNfontpen">
			<Description><![CDATA["Текст ВВЕРХ/ВНИЗ"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>86</Value>
		</PenColor>
		<Length Name="DirUPDN_X">
			<Description><![CDATA["Расположение Текста ВВЕРХ/ВНИЗ по Х"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="DirUPDN_Y">
			<Description><![CDATA["Расположение Текста ВВЕРХ/ВНИЗ по Y"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>-0.5</Value>
		</Length>
		<Angle Name="AngUPDN">
			<Description><![CDATA["Угол Текста ВВЕРХ/ВНИЗ"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<String Name="typeTextRotation_UpDn">
			<Description><![CDATA["Ориентация Текста в Символе"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Выровнять по Символу"]]></Value>
		</String>
		<Integer Name="typeTextRotation_UpDn_m">
			<Description><![CDATA["Ориентация Текста в Символе"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<String Name="fontType">
			<Description><![CDATA["Тип Шрифта"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA["Arial"]]></Value>
		</String>
		<Boolean Name="bShowRailAxis">
			<Description><![CDATA["Показать Ось Ограждения"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<LineType Name="railAxisLineType">
			<Description><![CDATA["Тип Линии Оси Ограждения"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>6</Value>
		</LineType>
		<PenColor Name="gs_RailAxisPen">
			<Description><![CDATA["Перо Линии Оси Ограждения"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>71</Value>
		</PenColor>
		<Boolean Name="gs_StorySensitive">
			<Description><![CDATA["Зависит от Этажа"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- gs_AboveHomeStory: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_AboveHomeStory">
			<Description><![CDATA["2D выше Собственного Этажа"]]></Description>
		</Title>
		<Boolean Name="gs_BreaklineStUp">
			<Description><![CDATA["Линия Разрыва"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_LowerPartStUp">
			<Description><![CDATA["Нижняя Часть"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_UpperPartStUp">
			<Description><![CDATA["Верхняя Часть"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_TreadStUp">
			<Description><![CDATA["Показать Проступи"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<LineType Name="gs_LineTypeStUp">
			<Description><![CDATA["Тип Линии"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</LineType>
		<PenColor Name="gs_LinePenStUp">
			<Description><![CDATA["Перо Линии"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>71</Value>
		</PenColor>
		<LineType Name="gs_wLineTypeStUp">
			<Description><![CDATA["Тип Линии Всхода"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</LineType>
		<Boolean Name="gs_numaStUp">
			<Description><![CDATA["Показать Нумерацию"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_txStUp">
			<Description><![CDATA["Текст Подступенков и Проступей"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- gs_section_attributes: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_section_attributes">
			<Description><![CDATA["Реквизиты Сечения"]]></Description>
		</Title>
		<PenColor Name="penLineStringer">
			<Description><![CDATA["Перо Контура Сечения Плиты"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>29</Value>
		</PenColor>
		<Integer Name="penLineStringer_m">
			<Description><![CDATA["Перо Контура Сечения Плиты"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>29</Value>
		</Integer>
		<FillPattern Name="typeFillStringer">
			<Description><![CDATA["Штриховка Сечения Плиты"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>24</Value>
		</FillPattern>
		<PenColor Name="penFillStringer">
			<Description><![CDATA["Перо Штриховки Сечения Плиты"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>109</Value>
		</PenColor>
		<Integer Name="penFillStringer_m">
			<Description><![CDATA["Перо Штриховки Сечения Плиты"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>109</Value>
		</Integer>
		<PenColor Name="penBackFillStringer">
			<Description><![CDATA["Перо Фона Штриховки Сечения Плиты"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</PenColor>
		<Integer Name="penBackFillStringer_m">
			<Description><![CDATA["Перо Фона Штриховки Сечения Плиты"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<PenColor Name="penLineTread">
			<Description><![CDATA["Перо Контура Сечения Проступи"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</PenColor>
		<Integer Name="penLineTread_m">
			<Description><![CDATA["Перо Контура Сечения Проступи"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<FillPattern Name="typeFillTread">
			<Description><![CDATA["Штриховка Сечения Проступи"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>23</Value>
		</FillPattern>
		<PenColor Name="penFillTread">
			<Description><![CDATA["Перо Штриховки Сечения Проступи"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>109</Value>
		</PenColor>
		<Integer Name="penFillTread_m">
			<Description><![CDATA["Перо Штриховки Сечения Проступи"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>109</Value>
		</Integer>
		<PenColor Name="penBackFillTread">
			<Description><![CDATA["Перо Фона Штриховки Сечения Проступи"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>-1</Value>
		</PenColor>
		<Integer Name="penBackFillTread_m">
			<Description><![CDATA["Перо Фона Штриховки Сечения Проступи"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>-1</Value>
		</Integer>
		<PenColor Name="penLineRiser">
			<Description><![CDATA["Перо Контура Сечения Подступенка"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</PenColor>
		<Integer Name="penLineRiser_m">
			<Description><![CDATA["Перо Контура Сечения Подступенка"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<FillPattern Name="typeFillRiser">
			<Description><![CDATA["Штриховка Сечения Подступенка"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>23</Value>
		</FillPattern>
		<PenColor Name="penFillRiser">
			<Description><![CDATA["Перо Штриховки Сечения Подступенка"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>109</Value>
		</PenColor>
		<Integer Name="penFillRiser_m">
			<Description><![CDATA["Перо Штриховки Сечения Подступенка"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>109</Value>
		</Integer>
		<PenColor Name="penBackFillRiser">
			<Description><![CDATA["Перо Фона Штриховки Сечения Подступенка"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>-1</Value>
		</PenColor>
		<Integer Name="penBackFillRiser_m">
			<Description><![CDATA["Перо Фона Штриховки Сечения Подступенка"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>-1</Value>
		</Integer>

		<!-- gs_material: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_material">
			<Description><![CDATA["Покрытия"]]></Description>
		</Title>
		<Material Name="matb">
			<Description><![CDATA["Плита Лестницы"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>4</Value>
		</Material>
		<Material Name="matsb">
			<Description><![CDATA["Косоур"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>4</Value>
		</Material>
		<Material Name="mat_tread">
			<Description><![CDATA["Проступь"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>18</Value>
		</Material>
		<Material Name="mat_riser">
			<Description><![CDATA["Подступенок"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>18</Value>
		</Material>
		<Material Name="pmatr">
			<Description><![CDATA["Стойка Справа"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="fmatr">
			<Description><![CDATA["Рама Справа"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="bmatr">
			<Description><![CDATA["Балясина/Панель Справа"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="pmatl">
			<Description><![CDATA["Стойка Слева"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="fmatl">
			<Description><![CDATA["Рама Слева"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="bmatl">
			<Description><![CDATA["Балясина/Панель Слева"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Length Name="fth">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="bh">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="bd">
			<Description><![CDATA["Диаметр Леера"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="hrd">
			<Description><![CDATA["Диаметр Поручня"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="hrw">
			<Description><![CDATA["Ширина Поручня"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="hrh">
			<Description><![CDATA["Толщина Поручня"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="pd">
			<Description><![CDATA["Диаметр Стойки"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="pw">
			<Description><![CDATA["Ширина Стоек"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="bth">
			<Description><![CDATA["Толщина Стоек"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="bw">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="sbh">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_PostBaseOverhang">
			<Description><![CDATA["Выступ Основания Стойки"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="temp_OverhangRBottom">
			<Description><![CDATA["Выступ Ограждения Внизу"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="temp_OverhangRTop">
			<Description><![CDATA["Выступ Ограждения Вверху"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="temp_OverhangLBottom">
			<Description><![CDATA["Выступ Ограждения Внизу"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="temp_OverhangLTop">
			<Description><![CDATA["Выступ Ограждения Вверху"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Angle Name="gs_readable_angle">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>90</Value>
		</Angle>
		<Integer Name="rightRailType_m">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="leftRailType_m">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>12</Value>
		</Integer>

		<!-- gs_list: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_list">
			<Description><![CDATA["Параметры Спецификаций"]]></Description>
			<Fix/>
		</Title>
		<RealNum Name="gs_list_cost">
			<Description><![CDATA["Цена"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="gs_list_manufacturer">
			<Description><![CDATA["Производитель"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_note">
			<Description><![CDATA["Примечания"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_location">
			<Description><![CDATA["Расположение"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_accessories">
			<Description><![CDATA["Аксессуары"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_soundinsul">
			<Description><![CDATA["Звукоизоляция"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_Type">
			<Description><![CDATA["Тип Группы"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Лестницы"]]></Value>
		</String>
		<Integer Name="iFMType">
			<Description><![CDATA["Тип Группы"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>6</Value>
		</Integer>
		<String Name="FM_InventoryNumber">
			<Description><![CDATA["Инвентарный Номер"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_SerialNumber">
			<Description><![CDATA["Серийный Номер"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_ProductionYear">
			<Description><![CDATA["Год Производства"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<RealNum Name="FM_ObjectWeight">
			<Description><![CDATA["Вес Изделия"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="FM_ObjectWeightUnit">
			<Description><![CDATA["Единица Веса"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["кг"]]></Value>
		</String>
		<RealNum Name="FM_Stories">
			<Description><![CDATA["Кол-во Этажей"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<RealNum Name="FM_HalfLandings">
			<Description><![CDATA["Кол-во Промежуточных Площадок"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<RealNum Name="FM_LevelHeight">
			<Description><![CDATA["Высота Уровня"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<RealNum Name="FM_HeadRoom">
			<Description><![CDATA["Высота Помещения"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="FM_BearingStructure">
			<Description><![CDATA["Несущая Конструкция"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<RealNum Name="FM_BearingCapacity">
			<Description><![CDATA["Несущая Способность"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<Boolean Name="FM_SmokeFree">
			<Description><![CDATA["Незадымляемая Лестница"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<RealNum Name="FM_StepsLength">
			<Description><![CDATA["Длина Проступей"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="FM_MaterialFootstep">
			<Description><![CDATA["Покрытие Проступей"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_MaterialStairRailing">
			<Description><![CDATA["Покрытие Ограждения"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_MaterialHandhold">
			<Description><![CDATA["Покрытие Поручней"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom1">
			<Description><![CDATA["Пользовательское Значение 1"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom2">
			<Description><![CDATA["Пользовательское Значение 2"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom3">
			<Description><![CDATA["Пользовательское Значение 3"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom4">
			<Description><![CDATA["Пользовательское Значение 4"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom5">
			<Description><![CDATA["Пользовательское Значение 5"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>

		<!-- gs_onorm_Title: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_onorm_Title">
			<Description><![CDATA["Дополнительные Параметры Спецификаций"]]></Description>
			<Fix/>
		</Title>
		<String Name="gs_onorm_treadnumber">
			<Description><![CDATA["Количество Ступеней"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_treadriser">
			<Description><![CDATA["Глубина Проступи / Высота Подступенка"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_person">
			<Description><![CDATA["Количество Людей"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_bardist_auto">
			<Description><![CDATA["Значение Чистой Ширины между Прутьями Ограждения"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_bardist">
			<Description><![CDATA["Чистая Ширина между Прутьями Ограждения"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_botlevheight_auto">
			<Description><![CDATA["Значение Отметки Нижнего Уровня"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_botlevheight">
			<Description><![CDATA["Отметка Нижнего Уровня"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_toplevheight_auto">
			<Description><![CDATA["Значение Отметки Верхнего Уровня"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_toplevheight">
			<Description><![CDATA["Отметка Верхнего Уровня"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_construction">
			<Description><![CDATA["Конструкция"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_soundinsul">
			<Description><![CDATA["Звукоизоляция"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_mat1">
			<Description><![CDATA["Дополнительный Материал 1"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_finish1_value">
			<Description><![CDATA["Значение Отделки 1"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_finish1">
			<Description><![CDATA["Отделка 1"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_customtext1">
			<Description><![CDATA["Дополнительная Информация 1"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_customtext2">
			<Description><![CDATA["Дополнительная Информация 2"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_aks">
			<Description><![CDATA["Номер AKS"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_product">
			<Description><![CDATA["Продукт"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_leistungbuch">
			<Description><![CDATA["Коллекция ID Спецификаций"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_description">
			<Description><![CDATA["Дополнительное Описание"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_number">
			<Description><![CDATA["Дополнительный Номер"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_id">
			<Description><![CDATA["Номер ID"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_admission">
			<Description><![CDATA["Дата Приема"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_modification">
			<Description><![CDATA["Дата Изменения"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_tozonenumber">
			<Description><![CDATA["Номер Зоны"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>

		<!-- ifc_Title: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="ifc_Title">
			<Description><![CDATA["IFC2x3 Набор Свойств для Лестниц"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
		</Title>
		<Integer Name="ifc_StairType">
			<Description><![CDATA["Тип Лестницы"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="ifc_NumberOfRiser">
			<Description><![CDATA["Количество Подступенков"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="ifc_NumberOfTreads">
			<Description><![CDATA["Количество Проступей"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Length Name="ifc_RiserHeight">
			<Description><![CDATA["Высота Подступенка"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ifc_TreadLength">
			<Description><![CDATA["Длина Проступи"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0</Value>
		</Length>
		<String Name="LibraryLangCode">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value><![CDATA["RUS"]]></Value>
		</String>
		<Integer Name="gs_ui_current_page">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
	</Parameters>
</ParamSection>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_VL SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
call "FM_types" parameters all
call "ui_stairs" parameters gs_ui_current_page	= gs_ui_current_page

! ---------- Length Unit ----------
w_units_form = ""
rrr					= request("Linear_dimension", "", w_units_form)
bLinearDimIsMetric	= (strstr(w_units_form, "m") > 0)


! ---------- 3D detail level ----------
values{2} "gs_detlevel_3D_m" 	DET3D_DETAILED,		stDetlevel3D[1],
								DET3D_SIMPLE,		stDetlevel3D[2],
								DET3D_OFF,			stDetlevel3D[3]

if gs_detlevel_3D_m = DET3D_SIMPLE then
	lock "gs_resol"
	hideparameter "gs_resol"
endif

if gs_detlevel_3D_m = DET3D_OFF then
	lock "gs_resol", "gs_shadow"
	hideparameter "gs_resol", "gs_shadow"
endif


!! ---------- 2D detail level ----------
values{2} "gs_detlevel_2D_m"	DET2D_SCALESENSITIVE,	stDetlevel2D[1],
								DET2D_CUSTOM,			stDetlevel2D[2]

!! ---------- Symbol Type ----------
if gs_detlevel_2D_m = DET2D_SCALESENSITIVE then
	values{2} "iSymbolGroup"	SYMBOLGROUP_TYPE1,	stSymbolGroup[1],
								SYMBOLGROUP_TYPE2,	stSymbolGroup[2],
								SYMBOLGROUP_TYPE3,	stSymbolGroup[3],
								SYMBOLGROUP_TYPE4,	stSymbolGroup[4],
								SYMBOLGROUP_TYPE5,	stSymbolGroup[5],
								SYMBOLGROUP_TYPE6,	stSymbolGroup[6],
								SYMBOLGROUP_TYPE7,	stSymbolGroup[7],
								SYMBOLGROUP_TYPE8,	stSymbolGroup[8]

	lock			"gs_SymbolType_m"
	hideparameter	"gs_SymbolType_m"


	!! ----------------- Simple to Middle Scale -----------------
	if bLinearDimIsMetric then
		_iEnableScaleSMTypes	= 2 + 4 + 8 + 16 + 32 + 64
	else
		_iEnableScaleSMTypes	= 128 + 256 + 512 + 1024 + 2048 + 4096 + 8192 + 16384
	endif

	dim _iEnableScaleSMTypeValueList[]
	dim _stEnableScaleSMTypeValueList[]
	j = 1
	for i = 1 to vardim1(iScaleType)
		if bittest(_iEnableScaleSMTypes, i) then
			_iEnableScaleSMTypeValueList[j] = iScaleType[i]
			_stEnableScaleSMTypeValueList[j] = stScaleType[i]
			j = j + 1
		endif
	next i
	_iEnableScaleSMTypeValueList[j] = iScaleType[15]
	_stEnableScaleSMTypeValueList[j] = stScaleType[15]
	values{2} "iScaleChangeSM" _iEnableScaleSMTypeValueList, _stEnableScaleSMTypeValueList
	if iScaleChangeSM = SCALE_CUSTOM then
		values "gs_ScaleChangeSM"	range (1,)
	else
		gs_ScaleChangeSM = iScaleChangeSM
		parameters	gs_ScaleChangeSM = gs_ScaleChangeSM

		lock			"gs_ScaleChangeSM"
		hideparameter	"gs_ScaleChangeSM"
	endif

	
	!! ----------------- Middle to Detailed Scale -----------------
	if bLinearDimIsMetric then
		_iEnableScaleMDTypes	= 2 + 4 + 8 + 16 + 32 + 64
	else
		_iEnableScaleMDTypes	= 128 + 256 + 512 + 1024 + 2048 + 4096 + 8192 + 16384
	endif

	dim _iEnableScaleMDTypeValueList[]
	dim _stEnableScaleMDTypeValueList[]
	j = 1
	for i = 1 to vardim1(iScaleType)
		if bittest(_iEnableScaleMDTypes, i) then
			if iScaleChangeSM = SCALE_CUSTOM then
				if gs_ScaleChangeSM > iScaleType[i] then
					_iEnableScaleMDTypeValueList[j] = iScaleType[i]
					_stEnableScaleMDTypeValueList[j] = stScaleType[i]
					j = j + 1
				else
					i = vardim1(iScaleType)
				endif
			else
				_iEnableScaleMDTypeValueList[j] = iScaleType[i]
				_stEnableScaleMDTypeValueList[j] = stScaleType[i]

				if gs_ScaleChangeSM = _iEnableScaleSMTypeValueList[j] then
					i = vardim1(iScaleType)
				else
					j = j + 1
				endif
			endif
		endif
	next i
	_iEnableScaleMDTypeValueList[j] = iScaleType[15]
	_stEnableScaleMDTypeValueList[j] = stScaleType[15]
	values{2} "iScaleChangeMD" _iEnableScaleMDTypeValueList, _stEnableScaleMDTypeValueList

	if iScaleChangeMD = SCALE_CUSTOM then
		values "gs_ScaleChangeMD"	range (, _iScaleSM)
	else
		gs_ScaleChangeMD = iScaleChangeMD
		parameters	gs_ScaleChangeMD = gs_ScaleChangeMD

		lock			"gs_ScaleChangeMD"
		hideparameter	"gs_ScaleChangeMD"
	endif
	if (gs_ScaleChangeMD >= gs_ScaleChangeSM)  then
		gs_ScaleChangeMD = gs_ScaleChangeSM - 1
		parameters	gs_ScaleChangeMD = gs_ScaleChangeMD
	endif
else
	values{2} "gs_SymbolType_m"	SYMBOL_TYPE1,	stStairSymbolTypes[1],
								SYMBOL_TYPE2,	stStairSymbolTypes[2],
								SYMBOL_TYPE3,	stStairSymbolTypes[3],
								SYMBOL_TYPE4,	stStairSymbolTypes[4],
								SYMBOL_TYPE5,	stStairSymbolTypes[5],
								SYMBOL_TYPE6,	stStairSymbolTypes[6],
								SYMBOL_TYPE7,	stStairSymbolTypes[7],
								SYMBOL_TYPE8,	stStairSymbolTypes[8],
								SYMBOL_TYPE9,	stStairSymbolTypes[9],
								SYMBOL_TYPE10,	stStairSymbolTypes[10],
								SYMBOL_TYPE11,	stStairSymbolTypes[11],
								SYMBOL_TYPE12,	stStairSymbolTypes[12],
								SYMBOL_TYPE13,	stStairSymbolTypes[13],
								SYMBOL_TYPE14,	stStairSymbolTypes[14],
								SYMBOL_TYPE15,	stStairSymbolTypes[15],
								SYMBOL_TYPE16,	stStairSymbolTypes[16],
								SYMBOL_TYPE17,	stStairSymbolTypes[17],
								SYMBOL_TYPE18,	stStairSymbolTypes[18],
								SYMBOL_TYPE19,	stStairSymbolTypes[19],
								SYMBOL_TYPE20,	stStairSymbolTypes[20]

	lock			"iSymbolGroup",
					"gs_ScaleChangeSM",
					"iScaleChangeSM",
					"gs_ScaleChangeMD",
					"iScaleChangeMD"
	hideparameter	"iSymbolGroup",
					"gs_ScaleChangeSM",
					"iScaleChangeSM",
					"gs_ScaleChangeMD",
					"iScaleChangeMD"
endif

!!GENERAL FLIGHT PARAMETERS!!

values "fst" stFlightSectionType
values "iFlightSectionType" WITHOUT_SPINEBEAM, WITH_SPINEBEAM
if GLOB_MODPAR_NAME = "fst" then
	iFlightSectionType = WITHOUT_SPINEBEAM
	if fst = stFlightSectionType[2] then iFlightSectionType = WITH_SPINEBEAM
	parameters iFlightSectionType = iFlightSectionType
else
	fst = stFlightSectionType[1]
	if iFlightSectionType = WITH_SPINEBEAM then fst = stFlightSectionType[2]
	parameters fst = fst
endif

values{2} "gs_structure_landing_m" 	STRUCTTYPE_MONOLITH, `Монолит`,
									STRUCTTYPE_CONCRETE, `Бетон`
values{2} "iCalculationMode" 	CALCMODE_TREAD_HEIGHT, `Высота Ступени`,
								CALCMODE_NO_OF_RISERS, `Кол-во Подступенков`
values{2} "topTreadLevel_m" 	TOPTREAD_ATFLOOR, `Верхняя Ступень на Уровне Пола`,
								TOPTREAD_BELOWFLOOR, `Верхняя Ступень Ниже Уровня Пола`
values{2} "firstTreadLevel_m" 	FIRSTTREAD_ATFLOOR, `Первая Ступень на Уровне Пола`,
								FIRSTTREAD_ABOVEFLOOR, `Первая Ступень над Уровнем Пола`
values{2} "iUpperJunctionType" 	UPPERJUNCTION_FLOOR_OR_LANDING, `Пол или Площадка`
values{2} "iLowerJunctionType" 	LOWERJUNCTION_FLOOR_OR_LANDING, `Пол или Площадка`,
								LOWERJUNCTION_GROUND_FLOOR, `Первый Этаж`
VALUES "tproj" RANGE (0.005,.3 )

values "noseType" stNoseTypes
values "iNoseType" NOSE_NORMAL, NOSE_ROUNDED

if GLOB_MODPAR_NAME = "noseType" then
	iNoseType = NOSE_NORMAL
	if noseType = stNoseTypes[2] then iNoseType = NOSE_ROUNDED
	parameters iNoseType = iNoseType
else
	noseType = stNoseTypes[1]
	if iNoseType = NOSE_ROUNDED then noseType = stNoseTypes[2]
	parameters noseType = noseType
endif

if iNoseType = NOSE_NORMAL then lock "tproj"


! ---------- Rise and Run Text ----------

values "gs_RiseRunText" stRiseRunText
values "iRiseRunText" 1, 2, 3, 4, 5, 6, 99

if GLOB_MODPAR_NAME = "gs_RiseRunText" then
	for i = 1 to vardim1(stRiseRunText)
	   if gs_RiseRunText = stRiseRunText[i]	then iRiseRunText = i
	next i
	if gs_RiseRunText = stRiseRunText[7]	then iRiseRunText = 99
	parameters iRiseRunText = iRiseRunText
else
	if iRiseRunText = 99 then
		gs_RiseRunText = stRiseRunText[7]
	else
		gs_RiseRunText = stRiseRunText[max(1, min(iRiseRunText, vardim1(stRiseRunText)) )]
	endif
	parameters gs_RiseRunText = gs_RiseRunText
endif

values "typeTextRotation_RiseRun" `Читаемый`,`Выровнять по Символу`
values "typeTextRotation_RiseRun_m" 2, 0

if GLOB_MODPAR_NAME = "typeTextRotation_RiseRun" then
	if typeTextRotation_RiseRun = `Читаемый`			then typeTextRotation_RiseRun_m = 2
	if typeTextRotation_RiseRun = `Выровнять по Символу`	then typeTextRotation_RiseRun_m = 0
	parameters typeTextRotation_RiseRun_m = typeTextRotation_RiseRun_m
else
	if typeTextRotation_RiseRun_m = 2					then typeTextRotation_RiseRun = `Читаемый`
	if typeTextRotation_RiseRun_m = 0					then typeTextRotation_RiseRun = `Выровнять по Символу`
	parameters typeTextRotation_RiseRun = typeTextRotation_RiseRun
endif

if not(bShowRiseAndRunText) then
	lock			"gs_RiseRunText","gs_CustomText1", "gs_CustomText2", "gs_customText_rise",
					"fontsize","gs_text_size_pt", "typeTextRotation_RiseRun","gs_text_pen","bUseACLinearUnit"
	hideparameter	"gs_RiseRunText","gs_CustomText1", "gs_CustomText2", "gs_customText_rise",
					"fontsize","gs_text_size_pt", "typeTextRotation_RiseRun","gs_text_pen","bUseACLinearUnit"
endif

if iRiseRunText <> 99 then
	lock 	"gs_CustomText1","gs_CustomText2"
	hideparameter 	"gs_CustomText1","gs_CustomText2"
endif

if iRiseRunText <> 5 & iRiseRunText <> 6 then
	lock "gs_customText_rise"
	hideparameter "gs_customText_rise"
endif

if iRiseRunText = 99 then		! Custom
	if bLinearDimIsMetric then
		lock	"gs_CustomText2"
		hideparameter	"gs_CustomText2"
	endif
endif


! ---------- Numbering ----------

values "typeTextRotation_Num" `Читаемый`,`Выровнять по Символу`
values "typeTextRotation_Num_m" 2, 0

if GLOB_MODPAR_NAME = "typeTextRotation_Num" then
	if typeTextRotation_Num = `Читаемый`			then typeTextRotation_Num_m = 2
	if typeTextRotation_Num = `Выровнять по Символу`	then typeTextRotation_Num_m = 0
	parameters typeTextRotation_Num_m = typeTextRotation_Num_m
else
	if typeTextRotation_Num_m = 2					then typeTextRotation_Num = `Читаемый`
	if typeTextRotation_Num_m = 0					then typeTextRotation_Num = `Выровнять по Символу`
	parameters typeTextRotation_Num= typeTextRotation_Num
endif

if not(bShowNumbering) then
	 lock			"nStartNumbering","gs_NumTextSize", "gs_text_size_pt_num", "gs_NumTextPen","gs_NumBelow","gs_NumAbove", "typeTextRotation_Num"
	 hideparameter	"nStartNumbering","gs_NumTextSize", "gs_text_size_pt_num", "gs_NumTextPen","gs_NumBelow","gs_NumAbove", "typeTextRotation_Num"
endif

! ---------- UP and Down ----------
values "walkingDirUPDN" stWalkingDirUPDN		! None, UP, DOWN
values "walkingDirUPDN_m" WALKDIRSTR_NONE, WALKDIRSTR_UP, WALKDIRSTR_DOWN

if GLOB_MODPAR_NAME = "walkingDirUPDN" then
	walkingDirUPDN_m = 1
	for i = 1 to vardim1(stWalkingDirUPDN)
		if walkingDirUPDN = stWalkingDirUPDN[i] then
			walkingDirUPDN_m = i
			i = vardim1(stWalkingDirUPDN)
		endif
	next i
	parameters walkingDirUPDN_m = walkingDirUPDN_m
else
	walkingDirUPDN_m = max(1, min(walkingDirUPDN_m, vardim1(stWalkingDirUPDN)))
	walkingDirUPDN = stWalkingDirUPDN[walkingDirUPDN_m]
	parameters	walkingDirUPDN_m	= walkingDirUPDN_m,
				walkingDirUPDN		= walkingDirUPDN
endif

values "typeTextRotation_UpDn" `Читаемый`,`Параллельно Линии Всхода`,`Выровнять по Символу`
values "typeTextRotation_UpDn_m" 2, 1, 0

if GLOB_MODPAR_NAME = "typeTextRotation_UpDn" then
	if typeTextRotation_UpDn = `Читаемый`					then typeTextRotation_UpDn_m = 2
	if typeTextRotation_UpDn = `Параллельно Линии Всхода`	then typeTextRotation_UpDn_m = 1
	if typeTextRotation_UpDn = `Выровнять по Символу`			then typeTextRotation_UpDn_m = 0
	parameters typeTextRotation_UpDn_m = typeTextRotation_UpDn_m
else
	if typeTextRotation_UpDn_m = 2					then typeTextRotation_UpDn = `Читаемый`
	if typeTextRotation_UpDn_m = 1					then typeTextRotation_UpDn = `Параллельно Линии Всхода`
	if typeTextRotation_UpDn_m = 0					then typeTextRotation_UpDn = `Выровнять по Символу`
	parameters typeTextRotation_UpDn = typeTextRotation_UpDn
endif

if walkingDirUPDN_m = WALKDIRSTR_NONE  then
	 lock			"UPDNfontsize", "gs_text_size_pt_UpDn", "UPDNfontpen","AngUPDN", "typeTextRotation_UpDn"
	 HIDEPARAMETER	"UPDNfontsize", "gs_text_size_pt_UpDn", "UPDNfontpen","AngUPDN", "typeTextRotation_UpDn"
endif

values{2} "iLineTypeAboveBreak" 	LINETYPEABOVEBREAK_INTERSECT, `Штриховая`,
									LINETYPEABOVEBREAK_FULL, `Сплошная`
values{2} "arrow_style_m" 	ARROW_STYLE_1, `Стиль 1`,
							ARROW_STYLE_2, `Стиль 2`,
							ARROW_STYLE_3, `Стиль 3`,
							ARROW_STYLE_4, `Стиль 4`,
							ARROW_STYLE_5, `Стиль 5`,
							ARROW_STYLE_6, `Стиль 6`,
							ARROW_STYLE_7, `Стиль 7`,
							ARROW_STYLE_8, `Стиль 8`,
							ARROW_STYLE_9, `Стиль 9`

values "gs_StartEndStyle" stStartSymbolStyles		! Style 1, Style 2, Style 3, None
values "gs_StartEndStyle_m" STARTSYMB_STYLE1, STARTSYMB_STYLE2, STARTSYMB_STYLE3, STARTSYMB_NONE

if GLOB_MODPAR_NAME = "gs_StartEndStyle" then
	gs_StartEndStyle_m = 1
	for i = 1 to vardim1(stStartSymbolStyles)
		if gs_StartEndStyle = stStartSymbolStyles[i] then
			gs_StartEndStyle_m = i
			i = vardim1(stStartSymbolStyles)
		endif
	next i
	parameters gs_StartEndStyle_m = gs_StartEndStyle_m
else
	gs_StartEndStyle_m = max(1, min(gs_StartEndStyle_m, vardim1(stStartSymbolStyles)))
	gs_StartEndStyle = stStartSymbolStyles[gs_StartEndStyle_m]
	parameters	gs_StartEndStyle_m	= gs_StartEndStyle_m,
				gs_StartEndStyle	= gs_StartEndStyle
endif

if bSimpleZigZag then
	values{2} "breakline_style_m" 	BREAKLINE_STRAIGHT, `Прямой`,
								BREAKLINE_ZIGZAG_CHI, `Зигзаг CHI`
else
	values{2} "breakline_style_m" 	BREAKLINE_STRAIGHT, `Прямой`,
								BREAKLINE_ZIGZAG, `Зигзаг`
endif

VALUES "flw" RANGE (0, )
VALUES "lst" RANGE [0, zzyzx]
VALUES "lst2" RANGE [0,)
VALUES "td" RANGE (0, )
VALUES "th" RANGE (0, )
VALUES "sst" RANGE (0, )
VALUES "rnu" RANGE (0, )

VALUES "res" RANGE[3,)
VALUES "rescs" RANGE[3,)

VALUES "ns" RANGE [0,)
VALUES "covthick" RANGE (0,)
VALUES "covthicky" RANGE (0,)
VALUES "sbhr" RANGE [0.01+(pthr-0.004),)
VALUES "sbhl" RANGE [0.01+(pthl-0.004),)
VALUES "sbhPerpR" RANGE [0.01+(pthr-0.004)/cos(angle),)
VALUES "sbhPerpL" RANGE [0.01+(pthl-0.004)/cos(angle),)
VALUES "gs_PostBaseOverhangR" RANGE [0,)
VALUES "gs_PostBaseOverhangL" RANGE [0,)

VALUES "ujl" RANGE [0, )
VALUES "ljl" RANGE (0, )
VALUES "ujh" RANGE (0, )
VALUES "ljh" RANGE (0, )
IF ABS(ujl)<EPS THEN LOCK "ujh"
IF ABS(ljl)<EPS THEN LOCK "ljh"

VALUES "brkLineY"	RANGE (0,td]
VALUES "gs_BreakHeight" 	RANGE [2*th,)
VALUES "gs_ArrowHeight" 	RANGE (0,)
VALUES "gs_ArrowHalfWidth" 	RANGE (0,)
VALUES "gs_CircleRadius" 	RANGE (0,)
VALUES "gs_StartWidth" 		RANGE (0,)
VALUES "gs_StartHeight" 	RANGE (0,)

VALUES "fontsize" RANGE (0,)
VALUES "gs_NumTextSize" RANGE (0,)
VALUES "UPDNfontsize" RANGE (0,)

! --- A, B, ZZYZX --------------------------------------------------------------
PARAMETERS A=flw
LOCK "A"
IF gs_structure_landing_m = STRUCTTYPE_MONOLITH THEN
	topTreadModif = 0
	IF topTreadLevel_m = TOPTREAD_BELOWFLOOR 	THEN topTreadModif = -1
	firstTreadModif = 0
	IF firstTreadLevel_m = FIRSTTREAD_ATFLOOR 		THEN firstTreadModif = 1

	PARAMETERS B=(rnu+topTreadModif+firstTreadModif)*td
ELSE
	PARAMETERS B=rnu*td+ljl+ujl
ENDIF
LOCK "B"
IF not(ad) THEN
	PARAMETERS ZZYZX=rnu*th
	LOCK "ZZYZX"
ENDIF

!!! *** RAILING PARAMETERS *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

values "rail_m" 1, 2, 3, 4
if GLOB_MODPAR_NAME = "bRightRail" or GLOB_MODPAR_NAME = "bLeftRail" then
	if bRightRail then
		if bLeftRail then
			rail_m = RAILPOS_BOTH
		else
			rail_m = RAILPOS_RIGHT
		endif
	else
		if bLeftRail then
			rail_m = RAILPOS_LEFT
		else
			rail_m = RAILPOS_NONE
		endif
	endif
	parameters rail_m = rail_m
else
	if rail_m = 1 then
		bRightRail	= 1
		bLeftRail	= 1
	endif
	if rail_m = 2 then
		bRightRail	= 1
		bLeftRail	= 0
	endif
	if rail_m = 3 then
		bRightRail	= 0
		bLeftRail	= 1
	endif
	if rail_m = 4 then
		bRightRail	= 0
		bLeftRail	= 0
	endif
	parameters bRightRail	= bRightRail
	parameters bLeftRail	= bLeftRail
endif

if NOT(bRightRail) then
	lock			"rightRailType"
	hideparameter	"rightRailType"
endif
if NOT(bLeftRail) then
	lock			"leftRailType"
	hideparameter	"leftRailType"
endif

values{2} "btypr_m" 	BAR_RECTANGULAR, `Прямоугольные`,
						BAR_ROUND, `Круглые`
values{2} "btypl_m" 	BAR_RECTANGULAR, `Прямоугольные`,
						BAR_ROUND, `Круглые`

VALUES "rightRailType" 	stRailTypes[1],
						stRailTypes[2],
						stRailTypes[3],
						stRailTypes[4],
						stRailTypes[5],
						stRailTypes[6],
						stRailTypes[7],
						stRailTypes[8],
						stRailTypes[9],
						stRailTypes[10],
						stRailTypes[11]

if GLOB_MODPAR_NAME = "rightRailType" then
	for i = 1 to vardim1(stRailTypes)
	   if rightRailType = stRailTypes[i]	then rightRailType_m = i
	next i
	parameters rightRailType_m = rightRailType_m
else
	parameters rightRailType = stRailTypes[rightRailType_m]
endif

if rail_m = RAILPOS_BOTH then		! Both
	VALUES "leftRailType" 	stRailTypes[12],
							stRailTypes[1],
							stRailTypes[2],
							stRailTypes[3],
							stRailTypes[4],
							stRailTypes[5],
							stRailTypes[6],
							stRailTypes[7],
							stRailTypes[8],
							stRailTypes[9],
							stRailTypes[10],
							stRailTypes[11]
else
	VALUES "leftRailType" 	stRailTypes[1],
							stRailTypes[2],
							stRailTypes[3],
							stRailTypes[4],
							stRailTypes[5],
							stRailTypes[6],
							stRailTypes[7],
							stRailTypes[8],
							stRailTypes[9],
							stRailTypes[10],
							stRailTypes[11]
endif
if GLOB_MODPAR_NAME = "leftRailType" then
	for i = 1 to vardim1(stRailTypes)
	   if leftRailType = stRailTypes[i]	then leftRailType_m = i
	next i
	parameters leftRailType_m = leftRailType_m
else
	parameters leftRailType = stRailTypes[leftRailType_m]
endif
bSameRails = (leftRailType_m = RAIL_SAMERAILS)
parameters bSameRails = bSameRails

if GLOB_MODPAR_NAME = "rightRailType" or GLOB_MODPAR_NAME = "rightRailType_m" then
	if rightRailType_m = RAIL_WIRED then
		bwr		= 0.005
		bthr	= 0.005
		bdr		= 0.005
	else
		bwr		= 0.025
		bthr	= 0.025
		bdr		= 0.05
	endif

	parameters bwr = bwr
	parameters bthr = bthr
	parameters bdr = bdr
endif

if GLOB_MODPAR_NAME = "leftRailType" or GLOB_MODPAR_NAME = "leftRailType_m" then
	if leftRailType_m = RAIL_WIRED then
		bwl		= 0.005
		bthl	= 0.005
		bdl		= 0.005
	else
		bwl		= 0.025
		bthl	= 0.025
		bdl		= 0.05
	endif

	parameters bwl = bwr
	parameters bthl = bthr
	parameters bdl = bdr
endif

! ==============================================================================
! Symbolic 2D
! ==============================================================================

values "postSymbolType" stPostSymbolType
values "iPostSymbolType" 1, 2, 3, 4, 0
if GLOB_MODPAR_NAME = "postSymbolType" then
	iPostSymbolType = 1
	if postSymbolType = stPostSymbolType[2] then iPostSymbolType = 2
	if postSymbolType = stPostSymbolType[3] then iPostSymbolType = 3
	if postSymbolType = stPostSymbolType[4] then iPostSymbolType = 4
	if postSymbolType = stPostSymbolType[5] then iPostSymbolType = 0
	parameters iPostSymbolType = iPostSymbolType
else
	postSymbolType = stPostSymbolType[1]
	if iPostSymbolType = 2 then postSymbolType = stPostSymbolType[2]
	if iPostSymbolType = 3 then postSymbolType = stPostSymbolType[3]
	if iPostSymbolType = 4 then postSymbolType = stPostSymbolType[4]
	if iPostSymbolType = 0 then postSymbolType = stPostSymbolType[5]
	parameters postSymbolType = postSymbolType
endif

if NOT(bShowRailOnFloorPlan) then
	lock			"railLineType",
					"railPen",
					"bSymbolic2D",
					"postSymbolType",
					"iPostSymbolType",
					"postLineType",
					"postPen",
					"bShowRailAboveBreakLine"
	hideparameter	"railLineType",
					"railPen",
					"bSymbolic2D",
					"postSymbolType",
					"iPostSymbolType",
					"postLineType",
					"postPen",
					"bShowRailAboveBreakLine"
endif
if NOT(iPostSymbolType) then
	lock			"postLineType",
					"postPen"
	hideparameter	"postLineType",
					"postPen"
endif
if NOT(bSymbolic2D) then
	lock			"postSymbolType",
					"iPostSymbolType",
					"postLineType",
					"postPen"
	hideparameter	"postSymbolType",
					"iPostSymbolType",
					"postLineType",
					"postPen"
endif
if not(bShowRailAxis) then
	lock 			"railAxisLineType",
					"gs_RailAxisPen"
	hideparameter	"railAxisLineType",
					"gs_RailAxisPen"
endif
if	gs_detlevel_2D_m = DET2D_CUSTOM &\
	(gs_SymbolType_m = 3 |\
	gs_SymbolType_m = 8 |\
	gs_SymbolType_m = 15) then
	lock			"bShowRailAboveBreakLine"
	hideparameter	"bShowRailAboveBreakLine"
endif
if NOT(bShowCarriage) then
	lock			"iShowCarriageUpTo",
					"stShowCarriageUpTo",
					"carriageLineType",
					"carriagePen"
	hideparameter	"stShowCarriageUpTo",
					"carriageLineType",
					"carriagePen"
endif
if NOT(bEnableCarriageLine) then
	lock			"bShowCarriage",
					"iShowCarriageUpTo",
					"stShowCarriageUpTo",
					"carriageLineType",
					"carriagePen"
	hideparameter	"bShowCarriage",
					"stShowCarriageUpTo",
					"carriageLineType",
					"carriagePen"
endif

values "stShowCarriageUpTo" stShowCarriageValues
values "iShowCarriageUpTo" 1, 20, 50, 100, 200

if GLOB_MODPAR_NAME = "stShowCarriageUpTo" then
	iShowCarriageUpTo = 1
	if stShowCarriageUpTo = stShowCarriageValues[2]	then iShowCarriageUpTo = 20
	if stShowCarriageUpTo = stShowCarriageValues[3]	then iShowCarriageUpTo = 50
	if stShowCarriageUpTo = stShowCarriageValues[4]	then iShowCarriageUpTo = 100
	if stShowCarriageUpTo = stShowCarriageValues[5]	then iShowCarriageUpTo = 200
	parameters iShowCarriageUpTo = iShowCarriageUpTo
else
	stShowCarriageUpTo = stShowCarriageValues[1]
	if iShowCarriageUpTo = 20	then stShowCarriageUpTo = stShowCarriageValues[2]
	if iShowCarriageUpTo = 50	then stShowCarriageUpTo = stShowCarriageValues[3]
	if iShowCarriageUpTo = 100	then stShowCarriageUpTo = stShowCarriageValues[4]
	if iShowCarriageUpTo = 200	then stShowCarriageUpTo = stShowCarriageValues[5]
	parameters stShowCarriageUpTo = stShowCarriageUpTo
endif

!!! *** HIDE RAILING PARAMETERS *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

LOCK "ggr","sgr","ggl","sgl"

IF leftRailType_m = RAIL_BALUSTRADE THEN
	hideparameter	"fdfl",
				"bhl",
				"nbl",
				"btypl_m",
				"bdl",
				"hrtl_m",
				"hrdl"
	hideparameter	"hrwl",
				"hrhl",
				"hrol",
				"ptl_m",
				"npl"
	hideparameter	"nbtl",
				"pdl",
				"pwl",
				"pthl",
				"sbhl",
				"btl_m"
	hideparameter	"pmatl",
				"gs_PostBaseTypeL_m",
				"gs_PostBaseOverhangL"
ENDIF

IF leftRailType_m = RAIL_PARALLEL_BARS THEN
	HIDEPARAMETER "fswl", "ftwl", "fbwl", "bwl", "bthl", "abdistl"
	hideparameter	"fdfl",
				"btypl_m",
				"bdl",
				"hrtl_m",
				"hrdl"
	hideparameter	"hrwl",
				"hrhl",
				"hrol",
				"ptl_m",
				"npl"
	hideparameter	"nbtl",
				"pdl",
				"pwl",
				"pthl",
				"sbhl",
				"btl_m"
	hideparameter	"bmatl",
				"pmatl",
				"gs_PostBaseTypeL_m",
				"gs_PostBaseOverhangL"
ENDIF

IF leftRailType_m = RAIL_SIMPLE_BAR THEN
	HIDEPARAMETER "fswl", "ftwl", "fbwl", "bwl", "bthl", "abdistl"
	hideparameter	"fdfl",
				"nbl",
				"hrtl_m",
				"hrdl"
	hideparameter	"hrwl",
				"hrhl",
				"hrol",
				"ptl_m",
				"npl"
	hideparameter	"nbtl",
				"pdl",
				"pwl",
				"pthl",
				"sbhl",
				"btl_m"
	hideparameter	"bmatl",
				"pmatl",
				"gs_PostBaseTypeL_m",
				"gs_PostBaseOverhangL"
ENDIF

IF leftRailType_m = RAIL_SOLID_FRAME_FILLED THEN
	hideparameter	"bhl",
				"nbl",
				"btypl_m",
				"bdl",
				"hrtl_m",
				"hrdl"
	hideparameter	"hrwl",
				"hrhl",
				"hrol",
				"ptl_m",
				"npl",
				"btl_m"
	HIDEPARAMETER "nbtl", "pdl", "pwl", "pthl", "sbhl", "bwl", "abdistl"
	hideparameter	"pmatl",
				"gs_PostBaseTypeL_m",
				"gs_PostBaseOverhangL"
ENDIF

IF leftRailType_m = RAIL_SOLID_FRAME THEN
	hideparameter	"bthl",
				"fdfl",
				"bhl",
				"nbl",
				"btypl_m",
				"bdl",
				"hrtl_m",
				"hrdl"
	hideparameter	"hrwl",
				"hrhl",
				"hrol",
				"ptl_m",
				"npl",
				"btl_m"
	HIDEPARAMETER "nbtl", "pdl", "pwl", "pthl", "sbhl", "bwl", "abdistl"
	hideparameter	"bmatl",
				"pmatl",
				"gs_PostBaseTypeL_m",
				"gs_PostBaseOverhangL"
ENDIF

IF leftRailType_m = RAIL_SOLID THEN
	HIDEPARAMETER "fswl", "ftwl", "fbwl", "bthl", "fdfl"
	hideparameter	"bthl",
				"fdfl",
				"bhl",
				"nbl",
				"btypl_m",
				"bdl",
				"hrtl_m",
				"hrdl"
	hideparameter	"hrwl",
				"hrhl",
				"hrol",
				"ptl_m",
				"npl",
				"btl_m"
	HIDEPARAMETER "nbtl", "pdl", "pwl", "pthl", "sbhl", "bwl", "abdistl"
	hideparameter	"bmatl",
				"pmatl",
				"gs_PostBaseTypeL_m",
				"gs_PostBaseOverhangL"
ENDIF

IF leftRailType_m = RAIL_POST_WITH_BALUSTERS THEN
	HIDEPARAMETER "ggl","sgl"
	HIDEPARAMETER "fswl", "ftwl", "fbwl", "fdfl", "fthl"
	hideparameter	"fdfl",
				"bhl",
				"btypl_m"
	hideparameter	"nbtl",
				"sbhl",
				"abdistl",
				"gs_PostBaseTypeL_m"
ENDIF

IF leftRailType_m = RAIL_WIRED THEN
	HIDEPARAMETER "ggl","sgl"
	HIDEPARAMETER "fswl", "ftwl", "fbwl", "fdfl", "fthl"
	hideparameter	"fdfl",
				"bhl",
				"btypl_m"
	HIDEPARAMETER "sbhl"
	hideparameter	"nbtl",
				"abdistl",
				"gs_PostBaseTypeL_m"
ENDIF

IF leftRailType_m = RAIL_WIRED02 THEN
	HIDEPARAMETER "ggl","sgl"
	HIDEPARAMETER "fswl", "ftwl", "fbwl", "fdfl", "fthr"
	hideparameter	"fdfl",
				"bhl",
				"btypl_m"
	hideparameter	"nbtl",
				"abdistl",
				"ptl_m",
				"pdl",
				"gs_PostBaseTypeL_m"
ENDIF

IF leftRailType_m = RAIL_WOODEN_BALUSTRADE THEN
	HIDEPARAMETER "ggl","sgl"
	HIDEPARAMETER "fswl", "ftwl", "fbwl", "bthl", "fdfl", "fthl"
	hideparameter	"bthl",
				"fdfl",
				"bhl",
				"btypl_m"
	hideparameter	"sbhl",
				"abdistl",
				"ptl_m",
				"npl",
				"pwl"
	hideparameter	"pthl",
				"btl_m",
				"nbl"
	hideparameter	"bmatl",
				"gs_PostBaseTypeL_m",
				"gs_PostBaseOverhangL"
ENDIF

IF leftRailType_m = RAIL_POST_WITH_BARS THEN
	HIDEPARAMETER "ggl","sgl"
	HIDEPARAMETER "fswl", "ftwl", "fbwl", "fdfl", "fthl"
	hideparameter	"bhl",
				"btypl_m"
	HIDEPARAMETER "nbtl", "abdistl"
	hideparameter	"gs_PostBaseTypeL_m"
ENDIF

IF rightRailType_m = RAIL_BALUSTRADE THEN
	hideparameter	"fdfr",
				"bhr",
				"nbr",
				"btypr_m",
				"bdr",
				"hrtr_m",
				"hrdr"
	hideparameter	"hrwr",
				"hrhr",
				"hror",
				"ptr_m",
				"npr"
	hideparameter	"nbtr",
				"pdr",
				"pwr",
				"pthr",
				"sbhr",
				"btr_m"
	hideparameter	"pmatr",
				"gs_PostBaseTypeR_m",
				"gs_PostBaseOverhangR"
ENDIF

IF rightRailType_m = RAIL_PARALLEL_BARS THEN
	HIDEPARAMETER "fswr", "ftwr", "fbwr", "bwr", "bthr", "abdistr"
	hideparameter	"fdfr",
				"btypr_m",
				"bdr",
				"hrtr_m",
				"hrdr"
	hideparameter	"hrwr",
				"hrhr",
				"hror",
				"ptr_m",
				"npr"
	hideparameter	"nbtr",
				"pdr",
				"pwr",
				"pthr",
				"sbhr",
				"btr_m"
	hideparameter	"bmatr",
				"pmatr",
				"gs_PostBaseTypeR_m",
				"gs_PostBaseOverhangR"
ENDIF

IF rightRailType_m = RAIL_SIMPLE_BAR THEN
	HIDEPARAMETER "fswr", "ftwr", "fbwr", "bwr", "bthr", "abdistr"
	hideparameter	"fdfr",
				"nbr",
				"hrtr_m",
				"hrdr"
	hideparameter	"hrwr",
				"hrhr",
				"hror",
				"ptr_m",
				"npr"
	hideparameter	"nbtr",
				"pdr",
				"pwr",
				"pthr",
				"sbhr",
				"btr_m"
	hideparameter	"bmatr",
				"pmatr",
				"gs_PostBaseTypeR_m",
				"gs_PostBaseOverhangR"
ENDIF

IF rightRailType_m = RAIL_SOLID_FRAME_FILLED THEN
	hideparameter	"bhr",
				"nbr",
				"btypr_m",
				"bdr",
				"hrtr_m",
				"hrdr"
	hideparameter	"hrwr",
				"hrhr",
				"hror",
				"ptr_m",
				"npr",
				"btr_m"
	HIDEPARAMETER "nbtr", "pdr", "pwr", "pthr", "sbhr", "bwr", "abdistr"
	hideparameter	"pmatr",
				"gs_PostBaseTypeR_m",
				"gs_PostBaseOverhangR"
ENDIF

IF rightRailType_m = RAIL_SOLID_FRAME THEN
	hideparameter	"bthr",
				"fdfr",
				"bhr",
				"nbr",
				"btypr_m",
				"bdr",
				"hrtr_m",
				"hrdr"
	hideparameter	"hrwr",
				"hrhr",
				"hror",
				"ptr_m",
				"npr",
				"btr_m"
	HIDEPARAMETER "nbtr", "pdr", "pwr", "pthr", "sbhr", "bwr", "abdistr"
	hideparameter	"bmatr",
				"pmatr",
				"gs_PostBaseTypeR_m",
				"gs_PostBaseOverhangR"
ENDIF

IF rightRailType_m = RAIL_SOLID THEN
	HIDEPARAMETER "fswr", "ftwr", "fbwr", "bthr", "fdfr"
	hideparameter	"bthr",
				"fdfr",
				"bhr",
				"nbr",
				"btypr_m",
				"bdr",
				"hrtr_m",
				"hrdr"
	hideparameter	"hrwr",
				"hrhr",
				"hror",
				"ptr_m",
				"npr",
				"btr_m"
	HIDEPARAMETER "nbtr", "pdr", "pwr", "pthr", "sbhr", "bwr", "abdistr"
	hideparameter	"bmatr",
				"pmatr",
				"gs_PostBaseTypeR_m",
				"gs_PostBaseOverhangR"
ENDIF

IF rightRailType_m = RAIL_POST_WITH_BALUSTERS THEN
	HIDEPARAMETER "ggr","sgr"
	HIDEPARAMETER "fswr", "ftwr", "fbwr", "fdfr", "fthr"
	hideparameter	"fdfr",
				"bhr",
				"btypr_m"
	hideparameter	"nbtr",
				"sbhr",
				"abdistr",
				"gs_PostBaseTypeR_m"
ENDIF

IF rightRailType_m = RAIL_WIRED THEN
	HIDEPARAMETER "ggr","sgr"
	HIDEPARAMETER "fswr", "ftwr", "fbwr", "fdfr", "fthr"
	hideparameter	"fdfr",
				"bhr",
				"btypr_m"
	HIDEPARAMETER "sbhr"
	hideparameter	"nbtr",
				"abdistr",
				"gs_PostBaseTypeR_m"
ENDIF

IF rightRailType_m = RAIL_WIRED02 THEN
	HIDEPARAMETER "ggr","sgr"
	HIDEPARAMETER "fswr", "ftwr", "fbwr", "fdfr", "fthr"
	hideparameter	"fdfr",
				"bhr",
				"btypr_m"
	hideparameter	"nbtr",
				"abdistr",
				"ptr_m",
				"pdr",
				"gs_PostBaseTypeR_m"
ENDIF

IF rightRailType_m = RAIL_WOODEN_BALUSTRADE THEN
	HIDEPARAMETER "ggr","sgr"
	HIDEPARAMETER "fswr", "ftwr", "fbwr", "bthr", "fdfr", "fthr"
	hideparameter	"bthr",
				"fdfr",
				"bhr",
				"btypr_m"
	hideparameter	"sbhr",
				"abdistr",
				"ptr_m",
				"npr",
				"pwr"
	hideparameter	"pthr",
				"btr_m",
				"nbr"
	hideparameter	"bmatr",
				"gs_PostBaseTypeR_m",
				"gs_PostBaseOverhangR"
ENDIF

IF rightRailType_m = RAIL_POST_WITH_BARS THEN
	HIDEPARAMETER "ggr","sgr"
	HIDEPARAMETER "fswr", "ftwr", "fbwr", "fdfr", "fthr"
	hideparameter	"bhr",
				"btypr_m"
	HIDEPARAMETER "nbtr", "abdistr"
	hideparameter	"gs_PostBaseTypeR_m"
ENDIF

!!! *** FULL HIDE OF RAILING PARAMETERS *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

IF rail_m = RAILPOS_NONE or rail_m = RAILPOS_LEFT THEN
	hideparameter	"ggr",
				"hrr",
				"dsr",
				"roffr",
				"sgr",
				"fswr",
				"fthr",
				"ftwr",
				"fbwr",
				"bwr",
				"bthr",
				"abdistr",
				"fdfr",
				"bhr",
				"bdr",
				"nbr",
				"btypr_m",
				"fmatr",
				"bmatr",
				"romr_m",
				"rmmr",
				"hrtr_m",
				"hrdr",
				"hrwr",
				"hrhr",
				"hror",
				"ptr_m",
				"npr",
				"nbtr",
				"pdr",
				"pwr",
				"pthr",
				"btr_m",
				"nbr",
				"bwr",
				"bthr",
				"bdr",
				"sbhr",
				"bmatr",
				"fmatr",
				"pmatr"
ENDIF
IF rail_m = RAILPOS_NONE or rail_m = RAILPOS_RIGHT THEN
	hideparameter	"ggl",
				"hrl",
				"dsl",
				"roffl",
				"sgl",
				"fswl",
				"fthl",
				"ftwl",
				"fbwl",
				"bwl",
				"bthl",
				"abdistl",
				"fdfl",
				"bhl",
				"bdl",
				"nbl",
				"btypl_m",
				"fmatl",
				"bmatl",
				"roml_m",
				"rmml",
				"hrtl_m",
				"hrdl",
				"hrwl",
				"hrhl",
				"hrol",
				"ptl_m",
				"npl",
				"nbtl",
				"pdl",
				"pwl",
				"pthl",
				"btl_m",
				"nbl",
				"bwl",
				"bthl",
				"bdl",
				"sbhl",
				"bmatl",
				"fmatl",
				"pmatl"
ENDIF

!!! *** RIGHT RAIL STRUCTURAL DIMENSION PARAMETERS *** !!!!!!!!!!!!!!!!!!!!!!!!!

values{2} "romr_m" 	RAILORIENT_VERTICAL, `Вертикальный`,
					RAILORIENT_PERPENDICULAR, `Перпендикулярно Наклону`
values{2} "roml_m" 	RAILORIENT_VERTICAL, `Вертикальный`,
					RAILORIENT_PERPENDICULAR, `Перпендикулярно Наклону`
values{2} "gs_PostBaseTypeR_m" 	POSTBASE_VERTICALSURF, `Соединение с Вертикальной Поверхностью`,
								POSTBASE_HORIZONTALSURF, `Соединение с Горизонтальной Поверхностью`
values{2} "gs_PostBaseTypeL_m" 	POSTBASE_VERTICALSURF, `Соединение с Вертикальной Поверхностью`,
								POSTBASE_HORIZONTALSURF, `Соединение с Горизонтальной Поверхностью`


values{2} "hrtr_m" 	HANDRAIL_RECTANGULAR, `Прямоугольные`,
					HANDRAIL_ROUND, `Круглые`
IF hrtr_m = HANDRAIL_ROUND THEN
	HIDEPARAMETER "hrwr"
	HIDEPARAMETER "hrhr"
ELSE
	HIDEPARAMETER "hrdr"
ENDIF

values{2} "ptr_m" 	POST_RECTANGULAR, `Прямоугольные`,
					POST_ROUND, `Круглые`
IF ptr_m = POST_ROUND THEN
	HIDEPARAMETER "pwr"
	HIDEPARAMETER "pthr"
ELSE
	HIDEPARAMETER "pdr"
ENDIF

IF rightRailType_m <> RAIL_SIMPLE_BAR THEN
	values{2} "btr_m" 	BOARD_RECTANGULAR, `Прямоугольные`,
					BOARD_ROUND, `Круглые`
	IF btr_m = BOARD_ROUND THEN
		HIDEPARAMETER "bwr"
		HIDEPARAMETER "bthr"
	ELSE
		HIDEPARAMETER "bdr"
	ENDIF
ELSE
	IF btypr_m = BAR_ROUND THEN
		HIDEPARAMETER "bhr"
		HIDEPARAMETER "fthr"
	ELSE
		HIDEPARAMETER "bdr"
	ENDIF
ENDIF

IF leftRailType_m <> RAIL_SIMPLE_BAR THEN
	values{2} "btl_m" 	BOARD_RECTANGULAR, `Прямоугольные`,
					BOARD_ROUND, `Круглые`
	IF btl_m = BOARD_ROUND THEN
		HIDEPARAMETER "bwl"
		HIDEPARAMETER "bthl"
	ELSE
		HIDEPARAMETER "bdl"
	ENDIF
ELSE
	IF btypl_m = BAR_ROUND THEN
		HIDEPARAMETER "bhl"
		HIDEPARAMETER "fthl"
	ELSE
		HIDEPARAMETER "bdl"
	ENDIF
ENDIF

!!! *** LEFT RAIL STRUCTURAL DIMENSION PARAMETERS *** !!!!!!!!!!!!!!!!!!!!!!!!!!

IF bSameRails THEN
	hideparameter	"ggl",
				"roml_m",
				"hrl",
				"dsl",
				"roffl",
				"sgl",
				"fswl",
				"fthl",
				"ftwl",
				"fbwl",
				"abdistl",
				"fdfl",
				"bhl",
				"btypl_m",
				"hrtl_m",
				"hrdl",
				"hrwl",
				"hrhl",
				"hrol",
				"ptl_m",
				"npl",
				"nbtl",
				"pdl",
				"pwl",
				"pthl",
				"btl_m",
				"nbl",
				"bwl",
				"bthl",
				"bdl",
				"sbhl",
				"bmatl",
				"fmatl",
				"pmatl"
ENDIF

values{2} "hrtl_m" 	HANDRAIL_RECTANGULAR, `Прямоугольные`,
					HANDRAIL_ROUND, `Круглые`
IF hrtl_m = HANDRAIL_ROUND THEN
	HIDEPARAMETER "hrwl"
	HIDEPARAMETER "hrhl"
ELSE
	HIDEPARAMETER "hrdl"
ENDIF

values{2} "ptl_m" 	POST_RECTANGULAR, `Прямоугольные`,
					POST_ROUND, `Круглые`
IF ptl_m = POST_ROUND THEN
	HIDEPARAMETER "pwl"
	HIDEPARAMETER "pthl"
ELSE
	HIDEPARAMETER "pdl"
ENDIF

IF GLOB_MODPAR_NAME = "OverhangRBottom" THEN PARAMETERS temp_OverhangRBottom = OverhangRBottom/cos(angle)
IF GLOB_MODPAR_NAME = "temp_OverhangRBottom" THEN PARAMETERS OverhangRBottom = temp_OverhangRBottom*cos(angle)

IF GLOB_MODPAR_NAME = "OverhangRTop" THEN PARAMETERS temp_OverhangRTop = OverhangRTop/cos(angle)
IF GLOB_MODPAR_NAME = "temp_OverhangRTop" THEN PARAMETERS OverhangRTop = temp_OverhangRTop*cos(angle)

IF GLOB_MODPAR_NAME = "OverhangLBottom" THEN PARAMETERS temp_OverhangLBottom = OverhangLBottom/cos(angle)
IF GLOB_MODPAR_NAME = "temp_OverhangLBottom" THEN PARAMETERS OverhangLBottom = temp_OverhangLBottom*cos(angle)

IF GLOB_MODPAR_NAME = "OverhangLTop" THEN PARAMETERS temp_OverhangLTop = OverhangLTop/cos(angle)
IF GLOB_MODPAR_NAME = "temp_OverhangLTop" THEN PARAMETERS OverhangLTop = temp_OverhangLTop*cos(angle)

!!! Distance under Handrail
IF GLOB_MODPAR_NAME = "sbhr" 	THEN PARAMETERS sbhPerpR=sbhr/cos(angle)
IF GLOB_MODPAR_NAME = "sbhPerpR" THEN PARAMETERS sbhr=sbhPerpR*cos(angle)
IF GLOB_MODPAR_NAME = "ani" 	THEN PARAMETERS sbhPerpR=sbhr/cos(angle)

IF GLOB_MODPAR_NAME = "sbhl" 	THEN PARAMETERS sbhPerpL=sbhl/cos(angle)
IF GLOB_MODPAR_NAME = "sbhPerpL" THEN PARAMETERS sbhl=sbhPerpL*cos(angle)
IF GLOB_MODPAR_NAME = "ani" 	THEN PARAMETERS sbhPerpL=sbhl/cos(angle)

!!! End of RAILING !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!! Cover Materials !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

if iNoseType = NOSE_ROUNDED then
	hideparameter "covery","covthicky","mat_riser","ns"
else
	hideparameter "recefice","reclen"
endif
IF cover=0 		THEN
	HIDEPARAMETER "covthick","ns","mat_tread",
					"penLineTread", "typeFillTread",
					"penFillTread", "penBackFillTread"
endif
IF covery=0 	THEN 	HIDEPARAMETER "covthicky","mat_riser"

if iNoseType = NOSE_ROUNDED or covery=0 then
	HIDEPARAMETER 	"penLineRiser", "typeFillRiser",
					"penFillRiser", "penBackFillRiser"
endif

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!! Show Lines at Bottom and Toip Treads !!!!!!!!!!!!!!!!!!!!!!
!!IF stairtype=`Monolith` and tt=`Top Tread below Floor Level` THEN LOCK "top_line"
!!IF stairtype=`Monolith` and ft=`First Tread Above Floor Level` THEN LOCK "bottom_line"

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!! Settings of 2D Symbol Type *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

!! GENERAL SETTINGS
	lock	"gs_2DTread",
		"gs_2DTreadAbove",
		"gs_2DRiserAbove",
		"gs_2DContourAbove",
		"gs_2DContourBelow",
		"brk",
		"iLineTypeAboveBreak",
		"gs_ArrowFill",
		"gs_ArrowHeight",
		"gs_ArrowHalfWidth",
		"gs_StartEndFill",
		"gs_CircleRadius",
		"gs_StartWidth",
		"gs_StartHeight",
		"DirNumText_X",
		"DirNumText_Y",
		"DirUPDN_X",
		"DirUPDN_Y",
		"AngUPDN",
		"bSameRails",
		"brkLineY",
		"sbhPerpR",
		"sbhPerpL",
		"gs_FillTypeAbove"


	IF firstTreadLevel_m = FIRSTTREAD_ABOVEFLOOR 	AND gs_structure_landing_m = STRUCTTYPE_MONOLITH THEN	HIDEPARAMETER 	"bottom_line"
	IF topTreadLevel_m = TOPTREAD_BELOWFLOOR 	AND gs_structure_landing_m = STRUCTTYPE_MONOLITH THEN	HIDEPARAMETER 	"top_line"

	IF walkl=0 THEN
		 hideparameter	"gs_wLineType1",
					"gs_wLineType2",
					"gs_wLineTypeAbove",
					"gs_wLinePen",
					"arrow_style_m",
					"gs_ArrowFillPen",
					"gs_ArrowFillPenAbove",
					"gs_StartEndStyle",
					"gs_StartEndFillPen",
					"gs_RiseRunText",
					"gs_CustomText1",
					"gs_CustomText2",
					"bShowRiseAndRunText",
					"fontsize",
					"typeTextRotation_RiseRun",
					"gs_text_pen",
					"bUseACLinearUnit",
					"walkingDirUPDN",
					"UPDNfontsize",
					"UPDNfontpen",
					"gs_wLineTypeStUp",
					"typeTextRotation_UpDn"
	ENDIF

	IF arrow_style_m = ARROW_STYLE_1 OR arrow_style_m = ARROW_STYLE_2 OR arrow_style_m = ARROW_STYLE_3 THEN
		 HIDEPARAMETER 	"gs_ArrowFillPen","gs_ArrowFillPenAbove"
	ENDIF

	IF gs_StartEndStyle_m = STARTSYMB_STYLE3 OR gs_StartEndStyle_m = STARTSYMB_NONE  THEN
		 HIDEPARAMETER 	"gs_StartEndFillPen"
	ENDIF

	IF bShowNumbering=0  THEN
		 HIDEPARAMETER 	"nStartNumbering","gs_NumTextSize","gs_NumTextPen","gs_NumBelow","gs_NumAbove"
	ENDIF

	! ------ Story Sensitive ------------------------------
	if not(gs_StorySensitive) then
		hideparameter "gs_AboveHomeStory"
	else
		if not(gs_BreaklineStUp) then
			hideparameter "gs_LowerPartStUp","gs_UpperPartStUp"
		endif
		if not(gs_LowerPartStUp) & not(gs_UpperPartStUp) & gs_BreaklineStUp then
			hideparameter "gs_TreadStUp"
		endif
	endif

	! ------ for 2D above Home Story ------------------------------[
	if	(GLOB_MODPAR_NAME = "gs_SymbolType" | GLOB_MODPAR_NAME = "gs_SymbolType_m" |\
		GLOB_MODPAR_NAME = "gs_detlevel_2D" | GLOB_MODPAR_NAME = "gs_detlevel_2D_m") &\
		gs_detlevel_2D_m = DET2D_CUSTOM then
		if gs_SymbolType_m  = 1 | gs_SymbolType_m  = 2 then
			parameters	gs_BreaklineStUp	= 0,
						gs_TreadStUp		= 0
		endif
		if gs_SymbolType_m  = 3 | gs_SymbolType_m  = 4 | gs_SymbolType_m  = 5 then
			parameters	gs_BreaklineStUp	= 1,
						gs_LowerPartStUp	= 0,
						gs_UpperPartStUp	= 1,
						gs_TreadStUp		= 0
		endif
		if gs_SymbolType_m  = 6 | gs_SymbolType_m  = 7 | \
			gs_SymbolType_m  = 13 | gs_SymbolType_m  = 14 then
			parameters	gs_BreaklineStUp	= 0,
						gs_TreadStUp		= 1
		endif
		if gs_SymbolType_m  = 8 | gs_SymbolType_m  = 9 | gs_SymbolType_m  = 10 | \
			gs_SymbolType_m  = 11 | gs_SymbolType_m  = 12 | \
			gs_SymbolType_m  = 15 | gs_SymbolType_m  = 16 | gs_SymbolType_m  = 17 | \
			gs_SymbolType_m  = 18 | gs_SymbolType_m  = 19 | gs_SymbolType_m  = 20 then
			parameters	gs_BreaklineStUp = 1,
						gs_LowerPartStUp = 0,
						gs_UpperPartStUp = 1,
						gs_TreadStUp = 1
		endif
	endif
	! ------ for 2D above Home Story ------------------------------]

	!!! SETTINGS BY SYMBOL TYPES !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
	!!! ******************************************************* !!

	if gs_detlevel_2D_m = DET2D_CUSTOM then
		IF gs_SymbolType_m = 1 THEN
			HIDEPARAMETER	"gs_NosingLine",
							"gs_NumBelow","gs_NumAbove","gs_FillAbove",
							"gs_wLineType1","gs_wLineTypeAbove","bShowRailAxis","railAxisLineType",
							"gs_RailAxisPen","gs_ArrowFillPenAbove",
							"gs_cont_pen","solid_line"
	
			IF bShowRiseAndRunText=0 AND walkingDirUPDN_m = WALKDIRSTR_NONE OR walkl=0 THEN HIDEPARAMETER "fontType"
			IF gs_StorySensitive=0 OR gs_StorySensitive=1 AND gs_BreaklineStUp=0 THEN
				hideparameter	"gs_BreakHeight",
						"breakline_style_m"
			ENDIF
		ENDIF
	
		IF gs_SymbolType_m = 2 THEN
			HIDEPARAMETER 	"gs_NosingLine",
							"gs_NumBelow","gs_NumAbove","gs_FillAbove",
							"gs_wLineType2","gs_wLineTypeAbove","bShowRailAxis","railAxisLineType",
							"gs_RailAxisPen","gs_ArrowFillPenAbove",
							"gs_DashLinePen","dash_line"
	
			IF bShowRiseAndRunText=0 AND walkingDirUPDN_m = WALKDIRSTR_NONE OR walkl=0 THEN HIDEPARAMETER "fontType"
			IF gs_StorySensitive=0 OR gs_StorySensitive=1 AND gs_BreaklineStUp=0 THEN
			hideparameter	"gs_BreakHeight",
					"breakline_style_m"
			ENDIF
		ENDIF
	
		IF gs_SymbolType_m = 3 THEN
			HIDEPARAMETER 	"gs_NosingLine",
							"gs_NumBelow","gs_NumAbove","gs_FillAbove",
							"gs_wLineType2","gs_wLineTypeAbove","bShowRailAxis","railAxisLineType",
							"gs_RailAxisPen","gs_ArrowFillPenAbove",
							"gs_DashLinePen","dash_line"
	
			IF bShowRiseAndRunText=0 AND walkingDirUPDN_m = WALKDIRSTR_NONE OR walkl=0 THEN HIDEPARAMETER "fontType"
		ENDIF
	
		IF gs_SymbolType_m = 4 THEN
			HIDEPARAMETER 	"gs_NosingLine",
							"gs_wLineType2","bShowRailAxis","railAxisLineType","gs_RailAxisPen"
	
			IF bShowRiseAndRunText=0 AND walkingDirUPDN_m = WALKDIRSTR_NONE OR walkl=0 THEN HIDEPARAMETER "fontType"
		ENDIF
	
		IF gs_SymbolType_m = 5 THEN
			HIDEPARAMETER 	"gs_NosingLine",
							"gs_wLineType2","gs_wLineTypeAbove","bShowRailAxis","railAxisLineType","gs_RailAxisPen",
							"gs_DashLinePen","dash_line"
	
			IF bShowRiseAndRunText=0 AND walkingDirUPDN_m = WALKDIRSTR_NONE OR walkl=0 THEN HIDEPARAMETER "fontType"
		ENDIF
	
		IF gs_SymbolType_m = 6 THEN
			HIDEPARAMETER 	"gs_NosingLine",
							"gs_NumBelow","gs_NumAbove","gs_FillAbove",
							"gs_wLineType1","gs_wLineTypeAbove","bShowRailAxis","railAxisLineType",
							"gs_RailAxisPen","gs_ArrowFillPenAbove",
							"gs_cont_pen","solid_line"
	
			IF bShowRiseAndRunText=0 AND walkingDirUPDN_m = WALKDIRSTR_NONE and bShowNumbering=0 OR walkl=0 and bShowNumbering=0 THEN HIDEPARAMETER "fontType"
			IF gs_StorySensitive=0 OR gs_StorySensitive=1 AND gs_BreaklineStUp=0 THEN
			hideparameter	"gs_BreakHeight",
					"breakline_style_m"
			ENDIF
		ENDIF
	
		IF gs_SymbolType_m = 7 THEN
			HIDEPARAMETER 	"gs_NosingLine",
							"gs_NumBelow","gs_NumAbove","gs_FillAbove",
							"gs_wLineType2","gs_wLineTypeAbove","bShowRailAxis","railAxisLineType",
							"gs_RailAxisPen","gs_ArrowFillPenAbove",
							"gs_DashLinePen","dash_line"
	
			IF bShowRiseAndRunText=0 AND walkingDirUPDN_m = WALKDIRSTR_NONE and bShowNumbering=0 OR walkl=0 and bShowNumbering=0 THEN HIDEPARAMETER "fontType"
			IF gs_StorySensitive=0 OR gs_StorySensitive=1 AND gs_BreaklineStUp=0 THEN
			hideparameter	"gs_BreakHeight",
					"breakline_style_m"
			ENDIF
		ENDIF
	
		IF gs_SymbolType_m = 8 THEN
			HIDEPARAMETER 	"gs_NosingLine","gs_wLineType2","gs_wLineTypeAbove",
							"gs_NumBelow","gs_NumAbove","gs_FillAbove",
							"bShowRailAxis","railAxisLineType","gs_RailAxisPen","gs_ArrowFillPenAbove",
							"gs_DashLinePen","dash_line"
	
			IF bShowRiseAndRunText=0 AND walkingDirUPDN_m = WALKDIRSTR_NONE OR walkl=0 THEN HIDEPARAMETER "fontType"
		ENDIF
	
		IF gs_SymbolType_m = 9 THEN
			HIDEPARAMETER 	"gs_NosingLine","gs_wLineType2",
							"bShowRailAxis","railAxisLineType","gs_RailAxisPen"
	
			IF bShowRiseAndRunText=0 AND walkingDirUPDN_m = WALKDIRSTR_NONE OR walkl=0 THEN HIDEPARAMETER "fontType"
		ENDIF
	
		IF gs_SymbolType_m = 10 THEN
			HIDEPARAMETER 	"gs_NosingLine","gs_wLineType2","gs_wLineTypeAbove",
							"bShowRailAxis","railAxisLineType","gs_RailAxisPen",
							"gs_DashLinePen","dash_line"
	
			IF bShowRiseAndRunText=0 AND walkingDirUPDN_m = WALKDIRSTR_NONE OR walkl=0 THEN HIDEPARAMETER "fontType"
		ENDIF
	
		IF gs_SymbolType_m = 11 THEN
			HIDEPARAMETER 	"gs_NosingLine","gs_wLineType2","bShowRailAxis","railAxisLineType","gs_RailAxisPen"
	
			IF bShowRiseAndRunText=0 AND walkingDirUPDN_m = WALKDIRSTR_NONE and bShowNumbering=0 OR walkl=0 and bShowNumbering=0 THEN HIDEPARAMETER "fontType"
		ENDIF
	
		IF gs_SymbolType_m = 12 THEN
			HIDEPARAMETER 	"gs_NosingLine","gs_wLineType2","gs_wLineTypeAbove","bShowRailAxis","railAxisLineType","gs_RailAxisPen",
							"gs_DashLinePen","dash_line"
	
			IF bShowRiseAndRunText=0 AND walkingDirUPDN_m = WALKDIRSTR_NONE and bShowNumbering=0 OR walkl=0 and bShowNumbering=0 THEN HIDEPARAMETER "fontType"
		ENDIF
	
		IF gs_SymbolType_m = 13 THEN
			HIDEPARAMETER 	"gs_NumBelow","gs_NumAbove","gs_FillAbove",
							"gs_wLineType1","gs_wLineTypeAbove","gs_ArrowFillPenAbove",
							"gs_cont_pen","solid_line"
	
			IF bShowRiseAndRunText=0 AND walkingDirUPDN_m = WALKDIRSTR_NONE and bShowNumbering=0 OR walkl=0 and bShowNumbering=0 THEN HIDEPARAMETER "fontType"
			IF gs_StorySensitive=0 OR gs_StorySensitive=1 AND gs_BreaklineStUp=0 THEN
			hideparameter	"gs_BreakHeight",
					"breakline_style_m"
			ENDIF
		ENDIF
	
		IF gs_SymbolType_m = 14 THEN
			HIDEPARAMETER 	"gs_NumBelow","gs_NumAbove","gs_FillAbove",
							"gs_wLineType2","gs_wLineTypeAbove","gs_ArrowFillPenAbove"
	
			IF bShowRiseAndRunText=0 AND walkingDirUPDN_m = WALKDIRSTR_NONE and bShowNumbering=0 OR walkl=0 and bShowNumbering=0 THEN HIDEPARAMETER "fontType"
			IF gs_StorySensitive=0 OR gs_StorySensitive=1 AND gs_BreaklineStUp=0 THEN
			hideparameter	"gs_BreakHeight",
					"breakline_style_m"
			ENDIF
		ENDIF
	
		IF gs_SymbolType_m = 15 THEN
			HIDEPARAMETER 	"gs_wLineType2","gs_wLineTypeAbove",
							"gs_NumBelow","gs_NumAbove","gs_FillAbove",
							"gs_ArrowFillPenAbove"
	
			IF bShowRiseAndRunText=0 AND walkingDirUPDN_m = WALKDIRSTR_NONE OR walkl=0 THEN HIDEPARAMETER "fontType"
		ENDIF
	
		IF gs_SymbolType_m = 16 THEN
			HIDEPARAMETER 	"gs_wLineType2"
	
			IF bShowRiseAndRunText=0 AND walkingDirUPDN_m = WALKDIRSTR_NONE OR walkl=0 THEN HIDEPARAMETER "fontType"
		ENDIF
	
		IF gs_SymbolType_m = 17 THEN
			HIDEPARAMETER 	"gs_wLineType2","gs_wLineTypeAbove"
	
			IF bShowRiseAndRunText=0 AND walkingDirUPDN_m = WALKDIRSTR_NONE OR walkl=0 THEN HIDEPARAMETER "fontType"
		ENDIF
	
		IF gs_SymbolType_m = 18 THEN
			HIDEPARAMETER 	"gs_wLineType2"
	
			IF bShowRiseAndRunText=0 AND walkingDirUPDN_m = WALKDIRSTR_NONE and bShowNumbering=0 OR walkl=0 and bShowNumbering=0 THEN HIDEPARAMETER "fontType"
		ENDIF
	
		IF gs_SymbolType_m = 19 THEN
			HIDEPARAMETER 	"gs_wLineType2"
	
			IF bShowRiseAndRunText=0 AND walkingDirUPDN_m = WALKDIRSTR_NONE and bShowNumbering=0 OR walkl=0 and bShowNumbering=0 THEN HIDEPARAMETER "fontType"
		ENDIF
	
		IF gs_SymbolType_m = 20 THEN
			HIDEPARAMETER 	"gs_wLineType2","gs_wLineTypeAbove"
	
			IF bShowRiseAndRunText=0 AND walkingDirUPDN_m = WALKDIRSTR_NONE and bShowNumbering=0 OR walkl=0 and bShowNumbering=0 THEN HIDEPARAMETER "fontType"
		ENDIF
	endif

! ==============================================================================
! mm / point conversion
! ==============================================================================

MM_IN_A_DOT = 25.4 / 72

if GLOB_MODPAR_NAME = "gs_text_size_pt_UpDn" then
	UPDNfontsize = gs_text_size_pt_UpDn * MM_IN_A_DOT
	parameters UPDNfontsize = UPDNfontsize
else
	gs_text_size_pt_UpDn = UPDNfontsize / MM_IN_A_DOT
	parameters gs_text_size_pt_UpDn = gs_text_size_pt_UpDn
endif

if GLOB_MODPAR_NAME = "gs_text_size_pt" then
	fontsize = gs_text_size_pt * MM_IN_A_DOT
	parameters fontsize = fontsize
else
	gs_text_size_pt = fontsize / MM_IN_A_DOT
	parameters gs_text_size_pt = gs_text_size_pt
endif

if GLOB_MODPAR_NAME = "gs_text_size_pt_num" then
	gs_NumTextSize = gs_text_size_pt_num * MM_IN_A_DOT
	parameters gs_NumTextSize = gs_NumTextSize
else
	gs_text_size_pt_num = gs_NumTextSize / MM_IN_A_DOT
	parameters gs_text_size_pt_num = gs_text_size_pt_num
endif


! --- Connecting integer and section pencolor type parameters ---

dim iPenNumber[255]
for i=1 to 255
	iPenNumber[i]=i
next i

values "gs_cont_pen"		iPenNumber
values "gs_DashLinePen"		iPenNumber
values "railPen"			iPenNumber
values "gs_RailAxisPen"		iPenNumber
values "postPen"			iPenNumber
values "carriagePen"		iPenNumber
values "gs_fill_pen"		iPenNumber
values "gs_wLinePen"		iPenNumber
values "gs_NumTextPen"		iPenNumber
values "gs_text_pen"		iPenNumber
values "UPDNfontpen"		iPenNumber
values "gs_LinePenStUp"		iPenNumber
values "penLineStringer" 	iPenNumber
values "penFillStringer" 	iPenNumber
values "penLineTread" 		iPenNumber
values "penFillTread" 		iPenNumber
values "penLineRiser" 		iPenNumber
values "penFillRiser" 		iPenNumber

if GLOB_MODPAR_NAME = "penLineStringer_m" then
	if penLineStringer_m < -1 | penLineStringer_m > 255 then
		penLineStringer_m = 1
		parameters penLineStringer_m = penLineStringer_m
	endif
	parameters penLineStringer = penLineStringer_m
else
	parameters penLineStringer_m = penLineStringer
endif
if GLOB_MODPAR_NAME = "penFillStringer_m" then
	if penFillStringer_m < -1 | penFillStringer_m > 255 then
		penFillStringer_m = 1
		parameters penFillStringer_m = penFillStringer_m
	endif
	parameters penFillStringer = penFillStringer_m
else
	parameters penFillStringer_m = penFillStringer
endif

if GLOB_MODPAR_NAME = "penLineTread_m" then
	if penLineTread_m < 1 | penLineTread_m > 255 then
		penLineTread_m = 1
		parameters penLineTread_m = penLineTread_m
	endif
	parameters penLineTread = penLineTread_m
else
	parameters penLineTread_m = penLineTread
endif
if GLOB_MODPAR_NAME = "penFillTread_m" then
	if penFillTread_m < 1 | penFillTread_m > 255 then
		penFillTread_m = 1
		parameters penFillTread_m = penFillTread_m
	endif
	parameters penFillTread = penFillTread_m
else
	parameters penFillTread_m = penFillTread
endif

if GLOB_MODPAR_NAME = "penLineRiser_m" then
	if penLineRiser_m < 1 | penLineRiser_m > 255 then
		penLineRiser_m = 1
		parameters penLineRiser_m = penLineRiser_m
	endif
	parameters penLineRiser = penLineRiser_m
else
	parameters penLineRiser_m = penLineRiser
endif
if GLOB_MODPAR_NAME = "penFillRiser_m" then
	if penFillRiser_m < 1 | penFillRiser_m > 255 then
		penFillRiser_m = 1
		parameters penFillRiser_m = penFillRiser_m
	endif
	parameters penFillRiser = penFillRiser_m
else
	parameters penFillRiser_m = penFillRiser
endif


if GLOB_MODPAR_NAME = "penBackFillStringer_m" then
	if penBackFillStringer_m < -1 | penBackFillStringer_m > 255 then
		penBackFillStringer_m = 1
		parameters penBackFillStringer_m = penBackFillStringer_m
	endif
	parameters penBackFillStringer = penBackFillStringer_m
else
	parameters penBackFillStringer_m = penBackFillStringer
endif

if GLOB_MODPAR_NAME = "penBackFillTread_m" then
	if penBackFillTread_m < -1 | penBackFillTread_m > 255 then
		penBackFillTread_m = 1
		parameters penBackFillTread_m = penBackFillTread_m
	endif
	parameters penBackFillTread = penBackFillTread_m
else
	parameters penBackFillTread_m = penBackFillTread
endif

if GLOB_MODPAR_NAME = "penBackFillRiser_m" then
	if penBackFillRiser_m < -1 | penBackFillRiser_m > 255 then
		penBackFillRiser_m = 1
		parameters penBackFillRiser_m = penBackFillRiser_m
	endif
	parameters penBackFillRiser = penBackFillRiser_m
else
	parameters penBackFillRiser_m = penBackFillRiser
endif


! =============================================================================
! Onorm list Settings
! =============================================================================

if LibraryLangCode = "AUT" or LibraryLangCode = "CHE" or LibraryLangCode = "GER" then
	call "Onorm_Stair" parameters all matTread = mat_tread
else
	hideparameter "gs_onorm_Title", "gs_list_soundinsul"
endif

! =============================================================================
! IFC2x3 Property Set for Stairs
! =============================================================================

STRAIGHT_RUN_STAIR = 1
parameters ifc_StairType 		= STRAIGHT_RUN_STAIR
parameters ifc_NumberOfRiser 	= rnu
parameters ifc_NumberOfTreads 	= numTread
parameters ifc_RiserHeight		= th
parameters ifc_TreadLength		= td

]]>
</Script_VL>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_3D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[

pen gs_cont_pen

IF GLOB_CONTEXT>20 and GLOB_CONTEXT<40 THEN 		!! FOR Simple Model and in 3D Windoow
gs_detlevel_3D_m = DET3D_SIMPLE
ENDIF


RESOL 6

IF gs_detlevel_3D_m = DET3D_OFF THEN end
IF gs_shadow=0 THEN SHADOW OFF


!!!!!!!!!!!!!!!!!!! *** HOTSPOTs RailUNID *** !!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

	!!! FlightUNID=1	!!! Concrete 1-30, Monolith 500-522
	!!! RailUNID=1000	!!! Concrete 1000-1530, Monolith 2000-2530

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

addz -covthick

IF gs_structure_landing_m = STRUCTTYPE_MONOLITH THEN gosub "monolith"
IF gs_structure_landing_m = STRUCTTYPE_CONCRETE THEN gosub "concrete"

!================================================================================
end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end
!================================================================================


"concrete":

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!! CONCRETE !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!ADDy -ljl
!!! Vert.Height of Stair Slab Thickness
temp_sst=sst*(sqr(td*td+th*th))/td

behuzas=sst*(sqr(td*td+th*th))/td

!!behuzas=sst*sqr(td*td*rnu*rnu+th*th*rnu*rnu) / (th*rnu)

ADDz -behuzas


alsoilleszt = ljl
felsoilleszt= ujl
mag  = th*rnu+behuzas
szel = td*rnu+alsoilleszt


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!! HOTSPOTS !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

	!!! Editable HOTSPOTs at First Tread

		FlightUNID=1

		!!! FLIGHT WIDTH

		HOTSPOT 		0,	0,	behuzas, FlightUNID, flw, 1+256 : FlightUNID=FlightUNID+1
		HOTSPOT 		-1,	0,	behuzas, FlightUNID, flw, 3 : FlightUNID=FlightUNID+1
		HOTSPOT 		flw,0,	behuzas, FlightUNID, flw, 2 : FlightUNID=FlightUNID+1

		!!! LOWER JOINT LENGTH

		HOTSPOT 		0,	0,	behuzas, FlightUNID, ljl, 1+128 : FlightUNID=FlightUNID+1
		HOTSPOT 		0,	1,	behuzas, FlightUNID, ljl, 3 : FlightUNID=FlightUNID+1
		HOTSPOT 		0, -ljl,	behuzas, FlightUNID, ljl, 2 : FlightUNID=FlightUNID+1

		HOTSPOT 		flw,	0,	behuzas, FlightUNID, ljl, 1+128 : FlightUNID=FlightUNID+1
		HOTSPOT 		flw,	1,	behuzas, FlightUNID, ljl, 3 : FlightUNID=FlightUNID+1
		HOTSPOT 		flw, -ljl,	behuzas, FlightUNID, ljl, 2 : FlightUNID=FlightUNID+1

		!!! LOWER JOINT HEIGHT

		HOTSPOT 		0,	-ljl,	behuzas, FlightUNID, ljh, 1+128 : FlightUNID=FlightUNID+1
		HOTSPOT 		0,	-ljl,	behuzas+1, FlightUNID, ljh, 3 : FlightUNID=FlightUNID+1
		HOTSPOT 		0,	-ljl,	behuzas-ljh, FlightUNID, ljh, 2 : FlightUNID=FlightUNID+1

		HOTSPOT 		flw,	-ljl,	behuzas, FlightUNID, ljh, 1+128 : FlightUNID=FlightUNID+1
		HOTSPOT 		flw,	-ljl,	behuzas+1, FlightUNID, ljh, 3 : FlightUNID=FlightUNID+1
		HOTSPOT 		flw,	-ljl,	behuzas-ljh, FlightUNID, ljh, 2 : FlightUNID=FlightUNID+1

	!!! Editable HOTSPOTs at Top Tread
	ADDy -ljl
		!!! FLIGHT WIDTH

		HOTSPOT 		0,	szel-td,	mag, FlightUNID, flw, 1+256 : FlightUNID=FlightUNID+1
		HOTSPOT 		-1,	szel-td,	mag, FlightUNID, flw, 3 : FlightUNID=FlightUNID+1
		HOTSPOT 		flw,szel-td,	mag, FlightUNID, flw, 2 : FlightUNID=FlightUNID+1

		!!! UPPER JOINT LENGTH

		HOTSPOT 		0,	szel,	mag, FlightUNID, ujl, 1+128 : FlightUNID=FlightUNID+1
		HOTSPOT 		0,	szel-1,	mag, FlightUNID, ujl, 3 : FlightUNID=FlightUNID+1
		HOTSPOT 		0,szel+ujl,	mag, FlightUNID, ujl, 2 : FlightUNID=FlightUNID+1

		HOTSPOT 		flw,	szel,	mag, FlightUNID, ujl, 1+128 : FlightUNID=FlightUNID+1
		HOTSPOT 		flw,	szel-1,	mag, FlightUNID, ujl, 3 : FlightUNID=FlightUNID+1
		HOTSPOT 		flw,szel+ujl,	mag, FlightUNID, ujl, 2 : FlightUNID=FlightUNID+1

		!!! UPPER JOINT HEIGHT

		HOTSPOT 		0,	szel+ujl,	mag, FlightUNID, ujh, 1+128 : FlightUNID=FlightUNID+1
		HOTSPOT 		0,	szel+ujl,	mag+1, FlightUNID, ujh, 3 : FlightUNID=FlightUNID+1
		HOTSPOT 		0,	szel+ujl,	mag-ujh, FlightUNID, ujh, 2 : FlightUNID=FlightUNID+1

		HOTSPOT 		flw,	szel+ujl,	mag, FlightUNID, ujh, 1+128 : FlightUNID=FlightUNID+1
		HOTSPOT 		flw,	szel+ujl,	mag+1, FlightUNID, ujh, 3 : FlightUNID=FlightUNID+1
		HOTSPOT 		flw,	szel+ujl,	mag-ujh, FlightUNID, ujh, 2 : FlightUNID=FlightUNID+1


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!! END of HOTSPOTS !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


ROTy 90
ROTz 90

!!! Geometry of Upper Joint
	pontszam=6

	put alsoilleszt/2,0
	put alsoilleszt,0
	put szel,mag-behuzas
	put szel,mag-ujh
	put szel+felsoilleszt,mag - ujh
	put szel+felsoilleszt,mag


	!!! put szel,mag
	IF (cover or covery) and gs_detlevel_3D_m = DET3D_SIMPLE THEN
		put szel,mag
		IF covery THEN
			put szel,mag+covthick
			pontszam=pontszam+1
		ENDIF
		pontszam=pontszam+1
		IF covery THEN xx=szel-covthicky ELSE xx=szel
		IF cover THEN yy=mag+covthick ELSE yy=mag
	ELSE
		xx=szel
		yy=mag
	ENDIF


FOR i=1 to rnu
	!			Boritas
	IF cover and iNoseType = NOSE_NORMAL and gs_detlevel_3D_m = DET3D_DETAILED THEN

		IF i <> 1 THEN
			! T R E A D S
			MATERIAL mat_tread
			SECT_FILL typeFillTread, penBackFillTread, penFillTread, penLineTread

			IF covthick > 0 THEN
				PRISM 5, flw,
					xx, yy,
					xx-td-ns-covthicky, yy,
					xx-td-ns-covthicky, yy + covthick,
					xx, yy + covthick,
					xx, yy
			ENDIF
		ENDIF
	ENDIF
	IF covery and i <> 1 and iNoseType = NOSE_NORMAL and gs_detlevel_3D_m = DET3D_DETAILED THEN
			MATERIAL mat_riser
			SECT_FILL typeFillRiser, penBackFillRiser, penFillRiser, penLineRiser

			!!! R I S E R S
			PRISM 5, flw,
				xx, yy+covthick,
				xx, yy+th,
				xx-covthicky, yy + th,
				xx-covthicky, yy + covthick,
				xx, yy + covthick
	ENDIF
	IF iNoseType = NOSE_NORMAL THEN
			put xx-td,yy
			put xx-td,yy-th
			pontszam=pontszam+2
			xx=xx-td
			yy=yy-th
		ELSE
			put xx-td,yy
			put xx-td+tproj,yy-th
			pontszam=pontszam+2
			xx=xx-td
			yy=yy-th
	ENDIF
NEXT i

	IF covery and iNoseType = NOSE_NORMAL and gs_detlevel_3D_m = DET3D_DETAILED  THEN
			MATERIAL mat_riser
			SECT_FILL typeFillRiser, penBackFillRiser, penFillRiser, penLineRiser

			!!! FIRST_R I S E R S
			PRISM 5, flw,
				xx, yy+covthick,
				xx, yy+th,
				xx-covthicky, yy + th,
				xx-covthicky, yy + covthick,
				xx, yy + covthick
	ENDIF
	IF cover and iNoseType = NOSE_NORMAL and gs_detlevel_3D_m = DET3D_DETAILED  THEN
			!!! FIRST_ T R E A D
			MATERIAL mat_tread
			SECT_FILL typeFillTread, penBackFillTread, penFillTread, penLineTread

			IF covthick > 0 THEN
			PRISM 5, flw,
				0+ljl, behuzas,
				0, behuzas,
				0, behuzas + covthick,
				0+ljl, behuzas + covthick,
				0+ljl, behuzas

			!!! TOP_ T R E A D
			MATERIAL mat_tread
			SECT_FILL typeFillTread, penBackFillTread, penFillTread, penLineTread

			PRISM 5, flw,
				szel+ujl, mag,
				szel-td-ns-covthicky, mag,
				szel-td-ns-covthicky, mag + covthick,
				szel+ujl, mag + covthick,
				szel+ujl, mag
			ENDIF
	ENDIF


IF gs_detlevel_3D_m = DET3D_SIMPLE and cover THEN incbehuz = covthick ELSE incbehuz = 0

	!!! Geometry of Lower Joint

		put 0,behuzas+incbehuz
		put 0,behuzas-ljh
		put alsoilleszt/2, behuzas-ljh
		put alsoilleszt/2,0
		pontszam=pontszam+4

	!!! STAIR SLAB
		MATERIAL matb
		SECT_FILL typeFillStringer, penBackFillStringer, penFillStringer, penLineStringer

		PRISM pontszam, flw,
			get(pontszam*2)

	IF iNoseType = NOSE_ROUNDED and cover and gs_detlevel_3D_m = DET3D_DETAILED THEN
		MATERIAL mat_tread
		SECT_FILL typeFillTread, penBackFillTread, penFillTread, penLineTread

		kisx=covthick*tproj/th
		startpnt=1
		endpnt=rnu



	ADDy behuzas
	ADDx alsoilleszt

	!!! Covering at Lower Joint
	PRISM_ 5, flw,
		tproj,0,15,
		-ljl,0,15,
		-ljl,covthick,15,
		tproj-kisx,covthick,15,
		tproj,0,-1

	FOR i=startpnt to endpnt-1
		ADDy i*th
		ADDx i*td
		recnum=5
		!!! T R E A D S
		IF recefice THEN	!!! Non-Slip Tread Inserts=ON
			FOR rcfc=recnum to 1 step -1
				put -td+(rcfc*2)*reclen, covthick,15
				put	-td+(rcfc*2)*reclen, covthick-reclen,15
				put	-td+(rcfc*2-1)*reclen, covthick-reclen,15
				put	-td+(rcfc*2-1)*reclen, covthick,15
			NEXT rcfc

			PRISM_ 9+recnum*4, flw,
				tproj,					0,15,
				tproj-kisx,				covthick,15,

				get(recnum*12),

				-td,					covthick,79,
				-td,					0,900,
				0,						180-atn(th/tproj),4013,
				-td+tproj-kisx-covthick,covthick-th,15,
				-td+tproj-kisx,			covthick-th,15,
				-td,					0,15,
				tproj,					0,15

			DEL 2
		ELSE				!!! Non-Slip Tread Inserts=OFF
			PRISM_ 9, flw,
				tproj,					0,15,
				tproj-kisx,				covthick,15,
				-td,					covthick,79,
				-td,					0,900,
				0,						180-atn(th/tproj),4013,
				-td+tproj-kisx-covthick,covthick-th,15,
				-td+tproj-kisx,			covthick-th,15,
				-td,					0,15,
				tproj,					0,15
			DEL 2
		ENDIF
	NEXT i

	ADDy endpnt*th
	ADDx endpnt*td

	!!! T O P_ T R E A D
	IF recefice=0 THEN	!!! Non-Slip Tread Inserts=OFF
		PRISM_ 9, flw,
			ujl,						0,15,
			ujl,						covthick,15,
			-td,					covthick,79,
			-td,					0,900,
			ujl,						180-atn(th/tproj),4013,
			-td+tproj-kisx-covthick,covthick-th,15,
			-td+tproj-kisx,			covthick-th,15,
			-td,					0,15,
			ujl,						0,15
		DEL 2
	ELSE					!!! Non-Slip Tread Inserts=ON
		recnum=5
		FOR rcfc=recnum to 1 step -1
			put -td+(rcfc*2)*reclen, covthick,15
			put	-td+(rcfc*2)*reclen, covthick-reclen,15
			put	-td+(rcfc*2-1)*reclen, covthick-reclen,15
			put	-td+(rcfc*2-1)*reclen, covthick,15
		NEXT rcfc
		PRISM_ 9+recnum*4, flw,
			ujl,						0,15,
			ujl,						covthick,15,
			get(recnum*12),
			-td,					covthick,79,
			-td,					0,900,
			ujl,						180-atn(th/tproj),4013,
			-td+tproj-kisx-covthick,covthick-th,15,
			-td+tproj-kisx,			covthick-th,15,
			-td,					0,15,
			ujl,						0,15
		DEL 2
	ENDIF
	DEL 4

ROTy 90
ROTz 90


ENDIF


IF iFlightSectionType = WITH_SPINEBEAM THEN
	ROTy 90
	ROTx 90

	MATERIAL matsb
	SECT_FILL typeFillStringer, penBackFillStringer, penFillStringer, penLineStringer

	tubea 7, 5, 1+2+16+32+64,
		0,0,0,
		flw/2-beamx/2, rfthickness,0,
		flw/2-beamx/2, rfthickness+beamy,0,
		flw/2+beamx/2, rfthickness+beamy,0,
		flw/2+beamx/2, rfthickness,0,
		flw,0,0,
		0,0,0,

		 0, 	alsoilleszt/2-td, 	0,
		 0,     alsoilleszt/2,    	0,
		 0,		alsoilleszt,	 	0,
		 0,		szel,			 	behuzas-mag,
		 0, 	szel+td, 		 	behuzas-mag+th

DEL 2
ENDIF

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** Railing ** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

IF hrtr_m=1 THEN		!!! HANDRAIL RIGHT WIDTH
		HandrailHgtR=hrhr
	ELSE
		HandrailHgtR=hrdr
ENDIF

IF hrtl_m=1 THEN		!!! HANDRAIL RIGHT WIDTH
		HandrailHgtL=hrhl
	ELSE
		HandrailHgtL=hrdl
ENDIF

atfog=sqr(rnu*rnu*(td*td+th*th))
rnu=rnu-1

lrah=td*(rnu)

kisatfog=sqr(td*td+th*th) ! egy lepcsofok atfogoja

atfogR=sqr(rnu*rnu*(td*td+th*th))+(OverhangRBottom+OverhangRTop)/cos(angle)
atfogL=sqr(rnu*rnu*(td*td+th*th))+(OverhangLBottom+OverhangLTop)/cos(angle)

RRailLength=lrah+OverhangRBottom+OverhangRTop
LRailLength=lrah+OverhangLBottom+OverhangLTop

top_ry=((OverhangRBottom+OverhangRTop)*th)/td
top_ly=((OverhangLBottom+OverhangLTop)*th)/td

! ------------------------------------------------------------------------------
! Left rail
! ------------------------------------------------------------------------------

IF rail_m = RAILPOS_LEFT or rail_m = RAILPOS_BOTH THEN
	material fmatl

	if bSameRails then
		leftRailType_m	= rightRailType_m
		atfogL			= atfogR
		LRailLength		= RRailLength
		top_ly			= top_ry
	endif

	rplPostBase = (leftRailType_m = 7 or leftRailType_m = 8 or leftRailType_m = 9 or leftRailType_m = 11)

	ROTx -90
	ADDz covthick+th

	ADDy roffl-handRailWidthL/2
	ADDz behuzas-(OverhangLBottom*th)/td
	ADDx ljl+bComplexRailLeft*td/2-OverhangLBottom

	IF bSameRails THEN
		RailUNID=1200

		!!! RAIL OFFSET

		HOTSPOT 0,-roffr,0, RailUNID, roffr, 1+128 : RailUNID=RailUNID+1 : RailUNID=RailUNID+1
		HOTSPOT 0,0,0, RailUNID, roffr, 2 : RailUNID=RailUNID+1 : RailUNID=RailUNID+1
		HOTSPOT 0,-roffr-1,0, RailUNID, roffr, 3 : RailUNID=RailUNID+1

		ADDz (OverhangRBottom)*tan(angle)
			HOTSPOT RRailLength,-roffr,(rnu)*th+OverhangRTop*tan(angle), RailUNID, roffr, 1+128 : RailUNID=RailUNID+1
			HOTSPOT RRailLength,0,(rnu)*th+OverhangRTop*tan(angle), RailUNID, roffr, 2 : RailUNID=RailUNID+1
			HOTSPOT RRailLength,-roffr-1,(rnu)*th+OverhangRTop*tan(angle), RailUNID, roffr, 3 : RailUNID=RailUNID+1
		DEL 1
	ELSE

		RailUNID=1206

		!!! RAIL OFFSET

		HOTSPOT 0,-roffl,0, RailUNID, roffl, 1+128 : RailUNID=RailUNID+1 : RailUNID=RailUNID+1
		HOTSPOT 0,0,0, RailUNID, roffl, 2 : RailUNID=RailUNID+1 : RailUNID=RailUNID+1
		HOTSPOT 0,-roffl-1,0, RailUNID, roffl, 3 : RailUNID=RailUNID+1

		ADDz (OverhangLBottom)*tan(angle)
			HOTSPOT LRailLength,-roffl,(rnu)*th+OverhangLTop*tan(angle), RailUNID, roffl, 1+128 : RailUNID=RailUNID+1
			HOTSPOT LRailLength,0,(rnu)*th+OverhangLTop*tan(angle), RailUNID, roffl, 2 : RailUNID=RailUNID+1
			HOTSPOT LRailLength,-roffl-1,(rnu)*th+OverhangLTop*tan(angle), RailUNID, roffl, 3 : RailUNID=RailUNID+1
		DEL 1

	ENDIF


	IF roml_m = RAILORIENT_VERTICAL THEN	!!! (RailUNID 1112-1142...>1300)

		IF bSameRails THEN
			RailUNID=1212

			!!! Dist. from Top of Tread

			HOTSPOT 0,0,0,	RailUNID, dsr, 1+128 : RailUNID=RailUNID+1
			HOTSPOT 0,0,dsr,	RailUNID, dsr, 2 : RailUNID=RailUNID+1
			HOTSPOT 0,0,-1,	RailUNID, dsr, 3 : RailUNID=RailUNID+1

			HOTSPOT RRailLength,0,(rnu)*th+top_ry,	RailUNID, dsr, 1+128 : RailUNID=RailUNID+1
			HOTSPOT RRailLength,0,(rnu)*th+dsr+top_ry,	RailUNID, dsr, 2 : RailUNID=RailUNID+1
			HOTSPOT RRailLength,0,(rnu)*th-1+top_ry,	RailUNID, dsr, 3 : RailUNID=RailUNID+1

			!! Height of Rail
			HOTSPOT 0,0,dsr,	RailUNID, hrr, 1+128 : RailUNID=RailUNID+1
			HOTSPOT 0,0,dsr+hrr,	RailUNID, hrr, 2 : RailUNID=RailUNID+1
			HOTSPOT 0,0,dsr-1,	RailUNID, hrr, 3 : RailUNID=RailUNID+1

			HOTSPOT RRailLength,0,(rnu)*th+dsr+top_ry,	RailUNID, hrr, 1+128 : RailUNID=RailUNID+1
			HOTSPOT RRailLength,0,(rnu)*th+dsr+hrr+top_ry,	RailUNID, hrr, 2 : RailUNID=RailUNID+1
			HOTSPOT RRailLength,0,(rnu)*th-1+dsr+top_ry,	RailUNID, hrr, 3 : RailUNID=RailUNID+1


			ADD OverhangRBottom,0,(OverhangRBottom)*tan(angle)
				!!! Rail Overhang at Bottom

				HOTSPOT 0,	0,	dsr,	RailUNID, temp_OverhangRBottom, 1+128,OverhangRBottom : RailUNID=RailUNID+1
				HOTSPOT 1,	0,	dsr+tan(angle),	RailUNID, temp_OverhangRBottom, 3,OverhangRBottom : RailUNID=RailUNID+1
				HOTSPOT -OverhangRBottom,0,	dsr-OverhangRBottom*tan(angle),	RailUNID, temp_OverhangRBottom, 2,OverhangRBottom : RailUNID=RailUNID+1

				!!! Rail Overhang at Top
			ADDz th
				HOTSPOT lrah, 0,				(rnu-1)*th+dsr,		RailUNID, temp_OverhangRTop, 1+128,OverhangRTop : RailUNID=RailUNID+1
				HOTSPOT lrah-1, 0,				(rnu-1)*th+dsr-tan(angle),		RailUNID, temp_OverhangRTop, 3,OverhangRTop : RailUNID=RailUNID+1
				HOTSPOT lrah+OverhangRTop, 0,	(rnu-1)*th+dsr+OverhangRTop*tan(angle),	RailUNID, temp_OverhangRTop, 2,OverhangRTop : RailUNID=RailUNID+1
			DEL 2

			IF rplPostBase=1 THEN

				RailUNID=1230

				!!!POST BASE OVERHANG
				HOTSPOT 0,0,0,RailUNID,gs_PostBaseOverhangR,1 : RailUNID=RailUNID+1
				HOTSPOT 0,0,-gs_PostBaseOverhangR,RailUNID,gs_PostBaseOverhangR,2 : RailUNID=RailUNID+1
				HOTSPOT 0,0,1,RailUNID,gs_PostBaseOverhangR,3 : RailUNID=RailUNID+1

				HOTSPOT RRailLength,0,(rnu)*th+top_ry,RailUNID,gs_PostBaseOverhangR,1 : RailUNID=RailUNID+1
				HOTSPOT RRailLength,0,(rnu)*th+top_ry-gs_PostBaseOverhangR,RailUNID,gs_PostBaseOverhangR,2 : RailUNID=RailUNID+1
				HOTSPOT RRailLength,0,(rnu)*th+top_ry+1,RailUNID,gs_PostBaseOverhangR,3 : RailUNID=RailUNID+1
			ENDIF

			IF leftRailType_m = 9 THEN

				RailUNID=1236

				!!!TOP WIRE/SUBBOARD DISTANCE FROM HANDRAIL
				HOTSPOT 0,0,hrr+dsr-HandrailHgtR,RailUNID,sbhr,1+128 : RailUNID=RailUNID+1
				HOTSPOT 0,0,hrr+dsr-HandrailHgtR-sbhr,RailUNID,sbhr,2 : RailUNID=RailUNID+1
				HOTSPOT 0,0,hrr+dsr-HandrailHgtR+1,RailUNID,sbhr,3 : RailUNID=RailUNID+1

				HOTSPOT RRailLength,0,(rnu)*th+top_ry+hrr+dsr-HandrailHgtR,RailUNID,sbhr,1+128 : RailUNID=RailUNID+1
				HOTSPOT RRailLength,0,(rnu)*th+top_ry+hrr+dsr-HandrailHgtR-sbhr,RailUNID,sbhr,2 : RailUNID=RailUNID+1
				HOTSPOT RRailLength,0,(rnu)*th+top_ry+hrr+dsr-HandrailHgtR+1,RailUNID,sbhr,3 : RailUNID=RailUNID+1
			ENDIF
		else
			RailUNID=1400

			!!! Dist. from Top of Tread

			HOTSPOT 0,0,0,	RailUNID, dsl, 1+128 : RailUNID=RailUNID+1
			HOTSPOT 0,0,dsl,	RailUNID, dsl, 2 : RailUNID=RailUNID+1
			HOTSPOT 0,0,-1,	RailUNID, dsl, 3 : RailUNID=RailUNID+1

			HOTSPOT LRailLength,0,(rnu)*th+top_ly,	RailUNID, dsl, 1+128 : RailUNID=RailUNID+1
			HOTSPOT LRailLength,0,(rnu)*th+dsl+top_ly,	RailUNID, dsl, 2 : RailUNID=RailUNID+1
			HOTSPOT LRailLength,0,(rnu)*th-1+top_ly,	RailUNID, dsl, 3 : RailUNID=RailUNID+1

			!! Height of Rail
			HOTSPOT 0,0,dsl,	RailUNID, hrl, 1+128 : RailUNID=RailUNID+1
			HOTSPOT 0,0,dsl+hrl,	RailUNID, hrl, 2 : RailUNID=RailUNID+1
			HOTSPOT 0,0,dsl-1,	RailUNID, hrl, 3 : RailUNID=RailUNID+1

			HOTSPOT LRailLength,0,(rnu)*th+dsl+top_ly,	RailUNID, hrl, 1+128 : RailUNID=RailUNID+1
			HOTSPOT LRailLength,0,(rnu)*th+dsl+hrl+top_ly,	RailUNID, hrl, 2 : RailUNID=RailUNID+1
			HOTSPOT LRailLength,0,(rnu)*th-1+dsl+top_ly,	RailUNID, hrl, 3 : RailUNID=RailUNID+1


			ADD OverhangLBottom,0,(OverhangLBottom)*tan(angle)
				!!! Rail Overhang at Bottom

				HOTSPOT 0,	0,	dsl,	RailUNID, temp_OverhangLBottom, 1+128,OverhangLBottom : RailUNID=RailUNID+1
				HOTSPOT 1,	0,	dsl+tan(angle),	RailUNID, temp_OverhangLBottom, 3,OverhangLBottom : RailUNID=RailUNID+1
				HOTSPOT -OverhangLBottom,0,	dsl-OverhangLBottom*tan(angle),	RailUNID, temp_OverhangLBottom, 2,OverhangLBottom : RailUNID=RailUNID+1

				!!! Rail Overhang at Top
			ADDz th
				HOTSPOT lrah, 0,				(rnu-1)*th+dsl,		RailUNID, temp_OverhangLTop, 1+128,OverhangLTop : RailUNID=RailUNID+1
				HOTSPOT lrah-1, 0,				(rnu-1)*th+dsl-tan(angle),		RailUNID, temp_OverhangLTop, 3,OverhangLTop : RailUNID=RailUNID+1
				HOTSPOT lrah+OverhangLTop, 0,	(rnu-1)*th+dsl+OverhangLTop*tan(angle),	RailUNID, temp_OverhangLTop, 2,OverhangLTop : RailUNID=RailUNID+1
			DEL 2

			IF rplPostBase=1 THEN

				RailUNID=1418

				!!!POST BASE OVERHANG
				HOTSPOT 0,0,0,RailUNID,gs_PostBaseOverhangL,1 : RailUNID=RailUNID+1
				HOTSPOT 0,0,-gs_PostBaseOverhangL,RailUNID,gs_PostBaseOverhangL,2 : RailUNID=RailUNID+1
				HOTSPOT 0,0,1,RailUNID,gs_PostBaseOverhangL,3 : RailUNID=RailUNID+1

				HOTSPOT LRailLength,0,(rnu)*th+top_ly,RailUNID,gs_PostBaseOverhangL,1 : RailUNID=RailUNID+1
				HOTSPOT LRailLength,0,(rnu)*th+top_ly-gs_PostBaseOverhangL,RailUNID,gs_PostBaseOverhangL,2 : RailUNID=RailUNID+1
				HOTSPOT LRailLength,0,(rnu)*th+top_ly+1,RailUNID,gs_PostBaseOverhangL,3 : RailUNID=RailUNID+1
			ENDIF

			IF leftRailType_m = 9 THEN

				RailUNID=1424

				!!!TOP WIRE/SUBBOARD DISTANCE FROM HANDRAIL
				HOTSPOT 0,0,hrl+dsl-HandrailHgtL,RailUNID,sbhl,1+128 : RailUNID=RailUNID+1
				HOTSPOT 0,0,hrl+dsl-HandrailHgtL-sbhl,RailUNID,sbhl,2 : RailUNID=RailUNID+1
				HOTSPOT 0,0,hrl+dsl-HandrailHgtL+1,RailUNID,sbhl,3 : RailUNID=RailUNID+1

				HOTSPOT LRailLength,0,(rnu)*th+top_ly+hrl+dsl-HandrailHgtL,RailUNID,sbhl,1+128 : RailUNID=RailUNID+1
				HOTSPOT LRailLength,0,(rnu)*th+top_ly+hrl+dsl-HandrailHgtL-sbhl,RailUNID,sbhl,2 : RailUNID=RailUNID+1
				HOTSPOT LRailLength,0,(rnu)*th+top_ly+hrl+dsl-HandrailHgtL+1,RailUNID,sbhl,3 : RailUNID=RailUNID+1
			ENDIF
		endif

		lraSimple=LRailLength
		lraComplex=LRailLength
		additionXComplex=0
		additionZComplex=0
		hrovL=hrol
		hrovR=hrol
		postNumber = npl
		rom_m = 1
		rmm_m = 1
		side = SIDE_LEFT
		gosub "callRailsForStair"
	else
		IF bSameRails THEN
			ROTy -atn(th/td)

				RailUNID=1300

				!!! Dist. from Top of Tread

				HOTSPOT 0,0,0,	RailUNID, dsr, 1+128 : RailUNID=RailUNID+1
				HOTSPOT 0,0,dsr,	RailUNID, dsr, 2 : RailUNID=RailUNID+1
				HOTSPOT 0,0,-1,	RailUNID, dsr, 3 : RailUNID=RailUNID+1

				HOTSPOT atfogR, 0,0,	RailUNID, dsr, 1+128 : RailUNID=RailUNID+1
				HOTSPOT atfogR, 0,dsr,	RailUNID, dsr, 2 : RailUNID=RailUNID+1
				HOTSPOT atfogR, 0,-1,	RailUNID, dsr, 3 : RailUNID=RailUNID+1

				!! Height of Rail

				HOTSPOT 0,0,dsr,	RailUNID, hrr, 1+128 : RailUNID=RailUNID+1
				HOTSPOT 0,0,dsr+hrr,	RailUNID, hrr, 2 : RailUNID=RailUNID+1
				HOTSPOT 0,0,dsr-1,	RailUNID, hrr, 3 : RailUNID=RailUNID+1

				HOTSPOT atfogR,0,dsr,	RailUNID, hrr, 1+128 : RailUNID=RailUNID+1
				HOTSPOT atfogR,0,dsr+hrr,	RailUNID, hrr, 2 : RailUNID=RailUNID+1
				HOTSPOT atfogR,0,-1+dsr,	RailUNID, hrr, 3 : RailUNID=RailUNID+1


			ADDx temp_OverhangRBottom
				!!! Rail Overhang at Bottom

				HOTSPOT 0,	0,	dsr,	RailUNID, temp_OverhangRBottom, 1+128,OverhangRBottom  : RailUNID=RailUNID+1
				HOTSPOT 1, 0	,dsr,RailUNID, temp_OverhangRBottom, 3,OverhangRBottom : RailUNID=RailUNID+1
				HOTSPOT -temp_OverhangRBottom,0,dsr,RailUNID, temp_OverhangRBottom, 2,OverhangRBottom : RailUNID=RailUNID+1

				!!! Rail Overhang at Top

				HOTSPOT lrah*th/(td*sin(atn(th/td))), 0, dsr,	RailUNID, temp_OverhangRTop, 1+128,OverhangRTop  : RailUNID=RailUNID+1
				HOTSPOT lrah*th/(td*sin(atn(th/td)))-1, 0, dsr,RailUNID, temp_OverhangRTop, 3,OverhangLTop : RailUNID=RailUNID+1
				HOTSPOT lrah*th/(td*sin(atn(th/td)))+temp_OverhangRTop, 0, dsr,RailUNID, temp_OverhangRTop, 2,OverhangRTop : RailUNID=RailUNID+1

			DEL 1

			IF rplPostBase=1 THEN
				RailUNID=1318

				!!!POST BASE OVERHANG
				HOTSPOT 0,0,0,RailUNID,gs_PostBaseOverhangR,1 : RailUNID=RailUNID+1
				HOTSPOT 0,0,-gs_PostBaseOverhangR,RailUNID,gs_PostBaseOverhangR,2 : RailUNID=RailUNID+1
				HOTSPOT 0,0,1,RailUNID,gs_PostBaseOverhangR,3 : RailUNID=RailUNID+1

				HOTSPOT atfogR,0,0,RailUNID,gs_PostBaseOverhangR,1 : RailUNID=RailUNID+1
				HOTSPOT atfogR,0,-gs_PostBaseOverhangR,RailUNID,gs_PostBaseOverhangR,2 : RailUNID=RailUNID+1
				HOTSPOT atfogR,0,1,RailUNID,gs_PostBaseOverhangR,3 : RailUNID=RailUNID+1
			ENDIF

			IF leftRailType_m = 9 THEN
				RailUNID=1324

				!!!TOP WIRE/SUBBOARD DISTANCE FROM HANDRAIL
				HOTSPOT 0,0,hrr+dsr-HandrailHgtR/cos(angle),		RailUNID,sbhPerpR,1+128,sbhr : RailUNID=RailUNID+1
				HOTSPOT 0,0,hrr+dsr-HandrailHgtR/cos(angle)-sbhr,	RailUNID,sbhPerpR,2,sbhr : RailUNID=RailUNID+1
				HOTSPOT 0,0,hrr+dsr-HandrailHgtR/cos(angle)+1,		RailUNID,sbhPerpR,3,sbhr : RailUNID=RailUNID+1

				HOTSPOT atfogR,0,hrr+dsr-HandrailHgtR/cos(angle),			RailUNID,sbhPerpR,1+128,sbhr : RailUNID=RailUNID+1
				HOTSPOT atfogR,0,hrr+dsr-HandrailHgtR/cos(angle)-sbhr,		RailUNID,sbhPerpR,2,sbhr : RailUNID=RailUNID+1
				HOTSPOT atfogR,0,hrr+dsr-HandrailHgtR/cos(angle)+1,			RailUNID,sbhPerpR,3,sbhr : RailUNID=RailUNID+1
			ENDIF

			DEL 1

		else
			ROTy -atn(th/td)

			RailUNID=1500

			!!! Dist. from Top of Tread

			HOTSPOT 0,0,0,	RailUNID, dsl, 1+128 : RailUNID=RailUNID+1
			HOTSPOT 0,0,dsl,	RailUNID, dsl, 2 : RailUNID=RailUNID+1
			HOTSPOT 0,0,-1,	RailUNID, dsl, 3 : RailUNID=RailUNID+1

			HOTSPOT atfogL, 0,0,	RailUNID, dsl, 1+128 : RailUNID=RailUNID+1
			HOTSPOT atfogL, 0,dsl,	RailUNID, dsl, 2 : RailUNID=RailUNID+1
			HOTSPOT atfogL, 0,-1,	RailUNID, dsl, 3 : RailUNID=RailUNID+1

			!! Height of Rail

			HOTSPOT 0,0,dsl,	RailUNID, hrl, 1+128 : RailUNID=RailUNID+1
			HOTSPOT 0,0,dsl+hrl,	RailUNID, hrl, 2 : RailUNID=RailUNID+1
			HOTSPOT 0,0,dsl-1,	RailUNID, hrl, 3 : RailUNID=RailUNID+1

			HOTSPOT atfogL,0,dsl,	RailUNID, hrl, 1+128 : RailUNID=RailUNID+1
			HOTSPOT atfogL,0,dsl+hrl,	RailUNID, hrl, 2 : RailUNID=RailUNID+1
			HOTSPOT atfogL,0,-1+dsl,	RailUNID, hrl, 3 : RailUNID=RailUNID+1


			ADDx temp_OverhangLBottom
				!!! Rail Overhang at Bottom

				HOTSPOT 0,	0,	dsl,	RailUNID, temp_OverhangLBottom, 1+128,OverhangLBottom  : RailUNID=RailUNID+1
				HOTSPOT 1, 0	,dsl,RailUNID, temp_OverhangLBottom, 3,OverhangLBottom : RailUNID=RailUNID+1
				HOTSPOT -temp_OverhangLBottom,0,dsl,RailUNID, temp_OverhangLBottom, 2,OverhangLBottom : RailUNID=RailUNID+1

				!!! Rail Overhang at Top

				HOTSPOT lrah*th/(td*sin(atn(th/td))), 0, dsl,	RailUNID, temp_OverhangLTop, 1+128,OverhangLTop  : RailUNID=RailUNID+1
				HOTSPOT lrah*th/(td*sin(atn(th/td)))-1, 0, dsl,RailUNID, temp_OverhangLTop, 3,OverhangLTop : RailUNID=RailUNID+1
				HOTSPOT lrah*th/(td*sin(atn(th/td)))+temp_OverhangLTop, 0, dsl,RailUNID, temp_OverhangLTop, 2,OverhangLTop : RailUNID=RailUNID+1
			DEL 1

			IF rplPostBase=1 THEN
				RailUNID=1518

				!!!POST BASE OVERHANG
				HOTSPOT 0,0,0,RailUNID,gs_PostBaseOverhangL,1 : RailUNID=RailUNID+1
				HOTSPOT 0,0,-gs_PostBaseOverhangL,RailUNID,gs_PostBaseOverhangL,2 : RailUNID=RailUNID+1
				HOTSPOT 0,0,1,RailUNID,gs_PostBaseOverhangL,3 : RailUNID=RailUNID+1

				HOTSPOT atfogL,0,0,RailUNID,gs_PostBaseOverhangL,1 : RailUNID=RailUNID+1
				HOTSPOT atfogL,0,-gs_PostBaseOverhangL,RailUNID,gs_PostBaseOverhangL,2 : RailUNID=RailUNID+1
				HOTSPOT atfogL,0,1,RailUNID,gs_PostBaseOverhangL,3 : RailUNID=RailUNID+1
			ENDIF

			IF leftRailType_m = 9 THEN
				RailUNID=1524

				!!!TOP WIRE/SUBBOARD DISTANCE FROM HANDRAIL
				HOTSPOT 0,0,hrl+dsl-HandrailHgtL/cos(angle),		RailUNID,sbhPerpL,1+128,sbhl : RailUNID=RailUNID+1
				HOTSPOT 0,0,hrl+dsl-HandrailHgtL/cos(angle)-sbhl,	RailUNID,sbhPerpL,2,sbhl : RailUNID=RailUNID+1
				HOTSPOT 0,0,hrl+dsl-HandrailHgtL/cos(angle)+1,		RailUNID,sbhPerpL,3,sbhl : RailUNID=RailUNID+1

				HOTSPOT atfogL,0,hrl+dsl-HandrailHgtL/cos(angle),			RailUNID,sbhPerpL,1+128,sbhl : RailUNID=RailUNID+1
				HOTSPOT atfogL,0,hrl+dsl-HandrailHgtL/cos(angle)-sbhl,		RailUNID,sbhPerpL,2,sbhl : RailUNID=RailUNID+1
				HOTSPOT atfogL,0,hrl+dsl-HandrailHgtL/cos(angle)+1,			RailUNID,sbhPerpL,3,sbhl : RailUNID=RailUNID+1
			ENDIF
			DEL 1

		endif

		lraSimple=atfogL
		lraComplex=atfogL
		additionXComplex=0
		additionZComplex=0
		hrovL=hrol
		hrovR=hrol
		postNumber = npl
		rom_m = 2
		rmm_m = 2
		side = SIDE_LEFT
		gosub "callRailsForStair"

	endif

	DEL 5
ENDIF

! ------------------------------------------------------------------------------
! Right rail
! ------------------------------------------------------------------------------

IF rail_m = RAILPOS_RIGHT or rail_m = RAILPOS_BOTH THEN
	material fmatr

	rprPostBase = (rightRailType_m = 7 or rightRailType_m = 8 or rightRailType_m = 9 or rightRailType_m = 11)

	ROTx -90
	ADDz covthick+th
	ADDy -flw-roffr+handRailWidthR/2
	ADDz behuzas-(OverhangRBottom*th)/td
	ADDx ljl+bComplexRailRight*td/2-OverhangRBottom

	!!! RAIL OFFSET
	RailUNID=1000

	HOTSPOT 0,roffr,0, RailUNID, roffr, 1+128 : RailUNID=RailUNID+1
	HOTSPOT 0,0,0, RailUNID, roffr, 2 : RailUNID=RailUNID+1
	HOTSPOT 0,roffr+1,0, RailUNID, roffr, 3 : RailUNID=RailUNID+1

	ADDz (OverhangRBottom)*tan(angle)
		HOTSPOT RRailLength,roffr,(rnu)*th+OverhangRTop*tan(angle), RailUNID, roffr, 1+128 : RailUNID=RailUNID+1
		HOTSPOT RRailLength,0,(rnu)*th+OverhangRTop*tan(angle), RailUNID, roffr, 2 : RailUNID=RailUNID+1
		HOTSPOT RRailLength,roffr+1,(rnu)*th+OverhangRTop*tan(angle), RailUNID, roffr, 3 : RailUNID=RailUNID+1
	DEL 1

	IF romr_m = RAILORIENT_VERTICAL THEN		!!! (RailUNID 1006-1036...>1100)
		!!! Dist. from Top of Tread

		RailUNID=1006

		HOTSPOT 0,0,0,	RailUNID, dsr, 1+128 : RailUNID=RailUNID+1
		HOTSPOT 0,0,dsr,	RailUNID, dsr, 2 : RailUNID=RailUNID+1
		HOTSPOT 0,0,-1,	RailUNID, dsr, 3 : RailUNID=RailUNID+1

		HOTSPOT RRailLength,0,(rnu)*th+top_ry,	RailUNID, dsr, 1+128 : RailUNID=RailUNID+1
		HOTSPOT RRailLength,0,(rnu)*th+dsr+top_ry,	RailUNID, dsr, 2 : RailUNID=RailUNID+1
		HOTSPOT RRailLength,0,(rnu)*th-1+top_ry,	RailUNID, dsr, 3 : RailUNID=RailUNID+1

		!! Height of Rail
		HOTSPOT 0,0,dsr,	RailUNID, hrr, 1+128 : RailUNID=RailUNID+1
		HOTSPOT 0,0,dsr+hrr,	RailUNID, hrr, 2 : RailUNID=RailUNID+1
		HOTSPOT 0,0,dsr-1,	RailUNID, hrr, 3 : RailUNID=RailUNID+1

		HOTSPOT RRailLength,0,(rnu)*th+dsr+top_ry,	RailUNID, hrr, 1+128 : RailUNID=RailUNID+1
		HOTSPOT RRailLength,0,(rnu)*th+dsr+hrr+top_ry,	RailUNID, hrr, 2 : RailUNID=RailUNID+1
		HOTSPOT RRailLength,0,(rnu)*th-1+dsr+top_ry,	RailUNID, hrr, 3 : RailUNID=RailUNID+1

		ADD OverhangRBottom,0,(OverhangRBottom)*tan(angle)
			!!! Rail Overhang at Bottom

			HOTSPOT 0,	0,	dsr,	RailUNID, temp_OverhangRBottom, 1+128,OverhangRBottom : RailUNID=RailUNID+1
			HOTSPOT 1,	0,	dsr+tan(angle),	RailUNID, temp_OverhangRBottom, 3,OverhangRBottom : RailUNID=RailUNID+1
			HOTSPOT -OverhangRBottom,0,	dsr-OverhangRBottom*tan(angle),	RailUNID, temp_OverhangRBottom, 2,OverhangRBottom : RailUNID=RailUNID+1

			!!! Rail Overhang at Top
		ADDz th
			HOTSPOT lrah, 0,				(rnu-1)*th+dsr,		RailUNID, temp_OverhangRTop, 1+128,OverhangRTop : RailUNID=RailUNID+1
			HOTSPOT lrah-1, 0,				(rnu-1)*th+dsr-tan(angle),		RailUNID, temp_OverhangRTop, 3,OverhangRTop : RailUNID=RailUNID+1
			HOTSPOT lrah+OverhangRTop, 0,	(rnu-1)*th+dsr+OverhangRTop*tan(angle),	RailUNID, temp_OverhangRTop, 2,OverhangRTop : RailUNID=RailUNID+1
		DEL 2

		IF rprPostBase=1 THEN

			RailUNID=1024

			!!!POST BASE OVERHANG
			HOTSPOT 0,0,0,RailUNID,gs_PostBaseOverhangR,1 : RailUNID=RailUNID+1
			HOTSPOT 0,0,-gs_PostBaseOverhangR,RailUNID,gs_PostBaseOverhangR,2 : RailUNID=RailUNID+1
			HOTSPOT 0,0,1,RailUNID,gs_PostBaseOverhangR,3 : RailUNID=RailUNID+1

			HOTSPOT RRailLength,0,(rnu)*th+top_ry,RailUNID,gs_PostBaseOverhangR,1 : RailUNID=RailUNID+1
			HOTSPOT RRailLength,0,(rnu)*th+top_ry-gs_PostBaseOverhangR,RailUNID,gs_PostBaseOverhangR,2 : RailUNID=RailUNID+1
			HOTSPOT RRailLength,0,(rnu)*th+top_ry+1,RailUNID,gs_PostBaseOverhangR,3 : RailUNID=RailUNID+1
		ENDIF

		IF rightRailType_m = 9 THEN

			RailUNID=1030

			!!!TOP WIRE/SUBBOARD DISTANCE FROM HANDRAIL
			HOTSPOT 0,0,hrr+dsr-HandrailHgtR,RailUNID,sbhr,1+128 : RailUNID=RailUNID+1
			HOTSPOT 0,0,hrr+dsr-HandrailHgtR-sbhr,RailUNID,sbhr,2 : RailUNID=RailUNID+1
			HOTSPOT 0,0,hrr+dsr-HandrailHgtR+1,RailUNID,sbhr,3 : RailUNID=RailUNID+1

			HOTSPOT RRailLength,0,(rnu)*th+top_ry+hrr+dsr-HandrailHgtR,RailUNID,sbhr,1+128 : RailUNID=RailUNID+1
			HOTSPOT RRailLength,0,(rnu)*th+top_ry+hrr+dsr-HandrailHgtR-sbhr,RailUNID,sbhr,2 : RailUNID=RailUNID+1
			HOTSPOT RRailLength,0,(rnu)*th+top_ry+hrr+dsr-HandrailHgtR+1,RailUNID,sbhr,3 : RailUNID=RailUNID+1
		ENDIF

		!!! *** Right Railing/Lower Part
		lraSimple=RRailLength
		lraComplex=RRailLength
		additionXComplex=0
		additionZComplex=0
		hrovL=hror
		hrovR=hror
		postNumber = npr
		side = SIDE_RIGHT
		rom_m = 1
		rmm_m = 1
		gosub "callRailsForStair"
	else
		ROTy -atn(th/td)

		RailUNID=1100
		!!! Dist. from Top of Tread

		HOTSPOT 0,0,0,	RailUNID, dsr, 1+128 : RailUNID=RailUNID+1
		HOTSPOT 0,0,dsr,	RailUNID, dsr, 2 : RailUNID=RailUNID+1
		HOTSPOT 0,0,-1,	RailUNID, dsr, 3 : RailUNID=RailUNID+1

		HOTSPOT atfogR, 0,0,	RailUNID, dsr, 1+128 : RailUNID=RailUNID+1
		HOTSPOT atfogR, 0,dsr,	RailUNID, dsr, 2 : RailUNID=RailUNID+1
		HOTSPOT atfogR, 0,-1,	RailUNID, dsr, 3 : RailUNID=RailUNID+1

		!! Height of Rail

		HOTSPOT 0,0,dsr,	RailUNID, hrr, 1+128 : RailUNID=RailUNID+1
		HOTSPOT 0,0,dsr+hrr,	RailUNID, hrr, 2 : RailUNID=RailUNID+1
		HOTSPOT 0,0,dsr-1,	RailUNID, hrr, 3 : RailUNID=RailUNID+1

		HOTSPOT atfogR,0,dsr,	RailUNID, hrr, 1+128 : RailUNID=RailUNID+1
		HOTSPOT atfogR,0,dsr+hrr,	RailUNID, hrr, 2 : RailUNID=RailUNID+1
		HOTSPOT atfogR,0,-1+dsr,	RailUNID, hrr, 3 : RailUNID=RailUNID+1


		ADDx temp_OverhangRBottom
			!!! Rail Overhang at Bottom

			HOTSPOT 0,	0,	dsr,	RailUNID, temp_OverhangRBottom, 1+128,OverhangRBottom  : RailUNID=RailUNID+1
			HOTSPOT 1, 0	,dsr,RailUNID, temp_OverhangRBottom, 3,OverhangRBottom : RailUNID=RailUNID+1
			HOTSPOT -temp_OverhangRBottom,0,dsr,RailUNID, temp_OverhangRBottom, 2,OverhangRBottom : RailUNID=RailUNID+1

			!!! Rail Overhang at Top

			HOTSPOT lrah*th/(td*sin(atn(th/td))), 0, dsr,	RailUNID, temp_OverhangRTop, 1+128,OverhangRTop  : RailUNID=RailUNID+1
			HOTSPOT lrah*th/(td*sin(atn(th/td)))-1, 0, dsr,RailUNID, temp_OverhangRTop, 3,OverhangLTop : RailUNID=RailUNID+1
			HOTSPOT lrah*th/(td*sin(atn(th/td)))+temp_OverhangRTop, 0, dsr,RailUNID, temp_OverhangRTop, 2,OverhangRTop : RailUNID=RailUNID+1

		DEL 1

		IF rprPostBase=1 THEN

			RailUNID=1118

			!!!POST BASE OVERHANG
			HOTSPOT 0,0,0,RailUNID,gs_PostBaseOverhangR,1 : RailUNID=RailUNID+1
			HOTSPOT 0,0,-gs_PostBaseOverhangR,RailUNID,gs_PostBaseOverhangR,2 : RailUNID=RailUNID+1
			HOTSPOT 0,0,1,RailUNID,gs_PostBaseOverhangR,3 : RailUNID=RailUNID+1

			HOTSPOT atfogR,0,0,RailUNID,gs_PostBaseOverhangR,1 : RailUNID=RailUNID+1
			HOTSPOT atfogR,0,-gs_PostBaseOverhangR,RailUNID,gs_PostBaseOverhangR,2 : RailUNID=RailUNID+1
			HOTSPOT atfogR,0,1,RailUNID,gs_PostBaseOverhangR,3 : RailUNID=RailUNID+1
		ENDIF

		IF rightRailType_m = 9 THEN

			RailUNID=1124

			!!!TOP WIRE/SUBBOARD DISTANCE FROM HANDRAIL
			HOTSPOT 0,0,hrr+dsr-HandrailHgtR/cos(angle),		RailUNID,sbhPerpR,1+128,sbhr : RailUNID=RailUNID+1
			HOTSPOT 0,0,hrr+dsr-HandrailHgtR/cos(angle)-sbhr,	RailUNID,sbhPerpR,2,sbhr : RailUNID=RailUNID+1
			HOTSPOT 0,0,hrr+dsr-HandrailHgtR/cos(angle)+1,		RailUNID,sbhPerpR,3,sbhr : RailUNID=RailUNID+1

			HOTSPOT atfogR,0,hrr+dsr-HandrailHgtR/cos(angle),			RailUNID,sbhPerpR,1+128,sbhr : RailUNID=RailUNID+1
			HOTSPOT atfogR,0,hrr+dsr-HandrailHgtR/cos(angle)-sbhr,		RailUNID,sbhPerpR,2,sbhr : RailUNID=RailUNID+1
			HOTSPOT atfogR,0,hrr+dsr-HandrailHgtR/cos(angle)+1,			RailUNID,sbhPerpR,3,sbhr : RailUNID=RailUNID+1
		ENDIF

		DEL 1

		!!! *** Right Railing/Lower Part
		lraSimple=atfogR
		lraComplex=atfogR
		additionXComplex=0
		additionZComplex=0
		hrovL=hror
		hrovR=hror
		postNumber = npr
		side = SIDE_RIGHT
		rom_m = 2
		rmm_m = 2
		gosub "callRailsForStair"
	endif

	del 5

ENDIF

DEL 3
DEL 1	!!ADDx -ljl

return





"monolith":

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!! MONOLITH !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

pen gs_cont_pen

atfogo=sqr(td*td*rnu*rnu+th*th*rnu*rnu)
coss=td*rnu/atfogo

maxfloorh=sst/coss
maxtopfloorh=maxfloorh
topfloorh=lst
floorh=lst2

topd=td*(maxfloorh-lst)/th

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!! HOTSPOTS !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

	!!! Editable HOTSPOTs at First Tread

	IF  firstTreadLevel_m = FIRSTTREAD_ATFLOOR THEN
		ry=-td

		FlightUNID=500

		!!! LOWER SLAB THICKNESS
		HOTSPOT 		0,	ry,	0, FlightUNID, lst2, 1+128 : FlightUNID=FlightUNID+1
		HOTSPOT 		0,	ry,	1, FlightUNID, lst2, 3 : FlightUNID=FlightUNID+1
		HOTSPOT 		0,ry,	-lst2, FlightUNID, lst2, 2 : FlightUNID=FlightUNID+1

		HOTSPOT 		flw,	ry,	0, FlightUNID, lst2, 1+128 : FlightUNID=FlightUNID+1
		HOTSPOT 		flw,	ry,	1, FlightUNID, lst2, 3 : FlightUNID=FlightUNID+1
		HOTSPOT 		flw,ry,	-lst2, FlightUNID, lst2, 2 : FlightUNID=FlightUNID+1
	ELSE
		ry=0
	ENDIF

		FlightUNID=506

		!!! FLIGHT WIDTH
		HOTSPOT 		0,	ry,	covthick, FlightUNID, flw, 1+256 : FlightUNID=FlightUNID+1
		HOTSPOT 		-1,	ry,	covthick, FlightUNID, flw, 3 : FlightUNID=FlightUNID+1
		HOTSPOT 		flw,ry,	covthick, FlightUNID, flw, 2 : FlightUNID=FlightUNID+1


	!!! Editable HOTSPOTs at Top Tread

		!!! Vert.Height of Stair Slab Thickness
		temp_sst=sst*(sqr(td*td+th*th))/td

		!!! HOTSPOTs on Top
		td_x1=(td*(lst-th))/th
		alfa=ATN(th/td)
		td_x2=sst/sin(alfa)
		td_x=td_x2-td_x1

	IF  topTreadLevel_m = TOPTREAD_ATFLOOR THEN
		ry=(rnu)*td
		rz_stair=(rnu)*th
		rz_slab=(rnu)*th

		IF temp_sst > lst THEN 	!!! UPPER SLAB

			FlightUNID=509

			HOTSPOT 		0,	ry-td+td_x,	rz_slab-lst, FlightUNID : FlightUNID=FlightUNID+1
			HOTSPOT 		flw,	ry-td+td_x,	rz_slab-lst, FlightUNID : FlightUNID=FlightUNID+1
		ENDIF

	ELSE
		ry=(rnu-1)*td
		rz_stair=(rnu-1)*th
		rz_slab=(rnu-1)*th+th

		IF temp_sst < lst THEN 	!!! UPPER SLAB

			FlightUNID=511

			HOTSPOT 		0,	ry+td_x,	rz_slab-lst, FlightUNID : FlightUNID=FlightUNID+1
			HOTSPOT 		flw,	ry+td_x,	rz_slab-lst, FlightUNID : FlightUNID=FlightUNID+1
		ENDIF
	ENDIF

		FlightUNID=513

		!!! FLIGHT WIDTH

		HOTSPOT 		0,	ry,	rz_stair+covthick, FlightUNID, flw, 1+256 : FlightUNID=FlightUNID+1
		HOTSPOT 		-1,	ry,	rz_stair+covthick, FlightUNID, flw, 3 : FlightUNID=FlightUNID+1
		HOTSPOT 		flw,ry,	rz_stair+covthick, FlightUNID, flw, 2 : FlightUNID=FlightUNID+1

		!!! UPPER SLAB THICKNESS

		HOTSPOT 		0,	ry,	rz_slab, FlightUNID, lst, 1+128 : FlightUNID=FlightUNID+1
		HOTSPOT 		0,	ry,	rz_slab+1, FlightUNID, lst, 3 : FlightUNID=FlightUNID+1
		HOTSPOT 		0,	ry,	rz_slab-lst, FlightUNID, lst, 2 : FlightUNID=FlightUNID+1

		HOTSPOT 		flw,	ry,	rz_slab, FlightUNID, lst, 1+128 : FlightUNID=FlightUNID+1
		HOTSPOT 		flw,	ry,	rz_slab+1, FlightUNID, lst, 3 : FlightUNID=FlightUNID+1
		HOTSPOT 		flw,	ry,	rz_slab-lst, FlightUNID, lst, 2 : FlightUNID=FlightUNID+1



ROTy 90
ROTz 90

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!! TREADS !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

IF iNoseType = NOSE_ROUNDED THEN
	put tproj,0
	put 0,0
	pontszam=2
ELSE
	put 0,0
	pontszam=1
ENDIF

landcovthick=0

IF iLowerJunctionType = LOWERJUNCTION_FLOOR_OR_LANDING THEN
  IF firstTreadLevel_m = FIRSTTREAD_ATFLOOR THEN
	!		Cover4all
	  IF cover and iNoseType = NOSE_NORMAL and recefice = 0 and gs_detlevel_3D_m = DET3D_DETAILED THEN
		MATERIAL mat_tread
		SECT_FILL typeFillTread, penBackFillTread, penFillTread, penLineTread

		IF covthick > 0 THEN
		  PRISM 5, flw,
			  -td,0+landcovthick,
			  0,0+landcovthick,
			  0,covthick+landcovthick,
			  -td,covthick+landcovthick,
			  -td,0+landcovthick
		ENDIF
		recnum=5
	  ENDIF
	  IF covery and iNoseType = NOSE_NORMAL and gs_detlevel_3D_m = DET3D_DETAILED THEN
			MATERIAL mat_riser
			SECT_FILL typeFillRiser, penBackFillRiser, penFillRiser, penLineRiser

			ADDy covthick
			  PRISM 5, flw,
				  -covthicky,0+landcovthick,
				  0,0+landcovthick,
				  0,th-covthick,
				  -covthicky,th-covthick,
				  -covthicky,0+landcovthick
			DEL 1
	  ENDIF
	put -td,0+landcovthick
	put -td,-lst2
	put 0,-lst2
	pontszam=pontszam+3
  ELSE
	IF covery and iNoseType = NOSE_NORMAL and gs_detlevel_3D_m = DET3D_DETAILED and covthicky > 0 THEN
		MATERIAL mat_riser
		SECT_FILL typeFillRiser, penBackFillRiser, penFillRiser, penLineRiser

		PRISM 5, flw,
			0,landcovthick+covthick,
			-covthicky, landcovthick+covthick,
			-covthicky, th,
			0,th,
			0,landcovthick+covthick
	ENDIF
  ENDIF

  IF maxfloorh < lst2 THEN
	  talp = 0
	  put 0,-1*maxfloorh
	  pontszam=pontszam+1
  ELSE
	  talp=td*(maxfloorh-lst2)/th
	  put 0,-1*lst2
	  put talp,-1*lst2
	  pontszam=pontszam+2
  ENDIF
ENDIF


!!!*********************************************************
IF iLowerJunctionType = LOWERJUNCTION_GROUND_FLOOR THEN
  sinn=th/(sqr(td*td+th*th))
  talp=sst/sinn

	IF firstTreadLevel_m = FIRSTTREAD_ATFLOOR THEN
		put -td,0
		put -td,-lst2

		put 0,-1*lst2
		put talp,-1*lst2
		put talp,0
		pontszam=pontszam+5

		IF cover and iNoseType = NOSE_NORMAL and gs_detlevel_3D_m = DET3D_DETAILED THEN
		  MATERIAL mat_tread
		SECT_FILL typeFillTread, penBackFillTread, penFillTread, penLineTread

		IF covthick > 0 THEN
		  PRISM 5, flw,
			  -td,0+landcovthick,
			  0,0+landcovthick,
			  0,covthick+landcovthick,
			  -td,covthick+landcovthick,
			  -td,0+landcovthick
		ENDIF
		ENDIF
		IF covery and iNoseType = NOSE_NORMAL and gs_detlevel_3D_m = DET3D_DETAILED THEN
			MATERIAL mat_riser
			SECT_FILL typeFillRiser, penBackFillRiser, penFillRiser, penLineRiser

			ADDy covthick
			PRISM 5, flw,
				0,landcovthick,
				-covthicky, landcovthick,
				-covthicky, th-covthick,
				0,th-covthick,
				0,landcovthick
			DEL 1
		ENDIF
	ENDIF

  IF firstTreadLevel_m = FIRSTTREAD_ABOVEFLOOR THEN
	IF iNoseType = NOSE_ROUNDED THEN
		put tproj,0
		put 0,0
		pontszam=pontszam+1
	ELSE put 0,0

		put talp,0
		pontszam=pontszam+2

		IF covery and iNoseType = NOSE_NORMAL and gs_detlevel_3D_m = DET3D_DETAILED THEN
			MATERIAL mat_riser
			SECT_FILL typeFillRiser, penBackFillRiser, penFillRiser, penLineRiser

			PRISM 5, flw,
				0,landcovthick,
				-covthicky, landcovthick,
				-covthicky, th,
				0,th,
				0,landcovthick
		ENDIF
	ENDIF
ENDIF
!!!*********************************************************

IF gs_detlevel_3D_m = DET3D_SIMPLE THEN
	IF covery THEN incx=-covthicky ELSE incx=0
	incy = covthick
ELSE
	incx=0
	incy=0
ENDIF

!!!*********************************************************
IF topTreadLevel_m = TOPTREAD_BELOWFLOOR THEN
	put topd+td*rnu, th*rnu-lst
	put td*rnu-td, th*rnu-lst

	put td*rnu-td,th*rnu-th
	IF incy <> 0 THEN
		put td*rnu-td,th*rnu+incy-th
		pontszam=pontszam+1
	ENDIF
	pontszam=pontszam+3

	lepy=th*rnu-th+incy
	lepx=td*rnu-td+incx
	startpoint=2
ELSE
	pontszam=pontszam+4

	put topd+td*rnu,th*rnu-lst
	put td*rnu,th*rnu-lst

	put td*rnu,th*rnu+incy
	put td*rnu-td+incx,th*rnu+incy
	lepy=th*rnu+incy
	lepx=td*rnu+incx
	startpoint=1
ENDIF

!!!*********************************************************

FOR i=startpoint to rnu
	IF cover and iNoseType = NOSE_NORMAL and recefice = 0 and gs_detlevel_3D_m = DET3D_DETAILED THEN
		MATERIAL mat_tread
		SECT_FILL typeFillTread, penBackFillTread, penFillTread, penLineTread

		IF covthick > 0 THEN
			PRISM 5, flw,
				lepx, lepy,
				lepx-td-ns-covthicky, lepy,
				lepx-td-ns-covthicky, lepy+ covthick,
				lepx, lepy+ covthick,
				lepx, lepy
		ENDIF
	ENDIF
	IF covery and iNoseType = NOSE_NORMAL and i <> startpoint and gs_detlevel_3D_m = DET3D_DETAILED and covthicky > 0 THEN
		MATERIAL mat_riser
		SECT_FILL typeFillRiser, penBackFillRiser, penFillRiser, penLineRiser

		PRISM 5, flw,
			lepx-covthicky,lepy+covthick,
			lepx,          lepy+covthick,
			lepx,          lepy+th,
			lepx-covthicky,lepy+th,
			lepx-covthicky,lepy+covthick
	ENDIF
	IF iNoseType = NOSE_ROUNDED THEN
		lepx=lepx-td
		put lepx,lepy
		lepy=lepy-th
		IF i<>rnu THEN put lepx+tproj,lepy
	ELSE
		lepx=lepx-td
		put lepx,lepy
		lepy=lepy-th
		IF i<>rnu THEN put lepx,lepy
	ENDIF
NEXT i
i=i-startpoint

!!!*********************************************************

IF gs_detlevel_3D_m = DET3D_SIMPLE and covery and firstTreadLevel_m = FIRSTTREAD_ATFLOOR and iNoseType = NOSE_NORMAL THEN
	put -covthicky,0
	pontszam=pontszam+1
ENDIF

!!!*********************************************************



!	put 0,0
pontszam=pontszam+i*2-1
MATERIAL matb
SECT_FILL typeFillStringer, penBackFillStringer, penFillStringer, penLineStringer

PRISM pontszam,flw,
	get(pontszam*2)

IF iNoseType = NOSE_ROUNDED and cover and gs_detlevel_3D_m = DET3D_DETAILED THEN
	MATERIAL mat_tread
	SECT_FILL typeFillTread, penBackFillTread, penFillTread, penLineTread

	kisx=covthick*tproj/th
	startpnt=1
	IF topTreadLevel_m = TOPTREAD_ATFLOOR THEN
		endpnt=rnu
	ELSE endpnt=rnu-1
	FOR i=startpnt to endpnt-1
		ADDy i*th
		ADDx i*td
		IF ABS(recefice)<EPS THEN
			PRISM_ 9, flw,
				tproj,					0,15,
				tproj-kisx,				covthick,15,
				-td,					covthick,79,
				-td,					0,900,
				0,						180-atn(th/tproj),4013,
				-td+tproj-kisx-covthick,covthick-th,15,
				-td+tproj-kisx,			covthick-th,15,
				-td,					0,15,
				tproj,					0,15
		ELSE
			recnum=5
			FOR rcfc=recnum to 1 step -1
				put -td+(rcfc*2)*reclen, covthick,15
				put	-td+(rcfc*2)*reclen, covthick-reclen,15
				put	-td+(rcfc*2-1)*reclen, covthick-reclen,15
				put	-td+(rcfc*2-1)*reclen, covthick,15
			NEXT rcfc
			PRISM_ 9+recnum*4, flw,
				tproj,					0,15,
				tproj-kisx,				covthick,15,

				get(recnum*12),

				-td,					covthick,79,
				-td,					0,900,
				0,						180-atn(th/tproj),4013,
				-td+tproj-kisx-covthick,covthick-th,15,
				-td+tproj-kisx,			covthick-th,15,
				-td,					0,15,
				tproj,					0,15
		ENDIF
		DEL 2
	NEXT i


	ADDy endpnt*th
	ADDx endpnt*td

	IF recefice THEN
		recnum=5
		FOR rcfc=recnum to 1 step -1
			put -td+(rcfc*2)*reclen, covthick,15
			put	-td+(rcfc*2)*reclen, covthick-reclen,15
			put	-td+(rcfc*2-1)*reclen, covthick-reclen,15
			put	-td+(rcfc*2-1)*reclen, covthick,15
		NEXT rcfc
		PRISM_ 9+recnum*4, flw,
			0,						0,15,
			0,						covthick,15,
			get(recnum*12),
			-td,					covthick,79,
			-td,					0,900,
			0,						180-atn(th/tproj),4013,
			-td+tproj-kisx-covthick,covthick-th,15,
			-td+tproj-kisx,			covthick-th,15,
			-td,					0,15,
			0,						0,15
	ELSE
		PRISM_ 9, flw,
			0,						0,15,
			0,						covthick,15,
			-td,					covthick,79,
			-td,					0,900,
			0,						180-atn(th/tproj),4013,
			-td+tproj-kisx-covthick,covthick-th,15,
			-td+tproj-kisx,			covthick-th,15,
			-td,					0,15,
			0,						0,15
	ENDIF
	DEL 2

	IF firstTreadLevel_m = FIRSTTREAD_ATFLOOR and iNoseType = NOSE_ROUNDED THEN
		IF covthick > 0 THEN
		PRISM_ 5, flw,
			tproj,		0,		 15,
			-td,						0,		 15,
			-td,						covthick,15,
			tproj-kisx,				covthick,15,
			tproj,		0,		 15
		ENDIF
	ENDIF
ENDIF



! 	S P I N E B E A M !..............................................

IF iFlightSectionType = WITH_SPINEBEAM THEN
	ROTy 90
	ROTx 90
	IF topd < 0 THEN
		IF topTreadLevel_m = TOPTREAD_BELOWFLOOR THEN
			corrval = td*rnu-td
		ELSE
			corrval=td*rnu
		ENDIF
		IF iLowerJunctionType = LOWERJUNCTION_FLOOR_OR_LANDING THEN
			MATERIAL matsb
			SECT_FILL typeFillStringer, penBackFillStringer, penFillStringer, penLineStringer

			tubea 7, 5, 1+2+16+32+64,
				0,0,0,
				flw/2-beamx/2, rfthickness,0,
				flw/2-beamx/2, rfthickness+beamy,0,
				flw/2+beamx/2, rfthickness+beamy,0,
				flw/2+beamx/2, rfthickness,0,
				flw,0,0,
				0,0,0,

				 0, 	talp-td,	 maxfloorh-th,
				 0,		talp,		 maxfloorh,
				 0,		topd+td*rnu, -th*rnu+lst,
				 0,		corrval,	 -th*rnu+lst,
				 0, 	corrval+td, -th*rnu+lst
		ENDIF
		IF iLowerJunctionType = LOWERJUNCTION_GROUND_FLOOR THEN
			cutplane
			MATERIAL matsb
			SECT_FILL typeFillStringer, penBackFillStringer, penFillStringer, penLineStringer

			tubea 7, 5, 1+2+16+32+64,
				0,0,0,
				flw/2-beamx/2, rfthickness,0,
				flw/2-beamx/2, rfthickness+beamy,0,
				flw/2+beamx/2, rfthickness+beamy,0,
				flw/2+beamx/2, rfthickness,0,
				flw,0,0,
				0,0,0,

				 0, 	talp-td,	 -th,
				 0,		talp,		 0,
				 0,		topd+td*rnu, -th*rnu+lst,
				 0,		corrval,	 -th*rnu+lst,
				 0, 	corrval+td,  -th*rnu+lst
			cutend
		ENDIF
	ELSE
		IF iLowerJunctionType = LOWERJUNCTION_FLOOR_OR_LANDING THEN
			IF lst2 > maxfloorh THEN
				corrval = maxfloorh
			ELSE
				corrval=lst2
			ENDIF
			MATERIAL matsb
			SECT_FILL typeFillStringer, penBackFillStringer, penFillStringer, penLineStringer

			tubea 7, 4, 1+2+16+32+64,
				0,0,0,
				flw/2-beamx/2, rfthickness,0,
				flw/2-beamx/2, rfthickness+beamy,0,
				flw/2+beamx/2, rfthickness+beamy,0,
				flw/2+beamx/2, rfthickness,0,
				flw,0,0,
				0,0,0,


				 0, 	talp-td,	 corrval-th,
				 0,		talp,		 corrval,
				 0,		topd+td*rnu, -th*rnu+lst,
				 0, 	td*rnu+topd+td, 	-th*rnu+lst+th
		ENDIF
		IF iLowerJunctionType = LOWERJUNCTION_GROUND_FLOOR THEN
			cutplane
			MATERIAL matsb
			SECT_FILL typeFillStringer, penBackFillStringer, penFillStringer, penLineStringer
			tubea 7, 4, 1+2+16+32+64,
				0,0,0,
				flw/2-beamx/2, rfthickness,0,
				flw/2-beamx/2, rfthickness+beamy,0,
				flw/2+beamx/2, rfthickness+beamy,0,
				flw/2+beamx/2, rfthickness,0,
				flw,0,0,
				0,0,0,


				 0, 	talp-td,	 -th,
				 0,		talp,		 0,
				 0,		topd+td*rnu, -th*rnu+lst,
				 0, 	td*rnu+topd+td, 	-th*rnu+lst+th
			cutend
		ENDIF
	ENDIF
DEL 2
ENDIF

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** Railing ** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

IF hrtr_m=1 THEN		!!! HANDRAIL RIGHT WIDTH
		HandrailHgtR=hrhr
	ELSE
		HandrailHgtR=hrdr
ENDIF

IF hrtl_m=1 THEN		!!! HANDRAIL RIGHT WIDTH
		HandrailHgtL=hrhl
	ELSE
		HandrailHgtL=hrdl
ENDIF

rx=0	! rail x0
ry=0	! rail y0
lx=0	! rail l0
ly=0	! rail l0

lrah=td*(rnu-1)

kisatfog=sqr(td*td+th*th) ! egy lepcsofok atfogoja

atfogR=sqr(rnu*rnu*(td*td+th*th))+(OverhangRBottom+OverhangRTop)/cos(angle)-kisatfog
atfogL=sqr(rnu*rnu*(td*td+th*th))+(OverhangLBottom+OverhangLTop)/cos(angle)-kisatfog

RRailLength=lrah+OverhangRBottom+OverhangRTop
LRailLength=lrah+OverhangLBottom+OverhangLTop

top_ry=((OverhangRBottom+OverhangRTop)*th)/td
top_ly=((OverhangLBottom+OverhangLTop)*th)/td

IF  firstTreadLevel_m = FIRSTTREAD_ATFLOOR THEN
	IF iLowerJunctionType = LOWERJUNCTION_FLOOR_OR_LANDING THEN
		rx=-OverhangRBottom
		ry=-(OverhangRBottom*th)/td

		lx=-OverhangLBottom
		ly=-(OverhangLBottom*th)/td

	ELSE ! Ground Floor
		rx=-OverhangRBottom
		ry=-(OverhangRBottom*th)/td

		lx=-OverhangLBottom
		ly=-(OverhangLBottom*th)/td
	ENDIF
ENDIF

IF  firstTreadLevel_m = FIRSTTREAD_ABOVEFLOOR THEN
	IF iLowerJunctionType = LOWERJUNCTION_FLOOR_OR_LANDING THEN
		rx=-OverhangRBottom
		ry=-(OverhangRBottom*th)/td

		lx=-OverhangLBottom
		ly=-(OverhangLBottom*th)/td
	ELSE ! Ground Floor
		rx=-OverhangRBottom
		ry=-(OverhangRBottom*th)/td

		lx=-OverhangLBottom
		ly=-(OverhangLBottom*th)/td
	ENDIF
ENDIF

! ------------------------------------------------------------------------------
! Left rail
! ------------------------------------------------------------------------------

IF rail_m = RAILPOS_LEFT or rail_m = RAILPOS_BOTH THEN
	material fmatl

	if bSameRails then
		leftRailType_m	= rightRailType_m
		atfogL			= atfogR
		LRailLength		= RRailLength
		top_ly			= top_ry
	endif

	rplPostBase = (leftRailType_m = 7 or leftRailType_m = 8 or leftRailType_m = 9 or leftRailType_m = 11)

	ROTx -90
	ADDz covthick+th

	ADDy roffl-handRailWidthL/2
	ADDz ly
	ADDx lx+bComplexRailLeft*td/2

	IF bSameRails THEN
		RailUNID=2200

		HOTSPOT 0,-roffr,0, RailUNID, roffr, 1+128 : RailUNID=RailUNID+1
		HOTSPOT 0,0,0, RailUNID, roffr, 2 : RailUNID=RailUNID+1
		HOTSPOT 0,-roffr-1,0, RailUNID, roffr, 3 : RailUNID=RailUNID+1

		ADDz (OverhangRBottom)*tan(angle)
			HOTSPOT RRailLength,-roffr,  (rnu-1)*th+OverhangRTop*tan(angle), RailUNID, roffr, 1+128 : RailUNID=RailUNID+1
			HOTSPOT RRailLength,0,  	(rnu-1)*th+OverhangRTop*tan(angle), RailUNID, roffr, 2 : RailUNID=RailUNID+1
			HOTSPOT RRailLength,-roffr-1,(rnu-1)*th+OverhangRTop*tan(angle), RailUNID, roffr, 3 : RailUNID=RailUNID+1
		DEL 1

	ELSE
		RailUNID=2206

		HOTSPOT 0,-roffl,0, 	RailUNID, roffl, 1+128 : RailUNID=RailUNID+1
		HOTSPOT 0,0,	0, 		RailUNID, roffl, 2 : RailUNID=RailUNID+1
		HOTSPOT 0,-roffl-1, 0, 	RailUNID, roffl, 3 : RailUNID=RailUNID+1

		ADDz (OverhangLBottom)*tan(angle)
			HOTSPOT LRailLength,-roffl,  	(rnu-1)*th+OverhangLTop*tan(angle), RailUNID, roffl, 1+128 : RailUNID=RailUNID+1
			HOTSPOT LRailLength, 0,  		(rnu-1)*th+OverhangLTop*tan(angle), RailUNID, roffl, 2 : RailUNID=RailUNID+1
			HOTSPOT LRailLength,-roffl-1,	(rnu-1)*th+OverhangLTop*tan(angle), RailUNID, roffl, 3 : RailUNID=RailUNID+1
		DEL 1
	ENDIF

	IF roml_m = RAILORIENT_VERTICAL THEN	!!! (RailUNID 1112-1142...>1300)

		IF bSameRails THEN
			RailUNID=2212

			! Distance from Top of Tread

			HOTSPOT 0,0,0,	RailUNID, dsr, 1+128 : RailUNID=RailUNID+1
			HOTSPOT 0,0,dsr,	RailUNID, dsr, 2 : RailUNID=RailUNID+1
			HOTSPOT 0,0,-1,	RailUNID, dsr, 3 : RailUNID=RailUNID+1


			HOTSPOT RRailLength,0,(rnu-1)*th+top_ry,	RailUNID, dsr, 1+128 : RailUNID=RailUNID+1
			HOTSPOT RRailLength,0,(rnu-1)*th+dsr+top_ry,	RailUNID, dsr, 2 : RailUNID=RailUNID+1
			HOTSPOT RRailLength,0,(rnu-1)*th-1+top_ry,	RailUNID, dsr, 3 : RailUNID=RailUNID+1


			! Height of Rail

			HOTSPOT 0,0,dsr,	RailUNID, hrr, 1+128 : RailUNID=RailUNID+1
			HOTSPOT 0,0,dsr+hrr,	RailUNID, hrr, 2 : RailUNID=RailUNID+1
			HOTSPOT 0,0,dsr-1,	RailUNID, hrr, 3 : RailUNID=RailUNID+1

			HOTSPOT RRailLength,0,(rnu-1)*th+dsr+top_ry,	RailUNID, hrr, 1+128 : RailUNID=RailUNID+1
			HOTSPOT RRailLength,0,(rnu-1)*th+dsr+hrr+top_ry,	RailUNID, hrr, 2 : RailUNID=RailUNID+1
			HOTSPOT RRailLength,0,(rnu-1)*th-1+dsr+top_ry,	RailUNID, hrr, 3 : RailUNID=RailUNID+1


			ADD OverhangRBottom,0,(OverhangRBottom)*tan(angle)
			! Rail Overhang at Bottom

			HOTSPOT 0,	0,	dsr,	RailUNID, temp_OverhangRBottom, 1+128,OverhangRBottom : RailUNID=RailUNID+1
			HOTSPOT 1,	0,	dsr+tan(angle),	RailUNID, temp_OverhangRBottom, 3,OverhangRBottom : RailUNID=RailUNID+1
			HOTSPOT -OverhangRBottom,0,	dsr-OverhangRBottom*tan(angle),	RailUNID, temp_OverhangRBottom, 2,OverhangRBottom : RailUNID=RailUNID+1

			! Rail Overhang at Top

			HOTSPOT lrah, 0,				(rnu-1)*th+dsr,		RailUNID, temp_OverhangRTop, 1+128,OverhangRTop : RailUNID=RailUNID+1
			HOTSPOT lrah-1, 0,				(rnu-1)*th+dsr-tan(angle),		RailUNID, temp_OverhangRTop, 3,OverhangRTop : RailUNID=RailUNID+1
			HOTSPOT lrah+OverhangRTop, 0,	(rnu-1)*th+dsr+OverhangRTop*tan(angle),	RailUNID, temp_OverhangRTop, 2,OverhangRTop : RailUNID=RailUNID+1
			DEL 1

			IF leftRailType_m = 9 THEN
				RailUNID=2230

				! TOP WIRE/SUBBOARD DISTANCE FROM HANDRAIL
				HOTSPOT 0,0,hrr+dsr-HandrailHgtR,RailUNID,sbhr,1+128 : RailUNID=RailUNID+1
				HOTSPOT 0,0,hrr+dsr-HandrailHgtR-sbhr,RailUNID,sbhr,2 : RailUNID=RailUNID+1
				HOTSPOT 0,0,hrr+dsr-HandrailHgtR+1,RailUNID,sbhr,3 : RailUNID=RailUNID+1

				HOTSPOT RRailLength,0,(rnu-1)*th+top_ry+hrr+dsr-HandrailHgtR,RailUNID,sbhr,1+128 : RailUNID=RailUNID+1
				HOTSPOT RRailLength,0,(rnu-1)*th+top_ry+hrr+dsr-HandrailHgtR-sbhr,RailUNID,sbhr,2 : RailUNID=RailUNID+1
				HOTSPOT RRailLength,0,(rnu-1)*th+top_ry+hrr+dsr-HandrailHgtR+1,RailUNID,sbhr,3 : RailUNID=RailUNID+1
			ENDIF

			IF rplPostBase=1 THEN
				RailUNID=2236

				! POST BASE OVERHANG
				HOTSPOT 0,0,0,RailUNID,gs_PostBaseOverhangR,1 : RailUNID=RailUNID+1
				HOTSPOT 0,0,-gs_PostBaseOverhangR,RailUNID,gs_PostBaseOverhangR,2 : RailUNID=RailUNID+1
				HOTSPOT 0,0,1,RailUNID,gs_PostBaseOverhangR,3 : RailUNID=RailUNID+1

				HOTSPOT RRailLength,0,(rnu-1)*th+top_ry,RailUNID,gs_PostBaseOverhangR,1 : RailUNID=RailUNID+1
				HOTSPOT RRailLength,0,(rnu-1)*th+top_ry-gs_PostBaseOverhangR,RailUNID,gs_PostBaseOverhangR,2 : RailUNID=RailUNID+1
				HOTSPOT RRailLength,0,(rnu-1)*th+top_ry+1,RailUNID,gs_PostBaseOverhangR,3 : RailUNID=RailUNID+1
			ENDIF
		else
			RailUNID=2400

			! Distance from Top of Tread

			HOTSPOT 0,0,0,	RailUNID, dsl, 1+128 : RailUNID=RailUNID+1
			HOTSPOT 0,0,dsl,	RailUNID, dsl, 2 : RailUNID=RailUNID+1
			HOTSPOT 0,0,-1,	RailUNID, dsl, 3 : RailUNID=RailUNID+1

			HOTSPOT LRailLength,0,(rnu-1)*th+top_ly,	RailUNID, dsl, 1+128 : RailUNID=RailUNID+1
			HOTSPOT LRailLength,0,(rnu-1)*th+dsl+top_ly,	RailUNID, dsl, 2 : RailUNID=RailUNID+1
			HOTSPOT LRailLength,0,(rnu-1)*th-1+top_ly,	RailUNID, dsl, 3 : RailUNID=RailUNID+1


			! Height of Rail

			HOTSPOT 0,0,dsl,	RailUNID, hrl, 1+128 : RailUNID=RailUNID+1
			HOTSPOT 0,0,dsl+hrl,	RailUNID, hrl, 2 : RailUNID=RailUNID+1
			HOTSPOT 0,0,dsl-1,	RailUNID, hrl, 3 : RailUNID=RailUNID+1

			HOTSPOT LRailLength,0,(rnu-1)*th+dsl+top_ly,	RailUNID, hrl, 1+128 : RailUNID=RailUNID+1
			HOTSPOT LRailLength,0,(rnu-1)*th+dsl+hrl+top_ly,	RailUNID, hrl, 2 : RailUNID=RailUNID+1
			HOTSPOT LRailLength,0,(rnu-1)*th-1+dsl+top_ly,	RailUNID, hrl, 3 : RailUNID=RailUNID+1


			ADD OverhangLBottom,0,(OverhangLBottom)*tan(angle)
			! Rail Overhang at Bottom

			HOTSPOT 0,	0,	dsl,	RailUNID, temp_OverhangLBottom, 1+128,OverhangLBottom : RailUNID=RailUNID+1
			HOTSPOT 1,	0,	dsl+tan(angle),	RailUNID, temp_OverhangLBottom, 3,OverhangLBottom : RailUNID=RailUNID+1
			HOTSPOT -OverhangLBottom,0,	dsl-OverhangLBottom*tan(angle),	RailUNID, temp_OverhangLBottom, 2,OverhangLBottom : RailUNID=RailUNID+1

			! Rail Overhang at Top

			HOTSPOT lrah, 0,				(rnu-1)*th+dsl,		RailUNID, temp_OverhangLTop, 1+128,OverhangLTop : RailUNID=RailUNID+1
			HOTSPOT lrah-1, 0,				(rnu-1)*th+dsl-tan(angle),		RailUNID, temp_OverhangLTop, 3,OverhangLTop : RailUNID=RailUNID+1
			HOTSPOT lrah+OverhangLTop, 0,	(rnu-1)*th+dsl+OverhangLTop*tan(angle),	RailUNID, temp_OverhangLTop, 2,OverhangLTop : RailUNID=RailUNID+1
			DEL 1

			IF rplPostBase=1 THEN
				RailUNID=2418

				! post base overhang
				HOTSPOT 0,0,0,RailUNID,gs_PostBaseOverhangL,1 : RailUNID=RailUNID+1
				HOTSPOT 0,0,-gs_PostBaseOverhangL,RailUNID,gs_PostBaseOverhangL,2 : RailUNID=RailUNID+1
				HOTSPOT 0,0,1,RailUNID,gs_PostBaseOverhangL,3 : RailUNID=RailUNID+1

				HOTSPOT LRailLength,0,(rnu-1)*th+top_ly,RailUNID,gs_PostBaseOverhangL,1 : RailUNID=RailUNID+1
				HOTSPOT LRailLength,0,(rnu-1)*th+top_ly-gs_PostBaseOverhangL,RailUNID,gs_PostBaseOverhangL,2 : RailUNID=RailUNID+1
				HOTSPOT LRailLength,0,(rnu-1)*th+top_ly+1,RailUNID,gs_PostBaseOverhangL,3 : RailUNID=RailUNID+1
			ENDIF

			IF leftRailType_m = 9 THEN
				RailUNID=2424

				! top wire/subboard distance from handrail
				HOTSPOT 0,0,hrl+dsl-HandrailHgtL,RailUNID,sbhl,1+128 : RailUNID=RailUNID+1
				HOTSPOT 0,0,hrl+dsl-HandrailHgtL-sbhl,RailUNID,sbhl,2 : RailUNID=RailUNID+1
				HOTSPOT 0,0,hrl+dsl-HandrailHgtL+1,RailUNID,sbhl,3 : RailUNID=RailUNID+1

				HOTSPOT LRailLength,0,(rnu-1)*th+top_ly+hrl+dsl-HandrailHgtL,RailUNID,sbhl,1+128 : RailUNID=RailUNID+1
				HOTSPOT LRailLength,0,(rnu-1)*th+top_ly+hrl+dsl-HandrailHgtL-sbhl,RailUNID,sbhl,2 : RailUNID=RailUNID+1
				HOTSPOT LRailLength,0,(rnu-1)*th+top_ly+hrl+dsl-HandrailHgtL+1,RailUNID,sbhl,3 : RailUNID=RailUNID+1
			ENDIF
		endif

		lraSimple=LRailLength
		lraComplex=LRailLength
		additionXComplex=0
		additionZComplex=0
		hrovL=hrol
		hrovR=hrol
		postNumber = npl
		rom_m = 1
		rmm_m = 1
		side = SIDE_LEFT
		gosub "callRailsForStair"
	else
		IF bSameRails THEN
			ROTy -atn(th/td)

			RailUNID=2300

			! Distance from Top of Tread

			HOTSPOT 0,0,0,	RailUNID, dsr, 1+128 : RailUNID=RailUNID+1
			HOTSPOT 0,0,dsr,	RailUNID, dsr, 2 : RailUNID=RailUNID+1
			HOTSPOT 0,0,-1,	RailUNID, dsr, 3 : RailUNID=RailUNID+1

			HOTSPOT atfogR, 0,0,	RailUNID, dsr, 1+128 : RailUNID=RailUNID+1
			HOTSPOT atfogR, 0,dsr,	RailUNID, dsr, 2 : RailUNID=RailUNID+1
			HOTSPOT atfogR, 0,-1,	RailUNID, dsr, 3 : RailUNID=RailUNID+1

			! Height of Rail

			HOTSPOT 0,0,dsr,	RailUNID, hrr, 1+128 : RailUNID=RailUNID+1
			HOTSPOT 0,0,dsr+hrr,	RailUNID, hrr, 2 : RailUNID=RailUNID+1
			HOTSPOT 0,0,dsr-1,	RailUNID, hrr, 3 : RailUNID=RailUNID+1

			HOTSPOT atfogR,0,dsr,	RailUNID, hrr, 1+128 : RailUNID=RailUNID+1
			HOTSPOT atfogR,0,dsr+hrr,	RailUNID, hrr, 2 : RailUNID=RailUNID+1
			HOTSPOT atfogR,0,-1+dsr,	RailUNID, hrr, 3 : RailUNID=RailUNID+1


			ADDx temp_OverhangRBottom
			! Rail Overhang at Bottom

			HOTSPOT 0,	0,	dsr,	RailUNID, temp_OverhangRBottom, 1+128,OverhangRBottom  : RailUNID=RailUNID+1
			HOTSPOT 1, 0	,dsr,RailUNID, temp_OverhangRBottom, 3,OverhangRBottom : RailUNID=RailUNID+1
			HOTSPOT -temp_OverhangRBottom,0,dsr,RailUNID, temp_OverhangRBottom, 2,OverhangRBottom : RailUNID=RailUNID+1

			! Rail Overhang at Top

			HOTSPOT lrah*th/(td*sin(atn(th/td))), 0, dsr,	RailUNID, temp_OverhangRTop, 1+128,OverhangRTop  : RailUNID=RailUNID+1
			HOTSPOT lrah*th/(td*sin(atn(th/td)))-1, 0, dsr,RailUNID, temp_OverhangRTop, 3,OverhangRTop : RailUNID=RailUNID+1
			HOTSPOT lrah*th/(td*sin(atn(th/td)))+temp_OverhangRTop, 0, dsr,RailUNID, temp_OverhangRTop, 2,OverhangRTop : RailUNID=RailUNID+1

			DEL 1

			IF rplPostBase=1 THEN
				RailUNID=2318

				! post base overhang
				HOTSPOT 0,0,0,RailUNID,gs_PostBaseOverhangR,1 : RailUNID=RailUNID+1
				HOTSPOT 0,0,-gs_PostBaseOverhangR,RailUNID,gs_PostBaseOverhangR,2 : RailUNID=RailUNID+1
				HOTSPOT 0,0,1,RailUNID,gs_PostBaseOverhangR,3 : RailUNID=RailUNID+1

				HOTSPOT atfogR,0,0,RailUNID,gs_PostBaseOverhangR,1 : RailUNID=RailUNID+1
				HOTSPOT atfogR,0,-gs_PostBaseOverhangR,RailUNID,gs_PostBaseOverhangR,2 : RailUNID=RailUNID+1
				HOTSPOT atfogR,0,1,RailUNID,gs_PostBaseOverhangR,3 : RailUNID=RailUNID+1
			ENDIF

			IF leftRailType_m = 9 THEN
				RailUNID=2324

				! top wire/subboard distance from handrail
				HOTSPOT 0,0,hrr+dsr-HandrailHgtR/cos(angle),		RailUNID,sbhPerpR,1+128,sbhr : RailUNID=RailUNID+1
				HOTSPOT 0,0,hrr+dsr-HandrailHgtR/cos(angle)-sbhr,	RailUNID,sbhPerpR,2,sbhr : RailUNID=RailUNID+1
				HOTSPOT 0,0,hrr+dsr-HandrailHgtR/cos(angle)+1,		RailUNID,sbhPerpR,3,sbhr : RailUNID=RailUNID+1

				HOTSPOT atfogR,0,hrr+dsr-HandrailHgtR/cos(angle),			RailUNID,sbhPerpR,1+128,sbhr : RailUNID=RailUNID+1
				HOTSPOT atfogR,0,hrr+dsr-HandrailHgtR/cos(angle)-sbhr,		RailUNID,sbhPerpR,2,sbhr : RailUNID=RailUNID+1
				HOTSPOT atfogR,0,hrr+dsr-HandrailHgtR/cos(angle)+1,			RailUNID,sbhPerpR,3,sbhr : RailUNID=RailUNID+1
			ENDIF

			DEL 1

		else
			ROTy -atn(th/td)

			RailUNID=2500

			! Distance from Top of Tread

			HOTSPOT 0,0,0,	RailUNID, dsl, 1+128 : RailUNID=RailUNID+1
			HOTSPOT 0,0,dsl,	RailUNID, dsl, 2 : RailUNID=RailUNID+1
			HOTSPOT 0,0,-1,	RailUNID, dsl, 3 : RailUNID=RailUNID+1

			HOTSPOT atfogL, 0,0,	RailUNID, dsl, 1+128 : RailUNID=RailUNID+1
			HOTSPOT atfogL, 0,dsl,	RailUNID, dsl, 2 : RailUNID=RailUNID+1
			HOTSPOT atfogL, 0,-1,	RailUNID, dsl, 3 : RailUNID=RailUNID+1

			! Height of Rail

			HOTSPOT 0,0,dsl,	RailUNID, hrl, 1+128 : RailUNID=RailUNID+1
			HOTSPOT 0,0,dsl+hrl,	RailUNID, hrl, 2 : RailUNID=RailUNID+1
			HOTSPOT 0,0,dsl-1,	RailUNID, hrl, 3 : RailUNID=RailUNID+1

			HOTSPOT atfogL,0,dsl,	RailUNID, hrl, 1+128 : RailUNID=RailUNID+1
			HOTSPOT atfogL,0,dsl+hrl,	RailUNID, hrl, 2 : RailUNID=RailUNID+1
			HOTSPOT atfogL,0,-1+dsl,	RailUNID, hrl, 3 : RailUNID=RailUNID+1


			ADDx temp_OverhangLBottom
			! Rail Overhang at Bottom

			HOTSPOT 0,	0,	dsl,	RailUNID, temp_OverhangLBottom, 1+128,OverhangLBottom  : RailUNID=RailUNID+1
			HOTSPOT 1, 0	,dsl,RailUNID, temp_OverhangLBottom, 3,OverhangLBottom : RailUNID=RailUNID+1
			HOTSPOT -temp_OverhangLBottom,0,dsl,RailUNID, temp_OverhangLBottom, 2,OverhangLBottom : RailUNID=RailUNID+1

			! Rail Overhang at Top

			HOTSPOT lrah*th/(td*sin(atn(th/td))), 0, dsl,	RailUNID, temp_OverhangLTop, 1+128,OverhangLTop  : RailUNID=RailUNID+1
			HOTSPOT lrah*th/(td*sin(atn(th/td)))-1, 0, dsl,RailUNID, temp_OverhangLTop, 3,OverhangLTop : RailUNID=RailUNID+1
			HOTSPOT lrah*th/(td*sin(atn(th/td)))+temp_OverhangLTop, 0, dsl,RailUNID, temp_OverhangLTop, 2,OverhangLTop : RailUNID=RailUNID+1

			DEL 1

			IF rplPostBase=1 THEN
				RailUNID=2518

				! post base overhang
				HOTSPOT 0,0,0,RailUNID,gs_PostBaseOverhangL,1 : RailUNID=RailUNID+1
				HOTSPOT 0,0,-gs_PostBaseOverhangL,RailUNID,gs_PostBaseOverhangL,2 : RailUNID=RailUNID+1
				HOTSPOT 0,0,1,RailUNID,gs_PostBaseOverhangL,3 : RailUNID=RailUNID+1

				HOTSPOT atfogL,0,0,RailUNID,gs_PostBaseOverhangL,1 : RailUNID=RailUNID+1
				HOTSPOT atfogL,0,-gs_PostBaseOverhangL,RailUNID,gs_PostBaseOverhangL,2 : RailUNID=RailUNID+1
				HOTSPOT atfogL,0,1,RailUNID,gs_PostBaseOverhangL,3 : RailUNID=RailUNID+1
			ENDIF

			IF leftRailType_m = 9 THEN
				RailUNID=2524

				! top wire/subboard distance from handrail
				HOTSPOT 0,0,hrl+dsl-HandrailHgtL/cos(angle),		RailUNID,sbhPerpL,1+128,sbhl : RailUNID=RailUNID+1
				HOTSPOT 0,0,hrl+dsl-HandrailHgtL/cos(angle)-sbhl,	RailUNID,sbhPerpL,2,sbhl : RailUNID=RailUNID+1
				HOTSPOT 0,0,hrl+dsl-HandrailHgtL/cos(angle)+1,		RailUNID,sbhPerpL,3,sbhl : RailUNID=RailUNID+1

				HOTSPOT atfogL,0,hrl+dsl-HandrailHgtL/cos(angle),			RailUNID,sbhPerpL,1+128,sbhl : RailUNID=RailUNID+1
				HOTSPOT atfogL,0,hrl+dsl-HandrailHgtL/cos(angle)-sbhl,		RailUNID,sbhPerpL,2,sbhl : RailUNID=RailUNID+1
				HOTSPOT atfogL,0,hrl+dsl-HandrailHgtL/cos(angle)+1,			RailUNID,sbhPerpL,3,sbhl : RailUNID=RailUNID+1
			ENDIF

			DEL 1
		endif

		lraSimple=atfogL
		lraComplex=atfogL
		additionXComplex=0
		additionZComplex=0
		hrovL=hrol
		hrovR=hrol
		postNumber = npl
		rom_m = 2
		rmm_m = 2
		side = SIDE_LEFT
		gosub "callRailsForStair"
	endif

	DEL 5
ENDIF

! ------------------------------------------------------------------------------
! Right rail
! ------------------------------------------------------------------------------

IF rail_m = RAILPOS_RIGHT or rail_m = RAILPOS_BOTH THEN
	material fmatr

	rprPostBase = (rightRailType_m = 7 or rightRailType_m = 8 or rightRailType_m = 9 or rightRailType_m = 11)

	ROTx -90
	ADDz covthick+th
	ADDy -flw-roffr+handRailWidthR/2
	ADDz ry
	ADDx rx+bComplexRailRight*td/2

	!!! RAIL OFFSET
	RailUNID=2000

	HOTSPOT 0,roffr,0, RailUNID, roffr, 1+128 : RailUNID=RailUNID+1
	HOTSPOT 0,0,0, RailUNID, roffr, 2 : RailUNID=RailUNID+1
	HOTSPOT 0,roffr+1,0, RailUNID, roffr, 3 : RailUNID=RailUNID+1

	ADDz (OverhangRBottom)*tan(angle)
	HOTSPOT RRailLength,roffr,  (rnu-1)*th+OverhangRTop*tan(angle), RailUNID, roffr, 1+128 : RailUNID=RailUNID+1
	HOTSPOT RRailLength,0,  	(rnu-1)*th+OverhangRTop*tan(angle), RailUNID, roffr, 2 : RailUNID=RailUNID+1
	HOTSPOT RRailLength,roffr+1,(rnu-1)*th+OverhangRTop*tan(angle), RailUNID, roffr, 3 : RailUNID=RailUNID+1
	DEL 1

	IF romr_m = RAILORIENT_VERTICAL THEN		!!! (RailUNID 1006-1036...>1100)
		!!! Dist. from Top of Tread

		RailUNID=2006

		! Distance from Top of Tread

		HOTSPOT 0,0,0,	RailUNID, dsr, 1+128 : RailUNID=RailUNID+1
		HOTSPOT 0,0,dsr,	RailUNID, dsr, 2 : RailUNID=RailUNID+1
		HOTSPOT 0,0,-1,	RailUNID, dsr, 3 : RailUNID=RailUNID+1


		HOTSPOT RRailLength,0,(rnu-1)*th+top_ry,	RailUNID, dsr, 1+128 : RailUNID=RailUNID+1
		HOTSPOT RRailLength,0,(rnu-1)*th+dsr+top_ry,	RailUNID, dsr, 2 : RailUNID=RailUNID+1
		HOTSPOT RRailLength,0,(rnu-1)*th-1+top_ry,	RailUNID, dsr, 3 : RailUNID=RailUNID+1


		! Height of Rail

		HOTSPOT 0,0,dsr,	RailUNID, hrr, 1+128 : RailUNID=RailUNID+1
		HOTSPOT 0,0,dsr+hrr,	RailUNID, hrr, 2 : RailUNID=RailUNID+1
		HOTSPOT 0,0,dsr-1,	RailUNID, hrr, 3 : RailUNID=RailUNID+1

		HOTSPOT RRailLength,0,(rnu-1)*th+dsr+top_ry,	RailUNID, hrr, 1+128 : RailUNID=RailUNID+1
		HOTSPOT RRailLength,0,(rnu-1)*th+dsr+hrr+top_ry,	RailUNID, hrr, 2 : RailUNID=RailUNID+1
		HOTSPOT RRailLength,0,(rnu-1)*th-1+dsr+top_ry,	RailUNID, hrr, 3 : RailUNID=RailUNID+1


		ADD OverhangRBottom,0,(OverhangRBottom)*tan(angle)
		! Rail Overhang at Bottom

		HOTSPOT 0,	0,	dsr,	RailUNID, temp_OverhangRBottom, 1+128,OverhangRBottom : RailUNID=RailUNID+1
		HOTSPOT 1,	0,	dsr+tan(angle),	RailUNID, temp_OverhangRBottom, 3,OverhangRBottom : RailUNID=RailUNID+1
		HOTSPOT -OverhangRBottom,0,	dsr-OverhangRBottom*tan(angle),	RailUNID, temp_OverhangRBottom, 2,OverhangRBottom : RailUNID=RailUNID+1

		! Rail Overhang at Top

		HOTSPOT lrah, 0,				(rnu-1)*th+dsr,		RailUNID, temp_OverhangRTop, 1+128,OverhangRTop : RailUNID=RailUNID+1
		HOTSPOT lrah-1, 0,				(rnu-1)*th+dsr-tan(angle),		RailUNID, temp_OverhangRTop, 3,OverhangRTop : RailUNID=RailUNID+1
		HOTSPOT lrah+OverhangRTop, 0,	(rnu-1)*th+dsr+OverhangRTop*tan(angle),	RailUNID, temp_OverhangRTop, 2,OverhangRTop : RailUNID=RailUNID+1
		DEL 1

		IF rightRailType_m = 9 THEN

			RailUNID=2030

			! top wire/subboard distance from handrail
			HOTSPOT 0,0,hrr+dsr-HandrailHgtR,RailUNID,sbhr,1+128 : RailUNID=RailUNID+1
			HOTSPOT 0,0,hrr+dsr-HandrailHgtR-sbhr,RailUNID,sbhr,2 : RailUNID=RailUNID+1
			HOTSPOT 0,0,hrr+dsr-HandrailHgtR+1,RailUNID,sbhr,3 : RailUNID=RailUNID+1

			HOTSPOT RRailLength,0,(rnu-1)*th+top_ry+hrr+dsr-HandrailHgtR,RailUNID,sbhr,1+128 : RailUNID=RailUNID+1
			HOTSPOT RRailLength,0,(rnu-1)*th+top_ry+hrr+dsr-HandrailHgtR-sbhr,RailUNID,sbhr,2 : RailUNID=RailUNID+1
			HOTSPOT RRailLength,0,(rnu-1)*th+top_ry+hrr+dsr-HandrailHgtR+1,RailUNID,sbhr,3 : RailUNID=RailUNID+1
		ENDIF

		IF rprPostBase=1 THEN

			RailUNID=2036

			! post base overhang
			HOTSPOT 0,0,0,RailUNID,gs_PostBaseOverhangR,1 : RailUNID=RailUNID+1
			HOTSPOT 0,0,-gs_PostBaseOverhangR,RailUNID,gs_PostBaseOverhangR,2 : RailUNID=RailUNID+1
			HOTSPOT 0,0,1,RailUNID,gs_PostBaseOverhangR,3 : RailUNID=RailUNID+1

			HOTSPOT RRailLength,0,(rnu-1)*th+top_ry,RailUNID,gs_PostBaseOverhangR,1 : RailUNID=RailUNID+1
			HOTSPOT RRailLength,0,(rnu-1)*th+top_ry-gs_PostBaseOverhangR,RailUNID,gs_PostBaseOverhangR,2 : RailUNID=RailUNID+1
			HOTSPOT RRailLength,0,(rnu-1)*th+top_ry+1,RailUNID,gs_PostBaseOverhangR,3 : RailUNID=RailUNID+1
		ENDIF

		!!! *** Right Railing/Lower Part
		lraSimple=RRailLength
		lraComplex=RRailLength
		additionXComplex=0
		additionZComplex=0
		hrovL=hror
		hrovR=hror
		postNumber = npr
		side = SIDE_RIGHT
		rom_m = 1
		rmm_m = 1
		gosub "callRailsForStair"
	else
		ROTy -atn(th/td)

		RailUNID=2100

		! Distance from Top of Tread

		HOTSPOT 0,0,0,	RailUNID, dsr, 1+128 : RailUNID=RailUNID+1
		HOTSPOT 0,0,dsr,	RailUNID, dsr, 2 : RailUNID=RailUNID+1
		HOTSPOT 0,0,-1,	RailUNID, dsr, 3 : RailUNID=RailUNID+1

		HOTSPOT atfogR, 0,0,	RailUNID, dsr, 1+128 : RailUNID=RailUNID+1
		HOTSPOT atfogR, 0,dsr,	RailUNID, dsr, 2 : RailUNID=RailUNID+1
		HOTSPOT atfogR, 0,-1,	RailUNID, dsr, 3 : RailUNID=RailUNID+1

		! Height of Rail

		HOTSPOT 0,0,dsr,	RailUNID, hrr, 1+128 : RailUNID=RailUNID+1
		HOTSPOT 0,0,dsr+hrr,	RailUNID, hrr, 2 : RailUNID=RailUNID+1
		HOTSPOT 0,0,dsr-1,	RailUNID, hrr, 3 : RailUNID=RailUNID+1

		HOTSPOT atfogR,0,dsr,	RailUNID, hrr, 1+128 : RailUNID=RailUNID+1
		HOTSPOT atfogR,0,dsr+hrr,	RailUNID, hrr, 2 : RailUNID=RailUNID+1
		HOTSPOT atfogR,0,-1+dsr,	RailUNID, hrr, 3 : RailUNID=RailUNID+1


		ADDx temp_OverhangRBottom
		! Rail Overhang at Bottom

		HOTSPOT 0,	0,	dsr,	RailUNID, temp_OverhangRBottom, 1+128,OverhangRBottom  : RailUNID=RailUNID+1
		HOTSPOT 1, 0	,dsr,RailUNID, temp_OverhangRBottom, 3,OverhangRBottom : RailUNID=RailUNID+1
		HOTSPOT -temp_OverhangRBottom,0,dsr,RailUNID, temp_OverhangRBottom, 2,OverhangRBottom : RailUNID=RailUNID+1

		! Rail Overhang at Top

		HOTSPOT lrah*th/(td*sin(atn(th/td))), 0, dsr,	RailUNID, temp_OverhangRTop, 1+128,OverhangRTop  : RailUNID=RailUNID+1
		HOTSPOT lrah*th/(td*sin(atn(th/td)))-1, 0, dsr,RailUNID, temp_OverhangRTop, 3,OverhangRTop : RailUNID=RailUNID+1
		HOTSPOT lrah*th/(td*sin(atn(th/td)))+temp_OverhangRTop, 0, dsr,RailUNID, temp_OverhangRTop, 2,OverhangRTop : RailUNID=RailUNID+1

		DEL 1

		IF rprPostBase=1 THEN

			RailUNID=2118

			! POST BASE OVERHANG
			HOTSPOT 0,0,0,RailUNID,gs_PostBaseOverhangR,1 : RailUNID=RailUNID+1
			HOTSPOT 0,0,-gs_PostBaseOverhangR,RailUNID,gs_PostBaseOverhangR,2 : RailUNID=RailUNID+1
			HOTSPOT 0,0,1,RailUNID,gs_PostBaseOverhangR,3 : RailUNID=RailUNID+1

			HOTSPOT atfogR,0,0,RailUNID,gs_PostBaseOverhangR,1 : RailUNID=RailUNID+1
			HOTSPOT atfogR,0,-gs_PostBaseOverhangR,RailUNID,gs_PostBaseOverhangR,2 : RailUNID=RailUNID+1
			HOTSPOT atfogR,0,1,RailUNID,gs_PostBaseOverhangR,3 : RailUNID=RailUNID+1
		ENDIF

		IF rightRailType_m = 9 THEN

			RailUNID=2124

			! TOP WIRE/SUBBOARD DISTANCE FROM HANDRAIL
			HOTSPOT 0,0,hrr+dsr-HandrailHgtR/cos(angle),		RailUNID,sbhPerpR,1+128,sbhr : RailUNID=RailUNID+1
			HOTSPOT 0,0,hrr+dsr-HandrailHgtR/cos(angle)-sbhr,	RailUNID,sbhPerpR,2,sbhr : RailUNID=RailUNID+1
			HOTSPOT 0,0,hrr+dsr-HandrailHgtR/cos(angle)+1,		RailUNID,sbhPerpR,3,sbhr : RailUNID=RailUNID+1

			HOTSPOT atfogR,0,hrr+dsr-HandrailHgtR/cos(angle),			RailUNID,sbhPerpR,1+128,sbhr : RailUNID=RailUNID+1
			HOTSPOT atfogR,0,hrr+dsr-HandrailHgtR/cos(angle)-sbhr,		RailUNID,sbhPerpR,2,sbhr : RailUNID=RailUNID+1
			HOTSPOT atfogR,0,hrr+dsr-HandrailHgtR/cos(angle)+1,			RailUNID,sbhPerpR,3,sbhr : RailUNID=RailUNID+1
		ENDIF

		DEL 1

		!!! *** Right Railing/Lower Part
		lraSimple=atfogR
		lraComplex=atfogR
		additionXComplex=0
		additionZComplex=0
		hrovL=hror
		hrovR=hror
		postNumber = npr
		side = SIDE_RIGHT
		rom_m = 2
		rmm_m = 2
		gosub "callRailsForStair"
	endif

	del 5

ENDIF

DEL 2

return

! ==============================================================================
"callRailsForStair":
! ------------------------------------------------------------------------------
!	lraSimple
!	lraComplex
!	additionXComplex
!	additionZComplex
!	hrovL: rail overhang start
!	hrovR: rail overhang end
!	postNumber:   number of posts
!	side: SIDE_LEFT or SIDE_RIGHT
! ==============================================================================
	ani = angle
	additionXComplex = additionXComplex
	additionZComplex = additionZComplex
	gosub "callRails"
return

! ==============================================================================
"callRails":
! ------------------------------------------------------------------------------
!	ani
!	additionXComplex
!	additionZComplex
!	dsComplex
!  ------------------
!	side: SIDE_LEFT or SIDE_RIGHT
!	lraSimple
!	lraComplex
!	hrovL: rail overhang start
!	hrovR: rail overhang end
!	postNumber:   number of posts
! ==============================================================================
	if side = SIDE_LEFT then
		railBarDepth	= bwl
		railBarDiam		= bdl
		railHeight		= hrl
		railBarThk		= fthl
		railBarType		= btypl_m
		railFrameThk	= fthl
		railDist		= dsl
		railType_m		= leftRailType_m
		railPostDiam	= pdl
		railPostWidth	= pwl
		railPostThk		= pthl
		railPostType	= ptl_m
		barNumber		= nbl
		iBalusterStyle	= btl_m
		railFramesWSide	= fswl
		railFramesWTop	= ftwl
		railFramesWBot	= fbwl
		railBarHeight	= bhl
		railBarFillThk	= bthl
		balusterDist	= abdistl
		railFrameMat	= fmatl
		railBaluFillMat	= bmatl
		railPostMat		= pmatl
		balusterNumber	= nbtl
		railFillDist	= fdfl
		railPostBaseType= gs_PostBaseTypeL_m
		railDistFromHr	= sbhl
		railPostBaseOv	= gs_PostBaseOverhangL
		handRailType	= hrtl_m
		handRailWidth	= hrwl
		handRailDiam	= hrdl
		handRailHeight	= hrhl
	else
		railBarDepth	= bwr
		railBarDiam		= bdr
		railHeight		= hrr
		railBarThk		= fthr
		railBarType		= btypr_m
		railFrameThk	= fthr
		railDist		= dsr
		railType_m		= rightRailType_m
		railPostDiam	= pdr
		railPostWidth	= pwr
		railPostThk		= pthr
		railPostType	= ptr_m
		barNumber		= nbr
		iBalusterStyle	= btr_m
		railFramesWSide	= fswr
		railFramesWTop	= ftwr
		railFramesWBot	= fbwr
		railBarHeight	= bhr
		railBarFillThk	= bthr
		balusterDist	= abdistr
		railFrameMat	= fmatr
		railBaluFillMat	= bmatr
		railPostMat		= pmatr
		balusterNumber	= nbtr
		railFillDist	= fdfr
		railPostBaseType= gs_PostBaseTypeR_m
		railDistFromHr	= sbhr
		railPostBaseOv	= gs_PostBaseOverhangR
		handRailType	= hrtr_m
		handRailWidth	= hrwr
		handRailDiam	= hrdr
		handRailHeight	= hrhr
	endif

	call "stairRails_m" parameters	railType_m				= railType_m,
									iStairType				= 2,
									bEnableWired02Rail		= 1,
									bEnableNonVerticalRail	= 1,
									additionXComplex		= additionXComplex,
									additionZComplex		= additionZComplex,
									ptyp_m					= 1,
									ani						= ani,
									ab						= 0,
									rb						= 0,
									rom_m					= rom_m,
									rmm_m					= rmm_m,
									lraSimple				= lraSimple,
									lraComplex				= lraComplex,
									railHeight				= railHeight,
									railDist				= railDist,
									gs_detlevel_3D_m		= gs_detlevel_3D_m,
									gs_cont_pen				= gs_cont_pen,
									res						= res,
									rescs					= rescs,
									gs_shadow				= gs_shadow,
									railFrameThk			= railFrameThk,
									railFramesWSide			= railFramesWSide,
									railFramesWTop			= railFramesWTop,
									railFramesWBot			= railFramesWBot,
									railBarType				= railBarType,
									railBarDepth			= railBarDepth,
									railBarFillThk			= railBarFillThk,
									railBarDiam				= railBarDiam,
									balusterDist			= balusterDist,
									railFrameMat			= railFrameMat,
									railBaluFillMat			= railBaluFillMat,
									barNumber				= barNumber,
									railBarHeight			= railBarHeight,
									railFillDist			= railFillDist,
									handRailType			= handRailType,
									handRailDiam			= handRailDiam,
									handRailWidth			= handRailWidth,
									handRailHeight			= handRailHeight,
									hrovL					= hrovL,
									hrovR					= hrovR,
									iBalusterStyle			= iBalusterStyle,
									railPostDiam			= railPostDiam,
									railPostWidth			= railPostWidth,
									railPostThk				= railPostThk,
									railPostType			= railPostType,
									postNumber				= postNumber,
									railPostMat				= railPostMat,
									iParamInputType			= 1,
									balusterNumber			= balusterNumber,
									railPostBaseType		= railPostBaseType,
									railPostBaseOv			= railPostBaseOv,
									railDistFromHr			= railDistFromHr
return


]]>
</Script_3D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_2D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[

! ---------- Hotspots ----------[

	!!! FlightUNID=1		!!! 1,50,60,100
	!!! RailUNID=1000		!!! 1000,1100,1200
	!!! BreakUNID=2000		!!! 2000,2050,2100,2150
	!!! StartSymbUNID=3000	!!! 3000,3100
	!!! ArrowUNID=4000		!!! 4000,4100,4200,4300,4400
	!!! RiseRunUNID=5000	!!! 5000,5050,5100
	!!! UpDownUNID=6000		!!! 6000
	!!! NumUNID=7000		!!! 7000,7100

! ---------- Hotspots ----------]

bCarriageLineExist		= bShowCarriage and bEnableCarriageLine and (GLOB_SCALE <= iShowCarriageUpTo | iShowCarriageUpTo = 1)

temp_wLineLength = 0
temp_wLineLengthAbove = 0

chStoryDist = GLOB_CH_STORY_DIST
IF gs_StorySensitive = 0 THEN chStoryDist = 0

!!!!!!!!!!!!!!! *** Settings of 2D Symbol Type *** !!!!!!!!!!!!!!!
!!!!!!!!!!!! *** Stories, where the object is placed on !!!!!!!!!!

	!!! The default settings is ON of the next parameters:
	!!!	gs_2DTread,gs_2DTreadAbove,gs_2DRiserAbove,gs_2DContourAbove,

	!!! The default settings is OFF of the next parameters:
	!!!	gs_FillAbove

	temp_RiserLine= dash_line		!!because of Type 17, Type 20
	temp_RiserLinePEN= gs_DashLinePen

	IF walkl=0 THEN bShowRiseAndRunText=0			!! If no walking line > no Rise and Run Text

	_iSymbolType = 1
	if gs_detlevel_2D_m = DET2D_SCALESENSITIVE then
		if GLOB_SCALE <= _iScaleMD then									!! Detailed Scale
			_iSymbolType = iEnabledSymbolTypes[iSymbolGroup][3]
		else
			if GLOB_SCALE > _iScaleMD & GLOB_SCALE <= _iScaleSM then	!! Middle Scale
				_iSymbolType = iEnabledSymbolTypes[iSymbolGroup][2]
			else														!! Simple Scale
				_iSymbolType = iEnabledSymbolTypes[iSymbolGroup][1]
			endif
		endif
	else
		_iSymbolType = gs_SymbolType_m
	endif

	IF _iSymbolType = 1 THEN
		!!! Treads
		ns=0
		covthicky=0
		brk=0
		gs_2DTread=0
		solid_line = dash_line
		gs_cont_pen = gs_DashLinePen
		gs_NosingLine = solid_line
		!!! Numbering
		gs_NumBelow = 1
		gs_NumAbove = 1
		!!! Walking Line
		temp_wLineType=gs_wLineType2
		!!! Railing
		rail_m = RAILPOS_NONE
	ENDIF

	IF _iSymbolType = 2 THEN
		!!! Treads
		ns=0
		covthicky=0
		brk=0
		gs_2DTread=0
		gs_NosingLine = solid_line
		!!! Numbering
		gs_NumBelow = 1
		gs_NumAbove = 1
		!!! Walking Line
		temp_wLineType=gs_wLineType1
		!!! Railing
		rail_m = RAILPOS_NONE
	ENDIF

	IF _iSymbolType = 3 THEN
		!!! Treads
		ns=0
		covthicky=0
		brk=1
		iLineTypeAboveBreak = LINETYPEABOVEBREAK_INTERSECT
		gs_2DContourAbove=0
		gs_2DTread=0
		gs_2DTreadAbove=0
		gs_NosingLine = solid_line
		!!! Numbering
		gs_NumBelow = 1
		IF chStoryDist > EPS  then
			gs_NumAbove = 1
			ELSE
			gs_NumAbove = 0
		ENDIF
		!!! Walking Line
		temp_wLineType=gs_wLineType1
		!!! Railing
		rail_m = RAILPOS_NONE
	ENDIF

	IF _iSymbolType = 4 THEN
		!!! Treads
		ns=0
		covthicky=0
		brk=1
		iLineTypeAboveBreak = LINETYPEABOVEBREAK_INTERSECT
		gs_2DTread=0
		gs_2DTreadAbove=0
		gs_NosingLine = solid_line
		!!! Walking Line
		temp_wLineType=gs_wLineType1
		!!! Railing
		rail_m = RAILPOS_NONE
	ENDIF

	IF _iSymbolType = 5 THEN
		!!! Treads
		ns=0
		covthicky=0
		brk=1
		iLineTypeAboveBreak = LINETYPEABOVEBREAK_INTERSECT
		gs_2DTread=0
		gs_2DTreadAbove=0
		IF chStoryDist > -EPS  then
			dash_line = solid_line
			gs_DashLinePen = gs_cont_pen
		ENDIF
		gs_NosingLine = solid_line
		!!! Walking Line
		temp_wLineType = gs_wLineType1
		gs_wLineTypeAbove = gs_wLineType1
		!!! Railing
		rail_m = RAILPOS_NONE
	ENDIF

	IF _iSymbolType = 6 THEN
		!!! Treads
		ns=0
		covthicky=0
		brk=0
		iLineTypeAboveBreak = LINETYPEABOVEBREAK_FULL
		solid_line = dash_line
		gs_cont_pen = gs_DashLinePen
		gs_NosingLine = solid_line
		!!! Numbering
		gs_NumBelow = 1
		gs_NumAbove = 1
		!!! Walking Line
		temp_wLineType=gs_wLineType2
		!!! Railing
		rail_m = RAILPOS_NONE
	ENDIF

	IF _iSymbolType = 7 THEN
		!!! Treads
		ns=0
		covthicky=0
		brk=0
		iLineTypeAboveBreak = LINETYPEABOVEBREAK_FULL
		gs_NosingLine = solid_line
		!!! Numbering
		gs_NumBelow = 1
		gs_NumAbove = 1
		!!! Walking Line
		temp_wLineType=gs_wLineType1
		!!! Railing
		rail_m = RAILPOS_NONE
	ENDIF

	IF _iSymbolType = 8 THEN
		!!! Treads
		ns=0
		covthicky=0
		brk=1
		iLineTypeAboveBreak = LINETYPEABOVEBREAK_INTERSECT
		gs_2DContourAbove=0
		gs_2DTreadAbove=0
		gs_NosingLine = solid_line
		!!! Numbering
		gs_NumBelow = 1
		IF chStoryDist > EPS  then
			gs_NumAbove = 1
			ELSE
			gs_NumAbove = 0
		ENDIF
		!!! Walking Line
		temp_wLineType=gs_wLineType1
		!!! Railing
		rail_m = RAILPOS_NONE
	ENDIF

	IF _iSymbolType = 9 THEN
		!!! Treads
		ns=0
		covthicky=0
		brk=1
		iLineTypeAboveBreak = LINETYPEABOVEBREAK_INTERSECT
		gs_2DTreadAbove=0
		gs_NosingLine = solid_line
		!!! Walking Line
		temp_wLineType=gs_wLineType1
		!!! Railing
		rail_m = RAILPOS_NONE
	ENDIF

	IF _iSymbolType = 10 THEN
		!!! Treads
		ns=0
		covthicky=0
		brk=1
		iLineTypeAboveBreak = LINETYPEABOVEBREAK_INTERSECT
		gs_2DTreadAbove=0
		IF chStoryDist > -EPS  then
			dash_line = solid_line
			gs_DashLinePen = gs_cont_pen
		ENDIF
		gs_NosingLine = solid_line
		!!! Walking Line
		temp_wLineType=gs_wLineType1
		gs_wLineTypeAbove = gs_wLineType1
		!!! Railing
		rail_m = RAILPOS_NONE
	ENDIF

	IF _iSymbolType = 11 THEN
		!!! Treads
		ns=0
		covthicky=0
		brk=1
		iLineTypeAboveBreak = LINETYPEABOVEBREAK_INTERSECT
		gs_NosingLine = solid_line
		!!! Walking Line
		temp_wLineType=gs_wLineType1
		!!! Railing
		rail_m = RAILPOS_NONE
	ENDIF

	IF _iSymbolType = 12 THEN
		!!! Treads
		ns=0
		covthicky=0
		brk=1
		iLineTypeAboveBreak = LINETYPEABOVEBREAK_INTERSECT
		IF chStoryDist > -EPS  then
			dash_line = solid_line
			gs_DashLinePen = gs_cont_pen
		ENDIF
		gs_NosingLine = solid_line
		!!! Walking Line
		temp_wLineType=gs_wLineType1
		gs_wLineTypeAbove = gs_wLineType1
		!!! Railing
		rail_m = RAILPOS_NONE
	ENDIF

	IF _iSymbolType = 13 THEN
		!!! Treads
		brk=0
		iLineTypeAboveBreak = LINETYPEABOVEBREAK_FULL
		solid_line = dash_line
		gs_cont_pen = gs_DashLinePen
		!!! Numbering
		gs_NumBelow = 1
		gs_NumAbove = 1
		!!! Walking Line
		temp_wLineType=gs_wLineType2
	ENDIF

	IF _iSymbolType = 14 THEN
		!!! Treads
		brk=0
		iLineTypeAboveBreak = LINETYPEABOVEBREAK_FULL
		!!! Numbering
		gs_NumBelow = 1
		gs_NumAbove = 1
		!!! Walking Line
		temp_wLineType=gs_wLineType1
	ENDIF

	IF _iSymbolType = 15 THEN
		!!! Treads
		brk=1
		iLineTypeAboveBreak = LINETYPEABOVEBREAK_INTERSECT
		gs_2DContourAbove=0
		gs_2DTreadAbove=0
		!!! Numbering
		gs_NumBelow = 1
		IF chStoryDist > EPS  then
			gs_NumAbove = 1
			gs_2DRiserAbove=1
			ELSE
			gs_NumAbove = 0
			gs_2DRiserAbove=0
		ENDIF
		!!! Walking Line
		temp_wLineType=gs_wLineType1
	ENDIF

	IF _iSymbolType = 16 THEN
		!!! Treads
		brk=1
		iLineTypeAboveBreak = LINETYPEABOVEBREAK_INTERSECT
		gs_2DTreadAbove=0
		!!! Walking Line
		temp_wLineType=gs_wLineType1
	ENDIF

	IF _iSymbolType = 17 THEN
		!!! Treads
		brk=1
		iLineTypeAboveBreak = LINETYPEABOVEBREAK_INTERSECT
		gs_2DTreadAbove=0
		IF ABS(chStoryDist) < EPS  then
			dash_line = solid_line
			gs_DashLinePen = gs_cont_pen
			ELSE
			dash_line = dash_line
			gs_DashLinePen = gs_DashLinePen
		ENDIF
		!!! Walking Line
		temp_wLineType=gs_wLineType1
		gs_wLineTypeAbove = gs_wLineType1
	ENDIF

	IF _iSymbolType = 18 THEN
		!!! Treads
		brk=1
		iLineTypeAboveBreak = LINETYPEABOVEBREAK_INTERSECT
		!!! Walking Line
		temp_wLineType=gs_wLineType1
	ENDIF

	IF _iSymbolType = 19 THEN
		!!! Treads
		brk=1
		iLineTypeAboveBreak = LINETYPEABOVEBREAK_INTERSECT
		gs_2DRiserAbove=0
		!!! Walking Line
		temp_wLineType=gs_wLineType1
	ENDIF

	IF _iSymbolType = 20 THEN
		!!! Treads
		brk=1
		iLineTypeAboveBreak = LINETYPEABOVEBREAK_INTERSECT
		IF ABS(chStoryDist) < EPS  then
			dash_line = solid_line
			gs_DashLinePen = gs_cont_pen
			ELSE
			dash_line = dash_line
			gs_DashLinePen = gs_DashLinePen
		ENDIF
		!!! Walking Line
		temp_wLineType=gs_wLineType1
		gs_wLineTypeAbove = gs_wLineType1
	ENDIF


!!!!!!!!!!!!!! *** 2D Representation on Stories *** !!!!!!!!!!!!!!
!!! *** Stories above the story, where the object is placed on !!!
IF gs_StorySensitive=1 THEN

	IF chStoryDist > EPS  then

		!!! Line Type and Pen
		solid_line = gs_LineTypeStUp
		IF gs_BreaklineStUp=0 THEN
			dash_line = dash_line
			ELSE
			dash_line = gs_LineTypeStUp
		ENDIF
		gs_cont_pen = gs_LinePenStUp
		IF gs_BreaklineStUp=1 THEN gs_DashLinePen = gs_LinePenStUp

		!!! Walking Line
		gs_wLineType1 = gs_wLineTypeStUp
		gs_wLineType2 = gs_wLineTypeStUp
		gs_wLineTypeAbove = gs_wLineTypeStUp
		temp_wLineType = gs_wLineTypeStUp


		!!! Rise and Run Text
		IF gs_txStUp = 1 THEN
			bShowRiseAndRunText = 1
			ELSE
			bShowRiseAndRunText = 0
		ENDIF

		!!! NUMBERING
		IF gs_numaStUp = 1 THEN
			bShowNumbering = 1
			gs_NumAbove = 1
			gs_NumBelow = 1
			ELSE
			bShowNumbering = 0
			gs_NumAbove = 0
			gs_NumBelow = 0
		ENDIF

		IF gs_BreaklineStUp=1 THEN
			brk=1
			iLineTypeAboveBreak = LINETYPEABOVEBREAK_INTERSECT
			ELSE
			brk=0
			iLineTypeAboveBreak = LINETYPEABOVEBREAK_FULL
		ENDIF

		IF gs_BreaklineStUp=0 AND gs_TreadStUp=1  THEN gs_2DTread=1
		IF gs_BreaklineStUp=0 AND gs_TreadStUp=0  THEN gs_2DTread=0


		IF gs_BreaklineStUp=1 THEN

			IF gs_UpperPartStUp=1 THEN
				gs_2DContourAbove=1
				gs_NumAbove = 1
				ELSE
				gs_2DTreadAbove=0
				gs_2DContourAbove=0
				gs_NumAbove = 0
			ENDIF

			IF gs_LowerPartStUp=1 THEN
				gs_2DContourBelow=1
				gs_NumBelow = 1
				ELSE
				gs_2DTread=0
				gs_2DContourBelow=0
				gs_NumBelow = 0
			ENDIF

			IF gs_UpperPartStUp=1 AND gs_TreadStUp=1  THEN gs_2DTreadAbove=1
			IF gs_UpperPartStUp=1 AND gs_TreadStUp=0  THEN gs_2DTreadAbove=0

			IF gs_LowerPartStUp=1 AND gs_TreadStUp=1  THEN gs_2DTread=1
			IF gs_LowerPartStUp=1 AND gs_TreadStUp=0  THEN gs_2DTread=0

		ENDIF

	ENDIF
ENDIF


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!! *** Stories down the story, where the object is placed on !!!!

IF chStoryDist < -EPS  then
	rail_m = RAILPOS_NONE
	bShowCarriage = 0
	bShowNumbering=0
	bShowRiseAndRunText=0
	walkingDirUPDN_m = WALKDIRSTR_NONE
	brk=0
	walkl=0
	solid_line = dash_line
	gs_cont_pen=gs_DashLinePen
	SET LINE_TYPE dash_line
	gs_fill_type=65
	gs_back_pen=0
endif

	IF chStoryDist > -EPS AND gs_2DTread=1 then
	MASK=1
	ELSE
	MASK=0
	ENDIF

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!! Arrow Size

		IF td> 0.26 then
		ArrowDist=gs_ArrowHalfWidth
		ELSE
		ArrowDist=gs_ArrowHalfWidth
		ENDIF

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!! First and Top Tread

	IF firstTreadLevel_m = FIRSTTREAD_ATFLOOR AND gs_structure_landing_m = STRUCTTYPE_MONOLITH THEN
		temp_FirstTread=td-(ns+covthicky)
		ELSE
		temp_FirstTread=0
	ENDIF

	IF topTreadLevel_m = TOPTREAD_ATFLOOR AND gs_structure_landing_m = STRUCTTYPE_MONOLITH THEN
		temp_TopTread=td
		ELSE
		temp_TopTread=0
	ENDIF

	IF gs_structure_landing_m = STRUCTTYPE_CONCRETE THEN temp_FirstTread = ljl-(ns+covthicky)
	IF gs_structure_landing_m = STRUCTTYPE_CONCRETE THEN temp_TopTread = ujl+td
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!! Nosing

	If iNoseType = NOSE_ROUNDED THEN
		ns=covthick
		covthicky=0
	ELSE
		ns=ns
		covthicky=covthicky
	ENDIF

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! Top Tread > Type=14,19,20

	IF topTreadLevel_m = TOPTREAD_BELOWFLOOR THEN top_line = 0

	IF _iSymbolType = 14 AND top_line=1 OR _iSymbolType = 19 AND top_line=1 OR _iSymbolType = 20 AND top_line=1 THEN
		TopLineMask141920_0=0
		TopLineMask141920_1=1
		tempLine141920=(ns+covthicky)
		ELSE
		IF chStoryDist < EPS THEN
			TopLineMask141920_0=1
			TopLineMask141920_1=0
			tempLine141920=0
			ELSE
			IF top_line=1 THEN TopLineMask141920_0=0
			IF top_line=0 THEN TopLineMask141920_0=1
			TopLineMask141920_1=1
			tempLine141920=(ns+covthicky)
		ENDIF
	ENDIF

	IF _iSymbolType = 19 AND top_line=1 THEN
		tempLine19=(ns+covthicky)
		ELSE
		tempLine19=0
	ENDIF

	IF _iSymbolType = 14 AND top_line=1 OR _iSymbolType = 20 AND top_line=1 THEN
		tempLine1420=(ns+covthicky)
		ELSE
		IF chStoryDist < EPS THEN
			tempLine1420=0
			ELSE
			tempLine1420=(ns+covthicky)
		ENDIF
	ENDIF


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

PEN gs_cont_pen
FILL gs_fill_type
DRAWINDEX 10

!-- FLIGHT WIDTH ---------------------------------------------------

	FlightUNID=1

	HOTSPOT2 0,-temp_FirstTread-ns-covthicky,	FlightUNID, flw, 1+256 : FlightUNID=FlightUNID+1
	HOTSPOT2 flw,-temp_FirstTread-ns-covthicky, FlightUNID, flw, 2 : FlightUNID=FlightUNID+1
	HOTSPOT2 -1,-temp_FirstTread-ns-covthicky,	FlightUNID, flw, 3: FlightUNID=FlightUNID+1

	HOTSPOT2 0,(rnu-1)*td+temp_TopTread,	FlightUNID, flw, 1+256 : FlightUNID=FlightUNID+1
	HOTSPOT2 flw,(rnu-1)*td+temp_TopTread, FlightUNID, flw, 2 : FlightUNID=FlightUNID+1
	HOTSPOT2 -1,(rnu-1)*td+temp_TopTread,	FlightUNID, flw, 3 : FlightUNID=FlightUNID+1

	IF topTreadLevel_m = TOPTREAD_ATFLOOR AND gs_structure_landing_m = STRUCTTYPE_MONOLITH OR gs_structure_landing_m = STRUCTTYPE_CONCRETE THEN

		FlightUNID=50
		HOTSPOT2 0,(rnu-1)*td,	FlightUNID: FlightUNID=FlightUNID+1
		HOTSPOT2 flw,(rnu-1)*td,	FlightUNID: FlightUNID=FlightUNID+1
	ENDIF

	IF firstTreadLevel_m = FIRSTTREAD_ATFLOOR AND gs_structure_landing_m = STRUCTTYPE_MONOLITH OR gs_structure_landing_m = STRUCTTYPE_CONCRETE THEN

		FlightUNID=60
		HOTSPOT2 0,0,	FlightUNID: FlightUNID=FlightUNID+1
		HOTSPOT2 flw,0,	FlightUNID: FlightUNID=FlightUNID+1
	ENDIF


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!! *** CONTOUR LINES AND FILL*** !!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

!!NumStline=INT (1/th)	!!! POSITION of BREAK LINE
NumStline=INT (gs_BreakHeight/th)	!!! POSITION of BREAK LINE
IF ZZYZX <= (NumStline+1)*th THEN brk=0		!!!IF value of ZZYZX is less than BREAK LINE

	!!! Contour Line and Fill Type

	IF iLineTypeAboveBreak = LINETYPEABOVEBREAK_INTERSECT THEN
		temp_line=dash_line
		temp_pen=gs_DashLinePen
		IF gs_FillAbove=1 THEN
			FullFill=2+64
			temp_FillTypeAbove=gs_fill_type
			temp_BackPen=gs_back_pen
		ELSE
			FullFill=0
			temp_FillTypeAbove=gs_FillTypeAbove		!!! because of Area Fill Selection
			temp_BackPen=0							!!! because of Area Fill Selection
		ENDIF
	ELSE
		temp_line=solid_line
		temp_pen=gs_cont_pen
		FullFill=2+64
		temp_FillTypeAbove=gs_fill_type
		temp_BackPen=gs_back_pen
	ENDIF

	!!! BREAK LINE X Distance
	brkLineX=(brkLineY*flw)/(2*td)

	!! No BREAK LINE
	IF brk=0 THEN
		PEN gs_cont_pen
		SET LINE_TYPE solid_line
			IF bottom_line = 1 and firstTreadLevel_m = FIRSTTREAD_ATFLOOR THEN
				POLY2_b 5, 1+2+64, gs_fill_pen, gs_back_pen,
					0, 0-ns-covthicky, 0,
					flw, 0-ns-covthicky, 1,
					flw, 0-ns-covthicky-temp_FirstTread, 1,
					0, 0-ns-covthicky-temp_FirstTread, 1,
					0, 0-ns-covthicky, -1

				HOTLINE2 0, 0-ns-covthicky,flw, 0-ns-covthicky
			ENDIF

			POLY2_b 5, 1+2+64, gs_fill_pen, gs_back_pen,
				0, 0-ns-covthicky, 1,
				flw, 0-ns-covthicky, 1,
				flw, (rnu-1)*td, TopLineMask141920_0,
				0, (rnu-1)*td, 1,
				0, 0-ns-covthicky, -1

			IF top_line = 1 AND topTreadLevel_m = TOPTREAD_ATFLOOR THEN
			SET LINE_TYPE solid_line
				POLY2_b 5, 1+2+64, gs_fill_pen, gs_back_pen,
					0, (rnu-1)*td+temp_TopTread, 1,
					flw, (rnu-1)*td+temp_TopTread, 1,
					flw, (rnu-1)*td-tempLine141920,TopLineMask141920_1,
					0, (rnu-1)*td-tempLine141920, 1,
					0, (rnu-1)*td+temp_TopTread, -1

				HOTLINE2 0, (rnu-1)*td,flw, (rnu-1)*td
			ENDIF


	ELSE	!!! with Break Line

			IF breakline_style_m = BREAKLINE_STRAIGHT THEN

				IF gs_2DContourBelow=1 THEN

					PEN gs_cont_pen
					SET LINE_TYPE solid_line

					IF bottom_line = 1 and firstTreadLevel_m = FIRSTTREAD_ATFLOOR THEN
						POLY2_b 5, 1+2+64, gs_fill_pen, gs_back_pen,
							0, 0-ns-covthicky, 0,
							flw, 0-ns-covthicky, 1,
							flw, 0-ns-covthicky-temp_FirstTread, 1,
							0, 0-ns-covthicky-temp_FirstTread, 1,
							0, 0-ns-covthicky, -1

						HOTLINE2 0, 0-ns-covthicky,flw, 0-ns-covthicky
					ENDIF

					POLY2_b 5, 1+2+64, gs_fill_pen, gs_back_pen,
						0, 0-ns-covthicky, 1,
						flw, 0-ns-covthicky, 1,
						flw, (NumStline+1)*td-ns-covthicky, 1,
						0, (NumStline-1)*td-ns-covthicky, 1,
						0, 0-ns-covthicky, -1

					BreakUNID=2000

					HOTSPOT2 0, (NumStline-1)*td-ns-covthicky, BreakUNID: BreakUNID=BreakUNID+1
					HOTSPOT2 flw, (NumStline+1)*td-ns-covthicky, BreakUNID: BreakUNID=BreakUNID+1


				ENDIF


				IF gs_2DContourAbove=1 THEN		!!IF No Contour above Break Line

					PEN temp_pen
					FILL temp_FillTypeAbove
					SET LINE_TYPE temp_line

					LINE2 0, (NumStline-1)*td-ns-covthicky+brkLineY,flw, (NumStline+1)*td-ns-covthicky+brkLineY


					POLY2_b 5, 1+FullFill, gs_fill_pen, temp_BackPen,
						0, (NumStline-1)*td-ns-covthicky+brkLineY, 0,
						flw, (NumStline+1)*td-ns-covthicky+brkLineY, 1,
						flw, (rnu-1)*td, TopLineMask141920_0,
						0, (rnu-1)*td, 1,
						0, (NumStline-1)*td-ns-covthicky+brkLineY, -1

					SET LINE_TYPE temp_line
					IF top_line = 1 AND topTreadLevel_m = TOPTREAD_ATFLOOR THEN
						POLY2_b 5, 1+FullFill, gs_fill_pen, temp_BackPen,
							0, (rnu-1)*td+temp_TopTread, 1,
							flw, (rnu-1)*td+temp_TopTread, 1,
							flw, (rnu-1)*td-tempLine141920, TopLineMask141920_1,
							0, (rnu-1)*td-tempLine141920, 1,
							0, (rnu-1)*td+temp_TopTread, -1

						HOTLINE2 0, (rnu-1)*td,flw, (rnu-1)*td
					ENDIF

					BreakUNID=2050

					!!! BREAK LINE
					HOTSPOT2 flw/2,		(NumStline)*td-ns-covthicky, BreakUNID, brkLineY, 1+128 : BreakUNID=BreakUNID+1
					HOTSPOT2 flw/2,		(NumStline)*td-ns-covthicky-1, BreakUNID, brkLineY, 3 : BreakUNID=BreakUNID+1
					HOTSPOT2 flw/2,		(NumStline)*td-ns-covthicky+brkLineY, BreakUNID, brkLineY, 2 : BreakUNID=BreakUNID+1

					HOTSPOT2 0, (NumStline-1)*td-ns-covthicky+brkLineY, BreakUNID: BreakUNID=BreakUNID+1
					HOTSPOT2 flw, (NumStline+1)*td-ns-covthicky+brkLineY, BreakUNID: BreakUNID=BreakUNID+1
				ENDIF


			ELSE
				if breakline_style_m = BREAKLINE_ZIGZAG_CHI then
					angle_breakline=ATN(2*td/flw)
					ZigZag1Y=(2/5*flw)*tan(angle_breakline)
					ZigZag2Y=(2/5*flw)*tan(angle_breakline)

					IF gs_2DContourBelow=1 THEN

						PEN gs_cont_pen
						SET LINE_TYPE solid_line

						IF bottom_line = 1 and firstTreadLevel_m = FIRSTTREAD_ATFLOOR THEN
							POLY2_b 5, 1+2+64, gs_fill_pen, gs_back_pen,
								0, 0-ns-covthicky, 0,
								flw, 0-ns-covthicky, 1,
								flw, 0-ns-covthicky-temp_FirstTread, 1,
								0, 0-ns-covthicky-temp_FirstTread, 1,
								0, 0-ns-covthicky, -1

							HOTLINE2 0, 0-ns-covthicky,flw, 0-ns-covthicky
						ENDIF

						POLY2_b 9, 1+2+64, gs_fill_pen, gs_back_pen,
							0, 0-ns-covthicky, 1,
							flw, 0-ns-covthicky, 1,
							flw, (NumStline+1)*td-ns-covthicky, 1,
							6/10*flw,(NumStline+1)*td-ns-covthicky-ZigZag1Y, 1,
							6/10*flw,(NumStline-1)*td-ns-covthicky+ZigZag1Y, 1,
							4/10*flw,(NumStline+1)*td-ns-covthicky-ZigZag1Y+brkLineY, 1,
							4/10*flw,(NumStline-1)*td-ns-covthicky+ZigZag1Y, 1,
							0, (NumStline-1)*td-ns-covthicky, 1,
							0, 0-ns-covthicky, -1

						BreakUNID=2100

						HOTSPOT2 0, (NumStline-1)*td-ns-covthicky, BreakUNID: BreakUNID=BreakUNID+1
						HOTSPOT2 flw, (NumStline+1)*td-ns-covthicky, BreakUNID: BreakUNID=BreakUNID+1

					ENDIF



					IF gs_2DContourAbove=1 THEN		!!IF No Contour above Break Line

						PEN temp_pen
						FILL temp_FillTypeAbove
						SET LINE_TYPE temp_line

						POLY2_b 9, 1+FullFill, gs_fill_pen, temp_BackPen,
							0, (NumStline-1)*td-ns-covthicky+brkLineY, 1,
							4/10*flw, (NumStline-1)*td -ns-covthicky + brkLineY +ZigZag2Y, 1,
							4/10*flw, (NumStline+1)*td -ns-covthicky + brkLineY-ZigZag1Y, 1,
							6/10*flw, (NumStline-1)*td -ns-covthicky+ZigZag1Y, 1,
							6/10*flw, (NumStline-1)*td -ns-covthicky+ brkLineY+ZigZag2Y+2*(td-ZigZag1Y), 1,
							flw, (NumStline+1)*td-ns-covthicky+brkLineY, 1,
							flw, (rnu-1)*td, TopLineMask141920_0,
							0, (rnu-1)*td, 1,
							0, (NumStline-1)*td-ns-covthicky+brkLineY, -1

						IF top_line = 1 AND topTreadLevel_m = TOPTREAD_ATFLOOR THEN
							POLY2_b 5, 1+FullFill, gs_fill_pen, temp_BackPen,
								0, (rnu-1)*td+temp_TopTread, 1,
								flw, (rnu-1)*td+temp_TopTread, 1,
								flw, (rnu-1)*td-tempLine19, 0,
								0, (rnu-1)*td-tempLine19, 1,
								0, (rnu-1)*td+temp_TopTread, -1

							HOTLINE2 0, (rnu-1)*td,flw, (rnu-1)*td
						ENDIF

						BreakUNID=2150
						!!! BREAK LINE
						HOTSPOT2 flw/2,		(NumStline)*td-ns-covthicky, BreakUNID, brkLineY, 1+128 : BreakUNID=BreakUNID+1
						HOTSPOT2 flw/2,		(NumStline)*td-ns-covthicky-1, BreakUNID, brkLineY, 3 : BreakUNID=BreakUNID+1
						HOTSPOT2 flw/2,		(NumStline)*td-ns-covthicky+brkLineY, BreakUNID, brkLineY, 2 : BreakUNID=BreakUNID+1

						HOTSPOT2 0, (NumStline-1)*td-ns-covthicky+brkLineY, BreakUNID: BreakUNID=BreakUNID+1
						HOTSPOT2 flw, (NumStline+1)*td-ns-covthicky+brkLineY, BreakUNID: BreakUNID=BreakUNID+1
					ENDIF
				else	!!! breakline_style=`Zigzag`
					angle_breakline=ATN(2*td/flw)
					ZigZag1Y=(2/5*flw)*tan(angle_breakline)
					ZigZag2Y=(7/20*flw)*tan(angle_breakline)

					IF gs_2DContourBelow=1 THEN

						PEN gs_cont_pen
						SET LINE_TYPE solid_line

						IF bottom_line = 1 and firstTreadLevel_m = FIRSTTREAD_ATFLOOR THEN
							POLY2_b 5, 1+2+64, gs_fill_pen, gs_back_pen,
								0, 0-ns-covthicky, 0,
								flw, 0-ns-covthicky, 1,
								flw, 0-ns-covthicky-temp_FirstTread, 1,
								0, 0-ns-covthicky-temp_FirstTread, 1,
								0, 0-ns-covthicky, -1

							HOTLINE2 0, 0-ns-covthicky,flw, 0-ns-covthicky
						ENDIF

						POLY2_b 9, 1+2+64, gs_fill_pen, gs_back_pen,
							0, 0-ns-covthicky, 1,
							flw, 0-ns-covthicky, 1,
							flw, (NumStline+1)*td-ns-covthicky, 1,
							6/10*flw,(NumStline+1)*td-ns-covthicky-ZigZag1Y, 1,
							6/10*flw,(NumStline-1)*td-ns-covthicky+ZigZag1Y, 1,
							4/10*flw,(NumStline+1)*td-ns-covthicky-ZigZag1Y, 1,
							4/10*flw,(NumStline-1)*td-ns-covthicky+ZigZag1Y, 1,
							0, (NumStline-1)*td-ns-covthicky, 1,
							0, 0-ns-covthicky, -1

						BreakUNID=2100

						HOTSPOT2 0, (NumStline-1)*td-ns-covthicky, BreakUNID: BreakUNID=BreakUNID+1
						HOTSPOT2 flw, (NumStline+1)*td-ns-covthicky, BreakUNID: BreakUNID=BreakUNID+1

					ENDIF



					IF gs_2DContourAbove=1 THEN		!!IF No Contour above Break Line

						PEN temp_pen
						FILL temp_FillTypeAbove
						SET LINE_TYPE temp_line

						POLY2_b 9, 1+FullFill, gs_fill_pen, temp_BackPen,
							0, (NumStline-1)*td-ns-covthicky+brkLineY, 1,
							7/20*flw, (NumStline-1)*td -ns-covthicky + brkLineY +ZigZag2Y, 1,
							7/20*flw, (NumStline-1)*td -ns-covthicky + brkLineY+ZigZag2Y+2*(td-ZigZag1Y), 1,
							11/20*flw, (NumStline-1)*td -ns-covthicky+ brkLineY+ZigZag2Y, 1,
							11/20*flw, (NumStline-1)*td -ns-covthicky+ brkLineY+ZigZag2Y+2*(td-ZigZag1Y), 1,
							flw, (NumStline+1)*td-ns-covthicky+brkLineY, 1,
							flw, (rnu-1)*td, TopLineMask141920_0,
							0, (rnu-1)*td, 1,
							0, (NumStline-1)*td-ns-covthicky+brkLineY, -1

						IF top_line = 1 AND topTreadLevel_m = TOPTREAD_ATFLOOR THEN
							POLY2_b 5, 1+FullFill, gs_fill_pen, temp_BackPen,
								0, (rnu-1)*td+temp_TopTread, 1,
								flw, (rnu-1)*td+temp_TopTread, 1,
								flw, (rnu-1)*td-tempLine19, 0,
								0, (rnu-1)*td-tempLine19, 1,
								0, (rnu-1)*td+temp_TopTread, -1

							HOTLINE2 0, (rnu-1)*td,flw, (rnu-1)*td
						ENDIF

						BreakUNID=2150
						!!! BREAK LINE
						HOTSPOT2 flw/2,		(NumStline)*td-ns-covthicky, BreakUNID, brkLineY, 1+128 : BreakUNID=BreakUNID+1
						HOTSPOT2 flw/2,		(NumStline)*td-ns-covthicky-1, BreakUNID, brkLineY, 3 : BreakUNID=BreakUNID+1
						HOTSPOT2 flw/2,		(NumStline)*td-ns-covthicky+brkLineY, BreakUNID, brkLineY, 2 : BreakUNID=BreakUNID+1

						HOTSPOT2 0, (NumStline-1)*td-ns-covthicky+brkLineY, BreakUNID: BreakUNID=BreakUNID+1
						HOTSPOT2 flw, (NumStline+1)*td-ns-covthicky+brkLineY, BreakUNID: BreakUNID=BreakUNID+1
					ENDIF
				endif
			ENDIF



	ENDIF

			!!! HOTLINE AT CONTOURS
			HOTLINE2 0,0-ns-covthicky-temp_FirstTread,flw,0-ns-covthicky-temp_FirstTread

			IF gs_2DContourAbove=1 THEN
				HOTLINE2 0,(rnu-1)*td+temp_TopTread,flw,(rnu-1)*td+temp_TopTread
			ENDIF

			IF brk=0 OR brk=1 AND gs_2DContourAbove=1 THEN
				HOTLINE2 0,0-ns-covthicky-temp_FirstTread,0,(rnu-1)*td+temp_TopTread
				HOTLINE2 flw,0-ns-covthicky-temp_FirstTread,flw,(rnu-1)*td+temp_TopTread
			ENDIF

			IF ABS(chStoryDist)< EPS THEN
				IF brk=1 AND gs_2DContourAbove=0 THEN
					HOTLINE2 0,0-ns-covthicky-temp_FirstTread,0,(NumStline-1)*td-ns-covthicky
					HOTLINE2 flw,0-ns-covthicky-temp_FirstTread,flw,(NumStline+1)*td-ns-covthicky
				ENDIF
			ENDIF

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!! *** TREADS *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

	IF brk=0 THEN		!!! IF NO BREAK LINE

		IF chStoryDist > -EPS  then

			IF gs_2DTread=1 THEN
				ADD2 0,td-ns-covthicky
					FOR numTread=1 to rnu-2
						PEN gs_cont_pen
						SET LINE_TYPE solid_line
						LINE2 0,0,flw,0
						ADD2 0,td
					NEXT numTread
					DEL rnu-2
				DEL 1

				IF ns OR covthicky > 0 THEN	!!! IF TREAD NOSING > 0
				ADD2 0,0
					FOR numTread=1 to rnu-1
						PEN gs_DashLinePen
						SET LINE_TYPE dash_line
						LINE2 0,0,flw,0
						ADD2 0,td
					NEXT numTread
					DEL rnu-1
				DEL 1

				IF top_line = 1 AND topTreadLevel_m = TOPTREAD_ATFLOOR THEN
				LINE2 0, (rnu-1)*td-ns-covthicky+tempLine1420,flw, (rnu-1)*td-ns-covthicky+tempLine1420
				HOTLINE2 0, (rnu-1)*td-ns-covthicky+tempLine1420,flw, (rnu-1)*td-ns-covthicky+tempLine1420
				ENDIF

				ENDIF
			ENDIF

		ENDIF

	ELSE	!!! with Break Line

		!!! TREAD UNDER BREAK LINE

		IF gs_2DTread=1 THEN
			ADD2 0,td-ns-covthicky

				FOR numTread=1 to NumStline
					StartSolid=0
					IF breakline_style_m = BREAKLINE_STRAIGHT THEN
						IF numTread=NumStline THEN StartSolid=flw/2
						ELSE
						IF numTread=NumStline THEN StartSolid=flw*6/10
					ENDIF

					PEN gs_cont_pen

					SET LINE_TYPE solid_line
					!!! NOSING LINE

					LINE2 StartSolid,0,flw,0
					HOTLINE2 StartSolid,0,flw,0


					IF ns OR covthicky > 0 THEN	!!! IF TREAD NOSING > 0

						StartDashed=0
						IF breakline_style_m = BREAKLINE_STRAIGHT THEN

							IF numTread=NumStline THEN StartDashed=flw/2+((ns+covthicky)*flw)/(2*td)
							IF numTread=NumStline-1 THEN StartDashed=((ns+covthicky)*flw)/(2*td)
						ELSE

							IF distZigZag >= 4/10*flw THEN
							distZigZag = 4/10*flw
							ELSE
							distZigZag=(flw*(td-ns-covthicky))/(2*td)
							ENDIF

							IF numTread=NumStline THEN StartDashed=flw-distZigZag
							IF numTread=NumStline-1 THEN StartDashed=(flw*(ns+covthicky))/(2*td)
						ENDIF

						ADD2 0,ns+covthicky
							PEN temp_RiserLinePen
							SET LINE_TYPE temp_RiserLine
							!!! DASHED LINE
							LINE2 StartDashed,0,flw,0
							HOTLINE2 StartDashed,0,flw,0
						DEL 1
						ENDIF

					ADD2 0,td
				NEXT numTread
				DEL NumStline
			DEL 1

			!!! FIRST RISER
			IF ns OR covthicky> 0 THEN	!!! IF TREAD NOSING > 0
					LINE2 0, 0,flw, 0
			ENDIF
		ENDIF

		!!! TREADS ABOVE BREAK LINE

		IF gs_2DTreadAbove=1 THEN
			ADD2 0,(NumStline)*td-ns-covthicky
				FOR numTread=1 to rnu-NumStline-1

					EndSolid=flw
					IF breakline_style_m = BREAKLINE_STRAIGHT THEN
						IF numTread=1 THEN EndSolid=flw/2-brkLineX
						IF numTread=2 THEN EndSolid=flw-brkLineX
					ELSE
						if breakline_style_m = BREAKLINE_ZIGZAG_CHI then
							ZigZagCorrection = 1/10
						else
							ZigZagCorrection = 3/20
						endif
						IF brkLineX <= ZigZagCorrection*flw THEN
							IF numTread=1 THEN EndSolid=flw/2-ZigZagCorrection*flw
							else
							IF numTread=1 THEN EndSolid=flw/2-brkLineX
						endif


						IF (flw/2-brkLineX) <= (4/20-ZigZagCorrection)*flw THEN
							IF numTread=2 THEN EndSolid=flw/2-ZigZagCorrection*flw
							else
							IF numTread=2 THEN EndSolid=flw-brkLineX
						endif

					ENDIF

					PEN gs_DashLinePen
					SET LINE_TYPE temp_line
					!!! SOLID LINE
					LINE2 0,0,EndSolid,0
					IF _iSymbolType = 19 THEN HOTLINE2 0,0,EndSolid,0

					!!! DASHED LINE/RISER
					IF gs_2DRiserAbove=1 THEN
						IF ns OR covthicky> 0 THEN	!!! IF TREAD NOSING > 0
							EndDashed=flw
							IF breakline_style_m = BREAKLINE_STRAIGHT THEN
								IF numTread=1 THEN EndDashed=flw/2+((ns+covthicky)*flw)/(2*td)-brkLineX
								IF numTread=2 THEN EndDashed=flw-brkLineX+((ns+covthicky)*flw)/(2*td)
							ELSE

								IF distZigZag <= (0.5-ZigZagCorrection)*flw THEN
								distZigZag = (0.5-ZigZagCorrection)*flw
								ELSE
								distZigZag=(flw*(td/2+ns+covthicky))/(2*td)
								ENDIF

								IF (brkLineX-((ns+covthicky)*flw)/(2*td)) <= ZigZagCorrection*flw  AND flw/2+((ns+covthicky)*flw)/(2*td)-brkLineX< flw/2+(4/20-ZigZagCorrection)*flw THEN
									IF numTread=1 THEN EndDashed=flw/2-ZigZagCorrection*flw
									else
									IF numTread=1 THEN EndDashed=flw/2-brkLineX+((ns+covthicky)*flw)/(2*td)
								endif

								IF (flw-brkLineX+((ns+covthicky)*flw)/(2*td)) >= flw THEN
									IF numTread=2 THEN EndDashed=flw
									else
									IF numTread=2 THEN EndDashed=flw-brkLineX+((ns+covthicky)*flw)/(2*td)
								endif

							ENDIF

								ADD2 0,ns+covthicky
									PEN temp_RiserLinePen
									SET LINE_TYPE temp_RiserLine
									!!! DASHED LINE
									LINE2 0,0,EndDashed,0
								DEL 1
						ENDIF
					ENDIF

					ADD2 0,td
				NEXT numTread
				DEL rnu-NumStline-1
			DEL 1

			!!! *** TOP RISER
			IF ns OR covthicky> 0 THEN	!!! IF TREAD NOSING > 0
				IF top_line = 1 AND topTreadLevel_m = TOPTREAD_ATFLOOR AND gs_2DRiserAbove = 1 THEN
				LINE2 0, (rnu-1)*td-ns-covthicky+tempLine1420,flw, (rnu-1)*td-ns-covthicky+tempLine1420
				ENDIF
			ENDIF

		ENDIF

	ENDIF

		!!! TREADS AND RISER HOTLINE
		IF chStoryDist > -EPS  then
		IF brk=0 AND gs_2DTread=1 OR brk=1 AND gs_2DTread=1 AND gs_2DTreadAbove=1 AND gs_2DRiserAbove=1  THEN


				ADD2 0,td-ns-covthicky
					FOR numTread=1 to rnu-2

						HOTLINE2 0,0,flw,0
						ADD2 0,td
					NEXT numTread
					DEL rnu-2
				DEL 1


				IF ns OR covthicky > 0 THEN	!!! IF TREAD NOSING > 0
				ADD2 0,0
					FOR numTread=1 to rnu-1
						HOTLINE2 0,0,flw,0
						ADD2 0,td
					NEXT numTread
					DEL rnu-1
				DEL 1
				ENDIF

		ENDIF
		ENDIF


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!*** WALKING LINE / ARROWHEAD / START END SYMBOL*** !!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

IF walkl THEN

DRAWINDEX 40
!!! Arrow Size !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

		IF td> 0.26 then
		ArrowDist=gs_ArrowHalfWidth
		ELSE
		ArrowDist=gs_ArrowHalfWidth
		ENDIF

		!!! ********** Arrowhead Contour Conditions
		IF arrow_style_m = ARROW_STYLE_1 OR arrow_style_m = ARROW_STYLE_2 OR arrow_style_m = ARROW_STYLE_3 THEN
			temp_ArrowMask=0
		else
			temp_ArrowMask=1
		endif

		!!! ********** Arrowhead Contour Points Conditions
		IF arrow_style_m = ARROW_STYLE_1 OR arrow_style_m = ARROW_STYLE_4 OR arrow_style_m = ARROW_STYLE_7 THEN
			temp_1XContour=0
			temp_2XContour=flw
			temp_1YContourTop=(rnu-2)*td-ns-covthicky
			temp_2YContourTop=(rnu-2)*td-ns-covthicky
			temp_1YContourBreak=(NumStline-1)*td-ns-covthicky
			temp_2YContourBreak=(NumStline-1)*td-ns-covthicky
		endif

		IF arrow_style_m = ARROW_STYLE_2 OR arrow_style_m = ARROW_STYLE_5 OR arrow_style_m = ARROW_STYLE_8 THEN
			temp_1XContour=flw/4
			temp_2XContour=flw*3/4
			temp_1YContourTop=(rnu-2)*td-ns-covthicky
			temp_2YContourTop=(rnu-2)*td-ns-covthicky
			temp_1YContourBreak=(NumStline-1)*td-ns-covthicky
			temp_2YContourBreak=(NumStline-1)*td-ns-covthicky
		endif

		IF arrow_style_m = ARROW_STYLE_3 OR arrow_style_m = ARROW_STYLE_6 OR arrow_style_m = ARROW_STYLE_9 THEN
			temp_1XContour=flw/2-ArrowDist
			temp_2XContour=flw/2+ArrowDist
			temp_1YContourTop=(rnu-1)*td-gs_ArrowHeight
			temp_2YContourTop=(rnu-1)*td-gs_ArrowHeight
			temp_1YContourBreak=(NumStline)*td-ns-covthicky-gs_ArrowHeight
			temp_2YContourBreak=(NumStline)*td-ns-covthicky-gs_ArrowHeight
		endif

		!!! ********** Arrowhead Fill Contour Points Conditions
		IF arrow_style_m = ARROW_STYLE_4 OR arrow_style_m = ARROW_STYLE_5 OR arrow_style_m = ARROW_STYLE_6 THEN
			temp_1XFill=temp_1XContour
		endif

		IF arrow_style_m = ARROW_STYLE_7 OR arrow_style_m = ARROW_STYLE_8 OR arrow_style_m = ARROW_STYLE_9 THEN
			temp_1XFill=flw/2
		endif

		!!! ********** Walking Line Length Conditions
		temp_wLineLength = 0
		temp_wLineLengthAbove = 0
		IF arrow_style_m = ARROW_STYLE_4 OR arrow_style_m = ARROW_STYLE_5 THEN temp_wLineLength = td+ns+covthicky
		IF arrow_style_m = ARROW_STYLE_4 OR arrow_style_m = ARROW_STYLE_5 THEN temp_wLineLengthAbove = td+ns+covthicky
		IF arrow_style_m = ARROW_STYLE_6 THEN temp_wLineLength = gs_ArrowHeight
		IF arrow_style_m = ARROW_STYLE_6 THEN temp_wLineLengthAbove = gs_ArrowHeight


		PEN gs_wLinePen
		Fill gs_ArrowFill

		!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
		IF brk THEN				!!! with Break Line !!!
		!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

				!!! ********** Geometry of ArrowHead Contour at Break Line

				IF gs_2DContourBelow=1 THEN

					SET LINE_TYPE gs_wLineType1
					POLY2_b 4, 1, gs_ArrowFillPen, gs_fill_pen,
						temp_1XContour,temp_1YContourBreak, temp_ArrowMask,
						temp_2XContour,temp_2YContourBreak, 1,
						flw/2,(NumStline)*td-ns-covthicky, 1,
						temp_1XContour,temp_1YContourBreak, -1

					IF gs_ArrowFillPen<>0 THEN
						IF arrow_style_m <> ARROW_STYLE_1 AND arrow_style_m <> ARROW_STYLE_2 AND arrow_style_m <> ARROW_STYLE_3 THEN
							!!! Geometry of ArrowHead Fill
							POLY2_b 4, 2, gs_ArrowFillPen, gs_fill_pen,
								temp_1XFill,temp_1YContourBreak, temp_ArrowMask,
								temp_2XContour,temp_2YContourBreak, 1,
								flw/2,(NumStline)*td-ns-covthicky, 1,
								temp_1XFill,temp_1YContourBreak, -1
						ENDIF
					ENDIF
				ENDIF


				IF gs_2DContourAbove=1 THEN		!!IF No Contour above Break Line
				ADD2 0,-tempLine19
					SET LINE_TYPE gs_wLineTypeAbove
					!!! ********* Geometry of ArrowHead Contour
					POLY2_b 4, 1, gs_ArrowFillPen, gs_fill_pen,
						temp_1XContour,temp_1YContourTop, temp_ArrowMask,
						temp_2XContour,temp_2YContourTop, 1,
						flw/2,(rnu-1)*td, 1,
						temp_1XContour,temp_1YContourTop, -1

						IF gs_ArrowFillPenAbove<>0 THEN
							IF arrow_style_m <> ARROW_STYLE_1 AND arrow_style_m <> ARROW_STYLE_2 AND arrow_style_m <> ARROW_STYLE_3 THEN
								!!! Geometry of ArrowHead Fill
								POLY2_b 4, 2, gs_ArrowFillPenAbove, gs_fill_pen,
									temp_1XFill,temp_1YContourTop, temp_ArrowMask,
									temp_2XContour,temp_2YContourTop, 1,
									flw/2,(rnu-1)*td, 1,
									temp_1XFill,temp_1YContourTop, -1
							ENDIF
						ENDIF
				DEL 1
				ENDIF


				!!! ********** Walking Line Length under Break Line
				IF gs_2DContourBelow=1 THEN
					SET LINE_TYPE gs_wLineType1
					IF arrow_style_m = ARROW_STYLE_6 THEN
						line2 flw/2,-ns-covthicky, flw/2, (NumStline)*td-ns-covthicky-temp_wLineLength
					ELSE
						line2 flw/2,-ns-covthicky, flw/2, (NumStline)*td-ns-covthicky-temp_wLineLength
					ENDIF
				ENDIF

				!!! ********** Walkin Line Length Above Break Line
				IF gs_2DContourAbove=1 THEN		!!IF No Contour above Break Line
					SET LINE_TYPE gs_wLineTypeAbove
					IF breakline_style_m = BREAKLINE_STRAIGHT THEN
					line2 flw/2,(NumStline)*td-ns-covthicky+brkLineY, flw/2, (rnu-1)*td-temp_wLineLengthAbove-tempLine19
					ELSE
					line2 flw/2,(NumStline)*td-ns-covthicky+brkLineY-(td-ZigZag1Y), flw/2, (rnu-1)*td-temp_wLineLengthAbove-tempLine19
					ENDIF
				ENDIF


		!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
		ELSE			!!! NO BREAK LINE !!!
		!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

				SET LINE_TYPE temp_wLineType

				!!! ********** Walking Line Length
				line2 flw/2,-ns-covthicky, flw/2, (rnu-1)*td-temp_wLineLength


				!!! ********** Geometry of ArrowHead Contour
				POLY2_b 4, 1, gs_ArrowFillPen, gs_fill_pen,
					temp_1XContour,temp_1YContourTop, temp_ArrowMask,
					temp_2XContour,temp_2YContourTop, 1,
					flw/2,(rnu-1)*td, 1,
					temp_1XContour,temp_1YContourTop, -1

					IF gs_ArrowFillPen<>0 THEN
						IF arrow_style_m <> ARROW_STYLE_1 AND arrow_style_m <> ARROW_STYLE_2 AND arrow_style_m <> ARROW_STYLE_3 THEN
							!!! Geometry of ArrowHead Fill
							POLY2_b 4, 2, gs_ArrowFillPen, gs_fill_pen,
								temp_1XFill,temp_1YContourTop, temp_ArrowMask,
								temp_2XContour,temp_2YContourTop, 1,
								flw/2,(rnu-1)*td, 1,
								temp_1XFill,temp_1YContourTop, -1
						ENDIF
					ENDIF

		ENDIF


				!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
				!!! ********** Start End Symbol ********** !!!
				!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

				DRAWINDEX 45
				IF brk THEN
				SET LINE_TYPE gs_wLineType1
				ELSE
				SET LINE_TYPE temp_wLineType
				ENDIF

				Fill gs_StartEndFill

					IF gs_StartEndFillPen<>0 THEN temp_FillStatus=2
					IF gs_StartEndFillPen=0 THEN temp_FillStatus=0

					IF gs_2DContourBelow=1 THEN

						IF gs_StartEndStyle_m = STARTSYMB_STYLE1 THEN

							POLY2_B 2, 1+temp_FillStatus, gs_StartEndFillPen, gs_fill_pen,
							flw/2,-ns-covthicky,901,
							gs_CircleRadius,360,4001

						ENDIF


						IF gs_StartEndStyle_m = STARTSYMB_STYLE2 THEN

							FOR kk=1 TO 2
								POLY2_B 6, 1+temp_FillStatus, gs_StartEndFillPen, gs_fill_pen,
									flw/2,-ns-covthicky,1,
									flw/2+gs_CircleRadius,-ns-covthicky,1,
									flw/2,-ns-covthicky,901,
									0,90,4001,
									flw/2,-ns-covthicky+gs_CircleRadius,0,
									flw/2,-ns-covthicky,-1

								POLY2_B 6, 1, gs_StartEndFillPen, gs_fill_pen,
									flw/2,-ns-covthicky,1,
									flw/2,-ns-covthicky+gs_CircleRadius,1,
									flw/2,-ns-covthicky,901,
									0,90,4001,
									flw/2-gs_CircleRadius,-ns-covthicky,0,
									flw/2,-ns-covthicky,-1
							ROT2 180
							ADD2 -flw,2*(ns+covthicky)
							NEXT kk
							DEL 4

						ENDIF

						IF gs_StartEndStyle_m = STARTSYMB_STYLE3 THEN
							LINE2 flw/2+gs_StartWidth,-ns-covthicky-gs_StartHeight,flw/2+gs_StartWidth,-ns-covthicky+gs_StartHeight
							LINE2 flw/2-gs_StartWidth,-ns-covthicky-gs_StartHeight,flw/2-gs_StartWidth,-ns-covthicky+gs_StartHeight
						ENDIF


						!!! ********* Hotspots of StartEnd Symbol
						IF gs_StartEndStyle_m = STARTSYMB_STYLE1 OR gs_StartEndStyle_m = STARTSYMB_STYLE2 THEN

							ADD2 flw/2,-ns-covthicky

								StartSymbUNID=3000

								FOR kk=1 to 4
									HOTSPOT2 0, 0, StartSymbUNID, gs_CircleRadius, 1+128		:StartSymbUNID=StartSymbUNID+1
									HOTSPOT2 -1, 0, StartSymbUNID, gs_CircleRadius, 3+128	:StartSymbUNID=StartSymbUNID+1
									HOTSPOT2 gs_CircleRadius, 0, StartSymbUNID, gs_CircleRadius,2	:StartSymbUNID=StartSymbUNID+1

									ROT2 90
								NEXT KK
								DEL 4
							DEL 1
						ENDIF

						IF gs_StartEndStyle_m = STARTSYMB_STYLE3 THEN

							ADD2 flw/2,0

								StartSymbUNID=3100

								FOR kk=1 to 2
									ADD2 0, -ns-covthicky
										!!! Symbol Width/2
										HOTSPOT2 0, -gs_StartHeight, StartSymbUNID, gs_StartWidth, 1+128		:StartSymbUNID=StartSymbUNID+1
										HOTSPOT2 -1, -gs_StartHeight, StartSymbUNID, gs_StartWidth, 3	:StartSymbUNID=StartSymbUNID+1
										HOTSPOT2 gs_StartWidth, -gs_StartHeight, StartSymbUNID, gs_StartWidth,2	:StartSymbUNID=StartSymbUNID+1

										HOTSPOT2 0, gs_StartHeight, StartSymbUNID, gs_StartWidth, 1+128		:StartSymbUNID=StartSymbUNID+1
										HOTSPOT2 -1, gs_StartHeight, StartSymbUNID, gs_StartWidth, 3	:StartSymbUNID=StartSymbUNID+1
										HOTSPOT2 gs_StartWidth, gs_StartHeight, StartSymbUNID, gs_StartWidth,2	:StartSymbUNID=StartSymbUNID+1
									DEL 1

									ADD2 0, -ns-covthicky
										!!! Symbol Height
										HOTSPOT2 gs_StartWidth, 0, StartSymbUNID, gs_StartHeight, 1+128		:StartSymbUNID=StartSymbUNID+1
										HOTSPOT2 gs_StartWidth, -1, StartSymbUNID, gs_StartHeight, 3	:StartSymbUNID=StartSymbUNID+1
										HOTSPOT2 gs_StartWidth, gs_StartHeight, StartSymbUNID, gs_StartHeight,2	:StartSymbUNID=StartSymbUNID+1

										HOTSPOT2 gs_StartWidth, 0, StartSymbUNID, gs_StartHeight, 1+128		:StartSymbUNID=StartSymbUNID+1
										HOTSPOT2 gs_StartWidth, 1, StartSymbUNID, gs_StartHeight, 3	:StartSymbUNID=StartSymbUNID+1
										HOTSPOT2 gs_StartWidth, -gs_StartHeight, StartSymbUNID, gs_StartHeight,2	:StartSymbUNID=StartSymbUNID+1
									DEL 1

								MUL2 -1,1
								NEXT kk
								DEL 2
							DEL 1
						ENDIF
					ENDIF

				DRAWINDEX 40
				Fill gs_ArrowFill



		!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
		!!! ********** ARROWHEAD HOTSPOTS ********** !!!
		ArrowUNID=4000
		IF gs_2DContourBelow=1 THEN HOTSPOT2 flw/2,-ns-covthicky,ArrowUNID: ArrowUNID=ArrowUNID+1

		IF brk=0 OR brk=1 AND gs_2DContourAbove=1 THEN

			ArrowUNID=4100
			HOTSPOT2 flw/2,td*(rnu-1)-tempLine19,ArrowUNID: ArrowUNID=ArrowUNID+1

			!!! ********** Hotspot editing of Height and Width of Arrowhead
			IF arrow_style_m = ARROW_STYLE_3 OR arrow_style_m = ARROW_STYLE_6 OR arrow_style_m = ARROW_STYLE_9 THEN

				ArrowUNID=4200

				ADD2 flw/2+ArrowDist,(rnu-1)*td-tempLine19
				ROT2 180
					HOTSPOT2 0,0,	ArrowUNID, gs_ArrowHeight, 1+128 : ArrowUNID=ArrowUNID+1
					HOTSPOT2 0,gs_ArrowHeight, ArrowUNID, gs_ArrowHeight, 2 : ArrowUNID=ArrowUNID+1
					HOTSPOT2 0,-1,	ArrowUNID, gs_ArrowHeight, 3: ArrowUNID=ArrowUNID+1
				DEL 2

				ADD2 flw/2-ArrowDist,(rnu-1)*td-tempLine19
				ROT2 180
					HOTSPOT2 0,0,	ArrowUNID, gs_ArrowHeight, 1+128 : ArrowUNID=ArrowUNID+1
					HOTSPOT2 0,gs_ArrowHeight, ArrowUNID, gs_ArrowHeight, 2 : ArrowUNID=ArrowUNID+1
					HOTSPOT2 0,-1,	ArrowUNID, gs_ArrowHeight, 3: ArrowUNID=ArrowUNID+1
				DEL 2

				ADD2 flw/2,(rnu-1)*td-gs_ArrowHeight-tempLine19
					HOTSPOT2 0,0,	ArrowUNID, gs_ArrowHalfWidth, 1+128 : ArrowUNID=ArrowUNID+1
					HOTSPOT2 gs_ArrowHalfWidth,0, ArrowUNID, gs_ArrowHalfWidth, 2 : ArrowUNID=ArrowUNID+1
					HOTSPOT2 -1,0,	ArrowUNID, gs_ArrowHalfWidth, 3: ArrowUNID=ArrowUNID+1
				DEL 1

				ADD2 flw/2,(rnu-1)*td-gs_ArrowHeight-tempLine19
					HOTSPOT2 0,0,	ArrowUNID, gs_ArrowHalfWidth, 1+128 : ArrowUNID=ArrowUNID+1
					HOTSPOT2 -gs_ArrowHalfWidth,0, ArrowUNID, gs_ArrowHalfWidth, 2 : ArrowUNID=ArrowUNID+1
					HOTSPOT2 01,0,	ArrowUNID, gs_ArrowHalfWidth, 3: ArrowUNID=ArrowUNID+1
				DEL 1
			ENDIF
		ENDIF


		IF brk=1 AND gs_2DContourBelow=1 THEN

			ArrowUNID=4300
			HOTSPOT2 flw/2, (NumStline)*td-ns-covthicky,ArrowUNID: ArrowUNID=ArrowUNID+1

			!!! ********** Hotspot editing of Height and Width of Arrowhead
			IF arrow_style_m = ARROW_STYLE_3 OR arrow_style_m = ARROW_STYLE_6 OR arrow_style_m = ARROW_STYLE_9 THEN

				ArrowUNID=4400
				ADD2 flw/2+ArrowDist,(NumStline)*td-ns-covthicky
				ROT2 180
					HOTSPOT2 0,0,	ArrowUNID, gs_ArrowHeight, 1+128 : ArrowUNID=ArrowUNID+1
					HOTSPOT2 0,gs_ArrowHeight, ArrowUNID, gs_ArrowHeight, 2 : ArrowUNID=ArrowUNID+1
					HOTSPOT2 0,-1,	ArrowUNID, gs_ArrowHeight, 3: ArrowUNID=ArrowUNID+1
				DEL 2

				ADD2 flw/2-ArrowDist,(NumStline)*td-ns-covthicky
				ROT2 180
					HOTSPOT2 0,0,	ArrowUNID, gs_ArrowHeight, 1+128 : ArrowUNID=ArrowUNID+1
					HOTSPOT2 0,gs_ArrowHeight, ArrowUNID, gs_ArrowHeight, 2 : ArrowUNID=ArrowUNID+1
					HOTSPOT2 0,-1,	ArrowUNID, gs_ArrowHeight, 3: ArrowUNID=ArrowUNID+1
				DEL 2

				ADD2 flw/2,(NumStline)*td-ns-covthicky-gs_ArrowHeight
					HOTSPOT2 0,0,	ArrowUNID, gs_ArrowHalfWidth, 1+128 : ArrowUNID=ArrowUNID+1
					HOTSPOT2 gs_ArrowHalfWidth,0, ArrowUNID, gs_ArrowHalfWidth, 2 : ArrowUNID=ArrowUNID+1
					HOTSPOT2 -1,0,	ArrowUNID, gs_ArrowHalfWidth, 3: ArrowUNID=ArrowUNID+1
				DEL 1

				ADD2 flw/2,(NumStline)*td-ns-covthicky-gs_ArrowHeight
					HOTSPOT2 0,0,	ArrowUNID, gs_ArrowHalfWidth, 1+128 : ArrowUNID=ArrowUNID+1
					HOTSPOT2 -gs_ArrowHalfWidth,0, ArrowUNID, gs_ArrowHalfWidth, 2 : ArrowUNID=ArrowUNID+1
					HOTSPOT2 01,0,	ArrowUNID, gs_ArrowHalfWidth, 3: ArrowUNID=ArrowUNID+1
				DEL 1
			ENDIF
		ENDIF

	PEN gs_cont_pen
	FILL gs_fill_type
	DRAWINDEX 10
ENDIF


!===============================================================================
! --- Text / Up-Down Text / Numbering ---
!===============================================================================

! --- Oriented View ------------------------------ [

angleViewRot = 0
if bShowRiseAndRunText | walkingDirUPDN_m <> WALKDIRSTR_NONE | bShowNumbering then
	rrr = REQUEST ("View_Rotangle", "", angleViewRot)
endif
totalRotate = (SYMB_ROTANGLE + angleViewRot) MOD 360

! --- Oriented View ------------------------------ ]

! --- Define Font Style --------------------------------------------------------

define style "UPDN" fontType, UPDNfontsize, 5, 0		  	!!- UP/DN

define style "stepnum" fontType, gs_NumTextSize, 1, 0		!! - Numbering

! --- Rise and Run Text -------------------------------------------------------
DRAWINDEX 50

if bShowRiseAndRunText then
	call "Stair_RiseRun_Text" PARAMETERS ALL	totalRotate				= totalRotate,
												iRotateType 			= 1,
												iRiseRunTextPosition	= 1,
												flightWidth				= flw,
												nRisers					= rnu,
												treadHeight				= th,
												treadDepth				= td,
												RiseRunUNID				= 5000
endif


! --- Up and Down Text -------------------------------------------------------
iReadable = 0
if walkingDirUPDN_m <> WALKDIRSTR_NONE and walkl then
	set STYLE "UPDN"
	pen UPDNfontpen

	nTransUPDN = 0
	nTransHotspot = 0
	add2 flw/2+DirUPDN_X,DirUPDN_Y
	nTransUPDN = nTransUPDN + 1
	! Text Rotation - Readable / Parallel with Walking Line / Align with Symbol
	! ----------------------------------------------------------------------
	if typeTextRotation_UpDn_m = 2 then									! Readable
		if (totalRotate > (gs_readable_angle + eps) & totalRotate < (gs_readable_angle + 180 + eps)) then
			rot2 180
			nTransUPDN = nTransUPDN + 1
		endif
	else
		if typeTextRotation_UpDn_m = 1 then								! Parallel with Walking Line
			if not(SYMB_MIRRORED) then
				iReadable = (totalRotate > (gs_readable_angle - 90 + eps) & totalRotate < (gs_readable_angle + 180 - 90 + eps))- not(totalRotate > (gs_readable_angle - 90 + eps) & totalRotate < (gs_readable_angle + 180 - 90 + eps))
			else
				iReadable = (totalRotate < (gs_readable_angle - 90 + eps) | totalRotate > (gs_readable_angle + 180 - 90 + eps))- not(totalRotate < (gs_readable_angle - 90 + eps) | totalRotate > (gs_readable_angle + 180 - 90 + eps))
			endif
			rot2 -90 * iReadable
			nTransUPDN = nTransUPDN + 1
		endif
	endif
	! ----------------------------------------------------------------------
	rot2 AngUPDN
	nTransUPDN = nTransUPDN + 1

	text2 0,0, walkingDirUPDN
	del nTransUPDN

	width	= STW (walkingDirUPDN)/1000*GLOB_SCALE
	rb		= width/2


	UpDownUNID=6000
	hotspot2 flw/2,				DirUPDN_Y,	UpDownUNID, DirUPDN_X, 1+128	: UpDownUNID=UpDownUNID+1
	hotspot2 flw/2-1,			DirUPDN_Y,	UpDownUNID, DirUPDN_X, 3		: UpDownUNID=UpDownUNID+1
	hotspot2 flw/2+DirUPDN_X,	DirUPDN_Y,	UpDownUNID, DirUPDN_X, 2		: UpDownUNID=UpDownUNID+1

	hotspot2 flw/2+DirUPDN_X,	0,			UpDownUNID, DirUPDN_Y, 1+128	: UpDownUNID=UpDownUNID+1
	hotspot2 flw/2+DirUPDN_X,	-1,			UpDownUNID, DirUPDN_Y, 3		: UpDownUNID=UpDownUNID+1
	hotspot2 flw/2+DirUPDN_X,	DirUPDN_Y,	UpDownUNID, DirUPDN_Y, 2		: UpDownUNID=UpDownUNID+1

	ADD2 flw/2+DirUPDN_X,DirUPDN_Y
	nTransHotspot = nTransHotspot +1
	if typeTextRotation_UpDn_m = 1 then	! Parallel with Walking Line
		rot2 -90 * iReadable
		nTransHotspot = nTransHotspot +1
	endif
	hotspot2 0,					0,				UpDownUNID,	AngUPDN,6		: UpDownUNID=UpDownUNID+1
	hotspot2 rb,				0,				UpDownUNID,	AngUPDN,4+128	: UpDownUNID=UpDownUNID+1
	hotspot2 rb*cos(AngUPDN),	rb*sin(AngUPDN),UpDownUNID,	AngUPDN,5		: UpDownUNID=UpDownUNID+1
	del nTransHotspot
endif

! --- Numbering -------------------------------------------------------

if bShowNumbering & (gs_NumBelow | gs_NumAbove) then
	if gs_BreakHeight < ZZYZX then
		if DirNumText_x <= flw/2 then
			tempNumBelow = NumStline
			tempNumAbove = NumStline+1
		else
			tempNumBelow = NumStline+1
			tempNumAbove = NumStline+2
		endif
	else
		tempNumBelow = rnu
	endif

	if gs_NumBelow then
		if gs_NumAbove & gs_BreakHeight < ZZYZX then
			numBegin = 1
			numFinish = rnu
		else
			numBegin = 1
			numFinish = tempNumBelow
		endif
	else
		if gs_NumAbove & gs_BreakHeight < ZZYZX then
			numBegin = tempNumAbove
			numFinish = rnu
		endif
	endif

	set style "stepnum"
	pen gs_NumTextPen
	rrrr = REQUEST ("Height_of_style", "stepnum", strHeight)
	strHeight = strHeight / 1000 * GLOB_SCALE
	nTextPos = 0
	nTextTransformations = 0

	add2 DirNumText_X, -td/2 + DirNumText_Y
	nTextPos = nTextPos + 1
	if not(gs_NumBelow) & gs_NumAbove then
		add2 0, (numBegin-1) * td
		nTextPos = nTextPos + 1
	endif
	for iNumStep = numBegin to numFinish
		add2 0, td
		nTextPos = nTextPos + 1
		! Text Rotation - Readable / Align with Symbol
		! ----------------------------------------------------------------------
		if typeTextRotation_Num_m = 2 then								! Readable
			if (totalRotate > (gs_readable_angle + eps) & totalRotate < (gs_readable_angle + 180 + eps)) then
				rot2 180
				strWidth = STW(str("%.0", iNumStep + nStartNumbering - 1)) / 1000 * GLOB_SCALE
				add2 -strWidth, strHeight
				nTextTransformations = 2
			endif
		endif
		! ----------------------------------------------------------------------

		text2 0,0,iNumStep + nStartNumbering - 1
		if nTextTransformations > 0 then del nTextTransformations
	next iNumStep
	del nTextPos

	if gs_NumBelow then
		NumUNID=7000
		HOTSPOT2 0,				DirNumText_Y, NumUNID, DirNumText_X, 1+128	:NumUNID=NumUNID+1
		HOTSPOT2 -1,			DirNumText_Y, NumUNID, DirNumText_X, 3		:NumUNID=NumUNID+1
		HOTSPOT2 DirNumText_X,	DirNumText_Y, NumUNID, DirNumText_X, 2		:NumUNID=NumUNID+1

		HOTSPOT2 DirNumText_X,	0,				NumUNID, DirNumText_Y, 1+128:NumUNID=NumUNID+1
		HOTSPOT2 DirNumText_X,	-1,				NumUNID, DirNumText_Y, 3	:NumUNID=NumUNID+1
		HOTSPOT2 DirNumText_X,	DirNumText_Y,	NumUNID, DirNumText_Y, 2	:NumUNID=NumUNID+1
	endif
	if gs_NumAbove then
		NumUNID=7100
		HOTSPOT2 0,				DirNumText_Y+(rnu)*td, NumUNID, DirNumText_X, 1+128		:NumUNID=NumUNID+1
		HOTSPOT2 -1,			DirNumText_Y+(rnu)*td, NumUNID, DirNumText_X, 3	:NumUNID=NumUNID+1
		HOTSPOT2 DirNumText_X,	DirNumText_Y+(rnu)*td, NumUNID, DirNumText_X,2	:NumUNID=NumUNID+1

		HOTSPOT2 DirNumText_X,	0+(rnu)*td,				NumUNID, DirNumText_Y, 1+128		:NumUNID=NumUNID+1
		HOTSPOT2 DirNumText_X,	-1+(rnu)*td,			NumUNID, DirNumText_Y, 3	:NumUNID=NumUNID+1
		HOTSPOT2 DirNumText_X,	DirNumText_Y+(rnu)*td,	NumUNID, DirNumText_Y,2	:NumUNID=NumUNID+1
	endif
endif
DRAWINDEX 10

!===============================================================================
! --- Carriage Line ---
!===============================================================================

if bCarriageLineExist then
	bShowCarriagePart1	= 0
	bShowCarriagePart2	= 0
	angle_breakline		= ATN(2*td/flw)

	IF gs_structure_landing_m = STRUCTTYPE_MONOLITH THEN
		atfogo=sqr(td*td*rnu*rnu+th*th*rnu*rnu)
		coss=td*rnu/atfogo
		maxfloorh=sst/coss

		IF iLowerJunctionType = LOWERJUNCTION_FLOOR_OR_LANDING THEN
			IF maxfloorh < lst2 THEN
			  talp = 0
			ELSE
			  talp=td*(maxfloorh-lst2)/th
			ENDIF
		ENDIF
		IF iLowerJunctionType = LOWERJUNCTION_GROUND_FLOOR THEN
			sinn=th/(sqr(td*td+th*th))
			talp=sst/sinn
		endif
		IF topTreadLevel_m = TOPTREAD_BELOWFLOOR THEN
			corrval = td*rnu-td
		ELSE
			corrval=td*rnu
		ENDIF

		carrStart	= talp
		carrEnd		= corrval
		beamLength	= carrEnd - carrStart
	else
		alsoilleszt = ljl
		szel = td*rnu+alsoilleszt

		carrStart	= -alsoilleszt / 2
		carrEnd		= szel
		beamLength	= carrEnd + carrStart
	endif

	beamNum				= 1
	beamThk				= beamx
	beamOffsetRight		= 0
	beamOffsetLeft		= 0
	carriageBaseDist	= flw
	carrBreakLineWidth	= brkLineY

	if NOT(brk) then
		!!!!!******************************      1st RUN
		add2 0, carrStart
			bCarrAboveBreakLine	= 0
			bBreakCarriageLine	= 0
			gosub "carriage"
		del 1
	else
		if gs_2DContourBelow then
			!!!!!******************************      1st RUN
			add2 0, carrStart
				bCarrAboveBreakLine	= 0
				bBreakCarriageLine	= 1
				bShowCarriagePart1	= 1
				bShowCarriagePart2	= 0
				brLineAngle			= angle_breakline
				carrBreakLineDist	= (NumStline) * td - ns - covthicky - carrStart
				gosub "carriage"
			del 1
		endif

		if gs_2DContourAbove then
			!!!!!******************************      1st RUN
			add2 0, carrStart
				bCarrAboveBreakLine	= 1
				bBreakCarriageLine	= 1
				bShowCarriagePart1	= 0
				bShowCarriagePart2	= 1
				brLineAngle			= angle_breakline
				carrBreakLineDist	= (NumStline) * td - ns - covthicky - carrStart
				gosub "carriage"
			del 1
		endif
	endif
endif

!===============================================================================
! --- Railings ---
!===============================================================================

_bShowRailIn2D = 1
if _bShowRailIn2D then
	rx=0	! rail x0
	ry=0	! rail y0

	lx=0	! rail l0
	ly=0	! rail l0

	lrah=td*(rnu-1)

	kisatfog=sqr(td*td+th*th) ! egy lepcsofok atfogoja

	atfogR=sqr(rnu*rnu*(td*td+th*th))+(OverhangRBottom+OverhangRTop)/cos(angle)-kisatfog
	atfogL=sqr(rnu*rnu*(td*td+th*th))+(OverhangLBottom+OverhangLTop)/cos(angle)-kisatfog

	RRailLength=lrah+OverhangRBottom+OverhangRTop
	LRailLength=lrah+OverhangLBottom+OverhangLTop

	top_ry=((OverhangRBottom+OverhangRTop)*th)/td
	top_ly=((OverhangLBottom+OverhangLTop)*th)/td

	IF  firstTreadLevel_m = FIRSTTREAD_ATFLOOR THEN
		IF iLowerJunctionType = LOWERJUNCTION_FLOOR_OR_LANDING THEN
			rx=-OverhangRBottom
			ry=-(OverhangRBottom*th)/td

			lx=-OverhangLBottom
			ly=-(OverhangLBottom*th)/td

		ELSE ! Ground Floor
			rx=-OverhangRBottom
			ry=-(OverhangRBottom*th)/td

			lx=-OverhangLBottom
			ly=-(OverhangLBottom*th)/td
		ENDIF
	ENDIF

	IF  firstTreadLevel_m = FIRSTTREAD_ABOVEFLOOR THEN
		IF iLowerJunctionType = LOWERJUNCTION_FLOOR_OR_LANDING THEN
			rx=-OverhangRBottom
			ry=-(OverhangRBottom*th)/td

			lx=-OverhangLBottom
			ly=-(OverhangLBottom*th)/td
		ELSE ! Ground Floor
			rx=-OverhangRBottom
			ry=-(OverhangRBottom*th)/td

			lx=-OverhangLBottom
			ly=-(OverhangLBottom*th)/td
		ENDIF
	ENDIF


	bShowRailPart1	= 0
	bShowRailPart2	= 0
	breakLineW		= brkLineY
	breakLineDist	= 0
	angle_breakline = ATN(2*td/flw)

	drawindex 30
	fill gs_fill_type

	! --- Left Rail ----------------------------------------------------------------
	if rail_m = 3 | rail_m = 1 then		! Left, Both
		if bSameRails then
			leftRailType_m = rightRailType_m
		endif

		ROT2 90
		ADD2 0, roffl-handRailWidthL/2
		ADD2 lx+bComplexRailLeft*td/2, 0

		brLineDist	= (NumStline-1)*td-ns-covthicky-(td/2 - hrol) * bComplexRailLeft + handRailWidthL * TAN(angle_breakline) + OverhangLBottom - roffl * TAN(angle_breakline)

		PEN railPen
		SET LINE_TYPE railLineType

		if brk then
			if bShowRailOnFloorPlan then
				IF gs_2DContourBelow=1 THEN
					if bSymbolic2D then
						bShowRailOn1stRun		= 1
						bBreakRailLine			= 1
						brLineAngle				= angle_breakline
						bShowRailPart1			= 1
						breakLineDist			= brLineDist
						breakLineW				= brkLineY
						bRailAboveBreakLine		= 0
						gosub "left rail"
					else
						POLY2_b 5, 1+2+64, gs_fill_pen, gs_back_pen,
							-hrol * bComplexRailLeft, handRailWidthL / 2, 1,
							-hrol * bComplexRailLeft, -handRailWidthL / 2, 1,
							brLineDist - hrol * bComplexRailLeft, -handRailWidthL / 2, 1,
							brLineDist - hrol * bComplexRailLeft - handRailWidthL * TAN(angle_breakline), handRailWidthL / 2, 1,
							-hrol * bComplexRailLeft, handRailWidthL / 2, -1
					ENDIF
				endif

				IF gs_2DContourAbove=1 and bShowRailAboveBreakLine THEN	!!IF No Contour above Break Line
					if bSymbolic2D then
						bShowRailOn1stRun		= 1
						bBreakRailLine			= 1
						brLineAngle				= angle_breakline
						bShowRailPart2			= 1
						breakLineDist			= brLineDist
						breakLineW				= brkLineY
						bRailAboveBreakLine		= 1
						gosub "left rail"
					else
						FILL temp_FillTypeAbove
						SET LINE_TYPE temp_line

						POLY2_b 5, 1+FullFill, gs_fill_pen, temp_BackPen,
							brLineDist - hrol * bComplexRailLeft - handRailWidthL * TAN(angle_breakline) + brkLineY, handRailWidthL / 2, 1,
							brLineDist - hrol * bComplexRailLeft + brkLineY, -handRailWidthL / 2, 1,
							LRailLength + hrol * bComplexRailLeft, -handRailWidthL / 2, 1,
							LRailLength + hrol * bComplexRailLeft, handRailWidthL / 2, 1,
							brLineDist - hrol * bComplexRailLeft - handRailWidthL * TAN(angle_breakline) + brkLineY, handRailWidthL / 2, 1
					endif
				ENDIF
			endif

			IF bShowRailAxis THEN
				line_type railAxisLineType
				pen gs_RailAxisPen
				IF gs_2DContourBelow=1 THEN LINE2 -hrol * bComplexRailLeft, 0, brLineDist - hrol * bComplexRailLeft - handRailWidthL / 2 * TAN(angle_breakline), 0
				IF gs_2DContourAbove=1 THEN	LINE2 brLineDist - hrol * bComplexRailLeft - handRailWidthL / 2 * TAN(angle_breakline) + brkLineY, 0, LRailLength + hrol * bComplexRailLeft, 0
			ENDIF
		else
			if bShowRailOnFloorPlan then
				if bSymbolic2D then
					bShowRailOn1stRun		= 1
					bBreakRailLine			= 0
					bRailAboveBreakLine		= 0
					gosub "left rail"
				else
					poly2_b 5, 1+2+64, gs_fill_pen, gs_back_pen,
						-hrol * bComplexRailLeft, handRailWidthL / 2, 1,
						-hrol * bComplexRailLeft, -handRailWidthL / 2, 1,
						LRailLength + hrol * bComplexRailLeft, -handRailWidthL / 2, 1,
						LRailLength + hrol * bComplexRailLeft, handRailWidthL / 2, 1,
						-hrol * bComplexRailLeft, handRailWidthL / 2, -1
				endif
			endif

			if bShowRailAxis then
				line_type railAxisLineType
				pen gs_RailAxisPen
				line2 -hrol * bComplexRailLeft, 0, LRailLength + hrol * bComplexRailLeft, 0
			endif
		endif

		del 3

		if bShowRailOnFloorPlan then
			ADD2 0,td/2 * bComplexRailLeft

			IF bSameRails THEN
				RailUNID=1100

				!!! RAIL OFFSET
				HOTSPOT2 handRailWidthL/2,			-OverhangRBottom, RailUNID, roffr, 1+128 : RailUNID=RailUNID+1
				HOTSPOT2 handRailWidthL/2-roffr,	-OverhangRBottom, RailUNID, roffr, 2 : RailUNID=RailUNID+1
				HOTSPOT2 handRailWidthL/2+1,		-OverhangRBottom, RailUNID, roffr, 3 : RailUNID=RailUNID+1

				HOTSPOT2 handRailWidthL/2,			(rnu-1)*td+OverhangRTop, RailUNID, roffr, 1+128 : RailUNID=RailUNID+1
				HOTSPOT2 handRailWidthL/2-roffr,	(rnu-1)*td+OverhangRTop, RailUNID, roffr, 2 : RailUNID=RailUNID+1
				HOTSPOT2 handRailWidthL/2+1,		(rnu-1)*td+OverhangRTop, RailUNID, roffr, 3 : RailUNID=RailUNID+1

				!!! RAIL BOTTOM OVERHANG
				HOTSPOT2 handRailWidthL/2-roffr,		0, RailUNID, OverhangRBottom, 1+128 : RailUNID=RailUNID+1
				HOTSPOT2 handRailWidthL/2-roffr,		1, RailUNID, OverhangRBottom, 3 : RailUNID=RailUNID+1
				HOTSPOT2 handRailWidthL/2-roffr,		-OverhangRBottom, RailUNID, OverhangRBottom, 2 : RailUNID=RailUNID+1

				!!! RAIL TOP OVERHANG
				HOTSPOT2 handRailWidthL/2-roffr,		td*(rnu-1), RailUNID, OverhangRTop, 1+128 : RailUNID=RailUNID+1
				HOTSPOT2 handRailWidthL/2-roffr,		td*(rnu-1)-1, RailUNID, OverhangRTop, 3 : RailUNID=RailUNID+1
				HOTSPOT2 handRailWidthL/2-roffr,		td*(rnu-1)+OverhangRTop, RailUNID, OverhangRTop, 2 : RailUNID=RailUNID+1
			ELSE
				RailUNID=1200

				!!! RAIL OFFSET
				HOTSPOT2 handRailWidthL/2,			-OverhangLBottom, RailUNID, roffl, 1+128 : RailUNID=RailUNID+1
				HOTSPOT2 handRailWidthL/2-roffl,	-OverhangLBottom, RailUNID, roffl, 2 : RailUNID=RailUNID+1
				HOTSPOT2 handRailWidthL/2+1,		-OverhangLBottom, RailUNID, roffl, 3 : RailUNID=RailUNID+1

				HOTSPOT2 handRailWidthL/2,			(rnu-1)*td+OverhangLTop, RailUNID, roffl, 1+128 : RailUNID=RailUNID+1
				HOTSPOT2 handRailWidthL/2-roffl,	(rnu-1)*td+OverhangLTop, RailUNID, roffl, 2 : RailUNID=RailUNID+1
				HOTSPOT2 handRailWidthL/2+1,		(rnu-1)*td+OverhangLTop, RailUNID, roffl, 3 : RailUNID=RailUNID+1

				!!! RAIL BOTTOM OVERHANG
				HOTSPOT2 handRailWidthL/2-roffl,		0, RailUNID, OverhangLBottom, 1+128 : RailUNID=RailUNID+1
				HOTSPOT2 handRailWidthL/2-roffl,		1, RailUNID, OverhangLBottom, 3 : RailUNID=RailUNID+1
				HOTSPOT2 handRailWidthL/2-roffl,		-OverhangLBottom, RailUNID, OverhangLBottom, 2 : RailUNID=RailUNID+1

				!!! RAIL TOP OVERHANG
				HOTSPOT2 handRailWidthL/2-roffl,		td*(rnu-1), RailUNID, OverhangLTop, 1+128 : RailUNID=RailUNID+1
				HOTSPOT2 handRailWidthL/2-roffl,		td*(rnu-1)-1, RailUNID, OverhangLTop, 3 : RailUNID=RailUNID+1
				HOTSPOT2 handRailWidthL/2-roffl,		td*(rnu-1)+OverhangLTop, RailUNID, OverhangLTop, 2 : RailUNID=RailUNID+1
			ENDIF

			del 1
		endif
	endif

	! --- Right Rail ---------------------------------------------------------------
	pen gs_cont_pen
	if rail_m = 2 | rail_m = 1 then		! Right, Both
		ROT2 90
		ADD2 0, -flw-roffr+handRailWidthR/2
		ADD2 rx+bComplexRailRight*td/2, 0

		brLineDist	= (NumStline+1)*td-ns-covthicky-(td/2 - hror) * bComplexRailRight + OverhangRBottom + roffr * TAN(angle_breakline)

		PEN railPen
		SET LINE_TYPE railLineType

		if brk then
			if bShowRailOnFloorPlan then
				IF gs_2DContourBelow=1 THEN
					if bSymbolic2D then
						bShowRailOn1stRun		= 1
						bBreakRailLine			= 1
						brLineAngle				= angle_breakline
						bShowRailPart1			= 1
						breakLineDist			= brLineDist
						breakLineW				= brkLineY
						bRailAboveBreakLine		= 0
						gosub "right rail"
					else
						POLY2_b 5, 1+2+64, gs_fill_pen, gs_back_pen,
							-hror * bComplexRailRight, handRailWidthR / 2, 1,
							-hror * bComplexRailRight, -handRailWidthR / 2, 1,
							brLineDist - hror * bComplexRailRight, -handRailWidthR / 2, 1,
							brLineDist - hror * bComplexRailRight - handRailWidthR * TAN(angle_breakline), handRailWidthR / 2, 1,
							-hror * bComplexRailRight, handRailWidthR / 2, -1
					ENDIF
				endif

				IF gs_2DContourAbove=1 and bShowRailAboveBreakLine THEN	!!IF No Contour above Break Line
					if bSymbolic2D then
						bShowRailOn1stRun		= 1
						bBreakRailLine			= 1
						brLineAngle				= angle_breakline
						bShowRailPart2			= 1
						breakLineDist			= brLineDist
						breakLineW				= brkLineY
						bRailAboveBreakLine		= 1
						gosub "right rail"
					else
						FILL temp_FillTypeAbove
						SET LINE_TYPE temp_line

						POLY2_b 5, 1+FullFill, gs_fill_pen, temp_BackPen,
							brLineDist - hror * bComplexRailRight - handRailWidthR * TAN(angle_breakline) + brkLineY, handRailWidthR / 2, 1,
							brLineDist - hror * bComplexRailRight + brkLineY, -handRailWidthR / 2, 1,
							RRailLength + hror * bComplexRailRight, -handRailWidthR / 2, 1,
							RRailLength + hror * bComplexRailRight, handRailWidthR / 2, 1,
							brLineDist - hror * bComplexRailRight - handRailWidthR * TAN(angle_breakline) + brkLineY, handRailWidthR / 2, 1
					ENDIF
				endif
			endif

			IF bShowRailAxis THEN
				line_type railAxisLineType
				pen gs_RailAxisPen
				IF gs_2DContourBelow=1 THEN LINE2 -hror * bComplexRailRight, 0, brLineDist - hror * bComplexRailRight - handRailWidthR / 2 * TAN(angle_breakline), 0
				IF gs_2DContourAbove=1 THEN	LINE2 brLineDist - hror * bComplexRailRight - handRailWidthR / 2 * TAN(angle_breakline) + brkLineY, 0, RRailLength + hror * bComplexRailRight, 0
			ENDIF
		else
			if bShowRailOnFloorPlan then
				if bSymbolic2D then
					bShowRailOn1stRun		= 1
					bBreakRailLine			= 0
					bRailAboveBreakLine		= 0
					gosub "right rail"
				else
					poly2_b 5, 1+2+64, gs_fill_pen, gs_back_pen,
						-hror * bComplexRailRight, handRailWidthR / 2, 1,
						-hror * bComplexRailRight, -handRailWidthR / 2, 1,
						RRailLength + hror * bComplexRailRight, -handRailWidthR / 2, 1,
						RRailLength + hror * bComplexRailRight, handRailWidthR / 2, 1,
						-hror * bComplexRailRight, handRailWidthR / 2, -1
				endif
			endif

			if bShowRailAxis then
				line_type railAxisLineType
				pen gs_RailAxisPen
				line2 -hror * bComplexRailRight, 0, RRailLength + hror * bComplexRailRight, 0
			endif
		endif

		del 3

		if bShowRailOnFloorPlan then
			ADD2 0,td/2 * bComplexRailRight
				RailUNID=1000

				!!! RAIL OFFSET
				HOTSPOT2 flw-handRailWidthR/2,			-OverhangRBottom, RailUNID, roffr, 1+128 : RailUNID=RailUNID+1
				HOTSPOT2 flw-handRailWidthR/2+roffr,	-OverhangRBottom, RailUNID, roffr, 2 : RailUNID=RailUNID+1
				HOTSPOT2 flw-handRailWidthR/2-1,		-OverhangRBottom, RailUNID, roffr, 3 : RailUNID=RailUNID+1

				HOTSPOT2 flw-handRailWidthR/2,			(rnu-1)*td+OverhangRTop, RailUNID, roffr, 1+128 : RailUNID=RailUNID+1
				HOTSPOT2 flw-handRailWidthR/2+roffr,	(rnu-1)*td+OverhangRTop, RailUNID, roffr, 2 : RailUNID=RailUNID+1
				HOTSPOT2 flw-handRailWidthR/2-1,		(rnu-1)*td+OverhangRTop, RailUNID, roffr, 3 : RailUNID=RailUNID+1

				!!! RAIL BOTTOM OVERHANG
				HOTSPOT2 flw-handRailWidthR/2+roffr,		0, RailUNID, OverhangRBottom, 1+128 : RailUNID=RailUNID+1
				HOTSPOT2 flw-handRailWidthR/2+roffr,		1, RailUNID, OverhangRBottom, 3 : RailUNID=RailUNID+1
				HOTSPOT2 flw-handRailWidthR/2+roffr,		-OverhangRBottom, RailUNID, OverhangRBottom, 2 : RailUNID=RailUNID+1

				!!! RAIL TOP OVERHANG
				HOTSPOT2 flw-handRailWidthR/2+roffr,		td*(rnu-1), RailUNID, OverhangRTop, 1+128 : RailUNID=RailUNID+1
				HOTSPOT2 flw-handRailWidthR/2+roffr,		td*(rnu-1)-1, RailUNID, OverhangRTop, 3 : RailUNID=RailUNID+1
				HOTSPOT2 flw-handRailWidthR/2+roffr,		td*(rnu-1)+OverhangRTop, RailUNID, OverhangRTop, 2 : RailUNID=RailUNID+1
			del 1
		endif
	endif
endif

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!! *** HOTSPOT EDITING in 2D / RAILING AND FLIGHT *** !!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!



!!! CONCRETE / UPPER AND LOWER JUNCTION  !!!!!!!!!!!!!!!!!!!!!!!!!!!

IF gs_structure_landing_m = STRUCTTYPE_CONCRETE  THEN

	FlightUNID=100

	IF gs_2DContourAbove=1 OR gs_2DContourAbove=0 AND  ABS(chStoryDist) > EPS THEN
		HOTSPOT2 flw/2, 0,		FlightUNID, ljl, 1+128 : FlightUNID=FlightUNID+1
		HOTSPOT2 flw/2, 0-ljl, 	FlightUNID, ljl, 2 : FlightUNID=FlightUNID+1
		HOTSPOT2 flw/2, 0+1,	FlightUNID, ljl, 3: FlightUNID=FlightUNID+1

		HOTSPOT2 flw/2, (rnu)*td,		FlightUNID, ujl, 1+128 : FlightUNID=FlightUNID+1
		HOTSPOT2 flw/2, (rnu)*td+ujl, 	FlightUNID, ujl, 2 : FlightUNID=FlightUNID+1
		HOTSPOT2 flw/2, (rnu)*td-1,		FlightUNID, ujl, 3: FlightUNID=FlightUNID+1
	ENDIF
ENDIF

!================================================================================
end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end
!================================================================================

"left rail":

	! ---  Rail on 1st Run -----------------------------------------------------
	if bShowRailOn1stRun then
		lraSimple=LRailLength
		lraComplex=LRailLength
		additionXComplex=0
		additionZComplex=0
		hrovL=hrol
		hrovR=hrol
		postNumber = npl
		side = SIDE_LEFT
		gosub "callRailsForStair"
	endif
return


"right rail":

	! ---  Rail on 1st Run -----------------------------------------------------
	if bShowRailOn1stRun then
		lraSimple=RRailLength
		lraComplex=RRailLength
		additionXComplex=0
		additionZComplex=0
		hrovL=hror
		hrovR=hror
		postNumber = npr
		side = SIDE_RIGHT
		gosub "callRailsForStair"
	endif
return

"callRailsForStair":
! ------------------------------------------------------------------------------
!	lraSimple
!	lraComplex
!	additionXComplex
!	additionZComplex
!	hrovL: rail overhang start
!	hrovR: rail overhang end
!	postNumber:   number of posts
!	side: SIDE_LEFT or SIDE_RIGHT
! ==============================================================================
	ani = angle
	additionXComplex = additionXComplex
	additionZComplex = additionZComplex
	gosub "callRails"
return

! ==============================================================================
"callRails":
! ------------------------------------------------------------------------------
!	ani
!	additionXComplex
!	additionZComplex
!	dsComplex
!  ------------------
!	side: SIDE_LEFT or SIDE_RIGHT
!	lraSimple
!	lraComplex
!	hrovL: rail overhang start
!	hrovR: rail overhang end
!	postNumber:   number of posts
! ==============================================================================
	if side = SIDE_LEFT then
		railBarDepth	= bwl
		railBarDiam		= bdl
		railHeight		= hrl
		railBarThk		= fthl
		railFrameThk	= fthl
		railDist		= dsl
		railType_m		= leftRailType_m
		railPostDia		= pdl
		railPostWidth	= pwl
		railPostThk		= pthl
		railPostType	= ptl_m
		nBarsRail		= nbl
		bt_m			= btl_m
		railFramesWSide	= fswl
		railFramesWTop	= ftwl
		railFramesWBot	= fbwl
		railBarHeight	= bhl
		railBarFillThk	= bthl
		abdist			= abdistl
		railFrameMat	= fmatl
		railBaluFillMat	= bmatl
		railPostMat		= pmatl
		nbt				= nbtl
		railFillDist	= fdfl
		railPostBaseType= gs_PostBaseTypeL_m
		railDistFromHr	= sbhl
		railPostBaseOv	= gs_PostBaseOverhangL
		railHrailHeight	= hrhl
		handRailWidth	= handRailWidthL
		bComplexRail	= bComplexRailLeft
	else
		railBarDepth	= bwr
		railBarDiam		= bdr
		railHeight		= hrr
		railBarThk		= fthr
		railFrameThk	= fthr
		railDist		= dsr
		railType_m		= rightRailType_m
		railPostDia		= pdr
		railPostWidth	= pwr
		railPostThk		= pthr
		railPostType	= ptr_m
		nBarsRail		= nbr
		bt_m			= btr_m
		railFramesWSide	= fswr
		railFramesWTop	= ftwr
		railFramesWBot	= fbwr
		railBarHeight	= bhr
		railBarFillThk	= bthr
		abdist			= abdistr
		railFrameMat	= fmatr
		railBaluFillMat	= bmatr
		railPostMat		= pmatr
		nbt				= nbtr
		railFillDist	= fdfr
		railPostBaseType= gs_PostBaseTypeR_m
		railDistFromHr	= sbhr
		railPostBaseOv	= gs_PostBaseOverhangR
		railHrailHeight	= hrhr
		handRailWidth	= handRailWidthR
		bComplexRail	= bComplexRailRight
	endif

	add2 additionXComplex * bComplexRail, 0
	call "railSymbol2D_m" parameters all	cfs					= 1,
											bEnable2DPosts		= bComplexRail,
											ptyp_m				= 1,
											ani					= ani,
											rom_m				= 1,
											rmm_m				= 1,
											LengthSize			= 0,
											lra					= lraSimple * NOT(bComplexRail) + lraComplex * (bComplexRail),
											hr					= railHeight,
											hrPerp				= railHeight,
											ab					= 0,
											rb					= 0,
											ds					= railDist,
											gs_AngleL			= 90,
											gs_AngleR			= 90,
											iHandRailStyle		= 1,
											handRailDiameter	= handRailWidth,
											handRailWidth		= handRailWidth,
											hroL				= hrovL,
											hroR				= hrovR,
											np					= postNumber,
											pd					= railPostDia,
											pw					= railPostWidth,
											pth					= railPostThk,
											gs_cont_pen			= railPen,
											sa					= 0,
											bBreakRailLine		= bBreakRailLine,
											breakLineAngle		= brLineAngle,
											breakLineDist		= breakLineDist,
											breakLineWidth		= brkLineY,
											bRailAboveBreakLine	= bRailAboveBreakLine,
											bShowRailBelowBrL	= bShowRailPart1,
											bShowRailAboveBrL	= bShowRailPart2,
											bPostNoCalculation	= (railType_m = 10),
											pit_m				= 1,
											dp					= abdist,
											nbt					= nbt
	del 1

	bShowRailPart1			= 0
	bShowRailPart2			= 0

return

"carriage":

	drawindex 10

	if beamNum = 1 then
		add2 carriageBaseDist / 2 - beamThk / 2 - beamOffsetRight, 0
	else
		add2 carriageBaseDist - beamThk - beamOffsetRight, 0
	endif
	for wb = 1 to beamNum
		if bBreakCarriageLine then
			lengthMod	= -(carriageBaseDist - beamOffsetLeft - beamOffsetRight - beamThk) * tan(brLineAngle) * (wb = 2)
			if bShowCarriagePart1 then
				pen carriagePen
				LINE_TYPE carriageLineType

				poly2_b 4, 1+2+4+64, gs_fill_pen, gs_back_pen,
					0, 0, 1,
					beamThk, 0, 1,
					beamThk, carrBreakLineDist + beamThk * tan(brLineAngle) / 2 + lengthMod, 1,
					0, carrBreakLineDist - beamThk * tan(brLineAngle) / 2 + lengthMod, 1
			endif

			if bShowCarriagePart2 then
				pen carriagePen
				if	(gs_2DContourAbove) then
					LINE_TYPE dash_line
				else
					LINE_TYPE carriageLineType
				endif

				poly2_b 4, 1 + 2 * gs_FillAbove + 4+64, gs_fill_pen, gs_back_pen,
					0, carrBreakLineDist - beamThk * tan(brLineAngle) / 2 + lengthMod + carrBreakLineWidth, 1,
					beamThk, carrBreakLineDist + beamThk * tan(brLineAngle) / 2 + lengthMod + carrBreakLineWidth, 1,
					beamThk, beamLength, 1,
					0, beamLength, 1
			endif
		else
			pen carriagePen
			if NOT(brk) then
				LINE_TYPE carriageLineType
			else
				if	(NOT(bCarrAboveBreakLine) and gs_2DContourBelow) or\
					((bCarrAboveBreakLine) and gs_2DContourAbove) then
					LINE_TYPE dash_line
				else
					LINE_TYPE carriageLineType
				endif
			endif

			poly2_b 4, 1 + 2 * (NOT(bCarrAboveBreakLine) + bCarrAboveBreakLine * gs_FillAbove) + 4+64, gs_fill_pen, gs_back_pen,
				0, 0, 1,
				beamThk, 0, 1,
				beamThk, beamLength, 1,
				0, beamLength, 1
		endif
		add2 -carriageBaseDist + beamThk + beamOffsetLeft + beamOffsetRight, 0
	next wb
	del beamNum + 1

return

]]>
</Script_2D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_1D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
! const values for parameter: btypr_m
BAR_RECTANGULAR = 1
BAR_ROUND       = 2


! const values for parameter: gs_structure_landing_m
STRUCTTYPE_MONOLITH = 1
STRUCTTYPE_CONCRETE = 2


! const values for parameter: ptl_m
POST_RECTANGULAR = 1
POST_ROUND       = 2


! const values for parameter: iLowerJunctionType
LOWERJUNCTION_GROUND_FLOOR     = 1
LOWERJUNCTION_FLOOR_OR_LANDING = 2
LOWERJUNCTION_STRAIGHT_END     = 3


! const values for parameter: arrow_style_m
ARROW_STYLE_1 = 1
ARROW_STYLE_2 = 2
ARROW_STYLE_3 = 3
ARROW_STYLE_4 = 4
ARROW_STYLE_5 = 5
ARROW_STYLE_6 = 6
ARROW_STYLE_7 = 7
ARROW_STYLE_8 = 8
ARROW_STYLE_9 = 9


! const values for parameter: breakline_style_m
BREAKLINE_STRAIGHT   = 1
BREAKLINE_ZIGZAG     = 2
BREAKLINE_ZIGZAG_CHI = 3


! const values for parameter: btr_m
BOARD_RECTANGULAR = 1
BOARD_ROUND       = 2


! const values for parameter: hrtr_m
HANDRAIL_RECTANGULAR = 1
HANDRAIL_ROUND       = 2


! const values for parameter: topTreadLevel_m
TOPTREAD_ATFLOOR    = 1
TOPTREAD_BELOWFLOOR = 2


! const values for parameter: iCalculationMode
CALCMODE_NO_OF_RISERS = 1
CALCMODE_TREAD_HEIGHT = 2


! const values for parameter: firstTreadLevel_m
FIRSTTREAD_ATFLOOR    = 1
FIRSTTREAD_ABOVEFLOOR = 2


! const values for parameter: iUpperJunctionType
UPPERJUNCTION_GROUND_FLOOR     = 1
UPPERJUNCTION_FLOOR_OR_LANDING = 2
UPPERJUNCTION_STRAIGHT_END     = 3


! const values for parameter: hrtl_m
HANDRAIL_RECTANGULAR = 1
HANDRAIL_ROUND       = 2


! const values for parameter: btl_m
BOARD_RECTANGULAR = 1
BOARD_ROUND       = 2


! const values for parameter: ptr_m
POST_RECTANGULAR = 1
POST_ROUND       = 2


! const values for parameter: btypl_m
BAR_RECTANGULAR = 1
BAR_ROUND       = 2


! const values for parameter: iLineTypeAboveBreak
LINETYPEABOVEBREAK_INTERSECT = 1
LINETYPEABOVEBREAK_FULL      = 2


! const values for parameter: gs_PostBaseTypeL_m
POSTBASE_VERTICALSURF   = 1
POSTBASE_HORIZONTALSURF = 2


! const values for parameter: roml_m
RAILORIENT_VERTICAL      = 1
RAILORIENT_PERPENDICULAR = 2


! const values for parameter: romr_m
RAILORIENT_VERTICAL      = 1
RAILORIENT_PERPENDICULAR = 2


! const values for parameter: gs_PostBaseTypeR_m
POSTBASE_VERTICALSURF   = 1
POSTBASE_HORIZONTALSURF = 2

EPS=0.0001

SIDE_LEFT				= 1
SIDE_RIGHT				= 2

dim stNoseTypes[2]
	stNoseTypes[1] = `Обычные`
	stNoseTypes[2] = `Скругленные`

NOSE_NORMAL 	= 1
NOSE_ROUNDED	= 2

dim stRiseRunText[7]
	stRiseRunText[1] = `Кол-во x Подступенок = Высота Марша`
	stRiseRunText[2] = `Кол-во Проступей/Подступенок @`
	stRiseRunText[3] = `Кол-во х Проступь х Подступенок`
	stRiseRunText[4] = `Кол-во х Подступенок х Проступь`
	stRiseRunText[5] = `Кол-во <текст подступенка> Подступенок / Проступь`
	stRiseRunText[6] = `Кол-во <текст подступенка> // Подступенок / Проступь`
	stRiseRunText[7] = `Специальный Текст`

dim stStartSymbolStyles[4]
	stStartSymbolStyles[1] = `Стиль 1`
	stStartSymbolStyles[2] = `Стиль 2`
	stStartSymbolStyles[3] = `Стиль 3`
	stStartSymbolStyles[4] = `Нет`

STARTSYMB_STYLE1	= 1
STARTSYMB_STYLE2	= 2
STARTSYMB_STYLE3	= 3
STARTSYMB_NONE		= 4

dim stWalkingDirUPDN[3]
	stWalkingDirUPDN[1] = `Нет`
	stWalkingDirUPDN[2] = `ВВЕРХ`
	stWalkingDirUPDN[3] = `ВНИЗ`

WALKDIRSTR_NONE			= 1
WALKDIRSTR_UP			= 2
WALKDIRSTR_DOWN			= 3

dim stRailPosition[4]
	stRailPosition[1] = `Оба`
	stRailPosition[2] = `Справа`
	stRailPosition[3] = `Слева`
	stRailPosition[4] = `Нет`

RAILPOS_BOTH	= 1
RAILPOS_RIGHT	= 2
RAILPOS_LEFT	= 3
RAILPOS_NONE	= 4

dim stDetlevel2D[2]
	stDetlevel2D[1] = `Зависит от Масштаба`
	stDetlevel2D[2] = `Специальный`

DET2D_SCALESENSITIVE	= 1
DET2D_CUSTOM			= 2

dim stDetlevel3D[3]
	stDetlevel3D[1] = `Детальный`
	stDetlevel3D[2] = `Простой`
	stDetlevel3D[3] = `Откл.`

! const values for parameter: gs_detlevel_3D_m
DET3D_OFF      = 0
DET3D_SIMPLE   = 1
DET3D_DETAILED = 2
DET3D_DRAFT    = 3

dim stRailTypes[12]
	stRailTypes[ 1] = `Балюстрада Ограждения`
	stRailTypes[ 2] = `Параллельные Прутья`
	stRailTypes[ 3] = `Простой Брусок`
	stRailTypes[ 4] = `Объемная Рама с Панелью`
	stRailTypes[ 5] = `Объемная Рама`
	stRailTypes[ 6] = `Панель Ограждения`
	stRailTypes[ 7] = `Стойки Ограждения с Балясинами`
	stRailTypes[ 8] = `Стойки с Леерами`
	stRailTypes[ 9] = `Стойки с Леерами 02`
	stRailTypes[10] = `Деревянная Балюстрада`
	stRailTypes[11] = `Стойки Ограждения с Брусками`
	stRailTypes[12] = `Как и Правое`

dim stShowCarriageValues[5]
	stShowCarriageValues[1]	= `Всегда`
	stShowCarriageValues[2]	= `До 1:20`
	stShowCarriageValues[3]	= `До 1:50`
	stShowCarriageValues[4]	= `До 1:100`
	stShowCarriageValues[5]	= `До 1:200`

RAIL_BALUSTRADE				= 1
RAIL_PARALLEL_BARS			= 2
RAIL_SIMPLE_BAR				= 3
RAIL_SOLID_FRAME_FILLED		= 4
RAIL_SOLID_FRAME			= 5
RAIL_SOLID					= 6
RAIL_POST_WITH_BALUSTERS	= 7
RAIL_WIRED					= 8
RAIL_WIRED02				= 9
RAIL_WOODEN_BALUSTRADE		= 10
RAIL_POST_WITH_BARS			= 11
RAIL_SAMERAILS				= 12

dim stPostSymbolType[5]
	stPostSymbolType[1] = `Тип 1`
	stPostSymbolType[2] = `Тип 2`
	stPostSymbolType[3] = `Тип 3`
	stPostSymbolType[4] = `Тип 4`
	stPostSymbolType[5] = `Нет`

RECTANGULAR					= 1
ROUND						= 2

dim stFlightSectionType[2]
	stFlightSectionType[1] = `без Косоура`
	stFlightSectionType[2] = `с Косоуром`

WITHOUT_SPINEBEAM			= 1
WITH_SPINEBEAM				= 2

! -------------- 2D Symbol variables --------------

! gs_SymbolType_m
SYMBOL_TYPE1	= 1
SYMBOL_TYPE2	= 2
SYMBOL_TYPE3	= 3
SYMBOL_TYPE4	= 4
SYMBOL_TYPE5	= 5
SYMBOL_TYPE6	= 6
SYMBOL_TYPE7	= 7
SYMBOL_TYPE8	= 8
SYMBOL_TYPE9	= 9
SYMBOL_TYPE10	= 10
SYMBOL_TYPE11	= 11
SYMBOL_TYPE12	= 12
SYMBOL_TYPE13	= 13
SYMBOL_TYPE14	= 14
SYMBOL_TYPE15	= 15
SYMBOL_TYPE16	= 16
SYMBOL_TYPE17	= 17
SYMBOL_TYPE18	= 18
SYMBOL_TYPE19	= 19
SYMBOL_TYPE20	= 20

dim stStairSymbolTypes[20]
	stStairSymbolTypes[ 1] = `Тип 1`
	stStairSymbolTypes[ 2] = `Тип 2`
	stStairSymbolTypes[ 3] = `Тип 3`
	stStairSymbolTypes[ 4] = `Тип 4`
	stStairSymbolTypes[ 5] = `Тип 5`
	stStairSymbolTypes[ 6] = `Тип 6`
	stStairSymbolTypes[ 7] = `Тип 7`
	stStairSymbolTypes[ 8] = `Тип 8`
	stStairSymbolTypes[ 9] = `Тип 9`
	stStairSymbolTypes[10] = `Тип 10`
	stStairSymbolTypes[11] = `Тип 11`
	stStairSymbolTypes[12] = `Тип 12`
	stStairSymbolTypes[13] = `Тип 13`
	stStairSymbolTypes[14] = `Тип 14`
	stStairSymbolTypes[15] = `Тип 15`
	stStairSymbolTypes[16] = `Тип 16`
	stStairSymbolTypes[17] = `Тип 17`
	stStairSymbolTypes[18] = `Тип 18`
	stStairSymbolTypes[19] = `Тип 19`
	stStairSymbolTypes[20] = `Тип 20`

! iSymbolGroup
SYMBOLGROUP_TYPE1	= 1
SYMBOLGROUP_TYPE2	= 2
SYMBOLGROUP_TYPE3	= 3
SYMBOLGROUP_TYPE4	= 4
SYMBOLGROUP_TYPE5	= 5
SYMBOLGROUP_TYPE6	= 6
SYMBOLGROUP_TYPE7	= 7
SYMBOLGROUP_TYPE8	= 8

dim stSymbolGroup[8]
	stSymbolGroup[1] = `Тип 1`
	stSymbolGroup[2] = `Тип 2`
	stSymbolGroup[3] = `Тип 3`
	stSymbolGroup[4] = `Тип 4`
	stSymbolGroup[5] = `Тип 5`
	stSymbolGroup[6] = `Тип 6`
	stSymbolGroup[7] = `Тип 7`
	stSymbolGroup[8] = `Тип 8`

dim	iEnabledSymbolTypes[8][3]
	iEnabledSymbolTypes[1][1] = 1
	iEnabledSymbolTypes[1][2] = 6
	iEnabledSymbolTypes[1][3] = 13

	iEnabledSymbolTypes[2][1] = 2
	iEnabledSymbolTypes[2][2] = 7
	iEnabledSymbolTypes[2][3] = 14

	iEnabledSymbolTypes[3][1] = 3
	iEnabledSymbolTypes[3][2] = 8
	iEnabledSymbolTypes[3][3] = 15

	iEnabledSymbolTypes[4][1] = 4
	iEnabledSymbolTypes[4][2] = 9
	iEnabledSymbolTypes[4][3] = 16

	iEnabledSymbolTypes[5][1] = 5
	iEnabledSymbolTypes[5][2] = 10
	iEnabledSymbolTypes[5][3] = 17

	iEnabledSymbolTypes[6][1] = 4
	iEnabledSymbolTypes[6][2] = 11
	iEnabledSymbolTypes[6][3] = 18

	iEnabledSymbolTypes[7][1] = 4
	iEnabledSymbolTypes[7][2] = 11
	iEnabledSymbolTypes[7][3] = 19

	iEnabledSymbolTypes[8][1] = 5
	iEnabledSymbolTypes[8][2] = 12
	iEnabledSymbolTypes[8][3] = 20


! iScaleType
SCALE_10		= 10
SCALE_20		= 20
SCALE_50		= 50
SCALE_100		= 100
SCALE_200		= 200
SCALE_500		= 500

SCALE_1_1		= 1
SCALE_1_4		= 4
SCALE_1_8		= 8
SCALE_1_16		= 16
SCALE_1_24		= 24
SCALE_1_48		= 48
SCALE_1_96		= 96
SCALE_1_192		= 192
SCALE_CUSTOM	= 999

dim	iScaleType[15]
	iScaleType[1]	= SCALE_10
	iScaleType[2]	= SCALE_20
	iScaleType[3]	= SCALE_50
	iScaleType[4]	= SCALE_100
	iScaleType[5]	= SCALE_200
	iScaleType[6]	= SCALE_500
	iScaleType[7]	= SCALE_1_1
	iScaleType[8]	= SCALE_1_4
	iScaleType[9]	= SCALE_1_8
	iScaleType[10]	= SCALE_1_16
	iScaleType[11]	= SCALE_1_24
	iScaleType[12]	= SCALE_1_48
	iScaleType[13]	= SCALE_1_96
	iScaleType[14]	= SCALE_1_192
	iScaleType[15]	= SCALE_CUSTOM

dim stScaleType[15]
	stScaleType[1]	= `1:10`
	stScaleType[2]	= `1:20`
	stScaleType[3]	= `1:50`
	stScaleType[4]	= `1:100`
	stScaleType[5]	= `1:200`
	stScaleType[6]	= `1:500`
	
	stScaleType[7]	= `1'=1'-0"`
	stScaleType[8]	= `3"=1'-0"`
	stScaleType[9]	= `1 1/2"=1'-0"`
	stScaleType[10]	= `3/4"=1'-0"`
	stScaleType[11]	= `1/2"=1'-0"`
	stScaleType[12]	= `1/4"=1'-0"`
	stScaleType[13]	= `1/8"=1'-0"`
	stScaleType[14]	= `1/16"=1'-0"`
	stScaleType[15]	= `Специальный Масштаб`

if iScaleChangeSM = SCALE_CUSTOM then
	_iScaleSM = gs_ScaleChangeSM
else
	_iScaleSM = iScaleChangeSM
endif
if iScaleChangeMD = SCALE_CUSTOM then
	_iScaleMD = gs_ScaleChangeMD
else
	_iScaleMD = iScaleChangeMD
endif

! -------------- End of 2D Symbol variables --------------

bEnableCarriageLine		= (iFlightSectionType = WITH_SPINEBEAM)

if GLOB_SCRIPT_TYPE = 7 | GLOB_SCRIPT_TYPE = 8 then goto "MasterEnd"

IF thd < pth*2 THEN PARAMETERS thd=2*pth+td


!Automatic design option - using THD

IF ad THEN
	IF iCalculationMode = CALCMODE_TREAD_HEIGHT THEN			!Tread Height

		_rnu= int(zzyzx/pth)

		IF fra(zzyzx/pth) > 0.5 THEN
			_rnu = _rnu+1
		ENDIF

		_th = zzyzx/_rnu
		_td = abs(thd - 2 * _th)


		VALUES "rnu" _rnu, CUSTOM
		PARAMETERS rnu=_rnu

		VALUES "th" _th, CUSTOM
		PARAMETERS th=_th

		VALUES "td" _td, CUSTOM
		PARAMETERS td=_td

		LOCK "rnu", "td", "th"
	ELSE								    !No of Risers
		_th = zzyzx/rnu
		_pth= _th
		_td = abs(thd-2*_th)
		VALUES "th" _th, CUSTOM
		VALUES "pth" _pth, CUSTOM
		VALUES "td" _td, CUSTOM
		PARAMETERS th=_th, pth=_pth, td=_td
		LOCK "td", "th"
	ENDIF
ELSE
	LOCK "pth", "thd"
ENDIF

if topTreadLevel_m = TOPTREAD_ATFLOOR then
	numTread = rnu
else		! Top Tread below Floor Level
	numTread = rnu - 1
endif
if firstTreadLevel_m = FIRSTTREAD_ATFLOOR then numTread = numTread  + 1

!ENDIF

!!! *** T R E A D  S T Y L E  and P A R A M E T E R S
IF iNoseType = NOSE_ROUNDED THEN		!! no riser
	covery=0
ELSE
	recefice=0
ENDIF

IF not(cover) THEN		! no tread cover
	covthick = 0
	ns = 0
ENDIF

IF not(covery) THEN		! no riser cover
	covthicky = 0
ENDIF

IF gs_structure_landing_m = STRUCTTYPE_CONCRETE THEN
	hideparameter	"lst",
				"lst2",
				"topTreadLevel_m",
				"firstTreadLevel_m",
				"iLowerJunctionType",
				"iUpperJunctionType"
ENDIF

IF gs_structure_landing_m = STRUCTTYPE_MONOLITH THEN
	HIDEPARAMETER "ujl","ljl","ujh","ljh"
ENDIF

angle=ATN(th/td)

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

if bSameRails then
!!!	depthTreadOut			= depthTreadIn
	roffl					= roffr
	hrl						= hrr
	dsl						= dsr
	fswl					= fswr
	fthl					= fthr
	ftwl					= ftwr
	fbwl					= fbwr
	bwl						= bwr
	bthl					= bthr
	abdistl					= abdistr
	pmatl					= pmatr
	fmatl					= fmatr
	bmatl					= bmatr
	bhl						= bhr
	nbl						= nbr
	btypl_m					= btypr_m
	bdl						= bdr
	fdfl					= fdfr
	hrtl_m					= hrtr_m
	hrdl					= hrdr
	hrwl					= hrwr
	hrhl					= hrhr
	hrol					= hror
	ptl_m					= ptr_m
	npl						= npr
	pdl						= pdr
	pwl						= pwr
	pthl					= pthr
	btl_m					= btr_m
	nbtl					= nbtr
	sbhl					= sbhr
	gs_PostBaseTypeL_m		= gs_PostBaseTypeR_m
	gs_PostBaseOverhangL	= gs_PostBaseOverhangR
	OverhangLBottom			= OverhangRBottom
	OverhangLTop			= OverhangRTop
	roml_m					= romr_m
	rmml_m					= romr_m
endif

bComplexRailRight		= (rightRailType_m > 6)
if bSameRails then
	bComplexRailLeft 	= (rightRailType_m > 6)
else
	bComplexRailLeft 	= (leftRailType_m > 6)
endif

if NOT(bComplexRailLeft) then
	handRailWidthL = fthl
else
	IF hrtl_m = 2 THEN
		handRailWidthL = hrdl
	ELSE
		handRailWidthL = hrwl
	ENDIF
endif
if NOT(bComplexRailRight) then
	handRailWidthR = fthr
else
	IF hrtr_m = 2 THEN
		handRailWidthR = hrdr
	ELSE
		handRailWidthR = hrwr
	ENDIF
endif

"MasterEnd":

]]>
</Script_1D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_PR SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_PR>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_UI SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[

bCustom2dDetlevel = (gs_detlevel_2D_m = DET2D_CUSTOM)

dim stStairUI[128]
	for i = 1 to 128
		stStairUI[i] = ""
	next i

	stStairUI[1] = `2D-детализация`
	stStairUI[2] = `Масштаб`
	stStairUI[3] = `Тип Маркера Разрыва`
	stStairUI[4] = `Видимые Конструкции`
	stStairUI[5] = `Штриховка Фона`
	stStairUI[6] = `Перо Линии`
	stStairUI[7] = `Тип Линии`
	stStairUI[8] = `Перо Штриховки`
	stStairUI[9] = `Перо Фона Штриховки`
	stStairUI[10] = `Невидимые Конструкции`
	stStairUI[11] = `Перо Линии Всхода`
	stStairUI[12] = `Тип Линии Всхода`
	stStairUI[13] = `Конец Линии Всхода`
	stStairUI[14] = `Начало Линии Всхода`
	stStairUI[15] = `Перо Штриховки (0 - нет)`
	stStairUI[16] = `Перо Штрих. Выше (0 - нет)`
	stStairUI[17] = `Тип Шрифта`
	stStairUI[18] = `Начать с`
	stStairUI[19] = `Формат`
	stStairUI[20] = `Размер Шрифта`
	stStairUI[21] = `Специальный Текст 1`
	stStairUI[22] = `Перо Текста`
	stStairUI[23] = `Специальный Текст 2`
	stStairUI[24] = `Текст Подъема и Спуска`
	stStairUI[25] = `Текст`
	stStairUI[26] = `Тип Символа Стойки`
	stStairUI[27] = `Тип Линии Стойки`
	stStairUI[28] = `Перо Линии Стойки`
	stStairUI[29] = `Линия Невидимой Тетивы`
	stStairUI[30] = `Перо Невидимой Тетивы`
	stStairUI[31] = `2D выше Собственного Этажа`
	stStairUI[32] = `Лестница`
	stStairUI[33] = `Ограждение`
	stStairUI[34] = `Основание`
	stStairUI[35] = `Панели Ограждения`
	stStairUI[36] = `Проступь`
	stStairUI[37] = `Обвязка`
	stStairUI[38] = `Подступенок`
	stStairUI[39] = `Стойка`
	stStairUI[40] = `Поручень`
	stStairUI[41] = `Штриховка выше Линии Разрыва`
	stStairUI[42] = `Показ Линии Всхода`
	stStairUI[43] = `Стрелка к Линии Разрыва`
	stStairUI[44] = `Показ Нумерации`
	stStairUI[45] = `Текст Подступенков/Проступей`
	stStairUI[46] = `Читаемый Текст`
	stStairUI[47] = `Показ Ограждения на Плане`
	stStairUI[48] = `Показ Осей Ограждения`
	stStairUI[49] = `Показ Тетивы на Плане Этажа`
	stStairUI[50] = `Символ Зависит от Этажа`
	stStairUI[51] = `Линия Разрыва`
	stStairUI[52] = `Показ 2D ниже Линии Разрыва`
	stStairUI[53] = `Показ 2D выше Линии Разрыва`
	stStairUI[54] = `Отбрасывание Теней`
	stStairUI[55] = `Единицы Измерения Рабочей Среды Проекта`
	stStairUI[56] = `Ориентация`
	stStairUI[57] = `Ориентация Текста в Символе`

	stStairUI[80] = `Показ Проступей`
	stStairUI[81] = `Линия Всхода выше Линии Разрыва`

	stStairUI[86] = `Описание`
	stStairUI[87] = `Текст Спуска`
	stStairUI[88] = `Тип Видимой Линии`
	stStairUI[89] = `Тип Невидимой Линии`
	stStairUI[90] = `Размер Символа`
	stStairUI[91] = `Текст Подступенка`
	stStairUI[92] = `мм`
	stStairUI[93] = `п.`

	stStairUI[94] = `Перо Контура`
	stStairUI[95] = `Тип Штриховки`
	stStairUI[96] = `Перо Штриховки`
	stStairUI[97] = `Перо Фона Штриховки`
	stStairUI[98] = `Подступенок`

	stStairUI[99] = `Показ Ограждения выше Линии Разрыва`
	stStairUI[100] = `2D-символ`
	stStairUI[101] = stPostSymbolType[1]
	stStairUI[102] = stPostSymbolType[2]
	stStairUI[103] = stPostSymbolType[3]
	stStairUI[104] = stPostSymbolType[4]
	stStairUI[105] = stPostSymbolType[5]

	stStairUI[106] = stDetlevel2D[1]
	stStairUI[107] = stDetlevel2D[2]

	stStairUI[108] = `Прямой`
	if bSimpleZigZag then
		stStairUI[109] = `Зигзаг CHI`
	else
		stStairUI[109] = `Зигзаг`
	endif

	stStairUI[110] = stWalkingDirUPDN[1]
	stStairUI[111] = stWalkingDirUPDN[2]
	stStairUI[112] = stWalkingDirUPDN[3]

	stStairUI[116] = `Выровнять по Символу`
	stStairUI[117] = `Параллельно Линии Всхода`
	stStairUI[118] = `Читаемый`

	stStairUI[119] = stRiseRunText[1]
	stStairUI[120] = stRiseRunText[2]
	stStairUI[121] = stRiseRunText[3]
	stStairUI[122] = stRiseRunText[4]
	stStairUI[123] = stRiseRunText[5]
	stStairUI[124] = stRiseRunText[6]
	stStairUI[125] = stRiseRunText[7]

	stStairUI[126] = `Ограждение Справа`
	stStairUI[127] = `Ограждение Слева`
	stStairUI[128] = `Показ Тетивы`

dim stRailTypesForUI[12]
	stRailTypesForUI[ 1] = `Балюстрада`
	stRailTypesForUI[ 2] = `Параллельные Прутья`
	stRailTypesForUI[ 3] = `Простой Брусок`
	stRailTypesForUI[ 4] = `Объемная Рама с Панелью`
	stRailTypesForUI[ 5] = `Объемная Рама`
	stRailTypesForUI[ 6] = `Панель`
	stRailTypesForUI[ 7] = `Стойки с Балясинами`
	stRailTypesForUI[ 8] = `Стойки с Прутьями`
	stRailTypesForUI[ 9] = `Лееры 02`
	stRailTypesForUI[10] = `Деревянная Балюстрада`
	stRailTypesForUI[11] = `Стойки с Брусками`
	stRailTypesForUI[12] = `Как и Правое`

dim stStairUITabNames[15]
	for i = 1 to 15
		stStairUITabNames[i] = ""
	next i

	stStairUITabNames[1] = `Типы 2D-символа`
	stStairUITabNames[2] = `Реквизиты 2D-символа`
	stStairUITabNames[4] = `Подъем и Спуск, Нумерация`
	stStairUITabNames[5] = `Ограждение и Тетива в Символе`
	stStairUITabNames[8] = `Тип Ограждения - Справа`
	stStairUITabNames[9] = `Тип Ограждения - Слева`
	stStairUITabNames[13] = `Спуск и Подъем`
	stStairUITabNames[15] = `Стили Стрелки и Начальной Точки`

call "ui_stairs" parameters gs_ui_current_page		= gs_ui_current_page,
! --- 2D symbol type ---
			gs_detlevel_2D_m		= gs_detlevel_2D_m,
			gs_ScaleChangeSM		= gs_ScaleChangeSM,
			iScaleChangeSM			= iScaleChangeSM,
			gs_ScaleChangeMD		= gs_ScaleChangeMD,
			iScaleChangeMD			= iScaleChangeMD,
			stScaleType				= stScaleType,
			bCustom2dDetlevel		= bCustom2dDetlevel,
			gs_SymbolType_m			= gs_SymbolType_m,
			iSymbolGroup			= iSymbolGroup,
! --- 2D symbol attributes ---
			bEnableBreakLineStyle	= 1,
			breakline_style_m = breakline_style_m,
			gs_cont_pen				= gs_cont_pen,
			gs_DashLinePen			= gs_DashLinePen,
			solid_line				= solid_line,
			dash_line				= dash_line,
			gs_fill_type			= gs_fill_type,
			gs_fill_pen				= gs_fill_pen,
			gs_back_pen				= gs_back_pen,
			gs_FillAbove			= gs_FillAbove,
! --- Walkline ---
			arrow_style_m = arrow_style_m,
			gs_StartEndStyle		= gs_StartEndStyle,
! --- Text Display ---
			fontType				= fontType,
			bShowNumbering			= bShowNumbering,
			bShowRiseAndRunText		= bShowRiseAndRunText,
			nStartNumbering			= nStartNumbering,
			gs_NumTextSize			= gs_NumTextSize,
			gs_text_size_pt_num 	= gs_text_size_pt_num,
			gs_NumTextPen			= gs_NumTextPen,
			gs_RiseRunText			= gs_RiseRunText,
			iRiseRunText			= iRiseRunText,
			gs_CustomText1			= gs_CustomText1,
			gs_CustomText2			= gs_CustomText2,
			gs_customText_rise		= gs_customText_rise,
			fontsize				= fontsize,
			gs_text_size_pt			= gs_text_size_pt,
			gs_text_pen				= gs_text_pen,
			walkingDirUPDN			= walkingDirUPDN,
			bEnableCustomDownText	= 0,
			UPDNfontsize			= UPDNfontsize,
			gs_text_size_pt_UpDn	= gs_text_size_pt_UpDn,
			UPDNfontpen				= UPDNfontpen,
			typeTextRotation_RiseRun 	= typeTextRotation_RiseRun,
			typeTextRotation_Num 		= typeTextRotation_Num,
			typeTextRotation_UpDn 		= typeTextRotation_UpDn,
			bEnableDescription		= 0,
! --- Rail & Carriage 2D ---
			bShowRailOnFloorPlan	= bShowRailOnFloorPlan,
			railLineType			= railLineType,
			railPen					= railPen,
			bShowRailAxis			= bShowRailAxis,
			railAxisLineType		= railAxisLineType,
			gs_RailAxisPen			= gs_RailAxisPen,
			bSymbolic2D				= bSymbolic2D,
			postSymbolType			= postSymbolType,
			iPostSymbolType			= iPostSymbolType,
			postLineType			= postLineType,
			postPen					= postPen,
			bEnableCarriageLine		= bEnableCarriageLine,
			bShowCarriage			= bShowCarriage,
			carriageLineType		= carriageLineType,
			carriagePen				= carriagePen,
! --- Rail Types ---
			bRightRail				= bRightRail,
			bLeftRail				= bLeftRail,
			leftRailType			= leftRailType,
			rightRailType			= rightRailType,
			leftRailType_m			= leftRailType_m,
			rightRailType_m			= rightRailType_m,
! --- String resources ---
			stStairUITabNames		= stStairUITabNames,
			stStairSymbolTypes		= stStairSymbolTypes,
			stSymbolGroup			= stSymbolGroup,
			stRailTypesForUI		= stRailTypesForUI,
			stRailTypes				= stRailTypes,
			stStairUI				= stStairUI,
			bEnableWired02Rail		= 1,
! --- Stair Type ---
			iStairType				= 9		! Straight RC
end

]]>
</Script_UI>

<Comment SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Comment>

<CalledMacros SectVersion="2" SectionFlags="0" SubIdent="0">
	<Macro>
		<MName><![CDATA["Stair_RiseRun_Text"]]></MName>
		<MainGUID>E42F5F06-4225-4F32-A64C-ADCF1D4F9EDC</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["railSymbol2D_m"]]></MName>
		<MainGUID>C5C904E6-1706-4CD1-BC8D-6C294B5B40F7</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["stairRails_m"]]></MName>
		<MainGUID>4A3DDA4A-B43E-4039-B45A-463905CF42AD</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["ui_stairs"]]></MName>
		<MainGUID>D8D2E274-0A82-4EF4-845A-78AD6980E72F</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["FM_types"]]></MName>
		<MainGUID>2759D2DF-AA8E-44D1-AD1D-261581266B34</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["Onorm_Stair"]]></MName>
		<MainGUID>F021AF23-E4F7-4961-964D-C9BCAFB786DD</MainGUID>
	</Macro>
</CalledMacros>

<Picture MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="0" length_in_bytes="1878" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D494844520000007F0000
	007F0803000000F163ED21000000DE504C5445FFFFFFEFEFEF5A5A5ACECECE84
	8484DEDEDEA5A5A5B5B5B552524A9C9C946363635A635A4A4A4A7B7B7B63635A
	A5A59C94948C4A524AE7DED69CA59CBDB5AD8C948CC6AD63F7EFE7E7DECE8484
	7BD6AD63CEB584D6BD84D6B57BCEBDA5EFEFD6EFDEB5E7CE8CF7EFDEBDA573C6
	AD7BDED6C6C69C52ADB5AD7B847BD6AD5ADECEADCEB57BDECEB5424239CECEB5
	EFD6ADEFCE94C6A55AD6B563394239B59C6BB58C42BD9C52BDAD8CEFE7CECEBD
	94B59C73E7B56BCEC6A5D6BD94DED6B5E7BD73EFD694DEB55AB5944ADEC673D6
	C69C6B736BAD9C73AD946BF7F7E7DEC68C23E600AE0000062949444154785EED
	99D79AEB380E84AB0006C5E0DC39879373981C36EFFBBFD07E9265497DC67337
	64EF45977C6F92F8510048FC057AD2939EF4A40B3CAA4EAFF1983A5FE3517572
	F1FFB8FDCB17B1A23FDFBBAABB58EC9F609FDEBD42145D7D39D8CBE49758F0ED
	0FF3AFB791B6FF7E7F508E1147EFF653FE7C8E287A7BF3B8B97734DF1F9458B9
	771C3FF7F67B4C7CF8FE3CCC3FC6C9BDA9C7D0AA921C988CA20F037C5677B23C
	FF328F6EFC8425FB459CD6B74A12C1F5F7719F04BB9F92676B6DE533177811EF
	AE318A00BB0F9FAEE6A43A6355D5684CF808126F4F0882064A95A4F408A5FF0E
	B9C7097C5C5F81204A102E919909B6FD4BF4EAE3DEC3F76F551274207C522411
	720F00D1D377BB85CF196F49372B5C94A68BBBAF35C494F4C6AB6A53E655B8AE
	633E85CFB25FC06710A0514BCDA4486C78F8A083C8A33901C2107092C82A42D3
	4582DA5BDFF1B5554BD274F0E5958D51F746F87E39753D7C4AA6496E62C0C71D
	7A60DB0A2AB5832FCD4422345DB43AD0B759031BC22B54B3A2CA97C17ACEEB09
	FB83F8DB0B82A023814C3E1E06836F3D0D3D6D6F7D3FDFA82A49431049213646
	C7CF5DE9557EF0DACA78B5B445522290B8C637651F2071714CD81D7C322B826D
	FFF9EDC3E89364578D3704D5032A45F13182F173429FBD3C03D1C14FBC2EB228
	758F04FBC2FB5357F7C8120425CFEE8339DFCD43F6FA14F8D1EDE0536B450C02
	6933858F037EEDC043D5AC85CF649247C83D5ADD591F71744E10EA082B799299
	60CE773CD9BC0EBAFC17405095A054491EAEE33F7898FADBC2FBE66E7B14A907
	5114858B72D9305ADFC999B62ABD55B5924830E37F39E6DEC81E36272094A56E
	E193084D17AD0ED6C70F57044143B01491C308D7AC3AB1BEEF6F4810EA419412
	70FBBF6D3088C3CCF1D39D6B19DCC29789B8E0B9376DF8897F9CCDBBC0770658
	65E172EFF4BB87CE07625BF7086ADA02E1447217ECF4FFD07491E0E6B26BBA50
	92308554E1C6CDB1E3B713EB7B714312A403E8A5CA22355DB69F39EC5D17769B
	3A10AE9895E1B73F85AF35C40EBE36FC3E95C40683EFE0CFE02360AC55752173
	EFE2F45BF82C499CFE02823024BC489E207CCF091DE93B5B73E7BC7022458C71
	931D7D4A5AD5F5996EA34FC26749197EDA1EF183C5C149178C3255555FCE6631
	728F76871F78744590DEA39B7693C3F077FC43D523B9B9FC0104E140AAC8C770
	F01D8D5C712CBCAFDE93ECCBBE16328B71D3C549E17DF9555BB994841622E19E
	38EC9ECB0E9E7F226D5F765BE7BB8D70D345E5607E477390544FB6CE5798E04D
	D7089F2579F17218375542365DEF0E1EE4DE00DF9224614040B2CC85CF3D10EC
	E9B3037C86248A8003CFF3F9BEBA7BB55652D598AEEC06AC7B979F26F0E9005F
	6B88A4F74AEB329167C16FBA46F894E4DBEB7EDC0429958433FE5F5F4D127FB4
	BEBB334B12A9124C444CF8ED039B2D7D96D4A31FB4952F3BF824B131AE7AC64F
	D7DD51941D7C6626CB18B9D7B9CEF0C4415894964C339102A1B4DEF3BA4A1E7C
	EE9D8F602151AE7A8686ABD5EF4BB564073FAAEC7514F8C061E6F8F9BA87CF92
	486612A3E71CD96B99B4A4A6A66B3C8BE4300E7C3A38DF2B106409659A6579C0
	A6EB60DFEBEAD5DFB6A170209CC8EC3ED8F65F4E633FBEAE7E55650FBF975938
	E37F7FF080BDDEFA5EACBB63D8BEAEDE07BCE33F27467168FB9E134AF6F0BDAE
	56082FEA607DFFF9EEB87F5AB7F022525984970EE2FCF31541B004E9A5281CC2
	8B93C27BF27D7714EA40784912C410C171E6185F57EB24F7D1FE1E1C0D58B7F0
	496222C1A7E4741129A0BE943C8B019FD55E63F52FB7CE2725C26B034E668EF1
	75D52792C4630F763276A75E2D6B11870822410CF00D2960449258F0298987AB
	68A7DDE236C6E6A7F48D09A092CC4AC49005F48F8B50290A1B053E70B8ECD341
	5489B3FDB1EA6292023ECDAB221A7C96DFF8AFCD44FEE9105C0F8F7C840F5244
	C93DAD8DB30EFCD68099E59520BCD4344DBA6CD24CAD9FD26767B324CAFF37F5
	62D5A4AD56E5B35A5372EB7C99BC8E72FEAB55B3328D490F4D9D368D49D334D3
	AEE74BAA0CE1F5C62D9A55532F4CBB8EEE204CEA6A299224C9254AFAD9C5EA4D
	B3581E368765D3B407512F6A9122CF9225228956EFD37451D775F3CCD48B3A95
	5C2A83C85AEAF9A27E562F9D4B2B31168F22BED1C5E2BEF2F82BF4A4273DE949
	FF03200856B53048B87E0000000049454E44AE426082
	]]>
</Picture>

<Copyright SectVersion="1" SectionFlags="0" SubIdent="0">
	<Author>GRAPHISOFT</Author>
	<License>
		<Type>CC BY-ND</Type>
		<Version>3.0</Version>
	</License>
</Copyright>

</Symbol>
