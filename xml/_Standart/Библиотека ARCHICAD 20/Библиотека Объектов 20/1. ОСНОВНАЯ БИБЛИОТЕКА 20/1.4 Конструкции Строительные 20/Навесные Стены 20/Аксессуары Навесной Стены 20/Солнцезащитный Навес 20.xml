<?xml version="1.0" encoding="UTF-8"?>
<Symbol IsArchivable="false" IsPlaceable="true" MainGUID="6BB482FC-7132-4863-8EEC-B5F50002670A" MigrationValue="Normal" Owner="1196638531" Signature="1196644685" Version="38">
<Ancestry SectVersion="1" SectionFlags="0" SubIdent="0" Template="false">
	<MainGUID>F938E33A-329D-4A36-BE3E-85E126820996</MainGUID>
	<MainGUID>103E8D2C-8230-42E1-9597-46F84CCE28C0</MainGUID>
	<MainGUID>784EAEA1-5041-4AA6-B6F4-EF263A891EE7</MainGUID>
	<MainGUID>AAB48AEB-4682-4E5A-8DE5-8AEA7FF52A61</MainGUID>
	<MainGUID>BF777B36-1390-4EAE-B083-17ECA005F3B4</MainGUID>
	<MainGUID>0C0B5B7F-7034-4652-B5F9-631B76144290</MainGUID>
</Ancestry>

<CalledMacros SectVersion="2" SectionFlags="0" SubIdent="0">
	<Macro>
		<MName><![CDATA["FM_types"]]></MName>
		<MainGUID>2759D2DF-AA8E-44D1-AD1D-261581266B34</MainGUID>
	</Macro>
</CalledMacros>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_3D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
![#COMPATIBILITY] - START

if iLouverMethod  = -1 then
	iLouverMethod = LOUVER_ENDS
endif

![#COMPATIBILITY] - END

gosub "GetLouverMethod"

unID = 1
if not (gs_shadow) then shadow off
if gs_detlevel_3d_m = 1 then
	resol 8
else
	resol gs_resol
endif
pen gs_cont_pen

sect_fill gs_sect_fill, gs_sect_bg_pen, gs_sect_fill_pen, gs_sect_cont_pen

if AC_globalZDir[1][3] < 0 then mulz -1

! --- select offset parameter to use ----------------------------------------
if not(bArmLeft) then
	deltaA1 = AC_deltaABeg + gs_deltaF1
else
	deltaA1 = AC_deltaABeg + gs_deltaA1
endif
if not(bArmRight) then
	deltaA2 = -AC_deltaAEnd + gs_deltaF2
else
	deltaA2 = -AC_deltaAEnd + gs_deltaA2
endif


! --- defining left and right end angles -------------------------------------
if AC_validCellDir1 then
	if abs (AC_leftCellNormalDir [1][2]) < eps then
		leftAngle  =  90  + gs_rotation_horizontal_left
	else
		leftAngle  =   -atn (AC_leftCellNormalDir [1][1]  / AC_leftCellNormalDir [1][2])  + gs_rotation_horizontal_left
	endif
else
	leftAngle = gs_rotation_horizontal_left
endif

if AC_validCellDir2 then
	if abs (AC_rightCellNormalDir [1][2]) < eps then
		rightAngle =  90 + gs_rotation_horizontal_right
	else
		rightAngle =   -atn (AC_rightCellNormalDir [1][1] / AC_rightCellNormalDir [1][2]) + gs_rotation_horizontal_right
	endif
else
	rightAngle = gs_rotation_horizontal_right
endif

armThickness_left  = gs_arm_thickness
armThickness_right = gs_arm_thickness

! --- arms dimension corrections -----------------------------------------------

if (gs_rotation_vertical + 90) % 360 < 180 then sgn_length = 1 else sgn_length = -1
if (abs(gs_rotation_vertical) + 90 + EPS) % 180 < 2 * EPS then
	armLength_left = AC_width * sgn(180 - gs_rotation_vertical)
	armLength_right = AC_width * sgn(180 - gs_rotation_vertical)
	leftVerticalAngle  = 90
	rightVerticalAngle = 90
	armHeight_left  = AC_height
	armHeight_right = AC_height
	startAngleCorrection_left  = 0
	startAngleCorrection_right = 0
else
	armLength_left = AC_width * sgn_length * sqr (1 + cos (gs_rotation_vertical) * cos (gs_rotation_vertical) * tan (leftAngle) * tan (leftAngle))
	armLength_right = AC_width * sgn_length * sqr (1 + cos (gs_rotation_vertical) * cos (gs_rotation_vertical) * tan (rightAngle) * tan (rightAngle))
	leftVerticalAngle  = atn (tan(gs_rotation_vertical) * cos (leftAngle))
	rightVerticalAngle = atn (tan(gs_rotation_vertical) * cos (rightAngle))
	armHeight_left  = AC_height * cos (leftVerticalAngle)  / cos (gs_rotation_vertical)
	armHeight_right = AC_height * cos (rightVerticalAngle) / cos (gs_rotation_vertical)
	startAngleCorrection_left  = (armHeight_left  / 2) * tan (leftVerticalAngle)
	startAngleCorrection_right = (armHeight_right / 2) * tan (rightVerticalAngle)
endif

s = AC_height/2 * sin (gs_rotation_vertical)

if (abs(leftVerticalAngle) + EPS) % 90 < 2 * EPS then
	endAngleCorrection_left = 0
else
	s2_left = s / cos (leftAngle)
	endAngleCorrection_left = s2_left / cos (leftVerticalAngle) - armHeight_left/2 * tan (leftVerticalAngle)
endif

if (abs(rightVerticalAngle) + EPS) % 90 < 2 * EPS then
	endAngleCorrection_right = 0
else
	s2_right = s / cos (rightAngle)
	endAngleCorrection_right = s2_right / cos (rightVerticalAngle) - armHeight_right/2 * tan (rightVerticalAngle)
endif

! --- main hotspots - length and angle editing ---------------------------------
add 0, gs_offset_horizontal, gs_offset_vertical
hotspot -a/2,					0, 0, unID, AC_deltaABeg, 1 +128	: unID = unID + 1
hotspot -a/2 - 1,				0, 0, unID, AC_deltaABeg, 3			: unID = unID + 1
hotspot -a/2 + AC_deltaABeg,	0, 0, unID, AC_deltaABeg, 2			: unID = unID + 1

hotspot  a/2,					0, 0, unID, AC_deltaAEnd, 1 + 128	: unID = unID + 1
hotspot  a/2 - 1,				0, 0, unID, AC_deltaAEnd, 3			: unID = unID + 1
hotspot  a/2 + AC_deltaAEnd,	0, 0, unID, AC_deltaAEnd, 2			: unID = unID + 1
del 1

!valószínűleg régről bentmaradt hotspot, de rossz helyen van, a right arm végével van fedésben a legtöbb esetben
!ilyenünk már van lejjebb, de a user ne vesszen hotspotot
add A/2 - deltaA2, gs_offset_horizontal, AC_width * sin(gs_rotation_vertical) + gs_offset_vertical
hotspot -AC_width * cos(gs_rotation_vertical) * tan(gs_rotation_horizontal_right), AC_width * cos(gs_rotation_vertical), 0,	unID : unID = unID + 1
del 1

!left arm angle
add -A/2 + deltaA1, gs_offset_horizontal, AC_width * sin(gs_rotation_vertical) + gs_offset_vertical
hotspot 0, 0, -1,																											unID, gs_rotation_horizontal_left, 7 : unID = unID + 1
hotspot 0, 0, 0,																											unID, gs_rotation_horizontal_left, 6 : unID = unID + 1
hotspot 0, AC_width * cos(gs_rotation_vertical), 0,																			unID, gs_rotation_horizontal_left, 4 : unID = unID + 1
hotspot -AC_width * cos(gs_rotation_vertical) * tan(gs_rotation_horizontal_left), AC_width * cos(gs_rotation_vertical), 0,	unID, gs_rotation_horizontal_left, 5 : unID = unID + 1
del 1

!right arm angle
add A/2 - deltaA2, gs_offset_horizontal, AC_width * sin(gs_rotation_vertical) + gs_offset_vertical
hotspot 0, 0, -1,																											unID, gs_rotation_horizontal_right, 7 : unID = unID + 1
hotspot 0, 0, 0,																											unID, gs_rotation_horizontal_right, 6 : unID = unID + 1
hotspot 0, AC_width * cos(gs_rotation_vertical), 0,																			unID, gs_rotation_horizontal_right, 4 : unID = unID + 1
hotspot -AC_width * cos(gs_rotation_vertical) * tan(gs_rotation_horizontal_right), AC_width * cos(gs_rotation_vertical), 0,	unID, gs_rotation_horizontal_right, 5 : unID = unID + 1
del 1


add -a/2 + deltaA1, gs_offset_horizontal, gs_offset_vertical


! --- left arm ---
material gs_material_arm
if bArmLeft then
	rotz 90 + leftAngle
	roty -leftVerticalAngle
	rotx 90

	addz -armThickness_left / 2

	if bRounded then
		prism_ 5, armThickness_left,
			 -startAngleCorrection_left,				-armHeight_left/2, 	15,
			  armlength_left - armHeight_left/2,		-armHeight_left/2, 	79,
			  armlength_left - armHeight_left/2,  		 0,					900,
			  armlength_left - armHeight_left/2,  		 armHeight_left/2, 	1079,
			  startAngleCorrection_left,	 			 armHeight_left/2,	15
	else
		prism_ 4, armThickness_left,
			-startAngleCorrection_left,					-armHeight_left/2, 	15,
			 armlength_left + endAngleCorrection_left, 	-armHeight_left/2, 	15,
			 armlength_left - endAngleCorrection_left,   armHeight_left/2, 	15,
			 startAngleCorrection_left, 				 armHeight_left/2,	15
	endif
	del 4
endif

! --- right arm ---
material gs_material_arm
if bArmRight then
	addx A - deltaA1 - deltaA2
	rotz 90 + rightAngle
	roty -rightVerticalAngle
	rotx 90

	addz -armThickness_right / 2

	if bRounded then
		prism_ 5, armThickness_right,
			-startAngleCorrection_right,				-armHeight_right/2, 	15,
			 armlength_right - armHeight_right/2,		-armHeight_right/2, 	79,
			 armlength_right - armHeight_right/2, 		 0,						900,
			 armlength_right - armHeight_right/2,  		 armHeight_right/2, 	1079,
			 startAngleCorrection_right, 				 armHeight_right/2,		15
	else
		prism_ 4, armThickness_right,
			-startAngleCorrection_right, 					-armHeight_right/2, 15,
			 armlength_right + endAngleCorrection_right,	-armHeight_right/2, 15,
			 armlength_right - endAngleCorrection_right,     armHeight_right/2,	15,
			 startAngleCorrection_right, 					 armHeight_right/2,	15
	endif
	del 5
endif


! --- defining cutting planes ---

rotz leftAngle
roty 90
if bArmLeft then addz armThickness_left / 2
cutplane 1, 1, 0, 1
del 2
if bArmLeft then del 1

addx a - deltaA1 - deltaA2
rotz rightAngle
roty 90
if bArmRight then addz -armThickness_right / 2
cutplane 1, 1, 0, 0
del 3
if bArmRight then del 1


! --- vertical rotation edit hotspots ---
addx A/2 - deltaA1
hotspot -1, 0, 0,																		unID, gs_rotation_vertical, 7		: unID = unID + 1
hotspot 0, 0, 0,																		unID, gs_rotation_vertical, 6		: unID = unID + 1
hotspot 0, AC_width, 0,																	unID, gs_rotation_vertical, 4 + 128	: unID = unID + 1
hotspot 0, AC_width * cos(gs_rotation_vertical), AC_width * sin(gs_rotation_vertical),	unID, gs_rotation_vertical, 5		: unID = unID + 1
del 1

rotx gs_rotation_vertical

! --- arm/frame offset edit hotspots ---
addz AC_height / 2
if bArmLeft then
	hotspot -gs_deltaA1, 0, 0, 		unID, gs_deltaA1, 1 + 128	: unID = unID + 1
	hotspot -gs_deltaA1 - 1, 0, 0,	unID, gs_deltaA1, 3			: unID = unID + 1
	hotspot 0, 0, 0, 				unID, gs_deltaA1, 2			: unID = unID + 1
else
	hotspot -gs_deltaF1, 0, 0, 		unID, gs_deltaF1, 1 + 128	: unID = unID + 1
	hotspot -gs_deltaF1 - 1, 0, 0,	unID, gs_deltaF1, 3			: unID = unID + 1
	hotspot 0, 0, 0, 				unID, gs_deltaF1, 2			: unID = unID + 1
endif

addx A - deltaA1 - deltaA2

if bArmRight then
	hotspot gs_deltaA2, 0, 0, 		unID, gs_deltaA2, 1 + 128	: unID = unID + 1
	hotspot gs_deltaA2 + 1, 0, 0,	unID, gs_deltaA2, 3			: unID = unID + 1
	hotspot 0, 0, 0, 				unID, gs_deltaA2, 2			: unID = unID + 1
else
	hotspot gs_deltaF2, 0, 0, 		unID, gs_deltaF2, 1 + 128	: unID = unID + 1
	hotspot gs_deltaF2 + 1, 0, 0,	unID, gs_deltaF2, 3			: unID = unID + 1
	hotspot 0, 0, 0, 				unID, gs_deltaF2, 2			: unID = unID + 1
endif
del 2


! --- rod ---

if gs_rod then
	material gs_material_rod
	addx -abs (AC_width * tan (leftAngle)) - gs_offset_horizontal / cos (leftAngle)
	addy (AC_width - AC_height/2)
	roty 90

	cylind a - deltaA1 - deltaA2 + abs (AC_width * tan (leftAngle)) + abs (AC_width * tan (rightAngle)) + gs_offset_horizontal / cos (leftAngle) + gs_offset_horizontal / cos (rightAngle), gs_rod_radius

	del 3
endif


! --- end frame ---

if bEndFrame then
	material gs_material_arm
	addx -abs (AC_width * tan (leftAngle))  - gs_offset_horizontal / cos (leftAngle)

	addy (AC_width - gs_arm_thickness)
	addz -AC_height / 2
	prism 4, AC_height,
		0, 0,
		0, gs_arm_thickness,
		a - deltaA1 - deltaA2 + abs (AC_width * tan (leftAngle)) + abs (AC_width * tan (rightAngle)) + gs_offset_horizontal / cos (leftAngle) + gs_offset_horizontal / cos (rightAngle), gs_arm_thickness,
		a - deltaA1 - deltaA2 + abs (AC_width * tan (leftAngle)) + abs (AC_width * tan (rightAngle)) + gs_offset_horizontal / cos (leftAngle) + gs_offset_horizontal / cos (rightAngle), 0
	del 3
endif

! --- slabs ---

if  numLamelles > 0 then
	if bAutoLouverWidth then
		if abs (gs_lamelles_angle) > 0 then
			widthLamelle = abs(AC_height / sin (gs_lamelles_angle)) / 2
		else
			widthLamelle = maxLamelleDist
		endif
		widthLamelle = min (widthLamelle, maxLamelleDist, AC_Height)
	else
		widthLamelle = gs_lamelles_width
	endif

	material gs_material_lamella
	addx -abs (AC_width * tan (leftAngle))  - gs_offset_horizontal / cos (leftAngle)
	addy AC_Height
	moveLamelle = widthLamelle/2
	if iLouverMethod = LOUVER_BY_NUM or iLouverMethod = LOUVER_BY_DIST then
		moveLamelle = -maxLamelleDist/2
		addy freeLength
	endif

	for i = 1 to numLamelles
		numDel = 0
		if noFrame = 0 or iLouverMethod = LOUVER_ENDS then
			addy moveLamelle
			numDel = numDel + 1
		endif
		rotx -gs_lamelles_angle
		addz -gs_lamelles_thickness/2
		prism 4, gs_lamelles_thickness,
			0, widthLamelle / 2,
			a - deltaA1 - deltaA2 + abs (AC_width * tan (leftAngle)) + abs (AC_width * tan (rightAngle)) + gs_offset_horizontal / cos (leftAngle) + gs_offset_horizontal / cos (rightAngle), widthLamelle / 2,
			a - deltaA1 - deltaA2 + abs (AC_width * tan (leftAngle)) + abs (AC_width * tan (rightAngle)) + gs_offset_horizontal / cos (leftAngle) + gs_offset_horizontal / cos (rightAngle), -widthLamelle / 2,
			0, -widthLamelle / 2
		del 2
		del numDel
		addy bFromEnd*maxLamelleDist
	next i

	del i-1
	if iLouverMethod = LOUVER_BY_NUM or iLouverMethod = LOUVER_BY_DIST then del 1
	del 2
endif

cutend
cutend

if AC_globalZDir[1][3] < 0 then del 1

]]>
</Script_3D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_2D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
if GLOB_CONTEXT = 5 then
	pen gs_cont_pen
	project2 3, 270, 2
endif
]]>
</Script_2D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_1D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
eps = 0.00001

LOUVER_ENDS = 1
LOUVER_BY_NUM = 2
LOUVER_BY_DIST = 3

noFrame = 0
if not(bEndFrame) and not(gs_rod) then noFrame = 1
if noFrame = 1 then
	freeLength = AC_width - AC_height/2 - AC_height
else
	freeLength = AC_width - not(gs_rod)*bEndFrame * gs_arm_thickness - gs_rod * (gs_rod_radius+AC_Height/2) - AC_height
endif
maxLamelleDist = freeLength

bFromEnd = -1			!for old version

goto "MasterEnd"

"GetLouverMethod":

	if iLouverMethod = LOUVER_BY_NUM then
		numLamelles = gs_lamelles
		if numLamelles > 0 then
			maxLamelleDist = freeLength / (numLamelles-noFrame*0.5)
		endif
	endif
	if iLouverMethod = LOUVER_BY_DIST then
		maxLamelleDist = gs_lamelles_axis_dist
		numLamelles = int((freeLength - noFrame*maxLamelleDist/2) / gs_lamelles_axis_dist) + 1*noFrame
	endif
	if iLouverMethod = LOUVER_ENDS then
		numLamelles = gs_lamelles
		if numLamelles < 3 and numLamelles > 0 then
			maxLamelleDist = (AC_width -  gs_rod * (gs_rod_radius + AC_height/2) - AC_height * 2)
		endif
		if numLamelles > 2 then
			maxLamelleDist = (AC_width -  gs_rod * (gs_rod_radius + AC_height/2) - AC_height * 2) / (numLamelles-1)
		endif
		bFromEnd = 1
	endif
return

"MasterEnd":
]]>
</Script_1D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_PR SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_PR>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_UI SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_UI>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_VL SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
![#COMPATIBILITY] - START

if iLouverMethod = -1 then
	bDefaultElem = (GLOB_INTGUID = "" | GLOB_INTGUID = "{00000000-0000-0000-0000-000000000000}")

	if bDefaultElem then
		iLouverMethod = LOUVER_ENDS
	endif
endif

gosub "GetLouverMethod"


![#COMPATIBILITY] - END

call "FM_types" parameters all

values "gs_detlevel_3d" `Детальный`, `Простой`
values "gs_detlevel_3d_m" 2, 1
values "gs_resol" range [4,)

if GLOB_MODPAR_NAME = "gs_detlevel_3d" then
	if gs_detlevel_3d = `Простой` then gs_detlevel_3d_m = 1
	if gs_detlevel_3d = `Детальный` then gs_detlevel_3d_m = 2
	parameters gs_detlevel_3d_m = gs_detlevel_3d_m
else
	if gs_detlevel_3d_m = 1 then gs_detlevel_3d = `Простой`
	if gs_detlevel_3d_m = 2 then gs_detlevel_3d = `Детальный`
	parameters gs_detlevel_3d = gs_detlevel_3d
endif

if gs_detlevel_3d_m < 2 then
	hideparameter "gs_resol"
	lock "gs_resol"
endif

values "gs_rod_radius" range [0, AC_height/2]

if not (gs_rod) then hideparameter "gs_rod_radius"

if bRounded then
	bEndFrame = 0
	parameters bEndFrame = bEndFrame
	lock "bEndFrame"
endif

DIM stLouverMethod[3]
	stLouverMethod[1] = `между Концами`
	stLouverMethod[2] = `по Количеству`
	stLouverMethod[3] = `по Расстоянию`

values "gs_louver_method" stLouverMethod
values "iLouverMethod" 1,2,3

if GLOB_MODPAR_NAME = "gs_louver_method" then
	if gs_louver_method = stLouverMethod[1] then iLouverMethod = LOUVER_ENDS
	if gs_louver_method = stLouverMethod[2] then iLouverMethod = LOUVER_BY_NUM
	if gs_louver_method = stLouverMethod[3] then iLouverMethod = LOUVER_BY_DIST
	parameters iLouverMethod = iLouverMethod
else
	if iLouverMethod = LOUVER_ENDS then gs_louver_method = stLouverMethod[1]
	if iLouverMethod = LOUVER_BY_NUM then gs_louver_method = stLouverMethod[2]
	if iLouverMethod = LOUVER_BY_DIST then gs_louver_method = stLouverMethod[3]
	parameters gs_louver_method = gs_louver_method
endif

if iLouverMethod = LOUVER_BY_NUM or iLouverMethod = LOUVER_ENDS then
	lock "gs_lamelles_axis_dist"
	hideparameter "gs_lamelles_axis_dist"
endif
if iLouverMethod = LOUVER_BY_DIST then
	lock "gs_lamelles"
	hideparameter "gs_lamelles"
endif
if iLouverMethod = LOUVER_ENDS then
	bAutoLouverWidth = 1
	parameters bAutoLouverWidth = bAutoLouverWidth
	lock "bAutoLouverWidth"
	hideparameter "bAutoLouverWidth"
endif
if bAutoLouverWidth then
	lock "gs_lamelles_width"
	hideparameter "gs_lamelles_width"
endif
values "gs_lamelles" range [0,)
values "gs_lamelles_angle" range [-90, 90]
values "gs_lamelles_width" range (0, maxLamelleDist]
values "gs_lamelles_axis_dist" range (0, freeLength]

if not(bArmLeft | bArmRight) then
	lock "gs_arm_thickness", "AC_width", "AC_height", "bRounded"
endif
if not(bArmLeft) then
	lock "gs_deltaA1"
else
	lock "gs_deltaF1"
endif
if not(bArmRight) then
	lock "gs_deltaA2"
else
	lock "gs_deltaF2"
endif
]]>
</Script_VL>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Comment SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Comment>

<ParamSection SectVersion="26" SectionFlags="0" SubIdent="0">
	<ParamSectHeader>
		<Version>26</Version>
		<AutoHotspots>false</AutoHotspots>
		<StatBits>
			<STBit_FixSize/>
		</StatBits>
		<WDLeftFrame>0</WDLeftFrame>
		<WDRightFrame>0</WDRightFrame>
		<WDTopFrame>0</WDTopFrame>
		<WDBotFrame>0</WDBotFrame>
		<LayFlags>65535</LayFlags>
		<WDMirrorThickness>0</WDMirrorThickness>
		<WDWallInset>0</WDWallInset>
		<SymbolColor>0</SymbolColor>
	</ParamSectHeader>
	<Parameters>
		<Length Name="A">
			<Description><![CDATA["Размер 1"]]></Description>
			<Fix/>
			<Value>2</Value>
		</Length>
		<Length Name="B">
			<Description><![CDATA["Размер 2"]]></Description>
			<Fix/>
			<Value>1</Value>
		</Length>
		<Length Name="ZZYZX">
			<Description><![CDATA["Высота"]]></Description>
			<Fix/>
			<Value>1</Value>
		</Length>
		<Boolean Name="AC_show2DHotspotsIn3D">
			<Description><![CDATA["Показ Узловых 2D Точек в 3D"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="ac_bottomlevel">
			<Description><![CDATA["Отметка Низа"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="ac_toplevel">
			<Description><![CDATA["Отметка Верха"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="AC_deltaABeg">
			<Description><![CDATA["Смещение со Стороны 1"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="AC_deltaAEnd">
			<Description><![CDATA["Смещение со Стороны 2"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>

		<!-- Positioning: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="Positioning">
			<Description><![CDATA["Расположение"]]></Description>
		</Title>
		<Length Name="gs_offset_vertical">
			<Description><![CDATA["Вертикальное Расположение"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_offset_horizontal">
			<Description><![CDATA["Горизонтальное Расположение"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Angle Name="gs_rotation_vertical">
			<Description><![CDATA["Поворот по Вертикали"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Angle Name="gs_rotation_horizontal_left">
			<Description><![CDATA["Угол Слева"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Angle Name="gs_rotation_horizontal_right">
			<Description><![CDATA["Угол Справа"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>

		<!-- Arm: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="Arm">
			<Description><![CDATA["Штанга"]]></Description>
		</Title>
		<Boolean Name="bArmLeft">
			<Description><![CDATA["Штанга со Стороны 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="gs_deltaA1">
			<Description><![CDATA["Смещение Штанги 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Boolean Name="bArmRight">
			<Description><![CDATA["Штанга со Стороны 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="gs_deltaA2">
			<Description><![CDATA["Смещение Штанги 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_arm_thickness">
			<Description><![CDATA["Толщина Штанги"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.01</Value>
		</Length>
		<Length Name="AC_width">
			<Description><![CDATA["Длина Штанги"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1.2</Value>
		</Length>
		<Length Name="AC_height">
			<Description><![CDATA["Высота Штанги"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.16</Value>
		</Length>
		<Boolean Name="bRounded">
			<Description><![CDATA["Закругленный Конец"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- Panel: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="Panel">
			<Description><![CDATA["Панель"]]></Description>
		</Title>
		<Boolean Name="gs_rod">
			<Description><![CDATA["Стержень"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="gs_rod_radius">
			<Description><![CDATA["Радиус Стержня"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.04</Value>
		</Length>
		<Boolean Name="bEndFrame">
			<Description><![CDATA["Рама в Конце"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="gs_deltaF1">
			<Description><![CDATA["Смещение Рамы со Стороны 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_deltaF2">
			<Description><![CDATA["Смещение Рамы со Стороны 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<String Name="gs_louver_method">
			<Description><![CDATA["Расположение Пластин"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["между Концами"]]></Value>
		</String>
		<Integer Name="gs_lamelles">
			<Description><![CDATA["Количество Пластин"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>6</Value>
		</Integer>
		<Length Name="gs_lamelles_axis_dist">
			<Description><![CDATA["Расстояние между Осями Пластин"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.175</Value>
		</Length>
		<Boolean Name="bAutoLouverWidth">
			<Description><![CDATA["Автоматическая Ширина Пластин"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="gs_lamelles_width">
			<Description><![CDATA["Ширина Пластин"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.11</Value>
		</Length>
		<Length Name="gs_lamelles_thickness">
			<Description><![CDATA["Толщина Пластин"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.005</Value>
		</Length>
		<Angle Name="gs_lamelles_angle">
			<Description><![CDATA["Поворот Ламелей"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>45</Value>
		</Angle>

		<!-- gs_2D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_2D_representation">
			<Description><![CDATA["Реквизиты Сечения/Контура"]]></Description>
			<Fix/>
		</Title>
		<PenColor Name="gs_cont_pen">
			<Description><![CDATA["Перо Сечения/Контура"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</PenColor>
		<PenColor Name="gs_sect_cont_pen">
			<Description><![CDATA["Перо Контура Сечения"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>44</Value>
		</PenColor>
		<FillPattern Name="gs_sect_fill">
			<Description><![CDATA["Штриховка Сечения"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>64</Value>
		</FillPattern>
		<PenColor Name="gs_sect_fill_pen">
			<Description><![CDATA["Перо Штриховки Сечения"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_sect_bg_pen">
			<Description><![CDATA["Перо Фона Штриховки Сечения"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<FillPattern Name="gs_fill_type">
			<Description><![CDATA["Штриховка Сечения"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_fill_pen">
			<Description><![CDATA["Перо Штриховки Сечения"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_back_pen">
			<Description><![CDATA["Перо Фона Штриховки Сечения"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>19</Value>
		</PenColor>

		<!-- gs_3D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_3D_representation">
			<Description><![CDATA["3D-отображение"]]></Description>
		</Title>
		<Boolean Name="gs_shadow">
			<Description><![CDATA["Отбрасывание Теней"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<String Name="gs_detlevel_3d">
			<Description><![CDATA["Уровень 3D-деталей"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Детальный"]]></Value>
		</String>
		<Integer Name="gs_detlevel_3d_m">
			<Description><![CDATA["Уровень 3D-деталей"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="gs_resol">
			<Description><![CDATA["Аппроксимация"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>8</Value>
		</Integer>

		<!-- Materials: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="Materials">
			<Description><![CDATA["Покрытия"]]></Description>
		</Title>
		<Material Name="gs_material_arm">
			<Description><![CDATA["Штанга"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>11</Value>
		</Material>
		<Material Name="gs_material_lamella">
			<Description><![CDATA["Пластины"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>11</Value>
		</Material>
		<Material Name="gs_material_rod">
			<Description><![CDATA["Стержень"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>11</Value>
		</Material>

		<!-- Others: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="Others">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
		</Title>
		<Angle Name="leftAngle">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Angle Name="rightAngle">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Length Name="AC_globalZDir">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="3">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0</AVal>
				<AVal Column="3" Row="1">0.001</AVal>
			</ArrayValues>
		</Length>
		<Boolean Name="AC_validCellAngle1">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="AC_validCellAngle2">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Angle Name="AC_cellAngle1">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>90</Value>
		</Angle>
		<Angle Name="AC_cellAngle2">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>90</Value>
		</Angle>
		<Boolean Name="AC_validCellDir1">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="AC_validCellDir2">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="AC_leftCellNormalDir">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="3">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">1</AVal>
				<AVal Column="3" Row="1">0</AVal>
			</ArrayValues>
		</Length>
		<Length Name="AC_rightCellNormalDir">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="3">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">1</AVal>
				<AVal Column="3" Row="1">0</AVal>
			</ArrayValues>
		</Length>
		<Integer Name="iLouverMethod">
			<Description><![CDATA["Расположение Пластин"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>-1</Value>
		</Integer>

		<!-- gs_list: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_list">
			<Description><![CDATA["Параметры Спецификаций"]]></Description>
			<Fix/>
		</Title>
		<RealNum Name="gs_list_cost">
			<Description><![CDATA["Цена"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="gs_list_manufacturer">
			<Description><![CDATA["Производитель"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_note">
			<Description><![CDATA["Примечания"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_location">
			<Description><![CDATA["Расположение"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_accessories">
			<Description><![CDATA["Аксессуары"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_Type">
			<Description><![CDATA["Тип Группы"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Другой"]]></Value>
		</String>
		<Integer Name="iFMType">
			<Description><![CDATA["Тип Группы"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>25</Value>
		</Integer>
		<String Name="FM_InventoryNumber">
			<Description><![CDATA["Инвентарный Номер"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_SerialNumber">
			<Description><![CDATA["Серийный Номер"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_ProductionYear">
			<Description><![CDATA["Год Производства"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<RealNum Name="FM_ObjectWeight">
			<Description><![CDATA["Вес Изделия"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="FM_ObjectWeightUnit">
			<Description><![CDATA["Единица Веса"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["кг"]]></Value>
		</String>
		<String Name="gs_list_custom1">
			<Description><![CDATA["Пользовательское Значение 1"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom2">
			<Description><![CDATA["Пользовательское Значение 2"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom3">
			<Description><![CDATA["Пользовательское Значение 3"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom4">
			<Description><![CDATA["Пользовательское Значение 4"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom5">
			<Description><![CDATA["Пользовательское Значение 5"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
	</Parameters>
</ParamSection>

<Picture MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="0" length_in_bytes="3079" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000800000
	00800803000000F4E091F9000000C0504C5445FFFFFF797573656261817D7B89
	85829A95925D5B59444242353332AAA5A3B4B3B3918D8A716D6BA29D9ACBC5C2
	84807DB1ADABC2BEBB514E4C615E5BECEBEAD4D2D25B544B74706ED3CDC99590
	8EA5A09DB5B0AD64605D2D2B2AD9D2CEC6C0BC403E3C6C747C60584E43403DE1
	DAD5312E2BAEB2B5F1F0EEC4CCD4ABAEB133302CB4BBC1737A82BEC1C57C848C
	5C6166666D74595D61E2E0DEF0EEEE1C1B1B9BA3ACCBD0D58D90933E41454D51
	558A8E93221F1B24211E9A9EA2393D412F3235CBB16CE600000AF84944415478
	5EED99D76E2449B244D33D746AAD454941295A8B99B9FFFF57D723933DBBEF4C
	92C082D60D14C19753661E6E11009D57D3873EF4A10F7DE8431FFAD0873E94BF
	33DFF810BEA77D0608BE2880BF4F10A16FF9E847A8A47807BE203AF12386BD54
	12C3B78E1F60F6CF39F85CC90A65F4A673702BC203561EF7297EC3A38C5288DF
	CE7E0355457CCE0094124688B8D70AE55BAD44C12A12FA367EB547230C012A06
	52CA37D9878EDC135F02875E6914C2FAAEB9C795D212BB578F9F0354565222EA
	3D046D4180898BDCF9BA9188128BD78D1F663EF248AAB2EC23616CE8B1082C40
	705F9619BE66299839FD1E1A0EA5D20AA386FCE6AD706D3682C7A154999FA1FB
	9AF103F80811C861F8C951CAD0C90311CE7C2F21000020227F953924331E7D0E
	526699F679239594C21396562C87B1109CF559F62A73106085C03DA4F923175C
	DA732FC19DC181359D7BE43D564AEE572FE7823FF305874C6B853EE08F61008E
	258D211422B7FEA3397B570E4A2958B77B6156C57904520FA907523EFDA3396F
	945412B959BEE45C443968FBCB353BE9B30066F155D3B0AA54692468FC04E134
	7757A5B88C3CE44B0CA053E943B17AFC0C21E080A94E83A0C1B9F61009608063
	2A79EE72CF0272D4F69BADC98F6191D770E8D37D295A4FC9A79FE08192DC2984
	17288A0323318F0175A9C4D58AFC5C2CF8AA150CFAEB23332D1BB47CE4C26E83
	949CD74E2135F6F89D06104AF22F4E2BF2430EC080F910D0F8D37DCFDA966D8E
	0A85B8CD84F951A184E5F8FB88105E56E79BD93C00F9857E9FB2266EABEB6B8D
	41FB0B31773C3B06C873C15B90A45E6BC5DD6FABE13F71888001AAA66520D348
	98B891C3F19805C1AFAD348EF1026EC70F9C1A193629FD9CE28AFE4306F61F54
	1219942518D371A9AF8F551BF0DB4734F353C4A408E8DBFD2BA5D6A9E2EBF185
	C513BF09FA12E5C04DD7F1ED0FCAD8B47CFB28B78170974B1810A170AE94DEC8
	8DCC57BCFA3858B52DB75B5FBA9D6B1E9EFE4F092360BB7DC020089753EA7189
	98F95A29A9E56AFE5D6B3EAA109A3662A5D65A36DDE9FBC3C383311CB7DBED7D
	10CC5E5D5B7FA1242929312C568C7FCEBF47CE60A351B4A8F8E9FE094C1B29DC
	DE0A636696BBDC42219279AD56E3871C22C622A85A28D57EF84B99D844EA21E2
	DC35D5AE7CBC15CB23C489859801462AD26AF9BB1C1809206E41125FB76E7CBA
	925A83319895128411DC02823F7CA565A6B262B5EE6511F1FBC8B4007BADF7AC
	73DDABD309101FA4EC1598804B777E049AA5ACEDFE837B58297E8293A00AE206
	2AA535621699D3E9EA648C4C95DCF56DC0CA3477F2F65FBE9612D69ABF014EF8
	0858DC4555BFDFA0E99A14FFBE3B115F6CC9AA6DC55D29ECEBCF5DF8FFD82BC9
	CDD789DF5BF8158F5B463E55D9259DAF95FC452D7077B5FDA97BE5573BC9F2E5
	114A7C4EF5836BF11388384451C482CE3E7D867DE5265D7ABCD6BA44135E68FD
	23E1A765E639FFF241A90CF9CD3AFC96917D4EF12749C4FCFD75D52449B0B9BE
	3E2A01EAFE72BFBD1742ECD4DE774321BEFDE123C23AFE8B397C16018F63C6B2
	346D9369F2AE379BDFA569B9C2DBEDBD31BC9725C5112D4FAE02B4E5AFE3DF25
	B6156B92C68E7FD74ED3C4D5912EBF2476EF9E08254CD3A7D2E580D2CCFC8AF8
	2BCD3F177CC1B3A49EE367643FFC8A3F86D24B3ACF7CDDFE903FA59FF5D4365D
	1349A4046AB47C71CA57899FCFFE81D51D63FE66D3B8C4BFFBFEA0744B6BD03F
	6EB75CB054F6303AA6695D293337944AF5525CE5ABC46FC501822498E30F92BA
	0EEF6EBE3EA03BC57E9AC1EDDF26A8523A7EE756180A5F2A5949857215FF7943
	EE198F98F4EB86C17E2893A99EEE6EAE6E4C9424B1BF4BB3DBB6A3CF72AFAAA8
	99C74FF6B5E5AF31FF704EDF2E6096F57EA68F7FC5753DB9B67CDD3069ABDD2E
	EDE38E3EFB28A850354B6652CB54CB35F8C6F23945D026906EAE8FD76C8E9FAE
	1FD70D275155FD6E177731F11BAA9F4656F933DFD79ABF9C5F348CCD7848C600
	B2A3C620AC69FEA7BB9B531886575BC4DE4FE220DDF9ED796C45071273C7F83A
	F301BFE72BC46F875FF976FB38AB94968D5B17E1CDCD0DC53F8597ABAD2CD9CC
	DF75E7303054BFA0A4BDFE00CC0AF90BA273C6FDD49B12C6B2E3B041D97764FE
	C6BD21FF97BBFBED032431237EE24CA69DEB0FA5D248FC53BE42F7724609804C
	99DDBEE35FC7B80634277A7DDCCDFC2DB5EFCCAF26E2C7C42719D4927373B54E
	F7DA042802B5D95C0FBF37713D029E28FF84F097D3767B6B26E2A7FE789EDAF8
	D35299A87BA5B9FBF2EEB5BB4F23F0F93845E9F570FC9DD6E318287D4BE30FEB
	CBE58AFCBB891BED766C3C27719CFF797E22A012F9CBE38FE66FC0E23AB6E57B
	FC5D8D75CD36D74A7204F772F97B7BFB7DAE213F3A7F8EDBF8BCF89703C27DFB
	62FF31B1E7FFAC1EEDDDB7C932BF1E93DDE6F8973489FF7873F9B5DD0A370976
	A5DF9C3FC5C1BF7C5D55E2C5E73FE7E49FD1F4C1AB278FF9E9A60F7896520C74
	F907751D8B9B7BE28749B3DBF58143FCEE99AF3454DFCD4BFD87EC4FF906F6EE
	EB37D75017E32EDD1DE91B500D9B9BAD3DFE53E2113F3E8F71DB3DDF194A7114
	E6F4E28757F4CCAFC7C03E7D36CD341E0A37A37390520D473E3CE223889895BB
	2C217E302D5BEB29C5509C5EEA3FE7D12C6075ED556C4F776F7D38D4A11B6D8E
	695D276CD723DC069896BBBE0A9DB16B17FE812BD5A3705FDE7F21D8ED838058
	74FA53BF1D0F87D03DDDDCB99B1D0B7C6ABD8A278997963D3B3861D78D8BFFC8
	F291E6FF7219063ED407FBF2A4071FD92FA8F4EE2EDF46AAFC74478AA629E977
	BE7770A6AE5BEA6F84BDEA7B704FEBFCD123C3BAB6DB371CD944FEBF5D2E976F
	9762AC039FBE41CA6ABBFE653F9D93AEFBB4A4862A45AC5CD75945459A2DE5B3
	41C217DF2EDF48C558142163BB34B2FCAC6F5C53A5CD32F00994C41ED6E23BC5
	A0547A3CFE3E22E57F28887EF9561405B5EFADEFFB7542EDEBC74EDE71592CFE
	2BBD2ADF19E570AD3769E61587C3E9FB150550CCFCAF5B602CB5C7C06F9D4F5D
	6CCC0C4888EFF7603A6735855F060910937DF1F3717B4FFE0F6341ED7BFB2B89
	7765BAF33BA7E8E2D8294202B85CCB4A46E6CE5951FC8B574CB4FDDEA3FCF174
	1F8E07BAFDEEB7B7229CEA8AA640F593C4D6F08DC94565F99CF66F55E9017857
	9B0AA8F6A887CDD515D5EFDF619DF8BB8AD5543F7132030C1F8E12D295FD9342
	A5371E7D78108C452D9E1E896FEA30DEA57E348DC1C227B9386890BFC8FFDAFA
	7AD43321A1F5E7884F3F6FDD626AA97EA2CF07A9753803CE0674058A4FE47F75
	A92FD6D5A7C3981F00E05125E314EC887F3E879D14CF7CA61124DAFD5B5FA11A
	F2FC308E9FE783CEC23A0C363B3F389FEBA42B9EF99546AF575CAC4F5F765143
	537F5E9E1A74FC3C9A7F7BFE4CFC9C7EF12F1F5DE1BC92E4A0374BB87951D7A1
	018C9DCF5392D8FA2F9C10718F0D826B5E8B6F87000B7FAC6B3B894FC4EF62E2
	938C1EB4DF2027FEEB291CFEB1A33ED475BD003E4D5D775E7EAA86A18F5E974F
	822F40FEEBB05EA887A44B167E2ECA41627FFFBA7CE2A82F68FEF83F1749FCCC
	2F1AA591F751679C57D66518B47ECEFF3075C902183DA94120FF6E9C57171FBE
	F067FF53322D80902B1D35284EC67903FDF86266FE98FC177FCF9AECAB790B3E
	E1E49013609A92FA5FBE62E49FF86F23F78BA2454892C3333FDAEFA346BE1DDF
	16E20FDF8B9FF96EA055D4F46FC9B74338EAE93F7C6EF33F396FA87018C402E8
	1AAD3C8EE6ABEBBCA9E4C017FF8DDE7BDE83319DF3B60A9F863B02C41EF98F7C
	43F9BFB50AADF3CFC44F1B8EA625FE9BEBD7A0B0D7A517D1FC3BE73DA486E320
	3D0EA6759D7751A107E5035C19E2BF8FC4A0505D09E2BF9794D6EE7BF29D422A
	8FF8EFA89017CEFFAA3EF4A10F7DE8431FFA7FDF1DF188704C7DA50000000049
	454E44AE426082
	]]>
</Picture>

<Copyright SectVersion="1" SectionFlags="0" SubIdent="0">
	<Author>GRAPHISOFT</Author>
	<License>
		<Type>CC BY-ND</Type>
		<Version>3.0</Version>
	</License>
</Copyright>

<MigrationTable SectVersion="1" SectionFlags="0" SubIdent="0">
	<MigrationTableElement>
		<MainGUID>A9653396-991E-4303-B5BC-E3EF2D615E5E</MainGUID>
		<Version>19</Version>
		<Name><![CDATA[""]]></Name>
		<AutoMigration>false</AutoMigration>
	</MigrationTableElement>
</MigrationTable>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_FWM SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
actualGUID = FROM_GUID

! ==============================================================================
! Subroutines
! ==============================================================================

	_startID	= "A9653396-991E-4303-B5BC-E3EF2D615E5E"	!19
	_endID		= "6BB482FC-7132-4863-8EEC-B5F50002670A"	!20

gosub "repairoffsethorizontal_FWM"
gosub "change_armparams_FWM"

! ==============================================================================
! Set migration GUID
! ==============================================================================

setmigrationguid actualGUID

! ==============================================================================
end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! en
! ==============================================================================


! ==============================================================================
! Repair geometry with horizontal offset & vertical rotation
! ==============================================================================
"repairoffsethorizontal_FWM":
	!always migrate
return

! ==============================================================================
! Change Console, Arm and Frame parameters
! ==============================================================================
"change_armparams_FWM":
	if actualGUID = _startID then

		!deleted parameters
		bSuccess =	deleted_par_value("gs_nConsol_left", 	_nConsol_left) &\
					deleted_par_value("gs_nConsol_right", 	_nConsol_right) &\
					deleted_par_value("gs_casing_left", 	_casing_left) &\
					deleted_par_value("gs_casing_right", 	_casing_right) &\
					deleted_par_value("gs_gap_thickness", 	_gap_thickness)

		if	bSuccess then

			!transfer number of consoles settings
			if _nConsol_left = 0 then bArmLeft = 0 else bArmLeft = 1
			if _nConsol_right = 0 then bArmRight = 0 else bArmRight = 1

			!transfer offsets
			if _nConsol_left = 2 then
				gs_deltaA1 = (_gap_thickness + gs_arm_thickness) / 2
				gs_deltaF1 = _gap_thickness / 2
			else
				gs_deltaA1 = 0
				gs_deltaF1 = 0
			endif

			if _nConsol_right = 2 then
				gs_deltaA2 = (_gap_thickness + gs_arm_thickness) / 2
				gs_deltaF2 = _gap_thickness / 2
			else
				gs_deltaA2 = 0
				gs_deltaF2 = 0
			endif

			!don't migrate when casing has effect
			if	(_nConsol_left = 1 & _casing_left) |\
				(_nConsol_right = 1 & _casing_right) then

				_endID = ""
			else
				parameters	bArmLeft = bArmLeft,
							bArmRight = bArmRight,
							gs_deltaA1 = gs_deltaA1,
							gs_deltaA2 = gs_deltaA2,
							gs_deltaF1 = gs_deltaF1,
							gs_deltaF2 = gs_deltaF2
			endif
		else
			_endID = ""
		endif

		actualGUID = _endID
	endif
return

]]>
</Script_FWM>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_BWM SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
targetGUID = TO_GUID

! ==============================================================================
! Subroutines
! ==============================================================================

gosub "repairoffsethorizontal_BWM"
gosub "change_armparams_BWM"

! ==============================================================================
! Set migration GUID
! ==============================================================================

setmigrationguid targetGUID

! ==============================================================================
end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! en
! ==============================================================================


! ==============================================================================
! Repair geometry with horizontal offset & vertical rotation
! ==============================================================================
"repairoffsethorizontal_BWM":
	if targetGUID # "" then

		!very faulty in 19
		if abs(gs_offset_horizontal) > EPS & (abs(gs_rotation_vertical) + EPS) % 360 > 2 * EPS then
			targetGUID = ""
		endif
	endif
return


! ==============================================================================
! Change Console, Arm and Frame parameters
! ==============================================================================
"change_armparams_BWM":
	if targetGUID # "" then

		newparameter "gs_nConsol_left", "Integer"
		newparameter "gs_nConsol_right", "Integer"
		newparameter "gs_casing_left", "Boolean"
		newparameter "gs_casing_right", "Boolean"
		newparameter "gs_gap_thickness", "Length"

		!casing is off
		gs_casing_left = 0
		gs_casing_right = 0

		!set nConsol parameters
		if not(bArmLeft) then
			gs_nConsol_left = 0
		else
			if abs(gs_deltaA1) < EPS then
				gs_nConsol_left = 1
			else
				gs_nConsol_left = 2
			endif
		endif

		if not(bArmRight) then
			gs_nConsol_right = 0
		else
			if abs(gs_deltaA2) < EPS then
				gs_nConsol_right = 1
			else
				gs_nConsol_right = 2
			endif
		endif

		!transfer offset to gap parameter if possible
		if gs_nConsol_left = 2 then
			if	(gs_nConsol_right = 0 & abs(gs_deltaF2) < EPS) |\					!only zero offset allowed on other side
				(gs_nConsol_right = 1 & abs(gs_deltaA2) < EPS) |\					!only zero offset allowed on other side
				(gs_nConsol_right = 2 & abs(gs_deltaA1 - gs_deltaA2) < EPS) then	!only same offset allowed on other side

				gs_gap_thickness = gs_deltaA1
			else
				targetGUID = ""
			endif
		else
			if	(gs_nConsol_left = 0 & abs(gs_deltaF1) < EPS) |\					!only zero offset allowed on this side
				(gs_nConsol_left = 1 & abs(gs_deltaA1) < EPS) then					!only zero offset allowed on this side

				gs_gap_thickness = 0
			else
				targetGUID = ""
			endif
		endif
		if gs_nConsol_right = 2 then
			if	(gs_nConsol_left = 0 & abs(gs_deltaF1) < EPS) |\					!only zero offset allowed on other side
				(gs_nConsol_left = 1 & abs(gs_deltaA1) < EPS) |\					!only zero offset allowed on other side
				(gs_nConsol_left = 2 & abs(gs_deltaA1 - gs_deltaA2) < EPS) then		!only same offset allowed on other side

				gs_gap_thickness = gs_deltaA2
			else
				targetGUID = ""
			endif
		else
			if	(gs_nConsol_right = 0 & abs(gs_deltaF2) < EPS) |\					!only zero offset allowed on this side
				(gs_nConsol_right = 1 & abs(gs_deltaA2) < EPS) then					!only zero offset allowed on this side

				gs_gap_thickness = 0
			else
				targetGUID = ""
			endif
		endif


		if targetGUID # "" then
			parameters	gs_nConsol_left = gs_nConsol_left,
						gs_nConsol_right = gs_nConsol_right,
						gs_casing_left = gs_casing_left,
						gs_casing_right = gs_casing_right,
						gs_gap_thickness = gs_gap_thickness
		endif

	endif
return
]]>
</Script_BWM>

<Keywords SectVersion="1" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Keywords>

</Symbol>
