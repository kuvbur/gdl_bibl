<?xml version="1.0" encoding="UTF-8"?>
<Symbol IsArchivable="false" IsPlaceable="true" MainGUID="2E1512EA-366D-4657-BA34-162807024015" MigrationValue="Normal" Owner="1196638531" Signature="1196644685" Version="38">
<Ancestry SectVersion="1" SectionFlags="0" SubIdent="0" Template="false">
	<MainGUID>F938E33A-329D-4A36-BE3E-85E126820996</MainGUID>
	<MainGUID>103E8D2C-8230-42E1-9597-46F84CCE28C0</MainGUID>
	<MainGUID>784EAEA1-5041-4AA6-B6F4-EF263A891EE7</MainGUID>
	<MainGUID>0F059DC2-6053-11D7-9084-000393ABEA8E</MainGUID>
</Ancestry>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_3D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
!<ZsK>

if gs_detlevel_3D_m = DLEV3D_OFF then end

	endPoint = WALL_THICKNESS/2

	elevation = 0
	if AC_fit_to_wall_height then
		ZZYZX = WALL_HEIGHT
		if ABS(ac_wall_slant_angle1) > EPS then
			elevation = -GLOB_ELEVATION / sin (ac_wall_slant_angle1)
		endif
	endif

	if gs_useWallPen_3D then
		wallPen_3D = WALL_VIEW_PEN
	else
		wallPen_3D = gs_wallPen_3D
	endif

	if gs_useWallMat then
		wallMatLeft = 	WALL_MAT_A
		wallMatRight = 	WALL_MAT_B
		wallMatVert = 	WALL_MAT_EDGE
		wallMatHoriz = 	WALL_MAT_EDGE
	else
		wallMatLeft = 	matLeft
		wallMatRight = 	matRight
		wallMatVert = 	matEdge
		wallMatHoriz = 	matEdge
	endif

	dim trafo_array[][]

	ROTz -90
	numTrafo = 1
	trafo_array[numTrafo][1] = TRAFO_ROT_Z
	trafo_array[numTrafo][2] = -90

	ADDz elevation
	numTrafo = numTrafo + 1
	trafo_array[numTrafo][1] = TRAFO_ADD_Z
	trafo_array[numTrafo][2] = elevation

	pen wallPen_3D

	! Used for the cut part in the Section/Elevation window
	sect_fill WallFillType, WallFillBackPen, WallFillPen, WallLinePen, WallLineType

	if AC_CutWidth > EPS then
		bDoCut = 1
		for i = 1 to 2

			if ABS(GLOB_ELEVATION) < EPS or AC_fit_to_wall_height=1 then

					if ZZYZX < WALL_HEIGHT then
						tempHeight1 = ZZYZX
						mask1_WallHeight = 0
					else
						tempHeight1 = WALL_HEIGHT
						mask1_WallHeight = 1
					endif

						tempHeight2 = ZZYZX - WALL_HEIGHT
						mask1_BottomLine = 1

					if ABS(ZZYZX - WALL_HEIGHT) < EPS then tempEdge13 = 5 + 2*gs_useEndLine_3D
					if ZZYZX < WALL_HEIGHT then tempEdge13 = 5*gs_useEndLine_3D

					call "SkinRect" PARAMETERS trafo_array = trafo_array, numTrafo = numTrafo, gs_useWallMat = gs_useWallMat,
							startX = 0, startY = 0,
							endX = length, endY = WALL_THICKNESS,
							innerRadius = r0,
							incAngle = wallIncl,
							ac_wall_slant_angle1 = ac_wall_slant_angle1, ac_wall_slant_angle2 = ac_wall_slant_angle2,
							trapType = 1,
							bDoCut = bDoCut, height = tempHeight1,
							edge1 = 8 + 5, edge2 = 8 + 7*gs_useEndLine_3D, edge3 = 8 + tempEdge13 , edge4 = 8,
							matLeft = wallMatLeft, matRight = wallMatRight, matVert = wallMatVert, matHoriz = wallMatHoriz

					if ZZYZX > WALL_HEIGHT then
						ADDz WALL_HEIGHT-GLOB_ELEVATION
						numOwnTrafo = 1
						numTrafo = numTrafo + 1
						trafo_array[numTrafo][1] = TRAFO_ADD_Z
						trafo_array[numTrafo][2] = WALL_HEIGHT-GLOB_ELEVATION

						call "SkinRect" PARAMETERS trafo_array = trafo_array, numTrafo = numTrafo, gs_useWallMat = gs_useWallMat,
								startX = 0, startY = 0,
								endX = length, endY = WALL_THICKNESS,
								innerRadius = r0,
								incAngle = wallIncl,
								ac_wall_slant_angle1 = ac_wall_slant_angle1, ac_wall_slant_angle2 = ac_wall_slant_angle2,
								trapType = 1,
								bDoCut = bDoCut, height = tempHeight2,
								edge1 = 8, edge2 = 15 , edge3 = 15, edge4 = 8,
								matLeft = wallMatLeft, matRight = wallMatRight, matVert = wallMatVert, matHoriz = wallMatHoriz

						numTrafo = numTrafo - numOwnTrafo
						del 1
					endif
			endif


			if GLOB_ELEVATION > EPS and AC_fit_to_wall_height=0 then

					if (ZZYZX+GLOB_ELEVATION) <= WALL_HEIGHT then
						tempHeight1 = ZZYZX
					else
						tempHeight1 = WALL_HEIGHT-GLOB_ELEVATION
					endif

					if (ZZYZX+GLOB_ELEVATION) < WALL_HEIGHT then
						mask1_WallHeight = 0
					else
						mask1_WallHeight = 1
					endif

					if ABS(ZZYZX+GLOB_ELEVATION - WALL_HEIGHT) < EPS then tempEdge13 = 5 + 2*gs_useEndLine_3D
					if (ZZYZX+GLOB_ELEVATION) < WALL_HEIGHT then tempEdge13 = 7*gs_useEndLine_3D


						tempHeight2 = (ZZYZX+GLOB_ELEVATION)-WALL_HEIGHT
						mask1_BottomLine=0

					call "SkinRect" PARAMETERS trafo_array = trafo_array, numTrafo = numTrafo, gs_useWallMat = gs_useWallMat,
							startX = 0, startY = 0,
							endX = length, endY = WALL_THICKNESS,
							innerRadius = r0,
							incAngle = wallIncl,
							ac_wall_slant_angle1 = ac_wall_slant_angle1, ac_wall_slant_angle2 = ac_wall_slant_angle2,
							trapType = 1,
							bDoCut = bDoCut, height = tempHeight1,
							edge1 = 8 + 5*gs_useEndLine_3D, edge2 = 8 + 7*gs_useEndLine_3D, edge3 = 8 + tempEdge13, edge4 = 8,
							matLeft = wallMatLeft, matRight = wallMatRight, matVert = wallMatVert, matHoriz = wallMatHoriz

					if (ZZYZX+GLOB_ELEVATION) > WALL_HEIGHT then
						ADDz WALL_HEIGHT-GLOB_ELEVATION
						numOwnTrafo = 1
						numTrafo = numTrafo + 1
						trafo_array[numTrafo][1] = TRAFO_ADD_Z
						trafo_array[numTrafo][2] = WALL_HEIGHT-GLOB_ELEVATION

						call "SkinRect" PARAMETERS trafo_array = trafo_array, numTrafo = numTrafo, gs_useWallMat = gs_useWallMat,
								startX = 0, startY = 0,
								endX = length, endY = WALL_THICKNESS,
								innerRadius = r0,
								incAngle = wallIncl,
								ac_wall_slant_angle1 = ac_wall_slant_angle1, ac_wall_slant_angle2 = ac_wall_slant_angle2,
								trapType = 1,
								bDoCut = bDoCut, height = tempHeight2,
								edge1 = 8, edge2 = 15 , edge3 = 15, edge4 = 8,
								matLeft = wallMatLeft, matRight = wallMatRight, matVert = wallMatVert, matHoriz = wallMatHoriz

						numTrafo = numTrafo - numOwnTrafo
						del 1
					endif

			endif


			if GLOB_ELEVATION < -EPS and AC_fit_to_wall_height=0 then

						tempHeight1 = ABS(GLOB_ELEVATION)

					if ZZYZX >= WALL_HEIGHT + ABS(GLOB_ELEVATION) then
						tempHeight2 = WALL_HEIGHT
						mask1_WallHeight = 1
					else
						tempHeight2 = ZZYZX-ABS(GLOB_ELEVATION)
						tempEdge23 = 7*gs_useEndLine_3D
						mask1_WallHeight = 0
					endif

						tempHeight3 = ZZYZX - (WALL_HEIGHT + ABS(GLOB_ELEVATION))
						if ABS (ZZYZX - (WALL_HEIGHT + ABS(GLOB_ELEVATION))) < EPS then tempEdge23 = 5 + 2*gs_useEndLine_3D
						mask1_BottomLine = 1

					call "SkinRect" PARAMETERS trafo_array = trafo_array, numTrafo = numTrafo, gs_useWallMat = gs_useWallMat,
							startX = 0, startY = 0,
							endX = length, endY = WALL_THICKNESS,
							innerRadius = r0,
							incAngle = wallIncl,
							ac_wall_slant_angle1 = ac_wall_slant_angle1, ac_wall_slant_angle2 = ac_wall_slant_angle2,
							trapType = 1,
							bDoCut = bDoCut, height = tempHeight1,
							edge1 = 13, edge2 = 15 , edge3 = 10, edge4 = 8,
							matLeft = wallMatLeft, matRight = wallMatRight, matVert = wallMatVert, matHoriz = wallMatHoriz

					ADDz ABS(GLOB_ELEVATION)
					numOwnTrafo = 1
					numTrafo = numTrafo + 1
					trafo_array[numTrafo][1] = TRAFO_ADD_Z
					trafo_array[numTrafo][2] = ABS(GLOB_ELEVATION)

					call "SkinRect" PARAMETERS trafo_array = trafo_array, numTrafo = numTrafo, gs_useWallMat = gs_useWallMat,
							startX = 0, startY = 0,
							endX = length, endY = WALL_THICKNESS,
							innerRadius = r0,
							incAngle = wallIncl,
							ac_wall_slant_angle1 = ac_wall_slant_angle1, ac_wall_slant_angle2 = ac_wall_slant_angle2,
							trapType = 1,
							bDoCut = bDoCut, height = tempHeight2,
							edge1 = 8, edge2 = 8 + 7*gs_useEndLine_3D , edge3 = 8 + tempEdge23, edge4 = 8,
							matLeft = wallMatLeft, matRight = wallMatRight, matVert = wallMatVert, matHoriz = wallMatHoriz

						if ZZYZX > WALL_HEIGHT + ABS(GLOB_ELEVATION) then
							ADDz WALL_HEIGHT
							numOwnTrafo = numOwnTrafo + 1
							numTrafo = numTrafo + 1
							trafo_array[numTrafo][1] = TRAFO_ADD_Z
							trafo_array[numTrafo][2] = WALL_HEIGHT

							call "SkinRect" PARAMETERS trafo_array = trafo_array, numTrafo = numTrafo, gs_useWallMat = gs_useWallMat,
									startX = 0, startY = 0,
									endX = length, endY = WALL_THICKNESS,
									innerRadius = r0,
									incAngle = wallIncl,
									ac_wall_slant_angle1 = ac_wall_slant_angle1, ac_wall_slant_angle2 = ac_wall_slant_angle2,
									trapType = 1,
									bDoCut = bDoCut, height = tempHeight3,
									edge1 = 8, edge2 = 15 , edge3 = 15, edge4 = 8,
									matLeft = wallMatLeft, matRight = wallMatRight, matVert = wallMatVert, matHoriz = wallMatHoriz
							del 1
						endif

					numTrafo = numTrafo - numOwnTrafo
					del 1
			endif

		bDoCut = 0
		next i
	endif

! === Model of Wall End Cap ====================================================
! --- replace AC hotspots at the ends ---
	call "Resize Wall End" PARAMETERS GS_HotspotUnIDBegin = 20000,
			cutWidthAngle = cutWidthAngle, AC_CutWidth = AC_CutWidth,
			r0 = r0, wallIncl = wallIncl, onWallBeg = onWallBeg,
			zzyzx = zzyzx

	unID=1
	hotspot 0, endPoint, 0, unID, gs_end_overhang, 1+128: unID=unID+1
	hotspot 1, endPoint, 0, unID, gs_end_overhang, 3: unID=unID+1
	hotspot -gs_end_overhang, endPoint, 0, unID, gs_end_overhang, 2: unID=unID+1

	hotspot 0, endPoint, ZZYZX, unID, gs_end_overhang, 1+128: unID=unID+1
	hotspot 1, endPoint, ZZYZX, unID, gs_end_overhang, 3: unID=unID+1
	hotspot -gs_end_overhang, endPoint, ZZYZX, unID, gs_end_overhang, 2: unID=unID+1

	if not(AC_fit_to_wall_height) then

		hotspot 0, 0, 0, unID, ZZYZX, 1+128:unID=unID+1
		hotspot 0, 0, -1, unID, ZZYZX, 3:unID=unID+1
		hotspot 0, 0, ZZYZX, unID, ZZYZX, 2:unID=unID+1

		hotspot 0, WALL_THICKNESS, 0, unID, ZZYZX, 1+128:unID=unID+1
		hotspot 0, WALL_THICKNESS, -1, unID, ZZYZX, 3:unID=unID+1
		hotspot 0, WALL_THICKNESS, ZZYZX, unID, ZZYZX, 2:unID=unID+1

	endif


	vert 0,0,0										!#1
	vert 0,WALL_THICKNESS,0							!#2
	vert -gs_end_overhang, endPoint,0		!#3

	vert 0,0,ZZYZX									!#4
	vert 0,WALL_THICKNESS,ZZYZX						!#5
	vert -gs_end_overhang, endPoint,ZZYZX	!#6

	edge 1,3,-1,-1,0	!#1
	edge 3,2,-1,-1,0	!#2
	edge 2,1,-1,-1,mask1_BottomLine	!#3


	edge 1,4,-1,-1,0	!#4
	edge 4,6,-1,-1,0	!#5
	edge 6,3,-1,-1,0	!#6

	edge 2,5,-1,-1,0	!#7
	edge 5,6,-1,-1,0	!#8

	edge 5,4,-1,-1,mask1_WallHeight !#9

	material wallMatHoriz
		PGON 3, 0, 0, 1,2,3		!#Bottom
	material wallMatLeft
		PGON 4, 0, 0, 4,5,6,-1	!#Side1
	material wallMatRight
		PGON 4, 0, 0, 2,7,8,6	!#Side2
	material wallMatHoriz
		PGON 4, 0, 0,-3,7,9,-4	!#Vert
		PGON 3, 0, 0, -9,8,-5	!#Top

	gosub "wallTextureCoor"

del 2


end


"wallTextureCoor":
	if gs_useWallMat then
		for iTrafo = numTrafo to 1 step -1
			if abs(trafo_array[iTrafo][1] - TRAFO_ADD_X) < EPS then
				addx -trafo_array[iTrafo][2]
			endif
			if abs(trafo_array[iTrafo][1] - TRAFO_ADD_Y) < EPS then
				addy -trafo_array[iTrafo][2]
			endif
			if abs(trafo_array[iTrafo][1] - TRAFO_ADD_Z) < EPS then
				addz -trafo_array[iTrafo][2]
			endif
			if abs(trafo_array[iTrafo][1] - TRAFO_ROT_X) < EPS then
				rotx -trafo_array[iTrafo][2]
			endif
			if abs(trafo_array[iTrafo][1] - TRAFO_ROT_Y) < EPS then
				roty -trafo_array[iTrafo][2]
			endif
			if abs(trafo_array[iTrafo][1] - TRAFO_ROT_Z) < EPS then
				rotz -trafo_array[iTrafo][2]
			endif
			if abs(trafo_array[iTrafo][1] - TRAFO_MUL_X) < EPS then
				mulx 1/trafo_array[iTrafo][2]
			endif
			if abs(trafo_array[iTrafo][1] - TRAFO_MUL_Y) < EPS then
				muly 1/trafo_array[iTrafo][2]
			endif
			if abs(trafo_array[iTrafo][1] - TRAFO_MUL_Z) < EPS then
				mulz 1/trafo_array[iTrafo][2]
			endif
		next iTrafo

		base
		vert WALL_TEXTURE_WRAP[3], WALL_TEXTURE_WRAP[4], WALL_TEXTURE_WRAP[5]
		vert WALL_TEXTURE_WRAP[6], WALL_TEXTURE_WRAP[7], WALL_TEXTURE_WRAP[8]
		vert WALL_TEXTURE_WRAP[9], WALL_TEXTURE_WRAP[10], WALL_TEXTURE_WRAP[11]
		vert WALL_TEXTURE_WRAP[12], WALL_TEXTURE_WRAP[13], WALL_TEXTURE_WRAP[14]
		coor{2} WALL_TEXTURE_WRAP[1], WALL_TEXTURE_WRAP[2], -1, -2, -3, -4
		body 1

		for iTrafo = 1 to numTrafo
			if (trafo_array[iTrafo][1] > 0) and (trafo_array[iTrafo][1] < 10) then
				del 1
			endif
		next iTrafo
	endif
return
]]>
</Script_3D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_2D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
!<ZsK>

if WALL_SKINS_NUMBER > 0 then
	! Visible Egdes of Top and Bottom Line of Wall

	mask_2D=0
	macro_bottomLinePen = WallbottomLinePen
	macro_bottomLineLineType = WallbottomLineType
else
	mask_2D=1
	macro_bottomLinePen = WallLinePen
	macro_bottomLineLineType = WallLineType
endif


! ==============================================================================
rot2 -90

! === Hotspot Editing of End Point

! --- replace AC hotspots at the ends ---
call "Resize Wall End" PARAMETERS GS_HotspotUnIDBegin = 20000,
		cutWidthAngle = cutWidthAngle, AC_CutWidth = AC_CutWidth,
		r0 = r0, wallIncl = wallIncl, onWallBeg = onWallBeg

unID=1
hotspot2 0, (yWallStart+yWallEnd)/2, unID, gs_end_overhang, 1+128: unID=unID+1
hotspot2 1, (yWallStart+yWallEnd)/2, unID, gs_end_overhang, 3: unID=unID+1
hotspot2 -gs_end_overhang, (yWallStart+yWallEnd)/2, unID, gs_end_overhang, 2: unID=unID+1

! === Wall End Cap_TRIANGLE

line_type WallLineType
fill WallFillType
pen WallLinePen

poly2_b{2} 4, 1+2+4+(8+16)*WallFillOrientation+32, WallFillPen, WallFillBackPen,
		0, 0, 0,
		0,                yWallStart,  0+32,
		0,                yWallEnd,    mask_2D+32,
		-gs_end_overhang, (yWallStart+yWallEnd)/2, mask_2D+32,
		0,                yWallStart,  -1

if WALL_SKINS_NUMBER > 0 then
	line_property 2
	! Bottom Line
	line2 0, yWallStart, -gs_end_overhang, (yWallStart+yWallEnd)/2
	! Top Line
	pen WallbottomLinePen
	line_type WallbottomLineType
	line2 0, yWallEnd, -gs_end_overhang, (yWallStart+yWallEnd)/2
endif

! === Wall End Cap_PART of RECTANGLE and END LINE
if gs_useEndLine_2D = 0 then
	WallEndLinePen = 0
endif


for i = 0 to 1
	call "SkinRect" PARAMETERS startX = 0, startY = yWallStart,
			endX = length, endY = yWallEnd,
			innerRadius = r0, outerRadius = r0 + WALL_THICKNESS,
			incAngle = wallIncl,
			ac_wall_slant_angle1 = ac_wall_slant_angle1, ac_wall_slant_angle2 = ac_wall_slant_angle2,
			trapType = 1,
			fillPen = WallFillPen, fillBGPen = WallFillBackPen,
			fillType = 1 - i,
			bLocalFill = WallFillOrientation,
			startLinePen = 0,
			endLinePen =WallEndLinePen, endLineCont = 0,
			bottomLinePen= macro_bottomLinePen,
			bottomLineLineType = macro_bottomLineLineType,
			bottomLineCont = 1,
			topLinePen= WallLinePen,
			topLineLineType =WallLineType,
			topLineCont = 1
next i


! --- draw view and overhead skins ---
currBeg = 0
for i = 1 to WALL_SKINS_NUMBER
	skinThickness = WALL_SKINS_PARAMS[i][2]
	startSkin = currBeg
	endSkin = currBeg + skinThickness

	if (i < iLeftmost or i > iRightmost) and (endSkin > EPS and startSkin + EPS < endSkin) then

		startLinePen	= WALL_SKINS_PARAMS[i][11]
		bottomLinePen	= WALL_SKINS_PARAMS[i][9]
		topLinePen		= WALL_SKINS_PARAMS[i][7]

		if i = iLeftmost - 1 then
			pen startLinePen
			line_type WALL_SKINS_PARAMS[i][14]
			line_property 0
			line2 -gs_end_overhang,startSkin, -gs_end_overhang,endSkin+abs(yWallEnd-yWallStart)/2

			if round_int(WALL_SKINS_PARAMS[i][13]) = 1 then
				line2 0,startSkin, 0,endSkin
			endif

			startLinePen	= 0
			bottomLinePen	= 0
		endif
		if i = iRightmost + 1 then
			pen startLinePen
			line_type WALL_SKINS_PARAMS[i][14]
			line_property 0
			line2 -gs_end_overhang,startSkin-abs(yWallEnd-yWallStart)/2, -gs_end_overhang,endSkin

			if round_int(WALL_SKINS_PARAMS[i][13]) = 1 then
				line2 0,startSkin, 0,endSkin
			endif

			startLinePen	= 0
			topLinePen		= 0
		endif

		line_type 1
		if abs(WALL_SKINS_PARAMS[i][13] - 1) < EPS then
			fillPattern = WALL_SKINS_PARAMS[i][1]
		else
			fillPattern = 0
		endif
		call "SkinRect" PARAMETERS startX = -gs_end_overhang, startY = startSkin,
				endX = length, endY = endSkin,
				innerRadius = r0, incAngle = wallIncl,
				trapType = 0,
				fillPattern = fillPattern, fillPen = WALL_SKINS_PARAMS[i][4], fillBGPen = WALL_SKINS_PARAMS[i][5],
				fillType = 2,
				bLocalFill = WALL_SKINS_PARAMS[i][12], bCoverFill = 1,
				startLinePen	= startLinePen,		startLineLineType	= WALL_SKINS_PARAMS[i][14],	startLineCont	= 0,
				bottomLinePen	= bottomLinePen,	bottomLineLineType	= WALL_SKINS_PARAMS[i][10],	bottomLineCont	= 0,
				topLinePen		= topLinePen,		topLineLineType		= WALL_SKINS_PARAMS[i][8],	topLineCont		= 0

	endif

	currBeg = currBeg + skinThickness

next i
]]>
</Script_2D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_1D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
! const values for parameter: gs_detlevel_3D_m
DLEV3D_OFF      = 0
DLEV3D_SIMPLE   = 1
DLEV3D_DETAILED = 2
DLEV3D_DRAFT    = 3

! const values for parameter: trafo_array
TRAFO_ADD_X = 1
TRAFO_ADD_Y = 2
TRAFO_ADD_Z = 3
TRAFO_ROT_X = 4
TRAFO_ROT_Y = 5
TRAFO_ROT_Z = 6
TRAFO_MUL_X = 7
TRAFO_MUL_Y = 8
TRAFO_MUL_Z = 9

EPS = 0.001

! --- wall geometry ---

length = AC_CutWidth

if round_int(ac_wall_slant_angle2) = 0 and round_int(ac_wall_slant_angle1) = 0 then
	ac_wall_slant_angle1 = 90
	ac_wall_slant_angle2 = 90
endif

isComposite = 0
if 	(WALL_COMPS_NAME <> "" and WALL_SKINS_NUMBER > 1) | \
	(GLOB_SCRIPT_TYPE = 2 & ((abs(ac_wall_slant_angle1 - 90) > eps) | (abs(ac_wall_slant_angle2 - 90) > eps))) then
	isComposite = 1
endif

yWallStart = 0
yWallEnd = WALL_THICKNESS

iOnlyCutSkin = 0
iLeftmost = 1
iRightmost = WALL_SKINS_NUMBER
if isComposite then
	nSkins = WALL_SKINS_NUMBER
	bBefore = 1
	for i = 1 to WALL_SKINS_NUMBER
		if WALL_SKINS_PARAMS[i][13] < 1 then
			iOnlyCutSkin = i
			bBefore = 0
		else
			nSkins = nSkins - 1
		endif
		if bBefore then
			yWallStart = yWallStart + WALL_SKINS_PARAMS[i][2]
			iLeftmost = iLeftmost + 1
		endif
	next i

	if iOnlyCutSkin = 0 then end	! No cut skins found

	if nSkins <= 1 then
		isComposite = false
		yWallEnd = yWallStart + WALL_SKINS_PARAMS[iOnlyCutSkin][2]
		WALL_FILL = WALL_SKINS_PARAMS[iOnlyCutSkin][1]
		iRightmost = iOnlyCutSkin
	else
		bBefore = 1
		for i = 0 to WALL_SKINS_NUMBER-1
			if WALL_SKINS_PARAMS[WALL_SKINS_NUMBER-i][13] < 1 then
				bBefore = 0
			endif
			if bBefore then
				yWallEnd = yWallEnd - WALL_SKINS_PARAMS[WALL_SKINS_NUMBER-i][2]
				iRightmost = iRightmost - 1
			endif
		next i
	endif
endif

onWallBeg = (abs(WIDO_POSITION) < EPS)

wallIncl = WALL_INCL
maxWallThickness = WALL_START_THICKNESS
if maxWallThickness < WALL_END_THICKNESS then maxWallThickness = WALL_END_THICKNESS

if abs(maxWallThickness - WALL_END_THICKNESS) < EPS then
	if (abs(maxWallThickness - WALL_THICKNESS) < EPS & not(SYMB_MIRRORED)) | \
		(abs(maxWallThickness - WALL_THICKNESS) > EPS & SYMB_MIRRORED) then
		wallIncl = -WALL_INCL
	endif
else
	if (abs(maxWallThickness - WALL_THICKNESS) < EPS & SYMB_MIRRORED) | \
		(abs(maxWallThickness - WALL_THICKNESS) > EPS & not(SYMB_MIRRORED)) then
		wallIncl = -WALL_INCL
	endif
endif

isCurved = 0
r0 = 0
alpha = 0
if abs(WIDO_ORIG_DIST) > EPS then
	isCurved = 1
	r0 = abs(WIDO_ORIG_DIST)
	if WIDO_ORIG_DIST > 0 then
		alpha = (length / (r0 - WALL_THICKNESS/2)) / PI * 180
		r0 = r0 - WALL_THICKNESS
	else
		alpha = (length / (r0 + WALL_THICKNESS/2)) / PI * 180
	endif
endif

! --- wall's attributes: fill, pen ---

if gs_useWallAttribute then
	! Wall skin=1 and use Walls Attributes
	if WALL_SKINS_NUMBER <= 1 then
		if WALL_COMPS_NAME = "" | WALL_SKINS_NUMBER = 0 then
			WallLineType =	WALL_LINETYPE
			WallLinePen =	WALL_SECT_PEN
		else
			WallLineType =	WALL_SKINS_PARAMS [iLeftmost][8]
			WallLinePen =	WALL_SKINS_PARAMS [iLeftmost][7]
			WallbottomLineType =	WALL_SKINS_PARAMS [iRightmost][10]
			WallbottomLinePen =	WALL_SKINS_PARAMS [iRightmost][9]
		endif

		WallFillType =	WALL_FILL

		if WALL_COMPS_NAME = "" then
			wallFillPen = WALL_FILL_PEN
			wallFillBackPen = WALL_FBGD_PEN
		else
			wallFillPen = WALL_SKINS_PARAMS[1][4]
			wallFillBackPen = WALL_SKINS_PARAMS[1][5]
		endif

		WallFillOrientation = WALL_SKINS_PARAMS [1][12]

		WallEndLinePen = WALL_SECT_PEN

	else

		WallLineType =	WALL_SKINS_PARAMS [iLeftmost][8]
		WallLinePen =	WALL_SKINS_PARAMS [iLeftmost][7]
		WallbottomLineType =	WALL_SKINS_PARAMS [iRightmost][10]
		WallbottomLinePen =	WALL_SKINS_PARAMS [iRightmost][9]
		WallFillType =	WALL_SKINS_PARAMS [iLeftmost][1]
		WallFillPen	= WALL_SKINS_PARAMS [iLeftmost][4]
		WallFillBackPen	=  WALL_SKINS_PARAMS [iLeftmost][5]
		WallFillOrientation = WALL_SKINS_PARAMS [iLeftmost][12]

		WallEndLinePen = WALL_SKINS_PARAMS [iLeftmost][7]
	endif

else

	! Wall skin=1 and use Custom Attributes
	WallLineType = gs_line_type
	WallLinePen = gs_cont_pen
	WallFillType = gs_fill_type
	WallFillPen	= gs_fill_pen
	WallFillBackPen	= gs_back_pen
	WallFillOrientation = 0

	WallbottomLineType = gs_line_type
	WallbottomLinePen =	gs_cont_pen

	WallEndLinePen = gs_endLinePen_2D
endif

]]>
</Script_1D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_PR SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_PR>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_UI SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_UI>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_VL SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
call "FM_types" parameters all


values "AC_CutWidth" range [0, )
values "cutWidthAngle" range [0, )
values "gs_end_overhang" RANGE (0,)
values{2} "gs_detlevel_3D_m" 	DLEV3D_DETAILED, `Детальный`,
								DLEV3D_OFF, `Откл.`

if GLOB_MODPAR_NAME = "cutWidthAngle" then
	PARAMETERS AC_CutWidth = cutWidthAngle * (r0 + WALL_THICKNESS/2) * PI / 180
else
	if GLOB_MODPAR_NAME <> "" then
		PARAMETERS cutWidthAngle = (length / (r0 + WALL_THICKNESS/2)) / PI * 180
	endif
endif

PARAMETERS A = WALL_THICKNESS
PARAMETERS B = AC_CutWidth + gs_end_overhang

! Contour Pen in 2D
	if gs_cont_pen < EPS then parameters gs_cont_pen = 5

! End Line Pen
	if gs_endLinePen_2D <=0 then parameters gs_endLinePen_2D = 5
	if not(gs_useEndLine_2D) then hideparameter "gs_endLinePen_2D"

! Fill Pen
	if gs_fill_pen < EPS then parameters gs_fill_pen = 19

! Contour Pen in 3D
	if gs_wallPen_3D < EPS then parameters gs_wallPen_3D = 2
	if gs_useWallPen_3D then hideparameter "gs_wallPen_3D"

! Use Wall's Attributes (Skin=0)
	if gs_useWallAttribute then
	hideparameter "gs_line_type","gs_cont_pen","gs_fill_type","gs_fill_pen","gs_back_pen","gs_endLinePen_2D"
	endif

! Use Wall's Materials
	if gs_useWallMat > EPS then hideparameter "matLeft","matRight","matEdge"

lock "AC_fit_to_wall_height"
]]>
</Script_VL>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Comment SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Comment>

<Keywords SectVersion="1" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Keywords>

<ParamSection SectVersion="26" SectionFlags="0" SubIdent="0">
	<ParamSectHeader>
		<Version>26</Version>
		<AutoHotspots>false</AutoHotspots>
		<StatBits>
			<STBit_FixSize/>
		</StatBits>
		<WDLeftFrame>0</WDLeftFrame>
		<WDRightFrame>0</WDRightFrame>
		<WDTopFrame>0</WDTopFrame>
		<WDBotFrame>0</WDBotFrame>
		<LayFlags>65535</LayFlags>
		<WDMirrorThickness>0</WDMirrorThickness>
		<WDWallInset>0</WDWallInset>
		<SymbolColor>0</SymbolColor>
	</ParamSectHeader>
	<Parameters>
		<Length Name="A">
			<Description><![CDATA["Ширина"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.3</Value>
		</Length>
		<Length Name="B">
			<Description><![CDATA["Размер 2"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.7</Value>
		</Length>
		<Length Name="ZZYZX">
			<Description><![CDATA["Высота"]]></Description>
			<Fix/>
			<Value>1</Value>
		</Length>
		<Integer Name="gs_detlevel_3D_m">
			<Description><![CDATA["3D-детализация"]]></Description>
			<Value>2</Value>
		</Integer>
		<Integer Name="AC_Hole_Hotspot_Control">
			<Description><![CDATA["Узловые Точки 0-Нет,1-2D, 2-3D, 3-Все"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Boolean Name="AC_show2DHotspotsIn3D">
			<Description><![CDATA["Показ Узловых 2D Точек в 3D"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="ac_bottomlevel">
			<Description><![CDATA["Отметка Низа"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="ac_toplevel">
			<Description><![CDATA["Отметка Верха"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Boolean Name="AC_HoleSideMaterial">
			<Description><![CDATA["Покрытия Отверстия по Параметрам Стены"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="AC_HoleMaterialCurved">
			<Description><![CDATA["Стык Покрытий в Проеме Искривлен в Криволинейных Стенах"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="AC_WALL_INTID">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Length Name="AC_CutWidth">
			<Description><![CDATA["Ширина Сечения"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.5</Value>
		</Length>
		<Boolean Name="AC_fit_to_wall_height">
			<Description><![CDATA["По Высоте Стены"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Angle Name="cutWidthAngle">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>301.556734279</Value>
		</Angle>
		<Length Name="gs_end_overhang">
			<Description><![CDATA["Свес"]]></Description>
			<Value>0.2</Value>
		</Length>

		<!-- gs_2D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_2D_representation">
			<Description><![CDATA["2D-отображение"]]></Description>
			<Fix/>
		</Title>
		<Boolean Name="gs_useWallAttribute">
			<Description><![CDATA["Использовать Реквизиты Стены (Слой=1)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_useEndLine_2D">
			<Description><![CDATA["Использовать Линию Торца в 2D"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<PenColor Name="gs_endLinePen_2D">
			<Description><![CDATA["Использовать Перо Линии Контура Торца в 2D"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>5</Value>
		</PenColor>
		<LineType Name="gs_line_type">
			<Description><![CDATA["Тип Линии Контура"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</LineType>
		<PenColor Name="gs_cont_pen">
			<Description><![CDATA["Перо Контура"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>5</Value>
		</PenColor>
		<FillPattern Name="gs_fill_type">
			<Description><![CDATA["Тип Штриховки"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</FillPattern>
		<PenColor Name="gs_fill_pen">
			<Description><![CDATA["Перо Штриховки"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</PenColor>
		<PenColor Name="gs_back_pen">
			<Description><![CDATA["Перо Фона Штриховки"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>

		<!-- gs_3D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_3D_representation">
			<Description><![CDATA["3D-отображение"]]></Description>
			<Fix/>
		</Title>
		<Boolean Name="gs_useWallPen_3D">
			<Description><![CDATA["Использовать Перо Контура Стены в 3D"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<PenColor Name="gs_wallPen_3D">
			<Description><![CDATA["Перо Контура в 3D"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>35</Value>
		</PenColor>
		<Boolean Name="gs_useEndLine_3D">
			<Description><![CDATA["Использовать Линию Контура Торца 3D"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- gs_material: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_material">
			<Description><![CDATA["Покрытия"]]></Description>
		</Title>
		<Boolean Name="gs_useWallMat">
			<Description><![CDATA["Использовать Покрытия Стены"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Material Name="matLeft">
			<Description><![CDATA["Сторона Стены 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>92</Value>
		</Material>
		<Material Name="matRight">
			<Description><![CDATA["Сторона Стены 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>92</Value>
		</Material>
		<Material Name="matEdge">
			<Description><![CDATA["Торец Стены"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>92</Value>
		</Material>
		<Angle Name="ac_wall_slant_angle1">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Angle Name="ac_wall_slant_angle2">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Angle>

		<!-- gs_list: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_list">
			<Description><![CDATA["Параметры Спецификаций"]]></Description>
			<Fix/>
		</Title>
		<RealNum Name="gs_list_cost">
			<Description><![CDATA["Цена"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="gs_list_manufacturer">
			<Description><![CDATA["Производитель"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_note">
			<Description><![CDATA["Примечания"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_location">
			<Description><![CDATA["Расположение"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_accessories">
			<Description><![CDATA["Аксессуары"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_Type">
			<Description><![CDATA["Тип Группы"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Другой"]]></Value>
		</String>
		<Integer Name="iFMType">
			<Description><![CDATA["Тип Группы"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>25</Value>
		</Integer>
		<String Name="FM_InventoryNumber">
			<Description><![CDATA["Инвентарный Номер"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_SerialNumber">
			<Description><![CDATA["Серийный Номер"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_ProductionYear">
			<Description><![CDATA["Год Производства"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<RealNum Name="FM_ObjectWeight">
			<Description><![CDATA["Вес Изделия"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="FM_ObjectWeightUnit">
			<Description><![CDATA["Единица Веса"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["кг"]]></Value>
		</String>
		<String Name="gs_list_custom1">
			<Description><![CDATA["Пользовательское Значение 1"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom2">
			<Description><![CDATA["Пользовательское Значение 2"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom3">
			<Description><![CDATA["Пользовательское Значение 3"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom4">
			<Description><![CDATA["Пользовательское Значение 4"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom5">
			<Description><![CDATA["Пользовательское Значение 5"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
	</Parameters>
</ParamSection>

<CalledMacros SectVersion="2" SectionFlags="0" SubIdent="0">
	<Macro>
		<MName><![CDATA["Resize Wall End"]]></MName>
		<MainGUID>6CDF8E46-3A45-4DAC-87BD-87BDC1034F6D</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["SkinRect"]]></MName>
		<MainGUID>2B0688E1-BE95-4F94-AC6A-DD76D21592D3</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["FM_types"]]></MName>
		<MainGUID>2759D2DF-AA8E-44D1-AD1D-261581266B34</MainGUID>
	</Macro>
</CalledMacros>

<Picture MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="0" length_in_bytes="694" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000800000
	00800806000000C33E61CB000000097048597300000B1300000B1301009A9C18
	0000001974455874536F6674776172650041646F626520496D61676552656164
	7971C9653C000002394944415478DAECDD314A03511087F164F100B98060A59D
	22DA68E511BC81F164E62856568A116CAC0CE402DE609D85B54865B36F798FF9
	7D30ACBE42C2FEBFCCEC34EBB2EFFB05F2D2B905040001400010000400014000
	1000040001400010000400014000100004000140001000040001400010000400
	0140001000040001400010000400014000100004000140001000757034F51F3C
	BBBEDDC4E5C1AD5DECA3CEBF5E5F7E74809C1C473DC7176255F3875C967E5770
	DC80755C9EA21EE3DBB04974BE8B3A89FA88BAABB51374C22F731E7539867F51
	732728D6013287FF773E86FE5E7327E8845FEE3CB81FC3DFD5DA094A8D80F4E1
	B7320E9673FCC3081DA1DE71D0093FF738B005641F07C3082851A75737EBA87E
	B83A3F3C8F9F5751DFE3F976F8BD540EFF952D20F938B005641F0773B4196DBF
	DE71600B483E0E6C01D9C781B69F7B1CD802928F035B40F671600BC83D0E6C01
	C9C7812DA08D71F0394AF0D68C00C29CBC23B4F30C60864F733E3E076C4B3E07
	941240980D845F4C001DA18DF0671140C8F5865F5C0021D71D7E5101845C7FF8
	251F0285DC40F8B680E4E1DB0292876F0B481EBE2D2079F8B680E4E1DB029287
	6F0B481EBE2D2079F8B680E4E1DB0292876F0B481EBE2D2079F8434DFE8A186F
	0A3DA0EA7704CEF28A98C4EC6B0F7F60969744A15E7400028000200008000280
	0020000800028000200008000280002000080002800020000800028000200008
	00028000200008000280002000080002800020000800028000200008804AF815
	6000E744C57E32E3C0AC0000000049454E44AE426082
	]]>
</Picture>

<Copyright SectVersion="1" SectionFlags="0" SubIdent="0">
	<Author>GRAPHISOFT</Author>
	<License>
		<Type>CC BY-ND</Type>
		<Version>3.0</Version>
	</License>
</Copyright>

<MigrationTable SectVersion="1" SectionFlags="0" SubIdent="0">
	<MigrationTableElement>
		<MainGUID>A3529DBF-5E3F-4234-9E26-06451EFA63DF</MainGUID>
		<Version>18</Version>
		<Name><![CDATA[""]]></Name>
		<AutoMigration>true</AutoMigration>
	</MigrationTableElement>
</MigrationTable>

</Symbol>
