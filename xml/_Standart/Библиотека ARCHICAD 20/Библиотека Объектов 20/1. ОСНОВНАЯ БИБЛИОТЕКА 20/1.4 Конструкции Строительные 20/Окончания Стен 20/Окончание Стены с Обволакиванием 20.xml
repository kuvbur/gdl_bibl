<?xml version="1.0" encoding="UTF-8"?>
<Symbol IsArchivable="false" IsPlaceable="true" MainGUID="8593CCC8-8233-4A54-A431-A8C2168A4D93" MigrationValue="Normal" Owner="0" Signature="1465080141" Version="38">
<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_2D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
!text2 0, 0, SYMB_MIRRORED
!text2 0, -0.1, onWallBeg


if _bShowWrappedEnd then

	rot2 -90

	! --- general drawing parameters ---
	bLocalFill = 0
	bFitToSkinFill = 0 
	if iSkinsParameter <> SKINSPARAM_CUSTOM and isComposite then
	gs_fill_type = WALL_SKINS_PARAMS[iUsedSkin][SKIN_FILL]
	gs_fill_pen = WALL_SKINS_PARAMS[iUsedSkin][SKIN_FILL_PEN]
	gs_back_pen = WALL_SKINS_PARAMS[iUsedSkin][SKIN_FILL_BACK_PEN]
	bLocalFill = WALL_SKINS_PARAMS[iUsedSkin][SKIN_FILL_ORIENTATION]
	bFitToSkinFill = WALL_SKINS_PARAMS[iUsedSkin][16]
	endif

	if iSkinsParameter = SKINSPARAM_AUTO and not(isComposite) then
	gs_fill_type = 1
	endif

	if useWallPen then
	if isComposite then
		gs_cont_pen = WALL_SKINS_PARAMS[iLeftmost][SKIN_UPPER_LINE_PEN]
		gs_cont_lt = WALL_SKINS_PARAMS[iLeftmost][SKIN_UPPER_LINE_TYPE]
	else
		if iOnlyCutSkin > 0 then
			gs_cont_pen = WALL_SKINS_PARAMS[iOnlyCutSkin][SKIN_UPPER_LINE_PEN]
			gs_cont_lt = WALL_SKINS_PARAMS[iOnlyCutSkin][SKIN_UPPER_LINE_TYPE]
		else
			gs_cont_pen = WALL_SECT_PEN
			gs_cont_lt = WALL_LINETYPE
		endif
	endif
	endif

	if abs(wallIncl) > EPS then
	if not(SYMB_MIRRORED) then
		firstTrapType = 0
		secTrapType = 2
	else
		firstTrapType = 2
		secTrapType = 0
	endif
	else
	firstTrapType = 0
	secTrapType = 0
	endif


	! ==============================================================================
	! THE WALL AREA
	! ==============================================================================

	if not(isComposite) then

	! ===== SIMPLE WALL =====

	fill WALL_FILL
	pen WALL_SECT_PEN
	if WALL_COMPS_NAME <> "" then
		wallFillPen = WALL_SKINS_PARAMS[1][SKIN_FILL_PEN]
		wallFillBGPen = WALL_SKINS_PARAMS[1][SKIN_FILL_BACK_PEN]
	else
		wallFillPen = WALL_FILL_PEN
		wallFillBGPen = WALL_FBGD_PEN
	endif
	call "SkinRect" PARAMETERS startX = thickCap, startY = yWallStart + thickFirst,
			endX = thickCap, endY = thickSecFromBeg,
			innerRadius = r0, outerRadius = r0 + WALL_THICKNESS,
			incAngle = wallIncl, trapType = 1,
			fillPen = wallFillPen, fillBGPen = wallFillBGPen,
			fillType = 2,
			bLocalFill = WALL_SKINS_PARAMS[1][SKIN_FILL_ORIENTATION],
			bFitToSkinFill = WALL_SKINS_PARAMS[1][16],
			bChangeFitToSkinFillOrient = 0,
			bCircularDistortion	= 0,
			shContour = 0,
			startLinePen = gs_cont_pen, startLineCont = 0

	else

	! ===== COMPOSITE WALL =====

	! --- index of the last core skin (which goes trapeze) ---
	trapezoidCoreSkin = 0
	for j = 1 to WALL_SKINS_NUMBER
		if abs(WALL_SKINS_PARAMS [j][SKIN_THICKEN_TRAPEZOID] - 1) < EPS then
			trapezoidCoreSkin = j
		endif
	next j

	! --- draw cut skins between the arms ---
	currBeg = 0
	startAngle = alpha * thickCap / length
	for i = 1 to WALL_SKINS_NUMBER
		if (i >= trapezoidCoreSkin and SYMB_MIRRORED) or (i <= trapezoidCoreSkin and not(SYMB_MIRRORED)) or abs(wallIncl) < EPS then
			skinThickness = WALL_SKINS_PARAMS[i][SKIN_THICKNESS]
		else
			skinThickness = WALL_SKINS_PARAMS[i][SKIN_THICKNESS] / cos(wallIncl)
		endif
		startSkin = currBeg
		endSkin = currBeg + skinThickness

		if (i > trapezoidCoreSkin and SYMB_MIRRORED) or (i < trapezoidCoreSkin and not(SYMB_MIRRORED)) then
			trapType = 0
		else
			if trapezoidCoreSkin = i then

				compositeThickness = 0
				for j = 1 to WALL_SKINS_NUMBER
					if (j >= trapezoidCoreSkin and SYMB_MIRRORED) or (j <= trapezoidCoreSkin and not(SYMB_MIRRORED)) or abs(wallIncl) < EPS then
						compositeThickness = compositeThickness + WALL_SKINS_PARAMS[j][SKIN_THICKNESS]
					else
						compositeThickness = compositeThickness + WALL_SKINS_PARAMS[j][SKIN_THICKNESS] / cos(wallIncl)
					endif
				next j
				if (WALL_END_THICKNESS <= WALL_START_THICKNESS) then
					modifier = WALL_END_THICKNESS - compositeThickness
				else
					modifier = WALL_START_THICKNESS - compositeThickness
				endif

				if onWallBeg then
					if WALL_THICKNESS > WALL_END_THICKNESS then
						modifier = modifier + WALL_THICKNESS - WALL_END_THICKNESS
					endif
				else
					if WALL_THICKNESS > WALL_START_THICKNESS then
						modifier = modifier + (WALL_THICKNESS - WALL_START_THICKNESS)
					endif
				endif
				endSkin = endSkin + modifier
				currBeg = currBeg + modifier
				trapType = 1
			else
				trapType = 2
			endif
		endif

		if startSkin < thickFirst + yWallStart or endSkin > thickSecFromBeg then
			if startSkin < thickFirst + yWallStart then
				if endSkin < thickFirst  + yWallStart + EPS and trapezoidCoreSkin <> i then
					endSkin = 0
				else
					if trapType < 2 or SYMB_MIRRORED then
						startSkin = thickFirst + yWallStart
					endif
				endif
			endif
			if endSkin > thickSecFromBeg then
				if startSkin > thickSecFromBeg - EPS and trapezoidCoreSkin <> i then
					endSkin = startSkin
				else
					if trapType < 2 or not(SYMB_MIRRORED) then
						endSkin = thickSecFromBeg
					endif
				endif
			endif
		endif

		if ((endSkin > yWallStart + EPS and startSkin + EPS < endSkin) or trapezoidCoreSkin = i) and (WALL_SKINS_PARAMS[i][SKIN_TYPE] < 0.01) then
			startLinePen = 0
			if alwaysLine or abs(gs_fill_type - WALL_SKINS_PARAMS[i][SKIN_FILL]) > EPS then
				if useWallPen > EPS then
					startLinePen = WALL_SKINS_PARAMS[i][SKIN_END_FACE_PEN]
				else
					startLinePen = gs_cont_pen
				endif
			endif
			bBottomLine = 1
			if abs(endSkin - thickSecFromBeg) < EPS then
				bBottomLine = 0
				if abs(wallIncl) > EPS and secTrapType = 2 and trapType = 0 then
					bBottomLine = 1
				endif
			endif
			if abs(endSkin - thickFirst) < EPS then
				bBottomLine = 0
				if abs(wallIncl) > EPS and firstTrapType = 2 and trapType = 1 then
!					bBottomLine = 1		! specification changed, this is a bug now
				endif
			endif
			bottomLinePen = 0
			if bBottomLine then
				bottomLinePen = WALL_SKINS_PARAMS[i][SKIN_LOWER_LINE_PEN]
			endif

			line_type 1
			fill WALL_SKINS_PARAMS[i][SKIN_FILL]
			call "SkinRect" PARAMETERS startX = thickCap, startY = startSkin,
					endX = thickCap, endY = endSkin,
					innerRadius = r0, incAngle = wallIncl,
					trapType = trapType,
					fillPen = WALL_SKINS_PARAMS[i][SKIN_FILL_PEN], fillBGPen = WALL_SKINS_PARAMS[i][SKIN_FILL_BACK_PEN],
					fillType = 2,
					bLocalFill = WALL_SKINS_PARAMS[i][SKIN_FILL_ORIENTATION],
					bFitToSkinFill = WALL_SKINS_PARAMS[i][16],
					bChangeFitToSkinFillOrient = 0,
					bCircularDistortion	= 0,
					bCoverFill = (abs(WALL_SKINS_PARAMS[i][SKIN_TYPE] - 1) < EPS),
					startLinePen = startLinePen, startLineCont = 0,
					bottomLinePen = bottomLinePen, bottomLineLineType = WALL_SKINS_PARAMS[i][SKIN_LOWER_LINE_TYPE]

		endif

		currBeg = currBeg + skinThickness

	next i

	endif


	! ==============================================================================
	! THE END-CAP
	! ==============================================================================

	! --- flags for side contour lines ---
	penUpperSideContour = 0
	penLowerSideContour = 0
	penUpperInnerContour = 0
	ltUpperInnerContour = gs_cont_lt
	penLowerInnerContour = 0
	ltLowerInnerContour = gs_cont_lt

	if not(isComposite) then
	penUpperSideContour = gs_cont_pen
	penLowerSideContour = gs_cont_pen
	penUpperInnerContour = gs_cont_pen
	penLowerInnerContour = gs_cont_pen
	else
	if alwaysLine or abs(gs_fill_type - WALL_SKINS_PARAMS[iLeftmost][SKIN_FILL]) > EPS then
		penLowerSideContour = gs_cont_pen
		penLowerInnerContour = gs_cont_pen
	else
		if thickFirst > WALL_SKINS_PARAMS[iLeftMost][SKIN_THICKNESS]-EPS then
			if abs(wallIncl) < EPS then
				penLowerInnerContour = gs_cont_pen
			endif
			if (firstTrapType = 0 or firstTrapType = 2) and WALL_SKINS_PARAMS[iLeftmost][SKIN_THICKEN_TRAPEZOID] < 1-EPS then
				penLowerInnerContour = gs_cont_pen
			endif
		endif
	endif
	if useWallPen and (abs(thickFirst - WALL_SKINS_PARAMS[iLeftmost][SKIN_THICKNESS]) < EPS) then
		penLowerInnerContour = WALL_SKINS_PARAMS[iLeftmost][SKIN_LOWER_LINE_PEN]
		ltLowerInnerContour = WALL_SKINS_PARAMS[iLeftmost][SKIN_LOWER_LINE_TYPE]
	endif

	if alwaysLine or abs(gs_fill_type - WALL_SKINS_PARAMS[iRightmost][SKIN_FILL]) > EPS then
		penUpperSideContour = gs_cont_pen
		penUpperInnerContour = gs_cont_pen
	else
		if thickSecond > WALL_SKINS_PARAMS[iRightmost][SKIN_THICKNESS]-EPS then
			if abs(wallIncl) < EPS then
				penUpperInnerContour = gs_cont_pen
			endif
			if (secTrapType = 0 or secTrapType = 2) and WALL_SKINS_PARAMS[iRightmost][SKIN_THICKEN_TRAPEZOID] < 1-EPS then
				penUpperInnerContour = gs_cont_pen
			endif
		endif
	endif
	if useWallPen and (abs (thickSecond - WALL_SKINS_PARAMS[iRightmost][SKIN_THICKNESS]) < EPS) then
		penUpperInnerContour = WALL_SKINS_PARAMS[iRightmost-1][SKIN_LOWER_LINE_PEN]
		ltUpperInnerContour = WALL_SKINS_PARAMS[iRightmost-1][SKIN_LOWER_LINE_TYPE]
	endif
	endif
	if gs_fill_pen < 1 then
	gs_fill_pen = 1
	endif

	! --- the 3 rectangles ---
	fillType = 1	! cut first
	set fill 0
	for i = 1 to 2
	call "SkinRect" PARAMETERS startX = thickCap, startY = yWallStart,
			endX = length, endY = yWallStart + thickFirst,
			innerRadius = r0, outerRadius = r0 + WALL_THICKNESS,
			incAngle = wallIncl, trapType = firstTrapType,
			fillPen = gs_fill_pen, fillBGPen = gs_back_pen,
			fillType = fillType,
			bLocalFill = bLocalFill,
			bFitToSkinFill = bFitToSkinFill,
			bChangeFitToSkinFillOrient = 1,
			bCircularDistortion	= 1,
			endLinePen = penLowerSideContour, endLineLineType = gs_cont_lt, endLineCont = 0,
			bottomLinePen = penLowerInnerContour, bottomLineLineType = ltLowerInnerContour, bottomLineCont = 0,
			topLinePen = gs_cont_pen, topLineLineType = gs_cont_lt, topLineCont = 1
	call "SkinRect" PARAMETERS startX = 0, startY = yWallStart,
			endX = thickCap, endY = yWallEnd,
			innerRadius = r0, outerRadius = r0 + WALL_THICKNESS,
			incAngle = wallIncl, trapType = 1,
			fillPen = gs_fill_pen, fillBGPen = gs_back_pen,
			fillType = fillType,
			bLocalFill = bLocalFill,
			bFitToSkinFill = bFitToSkinFill,
			bChangeFitToSkinFillOrient = 0,
			bCircularDistortion	= 0,
			startLinePen = gs_cont_pen, startLineLineType = gs_cont_lt, startLineCont = 1,
			bottomLinePen = gs_cont_pen, bottomLineLineType = gs_cont_lt, bottomLineCont = 1,
			topLinePen = gs_cont_pen, topLineLineType = gs_cont_lt, topLineCont = 1
	call "SkinRect" PARAMETERS startX = thickCap, startY = thickSecFromBeg,
			endX = length, endY = yWallEnd,
			innerRadius = r0, outerRadius = r0 + WALL_THICKNESS,
			incAngle = wallIncl, trapType = secTrapType,
			fillPen = gs_fill_pen, fillBGPen = gs_back_pen,
			fillType = fillType,
			bLocalFill = bLocalFill,
			bFitToSkinFill = bFitToSkinFill,
			bChangeFitToSkinFillOrient = 1,
			bCircularDistortion	= 1,
			endLinePen = penUpperSideContour, endLineLineType = gs_cont_lt, endLineCont = 0,
			bottomLinePen = gs_cont_pen, bottomLineLineType = gs_cont_lt, bottomLineCont = 1,
			topLinePen = penUpperInnerContour, topLineLineType = ltUpperInnerContour, topLineCont = 0

	fillType = 0	! then fill
	set fill gs_fill_type
	next i

	! ==============================================================================
	! HOTSPOTS
	! ==============================================================================

	unID = 1
	midPos = (length + thickcap) / 2

	! --- fix hotspots at the end line ---
	xMoveTo = length
	gosub 1

	HOTSPOT2 0, additionIfMirr+yWallStart+thickFirst, unID						! fix
	unID = unID + 1
	HOTSPOT2 0, additionNotMirr+yWallEnd-thickSecond, unID	! fix
	unID = unID + 1

	del moveStepNum

	! --- fix hotspots on the main side ---
	xMoveTo = thickCap
	gosub 1

	HOTSPOT2 0, additionIfMirr+yWallStart+thickFirst, unID						! fix
	unID = unID + 1
	HOTSPOT2 0, additionNotMirr+yWallEnd-thickSecond, unID	! fix
	unID = unID + 1

	del moveStepNum

	! --- editable HSs on the sides ---
	if not(isComposite and useSkinThickness) then
	xMoveTo = midPos
	gosub 1

	if SYMB_MIRRORED then
		HOTSPOT2 0, additionIfMirr+yWallStart, unID, thickOtherSide, 1+128				! base
		unID = unID + 1
		HOTSPOT2 0, additionIfMirr+yWallStart-0.1, unID, thickOtherSide, 3				! reference
		unID = unID + 1
		HOTSPOT2 0, additionIfMirr+yWallStart+thickOtherSide, unID, thickOtherSide, 2	! moving
		unID = unID + 1

		HOTSPOT2 0, additionNotMirr+yWallEnd, unID, thickRefSide, 1+128			! base
		unID = unID + 1
		HOTSPOT2 0, additionNotMirr+yWallEnd+0.1, unID, thickRefSide, 3			! reference
		unID = unID + 1
		HOTSPOT2 0, additionNotMirr+yWallEnd-thickRefSide, unID, thickRefSide, 2	! moving
		unID = unID + 1
	else
		HOTSPOT2 0, additionIfMirr+yWallStart, unID, thickRefSide, 1+128				! base
		unID = unID + 1
		HOTSPOT2 0, additionIfMirr+yWallStart-0.1, unID, thickRefSide, 3				! reference
		unID = unID + 1
		HOTSPOT2 0, additionIfMirr+yWallStart+thickRefSide, unID, thickRefSide, 2		! moving
		unID = unID + 1

		HOTSPOT2 0, additionNotMirr+yWallEnd, unID, thickOtherSide, 1+128			! base
		unID = unID + 1
		HOTSPOT2 0, additionNotMirr+yWallEnd+0.1, unID, thickOtherSide, 3			! reference
		unID = unID + 1
		HOTSPOT2 0, additionNotMirr+yWallEnd-thickOtherSide, unID, thickOtherSide, 2	! moving
		unID = unID + 1
	endif

	del moveStepNum
	endif

	! --- editable HS on the main side ---
	if r0 < EPS then

	! --- editable HS on the main side ---
	xMoveTo = thickCap
	gosub 1

	yMainEditHP = ((yWallStart + thickFirst + additionIfMirr) + (yWallEnd - thickSecond + additionNotMirr)) / 2
	HOTSPOT2 -thickCap, yMainEditHP, unID, thickcap, 1+128		! base
	unID = unID + 1
	HOTSPOT2 -thickCap-0.1, yMainEditHP, unID, thickcap, 3		! reference
	unID = unID + 1
	HOTSPOT2 0, yMainEditHP, unID, thickcap, 2					! moving
	unID = unID + 1

	del moveStepNum
	else

	! --- editable HS on the main side ---
	revAngleExtra = 0
	if not(onWallBeg) then
		revAngleExtra = 512
	endif
	yMainEditHP = (yWallStart + thickFirst + yWallEnd - thickSecond) / 2
	HOTSPOT2 0, yMainEditHP, unID, thickCapAngle, 4+128			! base
	unID = unID + 1
	xMoveTo = -0.1
	gosub 1
	HOTSPOT2 0, yMainEditHP, unID, thickCapAngle, 7				! reference
	del moveStepNum
	unID = unID + 1
	xMoveTo = thickCap
	gosub 1
	HOTSPOT2 0, yMainEditHP, unID, thickCapAngle, 5, thickCap		! moving - display param: thickCap
	del moveStepNum
	unID = unID + 1
	if onWallBeg then
		HOTSPOT2 0, r0+WALL_THICKNESS, unID, thickCapAngle, 6+revAngleExtra	! centerpoint
	else
		HOTSPOT2 0, -r0, unID, thickCapAngle, 6+revAngleExtra				! centerpoint
	endif
	unID = unID + 1

	endif

	! --- replace AC hotspots at the ends ---
	call "Resize Wall End" PARAMETERS GS_HotspotUnIDBegin = 20000,
		cutWidthAngle = cutWidthAngle, AC_CutWidth = AC_CutWidth,
		r0 = r0, wallIncl = wallIncl, onWallBeg = onWallBeg
endif

end


! =============================================================================
! === SUBROUTINES
! =============================================================================

! =============================================================================
!		Move the coorinate system to a given X coordinate
! -----------------------------------------------------------------------------
! Input Parameters:
!	r0:			inner radius of the curved wall (0 otherwise)
!	wallIncl:	signed inclination of trapeze wall (0 otherwise)
!	alpha:		angle of the object in curved wall
!	length:		full length of the object
!	xMoveTo:	the X coordinate to move to
! Output:
!	additionIfMirr:		Y addition at the current X position if SYMB_MIRRORED = 1
!	additionNotMirr:	Y addition at the current X position if SYMB_MIRRORED = 0
!	moveStepNum:		number of the transformation added by the subroutine
! Remark:
!	The macro moves the coordinate system to the desired X coordinate,
!	after the place operation write a 'del moveStepNum' command
! =============================================================================

1:

additionIfMirr = 0
additionNotMirr = 0
if r0 > EPS then

	if onWallBeg then
		add2 0, r0+WALL_THICKNESS
		rot2 alpha * xMoveTo / length
		add2 0, -r0-WALL_THICKNESS
	else
		add2 0, -r0
		rot2 -alpha * xMoveTo / length
		add2 0, r0
	endif

	moveStepNum = 3

else

	if SYMB_MIRRORED then
		additionIfMirr = xMoveTo * tan(wallIncl)
	else
		additionNotMirr = xMoveTo * tan(wallIncl)
	endif

	add2 xMoveTo, 0
	moveStepNum = 1

endif

return
]]>
</Script_2D>

<ParamSection SectVersion="26" SectionFlags="0" SubIdent="0">
	<ParamSectHeader>
		<Version>26</Version>
		<AutoHotspots>true</AutoHotspots>
		<WDLeftFrame>0</WDLeftFrame>
		<WDRightFrame>0</WDRightFrame>
		<WDTopFrame>0</WDTopFrame>
		<WDBotFrame>0</WDBotFrame>
		<LayFlags>1</LayFlags>
		<WDMirrorThickness>0</WDMirrorThickness>
		<WDWallInset>0</WDWallInset>
		<SymbolColor>0</SymbolColor>
	</ParamSectHeader>
	<Parameters>
		<Length Name="A">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.3</Value>
		</Length>
		<Length Name="B">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.3</Value>
		</Length>
		<Length Name="ZZYZX">
			<Description><![CDATA["Высота"]]></Description>
			<Fix/>
			<Value>2.7</Value>
		</Length>
		<Integer Name="AC_Hole_Hotspot_Control">
			<Description><![CDATA["Узловые Точки 0-Нет,1-2D, 2-3D, 3-Все"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Boolean Name="AC_show2DHotspotsIn3D">
			<Description><![CDATA["Показ Узловых 2D Точек в 3D"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="ac_bottomlevel">
			<Description><![CDATA["Отметка Низа"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="ac_toplevel">
			<Description><![CDATA["Отметка Верха"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Boolean Name="AC_HoleSideMaterial">
			<Description><![CDATA["Покрытия Отверстия по Параметрам Стены"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="AC_HoleMaterialCurved">
			<Description><![CDATA["Стык Покрытий в Проеме Искривлен в Криволинейных Стенах"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="AC_WALL_INTID">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Angle Name="cutWidthAngle">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>118.542992096</Value>
		</Angle>
		<Length Name="AC_CutWidth">
			<Description><![CDATA["Ширина Сечения"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.3</Value>
		</Length>
		<Boolean Name="AC_fit_to_wall_height">
			<Description><![CDATA["По Высоте Стены"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Boolean>

		<!-- tThickness: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="tThickness">
			<Description><![CDATA["Толщина"]]></Description>
		</Title>
		<Boolean Name="useSkinThickness">
			<Description><![CDATA["Использовать Толщину Наружного Слоя"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Angle Name="thickCapAngle">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Length Name="thickCap">
			<Description><![CDATA["В конце"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="thickRefSide">
			<Description><![CDATA["Внешняя Грань"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="thickOtherSide">
			<Description><![CDATA["Внутренняя Грань"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>

		<!-- gs_2D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_2D_representation">
			<Description><![CDATA["2D-отображение"]]></Description>
			<Fix/>
		</Title>
		<Boolean Name="useWallPen">
			<Description><![CDATA["Использовать Перо Контура Стены"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<PenColor Name="gs_cont_pen">
			<Description><![CDATA["Перо Контура"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</PenColor>
		<LineType Name="gs_cont_lt">
			<Description><![CDATA["Тип Линии Контура"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</LineType>
		<Integer Name="iSkinsParameter">
			<Description><![CDATA["Параметры Слоя"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<FillPattern Name="gs_fill_type">
			<Description><![CDATA["Тип Штриховки"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>64</Value>
		</FillPattern>
		<PenColor Name="gs_fill_pen">
			<Description><![CDATA["Перо Штриховки"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>10</Value>
		</PenColor>
		<PenColor Name="gs_back_pen">
			<Description><![CDATA["Перо Фона Штриховки"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<Boolean Name="alwaysLine">
			<Description><![CDATA["Всегда Создавать Линию Контура"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- gs_3D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_3D_representation">
			<Description><![CDATA["3D-отображение"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
		</Title>

		<!-- b3DRepresentation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Boolean Name="b3DRepresentation">
			<Description><![CDATA["3D-отображение"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<PenColor Name="gs_wallEndPen_3D">
			<Description><![CDATA["Перо Контура в 3D"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</PenColor>
		<Material Name="matCap">
			<Description><![CDATA["Покрытие Окончания Стены"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>11</Value>
		</Material>
		<Angle Name="ac_wall_slant_angle1">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Angle Name="ac_wall_slant_angle2">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Angle>

		<!-- gs_list: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_list">
			<Description><![CDATA["Параметры Спецификаций"]]></Description>
			<Fix/>
		</Title>
		<RealNum Name="gs_list_cost">
			<Description><![CDATA["Цена"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="gs_list_manufacturer">
			<Description><![CDATA["Производитель"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_note">
			<Description><![CDATA["Примечания"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_location">
			<Description><![CDATA["Расположение"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_accessories">
			<Description><![CDATA["Аксессуары"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_Type">
			<Description><![CDATA["Тип Группы"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Другой"]]></Value>
		</String>
		<Integer Name="iFMType">
			<Description><![CDATA["Тип Группы"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>25</Value>
		</Integer>
		<String Name="FM_InventoryNumber">
			<Description><![CDATA["Инвентарный Номер"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_SerialNumber">
			<Description><![CDATA["Серийный Номер"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_ProductionYear">
			<Description><![CDATA["Год Производства"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<RealNum Name="FM_ObjectWeight">
			<Description><![CDATA["Вес Изделия"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="FM_ObjectWeightUnit">
			<Description><![CDATA["Единица Веса"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["кг"]]></Value>
		</String>
		<String Name="gs_list_custom1">
			<Description><![CDATA["Пользовательское Значение 1"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom2">
			<Description><![CDATA["Пользовательское Значение 2"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom3">
			<Description><![CDATA["Пользовательское Значение 3"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom4">
			<Description><![CDATA["Пользовательское Значение 4"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom5">
			<Description><![CDATA["Пользовательское Значение 5"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
	</Parameters>
</ParamSection>

<Ancestry SectVersion="1" SectionFlags="0" SubIdent="0" Template="false">
	<MainGUID>F938E33A-329D-4A36-BE3E-85E126820996</MainGUID>
	<MainGUID>103E8D2C-8230-42E1-9597-46F84CCE28C0</MainGUID>
	<MainGUID>784EAEA1-5041-4AA6-B6F4-EF263A891EE7</MainGUID>
	<MainGUID>0F059DC2-6053-11D7-9084-000393ABEA8E</MainGUID>
</Ancestry>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_3D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
!<TZs>

if _bShowWrappedEnd then

	if not(b3DRepresentation) then
	end
	endif

	_useWallMat = ( matCap = WALL_MAT_A |\
					matCap = WALL_MAT_B |\
					matCap = WALL_MAT_EDGE)

	elevation = 0
	if AC_fit_to_wall_height then
		ZZYZX = WALL_HEIGHT
		elevation = -GLOB_ELEVATION / sin (ac_wall_slant_angle1)
	endif

	dim trafo_array[][]

	rotz -90
	numTrafo = 1
	trafo_array[numTrafo][1] = TRAFO_ROT_Z
	trafo_array[numTrafo][2] = -90

	addz elevation
	numTrafo = numTrafo + 1
	trafo_array[numTrafo][1] = TRAFO_ADD_Z
	trafo_array[numTrafo][2] = elevation

	pen gs_wallEndPen_3D

	if abs(wallIncl) > EPS or abs(ac_wall_slant_angle1 - ac_wall_slant_angle2) > EPS then
	trapezoidCoreSkin = 0
	for j = 1 to WALL_SKINS_NUMBER
		if abs(WALL_SKINS_PARAMS [j][SKIN_THICKEN_TRAPEZOID] - 1) < EPS then
			trapezoidCoreSkin = j
		endif
	next j
	if not(SYMB_MIRRORED) then
		if 1 = trapezoidCoreSkin then
			firstTrapType = 1
			midTrapType = 2
			secTrapType = 2
		else
			if WALL_SKINS_NUMBER = trapezoidCoreSkin then
				firstTrapType = 0
				midTrapType = 0
				secTrapType = 1
			else
				firstTrapType = 0
				midTrapType = 1
				secTrapType = 2
			endif
		endif
	else
		if 1 = trapezoidCoreSkin then
			firstTrapType = 1
			midTrapType = 0
			secTrapType = 0
		else
			if WALL_SKINS_NUMBER = trapezoidCoreSkin then
				firstTrapType = 2
				midTrapType = 2
				secTrapType = 1
			else
				firstTrapType = 2
				midTrapType = 1
				secTrapType = 0
			endif
		endif
	endif
	else
	firstTrapType = 0
	midTrapType = 0
	secTrapType = 0
	endif

	bDoCut = 1
	for i = 1 to 2
	! bottom arm
	if thickFirst > eps then
		! bottom corner
		if thickCap > eps then
			if length > eps then
				mask2 = 0
				mask3 = 0
			else
				mask2 = 1 + 2
				mask3 = 2
			endif
			call "SkinRect" PARAMETERS trafo_array = trafo_array, numTrafo = numTrafo, gs_useWallMat = _useWallMat,
					startX = 0, startY = 0,
					endX = thickCap, endY = thickFirst,
					innerRadius = r0, incAngle = wallIncl,
					trapType = firstTrapType,
					ac_wall_slant_angle1 = ac_wall_slant_angle1, ac_wall_slant_angle2 = ac_wall_slant_angle2,
					bDoCut = bDoCut, height = ZZYZX,
					edge1 = 1 + 2 + 8, edge2 = 4 + 8 + mask2, edge3 = 1 + 8 + mask3, edge4 = 1 + 2 + 8,
					matLeft = matCap, matRight = matCap, matVert = matCap, matHoriz = matCap
			mask1 = 0
			mask4 = 0
		else
			mask1 = 2
			mask4 = 1 + 2 + 4
		endif

		! bottom arm
		if length > thickCap then
			call "SkinRect" PARAMETERS trafo_array = trafo_array, numTrafo = numTrafo, gs_useWallMat = _useWallMat,
					startX = thickCap, startY = 0,
					endX = length, endY = thickFirst,
					innerRadius = r0, incAngle = wallIncl,
					trapType = firstTrapType,
					ac_wall_slant_angle1 = ac_wall_slant_angle1, ac_wall_slant_angle2 = ac_wall_slant_angle2,
					bDoCut = bDoCut, height = ZZYZX,
					edge1 = 1 + 4 + 8 + mask1, edge2 = 1 + 2 + 4 + 8, edge3 = 1 + 2 + 4 + 8, edge4 = 8 + mask4,
					matLeft = matCap, matRight = matCap, matVert = matCap, matHoriz = matCap
		endif
	endif

	! upper arm
	if thickSecond > eps then
		! upper corner
		if thickCap > eps then
			if length > eps then
				mask2 = 0
				mask3 = 0
			else
				mask2 = 2 + 4
				mask3 = 2
			endif
			call "SkinRect" PARAMETERS trafo_array = trafo_array, numTrafo = numTrafo, gs_useWallMat = _useWallMat,
					startX = 0, startY = thickSecFromBeg,
					endX = thickCap, endY = WALL_THICKNESS,
					innerRadius = r0, incAngle = wallIncl,
					trapType = secTrapType,
					ac_wall_slant_angle1 = ac_wall_slant_angle1, ac_wall_slant_angle2 = ac_wall_slant_angle2,
					bDoCut = bDoCut, height = ZZYZX,
					edge1 = 6 + 8, edge2 = 1 + 8 + mask2, edge3 = 4 + 8 + mask3, edge4 = 6 + 8,
					matLeft = matCap, matRight = matCap, matVert = matCap, matHoriz = matCap
			mask1 = 0
			mask4 = 0
		else
			mask1 = 2
			mask4 = 1 + 2 + 4
		endif

		! upper arm
		if length > thickCap then
			call "SkinRect" PARAMETERS trafo_array = trafo_array, numTrafo = numTrafo, gs_useWallMat = _useWallMat,
					startX = thickCap, startY = thickSecFromBeg,
					endX = length, endY = WALL_THICKNESS,
					innerRadius = r0, incAngle = wallIncl,
					trapType = secTrapType,
					ac_wall_slant_angle1 = ac_wall_slant_angle1, ac_wall_slant_angle2 = ac_wall_slant_angle2,
					bDoCut = bDoCut, height = ZZYZX,
					edge1 = 1 + 4 + 8 + mask1, edge2 = 1 + 2 + 4 + 8, edge3 = 1 + 2 + 4 + 8, edge4 = 8 + mask4,
					matLeft = matCap, matRight = matCap, matVert = matCap, matHoriz = matCap
		endif
	endif

	! middle part
	if thickCap > eps then
		mask = 0
		if thickFirst < eps then
			mask = mask + 1
		endif
		if thickSecond < eps then
			mask = mask + 4
		endif
		if not ((abs(wallIncl) < EPS) and (abs(WALL_THICKNESS - thickFirst - thickSecond) < EPS)) then
			call "SkinRect" PARAMETERS trafo_array = trafo_array, numTrafo = numTrafo, gs_useWallMat = _useWallMat,
					startX = 0, startY = thickFirst,
					endX = thickCap, endY = thickSecFromBeg,
					innerRadius = r0, incAngle = wallIncl,
					trapType = midTrapType,
					ac_wall_slant_angle1 = ac_wall_slant_angle1, ac_wall_slant_angle2 = ac_wall_slant_angle2,
					bDoCut = bDoCut, height = ZZYZX,
					edge1 = 2 + 8 + mask, edge2 = 2 + 8 + mask, edge3 = 2 + 8 + mask, edge4 = 2 + 8 + mask,
					matLeft = matCap, matRight = matCap, matVert = matCap, matHoriz = matCap
		endif
	endif

	bDoCut = 0
	next i

	! --- replace AC hotspots at the ends ---
	call "Resize Wall End" PARAMETERS ZZYZX = ZZYZX,
		GS_HotspotUnIDBegin = 20000,
		cutWidthAngle = cutWidthAngle, AC_CutWidth = AC_CutWidth,
		r0 = r0, wallIncl = wallIncl, onWallBeg = onWallBeg

	del 2
endif
]]>
</Script_3D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_1D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
! const values for parameter: trafo_array
TRAFO_ADD_X = 1
TRAFO_ADD_Y = 2
TRAFO_ADD_Z = 3
TRAFO_ROT_X = 4
TRAFO_ROT_Y = 5
TRAFO_ROT_Z = 6
TRAFO_MUL_X = 7
TRAFO_MUL_Y = 8
TRAFO_MUL_Z = 9

! const values for parameter: iSkinsParameter
SKINSPARAM_AUTO   = 1
SKINSPARAM_LEFT   = 2
SKINSPARAM_RIGHT  = 3
SKINSPARAM_CUSTOM = 4

EPS = 0.001

SKIN_FILL				=  1
SKIN_THICKNESS			=  2
SKIN_CONT_PEN			=  3	! Obsolete (old contour pen)
SKIN_FILL_PEN			=  4
SKIN_FILL_BACK_PEN		=  5
SKIN_CORE_STATUS		=  6
SKIN_UPPER_LINE_PEN		=  7
SKIN_UPPER_LINE_TYPE	=  8
SKIN_LOWER_LINE_PEN		=  9
SKIN_LOWER_LINE_TYPE	= 10
SKIN_END_FACE_PEN		= 11
SKIN_FILL_ORIENTATION	= 12	! 0 - global, 1 - local
SKIN_TYPE				= 13	! 0 - cut, 1 - below cutplane, 2 - above cutplane (all skin types are 0 for simple walls)
!	For D/W in complex walls on the floor plan this variable contains the data of all cut skins, for wall ends on the floor plan the data of all skins.
!	For D/W and wall ends in the 3D window contains the data of the skins actually cut by the D/W or wall end
SKIN_END_LINE_TYPE		= 14
SKIN_FINISH_STATUS		= 15
SKIN_FILL_FIT_TO_SKIN	= 16
SKIN_THICKEN_TRAPEZOID	= 17


! --- wall geometry ---

length = AC_CutWidth

if round_int(ac_wall_slant_angle2) = 0 and round_int(ac_wall_slant_angle1) = 0 then
	ac_wall_slant_angle1 = 90
	ac_wall_slant_angle2 = 90
endif

isComposite = 0
if 	(WALL_COMPS_NAME <> "" and WALL_SKINS_NUMBER > 1) | \
	(GLOB_SCRIPT_TYPE = 2 & ((abs(ac_wall_slant_angle1 - 90) > eps) | (abs(ac_wall_slant_angle2 - 90) > eps))) then
	isComposite = 1
endif

yWallStart = 0
yWallEnd = WALL_THICKNESS

iOnlyCutSkin = 0
iLeftmost = 1
iRightmost = WALL_SKINS_NUMBER
if isComposite then
	nSkins = WALL_SKINS_NUMBER
	bBefore = 1
	for i = 1 to WALL_SKINS_NUMBER
		if WALL_SKINS_PARAMS[i][SKIN_TYPE] < 1 then
			iOnlyCutSkin = i
			bBefore = 0
		else
			nSkins = nSkins - 1
		endif
		if bBefore then
			yWallStart = yWallStart + WALL_SKINS_PARAMS[i][SKIN_THICKNESS]
			iLeftmost = iLeftmost + 1
		endif
	next i

	if iOnlyCutSkin = 0 then end	! No cut skins found

	if nSkins <= 1 then
		isComposite = false
		yWallEnd = yWallStart + WALL_SKINS_PARAMS[iOnlyCutSkin][SKIN_THICKNESS]
		WALL_FILL = WALL_SKINS_PARAMS[iOnlyCutSkin][SKIN_FILL]
		iRightmost = iOnlyCutSkin
	else
		bBefore = 1
		for i = 0 to WALL_SKINS_NUMBER-1
			if WALL_SKINS_PARAMS[WALL_SKINS_NUMBER-i][SKIN_TYPE] < 1 then
				bBefore = 0
			endif
			if bBefore then
				yWallEnd = yWallEnd - WALL_SKINS_PARAMS[WALL_SKINS_NUMBER-i][SKIN_THICKNESS]
				iRightmost = iRightmost - 1
			endif
		next i
	endif
endif

onWallBeg = (abs(WIDO_POSITION) < EPS)

wallIncl = WALL_INCL
maxWallThickness = WALL_START_THICKNESS
if maxWallThickness < WALL_END_THICKNESS then maxWallThickness = WALL_END_THICKNESS

if abs(maxWallThickness - WALL_END_THICKNESS) < EPS then
	if (abs(maxWallThickness - WALL_THICKNESS) < EPS & not(SYMB_MIRRORED)) | \
		(abs(maxWallThickness - WALL_THICKNESS) > EPS & SYMB_MIRRORED) then
		wallIncl = -WALL_INCL
	endif
else
	if (abs(maxWallThickness - WALL_THICKNESS) < EPS & SYMB_MIRRORED) | \
		(abs(maxWallThickness - WALL_THICKNESS) > EPS & not(SYMB_MIRRORED)) then
		wallIncl = -WALL_INCL
	endif
endif

isCurved = 0
r0 = 0
alpha = 0
if abs(WIDO_ORIG_DIST) > EPS then
	isCurved = 1
	if WIDO_ORIG_DIST > 0 then
		r0 = abs(WIDO_ORIG_DIST) + yWallStart - WALL_THICKNESS
	else
		r0 = abs(WIDO_ORIG_DIST) - yWallStart
	endif
	alpha = (length / (r0 + WALL_THICKNESS/2)) / PI * 180
endif

! --- end cap shape ---

if useSkinThickness and isComposite then

	thickFirst = WALL_SKINS_PARAMS[iLeftmost][SKIN_THICKNESS]
	thickSecond = WALL_SKINS_PARAMS[iRightmost][SKIN_THICKNESS]

	if abs(wallIncl) > EPS and SYMB_MIRRORED then
		thickFirst = WALL_SKINS_PARAMS[iLeftmost][SKIN_THICKNESS] / cos(wallIncl)
	endif

else

	if SYMB_MIRRORED then
		thickFirst = thickOtherSide
		thickSecond = thickRefSide
	else
		thickFirst = thickRefSide
		thickSecond = thickOtherSide
	endif

endif
thickSecFromBeg = yWallEnd - thickSecond

! ==============================================================================
! Partial Stucture Display related calculations
! ==============================================================================

! Partial Stucture Display defines:
STRUCTURE_ENTIRE_STRUCTURE	= 0
STRUCTURE_CORE_ONLY			= 1
STRUCTURE_WITHOUT_FINISHES	= 2


! ==============================================================================
! Control for showing 2D and 3D according to PSD and iSkinsParameter
! ==============================================================================

if (GLOB_SCRIPT_TYPE = 2) | (GLOB_SCRIPT_TYPE = 3) then
	_bShowEntireWall = (GLOB_STRUCTURE_DISPLAY = STRUCTURE_ENTIRE_STRUCTURE)

	iUsedSkin = 0
	if iSkinsParameter <> SKINSPARAM_CUSTOM and isComposite then

		if iSkinsParameter = SKINSPARAM_LEFT then
			iUsedSkin = 1
			while (WALL_SKINS_PARAMS[iUsedSkin][SKIN_TYPE] > 0) and (iUsedSkin < WALL_SKINS_NUMBER) do
				iUsedSkin = iUsedSkin + 1
			endwhile
		else
			if iSkinsParameter = SKINSPARAM_RIGHT then
				iUsedSkin = iRightmost
			else	! automatic
				if WALL_SKINS_PARAMS[iRightmost][SKIN_THICKNESS] > WALL_SKINS_PARAMS[iLeftmost][SKIN_THICKNESS] then
					iUsedSkin = iRightmost
				else
					iUsedSkin = iLeftmost
				endif
			endif
		endif

		_bShowWrappedEnd  = _bShowEntireWall |\
							(GLOB_STRUCTURE_DISPLAY = STRUCTURE_CORE_ONLY & abs(WALL_SKINS_PARAMS[iUsedSkin][SKIN_CORE_STATUS]) > EPS) |\
							(GLOB_STRUCTURE_DISPLAY = STRUCTURE_WITHOUT_FINISHES & abs(WALL_SKINS_PARAMS[iUsedSkin][SKIN_FINISH_STATUS]-1) > EPS)
	else
		_bShowWrappedEnd  = _bShowEntireWall
	endif
endif

]]>
</Script_1D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_PR SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_PR>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_UI SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
ui_dialog `Толщина`,444,266

if isComposite then
	UI_INFIELD "useSkinThickness", 5, 10, 20, 20
	UI_OUTFIELD `Использовать Толщину Наружного Слоя`, 26, 13, 170, 20
endif

UI_OUTFIELD `В Конце (1):`, 5, 55, 140, 35
UI_INFIELD "thickCap", 150, 50, 75, 20

UI_OUTFIELD `На Наружной Поверхности (2):`, 5, 93, 140, 35
UI_INFIELD "thickRefSide", 150, 88, 75, 20

UI_OUTFIELD `На Внутренней Поверхности (3):`, 5, 130, 140, 35
UI_INFIELD "thickOtherSide", 150, 125, 75, 20

if isComposite and useSkinThickness then
	UI_PICT 1, 250, 5!, 190, 140
else
	UI_PICT 2, 250, 5!, 190, 140
endif
]]>
</Script_UI>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_VL SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
call "FM_types" parameters all

if isComposite then
	values{2} "iSkinsParameter" 	SKINSPARAM_AUTO, `Автоматически`,
								SKINSPARAM_LEFT, `Крайний Левый Слой`,
								SKINSPARAM_RIGHT, `Крайний Правый Слой`,
								SKINSPARAM_CUSTOM, `Специальный`
else
	values{2} "iSkinsParameter" 	SKINSPARAM_AUTO, `Автоматически`,
								SKINSPARAM_CUSTOM, `Специальный`
endif
values "thickRefSide" range (0, WALL_THICKNESS/2)
values "thickOtherSide" range (0, WALL_THICKNESS/2)
values "thickCap" range [0, length]
values "thickCapAngle" range [0, alpha]
values "AC_CutWidth" range [thickCap, )
values "cutWidthAngle" range [(thickCap / (r0 + WALL_THICKNESS/2)) / PI * 180, )

PARAMETERS B = AC_CutWidth

if GLOB_MODPAR_NAME = "thickCapAngle" then
	PARAMETERS thickCap = length * thickCapAngle / alpha
else
	if GLOB_MODPAR_NAME <> "" then
		PARAMETERS thickCapAngle = alpha * thickCap / length
	endif
endif
if GLOB_MODPAR_NAME = "cutWidthAngle" then
	PARAMETERS AC_CutWidth = cutWidthAngle * (r0 + WALL_THICKNESS/2) * PI / 180
else
	if GLOB_MODPAR_NAME <> "" then
		PARAMETERS cutWidthAngle = (length / (r0 + WALL_THICKNESS/2)) / PI * 180
	endif
endif

if isComposite and useSkinThickness then
	lock "thickRefSide", "thickOtherSide"
endif

if not(isComposite) then
	hideparameter "useSkinThickness"
	lock "alwaysLine"
endif

if useWallPen then
	lock "gs_cont_pen"
	lock "gs_cont_lt"
endif

if iSkinsParameter <> SKINSPARAM_CUSTOM then
	lock "gs_fill_type", "gs_fill_pen", "gs_back_pen"
endif

if gs_cont_pen < 1 then
	PARAMETERS gs_cont_pen = 1
endif

if gs_fill_pen < 1 then
	PARAMETERS gs_fill_pen = 1
endif

lock "AC_fit_to_wall_height"

if not(b3DRepresentation) then
	hideparameter "gs_wallEndPen_3D", "matCap"
endif

PARAMETERS A = WALL_THICKNESS
PARAMETERS B = AC_CutWidth
]]>
</Script_VL>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Comment SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[Элемент обволакивания торца стены.]]>
</Comment>

<Keywords SectVersion="1" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Keywords>

<CalledMacros SectVersion="2" SectionFlags="0" SubIdent="0">
	<Macro>
		<MName><![CDATA["SkinRect"]]></MName>
		<MainGUID>2B0688E1-BE95-4F94-AC6A-DD76D21592D3</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["Resize Wall End"]]></MName>
		<MainGUID>6CDF8E46-3A45-4DAC-87BD-87BDC1034F6D</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["FM_types"]]></MName>
		<MainGUID>2759D2DF-AA8E-44D1-AD1D-261581266B34</MainGUID>
	</Macro>
</CalledMacros>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="1" length_in_bytes="623" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000BE0000
	008C0203000000BFA8FBA800000009504C5445FFFFFF828282000000A15F81CC
	0000021749444154785EECD1C109C0400804C0E5C843AE0A9FE1AA4A2996E233
	58656205C73E84405CD0DFB088F84186912058302A4083881DE8482E2D050A1C
	14706032607A0E03E28D5736C845DE209AF39DC73568D0E064C13216DCE0B2C2
	58B0AF78DA2F63DC84612880FA23BC784AA54C9CC0CE291CA913538678E909DA
	9EA20347A03B6CC4A76C0549BEF9F8A7DFAA5055B58FF9EBE9D9496C9AB84CF1
	00840B7DA1A15765031070AFAA84CF68F770C5E622D0C1CF03EB8426EEECE315
	DB31B59A0D0E129A01A8E166C0FA84D737FFCC18F20D9F41BC2160430ADB00AD
	C706846FD0E0B101611B70A04A596AD0E34EEF840DAABEB85683B04175F36B29
	6B00AF46C549D6A0D544DC491AF0F93351D630B18AC286897890ED037E89A4CF
	1209586EC0E2F81E08F90608A3600894977C433F25AF294D9C391BC877C91C81
	900CA021217A962D36249843C5B1C91AD469CD61B206E580C3E40DB6B041D9D2
	0617389ED0201C601A1407AE9274E0FE869F5A25E781F9710D3507B3D39613C0
	F6FB86FF06B9A12D6C68F68586D5D0CA1B502137A0826FA0C47D99C1C43655D0
	F3E1369A08E8F97073D18DC72B0130E7748FC72E09C89FA210E600BA38366BD0
	C1732BB47C13300315C017778D588B0D10FCF94C641BA841AB0E15B2864EA142
	D0305DFA4E62C3B8B24EDAA0A0C377BAA0415959030E38D97DA9529A19600D10
	7CF68CE31AD84371E956F9BB0D3AF8320384D286FE8E7FC0FF3C1FAD6F239AC3
	27FBE90000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="2" length_in_bytes="624" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000BE0000
	008C0203000000BFA8FBA800000009504C5445FFFFFF828282000000A15F81CC
	0000021849444154785EECD1C109C0400804C0E5C843AE0A9FE1AA4A2996E233
	58656205C73E84405CD0DFB088F84186912058302A4083881DE8482E2D050A1C
	14706032607A0E03E28D5736C845DE209AF39DC73568D0E064C13216DCE0B2C2
	58B0AF78DA2F639D0662180CE7A21383A72275EAC498BBA7B84A4CDDBBF00494
	A7A8501FA1ECE996F353824A7A4E7DE7C316AA10829FA193F5E57348EDB6381F
	7381CF9FC94848C623793A5A5814693135F757597D02EEA87DA12ED2E2213C5E
	659355E9029BAA48DB579C302A085D91977DF73C4BE00E1F423201C9A18CE8E0
	5FF7E440911DC0EFC981223A50C1A2CC9C03E49B3EE81C86E7E87BA5838BC3B3
	5439D08AE993CE0168D93CA81C00330250E990E351E9700946E53DE4B449FBBF
	5408281C00BB7CA0B72DCB9403BD69E8B73CBB69877451AE795A1C7226B0EF25
	387187A2800845B013B3218722101752569304976A293022B037CD03D3846074
	70C1EAD06CA53C11415920383829D4256DC1ED093FD5A5A6AB843FC9612945B8
	E92001AA8D99F0EFF00DC2DAE8D01E8D04DFAF950E84301108213BF0E0D14600
	5C97083E1FC6D20CC0E7C368D1C5D315A012E674A2B1CB04A6A7A8C741803727
	30022DBA4287E63701E839A0FA62D7C0A59AE0CFA782A871C80B562484CE213A
	42681CF2D297D484DCD946EBE07CA4376D7070417F0F71723EEC240208059CC0
	2E6E3CE324077128CE6D95BF9B00D8D9081EAD0EE9863FC0FF7CDE0145FF3B7B
	C3DA26F70000000049454E44AE426082
	]]>
</GDLPict>

<Picture MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="0" length_in_bytes="686" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000800000
	00800806000000C33E61CB000000097048597300000B1300000B1301009A9C18
	0000001974455874536F6674776172650041646F626520496D61676552656164
	7971C9653C000002314944415478DAECDD314A035114856147445C41ACB43062
	16E020988D68A72EC32A4B49AC7425A952D85AA4B1D31558F9CC803662E77D90
	CBFB7E18064E3145EE3F333964DEA42BA5ECA05D767D04040001400010000400
	0140001000040001400010000400014000100004000140001000040001400010
	0004000140001000044012F6A20F38E9A78BCDEEC6475B85F5CB6A79EA0AD02E
	E3F0230E2F8888DE1E8F4E6E375B19F6F298FCECFCB20C5BF4AC0C3F495E4B80
	1AB780F966BBBB7E5D2F7E82A7E3F1ADFC7F79B59B4A8D5B8033363E4F730B30
	B43A793A010C2D364F2580A1690186A605F8F6AE053893B500C3D4020C530B90
	6B01722D40AE05C8B500B91620D702E45A807C0B5A4017FDA75157177D79FEDC
	6FFAC9CD83AEBCDFBFBD8F225BC06C7438EC775E56CB6EAB9F0ADE0CFFA1F547
	773F4A37AA550DA309BF02B4CEA49F96DF676AC4F0FF3AAE750109D8D6339F00
	8986FF9D13A0E1E1CF09908F14BF0510A01E295A00012A9161F804D00208A005
	400B8016002D005A00B4006801D002D04A0BF0A2C8242D60D64FE7AE0049189E
	09CCD202AC0BB02EC0F0AD0B8817C0D092AC0BA8BE38D43063F2B40218A6D5C1
	866975B05C0B906B01722DC030B500B91620D702E45A805C0B906B01722D40AE
	05C8B500B91620FF33AF2940F86BE23C155C17AF896B9B75F401BD28B2715C01
	0800028000200008000280002000080002800020000800028000200008000280
	002000080002800020000800028000200008000220055F020C00F84008C38037
	495D0000000049454E44AE426082
	]]>
</Picture>

<Copyright SectVersion="1" SectionFlags="0" SubIdent="0">
	<Author>GRAPHISOFT</Author>
	<License>
		<Type>CC BY-ND</Type>
		<Version>3.0</Version>
	</License>
</Copyright>

<MigrationTable SectVersion="1" SectionFlags="0" SubIdent="0">
	<MigrationTableElement>
		<MainGUID>9CA446FC-20F8-47A3-8255-C0F3CC6E9E9C</MainGUID>
		<Version>18</Version>
		<Name><![CDATA[""]]></Name>
		<AutoMigration>true</AutoMigration>
	</MigrationTableElement>
</MigrationTable>

</Symbol>
