<?xml version="1.0" encoding="UTF-8"?>
<Symbol IsArchivable="false" IsPlaceable="true" MainGUID="436F47D7-A687-4A16-BAB4-CCAE9DCE8741" MigrationValue="Normal" Owner="1196638531" Signature="1196644685" Version="43">
<Ancestry SectVersion="1" SectionFlags="0" SubIdent="0" Template="false">
	<MainGUID>F938E33A-329D-4A36-BE3E-85E126820996</MainGUID>
	<MainGUID>103E8D2C-8230-42E1-9597-46F84CCE28C0</MainGUID>
	<MainGUID>84E50B69-6FB6-4909-AC3D-E01EECBE3328</MainGUID>
	<MainGUID>BA0D5AC6-9C7F-4276-9719-E4DFD138DF96</MainGUID>
</Ancestry>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_3D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
IF gs_detlevel_3D_m = DLEV3D_SIMPLE THEN iTreed = 1	! Simple
IF gs_detlevel_3D_m = DLEV3D_DETAILED THEN iTreed = 2	! Detailed

IF gs_detlevel_3D_m = DLEV3D_OFF THEN end
IF gs_detlevel_3D_m = DLEV3D_SIMPLE THEN gs_resol = 4

IF (GLOB_CONTEXT > 20 and GLOB_CONTEXT < 40) THEN gs_detlevel_3D_m = DLEV3D_SIMPLE	!!Simple

IF gs_shadow=0 THEN SHADOW OFF

PEN gs_cont_pen
MATERIAL mat_ladder

ADD -ladderLength, -gs_ladder_width/2, 0

!!!!************************
!!!!************************  HOTSPOTS
!!!!************************
unID=1
!HOTSPOT 0,0,0,unID    		:unID=unID+1


!!!!************************
!!!!************************  EDITABLE HOTSPOTS
!!!!************************!


HOTSPOT 0,	 gs_ladder_width/2,0,unID,gs_ladder_width,1	: unID=unID+1
HOTSPOT 0,	 gs_ladder_width+1,0,unID,gs_ladder_width,3	: unID=unID+1
HOTSPOT 0,	-gs_ladder_width/2,0,unID,gs_ladder_width,2	: unID=unID+1


HOTSPOT ladderLength,	gs_ladder_width/2,	zzyzx,unID,B,1	: unID=unID+1
HOTSPOT ladderLength,	gs_ladder_width/2+1,zzyzx,unID,B,3	: unID=unID+1
HOTSPOT ladderLength,	gs_ladder_width/2-B,zzyzx,unID,B,2	: unID=unID+1

HOTSPOT A,	gs_ladder_width/2,	zzyzx,unID,B,1	: unID=unID+1
HOTSPOT A,	gs_ladder_width/2+1,zzyzx,unID,B,3	: unID=unID+1
HOTSPOT A,	gs_ladder_width/2-B,zzyzx,unID,B,2	: unID=unID+1

HOTSPOT ladderLength,0,0,unID,zzyzx,1+128      :unID=unID+1
HOTSPOT ladderLength,0,-0.1,unID,zzyzx,3       :unID=unID+1
HOTSPOT ladderLength,0,zzyzx,unID,zzyzx,2      :unID=unID+1


IF hr_p THEN
	ADDz zzyzx
	 HOTSPOT A+hr_d/2,-B+gs_ladder_width/2-hr_d/2,0,unID,hr_h,1+128    :unID=unID+1
	 HOTSPOT A+hr_d/2,-B+gs_ladder_width/2-hr_d/2,-0.1,unID,hr_h,3     :unID=unID+1
	 HOTSPOT A+hr_d/2,-B+gs_ladder_width/2-hr_d/2,hr_h,unID,hr_h,2   :unID=unID+1
	DEL 1
ENDIF

ADDz dY
 IF iHandrailPos = HANDRAILPOS_RIGHT or iHandrailPos = HANDRAILPOS_BOTH THEN
	HOTSPOT 2",-gs_ladder_width/2-hr_d/2,0,unID,hr_h,1+128    :unID=unID+1
	HOTSPOT 2",-gs_ladder_width/2-hr_d/2,-0.1,unID,hr_h,3     :unID=unID+1
	HOTSPOT 2",-gs_ladder_width/2-hr_d/2,hr_h,unID,hr_h,2   :unID=unID+1
 ENDIF

 IF iHandrailPos = HANDRAILPOS_LEFT or iHandrailPos = HANDRAILPOS_BOTH THEN
	HOTSPOT 2", gs_ladder_width/2-hr_d,0,unID,hr_h,1+128    :unID=unID+1
	HOTSPOT 2", gs_ladder_width/2-hr_d,-0.1,unID,hr_h,3     :unID=unID+1
	HOTSPOT 2", gs_ladder_width/2-hr_d,hr_h,unID,hr_h,2   :unID=unID+1
 ENDIF
DEL 1

hotspot ladderLength,						gs_ladder_width/2-B, ZZYZX, unID, gs_platform_length, 1+256	: unID=unID+1
hotspot ladderLength-1,						gs_ladder_width/2-B, ZZYZX, unID, gs_platform_length, 3		: unID=unID+1
hotspot ladderLength+gs_platform_length,	gs_ladder_width/2-B, ZZYZX, unID, gs_platform_length, 2		: unID=unID+1


!!!!************************
!!!!************************  SIDE RAILs
!!!!************************

ADDy -gs_ladder_width/2
ROTz 90
FOR i=1 to 2

	!!!!!!!****************************** ACCESSORIES
	IF iTreed = 2 THEN	! Detailed
		if i=2 THEN
			MULx -1
			ADDx -sr_t
		ENDIF
		MULx -1
		ROTx 90
		ADDz 1"

		PRISM_ 6,4",
			0,0,15,
			f_w,0,15,
			f_w,f_t,15,
			f_t,f_t,15,
			f_t,f_d,15,
			0,f_d,15
		IF i=2 THEN DEL 2

		DEL 3
	ENDIF


	 CUTPLANE 180
	ROTx 90
	 CUTPLANE 180
	DEL 1

	ADD 0,-ladderLength,zzyzx
	 CUTPLANE 90
	DEL 1

	ADDz zzyzx
	 CUTPLANE
	DEL 1

	ADDy -6"
	ROTx 90-alfa
	ADDz -6"*sin(90-alfa)
	PRISM_ 8,zzyzx/sin(alfa),
		0,0,15,
		sr_d,0,15,
		sr_d,sr_t,15,
		sr_t,sr_t,15,
		sr_t,sr_w-sr_t,15,
		sr_d,sr_w-sr_t,15,
		sr_d,sr_w,15,
		0,sr_w,15
	DEL 3
	 CUTEND
	 CUTEND
	 CUTEND
	 CUTEND

	ADDx gs_ladder_width
	MULx -1
NEXT i
DEL 4
DEL 2

!!!!************************
!!!!************************  STEPS
!!!!************************


GROUP "LadderStep"
	!!!!!!!****************************** SIMPLE STEPS
	IF iTreed = 1 THEN
	  PRISM_ 5,st_h,
		-gs_ladder_width/2+sr_t,	0,		15,
		-gs_ladder_width/2+sr_t,	st_w,	15,
		 gs_ladder_width/2-sr_t,	st_w,	15,
		 gs_ladder_width/2-sr_t,	0,		15,
		-gs_ladder_width/2+sr_t,	0,		-1
	ENDIF

	!!!!!!!****************************** DETAILED STEPS
	IF iTreed = 2 THEN
	  PRISM_ 10,st_h,
		-gs_ladder_width/2+sr_t,	0,		15,
		-gs_ladder_width/2+sr_t,	st_w,	15,
		 gs_ladder_width/2-sr_t,	st_w,	15,
		 gs_ladder_width/2-sr_t,	0,		15,
		-gs_ladder_width/2+sr_t,	0,		-1,

		-gs_ladder_width/2+sr_t+st_t,	st_t,		15,
		-gs_ladder_width/2+sr_t+st_t,	st_w-st_t,	15,
		 gs_ladder_width/2-sr_t-st_t,	st_w-st_t,	15,
		 gs_ladder_width/2-sr_t-st_t,	st_t,		15,
		-gs_ladder_width/2+sr_t+st_t,	st_t,		-1

	  ROTx 90
	  ADDz -st_t
	  FOR p=1 to npY-1
		ADDz -dpY
		 POLY 4,
			-gs_ladder_width/2+sr_t+st_t,	0,
			-gs_ladder_width/2+sr_t+st_t,	st_h,
			 gs_ladder_width/2-sr_t-st_t,	st_h,
			 gs_ladder_width/2-sr_t-st_t,	0
	  NEXT p
	  DEL 2 + (npY-1)

	  ROTz 90
	  ROTx 90
	  ADDz -gs_ladder_width/2+sr_t+st_t
	  FOR p=1 to npX-1
		ADDz dpX
		 POLY 4,
			st_t,		0,
			st_t,		st_h,
			st_w-st_t,	st_h,
			st_w-st_t,	0
	  NEXT p
	  DEL 3 + (npX-1)
	ENDIF
ENDGROUP

ROTz -90
ADD 0, ladderLength - n_st * dX, -st_h

FOR s=1 TO n_st - 1
	ADD 0,dX,dY
	PLACEGROUP "LadderStep"
NEXT s
DEL 2 + n_st - 1


!!!!************************
!!!!************************  HANDRAIL
!!!!************************

RESOL gs_resol

halfD = hr_d/2

IF iHandrailPos = HANDRAILPOS_LEFT or iHandrailPos = HANDRAILPOS_BOTH THEN
	ADD 2",gs_ladder_width/2-hr_d,0

	TUBE 2,4,1+2+16+32,
		0,0,901,
		halfD,360,4001,

		0-dX,0,hr_h,0,
		0,0,hr_h+dY,0,

		(n_st-1) * dX,	0,zzyzx+hr_h,0,
		n_st * dX,	0,zzyzx+hr_h+dY,0

	DEL 1
ENDIF

IF iHandrailPos = HANDRAILPOS_RIGHT or iHandrailPos = HANDRAILPOS_BOTH THEN

	numPosts = CEIL(((n_st-1) * dX) / postDist)
	postRealDist = ((n_st-1) * dX) / numPosts

	ADD 2",-gs_ladder_width/2-hr_d/2,0

	PUT	0,0,0,0,
		0,0,2",0,
		0,0,hr_h+dY,0,
		(n_st-1) * dX,	0,zzyzx+hr_h,0

	IF ABS(B-gs_ladder_width) < EPS THEN
		IF hr_p THEN
			PUT	ladderLength-2"-halfD,0,zzyzx+hr_h,0,
				ladderLength+1,0,zzyzx+hr_h,0
		ELSE
			PUT	ladderLength-2"-halfD+dX,0,zzyzx+hr_h+dY,0
		ENDIF
	ELSE
		IF hr_p THEN
			PUT	ladderLength-2"-halfD,0,zzyzx+hr_h,0,
				ladderLength,-1,zzyzx+hr_h,0
		ELSE
			PUT	ladderLength-2"-halfD+dX,0,zzyzx+hr_h+dY,0
		ENDIF
	ENDIF

	TUBE 2,NSP/4,1+2+16+32,
		0,0,901,
		halfD,360,4001,
		GET(NSP)

	ADDz hr_h+dY
	FOR i=1 TO numPosts

		ADDz -hr_h/2
		 ARMC halfD, halfD, postRealDist/COS(alfa), 0, 0, 90-alfa
		DEL 1

		ADD postRealDist,0,postRealDist*TAN(alfa)

		ROTz 180
		ROTy 90+alfa
		 ARMC halfD, halfD, hr_h+dY, 0, 0, 90-alfa
		DEL 2

	NEXT i
	DEL 2 + numPosts


!!!!!!!*********************  Accessories (only in detailed mode)
	IF iTreed = 2 THEN	! Detailed
		showLeft = 1
		showRight = 1

		ADD 2",-gs_ladder_width/2,2"
		MULy -1
		FOR i=1 TO numPosts+1
			GOSUB 200
			ADD postRealDist, 0, postRealDist*TAN(alfa)
		NEXT i
		DEL 2 + (numPosts+1)
	ENDIF
ENDIF



!!!!************************
!!!!************************  PLATFORM
!!!!************************

ROTz -90
ADD 0, ladderLength, ZZYZX-pl_h

BODY -1

! --- Platform Frame
ADD -gs_ladder_width/2, 0, -plf_t
TUBE 8,7, 1+2+16+32+64,
	plf_t,0, 0,
	plf_t,-plf_h+plf_t, 0,
	0,-plf_h+plf_t, 0,
	0,plf_h, 0,
	plf_t, plf_h, 0,
	plf_t, plf_t, 0,
	plf_w, plf_t, 0,
	plf_w, 0, 0,

	0,1,0, 0,
	0,0,0, 0,
	B, 0,0, 0,
	B, gs_platform_length,0, 0,
	0, gs_platform_length,0, 0,
	0,0,0, 0,
	1,0,0, 0

! --- Platform Support
ADDz -B
ROTy 45
ROTz 90
IF iTreed = 1 THEN
	GOSUB 100
	ADDx gs_platform_length - plf_w
	GOSUB 100
	DEL 1
ENDIF
IF iTreed = 2 THEN
	GOSUB 101
	ADDx gs_platform_length - plf_w
	GOSUB 101
	DEL 1
ENDIF
DEL 3
DEL 1

!!!!!!!****************************** SIMPLE PLATFORM
IF iTreed = 1 THEN
  PRISM_ 5,pl_h,
	-gs_ladder_width/2+plf_t,	plf_t,15,
	-gs_ladder_width/2+plf_t,	gs_platform_length-plf_t,15,
	-gs_ladder_width/2+B-plf_t,	gs_platform_length-plf_t,15,
	-gs_ladder_width/2+B-plf_t,	plf_t,15,
	-gs_ladder_width/2+plf_t,	plf_t,-1
ENDIF

!!!!!!!****************************** DETAILED PLATFORM
IF iTreed = 2 THEN
  PRISM_ 10,pl_h,
	-gs_ladder_width/2+plf_t,	plf_t,15,
	-gs_ladder_width/2+plf_t,	gs_platform_length-plf_t,15,
	-gs_ladder_width/2+B-plf_t,	gs_platform_length-plf_t,15,
	-gs_ladder_width/2+B-plf_t,	plf_t,15,
	-gs_ladder_width/2+plf_t,	plf_t,-1,

	-gs_ladder_width/2+plf_t+st_t,		plf_t+st_t,15,
	-gs_ladder_width/2+plf_t+st_t,		gs_platform_length-plf_t-st_t,15,
	-gs_ladder_width/2+B-plf_t-st_t,	gs_platform_length-plf_t-st_t,15,
	-gs_ladder_width/2+B-plf_t-st_t,	plf_t+st_t,15,
	-gs_ladder_width/2+plf_t+st_t,		plf_t+st_t,-1

	  ROTx 90
	  ADDz -plf_t-st_t
	  FOR p=1 to npYP-1
		ADDz -dpYP
		 POLY 4,
			-gs_ladder_width/2+plf_t+st_t,0,
			-gs_ladder_width/2+plf_t+st_t,st_h,
			-gs_ladder_width/2+B-plf_t-st_t,st_h,
			-gs_ladder_width/2+B-plf_t-st_t,0
	  NEXT p
	  DEL 2 + (npYP-1)

	  ROTz 90
	  ROTx 90
	  ADDz -gs_ladder_width/2+plf_t+st_t
	  FOR p=1 to npXP-1
		ADDz dpXP
		 POLY 4,
			plf_t+st_t,						0,
			plf_t+st_t,						st_h,
			gs_platform_length-plf_t-st_t,	st_h,
			gs_platform_length-plf_t-st_t,	0
	  NEXT p
	  DEL 3 + (npXP-1)

ENDIF

DEL 2

!!!!************************
!!!!************************  PLATFORM RAIL
!!!!************************

IF hr_p THEN
	halfD = hr_d/2

	ADD ladderLength, gs_ladder_width/2, ZZYZX

	IF iHandrailPos = HANDRAILPOS_RIGHT or iHandrailPos = HANDRAILPOS_BOTH THEN
		PUT	-halfD-1,	-gs_ladder_width-halfD, hr_h,	0,
			-halfD,		-gs_ladder_width-halfD,	hr_h,	0,
			-halfD,		-B-halfD,				hr_h,	0
	ELSE
		IF B-gs_ladder_width > 0.1 THEN
			PUT	-halfD,		-gs_ladder_width-halfD,	-1,		0,
				-halfD,		-gs_ladder_width-halfD,	-plf_w,	0,
				-halfD,		-gs_ladder_width-halfD,	 hr_h,	0,
				-halfD,		-B-halfD,				 hr_h,	0
		ELSE
			PUT -halfD-1,	-B-halfD,	hr_h,	0,
				-halfD,		-B-halfD,	hr_h,	0
		ENDIF
	ENDIF


	PUT	gs_platform_length+halfD,-B-halfD,hr_h,0,
		gs_platform_length+halfD,0,hr_h,0,
		gs_platform_length+halfD,1,hr_h,0


	TUBE 2,NSP/4,1+2+16+32,
		0,0,901,
		halfD,360,4001,
		GET(NSP)


	ADD plf_w/2, -B-halfD,hr_h
	ROTy 90

	numPosts = CEIL((gs_platform_length - plf_w) / postDist)
	postRealDist = (gs_platform_length - plf_w) / numPosts

	FOR i = 1 TO numPosts + 1
		IF i > 1 OR ABS(B-gs_ladder_width > EPS) OR (iHandrailPos = HANDRAILPOS_LEFT or iHandrailPos = HANDRAILPOS_NONE) THEN
			ARMC halfD, halfD, hr_h+plf_w, 0, 0, 90

			IF i>1 THEN
				ADDx hr_h/2
				ROTy 90

				if i = 2 & not(_bShowRightRailOnCorner) then
					ARMC halfD, halfD, postRealDist + (ladderLength - (n_st - 1) * dX - 2") + plf_w / 2, 0, 0, 90
				else
					ARMC halfD, halfD, postRealDist, 0, 0, 90
				endif

				DEL 2
			ENDIF

			IF iTreed = 2 THEN	! Detailed
				ADD hr_h+plf_w,halfD,0
				ROTy -90
				ROTz 180
				showLeft = NOT(i=1)
				showRight = NOT(i=numPosts + 1)
				GOSUB 200
				DEL 3
			ENDIF
		ENDIF
		ADDz postRealDist
	NEXT i

	DEL 2 + numPosts + 1

	ADD gs_platform_length - plf_w/2, -B-halfD, hr_h/2
	ROTz 90
	ARMC halfD, halfD, B+halfD, 0, 0, 90
	DEL 2

	DEL 1
ENDIF

DEL TOP
END !!!!! END !!!!! END !!!!! END !!!!! END !!!!! END !!!!! END



100:	! Platform Support - Simple
	CUTPLANE -135
	SPRISM_ mat_ladder, mat_ladder, mat_ladder,
		4, 0,0, 1,0, SQR(2)*B, 45,
		plf_t,0, 15,
		plf_w-plf_t,0, 15,
		plf_w-plf_t,plf_w, 15,
		plf_t,plf_w, 15
	CUTEND
RETURN

101:	! Platform Support - Detailed

	ROTx 45
	ROTy 90
	ROTz 180
	ADDy -B+plf_h-plf_t
	PRISM_ 6,plf_w,
		0,0,15,
		f_w,0,15,
		f_w,f_t,15,
		f_t,f_t,15,
		f_t,f_d,15,
		0,f_d,15
	DEL 4

	ADDz SQR(2)*plf_t
	CUTPLANE -135
	DEL 1
	SPRISM_ mat_ladder, mat_ladder, mat_ladder,
		4, 0,0, 1,0, SQR(2)*B, 45,
		plf_t,0, 15,
		plf_w-plf_t,0, 15,
		plf_w-plf_t,plf_w, 15,
		plf_t,plf_w, 15
	CUTEND

	ROTx 45
	ADD -plf_w,0,0
		BLOCK 3*plf_w, SQR(2)*plf_w+plf_t, plf_t
	DEL 2
RETURN


200:	! Rail Support
	IF showRight THEN
		PUT	-2",	0,		15,
			-2",	f_t,	15
	ELSE
		PUT	-halfD-f_t,	0,		15
	ENDIF
	PUT	-halfD-f_t,	f_t,	15,
		-halfD-f_t,	halfD,	79,
		 halfD+f_t,	halfD,	1079,
		 halfD+f_t,	f_t,	15
	IF showLeft THEN
		PUT 2",		f_t,	15,
			2",		0,		15
	ELSE
		PUT halfD+f_t, 0,		15
	ENDIF
	PUT	 halfD,		0,		15,
		 halfD,		halfD,	79,
		-halfD,		halfD,	1079,
		-halfD,		0,		15

	PRISM_ NSP/3, 2", GET(NSP)
RETURN


]]>
</Script_3D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_2D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[

cutplaneHeight	= GLOB_CSTORY_ELEV - GLOB_HSTORY_ELEV + GLOB_CUTPLANES_INFO[1]


PEN gs_cont_pen
FILL gs_fill_type

ADD2 -ladderLength, -gs_ladder_width/2


! ------------------------------------------------------------------------------
! HOTSPOTS
! ------------------------------------------------------------------------------

unID=1
!!!HOTSPOT2 0,0,unID   : unID=unID+1
HOTSPOT2 ladderLength,0,unID   : unID=unID+1


! ------------------------------------------------------------------------------
! STORY SENSITIVE
! ------------------------------------------------------------------------------
bCutted		= 0
lineType	= gs_LineType
cuttingPos	= 0
holeWidth	= 0.05
startOffset = ladderLength - n_st * dX
halfD		= hr_d/2
bDetailedHandrail = 1
if bStorySensitive then
	if cutplaneHeight > ac_toplevel then
		!!No cutting all draw symbol line
	else
		if cutplaneHeight < ac_bottomlevel then		!All draw hidden, No cutting
			bDetailedHandrail = 0
			lineType = gs_LineTypeStUp
		else
			! Cutting
			bDetailedHandrail = 0
			cutHeigth = cutplaneHeight-ac_bottomlevel

			nCutPosY = int(cutHeigth / dY) + 1
			if nCutPosY < 1 then nCutPosY = 1
			if nCutPosY > n_st-1 then nCutPosY = n_st

			cutPosX = nCutPosY * dX + 0.5 * dX  + EPS
			cutAlpha =  atn((b/2-sr_d) / (dX*0.5))
			bCutted	= 1
		endif
	endif
endif

! ------------------------------------------------------------------------------
! Scale Sensitive
! ------------------------------------------------------------------------------
call "2dDetailLevel" parameters gs_detlevel_2D	= gs_detlevel_2D,
							gs_detlevel_2D_m	= gs_detlevel_2D_m,
							enable2dDetLevels	= 2+4+8+16,
		returned_parameters	det2D


! ------------------------------------------------------------------------------
! EDITABLE HOTSPOTS
! ------------------------------------------------------------------------------

hotspot2 0,	 gs_ladder_width/2,unID,gs_ladder_width,1	: unID=unID+1
hotspot2 0,	 gs_ladder_width+1,unID,gs_ladder_width,3	: unID=unID+1
hotspot2 0,	-gs_ladder_width/2,unID,gs_ladder_width,2	: unID=unID+1

hotspot2 ladderLength,	gs_ladder_width/2,	unID,B,1	: unID=unID+1
hotspot2 ladderLength,	gs_ladder_width/2+1,unID,B,3	: unID=unID+1
hotspot2 ladderLength,	gs_ladder_width/2-B,unID,B,2	: unID=unID+1

hotspot2 A,	gs_ladder_width/2,	unID,B,1	: unID=unID+1
hotspot2 A,	gs_ladder_width/2+1,unID,B,3	: unID=unID+1
hotspot2 A,	gs_ladder_width/2-B,unID,B,2	: unID=unID+1

if walkl then
	hotspot2 ladderLength-(n_st-1)*dX,0,unID   : unID=unID+1
endif

hotspot2 ladderLength,						gs_ladder_width/2-B, unID, gs_platform_length, 1+256	: unID=unID+1
hotspot2 ladderLength-1,					gs_ladder_width/2-B, unID, gs_platform_length, 3		: unID=unID+1
hotspot2 ladderLength+gs_platform_length,	gs_ladder_width/2-B, unID, gs_platform_length, 2		: unID=unID+1

! ------------------------------------------------------------------------------
! 2D Content
! ------------------------------------------------------------------------------
ROT2 -90
ch = INITADDONSCOPE ("PolyOperations", "", "")

nContainer = 1
prevSourceContainer	= "mySourceContainer"
lastDestContainer	= "myDestinationContainer"

PREPAREFUNCTION ch, "CreateContainer", prevSourceContainer, ""
PREPAREFUNCTION ch, "CreateContainer", lastDestContainer, ""

PREPAREFUNCTION ch, "SetSourceContainer",		prevSourceContainer, ""
PREPAREFUNCTION ch, "SetDestinationContainer",	lastDestContainer, ""

gosub "putBasePolygons"

if not(bCutted) then
	if lastDestContainer <> "" then
		PREPAREFUNCTION ch, "DeleteContainer",		lastDestContainer, ""
	endif
	lastDestContainer = prevSourceContainer
	prevSourceContainer = "mySourceContainer" + STR(nContainer,1,0)
	PREPAREFUNCTION ch, "CreateContainer",			prevSourceContainer, ""
	PREPAREFUNCTION ch, "SetSourceContainer",		prevSourceContainer, ""
	PREPAREFUNCTION ch, "SetDestinationContainer",	lastDestContainer, ""

	gosub "drawDestinationPolygons"
else
	dim sourceIDArray[]
	numOrigPoly = CALLFUNCTION (ch, "GetSourcePolygons", "", sourceIDArray)

	!----Below---------
	lineType = gs_LineType
	gosub "cutpolyAbove"

	dim resPolyIDArray[]
	for i = 1 to numOrigPoly
		nPgon = CALLFUNCTION (ch, sourceIDArray[i] + " - cutAbove", "", resPolyIDArray)
		gosub "drawDestinationPolygons"
	next i

	!----Above---------
	lineType = gs_LineTypeStUp
	gosub "cutpolyBelow"

	dim resPolyIDArray[]
	for i = 1 to numOrigPoly
		nPgon = CALLFUNCTION (ch, sourceIDArray[i] + " - cutBelow", "", resPolyIDArray)
		gosub "drawDestinationPolygons"
	next i
endif

CLOSEADDONSCOPE ch

DEL 1


! ------------------------------------------------------------------------------
! Walking Line
! ------------------------------------------------------------------------------
if walkl then
	if det2D = DETLEVEL2D_50 then
		line_type gs_LineType
		circle2 ladderLength-(n_st-1)*dX,0, 0.05
	endif

	line_type gs_wLineType1
	if not(bCutted) then
		line2 ladderLength-(n_st-1)*dX,0, ladderLength,0
	else
		line2 ladderLength-(n_st-1)*dX,0, startOffset + cutPosX -holeWidth,0
		line_type gs_LineTypeStUp
		line2 startOffset + cutPosX,0, ladderLength,0
	endif
	line2 ladderLength,0, ladderLength-dX, dX
	line2 ladderLength,0, ladderLength-dX,-dX
endif


! ------------------------------------------------------------------------------
END
! ------------------------------------------------------------------------------

"putBasePolygons":
	!------- SIDE RAILs ----------------
	DIM vertArr[][]
	DIM contArr[]
	DIM inhEdgeInfos[]

	nVertices	= 4
	contArr[1]	= 5
	nContour	= 1
	defaultInhEdgeInfo	= 1

	vertArr[1][1] = -gs_ladder_width/2
	vertArr[1][2] = 0
	vertArr[1][3] = 0.0
	vertArr[2][1] = -gs_ladder_width/2+sr_d
	vertArr[2][2] = 0
	vertArr[2][3] = 0.0
	vertArr[3][1] = -gs_ladder_width/2+sr_d
	vertArr[3][2] = ladderLength
	vertArr[3][3] = 0.0
	vertArr[4][1] = -gs_ladder_width/2
	vertArr[4][2] = ladderLength
	vertArr[4][3] = 0.0

	inhEdgeInfos[1] = 1
	inhEdgeInfos[2] = 1
	inhEdgeInfos[3] = 1
	inhEdgeInfos[4] = 1

	PREPAREFUNCTION ch, "Store", "sideRail_1", nVertices, nContour, vertArr, contArr, defaultInhEdgeInfo, inhEdgeInfos

	DIM vertArr[][]
	DIM contArr[]
	DIM inhEdgeInfos[]

	nVertices	= 4
	contArr[1]	= 5
	nContour	= 1
	defaultInhEdgeInfo	= 1

	vertArr[1][1] = gs_ladder_width/2
	vertArr[1][2] = 0
	vertArr[1][3] = 0.0
	vertArr[2][1] = gs_ladder_width/2-sr_d
	vertArr[2][2] = 0
	vertArr[2][3] = 0.0
	vertArr[3][1] = gs_ladder_width/2-sr_d
	vertArr[3][2] = ladderLength
	vertArr[3][3] = 0.0
	vertArr[4][1] = gs_ladder_width/2
	vertArr[4][2] = ladderLength
	vertArr[4][3] = 0.0

	inhEdgeInfos[1] = 1
	inhEdgeInfos[2] = 1
	inhEdgeInfos[3] = 1
	inhEdgeInfos[4] = 1

	PREPAREFUNCTION ch, "Store", "sideRail_2", nVertices, nContour, vertArr, contArr, defaultInhEdgeInfo, inhEdgeInfos


	!------- STEPS ----------------
	DIM vertArr[][]
	DIM contArr[]
	DIM inhEdgeInfos[]

	nVertices	= 4
	contArr[1]	= 5
	nContour	= 1
	defaultInhEdgeInfo	= 1

	inhEdgeInfos[1] = 0
	inhEdgeInfos[2] = 0
	inhEdgeInfos[3] = 0
	inhEdgeInfos[4] = 1

	if det2D = DETLEVEL2D_200 then
		vertArr[1][1] = -gs_ladder_width/2+sr_d
		vertArr[1][2] = startOffset+dX
		vertArr[1][3] = 0.0
		vertArr[2][1] = -gs_ladder_width/2+sr_d
		vertArr[2][2] = ladderLength
		vertArr[2][3] = 0.0
		vertArr[3][1] = gs_ladder_width/2-sr_d
		vertArr[3][2] = ladderLength
		vertArr[3][3] = 0.0
		vertArr[4][1] = gs_ladder_width/2-sr_d
		vertArr[4][2] = startOffset+dX
		vertArr[4][3] = 0.0

		PREPAREFUNCTION ch, "Store", "currentStep", nVertices, nContour, vertArr, contArr, defaultInhEdgeInfo, inhEdgeInfos
	else
		for s=1 to n_st-1
			offset = startOffset + dX*(s)

			if s = n_st then
				stepWidth = st_w
			else
				if (st_w) > dX then
					stepWidth = dX
				else
					stepWidth = st_w
				endif
			endif

			vertArr[1][1] = -gs_ladder_width/2+sr_d
			vertArr[1][2] = offset
			vertArr[1][3] = 0.0
			vertArr[2][1] = -gs_ladder_width/2+sr_d
			vertArr[2][2] = stepWidth+offset
			vertArr[2][3] = 0.0
			vertArr[3][1] = gs_ladder_width/2-sr_d
			vertArr[3][2] = stepWidth+offset
			vertArr[3][3] = 0.0
			vertArr[4][1] = gs_ladder_width/2-sr_d
			vertArr[4][2] = offset
			vertArr[4][3] = 0.0

			currentStep = "step" + STR(s,1,0)
			PREPAREFUNCTION ch, "Store", currentStep, nVertices, nContour, vertArr, contArr, defaultInhEdgeInfo, inhEdgeInfos

		next s
	endif


	!------- PLATFORM ----------------
	DIM vertArr[][]
	DIM contArr[]
	DIM inhEdgeInfos[]

	if not(bCutted) & det2D = DETLEVEL2D_50 then
		nVertices	= 10
		contArr[1]	= 5
		contArr[2]	= 10
		nContour	= 2
		defaultInhEdgeInfo	= 1

		vertArr[1][1] = -gs_ladder_width/2
		vertArr[1][2] = ladderLength
		vertArr[1][3] = 0.0
		vertArr[2][1] = -gs_ladder_width/2
		vertArr[2][2] = ladderLength+gs_platform_length
		vertArr[2][3] = 0.0
		vertArr[3][1] = -gs_ladder_width/2+B
		vertArr[3][2] = ladderLength+gs_platform_length
		vertArr[3][3] = 0.0
		vertArr[4][1] = -gs_ladder_width/2+B
		vertArr[4][2] = ladderLength
		vertArr[4][3] = 0.0
		vertArr[5][1] = -gs_ladder_width/2
		vertArr[5][2] = ladderLength
		vertArr[5][3] = 0.0
		vertArr[6][1] = -gs_ladder_width/2+plf_t
		vertArr[6][2] = ladderLength+plf_t
		vertArr[6][3] = 0.0
		vertArr[7][1] = -gs_ladder_width/2+plf_t
		vertArr[7][2] = ladderLength+gs_platform_length-plf_t
		vertArr[7][3] = 0.0
		vertArr[8][1] = -gs_ladder_width/2+B-plf_t
		vertArr[8][2] = ladderLength+gs_platform_length-plf_t
		vertArr[8][3] = 0.0
		vertArr[9][1] = -gs_ladder_width/2+B-plf_t
		vertArr[9][2] = ladderLength+plf_t
		vertArr[9][3] = 0.0
		vertArr[10][1] = -gs_ladder_width/2+plf_t
		vertArr[10][2] = ladderLength+plf_t
		vertArr[10][3] = 0.0

		inhEdgeInfos[1] = 1
		inhEdgeInfos[2] = 1
		inhEdgeInfos[3] = 1
		inhEdgeInfos[4] = 1
		inhEdgeInfos[5] = 1
		inhEdgeInfos[6] = 1
		inhEdgeInfos[7] = 1
		inhEdgeInfos[8] = 1
		inhEdgeInfos[9] = 1
		inhEdgeInfos[10] = 1

		PREPAREFUNCTION ch, "Store", "platform_1", nVertices, nContour, vertArr, contArr, defaultInhEdgeInfo, inhEdgeInfos


		DIM vertArr[][]
		DIM contArr[]
		DIM inhEdgeInfos[]

		nVertices	= 4
		contArr[1]	= 5
		nContour	= 1
		defaultInhEdgeInfo	= 1

		vertArr[1][1] = -gs_ladder_width/2+plf_t
		vertArr[1][2] = ladderLength+plf_t
		vertArr[1][3] = 0.0
		vertArr[2][1] = -gs_ladder_width/2+plf_t
		vertArr[2][2] = ladderLength+gs_platform_length-plf_t
		vertArr[2][3] = 0.0
		vertArr[3][1] = -gs_ladder_width/2+B-plf_t
		vertArr[3][2] = ladderLength+gs_platform_length-plf_t
		vertArr[3][3] = 0.0
		vertArr[4][1] = -gs_ladder_width/2+B-plf_t
		vertArr[4][2] = ladderLength+plf_t
		vertArr[4][3] = 0.0

		inhEdgeInfos[1] = 1
		inhEdgeInfos[2] = 1
		inhEdgeInfos[3] = 1
		inhEdgeInfos[4] = 1

		PREPAREFUNCTION ch, "Store", "platform_2", nVertices, nContour, vertArr, contArr, defaultInhEdgeInfo, inhEdgeInfos
	else
		nVertices	= 4
		contArr[1]	= 5
		nContour	= 1
		defaultInhEdgeInfo	= 1

		vertArr[1][1] = -gs_ladder_width/2
		vertArr[1][2] = ladderLength
		vertArr[1][3] = 0.0
		vertArr[2][1] = -gs_ladder_width/2
		vertArr[2][2] = ladderLength+gs_platform_length
		vertArr[2][3] = 0.0
		vertArr[3][1] = -gs_ladder_width/2+B
		vertArr[3][2] = ladderLength+gs_platform_length
		vertArr[3][3] = 0.0
		vertArr[4][1] = -gs_ladder_width/2+B
		vertArr[4][2] = ladderLength
		vertArr[4][3] = 0.0

		inhEdgeInfos[1] = 1
		inhEdgeInfos[2] = 1
		inhEdgeInfos[3] = 1
		inhEdgeInfos[4] = 1

		PREPAREFUNCTION ch, "Store", "platform_2", nVertices, nContour, vertArr, contArr, defaultInhEdgeInfo, inhEdgeInfos
	endif


	!------- Handrails ----------------
	if det2D = DETLEVEL2D_50 then
		if iHandrailPos = HANDRAILPOS_LEFT | iHandrailPos = HANDRAILPOS_BOTH then
			DIM vertArr[][]
			DIM contArr[]
			DIM inhEdgeInfos[]

			nVertices	= 4
			contArr[1]	= 5
			nContour	= 1
			defaultInhEdgeInfo	= 1

			vertArr[1][1] = -gs_ladder_width/2+hr_d-halfD
			vertArr[1][2] = 2"
			vertArr[1][3] = 0.0
			vertArr[2][1] = -gs_ladder_width/2+hr_d-halfD
			vertArr[2][2] = 2" + (n_st-1) * dX
			vertArr[2][3] = 0.0
			vertArr[3][1] = -gs_ladder_width/2+hr_d+halfD
			vertArr[3][2] = 2" + (n_st-1) * dX
			vertArr[3][3] = 0.0
			vertArr[4][1] = -gs_ladder_width/2+hr_d+halfD
			vertArr[4][2] = 2"
			vertArr[4][3] = 0.0

			inhEdgeInfos[1] = 1
			inhEdgeInfos[2] = 1
			inhEdgeInfos[3] = 1
			inhEdgeInfos[4] = 1

			PREPAREFUNCTION ch, "Store", "handrail_1", nVertices, nContour, vertArr, contArr, defaultInhEdgeInfo, inhEdgeInfos
		endif

		if iHandrailPos = HANDRAILPOS_RIGHT | iHandrailPos = HANDRAILPOS_BOTH then

			DIM vertArr[][]
			DIM contArr[]
			DIM inhEdgeInfos[]

			nVertices	= 4
			contArr[1]	= 5
			nContour	= 1
			defaultInhEdgeInfo	= 1

			vertArr[1][1] = gs_ladder_width/2
			vertArr[1][2] = 2"
			vertArr[1][3] = 0.0
			vertArr[2][1] = gs_ladder_width/2
			vertArr[2][2] = ladderLength - hr_d / 2 * NOT(_bShowRightRailOnCorner) - hr_d * 2 * _bShowRightRailOnCorner
			vertArr[2][3] = 0.0
			vertArr[3][1] = gs_ladder_width/2+2*halfD
			vertArr[3][2] = ladderLength - hr_d / 2 * NOT(_bShowRightRailOnCorner) - hr_d * 2 * _bShowRightRailOnCorner
			vertArr[3][3] = 0.0
			vertArr[4][1] = gs_ladder_width/2+2*halfD
			vertArr[4][2] = 2"
			vertArr[4][3] = 0.0

			inhEdgeInfos[1] = 0
			if hr_p then
				inhEdgeInfos[2] = bDetailedHandrail
			else
				inhEdgeInfos[2] = 1
			endif
			inhEdgeInfos[3] = 1
			inhEdgeInfos[4] = 1

			PREPAREFUNCTION ch, "Store", "handrail_2", nVertices, nContour, vertArr, contArr, defaultInhEdgeInfo, inhEdgeInfos
		endif

		if hr_p then
			if iHandrailPos = HANDRAILPOS_RIGHT | iHandrailPos = HANDRAILPOS_BOTH then
				if _bShowRightRailOnCorner then
					put  0,		-B,						0,
						 0,		-gs_ladder_width,		0,
						 -hr_d * 2,		-gs_ladder_width,		0,
						 -hr_d * 2,		-gs_ladder_width-hr_d,		1,
						-hr_d,	-gs_ladder_width-hr_d,	1,
						-hr_d,	-B-hr_d,				bDetailedHandrail

					if bDetailedHandrail then
						line2 hr_d+gs_ladder_width/2, -hr_d+ladderLength, gs_ladder_width/2, ladderLength
					endif
				endif
			else
				if _bShowRightRailOnCorner then
					put  0,		-B,					0,
						 0,		-gs_ladder_width,	0,
						-hr_d,	-gs_ladder_width,	1,
						-hr_d,	-B-hr_d,			1
				else
					put -halfD,	-B,		 1,
						-halfD,	-B-hr_d, 1
				endif
			endif

			DIM vertArr[][]
			DIM contArr[]
			DIM inhEdgeInfos[]

			nPoly	= NSP / 3

			nVertices	= nPoly
			contArr[1]	= nPoly + 1
			nContour	= 1
			defaultInhEdgeInfo	= 1

			for i = 1 to nPoly
				vertArr[i][2] = get(1) + ladderLength
				vertArr[i][1] = -get(1) - gs_ladder_width/2
				vertArr[i][3] = 0.0
				inhEdgeInfos[i] = get(1)
			next i

			if _bShowRightRailOnCorner then
				PREPAREFUNCTION ch, "Store", "handrail_31", nVertices, nContour, vertArr, contArr, defaultInhEdgeInfo, inhEdgeInfos
			endif

			put gs_platform_length+hr_d,	-B-hr_d, 1,
				gs_platform_length+hr_d,	 0, 1,
				gs_platform_length,			 0, 0,
				gs_platform_length,			-B, bDetailedHandrail

			DIM vertArr[][]
			DIM contArr[]
			DIM inhEdgeInfos[]

			nPoly	= NSP / 3

			nVertices	= nPoly
			contArr[1]	= nPoly + 1
			nContour	= 1
			defaultInhEdgeInfo	= 1

			for i = 1 to nPoly
				vertArr[i][2] = get(1) + ladderLength
				vertArr[i][1] = -get(1) - gs_ladder_width/2
				vertArr[i][3] = 0.0
				inhEdgeInfos[i] = get(1)
			next i

			PREPAREFUNCTION ch, "Store", "handrail_32", nVertices, nContour, vertArr, contArr, defaultInhEdgeInfo, inhEdgeInfos


			put gs_platform_length,			-B, bDetailedHandrail,
				gs_platform_length+hr_d,	-B-hr_d, 1,
				-hr_d / 2 * _bShowRightRailOnCorner - hr_d / 2,	-B-hr_d, bDetailedHandrail | NOT(_bShowRightRailOnCorner),
				-hr_d / 2 * NOT(_bShowRightRailOnCorner),							-B, 0

			DIM vertArr[][]
			DIM contArr[]
			DIM inhEdgeInfos[]

			nPoly	= NSP / 3

			nVertices	= nPoly
			contArr[1]	= nPoly + 1
			nContour	= 1
			defaultInhEdgeInfo	= 1

			for i = 1 to nPoly
				vertArr[i][2] = get(1) + ladderLength
				vertArr[i][1] = -get(1) - gs_ladder_width/2
				vertArr[i][3] = 0.0
				inhEdgeInfos[i] = get(1)
			next i

			PREPAREFUNCTION ch, "Store", "handrail_33", nVertices, nContour, vertArr, contArr, defaultInhEdgeInfo, inhEdgeInfos
		endif
	endif
return


"cutpolyAbove":
	DIM vertArr[][]
	DIM contArr[]

	cutWidth = b/2 + 1

	nVertices	= 4
	contArr[1]	= 5
	nContour	= 1

	vertArr[1][1] = -cutWidth
	vertArr[1][2] = startOffset + cutPosX + cutWidth/tan(cutAlpha) - holeWidth
	vertArr[1][3] = 0.0
	vertArr[2][1] = cutWidth
	vertArr[2][2] = startOffset + cutPosX - cutWidth/tan(cutAlpha) - holeWidth
	vertArr[2][3] = 0.0
	vertArr[3][1] = cutWidth
	vertArr[3][2] = a+1
	vertArr[3][3] = 0.0
	vertArr[4][1] = -cutWidth
	vertArr[4][2] = a+1
	vertArr[4][3] = 0.0

	PREPAREFUNCTION ch, "Store", "cutAbove", nVertices, nContour, vertArr, contArr
return

"cutpolyBelow":
	DIM vertArr[][]
	DIM contArr[]

	cutWidth = b/2 + 1

	nVertices	= 4
	contArr[1]	= 5
	nContour	= 1

	vertArr[1][1] = -cutWidth
	vertArr[1][2] = startOffset + cutPosX + cutWidth/tan(cutAlpha)
	vertArr[1][3] = 0.0
	vertArr[2][1] = cutWidth
	vertArr[2][2] = startOffset + cutPosX - cutWidth/tan(cutAlpha)
	vertArr[2][3] = 0.0
	vertArr[3][1] = cutWidth
	vertArr[3][2] = -1
	vertArr[3][3] = 0.0
	vertArr[4][1] = -cutWidth
	vertArr[4][2] = -1
	vertArr[4][3] = 0.0

	PREPAREFUNCTION ch, "Store", "cutBelow", nVertices, nContour, vertArr, contArr
return

"drawDestinationPolygons":
	line_type lineType
	dim resPolyIDArr[]
	numPoly = CALLFUNCTION(ch, "GetDestinationPolygons", "", resPolyIDArr)
	for cP = 1 to numPoly
		polygonID = resPolyIDArr[cP]
		mask = 1
		gosub "getGDLpolygonFromAPI"
		poly2_b NSP/3, 1+2+4+64,gs_fill_pen,gs_back_pen,
			get(NSP)

		PREPAREFUNCTION ch, "Dispose", polygonID, lastDestContainer
	next cP
return


! ==============================================================================
! GET GDL Polygon
! ------------------------------------------------------------------------------
! Input variables:
!	ch:				Channel ID
!	polygonID:		Polygon ID
!
! Returned variables:
!	GDL stack:			GDL polygon
! ==============================================================================
"getGDLpolygonFromAPI":
	DIM resVertices[]
	numVertices = CALLFUNCTION (ch, "GetVertices", polygonID, resVertices)
	numVertices = numVertices / 3

	DIM contArr[]
	numContours = CALLFUNCTION (ch, "GetContourEnds", polygonID, contArr)

	DIM inhEdgeInfos[]
	numEdges = CALLFUNCTION (ch, "GetInhEdgeInfos", polygonID, inhEdgeInfos)

	FOR contIndex = 1 TO numContours
		IF contIndex = 1 THEN
			begIdx = 0
		ELSE
			begIdx = endIdx +1
		ENDIF
		IF contIndex = numContours THEN
			endIdx = numVertices - 1
		ELSE
			endIdx = contArr[contIndex + 1] - 2 -(contIndex - 1)
		ENDIF

		bClosed = 0
		bStartWithLast = 0

		index = endIdx * 3
		lastVertX = resVertices[index + 1]
		lastVertY = resVertices[index + 2]
		lastVertA = resVertices[index + 3]
		edgeInfo  = inhEdgeInfos[endIdx + 1]

		IF ABS(lastVertA) > EPS THEN
			PUT lastVertX, lastVertY, 0
			bStartWithLast = 1
		ENDIF

		FOR vertIndex = begIdx TO endIdx
			index = vertIndex * 3
			actVertX = resVertices[index + 1]
			actVertY = resVertices[index + 2]
			actVertA = resVertices[index + 3]

			! ------------------------------------------------------------------------------
			! Show inherited edge information number
			! ------------------------------------------------------------------------------
			!
			!			text2	(lastVertX + actVertX) / 2,
			!					(lastVertY + actVertY) / 2,
			!					edgeInfo
			! ------------------------------------------------------------------------------

			IF vertIndex = begIdx THEN
				IF bStartWithLast THEN
					ac2gdl_spx = lastVertX
					ac2gdl_spy = lastVertY
				ELSE
					ac2gdl_spx = actVertX
					ac2gdl_spy = actVertY
				ENDIF
			ENDIF

			if abs(lastVertA) > EPS then
			!	ac2gdl_mx = (actVertX + lastVertX) / 2
			!	ac2gdl_my = (actVertY + lastVertY) / 2
			!	ac2gdl_ratio = 1 / 2 / tan (lastVertA / 2)
			!
			!	ac2gdl_cx = ac2gdl_mx - ac2gdl_ratio * (actVertY - lastVertY)	! Arc center
			!	ac2gdl_cy = ac2gdl_my + ac2gdl_ratio * (actVertX - lastVertX)
			!
			!	put ac2gdl_cx,	ac2gdl_cy,	900,
			!		0,			lastVertA,	4000
			else
				if edgeInfo then
					line2 lastVertX, lastVertY, actVertX, actVertY
				endif
			endif

			IF vertIndex > begIdx & ABS(ac2gdl_spx - actVertX) < EPS & ABS(ac2gdl_spy - actVertY) < EPS THEN
				PUT actVertX, actVertY, -1
				bClosed = 1
			ELSE
				IF vertIndex < endIdx | NOT(bStartWithLast) THEN
					edgeInfo  = inhEdgeInfos[vertIndex + 1]
					PUT actVertX, actVertY, 0
				ENDIF
			ENDIF

			lastVertX = actVertX
			lastVertY = actVertY
			lastVertA = actVertA

		NEXT vertIndex

		IF NOT(bClosed) THEN	! Close the polygon IF it has holes
			PUT ac2gdl_spx, ac2gdl_spy, -1
		ENDIF

	NEXT contIndex
RETURN
]]>
</Script_2D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_1D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
! const values for parameter: gs_detlevel_3D_m
DLEV3D_OFF      = 0
DLEV3D_SIMPLE   = 1
DLEV3D_DETAILED = 2


! const values for parameter: iHandrailPos
HANDRAILPOS_LEFT  = 1
HANDRAILPOS_RIGHT = 2
HANDRAILPOS_BOTH  = 3
HANDRAILPOS_NONE  = 4

! Platform with Ladder

EPS = 0.0001

dim treed_mtr[3]
	treed_mtr[1] = `Простой`
	treed_mtr[2] = `Детальный`
	treed_mtr[3] = `Откл.`

dim stHandRailPosValues[4]
	stHandRailPosValues[1] = `Слева`
	stHandRailPosValues[2] = `Справа`
	stHandRailPosValues[3] = `Обе Стороны`
	stHandRailPosValues[4] = `Нет`

DETLEVEL2D_SCALE_SENSITIVE	= 0
DETLEVEL2D_50				= 3
DETLEVEL2D_100				= 2
DETLEVEL2D_200				= 1


! --- Basic Variables ---
alfa=60

f_w  =2"			!!! foot width
f_d  =2"			!!! foot depth
f_t  =1/4"			!!! foot thickness

st_w =7"			!!! depth of the steps
st_h =1"			!!! height of the steps
st_t =1/2"			!!! thickness of the steps

sr_w =(st_w+2")*sin(alfa)	!!! side rail width - calculated from stw & alfa
sr_d =2"			!!! side rail depth
sr_t =1/4"			!!! side rail thickness

plf_w =2"			!!! plate frame profile width
plf_h =5/4"			!!! plate frame profile height
plf_t =1/4"			!!! thickness of the plate frame profile
pl_h =1"			!!! height of the platform plate

gridDensity = 1"	!!! Step and Platform grid density in Detailed 3D

postDist = 0.9		!!! Prefered rail post distance


!!!********************* Calculated Variables

IF GLOB_MODPAR_NAME = "A" THEN
	zzyzx = (A - gs_platform_length + st_w - 5") * tan(alfa)
	PARAMETERS zzyzx = zzyzx
ELSE
	A = (zzyzx + 5" * tan(alfa)) / tan(alfa) + gs_platform_length - st_w
	PARAMETERS A = A
ENDIF

npY  = INT((st_w-2*st_t)/gridDensity)
npX  = INT((gs_ladder_width-2*sr_t-2*st_t)/gridDensity)
npYP = INT((gs_platform_length-2*plf_t-2*st_t)/gridDensity)
npXP = INT((B-2*plf_t-2*st_t)/gridDensity)
dpY  = (st_w-2*st_t)/npY
dpX  = (gs_ladder_width-2*sr_t-2*st_t)/npX
dpYP  = (gs_platform_length-2*plf_t-2*st_t)/npYP
dpXP  = (B-2*plf_t-2*st_t)/npXP

dx_0 = (st_w+1")-sr_w*tan(alfa/2)  !!!correction x value of A regarding to last step_width

s_corr=4"			!!! side correction - rail overhang

stepp_dis=vd_st
n_st=INT((zzyzx)/stepp_dis)+1
dY = zzyzx/n_st
dX=dY/tan(alfa)

ladderLength = A - gs_platform_length
_bShowRightRailOnCorner	= (B - gs_ladder_width) > EPS


]]>
</Script_1D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_PR SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_PR>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_UI SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
TABID_ROOT				= -1
TABID_DIMENSIONS		= 1
TABID_REPRESENTATION	= 2

dim stRepresentation[15]
	stRepresentation[ 1]	= `2D-отображение`
	stRepresentation[ 2]	= `Перо Контура`
	stRepresentation[ 3]	= `Тип Штриховки`
	stRepresentation[ 4]	= `Перо Штриховки`
	stRepresentation[ 5]	= `Перо Фона`
	stRepresentation[ 6]	= `3D-отображение`
	stRepresentation[ 7]	= `3D-детализация`
	stRepresentation[ 8]	= `Аппроксимация`
	stRepresentation[ 9]	= `Отбрасывание Теней`
	stRepresentation[10]	= `2D-символ`
	stRepresentation[11]	= `2D-детализация`
	stRepresentation[12]	= `Линия Всхода`
	stRepresentation[13]	= `Тип Линии Всхода`
	stRepresentation[14]	= `Зависит от Этажа`
	stRepresentation[15]	= `Тип Линии Проекции`

dim stDimension[5]
	stDimension[1]	= `Перила`
	stDimension[2]	= `Перила на Площадке`
	stDimension[3]	= `Позиция Лестницы`
	stDimension[4]	= `Диаметр`
	stDimension[5]	= `Конструкция`

dim stTooltip[7]
	stTooltip[1]	= `Высота Площадки`
	stTooltip[2]	= `Высота Перил`
	stTooltip[3]	= `Ширина Лестницы`
	stTooltip[4]	= `Общая Длина`
	stTooltip[5]	= `Ширина Площадки`
	stTooltip[6]	= `Длина Площадки`
	stTooltip[7]	= `Высота Подступенка`


! ======================================================================

ui_dialog `Параметры Лестницы`,444,266
ui_current_page gs_ui_current_page




pageStartY	= 5
yStart		= pageStartY + 2
xHalfLevel 	= 222
xEndLevel	= 444
hRow		= 16
lineSpace	= 25
hBox		= 20

! ======================================================================
if TABID_DIMENSIONS > 0 then
	ui_page TABID_DIMENSIONS, TABID_ROOT, `Размеры`, "uiTab_Dimension_flat(1)"
	gosub "dimensionPage"
endif

if TABID_REPRESENTATION > 0 then
	ui_page TABID_REPRESENTATION, TABID_ROOT, `Отображение`, "uiTab_2DRepr_flat(1)"
	gosub "representationPage"
endif

! ======================================================================
end
! ======================================================================

"dimensionPage":
! ======================================================================
! Page 1
! ======================================================================

	yStart		= pageStartY + 2
	x1			= 10
	x2			= 204
	x3			= 324

	wBox1		= 94
	wBox2		= 90


	ui_style 0, 1
	ui_outfield stDimension[5], x1, yStart, 100,	hRow			! Structure
	ui_style 0, 0

	ui_pict "platform_graphic(1)", 125, pageStartY + 23, 194, 127, 1
	ui_infield "hr_h", x3, pageStartY + 25, wBox2, hRow							ui_tooltip stTooltip[2]		!Handrail Height
	ui_infield "ZZYZX", x3, pageStartY + 97, wBox2, hRow						ui_tooltip stTooltip[1]		!Platform Height
	ui_infield "gs_ladder_width", 125, pageStartY + 156, wBox2, hRow			ui_tooltip stTooltip[3]		!Ladder Width
	ui_infield "B", 125, pageStartY , wBox2, hRow								ui_tooltip stTooltip[5]		!Platform Width
	ui_infield "A", 229, pageStartY + 156, wBox2, hRow							ui_tooltip stTooltip[4]		!Total Length
	ui_infield "gs_platform_length", 229, pageStartY, wBox2, hRow				ui_tooltip stTooltip[6]		!Platform Length
	ui_infield "vd_st", 30, pageStartY + 115, wBox2, hRow						ui_tooltip stTooltip[7]		!Riser Height


	! ------ Handrail -------
	ui_separator 0, pageStartY + 179, 444, pageStartY + 179
	y1 = pageStartY + 188

	ui_style 0, 1
	ui_outfield stDimension[1], x1, y1-1, x2-x1-2,	hRow				! Handrail
	ui_style 0, 0

	ui_outfield stDimension[3], x2, y1, x3-x2-2, hRow					! Position on Ladder
	ui_infield{3} "iHandrailPos", x3, y1-3, wBox1, hBox,
			8, "", 4, 1, 0, 0, 0, 0,
			1, stHandRailPosValues[1], HANDRAILPOS_LEFT,
			2, stHandRailPosValues[2], HANDRAILPOS_RIGHT,
			3, stHandRailPosValues[3], HANDRAILPOS_BOTH,
			4, stHandRailPosValues[4], HANDRAILPOS_NONE	ui_tooltip stDimension[3]
	y1 = y1 + lineSpace

	ui_infield{3} "hr_p", x1+1, y1-1, x2-x1-2, hRow,					! Handrail on Platform
		7, "",
		2,
		1, 20, 20, 20, 20,
		0, stDimension[2], 0,
		1, stDimension[2], 1											ui_tooltip stDimension[2]

	ui_outfield stDimension[4], x2, y1, x3-x2-2, hRow					! Diameter
	ui_infield "hr_d", x3, y1-2, wBox2, hRow							ui_tooltip stDimension[4]
return

"representationPage":
! ======================================================================
! Page 2
! ======================================================================

	pageStartY 	= 5
	x1			= 10
	wDescript1	= 200
	wBox1		= 120
	wBox2		= 90
	wPenBox		= 40
	hPenBox		= 22
	hLineBox	= 27
	wFillBox	= 120
	hFillBox	= 22

	! ------ 1. Column - 2D Symbol -------
	wColumn = xHalfLevel - x1 - 13
	xEnd = xHalfLevel - 13

	ui_style 0, 1
	ui_outfield stRepresentation[10], x1, yStart, wColumn,	hRow					! 2D Symbol
	ui_style 0, 0
	y1 = yStart + lineSpace

	ui_outfield stRepresentation[11], x1, y1, wColumn,	hRow						! 2D Detail Level
	y1 = y1 + lineSpace
	dim stDetail2d[]
	call "2dDetailLevel" parameters gs_detlevel_2D	= gs_detlevel_2D,
								gs_detlevel_2D_m	= gs_detlevel_2D_m,
								enable2dDetLevels	= 2+4+8+16,
			returned_parameters	stDetail2d
	ui_infield{3} "gs_detlevel_2D_m", xEnd-wBox1, y1-3, wBox1, hBox,
			8, "", 4, 1, 0, 0, 0, 0,
			1, stDetail2d[1], DETLEVEL2D_SCALE_SENSITIVE,
			2, stDetail2d[2], DETLEVEL2D_50,
			3, stDetail2d[3], DETLEVEL2D_100,
			4, stDetail2d[4], DETLEVEL2D_200 	 								ui_tooltip stRepresentation[11]
	y1 = y1 + lineSpace

	ui_infield{3} "walkl", x1, y1-1, wColumn, hRow,									! Walking Line
		7, "",
		2,
		1, 20, 20, 20, 20,
		0, stRepresentation[12], 0,
		1, stRepresentation[12], 1													ui_tooltip stRepresentation[12]
	y1 = y1 + lineSpace

	iFlag = 4*not(walkl)
	ui_outfield stRepresentation[13], x1, y1, wColumn,	hRow, iFlag					! Walking Line Type
	y1 = y1 + lineSpace
	ui_infield "gs_wLineType1",	xEnd-wBox1, y1-4, wBox1, hLineBox				ui_tooltip stRepresentation[13]
	y1 = y1 + lineSpace + 6

	ui_infield{3} "bStorySensitive", x1, y1-1, wColumn, hRow,						! Story Sensitive
		7, "",
		2,
		1, 20, 20, 20, 20,
		0, stRepresentation[14], 0,
		1, stRepresentation[14], 1													ui_tooltip stRepresentation[14]
	y1 = y1 + lineSpace

	iFlag = 4*not(bStorySensitive)
	ui_outfield stRepresentation[15], x1, y1, wColumn,	hRow, iFlag					! Overhead Line Type
	y1 = y1 + lineSpace
	ui_infield "gs_LineTypeStUp",	xEnd-wBox1, y1-4, wBox1, hLineBox			ui_tooltip stRepresentation[15]
	y1 = y1 + lineSpace


	! ------ 2. Column - 2D Representation -------
	ui_separator xHalfLevel-1, pageStartY - 4, xHalfLevel-1, pageStartY + 231

	wColumn = xEndLevel - xHalfLevel - x1 - 5
	xEnd = xEndLevel - 5
	x1 = xHalfLevel + x1

	ui_style 0, 1
	ui_outfield stRepresentation[1], x1, yStart, wColumn,	hRow					! 2D Representation
	ui_style 0, 0
	y1 = yStart + lineSpace

	ui_outfield stRepresentation[2], x1, y1, wColumn-wPenBox-2,	hRow				! Contour Pen
	ui_infield "gs_cont_pen",	xEnd-wPenBox, y1-4, wPenBox, hPenBox 			 ui_tooltip stRepresentation[2]
	y1 = y1 + lineSpace

	ui_outfield stRepresentation[3], x1, y1, wColumn-wFillBox-2,	hRow			! Fill Type
	ui_infield "gs_fill_type",	xEnd-wFillBox, y1-4, wFillBox, hFillBox 		ui_tooltip stRepresentation[3]
	y1 = y1 + lineSpace

	ui_outfield stRepresentation[4], x1, y1, wColumn-wPenBox-2,	hRow				! Fill Pen
	ui_infield "gs_fill_pen",	xEnd-wPenBox, y1-4, wPenBox, hPenBox 			ui_tooltip stRepresentation[4]
	y1 = y1 + lineSpace

	ui_outfield stRepresentation[5], x1, y1, wColumn-wPenBox-2,	hRow				! Fill Background Pen
	ui_infield "gs_back_pen",	xEnd-wPenBox, y1-4, wPenBox, hPenBox 			ui_tooltip stRepresentation[5]
	y1 = y1 + lineSpace

	ui_separator xHalfLevel+2, y1-3, xEndLevel, y1-3


	! ------ 2. Column - 3D Representation -------

	y1 = y1 + 6
	ui_style 0,1
	ui_outfield stRepresentation[6], x1, y1,	wDescript1,	hRow					!3D Representation
	ui_style 0,0
	y1 = y1 + lineSpace

	ui_outfield stRepresentation[7], x1 , y1, wColumn-wBox2-2, hRow					! 3D Detail Level
	ui_infield{3} "gs_detlevel_3D_m", xEnd-wBox2, y1-3, wBox2, hBox,
			8, "", 4, 1, 0, 0, 0, 0,
			1, treed_mtr[1], DLEV3D_SIMPLE,
			2, treed_mtr[2], DLEV3D_DETAILED,
			3, treed_mtr[3], DLEV3D_OFF	ui_tooltip stRepresentation[7]
	y1 = y1 + lineSpace

	iFlag = (gs_detlevel_3D_m = DLEV3D_OFF) * 4

	ui_outfield stRepresentation[8], x1 , y1, wColumn-wBox2-2, hRow, iFlag			! Resolution
	ui_infield "gs_resol", xEnd-wBox2, y1-2, wBox2,	hRow						ui_tooltip stRepresentation[8]
	y1 = y1 + lineSpace

	ui_infield{3} "gs_shadow", x1+1, y1-1, wDescript1, hRow,							! Shadow
		7, "",
		2,
		1, 20, 20, 20, 20,
		0, stRepresentation[9], 0,
		1, stRepresentation[9], 1													ui_tooltip stRepresentation[9]
	y1 = y1 + lineSpace
return

]]>
</Script_UI>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_VL SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
call "FM_types" parameters all

values{2} "gs_detlevel_3D_m" 	DLEV3D_SIMPLE, `Простой`,
								DLEV3D_DETAILED, `Детальный`,
								DLEV3D_OFF, `Откл.`
values{2} "iHandrailPos" 	HANDRAILPOS_LEFT, stHandRailPosValues[1],
							HANDRAILPOS_RIGHT, stHandRailPosValues[2],
							HANDRAILPOS_BOTH, stHandRailPosValues[3],
							HANDRAILPOS_NONE, stHandRailPosValues[4]

VALUES "A" RANGE (0,]
VALUES "B" RANGE (0,]
VALUES "ZZYZX" RANGE (0,]
VALUES "hr_h" RANGE (0,]
VALUES "vd_st" RANGE (0,zzyzx]
VALUES "hr_d" RANGE (0,]
VALUES "gs_platform_length" RANGE (0,]
VALUES "gs_ladder_width" RANGE (0, B]

IF iHandrailPos = HANDRAILPOS_NONE and not(hr_p) THEN lock	"hr_d",
															"hr_h",
															"door_w",
															"gs_resol"

if not(walkl) then lock "gs_wLineType1"

values "gs_resol" range [3,)

if gs_cont_pen<=0 then parameters gs_cont_pen=2
if gs_fill_pen<=0 then parameters gs_fill_pen=91

! ----- 3D Representation -----
if gs_detlevel_3D_m = DLEV3D_OFF then
	hideparameter "gs_resol", "gs_shadow"
	lock "gs_resol", "gs_shadow"
endif



! ----- 2D Representation -----
call "2dDetailLevel" parameters gs_detlevel_2D	= gs_detlevel_2D,
							gs_detlevel_2D_m	= gs_detlevel_2D_m,
							enable2dDetLevels	= 2+4+8+16

if not(walkl) then
	hideparameter "gs_wLineType1"
	lock "gs_wLineType1"
endif

if not(bStorySensitive) then
	hideparameter "gs_LineTypeStUp"
	lock "gs_LineTypeStUp"
endif

ac_bottomlevel = 0
ac_toplevel = ZZYZX + EPS
parameters ac_toplevel = ac_toplevel, ac_bottomlevel = ac_bottomlevel

]]>
</Script_VL>

<Comment SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[Платформа и лестница с перилами и зависимым от этажа 2D-символом.]]>
</Comment>

<Keywords SectVersion="1" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Keywords>

<ParamSection SectVersion="22" SectionFlags="0" SubIdent="0">
	<ParamSectHeader>
		<AutoHotspots>false</AutoHotspots>
		<StatBits>
			<STBit_UIDefault/>
			<STBit_FixSize/>
			<STBit_UIUseHierarchicalPages/>
		</StatBits>
		<WDLeftFrame>0</WDLeftFrame>
		<WDRightFrame>0</WDRightFrame>
		<WDTopFrame>0</WDTopFrame>
		<WDBotFrame>0</WDBotFrame>
		<LayFlags>65535</LayFlags>
		<WDMirrorThickness>0</WDMirrorThickness>
		<WDWallInset>0</WDWallInset>
	</ParamSectHeader>
	<Parameters>
		<Length Name="A">
			<Description><![CDATA["Общая Длина"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Unique/>
			</Flags>
			<Value>3.00804572681</Value>
		</Length>
		<Length Name="B">
			<Description><![CDATA["Ширина Площадки"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Unique/>
			</Flags>
			<Value>0.9</Value>
		</Length>
		<Length Name="ZZYZX">
			<Description><![CDATA["Высота Площадки"]]></Description>
			<Fix/>
			<Value>2.7</Value>
		</Length>
		<Boolean Name="AC_show2DHotspotsIn3D">
			<Description><![CDATA["Показ Узловых 2D Точек в 3D"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="ac_bottomlevel">
			<Description><![CDATA["Отметка Низа"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="ac_toplevel">
			<Description><![CDATA["Отметка Верха"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="vd_st">
			<Description><![CDATA["Высота Подступенка"]]></Description>
			<Value>0.3</Value>
		</Length>
		<Length Name="gs_platform_length">
			<Description><![CDATA["Длина Площадки"]]></Description>
			<Value>1.5</Value>
		</Length>
		<Length Name="gs_ladder_width">
			<Description><![CDATA["Ширина Лестницы"]]></Description>
			<Value>0.7</Value>
		</Length>

		<!-- gs_handrail: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_handrail">
			<Description><![CDATA["Перила"]]></Description>
		</Title>
		<Integer Name="iHandrailPos">
			<Description><![CDATA["Перила на Лестнице"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Boolean Name="hr_p">
			<Description><![CDATA["Перила на Площадке"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="hr_d">
			<Description><![CDATA["Диаметр"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.03</Value>
		</Length>
		<Integer Name="gs_resol">
			<Description><![CDATA["Разрешение"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>8</Value>
		</Integer>
		<Length Name="hr_h">
			<Description><![CDATA["Высота"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.9</Value>
		</Length>

		<!-- gs_3D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_3D_representation">
			<Description><![CDATA["3D-отображение"]]></Description>
		</Title>
		<Integer Name="gs_detlevel_3D_m">
			<Description><![CDATA["3D-детализация"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="gs_shadow">
			<Description><![CDATA["Отбрасывание Теней"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>

		<!-- gs_2D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_2D_representation">
			<Description><![CDATA["2D-отображение"]]></Description>
			<Fix/>
		</Title>
		<String Name="gs_detlevel_2D">
			<Description><![CDATA["2D-детализация"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Зависит от Масштаба"]]></Value>
		</String>
		<Integer Name="gs_detlevel_2D_m">
			<Description><![CDATA["2D-детализация"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<PenColor Name="gs_cont_pen">
			<Description><![CDATA["Перо Контура"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>4</Value>
		</PenColor>
		<FillPattern Name="gs_fill_type">
			<Description><![CDATA["Тип Штриховки"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_fill_pen">
			<Description><![CDATA["Перо Штриховки"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_back_pen">
			<Description><![CDATA["Перо Фона Штриховки"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<LineType Name="gs_LineType">
			<Description><![CDATA["Тип Линии"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</LineType>
		<Boolean Name="bStorySensitive">
			<Description><![CDATA["Зависит от Этажа"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<LineType Name="gs_LineTypeStUp">
			<Description><![CDATA["Тип Линии Проекции"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>4</Value>
		</LineType>
		<Boolean Name="walkl">
			<Description><![CDATA["Показ Линии Всхода"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<LineType Name="gs_wLineType1">
			<Description><![CDATA["Тип Линии Всхода"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>4</Value>
		</LineType>

		<!-- gs_material: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_material">
			<Description><![CDATA["Покрытия"]]></Description>
		</Title>
		<Material Name="mat_ladder">
			<Description><![CDATA["Лестница"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>11</Value>
		</Material>

		<!-- gs_list: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_list">
			<Description><![CDATA["Параметры Спецификаций"]]></Description>
			<Fix/>
		</Title>
		<RealNum Name="gs_list_cost">
			<Description><![CDATA["Цена"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="gs_list_manufacturer">
			<Description><![CDATA["Производитель"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_note">
			<Description><![CDATA["Примечания"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_location">
			<Description><![CDATA["Расположение"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_accessories">
			<Description><![CDATA["Аксессуары"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_Type">
			<Description><![CDATA["Тип Группы"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Другой"]]></Value>
		</String>
		<Integer Name="iFMType">
			<Description><![CDATA["Тип Группы"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>25</Value>
		</Integer>
		<String Name="FM_InventoryNumber">
			<Description><![CDATA["Инвентарный Номер"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_SerialNumber">
			<Description><![CDATA["Серийный Номер"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_ProductionYear">
			<Description><![CDATA["Год Производства"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<RealNum Name="FM_ObjectWeight">
			<Description><![CDATA["Вес Изделия"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="FM_ObjectWeightUnit">
			<Description><![CDATA["Единица Веса"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["кг"]]></Value>
		</String>
		<String Name="gs_list_custom1">
			<Description><![CDATA["Пользовательское Значение 1"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom2">
			<Description><![CDATA["Пользовательское Значение 2"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom3">
			<Description><![CDATA["Пользовательское Значение 3"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom4">
			<Description><![CDATA["Пользовательское Значение 4"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom5">
			<Description><![CDATA["Пользовательское Значение 5"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="gs_ui_current_page">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="LibraryLangCode">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value><![CDATA["RUS"]]></Value>
		</String>
	</Parameters>
</ParamSection>

<CalledMacros SectVersion="2" SectionFlags="0" SubIdent="0">
	<Macro>
		<MName><![CDATA["2dDetailLevel"]]></MName>
		<MainGUID>2FD16305-CA53-4505-BFA7-4E98A8BA9399</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["FM_types"]]></MName>
		<MainGUID>2759D2DF-AA8E-44D1-AD1D-261581266B34</MainGUID>
	</Macro>
</CalledMacros>

<Picture MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="0" length_in_bytes="1335" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000800000
	00800803000000F4E091F900000045504C5445FFFFFFC2C2C27B7B7B72727283
	83838A8A8ADCDCDCA3A3A3BBBBBB929292B4B4B46C6C6CCBCBCB9B9B9BD1D1D1
	E1E1E1626262AAAAAAE8E8E85D5D5D5353534242424E4E4E0DFE03AA000004A3
	49444154785EED5AD992E33610EB933775D9C9FF7F6A86B2774C2BDE7D0AD955
	A9C1134B2F0D8104017906FEE7F8C1EAC018290530C6127673197C4AE632ECDE
	5C869A4C29843D44B08243DD0B808D1D56145CDA621C813FF81C11BBA9086350
	E12370A9B8A40BD31158D60FBA2F7171E7CC653C81081D0E00287BC1EF9921E0
	600287EFC91C95F0A2FA82611D49A0F4E31240FA70401386718710BB752A9F09
	002C3594310A844E81C35D6F9B7E66AA1506A0575CE1B70AC05AF612471C41D7
	ADCBEF08142C38C805FA7E1A3E6C812BBEB86137E151DEC85C15384A2EAE6333
	D6024B7957A020E2FBCC3076070ABC14588BC7A6FB68024BB9DC884D81B5B41C
	38910233A78104B05BFBE783F47CE812FF421C75088FFD42069F57B14B91DF91
	862850FBF9A53D68364C813BF432849139D4C81C6E4FFC07D4911E5C4FDD852F
	A0D78A5406EE408CCC922F04FAE1AA12D7FFD8830E9E40A6E7DBCAA7E1A2AA18
	320DAB624E32E58EC0F5D511015CFE7B5C1543811A73D68D59AEC32B3E38E66D
	196701D1A5804B9A332B73FED67DC7EF4DCFB7655C0EA1683A6FA594B350A7FB
	0B715B0656B1F6AECF5CC24899DAABC31BE26D1958C55651FEA58828DD9AEEC3
	E7F73150458583C3934BE47FCF8A9B1F5AC5F471096C01A06A44B84233C3C82A
	164499322B650EA28A7041CC34F66B44B42A41A2CC4CFA418131F3413B0FAA22
	1CDEA5DC96052EA0C15FE4556396B57922D183CB1460E7C1A8BE3D701BE91756
	9880DE832A4A0E4271F9D604D8610A5E3D57326DCC31B98DBC1AEC008A503E33
	7003690426CDEF62208AA4DC2C38F308D63E06D4C31173E66902F41EF41A49D6
	D31371DE11ECAB98AAFAC7033FD183A96B22A4787E20BA7902F4314071E3E0DA
	5CB4F120E919410E667A70E9ABD8C69C8599EB440FA6EE08B232246266991803
	FEE5418D5201C1459EE841856E075412D4B91E84D279300BA6D60CA6C6402740
	2482145FAD68EE0E20B13073F40060140374CBCC9963408B2AE644A3D6948999
	4DAA18AAAA20A0C44C36554C8505202570D5220682681584C32530AC62000A09
	D0A68A51660E4781344F80FE8F239E88BF20D1256751C5565115CE9C99D9AA8A
	B122EC37A67CD6429B1880024EB34D15D328F868066451C5FCE38BBCCD0F3C4F
	80FDE5C12FD043114F0631E0E9ECA1DE013821832A46CD82C4C4D17925932A46
	5A9332138B924915530188293389D2FC2A26CAFAF0A033A962F5E1C1E6C93031
	07E3F557B1D0EC60F1398442C4318402B04ECCC1E3E541E28D1B0507A18B8169
	08AA9138CBF6FC2056988C3694C06DCC4C325980FE57B102299A08E025EAF357
	B1AE8A4D15206E02A09D07A70245F48EE7ADE44C768098E5CEEC1B170B0FA22A
	D19D68E3EAC84280AAAA91353233A98D07BF5001537E10580D0490BD6279E6E0
	6E710B4AA9D5CE83AA84253B00B0890161A6E8FF3AB9587850E84CA07B706014
	03AA1CB3DE99AB510CA87870FECE34DF83DDD58B35B18907495505004A856014
	032AD816D5CA8344E44E054C3CE8281333D704586D3CA8CA9989893DD9C540D2
	CC243799EFC1EF73EF52A65B5B1B79B0C137026840409E4365331000F8FBFFE2
	506E060280EBECB0B518B043D49BEE6088A49BAEB6046C050037C2813FF8C10F
	7EF00FF2AB2D01DBDCDF610000000049454E44AE426082
	]]>
</Picture>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="1" length_in_bytes="816" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000CC0000
	00830203000000BC421CD80000000C504C5445FF3121000000737373FFFFFF00
	7B76D10000000174524E530040E6D866000002C849444154785EDDD9B18AE330
	1006E089491ABBD914FB1239905F618B7B8014F1FB886DF312298302DE564470
	7E155FB75CB1B521B0BE38723C68EC483B8233C74E9342FA98F8B7062718E26A
	89E0C5050B046439AACFC097B4CF13D9882B835901A92D027779550C45FB146E
	45F589BF9E19EECF77AD540D255DB0516E1D61BDB6F167557BAB4BD5126317B0
	1A801D58A36C9D467DCEA33E8BA237F2FE99B92679D7D60ADCF814329A6FB208
	2366329A6F927A1E9349BE49816F4484D1F398A48E30D263707E4ED2891A743F
	4065BF010DCEE9453AB18126831AEC2320A17D821968C6CC616C591361B87DAE
	5E44985F5C2338738AB1356CC399538C4D728D849C6B32C999538C6D0EA323E6
	F40019CFD8A819B38DB1C17934738BC29D6D535D8831C6AE7CF4C32F47CF60A3
	94746203A3DC92F8ACEF779ABD135B7335DA7D560E7DD094EE099D328B8218ED
	9E506226B3360762922F1872422165191B5BE631CAD6C86C14C7D8D8CE2A9481
	30E48442D5868C3692C4D6864C521B72DA92F6D363ACA4260B1A01869CD0BC6D
	02465B8327346C92DA35B7D8EA2FDE1F8C4D29C9367F7C46DEB66106E93D36F0
	18EB8CC435DD99C66F048C4CEE33A984DBE2194D1F9BB74FB7070CCF64D235F6
	844AAF11E09A6EB0AFB14170E6885125CF6800A18E3E23C5CDBA266F6BAFD1C4
	BCDAD87CE6B526666F63F399BDE49B128829ED09F5194D8D1D6CAF3950D3848D
	A4A60678EB6283A363D2C939C5C6F6794CCB63EC60FBCCF8BB491BDB0CC6C6C6
	33555BCF61BAC1661B1B01EBFEA4AA5C4F95CF74833DAED58B2F83BC7D9F30CF
	5B9F998E6D011EF3DAC53683D963D40CD300378337346ED69E9953EAF77AB2BC
	E600C09C85AA957CF3095CF3236CD2DE9CD03411A6667C37B639DFCDA67A141B
	FDED8F0F81FC71D4B07333184673A31E09FB5FE61BD6927C025EE63F79BFF073
	081441E8FDC276E23D42E8FDC2EE6E9E8B0715D9877F3DFFFFFDF90BFD89F8FA
	092CA5B90000000049454E44AE426082
	]]>
</GDLPict>

<MigrationTable SectVersion="1" SectionFlags="0" SubIdent="0">
	<MigrationTableElement>
		<MainGUID>53BAAF03-2961-4966-8CF6-8673C0299898</MainGUID>
		<Version>18</Version>
		<Name><![CDATA[""]]></Name>
		<AutoMigration>true</AutoMigration>
	</MigrationTableElement>
</MigrationTable>

<Copyright SectVersion="1" SectionFlags="0" SubIdent="0">
	<Author>GRAPHISOFT</Author>
	<License>
		<Type>CC BY-ND</Type>
		<Version>3.0</Version>
	</License>
</Copyright>

</Symbol>
