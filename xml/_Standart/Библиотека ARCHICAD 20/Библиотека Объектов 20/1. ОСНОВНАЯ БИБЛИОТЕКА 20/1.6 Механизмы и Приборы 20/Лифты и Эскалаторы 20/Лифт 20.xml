<?xml version="1.0" encoding="UTF-8"?>
<Symbol IsArchivable="false" IsPlaceable="true" MainGUID="4FE88F9D-D5D6-4BC3-8E6A-A43EBA7B3962" MigrationValue="Normal" Owner="1196638531" Signature="1196644685" Version="43">
<Ancestry SectVersion="1" SectionFlags="0" SubIdent="0" Template="false">
	<MainGUID>F938E33A-329D-4A36-BE3E-85E126820996</MainGUID>
	<MainGUID>103E8D2C-8230-42E1-9597-46F84CCE28C0</MainGUID>
	<MainGUID>A117C8F5-39B3-4826-80C3-F912E4222AB5</MainGUID>
</Ancestry>

<CalledMacros SectVersion="2" SectionFlags="0" SubIdent="0">
	<Macro>
		<MName><![CDATA["FM_types"]]></MName>
		<MainGUID>2759D2DF-AA8E-44D1-AD1D-261581266B34</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["Onorm_Elevator"]]></MName>
		<MainGUID>600DFB2E-D577-4DAA-93F0-6E386C560A70</MainGUID>
	</Macro>
</CalledMacros>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_3D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
if gs_detlevel_3D_m = 0 then end
if gs_shadow = 0 then shadow off
unID			= 1
num_cutend		= 0


penthouse_height	= penthouse_height * bPenthouse
pit_depth			= pit_depth * bPith
top_slab_thick		= top_slab_thick * bTopSlab
pit_slab_thick		= pit_slab_thick * bPitSlab

! ==============================================================================
! Rectangular
! ==============================================================================
if elevator_form_m = FORM_RECT then
	elev_wall_thick = elev_shaft_thick

	! --------------------------------------------------------------------------
	! Elevator Car
	! --------------------------------------------------------------------------

	! --- where are doors in elevator car?
	bFrontDoorPresent = 0
	bSecondaryDoorPresent = 0
	if bSplitLevelStories then
		for i = 1 to num_connected_stories
			storyID = connected_stories_id[i]
			if connected_stories_height[i] > gs_max_StrFl_height and available_connected_stories_boolean[i] then
				if storyID < 0 then
					if SL_below_story_door_pos[abs(storyID)] = 1 then bFrontDoorPresent = 1
					if SL_below_story_door_pos[abs(storyID)] = 2 then bSecondaryDoorPresent = 1
					if SL_below_story_door_pos[abs(storyID)] = 3 then
						bFrontDoorPresent = 1
						bSecondaryDoorPresent = 1
					endif
				else
					if SL_above_story_door_pos[storyID+1] = 1 then bFrontDoorPresent = 1
					if SL_above_story_door_pos[storyID+1] = 2 then bSecondaryDoorPresent = 1
					if SL_above_story_door_pos[storyID+1] = 3 then
						bFrontDoorPresent = 1
						bSecondaryDoorPresent = 1
					endif
				endif
			endif
		next i
	else
		for i = 1 to num_connected_stories
			storyID = connected_stories_id[i]
			if connected_stories_height[i] > gs_max_StrFl_height then
				if storyID < 0 then
					if below_story_door_pos[abs(storyID)] = 1 then bFrontDoorPresent = 1
					if below_story_door_pos[abs(storyID)] = 2 then bSecondaryDoorPresent = 1
					if below_story_door_pos[abs(storyID)] = 3 then
						bFrontDoorPresent = 1
						bSecondaryDoorPresent = 1
					endif
				else
					if above_story_door_pos[storyID+1] = 1 then bFrontDoorPresent = 1
					if above_story_door_pos[storyID+1] = 2 then bSecondaryDoorPresent = 1
					if above_story_door_pos[storyID+1] = 3 then
						bFrontDoorPresent = 1
						bSecondaryDoorPresent = 1
					endif
				endif
			endif
		next i
	endif

	if bSplitLevelStories then
		carPosStoryID = -car_pos_story_m+1+num_stories_above_HS*2+home_story_index*2
	else
		carPosStoryID = -car_pos_story_m+1+num_stories_above_HS+home_story_index
	endif

	pen gs_cont_pen

	add elev_shaft_thick+carSide1, elev_shaft_thick+carSpaceFront, connected_stories_elev[carPosStoryID]

	hotspot 0,			0,			-0.05, unID: unID = unID + 1
	hotspot car_width,	0,			-0.05, unID: unID = unID + 1
	hotspot car_width,	car_depth,	-0.05, unID: unID = unID + 1
	hotspot 0,			car_depth,	-0.05, unID: unID = unID + 1

	hotspot 0,			0,			car_height+0.05, unID: unID = unID + 1
	hotspot car_width,	0,			car_height+0.05, unID: unID = unID + 1
	hotspot car_width,	car_depth,	car_height+0.05, unID: unID = unID + 1
	hotspot 0,			car_depth,	car_height+0.05, unID: unID = unID + 1

	if gs_detlevel_3D_m = 2 then				! --- Detailed
																								! --- Front door
		addx car_width/2+door_pos+carSide1
		rotx 90
		addx -carSide1
		if door_pos < 0 then
			RightDoor = 1
		else
			RightDoor = 0
		endif

		_opening_in3D = opening_in3D
		gosub "elev car door"
		del 3

		if second_door_pos<0 then
			RightDoor = 1
		else
			RightDoor = 0
		endif

		if dir_second_opening_m = SECOND_OPENING_REAR then			! --- Second door on Back
			add car_width/2+second_door_pos, car_depth, 0
			rotz 180
			rotx 90
			_opening_in3D = 0
			gosub "elev car door"
			del 3
		endif
		if dir_second_opening_m = SECOND_OPENING_SIDE1 then		! --- Second door on Side 1
			add 0, car_depth/2+second_door_pos, 0
			rotz -90
			rotx 90
			_opening_in3D = 0
			gosub "elev car door"
			del 3
		endif
		if dir_second_opening_m = SECOND_OPENING_SIDE2 then		! --- Second door on Side 2
			add car_width, car_depth/2+second_door_pos, 0
			rotz 90
			rotx 90
			_opening_in3D = 0
			gosub "elev car door"
			del 3
		endif

		material car_int_mat
		cutpolya 5, 2, 0,
			carWallThk, carWallThk, 15,
			car_width-carWallThk, carWallThk, 15,
			car_width-carWallThk, car_depth-carWallThk, 15,
			carWallThk, car_depth-carWallThk, 15,
			carWallThk, carWallThk, -1

		material car_ext_mat
		prism_  5, car_height,
				0, 0, 15,
				car_width, 0, 15,
				car_width, car_depth, 15,
				0, car_depth, 15,
				0, 0, -1
		cutend

		addz -0.05
		cprism_ car_pave_mat, car_ext_mat, car_ext_mat,
				5, 0.05,
				0, 0, 15,
				car_width, 0, 15,
				car_width, car_depth, 15,
				0, car_depth, 15,
				0, 0, -1
		del 1

		addz car_height
		cprism_ car_ext_mat, car_ceiling_mat, car_ext_mat,
				5, 0.05,
				0, 0, 15,
				car_width, 0, 15,
				car_width, car_depth, 15,
				0, car_depth, 15,
				0, 0, -1
		del 1

		for j = 1 to num_cutend
			cutend
		next j
		num_cutend=0

		if bControlPanel then
			if dir_second_opening_m = SECOND_OPENING_SIDE2 then	! Side 2
				add carWallThk, carWallThk+0.10, 1
				rotz 90
			else
				add car_width-carWallThk, carWallThk+0.20, 1
				rotz -90
			endif
			gosub "inside control panel"
			del 2
		endif
	else
		material car_ext_mat
		addz -0.05
		prism_  5, car_height+0.10,
				0, 0, 15,
				car_width, 0, 15,
				car_width, car_depth, 15,
				0, car_depth, 15,
				0, 0, -1
		del 1
	endif
	del 1


	! --------------------------------------------------------------------------
	! Elevator Shaft
	! --------------------------------------------------------------------------

	if bShowElevatorShaft then
		if bSplitLevelStories then
			for i = 1 to num_connected_stories						! --- Openings/Doors
				addz connected_stories_elev[i]
				storyID = connected_stories_id[i]
				if connected_stories_height[i] > gs_max_StrFl_height and available_connected_stories_boolean[i] then
					if storyID < 0 then
						elevShaftDoorPosID = SL_below_story_door_pos[abs(storyID)]
					else
						elevShaftDoorPosID = SL_above_story_door_pos[storyID+1]
					endif
				else
					elevShaftDoorPosID = 4
				endif

				opening_in3D_in_car_pos = 0
				if car_pos_story_m = storyID then opening_in3D_in_car_pos = opening_in3D
				gosub "openings to shaft"
				del 1
			next i

			pen gs_wall_cont_pen
			material elev_shaft_int_mat
			add elev_shaft_thick, elev_shaft_thick, 0
			cutpolya 5, 2, 0,
				0, 0, 15,
				shaft_inner_width, 0, 15,
				shaft_inner_width, shaft_inner_depth, 15,
				0, shaft_inner_depth, 15,
				0, 0, -1
			del 1
			num_cutend = num_cutend+1

			for i = 1 to num_connected_stories						! --- Stories
				if abs(INT(connected_stories_id[i]/2)-(connected_stories_id[i]/2)) < eps then
					addz connected_stories_elev[i]
					cprism_ elev_shaft_edge_mat, elev_shaft_edge_mat, elev_shaft_ext_mat,
							5, connected_stories_height[i],
							0, 0, 15,
							totalShaftWidth, 0, 15,
							totalShaftWidth, totalShaftDepth, 15,
							0, totalShaftDepth, 15,
							0, 0, -1

					hotspot 0, 0, 0, unID: unID = unID + 1
					hotspot totalShaftWidth, 0, 0, unID: unID = unID + 1
					hotspot totalShaftWidth, totalShaftDepth, 0, unID: unID = unID + 1
					hotspot 0, totalShaftDepth, 0, unID: unID = unID + 1
					del 1
				endif
			next i

			for j = 1 to num_cutend
				cutend
			next j
			num_cutend = 0
		else
			for i = 1 to num_connected_stories						! --- Stories and doors
				addz connected_stories_elev[i]

				storyID = connected_stories_id[i]
				if connected_stories_height[i] > gs_max_StrFl_height then
					if storyID < 0 then
						elevShaftDoorPosID = below_story_door_pos[abs(storyID)]
					else
						elevShaftDoorPosID = above_story_door_pos[storyID+1]
					endif
				else
					elevShaftDoorPosID = 4
				endif

				opening_in3D_in_car_pos = 0
				if car_pos_story_m = storyID then opening_in3D_in_car_pos = opening_in3D
				gosub "openings to shaft"

				pen gs_wall_cont_pen
				material elev_shaft_int_mat
				add elev_shaft_thick, elev_shaft_thick, 0
				cutpolya 5, 2, 0,
					0, 0, 15,
					shaft_inner_width, 0, 15,
					shaft_inner_width, shaft_inner_depth, 15,
					0, shaft_inner_depth, 15,
					0, 0, -1
				del 1
				num_cutend = num_cutend+1

				cprism_ elev_shaft_edge_mat, elev_shaft_edge_mat, elev_shaft_ext_mat,
						5, connected_stories_height[i],
						0, 0, 15,
						totalShaftWidth, 0, 15,
						totalShaftWidth, totalShaftDepth, 15,
						0, totalShaftDepth, 15,
						0, 0, -1

				hotspot 0, 0, 0, unID: unID = unID + 1
				hotspot totalShaftWidth, 0, 0, unID: unID = unID + 1
				hotspot totalShaftWidth, totalShaftDepth, 0, unID: unID = unID + 1
				hotspot 0, totalShaftDepth, 0, unID: unID = unID + 1

				for j = 1 to num_cutend
					cutend
				next j
				num_cutend=0
				del 1
			next i
		endif


		pen gs_wall_cont_pen
		material elev_shaft_int_mat
		add elev_shaft_thick, elev_shaft_thick, 0
		cutpolya 5, 2, 0,
			0, 0, 15,
			shaft_inner_width, 0, 15,
			shaft_inner_width, shaft_inner_depth, 15,
			0, shaft_inner_depth, 15,
			0, 0, -1
		del 1

		if bPenthouse then				! --- penthouse
			addz connected_stories_elev[1]+connected_stories_height[1]
			cprism_ elev_shaft_edge_mat, elev_shaft_edge_mat, elev_shaft_ext_mat,
					5, penthouse_height,
					0, 0, 15,
					totalShaftWidth, 0, 15,
					totalShaftWidth, totalShaftDepth, 15,
					0, totalShaftDepth, 15,
					0, 0, -1

			hotspot 0, 0, 0, unID: unID = unID + 1
			hotspot totalShaftWidth, 0, 0, unID: unID = unID + 1
			hotspot totalShaftWidth, totalShaftDepth, 0, unID: unID = unID + 1
			hotspot 0, totalShaftDepth, 0, unID: unID = unID + 1
			del 1
		endif

		if bPith then						! --- pit
			addz connected_stories_elev[num_connected_stories]-pit_depth
			cprism_ elev_shaft_edge_mat, elev_shaft_edge_mat, elev_shaft_ext_mat,
					5, pit_depth,
					0, 0, 15,
					totalShaftWidth, 0, 15,
					totalShaftWidth, totalShaftDepth, 15,
					0, totalShaftDepth, 15,
					0, 0, -1

			hotspot 0, 0, 0, unID: unID = unID + 1
			hotspot totalShaftWidth, 0, 0, unID: unID = unID + 1
			hotspot totalShaftWidth, totalShaftDepth, 0, unID: unID = unID + 1
			hotspot 0, totalShaftDepth, 0, unID: unID = unID + 1
			del 1
		endif
		cutend

		if bTopSlab then						! --- top slab
			addz connected_stories_elev[1]+connected_stories_height[1]+penthouse_height
			cprism_ top_slab_ext_mat, top_slab_int_mat, top_slab_edge_mat,
					5, top_slab_thick,
					0, 0, 15,
					totalShaftWidth, 0, 15,
					totalShaftWidth, totalShaftDepth, 15,
					0, totalShaftDepth, 15,
					0, 0, -1

			hotspot 0, 0, 0, unID: unID = unID + 1
			hotspot totalShaftWidth, 0, 0, unID: unID = unID + 1
			hotspot totalShaftWidth, totalShaftDepth, 0, unID: unID = unID + 1
			hotspot 0, totalShaftDepth, 0, unID: unID = unID + 1
			del 1
		endif

		addz connected_stories_elev[1]+connected_stories_height[1]+penthouse_height+top_slab_thick
		hotspot 0, 0, 0, unID: unID = unID + 1
		hotspot totalShaftWidth, 0, 0, unID: unID = unID + 1
		hotspot totalShaftWidth, totalShaftDepth, 0, unID: unID = unID + 1
		hotspot 0, totalShaftDepth, 0, unID: unID = unID + 1
		del 1

		if bPitSlab then						! --- pit slab
			addz connected_stories_elev[num_connected_stories]-pit_depth-pit_slab_thick
			cprism_ pit_slab_ext_mat, pit_slab_int_mat, pit_slab_edge_mat,
					5, pit_slab_thick,
					0, 0, 15,
					totalShaftWidth, 0, 15,
					totalShaftWidth, totalShaftDepth, 15,
					0, totalShaftDepth, 15,
					0, 0, -1

			hotspot 0, 0, 0, unID: unID = unID + 1
			hotspot totalShaftWidth, 0, 0, unID: unID = unID + 1
			hotspot totalShaftWidth, totalShaftDepth, 0, unID: unID = unID + 1
			hotspot 0, totalShaftDepth, 0, unID: unID = unID + 1
			del 1
		endif
	endif
endif


! ==============================================================================
! Segmented
! ==============================================================================
if elevator_form_m = FORM_SEGMENTED then

	if door_pos < 0 then
		RightDoor = 1
	else
		RightDoor = 0
	endif
	! --------------------------------------------------------------------------
	! Elevator Wall
	! --------------------------------------------------------------------------
	if bShowElevatorWall then
		for i = 1 to num_connected_stories						! --- Stories and doors
			pen gs_wall_cont_pen

			addz connected_stories_elev[i]

			storyID = connected_stories_id[i]
			if connected_stories_height[i] > gs_max_StrFl_height then
				if storyID < 0 then
					elevShaftDoorPosID = S_below_story_door_pos[abs(storyID)]
				else
					elevShaftDoorPosID = S_above_story_door_pos[storyID+1]
				endif
			else
				elevShaftDoorPosID = 4
			endif

			if elevShaftDoorPosID = 1 then
				addx door_pos
				rotx 90
				addx -opening_width/2

				pen gs_cont_pen
				opening_in3D_in_car_pos = 0
				if car_pos_story_m = storyID then opening_in3D_in_car_pos = opening_in3D
				neg = -0.10-0.08
				pos = opening_width+0.10
				addx A/2

				gosub "wall door"

				pen gs_wall_cont_pen
				material elev_wall_edge_mat
				cutpolya 5, 2, 0,
					0, 0, 15,
					opening_width, 0, 15,
					opening_width, opening_height, 15,
					0, opening_height, 15,
					0, 0, -1
				del 4
				num_cutend = num_cutend+1
			endif

			addy elev_wall_thick
			rotx 90
			cprism_ elev_wall_int_mat, elev_wall_ext_mat, elev_wall_edge_mat,
					5, elev_wall_thick,
					0, 0, 15,
					A, 0, 15,
					A, connected_stories_height[i], 15,
					0, connected_stories_height[i], 15,
					0, 0, -1
			del 2

			hotspot 0, 0, 0, unID: unID = unID + 1
			hotspot A, 0, 0, unID: unID = unID + 1
			hotspot A, elev_wall_thick, 0, unID: unID = unID + 1
			hotspot 0, elev_wall_thick, 0, unID: unID = unID + 1

			for j = 1 to num_cutend
				cutend
			next j
			num_cutend=0

			del 1
		next i

		if bPenthouse then				! --- penthouse
			addz connected_stories_elev[1]+connected_stories_height[1]
			addy elev_wall_thick
			rotx 90
			cprism_ elev_wall_int_mat, elev_wall_ext_mat, elev_wall_edge_mat,
					5, elev_wall_thick,
					0, 0, 15,
					A, 0, 15,
					A, penthouse_height, 15,
					0, penthouse_height, 15,
					0, 0, -1
			del 2

			hotspot 0, 0, 0, unID: unID = unID + 1
			hotspot A, 0, 0, unID: unID = unID + 1
			hotspot A, elev_wall_thick, 0, unID: unID = unID + 1
			hotspot 0, elev_wall_thick, 0, unID: unID = unID + 1
			del 1
		endif

		if bPith then						! --- pit
			addz connected_stories_elev[num_connected_stories]-pit_depth
			addy elev_wall_thick
			rotx 90
			cprism_ elev_wall_int_mat, elev_wall_ext_mat, elev_wall_edge_mat,
					5, elev_wall_thick,
					0, 0, 15,
					A, 0, 15,
					A, pit_depth, 15,
					0, pit_depth, 15,
					0, 0, -1
			del 2

			hotspot 0, 0, 0, unID: unID = unID + 1
			hotspot A, 0, 0, unID: unID = unID + 1
			hotspot A, elev_wall_thick, 0, unID: unID = unID + 1
			hotspot 0, elev_wall_thick, 0, unID: unID = unID + 1
			del 1
		endif

		if bTopSlab then						! --- top slab
			addz connected_stories_elev[1]+connected_stories_height[1]+penthouse_height
			addy elev_wall_thick
			rotx 90
			cprism_ top_slab_int_mat, top_slab_ext_mat, top_slab_edge_mat,
					5, elev_wall_thick,
					0, 0, 15,
					A, 0, 15,
					A, top_slab_thick, 15,
					0, top_slab_thick, 15,
					0, 0, -1
			del 2

			hotspot 0, 0, 0, unID: unID = unID + 1
			hotspot A, 0, 0, unID: unID = unID + 1
			hotspot A, elev_wall_thick, 0, unID: unID = unID + 1
			hotspot 0, elev_wall_thick, 0, unID: unID = unID + 1
			del 1
		endif

		addz connected_stories_elev[1]+connected_stories_height[1]+penthouse_height+top_slab_thick
		hotspot 0, 0, 0, unID: unID = unID + 1
		hotspot A, 0, 0, unID: unID = unID + 1
		hotspot A, elev_wall_thick, 0, unID: unID = unID + 1
		hotspot 0, elev_wall_thick, 0, unID: unID = unID + 1
		del 1

		if bPitSlab then						! --- pit slab
			addz connected_stories_elev[num_connected_stories]-pit_depth-pit_slab_thick
			addy elev_wall_thick
			rotx 90
			cprism_ pit_slab_int_mat, pit_slab_ext_mat, pit_slab_edge_mat,
					5, elev_wall_thick,
					0, 0, 15,
					A, 0, 15,
					A, pit_slab_thick, 15,
					0, pit_slab_thick, 15,
					0, 0, -1
			del 2

			hotspot 0, 0, 0, unID: unID = unID + 1
			hotspot A, 0, 0, unID: unID = unID + 1
			hotspot A, elev_wall_thick, 0, unID: unID = unID + 1
			hotspot 0, elev_wall_thick, 0, unID: unID = unID + 1
			del 1
		endif
	else
		addx elev_wall_overhang
	endif


	! --------------------------------------------------------------------------
	! Elevator Car
	! --------------------------------------------------------------------------

	pen gs_cont_pen
	alpha = 180/segment_num
	if segment_num/2=int(segment_num/2) then
		dy = car_width/2
	else
		dy = car_width/2*sin(int(segment_num/2)*alpha)
	endif

	carPosStoryID = -car_pos_story_m+1+num_stories_above_HS+home_story_index
	add (A-car_width)/2, elev_wall_thick+segmentedFront,  connected_stories_elev[carPosStoryID]

	hotspot car_width/2,  0,			-0.2, unID, car_depth, 1+128:		unID=unID+1
	hotspot car_width/2, -1,			-0.2, unID, car_depth, 3:			unID=unID+1
	hotspot car_width/2,  car_depth,	-0.2, unID, car_depth, 2:			unID=unID+1

	hotspot car_width/2,  0,			-0.2+car_height+0.50, unID, car_depth, 1+128:		unID=unID+1
	hotspot car_width/2, -1,			-0.2+car_height+0.50, unID, car_depth, 3:			unID=unID+1
	hotspot car_width/2,  car_depth,	-0.2+car_height+0.50, unID, car_depth, 2:			unID=unID+1

	hotspot 0,			0, -0.2,					unID : unID = unID + 1
	hotspot car_width,	0, -0.2,					unID : unID = unID + 1
	hotspot car_width,	0, -0.2+car_height+0.50,	unID : unID = unID + 1
	hotspot 0,			0, -0.2+car_height+0.50,	unID : unID = unID + 1

	if GLOB_CONTEXT <> 4 & GLOB_CONTEXT <> 24 & GLOB_CONTEXT <> 44 then
		for i = 0 to segment_num
			hotspot car_width/2 + cos(alpha*i)*car_width/2, carWallThk+sin(alpha*i)*(car_width/2)*((car_depth-carWallThk)/dy), -0.2,			unID : unID = unID + 1
			hotspot car_width/2 + cos(alpha*i)*car_width/2, carWallThk+sin(alpha*i)*(car_width/2)*((car_depth-carWallThk)/dy), -0.2+car_height+0.50,	unID : unID = unID + 1
		next i
	else
		unID = unID + (segment_num+1)*2
	endif

	if gs_detlevel_3D_m = 2 then		! --- Detailed ---
		if door_pos < 0 then
			RightDoor = 1
		else
			RightDoor = 0
		endif

		add car_width/2+door_pos,0, 0
		rotx 90
		gosub "elev car door"
		del 2

		material car_back_mat				! --- Back Side ----
		rotx 90
		addz -carWallThk
		cprism_{2} car_back_mat, car_int_mat, car_back_mat,
				9, 0.08,
				0, 0, 0, 15, car_back_mat, 
				car_width/2-door_width/2+door_pos, 0, 0, 15, car_int_mat, 
				car_width/2-door_width/2+door_pos, door_height, 0, 15, car_int_mat, 
				car_width/2+door_width/2+door_pos, door_height, 0, 15, car_int_mat,
				car_width/2+door_width/2+door_pos, 0, 0, 15, car_back_mat, 
				car_width, 0, 0, 15, car_back_mat,
				car_width, car_height, 0, 15, car_back_mat,
				0, car_height, 0, 15, car_back_mat,
				0, 0, 0, -1, car_back_mat
		del 2
		for j = 1 to num_cutend
			cutend
		next j
		num_cutend=0
									! --- Bottom Side ----
		if bShowMullion then ss = 15 else ss = 79

		for i = 1 to segment_num
			put cos(alpha*i)*car_width/2, carWallThk+(sin(alpha*i)*car_width/2)*((car_depth-carWallThk)/dy), ss
		next i

		addx car_width/2
		addz -0.2
		cprism_ car_pave_mat, car_ext_mat, car_ext_mat,
			4+segment_num, 0.20,
			-car_width/2, carWallThk, ss,
			-car_width/2, 0, ss,
			car_width/2, 0, ss,
			car_width/2, carWallThk, ss,
			use(nsp)
		del 1

		addz car_height
		cprism_ car_ext_mat, car_ceiling_mat, car_ext_mat,
			4+segment_num, 0.30,
			-car_width/2, carWallThk, ss,
			-car_width/2, 0, ss,
			car_width/2, 0, ss,
			car_width/2, carWallThk, ss,
			get(nsp)
		del 1

		if bShowMullion then
			material car_mullion_mat
			resol 4

			for i = 1 to segment_num-1
				add cos(alpha*(i))*(car_width/2-0.02),carWallThk+sin(alpha*(i))*(car_width/2-0.02)*((car_depth-carWallThk)/dy), 0
				rotz i*alpha+45
				prism_ 2, car_height,
					0, 0, 979,
					0.02, 360, 4079
				del 2
			next i
		endif

		material car_front_mat
		for i = 1 to segment_num
			put cos(alpha*(i))*(car_width/2-0.01),carWallThk+sin(alpha*(i))*(car_width/2-0.01)*((car_depth-carWallThk)/dy),79
		next i

		for q = segment_num to 1 step -1
			put cos(alpha*(q-1))*(car_width/2-0.02),carWallThk+sin(alpha*(q-1))*(car_width/2-0.02)*((car_depth-carWallThk)/dy),79
		next q

		prism_ 2*segment_num+2, car_height,
			car_width/2-0.01,carWallThk,79,
			get(nsp/2),
			-car_width/2+0.02,carWallThk,79,
			get(nsp)

		if bControlPanel then
			add door_width/2+door_pos+0.20, carWallThk, 1
			rotz 180
			gosub "inside control panel"
			del 2
		endif
		del 1

		for j = 1 to num_cutend
			cutend
		next j
		num_cutend=0
	else
		! --- Simple -----------------------------------------------------------

		if bShowMullion then ss = 15 else ss = 79
		for i = 1 to segment_num
			put cos(alpha*i)*car_width/2, carWallThk+sin(alpha*i)*(car_width/2)*((car_depth-carWallThk)/dy), ss
		next i

		addx car_width/2
		addz -0.2
		cprism_ car_ext_mat, car_ext_mat, car_ext_mat,
			4+segment_num, car_height+0.50,
			-car_width/2, carWallThk, ss,
			-car_width/2, 0, ss,
			car_width/2, 0, ss,
			car_width/2, carWallThk, ss,
			get(nsp)
		del 2
	endif
	del 1 + not(bShowElevatorWall)
endif


end

! ==============================================================================
! Subroutines
! ==============================================================================

"openings to shaft":
	if dir_second_opening_m = SECOND_OPENING_SIDE1 then
		pl=elev_shaft_thick+carSide1+car_width/2
	else
		if dir_second_opening_m = SECOND_OPENING_SIDE2 then
			pl=totalShaftWidth-car_width-elev_shaft_thick-carSide2+car_width/2
		else
			pl=carSide1+elev_shaft_thick+car_width/2
		endif
	endif

	if elevShaftDoorPosID = 1 or elevShaftDoorPosID = 3 then				! --- Front door

		addx pl+door_pos
		if door_pos < 0 then
			mulx -1
		else
			mulx 1
		endif
		rotx 90
		addx -opening_width/2
		frame_thk = shaft_inner_depth/2-car_depth/2 !-0.06
		neg = -0.10-0.08
		pos = opening_width+0.10
		gosub "shaft door"
		del 3
		rotx 90
		addx -opening_width/2
		material elev_shaft_edge_mat
		cutform 5, 1, 2,
			0, 0, 1, -elev_shaft_thick*2,
			0, 0, 15,
			opening_width, 0, 15,
			opening_width, opening_height, 15,
			0, opening_height, 15,
			0, 0, -1
		num_cutend = num_cutend+1
		del 3
	endif
	if (elevShaftDoorPosID = 2 or elevShaftDoorPosID = 3) and dir_second_opening_m = SECOND_OPENING_REAR then			! --- Second door on Back

		add pl+second_door_pos, totalShaftDepth, 0
		rotz 180
		if second_door_pos < 0 then
			mulx -1
		else
			mulx 1
		endif

		rotx 90
		addx -opening_width/2
		frame_thk = shaft_inner_depth/2-car_depth/2 !-0.06
		neg = -0.10-0.08
		pos = opening_width+0.10
		gosub "shaft door"
		del 3

		rotx 90
		addx -opening_width/2
		material elev_shaft_edge_mat

		cutform 5, 1, 2,
			0, 0, 1, -elev_shaft_thick*2,
			0, 0, 15,
			opening_width, 0, 15,
			opening_width, opening_height, 15,
			0, opening_height, 15,
			0, 0, -1
		num_cutend = num_cutend+1
		del 4
	endif
	if (elevShaftDoorPosID = 2 or elevShaftDoorPosID = 3) and dir_second_opening_m = SECOND_OPENING_SIDE1 then		! --- Second door on Side 1
		add 0, elev_shaft_thick+0.04+car_depth/2+second_door_pos, 0
		rotz -90
		if second_door_pos < 0 then
			mulx -1
		else
			mulx 1
		endif
		rotx 90
		addx -opening_width/2
		frame_thk = shaft_inner_width/2-car_width/2 !-0.06
		neg = -0.10-0.08
		pos = opening_width+0.10
		gosub "shaft door"
		del 3

		rotx 90
		addx -opening_width/2
		material elev_shaft_edge_mat

		cutform 5, 1, 2,
			0, 0, 1, -elev_shaft_thick*2,
			0, 0, 15,
			opening_width, 0, 15,
			opening_width, opening_height, 15,
			0, opening_height, 15,
			0, 0, -1
		num_cutend = num_cutend+1
		del 4
	endif
	if (elevShaftDoorPosID = 2 or elevShaftDoorPosID = 3) and dir_second_opening_m = SECOND_OPENING_SIDE2 then		! --- Second door on Side 2
		add totalShaftWidth, 0.04+car_depth/2+elev_shaft_thick+second_door_pos, 0
		rotz 90
		if second_door_pos < 0 then
			mulx -1
		else
			mulx 1
		endif
		rotx 90
		addx -opening_width/2
		frame_thk = shaft_inner_width/2-car_width/2 !-0.06
		pos	= -0.10-0.08
		neg = opening_width+0.10
		gosub "shaft door"
		del 3

		rotx 90
		addx -opening_width/2
		material elev_shaft_edge_mat
		cutform 5, 1, 2,
			0, 0, 1, -elev_shaft_thick*2,
			0, 0, 15,
			opening_width, 0, 15,
			opening_width, opening_height, 15,
			0, opening_height, 15,
			0, 0, -1
		del 4
		num_cutend = num_cutend+1
	endif
return

"shaft door":
	pen gs_wall_cont_pen
	if gs_detlevel_3D_m = 2 then				! --- Detailed
		material opening_frame_mat
		addz -elev_wall_thick
		prism_ 9, 0.06,
			0, 0, 15,
			0.18, 0, 15,
			0.18, door_height, 15,
			0.18+door_width, door_height, 15,
			0.18+door_width, 0, 15,
			opening_width, 0, 15,
			opening_width, opening_height, 15,
			0, opening_height, 15,
			0, 0, -1
		del 1

		if bOpeningFrame then
			addz 0.06-elev_wall_thick
			prism_ 9, elev_wall_thick-0.06,
				0, 0, 15,
				0.02, 0, 15,
				0.02, opening_height-0.02, 15,
				opening_width-0.02, opening_height-0.02, 15,
				opening_width-0.02, 0, 15,
				opening_width, 0, 15,
				opening_width, opening_height, 15,
				0, opening_height, 15,
				0, 0, -1
			del 1

			prism_ 9, 0.02,
				-0.04, 0, 15,
				0.02, 0, 15,
				0.02, opening_height-0.02, 15,
				opening_width-0.02, opening_height-0.02, 15,
				opening_width-0.02, 0, 15,
				opening_width+0.04, 0, 15,
				opening_width+0.04, opening_height+0.04, 15,
				-0.04, opening_height+0.04, 15,
				-0.04, 0, -1
		endif

		if elev_door_style_m = 1 then		! --- Sliding door
			addz -elev_wall_thick
			material door_panel_mat
			add 0.18-(door_width/2)*(opening_in3D_in_car_pos/100), 0, -0.02
			block door_width/2, door_height, 0.02
			del 1
			add 0.18+door_width/2-door_width*(opening_in3D_in_car_pos/100), 0, -0.04
			block door_width/2, door_height, 0.02
			del 2
		endif

		if elev_door_style_m = 2 then		! --- Opening door
			addz -elev_wall_thick
			material door_panel_mat
			addx 0.18
			roty -90*(opening_in3D_in_car_pos/100)
			addz -0.02
			block door_width/2, door_height, 0.02
			del 3
			addx 0.18+door_width
			roty 90*(opening_in3D_in_car_pos/100)
			add -door_width/2, 0, -0.02
			block door_width/2, door_height, 0.02
			del 3
			del 1
		endif

		if bControlPanel then
			if carSide1+car_width/2-door_pos < shaft_inner_width/2 then
				add neg, 1, 0
			else
				add pos, 1, 0
			endif
			gosub "outside control panel"
			del 1
		endif
	else										! --- Simple
		material door_panel_mat
		addz -elev_wall_thick
		block opening_width, opening_height, elev_wall_thick
		del 1
	endif
return


"wall door":
	pen gs_wall_cont_pen
	if gs_detlevel_3D_m = 2 then				! --- Detailed
		material opening_frame_mat
		addz -elev_wall_thick
		prism_ 9, 0.06,
			0, 0, 15,
			0.18, 0, 15,
			0.18, door_height, 15,
			0.18+door_width, door_height, 15,
			0.18+door_width, 0, 15,
			opening_width, 0, 15,
			opening_width, opening_height, 15,
			0, opening_height, 15,
			0, 0, -1
		del 1

		if bOpeningFrame then
			addz 0.06-elev_wall_thick
			prism_ 9, elev_wall_thick-0.06,
				0, 0, 15,
				0.02, 0, 15,
				0.02, opening_height-0.02, 15,
				opening_width-0.02, opening_height-0.02, 15,
				opening_width-0.02, 0, 15,
				opening_width, 0, 15,
				opening_width, opening_height, 15,
				0, opening_height, 15,
				0, 0, -1
			del 1

			prism_ 9, 0.02,
				-0.04, 0, 15,
				0.02, 0, 15,
				0.02, opening_height-0.02, 15,
				opening_width-0.02, opening_height-0.02, 15,
				opening_width-0.02, 0, 15,
				opening_width+0.04, 0, 15,
				opening_width+0.04, opening_height+0.04, 15,
				-0.04, opening_height+0.04, 15,
				-0.04, 0, -1
		endif

		if elev_door_style_m = 1 then		! --- Sliding door
			if RightDoor then
				mulx -1
				addx -shaft_inner_width/2
			else
				mulx 1
				addx 0
			endif

			addx 0.17
			rotz -90
			cutplane 90
			del 2

			addz -elev_wall_thick
			material door_panel_mat
			add 0.17-(door_width/2)*(opening_in3D_in_car_pos/100), 0, 0.03
			block door_width/2, door_height, 0.02
			del 1
			add 0.17+door_width/2-door_width*(opening_in3D_in_car_pos/100), 0, 0.01
			block door_width/2, door_height, 0.02
			del 2+2

			cutend
		endif

		if elev_door_style_m = 2 then		! --- Opening door
			addz -elev_wall_thick+0.04
			material door_panel_mat
			addx 0.18
			roty -90*(opening_in3D_in_car_pos/100)
			addz -0.02
			block door_width/2, door_height, 0.02
			del 3
			addx 0.18+door_width
			roty 90*(opening_in3D_in_car_pos/100)
			add -door_width/2, 0, -0.02
			block door_width/2, door_height, 0.02
			del 3
			del 1
		endif

		if bControlPanel then
			if carSide1+car_width/2-door_pos < shaft_inner_width/2 then
				add neg, 1, 0
			else
				add pos, 1, 0
			endif
			gosub "outside control panel"
			del 1
		endif
	else										! --- Simple
		material door_panel_mat
		addz -elev_wall_thick
		block opening_width, opening_height, elev_wall_thick
		del 1
	endif
return

"elev car door":
	pen gs_cont_pen
	addz -carWallThk+elevCarOffset
	if door_style_m = 1 then
		material door_panel_mat

		if RightDoor then
			mulx -1
		else
			mulx 1
		endif
		addx -door_width/2
		add -(door_width/2)*(_opening_in3D/100), 0, carWallThk-elevCarDoorThk
		block door_width/2, door_height, elevCarDoorThk
		del 1
		add door_width/2-door_width*(_opening_in3D/100), 0, carWallThk-elevCarDoorThk*2
		block door_width/2, door_height, elevCarDoorThk
		del 3

		addz carWallThk

		if RightDoor then
			addx door_width
		else
			addx 0
		endif

		if SYMB_MIRRORED then MULX -1  ! Rotated or mirrored window
		cutpolya 5, 2, -elevCarDoorThk*2,
			0, 0, 15,
			0, door_height, 15,
			-door_width, door_height, 15,
			-door_width, 0, 15,
			0, 0, -1
		num_cutend = num_cutend+1
		if SYMB_MIRRORED then del 1  ! Rotated or mirrored window
		del 2
	endif

	if door_style_m = 2 then
		addx -door_width/2

		material door_panel_mat
		addx -(door_width/2)*(_opening_in3D/100)
		block door_width/2, door_height, elevCarDoorThk
		del 1
		addx door_width/2+(door_width/2)*(_opening_in3D/100)
		block door_width/2, door_height, elevCarDoorThk
		del 1
		! one transformation left for the cutform!
	endif

	if door_style_m = 3 then
		addx -door_width/2

		for i = -1 to 1 step 2
			addx door_width*(i < 0)
			mulx i
			material door_panel_mat
			roty 90*(_opening_in3D/100)
			prism_ 10, elevCarDoorThk,
				0, 0, 15,
				door_width/2, 0, 15,
				door_width/2, door_height, 15,
				0, door_height, 15,
				0, 0, -1,
				0.05, door_height/2, 15,
				door_width/2-0.05, door_height/2, 15,
				door_width/2-0.05, door_height-0.05, 15,
				0.05, door_height-0.05, 15,
				0.05, door_height/2, -1
			addz (elevCarDoorThk-elevCarGlassThk)/2
			material door_glass_mat
			prism_ 5, elevCarGlassThk,
				0.05, door_height/2, 15,
				door_width/2-0.05, door_height/2, 15,
				door_width/2-0.05, door_height-0.05, 15,
				0.05, door_height-0.05, 15,
				0.05, door_height/2, -1
			del 4
		next i
		del 1
	endif

	if door_style_m = 4 then
		addx -door_width/2

		for i = -1 to 1 step 2
			addx door_width*(i < 0)
			mulx i
			material door_panel_mat
			addx -(door_width/2)*(_opening_in3D/100)
			prism_ 10, elevCarDoorThk,
				0, 0, 15,
				door_width/2, 0, 15,
				door_width/2, door_height, 15,
				0, door_height, 15,
				0, 0, -1,
				0.03, 0.15, 15,
				door_width/2-0.03, 0.15, 15,
				door_width/2-0.03, door_height-0.05, 15,
				0.03, door_height-0.05, 15,
				0.03,  0.15, -1
			addz (elevCarDoorThk-elevCarGlassThk)/2
			material door_glass_mat
			prism_ 5, elevCarGlassThk,
				0.03, 0.15, 15,
				door_width/2-0.03, 0.15, 15,
				door_width/2-0.03, door_height-0.05, 15,
				0.03, door_height-0.05, 15,
				0.03, 0.15, -1
			del 4
		next i
		! one transformation left for the cutform!
	endif

	if  door_style_m = 5 then
		if RightDoor then
			mulx -1
		else
			mulx 1
		endif

		addx -door_width/2

		material door_panel_mat
		addx -(door_width/2)*(_opening_in3D/100)
		block (door_width/2), door_height, elevCarDoorThk
		add (door_width/2)*(_opening_in3D/100), 0, elevCarDoorThk/4
		block (door_width/2), door_height, elevCarDoorThk/2
		del 2

		cutform 5, 1, 2,
			0, 0, 1, elevCarDoorThk,
			0, 0, 15,
			-door_width/2, 0, 15,
			-door_width/2, door_height, 15,
			0, door_height, 15,
			0, 0, -1
		num_cutend = num_cutend+1
		del 2
	endif

	if door_style_m = 2 or door_style_m = 4 then
		addz carWallThk-elevCarOffset
		for i=1 to 2
			cutform 5, 1, 2,
				0, 0, 1, elevCarDoorThk,
				0, 0, 15,
				-door_width/2, 0, 15,
				-door_width/2, door_height, 15,
				0, door_height, 15,
				0, 0, -1
			num_cutend = num_cutend+1

			addx door_width+door_width/2
		next i
		del 3
		del 1	! for previous transformation!
	endif

	if SYMB_MIRRORED then MULX -1           ! Mirrored object
	material car_int_mat
	cutpolya 5, 2, -0.10,
		-door_width/2, 0, 15,
		door_width/2, 0, 15,
		door_width/2, door_height, 15,
		-door_width/2, door_height, 15,
		-door_width/2, 0, -1
	num_cutend = num_cutend+1
	if SYMB_MIRRORED then del 1             ! Mirrored object
	del 1
return

"inside control panel":
	numStory = 1+num_stories_above_HS+num_stories_below_HS
	if bSplitLevelStories then numStory = numStory+num_SL_stories_above_HS+num_SL_stories_below_HS
	distButton = 0.10/4

	rowIntNumStory = 15
	columnNumStory  = 1
	if numStory > rowIntNumStory then
		columnNumStory = INT(numStory/rowIntNumStory)
		remainStory = numStory mod rowIntNumStory
		if remainStory then columnNumStory = columnNumStory + 1
	else
		remainStory = 0
		rowIntNumStory = numStory
	endif

	cp_height = distButton*(rowIntNumStory+2)

	rotx 90
	material cpanel_mat
	block 0.10, cp_height, 0.01

	material button_mat
	for i = 0 to 3
		add distButton/2+distButton*(i), distButton/2, 0.01
		resol 4
		rotz 45
		cone 0.005, 0.01, 0.008, 90, 90
		del 2
	next i

	for j = 1 to columnNumStory
		if j = columnNumStory and remainStory then
			currentNumStory = remainStory
		else
			currentNumStory = rowIntNumStory
		endif
		for i = 1 to currentNumStory
			add distButton/2+distButton*(j-1), cp_height-distButton*(i-0.5), 0.01
			resol 4
			rotz 45
			cone 0.005, 0.01, 0.008, 90, 90
			del 2
		next i
	next j
	del 1
return

"outside control panel":
	material cpanel_mat
	if i > 1 and i < num_connected_stories then
		block 0.08, 0.20, 0.01
		add 0.04, 0.10, 0.01
	else
		if i = 1 then
			block 0.08, 0.10, 0.01
			add 0.04, 0.095, 0.01
		else
			block 0.08, 0.10, 0.01
			add 0.04, 0.005, 0.01
		endif
	endif

	material button_mat
	resol 12
	if i > 1 then
		addy 0.015
		prism_ 8, 0.002,
			-0.005, 0, 15,
			-0.005, 0.012, 15,
			-0.014, 0.012, 15,
			0, 0.027, 15,
			0.014, 0.012, 15,
			0.005, 0.012, 15,
			0.005, 0, 15,
			-0.005, 0, -1
		del 1

		addy 0.065
		cone 0.006, 0.012, 0.01, 90, 90
		del 1
	endif

	if i < num_connected_stories then
		addy -0.015
		muly -1
		prism_ 8, 0.002,
			-0.005, 0, 15,
			-0.005, 0.012, 15,
			-0.014, 0.012, 15,
			0, 0.027, 15,
			0.014, 0.012, 15,
			0.005, 0.012, 15,
			0.005, 0, 15,
			-0.005, 0, -1
		del 2

		addy -0.065
		cone 0.006, 0.012, 0.01, 90, 90
		del 1
	endif
	del 1
return
]]>
</Script_3D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_2D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
unID = 1

current_story_index = 0
n = REQUEST ("Story", "", current_story_index, current_story_name)

if isFrom14 and GLOB_CONTEXT <> 5 then
	if bSplitLevelStories then
		if current_story_index > connected_stories_id[1]/2 or current_story_index < connected_stories_id[num_connected_stories]/2 then end
	else
		if current_story_index > connected_stories_id[1] or current_story_index < connected_stories_id[num_connected_stories] then end
	endif
endif

if gs_detlevel_2D_m = 1 then	! Scale Sensitive
	if GLOB_SCALE <= 75 then
		gs_detlevel_2D_m = 2
	else
		if GLOB_SCALE <= 150 then
			gs_detlevel_2D_m = 3
		else
			gs_detlevel_2D_m = 4
		endif
	endif
endif

SOLID_WALL		= 1
POCKETCUT_WALL	= 2
SIDECUT_WALL	= 3

! ==============================================================================
! Rectangular
! ==============================================================================
if elevator_form_m = FORM_RECT then

	if bShowElevatorShaft then
		hotspot2 0, 0, unID                             : unID = unID + 1
		hotspot2 totalShaftWidth, 0, unID               : unID = unID + 1
		hotspot2 totalShaftWidth, totalShaftDepth, unID : unID = unID + 1
		hotspot2 0, totalShaftDepth, unID               : unID = unID + 1
	else
		unID = unID + 4
	endif

	hotspot2 elev_shaft_thick, elev_shaft_thick, unID                                 : unID = unID + 1
	hotspot2 totalShaftWidth-elev_shaft_thick, elev_shaft_thick, unID                 : unID = unID + 1
	hotspot2 totalShaftWidth-elev_shaft_thick, totalShaftDepth-elev_shaft_thick, unID : unID = unID + 1
	hotspot2 elev_shaft_thick, totalShaftDepth-elev_shaft_thick, unID                 : unID = unID + 1

	if gs_detlevel_2D_m = 6 then	! Symbolic 2 = Big X

		if bShowElevatorShaft then
			wBigX = totalShaftWidth
			hBigX = totalShaftDepth
		else
			add2 elev_shaft_thick+carSide1, elev_shaft_thick+carSpaceFront
			wBigX = car_width
			hBigX = car_depth
		endif
		pen gs_cont_pen
		fill gs_fill_type
		poly2_b 5, 1+2+4+64, gs_fill_pen, gs_back_pen,
				0,     0, 1,
				wBigX, 0, 1,
				wBigX, hBigX, 1,
				0,     hBigX, 1,
				0,     0, -1
		line2 0, 0, wBigX, hBigX
		line2 0, hBigX, wBigX, 0
		if not(bShowElevatorShaft) then del 1
		end
	endif

	! --------------------------------------------------------------------------
	! Elevator Shaft
	! --------------------------------------------------------------------------

	if bShowElevatorShaft then
		if bSplitLevelStories then
			storyID = current_story_index*2
			if storyID < 0 then
				elevShaftDoorPosID = SL_below_story_door_pos[abs(storyID)]
			else
				elevShaftDoorPosID = SL_above_story_door_pos[storyID+1]
			endif
		else
			storyID = current_story_index
			if storyID < 0 then
				elevShaftDoorPosID = below_story_door_pos[abs(storyID)]
			else
				elevShaftDoorPosID = above_story_door_pos[storyID+1]
			endif
		endif


		! --- Walls and Doors

		elev_wall_thick = elev_shaft_thick
		pen gs_wall_cont_pen
		fill gs_gap_fill_type
		if gs_detlevel_2D_m <> 4 then
			add2 elev_shaft_thick, elev_shaft_thick
			poly2_b 5, 2+4+64, gs_gap_fill_pen, gs_gap_back_pen,
				0, 0, 1,
				totalShaftWidth-elev_shaft_thick*2, 0, 1,
				totalShaftWidth-elev_shaft_thick*2, totalShaftDepth-elev_shaft_thick*2, 1,
				0, totalShaftDepth-elev_shaft_thick*2, 1,
				0, 0, -1
			del 1
			fill gs_wall_fill_type

			if dir_second_opening_m = SECOND_OPENING_SIDE1 then
				pl=elev_shaft_thick+carSide1+car_width/2
			else
				if dir_second_opening_m = SECOND_OPENING_SIDE2 then
					pl=totalShaftWidth-car_width-elev_shaft_thick-carSide2+car_width/2
				else
					pl=carSide1+elev_shaft_thick+car_width/2
				endif
			endif
			if elevShaftDoorPosID = 1  or elevShaftDoorPosID = 3 then				! --- Front wall with door
				poly2_b 5, 1+2+4+32, gs_wall_fill_pen, gs_wall_back_pen,
					0, 0, 1,
					pl-opening_width/2+door_pos, 0, 1,
					pl-opening_width/2+door_pos, elev_shaft_thick, 1,
					elev_shaft_thick, elev_shaft_thick, 0,
					0, 0, -1

				poly2_b 5, 1+2+4+32, gs_wall_fill_pen, gs_wall_back_pen,
					totalShaftWidth, 0, 1,
					pl+opening_width/2+door_pos, 0, 1,
					pl+opening_width/2+door_pos, elev_shaft_thick, 1,
					totalShaftWidth-elev_shaft_thick, elev_shaft_thick, 0,
					totalShaftWidth, 0, -1

				add2 pl+door_pos, 0
				frame_thk = shaft_inner_depth/2-car_depth/2 !-0.06
				gosub "shaft door"
				del 1
			else													! --- Front wall
				poly2_b 5, 1+2+4+32, gs_wall_fill_pen, gs_wall_back_pen,
					0, 0, 1,
					totalShaftWidth, 0, 0,
					totalShaftWidth-elev_shaft_thick, elev_shaft_thick, 1,
					elev_shaft_thick, elev_shaft_thick, 0,
					0, 0, -1
				unID = unID + 4
			endif

			if (elevShaftDoorPosID = 2 or elevShaftDoorPosID = 3) and dir_second_opening_m = SECOND_OPENING_REAR then		! --- Back wall with second door
				poly2_b 5, 1+2+4+32, gs_wall_fill_pen, gs_wall_back_pen,
					0, totalShaftDepth, 1,
					pl-opening_width/2+second_door_pos, totalShaftDepth, 1,
					pl-opening_width/2+second_door_pos, totalShaftDepth-elev_shaft_thick, 1,
					elev_shaft_thick, totalShaftDepth-elev_shaft_thick, 0,
					0, totalShaftDepth, -1

				poly2_b 5, 1+2+4+32, gs_wall_fill_pen, gs_wall_back_pen,
					totalShaftWidth, totalShaftDepth, 1,
					pl+opening_width/2+second_door_pos, totalShaftDepth, 1,
					pl+opening_width/2+second_door_pos, totalShaftDepth-elev_shaft_thick, 1,
					totalShaftWidth-elev_shaft_thick, totalShaftDepth-elev_shaft_thick, 0,
					totalShaftWidth, totalShaftDepth, -1

				add2 pl+second_door_pos, totalShaftDepth
				rot2 180
				frame_thk = shaft_inner_depth/2-car_depth/2 !-0.06
				gosub "shaft door"
				del 2
			else													! --- Back wall
				poly2_b 5, 1+2+4+32, gs_wall_fill_pen, gs_wall_back_pen,
					0, totalShaftDepth, 1,
					totalShaftWidth, totalShaftDepth, 0,
					totalShaftWidth-elev_shaft_thick, totalShaftDepth-elev_shaft_thick, 1,
					elev_shaft_thick, totalShaftDepth-elev_shaft_thick, 0,
					0, totalShaftDepth, -1
				unID = unID + 4
			endif

			if (elevShaftDoorPosID = 2 or elevShaftDoorPosID = 3) and dir_second_opening_m = SECOND_OPENING_SIDE1 then		! --- Wall on Side 1 with second door
				pl=car_depth/2+elev_shaft_thick+openingFromSide
				poly2_b 5, 1+2+4+32, gs_wall_fill_pen, gs_wall_back_pen,
					0, 0, 1,
					0, pl-opening_width/2+second_door_pos, 1,
					elev_shaft_thick, pl-opening_width/2+second_door_pos, 1,
					elev_shaft_thick, elev_shaft_thick, 0,
					0, 0, -1

				poly2_b 5, 1+2+4+32, gs_wall_fill_pen, gs_wall_back_pen,
					0, totalShaftDepth, 1,
					0, pl+opening_width/2+second_door_pos, 1,
					elev_shaft_thick, pl+opening_width/2+second_door_pos, 1,
					elev_shaft_thick, totalShaftDepth-elev_shaft_thick, 0,
					0, totalShaftDepth, -1

				add2 0, pl+second_door_pos
				rot2 -90
				frame_thk = shaft_inner_width/2-car_width/2 !-0.06
				gosub "shaft door"
				del 2
			else													! --- Wall on Side 1
				poly2_b 5, 1+2+4+32, gs_wall_fill_pen, gs_wall_back_pen,
					0, 0, 1,
					0, totalShaftDepth, 0,
					elev_shaft_thick, totalShaftDepth-elev_shaft_thick, 1,
					elev_shaft_thick, elev_shaft_thick, 0,
					0, 0, -1
				unID = unID + 4
			endif

			if (elevShaftDoorPosID = 2 or elevShaftDoorPosID = 3) and dir_second_opening_m = SECOND_OPENING_SIDE2 then		! --- Wall on Side 2 with second door
				pl=openingFromSide+car_depth/2+elev_shaft_thick
				poly2_b 5, 1+2+4+32, gs_wall_fill_pen, gs_wall_back_pen,
					totalShaftWidth, 0, 1,
					totalShaftWidth, pl-opening_width/2+second_door_pos, 1,
					totalShaftWidth-elev_shaft_thick, pl-opening_width/2+second_door_pos, 1,
					totalShaftWidth-elev_shaft_thick, elev_shaft_thick, 0,
					totalShaftWidth, 0, -1

				poly2_b 5, 1+2+4+32, gs_wall_fill_pen, gs_wall_back_pen,
					totalShaftWidth, totalShaftDepth, 1,
					totalShaftWidth, pl+opening_width/2+second_door_pos, 1,
					totalShaftWidth-elev_shaft_thick, pl+opening_width/2+second_door_pos, 1,
					totalShaftWidth-elev_shaft_thick, totalShaftDepth-elev_shaft_thick, 0,
					totalShaftWidth, totalShaftDepth, -1

				add2 totalShaftWidth, pl+second_door_pos
				rot2 90
				frame_thk = shaft_inner_width/2-car_width/2 !-0.06
				gosub "shaft door"
				del 2
			else													! --- Wall on Side 2
				poly2_b 5, 1+2+4+32, gs_wall_fill_pen, gs_wall_back_pen,
					totalShaftWidth, 0, 1,
					totalShaftWidth, totalShaftDepth, 0,
					totalShaftWidth-elev_shaft_thick, totalShaftDepth-elev_shaft_thick, 1,
					totalShaftWidth-elev_shaft_thick, elev_shaft_thick, 0,
					totalShaftWidth, 0, -1
				unID = unID + 4
			endif
		else	! gs_detlevel_2D_m = 4
			poly2_b 5, 1+2+4+64, gs_gap_fill_pen, gs_gap_back_pen,
				0,               0, 1,
				totalShaftWidth, 0, 1,
				totalShaftWidth, totalShaftDepth, 1,
				0,               totalShaftDepth, 1,
				0,               0, -1
			unID = unID + 16
		endif
	else	! show elevator shaft
		unID = unID + 16
	endif


	! --------------------------------------------------------------------------
	! Elevator Car
	! --------------------------------------------------------------------------

	! --- where are doors in elevator car?
	! --- the doors are always available by design independently from shaft(wall)
	bFrontDoorPresent		= 1			! always displayed
	bSecondaryDoorPresent	= (dir_second_opening_m <> SECOND_OPENING_NONE)

	add2 elev_shaft_thick+carSide1, elev_shaft_thick+carSpaceFront

	hotspot2 0, 0, unID                     : unID = unID + 1
	hotspot2 car_width, 0, unID             : unID = unID + 1
	hotspot2 car_width, car_depth, unID     : unID = unID + 1
	hotspot2 0, car_depth, unID             : unID = unID + 1
	hotspot2 car_width/2, car_depth/2, unID : unID = unID + 1

	pen gs_cont_pen
	fill gs_fill_type
	poly2_b 5, 1+2+4+64, gs_fill_pen, gs_back_pen,
		0, 0, 1,
		car_width, 0, 1,
		car_width, car_depth, 1,
		0, car_depth, 1,
		0, 0, -1

	if current_story_index*(1+bSplitLevelStories) = car_pos_story_m then
		if gs_detlevel_2D_m = 5 then
			! --- symbolic car -------------------------------------------------
			line2 0, 0, car_width, car_depth
			line2 car_width, 0, 0, car_depth

			if bFrontDoorPresent then
				add2 car_width/2+door_pos, frontGap
				gosub "elev car door"
				del 1
			endif

			if bSecondaryDoorPresent then
				if dir_second_opening_m = SECOND_OPENING_REAR then
					add2 car_width/2+second_door_pos, car_depth-frontGap
					rot2 180
					gosub "elev car door"
					del 2
				endif
				if dir_second_opening_m = SECOND_OPENING_SIDE1 then
					add2 frontGap/2, car_depth/2+second_door_pos
					rot2 -90
					gosub "elev car door"
					del 2
				endif
				if dir_second_opening_m = SECOND_OPENING_SIDE2 then
					add2 car_width-frontGap/2, car_depth/2+second_door_pos
					rot2 90
					gosub "elev car door"
					del 2
				endif
			endif
		else
			if gs_detlevel_2D_m < 4 then
				! --- detailed car ---------------------------------------------
				! --- front wall ---
				drawWall_detlevel		= gs_detlevel_2D_m
				drawWall_length			= car_width
				drawWall_bDoorPresent	= bFrontDoorPresent
				drawWall_doorStyle		= door_style_m
				drawWall_doorPos		= door_pos
				gosub "drawOneCarWall"


				! --- rear wall ---
				add2 0, car_depth
				mul2 1, -1
				drawWall_detlevel		= gs_detlevel_2D_m
				drawWall_length			= car_width
				drawWall_bDoorPresent	= (bSecondaryDoorPresent and dir_second_opening_m = SECOND_OPENING_REAR)
				drawWall_doorStyle		= door_style_m
				drawWall_doorPos		= second_door_pos
				gosub "drawOneCarWall"
				del 2


				! --- side 1 wall ---
				rot2 90
				mul2 1, -1
				drawWall_detlevel		= gs_detlevel_2D_m
				drawWall_length			= car_depth
				drawWall_bDoorPresent	= (bSecondaryDoorPresent and dir_second_opening_m = SECOND_OPENING_SIDE1)
				drawWall_doorStyle		= door_style_m
				drawWall_doorPos		= second_door_pos
				gosub "drawOneCarWall"
				del 2

				! --- side 2 wall ---
				add2 car_width, 0
				rot2 90
				drawWall_detlevel		= gs_detlevel_2D_m
				drawWall_length			= car_depth
				drawWall_bDoorPresent	= (bSecondaryDoorPresent and dir_second_opening_m = SECOND_OPENING_SIDE2)
				drawWall_doorStyle		= door_style_m
				drawWall_doorPos		= second_door_pos
				gosub "drawOneCarWall"
				del 2
			endif
		endif
	endif

	! --------------------------------------------------------------------------
	! Mechanics
	! --------------------------------------------------------------------------

	if gs_detlevel_2D_m = 2 and bShowMechin2D then
		if elevator_type_m = 1 then					! --- Mechanical
			del ntr()
			add2 elev_shaft_thick, elev_shaft_thick
			del_num = 0
			if cweight_pos_m = CW_POS_NORMAL then
				add2 shaft_inner_width/2, car_depth+carSpaceRear+carSpaceFront
				del_num = 1
			endif
			if cweight_pos_m = CW_POS_SIDE1 then
				add2 carSpaceSide1+cweight_depth, shaft_inner_depth/2
				rot2 90
				del_num = 2
			endif
			if cweight_pos_m = CW_POS_SIDE2 then
				add2 carSide1+car_width+carSpaceSide2, shaft_inner_depth/2
				rot2 -90
				del_num = 2
			endif

			add2 -cweight_width/2, 0
			hotspot2 0, cweight_depth/2, unID: unID = unID + 1
			hotspot2 cweight_width, cweight_depth/2, unID: unID = unID + 1

			line2 cweight_depth/6, 0, cweight_width-cweight_depth/6, 0
			line2 cweight_depth/6, cweight_depth, cweight_width-cweight_depth/6, cweight_depth
			line2 cweight_depth/2, 0, cweight_depth/2, cweight_depth
			line2 cweight_width-cweight_depth/2, 0, cweight_width-cweight_depth/2, cweight_depth
			line2 0, 0, 0, cweight_depth
			line2 cweight_width, 0, cweight_width, cweight_depth
			line2 0, cweight_depth/2, cweight_depth/3, cweight_depth/2
			line2 cweight_width, cweight_depth/2, cweight_width-cweight_depth/3, cweight_depth/2
			del del_num+2
		else										! --- Hydraulic
			add2 car_width/2, car_depth/2
			line_type 21
			rect2 -car_width/6, -car_depth/6, car_width/6, car_depth/6
			circle2 0, 0, shaft_inner_width/15
			del 2
			unID = unID + 2
		endif
	else
		unID = unID + 2
		del 1
	endif
endif


! ==============================================================================
! Segmented
! ==============================================================================
if elevator_form_m = FORM_SEGMENTED then

	if bShowElevatorWall then
		hotspot2 0, 0, unID: unID = unID + 1
		hotspot2 A, 0, unID: unID = unID + 1
	else
		add2 elev_wall_overhang, 0
		unID = unID + 2
	endif
	hotspot2 A, elev_wall_thick, unID: unID = unID + 1
	hotspot2 0, elev_wall_thick, unID: unID = unID + 1

	if gs_detlevel_2D_m = 2 or gs_detlevel_2D_m = 3 or gs_detlevel_2D_m = 5 then
		
		! --- Elevator Wall ----------------------------------------------------

		if bShowElevatorWall then
			storyID = current_story_index
			if storyID < 0 then
				elevShaftDoorPosID = S_below_story_door_pos[abs(storyID)]
			else
				elevShaftDoorPosID = S_above_story_door_pos[storyID+1]
			endif

			poly2_b 5, 2+4+64, 0, 0,
				0, 0, 1,
				A, 0, 1,
				A, elev_wall_thick, 1,
				0, elev_wall_thick, 1,
				0, 0, -1

			if elevShaftDoorPosID = 1 then				! --- Front wall with door
				pen gs_wall_cont_pen
				fill gs_wall_fill_type

				poly2_b 5, 1+2+4+64, gs_wall_fill_pen, gs_wall_back_pen,
					0, 0, 1,
					A/2-opening_width/2+door_pos, 0, 1,
					A/2-opening_width/2+door_pos, elev_wall_thick, 1,
					0, elev_wall_thick, 1,
					0, 0, -1

				poly2_b 5, 1+2+4+64, gs_wall_fill_pen, gs_wall_back_pen,
					A, 0, 1,
					A/2+opening_width/2+door_pos, 0, 1,
					A/2+opening_width/2+door_pos, elev_wall_thick, 1,
					A, elev_wall_thick, 1,
					A, 0, -1

				add2 A/2+door_pos, 0
				gosub "shaft door"
				del 1
			else													! --- Front wall
				pen gs_wall_cont_pen
				fill gs_wall_fill_type

				poly2_b 5, 1+2+4+64, gs_wall_fill_pen, gs_wall_back_pen,
					0, 0, 1,
					A, 0, 1,
					A, elev_wall_thick, 1,
					0, elev_wall_thick, 1,
					0, 0, -1
				unID = unID + 4
			endif
		else
			unID = unID + 4
		endif
	endif


	! --- Elevator Car ---------------------------------------------------------

	alpha = 180/segment_num
	if segment_num/2=int(segment_num/2) then
		dy = car_width/2
	else
		dy = car_width/2*sin(int(segment_num/2)*alpha)
	endif
	add2 0, segmentedFront
	pen gs_cont_pen
	fill gs_fill_type

	add2 A/2, elev_wall_thick

	hotspot2 -car_width/2, carWallThk, unID: unID = unID + 1
	hotspot2 car_width/2, carWallThk, unID: unID = unID + 1
	hotspot2 -car_width/2, 0, unID: unID = unID + 1
	hotspot2 car_width/2, 0, unID: unID = unID + 1

	alpha = 180/segment_num
	for i = 1 to segment_num
		_tX = cos(alpha*i)*car_width/2
		_tY	= carWallThk+(sin(alpha*i)*car_width/2)*((car_depth-carWallThk)/dy)
		put _tX, _tY, 1
		hotspot2 _tX, _tY, unID: unID = unID + 1
	next i

	if gs_detlevel_2D_m = 4 or gs_detlevel_2D_m = 5 or gs_detlevel_2D_m = 6 then					! --- 1:200, Symbolic 2
		pen gs_cont_pen
		fill gs_fill_type
		poly2_b 4+segment_num, 1+2+4+64, gs_fill_pen, gs_back_pen,
			-car_width/2, carWallThk, 1,
			-car_width/2, 0, 1,
			car_width/2, 0, 1,
			car_width/2, carWallThk, 1,
			get(nsp)

		if gs_detlevel_2D_m = 5 or gs_detlevel_2D_m = 6 then			! --- Symbolic 2
			line2 -car_width/2, 0, cos(alpha*int(segment_num/3))*car_width/2, carWallThk+(sin(alpha*int(segment_num/3))*car_width/2)*((car_depth-carWallThk)/dy)
			line2 car_width/2, 0, -cos(alpha*int(segment_num/3))*car_width/2, carWallThk+(sin(alpha*int(segment_num/3))*car_width/2)*((car_depth-carWallThk)/dy)
		endif

		del 1
		pen gs_wall_cont_pen
		fill gs_wall_fill_type
		if (gs_detlevel_2D_m = 4 or gs_detlevel_2D_m = 6) & bShowElevatorWall then
			add2 0, -segmentedFront
			poly2_b 5, 1+2+4+64, gs_wall_fill_pen, gs_wall_back_pen,
				0, 0, 1,
				A, 0, 1,
				A, elev_wall_thick, 1,
				0, elev_wall_thick, 1,
				0, 0, -1
			del 1
		endif

	else											! --- 1:50, 1:100

		poly2_b 4+segment_num, 1+2+4+64, gs_fill_pen, gs_back_pen,
			-car_width/2, carWallThk, 1,
			-car_width/2, 0, 1,
			car_width/2, 0, 1,
			car_width/2, carWallThk, 1,
			get (nsp)

		if current_story_index = car_pos_story_m then
			for i = 1 to segment_num
				put cos(alpha*(i-1))*(car_width/2-0.02), carWallThk+(sin(alpha*(i-1))*(car_width/2-0.02))*((car_depth-carWallThk)/dy), 1
			next i

			poly2_b 4+segment_num, 1+4, 0, 0,
				-car_width/2+0.02, carWallThk, 1,
				-door_width/2+door_pos, carWallThk, 0,
				door_width/2+door_pos, carWallThk, 1,
				car_width/2-0.02, carWallThk, 1,
				get(nsp)

			wallStatus_detlevel		= gs_detlevel_2D_m
			wallStatus_doorStyle	= door_style_m
			wallStatus_doorPos		= door_pos
			gosub "determineWallStatusAroundDoor"

			if leftWallStatus = SOLID_WALL then
				line2 -door_width/2+door_pos, carWallThk, -door_width/2+door_pos, 0

			else
				if leftWallStatus = SIDECUT_WALL then
					line2 -door_width+door_pos, 0, -door_width+door_pos, doorThk
					line2 -door_width+door_pos, doorThk, -door_width/2+door_pos, doorThk
					line2 -door_width/2+door_pos, doorThk, -door_width/2+door_pos, carWallThk
				else
					line2 -door_width/2+door_pos, 0, -door_width/2+door_pos, elevCarOffset
					line2 -door_width/2+door_pos, elevCarOffset, -door_width+door_pos, elevCarOffset
					line2 -door_width+door_pos, elevCarOffset, -door_width+door_pos, elevCarOffset+doorThk 
					line2 -door_width+door_pos, elevCarOffset+doorThk, -door_width/2+door_pos, elevCarOffset+doorThk
					line2 -door_width/2+door_pos, elevCarOffset+doorThk, -door_width/2+door_pos, carWallThk
				endif
			endif

			if rightWallStatus= SOLID_WALL then
				line2 door_width/2+door_pos, carWallThk, door_width/2+door_pos, 0
			else
				if rightWallStatus= SIDECUT_WALL then
					line2 door_width+door_pos, 0, door_width+door_pos, doorThk
					line2 door_width+door_pos, doorThk, door_width/2+door_pos, doorThk
					line2 door_width/2+door_pos, doorThk, door_width/2+door_pos, carWallThk
				else
					line2 door_width/2+door_pos, 0, door_width/2+door_pos, elevCarOffset
					line2 door_width/2+door_pos, elevCarOffset, door_width+door_pos, elevCarOffset
					line2 door_width+door_pos, elevCarOffset, door_width+door_pos, elevCarOffset+doorThk 
					line2 door_width+door_pos, elevCarOffset+doorThk, door_width/2+door_pos, elevCarOffset+doorThk
					line2 door_width/2+door_pos, elevCarOffset+doorThk, door_width/2+door_pos, carWallThk
				endif
			endif

			if gs_detlevel_2D_m = 2 then
				add2 door_pos, elevCarOffset
				gosub "elev car door"
				del 1
			endif
		endif
		del 1
	endif
	del 1 + not(bShowElevatorWall)
endif


end

! ==============================================================================
! Subroutines
! ==============================================================================

! ------------------------------------------------------------------------------
! determineWallStatusAroundDoor
! input:
!  wallStatus_detlevel
!  wallStatus_doorStyle
!  wallStatus_doorPos
! output:
!  leftWallStatus
!  rightWallStatus
!  doorThk
! ------------------------------------------------------------------------------
"determineWallStatusAroundDoor":
	doorThk	 = elevCarDoorThk
	if wallStatus_detlevel = 2 then
		if wallStatus_doorStyle = 1 then
			! sliding to one side
			doorThk	= elevCarDoorThk*2
			if wallStatus_doorPos < 0 then
				leftWallStatus	= SOLID_WALL
				rightWallStatus	= SIDECUT_WALL
			else
				leftWallStatus	= SIDECUT_WALL
				rightWallStatus	= SOLID_WALL
			endif
		else
			if wallStatus_doorStyle = 5 then
				! sliding to one side as pocket
				if wallStatus_doorPos < 0 then
					leftWallStatus	= SOLID_WALL
					rightWallStatus	= POCKETCUT_WALL
				else
					leftWallStatus	= POCKETCUT_WALL
					rightWallStatus	= SOLID_WALL
				endif
			else
				if wallStatus_doorStyle = 2 or wallStatus_doorStyle = 4 then
					! sliding to both sides as pocket
					leftWallStatus	= POCKETCUT_WALL
					rightWallStatus	= POCKETCUT_WALL
				else
					!Style 3
					leftWallStatus	= SOLID_WALL
					rightWallStatus	= SOLID_WALL
				endif
			endif
		endif
	else
		leftWallStatus	= SOLID_WALL
		rightWallStatus	= SOLID_WALL
	endif
return


! ------------------------------------------------------------------------------
! drawOneCarWall
! input:
!  drawWall_detlevel
!  drawWall_doorStyle
!  drawWall_bDoorPresent
!  drawWall_length
!  drawWall_doorPos
!  doorThk
!  door_width
!  gs_wall_fill_pen, gs_wall_back_pen
!  carWallThk
! ------------------------------------------------------------------------------
"drawOneCarWall":
	if drawWall_bDoorPresent then
		wallStatus_detlevel		= drawWall_detlevel
		wallStatus_doorStyle	= drawWall_doorStyle
		wallStatus_doorPos		= drawWall_doorPos
		gosub "determineWallStatusAroundDoor"

		if leftWallStatus = SOLID_WALL then
			poly2_b 5, 1+4, gs_wall_fill_pen, gs_wall_back_pen,
				0, 0, 1,
				drawWall_length/2-door_width/2+drawWall_doorPos, 0, 1,
				drawWall_length/2-door_width/2+drawWall_doorPos, carWallThk, 1,
				carWallThk,                                      carWallThk, 0,
				0, 0, -1
		else
			if leftWallStatus = SIDECUT_WALL then
				poly2_b 7, 1+4, gs_wall_fill_pen, gs_wall_back_pen,
					0, 0, 1,
					drawWall_length/2-door_width+drawWall_doorPos,   0, 1,
					drawWall_length/2-door_width+drawWall_doorPos,   doorThk, 1,
					drawWall_length/2-door_width/2+drawWall_doorPos, doorThk, 1,
					drawWall_length/2-door_width/2+drawWall_doorPos, carWallThk, 1,
					carWallThk,                                      carWallThk, 0,
					0, 0, -1
			else
				poly2_b 9, 1+4, gs_wall_fill_pen, gs_wall_back_pen,
					0, 0, 1,
					drawWall_length/2-door_width/2+drawWall_doorPos, 0, 1,
					drawWall_length/2-door_width/2+drawWall_doorPos, elevCarOffset, 1,
					drawWall_length/2-door_width+drawWall_doorPos,   elevCarOffset, 1,
					drawWall_length/2-door_width+drawWall_doorPos,   elevCarOffset+doorThk, 1,
					drawWall_length/2-door_width/2+drawWall_doorPos, elevCarOffset+doorThk, 1,
					drawWall_length/2-door_width/2+drawWall_doorPos, carWallThk, 1,
					carWallThk,                                      carWallThk, 0,
					0, 0, -1
			endif
		endif

		if rightWallStatus = SOLID_WALL then
			poly2_b 5, 1+4, gs_wall_fill_pen, gs_wall_back_pen,
				drawWall_length,                                 0, 1,
				drawWall_length/2+door_width/2+drawWall_doorPos, 0, 1,
				drawWall_length/2+door_width/2+drawWall_doorPos, carWallThk, 1,
				drawWall_length-carWallThk,                      carWallThk, 0,
				drawWall_length,                                 0, -1
		else
			if rightWallStatus = SIDECUT_WALL then
				poly2_b 7, 1+4, gs_wall_fill_pen, gs_wall_back_pen,
					drawWall_length,                                 0, 1,
					drawWall_length/2+door_width+drawWall_doorPos,   0, 1,
					drawWall_length/2+door_width+drawWall_doorPos,   doorThk, 1,
					drawWall_length/2+door_width/2+drawWall_doorPos, doorThk, 1,
					drawWall_length/2+door_width/2+drawWall_doorPos, carWallThk, 1,
					drawWall_length-carWallThk,                      carWallThk, 0,
					drawWall_length,                                 0, -1
			else
				poly2_b 9, 1+4, gs_wall_fill_pen, gs_wall_back_pen,
					drawWall_length,                                 0, 1,
					drawWall_length/2+door_width/2+drawWall_doorPos, 0, 1,
					drawWall_length/2+door_width/2+drawWall_doorPos, elevCarOffset, 1,
					drawWall_length/2+door_width+drawWall_doorPos,   elevCarOffset, 1,
					drawWall_length/2+door_width+drawWall_doorPos,   elevCarOffset+doorThk, 1,
					drawWall_length/2+door_width/2+drawWall_doorPos, elevCarOffset+doorThk, 1,
					drawWall_length/2+door_width/2+drawWall_doorPos, carWallThk, 1,
					drawWall_length-carWallThk,                      carWallThk, 0,
					drawWall_length,                                 0, -1
			endif
		endif

		add2 drawWall_length/2+drawWall_doorPos, elevCarOffset
		if drawWall_doorPos < 0 then mul2 -1, 1
		gosub "elev car door"
		if drawWall_doorPos < 0 then del 1
		del 1
	else
		poly2_b 5, 1+4, gs_wall_fill_pen, gs_wall_back_pen,
			0,                          0, 1,
			drawWall_length,            0, 0,
			drawWall_length-carWallThk, carWallThk, 1,
			carWallThk, carWallThk,     0,
			0,                          0, -1
	endif
return

"shaft door":
	if gs_detlevel_2D_m = 2 then
		pen gs_wall_cont_pen
		fill gs_opening_fill_type

		add2 -opening_width/2, elev_wall_thick
		hotspot2 0, 0, unID: unID = unID + 1
		poly2_b 5, 1+2+4+32, gs_opening_fill_pen, gs_opening_back_pen,
			0, 0, 1,
			0.18, 0, 1,
			0.18, -0.06, 1,
			0, -0.06, 1,
			0, 0, -1

		hotspot2 opening_width, 0, unID: unID = unID + 1
		poly2_b 5, 1+2+4+32, gs_opening_fill_pen, gs_opening_back_pen,
			opening_width, 0, 1,
			opening_width-0.18, 0, 1,
			opening_width-0.18, -0.06, 1,
			opening_width, -0.06, 1,
			opening_width, 0, -1

		if bOpeningFrame then
			hotspot2 0.02, -0.06, unID: unID = unID + 1
			hotspot2 opening_width-0.02, -0.06, unID: unID = unID + 1

			for i = -1 to 1 step 2
				add2 opening_width*(i < 0), 0
				mul2 i, 1
				poly2_b 7, 1+2+4+32, gs_opening_fill_pen, gs_opening_back_pen,
					0, -0.06, 1,
					0.02, -0.06, 1,
					0.02, -elev_wall_thick-0.02, 1,
					-0.04, -elev_wall_thick-0.02, 1,
					-0.04, -elev_wall_thick, 1,
					0, -elev_wall_thick, 1,
					0, -0.06, -1
				del 2
			next i
		else
			hotspot2 0, -0.06, unID: unID = unID + 1
			hotspot2 opening_width, -0.06, unID: unID = unID + 1
		endif

		opening_in2D_in_car_pos = 0
		if elev_door_style_m = 1 then		! --- Sliding door
			if (gs_detlevel_2D_m <> 5 or gs_detlevel_2D_m <> 4) and (car_width/2-door_width/2+door_pos)<0 then mul2 1, -1
			add2 0.18-(door_width/2)*(opening_in2D_in_car_pos/100), 0
			rect2 0, 0, door_width/2, 0.02
			del 1

			add2 0.18+door_width/2-door_width*(opening_in2D_in_car_pos/100), 0.02
			rect2 0, 0, door_width/2, 0.02
			del 1
			if (gs_detlevel_2D_m <> 5 or gs_detlevel_2D_m <> 4) and (car_width/2-door_width/2+door_pos)<0 then del 1
		endif

		if elev_door_style_m = 2 then		! --- Opening door

			add2 0.18, 0
			rot2 -90*(opening_in2D_in_car_pos/100)
			poly2_b 5, 1+4, 0, 0,
				0, 0, 1,
				door_width/2, 0, 1,
				door_width/2, 0.02, 1,
				0, 0.02, 1,
				0, 0, -1
			del 2

			add2 door_width+0.18, 0
			rot2 90*(opening_in2D_in_car_pos/100)
			add2 -door_width/2, 0
			poly2_b 5, 1+4, 0, 0,
				0, 0, 1,
				door_width/2, 0, 1,
				door_width/2, 0.02, 1,
				0, 0.02, 1,
				0, 0, -1
			del 3
		endif
		del 1

		pen gs_wall_cont_pen
		fill gs_wall_fill_type
	else
		pen gs_wall_cont_pen
		fill gs_wall_fill_type
		line2 -opening_width/2, elev_wall_thick, opening_width/2, elev_wall_thick
		unID = unID + 4
	endif
return


"elev car door":
	if door_style_m and gs_detlevel_2D_m = 2 then
		if door_style_m = 1 then
			add2 -door_width/2, 0
			rect2 0, 0, door_width/2, elevCarDoorThk
			del 1
			add2 0, elevCarDoorThk
			rect2 0, 0, door_width/2, elevCarDoorThk
			del 1
		endif
		if door_style_m = 2 then
			add2 -door_width/2, 0
			rect2 0, 0, door_width/2, elevCarDoorThk
			del 1
			rect2 0, 0, door_width/2, elevCarDoorThk
		endif
		if door_style_m = 3 then
			add2 -door_width/2, 0
			rect2 0, 0, door_width/2, elevCarDoorThk
			line2 0.05, 0, 0.05, elevCarDoorThk
			line2 door_width/2-0.05, 0, door_width/2-0.05, elevCarDoorThk
			line2 0.05, elevCarDoorThk/2, door_width/2-0.05, elevCarDoorThk/2
			del 1
			rect2 0, 0, door_width/2, elevCarDoorThk
			line2 0.05, 0, 0.05, elevCarDoorThk
			line2 door_width/2-0.05, 0, door_width/2-0.05, elevCarDoorThk
			line2 0.05, elevCarDoorThk/2, door_width/2-0.05, elevCarDoorThk/2
		endif
		if door_style_m = 4 then
			add2 -door_width/2, 0
			rect2 0, 0, door_width/2, elevCarDoorThk
			line2 0.03, 0, 0.03, elevCarDoorThk
			line2 door_width/2-0.03, 0, door_width/2-0.03, elevCarDoorThk
			line2 0.03, elevCarDoorThk/2, door_width/2-0.03, elevCarDoorThk/2
			del 1
			rect2 0, 0, door_width/2, elevCarDoorThk
			line2 0.03, 0, 0.03, elevCarDoorThk
			line2 door_width/2-0.03, 0, door_width/2-0.03, elevCarDoorThk
			line2 0.03, elevCarDoorThk/2, door_width/2-0.03, elevCarDoorThk/2
		endif
		if door_style_m = 5 then
			add2 -door_width/2, 0
			rect2 0, 0, door_width/2, elevCarDoorThk
			del 1
			add2 0, elevCarDoorThk/4
			rect2 0, 0, door_width/2, elevCarDoorThk/2
			del 1
		endif
	endif

	if gs_detlevel_2D_m = 5 then
		line2 0, -0.20, 0, 0.20
	endif
return

]]>
</Script_2D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_1D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
EPS = 0.0001

stStory			= `Этаж`
stSplitLevel	= `Разные Уровни`
stSplitStory	= `Полуэтаж`

dim stDoorPosition[4]
	stDoorPosition[1] = `Спереди`
	stDoorPosition[2] = `Второй Проем`
	stDoorPosition[3] = `С Обеих Сторон`
	stDoorPosition[4] = `Нет`

dim stDetail[3]
	stDetail[1] = `Детальный`
	stDetail[2] = `Простой`
	stDetail[3] = `Откл.`

dim stDetail2D[]
	stDetail2D[1] = `Зависит от Масштаба`
	stDetail2D[2] = `1:50`
	stDetail2D[3] = `1:100`
	stDetail2D[4] = `1:200`
	stDetail2D[5] = `Символический 1`
	stDetail2D[6] = `Символический 2`

dim stElevType[2]
	stElevType[1] = `Механический`
	stElevType[2] = `Гидравлический`

dim stDirection[4]
	stDirection[1] = `Нет`
	stDirection[2] = `Сзади`
	stDirection[3] = `Сторона 1`
	stDirection[4] = `Сторона 2`

! dir_second_opening_m
	SECOND_OPENING_NONE		= 1
	SECOND_OPENING_REAR		= 2
	SECOND_OPENING_SIDE1	= 3
	SECOND_OPENING_SIDE2	= 4

dim stPosition[3]
	stPosition[1] = `Обычное`
	stPosition[2] = `Сторона 1`
	stPosition[3] = `Сторона 2`

! cweight_pos_m
	CW_POS_NORMAL	= 1
	CW_POS_SIDE1	= 2
	CW_POS_SIDE2	= 3
	
dim stElevDoorStyle[2]
	stElevDoorStyle[1] = `Раздвижная`
	stElevDoorStyle[2] = `Распашная`

dim stDoorStyle[6]
	stDoorStyle[1] = `Нет`
	stDoorStyle[2] = `Стиль 1`
	stDoorStyle[3] = `Стиль 2`
	stDoorStyle[4] = `Стиль 3`
	stDoorStyle[5] = `Стиль 4`
	stDoorStyle[6] = `Стиль 5`

dim stElevForm[2]
	stElevForm[1] = `Прямоугольная`
	stElevForm[2] = `Сегментированная`

! elevator_form_m
	FORM_RECT		= 1
	FORM_SEGMENTED	= 2

carWallThk		= 0.08
carEPS			= 0.001
cweightEPS		= 0.001
gap_width		= 0.012
minCarWidth		= 0.2
minCarDepth		= 0.2
minCwDepth		= 0.02
minCarWallFlap	= 0.02
frontGap		= 0.04
segmentedFront	= 0.05
openingFromSide	= 0.04
opening_width	= door_width + 0.36
opening_height	= door_height + 0.18

dim doorThickness[5]
	doorThickness[1] = 0.02
	doorThickness[2] = 0.03
	doorThickness[3] = 0.03
	doorThickness[4] = 0.03
	doorThickness[5] = 0.04

dim doorOffset[5]
	doorOffset[1] = 0
	doorOffset[2] = 0.02
	doorOffset[3] = 0.02
	doorOffset[4] = 0.02
	doorOffset[5] = 0.02

elevCarOffset	= 0
elevCarDoorThk	= 0
elevCarGlassThk	= 0.01
if door_style_m > 0 then
	elevCarDoorThk	= doorThickness[door_style_m]
	elevCarOffset	= doorOffset[door_style_m]
endif


if elevator_form_m = FORM_SEGMENTED then bSplitLevelStories = 0

if GLOB_SCRIPT_TYPE = 7 | GLOB_SCRIPT_TYPE = 8 then goto "endMasterScript"

! ==============================================================================
! Story
! ==============================================================================
home_story_index = 0
storyInfo = REQUEST ("Home_story", "", home_story_index, home_story_name)

if storyInfo then
	num_above_story = 0
	num_below_story = 0

	dim t[]
	n = REQUEST ("STORY_INFO", "", numStories, t)

	parameters home_story_index = home_story_index

	for i = 1 to numStories
		story_index = t [4 * (i - 1) + 1]
		if story_index > home_story_index then
			num_above_story = num_above_story + 1
			story_name_above[num_above_story] = t[4 * (i - 1) + 2]
			story_elev_above[num_above_story] = t[4 * (i - 1) + 3]
			story_height_above[num_above_story] = t[4 * (i - 1) + 4]
		endif
		if story_index = home_story_index then
			home_story_name = t[4 * (i - 1) + 2]
			home_story_elev = t[4 * (i - 1) + 3]
			home_story_height = t[4 * (i - 1) + 4]
		endif
		if story_index < home_story_index then
			num_below_story = num_below_story + 1
			story_name_below[num_below_story] = t[4 * (i - 1) + 2]
			story_elev_below[num_below_story] = t[4 * (i - 1) + 3]
			story_height_below[num_below_story] = t[4 * (i - 1) + 4]
		endif
	next i
	parameters num_above_story = num_above_story
	parameters story_name_above = story_name_above
	parameters story_elev_above = story_elev_above
	parameters story_height_above = story_height_above

	parameters home_story_name = home_story_name
	parameters home_story_elev = home_story_elev
	parameters home_story_height = home_story_height

	parameters num_below_story = num_below_story
	parameters story_name_below = story_name_below
	parameters story_elev_below = story_elev_below
	parameters story_height_below = story_height_below
endif


dim connected_stories_name[]
dim connected_stories_elev[]
dim connected_stories_height[]
dim connected_stories_id[]
dim available_connected_stories_boolean[]
dim available_connected_stories_name[]
dim available_connected_stories_id[]

ii = 0
if num_above_story < num_stories_above_HS then
	num_stories_above_HS = num_above_story
	parameters num_stories_above_HS = num_stories_above_HS

	if num_stories_above_HS < num_SL_stories_above_HS then
		num_SL_stories_above_HS = num_stories_above_HS
		parameters num_SL_stories_above_HS = num_SL_stories_above_HS
	endif
endif
if num_above_story then
	values "num_stories_above_HS" range[0, num_above_story]
	values "num_SL_stories_above_HS" range[0, num_stories_above_HS]

	if num_stories_above_HS then
		for i = num_stories_above_HS to 1 step -1
			ii = ii + 1
			if story_name_above[i] = "" then
				storyName = stStory
			else
				storyName = story_name_above[i]
			endif
			connected_stories_name[ii] = str(i+home_story_index,1,0)+". "+storyName			! --- name to normal story
			connected_stories_elev[ii] = story_elev_above[i]-home_story_elev				! --- elevation to normal story
			connected_stories_height[ii] = story_height_above[i]			! --- height to normal story

			if bSplitLevelStories then
				connected_stories_id[ii] = i*2+home_story_index*2			! --- id to normal story if split-level is exist
				available_connected_stories_boolean[ii] = 1

				ii = ii + 1
				if story_name_above[i] = "" then
					storyName = stSplitStory
				else
					storyName = stSplitLevel+" "+story_name_above[i]
				endif
				connected_stories_name[ii] = str(i+home_story_index-1,1,0)+". "+storyName	! --- name to split-level story
				if i > 1 then
					connected_stories_elev[ii] = story_elev_above[i-1]-home_story_elev+dist_SL_story_to_normal_story	! --- elevation to split-level story
					connected_stories_height[ii] = story_height_above[i-1]	! --- height to split-level story
				else
					connected_stories_elev[ii] = dist_SL_story_to_normal_story
					connected_stories_height[ii] = home_story_height
				endif
				connected_stories_id[ii] = i*2+home_story_index*2-1			! --- id to split-level story
				if num_SL_stories_above_HS+eps > i then
					available_connected_stories_boolean[ii] = 1
				else
					available_connected_stories_boolean[ii] = 0
				endif
			else
				connected_stories_id[ii] = i+home_story_index				! --- id to normal story if split-level is non-exist
			endif
		next i
	else
		lock "num_SL_stories_above_HS"
	endif
else
	lock "num_stories_above_HS"
endif

ii = ii + 1
if home_story_name = "" then home_story_name = stStory
connected_stories_name[ii] = str(home_story_index,1,0)+". "+home_story_name
connected_stories_elev[ii] = 0
connected_stories_height[ii] = home_story_height
connected_stories_id[ii] = home_story_index*(1+bSplitLevelStories)
available_connected_stories_boolean[ii] = 1

if num_below_story < num_stories_below_HS then
	num_stories_below_HS = num_below_story
	parameters num_stories_below_HS = num_stories_below_HS

	if num_stories_below_HS < num_SL_stories_below_HS then
		num_SL_stories_below_HS = num_stories_below_HS
		parameters num_SL_stories_below_HS = num_SL_stories_below_HS
	endif
endif
if num_below_story then
	values "num_stories_below_HS" range[0, num_below_story]
	values "num_SL_stories_below_HS" range[0, num_stories_below_HS]

	if num_stories_below_HS then
		for i = 1 to num_stories_below_HS
			ii = ii + 1
			j = num_below_story+1-i
			if bSplitLevelStories then
				if story_name_below[i] = "" then
					storyName = stSplitStory
				else
					storyName = stSplitLevel+" "+story_name_below[i]
				endif
				connected_stories_name[ii] = str(-i+home_story_index,1,0)+". "+storyName		! --- name to split-level story
				connected_stories_elev[ii] = story_elev_below[j]-home_story_elev+dist_SL_story_to_normal_story	! --- elevation to split-level story
				connected_stories_height[ii] = story_height_below[j]			! --- height to split-level story
				connected_stories_id[ii] = -i*2+home_story_index*2+1			! --- id to split-level story
				if num_SL_stories_below_HS+eps > i then
					available_connected_stories_boolean[ii] = 1
				else
					available_connected_stories_boolean[ii] = 0
				endif

				ii = ii + 1
				connected_stories_id[ii] = -i*2+home_story_index*2			! --- id to normal story if split-level is exist
				available_connected_stories_boolean[ii] = 1
			else
				connected_stories_id[ii] = -i+home_story_index				! --- id to normal story if split-level is non-exist
			endif

			if story_name_below[i] = "" then
				storyName = stStory
			else
				storyName = story_name_above[i]
			endif
			connected_stories_name[ii] = str(-i+home_story_index,1,0)+". "+storyName			! --- name to normal story
			connected_stories_elev[ii] = story_elev_below[j]-home_story_elev				! --- elevation to normal story
			connected_stories_height[ii] = story_height_below[j]			! --- height to normal story
		next i
	else
		lock "num_SL_stories_below_HS"
	endif
else
	lock "num_stories_below_HS"
endif
num_connected_stories = ii

bLockedDoorEditedStory = 0
if bSplitLevelStories then
	ii = 0
	for i = 1 to num_connected_stories
		if available_connected_stories_boolean[i] = 1 then
			ii = ii + 1
			available_connected_stories_name[ii] = connected_stories_name[i]
			available_connected_stories_id[ii] = connected_stories_id[i]
		endif
	next i
	num_available_connected_stories = ii

	values "edited_story" available_connected_stories_name
	values "edited_story_m" available_connected_stories_id

	if GLOB_MODPAR_NAME = "edited_story" then
		for i = 1 to num_connected_stories
			if edited_story = connected_stories_name[i] then
				edited_story_m = -i+1+num_stories_above_HS*2+home_story_index*2
				i = num_connected_stories
			endif
		next i
		parameters edited_story_m = edited_story_m
	else
		if edited_story_m < home_story_index*2 - num_stories_below_HS*2 then edited_story_m = home_story_index*2 - num_stories_below_HS*2
		if edited_story_m > home_story_index*2 + num_stories_above_HS*2 then edited_story_m = home_story_index*2 + num_stories_above_HS*2
		edited_story = connected_stories_name[-edited_story_m+1+num_stories_above_HS*2+home_story_index*2]
		parameters edited_story = edited_story
	endif
	editedStoryID = -edited_story_m+1+num_stories_above_HS*2+home_story_index*2
	parameters edited_story_height	= connected_stories_height[editedStoryID]
	parameters edited_story_elev  	= connected_stories_elev[editedStoryID]


	values "car_pos_story" available_connected_stories_name
	values "car_pos_story_m" available_connected_stories_id

	if GLOB_MODPAR_NAME = "car_pos_story" then
		for i = 1 to num_connected_stories
			if car_pos_story = connected_stories_name[i] then
				car_pos_story_m = -i+1+num_stories_above_HS*2+home_story_index*2
				i = num_connected_stories
			endif
		next i
		parameters car_pos_story_m = car_pos_story_m
	else
		if car_pos_story_m < home_story_index*2 - num_stories_below_HS*2 then car_pos_story_m = home_story_index*2 - num_stories_below_HS*2
		if car_pos_story_m > home_story_index*2 + num_stories_above_HS*2 then car_pos_story_m = home_story_index*2 + num_stories_above_HS*2
		car_pos_story = connected_stories_name[-car_pos_story_m+1+num_stories_above_HS*2+home_story_index*2]
		parameters car_pos_story = car_pos_story
	endif


	if abs(INT(connected_stories_id[editedStoryID]/2)-(connected_stories_id[editedStoryID]/2)) < eps then
		if edited_story_door_pos_m = 2 | edited_story_door_pos_m = 3 then
			edited_story_door_pos_m = 1
			parameters edited_story_door_pos_m = edited_story_door_pos_m
		endif
		values "edited_story_door_pos" stDoorPosition[1], stDoorPosition[4]
		values "edited_story_door_pos_m" 1, 4
	else
		if edited_story_door_pos_m = 1 | edited_story_door_pos_m = 3 then
			edited_story_door_pos_m = 2
			parameters edited_story_door_pos_m = edited_story_door_pos_m
		endif
		if dir_second_opening_m = SECOND_OPENING_NONE then
			bLockedDoorEditedStory	= 1
			edited_story_door_pos	= stDoorPosition[4]
			edited_story_door_pos_m	= 4
			lock "edited_story_door_pos", "edited_story_door_pos_m"
		endif
		stDoorPosition[2] = dir_second_opening
		values "edited_story_door_pos" stDoorPosition[2], stDoorPosition[4]
		values "edited_story_door_pos_m" 2, 4
	endif

	if connected_stories_id[1] > -eps then						 ! --- add defaults to empty (0. 1. 2. ...) stories
		for i = 1 to connected_stories_id[1]+1
			if SL_above_story_door_pos[i] = 0 then
				if abs(INT(i/2)-(i/2)) < eps then
					SL_above_story_door_pos[i] = 2
				else
					SL_above_story_door_pos[i] = 1
				endif
				parameters SL_above_story_door_pos[i] = SL_above_story_door_pos[i]
			endif
		next i

		if dir_second_opening_m = SECOND_OPENING_NONE then
			for i = 1 to connected_stories_id[1]+1
				if abs(INT(i/2)-(i/2)) < eps then
					SL_above_story_door_pos[i] = 4
				endif	
			next i
		endif
	endif

	if connected_stories_id[num_connected_stories] < 0 then	 	! --- add defaults to empty  (-1. -2. ...) stories
		for i = 1 to abs(connected_stories_id[num_connected_stories])
			if SL_below_story_door_pos[i] = 0 then
				if abs(INT(i/2)-(i/2)) < eps then
					SL_below_story_door_pos[i] = 1
				else
					SL_below_story_door_pos[i] = 2
				endif
				parameters SL_below_story_door_pos[i] = SL_below_story_door_pos[i]
			endif
		next i

		if dir_second_opening_m = SECOND_OPENING_NONE then
			for i = 1 to abs(connected_stories_id[num_connected_stories])
				if abs(INT(i/2)-(i/2)) > eps then
					SL_below_story_door_pos[i] = 4
				endif
			next i
		endif
	endif

	if GLOB_MODPAR_NAME = "edited_story" or GLOB_MODPAR_NAME = "bSplitLevelStories" then
		if edited_story_m < 0 then
			edited_story_door_pos_m = SL_below_story_door_pos[abs(edited_story_m)]
		else
			edited_story_door_pos_m = SL_above_story_door_pos[edited_story_m+1]
		endif
		parameters edited_story_door_pos_m = edited_story_door_pos_m

		edited_story_door_pos = stDoorPosition[edited_story_door_pos_m]
		parameters edited_story_door_pos = edited_story_door_pos
	else
		if GLOB_MODPAR_NAME = "edited_story_door_pos" then
			for i = 1 to 4
				if edited_story_door_pos = stDoorPosition[i] then
					edited_story_door_pos_m = i
					i = 4
				endif
			next i
			parameters edited_story_door_pos_m = edited_story_door_pos_m
		else
			edited_story_door_pos = stDoorPosition[edited_story_door_pos_m]
			parameters edited_story_door_pos = edited_story_door_pos
		endif

		if edited_story_m < 0 then
			SL_below_story_door_pos[abs(edited_story_m)] = edited_story_door_pos_m
			parameters SL_below_story_door_pos[abs(edited_story_m)] = SL_below_story_door_pos[abs(edited_story_m)]
		else
			SL_above_story_door_pos[edited_story_m+1] = edited_story_door_pos_m
			parameters SL_above_story_door_pos[edited_story_m+1] = SL_above_story_door_pos[edited_story_m+1]
		endif
	endif
else
	values "edited_story" connected_stories_name
	values "edited_story_m" connected_stories_id

	if GLOB_MODPAR_NAME = "edited_story" then
		for i = 1 to num_connected_stories
			if edited_story = connected_stories_name[i] then
				edited_story_m = -i+1+num_stories_above_HS+home_story_index
				i = num_connected_stories
			endif
		next i
		parameters edited_story_m = edited_story_m
	else
		if edited_story_m < home_story_index - num_stories_below_HS then edited_story_m = home_story_index - num_stories_below_HS
		if edited_story_m > home_story_index + num_stories_above_HS then edited_story_m = home_story_index + num_stories_above_HS
		edited_story = connected_stories_name[-edited_story_m+1+num_stories_above_HS+home_story_index]
		parameters edited_story = edited_story
	endif
	editedStoryID = -edited_story_m+1+num_stories_above_HS+ home_story_index
	parameters edited_story_height = connected_stories_height[editedStoryID]
	parameters edited_story_elev  = connected_stories_elev[editedStoryID]


	values "car_pos_story" connected_stories_name
	values "car_pos_story_m" connected_stories_id

	if GLOB_MODPAR_NAME = "car_pos_story" then
		for i = 1 to num_connected_stories
			if car_pos_story = connected_stories_name[i] then
				car_pos_story_m = -i+1+num_stories_above_HS+home_story_index
				i = num_connected_stories
			endif
		next i
		parameters car_pos_story_m = car_pos_story_m
	else
		if car_pos_story_m < home_story_index - num_stories_below_HS then car_pos_story_m = home_story_index - num_stories_below_HS
		if car_pos_story_m > home_story_index + num_stories_above_HS then car_pos_story_m = home_story_index + num_stories_above_HS
		car_pos_story = connected_stories_name[-car_pos_story_m+1+num_stories_above_HS+home_story_index]
		parameters car_pos_story = car_pos_story
	endif


	if elevator_form_m = FORM_RECT then 			! --- Rectangular
		if dir_second_opening_m = 1 then		! None
			if edited_story_door_pos_m = 2 | edited_story_door_pos_m = 3 then
				edited_story_door_pos_m = 1
				parameters edited_story_door_pos_m = edited_story_door_pos_m
			endif
			values "edited_story_door_pos" stDoorPosition[1], stDoorPosition[4]
			values "edited_story_door_pos_m" 1, 4
		else
			values "edited_story_door_pos" stDoorPosition
			values "edited_story_door_pos_m" 1, 2, 3, 4
		endif

		if connected_stories_id[1] > -eps then			 			! --- add defaults to empty (0. 1. 2. ...) stories
			for i = 1 to connected_stories_id[1]+1
				if above_story_door_pos[i] = 0 then
					above_story_door_pos[i] = 1
					parameters above_story_door_pos[i] = above_story_door_pos[i]
				endif
			next i
		endif

		if connected_stories_id[num_connected_stories] < 0 then		! --- add defaults to empty (-1. -2. ...) stories
			for i = 1 to abs(connected_stories_id[num_connected_stories])
				if below_story_door_pos[i] = 0 then
					below_story_door_pos[i] = 1
					parameters below_story_door_pos[i] = below_story_door_pos[i]
				endif
			next i
		endif

		if GLOB_MODPAR_NAME = "edited_story" or GLOB_MODPAR_NAME = "bSplitLevelStories" or GLOB_MODPAR_NAME = "elevator_form" then
			if edited_story_m < 0 then
				edited_story_door_pos_m = below_story_door_pos[abs(edited_story_m)]
			else
				edited_story_door_pos_m = above_story_door_pos[edited_story_m+1]
			endif
			parameters edited_story_door_pos_m = edited_story_door_pos_m

			edited_story_door_pos = stDoorPosition[edited_story_door_pos_m]
			parameters edited_story_door_pos = edited_story_door_pos
		else
			if GLOB_MODPAR_NAME = "edited_story_door_pos" then
				for i = 1 to 4
					if edited_story_door_pos = stDoorPosition[i] then
						edited_story_door_pos_m = i
						i = 4
					endif
				next i
				parameters edited_story_door_pos_m = edited_story_door_pos_m
			else
				edited_story_door_pos = stDoorPosition[edited_story_door_pos_m]
				parameters edited_story_door_pos = edited_story_door_pos
			endif

			if edited_story_m < 0 then
				below_story_door_pos[abs(edited_story_m)] = edited_story_door_pos_m
				parameters below_story_door_pos[abs(edited_story_m)] = below_story_door_pos[abs(edited_story_m)]
			else
				above_story_door_pos[edited_story_m+1] = edited_story_door_pos_m
				parameters above_story_door_pos[edited_story_m+1] = above_story_door_pos[edited_story_m+1]
			endif
		endif
	else 									! --- Segmented
		if edited_story_door_pos_m = 2 | edited_story_door_pos_m = 3 then
			edited_story_door_pos_m = 1
			parameters edited_story_door_pos_m = edited_story_door_pos_m
		endif
		values "edited_story_door_pos" stDoorPosition[1], stDoorPosition[4]
		values "edited_story_door_pos_m" 1, 4

		if connected_stories_id[1] > -eps then								 ! --- add defaults to empty (0. 1. 2. ...) stories
			for i = 1 to connected_stories_id[1]+1
				if S_above_story_door_pos[i] = 0 then
					S_above_story_door_pos[i] = 1
					parameters S_above_story_door_pos[i] = S_above_story_door_pos[i]
				endif
			next i
		endif

		if connected_stories_id[num_connected_stories] < 0 then 			! --- add defaults to empty (-1. -2. ...) stories
			for i = 1 to abs(connected_stories_id[num_connected_stories])
				if S_below_story_door_pos[i] = 0 then
					S_below_story_door_pos[i] = 1
					parameters S_below_story_door_pos[i] = S_below_story_door_pos[i]
				endif
			next i
		endif

		if GLOB_MODPAR_NAME = "edited_story" or GLOB_MODPAR_NAME = "bSplitLevelStories" or GLOB_MODPAR_NAME = "elevator_form" then
			if edited_story_m < 0 then
				edited_story_door_pos_m = S_below_story_door_pos[abs(edited_story_m)]
			else
				edited_story_door_pos_m = S_above_story_door_pos[edited_story_m+1]
			endif
			parameters edited_story_door_pos_m = edited_story_door_pos_m

			edited_story_door_pos = stDoorPosition[edited_story_door_pos_m]
			parameters edited_story_door_pos = edited_story_door_pos
		else
			if GLOB_MODPAR_NAME = "edited_story_door_pos" then
				for i = 1 to 4
					if edited_story_door_pos = stDoorPosition[i] then
						edited_story_door_pos_m = i
						i = 4
					endif
				next i
				parameters edited_story_door_pos_m = edited_story_door_pos_m
			else
				edited_story_door_pos = stDoorPosition[edited_story_door_pos_m]
				parameters edited_story_door_pos = edited_story_door_pos
			endif

			if edited_story_m < 0 then
				S_below_story_door_pos[abs(edited_story_m)] = edited_story_door_pos_m
				parameters S_below_story_door_pos[abs(edited_story_m)] = S_below_story_door_pos[abs(edited_story_m)]
			else
				S_above_story_door_pos[edited_story_m+1] = edited_story_door_pos_m
				parameters S_above_story_door_pos[edited_story_m+1] = S_above_story_door_pos[edited_story_m+1]
			endif
		endif
	endif
endif


! ==============================================================================
! Shaft Sizes
! ==============================================================================
if elevator_form_m = FORM_RECT then
	totalShaftWidth = shaft_inner_width + elev_shaft_thick*2
	totalShaftDepth = shaft_inner_depth + elev_shaft_thick*2
	car_width		= car_inner_width + 2*carWallThk
	car_depth		= car_inner_depth + 2*carWallThk
	bMechanic		= (elevator_type_m = 1)

	if dir_second_opening_m = SECOND_OPENING_SIDE1 then
		carSpaceSide1	= frontGap
	else
		carSpaceSide1	= (shaft_inner_width - car_width - frontGap*(dir_second_opening_m = SECOND_OPENING_SIDE2)- cweight_depth*(cweight_pos_m <> CW_POS_NORMAL) * bMechanic) /\
						  (1+(dir_second_opening_m <> SECOND_OPENING_SIDE2)+(cweight_pos_m <> CW_POS_NORMAL) * bMechanic)
	endif
	carSide1 = carSpaceSide1 *  (1+(cweight_pos_m = CW_POS_SIDE1) * bMechanic) + cweight_depth*(cweight_pos_m = CW_POS_SIDE1) * bMechanic

	if dir_second_opening_m = SECOND_OPENING_SIDE2 then
		carSpaceSide2	= frontGap
	else
		carSpaceSide2	= (shaft_inner_width - car_width - frontGap*(dir_second_opening_m = SECOND_OPENING_SIDE1) - cweight_depth*(cweight_pos_m <> CW_POS_NORMAL) * bMechanic) /\
						  (1+(dir_second_opening_m <> SECOND_OPENING_SIDE1)+(cweight_pos_m <> CW_POS_NORMAL) * bMechanic)
	endif
	carSide2 = carSpaceSide2 *  (1+(cweight_pos_m = CW_POS_SIDE2) * bMechanic) + cweight_depth*(cweight_pos_m = CW_POS_SIDE2) * bMechanic

	carSpaceFront = frontGap

	if dir_second_opening_m = SECOND_OPENING_REAR then
		carSpaceRear		= frontGap
	else
		carSpaceRear		= (shaft_inner_depth - car_depth - cweight_depth*(cweight_pos_m = CW_POS_NORMAL) * bMechanic - carSpaceFront) / (1+(cweight_pos_m = CW_POS_NORMAL) * bMechanic)
	endif
endif

! ==============================================================================
"endMasterScript":
! ==============================================================================



]]>
</Script_1D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_PR SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_PR>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_UI SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
! =============================================================================
! Localization
! =============================================================================

dim stGeneralUI[6]
	stGeneralUI[1]		= `Форма`
	stGeneralUI[2]		= `Количество Сегментов`
	stGeneralUI[3]		= `Тип`
	stGeneralUI[4]		= `Макс. Высота Технического Этажа`
	stGeneralUI[5]		= `Направление Второго Проема`
	stGeneralUI[6]		= `Расположение Противовеса`

dim stDimensionUI[19]
	stDimensionUI[1]	= `Показать Шахту Лифта`
	stDimensionUI[2]	= `Показать Стену Лифта`
	stDimensionUI[3]	= `Толщина Стены Лифта`
	stDimensionUI[4]	= `Наружное Покрытие Стены Лифта`
	stDimensionUI[5]	= `Наружная Поверхность Стены Лифта`
	stDimensionUI[6]	= `Покрытие Торцов Стены Лифта`
	stDimensionUI[7]	= `Внутренняя Ширина Кабины`
	stDimensionUI[8]	= `Внутренняя Глубина Кабины`
	stDimensionUI[9]	= `Наружная Ширина Шахты Лифта`
	stDimensionUI[10]	= `Наружная Глубина Шахты Лифта`
	stDimensionUI[11]	= `Внутренняя Ширина Шахты Лифта`
	stDimensionUI[12]	= `Внутренняя Глубина Шахты Лифта`
	stDimensionUI[13]	= `Ширина Шахты Лифта`
	stDimensionUI[14]	= `Глубина Шахты Лифта`
	stDimensionUI[15]	= `Зазор Между Стеной и Кабиной`
	stDimensionUI[16]	= `Ширина Противовеса`
	stDimensionUI[17]	= `Толщина Противовеса`
	stDimensionUI[18]	= `Толщина Стены Шахты Лифта`
	stDimensionUI[19]	= `Выступы Стены`

dim stCarUI[9]
	stCarUI[1]	= `Расположение Кабины`
	stCarUI[2]	= `Высота Кабины`
	stCarUI[3]	= `Стиль Двери Кабины`
	stCarUI[4]	= `Ширина Проема`
	stCarUI[5]	= `Ширина`
	stCarUI[6]	= `Высота`
	stCarUI[7]	= `Смещение Оси от Центра`
	stCarUI[8]	= `Дверь`
	stCarUI[9]	= `Вторая Дверь`

dim stSlabUI[6]
	stSlabUI[1]	= `Верхняя Плита`
	stSlabUI[2]	= `Верхняя Секция`
	stSlabUI[3]	= `Приямок`
	stSlabUI[4]	= `Нижняя Плита`
	stSlabUI[5]	= `Толщина Верхней Плиты`
	stSlabUI[6]	= `Толщина Нижней Плиты`

dim stStoryUI[7]
	stStoryUI[1]	= `Полуэтажи`
	stStoryUI[2]	= `Количество Этажей Выше Собственного`
	stStoryUI[3]	= `Нормальные Этажи`
	stStoryUI[4]	= `Полуэтажи`
	stStoryUI[5]	= `Количество Этажей Ниже Собственного`
	stStoryUI[6]	= `Собственный Этаж`
	stStoryUI[7]	= `Смещение Полуэтажей Относительно Нормальных Этажей`

dim stShaftUI[7]
	stShaftUI[1]	= `Стиль Двери Шахты`
	stShaftUI[2]	= `Обрамление Проема Шахты`
	stShaftUI[3]	= `Панель Управления`
	stShaftUI[4]	= `Расположение Двери Шахты`
	stShaftUI[5]	= `Имя Редактируемого Этажа`
	stShaftUI[6]	= `Высота Редактируемого Этажа`
	stShaftUI[7]	= `Расположение Двери Редактируемого Этажа`


! =============================================================================
! Setting the Tabpages
! =============================================================================
ui_dialog `Параметры Лифта`
ui_current_page gs_ui_current_page



dim gs_idUI[]

i = 1
gs_idUI[i] = 100	:	i=i+1	! General Settings
gs_idUI[i] = 200	:	i=i+1	! Dimensions
gs_idUI[i] = 300	:	i=i+1	! Elevator Car
if (bShowElevatorShaft & elevator_form_m = FORM_RECT) | (bShowElevatorWall & elevator_form_m = FORM_SEGMENTED) then
	gs_idUI[i] = 400	:	i=i+1	! Slabs and Overruns
	gs_idUI[i] = 500	:	i=i+1	! Story Settings
	gs_idUI[i] = 600	:	i=i+1	! Elevator Shaft
endif
gs_idUI[i] = 700	:	i=i+1	! Representation and Surfaces
gs_idUI[i] = 800	:	i=i+1	! Parameters for Listing

iPageIDRoot 		=-1
iPageIDGeneral		= 0
iPageIDDimensions	= 0
iPageIDCar			= 0
iPageIDSlabs		= 0
iPageIDStory		= 0
iPageIDShaft		= 0
iPageIDRepAndSurface = 0
iPageIDListing		= 0


dim tabIDs[]
dim tabNames[]
dim tabIcons[]

actIdx = 1
for i=1 to vardim1(gs_idUI)
	if gs_idUI[i] = 100 then							! General Settings
		iPageIDGeneral		= actIdx
		actIdx				= actIdx + 1
	endif

	if gs_idUI[i] = 200 then							! Dimensions
		iPageIDDimensions	= actIdx
		actIdx				= actIdx + 1
	endif

	if gs_idUI[i] = 300 then							! Elevator Car
		iPageIDCar			= actIdx
		actIdx				= actIdx + 1
	endif

	if gs_idUI[i] = 400 then							! Slabs and Overruns
		iPageIDSlabs			= actIdx
		actIdx				= actIdx + 1
	endif

	if gs_idUI[i] = 500 then							! Story Settings
		iPageIDStory			= actIdx
		actIdx				= actIdx + 1
	endif

	if gs_idUI[i] = 600 then							! Elevator Shaft
		iPageIDShaft			= actIdx
		actIdx				= actIdx + 1
	endif

	if gs_idUI[i] = 700 then							! Representation and Surfaces
		iPageIDRepAndSurface	= actIdx
		actIdx				= actIdx + 1
	endif

	if gs_idUI[i] = 800 then							! Parameters for Listing
		iPageIDListing		= actIdx
		actIdx				= actIdx + 1
	endif
next i

! =============================================================================
! General Variables
! =============================================================================

yInfield	= 19
yOutField	= 18
xSide		= 10
pageStartY 	= 5
yStart		= pageStartY + 3
xInfield	= 60
xHalfLevel	= 222
xEndLevel	= 444


! ==============================================================================
!UI_PAGES
! ==============================================================================

if iPageIDGeneral > 0 then
	UI_PAGE iPageIDGeneral, iPageIDRoot, `Общие Параметры`, "uiTab_Style_flat(1)"
		gosub "generalPage"
endif

if iPageIDDimensions> 0 then
	UI_PAGE iPageIDDimensions, iPageIDRoot, `Размеры`, "uiTab_Dimension_flat(1)"
		gosub "dimPage"
endif

if iPageIDCar> 0 then
	UI_PAGE iPageIDCar, iPageIDRoot, `Кабина Лифта`, "uiTab_ElevatorCar_flat(1)"
		gosub "carPage"
endif

if iPageIDSlabs> 0 then
	UI_PAGE iPageIDSlabs, iPageIDRoot, `Секции и Плиты`, "uiTab_ElevatorSlabs_flat(1)"
		gosub "slabsPage"
endif

if iPageIDStory> 0 then
	UI_PAGE iPageIDStory, iPageIDRoot, `Параметры Этажей`, "uiTab_ElevatorStory_flat(1)"
		gosub "storyPage"
endif

if iPageIDShaft> 0 then
	UI_PAGE iPageIDShaft, iPageIDRoot, `Шахта Лифта`, "uiTab_ElevatorShaft_flat(1)"
		gosub "shaftPage"
endif

if iPageIDRepAndSurface> 0 then
	UI_PAGE iPageIDRepAndSurface, iPageIDRoot, `Отображение и Покрытия`, "uiTab_2DRepr_flat(1)"
		gosub "repAndSurfacePage"
endif

if iPageIDListing> 0 then
	UI_PAGE iPageIDListing, iPageIDRoot, `Параметры Спецификаций`, "uiTab_Descriptions_flat(1)"
		gosub "listingPage"
endif


! ==============================================================================
end
! ==============================================================================


! ==============================================================================
!Subroutines
! ==============================================================================

! ------------------------------------------------------------------------------
"generalPage":
! ------------------------------------------------------------------------------

	y	= yStart
	cx	= 105
	cy	= 77
	x1	= 0
	x2	= 109
	x3	= 275
	dy	= 29

	ui_style 0, 1
	ui_outfield stGeneralUI[1],	x1, y, x2-x1-2, yOutField	! Form
	ui_style 0, 0

	ui_infield{3} "elevator_form_m", x2-1, y, cx+2, cy+2,
		2, 1,			!elevator_form.png
		2, 1,
		98, 70, 98, 70,
		1, stElevForm[1], 1,
		2, stElevForm[2], 2
	iFlag = 4 * (elevator_form_m = FORM_SEGMENTED)
	y = y + cy + 12

	ui_outfield stGeneralUI[2],	x1, y, xHalfLevel-xInfield-xSide-x1-1, yOutField, 4 * (elevator_form_m = 1)	! Number of Segments
	ui_infield "segment_num", xHalfLevel-xInfield-xSide+2, y-2, xInfield, yInField 
	y = y + dy

	ui_outfield stGeneralUI[3],	x1, y, x2-x1-1, yOutField, iFlag	! Type
	ui_infield{3} "elevator_type_m", x2, y-2, cx, yInField,
		8, "",
		0, 0,
		0, 0, 0, 0,
		0, stElevType[1], 1,
		0, stElevType[2], 2
	y = y + dy

	ui_style 0, 1
	ui_outfield stGeneralUI[4],	x1, y, xHalfLevel-x1-xSide, yOutField	! Maximum Height of Structural Floor
	ui_style 0, 0
	y = y + yOutField + 1
	ui_infield{3} "gs_max_StrFl_height", x2, y, cx, yInField

	! ----------------------------------------------------------
	ui_separator xHalfLevel+1, pageStartY, xHalfLevel+1, 266
	! ----------------------------------------------------------

	y	= yStart
	ui_style 0, 1
	ui_outfield stGeneralUI[5],	xHalfLevel + xSide, y, xEndLevel - xHalfLevel - xSide, yOutField, iFlag	! Direction of Second Opening
	ui_style 0, 0
	y = y + yOutField + 1

	if elevator_form_m = FORM_SEGMENTED then
		ui_infield{3} "dir_second_opening_m", x3, y, cx+2, cy+2,
			2, "",
			0, 0,
			98, 70, 98, 70,
			0, "", 1,
			0, "", 2,
			0, "", 3,
			0, "", 4
	else
		ui_infield{3} "dir_second_opening_m", x3, y, cx+2, cy+2,
			2, 2,			!elevator_second_opening.png
			4, 1,
			98, 70, 98, 70,
			1, stDirection[1], 1,
			2, stDirection[2], 2,
			3, stDirection[3], 3,
			4, stDirection[4], 4
	endif
	y = y + cy + 12

	ui_style 0,1
	ui_outfield stGeneralUI[6],	xHalfLevel + xSide, y, xEndLevel - xHalfLevel - xSide, yOutField, iFlag	! Counterweight Position
	ui_style 0,0
	y = y + yOutField + 1

	sIdx = (dir_second_opening_m-1) * 3
	if elevator_form_m = FORM_SEGMENTED then
		ui_infield{3} "cweight_pos", x3, y, cx+2, cy+2,
			2, "",
			0, 0,
			98, 70, 98, 70,
			0, "", stPosition[1],
			0, "", stPosition[2],
			0, "", stPosition[3]
	else
		ui_infield{3} "cweight_pos_m", x3, y, cx+2, cy+2,
			2, 3,			!elevator_counterweight.png
			12, 4,
			98, 70, 98, 70,
			sIdx+1, stPosition[1], 1,
			sIdx+2, stPosition[2], 2,
			sIdx+3, stPosition[3], 3
	endif

return

! ------------------------------------------------------------------------------
"dimPage":
! ------------------------------------------------------------------------------

	y			= yStart
	xInfield	= 70

	ui_style 0, 0

	if elevator_form_m = FORM_SEGMENTED then

		ui_infield{3} "bShowElevatorWall", 0, y-2, xHalfLevel, yInfield,
			7, "",
			0, 0,
			0, 0, 0, 0,
			0, stDimensionUI[2], 0,
			0, stDimensionUI[2], 1

		sx	= 130
		sy	= 90

		ui_style 1,0
		if bShowElevatorWall then
			ui_pict 10, sx, sy, 183, 133, 1			! dim_segmented.png
			ui_infield "elev_wall_thick", sx+188, sy + 105, xInfield, yInfield	ui_tooltip stDimensionUI[3] 
			ui_infield "elev_wall_overhang", sx+143, sy + 122 + 16, xInfield, yInfield	ui_tooltip stDimensionUI[19]
		else
			ui_pict 11, sx+11, sy, 172, 117, 1			! dim_segmented_wo_wall.png
		endif
		ui_infield "car_width", sx+60, sy + 122 + 16*bShowElevatorWall, xInfield, yInfield	ui_tooltip stDimensionUI[7] 
		ui_infield "car_depth", sx+188, sy + 40, xInfield, yInfield	ui_tooltip stDimensionUI[8] 

	else

		ui_infield{3} "bShowElevatorShaft", 0, y-2, xHalfLevel, yInfield,
			7, "",
			0, 0,
			0, 0, 0, 0,
			0, stDimensionUI[1], 0,
			0, stDimensionUI[1], 1

		ui_style 1,0



		if elevator_type_m = 1 then

			sx	= 130
			sy	= 86
			ox	= 13
			oy	= 13

			if cweight_pos_m = CW_POS_NORMAL then
	
				if dir_second_opening_m = SECOND_OPENING_NONE then
					if bShowElevatorShaft then
						ui_pict 12, sx, sy, 194, 153, 1				! dim_none_normal.png					
					else
						ui_pict 13, sx+ox, sy+oy, 168, 127, 1		! dim_none_normal_wo_shaft.png
					endif
				endif
	
				if dir_second_opening_m = SECOND_OPENING_SIDE1 then
					if bShowElevatorShaft then
						ui_pict 14, sx, sy, 194, 153, 1				! dim_side_1_normal.png					
					else
						ui_pict 15, sx+ox, sy+oy, 168, 127, 1		! dim_side_1_normal_wo_shaft.png
					endif
				endif
	
				if dir_second_opening_m = SECOND_OPENING_SIDE2 then
					if bShowElevatorShaft then
						ui_pict 16, sx, sy, 194, 153, 1				! dim_side_2_normal.png
					else
						ui_pict 17, sx+ox, sy+oy, 168, 127, 1		! dim_side_2_normal_wo_shaft.png
					endif
				endif
	
				if bShowElevatorShaft then
					ui_infield "elev_shaft_thick", sx+167, sy + 157, xInfield, yInfield	ui_tooltip stDimensionUI[18]
				endif
		
				ui_infield "shaft_inner_width", sx+70, sy - 8 - bShowElevatorShaft*14, xInfield, yInfield	ui_tooltip stDimensionUI[11]
				ui_infield "shaft_inner_depth", sx-60-bShowElevatorShaft*14, sy + 72, xInfield, yInfield	ui_tooltip stDimensionUI[12]
				ui_infield "car_inner_width", sx+70, sy + 157 - not(bShowElevatorShaft)*13, xInfield, yInfield	ui_tooltip stDimensionUI[7]
				ui_infield "car_inner_depth", sx+185+bShowElevatorShaft*14, sy + 79, xInfield, yInfield	ui_tooltip stDimensionUI[8]
				ui_infield "cweight_width", sx+185+bShowElevatorShaft*14, sy + 3 + not(bShowElevatorShaft)*12, xInfield, yInfield	ui_tooltip stDimensionUI[16]
				ui_infield "cweight_depth", sx+185+bShowElevatorShaft*14, sy + 34, xInfield, yInfield	ui_tooltip stDimensionUI[17]
	
			endif
	
			if cweight_pos_m = CW_POS_SIDE1 then
	
				if dir_second_opening_m = SECOND_OPENING_NONE then
					if bShowElevatorShaft then
						ui_pict 18, sx-10, sy+10, 203, 144, 1				! dim_none_side_1.png
					else
						ui_pict 19, sx+ox-10, sy+oy+10, 176, 118, 1			! dim_none_side_1_wo_shaft.png
					endif
				endif
	
				if dir_second_opening_m = SECOND_OPENING_REAR then
					if bShowElevatorShaft then
						ui_pict 20, sx-10, sy+10, 203, 144, 1				! dim_rear_side_1.png
					else
						ui_pict 21, sx+ox-10, sy+oy+10, 177, 118, 1			! dim_rear_side_1_wo_shaft.png
					endif
				endif
	
				if dir_second_opening_m = SECOND_OPENING_SIDE2 then
					if bShowElevatorShaft then
						ui_pict 22, sx-10, sy+10, 203, 144, 1				! dim_side_2_side_1.png
					else
						ui_pict 23, sx+ox-10, sy+oy+10, 177, 118, 1			! dim_side_2_side_1_wo_shaft.png
					endif
				endif
	
				if bShowElevatorShaft then
					ui_infield "elev_shaft_thick", sx+167, sy + 157, xInfield, yInfield	ui_tooltip stDimensionUI[18]
				endif
	
				ui_infield "shaft_inner_width", sx+70, sy + 2 - bShowElevatorShaft*14, xInfield, yInfield	ui_tooltip stDimensionUI[11]
				ui_infield "shaft_inner_depth", sx-70-bShowElevatorShaft*14, sy + 72, xInfield, yInfield	ui_tooltip stDimensionUI[12]
				ui_infield "car_inner_width", sx+70, sy + 157 - not(bShowElevatorShaft)*13, xInfield, yInfield	ui_tooltip stDimensionUI[7]
				ui_infield "car_inner_depth", sx+185+bShowElevatorShaft*14, sy + 79, xInfield, yInfield	ui_tooltip stDimensionUI[8]
				ui_infield "cweight_width", sx-40+14+14*not(bShowElevatorShaft), sy + 2 - bShowElevatorShaft*14, xInfield, yInfield	ui_tooltip stDimensionUI[16]
				ui_infield "cweight_depth", sx-30+14, sy + 157 - not(bShowElevatorShaft)*13, xInfield, yInfield	ui_tooltip stDimensionUI[17]
	
			endif
	
			if cweight_pos_m = CW_POS_SIDE2 then
	
				if dir_second_opening_m = SECOND_OPENING_NONE then
					if bShowElevatorShaft then
						ui_pict 24, sx-10, sy+10, 203, 144, 1				! dim_none_side_2.png
					else
						ui_pict 25, sx+ox-10, sy+oy+10, 177, 118, 1			! dim_none_side_2_wo_shaft.png
					endif
				endif
	
				if dir_second_opening_m = SECOND_OPENING_REAR then
					if bShowElevatorShaft then
						ui_pict 26, sx-10, sy+10, 203, 144, 1				! dim_rear_side_2.png
					else
						ui_pict 27, sx+ox-10, sy+oy+10, 177, 118, 1			! dim_rear_side_2_wo_shaft.png
					endif
				endif
	
				if dir_second_opening_m = SECOND_OPENING_SIDE1 then
					if bShowElevatorShaft then
						ui_pict 28, sx-10, sy+10, 203, 144, 1				! dim_side_1_side_2.png
					else
						ui_pict 29, sx+ox-10, sy+oy+10, 177, 118, 1			! dim_side_1_side_2_wo_shaft.png
					endif
				endif
	
				if bShowElevatorShaft then
					ui_infield "elev_shaft_thick", sx-36, sy + 157, xInfield, yInfield	ui_tooltip stDimensionUI[18]
				endif
	
				ui_infield "shaft_inner_width", sx+60, sy + 2 - bShowElevatorShaft*14, xInfield, yInfield	ui_tooltip stDimensionUI[11]
				ui_infield "shaft_inner_depth", sx-70-bShowElevatorShaft*14, sy + 72, xInfield, yInfield	ui_tooltip stDimensionUI[12]
				ui_infield "car_inner_width", sx+60, sy + 157 - not(bShowElevatorShaft)*13, xInfield, yInfield	ui_tooltip stDimensionUI[7]
				ui_infield "car_inner_depth", sx+185+bShowElevatorShaft*14, sy + 79, xInfield, yInfield	ui_tooltip stDimensionUI[8]
				ui_infield "cweight_width", sx+144+14*bShowElevatorShaft, sy + 2 - bShowElevatorShaft*14, xInfield, yInfield	ui_tooltip stDimensionUI[16]
				ui_infield "cweight_depth", sx+132+14, sy + 157 - not(bShowElevatorShaft)*13, xInfield, yInfield	ui_tooltip stDimensionUI[17]
	
			endif
		else
			! ----------------------- Hydraulic --------------------------------

			sx	= 130
			sy	= 86
			ox	= 13
			oy	= 13


			if dir_second_opening_m = SECOND_OPENING_NONE then
				if bShowElevatorShaft then
					ui_pict 61, sx, sy, 194, 153, 1				! dim_none_hydraulic.png
				else
					ui_pict 62, sx+ox, sy+oy, 168, 127, 1			! dim_none_hydraulic_wo_shaft.png
				endif
			endif

			if dir_second_opening_m = SECOND_OPENING_REAR then
				if bShowElevatorShaft then
					ui_pict 63, sx-10, sy+10, 203, 144, 1				! dim_rear_hydraulic.png
				else
					ui_pict 64, sx+ox-10, sy+oy+10, 177, 118, 1			! dim_rear_hydraulic_wo_shaft.png
				endif
			endif

			if dir_second_opening_m = SECOND_OPENING_SIDE1 then
				if bShowElevatorShaft then
					ui_pict 65, sx, sy, 194, 153, 1				! dim_side1_hydraulic.png
				else
					ui_pict 66, sx+ox, sy+oy, 168, 127, 1			! dim_side1_hydraulic_wo_shaft.png
				endif
			endif

			if dir_second_opening_m = SECOND_OPENING_SIDE2 then
				if bShowElevatorShaft then
					ui_pict 67, sx, sy, 194, 153, 1				! dim_side2_hydraulic.png
				else
					ui_pict 68, sx+ox, sy+oy, 168, 127, 1			! dim_side2_hydraulic_wo_shaft.png
				endif
			endif

			if bShowElevatorShaft then
				ui_infield "elev_shaft_thick", sx-36+204, sy + 157, xInfield, yInfield	ui_tooltip stDimensionUI[18]
			endif

			ui_infield "shaft_inner_width", sx+70, sy - 8 - bShowElevatorShaft*14 + (dir_second_opening_m = SECOND_OPENING_REAR)*10, xInfield, yInfield	ui_tooltip stDimensionUI[11]
			ui_infield "shaft_inner_depth", sx-60-bShowElevatorShaft*14-(dir_second_opening_m = SECOND_OPENING_REAR)*10, sy + 72, xInfield, yInfield	ui_tooltip stDimensionUI[12]
			ui_infield "car_inner_width", sx+70, sy + 157 - not(bShowElevatorShaft)*13, xInfield, yInfield	ui_tooltip stDimensionUI[7]
			ui_infield "car_inner_depth", sx+185+bShowElevatorShaft*14, sy + 79, xInfield, yInfield	ui_tooltip stDimensionUI[8]

		endif
	endif

return

! ------------------------------------------------------------------------------
"carPage":
! ------------------------------------------------------------------------------

	y			= yStart
	cx			= 140
	cy			= 50
	x1			= 0
	x2			= 154
	x3			= 253
	x4			= 374
	dy			= 25
	xInfield	= 70

	ui_style 0, 0

	ui_outfield stCarUI[1],	x1, y, x2-x1-1, yOutField	! Car Position
	ui_infield "car_pos_story", x2, y-2, cx, yInField

	y = y + dy

	ui_outfield stCarUI[2],	x1, y, x2-x1-1, yOutField	! Car Height
	ui_style 1,0
	ui_infield "car_height", x2, y-2, xInfield, yInField
	ui_style 0,0
	y = y + dy

	ui_outfield stCarUI[3],	x1, y, x2-x1-2, yOutField	! Car Door Style
	ui_infield{3} "door_style_m", x2-1, y, cx+2, cy+2,
			2, 4,		!elevator_door.png
			6, 6,
			130, 38, 130, 38,
			1, stDoorStyle[1], 0,
			2, stDoorStyle[2], 1,
			3, stDoorStyle[3], 2,
			4, stDoorStyle[4], 3,
			5, stDoorStyle[5], 4,
			6, stDoorStyle[6], 5
	y = y + cy + 12

	! ----------------------------------------------------------
	ui_separator 0, y, 444, y
	! ----------------------------------------------------------
	y = y + 8

	ui_style 0,1
	ui_outfield stCarUI[4],	x1, y, x2-x1-1, yOutField	! Clear Opening
	y = y + dy
	ui_style 0,0

	ui_outfield stCarUI[5],	x1, y, x2-x1-1, yOutField	! Width
	ui_style 1,0
	ui_infield "door_width", x2, y-2, xInfield, yInField
	ui_style 0,0

	ui_outfield stCarUI[6],	x3, y, x4-x3-1, yOutField	! Width
	ui_style 1,0
	ui_infield "door_height", x4, y-2, xInfield, yInField
	ui_style 0,0
	y = y + dy

	ui_style 0,1
	ui_outfield stCarUI[7],	x1, y, x2-x1-1, yOutField	! Axis from Center
	y = y + dy
	ui_style 0,0

	ui_outfield stCarUI[8],	x1, y, x2-x1-1, yOutField	! Door
	ui_style 1,0
	ui_infield "door_pos", x2, y-2, xInfield, yInField
	ui_style 0,0

	iFlag = 4* (dir_second_opening_m = SECOND_OPENING_NONE | elevator_form_m = FORM_SEGMENTED)
	ui_outfield stCarUI[9],	x3, y, x4-x3-1, yOutField, iFlag	! Second Door
	ui_style 1,0
	ui_infield "second_door_pos", x4, y-2, xInfield, yInField
	ui_style 0,0
	y = y + dy

return

! ------------------------------------------------------------------------------
"slabsPage":
! ------------------------------------------------------------------------------

	y			= yStart
	x1			= 0
	x2			= 170
	x3			= 206
	dy			= 25
	xInfield	= 70

	ui_style 0, 0

	ui_infield{3} "bTopSlab", x1, y-2, x2-x1, yOutfield,
		7, "",
		0, 0,
		0, 0, 0, 0,
		0, stSlabUI[1], 0,
		0, stSlabUI[1], 1
	y = y + dy

	ui_infield{3} "bPenthouse", x1, y-2, x2-x1, yOutfield,
		7, "",
		0, 0,
		0, 0, 0, 0,
		0, stSlabUI[2], 0,
		0, stSlabUI[2], 1
	y = y + dy

	ui_infield{3} "bPith", x1, y-2, x2-x1, yOutfield,
		7, "",
		0, 0,
		0, 0, 0, 0,
		0, stSlabUI[3], 0,
		0, stSlabUI[3], 1
	y = y + dy

	ui_infield{3} "bPitSlab", x1, y-2, x2-x1, yOutfield,
		7, "",
		0, 0,
		0, 0, 0, 0,
		0, stSlabUI[4], 0,
		0, stSlabUI[4], 1
	y = y + dy
	

	cx = 280
	cy = 81

	ui_style 1,0
	! --- Over ---
	if bTopSlab & bPenthouse then
		ui_pict 30, cx, cy-44, 104, 44, 1		!over_o_full.png
		ui_infield "penthouse_height", x3, cy - 29, xInfield, yInField ui_tooltip stSlabUI[2]
		ui_infield "top_slab_thick", x3, cy - 48, xInfield, yInField ui_tooltip stSlabUI[5]
	else
		if bTopSlab then
			ui_pict 31, cx, cy-15, 104, 15, 1		!over_o_slab.png
			ui_infield "top_slab_thick", x3, cy - 21, xInfield, yInField ui_tooltip stSlabUI[5]
		else
			if bPenthouse then
				ui_pict 32, cx, cy-38, 104, 38, 1		!over_o_no_slab.png
				ui_infield "penthouse_height", x3, cy - 33, xInfield, yInField ui_tooltip stSlabUI[2]
			else
				ui_pict 33, cx+11, cy-9, 93, 9		!over_o_none.png
			endif
		endif
	endif

	! --- Base ---
	ui_pict 34, cx+11, cy, 93, 114, 1		!over_base.png

	! --- Under ---
	if bPitSlab & bPith then
		ui_pict 35, cx, cy+114, 104, 64, 1		!over_u_full.png
		ui_infield "pit_depth", x3, cy + 146, xInfield, yInField ui_tooltip stSlabUI[3]
		ui_infield "pit_slab_thick", x3, cy + 165, xInfield, yInField ui_tooltip stSlabUI[4]
	else
		if bPitSlab then
			ui_pict 36, cx, cy+114, 104, 38, 1		!over_u_slab.png
			ui_infield "pit_slab_thick", x3, cy + 139, xInfield, yInField ui_tooltip stSlabUI[4]
		else
			if bPith then
				ui_pict 37, cx, cy+114, 104, 58, 1		!over_u_no_slab.png
				ui_infield "pit_depth", x3, cy + 148, xInfield, yInField ui_tooltip stSlabUI[3]
			else
				ui_pict 38, cx+11, cy+114, 93, 30, 1		!over_u_none.png
			endif
		endif
	endif

return

! ------------------------------------------------------------------------------
"storyPage":
! ------------------------------------------------------------------------------

	y			= yStart
	x1			= 0
	x2			= 171
	x3			= 242
	dy			= 25
	xInfield	= 70

	ui_style 0, 0

	ui_infield{3} "bSplitLevelStories", x1, y-2, x3-x1-1, yOutfield,
		7, "",
		0, 0,
		0, 0, 0, 0,
		0, stStoryUI[1], 0,
		0, stStoryUI[1], 1
	y = y + dy

	ui_style 0,1
	ui_outfield stStoryUI[2], x1, y, x3-x1-1, yOutfield		!Number of Stories above Home Story
	ui_style 0,0
	y = y + dy

	ui_outfield stStoryUI[3], x1, y, x2-x1-1, yOutfield, 4*not(num_above_story)		!Normal Stories
	ui_infield "num_stories_above_HS", x2, y-3, xHalfLevel-x2, yInfield
	y = y + dy

	ui_outfield stStoryUI[4], x1, y, x2-x1-1, yOutfield, 4*(not(bSplitLevelStories) | (num_above_story & not(num_stories_above_HS)))		!Split-Level Stories
	ui_infield "num_SL_stories_above_HS", x2, y-3, xHalfLevel-x2, yInfield
	y = y + dy

	ui_style 0,1
	ui_outfield stStoryUI[5], x1, y, x3-x1-1, yOutfield		!Number of Stories below Home Story`
	ui_style 0,0
	y = y + dy

	ui_outfield stStoryUI[3], x1, y, x2-x1-1, yOutfield, 4*not(num_below_story)		!Normal Stories
	ui_infield "num_stories_below_HS", x2, y-3, xHalfLevel-x2, yInfield
	y = y + dy

	ui_outfield stStoryUI[4], x1, y, x2-x1-1, yOutfield, 4*(not(bSplitLevelStories)	| (num_below_story & not(num_stories_below_HS)))		!Split-Level Stories
	ui_infield "num_SL_stories_below_HS", x2, y-3, xHalfLevel-x2, yInfield
	y = y + dy


	cx = 327
	cy = 81

	if bSplitLevelStories then
		! --- Over ---
		if bTopSlab & bPenthouse then
			ui_pict 40, cx, cy-44, 93, 44, 1				!story_split_o_full.png
		else
			if bTopSlab then
				ui_pict 41, cx, cy-16, 93, 16, 1			!story_split_o_slab.spng
			else
				if bPenthouse then
					ui_pict 42, cx, cy-38, 93, 38, 1		!story_split_o_over.png
				else
					ui_pict 43, cx, cy-9, 93, 9, 1			!story_split_o_none.png
				endif
			endif
		endif
	
		! --- Base ---
		
		ui_pict 44, cx-85, cy + 67, 85, 1, 1						!story_line_top.png
		ui_pict 45, cx-85, cy + 105, 85, 1, 1						!story_line_bot.png
		ui_outfield stStoryUI[6], cx-85, cy + 78, 84, yOutField		! Home Story
		ui_pict 46, cx, cy, 93, 143, 1								!story_split_base.png
		ui_pict 47, cx-11, cy + 67 - 19, 11, 19, 1					!story_dim.png
		ui_style 1,0
		ui_infield "dist_SL_story_to_normal_story", cx-85, cy+49, xInfield, yInField ui_tooltip stStoryUI[7]

	
		! --- Under ---
		if bPitSlab & bPith then
			ui_pict 48, cx, cy+143, 93, 35, 1		!story_split_u_full.png
		else
			if bPitSlab then
				ui_pict 49, cx, cy+143, 93, 9, 1		!story_split_u_slabs.png
			else
				if bPith then
					ui_pict 50, cx, cy+143, 93, 29, 1		!story_split_u_over.png
				else
					ui_pict 51, cx, cy+143, 93, 1, 1		!story_split_u_none.png
				endif
			endif
		endif

	else
		! --- Over ---
		if bTopSlab & bPenthouse then
			ui_pict 52, cx, cy-44, 93, 44, 1		!story_o_full.png
		else
			if bTopSlab then
				ui_pict 53, cx, cy-16, 93, 16, 1		!story_o_slab.spng
			else
				if bPenthouse then
					ui_pict 54, cx, cy-38, 93, 38, 1		!story_o_over.png
				else
					ui_pict 55, cx, cy-9, 93, 9, 1		!story_o_none.png
				endif
			endif
		endif
	
		! --- Base ---
		
		ui_pict 45, cx-85, cy + 67, 85, 1, 1			!story_line_bot.png
		ui_pict 45, cx-85, cy + 105, 85, 1, 1			!story_line_bot.png
		ui_outfield stStoryUI[6], cx-85, cy + 78, 84, yOutField		! Home Story
		ui_pict 56, cx, cy, 93, 143, 1					!story_base.png
	
		! --- Under ---
		if bPitSlab & bPith then
			ui_pict 57, cx, cy+143, 93, 35, 1		!story_u_full.png
		else
			if bPitSlab then
				ui_pict 58, cx, cy+143, 93, 9, 1		!story_u_slabs.png
			else
				if bPith then
					ui_pict 59, cx, cy+143, 93, 29, 1		!story_u_over.png
				else
					ui_pict 60, cx, cy+143, 93, 1, 1		!story_u_none.png
				endif
			endif
		endif
	endif


return

! ------------------------------------------------------------------------------
"shaftPage":
! ------------------------------------------------------------------------------

	y	= 37
	cx	= 140
	x1	= 0
	x2	= 228
	dy	= 25

	ui_style 0, 0

	ui_outfield stShaftUI[1],	x1, y, x2-x1-1, yOutField	! Shaft Door Style
	ui_infield{3} "elev_door_style_m", x2, y-2, cx, yInField,
		8, "",
		0, 0, 
		0, 0, 0, 0,
		0, stElevDoorStyle[1], 1,
		0, stElevDoorStyle[2], 2
	y = y + dy

	ui_infield{3} "bOpeningFrame", x1, y-2, x2+cx-x1, yOutField,
		7, "",
		0, 0, 
		0, 0, 0, 0,
		0, stShaftUI[2], 0,
		0, stShaftUI[2], 1
	y = y + dy

	ui_infield{3} "bControlPanel", x1, y-2, x2+cx-x1, yOutField,
		7, "",
		0, 0, 
		0, 0, 0, 0,
		0, stShaftUI[3], 0,
		0, stShaftUI[3], 1
	y = y + dy

	! ----------------------------------------------------------
	ui_separator 0, y, 444, y
	! ----------------------------------------------------------
	y = y + 7

	ui_style 0, 1
	ui_outfield stShaftUI[4], x1, y, x2+cx-x1, 12	!Door Position on Shaft
	ui_style 0, 0
	y = y + dy

	ui_outfield stShaftUI[5],	x1, y, x2-x1-1, yOutField	! Name of Story to be Edited
	ui_infield "edited_story", x2, y-2, cx, yInField
	y = y + dy

	ui_outfield stShaftUI[6],	x1, y, x2-x1-1, yOutField, 4	! Name of Story to be Edited
	ui_infield "edited_story_height", x2+cx-77, y-2, 77, yInField
	y = y + dy

	iFlag = 4*bLockedDoorEditedStory
	ui_outfield stShaftUI[7],	x1, y, x2-x1-1, yOutField, iFlag	! Door Position of Edited Story
	ui_infield{3} "edited_story_door_pos_m", x2, y-2, cx, yInField,
			8, "",
			0, 0,
			0, 0, 0, 0,
			0, stDoorPosition[1], 1,
			0, stDoorPosition[2], 2,
			0, stDoorPosition[3], 3,
			0, stDoorPosition[4], 4
	y = y + dy

return

! ------------------------------------------------------------------------------
"repAndSurfacePage":
! ------------------------------------------------------------------------------

	ui_listfield 2, 0, pageStartY + 1, 444, 266-36, 0
	
	! ---------------- 2D Representation ---------------------
	i = 1
	ui_listitem i, 2, "", 0, "", `2D-отображение`					: i = i + 1
		ui_listitem i, 2, "gs_detlevel_2D", 1							: i = i + 1
		if elevator_form_m = FORM_RECT & (gs_detlevel_2D_m = 1 | gs_detlevel_2D_m = 2) then
			ui_listitem i, 2, "bShowMechin2D", 1						: i = i + 1
		endif

	! ---------------- 3D Representation ---------------------
	i = 5
	ui_listitem i, 2, "", 0, "", `3D-отображение`					: i = i + 1
		ui_listitem i, 2, "gs_detlevel_3D", 1, "", `3D-детализация`	: i = i + 1
		ui_listitem i, 2, "gs_shadow", 1								: i = i + 1
		if elevator_form_m = FORM_SEGMENTED then
			ui_listitem i, 2, "bShowMullion", 1							: i = i + 1
		endif
		ui_listitem i, 2, "opening_in3D", 1, "", `Открывание Двери в 3D (%)`	: i = i + 1

	! ---------------- Fills and Pens ---------------------
	i = 10
	ui_listitem i, 2, "", 0, "", `Перья и Штриховки`						: i = i + 1
		ui_listitem i, 2, "gs_cont_pen", 1								: i = i + 1
		ui_listitem i, 2, "gs_fill_type", 1								: i = i + 1
		ui_listitem i, 2, "gs_fill_pen", 1								: i = i + 1
		ui_listitem i, 2, "gs_back_pen", 1								: i = i + 1

		if elevator_form_m = FORM_RECT then
			if bShowElevatorShaft then
				ui_listitem i, 2, "gs_wall_cont_pen", 1					: i = i + 1
				ui_listitem i, 2, "gs_wall_fill_type", 1				: i = i + 1
				ui_listitem i, 2, "gs_wall_fill_pen", 1					: i = i + 1
				ui_listitem i, 2, "gs_wall_back_pen", 1					: i = i + 1
				ui_listitem i, 2, "gs_opening_fill_type", 1				: i = i + 1
				ui_listitem i, 2, "gs_opening_fill_pen", 1				: i = i + 1
				ui_listitem i, 2, "gs_opening_back_pen", 1				: i = i + 1
			endif

			ui_listitem i, 2, "gs_gap_fill_type", 1						: i = i + 1
			ui_listitem i, 2, "gs_gap_fill_pen", 1						: i = i + 1
			ui_listitem i, 2, "gs_gap_back_pen", 1						: i = i + 1
		else
			if bShowElevatorWall then
				ui_listitem i, 2, "gs_wall_cont_pen", 1					: i = i + 1
				ui_listitem i, 2, "gs_wall_fill_type", 1				: i = i + 1
				ui_listitem i, 2, "gs_wall_fill_pen", 1					: i = i + 1
				ui_listitem i, 2, "gs_wall_back_pen", 1					: i = i + 1
				ui_listitem i, 2, "gs_opening_fill_type", 1				: i = i + 1
				ui_listitem i, 2, "gs_opening_fill_pen", 1				: i = i + 1
				ui_listitem i, 2, "gs_opening_back_pen", 1				: i = i + 1
			endif
		endif

	! ---------------- Surfaces ---------------------
	i = 40
	! Description without Surface expression
	ui_listitem i, 2, "", 0, "", `Покрытия`									: i = i + 1
		ui_listitem i, 2, "door_panel_mat", 	1, "", `Панель Двери`			: i = i + 1
		ui_listitem i, 2, "door_glass_mat",		1, "", `Стекло Двери`			: i = i + 1
		if	elevator_form_m = FORM_RECT			& bShowElevatorShaft |\
			elevator_form_m = FORM_SEGMENTED	& bShowElevatorWall then
				ui_listitem i, 2, "opening_frame_mat", 	1, "", `Обрамление Проема`		: i = i + 1
		endif
		if bControlPanel then
			ui_listitem i, 2, "cpanel_mat", 	1, "", `Панель Управления`		: i = i + 1
			ui_listitem i, 2, "button_mat", 	1, "", `Кнопки`				: i = i + 1
		endif

		! --- Car ---
		ui_listitem i, 2, "car_ext_mat", 		1, "", `Верх и Низ Кабины`		: i = i + 1
		ui_listitem i, 2, "car_int_mat", 		1, "", `Внутреннее Покрытие Кабины`	: i = i + 1
		ui_listitem i, 2, "car_pave_mat", 		1, "", `Пол Кабины`			: i = i + 1
		ui_listitem i, 2, "car_ceiling_mat", 	1, "", `Потолок Кабины`			: i = i + 1

		if elevator_form_m = FORM_RECT then
			if bShowElevatorShaft then
				ui_listitem i, 2, "elev_shaft_ext_mat", 	1, "", `Наружная Поверхность Шахты`	: i = i + 1
				ui_listitem i, 2, "elev_shaft_int_mat", 	1, "", `Внутренняя Поверхность Шахты`	: i = i + 1
				ui_listitem i, 2, "elev_shaft_edge_mat", 	1, "", `Торцы Шахты Лифта`			: i = i + 1
			endif
		else
			ui_listitem i, 2, "car_front_mat", 	1, "", `Передняя Панель Кабины`		: i = i + 1
			ui_listitem i, 2, "car_back_mat", 	1, "", `Задние Панели Кабины`		: i = i + 1

			if bShowMullion then
				ui_listitem i, 2, "car_mullion_mat", 1, "", `Средник`		: i = i + 1
			endif

			if bShowElevatorWall then
				ui_listitem i, 2, "elev_wall_ext_mat", 	1, "", `Внутренняя Сторона Стены Лифта`		: i = i + 1
				ui_listitem i, 2, "elev_wall_int_mat", 	1, "", `Наружная Поверхность Стены Лифта`		: i = i + 1
				ui_listitem i, 2, "elev_wall_edge_mat", 1, "", `Торцы Стены Лифта`					: i = i + 1
			endif
		endif

		if (elevator_form_m = FORM_RECT & bShowElevatorShaft) |\
			(elevator_form_m = FORM_SEGMENTED & bShowElevatorWall) then
			if bTopSlab then
				ui_listitem i, 2, "top_slab_ext_mat",  	1, "", `Наружная Сторона Верхней Плиты`		: i = i + 1
				ui_listitem i, 2, "top_slab_int_mat",  	1, "", `Внутренняя Сторона Верхней Плиты`		: i = i + 1
				ui_listitem i, 2, "top_slab_edge_mat",  1, "", `Торцы Верхней Плиты`				: i = i + 1
			endif

			if bPitSlab then
				ui_listitem i, 2, "pit_slab_ext_mat",   1, "", `Внутренняя Сторона Нижней Плиты`		: i = i + 1
				ui_listitem i, 2, "pit_slab_int_mat",  	1, "", `Наружная Сторона Нижней Плиты`		: i = i + 1
				ui_listitem i, 2, "pit_slab_edge_mat",  1, "", `Торцы Нижней Плиты`				: i = i + 1
			endif
		endif

return

! ------------------------------------------------------------------------------
"listingPage":
! ------------------------------------------------------------------------------

	ui_listfield 3, 0, pageStartY + 1, 444, 266-36, 0

	i = 1
	ui_listitem i, 3, "", 0, "", `Параметры Спецификаций`				: i = i + 1
		ui_listitem i, 3, "gs_list_cost", 1								: i = i + 1
		ui_listitem i, 3, "gs_list_manufacturer", 1						: i = i + 1
		ui_listitem i, 3, "gs_list_note", 1								: i = i + 1
		ui_listitem i, 3, "gs_list_location", 1							: i = i + 1
		ui_listitem i, 3, "gs_list_accessories", 1						: i = i + 1
		ui_listitem i, 3, "FM_Type", 1									: i = i + 1
		ui_listitem i, 3, "FM_InventoryNumber", 1						: i = i + 1
		ui_listitem i, 3, "FM_SerialNumber", 1							: i = i + 1
		ui_listitem i, 3, "FM_ProductionYear", 1						: i = i + 1
		ui_listitem i, 3, "FM_ObjectWeight", 1							: i = i + 1
		ui_listitem i, 3, "FM_ObjectWeightUnit", 1						: i = i + 1
		ui_listitem i, 3, "FM_FloorSpace", 1							: i = i + 1
		ui_listitem i, 3, "FM_Speed", 1									: i = i + 1
		ui_listitem i, 3, "FM_LiftCapacityNumber", 1					: i = i + 1
		ui_listitem i, 3, "FM_TransportablePersons", 1					: i = i + 1
		ui_listitem i, 3, "FM_HeadRoom", 1								: i = i + 1
		ui_listitem i, 3, "gs_list_custom1", 1							: i = i + 1
		ui_listitem i, 3, "gs_list_custom2", 1							: i = i + 1
		ui_listitem i, 3, "gs_list_custom3", 1							: i = i + 1
		ui_listitem i, 3, "gs_list_custom4", 1							: i = i + 1
		ui_listitem i, 3, "gs_list_custom5", 1							: i = i + 1

	i = 30
	if LibraryLangCode = "AUT" or LibraryLangCode = "CHE" or LibraryLangCode = "GER" then
		ui_listitem i, 3, "", 0, "", `Параметры Спецификаций ONORM`			: i = i + 1
			ui_listitem i, 3, "gs_onorm_name_value", 1					: i = i + 1
			ui_listitem i, 3, "gs_onorm_name", 1						: i = i + 1
			ui_listitem i, 3, "gs_onorm_maxpersons", 1					: i = i + 1
			ui_listitem i, 3, "gs_onorm_objectweight", 1				: i = i + 1
			ui_listitem i, 3, "gs_onorm_dimensions", 1					: i = i + 1
			ui_listitem i, 3, "gs_onorm_power", 1						: i = i + 1
			ui_listitem i, 3, "gs_onorm_elevnum", 1						: i = i + 1
			ui_listitem i, 3, "gs_onorm_manufacturer", 1				: i = i + 1
			ui_listitem i, 3, "gs_onorm_serialnumber", 1				: i = i + 1
			ui_listitem i, 3, "gs_onorm_baseheight_value", 1			: i = i + 1
			ui_listitem i, 3, "gs_onorm_baseheight", 1					: i = i + 1
			ui_listitem i, 3, "gs_onorm_assemblydate", 1				: i = i + 1
			ui_listitem i, 3, "gs_onorm_aks", 1							: i = i + 1
			ui_listitem i, 3, "gs_onorm_leistungbuch", 1				: i = i + 1
			ui_listitem i, 3, "gs_onorm_description", 1					: i = i + 1
			ui_listitem i, 3, "gs_onorm_number", 1						: i = i + 1
			ui_listitem i, 3, "gs_onorm_id", 1							: i = i + 1
			ui_listitem i, 3, "gs_onorm_admission", 1					: i = i + 1
			ui_listitem i, 3, "gs_onorm_modification", 1				: i = i + 1
	endif

return
]]>
</Script_UI>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_VL SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
call "FM_types" parameters all

! =============================================================================
! Detlevel 3D
! =============================================================================
values "gs_detlevel_3D" stDetail
values "gs_detlevel_3D_m" 2, 1, 0

if GLOB_MODPAR_NAME = "gs_detlevel_3D" then
	gs_detlevel_3D_m = 2
	if gs_detlevel_3D = stDetail[2] then gs_detlevel_3D_m = 1	! Simple
	if gs_detlevel_3D = stDetail[3] then gs_detlevel_3D_m = 0	! Off
	parameters gs_detlevel_3D_m = gs_detlevel_3D_m
else
	gs_detlevel_3D = stDetail[1]
	if gs_detlevel_3D_m = 1 then gs_detlevel_3D = stDetail[2]
	if gs_detlevel_3D_m = 0 then gs_detlevel_3D = stDetail[3]
	parameters gs_detlevel_3D = gs_detlevel_3D
endif


! =============================================================================
! Detlevel 2D
! =============================================================================
values "gs_detlevel_2D" stDetail2D
values "gs_detlevel_2D_m" 1, 2, 3, 4, 5, 6

if GLOB_MODPAR_NAME = "gs_detlevel_2D" then
	for i = 1 to vardim1(stDetail2D)
		if gs_detlevel_2D = stDetail2D[i] then
			gs_detlevel_2D_m = i
			i = 30
		endif
	next i
	parameters gs_detlevel_2D_m = gs_detlevel_2D_m
else
	gs_detlevel_2D = stDetail2D[gs_detlevel_2D_m]
	parameters gs_detlevel_2D = gs_detlevel_2D
endif


! =============================================================================
! Elevator Type
! =============================================================================
values "elevator_type" stElevType
values "elevator_type_m" 1, 2

if GLOB_MODPAR_NAME = "elevator_type" then
	elevator_type_m = 1
	if elevator_type = stElevType[2] then elevator_type_m = 2
	parameters elevator_type_m = elevator_type_m
else
	elevator_type = stElevType[elevator_type_m]
	parameters elevator_type = elevator_type
endif


! =============================================================================
! Second Opening
! =============================================================================
values "dir_second_opening" stDirection
values "dir_second_opening_m" 1, 2, 3, 4

if GLOB_MODPAR_NAME = "dir_second_opening" then
	for i = 1 to vardim1(stDirection)
		if dir_second_opening = stDirection[i] then
			dir_second_opening_m = i
			i = 99
		endif
	next i
	parameters dir_second_opening_m = dir_second_opening_m
else
	dir_second_opening = stDirection[dir_second_opening_m]
	parameters dir_second_opening = dir_second_opening
endif

if GLOB_MODPAR_NAME = "bSplitLevelStories" and bSplitLevelStories then
	parameters dir_second_opening = stDirection[3]
endif

if dir_second_opening_m = SECOND_OPENING_REAR then
	lock "car_depth"
endif
if dir_second_opening_m = SECOND_OPENING_NONE then
	hideparameter	"second_door_pos"
	lock			"second_door_pos"
endif

dim stAvaliablePosition[]
dim iAvaliablePosition[]
j = 1
for i = 1 to 3
	if dir_second_opening_m-1 <> i then
		stAvaliablePosition[j]	= stPosition[i]
		iAvaliablePosition[j]	= i
		j = j + 1
	endif
next i

values "cweight_pos"	stAvaliablePosition
values "cweight_pos_m"	iAvaliablePosition

if GLOB_MODPAR_NAME = "cweight_pos" then
	for i = 1 to 3
		if cweight_pos = stPosition[i] then
			cweight_pos_m = i
			i = 3
		endif
	next i
	parameters cweight_pos_m = cweight_pos_m
else
	cweight_pos_m = max(min(cweight_pos_m, vardim1(stPosition)), 1)
	parameters cweight_pos = stPosition[cweight_pos_m]
endif


! =============================================================================
! Door Style
! =============================================================================
values "elev_door_style" stElevDoorStyle
values "elev_door_style_m" 1, 2

if GLOB_MODPAR_NAME = "elev_door_style" then
	elev_door_style_m = 1
	if elev_door_style = stElevDoorStyle[2] then elev_door_style_m = 2
	parameters elev_door_style_m = elev_door_style_m
else
	elev_door_style = stElevDoorStyle[elev_door_style_m]
	parameters elev_door_style = elev_door_style
endif


values "door_style" stDoorStyle
values "door_style_m" 0, 1, 2, 3, 4, 5

if GLOB_MODPAR_NAME = "door_style" then
	for i = 1 to 6
		if door_style = stDoorStyle[i] then
			door_style_m = i-1
			i = 6
		endif
	next i
	parameters door_style_m = door_style_m
else
	door_style = stDoorStyle[door_style_m+1]
	parameters door_style = door_style
endif


! =============================================================================
! Form
! =============================================================================
values "elevator_form" stElevForm
values "elevator_form_m" 1, 2
values "segment_num" range [3, )

if GLOB_MODPAR_NAME = "elevator_form" then
	elevator_form_m = 1
	if elevator_form = stElevForm[2] then elevator_form_m = 2
	parameters elevator_form_m = elevator_form_m
else
	elevator_form = stElevForm[elevator_form_m]
	parameters elevator_form = elevator_form
endif

if elevator_form_m <> elevator_form_m_prev then
	if elevator_form_m = FORM_RECT then

		elev_shaft_thick	= elev_wall_thick
		bShowElevatorShaft	= bShowElevatorWall
		shaft_inner_width	= A - 2*elev_shaft_thick*bShowElevatorShaft
		shaft_inner_depth	= B - 2*elev_shaft_thick*bShowElevatorShaft

		parameters	shaft_inner_width	= shaft_inner_width,
					shaft_inner_depth	= shaft_inner_depth,
					elev_shaft_thick	= elev_shaft_thick,
					bShowElevatorShaft	= bShowElevatorShaft

	else

		elev_wall_thick		= elev_shaft_thick
		elev_wall_overhang	= 0
		bShowElevatorWall	= bShowElevatorShaft
		car_width			= A - 2*elev_wall_overhang*bShowElevatorWall
		car_depth			= B - segmentedFront - bShowElevatorWall * elev_wall_thick
		parameters	elev_wall_thick		= elev_wall_thick,
					elev_wall_overhang	= elev_wall_overhang,
					bShowElevatorWall	= bShowElevatorWall,
					car_width			= car_width,
					car_depth			= car_depth
	endif
endif

parameters elevator_form_m_prev = elevator_form_m

values "penthouse_height" range(0, )
if not(bPenthouse) then
	hideparameter	"penthouse_height"
	lock			"penthouse_height"
endif

values "pit_depth" range(0, )
if not(bPith) then
	hideparameter	"pit_depth"
	lock			"pit_depth"
endif

values "top_slab_thick" range (0, )
if not(bTopSlab) then
	hideparameter	"top_slab_thick",
					"top_slab_ext_mat",
					"top_slab_int_mat",
					"top_slab_edge_mat"

	lock			"top_slab_thick",
					"top_slab_ext_mat",
					"top_slab_int_mat",
					"top_slab_edge_mat"
endif

values "pit_slab_thick" range (0, )
if not(bPitSlab) then
	hideparameter	"pit_slab_thick",
					"pit_slab_ext_mat",
					"pit_slab_int_mat",
					"pit_slab_edge_mat"

	lock			"pit_slab_thick",
					"pit_slab_ext_mat",
					"pit_slab_int_mat",
					"pit_slab_edge_mat"
endif

lock "edited_story_height"

if elevator_form_m = FORM_RECT then
	lock "segment_num"
	if elevator_type_m = 2 then
		hideparameter	"cweight_pos",
						"cweight_pos_m",
						"cweight_width",
						"cweight_depth"

		lock 			"cweight_pos",
						"cweight_pos_m",
						"cweight_width",
						"cweight_depth"
	endif

	if not(bSplitLevelStories) then
		lock 	"num_SL_stories_below_HS",
				"num_SL_stories_above_HS",
				"dist_SL_story_to_normal_story"

		hideparameter 	"num_SL_stories_below_HS",
						"num_SL_stories_above_HS",
						"dist_SL_story_to_normal_story"
	endif

	if not(bShowElevatorShaft) then
		lock	"bPenthouse",
				"penthouse_height",
				"bPith",
				"pit_depth",
				"elev_shaft_thick",
				"elev_shaft_ext_mat",
				"elev_shaft_int_mat",
				"elev_shaft_edge_mat",
				"bTopSlab",
				"top_slab_thick",
				"top_slab_ext_mat",
				"top_slab_int_mat",
				"top_slab_edge_mat",
				"bPitSlab",
				"pit_slab_thick",
				"pit_slab_ext_mat",
				"pit_slab_int_mat",
				"pit_slab_edge_mat",
				"gs_wall_cont_pen",
				"gs_wall_fill_type",
				"gs_wall_fill_pen",
				"gs_wall_back_pen",
				"gs_opening_fill_type",
				"gs_opening_fill_pen",
				"gs_opening_back_pen"

		hideparameter	"bPenthouse",
						"penthouse_height",
						"bPith",
						"pit_depth",
						"elev_shaft_thick",
						"elev_shaft_ext_mat",
						"elev_shaft_int_mat",
						"elev_shaft_edge_mat",
						"bTopSlab",
						"top_slab_thick",
						"top_slab_ext_mat",
						"top_slab_int_mat",
						"top_slab_edge_mat",
						"bPitSlab",
						"pit_slab_thick",
						"pit_slab_ext_mat",
						"pit_slab_int_mat",
						"pit_slab_edge_mat",
						"gs_wall_cont_pen",
						"gs_wall_fill_type",
						"gs_wall_fill_pen",
						"gs_wall_back_pen",
						"gs_opening_fill_type",
						"gs_opening_fill_pen",
						"gs_opening_back_pen"
	endif

	lock	"car_front_mat",
			"car_back_mat",
			"car_mullion_mat",
			"bShowElevatorWall",
			"elev_wall_thick",
			"elev_wall_overhang",
			"elev_wall_ext_mat",
			"elev_wall_int_mat",
			"elev_wall_edge_mat",
			"bShowMullion"

	hideparameter	"car_front_mat",
					"car_back_mat",
					"car_mullion_mat",
					"bShowElevatorWall",
					"elev_wall_thick",
					"elev_wall_overhang",
					"elev_wall_ext_mat",
					"elev_wall_int_mat",
					"elev_wall_edge_mat",
					"bShowMullion"

	if not(bShowElevatorShaft) then
		lock 	"elev_door_style",
				"elev_shaft_thick",
				"elev_shaft_ext_mat",
				"elev_shaft_int_mat",
				"elev_shaft_edge_mat"

		hideparameter 	"elev_door_style",
						"elev_shaft_thick",
						"elev_shaft_ext_mat",
						"elev_shaft_int_mat",
						"elev_shaft_edge_mat"
	endif

	if not(gs_detlevel_2D_m = 1 | gs_detlevel_2D_m = 2) then
		lock "bShowMechin2D"
		hideparameter "bShowMechin2D"
	endif
else
!"B",
	lock 	"elevator_type",
			"elevator_type_m",
			"dir_second_opening",
			"dir_second_opening_m",
			"cweight_pos",
			"cweight_pos_m",
			"cweight_width",
			"cweight_depth",
			"bSplitLevelStories",
			"num_SL_stories_below_HS",
			"num_SL_stories_above_HS",
			"dist_SL_story_to_normal_story",
			"second_door_pos",
			"bShowElevatorShaft",
			"elev_shaft_thick",
			"elev_shaft_ext_mat",
			"elev_shaft_int_mat",
			"elev_shaft_edge_mat",
			"bShowMechin2D",
			
			"shaft_inner_width",
			"shaft_inner_depth"

!"B",
	hideparameter	"elevator_type",
					"elevator_type_m",
					"dir_second_opening",
					"dir_second_opening_m",
					"cweight_pos",
					"cweight_pos_m",
					"cweight_width",
					"cweight_depth",
					"bSplitLevelStories",
					"num_SL_stories_below_HS",
					"num_SL_stories_above_HS",
					"dist_SL_story_to_normal_story",
					"second_door_pos",
					"bShowElevatorShaft",
					"elev_shaft_thick",
					"elev_shaft_ext_mat",
					"elev_shaft_int_mat",
					"elev_shaft_edge_mat",
					"bShowMechin2D",
					
					"shaft_inner_width",
					"shaft_inner_depth"

	if not(bShowMullion) then
		lock "car_mullion_mat"
		hideparameter "car_mullion_mat"
	endif

	if not(bShowElevatorWall) then
		lock 	"elev_door_style",
				"elev_wall_thick",
				"elev_wall_overhang",
				"elev_wall_ext_mat",
				"elev_wall_int_mat",
				"elev_wall_edge_mat",

				"bTopSlab",
				"top_slab_thick",
				"top_slab_ext_mat",
				"top_slab_int_mat",
				"top_slab_edge_mat",
				"bPitSlab",
				"pit_slab_thick",
				"pit_slab_ext_mat",
				"pit_slab_int_mat",
				"pit_slab_edge_mat",

				"gs_wall_cont_pen",
				"gs_wall_fill_type",
				"gs_wall_fill_pen",
				"gs_wall_back_pen",
				"gs_opening_fill_type",
				"gs_opening_fill_pen",
				"gs_opening_back_pen"

		hideparameter	"elev_door_style",
						"elev_wall_thick",
						"elev_wall_overhang",
						"elev_wall_ext_mat",
						"elev_wall_int_mat",
						"elev_wall_edge_mat",

						"bTopSlab",
						"top_slab_thick",
						"top_slab_ext_mat",
						"top_slab_int_mat",
						"top_slab_edge_mat",
						"bPitSlab",
						"pit_slab_thick",
						"pit_slab_ext_mat",
						"pit_slab_int_mat",
						"pit_slab_edge_mat",

						"gs_wall_cont_pen",
						"gs_wall_fill_type",
						"gs_wall_fill_pen",
						"gs_wall_back_pen",
						"gs_opening_fill_type",
						"gs_opening_fill_pen",
						"gs_opening_back_pen"
	endif
endif

if	not(elevator_form_m = FORM_RECT			& bShowElevatorShaft |\
		elevator_form_m = FORM_SEGMENTED	& bShowElevatorWall) then

	lock "opening_frame_mat", "bControlPanel", "bOpeningFrame",
		"edited_story", "edited_story_m",
		"edited_story_height",
		"edited_story_door_pos", "edited_story_door_pos_m",
		"cpanel_mat", "button_mat",
		"num_stories_above_HS", "gs_max_StrFl_height",
		"bSplitLevelStories", "stories"
	hideparameter "opening_frame_mat",  "bControlPanel", "bOpeningFrame",
		"edited_story", "edited_story_m",
		"edited_story_height",
		"edited_story_door_pos", "edited_story_door_pos_m",
		"cpanel_mat", "button_mat",
		"num_stories_above_HS", "gs_max_StrFl_height",
		"bSplitLevelStories", "stories"
endif

if elevator_form_m = FORM_SEGMENTED then 			! --- Segmented
	lock "gs_gap_fill_type"
	hideparameter "gs_gap_fill_type"
	lock "gs_gap_fill_pen"
	hideparameter "gs_gap_fill_pen"
	lock "gs_gap_back_pen"
	hideparameter "gs_gap_back_pen"
endif


! =============================================================================
! Sizes
! =============================================================================
values "elev_shaft_thick"	range (0, )
values "elev_wall_thick"	range (0, )

values "car_height"	range (0, )

if elevator_form_m = FORM_RECT then
	if cweight_pos_m = CW_POS_NORMAL then
		values "cweight_width" range (0, shaft_inner_width - 2*cweightEPS]
		values "cweight_depth" range [minCwDepth, max(minCwDepth, shaft_inner_depth - 2*carWallThk - car_inner_depth - frontGap - 2*carEPS)]
	else
		values "cweight_width" range (0, shaft_inner_depth - 2*cweightEPS]
		values "cweight_depth" range [minCwDepth, max( minCwDepth, shaft_inner_width - 2*carWallThk - car_inner_width - \
				(2+(dir_second_opening_m = SECOND_OPENING_NONE | dir_second_opening_m = SECOND_OPENING_REAR))*carEPS - \
				(dir_second_opening_m = SECOND_OPENING_SIDE1 | dir_second_opening_m = SECOND_OPENING_SIDE2)*frontGap)]
	endif

	if dir_second_opening_m = SECOND_OPENING_SIDE1 then
		minSide1	= frontGap
	else
		minSide1	= (1+(cweight_pos_m = CW_POS_SIDE1) * (elevator_type_m = 1))*carEPS + minCwDepth*(cweight_pos_m = CW_POS_SIDE1) * (elevator_type_m = 1)
	endif

	if dir_second_opening_m = SECOND_OPENING_SIDE2 then
		minSide2	= frontGap
	else
		minSide2	= (1+(cweight_pos_m = CW_POS_SIDE2) * (elevator_type_m = 1))*carEPS + minCwDepth*(cweight_pos_m = CW_POS_SIDE2) * (elevator_type_m = 1)
	endif

	minFront = frontGap

	if dir_second_opening_m = SECOND_OPENING_REAR then
		minRear			= frontGap
		car_inner_depth	= shaft_inner_depth - 2*carWallThk - minRear - minFront
		parameters car_inner_depth = car_inner_depth
	else
		minRear		= (1+(cweight_pos_m = CW_POS_NORMAL) * (elevator_type_m = 1))*carEPS + minCwDepth*(cweight_pos_m = CW_POS_NORMAL) * (elevator_type_m = 1)
	endif

	values "shaft_inner_width"	range [minSide1 + minSide2 + minCarWidth + 2*carWallThk, ]
	values "shaft_inner_depth"	range [minFront + minRear  + minCarDepth + 2*carWallThk, ]
	values "A"					range [minSide1 + minSide2 + minCarWidth + 2*carWallThk + 2*elev_shaft_thick*bShowElevatorShaft, ]
	values "B"					range [minFront + minRear  + minCarDepth + 2*carWallThk + 2*elev_shaft_thick*bShowElevatorShaft, ]
	values "car_inner_width"	range [minCarWidth, shaft_inner_width - 2*carWallThk - minSide1 - minSide2]
	values "car_inner_depth"	range [minCarDepth, shaft_inner_depth - 2*carWallThk - minFront - minRear ]

	if GLOB_MODPAR_NAME = "A" or GLOB_MODPAR_NAME = "B" then
		shaft_inner_width = A - 2*elev_shaft_thick*bShowElevatorShaft
		shaft_inner_depth = B - 2*elev_shaft_thick*bShowElevatorShaft

		parameters	shaft_inner_width	= shaft_inner_width,
					shaft_inner_depth	= shaft_inner_depth
	else
			A = shaft_inner_width + 2*elev_shaft_thick*bShowElevatorShaft
			B = shaft_inner_depth + 2*elev_shaft_thick*bShowElevatorShaft
			parameters	A			= A,
						B			= B
	endif

	hideparameter	"car_width", "car_depth"
	lock			"car_width", "car_depth"

else

	hideparameter	"car_inner_width", "car_inner_depth"
	lock			"car_inner_width", "car_inner_depth"

	values "car_width"	range [minCarWidth, )
	values "car_depth"	range [minCarDepth, )
	values "A"			range [minCarWidth + 2*elev_wall_overhang*bShowElevatorWall, )
	values "B"			range [minCarDepth + segmentedFront + bShowElevatorWall * elev_wall_thick, )
	values "elev_wall_overhang" range [0,]

	if GLOB_MODPAR_NAME = "A" or GLOB_MODPAR_NAME = "B" then
		car_width = A - 2*elev_wall_overhang*bShowElevatorWall
		car_depth = B - segmentedFront - bShowElevatorWall * elev_wall_thick
		parameters car_width = car_width, car_depth = car_depth
	else
		A = car_width + 2*elev_wall_overhang*bShowElevatorWall
		B = car_depth + segmentedFront + bShowElevatorWall * elev_wall_thick
		parameters A = A, B = B
	endif
endif


! =============================================================================
! Doors
! =============================================================================
doorDivider	= 0.5
if door_style_m = 0 or door_style_m = 3 then
	nSlidingDiv 	= 1
else
	if door_style_m = 1 | door_style_m = 5 then
		nSlidingDiv	= 1.5
		doorDivider	= 1/3
	else
		nSlidingDiv = 2
	endif
endif

if dir_second_opening_m = 3 or dir_second_opening_m = 4 then
	!!values "door_width" range(0, (car_depth-2*(carWallThk+minCarWallFlap)-abs(second_door_pos))/nSlidingDiv]
	values "door_width" range(0, (car_depth-2*(carWallThk+minCarWallFlap))/nSlidingDiv]
else
	!!values "door_width" range(0, (car_width-2*(carWallThk+minCarWallFlap)-abs(door_pos))/nSlidingDiv]
	values "door_width" range(0, (car_width-2*(carWallThk+minCarWallFlap))/nSlidingDiv]
endif
values "door_height" range(0, )
values "door_pos" range[-(car_width/2-carWallThk-door_width*nSlidingDiv*doorDivider-minCarWallFlap), car_width/2-carWallThk-door_width*nSlidingDiv*doorDivider-minCarWallFlap]
if dir_second_opening_m = 3 or dir_second_opening_m = 4 then
	values "second_door_pos" range[-(car_depth/2-carWallThk-door_width*nSlidingDiv*doorDivider-minCarWallFlap), car_depth/2-carWallThk-door_width*nSlidingDiv*doorDivider-minCarWallFlap]
else
	values "second_door_pos" range[-(car_width/2-carWallThk-door_width*nSlidingDiv*doorDivider-minCarWallFlap), car_width/2-carWallThk-door_width*nSlidingDiv*doorDivider-minCarWallFlap]
endif
values "gs_max_StrFl_height" range(0, )
values "opening_in3D" range [0, 100]

if not(bControlPanel) then
	lock 	"cpanel_mat",
			"button_mat"

	hideparameter	"cpanel_mat",
					"button_mat"
endif


! =============================================================================
! Levels
! =============================================================================
ac_bottomlevel = connected_stories_elev[num_connected_stories]-pit_depth*bPith-pit_slab_thick*bPitSlab
parameters ac_bottomlevel = ac_bottomlevel
ac_toplevel = connected_stories_elev[1] + connected_stories_height[1]+penthouse_height*bPenthouse+top_slab_thick*bTopSlab
parameters ac_toplevel = ac_toplevel
ZZYZX = ac_toplevel - ac_bottomlevel
parameters ZZYZX = ZZYZX
lock "ZZYZX"

! =============================================================================
! Onorm list Settings
! =============================================================================
if LibraryLangCode = "AUT" or LibraryLangCode = "CHE" or LibraryLangCode = "GER" then
	rrr = REQUEST ("Name_of_macro", "", LPName)
	call "Onorm_Elevator" parameters all sLibpartName = strsub(LPName,0,strlen(LPName)-4)
else
	hideparameter "gs_onorm_Title"
endif


! =============================================================================
! IFC Parameters
! =============================================================================

ifc_CapacityByWeight	= FM_LiftCapacityNumber
ifc_CapacityByNumber	= FM_TransportablePersons
parameters	ifc_CapacityByWeight	= ifc_CapacityByWeight,
			ifc_CapacityByNumber	= ifc_CapacityByNumber

FM_LiftCapacity = str("%~m", FM_LiftCapacityNumber)
parameters FM_LiftCapacity = FM_LiftCapacity

parameters ifc_optype = 1

values "FM_LiftCapacityNumber" range[0, )

! =============================================================================
! UI
! =============================================================================
values "gs_ui_current_page" 1,2,3,4,5,6,7,8
]]>
</Script_VL>

<Comment SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[Многоэтажная шахта лифта с кабиной.]]>
</Comment>

<Keywords SectVersion="1" SectionFlags="0" SubIdent="0">
<![CDATA[Форма, механический или гидравлический, второе отверстие, конструктивный пол, перекрытие вверху и внизу, панель управления, зависимый от этажа 2D-символ]]>
</Keywords>

<ParamSection SectVersion="22" SectionFlags="0" SubIdent="0">
	<ParamSectHeader>
		<AutoHotspots>false</AutoHotspots>
		<StatBits>
			<STBit_UIDefault/>
			<STBit_FixSize/>
			<STBit_UIUseHierarchicalPages/>
		</StatBits>
		<WDLeftFrame>0</WDLeftFrame>
		<WDRightFrame>0</WDRightFrame>
		<WDTopFrame>0</WDTopFrame>
		<WDBotFrame>0</WDBotFrame>
		<LayFlags>65535</LayFlags>
		<WDMirrorThickness>0</WDMirrorThickness>
		<WDWallInset>0</WDWallInset>
	</ParamSectHeader>
	<Parameters>
		<Length Name="A">
			<Description><![CDATA["Ширина Шахты Лифта"]]></Description>
			<Fix/>
			<Value>2.8</Value>
		</Length>
		<Length Name="B">
			<Description><![CDATA["Глубина Шахты Лифта"]]></Description>
			<Fix/>
			<Value>2.3</Value>
		</Length>
		<Length Name="ZZYZX">
			<Description><![CDATA["Высота"]]></Description>
			<Fix/>
			<Value>5.1</Value>
		</Length>
		<Boolean Name="AC_show2DHotspotsIn3D">
			<Description><![CDATA["Показ Узловых 2D Точек в 3D"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="ac_bottomlevel">
			<Description><![CDATA["Отметка Низа"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ac_toplevel">
			<Description><![CDATA["Отметка Верха"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>4.1</Value>
		</Length>
		<String Name="gs_detlevel_3D">
			<Description><![CDATA["3D"]]></Description>
			<Value><![CDATA["Детальный"]]></Value>
		</String>
		<Integer Name="gs_detlevel_3D_m">
			<Description><![CDATA["3D"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>2</Value>
		</Integer>

		<!-- general_settings: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="general_settings">
			<Description><![CDATA["Общие Параметры"]]></Description>
		</Title>
		<String Name="elevator_form">
			<Description><![CDATA["Форма"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Прямоугольная"]]></Value>
		</String>
		<Integer Name="elevator_form_m">
			<Description><![CDATA["Форма"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="elevator_form_m_prev">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="segment_num">
			<Description><![CDATA["Количество Сегментов"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>7</Value>
		</Integer>
		<String Name="elevator_type">
			<Description><![CDATA["Тип Лифта"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Механический"]]></Value>
		</String>
		<Integer Name="elevator_type_m">
			<Description><![CDATA["Тип Лифта"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="dir_second_opening">
			<Description><![CDATA["Направление Второго Проема"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Нет"]]></Value>
		</String>
		<Integer Name="dir_second_opening_m">
			<Description><![CDATA["Направление Второго Проема"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="cweight_pos">
			<Description><![CDATA["Расположение Противовеса"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Обычное"]]></Value>
		</String>
		<Integer Name="cweight_pos_m">
			<Description><![CDATA["Расположение Противовеса"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="cweight_width">
			<Description><![CDATA["Ширина Противовеса"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.9</Value>
		</Length>
		<Length Name="cweight_depth">
			<Description><![CDATA["Глубина Противовеса"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Length Name="shaft_inner_width">
			<Description><![CDATA["Внутренняя Ширина Шахты Лифта"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2.5</Value>
		</Length>
		<Length Name="shaft_inner_depth">
			<Description><![CDATA["Внутренняя Глубина Шахты Лифта"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Length>

		<!-- stories: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="stories">
			<Description><![CDATA["Этажи"]]></Description>
		</Title>
		<Integer Name="num_stories_above_HS">
			<Description><![CDATA["Количество Этажей выше Собственного Этажа"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="num_stories_below_HS">
			<Description><![CDATA["Количество Этажей Ниже Собственного Этажа"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Length Name="gs_max_StrFl_height">
			<Description><![CDATA["Максимальная Высота Конструктивного Этажа"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1.8</Value>
		</Length>
		<Boolean Name="bSplitLevelStories">
			<Description><![CDATA["Полуэтажи"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="num_SL_stories_above_HS">
			<Description><![CDATA["Количество Полуэтажей выше Собственного Этажа"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="num_SL_stories_below_HS">
			<Description><![CDATA["Количество Полуэтажей ниже Собственного Этажа"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Length Name="dist_SL_story_to_normal_story">
			<Description><![CDATA["Расстояние между Полуэтажом и Обычным Этажом"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1.55</Value>
		</Length>
		<Boolean Name="bPenthouse">
			<Description><![CDATA["Верхняя Секция Шахты"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="penthouse_height">
			<Description><![CDATA["Высота Верхней Секции"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Boolean Name="bPith">
			<Description><![CDATA["Приямок"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="pit_depth">
			<Description><![CDATA["Глубина Приямка"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Length>

		<!-- door: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="door">
			<Description><![CDATA["Дверь"]]></Description>
		</Title>
		<Length Name="door_width">
			<Description><![CDATA["Чистая Ширина Проема"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.9</Value>
		</Length>
		<Length Name="door_height">
			<Description><![CDATA["Чистая Высота Проема"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2.1</Value>
		</Length>
		<Length Name="door_pos">
			<Description><![CDATA["Ось Двери от Центра"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="second_door_pos">
			<Description><![CDATA["Ось Второй Двери от Центра"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<String Name="elev_door_style">
			<Description><![CDATA["Стиль Двери Шахты Лифта"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Раздвижная"]]></Value>
		</String>
		<Integer Name="elev_door_style_m">
			<Description><![CDATA["Стиль Двери Шахты Лифта"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="door_style">
			<Description><![CDATA["Стиль Двери Кабины Лифта"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Стиль 1"]]></Value>
		</String>
		<Integer Name="door_style_m">
			<Description><![CDATA["Стиль Двери Кабины Лифта"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="bOpeningFrame">
			<Description><![CDATA["Обрамление Проема"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<String Name="edited_story">
			<Description><![CDATA["Имя Этажа для Редактирования"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["1. Первый Этаж"]]></Value>
		</String>
		<Integer Name="edited_story_m">
			<Description><![CDATA["Имя Этажа для Редактирования"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Length Name="edited_story_height">
			<Description><![CDATA["Высота Редактируемого Этажа"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3.1</Value>
		</Length>
		<Length Name="edited_story_elev">
			<Description><![CDATA["Отметка Редактируемого Этажа"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<String Name="edited_story_door_pos">
			<Description><![CDATA["Расположение Двери Редактируемого Этажа"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Спереди"]]></Value>
		</String>
		<Integer Name="edited_story_door_pos_m">
			<Description><![CDATA["Расположение Двери Редактируемого Этажа"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="bControlPanel">
			<Description><![CDATA["Панель Управления"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Material Name="door_panel_mat">
			<Description><![CDATA["Покрытие Двери"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>13</Value>
		</Material>
		<Material Name="door_glass_mat">
			<Description><![CDATA["Остекление Двери"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>24</Value>
		</Material>
		<Material Name="opening_frame_mat">
			<Description><![CDATA["Покрытие Обрамления Двери"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>13</Value>
		</Material>
		<Material Name="cpanel_mat">
			<Description><![CDATA["Покрытие Панели Управления"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>11</Value>
		</Material>
		<Material Name="button_mat">
			<Description><![CDATA["Покрытие Кнопок"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>40</Value>
		</Material>

		<!-- elevator_car: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="elevator_car">
			<Description><![CDATA["Кабина Лифта"]]></Description>
		</Title>
		<Length Name="car_width">
			<Description><![CDATA["Ширина Кабины"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2.26</Value>
		</Length>
		<Length Name="car_depth">
			<Description><![CDATA["Глубина Кабины"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1.74</Value>
		</Length>
		<Length Name="car_inner_width">
			<Description><![CDATA["Внутренняя Ширина Кабины"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2.1</Value>
		</Length>
		<Length Name="car_inner_depth">
			<Description><![CDATA["Внутренняя Глубина Кабины"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1.58</Value>
		</Length>
		<Length Name="car_height">
			<Description><![CDATA["Высота Кабины"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2.4</Value>
		</Length>
		<String Name="car_pos_story">
			<Description><![CDATA["Расположение Кабины (Этаж)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["1. Первый Этаж"]]></Value>
		</String>
		<Integer Name="car_pos_story_m">
			<Description><![CDATA["Расположение Кабины (Этаж)"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Material Name="car_ext_mat">
			<Description><![CDATA["Наружное Покрытие Кабины"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>23</Value>
		</Material>
		<Material Name="car_int_mat">
			<Description><![CDATA["Внутреннее Покрытие Кабины"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>23</Value>
		</Material>
		<Material Name="car_pave_mat">
			<Description><![CDATA["Покрытие Пола Кабины"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>47</Value>
		</Material>
		<Material Name="car_ceiling_mat">
			<Description><![CDATA["Покрытие Потолка Кабины"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>78</Value>
		</Material>
		<Material Name="car_front_mat">
			<Description><![CDATA["Покрытие Передней Панели Кабины"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>24</Value>
		</Material>
		<Material Name="car_back_mat">
			<Description><![CDATA["Покрытие Задней Панели Кабины"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>23</Value>
		</Material>
		<Material Name="car_mullion_mat">
			<Description><![CDATA["Покрытие Раскладки"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>11</Value>
		</Material>

		<!-- bShowElevatorShaft: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Boolean Name="bShowElevatorShaft">
			<Description><![CDATA["Показать Шахту Лифта"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="elev_shaft_thick">
			<Description><![CDATA["Толщина Шахты Лифта"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.15</Value>
		</Length>
		<Material Name="elev_shaft_ext_mat">
			<Description><![CDATA["Наружное Покрытие Шахты Лифта"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>18</Value>
		</Material>
		<Material Name="elev_shaft_int_mat">
			<Description><![CDATA["Внутреннее Покрытие Стен Шахты"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>18</Value>
		</Material>
		<Material Name="elev_shaft_edge_mat">
			<Description><![CDATA["Покрытие Торцов Шахты Лифта"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>18</Value>
		</Material>

		<!-- bShowElevatorWall: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Boolean Name="bShowElevatorWall">
			<Description><![CDATA["Показать Стену Лифта"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="elev_wall_thick">
			<Description><![CDATA["Толщина Стены Лифта"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.15</Value>
		</Length>
		<Length Name="elev_wall_overhang">
			<Description><![CDATA["Выступы Стены"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.12</Value>
		</Length>
		<Material Name="elev_wall_ext_mat">
			<Description><![CDATA["Наружное Покрытие Стены Лифта"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>18</Value>
		</Material>
		<Material Name="elev_wall_int_mat">
			<Description><![CDATA["Внутреннее Покрытие Стены Лифта"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>18</Value>
		</Material>
		<Material Name="elev_wall_edge_mat">
			<Description><![CDATA["Покрытие Торцов Стены Лифта"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>18</Value>
		</Material>

		<!-- bTopSlab: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Boolean Name="bTopSlab">
			<Description><![CDATA["Верхняя Плита"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="top_slab_thick">
			<Description><![CDATA["Толщина Верхней Плиты"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.3</Value>
		</Length>
		<Material Name="top_slab_ext_mat">
			<Description><![CDATA["Верхнее Покрытие Верхней Плиты"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>18</Value>
		</Material>
		<Material Name="top_slab_int_mat">
			<Description><![CDATA["Нижнее Покрытие Верхней Плиты"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>18</Value>
		</Material>
		<Material Name="top_slab_edge_mat">
			<Description><![CDATA["Покрытие Торцов Верхней Плиты"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>18</Value>
		</Material>

		<!-- bPitSlab: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Boolean Name="bPitSlab">
			<Description><![CDATA["Нижняя Плита"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="pit_slab_thick">
			<Description><![CDATA["Толщина Нижней Плиты"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.3</Value>
		</Length>
		<Material Name="pit_slab_ext_mat">
			<Description><![CDATA["Верхнее Покрытие Нижней Плиты"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>18</Value>
		</Material>
		<Material Name="pit_slab_int_mat">
			<Description><![CDATA["Нижнее Покрытие Нижней Плиты"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>18</Value>
		</Material>
		<Material Name="pit_slab_edge_mat">
			<Description><![CDATA["Покрытие Торцов Нижней Плиты"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>18</Value>
		</Material>

		<!-- gs_3D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_3D_representation">
			<Description><![CDATA["3D-отображение"]]></Description>
		</Title>
		<Integer Name="opening_in3D">
			<Description><![CDATA["Открывание Двери в 3D (%)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>30</Value>
		</Integer>
		<Boolean Name="gs_shadow">
			<Description><![CDATA["Отбрасывание Теней"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Integer Name="gs_resol">
			<Description><![CDATA["Аппроксимация"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>6</Value>
		</Integer>
		<Boolean Name="bShowMullion">
			<Description><![CDATA["Показать Средник"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>

		<!-- gs_2D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_2D_representation">
			<Description><![CDATA["2D-отображение"]]></Description>
			<Fix/>
		</Title>
		<String Name="gs_detlevel_2D">
			<Description><![CDATA["2D-детализация"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Зависит от Масштаба"]]></Value>
		</String>
		<Integer Name="gs_detlevel_2D_m">
			<Description><![CDATA["2D-детализация"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="bShowMechin2D">
			<Description><![CDATA["Показать Механику в 2D"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<PenColor Name="gs_cont_pen">
			<Description><![CDATA["Перо Контура Кабины"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</PenColor>
		<FillPattern Name="gs_fill_type">
			<Description><![CDATA["Штриховка Кабины"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_fill_pen">
			<Description><![CDATA["Перо Штриховки Кабины"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_back_pen">
			<Description><![CDATA["Перо Штриховки Фона Кабины"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_wall_cont_pen">
			<Description><![CDATA["Перо Контура Стены"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>27</Value>
		</PenColor>
		<FillPattern Name="gs_wall_fill_type">
			<Description><![CDATA["Образец Штриховки Стены"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_wall_fill_pen">
			<Description><![CDATA["Перо Штриховки Стены"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>107</Value>
		</PenColor>
		<PenColor Name="gs_wall_back_pen">
			<Description><![CDATA["Перо Фона Штриховки Стены"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<FillPattern Name="gs_opening_fill_type">
			<Description><![CDATA["Тип Штриховки Обвязки Проема"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_opening_fill_pen">
			<Description><![CDATA["Перо Штриховки Обвязки Проема"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>107</Value>
		</PenColor>
		<PenColor Name="gs_opening_back_pen">
			<Description><![CDATA["Перо Фона Штриховки Обвязки Проема"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<FillPattern Name="gs_gap_fill_type">
			<Description><![CDATA["Тип Штриховки Зазора"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_gap_fill_pen">
			<Description><![CDATA["Перо Штриховки Зазора"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_gap_back_pen">
			<Description><![CDATA["Перо Фона Штриховки Зазора"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>

		<!-- _sp0: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="_sp0">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
		</Title>
		<Integer Name="num_above_story">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<String Name="story_name_above">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="5" SecondDimension="0">
				<AVal Row="1"><![CDATA[""]]></AVal>
				<AVal Row="2"><![CDATA[""]]></AVal>
				<AVal Row="3"><![CDATA[""]]></AVal>
				<AVal Row="4"><![CDATA[""]]></AVal>
				<AVal Row="5"><![CDATA[""]]></AVal>
			</ArrayValues>
		</String>
		<Length Name="story_elev_above">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="5" SecondDimension="0">
				<AVal Row="1">3.1</AVal>
				<AVal Row="2">6.2</AVal>
				<AVal Row="3">9.3</AVal>
				<AVal Row="4">6.2</AVal>
				<AVal Row="5">9.3</AVal>
			</ArrayValues>
		</Length>
		<Length Name="story_height_above">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="5" SecondDimension="0">
				<AVal Row="1">3.1</AVal>
				<AVal Row="2">3.1</AVal>
				<AVal Row="3">3.1</AVal>
				<AVal Row="4">3.1</AVal>
				<AVal Row="5">3.1</AVal>
			</ArrayValues>
		</Length>
		<Integer Name="num_below_story">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<String Name="story_name_below">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="6" SecondDimension="0">
				<AVal Row="1"><![CDATA[""]]></AVal>
				<AVal Row="2"><![CDATA[""]]></AVal>
				<AVal Row="3"><![CDATA[""]]></AVal>
				<AVal Row="4"><![CDATA[""]]></AVal>
				<AVal Row="5"><![CDATA["Второй Этаж"]]></AVal>
				<AVal Row="6"><![CDATA["Третий Этаж"]]></AVal>
			</ArrayValues>
		</String>
		<Length Name="story_elev_below">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="6" SecondDimension="0">
				<AVal Row="1">-12.3</AVal>
				<AVal Row="2">-9.2</AVal>
				<AVal Row="3">-6.1</AVal>
				<AVal Row="4">-2.9</AVal>
				<AVal Row="5">3.1</AVal>
				<AVal Row="6">6.2</AVal>
			</ArrayValues>
		</Length>
		<Length Name="story_height_below">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="6" SecondDimension="0">
				<AVal Row="1">3.1</AVal>
				<AVal Row="2">3.1</AVal>
				<AVal Row="3">3.2</AVal>
				<AVal Row="4">2.9</AVal>
				<AVal Row="5">3.1</AVal>
				<AVal Row="6">3.1</AVal>
			</ArrayValues>
		</Length>
		<String Name="home_story_name">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Первый Этаж"]]></Value>
		</String>
		<Length Name="home_story_elev">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="home_story_height">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3.1</Value>
		</Length>
		<Integer Name="home_story_index">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="above_story_door_pos">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="0">
				<AVal Row="1">1</AVal>
			</ArrayValues>
		</Integer>
		<Integer Name="below_story_door_pos">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="0">
				<AVal Row="1">0</AVal>
			</ArrayValues>
		</Integer>
		<Integer Name="SL_above_story_door_pos">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="0">
				<AVal Row="1">0</AVal>
			</ArrayValues>
		</Integer>
		<Integer Name="SL_below_story_door_pos">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="0">
				<AVal Row="1">0</AVal>
			</ArrayValues>
		</Integer>
		<Integer Name="S_above_story_door_pos">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="0">
				<AVal Row="1">0</AVal>
			</ArrayValues>
		</Integer>
		<Integer Name="S_below_story_door_pos">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="0">
				<AVal Row="1">0</AVal>
			</ArrayValues>
		</Integer>
		<Boolean Name="isFrom14">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<String Name="sLibpartName">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="LibraryLangCode">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value><![CDATA["RUS"]]></Value>
		</String>

		<!-- gs_list: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_list">
			<Description><![CDATA["Параметры Спецификаций"]]></Description>
			<Fix/>
		</Title>
		<RealNum Name="gs_list_cost">
			<Description><![CDATA["Цена"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="gs_list_manufacturer">
			<Description><![CDATA["Производитель"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_note">
			<Description><![CDATA["Примечания"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_location">
			<Description><![CDATA["Расположение"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_accessories">
			<Description><![CDATA["Аксессуары"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_Type">
			<Description><![CDATA["Тип Группы"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Лифты"]]></Value>
		</String>
		<Integer Name="iFMType">
			<Description><![CDATA["Тип Группы"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>4</Value>
		</Integer>
		<String Name="FM_InventoryNumber">
			<Description><![CDATA["Инвентарный Номер"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_SerialNumber">
			<Description><![CDATA["Серийный Номер"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_ProductionYear">
			<Description><![CDATA["Год Производства"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<RealNum Name="FM_ObjectWeight">
			<Description><![CDATA["Вес Изделия"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="FM_ObjectWeightUnit">
			<Description><![CDATA["Единица Веса"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["кг"]]></Value>
		</String>
		<String Name="FM_FloorSpace">
			<Description><![CDATA["Чистая Площадь"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_Speed">
			<Description><![CDATA["Скорость Подъема"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_LiftCapacity">
			<Description><![CDATA["Вместимость Лифта"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<RealNum Name="FM_LiftCapacityNumber">
			<Description><![CDATA["Вместимость Лифта"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<Integer Name="FM_TransportablePersons">
			<Description><![CDATA["Вместимость Людей"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<String Name="FM_HeadRoom">
			<Description><![CDATA["Высота Помещения"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom1">
			<Description><![CDATA["Пользовательское Значение 1"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom2">
			<Description><![CDATA["Пользовательское Значение 2"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom3">
			<Description><![CDATA["Пользовательское Значение 3"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom4">
			<Description><![CDATA["Пользовательское Значение 4"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom5">
			<Description><![CDATA["Пользовательское Значение 5"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<RealNum Name="ifc_CapacityByWeight">
			<Description><![CDATA["Нагрузка по весу"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<Integer Name="ifc_CapacityByNumber">
			<Description><![CDATA["Вместимость Людей"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="ifc_optype">
			<Description><![CDATA["Операция IFC"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>

		<!-- gs_onorm_Title: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_onorm_Title">
			<Description><![CDATA["Дополнительные Параметры Спецификаций"]]></Description>
		</Title>
		<String Name="gs_onorm_name_value">
			<Description><![CDATA["Значение Описания"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_name">
			<Description><![CDATA["Дополнительное Описание"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_maxpersons">
			<Description><![CDATA["Макс. Количество Человек"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<RealNum Name="gs_onorm_objectweight">
			<Description><![CDATA["Вес Изделия"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="gs_onorm_dimensions">
			<Description><![CDATA["Ширина/Глубина/Высота"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_power">
			<Description><![CDATA["Мощность"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_elevnum">
			<Description><![CDATA["Количество Лифтов"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_manufacturer">
			<Description><![CDATA["Дополнительный Производитель"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_serialnumber">
			<Description><![CDATA["Серийный Номер"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_baseheight_value">
			<Description><![CDATA["Значение Высоты Основания"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_baseheight">
			<Description><![CDATA["Дополнительная Высота Основания"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_assemblydate">
			<Description><![CDATA["Дата Сборки"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_aks">
			<Description><![CDATA["Номер AKS"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_leistungbuch">
			<Description><![CDATA["Коллекция ID Спецификаций"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_description">
			<Description><![CDATA["Дополнительное Описание"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_number">
			<Description><![CDATA["Дополнительный Номер"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_id">
			<Description><![CDATA["Номер ID"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_admission">
			<Description><![CDATA["Дата Приема"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_modification">
			<Description><![CDATA["Дата Изменения"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="gs_ui_current_page">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
	</Parameters>
</ParamSection>

<Picture MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="0" length_in_bytes="5652" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000800000
	00800803000000F4E091F90000011A504C5445FEFEFE7B7B7BBABCBB6B6B63CD
	D2D0CCD1CE706E6584817B838483BDC0BEC2C2C2D0D1CEBEC2C072736CC0C1BE
	837B74A2A3A3DCE0DDD6DAD9DCE1E093949466655E6C706CACB1ADAEB3B1716C
	5E7C7D83C0BFC1736D717E83817C807D817D83C1BEBD908B8D9BA09B91918C81
	7A6C696A7C615F56A09F97535352A0A19EB2B2AC968E986D73717B7B5C8D8D91
	8D918CBEBEC17B7C3B8E9190C7CAD1808525A3A3B3817E54D1CEDF6E71548185
	6D81831D5B625D9EA2A14A4A4A808333E1E4DF807E4B5E6560BEC1D2EAECEC6C
	724D7D8904808A0BE4E6B67E846B9E9FA07D86137D7D498182417D83229B9DB8
	7F824BEDF0EF848359A7AB60B2AFC0E0DEED7B7F26D8D5E09B9F5E6B6C81DADE
	9DD6DA8F76791ADEDFAF4F504F4999300E000014AB49444154785E9D5B0597E4
	488FBC4C33BB98B999699867993F3EFEFF7FE342CAB4D376B7676A4FB6AB76FB
	F56B458542914ABBE6DFCAF8A6ABC2096B8763DBB61CCBB8DBE9465D9C613774
	628918E7E3F12897525E4BE9F77D21FAB24B7FC3EEF24B100763390E7086B6ED
	38E62FDAB84293F61100FA5D73D9A18D188F6500689DA8FBC1C11B120015FE52
	18C7419EF773D9CFFB17C2F797E26A3B0A1CBBD743CE781CE018070EA5AFFDC5
	D0B1DB01740881139B8B00DC80014AFB213A3B4D4327EA7400E29B0F1D07D1E9
	86A1CCC76F176229C405CEE1F0E262B1BD1B8FDE8E8020764CC474019AFD3403
	7F41769CB613E070E88AE96406F069BA1DE43D4D86833796489662B91B01C887
	4E045CBD6E0FBC87284A7EB7582C2E2816E3B7637CFCC03111300654A08D814E
	59038D815F1840308E9DE89B689758D670680D13E018248995F8A76004B22882
	488E037CF8B75B1030529FDFB6557E0DC1C6157EA1049C974FFDFB081010743E
	A47D6B80DC83E1C072079695B838121032145EBFDF976114391069A7C709632E
	81CADDC8DFAA012D2F46602E47311074D2DD60381C248364E2BAC89C4C0638F0
	DF43CB2260806409FF343F0B6C48C4B10304EBAF0121B6632068D100A263EBDC
	FA6406903F08BC4142B92CE4A4D4388908D71A5A17A003E71017A0505C6FB7CB
	EB2D9236F37317E06AD3004EDB4840858DAA06A311FEEC8000B8EE84CF01BD22
	08D3A1A50368F05B2F09C39B37785B5E5F8F02939F4F3010B7B661C7E62E30F9
	550D46724BA56702DC893541F6090E6B820B819C0A04017C090443BCA1240ACA
	B651027682560D0081D3404035B9468E4102BE5D83C0A2EC8CC085302C9C9A02
	9C248B81F5E6A53578F966A1D3F3C5326C61E02F15061A1C203FDA8FB3A304FC
	828BAAC03F021CA5028B0082AB0910BC19102FA06064B3AC8C11C4AD1AB0C100
	8BB09E3ED8BE81C2E813BA2AA33E70E2523993C125FFCF10CAB804496000C1FD
	71ED181FC0C1226863A007026CA7518318FC0B24412A06501EC5FF26D6241968
	54C98051411E0C60607D7AB9D5652C2B1043D62D1A00829EDD2840B01C083060
	0182E6DEA05030E8E36B1E2638191AF2739F5A4A84B54F65C7ED25E8740020A8
	3210A0A1A8B78455A69E5B38F18613B9588278E7FC16BB142E8B10108E3700B0
	6F1BB204490446FFF676F8324958DC8881AE3B57BB88FF383C3C440F262EE577
	278530B406B076D5FD88BB207C5A03C43F3BB9A1BFE3C1FC13D73D14D4DF97C3
	09BA3D812271A963480004205897C924294542F9132018E2DC06B5FCDC056D1A
	E80101C9D0C4F2C7E4C744089CB0FF4B2871AE52E85E00EBDF7EFBEDE0976F5F
	0E0697B0E749451EF88985F3CDF5A89AFE6B5D6018C01B96B7A578957822F312
	912507C95C883990B8454CA0BA6F112F119704A1B00990A3BA106FCB532732D9
	95157EA90B0C0384E047213C81EC7FBDFCE3D7F7BFBE7F7FFBFE203B381007C9
	01185120B02C29E6D10C8C41315020B0A0C2286A10E0B42C46CC4001202206C4
	92E83F585E5EFEF2C71FEFDF3FBC7F407E9CFC92B9072EA030125EA4905F35A4
	4B8A2D0034188013B7F9003EBEA941D401804808B11062E95D5EDEDEFE7CFBF3
	6FAF1FBE43FCFCF3C3EBDBF7B71F3F7E7CFEF1F9F383E7999BCDE773973920CB
	D00C581C17A7515487D0D6861D26C09420C2B914623ACD12EFF2E5EDED3F7FFB
	EDF5EBD7DF7DF7FD77DFBFFEEF870746F01CF90FDC2C5B21B22C8150590194BF
	40909C464E1540DC6A445A0205800E41B81604C19F0A5A0948E4EEC7E7BF7CFC
	E516D578FDFA7B8AD7DF3F3C7CBC058E24C93C6FE909D6008910E30A4110DB7D
	1960FE8902961F13B0BBEE739C6F7CD498013C47DCDEDEBE7F78406E220371FB
	F0D7BF1EBCF204281089CB9EAD38501A881AE99D36063A4440A9011CE9D2F397
	4BFFEAEAAADF3FEE1F6F36207A9E890C0171D06B72F0CFBFFDEDDFB91050237E
	E409BD28310314878F34D0E603484E35D0F9B970E0D45F5C2DA6D329D578B33A
	E6E8F737BEE72682A1FCFA5FFFF39F3FFC70FA1C0C78842B514E6418481A5DE0
	B4AF86340E6811465C846094F7AF81607A35F53DEFD52B745E365F653E08E9E7
	D893F57DDF9FFEEB1FFF78D1CD37A0842025DE84F32B09D225FA8F1870940F34
	839622D28066000076699ADA61F86C9C6FB70040E1F9FEC25F2C7D68D36720BF
	FFFDD9DF6733E94FB30CA4BCF248AD90419581C7227C9201F05FED02E0087E0C
	C2304DC330FE1C03752C9F3DFBFDF73BFF6A0110747108946723FCFEEE74E765
	0722C974056A1A604E4D09DA34D0A1C5881950880311AA21EA3EBEBF8F6F3EC7
	F79F3F7F8E3F8F6FC66FDFDE5D5F737EE8E3CA17340C789E472A14DA8BDB1968
	75425BA99029B0D5309422823494328C630926701411C7E1784C3AB85AF9620E
	DD6760808440669C181F521A70EA5ED43A0FD0C9F96D128114292A20A350E652
	226710D682D1DC84373737F915322F7D3202762CF0A19702ED034D278C5B8CA8
	C75DC00104C4401846C8D2F7D18EBEBFDBE667322DF3DFF385FC33D93FEF5B53
	DF27DB3CE0E1F0D23030576D18B539A1097641AE0157A10B06742A10B03E1DED
	B69E106EB6D91DE7B99C290ED633C00000BF2FC4B5273C3030C174545D8CC429
	72FEB0C744D4EBE9B58083B46800AC5349D538DDC1F0B34D06C7C9567E9F80C8
	D9EC2694E7FD928124E11D44C9C089D240BB139A00FD2C02CD800690BE08C3B3
	3002F34E78B64D2CB2DB8D8F647EB69AFA2B98C1F9CD0D560B2176CCC02B1A4E
	2709B22B00F3611EEDE784BD8E1A4A75385D00483503C011AED3283F4B84C87C
	1F9FDF133E724B29D106120C5C1303CB2508B80403C38911E13C779A0C382D1A
	A05D011D1C402DB3D00088649A9EA5AE40BF6F3CDFF381C35F014077D697CFE0
	8842F47D6AC357167D7E62E0082674C21A0080BD9D10878E6E184F0D03804000
	78D1E7103EE259389B01C09A018001C11AD05DC03B0972C2B0EB44ED4E68820B
	001805035D23C2300505002093E480D3FB5E460064882EE8E7F20A2214D7BE20
	0668E77E692906FE94139209F46A0C04A25282543380F5E655C900BA911898F5
	73CD80973003164E2D814317009A326C9F078C0F7443CDC0BD66208DC08025B0
	EE73B00618C0B99CF9E7FDB9D8818165964C788B543230108A0103A175670413
	303E4008E20A0351C140E269048A81D90B94E0E65C6920831150175027160C58
	7305A08EE0490094DFF840576B60460022A68035E0E912642C4232C27379B3F0
	85450C34BA80831970A23D26229B292808A83300FEC3881938D00896A0E03CBF
	E72E90D6C93BA58125286206781A28E781689F89E89B8E9240E903F64D660020
	7417707EA3817006239A0B6CA0FD5DA2BAC0BA9C24CD2EA82F466D3B234650F5
	81120045AA18D04620480404001A98CDDFBD4BC0007E58AE054603B9D2C0D77D
	C05646D8E80203204CCFCE8C11651E311012806737D63B94A0CF1A48F48D2C4D
	40E184FBF8801A485ABAA08BB71A03C8EFC10911C7521EBE7B476B4136058209
	6D4C5C26E0A85C0DA37D2622DA18B63070AF1808CE4C7E42B0540CE49219D8F8
	53910935151B060EDD4609DA7DC0A4E7A83380683280388BD5B8622906682B9D
	A89B691611607CA04E80D3361376EA4EC85DD0D4C0814E0F0D780BC925C8E5EA
	F0A4D040A6F686350D341968DD195545E0145D1031002E8261401BD1180CDCD0
	6AB8F1C907A62C42550243411E56D3B76BE09B622A6E6820351A48A101C5C026
	5B00C142C67628A1817EFF274B000485BE4D765473C21FEA1A6C618028C0F1A4
	06EE55090E92CC30E0F96316A1943C0F7017A8EDB966400D2504C0766AF9BFAE
	01330FA4290198290202EF00005E1546A434700E00BBFEA1B8A23224C480D1A0
	BE43D288360640418D01E94B0340758127A001CD81D640C825E827D834B311E9
	12E85013515853409B0F748D113E72C2D90B056057766156FAC0468D64C0C35D
	A0D3B74F444EEB1D92DA4CE8347DE005AD05A73527D40C48DA19B9EC03BED280
	5B18D1D1231F08DA7D000568F7811734119C8201DD0546035C821D4FC5A60B28
	B9E9827D7DC0EE3534B098D556C3F0ECAC60805EC080946517B8BC16143E30B7
	4CFC14765B76C77B6920250050006D4C00A0A601D5861BEA827321CE692DA02E
	982B064EEA23D93E3E50D5C0BDD6405A9B074E2FC907B24203526920C77D2BBD
	16181F38AAFA008E3D9CB0B91654B6663388804A802E5014F85506D610A110D7
	350DB47741BC9F0F00815C8200CD0047B50B32C3001BD15C181FD008CC44447D
	B0D76AD8D4405A1361C5073699CF0C145D7077AE7CA0BD0B0C842F3D35AB6AA0
	BE33E21218063266605132C01AD8C08658036620411CEEBD2F786267949A8928
	D50C9879A0DA059B860FB80D0D20FD1E5371A7A1814004451700418D016503D5
	2E38146517181B504ED8D040FB1393AA1787DD7B5B0A25C299A4FB24EB357C00
	0C347C80C7725A8C681E98C2079A6B81D867776C7CA0576320550C1C3FF60175
	8742064A03FE4A882A036E4D03FBFB006BA0D6058D7920DDB9850F9881E4389F
	F9A2DC1B1A270406A381361F689F094330B0340309AB80ACD8CCE55506905F50
	17E8898847B2FF67171400980114BFB22F0003C7AC814C1991F1010F4F6F573E
	6940248FE701CABDD76A8868BB43C2087835CC0C03C6095789556820B3AC3A84
	F969D87E87A47D260C8D0F5017AC5FB006D6C7551F300CF8C9A15BF800653736
	A035D0C8BF3F03BA042187990770F9750DB842D4E681760D20DA9F9A35359016
	4654D780976DCC583EA39D9110988AD5DEF0892EC0BDE2FA4CDADE059D8613A6
	8A81D98C67421E48AA3B2319975D9080818598B6F80062EFBB641C8C552E4B06
	0020A579E0D8E512E8229463B92FE698881A53F1496B177C4D030EE78F1C9400
	C16DA886435E8ECBF5D86860ED6FEE2C10824A34D60280981FAB9970DF89A847
	D94B005A84E80225C2B20B32C10CE89D11929B79A0D10622DFBB0B58031DFDC4
	28520CD4BB203D76B3C74E984B54DA5A290449737B6EE56137DD6B2D600D982F
	B1B0061841FC163E5430903D350F088AFED30C3C5E8E5B7746A0C03CBE070367
	5E407388DE9820C888B2EACE080CC4DC052440A301CEBFEF5AD07442CD40A41E
	5A51FED8A1B5403BA15B0EA595CD29ED0D2D7FC30C181F3013D1FE6B41A7A201
	A7EC82B8E284CC40564C44CDFB03622932A4342319AE3934E0ECA9814E550351
	74B60401411C1B270403A60DCDFD0102301757B5D590F39B8928FA535DC02543
	09140371F8360CEFE1842C42BD1664CC40AE1723CDC0542C84B0CC506AEE15EF
	E5842C0030A0F2EB2E30F300B03003662D40091C00D849495B33EA82A608CDCE
	68FF7B44005076018BD0894D17F044543AB1590DF5F30218312FC7D0A126C0B4
	618120F8DA6AA81970B80BB413D6BA80D36B1F189912CC692A2E17232D82A352
	03FBCF84E62B1CE4035402276C7401A2D905E77DE503F4E0F0B10F10827D3460
	9C30320C04415CDEA0C88D115566C28DDA9A511720B2277D20DA7F2D305F2261
	1122017701C7FAEC981E9A7A1B6870A51EDBD9C5CEC84C44880A052762EB5405
	80B0EDD6B5A0537974DCE1ED3947AED277F3D9F1DCCD28D8F57C21CB9DD1EE10
	78F444E49603019E9C8A0B0DC0780126CE2FF900A7B781391CD5B6E7DD35E2FC
	E81DC5C9C989757232B7940FAC490389D8E89DD1C4451402B04E1ADF68E471E3
	4B13911989C25C8FE58EDA9EAFA181D509B2BF2B232F44B8DBD5EE13BA6620BA
	B8B80E46A3601420CC57A5F79809F1FB235129418AB16C2DB339A73700BAE55D
	3216615D03278796F5E9628BE42375100C07E6FE3480EAC36BE845CABC399663
	FC5D598440A33829AD184F4E3503074603EAFBE6175C820031E2733C1EB7DE1F
	E8743402C7198F83715E1161C432947331B7AA0CCCB40676D405E73022A50153
	834F9F2E86C3E1C5627B8D3A388E2E46DCF64D2AA501023C96529A12447A8704
	06FC795303E7C52D9ACA546C6208001C17C405E78F6DBBED3B241DA4C70994E3
	1110180DA8A0D96BB51206417D35D41AE0D05DF8497C5A8CB61788C570B81871
	11CC40D2880EA7EFA97A9101D2541CA4350D64C85329426E9C70CEABA1F18139
	BAF44888FF1D8EB8F5204088910970ECA745481EC03B13AD96D89622AE33B096
	53010E84650034D68245D30945A0BDCFE156D0BDD8A6810EE7E788ED6E57FAB2
	0660268901B158910C9A25B0C479A30B4E708AA018B08A8F8F6863402B9081D2
	0E320C8401D0E5F719CC762A56D34206A5131A0D88C99171423F88B4F520BBF1
	22BB45039C3F566E6177EDAE6C740144E80B1401202CE303B3636660A8EF90B8
	2A9880BB30A2E44195FEF687566CC2711023FD1808D02B373E72224564BA009F
	1F440385F5840636E40399A509985B573C0E13846AFE760DF4283FC568F16978
	211677FD661BD23658C7F484AA5061A0B843E29622EC877A4B04F655FD75B431
	00FA2982EDE24287086316BF616055E417AB13A381F5399C304317701BBA1001
	6C7897EA7C81B6E1B68D8901C0E98391062070C5411847C572CC0C3005CBA927
	042D0A92E1F1CEC89D9EFB19801DB84719465217D874FE113360E86FFD62B38D
	80FA83B7DBEDF68E412CB06E0558062412A5B07DB99679F16D5A9F64D0A712C0
	8A37DC058C2E9B8082F94AA6320821AA82FF7D46B2622D8C7529F0CDD1F1E8AD
	9C497C46B9561AA81CF94F534B1A0DCC79229A666E7674E47AD8910781CA4FFC
	D71F9BB632D05356A0035CD19F9052DE70C235BD96F97FC2D5F7899A99DA17B8
	2B6680BBE018F20B5370ED8CD9559D66B4326046425CEAC5EE86F61A28BA5D56
	61950379F68C19200DF8E6FB03833CFCF0E143A815158C9AF94171F8350638B9
	09C9001061F745147509C833993F1B010220E9E59875210E132B3B9667EB5062
	F0191BF9EFF7F49C11E80294AFC88A74EB2EC787A8ABA203930110C862CC6BC1
	157C83F2C307128448B0F862A821F9D941F3F640FBB76A194223504929CFE26E
	233AFC4AF0C2188ADC0A8A6172218696C0311C5EF3BF7AADFDEB49BEDABF53CA
	F9F1D28CB03B82D8BA5F88908084E0A27FED03822586E2E2AECC6FCE227F8B11
	F5DA10D8722C03E2BFC640838D5E97B08621DAF759BEBDBB1B0140507EE8C0BC
	B77FA794D39BFC75005C823A880E27EE54B160410518CA1193FFE0B39A12140C
	C4ADDF29ED18093444800939E674FFD2E93AC5A14F448F70D84483F233301193
	82EAFCB7CF03DC05EA781C589F639B72ABFC404AAF360EBC56EBD2D361F3C242
	B94C72A341672F276C3240D03AC5C548F54F8A0AF4D41B72F301138AF516A709
	23FE530C38CC401C239B3ECC1B01E1F4050A86A519A0B10A6132ABB3390FFC1F
	B8CECC698D2ECE3A0000000049454E44AE426082
	]]>
</Picture>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="1" length_in_bytes="382" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000C40000
	0046040300000061F0268B0000000F504C5445FF0000000000616161CDCDCDFF
	FFFF11AF4D5D0000000174524E530040E6D8660000011349444154785EEDD841
	6AC4300C86D1D10D24D413F406E23F8161EE7FA66E5A6427969C8227031EBF65
	B0F9704416CEE3F36C724D1020711C25BE9E579420A170F69204A1C6AF48286A
	1626642C48105A1C25F831424142D1B20B09A90D1384231E2714CE8609C5914D
	4E10CE78EE8B529CD9D471137A384848AE9F50F45890C83FBFD24D10FA384848
	A69F50F4599050C4AC9B204478564211B14909428CE724D20D8B25768290E11B
	133BA1C8D852899D20E478A5C44E2872765762270823BC4E62271423764F6227
	0863FC8E84FCFAAE453756924AB3DE7174EF2EA8FD3D3D259EAE34EBDD2921E9
	2964C629463C914B7EDC05A77075422439856B12EE380B57EA0DF12C5C592E21
	92CCC2FD7F161F67FB01EA62B94120358C610000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="2" length_in_bytes="2011" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000001880000
	00460803000000E108F364000000017352474200AECE1CE90000000467414D41
	0000B18F0BFC610500000300504C5445000000616161CDCDCDFFFFFF00000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	00000000000000000000000000000000259C733B0000010074524E53FFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0053F70725
	000000097048597300000EC300000EC301C76FA8640000001A74455874536F66
	7477617265005061696E742E4E45542076332E352E313147F342370000032849
	444154785EED9A516EE3300C44D3EEFDCF9CDACC38A15C7229C99EC041E77D14
	8229F1899E221B2C7ABB8B4BA0202E8282B8080AE22228888BE083B89D0A9A7A
	503909346D40E924D0B401A59340D38526887F27120681DA2F6E5F29F919346D
	A08F403328881C05E1F9AB41E0B3EB20ADE3095DF0C1865F41607D88AC115DF0
	C106DF933E857B8EDF8A61703ABB297D049AC1F7A44FE19EAFCB17DDFF46B8D3
	E14DD3C2286F37F89EF429DCF3DBD407EDEB747253FA083483EF499FC23D5FDE
	E9F7300A6290AC917BAE20768D7C4F57C247C130389D5CD60B9841E03273F846
	017E8623EC0D5EE61DCB720277DA37DE6804CC20969FB3F4199ECB59FA834070
	43F81BFAC61BAD006F7780FE2070A1713A0D58E2D03876C9C6E065AD03C30F50
	4E4117A030D5DCE835607944B33378D9514739055D80C25473A3D780A5824804
	284C35377A0D582A884480C25473A3D780A58248048F6F94EB4F9C18A5C37070
	060397DCBE2BAF7819FD3DD105F7F53FAD9619BFAE1E845D72BDEA132FA3BF27
	BA404118E51474818230CA29E80205619453D0050AC228A7A00B1484514E4117
	2808A39C822E50104639055DA0208C720ABA404118E51474818230CA29E80205
	619453D0050AC228A7A00B1484514E41172808A39C822E50104639055DA0208C
	720ABA404118E51474818230CA29E80205619453D0050AC228A7A00B1484514E
	41172808A39C822E50104639055DA0208C720ABA404118E5147481FEE4D228A7
	A00B5038F0863A0D581ED1EC0C5E76D4514E4117A030D5DCE83560A92012010A
	53CD8D5E03960A2211A030D5DCE83560A92012010A53CD8D5E03966F09C2B37C
	D34AC08607AFD3F11474010ABBE606DA0560C3834E039638F400ED02B0C16197
	6C0C5ED6383CFF097EB7F175DA37DEA00B5068CF18271B9ECB17DD06A33B8816
	241B800D1B38DD3A9ED00528606F03DA0560C3866F1470C20CC6DEE065A97C94
	AC115DF0C106DFD34A214836001B762497A50B3ED8B00F2264ECE3EF411644C8
	59820F36280805E150106D1029F8AC0BC0860034F5A012806E01D81080A60D28
	05A05D003604A069034A016817800D0168BA10CAC4FB51101741415C04057111
	14C425B8DF7F00789B069A590E2B470000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="3" length_in_bytes="705" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000001260000
	01180403000000039A46340000000F504C5445FF0000000000616161CDCDCDFF
	FFFF11AF4D5D0000000174524E530040E6D8660000025649444154785EEDDD41
	6AE3401484E1282770111F60189F20D60904BEFF9966318B4A02ADA450DEA313
	FDB52FFA3336D8DD6D9E9E4E1142F4B534149CEBE32BD91A0A7903933E8F1BA5
	05372EAE0FB2B85155189BE448810913A6D93FE38BC6B9B8D15170E3318E1B2D
	0537368D7275A3A7E0C63A8A1B5585F94C983049DF6B925A4D983061C2840913
	264C983061C2840913E705FD264C98F43F7F9DC1A96C51617C3EBEBDE50F4EAF
	8B0B6E68F82AE4466961FEFB1639EF5F85E34669C10DE7E3BBED6CE585DC8449
	DA79B79D86C2C942082164C2EF96862FED2213A68E1FCB693A3615693A365F69
	3A36A9693A36F3692A0F3D1A4C983061C284A9E90EA8DF840913264C983061C2
	840913264C9830F5EFCD3161C2D47CB731F71DD0FC7765F3DF29F6DFBD9EEBDE
	1C13FF3B2C08218430EF304BC7BCC330F90A98CAE61DA6E99A7798E7F87CBA45
	8E2E810913A6B93FE31AE4E86E3E5FC18DFDAF9703A67C0537B493EB0153BE82
	1B2FEB38074CC10AE73261C2245D5468F20AC1BDD46DFD73BB5599BC4260C284
	0913264C983061C2840913A659F752FD7B4E4CF39F1760C224A968E241BE824F
	AF4B2643E42BB821A9608246B0C2BCF72DF513593AE61DA6A99A2D88A97C6254
	C10A84104278CE729886E707179930953C67F904E30B077F5EC384E9778DE81C
	C7A6A070D8F4D8CB665350386CDAB4139B8242C5B839E7D5A6A4900793830993
	16E95D410A0A25A6FBFD79BD0726171C4C983061C2840913264C9830613AD15E
	CA5BC8C0E4C28F33715E8009D3DEB42F9B8242D9F8421F776785B2F1858E4D41
	81F1858C2F9CC2C4F84242C83F6FB7924AC3BC6AE30000000049454E44AE4260
	82
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="4" length_in_bytes="386" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000820000
	00E4020300000029C0142900000009504C5445FF0000000000FFFFFFCA92C399
	0000000174524E530040E6D8660000011D49444154785EED98310E82301486DB
	041727065D3C8D0307E840AF6002A7F0082E2E9D2D899E5268196AA5FD635E88
	A6BE8FC4817C79BCC6F0F75151141B3D734CDDC4C6F6E1B9BF188F99F3970C36
	E8FF6DB9300C6721DDB0DA413344C0DEEB19E3E08ADB4543874459E88DDEDDBA
	2C66615843FD4416C2C74A81A8A0B1F70B26D59084B55060380B6DB28F1E1BE9
	FC689D2723C3E78771BFB7C8D0EF7CD007CF85383F2A9841126461ED0AA12CC4
	35701F782D7F0AD38E571E2576C068C62B4F05B75C290534E0DED0C0FC68E0DE
	D0C01CAB5736709EEA9045A39BBCC1F4936D710D3E3328049E0B792E0CDF7D9E
	0B29F05CC87016AE73C6E63D953082F3B18C7132DD60BA6B34C3A4BE912DA146
	AA0F1DA032460159C8E785A5F204D949B9B2F19248AE0000000049454E44AE42
	6082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="10" length_in_bytes="677" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000B70000
	00850403000000EBF2740A0000000F504C5445FF0000000000616161CDCDCDFF
	FFFF11AF4D5D0000000174524E530040E6D8660000023A49444154785EEDDAC1
	6DE020148461D3C18C4C05E9C0A20224FAAF69B5AB682FF6BCE730245C32777F
	FA65199F38E251AE643B90D845E338D267B3F03AC43A339C44123EE4F274E4E1
	F3E97938C55EA4230BEF0AAF793AD2F0B33DEE7A918E34BC89BD48C78BF0E974
	E4E1F3E9C8C3E7D391861BE948C38D7464E14E3AB270271D49B8958E24DC4A47
	1CEEA5230EF7D211869BE908C3CD7444E16E3AA270371D41B89D8E20DC4E870E
	F7D3A1C3FD74E8703F1D3ADC4F870EF7D3A1C3FD74E8703F1D3ADC4F870EF7D3
	A1C3FD748870275DE32A3C4FCF711D9EA7A7B80CCFD3B7E285836D721C448C57
	07EF5BF13E8FD71C3F67F12BC3E9E18CF1E1E0632BCE799C39DEA697E0C5C511
	E1D5C3FB46BC3B78CDF0731EBF629C2ECE081F1E3E36E2747066783316E2C5C7
	A1F1EAE27D1BDE3DBCC6F8E9E05784D3C7A9F1E1E2631B4E0F678C376BBBF0B2
	0287C2AB8FF74D7877F11AE1A7875F1AE70A9C0A1F3E3E36E1747146783327F1
	B206C7335E57E07D0BDE7DBC6AFC74F14BE15C83F3191F2BF0B105A78F53E3CD
	9EC0CB2A1C4F785D83F70D785F8157859F3E7E3DE35C85F3091F6BF02170AA7D
	DC46B5AFE3F7C22FE3724FF8507BC2CB3A1C77BCAEC23B6E17960AF59EF060B8
	5DB552B8FE5AF46E97C4CAB16C1017D866CA75FE018167EF3CDDE73BE70846FD
	B5C4CF7D7E2DFFF0BE0EAFFF8F12BEA1FC86EF29D787C82F8F0E915FDEE426CA
	7DFCB73C3FA10CA7F177FF96701F726FFE8A3FB0B28E82EFF9E5BFE5659D8D9B
	C65538CB5F1CC125767FDF5AFE03EFFC0F74D8B125E60DE5300000000049454E
	44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="11" length_in_bytes="600" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000AC0000
	00750403000000212E170C0000000F504C5445FF0000000000616161CDCDCDFF
	FFFF11AF4D5D0000000174524E530040E6D866000001ED49444154785EEDDAC1
	6DED301043D1C70EC46F3590DF81E00A04A8FF9AB27C882D8E1371A255B8360E
	2E8459FAA506AA95C7E12547BDD7D35874EC5063795041CAD82AD9FE988B28D6
	C80D623BE7ABCFB90862A9F69C8B28F69CEF1BB908620FC1B6E75C84B1CBB908
	63977311C5AEE7228A5DCF45106BE422883572A1639D5CE858271732D6CA858C
	B572A162BD5CA8582F1722D6CC858835732162CD5C8858331722D6CC85883573
	2162CD5C8858331722D6CC858835732162CD5C8858331722D6CC858835732162
	CD5C58B1EF5CCD46B1716EC4D63036CEED011BC6C6B9DB59D67E2CB2AD764A76
	18ECD8CF729965C89EABD32C4CB608B65A6CDFCD7683AD017B2CB34DB234590A
	7658ECD8CDD26019B0E7FA140B9B2D53B69A6CDFCB768BAD923D0CB6099636CB
	293B4C76EC6569B194ECE96CCE22812D13B6DA6CDFC97693AD823D2CB6ED6499
	C072C20E9B1D3B599A2C057B7A9BB14861CB8DAD096CDFC7769BAD53F630D936
	6199C2F2C68E0476EC6369B39CB2A7BB3B8B24B65CD89AC2F65D6C4F60EB843D
	6CB6DD5826B1BCB023851DBB5826B09CB0A7BF2B8B34B67C616B12DB6FACDABF
	FFD77D50EC27ECFD42DA0F58B53E61E5D71796692CBFB023897D5F18C817C994
	B725DFB52C8AD597A0277ED7C95C499364A3BFBF5AE166AA70580D316F1B6A7F
	E76D3F016074B02B55911CE30000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="12" length_in_bytes="501" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000C20000
	009904030000008F86F8360000000F504C5445FF0000000000616161CDCDCDFF
	FFFF11AF4D5D0000000174524E530040E6D8660000018A49444154785EEDDA51
	8EC2300C04D0F8061EC805E006152788D4FB9F6951BF0ADBDABBB54340CCFC20
	A192A7515281A8CB43A464448D0B1003FC550439D1011DB2F7C107E244EF7C55
	07BF9A267540DEE9967FDF87EA26B7C3F87DF0DDFCB5FC7C58077610F488BE56
	A8737EDA86D0B6AF34806ABCDB0677600776600764E55150B9A72EE92308561D
	92BE811E05400DC18F2F148D76880BF91DE2BF5BD196E83D1216BC0ED0BF08E7
	DB5E264F10A0B350A47CBC20C0F89DCE3FADF18CBFA711CF78618EE63B848648
	6A7FA1C2BCE316E17C3B9EE9B903B4B32040EF0E525E2450A0408102050A1428
	50A0408102050A142850A0408102050A020CF9EF1E5B395D9F7339F0FCC1127E
	179B0E3F43D94CDB10EAE1274D3520B4F91D3A00A17D00E04C8400089DA545F0
	A65A343C0B6D4FE6C43B00B0A68B02FBE009FB6975F72C35E373865003425B80
	FA8D1D8C9D4EEA609CD6A40EC6544BB4832FE4766007583184A479EFD3752F17
	471896082DEB15DEBD033B680858081B9080A0AB17EC0A8864BD820EEA90BF0F
	3F3E182EE6E651F5480000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="13" length_in_bytes="448" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000A80000
	007F0403000000895E94100000000F504C5445FF0000000000616161CDCDCDFF
	FFFF11AF4D5D0000000174524E530040E6D8660000015549444154785EED99C1
	69C530104435A960075C40500BAEC090FE6B8A09214B2CC9445ECD3F847D17E1
	831FB3F2E08354BEB1B2005C1EE3D2D6C2450893CAF6D49D71AB807F96D42623
	E141451CD8E3A4BC0163E449F57BEACEC8EB71F44933290C64212F0BFDE9BAB0
	FBC24F7D0D804B238B4BC1AFA42B7AEA1ED25C1AC5C717242D26FE3FC77F7DC5
	CCE0E3CF4AC7E3D3EEA5FB90B114E47A6941914865E33B810FE5D0B4958AE31E
	AD140C632F926E1F418E8BF46489F44428F5F119C2C75F283D0E027682DFD23D
	8027A5AD9782142485576A89F44426D58D9FD2AC54562A40562A2B9595CA4AA5
	342B95D2AC54566A9AAC54562A2B95954A69560AA4FE54B24B6D983B3FEDB237
	4C9DF476E949674ECF8F88741B9D9E07A483D37332B6A7A48F4FDABDB4368CA5
	9D6B63846F4AFF7CC15DDFDF6A2DD5977A7BC1ED08A43AE27BFA32322914D3F3
	B994C3A00C6092A4EA3DFD04D8040F60756780740000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="14" length_in_bytes="534" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000C20000
	009904030000008F86F8360000000F504C5445FF0000000000616161CDCDCDFF
	FFFF11AF4D5D0000000174524E530040E6D866000001AB49444154785EED9B61
	8E82301085993DC13CED05744FA09CA089F73FD312FC81BA3064DB99B284F7FD
	3151E1F33925D576E8DE90CE03355E43BDC03E8BC0076D9B21A40EA6C04911CD
	2133C85F6BAA7EA30F3E1904CBE82AB119DAD7C1F6C69DCB66671998411081B6
	35A4873F79C690E7DF690892F16CDE380333300333C08B7783CA401A8931085E
	3238CD40EF06400D43199FDF927306DB109FC1E9772BF2880E48B5612D0374DD
	D0C9B95FE2B6661020D8D049B77B8300F1956E3E5AABD9FE9A1638B0B1C16336
	3D840175A478438275C58D86BE86DB670668B04180E80CD235336064D786AF41
	0FAF3AD040C38000BB367CF7FD7D30DD5B1968A081061A68A081061A68A08106
	1A68E07F51AE3AD0C0B5CADDAF190BB0C5DAFD3CA7EB2797E2FD8779CEBF8B5A
	BA87324F9E31A4C27DA05C65C88FED3300A57598303B4204281F4B93C1EE6A11
	875E68AB33A72AC384D15D545707DBB04C4E8B63292F1C671A72B1613A3A1D31
	835169A70CC66875CA6074B57864B00DBE1998011686C1A9DFFB745DE2B26A68
	8FD30CA44FC1FFCEC00CE2F0F1D42C346A0CFAF280987B1547039E687C864675
	F801A25D32B9027F5C520000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="15" length_in_bytes="461" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000A80000
	007F0403000000895E94100000000F504C5445FF0000000000616161CDCDCDFF
	FFFF11AF4D5D0000000174524E530040E6D8660000016249444154785EED9951
	6AC3400C445739C10CCD01C2E6083E81A1F73F5397D2A2B4AEECDA924A4DF47E
	4C3EFC98B50743A4F6015A00F2EDA7436A5A184462D2B467AA4EBF359BF32785
	19E97852B1A5389C942B884D7AD2FC67AA4ECFED7EF293565281908D745F3EC3
	4106C152E17BD2889EAA87844A9DA80709491B92BFCFFE4F5F03207AFCBD52FB
	F8C4BA7432B1A542C64B9BB49348853CFCF69B09915B293FEA49953200FC8DF4
	D5CDFC553A88910ED2A47AFC993EF4F881D279A60806F2287D993C6852225E2A
	644252D14A85480769D2ACE397B42A45861C3F5B7AB9DDA7E9FEACD2418C7490
	27AD175595AA4A55A51C54A54A5A952A6955AA2A759E7F273544286955EAFFCE
	FA88EDF9695FB0637E6A49A7053B26BD063F49774CCFAF2EE9D5989E3BA4C6F4
	DC6429DDDE48905897F605DB525D1BC3BF29FDF582BBDF2EBDB7FE70D95E70EB
	2A1E41D27C1072773E9514094E57C96848E9022949B39FE91BC07A31293D11DC
	4F0000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="16" length_in_bytes="528" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000C20000
	009904030000008F86F8360000000F504C5445FF0000000000616161CDCDCDFF
	FFFF11AF4D5D0000000174524E530040E6D866000001A549444154785EED9A61
	6EC2300C85EB1BF8410E30D809182788C4FDCFB488FDA860ADBD616759D5F749
	FD83C05F9F9C0A483C3D2053066A14404CE05711E4A0033264F7C117C415BDD9
	6506F96D4F356FF5212783601D75C9CD30BE0FBE37BF96CFC6323083A007FAB7
	8672CBA72E18EAF23B0D41315EAD83333003333003B27834A834CA9D3E06C19C
	0149DF408F06400D838F6F98349A216EC8CF10FFDD8A7A471B12367819A03F31
	1CAF6B5C3C83009D0D934C9B370830BED3F9AB35CEF8671A09E868C32D4CDD83
	A122467F43AD309FB866385E233C6580763608D03B834C5B357CB16D432BD564
	6F34D010018002D8B4E1BD556ED7476F030D34D040030D34D040030D34D04003
	0DFC2FCA5D071AB857397ECF5880217BF758E2707EE6F4C2F98365F81EECF2F2
	19CA2275C1505E3E692A2143199F0140B00F809A132100826B09506FAA45C313
	8FCE644E3C03604D1705FAE019D6A965752D55E37386A1840CE57EED3083D1E9
	A40CC66A4DCA604CB54433F886DC0CCC000BC39034EF7D38AF71720CC388A975
	AEF0DF333083866F4F6D81440C982B60D580103A57D04119F2FBF00933F23965
	E1726CFB0000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="17" length_in_bytes="468" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000A80000
	007F0403000000895E94100000000F504C5445FF0000000000616161CDCDCDFF
	FFFF11AF4D5D0000000174524E530040E6D8660000016949444154785EED9961
	6AC3300C85F57A023DE8014A6EB0F50485DDFF4C3363456B6687399206067D04
	4C7EF8E3D91681C8F28D4A00D8BD3AA4430B83484C9AB9A72A2140B2593FA94E
	46C2891231A0A793F2008C494F9ABFA7E6F44CF7939FB49242410AB91B686FFB
	81DD097886530026F50C2605BF9246ECA9794835A913F3684252D1E4EFB3FFD3
	27AA0A5BFEAC74BC7CEAB1F43E642C05192F15C8225290A74F5F8650734BCA8F
	7972A56000FF23BD7EB879913662A42299525B3E7D3401345C7A25B58157E9DD
	C3DB3329355E0A322129ECF443A42279D2ACE5FBA525AD9222095D41FADE9ECB
	6D456923462A9226AD83AA92AA92AA92AA92F250D22AA9925649D5412DF07752
	4D84486949ABA440E67725BB6CBF98EB9FF6E8C49FEAF476E94967BAE70F97F4
	31E89E3BA483EE39E9DCD3C6FE3216A4F3F41B9D6B63B86FCCFF7CC1BDDD2EDB
	26DB8FE1F082DB8890C2A4E92064763E95141989E891AA74015DA4244DDED34F
	994521CFC6EAE21B0000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="18" length_in_bytes="504" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000CB0000
	00900403000000549C82340000000F504C5445FF0000000000616161CDCDCDFF
	FFFF11AF4D5D0000000174524E530040E6D8660000018D49444154785EED9B51
	6AC52010459D1DCC85AC205BC80A84EE7F4D95A490449F5ACCA80DBDE7E7C103
	391C1404352E459D0152FB536C34EACAC0881935D3E626586C3C4378610D6BD0
	85C4852EA4355F1D886A4ECD6223F087E67535AC610D6B3C8C58EE1A951FE077
	FA6804518DD5B676D7001A5C5D35E7A63C42F30F6A044FD0528DBDA65EF36443
	F0999AEE9AF93568255B63ABF11E22CB0E44C469B9666B23AE119C351D35808E
	A8717AD68CD0B086354E55E1775411E8A2815E6B7A6904B8694277DF25400D35
	D450430D35D450430D35D450430D35D450430D35D4D81FDBCD3F849C7FA4EA66
	9C4307918CA9610D6B5E78852728D7C4AC0926D7AB3169C02F2F8B8B35319F34
	0657DFBE51B3FCC11AA0796E804403E8E71AA4AC09754DFD7192B836741FDCF0
	D4AA5E93B2343F1CDB129A3405905F69B971354DC8F57B58A3663906B3A6B004
	2C6B0A0BDAB466CB625253D70CA8614D8982C6F43B82354B45331B754E9E6F6B
	87405E59C31A7D54ACA7A0681115DD0568D2E0F2239AD720F0E475AF5E070FAA
	193A37DF35754EB7C1CA8ACF0000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="19" length_in_bytes="475" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000B00000
	007604030000009A2804C40000000F504C5445FF0000000000616161CDCDCDFF
	FFFF11AF4D5D0000000174524E530040E6D8660000017049444154785EED9A51
	6AC3301044777B829DC407687C039313187CFF3395BA150B924CA9341B08ECFB
	48C8CF6318263F92C4111506260D100668B22A38D8CB12F33B763BDDAC12497C
	E24C0C014C31FF5592EB2F64B182FAC7730F6022CA17FBECF8E2A85598046152
	758C299A8EF9E236F131419D982F8E4FECE0D831C872A05A054BBCC04EB4DFF1
	7E7F0EB12DA50A9827668A15084AACDE315F1C9F584862A912F3C46FDEB199C1
	00C0A8629C1FA26CB1023FE2FB73B380B991C4F21A31B30A8638C539B75C45CE
	2DE796E29C5B8A736E39B79C5BCE2DC539B75CC59B1C84C0A4DC9AB25761DF80
	2E96E073B7F367843813170889838F79F91DC71FFEC3FA8951715B6B1ED7172C
	B8BC6069C56D355B5F5C124BBFE39ABD235E462EB18E654CBC9F6269C4A4C485
	B66360B463C0AB00ACEE18185A858BAFAFE86DE221C5BF1E15DC5659D7CF8FD5
	BF1E7F3E2A70A8E2787C6E931DC79389FB68511AB98932421D135FC6D1F20C0E
	8304268EEFF80B40952F7BB184ABB00000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="20" length_in_bytes="515" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000CB0000
	00900403000000549C82340000000F504C5445FF0000000000616161CDCDCDFF
	FFFF11AF4D5D0000000174524E530040E6D8660000019849444154785EED9B51
	8A83401005BB6FF01E7882BD822718D8FB9F69C9643F4CD44E9C743A115E4110
	0252143331A0ADAD8125E08FBEF41C0D2C86497CB0A67E6D6029B89570C21AD5
	30E46717861CFCF9CFBB30645DF31B1068E2F36CC94233E568DAF55050A39A0B
	DB9B39B5E6C2F6664EADB97CB6D725AF26D6A8A6719F43D7B3E95603FF87AD73
	E82AFDB4C67957034BC16F3524CC7CADF1976A70AF316CD7F8C0DAC49AED9AF5
	C6E6D3D7B316D4646ABEB066786D8ED50CEFB4D6E83E75E8EE86B8661EE3BEC6
	19D4E4694854D4184A6A0CF6F535AA518D6A00B07500927C8B8658D6BC4BE3E4
	8D669E59B005A491461A69A491461A69A491461A69A491461A69A491469AD2DB
	76F53721EB6FA9DA27EE43C3CC6B6A54A39A133E5E750635998FBE8B1EE40735
	6563096D503315D7D40FC090D8AA491DE7898793DCC6403FB970D4AA7E70AC53
	3FD4D7C7FA5A0F1BD44CD79355136C81CC9A6043A7D6CCBBA4D5C49AFC1AD5D4
	0FF85BD9EB0AF5C0CC5FFF5BB38E9FB2463578A9180B41647138BA8036021707
	47FCBA5FD7710C2C4F2EAA295D9B3FE62470090A155A330000000049454E44AE
	426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="21" length_in_bytes="470" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000B10000
	0076040300000075EA6FFA0000000F504C5445FF0000000000616161CDCDCDFF
	FFFF11AF4D5D0000000174524E530040E6D8660000016B49444154785EED9AD1
	89C340104335578194B8808B3B08AEC0E0FE6BBA0FB331E7B143B0670C81D1CF
	42020F21E49FD562110C1122BC840809CEAD2946BCC8736ECE06C4A30DE1BADE
	737916249AB68E5B8FBEFFFDE997E3F1FACF1F0D489B154E36C57E820B472260
	FF7EF1BAF56B3DB42340AE7E6FC8F761ADE727E4753734AD356E90BB695372F5
	CB21B79C23C8EF739EC6A339778E6C8E7CAC1B5D27526606EE78BE0F87F47C79
	3635CFD16489AE1BA7C9B3D83C47939372769E53C8E5F9A26E8492BF3F679232
	93C458B2084088279B3493EFC39319AD0B22E32A72661AF9E42257EB8A5CADAB
	D655EBAA7545AED65537AA75D5BA2257EBAA1BDF727322A22DB1E1DD20094B20
	23FBBECE0030F926B03C23C073F22D716ACE12F3D625EF3968114B5CF1BCE7C8
	E5D1AFA5DD31F2B8B7C3067946FA2A2D719573C092BEBFFEF3C43B8DFC170B8B
	52C8F932003C95F3A52ACF5ED6980C06A395D18E91B96FB9BDBBD341E57ACECF
	F90F955D674D701DC41B0000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="22" length_in_bytes="540" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000CB0000
	00900403000000549C82340000000F504C5445FF0000000000616161CDCDCDFF
	FFFF11AF4D5D0000000174524E530040E6D866000001B149444154785EED9B81
	69C33010457D9DE03EF504E9048D261064FF992A4441B5955C8B7417D7E13F12
	3001F378482062C94B8F2E0EC86F3F8A8F46171B3871744DFCD8B85A9A279E13
	D6B00621742E84D0D7DC02D8D534CDEA23C84D73AA1AD6B08635194EAC5B8DCA
	37C895188D6057E3B5AC6D35801657B4A62DCAF19AD7AF11CC61D4C468EC9AB9
	05C1A889D41C5F836156A3C653B3026B0522B2A85D9306F9DCD6085A4DA006D0
	F89A827635A11AD624D6A82A72451585100DF4674D9446808D2625044D81D36A
	507915CD7ACBEF295D0335D450034000BC86E65A3E6F45F7410D35D450430D35
	D450430D35D450430D35CFFD8B2B409826FE2164AE9AE047AA4D636DACC46B8A
	480EA9610D2A88AE41E588AD88BEE6845B7802BB66CFA5C3657B754FEAF8E366
	B159B3E79EC661EB3B8F6AF2EDDFD500E36303EC3580DEAF0106675AAFB10F27
	C9CCA15719386A35508375F8E058EA18D218E0F14C33EE33352537D7B0514DAE
	5FD61853C0B3C698D0AE35E9217E35B626BE86351686C6F53D82CB43606B0EA6
	AE9EF3CB5ABB3C5F0D6B74AE589AC0B2888A5601665E8D43BBBC0F0A73A77BDB
	CD38A0267C6CBE0059E353AB103039620000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="23" length_in_bytes="490" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000B10000
	0076040300000075EA6FFA0000000F504C5445FF0000000000616161CDCDCDFF
	FFFF11AF4D5D0000000174524E530040E6D8660000017F49444154785EED9A51
	8AC2401044ABF704559A0368F604921304BCFF995658C340C7203BE90EB8F4FB
	F1EF5194E5CFB468C01001B146884058A535C5C08332E7F66C40BCDA10CEF199
	2BB320D1B4FF034F684FA2CDA6A89FA0F748042CC30C666506D3B6416441B89E
	B50FBA9E73CC3EF37D0FB3CB1C6CCECFECD07D56370FB3DB4694799E650FC0D7
	3DCFE7A9133DDB30B5CCB166894999C1ACCC200EC98C20335CE640F3E7F74C52
	6692186B160108F166937ECDE7E9C68CD50599719439AB8D7C73996B7512F561
	E6EF69BA8CFFC28C203352CDF50DD6EA6A75657E4FADAEB651ABABD5D5EA6A75
	659674D4CB8988E5121BFEBE4112966046F67B9D0160F24B60654640E6E457E2
	D49E25665F3D7C66394EA3E7BA7DA9D1F6A5666D5EB773D36BDCDDCA67F6CC2F
	CC43D745EC3EF49A0777115B88C98C37D7D2CE9E25360F7DCF52DF369A79FBFA
	4F7442E06FFF58388D18C7CBD7D83EAEEFFFB1D0C830E76300B8B3E743A9CC1E
	5B9C0C166319A3759A850D4C120140BD3033737ECF3F288A592998E1EE5F0000
	000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="24" length_in_bytes="528" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000CB0000
	00900403000000549C82340000000F504C5445FF0000000000616161CDCDCDFF
	FFFF11AF4D5D0000000174524E530040E6D866000001A549444154785EED9B51
	6AC3301005B537D8D7E802E90D4C4E20C8FDCFD4E0A525ED2A1B90B5A8096F3E
	F215793C48386029E5175266A0E50998A2C1931B17CC4157D564CF4D8AC57BA4
	E4F17A35AC1164A05693AE7135F53A9F66355ED32609AA695EAE8635AC610D66
	D1A951B95177300B5F23B8AB2973E8D4009AA0F173A3F935A679DF1A1C22A8C9
	D2C435D7030435A99AF5350D83D4A066A6A6420DB41D8851B4A7395D86D81ED6
	08D235628FCD648DA1F935191AD6B04600FC3C05F486E469EE6BA0299AD365BB
	D70890A6195A02D450430D35D450430D35D450430D35D450430D35D450438D00
	0B5E42A6BD527DED17C4FB05F334AC09600DA0EB3624D1E3E3F32FE7CEF6AADC
	28F1F66AACF189DBB1CDE22EADA3A9EE5B6E6E224D1DD3B4EB3FAC710473E308
	8FF338CDD84A03821A7F38490F1FD81D3D6A15D778E2F36970447333ACE9D3EA
	C395D61E8C8B356D17D4314DB30F1BCF9A6009CCAC0916F4CC1A2BE9B14DAB89
	35F935AC4144A04144A0899ECE9E73AC59FB1F1239FCB32603E3D7D5B0C6171B
	7AE44EC3D1D8356ACA318D45A020888161CA41BE2FA48B6BF2E7E60BBD284EDC
	B87511270000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="25" length_in_bytes="467" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000B10000
	0076040300000075EA6FFA0000000F504C5445FF0000000000616161CDCDCDFF
	FFFF11AF4D5D0000000174524E530040E6D8660000016849444154785EED9A51
	8AC3300C443D7B020DF4008BAFB02708ECFDCFB4A2290827C6B0B6E452D0FB68
	A01F8F6198FE54292FA43800FBB4EF16CC630B9DD89239AE6713FBA8A37857E6
	CC0C0159C8E58734450070345B66D0EB2778F590E26BB69EC53DB3999D819943
	B036C015A4E939C4DCCBFCF89DE76832FB9AF76756D4CC594EB3E1673E0EA2A5
	48D3067FE6E0BD67D0D76C3D93129439A60D983930B3B26C361063FED49E9DCD
	54005110603E33539CCDFA7C9A417A6DC3CCB6BA2873481BFBCD69CED5ED37A7
	395797E65C5DAE2E5797AB4B73AE2EB791ABCBD5A5F9BDFF9C28A789E26F9627
	9FF3AF9A6A30366766C527B3E26F36627B2665D3D5A34BBDD1B9D4882200D8BF
	D4B04B27E395B98B187BBD5EB19EFB77AB63D2FC185EC45C320FEEB0933D9332
	B8A4839CDE06D9F47CBFFEA3CC61BAFFBDB150BFBF6A2DD51E75FCC6424B8439
	9ED59E6D75E164666FB5BC1EA3609C32F34C351A33565EDEA0129C39BEE73FCA
	F53360108AC9050000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="26" length_in_bytes="543" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000CB0000
	00900403000000549C82340000000F504C5445FF0000000000616161CDCDCDFF
	FFFF11AF4D5D0000000174524E530040E6D866000001B449444154785EED9B41
	8EC3200C45ED1BD8132E307383282740EAFDCF345151A354042804CCA2FF2FBA
	4B5F9F4C5C090CBD85A947840AD12E182DFC70D63E917936F6B561A2DE1CA649
	996F039BEAF7F2E72F95DFE25BCA9F63962D95B5AE19B07BA4E33398EC73C126
	C6F84E9800F7E36D60732CEA7831F7B4391675BC987BDAB8509F8BBAF8369B7A
	0C6C349DA5AA9F5DD808EF71CFE4BA7455778E6D584F36D4271736AA72C6DCB3
	3930716DE4CDE65E6D52363126DDD7CAFD2C616380996DE35B6BE3AA6C7CEB4A
	734E2544FD33CA21245798656BCA9AB4611D8EE1F06A5AD89098D890D0B7D8C0
	0636B061553D3AB4ECE17198B38DCA10CCB2AD670CAB5A608809186080010618
	608001061860800106186080010618608031D8B633DD84B4DF52B5DF20262299
	B0AB0E1BD8D81DAFB2763EFAE63D9439FAB63FC86F1F4B886A93C5B8368C7FCC
	B41931006335CE13DB248793E4F6C0AEFDA815190C8ED98DC15172A8CFB5617C
	F808CFC326B3047ADA641674C2C66EB4B76C53811962031B83017FA3EB0A73EF
	90F0EDBF35CE3D3FDF063665E3760EBF6052BAD1C612906D9820A1A4E5DB4401
	D998D71789B18D7D6DFE01F691702EDF54BBA50000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="27" length_in_bytes="463" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000B10000
	0076040300000075EA6FFA0000000F504C5445FF0000000000616161CDCDCDFF
	FFFF11AF4D5D0000000174524E530040E6D8660000016449444154785EED9A51
	6AC3400C44353D81067280E22BE40486DEFF4CB59D2C5977DD85AE350E05BD8F
	0842780C62F263D99EB80580F2598113E6BE85415C9259BE67B710602ADE9539
	33C3411A797AB85538805073C90C46FD057F7A48DFCCE02F4C0D6CF1CA8CAA16
	5DF3BDA16B6E0B87DBD72147E6E647736D84CC6CFB6D4498CB9E5BF3F09E2BF3
	71E6E16ECC33F1A04CF3BDF93EC64166506146F997942F03CC156E22B360CF52
	338A39334BBB0161EBB21B5C007C0102F323333DD8BCCCCD0C32B01BC5BC01D3
	9925DBB8DE9CE66CDDF5E63467EBD29CADCBD665EBB27569CED66537B275D9BA
	34BFF7C9C9826DD0E3CDF495FFF354CDCDD03567E69590CCD2DB847CCFA4CBAE
	4B5117315F692E62822B5EE4E5B1DE737B2D9D07CDB7CEB5D42C267341709516
	5CD2EB3DB7D77FD8182FDDDFDE58983E3FA6C9A66AF4DF58D8A330EB39BDE7D2
	3A3D99395AEDCFD10B461B81DB40AFCCE0189B910BE2CCFA3D7F0354AC661774
	35C4C80000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="28" length_in_bytes="570" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000CB0000
	00900403000000549C82340000000F504C5445FF0000000000616161CDCDCDFF
	FFFF11AF4D5D0000000174524E530040E6D866000001CF49444154785EED9B61
	6EC2300C46634EE00F7A01D809584F1089FB9F69592B664692466B6C75ADFC24
	F805BC3E2502D124E1171434E0D0002A1A342E9CA0036F58633F36B945DB43C1
	8EFDD5780DC102961A5BCD1B343CF489734DAE894A824134BBAAF11AAFF11A68
	51A8614A0C13D022AF21480D820E851A800D3532366C5B239AA3D610FA28D498
	69DA3549D743B1C65EB37D0D5633146BF43503780671023413B8A0195772AFD6
	10CC35F4FCDAB4AF096C5F63A1F11AAF21003FDF029C203BCD6B0DD8447319EF
	AF1A02CC35F914C0C44134A714008BB1714D8E6B12041C44F3318E9FA7F4708D
	6B725CE31AD7B8C635AE718D6B5CE31AD7B8C6FF4913F0AE31BD09291AD35BAA
	A2315A8A30A94912CE34C7AC214C98D688C6A266BBA508A31A80375B902C73BE
	BD732D2CAF5222D49757DB9A4B7EF55D8BC565624193BD56C6A6AD896B35F1F1
	EF6A80156323B4B6F38866FD4C03AA35F9E62452D8B0DBDC6AD555232CEF4F03
	3AC7A6ADA91387EA4C8B95F72D6BE2F458A989CFA76FB5D72C4C01CD9A8509AD
	59232559914A4D5B635FE3355862418325FEA839DF6A5C1B9A4DCF9050E7CFDA
	FC24113BAAF11A1219755E29B74EB411771C91A3390201EDD3445D277E9E1FC4
	1BD7D88FCD178331540E527A8A2D0000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="29" length_in_bytes="493" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000B10000
	0076040300000075EA6FFA0000000F504C5445FF0000000000616161CDCDCDFF
	FFFF11AF4D5D0000000174524E530040E6D8660000018249444154785EED9A51
	8AC3300C443D3D8186ED014AF608394120F73FD30AEF82B6B5DB525BCAD2458F
	80FF1EC3A07C2472F9418A03282D7030F72D74A2FAA33307F40C4FB1A9A3F8AB
	CC991902B290D3875C1501C0D16C9941AF57F0D6438AAFD97A16F7CC66760666
	8EC0DAE01CD2F4EC6F6E33EF336C4D6637F3F19915EE1B87A966C3D1BC6DC435
	6AB536B68F7510B63D83BE66EB9994A0CC316DC0CC81999569B38118F3BBF6EC
	6CA602888200F377668AB359CF6A06E9361B66AEA0C49943DA38DC9CE6F8A923
	83A6CEC70C39CE7CBA7CAEAB3E469A63A6CECB9C3DA739A72ECD3975FFACE734
	E7D4A539A72E7B8EFF027A9B3F274AA950FCCD401191F7F9ABA61A3C366766C5
	27B3E26F36627B26E590AD07FB2C0D9D4D8D280280DD4D0DFB7432DE32B611EB
	99F75BACE7DEDE6A3F8F9ACF0F37622E995FDBC3F6CC2D727F934E727C36C85E
	CFB6FD973288E95EBBB1B05C4ECB52965FC7F3BB1046358BAF399ED99E6DEAC2
	C9CCAE6A4B24F7C51834B31E7830CC739737A804678EEFF90B814D59B78871B6
	120000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="30" length_in_bytes="228" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000680000
	002C0203000000F4BB15480000000C504C5445FF0000000000CDCDCDFFFFFF3B
	9A773A0000000174524E530040E6D8660000007C49444154785EED93310E8020
	0C456BE4020EDCC74B309A4E9E83FB781FBC09A3A9564844411B13DD7803CBCB
	FFED4041758CB9021B9A9FA6A84CCFCAD219CF4AC15B2514EA9072260559C5E5
	874C1DA9794AC138EB5629F85B555595FC0FF543E17EADD68D29E8C361B6444B
	9622A278C899E25451498582FA748D15EABB13C26F20B3B80000000049454E44
	AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="31" length_in_bytes="197" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000680000
	000F0203000000758362D00000000C504C5445FF0000000000CDCDCDFFFFFF3B
	9A773A0000000174524E530040E6D8660000005D49444154785EAD8EB10D8030
	0C048DC80214D987255C6794ECC33EB089CBE8C19822104B6EB8C2CDE9ADA3B4
	28FC852EB29EC955BCAAAA7823AA12B92A58655BEDDC53ECE19D37282B998156
	8FADA70880A77C50BA7255F43050BF669CFAD0C88618651CEB0000000049454E
	44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="32" length_in_bytes="208" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000680000
	002602030000005520362E0000000C504C5445FF0000000000CDCDCDFFFFFF3B
	9A773A0000000174524E530040E6D8660000006849444154785EEDD3B10D8030
	0C044023B20045F66189A74DC51CD9877D60939491C1A40944FA0A89265FB839
	E9E5C2163759F08E5CF136062C5B9D42988DE2F1A0908C9CFC4C9D3AF113F5A4
	F0FE85B8AF75422A1F31AAE6A65055AD0D404300089142429FAF7102F066C6EB
	3726FD590000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="33" length_in_bytes="146" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D494844520000005D0000
	000902030000002D00C8B100000009504C5445000000CDCDCDFFFFFFBB09D809
	0000003A49444154785E9DCDB10900201443C1D48EE214E20EEEE32896F2A694
	748AFC4253E6205118406A7B8A32745B1A07D4E93206E0024FBDC1DFF9027C6B
	3DC5CBC1F8100000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="34" length_in_bytes="319" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D494844520000005D0000
	00720403000000C3A5C0130000000F504C5445FF0000000000959595CDCDCDFF
	FFFF31A5DBB10000000174524E530040E6D866000000D449444154785EEDD7C1
	0DC3200C865146C85F7B826E8058A095D87FA6A2384D5402048B4A54953FA9A7
	BE83B9C4E024C48850CD737C2E020B1E7BD4E58F7F7ECA9B376FDE2B3D48E53D
	A09DE7CF3CA4E41B252F6C7171ADF67D3EE6E1D53D1CA44B2F6C51F8AE794236
	CFA747216A788EE7A8715EC629A6C679F976CFCBBD74ED3759F0D8BB75790AEF
	3A3DB6A8D32711D6DF5C6FDEBC79F38DFDC838C5D97E1CDA172854DF17D5FCC0
	BE1EF3F3EF0352DD6BDE8FD3EF6FE3F755D0F7E7B1F78B79F3E6F5EF47FD7B4D
	BBEF745E3FCF989F7FDE17BBA17A59017451E10000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="35" length_in_bytes="237" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000680000
	004002030000008B8DDA690000000C504C5445FF0000000000CDCDCDFFFFFF3B
	9A773A0000000174524E530040E6D8660000008549444154785EEDD4B10D8330
	1085E1B3600117ECC3127F89188579927D924D28D121D31CC61C125451E45759
	FAE4F32B6CCB96307DDFFB8CB3A418BD0038A76DF90F54A9521B23307DD8679C
	01E9A4515D8A97A2AA421F80820069C52777E0637A54C3FD017E912AD1BBD45D
	0C8C29437EB1B35D05D9599AC71ADE237FA0D5E0182B7F462B7A85998E684240
	9B0000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="36" length_in_bytes="204" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000680000
	002602030000005520362E0000000C504C5445FF0000000000CDCDCDFFFFFF3B
	9A773A0000000174524E530040E6D8660000006449444154785EED8EC10D8030
	08456974811EDCC725FEB9A3741EDD479DA4C706112F98C002A6EFF043F2C207
	52523D774B692418B5E1C1573AFE430D355402500F584A93103531F77AB1A534
	099A738EB696B810AB16F297B79042156FE92D1FFDD0E7064C8E70E6D6B49B90
	0000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="37" length_in_bytes="219" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000680000
	003A02030000002134F4CE0000000C504C5445FF0000000000CDCDCDFFFFFF3B
	9A773A0000000174524E530040E6D8660000007349444154785EEDD4B10DC320
	1046E1DFB217A0F03E2CF1DC7A14CF93EC936CE232BA285781F035748E7815D2
	274ED780BCE9783FCBF65352490F00AEC98FFF4083062D2901C78BB2FD04B46A
	36FB342FC5CC449E8086002D8A291CD84D5D6B843FC0CD681039A4D56FB15504
	3E30FDA2CEE90B52464CC6CD7995CE0000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="38" length_in_bytes="162" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D494844520000005D0000
	001E020300000033D3FA920000000C504C5445FF0000000000CDCDCDFFFFFF3B
	9A773A0000000174524E530040E6D8660000003A49444154785EEDC9A10D0020
	0C055146EB12A7F1EC43D881FD9024941A20A9C7F4DCFF2F6979F4BB3645CF03
	EC8A03B63E4240003C5031C04F16A1F900F24D81F69D0000000049454E44AE42
	6082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="40" length_in_bytes="182" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D494844520000005D0000
	002C02030000007A615C340000000C504C5445FF0000000000CDCDCDFFFFFF3B
	9A773A0000000174524E530040E6D8660000004E49444154785EEDD2B1090021
	0C86514773899FE3AA8CE50EB75FCA235A58444189A06091AFF491A43194D017
	436906246DFF0960E81E0B7CBA7413383800207E75F5EF8AC870621144C40CBB
	8F6752E9118949EF3F050000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="41" length_in_bytes="170" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D494844520000005D0000
	0010020300000009D99BE20000000C504C5445FF0000000000CDCDCDFFFFFF3B
	9A773A0000000174524E530040E6D8660000004249444154785EB58DC1090020
	0C031DCD25C467C77207F7CBB36840102B2214F45EA5479240D24EE4F32AA459
	F4878099CE43F03A0B460575A5CC8453B0CA21DE8E77A209CBB04181E4610000
	000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="42" length_in_bytes="177" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D494844520000005D0000
	00260203000000DBFA7F520000000C504C5445FF0000000000CDCDCDFFFFFF3B
	9A773A0000000174524E530040E6D8660000004949444154785EEDCD310AC020
	1044D13D9A971824D59E2AE40EB9DF9632060459058B058B14FEF6318C7C612E
	490B787D7707B5019EF22338700080DAE5CB0D482E1741201980BDE715CCC5C5
	65F49691DA0000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="43" length_in_bytes="160" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D494844520000005D0000
	000902030000002D00C8B10000000C504C5445FF0000000000CDCDCDFFFFFF3B
	9A773A0000000174524E530040E6D8660000003849444154785EADCDB1090020
	1004C12FCD2636B62AB107FB337C4E1104054DC44D07EE8C43C17A92A0AC2506
	00B16E90FD0A73EA03BC9D37F43573D1CE76C58F0000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="44" length_in_bytes="123" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000550000
	00010103000000952470F800000006504C5445FF000000000041A31203000000
	0174524E530040E6D8660000001949444154785E35C02101000000C230EAE16E
	DEBF0A8AC52B0315D903975014851F0000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="45" length_in_bytes="121" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000550000
	00010103000000952470F800000006504C5445FF000000000041A31203000000
	0174524E530040E6D8660000001749444154785E3DC0210100000083B047BCA1
	7F151C1BB915F103A3399A9A460000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="46" length_in_bytes="365" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D494844520000005D0000
	008F04030000006AA9CAD400000012504C5445FF0000000000959595CDCDCDF4
	F4F4FFFFFF350566760000000174524E530040E6D866000000FF49444154785E
	EDD7C169C43010405197A08FE502920EC456605001EBC3F4DF4A8843221F3CA0
	61332B63E69F1F46C28291A69F10E1A15616D9D2740C70F5B9D6F59D3E3C7BA9
	DB2FF2DDD3FEFDF1EBD1FDF8FDFAFC5FC0D5D75AFB7C787A3A78D903307D5FC4
	C9CBDE003F60BF2DB307B31F713EC3A7BD9C33450F30CD23E096F331E6E36CF3
	05DBF98459F1EA7A6EE0DDE6A3FE7D1107FFDABC2B68295E94B6F3F5978DF354
	FF79DAC79F6F993DD83D8AE7FCBC9555F1EB3FFBF0FC96FA7C9B8F7DBECD0B37
	AFACC7C98FDFAFF5FF5ABDCF790B4FCB322FC03E2FD0727C3FCE0E7ED87DA065
	F6E0EAF5FB98EF7DB5E0B39ED615FD2DDE8FF17EBCBE0FFF05B666EB60859320
	5C0000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="47" length_in_bytes="130" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D494844520000000B0000
	001301030000007CE7659300000006504C5445FF000000000041A31203000000
	0174524E530040E6D8660000002049444154785E8DC2310D00300C033043D933
	1E8514F8394BA192FD11CA3B2BB1938904F64C9618760000000049454E44AE42
	6082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="48" length_in_bytes="177" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D494844520000005D0000
	002302030000008B37EEE10000000C504C5445FF0000000000CDCDCDFFFFFF3B
	9A773A0000000174524E530040E6D8660000004949444154785EEDCD410AC020
	0C05D11CCD4B0C59F658DEA1F7EB52D24236514144E9A2D0D93EF85FE8D292E4
	C9CCE08C6507E0B8E6C1A79660FFDCFB3EFC404C27C0EADE00DA867003D7ABA5
	D849C422380000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="49" length_in_bytes="157" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D494844520000005D0000
	000902030000002D00C8B100000009504C5445FF0000000000FFFFFFCA92C399
	0000000174524E530040E6D8660000003849444154785E9DCBCB0D00101405D1
	579A26AEC52B4C0716A64A9F152124CE7632A64D2CC11A40629646E887E7F578
	04C059FD061D5C4305A977588CFAD80B550000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="50" length_in_bytes="173" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D494844520000005D0000
	001D0203000000B547883C0000000C504C5445FF0000000000CDCDCDFFFFFF3B
	9A773A0000000174524E530040E6D8660000004549444154785EEDD2B1090020
	0C44D18CE61287A553893BB89FA54489102436A295E06F1F5C9A10967C75D463
	6620CFA5010042D9049D3A83FBE3D2EBF0C17C62848249A001B9DA59C3816E40
	5B0000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="51" length_in_bytes="120" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D494844520000005D0000
	0001010300000086F3300C00000006504C5445FF000000000041A31203000000
	0174524E530040E6D8660000001649444154785E3DC031010000008230A2DB1C
	3F8619074BC20A77DF2A1C8B0000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="52" length_in_bytes="194" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D494844520000005D0000
	002C02030000007A615C340000000C504C5445FF0000000000CDCDCDFFFFFF3B
	9A773A0000000174524E530040E6D8660000005A49444154785EEDD3B10D8020
	1085614673891762C5288CE10E4EC152949707B9EA44739A18130BFEF6CB3B2A
	420F634BE87990784CBE800A5B7C02BB6DFB134C980020D5D516453F15C9D322
	93451703E8E20AFC53F7F0FEF10616BB2278D9B7AEE70000000049454E44AE42
	6082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="53" length_in_bytes="182" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D494844520000005D0000
	0010020300000009D99BE20000000C504C5445FF0000000000CDCDCDFFFFFF3B
	9A773A0000000174524E530040E6D8660000004E49444154785EB58EB10D0021
	08451DCD258CA5A338863B38854B5112446D040D16977B15E1E5F3714CD0785E
	9A229104FF1020AAE3123C1D623EC6D10475A760266A23A1C54CDC847DEA2DBE
	977765DBDC9FC8A033A80000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="54" length_in_bytes="191" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D494844520000005D0000
	00260203000000DBFA7F520000000C504C5445FF0000000000CDCDCDFFFFFF3B
	9A773A0000000174524E530040E6D8660000005749444154785EEDD2BD0D8020
	1485514673891B63C5284C41DCC1295C8A925C7E4CCCF369B0A0A1E06B4FEEA3
	C1E4A05BCC1570C8FC0D363C608F03C18409006CD8646BACFF9AE46BE1C8B32C
	34D4C517B44FFD43FFE3099097D65410A32CF00000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="55" length_in_bytes="146" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D494844520000005D0000
	000902030000002D00C8B100000009504C5445000000CDCDCDFFFFFFBB09D809
	0000003A49444154785E9DCDB10900201443C1D48EE214E20EEEE32896F2A694
	748AFC4253E6205118406A7B8A32745B1A07D4E93206E0024FBDC1DFF9027C6B
	3DC5CBC1F8100000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="56" length_in_bytes="331" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D494844520000005D0000
	008F04030000006AA9CAD400000012504C5445FF0000000000959595CDCDCDF4
	F4F4FFFFFF350566760000000174524E530040E6D866000000DD49444154785E
	EDD7C109C3300C85E18C90879B01DA0D4427087880FAE0FD5729383EB4204588
	5687C0FBCF1F21B9E4D9CB117AC7D34CB6DED6E53300671EC06FFE56EB7EE26B
	AD57F3F4F4F4F408B52E7DE4FF3FB7E15EF3F9FEFF1CA335ECFBC8F7F37D927D
	FEF7721F67F4F4F425E605310F94E8FB5CDC27EF6309EE6309EE45F9DF3E0AAC
	0CDF8D9ABE8FD2A0D7F4EF95F650BB7FF923C7ABFB687B7D1F058687BE8FB21B
	7E1F7B71314F4F4F4F0F3F88BA8FF65EE8FB28B04ABC3F16651F137DFE79E0C8
	F753CEFCF34CD407CE6389E75541D27992F7177A7AFA376BFAE278458AC1E200
	00000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="57" length_in_bytes="191" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D494844520000005D0000
	002302030000008B37EEE10000000C504C5445FF0000000000CDCDCDFFFFFF3B
	9A773A0000000174524E530040E6D8660000005749444154785EEDCDC1098030
	0C85E18EE6120F8F8ED229C41D9CC2A53C96577310121344050F85FEC77C2449
	881B124960D5CDC8E4261BD36E6029B211C279CA819C7A071F9F1F39906953D0
	01BAF101D0F607E0DA2D543DA6B573FAC09CC30000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="58" length_in_bytes="136" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D494844520000005D0000
	000901030000006AA0B26100000006504C5445000000FFFFFFA5D99FDD000000
	3349444154785E75CAB10900200C05D10307700357D5D11C49B0B1CA57629522
	AF3B3802AD2A37FA8132710D6268EBB3B7E591BA6F1A2DD227437EF700000000
	49454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="59" length_in_bytes="186" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D494844520000005D0000
	001D0203000000B547883C0000000C504C5445FF0000000000CDCDCDFFFFFF3B
	9A773A0000000174524E530040E6D8660000005249444154785EEDD2B10DC020
	0C04408FC6125F330A5344ECC0142C45893EF98288C4344917295FFAF47663C3
	3AC1480265CE8644563562BB40EE6A2C61AC72A055CFE0E5F1230E34FD10FCE0
	3EF1847B043BFA6D695ED8B1D9EB0000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="60" length_in_bytes="102" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D494844520000005D0000
	0001010300000086F3300C00000003504C5445000000A77A3DDA000000144944
	4154785E4DC021010000008020FFAFB6421A000D0001C373939C000000004945
	4E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="61" length_in_bytes="437" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000C20000
	009904030000008F86F8360000000F504C5445FF0000000000616161CDCDCDFF
	FFFF11AF4D5D0000000174524E530040E6D8660000014A49444154785EEDDAC1
	ADC230100450BB831D7003D041440596D27F4D44884302CE1CB2EBEFE83373E1
	947D1AD912076FDA24A7881819003FC0A764C4C4C674883F070EF889FE510775
	50077550878C1EB1BF15CA1C9FDA106A10F09E36B8833AA8833A202A5BC1F292
	F24A1F2163D521C5642B00D6594896FE9B007FC60BB337BF21547852FA0B0566
	A8AFD892DC12AE8FE3993E3BC03A0B19E8DD2127091224489020418204091224
	4890204182040912244890204182040912CEF996056B0868E572FFCCEDC09B22
	13BE8B4D87DF459BA90DA11C7E3D2E0EA1CE67E800B8CE01F812002302BB4B4C
	E05B2DE6DE9BE49B39FE0E00D87691FB1CB8D04E2DBB77A992EF88501C427D4F
	F8C10EE4A4833A90DB1AD281FD254D111DB810DB411DC04284A07DEFCB7D2F37
	7061583C745E4F387B07753027B0101CC80EC1563FD815E0C97A820DEA107F0E
	4FCC018D62FFC2D6680000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="62" length_in_bytes="385" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000A80000
	007F0403000000895E94100000000F504C5445FF0000000000616161CDCDCDFF
	FFFF11AF4D5D0000000174524E530040E6D8660000011649444154785EED99D1
	69C4400C4467528106AE80B02D5C0586EBBFA684257031BBC139240502F37EFC
	E5C7200D182C7C11288038C1BC74B5A888C6A49D330D944034E0A43D38A9933A
	298312A4F423304190AC9652655F93A7478A7A29021DD2C6365169E22C659448
	9799F2F64872FC73A9522C52202F3D0E1188089EA5F70433E944F19C69859401
	50AA9782B0B474FBBD526FDF9572A55C2957CA5257CADB77A55C2957CA95B2D4
	95F2F65D2957CA9572A52C75A5FAFF9EAFFFF9B78C859F2F128C4F886BE926D4
	9657AE3C3BE963CBFE207364A4B7B97D2CD26CD2ED8D2F37532996632CA5DCF6
	A7743D1B337D29FDF5817BBCBF8D81F1ED717DE09E144AFBC9CFF4CF70523638
	215CF1FAAB54826849DA3DD30FB9AF7108C3763D1E0000000049454E44AE4260
	82
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="63" length_in_bytes="441" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000CB0000
	00900403000000549C82340000000F504C5445FF0000000000616161CDCDCDFF
	FFFF11AF4D5D0000000174524E530040E6D8660000014E49444154785EEDDBD1
	89C3301004506D07BBA00AAE055720B8FE6B0A8EF3E1F84E7B122326989BF9C9
	4FA2C758C2FEF0A6FC8C9705B13FBF30C4C0ABC4A27CA20D616F52057728B961
	1BB589345FDD449A4966EB6696F94E9230E9EFBA4C5DC3B48321B4519B3D9DC3
	BCB2CD9ECE615ED966A77EDF17A0CD14A3362DFA99BA9FD577C6ED9568CF4CDD
	A587198B4B9B558FB57726C2AF8CE16DFCCA142F2993EF0DC4D4CEA919BE9FB5
	7FC9607B33CC6027ADB530ABCF849915EF321B906B1B0B0A13E10C8672D1C488
	1123468C183162C4881123468C183162C4881123468C183162C4881123E6FEAF
	572D68AFBEF92FF2F963090D612AAD0D6B00863CCE930F27193CB56BAC512BD2
	E018730C2E671AC2D46305B5498E00D2061986AD84D15EA04DCE10DAA80D61C0
	9FF477057E163DD68085A86DD466BDE32F606419E0BCC7E9C33C2F1340FCBC02
	A90D756F1EA512A97AD73DD2070000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="64" length_in_bytes="378" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000B10000
	0076040300000075EA6FFA0000000F504C5445FF0000000000616161CDCDCDFF
	FFFF11AF4D5D0000000174524E530040E6D8660000010F49444154785EED9A41
	8AC3300C45AD39817EEA034C7D839013047AFF337551B087446987CAD2EABF8D
	17858710AF2BA5FC41CA0CD410C0AFB52D823968F4CC097B1E62BF3A07CE9C07
	0AA002EB595A69EDF7A78DE7DE7F3B3F7D787931DD2C98FB171C1E408719172C
	EDC81D170C73D1F2D97CDB8EACFF320FF030D90D737D98746D8E1993CCB0CDBB
	6BCFF59DD9D546AD508588143D9B6FDBF7AC7D66419419D0431B7E73EF22C81C
	B4E76433CDAC8E6DB03A56C7EA581DCDAC8E6DB03A564733AB631BAC8ED5D1CC
	EAD806AB637534B33A4083CC82B88B58C8152FE9F238AEA5D561DEA3EFB04157
	E9D84BBA7DFD57EF771AF15F2C0C02CC19F8F79C0A67B6D128B138CCEF878287
	B89973F6FC04E4AD9FC61A4C39A90000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="65" length_in_bytes="467" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000C20000
	009904030000008F86F8360000000F504C5445FF0000000000616161CDCDCDFF
	FFFF11AF4D5D0000000174524E530040E6D8660000016849444154785EEDDBC1
	6D0231140450FF54F087B8014805612BB044FF35C5F22540BCFF80C771083317
	4EABB7831721EC4FBA8925463CB8001401FB8081135FD381BF0E31C027F85107
	755007755007C38CF8EF0AF9C24FE9088504E46F61610775500775002BB7825B
	4D6E992318AE3A244E6E05C0270BC9D3FF120C842C16189FBC971030963C5FC8
	704769F11AEB08DB483EEF3BC0270B06CCEE407F97244840CB530B6F95076B1D
	2448A831E0A9858F6D3B57E94C162448902041820409122448902041827E8B6A
	D74182F62A9F7DCF58820403569CC7F57338DDE7F8F099623FEF3F6FF7D173D1
	7E4A47C80F9EED9621A15CD6770086D6A1259C083160F0596A423CD56284B9C9
	683287D1A126982E22AC4328F453F2EEB35476AE0B8532249406E457EC10AC34
	A943F0B4923ABC075F38840EB1C0EDA00E881208A479EFC3692F47C4C2A218E1
	6A4F2D7FBB833A18E1F63C02124604BF7AC19CFF2A36012DF0451DF8EBF00559
	DE92BB6ECD89520000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="66" length_in_bytes="413" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000A80000
	007F0403000000895E94100000000F504C5445FF0000000000616161CDCDCDFF
	FFFF11AF4D5D0000000174524E530040E6D8660000013249444154785EED995D
	6AC4400C83ED9CC0A27B8065F60839C140EE7FA6C2FE74D2C49016DBA561A597
	90970FC5168419C9532609D2CD6B0CEA5390A442A765331DCC38B540745A233A
	A5533A55534080F0E365CE54351BAA48FB9B0C0E60F95031A980D6A50909B2EF
	50B514E876A658C2EAA78676C4B4838AC4A1BDDB43BA867ECC11DD9DDE051B33
	CD80AA8928900F15154253B75F07E5A21829460A380574BADEE6F9961EA91CA8
	4809B4E4F309FDB79162A40865A4B87D468A8B62A41829460A40C1890F789B13
	1FA1BC442094913AC9ED39ECB8E6683BC155EF507D3412C750C794ABDFB43C1E
	74F1E41632CB2504BD7C6D7F40339C7A1D5F70A6806DCB580081ED0FE8B636B6
	7853FAE382BB5DA7D6A4AD1EC705F7A8E22D055AAFF84CFF4A746A05CC50C820
	BE10929538AD9EE927604E9784241117370000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="67" length_in_bytes="464" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000C20000
	009904030000008F86F8360000000F504C5445FF0000000000616161CDCDCDFF
	FFFF11AF4D5D0000000174524E530040E6D8660000016549444154785EEDDA51
	6E8330100450FB063BA90FD0A427487A024BB9FF996AD14A080AA38A5D07D2CC
	487C669F46E627ACD3243945C4C800F8013E252326B64F87F873E0809FE81F75
	500775500775C8E8117BAC50EEF1A90B420D027EA6EDDC411DD4411D1095A960
	B9A50CE923648C1D9062321500EB2C244BFF4D40406C6FE1EE4E7D05A1C297FE
	42AD401D622D794978FBF464D601D659C840EF0E391D5B9020E13BCF2DB4510D
	7B9720C1130006E0A9858F36B93DB74709122448902041820409122448902041
	FF45A1AF0E12F4AD52DB0109CFBFCB82FD75A778BACC73DEB05364C2EF62D7CD
	7BD1C5D405A16CDE1E1797500ED001709E0330130023027B9798C06FB598FBC6
	23BD9913D10160B78B5CE7C085F5D4B2FA2E55F23B2214975086E7053B90930E
	EA40DED6900E6C5D708DE8C085D80EEA00162204DDF73E5DD6720617768B8FB6
	71C2D13BA88339814670207B048C13B02AC0151B27D84E1DE2CFE10B93229C55
	AB6543DD0000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="68" length_in_bytes="412" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000A80000
	007F0403000000895E94100000000F504C5445FF0000000000616161CDCDCDFF
	FFFF11AF4D5D0000000174524E530040E6D8660000013149444154785EED9951
	6AC34010434739C1087C80B037487B8242EE7FA62EA1C575768D0D33F3E1A247
	C05F7E28B6C0B0B21FDC12806D405C3A5A984461D2CA67EA9602AC0025AD4149
	955449E1208D0C5F7EC339806C2998F635593DA4E74BCDAD425AD82630818D14
	9E2385BF499767986B4B1963D94A3B19D2856EEE8EADF433C2A30B5E26FA5AA9
	0C29DC0C64BED46092A6BEFD3AA95E545CAA4AA952E445A41FFD77BB0F958A4B
	CD4AA4257F5FD27F5C29554A9552A52455A55429554A9552A51E24CDF2A51739
	449054870892AA5217393DA71FCF1C6D607F91A07760C7D231D39EF4FCCA3393
	3EE74C0799AF90B4DFCD61E34B487A7AE39B4977791F634106DF7E67321B23BC
	989F1EB8DBFDD69AB53F97E381FB458614ABB41CA4DC5D8F92A222112352B729
	608892A4C5CFF41BB5CA84FD0E5ECFC20000000049454E44AE426082
	]]>
</GDLPict>

<MigrationTable SectVersion="1" SectionFlags="0" SubIdent="0">
	<MigrationTableElement>
		<MainGUID>B1E87ED9-28AF-42A5-9277-277C5C823F57</MainGUID>
		<Version>18</Version>
		<Name><![CDATA[""]]></Name>
		<AutoMigration>true</AutoMigration>
	</MigrationTableElement>
</MigrationTable>

<Copyright SectVersion="1" SectionFlags="0" SubIdent="0">
	<Author>GRAPHISOFT</Author>
	<License>
		<Type>CC BY-ND</Type>
		<Version>3.0</Version>
	</License>
</Copyright>

</Symbol>
