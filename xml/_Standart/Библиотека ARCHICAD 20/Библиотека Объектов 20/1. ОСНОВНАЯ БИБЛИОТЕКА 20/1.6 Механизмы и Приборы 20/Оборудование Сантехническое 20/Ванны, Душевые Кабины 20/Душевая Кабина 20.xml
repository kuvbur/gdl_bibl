<?xml version="1.0" encoding="UTF-8"?>
<Symbol IsArchivable="true" IsPlaceable="true" MainGUID="718F65EE-6CF9-44C7-95AC-1ADCDEF27A6E" MigrationValue="Normal" Owner="1196638531" Signature="1196644685" Version="38">
<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_3D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
! ==============================================================================
! Shower Cabin
! ==============================================================================


IF gs_detlevel_3D_m = 0 THEN END

if gs_shadow=0 then SHADOW OFF
if gs_shadow=1 then SHADOW ON


! ==============================================================================
! MEP
! ==============================================================================

if gs_detlevel_3D_m = 1 or gs_detlevel_3D_m = 3 then resol 12
if gs_detlevel_3D_m = 2 then resol gs_resol


if bShowMEP then

	IF useSysMat THEN
		gs_tub_mat = sMat
		gs_con_mat = sMat
	ENDIF

	add -A/2 + xTapPos, 0, 0

	if gs_tap_type_m > 25 then
		ConEdit_1 = 16
		ConEdit_2 = 16
	else
		ConEdit_1 = 12
		ConEdit_2 = 12
	endif

	! Hot Water & Cold Water Connection
	CALL "MEP_m_ConnectionsACL_4" PARAMETERS SetProgram = SetProgram,
		ui_current_con = ui_current_con,
		MEP_NumberConnections = MEP_NumberConnections,
		MEP_NumConnectionData = gs_Connections,
		gs_AddConnections = gs_AddConnections,
		cShow3D = 1,
		gs_ConMat = gs_con_mat,
		MEP_InsShow = 0,
		MEP_cline_show_3D = 0,
		gs_cont_pen = gs_cont_pen,
		ConPosX_1=ConPosX_1, ConPosY_1=ConPosY_1, ConPosZ_1=ConPosZ_1, ConLength_1=ConLength_1, ConEdit_1 = ConEdit_1,
		ConPosX_2=ConPosX_2, ConPosY_2=ConPosY_2, ConPosZ_2=ConPosZ_2, ConLength_2=ConLength_2, ConEdit_2 = ConEdit_2,
		ConShow_3 = 0, ConHotspotShow_3 = 0
	del 1

	! Waste Water
	CALL "MEP_m_ConnectionsACL_4" PARAMETERS SetProgram = SetProgram,
		ui_current_con = ui_current_con,
		MEP_NumberConnections = MEP_NumberConnections,
		MEP_NumConnectionData = gs_Connections,
		gs_AddConnections = gs_AddConnections,
		cShow3D = 1,
		gs_ConMat = gs_con_mat,
		MEP_InsShow = 0,
		MEP_cline_show_3D = 0,
		gs_cont_pen = gs_cont_pen,
		ConShow_1 = 0, ConHotspotShow_1 = 0,
		ConShow_2 = 0, ConHotspotShow_2 = 0,
		ConPosX_3=ConPosX_3, ConPosY_3=ConPosY_3, ConPosZ_3=ConPosZ_3, ConLength_3=ConLength_3, ConEdit_3 = 1


endif


! ==============================================================================
! Tray & Ceiling
! ==============================================================================

pen gs_cont_pen
material matTray
frameThk = 0.01
trayChamferUpper = 0.025
trayChamferLower = 0.04
trayFlange = 0.025
trayBottomThk = 0.03
trayChamferCorner = 0.03
nTrayCorner = int(gs_resol/4)
fi = 90/nTrayCorner
gi = 45/ceil(nTrayCorner/2)
trayMargin = trayFlange + trayChamferUpper + trayChamferLower
ceilingThk = 0.02
nLeaf = 1
unID = 1

if iCabinForm = CABINFORM_ROUNDEDCORNER | iCabinForm = CABINFORM_ROUNDEDPENINSULAR | iCabinForm = CABINFORM_ROUND then			! Rounded Corner
	if iDoorType = DOORTYPE_DOUBLELEAF 		then nLeaf = 2
	if iDoorType = DOORTYPE_DOUBLESLIDING 	then nLeaf = 2
endif

if iCabinForm = CABINFORM_SQUAREDALCOVE | iCabinForm = CABINFORM_SQUAREDCORNER | iCabinForm = CABINFORM_SQUAREDPENINSULAR | iCabinForm = CABINFORM_SQUARE then
	hotspot 0, 0, 0, unID : unID = unID + 1
	hotspot -A/2, -B/2, 0, unID : unID = unID + 1
	hotspot  A/2, -B/2, 0, unID : unID = unID + 1
	hotspot  A/2,  B/2, 0, unID : unID = unID + 1
	hotspot -A/2,  B/2, 0, unID : unID = unID + 1

	hotspot 0, 0, ZZYZX, unID : unID = unID + 1
	hotspot -A/2, -B/2, ZZYZX, unID : unID = unID + 1
	hotspot  A/2, -B/2, ZZYZX, unID : unID = unID + 1
	hotspot  A/2,  B/2, ZZYZX, unID : unID = unID + 1
	hotspot -A/2,  B/2, ZZYZX, unID : unID = unID + 1

	if bTray then

		if gs_detlevel_3D_m = 3 then		! --- Draft model

			prism_ 5, trayBottomThk,
				-A/2, -B/2, 11,
				A/2, -B/2, 11,
				A/2,  B/2, 11,
				-A/2,  B/2, 11,
				-A/2, -B/2, -1

			addz trayBottomThk
			prism_ 10, trayThk - trayBottomThk,
				-A/2, -B/2, 14,
				A/2, -B/2, 14,
				A/2,  B/2, 14,
				-A/2,  B/2, 14,
				-A/2, -B/2, -1,
				-A/2 + trayFlange, -B/2 + trayFlange, 15,
				A/2 - trayFlange, -B/2 + trayFlange, 15,
				A/2 - trayFlange,  B/2 - trayFlange, 15,
				-A/2 + trayFlange,  B/2 - trayFlange, 15,
				-A/2 + trayFlange, -B/2 + trayFlange, -1
			del 1

		else							! --- Detailed/Simple model

			for ki = 1 to nTrayCorner
				put A/2 - trayMargin - trayChamferCorner + trayChamferCorner * sin(ki*fi), B/2 - trayMargin - trayChamferCorner + trayChamferCorner * cos(ki*fi), 0, 0
			next ki
			for hi = 1 to nTrayCorner
				put A/2 - trayMargin - trayChamferCorner + trayChamferCorner * cos(hi*fi), -B/2 + trayMargin + trayChamferCorner - trayChamferCorner * sin(hi*fi), 0, 0
			next hi
			for ii = 1 to nTrayCorner
				put -A/2 + trayMargin + trayChamferCorner - trayChamferCorner * sin(ii*fi), -B/2 + trayMargin + trayChamferCorner - trayChamferCorner * cos(ii*fi), 0, 0
			next ii
			for ji = 1 to nTrayCorner
				put -A/2 + trayMargin + trayChamferCorner - trayChamferCorner * cos(ji*fi), B/2 - trayMargin - trayChamferCorner + trayChamferCorner * sin(ji*fi), 0, 0
			next ji

			addx A/2
			cutplane 0, 1, 1
			del 1
			addy -B/2
			cutplane 1, 0, 1, 1
			del 1
			addx -A/2
			cutplane 0, 1, 1, 1
			del 1
			cutpolya 4, 1, 0,
				-A, B/2, 0,
				A, B/2, 5,
				A, B, 5,
				-A, B, 5
			tube 10, 8 + nsp/4, 1 + 2 + 16*0 + 32*0 + 64*0,
				0, 0, 1,
				0, trayBottomThk, 1,
				1, 0, 800,
				trayChamferLower, trayBottomThk + trayChamferLower, 1001,
				trayChamferLower, trayThk - trayChamferUpper, 1,
				trayChamferLower + trayChamferUpper, trayThk, 1001,
				trayFlange + trayChamferUpper + trayChamferLower, trayThk, 1,
				trayFlange + trayChamferUpper + trayChamferLower + 0.1, trayThk, 1,
				trayFlange + trayChamferUpper + trayChamferLower + 0.1, 0, 1,
				0, 0, -1,

				-A/2, B/2 - trayMargin, 0, 0,
				0, B/2 - trayMargin, 0, 0,
				A/2 - trayMargin - trayChamferCorner, B/2 - trayMargin, 0, 0,
				get(nsp/4),
				A/2 - trayMargin, -B/2 + trayMargin + trayChamferCorner, 0, 0,
				get(nsp/3),
				-A/2 + trayMargin + trayChamferCorner, -B/2 + trayMargin, 0, 0,
				get(nsp/2),
				-A/2 + trayMargin, B/2 - trayMargin - trayChamferCorner, 0, 0,
				get(nsp),
				0, B/2 - trayMargin, 0, 0,
				A, B/2 - trayMargin, 0, 0
			cutend
			cutend
			cutend
			cutend

			lin_ -A/2, B/2, 0, A/2, B/2, 0
			lin_ -A/2, B/2, trayThk, A/2, B/2, trayThk
			lin_ -A/2, B/2, 0, -A/2, B/2, trayThk
			lin_ A/2, B/2, 0, A/2, B/2, trayThk

			prism_ 11, trayBottomThk,
				A/2 - trayMargin, 0, 8,
				A/2 - trayMargin, B/2 - trayMargin - trayChamferCorner, 8 + 64,
				A/2 - trayMargin - trayChamferCorner, B/2 - trayMargin, 1008,
				-A/2 + trayMargin + trayChamferCorner, B/2 - trayMargin, 8 + 64,
				-A/2 + trayMargin, B/2 - trayMargin - trayChamferCorner, 1008,
				-A/2 + trayMargin, 0, 8,
				-A/2 + trayMargin, -B/2 + trayMargin + trayChamferCorner, 8,
				-A/2 + trayMargin + trayChamferCorner, -B/2 + trayMargin, 1008 + 64,
				A/2 - trayMargin - trayChamferCorner, -B/2 + trayMargin, 8,
				A/2 - trayMargin, -B/2 + trayMargin + trayChamferCorner, 1008 + 64,
				A/2 - trayMargin, 0, -1

			if gs_detlevel_3D_m <> 3 then
				add xWasteWaterPos, yWasteWaterPos, trayBottomThk
				cylind 0.005, wasteWaterR
				del 1
			endif
		endif

	endif

	if bCeiling then
		addz ZZYZX - ceilingThk
		prism_ 5, ceilingThk,
			-A/2, -B/2, 15,
			A/2, -B/2, 15,
			A/2, B/2, 15,
			-A/2, B/2, 15,
			-A/2, -B/2, -1
		del 1
	endif
endif

if iCabinForm = CABINFORM_ROUNDEDCORNER then
	hotspot 0, 0, 0, unID : unID = unID + 1
	hotspot -A/2, -B/2, 0, unID : unID = unID + 1
	hotspot  A/2 - doorWidth*cos(45), -B/2, 0, unID : unID = unID + 1
	hotspot  A/2,  -B/2 + doorWidth*cos(45), 0, unID : unID = unID + 1
	hotspot  A/2,  B/2, 0, unID : unID = unID + 1
	hotspot -A/2,  B/2, 0, unID : unID = unID + 1

	hotspot 0, 0, ZZYZX, unID : unID = unID + 1
	hotspot -A/2, -B/2, ZZYZX, unID : unID = unID + 1
	hotspot  A/2 - doorWidth*cos(45), -B/2, ZZYZX, unID : unID = unID + 1
	hotspot  A/2,  -B/2 + doorWidth*cos(45), ZZYZX, unID : unID = unID + 1
	hotspot  A/2,  B/2, ZZYZX, unID : unID = unID + 1
	hotspot -A/2,  B/2, ZZYZX, unID : unID = unID + 1

	trayChamferCorner2 = doorWidth * cos(45) - trayMargin
	if bTray then

		if gs_detlevel_3D_m = 3 then		! --- Draft model

			prism_ 5, trayBottomThk,
				-A/2, B/2, 11,
				-A/2, -B/2, 11,
				A/2 - doorWidth*cos(45), -B/2, 75,
				A/2, -B/2 + doorWidth*cos(45), 1075,
				A/2, B/2, 11

			addz trayBottomThk
			prism_ 12, trayThk - trayBottomThk,
				-A/2, B/2, 14,
				-A/2, -B/2, 14,
				A/2 - doorWidth*cos(45), -B/2, 78,
				A/2, -B/2 + doorWidth*cos(45), 1078,
				A/2, B/2, 14,
				-A/2, B/2, -1,
				-A/2 + trayFlange, B/2 - trayFlange, 15,
				-A/2 + trayFlange, -B/2 + trayFlange, 15,
				A/2 - doorWidth*cos(45), -B/2 + trayFlange, 79,
				A/2 - trayFlange, -B/2 + doorWidth*cos(45), 1079,
				A/2 - trayFlange, B/2 - trayFlange, 15,
				-A/2 + trayFlange, B/2 - trayFlange, -1
			del 1

		else							! --- Detailed/Simple model

			for ki = 1 to nTrayCorner
				put A/2 - trayMargin - trayChamferCorner + trayChamferCorner * sin(ki*fi), B/2 - trayMargin - trayChamferCorner + trayChamferCorner * cos(ki*fi), 0, 0
			next ki
			for hi = 1 to nTrayCorner
				put A/2 - trayMargin - trayChamferCorner2 + trayChamferCorner2 * cos(hi*fi), -B/2 + trayMargin + trayChamferCorner2 - trayChamferCorner2 * sin(hi*fi), 0, 0
			next hi
			for ii = 1 to nTrayCorner
				put -A/2 + trayMargin + trayChamferCorner - trayChamferCorner * sin(ii*fi), -B/2 + trayMargin + trayChamferCorner - trayChamferCorner * cos(ii*fi), 0, 0
			next ii
			for ji = 1 to nTrayCorner
				put -A/2 + trayMargin + trayChamferCorner - trayChamferCorner * cos(ji*fi), B/2 - trayMargin - trayChamferCorner + trayChamferCorner * sin(ji*fi), 0, 0
			next ji

			addx -A/2
			cutplane 0, 1, 1, 1
			del 1
			cutpolya 4, 1, 0,
				-A, B/2, 0,
				A, B/2, 5,
				A, B, 5,
				-A, B, 5
			cutpolya 8, 1, 0,
				-A/2, -B/2, 7,
				A/2 - doorWidth * cos(45), -B/2, 7 + 64,
				A/2, -B/2 + doorWidth * cos(45), 1007 + 64,
				A/2, B/2, 7,
				A, B/2, 7,
				A, -B, 7,
				-A/2, -B, 7,
				-A/2, -B/2, -1
			tube 10, 8 + nsp/4, 1 + 2 + 16*0 + 32*0 + 64*0,
				0, 0, 1,
				0, trayBottomThk, 1,
				1, 0, 800,
				trayChamferLower, trayBottomThk + trayChamferLower, 1001,
				trayChamferLower, trayThk - trayChamferUpper, 1,
				trayChamferLower + trayChamferUpper, trayThk, 1001,
				trayFlange + trayChamferUpper + trayChamferLower, trayThk, 1,
				trayFlange + trayChamferUpper + trayChamferLower + 0.1, trayThk, 1,
				trayFlange + trayChamferUpper + trayChamferLower + 0.1, 0, 1,
				0, 0, -1,

				-A/2, B/2 - trayMargin, 0, 0,
				0, B/2 - trayMargin, 0, 0,
				A/2 - trayMargin - trayChamferCorner, B/2 - trayMargin, 0, 0,
				get(nsp/4),
				A/2 - trayMargin, -B/2 + trayMargin + trayChamferCorner2, 0, 0,
				get(nsp/3),
				-A/2 + trayMargin + trayChamferCorner, -B/2 + trayMargin, 0, 0,
				get(nsp/2),
				-A/2 + trayMargin, B/2 - trayMargin - trayChamferCorner, 0, 0,
				get(nsp),
				0, B/2 - trayMargin, 0, 0,
				A, B/2 - trayMargin, 0, 0
			cutend
			cutend
			cutend

			lin_ -A/2, B/2, 0, A/2, B/2, 0
			lin_ -A/2, B/2, trayThk, A/2, B/2, trayThk
			lin_ -A/2, B/2, 0, -A/2, B/2, trayThk
			lin_ A/2, B/2, 0, A/2, B/2, trayThk

			prism_ 10, trayBottomThk,
				0, B/2 - trayMargin, 8,
				A/2 - trayMargin - trayChamferCorner, B/2 - trayMargin, 8 + 64,
				A/2 - trayMargin, B/2 - trayMargin - trayChamferCorner, 1008,
				A/2 - trayMargin, -B/2 + trayMargin + trayChamferCorner2, 8 + 64,
				A/2 - trayMargin - trayChamferCorner2, -B/2 + trayMargin, 1008,
				-A/2 + trayMargin + trayChamferCorner, -B/2 + trayMargin, 8 + 64,
				-A/2 + trayMargin, -B/2 + trayMargin + trayChamferCorner, 1008,
				-A/2 + trayMargin, B/2 - trayMargin - trayChamferCorner, 8 + 64,
				-A/2 + trayMargin + trayChamferCorner, B/2 - trayMargin, 1008 + 64,
				0, B/2 - trayMargin, -1

			if gs_detlevel_3D_m <> 3 then
				add xWasteWaterPos, yWasteWaterPos, trayBottomThk
				cylind 0.005, wasteWaterR
				del 1
			endif
		endif

	endif

	if bCeiling then
		addz ZZYZX - ceilingThk
		prism_ 6, ceilingThk,
			-A/2, -B/2, 15,
			A/2 - doorWidth * cos(45), -B/2, 15 + 64,
			A/2, -B/2 + doorWidth * cos(45), 1015 + 64,
			A/2, B/2, 15,
			-A/2, B/2, 15,
			-A/2, -B/2, -1
		del 1
	endif
endif

if iCabinForm = CABINFORM_CHAMFERCORNER then
	hotspot 0, 0, 0, unID : unID = unID + 1
	hotspot -A/2, -B/2, 0, unID : unID = unID + 1
	hotspot  A/2 - doorWidth*cos(45), -B/2, 0, unID : unID = unID + 1
	hotspot  A/2,  -B/2 + doorWidth*cos(45), 0, unID : unID = unID + 1
	hotspot  A/2,  B/2, 0, unID : unID = unID + 1
	hotspot -A/2,  B/2, 0, unID : unID = unID + 1

	hotspot 0, 0, ZZYZX, unID : unID = unID + 1
	hotspot -A/2, -B/2, ZZYZX, unID : unID = unID + 1
	hotspot  A/2 - doorWidth*cos(45), -B/2, ZZYZX, unID : unID = unID + 1
	hotspot  A/2,  -B/2 + doorWidth*cos(45), ZZYZX, unID : unID = unID + 1
	hotspot  A/2,  B/2, ZZYZX, unID : unID = unID + 1
	hotspot -A/2,  B/2, ZZYZX, unID : unID = unID + 1

	trayChamferCorner2 = doorWidth * cos(45) - trayMargin
	if bTray then

		if gs_detlevel_3D_m = 3 then		! --- Draft model

			prism_ 5, trayBottomThk,
				-A/2, B/2, 11,
				-A/2, -B/2, 11,
				A/2 - doorWidth*cos(45), -B/2, 11,
				A/2, -B/2 + doorWidth*cos(45), 11,
				A/2, B/2, 11

			addz trayBottomThk
			prism_ 12, trayThk - trayBottomThk,
				-A/2, B/2, 14,
				-A/2, -B/2, 14,
				A/2 - doorWidth*cos(45), -B/2, 14,
				A/2, -B/2 + doorWidth*cos(45), 14,
				A/2, B/2, 14,
				-A/2, B/2, -1,
				-A/2 + trayFlange, B/2 - trayFlange, 15,
				-A/2 + trayFlange, -B/2 + trayFlange, 15,
				A/2 - doorWidth*cos(45) - trayFlange*tan(22.5), -B/2 + trayFlange, 15,
				A/2 - trayFlange, -B/2 + doorWidth*cos(45) + trayFlange*tan(22.5), 15,
				A/2 - trayFlange, B/2 - trayFlange, 14,
				-A/2 + trayFlange, B/2 - trayFlange, -1
			del 1

		else							! --- Detailed/Simple model

			for ki = 1 to nTrayCorner
				put A/2 - trayMargin - trayChamferCorner + trayChamferCorner * sin(ki*fi), B/2 - trayMargin - trayChamferCorner + trayChamferCorner * cos(ki*fi), 0, 0
			next ki
			for hi = 1 to ceil(nTrayCorner/2)
				put A/2 - trayMargin - trayChamferCorner + trayChamferCorner * cos(hi*gi), -B/2 + doorWidth * cos(45) + (trayMargin + trayChamferCorner) * tan(22.5) - trayChamferCorner * sin(hi*gi), 0, 0
			next hi
			for li = 1 to ceil(nTrayCorner/2)
				put A/2 - doorWidth * cos(45) - (trayMargin + trayChamferCorner) * tan(22.5) + trayChamferCorner * sin(45 - li*gi), -B/2 + trayMargin + trayChamferCorner - trayChamferCorner * cos(45-li*gi), 0, 0
			next li
			for ii = 1 to nTrayCorner
				put -A/2 + trayMargin + trayChamferCorner - trayChamferCorner * sin(ii*fi), -B/2 + trayMargin + trayChamferCorner - trayChamferCorner * cos(ii*fi), 0, 0
			next ii
			for ji = 1 to nTrayCorner
				put -A/2 + trayMargin + trayChamferCorner - trayChamferCorner * cos(ji*fi), B/2 - trayMargin - trayChamferCorner + trayChamferCorner * sin(ji*fi), 0, 0
			next ji

			addx -A/2
			cutplane 0, 1, 1, 1
			del 1
			cutpolya 4, 1, 0,
				-A, B/2, 0,
				A, B/2, 5,
				A, B, 5,
				-A, B, 5
			cutpolya 8, 1, 0,
				-A/2, -B/2, 7,
				A/2 - doorWidth * cos(45), -B/2, 7,
				A/2, -B/2 + doorWidth * cos(45), 7,
				A/2, B/2, 7,
				A, B/2, 7,
				A, -B, 7,
				-A/2, -B, 7,
				-A/2, -B/2, -1
			tube 10, 10 + nsp/4*0 + nTrayCorner*3 + ceil(nTrayCorner/2)*2, 1 + 2 + 16*0 + 32*0 + 64*0,
				0, 0, 1,
				0, trayBottomThk, 1,
				1, 0, 800,
				trayChamferLower, trayBottomThk + trayChamferLower, 1001,
				trayChamferLower, trayThk - trayChamferUpper, 1,
				trayChamferLower + trayChamferUpper, trayThk, 1001,
				trayFlange + trayChamferUpper + trayChamferLower, trayThk, 1,
				trayFlange + trayChamferUpper + trayChamferLower + 0.1, trayThk, 1,
				trayFlange + trayChamferUpper + trayChamferLower + 0.1, 0, 1,
				0, 0, -1,

				-A/2, B/2 - trayMargin, 0, 0,
				0, B/2 - trayMargin, 0, 0,
				A/2 - trayMargin - trayChamferCorner, B/2 - trayMargin, 0, 0,
				get(nTrayCorner*4),
				A/2 - trayMargin, -B/2 + doorWidth * cos(45) + (trayMargin + trayChamferCorner) * tan(22.5), 0, 0,
				get(ceil(nTrayCorner/2)*4),
				A/2 - doorWidth * cos(45) - (trayMargin + trayChamferCorner) * tan(22.5) + trayChamferCorner * cos(45), -B/2 + trayMargin + trayChamferCorner - trayChamferCorner * cos(45), 0, 0,
				get(ceil(nTrayCorner/2)*4),
				A/2 - doorWidth * cos(45) - (trayMargin + trayChamferCorner) * tan(22.5), -B/2 + trayMargin, 0, 0,
				-A/2 + trayMargin + trayChamferCorner, -B/2 + trayMargin, 0, 0,
				get(nTrayCorner*4),
				-A/2 + trayMargin, B/2 - trayMargin - trayChamferCorner, 0, 0,
				get(nTrayCorner*4),
				0, B/2 - trayMargin, 0, 0,
				A, B/2 - trayMargin, 0, 0
			cutend
			cutend
			cutend

			lin_ -A/2, B/2, 0, A/2, B/2, 0
			lin_ -A/2, B/2, trayThk, A/2, B/2, trayThk
			lin_ -A/2, B/2, 0, -A/2, B/2, trayThk
			lin_ A/2, B/2, 0, A/2, B/2, trayThk

			for ki = 1 to nTrayCorner
				put A/2 - trayMargin - trayChamferCorner + trayChamferCorner * sin(ki*fi), B/2 - trayMargin - trayChamferCorner + trayChamferCorner * cos(ki*fi), 8
			next ki
			for hi = 1 to ceil(nTrayCorner/2)
				put A/2 - trayMargin - trayChamferCorner + trayChamferCorner * cos(hi*gi), -B/2 + doorWidth * cos(45) + (trayMargin + trayChamferCorner) * tan(22.5) - trayChamferCorner * sin(hi*gi), 8 + 7
			next hi
			for li = 1 to ceil(nTrayCorner/2)
				put A/2 - doorWidth * cos(45) - (trayMargin + trayChamferCorner) * tan(22.5) + trayChamferCorner * sin(45 - li*gi), -B/2 + trayMargin + trayChamferCorner - trayChamferCorner * cos(45-li*gi), 8
			next li
			for ii = 1 to nTrayCorner
				put -A/2 + trayMargin + trayChamferCorner - trayChamferCorner * sin(ii*fi), -B/2 + trayMargin + trayChamferCorner - trayChamferCorner * cos(ii*fi), 8
			next ii
			for ji = 1 to nTrayCorner
				put -A/2 + trayMargin + trayChamferCorner - trayChamferCorner * cos(ji*fi), B/2 - trayMargin - trayChamferCorner + trayChamferCorner * sin(ji*fi), 8
			next ji
			prism_ 8 + nsp/3, trayBottomThk,
				0, B/2 - trayMargin, 8,
				A/2 - trayMargin - trayChamferCorner, B/2 - trayMargin, 8,
				get(nTrayCorner*3),
				A/2 - trayMargin, -B/2 + doorWidth * cos(45) + (trayMargin + trayChamferCorner) * tan(22.5), 8,
				get(ceil(nTrayCorner/2)*3),
				A/2 - doorWidth * cos(45) - (trayMargin + trayChamferCorner) * tan(22.5) + trayChamferCorner * cos(45), -B/2 + trayMargin + trayChamferCorner - trayChamferCorner * cos(45), 8,
				get(ceil(nTrayCorner/2)*3),
				A/2 - doorWidth * cos(45) - (trayMargin + trayChamferCorner) * tan(22.5), -B/2 + trayMargin, 8,
				-A/2 + trayMargin + trayChamferCorner, -B/2 + trayMargin, 8,
				get(nTrayCorner*3),
				-A/2 + trayMargin, B/2 - trayMargin - trayChamferCorner, 8,
				get(nTrayCorner*3),
				0, B/2 - trayMargin, -1

			if gs_detlevel_3D_m <> 3 then
				add xWasteWaterPos, yWasteWaterPos, trayBottomThk
				cylind 0.005, wasteWaterR
				del 1
			endif
		endif

	endif

	if bCeiling then
		addz ZZYZX - ceilingThk
		prism_ 6, ceilingThk,
			-A/2, -B/2, 15,
			A/2 - doorWidth * cos(45), -B/2, 15,
			A/2, -B/2 + doorWidth * cos(45), 15,
			A/2, B/2, 15,
			-A/2, B/2, 15,
			-A/2, -B/2, -1
		del 1
	endif
endif

if iCabinForm = CABINFORM_ROUNDEDPENINSULAR then
	trayChamferCorner2 = A/2 - trayMargin
	arcAngle = 2 * asn(doorWidth/A)
	if bTray then

		if gs_detlevel_3D_m = 3 then		! --- Draft model

			prism_ 5, trayBottomThk,
				-A/2, B/2, 11,
				-A/2, -B/2 + A/2, 75,
				A/2, -B/2 + A/2, 1075,
				A/2, B/2, 11,
				-A/2, B/2, -1

			addz trayBottomThk
			prism_ 10, trayThk - trayBottomThk,
				-A/2, B/2, 14,
				-A/2, -B/2 + A/2, 78,
				A/2, -B/2 + A/2, 1078,
				A/2, B/2, 14,
				-A/2, B/2, -1,
				-A/2 + trayFlange, B/2 - trayFlange, 15,
				-A/2 + trayFlange, -B/2 + A/2, 79,
				A/2 - trayFlange, -B/2 + A/2, 1079,
				A/2 - trayFlange, B/2 - trayFlange, 15,
				-A/2 + trayFlange, B/2 - trayFlange, -1
			del 1

		else							! --- Detailed/Simple model

			cutpolya 4, 1, 0,
				-A, B/2, 0,
				A, B/2, 5,
				A, B, 5,
				-A, B, 5
			if nLeaf = 1 then
				put -(A/2)*sin(arcAngle/2), -B/2+A/2-(A/2)*cos(arcAngle/2), 1007 + 64
				put (A/2)*sin(arcAngle/2), -B/2+A/2-(A/2)*cos(arcAngle/2), 1007 + 64
			else
				put -(A/2)*sin(arcAngle/2), -B/2+A/2-(A/2)*cos(arcAngle/2), 1007 + 64
				put 0, -B/2, 1007 + 64
				put (A/2)*sin(arcAngle/2), -B/2+A/2-(A/2)*cos(arcAngle/2), 1007 + 64
			endif
			cutpolya 9 + nsp/3, 1, 0,
				-A, B/2, 7,
				-A/2, B/2, 7,
				-A/2, -B/2 + A/2, 7 + 64,
				get(nsp),
				 A/2, -B/2 + A/2, 1007 + 64,
				 A/2, B/2, 7,
				 A, B/2, 7,
				 A, -B, 7,
				-A, -B, 7,
				-A, B/2, -1
			for ki = 1 to nTrayCorner
				put A/2 - trayMargin - trayChamferCorner + trayChamferCorner * sin(ki*fi), B/2 - trayMargin - trayChamferCorner + trayChamferCorner * cos(ki*fi), 0, 0
			next ki
			for hi = 1 to 2*nTrayCorner + 1
				put A/2 - trayMargin - trayChamferCorner2 + trayChamferCorner2 * cos(hi*gi), -B/2 + trayMargin + trayChamferCorner2 - trayChamferCorner2 * sin(hi*gi), 0, 0
			next hi
				for ji = 1 to nTrayCorner
				put -A/2 + trayMargin + trayChamferCorner - trayChamferCorner * cos(ji*fi), B/2 - trayMargin - trayChamferCorner + trayChamferCorner * sin(ji*fi), 0, 0
			next ji
			tube 10, 8 + nsp/4, 1 + 2 + 16*0 + 32*0 + 64*0,
				0, 0, 1,
				0, trayBottomThk, 1,
				1, 0, 800,
				trayChamferLower, trayBottomThk + trayChamferLower, 1001,
				trayChamferLower, trayThk - trayChamferUpper, 1,
				trayChamferLower + trayChamferUpper, trayThk, 1001,
				trayFlange + trayChamferUpper + trayChamferLower, trayThk, 1,
				trayFlange + trayChamferUpper + trayChamferLower + 0.1, trayThk, 1,
				trayFlange + trayChamferUpper + trayChamferLower + 0.1, 0, 1,
				0, 0, -1,

				-A/2, B/2 - trayMargin, 0, 0,
				0, B/2 - trayMargin, 0, 0,
				A/2 - trayMargin - trayChamferCorner, B/2 - trayMargin, 0, 0,
				get(nTrayCorner*4),
				A/2 - trayMargin, -B/2 + trayMargin + trayChamferCorner2, 0, 0,
				get(nTrayCorner*8+4),
				-A/2 + trayMargin, -B/2 + trayMargin + trayChamferCorner2, 0, 0,
				-A/2 + trayMargin, B/2 - trayMargin - trayChamferCorner, 0, 0,
				get(nTrayCorner*4),
				0, B/2 - trayMargin, 0, 0,
				A, B/2 - trayMargin, 0, 0
			cutend
			cutend

			lin_ -A/2, B/2, 0, A/2, B/2, 0
			lin_ -A/2, B/2, trayThk, A/2, B/2, trayThk
			lin_ -A/2, B/2, 0, -A/2, B/2, trayThk
			lin_ A/2, B/2, 0, A/2, B/2, trayThk

			for ki = 1 to nTrayCorner
				put A/2 - trayMargin - trayChamferCorner + trayChamferCorner * sin(ki*fi), B/2 - trayMargin - trayChamferCorner + trayChamferCorner * cos(ki*fi), 8
			next ki
			for hi = 1 to 2*nTrayCorner + 1
				put A/2 - trayMargin - trayChamferCorner2 + trayChamferCorner2 * cos(hi*gi), -B/2 + trayMargin + trayChamferCorner2 - trayChamferCorner2 * sin(hi*gi), 8
			next hi
				for ji = 1 to nTrayCorner
				put -A/2 + trayMargin + trayChamferCorner - trayChamferCorner * cos(ji*fi), B/2 - trayMargin - trayChamferCorner + trayChamferCorner * sin(ji*fi), 8
			next ji
			prism_ 6 + nsp/3, trayBottomThk,
				0, B/2 - trayMargin, 8,
				A/2 - trayMargin - trayChamferCorner, B/2 - trayMargin, 8,
				get(nTrayCorner*3),
				A/2 - trayMargin, -B/2 + trayMargin + trayChamferCorner2, 8,
				get(nTrayCorner*6+3),
				-A/2 + trayMargin, -B/2 + trayMargin + trayChamferCorner2, 8,
				-A/2 + trayMargin, B/2 - trayMargin - trayChamferCorner, 8,
				get(nTrayCorner*3),
				0, B/2 - trayMargin, -1

			if gs_detlevel_3D_m <> 3 then
				add xWasteWaterPos, yWasteWaterPos, trayBottomThk
				cylind 0.005, wasteWaterR
				del 1
			endif
		endif

	endif

	if bCeiling then
		addz ZZYZX - ceilingThk
		if nLeaf = 1 then
			put -(A/2)*sin(arcAngle/2), -B/2+A/2-(A/2)*cos(arcAngle/2), 1015 + 64
			put (A/2)*sin(arcAngle/2), -B/2+A/2-(A/2)*cos(arcAngle/2), 1015 + 64
		else
			put -(A/2)*sin(arcAngle/2), -B/2+A/2-(A/2)*cos(arcAngle/2), 1015 + 64
			put 0, -B/2, 1015 + 64
			put (A/2)*sin(arcAngle/2), -B/2+A/2-(A/2)*cos(arcAngle/2), 1015 + 64
		endif
		prism_ 5 + nsp/3, ceilingThk,
			-A/2, B/2, 15,
			-A/2, -B/2 + A/2, 15 + 64,
			get(nsp),
			 A/2, -B/2 + A/2, 1015 + 64,
			 A/2, B/2, 15,
			-A/2, B/2, -1
		del 1
	endif
endif

if iCabinForm = CABINFORM_ROUND then
	trayChamferCorner2 = A/2 - trayMargin
	arcAngle = 2 * asn(doorWidth/A)
	nSegment1 = round_int((360 - arcAngle)/360*gs_resol)
	nSegment2 = gs_resol - nSegment1
	gi = 360/gs_resol
	fi = arcAngle/nSegment2
	arcRadius = A/2 - frameThk
	if bTray then

		if gs_detlevel_3D_m = 3 then		! --- Draft model

			prism_ 2, trayBottomThk,
				0, 0, 975,
				A/2, 360, 4075

			addz trayBottomThk
			prism_ 10, trayThk - trayBottomThk,
				A/2, 0, 78,
				0, 0, 978,
				A/2, 180, 4078,
				A/2, 0, 1078,
				A/2, 0, -1,
				A/2 - trayFlange, 0, 79,
				0, 0, 979,
				A/2 - trayFlange, 180, 4079,
				A/2 - trayFlange, 0, 1079,
				A/2 - trayFlange, 0, -1
			del 1

		else							! --- Detailed/Simple model

			cutpolya 8, 1, 0,
				-A, -arcRadius * cos(arcAngle/2), 64,
				-arcRadius * sin(arcAngle/2), -arcRadius * cos(arcAngle/2), 64,
				-1, tan(arcAngle/2), 800,
				arcRadius * sin(arcAngle/2), -arcRadius * cos(arcAngle/2), 1000 + 64,
				A, -arcRadius * cos(arcAngle/2), 64,
				A, A, 0,
				-A, A, 0,
				-A, -arcRadius * cos(arcAngle/2), -1
			cutpolya 8, 1, 0,
				-A, -arcRadius * cos(arcAngle/2), 64,
				-arcRadius * sin(arcAngle/2), -arcRadius * cos(arcAngle/2), 64,
				0, 0, 900,
				arcRadius * sin(arcAngle/2), -arcRadius * cos(arcAngle/2), 3000 + 64,
				A, -arcRadius * cos(arcAngle/2), 64,
				A, -A, 0,
				-A, -A, 0,
				-A, -arcRadius * cos(arcAngle/2), -1
			for hi = 1 to gs_resol + 3
				put A/2 - trayMargin - trayChamferCorner2 + trayChamferCorner2 * cos(hi*gi), -B/2 + trayMargin + trayChamferCorner2 - trayChamferCorner2 * sin(hi*gi), 0, 0
			next hi
			rotz -90
			tube 10, nsp/4, 1 + 2 + 16*0 + 32*0 + 64*0,
				0, 0, 1,
				0, trayBottomThk, 1,
				1, 0, 800,
				trayChamferLower, trayBottomThk + trayChamferLower, 1001,
				trayChamferLower, trayThk - trayChamferUpper, 1,
				trayChamferLower + trayChamferUpper, trayThk, 1001,
				trayFlange + trayChamferUpper + trayChamferLower, trayThk, 1,
				trayFlange + trayChamferUpper + trayChamferLower + 0.1, trayThk, 1,
				trayFlange + trayChamferUpper + trayChamferLower + 0.1, 0, 1,
				0, 0, -1,

				get(nsp)
			del 1
			cutend
			cutend

			prism_ 5 + 5, trayThk,
				-A/2 * sin(arcAngle/2), -A/2 * cos(arcAngle/2), 15 + 64,
				0, 0, 915 + 64,
				A/2 * sin(arcAngle/2), -A/2 * cos(arcAngle/2), 3015 + 64,
				-A/2 * sin(arcAngle/2), -A/2 * cos(arcAngle/2), 1015 + 64,
				-A/2 * sin(arcAngle/2), -A/2 * cos(arcAngle/2), -1,

				-(A/2 - frameThk)* sin(arcAngle/2), -(A/2 - frameThk) * cos(arcAngle/2), 8 + 64,
				0, 0, 900,
				(A/2 - frameThk) * sin(arcAngle/2), -(A/2 - frameThk) * cos(arcAngle/2), 3008 + 64,
				-(A/2 - frameThk) * sin(arcAngle/2), -(A/2 - frameThk) * cos(arcAngle/2), 1008 + 64,
				-(A/2 - frameThk) * sin(arcAngle/2), -(A/2 - frameThk) * cos(arcAngle/2), -1

			prism_ 2, trayBottomThk,
				0, 0, 908,
				A/2 - trayMargin, 360, 4008

			if gs_detlevel_3D_m <> 3 then
				add 0, yWasteWaterPos, trayBottomThk
				cylind 0.005, wasteWaterR
				del 1
			endif
		endif

	endif

	if bCeiling then
		addz ZZYZX - ceilingThk
		if nLeaf = 1 then
			put -(A/2)*sin(arcAngle/2), -A/2*cos(arcAngle/2), 15 + 64
			put 0, 0, 900
			put (A/2)*sin(arcAngle/2), -A/2*cos(arcAngle/2), 3015 + 64
		else
			put -(A/2)*sin(arcAngle/2), -B/2+A/2-(A/2)*cos(arcAngle/2), 15 + 64
			put 0, 0, 900
			put 0, -B/2, 3015 + 64
			put A/2*sin(arcAngle/2), -A/2*cos(arcAngle/2), 1015 + 64
		endif
		prism_ 2 + nsp/3, ceilingThk,
			get(nsp),
			-A/2 * sin(arcAngle/2), -A/2 * cos(arcAngle/2), 1015 + 64,
			-A/2 * sin(arcAngle/2), -A/2 * cos(arcAngle/2), -1
		del 1
	endif
endif


! ==============================================================================
! Panels
! ==============================================================================

if iCabinType = CABINTYPE_FREESTANDING & gs_tap_type_m = TAPTYPE_OVERHEAD then
	panelWidth = 0.166
	panelHeight = 0.266
	addz zTapPos
	rotx 90
	cutform 6, 1, 1 + 2,
		0, 0, 1, -B,
		-panelWidth/2, 0, 13 - 8,
		-panelWidth/2, -panelHeight/2 + panelWidth/2, 15 + 64,
		 panelWidth/2, -panelHeight/2 + panelWidth/2, 1015 + 64,
		 panelWidth/2,  panelHeight/2 - panelWidth/2, 15 + 64,
		-panelWidth/2,  panelHeight/2 - panelWidth/2, 1015 + 64,
		-panelWidth/2, 0, -1
	del 2
endif
addz trayThk
call "showerCabin_m" parameters all ZZYZX				= ZZYZX - bCeiling * ceilingThk - trayThk,
									GS_HotspotUnIDBegin	= unID,
				returned_parameters unID
del 1

if iCabinType = CABINTYPE_FREESTANDING & gs_tap_type_m = TAPTYPE_OVERHEAD then cutend


! ==============================================================================
! Taps
! ==============================================================================

if gs_tap_type_m <> TAPTYPE_NONE & gs_detlevel_3D_m <> 3 then
	add -A / 2, B / 2, 0
	call "tapType_m" parameters all bEnableTapedit 		= 1,
									bSinkTap			= 0,
									useOldSimpleTaps	= 1,
									yShowerHeadPos		= -B / 2,
									zShowerHeadPos 		= ZZYZX - zTapPos,
									GS_HotspotUnIDBegin	= unID,
				returned_parameters xShowerPos,
									unID
	del 1
endif


! ==============================================================================
! Grab Bar
! ==============================================================================

if gs_detlevel_3D_m <> 3 & bGrabBar & (iCabinForm = CABINFORM_SQUAREDALCOVE | iCabinForm = CABINFORM_SQUAREDCORNER | iCabinForm = CABINFORM_ROUNDEDCORNER\
			 | iCabinForm = CABINFORM_CHAMFERCORNER | (iCabinForm = CABINFORM_SQUAREDPENINSULAR & gs_tap_type_m <> TAPTYPE_PANEL)\
			 | (iCabinForm = CABINFORM_ROUNDEDPENINSULAR & gs_tap_type_m <> TAPTYPE_PANEL)) then
	material gs_tap_mat
	grabBarR = 0.011
	grabBarL = 0.416

	if iCabinForm = CABINFORM_SQUAREDALCOVE | iCabinForm = CABINFORM_SQUAREDCORNER | iCabinForm = CABINFORM_ROUNDEDCORNER | iCabinForm = CABINFORM_CHAMFERCORNER then
		add -A/2 + 4 * grabBarR, 0, 0.8
		rotz 0
		rotx 90
	endif
	if iCabinForm = CABINFORM_SQUAREDPENINSULAR | iCabinForm = CABINFORM_ROUNDEDPENINSULAR then
		add 0, B/2 - 4 * grabBarR, zTapPos - 0.2
		rotz -90
		rotx 90
	endif
	addz -(grabBarL - 0.176)/2
	prism_ 4, grabBarL - 0.176,
		0, -grabBarR, 10 + 64,
		1, 0, 800,
		0, grabBarR, 1015 + 64,
		0, -grabBarR, 1008 + 64
	del 1
	for ki = 1 to 2
		addz (grabBarL - 0.176)/2
		prism_ 5, 0.053,
			-4*grabBarR, -grabBarR, 15,
			0, -grabBarR, 10 + 64,
			0, grabBarR, 1013,
			-4*grabBarR, grabBarR, 15,
			-4*grabBarR, -grabBarR, -1
		del 1
		addz (grabBarL - 0.176)/2 + 0.053
		prism_ 4, 0.035,
			0, -grabBarR, 14 + 64,
			1, 0, 800,
			0, grabBarR, 1015 + 64,
			0, -grabBarR, 1008 + 64
		del 1
	mulz -1
	next ki
	del 2
	del 3
endif

end
]]>
</Script_3D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_2D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
! ==============================================================================
! Shower Cabin
! ==============================================================================

pen gs_cont_pen
fill gs_fill_type


! ==========================================================================
! Scale
! ==========================================================================

call "2dDetailLevel" parameters gs_detlevel_2D_m = gs_detlevel_2D_m,
				returned_parameters gs_detlevel_2D_m


unID = 1
drawindex 20

! ==============================================================================
! 1 : 200
! ==============================================================================

if iCabinForm = CABINFORM_SQUAREDALCOVE | iCabinForm = CABINFORM_SQUAREDCORNER | iCabinForm = CABINFORM_SQUAREDPENINSULAR | iCabinForm = CABINFORM_SQUARE then
	hotspot2 0, 0, unID : unID = unID + 1
	hotspot2 -A/2, -B/2, unID : unID = unID + 1
	hotspot2  A/2, -B/2, unID : unID = unID + 1
	hotspot2  A/2,  B/2, unID : unID = unID + 1
	hotspot2 -A/2,  B/2, unID : unID = unID + 1

	poly2_b 4, 1+2+4+64, gs_fill_pen, gs_back_pen,
		-A/2, B/2, 1,
		-A/2, -B/2, 1,
		A/2, -B/2, 1,
		A/2, B/2, 1
endif
if iCabinForm = CABINFORM_ROUNDEDCORNER then
	hotspot2 0, 0, unID : unID = unID + 1
	hotspot2 -A/2, -B/2, unID : unID = unID + 1
	hotspot2  A/2 - doorWidth*cos(45), -B/2, unID : unID = unID + 1
	hotspot2  A/2,  -B/2 + doorWidth*cos(45), unID : unID = unID + 1
	hotspot2  A/2,  B/2, unID : unID = unID + 1
	hotspot2 -A/2,  B/2, unID : unID = unID + 1

	poly2_b 5, 1+2+4+64, gs_fill_pen, gs_back_pen,
		-A/2, B/2, 1,
		-A/2, -B/2, 1,
		A/2 - doorWidth*cos(45), -B/2, 1,
		A/2, -B/2 + doorWidth*cos(45), 1001,
		A/2, B/2, 1
endif
if iCabinForm = CABINFORM_CHAMFERCORNER then
	hotspot2 0, 0, unID : unID = unID + 1
	hotspot2 -A/2, -B/2, unID : unID = unID + 1
	hotspot2  A/2 - doorWidth*cos(45), -B/2, unID : unID = unID + 1
	hotspot2  A/2,  -B/2 + doorWidth*cos(45), unID : unID = unID + 1
	hotspot2  A/2,  B/2, unID : unID = unID + 1
	hotspot2 -A/2,  B/2, unID : unID = unID + 1

	poly2_b 5, 1+2+4+64, gs_fill_pen, gs_back_pen,
		-A/2, B/2, 1,
		-A/2, -B/2, 1,
		A/2 - doorWidth*cos(45), -B/2, 1,
		A/2, -B/2 + doorWidth*cos(45), 1,
		A/2, B/2, 1
endif
if iCabinForm = CABINFORM_ROUNDEDPENINSULAR then
	hotspot2 0, 0, unID : unID = unID + 1
	hotspot2 -A/2, B/2, unID : unID = unID + 1
	hotspot2 -A/2, -B/2 + A/2, unID : unID = unID + 1
	hotspot2 0, -B/2, unID : unID = unID + 1
	hotspot2 A/2, -B/2 + A/2, unID : unID = unID + 1
	hotspot2 A/2, B/2, unID : unID = unID + 1

	poly2_b 4, 1+2+4+64, gs_fill_pen, gs_back_pen,
		-A/2, B/2, 1,
		-A/2, -B/2 + A/2, 1,
		A/2, -B/2 + A/2, 1001,
		A/2, B/2, 1
endif
if iCabinForm = CABINFORM_ROUND then
	hotspot2 0, 0, unID : unID = unID + 1
	hotspot2 0, B/2, unID : unID = unID + 1
	hotspot2 -A/2, 0, unID : unID = unID + 1
	hotspot2 0, -B/2, unID : unID = unID + 1
	hotspot2 A/2, 0, unID : unID = unID + 1

	poly2_b 2, 1+2+4+64, gs_fill_pen, gs_back_pen,
		0, 0, 901,
		A/2, 360, 4001
endif


! ==============================================================================
! 1 : 100
! ==============================================================================

trayFlange = 0.05
trayChamferCorner = 0.07

if gs_detlevel_2D_m > 1 then
	drawindex 30
	circle2 xWasteWaterPos * not(iCabinForm = CABINFORM_ROUND), yWasteWaterPos, 0.025

	if iCabinForm = CABINFORM_SQUAREDALCOVE | iCabinForm = CABINFORM_SQUAREDCORNER | iCabinForm = CABINFORM_SQUAREDPENINSULAR | iCabinForm = CABINFORM_SQUARE then
		poly2_b 9, 1+4, gs_fill_pen, gs_back_pen,
			-A/2 + trayFlange, B/2 - trayFlange - trayChamferCorner, 1,
			-A/2 + trayFlange, -B/2 + trayFlange + trayChamferCorner, 1,
			-A/2 + trayFlange + trayChamferCorner, -B/2 + trayFlange, 1001,
			A/2 - trayFlange - trayChamferCorner, -B/2 + trayFlange, 1,
			A/2 - trayFlange, -B/2 + trayFlange + trayChamferCorner, 1001,
			A/2 - trayFlange, B/2 - trayFlange - trayChamferCorner, 1,
			A/2 - trayFlange - trayChamferCorner, B/2 - trayFlange, 1001,
			-A/2 + trayFlange + trayChamferCorner, B/2 - trayFlange, 1,
			-A/2 + trayFlange, B/2 - trayFlange - trayChamferCorner, 1001
	endif
	if iCabinForm = CABINFORM_ROUNDEDCORNER then
		poly2_b 9, 1+4, gs_fill_pen, gs_back_pen,
			-A/2 + trayFlange, B/2 - trayFlange - trayChamferCorner, 1,
			-A/2 + trayFlange, -B/2 + trayFlange + trayChamferCorner, 1,
			-A/2 + trayFlange + trayChamferCorner, -B/2 + trayFlange, 1001,
			A/2 - doorWidth*cos(45), -B/2 + trayFlange, 1,
			A/2 - trayFlange, -B/2 + doorWidth*cos(45), 1001,
			A/2 - trayFlange, B/2 - trayFlange - trayChamferCorner, 1,
			A/2 - trayFlange - trayChamferCorner, B/2 - trayFlange, 1001,
			-A/2 + trayFlange + trayChamferCorner, B/2 - trayFlange, 1,
			-A/2 + trayFlange, B/2 - trayFlange - trayChamferCorner, 1001
	endif
	if iCabinForm = CABINFORM_CHAMFERCORNER then
		poly2_b 11, 1+4, gs_fill_pen, gs_back_pen,
			-A/2 + trayFlange, B/2 - trayFlange - trayChamferCorner, 1,
			-A/2 + trayFlange, -B/2 + trayFlange + trayChamferCorner, 1,
			-A/2 + trayFlange + trayChamferCorner, -B/2 + trayFlange, 1001,
			A/2 - doorWidth*cos(45) - (trayFlange + trayChamferCorner) * tan(22.5), -B/2 + trayFlange, 1,
			A/2 - doorWidth*cos(45) - (trayFlange + trayChamferCorner) * tan(22.5) + trayChamferCorner * sin(45), -B/2 + trayFlange + trayChamferCorner * (1 - cos(45)), 1001,
			A/2 - trayFlange - trayChamferCorner * (1 - cos(45)), -B/2 + doorWidth*cos(45) + (trayFlange + trayChamferCorner) * tan(22.5) - trayChamferCorner * sin(45), 1,
			A/2 - trayFlange, -B/2 + doorWidth*cos(45) + (trayFlange + trayChamferCorner) * tan(22.5), 1001,
			A/2 - trayFlange, B/2 - trayFlange - trayChamferCorner, 1,
			A/2 - trayFlange - trayChamferCorner, B/2 - trayFlange, 1001,
			-A/2 + trayFlange + trayChamferCorner, B/2 - trayFlange, 1,
			-A/2 + trayFlange, B/2 - trayFlange - trayChamferCorner, 1001
	endif
	if iCabinForm = CABINFORM_ROUNDEDPENINSULAR then
		poly2_b 7, 1+4, gs_fill_pen, gs_back_pen,
			-A/2 + trayFlange, B/2 - trayFlange - trayChamferCorner, 1,
			-A/2 + trayFlange, -B/2 + A/2, 1,
			A/2 - trayFlange, -B/2 + A/2, 1001,
			A/2 - trayFlange, B/2 - trayFlange - trayChamferCorner, 1,
			A/2 - trayFlange - trayChamferCorner, B/2 - trayFlange, 1001,
			-A/2 + trayFlange + trayChamferCorner, B/2 - trayFlange, 1,
			-A/2 + trayFlange, B/2 - trayFlange - trayChamferCorner, 1001
	endif
	if iCabinForm = CABINFORM_ROUND then
		poly2_b 2, 1+2+4+64, gs_fill_pen, gs_back_pen,
			0, 0, 901,
			A/2 - trayFlange, 360, 4001
	endif
endif


! ==============================================================================
! 1 : 50
! ==============================================================================

if gs_detlevel_2D_m > 2 then
	circle2 xWasteWaterPos * not(iCabinForm = CABINFORM_ROUND), yWasteWaterPos, 0.025
	drawindex 50

	if gs_tap_type_m <> TAPTYPE_NONE & bShowShowerKit then
		add2 -A / 2, B / 2
		call "tapType_m" parameters     bEnableTapedit 		= 1,
										bSinkTap			= 0,
										xTapPos				= xTapPos,
										yTapPos				= 0,
										GS_HotspotUnIDBegin	= unID,
										gs_tap_type_m		= gs_tap_type_m,
										gs_cont_pen			= gs_cont_pen,
										gs_fill_type		= gs_fill_type,
										gs_fill_pen			= gs_fill_pen,
										gs_back_pen			= gs_back_pen
		del 1
	endif
	drawindex 40
	if iCabinForm = CABINFORM_SQUAREDALCOVE | iCabinForm = CABINFORM_SQUAREDCORNER | iCabinForm = CABINFORM_SQUAREDPENINSULAR | iCabinForm = CABINFORM_SQUARE then
		szi = atn(B/A)
		line2 xWasteWaterPos + wasteWaterR * 3, yWasteWaterPos, A/2 - trayFlange - wasteWaterR * 4, yWasteWaterPos
		line2 xWasteWaterPos, yWasteWaterPos - wasteWaterR * 3, xWasteWaterPos, -B/2 + trayFlange + wasteWaterR * 4
		line2 xWasteWaterPos + wasteWaterR * 3 * cos(szi), yWasteWaterPos - wasteWaterR * 3 * sin(szi), A/2 - trayFlange - wasteWaterR * 4, -B/2 + trayFlange + wasteWaterR * 4
	endif

	if iCabinForm = CABINFORM_ROUNDEDCORNER then
		drawindex 40
		szi = atn(B/A)
		line2 xWasteWaterPos + wasteWaterR * 3, yWasteWaterPos, A/2 - trayFlange - wasteWaterR * 4, yWasteWaterPos
		line2 xWasteWaterPos, yWasteWaterPos - wasteWaterR * 3, xWasteWaterPos, -B/2 + trayFlange + wasteWaterR * 4
		line2 xWasteWaterPos + wasteWaterR * 3 * cos(szi), yWasteWaterPos - wasteWaterR * 3 * sin(szi), A/2 - trayFlange - wasteWaterR * 8, -B/2 + trayFlange + wasteWaterR * 8
	endif

	if iCabinForm = CABINFORM_CHAMFERCORNER then
		drawindex 40
		szi = atn(B/A)
		line2 xWasteWaterPos + wasteWaterR * 3, yWasteWaterPos, A/2 - trayFlange - wasteWaterR * 4, yWasteWaterPos
		line2 xWasteWaterPos, yWasteWaterPos - wasteWaterR * 3, xWasteWaterPos, -B/2 + trayFlange + wasteWaterR * 4
		line2 xWasteWaterPos + wasteWaterR * 3 * cos(szi), yWasteWaterPos - wasteWaterR * 3 * sin(szi), A/2 - trayFlange - wasteWaterR * 12, -B/2 + trayFlange + wasteWaterR * 12
	endif

	if iCabinForm = CABINFORM_ROUNDEDPENINSULAR then
		drawindex 40
		szi = atn(B/A)
		line2 xWasteWaterPos + wasteWaterR * 3, yWasteWaterPos, A/2 - trayFlange - wasteWaterR * 4, yWasteWaterPos
		line2 xWasteWaterPos, yWasteWaterPos - wasteWaterR * 3, xWasteWaterPos, -B/2 + trayFlange + wasteWaterR * 8
		line2 xWasteWaterPos + wasteWaterR * 3 * cos(szi), yWasteWaterPos - wasteWaterR * 3 * sin(szi), A/2 - trayFlange - wasteWaterR * 8, -B/2 + trayFlange + wasteWaterR * 8
	endif

	if iCabinForm = CABINFORM_ROUND then
		drawindex 40

		line2 0, yWasteWaterPos - wasteWaterR * 3, 0, yWasteWaterPos - wasteWaterR * 3 - A/3
		line2 -wasteWaterR * 3 * cos(45), yWasteWaterPos - wasteWaterR * 3 * sin(45),
			  -wasteWaterR * 3 * cos(45) - A/3 * cos(45), yWasteWaterPos - wasteWaterR * 3 * sin(45) - A/3 * cos(45)
		line2 wasteWaterR * 3 * cos(45), yWasteWaterPos - wasteWaterR * 3 * sin(45),
			  wasteWaterR * 3 * cos(45) + A/3 * cos(45), yWasteWaterPos - wasteWaterR * 3 * sin(45) - A/3 * cos(45)
	endif

	if _iGrabPos <> GRAB_NONE then gosub "DrawDetailedGrabBar"
	if bOpenDoor2D then call "showerCabin_m" parameters all
endif


! ==============================================================================
! Minimal Space
! ==============================================================================

reqBMinSpace = 0
if MSFront > EPS then
	call "fa_minimalspace" parameters all MSType = 0, unID = 3000,
							returned_parameters reqBMinSpace,
												MSFillType,
												MSFillPen,
												MSFillBackPen,
												MSContLineType,
												MSContLinePen
endif
if reqBMinSpace <> 0 then
	unID = 3000
	drawindex 10
	FILL MSFillType
	line_type MSContLineType
	pen MSContLinePen

	if iCabinForm = CABINFORM_SQUAREDALCOVE | iCabinForm = CABINFORM_SQUAREDCORNER | iCabinForm = CABINFORM_SQUAREDPENINSULAR | iCabinForm = CABINFORM_SQUARE then
		put -A/2, -B/2, 0,
			A/2, -B/2, 1,
			A/2, -B/2 - MSFront, 1,
			-A/2, -B/2 - MSFront, 1

		hotspot2 -A/2, -B/2 - MSFront, unID : unID = unID + 1
		hotspot2  A/2, -B/2 - MSFront, unID : unID = unID + 1
	endif
	if iCabinForm = CABINFORM_ROUNDEDCORNER then
		put A/2 - doorWidth*cos(45), -B/2, 0,
			1, 0, 800,
			A/2, -B/2 + doorWidth*cos(45), 1001,
			A/2 + MSFront * cos(45), -B/2 + doorWidth*cos(45) - MSFront * sin(45), 1,
			A/2 - doorWidth*cos(45) + MSFront * cos(45), -B/2 - MSFront * sin(45), 1,
			A/2 - doorWidth*cos(45), -B/2, -1

		hotspot2  A/2 + MSFront * cos(45), -B/2 + doorWidth*cos(45) - MSFront * sin(45), unID : unID = unID + 1
		hotspot2  A/2 - doorWidth*cos(45) + MSFront * cos(45), -B/2 - MSFront * sin(45), unID : unID = unID + 1
	endif
	if iCabinForm = CABINFORM_CHAMFERCORNER then
		put A/2 - doorWidth*cos(45), -B/2, 0,
			A/2, -B/2 + doorWidth*cos(45), 1,
			A/2 + MSFront * cos(45), -B/2 + doorWidth*cos(45) - MSFront * sin(45), 1,
			A/2 - doorWidth*cos(45) + MSFront * cos(45), -B/2 - MSFront * sin(45), 1,
			A/2 - doorWidth*cos(45), -B/2, -1

		hotspot2  A/2 + MSFront * cos(45), -B/2 + doorWidth*cos(45) - MSFront * sin(45), unID : unID = unID + 1
		hotspot2  A/2 - doorWidth*cos(45) + MSFront * cos(45), -B/2 - MSFront * sin(45), unID : unID = unID + 1
	endif
	if iCabinForm = CABINFORM_ROUNDEDPENINSULAR | iCabinForm = CABINFORM_ROUND then
		put  - doorWidth/2, -B/2 + A/2 - A/2 * cos(arcAngle/2), 0,
			doorWidth/2, -B/2 + A/2 - A/2 * cos(arcAngle/2), 1,
			doorWidth/2, -B/2 + A/2 - A/2 * cos(arcAngle/2) - MSFront, 1,
			-doorWidth/2, -B/2 + A/2 - A/2 * cos(arcAngle/2) - MSFront, 1

		hotspot2 -doorWidth/2, -B/2 + A/2 - A/2 * cos(arcAngle/2) - MSFront, unID : unID = unID + 1
		hotspot2 doorWidth/2, -B/2 + A/2 - A/2 * cos(arcAngle/2) - MSFront, unID : unID = unID + 1
	endif

	poly2_b nsp/3, 1+2+4+64, MSFillPen, MSFillBackPen,
			get(nsp)
endif


! ==============================================================================
! MEP
! ==============================================================================

line_type 1

if bShowMEP then

	DrawingNum = 1
	PEN gs_cont_pen

				! --- OTHER VIEWS --- !

	ROT2 -SYMB_ROTANGLE * (DrawingNum > 1 AND NOT(SYMB_MIRRORED))+SYMB_ROTANGLE * (DrawingNum > 1 AND SYMB_MIRRORED)

	IF DrawingNum = 2 THEN PROJECT2 -3, 90, 2	! Bottom
	IF DrawingNum = 3 THEN PROJECT2 4, 270, 2	! Front
	IF DrawingNum = 4 THEN PROJECT2 4, 90, 2	! Back
	IF DrawingNum = 5 THEN PROJECT2 4, 180*(SYMB_MIRRORED), 2		! Right
	IF DrawingNum = 6 THEN PROJECT2 4, 180*NOT(SYMB_MIRRORED), 2	! Left


	ConEdit_1 = 12
	ConEdit_2 = 12
				! --- CONNECTIONS --- !

	add2 -A/2 + xTapPos, 0

	CALL "MEP_m_ConnectionsACL_4" PARAMETERS SetProgram = SetProgram,
		ui_current_con = ui_current_con,
		MEP_NumberConnections = MEP_NumberConnections,
		MEP_NumConnectionData = gs_Connections,
		gs_AddConnections = gs_AddConnections,
		DrawingNum = DrawingNum,
		MEP_InsShow = 0,
		MEP_cline_show = 0,
		gs_cont_pen = gs_cont_pen,
		gs_fill_type=gs_fill_type,
		gs_fill_pen=gs_fill_pen,
		gs_back_pen=gs_back_pen,
		ConPosX_1=ConPosX_1, ConPosY_1=ConPosY_1, ConLength_1=ConLength_1, ConShow_1 = 1, ConEdit_1 = ConEdit_1,
		ConPosX_2=ConPosX_2, ConPosY_2=ConPosY_2, ConLength_2=ConLength_2, ConShow_2 = 1, ConEdit_2 = ConEdit_2,
		ConShow_3 = 0, ConHotspotShow_3 = 0
	DEL 1

	CALL "MEP_m_ConnectionsACL_4" PARAMETERS SetProgram = SetProgram,
		ui_current_con = ui_current_con,
		MEP_NumberConnections = MEP_NumberConnections,
		MEP_NumConnectionData = gs_Connections,
		gs_AddConnections = gs_AddConnections,
		DrawingNum = DrawingNum,
		MEP_InsShow = 0,
		MEP_cline_show = 0,
		gs_cont_pen = gs_cont_pen,
		gs_fill_type=gs_fill_type,
		gs_fill_pen=gs_fill_pen,
		gs_back_pen=gs_back_pen,
		ConShow_1 = 0, ConHotspotShow_1 = 0,
		ConShow_2 = 0, ConHotspotShow_2 = 0,
		ConPosX_3=ConPosX_3, ConPosY_3=ConPosY_3, ConLength_3=ConLength_3, ConShow_3 = 0, ConEdit_3 = 0
	del 1

ENDIF


end


! ==============================================================================
! Subrutines
! ==============================================================================

!--- Grab Bar ---

"DrawDetailedGrabBar":

if bGrabBar2D then
	grabBarR = 0.011
	grabBarL = 0.416
	if _iGrabPos = GRAB_WALL_LEFT then 
		add2 -A/2 + 5*grabBarR, -grabBarL/2
	else
		add2 -grabBarL/2, A/2-5*grabBarR
		rot2 -90
	endif

	poly2_b 13, 1+2+4+64, gs_fill_pen, gs_back_pen,
		0, 0, 1,
		0, grabBarL, 1,
		-grabBarR, grabBarL, 1,
		-grabBarR, grabBarL - 0.035, 1,
		-5*grabBarR, grabBarL - 0.035, 1,
		-5*grabBarR, grabBarL - 0.035 - 0.053, 1,
		-grabBarR, grabBarL - 0.035 - 0.053, 1,
		-grabBarR, 0.035 + 0.053, 1,
		-5*grabBarR, 0.035 + 0.053, 1,
		-5*grabBarR, 0.035, 1,
		-grabBarR, 0.035, 1,
		-grabBarR, 0, 1,
		0, 0, -1
	if _iGrabPos = GRAB_WALL_LEFT then
		del 1
	else
		del 2
	endif
endif
return
]]>
</Script_2D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_1D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
! ==============================================================================
! Shower Cabin
! ==============================================================================


EPS = 0.00001

CABINTYPE_ALCOVE 			= 1
CABINTYPE_CORNER 			= 2
CABINTYPE_PENINSULAR 		= 3
CABINTYPE_FREESTANDING		= 4

CABINFORM_SQUAREDALCOVE 	= 1
CABINFORM_SQUAREDCORNER 	= 2
CABINFORM_ROUNDEDCORNER 	= 3
CABINFORM_CHAMFERCORNER 	= 4
CABINFORM_SQUAREDPENINSULAR	= 5
CABINFORM_ROUNDEDPENINSULAR = 6
CABINFORM_SQUARE 			= 7
CABINFORM_ROUND 			= 8

DOORTYPE_SIMPLELEAF				= 1
DOORTYPE_DOUBLELEAF				= 2
DOORTYPE_SIMPLELEAF_SIDEPANEL1	= 3
DOORTYPE_SIMPLELEAF_SIDEPANEL2	= 4
DOORTYPE_DOUBLELEAF_SIDEPANEL1	= 5
DOORTYPE_DOUBLELEAF_SIDEPANEL2	= 6
DOORTYPE_FOLDING				= 7
DOORTYPE_DOUBLEFOLDING			= 8
DOORTYPE_SLIDING				= 9
DOORTYPE_DOUBLESLIDING			= 10
DOORTYPE_CORNERSLIDING			= 11

PANELTYPE_FRAMED	= 1
PANELTYPE_GLAZED	= 2

TAPTYPE_NONE		= 0
TAPTYPE_THERMO		= 24
TAPTYPE_PIPE		= 25
TAPTYPE_PANEL		= 26
TAPTYPE_OVERHEAD	= 27

GRAB_NONE 		= 0
GRAB_WALL_LEFT 	= 1
GRAB_WALL_UP 	= 2

! enabled by cabin type
_iGrabPos = GRAB_NONE
if iCabinType <> 4 then
	if iCabinType = CABINTYPE_ALCOVE or iCabinType = CABINTYPE_CORNER then
		_iGrabPos = GRAB_WALL_LEFT
	else
		if iCabinType = CABINTYPE_PENINSULAR then 
			_iGrabPos = GRAB_WALL_UP
		endif
	endif
endif

if not(bGrabBar) then  bGrabBar2D = 0
if gs_tap_type_m = TAPTYPE_NONE then  bShowShowerKit = 0

glassThk = 0.003
frameThk = 0.01
frameWidth = 0.04
xWasteWaterPos = -A/2 + 0.175
yWasteWaterPos = B/2 - 0.175
wasteWaterR = 0.025
arcAngle = 90
if iCabinForm = CABINFORM_ROUNDEDPENINSULAR | iCabinForm = CABINFORM_ROUND then arcAngle = 2 * asn(doorWidth/A)
if not(bTray) then trayThk = 0		! no tray

bMetricDimensionNeeded = 0
if GLOB_SCRIPT_TYPE = 4 | \		! parameter script
	GLOB_SCRIPT_TYPE = 5 then	! interface script
	w_units_form = ""
	rrr = request("Working_length_unit", "", w_units_form)
	bMetricDimensionNeeded = strstr(w_units_form, "m")		! m, cm, mm
endif

dim st_cabinSize[7]
if bMetricDimensionNeeded then
		st_cabinSize[1] = str{2}("%.0mm", defaultCabinSize1) + ` x ` + str{2}("%.0mm", defaultCabinSize1)
		st_cabinSize[2] = str{2}("%.0mm", defaultCabinSize2) + ` x ` + str{2}("%.0mm", defaultCabinSize2)
		st_cabinSize[3] = str{2}("%.0mm", defaultCabinSize3) + ` x ` + str{2}("%.0mm", defaultCabinSize3)
		st_cabinSize[4] = `O` + str{2}("%.0mm", defaultCabinSize1)
		st_cabinSize[5] = `O` + str{2}("%.0mm", defaultCabinSize2)
		st_cabinSize[6] = `O` + str{2}("%.0mm", defaultCabinSize3)
		st_cabinSize[7] = `Специальный`
else
		st_cabinSize[1] = str{2}("%0.64fi", defaultCabinSize1) + ` x ` + str{2}("%0.64fi", defaultCabinSize1)
		st_cabinSize[2] = str{2}("%0.64fi", defaultCabinSize2) + ` x ` + str{2}("%0.64fi", defaultCabinSize2)
		st_cabinSize[3] = str{2}("%0.64fi", defaultCabinSize3) + ` x ` + str{2}("%0.64fi", defaultCabinSize3)
		st_cabinSize[4] = `O` + str{2}("%0.64fi", defaultCabinSize1)
		st_cabinSize[5] = `O` + str{2}("%0.64fi", defaultCabinSize2)
		st_cabinSize[6] = `O` + str{2}("%0.64fi", defaultCabinSize3)
		st_cabinSize[7] = `Специальный`
endif

if gs_tap_type_m > 25 then
	if gs_tap_type_m = 26 then
		widthTap	= 0.3
		limit_X		= widthTap/2
		limit_Y1	= 0.35
		limit_Y2	= 1.04
	endif
	if gs_tap_type_m = 27 then
		widthTap	= 0.16
		limit_X		= widthTap/2
		limit_Y1	= 0.13
		limit_Y2	= 0.13
	endif
else
	widthTap = 0.068
	posTap = 0.041
endif

! Show MEP Connections -------------------------------------------------------------[

isavailable = 0
isInArchiCAD = APPLICATION_QUERY ("MEPMODELER", "IsAvailable()", isavailable)
isMEPEnabled = (isavailable OR isInArchiCAD = 0)
if isMEPEnabled then
	bShowMEP = 1
	reqBMep = 0
	success = LIBRARYGLOBAL ("LibraryGlobals13", "showMepConnect", reqBMep)
	if success > 0 then
		bShowMEP = reqBMep
	endif
else
	bShowMEP = 0
endif

! Show MEP Connections -------------------------------------------------------------]

]]>
</Script_1D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_VL SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
! ==============================================================================
! Shower Cabin
! ==============================================================================


call "FM_types" parameters all

dim st_detail3D[4]
	st_detail3D[1] = `Детальный`
	st_detail3D[2] = `Простой`
	st_detail3D[3] = `Упрощенный`
	st_detail3D[4] = `Откл.`

values "gs_detlevel_3D" st_detail3D		!`Detailed`,`Simple`,`Draft`,`Off`
values "gs_detlevel_3D_m" 2, 1, 3, 0

if GLOB_MODPAR_NAME = "gs_detlevel_3D" then
	gs_detlevel_3D_m = 2	! Detailed
	if gs_detlevel_3D = st_detail3D[4] then gs_detlevel_3D_m = 0
	if gs_detlevel_3D = st_detail3D[2] then gs_detlevel_3D_m = 1
	if gs_detlevel_3D = st_detail3D[3] then gs_detlevel_3D_m = 3
	parameters gs_detlevel_3D_m = gs_detlevel_3D_m
else
	gs_detlevel_3D = st_detail3D[1]
	if gs_detlevel_3D_m = 0 then gs_detlevel_3D = st_detail3D[4]
	if gs_detlevel_3D_m = 1 then gs_detlevel_3D = st_detail3D[2]
	if gs_detlevel_3D_m = 3 then gs_detlevel_3D = st_detail3D[3]
	parameters gs_detlevel_3D = gs_detlevel_3D
endif

if gs_cont_pen=0 then parameters gs_cont_pen=75
if gs_fill_pen=0 then parameters gs_fill_pen=19

if gs_detlevel_3D_m = 1 then lock "gs_resol"

dim st_cabinType[4]
	st_cabinType[1] = `Ниша`
	st_cabinType[2] = `Угол`
	st_cabinType[3] = `Полуостров`
	st_cabinType[4] = `Отдельностоящая`

values "cabinType" st_cabinType

if GLOB_MODPAR_NAME = "cabinType" then
	for hi = 1 to vardim1(st_cabinType)
		if cabinType = st_cabinType[hi] then
			iCabinType = hi
		endif
	next hi
	parameters iCabinType = iCabinType
else
	cabinType = st_cabinType[iCabinType]
	parameters cabinType = cabinType
endif

dim st_cabinForm[8]
	st_cabinForm[1] = `Квадратная Ниша`
	st_cabinForm[2] = `Квадратный Угол`
	st_cabinForm[3] = `Скругленный Угол`
	st_cabinForm[4] = `Скошенный Угол`
	st_cabinForm[5] = `Квадратный Полуостров`
	st_cabinForm[6] = `Скругленный Полуостров`
	st_cabinForm[7] = `Квадрат`
	st_cabinForm[8] = `Круглые`

if iCabinType = CABINTYPE_ALCOVE then
	values "cabinForm" st_cabinForm[1]
	values "iCabinForm" 1

	cabinForm = st_cabinForm[1]
	parameters cabinForm = cabinForm
	iCabinForm = 1
	parameters iCabinForm = iCabinForm
	lock "cabinForm", "iCabinForm"
endif
if iCabinType = CABINTYPE_CORNER then
	values "cabinForm" st_cabinForm[2], st_cabinForm[3], st_cabinForm[4]
	values "iCabinForm" 2, 3, 4

	if GLOB_MODPAR_NAME = "cabinForm" then
		iCabinForm = 2
		if cabinForm = st_cabinForm[3] then iCabinForm = 3
		if cabinForm = st_cabinForm[4] then iCabinForm = 4
		parameters iCabinForm = iCabinForm
	else
		cabinForm = st_cabinForm[max(2, min(iCabinForm, vardim1(st_cabinForm)))]
		parameters cabinForm = cabinForm
	endif
endif
if iCabinType = CABINTYPE_PENINSULAR then
	values "cabinForm" st_cabinForm[5], st_cabinForm[6]
	values "iCabinForm" 5, 6

	if GLOB_MODPAR_NAME = "cabinForm" then
		iCabinForm = 5
		if cabinForm = st_cabinForm[6] then iCabinForm = 6
		parameters iCabinForm = iCabinForm
	else
		cabinForm = st_cabinForm[max(5, min(iCabinForm, vardim1(st_cabinForm)))]
		parameters cabinForm = cabinForm
	endif
endif
if iCabinType = CABINTYPE_FREESTANDING then
	values "cabinForm" st_cabinForm[7], st_cabinForm[8]
	values "iCabinForm" 7, 8

	if GLOB_MODPAR_NAME = "cabinForm" then
		iCabinForm = 7
		if cabinForm = st_cabinForm[8] then iCabinForm = 8
		parameters iCabinForm = iCabinForm
	else
		cabinForm = st_cabinForm[max(7, min(iCabinForm, vardim1(st_cabinForm)))]
		parameters cabinForm = cabinForm
	endif
endif

dim st_doorType[11]
	st_doorType[1] = `Одностворчатая Распашная`
	st_doorType[2] = `Двустворчатая Распашная`
	st_doorType[3] = `Одностворчатая с Боковой Панелью`
	st_doorType[4] = `Одностворчатая с Двумя Боковыми Панелями`
	st_doorType[5] = `Двустворчатая с Боковой Панелью`
	st_doorType[6] = `Двустворчатая с Двумя Боковыми Панелями`
	st_doorType[7] = `Складывающаяся`
	st_doorType[8] = `Двустворчатая Складывающаяся`
	st_doorType[9] = `Раздвижная`
	st_doorType[10] = `Двустворчатая Раздвижная`
	st_doorType[11] = `Раздвижная Угловая`

if iCabinForm = CABINFORM_SQUAREDALCOVE then
	values "doorType" 	st_doorType[1], st_doorType[2], st_doorType[3], st_doorType[4], st_doorType[5],\
						st_doorType[6], st_doorType[7], st_doorType[8], st_doorType[9], st_doorType[10]
	values "iDoorType" 1, 2, 3, 4, 5, 6, 7, 8, 9, 10

	if GLOB_MODPAR_NAME = "doorType" then
		for hi = 1 to vardim1(st_doorType) - 1
			if doorType = st_doorType[hi] then
				iDoorType = hi
			endif
		next hi
		parameters iDoorType = iDoorType
	else
		doorType = st_doorType[max(1, min(iDoortype, vardim1(st_doorType)))]
		parameters doorType = doorType
	endif
endif
if iCabinForm = CABINFORM_SQUAREDCORNER | iCabinForm = CABINFORM_SQUAREDPENINSULAR | iCabinForm = CABINFORM_SQUARE then
	values "doorType" 	st_doorType
	values "iDoorType" 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11

	if GLOB_MODPAR_NAME = "doorType" then
		for hi = 1 to vardim1(st_doorType)
			if doorType = st_doorType[hi] then
				iDoorType = hi
			endif
		next hi
		parameters iDoorType = iDoorType
	else
		doorType = st_doorType[max(1, min(iDoortype, vardim1(st_doorType)))]
		parameters doorType = doorType
	endif
endif
if iCabinForm = CABINFORM_ROUNDEDCORNER | iCabinForm = CABINFORM_ROUNDEDPENINSULAR | iCabinForm = CABINFORM_ROUND then
	values "doorType" 	st_doorType[1], st_doorType[2], st_doorType[9], st_doorType[10]
	values "iDoorType" 1, 2, 9, 10

	if GLOB_MODPAR_NAME = "doorType" then
		iDoorType = 1
		if doorType = st_doorType[2] then iDoorType = 2
		if doorType = st_doorType[9] then iDoorType = 9
		if doorType = st_doorType[10] then iDoorType = 10
		parameters iDoorType = iDoorType
	else
		doorType = st_doorType[max(1, min(iDoortype, vardim1(st_doorType)))]
		parameters doorType = doorType
	endif
endif
if iCabinForm = CABINFORM_CHAMFERCORNER then
	values "doorType" 	st_doorType[1], st_doorType[2], st_doorType[7], st_doorType[8]
	values "iDoorType" 1, 2, 7, 8

	if GLOB_MODPAR_NAME = "doorType" then
		iDoorType = 1
		if doorType = st_doorType[2] then iDoorType = 2
		if doorType = st_doorType[7] then iDoorType = 7
		if doorType = st_doorType[8] then iDoorType = 8
		parameters iDoorType = iDoorType
	else
		doorType = st_doorType[max(1, min(iDoortype, vardim1(st_doorType)))]
		parameters doorType = doorType
	endif
endif

dim st_panelType[2]
	st_panelType[1] = `Обрамленная Панель`
	st_panelType[2] = `Полностью Стеклянная`

if iDoorType = DOORTYPE_SIMPLELEAF | iDoorType = DOORTYPE_DOUBLELEAF | iDoorType = DOORTYPE_SIMPLELEAF_SIDEPANEL1\
 | iDoorType = DOORTYPE_SIMPLELEAF_SIDEPANEL2 | iDoorType = DOORTYPE_DOUBLELEAF_SIDEPANEL1 | iDoorType = DOORTYPE_DOUBLELEAF_SIDEPANEL2 then
	values "panelType" 	st_panelType
	values "iPanelType" 1, 2

	if GLOB_MODPAR_NAME = "panelType" then
		iPanelType = 1
		if panelType = st_panelType[2] then	iPanelType = 2
		parameters iPanelType = iPanelType
	else
		panelType = st_panelType[1]
		if iPanelType = 2 then panelType = st_panelType[2]
		parameters panelType = panelType
	endif
else
	panelType = st_panelType[1]
	iPanelType = 1
	parameters panelType = panelType, iPanelType = iPanelType
	lock "panelType"
endif

if iPanelType = PANELTYPE_FRAMED then lock "bBracket"
if iPanelType = PANELTYPE_FRAMED then hideparameter "bBracket"

if iCabinForm = CABINFORM_SQUAREDALCOVE | iCabinForm = CABINFORM_SQUAREDCORNER\
 | iCabinForm = CABINFORM_SQUAREDPENINSULAR | iCabinForm = CABINFORM_SQUARE then
	if iDoorType <> DOORTYPE_SLIDING then
		values "cabinSize" st_cabinSize[1], st_cabinSize[2], st_cabinSize[3], st_cabinSize[7]
	else
		values "cabinSize" st_cabinSize[2], st_cabinSize[3], st_cabinSize[7]
	endif
	values "iCabinSize" 1, 2, 3, 7

gosub "SizeOfCabin"

	if iDoorType = DOORTYPE_SIMPLELEAF_SIDEPANEL1 | iDoorType = DOORTYPE_DOUBLELEAF_SIDEPANEL1 then
		if ((GLOB_MODPAR_NAME = "doorType" | GLOB_MODPAR_NAME = "cabinSize") & cabinSize = st_cabinSize[1])  then doorWidth = defaultDoorWidth2
		if ((GLOB_MODPAR_NAME = "doorType" | GLOB_MODPAR_NAME = "cabinSize") & cabinSize = st_cabinSize[2])  then doorWidth = defaultDoorWidth3
		if ((GLOB_MODPAR_NAME = "doorType" | GLOB_MODPAR_NAME = "cabinSize") & cabinSize = st_cabinSize[3])  then doorWidth = defaultDoorWidth4
	endif
	if iDoorType = DOORTYPE_SIMPLELEAF_SIDEPANEL2 | iDoorType = DOORTYPE_DOUBLELEAF_SIDEPANEL2 | iDoorType = DOORTYPE_SLIDING | iDoorType = DOORTYPE_DOUBLESLIDING then
		if ((GLOB_MODPAR_NAME = "doorType" | GLOB_MODPAR_NAME = "cabinSize") & cabinSize = st_cabinSize[1])  then doorWidth = defaultDoorWidth1
		if ((GLOB_MODPAR_NAME = "doorType" | GLOB_MODPAR_NAME = "cabinSize") & cabinSize = st_cabinSize[2])  then doorWidth = defaultDoorWidth2
		if ((GLOB_MODPAR_NAME = "doorType" | GLOB_MODPAR_NAME = "cabinSize") & cabinSize = st_cabinSize[3])  then doorWidth = defaultDoorWidth4
	endif
	if iDoorType = DOORTYPE_CORNERSLIDING then
		if ((GLOB_MODPAR_NAME = "doorType" | GLOB_MODPAR_NAME = "cabinSize") & cabinSize = st_cabinSize[1])  then doorWidth = defaultDoorWidth5
		if ((GLOB_MODPAR_NAME = "doorType" | GLOB_MODPAR_NAME = "cabinSize") & cabinSize = st_cabinSize[2])  then doorWidth = defaultDoorWidth6
		if ((GLOB_MODPAR_NAME = "doorType" | GLOB_MODPAR_NAME = "cabinSize") & cabinSize = st_cabinSize[3])  then doorWidth = defaultDoorWidth7
	endif
	parameters doorWidth = doorWidth

	if GLOB_MODPAR_NAME = "doorType" then
		if iDoorType = DOORTYPE_SIMPLELEAF_SIDEPANEL1 | iDoorType = DOORTYPE_DOUBLELEAF_SIDEPANEL1 | iDoorType = DOORTYPE_SLIDING then
			sidePanelWidthL = A - doorWidth
			parameters sidePanelWidthL = sidePanelWidthL
		endif
		if iDoorType = DOORTYPE_SIMPLELEAF_SIDEPANEL2 | iDoorType = DOORTYPE_DOUBLELEAF_SIDEPANEL2 | iDoorType = DOORTYPE_DOUBLESLIDING then
			sidePanelWidthL = (A - doorWidth) / 2
			sidePanelWidthR = sidePanelWidthL
			parameters sidePanelWidthL = sidePanelWidthL, sidePanelWidthR = sidePanelWidthR
		endif
	endif
endif
if iCabinForm = CABINFORM_ROUNDEDCORNER | iCabinForm = CABINFORM_CHAMFERCORNER then
	values "cabinSize" st_cabinSize[1], st_cabinSize[2], st_cabinSize[3], st_cabinSize[7]
	values "iCabinSize" 1, 2, 3, 7

gosub "SizeOfCabin"

	if ((GLOB_MODPAR_NAME = "cabinForm" | GLOB_MODPAR_NAME = "cabinSize") & cabinSize = st_cabinSize[1])  then
		doorWidth = defaultDoorWidth5
	endif
	if ((GLOB_MODPAR_NAME = "cabinForm" | GLOB_MODPAR_NAME = "cabinSize") & cabinSize = st_cabinSize[2])  then
		doorWidth = defaultDoorWidth6
	endif
	if ((GLOB_MODPAR_NAME = "cabinForm" | GLOB_MODPAR_NAME = "cabinSize") & cabinSize = st_cabinSize[3])  then
		doorWidth = defaultDoorWidth7
	endif
	parameters doorWidth = doorWidth
endif
if iCabinForm = CABINFORM_ROUNDEDPENINSULAR then
	values "cabinSize" st_cabinSize[1], st_cabinSize[2], st_cabinSize[3], st_cabinSize[7]
	values "iCabinSize" 1, 2, 3, 7

gosub "SizeOfCabin"

	if ((GLOB_MODPAR_NAME = "cabinForm" | GLOB_MODPAR_NAME = "cabinSize") & cabinSize = st_cabinSize[1])  then
		doorWidth = defaultDoorWidth4
	endif
	if ((GLOB_MODPAR_NAME = "cabinForm" | GLOB_MODPAR_NAME = "cabinSize") & cabinSize = st_cabinSize[2])  then
		doorWidth = defaultDoorWidth4
	endif
	if ((GLOB_MODPAR_NAME = "cabinForm" | GLOB_MODPAR_NAME = "cabinSize") & cabinSize = st_cabinSize[3])  then
		doorWidth = defaultDoorWidth4
	endif
	parameters doorWidth = doorWidth
endif
if iCabinForm = CABINFORM_ROUND then
	values "cabinSize" st_cabinSize[4], st_cabinSize[5], st_cabinSize[6], st_cabinSize[7]
	values "iCabinSize" 4, 5, 6, 7

	if GLOB_MODPAR_NAME = "cabinSize" then
		iCabinSize = 4
		if cabinSize = st_cabinSize[5] then iCabinSize = 5
		if cabinSize = st_cabinSize[6] then iCabinSize = 6
		if cabinSize = st_cabinSize[7] then iCabinSize = 7
		parameters iCabinSize = iCabinSize
	else
		cabinSize = st_cabinSize[max(4, min(iCabinSize, vardim1(st_cabinSize)))]
		parameters cabinSize = cabinSize
	endif

	if GLOB_MODPAR_NAME = "A" | GLOB_MODPAR_NAME = "B" then
		cabinSize = st_cabinSize[7]
		if abs(A - defaultCabinSize1) < eps & abs(B - defaultCabinSize1) < eps then
			cabinSize = st_cabinSize[4]
			iCabinSize = 4
		endif
		if abs(A - defaultCabinSize2) < eps & abs(B - defaultCabinSize2) < eps then
			cabinSize = st_cabinSize[5]
			iCabinSize = 5
		endif
		if abs(A - defaultCabinSize3) < eps & abs(B - defaultCabinSize3) < eps then
			cabinSize = st_cabinSize[6]
			iCabinSize = 6
		endif
		parameters cabinSize = cabinSize
		parameters iCabinSize = iCabinSize
	endif

	if (GLOB_MODPAR_NAME = "A" | GLOB_MODPAR_NAME = "doorType" | GLOB_MODPAR_NAME = "cabinSize" | GLOB_MODPAR_NAME = "cabinForm") then
		doorWidth = defaultDoorWidth4
		parameters doorWidth = doorWidth
	endif
endif

if GLOB_MODPAR_NAME = "cabinSize" then
	if cabinSize = st_cabinSize[1] | cabinSize = st_cabinSize[4] then
		A = defaultCabinSize1
		B = defaultCabinSize1
		parameters A = A, B = B
	endif
	if cabinSize = st_cabinSize[2] | cabinSize = st_cabinSize[5] then
		A = defaultCabinSize2
		B = defaultCabinSize2
		parameters A = A, B = B
	endif
	if cabinSize = st_cabinSize[3] | cabinSize = st_cabinSize[6] then
		A = defaultCabinSize3
		B = defaultCabinSize3
		parameters A = A, B = B
	endif
endif

dim st_handleType[8]
	st_handleType[1] = `Стиль 1`
	st_handleType[2] = `Стиль 2`
	st_handleType[3] = `Стиль 3`
	st_handleType[4] = `Стиль 4`
	st_handleType[5] = `Стиль 5`
	st_handleType[6] = `Стиль 6`
	st_handleType[7] = `Стиль 7`
	st_handleType[8] = `Нет`

values "handleType" st_handleType

if GLOB_MODPAR_NAME = "handleType" then
	for hi = 1 to vardim1(st_handleType)
		if handleType = st_handleType[hi] then
			iHandleType = hi
		endif
	next hi
	parameters iHandleType = iHandleType
else
	handleType = st_handleType[max(1, min(iHandleType, vardim1(st_handleType)))]
	parameters handleType = handleType
endif

call "showerCabin_m" parameters all

call "2dDetailLevel" parameters	all enable2dDetLevels	= 2 + 4 + 8 + 16

if iCabinType = CABINTYPE_FREESTANDING then	!! Only gs_tap_type_m 0, 27 are enabled
	enableCustomTaps = 2**2 + 2**29
else										!! gs_tap_type_m 0, 24, 25, 26, 27 are enabled
	enableCustomTaps = 2**2 + 2**26 + 2**27 + 2**28 + 2**29
endif

call "tapType_m" parameters	all	enableTapGroups			= 0,
								enableSingleLevelTaps	= 0,
								enableTwoHandleTaps		= 0,
								enableTraditionalTaps	= 0,
								enableSensorFaucets		= 0,
								enableWallMountedTaps	= 0,
								enableCustomTaps		= enableCustomTaps,
								bEnableTapEdit			= 0,
								bShowerCabin			= 1,
								bShowerCabinFreeStand	= (iCabinType = CABINTYPE_FREESTANDING),
								enableTapSymbols		= 0


! ==============================================================================
! Limitation
! ==============================================================================

values "A" range [0.60, ]
values "B" range [0.46, ]
values "ZZYZX" range [1.8, ]
values "cabinFrameWidth" range (0, 0.1]
values "doorFrameWidth" range (0, 0.1]
values "trayThk" range [0.1, 0.5]
If not(bTray) then lock "trayThk"

if iCabinForm = CABINFORM_SQUAREDALCOVE | iCabinForm = CABINFORM_SQUAREDCORNER\
 | iCabinForm = CABINFORM_SQUAREDPENINSULAR | iCabinForm = CABINFORM_SQUARE then
	if iDoorType = DOORTYPE_SIMPLELEAF_SIDEPANEL1 | iDoorType = DOORTYPE_DOUBLELEAF_SIDEPANEL1 | iDoorType = DOORTYPE_SLIDING then
		doorWidthMin = 0.4
		doorWidthMax = min(A - 3*cabinFrameWidth, 1)
		values "doorWidth" range [doorWidthMin, doorWidthMax]
		values "halfDoorWidth" range [doorWidthMin/2, doorWidthMax/2]
		values "sidePanelWidthL" range [max(3*cabinFrameWidth,A - doorWidthMax), A - doorWidthMin]
		lock "sidePanelWidthR"
		hideparameter "sidePanelWidthR"
	endif
	if iDoorType = DOORTYPE_SIMPLELEAF_SIDEPANEL2 | iDoorType = DOORTYPE_DOUBLELEAF_SIDEPANEL2 | iDoorType = DOORTYPE_DOUBLESLIDING then
		doorWidthMin = 0.4
		doorWidthMax = min(A - 6*cabinFrameWidth, 1)
		values "doorWidth" range [doorWidthMin, doorWidthMax]
		values "halfDoorWidth" range [doorWidthMin/2, doorWidthMax/2]
		values "sidePanelWidthL" range [3*cabinFrameWidth, A - doorWidthMin - 3*cabinFrameWidth]
		values "sidePanelWidthR" range [3*cabinFrameWidth, A - doorWidthMin - 3*cabinFrameWidth]
	endif
	if iDoorType = DOORTYPE_SIMPLELEAF | iDoorType = DOORTYPE_DOUBLELEAF | iDoorType = DOORTYPE_FOLDING | iDoorType = DOORTYPE_DOUBLEFOLDING then
		lock "doorWidth", "sidePanelWidthL", "sidePanelWidthR"
		hideparameter "doorWidth", "sidePanelWidthL", "sidePanelWidthR"
	endif
	if iDoorType = DOORTYPE_FOLDING then values "gs_open3D" range [0, A - 2*cabinFrameWidth - 2*frameThk]
	if iDoorType = DOORTYPE_DOUBLEFOLDING then values "gs_open3D" range [0, A/2 - cabinFrameWidth - 2*frameThk]
	panelThkMod = 0
	if iCabinForm <> CABINFORM_SQUAREDALCOVE then panelThkMod = frameThk
	if iDoorType = DOORTYPE_SLIDING then values "gs_open3D" range [0, min(sidePanelWidthL - doorFrameWidth - panelThkMod, A - sidePanelWidthL)]
	if iDoorType = DOORTYPE_DOUBLESLIDING then values "gs_open3D" range [0, min(doorWidth/2, sidePanelWidthL - doorFrameWidth - panelThkMod, sidePanelWidthR - doorFrameWidth - panelThkMod)]
	if iDoortype = DOORTYPE_CORNERSLIDING then
		doorWidthMin = 0.4
		doorWidthMax = min((A - 5*cabinFrameWidth)/cos(45), 1)
		values "doorWidth" range [doorWidthMin, doorWidthMax]
		values "halfDoorWidth" range [doorWidthMin/2, doorWidthMax/2]
		values "gs_open3D" range [0, min(sidePanelWidthL - doorFrameWidth - panelThkMod, sidePanelWidthR - doorFrameWidth - panelThkMod, A - sidePanelWidthL - panelThkMod)]
	endif
	values "gs_open_3D" range [0, 90]
endif
if iCabinForm = CABINFORM_ROUNDEDCORNER then
	if iDoorType = DOORTYPE_SIMPLELEAF | iDoorType = DOORTYPE_DOUBLELEAF then
		doorWidthMin = 0.4
		doorWidthMax = min((A - 3*cabinFrameWidth)/cos(45), 1)
		values "doorWidth" range [doorWidthMin, doorWidthMax]
		values "halfDoorWidth" range [doorWidthMin/2, doorWidthMax/2]
	endif
	if iDoorType = DOORTYPE_SLIDING | iDoorType = DOORTYPE_DOUBLESLIDING then
		doorWidthMin = 0.4
		doorWidthMax = min((A/2 + cabinFrameWidth)/cos(45), 1)
		values "doorWidth" range [doorWidthMin, doorWidthMax]
		values "halfDoorWidth" range [doorWidthMin/2, doorWidthMax/2]
	endif
	arcRadius = doorWidth*cos(45) - frameThk
	panelWidth = arcRadius * PI / 2
	if iDoorType = DOORTYPE_SLIDING then values "gs_open3D" range [0, panelWidth]
	if iDoorType = DOORTYPE_DOUBLESLIDING then values "gs_open3D" range [0, panelWidth/2]
	if GLOB_MODPAR_NAME = "gs_open3D" then
		gs_open_3D = 2*gs_open3D/A/PI*180
		parameters gs_open_3D = gs_open_3D
	else
		gs_open3D = gs_open_3D/2*A*PI/180
		parameters gs_open3D = gs_open3D
	endif
	values "gs_open_3D" range [0, 90]
	values "sidePanelWidthL" range [3*cabinFrameWidth, A - doorWidthMin*cos(45)]
	values "sidePanelWidthR" range [3*cabinFrameWidth, B - doorWidthMin*cos(45)]
endif
if iCabinForm = CABINFORM_CHAMFERCORNER then
	_sidePanelWidthMin = 0.17
	doorWidthMin = 0.4
	_shorterSide = min (A, B)
	doorWidthMax = min((_shorterSide - _sidePanelWidthMin)/cos(45), 1)
	values "doorWidth" range [doorWidthMin, doorWidthMax]
	values "halfDoorWidth" range [doorWidthMin/2, doorWidthMax/2]
	if iDoorType = DOORTYPE_FOLDING then values "gs_open3D" range [0, doorWidth - 2*cabinFrameWidth - 2*frameThk]
	if iDoorType = DOORTYPE_DOUBLEFOLDING then values "gs_open3D" range [0, doorWidth/2 - cabinFrameWidth - 2*frameThk]
	values "gs_open_3D" range [0, arcAngle]

	if B < A then
		values "sidePanelWidthL" range [_sidePanelWidthMin + A - B,	A - doorWidthMin*cos(45)]
		values "sidePanelWidthR" range [_sidePanelWidthMin,			B - doorWidthMin*cos(45)]
	else !if A <= B
		values "sidePanelWidthL" range [_sidePanelWidthMin,			A - doorWidthMin*cos(45)]
		values "sidePanelWidthR" range [_sidePanelWidthMin + B - A,	B - doorWidthMin*cos(45)]
	endif

	if GLOB_MODPAR_NAME = "sidePanelWidthR" then
		_sidePanelWidthL	= sidePanelWidthR + A - B
		_doorWidth			= (A - _sidePanelWidthL) / cos(45)
		parameters		sidePanelWidthL	= _sidePanelWidthL,
						doorWidth		= _doorWidth
	else
		if GLOB_MODPAR_NAME = "doorWidth" then
			_sidePanelWidthL	= A - doorWidth* cos(45)
			_sidePanelWidthR	= B - doorWidth* cos(45)
			parameters		sidePanelWidthL	= _sidePanelWidthL,
							sidePanelWidthR	= _sidePanelWidthR
		else
			_sidePanelWidthR	= sidePanelWidthL + B - A
			_doorWidth			= (A - _sidePanelWidthL) / cos(45)
			parameters		sidePanelWidthR	= _sidePanelWidthR,
							doorWidth		= _doorWidth
		endif
	endif

endif
if iCabinForm = CABINFORM_ROUNDEDPENINSULAR | iCabinForm = CABINFORM_ROUND then
	B = A
	parameters B = B
	lock "B"
	doorWidthMin = 0.4
	doorWidthMax = min(A * 0.8, 1)
	values "doorWidth" range [doorWidthMin, doorWidthMax]
	values "halfDoorWidth" range [doorWidthMin/2, doorWidthMax/2]
	arcAngle = 2 * asn(doorWidth/A)
	panelWidth = A/2 * PI * arcAngle/180
	if iDoorType = DOORTYPE_SLIDING then values "gs_open3D" range [0, panelWidth]
	if iDoorType = DOORTYPE_DOUBLESLIDING then values "gs_open3D" range [0, panelWidth/2]
	if GLOB_MODPAR_NAME = "gs_open3D" then
		gs_open_3D = 2*gs_open3D/A/PI*180
		parameters gs_open_3D = gs_open_3D
	else
		gs_open3D = gs_open_3D/2*A*PI/180
		parameters gs_open3D = gs_open3D
	endif
	values "gs_open_3D" range [0, arcAngle]
endif

if iDoorType <> DOORTYPE_SIMPLELEAF & iDoorType <> DOORTYPE_SIMPLELEAF_SIDEPANEL1 & iDoorType <> DOORTYPE_SIMPLELEAF_SIDEPANEL2 then
	lock "bMirrorDoor"
	hideparameter "bMirrorDoor"
endif

if iCabinType = CABINTYPE_FREESTANDING then
	xTapPos = A/2
	parameters xTapPos = xTapPos
else
	values "xTapPos" range [0.2, A - 0.3]
endif
if gs_tap_type_m = TAPTYPE_PANEL then
	zTapPos = 1
	parameters zTapPos = zTapPos
else
	values "zTapPos" range [0.4, 1.1]
endif

values "gs_resol" range [12,)
values "MSFront" range [0,)

if iPanelType = 2 then ! Fully Glazed
	lock "cabinFrameWidth", "doorFrameWidth"
	hideparameter "cabinFrameWidth", "doorFrameWidth"
endif

if not(bGrabBar) then lock "bGrabBar2D"
if gs_tap_type_m = TAPTYPE_NONE then lock "bShowShowerKit"

if _iGrabPos = GRAB_NONE then
	hideparameter "bGrabBar2D"
	lock "bGrabBar2D"
	lock "bGrabBar"
	hideparameter "bGrabBar"
endif
! ==============================================================================
! MEP
! ==============================================================================

IF isMEPEnabled THEN

	IF NOT(ConStatus_1) AND NOT(ConStatus_2) AND NOT(ConStatus_3) THEN
		LOCK "gs_con_mat"
		HIDEPARAMETER "gs_con_mat"
	ENDIF

	DIM shape_typ_to_validation[3]
		shape_typ_to_validation[1] = 0		! Rectangle
		shape_typ_to_validation[2] = 1		! Circle
		shape_typ_to_validation[3] = 0		! Oval

					! --- CONNECTIONS --- !

	PARAMETERS MEP_NumberConnections = 3


					! --- 1st CONNECTION --- !

	ConID = 1
	ConName = `Подключение Горячей Воды`

	if gs_tap_type_m <> TAPTYPE_NONE then
		IF ConWidth_1 < 0.001 THEN
			ConWidth_1 = 0.001
			PARAMETERS ConWidth_1 = ConWidth_1
		ENDIF
		IF ConWidth_1 > MIN(A/2, zzyzx/2) THEN
			ConWidth_1 = MIN(A/2, zzyzx/2)
			PARAMETERS ConWidth_1 = ConWidth_1
		ENDIF
		VALUES "ConWidth_1" RANGE (0, MIN(A/2, zzyzx/2)]
		PARAMETERS ConDepth_1 = ConWidth_1
		VALUES "ConLength_1" RANGE [0, ]

		ConDVecX = 0
		ConDVecY = 1
		ConDVecZ = 0

		ConWVecX = -1
		ConWVecY = 0
		ConWVecZ = 0

		! Default Position
		if (GLOB_MODPAR_NAME = "gs_tap_type" | GLOB_MODPAR_NAME = "gs_tap_type_m" | \
		GLOB_MODPAR_NAME = "tapGroup" | GLOB_MODPAR_NAME = "iTapGroup") then
			if gs_tap_type_m = 26 then
				ConPosX_1 = widthTap/4
				ConPosZ_1 = zTapPos
			else
				if gs_tap_type_m = 27 then
					ConPosX_1 = 0
					ConPosZ_1 = zTapPos - 0.05
				else
					ConPosX_1 = posTap + widthTap/2
					ConPosZ_1 = zTapPos
				endif
			endif
			parameters	ConPosX_1 = ConPosX_1,
						ConPosZ_1 = ConPosZ_1
		endif

		! Position in y direction
		if GLOB_MODPAR_NAME = "B" then
			_ConPosY_1 = B / 2
			parameters	ConPosY_1 = _ConPosY_1
		endif

		if gs_tap_type_m > 25 then
			values "ConPosX_1" range [-limit_X + ConWidth_1/2, limit_X - ConWidth_1/2]
			values "ConPosZ_1" range [zTapPos - limit_Y1 + ConWidth_1/2, zTapPos + limit_Y2 - ConWidth_1/2]
		else

			! --- X Range
			values "ConPosX_1"	range [posTap + ConWidth_1/2,posTap+widthTap - ConWidth_1/2],
								range [-(posTap+widthTap - ConWidth_1/2),-(posTap + ConWidth_1/2)]

			! --- Change Connection Side
			if GLOB_MODPAR_NAME = "ConPosX_2" then
				if ConPosX_2 < 0 & ConPosX_1 < 0 then
					ConPosX_1 = posTap + widthTap/2
					parameters 	ConPosX_1 = ConPosX_1
				endif
				if ConPosX_2 > 0 & ConPosX_1 > 0 then
					ConPosX_1 = -(posTap + widthTap/2)
					parameters 	ConPosX_1 = ConPosX_1
				endif
			endif

			ConPosZ_1 = zTapPos
		endif



		parameters 	ConPosX_1 = ConPosX_1,
					ConPosZ_1 = ConPosZ_1

	else
		ConStatus_1 = 0
		lock "ConStatus_1"
		hideparameter "ConStatus_1"
	endif

	CALL "MEP_m_ConnectionsACL_4" PARAMETERS SetProgram = SetProgram,
		gs_Connections = gs_Connections,
		MEP_NumConnectionData = MEP_NumConnectionData,
		MEP_StrConnectionData = MEP_StrConnectionData,
		MEP_NumberConnections = MEP_NumberConnections,
		gs_AddConnections = gs_AddConnections,
		ConName = ConName,
		ConID = ConID,
		ConPosX = ConPosX_1,
		ConPosY = ConPosY_1,
		ConPosZ = ConPosZ_1,
		ConDVecX = ConDVecX,
		ConDVecY = ConDVecY,
		ConDVecZ = ConDVecZ,
		ConWVecX = ConWVecX,
		ConWVecY = ConWVecY,
		ConWVecZ = ConWVecZ,

		ConNominalWidth = ConNominalWidth_1,
		ConNominalDepth = ConNominalDepth_1,
		ConWidth = ConWidth_1,
		ConDepth = ConDepth_1,
		ConLength = ConLength_1,
		ConWallThickness = ConWallThickness_1,
		ConConnectorWidth = ConConnectorWidth_1,
		ConConnectorDepth = ConConnectorDepth_1,
		ConConnectorWidth2 = ConConnectorWidth2_1,
		ConToolType = ConToolType_1,
		ConStatus = ConStatus_1,
		ConType_1 = ConType_1,
		ConConnectorType_1 = ConConnectorType_1,
		ConSystem_1 = ConSystem_1,
		ui_current_con = ui_current_con,
		shape_typ_to_validation = shape_typ_to_validation,
		MEP_enabled_geometry_mod = 1,
		gs_ui = 1


	PARAMETERS MEP_ConInfo[ConID][1] = STR(ConToolType_1, 1, 0)
	PARAMETERS MEP_ConInfo[ConID][2] = ConName
	PARAMETERS MEP_ConInfo[ConID][3] = "0"


					! --- 2nd CONNECTION --- !

	ConID = 2
	ConName = `Подключение Холодной Воды`

	if gs_tap_type_m <> TAPTYPE_NONE then
		IF ConWidth_2 < 0.001 THEN
			ConWidth_2 = 0.001
			PARAMETERS ConWidth_2 = ConWidth_2
		ENDIF
		IF ConWidth_2 > MIN(A/2, zzyzx/2) THEN
			ConWidth_2 = MIN(A/2, zzyzx/2)
			PARAMETERS ConWidth_2 = ConWidth_2
		ENDIF
		VALUES "ConWidth_2" RANGE (0, MIN(A/2, zzyzx/2)]
		PARAMETERS ConDepth_2 = ConWidth_2
		VALUES "ConLength_2" RANGE [0, ]

		ConDVecX = 0
		ConDVecY = 1
		ConDVecZ = 0

		ConWVecX = -1
		ConWVecY = 0
		ConWVecZ = 0

		! Default Position
		if (GLOB_MODPAR_NAME = "gs_tap_type" | GLOB_MODPAR_NAME = "gs_tap_type_m" | \
		GLOB_MODPAR_NAME = "tapGroup" | GLOB_MODPAR_NAME = "iTapGroup") then
			if gs_tap_type_m = 26 then
				ConPosX_2 = -widthTap/4
				ConPosZ_2 = zTapPos
			else
				if gs_tap_type_m = 27 then
					ConPosX_2 = 0
					ConPosZ_2 = zTapPos + 0.05
				else
					ConPosX_2 = -posTap - widthTap/2
					ConPosZ_2 = zTapPos
				endif
			endif
			parameters	ConPosX_2 = ConPosX_2,
						ConPosZ_2 = ConPosZ_2
		endif

		! Position in y direction
		if GLOB_MODPAR_NAME = "B" then
			_ConPosY_2 = B / 2
			parameters	ConPosY_2 = _ConPosY_2
		endif

		if gs_tap_type_m > 25 then
			values "ConPosX_2" range [-limit_X + ConWidth_2/2, limit_X - ConWidth_2/2]
			values "ConPosZ_2" range [zTapPos - limit_Y1 + ConWidth_2/2, zTapPos + limit_Y2 - ConWidth_2/2]
		else
			! --- X Range
			values "ConPosX_2"	range [posTap + ConWidth_2/2,posTap+widthTap - ConWidth_2/2],
								range [-(posTap+widthTap - ConWidth_2/2),-(posTap + ConWidth_2/2)]

			! --- Change Connection Side
			if GLOB_MODPAR_NAME = "ConPosX_1" then
				if ConPosX_1 < 0 & ConPosX_2 < 0 then
					ConPosX_2 = posTap + widthTap/2
					parameters 	ConPosX_2 = ConPosX_2
				endif
				if ConPosX_1 > 0 & ConPosX_2 > 0 then
					ConPosX_2 = -(posTap + widthTap/2)
					parameters 	ConPosX_2 = ConPosX_2
				endif
			endif

			ConPosZ_2 = zTapPos
		endif


		parameters 	ConPosX_2 = ConPosX_2,
					ConPosZ_2 = ConPosZ_2
	else
		ConStatus_2 = 0
		lock "ConStatus_2"
		hideparameter "ConStatus_2"
	endif

	CALL "MEP_m_ConnectionsACL_4" PARAMETERS SetProgram = SetProgram,
		gs_Connections = gs_Connections,
		MEP_NumConnectionData = MEP_NumConnectionData,
		MEP_StrConnectionData = MEP_StrConnectionData,
		MEP_NumberConnections = MEP_NumberConnections,
		gs_AddConnections = gs_AddConnections,
		ConName = ConName,
		ConID = ConID,
		ConPosX = ConPosX_2,
		ConPosY = ConPosY_2,
		ConPosZ = ConPosZ_2,
		ConDVecX = ConDVecX,
		ConDVecY = ConDVecY,
		ConDVecZ = ConDVecZ,
		ConWVecX = ConWVecX,
		ConWVecY = ConWVecY,
		ConWVecZ = ConWVecZ,

		ConNominalWidth = ConNominalWidth_2,
		ConNominalDepth = ConNominalDepth_2,
		ConWidth = ConWidth_2,
		ConDepth = ConDepth_2,
		ConLength = ConLength_2,
		ConWallThickness = ConWallThickness_2,
		ConConnectorWidth = ConConnectorWidth_2,
		ConConnectorDepth = ConConnectorDepth_2,
		ConConnectorWidth2 = ConConnectorWidth2_2,
		ConToolType = ConToolType_2,
		ConStatus = ConStatus_2,
		ConType_2 = ConType_2,
		ConConnectorType_2 = ConConnectorType_2,
		ConSystem_2 = ConSystem_2,
		shape_typ_to_validation = shape_typ_to_validation,
		MEP_enabled_geometry_mod = 1,
		gs_ui = 0


	PARAMETERS MEP_ConInfo[ConID][1] = STR(ConToolType_2, 1, 0)
	PARAMETERS MEP_ConInfo[ConID][2] = ConName
	PARAMETERS MEP_ConInfo[ConID][3] = "0"


					! --- 3rd CONNECTION --- !

	ConID = 3
	ConName = `Подключение Канализации`

	ConDVecX = 0
	ConDVecY = 0
	ConDVecZ = -1

	ConWVecX = -1
	ConWVecY = 0
	ConWVecZ = 0

	IF ConWidth_3 < 0.001 THEN
		ConWidth_3 = 0.001
		PARAMETERS ConWidth_3 = ConWidth_3
	ENDIF
	IF ConWidth_3 > MIN(A/2, B/2) THEN
		ConWidth_3 = MIN(A/2, B/2)
		PARAMETERS ConWidth_3 = ConWidth_3
	ENDIF
	VALUES "ConWidth_3" RANGE (0, MIN(A/2, B/2)]
	PARAMETERS ConDepth_3 = ConWidth_3
	VALUES "ConLength_3" RANGE [0, ]

	if iCabinForm <> CABINFORM_ROUND then
		PARAMETERS ConPosX_3 = -A/2+0.175
	else
		PARAMETERS ConPosX_3 = 0
	endif
	PARAMETERS ConPosY_3 = B/2-0.175
	PARAMETERS ConPosZ_3 = 0


	CALL "MEP_m_ConnectionsACL_4" PARAMETERS SetProgram = SetProgram,
		gs_Connections = gs_Connections,
		MEP_NumConnectionData = MEP_NumConnectionData,
		MEP_StrConnectionData = MEP_StrConnectionData,
		MEP_NumberConnections = MEP_NumberConnections,
		gs_AddConnections = gs_AddConnections,
		ConName = ConName,
		ConID = ConID,
		ConPosX = ConPosX_3,
		ConPosY = ConPosY_3,
		ConPosZ = ConPosZ_3,
		ConDVecX = ConDVecX,
		ConDVecY = ConDVecY,
		ConDVecZ = ConDVecZ,
		ConWVecX = ConWVecX,
		ConWVecY = ConWVecY,
		ConWVecZ = ConWVecZ,

		ConNominalWidth = ConNominalWidth_3,
		ConNominalDepth = ConNominalDepth_3,
		ConWidth = ConWidth_3,
		ConDepth = ConDepth_3,
		ConLength = ConLength_3,
		ConWallThickness = ConWallThickness_3,
		ConConnectorWidth = ConConnectorWidth_3,
		ConConnectorDepth = ConConnectorDepth_3,
		ConConnectorWidth2 = ConConnectorWidth2_3,
		ConToolType = ConToolType_3,
		ConStatus = ConStatus_3,
		ConType_3 = ConType_3,
		ConConnectorType_3 = ConConnectorType_3,
		ConSystem_3 = ConSystem_3,
		shape_typ_to_validation = shape_typ_to_validation,
		MEP_enabled_geometry_mod = 1,
		gs_ui = 0


	PARAMETERS MEP_ConInfo[ConID][1] = STR(ConToolType_3, 1, 0)
	PARAMETERS MEP_ConInfo[ConID][2] = ConName
	PARAMETERS MEP_ConInfo[ConID][3] = "0"

	IF gs_ui_current_page = 4 THEN
		ac_mep_connectionpage_active = 1
	ELSE
		ac_mep_connectionpage_active = 0
	ENDIF
	PARAMETERS ac_mep_connectionpage_active = ac_mep_connectionpage_active

	IF SetProgram THEN
		SetProgram = 0
		PARAMETERS SetProgram = SetProgram
	ENDIF
ELSE
	HIDEPARAMETER "gs_connection", "gs_con_mat", "useSysMat"

	ac_mep_connectionpage_active = 0
	PARAMETERS ac_mep_connectionpage_active = ac_mep_connectionpage_active
ENDIF

call "ui_plumbingfixtures" parameters iObjectType 		= 23,
								gs_ui_current_page = gs_ui_current_page

! =============================================================================
! Onorm list Settings
! =============================================================================
if LibraryLangCode = "AUT" or LibraryLangCode = "CHE" or LibraryLangCode = "GER" then
	call "Onorm_Plumbing" parameters all
else
	hideparameter "gs_onorm_Title"
endif
END


! =============================================================================
"SizeOfCabin":
! =============================================================================
if GLOB_MODPAR_NAME = "cabinSize" then
	iCabinSize = 1
	if cabinSize = st_cabinSize[2] then iCabinSize = 2
	if cabinSize = st_cabinSize[3] then iCabinSize = 3
	if cabinSize = st_cabinSize[7] then iCabinSize = 7
	parameters iCabinSize = iCabinSize
else
	cabinSize = st_cabinSize[max(1, min(iCabinSize, vardim1(st_cabinSize)))]
	parameters cabinSize = cabinSize
endif
if GLOB_MODPAR_NAME = "A" | GLOB_MODPAR_NAME = "B" then
	cabinSize = st_cabinSize[7]
	iCabinSize = 7
	if abs(A - defaultCabinSize1) < eps & abs(B - defaultCabinSize1) < eps then
		cabinSize = st_cabinSize[1]
		iCabinSize = 1
	endif
	if abs(A - defaultCabinSize2) < eps & abs(B - defaultCabinSize2) < eps then
		cabinSize = st_cabinSize[2]
		iCabinSize = 2
	endif
	if abs(A - defaultCabinSize3) < eps & abs(B - defaultCabinSize3) < eps then
		cabinSize = st_cabinSize[3]
		iCabinSize = 3
	endif
	parameters 	cabinSize = cabinSize,
				iCabinSize = iCabinSize
endif
return
]]>
</Script_VL>

<ParamSection SectVersion="26" SectionFlags="0" SubIdent="0">
	<ParamSectHeader>
		<Version>26</Version>
		<AutoHotspots>false</AutoHotspots>
		<StatBits>
			<STBit_UIDefault/>
			<STBit_FixSize/>
			<STBit_UIUseHierarchicalPages/>
		</StatBits>
		<WDLeftFrame>0</WDLeftFrame>
		<WDRightFrame>0</WDRightFrame>
		<WDTopFrame>0</WDTopFrame>
		<WDBotFrame>0</WDBotFrame>
		<LayFlags>65535</LayFlags>
		<WDMirrorThickness>0</WDMirrorThickness>
		<WDWallInset>0</WDWallInset>
		<SymbolColor>0</SymbolColor>
	</ParamSectHeader>
	<Parameters>
		<Length Name="A">
			<Description><![CDATA["Ширина Кабины"]]></Description>
			<Fix/>
			<Value>0.8</Value>
		</Length>
		<Length Name="B">
			<Description><![CDATA["Глубина Кабины"]]></Description>
			<Fix/>
			<Value>0.8</Value>
		</Length>
		<Length Name="zzyzx">
			<Description><![CDATA["Высота Кабины"]]></Description>
			<Fix/>
			<Value>2.1</Value>
		</Length>
		<String Name="gs_detlevel_3D">
			<Description><![CDATA["3D"]]></Description>
			<Fix/>
			<Value><![CDATA["Детальный"]]></Value>
		</String>
		<Integer Name="gs_detlevel_3D_m">
			<Description><![CDATA["3D"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Boolean Name="AC_show2DHotspotsIn3D">
			<Description><![CDATA["Показ Узловых 2D Точек в 3D"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="ac_bottomlevel">
			<Description><![CDATA["Отметка Низа"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="ac_toplevel">
			<Description><![CDATA["Отметка Верха"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Boolean Name="SetProgram">
			<Description><![CDATA["Установка Программы"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- cabinGeometry: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="cabinGeometry">
			<Description><![CDATA["Геометрия Кабины"]]></Description>
		</Title>
		<String Name="cabinType">
			<Description><![CDATA["Тип Кабины"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Угол"]]></Value>
		</String>
		<Integer Name="iCabinType">
			<Description><![CDATA["Тип Кабины"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<String Name="cabinForm">
			<Description><![CDATA["Форма Кабины"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Квадратный Угол"]]></Value>
		</String>
		<Integer Name="iCabinForm">
			<Description><![CDATA["Форма Кабины"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<String Name="doorType">
			<Description><![CDATA["Тип Двери"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Одностворчатая Распашная"]]></Value>
		</String>
		<Integer Name="iDoorType">
			<Description><![CDATA["Тип Двери"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="bMirrorDoor">
			<Description><![CDATA["Зеркальное Отражение Двери"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="defaultCabinSize1">
			<Description><![CDATA["Размер Кабины по Умолчанию 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.8</Value>
		</Length>
		<Length Name="defaultCabinSize2">
			<Description><![CDATA["Размер Кабины по Умолчанию 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.9</Value>
		</Length>
		<Length Name="defaultCabinSize3">
			<Description><![CDATA["Размер Кабины по Умолчанию 3"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<String Name="cabinSize">
			<Description><![CDATA["Размер Кабины"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["800 x 800"]]></Value>
		</String>
		<Integer Name="iCabinSize">
			<Description><![CDATA["Размер Кабины"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="defaultDoorWidth1">
			<Description><![CDATA["Ширина Двери по Умолчанию 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.45</Value>
		</Length>
		<Length Name="defaultDoorWidth2">
			<Description><![CDATA["Ширина Двери по Умолчанию 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.5</Value>
		</Length>
		<Length Name="defaultDoorWidth3">
			<Description><![CDATA["Ширина Двери по Умолчанию 3"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.55</Value>
		</Length>
		<Length Name="defaultDoorWidth4">
			<Description><![CDATA["Ширина Двери по Умолчанию 4"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.6</Value>
		</Length>
		<Length Name="defaultDoorWidth5">
			<Description><![CDATA["Ширина Двери по Умолчанию 5"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.5657</Value>
		</Length>
		<Length Name="defaultDoorWidth6">
			<Description><![CDATA["Ширина Двери по Умолчанию 6"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.6364</Value>
		</Length>
		<Length Name="defaultDoorWidth7">
			<Description><![CDATA["Ширина Двери по Умолчанию 7"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.7071</Value>
		</Length>
		<Length Name="doorWidth">
			<Description><![CDATA["Ширина Двери"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.5657</Value>
		</Length>
		<Length Name="halfDoorWidth">
			<Description><![CDATA["Половина Ширины Двери"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.28285</Value>
		</Length>
		<Length Name="sidePanelWidthL">
			<Description><![CDATA["Ширина Боковой Панели 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.399989693883</Value>
		</Length>
		<Length Name="sidePanelWidthR">
			<Description><![CDATA["Ширина Боковой Панели 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.399989693883</Value>
		</Length>

		<!-- cabinDetails: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="cabinDetails">
			<Description><![CDATA["Детали Кабины"]]></Description>
		</Title>
		<Boolean Name="bTray">
			<Description><![CDATA["Поддон"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="trayThk">
			<Description><![CDATA["Толщина Душевого Поддона"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<String Name="panelType">
			<Description><![CDATA["Тип Панели"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Полностью Стеклянная"]]></Value>
		</String>
		<Integer Name="iPanelType">
			<Description><![CDATA["Тип Панели"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Length Name="cabinFrameWidth">
			<Description><![CDATA["Ширина Профиля Кабины"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.03</Value>
		</Length>
		<Length Name="doorFrameWidth">
			<Description><![CDATA["Ширина Обвязки"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.015</Value>
		</Length>
		<Boolean Name="bCeiling">
			<Description><![CDATA["Потолок"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<String Name="gs_tap_type">
			<Description><![CDATA["Тип Душа"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Настенный Термостат"]]></Value>
		</String>
		<Integer Name="gs_tap_type_m">
			<Description><![CDATA["Тип Душа"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>24</Value>
		</Integer>
		<Length Name="xTapPos">
			<Description><![CDATA["Расстояние от Смесителя до Угла"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.4</Value>
		</Length>
		<Length Name="zTapPos">
			<Description><![CDATA["Высота Смесителя"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Length>
		<String Name="handleType">
			<Description><![CDATA["Тип Ручки"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Стиль 1"]]></Value>
		</String>
		<Integer Name="iHandleType">
			<Description><![CDATA["Тип Ручки"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="bGrabBar">
			<Description><![CDATA["Поручень"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="bBracket">
			<Description><![CDATA["Крепление к Стене"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>

		<!-- gs_connection: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_connection">
			<Description><![CDATA["Соединения"]]></Description>
		</Title>
		<Boolean Name="ConStatus_1">
			<Description><![CDATA["Подключение Горячей Воды"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Integer Name="ConToolType_1">
			<Description><![CDATA["Тип Инструмента"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<String Name="ConSystem_1">
			<Description><![CDATA["Система MEP"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value><![CDATA["Не определен"]]></Value>
		</String>
		<String Name="ConType_1">
			<Description><![CDATA["Тип Сечения"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value><![CDATA["Окружность"]]></Value>
		</String>
		<String Name="ConConnectorType_1">
			<Description><![CDATA["Тип Соединения"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="ConNominalWidth_1">
			<Description><![CDATA["Номинальный Размер"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Length Name="ConNominalDepth_1">
			<Description><![CDATA["Номинальная Глубина"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.025</Value>
		</Length>
		<Length Name="ConWidth_1">
			<Description><![CDATA["Внешний Диаметр"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.027</Value>
		</Length>
		<Length Name="ConDepth_1">
			<Description><![CDATA["Внешняя Глубина"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.027</Value>
		</Length>
		<Length Name="ConWallThickness_1">
			<Description><![CDATA["Толщина Стенки"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.001</Value>
		</Length>
		<Length Name="ConLength_1">
			<Description><![CDATA["Длина Соединения"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.02</Value>
		</Length>
		<Length Name="ConConnectorWidth_1">
			<Description><![CDATA["Диаметр Фланца"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.04</Value>
		</Length>
		<Length Name="ConConnectorDepth_1">
			<Description><![CDATA["Глубина Фланца"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ConConnectorWidth2_1">
			<Description><![CDATA["Ширина Фланца"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.005</Value>
		</Length>
		<Length Name="ConPosX_1">
			<Description><![CDATA["Расположение Соединения по Х"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.075</Value>
		</Length>
		<Length Name="ConPosY_1">
			<Description><![CDATA["Расположение Соединения по Y"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.4</Value>
		</Length>
		<Length Name="ConPosZ_1">
			<Description><![CDATA[" Расположение Соединения по Z"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Boolean Name="ConStatus_2">
			<Description><![CDATA["Подключение Холодной Воды"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Integer Name="ConToolType_2">
			<Description><![CDATA["Тип Инструмента"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<String Name="ConSystem_2">
			<Description><![CDATA["Система MEP"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Не определен"]]></Value>
		</String>
		<String Name="ConType_2">
			<Description><![CDATA["Тип Сечения"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value><![CDATA["Окружность"]]></Value>
		</String>
		<String Name="ConConnectorType_2">
			<Description><![CDATA["Тип Соединения"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="ConNominalWidth_2">
			<Description><![CDATA["Номинальный Размер"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Length Name="ConNominalDepth_2">
			<Description><![CDATA["Номинальная Глубина"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.025</Value>
		</Length>
		<Length Name="ConWidth_2">
			<Description><![CDATA["Внешний Диаметр"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.027</Value>
		</Length>
		<Length Name="ConDepth_2">
			<Description><![CDATA["Внешняя Глубина"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.027</Value>
		</Length>
		<Length Name="ConWallThickness_2">
			<Description><![CDATA["Толщина Стенки"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.001</Value>
		</Length>
		<Length Name="ConLength_2">
			<Description><![CDATA["Длина Соединения"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.02</Value>
		</Length>
		<Length Name="ConConnectorWidth_2">
			<Description><![CDATA["Диаметр Фланца"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.04</Value>
		</Length>
		<Length Name="ConConnectorDepth_2">
			<Description><![CDATA["Глубина Фланца"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ConConnectorWidth2_2">
			<Description><![CDATA["Ширина Фланца"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.005</Value>
		</Length>
		<Length Name="ConPosX_2">
			<Description><![CDATA["Расположение Соединения по Х"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>-0.075</Value>
		</Length>
		<Length Name="ConPosY_2">
			<Description><![CDATA["Расположение Соединения по Y"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.4</Value>
		</Length>
		<Length Name="ConPosZ_2">
			<Description><![CDATA[" Расположение Соединения по Z"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Boolean Name="ConStatus_3">
			<Description><![CDATA["Подключение Канализации"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Integer Name="ConToolType_3">
			<Description><![CDATA["Тип Инструмента"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<String Name="ConSystem_3">
			<Description><![CDATA["Система MEP"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value><![CDATA["Не определен"]]></Value>
		</String>
		<String Name="ConType_3">
			<Description><![CDATA["Тип Сечения"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value><![CDATA["Окружность"]]></Value>
		</String>
		<String Name="ConConnectorType_3">
			<Description><![CDATA["Тип Соединения"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="ConNominalWidth_3">
			<Description><![CDATA["Номинальный Размер"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Length Name="ConNominalDepth_3">
			<Description><![CDATA["Номинальная Глубина"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="ConWidth_3">
			<Description><![CDATA["Внешний Диаметр"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.054</Value>
		</Length>
		<Length Name="ConDepth_3">
			<Description><![CDATA["Внешняя Глубина"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.054</Value>
		</Length>
		<Length Name="ConWallThickness_3">
			<Description><![CDATA["Толщина Стенки"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.002</Value>
		</Length>
		<Length Name="ConLength_3">
			<Description><![CDATA["Длина Соединения"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.02</Value>
		</Length>
		<Length Name="ConConnectorWidth_3">
			<Description><![CDATA["Диаметр Фланца"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.054</Value>
		</Length>
		<Length Name="ConConnectorDepth_3">
			<Description><![CDATA["Глубина Фланца"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ConConnectorWidth2_3">
			<Description><![CDATA["Ширина Фланца"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.005</Value>
		</Length>
		<Length Name="ConPosX_3">
			<Description><![CDATA["Расположение Соединения по Х"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>-0.027</Value>
		</Length>
		<Length Name="ConPosY_3">
			<Description><![CDATA["Расположение Соединения по Y"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.25</Value>
		</Length>
		<Length Name="ConPosZ_3">
			<Description><![CDATA[" Расположение Соединения по Z"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>

		<!-- gs_3D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_3D_representation">
			<Description><![CDATA["3D-отображение"]]></Description>
			<Fix/>
		</Title>
		<Boolean Name="gs_shadow">
			<Description><![CDATA["Отбрасывание Теней"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Integer Name="gs_resol">
			<Description><![CDATA["Аппроксимация"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>24</Value>
		</Integer>
		<Angle Name="gs_open_3D">
			<Description><![CDATA["Угол Открывания в 3D"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Length Name="gs_open3D">
			<Description><![CDATA["Ширина Открывания в 3D"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>

		<!-- gs_2D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_2D_representation">
			<Description><![CDATA["2D-отображение"]]></Description>
			<Fix/>
		</Title>
		<String Name="gs_detlevel_2D">
			<Description><![CDATA["2D-детализация"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Зависит от Масштаба"]]></Value>
		</String>
		<Integer Name="gs_detlevel_2D_m">
			<Description><![CDATA["2D-детализация"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Boolean Name="bOpenDoor2D">
			<Description><![CDATA["Открытая Дверь в Детальном 2D"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bGrabBar2D">
			<Description><![CDATA["Показать Поручень в Детальном 2D"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="bShowShowerKit">
			<Description><![CDATA["Показать Душевой Комплект в Детальном 2D"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<PenColor Name="gs_cont_pen">
			<Description><![CDATA["Перо Контура"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>75</Value>
		</PenColor>
		<FillPattern Name="gs_fill_type">
			<Description><![CDATA["Тип Штриховки"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_fill_pen">
			<Description><![CDATA["Перо Штриховки"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_back_pen">
			<Description><![CDATA["Перо Фона Штриховки"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>

		<!-- gs_min_space: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_min_space">
			<Description><![CDATA["Минимальное Пространство"]]></Description>
		</Title>
		<Length Name="MSFront">
			<Description><![CDATA["Минимальное Пространство Спереди"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Length>

		<!-- gs_material: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_material">
			<Description><![CDATA["Покрытия"]]></Description>
		</Title>
		<Material Name="matTray">
			<Description><![CDATA["Поддон"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>22</Value>
		</Material>
		<Material Name="matGlass">
			<Description><![CDATA["Остекление"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>24</Value>
		</Material>
		<Material Name="matFrame">
			<Description><![CDATA["Профили"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>45</Value>
		</Material>
		<Material Name="gs_tap_mat">
			<Description><![CDATA["Душевой Комплект"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>11</Value>
		</Material>
		<Material Name="gs_knob_mat">
			<Description><![CDATA["Ручка"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>13</Value>
		</Material>
		<Material Name="gs_con_mat">
			<Description><![CDATA["Соединение"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>11</Value>
		</Material>
		<Boolean Name="useSysMat">
			<Description><![CDATA["Использовать Покрытие Системы"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Material Name="sMat">
			<Description><![CDATA["Покрытие Системы"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>78</Value>
		</Material>
		<Integer Name="ifc_subtype">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>33</Value>
		</Integer>
		<Integer Name="ifc_predefinedtype">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>4</Value>
		</Integer>
		<Integer Name="ui_current_con">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="gs_ui_current_page">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="ui_system_var_pos">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Boolean Name="ac_mep_connectionpage_active">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="MEP_version">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>4</Value>
		</Integer>
		<String Name="MEP_ConInfo">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="3" SecondDimension="3">
				<AVal Column="1" Row="1"><![CDATA["2"]]></AVal>
				<AVal Column="2" Row="1"><![CDATA["Подключение Горячей Воды"]]></AVal>
				<AVal Column="3" Row="1"><![CDATA["0"]]></AVal>
				<AVal Column="1" Row="2"><![CDATA["2"]]></AVal>
				<AVal Column="2" Row="2"><![CDATA["Подключение Холодной Воды"]]></AVal>
				<AVal Column="3" Row="2"><![CDATA["0"]]></AVal>
				<AVal Column="1" Row="3"><![CDATA["2"]]></AVal>
				<AVal Column="2" Row="3"><![CDATA["Подключение Канализации"]]></AVal>
				<AVal Column="3" Row="3"><![CDATA["0"]]></AVal>
			</ArrayValues>
		</String>
		<Length Name="gs_Connections">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="3" SecondDimension="26">
				<AVal Column="1" Row="1">0.075</AVal>
				<AVal Column="2" Row="1">0.4</AVal>
				<AVal Column="3" Row="1">1</AVal>
				<AVal Column="4" Row="1">0</AVal>
				<AVal Column="5" Row="1">1</AVal>
				<AVal Column="6" Row="1">0</AVal>
				<AVal Column="7" Row="1">-1</AVal>
				<AVal Column="8" Row="1">0</AVal>
				<AVal Column="9" Row="1">0</AVal>
				<AVal Column="10" Row="1">0</AVal>
				<AVal Column="11" Row="1">0</AVal>
				<AVal Column="12" Row="1">0.027</AVal>
				<AVal Column="13" Row="1">0.027</AVal>
				<AVal Column="14" Row="1">0.001</AVal>
				<AVal Column="15" Row="1">0.04</AVal>
				<AVal Column="16" Row="1">0</AVal>
				<AVal Column="17" Row="1">0.005</AVal>
				<AVal Column="18" Row="1">0</AVal>
				<AVal Column="19" Row="1">2</AVal>
				<AVal Column="20" Row="1">0</AVal>
				<AVal Column="21" Row="1">2</AVal>
				<AVal Column="22" Row="1">1</AVal>
				<AVal Column="23" Row="1">0.02</AVal>
				<AVal Column="24" Row="1">0</AVal>
				<AVal Column="25" Row="1">0</AVal>
				<AVal Column="26" Row="1">0</AVal>
				<AVal Column="1" Row="2">-0.075</AVal>
				<AVal Column="2" Row="2">0.4</AVal>
				<AVal Column="3" Row="2">1</AVal>
				<AVal Column="4" Row="2">0</AVal>
				<AVal Column="5" Row="2">1</AVal>
				<AVal Column="6" Row="2">0</AVal>
				<AVal Column="7" Row="2">-1</AVal>
				<AVal Column="8" Row="2">0</AVal>
				<AVal Column="9" Row="2">0</AVal>
				<AVal Column="10" Row="2">0</AVal>
				<AVal Column="11" Row="2">0</AVal>
				<AVal Column="12" Row="2">0.027</AVal>
				<AVal Column="13" Row="2">0.027</AVal>
				<AVal Column="14" Row="2">0.001</AVal>
				<AVal Column="15" Row="2">0.04</AVal>
				<AVal Column="16" Row="2">0</AVal>
				<AVal Column="17" Row="2">0.005</AVal>
				<AVal Column="18" Row="2">0</AVal>
				<AVal Column="19" Row="2">2</AVal>
				<AVal Column="20" Row="2">0</AVal>
				<AVal Column="21" Row="2">2</AVal>
				<AVal Column="22" Row="2">1</AVal>
				<AVal Column="23" Row="2">0.02</AVal>
				<AVal Column="24" Row="2">0</AVal>
				<AVal Column="25" Row="2">0</AVal>
				<AVal Column="26" Row="2">0</AVal>
				<AVal Column="1" Row="3">-0.027</AVal>
				<AVal Column="2" Row="3">0.25</AVal>
				<AVal Column="3" Row="3">0</AVal>
				<AVal Column="4" Row="3">0</AVal>
				<AVal Column="5" Row="3">0</AVal>
				<AVal Column="6" Row="3">-1</AVal>
				<AVal Column="7" Row="3">-1</AVal>
				<AVal Column="8" Row="3">0</AVal>
				<AVal Column="9" Row="3">0</AVal>
				<AVal Column="10" Row="3">0</AVal>
				<AVal Column="11" Row="3">0</AVal>
				<AVal Column="12" Row="3">0.054</AVal>
				<AVal Column="13" Row="3">0.054</AVal>
				<AVal Column="14" Row="3">0.002</AVal>
				<AVal Column="15" Row="3">0.054</AVal>
				<AVal Column="16" Row="3">0</AVal>
				<AVal Column="17" Row="3">0.005</AVal>
				<AVal Column="18" Row="3">0</AVal>
				<AVal Column="19" Row="3">2</AVal>
				<AVal Column="20" Row="3">0</AVal>
				<AVal Column="21" Row="3">2</AVal>
				<AVal Column="22" Row="3">1</AVal>
				<AVal Column="23" Row="3">0.02</AVal>
				<AVal Column="24" Row="3">0</AVal>
				<AVal Column="25" Row="3">0</AVal>
				<AVal Column="26" Row="3">0</AVal>
			</ArrayValues>
		</Length>
		<Integer Name="MEP_NumberConnections">
			<Description><![CDATA["Количество Соединений"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>3</Value>
		</Integer>
		<Length Name="MEP_NumConnectionData">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="3" SecondDimension="26">
				<AVal Column="1" Row="1">0.075</AVal>
				<AVal Column="2" Row="1">0.42</AVal>
				<AVal Column="3" Row="1">1</AVal>
				<AVal Column="4" Row="1">0</AVal>
				<AVal Column="5" Row="1">1</AVal>
				<AVal Column="6" Row="1">0</AVal>
				<AVal Column="7" Row="1">-1</AVal>
				<AVal Column="8" Row="1">0</AVal>
				<AVal Column="9" Row="1">0</AVal>
				<AVal Column="10" Row="1">0</AVal>
				<AVal Column="11" Row="1">0</AVal>
				<AVal Column="12" Row="1">0.027</AVal>
				<AVal Column="13" Row="1">0.027</AVal>
				<AVal Column="14" Row="1">0.001</AVal>
				<AVal Column="15" Row="1">0.04</AVal>
				<AVal Column="16" Row="1">0</AVal>
				<AVal Column="17" Row="1">0.005</AVal>
				<AVal Column="18" Row="1">0</AVal>
				<AVal Column="19" Row="1">2</AVal>
				<AVal Column="20" Row="1">0</AVal>
				<AVal Column="21" Row="1">2</AVal>
				<AVal Column="22" Row="1">1</AVal>
				<AVal Column="23" Row="1">0.02</AVal>
				<AVal Column="24" Row="1">0</AVal>
				<AVal Column="25" Row="1">0</AVal>
				<AVal Column="26" Row="1">0</AVal>
				<AVal Column="1" Row="2">-0.075</AVal>
				<AVal Column="2" Row="2">0.42</AVal>
				<AVal Column="3" Row="2">1</AVal>
				<AVal Column="4" Row="2">0</AVal>
				<AVal Column="5" Row="2">1</AVal>
				<AVal Column="6" Row="2">0</AVal>
				<AVal Column="7" Row="2">-1</AVal>
				<AVal Column="8" Row="2">0</AVal>
				<AVal Column="9" Row="2">0</AVal>
				<AVal Column="10" Row="2">0</AVal>
				<AVal Column="11" Row="2">0</AVal>
				<AVal Column="12" Row="2">0.027</AVal>
				<AVal Column="13" Row="2">0.027</AVal>
				<AVal Column="14" Row="2">0.001</AVal>
				<AVal Column="15" Row="2">0.04</AVal>
				<AVal Column="16" Row="2">0</AVal>
				<AVal Column="17" Row="2">0.005</AVal>
				<AVal Column="18" Row="2">0</AVal>
				<AVal Column="19" Row="2">2</AVal>
				<AVal Column="20" Row="2">0</AVal>
				<AVal Column="21" Row="2">2</AVal>
				<AVal Column="22" Row="2">1</AVal>
				<AVal Column="23" Row="2">0.02</AVal>
				<AVal Column="24" Row="2">0</AVal>
				<AVal Column="25" Row="2">0</AVal>
				<AVal Column="26" Row="2">0</AVal>
				<AVal Column="1" Row="3">-0.027</AVal>
				<AVal Column="2" Row="3">0.25</AVal>
				<AVal Column="3" Row="3">-0.02</AVal>
				<AVal Column="4" Row="3">0</AVal>
				<AVal Column="5" Row="3">0</AVal>
				<AVal Column="6" Row="3">-1</AVal>
				<AVal Column="7" Row="3">-1</AVal>
				<AVal Column="8" Row="3">0</AVal>
				<AVal Column="9" Row="3">0</AVal>
				<AVal Column="10" Row="3">0</AVal>
				<AVal Column="11" Row="3">0</AVal>
				<AVal Column="12" Row="3">0.054</AVal>
				<AVal Column="13" Row="3">0.054</AVal>
				<AVal Column="14" Row="3">0.002</AVal>
				<AVal Column="15" Row="3">0.054</AVal>
				<AVal Column="16" Row="3">0</AVal>
				<AVal Column="17" Row="3">0.005</AVal>
				<AVal Column="18" Row="3">0</AVal>
				<AVal Column="19" Row="3">2</AVal>
				<AVal Column="20" Row="3">0</AVal>
				<AVal Column="21" Row="3">2</AVal>
				<AVal Column="22" Row="3">1</AVal>
				<AVal Column="23" Row="3">0.02</AVal>
				<AVal Column="24" Row="3">0</AVal>
				<AVal Column="25" Row="3">0</AVal>
				<AVal Column="26" Row="3">0</AVal>
			</ArrayValues>
		</Length>
		<String Name="MEP_StrConnectionData">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="3" SecondDimension="4">
				<AVal Column="1" Row="1"><![CDATA["{B58525F9-A8D8-454D-A768-BF66DE95BC32}"]]></AVal>
				<AVal Column="2" Row="1"><![CDATA["0"]]></AVal>
				<AVal Column="3" Row="1"><![CDATA["Подключение Горячей Воды"]]></AVal>
				<AVal Column="4" Row="1"><![CDATA[""]]></AVal>
				<AVal Column="1" Row="2"><![CDATA["{B58525F9-A8D8-454D-A768-BF66DE95BC32}"]]></AVal>
				<AVal Column="2" Row="2"><![CDATA["0"]]></AVal>
				<AVal Column="3" Row="2"><![CDATA["Подключение Холодной Воды"]]></AVal>
				<AVal Column="4" Row="2"><![CDATA[""]]></AVal>
				<AVal Column="1" Row="3"><![CDATA["{B58525F9-A8D8-454D-A768-BF66DE95BC32}"]]></AVal>
				<AVal Column="2" Row="3"><![CDATA["0"]]></AVal>
				<AVal Column="3" Row="3"><![CDATA["Подключение Канализации"]]></AVal>
				<AVal Column="4" Row="3"><![CDATA[""]]></AVal>
			</ArrayValues>
		</String>
		<Length Name="gs_AddConnections">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="3" SecondDimension="2">
				<AVal Column="1" Row="1">1</AVal>
				<AVal Column="2" Row="1">0</AVal>
				<AVal Column="1" Row="2">1</AVal>
				<AVal Column="2" Row="2">0</AVal>
				<AVal Column="1" Row="3">1</AVal>
				<AVal Column="2" Row="3">0</AVal>
			</ArrayValues>
		</Length>
		<Length Name="MEP_NumConnectedConnectionData">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="26">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0</AVal>
				<AVal Column="3" Row="1">0</AVal>
				<AVal Column="4" Row="1">0</AVal>
				<AVal Column="5" Row="1">0</AVal>
				<AVal Column="6" Row="1">0</AVal>
				<AVal Column="7" Row="1">0</AVal>
				<AVal Column="8" Row="1">0</AVal>
				<AVal Column="9" Row="1">0</AVal>
				<AVal Column="10" Row="1">0</AVal>
				<AVal Column="11" Row="1">0</AVal>
				<AVal Column="12" Row="1">0</AVal>
				<AVal Column="13" Row="1">0</AVal>
				<AVal Column="14" Row="1">0</AVal>
				<AVal Column="15" Row="1">0</AVal>
				<AVal Column="16" Row="1">0</AVal>
				<AVal Column="17" Row="1">0</AVal>
				<AVal Column="18" Row="1">0</AVal>
				<AVal Column="19" Row="1">0</AVal>
				<AVal Column="20" Row="1">0</AVal>
				<AVal Column="21" Row="1">0</AVal>
				<AVal Column="22" Row="1">0</AVal>
				<AVal Column="23" Row="1">0</AVal>
				<AVal Column="24" Row="1">0</AVal>
				<AVal Column="25" Row="1">0</AVal>
				<AVal Column="26" Row="1">0</AVal>
			</ArrayValues>
		</Length>
		<String Name="LibraryLangCode">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value><![CDATA["RUS"]]></Value>
		</String>

		<!-- gs_list: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_list">
			<Description><![CDATA["Параметры Спецификаций"]]></Description>
			<Fix/>
		</Title>
		<RealNum Name="gs_list_cost">
			<Description><![CDATA["Цена"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="gs_list_manufacturer">
			<Description><![CDATA["Производитель"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_note">
			<Description><![CDATA["Примечания"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_location">
			<Description><![CDATA["Расположение"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_accessories">
			<Description><![CDATA["Аксессуары"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_Type">
			<Description><![CDATA["Тип Группы"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Сантехника"]]></Value>
		</String>
		<Integer Name="iFMType">
			<Description><![CDATA["Тип Группы"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>13</Value>
		</Integer>
		<String Name="FM_ProductName">
			<Description><![CDATA["Название Изделия"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_GUID">
			<Description><![CDATA["ID Продукта"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_material">
			<Description><![CDATA["Покрытие"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_gauge">
			<Description><![CDATA["Тип Датчика"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<RealNum Name="gs_list_area">
			<Description><![CDATA["Площадь"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<RealNum Name="gs_list_volume">
			<Description><![CDATA["Объем"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="FM_InventoryNumber">
			<Description><![CDATA["Инвентарный Номер"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_SerialNumber">
			<Description><![CDATA["Серийный Номер"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_ProductionYear">
			<Description><![CDATA["Год Производства"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<RealNum Name="FM_ObjectWeight">
			<Description><![CDATA["Вес Изделия"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="FM_ObjectWeightUnit">
			<Description><![CDATA["Единица Веса"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["кг"]]></Value>
		</String>
		<String Name="gs_list_custom1">
			<Description><![CDATA["Пользовательское Значение 1"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom2">
			<Description><![CDATA["Пользовательское Значение 2"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom3">
			<Description><![CDATA["Пользовательское Значение 3"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom4">
			<Description><![CDATA["Пользовательское Значение 4"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom5">
			<Description><![CDATA["Пользовательское Значение 5"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>

		<!-- gs_onorm_Title: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_onorm_Title">
			<Description><![CDATA["Дополнительные Параметры Спецификаций"]]></Description>
			<Fix/>
		</Title>
		<String Name="gs_onorm_dimensions">
			<Description><![CDATA["Размеры Ш/Г/В"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_manufacturer">
			<Description><![CDATA["Дополнительный Производитель"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_baseheight_value">
			<Description><![CDATA["Значение Высоты Основания"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_baseheight">
			<Description><![CDATA["Дополнительная Высота Основания"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_assemblydate">
			<Description><![CDATA["Дата Сборки"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_customtext1">
			<Description><![CDATA["Дополнительная Информация 1"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_customtext2">
			<Description><![CDATA["Дополнительная Информация 2"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_aks">
			<Description><![CDATA["Номер AKS"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_product">
			<Description><![CDATA["Название Изделия"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_leistungbuch">
			<Description><![CDATA["Коллекция ID Спецификаций"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_description">
			<Description><![CDATA["Дополнительное Описание"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_number">
			<Description><![CDATA["Дополнительный Номер"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_id">
			<Description><![CDATA["Номер ID"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_admission">
			<Description><![CDATA["Дата Приема"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_modification">
			<Description><![CDATA["Дата Изменения"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_tozonenumber">
			<Description><![CDATA["Номер Зоны"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
	</Parameters>
</ParamSection>

<Picture MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="0" length_in_bytes="11039" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000800000
	008008020000004C5CF69C00000183694343504943432070726F66696C650000
	18D3A591BB4B034110873FA312D1480A5358585C2116A28251827662D0A8A845
	8CE0AB492E2F218FE32E41C4D2C236458AA8D8286263AD9DF80F0882A0626163
	2B160A3622E76C2E10105288B3ECECB7BFDD99DD9D055725A367AD160DB2B982
	190E4D6A2BAB6B9AFB0917DD78108BEA96B1B0341DA1A17DDED3A4C6BB41958B
	BF59473C61E9D0D4263CA11B664178467871AB6028AE08FBF474342E7C2E3C60
	CA05851F951E73F85571AACA2E95D36746C241619FB09672785471CC61F5164D
	4F9B59613983DE6CA6A8D7EEA35EE249E49697942EBD078B302126D198658A20
	018619171F60103F4332A341BCBF1ABF485E6275F106DB986C92224D8101518B
	923D216352F484B48CEC10537FF0BBB65672C4EF9CE09983D617DBFEE807F721
	7CEFD9F6D7B16D7F9F40B3D4E5BA5C8FCF9761EC4DF4525DEB3D02EF2E5C5CD5
	B5D8295C96A0FBD9889AD1AAD42CDD954CC2FB1974AE42D72DB4AFFF77DDA97B
	6D9D930788ECC0FC0DEC1F409FECF76EFC001B09734F0A225E68000000097048
	597300002E2300002E230178A53F76000020004944415478DAE57D597364D791
	5E669E7B6FAD68A0D10BC56637351665291C9A913CB6C38EF083FFB39FFC28FF
	043BECB147A3194BA24891CD662FD8EA6EE764FA2133CF39052EA321511C940D
	4474A3D18542D55972F9F2CB2F5144E0FFE10F01C0EFF504D33809CAA25B1CE8
	0536C7B9AA8202DF7670106DD9D11E6F8FCEDFFFB3378F85850FF85EEEC90688
	0802DADAC257D71601ED01F62FC07FE46433F3344D31C6C572D1366DFD680140
	01A99FF16B5F93BF220039D60D100140C1AF3DAFB6A66A23AA138BF0F5560301
	00628AD330CE31CE718E539C631CC7B1EFFBDD6ED7F7FDCDCD2E715A768B611C
	A7695A2D97D737D702E1C58B178F1E9D3D7A78B6DD9E2C574BC4B2837E99BEE6
	6AD84B2320A1BB31673FFC06207EEB794500401199A629CEF31C638CBAB4F338
	F47D3F4CF3747D7573B3BB699A36259EE729A5B45E6F12A771184F4E4EB6DB4D
	9CA320BCF7F4E9B367CF9853D7769BED5657787BB2FDFDEF7EF79FFFCB7F95F6
	CD759F18172F5F5FA2F06AD5AD968BED66BBDEAC4268F65E9C88E4A3A1DF6760
	E4EA461CC906E86919C7B1EF77718E2971E2B8BBE96F76FAA947B51B86699CC7
	F56A0308E338B1C0F9F93908C4C49BEDE6BFFFB7BFF9EB7FF7EF9FBDD8768B65
	DBD0C9A6230A9BCDFACF7F1929F1A26B97DDE2ECE1E98F7EF43E2201C8380E43
	3F5C7EF146520A0156CBC566B3DE6C365DD7F94D40BBBFA8B64AD7FF203BD01C
	D0FA20FEFAD7BF7EF3F68A42338EC38393ED7ABDFCE94F7EF2E4C913115974DD
	66B34DC2C0B2DAAC03D16D230EF0F2F3CF7EFAD14F1F6CDB6106615E2D68DFA5
	7EC5319B0143041116240284798EE33CE9FD6A9A40489BCDF6C1E90930249138
	CD37BB9BCB9BE9D5EB0BE6B45A769BD56ABD59AD566BDD8B40141303001ED70D
	D0D7CA02FFE13FFEA787E767633F8ED30802803C27592CDA6EB98CCCCBAE6BBB
	B6BE37029098999199E334CF6998531B13032700543BF0752B71EBBBF60FB4FD
	F27D014444114E330202212D96DD66D3090033C498FA5DDF4FC3DBCF5ECFF39F
	BAA6D96ED74D13B627274778030000208420CC29A5A669DA45C789A7794E31DD
	0CF1EDC5DB98222120CAA26D178B76B55C8696D6CB55D3368180211011614072
	7F5EADB11EF87F744934C9614E166621A07D1080888808CC33020A2286104E4F
	B74DB3650616E877C3CDAEFFED6FFEE1C1C9E257BFFCAB839CFFC36D80861022
	80040143C42489052410424314BAE5622102738A9238315F5C4D5FBEB941C240
	2022CB65B7E8DA719E76BB7EB95C111204CEE1AAADFCAD25B13DB19046401010
	098545BF160004F2A892110908088041F7058421B140448D5257ABE566BB7CF7
	EEC9C7FFE76F7FFEF39F2D178B63DA00014433190404A42B236A090884536216
	2640090848ABD56AB55E89484A9C38C508BBBEBFBEDE7DFCC7CF5FBDBE6802A1
	C8473FF960B9E8F422FC8FFFF59BB3D30727DBCD6AB90C4D6842C8D196EE0A21
	01C03CCD484448801ED348D0BB63BB85880844800040A01E1705F51260024EDC
	76ADF0A15281C3F900014011C85184A705606F9B8498048423B30011080B0B20
	4220028293C5B669BB76D12D16ABDD6EF7DBBFFFBB975F7CB158349C789CE697
	AF5E2DBAF6FCD179D350A0B0DDAE4F369BAEEB1E9C6C978BAE6DBBCFBF78F987
	8F3FFDE48F1F2FDA4E745B4444409049ECECEBCB23C4FA8E8800EB511111B473
	23706C1B90CDB3663D84980400191918801013A3008308129188080012020B03
	220A4B4C4984D31C05649AC7CB771797EFDEAD57CB376F2FC769DC6E9614E0DD
	C59BA6694E4F1FBCFA02369BCDE9E9C9C5E5098B344DD8DDEC2E2EAFDEBDBB10
	6C3DF1F2BF48533033FDE20746F4860020020A30200208B30083685877442648
	7319014420A40849DF2FA310208B2001261044B493C828E66845D46E33300802
	A7B4596F7EF4FEB39F7DF4E14F3FFAF0EAEA92136B4CA38BB55EAD00B0EB1AA2
	304D13B3BC7AFDE6E5CB2FCCDE79E2EB071EC46F22010AE4ABA0EE5AF4D1A24B
	8F28009C783FCE3D8E3C400F9B94A3674E9118C4C2490A2C0C2288800C2CBEF2
	222C1C508DB5E5A7C2DC2D964DA0876767DF02D2755D070067A70F9865BDD92E
	D7AB9B9B08A41E00D5C6B308A9B9470186E4FF07687BC5520C12022052790777
	BD4E7448201886619CA60909C84C1122022112EA1F7EF10D9111116016114141
	D68B8F06CE092273020016965B1F6EA411EC168DD3D434CD2FFFEA5FFDECA38F
	624A8424C0BABBCC82846A72448081818559447FD69F49401497F04BB9E7CC8E
	260F18C741DF3FA3100A03A35046784500092179706941527EB7194AF6D36B36
	0ABFE620E2DE17844088A79BF5E3F387CC1288404058848425411242324F2082
	A8A9B318802282887A1B917457E49F8A64DF871BA01E988890FC0A68FE031671
	18468A163215330202F930DA11379C1ACDBD7F63EA6DCFC402BAC72C0944D8AF
	198BF8EF134E9C38810833338B08ABA300401116FD9E88801005C0831CFF836F
	00809EB512A123929E66DD95E2100580CCB1D69FB7F645ADB8DCB274FBF987DE
	00DD6B35E81EFF3AD0567E8B6888A37B942409AB031251870080821408E4503B
	70F01B90EFBA5A1C4151DB93CF38DA3167D09308955957BB20C2BA4889938236
	09927CC31EE83221A103778148BD28309BE9676160BD901684013278B4A9AF02
	01447D8370E243417187DE80AE6B3D9C40006449C0B9FA21EE7AED68B354A0BB
	F93F0156032CEA7E3941620434D8AE86F0F856F18A332C9E8F3232DB19D7F3C0
	C068550BFD45762700B3AF67100981C01CC1F199202C5024A199FE62E5850DB1
	D4C8AF7E3CC17E7454D52AC596C3B668CF018B9755CC070032271040423BDA00
	90813941D6D56631BB248004B619160E01228AEC39AAE3F2015EFBD337592F14
	1280181866EF4F48D3078B41C11D81DA24445D35AB9078F6E4172117CFDDEE2B
	D240F9F91184105934F6D44FD6E4CBCA2F68F99FC356625E0A0F05461C7603A4
	BC6C64104ECCC26A5AED0258B66BC6D97FC4C1325B39115B7B481192D8FA544F
	0E2C2008CCD937E01C53AECCA9DB252F360082EE40B92F02027B0180671B966C
	8B808645C7760334FD75FF6530F15E0E55B07E44CB99C162F34C82D0FFC9A005
	00805245FCA0436261B6FD7BF5E6DD97AFDF3C3C3BCD41911F667517624F0776
	A9A0385CC9C6524083D65285E0C3388103B3221858181D98F0E3A6274B0F32AB
	39B7C7287A2DC4994B21C597080B1200230313208BB1460CAB110C01FEF4E967
	9FBFFC629AE7F3B3D39B7E628DEED1701E4DC88445AF1729FA276AA64458391C
	C0EEACF47232330034211C22173B3C2BC253FB7CFC0010B22191AA7E8008C020
	2884C800E4BC11C85F9853E0C41008B8CE0F1009C6617AFBEE92425837CDDB77
	97F087DF4FC3408184AB7CDA1021832D64EFD9C5D69D0D8840641141A27F9C87
	744F4D5036AA0EFA5AA82176A22D3D422472A8C14009FD09BF089E4819408396
	AC4A95B3890885D0B441B1D2C572B1DB0DF33C59B91F81F40F8D392DE2574C1A
	2C3C2A0E23C75358AA7B0771013F840FA8961D14FDF27241CE8ED14B51EE0835
	162A1BE827D6DC8006997A63B48E20921223C207EFBFBF582E628C9CF8E97B4F
	4EB627313105028024C29238B1E4D5CF14477B1DFA4A2D625252058800797E81
	C7E68445CCF6E4244750A8D87BC8A75C5D85D9075B7D8D540911C1FD413EF4E0
	481A18AAC322CC89D7EBD5CF3EFAC9FBEFBDC79C7EF4E4091269F2952B0298A1
	6942052A245B43DD6A605F6DC39F021251F01F3C3228C2F1044F35B104E890F9
	4EEC05742C6C12AF618967C26E12343E3470542C5CB4C713A6949AB659AD16C3
	30F4C3E88124A0E805B2636096C7561AC59F45CA4D04A7C3011259715F8EEF06
	14F08BC15D9CB8B1D7781B983CFA541C00BD442ECA10727689AEBE5A1FB65209
	0A9855B3A5155122CC1CE330F608903370751F9C832F7333E66C6C935972008A
	163110050A1810118F911BAA070E008830B143079ADB54A1A9E13564F1100B23
	D2380E31CE81023317FAAEE6032C822408C28CB97060581E08C0344E37377DDF
	F776A39CF3EB4F93B10791CC61CD7143A11060206222243CCA7A007851A58269
	BE8A2F8B1626DDE8638E5A151BCE062923C8FA6969B51670B28B37345392A461
	1877FD8E1045B2E9CB74E812BFE6F4DB903BADDAE7FC80000E16831E3E110343
	386B5E8D9E38428A10CD313863C599237A29B2972E74E50C1438B39A1188F722
	442B783644739CC761D4184972B2618578145D5F7D120460CC110389D68FC47F
	F30177E0E0D4C4C48C0EF08AD95C3D91299FE85C05B62024E939CD4736775458
	FC58003DCC5C380B5B629C2F2E2E76FDD076DDCDF5EECDBBB70D056765DD029A
	D4E0AB6F42202F8B0A24AD164066F6D1F1F182723DC04E5FC1D350F632340BC3
	9510A439A8D99850A7415ADB628DD3453808266623378820003387260CFDF03F
	FFF7DFB66D8B185EBE7A39F60352830E6B92DA35624BCB3C8906141052924495
	0AAA7DCCE0281CA247E3E051101266AE9378E4A76F873CB3755C5264BF16E9A5
	1C71CB846CE514111042AFFDEA2D02E1C4CBD5F2AF7FF9973FF9F1874D83FFF6
	5FFFAA5B2C638A965C20B23B5C8D721CA916910C8E1A65D4AF1AB245BA25FB38
	AA28C8FD4036E928C6101737C984A8C090160232488CEE242503CA1E6B5A3C4A
	0E49B8734D921069BBDDB270407AF8F061D306CBC2040520187CA71787140B67
	B43A84D64C8191FD653027434F0FC54E3FF40DC81CF09A6FE30C901A4A8392B2
	15680C1C30CBD40804D4E007D0C275472C3097D9534C29724C8985578B95ED22
	2AFDA10464F9FB99F0523F133A0C61060A408EB32266D98085F906B890C7A7F5
	4D810C2FC05E8FE92D70D5999D028064DBF355D20E827201168B0E3DC847B855
	D632183C47C0B90E6D5F8A01D1872B08FF101BA089A57932A9F2022CF9815E78
	4715D45164DF97BF0B19CC00044D7741698446A393922D783ED1766DAE377879
	8DBD22ED970E0D14CAC75C3C7F51E78D4062054F39BE0DC00CC598F9290DA20A
	1238540066700059528E3D6CCBF2FA57D92B688CE2B51ADB691629E71DB433C0
	1C0914922114A65706CAD1C05AD10CD0F8DAE818F637F6CFDEF30DE05C5F727B
	EA5F6039AD96E9E7642CF326009437E5A1937EE598A894BFF2FA68498B2549C2
	2ADFCD95DFC27A811CDDE49D359700E8742EB1563725101DA509C2E27811EAF5
	B7138AA50DDE6852EA0CA594485C6F4039168A23E7381D8C22A1552FE394B230
	272EF887C700229CEB9C0E5E3834EA4E3E776DB85316CFC0F1589D7081E12517
	1A11B5FD0E15EB2524A0BDAEEE9A0DEE36DD962B534B3339A882B8D192B2A2F0
	E04F498802A837D2DFBCB905A813142CD7068934933F625E9054BDE779254831
	2E42225F7F2440223BDC90EF4ABE055DDB02A28870122DB5679103AB2C5AD112
	CBF1963D590F366F8CEE4180411049B0F22C50D8305AABE9FB3E31237D2329F8
	BED7848D54B2BFFEE03C1342A2A04D747A03C0227028FC744BC1A4D4947300C3
	EC95C582E68B96570AD9CD435E74D44F1478336A44363B1E7AD5378C458C5577
	A836B1E6E01EA00AE9D16B2DE23BC1228AF5E7FE0D44A91842854DED9ED39CB5
	6313DE8823226A64A4020C9C02948B6C48C670C8750566D19C01BF0A34783D0F
	5D42E2F86E801901855C32D12DE749A23C75949297EDF59A7A12CCB98096B4C0
	BB17E516DE85F57D14D806913010954E03F618CB925B63494849C8618F67C156
	86D39E0139BE3C40D8DA92F2AAAAF1A9E89A0E50603156C568608EF9336CA059
	58CE049C43957711B3A1B20A7F415C4BBD2B830BE208D45E655EBC560C2CC959
	C47810377CD80D68DB05ECD79ACC9765068EB35F3316E426B82EDD80B3A64BA6
	9BCBF75C67551638B248BDBF19A828F649A0A2FD325B3F472186E6C605CBC859
	18F82066E8B01B101ACA212054640829F17B8608D08A5016B6942D284154C591
	06408622D1E1A57E6116C1B29A75FF0154AB2C6C54522AD814E6385463A9CC58
	E192C71C232B023376E68679EFA617E700353EA3849CD0E4B5938CFA1B98C398
	013AADD238D7162BD2459DF429EE01A4F6D05A985818D17E1C21DF45CC8D53E6
	5D5834763AB20DC89D2CE22C742D1C1A43A42AC078D9834BF4CECA9EB5A551FF
	2155613823D5884EA8B554CE48D80075CFA967C2002C62614F69C18072B70A58
	544231EF22E19C4F1C4B3D00B5BD2BE7559916E8C0676E8B63A517727104E0F0
	00649E3865600CABFC578AF1B69E3BC79AB38B060D39B9E407EC2E814AE982B3
	B48A3503D699B1183586E02E6189C3E7014EAA05B8C549C9B436CF41F7782B52
	618F5E4F70AF419629682C05EC4BA32BEA291B7AB89F832FEB1734FA69207347
	259A2AEDF2265D8100222104FFE52583389A4CB88ED3F391D7E845AC162B5E77
	DDE39B4389219D32846AC3F1562F252255DCE64C98C80EC6BE93F7405D8EB038
	6BD5784358A5DAEAA7356301CF5CC43B018FC7072070E4C4096BC511DC47E533
	33052AE8A7220DE67A5AF9449042732BD17E2E222A9F37B3E5B4BC0E5EDA1514
	2A15212BF0941DCB7903626663902A6C252F291D53268C22B9CA61340F963D40
	C741CD526829273F079250B46628CB15944E1BDB51B3DD85CF6B675F1B6058BD
	80B150A0088188ECDD377D2632F0C4CAC30A8EC25D634207BF0104A5BC6D47D2
	80482815413B9A4558A632C6F67D72DDA1AC6902B7786B584BC17AEE6ADCE6AA
	1101AA223F9658C739927E0F9DF60822E639903C813EAA1BA0CDD0928B7DE584
	6694CE6245AC389A921356ED2780922A604D1514AC0B3F59A257B429DCC2B0E4
	A931949A9B76249408C97D2C426DE88C1764322E09F8EE353B0E9E0758BD2FD7
	C232F0E62DF0390535FE7E01B29D9902505769B2320D566D1CE24EC679CC8280
	293173B2F35FA21DF094BB7A55548BE7826615C652AA116FBC7B7EC4A1C9B9DE
	E3ECEF96B154799D29975B242119251C894B1E408042A4C51AA9FBB7A50A7AD8
	E2F3BFFB87DFAE164BEBADD66C1995F8E962150214DCC1B3A8894C62845DB09A
	5D29A38AC3A5493870B8F3053BB87A7A2EBE88F3703CD09612BEB85526A27EB7
	FBF4D34F4E4E4E1F3F7DA2B9E9300C5FBE79358D51E43C97EA8DE08642804918
	11A769FAE3279F7EF6D9CBA6699B86528C1FFFF18F9F7DF6B94AD2157D6E31B5
	04572130552C63B558D26066322BAD68E30D227262A2708766E8E07980D5604B
	5294A3F4DCBD5AF83C44E1E2DDEB40F8EEE29D4E4E40A42F5E7E3AF4FDAB2FBF
	902A71066F31D2B49902BD7D7BF1874F3E59ADD64A8E1BC7E137BFF9ED277FFA
	B4098DFF1EABCF58EC9485E1A02AD7B96E073A03430B6CEEB384E8A87C4005DB
	48C534411783E002D3E4567881D57ADDB65DCEC09879BD5E77ED42B90EAAAC94
	F136A52972E2478F1EFEEA17BF689A26C6945242A0E72F9E7DF8FC85F56A671E
	51A9D74829C5A0A022DB553D20B32D64AF8DE78E19A207A6A72F9675193715EC
	463184EC3CF7F200C90C383D23689903023273DDD722801840795C81E8F1E347
	57D75729CE2F9E3F4784F3F3739EE78BDF7FE630B43023062621EF2A207070CE
	014077BF6698D0D9DD2A5B242A9E75877B70E8060DAAAB1C5529D7F880561500
	41204626024E29342D65304820322FBD8D2F10A59C62298542B9898289930004
	A2C562717E7E8640AA5CCD5920C83A7F6D7A069A35D1B56604AAE58350EAE8CB
	F06BC945CCE3C903A458A03D5028E3103999523E8F3C383DEB6FAE6F76436882
	C6229BD5BADFEDC66934A8DF6B2595921088EB7DB22B5E49D6C422B815E243A1
	6D436EFA60AB176389CEDC529121819C1DC3D198A092E360497EF709C77EF5D5
	E2326F4F4E99E12142DBB4DA72F7E4FD0FC2EBD72C240A8D311457E9DD670AA6
	254E4F1E3F7E747EDE3481136396AB7374DF584A4888A06C0C22726CCA2B0B92
	2B6E82AA2D4D99548000989803E15DF1440F9E07E4422FBB9E129A4C404DDDC4
	7CFD85E5F4E199120B4D6E11F0ECE1A3694AE6340C4ACB7B09359574B95AA240
	625B7DEF4D36D85A088C9B277B654EC80A05460F35CC87880205918AA81D54F9
	D79A27EF7F1474EB3AD4487F0199B399555BAB669B328347E1045587C04CD804
	771E785B8CC86DB68B0CED03DA5041DC1569096FCFBEF27A2702112122052244
	667648EA38C25028C77F4FAA092A2A6DE17D3B179CA0E6AB58EDC51D406E9BC9
	A5150C2104426ADAB0BBDE5D5D5D070F564A6351C6981CCF23D7B5AC4B6A8A74
	576269058792C4D6D47F5C99F07E5FB4F74370CAA6475CB1DC224B86A2E50115
	B9D11C89AB3B5527B01FFA699A8930C6787DBD9BE2BC58749AFC724CDE6761E1
	4D4A0C60875A637B874B6AF68BE9171162E1AE5B5629807287A9F00F3047CC29
	A18209094905634CB2501073240ADE249AB5937C312A008E543AA6C8E951C0BE
	1F5E7DF9A530CF31014240FCCD6FFF5EB55B7FF7873F34CD060077BBDD9BD7C4
	DE074E44ABE572BBDD907BD7AA65CC89302C029824890407FF40ABF97728657F
	70AD08823244477D2DA235463AE8E548323A63C2A9E02E6E9C81392042041248
	5627009124670F4FCF1F3E9CE6699EA71499415EBEFC62B35E3F7AFC68B8B9FE
	D3CBB7024CA6B90104C4C09CB4634F84C5484B02AA8496FB48D8794A7A945262
	A5D4DB5C87A388828A97F4F674442F3E56AB0F957C99147CBFC4295630C04C1D
	C2BD567A86288988168B656A130A7EF8E2C59BB76F2F2F2E95CD264916CBEEF4
	C149B56C18828F36D1C894500472246A925E2AEB08945B68628A81C21D0E753B
	F80620A0F8C01676022199CC8CDE09A887BA0054AA49986395723DCCB9228A16
	CCD9B9236CBC1546699AF0F4F1A33926AC20B6C44C084895F65E459456A69C5E
	000621A7A15A1F99304210E126B45565E718D0D0799E359A17EF9FC042F1F05A
	98B739BA52BCAD6FD534E6001252EEB8C04A8F88C02A314A87D652FBF664B3DD
	6C132774316974ED2B75C2D9D19B90690D8A3A80AAC22CE2C439D5E1BDC36CF8
	E0BCA0CB8BCB42A6C9CA5558F70263C5BE728A824B34B9108AB84FF75DF4C2B0
	65AE15C9512357D1C93419C204200AE072699809597BB16A15FE43355D005044
	9899C8B415EE108D3BF80DC08025AA2947D7652030477F254DB65EED52F4AA8B
	5F0EE4D5049D2C7E8CB9232337E3601DE57BC1D287925483F9F69AF9ED2A5618
	3AEED12BEF70AAD5816BC28EE5561A7D005561172A1E8EE0ADFA0157397485D4
	671396D94254D7530C4E5610631E27BB3AA8AA1CA91633CE7986374E654686E7
	19B6A37B2C0E0D46EF0A943BEC062C164B29AA4DAA34B3A752E88C102C547237
	53594D429CC34648B973BE50D85DDC046A6633904BE2B3853ADE8E51F5C27B95
	DFDB3D0C5E322637FBABD1F64AAB1F6492F6714011790E9A5AE3CC212FF3949D
	33E1CB5496B0224B618E5A11B2EA10D6F3CA2BC9CBA235AD5F26C3916CC92903
	FA98AF10E6D987753B420991B5BD125DBAC6FB8D8FA21E800590F0B96008F509
	C25ACA1672CF51695DAF7A85EB96F8FD99F1355B0BB14A262A63432A37A460AA
	EE96454E65B476518B751F607245907B57F3159123B901704B9E0132E255E55B
	26958B659892E4FC188B60A4496D60458683AA7656A6F755C6BDEE77352DDCDC
	BE24C59AF955B37A8F95EC85411891404425C20929F70DCA31DC803D5DA0BD70
	32AF3EE4C19AC5F26799BE4C6497BA13BE4CB97267ECBC9E0A63D6990148E4D3
	1794E7237BAF27FB19111754B69E7E769964930B77A57D2E30D75D6CC10FA015
	5166B8654E0A15768740FD773ED8B2BF8979EA8C733CB15EE7F27B720C6AC1BF
	0D02AB1E5C35245737EBEB5541ED8AA4185D1196F3438BB4D7FDDE00DC53FDC4
	5AA7B3500F8D7F5C11E85C497E5F47DA448449F609B258E1D565E600E5D6B09A
	345A2026825BF309F62E6A951B6444BDA8B83097FCEE7EFB00D8673D95791415
	21B752AD41DC57F2F7FE09BD37A6CE97ED3556CF0A5005F568B235D5EFCD82BD
	85A5910B6B882E63547C503DB3AF8C53E43C9706D8E701DE6F1F50AD10166DF2
	BA8BB11A0F0045A147F6B4D541C47A6312276176A6B8ED54218A64880109684F
	0337B7DB157D3301D1D84C0A69B8DA5D4B7813271FEF695508A3AC07C4BB58BD
	834741990E2DA5D9DDA3A072F67D9489F187720FBBE7089EEBEE6BAF6099D197
	4D7AC68664AF3F40AB3DA252E0DE9451EB9862950C2A08CA92278C711616F2A6
	1A036BBF3F4BE5F0F303B2EC0C16B5B232B52B2BA36485DC7A51BED218A7310A
	599B1E5465F7DC6D017BE88F46EE5C130EB31241DD26B5AF220BDE29CF923370
	C8547B9DCB2DB2D748788F7D40D6FFA9D146A95859F54A3BED6ACF157AAB6519
	FD53C614176685D607AC70697D4CCE6B295B555271710DFCBAD08E79FC649D94
	412DCE5EB158EF00993EB86EA8FD6D32E7E213C0F6F203822CD494555E210301
	3E400415024332D3438059E3B540CAA5D346F300CA7903143A982B0369D29DBC
	F51A655FC40272293F8F3AD4EA01A252F0D2F75713FDA17841DF5AC3BED52199
	C5FA8902420D3C641544A82693619D157B63B277939172DFCADA53315DD5005C
	0F9D3282945F315AC330226208E6EFBDE5E90E84140FAF980575CC5F5838B971
	C8AA965CA6AB5AF1523034A16A4A1242ED8D70BF529AB914B1AC50665755D7AE
	CA1C83964798B7156B682ABF592A822860F5333E685EBCCE536BBDDCD70D689A
	704BB4980BEFBEAEB7401631C33DBE964DF6CD2B50FAAC8B55AF18CC95D074A5
	0F959B8D727DA2D0AB2BC9E2FD61A0FE3C56EC34ACDA0AC71590F87D8B6307D6
	0BEA3AA90CAA94C40B6B7848B32D945AB9CA11EC5206290D654535A240D3B947
	1BB05E1BEF89B448CB07D54399580536C0166D9B4AA8E913CF7255A6348697EE
	25B9DF26C8D5095C85D95B62B22046F6A1198CF44E155F4DAAF3D714A35D0997
	30AE82A89CF255B53254B3E56977358723A7213EBD09AB1AB56F1F655B56A7D1
	90C33AE7B87FF768E8E033644A77468670B3508AE543EC2641F68526F72B535E
	E4ACF45FCB9CE152A5C1227C09FB0DF3A5A5150B30B8574AABC024E763800DFA
	2E794056E095AC3AFB7D342D0F5D13CE43AB72045A8FE7C5AADBB4C8F5141126
	CA821152821E47B0F3511529BC72DC53DBADB23FC9AD2FA5CC5C19AA220BB597
	A20B6BD029658C6B19792552434EF7150DCD0A3E15A0984BBAB2174854DF7738
	88CA5C810CBD614188044AFA2C58CB43642B42264080B7E706FB9E97C74B25B2
	0EA51B06B39E54163D5331CD4A25EAFE6241DE4C277BBCC3ACC52CB74B07B514
	009267B6A56C02F5EA7A0B400EDBAD5A4035BA2FFB7CFF2AC487FAC9BE529DA8
	24A3B2B4041AA32B71F2B374BFC1382BBCF89C1756C108D7E374CA5F39FEB02F
	1E8C54436775DCC43E541ECB288CFAE03A9081840D35B04D3921DD0000092C49
	444154470D7314D61CC19E622594BCA5C26ACB004BE1C45972579F8D9354C5BE
	7B8705413D7356099C79524206C94AE3AA852BE25AE954C27C81C429C5E4E4C0
	7A268654F39F339FC7DC35433D85C7338032170EF794B9CA0EE5E94A364F2E9B
	21AF6778C24139CBBC873E0033CF8C7D26781189A89AB4725C53B5740184A6F1
	A347023C0EE3384D312636F921863D11BF623D72F4057B83B3BC3DA42E5063A5
	1092192E959C3773CA995E01E23C6FC801E8777604CD814D10A200ABC5B4D622
	B89555092018DFDF0736780F050210604CF1DDBB77D797574DC0CB8BCBB66BDB
	B6699BD0B441FBC8904A7180CAC9F58A5529B4612014D7FF11A9E578A1AAC399
	377122228640190DD7CB1A284FA0D0C94BF09DAFC0A1E9E9C4854A5624E3046C
	16B30F8029E5D9104844624CD737D7719E5FBF799D5810F1D1E3C76DDB5E5CED
	B45DBBE968D1368A3C372110928AC42261131A5DF4AEED624C590BD1A0046262
	12E5463316A15ECAACB92284CC80891322060A0E5E81497E07653FBAF8D6778D
	440F7E03E6691EA72971F2712F79A66DA5D04A888249789EA6BEEF77BB619C86
	45B7649047A7674F9F3E8D711EFAF1DDC595F6C02049D7364D6BC307887CE26C
	40426C9A46BFDF75DDD5F5150132709CE3384DE457C635F3F370A78C0B694736
	EB8C691099A7C9A7399355E728A0FB6E0707BFBB293F748B12765DD7B40DCC10
	2572129698A20A941012304B8C719AA6DD6E370E634CA96DBBD57AF5E0E4A4ED
	BA775FBE1CA7E9F2F2AA1F7A4E32C718E7C892300100A7543735160B642B8B18
	025D5D5C0B0227E9C7E1F2F25A5B4D7D6204A20005520D5DF2339E2D1602C694
	6E767D7E3CE5E9621905D7897C720F6F00DA0D0821841010B0699BEC2D13A7A1
	1F2FAF2EAFAF6E767D1F42582C1627270F9AAE25C098523F8CBB6198E789BA25
	112D970B6168538A738C291242D39A7FF108577C32AE8AB3328844A239464224
	C4698A37373B4008DA25A05882239D3A385D074A748B96908671E8773B4EF3D3
	C7E7DD62813AEBC33F74185F252EF4DD7BF60EB501EE9428718A73D4759F63DC
	DDDCDCEC76D7D7BB942262582C178F375BE52E4CF33C5EEF58921EE2E56219DA
	66D9758B4537CF9838010852B3C44E400249085497B7C44539D800B284406313
	5252C513D61E6B1181B8374B54C15022D25788C2CB65B3592E9FBFFFF4C1E9E9
	D5E5C5BBB7AF25EBBE2A709B994C046554227E9770E8501BA0EB1F02F5BBFEE2
	EA72D80DBBA11F8749009BA659ADD64D680425CDA91FFA14930850A040D850D3
	B40D69EC019098E718638A08484DC084D33C05A2D0752164DEB8D8AC552983E0
	850108C65D77753390085168DA4645CF8000D8643A54C46C9AE7A11F10D2E976
	F5FCC58BB3D3B3CD66CB2231CE6F5EBFF609654C8818480C3B2206219F09C4B7
	53ECFB6182D6EBEDC3B307AF3FFFECEAFA1A00BBC5B2ED3A94D4EF76B3AE6908
	81A869DAD050C080442C4958124A9A590422271DD78001032076D4340D228406
	0382B81E3D1206211608791C6810A2109AA0B913056A9BA0F8B230608B44C40C
	C3D00F7DBF5AB67FF1FC474F9F3C3D7B784A0073821839CED187B4269624D228
	5D3740A3127284A8DA51188295984CD8E35E98200484EDC9C92FFEF2DFA4340B
	F3344DD33C4EC3384ED33C4FD338C414631C528459989350D30A085103882184
	C562C9C2819AD0B614A8C8CC913D3B060261D5A3D7593B41E3911601401253A3
	0E2890F94F24C2B6E958789EE69BDD0D617A7CF6E0BD9FFFF8FCD1C32E340010
	1966111660666D239FC6F1EAEA72D8F5FA029AD00824CD0B12214935C6001141
	52349A05161AC6B76DC9C14C1002022496C83110098545084DBB586FCA80D514
	638C29A539C514E33C4DE33C47E6388D639CE6DDB46B10A6E1EAEDAB149AD61A
	AD8942135AFB270236DAF7ED124152C68D91155AD4B58686DAB68D315D5E5D02
	C793CDF25FFCCB178F1E3E5CAE96009000A20800CC11908093244ED330F4C3D8
	F77D084D3F8C49B81D5B05B82CECA5A09E39844081025113021211A371F7FE0C
	A41AE54083420500619CE2EBB7BBDC5B92BCC7534315D6F5CA93A36CFE4802C0
	C491232749719A638A29CED33826E6691A58E7D98A848600A0EBBAD0344DDB10
	066A42D77426740B1042F3EAE567AF5E5D4068968BC56AB5582F9A67EFBFF7E4
	F1F983070FF431C9FA8B4D8722468973ECC77E77B30390CD7AB15DAFBBAE2BE2
	F7895984539AE7995974A890C7C104C04DD31286103084C62E5FD0D037F783EE
	EDC9E16E803A46EDF007A92039512C07803921DB3467CD27398BA0B000510314
	D6ED522A7EBF6E5D4A29450D4939A5691AC7699AE3246C0128061291D57A7D7D
	79797D73F5E8FCFCC3E78F9F7FF0C1F9F95943417188E4FC43108802C2324DD3
	300CD334B64D78F4F064B35A1B2DC6B6F39BDF2C4B92A4870A00638A9AF3F39C
	901067CC38B687B28AB37807ECE112B1EBDDF0FB8F5FBA383450A581A7118E73
	144A9B86B0202127D630DB340F2B41835CDEF26E531BB4A65837734A31CD6996
	C431C534CF2F7EFCFCD9FBEF2DBB46B49FD555A51940189821C5D40FFD388E00
	BC592D379B55DB345FAD2554958C7F5ADAE55398AAE25F95431C760312CBD5F5
	F5384CE3340FC338CD31CE718E29A6C4ACF1BE7D062215052244B2C95FBAB25E
	103701E8C2BA95526534928420080B8590DD5FD3357FF1E283B6032B8BE9E818
	8624C051C6691CFA7E8E73DB34DBCD6AB35E9538F23B2557DF01913BEC067C95
	0137C718639AA6691AE7DD308CC3348CE33CCFD39C624CAAB787A4E097669FEE
	EA2ACA60198D47E89A4D94699D792C9F062D1F7EF86CB96873F3BD08CC318EC3
	380C3D086FD6CBF566BD681BF867FA38BC7634544574C4AE6DBBB65DAF967B17
	25F11CE7699CA7390EE3384FF3308ED3388D539CE3384F129985190CEA4140B4
	B82328EE861054CBC91B021043C0D265ADD583C8D33C8FD3308F53DB86B307EB
	F56A4574A7D21BDFA9682E3FE82F3443584D4FFE86F7AE6A3E714E539C638CD3
	388FD3D4F7FD38CEE3384E539C53E2945262036A8888B0090D8526046A424381
	DA109EBF7846847D3FF4438FC027EBF566BBEADA76FFF5FCB37DFCE01BF08DBB
	92B552AD5FF75B4EA508C414E39CA6799EA669D21B33CDE3308DF3942247ADDC
	02365DF7C1B3F740A469F064BBD96CD681F07EACFCBDDA803FEBC6543D36F8ED
	6E26A538A7C431714AA96BDB6ED12EBAEEFB78D7FF8F37E0DBEE4C269548DD21
	F0CD3FE19AACF7E9E3FF023A4FC2115D422AB90000000049454E44AE426082
	]]>
</Picture>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="1" length_in_bytes="225" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000500000
	0016080300000060CEEBEE00000018504C5445FFFFFF8A8A8A9A9A9AA2A2A294
	9494000000AAAAAA000000EBB6C4CD0000000674524E530000000000006EA607
	91000000684944415478DAED91510A80300C43DB46D7FBDFD84827749F62FCD2
	070D83C15BE84CCE6E9626222B5227A48CA9149E3E31FA86FA1DEA7F59875EF7
	4E439F8013FE142A9B30C2A300C088C26F500D374E60FA9C94874726A381F585
	EBB2371C52D28698BFE1171A1EB8E71360B5EAC2C10000000049454E44AE4260
	82
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="2" length_in_bytes="149" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000500000
	001602030000002A7EF34F00000009504C5445FFFFFF0000000000007E51A95D
	0000000274524E5300007693CD380000002F4944415418D36360C0069C30851A
	18BA3005173168610AAE60588505605789D54C266CB637600A326175FB485609
	00EBEA1617732DF8D30000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="3" length_in_bytes="215" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000160000
	006404030000007070DDC20000001E504C5445FFFFFF8A8A8A00000000000000
	0000000000000000AAAAAA000000151515ED98BE310000000774524E53000001
	0002FEFD22B35514000000574944415438CB6360A0376014040142EC7220A009
	9BB9A1A5B9A1B1B91D081818343A1C98616A5A5B9B606A383A3A3A0CE07A9B90
	CC19658FB247D9D4601B20E535B8784747133C3FB275301918C2F26C1328CF4E
	070200B957DEBD0D1313B20000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="4" length_in_bytes="177" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000160000
	006404030000007070DDC200000015504C5445FFFFFF00000000000000000000
	00000000000000003D86EC710000000674524E53000102FEFD00E78727800000
	003B4944415438CB63601869202129010A1818C4D214E0E2C9C98930265B5A5A
	1A424322C3287B943DCAA60D1B25AFA5A521245810C2AC0989B03C0B00D1DD28
	9B4848C5080000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="5" length_in_bytes="116" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000500000
	00500103000000B4DF60EE00000006504C5445FFFFFF00000055C2D37E000000
	1F4944415428CF63F80F070C48CC030C50C03CCA1C658E322964BE5A0505AB01
	60AD55795A631AF90000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="6" length_in_bytes="223" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000500000
	005F02030000000229A8EB0000000C504C5445FFFFFF000000000000FFFFFFF8
	32245F0000000274524E5300007693CD38000000764944415438CB6358850530
	60155CFF1F03FC1A151C151C151C151C151C15C42708AD43F66313DC8D047631
	60050D2814183081494664552CF8546235931159250B3E95186682D43A322830
	21696F60E802D2010C1A5D482A17316801C910062D2DB89000C30AEC352C5695
	58CD7482D8EE84647B23003D5B2654EAD4486F0000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="7" length_in_bytes="205" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000500000
	005F02030000000229A8EB0000000C504C5445FFFFFF000000000000FFFFFFF8
	32245F0000000274524E5300007693CD38000000644944415438CB6358850530
	60155CFF1F03FC1A151C151C151C151C151C15C42708AE41100248B5CC3B3880
	0862050D40CC84933B202A41020D1C3031053097A10B482ED280096A80B90C5A
	4072C50A98A016988BBD86C5AA12AB994E40B211613B980B007D932AB7FD53DC
	640000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="8" length_in_bytes="437" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000640000
	0064040300000082CC886700000018504C5445FFFFFF00000000000000000000
	0000000000000000FFFFFF5CDC67AF0000000674524E53000001FE02FD987AD2
	0D0000013C49444154785EEDD5314EC3401445D1FB91F8F590227542C10622A5
	878225503F10FA4B88B78F14C93262AC645E89E4DB5A6FCED88DA9C1F2DAFB0E
	8627418BA86F1AD4345401ECAB5EF126A7F3E9CB9B04D9DC8B9107F8A7934DD9
	944DD9944D09F240F394E7FDDBD153385739BFA4A0C56355732E767C68878F4F
	E76279ED65373E99C4DCA872097B32215B217C05D90AE12BC856085F41B642F8
	0AB215C25790AD10BE826C85F015642B84AF205B215C25AB6CA5CA55485F91AD
	24E92A025349C05484AB24B6225C25B115E12A89AD0857496C45B84A622B5A26
	7DAB707273725949DC4C74E59DC74197C064923B0AE1223D93DC55880E319964
	40213AA43FA2FD01D423732AAE3D315709103790793233D4C2AC22D44AFC6610
	A30A5A90B177815847A0F55F2C581812A70021AC44255E410933556116D533FC
	00C5DBF0E711A0E88E0000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="9" length_in_bytes="458" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D494844520000005F0000
	005F04030000007C6206C60000001B504C5445FFFFFF00000000000000000000
	0000000000000000FFFFFF0707075CD6B56D0000000674524E53000001FE02FD
	987AD20D0000014E49444154785EEDD2B14EC3401045D1BB484CBD34AE03053F
	102935E223A80709CDB6A9123E1F454E321232C99B8AC6AF8D6F8E776542DC34
	AFCB41A3B7165F104769013045BC9582ED6EEB95A0619D92806DFE3958833558
	8335588356165EA6F74D29D845B81C347A7B8CE8BAF0FCD0371F9FFA2B4DA7D9
	AB2C1C394F0DBE2D036DF45A70C0AA02BD2860A5600FF44AE08055057A51C0AA
	025D0E0E0060BAC0BCA210E110852358B88B8103802E300B968174498E1AECA1
	F669F80CE8410210F2115C0FF60940E8802E24A0059E400632401401A2081045
	8028028404E881272005830494609080120C12508241024A30580288859D9E1E
	4E02F782310690C0BDB54E2E81BFFFC08C1B405F1048C25004927014215D4313
	B00434819E8024607F0174FB2D799B655B04F00080272E0B9B19F32580E9125C
	897000B06069B13000CCA22C847C869C764BB73EEC1FFAFC9DCAEB339A880000
	000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="10" length_in_bytes="424" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D494844520000005F0000
	005F04030000007C6206C600000018504C5445FFFFFF00000000000000000000
	0000000000000000FFFFFF5CDC67AF0000000674524E53000001FE02FD987AD2
	0D0000012F49444154785EEDD0314E03411044D13F48743C241B1BAE60C931E2
	10C46D09D5157C7D8205B764AF455744B2957FBD9946CD2DEB663B18CC31F405
	BAB42680457AB782E3E9984E3088892510877F0EF6600FF6600FF660D8C2DBF2
	71B0829394ED6030C7B334FBC2EBD33C7C9EFB4F5AD6B585CB645D37C8300398
	5690105600308D2001C208A008F58022D4038A500F28423DA0A61E50844C0019
	809420030865A23E001D811A1109328024410600800CA002034026804C009900
	32016402C804900920134026804C00990032016402C804900920134026803676
	03FC1D3C0680C9DDC67C0C4072B7086A49432896A0235044D211CA0D7A025140
	4F6016D012884700336EA51CAB1C9B00290078B9068A9589DC02587E832BA1F3
	0F2DB6A68D0110214F2024E30FB5DE951E1E956F0F3A396E7094763B00000000
	49454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="11" length_in_bytes="449" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000500000
	005F08030000004899B04A0000002A504C5445FFFFFF000000FFFFFF00000000
	00007F7F7FFFFFFFFEFEFEFFFFFF020202010101FFFFFF000000FEFEFE888991
	190000000974524E530000FE010202010102AA67A831000001334944415478DA
	EDD1C16EC3201084E1612989B1A7EFFFBA0DA5073709668C8894AABB5C7CB03E
	FF6BC0C9F30A709B380E3AE8A0830E3AE8A0830E3AE8E01F005707DF0F6456DE
	34D1233EB8CE0481F81F41E659200B18B45B31351088F341660154371676D6C1
	EA69892606CA89A605EA89A605EA89A605EA89A605EA89A605EA89A607D6C49E
	68E73CA0B7B4690BEB4B9B16A82F6DAAB75F9AE320F0444CE320F0545C464134
	86298F80196C800169040442AB10587816CCC04121704DD4C1CAB58728B37CAE
	2A9837009DC2EFC88D025839A110C0E591B406A71496A778BFB81DD5855E6178
	5CDC1A9C585817BF26DE3AB9077339BD1FC7F073C8B03BD58C97549586A515EA
	1362F9663B569AF142BDF3ED0BE185BB429E2FE6D12DF3372889647B35DE8341
	02DBDEE8CC2F9CFC0F5F7BCB5FD02EFC5E061AB4710000000049454E44AE4260
	82
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="12" length_in_bytes="791" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000500000
	005F08030000004899B04A00000045504C5445FFFFFF000000FFFFFF000000FF
	FFFF7F7F7F000000FEFEFE000000FFFFFF808080FEFEFEFCFCFC010101FDFDFD
	FEFEFE7F7F7F000000000000FFFFFF020202010101FEFEFE63B3AD6900000012
	74524E530000FE0102020201FE0102000202020200037F416E08000002654944
	415478DAEDD9EB4EE3301040E1F1DA49372CEC659CF6FD1F75337897D33638B1
	264602C1544205D1AF676C891F545434BCF2F82136298DBF1E676586299E2629
	134442285F4328DFCAC2D9F00B3C35ED49996BF5C5E4853C879418849FA3695E
	E65BB6514CB95678A14A1094685F9F971D13560644D5C4DB0352785B9E1ED1EE
	41CCE1FA305F2F0C96579685035C93A74A21A079703510326D9D61E19EE0EA20
	A445B2F2BA30C16D839069EB96C9DB0789AC9CE1EF203FE1F641C8E1F69639C1
	07BC1610F1A18814166FC06B03114703282CDE8857011B440ACD9B2F3E30CF8B
	486171C3E265A615448C1228B485BF6BF683F95C962E852CEC01599A42167682
	2C5D0A59D803B2742885FF022F6E90C4C211E806493492403F48A27282474012
	6D08F483241278102491403F48A281043A41120D0CCBC697E3203B47363E02B2
	736463374862012FEF1BFCD3171C4575EE00722B0B983BCED9C0CBBB067BAFAC
	DDC1B758F9DCB5F073823AF7FBF3A50B3892D80314899F11D4B917A806066EA5
	0328CBC4FEA0CE87413666E70E60F148F4830492D8031421F128486020D10F12
	48E2515001493C06FEC7487483049288E800F1A864692708C6BD3841021B9606
	6CF7585AFDE035C5BF59DC20DE2D9CBCA0544687D903AAE85D194F070F88B12A
	1449DA0E727EBAA2883D0DDA02C2B1250A8536299F5B41B5EBD8297C8ECCBA0F
	C26D9E61990912B0CA49FD967916591C70C53517061607AC70BB67C84C76E36A
	2CA0DA63FB85CAC71FCAC71F2F669C86A254ACB6C2F609D1DEB37E868EE958C8
	7C157EAC426D2E46DB2AD45BB04954AD17EA3D189A40AD167AA77B61EF337CDB
	5BFE0B60107DDA7A42D25B0000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="13" length_in_bytes="198" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000900000
	001F0403000000FA8E59860000000F504C5445FFFFFF000000000000AAAAAA00
	0000F1FD262E0000000374524E530000E6B31F8393000000594944415448C763
	3226040C1880801943041D303150090C6F831805918000481053E43F86088B0B
	1270A0B2D7FE9E85830B10513244A81BD8EFE1E00354987491D104396AD0A841
	A3068D1A44178398512A2806F244A8E62200A7996CA294F7427C000000004945
	4E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="14" length_in_bytes="480" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000900000
	003E0803000000F38E621400000018504C5445FFFFFF00000000000000000000
	0000000000000000AAAAAAEA66879E0000000674524E53000001FE02FD987AD2
	0D000001674944415478DAED986D6BC3300C84256753FFFF3FDEEC965D12DB1C
	A642EE40F729A0CBE9B12CE88B3CDE975479791228817C806CAA56261EE43878
	3E16488702D0DC736D264399F15E1F0F34096A65E259061A7A12288112288112
	E86689045202041E1F207E7AE281230C88F4024F0010590F18228166BDC01301
	C4F715F50820BEAFA84700F17D453D10C8D8BEA21E00A4666C5F2FF5909F41B4
	978402F15E7AD2D939D582E76D25500239CAA6F2F4402AA514B5A6AFFA28BA15
	48E50973FCEA09253722F28F4413F9BE4C723A9ECA5221BEEB0388A281301F7D
	3D4A85EA88C8E71407E239D08B074E6D442A9B8054C073262AA29B26A4C71F0F
	880E8C281CC8EA346E6A23DA0584015D46B40D48D1FA24DC591010B931DC5938
	106EACBFB35D132A634F02F19CE5651C5BCC338707B1A379E6FC7F20239376C8
	E141E468AE39EB41460EE694C383F05A4C0E0FC28B01393C08B2263CB9E7A0DE
	8B3BFD73D683BA4379E7FC004E854E95BDCD8AC20000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="15" length_in_bytes="1368" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000001EA0000
	00F004030000003D793A400000000F504C5445FFFFFF00000000000000000000
	0000513B6AF00000000474524E53000001FEF08D88C0000004EA49444154785E
	EDDB616EDC461084D1D9A00F20093E80912B38076821DFFDCF9444763C9066C5
	32D89309B9ACFA230B5B20FBCD12EB35E06E0F15C7719C604C1EA962F5AC4A8B
	F130230F54B17A56C56AABADB6DA6AABADB6DA6AABADB6DA6AABADB6DA6AABE1
	226AAB03F282EA8C8BA8AD26830BAA5BBB86DAEAA035F272EAECC5EBA8F947CD
	D5D46FE02BA8ADE6BB3A2FA6CEDE9CAFB61A0050955E00E06E85AE78AAA8D952
	C348DAACDCDAEDCF3F3E5193424D6A356CDCE8E3A97CBC4AE76EA95B40B6EDC4
	FB3B7DF9467E5AA46D06682A3F21776E141F4E851DEA7154A979FAFBFC79FD2A
	26D6247DBB7EA38D53A1ED0EA02BF4E37DF92A9F0B59D01331DC489C8ACAFEA7
	FCCB375E7F6F3731B126A904ADDF489C4A858DAEBCB6783BDEA7D6CA6C9DDFFA
	8DC4A9EC0F90AAF2FAFC8597AFB7FAA313525D3D955E29BFDDB7E7977EBC927D
	9268767BEA67B79D23A9EB6FD1EDF959B8CF970034FBB93D5A34BB3D223B9095
	DB24B5E3388EE3388E3716ADF62EC07F47B2DA6A0EAFB6DA6AABADB6DA6AABAD
	B6DA6AABADB69A73A937883DBA82AEB40754E715D5716CB588AC586D35575437
	ABC5BAC369D454D5DC2306D97A823C963AAAEAA09D509DC54F33F29E1A683DC0
	B1D464F15B0AEDAEBAF1AE732C75D06AEA38A53A8B15F29E1A1ABD173438929A
	5DEA8E8576579D6FBDCE897B6AFECD67A4FEE28FF258E917F97575B0F3EC7853
	04E489D4F5276658AB1BD47D0CBAFA084F78B04BDDD95B8B27BCFB98FF749190
	DC5C47CCE1577195D1F8A103347D155139911ABE0BC5C128F5C9A2C7FE713079
	B11594C2FBF96807E3D457001DC7711CC7711CC7711CC7F19EA6D5DEDDFB1F49
	565B6DB5D5565B6DB5D5565B6D354721912BD51C454DAE53C771D4703D752470
	41758B75EA9CB2844256AF12F4C269D4F5AB5C549DEBD44C51C70475AC54B729
	EA5CA546AB99A5669F3A28EEEE212611959A1AA5E6333525754393F6A803AD6E
	90FBCE2E80B9EA40573489D46AD8BD484F4049BDEBE358ABF53041EE7E62C800
	A11E64C5778919EA20F77F0D886C01422D3636C67975A5FE45915650D35A8050
	F782FC1C45574AEA8EAE5C85618EA112B9C11E568875252549A9035A4D9DB212
	D90791E3E80A6A5E4D82A6D5E40649AAB7C8A342AB73FB2D409340DF26D854A3
	87DD7691F3D400A420414A35908224D5294C22817EF0FAB0EA2EE84A008A2439
	91C2A4C2F0E7D2FAA4AEF44E7DC3523FE2BA1165B5AE80ACD4D521D591A27CC2
	0479417503A56678D8AFC006D13C63025421FB4FB9A779964A406E9A22FB8FC7
	495C74FD1AE0C1898EE3388EE3388EE3784F736CB69EF595F5EAE1C5E5159DFA
	2EC0287AAB77D3F2CA7A75FC9474D3EACA7A35BD06BDBAB6B25E3DF09657D6AB
	61787D4565B15AFFAF88E595F56A727843D657D6AB47E2EACA7A75201A2B2AEB
	D529000B2AEBD588477E4965BDBA09D2BCCAB1D5EB2A3BD4E4047530A79285AB
	AC52D72B85592EABB6DA6AABADB69A03A959A54E2A8B8FF54A7D963D6A282D3E
	D62BF55976048EF3EF06909569EAAC2C3ED62BF5597604D08B8FEF2B444E5D9F
	ACCF52FF3823558549BB913975169DAD3D24542560EAFA647D96FA231EA80A30
	717DB23ECBAE0420171FC9E197FAFAE4B45974A4497C830B60EAFA647D96DDEE
	5FFE0B0E98B83E599FA51250EE008662757DB23E4B2901B20303ADB83E599F65
	79EAEB93274D7D7DF2FCF1FAA4D727BD3EE9F5C9F3C6EB935E9FDC1BC7711CC7
	719CBF0052E71FD6A13CDD7D0000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="16" length_in_bytes="117" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D494844520000000B0000
	005B0806000000A5227FD1000000324944415448C7EDCAA10100200C03B0DEBF
	53F624606651E022E292EE5E3755951159966559966559966559969FE623E35F
	DEF6213CED8A3DA68B0000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="17" length_in_bytes="145" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000180000
	00110203000000BA1684A300000009504C5445FF0000000000FFFFFFCA92C399
	0000000174524E530040E6D8660000002C49444154085B6360C000A921302A34
	34004465AD9A80970A85509201C894288462648051A1A1818282303B007AB619
	713F5E8EB50000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="18" length_in_bytes="139" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000180000
	00110203000000BA1684A300000009504C5445FF0000FFFFFF0000003A898F3A
	0000000174524E530040E6D8660000002649444154085B6360C000B356C0A8D0
	D00062A855104A6D0132A505A198181054909212CC0E009DCE18799923DFD000
	00000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="19" length_in_bytes="156" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000180000
	00110203000000BA1684A300000009504C5445FF0000000000FFFFFFCA92C399
	0000000174524E530040E6D8660000003749444154085B6360C000A92130CA91
	450044B10838802801471C82A11041C900B0209002098A0680051919C082404A
	C051505010660700A34D0B0D908D581D0000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="20" length_in_bytes="137" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D494844520000000D0000
	001108030000003121D6AE00000009504C5445FF0000000000FFFFFFCA92C399
	0000000174524E530040E6D866000000244944415408D76360C00318910088C7
	C40445201E9CC304E621F803A912E24E6457A300006D9300F825F7C870000000
	0049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="21" length_in_bytes="142" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D494844520000000C0000
	001102030000009453A53100000009504C5445FF0000000000FFFFFFCA92C399
	0000000174524E530040E6D866000000294944415408D76360000151209684D2
	4898353484816DD512380DC769290C9233A73084860680740300E7DA0A3F5360
	87700000000049454E44AE426082
	]]>
</GDLPict>

<Ancestry SectVersion="1" SectionFlags="0" SubIdent="0" Template="false">
	<MainGUID>F938E33A-329D-4A36-BE3E-85E126820996</MainGUID>
	<MainGUID>103E8D2C-8230-42E1-9597-46F84CCE28C0</MainGUID>
	<MainGUID>9BCE6139-F733-4E13-B439-AAF1AF232B89</MainGUID>
	<MainGUID>30E58E66-1DA9-4D20-9341-700170100E12</MainGUID>
	<MainGUID>D39DF9D9-2191-4C4D-B004-2E8C1B298D7C</MainGUID>
	<MainGUID>0D6515ED-B372-41C6-8291-C527CE94BA43</MainGUID>
</Ancestry>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_PR SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_PR>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_UI SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
! ==============================================================================
! Shower Cabin
! ==============================================================================
ui_current_page gs_ui_current_page



dim gs_ui_cust_tab_txt[4]
	gs_ui_cust_tab_txt[1] = `Тип Кабины и Размеры`
	gs_ui_cust_tab_txt[2] = `Детали Кабины и Аксессуары`
	gs_ui_cust_tab_txt[3] = `2D-отображение`
	gs_ui_cust_tab_txt[4] = `3D-отображение и Покрытия`

dim gs_ui_cust_tab_ico[4]
	gs_ui_cust_tab_ico[1] = "uiTab_Dimension_flat(1)"
	gs_ui_cust_tab_ico[2] = "uiTab_Knob_flat(1)"
	gs_ui_cust_tab_ico[3] = "uiTab_2DRepr_flat(1)"
	gs_ui_cust_tab_ico[4] = "uiTab_3DRepr_flat(1)"

call "ui_plumbingfixtures" parameters all 	iObjectType 	= 23,
										gs_ui_cust_tab_txt 	= gs_ui_cust_tab_txt,
										gs_ui_cust_tab_ico	= gs_ui_cust_tab_ico,
										lock_conn_param		= (NOT(ConStatus_1) AND NOT(ConStatus_2) AND NOT(ConStatus_3))

iPageIDRoot 			=-1
iPageIDDimension		= 1
iPageIDAccessories		= 2
iPageIDAppearance		= 3
iPageIDAttributes		= 4

pageStartY = 5

! ==============================================================================
!UI_PAGES
! ==============================================================================

	UI_PAGE iPageIDDimension, iPageIDRoot, gs_ui_cust_tab_txt[1], "uiTab_Dimension_flat(1)"
		gosub "dimensionPage"

	UI_PAGE iPageIDAccessories, iPageIDRoot, gs_ui_cust_tab_txt[2], "uiTab_Knob_flat(1)"
		gosub "accessoriesPage"

	UI_PAGE iPageIDAppearance, iPageIDRoot, gs_ui_cust_tab_txt[3], "uiTab_2DRepr_flat(1)"
		gosub "appearancePage"

	UI_PAGE iPageIDAttributes, iPageIDRoot, gs_ui_cust_tab_txt[4], "uiTab_3DRepr_flat(1)"
		gosub "attributesPage"

! ==============================================================================
END
! ==============================================================================


! ==============================================================================
!SUBROUTINES
! ==============================================================================

! ------------------------------------------------------------------------------
"dimensionPage":
! ------------------------------------------------------------------------------

ui_separator 185, pageStartY + 9, 185, 252

x1 = 15
y1  = pageStartY + 7
dy = 21
textX1 = 80
cell_w = 36
cell_h = 31

ui_style 0, 0
ui_outfield `Тип Кабины`, x1, y1, 160, 18
y1 = y1 + dy
ui_infield{3} "cabinType", x1, y1, 164, cell_h + 10,
	4, 13, 4, 1,
	cell_w, cell_h, cell_w, cell_h,
	1,	`Ниша`, `Ниша`,
	2, 	`Угол`, `Угол`,
	3,	`Полуостров`, `Полуостров`,
	4,  `Отдельностоящая`, `Отдельностоящая`

y1 = y1 + cell_h + 10 + 2
ui_outfield `Форма Кабины`, x1, y1, 160, 18
y1 = y1 + dy
if iCabinType = CABINTYPE_ALCOVE then
	ui_infield{3} "cabinForm", x1, y1, (cell_w + 5), cell_h + 10,
		4, 14, 8, 2,
		cell_w, cell_h, cell_w, cell_h,
		1, `Квадратная Ниша`, `Квадратная Ниша`
endif
if iCabinType = CABINTYPE_CORNER then
	ui_infield{3} "cabinForm", x1, y1, (cell_w + 5) * 3, cell_h + 10,
		4, 14, 8, 2,
		cell_w, cell_h, cell_w, cell_h,
		2, `Квадратный Угол`, `Квадратный Угол`,
		3, `Скругленный Угол`, `Скругленный Угол`,
		4, `Скошенный Угол`, `Скошенный Угол`
endif
if iCabinType = CABINTYPE_PENINSULAR then
	ui_infield{3} "cabinForm", x1, y1, (cell_w + 5) * 2, cell_h + 10,
		4, 14, 8, 2,
		cell_w, cell_h, cell_w, cell_h,
		5, `Квадратный Полуостров`, `Квадратный Полуостров`,
		6, `Скругленный Полуостров`, `Скругленный Полуостров`
endif
if iCabinType = CABINTYPE_FREESTANDING then
	ui_infield{3} "cabinForm", x1, y1, (cell_w + 5) * 2, cell_h + 10,
		4, 14, 8, 2,
		cell_w, cell_h, cell_w, cell_h,
		7, `Квадрат`, `Квадрат`,
		8, `Круглые`, `Круглые`
endif

y1 = y1 + cell_h + 10 + 2
ui_outfield `Тип Двери`, x1, y1, 160, 18
y1 = y1 + dy
cell_w = 70
cell_h = 60
if iCabinForm = CABINFORM_SQUAREDALCOVE then
	ui_infield{3} "doorType", x1, y1, 164, cell_h + 10,
		2, 15, 28, 4,
		cell_w, cell_h, cell_w, cell_h,
		1, `Одностворчатая Распашная`, `Одностворчатая Распашная`,
		2, `Двустворчатая Распашная`, `Двустворчатая Распашная`,
		3, `Одностворчатая с Боковой Панелью`, `Одностворчатая с Боковой Панелью`,
		4, `Одностворчатая с Двумя Боковыми Панелями`, `Одностворчатая с Двумя Боковыми Панелями`,
		5, `Двустворчатая с Боковой Панелью`, `Двустворчатая с Боковой Панелью`,
		6, `Двустворчатая с Двумя Боковыми Панелями`, `Двустворчатая с Двумя Боковыми Панелями`,
		7, `Складывающаяся`, `Складывающаяся`,
		8, `Двустворчатая Складывающаяся`, `Двустворчатая Складывающаяся`,
		9, `Раздвижная`, `Раздвижная`,
		10, `Двустворчатая Раздвижная`, `Двустворчатая Раздвижная`
endif
if iCabinForm = CABINFORM_SQUAREDCORNER | iCabinForm = CABINFORM_SQUAREDPENINSULAR | iCabinForm = CABINFORM_SQUARE then
	ui_infield{3} "doorType", x1, y1, 164, cell_h + 10,
		2, 15, 28, 4,
		cell_w, cell_h, cell_w, cell_h,
		1, `Одностворчатая Распашная`, `Одностворчатая Распашная`,
		2, `Двустворчатая Распашная`, `Двустворчатая Распашная`,
		3, `Одностворчатая с Боковой Панелью`, `Одностворчатая с Боковой Панелью`,
		4, `Одностворчатая с Двумя Боковыми Панелями`, `Одностворчатая с Двумя Боковыми Панелями`,
		5, `Двустворчатая с Боковой Панелью`, `Двустворчатая с Боковой Панелью`,
		6, `Двустворчатая с Двумя Боковыми Панелями`, `Двустворчатая с Двумя Боковыми Панелями`,
		7, `Складывающаяся`, `Складывающаяся`,
		8, `Двустворчатая Складывающаяся`, `Двустворчатая Складывающаяся`,
		9, `Раздвижная`, `Раздвижная`,
		10, `Двустворчатая Раздвижная`, `Двустворчатая Раздвижная`,
		11, `Раздвижная Угловая`, `Раздвижная Угловая`
endif
if iCabinForm = CABINFORM_ROUNDEDCORNER then
	ui_infield{3} "doorType", x1, y1, 164, cell_h + 10,
		2, 15, 28, 4,
		cell_w, cell_h, cell_w, cell_h,
		12, `Одностворчатая Распашная`, `Одностворчатая Распашная`,
		13, `Двустворчатая Распашная`, `Двустворчатая Распашная`,
		14, `Раздвижная`, `Раздвижная`,
		15, `Двустворчатая Раздвижная`, `Двустворчатая Раздвижная`
endif
if iCabinForm = CABINFORM_CHAMFERCORNER then
	ui_infield{3} "doorType", x1, y1, 164, cell_h + 10,
		2, 15, 28, 4,
		cell_w, cell_h, cell_w, cell_h,
		16, `Одностворчатая Распашная`, `Одностворчатая Распашная`,
		17, `Двустворчатая Распашная`, `Двустворчатая Распашная`,
		18, `Складывающаяся`, `Складывающаяся`,
		19, `Двустворчатая Складывающаяся`, `Двустворчатая Складывающаяся`
endif
if iCabinForm = CABINFORM_ROUNDEDPENINSULAR then
	ui_infield{3} "doorType", x1, y1, 164, cell_h + 10,
		2, 15, 28, 4,
		cell_w, cell_h, cell_w, cell_h,
		20, `Одностворчатая Распашная`, `Одностворчатая Распашная`,
		21, `Двустворчатая Распашная`, `Двустворчатая Распашная`,
		22, `Раздвижная`, `Раздвижная`,
		23, `Двустворчатая Раздвижная`, `Двустворчатая Раздвижная`
endif
if iCabinForm = CABINFORM_ROUND then
	ui_infield{3} "doorType", x1, y1, 164, cell_h + 10,
		2, 15, 28, 4,
		cell_w, cell_h, cell_w, cell_h,
		24, `Одностворчатая Распашная`, `Одностворчатая Распашная`,
		25, `Двустворчатая Распашная`, `Двустворчатая Распашная`,
		26, `Раздвижная`, `Раздвижная`,
		27, `Двустворчатая Раздвижная`, `Двустворчатая Раздвижная`
endif

x2 = 200
y2  = pageStartY + 7
dy = 24
textX2 = 100
ui_outfield `Размеры Кабины`, x2, y2, textX2, 18
ui_infield{3} "cabinSize", x2 + textX2 + 2, y2, 200 - textX2, 20,
				8, "",
				7,
				1, 20, 20, 20, 20,
				1, st_cabinSize[1], st_cabinSize[1],
				2, st_cabinSize[2], st_cabinSize[2],
				3, st_cabinSize[3], st_cabinSize[3],
				4, st_cabinSize[4], st_cabinSize[4],
				5, st_cabinSize[5], st_cabinSize[5],
				6, st_cabinSize[6], st_cabinSize[6],
				7, st_cabinSize[7], st_cabinSize[7]
y2 = y2 + dy
ui_outfield `Отметка Верха`, x2, y2, textX2, 18
ui_infield "ZZYZX", x2 + textX2 + 2, y2, 200 - textX2, 20
y2 = y2 + dy
ui_separator 190, y2, 440, y2

xpict = 275
ypict = pageStartY + 105
xDimText = 60
ui_infield "A", xpict + 10, ypict - 44, xDimText, 20 ui_tooltip `Ширина Кабины`
ui_infield "B", xpict - 25 - xDimText, ypict + 30, xDimText, 20 ui_tooltip `Глубина Кабины`
if iCabinType <> CABINTYPE_FREESTANDING then
	ui_pict 1, xpict, ypict - 22, 80, 22, 1		! Shower_Cabin_dimH_wall1.png
else
	ui_pict 2, xpict, ypict - 22, 80, 22, 1		! Shower_Cabin_dimH_wall0.png
endif
if iCabinType = CABINTYPE_ALCOVE | iCabinType = CABINTYPE_CORNER then
	ui_pict 3, xpict - 22, ypict - 20, 22, 100, 1		! Shower_Cabin_dimV_wall1.png
else
	ui_pict 4, xpict - 22, ypict - 20, 22, 100, 1		! Shower_Cabin_dimV_wall0.png
endif
if iCabinForm = CABINFORM_SQUAREDALCOVE | iCabinForm = CABINFORM_SQUAREDCORNER | iCabinForm = CABINFORM_SQUAREDPENINSULAR | iCabinForm = CABINFORM_SQUARE then
	if iCabinForm = CABINFORM_SQUAREDALCOVE then
		ui_pict 16, xpict + 80, ypict - 11, 11, 91, 1		! Shower_Cabin_wallV.png
	endif
	if iDoorType = DOORTYPE_SIMPLELEAF | iDoorType = DOORTYPE_DOUBLELEAF | iDoorType = DOORTYPE_FOLDING | iDoorType = DOORTYPE_DOUBLEFOLDING then
		ui_pict 5, xpict, ypict, 80, 80, 1		! Shower_Cabin_f1_sp0.png
	endif
	if iDoorType = DOORTYPE_SIMPLELEAF_SIDEPANEL1 | iDoorType = DOORTYPE_DOUBLELEAF_SIDEPANEL1 | iDoorType = DOORTYPE_SLIDING then
		ui_pict 6, xpict, ypict, 80, 95, 1		! Shower_Cabin_f1_sp1.png
		ui_infield "sidePanelWidthL", xpict - 69, ypict + 83, xDimText, 20 ui_tooltip `Ширина Боковой Панели 1`
		ui_infield "doorWidth", xpict + 30, ypict + 100, xDimText, 20 ui_tooltip `Ширина Двери`
	endif
	if iDoorType = DOORTYPE_SIMPLELEAF_SIDEPANEL2 | iDoorType = DOORTYPE_DOUBLELEAF_SIDEPANEL2 | iDoorType = DOORTYPE_DOUBLESLIDING then
		ui_pict 7, xpict, ypict, 80, 95, 1		! Shower_Cabin_f1_sp2.png
		ui_infield "doorWidth", xpict + 10, ypict + 100, xDimText, 20 ui_tooltip `Ширина Двери`
		ui_infield "sidePanelWidthL", xpict - 69, ypict + 83, xDimText, 20 ui_tooltip `Ширина Боковой Панели 1`
		ui_infield "sidePanelWidthR", xpict + 84, ypict + 83, xDimText, 20 ui_tooltip `Ширина Боковой Панели 2`
	endif
	if iDoorType = DOORTYPE_CORNERSLIDING then
		ui_pict 8, xpict, ypict, 100, 100, 1		! Shower_Cabin_f1_sp3.png
		ui_infield "doorWidth", xpict + 103, ypict + 70, xDimText, 20 ui_tooltip `Ширина Двери`
		ui_infield "sidePanelWidthL", xpict, ypict + 103, xDimText, 20 ui_tooltip `Ширина Боковой Панели 1`
		ui_infield "sidePanelWidthR", xpict + 103, ypict + 10, xDimText, 20 ui_tooltip `Ширина Боковой Панели 2`
	endif
endif
if iCabinForm = CABINFORM_ROUNDEDCORNER then
	ui_pict 9, xpict, ypict, 95, 95, 1				! Shower_Cabin_f3.png
	ui_infield "doorWidth", xpict + 98, ypict + 70, xDimText, 20 ui_tooltip `Ширина Двери`
	ui_infield "sidePanelWidthL", xpict, ypict + 98, xDimText, 20 ui_tooltip `Ширина Боковой Панели 1`
	ui_infield "sidePanelWidthR", xpict + 98, ypict + 10, xDimText, 20 ui_tooltip `Ширина Боковой Панели 2`
endif
if iCabinForm = CABINFORM_CHAMFERCORNER then
	ui_pict 10, xpict, ypict, 95, 95, 1				! Shower_Cabin_f4.png
	ui_infield "doorWidth", xpict + 98, ypict + 70, xDimText, 20 ui_tooltip `Ширина Двери`
	ui_infield "sidePanelWidthL", xpict, ypict + 98, xDimText, 20 ui_tooltip `Ширина Боковой Панели 1`
	ui_infield "sidePanelWidthR", xpict + 98, ypict + 10, xDimText, 20 ui_tooltip `Ширина Боковой Панели 2`
endif
if iCabinForm = CABINFORM_ROUNDEDPENINSULAR then
	ui_pict 11, xpict, ypict, 80, 95, 1				! Shower_Cabin_f6.png
	ui_infield "doorWidth", xpict + 10, ypict + 100, xDimText, 20 ui_tooltip `Ширина Двери`
endif
if iCabinForm = CABINFORM_ROUND then
	ui_pict 12, xpict, ypict, 80, 95, 1				! Shower_Cabin_f8.png
	ui_infield "doorWidth", xpict + 10, ypict + 100, xDimText, 20 ui_tooltip `Ширина Двери`
endif


return

! ------------------------------------------------------------------------------
"accessoriesPage":
! ------------------------------------------------------------------------------

ui_separator 218, pageStartY + 9, 218, pageStartY + 217

x1 = 15
y1  = pageStartY + 7
dy = 22
textX1 = 80
cell_w = 75		! width of cell
cell_h = 100	! height of cell

ui_style 0, 1
ui_outfield `Аксессуары`, x1, y1, 180, 18
ui_style 0, 0
y1 = y1 + dy
ui_outfield `Тип Душа`, x1, y1, textX1, 18
ui_infield{3} "gs_tap_type", x1 + textX1 + 10, y1, 105, cell_h,
	2, "ui_taptypes_2(4)", 35, 7,
	cell_w, cell_h, 60, 90,
	24, "", `Настенный Термостат`,
	25, "", `Труба`,
	26, "", `Панель`,
	27, "", `Верхняя Часть`,
	34, "", `Нет`

y1 = y1 + cell_h + 5
cell_w = 54
cell_h = 72
ui_outfield `Ручка`, x1, y1, textX1, 18
ui_infield{3} "handleType", x1 + textX1 + 10, y1, 105, cell_h,
	2, "Knob_Types_N_Small(1)", 12, 4,
	cell_w - 6, cell_h - 8, 38, 50,
	3,	`Стиль 1`, `Стиль 1`,
	7, 	`Стиль 2`, `Стиль 2`,
	1,	`Стиль 3`, `Стиль 3`,
	2,  `Стиль 4`, `Стиль 4`,
	4, 	`Стиль 5`, `Стиль 5`,
	5, 	`Стиль 6`, `Стиль 6`,
	8, 	`Стиль 7`, `Стиль 7`,
	9, 	`Нет`, `Нет`

y1 = y1 + cell_h + 5
ui_infield{3} "bGrabBar", x1, y1, 180, 18,
				7, "",
				2,
				1, 20, 20, 20, 20,
				0, `Поручень`, 0,
				1, `Поручень`, 1

x2 = 233
y2 = pageStartY + 7
textX2 = 110
textX3 = 85

ui_style 0, 1
ui_outfield `Детали Кабины`, x2, y2, 180, 18
ui_style 0, 0

y2 = y2 + dy
ui_infield{3} "bTray", x2, y2, 180, 18,
				7, "",
				2,
				1, 20, 20, 20, 20,
				0, `Поддон`, 0,
				1, `Поддон`, 1

y2 = y2 + dy
trayThkMask = 0
If not(bTray) then trayThkMask = 4 else trayThkMast = 0
ui_outfield `Толщина Поддона`, x2, y2, textX2, 18, trayThkMask
ui_infield "trayThk", x2 + textX2 + 10, y2, 190 - textX2, 18
y2 = y2 + dy
panelTypeMask = 0
if iDoorType > DOORTYPE_DOUBLELEAF_SIDEPANEL2 then panelTypeMask = 1
ui_outfield `Тип Панели`, x2, y2, textX3, 18, 4 * panelTypeMask
ui_infield{3} "panelType", x2 + textX3 + 5, y2, 195 - textX3, 20,
				8, "",
				2,
				1, 20, 20, 20, 20,
				1, `Обрамленная Панель`, `Обрамленная Панель`,
				2, `Полностью Стеклянная`, `Полностью Стеклянная`
y2 = y2 + dy
ui_outfield `Ширина Профиля Кабины`, x2, y2, textX2, 18, (iPanelType = 2) * 4
ui_infield "cabinFrameWidth", x2 + textX2 + 10, y2, 190 - textX2, 18
y2 = y2 + dy
ui_outfield `Ширина Обвязки`, x2, y2, textX2, 18, (iPanelType = 2) * 4
ui_infield "doorFrameWidth", x2 + textX2 + 10, y2, 190 - textX2, 18
y2 = y2 + dy
ui_infield{3} "bBracket", x2, y2, 180, 18,
				7, "",
				2,
				1, 20, 20, 20, 20,
				0, `Крепление к Стене`, 0,
				1, `Крепление к Стене`, 1 
y2 = y2 + dy
ui_infield{3} "bCeiling", x2, y2, 180, 18,
				7, "",
				2,
				1, 20, 20, 20, 20,
				0, `Потолок Кабины`, 0,
				1, `Потолок Кабины`, 1
y2 = y2 + dy
ui_infield{3} "bMirrorDoor", x2, y2, 180, 18,
				7, "",
				2,
				1, 20, 20, 20, 20,
				0, `Зеркальная Дверь`, 0,
				1, `Зеркальная Дверь`, 1


return

! ------------------------------------------------------------------------------
"appearancePage":
! ------------------------------------------------------------------------------

x1 = 1
x2 = x1 + 30
x3 = x2 + 34
x4 = x3 + 49
x5 = x4 + 61
x6 = x5 + 38
x7 = x6 + 9
x8 = x7 + 7
x9 = x8 + 17
x10= x9 + 196

y1 = pageStartY + 19
y2 = y1 + 25
y3 = y2 + 48
y4 = y3 + 25
y5 = y4 + 16
y6 = y5 + 35
y7 = y6 + 28
y8 = y7 + 35

ui_separator x7, y1, x7, y8

! --- Left side ---
ui_style 0,1
ui_outfield `2D-отображение`, x1, y1, x6, 15		! --- Plan Symbol ---
ui_style 0, 0

ui_outfield `2D-детализация`, x1, y2, x4-x1-1, 15

dim stDetail2d[]

call "2dDetailLevel" parameters	all,
		returned_parameters stDetail2d

ui_infield{3} "gs_detlevel_2D_m",  x4, y2-4, x6-x4, 19,
		8, "",
		2,
		1, -x3-1, 20, -x3-1, 20,
		"", stDetail2d[1], 0,
		"", stDetail2d[2], 3,
		"", stDetail2d[3], 2,
		"", stDetail2d[4], 1

ui_pict 18, x1, y3-4, 24, 17, 1		! ui_cont_pen_MEP.png
ui_outfield `Перо Контура`, x2, y3, x5-x2-1, 15, 0	! Contour Pen
ui_infield "gs_cont_pen",	 x5, y3-6, x6-x5, 23


ui_pict 20, x1, y4-4, 13, 17, 1		! ui_fill_type_MEP.png


ui_outfield `Тип Штриховки`, x2, y4, x6-x2, 15, 0			! --- Fill Type ---
ui_infield "gs_fill_type", x3,y5, x6-x3, 25


ui_pict 19, x1, y6-4, 24,17, 1		! ui_fill_pen_MEP.png

ui_outfield `Перо Штриховки`, x2, y6, x5-x2-1, 15, 0	! Fill Pen
ui_infield "gs_fill_pen", x5, y6-6, x6-x5, 23


ui_pict 17, x1, y7-4, 24,17, 1		! ui_back_pen_MEP.png

ui_outfield `Перо Фона Штриховки`, x2, y7, x5-x2-1, 18, 0	! --- Background Pen ---
ui_infield "gs_back_pen",	  x5, y7-6, x6-x5, 23


! --- Right side ---

ui_style 0, 1
ui_outfield `Детальный 2D-символ`, x8, y1, x10-x9, 15

ui_style 0, 0
ui_infield{3} "bOpenDoor2D",  x8, y2-2, x10-x9, 18,
		7, "",
		0,
		0, 0, 0, 0, 0,
		"", `Открывание Двери`, 0,
		"", `Открывание Двери`, 1

ui_infield{3} "bGrabBar2D",  x8, y2+(y3-2-y2-2)/2, x10-x9, 18,
		7, "",
		0,
		0, 0, 0, 0, 0,
		"", `Показать Поручень`, 0,
		"", `Показать Поручень`, 1

ui_infield{3} "bShowShowerKit",  x8, y3-2, x10-x9, 18,
		7, "",
		0,
		0, 0, 0, 0, 0,
		"", `Показать Душевой Комплект`, 0,
		"", `Показать Душевой Комплект`, 1


return

! ------------------------------------------------------------------------------
"attributesPage":
! ------------------------------------------------------------------------------

x1 = 2
x2 = x1 + 131
x3 = x2 + 39
x4 = x3 + 58
x5 = x4 + 134
xSeparatorEnd = 444
xInfield = 81
xMaterialName = 14

y1 = pageStartY - 1
y2 = y1 + 24
y3 = y2 + 24
y4 = y3 + 18
y5 = y4 + 9
y6 = y5 + 20
y7 = y6 + 24
y8 = y7 + 24
y9 = y8 + 24
y10= y9 + 24
y11= y10+ 24

ui_style 0, 1
ui_outfield `3D-отображение`, x1, y1, x6-1		! --- 3D View ---
ui_style 0, 0

ui_outfield `3D-детализация`, x1, y2, x2-x1-1, 15
ui_infield{3} "gs_detlevel_3D_m", x2, y2-4, xInfield, 20,
	8, "",
	2,
	1, xInfield-1, 20, xInfield-1, 20,
	"", `Детальный`, 2,
	"", `Простой`, 1,
	"", `Упрощенный`, 3,
	"", `Откл.`, 0

ui_outfield	`Аппроксимация`,	x1,		y3,	x2-x1-1,		15
ui_infield	"gs_resol",		x2,		y3-4,	xInfield,	18

ui_infield{3} "gs_shadow", 		x4, y2-3, xSeparatorEnd-x4, 20,			! --- Shadow ---
	7, "",
	2,
	1, 20, 20, 20, 20,
	0, `Отбрасывание Теней`, 0,
	1, `Отбрасывание Теней`, 1

ui_separator 0, y4, xSeparatorEnd, y4

ui_style 0, 1
ui_outfield `Покрытия`, x1, y5, x3-x1-1						! --- Surfaces ---

ui_style 0, 0
ui_pict 21, x1, y6-4, 12,17, 1		! ui_mat.png
ui_outfield `Поддон`, xMaterialName, y6, x3-x1, 0					! Tray
ui_infield "matTray", x3, y6-6, x5-x3, 23

ui_pict 21, x1, y7-4, 12,17, 1		! ui_mat.png
ui_outfield `Остекление`, xMaterialName, y7, x3-x1-1, 0		! Cabin Glass
ui_infield "matGlass", x3, y7-6, x5-x3, 23

ui_pict 21, x1, y8-4, 12, 17, 1		! ui_mat.png
ui_outfield `Профили`, xMaterialName, y8, x3-x1-1, 0		! Cabin Frame
ui_infield "matFrame", x3, y8-6, x5-x3, 23

ui_pict 21, x1, y9-4, 12, 17, 1		! ui_mat.png
ui_outfield `Душевой Комплект`, xMaterialName, y9, x3-x1-1, 0			! Shower Kit
ui_infield "gs_tap_mat", x3, y9-6, x5-x3, 23

ui_pict 21, x1, y10-4, 12, 17, 1		! ui_mat.png
ui_outfield `Ручка`, xMaterialName, y10, x3-x1-1, 0			! Handle
ui_infield "gs_knob_mat", x3, y10-6, x5-x3, 23

ui_pict 21, x1, y11-4, 12, 17, 1		! ui_mat.png
ui_outfield `Соединение`, xMaterialName, y11, x3-x1-1, 0		! Connection
ui_infield "gs_con_mat", x3, y11-6, x5-x3, 23

return

]]>
</Script_UI>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Comment SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[Душевая кабина с поддоном и душем. Редактируемый с помощью Конструктора MEP.]]>
</Comment>

<Keywords SectVersion="1" SectionFlags="0" SubIdent="0">
<![CDATA[Встроенный тип, тип кабины, тип двери, тип душа, тип ручки, поручень, минимальное пространство, санитария]]>
</Keywords>

<CalledMacros SectVersion="2" SectionFlags="0" SubIdent="0">
	<Macro>
		<MName><![CDATA["2dDetailLevel"]]></MName>
		<MainGUID>2FD16305-CA53-4505-BFA7-4E98A8BA9399</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["tapType_m"]]></MName>
		<MainGUID>D8F9E491-FD02-4664-8E12-E1E966386D6A</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["showerCabin_m"]]></MName>
		<MainGUID>F5860B5B-BC05-4931-89F2-1C95A57982C1</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["fa_minimalspace"]]></MName>
		<MainGUID>948022D5-BA0C-4407-8518-A3B5922DF84C</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["MEP_m_ConnectionsACL_4"]]></MName>
		<MainGUID>87FC6A3E-82E1-47CF-8EB0-A818B9EC7B2F</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["LibraryGlobals13"]]></MName>
		<MainGUID>9137124A-DDF2-4A06-A532-5FC0CE873258</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["ui_plumbingfixtures"]]></MName>
		<MainGUID>B1EBCD25-61F8-437B-AEFC-7B5816A6FB8B</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["FM_types"]]></MName>
		<MainGUID>2759D2DF-AA8E-44D1-AD1D-261581266B34</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["Onorm_Plumbing"]]></MName>
		<MainGUID>B3A84C42-4188-445A-BE9F-25905963F4BD</MainGUID>
	</Macro>
</CalledMacros>

<MigrationTable SectVersion="1" SectionFlags="0" SubIdent="0">
	<MigrationTableElement>
		<MainGUID>C7C2B9CF-14FF-48F9-BB0D-BA40BF3D8A54</MainGUID>
		<Version>19</Version>
		<Name><![CDATA[""]]></Name>
		<AutoMigration>true</AutoMigration>
	</MigrationTableElement>
</MigrationTable>

<Copyright SectVersion="1" SectionFlags="0" SubIdent="0">
	<Author>GRAPHISOFT</Author>
	<License>
		<Type>CC BY-ND</Type>
		<Version>3.0</Version>
	</License>
</Copyright>

</Symbol>
