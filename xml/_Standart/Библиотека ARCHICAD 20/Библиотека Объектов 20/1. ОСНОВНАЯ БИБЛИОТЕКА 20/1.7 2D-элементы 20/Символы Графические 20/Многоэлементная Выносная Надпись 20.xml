<?xml version="1.0" encoding="UTF-8"?>
<Symbol IsArchivable="false" IsPlaceable="true" MainGUID="769E92BB-6947-479A-B15F-DAB80924A5A3" MigrationValue="Normal" Owner="1196638531" Signature="776753997" Version="43">
<Ancestry SectVersion="1" SectionFlags="0" SubIdent="0" Template="false">
	<MainGUID>F938E33A-329D-4A36-BE3E-85E126820996</MainGUID>
	<MainGUID>B176ABF1-5813-478F-926B-28EE7C5DC1F7</MainGUID>
	<MainGUID>4FD10D67-2F29-4844-A65A-6597589B0CB5</MainGUID>
</Ancestry>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_2D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
PAPER_TO_MODEL = GLOB_SCALE / 1000

textBoxOffset			= textBoxOffsetPaper * PAPER_TO_MODEL

totalTextLength			= (textBoxLengthPaper - textBoxOffsetPaper * 2) * PAPER_TO_MODEL

totalTextHeight 		= totalTextHeightPaper 		* PAPER_TO_MODEL
textBoxHeight			= textBoxHeightPaper 		* PAPER_TO_MODEL

titleTextHeight			= titleTextHeightPaper 		* PAPER_TO_MODEL
labelTextHeight			= labelTextHeightPaper 		* PAPER_TO_MODEL

totalTitleTextHeight	= totalTitleTextHeightPaper * PAPER_TO_MODEL

bEnableArrowHead		= 0
if NOT(bHideArrowHead) or (bHideArrowHead and GLOB_SCALE < hideArrowHeadFrom) then
	bEnableArrowHead	= 1
endif

titleTextPos			= 0
if iTitleTextAlign = TEXT_ALIGN_CENTER	then titleTextPos = totalTextLength / 2
if iTitleTextAlign = TEXT_ALIGN_RIGHT	then titleTextPos = totalTextLength

labelTextPos			= 0
if iLabelTextAlign = TEXT_ALIGN_CENTER	then labelTextPos = totalTextLength / 2
if iLabelTextAlign = TEXT_ALIGN_RIGHT	then labelTextPos = totalTextLength

commonPointPosY			= commonPointPosYPaper			* PAPER_TO_MODEL

textBoxLength			= textBoxLengthPaper			* PAPER_TO_MODEL
headBoxLength			= headBoxLengthPaper			* PAPER_TO_MODEL
headBoxWidth			= headBoxWidthPaper				* PAPER_TO_MODEL
headBoxOffsetLeftRight	= headBoxOffsetLeftRightPaper	* PAPER_TO_MODEL
headBoxOffsetUpDown		= headBoxOffsetUpDownPaper		* PAPER_TO_MODEL
headShapeSidePointXPos	= headShapeSidePointXPosPaper	* PAPER_TO_MODEL

define fill "solidFillForMultiLabel" 255, 255, 255, 255, 255, 255, 255, 255, 1, 0, 0

unID = 1

! ==========================================================================
! Hotspots
! ==========================================================================

hotspot2	0,		0,			unID, textBoxPosX,  1 + 128	: unID = unID + 1
hotspot2   	-1,		0,			unID, textBoxPosX, 	3		: unID = unID + 1
hotspot2 	textBoxPosX,	0,	unID, textBoxPosX, 	2		: unID = unID + 1

add2 textBoxPosX, 0
	hotspot2	0,				0,	unID, textBoxLengthPaper_M,		1 + 1024 + 128, textBoxLengthPaper		: unID = unID + 1
	hotspot2   	-1,				0,	unID, textBoxLengthPaper_M, 	3 + 1024,		textBoxLengthPaper		: unID = unID + 1
	hotspot2 	textBoxLength,	0,	unID, textBoxLengthPaper_M, 	2 + 1024,		textBoxLengthPaper		: unID = unID + 1
del 1

! ==========================================================================
! Title, Label Texts
! ==========================================================================

angleViewRot = 0
rrr = REQUEST ("View_Rotangle", "", angleViewRot)
totalRotate = (SYMB_ROTANGLE + angleViewRot) MOD 360

if iTextOrientation = ORIENTATION_READABLE and (totalRotate > (90 + EPS) and totalRotate < (90 + 180 + EPS)) then
	add2 textBoxLength, - textBoxHeight
	rot2 180
endif

gosub "titletext"
gosub "labeltext"

if iTextOrientation = ORIENTATION_READABLE and (totalRotate > (90 + EPS) and totalRotate < (90 + 180 + EPS)) then del 2

! ==========================================================================
! Headshape
! ==========================================================================

if bShowLabelFrame then gosub "headshape"

! ==========================================================================
! Leaders, Line Connections
! ==========================================================================

if bEnablePointersOnSide1 then
	gosub "commonLineLeft"
	gosub "leadersLeft"
endif

if bEnablePointersOnSide2 then
	gosub "commonLineRight"
	gosub "leadersRight"
endif

if iLineConnType = LINECONNTYPE_UTEXT or iLineConnType = LINECONNTYPE_UTITLE then gosub "lineConnection"

!================================================================================
end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end
!================================================================================

"titletext":

	pen titleTextPen
	set style "titleTextStyle"

	add2 textBoxOffset + textBoxPosX + titleTextPos, -textBoxOffset
		for j = 1 to realTitleRowNum
			if titleTextRow[j] <> "" then
				paragraph "titleParagraph" iTitleTextAlign, 0, 0, 0, 1, 0
					pen titleTextPen
					set style "titleTextStyle"
					titleTextRow[j]
				endparagraph
				textblock "titleTextBlock" 0, iTitleTextAlign, 0, titleTextWidthFactor / 100, titleTextSpacingFactor / 100, 1, "titleParagraph"
				add2 0, -titleTextHeight * (j - 1) * titleTextLeading / 100
					richtext2 0, 0, "titleTextBlock"
				del 1
			endif
		next j
	del 1

return

"labeltext":

	pen labelTextPen
	set style "labelTextStyle"

	add2 0, -totalTitleTextHeight
		add2 textBoxOffset + textBoxPosX + labelTextPos, - textBoxOffset
			for j = 1 to realLabelRowNum
				if labelTextRow[j] <> "" then
					paragraph "labelParagraph" iLabelTextAlign, 0, 0, 0, 1, 0
						pen labelTextPen
						set style "labelTextStyle"
						labelTextRow[j]
					endparagraph
					textblock "labelTextBlock" 0, iLabelTextAlign, 0, labelTextWidthFactor / 100, labelTextSpacingFactor / 100, 1, "labelParagraph"
					add2 0, -labelTextHeight * (j - 1) * labelTextLeading / 100
						richtext2 0, 0, "labelTextBlock"
					del 1
				endif
			next j
		del 1
	del 1

return

"commonLineLeft":

	pen pointerPen
	line_type pointerLineType

	add2 0, commonPointPosY
		line2 totalCommonPointLeftPosX, 0, - headBoxOffsetLeftRight + textBoxPosX, 0

		add2 textBoxPosX, 0
			hotspot2	0,						0,	unID, commonPointLeftPosX,  1 + 128	: unID = unID + 1
			hotspot2   	-1,						0,	unID, commonPointLeftPosX, 	3		: unID = unID + 1
			hotspot2 	commonPointLeftPosX,	0,	unID, commonPointLeftPosX, 	2		: unID = unID + 1
		del 1
	del 1

return

"commonLineRight":

	pen pointerPen
	line_type pointerLineType

	add2 0, commonPointPosY
		line2 headBoxLength - headBoxOffsetLeftRight + textBoxPosX, 0, totalCommonPointRightPosX, 0

		add2 textBoxPosX, 0
			hotspot2	0,						0,	unID, commonPointRightPosX, 	1 + 128	: unID = unID + 1
			hotspot2   	-1,						0,	unID, commonPointRightPosX, 	3		: unID = unID + 1
			hotspot2 	commonPointRightPosX,	0,	unID, commonPointRightPosX, 	2		: unID = unID + 1
		del 1
	del 1

return

"leadersLeft":
	add2 commonPointLeftPosX + textBoxPosX, 0
	for i = 1 to iPointerNumSide1
		line_type pointerLineType
		pen pointerPen

		add2 0,commonPointPosY

		length_p1	= SQR(((leaderPointsLeftPosXEnd[i])^2)+((leaderPointsLeftPosYEnd[i])^2))
		length_n1	= 2 * length_p1
		midPointX	= leaderPointsLeftPosXStart[i] + leaderPointsLeftPosXEnd[i]
		midPointY	= leaderPointsLeftPosYStart[i] + leaderPointsLeftPosYEnd[i]

		if (ABS(leaderPointsLeftPosXEnd[i])<EPS & ABS(leaderPointsLeftPosYEnd[i])<EPS) then
			if (ABS(leaderPointsLeftPosXStart[i])<EPS & ABS(leaderPointsLeftPosYStart[i])<EPS) then
				angle1=0
			else
				length_p1	= SQR(((leaderPointsLeftPosXStart[i])^2)+((leaderPointsLeftPosYStart[i])^2))
				if (leaderPointsLeftPosXStart[i]) > 0 THEN
					angle1=ASN(((leaderPointsLeftPosYStart[i]))/length_p1)+180
				else
					angle1=-1*(ASN(((leaderPointsLeftPosYStart[i]))/length_p1))
				endif
			endif
		else
			if (leaderPointsLeftPosXEnd[i]) > 0 THEN
				angle1=ASN(((leaderPointsLeftPosYEnd[i]))/length_p1)
			else
				angle1=-1*(ASN(((leaderPointsLeftPosYEnd[i]))/length_p1))+180
			endif
		endif

		arrowHeadLength		= 0
		if bEnableArrowHead then
			add2 leaderPointsLeftPosXStart[i], leaderPointsLeftPosYStart[i]
			rot2 angle1
				gosub "arrowHead"
			del 2
		endif

		arrowHeadLengthXMod	= arrowHeadLength * COS(angle1)
		arrowHeadLengthYMod	= arrowHeadLength * SIN(angle1)

		if iPointerType = POINTER_STRAIGHT then
			LINE2 leaderPointsLeftPosXStart[i] + arrowHeadLengthXMod, leaderPointsLeftPosYStart[i] + arrowHeadLengthYMod, midPointX, midPointY
			LINE2 midPointX, midPointY, 0, 0
		else
			SPLINE2A 2,0,leaderPointsLeftPosXStart[i] + arrowHeadLengthXMod,leaderPointsLeftPosYStart[i] + arrowHeadLengthYMod,angle1,0,length_n1,
						0,0,0,length_n1,0
		endif

		!!! pointer
		HOTSPOT2 0,									leaderPointsLeftPosYStart[i],	unID,	leaderPointsLeftPosXStart[i],	1+128	: unID=unID+1
		HOTSPOT2 -1,								leaderPointsLeftPosYStart[i],	unID,	leaderPointsLeftPosXStart[i],	3		: unID=unID+1
		HOTSPOT2 leaderPointsLeftPosXStart[i],		leaderPointsLeftPosYStart[i],	unID,	leaderPointsLeftPosXStart[i],	2		: unID=unID+1

		HOTSPOT2 leaderPointsLeftPosXStart[i],		0,								unID,	leaderPointsLeftPosYStart[i],	1+128	: unID=unID+1
		HOTSPOT2 leaderPointsLeftPosXStart[i],		-1,								unID,	leaderPointsLeftPosYStart[i],	3		: unID=unID+1
		HOTSPOT2 leaderPointsLeftPosXStart[i],		leaderPointsLeftPosYStart[i],	unID,	leaderPointsLeftPosYStart[i],	2		: unID=unID+1

		!!! Tangent
		HOTSPOT2 leaderPointsLeftPosXStart[i],		midPointY,						unID, leaderPointsLeftPosXEnd[i],		1+128	: unID=unID+1
		HOTSPOT2 leaderPointsLeftPosXStart[i]-1,	midPointY,						unID, leaderPointsLeftPosXEnd[i],		3		: unID=unID+1
		HOTSPOT2 midPointX,							midPointY,						unID, leaderPointsLeftPosXEnd[i],		2		: unID=unID+1

		HOTSPOT2 midPointX,							leaderPointsLeftPosYStart[i],	unID, leaderPointsLeftPosYEnd[i],		1+128	: unID=unID+1
		HOTSPOT2 midPointX,							leaderPointsLeftPosYStart[i]-1,	unID, leaderPointsLeftPosYEnd[i],		3		: unID=unID+1
		HOTSPOT2 midPointX,							midPointY,						unID, leaderPointsLeftPosYEnd[i],		2		: unID=unID+1

		del 1
	next i
	del 1

return

"leadersRight":
	add2 totalCommonPointRightPosX, 0
	for i = 1 to iPointerNumSide2
		line_type pointerLineType
		pen pointerPen

		add2 0,commonPointPosY

		length_p1	= SQR(((leaderPointsRightPosXEnd[i])^2)+((leaderPointsRightPosYEnd[i])^2))
		length_n1	= 2 * length_p1
		midPointX	= leaderPointsRightPosXStart[i] + leaderPointsRightPosXEnd[i]
		midPointY	= leaderPointsRightPosYStart[i] + leaderPointsRightPosYEnd[i]

		if (ABS(leaderPointsRightPosXEnd[i])<EPS & ABS(leaderPointsRightPosYEnd[i])<EPS) then
			if (ABS(leaderPointsRightPosXStart[i])<EPS & ABS(leaderPointsRightPosYStart[i])<EPS) then
				angle1=0
			else
				length_p1	= SQR(((leaderPointsRightPosXStart[i])^2)+((leaderPointsRightPosYStart[i])^2))
				if (leaderPointsRightPosXStart[i]) > 0 THEN
					angle1=ASN(((leaderPointsRightPosYStart[i]))/length_p1)
				else
					angle1=-1*(ASN(((leaderPointsRightPosYStart[i]))/length_p1))+180
				endif
			endif
		else
			if (leaderPointsRightPosXEnd[i]) > 0 THEN
				angle1= 180 + ASN(((leaderPointsRightPosYEnd[i]))/length_p1)
			else
				angle1= 180 -1*(ASN(((leaderPointsRightPosYEnd[i]))/length_p1))+180
			endif
		endif

		arrowHeadLength		= 0
		if bEnableArrowHead then
			add2 leaderPointsRightPosXStart[i], leaderPointsRightPosYStart[i]
			rot2 180 + angle1
				gosub "arrowHead"
			del 2
		endif

		arrowHeadLengthXMod	= arrowHeadLength * COS(angle1)
		arrowHeadLengthYMod	= arrowHeadLength * SIN(angle1)

		if iPointerType = POINTER_STRAIGHT then
			LINE2 leaderPointsRightPosXStart[i] - arrowHeadLengthXMod, leaderPointsRightPosYStart[i] - arrowHeadLengthYMod, midPointX, midPointY
			LINE2 midPointX, midPointY, 0, 0
		else
			SPLINE2A 2,0,leaderPointsRightPosXStart[i] - arrowHeadLengthXMod, leaderPointsRightPosYStart[i] - arrowHeadLengthYMod, angle1,0,-length_n1,
						0,0,0,-length_n1,0
		endif

		!!! pointer
		HOTSPOT2 0,									leaderPointsRightPosYStart[i],	unID,	leaderPointsRightPosXStart[i],	1+128	: unID=unID+1
		HOTSPOT2 -1,								leaderPointsRightPosYStart[i],	unID,	leaderPointsRightPosXStart[i],	3		: unID=unID+1
		HOTSPOT2 leaderPointsRightPosXStart[i],		leaderPointsRightPosYStart[i],	unID,	leaderPointsRightPosXStart[i],	2		: unID=unID+1

		HOTSPOT2 leaderPointsRightPosXStart[i],		0,								unID,	leaderPointsRightPosYStart[i],	1+128	: unID=unID+1
		HOTSPOT2 leaderPointsRightPosXStart[i],		-1,								unID,	leaderPointsRightPosYStart[i],	3		: unID=unID+1
		HOTSPOT2 leaderPointsRightPosXStart[i],		leaderPointsRightPosYStart[i],	unID,	leaderPointsRightPosYStart[i],	2		: unID=unID+1

		!!! Tangent
		HOTSPOT2 leaderPointsRightPosXStart[i],		midPointY,						unID, leaderPointsRightPosXEnd[i],		1+128	: unID=unID+1
		HOTSPOT2 leaderPointsRightPosXStart[i]-1,	midPointY,						unID, leaderPointsRightPosXEnd[i],		3		: unID=unID+1
		HOTSPOT2 midPointX,							midPointY,						unID, leaderPointsRightPosXEnd[i],		2		: unID=unID+1

		HOTSPOT2 midPointX,							leaderPointsRightPosYStart[i],	unID, leaderPointsRightPosYEnd[i],		1+128	: unID=unID+1
		HOTSPOT2 midPointX,							leaderPointsRightPosYStart[i]-1,	unID, leaderPointsRightPosYEnd[i],		3		: unID=unID+1
		HOTSPOT2 midPointX,							midPointY,						unID, leaderPointsRightPosYEnd[i],		2		: unID=unID+1

		del 1
	next i
	del 1

return

"arrowHead":

	pen arrowHeadPen
	fill solidFillForMultiLabel

	arrowHeadSize		= arrowHeadSizePaper * PAPER_TO_MODEL

	if iArrowHeadType = 1 then
		poly2_b 3, 1 + 4, arrowHeadPen, arrowHeadPen,
			arrowHeadSize / 2, arrowHeadSize / 2, 1,
			0, 0, 1,
			arrowHeadSize / 2, -arrowHeadSize / 2, 0

		arrowHeadLength = arrowHeadSize / 2
	endif
	if iArrowHeadType = 2 then
		poly2_b 3, 1 + 4, arrowHeadPen, arrowHeadPen,
			arrowHeadSize / 2, arrowHeadSize / 2, 1,
			0, 0, 1,
			arrowHeadSize / 2, -arrowHeadSize / 2, 1

		arrowHeadLength = arrowHeadSize / 2
	endif
	if iArrowHeadType = 3 then
		poly2_b 3, 1 + 2 + 4, arrowHeadPen, arrowHeadPen,
			arrowHeadSize / 2, arrowHeadSize / 2, 1,
			0, 0, 1,
			arrowHeadSize / 2, -arrowHeadSize / 2, 1

		arrowHeadLength = arrowHeadSize / 2
	endif
	if iArrowHeadType = 4 then
		line2 -arrowHeadSize / 2, -arrowHeadSize / 2, arrowHeadSize / 2, arrowHeadSize / 2
	endif
	if iArrowHeadType = 5 then
		poly2_b 5, 1 + 4, arrowHeadPen, arrowHeadPen,
			-arrowHeadSize / 2, 0, 1,
			0, 1, 800,
			arrowHeadSize / 2, 0, 1001,
			0, -1, 800,
			-arrowHeadSize / 2, 0, 1001

		arrowHeadLength = arrowHeadSize / 2
	endif
	if iArrowHeadType = 6 then
		poly2_b 5, 1 + 2 + 4, arrowHeadPen, arrowHeadPen,
			-arrowHeadSize / 2, 0, 1,
			0, 1, 800,
			arrowHeadSize / 2, 0, 1001,
			0, -1, 800,
			-arrowHeadSize / 2, 0, 1001

		arrowHeadLength = arrowHeadSize / 2
	endif
	if iArrowHeadType = 7 then
		line2 0, -arrowHeadSize / 2, 0, arrowHeadSize / 2
	endif
	if iArrowHeadType = 8 then
		poly2_b 3, 1 + 4, arrowHeadPen, arrowHeadPen,
			(arrowHeadSize / 2) / TAN(15), arrowHeadSize / 2, 1,
			0, 0, 1,
			(arrowHeadSize / 2) / TAN(15), -arrowHeadSize / 2, 0

		arrowHeadLength = (arrowHeadSize / 2) / TAN(15)
	endif
	if iArrowHeadType = 9 then
		poly2_b 3, 1 + 4, arrowHeadPen, arrowHeadPen,
			(arrowHeadSize / 2) / TAN(15), arrowHeadSize / 2, 1,
			0, 0, 1,
			(arrowHeadSize / 2) / TAN(15), -arrowHeadSize / 2, 1

		arrowHeadLength = (arrowHeadSize / 2) / TAN(15)
	endif
	if iArrowHeadType = 10 then
		poly2_b 3, 1 + 2 + 4, arrowHeadPen, arrowHeadPen,
			(arrowHeadSize / 2) / TAN(15), arrowHeadSize / 2, 1,
			0, 0, 1,
			(arrowHeadSize / 2) / TAN(15), -arrowHeadSize / 2, 1

		arrowHeadLength = (arrowHeadSize / 2) / TAN(15)
	endif
	if iArrowHeadType = 11 then
		line2 -(arrowHeadSize / 2) / TAN(60), -arrowHeadSize / 2, (arrowHeadSize / 2) / TAN(60), arrowHeadSize / 2
	endif
	if iArrowHeadType = 12 then
		poly2_b 5, 1 + 4, arrowHeadPen, arrowHeadPen,
			-arrowHeadSize / 2, 0, 1,
			0, 1, 800,
			arrowHeadSize / 2, 0, 1001,
			0, -1, 800,
			-arrowHeadSize / 2, 0, 1001

		line2 -arrowHeadSize / 2, 0, arrowHeadSize / 2, 0
		line2 0, -arrowHeadSize / 2, 0, arrowHeadSize / 2

		arrowHeadLength = arrowHeadSize / 2
	endif
	if iArrowHeadType = 13 then
		poly2_b 5, 1 + 4, arrowHeadPen, arrowHeadPen,
			-arrowHeadSize / 2, 0, 1,
			0, 1, 800,
			arrowHeadSize / 2, 0, 1001,
			0, -1, 800,
			-arrowHeadSize / 2, 0, 1001

		poly2_b 4, 1 + 2 + 4, arrowHeadPen, arrowHeadPen,
			0, 0, 1,
			-arrowHeadSize / 2, 0, 0,
			0, -1, 800,
			0, -arrowHeadSize / 2, 1001

		poly2_b 4, 1 + 2 + 4, arrowHeadPen, arrowHeadPen,
			0, 0, 1,
			arrowHeadSize / 2, 0, 0,
			0, 1, 800,
			0, arrowHeadSize / 2, 1001

		arrowHeadLength = arrowHeadSize / 2
	endif
	if iArrowHeadType = 14 then
		poly2_b 3, 1 + 4, arrowHeadPen, arrowHeadPen,
			arrowHeadSize / 2, arrowHeadSize / 2, 1,
			0, 0, 1,
			arrowHeadSize / 2, -arrowHeadSize / 2, 0

		arrowHeadLength = arrowHeadSize / 2
	endif

	pen pointerPen
	if	iArrowHeadType = 1 |\
		iArrowHeadType = 8 |\
		iArrowHeadType = 14 then

		line2 0, 0, arrowHeadLength, 0
	endif

return

"lineConnection":

	pen pointerPen

	line2 - headBoxOffsetLeftRight + textBoxPosX, commonPointPosY, textBoxLength + headBoxOffsetLeftRight + textBoxPosX, commonPointPosY

return

"headshape":

	pen pointerPen
	line_type 1
	fill fillMarkerBackground

	add2 textBoxPosX, 0
		if iShapeHeadBox = HEADSHAPE_CIRCLE then
			poly2_b 2, 1 + 2 * bFrameOpaque + 4, frameOpaquePen, frameOpaquePen,
				textBoxLength / 2, - textBoxHeight / 2, 900,
				headBoxLength / 2, 360, 4001

			if NOT(bAutoHeadBox) then
				add2 MAX(textBoxLength, textBoxLength / 2 + textBoxHeight / 2), -textBoxHeight / 2
					hotspot2	0,		0,					unID, headBoxOffsetLeftRightPaper_M,	1 + 128 + 1024,	headBoxLengthPaper		: unID = unID + 1
					hotspot2   	-1,	0,						unID, headBoxOffsetLeftRightPaper_M,	3 + 1024,		headBoxLengthPaper		: unID = unID + 1
					hotspot2 	headBoxOffsetLeftRight,	0,	unID, headBoxOffsetLeftRightPaper_M,	2 + 1024,		headBoxLengthPaper		: unID = unID + 1
				del 1
			endif
		endif

		if iShapeHeadBox = HEADSHAPE_RECT then
			add2 - headBoxOffsetLeftRight, headBoxOffsetUpDown
				poly2_b 4, 1 + 2 * bFrameOpaque + 4, frameOpaquePen, frameOpaquePen,
					0, 0, 1,
					headBoxLength, 0, 1,
					headBoxLength, - headBoxWidth, 1,
					0, - headBoxWidth, 1
			del 1

			if NOT(bAutoHeadBox) then
				add2 textBoxLength + headBoxOffsetLeftRight, 0
					hotspot2	0,	0,						unID, headBoxOffsetUpDownPaper_M, 1 + 128 + 1024,	headBoxWidthPaper		: unID = unID + 1
					hotspot2   	0,	-1,						unID, headBoxOffsetUpDownPaper_M, 3 + 1024,			headBoxWidthPaper		: unID = unID + 1
					hotspot2 	0,	headBoxOffsetUpDown,	unID, headBoxOffsetUpDownPaper_M, 2 + 1024,			headBoxWidthPaper		: unID = unID + 1
				del 1

				add2 textBoxLength, headBoxOffsetUpDown
					hotspot2	0,		0,					unID, headBoxOffsetLeftRightPaper_M, 1 + 128 + 1024,	headBoxLengthPaper		: unID = unID + 1
					hotspot2   	-1,		0,					unID, headBoxOffsetLeftRightPaper_M, 3 + 1024,			headBoxLengthPaper		: unID = unID + 1
					hotspot2 	headBoxOffsetLeftRight,	0,	unID, headBoxOffsetLeftRightPaper_M, 2 + 1024,			headBoxLengthPaper		: unID = unID + 1
				del 1
			endif
		endif

		if iShapeHeadBox = HEADSHAPE_DIAMOND then
			add2 textBoxLength / 2, - textBoxHeight  / 2
				poly2_b 4, 1 + 2 * bFrameOpaque + 4, frameOpaquePen, frameOpaquePen,
					headBoxLength / 2, 0, 1,
					0, - headBoxWidth / 2, 1,
					- headBoxLength / 2, 0, 1,
					0, headBoxWidth / 2, 1
			del 1

			if NOT(bAutoHeadBox) then
				add2 textBoxLength + headBoxOffsetLeftRight, 0
					hotspot2	0,	0,						unID, headBoxOffsetUpDownPaper_M,	1 + 128 + 1024,	headBoxWidthPaper		: unID = unID + 1
					hotspot2   	0,	-1,						unID, headBoxOffsetUpDownPaper_M, 	3 + 1024,		headBoxWidthPaper		: unID = unID + 1
					hotspot2 	0,	headBoxOffsetUpDown,	unID, headBoxOffsetUpDownPaper_M, 	2 + 1024,		headBoxWidthPaper		: unID = unID + 1
				del 1

				add2 textBoxLength, headBoxOffsetUpDown
					hotspot2	0,		0,						unID, headBoxOffsetLeftRightPaper_M, 1 + 128 + 1024,	headBoxLengthPaper		: unID = unID + 1
					hotspot2   	-1,	0,							unID, headBoxOffsetLeftRightPaper_M, 3 + 1024,			headBoxLengthPaper		: unID = unID + 1
					hotspot2 	headBoxOffsetLeftRight,	0,		unID, headBoxOffsetLeftRightPaper_M, 2 + 1024,			headBoxLengthPaper		: unID = unID + 1
				del 1
			endif
		endif

		if iShapeHeadBox = HEADSHAPE_ELLIPSE then
			mul2 1, headBoxWidth / headBoxLength
				poly2_b 2, 1 + 2 * bFrameOpaque + 4, frameOpaquePen, frameOpaquePen,
					textBoxLength / 2, - textBoxHeight / 2 / (headBoxWidth / headBoxLength), 900,
					headBoxLength / 2, 360, 4001
			del 1

			if NOT(bAutoHeadBox) then
				add2 textBoxLength + headBoxOffsetLeftRight, 0
					hotspot2	0,	0,						unID, headBoxOffsetUpDownPaper_M, 1 + 128 + 1024,	headBoxWidthPaper		: unID = unID + 1
					hotspot2   	0,	-1,						unID, headBoxOffsetUpDownPaper_M, 3 + 1024,			headBoxWidthPaper		: unID = unID + 1
					hotspot2 	0,	headBoxOffsetUpDown,	unID, headBoxOffsetUpDownPaper_M, 2+ 1024,			headBoxWidthPaper		: unID = unID + 1
				del 1

				add2 textBoxLength, headBoxOffsetUpDown
					hotspot2	0,		0,						unID, headBoxOffsetLeftRightPaper_M, 1 + 128 + 1024,	headBoxLengthPaper		: unID = unID + 1
					hotspot2   	-1,	0,							unID, headBoxOffsetLeftRightPaper_M, 3 + 1024,			headBoxLengthPaper		: unID = unID + 1
					hotspot2 	headBoxOffsetLeftRight,	0,		unID, headBoxOffsetLeftRightPaper_M, 2 + 1024,			headBoxLengthPaper		: unID = unID + 1
				del 1
			endif
		endif

		if iShapeHeadBox = HEADSHAPE_OVAL then
			add2 - headBoxOffsetLeftRight, headBoxOffsetUpDown
				poly2_b 6, 1 + 2 * bFrameOpaque + 4, frameOpaquePen, frameOpaquePen,
					headBoxLength - headBoxWidth / 2, 0, 1,
					1, 0, 800,
					headBoxLength - headBoxWidth / 2, - headBoxWidth, 1001,
					headBoxWidth / 2, - headBoxWidth, 1,
					-1, 0, 800,
					headBoxWidth / 2, 0, 1001
			del 1

			if NOT(bAutoHeadBox) then
				add2 textBoxLength + headBoxOffsetLeftRight, 0
					hotspot2	0,	0,						unID, headBoxOffsetUpDownPaper_M, 1 + 128 + 1024,		headBoxWidthPaper		: unID = unID + 1
					hotspot2   	0,	-1,						unID, headBoxOffsetUpDownPaper_M, 3 + 1024,			headBoxWidthPaper		: unID = unID + 1
					hotspot2 	0,	headBoxOffsetUpDown,	unID, headBoxOffsetUpDownPaper_M, 2 + 1024,			headBoxWidthPaper		: unID = unID + 1
				del 1

				add2 textBoxLength, headBoxOffsetUpDown
					hotspot2	0,		0,						unID, headBoxOffsetLeftRightPaper_M, 1 + 128 + 1024,	headBoxLengthPaper		: unID = unID + 1
					hotspot2   	-1,	0,							unID, headBoxOffsetLeftRightPaper_M, 3 + 1024,		headBoxLengthPaper		: unID = unID + 1
					hotspot2 	headBoxOffsetLeftRight,	0,		unID, headBoxOffsetLeftRightPaper_M, 2 + 1024,			headBoxLengthPaper		: unID = unID + 1
				del 1
			endif
		endif

		if iShapeHeadBox = HEADSHAPE_HEXAGON then
			add2 - headBoxOffsetLeftRight, headBoxOffsetUpDown
				poly2_b 6, 1 + 2 * bFrameOpaque + 4, frameOpaquePen, frameOpaquePen,
					headShapeSidePointXPos, 0, 1,
					headBoxLength - headShapeSidePointXPos, 0, 1,
					headBoxLength, - headBoxWidth / 2, 1,
					headBoxLength - headShapeSidePointXPos, - headBoxWidth, 1,
					headShapeSidePointXPos, - headBoxWidth, 1,
					0, - headBoxWidth / 2, 1
			del 1

			if NOT(bAutoHeadBox) then
				add2 textBoxLength + headBoxOffsetLeftRight, 0
					hotspot2	0,	0,						unID, headBoxOffsetUpDownPaper_M, 1 + 128 + 1024,	headBoxWidthPaper		: unID = unID + 1
					hotspot2   	0,	-1,						unID, headBoxOffsetUpDownPaper_M, 3 + 1024,		headBoxWidthPaper		: unID = unID + 1
					hotspot2 	0,	headBoxOffsetUpDown,	unID, headBoxOffsetUpDownPaper_M, 2 + 1024,		headBoxWidthPaper		: unID = unID + 1
				del 1

				add2 textBoxLength, headBoxOffsetUpDown
					hotspot2	0,		0,						unID, headBoxOffsetLeftRightPaper_M, 1 + 128 + 1024,	headBoxLengthPaper		: unID = unID + 1
					hotspot2   	-1,	0,							unID, headBoxOffsetLeftRightPaper_M, 3 + 1024,			headBoxLengthPaper		: unID = unID + 1
					hotspot2 	headBoxOffsetLeftRight,	0,		unID, headBoxOffsetLeftRightPaper_M, 2 + 1024,			headBoxLengthPaper		: unID = unID + 1
				del 1

				add2 textBoxLength + headBoxOffsetLeftRight, headBoxOffsetUpDown
					hotspot2	0,		0,						unID, headShapeSidePointXPosPaper_M,  	1 + 128 + 1024, headShapeSidePointXPosPaper	: unID = unID + 1
					hotspot2   	1,	0,							unID, headShapeSidePointXPosPaper_M, 	3 + 1024,		headShapeSidePointXPosPaper		: unID = unID + 1
					hotspot2 	-headShapeSidePointXPos,	0,	unID, headShapeSidePointXPosPaper_M, 	2 + 1024,		headShapeSidePointXPosPaper		: unID = unID + 1
				del 1
			endif
		endif

		if iShapeHeadBox = HEADSHAPE_OCTOGON then
			add2 - headBoxOffsetLeftRight, headBoxOffsetUpDown
				poly2_b 8, 1 + 2 * bFrameOpaque + 4, frameOpaquePen, frameOpaquePen,
					headShapeSidePointXPos, 0, 1,
					headBoxLength - headShapeSidePointXPos, 0, 1,
					headBoxLength, - headBoxWidth / 3, 1,
					headBoxLength, - headBoxWidth * 2 / 3, 1,
					headBoxLength - headShapeSidePointXPos, - headBoxWidth, 1,
					headShapeSidePointXPos, - headBoxWidth, 1,
					0, - headBoxWidth * 2 / 3, 1,
					0, - headBoxWidth / 3, 1
			del 1

			if NOT(bAutoHeadBox) then
				add2 textBoxLength + headBoxOffsetLeftRight, 0
					hotspot2	0,	0,						unID, headBoxOffsetUpDownPaper_M, 1 + 128 + 1024,		headBoxWidthPaper		: unID = unID + 1
					hotspot2   	0,	-1,						unID, headBoxOffsetUpDownPaper_M, 3 + 1024,			headBoxWidthPaper		: unID = unID + 1
					hotspot2 	0,	headBoxOffsetUpDown,	unID, headBoxOffsetUpDownPaper_M, 2 + 1024,			headBoxWidthPaper		: unID = unID + 1
				del 1

				add2 textBoxLength, headBoxOffsetUpDown
					hotspot2	0,		0,						unID, headBoxOffsetLeftRightPaper_M, 1 + 128 + 1024,	headBoxLengthPaper		: unID = unID + 1
					hotspot2   	-1,		0,						unID, headBoxOffsetLeftRightPaper_M, 3 + 1024,		headBoxLengthPaper		: unID = unID + 1
					hotspot2 	headBoxOffsetLeftRight,	0,		unID, headBoxOffsetLeftRightPaper_M, 2 + 1024,		headBoxLengthPaper		: unID = unID + 1
				del 1

				add2 textBoxLength + headBoxOffsetLeftRight, headBoxOffsetUpDown
					hotspot2	0,		0,						unID, headShapeSidePointXPosPaper_M,  	1 + 128 + 1024, headShapeSidePointXPosPaper	: unID = unID + 1
					hotspot2   	1,		0,						unID, headShapeSidePointXPosPaper_M, 	3 + 1024,		headShapeSidePointXPosPaper		: unID = unID + 1
					hotspot2 	- headShapeSidePointXPos,	0,	unID, headShapeSidePointXPosPaper_M, 	2 + 1024,		headShapeSidePointXPosPaper		: unID = unID + 1
				del 1
			endif
		endif

		if iShapeHeadBox = HEADSHAPE_POINTED_RECT then
			add2 - headBoxOffsetLeftRight, headBoxOffsetUpDown
				poly2_b 6, 1 + 2 * bFrameOpaque + 4, frameOpaquePen, frameOpaquePen,
					textBoxHeight / 3, 0, 1,
					headBoxLength - textBoxHeight / 3, 0, 1,
					headBoxLength, - headBoxWidth / 2, 1,
					headBoxLength - textBoxHeight / 3, - headBoxWidth, 1,
					textBoxHeight / 3, - headBoxWidth, 1,
					0, - headBoxWidth / 2, 1
			del 1

			if NOT(bAutoHeadBox) then
				add2 textBoxLength + headBoxOffsetLeftRight, 0
					hotspot2	0,	0,						unID, headBoxOffsetUpDownPaper_M, 1 + 128 + 1024,	headBoxWidthPaper		: unID = unID + 1
					hotspot2   	0,	-1,						unID, headBoxOffsetUpDownPaper_M, 3 + 1024,			headBoxWidthPaper		: unID = unID + 1
					hotspot2 	0,	headBoxOffsetUpDown,	unID, headBoxOffsetUpDownPaper_M, 2 + 1024,			headBoxWidthPaper		: unID = unID + 1
				del 1

				add2 textBoxLength, headBoxOffsetUpDown
					hotspot2	0,		0,					unID, headBoxOffsetLeftRightPaper_M, 1 + 128 + 1024,	headBoxLengthPaper		: unID = unID + 1
					hotspot2   	-1,		0,					unID, headBoxOffsetLeftRightPaper_M, 3 + 1024,			headBoxLengthPaper		: unID = unID + 1
					hotspot2 	headBoxOffsetLeftRight,	0,	unID, headBoxOffsetLeftRightPaper_M, 2 + 1024,			headBoxLengthPaper		: unID = unID + 1
				del 1
			endif
		endif
	del 1

return


]]>
</Script_2D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_1D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
EPS = 0.0001

POINTER_STRAIGHT		= 1
POINTER_CURVED			= 2

LINECONNTYPE_UP			= 1
LINECONNTYPE_CENTER		= 2
LINECONNTYPE_LO			= 3
LINECONNTYPE_UTEXT		= 4
LINECONNTYPE_UTITLE		= 5

HEADSHAPE_CIRCLE		= 1
HEADSHAPE_RECT			= 2
HEADSHAPE_DIAMOND		= 3
HEADSHAPE_ELLIPSE		= 4
HEADSHAPE_OVAL			= 5
HEADSHAPE_HEXAGON		= 6
HEADSHAPE_OCTOGON		= 7
HEADSHAPE_POINTED_RECT	= 8

TEXT_ALIGN_LEFT			= 1
TEXT_ALIGN_CENTER		= 2
TEXT_ALIGN_RIGHT		= 3

ORIENTATION_READABLE	= 1
ORIENTATION_ALIGNED		= 2

dim stPointerType[2]
	stPointerType[1] = `Прямой`
	stPointerType[2] = `Криволинейная`

dim stLineConnType[5]
	stLineConnType[1] = `Вверху`
	stLineConnType[2] = `По центру`
	stLineConnType[3] = `Внизу`
	stLineConnType[4] = `с Подчеркиванием Текста`
	stLineConnType[5] = `с Подчеркиванием Заголовка`

dim stArrowHeadType[14]
	stArrowHeadType[1] = `Тип 1`
	stArrowHeadType[2] = `Тип 2`
	stArrowHeadType[3] = `Тип 3`
	stArrowHeadType[4] = `Тип 4`
	stArrowHeadType[5] = `Тип 5`
	stArrowHeadType[6] = `Тип 6`
	stArrowHeadType[7] = `Тип 7`
	stArrowHeadType[8] = `Тип 8`
	stArrowHeadType[9] = `Тип 9`
	stArrowHeadType[10] = `Тип 10`
	stArrowHeadType[11] = `Тип 11`
	stArrowHeadType[12] = `Тип 12`
	stArrowHeadType[13] = `Тип 13`
	stArrowHeadType[14] = `Тип 14`

dim stTextAlign[3]
	stTextAlign[1] = `Слева`
	stTextAlign[2] = `По центру`
	stTextAlign[3] = `Справа`

dim stTextOrientation[2]
	stTextOrientation[1] = `Читаемый`
	stTextOrientation[2] = `Выровнять по Символу`

dim stShapeHeadBox[8]
	stShapeHeadBox[1]	= `Окружность`
	stShapeHeadBox[2]	= `Прямоугольник`
	stShapeHeadBox[3]	= `Ромб`
	stShapeHeadBox[4]	= `Эллипс`
	stShapeHeadBox[5]	= `Овал`
	stShapeHeadBox[6]	= `Шестиугольник`
	stShapeHeadBox[7]	= `Восьмиугольник`
	stShapeHeadBox[8]	= `Остроконечный Многоугольник`

bEnablePointersOnSide1	= iPointerNumSide1
bEnablePointersOnSide2	= iPointerNumSide2 * bPointerOnBothSides

textBoxOffsetPaper		= 1.2

totalTextLengthPaper	= textBoxLengthPaper - textBoxOffsetPaper * 2

!=============================================================================
! Title Text Calculations
!=============================================================================

styleTitleTextBit = bTitleTextFontBO + 2 * bTitleTextFontIT + 4 * bTitleTextFontUL + 128 * bTitleTextFontST
define style "titleTextStyle"  titleTextFontType, titleTextFontSize, 1, styleTitleTextBit
set style "titleTextStyle"
rrr = request("Height_of_style", "titleTextStyle", titleTextHeightPaper)

dim	numTitleWordsInRow[]
dim	titleLetterNum[]
dim	titleIsLetter[]
dim	titleWordStartPos[]

tempTitleText			= titleText
numTitleLetters			= strlen(titleText)
startTitleLetterNum		= 0
realTitleRowNum			= 0
maxTitleWordLength		= 0
titleSpaceNum			= 0
titleWordNum			= 1
titleLetterStartPos		= 1
titleTextWidthMod		= titleTextWidthFactor * titleTextSpacingFactor / 10000

for k = 1 to numTitleLetters
	if STRSUB(titleText, k, 1) <> " " and STRSUB(titleText, k, 1) <> "-" then
		titleIsLetter[k] = 1
		startTitleLetterNum = startTitleLetterNum + 1
		titleLetterNum[titleWordNum] = startTitleLetterNum

		if k > 1 then
			if titleIsLetter[k - 1] <> 1 then
				titleWordStartPos[titleLetterStartPos] = k
				titleLetterStartPos = titleLetterStartPos + 1
			endif
		else
			titleWordStartPos[titleLetterStartPos] = k
			titleLetterStartPos = titleLetterStartPos + 1
		endif
	else
		if k > 1 then
			if titleIsLetter[k - 1] <> 0 and k <> numTitleLetters then titleWordNum = titleWordNum + 1
		endif
		titleIsLetter[k] = 0

		titleSpaceNum = titleSpaceNum + 1
		startTitleLetterNum = 0
	endif
next k

titleRealWordNum		= vardim1(titleWordStartPos)
tempTitleRowNum			= titleRealWordNum
tempTitleWordNum		= titleRealWordNum
titleWordN				= 0

dim titleTextRow[]
for j = 1 to tempTitleRowNum
	titleTextRow[j] = ""
next j

for j = 1 to tempTitleRowNum
	for i = 1 to tempTitleWordNum
		tempTitleTextWidthPaper 	= stw(tempTitleText) * titleTextWidthMod

		if tempTitleTextWidthPaper > totalTextLengthPaper then
			if j = 1 then
				tempTitleText	= STRSUB(titleText, 1, titleWordStartPos[tempTitleWordNum - i + 1] - 1)
			else
				tempTitleText	= STRSUB(titleText, titleWordStartPos[titleWordN + 1], titleWordStartPos[vardim1(titleWordStartPos) + 1 - i] - titleWordStartPos[titleWordN + 1])
			endif
		else
			numTitleWordsInRow[j]	= tempTitleWordNum - i + 1
			titleWordN = titleWordN + numTitleWordsInRow[j]
			if numTitleWordsInRow[j] then
				titleTextRow[j]	= tempTitleText
				if titleWordN < vardim1(titleWordStartPos) then tempTitleText	= STRSUB(titleText, titleWordStartPos[titleWordN + 1], strlen(titleText))
				i = tempTitleWordNum

				tempTitleWordNum = tempTitleWordNum - numTitleWordsInRow[j]
			else
				j = tempTitleRowNum
			endif
		endif
	next i
next j

for j = 1 to tempTitleRowNum
	if titleTextRow[j] <> "" then
		realTitleRowNum = realTitleRowNum + 1
	endif
next j

for kk = 1 to titleRealWordNum
	if titleRealWordNum = 1 then
		maxTitleWordPos		= 1
		maxTitleWord 		= STRSUB(titleText, 1, numTitleLetters)
		maxTitleWordLength	= STW(maxTitleWord)
	else
		if kk = 1 then
			maxTitleWordPos		= 1
			maxTitleWord 		= STRSUB(titleText, maxTitleWordPos, titleWordStartPos[kk + 1] - 1)
			maxTitleWordLength	= STW(maxTitleWord)
		else
			if kk = titleRealWordNum then
				if STW(STRSUB(titleText, titleWordStartPos[kk], numTitleLetters - titleWordStartPos[kk] + 1)) > maxTitleWordLength then
					maxTitleWordPos		= titleWordStartPos[kk]
					maxTitleWord 		= STRSUB(titleText, titleWordStartPos[kk], numTitleLetters - titleWordStartPos[kk] + 1)
					maxTitleWordLength	= STW(maxTitleWord)
				endif
			else
				if STW(STRSUB(titleText, titleWordStartPos[kk], titleWordStartPos[kk + 1] - titleWordStartPos[kk])) > maxTitleWordLength then
					maxTitleWordPos		= titleWordStartPos[kk]
					maxTitleWord 		= STRSUB(titleText, titleWordStartPos[kk], titleWordStartPos[kk + 1] - titleWordStartPos[kk])
					maxTitleWordLength	= STW(maxTitleWord)
				endif
			endif
		endif
	endif
next kk

minTitleTextBoxLengthPaper	= maxTitleWordLength + textBoxOffsetPaper * 2
totalTitleTextHeightPaper	= realTitleRowNum * titleTextHeightPaper * titleTextLeading / 100

!=============================================================================
! Label Text Calculations
!=============================================================================

styleLabelTextBit = bLabelTextFontBO + 2 * bLabelTextFontIT + 4 * bLabelTextFontUL + 128 * bLabelTextFontST
define style "labelTextStyle"  labelTextFontType, labelTextFontSize, 1, styleLabelTextBit
set style "labelTextStyle"
rrr = request("Height_of_style", "labelTextStyle", labelTextHeightPaper)

dim	numLabelWordsInRow[]
dim	labelLetterNum[]
dim	labelIsLetter[]
dim	labelWordStartPos[]

tempLabelText			= labelText
numLabelLetters			= strlen(labelText)
startLabelLetterNum		= 0
realLabelRowNum			= 0
maxLabelWordLength		= 0
labelSpaceNum			= 0
labelWordNum			= 1
labelLetterStartPos		= 1
labelTextWidthMod		= labelTextWidthFactor * labelTextSpacingFactor / 10000

for k = 1 to numLabelLetters
	if STRSUB(labelText, k, 1) <> " " and STRSUB(labelText, k, 1) <> "-" then
		labelIsLetter[k] = 1
		startLabelLetterNum = startLabelLetterNum + 1
		labelLetterNum[labelWordNum] = startLabelLetterNum

		if k > 1 then
			if labelIsLetter[k - 1] <> 1 then
				labelWordStartPos[labelLetterStartPos] = k
				labelLetterStartPos = labelLetterStartPos + 1
			endif
		else
			labelWordStartPos[labelLetterStartPos] = k
			labelLetterStartPos = labelLetterStartPos + 1
		endif
	else
		if k > 1 then
			if labelIsLetter[k - 1] <> 0 and k <> numLabelLetters then labelWordNum = labelWordNum + 1
		endif
		labelIsLetter[k] = 0

		labelSpaceNum = labelSpaceNum + 1
		startLabelLetterNum = 0
	endif
next k

labelRealWordNum		= vardim1(labelWordStartPos)
tempLabelRowNum			= labelRealWordNum
tempLabelWordNum		= labelRealWordNum
labelWordN				= 0

dim labelTextRow[]
for j = 1 to tempLabelRowNum
	labelTextRow[j] = ""
next j

for j = 1 to tempLabelRowNum
	for i = 1 to tempLabelWordNum
		tempLabelTextWidthPaper	= stw(tempLabelText) * labelTextWidthMod

		if tempLabelTextWidthPaper > totalTextLengthPaper then
			if j = 1 then
				tempLabelText	= STRSUB(labelText, 1, labelWordStartPos[tempLabelWordNum - i + 1] - 1)
			else
				tempLabelText	= STRSUB(labelText, labelWordStartPos[labelWordN + 1], labelWordStartPos[vardim1(labelWordStartPos) + 1 - i] - labelWordStartPos[labelWordN + 1])
			endif
		else
			numLabelWordsInRow[j]	= tempLabelWordNum - i + 1
			labelWordN = labelWordN + numLabelWordsInRow[j]
			if numLabelWordsInRow[j] then
				labelTextRow[j]	= tempLabelText
				if labelWordN < vardim1(labelWordStartPos) then tempLabelText	= STRSUB(labelText, labelWordStartPos[labelWordN + 1], strlen(labelText))
				i = tempLabelWordNum

				tempLabelWordNum = tempLabelWordNum - numLabelWordsInRow[j]
			else
				j = tempLabelRowNum
			endif
		endif
	next i
next j

for j = 1 to tempLabelRowNum
	if labelTextRow[j] <> "" then
		realLabelRowNum = realLabelRowNum + 1
	endif
next j

for kk = 1 to labelRealWordNum
	if labelRealWordNum = 1 then
		maxLabelWordPos		= 1
		maxLabelWord 		= STRSUB(labelText, 1, numLabelLetters)
		maxLabelWordLength	= STW(maxLabelWord)
	else
		if kk = 1 then
			maxLabelWordPos		= 1
			maxLabelWord 		= STRSUB(labelText, maxLabelWordPos, labelWordStartPos[kk + 1] - 1)
			maxLabelWordLength	= STW(maxLabelWord)
		else
			if kk = labelRealWordNum then
				if STW(STRSUB(labelText, labelWordStartPos[kk], numLabelLetters - labelWordStartPos[kk] + 1)) > maxLabelWordLength then
					maxLabelWordPos		= labelWordStartPos[kk]
					maxLabelWord 		= STRSUB(labelText, labelWordStartPos[kk], numLabelLetters - labelWordStartPos[kk] + 1)
					maxLabelWordLength	= STW(maxLabelWord)
				endif
			else
				if STW(STRSUB(labelText, labelWordStartPos[kk], labelWordStartPos[kk + 1] - labelWordStartPos[kk])) > maxLabelWordLength then
					maxLabelWordPos		= labelWordStartPos[kk]
					maxLabelWord 		= STRSUB(labelText, labelWordStartPos[kk], labelWordStartPos[kk + 1] - labelWordStartPos[kk])
					maxLabelWordLength	= STW(maxLabelWord)
				endif
			endif
		endif
	endif
next kk

minLabelTextBoxLengthPaper	= (maxLabelWordLength + textBoxOffsetPaper * 2)
totalLabelTextHeightPaper	= realLabelRowNum * labelTextHeightPaper * labelTextLeading / 100

totalTextHeightPaper	= totalTitleTextHeightPaper + totalLabelTextHeightPaper
textBoxHeightPaper		= totalTextHeightPaper + textBoxOffsetPaper * 2 

minTextBoxLengthPaper	= MAX(minTitleTextBoxLengthPaper, minLabelTextBoxLengthPaper) * (1 + EPS * 10)

if iLineConnType = LINECONNTYPE_UP 		then commonPointPosYPaper = -textBoxOffsetPaper
if iLineConnType = LINECONNTYPE_CENTER	then commonPointPosYPaper = -textBoxOffsetPaper - totalTextHeightPaper / 2
if iLineConnType = LINECONNTYPE_LO		then commonPointPosYPaper = -textBoxOffsetPaper - totalTextHeightPaper
if iLineConnType = LINECONNTYPE_UTITLE	then commonPointPosYPaper = -textBoxOffsetPaper - titleTextHeightPaper * titleTextLeading / 100
if iLineConnType = LINECONNTYPE_UTEXT	then commonPointPosYPaper = -textBoxOffsetPaper - totalTextHeightPaper

]]>
</Script_1D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_PR SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_PR>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_UI SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
ui_dialog `Параметры`

ui_current_page gs_ui_current_page

TABID_ROOT				= -1
TABID_POINTER			= 1
TABID_TITLE				= 2
TABID_TEXT				= 3
TABID_LABEL				= 4

file_dependence "uiTab_Dimension_flat(1)"
file_dependence "uiTab_Text_flat(1)"
file_dependence "uiTab_MultileaderLabelText_flat(1)"

pageStartY			= 5
uiTotalWidth		= 444
uiTotalHeight		= 265

textElevInfield		= 3
textElevBoolean		= 2
textElevMaterial	= 2
infieldHeight		= 19
booleanHeight		= 20
lineTypeHeight		= 25
outfieldHeight		= 15

if TABID_POINTER > 0 then
	ui_page TABID_POINTER, TABID_ROOT, `Выносная Линия`, "uiTab_Dimension_flat(1)"
	gosub "pointerPage"
endif

if TABID_TITLE > 0 then
	ui_page TABID_TITLE , TABID_ROOT, `Стиль Заголовка`, "uiTab_Text_flat(1)"
	gosub "titlePage"
endif

if TABID_TEXT > 0 then
	ui_page TABID_TEXT, TABID_ROOT, `Стиль Текста`, "uiTab_Text_flat(1)"
	gosub "textPage"
endif

if TABID_LABEL > 0 then
	ui_page TABID_LABEL, TABID_ROOT, `Выносная Надпись и Текст`, "uiTab_MultileaderLabelText_flat(1)"
	gosub "labelPage"
endif

! =============================================================================
end
! =============================================================================

"pointerPage":
	! === POINTER ===================================================================
	
	totalColWidth	= 284
	xLeftStr1		= 235 - 230
	Strlength1		= 20
	xLeftStr2		= xLeftStr1 + Strlength1 + 5
	Strlength2		= totalColWidth - xLeftStr2
	yLeftStr1		= pageStartY
	yCurrent		= yLeftStr1
	
	ui_infield "pointerLineType", xLeftStr2, yCurrent, Strlength2, 40
	
	totalColWidth	= 180
	xLeftStr1		= 235 - 230
	Strlength1		= 90
	xLeftStr2		= xLeftStr1 + Strlength1 + 5
	Strlength2		= totalColWidth - xLeftStr2
	yLeftStr1		= pageStartY + 55
	yCurrent		= yLeftStr1
	ui_outfield `Тип Линии`, xLeftStr1, yCurrent, Strlength1, outfieldHeight
	yCurrent = yCurrent - textElevInfield * 3
	ui_infield{3} "iPointerType", xLeftStr2, yCurrent, 78, 30,
		4, 4, 2, 1, 21, 13, 21, 13,						!ui_label_pointerTypes.png
		1, stPointerType[1], 1,
		2, stPointerType[2], 2
	
	xLeftStr1		= 239
	Strlength1		= 0
	xLeftStr2		= xLeftStr1 + Strlength1 + 5
	ui_infield{3} "iLineConnType", xLeftStr2, yCurrent, 195, 30,
		4, 1, 5, 1, 30, 20, 30, 20,					!ui_label_lineconnTypes.png
		1, stLineConnType[1], LINECONNTYPE_UP,
		2, stLineConnType[2], LINECONNTYPE_CENTER,
		3, stLineConnType[3], LINECONNTYPE_LO,
		4, stLineConnType[4], LINECONNTYPE_UTEXT,
		5, stLineConnType[5], LINECONNTYPE_UTITLE
	
	yCurrent		= pageStartY + 83
	ui_separator 5, yCurrent, uiTotalWidth - 5, yCurrent
	
	totalColWidth	= 180
	xLeftStr1		= 235 - 230
	Strlength1		= 95
	xLeftStr2		= xLeftStr1 + Strlength1 + 5
	Strlength2		= totalColWidth - xLeftStr2
	yLeftStr1		= pageStartY + 95
	yCurrent		= yLeftStr1
	hideFlag		= (NOT(bEnablePointersOnSide1) and NOT(bEnablePointersOnSide2))
	
	ui_outfield `Стрелка`, xLeftStr1, yCurrent, Strlength1, outfieldHeight, 4 * hideFlag
	yCurrent = yCurrent - textElevInfield * 2 + 1
	ui_infield{3} "iArrowHeadType", xLeftStr2, yCurrent, 30, 25,
		9, 5, 24, 4,					!5 ui_pointer_arrowhead_styles.png
		0, 0, 25, 23,
		1,  "", 1,
		4,  "", 2,
		7,  "", 3,
		16, "", 4,
		19, "", 5,
		20, "", 6,
		23, "", 7,
		3,  "", 8,
		6,  "", 9,
		9,  "", 10,
		18, "", 11,
		21, "", 12,
		22, "", 13,
		24, "", 14
	yCurrent = yCurrent + 34
	
	Strlength1		= 150
	xLeftStr2		= xLeftStr1 + Strlength1 + 5
	Strlength2		= totalColWidth - xLeftStr2
	ui_infield{3} "bHideArrowHead", xLeftStr1, yCurrent, Strlength1, booleanHeight,
		7, "", 2, 1, 0, 0, 0, 0,
		"", `Скрыть Стрелку с`, 0,
		"", `Скрыть Стрелку с`, 1
	yCurrent = yCurrent + 30
	
	Strlength1		= 280
	ui_infield{3} "bPointerOnBothSides", xLeftStr1, yCurrent, Strlength1, booleanHeight,
		7, "", 2, 1, 0, 0, 0, 0,
		"", `Выносные Линии с Обеих Сторон`, 0,
		"", `Выносные Линии с Обеих Сторон`, 1
	yCurrent = yCurrent + 30
	
	totalColWidth	= 285
	xLeftStr1		= 235 - 230
	Strlength1		= 225
	xLeftStr2		= xLeftStr1 + Strlength1 + 5
	Strlength2		= totalColWidth - xLeftStr2
	ui_outfield `Кол-во Выносных Линий со Стороны 1`, xLeftStr1, yCurrent, Strlength1, outfieldHeight
	yCurrent = yCurrent - textElevInfield
	ui_infield "iPointerNumSide1", xLeftStr2, yCurrent, Strlength2, infieldHeight
	yCurrent = yCurrent + 30
	
	ui_outfield `Количество Выносных Линий со Стороны 2`, xLeftStr1, yCurrent, Strlength1, outfieldHeight, 4 * NOT(bPointerOnBothSides)
	yCurrent = yCurrent - textElevInfield
	ui_infield "iPointerNumSide2", xLeftStr2, yCurrent, Strlength2, infieldHeight
	
	
	
	totalColWidth	= 285
	xLeftStr1		= 165
	Strlength1		= 40
	xLeftStr2		= xLeftStr1 + Strlength1 + 5
	Strlength2		= totalColWidth - xLeftStr2
	yLeftStr1		= pageStartY + 92
	yCurrent		= yLeftStr1
	xPict			= 27
	yPict			= 24
	xPictPos		= xLeftStr1 + 10
	yPictPos		= yCurrent - 2
	ui_pict 3, xPictPos, yPictPos, xPict, yPict, 1					!ui_label_arrowheadSize.png
	ui_infield "arrowHeadSizePaper", xLeftStr2, yCurrent, Strlength2, infieldHeight
	ui_outfield `мм`, totalColWidth + 2, yCurrent + 3, Strlength1, outfieldHeight, 4 * hideFlag
	yCurrent = yCurrent + 35
	
	ui_outfield "1:", xLeftStr1, yCurrent, Strlength1, outfieldHeight, 1 + 4 * NOT(bHideArrowHead)
	yCurrent = yCurrent - textElevInfield
	ui_infield "hideArrowHeadFrom", xLeftStr2, yCurrent, Strlength2, infieldHeight
	
	
	totalColWidth	= 435
	xLeftStr1		= 265
	Strlength1		= 100
	xLeftStr2		= xLeftStr1 + Strlength1 + 5
	Strlength2		= totalColWidth - xLeftStr2
	yLeftStr1		= pageStartY
	yCurrent		= yLeftStr1
	
	xPict			= 23
	yPict			= 17
	xPictPos		= xLeftStr1 + 75
	yPictPos		= yCurrent + 2
	ui_pict "ui_pen_flat(1)", xPictPos, yPictPos, xPict, yPict, 1
	totalColWidth	= 400
	xLeftStr2		= xLeftStr1 + Strlength1 + 5
	Strlength2		= totalColWidth - xLeftStr2
	ui_infield "iPointerPen", xLeftStr2, yCurrent, Strlength2, infieldHeight
	ui_infield "pointerPen", xLeftStr2 + Strlength2 + 5, yCurrent, 35, infieldHeight
	
	
	yCurrent		= pageStartY + 92
	xPict			= 27
	yPict			= 24
	xPictPos		= xLeftStr1 + 75
	yPictPos		= yCurrent - 2
	ui_pict 2, xPictPos, yPictPos, xPict, yPict, 1					!ui_label_arrowheadPen.png
	totalColWidth	= 400
	xLeftStr2		= xLeftStr1 + Strlength1 + 5
	Strlength2		= totalColWidth - xLeftStr2
	ui_infield "iArrowHeadPen", xLeftStr2, yCurrent, Strlength2, infieldHeight
	ui_infield "arrowHeadPen", xLeftStr2 + Strlength2 + 5, yCurrent, 35, infieldHeight
return

"titlePage":
	! === TITLE STYLE ===================================================================
	
	totalColWidth	= 294
	xLeftStr1		= 235 - 230
	Strlength1		= 40
	xLeftStr2		= xLeftStr1 + Strlength1 + 5
	Strlength2		= totalColWidth - xLeftStr2
	yLeftStr1		= pageStartY + 10
	yCurrent		= yLeftStr1
	
	ui_outfield `Шрифт:`, xLeftStr1, yCurrent, Strlength1, outfieldHeight
	yCurrent = yCurrent - textElevInfield
	ui_infield "titleTextFontType", xLeftStr2, yCurrent, Strlength2, infieldHeight
	
	yCurrent		= pageStartY + 40
	xPict			= 27
	yPict			= 14
	xPictPos		= xLeftStr1 + 10
	yPictPos		= yCurrent + 2
	ui_pict "ui_FontSize_flat(1)", xPictPos, yPictPos, xPict, yPict, 1
	totalColWidth	= 100
	xLeftStr2		= xLeftStr1 + Strlength1 + 5
	Strlength2		= totalColWidth - xLeftStr2
	ui_infield "titleTextFontSize", xLeftStr2, yCurrent, Strlength2, infieldHeight
	ui_outfield `мм`, totalColWidth + 2, yCurrent + 3, Strlength1, outfieldHeight
	
	yCurrent		= pageStartY + 75
	xPict			= 16
	yPict			= 16
	xPictPos		= xLeftStr1 + 22
	yPictPos		= yCurrent + 2
	ui_pict "ui_bold_flat(1)", xPictPos, yPictPos, xPict, yPict, 1
	totalColWidth	= 180
	xLeftStr2		= xLeftStr1 + Strlength1 + 5
	Strlength2		= totalColWidth - xLeftStr2
	ui_infield{3} "bTitleTextFontBO", xLeftStr2, yCurrent, Strlength2, booleanHeight,
		7, "", 2, 1, 0, 0, 0, 0,
		"", `Жирный`, 0,
		"", `Жирный`, 1
	yCurrent = yCurrent + 30
	
	yPictPos	= yCurrent + 2
	ui_pict "ui_italic_flat(1)", xPictPos, yPictPos, xPict, yPict, 1
	ui_infield{3} "bTitleTextFontIT", xLeftStr2, yCurrent, Strlength2, booleanHeight,
		7, "", 2, 1, 0, 0, 0, 0,
		"", `Курсив`, 0,
		"", `Курсив`, 1
	yCurrent = yCurrent + 30
	
	yPictPos	= yCurrent + 2
	ui_pict "ui_underline_flat(1)", xPictPos, yPictPos, xPict, yPict, 1
	ui_infield{3} "bTitleTextFontUL", xLeftStr2, yCurrent, Strlength2, booleanHeight,
		7, "", 2, 1, 0, 0, 0, 0,
		"", `Подчеркнутый`, 0,
		"", `Подчеркнутый`, 1
	yCurrent = yCurrent + 30
	
	yPictPos	= yCurrent + 2
	ui_pict "ui_text_strikethrough_flat(1)", xPictPos, yPictPos, xPict, yPict, 1
	ui_infield{3} "bTitleTextFontST", xLeftStr2, yCurrent, Strlength2, booleanHeight,
		7, "", 2, 1, 0, 0, 0, 0,
		"", `Зачеркнутый`, 0,
		"", `Зачеркнутый`, 1
	
	ui_separator totalColWidth + 10, pageStartY + 70, totalColWidth + 10, yCurrent + 25
	
	totalColWidth	= 435
	xLeftStr1		= 230
	Strlength1		= 100
	xLeftStr2		= xLeftStr1 + Strlength1 + 5
	Strlength2		= totalColWidth - xLeftStr2
	yLeftStr1		= pageStartY + 40
	yCurrent		= yLeftStr1
	
	xPict			= 24
	yPict			= 17
	xPictPos		= xLeftStr1 + 70
	yPictPos		= yCurrent + 2
	ui_pict "ui_text_pen_flat(1)", xPictPos, yPictPos, xPict, yPict, 1
	totalColWidth	= 400
	xLeftStr2		= xLeftStr1 + Strlength1 + 5
	Strlength2		= totalColWidth - xLeftStr2
	ui_infield "iTitleTextPen", xLeftStr2, yCurrent, Strlength2, infieldHeight
	ui_infield "titleTextPen", xLeftStr2 + Strlength2 + 5, yCurrent, 35, infieldHeight
	
	yCurrent 		= pageStartY + 78
	xPict			= 30
	yPict			= 20
	xPictPos		= xLeftStr1 - 35
	yPictPos		= yCurrent - 2
	totalColWidth	= uiTotalWidth - 5
	xLeftStr2		= xLeftStr1 + Strlength1 + 5
	Strlength2		= totalColWidth - xLeftStr2
	ui_pict 6, xPictPos, yPictPos, xPict, yPict, 1				!ui_textAlign.png
	ui_outfield `Выравнивание:`, xLeftStr1, yCurrent, Strlength1, outfieldHeight
	yCurrent = yCurrent - textElevInfield
	ui_infield{3} "iTitleTextAlign", xLeftStr2, yCurrent, Strlength2, infieldHeight,
		8, "", 100, 1, 0, 0, 0, 0,
		"", stTextAlign[1], 1,
		"", stTextAlign[2], 2,
		"", stTextAlign[3], 3
	yCurrent = yCurrent + 33
	
	totalColWidth	= 415
	xLeftStr2		= xLeftStr1 + Strlength1 + 5
	Strlength2		= totalColWidth - xLeftStr2
	yPictPos	= yCurrent - 2
	ui_pict 7, xPictPos, yPictPos, xPict, yPict, 1				!ui_textLeading.png
	ui_outfield `Интервал:`, xLeftStr1, yCurrent, Strlength1, outfieldHeight
	yCurrent = yCurrent - textElevInfield
	ui_infield "titleTextLeading", xLeftStr2, yCurrent, Strlength2, infieldHeight
	ui_outfield `%`, totalColWidth + 2, yCurrent + 3, 23, outfieldHeight
	yCurrent = yCurrent + 33
	
	yPictPos	= yCurrent - 2
	ui_pict 9, xPictPos, yPictPos, xPict, yPict, 1	!ui_textWidth.png
	ui_outfield `Ширина Символов:`, xLeftStr1, yCurrent, Strlength1, outfieldHeight
	yCurrent = yCurrent - textElevInfield
	ui_infield "titleTextWidthFactor", xLeftStr2, yCurrent, Strlength2, infieldHeight
	ui_outfield `%`, totalColWidth + 2, yCurrent + 3, 23, outfieldHeight
	yCurrent = yCurrent + 33
	
	yPictPos	= yCurrent - 2
	ui_pict 8, xPictPos, yPictPos, xPict, yPict, 1				!ui_textSpacing.png
	ui_outfield `Межзнаковый Интервал:`, xLeftStr1, yCurrent, Strlength1, outfieldHeight
	yCurrent = yCurrent - textElevInfield
	ui_infield "titleTextSpacingFactor", xLeftStr2, yCurrent, Strlength2, infieldHeight
	ui_outfield `%`, totalColWidth + 2, yCurrent + 3, 23, outfieldHeight
return

"textPage":
	! === TEXT STYLE ===================================================================
	
	totalColWidth	= 294
	xLeftStr1		= 235 - 230
	Strlength1		= 40
	xLeftStr2		= xLeftStr1 + Strlength1 + 5
	Strlength2		= totalColWidth - xLeftStr2
	yLeftStr1		= pageStartY + 10
	yCurrent		= yLeftStr1
	
	ui_outfield `Шрифт:`, xLeftStr1, yCurrent, Strlength1, outfieldHeight
	yCurrent = yCurrent - textElevInfield
	ui_infield "labelTextFontType", xLeftStr2, yCurrent, Strlength2, infieldHeight
	
	yCurrent		= pageStartY + 40
	xPict			= 27
	yPict			= 14
	xPictPos		= xLeftStr1 + 10
	yPictPos		= yCurrent + 2
	ui_pict "ui_FontSize_flat(1)", xPictPos, yPictPos, xPict, yPict, 1
	totalColWidth	= 100
	xLeftStr2		= xLeftStr1 + Strlength1 + 5
	Strlength2		= totalColWidth - xLeftStr2
	ui_infield "labelTextFontSize", xLeftStr2, yCurrent, Strlength2, infieldHeight
	ui_outfield `мм`, totalColWidth + 2, yCurrent + 3, Strlength1, outfieldHeight
	
	yCurrent		= pageStartY + 75
	xPict			= 16
	yPict			= 16
	xPictPos		= xLeftStr1 + 22
	yPictPos		= yCurrent + 2
	ui_pict "ui_bold_flat(1)", xPictPos, yPictPos, xPict, yPict, 1
	totalColWidth	= 180
	xLeftStr2		= xLeftStr1 + Strlength1 + 5
	Strlength2		= totalColWidth - xLeftStr2
	ui_infield{3} "bLabelTextFontBO", xLeftStr2, yCurrent, Strlength2, booleanHeight,
		7, "", 2, 1, 0, 0, 0, 0,
		"", `Жирный`, 0,
		"", `Жирный`, 1
	yCurrent = yCurrent + 30
	
	yPictPos	= yCurrent + 2
	ui_pict "ui_italic_flat(1)", xPictPos, yPictPos, xPict, yPict, 1
	ui_infield{3} "bLabelTextFontIT", xLeftStr2, yCurrent, Strlength2, booleanHeight,
		7, "", 2, 1, 0, 0, 0, 0,
		"", `Курсив`, 0,
		"", `Курсив`, 1
	yCurrent = yCurrent + 30
	
	yPictPos	= yCurrent + 2
	ui_pict "ui_underline_flat(1)", xPictPos, yPictPos, xPict, yPict, 1
	ui_infield{3} "bLabelTextFontUL", xLeftStr2, yCurrent, Strlength2, booleanHeight,
		7, "", 2, 1, 0, 0, 0, 0,
		"", `Подчеркнутый`, 0,
		"", `Подчеркнутый`, 1
	yCurrent = yCurrent + 30
	
	yPictPos	= yCurrent + 2
	ui_pict "ui_text_strikethrough_flat(1)", xPictPos, yPictPos, xPict, yPict, 1
	ui_infield{3} "bLabelTextFontST", xLeftStr2, yCurrent, Strlength2, booleanHeight,
		7, "", 2, 1, 0, 0, 0, 0,
		"", `Зачеркнутый`, 0,
		"", `Зачеркнутый`, 1
	
	ui_separator totalColWidth + 10, pageStartY + 70, totalColWidth + 10, yCurrent + 25
	
	totalColWidth	= 435
	xLeftStr1		= 230
	Strlength1		= 100
	xLeftStr2		= xLeftStr1 + Strlength1 + 5
	Strlength2		= totalColWidth - xLeftStr2
	yLeftStr1		= pageStartY + 40
	yCurrent		= yLeftStr1
	
	xPict			= 24
	yPict			= 17
	xPictPos		= xLeftStr1 + 70
	yPictPos		= yCurrent + 2
	ui_pict "ui_text_pen_flat(1)", xPictPos, yPictPos, xPict, yPict, 1
	totalColWidth	= 400
	xLeftStr2		= xLeftStr1 + Strlength1 + 5
	Strlength2		= totalColWidth - xLeftStr2
	ui_infield "iLabelTextPen", xLeftStr2, yCurrent, Strlength2, infieldHeight
	ui_infield "labelTextPen", xLeftStr2 + Strlength2 + 5, yCurrent, 35, infieldHeight
	
	yCurrent 		= pageStartY + 78
	xPict			= 30
	yPict			= 20
	xPictPos		= xLeftStr1 - 35
	yPictPos		= yCurrent - 2
	totalColWidth	= uiTotalWidth - 5
	xLeftStr2		= xLeftStr1 + Strlength1 + 5
	Strlength2		= totalColWidth - xLeftStr2
	ui_pict 6, xPictPos, yPictPos, xPict, yPict, 1				!ui_textAlign.png
	ui_outfield `Выравнивание:`, xLeftStr1, yCurrent, Strlength1, outfieldHeight
	yCurrent = yCurrent - textElevInfield
	ui_infield{3} "iLabelTextAlign", xLeftStr2, yCurrent, Strlength2, infieldHeight,
		8, "", 100, 1, 0, 0, 0, 0,
		"", stTextAlign[1], 1,
		"", stTextAlign[2], 2,
		"", stTextAlign[3], 3
	yCurrent = yCurrent + 33
	
	totalColWidth	= 415
	xLeftStr2		= xLeftStr1 + Strlength1 + 5
	Strlength2		= totalColWidth - xLeftStr2
	yPictPos	= yCurrent - 2
	ui_pict 7, xPictPos, yPictPos, xPict, yPict, 1				!ui_textLeading.png
	ui_outfield `Интервал:`, xLeftStr1, yCurrent, Strlength1, outfieldHeight
	yCurrent = yCurrent - textElevInfield
	ui_infield "labelTextLeading", xLeftStr2, yCurrent, Strlength2, infieldHeight
	ui_outfield `%`, totalColWidth + 2, yCurrent + 3, 23, outfieldHeight
	yCurrent = yCurrent + 33
	
	yPictPos	= yCurrent - 2
	ui_pict 9, xPictPos, yPictPos, xPict, yPict, 1	!ui_textWidth.png
	ui_outfield `Ширина Символов:`, xLeftStr1, yCurrent, Strlength1, outfieldHeight
	yCurrent = yCurrent - textElevInfield
	ui_infield "labelTextWidthFactor", xLeftStr2, yCurrent, Strlength2, infieldHeight
	ui_outfield `%`, totalColWidth + 2, yCurrent + 3, 23, outfieldHeight
	yCurrent = yCurrent + 33
	
	yPictPos	= yCurrent - 2
	ui_pict 8, xPictPos, yPictPos, xPict, yPict, 1			!ui_textSpacing.png
	ui_outfield `Межзнаковый Интервал:`, xLeftStr1, yCurrent, Strlength1, outfieldHeight
	yCurrent = yCurrent - textElevInfield
	ui_infield "labelTextSpacingFactor", xLeftStr2, yCurrent, Strlength2, infieldHeight
	ui_outfield `%`, totalColWidth + 2, yCurrent + 3, 23, outfieldHeight
return

"labelPage":
	! === LABEL AND TEXT ===================================================================
	
	totalColWidth	= 294
	xLeftStr1		= 235 - 230
	Strlength1		= 40
	xLeftStr2		= xLeftStr1 + Strlength1 + 5
	Strlength2		= totalColWidth - xLeftStr2
	yLeftStr1		= pageStartY
	yCurrent		= yLeftStr1
	
	ui_style 0, 1
	ui_outfield `Выноска`, xLeftStr1, yCurrent, Strlength1, outfieldHeight
	ui_style 0, 0
	
	yCurrent		= pageStartY + 25
	xPict			= 30
	yPict			= 21
	xPictPos		= xLeftStr1 + 10
	yPictPos		= yCurrent
	ui_pict 10, xPictPos, yPictPos, xPict, yPict, 1		!ui_labelFrame.png
	totalColWidth	= 162
	xLeftStr2		= xLeftStr1 + Strlength1 + 2
	Strlength2		= totalColWidth - xLeftStr2
	ui_infield{3} "bShowLabelFrame", xLeftStr2, yCurrent, 140, booleanHeight,
		7, "", 2, 1, 0, 0, 0, 0,
		"", `Рамка Выносной Надписи`, 0,
		"", `Рамка Выносной Надписи`, 1
	
	ui_infield{3} "bFrameOpaque", xLeftStr2 + 142, yCurrent-4, Strlength2, 28,
		7, "", 2, 1, 0, 0, 0, 0,
		"", `Непрозрачный`, 0,
		"", `Непрозрачный`, 1
	
	yCurrent		= pageStartY + 60
	ui_separator xLeftStr1, yCurrent, uiTotalWidth - 5, yCurrent
	
	totalColWidth	= 215
	xLeftStr1		= 235 - 230
	Strlength1		= 100
	xLeftStr2		= xLeftStr1 + Strlength1 + 5
	Strlength2		= totalColWidth - xLeftStr2
	yLeftStr1		= pageStartY + 78
	yCurrent		= yLeftStr1
	ui_style 0, 1
	ui_outfield `Форма Рамки`, xLeftStr1, yCurrent, Strlength1, outfieldHeight
	ui_style 0, 0
	yCurrent = yCurrent - textElevInfield
	ui_infield{3} "iShapeHeadBox", xLeftStr2, yCurrent, Strlength2, infieldHeight,
		8, "", 100, 1, 0, 0, 0, 0,
		"", stShapeHeadBox[1], 1,
		"", stShapeHeadBox[2], 2,
		"", stShapeHeadBox[3], 3,
		"", stShapeHeadBox[4], 4,
		"", stShapeHeadBox[5], 5,
		"", stShapeHeadBox[6], 6,
		"", stShapeHeadBox[7], 7,
		"", stShapeHeadBox[8], 8
	yCurrent = yCurrent + 34
	
	ui_outfield `Длина`, xLeftStr1, yCurrent, Strlength1, outfieldHeight
	ui_infield "textBoxLengthPaper", xLeftStr2, yCurrent - 4, Strlength2 - 30, infieldHeight
	ui_outfield `мм`, xLeftStr2 + Strlength2 - 28, yCurrent, 30, outfieldHeight, 2
	yCurrent = yCurrent + 30

	ui_outfield `Высота`, xLeftStr1, yCurrent, Strlength1, outfieldHeight, 4 - 4 * bAutoHeadBox
	ui_infield "textBoxHeightPaper", xLeftStr2, yCurrent - 4, Strlength2 - 30, infieldHeight
	ui_outfield `мм`, xLeftStr2 + Strlength2 - 28, yCurrent, 30, outfieldHeight, 2 +  4 - 4 * bAutoHeadBox
	yCurrent = yCurrent + 30

	Strlength1		= 180
	ui_infield{3} "bAutoHeadBox", xLeftStr1, yCurrent, uiTotalWidth / 2 - xLeftStr1 -1, booleanHeight,
		7, "", 2, 1, 0, 0, 0, 0,
		"", `Автоматический Размер Рамки`, 0,
		"", `Автоматический Размер Рамки`, 1
	yCurrent = yCurrent + 30
	
	xPict			= 30
	yPict			= 21
	xPictPos		= xLeftStr1 + 10
	yPictPos		= yCurrent
	Strlength1		= 40
	totalColWidth	= 150
	xLeftStr2		= xLeftStr1 + Strlength1 + 5
	Strlength2		= totalColWidth - xLeftStr2
	ui_pict 11, xPictPos, yPictPos, xPict, yPict, 1			!ui_labelLength.png

	ui_infield "headBoxLengthPaper", xLeftStr2, yCurrent, Strlength2, infieldHeight
	ui_outfield `мм`, xLeftStr2 + Strlength2 + 2, yCurrent + 4, 30, outfieldHeight, 2 + 4 * bAutoHeadBox

	yCurrent = yCurrent + 30
	
	yPictPos		= yCurrent
	ui_pict 14, xPictPos, yPictPos, xPict, yPict, 1			!ui_labelWidth.png

	ui_infield "headBoxWidthPaper", xLeftStr2, yCurrent, Strlength2, infieldHeight
	ui_outfield `мм`, xLeftStr2 + Strlength2 + 2, yCurrent + 4, 30, outfieldHeight, 2 + 4 * (bAutoHeadBox or iShapeHeadBox = HEADSHAPE_CIRCLE)
	
	ui_separator uiTotalWidth / 2, pageStartY + 65, uiTotalWidth / 2, uiTotalHeight - 5
	
	totalColWidth	= 435
	xLeftStr1		= 230
	Strlength1		= 100
	xLeftStr2		= xLeftStr1 + Strlength1 + 5
	Strlength2		= totalColWidth - xLeftStr2
	yLeftStr1		= pageStartY + 25
	yCurrent		= yLeftStr1
	xPict			= 30
	yPict			= 21
	xPictPos		= xLeftStr1 + 75
	yPictPos		= yCurrent
	if bShowLabelFrame and bFrameOpaque then
		ui_pict 12, xPictPos, yPictPos, xPict, yPict, 1			!ui_labelOpaque.png
	else
		ui_pict 13, xPictPos, yPictPos, xPict, yPict, 1		!ui_labelOpaqueLock.png
	endif
	totalColWidth	= 400
	xLeftStr2		= xLeftStr1 + Strlength1 + 10
	Strlength2		= totalColWidth - xLeftStr2
	ui_infield "iFrameOpaquePen", xLeftStr2, yCurrent, Strlength2, infieldHeight
	ui_infield "frameOpaquePen", xLeftStr2 + Strlength2 + 5, yCurrent, 35, infieldHeight
	
	totalColWidth	= 435
	xLeftStr1		= 230
	Strlength1		= 209
	xLeftStr2		= xLeftStr1 + Strlength1 + 5
	Strlength2		= totalColWidth - xLeftStr2
	yLeftStr1		= pageStartY + 78
	yCurrent		= yLeftStr1
	ui_style 0, 1
	ui_outfield `Заголовок`, xLeftStr1, yCurrent, Strlength1, outfieldHeight
	ui_style 0, 0
	yCurrent = yCurrent + 20
	
	ui_infield "titleText", xLeftStr1, yCurrent, Strlength1, infieldHeight
	yCurrent = yCurrent + 25
	
	ui_style 0, 1
	ui_outfield `Текст`, xLeftStr1, yCurrent, Strlength1, outfieldHeight
	ui_style 0, 0
	yCurrent = yCurrent + 20
	
	ui_infield "labelText", xLeftStr1, yCurrent, Strlength1, infieldHeight
	yCurrent = yCurrent + 25
	
	ui_outfield `Ориентация Текста в Символе`, xLeftStr1, yCurrent, Strlength1, outfieldHeight
	yCurrent = yCurrent + 20
	
	xLeftStr1		= 230 + 50
	ui_infield{3} "iTextOrientation", xLeftStr1, yCurrent, Strlength1 - 50, infieldHeight,
		8, "", 100, 1, 0, 0, 0, 0,
		"", stTextOrientation[1], 1,
		"", stTextOrientation[2], 2
return




]]>
</Script_UI>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_VL SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
values "gs_ui_current_page" 1, 2, 3, 4

values "pointerType" stPointerType
values "iPointerType" 1, 2
if GLOB_MODPAR_NAME = "pointerType" then
	for i = 1 to vardim1(stPointerType)
	   if pointerType = stPointerType[i]	then iPointerType = i
	next i
	parameters iPointerType = iPointerType
else
	pointerType = stPointerType[max(min(iPointerType,vardim1(stPointerType)),1)]
	parameters pointerType = pointerType
endif

values{2} "iLineConnType"	LINECONNTYPE_UP,		stLineConnType[1],
							LINECONNTYPE_CENTER,	stLineConnType[2],
							LINECONNTYPE_LO,		stLineConnType[3],
							LINECONNTYPE_UTEXT,		stLineConnType[4],
							LINECONNTYPE_UTITLE,	stLineConnType[5]


if bShowLabelFrame and iShapeHeadBox <> HEADSHAPE_RECT then
	iLineConnType = LINECONNTYPE_CENTER
	parameters iLineConnType = iLineConnType
	lock			"iLineConnType"
	hideparameter	"iLineConnType"
endif

values "arrowHeadType" stArrowHeadType
values "iArrowHeadType" 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14
if GLOB_MODPAR_NAME = "arrowHeadType" then
	for i = 1 to vardim1(stArrowHeadType)
	   if arrowHeadType = stArrowHeadType[i]	then iArrowHeadType = i
	next i
	parameters iArrowHeadType = iArrowHeadType
else
	arrowHeadType = stArrowHeadType[max(min(iArrowHeadType,vardim1(stArrowHeadType)),1)]
	parameters arrowHeadType = arrowHeadType
endif

values "textOrientation" stTextOrientation
values "iTextOrientation" 1, 2
if GLOB_MODPAR_NAME = "textOrientation" then
	for i = 1 to vardim1(stTextOrientation)
	   if textOrientation = stTextOrientation[i]	then iTextOrientation = i
	next i
	parameters iTextOrientation = iTextOrientation
else
	textOrientation = stTextOrientation[min(max(iTextOrientation, 1), vardim1(stTextOrientation))]
	parameters textOrientation = textOrientation
endif

values "titleTextAlign" stTextAlign
values "iTitleTextAlign" 1, 2, 3
if GLOB_MODPAR_NAME = "titleTextAlign" then
	for i = 1 to vardim1(stTextAlign)
	   if titleTextAlign = stTextAlign[i]	then iTitleTextAlign = i
	next i
	parameters iTitleTextAlign = iTitleTextAlign
else
	titleTextAlign = stTextAlign[max(min(iTitleTextAlign,vardim1(stTextAlign)),1)]
	parameters titleTextAlign = titleTextAlign
endif

values "labelTextAlign" stTextAlign
values "iLabelTextAlign" 1, 2, 3
if GLOB_MODPAR_NAME = "labelTextAlign" then
	for i = 1 to vardim1(stTextAlign)
	   if labelTextAlign = stTextAlign[i]	then iLabelTextAlign = i
	next i
	parameters iLabelTextAlign = iLabelTextAlign
else
	labelTextAlign = stTextAlign[max(min(iLabelTextAlign,vardim1(stTextAlign)),1)]
	parameters labelTextAlign = labelTextAlign
endif

values "shapeHeadBox" stShapeHeadBox
values "iShapeHeadBox" 1, 2, 3, 4, 5, 6, 7, 8
if GLOB_MODPAR_NAME = "shapeHeadBox" then
	for i = 1 to vardim1(stShapeHeadBox)
		if shapeHeadBox = stShapeHeadBox[i]	then  iShapeHeadBox = i
	next i
	parameters iShapeHeadBox = iShapeHeadBox
else
	shapeHeadBox = stShapeHeadBox[min(max(iShapeHeadBox,1),vardim1(stShapeHeadBox))]
	parameters shapeHeadBox = shapeHeadBox
endif

values "iPointerNumSide1" range[0, 5]
values "iPointerNumSide2" range[0, 5]

if (textBoxLengthPaper < minTextBoxLengthPaper) or (textBoxLengthPaper_M < minTextBoxLengthPaper / 1000) then
	textBoxLengthPaper = minTextBoxLengthPaper
	textBoxLengthPaper_M = minTextBoxLengthPaper / 1000

	parameters 	textBoxLengthPaper = textBoxLengthPaper,
				textBoxLengthPaper_M = textBoxLengthPaper_M
endif

if GLOB_MODPAR_NAME <> "" then
	if	GLOB_MODPAR_NAME = "textBoxLengthPaper_M" or\
		GLOB_MODPAR_NAME = "titleTextWidthFactor" or GLOB_MODPAR_NAME = "titleTextSpacingFactor" or\
		GLOB_MODPAR_NAME = "labelTextWidthFactor" or GLOB_MODPAR_NAME = "labelTextSpacingFactor" then

		if	GLOB_MODPAR_NAME = "textBoxLengthPaper_M" or\
			((titleTextWidthMod < labelTextWidthMod) and (GLOB_MODPAR_NAME = "titleTextWidthFactor" or GLOB_MODPAR_NAME = "titleTextSpacingFactor")) or\
			((titleTextWidthMod > labelTextWidthMod) and (GLOB_MODPAR_NAME = "labelTextWidthFactor" or GLOB_MODPAR_NAME = "labelTextSpacingFactor")) then

			textBoxLengthPaper = textBoxLengthPaper_M * 1000
		else
			if GLOB_MODPAR_NAME = "titleTextWidthFactor" or GLOB_MODPAR_NAME = "titleTextSpacingFactor" then

				textBoxLengthPaper = textBoxLengthPaper_M * 1000 * titleTextWidthMod
			endif
			if GLOB_MODPAR_NAME = "labelTextWidthFactor" or GLOB_MODPAR_NAME = "labelTextSpacingFactor" then

				textBoxLengthPaper = textBoxLengthPaper_M * 1000 * labelTextWidthMod
			endif
		endif

		parameters textBoxLengthPaper = textBoxLengthPaper
	else
		textBoxLengthPaper_M = textBoxLengthPaper / 1000
		parameters textBoxLengthPaper_M = textBoxLengthPaper_M
	endif
endif

if GLOB_MODPAR_NAME = "textBoxHeightPaper_M" then
	textBoxHeightPaper = textBoxHeightPaper_M * 1000
	parameters textBoxHeightPaper = textBoxHeightPaper
else
	textBoxHeightPaper_M = textBoxHeightPaper / 1000
	parameters textBoxHeightPaper_M = textBoxHeightPaper_M
endif

if iShapeHeadBox = HEADSHAPE_CIRCLE then
	if bAutoHeadBox then
		headBoxOffsetLeftRightPaper = SQR(textBoxLengthPaper**2 + textBoxHeightPaper**2) / 2 - MAX(textBoxLengthPaper,textBoxHeightPaper) / 2
		headBoxOffsetUpDownPaper 	= headBoxOffsetLeftRightPaper
		headBoxOffsetLeftRightPaper_M = headBoxOffsetLeftRightPaper / 1000
		headBoxOffsetUpDownPaper_M = headBoxOffsetUpDownPaper / 1000

		parameters 	headBoxOffsetLeftRightPaper	= headBoxOffsetLeftRightPaper,
					headBoxOffsetUpDownPaper	= headBoxOffsetUpDownPaper,
					headBoxOffsetLeftRightPaper_M = headBoxOffsetLeftRightPaper_M,
					headBoxOffsetUpDownPaper_M	= headBoxOffsetUpDownPaper_M

	endif

	if	GLOB_MODPAR_NAME = "headBoxOffsetLeftRightPaper" then

		headBoxLengthPaper	= MAX(textBoxLengthPaper, textBoxHeightPaper) + headBoxOffsetLeftRightPaper * 2
		parameters	headBoxLengthPaper	= headBoxLengthPaper

		headBoxWidthPaper	= headBoxLengthPaper
		parameters	headBoxWidthPaper	= headBoxWidthPaper

		headBoxOffsetUpDownPaper	= headBoxOffsetLeftRightPaper
		parameters	headBoxOffsetUpDownPaper	= headBoxOffsetUpDownPaper

		headBoxOffsetUpDownPaper_M	= headBoxOffsetUpDownPaper / 1000
		parameters	headBoxOffsetUpDownPaper_M	= headBoxOffsetUpDownPaper_M

		headBoxOffsetLeftRightPaper_M	= headBoxOffsetLeftRightPaper / 1000
		parameters	headBoxOffsetLeftRightPaper_M	= headBoxOffsetLeftRightPaper_M
	else
		if GLOB_MODPAR_NAME = "headBoxLengthPaper" or GLOB_MODPAR_NAME = "headBoxWidthPaper" then

			headBoxOffsetLeftRightPaper	= (headBoxLengthPaper - MAX(textBoxLengthPaper, textBoxHeightPaper)) / 2
			headBoxOffsetUpDownPaper	= headBoxOffsetLeftRightPaper
			headBoxOffsetLeftRightPaper_M = headBoxOffsetLeftRightPaper / 1000
			headBoxOffsetUpDownPaper_M	= headBoxOffsetUpDownPaper / 1000

			parameters	headBoxOffsetLeftRightPaper	= headBoxOffsetLeftRightPaper,
						headBoxOffsetUpDownPaper	= headBoxOffsetUpDownPaper,
						headBoxOffsetLeftRightPaper_M = headBoxOffsetLeftRightPaper_M,
						headBoxOffsetUpDownPaper_M = headBoxOffsetUpDownPaper_M
		else
			if GLOB_MODPAR_NAME = "headBoxOffsetLeftRightPaper_M" then
				headBoxLengthPaper	= MAX(textBoxLengthPaper, textBoxHeightPaper) + headBoxOffsetLeftRightPaper_M * 1000 * 2
				headBoxWidthPaper	= headBoxLengthPaper
				headBoxOffsetLeftRightPaper = headBoxOffsetLeftRightPaper_M * 1000
				headBoxOffsetUpDownPaper = headBoxOffsetLeftRightPaper_M * 1000
				headBoxOffsetUpDownPaper_M = headBoxOffsetLeftRightPaper_M

				parameters	headBoxLengthPaper	= headBoxLengthPaper,
							headBoxWidthPaper	= headBoxWidthPaper,
							headBoxOffsetLeftRightPaper = headBoxOffsetLeftRightPaper,
							headBoxOffsetUpDownPaper = headBoxOffsetUpDownPaper,
							headBoxOffsetUpDownPaper_M = headBoxOffsetUpDownPaper_M 
		else
			headBoxLengthPaper	= MAX(textBoxLengthPaper, textBoxHeightPaper) + headBoxOffsetLeftRightPaper * 2
			headBoxWidthPaper	= headBoxLengthPaper
			parameters	headBoxLengthPaper	= headBoxLengthPaper,
						headBoxWidthPaper	= headBoxWidthPaper
			endif
		endif
	endif

	values "headBoxLengthPaper" range [MAX(textBoxLengthPaper, textBoxHeightPaper),)
	values "headBoxWidthPaper" range [MAX(textBoxLengthPaper, textBoxHeightPaper),)

	values "headBoxOffsetLeftRightPaper" range [0,)
	values "headBoxOffsetUpDownPaper" range [0,)

else
	if bAutoHeadBox then
		if iShapeHeadBox = HEADSHAPE_RECT then
			headBoxOffsetLeftRightPaper = 0
			headBoxOffsetUpDownPaper 	= 0
			headBoxOffsetLeftRightPaper_M = 0
			headBoxOffsetUpDownPaper_M 	= 0

			parameters 	headBoxOffsetLeftRightPaper	= headBoxOffsetLeftRightPaper,
						headBoxOffsetUpDownPaper	= headBoxOffsetUpDownPaper,
						headBoxOffsetLeftRightPaper_M	= headBoxOffsetLeftRightPaper_M,
						headBoxOffsetUpDownPaper_M	= headBoxOffsetUpDownPaper_M


		endif
		if iShapeHeadBox = HEADSHAPE_DIAMOND then
			headBoxOffsetLeftRightPaper = textBoxHeightPaper / 2
			headBoxOffsetUpDownPaper 	= textBoxLengthPaper / 2
			headBoxOffsetLeftRightPaper_M = textBoxHeightPaper / 2 / 1000
			headBoxOffsetUpDownPaper_M 	= textBoxLengthPaper / 2 / 1000

			parameters 	headBoxOffsetLeftRightPaper	= headBoxOffsetLeftRightPaper,
						headBoxOffsetUpDownPaper	= headBoxOffsetUpDownPaper,
						headBoxOffsetLeftRightPaper_M	= headBoxOffsetLeftRightPaper_M,
						headBoxOffsetUpDownPaper_M	= headBoxOffsetUpDownPaper_M

		endif
		if iShapeHeadBox = HEADSHAPE_ELLIPSE then
			headBoxOffsetLeftRightPaper = textBoxHeightPaper / 2
			headBoxOffsetUpDownPaper 	= textBoxHeightPaper / 2
			headBoxOffsetLeftRightPaper_M = textBoxHeightPaper / 2 / 1000
			headBoxOffsetUpDownPaper_M 	= textBoxHeightPaper / 2 / 1000

			parameters 	headBoxOffsetLeftRightPaper	= headBoxOffsetLeftRightPaper,
						headBoxOffsetUpDownPaper	= headBoxOffsetUpDownPaper,
						headBoxOffsetLeftRightPaper_M	= headBoxOffsetLeftRightPaper_M,
						headBoxOffsetUpDownPaper_M	= headBoxOffsetUpDownPaper_M

		endif
		if iShapeHeadBox = HEADSHAPE_OVAL then
			headBoxOffsetLeftRightPaper = textBoxHeightPaper / 2
			headBoxOffsetUpDownPaper 	= 0
			headBoxOffsetLeftRightPaper_M = textBoxHeightPaper / 2 / 1000
			headBoxOffsetUpDownPaper_M 	= 0 / 1000

			parameters 	headBoxOffsetLeftRightPaper	= headBoxOffsetLeftRightPaper,
						headBoxOffsetUpDownPaper	= headBoxOffsetUpDownPaper,
						headBoxOffsetLeftRightPaper_M	= headBoxOffsetLeftRightPaper_M,
						headBoxOffsetUpDownPaper_M	= headBoxOffsetUpDownPaper_M

		endif
		if iShapeHeadBox = HEADSHAPE_HEXAGON then
			headBoxOffsetLeftRightPaper 	= textBoxHeightPaper / 2
			headBoxOffsetUpDownPaper 		= textBoxHeightPaper / 2
			headBoxOffsetLeftRightPaper_M 	= textBoxHeightPaper / 2 / 1000
			headBoxOffsetUpDownPaper_M 		= textBoxHeightPaper / 2 / 1000
			headShapeSidePointXPosPaper 	= textBoxHeightPaper
			headShapeSidePointXPosPaper_M 	= textBoxHeightPaper / 1000

			parameters 	headBoxOffsetLeftRightPaper	= headBoxOffsetLeftRightPaper,
						headBoxOffsetUpDownPaper	= headBoxOffsetUpDownPaper,
						headShapeSidePointXPosPaper = headShapeSidePointXPosPaper,
						headShapeSidePointXPosPaper_M = headShapeSidePointXPosPaper_M,
						headBoxOffsetLeftRightPaper_M	= headBoxOffsetLeftRightPaper_M,
						headBoxOffsetUpDownPaper_M	= headBoxOffsetUpDownPaper_M

		endif
		if iShapeHeadBox = HEADSHAPE_OCTOGON then
			headBoxOffsetLeftRightPaper = 0
			headBoxOffsetUpDownPaper 	= textBoxHeightPaper
			headBoxOffsetLeftRightPaper_M = 0
			headBoxOffsetUpDownPaper_M 	= textBoxHeightPaper / 1000
			headShapeSidePointXPosPaper		= headBoxLengthPaper / 3
			headShapeSidePointXPosPaper_M	= headBoxLengthPaper / 1000 / 3

			parameters 	headBoxOffsetLeftRightPaper	= headBoxOffsetLeftRightPaper,
						headBoxOffsetUpDownPaper	= headBoxOffsetUpDownPaper,
						headShapeSidePointXPosPaper	= headShapeSidePointXPosPaper,
						headShapeSidePointXPosPaper_M = headShapeSidePointXPosPaper_M,
						headBoxOffsetLeftRightPaper_M	= headBoxOffsetLeftRightPaper_M,
						headBoxOffsetUpDownPaper_M	= headBoxOffsetUpDownPaper_M
		endif
		if iShapeHeadBox = HEADSHAPE_POINTED_RECT then
			headBoxOffsetLeftRightPaper = textBoxHeightPaper / 3
			headBoxOffsetUpDownPaper 	= 0
			headBoxOffsetLeftRightPaper_M = textBoxHeightPaper / 3 / 1000
			headBoxOffsetUpDownPaper_M 	= 0

			parameters 	headBoxOffsetLeftRightPaper	= headBoxOffsetLeftRightPaper,
						headBoxOffsetUpDownPaper	= headBoxOffsetUpDownPaper,
						headBoxOffsetLeftRightPaper_M	= headBoxOffsetLeftRightPaper_M,
						headBoxOffsetUpDownPaper_M	= headBoxOffsetUpDownPaper_M

		endif
	endif

	if	GLOB_MODPAR_NAME = "headBoxOffsetLeftRightPaper" or GLOB_MODPAR_NAME = "headBoxOffsetUpDownPaper" then

		if GLOB_MODPAR_NAME = "headBoxOffsetLeftRightPaper" then
			headBoxLengthPaper	= textBoxLengthPaper + headBoxOffsetLeftRightPaper * 2
			parameters	headBoxLengthPaper	= headBoxLengthPaper

			headBoxOffsetLeftRightPaper_M	= headBoxOffsetLeftRightPaper / 1000
			parameters	headBoxOffsetLeftRightPaper_M	= headBoxOffsetLeftRightPaper_M
		else
			headBoxWidthPaper	= textBoxHeightPaper + headBoxOffsetUpDownPaper * 2
			parameters	headBoxWidthPaper	= headBoxWidthPaper

			headBoxOffsetUpDownPaper_M	= headBoxOffsetUpDownPaper/ 1000
			parameters	headBoxOffsetUpDownPaper_M	= headBoxOffsetUpDownPaper_M
		endif
	else
		if GLOB_MODPAR_NAME = "headBoxLengthPaper" or GLOB_MODPAR_NAME = "headBoxWidthPaper" then

			headBoxOffsetLeftRightPaper	= (headBoxLengthPaper - textBoxLengthPaper) / 2
			headBoxOffsetUpDownPaper	= (headBoxWidthPaper - textBoxHeightPaper) / 2
			parameters	headBoxOffsetLeftRightPaper	= headBoxOffsetLeftRightPaper,
						headBoxOffsetUpDownPaper	= headBoxOffsetUpDownPaper

			headBoxOffsetLeftRightPaper_M	= headBoxOffsetLeftRightPaper / 1000
			headBoxOffsetUpDownPaper_M	= headBoxOffsetUpDownPaper/ 1000
			parameters	headBoxOffsetLeftRightPaper_M	= headBoxOffsetLeftRightPaper_M,
						headBoxOffsetUpDownPaper_M = headBoxOffsetUpDownPaper_M
			
		else
			if GLOB_MODPAR_NAME = "headBoxOffsetLeftRightPaper_M" or GLOB_MODPAR_NAME = "headBoxOffsetUpDownPaper_M" then

				if GLOB_MODPAR_NAME = "headBoxOffsetLeftRightPaper_M" then
				headBoxOffsetLeftRightPaper	= headBoxOffsetLeftRightPaper_M * 1000
				headBoxLengthPaper	= textBoxLengthPaper + headBoxOffsetLeftRightPaper_M * 1000 * 2
	
					parameters	headBoxOffsetLeftRightPaper	= headBoxOffsetLeftRightPaper,
								headBoxLengthPaper	= headBoxLengthPaper
				else
					headBoxOffsetUpDownPaper	= headBoxOffsetUpDownPaper_M * 1000
				headBoxWidthPaper	= textBoxHeightPaper + headBoxOffsetUpDownPaper_M * 1000 * 2
	
				parameters	headBoxOffsetUpDownPaper = headBoxOffsetUpDownPaper,
							headBoxWidthPaper	= headBoxWidthPaper
				endif
		else
			headBoxLengthPaper	= textBoxLengthPaper + headBoxOffsetLeftRightPaper * 2
			headBoxWidthPaper	= textBoxHeightPaper + headBoxOffsetUpDownPaper * 2
			parameters	headBoxLengthPaper	= headBoxLengthPaper,
						headBoxWidthPaper	= headBoxWidthPaper
			endif
		endif
	endif

	values "headBoxLengthPaper" range [textBoxLengthPaper,)
	values "headBoxWidthPaper" range [textBoxHeightPaper,)

	values "headBoxOffsetLeftRightPaper" range [0,)
	values "headBoxOffsetUpDownPaper" range [0,)
endif

if	GLOB_MODPAR_NAME = "headShapeSidePointXPosPaper_M" then
	headShapeSidePointXPosPaper = headShapeSidePointXPosPaper_M * 1000
	parameters	headShapeSidePointXPosPaper = headShapeSidePointXPosPaper
else
	headShapeSidePointXPosPaper_M	= headShapeSidePointXPosPaper / 1000
	parameters	headShapeSidePointXPosPaper_M	= headShapeSidePointXPosPaper_M
endif

if	GLOB_MODPAR_NAME = "totalCommonPointLeftPosX" or GLOB_MODPAR_NAME = "textBoxPosX" then

	commonPointLeftPosX	= totalCommonPointLeftPosX - textBoxPosX
	parameters	commonPointLeftPosX	= commonPointLeftPosX
else
	totalCommonPointLeftPosX	= textBoxPosX + commonPointLeftPosX
	parameters	totalCommonPointLeftPosX	= totalCommonPointLeftPosX
endif

if	GLOB_MODPAR_NAME = "totalCommonPointRightPosX" or GLOB_MODPAR_NAME = "textBoxPosX" then

	commonPointRightPosX		= totalCommonPointRightPosX - textBoxPosX 
	parameters	commonPointRightPosX	= commonPointRightPosX
else
	totalCommonPointRightPosX	= commonPointRightPosX + textBoxPosX 
	parameters	totalCommonPointRightPosX	= totalCommonPointRightPosX
endif

values "commonPointRightPosX" range[0,]

if NOT(bHideArrowHead) then
	lock			"hideArrowHeadFrom"

	hideparameter	"hideArrowHeadFrom"
endif
if NOT(bShowLabelFrame) then
	lock			"shapeHeadBox",
					"iShapeHeadBox",
					"bAutoHeadBox",
					"headBoxLengthPaper",
					"headBoxWidthPaper",
					"bFrameOpaque",
					"frameOpaquePen",
					"iFrameOpaquePen"

	hideparameter	"shapeHeadBox",
					"iShapeHeadBox",
					"bAutoHeadBox",
					"headBoxLengthPaper",
					"headBoxWidthPaper",
					"bFrameOpaque",
					"frameOpaquePen",
					"iFrameOpaquePen"
endif
if bAutoHeadBox then
	lock			"headBoxLengthPaper",
					"headBoxWidthPaper"
else
	lock			"textBoxHeightPaper"
endif
if NOT(bFrameOpaque) then
	lock			"frameOpaquePen",
					"iFrameOpaquePen"

	hideparameter	"frameOpaquePen",
					"iFrameOpaquePen"
endif
if iShapeHeadBox = HEADSHAPE_CIRCLE then
	lock			"headBoxWidthPaper"
endif

if titleTextLeading < 50 then
	titleTextLeading = 50
	parameters titleTextLeading = titleTextLeading
endif
if titleTextLeading > 1000 then
	titleTextLeading = 1000
	parameters titleTextLeading = titleTextLeading
endif
if titleTextWidthFactor < 50 then
	titleTextWidthFactor = 50
	parameters titleTextWidthFactor = titleTextWidthFactor
endif
if titleTextWidthFactor > 1000 then
	titleTextWidthFactor = 1000
	parameters titleTextWidthFactor = titleTextWidthFactor
endif
if titleTextSpacingFactor < 75 then
	titleTextSpacingFactor = 75
	parameters titleTextSpacingFactor = titleTextSpacingFactor
endif
if titleTextSpacingFactor > 1000 then
	titleTextSpacingFactor = 1000
	parameters titleTextSpacingFactor = titleTextSpacingFactor
endif

if labelTextLeading < 50 then
	labelTextLeading = 50
	parameters labelTextLeading = labelTextLeading
endif
if labelTextLeading > 1000 then
	labelTextLeading = 1000
	parameters labelTextLeading = labelTextLeading
endif
if labelTextWidthFactor < 50 then
	labelTextWidthFactor = 50
	parameters labelTextWidthFactor = labelTextWidthFactor
endif
if labelTextWidthFactor > 1000 then
	labelTextWidthFactor = 1000
	parameters labelTextWidthFactor = labelTextWidthFactor
endif
if labelTextSpacingFactor < 75 then
	labelTextSpacingFactor = 75
	parameters labelTextSpacingFactor = labelTextSpacingFactor
endif
if labelTextSpacingFactor > 1000 then
	labelTextSpacingFactor = 1000
	parameters labelTextSpacingFactor = labelTextSpacingFactor
endif

if NOT(bPointerOnBothSides) then
	lock			"iPointerNumSide2"

	hideparameter	"iPointerNumSide2"
endif

if NOT(bEnablePointersOnSide1) and NOT(bEnablePointersOnSide2) then
	lock			"pointerType",
					"iPointerType",
					"pointerLineType",
					"iLineConnType",
					"bHideArrowHead",
					"hideArrowHeadFrom",
					"arrowHeadType",
					"iArrowHeadType",
					"arrowHeadSizePaper",
					"arrowHeadPen",
					"iArrowHeadPen"

	hideparameter	"pointerType",
					"iPointerType",
					"pointerLineType",
					"iLineConnType",
					"bHideArrowHead",
					"hideArrowHeadFrom",
					"arrowHeadType",
					"iArrowHeadType",
					"arrowHeadSizePaper",
					"arrowHeadPen",
					"iArrowHeadPen"

	if NOT(bShowLabelFrame) then
		lock			"pointerPen",
						"iPointerPen"

		hideparameter	"pointerPen",
						"iPointerPen"
	endif
endif

hideparameter "A", "B"
lock "A", "B"

!=============================================================================
! Pen Colors
!=============================================================================

if pointerPen			< 1 then pointerPen			= 1
if arrowHeadPen			< 1 then arrowHeadPen		= 1
if titleTextPen			< 1 then titleTextPen		= 1
if labelTextPen			< 1 then labelTextPen		= 1
if frameOpaquePen		< -1 then frameOpaquePen	= -1

if pointerPen			> 255 then pointerPen		= 255
if arrowHeadPen			> 255 then arrowHeadPen		= 255
if titleTextPen			> 255 then titleTextPen		= 255
if labelTextPen			> 255 then labelTextPen		= 255
if frameOpaquePen		> 255 then frameOpaquePen	= 255

parameters 	pointerPen		= pointerPen,
			arrowHeadPen	= arrowHeadPen,
			titleTextPen	= titleTextPen,
			labelTextPen	= labelTextPen,
			frameOpaquePen	= frameOpaquePen

if iPointerPen			< 1 then iPointerPen		= 1
if iArrowHeadPen		< 1 then iArrowHeadPen		= 1
if iTitleTextPen		< 1 then iTitleTextPen		= 1
if iLabelTextPen		< 1 then iLabelTextPen		= 1
if iFrameOpaquePen		< -1 then iFrameOpaquePen	= -1

if iPointerPen			> 255 then iPointerPen		= 255
if iArrowHeadPen		> 255 then iArrowHeadPen	= 255
if iTitleTextPen		> 255 then iTitleTextPen	= 255
if iLabelTextPen		> 255 then iLabelTextPen	= 255
if iFrameOpaquePen		> 255 then iFrameOpaquePen	= 255

parameters 	iPointerPen		= iPointerPen,
			iArrowHeadPen	= iArrowHeadPen,
			iTitleTextPen	= iTitleTextPen,
			iLabelTextPen	= iLabelTextPen,
			iFrameOpaquePen	= iFrameOpaquePen

if GLOB_MODPAR_NAME = "iPointerPen" then
	pointerPen = iPointerPen
	parameters pointerPen = pointerPen
else
	iPointerPen = pointerPen
	parameters iPointerPen = iPointerPen
endif

if GLOB_MODPAR_NAME = "iArrowHeadPen" then
	arrowHeadPen = iArrowHeadPen
	parameters arrowHeadPen = arrowHeadPen
else
	iArrowHeadPen = arrowHeadPen
	parameters iArrowHeadPen = iArrowHeadPen
endif

if GLOB_MODPAR_NAME = "iTitleTextPen" then
	titleTextPen = iTitleTextPen
	parameters titleTextPen = titleTextPen
else
	iTitleTextPen = titleTextPen
	parameters iTitleTextPen = iTitleTextPen
endif

if GLOB_MODPAR_NAME = "iLabelTextPen" then
	labelTextPen = iLabelTextPen
	parameters labelTextPen = labelTextPen
else
	iLabelTextPen = labelTextPen
	parameters iLabelTextPen = iLabelTextPen
endif

if GLOB_MODPAR_NAME = "iFrameOpaquePen" then
	frameOpaquePen = iFrameOpaquePen
	parameters frameOpaquePen = frameOpaquePen
else
	iFrameOpaquePen = frameOpaquePen
	parameters iFrameOpaquePen = iFrameOpaquePen
endif


]]>
</Script_VL>

<Comment SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Comment>

<ParamSection SectVersion="22" SectionFlags="0" SubIdent="0">
	<ParamSectHeader>
		<AutoHotspots>false</AutoHotspots>
		<StatBits>
			<STBit_UIDefault/>
			<STBit_FixSize/>
			<STBit_UIUseHierarchicalPages/>
		</StatBits>
		<WDLeftFrame>0</WDLeftFrame>
		<WDRightFrame>0</WDRightFrame>
		<WDTopFrame>0</WDTopFrame>
		<WDBotFrame>0</WDBotFrame>
		<LayFlags>65535</LayFlags>
		<WDMirrorThickness>0</WDMirrorThickness>
		<WDWallInset>0</WDWallInset>
	</ParamSectHeader>
	<Parameters>
		<Length Name="A">
			<Description><![CDATA["Длина Рамки Текста"]]></Description>
			<Fix/>
			<Value>3</Value>
		</Length>
		<Length Name="B">
			<Description><![CDATA["Высота Рамки Текста"]]></Description>
			<Fix/>
			<Value>1.23</Value>
		</Length>
		<RealNum Name="textBoxLengthPaper">
			<Description><![CDATA["Длина Рамки Текста"]]></Description>
			<Value>30</Value>
		</RealNum>
		<RealNum Name="textBoxHeightPaper">
			<Description><![CDATA["Высота Рамки Текста"]]></Description>
			<Value>12.3</Value>
		</RealNum>
		<RealNum Name="textBoxLengthPaper_M">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.03</Value>
		</RealNum>
		<RealNum Name="textBoxHeightPaper_M">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.0123</Value>
		</RealNum>
		<String Name="titleText">
			<Description><![CDATA["Заголовок"]]></Description>
			<Value><![CDATA["<Заголовок>"]]></Value>
		</String>
		<String Name="labelText">
			<Description><![CDATA["Текст"]]></Description>
			<Value><![CDATA["<Текст Выноски>"]]></Value>
		</String>

		<!-- titlePointer: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="titlePointer">
			<Description><![CDATA["Выносная Линия"]]></Description>
		</Title>
		<String Name="pointerType">
			<Description><![CDATA["Тип"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Прямой"]]></Value>
		</String>
		<Integer Name="iPointerType">
			<Description><![CDATA["Тип"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<LineType Name="pointerLineType">
			<Description><![CDATA["Тип Линии"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</LineType>
		<PenColor Name="pointerPen">
			<Description><![CDATA["Перо"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>85</Value>
		</PenColor>
		<Integer Name="iPointerPen">
			<Description><![CDATA["Перо"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>85</Value>
		</Integer>
		<Integer Name="iLineConnType">
			<Description><![CDATA["Соединение Линии с Текстом"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="bPointerOnBothSides">
			<Description><![CDATA["Выносные Линии с Обеих Сторон"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="iPointerNumSide1">
			<Description><![CDATA["Количество Выносных Линий со Стороны 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3</Value>
		</Integer>
		<Integer Name="iPointerNumSide2">
			<Description><![CDATA["Количество Выносных Линий со Стороны 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3</Value>
		</Integer>

		<!-- titleArrowhead: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="titleArrowhead">
			<Description><![CDATA["Стрелка"]]></Description>
		</Title>
		<String Name="arrowHeadType">
			<Description><![CDATA["Тип"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Тип 1"]]></Value>
		</String>
		<Integer Name="iArrowHeadType">
			<Description><![CDATA["Тип"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<RealNum Name="arrowHeadSizePaper">
			<Description><![CDATA["Размер (мм)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</RealNum>
		<PenColor Name="arrowHeadPen">
			<Description><![CDATA["Перо"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>45</Value>
		</PenColor>
		<Integer Name="iArrowHeadPen">
			<Description><![CDATA["Перо"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>45</Value>
		</Integer>
		<Boolean Name="bHideArrowHead">
			<Description><![CDATA["Скрыть Стрелку с"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="hideArrowHeadFrom">
			<Description><![CDATA["Скрыть Стрелку с 1:"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1000</Value>
		</Integer>

		<!-- titleTitleStyle: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="titleTitleStyle">
			<Description><![CDATA["Стиль Заголовка"]]></Description>
		</Title>
		<PenColor Name="titleTextPen">
			<Description><![CDATA["Перо Текста"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>46</Value>
		</PenColor>
		<Integer Name="iTitleTextPen">
			<Description><![CDATA["Перо Текста"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>46</Value>
		</Integer>
		<String Name="titleTextFontType">
			<Description><![CDATA["Тип Шрифта"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Arial"]]></Value>
		</String>
		<RealNum Name="titleTextFontSize">
			<Description><![CDATA["Размер Шрифта (мм)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3.3</Value>
		</RealNum>
		<Boolean Name="bTitleTextFontBO">
			<Description><![CDATA["Жирный Шрифт"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="bTitleTextFontIT">
			<Description><![CDATA["Курсивный Шрифт"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bTitleTextFontUL">
			<Description><![CDATA["Стиль Шрифта - Подчеркнутый"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bTitleTextFontST">
			<Description><![CDATA["Стиль Шрифта - Зачеркнутый"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<String Name="titleTextAlign">
			<Description><![CDATA["Выравнивание Текста"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Слева"]]></Value>
		</String>
		<Integer Name="iTitleTextAlign">
			<Description><![CDATA["Выравнивание Текста"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="titleTextLeading">
			<Description><![CDATA["Интервал (%)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>100</Value>
		</Integer>
		<Integer Name="titleTextWidthFactor">
			<Description><![CDATA["Ширина Символов (%)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>100</Value>
		</Integer>
		<Integer Name="titleTextSpacingFactor">
			<Description><![CDATA["Межзнаковый Интервал (%)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>100</Value>
		</Integer>

		<!-- titleTextStyle: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="titleTextStyle">
			<Description><![CDATA["Стиль Текста"]]></Description>
		</Title>
		<PenColor Name="labelTextPen">
			<Description><![CDATA["Перо Текста"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>46</Value>
		</PenColor>
		<Integer Name="iLabelTextPen">
			<Description><![CDATA["Перо Текста"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>46</Value>
		</Integer>
		<String Name="labelTextFontType">
			<Description><![CDATA["Тип Шрифта"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Arial"]]></Value>
		</String>
		<RealNum Name="labelTextFontSize">
			<Description><![CDATA["Размер Шрифта (мм)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3</Value>
		</RealNum>
		<Boolean Name="bLabelTextFontBO">
			<Description><![CDATA["Жирный Шрифт"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bLabelTextFontIT">
			<Description><![CDATA["Курсивный Шрифт"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bLabelTextFontUL">
			<Description><![CDATA["Стиль Шрифта - Подчеркнутый"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bLabelTextFontST">
			<Description><![CDATA["Стиль Шрифта - Зачеркнутый"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<String Name="labelTextAlign">
			<Description><![CDATA["Выравнивание Текста"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Слева"]]></Value>
		</String>
		<Integer Name="iLabelTextAlign">
			<Description><![CDATA["Выравнивание Текста"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="labelTextLeading">
			<Description><![CDATA["Интервал (%)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>100</Value>
		</Integer>
		<Integer Name="labelTextWidthFactor">
			<Description><![CDATA["Ширина Символов (%)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>100</Value>
		</Integer>
		<Integer Name="labelTextSpacingFactor">
			<Description><![CDATA["Межзнаковый Интервал (%)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>100</Value>
		</Integer>
		<String Name="textOrientation">
			<Description><![CDATA["Ориентация Текста в Символе"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Читаемый"]]></Value>
		</String>
		<Integer Name="iTextOrientation">
			<Description><![CDATA["Ориентация Текста в Символе"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>

		<!-- bShowLabelFrame: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Boolean Name="bShowLabelFrame">
			<Description><![CDATA["Рамка Выносной Надписи"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<String Name="shapeHeadBox">
			<Description><![CDATA["Форма Заголовка"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Прямоугольник"]]></Value>
		</String>
		<Integer Name="iShapeHeadBox">
			<Description><![CDATA["Форма Заголовка"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Boolean Name="bAutoHeadBox">
			<Description><![CDATA["Автоматический Размер Обрамления"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<RealNum Name="headBoxLengthPaper">
			<Description><![CDATA["Длина Рамки текста"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>30</Value>
		</RealNum>
		<RealNum Name="headBoxWidthPaper">
			<Description><![CDATA["Высота Рамки текста"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>12.3</Value>
		</RealNum>
		<Boolean Name="bFrameOpaque">
			<Description><![CDATA["Заливка"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<PenColor Name="frameOpaquePen">
			<Description><![CDATA["Перо Заливки"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>-1</Value>
		</PenColor>
		<Integer Name="iFrameOpaquePen">
			<Description><![CDATA["Перо Заливки"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>-1</Value>
		</Integer>
		<RealNum Name="headShapeSidePointXPosPaper">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>25</Value>
		</RealNum>
		<RealNum Name="headShapeSidePointXPosPaper_M">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.025</Value>
		</RealNum>
		<Length Name="textBoxPosX">
			<Description><![CDATA["Расположение Рамки Текста по Х"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="commonPointLeftPosX">
			<Description><![CDATA["Расположение Точки Соединения Выносных Линий Слева"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="commonPointRightPosX">
			<Description><![CDATA["Расположение Точки Соединения Выносных Линий Справа"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>3</Value>
		</Length>
		<Length Name="leaderPointsLeftPosXStart">
			<Description><![CDATA["Расположение Начала Левой Выносной Линии по X"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="5" SecondDimension="0">
				<AVal Row="1">-2.1</AVal>
				<AVal Row="2">-2.1</AVal>
				<AVal Row="3">-2</AVal>
				<AVal Row="4">-2</AVal>
				<AVal Row="5">-2</AVal>
			</ArrayValues>
		</Length>
		<Length Name="leaderPointsLeftPosYStart">
			<Description><![CDATA["Расположение Начала Левой Выносной Линии по Y"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="5" SecondDimension="0">
				<AVal Row="1">0.6</AVal>
				<AVal Row="2">-0.35</AVal>
				<AVal Row="3">-1</AVal>
				<AVal Row="4">-1.5</AVal>
				<AVal Row="5">-2</AVal>
			</ArrayValues>
		</Length>
		<Length Name="leaderPointsLeftPosXEnd">
			<Description><![CDATA["Расположение Окончания Левой Выносной Линии по X"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="5" SecondDimension="0">
				<AVal Row="1">0.45</AVal>
				<AVal Row="2">0.45</AVal>
				<AVal Row="3">0.35</AVal>
				<AVal Row="4">0.35</AVal>
				<AVal Row="5">0.35</AVal>
			</ArrayValues>
		</Length>
		<Length Name="leaderPointsLeftPosYEnd">
			<Description><![CDATA["Расположение Окончания Левой Выносной Линии по Y"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="5" SecondDimension="0">
				<AVal Row="1">-0.6</AVal>
				<AVal Row="2">0.35</AVal>
				<AVal Row="3">1</AVal>
				<AVal Row="4">1.5</AVal>
				<AVal Row="5">2</AVal>
			</ArrayValues>
		</Length>
		<Length Name="leaderPointsRightPosXStart">
			<Description><![CDATA["Расположение Начала Правой Выносной Линии по X"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="5" SecondDimension="0">
				<AVal Row="1">2.1</AVal>
				<AVal Row="2">2.1</AVal>
				<AVal Row="3">2</AVal>
				<AVal Row="4">2</AVal>
				<AVal Row="5">2</AVal>
			</ArrayValues>
		</Length>
		<Length Name="leaderPointsRightPosYStart">
			<Description><![CDATA["Расположение Начала Правой Выносной Линии по Y"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="5" SecondDimension="0">
				<AVal Row="1">0.6</AVal>
				<AVal Row="2">-0.35</AVal>
				<AVal Row="3">-1</AVal>
				<AVal Row="4">-1.5</AVal>
				<AVal Row="5">-2</AVal>
			</ArrayValues>
		</Length>
		<Length Name="leaderPointsRightPosXEnd">
			<Description><![CDATA["Расположение Окончания Правой Выносной Линии по X"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="5" SecondDimension="0">
				<AVal Row="1">-0.45</AVal>
				<AVal Row="2">-0.45</AVal>
				<AVal Row="3">-0.35</AVal>
				<AVal Row="4">-0.35</AVal>
				<AVal Row="5">-0.35</AVal>
			</ArrayValues>
		</Length>
		<Length Name="leaderPointsRightPosYEnd">
			<Description><![CDATA["Расположение Окончания Правой Выносной Линии по Y"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="5" SecondDimension="0">
				<AVal Row="1">-0.6</AVal>
				<AVal Row="2">0.35</AVal>
				<AVal Row="3">1</AVal>
				<AVal Row="4">1.5</AVal>
				<AVal Row="5">2</AVal>
			</ArrayValues>
		</Length>
		<RealNum Name="headBoxOffsetUpDownPaper">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<RealNum Name="headBoxOffsetUpDownPaper_M">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<RealNum Name="headBoxOffsetLeftRightPaper">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<RealNum Name="headBoxOffsetLeftRightPaper_M">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<Length Name="totalCommonPointLeftPosX">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="totalCommonPointRightPosX">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>3</Value>
		</Length>
		<FillPattern Name="fillMarkerBackground">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<Integer Name="gs_ui_current_page">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
	</Parameters>
</ParamSection>

<CalledMacros SectVersion="2" SectionFlags="0" SubIdent="0">
</CalledMacros>

<Copyright SectVersion="1" SectionFlags="0" SubIdent="0">
	<Author>GRAPHISOFT</Author>
	<License>
		<Type>CC BY-ND</Type>
		<Version>3.0</Version>
	</License>
</Copyright>

<Keywords SectVersion="1" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Keywords>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_3D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_3D>

<Picture MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="0" length_in_bytes="4446" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000800000
	008008020000004C5CF69C000000097048597300000B1300000B1301009A9C18
	0000000467414D410000B18E7CFB5193000000206348524D00007A2500008083
	0000F9FF000080E9000075300000EA6000003A980000176F925FC546000010CA
	4944415478DA62FCFFFF3FC32818380010404CA34130B0002080462360800140
	008D46C0000380001A8D8001060001446604FCFCF9F3E3C78F7FFFFE1D0D410A
	014000911901CF9E3D5BB060C1E9D3A7474390420010406446003333F3FEFDFB
	376EDC381A8214028000223302585959BF7FFFBE69D3A6EBD7AF8F0622250020
	80C88C804F9F3E7DFDFAF5DAB56BDBB76F1F0D444A004000911901FFFEFD8330
	E6CE9D7BECD8B1D170241B0004109911F0EBD7AF1F3F7E0019C04CB07EFD7A78
	7C8C02520140009119015FBE7C79F7EE1D840DAC090E1E3C381A94E4018000A2
	4247ECD6AD5B1B366CF8FDFBF768689201000288CC08F8F6ED1B3013C0B9C0F6
	E86826200F0004100B79DA3E7FFEFCFEFD7B20838D8D8D878707D8250676CD46
	43930C001040644680808080A9A92990949292D2D6D67672725253531B0D4D32
	00400031923721F3F1E3476043485454F4EEDDBB4C4C4C8A8A8AA341491E0008
	203273003F3F3F3402191981F5C19F3F7F5858584643930C00104094B682B8B8
	B88079E8FBF7EFA341491E0008204A230058030323E0EBD7AFA341491E000820
	2AE40006F0F4C068509207000288D20800D6C0C0D21F322C310AC80000014485
	9E303B3BFB6F30180D4D32004000512102B8B9B981E4683D4C1E0008202A4400
	1F1FDFBF7FFF46EB61F2004000512102383939999999478B20F2004000516759
	0A2B2BEB680490070002883A11006908FDFAF56B344049050001449D0800F606
	FEFCF933DA1825030004107522809F9F1FD81FFEF6EDDB6880920A0002883A11
	00AC8781A51030138C0628A9002080A8B63614580F8FD60164008000A25A04B0
	B1B1FDFCF973340E4805000144B50800F687819DE1D16A8054001040548B0060
	7F986174589474001040548B000E0E0E6029345A0F930A0002889A1B34989999
	815D81D1557224018000A2660400BB63BF7FFF1EAD874902000144CD08E0E1E1
	0146C0683540120008206A46002F2F2F30F44727064802000144CD080056C2C0
	FEF0E8B02849002080A8BC4B121807C03A60B41E261E000410952300D81DFB05
	06A3214B240008202A47003F3F3FB0081A1D97261E000410952300B2527AB41A
	201E00041095230058093331318DE600E201400051FFA80256565660048C6EA2
	2712000410F5234040400058098F76C78804000144FD08E0E3E31B6D08110F00
	0288FA110059B03E3A2C4A24000820EA4700B012860C8B8E062E310020806872
	5E10300E20DB6646C397200008209A4400B01E1E5DA745240008209A44809090
	D0E8827522014000D12402200BD647BB02C4008000A2D59971A3DB6688040001
	44AB0800F68781F5F068294410000410AD2200580F7FF9F265B41E2608000288
	8611000CFDD11C4010000410AD2200D81F06F60646EB61820020806878702BB0
	1E1E9DA027080002888611C0C9C9098C80D152083F0008201A9EB0212828F8F4
	E953604D006C1151DDF00F1F3E3C7EFC98013CEC310883F5DFBF7F4087A9A8A8
	B0B3B3E357091040348C001E1E1E605780162342C006EEFDFBF77FFEFC292C2C
	3C38AB1960B8BF7CF9F2DEBD7BC038C09FFE000288861100AC87999999691101
	8F1E3D021A6B62623298CFC89195953D71E204B0352829298947194000D136FF
	42A627A96BE68B172FDEBF7FAFA4A434C84F280266023535B5BB77EFE2DF3301
	1040B4F5033013BC7BF74E4444846051487CE103AC578006020B1FAC0A801EEE
	EFEF7FF2E489B8B838B08C7AF6EC59606020B0B60026C3B4B43460E47DFEFC59
	474767CA942940D9E2E2629A7A1F68E9AB57AF804ED2D0D0C055100104106D73
	00B01E7EF3E60D15FBC3C090FDFFFF3FB060C594BA73E7CEC48913AF5EBDAAA9
	A9C9CDCDBD68D1A2DBB76F2B282800630B48CAC8C80013414646C6B66DDB808A
	D7AE5DBB7AF56A8846A081C0600232800DB6DDBB77F7F5F541CE23A40A004636
	3009BE7DFB1697028000B455AB0D00210CDD00C92268141EA6C1928061101C0B
	903A0C028D4033021BF0CE5E4E7275ED4BFA7BE9EB53FE3F8352632494BF920D
	6B6AAD619E577CCE69AD052BF80ABD7744C618D87B0861EF0DD7399752CA3933
	C638E744648C91520202615A6BA594F71EFFBC9402ED1642C418D75A57DAC6D9
	D55A21C59FE81140A01C40BBEE12B01206F606A8B271ECEBD7AFC0920458F200
	7315B2784747878B8B0B300E80A13C7FFE7C3D3D3D06F0761D46464660920732
	80DCCD9B3703035D555515586D68696901EB0F60331172BE455E5E1E50596565
	E5D2A54B67CF9EEDE1E1B17CF9F2D4D4D45DBB76B9B9B901A3817297030B4360
	557CEBD62DAC0D3680006282F49868570A01838C2AC3A2CF9F3F071AA2AEAE8E
	260E2CDF80B5C2952B5780B2C09085843864753090849F09092CF10D0C0C8005
	B1B5B53530AF407A27408DC0B4098CAA1B376E7CF9F2059845802AF5F5F53F7D
	FA04CC43C0B6163092A85510018B62AC05114000D1BC17038C0060E2A5B0B50E
	743D302303AB324CA9DCDCDC23478E444545B5B4B4008BA053A74E61F1241800
	19C0221192DA20D91F18BE4087494B4B0303A8A4A40468D4D6AD5B95959581D5
	43797939B03403D6DBD42A098056008B3BCC84081040346FC941960951B2601D
	988180C5B1848404FCAC4CB47A1E98A881A93B202000989C213900E84F480D04
	C901C09A0072D0322F2FEF92254BBCBDBD814E02368780AD143B3B3B60A0032B
	8665CB96B5B6B64A49490183DEC7C7075869438EC3A31610151505A645601C00
	0B49E4DE3B40003137343400EB07DAB5A9812603FB84C02A918D8D8DBC3E3DB0
	A000960990C21D17001A0E4CC8464646C0A004263746300056B38A8A8A10DF9A
	9A9A024D00C622B022D1D6D606D60440D2CCCCCCD2D2125832005B8A4E4E4E21
	2121C01A18A81268082D864F8081006C987183015C1020006F77A80200080361
	188B6969EFFFB07E38109B18D464102677F78F996C1FBE32C4321B9427CAB15C
	C957EF671BED8B40021E1157B6E1A6CF550CB1011C82AF9B81D27D9CA98C1B3A
	F19199BB2E8F96110E045C5F891F0288B6451030F880A5073087014B5E7C6D61
	5427022309985481C508E4585E60314D52E8430A7D642DF0C204181FC04206B3
	10436B59D10E00CB40B4A1018000A2550E00061F30BB01931B30288185039139
	1A18D6C0AE16B0C5022C228099001801C034FBE0C103606AD5D5D51D0683CFC0
	360230B2810D62B80840005AED250700080602E8C57A8F9EBB37F2926E848458
	D8A22AA69F19F1250388521CCEBDA32512FFE9C5588CE8994CBA7A40CE3E683E
	1604CBB3ADFAAE61204B78F7320545D180622EA1D042490F880860930B55D51F
	CBF8CDCCFDF096C96639BD7BB91E8F2D593E0F0E0158BB7B130042180AC0FBAF
	E00E19426BB1B77295FB206061719C70AD8831E6EFBD58E46718EADD6BAD6EAF
	9481DBF931795BB48F157AC2246BAD172C2B89633AAD359026FB0ABB3594D3E6
	72E013BAB0E74ECC39C71882CCC91191890B69520C1CC24E80A3CDBDF724921B
	41F286520A3BC9E6847ED44B409308081C1EF008C09A1D9C5010C24000ADC9AB
	1D589A25588B5EC5932D588325EC03612FC23F7CF6282406339364829F558045
	49CFC15F2C33E5FEFE2701C09D68B264EF2D897723921D796FAD8510CE687D25
	6FCE5941388E31681EECC65C7C2FA5D45A7BEFE6C49C93E389C8FD4820C0A494
	606339A01D58D24BB60DB5E586B5963D99268E31424E5D92ADD8C6FEC7BB04C2
	FD7B983D02B076FF460C46701880473184C20A765018C00E14DA6F8C34363156
	9E8BBB14492E4DA2C339E77D7F7F71FC4103B8CDBD3767CB705B0C81FDE594EA
	E3BEA94606814B47F34BD7755D80064129E55C897C7631803967D09059A1704A
	69CE2902B93D8AB419A06B2D5A7BB287137791D0F316B0CC803259113E0C8F31
	8E3118C65AAB9855152BBD7794B4D6BEFFEA680A1C8710DE91B90BC0991DDC00
	0C8200145DCD051CD1931B18B77200AE7D0917D3D643DB93859408F809D80F04
	30013A54CA7C4A3470B052D738F9EC2EFE3DB68856366F7383E02A44D2EC48EE
	149B9B4A29630C7B435EDE02A56ACEE934F830AF7DAC69F59A6B2DAF16025D6B
	25DCFF1A6557C259F9A66253A00124F711C13850528E89DE3BE25B6B06889347
	7C511B1879ED442E0128B3831380412088A2E5D8820D6825F664192216A225E5
	412E4248825E05353BEE1F871C0830C690F8534ABD770F151074A010C2AF371E
	8D3B43A9C833B8013410911C9DF7E69066638CAC1B6A40B9B5A61C2218E33585
	39402494C11442E295A6C12524D15514759777E8D99D3C4A9C73AEB572112B50
	D7BEA51446BAD6F2E1D6D17662ECF70F2F63CE093E6F21E31280B23BB8011084
	A1007A771012E6E0C88D84059890DD5CC027261E5013E44490D0F4F7FFD272F1
	EC845770E9BDB7D6F63150E06296E0FFADD0577A28C2DAC678F6684C63A20928
	A74F3C1421EBD7FF0C947AA5143924C69852926D241F1746ADD59C8839026898
	229080DD0A6682D440661B65433FE7EC34E5A303794D8221040A70A3BEBE8E4C
	C9872134FD2AC40F0144783E00988380190D39A0DDDDDD811EA3D11402D03A60
	DE02A6595C0A806916D8B5C635BC3EA800D0917BF7EE05E65A3C6A000288406D
	F9E9D3A7EEEEEED8D858E45BC38E1D3B0619B9A50500D601C0B48F6C1DE63C1F
	B07C007635E830A1443680173E727272F80B098000C2570700EB776071D9D1D1
	010F1A60F60416CDC07C47C5493BCC3A00985B81053A2E0590AE19B0AC07D66C
	C0326770AEFF05D64CC0DA02E81760C9867F52012080704600B0900136EFFAFA
	FA80E911725B1BB01C0416A3C0F2D4DADA9A5A93EC587300D070FCC12A2C2C0C
	AC63812515300E06E7C22C60AD0E0C34604D43704C1B208058700DA2CD993367
	DEBC79C06A07D87C36040360E5431FD7133370240106C360740820805870355D
	81B1F7E4C9133A8CD062ED0C8F9C13870002087B04009B5CC0DECD40B9099879
	81F5186479E5B08F0080001A8C3E84746547C8366380001AA4490C180723E4B8
	0F80001A8C110069088D9063A801026890164190C3FF4642040004D020CD01C0
	08182139002080066F0E1821750040000DD21C00EC8B8D90080008A041DA0A22
	6F15D75004000134482300B23C6B24440040000DD208808C468C84BE1840000D
	DE8E18643462D8470040000DDE0800964223A11E0608A0411A0190C99FCF9F3F
	0FFB080008A041B7D31358ECBC7BF70EB2B58F76D33E83070004103D96A71309
	3E7DFAF4E2C50B60B10359B4232C2C2C242434EC47A4010268E023E0DBB76F2F
	5FBE04863E30ED43163C71717101496AEDCF1AE4002080062C0280291D98DE81
	A50D64E00198E479C180165B5306330008207A47C0DFBF7F5FBD7AF5FAF56B20
	8393931398E479787880A14FD39D9A8319000410FD220058AF028B9AAF5FBF02
	4B1848A003D33B7C55EC8805000144F30800163577EFDE7DFFFE3DB09C111111
	01863B30F4A9BB017148038000A24204008B1460512E232383BC040CD892811C
	6BF2E5CB1760D043369902437F24CCB39304000288D208B87AF56A616121B0E6
	ECEBEB53575707B66480E53B304A806D1B60B10E4CF29C60305AD4E002000144
	7E470C98B4E7CD9B3765CA94DBB76F0353F7F9F3E78165FAA3478F203B528119
	6234DC8901000144E6E2D61B376E0406062237199393931F3E7CF8F9F367C8C1
	F5FF470171002080482E9181853B30E17B7A7A6ED8B001793FD0E5CB973F7EFC
	08AC0680097F84F4A1A802000288B41C002C6DFCFCFC70193567CE9CD1144D2A
	00082062EB0060A9B263C78EA6A62660DBC6DADA5A505010726E181000DB3642
	4242C00AC0C0C0603441930A000288D856103002803D2960C50B0C6860B39209
	0940C6EE2157C78C0628A900208006D168E8C804000134DA2D1A60001040A311
	30C0002080462360800140008D46C0000380001A8D8001060001341A01030C00
	026834020618000418008AAEFF6F108152000000000049454E44AE426082
	]]>
</Picture>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="1" length_in_bytes="727" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000960000
	001408060000006F79C43100000006624B474400FF00FF00FFA0BDA793000002
	82494441546881ED993D6FD3501486DFE37E0C5006164A99C2D06B90A248B969
	D36BA991106160E107F01F100B828519890D7E0813ACC09AF423E90043138684
	258809A4162462E2C3D01445D1AD63C737719CF8912C45FE7ACE8DAE8FCFB906
	525252525252161A8A72F1665EBD2742190098F1E1CB51F59E99B05292CEC889
	756B4BDDF13CBC05704577DCE54B190058C1EF16085F01A059AFDE1452B574BF
	4D042DE4CE0F807EFA7952E70C7B852C968454DF6D59BCAB3FAE389B2DAFDF2E
	953684541C612C21E33A1BD4345914A729AF3663D9D2E980F825339E13BC878D
	FAFE47ED7979679F89B70180980E1A479562D48052E603EDC4EA671F8F2C7ED2
	38DC7BED77032155EB3C1DF6677AE68253DB51D3B5BDBD7BDFEBF51E2D81BB70
	F9C5F1A7BDDAA49DE74C739C713A4D7997753B093865600D9EF50C80EFC41AC4
	E4E074B0F7F71D983E7BC44B58A10A80D5493B7524DD39AA6E06FE2797B189D4
	150E3334BBDB03455E06219E2ABF8137EB55EABBB859AF9229671892EC14B258
	02AC377E25CE4C60BAC0F46B184441B99B05551179E74048D535E91D1D57B28B
	775B3A1DBBA01EFB35633AAF90AA25A4E2FED61ADA77617CDA57E1B844A90382
	340C642D3F20CF7D0AE00FB9EC44758E4B129D0CDE00E3D559DD1C3C53E9EE1B
	647C465F855108D3304C1B51508760140000845AB356DD8A39A4D0D8529D30B0
	46A06F8D7AE546D0EBE2788806C591B1A53A1152B12D9DCEB49C411152712E97
	BB96CD96D7E77DBDCE943772C69A9715E9519DD26AF7F2F5DED5AED5FBE57600
	B4A7E10C89C1658EE8FFEFCCBC0AE36454A7348985E0C4746763B2D0132BE817
	86A43BE3C068579834C6ED9492E68C032BEE00E28480530056FF0BC3DC3A5352
	E6867F80DF108BB52C99F10000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="2" length_in_bytes="408" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D494844520000001B0000
	001808060000000B4086FB00000006624B474400FF00FF00FFA0BDA793000001
	43494441544889ED95314BC3401886DFBB1874108AC4C1C40C75490B314B686B
	1085E21F717412FC0182ABD4C9DFE0A4E0E0EC0F48A0902D4B4414B18D2259C4
	C19226E762416C121A2ED9F26EF7F21C0F1FDFC1011CD14CEBA9484F7964009A
	457A5E59A1D4B25A56A92CD2F5FEEADFC230F6D6004CD2E0251E1301B98C96BF
	3F35D322B36EC2A284317296C60B3CB23078BD9764B50102DB779D5D49561BA0
	C479709DD3349E6B3200108578104D054FEF76AFA2290E09138C2C966B3200F8
	188FBF2445DD48183D06C59DEFDAB7596C29AF5114E20140B6451A5FE471A5C8
	BCE1F00D608F3113DA95CB0000841D2509AE5B66EF200BE1DED92C61307A9194
	4D07A037EBB2E286C168EE4F2B4DB68890FCBFF0FBCB36013CFBAEB355F40C00
	ADCECE094BE8B9EFDA2B650E3317CDECED6BA6F59EB7BB5A9423B3BC76C7EA57
	2E5A343FB90778B246FAEDB90000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="3" length_in_bytes="355" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D494844520000001B0000
	001808060000000B4086FB00000006624B474400FF00FF00FFA0BDA793000001
	0E494441544889ED94314B03411046BF59B5B134167A4188CD7AF5E6C8AD10E1
	B04991D24AC45F67218896B6561212C1EB5224CD817006916015CB1B8BCB856B
	D4D96061B1AF9A293EDECEEEB080C7E3F90E6DEC388C6C52EB336D6CF6530D00
	6164136DE2F72A4B22593BEE82E98E509C4FD2A70749268C6CC205DF33689BC0
	9FA4A8BF2109CE67F94B23680E0175B3BB1FA4F3599EFD9669EC1D0C18D8293B
	DA02534FE25AA1DB71571BFB76643AA7E28CB15CD5CA45367D1E3D82F88CA1AE
	5D84159BCB076D8913E5393F18EA0A40D349364D87872E016D3A2780BA251497
	2E39C0F11A6B22F156D611ADFE3A226D8E7380839AEA5534D93A1329C517002F
	0080C08BB217C9FEE607F178FE0F5F975B6AA42E6BC6020000000049454E44AE
	426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="4" length_in_bytes="481" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D494844520000002A0000
	000D0806000000DF6AFCD500000006624B474400FF00FF00FFA0BDA793000001
	8C494441544889D5923B481C511486BF7367562D02298CB0DA25C826B228B83A
	3E2AB74F1D6C345682BD606525580996165A682B56BA606FB138A0ABB09DC346
	25A216698230609C9D39163E101FE064C6C253DECBFF9D8FFF5E7827232F5DE4
	1D271B84D66F20138377ECEDB99FE3ECFF56E82F4462BE8B6A97420E68031A81
	0F0F992F8AE60A03F308EA55DCC9188B5F35C562D13EBDB81C11980602850D23
	B2AB51E8659AAC13CBF7FF55AB55FF61C67E0E94779C6C50674CD4EA4C5B32E7
	385FCE2F2ED704F92B46C70E76DDF26B72CF8A06A1358561E5A0523E4B53B2BD
	7B7088BAAEAAD119AFE22EC4C93E117DAB36BF76F7F52ABA1A21C3B58ABB1537
	6F1E1FDCB7B99F5E9B1D3D3DAD2A663D12C66BFBDBB125E151A36FD4A684DAB0
	04BA58DB734BFF0BB10172858123603308D54EEB6FDE318DE86114694BDBC7A6
	592F01EFF6E9E5173001320E34E71D279B54F48E19A9CC211CFFF1FD4F496806
	40D065200444959F5791B59358F386590744E14752A60108335A52C420940D8C
	AAADF9A4A2B74C2B4DE6BB986BAEFBA2AF616333020000000049454E44AE4260
	82
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="5" length_in_bytes="3963" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000960000
	005C08060000008C724C30000000097048597300000B1300000B1301009A9C18
	00000AB26943435050686F746F73686F70204943432070726F66696C65000078
	DAAD96675453791AC6DF7B6F7AA12544404AA8A108D2ABF41A40E9D546482881
	10434850013B832338165444501991511005C702C858100B1606C1DE27C8A0A2
	AC83055151D90F2C61F7ECEE873D67DF73EE39BFF39CF7FFDCE77FEF970780D6
	CB934844A81A408E58268D0EF663272625B3897F00064CA00011A83C7E9EC437
	32321CFEEB7CBC0B0800C02D6B9E442282FF6DD40569797C00241200520579FC
	1C00E40400D2C2974865009808008C97CA2432006C0B0030A58949C900581D00
	303326B90D0098A993DC0D004C696CB43F00A60020D1783C690600751800D8F9
	FC0C19008D0600B66281500C409B03005EFC4C9E0080560400B3727296080068
	F500609EFA4F3E19FFE299AAF4E4F132943C79170000200508F32422DE72F87F
	4F8E483EF50E2300A0654A43A201400500A9CF5E12A66471EABC8829160A00A6
	38531E1237C5FC3CFFE42916F002C2A6589E1DE73BC53CE9F459A18C1B3BC5D2
	25D14AFFB4BCC018A57F1A375C9941344FC9E9C220EE141764C6264C71BE307E
	DE14E765C7844DEFF82B75A93C5A99395D1AA4BC634EDE74363E6F3A832C3336
	643A5BA23283202D2050A98BE394FB12999FD253228A54EEA78982957A5E7E8C
	F2AC4C1AABD4B378A191D33E91CAEF0331600F8EE0078E600FB600B2B4653200
	00FF2592E5526146A68CED2B9188D2D85C31DF6616DBDED6CE09203129993DF9
	6BDFB300010084756D5A13F80038E903A063D35AB616404721806AD4B4C65909
	404907E818E4CBA5F9931A0E00000F1450052668833E18833958833D388307F8
	4020844204C442122C023E64420E48612914C11A288132D8023BA00A6A603FD4
	C3113806AD701ACEC365B80EBD70071E810206E1358CC0471847108488D01106
	A28D1820A68815628FB8225E4820128E442349480A92818811395284AC43CA90
	72A40AD9873420BF22A790F3C855A40F7980F42343C83BE40B8AA1349489EAA1
	66E86CD415F545C3D05874219A81E6A2056831BA09AD446BD1C3680B7A1EBD8E
	DE4115E86B7414038C8AB13043CC1A73C5FCB1082C194BC7A4D84AAC14ABC06A
	B126AC1DEBC26E610A6C18FB8C23E0183836CE1AE7810BC1C5E1F8B85CDC4ADC
	465C15AE1ED782BB88BB85EBC78DE0BEE3E9785DBC15DE1DCFC527E233F04BF1
	25F80AFC01FC49FC25FC1DFC20FE238140601138041742082189904528246C24
	EC2134133A087D8401C2289148D4265A113D8911441E51462C21EE221E269E23
	DE240E123F91A82403923D2988944C1293D6922A488748674937492F48E36435
	B229D99D1C41169097933793EBC8EDE41BE441F238459DC2A178526229599435
	944A4A13E512E531E53D954A35A2BA51A3A842EA6A6A25F528F50AB59FFA99A6
	41B3A4F9D316D0E4B44DB483B40EDA03DA7B3A9D6E46F7A127D365F44DF406FA
	05FA53FA2715868A8D0A5745A0B24AA55AA545E5A6CA1B55B2AAA9AAAFEA22D5
	02D50AD5E3AA375487D5C86A666AFE6A3CB5956AD56AA7D4EEA98DAA33D4EDD4
	23D473D437AA1F52BFAAFE5283A861A611A821D028D6D8AF7141638081318C19
	FE0C3E631DA38E718931C82430394C2E338B59C63CC2EC618E686A683A6AC66B
	2ED3ACD63CA3A960612C33169725626D661D63DD657D99A137C37746DA8C0D33
	9A66DC9C31A63553CB472B4DAB54AB59EB8ED6176DB676A076B6F656ED56ED27
	3A381D4B9D289DA53A7B752EE90CCF64CEF498C99F593AF3D8CC87BAA8AEA56E
	B46EA1EE7EDD6EDD513D7DBD603D89DE2EBD0B7AC3FA2C7D1FFD2CFDEDFA67F5
	870C18065E064283ED06E70C5EB135D9BE6C11BB927D913D62A86B18622837DC
	67D863386EC4318A335A6BD46CF4C49862EC6A9C6EBCDDB8D378C4C4C064AE49
	9149A3C94353B2A9AB69A6E94ED32ED331338E5982D97AB356B3971C2D0E9753
	C069E43C36A79B7B9BE79AD79ADFB62058B85A645BECB1E8B5442D9D2C332DAB
	2D6F58A156CE5642AB3D567DB3F0B3DC668967D5CEBA674DB3F6B5CEB76EB4EE
	B761D984DBACB569B57933DB6476F2ECADB3BB667FB775B215D9D6D93EB2D3B0
	0BB55B6BD76EF7CEDED29E6F5F6D7FDB81EE10E4B0CAA1CDE1ADA395639AE35E
	C7FB4E0CA7B94EEB9D3A9DBE39BB384B9D9B9C875C4C5C525C76BBDC7365BA46
	BA6E74BDE28677F3735BE576DAEDB3BBB3BBCCFD98FB5F1ED61ED91E873C5ECE
	E1CC499B533767C0D3C893E7B9CF53E1C5F64AF1FAD94BE16DE8CDF3AEF57EE6
	63EC23F039E0F3C2D7C237CBF7B0EF1B3F5B3FA9DF49BF317F77FF15FE1D0158
	40704069404FA046605C6055E0D320A3A08CA0C6A09160A7E0C2E08E107C4858
	C8D6907B5C3D2E9FDBC01D0975095D117A318C1616135615F62CDC325C1ADE3E
	179D1B3A77DBDCC7F34CE789E7B546400437625BC493484E646EE46F5184A8C8
	A8EAA8E7D176D145D15D318C98C53187623EC6FAC56E8E7D14671E278FEB8C57
	8D5F10DF103F961090509EA0489C9DB822F17A924E9230A92D99981C9F7C2079
	747EE0FC1DF30717382D285970772167E1B2855717E92C122D3AB35875316FF1
	F1147C4A42CAA194AFBC085E2D6F34959BBA3B7584EFCFDFC97F2DF0116C170C
	A579A695A7BD48F74C2F4F7F99E199B12D6328D33BB3227358E82FAC12BECD0A
	C9AAC91ACB8EC83E983D214A1035E7907252724E8935C4D9E28B4BF4972C5BD2
	27B192944814B9EEB93B7247A461D2037948DEC2BC361953269175CBCDE53FC8
	FBF3BDF2ABF33F2D8D5F7A7C99FA32F1B2EEE596CB372C7F511054F04B21AE90
	5FD8596458B4A6A87F85EF8A7D2B9195A92B3B5719AF2A5E35B83A7875FD1ACA
	9AEC35BFAFB55D5BBEF6C3BA8475EDC57AC5AB8B077E08FEA1B144A5445A726F
	BDC7FA9A1F713F0A7FECD9E0B061D786EFA582D26B65B66515655F37F2375EFB
	C9EEA7CA9F2636A56FEAD9ECBC79EF16C216F196BB5BBDB7D697AB9717940F6C
	9BBBAD653B7B7BE9F60F3B16EFB85AE15851B393B253BE5351195ED9B6CB64D7
	965D5FAB32ABEE54FB5537EFD6DDBD61F7D81EC19E9B7B7DF636D5E8D594D57C
	F959F8F3FD7DC1FB5A6ACD6A2BF613F6E7EF7F5E175FD7F58BEB2F0D07740E94
	1DF876507C50511F5D7FB1C1A5A1E190EEA1CD8D68A3BC71E8F082C3BD47028E
	B4355937ED6B6635971D85A3F2A3AF7E4DF9F5EEB1B0639DC75D8F379D303DB1
	FB24E364690BD2B2BC65A435B355D196D4D6772AF45467BB47FBC9DF6C7E3B78
	DAF074F519CD339BCF52CE169F9D3857706EB443D2317C3EE3FC40E7E2CE4717
	122FDCBE1875B1E752D8A52B97832E5FE8F2ED3A77C5F3CAE9ABEE574F5D73BD
	D67ADDF97A4BB753F7C9DF9D7E3FD9E3DCD372C3E5465BAF5B6F7BDF9CBEB337
	BD6F9EBF1570EBF26DEEEDEB77E6DDE9BB1B77F7FEBD05F714F705F75F3E103D
	78FB30FFE1F8A3D58FF18F4B9FA83DA978AAFBB4F60F8B3F9A15CE8A33FD01FD
	DDCF629E3D1AE00FBCFE33EFCFAF83C5CFE9CF2B5E18BC687869FFF2F450D050
	EFABF9AF065F4B5E8F0F97FC4DFD6FBBDF98BF39F197CF5FDD238923836FA56F
	27DE6D7CAFFDFEE007C70F9DA391A34F3FE67C1C1F2BFDA4FDA9FEB3EBE7AE2F
	095F5E8C2FFD4AFC5AF9CDE25BFBF7B0EF8F27722626243C290F0000300040D3
	D301DE1D04A02701307A01282A93DD18000090C93E0F30D941FE334FF6670000
	7006A8058004008806801A1F004E0700A503201200627D007570503EFF98BC74
	07FB492F9A1400FF6962E2BD1E00B11DE09B7462627CCFC4C4B73A00EC014047
	EE6427070008B7062017DADA3BBA74D3C8FFD68DFF0E0EB5FE162ABAE98D0000
	00206348524D00006D75000073A00000F3B3000084FE0000796A0000EEFF0000
	32EB00000E2BB601F6B4000004394944415478DAEC9DED8EAB201040076C2BBC
	FFC3A2DB2B737FEC76639ADA451DD4B6E7249BFD9E113822B54C74AA2A00D678
	BA00100B100B100B00B100B100B196114230BD5711DAB33AE7CDEF7F8410D4FA
	58F7EEAB5A31ADE2BAB5F7B14208DA759DB36C581B823A11B18E3BEE30EBD8A5
	B92DF3D66ACFBD584B629FD61E44D775CE5AAEFE275608AD5EFB2F19544D628F
	8F710FC9524AE627624AA98AB8B7B84BFBEA6435603566AEAEEB9D88C8B90DDA
	385B01F692AC865C35055B2AD9C34B61DBB6EADCF7FFE49CC57BBF68C09E5E83
	9DD3DB32EF7C398B7722A283F45F592EED59BE83A85CFB2FF197569A9FA8C3B5
	97EB503683AD592B94B6634E8EF100C5184D728C638E8931AE6AC754DCD21CCE
	EABDC21A6761CDF5C9D66BAF1082DE066B8E54A531970A551AF73EFE5F394E47
	96AAA6507B2DE4ADA45A3B432D893DEB8A74C45785B584E255E18BBC2AB496AA
	B6505BCBB474DDB6774C8BB88EFD585003DED201C402C402C402402C402C402C
	00C402C402C402402C402C402C806388F569254DABF2B717DB52B9183556EAFF
	DDCBBF3E6DF3DA5A4EDEEBBF9C6D4BE5DAA0DE3B49291D6A53A489589603F5E8
	6CB1DA1F3EF5BB2D256BBCD7C1582E119118A38A88B9604BC7D94CACA30B503A
	BD6F2159DDC29356559DF4FDBE85270FC5DABE6C4A6518B2F8A691F13FE76110
	F1CD7769D8EA1C75DA716983367ED91896CE2E214475B7BF5495AC2ACE7B71E3
	AF6FBFCE59549C78EF447396AEEF77E9AB43CF58791844BD97E6A757DF65C6FA
	044E56816A0C886F9A4D061B990E2AD6512B4590E985C5FAA49226D8E87603C0
	E432862E00C402C402C402402C402C402C00C402C402C402402C402C402C00C4
	7A036A97A4ED19FFC4F0EE83F367D57C7DDBFD61CC583BCD54B5A5AA59098458
	0795EA1D76B2FED58E8797C25BF1E3124A4B9AB6C871B4A77FCD89BBB61D73F3
	58AFC7CCB626C718B54615EE58C25AF1B77AFAD7AB17C3AE9EB18E22D5D1CAC6
	3FFDF237A73DABC56ADB56FBC26ADBBD85DAE3E95F5B4A752481573FFDCB52AA
	DA42EDF128B94F2D39A3FC0BB8DD008805880580588058805800880588058805
	805880588058008805C766F1B6992DF6365DCE271D54445465188697DE3D5A3B
	C754DE1A5BAC4B62CEDE36733B8094D2EFCF628CA69D36B51F5E87AB745FFF4C
	1F0695529218E3EF67CB76DCE7983B3847A544D84597C2B1548FBE7F15B668C7
	9E7D53AB60B5EB3AF7576C3FF740C71DD5F7FDEFE7949238E75637E459F58E6B
	CEABAA7BA6DA712F82C5803CCB5173D0B79A15FF926BF6D3BF9E75568C7155D9
	94AA8AF7BE641678D9F2AFA3E6B0BE2C9EE61C8CE5593695C362462A69C7FD1A
	F1D19A716D8E6727A5458E23AFB5FCDC819AEA9039B3D59AD9C8A2D0628B763C
	8B619563AF3556C9027ED1E2FD7E50E69C7D25E49C273F2CA9DD8E929CAFB8C6
	2A7955B8B84AE75DEEFF701F6BFEEC56E53E164009BCA5038805880588058058
	8058F0C9FC1F00E9FF6EE309D26C810000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="6" length_in_bytes="149" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D494844520000001E0000
	001408060000009AAB8DC400000006624B474400FF00FF00FFA0BDA793000000
	4049444154488963601805C31D301252A06664719F8181418144731FDC3A7742
	912C17D11A50CBC783D787E860348E31C0681C1309066F088CBC381E05C31F00
	004A321E078C37BAAB0000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="7" length_in_bytes="448" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D494844520000001E0000
	001408060000009AAB8DC400000006624B474400FF00FF00FFA0BDA793000001
	6B494441544889ED54B14A0341149CD9C426956823248DA097749278E84AC4A4
	379D96FE8258A4B0B4B1B109D858A44F2758591BB0F0847085852641B0312088
	76B14972CF22062E7077015963A1030B6F77DF9BD97DEC0EF04B8899244BDB3A
	3FBF90BA9A5B4876DE5F3A0F51B9CAA4B00C50217841F26412B731E1A5EC4601
	0AB32DF7E610C06B3AAB4B53118E51CA22AC00F020722AE441543E4D886656D6
	AC415CDD537C6F86E85364B5E5DEDE05D518B9B1178B9529386EBB0E47038223
	11EE87D5C4C33632B62E7A1ECE95C26EB3E1D401C0CAE9270068BBCEA23F0664
	6BD057853102F6AAC0CC75187F60AB33B62E8A2797022608F9A0E2F648DC1402
	5B2D1E6A02260040C08478A899149D082BA7E5A7B88D1A48DAD6792BA71F97B3
	EB3B5315FE77AEA8FCC0EF64E5F43380A46FA9D3769D54188931E7520A7B8074
	87F5D21DCEC3F11DE70A146E369CBA522C0178A362C9EF5C23C7F2C75FCE7536
	46C25E15C466D481FF163E01F46EA48B18A53AB50000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="8" length_in_bytes="440" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D494844520000001E0000
	001408060000009AAB8DC400000006624B474400FF00FF00FFA0BDA793000001
	63494441544889ED54BF4B4251143EDF7D363514B5183596BA8529F524C88646
	A1B921FF836870686C6969095A1B5B1A5B724E68E805F6868652579184A02168
	CAF7BEA6A0F43E3D5638F9C15DCEFD7EDC732EF78A8C312238511BC9ACBB3E1B
	5FB89E89CFB75EDBADA7614C355A1325662027105C0238EEC7FBADD65A5C4CE7
	F26264BAEEDF1E88C84B32ED16B4A15AAD35D8014B244E442414F294C0BE3658
	AB457721B5BC9A0862E611FC76FF900EC84CDDBF7BE8173A8CB6A7E3D0714AA0
	1C357C0F5F4B288724F606753B8C36D62BE746D031F91F257C9C894CDC0C0AFE
	9BD682447A6DF7BFB9BA67029C6B83B55CCBA82D208BA9ACBB49CA45FDDE9BB3
	519219F719909D30605163A9EAD838683264999478F4D924CE9065E3A0A9F1EC
	794E362C65721D9091DF6B17DE1ABE373588A41AB5036E85E49508261BBE673D
	6C62C52584EF30D8D678AA465DAB7A15635000A41DC501A40D8342ADEA55349E
	638C0C9FDED2A7204D0378E00000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="9" length_in_bytes="462" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D494844520000001E0000
	001408060000009AAB8DC400000006624B474400FF00FF00FFA0BDA793000001
	79494441544889ED944F4B02411C86DFDFAE5E8C20E89097E810CC2A42B0B3FE
	192361A1AB872EE2B94BA7EE7E854E7D85CE424187BC0B45AC68765A1203C343
	697894A03FEEFE3A1B28BB76139FE3ECBCEF3333CC2CB062D9A1454249737FC7
	23FF02C001803B9DB5E3A7C7FB7E980E2DAC349156B647BE03E2CB75FAD900F8
	CA23DF49A4951DB62B3042E64E84540361E60FA7C7B30521D5AB61AA4AD0AE40
	476DDB76E46DFC790E860DDD3BEA369BBDBF73763399ED88A75F33F010FD1A9F
	BAAEFBFD2F71229BDDF426DA2D01C9208B0400069E27512EBC341AEF41335318
	32B7272CD513963A43F0FB4086A92A86547DC3CCA617120BA95CC3CA9716C91A
	56BE24A472677D9FBB8B6EDB4911F1C8B0D4209C540D8878D46D3BA985C489B4
	B2D9E71A33E261C4CC88B3CFB5794F2C32AFC0F7A80A420C0084541C4A0E8AB1
	4755005BA1C59ACE65DFE71B80D6BA6D27F05F4E48C504FE201DE599DDF30A3A
	2DA7AE695424C230A814008830248D8A9D96530F935BB15CFC021F307AC8E5B5
	BBDE0000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="10" length_in_bytes="550" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D494844520000001E0000
	0015080600000051F75E6100000006624B474400FF00FF00FFA0BDA793000001
	D1494441544889ED94BF6B535114C73FE7B569FC55AC20220E22486E0A81626F
	8B7D69119EABE8A8A36452A8D8229905FF80161A444BB77677D5D528D844254F
	1D52257110D1B911A51A92778F53E11543230D71B15FB8C3F971BF9F73EE7061
	5FFF48120F8C9DDA0419E90F4A1BB5F0E5B18E25637DED0FF44F6FAF5FA06EFA
	6B70CA662F1BEB7F36E3D9EBDB3963FD0D333171BC53FFD9B1E913C6FAEF7B02
	07413028E87D84BB882E6432C111009417AA899B9DEE0C0C44B7047DD613F8EB
	F7E635553ED52AE535E0692BD9CC0138172D09CC663299A178FF99203880C80D
	87147A028BD3794416013C270545E700EFE3BBD75560A39D1CBE1AEF4F7CFB95
	5378550FCB7B7FEAD1493FC063A41E969E007C785B5A17653365B39700142928
	DC89CF29C21CEA2DEEE6DB15EC9C2EA11863FDC8585F8DF515E1BC887B08500F
	4B8F81C3A3E7B2D300E971FF0AB0557FB3FE7CCFE0F4E44C1A95935B4939540B
	CBB27D86A535840A693B350628C803E7E93C808AE6515DE8B6D0AE6075511E61
	F94BA9F4339EAF542A2D851555B90D90682657818B29EBE7404E9F3A7AF0514F
	60E042D4F6963B15445A2B083300D56AF107AA79817B28B3C562B1DD0DBC43FF
	C59739B833D446FFB6D6467F7CF7D545BF01A333A806C9A9DE28000000004945
	4E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="11" length_in_bytes="403" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D494844520000001E0000
	0015080600000051F75E6100000006624B474400FF00FF00FFA0BDA793000001
	3E494441544889E594314F83501485EF7D3055DD1CF40F0071A4C43CE220831D
	6C3BB631ED3F3471B47B1723A5409D4CE3E266DDAD5BCBE9A0BC1030D6E1950E
	9EE9F272928F737817A2FF26CE87B3F38B8FD56A7DF89BD9348DE573F470A4F5
	0D2C57629B2C5742174F940F3AFD214549AA9EA324A54E7FA88B57559E389E3D
	C1BFBAC66334C5349DA95977E20A38877B410BDE654B41775E35111180EF5BA7
	3F604579E262BDC5DA775E75BB37C0244E54BD933841BB37A8E71BD7B14EA61A
	4C636937FDAD3F105DE0FDCB72E5AB0ECF5FF5E33AD52EC79381DD948BF2B9ED
	FA6F8E27039D2C95D8F164800C23804ECA26104E9161A413AE6E75B6E65B626A
	107DAD5615CE0D64B823A263AD6061E026CB704FC4072F69C84593E54A30E193
	05F77440890A55CFE3702C047799E9BD6C62E2050BEECEE370AC0BBC376D002C
	4400A988145B780000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="12" length_in_bytes="535" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D494844520000001E0000
	0015080600000051F75E6100000006624B474400FF00FF00FFA0BDA793000001
	C2494441544889ED95CD4B1B4118C67FB3D91494B497DA63B5828D1789BAA99A
	2ADA4ADB43BF6829D406410FFE0122541405F16FF0E2A1074B29344AFD08523C
	29DA0FC98636BB4D5A2C46B150289E4B3C984DECF42455DCC892684E3E30303C
	EFCCF3635E861938539124AAB5404A8227EF00D85937F4F37635AF3F9049C674
	B79DAF1402053876BF44CDE52B85400BD1B1E0F6D6165616C23C7E70B7786097
	CBC5C8C073C6C65F30D8D74B69694971C0F7EEDCE2F7F63673EF16887E89F1E4
	E1FDE280BB3B9F31F1FA0D00AF425374073B509493BB12B6498D7E8D0B1E0FEF
	57230098F16FFC49A5B8D172FDC4C0B6D77DB8BF8F2B15E5FCF8BC7AC81F1D1A
	60F9E3A3D30157569473A9EC22B5CD37D94DA7FF2F545516E7A7A9BE5AC5FAC6
	A6C37889CFD75699487CF8B9EFD434B45DB6F6ACA3ADEEE9EA24F476F6101420
	9BCD323513A62BF8D4F1A9A4144BBBAAB5E5D502727F587BD62FE0D311F0B5FA
	3A42D3B3B641933361B45A9F63F086A9DF96602088250D5D1C98B70AAF16908E
	93722869E82257ADA6A9C997B6C457B72098914CBAFF0AFF5A3C629EFA93F93D
	1A4D203033829742C1588B474C0055C04E611F85C451D7249C73CB9EFC3967CA
	53FF000D5D963811122D770000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="13" length_in_bytes="535" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D494844520000001E0000
	0015080600000051F75E6100000006624B474400FF00FF00FFA0BDA793000001
	C2494441544889ED95DF4B935118C73FE7F0CEC528A615D80C7F85FD10A7255D
	94998AE0DF904817A2B9B5C4BDFD2F9BC3D110BBA88BA27FA120EA22A8E68FA9
	6F14286A3F10D49B0DD4B5F73D5E3590BD6B633FBCF27BF59CEF73CEF3E1E139
	9C03A73A2189D0CCB324429C2DB9825229FD89FF9C5D2A148DFDD5033E879D2F
	CB820205CE6BF97C5916B40CFD17DCD2DCC4D8C3116E5CBB7A7260292503BD3D
	7CFAFC85FB3D7770387246551D70DB955692C914C6F71FFCFCF59BF6EB95ED3A
	2FF856A797F8520280C5C40A37BD1D0821AA0BBEDCE0C1E9AC6163730B803FDB
	DB1C1EA6696E6AAC18D8F6BAF7DFBB4BADDBCD94FFD1317FB0AF97B98DCDEA80
	EB6ADDB85C2E66669F93C964B2BE9492D191612E5E38CFCEEE5ED1807038DC1A
	0C06D7FFAD239148A36907EEEEEA24B1621C83025896C5B261D0E5EDE0DDFB0F
	454115BCC571662D148D653D1340A88F39336EF05C22B16AD8165A5EFD86A7BE
	BE2828C0D3806F08A1E208BEEA019FC8C68FFD7D391DBF78F5266FA1FD83035E
	BECE9FB793663AC74C995E989E9E7DA094D5ADD2E2361478B92AA1C9C9D12525
	D4BCA559734A10D7F58979000DA552E5FD4E108AC654A13D009A59335E32E754
	A5EA08078D8C570977E15E0000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="14" length_in_bytes="405" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D494844520000001E0000
	0015080600000051F75E6100000006624B474400FF00FF00FFA0BDA793000001
	40494441544889ED943D4FC2501486DF533AA1FE0896421C4B432E71904106C1
	110608BF8F0547D95D0CA5B4C5C9208B0BFF4074C2FBBAD8862FB1253AD927B9
	C9EDC93D7972DFDE1CE0BF21D1E6BC72F1BA5A7D9C1E3A6C9AB9E593F77066D9
	EA0500E6A15B2839AAA635078621ED99EFDEA7165BB6E273303A78B858AE621E
	BA714FC951356A0E09C90BF82E863493CA8DED42B3DD851784F1B7178468B6BB
	7B9BA9A54F481E0008C9534B3F897403CB5624497FFAC8EAD53547DE8493701A
	EF49D2B215BFEB4D2DDC164772A756A773598FA5BF2DDE891A00487EFDFCE32F
	9298E8C6EBF1AEC7FEE751375A1D8EFD208E77EC076CB43A7BC596AD1696ADB8
	B616497DE6766138D87C9895B2BD538B300CF4B4E61D202702BE8921BDD462D3
	CC2D8BE5EA8F030400A20132F3DD42C951375AE3560C69A519201919191947F3
	09AD5FD070AC1EDBF90000000049454E44AE426082
	]]>
</GDLPict>

<MigrationTable SectVersion="1" SectionFlags="0" SubIdent="0">
	<MigrationTableElement>
		<MainGUID>1AADD4B6-628A-45A2-A37C-18DC556BF4FB</MainGUID>
		<Version>19</Version>
		<Name><![CDATA[""]]></Name>
		<AutoMigration>true</AutoMigration>
	</MigrationTableElement>
</MigrationTable>

</Symbol>
