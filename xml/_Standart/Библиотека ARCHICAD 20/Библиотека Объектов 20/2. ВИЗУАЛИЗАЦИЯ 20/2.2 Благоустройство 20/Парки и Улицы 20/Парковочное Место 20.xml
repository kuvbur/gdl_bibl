<?xml version="1.0" encoding="UTF-8"?>
<Symbol IsArchivable="true" IsPlaceable="true" MainGUID="46BE76F5-9F6E-441E-AF98-E97B87469C81" MigrationValue="Normal" Owner="1196638531" Signature="1196644685" Version="38">
<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_3D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
if gs_detlevel_3D_m = 0 then
	end
else
	resol 18
	pen gs_cont_pen
	material mat1
	define style "parking" fontType, 250,5,1
	style "parking"
endif

if not(gs_shadow) then SHADOW OFF


if iTerrainSlope <> TERRAINSLOPE_NOSLOPE then
	if iTerrainSlope = TERRAINSLOPE_LENGTHSLOPE then ROTx gs_terrx
	if iTerrainSlope = TERRAINSLOPE_SIDESLOPE then ROTy gs_terry
	mulz -1
	cutplane
	del 1
endif

unID = 0
hotspot 0,0,0 :	unID=unID+1
ADDx A

hotspot  0, 0,	0, unID, B, 1+128:	unID=unID+1
hotspot  0, -1,	0, unID, B, 3:		unID=unID+1
hotspot  0, B,	0, unID, B, 2:		unID=unID+1

del 1
hotspot  0, 0, 0, unID,	A, 1+128:	unID=unID+1
hotspot -1, 0, 0, unID,	A, 3:		unID=unID+1
hotspot  A, 0, 0, unID,	A, 2:		unID=unID+1

if sfs then gosub "drawLine"

if iNumberingSide = NUMBERING_SIDE1 then
	_writeOutNum	= 1 + num_start - 1
	_writeOutCont	= 1
else
	_writeOutNum	= gs_list_parkingPlaces + num_start - 1
	_writeOutCont	= -1
endif

atFirstNum		= 1
atFirstHandic	= 1
atFirstFamily	= 1
atFirstNormal	= 1
atFirstEmpty	= 1
for i = 1 to vardim1(parkingSizes)
	isymboltype = int(parkingSizes[i][2])

	if isymboltype > 0 then
		gosub "drawSign"
		gosub "numbering"
		gosub "drawBollard"
	else
		if markEmptySpace then
			add tl,tb,0
			if SYMB_MIRRORED then mul -1,1,1
			if bNeedTextRotation and bTextFollow2DOrientation then rotz 180

			if isymboltype < 0 then
				text 0.01, 0, "X"
			else
				text 0.01, 0, "E"
			endif	

			if bNeedTextRotation and bTextFollow2DOrientation then del 1
			if SYMB_MIRRORED then del 1
			del 1
		endif
	endif

	add parkingSizes[i][1],0,0

	if i < vardim1(parkingSizes) then
		if not(isymboltype = SYMBOL_WHEELCHAIR) then gosub  "drawLine"
	else
		if sss then gosub  "drawLine"
	endif

next i
del i-1

if bEmptyPlace then
	for i = 1 to iNumEmptyPlace
		gosub "emptySpaceEditing"
	next i
endif

if iTerrainSlope <> TERRAINSLOPE_NOSLOPE then
	del 1
	cutend
endif

end

"drawLine":
	prism_  5, 0.01,
		   -sw/2, 0, 15,
			sw/2, 0, 15,
			sw/2, b, 15,
		   -sw/2, b, 15,
		   -sw/2, 0, -1
return

"drawSign":
	if isymboltype = SYMBOL_WHEELCHAIR then
		if atFirstHandic then
			if GLOB_FEEDBACK_MODE = 1 then
				add handicapWidth, 0, 0
				gosub "drawLine"
				del 1
			endif

			hotspot 0, B/2, 0, unID, handicapWidth, 1+128			: unID = unID + 1
			hotspot -1, B/2, 0, unID, handicapWidth, 3			: unID = unID + 1
			hotspot handicapWidth, B/2, 0, unID, handicapWidth, 2	: unID = unID + 1

			hotspot parkingSizes[i][1]-handicapAddWidth, B/2, 0, unID, handicapAddWidth, 1+128			: unID = unID + 1
			hotspot parkingSizes[i][1]-handicapAddWidth-1, B/2, 0, unID, handicapAddWidth, 3			: unID = unID + 1
			hotspot parkingSizes[i][1], B/2, 0, unID, handicapAddWidth, 2	: unID = unID + 1
			atFirstHandic = 0
		endif

		add 0, B/2-(2/3.079158810136 * sizeMod)/2, 0
		add (parkingSizes[i][1]-handicapAddWidth)/2-(2/3.079158810136 * sizeMod)/2+sw/2, 0, 0
		call "parking_symbols" parameters	A = 2/3.079158810136 * sizeMod,
											B = 2/3.079158810136 * sizeMod,
											ZZYZX = 0.01,
											isymboltype = 1
		del 2

		add parkingSizes[i][1]-handicapAddWidth+sw/2, 0, 0
		if handicapAddWidth > 0 then
			call "parking_symbols" parameters	A = handicapAddWidth,
												B = B,
												ZZYZX = 0.01,
												isymboltype = 3,
												lineWidth = sw
		endif
		del 1

	endif

	if isymboltype = SYMBOL_FAMILY then
		if atFirstFamily then
			if GLOB_FEEDBACK_MODE = 1 then
				add familyWidth, 0, 0
				gosub "drawLine"
				del 1
			endif

			hotspot 0, B/2, 0, unID, familyWidth, 1+128		: unID = unID + 1
			hotspot -1, B/2, 0, unID, familyWidth, 3			: unID = unID + 1
			hotspot familyWidth, B/2, 0, unID, familyWidth, 2	: unID = unID + 1
			atFirstFamily = 0
		endif

		add 0, B/2-(1.796787381172/3.079158810136 * sizeMod)/2, 0
		add parkingSizes[i][1]/2-(2.879158810136/3.079158810136 * sizeMod)/2, 0, 0
		call "parking_symbols" parameters	A = sizeMod,
											B = 2.009757855857/3.079158810136 * sizeMod,
											ZZYZX = 0.01,
											isymboltype = 2
		del 2
	endif

	if isymboltype = SYMBOL_NORMAL then
		if atFirstNormal then
			if GLOB_FEEDBACK_MODE = 1 then
				add minspace, 0, 0
				gosub "drawLine"
				del 1
			endif

			hotspot 0, B/2, 0, unID, minspace, 1+128		: unID = unID + 1
			hotspot -1, B/2, 0, unID, minspace, 3			: unID = unID + 1
			hotspot minspace, B/2, 0, unID, minspace, 2	: unID = unID + 1
			atFirstNormal = 0
		endif
	endif
return


"numbering":
	if show_num then
		if atFirstNum then
			hotspot tl,		0,			0.015,		unID,	tb,		1+128 	:unID = unID + 1
			hotspot tl,		-1,			0.015,		unID,	tb,		3 		:unID = unID + 1
			hotspot tl,		tb,			0.015,		unID,	tb,		2		:unID = unID + 1
			
			hotspot 0,		tb,			0.015,		unID,	tl,		1+128 	:unID = unID + 1
			hotspot -1,		tb,			0.015,		unID,	tl,		3 		:unID = unID + 1
			hotspot tl,		tb,			0.015,		unID,	tl,		2 		:unID = unID + 1
			atFirstNum = 0
		endif
		nTrans3D = 0

		add tl,tb,0
		if SYMB_MIRRORED then mul -1,1,1
		if bNeedTextRotation and bTextFollow2DOrientation then rotz 180

		text 0.01, 0, _writeOutNum

		if bNeedTextRotation and bTextFollow2DOrientation then del 1
		if SYMB_MIRRORED then del 1
		del 1

		_writeOutNum = _writeOutNum + _writeOutCont
	else
		unID = unID + 6
	endif
return

"drawBollard":
	if bBollard then
		if iTerrainSlope = TERRAINSLOPE_LENGTHSLOPE then
			bollardOffsetRatY = cos(gs_terrx)
			bollardOffsetZ = B*sin(gs_terrx)
			bollardHeightAddRot = max(bollardDepth/2,bollardDia/2)*tan(abs(gs_terrx))
		else
			bollardOffsetRatY = 1
			bollardOffsetZ = 0
			if iTerrainSlope = TERRAINSLOPE_SIDESLOPE then
				bollardHeightAddRot = max(bollardWidth/2,bollardDia/2)*tan(abs(gs_terry))
			else
				bollardHeightAddRot = 0
			endif
		endif
	
		if isymboltype = SYMBOL_WHEELCHAIR then
			_handicapAddMod = handicapAddWidth
		else
			_handicapAddMod = 0
		endif
	
		if iTerrainSlope = TERRAINSLOPE_SIDESLOPE then
			bollardOffsetRatX = cos(gs_terry)
			bollardOffsetZ = -((parkingSizes[i][1]-_handicapAddMod)/2)*sin(gs_terry)*(2*i-1)
		else
			bollardOffsetRatX = 1
		endif
		add (parkingSizes[i][1]-_handicapAddMod)/2, B, 0-bollardHeightAddRot
	
		if iTerrainSlope = TERRAINSLOPE_LENGTHSLOPE then ROTx -gs_terrx
		if iTerrainSlope = TERRAINSLOPE_SIDESLOPE then ROTy -gs_terry
	
		call "bollard_m" parameters all bPartOfLayout 	 = 1,
										bRotableLayout   = 1,
										bollardHeight    = bollardHeight + bollardHeightAddRot,
										enableBollardTypes		= 2 + 4 + 8 + 16 + 32 + 64 + 128 + 256 + 512 + 1024 + 2048,
										bollardUniD				= 100 + 10 * i
	
		if iTerrainSlope = TERRAINSLOPE_LENGTHSLOPE then del 1
		if iTerrainSlope = TERRAINSLOPE_SIDESLOPE then del 1
		del 1
	endif
return

"emptySpaceEditing":
	if i = 1 then
		hotspot 0, B/2, 0, unID, emptyPosition1, 1+128			: unID = unID + 1
		hotspot -1, B/2, 0, unID, emptyPosition1, 3				: unID = unID + 1
		hotspot emptyPosition1, B/2, 0, unID, emptyPosition1, 2	: unID = unID + 1
		
		if not(bUniformEmptyWidth) then
			hotspot emptyPosition1, B/2, 0, unID, emptyWidth1, 1+128			: unID = unID + 1
			hotspot emptyPosition1-1, B/2, 0, unID, emptyWidth1, 3			: unID = unID + 1
			hotspot emptyPosition1+emptyWidth1, B/2, 0, unID, emptyWidth1, 2	: unID = unID + 1
		else
			hotspot emptyPosition1, B/2, 0, unID, UniformEmptyWidth, 1+128				: unID = unID + 1
			hotspot emptyPosition1-1, B/2, 0, unID, UniformEmptyWidth, 3					: unID = unID + 1
			hotspot emptyPosition1+UniformEmptyWidth, B/2, 0, unID, UniformEmptyWidth, 2	: unID = unID + 1
		endif
	else
		unID = unID + 3
	endif

	if i = 2 then
		hotspot 0, B/2, 0, unID, emptyPosition2, 1+128			: unID = unID + 1
		hotspot -1, B/2, 0, unID, emptyPosition2, 3				: unID = unID + 1
		hotspot emptyPosition2, B/2, 0, unID, emptyPosition2, 2	: unID = unID + 1
		
		if not(bUniformEmptyWidth) then
			hotspot emptyPosition2, B/2, 0, unID, emptyWidth2, 1+128			: unID = unID + 1
			hotspot emptyPosition2-1, B/2, 0, unID, emptyWidth2, 3			: unID = unID + 1
			hotspot emptyPosition2+emptyWidth2, B/2, 0, unID, emptyWidth2, 2	: unID = unID + 1
		else
			unID = unID + 3
		endif
	else
		unID = unID + 3
	endif

	if i = 3 then
		hotspot 0, B/2, 0, unID, emptyPosition3, 1+128			: unID = unID + 1
		hotspot -1, B/2, 0, unID, emptyPosition3, 3				: unID = unID + 1
		hotspot emptyPosition3, B/2, 0, unID, emptyPosition3, 2	: unID = unID + 1
		
		if not(bUniformEmptyWidth) then
			hotspot emptyPosition3, B/2, 0, unID, emptyWidth3, 1+128			: unID = unID + 1
			hotspot emptyPosition3-1, B/2, 0, unID, emptyWidth3, 3			: unID = unID + 1
			hotspot emptyPosition3+emptyWidth3, B/2, 0, unID, emptyWidth3, 2	: unID = unID + 1
		else
			unID = unID + 3
		endif
	else
		unID = unID + 3
	endif

	if i = 4 then
		hotspot 0, B/2, 0, unID, emptyPosition4, 1+128			: unID = unID + 1
		hotspot -1, B/2, 0, unID, emptyPosition4, 3				: unID = unID + 1
		hotspot emptyPosition4, B/2, 0, unID, emptyPosition4, 2	: unID = unID + 1
		
		if not(bUniformEmptyWidth) then
			hotspot emptyPosition4, B/2, 0, unID, emptyWidth4, 1+128			: unID = unID + 1
			hotspot emptyPosition4-1, B/2, 0, unID, emptyWidth4, 3			: unID = unID + 1
			hotspot emptyPosition4+emptyWidth4, B/2, 0, unID, emptyWidth4, 2	: unID = unID + 1
		else
			unID = unID + 3
		endif
	else
		unID = unID + 3
	endif

	if i = 5 then
		hotspot 0, B/2, 0, unID, emptyPosition5, 1+128			: unID = unID + 1
		hotspot -1, B/2, 0, unID, emptyPosition5, 3				: unID = unID + 1
		hotspot emptyPosition5, B/2, 0, unID, emptyPosition5, 2	: unID = unID + 1
		
		if not(bUniformEmptyWidth) then
			hotspot emptyPosition5, B/2, 0, unID, emptyWidth5, 1+128			: unID = unID + 1
			hotspot emptyPosition5-1, B/2, 0, unID, emptyWidth5, 3			: unID = unID + 1
			hotspot emptyPosition5+emptyWidth5, B/2, 0, unID, emptyWidth5, 2	: unID = unID + 1
		else
			unID = unID + 3
		endif
	else
		unID = unID + 3
	endif

	if i = 6 then
		hotspot 0, B/2, 0, unID, emptyPosition6, 1+128			: unID = unID + 1
		hotspot -1, B/2, 0, unID, emptyPosition6, 3				: unID = unID + 1
		hotspot emptyPosition6, B/2, 0, unID, emptyPosition6, 2	: unID = unID + 1
		
		if not(bUniformEmptyWidth) then
			hotspot emptyPosition6, B/2, 0, unID, emptyWidth6, 1+128			: unID = unID + 1
			hotspot emptyPosition6-1, B/2, 0, unID, emptyWidth6, 3			: unID = unID + 1
			hotspot emptyPosition6+emptyWidth6, B/2, 0, unID, emptyWidth6, 2	: unID = unID + 1
		else
			unID = unID + 3
		endif
	else
		unID = unID + 3
	endif

	if i = 7 then
		hotspot 0, B/2, 0, unID, emptyPosition7, 1+128			: unID = unID + 1
		hotspot -1, B/2, 0, unID, emptyPosition7, 3				: unID = unID + 1
		hotspot emptyPosition7, B/2, 0, unID, emptyPosition7, 2	: unID = unID + 1
		
		if not(bUniformEmptyWidth) then
			hotspot emptyPosition7, B/2, 0, unID, emptyWidth7, 1+128			: unID = unID + 1
			hotspot emptyPosition7-1, B/2, 0, unID, emptyWidth7, 3			: unID = unID + 1
			hotspot emptyPosition7+emptyWidth7, B/2, 0, unID, emptyWidth7, 2	: unID = unID + 1
		else
			unID = unID + 3
		endif
	else
		unID = unID + 3
	endif

	if i = 8 then
		hotspot 0, B/2, 0, unID, emptyPosition8, 1+128			: unID = unID + 1
		hotspot -1, B/2, 0, unID, emptyPosition8, 3				: unID = unID + 1
		hotspot emptyPosition8, B/2, 0, unID, emptyPosition8, 2	: unID = unID + 1
		
		if not(bUniformEmptyWidth) then
			hotspot emptyPosition8, B/2, 0, unID, emptyWidth8, 1+128			: unID = unID + 1
			hotspot emptyPosition8-1, B/2, 0, unID, emptyWidth8, 3			: unID = unID + 1
			hotspot emptyPosition8+emptyWidth8, B/2, 0, unID, emptyWidth8, 2	: unID = unID + 1
		else
			unID = unID + 3
		endif
	else
		unID = unID + 3
	endif

	if i = 9 then
		hotspot 0, B/2, 0, unID, emptyPosition9, 1+128			: unID = unID + 1
		hotspot -1, B/2, 0, unID, emptyPosition9, 3				: unID = unID + 1
		hotspot emptyPosition9, B/2, 0, unID, emptyPosition9, 2	: unID = unID + 1
		
		if not(bUniformEmptyWidth) then
			hotspot emptyPosition9, B/2, 0, unID, emptyWidth9, 1+128			: unID = unID + 1
			hotspot emptyPosition9-1, B/2, 0, unID, emptyWidth9, 3			: unID = unID + 1
			hotspot emptyPosition9+emptyWidth9, B/2, 0, unID, emptyWidth9, 2	: unID = unID + 1
		else
			unID = unID + 3
		endif
	else
		unID = unID + 3
	endif

	if i = 10 then
		hotspot 0, B/2, 0, unID, emptyPosition10, 1+128			: unID = unID + 1
		hotspot -1, B/2, 0, unID, emptyPosition10, 3				: unID = unID + 1
		hotspot emptyPosition10, B/2, 0, unID, emptyPosition10, 2	: unID = unID + 1
		
		if not(bUniformEmptyWidth) then
			hotspot emptyPosition10, B/2, 0, unID, emptyWidth10, 1+128			: unID = unID + 1
			hotspot emptyPosition10-1, B/2, 0, unID, emptyWidth10, 3				: unID = unID + 1
			hotspot emptyPosition10+emptyWidth10, B/2, 0, unID, emptyWidth10, 2	: unID = unID + 1
		else
			unID = unID + 3
		endif
	else
		unID = unID + 3
	endif
return



]]>
</Script_3D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_2D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[

lod2D = 0
if GLOB_SCALE > 150 then
	lod2D = DET2D_SIMPLE_ONE
endif
if GLOB_SCALE <= 150 and GLOB_SCALE > 75 then
	lod2D = DET2D_SIMPLE_TWO
endif
if GLOB_SCALE <=  75 then
	lod2D = DET2D_DETAILED
endif

if scaleSensFontSize then
	if lod2D = DET2D_SIMPLE_ONE then fontHeight = fontSize200mm
	if lod2D = DET2D_SIMPLE_TWO then fontHeight = fontSize100mm
	if lod2D = DET2D_DETAILED then fontHeight = fontSize50mm
else
	fontHeight = gs_font_height
endif

pen gs_cont_pen
fill gs_fill_type

mul2 COS(gs_terry),COS(gs_terrx)

define style "parking" fontType, fontHeight,5,1
style "parking"

call "Resize_A_B_ZZYZX" Parameters ALL

unID = 1

if sfs then gosub "drawLine"

if iNumberingSide = NUMBERING_SIDE1 then
	_writeOutNum	= 1 + num_start - 1
	_writeOutCont	= 1
else
	_writeOutNum	= gs_list_parkingPlaces + num_start - 1
	_writeOutCont	= -1
endif

atFirstNum		= 1
atFirstHandic	= 1
atFirstFamily	= 1
atFirstNormal	= 1
atFirstEmpty	= 1
for i = 1 to vardim1(parkingSizes)
	isymboltype = int(parkingSizes[i][2])

	if isymboltype > 0 then
		gosub "drawSign"
		gosub "numbering"
		gosub "drawBollard"
	else
		if markEmptySpace then
			add2 tl,tb
			if typeTextRotation_m = TEXT_READABLE & bNeedTextRotation then rot2 180
	
				if isymboltype < 0 then
					text2 0, 0, "X"
				else
					text2 0, 0, "E"
				endif
	
			if typeTextRotation_m = TEXT_READABLE & bNeedTextRotation then del 1
			del 1
		endif
	endif

	add2 parkingSizes[i][1],0

	if i < vardim1(parkingSizes) then
		if not(isymboltype = SYMBOL_WHEELCHAIR) then gosub  "drawLine"
	else
		if sss then gosub  "drawLine"
	endif
next i

del i-1

if markEmptySpace then
	_writeOutNum	= 1
	_writeOutCont	= 1
	for i = 1 to vardim1(parkingSizes)
		add2 0,-tb
		gosub "numbering"
		del 1
		add2 parkingSizes[i][1],0
	next i
	del i-1
endif

if bEmptyPlace then
	for i = 1 to iNumEmptyPlace
		gosub "emptySpaceEditing"
	next i
endif
end

"drawLine":
	poly2_b 5, 1+2+4+64, gs_fill_pen, gs_back_pen,
		   -sw/2, 0, 1,
			sw/2, 0, 1,
			sw/2, b, 1,
		   -sw/2, b, 1,
		   -sw/2, 0, 1
return

"drawSign":
	if isymboltype = SYMBOL_WHEELCHAIR then
		if atFirstHandic then
			if GLOB_FEEDBACK_MODE = 1 then
				add2 handicapWidth, 0
				gosub "drawLine"
				del 1
			endif

			hotspot2 0, B/2, unID, handicapWidth, 1+128			: unID = unID + 1
			hotspot2 -1, B/2, unID, handicapWidth, 3			: unID = unID + 1
			hotspot2 handicapWidth, B/2, unID, handicapWidth, 2	: unID = unID + 1

			hotspot2 parkingSizes[i][1]-handicapAddWidth, B/2, unID, handicapAddWidth, 1+128			: unID = unID + 1
			hotspot2 parkingSizes[i][1]-handicapAddWidth-1, B/2, unID, handicapAddWidth, 3			: unID = unID + 1
			hotspot2 parkingSizes[i][1], B/2, unID, handicapAddWidth, 2	: unID = unID + 1
			atFirstHandic = 0
		endif

		if idetlevel2D = DETLEVEL2D_DETAILED then
			add2 0,B/2-(2/3.079158810136 * sizeMod)/2
			add2 (parkingSizes[i][1]-handicapAddWidth)/2-(2/3.079158810136 * sizeMod)/2+sw/2,0
			call "parking_symbols" parameters all	A = 2/3.079158810136 * sizeMod,
													B = 2/3.079158810136 * sizeMod,
													ZZYZX = 0.01,
													isymboltype = 1,
													bFillIn2D = 1
			del 2
		endif

		if idetlevel2D = DETLEVEL2D_DETAILED then
			_isymboltype = 3
		else
			_isymboltype = 4
		endif

		add2 parkingSizes[i][1]-handicapAddWidth+sw/2, 0
		if handicapAddWidth > 0 then
			call "parking_symbols" parameters all	A = handicapAddWidth,
													B = B,
													ZZYZX = 0.01,
													isymboltype = _isymboltype,
													lineWidth = sw,
													bFillIn2D = 1
		endif
		del 1
	endif

	if isymboltype = SYMBOL_FAMILY then
		if atFirstFamily then
			if GLOB_FEEDBACK_MODE = 1 then
				add2 familyWidth, 0
				gosub "drawLine"
				del 1
			endif

			hotspot2 0, B/2, unID, familyWidth, 1+128		: unID = unID + 1
			hotspot2 -1, B/2, unID, familyWidth, 3			: unID = unID + 1
			hotspot2 familyWidth, B/2, unID, familyWidth, 2	: unID = unID + 1
			atFirstFamily = 0
		endif
		if idetlevel2D = DETLEVEL2D_DETAILED then
			add2 0, B/2-(1.796787381172/3.079158810136 * sizeMod)/2
			add2 parkingSizes[i][1]/2-(2.879158810136/3.079158810136 * sizeMod)/2, 0
			call "parking_symbols" parameters all	A = sizeMod,
													B = (2.009757855857/3.079158810136 * sizeMod),
													ZZYZX = 0.01,
													isymboltype = 2,
													bFillIn2D = 1
			del 2
		endif

	endif

	if isymboltype = SYMBOL_NORMAL then
		if atFirstNormal then
			if GLOB_FEEDBACK_MODE = 1 then
				add2 minspace, 0
				gosub "drawLine"
				del 1
			endif

			hotspot2 0, B/2, unID, minspace, 1+128		: unID = unID + 1
			hotspot2 -1, B/2, unID, minspace, 3			: unID = unID + 1
			hotspot2 minspace, B/2, unID, minspace, 2	: unID = unID + 1
			atFirstNormal = 0
		endif
	endif
return

"numbering":
	if show_num then
		if atFirstNum then
			hotspot2 tl,0,unID,tb,1+128 :unID = unID + 1
			hotspot2 tl,-1,unID,tb,3 :unID = unID + 1
			hotspot2 tl,tb,unID,tb,2 :unID = unID + 1
			
			hotspot2 0,tb,unID,tl,1+128 :unID = unID + 1
			hotspot2 -1,tb,unID,tl,3 :unID = unID + 1
			hotspot2 tl,tb,unID,tl,2 :unID = unID + 1
			atFirstNum = 0
		endif

		add2 tl,tb
		if typeTextRotation_m = TEXT_READABLE & bNeedTextRotation then rot2 180

		text2 0, 0, _writeOutNum

		if typeTextRotation_m = TEXT_READABLE & bNeedTextRotation then del 1
		del 1

		_writeOutNum = _writeOutNum + _writeOutCont
	else
		unID = unID + 6
	endif
return

"drawBollard":
	if bBollard then
		if isymboltype = SYMBOL_WHEELCHAIR then
			_handicapAddMod = handicapAddWidth
		else
			_handicapAddMod = 0
		endif

		add2 (parkingSizes[i][1]-_handicapAddMod)/2, B
		call "bollard_m" parameters all bPartOfLayout 	= 1,
										enableBollardTypes		= 2 + 4 + 8 + 16 + 32 + 64 + 128 + 256 + 512 + 1024 + 2048,
										bollardUniD				= 100 + 10 * i
		del 1
	endif
return

"emptySpaceEditing":
	if i = 1 then
		hotspot2 0, B/2, unID, emptyPosition1, 1+128			: unID = unID + 1
		hotspot2 -1, B/2, unID, emptyPosition1, 3				: unID = unID + 1
		hotspot2 emptyPosition1, B/2, unID, emptyPosition1, 2	: unID = unID + 1
		
		if not(bUniformEmptyWidth) then
			hotspot2 emptyPosition1, B/2, unID, emptyWidth1, 1+128			: unID = unID + 1
			hotspot2 emptyPosition1-1, B/2, unID, emptyWidth1, 3			: unID = unID + 1
			hotspot2 emptyPosition1+emptyWidth1, B/2, unID, emptyWidth1, 2	: unID = unID + 1
		else
			hotspot2 emptyPosition1, B/2, unID, UniformEmptyWidth, 1+128				: unID = unID + 1
			hotspot2 emptyPosition1-1, B/2, unID, UniformEmptyWidth, 3					: unID = unID + 1
			hotspot2 emptyPosition1+UniformEmptyWidth, B/2, unID, UniformEmptyWidth, 2	: unID = unID + 1
		endif
	else
		unID = unID + 3
	endif

	if i = 2 then
		hotspot2 0, B/2, unID, emptyPosition2, 1+128			: unID = unID + 1
		hotspot2 -1, B/2, unID, emptyPosition2, 3				: unID = unID + 1
		hotspot2 emptyPosition2, B/2, unID, emptyPosition2, 2	: unID = unID + 1
		
		if not(bUniformEmptyWidth) then
			hotspot2 emptyPosition2, B/2, unID, emptyWidth2, 1+128			: unID = unID + 1
			hotspot2 emptyPosition2-1, B/2, unID, emptyWidth2, 3			: unID = unID + 1
			hotspot2 emptyPosition2+emptyWidth2, B/2, unID, emptyWidth2, 2	: unID = unID + 1
		else
			unID = unID + 3
		endif
	else
		unID = unID + 3
	endif

	if i = 3 then
		hotspot2 0, B/2, unID, emptyPosition3, 1+128			: unID = unID + 1
		hotspot2 -1, B/2, unID, emptyPosition3, 3				: unID = unID + 1
		hotspot2 emptyPosition3, B/2, unID, emptyPosition3, 2	: unID = unID + 1
		
		if not(bUniformEmptyWidth) then
			hotspot2 emptyPosition3, B/2, unID, emptyWidth3, 1+128			: unID = unID + 1
			hotspot2 emptyPosition3-1, B/2, unID, emptyWidth3, 3			: unID = unID + 1
			hotspot2 emptyPosition3+emptyWidth3, B/2, unID, emptyWidth3, 2	: unID = unID + 1
		else
			unID = unID + 3
		endif
	else
		unID = unID + 3
	endif

	if i = 4 then
		hotspot2 0, B/2, unID, emptyPosition4, 1+128			: unID = unID + 1
		hotspot2 -1, B/2, unID, emptyPosition4, 3				: unID = unID + 1
		hotspot2 emptyPosition4, B/2, unID, emptyPosition4, 2	: unID = unID + 1
		
		if not(bUniformEmptyWidth) then
			hotspot2 emptyPosition4, B/2, unID, emptyWidth4, 1+128			: unID = unID + 1
			hotspot2 emptyPosition4-1, B/2, unID, emptyWidth4, 3			: unID = unID + 1
			hotspot2 emptyPosition4+emptyWidth4, B/2, unID, emptyWidth4, 2	: unID = unID + 1
		else
			unID = unID + 3
		endif
	else
		unID = unID + 3
	endif

	if i = 5 then
		hotspot2 0, B/2, unID, emptyPosition5, 1+128			: unID = unID + 1
		hotspot2 -1, B/2, unID, emptyPosition5, 3				: unID = unID + 1
		hotspot2 emptyPosition5, B/2, unID, emptyPosition5, 2	: unID = unID + 1
		
		if not(bUniformEmptyWidth) then
			hotspot2 emptyPosition5, B/2, unID, emptyWidth5, 1+128			: unID = unID + 1
			hotspot2 emptyPosition5-1, B/2, unID, emptyWidth5, 3			: unID = unID + 1
			hotspot2 emptyPosition5+emptyWidth5, B/2, unID, emptyWidth5, 2	: unID = unID + 1
		else
			unID = unID + 3
		endif
	else
		unID = unID + 3
	endif

	if i = 6 then
		hotspot2 0, B/2, unID, emptyPosition6, 1+128			: unID = unID + 1
		hotspot2 -1, B/2, unID, emptyPosition6, 3				: unID = unID + 1
		hotspot2 emptyPosition6, B/2, unID, emptyPosition6, 2	: unID = unID + 1
		
		if not(bUniformEmptyWidth) then
			hotspot2 emptyPosition6, B/2, unID, emptyWidth6, 1+128			: unID = unID + 1
			hotspot2 emptyPosition6-1, B/2, unID, emptyWidth6, 3			: unID = unID + 1
			hotspot2 emptyPosition6+emptyWidth6, B/2, unID, emptyWidth6, 2	: unID = unID + 1
		else
			unID = unID + 3
		endif
	else
		unID = unID + 3
	endif

	if i = 7 then
		hotspot2 0, B/2, unID, emptyPosition7, 1+128			: unID = unID + 1
		hotspot2 -1, B/2, unID, emptyPosition7, 3				: unID = unID + 1
		hotspot2 emptyPosition7, B/2, unID, emptyPosition7, 2	: unID = unID + 1
		
		if not(bUniformEmptyWidth) then
			hotspot2 emptyPosition7, B/2, unID, emptyWidth7, 1+128			: unID = unID + 1
			hotspot2 emptyPosition7-1, B/2, unID, emptyWidth7, 3			: unID = unID + 1
			hotspot2 emptyPosition7+emptyWidth7, B/2, unID, emptyWidth7, 2	: unID = unID + 1
		else
			unID = unID + 3
		endif
	else
		unID = unID + 3
	endif

	if i = 8 then
		hotspot2 0, B/2, unID, emptyPosition8, 1+128			: unID = unID + 1
		hotspot2 -1, B/2, unID, emptyPosition8, 3				: unID = unID + 1
		hotspot2 emptyPosition8, B/2, unID, emptyPosition8, 2	: unID = unID + 1
		
		if not(bUniformEmptyWidth) then
			hotspot2 emptyPosition8, B/2, unID, emptyWidth8, 1+128			: unID = unID + 1
			hotspot2 emptyPosition8-1, B/2, unID, emptyWidth8, 3			: unID = unID + 1
			hotspot2 emptyPosition8+emptyWidth8, B/2, unID, emptyWidth8, 2	: unID = unID + 1
		else
			unID = unID + 3
		endif
	else
		unID = unID + 3
	endif

	if i = 9 then
		hotspot2 0, B/2, unID, emptyPosition9, 1+128			: unID = unID + 1
		hotspot2 -1, B/2, unID, emptyPosition9, 3				: unID = unID + 1
		hotspot2 emptyPosition9, B/2, unID, emptyPosition9, 2	: unID = unID + 1
		
		if not(bUniformEmptyWidth) then
			hotspot2 emptyPosition9, B/2, unID, emptyWidth9, 1+128			: unID = unID + 1
			hotspot2 emptyPosition9-1, B/2, unID, emptyWidth9, 3			: unID = unID + 1
			hotspot2 emptyPosition9+emptyWidth9, B/2, unID, emptyWidth9, 2	: unID = unID + 1
		else
			unID = unID + 3
		endif
	else
		unID = unID + 3
	endif

	if i = 10 then
		hotspot2 0, B/2, unID, emptyPosition10, 1+128			: unID = unID + 1
		hotspot2 -1, B/2, unID, emptyPosition10, 3				: unID = unID + 1
		hotspot2 emptyPosition10, B/2, unID, emptyPosition10, 2	: unID = unID + 1
		
		if not(bUniformEmptyWidth) then
			hotspot2 emptyPosition10, B/2, unID, emptyWidth10, 1+128			: unID = unID + 1
			hotspot2 emptyPosition10-1, B/2, unID, emptyWidth10, 3				: unID = unID + 1
			hotspot2 emptyPosition10+emptyWidth10, B/2, unID, emptyWidth10, 2	: unID = unID + 1
		else
			unID = unID + 3
		endif
	else
		unID = unID + 3
	endif
return

]]>
</Script_2D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_1D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
EPS = 0.00001
sizeMod = familyWidth*0.9
inner_num = int((a + EPS) / minspace)

DET2D_SIMPLE_ONE		= 11
DET2D_SIMPLE_TWO		= 12
DET2D_DETAILED			= 30

dim stDetail_3D[3]
	stDetail_3D[1] = `Откл.`
	stDetail_3D[2] = `Простой`
	stDetail_3D[3] = `Детальный`

! idetlevel2D
dim stdetlevel2D[2]
	stdetlevel2D[1] = `Простой`
	stdetlevel2D[2] = `Детальный`

DETLEVEL2D_SIMPLE	= 1
DETLEVEL2D_DETAILED	= 2

! iTerrainSlope
DIM stSlopeTypes[3]
	stSlopeTypes[1] = `Без Наклона`
	stSlopeTypes[2] = `Продольный Наклон`
	stSlopeTypes[3] = `Боковой Наклон`

TERRAINSLOPE_NOSLOPE     = 1
TERRAINSLOPE_LENGTHSLOPE = 2
TERRAINSLOPE_SIDESLOPE   = 3

!isymboltype
SYMBOL_USELESS		= -1
SYMBOL_EMPTY		= 0
SYMBOL_WHEELCHAIR	= 1
SYMBOL_FAMILY		= 2
SYMBOL_NORMAL		= 3


!iNumberingSide
dim stNumberingSide[2]
	stNumberingSide[1] = `Cо Стороны 1`
	stNumberingSide[2] = `Cо Стороны 2`

NUMBERING_SIDE1	= 1
NUMBERING_SIDE2	= 2


!typeTextRotation_m
TEXT_ALIGNED = 0
TEXT_READABLE = 2

angleViewRot = 0
totalRotate = 0
bNeedTextRotation = 0

if (GLOB_SCRIPT_TYPE = 2 | GLOB_SCRIPT_TYPE = 3) & typeTextRotation_m = TEXT_READABLE then
	! --- Oriented View ------------------------------ [

	rrr = REQUEST ("View_Rotangle", "", angleViewRot)
	totalRotate = (SYMB_ROTANGLE + angleViewRot) MOD 360

	if (totalRotate > (gs_readable_angle + EPS) & totalRotate < (gs_readable_angle + 180 + EPS)) then
		bNeedTextRotation = 1
	endif
endif


]]>
</Script_1D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_VL SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
! ==============================================================================
! Font Size setting
! ==============================================================================

parameters gs_font_height = abs(gs_font_height)
values "gs_font_height" range (0,]
values "gs_font_height_point" range (0,]

if scaleSensFontSize then
	lock "gs_font_height", "gs_font_height_point"
	hideparameter "gs_font_height", "gs_font_height_point"
else
	lock	"fontSize50mm", "fontSize50pt",
			"fontSize100mm", "fontSize100pt",
			"fontSize200mm", "fontSize200pt"
	hideparameter 	"fontSize50mm", "fontSize50pt",
					"fontSize100mm", "fontSize100pt",
					"fontSize200mm", "fontSize200pt"
endif

w_units_form = ""
rrr = request("Working_length_unit", "", w_units_form)
bMetricDimension = strstr(w_units_form, "m")		! m, cm, mm

if bMetricDimension then
	lock "fontSize200pt", "fontSize100pt", "fontSize50pt", "gs_font_height_point"
	hideparameter "fontSize200pt", "fontSize100pt", "fontSize50pt", "gs_font_height_point"
else
	lock "fontSize200mm", "fontSize100mm", "fontSize50mm", "gs_font_height"
	hideparameter "fontSize200mm", "fontSize100mm", "fontSize50mm", "gs_font_height"
endif

call "FM_types" parameters all



values{2} "idetlevel2D"	DETLEVEL2D_SIMPLE, stdetlevel2D[1],
						DETLEVEL2D_DETAILED, stdetlevel2D[2]

values "gs_detlevel_3D" stDetail_3D[3], stDetail_3D[1]
values "gs_detlevel_3D_m" 2, 0

if GLOB_MODPAR_NAME = "gs_detlevel_3D" then
	gs_detlevel_3D_m = 2
	if gs_detlevel_3D = stDetail_3D[1] then gs_detlevel_3D_m = 0
	parameters gs_detlevel_3D_m = gs_detlevel_3D_m
else
	gs_detlevel_3D = stDetail_3D[3]
	if gs_detlevel_3D_m = 0 then gs_detlevel_3D = stDetail_3D[1]
	parameters gs_detlevel_3D = gs_detlevel_3D
endif

values{2} "iNumberingSide"	NUMBERING_SIDE1,	stNumberingSide[1],
							NUMBERING_SIDE2,	stNumberingSide[2]


! ==============================================================================
! Palce Size setting
! ==============================================================================

if not(bEmptyPlace) then
	hideparameter "iNumEmptyPlace", "bUniformEmptyWidth", "UniformEmptyWidth"
	lock "iNumEmptyPlace", "bUniformEmptyWidth", "UniformEmptyWidth"

	for i = 1 to 10
		_widthParName	= "emptyWidth" + str(i,1,0)
		_posParName		= "emptyPosition" + str(i,1,0)
		hideparameter _widthParName, _posParName
		lock _widthParName, _posParName
	next i
endif

if not(bUniformEmptyWidth) then
	hideparameter "UniformEmptyWidth"
	lock "UniformEmptyWidth"
else
	for i = 1 to 10
		_widthParName	= "emptyWidth" + str(i,1,0)
		hideparameter _widthParName
		lock _widthParName
	next i
endif

values "iNumEmptyPlace" 1,2,3,4,5,6,7,8,9,10
values "iNumHandicapPlace" range [1, int((A-(iNumFamilyPlace*familyWidth)) / (handicapWidth+handicapAddWidth))]
values "iNumFamilyPlace" range [1, int((A-iNumHandicapPlace*(handicapWidth+handicapAddWidth)) / familyWidth)]

values "UniformEmptyWidth" range (0, ]
values "emptyWidth1" range (0, ]
values "emptyWidth2" range (0, ]
values "emptyWidth3" range (0, ]
values "emptyWidth4" range (0, ]
values "emptyWidth5" range (0, ]
values "emptyWidth6" range (0, ]
values "emptyWidth7" range (0, ]
values "emptyWidth8" range (0, ]
values "emptyWidth9" range (0, ]
values "emptyWidth10" range (0, ]
values "handicapWidth" range (0, ]
values "handicapAddWidth" range [0, ]
values "familyWidth" range (0, ]

for i = 10 to iNumEmptyPlace + 1 step -1
	_widthParName	= "emptyWidth" + str(i,1,0)
	_posParName		= "emptyPosition" + str(i,1,0)
	hideparameter _widthParName, _posParName
	lock _widthParName, _posParName
next i

_currpos = 0
values "emptyPosition1" range [_currpos,)
EmptyPlaceDataGrid[1][1] = emptyPosition1
if bUniformEmptyWidth then
	EmptyPlaceDataGrid[1][2] = UniformEmptyWidth
else
	EmptyPlaceDataGrid[1][2] = emptyWidth1
endif

_currpos = emptyPosition1 + emptyWidth1
values "emptyPosition2" range [_currpos,)
EmptyPlaceDataGrid[2][1] = emptyPosition2
if bUniformEmptyWidth then
	EmptyPlaceDataGrid[2][2] = UniformEmptyWidth
else
	EmptyPlaceDataGrid[2][2] = emptyWidth2
endif

_currpos = emptyPosition2 + emptyWidth2
values "emptyPosition3" range [_currpos,)
EmptyPlaceDataGrid[3][1] = emptyPosition3
if bUniformEmptyWidth then
	EmptyPlaceDataGrid[3][2] = UniformEmptyWidth
else
	EmptyPlaceDataGrid[3][2] = emptyWidth3
endif

_currpos = emptyPosition3 + emptyWidth3
values "emptyPosition4" range [_currpos,)
EmptyPlaceDataGrid[4][1] = emptyPosition4
if bUniformEmptyWidth then
	EmptyPlaceDataGrid[4][2] = UniformEmptyWidth
else
	EmptyPlaceDataGrid[4][2] = emptyWidth4
endif

_currpos = emptyPosition4 + emptyWidth4
values "emptyPosition5" range [_currpos,)
EmptyPlaceDataGrid[5][1] = emptyPosition5
if bUniformEmptyWidth then
	EmptyPlaceDataGrid[5][2] = UniformEmptyWidth
else
	EmptyPlaceDataGrid[5][2] = emptyWidth5
endif

_currpos = emptyPosition5 + emptyWidth5
values "emptyPosition6" range [_currpos,)
EmptyPlaceDataGrid[6][1] = emptyPosition6
if bUniformEmptyWidth then
	EmptyPlaceDataGrid[6][2] = UniformEmptyWidth
else
	EmptyPlaceDataGrid[6][2] = emptyWidth6
endif

_currpos = emptyPosition6 + emptyWidth6
values "emptyPosition7" range [_currpos,)
EmptyPlaceDataGrid[7][1] = emptyPosition7
if bUniformEmptyWidth then
	EmptyPlaceDataGrid[7][2] = UniformEmptyWidth
else
	EmptyPlaceDataGrid[7][2] = emptyWidth7
endif

_currpos = emptyPosition7 + emptyWidth7
values "emptyPosition8" range [_currpos,)
EmptyPlaceDataGrid[8][1] = emptyPosition8
if bUniformEmptyWidth then
	EmptyPlaceDataGrid[8][2] = UniformEmptyWidth
else
	EmptyPlaceDataGrid[8][2] = emptyWidth8
endif

_currpos = emptyPosition8 + emptyWidth8
values "emptyPosition9" range [_currpos,)
EmptyPlaceDataGrid[9][1] = emptyPosition9
if bUniformEmptyWidth then
	EmptyPlaceDataGrid[9][2] = UniformEmptyWidth
else
	EmptyPlaceDataGrid[9][2] = emptyWidth9
endif

_currpos = emptyPosition9 + emptyWidth9
values "emptyPosition10" range [_currpos,)
EmptyPlaceDataGrid[10][1] = emptyPosition10
if bUniformEmptyWidth then
	EmptyPlaceDataGrid[10][2] = UniformEmptyWidth
else
	EmptyPlaceDataGrid[10][2] = emptyWidth10
endif
parameters EmptyPlaceDataGrid = EmptyPlaceDataGrid

if not(bHandicapPlace) then
	hideparameter "iNumHandicapPlace", "handicapWidth", "handicapAddWidth"
	lock "iNumHandicapPlace", "handicapWidth", "handicapAddWidth"
endif

if not(bFamilyPlace) then
	hideparameter "iNumFamilyPlace", "familyWidth"
	lock "iNumFamilyPlace", "familyWidth"
endif

!========================================================
! calculate Parking Segments Widths
!========================================================
dim _parkingSegments[]
if bEmptyPlace then
	for i = 1 to iNumEmptyPlace
		if i = 1 then
			_parkingSegments[1] = EmptyPlaceDataGrid[1][1]
		else
			_parkingSegments[i] = EmptyPlaceDataGrid[i][1] - (EmptyPlaceDataGrid[i-1][1] + EmptyPlaceDataGrid[i-1][2])
		endif
	next i
	
	if A - (EmptyPlaceDataGrid[i-1][1] + EmptyPlaceDataGrid[i-1][2]) > 0 then
		_parkingSegments[i] = A - (EmptyPlaceDataGrid[i-1][1] + EmptyPlaceDataGrid[i-1][2])
	endif
else
	_parkingSegments[1] = A
endif

parameters parkingSegments = _parkingSegments

!========================================================

dim _parkingSizes[][]
_handicFullsize		= handicapWidth + handicapAddWidth
if bEmptyPlace then
	_reamingEmptyNum	= iNumEmptyPlace
else
	_reamingEmptyNum	= 0
endif

if bHandicapPlace then
	_reamingHandicNum	= iNumHandicapPlace
else
	_reamingHandicNum	= 0
endif

if bFamilyPlace then
	_reamingFamilyNum	= iNumFamilyPlace
else
	_reamingFamilyNum	= 0
endif

_place = 1
for i = 1 to vardim1(ParkingSegments)
	maxHandicInSegment = 0
	maxFamilyInSegment = 0
	maxNormalInSegment = 0
	_AdditionalWidthInSegment = 0

	if ParkingSegments[i] > EPS then
		if bHandicapPlace & _reamingHandicNum > 0 then
			maxHandicInSegment = min(int(ParkingSegments[i] / _handicFullsize), _reamingHandicNum)
			_reamingHandicNum = _reamingHandicNum - maxHandicInSegment
		endif

		_reamingWidth = ParkingSegments[i] - (maxHandicInSegment * _handicFullsize)
		if bFamilyPlace & _reamingHandicNum = 0 & _reamingFamilyNum > 0 & \
			(_reamingWidth - familyWidth > EPS | abs(_reamingWidth - familyWidth) < EPS) then
			maxFamilyInSegment =  min(int(_reamingWidth / familyWidth), _reamingFamilyNum)
			_reamingFamilyNum = _reamingFamilyNum - maxFamilyInSegment
		endif

		_reamingWidth = ParkingSegments[i] - (maxHandicInSegment * _handicFullsize) - (maxFamilyInSegment * familyWidth)
		if _reamingWidth > 0 & _reamingHandicNum = 0 & _reamingFamilyNum = 0 & \
			(_reamingWidth - minspace > EPS | abs(_reamingWidth - minspace) < EPS) then
			maxNormalInSegment = int(_reamingWidth / minspace)
		endif

		_reamingWidth = ParkingSegments[i] - (maxHandicInSegment * _handicFullsize) - (maxFamilyInSegment * familyWidth) - (maxNormalInSegment * minspace)
		if _reamingWidth > EPS then
			if maxHandicInSegment + maxFamilyInSegment + maxNormalInSegment > 0 then
				_AdditionalWidthInSegment = _reamingWidth / (maxHandicInSegment + maxFamilyInSegment + maxNormalInSegment)
			else
				_parkingSizes[_place][1] = _reamingWidth
				_parkingSizes[_place][2] = SYMBOL_USELESS ! Useless
				_place = _place + 1
			endif
		endif

		for j = 1 to maxHandicInSegment
			_parkingSizes[_place][1] =_handicFullsize + _AdditionalWidthInSegment
			_parkingSizes[_place][2] = SYMBOL_WHEELCHAIR ! Disabled
			_place = _place + 1
		next j

		for j = 1 to maxFamilyInSegment
			_parkingSizes[_place][1] = familyWidth + _AdditionalWidthInSegment
			_parkingSizes[_place][2] = SYMBOL_FAMILY ! Family
			_place = _place + 1
		next j

		for j = 1 to maxNormalInSegment
			_parkingSizes[_place][1] = minspace + _AdditionalWidthInSegment
			_parkingSizes[_place][2] = SYMBOL_NORMAL ! Normal
			_place = _place + 1
		next j

		if _reamingEmptyNum > 0 then
			_parkingSizes[_place][1] = EmptyPlaceDataGrid[i][2]
			_parkingSizes[_place][2] = SYMBOL_EMPTY ! Empty
			_reamingEmptyNum = _reamingEmptyNum - 1
			_place = _place + 1
		endif
	else
		if _reamingEmptyNum > 0 then
			_parkingSizes[_place][1] = EmptyPlaceDataGrid[i][2]
			_parkingSizes[_place][2] = SYMBOL_EMPTY ! Empty
			_reamingEmptyNum = _reamingEmptyNum - 1
			_place = _place + 1
		endif
	endif
next i

if _reamingHandicNum > 0 then
	for i = _reamingHandicNum to 1 step - 1
		_parkingSizes[_place][1] =_handicFullsize
		_parkingSizes[_place][2] = SYMBOL_WHEELCHAIR ! Disabled
		_place = _place + 1
	next i
endif

if _reamingFamilyNum > 0 then
	for i = _reamingFamilyNum to 1 step - 1
		_parkingSizes[_place][1] = familyWidth
		_parkingSizes[_place][2] = SYMBOL_FAMILY ! Family
		_place = _place + 1
qwe = qwe +1
	next i
endif

parameters parkingSizes = _parkingSizes

gs_list_parkingPlaces = 0
for i = 1 to vardim1(_parkingSizes)
	if abs(_parkingSizes[i][2]) > EPS then
		gs_list_parkingPlaces = gs_list_parkingPlaces + 1
	endif
next i
parameters gs_list_parkingPlaces = gs_list_parkingPlaces

!========================================================
! other parameter settings
!========================================================

if gs_cont_pen=0 then parameters gs_cont_pen=4
if gs_fill_pen=0 then parameters gs_fill_pen=91

values{2} "iTerrainSlope" 	TERRAINSLOPE_NOSLOPE,		stSlopeTypes[1],
							TERRAINSLOPE_LENGTHSLOPE,	stSlopeTypes[2],
							TERRAINSLOPE_SIDESLOPE,		stSlopeTypes[3]

if iTerrainSlope = TERRAINSLOPE_NOSLOPE then
	gs_terrx = 0
	gs_terry = 0
	parameters gs_terrx = gs_terrx
	parameters gs_terry = gs_terry
	hideparameter "gs_terrx", "gs_terry"
	lock "gs_terrx", "gs_terry"
endif

if iTerrainSlope = TERRAINSLOPE_LENGTHSLOPE then
	gs_terry = 0
	parameters gs_terry = gs_terry
	hideparameter "gs_terry"
	lock "gs_terry"
endif

if iTerrainSlope = TERRAINSLOPE_SIDESLOPE then
	gs_terrx = 0
	parameters  gs_terrx = gs_terrx
	hideparameter "gs_terrx"
	lock "gs_terrx"
endif

values "sw" RANGE (0,)
values "minspace" RANGE (0.2, A)

if tb < 2*sw Then
	tb = 2*sw
	parameters tb = 2*sw
EndIf

if tl < 2*sw Then
	tl = 2*sw
	parameters tl = 2*sw
EndIf

if tb > b/2 Then
	tb = b/2
	parameters tb = b/2
EndIf

if tl > minspace/2 Then
	tl = minspace/2
	parameters tl = minspace/2
EndIf

values "typeTextRotation" `Читаемый`,`Выровнять по Символу`
values "typeTextRotation_m" TEXT_READABLE, TEXT_ALIGNED

if GLOB_MODPAR_NAME = "typeTextRotation" then
	if typeTextRotation = `Читаемый`			then typeTextRotation_m = TEXT_READABLE
	if typeTextRotation = `Выровнять по Символу`	then typeTextRotation_m = TEXT_ALIGNED
	parameters typeTextRotation_m = typeTextRotation_m
else
	if typeTextRotation_m = TEXT_READABLE					then typeTextRotation = `Читаемый`
	if typeTextRotation_m = TEXT_ALIGNED					then typeTextRotation = `Выровнять по Символу`
	parameters typeTextRotation = typeTextRotation
endif

if typeTextRotation_m = TEXT_ALIGNED then
	hideparameter "bTextFollow2DOrientation"
	lock "bTextFollow2DOrientation"
endif

Dot_in_mm = 25.4 / 72


! Synhronized mm and point in marker width
if scaleSensFontSize then
	  if GLOB_MODPAR_NAME = "fontSize200pt" then
		  parameters fontSize200mm = fontSize200pt * Dot_in_mm
		  fontSize200mm = fontSize200pt * Dot_in_mm
	  else
		  parameters fontSize200pt = fontSize200mm / Dot_in_mm
		  fontSize200pt = fontSize200mm / Dot_in_mm
	  endif

	  if GLOB_MODPAR_NAME = "fontSize100pt" then
		  parameters fontSize100mm = fontSize100pt * Dot_in_mm
		  fontSize100mm = fontSize100pt * Dot_in_mm
	  else
		  parameters fontSize100pt = fontSize100mm / Dot_in_mm
		  fontSize100pt = fontSize100mm / Dot_in_mm
	  endif

	  if GLOB_MODPAR_NAME = "fontSize50pt" then
		  parameters fontSize50mm = fontSize50pt * Dot_in_mm
		  fontSize50mm = fontSize50pt * Dot_in_mm
	  else
		  parameters fontSize50pt = fontSize50mm / Dot_in_mm
		  fontSize50pt = fontSize50mm / Dot_in_mm
	  endif
else
	if GLOB_MODPAR_NAME = "gs_font_height_point" then
		parameters gs_font_height = gs_font_height_point * Dot_in_mm
		gs_font_height = gs_font_height_point * Dot_in_mm
	else
		parameters gs_font_height_point = gs_font_height / Dot_in_mm
		gs_font_height_point = gs_font_height / Dot_in_mm
	endif
endif


! ==============================================================================
! Bollard
! ==============================================================================

if bBollard then
	call "bollard_m" parameters all bPartOfLayout 	= 1,
									enableBollardTypes		= 2 + 4 + 8 + 16 + 32 + 64 + 128 + 256 + 512 + 1024 + 2048,
									bBollardBase			= bBollardBase,
									bollardUnID				= 100
else
	lock "BollardType", "iBollardType", "bollardDia", "bollardWidth", "bollardDepth", "bollardBaseDia",\
		"bollardTopDia", "bollardHeight", "bBollardBase", "xBollardPos", "yBollardPos",\
		"BollardMat", "BollardMat1", "BollardMat2"
	hideparameter "BollardType", "iBollardType", "bollardDia", "bollardWidth", "bollardDepth", "bollardBaseDia",\
		"bollardTopDia", "bollardHeight", "bBollardBase", "xBollardPos", "yBollardPos",\
		"BollardMat", "BollardMat1", "BollardMat2"
endif

]]>
</Script_VL>

<ParamSection SectVersion="26" SectionFlags="0" SubIdent="0">
	<ParamSectHeader>
		<Version>26</Version>
		<AutoHotspots>false</AutoHotspots>
		<StatBits>
			<STBit_FixSize/>
		</StatBits>
		<WDLeftFrame>0</WDLeftFrame>
		<WDRightFrame>0</WDRightFrame>
		<WDTopFrame>0</WDTopFrame>
		<WDBotFrame>0</WDBotFrame>
		<LayFlags>65535</LayFlags>
		<WDMirrorThickness>0</WDMirrorThickness>
		<WDWallInset>0</WDWallInset>
		<SymbolColor>0</SymbolColor>
	</ParamSectHeader>
	<Parameters>
		<Length Name="A">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Value>7.5</Value>
		</Length>
		<Length Name="B">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Value>5</Value>
		</Length>
		<Length Name="ZZYZX">
			<Description><![CDATA["Высота"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Integer Name="iNumberingSide">
			<Description><![CDATA["Начало Нумерации"]]></Description>
			<Value>1</Value>
		</Integer>
		<Length Name="minspace">
			<Description><![CDATA["Минимальная Ширина Парковочного Места"]]></Description>
			<Value>2.5</Value>
		</Length>
		<Length Name="parkingSegments">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="0">
				<AVal Row="1">7.5</AVal>
			</ArrayValues>
		</Length>
		<Length Name="parkingSizes">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="3" SecondDimension="2">
				<AVal Column="1" Row="1">2.5</AVal>
				<AVal Column="2" Row="1">3</AVal>
				<AVal Column="1" Row="2">2.5</AVal>
				<AVal Column="2" Row="2">3</AVal>
				<AVal Column="1" Row="3">2.5</AVal>
				<AVal Column="2" Row="3">3</AVal>
			</ArrayValues>
		</Length>
		<Length Name="EmptyPlaceDataGrid">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="10" SecondDimension="2">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">1</AVal>
				<AVal Column="1" Row="2">5</AVal>
				<AVal Column="2" Row="2">1</AVal>
				<AVal Column="1" Row="3">15</AVal>
				<AVal Column="2" Row="3">1</AVal>
				<AVal Column="1" Row="4">16</AVal>
				<AVal Column="2" Row="4">1</AVal>
				<AVal Column="1" Row="5">17</AVal>
				<AVal Column="2" Row="5">1</AVal>
				<AVal Column="1" Row="6">18</AVal>
				<AVal Column="2" Row="6">1</AVal>
				<AVal Column="1" Row="7">19</AVal>
				<AVal Column="2" Row="7">1</AVal>
				<AVal Column="1" Row="8">20</AVal>
				<AVal Column="2" Row="8">1</AVal>
				<AVal Column="1" Row="9">21</AVal>
				<AVal Column="2" Row="9">1</AVal>
				<AVal Column="1" Row="10">22</AVal>
				<AVal Column="2" Row="10">1</AVal>
			</ArrayValues>
		</Length>

		<!-- bEmptyPlace: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Boolean Name="bEmptyPlace">
			<Description><![CDATA["Свободное Место"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="iNumEmptyPlace">
			<Description><![CDATA["Количество Свободных Парковочных Мест"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="bUniformEmptyWidth">
			<Description><![CDATA["Унификация Ширины Свободных Мест"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="UniformEmptyWidth">
			<Description><![CDATA["Ширина Свободного Места"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="emptyWidth1">
			<Description><![CDATA["Ширина Свободного Места 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="emptyPosition1">
			<Description><![CDATA["Расположение Свободного Места 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="emptyWidth2">
			<Description><![CDATA["Ширина Свободного Места 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="emptyPosition2">
			<Description><![CDATA["Расположение Свободного Места 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>5</Value>
		</Length>
		<Length Name="emptyWidth3">
			<Description><![CDATA["Ширина Свободного Места 3"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="emptyPosition3">
			<Description><![CDATA["Расположение Свободного Места 3"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Length>
		<Length Name="emptyWidth4">
			<Description><![CDATA["Ширина Свободного Места 4"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="emptyPosition4">
			<Description><![CDATA["Расположение Свободного Места 4"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>16</Value>
		</Length>
		<Length Name="emptyWidth5">
			<Description><![CDATA["Ширина Свободного Места 5"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="emptyPosition5">
			<Description><![CDATA["Расположение Свободного Места 5"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>17</Value>
		</Length>
		<Length Name="emptyWidth6">
			<Description><![CDATA["Ширина Свободного Места 6"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="emptyPosition6">
			<Description><![CDATA["Расположение Свободного Места 6"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>18</Value>
		</Length>
		<Length Name="emptyWidth7">
			<Description><![CDATA["Ширина Свободного Места 7"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="emptyPosition7">
			<Description><![CDATA["Расположение Свободного Места 7"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</Length>
		<Length Name="emptyWidth8">
			<Description><![CDATA["Ширина Свободного Места 8"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="emptyPosition8">
			<Description><![CDATA["Расположение Свободного Места 8"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>20</Value>
		</Length>
		<Length Name="emptyWidth9">
			<Description><![CDATA["Ширина Свободного Места 9"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="emptyPosition9">
			<Description><![CDATA["Расположение Свободного Места 9"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>21</Value>
		</Length>
		<Length Name="emptyWidth10">
			<Description><![CDATA["Ширина Свободного Места 10"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="emptyPosition10">
			<Description><![CDATA["Расположение Свободного Места 10"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>22</Value>
		</Length>
		<Boolean Name="markEmptySpace">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- bHandicapPlace: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Boolean Name="bHandicapPlace">
			<Description><![CDATA["Парковочное Место для Инвалидов"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="iNumHandicapPlace">
			<Description><![CDATA["Количество Парковочных Мест для Инвалидов"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="handicapWidth">
			<Description><![CDATA["Минимальная Ширина Места для Инвалидов"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2.5</Value>
		</Length>
		<Length Name="handicapAddWidth">
			<Description><![CDATA["Ширина Дополнительного Места для Инвалидов"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1.5</Value>
		</Length>

		<!-- bFamilyPlace: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Boolean Name="bFamilyPlace">
			<Description><![CDATA["Семейное Парковочное Место"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="iNumFamilyPlace">
			<Description><![CDATA["Количество Семейных Парковочных Мест"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="familyWidth">
			<Description><![CDATA["Минимальная Ширина Семейного Места"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3</Value>
		</Length>

		<!-- iTerrainSlope: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Integer Name="iTerrainSlope">
			<Description><![CDATA["Наклон Местности"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Angle Name="gs_terrx">
			<Description><![CDATA["Продольный Угол"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Angle Name="gs_terry">
			<Description><![CDATA["Боковой Угол"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>

		<!-- _sp3: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="_sp3">
			<Description><![CDATA["Полосы"]]></Description>
		</Title>
		<Length Name="sw">
			<Description><![CDATA["Ширина Полосы"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.2</Value>
		</Length>
		<Boolean Name="sfs">
			<Description><![CDATA["Показать Первую Полосу"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="sss">
			<Description><![CDATA["Показать Последнюю Полосу"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="AC_show2DHotspotsIn3D">
			<Description><![CDATA["Показ Узловых 2D Точек в 3D"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="ac_bottomlevel">
			<Description><![CDATA["Отметка Низа"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="ac_toplevel">
			<Description><![CDATA["Отметка Верха"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>

		<!-- bBollard: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Boolean Name="bBollard">
			<Description><![CDATA["Столбик Ограждения в Конце"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<String Name="BollardType">
			<Description><![CDATA["Тип"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Призма"]]></Value>
		</String>
		<Integer Name="iBollardtype">
			<Description><![CDATA["Тип Столбика Ограждения"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Length Name="bollardDia">
			<Description><![CDATA["Диаметр"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.2</Value>
		</Length>
		<Length Name="bollardWidth">
			<Description><![CDATA["Ширина"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.2</Value>
		</Length>
		<Length Name="bollardDepth">
			<Description><![CDATA["Длина"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.2</Value>
		</Length>
		<Length Name="bollardBaseDia">
			<Description><![CDATA["Диаметр Основания"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.2</Value>
		</Length>
		<Length Name="bollardTopDia">
			<Description><![CDATA["Диаметр Вверху"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Length Name="bollardHeight">
			<Description><![CDATA["Высота"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.6</Value>
		</Length>
		<Boolean Name="bBollardBase">
			<Description><![CDATA["Основание"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="xBollardPos">
			<Description><![CDATA["Смещение в Сторону"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="yBollardPos">
			<Description><![CDATA["Смещение по Длине"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>

		<!-- gs_2D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_2D_representation">
			<Description><![CDATA["2D-отображение"]]></Description>
			<Fix/>
		</Title>
		<Integer Name="idetlevel2D">
			<Description><![CDATA["2D-детализация"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<PenColor Name="gs_cont_pen">
			<Description><![CDATA["Перо Контура"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>4</Value>
		</PenColor>
		<FillPattern Name="gs_fill_type">
			<Description><![CDATA["Тип Штриховки"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_fill_pen">
			<Description><![CDATA["Перо Штриховки"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_back_pen">
			<Description><![CDATA["Перо Фона Штриховки"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>

		<!-- _sp2: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="_sp2">
			<Description><![CDATA["Текст"]]></Description>
		</Title>
		<String Name="fontType">
			<Description><![CDATA["Тип Шрифта"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Arial"]]></Value>
		</String>
		<Boolean Name="scaleSensFontSize">
			<Description><![CDATA["Размер Шрифта Зависит от Масштаба"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<RealNum Name="gs_font_height">
			<Description><![CDATA["Размер Шрифта (мм)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3</Value>
		</RealNum>
		<RealNum Name="gs_font_height_point">
			<Description><![CDATA["Размер Шрифта (пт)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>8.50393700787</Value>
		</RealNum>
		<RealNum Name="fontSize50mm">
			<Description><![CDATA["Размер Масштаба 1:50 (мм)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3</Value>
		</RealNum>
		<RealNum Name="fontSize50pt">
			<Description><![CDATA["Размер Масштаба 1:50 (п.)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>8.50393700787</Value>
		</RealNum>
		<RealNum Name="fontSize100mm">
			<Description><![CDATA["Размер Масштаба 1:100 (мм)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3</Value>
		</RealNum>
		<RealNum Name="fontSize100pt">
			<Description><![CDATA["Размер Масштаба 1:100 (п.)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>8.50393700787</Value>
		</RealNum>
		<RealNum Name="fontSize200mm">
			<Description><![CDATA["Размер Масштаба 1:200 (мм)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3</Value>
		</RealNum>
		<RealNum Name="fontSize200pt">
			<Description><![CDATA["Размер Масштаба 1:200 (п.)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>8.50393700787</Value>
		</RealNum>
		<Integer Name="num_start">
			<Description><![CDATA["Нумерацию Начать с"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="show_num">
			<Description><![CDATA["Показать Цифры"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="tb">
			<Description><![CDATA["Низ Текста"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.4</Value>
		</Length>
		<Length Name="tl">
			<Description><![CDATA["Левая Сторона Текста"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.4</Value>
		</Length>
		<String Name="typeTextRotation">
			<Description><![CDATA["Ориентация Текста в Символе"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Читаемый"]]></Value>
		</String>
		<Boolean Name="bTextFollow2DOrientation">
			<Description><![CDATA["3D-текст Следует за 2D-ориентацией"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="typeTextRotation_m">
			<Description><![CDATA["Ориентация Текста в Символе"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>2</Value>
		</Integer>

		<!-- gs_3D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_3D_representation">
			<Description><![CDATA["3D-отображение"]]></Description>
		</Title>
		<String Name="gs_detlevel_3D">
			<Description><![CDATA["3D"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Детальный"]]></Value>
		</String>
		<Integer Name="gs_detlevel_3D_m">
			<Description><![CDATA["3D"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Boolean Name="gs_shadow">
			<Description><![CDATA["Отбрасывание Теней"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>

		<!-- gs_material: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_material">
			<Description><![CDATA["Покрытия"]]></Description>
		</Title>
		<Material Name="mat1">
			<Description><![CDATA["Полосы"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>18</Value>
		</Material>
		<Material Name="BollardMat">
			<Description><![CDATA["Столбик"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>53</Value>
		</Material>
		<Material Name="BollardMat1">
			<Description><![CDATA["Столбик"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>11</Value>
		</Material>
		<Material Name="BollardMat2">
			<Description><![CDATA["Столбик 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>40</Value>
		</Material>
		<Angle Name="gs_readable_angle">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>90</Value>
		</Angle>

		<!-- gs_list: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_list">
			<Description><![CDATA["Параметры Спецификаций"]]></Description>
			<Fix/>
		</Title>
		<Integer Name="gs_list_parkingPlaces">
			<Description><![CDATA["Количество Парковочных Мест"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3</Value>
		</Integer>
		<RealNum Name="gs_list_cost">
			<Description><![CDATA["Цена"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="gs_list_manufacturer">
			<Description><![CDATA["Производитель"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_note">
			<Description><![CDATA["Примечания"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_location">
			<Description><![CDATA["Расположение"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_accessories">
			<Description><![CDATA["Аксессуары"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_Type">
			<Description><![CDATA["Тип Группы"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Наружные Объекты"]]></Value>
		</String>
		<Integer Name="iFMType">
			<Description><![CDATA["Тип Группы"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>19</Value>
		</Integer>
		<String Name="FM_InventoryNumber">
			<Description><![CDATA["Инвентарный Номер"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_ProductionYear">
			<Description><![CDATA["Год Производства"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom1">
			<Description><![CDATA["Пользовательское Значение 1"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom2">
			<Description><![CDATA["Пользовательское Значение 2"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom3">
			<Description><![CDATA["Пользовательское Значение 3"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom4">
			<Description><![CDATA["Пользовательское Значение 4"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom5">
			<Description><![CDATA["Пользовательское Значение 5"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
	</Parameters>
</ParamSection>

<Picture MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="0" length_in_bytes="10506" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000800000
	008008020000004C5CF69C000000097048597300002E2300002E230178A53F76
	00000A396943435050686F746F73686F70204943432070726F66696C65000078
	DA9D96775454D71687CFBD777AA1CD30025286DEBBC000D27B935E4561981960
	28030E3334B121A2021145449A224850C480D150245644B1101454B007240828
	311845542C6F46D68BAEACBCF7F2F2FBE3AC6FEDB3F7B9FBECBDCF5A170092A7
	2F9797064B0190CA13F0833C9CE911915174EC0080011E608029004C5646BA5F
	B07B0810C9CBCD859E2172025F0401F07A58BC0270D3D033804E07FF9FA459E9
	7C81E89800119BB339192C11178838254B902EB6CF8A981A972C66182566BE28
	4111CB893961910D3EFB2CB2A398D9A93CB688C539A7B353D962EE15F1B64C21
	47C488AF880B33B99C2C11DF12B1468A30952BE237E2D8540E33030014496C17
	70588922361131891F12E422E2E500E048095F71DC572CE0640BC49772494BCF
	E173131205741D962EDDD4DA9A41F7E464A5700402C300262B99C967D35DD252
	D399BC1C0016EFFC5932E2DAD24545B634B5B6B434343332FDAA50FF75F36F4A
	DCDB457A19F8B96710ADFF8BEDAFFCD21A0060CC896AB3F38B2DAE0A80CE2D00
	C8DDFB62D3380080A4A86F1DD7BFBA0F4D3C2F890241BA8DB1715656961197C3
	321217F40FFD4F87BFA1AFBE67243EEE8FF2D05D39F14C618A802EAE1B2B2D25
	4DC8A767A433591CBAE19F87F81F07FE751E06419C780E9FC313458489A68CCB
	4B10B59BC7E60AB8693C3A97F79F9AF80FC3FEA4C5B91689D2F81150638C80D4
	752A407EED07280A1120D1FBC55DFFA36FBEF830207E79E12A938B73FFEF37FD
	67C1A5E225839BF039CE252884CE12F23317F7C4CF12A0010148022A9007CA40
	1DE800436006AC802D70046EC01BF8831010095603164804A9800FB2401ED804
	0A4131D809F6806A50071A41336805C741273805CE834BE01AB8016E83FB6014
	4C80676016BC060B10046121324481E421154813D287CC2006640FB941BE5010
	1409C54209100F124279D066A8182A83AAA17AA819FA1E3A099D87AE4083D05D
	680C9A867E87DEC1084C82A9B012AC051BC30CD809F68143E0557002BC06CE85
	0BE01D7025DC001F853BE0F3F035F8363C0A3F83E7108010111AA28A18220CC4
	05F147A29078848FAC478A900AA4016945BA913EE426328ACC206F5118140545
	4719A26C519EA850140BB506B51E5582AA461D4675A07A51375163A859D44734
	19AD88D647DBA0BDD011E8047416BA105D816E42B7A32FA26FA327D0AF31180C
	0DA38DB1C2786222314998B59812CC3E4C1BE61C6610338E99C362B1F2587DAC
	1DD61FCBC40AB085D82AEC51EC59EC107602FB0647C4A9E0CC70EEB8281C0F97
	8FABC01DC19DC10DE126710B7829BC26DE06EF8F67E373F0A5F8467C37FE3A7E
	02BF4090266813EC08218424C2264225A1957091F080F0924824AA11AD898144
	2E7123B192788C789938467C4B9221E9915C48D124216907E910E91CE92EE925
	994CD6223B92A3C802F20E7233F902F911F98D0445C248C24B822DB141A246A2
	436248E2B9245E5253D24972B564AE6485E409C9EB92335278292D291729A6D4
	7AA91AA99352235273D2146953697FE954E912E923D257A4A764B0325A326E32
	6C99029983321764C62908459DE242615136531A29172913540C559BEA454DA2
	1653BFA30E506765656497C986C966CBD6C89E961DA521342D9A172D85564A3B
	4E1BA6BD5BA2B4C4690967C9F625AD4B8696CCCB2D957394E3C815C9B5C9DD96
	7B274F9777934F96DF25DF29FF5001A5A0A710A890A5B05FE1A2C2CC52EA52DB
	A5ACA5454B8F2FBDA7082BEA290629AE553CA8D8AF38A7A4ACE4A194AE54A574
	41694699A6ECA89CA45CAE7C46795A85A262AFC255295739ABF2942E4B77A2A7
	D02BE9BDF4595545554F55A16ABDEA80EA829AB65AA85ABE5A9BDA4375823A43
	3D5EBD5CBD477D564345C34F234FA345E39E265E93A199A8B957B34F735E4B5B
	2B5C6BAB56A7D694B69CB69776AE768BF6031DB28E83CE1A9D069D5BBA185D86
	6EB2EE3EDD1B7AB09E855EA25E8DDE757D58DF529FABBF4F7FD0006D606DC033
	6830183124193A19661AB6188E19D18C7C8DF28D3A8D9E1B6B184719EF32EE33
	FE6862619262D26872DF54C6D4DB34DFB4DBF477333D3396598DD92D73B2B9BB
	F906F32EF317CBF4977196ED5F76C78262E167B1D5A2C7E283A59525DFB2D572
	DA4AC32AD6AAD66A84416504304A1897ADD1D6CED61BAC4F59BFB5B1B411D81C
	B7F9CDD6D036D9F688EDD472EDE59CE58DCBC7EDD4EC9876F576A3F674FB58FB
	03F6A30EAA0E4C870687C78EEA8E6CC726C749275DA724A7A34ECF9D4D9CF9CE
	EDCEF32E362EEB5CCEB922AE1EAE45AE036E326EA16ED56E8FDCD5DC13DC5BDC
	673D2C3CD67A9CF3447BFA78EEF21CF152F26279357BCD7A5B79AFF3EEF521F9
	04FB54FB3CF6D5F3E5FB76FBC17EDE7EBBFD1EACD05CC15BD1E90FFCBDFC77FB
	3F0CD00E5813F06320263020B026F0499069505E505F30253826F848F0EB10E7
	90D290FBA13AA1C2D09E30C9B0E8B0E6B0F970D7F0B2F0D108E3887511D72215
	22B9915D51D8A8B0A8A6A8B9956E2BF7AC9C88B6882E8C1E5EA5BD2A7BD595D5
	0AAB53569F8E918C61C69C8845C786C71E897DCFF4673630E7E2BCE26AE36659
	2EACBDAC676C4776397B9A63C729E34CC6DBC597C54F25D825EC4E984E7448AC
	489CE1BA70ABB92F923C93EA92E693FD930F257F4A094F694BC5A5C6A69EE4C9
	F09279BD69CA69D96983E9FAE985E9A36B6CD6EC5933CBF7E137654019AB32BA
	0454D1CF54BF5047B8453896699F5993F9262B2CEB44B674362FBB3F472F677B
	CE64AE7BEEB76B516B596B7BF254F336E58DAD735A57BF1E5A1FB7BE6783FA86
	820D131B3D361EDE44D894BCE9A77C93FCB2FC579BC337771728156C2C18DFE2
	B1A5A550A2905F38B2D5766BDD36D436EEB681EDE6DBABB67F2C62175D2D3629
	AE287E5FC22AB9FA8DE93795DF7CDA11BF63A0D4B274FF4ECC4EDECEE15D0EBB
	0E974997E5968DEFF6DBDD514E2F2F2A7FB52766CF958A6515757B097B857B47
	2B7D2BBBAA34AA7656BDAF4EACBE5DE35CD356AB58BBBD767E1F7BDFD07EC7FD
	AD754A75C575EF0E700FDCA9F7A8EF68D06AA83888399879F049635863DFB78C
	6F9B9B149A8A9B3E1CE21D1A3D1C74B8B7D9AAB9F988E291D216B845D8327D34
	FAE88DEF5CBFEB6A356CAD6FA3B5151F03C784C79E7E1FFBFDF0719FE33D2718
	275A7FD0FCA1B69DD25ED40175E474CC7626768E7645760D9EF43ED9D36DDBDD
	FEA3D18F874EA99EAA392D7BBAF40CE14CC1994F6773CFCE9D4B3F37733EE1FC
	784F4CCFFD0B11176EF506F60E5CF4B978F992FBA50B7D4E7D672FDB5D3E75C5
	E6CAC9AB8CAB9DD72CAF75F45BF4B7FF64F153FB80E540C775ABEB5D37AC6F74
	0F2E1F3C33E43074FEA6EBCD4BB7BC6E5DBBBDE2F6E070E8F09D91E891D13BEC
	3B537753EEBEB897796FE1FEC607E807450FA51E563C527CD4F0B3EECF6DA396
	A3A7C75CC7FA1F073FBE3FCE1A7FF64BC62FEF270A9E909F544CAA4C364F994D
	9D9A769FBEF174E5D38967E9CF16660A7F95FEB5F6B9CEF31F7E73FCAD7F3662
	76E205FFC5A7DF4B5ECABF3CF46AD9AB9EB980B947AF535F2FCC17BD917F73F8
	2DE36DDFBBF077930B59EFB1EF2B3FE87EE8FEE8F3F1C1A7D44F9FFE050398F3
	FC91C05ADB0000000467414D410000B18E7CFB5193000000206348524D00007A
	25000080830000F9FF000080E9000075300000EA6000003A980000176F925FC5
	4600001E314944415478DA648E4B0EC0400842EBDCD1FBDF444BFA3286581684
	007E22339F8B738EB8BB23425AC27D413EAC0813C65F65F678448ABF4CFA73C5
	B5477FACB237D19C83AB6A8DAFCD5E90F63FEB0357D69EF1FB62DE9E1F866716
	F10A20264C07C10D420E02AC8E86AB84470C5AD0E00A32CC10C413C410359034
	0101C8F18A19E2C85A903D859692F03B0F621DA67FD1CCC10C16642978826084
	014CBD0001E82693130060188641F71FBA8F82106A32406CC7C7C9036E77FC32
	96058DBD8B62B85D0A8802E8E5C5A978F1F288711ECD365064049CDD43E4F0DC
	F15CE58B2D8F7FF757003ACA18070018048103FFFFB383C98508762FA582D737
	A066CB74F649A4BD29EBB2AE5456ACB205001EEB7ECB0531E3B9E674F2E7287F
	117A6DB12A29715DC1F051EE9C11404C70D5F0E4861907C8DEC62C6DB0062266
	D6C1131098C90DD358643558CB37E4A0C4554F600D0BB4448DA6182D47A2D90E
	4F4658CB2BCCB20EB9E284008000C21E0498D52F66898C99DCF0870E56065A74
	226BC45A3720D76F98F6624DEF582D426B29A0B502E0450A9A7BE0D18C96A470
	F9175E41E2CA0440130002088B4DB8542317D070A3E159129E87B09A80ABC643
	538999BD90E306397FC02D828BA3155378EA46B45086972D5835E2D28BE947CC
	EA971109A0E9852B06082026B49C889991316B694CB762861A9E7602D628472E
	FD301B60F02A17395FA3B58890EB554CDBD1CA55B4020DD39BC879023955A119
	8EA7A584D62A452EE8905D0210404CB85ADC98690D6BFD8C2B9471D5AEB8D23E
	721C2097CB98ED45AC718F568C602D8B70158004DB05988D2B5C85335AE70933
	F923D770101300028809DEEEC4EA5BB87190548F965ED03A1D58DB00F0A0C153
	14A2352AE0CD3E5C952A7E43B01665F89BED98851BD6D48DB52D8BB555821908
	685108570010404CC8051672A587D9924116C19A64B0F6DD7035407129C35564
	C3D314BCE4C11507F8631AAD738459C2202729AC95309E62164FE861F6012124
	400031E1EF0D62ED586215410E143CB508AEE20EB32EC555FF63ED12E22A0A70
	9986A790410B29B4AE0066398ED633C56C1A618E4620BB132080F0752391F304
	5A7584B5F582D615C2530260262EE4F60C9E4608D644802BBB901401588B50B4
	108734F930DBF5780C442BA3304B78800062C21F6A985D5034DF22778F71B5FF
	30C764305D862BACB176CB318740F0C401D6FC87B5338C5981A36502ACBD10B4
	3213ADFE07C6199E011E200910404C58F33866018DD657C4DF60C71C0BC3DF09
	C09563D0DA82986D24B40E01AEB214D3E76821887FB400B38D8E6C2C248809F6
	7870F555010288097FDE441E008190B8460830B31E5A1EC4DF43C6338A80AB25
	4A64FB18ADD384ABFCC43FEA87DFBFC414B6B89A060001C484394088BFA182D9
	DEC2559B61AD8B88773D5A7AC7EC0063ADB4F0348D308B3BE46C84D601446B83
	620E70628EB6E22A0F902D422B908124400031A17980E00408F66844752ED6F6
	28A9C91FB38D8B6B0C19D72004FEFA00B3EB87563FA135F3D11232317D526443
	90ED82E88594280001C484E914CC948B6B1006AD99841916F84765F197BC580B
	0AB46204B36388275CB04ECFE169C3A08DB8E02A94D0A61131530FAED1438808
	4000316116D9F8FB04587B3158FB35B8C636881CA723D8A1C3EA373C2D42821D
	34FC0520E6502372AC236762CC7611E60011DC468000622226FF627528AE3488
	997289F736A6465C3524D60E2D2E8FE06A4363360DD1CA52B4411434DF619D1D
	22185C908C051707082026B44C4770341F734E0EADA380758608FFB41CC12208
	D7C4039E114D22E31B4F90A1A500B4F93EACA3149863A5780A5288028000C259
	07E0AAF4303B26F81BA6783AE268AB10F057C298B663760089C9CAB806700856
	51C48C95E269F821B785900140003121176D68152CC1417F5CE18B562C60B685
	891FD6C6D319C6DAF3203E3760EDA6E15FDB812B39E39AA7C36514B232800062
	2238848959BDE01AACC7B5DE04730489C868C0D56BC533EF46308E31879BF0E4
	1B5C4390B8421673CA176BF7053E8D081401082026FCCD38CC452868AB513007
	E9D06682B08E1AE212C1DAFBC735F48856F8E21A92C2DA29C3330383EC6CB4F8
	C6DFA0C46A2FDAF03866510110404C6845395AA30A7F5D873540D19218D6F281
	C8AE00D64E385AA187D92E2038F484BF94C3AC0ED1EA64CC3583982D75CC7043
	9B52852B00082026CC660CAEF56544F68AD1FAF45827CD8959038039088199C0
	B14E2013D380C6333C85D516FC93E4988325F8AB7AE4CC0410402CC863F1C8CB
	9BBE7CF9C20C03780A53CCF5970C38D6E1A06561E458FF0D0640061B1B1B0B0B
	0BAE0E119E6154E2731250F1CF9F3FFFFEFD0BE4727272A2452DD641755C52B8
	DA26C8DE0436F3BE7EFD0A118458075703597B0A10402C9895ED9F3F7FE4E5E5
	6D6D6D8141FFFEFDFB1D3B76A0B59470AD05C3DA2FC5532B42B40083DED4D454
	5959192872EDDAB5CB972FB3B2B2C215405C8966086670202BC0D3B4050260D0
	FBF8F808080800ED3D74E8D0AB57AF20518E6BC1192E4FC197EE42D868490142
	02AD505050B0B1B1018ABF79F366E3C68D1C1C1C68A60104100B5A1286385150
	50D0C4C404981E1F3E7CB865CB166088A0D55A985D4A625A1D5801C495161616
	4095EFDEBD3B77EE1C3C02B08EA8E01A5E25321F00D5686969C9C9C97DFEFCF9
	C2850BCF9F3F870E8A313141C211EBD24AE478C533BE8B36B507D4020C496363
	636048DEBA75EBC78F1FC04C00B70262204000B1604D564006301FA0B9096D9E
	0873161B6B1B14AD158B351FFC01033C732358B31AD645065817A0A3558FC014
	06B711FF24227259078C2788E198B50EAEF5AFF01205180890420FD32F0001C4
	8467DD24AE450F78D235D6054FB89A289869166D493EFEB107346371E5005CD5
	29AE990CAC590DB3B687F76C31677D718D0EA1B5802100208098700D27E15ACD
	494C5713D7D005C1A605C1953CF02A015325FEA21F57171A4F81867F8D08AEA6
	14AE262CAEE80408201682A3B8708FE12A40F0AC5AC013C42843B2B817956202
	62029A92C138AC05293C0923D704C821837F1E142DB8901BAF0001C484A7F788
	B9509BE09A0E82191C6B3D066F45101FBE44B63B89ECB8E05F368A7F5217FF50
	1DE61C2A9AC90001C44470741E739B0AC19485679D01D6B844191FC731408D7F
	9C8BEC1CC0806DD11F6647125732C79CAAC4DAEEC05AD04104010288096B44E1
	E991129C47C44CE9681E406E59E11F40C6742E79099FD428217ECB1BDAE20FFC
	AB8FB116470001C4847F4E83E0B261B4F0C5ACA8913B2CB8666C90E7B6908B20
	FC6B32C82B82706D01C3350B44E4082E9E69383C0A806602041013FEC1583CC3
	D9F88DC6556AA1B5DB3017049231754C527AC7741B66CB18394160DD5889B57A
	C0D33462C0B12206280810404C683A91ED8328829718984B57F04C03E1AA0690
	3B81680D1BE20B194A0A22ACF3A9046784F06CDDC50C19E489013C7106610004
	1013D600C5B3A30AEB443CA96D3B5C239DF0F826A3E0263E02F08FC5621D54C7
	B51A0173100CCFEC02D6040A10404CF807C171F5A7F0EF95C45A0411B9B81CD7
	8A5A5A0022170032E05EED81BF46C1D39A80330002880973441B6B3F0B6DF515
	66C58BE95C3C431768952DD63926AAC701D67E13D6F970ACC919AD3CC0DADEC3
	55D362D61F702E400061D94F82B6B002B980C633FD0F67C3D5E35A95CE8063ED
	3C03B655B7D48A06B4FD94B8C697F054A1984D67E4EA1AEB062F3CCD4B782003
	041013AEE5F9286D55A43A006DCA14EB8E403C7663B65371ADAE45368792E107
	C8211BC46C1EC13F108BAB58465EBC853F30B196690001C484BF5A43CB8F6873
	DF989D46AC6B5DF1CFA3E16A0261B60E498D06B485B168B142FCBA153C737358
	FD85756A136DD40B6E204000B1A0F916EB71326816E05A698CBFBB80A74B816B
	F539AEC9355CF91DAD0C442BD9310B0182918A6BDA15CFE2335C051766B84118
	0001C444706E013E02CC807BFD3A9E45B2B8E649F06CAFC0CC58B8FADB68007E
	A40F03C6FA51FCE3C924CDE5E1EFE8E01FB3C294050820EC3B9B70B582087658
	70CD6161AD8D31330D5A3C614E44133326886773199EA633DA6C17AE332A7019
	8575F93E313D18800062C25542C1730D642E0DCF1A6062F64313330983AB54C1
	DC85807F8911AE736BB0565AB84E9BC2DF85C65A63616D7D10DC9B0E10402C24
	4DE9614DE9B8CA10225782E23F0005FF021E5CAD7806BC3B1A31FB3498ED3782
	3B0C89D9D680F5702B342F000410139EA909E89C190B0BD65582789A7498CB8F
	30C71870B5C1F194FEB832135A4C136CD1E31FB62498BF91E38CE0E03CC1ED98
	00018438F50AEB9252E4F1643C06616D0660764F7055E0780E05C275E80B9E90
	C5BA99094FF188566FE33AC905D353584F5A439E8CC45ADFA085334000113E0D
	83E07C3A9E64822B08F02C73C3DA63C2EC6D60E61EAC66629DB1C23F488E27D9
	62DA82F5A0123CF35F98A10A10404CC48CCAE2713A315D123C090A7FA79F54BB
	F0441B03DE0346309D846768137F1D83FF800D4C950001C4C480E3D421B4994F
	3CDD10823336C86BC1B02E9CC64CB978BAC7B8765A637500FE8399F0F4BA31FB
	3D78D6B2139C2EC473101E40003161FA014D0FDA601CC1D163ACA741605D6A80
	99FA30A700B166733C5B3F70653EE21715606DEFE219B8C61A5CB8267390573A
	434400028809F9384CAC2188BC641AD740059E6955623AC0B81A54C89E21783A
	0566C627382DCE80ED6C14CC6A03CD10AC29124F0E40763FDA5031303C010288
	8901EF064FE44624AE460BC19964CC0E27DC46F87C27C105FB0CD88E76C4DA84
	C73C3F18D74C16FEA1375C331678463818885B318F9CDC01028809F96C23B4F5
	5C6887DE12BF0C1FFFB20E221B4598B502AEEDB15807EBD1520F9A76ACE37404
	9B0FF8BD867F2322AE4A0820805818883B2E0CE801B43820F28869ACFB4CB18E
	71E21950C49F1B70C522D69C8767672B32895694E319A743EB27111C05420B43
	800062C2B56E02BDA2C07D8C2366C31C7FEE439E1EC13F0A424CC622A68E451E
	D0C5352C4164A18A75F89AE081C2B81219900D10404CC46CB2C53AD545F0F471
	CC7E109E6DE60467281988380800AB2C5ADB97987134B46A16FF21CA68750FD6
	D209739F1E1C00041013D62A0B39BDC04B4F3CEB82F0EC60C65A26E0EA28E0D7
	857F4C1BFF520682672B607641308FE5C5755009C1C9445CE3A9400010404C58
	1D8167C700AE1B12B0CE49E1EA1CE22FA608EEA1245834633D8213AB17D05A77
	587B21C8E90FCDE5587794E0D91F809934010208FD087ACCB579F0BE03E64601
	CC4DF4B81A64B85612E0694510D9CCC55AB7E3EA0DE19FF0C233AE8ED94BC05A
	A3629DF8435683B96404208098F0CC9621C73C9EA340B1061CFEF562042B5B3C
	DD2EFC03B1C8B39258D715601DAF471BF4C55A2430E03D1E8301EFC1970C18C7
	9DC115000410968DDE989501BC038CB9539001C7A635FCC3CE589D08D7F2F7EF
	5FCC5620C175AFC87B451988DBD78FD61EC3339B863C9981F5461A62CE0EC20A
	00028889F86530B8C602B19EEF8A7FB01ED7991B68090DB92EC113A698A91ECF
	C02A313D0982FB03F01CEF863F0C31DD0910402C588F07C49A15F00C7C63CE49
	E169BAE11F56C4AC4BD17618E04FDDB8C6CE3057F6611D3AC5EA36AC0D59ACA3
	7268BB5319883897132080B04C49A255B6B8764CE0590480FF5829ACA325B8DA
	2D98E33C58A736315BC9B896CB631E688A6B6132D6B046DE908C7F5612D72018
	5A680004100B66A8A19DBA8CE7EC3DE84D58A89D0B5CFD035CF515AE39035CC7
	E9E31987214601FE0D1AB88EA22172B411CFD835A6EF20E20001C4849983208A
	B02613CC452B986D2FFCA74F139C08C35C3E86670B14318D543C8345045BB7B8
	36A2621A8596C019702CFAC36C2B020410CE1964B4F92FCC56019E39195CA903
	CFA015AE94CB80E3680E82EB0F300B37FC8760E23970016B1F1BD79003D6948E
	67D412208098B09E9B8FFFD802786E80948378D6DD13742EAE89073CA778629D
	9BC4359281EBA42722EB24066C27F3239710B83A2BF030413BD109B32A060820
	16ACE391C8B360F80FEAC35AC3E0E955E26A6FE0CA7F780675492A85300F02C6
	936990FBD2B8A619905D88674082E0A5980001C484A7AEC3B35610F9861A5CD7
	69E11F44C4D559C3B5888198CB2331333BE6103F31634DC4947558B70C31606C
	B9C58C78B42A1320809818B0EDFFC23F0782354091CF516020742101AE8489BC
	161857E5813F26704D0843DC86E7740782ED22AC2BE3B17639813D00AC3D21AC
	BD4580006242F330967513A867BF638D1B48E8E3A976F01F8C8F3FE9E1CA58B8
	D4E05F09C280F7BC59CCA209FF88165A15887F9D07D62C0B10404CF8A756B02E
	1AC02CB5F0DCD38BEB2C4082BD76626697F0F81373130E03EE73FBF01F7C8939
	B0886B710DD60D42F897CB030410139EB544B80627D04EE1C5D37DC57531269E
	2B27B10EC3E159BD82759A0879A61EAD20C6B3FE07576AC575D620D6320DF364
	2CAC610B17010820EC4D78E4E511C49C0B89367D4664158767F31ED6057EF83B
	C6048721F198434CDB9F0163D93DAE912E3C57E261DE1D0E10404CF827D2F0B4
	17B18EC421AF6DC1B3FA8198B5E3988D0D3C67E3E36A3423E7275CB35AC434DB
	300B31CC992B06BC0BAB709DD10010404C046FC5C26CE3631EDA87E667ACC7E9
	E13F8417578F112D41E1A96C71AD682378FA07AE1B1FF1AC77C7CC25107148FB
	87F8C9542017208058B05E8D8B3F85E25F8D0D6F11E1BA4F06D73A4E5C3D1DAC
	3B1D092EB126383A8F67EA1FEB3009AE1E1C9EA5D7F8030D220210404C985D18
	F41D04B8EF2FC6EC52C1732B31A70F606DD5E1DA8D8335B5125C8344E471E1F8
	0797F0ACDF66C07B2A3CD6A576685C80006262C058E38739B582F5AA623CD529
	917303D82728508F78C13AC586EB48313C83FE0CB8AFE8466E3B606DC8133321
	0A69FF600D40B4938CD13402041013AE331EB06E6B2672929DE0DA58827B1C19
	B0ED6BC46C86621ED58075880D4FC980F54C0B621677621D22C33C4C002D5162
	1EFC0310404CB8EECC441BC0C3759F0EFEC61CAE43D3F15FC24E7CAF18EB9825
	9EF60C9E737BF02C6AC7BFF2077988146BD2C13F6B0610404C5827B5F11F9486
	BFB58E9660310FCA60C0BD920ED73E213C7BAC71157758CF8BC4B53E036B118A
	75F406F30675066C0BD6B16E6EC43A640010404C7080B5018E39A342E4F6525C
	3EC75AA0E339B001F33E0B620633D096A8A0790A73D88A01EFD135F8FBDEC8CB
	5B084ECCA1853310000410B47861666646BBA91AD7F186B8A607B0665EAC8792
	107F4104C1033AF03754F09F9CCF8071030AAEAC8F6B4C9FE004329E63E6E0B9
	01208098208B0F71851491E77A23CF1330C0CE0BC7D31EC75AC3E3BF9B05EB71
	27BF7FFFFEF1E30703C6C5B704DD897F1312AEFDAADFBE7DFBF9F327D6354EB8
	CA0F82975F01041013E62A2BCC63EA71B5DE30BD0A6C8A01A3534D4D0D6BC30E
	D7400266E30C6B7A472BBB81A1AFA4A4646E6ECECACA8ADC5D476BA1E3A93FD0
	4A3F5CF3C6904206688B898989AAAA2A3079E12991B08E79606D434264010288
	0973FC12D7B5E1C8FB55717508383939C3C3C33D3C3C3E7FFE8C9CB571ED6BC0
	3AAA8C6B153F7225040C051111116B6B6B601CB8BABA02F301AED59F58B9F897
	1060C60430E16B8081A3A3A3ACAC2C908B59A9E2DADFC080FB22502000082026
	CC3B4FF02F208044031A09C93440BD3C3C3C2F5FBEFCFAF52BFCC6443CB74BE1
	D9578CE7261DF8555CDFBF7F5FBF7EFDA74F9F2047BAE0D91989F5E4143C57B8
	63DACBCECE7EEDDAB58B172F02B990420FEB2153C41F8B008F2A8000622278FD
	26F1FD2960A03C79F2E4F6EDDB98A343B84A5B5CCD50AC37564222155EBB7CFC
	F81158FE00F3C18E1D3B20F7E3E03F691FCF3A178263E6405254541468E3AF5F
	BFE4E5E521ED288875F0E37CF08F38214FA5201B0B10404CC800EB09AE68A518
	AE4391E00993858505924391631BED2A26FC3D32F88C3FAE7525909B90804501
	B050E6E7E7B7B4B484DF4782F58E6DFC77AEA08D61606DB00353BDA4A4A49B9B
	1BE43A1EC83DF268D71E60DE3683AB75846C3B4000B1608E3B623DAB18B24B92
	01C7E13C7000ACA9809900582C009324DA0DA4C84D1D82F909EB601CF234111B
	1BDB972F5F56AD5A05B41158E2018B08AC13EE58C770F04CFEA01D8108EF3170
	71719D3D7BF6F5EBD7C09878FEFC39D076C4E1CFB0E297819483B2E000208058
	086E9FC3BA6C0BCF5D2BC0B4F9EAD52B481A81C71C9E45D7F88F664396423EBB
	0B4802EB80FBF7EF43B21DFC225E3463313B95B86E1FC5EA00789A833080D601
	5502431F5317D001F0C138E4B968AC4BF091BD0610402C9816433A65C09204C2
	C07AD609E6FE66B444840C802E831471C803AB68D7DE432EF3423B6C0757E504
	D70B090BCC42126B9642BE4B93150C90972113BCA208A8181EF4F8F716A02568
	A0452C6080562C43A20720006157900240080223FAFF0BBD2A5EC42F34204864
	EEDEBA29368D8533B4C6EB97E100171255D533A7C075ADFBC7D46514CF65BD66
	98191161E1EE9168A71CFD15D0A599E7699F8FE3C8CCE8A520133CAC325C37F2
	ED34F4174B07B66ED1D59CA0475412514424B7FCE4AE2D801853525230EB0AA0
	41C0863C03F8BC326E6E6E34BF618D03064277B6211765682A81A53964320F58
	7340EE9A23728205CF416F785C026CCC003B714097F0F2F262BDA811D76D5A68
	D535E6E609B4D905A015407F01AD838424D03ACC895E80006281945C98C3E2C0
	D6059E6109B4955878266C912B6DB493A8E1D1098C635C0B46F15F3C85E7E438
	3C00E235E26F0BC2DAC5C56C28629E2F0C09776043197E580566020208202648
	E31AB98AC35CA4CF807BB5300311A70EE3AABD316B7BCCE30F706D1F67C0BB64
	9C601CE00F7DACD33268FBF4F02C1FC2DC7388E79C30800062C1ACAFF19F5B8C
	35ADE169E7629D1A43DE76494CB7087FD9827FD9049EBE189E257B942C6E2458
	0622F76F00028809F3962A5CC727A10DCCE1396018FFC83E9EDD5B7866AC70AD
	45C45A44E09FC7C7BCFC14EB9403AE517106E24E42C57F040C9C0D104028C756
	625D318967A6899843E0B1DE7B80A9006DAF0766D266C07B0F05D68C826B833C
	FE35235815E31F4CC41ABE046723200C80004229EBD1DA7058E78AF1AF23C37F
	4E20D61C8667D32FA9DB6CF04CC32137BDF1DCB082B5E7813CB48E67073DAEE1
	553C977100014000A1DF708F596762BD179ED46B74D0820FD7DA2182A513FE71
	15AC6D36E4548C75AB13C1A54A78B21D5AB984F52824FC4BF300028809EB3003
	9AFBE01D7DFC134098ED659CCBC1B06DAAC17ADA183C01E29A63C2EC1961EEA1
	80E72ACC7108CC862CD6C350B0CEB662DDB784B6BB0BBE581A57FA03082016B4
	3E05BCA98E1913B8FAA20CC4DDFAC780B44D05D751F998B1856BB326D6210DCC
	AA15CF6E0BCC60854F2AA005139EEBE69123123E168467361FD3B50001C482B9
	F40A7B5D81E37E565CF99498D9705C5D0D5C972913EC88A0E551CC01063CD526
	72E8E33AFA1ED7940903116783E0EAA802041013D67DD8C42C9CC27ABE0B5A0C
	631E57885C2660DD914A70D127D69D147882184F8183EBE208B4D960AC7EC753
	E1C1732772DF0D57250C10404C988B9FE0C39658FBA2C4744421818BFF404DB4
	221E573F13D78A683CA3E8B83A317816C7A1F578F12C0DC6653EAE7D38586F09
	418E1580006221389682ABE18CAB64C4B55F0CB3AAC7B50614F9884CAC15009E
	BDBBF8C7FAF1AF49C5BA5901F31411FCA721218FBCE29F1F85A8070820265CF3
	D19883BA0C786F10C19CD0470B775C07A0E01A5EC77A1C09D62E2BD64024D839
	C7DA9CC375BA27F1FD3EACBD773C75244000B1E01ACBC675E92CD63E379E6113
	B48DFDC43799308B78629A3D58B560A656E46957AC534098538C98EB6BF09C5F
	88B9AA0C57F90610404CC8F3C8F01922E20F2A2658C9602D64F02F1DC0BA1214
	3967E03AA382E0A803C44C78DB1CF39433FC072860AD7BB19E6686756D27D6C8
	030820165C734058530D03EAE12398678BE11A2043DB058F750C9298FBB3F11C
	AD8FD611C3B3E010EBC20506BC271A30E05E058C1920B82E4DC33A680A10404C
	C8C3F4F8F7B6614EC463BD7B0BAE0672F61E5AD709B386442EEED13C8FB58CC6
	2C79F12C90C21C6862C0B6ED10DE15C015FA58CFBB42EB00E36F9EE2AAFF0102
	8809FFB5C50C78B7C460BDB006EB321BE462174FB304B98B80369E83A721C180
	E37A567862478E5D5C8705A2756BB0AE1F45B30EEB400572FF19B398C22C9400
	02888501633B18D6BDA2B81A9768D520AE891D5C771161969E680919ADDC435B
	5F8FA7F18727F5E1B9729381949B1970CD16601DF9C1AC5D2061051040284B10
	902F9B470E503CDB7A91C3023311E1BFF5164FC583ABAC87D49F680EC6752002
	E67D72C43419F0971BB8B63D43E6DFF1CC7DA26508784A02082016FC0D09CCAA
	15ADBEC5DAFFC27AE526E41C175C1D63CCA91E3CF784E3BAB005EBA01E1EAFE1
	B9FE0D57698EEB94F4DFBF7FE3DF9084595841469F00028805AD32C43F8189EB
	AE52B4912CF82C3F72A1817FE7389EDDB678462231970A605E038D6B2D252E8D
	58DB3098B511F20025D6B51A98A7CE62AEF2030280006241F306DAD8195AC182
	7515069AF5C8AB85D1AEC0C2336D4470F219D7E00FFE397AAC8328B866CDF0A4
	7AB4EA0DB9F581F55C55AC4D7EF82C027229021060009FCB6B8D7B23A6D20000
	000049454E44AE426082
	]]>
</Picture>

<Ancestry SectVersion="1" SectionFlags="0" SubIdent="0" Template="false">
	<MainGUID>F938E33A-329D-4A36-BE3E-85E126820996</MainGUID>
	<MainGUID>103E8D2C-8230-42E1-9597-46F84CCE28C0</MainGUID>
	<MainGUID>2BE37B56-E4CC-412B-BA03-C60B6C3F0D5C</MainGUID>
	<MainGUID>5AB3C7DA-8FC3-4BBC-8226-4F91EFD9AE9F</MainGUID>
</Ancestry>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_PR SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_PR>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_UI SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_UI>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Comment SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[Распределительный объект автостоянки с возможностью нумерации и размещения столбика ограждения в конце места для парковки.]]>
</Comment>

<Keywords SectVersion="1" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Keywords>

<CalledMacros SectVersion="2" SectionFlags="0" SubIdent="0">
	<Macro>
		<MName><![CDATA["Resize_A_B_ZZYZX"]]></MName>
		<MainGUID>33A17ABE-882E-11D6-95A3-00039318F8B6</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["parking_symbols"]]></MName>
		<MainGUID>44CC5818-000C-4A13-A4A1-0E79CCD8F219</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["bollard_m"]]></MName>
		<MainGUID>A9DAB5B8-E5A4-4A9D-AD56-5C12BA1F900E</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["FM_types"]]></MName>
		<MainGUID>2759D2DF-AA8E-44D1-AD1D-261581266B34</MainGUID>
	</Macro>
</CalledMacros>

<Copyright SectVersion="1" SectionFlags="0" SubIdent="0">
	<Author>GRAPHISOFT</Author>
	<License>
		<Type>CC BY-ND</Type>
		<Version>3.0</Version>
	</License>
</Copyright>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_FWM SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_FWM>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_BWM SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_BWM>

<MigrationTable SectVersion="1" SectionFlags="0" SubIdent="0">
</MigrationTable>

</Symbol>
