<?xml version="1.0" encoding="UTF-8"?>
<Symbol IsArchivable="false" IsPlaceable="false" MainGUID="C2096D98-90F6-4C42-9C44-9343338E560E" MigrationValue="Normal" Owner="0" Signature="1465080141" Version="38">
<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_2D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
! Contact person: <NJ>

! ==============================================================================
! Draws a curved window panel in 2D view
! ------------------------------------------------------------------------------
! Input parameters:
!	A:						width of panel (width value)
!	gs_IsCurved:
!	bDisabeMirroring:		(only for curved window panel)
!	gs_frame_thk:
!	gs_frame_width:
!	gs_frame_cut_width:
!	gs_frame_cut_depth:
!	gs_frame_ovhg_left_out:
!	gs_frame_ovhg_right_out:
!	gs_frame_ovhg_left_in:
!	gs_frame_ovhg_right_in:
!	iLoD2D:
!	gs_pen_2D:				pen for 2D contours (pen)
!	gs_frame_pen_cont:		contour pen of the frame and sash - if 0 then drawn with gs_pen_2D (pen)
!	gs_fillFr:				frame fill pattern type (fill)
!	gs_penFr_fg:			frame fill foreground pen
!	gs_penFr_bg:			frame fill background pen
!	gs_fillShCover:
!	gs_penShCov_fg:
!	gs_penShCov_bg:
!
! Related Global Variables:
!	GLOB_CONTEXT
!	SYMB_ROTANGLE
!	SYMB_MIRRORED
!	WIDO_FRAME_THICKNESS
!	WIDO_LEFT_JAMB
!	WIDO_RIGHT_JAMB
!	WIDO_ORIG_DIST
!	WIDO_REVEAL_SIDE
! ==============================================================================

lod2D					= DET2D_FS_OFF
iSymbolGlassType		= SYMBGLASS_SIMPLEGLASS

if iLoD2D = SYMBW_S_1LINE then				lod2D = DET2D_FS_SIMPLE_ONE 		! Simple - One Line --> INT 200
if iLoD2D = SYMBW_S_CENTERLINE then			lod2D = DET2D_FS_SIMPLE_ONE 		! Simple - Centerline --> SWE 200
if iLoD2D = SYMBW_S_2LINE_ACC then			lod2D = DET2D_FS_SIMPLE_TWO 		! Simple - Two Lines
if iLoD2D = SYMBW_S_2LINE then				lod2D = DET2D_FS_SIMPLE_CHI			! Chinese Simple
if iLoD2D = SYMBW_M_2LINE_GLASS then		lod2D = DET2D_FS_MIDDLE 			! Middle - without acc
if iLoD2D = SYMBW_M_2LINE_NOGLASS then		lod2D = DET2D_FS_SIMPLE_TWO 		! Middle - with acc --> INT 100
if iLoD2D = SYMBW_M_FRAMESASH then			lod2D = DET2D_FS_DETAILED			! NLD Middle
if iLoD2D = SYMBW_D_SGLASS then				lod2D = DET2D_FS_DETAILED 			! Detailed --> INT 50, DAN 20
if iLoD2D = SYMBW_D_REBATEONGLASS then		lod2D = DET2D_FS_DETAILED 			! Detailed --> NLD Detailed
if iLoD2D = SYMBW_D_SGLASS then				lod2D = DET2D_FS_DETAILED 			! Detailed --> INT 50, DAN 20
if iLoD2D = SYMBW_D_2GLASS then				lod2D = DET2D_FS_DETAILED 			! Detailed --> NOR 50
if iLoD2D = SYMBW_D_2LINE_HS then			lod2D = DET2D_FS_DETAILED_CHI		! Chinese Detailed

if iLoD2D = SYMBW_D_2GLASS then 			! Detailed --> NOR 50
	iSymbolGlassType		= SYMBGLASS_DOUBLEGLASS
endif


!!!!	Chinese Symbol	!!!
if lod2D = DET2D_FS_SIMPLE_CHI | lod2D = DET2D_FS_DETAILED_CHI then

	pen gs_pen_2d
	fill gs_fillShCover


	if GLOB_SCRIPT_TYPE <> 2 & GLOB_CONTEXT <> 22 then
		widoOrigDist = -WIDO_ORIG_DIST
	else
		widoOrigDist =  WIDO_ORIG_DIST
	endif


	signrotangle = (ABS(SYMB_ROTANGLE-180) < EPS) - not(SYMB_ROTANGLE)
	signrevealside = not(WIDO_REVEAL_SIDE) - WIDO_REVEAL_SIDE
	SymbolMid_shiftDy = (WIDO_SILL - WALL_THICKNESS / 2 + WIDO_FRAME_THICKNESS / 2) * signrevealside
	wallIsLeft		= (SYMB_ROTANGLE > EPS) exor WIDO_REVEAL_SIDE
	signWallIsLeft	= wallIsleft - not(wallIsleft)


	WOD = abs(widoOrigDist) + signrotangle * (SymbolMid_shiftDy)

	halfA = A / 2

	alpha = atn(halfA / (WOD - (ABS(SYMB_ROTANGLE-180) < EPS) * WIDO_FRAME_THICKNESS))



	Rad = halfA / sin(alpha) - signrotangle * (SymbolMid_shiftDy)/ cos(alpha) + signrotangle * (SymbolMid_shiftDy)

			poly2_b{2} 5, 1 + 2 * (gs_fillFr > 0) + 4 + 8 + 16 + 32, gs_penShCov_fg, gs_penShCov_bg,
				0, 0, 0,
				0, -signrotangle * WOD, 901,
				(Rad + WIDO_FRAME_THICKNESS) * sin(alpha), -signrotangle * (WOD - (Rad + WIDO_FRAME_THICKNESS) * cos(alpha)), 1,
				-(Rad + WIDO_FRAME_THICKNESS) * sin(alpha), -signrotangle * (WOD - (Rad + WIDO_FRAME_THICKNESS) * cos(alpha)), 3000,
				-Rad * sin(alpha), -signrotangle * (WOD - Rad * cos(alpha)), 1,
				Rad * sin(alpha), -signrotangle * (WOD - Rad * cos(alpha)), 3000


endif





if gs_frame_pen_cont = 0 then gs_frame_pen_cont = gs_pen_2D

bGlass 	= (lod2D > 20) & iMullionStyle <> MULLION_SOLID_PANEL
s1_bEndLines = 1		! was: bListView

if WIDO_REVEAL_SIDE = (SYMB_ROTANGLE > EPS) then
	iSign = -1
	NWOD = WOD - WIDO_REVEAL_SIDE * WIDO_FRAME_THICKNESS
else
	iSign = 1
	NWOD = WOD + WIDO_REVEAL_SIDE * WIDO_FRAME_THICKNESS
endif

alpha = atn(refWidth / 2 / NWOD)
Rad = NWOD / cos(alpha)

add2 0, WIDO_ORIG_DIST
if (SYMB_ROTANGLE > EPS) then
	mul2 1,1
else
	mul2 1,-1
endif

!!!circle2 0,0, Rad

ArcLengthToAngle = 180 / Rad / PI
alfaFrameWidth = (gs_frame_width) * ArcLengthToAngle

alfa_left_ovh_in = gs_frame_ovhg_left_in
alfa_left_ovh_out = gs_frame_ovhg_left_out

alfa_right_ovh_in = gs_frame_ovhg_right_in
alfa_right_ovh_out = gs_frame_ovhg_right_out


sideA = Rad
sideB = Rad - iSign * gs_frame_thk
sideBSolidPanel = Rad - iSign * (gs_frame_thk - gs_sash_thk * (iMullionStyle = MULLION_SOLID_PANEL))

toleranceLeft	= leftWidth - A/2
toleranceRight	= rightWidth - A/2
dx = (toleranceRight - toleranceLeft) / 2

alfaLeft  = atn((A / 2 + dx) / (NWOD - (WIDO_REVEAL_SIDE = (SYMB_ROTANGLE < EPS)) * WIDO_FRAME_THICKNESS))
alfaRight = atn((A / 2 - dx) / (NWOD - (WIDO_REVEAL_SIDE = (SYMB_ROTANGLE < EPS)) * WIDO_FRAME_THICKNESS))


! =============================================================================
! Curved window panel - Simple symbol
! =============================================================================

if lod2D = DET2D_FS_SIMPLE_ONE then
	pen gs_pen_2D
	line_property 0

	arc2 0,0, Rad, 90 - alfaRight, 90 + alfaLeft

	if bShowUnitHotspots then
		hotspot2 Rad * sin(-alfaLeft - gs_frame_ovhg_left_out),  Rad * cos(-alfaLeft - gs_frame_ovhg_left_out),  100
		hotspot2 Rad * sin(alfaRight + gs_frame_ovhg_right_out), Rad * cos(alfaRight + gs_frame_ovhg_right_out), 101
	endif

	end ! =============================================================== END =
endif


! =============================================================================
! Curved window panel - Basic and Detailed symbol
! =============================================================================

if lod2D > DET2D_FS_SIMPLE_ONE & lod2D<>DET2D_FS_SIMPLE_CHI & lod2D <> DET2D_FS_DETAILED_CHI then

	sAlfa = sin(alfaFrameWidth)
	cAlfa = cos(alfaFrameWidth)

	pen gs_frame_pen_cont
	line_property 2
	fill gs_fillFr

	! left window frame
	if gs_bFrameLeft then
		rot2 alfaLeft

		px1 = sideB * sin(-alfa_left_ovh_in)
		py1 = sideB * cos(-alfa_left_ovh_in)
		px2 = sideA * sin(-alfa_left_ovh_out)
		py2 = sideA * cos(-alfa_left_ovh_out)

		poly2_b 6, 1+2+4+16+32, gs_penFr_fg, gs_penFr_bg,
				px1,			py1,			32 + s1_bEndLines,
				px2,			py2,			32 + 1,
				0,				0,				32 + 901,
				sideA * sAlfa,	sideA * cAlfa,	32 + 3001,
				sideB * sAlfa,	sideB * cAlfa,	32 + 1,
				0,				sideB,			32 + 3001

		!!! Tolerance separator line
		line2 0, sideA, 0, sideB


		!!! Unit hotspots
		if bShowUnitHotspots then
			hotspot2 0, sideA, 100
			hotspot2 0, sideB, 102
		endif

		del 1
	endif

	! right window frame
	if gs_bFrameRight then
		rot2 -alfaRight

		px1 = -sideB * sin(-alfa_right_ovh_in)
		py1 =  sideB * cos(-alfa_right_ovh_in)
		px2 = -sideA * sin(-alfa_right_ovh_out)
		py2 =  sideA * cos(-alfa_right_ovh_out)

		poly2_b 6, 1+2+4+16+32, gs_penFr_fg, gs_penFr_bg,
				px1,			py1,			32 + s1_bEndLines,
				px2,			py2,			32 + 1,
				0,				0,				32 + 901,
				-sideA * sAlfa,	sideA * cAlfa,	32 + 3001,
				-sideB * sAlfa,	sideB * cAlfa,	32 + 1,
				0,				sideB,			32 + 3001

		!!! Tolerance separator line
		line2 0, sideA, 0, SideB

		!!! Unit hotspots
		if bShowUnitHotspots then
			hotspot2 0, sideA, 101
			hotspot2 0, SideB, 103
		endif

		del 1
	endif

	pen gs_pen_2D

	alfaRightPos = alfaRight - gs_bFrameRight * (alfaFrameWidth)
	alfaLeftPos  = alfaLeft  - gs_bFrameLeft  * (alfaFrameWidth)

	! --- glass line in the center of the frame ---
	if iSymbolGlassType = SYMBGLASS_DOUBLEGLASS then
		line_property 2
		arc2 0, 0, sideA - iSign * gs_frame_thk / 2 + gs_glass_thk / 2, 90 - alfaRightPos, 90 + alfaLeftPos
		arc2 0, 0, sideA - iSign * gs_frame_thk / 2 - gs_glass_thk / 2, 90 - alfaRightPos, 90 + alfaLeftPos
	else
		line_property 1
		if not(bShowVertGrid) | iVertGrid = 0 then
			arc2 0,0, sideA - iSign * gs_frame_thk / 2, 90 - alfaRightPos, 90 + alfaLeftPos
		else
			for i = 1 to iVertGrid+1
				VertGridAngle = atn((gs_vert_grid_curved[i][2]) / (NWOD - (WIDO_REVEAL_SIDE = (SYMB_ROTANGLE < EPS)) * WIDO_FRAME_THICKNESS))

				if i = 1 then
					arc2 0,0, sideA - iSign * gs_frame_thk / 2, 90 - alfaRightPos, 90 - alfaRight + gs_vert_grid_curved[1][1] - VertGridAngle / 2
				else
					arc2 0,0, sideA - iSign * gs_frame_thk / 2, 90 - alfaRight + gs_vert_grid_curved[i-1][1] + VertGridAngle / 2, 90 - alfaRight + gs_vert_grid_curved[i][1] - VertGridAngle/2
				endif

			next i
		endif
	endif

	! --- horizontal lines and cover fill ---
	fill gs_fillShCover

	if iMullionStyle = MULLION_SOLID_PANEL then
		poly2_b 5, 1 + 2 * (gs_fillShCover > 0) + 4 + 16 + 64, gs_penShCov_fg, gs_penShCov_bg,
			0,0, 901,
			sideA * sin(-alfaLeftPos),				sideA * cos(-alfaLeftPos),	1,
			sideA * sin(alfaRightPos),				sideA * cos(alfaRightPos),	3000,
			sideBSolidPanel * sin(alfaRightPos),	sideBSolidPanel * cos(alfaRightPos),	1,
			sideBSolidPanel * sin(-alfaLeftPos),	sideBSolidPanel * cos(-alfaLeftPos),	3000

		fill gs_fillSh
		line_property 2
		poly2_b 5, 1 + 2 * (gs_fillSh > 0) + 4 + 16 + 64, gs_penSh_fg, gs_penSh_bg,
			0,0, 901,
			sideB * sin(-alfaLeftPos),				sideB * cos(-alfaLeftPos),	32 + 1,
			sideB * sin(alfaRightPos),				sideB * cos(alfaRightPos),	3032 + 1,
			sideBSolidPanel * sin(alfaRightPos),	sideBSolidPanel * cos(alfaRightPos),	32 + 1,
			sideBSolidPanel * sin(-alfaLeftPos),	sideBSolidPanel * cos(-alfaLeftPos),	3032 + 1
	else
		poly2_b 5, 1 + 2 * (gs_fillShCover > 0) + 4 + 16 + 64, gs_penShCov_fg, gs_penShCov_bg,
			0,0, 901,
			sideA * sin(-alfaLeftPos),	sideA * cos(-alfaLeftPos),	1,
			sideA * sin(alfaRightPos),	sideA * cos(alfaRightPos),	3000,
			sideB * sin(alfaRightPos),	sideB * cos(alfaRightPos),	1,
			sideB * sin(-alfaLeftPos),	sideB * cos(-alfaLeftPos),	3000
	endif

	! --- Vertical Grids----------------------
	if bShowVertGrid then
		fill gs_fillShCover
		rot2 alfaLeft
		for i = 1 to iVertGrid
			rot2 -gs_vert_grid_curved[i][1]
			add2 0, sideA - iSign * ( gs_frame_thk / 2) + VertGridThk / 2

			poly2_b 4, 1+2+4+16+32, gs_penFr_fg, gs_penFr_bg,
					- gs_vert_grid_curved [i][2] / 2, 0,            32 + 1,
					+ gs_vert_grid_curved [i][2] / 2, 0,            32 + 1,
					+ gs_vert_grid_curved [i][2] / 2, -VertGridThk, 32 + 1,
					- gs_vert_grid_curved [i][2] / 2, -VertGridThk, 32 + 1
			del 2
		next i
		del 1
	endif

endif

del 2




]]>
</Script_2D>

<ParamSection SectVersion="26" SectionFlags="0" SubIdent="0">
	<ParamSectHeader>
		<Version>26</Version>
		<AutoHotspots>true</AutoHotspots>
		<HoleBits>
			<WDBit_3DFrame/>
		</HoleBits>
		<WDLeftFrame>0</WDLeftFrame>
		<WDRightFrame>0</WDRightFrame>
		<WDTopFrame>0</WDTopFrame>
		<WDBotFrame>0</WDBotFrame>
		<LayFlags>65535</LayFlags>
		<WDMirrorThickness>0</WDMirrorThickness>
		<WDWallInset>0</WDWallInset>
		<SymbolColor>0</SymbolColor>
	</ParamSectHeader>
	<Parameters>
		<Length Name="A">
			<Description><![CDATA["Width of Panel"]]></Description>
			<Fix/>
			<Value>1</Value>
		</Length>
		<Length Name="B">
			<Description><![CDATA["Height of Panel"]]></Description>
			<Fix/>
			<Value>1</Value>
		</Length>
		<Length Name="ZZYZX">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Boolean Name="AC_show2DHotspotsIn3D">
			<Description><![CDATA["Show 2D Hotspots in 3D"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="ac_bottomlevel">
			<Description><![CDATA["Bottom Level"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="ac_toplevel">
			<Description><![CDATA["Top Level"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Integer Name="gs_macro_version">
			<Description><![CDATA["Macro Version"]]></Description>
			<Value>11</Value>
		</Integer>
		<Length Name="refWidth">
			<Description><![CDATA["Reference Width"]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="leftWidth">
			<Description><![CDATA["Left Offset from the Origo"]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="rightWidth">
			<Description><![CDATA["Right Offset from the Origo"]]></Description>
			<Value>0</Value>
		</Length>
		<Angle Name="AC_Hole_Position_Angle">
			<Description><![CDATA["Hole Position Angle"]]></Description>
			<Value>0</Value>
		</Angle>
		<Boolean Name="bDisabeMirroring">
			<Description><![CDATA["Disable Window Mirroring"]]></Description>
			<Value>0</Value>
		</Boolean>

		<!-- gs_window_sizes: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_window_sizes">
			<Description><![CDATA["Window Sizes"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
		</Title>
		<Length Name="gs_tolerance_left">
			<Description><![CDATA["Tolerance Left"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_tolerance_right">
			<Description><![CDATA["Tolerance Right"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>

		<!-- gs_window_frame: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_window_frame">
			<Description><![CDATA["Window Frame"]]></Description>
		</Title>
		<Length Name="gs_frame_thk">
			<Description><![CDATA["Frame Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_frame_width">
			<Description><![CDATA["Frame Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.08</Value>
		</Length>
		<Angle Name="gs_frame_ovhg_left_out">
			<Description><![CDATA["Left Outside Overhang"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Angle Name="gs_frame_ovhg_right_out">
			<Description><![CDATA["Right Outside Overhang"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Angle Name="gs_frame_ovhg_left_in">
			<Description><![CDATA["Left Inside Overhang"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Angle Name="gs_frame_ovhg_right_in">
			<Description><![CDATA["Right Inside Overhang"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>

		<!-- gs_window_sash: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_window_sash">
			<Description><![CDATA["Sash Frame"]]></Description>
		</Title>
		<Length Name="gs_sash_thk">
			<Description><![CDATA["Sash Frame Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.04</Value>
		</Length>
		<Integer Name="iMullionStyle">
			<Description><![CDATA["Grid Style"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>

		<!-- gs_2D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_2D_representation">
			<Description><![CDATA["2D and Section Representation"]]></Description>
		</Title>
		<Integer Name="lod2D">
			<Description><![CDATA["Level of Detail in 2D"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>4</Value>
		</Integer>
		<Integer Name="iLoD2D">
			<Description><![CDATA["Level of Detail in 2D Window"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<PenColor Name="gs_pen_2D">
			<Description><![CDATA["Uncut Line Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3</Value>
		</PenColor>
		<PenColor Name="gs_frame_pen_cont">
			<Description><![CDATA["Cut Line Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</PenColor>
		<FillPattern Name="gs_fillFr">
			<Description><![CDATA["Frame Fill Pattern"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</FillPattern>
		<PenColor Name="gs_penFr_fg">
			<Description><![CDATA["Frame Fill ForeGround"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</PenColor>
		<PenColor Name="gs_penFr_bg">
			<Description><![CDATA["Frame Fill BackGround"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</PenColor>
		<FillPattern Name="gs_fillSh">
			<Description><![CDATA["Sash Fill Pattern"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</FillPattern>
		<PenColor Name="gs_penSh_fg">
			<Description><![CDATA["Sash Fill Foreground"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</PenColor>
		<PenColor Name="gs_penSh_bg">
			<Description><![CDATA["Sash Fill Background"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</PenColor>
		<FillPattern Name="gs_fillShCover">
			<Description><![CDATA["Sash Cover Fill Pattern"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_penShCov_fg">
			<Description><![CDATA["Sash Cover Fill Foreground"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>-1</Value>
		</PenColor>
		<PenColor Name="gs_penShCov_bg">
			<Description><![CDATA["Sash Cover Fill Background"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>-1</Value>
		</PenColor>
		<Integer Name="iVertGrid">
			<Description><![CDATA["Vertical Grid Number"]]></Description>
			<Value>0</Value>
		</Integer>
		<Boolean Name="bShowVertGrid">
			<Description><![CDATA["Show Vertical Grids"]]></Description>
			<Value>0</Value>
		</Boolean>
		<Angle Name="gs_vert_grid_curved">
			<Description><![CDATA["Vert. Grid Position & Width"]]></Description>
			<ArrayValues FirstDimension="1" SecondDimension="2">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0</AVal>
			</ArrayValues>
		</Angle>
		<Length Name="VertGridThk">
			<Description><![CDATA["Vert. Grid Thickness"]]></Description>
			<Value>0</Value>
		</Length>
		<Boolean Name="bShowUnitHotspots">
			<Description><![CDATA["Show Unit Hotspots"]]></Description>
			<Value>0</Value>
		</Boolean>
	</Parameters>
</ParamSection>

<Ancestry SectVersion="1" SectionFlags="0" SubIdent="0" Template="false">
	<MainGUID>F938E33A-329D-4A36-BE3E-85E126820996</MainGUID>
	<MainGUID>103E8D2C-8230-42E1-9597-46F84CCE28C0</MainGUID>
	<MainGUID>B2970E4C-8680-4061-8670-2F4B638F3953</MainGUID>
</Ancestry>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_3D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_3D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_1D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
! Contact person: <NJ>

! ==============================================================================
! Draws a curved window panel
! ------------------------------------------------------------------------------
! Remark:
!	See the input parameters at the 2D/3D Scripts
! ==============================================================================

if GLOB_CONTEXT = 1 then WIDO_ORIG_DIST = 2	! For testing in Library Part Editor

EPS = 0.0001
WOD = abs(WIDO_ORIG_DIST)


gs_bFrameLeft = 1
gs_bFrameRight = 1

! ==============================================================================
! Compatibility
! ==============================================================================

if refWidth < EPS then refWidth = A
if leftWidth < EPS then leftWidth = A / 2
if rightWidth < EPS then rightWidth = A / 2

DET2D_FS_OFF				= 0
DET2D_FS_SCALESENS			= -1
DET2D_FS_SIMPLE_ONE			= 11
DET2D_FS_SIMPLE_TWO			= 12
DET2D_FS_MIDDLE				= 21
DET2D_FS_MIDDLE_USA			= 22
DET2D_FS_DETAILED			= 30
DET2D_FS_DETAILED_FIX_GRID	= 31
DET2D_FS_DETAILED_USA		= 32
DET2D_FS_SIMPLE_CHI			= 51
DET2D_FS_DETAILED_CHI		= 52

! iLoD2D
SYMBW_OFF					= 0
SYMBW_SCALESENS				= 1
SYMBW_S_1LINE				= 11
SYMBW_S_2LINE				= 12
SYMBW_S_CENTERLINE			= 13
SYMBW_S_2LINE_ACC			= 14
SYMBW_S_5					= 15
SYMBW_S_6					= 16
SYMBW_S_7					= 17
SYMBW_S_8					= 18
SYMBW_S_9					= 19
SYMBW_M_2LINE_NOGLASS		= 21
SYMBW_M_2LINE_GLASS			= 22
SYMBW_M_FRAMESASH			= 23
SYMBW_M_2LINE_FRAME			= 24
SYMBW_M_5					= 25
SYMBW_M_6					= 26
SYMBW_M_7					= 27
SYMBW_M_8					= 28
SYMBW_M_9					= 29
SYMBW_D_SGLASS				= 31
SYMBW_D_2GLASS				= 32
SYMBW_D_2LINE_HS			= 33
SYMBW_D_NOGLASS				= 34
SYMBW_D_REBATEONGLASS		= 35
SYMBW_D_2GLASS_OVERLAP		= 36
SYMBW_D_7					= 37
SYMBW_D_8					= 38
SYMBW_D_9					= 39

SYMBGLASS_NOGLASS			= 0
SYMBGLASS_SIMPLEGLASS		= 1
SYMBGLASS_DOUBLEGLASS		= 2

! iMullionStyle
MULLION_NONE			= 1
MULLION_HVGRID			= 2
MULLION_EDITABLEGRID	= 3
MULLION_CUSTOM			= 4
MULLION_PRAIRIE			= 5
MULLION_DIVIDED			= 6
MULLION_SOLID_PANEL		= 15
MULLION_VENT_PANEL		= 16

]]>
</Script_1D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_PR SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_PR>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_UI SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_UI>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_VL SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_VL>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Comment SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Comment>

<CalledMacros SectVersion="2" SectionFlags="0" SubIdent="0">
</CalledMacros>

<Copyright SectVersion="1" SectionFlags="0" SubIdent="0">
	<Author>GRAPHISOFT</Author>
	<License>
		<Type>CC BY-ND</Type>
		<Version>3.0</Version>
	</License>
</Copyright>

</Symbol>
