<?xml version="1.0" encoding="UTF-8"?>
<Symbol IsArchivable="true" IsPlaceable="false" MainGUID="5EFCD68D-4776-4487-88E3-48DE50840CC3" MigrationValue="Normal" Owner="1196638531" Signature="1297307981" Version="43">
<Ancestry SectVersion="1" SectionFlags="0" SubIdent="0" Template="false">
	<MainGUID>F938E33A-329D-4A36-BE3E-85E126820996</MainGUID>
	<MainGUID>103E8D2C-8230-42E1-9597-46F84CCE28C0</MainGUID>
	<MainGUID>B2970E4C-8680-4061-8670-2F4B638F3953</MainGUID>
</Ancestry>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_3D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
!opening lines macro
! ==============================================================================
!
!  a: width
!
!  b: height
!
!  frameThickness: sash frame thickness
!
!  iOpeningType: opening type -
!		SASH_FIXED					= 1		! Fixed Glass
!		SASH_FIXED_SCREW			= 2		! Fixed Sash
!		SASH_SIDE_HUNG				= 3		! Side Hung
!		SASH_SIDE_HUNG_M			= 4		! Side Hung Mirrored
!		SASH_TILT_TURN				= 5		! Tilt and Turn
!		SASH_TILT_TURN_M			= 6		! Tilt and Turn Mirrored
!		SASH_BOTTOM_HUNG			= 7		! Bottom Hung
!		SASH_TOP_HUNG				= 8		! Top Hung
!		SASH_HOR_PIVOT				= 9		! Horizontal Pivot Hung
!		SASH_VER_PIVOT				= 10	! Vertical Pivotted
!		SASH_TILT_SLIDE				= 11	! Tilt and Slide
!		SASH_LEFT_SLIDING			= 12	! Left Sliding
!		SASH_RIGHT_SLIDING			= 13	! Right Sliding
!		SASH_UP_SLIDING				= 14	! Sliding Up
!		SASH_DOWN_SLIDING			= 15	! Sliding Down
!		SASH_VER_PIVOT_M			= 16	! Vertical Pivotted Mirrored
!		SASH_FIXED_SLIDE			= 17	! Fixed Sliding Sash
!		SASH_DOUBLE_SIDE_HUNG		= 18	! Double Sash
!		SASH_DOUBLE_TILT_TURN		= 19	! Double Tilt and Turn
!		SASH_DOUBLE_TILT_TURN_M		= 20	! Double Tilt and Turn Mirrored
!		SASH_SLIDING_HOR			= 21	! Sliding
!		SASH_SLIDING_HOR_M			= 22	! Sliding Mirrored
!		SASH_DOUBLE_SLIDING_HOR		= 23	! Double Sliding
!		SASH_DOUBLE_SLIDING_HOR_M	= 24	! Double Sliding Mirrored
!		SASH_SLIDING_VER			= 25	! Single Hung
!		SASH_DOUBLE_SLIDING_VER		= 26	! Double Hung
!
!  oplinetype - 0-solid line, 1-dashed line, 2-dotted line, 3-dash & dot line, 4-no line
!
!  sideHeightMod: Side height modification for trapezoid windows (0 = Default, Half Height)
!  topWidthMod:   Top width modification for trapezoid windows (0 = Default)
!
! ==============================================================================


if A < EPS | B < EPS then end
if (opLineType3dIn = NO_LINE & opLineType3dOut = NO_LINE) then end		! Opening line not needed on fix windows.

!if iOpeningType = SASH_FIXED | iOpeningType = SASH_FIXED_SCREW | (opLineType3dIn = NO_LINE & opLineType3dOut = NO_LINE) then end		! Opening line not needed on fix windows.

if not(bSkyLight) and GLOB_CONTEXT = 2 then end		! no opening lines in projected 2d view

pen gs_opLinePen

v1 = 0.08     ! 1 dash length
v2 = 0.05     ! 1 space length




bPivotWindow = ((iOpeningType = SASH_HOR_PIVOT) | (iOpeningType = SASH_VER_PIVOT) | (iOpeningType = SASH_VER_PIVOT_M))
bSlidingWindow = ((iOpeningType = SASH_LEFT_SLIDING) | (iOpeningType = SASH_RIGHT_SLIDING) | (iOpeningType = SASH_TILT_SLIDE) | \
					(iOpeningType = SASH_UP_SLIDING) | (iOpeningType = SASH_DOWN_SLIDING))
bMirrored = (iOpeningType = SASH_SIDE_HUNG_M | iOpeningType = SASH_TILT_TURN_M | iOpeningType = SASH_LEFT_SLIDING | iOpeningType = SASH_TILT_SLIDE)

aa = a
bb = b
iFirstLineType = 0
iSecondLineType = 0
delnum = 0

if iOpeningType = SASH_FIXED or iOpeningType = SASH_FIXED_SCREW then
	rcr = v1/4
	addx 3*rcr
	addy 3*rcr
	CIRCLE rcr
	addz -frameThickness
	CIRCLE rcr
	del 3
endif

if iOpeningType <> SASH_VER_PIVOT and iOpeningType <> SASH_VER_PIVOT_M and iOpeningType <> SASH_HOR_PIVOT then
	if bMirrored exor (gs_opline_style_m = 2) then
		addx aa
		mulx -1
		delnum = delnum + 2
	endif
	if (gs_opline_style_m = 2) then
		addy bb
		muly -1
		delnum = delnum + 2
	endif
endif

if iOpeningType = SASH_SIDE_HUNG | iOpeningType = SASH_SIDE_HUNG_M | iOpeningType = SASH_TILT_TURN | iOpeningType = SASH_TILT_TURN_M then
	iFirstLineType = opLineType3dIn
	iSecondLineType = opLineType3dOut
	gosub "drawLines"
endif

if iOpeningType = SASH_TOP_HUNG then
	addx aa
	rotz 90
	aa = b
	bb = a
	iFirstLineType = opLineType3dIn
	iSecondLineType = opLineType3dOut
	gosub "drawLines"
	del 2
endif

if iOpeningType = SASH_BOTTOM_HUNG | iOpeningType = SASH_TILT_TURN | iOpeningType = SASH_TILT_TURN_M | iOpeningType = SASH_TILT_SLIDE then
	addy bb
	rotz -90
	aa = b
	bb = a
	iFirstLineType = opLineType3dIn
	iSecondLineType = opLineType3dOut
	gosub "drawLines"
	del 2
endif

if bSlidingWindow then
	aa = a
	bb = b
	if iOpeningType = SASH_UP_SLIDING | iOpeningType = SASH_DOWN_SLIDING then
		addx a/2
		addy b/2
		rotz 90 * (iOpeningType = SASH_UP_SLIDING) - 90 * (iOpeningType = SASH_DOWN_SLIDING)
		addx -b/2
		addy -a/2
		aa = b
		bb = a
	endif
	gosub "drawArrow"
	if iOpeningType = SASH_UP_SLIDING | iOpeningType = SASH_DOWN_SLIDING then del 5
endif

if iOpeningType = SASH_HOR_PIVOT then
	aa = b / 2
	bb = a
	addy b
	rotz -90
	iFirstLineType = opLineType3dIn
	iSecondLineType = opLineType3dOut
	gosub "drawLines"
	mulx -1
	addx -2*aa
	iFirstLineType = opLineType3dOut
	iSecondLineType = opLineType3dIn
	gosub "drawLines"
	del 4
endif

if iOpeningType = SASH_VER_PIVOT then
	aa = a/2
	bb = b
	iFirstLineType = opLineType3dOut
	iSecondLineType = opLineType3dIn
	gosub "drawLines"
	mulx -1
	addx -2*aa
	iFirstLineType = opLineType3dIn
	iSecondLineType = opLineType3dOut
	gosub "drawLines"
	del 2
endif

if iOpeningType = SASH_VER_PIVOT_M then
	aa = a/2
	bb = b
	iFirstLineType = opLineType3dIn
	iSecondLineType = opLineType3dOut
	gosub "drawLines"
	mulx -1
	addx -2*aa
	iFirstLineType = opLineType3dOut
	iSecondLineType = opLineType3dIn
	gosub "drawLines"
	del 2
endif



del delnum

! ==============================================================================
end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end !
! ==============================================================================


! ==============================================================================
! Opening lines triangle
! ==============================================================================
"drawLines":

	for ijk = 1 to 2
		if ijk = 1 then
			iLineType = iFirstLineType
		else
			iLineType = iSecondLineType
		endif

		x1 = aa - topWidthMod : y1 = 0 : x2 = 0 : y2 = bb/2 + sideHeightMod

		gosub "DrawSingleLine"

		x1 = aa : y1 = bb : x2 = 0 : y2 = bb/2 + sideHeightMod

		gosub "DrawSingleLine"

		addz frameThickness
	next ijk
	del 2
return


! ==============================================================================
! Arrow for sliding door
! ==============================================================================
"drawArrow":

	arrowHead = 0.07
	arrowLength = max (2*arrowHead, min(aa/2, 0.4))
	add aa/2, bb/2, 0

	for ijk = 1 to 2
		if ijk = 1 then
			iLineType = opLineType3dIn
		else
			iLineType = opLineType3dOut
		endif

		x1 = -arrowLength/2 : y1 = 0 : x2 = arrowLength/2 : y2 = 0

		gosub "DrawSingleLine"

		if not (bArrowWithoutEnd) then
			x1 = -arrowLength/2 : y1 = 0 : x2 = -arrowLength/2 : y2 = -arrowHead

			gosub "DrawSingleLine"
		endif

		addx arrowLength/2
		rotz 60

		x1 = 0 : y1 = 0 : x2 = 0 : y2 = arrowHead
		gosub "DrawSingleLine"

		del 1
		rotz 120

		x1 = 0 : y1 = 0 : x2 = 0 : y2 = arrowHead
		gosub "DrawSingleLine"

		del 2
		addz frameThickness
	next ijk

	del 3
return

! ==============================================================================
"DrawSingleLine":
! ==============================================================================
! x1, y1, x2, y2 - end point coordinates
! iLineType - line type
! ==============================================================================

	if iLineType = NO_LINE then return

	if iLineType = SOLID_LINE then
		lin_ x1, y1, 0, x2, y2, 0
	else
		if iLineType = DASHED_LINE then
			v1 = 0.08     ! 1 dash length
			s1 = 0.05     ! 1 space length
			sectLength = v1 + s1
		else
			if iLineType = DOTTED_LINE then
				v1 = 0.002    ! 1 dash length
				s1 = 0.03     ! 1 space length
				sectLength = v1 + s1
			else	!dash and dot
				v1 = 0.08
				v2 = 0.002
				s1 = 0.03
				sectLength = v1 + v2 + s1 * 2
			endif
		endif

		lineLength = sqr((x2 - x1)^2 + (y2 - y1)^2)
		nSegment = int((lineLength - v1) / sectLength)

		if abs(x1 - x2) < EPS then
			if y1 < y2 then
				lineAngle = 270
			else
				lineAngle = 90
			endif
		else
			if abs(y1 - y2) < EPS then
				if x1 < x2 then
					lineAngle = 180
				else
					lineAngle = 0
				endif
			else
				lineAngle = atn((y2-y1) / (x2-x1))
			endif
		endif

		if lineLength < v1 * 2 then
			lin_ x1, y1, 0, x2, y2, 0
		else
			add x1, y1, 0
			rotz 180+lineAngle

			actX = 0
			for i = 1 to nSegment
				lin_ actX, 0, 0, actX + v1, 0, 0
				if iLineType = DASHDOT_LINE then
					lin_ actX + v1 + s1, 0, 0, actX + v1 + s1 + v2, 0, 0
				endif
				actX = actX + sectLength
			next i

			restLength = lineLength - sectLength * nSegment - v1

			lin_ actX, 0, 0, actX + min(v1, restLength), 0, 0

			if iLineType = DASHDOT_LINE and v1 + s1 < restLength then
				lin_ actX + v1 + s1, 0, 0, actX + min(v1 + s1 + v2, restLength), 0, 0
			endif

			lin_ lineLength - v1, 0, 0, lineLength, 0, 0

			del 2
		endif

	endif
return

]]>
</Script_3D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_2D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
! ==============================================================================
! Opening Line Macro
! ------------------------------------------------------------------------------
! Input parameters:
!	A:					Width of the sash (length)
!	B:					Height of the sash (length)
!	gs_opline_style_m:		Representation standard type (integer)
!							[1:EU, 2: USA]
!	iOpeningType:		Opening type of the sash (integer)
!							[0: Fix, 1: Side hung, 2: Top hung, 3: side & top hung, 4: Pivot Hung]
!	opLineType2d:			Line type (line type)
! ==============================================================================

line_type opLineType2d

if iOpeningType = SASH_FIXED then		! Fix
	line2 0,0, A,B
endif

if iOpeningType = SASH_SIDE_HUNG then		! Side hung
	if gs_opline_style_m = 2 then
		mul2 -1, 1
		add2 -A, 0
	endif

	line2 0,0, A,B/2
	line2 0,B, A,B/2

	if gs_opline_style_m = 2 then del 2
endif

if iOpeningType = SASH_TOP_HUNG then		! Top hung
	if gs_opline_style_m = 2 then
		mul2 1,-1
		add2 0,-B
	endif

	line2 0,0, A/2,B
	line2 A,0, A/2,B

	if gs_opline_style_m = 2 then del 2
endif

if iOpeningType = SASH_TILT_TURN then		! Side & top hung
	if gs_opline_style_m = 2 then
		mul2 -1,-1
		add2 -A,-B
	endif

	line2 0,0, A,B/2
	line2 0,B, A,B/2
	line2 0,0, A/2,B
	line2 A,0, A/2,B

	if gs_opline_style_m = 2 then del 2
endif

if iOpeningType = SASH_HOR_PIVOT then		! Pivot Hung
	line2 A/2,0, A,B/2
	line2 A/2,0, 0,B/2
	line2 A/2,B, A,B/2
	line2 A/2,B, 0,B/2
endif
]]>
</Script_2D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_1D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
EPS = 0.00001

SASH_FIXED					= 1		! Fixed Glass
SASH_FIXED_SCREW			= 2		! Fixed Sash
SASH_SIDE_HUNG				= 3		! Side Hung
SASH_SIDE_HUNG_M			= 4		! Side Hung Mirrored
SASH_TILT_TURN				= 5		! Tilt and Turn
SASH_TILT_TURN_M			= 6		! Tilt and Turn Mirrored
SASH_BOTTOM_HUNG			= 7		! Bottom Hung
SASH_TOP_HUNG				= 8		! Top Hung
SASH_HOR_PIVOT				= 9		! Horizontal Pivot Hung
SASH_VER_PIVOT				= 10	! Vertical Pivotted
SASH_TILT_SLIDE				= 11	! Tilt and Slide
SASH_LEFT_SLIDING			= 12	! Left Sliding
SASH_RIGHT_SLIDING			= 13	! Right Sliding
SASH_UP_SLIDING				= 14	! Sliding Up
SASH_DOWN_SLIDING			= 15	! Sliding Down
SASH_VER_PIVOT_M			= 16	! Vertical Pivotted Mirrored`
SASH_FIXED_SLIDE			= 17	! Fixed Sliding Sash
SASH_DOUBLE_SIDE_HUNG		= 18	! Double Sash
SASH_DOUBLE_TILT_TURN		= 19	! Double Tilt and Turn
SASH_DOUBLE_TILT_TURN_M		= 20	! Double Tilt and Turn Mirrored
SASH_SLIDING_HOR			= 21	! Sliding
SASH_SLIDING_HOR_M			= 22	! Sliding Mirrored
SASH_DOUBLE_SLIDING_HOR		= 23	! Double Sliding
SASH_DOUBLE_SLIDING_HOR_M	= 24	! Double Sliding Mirrored
SASH_SLIDING_VER			= 25	! Single Hung
SASH_DOUBLE_SLIDING_VER		= 26	! Double Hung

SOLID_LINE		= 0
DASHED_LINE		= 1
DOTTED_LINE		= 2
DASHDOT_LINE	= 3
NO_LINE			= 4
]]>
</Script_1D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_PR SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_PR>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_UI SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_UI>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_VL SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_VL>

<Comment SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Comment>

<ParamSection SectVersion="22" SectionFlags="0" SubIdent="0">
	<ParamSectHeader>
		<AutoHotspots>false</AutoHotspots>
		<StatBits>
			<STBit_FixSize/>
		</StatBits>
		<WDLeftFrame>0</WDLeftFrame>
		<WDRightFrame>0</WDRightFrame>
		<WDTopFrame>0</WDTopFrame>
		<WDBotFrame>0</WDBotFrame>
		<LayFlags>65535</LayFlags>
		<WDMirrorThickness>0</WDMirrorThickness>
		<WDWallInset>0</WDWallInset>
	</ParamSectHeader>
	<Parameters>
		<Length Name="A">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Value>1</Value>
		</Length>
		<Length Name="B">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Value>1</Value>
		</Length>
		<Length Name="ZZYZX">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Value>1</Value>
		</Length>
		<Boolean Name="AC_show2DHotspotsIn3D">
			<Description><![CDATA["Show 2D Hotspots in 3D"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="ac_bottomlevel">
			<Description><![CDATA["Bottom Level"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="ac_toplevel">
			<Description><![CDATA["Top Level"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="frameThickness">
			<Description><![CDATA["Frame Thickness"]]></Description>
			<Value>0.07</Value>
		</Length>
		<Integer Name="iOpeningType">
			<Description><![CDATA["Operation Type"]]></Description>
			<Value>1</Value>
		</Integer>
		<Integer Name="opLineType3dIn">
			<Description><![CDATA["Line Type Inside (0=cont, 1=dashed, 2=dotted)"]]></Description>
			<Value>0</Value>
		</Integer>
		<Integer Name="opLineType3dOut">
			<Description><![CDATA["Line Type Outside (0=cont, 1=dashed, 2=dotted)"]]></Description>
			<Value>0</Value>
		</Integer>
		<Integer Name="gs_opline_style_m">
			<Description><![CDATA["Opline Style - 1=INT&DACH default towards handle, 2=towards hinges"]]></Description>
			<Value>1</Value>
		</Integer>
		<PenColor Name="gs_opLinePen">
			<Description><![CDATA["Opline Pen"]]></Description>
			<Value>0</Value>
		</PenColor>
		<LineType Name="opLineType2d">
			<Description><![CDATA["Line Type"]]></Description>
			<Value>1</Value>
		</LineType>
		<Boolean Name="bArrowWithoutEnd">
			<Description><![CDATA["No Endline to Arrows"]]></Description>
			<Value>0</Value>
		</Boolean>
		<Length Name="sideHeightMod">
			<Description><![CDATA["Side Height Modification (0 = Default, Half Height)"]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="topWidthMod">
			<Description><![CDATA["Side Height Modification (0 = Default, Half Height)"]]></Description>
			<Value>0</Value>
		</Length>
		<Boolean Name="bSkyLight">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Boolean>
	</Parameters>
</ParamSection>

<CalledMacros SectVersion="2" SectionFlags="0" SubIdent="0">
</CalledMacros>

<Copyright SectVersion="1" SectionFlags="0" SubIdent="0">
	<Author>GRAPHISOFT</Author>
	<License>
		<Type>CC BY-ND</Type>
		<Version>3.0</Version>
	</License>
</Copyright>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_FWM SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_FWM>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_BWM SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_BWM>

<Keywords SectVersion="1" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Keywords>

</Symbol>
