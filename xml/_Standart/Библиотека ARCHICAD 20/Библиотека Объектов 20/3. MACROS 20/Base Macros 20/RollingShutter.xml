<?xml version="1.0" encoding="UTF-8"?>
<Symbol IsArchivable="false" IsPlaceable="false" MainGUID="35D64E2E-3FD4-4081-89BE-5E980BBB1623" MigrationValue="Normal" Owner="1196638531" Signature="1196644685" Version="38">
<Ancestry SectVersion="1" SectionFlags="0" SubIdent="0" Template="false">
	<MainGUID>F938E33A-329D-4A36-BE3E-85E126820996</MainGUID>
	<MainGUID>103E8D2C-8230-42E1-9597-46F84CCE28C0</MainGUID>
	<MainGUID>B2970E4C-8680-4061-8670-2F4B638F3953</MainGUID>
</Ancestry>

<CalledMacros SectVersion="2" SectionFlags="0" SubIdent="0">
</CalledMacros>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_3D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
unID = 10200

LOD3D_SIMPLEPLANE = 1
LOD3D_DETAILEDPLANE = 2
LOD3D_SIMPLEPANEL = 3
LOD3D_DETAILEDPANEL = 4

dim shutRollpoly[]
shutRollpoly[1]	= 0
posShutRoll		= 0
lengthShutRoll	= 0

pen gs_sunShade_unCutLinesPen
sect_fill	gs_sunShade_cutFillType, gs_sunShade_cutFillBackPen,
			gs_sunShade_cutFillPen, gs_sunShade_cutLinesPen

addx -(rightCornerCorr - leftCornerCorr) / 2

if gs_shutRoll_iPlacement = SHUTROLL_ONFACADE | gs_shutRoll_iPlacement = SHUTROLL_TOWINDOW then
	if lod3D_sunShade = LOD3D_SIMPLEPANEL | lod3D_sunShade = LOD3D_DETAILEDPANEL then
		gosub "fixedOnWindowOrFacade_detailed"
	else
		gosub "fixedOnWindowOrFacade_simple"
	endif
else
	if lod3D_sunShade = LOD3D_SIMPLEPANEL | lod3D_sunShade = LOD3D_DETAILEDPANEL then
		gosub "fixedBehindFacade"
	else
		end		! Do not draw anything in simple!
	endif
endif

del 1

! -----------------------------------------------------------------------------
end posShutRoll,
	lengthShutRoll,
	shutRollpoly
! -----------------------------------------------------------------------------


! -----------------------------------------------------------------------------
"fixedOnWindowOrFacade_detailed":
! -----------------------------------------------------------------------------

	if gs_shutRoll_iPlacement = SHUTROLL_TOWINDOW then
		addz WIDO_SILL
		posShutRoll = WIDO_SILL
	else
		addz -gs_shutRoll_distFromWall
		posShutRoll = -gs_shutRoll_distFromWall
	endif

	addy heightWithOutBox
	roty 90
	addz -boxLength/2

! --- Box and rail ------------------------------------------------------------

	if gs_shutRoll_iPlacement = SHUTROLL_TOWINDOW & \
			heightWithoutBox + gs_shutRoll_boxHeight - b > EPS then

		material WALL_MAT_EDGE

		wallniche 5, 1, 2,
			0, 0, 1, boxLength,
			0,						-gs_shutRoll_distFromHead,		15,
			gs_shutRoll_boxWidth,	-gs_shutRoll_distFromHead,		15,
			gs_shutRoll_boxWidth,	 gs_shutRoll_boxHeight,			15,
			0,						 gs_shutRoll_boxHeight,			15,
			0,						-gs_shutRoll_distFromHead,		-1
	endif

	material gs_shutRoll_matBox

	if gs_shutRoll_iBoxType = SHUTROLL_BOX_RECT then
		prism_ 5, boxWallThk,
			0, -boxBottomOversize, 15,
			gs_shutRoll_boxWidth, -boxBottomOversize, 11,
			gs_shutRoll_boxWidth, gs_shutRoll_boxHeight - pitchHeight, 11,
			0, gs_shutRoll_boxHeight, 11,
			0, -boxBottomOversize, -1

		addz boxLength - boxWallThk

		prism_ 5, boxWallThk,
			0, -boxBottomOversize, 15,
			gs_shutRoll_boxWidth, -boxBottomOversize, 14,
			gs_shutRoll_boxWidth, gs_shutRoll_boxHeight - pitchHeight, 14,
			0, gs_shutRoll_boxHeight, 14,
			0, -boxBottomOversize, -1

		del 1

		addz boxWallThk

		ddd = boxWallThk / cos(gs_shutRoll_boxAngle)
		ddd2 = boxWallThk * tan(gs_shutRoll_boxAngle)

		prism_ 16, boxLength - boxWallThk * 2,
			0, -boxBottomOversize, 10,
			0, gs_shutRoll_boxHeight, 10,
			gs_shutRoll_boxWidth, gs_shutRoll_boxHeight - pitchHeight, 10,
			gs_shutRoll_boxWidth, -boxBottomOversize, 15,
			gs_shutRoll_boxWidth - boxWallThk, -boxBottomOversize, 15,
			gs_shutRoll_boxWidth - boxWallThk, 0, 15,
			railThk, 0, 15,
			railThk, -boxBottomOversize, 15,
			railThk - boxWallThk, -boxBottomOversize, 15,
			railThk - boxWallThk, boxWallThk, 15,
			gs_shutRoll_boxWidth - boxWallThk, boxWallThk, 15,
			gs_shutRoll_boxWidth - boxWallThk, gs_shutRoll_boxHeight - pitchHeight - ddd + ddd2, 15,
			boxWallThk, gs_shutRoll_boxHeight - ddd - ddd2, 15,
			boxWallThk, 0, 15,
			boxWallThk, -boxBottomOversize, 15,
			0, -boxBottomOversize, -1

		del 1

	else		!arched box

		prism_ 6, boxWallThk,
			0, 0, 15+64,
			railThk, 0, 11+64,
			gs_shutRoll_boxWidth - gs_shutRoll_boxHeight/2, 0, 11+64,
			gs_shutRoll_boxWidth - gs_shutRoll_boxHeight/2, gs_shutRoll_boxHeight, 1011+64,
			0, gs_shutRoll_boxHeight, 11+64,
			0, 0, -1

		addz boxLength - boxWallThk

		prism_ 6, boxWallThk,
			0, 0, 15+64,
			railThk, 0, 14+64,
			gs_shutRoll_boxWidth - gs_shutRoll_boxHeight/2, 0, 14+64,
			gs_shutRoll_boxWidth - gs_shutRoll_boxHeight/2, gs_shutRoll_boxHeight, 1014+64,
			0, gs_shutRoll_boxHeight, 14+64,
			0, 0, -1

		del 1

		addz boxWallThk

		prism_ 11, boxLength - 2 * boxWallThk,
			0, 0, 15,
			boxWallThk, 0, 15,
			boxWallThk, gs_shutRoll_boxHeight - boxWallThk, 15,
			gs_shutRoll_boxWidth - gs_shutRoll_boxHeight/2, gs_shutRoll_boxHeight - boxWallThk, 15,
			gs_shutRoll_boxWidth - gs_shutRoll_boxHeight/2, boxWallThk, 1015,
			railThk, boxWallThk, 15,
			railThk, 0, 10,
			gs_shutRoll_boxWidth - gs_shutRoll_boxHeight/2, 0, 10,
			gs_shutRoll_boxWidth - gs_shutRoll_boxHeight/2, gs_shutRoll_boxHeight, 1010,
			0, gs_shutRoll_boxHeight, 10,
			0, 0, -1

		del 1



	endif

	if gs_shutRoll_iPlacement <> SHUTROLL_ONFACADE then
		lengthShutRoll = boxLength
		shutRollpoly[1] = -gs_shutRoll_boxWidth
		shutRollpoly[2] = heightWithOutBox - boxBottomOversize
		shutRollpoly[3] = -gs_shutRoll_boxWidth
		shutRollpoly[4] = heightWithOutBox + gs_shutRoll_boxHeight
		shutRollpoly[5] = 0
		shutRollpoly[6] = heightWithOutBox + gs_shutRoll_boxHeight
		shutRollpoly[7] = 0
		shutRollpoly[8] = 0
		shutRollpoly[9] = -railThk
		shutRollpoly[10] = 0
		shutRollpoly[11] = -railThk
		shutRollpoly[12] = heightWithOutBox - boxBottomOversize
		shutRollpoly[13] = -gs_shutRoll_boxWidth
		shutRollpoly[14] = heightWithOutBox - boxBottomOversize
	endif

	if gs_shutRoll_iPlacement = SHUTROLL_ONFACADE & wallBoxDist > EPS then
		for i = 1 to 2
			if wallBoxDist > 3 * boxWallThk & gs_shutRoll_boxHeight > 0.025 then
				prism_ 7, 0.025,
					 0,								gs_shutRoll_boxHeight,							15,
					-wallBoxDist,					gs_shutRoll_boxHeight,							15,
					-wallBoxDist,					gs_shutRoll_boxHeight - 2 * boxWallThk - 0.025,	15,
					-wallBoxDist + 2 * boxWallThk,	gs_shutRoll_boxHeight - 2 * boxWallThk - 0.025,	15,
					-wallBoxDist + 2 * boxWallThk,	gs_shutRoll_boxHeight - 2 * boxWallThk,			15,
					 0,								gs_shutRoll_boxHeight - 2 * boxWallThk,			15,
					 0,								gs_shutRoll_boxHeight,							-1
			else
				prism_ 5, 0.025,
					 0,				gs_shutRoll_boxHeight,					15,
					-wallBoxDist,	gs_shutRoll_boxHeight,					15,
					-wallBoxDist,	gs_shutRoll_boxHeight - 2 * boxWallThk,	15,
					 0,				gs_shutRoll_boxHeight - 2 * boxWallThk,	15,
					 0,				gs_shutRoll_boxHeight,					-1

			endif

			if gs_shutRoll_distFromWall > EPS then
				addy -heightWithoutBox - gs_shutRoll_boxHeight
				prism_ 5, 0.025,
					 0,							gs_shutRoll_boxHeight,					15,
					-gs_shutRoll_distFromWall,	gs_shutRoll_boxHeight,					15,
					-gs_shutRoll_distFromWall,	gs_shutRoll_boxHeight + 2 * boxWallThk,	15,
					 0,							gs_shutRoll_boxHeight + 2 * boxWallThk,	15,
					 0,							gs_shutRoll_boxHeight,					-1

				del 1
			endif

			addz boxLength - 0.025
		next i
		del 2
	endif

! --- Cylind ------------------------------------------------------------------

	if cylindRadius - segmentThk > EPS then
		addz boxWallThk
		addy cylindAxisHeight
		addx gs_shutRoll_boxWidth/2

		cylind boxLength - 2 * boxWallThk, cylindRadius - segmentThk

		del 3
	endif

	del 3

	gosub "Rails"


	gosub "Segments_hotspot"

	del 1

return


! -----------------------------------------------------------------------------
"fixedOnWindowOrFacade_simple":
! -----------------------------------------------------------------------------

	if gs_shutRoll_iPlacement = SHUTROLL_TOWINDOW & gs_shutRoll_boxWidth < WIDO_SILL - EPS & heightWithoutBox > B - EPS then return

	add -boxLength / 2, heightWithoutBox, -EPS
	material gs_shutRoll_matBox

	if gs_shutRoll_iPlacement = SHUTROLL_TOWINDOW & gs_shutRoll_boxWidth < WIDO_SILL - EPS then
		boxHeight = min(gs_shutRoll_boxHeight, B - heightWithoutBox)
	else
		boxHeight = gs_shutRoll_boxHeight
	endif

	poly_ 4,
		0,			0,			1,
		boxLength,	0,			1,
		boxLength,	boxHeight,	1,
		0,			boxHeight,	1

	del 1
return


! -----------------------------------------------------------------------------
"fixedBehindFacade":
! -----------------------------------------------------------------------------

	material gs_shutRoll_matBox

	addy heightWithoutBox
	addz gs_shutRoll_railDepth
	posShutRoll = gs_shutRoll_railDepth

	roty 90
	addz -boxLength / 2 - gs_shutRoll_boxOffsetLeft

	wallniche 5, 1, 2,
			0, 0, 1, boxLength + gs_shutRoll_boxOffsetLeft + gs_shutRoll_boxOffsetRight,
			0,						0,						15,
			-gs_shutRoll_boxWidth,	0,						15,
			-gs_shutRoll_boxWidth,	gs_shutRoll_boxHeight,	15,
			0,						gs_shutRoll_boxHeight,	15,
			0,						0,						-1

	if gs_shutRoll_cutWallBehind then
		sect_fill	gs_sunShade_insFillType, gs_sunShade_insFillBackPen,
					gs_sunShade_insFillPen, gs_sunShade_cutLinesPen

		cutBackDist = WALL_THICKNESS - gs_shutRoll_railDepth - gs_shutRoll_boxWidth

		if cutBackDist > EPS then
			if (abs(WALL_INCL) > EPS) then
				wallIsLeft		= (SYMB_ROTANGLE > EPS) exor WIDO_REVEAL_SIDE
				bFactor = SYMB_MIRRORED exor WIDO_REVEAL_SIDE exor wallIsLeft
				incFactor = not(bFactor) - bFactor
				incX = incFactor * tan(WALL_INCL)

				inclDiff =  -(boxLength / 2) * incX
			else
				inclDiff =  0
			endif

			if WIDO_REVEAL_SIDE then
				matSide = WALL_MAT_B
			else
				matSide = WALL_MAT_A
			endif
			if AC_HoleSideMaterial then
				matEdge = matSide
			else
				matEdge = WALL_MAT_EDGE
			endif

			rotx -90

			material matEdge
			wallniche 5, 1, 2+64+128,
					0, 0, 1, gs_shutRoll_boxHeight,
					-gs_shutRoll_boxWidth,								 0,			2+8+16+64,
					-gs_shutRoll_boxWidth,								-(boxLength + gs_shutRoll_boxOffsetLeft + gs_shutRoll_boxOffsetRight),	2+8+16+64,
					-gs_shutRoll_boxWidth-cutBackDist-0.1 + inclDiff,	-(boxLength + gs_shutRoll_boxOffsetLeft + gs_shutRoll_boxOffsetRight),	2+8+16+64,
					-gs_shutRoll_boxWidth-cutBackDist-0.1 - inclDiff,	 0,			2+8+16+64,
					-gs_shutRoll_boxWidth,								 0,			-1

			cprism_ matEdge, matEdge, matSide,
					5, gs_shutRoll_boxHeight,
					-gs_shutRoll_boxWidth,							 0,			15+64,
					-gs_shutRoll_boxWidth,							-(boxLength + gs_shutRoll_boxOffsetLeft + gs_shutRoll_boxOffsetRight),	15+64,
					-gs_shutRoll_boxWidth-cutBackDist + inclDiff,	-(boxLength + gs_shutRoll_boxOffsetLeft + gs_shutRoll_boxOffsetRight),	9,
					-gs_shutRoll_boxWidth-cutBackDist - inclDiff,	 0,			13,
					-gs_shutRoll_boxWidth,							 0,			-1

			del 1
		endif
	endif

	sect_fill	gs_sunShade_cutFillType, gs_sunShade_cutFillBackPen,
				gs_sunShade_cutFillPen, gs_sunShade_cutLinesPen

	material gs_shutRoll_matBox

	if gs_shutRoll_distFromHead > EPS then
		wallniche 5, 1, 2,
				0, 0, 1, boxLength + gs_shutRoll_boxOffsetLeft + gs_shutRoll_boxOffsetRight,
				 0,			 0,								15,
				-railThk,	 0,								15,
				-railThk,	-gs_shutRoll_distFromHead,	15,
				 0,			-gs_shutRoll_distFromHead,	15,
				 0,			 0,								-1
	endif

	prism_ 4, boxWallThk,
		0, 0, 15,
		-gs_shutRoll_boxWidth, 0, 15,
		-gs_shutRoll_boxWidth, gs_shutRoll_boxHeight, 15,
		0, gs_shutRoll_boxHeight, 15

	addz boxLength + gs_shutRoll_boxOffsetLeft + gs_shutRoll_boxOffsetRight - boxWallThk

	prism_ 4, boxWallThk,
		0, 0, 15,
		-gs_shutRoll_boxWidth, 0, 15,
		-gs_shutRoll_boxWidth, gs_shutRoll_boxHeight, 15,
		0, gs_shutRoll_boxHeight, 15

	del 1

	addz boxWallThk

	prism_ 11, boxLength + gs_shutRoll_boxOffsetLeft + gs_shutRoll_boxOffsetRight - 2 * boxWallThk,
		0, 0, 15,
		0, gs_shutRoll_boxHeight, 15,
		-gs_shutRoll_boxWidth, gs_shutRoll_boxHeight, 15,
		-gs_shutRoll_boxWidth, 0, 15,
		-railThk + boxWallThk, 0, 15,
		-railThk + boxWallThk, boxWallThk, 15,
		-gs_shutRoll_boxWidth + boxWallThk, boxWallThk, 15,
		-gs_shutRoll_boxWidth + boxWallThk, gs_shutRoll_boxHeight - boxWallThk, 15,
		-boxWallThk, gs_shutRoll_boxHeight - boxWallThk, 15,
		-boxWallThk, 0, 15,
		0, 0, -1


	del 1

	lengthShutRoll = boxLength + gs_shutRoll_boxOffsetLeft + gs_shutRoll_boxOffsetRight
	shutRollpoly[1] = gs_shutRoll_boxWidth
	shutRollpoly[2] = heightWithOutBox
	shutRollpoly[3] = gs_shutRoll_boxWidth
	shutRollpoly[4] = heightWithOutBox + gs_shutRoll_boxHeight
	shutRollpoly[5] = 0
	shutRollpoly[6] = heightWithOutBox + gs_shutRoll_boxHeight
	shutRollpoly[7] = 0
	shutRollpoly[8] = 0
	shutRollpoly[9] = railThk
	shutRollpoly[10] = 0
	shutRollpoly[11] = railThk
	shutRollpoly[12] = heightWithOutBox
	shutRollpoly[13] = gs_shutRoll_boxWidth
	shutRollpoly[14] = heightWithOutBox


! --- Cylind ------------------------------------------------------------------

	if cylindRadius - segmentThk > EPS then
		addz boxWallThk * 2
		addy cylindAxisHeight
		addx -gs_shutRoll_boxWidth/2

		cylind boxLength + gs_shutRoll_boxOffsetLeft + gs_shutRoll_boxOffsetRight - 4 * boxWallThk, cylindRadius - segmentThk

		del 3
	endif

	del 4

	addz railThk + gs_shutRoll_railDepth

	gosub "Rails"

	gosub "Segments_hotspot"
	del 1

return


! -----------------------------------------------------------------------------
"Rails":
! -----------------------------------------------------------------------------

	material gs_shutRoll_matRail

	rotx -90
	for i = 1 to 2
		addx boxLength/2
		cprism_{2} gs_shutRoll_matRail, gs_shutRoll_matRail, gs_shutRoll_matRail,
			9, heightWithOutBox - boxBottomOversize,
			0, 0, 0, 15, gs_shutRoll_matRail,
			-railWidth, 0, 0, 15, gs_shutRoll_matRail,
			-railWidth, boxWallThk, 0, 15, gs_shutRoll_matRail,
			-boxWallThk, boxWallThk, 0, 15, gs_shutRoll_matRail,
			-boxWallThk, railThk - boxWallThk, 0, 15, gs_shutRoll_matRail,
			-railThk, railThk - boxWallThk, 0, 15, gs_shutRoll_matRail,
			-railWidth, railThk, 0, 15, gs_shutRoll_matRail,
			0, railThk, 0, 15, gs_shutRoll_matRail,
			0, 0, 0, -1, gs_shutRoll_matRail

		del 1

		mulx -1
	next i
	del 3

return


! -----------------------------------------------------------------------------
"Segments_hotspot":
! -----------------------------------------------------------------------------

	material gs_shutRoll_matSegm

	addy heightWithoutBox
	hotspot 0, 0,							-railThk/2, unID, gs_shutter_closedHeight, 1+128,	gs_shutter_opHeight : unID = unID + 1
	hotspot 0, -gs_shutter_closedHeight,	-railThk/2, unID, gs_shutter_closedHeight, 2,		gs_shutter_opHeight : unID = unID + 1
	hotspot 0, 1,							-railThk/2, unID, gs_shutter_closedHeight, 3,		gs_shutter_opHeight : unID = unID + 1
	del 1

	addy heightWithOutBox
	addy cylindAxisHeight
	rotx 90
	cutplane 1, 1, 0, 1
	del 2

	roty 90
	addz -boxLength/2 + boxWallThk


	hhhh = heightWithoutBox + cylindAxisHeight
	n1 = int((hhhh - (heightWithoutBox - gs_shutter_closedHeight)) / gs_shutRoll_segmentWidth) + 2
	n2 = ((hhhh - (heightWithoutBox - gs_shutter_closedHeight)) / gs_shutRoll_segmentWidth) - n1


	rotz -90
	addx -cylindAxisHeight + n2*gs_shutRoll_segmentWidth	!!! + gs_shutRolling_openLength / heightWithoutBox*boxWallThk         ! correct opening
	addy railThk/2

	for i = 1 to n1

		prism_ 9, boxLength - boxWallThk * 2,
			0,									-segmentThk/2,					15,
			gs_shutRoll_segmentWidth/3,		-segmentThk/2 + segmentThk/3,	79,
			2 * gs_shutRoll_segmentWidth/3,	-segmentThk/2 + segmentThk/3,	79,
			gs_shutRoll_segmentWidth,		-segmentThk/2,					15,
			gs_shutRoll_segmentWidth,		 segmentThk/2,					15,
			2 * gs_shutRoll_segmentWidth/3,	 segmentThk/2 + segmentThk/3,	79,
			gs_shutRoll_segmentWidth/3,		 segmentThk/2 + segmentThk/3,	79,
			0,									 segmentThk/2,					15,
			0,									-segmentThk/2,					-1

		addx gs_shutRoll_segmentWidth

	next i

	cutend

return

]]>
</Script_3D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_2D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
line_type gs_sunShade_lineType
pen gs_sunShade_unCutLinesPen

dummyPen = 1

add2 -(rightCornerCorr - leftCornerCorr) / 2, 0

if gs_shutRoll_iPlacement = SHUTROLL_BEHIND then
	poly2_b 5, 1+4, dummyPen, dummyPen,
			-boxLength/2 - gs_shutRoll_boxOffsetLeft,	gs_shutRoll_railDepth,							1,
			-boxLength/2 - gs_shutRoll_boxOffsetLeft,	gs_shutRoll_railDepth + gs_shutRoll_boxWidth,	1,
			 boxLength/2 + gs_shutRoll_boxOffsetRight,	gs_shutRoll_railDepth + gs_shutRoll_boxWidth,	1,
			 boxLength/2 + gs_shutRoll_boxOffsetRight,	gs_shutRoll_railDepth,							1,
			-boxLength/2 - gs_shutRoll_boxOffsetLeft,	gs_shutRoll_railDepth,							-1
else
	boxWidth = gs_shutRoll_boxWidth

	if  gs_shutRoll_iPlacement = SHUTROLL_ONFACADE then
		add2 0, -wallBoxDist
	else
		add2 0, WIDO_SILL * (WIDO_SILL > (gs_shutRoll_boxWidth - EPS))
	endif

	if gs_shutRoll_iPlacement = SHUTROLL_ONFACADE & gs_shutRoll_distFromWall > EPS then
		inLineStat = 1
	else
		inLineStat = 0
	endif

	sideLineStat = 1
	if gs_shutRoll_iPlacement = SHUTROLL_TOWINDOW then
		if  WIDO_SILL < (gs_shutRoll_boxWidth - EPS) then
			boxWidth = gs_shutRoll_boxWidth - WIDO_SILL
		else
			sideLineStat = 0
		endif
	endif

	poly2_b 5, 1+4, dummyPen, dummyPen,
			-boxLength/2,	 0,				sideLineStat,
			-boxLength/2,	-boxWidth,		1,
			 boxLength/2,	-boxWidth,		sideLineStat,
			 boxLength/2,	 0,				inLineStat,
			-boxLength/2,	 0,				-1

	del 1
endif

del 1

if bDrawShutterRailon2D & lod2D_sunShade = 2 then
	if gs_shutRoll_iPlacement = SHUTROLL_TOWINDOW | gs_shutRoll_iPlacement = SHUTROLL_BEHIND then
		posShutRoll = WIDO_SILL
	else
		posShutRoll = -gs_shutRoll_distFromWall
	endif

	for i = 1 to 2
		add2 boxLength/2, posShutRoll-railThk

		poly2_b  9, 1+4, dummyPen, dummyPen,
			0, 0, 1,
			-railWidth, 0, 1,
			-railWidth, boxWallThk, 1,
			-boxWallThk, boxWallThk, 1,
			-boxWallThk, railThk - boxWallThk, 1,
			-railThk, railThk - boxWallThk, 1,
			-railWidth, railThk, 1,
			0, railThk, 1,
			0, 0, -1

		del 1

		mul2 -1, 1
	next i
endif

]]>
</Script_2D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_1D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
EPS = 0.0001

SHUTROLL_ONFACADE = 1
SHUTROLL_TOWINDOW = 2
SHUTROLL_BEHIND = 3

gs_shutRoll_iPlacement = max (1, min(vardim1(stShutRollPlacement), gs_shutRoll_iPlacement))

SHUTROLL_BOX_RECT = 1
SHUTROLL_BOX_ARCHED = 2

gs_shutRoll_iBoxType = max (1, min(vardim1(stShutRollBoxType), gs_shutRoll_iBoxType))

SHUTROLL_BOXSIZE_EXT	= 1
SHUTROLL_BOXSIZE_INT	= 2

gs_shutRoll_iBoxDefaultSize = max (1, min(vardim1(stShutRollBoxDefaultSize), gs_shutRoll_iBoxDefaultSize))

SHUTROLL_ONCASING = 1
SHUTROLL_ONWALL = 2

gs_shutRoll_iRailPos = max (1, min(vardim1(stShutRollRailPos), gs_shutRoll_iRailPos))

! -----------------------------------------------------------------------------
! Geometric variables & fixed variables for rolling shutter
! -----------------------------------------------------------------------------

boxLength			= a				! Box width
boxWallThk			= 0.003			! Depth of box wall

segmentThk			= 0.005			! Depth of one piece of shutter
railWidth			= 0.025   		! Width of side rail
railThk				= 0.025			! Distance between rail sides

pitchHeight 		= 0
if gs_shutRoll_iPlacement = SHUTROLL_ONFACADE & gs_shutRoll_iBoxType = SHUTROLL_BOX_RECT then
	pitchHeight = gs_shutRoll_boxWidth * tan (gs_shutRoll_boxAngle)
endif

boxBottomOversize	= 0.02			! Bottom oversize of box wall
if gs_shutRoll_iBoxType = SHUTROLL_BOX_ARCHED then boxBottomOversize = 0
if gs_shutRoll_iPlacement = SHUTROLL_BEHIND then boxBottomOversize = 0

cylindAxisHeight	= (gs_shutRoll_boxHeight - pitchHeight) / 2    ! Height of cylind axis
cylindRadius 		= min(cylindAxisHeight - boxWallThk - 0.01, (gs_shutRoll_boxWidth - boxWallThk - railThk/2 - 0.01) / 2)  ! Radius of cylind

heightWithoutBox = b + gs_shutRoll_distFromHead

wallBoxDist = gs_casingThkOnFacade + gs_shutRoll_distFromWall

rightCornerCorr = 0
leftCornerCorr = 0
if gs_shutRoll_iPlacement = SHUTROLL_ONFACADE then		! Fixed on Facade
	boxLength = boxLength + railWidth * 2

	if bLeftCornerFunction then
		if abs(leftCornerAngle - 180) < EPS then
			leftCornerCorr = 0
		else
			if leftCornerAngle < 180 then
				leftCornerCorr = railWidth
			else
				leftCornerCorr = railWidth - ( gs_shutRoll_boxWidth + wallBoxDist) * tan(90 - leftCornerAngle/2)
			endif
		endif
	endif
	if bRightCornerFunction then
		if abs(rightCornerAngle - 180) < EPS then
			rightCornerCorr = 0
		else
			if rightCornerAngle < 180 then
				rightCornerCorr = railWidth
			else
				rightCornerCorr =railWidth -  ( gs_shutRoll_boxWidth + wallBoxDist) * tan(90 - rightCornerAngle/2)
			endif
		endif
	endif

	gs_shutRoll_railDepth = 0
endif

if gs_shutRoll_iPlacement = SHUTROLL_TOWINDOW then		! Fixed to Window
	gs_shutRoll_boxAngle = 0
	gs_shutRoll_railDepth = 0

	if bRightCornerFunction then
		if abs(rightCornerAngle - 180) < EPS then
			rightCornerCorr = 0
		else
			if rightCornerAngle < 180 then
				rightCornerCorr = WIDO_SILL * tan(90 - rightCornerAngle/2)
			else
				rightCornerCorr = (WIDO_SILL - gs_shutRoll_boxWidth) * tan(90 - rightCornerAngle/2)
			endif
		endif
	endif
	if bLeftCornerFunction then
		if abs(leftCornerAngle - 180) < EPS then
			leftCornerCorr = 0
		else
			if leftCornerAngle < 180 then
				leftCornerCorr = WIDO_SILL * tan(90 - leftCornerAngle/2)
			else
				leftCornerCorr = (WIDO_SILL - gs_shutRoll_boxWidth) * tan(90 - leftCornerAngle/2)
			endif
		endif
	endif
endif

if gs_shutRoll_iPlacement = SHUTROLL_BEHIND then		! Fixed behind Facade
	gs_shutRoll_boxAngle = 0

	if bRightCornerFunction then
		if abs(rightCornerAngle - 180) < EPS then
			rightCornerCorr = 0
		else
			if rightCornerAngle < 180 then
				rightCornerCorr = (gs_shutRoll_railDepth + gs_shutRoll_boxWidth) * tan(90 - rightCornerAngle/2)
			else
				rightCornerCorr = gs_shutRoll_railDepth * tan(90 - rightCornerAngle/2)
			endif
		endif
	endif
	if bLeftCornerFunction then
		if abs(leftCornerAngle - 180) < EPS then
			leftCornerCorr = 0
		else
			if leftCornerAngle < 180 then
				leftCornerCorr = (gs_shutRoll_railDepth + gs_shutRoll_boxWidth) * tan(90 - leftCornerAngle/2)
			else
				leftCornerCorr = gs_shutRoll_railDepth * tan(90 - leftCornerAngle/2)
			endif
		endif
	endif
endif

boxLength = boxLength - rightCornerCorr - leftCornerCorr

]]>
</Script_1D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_PR SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_PR>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_UI SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_UI>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_VL SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
! -----------------------------------------------------------------------------
! Placement
! -----------------------------------------------------------------------------

dim enabledRollingConst[]
dim iEnabledRollingconst[]
nEnabledTypes = 0

for i = 1 to vardim1(stShutRollPlacement)
	if bittest (gs_shutRoll_placementEnable, i-1) then
		nEnabledTypes = nEnabledTypes + 1
		enabledRollingConst[nEnabledTypes] = stShutRollPlacement[i]
		iEnabledRollingconst[nEnabledTypes] = i
	endif
next i

values "gs_shutRoll_placement" enabledRollingConst
values "gs_shutRoll_iPlacement" iEnabledRollingconst

if GLOB_MODPAR_NAME = "gs_shutRoll_placement" then
	gs_shutRoll_iPlacement = SHUTROLL_ONFACADE
	if gs_shutRoll_placement = stShutRollPlacement[2] then gs_shutRoll_iPlacement = SHUTROLL_TOWINDOW
	if gs_shutRoll_placement = stShutRollPlacement[3] then gs_shutRoll_iPlacement = SHUTROLL_BEHIND
	parameters gs_shutRoll_iPlacement = gs_shutRoll_iPlacement
else
	parameters gs_shutRoll_placement = stShutRollPlacement[gs_shutRoll_iPlacement]
endif

! -----------------------------------------------------------------------------
! Defaults by Placement
! -----------------------------------------------------------------------------

if GLOB_MODPAR_NAME = "gs_shutRoll_placement" | GLOB_MODPAR_NAME = "gs_shutRoll_iPlacement" then
	if gs_shutRoll_iPlacement = SHUTROLL_ONFACADE then
		gs_shutRoll_distFromHead = 0
		parameters gs_shutRoll_distFromHead = gs_shutRoll_distFromHead
	endif
	if gs_shutRoll_iPlacement = SHUTROLL_TOWINDOW then
		gs_shutRoll_distFromHead = -gs_shutRoll_boxHeight
		parameters gs_shutRoll_distFromHead = gs_shutRoll_distFromHead
	endif
	if gs_shutRoll_iPlacement = SHUTROLL_BEHIND then
		gs_shutRoll_distFromHead = gs_reveal_top
		parameters gs_shutRoll_distFromHead = gs_shutRoll_distFromHead

		if WIDO_SILL < railWidth then
			gs_shutRoll_railDepth =  min(WALL_THICKNESS - gs_shutRoll_boxWidth, WIDO_SILL + WIDO_FRAME_THICKNESS * 2)
		else
			gs_shutRoll_railDepth = min(WALL_THICKNESS - gs_shutRoll_boxWidth, WIDO_SILL - railWidth)
		endif
		parameters gs_shutRoll_railDepth = gs_shutRoll_railDepth
	endif
endif


! -----------------------------------------------------------------------------
! Box parameters
! -----------------------------------------------------------------------------

if gs_shutRoll_iPlacement = SHUTROLL_ONFACADE | \
	gs_shutRoll_iPlacement = SHUTROLL_TOWINDOW then

	values "gs_shutRoll_boxType" stShutRollBoxType
	values "gs_shutRoll_iBoxType" SHUTROLL_BOX_RECT, SHUTROLL_BOX_ARCHED

	hideparameter	"gs_shutRoll_boxOffsetLeft",
					"gs_shutRoll_boxOffsetRight",
					"gs_shutRoll_bIncludeBoxHeight"
	lock	"gs_shutRoll_boxOffsetLeft",
			"gs_shutRoll_boxOffsetRight",
			"gs_shutRoll_bIncludeBoxHeight"			
else
	values "gs_shutRoll_boxType" stShutRollBoxType[1]
	values "gs_shutRoll_iBoxType" SHUTROLL_BOX_RECT
	gs_shutRoll_iBoxType = SHUTROLL_BOX_RECT
	gs_shutRoll_boxType = stShutRollBoxType[1]

	hideparameter "gs_shutRoll_boxType"
	lock "gs_shutRoll_boxType", "gs_shutRoll_iBoxType"

	values "gs_shutRoll_boxOffsetLeft" range [0,)
	values "gs_shutRoll_boxOffsetRight" range [0,)
endif

if GLOB_MODPAR_NAME = "gs_shutRoll_boxType" then
	gs_shutRoll_iBoxType = 1
	if gs_shutRoll_boxType = stShutRollBoxType[2] then gs_shutRoll_iBoxType = 2
	parameters gs_shutRoll_iBoxType = gs_shutRoll_iBoxType
else
	gs_shutRoll_boxType = stShutRollBoxType[gs_shutRoll_iBoxType]
	parameters gs_shutRoll_boxType = gs_shutRoll_boxType
endif

if gs_shutRoll_iBoxType = SHUTROLL_BOX_ARCHED then
	values "gs_shutRoll_boxWidth" range [gs_shutRoll_boxHeight/2 + railThk, )
	values "gs_shutRoll_boxHeight" range (0, 2 * (gs_shutRoll_boxWidth - railThk))
else
	values "gs_shutRoll_boxHeight" range (0, )
	values "gs_shutRoll_boxWidth" range (0, )
endif
values "gs_shutRoll_segmentWidth" range[0.01,)

values "gs_shutter_opHeight" range [0, sunShadeHeight3D + gs_shutRoll_distFromHead]
values "gs_shutter_closedHeight" range [0, sunShadeHeight3D + gs_shutRoll_distFromHead]

values "gs_shutRoll_boxDefaultSize" stShutRollBoxDefaultSize
values "gs_shutRoll_iBoxDefaultSize" SHUTROLL_BOXSIZE_EXT, SHUTROLL_BOXSIZE_INT

if GLOB_MODPAR_NAME = "gs_shutRoll_boxDefaultSize" then
	gs_shutRoll_iBoxDefaultSize =  SHUTROLL_BOXSIZE_EXT
	if gs_shutRoll_boxDefaultSize = stShutRollBoxDefaultSize[2] then gs_shutRoll_iBoxDefaultSize =  SHUTROLL_BOXSIZE_INT
	parameters gs_shutRoll_iBoxDefaultSize = gs_shutRoll_iBoxDefaultSize
else
	gs_shutRoll_boxDefaultSize = stShutRollBoxDefaultSize[1]
	if gs_shutRoll_iBoxDefaultSize =  SHUTROLL_BOXSIZE_INT then gs_shutRoll_boxDefaultSize = stShutRollBoxDefaultSize[2]
	parameters gs_shutRoll_boxDefaultSize = gs_shutRoll_boxDefaultSize
endif

! -----------------------------------------------------------------------------
! Box Position Control
! -----------------------------------------------------------------------------

if gs_shutRoll_iPlacement = SHUTROLL_ONFACADE then
	values "gs_shutRoll_distFromWall" range [0,)
endif

! -----------------------------------------------------------------------------
! Control opening height
! -----------------------------------------------------------------------------

if GLOB_MODPAR_NAME = "gs_shutter_opHeight" then
	gs_shutter_closedHeight = sunShadeHeight3D + gs_shutRoll_distFromHead - gs_shutter_opHeight
	parameters gs_shutter_closedHeight = gs_shutter_closedHeight
else
	gs_shutter_opHeight = max (0, sunShadeHeight3D + gs_shutRoll_distFromHead - gs_shutter_closedHeight)
	parameters gs_shutter_opHeight = gs_shutter_opHeight
endif

! -----------------------------------------------------------------------------
! Rail Position
! -----------------------------------------------------------------------------

values "gs_shutRoll_railPos" stShutRollRailPos
values "gs_shutRoll_iRailPos" SHUTROLL_ONCASING, SHUTROLL_ONWALL

if GLOB_MODPAR_NAME = "gs_shutRoll_railPos" then
	gs_shutRoll_iRailPos =  SHUTROLL_ONCASING
	if gs_shutRoll_railPos = stShutRollRailPos[2] then gs_shutRoll_iRailPos =  SHUTROLL_ONWALL
	parameters gs_shutRoll_iRailPos = gs_shutRoll_iRailPos
else
	gs_shutRoll_railPos = stShutRollRailPos[1]
	if gs_shutRoll_iRailPos =  SHUTROLL_ONWALL then gs_shutRoll_railPos = stShutRollRailPos[2]
	parameters gs_shutRoll_railPos = gs_shutRoll_railPos
endif

! -----------------------------------------------------------------------------
! Hiding unused parameters
! -----------------------------------------------------------------------------

if gs_shutRoll_iPlacement = SHUTROLL_ONFACADE then
	lock "gs_shutRoll_cutWallBehind", "gs_shutRoll_railPos", "gs_shutRoll_iRailPos", "gs_shutRoll_showCasingBehind"
	hideparameter "gs_shutRoll_cutWallBehind", "gs_shutRoll_railPos", "gs_shutRoll_iRailPos", "gs_shutRoll_showCasingBehind"
else
	lock "gs_shutRoll_boxAngle",
			"gs_shutRoll_distFromWall"
	hideparameter "gs_shutRoll_boxAngle",
			"gs_shutRoll_distFromWall"
endif

if gs_shutRoll_iPlacement <> SHUTROLL_BEHIND then
	lock "gs_shutRoll_railDepth"
	hideparameter "gs_shutRoll_railDepth"
endif

if not((gs_shutRoll_iPlacement = SHUTROLL_BEHIND) & gs_shutRoll_cutWallBehind) then
	lock	"gs_sunShade_insFillType",
			"gs_sunShade_insFillPen",
			"gs_sunShade_insFillBackPen"

	hideparameter	"gs_sunShade_insFillType",
					"gs_sunShade_insFillPen",
					"gs_sunShade_insFillBackPen"
endif
]]>
</Script_VL>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Comment SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Comment>

<ParamSection SectVersion="26" SectionFlags="0" SubIdent="0">
	<ParamSectHeader>
		<Version>26</Version>
		<AutoHotspots>false</AutoHotspots>
		<StatBits>
			<STBit_FixSize/>
		</StatBits>
		<WDLeftFrame>0</WDLeftFrame>
		<WDRightFrame>0</WDRightFrame>
		<WDTopFrame>0</WDTopFrame>
		<WDBotFrame>0</WDBotFrame>
		<LayFlags>65535</LayFlags>
		<WDMirrorThickness>0</WDMirrorThickness>
		<WDWallInset>0</WDWallInset>
		<SymbolColor>0</SymbolColor>
	</ParamSectHeader>
	<Parameters>
		<Length Name="A">
			<Description><![CDATA["Dimension 1"]]></Description>
			<Fix/>
			<Value>1</Value>
		</Length>
		<Length Name="B">
			<Description><![CDATA["Dimension 2"]]></Description>
			<Fix/>
			<Value>1</Value>
		</Length>
		<Length Name="ZZYZX">
			<Description><![CDATA["Height"]]></Description>
			<Fix/>
			<Value>1</Value>
		</Length>
		<Boolean Name="AC_show2DHotspotsIn3D">
			<Description><![CDATA["Show 2D Hotspots in 3D"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="ac_bottomlevel">
			<Description><![CDATA["Bottom Level"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="ac_toplevel">
			<Description><![CDATA["Top Level"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Boolean Name="AC_HoleSideMaterial">
			<Description><![CDATA["Hole has Wall's Side Surface"]]></Description>
			<Value>0</Value>
		</Boolean>
		<Length Name="sunShadeHeight3D">
			<Description><![CDATA["Sunshade Height as Drawn in 3D"]]></Description>
			<Value>1</Value>
		</Length>
		<Integer Name="lod3D_sunShade">
			<Description><![CDATA["3D Detail Level"]]></Description>
			<Value>4</Value>
		</Integer>
		<Length Name="gs_shutter_opHeight">
			<Description><![CDATA["3D Opening Height"]]></Description>
			<Value>1</Value>
		</Length>
		<Length Name="gs_shutter_closedHeight">
			<Description><![CDATA["3D Closed Height"]]></Description>
			<Value>0</Value>
		</Length>
		<String Name="gs_shutRoll_placement">
			<Description><![CDATA["Placement"]]></Description>
			<Value><![CDATA["За Фасадом"]]></Value>
		</String>
		<Integer Name="gs_shutRoll_iPlacement">
			<Description><![CDATA["Placement"]]></Description>
			<Value>3</Value>
		</Integer>
		<Integer Name="gs_shutRoll_placementEnable">
			<Description><![CDATA["Enabled Placement Types"]]></Description>
			<Value>7</Value>
		</Integer>
		<String Name="gs_shutRoll_boxType">
			<Description><![CDATA["Box Type"]]></Description>
			<Value><![CDATA["Прямоугольный"]]></Value>
		</String>
		<Integer Name="gs_shutRoll_iBoxType">
			<Description><![CDATA["Box Type"]]></Description>
			<Value>1</Value>
		</Integer>
		<String Name="gs_shutRoll_railPos">
			<Description><![CDATA["Rail Position"]]></Description>
			<Value><![CDATA["На Наличнике"]]></Value>
		</String>
		<Integer Name="gs_shutRoll_iRailPos">
			<Description><![CDATA["Rail Position"]]></Description>
			<Value>1</Value>
		</Integer>
		<Boolean Name="gs_shutRoll_showCasingBehind">
			<Description><![CDATA["Show Casing behind Sunshade"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_shutRoll_cutWallBehind">
			<Description><![CDATA["Insulation behind Box"]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_shutRoll_bIncludeBoxHeight">
			<Description><![CDATA["Include Height in Wallhole Height"]]></Description>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_shutRoll_boxHeight">
			<Description><![CDATA["Box Height"]]></Description>
			<Value>0.2</Value>
		</Length>
		<Length Name="gs_shutRoll_boxWidth">
			<Description><![CDATA["Box Width"]]></Description>
			<Value>0.15</Value>
		</Length>
		<Angle Name="gs_shutRoll_boxAngle">
			<Description><![CDATA["Box Angle"]]></Description>
			<Value>5</Value>
		</Angle>
		<String Name="gs_shutRoll_boxDefaultSize">
			<Description><![CDATA["Box Default Width"]]></Description>
			<Value><![CDATA["Ширина Четверти"]]></Value>
		</String>
		<Integer Name="gs_shutRoll_iBoxDefaultSize">
			<Description><![CDATA["Box Default Width"]]></Description>
			<Value>1</Value>
		</Integer>
		<Length Name="gs_shutRoll_boxOffsetLeft">
			<Description><![CDATA["Box Left Offset"]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="gs_shutRoll_boxOffsetRight">
			<Description><![CDATA["Box Right Offset"]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="gs_shutRoll_railDepth">
			<Description><![CDATA["Rail Depth"]]></Description>
			<Value>0.08</Value>
		</Length>
		<Length Name="gs_shutRoll_distFromWall">
			<Description><![CDATA["Distance from Wall"]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="gs_shutRoll_distFromHead">
			<Description><![CDATA["Distance from Head"]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="gs_shutRoll_segmentWidth">
			<Description><![CDATA["Slat Width"]]></Description>
			<Value>0.05</Value>
		</Length>

		<!-- gs_attributesTitle: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_attributesTitle">
			<Description><![CDATA["Attirbutes"]]></Description>
		</Title>
		<LineType Name="gs_sunShade_lineType">
			<Description><![CDATA["Symbol Line Type"]]></Description>
			<Value>1</Value>
		</LineType>
		<PenColor Name="gs_sunShade_cutLinesPen">
			<Description><![CDATA["Cut Line Pen"]]></Description>
			<Value>1</Value>
		</PenColor>
		<PenColor Name="gs_sunShade_unCutLinesPen">
			<Description><![CDATA["Uncut Line Pen"]]></Description>
			<Value>1</Value>
		</PenColor>
		<FillPattern Name="gs_sunShade_cutFillType">
			<Description><![CDATA["Cut Fill Type"]]></Description>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_sunShade_cutFillPen">
			<Description><![CDATA["Cut Fill Pen"]]></Description>
			<Value>1</Value>
		</PenColor>
		<PenColor Name="gs_sunShade_cutFillBackPen">
			<Description><![CDATA["Cut Fill Background Pen"]]></Description>
			<Value>-1</Value>
		</PenColor>
		<FillPattern Name="gs_sunShade_insFillType">
			<Description><![CDATA["Sunshade Insulation Fill Type"]]></Description>
			<Value>18</Value>
		</FillPattern>
		<PenColor Name="gs_sunShade_insFillPen">
			<Description><![CDATA["Sunshade Insulation Fill Pen"]]></Description>
			<Value>1</Value>
		</PenColor>
		<PenColor Name="gs_sunShade_insFillBackPen">
			<Description><![CDATA["Sunshade Insulation Background Pen"]]></Description>
			<Value>-1</Value>
		</PenColor>
		<Material Name="gs_shutRoll_matBox">
			<Description><![CDATA["Box Surface"]]></Description>
			<Value>11</Value>
		</Material>
		<Material Name="gs_shutRoll_matSegm">
			<Description><![CDATA["Segments Surface"]]></Description>
			<Value>60</Value>
		</Material>
		<Material Name="gs_shutRoll_matRail">
			<Description><![CDATA["Rolling Shutter Rail Surface"]]></Description>
			<Value>60</Value>
		</Material>

		<!-- gs_stringRes: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_stringRes">
			<Description><![CDATA["String Resources"]]></Description>
		</Title>
		<String Name="stShutRollPlacement">
			<Description><![CDATA["Rolling Shutter Placement Types"]]></Description>
			<ArrayValues FirstDimension="3" SecondDimension="0">
				<AVal Row="1"><![CDATA["На Фасаде"]]></AVal>
				<AVal Row="2"><![CDATA["Перед Окном"]]></AVal>
				<AVal Row="3"><![CDATA["За Фасадом"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stShutRollBoxType">
			<Description><![CDATA["Rolling Shutter  Box Types"]]></Description>
			<ArrayValues FirstDimension="2" SecondDimension="0">
				<AVal Row="1"><![CDATA["Прямоугольный"]]></AVal>
				<AVal Row="2"><![CDATA["Закругленный"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stShutRollBoxDefaultSize">
			<Description><![CDATA["Rolling Shutter Box Default Width"]]></Description>
			<ArrayValues FirstDimension="2" SecondDimension="0">
				<AVal Row="1"><![CDATA["По Ширине Четверти"]]></AVal>
				<AVal Row="2"><![CDATA["По Ширине Проема"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stShutRollRailPos">
			<Description><![CDATA["Rail Position"]]></Description>
			<ArrayValues FirstDimension="2" SecondDimension="0">
				<AVal Row="1"><![CDATA["На Наличнике"]]></AVal>
				<AVal Row="2"><![CDATA["На Стене"]]></AVal>
			</ArrayValues>
		</String>
		<Length Name="gs_casingThkOnFacade">
			<Description><![CDATA["Casing Thickness on Facade"]]></Description>
			<Value>0</Value>
		</Length>
		<Boolean Name="bLeftCornerFunction">
			<Description><![CDATA["Left Corner"]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bRightCornerFunction">
			<Description><![CDATA["Right Corner"]]></Description>
			<Value>0</Value>
		</Boolean>
		<Angle Name="leftCornerAngle">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Angle>
		<Angle Name="rightCornerAngle">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Angle>
		<Length Name="gs_reveal_top">
			<Description><![CDATA["Head Jamb Depth"]]></Description>
			<Value>0</Value>
		</Length>
		<Boolean Name="bDrawShutterRailon2D">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Boolean>
		<Integer Name="lod2D_sunShade">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Integer>
	</Parameters>
</ParamSection>

<Copyright SectVersion="1" SectionFlags="0" SubIdent="0">
	<Author>GRAPHISOFT</Author>
	<License>
		<Type>CC BY-ND</Type>
		<Version>3.0</Version>
	</License>
</Copyright>

</Symbol>
