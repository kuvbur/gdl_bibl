<?xml version="1.0" encoding="UTF-8"?>
<Symbol IsArchivable="false" IsPlaceable="false" MainGUID="627D1371-AF19-446A-9EEA-B6ECFD93B395" MigrationValue="Normal" Owner="1196638531" Signature="1196644685" Version="43">
<Ancestry SectVersion="1" SectionFlags="0" SubIdent="0" Template="false">
	<MainGUID>F938E33A-329D-4A36-BE3E-85E126820996</MainGUID>
	<MainGUID>103E8D2C-8230-42E1-9597-46F84CCE28C0</MainGUID>
	<MainGUID>B2970E4C-8680-4061-8670-2F4B638F3953</MainGUID>
</Ancestry>

<CalledMacros SectVersion="2" SectionFlags="0" SubIdent="0">
	<Macro>
		<MName><![CDATA["Shutter_Panel_Collection"]]></MName>
		<MainGUID>D033ACCD-F8DE-43A1-A350-DD7CEAD7CA03</MainGUID>
	</Macro>
</CalledMacros>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_3D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
! ==============================================================================
! Set 3D Detail Level
! ==============================================================================

if lod3D_sunShade = 0 then end
resol max(3, nArchResolution)
pen gs_sunShade_unCutLinesPen
sect_fill gs_sunShade_cutFillType, gs_sunShade_cutFillBackPen, gs_sunShade_cutFillPen, gs_sunShade_cutLinesPen

LOD3D_SIMPLEPLANE	= 1
LOD3D_DETAILEDPLANE	= 2
LOD3D_SIMPLEPANEL	= 3
LOD3D_DETAILEDPANEL	= 4

bPanelThickness = 0
if lod3D_sunShade = LOD3D_SIMPLEPANEL | lod3D_sunShade = LOD3D_DETAILEDPANEL then bPanelThickness = 1
if lod3D_sunShade = LOD3D_SIMPLEPANEL | lod3D_sunShade = LOD3D_SIMPLEPLANE then
	gs_shutPanel_iType = PANEL_FULL
	bFrameExists = 0
endif

if bPanelThickness then
	defaultStatus = 15
else
	defaultStatus = 1
endif

if not(gs_shutPanel_BDiffBottomFrame) then gs_shutPanel_frameWidthBottom = gs_shutPanel_frameWidth

if bArched then
	addx a
	mulx -1
endif

! ==============================================================================
! Draw Frame
! ==============================================================================

if bFrameExists then gosub "PanelFrame"


! ==============================================================================
! Draw Inside & Panels without frame
! ==============================================================================

bLouvered = (gs_shutPanel_iType = PANEL_LOUVER | gs_shutPanel_iType = PANEL_LOUVERHORDIVIDED | \
			gs_shutPanel_iType = PANEL_LOUVERDIVIDED)
bPerforated = (gs_shutPanel_iType = PANEL_PERFORATED)
nCuts = 0


! ------------------------------------------------------------------------------
! Cutting fields - arched panels
! ------------------------------------------------------------------------------

if bArched then
	if bFrameExists then
		frameWidth = gs_shutPanel_frameWidth
		frameWidthBottom = gs_shutPanel_frameWidthBottom
	else
		frameWidth = 0
		frameWidthBottom = 0
	endif

	if gs_shutPanel_iShape = PANELSHAPE_FULLARCH then
		radOuter = ((a/2)^2 + gs_shutPanel_archHeight^2) / (2 * gs_shutPanel_archHeight)
		radInner = radOuter - gs_shutPanel_frameWidth

		origY = b - radOuter

		cutpolya 10, 1, 0,
			-a,				frameWidthBottom,														15,
			frameWidth,		frameWidthBottom,														15,
			frameWidth,		origY + sqr(max(0, radInner^2 - (a/2 - gs_shutPanel_frameWidth)^2)),	79,
			a/2,			origY,																	915,
			a - frameWidth,	origY + sqr(max(0, radInner^2 - (a/2 - gs_shutPanel_frameWidth)^2)),	3015,
			a - frameWidth,	frameWidth,																15,
			2 * a,			frameWidth,																15,
			2 * a,			2 * b,																	15,
			-a,				2 * b,																	15,
			-a,				frameWidthBottom,														-1

		nCuts = nCuts + 1
	endif

	if gs_shutPanel_ishape = PANELSHAPE_HALFARCH then		! halfarch
		radOuter = (a^2 + gs_shutPanel_archHeight^2) / (2 * gs_shutPanel_archHeight)
		radInner = radOuter - frameWidth

		origY = b - radOuter

		cutpolya 10, 1, 0,
			-a,				frameWidthBottom,										15,
			frameWidth,		frameWidthBottom,										15,
			frameWidth,		origY + sqr(max(0, radInner^2 - frameWidth^2)),			79,
			0,				origY,													915,
			a - frameWidth,	origY + sqr(max(0, radInner^2 - (a - frameWidth)^2)),	3015,
			a - frameWidth,	frameWidth,												15,
			2 * a,			frameWidth,												15,
			2 * a,			2 * b,													15,
			-a,				2 * b,													15,
			-a,				frameWidthBottom,										-1

		nCuts = nCuts + 1
	endif

	if gs_shutPanel_iShape = PANELSHAPE_ELLIPS then
		shoulderHeight = b - gs_shutPanel_archHeight + gs_shutter_innerOffset
		archHeight = gs_shutPanel_archHeight - frameWidth - gs_shutter_innerOffset
		halfAxis = a/2 - frameWidth

		R1 = smallRadiusEllips - frameWidth - gs_shutter_innerOffset
		R2 = (halfAxis^2 + archHeight^2 - 2 * R1 * halfAxis) / (2 * archHeight - 2 * R1)
		alphaMiddle = atn((halfAxis - R1) / (R2 - archHeight))
		alphaSide = 90 - alphaMiddle

		cutpolya 12, 1, 0,
			-a,					0,					15,
			 frameWidth,		0,					15,
			 frameWidth,		shoulderHeight,		79,
			 R1,				-alphaSide,			2079,
			 R2,				-alphaMiddle * 2,	2079,
			 R1,				-alphaSide,			2079,
			 a - frameWidth,	shoulderHeight,		15,
			 a - frameWidth,	0,					15,
			 2 * a,				0,					15,
			 2 * a,				2 * b,				15,
			-a,					2 * b,				15,
			-a,					0,					-1

		nCuts = nCuts + 1
	endif

	if gs_shutPanel_iShape = PANELSHAPE_HALFELLIPS then
		shoulderHeight = b - gs_shutPanel_archHeight + gs_shutter_innerOffset
		archHeight = gs_shutPanel_archHeight - frameWidth - gs_shutter_innerOffset
		halfAxis = a - 2 * frameWidth

		R1 = smallRadiusEllips - frameWidth - gs_shutter_innerOffset
		R2 = (halfAxis^2 + archHeight^2 - 2 * R1 * halfAxis) / (2 * archHeight - 2 * R1)
		alphaMiddle = atn((halfAxis - R1) / (R2 - archHeight))
		alphaSide = 90 - alphaMiddle

		cutpolya 11, 1, 0,
			 2 * a,				0,				15,
			 a - frameWidth,	0,				15,
			 a - frameWidth,	shoulderHeight,	79,
			 R1,				alphaSide,		2079,
			 R2,				alphaMiddle,	2079,
			 frameWidth,		shoulderHeight,	15,
			 frameWidth,		0,				15,
			-a,					0,				15,
			-a,					b * 2,			15,
			 a * 2,				b * 2,			15,
			 a * 2,				0,				-1

		nCuts = nCuts + 1
	endif
endif


! ------------------------------------------------------------------------------
! Draw panels
! ------------------------------------------------------------------------------

material gs_shutPanel_materialMain

if gs_shutPanel_iType = PANEL_LOUVER | gs_shutPanel_iType = PANEL_FRAME | gs_shutPanel_iType = PANEL_PERFORATED then
	fieldWidth = a - 2 * gs_shutPanel_frameWidth
	fieldHeight = b - gs_shutPanel_frameWidth - gs_shutPanel_frameWidthBottom

	add gs_shutPanel_frameWidth, gs_shutPanel_frameWidthBottom, 0
	gosub "PanelField"
	del 1
endif

if gs_shutPanel_iType = PANEL_LOUVERHORDIVIDED | gs_shutPanel_iType = PANEL_FRAMEHORDIVIDED then
	fieldWidth = a - 2 * gs_shutPanel_frameWidth
	fieldHeight = (b - gs_shutPanel_frameWidth - gs_shutPanel_frameWidthBottom - gs_shutPanel_midFrameHorW) / 2

	add gs_shutPanel_frameWidth, gs_shutPanel_frameWidthBottom, 0

	gosub "PanelField"

	addy fieldHeight

	material gs_shutPanel_materialAcc

	put	0,			0,							defaultStatus,
		fieldWidth,	0,							defaultStatus,
		fieldWidth,	gs_shutPanel_midFrameHorW,	defaultStatus,
		0,			gs_shutPanel_midFrameHorW,	defaultStatus,
		0,			0,							-1

	if bPanelThickness then
		prism_ (NSP/3), gs_shutPanel_Thk,
			get(NSP)
	else
		poly_ (NSP/3),
			get(NSP)
	endif

	gosub "TextureDirection"

	addy gs_shutPanel_midFrameHorW

	gosub "PanelField"

	del 3
endif

if gs_shutPanel_iType = PANEL_LOUVERDIVIDED then
	bLouvered = 1
	fieldWidth = (a - 2 * gs_shutPanel_frameWidth - gs_shutPanel_midFrameVertW) / 2
	fieldHeight = (b - gs_shutPanel_frameWidth - gs_shutPanel_frameWidthBottom - gs_shutPanel_midFrameHorW) / 2

	material gs_shutPanel_materialAcc
	add gs_shutPanel_frameWidth, gs_shutPanel_frameWidthBottom, 0

	put	0,												fieldHeight,								defaultStatus,
		fieldWidth * 2 + gs_shutPanel_midFrameVertW,	fieldHeight,								defaultStatus,
		fieldWidth * 2 + gs_shutPanel_midFrameVertW,	fieldHeight + gs_shutPanel_midFrameHorW,	defaultStatus,
		0,												fieldHeight + gs_shutPanel_midFrameHorW,	defaultStatus,
		0,												fieldHeight,								-1

	if bPanelThickness then
		prism_ (NSP/3), gs_shutPanel_Thk,
			get(NSP)
	else
		poly_ (NSP/3),
			get(NSP)
	endif

	gosub "TextureDirection"

	for i = 1 to 2
		put fieldWidth,									0,				defaultStatus,
			fieldWidth + gs_shutPanel_midFrameVertW,	0,				defaultStatus,
			fieldWidth + gs_shutPanel_midFrameVertW,	fieldHeight,	defaultStatus,
			fieldWidth,									fieldHeight,	defaultStatus,
			fieldWidth,									0,				-1

		if bPanelThickness then
			prism_ (NSP/3), gs_shutPanel_Thk,
				get(NSP)
		else
			poly_ (NSP/3),
				get(NSP)
		endif

		rotz 90
		gosub "TextureDirection"
		del 1

		addy fieldHeight + gs_shutPanel_midFrameHorW
	next i
	del 3

	add gs_shutPanel_frameWidth, gs_shutPanel_frameWidthBottom, 0
	gosub "PanelField"
	addy fieldHeight + gs_shutPanel_midFrameHorW
	gosub "PanelField"
	del 1

	addx fieldWidth + gs_shutPanel_midFrameVertW
	gosub "PanelField"
	addy fieldHeight + gs_shutPanel_midFrameHorW
	gosub "PanelField"
	del 3
endif

if gs_shutPanel_iType = PANEL_FULL then
	fieldWidth = a
	fieldHeight = b

	gosub "PanelField"
endif

if gs_shutPanel_iType = PANEL_Z then gosub "PanelZ"
if gs_shutPanel_iType = PANEL_VERTBOARDS then gosub "PanelVertBoards"
if gs_shutPanel_iType = PANEL_ROTATEDBOARDS then gosub "PanelRotatedBoards"


! ------------------------------------------------------------------------------
! Closing cut
! ------------------------------------------------------------------------------

for i = 1 to nCuts
	cutend
next i


! ==============================================================================
! Draw Custom Panel
! ==============================================================================

if gs_shutPanel_iType = PANEL_CUSTOM then
	gosub "PanelCustom"
endif


if bArched then del 2


! ==============================================================================
end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end
! ==============================================================================


! ==============================================================================
"PanelFrame":
! ==============================================================================

	material gs_shutPanel_materialAcc

	if bArched then
		if gs_shutPanel_iShape = PANELSHAPE_FULLARCH then
			radOuter = ((a/2)^2 + gs_shutPanel_archHeight^2) / (2 * gs_shutPanel_archHeight)
			radInner = radOuter - gs_shutPanel_frameWidth

			origY = b - radOuter

			! --- Left side ---
			put	0,							0,																		defaultStatus,
				0,							b - gs_shutPanel_archHeight,											defaultStatus,
				a/2,						origY,																	900 + defaultStatus,
				gs_shutPanel_frameWidth,	origY + sqr(max(0, radOuter^2 - (a/2 - gs_shutPanel_frameWidth)^2)),	3000 + defaultStatus,
				gs_shutPanel_frameWidth,	0,																		defaultStatus,
				0,							0,																		-1

			if bPanelThickness then
				prism_ (NSP/3), gs_shutPanel_thk,
						get(NSP)

				model wire		! Contour Lines between 2 prism
				plane_ 5,
					gs_shutPanel_frameWidth, 0,																		0,					1,
					gs_shutPanel_frameWidth, 0,																		gs_shutPanel_thk,	1,
					gs_shutPanel_frameWidth, origY + sqr(max(0, radOuter^2 - (a/2 - gs_shutPanel_frameWidth)^2)),	gs_shutPanel_thk,	1,
					gs_shutPanel_frameWidth, origY + sqr(max(0, radOuter^2 - (a/2 - gs_shutPanel_frameWidth)^2)),	0,					1,
					gs_shutPanel_frameWidth, 0,																		0,					-1

				model solid
			else
				poly_ (NSP/3),
						get(NSP)
			endif

			rotz 90
			gosub "TextureDirection"
			del 1

			! --- Right side ---
			put	a,								0,																		defaultStatus,
				a,								b - gs_shutPanel_archHeight,											defaultStatus,
				a/2,							origY,																	900 + defaultStatus,
				a - gs_shutPanel_frameWidth,	origY + sqr(max(0, radOuter^2 - (a/2 - gs_shutPanel_frameWidth)^2)),	3000 + defaultStatus,
				a - gs_shutPanel_frameWidth,	0,																		defaultStatus,
				a,								0,																		-1

			if bPanelThickness then
				prism_ (NSP/3), gs_shutPanel_thk,
						get(NSP)

				model wire		! Contour Lines between 2 prism
				plane_ 5,
					a - gs_shutPanel_frameWidth, 0,																		0,					1,
					a - gs_shutPanel_frameWidth, 0,																		gs_shutPanel_thk,	1,
					a - gs_shutPanel_frameWidth, origY + sqr(max(0, radOuter^2 - (a/2 - gs_shutPanel_frameWidth)^2)),	gs_shutPanel_thk,	1,
					a - gs_shutPanel_frameWidth, origY + sqr(max(0, radOuter^2 - (a/2 - gs_shutPanel_frameWidth)^2)),	0,					1,
					a - gs_shutPanel_frameWidth, 0,																		0,					-1

				model solid
			else
				poly_ (NSP/3),
						get(NSP)
			endif

			rotz 90
			gosub "TextureDirection"
			del 1

			! --- Arched top ---
			put	a - gs_shutPanel_frameWidth,	origY + sqr(max(0, radInner^2 - (a/2 - gs_shutPanel_frameWidth)^2)),	600+defaultStatus + bPanelThickness * 64,
				a/2,							origY,																	900 + defaultStatus,
				gs_shutPanel_frameWidth,		origY + sqr(max(0, radInner^2 - (a/2 - gs_shutPanel_frameWidth)^2)),	3000 + defaultStatus,
				gs_shutPanel_frameWidth,		origY + sqr(max(0, radOuter^2 - (a/2 - gs_shutPanel_frameWidth)^2)),	defaultStatus + bPanelThickness * 64,
				a - gs_shutPanel_frameWidth,	origY + sqr(max(0, radOuter^2 - (a/2 - gs_shutPanel_frameWidth)^2)),	3000 + defaultStatus,
				a - gs_shutPanel_frameWidth,	origY + sqr(max(0, radInner^2 - (a/2 - gs_shutPanel_frameWidth)^2)),	-1

			if bPanelThickness then
				prism_ (NSP/3), gs_shutPanel_thk,
						get(NSP)
			else
				poly_ (NSP/3),
						get(NSP)
			endif

			gosub "TextureDirection"
		endif

		if gs_shutPanel_iShape = PANELSHAPE_HALFARCH then
			radOuter = (a^2 + gs_shutPanel_archHeight^2) / (2 * gs_shutPanel_archHeight)
			radInner = radOuter - gs_shutPanel_frameWidth

			origY = b - radOuter
			! --- Left side ---
			put	0,							0,														defaultStatus,
				0,							b,														defaultStatus,
				0,							origY,													900 + defaultStatus,
				gs_shutPanel_frameWidth,	origY + sqr(max(0, radOuter^2 - gs_shutPanel_frameWidth^2)),	3000 + defaultStatus,
				gs_shutPanel_frameWidth,	0,														defaultStatus,
				0,							0,														-1

			if bPanelThickness then
				prism_ (NSP/3), gs_shutPanel_thk,
						get(NSP)

				model wire		! Contour Lines between 2 prism
				plane_ 5,
					gs_shutPanel_frameWidth, 0,																0,					1,
					gs_shutPanel_frameWidth, 0,																gs_shutPanel_thk,	1,
					gs_shutPanel_frameWidth, origY + sqr(max(0, radOuter^2 - gs_shutPanel_frameWidth^2)),	gs_shutPanel_thk,	1,
					gs_shutPanel_frameWidth, origY + sqr(max(0, radOuter^2 - gs_shutPanel_frameWidth^2)),	0,					1,
					gs_shutPanel_frameWidth, 0,																0,					-1

				model solid
			else
				poly_ (NSP/3),
						get(NSP)
			endif

			rotz 90
			gosub "TextureDirection"
			del 1

			! --- Right side ---
			put	a - gs_shutPanel_frameWidth,	0,																	defaultStatus,
				a - gs_shutPanel_frameWidth,	origY + sqr(max(0, radOuter^2 - (a - gs_shutPanel_frameWidth)^2)),	defaultStatus,
				0,								origY,																900 + defaultStatus,
				a,								b - gs_shutPanel_archHeight,										3000 + defaultStatus,
				a,								0,																	defaultStatus,
				a - gs_shutPanel_frameWidth,	0,																	-1

			if bPanelThickness then
				prism_ (NSP/3), gs_shutPanel_thk,
						get(NSP)

				model wire		! Contour Lines between 2 prism
				plane_ 5,
					a - gs_shutPanel_frameWidth, 0,																	0,					1,
					a - gs_shutPanel_frameWidth, 0,																	gs_shutPanel_thk,	1,
					a - gs_shutPanel_frameWidth, origY + sqr(max(0, radOuter^2 - (a - gs_shutPanel_frameWidth)^2)), gs_shutPanel_thk,	1,
					a - gs_shutPanel_frameWidth, origY + sqr(max(0, radOuter^2 - (a - gs_shutPanel_frameWidth)^2)), 0,					1,
					a - gs_shutPanel_frameWidth, 0,																	0,					-1

				model solid
			else
				poly_ (NSP/3),
						get(NSP)
			endif

			rotz 90
			gosub "TextureDirection"
			del 1

			! --- Arched top ---
			put	gs_shutPanel_frameWidth,		origY + sqr(max(0, radInner^2 - gs_shutPanel_frameWidth^2)),		defaultStatus,
				gs_shutPanel_frameWidth,		origY + sqr(max(0, radOuter^2 - gs_shutPanel_frameWidth^2)),		defaultStatus + bPanelThickness * 64,
				0,								origY,																900 + defaultStatus,
				a - gs_shutPanel_frameWidth,	origY + sqr(max(0, radOuter^2 - (a - gs_shutPanel_frameWidth)^2)),	3000 + defaultStatus,
				a - gs_shutPanel_frameWidth,	origY + sqr(max(0, radInner^2 - (a - gs_shutPanel_frameWidth)^2)),	defaultStatus + bPanelThickness * 64,
				gs_shutPanel_frameWidth,		origY + sqr(max(0, radInner^2 - gs_shutPanel_frameWidth^2)),		3000 + defaultStatus

			if bPanelThickness then
				prism_ (NSP/3), gs_shutPanel_thk,
						get(NSP)
			else
				poly_ (NSP/3),
						get(NSP)
			endif

			gosub "TextureDirection"
		endif

		if gs_shutPanel_iShape = PANELSHAPE_ELLIPS then
			shoulderHeight = b - gs_shutPanel_archHeight + gs_shutter_innerOffset

			archHeight_in = gs_shutPanel_archHeight - gs_shutPanel_frameWidth - gs_shutter_innerOffset
			archHeight_out = gs_shutPanel_archHeight  - gs_shutter_innerOffset
			halfAxis_in = a/2 - gs_shutPanel_frameWidth
			halfAxis_out = a/2

			R1_out = smallRadiusEllips  - gs_shutter_innerOffset
			R1_in = smallRadiusEllips - gs_shutPanel_frameWidth - gs_shutter_innerOffset
			R2_in = (halfAxis_in^2 + archHeight_in^2 - 2 * R1_in * halfAxis_in) / (2 * archHeight_in - 2 * R1_in)
			R2_out = (halfAxis_out^2 + archHeight_out^2 - 2 * R1_out * halfAxis_out) / (2 * archHeight_out - 2 * R1_out)

			alphaMiddle_out = atn((halfAxis_out - R1_out) / (R2_out - archHeight_out))
			alphaMiddle_in = atn((halfAxis_in - R1_in) / (R2_in - archHeight_in))
			alphaSide_out = 90 - alphaMiddle_out
			alphaSide_in = 90 - alphaMiddle_in

			put 0, 0, defaultStatus,
				0, shoulderHeight, defaultStatus,
				R1_out, -alphaSide_out, 2000 + defaultStatus,
				R2_out, -alphaMiddle_out * 2, 2000 + defaultStatus,
				R1_out, -alphaSide_out, 2000 + defaultStatus,
				a, 0, defaultStatus,
				a - gs_shutPanel_frameWidth, 0, defaultStatus,
				a - gs_shutPanel_frameWidth, shoulderHeight, defaultStatus,
				R1_in, alphaSide_in, 2000 + defaultStatus,
				R2_in, 2 * alphaMiddle_in, 2000 + defaultStatus,
				R1_in, alphaSide_in, 2000 + defaultStatus,
				gs_shutPanel_frameWidth, 0, defaultStatus

			if bPanelThickness then
				prism_ (NSP/3), gs_shutPanel_thk,
						get(NSP)
			else
				poly_ (NSP/3),
						get(NSP)
			endif

			gosub "TextureDirection"
		endif

		if gs_shutPanel_iShape = PANELSHAPE_HALFELLIPS then

			shoulderHeight = b - gs_shutPanel_archHeight + gs_shutter_innerOffset
			archHeight_in = gs_shutPanel_archHeight - gs_shutPanel_frameWidth - gs_shutter_innerOffset
			archHeight_out = gs_shutPanel_archHeight  - gs_shutter_innerOffset
			halfAxis_in = a - 2 * gs_shutPanel_frameWidth
			halfAxis_out = a

			R1_out = smallRadiusEllips  - gs_shutter_innerOffset
			R2_out = (halfAxis_out^2 + archHeight_out^2 - 2 * R1_out * halfAxis_out) / (2 * archHeight_out - 2 * R1_out)

			R1_in = smallRadiusEllips - gs_shutPanel_frameWidth - gs_shutter_innerOffset
			R2_in = (halfAxis_in^2 + archHeight_in^2 - 2 * R1_in * halfAxis_in) / (2 * archHeight_in - 2 * R1_in)

			alphaMiddle_out = atn((halfAxis_out - R1_out) / (R2_out - archHeight_out))
			alphaMiddle_in = atn((halfAxis_in - R1_in) / (R2_in - archHeight_in))
			alphaSide_out = 90 - alphaMiddle_out
			alphaSide_in = 90 - alphaMiddle_in

			put 0, 0, defaultStatus,
				0, b, defaultStatus,
				1, 0, 800,
				R2_out, -alphaMiddle_out, 2000 + defaultStatus,
				R1_out, -alphaSide_out, 2000 + defaultStatus,
				a, 0, defaultStatus,
				a - gs_shutPanel_frameWidth, 0, defaultStatus,
				a - gs_shutPanel_frameWidth, shoulderHeight, defaultStatus,
				R1_in, alphaSide_in, 2000 + defaultStatus,
				R2_in, alphaMiddle_in, 2000 + defaultStatus,
				gs_shutPanel_frameWidth, 0, defaultStatus

			if bPanelThickness then
				prism_ (NSP/3), gs_shutPanel_thk,
						get(NSP)
			else
				poly_ (NSP/3),
						get(NSP)
			endif

			gosub "TextureDirection"
		endif

	else
		! --- Left side ---
		put 0,							0,	defaultStatus,
			gs_shutPanel_frameWidth,	0,	defaultStatus,
			gs_shutPanel_frameWidth,	b,	defaultStatus,
			0,							b,	defaultStatus,
			0,							0,	-1

		if bPanelThickness then
			prism_ (NSP/3), gs_shutPanel_thk,
					get(NSP)

			model wire		! Contour Lines between 2 prism
			plane_ 5,
				gs_shutPanel_frameWidth, 0, 0,					1,
				gs_shutPanel_frameWidth, 0, gs_shutPanel_thk,	1,
				gs_shutPanel_frameWidth, b, gs_shutPanel_thk,	1,
				gs_shutPanel_frameWidth, b, 0,					1,
				gs_shutPanel_frameWidth, 0, 0,					-1

			model solid
		else
			poly_ (NSP/3),
					get(NSP)
		endif

		rotz 90
		gosub "TextureDirection"
		del 1

		! --- Right side ---
		put	a,								0,	defaultStatus,
			a - gs_shutPanel_frameWidth,	0,	defaultStatus,
			a - gs_shutPanel_frameWidth,	b,	defaultStatus,
			a,								b,	defaultStatus,
			a,								0,	-1

		if bPanelThickness then
			prism_ (NSP/3), gs_shutPanel_thk,
					get(NSP)

			model wire		! Contour Lines between 2 prism
			plane_ 5,
				a - gs_shutPanel_frameWidth, 0, 0,					1,
				a - gs_shutPanel_frameWidth, 0, gs_shutPanel_thk,	1,
				a - gs_shutPanel_frameWidth, b, gs_shutPanel_thk,	1,
				a - gs_shutPanel_frameWidth, b, 0,					1,
				a - gs_shutPanel_frameWidth, 0, 0,					-1

			model solid
		else
			poly_ (NSP/3),
					get(NSP)
		endif

		rotz 90
		gosub "TextureDirection"
		del 1

		! --- Top ---
		put	gs_shutPanel_frameWidth,		b,								defaultStatus,
			a - gs_shutPanel_frameWidth,	b,								defaultStatus,
			a - gs_shutPanel_frameWidth,	b - gs_shutPanel_frameWidth,	defaultStatus,
			gs_shutPanel_frameWidth,		b - gs_shutPanel_frameWidth,	defaultStatus,
			gs_shutPanel_frameWidth,		b,								-1

		if bPanelThickness then
			prism_ (NSP/3), gs_shutPanel_thk,
					get(NSP)
		else
			poly_ (NSP/3),
					get(NSP)
		endif

		rotx 90
		gosub "TextureDirection"
		del 1
	endif


	! --- Bottom ---
	put	gs_shutPanel_frameWidth,		0,							defaultStatus,
		a - gs_shutPanel_frameWidth,	0,							defaultStatus,
		a - gs_shutPanel_frameWidth,	gs_shutPanel_frameWidthBottom,	defaultStatus,
		gs_shutPanel_frameWidth,		gs_shutPanel_frameWidthBottom,	defaultStatus,
		gs_shutPanel_frameWidth,		0,							-1

	if bPanelThickness then
		prism_ (NSP/3), gs_shutPanel_thk,
				get(NSP)
	else
		poly_ (NSP/3),
				get(NSP)
	endif

	gosub "TextureDirection"

return


! ==============================================================================
"PanelField":
! ==============================================================================

	if gs_shutPanel_iType = PANEL_FULL then
		fieldThk = gs_shutPanel_Thk
	else
		fieldThk = gs_shutPanel_fieldThk
	endif

	addz (gs_shutPanel_Thk / 2) * bPanelThickness

	material gs_shutPanel_materialMain
	if bLouvered then
		n = int(fieldHeight / gs_shutPanel_louverWidth)

		if n > 0 then
			distLouvres = fieldHeight / n

			if bPanelThickness then
				addy -distLouvres / 2

				for k = 1 TO n
					addy distLouvres

					rotx gs_shutPanel_louverAngle
					addz -gs_shutPanel_louverThk / 2

					prism_ 5, gs_shutPanel_louverThk,
						0,			-gs_shutPanel_louverWidth/2,	defaultStatus,
						0,			 gs_shutPanel_louverWidth/2,	defaultStatus,
						fieldWidth,	 gs_shutPanel_louverWidth/2,	defaultStatus,
						fieldWidth,	-gs_shutPanel_louverWidth/2,	defaultStatus,
						0,			-gs_shutPanel_louverWidth/2,	-1

					gosub "TextureDirection"

					del 2
				next k

				del n + 1
			else
				for k = 1 to n
					poly_ 5,
						0, 0, 1,
						fieldWidth, 0, 1,
						fieldWidth, distLouvres, 1,
						0, distLouvres, 1,
						0, 0, -1

					gosub "TextureDirection"

					addy distLouvres
				next k
				del n
			endif
		endif
	else
		put 0,			0,				defaultStatus,
			fieldWidth,	0,				defaultStatus,
			fieldWidth,	fieldHeight,	defaultStatus,
			0,			fieldHeight,	defaultStatus,
			0,			0,				-1

		if bPerforated then
			xDist = fieldWidth / gs_shutPanel_nHoleHor
			yDist = fieldHeight / gs_shutPanel_nHoleVert

			for i = 1 to gs_shutPanel_nHoleHor
				for j = 1 to gs_shutPanel_nHoleVert
					put (i - 0.5) * xDist, (j - 0.5) * yDist, 900 + defaultStatus,
						gs_shutPanel_holeRadius, 360, 4000 + defaultStatus
				next j
			next i

			resol 6
		endif

		addz -fieldThk/2 * bPanelThickness

		if bPanelThickness then
			prism_ (NSP/3), fieldThk,
					get(NSP)
		else
			poly_ (NSP/3),
					get(NSP)
		endif

		roty 90
		rotz 90
		gosub "TextureDirection"
		del 2

		del 1

	endif

	del 1

return


! ==============================================================================
"PanelZ":
! ==============================================================================

	nBoards = int(a / gs_shutPanel_ZBoardW)
	if nBoards < 2 then
		nBoards = 2
		gapWidth = 0
		gs_shutPanel_ZBoardW = a / 2
	else
		gapWidth = (a - nBoards * gs_shutPanel_ZBoardW) / (nBoards - 1)
	endif

	boardWidth = gs_shutPanel_ZBoardW
	boardThk = gs_shutPanel_boardThkVert
	boardLength = b

	gosub "Boards"

	! --- Z ---
	material gs_shutPanel_materialAcc

	if bPanelThickness then
		addz gs_shutPanel_boardThkVert
	else
		addz EPS
	endif

	put	gs_shutPanel_ZBoardW/4, 0.05, defaultStatus,
		a - gs_shutPanel_ZBoardW/4, 0.05, defaultStatus,
		a - gs_shutPanel_ZBoardW/4, 0.05 + gs_shutPanel_ZWidth, defaultStatus,
		gs_shutPanel_ZBoardW/4, 0.05 + gs_shutPanel_ZWidth, defaultStatus,
		gs_shutPanel_ZBoardW/4, 0.05, -1

	if bPanelThickness then
		prism_ (NSP/3), gs_shutPanel_ZThk,
			get(NSP)
	else
		poly_ (NSP/3),
			get(NSP)
	endif

	gosub "TextureDirection"

	put	gs_shutPanel_ZBoardW/4, b - gs_shutPanel_archHeight - 0.05, defaultStatus,
		a - gs_shutPanel_ZBoardW/4, b - gs_shutPanel_archHeight - 0.05, defaultStatus,
		a - gs_shutPanel_ZBoardW/4, b - gs_shutPanel_archHeight - 0.05 - gs_shutPanel_ZWidth, defaultStatus,
		gs_shutPanel_ZBoardW/4, b - gs_shutPanel_archHeight - 0.05 - gs_shutPanel_ZWidth, defaultStatus,
		gs_shutPanel_ZBoardW/4, b - gs_shutPanel_archHeight - 0.05, -1

	if bPanelThickness then
		prism_ (NSP/3), gs_shutPanel_ZThk,
			get(NSP)
	else
		poly_ (NSP/3),
			get(NSP)
	endif

	gosub "TextureDirection"

	mx = B - 2 * gs_shutPanel_ZWidth - 0.1
	x = (2 * (A - 0.5 * gs_shutPanel_ZBoardW) - sqr(4 * (A - 0.5 * gs_shutPanel_ZBoardW)^2 - 4 * (1 - ((mx * mx) / gs_shutPanel_ZWidth^2)) * ((A - 0.5 * gs_shutPanel_ZBoardW)^2 + (mx * mx)))) / (2 * ((1 - ((mx * mx) / gs_shutPanel_ZWidth^2))))

	put	gs_shutPanel_ZBoardW/4,		gs_shutPanel_ZWidth + 0.05, defaultStatus,
		A - gs_shutPanel_ZBoardW/4 - x,	B - gs_shutPanel_archHeight - gs_shutPanel_ZWidth - 0.05, defaultStatus,
		A - gs_shutPanel_ZBoardW/4,		B - gs_shutPanel_archHeight - gs_shutPanel_ZWidth - 0.05, defaultStatus,
		gs_shutPanel_ZBoardW/4 + x,	gs_shutPanel_ZWidth + 0.05, defaultStatus,
		gs_shutPanel_ZBoardW/4,		gs_shutPanel_ZWidth + 0.05, -1

	if bPanelThickness then
		prism_ (NSP/3), gs_shutPanel_ZThk,
			get(NSP)
	else
		poly_ (NSP/3),
			get(NSP)
	endif

	alpha = atn(((-A/2 + gs_shutPanel_ZBoardW * 0.25) - (A/2 - gs_shutPanel_ZBoardW * 0.25 - x)) / ((gs_shutPanel_ZWidth + 0.05) - (B - gs_shutPanel_ZWidth - 0.05)))
	rotz -alpha+90

	gosub "TextureDirection"

	del 1
return


! ==============================================================================
"PanelVertBoards":
! ==============================================================================

	nBoards = max (2, round_int (a / gs_shutPanel_vertBoardW))
	gapWidth = 0.005

	boardWidth = (a - (nBoards - 1) * gapWidth) / nBoards
	boardLength = b
	boardThk = gs_shutPanel_boardThkVert

	gosub "Boards"
return


! ==============================================================================
"PanelRotatedBoards":
! ==============================================================================

	nBoards = max (2, round_int (a / gs_shutPanel_vertBoardW))
	gapWidth = 0.005

	boardWidth = (a - (nBoards - 1) * gapWidth) / nBoards
	boardLength = b
	boardThk = gs_shutPanel_boardThkVert

	gosub "Boards"

	rotz 90
	if bPanelThickness then
		distToSecondBoard = gs_shutPanel_boardThkVert
	else
		distToSecondBoard = EPS
	endif
	add 0, -a, distToSecondBoard

	material gs_shutPanel_materialAcc

	nBoards = max (2, round_int (b / gs_shutPanel_horBoardW))
	gapWidth = 0.005

	boardWidth = (b - (nBoards - 1) * gapWidth) / nBoards
	boardLength = a
	boardThk = gs_shutPanel_boardThkHor

	gosub "Boards"

	del 2
return


! ==============================================================================
"PanelCustom":
! ==============================================================================

	if gs_cust_shutterPanel <> "" then
		if bPanelThickness then
			customThk = gs_shutPanel_Thk
		else
			customThk = EPS
		endif
		call "Shutter_Panel_Collection" parameters a = a, b = b, zzyzx = customThk,
				gs_ptype = gs_cust_shutterPanel
	endif
return


! ==============================================================================
"Boards":
! ==============================================================================

	for i = 1 to nBoards
		put	0,			0,				defaultStatus,
			boardWidth,	0,				defaultStatus,
			boardWidth,	boardLength,	defaultStatus,
			0,			boardLength,	defaultStatus,
			0,			0,				-1

		if bPanelThickness then
			prism_ (NSP/3), boardThk,
					get(NSP)

			if i > 1 & ((gapWidth < 10 * EPS) | (GLOB_CONTEXT = 4)) then
				model wire		! contours
				plane_ 5,
					0, 0, 0, 1,
					0, boardLength, 0, 1,
					0, boardLength, boardThk, 1,
					0, 0, boardThk, 1,
					0, 0, 0, -1

				model solid
			endif
		else
			poly_ (NSP/3),
					get(NSP)
		endif

		roty 90
		rotz 90
		gosub "TextureDirection"
		del 2

		addx boardWidth + gapWidth
	next i

	del nBoards

return


! ==============================================================================
"TextureDirection":
! ==============================================================================

	base
	vert 0, 0, 0
	vert 1, 0, 0
	vert 0, 1, 0
	vert 0, 0, 1
	coor 2, -1, -2, -3, -4
	body -1

return
]]>
</Script_3D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_2D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_2D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_1D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
EPS = 0.0001

! Panel types

PANEL_LOUVER			= 1			! INT: Style 1
PANEL_LOUVERHORDIVIDED	= 2			! INT: Style 2
PANEL_LOUVERDIVIDED		= 3			! INT: Style 3
PANEL_Z					= 4			! INT: Style 4
PANEL_FRAME				= 5			! INT: Style 5
PANEL_FRAMEHORDIVIDED	= 6			! INT: Style 6
PANEL_FULL				= 7			! INT: Style 7
PANEL_VERTBOARDS		= 8			! INT: Style 8
PANEL_ROTATEDBOARDS		= 9			! INT: Style 9
PANEL_PERFORATED		= 10		! INT: Style 10
PANEL_CUSTOM			= 11		! INT: Custom

gs_shutPanel_iType = max (1, min (vardim1(stShutterPanelTypes), gs_shutPanel_iType))

PANELSHAPE_RECT			= 0
PANELSHAPE_HALFARCH		= 1
PANELSHAPE_FULLARCH		= 2
! PANELSHAPE_TRAPEZOID		= 3
! PANELSHAPE_PENTAGON		= 4
PANELSHAPE_ELLIPS		= 5
PANELSHAPE_HALFELLIPS	= 6
bArched = (gs_shutPanel_iShape > 0)

! ==============================================================================
! Frame
! ==============================================================================

bFrameExists = 0
if	gs_shutPanel_iType = PANEL_LOUVER | \
	gs_shutPanel_iType = PANEL_LOUVERHORDIVIDED | \
	gs_shutPanel_iType = PANEL_LOUVERDIVIDED | \
	gs_shutPanel_iType = PANEL_FRAME | \
	gs_shutPanel_iType = PANEL_FRAMEHORDIVIDED | \
	gs_shutPanel_iType = PANEL_PERFORATED then

	bFrameExists = 1
endif

! ==============================================================================
! Shape modifications
! ==============================================================================

if gs_shutPanel_iShape = PANELSHAPE_RECT then gs_shutPanel_archHeight = 0
if gs_shutPanel_ishape = PANELSHAPE_ELLIPS & gs_shutPanel_archHeight > a/2 - EPS then
	gs_shutPanel_iShape = PANELSHAPE_FULLARCH
	gs_shutPanel_archHeight = a/2
endif
if gs_shutPanel_ishape = PANELSHAPE_HALFELLIPS then
	if gs_shutPanel_archHeight > a - 10 * EPS then
		gs_shutPanel_iShape = PANELSHAPE_HALFARCH
		gs_shutPanel_archHeight = a
	else
		if bFrameExists and (a - 2 * gs_shutPanel_frameWidth) < (gs_shutPanel_archHeight - gs_shutPanel_frameWidth) then
			gs_shutPanel_iShape = PANELSHAPE_HALFARCH
			gs_shutPanel_archHeight = a
		endif
	endif
endif
if gs_shutPanel_iShape = PANELSHAPE_HALFARCH then gs_shutPanel_archHeight = min(a, gs_shutPanel_archHeight)
if gs_shutPanel_iShape = PANELSHAPE_FULLARCH then gs_shutPanel_archHeight = min(a/2, gs_shutPanel_archHeight)


bEditingMode = (GLOB_CONTEXT > 20 & GLOB_CONTEXT < 30)
if bEditingMode then gs_shutPanel_iType = PANEL_FULL


]]>
</Script_1D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_PR SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_PR>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_UI SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_UI>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_VL SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
values "gs_shutPanel_type" stShutterPanelTypes
for i = 1 to vardim1(stShutterPanelTypes)
	put i
next i
values "gs_shutPanel_iType" get (NSP)


if GLOB_MODPAR_NAME = "gs_shutPanel_type" then
	gs_shutPanel_iType = 1
	for i = 2 to vardim1(stShutterPanelTypes)
		if gs_shutPanel_type = stShutterPanelTypes[i] then
			gs_shutPanel_iType = i
			i = vardim1(stShutterPanelTypes)		! break - last
		endif
	next i
	parameters gs_shutPanel_iType = gs_shutPanel_iType
else
	parameters gs_shutPanel_type = stShutterPanelTypes[gs_shutPanel_iType]
endif


! ------------------------------------------------------------------------------
! Custom parameters
! ------------------------------------------------------------------------------

if gs_shutPanel_iType = PANEL_CUSTOM then
	dim gs_pt_shutterPanel[]
	call "Shutter_Panel_Collection" parameters returned_parameters gs_pt_shutterPanel
	values "gs_cust_shutterPanel" gs_pt_shutterPanel
else
	hideparameter "gs_cust_shutterPanel"
	lock "gs_cust_shutterPanel"
endif


! ------------------------------------------------------------------------------
! Different bottom frame
! ------------------------------------------------------------------------------

if bFrameExists then
	if gs_shutPanel_BDiffBottomFrame then
		values "gs_shutPanel_frameWidthBottom" range (0, min(a/2, b/2))
	else
		hideparameter "gs_shutPanel_frameWidthBottom"
		lock "gs_shutPanel_frameWidthBottom"
	endif
else
	hideparameter "gs_shutPanel_frameWidthBottom", "gs_shutPanel_BDiffBottomFrame"
	lock "gs_shutPanel_frameWidthBottom", "gs_shutPanel_BDiffBottomFrame"
endif


! ------------------------------------------------------------------------------
! Ranges for geometric parameters
! ------------------------------------------------------------------------------

values "gs_shutPanel_frameWidth" range (0, min(a/2, b/2))
values "gs_shutPanel_Thk" range (0,)
values "gs_shutPanel_fieldThk" range (0,)
values "gs_shutPanel_louverThk" range (0,)
values "gs_shutPanel_louverWidth" range (0,)
values "gs_shutPanel_louverAngle" range [-90, 90]
values "gs_shutPanel_midFrameHorW" range (0,)
values "gs_shutPanel_midFrameVertW" range (0,)
values "gs_shutPanel_ZThk" range (0,)

if  gs_shutPanel_iType = PANEL_PERFORATED then
	holeMaxRadius = min((a - gs_shutPanel_frameWidth - gs_shutPanel_frameWidthBottom) / gs_shutPanel_nHoleHor, (b - 2 * gs_shutPanel_frameWidth) / gs_shutPanel_nHoleVert)/2
	values "gs_shutPanel_holeRadius" range (0, max(holeMaxRadius, EPS)]
	if gs_shutPanel_holeRadius > EPS then
		values "gs_shutPanel_nHoleHor" range [1, (a / gs_shutPanel_holeRadius)/2)
		values "gs_shutPanel_nHoleVert" range [1, (b / gs_shutPanel_holeRadius)/2)
	else
		values "gs_shutPanel_nHoleHor" 1
		values "gs_shutPanel_nHoleVert" 1
	endif
endif

values "gs_shutPanel_ZBoardW" range (0, a/2)


! ------------------------------------------------------------------------------
! Panel thickness for style 4 (z) & style 9 (vertical + horizontal boars) & style 8 (vertboards)
! ------------------------------------------------------------------------------

if gs_shutPanel_iType = PANEL_Z then
	gs_shutPanel_Thk = gs_shutPanel_boardThkVert + gs_shutPanel_ZThk
	parameters gs_shutPanel_Thk = gs_shutPanel_Thk
	hideparameter "gs_shutPanel_Thk"
	lock "gs_shutPanel_Thk"
endif
if gs_shutPanel_iType = PANEL_ROTATEDBOARDS then
	gs_shutPanel_Thk = gs_shutPanel_boardThkVert + gs_shutPanel_boardThkHor
	parameters gs_shutPanel_Thk = gs_shutPanel_Thk
	hideparameter "gs_shutPanel_Thk"
	lock "gs_shutPanel_Thk"
endif
if gs_shutPanel_iType = PANEL_VERTBOARDS then
	gs_shutPanel_Thk = gs_shutPanel_boardThkVert
	parameters gs_shutPanel_Thk = gs_shutPanel_Thk
	hideparameter "gs_shutPanel_Thk"
	lock "gs_shutPanel_Thk"
endif


! ------------------------------------------------------------------------------
! Locking and hiding parameters
! ------------------------------------------------------------------------------

if gs_shutPanel_iType <> PANEL_Z then
	hideparameter "gs_shutPanel_ZBoardW", "gs_shutPanel_ZWidth", "gs_shutPanel_ZThk"
	lock "gs_shutPanel_ZBoardW", "gs_shutPanel_ZWidth", "gs_shutPanel_ZThk"
endif
if gs_shutPanel_iType <> PANEL_PERFORATED then
	hideparameter "gs_shutPanel_nHoleHor", "gs_shutPanel_nHoleVert", "gs_shutPanel_holeRadius"
	lock "gs_shutPanel_nHoleHor", "gs_shutPanel_nHoleVert", "gs_shutPanel_holeRadius"
endif
if gs_shutPanel_iType <> PANEL_ROTATEDBOARDS then
	hideparameter "gs_shutPanel_boardThkHor", "gs_shutPanel_horBoardW"
	lock "gs_shutPanel_boardThkHor", "gs_shutPanel_horBoardW"
endif
if gs_shutPanel_iType <> PANEL_ROTATEDBOARDS & gs_shutPanel_iType <> PANEL_Z & gs_shutPanel_iType <> PANEL_VERTBOARDS then
	hideparameter "gs_shutPanel_boardThkVert"
	lock "gs_shutPanel_boardThkVert"
endif
if gs_shutPanel_iType <> PANEL_ROTATEDBOARDS & gs_shutPanel_iType <> PANEL_VERTBOARDS then
	hideparameter "gs_shutPanel_vertBoardW"
	lock "gs_shutPanel_vertBoardW"
endif
if gs_shutPanel_iType <> PANEL_LOUVER & gs_shutPanel_iType <> PANEL_LOUVERHORDIVIDED & gs_shutPanel_iType <> PANEL_LOUVERDIVIDED then
	hideparameter "gs_shutPanel_louverThk", "gs_shutPanel_louverWidth", "gs_shutPanel_louverAngle"
	lock "gs_shutPanel_louverThk", "gs_shutPanel_louverWidth", "gs_shutPanel_louverAngle"
endif
if gs_shutPanel_iType <> PANEL_FRAME & gs_shutPanel_iType <> PANEL_FRAMEHORDIVIDED & gs_shutPanel_iType <> PANEL_PERFORATED then
	hideparameter "gs_shutPanel_fieldThk"
	lock "gs_shutPanel_fieldThk"
endif
if not(bFrameExists) then
	hideparameter "gs_shutPanel_frameWidth"
	lock "gs_shutPanel_frameWidth"
endif
if gs_shutPanel_iType <> PANEL_LOUVERDIVIDED then
	hideparameter "gs_shutPanel_midFrameVertW"
	lock "gs_shutPanel_midFrameVertW"
endif
if gs_shutPanel_iType <> PANEL_LOUVERDIVIDED & gs_shutPanel_iType <> PANEL_LOUVERHORDIVIDED & gs_shutPanel_iType <> PANEL_FRAMEHORDIVIDED then
	hideparameter "gs_shutPanel_midFrameHorW"
	lock "gs_shutPanel_midFrameHorW"
endif


if gs_shutPanel_iType = PANEL_FULL | gs_shutPanel_iType = PANEL_VERTBOARDS then
	lock "gs_shutPanel_materialAcc"
	hideparameter "gs_shutPanel_materialAcc"
endif
if gs_shutPanel_iType = PANEL_CUSTOM then
	lock "gs_shutPanel_materialAcc", "gs_shutPanel_materialMain"
	hideparameter "gs_shutPanel_materialAcc", "gs_shutPanel_materialMain"
endif
]]>
</Script_VL>

<Comment SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Comment>

<ParamSection SectVersion="22" SectionFlags="0" SubIdent="0">
	<ParamSectHeader>
		<AutoHotspots>false</AutoHotspots>
		<StatBits>
			<STBit_FixSize/>
		</StatBits>
		<WDLeftFrame>0</WDLeftFrame>
		<WDRightFrame>0</WDRightFrame>
		<WDTopFrame>0</WDTopFrame>
		<WDBotFrame>0</WDBotFrame>
		<LayFlags>65535</LayFlags>
		<WDMirrorThickness>0</WDMirrorThickness>
		<WDWallInset>0</WDWallInset>
	</ParamSectHeader>
	<Parameters>
		<Length Name="A">
			<Description><![CDATA["Dimension 1"]]></Description>
			<Fix/>
			<Value>0.5</Value>
		</Length>
		<Length Name="B">
			<Description><![CDATA["Dimension 2"]]></Description>
			<Fix/>
			<Value>1</Value>
		</Length>
		<Length Name="ZZYZX">
			<Description><![CDATA["Height"]]></Description>
			<Fix/>
			<Value>1</Value>
		</Length>
		<Boolean Name="AC_show2DHotspotsIn3D">
			<Description><![CDATA["Show 2D Hotspots in 3D"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="ac_bottomlevel">
			<Description><![CDATA["Bottom Level"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="ac_toplevel">
			<Description><![CDATA["Top Level"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Integer Name="lod3D_sunShade">
			<Description><![CDATA["3D Detail  Level"]]></Description>
			<Value>4</Value>
		</Integer>
		<Integer Name="gs_shutPanel_iShape">
			<Description><![CDATA["Panel Shape"]]></Description>
			<Value>0</Value>
		</Integer>
		<Length Name="gs_shutter_innerOffset">
			<Description><![CDATA["Inner Offset"]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="gs_shutPanel_archHeight">
			<Description><![CDATA["Arch Height"]]></Description>
			<Value>0.5</Value>
		</Length>
		<String Name="gs_shutPanel_type">
			<Description><![CDATA["Panel Type"]]></Description>
			<Value><![CDATA["Стиль 1"]]></Value>
		</String>
		<Integer Name="gs_shutPanel_iType">
			<Description><![CDATA["Panel Type"]]></Description>
			<Value>1</Value>
		</Integer>
		<String Name="gs_cust_shutterPanel">
			<Description><![CDATA["Custom Panel Name"]]></Description>
			<Value><![CDATA[""]]></Value>
		</String>
		<Length Name="gs_shutPanel_Thk">
			<Description><![CDATA["Panel Thickness"]]></Description>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_shutPanel_frameWidth">
			<Description><![CDATA["Panel Frame Width"]]></Description>
			<Value>0.05</Value>
		</Length>
		<Boolean Name="gs_shutPanel_BDiffBottomFrame">
			<Description><![CDATA["Different Bottom Frame Width"]]></Description>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_shutPanel_frameWidthBottom">
			<Description><![CDATA["Frame Width Bottom"]]></Description>
			<Value>0.05</Value>
		</Length>
		<Boolean Name="gs_shutPanel_bAutomaticWidth">
			<Description><![CDATA["Automatic Shutter Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="gs_shutPanel_panelWidth">
			<Description><![CDATA["Panel Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_shutPanel_fieldThk">
			<Description><![CDATA["Panel Fill Thickness"]]></Description>
			<Value>0.01</Value>
		</Length>
		<Length Name="gs_shutPanel_louverThk">
			<Description><![CDATA["Louver Thickness"]]></Description>
			<Value>0.01</Value>
		</Length>
		<Length Name="gs_shutPanel_louverWidth">
			<Description><![CDATA["Louver Width"]]></Description>
			<Value>0.04</Value>
		</Length>
		<Angle Name="gs_shutPanel_louverAngle">
			<Description><![CDATA["Louver Angle"]]></Description>
			<Value>30</Value>
		</Angle>
		<Length Name="gs_shutPanel_midFrameHorW">
			<Description><![CDATA["Horizontal Frame Divider Width"]]></Description>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_shutPanel_midFrameVertW">
			<Description><![CDATA["Vertical Frame Divider Width"]]></Description>
			<Value>0.05</Value>
		</Length>
		<Integer Name="gs_shutPanel_nHoleHor">
			<Description><![CDATA["Holes Number Horizontal"]]></Description>
			<Value>5</Value>
		</Integer>
		<Integer Name="gs_shutPanel_nHoleVert">
			<Description><![CDATA["Holes Number Vertical"]]></Description>
			<Value>8</Value>
		</Integer>
		<Length Name="gs_shutPanel_holeRadius">
			<Description><![CDATA["Hole Radius"]]></Description>
			<Value>0.01</Value>
		</Length>
		<Length Name="gs_shutPanel_ZBoardW">
			<Description><![CDATA["Vertical Board Width"]]></Description>
			<Value>0.1</Value>
		</Length>
		<Length Name="gs_shutPanel_ZWidth">
			<Description><![CDATA["Z Frame Width"]]></Description>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_shutPanel_ZThk">
			<Description><![CDATA["Z Frame Thickness"]]></Description>
			<Value>0.025</Value>
		</Length>
		<Length Name="gs_shutPanel_boardThkVert">
			<Description><![CDATA["Vertical Boards Thickness"]]></Description>
			<Value>0.025</Value>
		</Length>
		<Length Name="gs_shutPanel_boardThkHor">
			<Description><![CDATA["Horizontal Boards Thickness"]]></Description>
			<Value>0.025</Value>
		</Length>
		<Length Name="gs_shutPanel_vertBoardW">
			<Description><![CDATA["Vertical Boards Approximate Width"]]></Description>
			<Value>0.08</Value>
		</Length>
		<Length Name="gs_shutPanel_horBoardW">
			<Description><![CDATA["Horizontal Boards Approximate Width"]]></Description>
			<Value>0.115</Value>
		</Length>
		<PenColor Name="gs_sunShade_cutLinesPen">
			<Description><![CDATA["Cut Line Pen"]]></Description>
			<Value>1</Value>
		</PenColor>
		<PenColor Name="gs_sunShade_unCutLinesPen">
			<Description><![CDATA["Uncut Line Pen"]]></Description>
			<Value>1</Value>
		</PenColor>
		<FillPattern Name="gs_sunShade_cutFillType">
			<Description><![CDATA["Cut Fill Type"]]></Description>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_sunShade_cutFillPen">
			<Description><![CDATA["Cut Fill Pen"]]></Description>
			<Value>1</Value>
		</PenColor>
		<PenColor Name="gs_sunShade_cutFillBackPen">
			<Description><![CDATA["Cut Fill Background Pen"]]></Description>
			<Value>-1</Value>
		</PenColor>
		<Material Name="gs_shutPanel_materialMain">
			<Description><![CDATA["Shutter Panel Surface"]]></Description>
			<Value>15</Value>
		</Material>
		<Material Name="gs_shutPanel_materialAcc">
			<Description><![CDATA["Shutter Panel Frame Surface"]]></Description>
			<Value>52</Value>
		</Material>
		<String Name="stShutterPanelTypes">
			<Description><![CDATA["Shutter Panel Types"]]></Description>
			<ArrayValues FirstDimension="11" SecondDimension="0">
				<AVal Row="1"><![CDATA["Стиль 1"]]></AVal>
				<AVal Row="2"><![CDATA["Стиль 2"]]></AVal>
				<AVal Row="3"><![CDATA["Стиль 3"]]></AVal>
				<AVal Row="4"><![CDATA["Стиль 4"]]></AVal>
				<AVal Row="5"><![CDATA["Стиль 5"]]></AVal>
				<AVal Row="6"><![CDATA["Стиль 6"]]></AVal>
				<AVal Row="7"><![CDATA["Стиль 7"]]></AVal>
				<AVal Row="8"><![CDATA["Стиль 8"]]></AVal>
				<AVal Row="9"><![CDATA["Стиль 9"]]></AVal>
				<AVal Row="10"><![CDATA["Стиль 10"]]></AVal>
				<AVal Row="11"><![CDATA["Специальный"]]></AVal>
			</ArrayValues>
		</String>
		<Integer Name="nArchResolution">
			<Description><![CDATA["Arch Resolution"]]></Description>
			<Value>16</Value>
		</Integer>
		<Length Name="smallRadiusEllips">
			<Description><![CDATA["Smaller radius of ellips arch"]]></Description>
			<Value>0</Value>
		</Length>
	</Parameters>
</ParamSection>

<Copyright SectVersion="1" SectionFlags="0" SubIdent="0">
	<Author>GRAPHISOFT</Author>
	<License>
		<Type>CC BY-ND</Type>
		<Version>3.0</Version>
	</License>
</Copyright>

</Symbol>
