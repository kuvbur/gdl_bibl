<?xml version="1.0" encoding="UTF-8"?>
<Symbol IsArchivable="false" IsPlaceable="false" MainGUID="BB55E203-4E0A-487F-9CBE-16E1DD578EDA" MigrationValue="Normal" Owner="1196638531" Signature="1196644685" Version="38">
<Ancestry SectVersion="1" SectionFlags="0" SubIdent="0" Template="false">
	<MainGUID>F938E33A-329D-4A36-BE3E-85E126820996</MainGUID>
	<MainGUID>103E8D2C-8230-42E1-9597-46F84CCE28C0</MainGUID>
	<MainGUID>B2970E4C-8680-4061-8670-2F4B638F3953</MainGUID>
</Ancestry>

<CalledMacros SectVersion="2" SectionFlags="0" SubIdent="0">
</CalledMacros>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_3D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
LOD3D_SIMPLEPLANE = 1
LOD3D_DETAILEDPLANE = 2
LOD3D_SIMPLEPANEL = 3
LOD3D_DETAILEDPANEL = 4

dim shutLampoly[]
shutLampoly[1]	= 0
posShutLam		= 0
lengthShutLam	= 0

endSegmentDist = 0

! --- Parameters ---------------------------------------------------------------

plateThk	= 0.003								! Thickness of one piece of shutter
plateDist	= gs_shutLam_segmentWidth - 0.01	! Distance between pieces of shutter
boxWallThk	= 0.005								! Depth of box wall

unID = 10200

bCurvedWall = 0
if abs (WIDO_ORIG_DIST) > EPS then bCurvedWall = 1

addx -(rightCornerCorr - leftCornerCorr) / 2

if gs_shutLam_iPlacement = SHUTLAM_ONFACADE | gs_shutLam_iPlacement = SHUTLAM_TOWINDOW then
	if lod3D_sunShade = LOD3D_SIMPLEPANEL | lod3D_sunShade = LOD3D_DETAILEDPANEL then
		gosub "fixedOnWindowOrFacade_detailed"
	else
		gosub "fixedOnWindowOrFacade_simple"
	endif
else
	if lod3D_sunShade = LOD3D_SIMPLEPANEL | lod3D_sunShade = LOD3D_DETAILEDPANEL then
		gosub "fixedBehindFacade"
	else
		end		! Do not draw anything in simple!
	endif
endif

del 1
! -----------------------------------------------------------------------------
end posShutLam,
	lengthShutLam,
	shutLampoly
! -----------------------------------------------------------------------------


! -----------------------------------------------------------------------------
"fixedOnWindowOrFacade_simple":
! -----------------------------------------------------------------------------

	add -boxLength / 2, heightWithoutBox, -EPS

	material gs_shutLam_matBox

	poly_ 4,
		0,			0,						1,
		boxLength,	0,						1,
		boxLength,	gs_shutLam_boxHeight,	1,
		0,			gs_shutLam_boxHeight,	1

	del 1

return


! -----------------------------------------------------------------------------
"fixedOnWindowOrFacade_detailed":
! -----------------------------------------------------------------------------

	if gs_shutLam_iPlacement = SHUTLAM_ONFACADE then
		addz -gs_shutLam_distFromWall
		posShutLam = -gs_shutLam_distFromWall
	else
		addz WIDO_SILL
		posShutLam = WIDO_SILL
	endif

	gosub "Draw_Box"

	if gs_shutLam_bRail then gosub "Draw_Rail"

	gosub "Draw_Lamelles"

	del 1


return


! -----------------------------------------------------------------------------
"fixedBehindFacade":
! -----------------------------------------------------------------------------

	addz gs_shutLam_boxWidth + gs_shutLam_coverWidth
	posShutLam = gs_shutLam_boxWidth + gs_shutLam_coverWidth

	gosub "Draw_Box"

	if gs_shutLam_bRail then gosub "Draw_Rail"

	gosub "Draw_Lamelles"

	del 1
return


! -----------------------------------------------------------------------------
"Draw_Box":
! -----------------------------------------------------------------------------

	material gs_shutLam_matBox

	add -boxLength/2, heightWithoutBox, 0
	roty 90

	if (gs_shutLam_iPlacement <> SHUTLAM_ONFACADE | gs_shutLam_distFromWall < -EPS) & \
		((gs_shutLam_boxHeight+gs_shutLam_distFromHead) > EPS) then


		material WALL_MAT_EDGE
		wallniche 5, 1, 2+64+128,
			0, 0, 1, boxLength,
			0,						-gs_shutLam_distFromHead,		15,
			gs_shutLam_boxWidth,	-gs_shutLam_distFromHead,		15,
			gs_shutLam_boxWidth,	 gs_shutLam_boxHeight,			15,
			0,						 gs_shutLam_boxHeight,			15,
			0,						-gs_shutLam_distFromHead,		-1

		material gs_shutLam_matBox

		if gs_shutLam_cutWallBehind & gs_shutLam_iPlacement = SHUTLAM_BEHIND then
			sect_fill	gs_sunShade_insFillType, gs_sunShade_insFillBackPen,
						gs_sunShade_insFillPen, gs_sunShade_cutLinesPen

			if gs_shutLam_iPlacement = SHUTLAM_TOWINDOW then
				cutBackDist = WALL_THICKNESS - WIDO_SILL
			else
				cutBackDist = WALL_THICKNESS - gs_shutLam_coverWidth - gs_shutLam_boxWidth
			endif

			if cutBackDist > EPS then
				if (abs(WALL_INCL) > EPS) then
					wallIsLeft		= (SYMB_ROTANGLE > EPS) exor WIDO_REVEAL_SIDE
					bFactor = SYMB_MIRRORED exor WIDO_REVEAL_SIDE exor wallIsLeft
					incFactor = not(bFactor) - bFactor
					incX = incFactor * tan(WALL_INCL)

					inclDiff =  -(boxLength / 2) * incX
				else
					inclDiff =  0
				endif

				if WIDO_REVEAL_SIDE then
					matSide = WALL_MAT_B
				else
					matSide = WALL_MAT_A
				endif
				matEdge = WALL_MAT_EDGE

				rotx -90

				material matEdge
				wallniche 5, 1, 2+64+128,
					0, 0, 1, gs_shutLam_boxHeight,
					0,								 0,			2+8+16+64,
					0,								-boxLength,	2+8+16+64,
					-cutBackDist - 0.1 + inclDiff,	-boxLength,	2+8+16+64,
					-cutBackDist - 0.1 - inclDiff,	 0,			2+8+16+64,
					0,								 0,			-1


				cprism_ matEdge, matEdge, matSide,
					5, gs_shutLam_boxHeight,
					0,							 0,			15+64,
					0,							-boxLength,	15+64,
					-cutBackDist + inclDiff,	-boxLength,	8,
					-cutBackDist - inclDiff,	 0,			13,
					0,							 0,			-1

				del 1
			endif
		endif
	endif

	sect_fill	gs_sunShade_cutFillType, gs_sunShade_cutFillBackPen,
				gs_sunShade_cutFillPen, gs_sunShade_cutLinesPen

	material gs_shutLam_matBox

	if gs_shutLam_bOpenBox then
		for i = 1 to 2
			if i = 1 then
				stat = 11
			else
				stat = 14
			endif

			prism_ 7, boxWallThk,
				0,									0,						stat,
				boxWallThk,							0,						13,
				gs_shutLam_boxWidth - boxWallThk,	0,						stat-2,
				gs_shutLam_boxWidth,				0,						stat,
				gs_shutLam_boxWidth,				gs_shutLam_boxHeight,	stat,
				0,									gs_shutLam_boxHeight,	stat,
				0,									0,						-1

			addz boxLength - boxWallThk
		next i
		del 2

		addz boxWallThk

		prism_ 9, boxLength - 2 * boxWallThk,
			0,									0,									10,
			boxWallThk,							0,									15,
			boxWallThk,							gs_shutLam_boxHeight - boxWallThk,	15,
			gs_shutLam_boxWidth - boxWallThk,	gs_shutLam_boxHeight - boxWallThk,	15,
			gs_shutLam_boxWidth - boxWallThk,	0,									10,
			gs_shutLam_boxWidth,				0,									10,
			gs_shutLam_boxWidth,				gs_shutLam_boxHeight,				10,
			0,									gs_shutLam_boxHeight,				10,
			0,									0,									-1


		del 1

	else

		prism_ 5, boxLength,
			0,						0,						15,
			gs_shutLam_boxWidth,	0,						15,
			gs_shutLam_boxWidth,	gs_shutLam_boxHeight,	15,
			0,						gs_shutLam_boxHeight,	15,
			0,						0,						-1
	endif

	if gs_shutLam_iPlacement <> SHUTLAM_ONFACADE then
		lengthShutLam = boxLength
		if gs_shutLam_bRail then
			shutLampoly[1] = 0
			shutLampoly[2] = cutHeightWithoutBox
			shutLampoly[3] = 0
			shutLampoly[4] = cutHeightWithoutBox + gs_shutLam_boxHeight
			shutLampoly[5] = -gs_shutLam_boxWidth
			shutLampoly[6] = cutHeightWithoutBox + gs_shutLam_boxHeight
			shutLampoly[7] = -gs_shutLam_boxWidth
			shutLampoly[8] = cutHeightWithoutBox
			shutLampoly[9] = -gs_shutLam_boxWidth/2 - sideRailWidth/2
			shutLampoly[10] = cutHeightWithoutBox
			shutLampoly[11] = -gs_shutLam_boxWidth/2 - sideRailWidth/2
			shutLampoly[12] = 0
			shutLampoly[13] = -gs_shutLam_boxWidth/2 + sideRailWidth/2
			shutLampoly[14] = 0
			shutLampoly[15] = -gs_shutLam_boxWidth/2 + sideRailWidth/2
			shutLampoly[16] = cutHeightWithoutBox
			shutLampoly[17] = 0
			shutLampoly[18] = cutHeightWithoutBox
		else
			shutLampoly[1] = 0
			shutLampoly[2] = cutHeightWithoutBox
			shutLampoly[3] = 0
			shutLampoly[4] = cutHeightWithoutBox + gs_shutLam_boxHeight
			shutLampoly[5] = -gs_shutLam_boxWidth
			shutLampoly[6] = cutHeightWithoutBox + gs_shutLam_boxHeight
			shutLampoly[7] = -gs_shutLam_boxWidth
			shutLampoly[8] = cutHeightWithoutBox
			shutLampoly[9] = 0
			shutLampoly[10] = cutHeightWithoutBox
		endif
	endif

	wallDist = gs_casingThkOnFacade + gs_shutLam_distFromWall
	if gs_shutLam_iPlacement = SHUTLAM_ONFACADE & wallDist > EPS then
		for i = 1 to 2
			if wallDist > 3 * boxWallThk & gs_shutLam_boxHeight > 0.025 then
				prism_ 7, 0.025,
					 0,											gs_shutLam_boxHeight,							15,
					-wallDist,					gs_shutLam_boxHeight,							15,
					-wallDist,					gs_shutLam_boxHeight - 2 * boxWallThk - 0.025,	15,
					-wallDist + 2 * boxWallThk,	gs_shutLam_boxHeight - 2 * boxWallThk - 0.025,	15,
					-wallDist + 2 * boxWallThk,	gs_shutLam_boxHeight - 2 * boxWallThk,			15,
					 0,											gs_shutLam_boxHeight - 2 * boxWallThk,			15,
					 0,											gs_shutLam_boxHeight,							-1
			else
				prism_ 5, 0.025,
					 0,							gs_shutLam_boxHeight,					15,
					-wallDist,	gs_shutLam_boxHeight,					15,
					-wallDist,	gs_shutLam_boxHeight - 2 * boxWallThk,	15,
					 0,							gs_shutLam_boxHeight - 2 * boxWallThk,	15,
					 0,							gs_shutLam_boxHeight,					-1

			endif
			addz boxLength - 0.025
		next i
		del 2
	endif

	del 2

return

! -----------------------------------------------------------------------------
"Draw_Rail":
! -----------------------------------------------------------------------------

	material gs_shutLam_matBox

	for i = 1 to 2
		rotx -90
		add boxLength/2, gs_shutLam_boxWidth/2 - sideRailThk/2, 0
		prism_ 5, heightWithoutBox,
			 0,				0,				15,
			-sideRailWidth,	0,				15,
			-sideRailWidth,	sideRailThk,	15,
			 0,				sideRailThk,	15,
			 0,				0,				-1

		if gs_shutLam_iPlacement = SHUTLAM_ONFACADE then
			prism_ 5, sideRailThk,
				 0,				 0,																	15,
				-sideRailWidth,	 0,																	15,
				-sideRailWidth,	-gs_shutLam_boxWidth/2 + sideRailThk/2 - gs_shutLam_distFromWall,	15,
				 0,				-gs_shutLam_boxWidth/2 + sideRailThk/2 - gs_shutLam_distFromWall,	15,
				 0,				 0,																	-1
		endif
		del 2

		mulx -1
	next i
	del 2

return

! -----------------------------------------------------------------------------
"Draw_Lamelles":
! -----------------------------------------------------------------------------

	if gs_shutter_closedHeight < endSegmentDist then gs_shutter_closedHeight = endSegmentDist

	add 0, heightWithoutBox, -gs_shutLam_boxWidth/2
	hotspot 0, 0, 0, unID, gs_shutter_closedHeight, 1 + 128, gs_shutter_opHeight : unID = unID + 1
	hotspot 0, -gs_shutter_closedHeight, 0, unID, gs_shutter_closedHeight, 2, gs_shutter_opHeight : unID = unID + 1
	hotspot 0, 1, 0, unID, gs_shutter_closedHeight, 3, gs_shutter_opHeight : unID = unID + 1
	del 1

	segmentLength = boxLength - max(sideRailWidth, boxWallThk * gs_shutLam_bOpenBox) * 2
	endSegmentDist = plateThk*3

	gs_shutter_closedHeight = gs_shutter_closedHeight + (gs_shutLam_bOpenBox * gs_shutLam_boxHeight * 2/3)
	numberOfPlates = max(0, int((gs_shutter_closedHeight - endSegmentDist) / plateDist))

	if numberOfPlates > 0 then plateDist = (gs_shutter_closedHeight - endSegmentDist)/ numberOfPlates

	add segmentLength/2, heightWithoutBox - plateDist/2 + (gs_shutLam_bOpenBox * gs_shutLam_boxHeight * 2/3), -gs_shutLam_boxWidth/2
	rotx 90
	roty -90
	material gs_shutLam_matLam

	if numberOfPlates > 0 then
		for i = 1 to numberOfPlates
			rotz gs_shutLam_rotation

			prism_ 9, segmentLength,
				plateThk/2, gs_shutLam_segmentWidth/2, 15,
				plateThk/2-plateThk, gs_shutLam_segmentWidth/2-gs_shutLam_segmentWidth/3, 79,
				plateThk/2-plateThk, -gs_shutLam_segmentWidth/2+gs_shutLam_segmentWidth/3, 79,
				plateThk/2, -gs_shutLam_segmentWidth/2, 15,
			   -plateThk/2, -gs_shutLam_segmentWidth/2, 15,
			   -plateThk/2-plateThk, -gs_shutLam_segmentWidth/2+gs_shutLam_segmentWidth/3, 79,
			   -plateThk/2-plateThk,  gs_shutLam_segmentWidth/2-gs_shutLam_segmentWidth/3, 79,
			   -plateThk/2, gs_shutLam_segmentWidth/2, 15,
				plateThk/2, gs_shutLam_segmentWidth/2, -1

			del 1

			addx plateDist
		next i
	endif

	addx -plateDist/2 + plateThk * 3 - plateThk/2

	prism_ 9, segmentLength,
		-plateThk, gs_shutLam_segmentWidth/2-plateThk/2, 15,
		-plateThk, -gs_shutLam_segmentWidth/2+plateThk/2, 15,
		 0, -gs_shutLam_segmentWidth/2+plateThk/2, 15,
		 0, -gs_shutLam_segmentWidth/2, 15,
		 plateThk/2, -gs_shutLam_segmentWidth/2, 15,
		 plateThk/2,  gs_shutLam_segmentWidth/2, 15,
		 0,  gs_shutLam_segmentWidth/2, 15,
		 0,  gs_shutLam_segmentWidth/2-plateThk/2, 15,
		-plateThk, gs_shutLam_segmentWidth/2-plateThk/2, -1

	del 4 + numberOfPlates

return

]]>
</Script_3D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_2D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
if gs_sunShade_iType = SUNSHADE_VENETIAN then end

line_type gs_sunShade_lineType
pen gs_sunShade_unCutLinesPen

dummyPen = 1

add2 -(rightCornerCorr - leftCornerCorr) / 2, 0

if gs_shutLam_iPlacement = SHUTLAM_BEHIND then

	line2 -boxLength/2, gs_shutLam_coverWidth, boxLength/2, gs_shutLam_coverWidth
else
	if  gs_shutLam_iPlacement = SHUTLAM_ONFACADE then
		add2 0, -gs_shutLam_distFromWall - gs_casingThkOnFacade
	else
		add2 0, WIDO_SILL + gs_casingThkOnFacade
	endif

	if gs_shutLam_iPlacement = SHUTLAM_ONFACADE & gs_shutLam_distFromWall > EPS then
		inLineStat = 1
	else
		inLineStat = 0
	endif

	poly2_b 5, 1+4, dummyPen, dummyPen,
			-boxLength/2,	 0,							1,
			-boxLength/2,	-gs_shutLam_boxWidth,	1,
			 boxLength/2,	-gs_shutLam_boxWidth,	1,
			 boxLength/2,	 0,							inLineStat,
			-boxLength/2,	 0,							-1


	del 1
endif

del 1
]]>
</Script_2D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_1D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
EPS = 0.0001

SUNSHADE_EXTVENETIAN	= 7
SUNSHADE_VENETIAN		= 8

SHUTLAM_ONFACADE	= 1
SHUTLAM_TOWINDOW	= 2
SHUTLAM_BEHIND		= 3

gs_shutLam_iPlacement = max (1, min(vardim1(stShutLamPlacement), gs_shutLam_iPlacement))

SHUTLAM_ONCASING = 1
SHUTLAM_ONWALL = 2

gs_shutLam_iRailPos = max (1, min(vardim1(stShutLamRailPos), gs_shutLam_iRailPos))


! ------------------------------------------------------------------------------
! Substitute parameters for inLintel Type
! ------------------------------------------------------------------------------

if gs_sunShade_iType = SUNSHADE_VENETIAN then
	gs_shutLam_iPlacement	= SHUTLAM_BEHIND
	gs_shutLam_coverWidth		= WIDO_SILL - gs_shutLam2_distFromWindow - gs_shutLam2_boxWidth/2
	gs_shutLam_distFromHead		= gs_shutLam2_distFromHead
	gs_shutLam_cutWallBehind	= 0
	gs_shutLam_segmentWidth		= gs_shutLam2_segmentWidth
	gs_shutLam_boxHeight		= gs_shutLam2_boxHeight
	gs_shutLam_boxWidth			= gs_shutLam2_boxWidth
	gs_shutLam_bOpenBox			= 0
	gs_shutter_closedHeight		= gs_shutter_closedHeight
	gs_shutLam_rotation			= gs_shutLam2_rotation
	gs_shutLam_bRail			= 0
endif


! ------------------------------------------------------------------------------
! Variables for geometry
! ------------------------------------------------------------------------------

heightWithoutBox = b + gs_shutLam_distFromHead

if gs_shutLam_distFromHead > eps & ((gs_shutLam_distFromHead < gs_casingThkAtWindow) | not(gs_shutLam_bRail)) then
	cutHeightWithoutBox = b
else
	cutHeightWithoutBox = heightWithoutBox
endif

if gs_shutLam_bRail then
	sideRailWidth = 0.025						! Width of side rail
	sideRailThk = 0.025							! Thickness of side rail
else
	sideRailWidth = 0							! Width of side rail
	sideRailThk = 0								! Thickness of side rail
endif

boxLength			= a				! Box width

rightCornerCorr = 0
leftCornerCorr = 0
if gs_shutLam_iPlacement = SHUTLAM_ONFACADE then
	boxLength = boxLength + sideRailWidth * 2

	if bLeftCornerFunction then
		if abs(leftCornerAngle - 180) < EPS then
			leftCornerCorr = 0
		else
			if leftCornerAngle < 180 then
				leftCornerCorr = sideRailWidth
			else
				leftCornerCorr = sideRailWidth - ( gs_shutLam_boxWidth + gs_casingThkOnFacade + gs_shutLam_distFromWall) * tan(90 - leftCornerAngle/2)
			endif
		endif
	endif
	if bRightCornerFunction then
		if abs(rightCornerAngle - 180) < EPS then
			rightCornerCorr = 0
		else
			if rightCornerAngle < 180 then
				rightCornerCorr = sideRailWidth
			else
				rightCornerCorr =sideRailWidth -  ( gs_shutLam_boxWidth + gs_casingThkOnFacade + gs_shutLam_distFromWall ) * tan(90 - rightCornerAngle/2)
			endif
		endif
	endif

	boxLength = a + 2 * sideRailWidth
endif

if gs_shutLam_iPlacement = SHUTLAM_TOWINDOW then
	if bRightCornerFunction then
		if abs(rightCornerAngle - 180) < EPS then
			rightCornerCorr = 0
		else
			if rightCornerAngle < 180 then
				rightCornerCorr = WIDO_SILL * tan(90 - rightCornerAngle/2)
			else
				rightCornerCorr = (WIDO_SILL - gs_shutLam_boxWidth) * tan(90 - rightCornerAngle/2)
			endif
		endif
	endif
	if bLeftCornerFunction then
		if abs(leftCornerAngle - 180) < EPS then
			leftCornerCorr = 0
		else
			if leftCornerAngle < 180 then
				leftCornerCorr = WIDO_SILL * tan(90 - leftCornerAngle/2)
			else
				leftCornerCorr = (WIDO_SILL - gs_shutLam_boxWidth) * tan(90 - leftCornerAngle/2)
			endif
		endif
	endif
endif

if gs_shutLam_iPlacement = SHUTLAM_BEHIND then
	if bRightCornerFunction then
		if abs(rightCornerAngle - 180) < EPS then
			rightCornerCorr = 0
		else
			if rightCornerAngle < 180 then
				rightCornerCorr = (gs_shutLam_coverWidth + gs_shutLam_boxWidth) * tan(90 - rightCornerAngle/2)
			else
				rightCornerCorr = gs_shutLam_coverWidth * tan(90 - rightCornerAngle/2)
			endif
		endif
	endif
	if bLeftCornerFunction then
		if abs(leftCornerAngle - 180) < EPS then
			leftCornerCorr = 0
		else
			if leftCornerAngle < 180 then
				leftCornerCorr = (gs_shutLam_coverWidth + gs_shutLam_boxWidth) * tan(90 - leftCornerAngle/2)
			else
				leftCornerCorr = gs_shutLam_coverWidth * tan(90 - leftCornerAngle/2)
			endif
		endif
	endif
endif

boxLength = boxLength - rightCornerCorr - leftCornerCorr


]]>
</Script_1D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_PR SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_PR>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_UI SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_UI>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_VL SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
if gs_sunShade_iType = SUNSHADE_VENETIAN then
	gosub "paramSettingsForInLintel"
else
	lock	"gs_shutLam2_boxHeight",
			"gs_shutLam2_boxWidth",
			"gs_shutLam2_distFromWindow",
			"gs_shutLam2_distFromHead",
			"gs_shutLam2_axisFromHead",
			"gs_shutLam2_segmentWidth",
			"gs_shutLam2_rotation"

	hideparameter	"gs_shutLam2_boxHeight",
			"gs_shutLam2_boxWidth",
			"gs_shutLam2_distFromWindow",
			"gs_shutLam2_distFromHead",
			"gs_shutLam2_axisFromHead",
			"gs_shutLam2_segmentWidth",
			"gs_shutLam2_rotation"
endif


if gs_sunShade_iType = SUNSHADE_EXTVENETIAN then
	gosub "paramSettingsForExtVenetian"
else
	lock	"gs_shutLam_placement",
			"gs_shutLam_iPlacement",
			"gs_shutLam_boxHeight",
			"gs_shutLam_boxWidth",
			"gs_shutLam_bOpenBox",
			"gs_shutLam_distFromWall",
			"gs_shutLam_coverWidth",
			"gs_shutLam_distFromHead",
			"gs_shutLam_cutWallBehind",
			"gs_shutLam_segmentWidth",
			"gs_shutLam_rotation",
			"gs_shutLam_bRail",
			"gs_shutLam_railPos"

	hideparameter	"gs_shutLam_placement",
			"gs_shutLam_boxHeight",
			"gs_shutLam_boxWidth",
			"gs_shutLam_bOpenBox",
			"gs_shutLam_distFromWall",
			"gs_shutLam_coverWidth",
			"gs_shutLam_distFromHead",
			"gs_shutLam_cutWallBehind",
			"gs_shutLam_segmentWidth",
			"gs_shutLam_rotation",
			"gs_shutLam_bRail",
			"gs_shutLam_railPos"

endif

if not((gs_shutLam_iPlacement = SHUTLAM_BEHIND) & gs_shutLam_cutWallBehind) then
	lock	"gs_sunShade_insFillType",
			"gs_sunShade_insFillPen",
			"gs_sunShade_insFillBackPen"

	hideparameter	"gs_sunShade_insFillType",
					"gs_sunShade_insFillPen",
					"gs_sunShade_insFillBackPen"
endif

values "gs_shutter_opHeight" range [0, sunShadeHeight3D + gs_shutLam_distFromHead]
values "gs_shutter_closedHeight" range [0, sunShadeHeight3D + gs_shutLam_distFromHead]

if GLOB_MODPAR_NAME = "gs_shutter_opHeight" then
	gs_shutter_closedHeight = sunShadeHeight3D + gs_shutLam_distFromHead - gs_shutter_opHeight
	parameters gs_shutter_closedHeight = gs_shutter_closedHeight
else
	gs_shutter_opHeight = max (0, sunShadeHeight3D + gs_shutLam_distFromHead - gs_shutter_closedHeight)
	parameters gs_shutter_opHeight = gs_shutter_opHeight
endif


! ------------------------------------------------------------------------------
end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end
! ------------------------------------------------------------------------------


! ==============================================================================
"paramSettingsForExtVenetian":
! ==============================================================================

	dim enabledVenetianConst[]
	dim iEnabledVenetianconst[]
	nEnabledTypes = 0

	for i = 1 to vardim1(stShutLamPlacement)
		if bittest (gs_shutLam_placementEnable, i-1) then
			nEnabledTypes = nEnabledTypes + 1
			enabledVenetianConst[nEnabledTypes] = stShutLamPlacement[i]
			iEnabledVenetianconst[nEnabledTypes] = i
		endif
	next i

	values "gs_shutLam_placement" enabledVenetianConst
	values "gs_shutLam_iPlacement" iEnabledVenetianconst

	if GLOB_MODPAR_NAME = "gs_shutLam_placement" then
		gs_shutLam_iPlacement = SHUTLAM_ONFACADE
		if gs_shutLam_placement = stShutLamPlacement[2] then gs_shutLam_iPlacement = SHUTLAM_TOWINDOW
		if gs_shutLam_placement = stShutLamPlacement[3] then gs_shutLam_iPlacement = SHUTLAM_BEHIND
		parameters gs_shutLam_iPlacement = gs_shutLam_iPlacement
	else
		parameters gs_shutLam_placement = stShutLamPlacement[gs_shutLam_iPlacement]
	endif

	values "gs_shutLam_rotation" range [0, 85]


	! -----------------------------------------------------------------------------
	! Defaults by Placement
	! -----------------------------------------------------------------------------

	if GLOB_MODPAR_NAME = "gs_shutLam_placement" | GLOB_MODPAR_NAME = "gs_shutLam_iPlacement" then
		if gs_shutLam_iPlacement = SHUTROLL_ONFACADE then
			gs_shutLam_distFromHead = 0
			parameters gs_shutLam_distFromHead = gs_shutLam_distFromHead
		endif
		if gs_shutLam_iPlacement = SHUTROLL_TOWINDOW then
			gs_shutLam_distFromHead = -gs_shutLam_boxHeight
			parameters gs_shutLam_distFromHead = gs_shutLam_distFromHead
		endif
		if gs_shutLam_iPlacement = SHUTROLL_BEHIND then
			gs_shutLam_distFromHead = gs_reveal_top
			parameters gs_shutLam_distFromHead = gs_shutLam_distFromHead
		endif
	endif

	! -----------------------------------------------------------------------------
	! Rail Position
	! -----------------------------------------------------------------------------

	values "gs_shutLam_railPos" stShutLamRailPos
	values "gs_shutLam_iRailPos" SHUTLAM_ONCASING, SHUTLAM_ONWALL

	if GLOB_MODPAR_NAME = "gs_shutLam_railPos" then
		gs_shutLam_iRailPos =  SHUTLAM_ONCASING
		if gs_shutLam_railPos = stShutLamRailPos[2] then gs_shutLam_iRailPos =  SHUTLAM_ONWALL
		parameters gs_shutLam_iRailPos = gs_shutLam_iRailPos
	else
		gs_shutLam_railPos = stShutLamRailPos[1]
		if gs_shutLam_iRailPos =  SHUTLAM_ONWALL then gs_shutLam_railPos = stShutLamRailPos[2]
		parameters gs_shutLam_railPos = gs_shutLam_railPos
	endif

	if not(gs_shutLam_bRail) then
		lock "gs_shutLam_railPos", "gs_shutLam_iRailPos"
	endif

	if gs_shutLam_iPlacement = SHUTLAM_ONFACADE then
		lock "gs_shutLam_railPos", "gs_shutLam_iRailPos", "gs_shutLam_showCasingBehind"
		hideparameter "gs_shutLam_railPos", "gs_shutLam_iRailPos", "gs_shutLam_showCasingBehind"
	endif

return


! ==============================================================================
"paramSettingsForInLintel":
! ==============================================================================

	if GLOB_MODPAR_NAME = "gs_shutLam2_axisFromHead" then
		gs_shutLam2_distFromHead = gs_shutLam2_axisFromHead - gs_shutLam2_boxHeight/2
		parameters gs_shutLam2_distFromHead = gs_shutLam2_distFromHead
	else
		gs_shutLam2_axisFromHead = gs_shutLam2_distFromHead + gs_shutLam2_boxHeight/2
		parameters gs_shutLam2_axisFromHead = gs_shutLam2_axisFromHead
	endif

	values "gs_shutLam2_rotation" range [0, 85]

return

]]>
</Script_VL>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Comment SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Comment>

<ParamSection SectVersion="26" SectionFlags="0" SubIdent="0">
	<ParamSectHeader>
		<Version>26</Version>
		<AutoHotspots>false</AutoHotspots>
		<StatBits>
			<STBit_FixSize/>
		</StatBits>
		<WDLeftFrame>0</WDLeftFrame>
		<WDRightFrame>0</WDRightFrame>
		<WDTopFrame>0</WDTopFrame>
		<WDBotFrame>0</WDBotFrame>
		<LayFlags>65535</LayFlags>
		<WDMirrorThickness>0</WDMirrorThickness>
		<WDWallInset>0</WDWallInset>
		<SymbolColor>0</SymbolColor>
	</ParamSectHeader>
	<Parameters>
		<Length Name="A">
			<Description><![CDATA["Dimension 1"]]></Description>
			<Fix/>
			<Value>1</Value>
		</Length>
		<Length Name="B">
			<Description><![CDATA["Dimension 2"]]></Description>
			<Fix/>
			<Value>1</Value>
		</Length>
		<Length Name="ZZYZX">
			<Description><![CDATA["Height"]]></Description>
			<Fix/>
			<Value>1</Value>
		</Length>
		<Boolean Name="AC_show2DHotspotsIn3D">
			<Description><![CDATA["Show 2D Hotspots in 3D"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="ac_bottomlevel">
			<Description><![CDATA["Bottom Level"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="ac_toplevel">
			<Description><![CDATA["Top Level"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="sunShadeHeight3D">
			<Description><![CDATA["Sunshade Height as Drawn in 3D"]]></Description>
			<Value>1</Value>
		</Length>
		<Integer Name="lod3D_sunShade">
			<Description><![CDATA["3D Detail Level"]]></Description>
			<Value>4</Value>
		</Integer>
		<Integer Name="gs_sunShade_iType">
			<Description><![CDATA["Sunshade Type"]]></Description>
			<Value>8</Value>
		</Integer>
		<Length Name="gs_shutter_opHeight">
			<Description><![CDATA["3D Opening Height"]]></Description>
			<Value>1</Value>
		</Length>
		<Length Name="gs_shutter_closedHeight">
			<Description><![CDATA["3D Closed Height"]]></Description>
			<Value>0</Value>
		</Length>

		<!-- gs_shutLamTitle: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_shutLamTitle">
			<Description><![CDATA["External Venetian Blinds Parameters"]]></Description>
		</Title>
		<String Name="gs_shutLam_placement">
			<Description><![CDATA["Placement"]]></Description>
			<Value><![CDATA["Фиксация на Фасаде"]]></Value>
		</String>
		<Integer Name="gs_shutLam_iPlacement">
			<Description><![CDATA["Placement"]]></Description>
			<Value>1</Value>
		</Integer>
		<Integer Name="gs_shutLam_placementEnable">
			<Description><![CDATA["Enabled Placement Types"]]></Description>
			<Value>7</Value>
		</Integer>
		<Boolean Name="gs_shutLam_cutWallBehind">
			<Description><![CDATA["Insulation behind Box"]]></Description>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_shutLam_boxHeight">
			<Description><![CDATA["Box Height"]]></Description>
			<Value>0.2</Value>
		</Length>
		<Length Name="gs_shutLam_boxWidth">
			<Description><![CDATA["Box Width"]]></Description>
			<Value>0.15</Value>
		</Length>
		<Boolean Name="gs_shutLam_bOpenBox">
			<Description><![CDATA["Opened Box"]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_shutLam_bRail">
			<Description><![CDATA["Rail"]]></Description>
			<Value>0</Value>
		</Boolean>
		<String Name="gs_shutLam_railPos">
			<Description><![CDATA["Rail Position"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["На Наличнике"]]></Value>
		</String>
		<Integer Name="gs_shutLam_iRailPos">
			<Description><![CDATA["Rail Position"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="gs_shutLam_showCasingBehind">
			<Description><![CDATA["Show Casing behind Sunshade"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_shutLam_coverWidth">
			<Description><![CDATA["Cover Width"]]></Description>
			<Value>0.04</Value>
		</Length>
		<Length Name="gs_shutLam_distFromWall">
			<Description><![CDATA["Distance from Wall"]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="gs_shutLam_distFromHead">
			<Description><![CDATA["Distance from Header"]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="gs_shutLam_segmentWidth">
			<Description><![CDATA["Segment Width"]]></Description>
			<Value>0.05</Value>
		</Length>
		<Angle Name="gs_shutLam_rotation">
			<Description><![CDATA["Rotation Angle of Slats"]]></Description>
			<Value>45</Value>
		</Angle>

		<!-- gs_shutLamTitle2: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_shutLamTitle2">
			<Description><![CDATA["Venetian Blinds in Lintel"]]></Description>
		</Title>
		<Length Name="gs_shutLam2_boxHeight">
			<Description><![CDATA["Box Height"]]></Description>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_shutLam2_boxWidth">
			<Description><![CDATA["Box Width"]]></Description>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_shutLam2_distFromWindow">
			<Description><![CDATA["Distance from Window"]]></Description>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_shutLam2_distFromHead">
			<Description><![CDATA["Distance from Header"]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="gs_shutLam2_axisFromHead">
			<Description><![CDATA["Axis Distance from Header"]]></Description>
			<Value>0.03</Value>
		</Length>
		<Length Name="gs_shutLam2_segmentWidth">
			<Description><![CDATA["Segment Width"]]></Description>
			<Value>0.06</Value>
		</Length>
		<Angle Name="gs_shutLam2_rotation">
			<Description><![CDATA["Rotation Angle of Slats"]]></Description>
			<Value>45</Value>
		</Angle>

		<!-- gs_shutLamAttributes: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_shutLamAttributes">
			<Description><![CDATA["Attirbutes"]]></Description>
		</Title>
		<LineType Name="gs_sunShade_lineType">
			<Description><![CDATA["Symbol Line Type"]]></Description>
			<Value>1</Value>
		</LineType>
		<PenColor Name="gs_sunShade_cutLinesPen">
			<Description><![CDATA["Cut Line Pen"]]></Description>
			<Value>1</Value>
		</PenColor>
		<PenColor Name="gs_sunShade_unCutLinesPen">
			<Description><![CDATA["Uncut Line Pen"]]></Description>
			<Value>1</Value>
		</PenColor>
		<FillPattern Name="gs_sunShade_cutFillType">
			<Description><![CDATA["Cut Fill Type"]]></Description>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_sunShade_cutFillPen">
			<Description><![CDATA["Cut Fill Pen"]]></Description>
			<Value>1</Value>
		</PenColor>
		<PenColor Name="gs_sunShade_cutFillBackPen">
			<Description><![CDATA["Cut Fill Background Pen"]]></Description>
			<Value>-1</Value>
		</PenColor>
		<FillPattern Name="gs_sunShade_insFillType">
			<Description><![CDATA["Sunshade Insulation Fill Type"]]></Description>
			<Value>18</Value>
		</FillPattern>
		<PenColor Name="gs_sunShade_insFillPen">
			<Description><![CDATA["Sunshade Insulation Fill Pen"]]></Description>
			<Value>1</Value>
		</PenColor>
		<PenColor Name="gs_sunShade_insFillBackPen">
			<Description><![CDATA["Sunshade Insulation Background Pen"]]></Description>
			<Value>-1</Value>
		</PenColor>
		<Material Name="gs_shutLam_matBox">
			<Description><![CDATA["Box Surface"]]></Description>
			<Value>60</Value>
		</Material>
		<Material Name="gs_shutLam_matLam">
			<Description><![CDATA["Segments Surface"]]></Description>
			<Value>60</Value>
		</Material>

		<!-- gs_stringRes: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_stringRes">
			<Description><![CDATA["String Resources"]]></Description>
		</Title>
		<String Name="stShutLamPlacement">
			<Description><![CDATA["Venetian Blinds Placement Types"]]></Description>
			<ArrayValues FirstDimension="3" SecondDimension="0">
				<AVal Row="1"><![CDATA["На Фасаде"]]></AVal>
				<AVal Row="2"><![CDATA["Перед Окном"]]></AVal>
				<AVal Row="3"><![CDATA["За Фасадом"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stShutLamRailPos">
			<Description><![CDATA[""]]></Description>
			<ArrayValues FirstDimension="2" SecondDimension="0">
				<AVal Row="1"><![CDATA["На Наличнике"]]></AVal>
				<AVal Row="2"><![CDATA["На Стене"]]></AVal>
			</ArrayValues>
		</String>
		<Length Name="gs_casingThkOnFacade">
			<Description><![CDATA["Casing Thickness on Facade"]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="gs_casingThkAtWindow">
			<Description><![CDATA["Casing Thickness at Window"]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="gs_reveal_top">
			<Description><![CDATA["Head Jamb Depth"]]></Description>
			<Value>0</Value>
		</Length>
		<Boolean Name="bLeftCornerFunction">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bRightCornerFunction">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Boolean>
		<Angle Name="leftCornerAngle">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Angle>
		<Angle Name="rightCornerAngle">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Angle>
		<Length Name="VenetianBl_E">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
	</Parameters>
</ParamSection>

<Copyright SectVersion="1" SectionFlags="0" SubIdent="0">
	<Author>GRAPHISOFT</Author>
	<License>
		<Type>CC BY-ND</Type>
		<Version>3.0</Version>
	</License>
</Copyright>

</Symbol>
