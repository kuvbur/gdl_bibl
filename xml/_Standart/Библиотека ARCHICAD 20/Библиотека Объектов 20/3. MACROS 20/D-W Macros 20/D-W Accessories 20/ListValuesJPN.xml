<?xml version="1.0" encoding="UTF-8"?>
<Symbol IsArchivable="false" IsPlaceable="false" MainGUID="47B143E6-8C1B-4BCD-B5CD-3300EE6E6AB9" MigrationValue="Normal" Owner="1196638531" Signature="1196644685" Version="38">
<Ancestry SectVersion="1" SectionFlags="0" SubIdent="0" Template="false">
	<MainGUID>F938E33A-329D-4A36-BE3E-85E126820996</MainGUID>
	<MainGUID>103E8D2C-8230-42E1-9597-46F84CCE28C0</MainGUID>
	<MainGUID>6ACDA889-69B2-4EC5-936C-CB1DA7032A92</MainGUID>
	<MainGUID>F6AE9687-2BC7-4D47-88C9-8F793E1DE2D6</MainGUID>
</Ancestry>

<CalledMacros SectVersion="2" SectionFlags="0" SubIdent="0">
</CalledMacros>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_3D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_3D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_2D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_2D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_1D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[

COMMPARS_INTDOORS			= 1
COMMPARS_INTWINDOWS			= 2
COMMPARS_DOORS1				= 3
COMMPARS_DOORS2				= 4
COMMPARS_DOORSWITHSILL		= 5
COMMPARS_WINDOWS1			= 6
COMMPARS_WINDOWSWITHLOUVER	= 7
COMMPARS_WINDOWSCOMBINED	= 8




]]>
</Script_1D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_PR SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_PR>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_UI SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_UI>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_VL SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
gosub "Key_Mark_Type"

! ==============================================================================
! Common parameters in Doors
! ==============================================================================

if	gs_JPNObjectType = COMMPARS_INTDOORS |\
	gs_JPNObjectType = COMMPARS_DOORS1 |\
	gs_JPNObjectType = COMMPARS_DOORS2 |\
	gs_JPNObjectType = COMMPARS_DOORSWITHSILL then

	gosub "D_Type_Name"
	gosub "D_Regulations"

	if	gs_JPNObjectType = COMMPARS_DOORS1 |\
		gs_JPNObjectType = COMMPARS_DOORSWITHSILL then

		gosub "W_Louvers_System"
		gosub "W_Louvers_Material"
		gosub "W_Louvers_Finish"
		gosub "Transom_Glasstype"
		gosub "D_Glass_Type"
		gosub "D_Glass_Thickness"
		gosub "Treshold_Material"
		gosub "D_Pf_Air"
		gosub "D_Pf_Sound"
		gosub "D_Frame_Material"
		gosub "D_Frame_Finish"
		gosub "Treshould_Finish"
		gosub "D_Louvers_Type"
		gosub "D_Chainlock_Type"
		gosub "D_Dooreye_Type"
		gosub "D_Post_Type"
	endif

	if	gs_JPNObjectType = COMMPARS_DOORS1 |\
		gs_JPNObjectType = COMMPARS_DOORS2 |\
		gs_JPNObjectType = COMMPARS_DOORSWITHSILL then

		gosub "Panel_Type"
		gosub "Panel_Material"
		gosub "Panel_Finish"
		gosub "D_Lock_Type"
		gosub "D_Handle_Type"
		gosub "D_Hinge_Type"
		gosub "D_Closer_Type"
		gosub "D_Stop_Type"
		gosub "D_Drop_Type"
		gosub "D_Adjuster_Type"
	endif

	if	gs_JPNObjectType = COMMPARS_DOORSWITHSILL then
		gosub "Sill_Material"
		gosub "Frame_Material"
	endif
endif

! ==============================================================================
! Common parameters in Windows
! ==============================================================================

if	gs_JPNObjectType = COMMPARS_WINDOWS1 |\
	gs_JPNObjectType = COMMPARS_WINDOWSWITHLOUVER |\
	gs_JPNObjectType = COMMPARS_WINDOWSCOMBINED then

	gosub "Sill_Material"
	gosub "W_Type_Name"
	gosub "W_Regulations"
	gosub "W_Board_Material"
	gosub "W_Glass_Type"
	gosub "W_Glass_Thickness"
	gosub "Pf_Strength"
	gosub "Pf_Water"
	gosub "Pf_Sound"
	gosub "Sill_Finish"
	gosub "W_Frame_Material"
	gosub "W_Frame_Finish"
	gosub "W_Board_Finish"
	gosub "W_Glass_Holder"
	gosub "W_Mesh_Style"
	gosub "W_Mesh_Type"
	gosub "W_Metal"
	gosub "W_Opening_Type"
	gosub "Pf_Air"

	if	gs_JPNObjectType = COMMPARS_WINDOWSWITHLOUVER then
		gosub "W_Louvers_System"
		gosub "W_Louvers_Material"
		gosub "W_Louvers_Finish"
	endif

	if	gs_JPNObjectType = COMMPARS_WINDOWSCOMBINED then
		gosub "D_Type_Name"
		gosub "D_Regulations"
		gosub "D_Glass_Type"
		gosub "D_Glass_Thickness"
		gosub "D_Frame_Material"
	endif
endif

if	gs_JPNObjectType = COMMPARS_INTWINDOWS then
	gosub "W_Type_Name"
	gosub "W_Regulations"
endif




if gs_is_p2 then
	values "p2" 0.03,0.035,0.04,0.045,0.05,0.06,0.08,custom
endif

if gs_is_p6 then
	values "p6" 0,0.025,0.055,0.065,0.075,0.085,0.095,0.105,0.115,0.125,0.135,custom
endif

if	gs_JPNObjectType = COMMPARS_WINDOWSCOMBINED then
	values "d_p2" 0.03,0.035,0.04,0.045,0.05,0.06,0.08,custom
endif


end


! ==============================================================================
! === SUBROUTINES
! ==============================================================================


! ==============================================================================
! "Key_Mark_Type"
! ==============================================================================
"Key_Mark_Type":
	dim str_Key_Mark_Type_values[2]
		str_Key_Mark_Type_values[1] = `Type 1`
		str_Key_Mark_Type_values[2] = `Type 2`

	values "stKey_Mark_Type" str_Key_Mark_Type_values
	values "iKey_Mark_Type" 1, 2

	if GLOB_MODPAR_NAME = "stKey_Mark_Type" then
		iKey_Mark_Type = 1
		for i = 1 to vardim1(str_Key_Mark_Type_values)
			if stKey_Mark_Type = str_Key_Mark_Type_values[i] then
				iKey_Mark_Type = i
				 i = vardim1(str_Key_Mark_Type_values) ! break
			endif
		next i
		parameters iKey_Mark_Type = iKey_Mark_Type
	else
		iKey_Mark_Type = max(1, min(iKey_Mark_Type, vardim1(str_Key_Mark_Type_values)))
		stKey_Mark_Type = str_Key_Mark_Type_values[iKey_Mark_Type]
		parameters stKey_Mark_Type = stKey_Mark_Type
	endif
return

! ==============================================================================
! "D_Type_Name"
! ==============================================================================
"D_Type_Name":
	dim str_D_Type_Name_values[15]
		str_D_Type_Name_values[1] = `SD`
		str_D_Type_Name_values[2] = `LSD`
		str_D_Type_Name_values[3] = `WD`
		str_D_Type_Name_values[4] = `SSD`
		str_D_Type_Name_values[5] = `AD`
		str_D_Type_Name_values[6] = `TD`
		str_D_Type_Name_values[7] = `F`
		str_D_Type_Name_values[8] = `WF`
		str_D_Type_Name_values[9] = `SJ`
		str_D_Type_Name_values[10] = `SF`
		str_D_Type_Name_values[11] = `SS`
		str_D_Type_Name_values[12] = `LSS`
		str_D_Type_Name_values[13] = `AS`
		str_D_Type_Name_values[14] = `SSS`
		str_D_Type_Name_values[15] = `OHD`

	values "stD_Type_Name" str_D_Type_Name_values, CUSTOM
	values "iD_Type_Name" 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 999

	if GLOB_MODPAR_NAME = "stD_Type_Name" then
		iD_Type_Name = 999
		for i = 1 to vardim1(str_D_Type_Name_values)
			if stD_Type_Name = str_D_Type_Name_values[i] then
				iD_Type_Name = i
				 i = vardim1(str_D_Type_Name_values) ! break
			endif
		next i
		parameters iD_Type_Name = iD_Type_Name
	else
		if iD_Type_Name # 999 then
			iD_Type_Name = max(1, min(iD_Type_Name, vardim1(str_D_Type_Name_values)))
			stD_Type_Name = str_D_Type_Name_values[iD_Type_Name]
		endif
		parameters stD_Type_Name = stD_Type_Name
	endif
return

! ==============================================================================
! "D_Regulations"
! ==============================================================================
"D_Regulations":

	if gs_JPNObjectType = COMMPARS_DOORS2 then
		dim str_D_Regulations_values[5]
			str_D_Regulations_values[1] = `FP Shutter (Smoke/Heat)`
			str_D_Regulations_values[2] = `SP Shutter (Smoke/Heat)`
			str_D_Regulations_values[3] = `FP SP Shutter (Smoke/Heat)`
			str_D_Regulations_values[4] = `No regulations`
			str_D_Regulations_values[5] = `Undefined`

		values "stD_Regulations" str_D_Regulations_values, CUSTOM
		values "iD_Regulations" 11, 12, 13, 14, 15, 999

		if GLOB_MODPAR_NAME = "stD_Regulations" then
			iD_Regulations = 999
			for i = 1 to vardim1(str_D_Regulations_values)
				if stD_Regulations = str_D_Regulations_values[i] then
					iD_Regulations = i+10
					 i = vardim1(str_D_Regulations_values) ! break
				endif
			next i
			parameters iD_Regulations = iD_Regulations
		else
			if iD_Regulations # 999 then
				iD_Regulations = max(11, min(iD_Regulations, vardim1(str_D_Regulations_values)+10))
				stD_Regulations = str_D_Regulations_values[iD_Regulations-10]
			endif
			parameters stD_Regulations = stD_Regulations
		endif
	else
		dim str_D_Regulations_values[11]
			str_D_Regulations_values[1] = `TB (Closed at all time)`
			str_D_Regulations_values[2] = `Closed Fire Door`
			str_D_Regulations_values[3] = `TB (Heat initiated)`
			str_D_Regulations_values[4] = `Heat initiated Door`
			str_D_Regulations_values[5] = `TB (Smoke initiated)`
			str_D_Regulations_values[6] = `Smoke initiated Door`
			str_D_Regulations_values[7] = `TB (Combined)`
			str_D_Regulations_values[8] = `Combined Door`
			str_D_Regulations_values[9] = `Closed Non-combustible Door`
			str_D_Regulations_values[10] = `No regulations`
			str_D_Regulations_values[11] = `Undefined`

		values "stD_Regulations" str_D_Regulations_values, CUSTOM
		values "iD_Regulations" 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15, 999

		if GLOB_MODPAR_NAME = "stD_Regulations" then
			iD_Regulations = 999
			for i = 1 to 9
				if stD_Regulations = str_D_Regulations_values[i] then
					iD_Regulations = i
					 i = vardim1(str_D_Regulations_values) ! break
				endif
			next i
			if stD_Regulations = str_D_Regulations_values[10] then iD_Regulations = 14
			if stD_Regulations = str_D_Regulations_values[11] then iD_Regulations = 15
			parameters iD_Regulations = iD_Regulations
		else
			if iD_Regulations # 999 then
				if iD_Regulations = 14 | iD_Regulations = 15 then
					if iD_Regulations = 14 then stD_Regulations = str_D_Regulations_values[10]
					if iD_Regulations = 15 then stD_Regulations = str_D_Regulations_values[11]
				else
					stD_Regulations = str_D_Regulations_values[iD_Regulations]
				endif
			endif
			parameters stD_Regulations = stD_Regulations
		endif
	endif
return


! ==============================================================================
! "Panel_Type"
! ==============================================================================
"Panel_Type":
	dim str_Panel_Type_values[9]
		str_Panel_Type_values[1] = `Frameless Door (Both face)`
		str_Panel_Type_values[2] = `One Side Flush`
		str_Panel_Type_values[3] = `Door Frame`
		str_Panel_Type_values[4] = `Glass Door`
		str_Panel_Type_values[5] = `Louver Door`
		str_Panel_Type_values[6] = `Top-Bottom Frame`
		str_Panel_Type_values[7] = `Tempered Glass Door`
		str_Panel_Type_values[8] = `-`
		str_Panel_Type_values[9] = `Undefined`

	values "stPanel_Type" str_Panel_Type_values
	values "iPanel_Type" 1, 2, 3, 4, 5, 6, 7, 8, 9

	if GLOB_MODPAR_NAME = "stPanel_Type" then
		iPanel_Type = 1
		for i = 1 to vardim1(str_Panel_Type_values)
			if stPanel_Type = str_Panel_Type_values[i] then
				iPanel_Type = i
				 i = vardim1(str_Panel_Type_values) ! break
			endif
		next i
		parameters iPanel_Type = iPanel_Type
	else
		iPanel_Type = max(1, min(iPanel_Type, vardim1(str_Panel_Type_values)))
		stPanel_Type = str_Panel_Type_values[iPanel_Type]
		parameters stPanel_Type = stPanel_Type
	endif
return

! ==============================================================================
! "W_Louvers_System"
! ==============================================================================
"W_Louvers_System":
	dim str_W_Louvers_System_values[1]
		str_W_Louvers_System_values[1] = `Undefined`

	values "stW_Louvers_System" str_W_Louvers_System_values, CUSTOM
	values "iW_Louvers_System" 1, 999

	if GLOB_MODPAR_NAME = "stW_Louvers_System" then
		iW_Louvers_System = 999
		for i = 1 to vardim1(str_W_Louvers_System_values)
			if stW_Louvers_System = str_W_Louvers_System_values[i] then
				iW_Louvers_System = i
				 i = vardim1(str_W_Louvers_System_values) ! break
			endif
		next i
		parameters iW_Louvers_System = iW_Louvers_System
	else
		if iW_Louvers_System # 999 then
			iW_Louvers_System = max(1, min(iW_Louvers_System, vardim1(str_W_Louvers_System_values)))
			stW_Louvers_System = str_W_Louvers_System_values[iW_Louvers_System]
		endif
		parameters stW_Louvers_System = stW_Louvers_System
	endif
return

! ==============================================================================
! "W_Louvers_Material"
! ==============================================================================
"W_Louvers_Material":
	dim str_W_Louvers_Material_values[10]
		str_W_Louvers_Material_values[1] = `Steel`
		str_W_Louvers_Material_values[2] = `Aluminum`
		str_W_Louvers_Material_values[3] = `Stainless`
		str_W_Louvers_Material_values[4] = `Wood`
		str_W_Louvers_Material_values[5] = `Plastic`
		str_W_Louvers_Material_values[6] = `Tempered Glass`
		str_W_Louvers_Material_values[7] = `Brass`
		str_W_Louvers_Material_values[8] = `Bronze`
		str_W_Louvers_Material_values[9] = `-`
		str_W_Louvers_Material_values[10] = `Undefined`

	values "stW_Louvers_Material" str_W_Louvers_Material_values, CUSTOM
	values "iW_Louvers_Material" 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 999

	if GLOB_MODPAR_NAME = "stW_Louvers_Material" then
		iW_Louvers_Material = 999
		for i = 1 to vardim1(str_W_Louvers_Material_values)
			if stW_Louvers_Material = str_W_Louvers_Material_values[i] then
				iW_Louvers_Material = i
				 i = vardim1(str_W_Louvers_Material_values) ! break
			endif
		next i
		parameters iW_Louvers_Material = iW_Louvers_Material
	else
		if iW_Louvers_Material # 999 then
			iW_Louvers_Material = max(1, min(iW_Louvers_Material, vardim1(str_W_Louvers_Material_values)))
			stW_Louvers_Material = str_W_Louvers_Material_values[iW_Louvers_Material]
		endif
		parameters stW_Louvers_Material = stW_Louvers_Material
	endif
return

! ==============================================================================
! "W_Louvers_Finish"
! ==============================================================================
"W_Louvers_Finish":
	dim str_W_Louvers_Finish_values[1]
		str_W_Louvers_Finish_values[1] = `Undefined`

	values "stW_Louvers_Finish" str_W_Louvers_Finish_values, CUSTOM
	values "iW_Louvers_Finish" 1, 999

	if GLOB_MODPAR_NAME = "stW_Louvers_Finish" then
		iW_Louvers_Finish = 999
		for i = 1 to vardim1(str_W_Louvers_Finish_values)
			if stW_Louvers_Finish = str_W_Louvers_Finish_values[i] then
				iW_Louvers_Finish = i
				 i = vardim1(str_W_Louvers_Finish_values) ! break
			endif
		next i
		parameters iW_Louvers_Finish = iW_Louvers_Finish
	else
		if iW_Louvers_Finish # 999 then
			iW_Louvers_Finish = max(1, min(iW_Louvers_Finish, vardim1(str_W_Louvers_Finish_values)))
			stW_Louvers_Finish = str_W_Louvers_Finish_values[iW_Louvers_Finish]
		endif
		parameters stW_Louvers_Finish = stW_Louvers_Finish
	endif
return

! ==============================================================================
! "Frame_Material"
! ==============================================================================
"Frame_Material":
	dim str_Frame_Material_values[10]
		str_Frame_Material_values[1] = `Steel`
		str_Frame_Material_values[2] = `Aluminum`
		str_Frame_Material_values[3] = `Stainless`
		str_Frame_Material_values[4] = `Wood`
		str_Frame_Material_values[5] = `Plastic`
		str_Frame_Material_values[6] = `Tempered Glass`
		str_Frame_Material_values[7] = `Brass`
		str_Frame_Material_values[8] = `Bronze`
		str_Frame_Material_values[9] = `-`
		str_Frame_Material_values[10] = `Undefined`

	values "stFrame_Material" str_Frame_Material_values, CUSTOM
	values "iFrame_Material" 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 999

	if GLOB_MODPAR_NAME = "stFrame_Material" then
		iFrame_Material = 999
		for i = 1 to vardim1(str_Frame_Material_values)
			if stFrame_Material = str_Frame_Material_values[i] then
				iFrame_Material = i
				 i = vardim1(str_Frame_Material_values) ! break
			endif
		next i
		parameters iFrame_Material = iFrame_Material
	else
		if iFrame_Material # 999 then
			iFrame_Material = max(1, min(iFrame_Material, vardim1(str_Frame_Material_values)))
			stFrame_Material = str_Frame_Material_values[iFrame_Material]
		endif
		parameters stFrame_Material = stFrame_Material
	endif
return

! ==============================================================================
! "Transom_Glasstype"
! ==============================================================================
"Transom_Glasstype":
	dim str_Transom_Glasstype_values[19]
		str_Transom_Glasstype_values[1] = `Steel Panel`
		str_Transom_Glasstype_values[2] = `Aluminum Panel`
		str_Transom_Glasstype_values[3] = `Stainless Panel`
		str_Transom_Glasstype_values[4] = `Normal Plate Glass`
		str_Transom_Glasstype_values[5] = `Float Plate Glass`
		str_Transom_Glasstype_values[6] = `Molded Wired Glass`
		str_Transom_Glasstype_values[7] = `Heat Absorbing Glass`
		str_Transom_Glasstype_values[8] = `Multi-Layered Glass`
		str_Transom_Glasstype_values[9] = `Figured glass`
		str_Transom_Glasstype_values[10] = `Polished Plate Lined Glass`
		str_Transom_Glasstype_values[11] = `Heat Absorbing Wired Glass`
		str_Transom_Glasstype_values[12] = `Laminated Glass`
		str_Transom_Glasstype_values[13] = `Polished Plate Wired Glass`
		str_Transom_Glasstype_values[14] = `Molded Line Glass`
		str_Transom_Glasstype_values[15] = `Heat Reflecting Glass`
		str_Transom_Glasstype_values[16] = `High Spec. Heat Reflecting Glass`
		str_Transom_Glasstype_values[17] = `Tempered Glass`
		str_Transom_Glasstype_values[18] = `-`
		str_Transom_Glasstype_values[19] = `Undefined`

	values "stTransom_Glasstype" str_Transom_Glasstype_values, CUSTOM
	values "iTransom_Glasstype" 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 999

	if GLOB_MODPAR_NAME = "stTransom_Glasstype" then
		iTransom_Glasstype = 999
		for i = 1 to vardim1(str_Transom_Glasstype_values)
			if stTransom_Glasstype = str_Transom_Glasstype_values[i] then
				iTransom_Glasstype = i
				 i = vardim1(str_Transom_Glasstype_values) ! break
			endif
		next i
		parameters iTransom_Glasstype = iTransom_Glasstype
	else
		if iTransom_Glasstype # 999 then
			iTransom_Glasstype = max(1, min(iTransom_Glasstype, vardim1(str_Transom_Glasstype_values)))
			stTransom_Glasstype = str_Transom_Glasstype_values[iTransom_Glasstype]
		endif
		parameters stTransom_Glasstype = stTransom_Glasstype
	endif
return

! ==============================================================================
! "D_Glass_Type"
! ==============================================================================
"D_Glass_Type":
	dim str_D_Glass_Type_values[16]
		str_D_Glass_Type_values[1] = `Normal Plate Glass`
		str_D_Glass_Type_values[2] = `Float Plate Glass`
		str_D_Glass_Type_values[3] = `Molded Wired Glass`
		str_D_Glass_Type_values[4] = `Heat Absorbing Glass`
		str_D_Glass_Type_values[5] = `Multi-Layered Glass`
		str_D_Glass_Type_values[6] = `Figured glass`
		str_D_Glass_Type_values[7] = `Polished Plate Lined Glass`
		str_D_Glass_Type_values[8] = `Heat Absorbing Wired Glass`
		str_D_Glass_Type_values[9] = `Laminated Glass`
		str_D_Glass_Type_values[10] = `Polished Plate Wired Glass`
		str_D_Glass_Type_values[11] = `Molded Line Glass`
		str_D_Glass_Type_values[12] = `Heat Reflecting Glass`
		str_D_Glass_Type_values[13] = `High Spec. Heat Reflecting Glass`
		str_D_Glass_Type_values[14] = `Tempered Glass`
		str_D_Glass_Type_values[15] = `-`
		str_D_Glass_Type_values[16] = `Undefined`

	values "stD_Glass_Type" str_D_Glass_Type_values, CUSTOM
	values "iD_Glass_Type" 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 999

	if GLOB_MODPAR_NAME = "stD_Glass_Type" then
		iD_Glass_Type = 999
		for i = 1 to vardim1(str_D_Glass_Type_values)
			if stD_Glass_Type = str_D_Glass_Type_values[i] then
				iD_Glass_Type = i
				 i = vardim1(str_D_Glass_Type_values) ! break
			endif
		next i
		parameters iD_Glass_Type = iD_Glass_Type
	else
		if iD_Glass_Type # 999 then
			iD_Glass_Type = max(1, min(iD_Glass_Type, vardim1(str_D_Glass_Type_values)))
			stD_Glass_Type = str_D_Glass_Type_values[iD_Glass_Type]
		endif
		parameters stD_Glass_Type = stD_Glass_Type
	endif
return

! ==============================================================================
! "D_Glass_Thickness"
! ==============================================================================
"D_Glass_Thickness":
	dim str_D_Glass_Thickness_values[15]
		str_D_Glass_Thickness_values[1] = `1.9 mm`
		str_D_Glass_Thickness_values[2] = `2.2 mm`
		str_D_Glass_Thickness_values[3] = `3 mm`
		str_D_Glass_Thickness_values[4] = `4 mm`
		str_D_Glass_Thickness_values[5] = `5 mm`
		str_D_Glass_Thickness_values[6] = `6 mm`
		str_D_Glass_Thickness_values[7] = `6.8 mm`
		str_D_Glass_Thickness_values[8] = `8 mm`
		str_D_Glass_Thickness_values[9] = `10 mm`
		str_D_Glass_Thickness_values[10] = `12 mm`
		str_D_Glass_Thickness_values[11] = `15 mm`
		str_D_Glass_Thickness_values[12] = `19 mm`
		str_D_Glass_Thickness_values[13] = `21 mm`
		str_D_Glass_Thickness_values[14] = `-`
		str_D_Glass_Thickness_values[15] = `Undefined`

	values "stD_Glass_Thickness" str_D_Glass_Thickness_values, CUSTOM
	values "iD_Glass_Thickness" 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 999

	if GLOB_MODPAR_NAME = "stD_Glass_Thickness" then
		iD_Glass_Thickness = 999
		for i = 1 to vardim1(str_D_Glass_Thickness_values)
			if stD_Glass_Thickness = str_D_Glass_Thickness_values[i] then
				iD_Glass_Thickness = i
				 i = vardim1(str_D_Glass_Thickness_values) ! break
			endif
		next i
		parameters iD_Glass_Thickness = iD_Glass_Thickness
	else
		if iD_Glass_Thickness # 999 then
			iD_Glass_Thickness = max(1, min(iD_Glass_Thickness, vardim1(str_D_Glass_Thickness_values)))
			stD_Glass_Thickness = str_D_Glass_Thickness_values[iD_Glass_Thickness]
		endif
		parameters stD_Glass_Thickness = stD_Glass_Thickness
	endif
return

! ==============================================================================
! "Treshold_Material"
! ==============================================================================
"Treshold_Material":
	dim str_Treshold_Material_values[10]
		str_Treshold_Material_values[1] = `Steel`
		str_Treshold_Material_values[2] = `Aluminum`
		str_Treshold_Material_values[3] = `Stainless`
		str_Treshold_Material_values[4] = `Wood`
		str_Treshold_Material_values[5] = `Plastic`
		str_Treshold_Material_values[6] = `Tempered Glass`
		str_Treshold_Material_values[7] = `Brass`
		str_Treshold_Material_values[8] = `Bronze`
		str_Treshold_Material_values[9] = `-`
		str_Treshold_Material_values[10] = `Undefined`

	values "stTreshold_Material" str_Treshold_Material_values, CUSTOM
	values "iTreshold_Material" 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 999

	if GLOB_MODPAR_NAME = "stTreshold_Material" then
		iTreshold_Material = 999
		for i = 1 to vardim1(str_Treshold_Material_values)
			if stTreshold_Material = str_Treshold_Material_values[i] then
				iTreshold_Material = i
				 i = vardim1(str_Treshold_Material_values) ! break
			endif
		next i
		parameters iTreshold_Material = iTreshold_Material
	else
		if iTreshold_Material # 999 then
			iTreshold_Material = max(1, min(iTreshold_Material, vardim1(str_Treshold_Material_values)))
			stTreshold_Material = str_Treshold_Material_values[iTreshold_Material]
		endif
		parameters stTreshold_Material = stTreshold_Material
	endif
return

! ==============================================================================
! "D_Pf_Air"
! ==============================================================================
"D_Pf_Air":
	dim str_D_Pf_Air_values[1]
		str_D_Pf_Air_values[1] = `Undefined`

	values "stD_Pf_Air" str_D_Pf_Air_values, CUSTOM
	values "iD_Pf_Air" 1, 999

	if GLOB_MODPAR_NAME = "stD_Pf_Air" then
		iD_Pf_Air = 999
		for i = 1 to vardim1(str_D_Pf_Air_values)
			if stD_Pf_Air = str_D_Pf_Air_values[i] then
				iD_Pf_Air = i
				 i = vardim1(str_D_Pf_Air_values) ! break
			endif
		next i
		parameters iD_Pf_Air = iD_Pf_Air
	else
		if iD_Pf_Air # 999 then
			iD_Pf_Air = max(1, min(iD_Pf_Air, vardim1(str_D_Pf_Air_values)))
			stD_Pf_Air = str_D_Pf_Air_values[iD_Pf_Air]
		endif
		parameters stD_Pf_Air = stD_Pf_Air
	endif
return

! ==============================================================================
! "D_Pf_Sound"
! ==============================================================================
"D_Pf_Sound":
	dim str_D_Pf_Sound_values[1]
		str_D_Pf_Sound_values[1] = `Undefined`

	values "stD_Pf_Sound" str_D_Pf_Sound_values, CUSTOM
	values "iD_Pf_Sound" 1, 999

	if GLOB_MODPAR_NAME = "stD_Pf_Sound" then
		iD_Pf_Sound = 999
		for i = 1 to vardim1(str_D_Pf_Sound_values)
			if stD_Pf_Sound = str_D_Pf_Sound_values[i] then
				iD_Pf_Sound = i
				 i = vardim1(str_D_Pf_Sound_values) ! break
			endif
		next i
		parameters iD_Pf_Sound = iD_Pf_Sound
	else
		if iD_Pf_Sound # 999 then
			iD_Pf_Sound = max(1, min(iD_Pf_Sound, vardim1(str_D_Pf_Sound_values)))
			stD_Pf_Sound = str_D_Pf_Sound_values[iD_Pf_Sound]
		endif
		parameters stD_Pf_Sound = stD_Pf_Sound
	endif
return

! ==============================================================================
! "D_Frame_Material"
! ==============================================================================
"D_Frame_Material":
	dim str_D_Frame_Material_values[1]
		str_D_Frame_Material_values[1] = `Undefined`

	values "stD_Frame_Material" str_D_Frame_Material_values, CUSTOM
	values "iD_Frame_Material" 1, 999

	if GLOB_MODPAR_NAME = "stD_Frame_Material" then
		iD_Frame_Material = 999
		for i = 1 to vardim1(str_D_Frame_Material_values)
			if stD_Frame_Material = str_D_Frame_Material_values[i] then
				iD_Frame_Material = i
				 i = vardim1(str_D_Frame_Material_values) ! break
			endif
		next i
		parameters iD_Frame_Material = iD_Frame_Material
	else
		if iD_Frame_Material # 999 then
			iD_Frame_Material = max(1, min(iD_Frame_Material, vardim1(str_D_Frame_Material_values)))
			stD_Frame_Material = str_D_Frame_Material_values[iD_Frame_Material]
		endif
		parameters stD_Frame_Material = stD_Frame_Material
	endif
return

! ==============================================================================
! "D_Frame_Finish"
! ==============================================================================
"D_Frame_Finish":
	dim str_D_Frame_Finish_values[1]
		str_D_Frame_Finish_values[1] = `Undefined`

	values "stD_Frame_Finish" str_D_Frame_Finish_values, CUSTOM
	values "iD_Frame_Finish" 1, 999

	if GLOB_MODPAR_NAME = "stD_Frame_Finish" then
		iD_Frame_Finish = 999
		for i = 1 to vardim1(str_D_Frame_Finish_values)
			if stD_Frame_Finish = str_D_Frame_Finish_values[i] then
				iD_Frame_Finish = i
				 i = vardim1(str_D_Frame_Finish_values) ! break
			endif
		next i
		parameters iD_Frame_Finish = iD_Frame_Finish
	else
		if iD_Frame_Finish # 999 then
			iD_Frame_Finish = max(1, min(iD_Frame_Finish, vardim1(str_D_Frame_Finish_values)))
			stD_Frame_Finish = str_D_Frame_Finish_values[iD_Frame_Finish]
		endif
		parameters stD_Frame_Finish = stD_Frame_Finish
	endif
return

! ==============================================================================
! "Treshould_Finish"
! ==============================================================================
"Treshould_Finish":
	dim str_Treshould_Finish_values[1]
		str_Treshould_Finish_values[1] = `Undefined`

	values "stTreshould_Finish" str_Treshould_Finish_values, CUSTOM
	values "iTreshould_Finish" 1, 999

	if GLOB_MODPAR_NAME = "stTreshould_Finish" then
		iTreshould_Finish = 999
		for i = 1 to vardim1(str_Treshould_Finish_values)
			if stTreshould_Finish = str_Treshould_Finish_values[i] then
				iTreshould_Finish = i
				 i = vardim1(str_Treshould_Finish_values) ! break
			endif
		next i
		parameters iTreshould_Finish = iTreshould_Finish
	else
		if iTreshould_Finish # 999 then
			iTreshould_Finish = max(1, min(iTreshould_Finish, vardim1(str_Treshould_Finish_values)))
			stTreshould_Finish = str_Treshould_Finish_values[iTreshould_Finish]
		endif
		parameters stTreshould_Finish = stTreshould_Finish
	endif
return

! ==============================================================================
! "D_Louvers_Type"
! ==============================================================================
"D_Louvers_Type":
	dim str_D_Louvers_Type_values[1]
		str_D_Louvers_Type_values[1] = `Undefined`

	values "stD_Louvers_Type" str_D_Louvers_Type_values, CUSTOM
	values "iD_Louvers_Type" 1, 999

	if GLOB_MODPAR_NAME = "stD_Louvers_Type" then
		iD_Louvers_Type = 999
		for i = 1 to vardim1(str_D_Louvers_Type_values)
			if stD_Louvers_Type = str_D_Louvers_Type_values[i] then
				iD_Louvers_Type = i
				 i = vardim1(str_D_Louvers_Type_values) ! break
			endif
		next i
		parameters iD_Louvers_Type = iD_Louvers_Type
	else
		if iD_Louvers_Type # 999 then
			iD_Louvers_Type = max(1, min(iD_Louvers_Type, vardim1(str_D_Louvers_Type_values)))
			stD_Louvers_Type = str_D_Louvers_Type_values[iD_Louvers_Type]
		endif
		parameters stD_Louvers_Type = stD_Louvers_Type
	endif
return

! ==============================================================================
! "D_Chainlock_Type"
! ==============================================================================
"D_Chainlock_Type":
	dim str_D_Chainlock_Type_values[1]
		str_D_Chainlock_Type_values[1] = `Undefined`

	values "stD_Chainlock_Type" str_D_Chainlock_Type_values, CUSTOM
	values "iD_Chainlock_Type" 1, 999

	if GLOB_MODPAR_NAME = "stD_Chainlock_Type" then
		iD_Chainlock_Type = 999
		for i = 1 to vardim1(str_D_Chainlock_Type_values)
			if stD_Chainlock_Type = str_D_Chainlock_Type_values[i] then
				iD_Chainlock_Type = i
				 i = vardim1(str_D_Chainlock_Type_values) ! break
			endif
		next i
		parameters iD_Chainlock_Type = iD_Chainlock_Type
	else
		if iD_Chainlock_Type # 999 then
			iD_Chainlock_Type = max(1, min(iD_Chainlock_Type, vardim1(str_D_Chainlock_Type_values)))
			stD_Chainlock_Type = str_D_Chainlock_Type_values[iD_Chainlock_Type]
		endif
		parameters stD_Chainlock_Type = stD_Chainlock_Type
	endif
return

! ==============================================================================
! "D_Dooreye_Type"
! ==============================================================================
"D_Dooreye_Type":
	dim str_D_Dooreye_Type_values[1]
		str_D_Dooreye_Type_values[1] = `Undefined`

	values "stD_Dooreye_Type" str_D_Dooreye_Type_values, CUSTOM
	values "iD_Dooreye_Type" 1, 999

	if GLOB_MODPAR_NAME = "stD_Dooreye_Type" then
		iD_Dooreye_Type = 999
		for i = 1 to vardim1(str_D_Dooreye_Type_values)
			if stD_Dooreye_Type = str_D_Dooreye_Type_values[i] then
				iD_Dooreye_Type = i
				 i = vardim1(str_D_Dooreye_Type_values) ! break
			endif
		next i
		parameters iD_Dooreye_Type = iD_Dooreye_Type
	else
		if iD_Dooreye_Type # 999 then
			iD_Dooreye_Type = max(1, min(iD_Dooreye_Type, vardim1(str_D_Dooreye_Type_values)))
			stD_Dooreye_Type = str_D_Dooreye_Type_values[iD_Dooreye_Type]
		endif
		parameters stD_Dooreye_Type = stD_Dooreye_Type
	endif
return

! ==============================================================================
! "D_Post_Type"
! ==============================================================================
"D_Post_Type":
	dim str_D_Post_Type_values[1]
		str_D_Post_Type_values[1] = `Undefined`

	values "stD_Post_Type" str_D_Post_Type_values, CUSTOM
	values "iD_Post_Type" 1, 999

	if GLOB_MODPAR_NAME = "stD_Post_Type" then
		iD_Post_Type = 999
		for i = 1 to vardim1(str_D_Post_Type_values)
			if stD_Post_Type = str_D_Post_Type_values[i] then
				iD_Post_Type = i
				 i = vardim1(str_D_Post_Type_values) ! break
			endif
		next i
		parameters iD_Post_Type = iD_Post_Type
	else
		if iD_Post_Type # 999 then
			iD_Post_Type = max(1, min(iD_Post_Type, vardim1(str_D_Post_Type_values)))
			stD_Post_Type = str_D_Post_Type_values[iD_Post_Type]
		endif
		parameters stD_Post_Type = stD_Post_Type
	endif
return

! ==============================================================================
! "Pf_Sound"
! ==============================================================================
"Pf_Sound":
	dim str_Pf_Sound_values[4]
		str_Pf_Sound_values[1] = `Off`
		str_Pf_Sound_values[2] = `T1(25 Class)`
		str_Pf_Sound_values[3] = `T2(30 Class)`
		str_Pf_Sound_values[4] = `T3(35 Class)`

	values "stPf_Sound" str_Pf_Sound_values, CUSTOM
	values "iPf_Sound" 1, 2, 3, 4, 999

	if GLOB_MODPAR_NAME = "stPf_Sound" then
		iPf_Sound = 999
		for i = 1 to vardim1(str_Pf_Sound_values)
			if stPf_Sound = str_Pf_Sound_values[i] then
				iPf_Sound = i
				 i = vardim1(str_Pf_Sound_values) ! break
			endif
		next i
		parameters iPf_Sound = iPf_Sound
	else
		if iPf_Sound # 999 then
			iPf_Sound = max(1, min(iPf_Sound, vardim1(str_Pf_Sound_values)))
			stPf_Sound = str_Pf_Sound_values[iPf_Sound]
		endif
		parameters stPf_Sound = stPf_Sound
	endif
return

! ==============================================================================
! "Panel_Material"
! ==============================================================================
"Panel_Material":
	dim str_Panel_Material_values[1]
		str_Panel_Material_values[1] = `Undefined`

	values "stPanel_Material" str_Panel_Material_values, CUSTOM
	values "iPanel_Material" 1, 999

	if GLOB_MODPAR_NAME = "stPanel_Material" then
		iPanel_Material = 999
		for i = 1 to vardim1(str_Panel_Material_values)
			if stPanel_Material = str_Panel_Material_values[i] then
				iPanel_Material = i
				 i = vardim1(str_Panel_Material_values) ! break
			endif
		next i
		parameters iPanel_Material = iPanel_Material
	else
		if iPanel_Material # 999 then
			iPanel_Material = max(1, min(iPanel_Material, vardim1(str_Panel_Material_values)))
			stPanel_Material = str_Panel_Material_values[iPanel_Material]
		endif
		parameters stPanel_Material = stPanel_Material
	endif
return

! ==============================================================================
! "Panel_Finish"
! ==============================================================================
"Panel_Finish":
	dim str_Panel_Finish_values[1]
		str_Panel_Finish_values[1] = `Undefined`

	values "stPanel_Finish" str_Panel_Finish_values, CUSTOM
	values "iPanel_Finish" 1, 999

	if GLOB_MODPAR_NAME = "stPanel_Finish" then
		iPanel_Finish = 999
		for i = 1 to vardim1(str_Panel_Finish_values)
			if stPanel_Finish = str_Panel_Finish_values[i] then
				iPanel_Finish = i
				 i = vardim1(str_Panel_Finish_values) ! break
			endif
		next i
		parameters iPanel_Finish = iPanel_Finish
	else
		if iPanel_Finish # 999 then
			iPanel_Finish = max(1, min(iPanel_Finish, vardim1(str_Panel_Finish_values)))
			stPanel_Finish = str_Panel_Finish_values[iPanel_Finish]
		endif
		parameters stPanel_Finish = stPanel_Finish
	endif
return

! ==============================================================================
! "D_Lock_Type"
! ==============================================================================
"D_Lock_Type":
	dim str_D_Lock_Type_values[2]
		str_D_Lock_Type_values[1] = `Undefined`
		str_D_Lock_Type_values[2] = `Electric Lock`

	values "stD_Lock_Type" str_D_Lock_Type_values, CUSTOM
	values "iD_Lock_Type" 1, 2, 999

	if GLOB_MODPAR_NAME = "stD_Lock_Type" then
		iD_Lock_Type = 999
		for i = 1 to vardim1(str_D_Lock_Type_values)
			if stD_Lock_Type = str_D_Lock_Type_values[i] then
				iD_Lock_Type = i
				 i = vardim1(str_D_Lock_Type_values) ! break
			endif
		next i
		parameters iD_Lock_Type = iD_Lock_Type
	else
		if iD_Lock_Type # 999 then
			iD_Lock_Type = max(1, min(iD_Lock_Type, vardim1(str_D_Lock_Type_values)))
			stD_Lock_Type = str_D_Lock_Type_values[iD_Lock_Type]
		endif
		parameters stD_Lock_Type = stD_Lock_Type
	endif
return

! ==============================================================================
! "D_Handle_Type"
! ==============================================================================
"D_Handle_Type":
	dim str_D_Handle_Type_values[1]
		str_D_Handle_Type_values[1] = `Undefined`

	values "stD_Handle_Type" str_D_Handle_Type_values, CUSTOM
	values "iD_Handle_Type" 1, 999

	if GLOB_MODPAR_NAME = "stD_Handle_Type" then
		iD_Handle_Type = 999
		for i = 1 to vardim1(str_D_Handle_Type_values)
			if stD_Handle_Type = str_D_Handle_Type_values[i] then
				iD_Handle_Type = i
				 i = vardim1(str_D_Handle_Type_values) ! break
			endif
		next i
		parameters iD_Handle_Type = iD_Handle_Type
	else
		if iD_Handle_Type # 999 then
			iD_Handle_Type = max(1, min(iD_Handle_Type, vardim1(str_D_Handle_Type_values)))
			stD_Handle_Type = str_D_Handle_Type_values[iD_Handle_Type]
		endif
		parameters stD_Handle_Type = stD_Handle_Type
	endif
return

! ==============================================================================
! "D_Hinge_Type"
! ==============================================================================
"D_Hinge_Type":
	dim str_D_Hinge_Type_values[1]
		str_D_Hinge_Type_values[1] = `Undefined`

	values "stD_Hinge_Type" str_D_Hinge_Type_values, CUSTOM
	values "iD_Hinge_Type" 1, 999

	if GLOB_MODPAR_NAME = "stD_Hinge_Type" then
		iD_Hinge_Type = 999
		for i = 1 to vardim1(str_D_Hinge_Type_values)
			if stD_Hinge_Type = str_D_Hinge_Type_values[i] then
				iD_Hinge_Type = i
				 i = vardim1(str_D_Hinge_Type_values) ! break
			endif
		next i
		parameters iD_Hinge_Type = iD_Hinge_Type
	else
		if iD_Hinge_Type # 999 then
			iD_Hinge_Type = max(1, min(iD_Hinge_Type, vardim1(str_D_Hinge_Type_values)))
			stD_Hinge_Type = str_D_Hinge_Type_values[iD_Hinge_Type]
		endif
		parameters stD_Hinge_Type = stD_Hinge_Type
	endif
return

! ==============================================================================
! "D_Closer_Type"
! ==============================================================================
"D_Closer_Type":
	dim str_D_Closer_Type_values[1]
		str_D_Closer_Type_values[1] = `Undefined`

	values "stD_Closer_Type" str_D_Closer_Type_values, CUSTOM
	values "iD_Closer_Type" 1, 999

	if GLOB_MODPAR_NAME = "stD_Closer_Type" then
		iD_Closer_Type = 999
		for i = 1 to vardim1(str_D_Closer_Type_values)
			if stD_Closer_Type = str_D_Closer_Type_values[i] then
				iD_Closer_Type = i
				 i = vardim1(str_D_Closer_Type_values) ! break
			endif
		next i
		parameters iD_Closer_Type = iD_Closer_Type
	else
		if iD_Closer_Type # 999 then
			iD_Closer_Type = max(1, min(iD_Closer_Type, vardim1(str_D_Closer_Type_values)))
			stD_Closer_Type = str_D_Closer_Type_values[iD_Closer_Type]
		endif
		parameters stD_Closer_Type = stD_Closer_Type
	endif
return

! ==============================================================================
! "D_Stop_Type"
! ==============================================================================
"D_Stop_Type":
	dim str_D_Stop_Type_values[1]
		str_D_Stop_Type_values[1] = `Undefined`

	values "stD_Stop_Type" str_D_Stop_Type_values, CUSTOM
	values "iD_Stop_Type" 1, 999

	if GLOB_MODPAR_NAME = "stD_Stop_Type" then
		iD_Stop_Type = 999
		for i = 1 to vardim1(str_D_Stop_Type_values)
			if stD_Stop_Type = str_D_Stop_Type_values[i] then
				iD_Stop_Type = i
				 i = vardim1(str_D_Stop_Type_values) ! break
			endif
		next i
		parameters iD_Stop_Type = iD_Stop_Type
	else
		if iD_Stop_Type # 999 then
			iD_Stop_Type = max(1, min(iD_Stop_Type, vardim1(str_D_Stop_Type_values)))
			stD_Stop_Type = str_D_Stop_Type_values[iD_Stop_Type]
		endif
		parameters stD_Stop_Type = stD_Stop_Type
	endif
return

! ==============================================================================
! "D_Drop_Type"
! ==============================================================================
"D_Drop_Type":
	dim str_D_Drop_Type_values[1]
		str_D_Drop_Type_values[1] = `Undefined`

	values "stD_Drop_Type" str_D_Drop_Type_values, CUSTOM
	values "iD_Drop_Type" 1, 999

	if GLOB_MODPAR_NAME = "stD_Drop_Type" then
		iD_Drop_Type = 999
		for i = 1 to vardim1(str_D_Drop_Type_values)
			if stD_Drop_Type = str_D_Drop_Type_values[i] then
				iD_Drop_Type = i
				 i = vardim1(str_D_Drop_Type_values) ! break
			endif
		next i
		parameters iD_Drop_Type = iD_Drop_Type
	else
		if iD_Drop_Type # 999 then
			iD_Drop_Type = max(1, min(iD_Drop_Type, vardim1(str_D_Drop_Type_values)))
			stD_Drop_Type = str_D_Drop_Type_values[iD_Drop_Type]
		endif
		parameters stD_Drop_Type = stD_Drop_Type
	endif
return

! ==============================================================================
! "D_Adjuster_Type"
! ==============================================================================
"D_Adjuster_Type":
	dim str_D_Adjuster_Type_values[1]
		str_D_Adjuster_Type_values[1] = `Undefined`

	values "stD_Adjuster_Type" str_D_Adjuster_Type_values, CUSTOM
	values "iD_Adjuster_Type" 1, 999

	if GLOB_MODPAR_NAME = "stD_Adjuster_Type" then
		iD_Adjuster_Type = 999
		for i = 1 to vardim1(str_D_Adjuster_Type_values)
			if stD_Adjuster_Type = str_D_Adjuster_Type_values[i] then
				iD_Adjuster_Type = i
				 i = vardim1(str_D_Adjuster_Type_values) ! break
			endif
		next i
		parameters iD_Adjuster_Type = iD_Adjuster_Type
	else
		if iD_Adjuster_Type # 999 then
			iD_Adjuster_Type = max(1, min(iD_Adjuster_Type, vardim1(str_D_Adjuster_Type_values)))
			stD_Adjuster_Type = str_D_Adjuster_Type_values[iD_Adjuster_Type]
		endif
		parameters stD_Adjuster_Type = stD_Adjuster_Type
	endif
return

! ==============================================================================
! "Sill_Material"
! ==============================================================================
"Sill_Material":
	dim str_Sill_Material_values[10]
		str_Sill_Material_values[1] = `Steel`
		str_Sill_Material_values[2] = `Aluminum`
		str_Sill_Material_values[3] = `Stainless`
		str_Sill_Material_values[4] = `Wood`
		str_Sill_Material_values[5] = `Plastic`
		str_Sill_Material_values[6] = `Tempered Glass`
		str_Sill_Material_values[7] = `Brass`
		str_Sill_Material_values[8] = `Bronze`
		str_Sill_Material_values[9] = `-`
		str_Sill_Material_values[10] = `Undefined`

	values "stSill_Material" str_Sill_Material_values, CUSTOM
	values "iSill_Material" 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 999

	if GLOB_MODPAR_NAME = "stSill_Material" then
		iSill_Material = 999
		for i = 1 to vardim1(str_Sill_Material_values)
			if stSill_Material = str_Sill_Material_values[i] then
				iSill_Material = i
				 i = vardim1(str_Sill_Material_values) ! break
			endif
		next i
		parameters iSill_Material = iSill_Material
	else
		if iSill_Material # 999 then
			iSill_Material = max(1, min(iSill_Material, vardim1(str_Sill_Material_values)))
			stSill_Material = str_Sill_Material_values[iSill_Material]
		endif
		parameters stSill_Material = stSill_Material
	endif
return

! ==============================================================================
! "W_Type_Name"
! ==============================================================================
"W_Type_Name":
	dim str_W_Type_Name_values[10]
		str_W_Type_Name_values[1] = `SW`
		str_W_Type_Name_values[2] = `AW`
		str_W_Type_Name_values[3] = `SSW`
		str_W_Type_Name_values[4] = `WW`
		str_W_Type_Name_values[5] = `SG`
		str_W_Type_Name_values[6] = `AG`
		str_W_Type_Name_values[7] = `SSG`
		str_W_Type_Name_values[8] = `PG`
		str_W_Type_Name_values[9] = `WG`
		str_W_Type_Name_values[10] = `CW`

	values "stW_Type_Name" str_W_Type_Name_values, CUSTOM
	values "iW_Type_Name" 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 999

	if GLOB_MODPAR_NAME = "stW_Type_Name" then
		iW_Type_Name = 999
		for i = 1 to vardim1(str_W_Type_Name_values)
			if stW_Type_Name = str_W_Type_Name_values[i] then
				iW_Type_Name = i
				 i = vardim1(str_W_Type_Name_values) ! break
			endif
		next i
		parameters iW_Type_Name = iW_Type_Name
	else
		if iW_Type_Name # 999 then
			iW_Type_Name = max(1, min(iW_Type_Name, vardim1(str_W_Type_Name_values)))
			stW_Type_Name = str_W_Type_Name_values[iW_Type_Name]
		endif
		parameters stW_Type_Name = stW_Type_Name
	endif
return

! ==============================================================================
! "W_Regulations"
! ==============================================================================
"W_Regulations":
	dim str_W_Regulations_values[4]
		str_W_Regulations_values[1] = `Wired Fire Resistant Glass`
		str_W_Regulations_values[2] = `Closed Fire Door`
		str_W_Regulations_values[3] = `No regulations`
		str_W_Regulations_values[4] = `Undefined`

	values "stW_Regulations" str_W_Regulations_values, CUSTOM
	values "iW_Regulations" 1, 2, 4, 5, 999

	if GLOB_MODPAR_NAME = "stW_Regulations" then
		iW_Regulations = 999
		if stW_Regulations = str_W_Regulations_values[1] then iW_Regulations = 1
		if stW_Regulations = str_W_Regulations_values[2] then iW_Regulations = 2
		if stW_Regulations = str_W_Regulations_values[3] then iW_Regulations = 4
		if stW_Regulations = str_W_Regulations_values[4] then iW_Regulations = 5
		parameters iW_Regulations = iW_Regulations
	else
		if iW_Regulations # 999 then
			if iW_Regulations = 1 then stW_Regulations = str_W_Regulations_values[1]
			if iW_Regulations = 2 then stW_Regulations = str_W_Regulations_values[2]
			if iW_Regulations = 4 then stW_Regulations = str_W_Regulations_values[3]
			if iW_Regulations = 5 then stW_Regulations = str_W_Regulations_values[4]
		endif
		parameters stW_Regulations = stW_Regulations
	endif
return

! ==============================================================================
! "W_Board_Material"
! ==============================================================================
"W_Board_Material":
	dim str_W_Board_Material_values[10]
		str_W_Board_Material_values[1] = `Steel`
		str_W_Board_Material_values[2] = `Aluminum`
		str_W_Board_Material_values[3] = `Stainless`
		str_W_Board_Material_values[4] = `Wood`
		str_W_Board_Material_values[5] = `Plastic`
		str_W_Board_Material_values[6] = `Tempered Glass`
		str_W_Board_Material_values[7] = `Brass`
		str_W_Board_Material_values[8] = `Bronze`
		str_W_Board_Material_values[9] = `-`
		str_W_Board_Material_values[10] = `Undefined`

	values "stW_Board_Material" str_W_Board_Material_values, CUSTOM
	values "iW_Board_Material" 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 999

	if GLOB_MODPAR_NAME = "stW_Board_Material" then
		iW_Board_Material = 999
		for i = 1 to vardim1(str_W_Board_Material_values)
			if stW_Board_Material = str_W_Board_Material_values[i] then
				iW_Board_Material = i
				 i = vardim1(str_W_Board_Material_values) ! break
			endif
		next i
		parameters iW_Board_Material = iW_Board_Material
	else
		if iW_Board_Material # 999 then
			iW_Board_Material = max(1, min(iW_Board_Material, vardim1(str_W_Board_Material_values)))
			stW_Board_Material = str_W_Board_Material_values[iW_Board_Material]
		endif
		parameters stW_Board_Material = stW_Board_Material
	endif
return

! ==============================================================================
! "W_Glass_Type"
! ==============================================================================
"W_Glass_Type":
	dim str_W_Glass_Type_values[16]
		str_W_Glass_Type_values[1] = `Normal Plate Glass`
		str_W_Glass_Type_values[2] = `Float Plate Glass`
		str_W_Glass_Type_values[3] = `Molded Wired Glass`
		str_W_Glass_Type_values[4] = `Heat Absorbing Glass`
		str_W_Glass_Type_values[5] = `Multi-Layered Glass`
		str_W_Glass_Type_values[6] = `Figured glass`
		str_W_Glass_Type_values[7] = `Polished Plate Lined Glass`
		str_W_Glass_Type_values[8] = `Heat Absorbing Wired Glass`
		str_W_Glass_Type_values[9] = `Laminated Glass`
		str_W_Glass_Type_values[10] = `Polished Plate Wired Glass`
		str_W_Glass_Type_values[11] = `Molded Line Glass`
		str_W_Glass_Type_values[12] = `Heat Reflecting Glass`
		str_W_Glass_Type_values[13] = `High Spec. Heat Reflecting Glass`
		str_W_Glass_Type_values[14] = `Tempered Glass`
		str_W_Glass_Type_values[15] = `-`
		str_W_Glass_Type_values[16] = `Undefined`

	values "stW_Glass_Type" str_W_Glass_Type_values, CUSTOM
	values "iW_Glass_Type" 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 999

	if GLOB_MODPAR_NAME = "stW_Glass_Type" then
		iW_Glass_Type = 999
		for i = 1 to vardim1(str_W_Glass_Type_values)
			if stW_Glass_Type = str_W_Glass_Type_values[i] then
				iW_Glass_Type = i
				 i = vardim1(str_W_Glass_Type_values) ! break
			endif
		next i
		parameters iW_Glass_Type = iW_Glass_Type
	else
		if iW_Glass_Type # 999 then
			iW_Glass_Type = max(1, min(iW_Glass_Type, vardim1(str_W_Glass_Type_values)))
			stW_Glass_Type = str_W_Glass_Type_values[iW_Glass_Type]
		endif
		parameters stW_Glass_Type = stW_Glass_Type
	endif
return

! ==============================================================================
! "W_Glass_Thickness"
! ==============================================================================
"W_Glass_Thickness":
	dim str_W_Glass_Thickness_values[15]
		str_W_Glass_Thickness_values[1] = `1.9 mm`
		str_W_Glass_Thickness_values[2] = `2.2 mm`
		str_W_Glass_Thickness_values[3] = `3 mm`
		str_W_Glass_Thickness_values[4] = `4 mm`
		str_W_Glass_Thickness_values[5] = `5 mm`
		str_W_Glass_Thickness_values[6] = `6 mm`
		str_W_Glass_Thickness_values[7] = `6.8 mm`
		str_W_Glass_Thickness_values[8] = `8 mm`
		str_W_Glass_Thickness_values[9] = `10 mm`
		str_W_Glass_Thickness_values[10] = `12 mm`
		str_W_Glass_Thickness_values[11] = `15 mm`
		str_W_Glass_Thickness_values[12] = `19 mm`
		str_W_Glass_Thickness_values[13] = `21 mm`
		str_W_Glass_Thickness_values[14] = `-`
		str_W_Glass_Thickness_values[15] = `Undefined`

	values "stW_Glass_Thickness" str_W_Glass_Thickness_values, CUSTOM
	values "iW_Glass_Thickness" 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 999

	if GLOB_MODPAR_NAME = "stW_Glass_Thickness" then
		iW_Glass_Thickness = 999
		for i = 1 to vardim1(str_W_Glass_Thickness_values)
			if stW_Glass_Thickness = str_W_Glass_Thickness_values[i] then
				iW_Glass_Thickness = i
				 i = vardim1(str_W_Glass_Thickness_values) ! break
			endif
		next i
		parameters iW_Glass_Thickness = iW_Glass_Thickness
	else
		if iW_Glass_Thickness # 999 then
			iW_Glass_Thickness = max(1, min(iW_Glass_Thickness, vardim1(str_W_Glass_Thickness_values)))
			stW_Glass_Thickness = str_W_Glass_Thickness_values[iW_Glass_Thickness]
		endif
		parameters stW_Glass_Thickness = stW_Glass_Thickness
	endif
return

! ==============================================================================
! "Pf_Strength"
! ==============================================================================
"Pf_Strength":
	dim str_Pf_Strength_values[3]
		str_Pf_Strength_values[1] = `24`
		str_Pf_Strength_values[2] = `28`
		str_Pf_Strength_values[3] = `36`

	values "stPf_Strength" str_Pf_Strength_values, CUSTOM
	values "iPf_Strength" 1, 2, 3, 999

	if GLOB_MODPAR_NAME = "stPf_Strength" then
		iPf_Strength = 999
		for i = 1 to vardim1(str_Pf_Strength_values)
			if stPf_Strength = str_Pf_Strength_values[i] then
				iPf_Strength = i
				 i = vardim1(str_Pf_Strength_values) ! break
			endif
		next i
		parameters iPf_Strength = iPf_Strength
	else
		if iPf_Strength # 999 then
			iPf_Strength = max(1, min(iPf_Strength, vardim1(str_Pf_Strength_values)))
			stPf_Strength = str_Pf_Strength_values[iPf_Strength]
		endif
		parameters stPf_Strength = stPf_Strength
	endif
return

! ==============================================================================
! "Pf_Water"
! ==============================================================================
"Pf_Water":
	dim str_Pf_Water_values[5]
		str_Pf_Water_values[1] = `W-1`
		str_Pf_Water_values[2] = `W-2`
		str_Pf_Water_values[3] = `W-3`
		str_Pf_Water_values[4] = `W-4`
		str_Pf_Water_values[5] = `W-5`

	values "stPf_Water" str_Pf_Water_values, CUSTOM
	values "iPf_Water" 1, 2, 3, 4, 5, 999

	if GLOB_MODPAR_NAME = "stPf_Water" then
		iPf_Water = 999
		for i = 1 to vardim1(str_Pf_Water_values)
			if stPf_Water = str_Pf_Water_values[i] then
				iPf_Water = i
				 i = vardim1(str_Pf_Water_values) ! break
			endif
		next i
		parameters iPf_Water = iPf_Water
	else
		if iPf_Water # 999 then
			iPf_Water = max(1, min(iPf_Water, vardim1(str_Pf_Water_values)))
			stPf_Water = str_Pf_Water_values[iPf_Water]
		endif
		parameters stPf_Water = stPf_Water
	endif
return

! ==============================================================================
! "Sill_Finish"
! ==============================================================================
"Sill_Finish":
	dim str_Sill_Finish_values[1]
		str_Sill_Finish_values[1] = `Undefined`

	values "stSill_Finish" str_Sill_Finish_values, CUSTOM
	values "iSill_Finish" 1, 999

	if GLOB_MODPAR_NAME = "stSill_Finish" then
		iSill_Finish = 999
		for i = 1 to vardim1(str_Sill_Finish_values)
			if stSill_Finish = str_Sill_Finish_values[i] then
				iSill_Finish = i
				 i = vardim1(str_Sill_Finish_values) ! break
			endif
		next i
		parameters iSill_Finish = iSill_Finish
	else
		if iSill_Finish # 999 then
			iSill_Finish = max(1, min(iSill_Finish, vardim1(str_Sill_Finish_values)))
			stSill_Finish = str_Sill_Finish_values[iSill_Finish]
		endif
		parameters stSill_Finish = stSill_Finish
	endif
return

! ==============================================================================
! "W_Frame_Material"
! ==============================================================================
"W_Frame_Material":
	dim str_W_Frame_Material_values[1]
		str_W_Frame_Material_values[1] = `Undefined`

	values "stW_Frame_Material" str_W_Frame_Material_values, CUSTOM
	values "iW_Frame_Material" 1, 999

	if GLOB_MODPAR_NAME = "stW_Frame_Material" then
		iW_Frame_Material = 999
		for i = 1 to vardim1(str_W_Frame_Material_values)
			if stW_Frame_Material = str_W_Frame_Material_values[i] then
				iW_Frame_Material = i
				 i = vardim1(str_W_Frame_Material_values) ! break
			endif
		next i
		parameters iW_Frame_Material = iW_Frame_Material
	else
		if iW_Frame_Material # 999 then
			iW_Frame_Material = max(1, min(iW_Frame_Material, vardim1(str_W_Frame_Material_values)))
			stW_Frame_Material = str_W_Frame_Material_values[iW_Frame_Material]
		endif
		parameters stW_Frame_Material = stW_Frame_Material
	endif
return

! ==============================================================================
! "W_Frame_Finish"
! ==============================================================================
"W_Frame_Finish":
	dim str_W_Frame_Finish_values[1]
		str_W_Frame_Finish_values[1] = `Undefined`

	values "stW_Frame_Finish" str_W_Frame_Finish_values, CUSTOM
	values "iW_Frame_Finish" 1, 999

	if GLOB_MODPAR_NAME = "stW_Frame_Finish" then
		iW_Frame_Finish = 999
		for i = 1 to vardim1(str_W_Frame_Finish_values)
			if stW_Frame_Finish = str_W_Frame_Finish_values[i] then
				iW_Frame_Finish = i
				 i = vardim1(str_W_Frame_Finish_values) ! break
			endif
		next i
		parameters iW_Frame_Finish = iW_Frame_Finish
	else
		if iW_Frame_Finish # 999 then
			iW_Frame_Finish = max(1, min(iW_Frame_Finish, vardim1(str_W_Frame_Finish_values)))
			stW_Frame_Finish = str_W_Frame_Finish_values[iW_Frame_Finish]
		endif
		parameters stW_Frame_Finish = stW_Frame_Finish
	endif
return

! ==============================================================================
! "W_Board_Finish"
! ==============================================================================
"W_Board_Finish":
	dim str_W_Board_Finish_values[1]
		str_W_Board_Finish_values[1] = `Undefined`

	values "stW_Board_Finish" str_W_Board_Finish_values, CUSTOM
	values "iW_Board_Finish" 1, 999

	if GLOB_MODPAR_NAME = "stW_Board_Finish" then
		iW_Board_Finish = 999
		for i = 1 to vardim1(str_W_Board_Finish_values)
			if stW_Board_Finish = str_W_Board_Finish_values[i] then
				iW_Board_Finish = i
				 i = vardim1(str_W_Board_Finish_values) ! break
			endif
		next i
		parameters iW_Board_Finish = iW_Board_Finish
	else
		if iW_Board_Finish # 999 then
			iW_Board_Finish = max(1, min(iW_Board_Finish, vardim1(str_W_Board_Finish_values)))
			stW_Board_Finish = str_W_Board_Finish_values[iW_Board_Finish]
		endif
		parameters stW_Board_Finish = stW_Board_Finish
	endif
return

! ==============================================================================
! "W_Glass_Holder"
! ==============================================================================
"W_Glass_Holder":
	dim str_W_Glass_Holder_values[1]
		str_W_Glass_Holder_values[1] = `Undefined`

	values "stW_Glass_Holder" str_W_Glass_Holder_values, CUSTOM
	values "iW_Glass_Holder" 1, 999

	if GLOB_MODPAR_NAME = "stW_Glass_Holder" then
		iW_Glass_Holder = 999
		for i = 1 to vardim1(str_W_Glass_Holder_values)
			if stW_Glass_Holder = str_W_Glass_Holder_values[i] then
				iW_Glass_Holder = i
				 i = vardim1(str_W_Glass_Holder_values) ! break
			endif
		next i
		parameters iW_Glass_Holder = iW_Glass_Holder
	else
		if iW_Glass_Holder # 999 then
			iW_Glass_Holder = max(1, min(iW_Glass_Holder, vardim1(str_W_Glass_Holder_values)))
			stW_Glass_Holder = str_W_Glass_Holder_values[iW_Glass_Holder]
		endif
		parameters stW_Glass_Holder = stW_Glass_Holder
	endif
return

! ==============================================================================
! "W_Mesh_Style"
! ==============================================================================
"W_Mesh_Style":
	dim str_W_Mesh_Style_values[1]
		str_W_Mesh_Style_values[1] = `Undefined`

	values "stW_Mesh_Style" str_W_Mesh_Style_values, CUSTOM
	values "iW_Mesh_Style" 1, 999

	if GLOB_MODPAR_NAME = "stW_Mesh_Style" then
		iW_Mesh_Style = 999
		for i = 1 to vardim1(str_W_Mesh_Style_values)
			if stW_Mesh_Style = str_W_Mesh_Style_values[i] then
				iW_Mesh_Style = i
				 i = vardim1(str_W_Mesh_Style_values) ! break
			endif
		next i
		parameters iW_Mesh_Style = iW_Mesh_Style
	else
		if iW_Mesh_Style # 999 then
			iW_Mesh_Style = max(1, min(iW_Mesh_Style, vardim1(str_W_Mesh_Style_values)))
			stW_Mesh_Style = str_W_Mesh_Style_values[iW_Mesh_Style]
		endif
		parameters stW_Mesh_Style = stW_Mesh_Style
	endif
return

! ==============================================================================
! "W_Mesh_Type"
! ==============================================================================
"W_Mesh_Type":
	dim str_W_Mesh_Type_values[1]
		str_W_Mesh_Type_values[1] = `Undefined`

	values "stW_Mesh_Type" str_W_Mesh_Type_values, CUSTOM
	values "iW_Mesh_Type" 1, 999

	if GLOB_MODPAR_NAME = "stW_Mesh_Type" then
		iW_Mesh_Type = 999
		for i = 1 to vardim1(str_W_Mesh_Type_values)
			if stW_Mesh_Type = str_W_Mesh_Type_values[i] then
				iW_Mesh_Type = i
				 i = vardim1(str_W_Mesh_Type_values) ! break
			endif
		next i
		parameters iW_Mesh_Type = iW_Mesh_Type
	else
		if iW_Mesh_Type # 999 then
			iW_Mesh_Type = max(1, min(iW_Mesh_Type, vardim1(str_W_Mesh_Type_values)))
			stW_Mesh_Type = str_W_Mesh_Type_values[iW_Mesh_Type]
		endif
		parameters stW_Mesh_Type = stW_Mesh_Type
	endif
return

! ==============================================================================
! "W_Metal"
! ==============================================================================
"W_Metal":
	dim str_W_Metal_values[1]
		str_W_Metal_values[1] = `Undefined`

	values "stW_Metal" str_W_Metal_values, CUSTOM
	values "iW_Metal" 1, 999

	if GLOB_MODPAR_NAME = "stW_Metal" then
		iW_Metal = 999
		for i = 1 to vardim1(str_W_Metal_values)
			if stW_Metal = str_W_Metal_values[i] then
				iW_Metal = i
				 i = vardim1(str_W_Metal_values) ! break
			endif
		next i
		parameters iW_Metal = iW_Metal
	else
		if iW_Metal # 999 then
			iW_Metal = max(1, min(iW_Metal, vardim1(str_W_Metal_values)))
			stW_Metal = str_W_Metal_values[iW_Metal]
		endif
		parameters stW_Metal = stW_Metal
	endif
return

! ==============================================================================
! "W_Opening_Type"
! ==============================================================================
"W_Opening_Type":
	dim str_W_Opening_Type_values[1]
		str_W_Opening_Type_values[1] = `Undefined`

	values "stW_Opening_Type" str_W_Opening_Type_values, CUSTOM
	values "iW_Opening_Type" 1, 999

	if GLOB_MODPAR_NAME = "stW_Opening_Type" then
		iW_Opening_Type = 999
		for i = 1 to vardim1(str_W_Opening_Type_values)
			if stW_Opening_Type = str_W_Opening_Type_values[i] then
				iW_Opening_Type = i
				 i = vardim1(str_W_Opening_Type_values) ! break
			endif
		next i
		parameters iW_Opening_Type = iW_Opening_Type
	else
		if iW_Opening_Type # 999 then
			iW_Opening_Type = max(1, min(iW_Opening_Type, vardim1(str_W_Opening_Type_values)))
			stW_Opening_Type = str_W_Opening_Type_values[iW_Opening_Type]
		endif
		parameters stW_Opening_Type = stW_Opening_Type
	endif
return

! ==============================================================================
! "Pf_Air"
! ==============================================================================
"Pf_Air":
	dim str_Pf_Air_values[4]
		str_Pf_Air_values[1] = `A-1`
		str_Pf_Air_values[2] = `A-2`
		str_Pf_Air_values[3] = `A-3`
		str_Pf_Air_values[4] = `A-4`

	values "stPf_Air" str_Pf_Air_values, CUSTOM
	values "iPf_Air" 1, 2, 3, 4, 999

	if GLOB_MODPAR_NAME = "stPf_Air" then
		iPf_Air = 999
		for i = 1 to vardim1(str_Pf_Air_values)
			if stPf_Air = str_Pf_Air_values[i] then
				iPf_Air = i
				 i = vardim1(str_Pf_Air_values) ! break
			endif
		next i
		parameters iPf_Air = iPf_Air
	else
		if iPf_Air # 999 then
			iPf_Air = max(1, min(iPf_Air, vardim1(str_Pf_Air_values)))
			stPf_Air = str_Pf_Air_values[iPf_Air]
		endif
		parameters stPf_Air = stPf_Air
	endif
return





]]>
</Script_VL>

<ParamSection SectVersion="26" SectionFlags="0" SubIdent="0">
	<ParamSectHeader>
		<Version>26</Version>
		<AutoHotspots>false</AutoHotspots>
		<StatBits>
			<STBit_FixSize/>
		</StatBits>
		<WDLeftFrame>0</WDLeftFrame>
		<WDRightFrame>0</WDRightFrame>
		<WDTopFrame>0</WDTopFrame>
		<WDBotFrame>0</WDBotFrame>
		<LayFlags>65535</LayFlags>
		<WDMirrorThickness>0</WDMirrorThickness>
		<WDWallInset>0</WDWallInset>
		<SymbolColor>0</SymbolColor>
	</ParamSectHeader>
	<Parameters>
		<Length Name="A">
			<Description><![CDATA["Dimension 1"]]></Description>
			<Fix/>
			<Value>1</Value>
		</Length>
		<Length Name="B">
			<Description><![CDATA["Dimension 2"]]></Description>
			<Fix/>
			<Value>1</Value>
		</Length>
		<Length Name="ZZYZX">
			<Description><![CDATA["Height"]]></Description>
			<Fix/>
			<Value>1</Value>
		</Length>
		<Integer Name="AC_WallContours">
			<Description><![CDATA["Wall Contours (0-None,1-Full,2-Side,3-Length)"]]></Description>
			<Fix/>
			<Value>0</Value>
		</Integer>
		<Integer Name="AC_Hole_Hotspot_Control">
			<Description><![CDATA["Hotspots 0-None,1-2D,2-3D,3-All"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>3</Value>
		</Integer>
		<Boolean Name="AC_show2DHotspotsIn3D">
			<Description><![CDATA["Show 2D Hotspots in 3D"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="ac_bottomlevel">
			<Description><![CDATA["Bottom Level"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="ac_toplevel">
			<Description><![CDATA["Top Level"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Boolean Name="AC_HoleSideMaterial">
			<Description><![CDATA["Hole has Wall's Side Surface"]]></Description>
			<Fix/>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="AC_HoleMaterialCurved">
			<Description><![CDATA["Hole Surface's Split is Curved in Curved Walls"]]></Description>
			<Fix/>
			<Value>0</Value>
		</Boolean>
		<Integer Name="gs_JPNObjectType">
			<Description><![CDATA["Object Values Type"]]></Description>
			<Value>1</Value>
		</Integer>
		<Boolean Name="gs_is_p2">
			<Description><![CDATA["There is p2 Parameter"]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_is_p6">
			<Description><![CDATA["There is p6 Parameter"]]></Description>
			<Value>0</Value>
		</Boolean>
		<String Name="stKey_Mark_Type">
			<Description><![CDATA["Maker Type"]]></Description>
			<Value><![CDATA["Type 1"]]></Value>
		</String>
		<Integer Name="iKey_Mark_Type">
			<Description><![CDATA["Maker Type"]]></Description>
			<Value>1</Value>
		</Integer>
		<String Name="stSill_Material">
			<Description><![CDATA["Sill Material"]]></Description>
			<Value><![CDATA["Steel"]]></Value>
		</String>
		<Integer Name="iSill_Material">
			<Description><![CDATA["Sill Material"]]></Description>
			<Value>1</Value>
		</Integer>
		<String Name="stW_Louvers_System">
			<Description><![CDATA[""]]></Description>
			<Value><![CDATA["Undefined"]]></Value>
		</String>
		<Integer Name="iW_Louvers_System">
			<Description><![CDATA[""]]></Description>
			<Value>1</Value>
		</Integer>
		<String Name="stW_Louvers_Material">
			<Description><![CDATA[""]]></Description>
			<Value><![CDATA["Steel"]]></Value>
		</String>
		<Integer Name="iW_Louvers_Material">
			<Description><![CDATA[""]]></Description>
			<Value>1</Value>
		</Integer>
		<String Name="stW_Louvers_Finish">
			<Description><![CDATA[""]]></Description>
			<Value><![CDATA["Undefined"]]></Value>
		</String>
		<Integer Name="iW_Louvers_Finish">
			<Description><![CDATA[""]]></Description>
			<Value>1</Value>
		</Integer>
		<String Name="fontType">
			<Description><![CDATA[""]]></Description>
			<Value><![CDATA[""]]></Value>
		</String>

		<!-- gs_JPNDoorParams: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_JPNDoorParams">
			<Description><![CDATA["Door Parameters"]]></Description>
		</Title>
		<Length Name="p2">
			<Description><![CDATA["Door Thickness"]]></Description>
			<Value>0</Value>
		</Length>
		<String Name="stD_Type_Name">
			<Description><![CDATA["Fitting Classification"]]></Description>
			<Value><![CDATA["SD"]]></Value>
		</String>
		<Integer Name="iD_Type_Name">
			<Description><![CDATA["Fitting Classification"]]></Description>
			<Value>1</Value>
		</Integer>
		<String Name="stD_Regulations">
			<Description><![CDATA["Regulations"]]></Description>
			<Value><![CDATA["TB (Closed at all time)"]]></Value>
		</String>
		<Integer Name="iD_Regulations">
			<Description><![CDATA["Regulations"]]></Description>
			<Value>1</Value>
		</Integer>
		<String Name="stFrame_Material">
			<Description><![CDATA["Frame Material 2"]]></Description>
			<Value><![CDATA["Steel"]]></Value>
		</String>
		<Integer Name="iFrame_Material">
			<Description><![CDATA["Frame Material 2"]]></Description>
			<Value>1</Value>
		</Integer>
		<String Name="stPanel_Type">
			<Description><![CDATA["Door Type"]]></Description>
			<Value><![CDATA["Frameless Door (Both face)"]]></Value>
		</String>
		<Integer Name="iPanel_Type">
			<Description><![CDATA["Door Type"]]></Description>
			<Value>1</Value>
		</Integer>
		<String Name="stTransom_Glasstype">
			<Description><![CDATA["Transom Type"]]></Description>
			<Value><![CDATA["Steel Panel"]]></Value>
		</String>
		<Integer Name="iTransom_Glasstype">
			<Description><![CDATA["Transom Type"]]></Description>
			<Value>1</Value>
		</Integer>
		<String Name="stD_Glass_Type">
			<Description><![CDATA["Glass Type"]]></Description>
			<Value><![CDATA["Normal Plate Glass"]]></Value>
		</String>
		<Integer Name="iD_Glass_Type">
			<Description><![CDATA["Glass Type"]]></Description>
			<Value>1</Value>
		</Integer>
		<String Name="stD_Glass_Thickness">
			<Description><![CDATA["Glass Thickness"]]></Description>
			<Value><![CDATA["1.9 mm"]]></Value>
		</String>
		<Integer Name="iD_Glass_Thickness">
			<Description><![CDATA["Glass Thickness"]]></Description>
			<Value>1</Value>
		</Integer>
		<String Name="stTreshold_Material">
			<Description><![CDATA["Threshold Material"]]></Description>
			<Value><![CDATA["Steel"]]></Value>
		</String>
		<Integer Name="iTreshold_Material">
			<Description><![CDATA["Threshold Material"]]></Description>
			<Value>1</Value>
		</Integer>
		<String Name="stD_Pf_Air">
			<Description><![CDATA["Airtight"]]></Description>
			<Value><![CDATA["Undefined"]]></Value>
		</String>
		<Integer Name="iD_Pf_Air">
			<Description><![CDATA["Airtight"]]></Description>
			<Value>1</Value>
		</Integer>
		<String Name="stD_Pf_Sound">
			<Description><![CDATA["Sound Insulation"]]></Description>
			<Value><![CDATA["Undefined"]]></Value>
		</String>
		<Integer Name="iD_Pf_Sound">
			<Description><![CDATA["Sound Insulation"]]></Description>
			<Value>1</Value>
		</Integer>
		<String Name="stD_Frame_Material">
			<Description><![CDATA["Frame Material"]]></Description>
			<Value><![CDATA["Undefined"]]></Value>
		</String>
		<Integer Name="iD_Frame_Material">
			<Description><![CDATA["Frame Material"]]></Description>
			<Value>1</Value>
		</Integer>
		<String Name="stD_Frame_Finish">
			<Description><![CDATA["Frame Finish"]]></Description>
			<Value><![CDATA["Undefined"]]></Value>
		</String>
		<Integer Name="iD_Frame_Finish">
			<Description><![CDATA["Frame Finish"]]></Description>
			<Value>1</Value>
		</Integer>
		<String Name="stTreshould_Finish">
			<Description><![CDATA["Threshold Finish"]]></Description>
			<Value><![CDATA["Undefined"]]></Value>
		</String>
		<Integer Name="iTreshould_Finish">
			<Description><![CDATA["Threshold Finish"]]></Description>
			<Value>1</Value>
		</Integer>
		<String Name="stPanel_Material">
			<Description><![CDATA[""]]></Description>
			<Value><![CDATA["Undefined"]]></Value>
		</String>
		<Integer Name="iPanel_Material">
			<Description><![CDATA[""]]></Description>
			<Value>1</Value>
		</Integer>
		<String Name="stPanel_Finish">
			<Description><![CDATA[""]]></Description>
			<Value><![CDATA["Undefined"]]></Value>
		</String>
		<Integer Name="iPanel_Finish">
			<Description><![CDATA[""]]></Description>
			<Value>1</Value>
		</Integer>
		<String Name="stD_Louvers_Type">
			<Description><![CDATA[""]]></Description>
			<Value><![CDATA["Undefined"]]></Value>
		</String>
		<Integer Name="iD_Louvers_Type">
			<Description><![CDATA[""]]></Description>
			<Value>1</Value>
		</Integer>
		<String Name="stD_Lock_Type">
			<Description><![CDATA[""]]></Description>
			<Value><![CDATA["Undefined"]]></Value>
		</String>
		<Integer Name="iD_Lock_Type">
			<Description><![CDATA[""]]></Description>
			<Value>1</Value>
		</Integer>
		<String Name="stD_Handle_Type">
			<Description><![CDATA[""]]></Description>
			<Value><![CDATA["Undefined"]]></Value>
		</String>
		<Integer Name="iD_Handle_Type">
			<Description><![CDATA[""]]></Description>
			<Value>1</Value>
		</Integer>
		<String Name="stD_Hinge_Type">
			<Description><![CDATA[""]]></Description>
			<Value><![CDATA["Undefined"]]></Value>
		</String>
		<Integer Name="iD_Hinge_Type">
			<Description><![CDATA[""]]></Description>
			<Value>1</Value>
		</Integer>
		<String Name="stD_Closer_Type">
			<Description><![CDATA[""]]></Description>
			<Value><![CDATA["Undefined"]]></Value>
		</String>
		<Integer Name="iD_Closer_Type">
			<Description><![CDATA[""]]></Description>
			<Value>1</Value>
		</Integer>
		<String Name="stD_Stop_Type">
			<Description><![CDATA[""]]></Description>
			<Value><![CDATA["Undefined"]]></Value>
		</String>
		<Integer Name="iD_Stop_Type">
			<Description><![CDATA[""]]></Description>
			<Value>1</Value>
		</Integer>
		<String Name="stD_Drop_Type">
			<Description><![CDATA[""]]></Description>
			<Value><![CDATA["Undefined"]]></Value>
		</String>
		<Integer Name="iD_Drop_Type">
			<Description><![CDATA[""]]></Description>
			<Value>1</Value>
		</Integer>
		<String Name="stD_Adjuster_Type">
			<Description><![CDATA[""]]></Description>
			<Value><![CDATA["Undefined"]]></Value>
		</String>
		<Integer Name="iD_Adjuster_Type">
			<Description><![CDATA[""]]></Description>
			<Value>1</Value>
		</Integer>
		<String Name="stD_Chainlock_Type">
			<Description><![CDATA[""]]></Description>
			<Value><![CDATA["Undefined"]]></Value>
		</String>
		<Integer Name="iD_Chainlock_Type">
			<Description><![CDATA[""]]></Description>
			<Value>1</Value>
		</Integer>
		<String Name="stD_Dooreye_Type">
			<Description><![CDATA[""]]></Description>
			<Value><![CDATA["Undefined"]]></Value>
		</String>
		<Integer Name="iD_Dooreye_Type">
			<Description><![CDATA[""]]></Description>
			<Value>1</Value>
		</Integer>
		<String Name="stD_Post_Type">
			<Description><![CDATA[""]]></Description>
			<Value><![CDATA["Undefined"]]></Value>
		</String>
		<Integer Name="iD_Post_Type">
			<Description><![CDATA[""]]></Description>
			<Value>1</Value>
		</Integer>

		<!-- gs_WinParams: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_WinParams">
			<Description><![CDATA["Window Parameters"]]></Description>
		</Title>
		<String Name="stW_Type_Name">
			<Description><![CDATA["Fitting Classification"]]></Description>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="iW_Type_Name">
			<Description><![CDATA["Fitting Classification"]]></Description>
			<Value>0</Value>
		</Integer>
		<String Name="stW_Regulations">
			<Description><![CDATA["Regulations"]]></Description>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="iW_Regulations">
			<Description><![CDATA["Regulations"]]></Description>
			<Value>0</Value>
		</Integer>
		<String Name="stW_Board_Material">
			<Description><![CDATA["Board/Frame Material"]]></Description>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="iW_Board_Material">
			<Description><![CDATA["Board/Frame Material"]]></Description>
			<Value>0</Value>
		</Integer>
		<String Name="stW_Glass_Type">
			<Description><![CDATA["Glass Type"]]></Description>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="iW_Glass_Type">
			<Description><![CDATA["Glass Type"]]></Description>
			<Value>0</Value>
		</Integer>
		<String Name="stW_Glass_Thickness">
			<Description><![CDATA["Glass Thickness"]]></Description>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="iW_Glass_Thickness">
			<Description><![CDATA["Glass Thickness"]]></Description>
			<Value>0</Value>
		</Integer>
		<String Name="stPf_Strength">
			<Description><![CDATA["Strength"]]></Description>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="iPf_Strength">
			<Description><![CDATA["Strength"]]></Description>
			<Value>0</Value>
		</Integer>
		<String Name="stPf_Air">
			<Description><![CDATA["Airtight"]]></Description>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="iPf_Air">
			<Description><![CDATA["Airtight"]]></Description>
			<Value>0</Value>
		</Integer>
		<String Name="stPf_Water">
			<Description><![CDATA["Watertight"]]></Description>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="iPf_Water">
			<Description><![CDATA["Watertight"]]></Description>
			<Value>0</Value>
		</Integer>
		<String Name="stPf_Sound">
			<Description><![CDATA["Sound Insulation"]]></Description>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="iPf_Sound">
			<Description><![CDATA["Sound Insulation"]]></Description>
			<Value>0</Value>
		</Integer>
		<String Name="stSill_Finish">
			<Description><![CDATA["Sill Finish"]]></Description>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="iSill_Finish">
			<Description><![CDATA["Sill Finish"]]></Description>
			<Value>0</Value>
		</Integer>
		<String Name="stW_Frame_Material">
			<Description><![CDATA["Frame Material"]]></Description>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="iW_Frame_Material">
			<Description><![CDATA["Frame Material"]]></Description>
			<Value>0</Value>
		</Integer>
		<String Name="stW_Frame_Finish">
			<Description><![CDATA["Frame Finish"]]></Description>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="iW_Frame_Finish">
			<Description><![CDATA["Frame Finish"]]></Description>
			<Value>0</Value>
		</Integer>
		<String Name="stW_Board_Finish">
			<Description><![CDATA["Board/Frame Finish"]]></Description>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="iW_Board_Finish">
			<Description><![CDATA["Board/Frame Finish"]]></Description>
			<Value>0</Value>
		</Integer>
		<String Name="stW_Glass_Holder">
			<Description><![CDATA["Glazing Bead"]]></Description>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="iW_Glass_Holder">
			<Description><![CDATA["Glazing Bead"]]></Description>
			<Value>0</Value>
		</Integer>
		<String Name="stW_Mesh_Style">
			<Description><![CDATA["Screen Frame Type"]]></Description>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="iW_Mesh_Style">
			<Description><![CDATA["Screen Frame Type"]]></Description>
			<Value>0</Value>
		</Integer>
		<String Name="stW_Mesh_Type">
			<Description><![CDATA["Screen Type"]]></Description>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="iW_Mesh_Type">
			<Description><![CDATA["Screen Type"]]></Description>
			<Value>0</Value>
		</Integer>
		<String Name="stW_Metal">
			<Description><![CDATA["Metal Accessories"]]></Description>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="iW_Metal">
			<Description><![CDATA["Metal Accessories"]]></Description>
			<Value>0</Value>
		</Integer>
		<String Name="stW_Opening_Type">
			<Description><![CDATA["Manual Opening Device"]]></Description>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="iW_Opening_Type">
			<Description><![CDATA["Manual Opening Device"]]></Description>
			<Value>0</Value>
		</Integer>
		<FillPattern Name="gs_fillJPNmarker">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<Boolean Name="gs_JPN_listParams_contr">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
	</Parameters>
</ParamSection>

<Copyright SectVersion="1" SectionFlags="0" SubIdent="0">
	<Author>GRAPHISOFT</Author>
	<License>
		<Type>CC BY-ND</Type>
		<Version>3.0</Version>
	</License>
</Copyright>

<Keywords SectVersion="1" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Keywords>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Comment SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Comment>

</Symbol>
