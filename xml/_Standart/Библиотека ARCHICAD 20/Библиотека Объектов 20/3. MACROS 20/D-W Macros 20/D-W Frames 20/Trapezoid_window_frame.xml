<?xml version="1.0" encoding="UTF-8"?>
<Symbol IsArchivable="true" IsPlaceable="false" MainGUID="49C808B7-B148-4F46-8FF2-DFA4A58BD9EE" MigrationValue="Normal" Owner="1196638531" Signature="1297307981" Version="38">
<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_3D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
! Trapezoid_window_frame


if gs_frame_mat = gs_frame_mat2 then				!!! One body, in case of similar materials
	in_out_cikl = 1

	var_mater = gs_frame_mat
	var_mater2 = gs_frame_mat

	out_thk = 0
	part_thk =gs_frame_thk

	in_out_mask = 15
	in_out_mask2 = 13
	if gs_stack_bottom then bot_mask = 8 else bot_mask = 15
else												!!!two bodies
	in_out_cikl = 2

	!!! Inner-outer Material Control-----------
	temp_frame_mat = gs_frame_mat
	temp_frame_mat2 = gs_frame_mat2
	if WIDO_REVEAL_SIDE then
		gs_frame_mat=temp_frame_mat
		gs_frame_mat2=temp_frame_mat2
	else
		gs_frame_mat=temp_frame_mat2
		gs_frame_mat2=temp_frame_mat
	endif

	var_mater = gs_frame_mat
	var_mater2 = gs_frame_mat2

	if lod3D = 2 then	! Detailed
		out_thk = gs_frame_thk - gs_rebate_depth
		part_thk = out_thk
	else
		if lod3D = 5 then
			out_thk = gs_frame_thk/2
		else
			if WIDO_REVEAL_SIDE then
				out_thk = gs_frame_thk/2 - gs_glass_thk/2
			else
				out_thk = gs_frame_thk/2 + gs_glass_thk/2
			endif
		endif
		part_thk = out_thk
	endif

	in_out_mask = 11
	in_out_mask2 = 9
	if gs_stack_bottom then bot_mask = 8 else bot_mask = 11
endif


bVerticalMullion =	((lod3D = 1 | lod3D = 5)						&\
					 (sash_num = 2									|\
					  gs_optype_m_01 = SASH_DOUBLE_SIDE_HUNG		|\
					  gs_optype_m_01 = SASH_SLIDING_HOR				|\
					  gs_optype_m_01 = SASH_SLIDING_HOR_M			|\
					  gs_optype_m_01 = SASH_DOUBLE_SLIDING_HOR		|\
					  gs_optype_m_01 = SASH_DOUBLE_SLIDING_HOR_M	))

bHorizontalMullion =	((lod3D = 1 | lod3D = 5)					&\
						 gs_UTrans									&\
						 sash_num = 1								&\
						 (gs_optype_m_01 = SASH_SLIDING_VER			|\
						  gs_optype_m_01 = SASH_DOUBLE_SLIDING_VER	))

if bVerticalMullion then
	if sash_num = 2 | gs_optype_m_01 = SASH_DOUBLE_SIDE_HUNG then
		mfx1 = a/2 - gs_SLight_w - gs_sash_width
		mfx2 = mfx1 + 2 * gs_sash_width
	else
		mfx1 = a/2 - gs_SLight_w - gs_sash_width/2
		mfx2 = mfx1 + 2 * gs_sash_width/2
	endif
	if gs_UTrans then
		mfy2 = gs_UTrans_h-gs_UTrans_w/2-simp_mod
		mfy1 = mfy2
	else
		mfy2 = b - dysw1 + (gs_SLight_w - gs_sash_width - gs_frame_width - simp_mod_tr) * tan(topAngle)
		mfy1 = mfy2 + 2 * gs_sash_width * tan(topAngle)
	endif
else
	mfx1 = 0
	mfx2 = 0
	if bHorizontalMullion then
		mfy2 = gs_frame_width/2 + (gs_UTrans_h - gs_UTrans_w/2)/2 - gs_sash_width/2
		mfy1 = mfy2 + gs_sash_width
	else
		mfy1 = 0
		mfy2 = 0
	endif
endif


!! FRAME !!

group "frame"

	sect_fill gs_fillFr, gs_penFr_bg, gs_penFr_fg, gs_frame_pen_cont
	pen gs_frame_pen

	! --- Cutting in case of corner window -----------------------------------------
	halfA = A / 2
	cutLeft = 0
	cutRight = 0
	if abs(gs_frame_ovhg_left_out - gs_frame_ovhg_left_in) > EPS then
		addx -halfA - gs_frame_ovhg_left_out
		rotz 90
		cutplane -90 + atn((gs_frame_ovhg_left_out - gs_frame_ovhg_left_in) / gs_frame_thk)
		del 2
		cutLeft = 1
	endif
	if abs(gs_frame_ovhg_right_out - gs_frame_ovhg_right_in) > EPS then
		addx halfA + gs_frame_ovhg_right_out
		rotz 90
		cutplane 90 - atn((gs_frame_ovhg_right_out - gs_frame_ovhg_right_in) / gs_frame_thk)
		del 2
		cutRight = 1
	endif

	for ijk = 1 to in_out_cikl
		material var_mater

		if gs_SashText_typ_num = 1 then
			base
			if bHorizontalMullion then
				if gs_UTrans then
					cprism_ var_mater2,var_mater,var_mater,
						8, part_thk,
						-a/2+gs_frame_width+simp_mod,		gs_frame_width+simp_mod,					10,
						-a/2-leftOvhg,						-bottomOvhg,								in_out_mask,
						-a/2-leftOvhg,						b+dy2,										10,
						-a/2+gs_frame_width+simp_mod_tr,	b+dysw2,									in_out_mask,
						-a/2+gs_frame_width+simp_mod_tr,	gs_UTrans_h+(gs_UTrans_w/2+simp_mod_tr),	10,
						-a/2+gs_frame_width+simp_mod,		gs_UTrans_h-(gs_UTrans_w/2+simp_mod),		in_out_mask,
						-a/2+gs_frame_width+simp_mod,		mfy1,										10,
						-a/2+gs_frame_width+simp_mod,		mfy2,										in_out_mask
				else
					cprism_ var_mater2,var_mater,var_mater,
						6, part_thk,
						-a/2+gs_frame_width+simp_mod,		gs_frame_width+simp_mod,	10,
						-a/2-leftOvhg,						-bottomOvhg,				in_out_mask,
						-a/2-leftOvhg,						b+dy2,						10,
						-a/2+gs_frame_width+simp_mod_tr,	b+dysw2,					in_out_mask,
						-a/2+gs_frame_width+simp_mod,		mfy1,						10,
						-a/2+gs_frame_width+simp_mod,		mfy2,						in_out_mask
				endif
			else
				if gs_UTrans then
					cprism_ var_mater2,var_mater,var_mater,
						6, part_thk,
						-a/2+gs_frame_width+simp_mod,		gs_frame_width+simp_mod,					10,
						-a/2-leftOvhg,						-bottomOvhg,								in_out_mask,
						-a/2-leftOvhg,						b+dy2,										10,
						-a/2+gs_frame_width+simp_mod_tr,	b+dysw2,									in_out_mask,
						-a/2+gs_frame_width+simp_mod_tr,	gs_UTrans_h+(gs_UTrans_w/2+simp_mod_tr),	10,
						-a/2+gs_frame_width+simp_mod,		gs_UTrans_h-(gs_UTrans_w/2+simp_mod),		in_out_mask
				else
					cprism_ var_mater2,var_mater,var_mater,
						4, part_thk,
						-a/2+gs_frame_width+simp_mod,		gs_frame_width+simp_mod,	10,
						-a/2-leftOvhg,						-bottomOvhg,				in_out_mask,
						-a/2-leftOvhg,						b+dy2,						10,
						-a/2+gs_frame_width+simp_mod_tr,	b+dysw2,					in_out_mask
				endif
			endif
			vert 0, 0, 0
			vert 0, 1, 0
			vert 1, 0, 0
			vert 0, 0, 1
			coor 2, -1, -2, -3, -4
			body 1

			base
			if bHorizontalMullion then
				if gs_UTrans then
					cprism_ var_mater2,var_mater,var_mater,
						8, part_thk,
						a/2-gs_frame_width-simp_mod,	gs_frame_width+simp_mod,					10,
						a/2+rightOvhg,					-bottomOvhg,								in_out_mask,
						a/2+rightOvhg,					b-dy1,										10,
						a/2-gs_frame_width-simp_mod_tr,	b-dysw1,									in_out_mask,
						a/2-gs_frame_width-simp_mod_tr,	gs_UTrans_h+(gs_UTrans_w/2+simp_mod_tr),	10,
						a/2-gs_frame_width-simp_mod,	gs_UTrans_h-(gs_UTrans_w/2+simp_mod),		in_out_mask,
						a/2-gs_frame_width-simp_mod, 	mfy1,										10,
						a/2-gs_frame_width-simp_mod, 	mfy2,										in_out_mask
				else
					cprism_ var_mater2,var_mater,var_mater,
						6, part_thk,
						a/2-gs_frame_width-simp_mod,	gs_frame_width+simp_mod,	10,
						a/2+rightOvhg,					-bottomOvhg,				in_out_mask,
						a/2+rightOvhg,					b-dy1,						10,
						a/2-gs_frame_width-simp_mod_tr,	b-dysw1,					in_out_mask,
						a/2-gs_frame_width-simp_mod, 	mfy1,						10,
						a/2-gs_frame_width-simp_mod, 	mfy2,						in_out_mask
				endif
			else
				if gs_UTrans then
					cprism_ var_mater2,var_mater,var_mater,
						6, part_thk,
						a/2-gs_frame_width-simp_mod,	gs_frame_width+simp_mod,					10,
						a/2+rightOvhg,					-bottomOvhg,								in_out_mask,
						a/2+rightOvhg,					b-dy1,										10,
						a/2-gs_frame_width-simp_mod_tr,	b-dysw1,									in_out_mask,
						a/2-gs_frame_width-simp_mod_tr,	gs_UTrans_h+(gs_UTrans_w/2+simp_mod_tr),	10,
						a/2-gs_frame_width-simp_mod,	gs_UTrans_h-(gs_UTrans_w/2+simp_mod),		in_out_mask
				else
					cprism_ var_mater2,var_mater,var_mater,
						4, part_thk,
						a/2-gs_frame_width-simp_mod,	gs_frame_width+simp_mod,	10,
						a/2+rightOvhg,					-bottomOvhg,				in_out_mask,
						a/2+rightOvhg,					b-dy1,						10,
						a/2-gs_frame_width-simp_mod_tr,	b-dysw1,					in_out_mask
				endif
			endif
			vert 0, 0, 0
			vert 0, 1, 0
			vert 1, 0, 0
			vert 0, 0, 1
			coor 2, -1, -2, -3, -4
			body 1

			if bVerticalMullion & gs_UTrans = 0 then
				base
				cprism_ var_mater2,var_mater,var_mater,
					6, part_thk,
					-a/2-leftOvhg,						b+dy2,		10,
					-a/2+gs_frame_width+simp_mod_tr,	b+dysw2,	in_out_mask,
					mfx1,								mfy1,		8,
					mfx2,								mfy2,		in_out_mask,
					a/2-gs_frame_width-simp_mod_tr,		b-dysw1,	10,
					a/2+rightOvhg,						b-dy1,		in_out_mask
				vert 0, 0, 0
				vert cos(topAngle), -sin(topAngle), 0
				vert sin(topAngle), cos(topAngle), 0
				vert 0, 0, 1
				coor 2, -1, -2, -3, -4
				body 1
			else
				base
				cprism_ var_mater2,var_mater,var_mater,
					4, part_thk,
					-a/2-leftOvhg,						b+dy2,		10,
					-a/2+gs_frame_width+simp_mod_tr,	b+dysw2,	in_out_mask,
					a/2-gs_frame_width-simp_mod_tr,		b-dysw1,	10,
					a/2+rightOvhg,						b-dy1,		in_out_mask
				vert 0, 0, 0
				vert cos(topAngle), -sin(topAngle), 0
				vert sin(topAngle), cos(topAngle), 0
				vert 0, 0, 1
				coor 2, -1, -2, -3, -4
				body 1
			endif

			if bVerticalMullion then
				cprism_ var_mater2,var_mater,var_mater,
					6, part_thk,
					a/2+rightOvhg,					-bottomOvhg,				10,
					a/2-gs_frame_width-simp_mod,	gs_frame_width+simp_mod,	in_out_mask,
					mfx2, 							gs_frame_width+simp_mod,	8+5*(lod3D=2),
					mfx1,							gs_frame_width+simp_mod,	in_out_mask,
					-a/2+gs_frame_width+simp_mod,	gs_frame_width+simp_mod,	10,
					-a/2-leftOvhg,					-bottomOvhg,				bot_mask
			else
				cprism_ var_mater2,var_mater,var_mater,
					4, part_thk,
					a/2+rightOvhg,					-bottomOvhg,				10,
					a/2-gs_frame_width-simp_mod,	gs_frame_width+simp_mod,	in_out_mask,
					-a/2+gs_frame_width+simp_mod,	gs_frame_width+simp_mod,	10,
					-a/2-leftOvhg,					-bottomOvhg,				bot_mask
			endif
			body 1
		endif

		if gs_SashText_typ_num = 2 then
			base
			if bHorizontalMullion then
				if gs_UTrans then
					cprism_ var_mater2,var_mater,var_mater,
						8, part_thk,
						-a/2+gs_frame_width+simp_mod,		gs_frame_width+simp_mod,					10,
						-a/2-leftOvhg,						gs_frame_width+simp_mod,					in_out_mask-2,
						-a/2-leftOvhg,						b+dysw2,									8,
						-a/2+gs_frame_width+simp_mod_tr,	b+dysw2,									in_out_mask,
						-a/2+gs_frame_width+simp_mod_tr,	gs_UTrans_h+(gs_UTrans_w/2+simp_mod_tr),	10,
						-a/2+gs_frame_width+simp_mod,		gs_UTrans_h-(gs_UTrans_w/2+simp_mod),		in_out_mask,
						-a/2+gs_frame_width+simp_mod,		mfy1,										10,
						-a/2+gs_frame_width+simp_mod,		mfy2,										in_out_mask
				else
					cprism_ var_mater2,var_mater,var_mater,
						6, part_thk,
						-a/2+gs_frame_width+simp_mod,		gs_frame_width+simp_mod,	10,
						-a/2-leftOvhg,						gs_frame_width+simp_mod,	in_out_mask-2,
						-a/2-leftOvhg,						b+dysw2,					8,
						-a/2+gs_frame_width+simp_mod_tr,	b+dysw2,					in_out_mask,
						-a/2+gs_frame_width+simp_mod,		mfy1,						10,
						-a/2+gs_frame_width+simp_mod,		mfy2,						in_out_mask

				endif
			else
				if gs_UTrans then
					cprism_ var_mater2,var_mater,var_mater,
						6, part_thk,
						-a/2+gs_frame_width+simp_mod,		gs_frame_width+simp_mod,					10,
						-a/2-leftOvhg,						gs_frame_width+simp_mod,					in_out_mask-2,
						-a/2-leftOvhg,						b+dysw2,									8,
						-a/2+gs_frame_width+simp_mod_tr,	b+dysw2,									in_out_mask,
						-a/2+gs_frame_width+simp_mod_tr,	gs_UTrans_h+(gs_UTrans_w/2+simp_mod_tr),	10,
						-a/2+gs_frame_width+simp_mod,		gs_UTrans_h-(gs_UTrans_w/2+simp_mod),		in_out_mask
				else
					cprism_ var_mater2,var_mater,var_mater,
						4, part_thk,
						-a/2+gs_frame_width+simp_mod,		gs_frame_width+simp_mod,	10,
						-a/2-leftOvhg,						gs_frame_width+simp_mod,	in_out_mask-2,
						-a/2-leftOvhg,						b+dysw2,					8,
						-a/2+gs_frame_width+simp_mod_tr,	b+dysw2,					in_out_mask
				endif
			endif
			vert 0, 0, 0
			vert 0, 1, 0
			vert 1, 0, 0
			vert 0, 0, 1
			coor 2, -1, -2, -3, -4
			body 1

			base
			if bHorizontalMullion then
				if gs_UTrans then
					cprism_ var_mater2,var_mater,var_mater,
						8, part_thk,
						a/2-gs_frame_width-simp_mod,	gs_frame_width+simp_mod,					8,
						a/2+rightOvhg,					gs_frame_width+simp_mod,					in_out_mask-2,
						a/2+rightOvhg,					b-dysw1,									8,
						a/2-gs_frame_width-simp_mod_tr,	b-dysw1,									in_out_mask,
						a/2-gs_frame_width-simp_mod_tr,	gs_UTrans_h+(gs_UTrans_w/2+simp_mod_tr),	10,
						a/2-gs_frame_width-simp_mod,	gs_UTrans_h-(gs_UTrans_w/2+simp_mod),		in_out_mask,
						a/2-gs_frame_width-simp_mod,	mfy1,										10,
						a/2-gs_frame_width-simp_mod,	mfy2,										in_out_mask
				else
					cprism_ var_mater2,var_mater,var_mater,
						6, part_thk,
						a/2-gs_frame_width-simp_mod,	gs_frame_width+simp_mod,	8,
						a/2+rightOvhg,					gs_frame_width+simp_mod,	in_out_mask-2,
						a/2+rightOvhg,					b-dysw1,					8,
						a/2-gs_frame_width-simp_mod_tr,	b-dysw1,					in_out_mask,
						a/2-gs_frame_width-simp_mod,	mfy1,						10,
						a/2-gs_frame_width-simp_mod,	mfy2,						in_out_mask
				endif
			else
				if gs_UTrans then
					cprism_ var_mater2,var_mater,var_mater,
						6, part_thk,
						a/2-gs_frame_width-simp_mod,	gs_frame_width+simp_mod,					8,
						a/2+rightOvhg,					gs_frame_width+simp_mod,					in_out_mask-2,
						a/2+rightOvhg,					b-dysw1,									8,
						a/2-gs_frame_width-simp_mod_tr,	b-dysw1,									in_out_mask,
						a/2-gs_frame_width-simp_mod_tr,	gs_UTrans_h+(gs_UTrans_w/2+simp_mod_tr),	10,
						a/2-gs_frame_width-simp_mod,	gs_UTrans_h-(gs_UTrans_w/2+simp_mod),		in_out_mask
				else
					cprism_ var_mater2,var_mater,var_mater,
						4, part_thk,
						a/2-gs_frame_width-simp_mod,	gs_frame_width+simp_mod,	8,
						a/2+rightOvhg,					gs_frame_width+simp_mod,	in_out_mask-2,
						a/2+rightOvhg,					b-dysw1,					8,
						a/2-gs_frame_width-simp_mod_tr,	b-dysw1,					in_out_mask
				endif
			endif
			vert 0, 0, 0
			vert 0, 1, 0
			vert 1, 0, 0
			vert 0, 0, 1
			coor 2, -1, -2, -3, -4
			body 1

			if bVerticalMullion & gs_UTrans = 0 then
				base
				cprism_ var_mater2,var_mater,var_mater,
					8, part_thk,
					-a/2-leftOvhg,						b+dy2,		in_out_mask,
					-a/2-leftOvhg,						b+dysw2,	8,
					-a/2+gs_frame_width+simp_mod_tr,	b+dysw2,	in_out_mask,
					mfx1, 								mfy1,		8,
					mfx2, 								mfy2,		in_out_mask,
					a/2-gs_frame_width-simp_mod_tr,		b-dysw1,	10,
					a/2+rightOvhg,						b-dysw1,	in_out_mask2,
					a/2+rightOvhg,						b-dy1,		in_out_mask
				vert 0, 0, 0
				vert cos(topAngle), -sin(topAngle), 0
				vert sin(topAngle), cos(topAngle), 0
				vert 0, 0, 1
				coor 2, -1, -2, -3, -4
				body 1
			else
				base
				cprism_ var_mater2,var_mater,var_mater,
					6, part_thk,
					-a/2-leftOvhg,						b+dy2,		in_out_mask,
					-a/2-leftOvhg,						b+dysw2,	8,
					-a/2+gs_frame_width+simp_mod_tr,	b+dysw2,	in_out_mask,
					a/2-gs_frame_width-simp_mod_tr,		b-dysw1,	10,
					a/2+rightOvhg,						b-dysw1,	in_out_mask2,
					a/2+rightOvhg,						b-dy1,		in_out_mask
				vert 0, 0, 0
				vert cos(topAngle), -sin(topAngle), 0
				vert sin(topAngle), cos(topAngle), 0
				vert 0, 0, 1
				coor 2, -1, -2, -3, -4
				body 1
			endif

			if bVerticalMullion then
				cprism_ var_mater2,var_mater,var_mater,
					8, part_thk,
					a/2+rightOvhg,					-bottomOvhg,				in_out_mask,
					a/2+rightOvhg,					gs_frame_width+simp_mod,	8,
					a/2-gs_frame_width-simp_mod,	gs_frame_width+simp_mod,	in_out_mask,
					mfx2,							gs_frame_width+simp_mod,	8+5*(lod3D=2),
					mfx1,							gs_frame_width+simp_mod,	in_out_mask,
					-a/2+gs_frame_width+simp_mod,	gs_frame_width+simp_mod,	10,
					-a/2-leftOvhg,					gs_frame_width+simp_mod,	in_out_mask2,
					-a/2-leftOvhg,					-bottomOvhg,				bot_mask
			else
				cprism_ var_mater2,var_mater,var_mater,
					6, part_thk,
					a/2+rightOvhg,					-bottomOvhg,				in_out_mask,
					a/2+rightOvhg,					gs_frame_width+simp_mod,	8,
					a/2-gs_frame_width-simp_mod,	gs_frame_width+simp_mod,	in_out_mask,
					-a/2+gs_frame_width+simp_mod,	gs_frame_width+simp_mod,	10,
					-a/2-leftOvhg,					gs_frame_width+simp_mod,	in_out_mask2,
					-a/2-leftOvhg,					-bottomOvhg,				bot_mask
			endif
			body 1
		endif

		if gs_UTrans then
			if bVerticalMullion then
				cprism_ var_mater2,var_mater,var_mater,
					6, part_thk,
					a/2-gs_frame_width-simp_mod_tr,		gs_UTrans_h+gs_UTrans_w/2+simp_mod_tr,	10,
					a/2-gs_frame_width-simp_mod,		gs_UTrans_h-gs_UTrans_w/2-simp_mod, 	in_out_mask,
					mfx2,								gs_UTrans_h-gs_UTrans_w/2-simp_mod,		10,
					mfx1,								gs_UTrans_h-gs_UTrans_w/2-simp_mod,		in_out_mask,
					-a/2+gs_frame_width+simp_mod,		gs_UTrans_h-gs_UTrans_w/2-simp_mod,		10,
					-a/2+gs_frame_width+simp_mod_tr,	gs_UTrans_h+gs_UTrans_w/2+simp_mod_tr,	in_out_mask
			else
				cprism_ var_mater2,var_mater,var_mater,
					4, part_thk,
					a/2-gs_frame_width-simp_mod_tr,		gs_UTrans_h+gs_UTrans_w/2+simp_mod_tr,	10,
					a/2-gs_frame_width-simp_mod,		gs_UTrans_h-gs_UTrans_w/2-simp_mod, 	in_out_mask,
					-a/2+gs_frame_width+simp_mod,		gs_UTrans_h-gs_UTrans_w/2-simp_mod,		10,
					-a/2+gs_frame_width+simp_mod_tr,	gs_UTrans_h+gs_UTrans_w/2+simp_mod_tr,	in_out_mask
			endif
			body 1
		endif

		if bVerticalMullion then
			base
			cprism_ var_mater2,var_mater,var_mater,
				5, part_thk,
				mfx1,	gs_frame_width+simp_mod,	10,
				mfx2,	gs_frame_width+simp_mod,	in_out_mask,
				mfx2,	mfy2, 						10,
				mfx1,	mfy1,						in_out_mask,
				mfx1,	gs_frame_width+simp_mod,	-1

			vert 0, 0, 0
			vert 0, 1, 0
			vert 1, 0, 0
			vert 0, 0, 1
			coor 2, -1, -2, -3, -4
			body 1
		endif

		if bHorizontalMullion then
			cprism_ var_mater2,var_mater,var_mater,
				5, part_thk,
				a/2-gs_frame_width-simp_mod, mfy1,	10,
				a/2-gs_frame_width-simp_mod, mfy2,	in_out_mask,
				-a/2+gs_frame_width+simp_mod, mfy2,	10,
				-a/2+gs_frame_width+simp_mod, mfy1,	in_out_mask,
				a/2-gs_frame_width-simp_mod, mfy1,	-1
			body 1
		endif

		addz part_thk
		part_thk= gs_frame_thk-out_thk

		var_mater = gs_frame_mat2
		var_mater2 = gs_frame_mat2

		in_out_mask = 14
		in_out_mask2 = 12
		if gs_stack_bottom then bot_mask = 8 else bot_mask = 14

	next ijk
	del in_out_cikl

	if cutLeft then cutend
	if cutRight then cutend
endgroup


! ==============================================================================
! Sash cavities in Frame
! ==============================================================================

group "harcsi"
	if lod3D = 2 then
		if GLOB_CONTEXT = 4 | GLOB_CONTEXT = 6 then
			pen gs_frame_pen_cont
		else
			pen gs_frame_pen
		endif
		sect_fill gs_fillFr, gs_penFr_bg, gs_penFr_fg, gs_frame_pen_cont

		if gs_UTrans then
			if iSashCutType = SASHCUT_REBATE then
				addz gs_frame_thk - gs_rebate_depth
				material gs_frame_mat2
				prism_ 5, gs_frame_thk,
					-a/2+gs_frame_width-gs_rebate_width, gs_frame_width-gs_rebate_width,			15,
					 a/2-gs_frame_width+gs_rebate_width, gs_frame_width-gs_rebate_width,			15,
					 a/2-gs_frame_width+gs_rebate_width, gs_UTrans_h-gs_UTrans_w/2+gs_rebate_width,	15,
					-a/2+gs_frame_width-gs_rebate_width, gs_UTrans_h-gs_UTrans_w/2+gs_rebate_width,	15,
					-a/2+gs_frame_width-gs_rebate_width, gs_frame_width-gs_rebate_width,			-1
				body 1
				del 1
			endif

			if iSashCutType = SASHCUT_MIDDLE then
				addz gs_frame_thk/2
				material gs_frame_mat2
				prism_ 5, gs_frame_thk,
					-a/2+gs_frame_width, gs_frame_width,			15,
					 a/2-gs_frame_width, gs_frame_width,			15,
					 a/2-gs_frame_width, gs_UTrans_h-gs_UTrans_w/2,	15,
					-a/2+gs_frame_width, gs_UTrans_h-gs_UTrans_w/2,	15,
					-a/2+gs_frame_width, gs_frame_width,			-1
				body 1
				material gs_frame_mat
				prism_ 5, -gs_frame_thk,
					-a/2+gs_frame_width, gs_frame_width,			15,
					 a/2-gs_frame_width, gs_frame_width,			15,
					 a/2-gs_frame_width, gs_UTrans_h-gs_UTrans_w/2,	15,
					-a/2+gs_frame_width, gs_UTrans_h-gs_UTrans_w/2,	15,
					-a/2+gs_frame_width, gs_frame_width,			-1
				body 1
				del 1
			endif

			if gs_optype_m_02 <> SASH_FIXED then
				addz gs_frame_thk - gs_rebate_depth
				material gs_frame_mat2
				prism_ 5, gs_frame_thk,
					-a/2+gs_frame_width-gs_rebate_width, gs_UTrans_h+gs_UTrans_w/2-gs_rebate_width, 15,
					 a/2-gs_frame_width+gs_rebate_width, gs_UTrans_h+gs_UTrans_w/2-gs_rebate_width, 15,
					 a/2-gs_frame_width+gs_rebate_width, b-dyrw1,									15,
					-a/2+gs_frame_width-gs_rebate_width, b+dyrw2,									15,
					-a/2+gs_frame_width-gs_rebate_width, gs_UTrans_h+gs_UTrans_w/2-gs_rebate_width, -1
				body 1
				del 1
			endif
		else
			if iSashCutType = SASHCUT_REBATE then
				addz gs_frame_thk - gs_rebate_depth
				material gs_frame_mat2
				prism_ 5, gs_frame_thk,
					-a/2+gs_frame_width-gs_rebate_width, gs_frame_width-gs_rebate_width,	15,
					 a/2-gs_frame_width+gs_rebate_width, gs_frame_width-gs_rebate_width,	15,
					 a/2-gs_frame_width+gs_rebate_width, b-dyrw1,							15,
					-a/2+gs_frame_width-gs_rebate_width, b+dyrw2,							15,
					-a/2+gs_frame_width-gs_rebate_width, gs_frame_width-gs_rebate_width,	-1
				body 1
				del 1
			endif

			if iSashCutType = SASHCUT_MIDDLE then
				addz gs_frame_thk/2
				material gs_frame_mat2
				prism_ 5, gs_frame_thk,
					-a/2+gs_frame_width, gs_frame_width,	15,
					 a/2-gs_frame_width, gs_frame_width,	15,
					 a/2-gs_frame_width, b-dyfw1,			15,
					-a/2+gs_frame_width, b+dyfw2,			15,
					-a/2+gs_frame_width, gs_frame_width,	-1
				body 1
				material gs_frame_mat
				prism_ 5, -gs_frame_thk,
					-a/2+gs_frame_width, gs_frame_width,	15,
					 a/2-gs_frame_width, gs_frame_width,	15,
					 a/2-gs_frame_width, b-dyfw1,			15,
					-a/2+gs_frame_width, b+dyfw2,			15,
					-a/2+gs_frame_width, gs_frame_width,	-1
				body 1
				del 1
			endif
		endif
	endif
endgroup

pen gs_frame_pen
sect_fill gs_fillFr, gs_penFr_bg, gs_penFr_fg, gs_frame_pen_cont

if lod3D = 2 then	! Detailed
	placegroup subgroup("frame","harcsi")
else
	placegroup "frame"
endif

end
]]>
</Script_3D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_1D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
EPS = 0.0001

! gs_optype_m
SASH_FIXED					= 1		! Fixed Glass
SASH_FIXED_SCREW			= 2		! Fixed Sash
SASH_SIDE_HUNG				= 3		! Side Hung
SASH_SIDE_HUNG_M			= 4		! Side Hung Mirrored
SASH_TILT_TURN				= 5		! Tilt and Turn
SASH_TILT_TURN_M			= 6		! Tilt and Turn Mirrored
SASH_BOTTOM_HUNG			= 7		! Bottom Hung
SASH_TOP_HUNG				= 8		! Top Hung
SASH_HOR_PIVOT				= 9		! Horizontal Pivot Hung
SASH_VER_PIVOT				= 10	! Vertical Pivotted
SASH_TILT_SLIDE				= 11	! Tilt and Slide
SASH_LEFT_SLIDING			= 12	! Left Sliding
SASH_RIGHT_SLIDING			= 13	! Right Sliding
SASH_UP_SLIDING				= 14	! Sliding Up
SASH_DOWN_SLIDING			= 15	! Sliding Down
SASH_VER_PIVOT_M			= 16	! Vertical Pivotted Mirrored
SASH_FIXED_SLIDE			= 17	! Fixed Sliding Sash
SASH_DOUBLE_SIDE_HUNG		= 18	! Double Sash
SASH_DOUBLE_TILT_TURN		= 19	! Double Tilt and Turn
SASH_DOUBLE_TILT_TURN_M		= 20	! Double Tilt and Turn Mirrored
SASH_SLIDING_HOR			= 21	! Sliding
SASH_SLIDING_HOR_M			= 22	! Sliding Mirrored
SASH_DOUBLE_SLIDING_HOR		= 23	! Double Sliding
SASH_DOUBLE_SLIDING_HOR_M	= 24	! Double Sliding Mirrored
SASH_SLIDING_VER			= 25	! Single Hung
SASH_DOUBLE_SLIDING_VER		= 26	! Double Hung

! iMullionStyle
MULLION_NONE			= 1
MULLION_HVGRID			= 2
MULLION_EDITABLEGRID	= 3
MULLION_CUSTOM			= 4
MULLION_PRAIRIE			= 5
MULLION_DIVIDED			= 6

! iSashCutType
SASHCUT_NONE	= 0
SASHCUT_REBATE	= 1
SASHCUT_MIDDLE	= 2


!!Angle and coordinate calculation!!

simp_mod	= 0
simp_mod_tr	= 0
if lod3D = 1 | lod3D = 5 then ! Simple | Chinese
	if gs_optype_m_01 <> SASH_FIXED then simp_mod =  gs_sash_width - gs_rebate_width
	if	gs_optype_m_01 = SASH_HOR_PIVOT |\
		gs_optype_m_01 = SASH_VER_PIVOT |\
		gs_optype_m_01 = SASH_VER_PIVOT_M |\
		gs_optype_m_01 = SASH_SLIDING_HOR |\
		gs_optype_m_01 = SASH_SLIDING_HOR_M |\
		gs_optype_m_01 = SASH_DOUBLE_SLIDING_HOR |\
		gs_optype_m_01 = SASH_DOUBLE_SLIDING_HOR_M |\
		gs_optype_m_01 = SASH_SLIDING_VER |\
		gs_optype_m_01 = SASH_DOUBLE_SLIDING_VER then simp_mod = gs_sash_width

	if gs_UTrans then
		simp_mod_tr = (gs_sash_width - gs_rebate_width) * (gs_optype_m_02 <> SASH_FIXED)
	else
		simp_mod_tr = simp_mod
	endif
else
	if	gs_optype_m_01 = SASH_SLIDING_HOR |\
		gs_optype_m_01 = SASH_SLIDING_HOR_M |\
		gs_optype_m_01 = SASH_DOUBLE_SLIDING_HOR |\
		gs_optype_m_01 = SASH_DOUBLE_SLIDING_HOR_M |\
		gs_optype_m_01 = SASH_SLIDING_VER |\
		gs_optype_m_01 = SASH_DOUBLE_SLIDING_VER then simp_mod = 0.0001

	if not(gs_UTrans) then
		simp_mod_tr = simp_mod
	endif
endif

! =============================================================================

iSashCutType = SASHCUT_NONE
if not(lod3D = 1 | lod3D = 5) then ! Simple | Chinese
	if	gs_optype_m_01 = SASH_FIXED_SCREW |\
		gs_optype_m_01 = SASH_SIDE_HUNG |\
		gs_optype_m_01 = SASH_SIDE_HUNG_M |\
		gs_optype_m_01 = SASH_TILT_TURN |\
		gs_optype_m_01 = SASH_TILT_TURN_M |\
		gs_optype_m_01 = SASH_BOTTOM_HUNG |\
		gs_optype_m_01 = SASH_TOP_HUNG |\
		gs_optype_m_01 = SASH_DOUBLE_SIDE_HUNG |\
		gs_optype_m_01 = SASH_DOUBLE_TILT_TURN |\
		gs_optype_m_01 = SASH_DOUBLE_TILT_TURN_M then iSashCutType = SASHCUT_REBATE
	if	gs_optype_m_01 = SASH_SLIDING_HOR |\
		gs_optype_m_01 = SASH_SLIDING_HOR_M |\
		gs_optype_m_01 = SASH_DOUBLE_SLIDING_HOR |\
		gs_optype_m_01 = SASH_DOUBLE_SLIDING_HOR_M |\
		gs_optype_m_01 = SASH_SLIDING_VER |\
		gs_optype_m_01 = SASH_DOUBLE_SLIDING_VER then iSashCutType = SASHCUT_MIDDLE
endif

dyfw1 = gs_frame_width/cos(topAngle)+(a/2 - gs_frame_width)*tan(topAngle)
dyfw2 = -gs_frame_width/cos(topAngle)+(a/2 - gs_frame_width)*tan(topAngle)

dysw1 = (gs_frame_width + simp_mod_tr)/cos(topAngle)+(a/2 - gs_frame_width - simp_mod_tr)*tan(topAngle)
dysw2 = -(gs_frame_width + simp_mod_tr)/cos(topAngle)+(a/2 - gs_frame_width - simp_mod_tr)*tan(topAngle)

dyrw1 = (gs_frame_width - gs_rebate_width)/cos(topAngle)+(a/2 - gs_frame_width + gs_rebate_width)*tan(topAngle)
dyrw2 = -(gs_frame_width - gs_rebate_width)/cos(topAngle)+(a/2 - gs_frame_width + gs_rebate_width)*tan(topAngle)

dy1 = -frame_toler/cos(topAngle)+(a/2 + rightOvhg)*tan(topAngle)
dy2 = frame_toler/cos(topAngle)+(a/2 + leftOvhg)*tan(topAngle)
]]>
</Script_1D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_VL SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_VL>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Comment SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Comment>

<ParamSection SectVersion="26" SectionFlags="0" SubIdent="0">
	<ParamSectHeader>
		<Version>26</Version>
		<AutoHotspots>false</AutoHotspots>
		<WDLeftFrame>0</WDLeftFrame>
		<WDRightFrame>0</WDRightFrame>
		<WDTopFrame>0</WDTopFrame>
		<WDBotFrame>0</WDBotFrame>
		<LayFlags>65535</LayFlags>
		<WDMirrorThickness>0</WDMirrorThickness>
		<WDWallInset>0</WDWallInset>
		<SymbolColor>0</SymbolColor>
	</ParamSectHeader>
	<Parameters>
		<Length Name="A">
			<Description><![CDATA["Dimension 1"]]></Description>
			<Fix/>
			<Value>1</Value>
		</Length>
		<Length Name="B">
			<Description><![CDATA["Dimension 2"]]></Description>
			<Fix/>
			<Value>2</Value>
		</Length>
		<Length Name="ZZYZX">
			<Description><![CDATA["Height"]]></Description>
			<Fix/>
			<Value>1</Value>
		</Length>
		<Boolean Name="AC_show2DHotspotsIn3D">
			<Description><![CDATA["Show 2D Hotspots in 3D"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="ac_bottomlevel">
			<Description><![CDATA["Bottom Level"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="ac_toplevel">
			<Description><![CDATA["Top Level"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="frame_toler">
			<Description><![CDATA["Tolerance"]]></Description>
			<Value>0</Value>
		</Length>
		<Angle Name="topAngle">
			<Description><![CDATA["Top Angle"]]></Description>
			<Value>16</Value>
		</Angle>

		<!-- gs_options: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_options">
			<Description><![CDATA["Options"]]></Description>
		</Title>
		<Integer Name="lod3D">
			<Description><![CDATA["3D detail"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>

		<!-- gs_window_frame: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_window_frame">
			<Description><![CDATA["Window Frame"]]></Description>
		</Title>
		<Length Name="gs_frame_thk">
			<Description><![CDATA["Frame Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Length Name="gs_frame_width">
			<Description><![CDATA["Frame Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_rebate_width">
			<Description><![CDATA["Rebate Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.02</Value>
		</Length>
		<Length Name="gs_rebate_depth">
			<Description><![CDATA["Rebate Depth"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.02</Value>
		</Length>
		<Length Name="gs_SLight_w">
			<Description><![CDATA["Sash Width 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.3</Value>
		</Length>
		<Length Name="gs_sash_width">
			<Description><![CDATA["Sash Frame Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Boolean Name="gs_UTrans">
			<Description><![CDATA["Upper Transom"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="gs_UTrans_w">
			<Description><![CDATA["Upper Transom Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Length Name="gs_UTrans_h">
			<Description><![CDATA["Height of Upper Horiz. Divisions"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.9</Value>
		</Length>
		<Length Name="leftOvhg">
			<Description><![CDATA["Left Overhang"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="rightOvhg">
			<Description><![CDATA["Right Overhang"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="topOvhg">
			<Description><![CDATA["Top Overhang"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="bottomOvhg">
			<Description><![CDATA["Bottom Overhang"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Boolean Name="gs_stack_bottom">
			<Description><![CDATA["Connection on the Bottom"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="sash_num">
			<Description><![CDATA["Number of Middle Sashes( 1 or 2)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="gs_optype_m_01">
			<Description><![CDATA["Opening Type Right"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="gs_optype_m_02">
			<Description><![CDATA["Opening Type Upper"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="iMullionStyle_01">
			<Description><![CDATA["Sash Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="iMullionStyle_02">
			<Description><![CDATA["Sash Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Length Name="gs_frame_ovhg_left_out">
			<Description><![CDATA["Frame Overhang Left Outer"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_frame_ovhg_right_out">
			<Description><![CDATA["Frame Overhang Right Outer"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_frame_ovhg_left_in">
			<Description><![CDATA["Frame Overhang Left Inner"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_frame_ovhg_right_in">
			<Description><![CDATA["Frame Overhang Right Inner"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_glass_thk">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>

		<!-- gs_2D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_2D_representation">
			<Description><![CDATA["2D and Section Representation"]]></Description>
		</Title>
		<PenColor Name="gs_frame_pen_cont">
			<Description><![CDATA["Frame Contour Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</PenColor>
		<FillPattern Name="gs_fillFr">
			<Description><![CDATA["Frame Fill Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_penFr_fg">
			<Description><![CDATA["Frame Fill Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>91</Value>
		</PenColor>
		<PenColor Name="gs_penFr_bg">
			<Description><![CDATA["Frame Fill Background Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>91</Value>
		</PenColor>

		<!-- gs_3D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_3D_representation">
			<Description><![CDATA["3D Representation"]]></Description>
		</Title>
		<Integer Name="gs_SashText_typ_num">
			<Description><![CDATA["Frame Element Joinery"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<PenColor Name="gs_frame_pen">
			<Description><![CDATA["Frame Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</PenColor>

		<!-- gs_materials: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_materials">
			<Description><![CDATA["Surfaces"]]></Description>
		</Title>
		<Material Name="gs_frame_mat">
			<Description><![CDATA["Frame Surface Outside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>71</Value>
		</Material>
		<Material Name="gs_frame_mat2">
			<Description><![CDATA["Frame Surface Inside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>100</Value>
		</Material>
	</Parameters>
</ParamSection>

<Ancestry SectVersion="1" SectionFlags="0" SubIdent="0" Template="false">
	<MainGUID>F938E33A-329D-4A36-BE3E-85E126820996</MainGUID>
	<MainGUID>103E8D2C-8230-42E1-9597-46F84CCE28C0</MainGUID>
	<MainGUID>B2970E4C-8680-4061-8670-2F4B638F3953</MainGUID>
</Ancestry>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_2D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_2D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_PR SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_PR>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_UI SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_UI>

<CalledMacros SectVersion="2" SectionFlags="0" SubIdent="0">
</CalledMacros>

<Copyright SectVersion="1" SectionFlags="0" SubIdent="0">
	<Author>GRAPHISOFT</Author>
	<License>
		<Type>CC BY-ND</Type>
		<Version>3.0</Version>
	</License>
</Copyright>

</Symbol>
