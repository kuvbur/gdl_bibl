<?xml version="1.0" encoding="UTF-8"?>
<Symbol IsArchivable="true" IsPlaceable="false" MainGUID="F1C61D58-0802-46EE-8B46-1C55FA871B6D" MigrationValue="Normal" Owner="1196638531" Signature="1146313037" Version="43">
<Ancestry SectVersion="1" SectionFlags="0" SubIdent="0" Template="false">
	<MainGUID>F938E33A-329D-4A36-BE3E-85E126820996</MainGUID>
	<MainGUID>103E8D2C-8230-42E1-9597-46F84CCE28C0</MainGUID>
	<MainGUID>6ACDA889-69B2-4EC5-936C-CB1DA7032A92</MainGUID>
	<MainGUID>F6AE9687-2BC7-4D47-88C9-8F793E1DE2D6</MainGUID>
</Ancestry>

<CalledMacros SectVersion="2" SectionFlags="0" SubIdent="0">
	<Macro>
		<MName><![CDATA["OpeningOptions"]]></MName>
		<MainGUID>6ED91FFB-F336-4BD0-9772-DE49ACA9F6F3</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["DoorFrame"]]></MName>
		<MainGUID>B22F92A8-54D5-4AE8-B16B-94D653E1C8F6</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["DoorLeafSymbol"]]></MName>
		<MainGUID>E82D2A93-72A1-4CEB-979D-AD85687D78A8</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["DoorLeafPanels"]]></MName>
		<MainGUID>FCBA42BE-2BE9-4F75-A436-507EFB3371DB</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["Ventilation_profile"]]></MName>
		<MainGUID>58676F56-A0A0-4A02-ADA8-565DD41323CF</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["Casement_rectangular"]]></MName>
		<MainGUID>7CE56836-4932-4D30-9C66-53D969052E7C</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["Casement_Arched"]]></MName>
		<MainGUID>58C954A0-58BE-4B57-8498-95266BC6966D</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["ui_tabIDlistHierarchy_m"]]></MName>
		<MainGUID>8D3FA40B-0E02-4FD9-B890-741FFA7BCDC8</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["ui_door_general"]]></MName>
		<MainGUID>98B0FF79-E273-41D1-A45C-ADB49F59E8D3</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["ui_DoorSettOpeningModAttr_m"]]></MName>
		<MainGUID>F83CED20-D878-45A5-8945-96D56E3290F9</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["ui_door_shape"]]></MName>
		<MainGUID>4C702807-79F2-4239-B1E0-118BBFCAF16B</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["ui_door_frame_t"]]></MName>
		<MainGUID>CA326527-B5C9-4586-A051-8B69BBC2AD48</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["DoorHandle"]]></MName>
		<MainGUID>44E863BE-97B0-4F78-9DAC-1080C4B26C0A</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["IFC_optype_door"]]></MName>
		<MainGUID>8CA8F343-A708-4E60-9792-3E34AECF7A37</MainGUID>
	</Macro>
</CalledMacros>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_3D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[

gs_fillFr		= gs_bFills * gs_fillFr
gs_penFr_fg		= gs_bFills * gs_penFr_fg
gs_penFr_bg		= gs_bFills * gs_penFr_bg

gs_fillLeaf		= gs_bFills * gs_fillLeaf
gs_penLeaf_fg	= gs_bFills * gs_penLeaf_fg
gs_penLeaf_bg	= gs_bFills * gs_penLeaf_bg

if gs_fillFr < 1	then gs_fillFr = SYMB_FILL
if gs_penFr_bg < 1	then gs_penFr_bg = SYMB_FBGD_PEN
if gs_penFr_fg < 1	then gs_penFr_fg = SYMB_FILL_PEN

if gs_fillLeaf < 1		then gs_fillLeaf = SYMB_FILL
if gs_penLeaf_bg < 1	then gs_penLeaf_bg = SYMB_FBGD_PEN
if gs_penLeaf_fg < 1	then gs_penLeaf_fg = SYMB_FILL_PEN

sliding_door = 0


bFeedBack = (GLOB_CONTEXT > 20 & GLOB_CONTEXT < 40)

call "OpeningOptions" parameters	gs_opening_dir_m			= 1,
									bWindow						= 1,
									bDoorWithSidelightSupport	= 1,
									bOverride_MVO_win_3D		= bOverride_MVO_win_3D,
									or_bWinOplines3d			= or_bWinOplines3d,
									or_iWinOpLineType3dIn		= or_iWinOpLineType3dIn,
									or_iWinOpLineType3dOut		= or_iWinOpLineType3dOut,
									or_iWinOplineStyle			= or_iWinOplineStyle,
									or_winOpLinePen				= or_winOpLinePen,
						returned_parameters bWinOplines3d,
											winOpLineType3dIn,
											winOpLineType3dOut,
											dummyopLineTypeSecondary,
											gs_win_opline_style_m,
											gs_winOpLinePen


if gs_frame_pen_cont < 1 then gs_frame_pen_cont = SYMB_SECT_PEN
if not(gs_shadow) then shadow off

if	gs_leaf_optype_m = LEAF_1L_PIVOT |\
	gs_leaf_optype_m = LEAF_1L_PIVOT_M then gs_opline_style_m = 1		! only "Hinges" orientation is valid

if gs_frame_style_m = FRAME_STYLE_WRAPPED_EXTRUSION then
	if WIDO_REVEAL_SIDE then
		addz gs_frame_oversize_thk
	else
		addz -gs_frame_oversize_thk
	endif
endif

unID = 1

! =============================================================================
! Chinese Specific
! =============================================================================

if lod3D = 5 then
	! Move the whole door to middle of wall with half of the original thickness
	if	gs_leaf_optype_m <> LEAF_1L_EXTERNAL_SLIDING & \
		gs_leaf_optype_m <> LEAF_1L_EXTERNAL_SLIDING_M & \
		gs_leaf_optype_m <> LEAF_2L_EXTERNAL_SLIDING then

		if gs_pocket then
			if WIDO_REVEAL_SIDE then
				addz (WIDO_SILL - WALL_THICKNESS/2 - gs_leaf_thk/2 + gs_frame_thk)
			else
				addz -(WIDO_SILL - WALL_THICKNESS/2  + gs_leaf_thk/2)
			endif
		else
			if WIDO_REVEAL_SIDE then
				addz (WIDO_SILL - WALL_THICKNESS/2 + gs_fthk/4) + gs_fthk/2
			else
				addz -(WIDO_SILL - WALL_THICKNESS/2 + gs_fthk/4)
			endif
		endif
	endif

	if gs_pocket then
		gs_frame_thk	= gs_leaf_thk
		gs_fthk			= gs_leaf_thk
		posLeafy		= 0
		posHole			= 0
	else
		if abs(gs_frame_thk) > EPS then
			gs_frame_thk	= gs_frame_thk/2
		else
			gs_frame_thk	= gs_leaf_thk/2
		endif
	endif
	gs_frame_thkin	= gs_frame_thk
	gs_frame_style_m = FRAME_STYLE_BLOCK
	gs_open_3D		= 0
	gs_open_3D_2	= 0
	gs_open3D		= 0
	gs_open3D_2		= 0
	sidel_temp_rebate_w = gs_rebate_width

	lar = lar - gs_rebate_width
	lal = lal - gs_rebate_width

	if gs_metaldoor then
		iDoorPanelType = 1
	endif
	if gs_entrancedoor then
		iDoorPanelType = 15
	endif
	if gs_storefront then
		iDoorPanelType = 7
		gs_sidelight_m = 1
	endif

	if gs_garage then
		iDoorPanelType = 1
		gs_sidelight_m = 1
	endif

	gs_sidelight_m = 1

	b_y_transom = b_y_transom + gs_rebate_width
	gs_rebate_width = 0
	thresholdModify = 0

	gs_door_rail = 0
endif


! =============================================================================
! Draw Ventilation Profile
! =============================================================================

isVentilationOverFrame = (bEnableVentilationProfile & bVentilationProfile & (iVentilationProfileType = VENTPROFILE_OVER_FRAME))

if isVentilationOverFrame then
	addy ac_unit_height
	if WIDO_REVEAL_SIDE then
		addz gs_frame_thk
		mulz -1
	endif
	call "Ventilation_profile" parameters	A							= ac_unit_width,
											VentilationProfileThickness	= VentilationProfileThickness,
											VentilationProfileHeight	= VentilationProfileHeight,
											gs_frame_thk				= gs_frame_thk,
											bVentilationProfile			= bVentilationProfile,
											iVentilationProfileType		= iVentilationProfileType,
											gs_ventProfile_pen			= gs_frame_pen,
											gs_ventProfile_pen_cont		= gs_frame_pen_cont,
											gs_ventProfile_fill			= gs_ventProfile_fill,
											gs_ventProfile_pen_bg		= gs_ventProfile_pen_bg,
											gs_ventProfile_pen_fg		= gs_ventProfile_pen_fg,
											gs_ventProfile_mat			= gs_ventProfile_mat
	if WIDO_REVEAL_SIDE then del 2

	pen gs_frame_pen
	material gs_frame_mat2
	cutpolya 5, 2, 0,
		-ac_unit_width/2, 0, 11+3*(WIDO_REVEAL_SIDE),
		-ac_unit_width/2, VentilationProfileHeight, 11+3*(WIDO_REVEAL_SIDE),
		ac_unit_width/2, VentilationProfileHeight, 11+3*(WIDO_REVEAL_SIDE),
		ac_unit_width/2, 0, 11+3*(WIDO_REVEAL_SIDE),
		-ac_unit_width/2, 0, -1
	del 1
endif


! =============================================================================
! Draw Door Frame
! =============================================================================

material gs_frame_mat
pen gs_frame_pen

if lod3D = 5 then	! Chinese
	fr_sect_fill_type	= gs_FillSdl
	fr_sect_fill_fg		= gs_penSdl_fg
	fr_sect_fill_bg		= gs_penSdl_bg
else
	fr_sect_fill_type	= gs_fillFr
	fr_sect_fill_fg		= gs_penFr_fg
	fr_sect_fill_bg		= gs_penFr_bg
endif

if gs_frame_width > EPS & not(gs_slidingext) then

	if not(gs_sidelight_left) & not(gs_sidelight_right) then
		if bArchedTop then
			iWindowShape = SHAPE_ARCHED
		else
			iWindowShape = SHAPE_RECTANGULAR
		endif
	endif

	if gs_sidelight_left & not(gs_sidelight_right) then
		if bArchedTop then
			iWindowShape = SHAPE_ARCHED_HALF_T_LEFT
		else
			iWindowShape = SHAPE_HALF_T_LEFT
		endif
	endif

	if not(gs_sidelight_left) & gs_sidelight_right then
		if bArchedTop then
			iWindowShape = SHAPE_ARCHED_HALF_T_RIGHT
		else
			iWindowShape = SHAPE_HALF_T_RIGHT
		endif
	endif

	if gs_sidelight_left & gs_sidelight_right then
		if bArchedTop then
			iWindowShape = SHAPE_ARCHED_T
		else
			iWindowShape = SHAPE_T
		endif
	endif

	call "DoorFrame" parameters all A			= ac_unit_width,
									B			= ac_unit_height,
				iWindowShape					= iWindowShape,
				gs_tolerance_left 				= gs_tolerance_left,
				gs_tolerance_upper 				= gs_tolerance_upper + VentilationProfileHeight * isVentilationOverFrame,
				gs_tolerance_left_2				= gs_tolerance_left_2,
				gs_tolerance_low_left_sl		= gs_tolerance_low_left_sl,
				gs_tolerance_right				= gs_tolerance_right,
				gs_tolerance_right_2			= gs_tolerance_right_2,
				gs_tolerance_low_right_sl		= gs_tolerance_low_right_sl,
				gs_frame_style_m				= gs_frame_style_m,
				gs_LeftMullion_Top				= gs_LeftMullion_Top,
				gs_RightMullion_Top				= gs_RightMullion_Top,
				gs_Transom_toLeft				= gs_Transom_toLeft,
				gs_Transom_toRight				= gs_Transom_toRight,
				gs_frame_wthk					= gs_frame_wthk,
				gs_sframe						= gs_sframe,
				gs_frame_thk					= gs_frame_thk,
				gs_frame_thkin					= gs_frame_thkin,
				gs_rebate_width					= gs_rebate_width,
				gs_frame_ovhg_left_out			= gs_frame_ovhg_left_out,
				gs_frame_ovhg_left_in			= gs_frame_ovhg_left_in,
				gs_frame_ovhg_right_out			= gs_frame_ovhg_right_out,
				gs_frame_ovhg_right_in			= gs_frame_ovhg_right_in,
				gs_frame_ovhg_top_out			= gs_frame_ovhg_top_out,
				gs_frame_ovhg_top_in			= gs_frame_ovhg_top_in,
				gs_frame_ovhg_bottom_out		= gs_frame_ovhg_bottom_out,
				gs_frame_ovhg_bottom_in			= gs_frame_ovhg_bottom_in,
				gs_sill_outside					= gs_sill_outside,
				gs_sill_outside_sl_left			= gs_sill_outside_sl_left,
				gs_sill_outside_sl_right		= gs_sill_outside_sl_right,
				gs_SashText_typ_num				= gs_SashText_typ_num,
				gs_frame_width_orig				= gs_frame_width_orig,
				gs_frw1							= gs_frame_width_left,
				gs_frw2							= gs_frame_width_right,
				gs_frwt							= gs_frame_width_upper,
				gs_frwm							= gs_frame_width,
				gs_frame_width_left_2			= gs_frame_width_left_2,
				gs_frame_width_low_left_sl		= gs_frame_width_low_left_sl,
				gs_frame_width_right_2			= gs_frame_width_right_2,
				gs_frame_width_low_right_sl		= gs_frame_width_low_right_sl,
				gs_frame_width_transom			= gs_frame_width_transom,
				gs_pocket_door_frame			= gs_pocket_door_frame,
				gs_door_transom					= gs_door_transom,
				gs_sidelight_width_left			= gs_sidelight_width_left,
				gs_sidelight_width_right		= gs_sidelight_width_right,
				gs_sidelight_right				= gs_sidelight_right,
				gs_sidelight_left				= gs_sidelight_left,
				gs_sidelight_parapet_hgt_left	= gs_sidelight_parapet_hgt_left,
				gs_sidelight_parapet_hgt_right	= gs_sidelight_parapet_hgt_right,
				gs_sash_width					= gs_sash_width,
				gs_sl_sash_width				= gs_sl_sash_width,
				nArchResolution					= res,
				gs_frame_mat					= gs_frame_mat,
				gs_frame_mat2					= gs_frame_mat2,
				bShowAddHotspots				= bShowAddHotspots,
				bShowAddHotspotsForIS			= bShowAddHotspotsForIS,
				bShowUnitHotspots				= bShowUnitHotspots,
				bShowEgressHotspots				= bShowEgressHotspots,
				bShowLeafHotspots				= bShowLeafHotspots,
				lod3D							= lod3D,
				gs_sliding_fixpanel_width_left	= gs_sliding_fixpanel_width_left,
				gs_sliding_fixpanel_width_right	= gs_sliding_fixpanel_width_right,
				gs_leaf_optype_m				= gs_leaf_optype_m,
				gs_optype_m_02					= gs_optype_m_02,
				gs_optype_m_09					= gs_optype_m_09,
				gs_optype_m_05					= gs_optype_m_05,
				gs_optype_m_10					= gs_optype_m_10,
				gs_optype_m_06					= gs_optype_m_06,
				iMullionStyle_02				= iMullionStyle_02,
				iMullionStyle_09				= iMullionStyle_09,
				iMullionStyle_05				= iMullionStyle_05,
				iMullionStyle_10				= iMullionStyle_10,
				iMullionStyle_06				= iMullionStyle_06,
				fr_sect_fill_type				= fr_sect_fill_type,
				fr_sect_fill_bg					= fr_sect_fill_bg,
				fr_sect_fill_fg					= fr_sect_fill_fg,
				gs_frame_pen_cont				= gs_frame_pen_cont,
				gs_frame_pen					= gs_frame_pen,
				res								= res
endif

body -1

if isVentilationOverFrame then
	cutend
endif

! Hotspots for "Associative" dimensioning

Diff_extra = gs_unit_extra_right - gs_unit_extra_left

if bShowUnitHotspots & gs_pocket & (GLOB_CONTEXT = 4 | GLOB_CONTEXT = 24 | GLOB_CONTEXT = 6) then
	unID=350
	addx Diff_extra
	hotspot ac_unit_width/2 - gs_unit_extra_right, b, 0, unID		:unID=unID+1
	hotspot -ac_unit_width/2 + gs_unit_extra_left, b, 0, unID	:unID=unID+1

	hotspot ac_unit_width/2 - gs_unit_extra_right, 0, 0, unID		:unID=unID+1
	hotspot -ac_unit_width/2 + gs_unit_extra_left, 0, 0, unID	:unID=unID+1
	del 1
endif


! =============================================================================
! Draw Door Panels
! =============================================================================

if gs_door_rail then
	rail_h_lo = 0.003
else
	rail_h_lo = 0
endif
bSecondPanel = 0

if iDoorPanelType <> 0 | bAsymmetricLeafs then

	if lod3D = 5 then	! Chinese
		sh_sect_fill_type	= gs_FillSdl
		sh_sect_fill_fg		= gs_penSdl_fg
		sh_sect_fill_bg		= gs_penSdl_bg
	else
		sh_sect_fill_type	= gs_fillLeaf
		sh_sect_fill_fg		= gs_penLeaf_fg
		sh_sect_fill_bg		= gs_penLeaf_bg
	endif

	frameDiff = 0
	if gs_sidelight_left & not(gs_sidelight_right) then
		if	gs_leaf_optype_m = LEAF_2L_SIDE_HUNG |\
			gs_leaf_optype_m = LEAF_2L_DOUBLE_ACTING |\
			gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS |\
			gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS_M then
			frameDiff = (gs_frame_width_left - gs_frame_width_right)
		endif
	endif

	bMirroredPanel	= 0
	if gs_leaf_optype_m = LEAF_1L_MULTIPANEL_M then bMirroredPanel = 1

	addy thresholdModify

	dim hd[]
	dim vd[]

	hgnrl	= gs_hor_gnum - 1
	vgnrl	= gs_ver_gnum - 1
	hd		= gs_hor_d
	vd		= gs_ver_d

	htyp	= gs_handle_type_m
	fulled	= gs_full_edit

	bMirroredOplines = 0

	LeftFrameWidth		= gs_frame_width_left
	if gs_sidelight_left then LeftFrameWidth = gs_frame_width_left_2
	RightFrameWidth		= gs_frame_width_right
	if gs_sidelight_right then RightFrameWidth = gs_frame_width_right_2


	if gs_pocket then
		TotalLeafWidthin3D = ac_leaf_width

		if gs_leaf_optype_m = LEAF_2L_POCKET then
			if gs_pocket_door_frame then
				a_x = -ac_leaf_width/2 + (gs_frame_width_left - gs_frame_width_right)/2
			else
				a_x = -ac_leaf_width/2 - (gs_tolerance_left - gs_tolerance_right)/2
			endif
		else
			if gs_pocket_door_frame then
				a_x = -ac_unit_width/2 + gs_frame_width_left
			else
				a_x = -ac_unit_width/2 - gs_tolerance_left
			endif
		endif
	else
		TotalLeafWidthin3D = ac_unit_width - gs_sidelight_width_right * gs_sidelight_right - gs_sidelight_width_left * gs_sidelight_left - \
						gs_frame_width_right * not(gs_sidelight_right) - gs_frame_width_left * not(gs_sidelight_left) + 2 * gs_rebate_width
		if gs_slidingext then
			TotalLeafWidthin3D = TotalLeafWidthin3D + LeftFrameWidth + RightFrameWidth + gs_tolerance_left + gs_tolerance_right
		endif

		a_x = -ac_unit_width/2 + gs_sidelight_width_left * gs_sidelight_left + gs_frame_width_left * not(gs_sidelight_left) - gs_rebate_width
		if gs_slidingext then
			a_x = a_x - LeftFrameWidth - gs_tolerance_left
		endif
	endif

	if gs_door_transom then
		TotalLeafHeightin3D = ac_unit_height - gs_transom_height + gs_rebate_width
	else
		TotalLeafHeightin3D = ac_unit_height - gs_frame_width_upper + gs_rebate_width
	endif

	! =============================================================================
	! 1 Leaf Panels
	! =============================================================================

	if	gs_leaf_optype_m = LEAF_1L_SIDE_HUNG |\
		gs_leaf_optype_m = LEAF_1L_SIDE_HUNG_M |\
		gs_leaf_optype_m = LEAF_1L_DOUBLE_ACTING |\
		gs_leaf_optype_m = LEAF_1L_DOUBLE_ACTING_M then

		aaa = TotalLeafWidthin3D
		bbb = TotalLeafHeightin3D - thresholdModify

		addx a_x + aaa/2
		mulx -1

		! -------------- HOTSPOT EDITING
		if gs_full_edit & GLOB_CONTEXT <> 4 & GLOB_CONTEXT <> 24 & GLOB_CONTEXT <> 6 then
			addx -aaa/2

			hotspot aaa,					gs_han_height,	 0,						unID,	gs_open_3D,	4+128		: unID = unID + 1
			hotspot aaa*cos(gs_open_3D),	gs_han_height,	-aaa*sin(gs_open_3D),	unID,	gs_open_3D,	5		: unID = unID + 1
			hotspot 0,						gs_han_height,	 0,						unID,	gs_open_3D,	6			: unID = unID + 1
			hotspot 0,						0,				 0,						unID,	gs_open_3D,	7			: unID = unID + 1

			del 1
		endif


		! -------------- Door Leaf

		bMiddleLine = 0

		addx -aaa/2
		roty gs_open_3D
		addx aaa/2

		gosub "Leaf_Panel"

		del 5

	endif


	! =============================================================================
	! 2 Leaf Panels
	! =============================================================================

	if	gs_leaf_optype_m = LEAF_2L_SIDE_HUNG |\
		gs_leaf_optype_m = LEAF_2L_DOUBLE_ACTING |\
		gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS |\
		gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS_M then

		addx a_x+TotalLeafWidthin3D-lar

		for i=1 to 2
			if i=1 then
				aaa = lar
				htyp = gs_handle_type_m
				fulled = gs_full_edit
			else
				aaa = lal
				if gs_handle_uniform then
					htyp = gs_handle_type_m
				else
					htyp = gs_handle_type2_m
				endif
				fulled=0
			endif

			bbb = TotalLeafHeightin3D - thresholdModify

			addx aaa/2
			mulx -1

			! -------------- HOTSPOT EDITING
			if gs_full_edit & GLOB_CONTEXT <> 4 & GLOB_CONTEXT <> 24 & GLOB_CONTEXT <> 6 then
				addx -aaa/2

				if i=1 then
					hotspot aaa,					gs_han_height,	 0,						unID,	gs_open_3D,		4+128		: unID = unID + 1
					hotspot aaa*cos(gs_open_3D),	gs_han_height,	-aaa*sin(gs_open_3D),	unID,	gs_open_3D,		5			: unID = unID + 1
					hotspot 0,						gs_han_height,	 0,						unID,	gs_open_3D,		6			: unID = unID + 1
					hotspot 0,						0,				 0,						unID,	gs_open_3D,		7			: unID = unID + 1
				else
					hotspot aaa,					gs_han_height,	 0,						unID,	gs_open_3D_2,	4+128		: unID = unID + 1
					hotspot aaa*cos(gs_open_3D_2),	gs_han_height,	-aaa*sin(gs_open_3D_2),	unID,	gs_open_3D_2,	5			: unID = unID + 1
					hotspot 0,						gs_han_height,	 0,						unID,	gs_open_3D_2,	6			: unID = unID + 1

					if gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS then
						hotspot 0,					0,					0,					unID,	gs_open_3D_2,	7			: unID = unID + 1
					else
						hotspot 0,					2*gs_han_height,	0,					unID,	gs_open_3D_2,	7			: unID = unID + 1
					endif
				endif

				del 1
			endif


			if i=1 then !Either there is just one panel, or two, and this is the main panel
				hgnrl=gs_hor_gnum - 1
				vgnrl=gs_ver_gnum - 1
				hd=gs_hor_d
				vd=gs_ver_d
			else
				if bAsymmetricLeafs then !Side panel in double door asymmetric
					hgnrl=gs_hor_gnum2 - 1
					vgnrl=gs_ver_gnum2 - 1
					hd=gs_hor_d2
					vd=gs_ver_d2
				else !Second panel in double doors
					if iDoorPanelType = 45 then !French panel, with common settings on the two door panels
						hgnrl=gs_hor_gnum - 1
						vgnrl=gs_ver_gnum - 1
						hd=gs_hor_d
						vd=gs_ver_d
					else !H-V Grid
						hgnrl=gs_hor_gnum4 - 1
						vgnrl=gs_ver_gnum4 - 1
						hd=gs_hor_d4
						vd=gs_ver_d4
					endif
				endif
			endif
			bMiddleLine = (i = 1)

			addx -aaa/2
			if i=1 then
				roty gs_open_3D
			else
				roty gs_open_3D_2
			endif
			addx aaa/2

			bSecondPanel = (((iOpeningMethod = OPENMETHOD_OPEN_DOUB) & not(bBombShelter)) & i = 2)
			gosub "Leaf_Panel"

			del 3

			if i = 1 and (iDoorPanelType <> 0) and abs(gs_open_3d) < EPS then
				model wire
				plane 4,
					aaa/2, bbb, 0,
					aaa/2, bbb, gs_leaf_thk,
					aaa/2, 0, gs_leaf_thk,
					aaa/2, 0, 0
				model solid
			endif

			body -1
			del 2

			mulx -1

			if gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS | gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS_M then
				mulz -1
				addz -gs_leaf_thk
			endif
		next i

		if gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS | gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS_M then del 4
		del 3
	endif


	! =============================================================================
	! Pivot Door Leafs
	! =============================================================================

	if	gs_leaf_optype_m = LEAF_1L_PIVOT |\
		gs_leaf_optype_m = LEAF_1L_PIVOT_M then

		aaa = TotalLeafWidthin3D
		bbb = TotalLeafHeightin3D - thresholdModify

		addx a_x+aaa/2
		mulx -1

		! -------------- HOTSPOT EDITING
		if gs_full_edit & GLOB_CONTEXT <> 4 & GLOB_CONTEXT <> 24 & GLOB_CONTEXT <> 6 then
			add -aaa/2, 0, 0!gs_leaf_thk/2

			hotspot 0, 				0, 0, unID, gs_pivotOffset, 1+128 : unID = unID + 1
			hotspot gs_pivotOffset, 0, 0, unID, gs_pivotOffset, 2 : unID = unID + 1
			hotspot -1, 			0, 0, unID, gs_pivotOffset, 3 : unID = unID + 1

			hotspot 0, 				bbb, 0, unID, gs_pivotOffset, 1+128 : unID = unID + 1
			hotspot gs_pivotOffset, bbb, 0, unID, gs_pivotOffset, 2 : unID = unID + 1
			hotspot -1, 			bbb, 0, unID, gs_pivotOffset, 3 : unID = unID + 1

			addx gs_pivotOffset

			hotspot aaa - gs_pivotOffset,															gs_han_height,	 gs_leaf_thk/2,											unID,	gs_open_3D,	4+128	: unID = unID + 1
			hotspot (aaa - gs_pivotOffset) * cos(gs_open_3D) + (gs_leaf_thk/2) * sin(gs_open_3D),	gs_han_height,	-(aaa - gs_pivotOffset) * sin(gs_open_3D) + (gs_leaf_thk/2) * cos(gs_open_3D),	unID,	gs_open_3D,	5	: unID = unID + 1
			hotspot 0,																				gs_han_height,	 0,														unID,	gs_open_3D,	6	: unID = unID + 1
			hotspot 0,																				0,	 			 0,														unID,	gs_open_3D,	7	: unID = unID + 1

			del 2
		endif


		! -------------- Door Leaf

		bMiddleLine = 0
		htyp=gs_handle_type_m

		addx -aaa/2 + gs_pivotOffset
		roty gs_open_3D
		addx aaa/2 - gs_pivotOffset

		gosub "Leaf_Panel"

		del 5
	endif


	! =============================================================================
	! Sliding Leafs
	! =============================================================================

	if	gs_leaf_optype_m = LEAF_2L_1SLIDING |\
		gs_leaf_optype_m = LEAF_2L_1SLIDING_M |\
		gs_leaf_optype_m = LEAF_2L_2SLIDING |\
		gs_leaf_optype_m = LEAF_2L_2SLIDING_M |\
		gs_leaf_optype_m = LEAF_3L_2SLIDING |\
		gs_leaf_optype_m = LEAF_3L_2SLIDING_M |\
		gs_leaf_optype_m = LEAF_4L_2SLIDING |\
		gs_leaf_optype_m = LEAF_4L_3SLIDING |\
		gs_leaf_optype_m = LEAF_4L_3SLIDING_M |\
		gs_leaf_optype_m = LEAF_4L_4SLIDING |\
		gs_leaf_optype_m = LEAF_4L_4SLIDING_M then

		aaa = TotalLeafWidthin3D/SlidLeafNum + PanelElongOverlap
		bbb = TotalLeafHeightin3D - rail_h_lo - thresholdModify

		addx a_x+TotalLeafWidthin3D/2

		if	gs_leaf_optype_m = LEAF_2L_1SLIDING |\
			gs_leaf_optype_m = LEAF_2L_1SLIDING_M |\
			gs_leaf_optype_m = LEAF_2L_2SLIDING |\
			gs_leaf_optype_m = LEAF_2L_2SLIDING_M |\
			gs_leaf_optype_m = LEAF_4L_2SLIDING |\
			gs_leaf_optype_m = LEAF_4L_4SLIDING |\
			gs_leaf_optype_m = LEAF_4L_4SLIDING_M then

			railWidth = 2 * gs_leaf_thk
		endif

		if	gs_leaf_optype_m = LEAF_3L_2SLIDING |\
			gs_leaf_optype_m = LEAF_3L_2SLIDING_M then

			railWidth = 3 * gs_leaf_thk
		endif

		if	gs_leaf_optype_m = LEAF_4L_3SLIDING |\
			gs_leaf_optype_m = LEAF_4L_3SLIDING_M then

			railWidth = 4 * gs_leaf_thk
		endif

		gosub	"Rail_for_SlidingFolding"

		mulx -1
		addy rail_h_lo

		unID = 300

		temp_bOplines3d = bOplines3d

		hgnrl=gs_hor_gnum - 1
		vgnrl=gs_ver_gnum - 1
		hd=gs_hor_d
		vd=gs_ver_d

		if gs_leaf_optype_m <> LEAF_4L_2SLIDING & gs_leaf_optype_m <> LEAF_4L_4SLIDING then

			if gs_full_edit & GLOB_CONTEXT <> 6 then
				add TotalLeafWidthin3D/2, 0, SlidLeafNum * gs_leaf_thk + (SlidLeafNum-1) * gs_leaf_gap
				hotspot 0, 				gs_han_height,	0,	unID, gs_open3D, 1+128 : unID=unID+1
				hotspot -gs_open3D, 	gs_han_height,	0,	unID, gs_open3D, 2 : unID=unID+1
				hotspot 1, 				gs_han_height,	0,	unID, gs_open3D, 3 : unID=unID+1
				del 1

				if gs_leaf_optype_m = LEAF_2L_2SLIDING then
					addx -TotalLeafWidthin3D/2
					hotspot 0, 				gs_han_height,	gs_leaf_thk,	unID, gs_open3D_2, 1+128 : unID=unID+1
					hotspot gs_open3D_2, 	gs_han_height,	gs_leaf_thk,	unID, gs_open3D_2, 2 : unID=unID+1
					hotspot -1, 			gs_han_height,	gs_leaf_thk,	unID, gs_open3D_2, 3 : unID=unID+1
					del 1
				endif
			endif

			addx -TotalLeafWidthin3D/2+aaa/2
			for i=1 to SlidLeafNum

				if i = 2 & SlidLeafNum < 3 then
					if iDoorPanelType = 45 then !French panel, with common settings on the two door panels
						hgnrl=gs_hor_gnum - 1
						vgnrl=gs_ver_gnum - 1
						hd=gs_hor_d
						vd=gs_ver_d
					else
						hgnrl=gs_hor_gnum4 - 1
						vgnrl=gs_ver_gnum4 - 1
						hd=gs_hor_d4
						vd=gs_ver_d4
					endif
				endif

				if i=SlidLeafNum | (i=1 & (gs_leaf_optype_m = LEAF_2L_2SLIDING | gs_leaf_optype_m = LEAF_4L_4SLIDING)) then
					htyp=gs_handle_type_m
					fulled=0
				else
					htyp=0
					fulled=gs_full_edit
				endif

				if i=SlidLeafNum then
					addx -gs_open3D
				else
					if i <> 1 & (gs_leaf_optype_m = LEAF_3L_2SLIDING | gs_leaf_optype_m = LEAF_4L_3SLIDING) then
						addx ((TotalLeafWidthin3D-gs_open3D-aaa)/(SlidLeafNum-1) - aaa + gs_leaf_overlap) * (i-1)
					endif
					if i = 1 & gs_leaf_optype_m = LEAF_2L_2SLIDING then addx gs_open3D_2
				endif

				if i = 1 & gs_leaf_optype_m <> LEAF_2L_2SLIDING & gs_leaf_optype_m <> LEAF_4L_4SLIDING then
					bOplines3d = 0
				else
					bOplines3d = temp_bOplines3d
				endif

				if i = 1 & gs_leaf_optype_m = LEAF_2L_2SLIDING then mulx -1

				bMiddleLine = 0

				sliding_door = 1

				gosub "Leaf_Panel"

				if i = 1 & gs_leaf_optype_m = LEAF_2L_2SLIDING then del 1


				if i=SlidLeafNum then
					del 1
				else
					if i = 1 & gs_leaf_optype_m = LEAF_2L_2SLIDING then del 1
					if i <> 1 & (gs_leaf_optype_m = LEAF_3L_2SLIDING | gs_leaf_optype_m = LEAF_4L_3SLIDING) then del 1
				endif

				add aaa - gs_leaf_overlap, 0, (gs_leaf_thk + gs_leaf_gap) * (lod3D<>5)
			next i
			del SlidLeafNum+1
		else
			if gs_full_edit & GLOB_CONTEXT <> 6 then
				hotspot 0, 				gs_han_height,	2*gs_leaf_thk + gs_leaf_gap,	unID, gs_open3D, 1+128 : unID=unID+1
				hotspot -gs_open3D, 	gs_han_height,	2*gs_leaf_thk + gs_leaf_gap,	unID, gs_open3D, 2 : unID=unID+1
				hotspot 1, 				gs_han_height,	2*gs_leaf_thk + gs_leaf_gap,	unID, gs_open3D, 3 : unID=unID+1

				if gs_leaf_optype_m = LEAF_4L_4SLIDING then
					addx -TotalLeafWidthin3D/2
					hotspot 0, 				gs_han_height,	gs_leaf_thk,	unID, gs_open3D_2, 1+128 : unID=unID+1
					hotspot gs_open3D_2, 	gs_han_height,	gs_leaf_thk,	unID, gs_open3D_2, 2 : unID=unID+1
					hotspot -1, 			gs_han_height,	gs_leaf_thk,	unID, gs_open3D_2, 3 : unID=unID+1
					del 1

					addx TotalLeafWidthin3D/2
					hotspot 0, 				gs_han_height,	gs_leaf_thk,	unID, gs_open3D_2, 1+128 : unID=unID+1
					hotspot -gs_open3D_2, 	gs_han_height,	gs_leaf_thk,	unID, gs_open3D_2, 2 : unID=unID+1
					hotspot 1, 				gs_han_height,	gs_leaf_thk,	unID, gs_open3D_2, 3 : unID=unID+1
					del 1
				endif
			endif

			for i = 1 to 2
				addx TotalLeafWidthin3D/2 - aaa/2

				for j = 1 to 2
					if j=1 & gs_leaf_optype_m = LEAF_4L_2SLIDING then
						htyp=0
						fulled=gs_full_edit
						bOplines3d = 0
					else
						htyp=gs_handle_type_m
						fulled=0
						bOplines3d = temp_bOplines3d
					endif

					if j = 2 then
						addx gs_open3D
						mulx -1
					else
						if gs_leaf_optype_m = LEAF_4L_4SLIDING then addx -gs_open3D_2
					endif

					bMiddleLine = 0

					sliding_door = 1

					gosub "Leaf_Panel"

					if j = 2 then
						del 2
					else
						if gs_leaf_optype_m = LEAF_4L_4SLIDING then del 1
					endif

					add -aaa + gs_leaf_overlap, 0, (gs_leaf_thk + gs_leaf_gap) * (lod3D<>5)
				next j
				del 3
				mulx -1
			next i
			del 2
		endif
		del 3
	endif


	! =============================================================================
	! External Sliding Leafs
	! =============================================================================

	if	gs_leaf_optype_m = LEAF_1L_EXTERNAL_SLIDING |\
		gs_leaf_optype_m = LEAF_1L_EXTERNAL_SLIDING_M then

		if WIDO_REVEAL_SIDE then addz -WALL_THICKNESS

		aaa = TotalLeafWidthin3D
		bbb = ac_wallhole_height

		addx a_x + TotalLeafWidthin3D/2

		unID = 1
		if gs_full_edit & GLOB_CONTEXT <> 6 then
			hotspot -aaa/2, 			gs_han_height, -gs_leaf_thk-posHole,	unID, gs_open3D, 1+128	:	unID=unID+1
			hotspot -aaa/2+gs_open3D,	gs_han_height, -gs_leaf_thk-posHole,	unID, gs_open3D, 2		:	unID=unID+1
			hotspot -aaa,				gs_han_height, -gs_leaf_thk-posHole,	unID, gs_open3D, 3		:	unID=unID+1
		endif

		gosub	"Rail_for_SlidingExternal"
		bbb = ac_wallhole_height - rail_h_do - rail_h_up

		htyp=gs_handle_type_m

		sliding_door = 1
		bMiddleLine = 0

		add gs_open3D, rail_h_do, -gs_leaf_thk-posHole
		mulx -1

		gosub "Leaf_Panel"

		del 3

		if WIDO_REVEAL_SIDE then del 1
	endif


	! =============================================================================
	! External Double Sliding Leafs
	! =============================================================================

	if	gs_leaf_optype_m = LEAF_2L_EXTERNAL_SLIDING then

		if WIDO_REVEAL_SIDE then addz -WALL_THICKNESS

		aaa = TotalLeafWidthin3D/2
		bbb = ac_wallhole_height

		addx a_x + TotalLeafWidthin3D/2

		unID = 1
		if gs_full_edit & GLOB_CONTEXT <> 6 then
			hotspot 0, 			gs_han_height, -gs_leaf_thk-posHole,	unID, gs_open3D, 1+128	:	unID=unID+1
			hotspot gs_open3D,	gs_han_height, -gs_leaf_thk-posHole,	unID, gs_open3D, 2		:	unID=unID+1
			hotspot -1,			gs_han_height, -gs_leaf_thk-posHole,	unID, gs_open3D, 3		:	unID=unID+1
		endif

		gosub	"Rail_for_SlidingExternal"
		bbb = ac_wallhole_height - rail_h_do - rail_h_up

		htyp=gs_handle_type_m

		sliding_door = 1
		bMiddleLine = 0

		add 0, rail_h_do, -gs_leaf_thk-posHole

		for i = 1 to 2
			mulx -1
			addx -aaa/2-gs_open3D
				gosub "Leaf_Panel"
			del 1
		next i
		del 4

		if WIDO_REVEAL_SIDE then del 1
	endif


	! =============================================================================
	! Single Pocket Door Leaf
	! =============================================================================

	if	gs_leaf_optype_m = LEAF_1L_POCKET |\
		gs_leaf_optype_m = LEAF_1L_POCKET_M then

		aaa = TotalLeafWidthin3D

		if gs_pocket_door_frame then
			heightLeaf = ac_leaf_height
		else
			heightLeaf = ac_wallhole_height
		endif

		if gs_door_rail then
			heightRail = heightLeaf
			lengthRail = 2 * aaa	! - gs_han_pos

			heightLeaf = heightLeaf - posHole * gs_door_rail * ((gs_door_rail_ext_m = EXT_RAIL_BOTT | gs_door_rail_ext_m = EXT_RAIL_BOTT_TOP) + (gs_door_rail_ext_m = EXT_RAIL_TOP | gs_door_rail_ext_m = EXT_RAIL_BOTT_TOP))
		endif

		addx a_x + TotalLeafWidthin3D/2

		gosub	"Rail_for_Pocket"

		bbb = heightLeaf

		unID = 1
		if gs_full_edit & GLOB_CONTEXT <> 6 then
			hotspot -aaa/2, 			gs_han_height, posLeafy,	unID, gs_open3D, 1+128	:	unID=unID+1
			hotspot -aaa/2+gs_open3D,	gs_han_height, posLeafy,	unID, gs_open3D, 2		:	unID=unID+1
			hotspot -aaa,				gs_han_height, posLeafy,	unID, gs_open3D, 3		:	unID=unID+1
		endif

		htyp=gs_handle_type_m

		sliding_door = 1
		bMiddleLine = 0

		if gs_door_rail & (gs_door_rail_ext_m = EXT_RAIL_BOTT | gs_door_rail_ext_m = EXT_RAIL_BOTT_TOP) then	addy posHole

		add gs_open3D, 0, posLeafy + posHole
		mulx -1

		gosub "Leaf_Panel"

		del 2
		if gs_door_rail & (gs_door_rail_ext_m = EXT_RAIL_BOTT | gs_door_rail_ext_m = EXT_RAIL_BOTT_TOP) then	del 1
		del 1
	endif


	! =============================================================================
	! Double Pocket Door Leaf
	! =============================================================================

	if	gs_leaf_optype_m = LEAF_2L_POCKET then

		aaa = TotalLeafWidthin3D/2

		addx a_x + TotalLeafWidthin3D/2

		if gs_pocket_door_frame then
			heightLeaf = ac_leaf_height
		else
			heightLeaf = ac_wallhole_height
		endif

		if gs_door_rail then
			heightRail = heightLeaf
			lengthRail = 4 * (aaa)	! - gs_han_pos

			heightLeaf = heightLeaf - posHole * gs_door_rail * ((gs_door_rail_ext_m = EXT_RAIL_BOTT | gs_door_rail_ext_m = EXT_RAIL_BOTT_TOP) + (gs_door_rail_ext_m = EXT_RAIL_TOP | gs_door_rail_ext_m = EXT_RAIL_BOTT_TOP))
		endif

		gosub	"Rail_for_Pocket"

		bbb = heightLeaf

		unID = 1
		if gs_full_edit & GLOB_CONTEXT <> 6 then
			hotspot 0, 			gs_han_height, posLeafy,	unID, gs_open3D, 1+128	:	unID=unID+1
			hotspot gs_open3D,	gs_han_height, posLeafy,	unID, gs_open3D, 2		:	unID=unID+1
			hotspot -1,			gs_han_height, posLeafy,	unID, gs_open3D, 3		:	unID=unID+1
		endif

		htyp=gs_handle_type_m

		sliding_door = 1
		bMiddleLine = 0

		if gs_door_rail & (gs_door_rail_ext_m = EXT_RAIL_BOTT | gs_door_rail_ext_m = EXT_RAIL_BOTT_TOP) then	addy posHole

		add 0, 0, posLeafy + posHole

		for i = 1 to 2
			mulx -1
			addx -aaa/2-gs_open3D
				gosub "Leaf_Panel"
			del 1
		next i
		del 3

		if gs_door_rail & (gs_door_rail_ext_m = EXT_RAIL_BOTT | gs_door_rail_ext_m = EXT_RAIL_BOTT_TOP) then	del 1

		del 1
	endif


	! =============================================================================
	! Sliding Folding Multi-panel 1 Side Panel
	! =============================================================================

	if	gs_leaf_optype_m = LEAF_1L_MULTIPANEL | gs_leaf_optype_m = LEAF_1L_MULTIPANEL_M then

		bMiddleLine = 0

		bbb = TotalLeafHeightin3D - rail_h_lo

		bOpened = (gs_open3D > EPS)

		opmax = TotalLeafWidthin3D

		addx a_x + TotalLeafWidthin3D/2

		if gs_leaf_optype_m = LEAF_1L_MULTIPANEL_M then mulx -1

		unID = 1
		if gs_full_edit & GLOB_CONTEXT <> 6 then
			addx TotalLeafWidthin3D/2
			hotspot 0, 					B/2, 0,		unID,	gs_open3D,	1+128	:	unID=unID+1
			hotspot -gs_open3D, 		B/2, 0,		unID,	gs_open3D,	2		:	unID=unID+1
			hotspot TotalLeafWidthin3D+1, 	B/2, 0,		unID,	gs_open3D,	3
			del 1
		endif

		railWidth = gs_leaf_thk

		gosub	"Rail_for_SlidingFolding"


		panelWidth = (TotalLeafWidthin3D) / (gs_leaf_num - bMiddleStacking)

		w = (opmax-gs_open3D) / (gs_leaf_num - bMiddleStacking)

		alph = acs(w/sqr((panelWidth)**2+(gs_leaf_thk**2)))+atn(gs_leaf_thk/panelWidth)

		add -TotalLeafWidthin3D/2, rail_h_lo, 0

		if bOpened then
			for i=1 to gs_leaf_num
				if i=1 then
					roty alph*bOpened
				else
					if i mod 2 then
						roty 2*alph*bOpened
						addx 0
					else
						roty -2*alph*bOpened
						addz -gs_leaf_thk
					endif
				endif

				if bMiddleStacking and (i=1 or i=gs_leaf_num) then
					aaa = panelWidth/2
				else
					aaa = panelWidth
				endif

				if i = gs_leaf_num then
					htyp		= gs_handle_type_m
				else
					if i = 1 & gs_opening_leaves then
						htyp		= gs_handle_type_m
					else
						htyp		= 0
					endif
				endif

				addx aaa/2
				bMirroredOplines = 0
				if i = 1 and gs_opening_leaves then
					mulx -1
					bMirroredOplines = 1
				endif

				gosub "Leaf_Panel"
				if i = 1 and gs_opening_leaves then del 1
				del 1

				if i mod 2 then
					add aaa, 0, gs_leaf_thk
				else
					add aaa, 0, 0
				endif
			next i

			del 3 * gs_leaf_num - 1
		else
			if bMiddleStacking then
				leafWidth = panelWidth/2
			else
				leafWidth = panelWidth
			endif
			aaa = leafWidth

			addx leafWidth

			if gs_opening_leaves then
				unID=unID+1
				if gs_full_edit & GLOB_CONTEXT <> 4 & GLOB_CONTEXT <> 24 & GLOB_CONTEXT <> 6 then
					hotspot 0, 							B/2, 						0,							unID,	gs_open_3D,	6	:	unID=unID+1
					hotspot -10, 						B/2,						0,							unID,	gs_open_3D,	4+128	:	unID=unID+1
					hotspot -leafWidth*cos(gs_open_3D),	B/2,						-leafWidth*sin(gs_open_3D),	unID,	gs_open_3D,	5	:	unID=unID+1
					hotspot 0,							-B+2*B*(bMirroredPanel),	0,							unID,	gs_open_3D,	7
				endif
				htyp		= gs_handle_type_m
			else
				unID = unID + 4

				htyp		= 0
			endif

			roty -gs_open_3D * gs_opening_leaves
			addx -leafWidth/2

			if gs_opening_leaves then
			bMirroredOplines = 0
				mulx -1
			endif

			gosub "Leaf_Panel"

			if gs_opening_leaves then
				del 1
			endif
			del 2

			htyp		= 0
			for i=1 to gs_leaf_num-2
				leafWidth = panelWidth
				aaa = leafWidth

				addx aaa/2
				gosub "Leaf_Panel"
				del 1

				addx aaa
			next i

			if bMiddleStacking then
				leafWidth = panelWidth/2
			else
				leafWidth = panelWidth
			endif
			aaa = leafWidth

			htyp		= gs_handle_type_m
			if gs_opening_leaves2 then
				unID=unID+1
				if gs_full_edit & GLOB_CONTEXT <> 4 & GLOB_CONTEXT <> 24 & GLOB_CONTEXT <> 6 then
					hotspot 0, 								B/2, 						0,								unID,	gs_open_3D_2,	6		:	unID=unID+1
					hotspot 10, 							B/2,						0,								unID,	gs_open_3D_2,	4+128	:	unID=unID+1
					hotspot leafWidth*cos(gs_open_3D_2),	B/2, 						-leafWidth*sin(gs_open_3D_2),	unID,	gs_open_3D_2,	5		:	unID=unID+1
					hotspot 0,								B-2*B*(bMirroredPanel),		0,								unID,	gs_open_3D_2,	7
				endif
			else
				unID = unID + 4
			endif



			roty gs_open_3D_2 * gs_opening_leaves2

			addx aaa/2
			gosub "Leaf_Panel"
			del 1

			del 1 + (gs_leaf_num-2)
		endif

		del 1
		if gs_leaf_optype_m = LEAF_1L_MULTIPANEL_M then del 1
		del 1
	endif


	! =============================================================================
	! Sliding Folding Multi-panel 2 Side Panel
	! =============================================================================

	if	gs_leaf_optype_m = LEAF_2L_MULTIPANEL then

		bMiddleLine = 0

		bbb = TotalLeafHeightin3D - rail_h_lo

		panelWidth = (TotalLeafWidthin3D) / (gs_leaf_num + gs_leaf_num2 - bMiddleStacking)

		addx a_x + TotalLeafWidthin3D/2

		sideRatio = (gs_leaf_num2-bMiddleStacking * 0.5) / (gs_leaf_num + gs_leaf_num2 - bMiddleStacking)
		opmax = TotalLeafWidthin3D
		opmax2 = opmax * sideRatio
		opmax1 = opmax * (1 - sideRatio)

		unID = 300

		openingOrig = TotalLeafWidthin3D/2 - TotalLeafWidthin3D * sideRatio
		if gs_full_edit & GLOB_CONTEXT <> 6 then
			hotspot openingOrig,				B/2, 0, unID, gs_open3D, 1+128	: unID = unID + 1
			hotspot openingOrig - gs_open3D,	B/2, 0, unID, gs_open3D, 2		: unID = unID + 1
			hotspot openingOrig + 1,			B/2, 0, unID, gs_open3D, 3		: unID = unID + 1

			hotspot openingOrig,				B/2, 0, unID, gs_open3D_2, 1+128	: unID = unID + 1
			hotspot openingOrig + gs_open3D_2,	B/2, 0, unID, gs_open3D_2, 2		: unID = unID + 1
			hotspot openingOrig - 1,			B/2, 0, unID, gs_open3D_2, 3		: unID = unID + 1
		endif
		railWidth = gs_leaf_thk

		gosub	"Rail_for_SlidingFolding"

		add -TotalLeafWidthin3D/2, rail_h_lo, 0

		for j = 1 to 2
			if j = 1 then
				w=(opmax1-gs_open3D) / (gs_leaf_num - bMiddleStacking * 0.5)
				leafNum = gs_leaf_num
				bOpened = (gs_open3D > EPS)
			else
				w=(opmax2-gs_open3D_2) / (gs_leaf_num2 - bMiddleStacking * 0.5)
				leafNum = gs_leaf_num2
				bOpened = (gs_open3D_2 > EPS)
			endif


			alph = acs(w/sqr((panelWidth)^2+(gs_leaf_thk^2))) + atn(gs_leaf_thk/panelWidth)


			if bOpened then
				for i=1 to leafNum
					if i=1 then
						roty alph*bOpened
					else
						if i mod 2 then
							roty 2*alph*bOpened
							addx 0
						else
							roty -2*alph*bOpened
							addz -gs_leaf_thk
						endif
					endif

					if bMiddleStacking and (i=1) then
						aaa = panelWidth/2
					else
						aaa = panelWidth
					endif
					if i = leafNum then
						htyp		= gs_handle_type_m
					else
						if (j = 1 & i = 1 & gs_opening_leaves) | (j = 2 & i = 1 & gs_opening_leaves2) then
							htyp		= gs_handle_type_m
						else
							htyp		= 0
						endif
					endif

					addx aaa/2
					bMirroredOplines = 0
					mulTrans = 0

					if i=1 and ((j = 1 and gs_opening_leaves) or (j = 2 and gs_opening_leaves2)) then
						mulx -1
						bMirroredOplines = 1
						mulTrans = 1
					endif

					gosub "Leaf_Panel"

					del 1 + mulTrans

					if i mod 2 then
						add aaa, 0, gs_leaf_thk
					else
						add aaa, 0, 0
					endif
				next i
				del 3 * leafNum - 1

			else
				if bMiddleStacking then
					leafWidth = panelWidth/2
				else
					leafWidth = panelWidth
				endif
				aaa = leafWidth

				addx leafWidth
				bMirroredOplines = 0

				if j = 1 then
					if gs_opening_leaves then
						if gs_full_edit & GLOB_CONTEXT <> 4 & GLOB_CONTEXT <> 24 & GLOB_CONTEXT <> 6 then
							unID=unID+1
							hotspot 0, B/2, 0, unID, gs_open_3D, 6
							unID=unID+1
							hotspot -10, B/2, 0, unID, gs_open_3D, 4+128
							unID=unID+1
							hotspot -leafWidth*cos(gs_open_3D), B/2, -leafWidth*sin(gs_open_3D),unID,gs_open_3D,5
							unID=unID+1
							hotspot 0, -B, 0, unID, gs_open_3D, 7
						endif
						htyp		= gs_handle_type_m
					else
						unID=unID+4
						htyp		= 0
					endif
					roty -gs_open_3D * gs_opening_leaves
				else
					if gs_opening_leaves2 then
						unID=unID+1
						if gs_full_edit & GLOB_CONTEXT <> 4 & GLOB_CONTEXT <> 24 & GLOB_CONTEXT <> 6 then
							hotspot 0, B/2, 0, unID, gs_open_3D_2, 6
							unID=unID+1
							hotspot -10, B/2, 0, unID, gs_open_3D_2, 4+128
							unID=unID+1
							hotspot -leafWidth*cos(gs_open_3D_2), B/2, -leafWidth*sin(gs_open_3D_2),unID,gs_open_3D_2,5
							unID=unID+1
							hotspot 0, B, 0, unID, gs_open_3D_2, 7
						endif
						htyp		= gs_handle_type_m
					else
						unID=unID+4
						htyp		= 0
					endif
					roty -gs_open_3D_2 * gs_opening_leaves2
				endif

				addx -leafWidth/2

				if ((j = 1 and gs_opening_leaves) or (j = 2 and gs_opening_leaves2)) then
					mulx -1
				endif
				gosub "Leaf_Panel"
				if ((j = 1 and gs_opening_leaves) or (j = 2 and gs_opening_leaves2)) then
					del 1
				endif
				del 2

				leafWidth = panelWidth
				aaa = leafWidth

				for i=1 to leafNum-1
					if i = leafNum-1 then
						htyp		= gs_handle_type_m
					else
						htyp		= 0
					endif

					addx panelWidth/2

					gosub "Leaf_Panel"

					del 1

					addx panelWidth
				next i
				del leafNum-1

				del 1
			endif

			addx opmax
			mulx -1
		next j
		del 4

		del 2
	endif

	! =============================================================================

	del 1	! addy thresholdModify
endif

! =============================================================================
! Draw Casement
! =============================================================================

if lod3D = 5 then	! Chinese
	sh_sect_fill_type	= gs_FillSdl
	sh_sect_fill_fg		= gs_penSdl_fg
	sh_sect_fill_bg		= gs_penSdl_bg
else
	sh_sect_fill_type	= gs_fillLeaf
	sh_sect_fill_fg		= gs_penLeaf_fg
	sh_sect_fill_bg		= gs_penLeaf_bg
endif

gs_sash_pen		= gs_leaf_pen

if not(bOpeningDirectionSL) then
	addz gs_frame_thk
	mulz -1
else
	addz gs_frame_wthk * (gs_frame_thkin - gs_frame_thk)
endif

! =============================================================================
! Transom Sashes
! =============================================================================

! Upper Left Sash -------------------------------------------------------------

if gs_sidelight_left & gs_door_transom & (gs_SidelightTransomRelation_m = SIDELIGHT_CROSSES_TRANSOM) then
	sh_unID		= 5600
	sashWidth	= sashWidthArray[1][1]
	sashHeight	= sashHeightArray[1][1]
	CasementID	= CasementIDArray[1][1]
	_matSashOut	= gs_transom_mat
	_matSashIn	= gs_transom_matin

	add sashPosXArray[1][1], sashPosYArray[1][1], gs_frame_thk
	gosub "CallCasement"
	del 1
endif

! Upper Middle Sash -----------------------------------------------------------

if gs_door_transom then
	sh_unID		= 2400
	sashWidth	= sashWidthArray[1][2]
	sashHeight	= sashHeightArray[1][2]
	CasementID	= CasementIDArray[1][2]
	_matSashOut	= gs_transom_mat
	_matSashIn	= gs_transom_matin

	add sashPosXArray[1][2], sashPosYArray[1][2], gs_frame_thk
	if bArchedTop then
		gosub "CallCasementArched"
	else
		gosub "CallCasement"
	endif
	del 1
endif

! Upper Right Sash ------------------------------------------------------------

if gs_sidelight_right & gs_door_transom & (gs_SidelightTransomRelation_m = SIDELIGHT_CROSSES_TRANSOM) then
	sh_unID		= 4000
	sashWidth	= sashWidthArray[1][3]
	sashHeight	= sashHeightArray[1][3]
	CasementID	= CasementIDArray[1][3]
	_matSashOut	= gs_transom_mat
	_matSashIn	= gs_transom_matin

	add sashPosXArray[1][3], sashPosYArray[1][3], gs_frame_thk
	gosub "CallCasement"
	del 1
endif

! =============================================================================
! Sidelight Sashes
! =============================================================================

! Middle Left Sash ------------------------------------------------------------

if gs_sidelight_left then
	sh_unID		= 5200
	sashWidth	= sashWidthArray[2][1]
	sashHeight	= sashHeightArray[2][1]
	CasementID	= CasementIDArray[2][1]
	_matSashOut	= gs_sidelight2_mat
	_matSashIn	= gs_sidelight2_matin

	add sashPosXArray[2][1], sashPosYArray[2][1], gs_frame_thk
	gosub "CallCasement"
	del 1
endif

! Middle Right Sash -----------------------------------------------------------

if gs_sidelight_right then
	sh_unID		= 3600
	sashWidth	= sashWidthArray[2][3]
	sashHeight	= sashHeightArray[2][3]
	CasementID	= CasementIDArray[2][3]
	_matSashOut	= gs_sidelight1_mat
	_matSashIn	= gs_sidelight1_matin

	add sashPosXArray[2][3], sashPosYArray[2][3], gs_frame_thk
	gosub "CallCasement"
	del 1
endif

! =============================================================================
! Sidelight Lower Sashes
! =============================================================================

! Lower Left Sash ------------------------------------------------------------

if gs_sidelight_left & gs_bSidelight_fr_hdiv_left then
	sh_unID		= 6000
	sashWidth	= sashWidthArray[3][1]
	sashHeight	= sashHeightArray[3][1]
	CasementID	= CasementIDArray[3][1]
	_matSashOut	= gs_sidelight2_mat
	_matSashIn	= gs_sidelight2_matin

	add sashPosXArray[3][1], sashPosYArray[3][1], gs_frame_thk
	gosub "CallCasement"
	del 1
endif

! Lower Right Sash ------------------------------------------------------------

if gs_sidelight_right & gs_bSidelight_fr_hdiv_right then
	sh_unID		= 4400
	sashWidth	= sashWidthArray[3][3]
	sashHeight	= sashHeightArray[3][3]
	CasementID	= CasementIDArray[3][3]
	_matSashOut	= gs_sidelight1_mat
	_matSashIn	= gs_sidelight1_matin

	add sashPosXArray[3][3], sashPosYArray[3][3], gs_frame_thk
	gosub "CallCasement"
	del 1
endif


! =============================================================================
end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end
! =============================================================================


"CallCasement":
! =============================================================================
! Casement Macro
! -----------------------------------------------------------------------------
! sashWidth:	Width of Sash
! sashHeight:	Height of Sash
! CasementID:	Sash ID
! sh_unID:		Hotspot ID
! =============================================================================

	call "Casement_rectangular" parameters A = sashWidth, B = sashHeight,
			CasementID 						= CasementID,
			lod3D							= lod3D,
			isWindow						= 0,
			bEdwardianSash					= 0,
			gs_rebate_width					= gs_sidelight_rebate_width,
			gs_rebate_depth					= gs_sidelight_rebate_depth,
			gs_sash_thk						= gs_sash_thk,
			gs_sash_width					= gs_sash_width,
			gs_sl_sash_width				= gs_sl_sash_width,
			gs_frame_thk					= gs_frame_thkin,
			iMullionStyle_02				= iMullionStyle_02,
			iMullionStyle_05				= iMullionStyle_05,
			iMullionStyle_06				= iMullionStyle_06,
			iMullionStyle_07				= iMullionStyle_07,
			iMullionStyle_09				= iMullionStyle_09,
			iMullionStyle_10				= iMullionStyle_10,
			iMullionStyle_11				= iMullionStyle_11,
			iMullionPosition				= iMullionPosition,
			sashFrameWidth					= sashFrameWidth,
			gs_horiz_div_height_02			= gs_horiz_div_height_02,
			gs_horiz_div_height_05			= gs_horiz_div_height_05,
			gs_horiz_div_height_06			= gs_horiz_div_height_06,
			gs_horiz_div_height_07			= gs_horiz_div_height_07,
			gs_horiz_div_height_09			= gs_horiz_div_height_09,
			gs_horiz_div_height_10			= gs_horiz_div_height_10,
			gs_horiz_div_height_11			= gs_horiz_div_height_11,
			gw								= gw,
			gth								= gth,
			gs_sidelight_div_width			= gs_sidelight_div_width,
			gs_sidelight_div_thk			= gs_sidelight_div_thk,
			gs_glass_thk					= gs_glass_thk,
			vgn_02							= vgn_02,
			hgn_02							= hgn_02,
			vgn_05							= vgn_05,
			hgn_05							= hgn_05,
			vgn_06							= vgn_06,
			hgn_06							= hgn_06,
			vgn_07							= vgn_07,
			hgn_07							= hgn_07,
			vgn_09							= vgn_09,
			hgn_09							= hgn_09,
			vgn_10							= vgn_10,
			hgn_10							= hgn_10,
			vgn_11							= vgn_11,
			hgn_11							= hgn_11,
			vgn2_02							= vgn2_02,
			hgn2_02							= hgn2_02,
			vgn2_05							= vgn2_05,
			hgn2_05							= hgn2_05,
			vgn2_06							= vgn2_06,
			hgn2_06							= hgn2_06,
			vgn2_07							= vgn2_07,
			hgn2_07							= hgn2_07,
			vgn2_09							= vgn2_09,
			hgn2_09							= hgn2_09,
			vgn2_10							= vgn2_10,
			hgn2_10							= hgn2_10,
			vgn2_11							= vgn2_11,
			hgn2_11							= hgn2_11,
			vergrid_02						= vergrid_02,
			horgrid_02						= horgrid_02,
			vergrid_05						= vergrid_05,
			horgrid_05						= horgrid_05,
			vergrid_06						= vergrid_06,
			horgrid_06						= horgrid_06,
			vergrid_07						= vergrid_07,
			horgrid_07						= horgrid_07,
			vergrid_09						= vergrid_09,
			horgrid_09						= horgrid_09,
			vergrid_10						= vergrid_10,
			horgrid_10						= horgrid_10,
			vergrid_11						= vergrid_11,
			horgrid_11						= horgrid_11,
			vergrid2_02						= vergrid2_02,
			horgrid2_02						= horgrid2_02,
			vergrid2_05						= vergrid2_05,
			horgrid2_05						= horgrid2_05,
			vergrid2_06						= vergrid2_06,
			horgrid2_06						= horgrid2_06,
			vergrid2_07						= vergrid2_07,
			horgrid2_07						= horgrid2_07,
			vergrid2_09						= vergrid2_09,
			horgrid2_09						= horgrid2_09,
			vergrid2_10						= vergrid2_10,
			horgrid2_10						= horgrid2_10,
			vergrid2_11						= vergrid2_11,
			horgrid2_11						= horgrid2_11,
			gs_glass_pen					= gs_glass_pen,
			gs_glass_pen_cont				= gs_glass_pen,
			ghe								= ghe,
			VentilationProfileHeight		= VentilationProfileHeight,
			isVentilationProfileInSash_01	= isVentilationProfileInSash_01,
			isVentilationProfileInSash_02	= isVentilationProfileInSash_02,
			isVentilationProfileInSash_03	= isVentilationProfileInSash_03,
			isVentilationProfileInSash_04	= isVentilationProfileInSash_04,
			isVentilationProfileInSash_05	= isVentilationProfileInSash_05,
			isVentilationProfileInSash_06	= isVentilationProfileInSash_06,
			isVentilationProfileInSash_07	= isVentilationProfileInSash_07,
			isVentilationProfileInSash_08	= isVentilationProfileInSash_08,
			isVentilationProfileInSash_09	= isVentilationProfileInSash_09,
			isVentilationProfileInSash_10	= isVentilationProfileInSash_10,
			isVentilationProfileInSash_11	= isVentilationProfileInSash_11,
			openingAngle_02					= openingAngle_02,
			openingAngle2_02				= openingAngle2_02,
			openingLength_02				= openingLength_02,
			openingLength2_02				= openingLength2_02,
			openingAngle_05					= openingAngle_05,
			openingAngle2_05				= openingAngle2_05,
			openingLength_05				= openingLength_05,
			openingLength2_05				= openingLength2_05,
			openingAngle_06					= openingAngle_06,
			openingAngle2_06				= openingAngle2_06,
			openingLength_06				= openingLength_06,
			openingLength2_06				= openingLength2_06,
			openingAngle_07					= openingAngle_07,
			openingAngle2_07				= openingAngle2_07,
			openingLength_07				= openingLength_07,
			openingLength2_07				= openingLength2_07,
			openingAngle_09					= openingAngle_09,
			openingAngle2_09				= openingAngle2_09,
			openingLength_09				= openingLength_09,
			openingLength2_09				= openingLength2_09,
			openingAngle_10					= openingAngle_10,
			openingAngle2_10				= openingAngle2_10,
			openingLength_10				= openingLength_10,
			openingLength2_10				= openingLength2_10,
			openingAngle_11					= openingAngle_11,
			openingAngle2_11				= openingAngle2_11,
			openingLength_11				= openingLength_11,
			openingLength2_11				= openingLength2_11,
			gs_optype_m_02					= gs_optype_m_02,
			gs_optype_m_05					= gs_optype_m_05,
			gs_optype_m_06					= gs_optype_m_06,
			gs_optype_m_07					= gs_optype_m_07,
			gs_optype_m_09					= gs_optype_m_09,
			gs_optype_m_10					= gs_optype_m_10,
			gs_optype_m_11					= gs_optype_m_11,
			gs_full_edit					= gs_full_edit,
			gs_frame_pen					= gs_frame_pen,
			gs_sash_pen						= gs_sash_pen,
			gs_frame_mat					= gs_frame_mat,
			gs_frame_mat2					= gs_frame_mat2,
			gs_sash_mat						= _matSashOut,
			gs_sash_mat2					= _matSashIn,
			gs_grill_mat					= gs_grill_mat,
			gs_grill_mat2					= gs_grill_mat2,
			gs_panel_mat					= gs_panel_mat,
			gs_panel_mat2					= gs_panel_mat2,
			gs_glass_mat					= gs_glass_mat,
			gs_ventProfile_mat				= gs_ventProfile_mat,
			gs_sash_pen_cont				= gs_leaf_pen_2D,
			gs_fillSash						= sh_sect_fill_type,
			gs_penSash_bg					= sh_sect_fill_bg,
			gs_penSash_fg					= sh_sect_fill_fg,
			gs_frame_pen_cont				= gs_frame_pen_cont,
			gs_fillFr						= fr_sect_fill_type,
			gs_penFr_bg						= fr_sect_fill_bg,
			gs_penFr_fg						= fr_sect_fill_fg,
			gs_ventProfile_fill				= gs_ventProfile_fill,
			gs_ventProfile_pen_fg			= gs_ventProfile_pen_fg,
			gs_ventProfile_pen_bg			= gs_ventProfile_pen_bg,
			bOpeningDirectionInside			= (WIDO_REVEAL_SIDE exor bOpeningDirectionSL),
			gs_SashText_typ_num				= gs_SashText_typ_num,
			gs_cust_panel_02				= gs_cust_panel_02,
			gs_cust_panel2_02				= gs_cust_panel2_02,
			gs_cust_panel_05				= gs_cust_panel_05,
			gs_cust_panel2_05				= gs_cust_panel2_05,
			gs_cust_panel_06				= gs_cust_panel_06,
			gs_cust_panel2_06				= gs_cust_panel2_06,
			gs_cust_panel_07				= gs_cust_panel_07,
			gs_cust_panel2_07				= gs_cust_panel2_07,
			gs_cust_panel_09				= gs_cust_panel_09,
			gs_cust_panel2_09				= gs_cust_panel2_09,
			gs_cust_panel_10				= gs_cust_panel_10,
			gs_cust_panel2_10				= gs_cust_panel2_10,
			gs_cust_panel_11				= gs_cust_panel_11,
			gs_cust_panel2_11				= gs_cust_panel2_11,
!!			gs_bMirr_cust_panel_05			= gs_bMirr_cust_panel_05,
!!			gs_bMirr_cust_panel2_05			= gs_bMirr_cust_panel2_05,
			sh_unID							= sh_unID,
			bOplines3d						= bWinOplines3d,
			opLineType3dIn					= winOpLineType3dIn,
			opLineType3dOut					= winOpLineType3dOut,
			gs_opline_style_m				= gs_win_opline_style_m,
			gs_opLinePen					= gs_winOpLinePen,
			gs_opening_dir_sl_m				= gs_opening_dir_sl_m,
			iLouverStyle					= iLouverStyle,
			gs_louver_thk					= gs_louver_thk,
			gs_louver_width					= gs_louver_width,
			gs_louver_opening_angle			= gs_louver_opening_angle,
			gs_ventSashLouver_mat			= gs_ventSashLouver_mat
return

"CallCasementArched":
	shoulderHeight = (gs_shoulder_h - (fce-fce_Sl_rebate))  - (ac_unit_height - gs_frame_width_upper + gs_sidelight_rebate_width - sashHeight)

	call "Casement_Arched" parameters A = sashWidth, B = sashHeight,
		lod3D					= lod3D,
		CasementID				= 2,
		gs_rebate_width			= gs_sidelight_rebate_width,
		gs_rebate_depth			= gs_sidelight_rebate_depth,
		gs_sash_thk				= gs_sash_thk,
		gs_sash_width			= gs_sash_width,
		gs_frame_thk			= gs_frame_thkin,
		h						= shoulderHeight,
		iMullionStyle_02		= iMullionStyle_02,
		iMullionPosition		= iMullionPosition,
		gw						= gw,
		gth						= gth,
		gs_glass_thk			= gs_glass_thk,
		vgn_02					= vgn_02,
		hgn_02					= hgn_02,
		openingAngle_02			= openingAngle_02,
		openingAngle2_02		= openingAngle2_02,
		gs_optype_m_02			= gs_optype_m_02,
		res						= res,
		gs_full_edit			= 1,
		gs_frame_pen			= gs_frame_pen,
		gs_sash_pen				= gs_sash_pen,
		gs_glass_pen			= gs_glass_pen,
		gs_glass_pen_cont		= gs_glass_pen,
		gs_frame_mat			= _matSashIn,
		gs_frame_mat2			= _matSashOut,
		gs_grill_mat			= gs_grill_mat,
		gs_grill_mat2			= gs_grill_mat2,
		gs_panel_mat			= gs_panel_mat,
		gs_panel_mat2			= gs_panel_mat2,
		gs_glass_mat			= gs_glass_mat,
		gs_sash_pen_cont		= gs_leaf_pen_2D,
		gs_fillSash				= sh_sect_fill_type,
		gs_penSash_bg			= sh_sect_fill_bg,
		gs_penSash_fg			= sh_sect_fill_fg,
		gs_frame_pen_cont		= gs_leaf_pen_2D,		! gs_frame_pen_cont,
		bOpeningDirectionInside	= (WIDO_REVEAL_SIDE exor bOpeningDirectionSL),
		gs_SashText_typ_num		= gs_SashText_typ_num,
		gs_cust_panel_02		= gs_cust_panel_02,
		sh_unID 				= sh_unID,
		bOplines3d				= bWinOplines3d,
		opLineType3dIn			= winOpLineType3dIn,
		opLineType3dOut			= winOpLineType3dOut,
		gs_opline_style_m		= gs_win_opline_style_m,
		gs_opLinePen			= gs_winOpLinePen
return


! =============================================================================
! Leaf Panel
! =============================================================================

"Leaf_Panel":

if iDoorPanelType = 3 then
	gs_hor_gnum = 2
	gs_ver_gnum = 4
endif

if iDoorPanelType = 4 then
	gs_hor_gnum = 3
	gs_ver_gnum = 6
endif


if bMirroredOplines then
	tempStyle = 2
	if gs_opline_style_m = 2 then tempStyle = 1
else
	tempStyle = 1
	if gs_opline_style_m = 2 then tempStyle = 2
endif

if iLeafShape = LEAF_SHAPE_HALFARCHED | iLeafShape = LEAF_SHAPE_ARCHED then
	if lod3D = 5 then
		gs_shoulder_h = (ac_wallhole_height - r2) + fcefw - thresholdModify
	else
		gs_shoulder_h = (ac_wallhole_height - r2) + fce_leaf_rebate - thresholdModify
	endif
endif

if bSecondPanel & not(gs_handle_uniform) then
	_gs_cust_handle		= gs_cust_handle2
	_gs_han_height		= gs_han_height2
	_gs_han_pos			= gs_han_pos2
else
	_gs_cust_handle		= gs_cust_handle
	_gs_han_height		= gs_han_height
	_gs_han_pos			= gs_han_pos
endif

if bSecondPanel & bAsymmetricLeafs then
	_iDoorPanelType		= iDoorPanelType2
	_gs_cust_panel		= gs_cust_panel2
	_gs_fw_side			= gs_fw_side2
	_gs_fw_side_right	= gs_fw_side_right2
	_gs_fw_side_left	= gs_fw_side_left2
	_gs_fw_lower		= gs_fw_lower2
	_gs_fw_upper		= gs_fw_upper2
	_gs_int_fw			= gs_int_fw2
	_gs_grill_pos_m		= gs_grill_pos2_m
	_gs_grid_w			= gs_grid_w2
	_gs_grid_thk		= gs_grid_thk2
else
	_iDoorPanelType		= iDoorPanelType
	_gs_cust_panel		= gs_cust_panel
	_gs_fw_side			= gs_fw_side
	_gs_fw_side_right	= gs_fw_side_right
	_gs_fw_side_left	= gs_fw_side_left
	_gs_fw_lower		= gs_fw_lower
	_gs_fw_upper		= gs_fw_upper
	_gs_int_fw			= gs_int_fw
	_gs_grill_pos_m		= gs_grill_pos_m
	_gs_grid_w			= gs_grid_w
	_gs_grid_thk		= gs_grid_thk

	! Force ignore bSecondPanel because the kickboard should be same in two panels if it is not asymmetric door
	bSecondPanel		= 0
endif


if _iDoorPanelType = 0 then return

if bEnableLeafRebateDepth3D then
	addz gs_rebate_depth_3D - gs_leaf_thk
endif

if bEnableLeafUnderCut then
	addy gs_leaf_undercut
	bbb = bbb - gs_leaf_undercut
endif

call "DoorLeafPanels" parameters all A		= aaa,
									 B		= bbb,
						bEnableKickBoard	= bEnableKickBoard,
						bSecondKickBoard	= bSecondKickBoard,
						bKickBoardOut		= bKickBoardOut,
						bKickBoardIn		= bKickBoardIn,
						kickBoardHeight		= kickBoardHeight,
						bKickBoardOut2		= bKickBoardOut2,
						bKickBoardIn2		= bKickBoardIn2,
						kickBoardHeight2	= kickBoardHeight2,
						matKickBoardOut		= matKickBoardOut,
						matKickBoardIn		= matKickBoardIn,
						gs_shoulder_h		= gs_shoulder_h,
						bSecondPanel		= bSecondPanel,
						iLeafShape			= iLeafShape,
						sliding_door		= sliding_door,
						iDoorPanelType		= _iDoorPanelType,
						gs_cust_panel		= _gs_cust_panel,
						gs_leaf_thk			= gs_leaf_thk,
						gs_fw_side			= _gs_fw_side,
						gs_fw_side_right	= _gs_fw_side_right,
						gs_fw_side_left		= _gs_fw_side_left,
						gs_fw_lower			= _gs_fw_lower,
						gs_fw_upper			= _gs_fw_upper,
						gs_int_fw			= _gs_int_fw,
						gs_grill_pos_m		= _gs_grill_pos_m,
						gs_grid_w			= _gs_grid_w,
						gs_grid_thk			= _gs_grid_thk,
						gs_glass_thk		= gs_glass_thk,
						gs_handle_type_m	= htyp,
						gs_cust_handle		= _gs_cust_handle,
						gs_han_height		= _gs_han_height - thresholdModify,
						gs_han_pos			= _gs_han_pos,
						bMirroredPanel		= bMirroredPanel,
						gs_hor_gnum			= hgnrl,
						gs_ver_gnum			= vgnrl,
						gs_hor_d			= hd,			
						gs_ver_d			= vd,			
						lod3D				= lod3D,
						res					= res,
						gs_SashText_typ_num	= gs_SashText_typ_num,
						gs_frame_pen		= gs_frame_pen,
						gs_frame_pen_cont	= gs_frame_pen_cont,
						gs_leaf_pen			= gs_leaf_pen,
						gs_leaf_pen_cont	= gs_leaf_pen_2D,
						gs_glass_pen		= gs_leaf_glass_pen,
						gs_glass_pen_cont	= gs_leaf_glass_pen,
						gs_fillLeaf			= sh_sect_fill_type,
						gs_penLeaf_fg		= sh_sect_fill_fg,
						gs_penLeaf_bg		= sh_sect_fill_bg,
						gs_fillAirtight		= gs_fillAirtight,
						gs_penAirtight_fg	= gs_penAirtight_fg,
						gs_penAirtight_bg	= gs_penAirtight_bg,
						bMiddleLine			= bMiddleLine,
						gs_leaf_mat			= gs_leaf_mat,
						gs_leaf_matin		= gs_leaf_matin,
						gs_leaf_mat2		= gs_leaf_mat2,
						gs_leaf_mat3		= gs_leaf_mat3,
						gs_lock_mat			= gs_lock_mat,
						gs_grill_mat		= gs_leaf_grill_mat,
						gs_grill_mat2		= gs_leaf_grill_mat2,
						gs_louver_mat		= gs_louver_mat,
						gs_louver_matin		= gs_louver_matin,
						gs_glass_mat		= gs_leaf_glass_mat,
						gs_kp_mat			= gs_kp_mat,
						gs_handle_mat		= gs_handle_mat,
						gs_handle_ac_mat	= gs_handle_ac_mat,
						gs_frame_thk		= gs_frame_thk,
						gs_pivotdoor		= (gs_leaf_optype_m = LEAF_1L_PIVOT | gs_leaf_optype_m = LEAF_1L_PIVOT_M),
						gs_pivotOffset		= gs_pivotOffset,
						bOplines3d			= bOplines3d,
						opLineType3dIn		= opLineType3dIn,
						opLineType3dOut		= opLineType3dOut,
						gs_opline_style_m	= tempStyle,
						gs_opLinePen		= gs_opLinePen

if bEnableLeafUnderCut then del 1
if bEnableLeafRebateDepth3D then del 1

return


! =============================================================================
! Rail for Sliding Folding Doors
! =============================================================================

"Rail_for_SlidingFolding":

material gs_rail_mat
pen gs_frame_pen
sect_fill fr_sect_fill_type, fr_sect_fill_bg, fr_sect_fill_fg, gs_frame_pen_cont

if gs_door_rail then
	rotx -90
	prism_ 5, rail_h_lo,
		-TotalLeafWidthin3D/2, 0, 15,
		-TotalLeafWidthin3D/2, -railWidth, 15,
		 TotalLeafWidthin3D/2, -railWidth, 15,
		 TotalLeafWidthin3D/2, 0, 15,
		-TotalLeafWidthin3D/2, 0, -1
	body -1
	del 1
endif

return


! =============================================================================
! Rail for Exterior Sliding Doors
! =============================================================================

"Rail_for_SlidingExternal":

material gs_rail_mat
pen gs_frame_pen
sect_fill fr_sect_fill_type, fr_sect_fill_bg, fr_sect_fill_fg, gs_frame_pen_cont

rail_w		= 2 * TotalLeafWidthin3D
rail_h_do	= 0
rail_h_up	= 0

if gs_leaf_optype_m = LEAF_2L_EXTERNAL_SLIDING then
	addx -TotalLeafWidthin3D
else
	addx -TotalLeafWidthin3D/2
endif

roty 90
addx gs_leaf_thk/2 + 0.005

if gs_door_rail & (gs_door_rail_ext_m = EXT_RAIL_BOTT | gs_door_rail_ext_m = EXT_RAIL_BOTT_TOP) then
	rail_h_do = 0.003
	prism_ 5,rail_w,
		 gs_leaf_thk/2+0.005,	0,			15,
		 gs_leaf_thk/2+0.005,	rail_h_do,	15,
		-gs_leaf_thk/2-0.005,	rail_h_do,	15,
		-gs_leaf_thk/2-0.005,	0,			15,
		 gs_leaf_thk/2+0.005,	0,			15
	body -1
endif

if gs_door_rail & (gs_door_rail_ext_m = EXT_RAIL_TOP | gs_door_rail_ext_m = EXT_RAIL_BOTT_TOP) then
	rail_h_up = 0.003
	addy bbb + 0.0005
	prism_ 9,rail_w,
		 gs_leaf_thk/2+0.005,	0,					15,
		 gs_leaf_thk/2+0.005,	-rail_h_up-0.007,	15,
		 gs_leaf_thk/2+0.002,	-rail_h_up-0.007,	15,
		 gs_leaf_thk/2+0.002,	-rail_h_up,			15,
		-gs_leaf_thk/2-0.002,	-rail_h_up,			15,
		-gs_leaf_thk/2-0.002,	-rail_h_up-0.007,	15,
		-gs_leaf_thk/2-0.005,	-rail_h_up-0.007,	15,
		-gs_leaf_thk/2-0.005,	0,					15,
		 gs_leaf_thk/2+0.005,	0,					15
	body -1
	del 1
endif

del 3
return


! =============================================================================
! Rail for Pocket Doors
! =============================================================================

"Rail_for_Pocket":

if not(gs_door_rail) then return

material gs_rail_mat
pen gs_frame_pen
sect_fill fr_sect_fill_type, fr_sect_fill_bg, fr_sect_fill_fg, gs_frame_pen_cont

if gs_leaf_optype_m = LEAF_2L_POCKET then
	addx -lengthRail/2
else
	addx -lengthRail/4
endif

addz posLeafy

roty 90

if gs_door_rail & (gs_door_rail_ext_m = EXT_RAIL_BOTT | gs_door_rail_ext_m = EXT_RAIL_BOTT_TOP) then	! Bottom Rail
	prism_ 4, lengthRail,
		-widthWallCut,	0,			15,
		-widthWallCut,	posHole,	15,
		0,				posHole,	15,
		0,				0,			15
	body -1
endif

if gs_door_rail & (gs_door_rail_ext_m = EXT_RAIL_TOP | gs_door_rail_ext_m = EXT_RAIL_BOTT_TOP) then	! Upper Rail
	addy heightRail
	prism_ 8, lengthRail,
		-widthWallCut,				0,				15,
		-widthWallCut,				-posHole * 2,	15,
		-widthWallCut + posHole/2,	-posHole * 2,	15,
		-widthWallCut + posHole/2,	-posHole,		15,
		-posHole/2,					-posHole,		15,
		-posHole/2,					-posHole * 2,	15,
		0,							-posHole * 2,	15,
		0,							0,				15
	body -1
	del 1
endif

del 3

return


]]>
</Script_3D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_2D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[

! =============================================================================
! Draw Door frame and leaf
! =============================================================================

gs_fillFr	= gs_bFills * gs_fillFr
gs_fillLeaf	= gs_bFills * gs_fillLeaf

lod2D	= DET2D_FS_OFF
bDetailedSlidingLeafSymbol	= 0
iSymbolGlassType			= SYMBGLASS_SIMPLEGLASS
_bOpeningSymbDisplay		= 0
bShowRebateOnFixGlass		= 0

if iLoD2D = SYMBD_S_1LINE then						lod2D	= DET2D_FS_SIMPLE			! Simple --> INT 200
if iLoD2D = SYMBD_S_1LINECL then					lod2D	= DET2D_FS_SIMPLE			! Simple --> NLD 200
if iLoD2D = SYMBD_M_1LINELEAF_2LINE then			lod2D	= DET2D_FS_MIDDLE			! Middle --> INT 100
if iLoD2D = SYMBD_M_2LINELEAFCL_GLASS then			lod2D	= DET2D_FS_MIDDLE			! Middle --> NLD 100
if iLoD2D = SYMBD_D_2LINELEAFOP_GLASS then			lod2D	= DET2D_FS_DETAILED			! Detailed --> INT 50
if iLoD2D = SYMBD_D_1LINELEAF_GLASS then			lod2D	= DET2D_FS_DETAILED			! Detailed --> SWE 50
if iLoD2D = SYMBD_D_2LINELEAFCL_REBATEONGLASS then	lod2D	= DET2D_FS_DETAILED			! Detailed --> NLD 50
if iLoD2D = SYMBD_D_2LEAFOPGLASS_GLASS then			lod2D	= DET2D_FS_DETAILED			! Detailed --> INT 50 Storefronts
if iLoD2D = SYMBD_S_2LINE then						lod2D	= DET2D_FS_SIMPLE_CHI		! Chinese Simple
if iLoD2D = SYMBD_D_2LINELEAFOP_2LINE then			lod2D 	= DET2D_FS_DETAILED_CHI		! Chinese Detailed

if	iLoD2D = SYMBD_S_1LINECL |\							! NLD 200
	iLoD2D = SYMBD_M_2LINELEAFCL_GLASS |\				! NLD 100
	iLoD2D = SYMBD_D_2LINELEAFCL_REBATEONGLASS	then	! NLD 50
	_bOpeningSymbDisplay			= 1
endif
if	iLoD2D = SYMBD_M_2LINELEAFCL_GLASS |\				! NLD 100
	iLoD2D = SYMBD_D_2LINELEAFOP_GLASS |\				! INT 50 
	iLoD2D = SYMBD_D_2LINELEAFCL_REBATEONGLASS |\		! NLD 50
	iLoD2D = SYMBD_D_2LINELEAFOP_2LINE	then			! CHI 50 
	bDetailedSlidingLeafSymbol	= 1
endif
if iLoD2D = SYMBD_D_2LEAFOPGLASS_GLASS 		then		! Detailed --> INT 50 Storefronts
	iSymbolGlassType	= SYMBGLASS_DOUBLEGLASS
endif
if	iLoD2D = SYMBD_D_2LINELEAFCL_REBATEONGLASS	then	! NLD 50
	bShowRebateOnFixGlass		= 1
endif


call "OpeningOptions" parameters	bWindow				= 1,
									bDoorWithSidelightSupport = 1,
									bOverride_MVO_win_2D= bOverride_MVO_win_2D,
									or_winOpLinePen		= or_winOpLinePen,
									or_iWinSwingType	= or_iWinSwingType,
									or_winSwingLineType	= or_winSwingLineType,
						returned_parameters dummy,
											gs_winOpLinePen,
											gs_iWinSwingType,
											dummy,
											gs_winSwingLineType,
											dummy




pen gs_pen_2D
bFeedBack = (GLOB_CONTEXT > 20 & GLOB_CONTEXT < 40)
if bFeedBack then gs_detlevel_2D_m = 1

if iTypeDemolitionFill = RENOVATION_FILL_DEMOLISHED then		! Demolition
	gs_panelLineType = gs_Demolition_linetype
else
	gs_panelLineType = 1
endif

bShowHandleOnSymbol		= bShowHandleOnSymbol & bEnableShowHandle
bShowGlassPanelOnSymbol	= bShowGlassPanelOnSymbol & bEnableShowGlassPanel
bShowChiSpringSymbol	= bShowChiSpringSymbol & bEnableShowChiSpringSymbol
bShowAirtightPanel		= bShowAirtightPanel & bEnableShowAirtightPanel
bSlidingOpLine2D		= bEnableSlidingOpLine2D & bSlidingOpLine2D

if gs_frame_style_m = FRAME_STYLE_WRAPPED_EXTRUSION then
	if lod2D = DET2D_FS_SIMPLE then
		add2 0, -gs_frame_oversize_thk * 2 * (WIDO_REVEAL_SIDE)
	else
		if WIDO_REVEAL_SIDE then
			add2 0, -gs_frame_oversize_thk
		else
			add2 0, gs_frame_oversize_thk
		endif
	endif
endif


! =============================================================================
! Draw Door Frame
! =============================================================================

if gs_frame_pen_cont > 0 then pen gs_frame_pen_cont

if gs_frame_width > EPS & not(gs_slidingext) then

	call "DoorFrame" parameters all	A	= ac_unit_width,
									B	= ac_unit_height,
		gs_frame_style_m				= gs_frame_style_m,
		gs_rebate_width					= gs_rebate_width_Sliding,
		gs_frame_ovhg_left_out			= gs_frame_ovhg_left_out,
		gs_frame_ovhg_left_in			= gs_frame_ovhg_left_in,
		gs_frame_ovhg_right_out			= gs_frame_ovhg_right_out,
		gs_frame_ovhg_right_in			= gs_frame_ovhg_right_in,
		gs_frame_left_endline			= not(gs_stack_left & (gs_left_oversize < EPS)),
		gs_frame_right_endline			= not(gs_stack_right & (gs_right_oversize < EPS)),
		iLoD2D							= iLoD2D,
		gs_SashText_typ_num				= gs_SashText_typ_num,
		gs_frame_width_orig				= gs_frame_width_orig,
		gs_frw1							= gs_frame_width_left,
		gs_frw2							= gs_frame_width_right,
		gs_frwt							= gs_frame_width_upper,
		gs_frwm							= gs_frame_width,
		gs_frame_thk					= gs_frame_thk,
		gs_frame_thkin					= gs_frame_thkin,
		bShowAddHotspots				= bShowAddHotspots,
		bShowUnitHotspots				= bShowUnitHotspots,
		bShowEgressHotspots				= bShowEgressHotspots,
		bShowLeafHotspots				= bShowLeafHotspots,
		gs_sliding_fixpanel_width_left	= gs_sliding_fixpanel_width_left,
		gs_sliding_fixpanel_width_right	= gs_sliding_fixpanel_width_right,
		gs_leaf_optype_m				= gs_leaf_optype_m,
		gs_optype_m_05					= gs_optype_m_05,
		gs_optype_m_09					= gs_optype_m_09,
		gs_unit_extra_left				= gs_unit_extra_left,
		gs_unit_extra_right				= gs_unit_extra_right

endif


! =============================================================================
! Draw Sidelight Panels
! =============================================================================

sh_UnID = 5200

call "DoorLeafSymbol" parameters all	A = ac_unit_width,
										B = ac_unit_height,
			gs_tolerance_left			= gs_tolerance_left,
			gs_tolerance_right			= gs_tolerance_right,
			gs_frame_style_m			= gs_frame_style_m,
			gs_frame_ovhg_left_out		= gs_frame_ovhg_left_out,
			gs_frame_ovhg_right_out		= gs_frame_ovhg_right_out,
			gs_rebate_width				= gs_rebate_width,
			gs_sidelight_rebate_width	= gs_sidelight_rebate_width,
			gs_sidelight_rebate_depth	= gs_sidelight_rebate_depth,
			bParapetLeft				= gs_sidelight_left  & gs_sidelight_parapet_hgt_left > EPS,
			bParapetRight				= gs_sidelight_right & gs_sidelight_parapet_hgt_right > EPS,
			gs_frw1						= gs_frame_width_left,
			gs_frw2						= gs_frame_width_right,
			gs_frwt						= gs_frame_width_upper,
			gs_frame_width_left_2		= gs_frame_width_left_2,
			gs_frame_width_right_2		= gs_frame_width_right_2,
			gs_sl_thk					= gs_sash_thk,
			gs_sl_fw					= gs_sl_sash_width,
			sashFrameWidth				= sashFrameWidth,
			iLoD2D						= iLoD2D,
			bOpeningDirectionSL			= bOpeningDirectionSL,
			lw							= ac_leaf_width,
			gs_sidelight_m				= gs_sidelight_width_left + gs_sidelight_width_right,
			gs_sl_w1					= gs_sidelight_width_left,
			gs_sl_w2					= gs_sidelight_width_right,
			gs_optype_m_09				= gs_optype_m_09,
			gs_optype_m_05				= gs_optype_m_05,
			gs_winOpLinePen				= gs_winOpLinePen,
			gs_winSwingLineType			= gs_winSwingLineType,
			gs_iWinSwingType			= gs_iWinSwingType,
			sh_UnID						= sh_UnID



! =============================================================================
! Draw Leaf Panels
! =============================================================================

unID_Opening = 1000

LeftFrameWidth		= gs_frame_width_left
if gs_sidelight_left then LeftFrameWidth = gs_frame_width_left_2
RightFrameWidth		= gs_frame_width_right
if gs_sidelight_right then RightFrameWidth = gs_frame_width_right_2

frameDiff		= 0
toleranceDiff	= 0
if lod2D = DET2D_FS_SIMPLE | lod2D = DET2D_FS_SIMPLE_CHI then
	frameDiff		= (RightFrameWidth - LeftFrameWidth) / 2
	toleranceDiff	= ((gs_tolerance_right * not(gs_sidelight_right)) - (gs_tolerance_left * not(gs_sidelight_left))) / 2
endif

if gs_pocket then
	TotalLeafWidthin2D = ac_leaf_width
else
	TotalLeafWidthin2D = ac_unit_width - gs_sidelight_width_right * gs_sidelight_right - gs_sidelight_width_left * gs_sidelight_left - \
					gs_frame_width_right * not(gs_sidelight_right) - gs_frame_width_left * not(gs_sidelight_left)
endif

if (lod2D <> DET2D_FS_SIMPLE & lod2D <> DET2D_FS_MIDDLE & lod2D <> DET2D_FS_SIMPLE_CHI & lod2D <> DET2D_FS_DETAILED_CHI) then
	TotalLeafWidthin2D = TotalLeafWidthin2D + 2 * gs_rebate_width
endif
if lod2D = DET2D_FS_SIMPLE | lod2D = DET2D_FS_SIMPLE_CHI | gs_slidingext then
	if gs_pocket then
		TotalLeafWidthin2D = max(TotalLeafWidthin2D, ac_wallhole_width)
	else
		TotalLeafWidthin2D = TotalLeafWidthin2D + LeftFrameWidth + RightFrameWidth + gs_tolerance_left * not(gs_sidelight_left) + gs_tolerance_right * not(gs_sidelight_right)
	endif
endif
if lod2D = DET2D_FS_SIMPLE_CHI then
	TotalLeafWidthin2D = TotalLeafWidthin2D - gs_frame_width_right_2 * gs_sidelight_right - gs_frame_width_left_2 * gs_sidelight_left
endif


if gs_pocket then
	if gs_leaf_optype_m = LEAF_2L_POCKET then
		if gs_pocket_door_frame then
			a_x = -TotalLeafWidthin2D/2 + (gs_frame_width_left - gs_frame_width_right)/2
		else
			a_x = -TotalLeafWidthin2D/2 - (gs_tolerance_left - gs_tolerance_right)/2
		endif
	else
		if gs_pocket_door_frame then
			a_x = -ac_unit_width/2 + (gs_frame_width_left)
		else
			a_x = -ac_unit_width/2 - (gs_tolerance_left)
		endif
	endif
else
	a_x = -ac_unit_width/2 + gs_sidelight_width_left * gs_sidelight_left + gs_frame_width_left * not(gs_sidelight_left)
endif

if (lod2D <> DET2D_FS_SIMPLE & lod2D <> DET2D_FS_MIDDLE & lod2D <> DET2D_FS_SIMPLE_CHI & lod2D <> DET2D_FS_DETAILED_CHI) then
	a_x = a_x - gs_rebate_width
endif
if lod2D = DET2D_FS_SIMPLE | lod2D = DET2D_FS_SIMPLE_CHI | gs_slidingext then
	if gs_pocket then
		if gs_leaf_optype_m <> LEAF_2L_POCKET then
			a_x = a_x - gs_pocket_door_frame * (gs_frame_width_left + gs_tolerance_left)
		endif
	else
		a_x = a_x - LeftFrameWidth - gs_tolerance_left * not(gs_sidelight_left) + gs_frame_width_left_2 * gs_sidelight_left * (lod2D = DET2D_FS_SIMPLE_CHI)
	endif
endif

if (lod2D = DET2D_FS_SIMPLE_CHI | lod2D = DET2D_FS_DETAILED_CHI) & not(gs_sliding) & not(gs_pocket) then
	_yFrameMod = -gs_frame_thk/2
else
	_yFrameMod = 0
endif
add2 0, _yFrameMod


bSecondPanel = 0

lod2D_temp	= lod2D

if iDoorPanelType <> 0 | bAsymmetricLeafs then

	reverse2dAngleMask = 512
	reverse2dAngle2Mask = 0

	unID_Garage	 = 2000


	bShowHandleonActualLeaf = 0
	if gs_handle_type_m <> 0 then bShowHandleonActualLeaf = 1


	bHideInnerContour	= 0


	! =============================================================================
	! 1 Leaf Panels
	! =============================================================================

	if	gs_leaf_optype_m = LEAF_1L_SIDE_HUNG |\
		gs_leaf_optype_m = LEAF_1L_SIDE_HUNG_M |\
		gs_leaf_optype_m = LEAF_1L_DOUBLE_ACTING |\
		gs_leaf_optype_m = LEAF_1L_DOUBLE_ACTING_M then

		aaa = TotalLeafWidthin2D

		if gs_iSwingType = LINE_SHAPE_SWING_SIMPLE_LINE | gs_iSwingType = LINE_SHAPE_SWING_LEAF_LINE then
			add2 a_x + TotalLeafWidthin2D/2, 0
			mul2 -1, 1
			add2 0, (-gs_frame_thk/2) * (lod2D = DET2D_FS_MIDDLE | lod2D = DET2D_FS_DETAILED)
			gosub "LineShapeSimpleLine"
			del 3
		endif

		for ii = 1 to 1 + (gs_leaf_optype_m = LEAF_1L_DOUBLE_ACTING | gs_leaf_optype_m = LEAF_1L_DOUBLE_ACTING_M)
			lod2D	= lod2D_temp

			add2 a_x + aaa/2, 0
			mul2 -1, 1

			if gs_iSwingType <> LINE_SHAPE_SWING_SIMPLE_LINE & gs_iSwingType <> LINE_SHAPE_SWING_LEAF_LINE then
				! -------------- HOTSPOT EDITING
				add2 -aaa/2, 0
				hotspot2 0, 					0, 						unID_Opening,		gs_open_2D,	6 + reverse2dAngleMask * (ii=1) + reverse2dAngle2Mask * (ii<>1)		! 1000
				hotspot2 aaa, 					0,						unID_Opening + 1,	gs_open_2D,	4+128			! 1001
				hotspot2 aaa*cos(gs_open_2D),	aaa*sin(gs_open_2D),	unID_Opening + 2,	gs_open_2D,	5	! 1002
				unID_Opening = unID_Opening + 10
				del 1


				! Swing Line ------------------------------
				pen gs_opLinePen
				drawindex 30
				line_type gs_swingLineType

				if gs_open_2D > 0 then
					if gs_iSwingType = LINE_SHAPE_SWING_CURVED then
						arc2 -aaa/2, 0, aaa, 0, gs_open_2D
!					else
!						line2	aaa/2 , 0,
!								-aaa/2 + aaa * cos(gs_open_2D) + gs_leaf_thk * sin(gs_open_2D) * (lod2D = DET2D_FS_DETAILED & iLoD2D <> SYMBD_D_2LINELEAFCL_REBATEONGLASS),
!								aaa * sin(gs_open_2D) - gs_leaf_thk * cos(gs_open_2D) * (lod2D = DET2D_FS_DETAILED & iLoD2D <> SYMBD_D_2LINELEAFCL_REBATEONGLASS)
					endif
				endif
			endif

			! -------------- Door Leaf
			if ii = 1 then
				line_type gs_panelLineType
			else
				if lod2D = DET2D_FS_SIMPLE_CHI | lod2D = DET2D_FS_DETAILED_CHI | (bShowChiSpringSymbol & lod2D = DET2D_FS_DETAILED) then
					line_type gs_swingLineType
				else
					line_type gs_swing_pen_line
				endif
				if lod2D = DET2D_FS_DETAILED_CHI | (bShowChiSpringSymbol & lod2D = DET2D_FS_DETAILED) then lod2D = DET2D_FS_SIMPLE_CHI
			endif

			add2 -aaa/2, 0
			rot2 gs_open_2D
			add2 aaa/2, 0

			if _bOpeningSymbDisplay then
				if gs_iSwingType <> LINE_SHAPE_SWING_SIMPLE_LINE & gs_iSwingType <> LINE_SHAPE_SWING_LEAF_LINE then
					pen gs_opLinePen
!					line2	-aaa/2, 0,
!							aaa/2, 0
				endif

				del 2
				add2 aaa/2, 0

				if ii = 2 then
					lod2D = DET2D_FS_MIDDLE
				else
					if lod2D_temp = DET2D_FS_MIDDLE then lod2D = DET2D_FS_DETAILED
				endif
				gosub "Leaf_Panel"

				del 4
			else
				if gs_iSwingType <> LINE_SHAPE_SWING_SIMPLE_LINE & gs_iSwingType <> LINE_SHAPE_SWING_LEAF_LINE then
					if ii = 2 & bHide2DDoubAct2ndLeaf then
						lod2D = DET2D_FS_MIDDLE
					endif
					gosub "Leaf_Panel"
					del 5
				endif
			endif

			mul2 1,-1
		next ii
		del 1 + (gs_leaf_optype_m = LEAF_1L_DOUBLE_ACTING | gs_leaf_optype_m = LEAF_1L_DOUBLE_ACTING_M)
	endif


	! =============================================================================
	! 2 Leaf Panels
	! =============================================================================

	if	gs_leaf_optype_m = LEAF_2L_SIDE_HUNG |\
		gs_leaf_optype_m = LEAF_2L_DOUBLE_ACTING |\
		gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS |\
		gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS_M then

		if gs_iSwingType = LINE_SHAPE_SWING_SIMPLE_LINE then
			add2 a_x + TotalLeafWidthin2D/2, 0
			mul2 -1, 1
			add2 0, (-gs_frame_thk/2) * (lod2D = DET2D_FS_MIDDLE | lod2D = DET2D_FS_DETAILED)
			gosub "LineShapeSimpleLine"
			del 3
		endif

		if gs_iSwingType = LINE_SHAPE_SWING_LEAF_LINE then
			add2 a_x + lal/2, 0
			mul2 -1, 1
			add2 0, (-gs_frame_thk/2) * (lod2D = DET2D_FS_MIDDLE | lod2D = DET2D_FS_DETAILED)
			if (not (bAsymmetricLeafs) & iDoorPanelType <> 0) | (bAsymmetricLeafs & iDoorPanelType2 <> 0) then
				gosub "LineShapeSimpleLine"
			endif

			add2 -TotalLeafWidthin2D/2, 0
			unID_Opening = unID_Opening + 2
			if iDoorPanelType <> 0 then
				gosub "LineShapeSimpleLine"
			endif

			del 4
		endif

		if lod2D = DET2D_FS_SIMPLE | lod2D = DET2D_FS_MIDDLE | lod2D = DET2D_FS_SIMPLE_CHI | lod2D = DET2D_FS_DETAILED_CHI then
			lar = lar - gs_rebate_width
			lal = lal - gs_rebate_width
		endif
		if lod2D = DET2D_FS_SIMPLE then
			lar = lar + RightFrameWidth + gs_tolerance_right * not(gs_sidelight_right) - frameDiff - toleranceDiff
			lal = lal + LeftFrameWidth + gs_tolerance_left * not(gs_sidelight_left) + frameDiff + toleranceDiff
		endif
		if lod2D = DET2D_FS_SIMPLE_CHI  then
			lar = lar + (RightFrameWidth + gs_tolerance_right) * not(gs_sidelight_right)
			lal = lal + (LeftFrameWidth + gs_tolerance_left) * not(gs_sidelight_left)
			if not(gs_sidelight_right) * gs_sidelight_left then
				lar = lar - (RightFrameWidth + gs_tolerance_right)/2
				lal = lal + (RightFrameWidth + gs_tolerance_right)/2
			endif
		endif

		add2 a_x+TotalLeafWidthin2D-lar, 0

		for i=1 to 2
			bSecondPanel = (bAsymmetricLeafs & i = 2)

			if (not (bSecondPanel) & iDoorPanelType <> 0) | (bSecondPanel & iDoorPanelType2 <> 0) then
				if i=1 then
					aaa = lar
				else
					aaa = lal
					if gs_leaf_optype_m <> LEAF_2L_DOUBLE_EGRESS then bShowHandleonActualLeaf = 0
				endif
	
				for ii = 1 to 1 + (gs_leaf_optype_m = LEAF_2L_DOUBLE_ACTING | (bShowChiSpringSymbol & gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS))
					lod2D	= lod2D_temp
	
					add2 aaa/2, 0
					mul2 -1, 1
	
					if gs_iSwingType <> LINE_SHAPE_SWING_SIMPLE_LINE & gs_iSwingType <> LINE_SHAPE_SWING_LEAF_LINE then
						! -------------- HOTSPOT EDITING
						add2 -aaa/2, 0
						if i=1 then
							reverseAngle = reverse2dAngleMask * (ii=1) + reverse2dAngle2Mask * (ii<>1)
							hotspot2 0, 					0, 						unID_Opening,		gs_open_2D,	6 + reverseAngle		! 1000
							hotspot2 aaa, 					0,						unID_Opening + 1,	gs_open_2D,	4+128			! 1001
							hotspot2 aaa*cos(gs_open_2D),	aaa*sin(gs_open_2D),	unID_Opening + 2,	gs_open_2D,	5	! 1002
							unID_Opening = unID_Opening + 10
						else
							reverseAngle = reverse2dAngle2Mask * (ii=1) + reverse2dAngleMask * (ii<>1)
							if gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS then reverseAngle = reverse2dAngleMask * (ii=1) + reverse2dAngle2Mask * (ii<>1)
							hotspot2 0, 					0, 						unID_Opening,		gs_open_2D_2,	6 + reverseAngle		! 1010
							hotspot2 aaa, 					0,						unID_Opening + 1,	gs_open_2D_2,	4+128			! 1011
							hotspot2 aaa*cos(gs_open_2D_2),	aaa*sin(gs_open_2D_2),	unID_Opening + 2,	gs_open_2D_2,	5	! 1012
							unID_Opening = unID_Opening + 10
						endif
						del 1
		
						! Swing Line ------------------------------
						pen gs_opLinePen
						drawindex 30
						line_type gs_swingLineType
	
						if	(i = 1 & abs(gs_open_2D) > EPS & abs(gs_open_2D - 360) > EPS) |\
							(i = 2 & abs(gs_open_2D_2) > EPS & abs(gs_open_2D_2 - 360) > EPS) then

							if gs_iSwingType = LINE_SHAPE_SWING_CURVED  then
								if i = 1 then
									arc2 -aaa/2, 0, aaa, 0, gs_open_2D
								else
									arc2 -aaa/2, 0, aaa, 0, gs_open_2D_2
								endif
								if gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS then
!									if i = 1 then
!										line2 aaa/2, -gs_leaf_thk, aaa/2, 0
!									else
!										line2 -aaa/2, -gs_leaf_thk, -aaa/2, 0
!									endif
								endif
							else
!								if i = 1 then
!									line2 aaa/2 , -gs_leaf_thk/2 * (gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS | gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS_M),
!										-aaa/2 + aaa * cos(gs_open_2D) + gs_leaf_thk * sin(gs_open_2D) * (lod2D = DET2D_FS_DETAILED & iLoD2D <> SYMBD_D_2LINELEAFCL_REBATEONGLASS),
!										 aaa * sin(gs_open_2D) - gs_leaf_thk * cos(gs_open_2D) * (lod2D = DET2D_FS_DETAILED & iLoD2D <> SYMBD_D_2LINELEAFCL_REBATEONGLASS)
!								else
!									line2 aaa/2 , -gs_leaf_thk/2 * (gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS | gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS_M),
!										-aaa/2 + aaa * cos(gs_open_2D_2) + gs_leaf_thk * sin(gs_open_2D_2) * (lod2D = DET2D_FS_DETAILED & iLoD2D <> SYMBD_D_2LINELEAFCL_REBATEONGLASS),
!										 aaa * sin(gs_open_2D_2) - gs_leaf_thk * cos(gs_open_2D_2) * (lod2D = DET2D_FS_DETAILED & iLoD2D <> SYMBD_D_2LINELEAFCL_REBATEONGLASS)
!								endif
							endif
						endif
					endif
	
					! -------------- Door Leaf
					if ii = 1 then
						line_type gs_panelLineType
					else
						if lod2D = DET2D_FS_SIMPLE_CHI | lod2D = DET2D_FS_DETAILED_CHI | (bShowChiSpringSymbol & lod2D = DET2D_FS_DETAILED) then
							line_type gs_swingLineType
						else
							line_type gs_swing_pen_line
						endif
						if lod2D = DET2D_FS_DETAILED_CHI | (bShowChiSpringSymbol & lod2D = DET2D_FS_DETAILED) then lod2D = DET2D_FS_SIMPLE_CHI
					endif
	
					add2 -aaa/2, 0
					if i = 1 then
						rot2 gs_open_2D
					else
						rot2 gs_open_2D_2
					endif
					add2 aaa/2, 0
	
					if _bOpeningSymbDisplay then
						if gs_iSwingType <> LINE_SHAPE_SWING_SIMPLE_LINE & gs_iSwingType <> LINE_SHAPE_SWING_LEAF_LINE then
							pen gs_opLinePen
!							line2	-aaa/2, 0,
!									aaa/2, 0
						endif
	
						del 2
						add2 aaa/2, 0
	
						if ii = 2 then
							lod2D = DET2D_FS_MIDDLE
						else
							if lod2D_temp = DET2D_FS_MIDDLE then lod2D = DET2D_FS_DETAILED
						endif
						gosub "Leaf_Panel"
	
						del 1
					else
						if gs_iSwingType <> LINE_SHAPE_SWING_SIMPLE_LINE & gs_iSwingType <> LINE_SHAPE_SWING_LEAF_LINE then
							if ii = 2 & bHide2DDoubAct2ndLeaf then
								lod2D = DET2D_FS_MIDDLE
							endif
							gosub "Leaf_Panel"
							del 2
						endif
					endif
	
					del 3
	
					mul2 1,-1
				next ii
				del 1 + (gs_leaf_optype_m = LEAF_2L_DOUBLE_ACTING | (bShowChiSpringSymbol & gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS))

			endif
	
			mul2 -1, 1

			if gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS | gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS_M then
				mul2 1, -1
				add2 0, gs_leaf_thk
			endif
		next i

		if gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS | gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS_M then del 4
		del 2 + 1
	endif


	! =============================================================================
	! Pivot Door Leafs
	! =============================================================================

	if	gs_leaf_optype_m = LEAF_1L_PIVOT |\
		gs_leaf_optype_m = LEAF_1L_PIVOT_M then

		if bSimpleLeafin50 & lod2D = DET2D_FS_DETAILED then
			lod2D = DET2D_FS_MIDDLE		!simple leaf in detailed symbol
		endif

		if gs_iSwingType = LINE_SHAPE_SWING_SIMPLE_LINE | gs_iSwingType = LINE_SHAPE_SWING_LEAF_LINE then
			add2 a_x + TotalLeafWidthin2D/2, 0
			mul2 -1, 1
			add2 0, (-gs_frame_thk/2) * (lod2D = DET2D_FS_MIDDLE | lod2D = DET2D_FS_DETAILED)
			gosub "LineShapeSimpleLine"
			del 3
		endif

		bHideInnerContour	= 1
		if lod2D = DET2D_FS_DETAILED_CHI & (bShowGlassPanelOnSymbol | bShowAirtightPanel) then bHideInnerContour	= 0

		aaa = TotalLeafWidthin2D

		add2 a_x+aaa/2, -gs_leaf_thk/2
		mul2 -1, 1

		if gs_iSwingType <> LINE_SHAPE_SWING_SIMPLE_LINE & gs_iSwingType <> LINE_SHAPE_SWING_LEAF_LINE then
			! -------------- HOTSPOT EDITING
			add2 -aaa/2, 0
			hotspot2 0, 0,				unID_Opening, gs_pivotOffset, 1+128 : unID_Opening = unID_Opening + 1
			hotspot2 gs_pivotOffset, 0, unID_Opening, gs_pivotOffset, 2 : unID_Opening = unID_Opening + 1
			hotspot2 -1, 0,				unID_Opening, gs_pivotOffset, 3 : unID_Opening = unID_Opening + 1
			del 1
		endif

		aaa_temp = aaa

		add2 -aaa/2 + gs_pivotOffset, 0

		for i = 1 to 2

			if i = 1 then
				aaa = aaa_temp - gs_pivotOffset
			else
				aaa = gs_pivotOffset
				bShowHandleonActualLeaf = 0
			endif

			if gs_iSwingType <> LINE_SHAPE_SWING_SIMPLE_LINE & gs_iSwingType <> LINE_SHAPE_SWING_LEAF_LINE then
				! Swing Line ------------------------------
				pen gs_opLinePen
				drawindex 30
				line_type gs_swingLineType
	
				if gs_open_2D > 0 then
					if gs_iSwingType = LINE_SHAPE_SWING_CURVED then
						arc2 0, 0, aaa, 0, gs_open_2D
!					else
!						line2 aaa, 0,
!						aaa * cos(gs_open_2D) + gs_leaf_thk/2 * sin(gs_open_2D) * (lod2D = DET2D_FS_DETAILED & iLoD2D <> SYMBD_D_2LINELEAFCL_REBATEONGLASS),
!						aaa * sin(gs_open_2D) - gs_leaf_thk/2 * cos(gs_open_2D) * (lod2D = DET2D_FS_DETAILED & iLoD2D <> SYMBD_D_2LINELEAFCL_REBATEONGLASS)
					endif
				endif

				! -------------- HOTSPOT EDITING
				hotspot2 0, 					0,						unID_Opening,		gs_open_2D, 6 + reverse2dAngleMask		! 1000
				hotspot2 aaa, 					0,						unID_Opening + 1,	gs_open_2D, 4+128			! 1001
				hotspot2 aaa*cos(gs_open_2D),	aaa*sin(gs_open_2D),	unID_Opening + 2,	gs_open_2D,	5		! 1002
				unID_Opening = unID_Opening + 10
			endif

			pen gs_leaf_pen_2D
			line_type gs_panelLineType

			if _bOpeningSymbDisplay then
				if gs_iSwingType <> LINE_SHAPE_SWING_SIMPLE_LINE & gs_iSwingType <> LINE_SHAPE_SWING_LEAF_LINE then
					rot2 gs_open_2D
		
					pen gs_opLinePen
!					line2	0, 0,
!							aaa, 0
		
					del 1
				endif
	
				add2 aaa/2, gs_leaf_thk/2
	
				lod2D = DET2D_FS_MIDDLE
				if lod2D_temp = DET2D_FS_MIDDLE | lod2D_temp = DET2D_FS_DETAILED then lod2D = DET2D_FS_DETAILED
				gosub "Leaf_Panel"

				del 1
			else
				if gs_iSwingType <> LINE_SHAPE_SWING_SIMPLE_LINE & gs_iSwingType <> LINE_SHAPE_SWING_LEAF_LINE then
					rot2 gs_open_2D
					add2 aaa/2, gs_leaf_thk/2 * (lod2D = DET2D_FS_DETAILED | lod2D = DET2D_FS_DETAILED_CHI)
					gosub "Leaf_Panel"
					del 2
				endif
			endif

			rot2 180
		next i
		del 5
	endif

	! =============================================================================
	! Sliding Leafs
	! =============================================================================

	if	gs_leaf_optype_m = LEAF_2L_1SLIDING |\
		gs_leaf_optype_m = LEAF_2L_1SLIDING_M |\
		gs_leaf_optype_m = LEAF_2L_2SLIDING |\
		gs_leaf_optype_m = LEAF_2L_2SLIDING_M |\
		gs_leaf_optype_m = LEAF_3L_2SLIDING |\
		gs_leaf_optype_m = LEAF_3L_2SLIDING_M |\
		gs_leaf_optype_m = LEAF_4L_2SLIDING |\
		gs_leaf_optype_m = LEAF_4L_3SLIDING |\
		gs_leaf_optype_m = LEAF_4L_3SLIDING_M |\
		gs_leaf_optype_m = LEAF_4L_4SLIDING |\
		gs_leaf_optype_m = LEAF_4L_4SLIDING_M then

		aaa = TotalLeafWidthin2D/SlidLeafNum + PanelElongOverlap

		add2 a_x+TotalLeafWidthin2D/2, 0

		if gs_door_rail then
			if	gs_leaf_optype_m = LEAF_2L_1SLIDING |\
				gs_leaf_optype_m = LEAF_2L_1SLIDING_M |\
				gs_leaf_optype_m = LEAF_2L_2SLIDING |\
				gs_leaf_optype_m = LEAF_2L_2SLIDING_M |\
				gs_leaf_optype_m = LEAF_4L_2SLIDING |\
				gs_leaf_optype_m = LEAF_4L_4SLIDING |\
				gs_leaf_optype_m = LEAF_4L_4SLIDING_M then

				railWidth = 2 * gs_leaf_thk
			endif

			if	gs_leaf_optype_m = LEAF_3L_2SLIDING |\
				gs_leaf_optype_m = LEAF_3L_2SLIDING_M then

				railWidth = 3 * gs_leaf_thk
			endif

			if	gs_leaf_optype_m = LEAF_4L_3SLIDING |\
				gs_leaf_optype_m = LEAF_4L_3SLIDING_M then

				railWidth = 4 * gs_leaf_thk
			endif

			add2 -TotalLeafWidthin2D/2,0
			pen gs_frame_pen_cont
			line_property 0
			line2 0, 0, 		TotalLeafWidthin2D,	 0
			line2 0,-railWidth,	TotalLeafWidthin2D,	-railWidth
			del 1
		endif

		mul2 -1, 1

		if bDetailedSlidingLeafSymbol then lod2D = DET2D_FS_DETAILED

		if gs_leaf_optype_m <> LEAF_4L_2SLIDING & gs_leaf_optype_m <> LEAF_4L_4SLIDING then

			! -------------- HOTSPOT EDITING
			add2 TotalLeafWidthin2D/2, -SlidLeafNum * gs_leaf_thk - (SlidLeafNum-1) * gs_leaf_gap
			hotspot2 0, 			0,	unID_Opening, gs_open2D, 1+128	: unID_Opening=unID_Opening+1
			hotspot2 -gs_open2D, 	0,	unID_Opening, gs_open2D, 2 		: unID_Opening=unID_Opening+1
			hotspot2 1, 			0,	unID_Opening, gs_open2D, 3 		: unID_Opening=unID_Opening+1
			del 1

			if gs_leaf_optype_m = LEAF_2L_2SLIDING then
				add2 -TotalLeafWidthin2D/2, -gs_leaf_thk * (lod2D = DET2D_FS_DETAILED | lod2D = DET2D_FS_DETAILED_CHI)
				hotspot2 0, 			0,	unID_Opening, gs_open2D_2,	1+128	: unID_Opening=unID_Opening+1
				hotspot2 gs_open2D_2, 	0,	unID_Opening, gs_open2D_2,	2		: unID_Opening=unID_Opening+1
				hotspot2 -1, 			0,	unID_Opening, gs_open2D_2,	3		: unID_Opening=unID_Opening+1
				del 1
			endif

			if gs_iSlidingType = LINE_SHAPE_SLIDING_SIMPLE_LINE then
				add2 0, (-gs_frame_thk/2) * (lod2D = DET2D_FS_MIDDLE | lod2D = DET2D_FS_DETAILED)
				gosub "LineShapeSimpleLine"
				del 1
			endif

			add2 -TotalLeafWidthin2D/2+aaa/2, 0

			for i=1 to SlidLeafNum
				if i=SlidLeafNum then
					add2 -gs_open2D, 0
				else
					if i <> 1 & (gs_leaf_optype_m = LEAF_3L_2SLIDING | gs_leaf_optype_m = LEAF_4L_3SLIDING) then
						add2 ((TotalLeafWidthin2D-gs_open2D-aaa)/(SlidLeafNum-1) - aaa + gs_leaf_overlap) * (i-1), 0
					endif
					if i = 1 & gs_leaf_optype_m = LEAF_2L_2SLIDING then add2 gs_open2D_2, 0
				endif

				if i=SlidLeafNum | (i=1 & (gs_leaf_optype_m = LEAF_2L_2SLIDING | gs_leaf_optype_m = LEAF_4L_4SLIDING)) then
					bShowHandleonActualLeaf = (gs_handle_type_m <> 0)
				else
					bShowHandleonActualLeaf = 0
				endif

				if i > 1 then
					if gs_iSlidingType = LINE_SHAPE_SLIDING_ARROW then
						add2 0, (-gs_leaf_thk/2) * (lod2D = DET2D_FS_DETAILED)
						mul2 -1, -1
						gosub "LineShapeArrow"
						del 2
					endif
				endif

				if i = 1 & gs_leaf_optype_m = LEAF_2L_2SLIDING then
					if gs_iSlidingType = LINE_SHAPE_SLIDING_ARROW then
						add2 0, (-gs_leaf_thk/2) * (lod2D = DET2D_FS_DETAILED)
						gosub "LineShapeArrow"
						del 1
					endif
					mul2 -1, 1
				endif

				gosub "Leaf_Panel"

				if i = 1 & gs_leaf_optype_m = LEAF_2L_2SLIDING then del 1


				if i=SlidLeafNum then
					del 1
				else
					if i = 1 & gs_leaf_optype_m = LEAF_2L_2SLIDING then del 1
					if i <> 1 & (gs_leaf_optype_m = LEAF_3L_2SLIDING | gs_leaf_optype_m = LEAF_4L_3SLIDING) then del 1
				endif

				if (lod2D <> DET2D_FS_SIMPLE & lod2D <> DET2D_FS_MIDDLE & lod2D <> DET2D_FS_SIMPLE_CHI) then
					add2 aaa - gs_leaf_overlap, -gs_leaf_thk - gs_leaf_gap
				else
					add2 aaa - gs_leaf_overlap, -(gs_leaf_thk * SlidLeafNum) / (SlidLeafNum-1) - gs_leaf_gap
				endif

			next i
			del SlidLeafNum + 1
		else

			! -------------- HOTSPOT EDITING
			hotspot2 0, 			-2*gs_leaf_thk - gs_leaf_gap,	unID_Opening, gs_open2D, 1+128	: unID_Opening=unID_Opening+1
			hotspot2 -gs_open2D,	-2*gs_leaf_thk - gs_leaf_gap,	unID_Opening, gs_open2D, 2 		: unID_Opening=unID_Opening+1
			hotspot2 1, 			-2*gs_leaf_thk - gs_leaf_gap,	unID_Opening, gs_open2D, 3 		: unID_Opening=unID_Opening+1

			if gs_leaf_optype_m = LEAF_4L_4SLIDING then
				add2 -TotalLeafWidthin2D/2, -gs_leaf_thk * (lod2D = DET2D_FS_DETAILED | lod2D = DET2D_FS_DETAILED_CHI)
				hotspot2 0, 			0,	unID_Opening, gs_open2D_2, 1+128	: unID_Opening=unID_Opening+1
				hotspot2 gs_open2D_2, 	0,	unID_Opening, gs_open2D_2, 2		: unID_Opening=unID_Opening+1
				hotspot2 -1, 			0,	unID_Opening, gs_open2D_2, 3		: unID_Opening=unID_Opening+1
				del 1

				add2 TotalLeafWidthin2D/2, -gs_leaf_thk * (lod2D = DET2D_FS_DETAILED | lod2D = DET2D_FS_DETAILED_CHI)
				hotspot2 0, 			0,	unID_Opening, gs_open2D_2, 1+128	: unID_Opening=unID_Opening+1
				hotspot2 -gs_open2D_2, 	0,	unID_Opening, gs_open2D_2, 2		: unID_Opening=unID_Opening+1
				hotspot2 1, 			0,	unID_Opening, gs_open2D_2, 3		: unID_Opening=unID_Opening+1
				del 1
			endif

			if gs_iSlidingType = LINE_SHAPE_SLIDING_SIMPLE_LINE then
				add2 0, (-gs_frame_thk/2) * (lod2D = DET2D_FS_MIDDLE | lod2D = DET2D_FS_DETAILED)
				gosub "LineShapeSimpleLine"
				del 1
			endif

			for i = 1 to 2
				add2 TotalLeafWidthin2D/2 - aaa/2, 0

				for j = 1 to 2
					if j=1 & gs_leaf_optype_m = LEAF_4L_2SLIDING then
						bShowHandleonActualLeaf = 0
					else
						bShowHandleonActualLeaf = (gs_handle_type_m <> 0)
					endif

					if j = 2 then
						add2 gs_open2D, 0
						if gs_iSlidingType = LINE_SHAPE_SLIDING_ARROW then
							add2 0, (-gs_leaf_thk/2) * (lod2D = DET2D_FS_DETAILED)
							mul2 1, -1
							gosub "LineShapeArrow"
							del 2
						endif
						mul2 -1, 1
					else
						if gs_leaf_optype_m = LEAF_4L_4SLIDING then
							add2 -gs_open2D_2, 0
							if gs_iSlidingType = LINE_SHAPE_SLIDING_ARROW then
								add2 0, (-gs_leaf_thk/2) * (lod2D = DET2D_FS_DETAILED)
								mul2 -1, 1
								gosub "LineShapeArrow"
								del 2
							endif
						endif
					endif

					gosub "Leaf_Panel"

					if j = 2 then
						del 2
					else
						if gs_leaf_optype_m = LEAF_4L_4SLIDING then del 1
					endif

					if (lod2D <> DET2D_FS_SIMPLE & lod2D <> DET2D_FS_MIDDLE & lod2D <> DET2D_FS_SIMPLE_CHI) then
						add2 -aaa + gs_leaf_overlap, -gs_leaf_thk - gs_leaf_gap
					else
						add2 -aaa + gs_leaf_overlap, -2 * gs_leaf_thk - gs_leaf_gap
					endif

				next j
				del 3
				mul2 -1, 1
			next i
			del 2
		endif

		del 2
	endif



	! =============================================================================
	! External Sliding Leafs
	! =============================================================================

	if	gs_leaf_optype_m = LEAF_1L_EXTERNAL_SLIDING |\
		gs_leaf_optype_m = LEAF_1L_EXTERNAL_SLIDING_M then

		if bDetailedSlidingLeafSymbol then
			lod2D = DET2D_FS_DETAILED
		else
			lod2D = DET2D_FS_MIDDLE
		endif

		if WIDO_REVEAL_SIDE then add2 0, WALL_THICKNESS - gs_frame_thk

		aaa = TotalLeafWidthin2D

		add2 a_x + TotalLeafWidthin2D/2, gs_leaf_thk+posHole

		! -------------- HOTSPOT EDITING
		hotspot2 -aaa/2, 			0,	unID_Opening, gs_open2D, 1+128	:	unID_Opening=unID_Opening+1
		hotspot2 -aaa/2+gs_open2D,	0,	unID_Opening, gs_open2D, 2		:	unID_Opening=unID_Opening+1
		hotspot2 -aaa,				0,	unID_Opening, gs_open2D, 3		:	unID_Opening=unID_Opening+1

		if gs_iSlidingType = LINE_SHAPE_SLIDING_SIMPLE_LINE then
			add2 0, (-gs_leaf_thk/2) * (lod2D = DET2D_FS_DETAILED)
			gosub "LineShapeSimpleLine"
			del 1
		endif

		add2 gs_open2D, 0

		if gs_iSlidingType = LINE_SHAPE_SLIDING_ARROW then
			add2 0, (-gs_leaf_thk/2) * (lod2D = DET2D_FS_DETAILED)
			gosub "LineShapeArrow"
			del 1
		endif

		mul2 -1, 1

		gosub "Leaf_Panel"

		del 3

		if WIDO_REVEAL_SIDE then del 1

	endif



	! =============================================================================
	! External Double Sliding Leafs
	! =============================================================================

	if	gs_leaf_optype_m = LEAF_2L_EXTERNAL_SLIDING then
		if bDetailedSlidingLeafSymbol then
			lod2D = DET2D_FS_DETAILED
		else
			lod2D = DET2D_FS_MIDDLE
		endif

		if WIDO_REVEAL_SIDE then add2 0, WALL_THICKNESS - gs_frame_thk

		aaa = TotalLeafWidthin2D/2

		add2 a_x + TotalLeafWidthin2D/2, gs_leaf_thk+posHole

		! -------------- HOTSPOT EDITING
		hotspot2 0, 		0,	unID_Opening, gs_open2D, 1+128	:	unID_Opening=unID_Opening+1
		hotspot2 gs_open2D,	0,	unID_Opening, gs_open2D, 2		:	unID_Opening=unID_Opening+1
		hotspot2 -1,		0,	unID_Opening, gs_open2D, 3		:	unID_Opening=unID_Opening+1

		if gs_iSlidingType = LINE_SHAPE_SLIDING_SIMPLE_LINE then
			add2 0, (-gs_leaf_thk/2) * (lod2D = DET2D_FS_DETAILED)
			gosub "LineShapeSimpleLine"
			del 1
		endif

		for i = 1 to 2
			mul2 -1, 1
			add2 -aaa/2-gs_open2D, 0

			if gs_iSlidingType = LINE_SHAPE_SLIDING_ARROW then
				add2 0, (-gs_leaf_thk/2) * (lod2D = DET2D_FS_DETAILED)
				mul2 -1, 1
				gosub "LineShapeArrow"
				del 2
			endif

			gosub "Leaf_Panel"

			del 1
		next i
		del 3

		if WIDO_REVEAL_SIDE then del 1
	endif



	! =============================================================================
	! Single Pocket Door Leaf
	! =============================================================================

	if	gs_leaf_optype_m = LEAF_1L_POCKET |\
		gs_leaf_optype_m = LEAF_1L_POCKET_M then

		if bDetailedSlidingLeafSymbol then
			lod2D = DET2D_FS_DETAILED
		else
			lod2D = DET2D_FS_MIDDLE
		endif

		if lod2D = DET2D_FS_SIMPLE & abs(gs_open2D) > EPS then
			aaa = TotalLeafWidthin2D - (LeftFrameWidth + RightFrameWidth) * gs_pocket_door_frame
		else
			aaa = TotalLeafWidthin2D
		endif
		add2 a_x + TotalLeafWidthin2D/2, -posLeafy - posHole

		! -------------- HOTSPOT EDITING
		add2 0, -gs_leaf_thk/2
		hotspot2 -aaa/2, 			0,	unID_Opening, gs_open2D, 1+128	:	unID_Opening=unID_Opening+1
		hotspot2 -aaa/2+gs_open2D,	0,	unID_Opening, gs_open2D, 2		:	unID_Opening=unID_Opening+1
		hotspot2 -aaa,				0,	unID_Opening, gs_open2D, 3		:	unID_Opening=unID_Opening+1

		hotspot2 aaa/2+gs_open2D,	0,	unID_Opening:	unID_Opening=unID_Opening+1
		del 1

		if gs_iSlidingType = LINE_SHAPE_SLIDING_SIMPLE_LINE then
			add2 0, -gs_leaf_thk/2
			gosub "LineShapeSimpleLine"
			del 1
		endif

		add2 gs_open2D, 0

		if gs_iSlidingType = LINE_SHAPE_SLIDING_ARROW then
			if WIDO_REVEAL_SIDE then
				add2 0, WALL_THICKNESS - WIDO_SILL - gs_frame_thk + posLeafy + posHole
			else
				add2 0, WIDO_SILL + posLeafy + posHole
			endif
			gosub "LineShapeArrow"
			del 1
		endif

		if lod2D = DET2D_FS_SIMPLE | lod2D = DET2D_FS_MIDDLE | lod2D = DET2D_FS_SIMPLE_CHI then add2 0, -gs_leaf_thk/2
		mul2 -1, 1

		gosub "Leaf_Panel"

		del 2

		if lod2D = DET2D_FS_SIMPLE | lod2D = DET2D_FS_MIDDLE | lod2D = DET2D_FS_SIMPLE_CHI then del 1

		del 1
	endif


	! =============================================================================
	! Double Pocket Door Leaf
	! =============================================================================

	if	gs_leaf_optype_m = LEAF_2L_POCKET then
		if bDetailedSlidingLeafSymbol then
			lod2D = DET2D_FS_DETAILED
		else
			lod2D = DET2D_FS_MIDDLE
		endif

		add2 a_x + TotalLeafWidthin2D/2, -posLeafy - posHole

		! -------------- HOTSPOT EDITING
		add2 0, -gs_leaf_thk/2
		hotspot2 0, 			0,	unID_Opening, gs_open2D, 1+128	:	unID_Opening=unID_Opening+1
		hotspot2 gs_open2D,		0,	unID_Opening, gs_open2D, 2		:	unID_Opening=unID_Opening+1
		hotspot2 -1,			0,	unID_Opening, gs_open2D, 3		:	unID_Opening=unID_Opening+1
		del 1

		if gs_iSlidingType = LINE_SHAPE_SLIDING_SIMPLE_LINE then
			add2 0, -gs_leaf_thk/2
			gosub "LineShapeSimpleLine"
			del 1
		endif

		for i = 1 to 2
			if lod2D = DET2D_FS_SIMPLE & abs(gs_open2D) > EPS then
				if i = 1 then
					aaa = TotalLeafWidthin2D/2 - LeftFrameWidth * gs_pocket_door_frame
				else
					aaa = TotalLeafWidthin2D/2 - RightFrameWidth * gs_pocket_door_frame
				endif
			else
				aaa = TotalLeafWidthin2D/2
			endif

			mul2 -1, 1
			add2 -aaa/2-gs_open2D, 0

			hotspot2 -aaa/2,	-gs_leaf_thk/2,	unID_Opening:	unID_Opening=unID_Opening+1

			if gs_iSlidingType = LINE_SHAPE_SLIDING_ARROW then
				if WIDO_REVEAL_SIDE then
					add2 0, WALL_THICKNESS - WIDO_SILL - gs_frame_thk + posLeafy + posHole
				else
					add2 0, WIDO_SILL + posLeafy + posHole
				endif
				mul2 -1, 1
				gosub "LineShapeArrow"
				del 2
			endif

			if lod2D = DET2D_FS_SIMPLE | lod2D = DET2D_FS_MIDDLE | lod2D = DET2D_FS_SIMPLE_CHI then add2 0, -gs_leaf_thk/2

			gosub "Leaf_Panel"

			if lod2D = DET2D_FS_SIMPLE | lod2D = DET2D_FS_MIDDLE | lod2D = DET2D_FS_SIMPLE_CHI then del 1

			del 1
		next i
		del 2

		del 1
	endif

	! =============================================================================
	! Sliding Folding Multi-panel 1 Side Panel
	! =============================================================================

	if	gs_leaf_optype_m = LEAF_1L_MULTIPANEL | gs_leaf_optype_m = LEAF_1L_MULTIPANEL_M then
		if bDetailedSlidingLeafSymbol then
			lod2D = DET2D_FS_DETAILED
		else
			lod2D = DET2D_FS_MIDDLE
		endif

		if bSimpleLeafin50 & lod2D = DET2D_FS_DETAILED then
			lod2D = DET2D_FS_MIDDLE		!simple leaf in detailed symbol
		endif

		bOpened = (gs_open2D > EPS)

		opmax = TotalLeafWidthin2D

		add2 a_x + TotalLeafWidthin2D/2, 0

		if gs_leaf_optype_m = LEAF_1L_MULTIPANEL_M then mul2 -1, 1

		! -------------- HOTSPOT EDITING
		add2 TotalLeafWidthin2D/2, 0
		hotspot2 0, 					0,		unID_Opening,	gs_open2D,	1+128	:	unID_Opening=unID_Opening+1
		hotspot2 -gs_open2D, 			0,		unID_Opening,	gs_open2D,	2		:	unID_Opening=unID_Opening+1
		hotspot2 TotalLeafWidthin2D+1, 	0,		unID_Opening,	gs_open2D,	3		:	unID_Opening=unID_Opening+1
		del 1

		if gs_door_rail then
			add2 -TotalLeafWidthin2D/2,0
			pen gs_frame_pen_cont
			line_property 0
			line2 0, 0, 			TotalLeafWidthin2D,  0
			line2 0,-gs_leaf_thk,	TotalLeafWidthin2D,	-gs_leaf_thk
			del 1
		endif

		panelWidth = (TotalLeafWidthin2D) / (gs_leaf_num - bMiddleStacking)


		w = (opmax-gs_open2D) / (gs_leaf_num - bMiddleStacking)

		alph = acs(w/sqr((panelWidth)**2+(gs_leaf_thk**2)))+atn(gs_leaf_thk/panelWidth)

		if	(gs_iSlidingType = LINE_SHAPE_SLIDING_SIMPLE_LINE) &\
			(bOpened | not(gs_opening_leaves | gs_opening_leaves2)) then

			add2 0, (-gs_frame_thk/2) * (lod2D = DET2D_FS_MIDDLE | lod2D = DET2D_FS_DETAILED)
			gosub "LineShapeSimpleLine"
			del 1
		endif

		add2 -TotalLeafWidthin2D/2, 0

		if bOpened then
			for i=1 to gs_leaf_num

				if bMiddleStacking and (i=1 or i=gs_leaf_num) then
					aaa = panelWidth/2
				else
					aaa = panelWidth
				endif

				simpAng = 0
				if lod2D = DET2D_FS_SIMPLE | lod2D = DET2D_FS_SIMPLE_CHI | lod2D = DET2D_FS_MIDDLE then
					simpAng = atn(gs_leaf_thk / aaa)
				endif

				if i = gs_leaf_num then
					bShowHandleonActualLeaf = (gs_handle_type_m <> 0)
				else
					if i = 1 & gs_opening_leaves then
						bShowHandleonActualLeaf = (gs_handle_type_m <> 0)
					else
						bShowHandleonActualLeaf	= 0
					endif
				endif

				if i=1 then
					rot2 alph*bOpened
				else
					if i mod 2 then
						rot2 2*alph*bOpened
						add2 0, 0
					else
						rot2 -2*alph*bOpened
						add2 0,gs_leaf_thk
					endif
				endif

				temp_aaa = aaa

				if SimpAng then
					aaa = sqr(gs_leaf_thk^2 + aaa^2)
					if i mod 2 then
						add2 0,0
						rot2 -SimpAng
					else
						add2 0,-gs_leaf_thk
						rot2 SimpAng
					endif
				endif

				if i=1 and gs_opening_leaves then
					mul2 -1, 1
					add2 -aaa/2, 0
				else
					add2 aaa/2, 0
				endif

				gosub "Leaf_Panel"

				del 1 + (i=1 and gs_opening_leaves)

				if SimpAng then del 2

				aaa = temp_aaa
				if i mod 2 then
					add2 aaa, -gs_leaf_thk
				else
					add2 aaa, 0
				endif
			next i

			del 3 * gs_leaf_num - 1
		else

			if bMiddleStacking then
				leafWidth = panelWidth/2
			else
				leafWidth = panelWidth
			endif
			aaa = leafWidth

			add2 leafWidth, 0
			if gs_opening_leaves then
				if gs_iSwingType = LINE_SHAPE_SWING_SIMPLE_LINE then
					add2 -aaa/2, (-gs_frame_thk/2) * (lod2D = DET2D_FS_MIDDLE | lod2D = DET2D_FS_DETAILED)
					gosub "LineShapeSimpleLine"
					del 1
				else
					! -------------- HOTSPOT EDITING
					hotspot2 0, 							0,							unID_Opening,	gs_open_2D,	6 + reverse2dAngleMask		:	unID_Opening=unID_Opening+1
					hotspot2 -10, 							0,							unID_Opening,	gs_open_2D,	4+128	:	unID_Opening=unID_Opening+1
					hotspot2 -leafWidth*cos(gs_open_2D),	leafWidth*sin(gs_open_2D),	unID_Opening,	gs_open_2D,	5		:	unID_Opening=unID_Opening+1

					! Swing Line ------------------------------
					pen gs_opLinePen
					drawindex 30
					line_type gs_swingLineType

					if gs_open_2D > 0 then
						if gs_iSwingType = LINE_SHAPE_SWING_CURVED then
							arc2 0, 0, aaa, 180-gs_open_2D, 180
!						else
!							line2 -aaa , 0,
!							- aaa * cos(gs_open_2D) - gs_leaf_thk * sin(gs_open_2D) * (lod2D = DET2D_FS_DETAILED),
!							aaa * sin(gs_open_2D) - gs_leaf_thk * cos(gs_open_2D) * (lod2D = DET2D_FS_DETAILED)
						endif
					endif
				endif
				line_type gs_panelLineType
			else
				unID_Opening = unID_Opening + 4
				bShowHandleonActualLeaf	= 0
			endif

			if not(gs_opening_leaves) | (gs_opening_leaves & not(gs_iSwingType = LINE_SHAPE_SWING_SIMPLE_LINE)) then
				rot2 -gs_open_2D * gs_opening_leaves
				add2 -leafWidth/2, 0
				mul2 -1, 1
				gosub "Leaf_Panel"
				del 3
			endif


			bShowHandleonActualLeaf	= 0
			for i=1 to gs_leaf_num-2
				leafWidth = panelWidth
				aaa = leafWidth

				add2 aaa/2, 0
				gosub "Leaf_Panel"
				del 1

				add2 aaa, 0
			next i

			if bMiddleStacking then
				leafWidth = panelWidth/2
			else
				leafWidth = panelWidth
			endif
			aaa = leafWidth

			bShowHandleonActualLeaf = (gs_handle_type_m <> 0)
			if gs_opening_leaves2 then
				if gs_iSwingType = LINE_SHAPE_SWING_SIMPLE_LINE then
					add2 aaa/2, (-gs_frame_thk/2) * (lod2D = DET2D_FS_MIDDLE | lod2D = DET2D_FS_DETAILED)
					gosub "LineShapeSimpleLine"
					del 1
				else
					! -------------- HOTSPOT EDITING
					hotspot2 0, 							0,								unID_Opening,	gs_open_2D_2,	6 + 512 - reverse2dAngleMask		:	unID_Opening=unID_Opening+1
					hotspot2 10, 							0,								unID_Opening,	gs_open_2D_2,	4+128	:	unID_Opening=unID_Opening+1
					hotspot2 leafWidth*cos(gs_open_2D_2),	leafWidth*sin(gs_open_2D_2),	unID_Opening,	gs_open_2D_2,	5		:	unID_Opening=unID_Opening+1

					! Swing Line ------------------------------
					pen gs_opLinePen
					drawindex 30
					line_type gs_swingLineType

					if gs_open_2D_2 > 0 then
						if gs_iSwingType = LINE_SHAPE_SWING_CURVED then	! Curved
							arc2 0, 0, aaa, 0, gs_open_2D_2
!						else
!							line2 aaa , 0,
!							aaa * cos(gs_open_2D_2) + gs_leaf_thk * sin(gs_open_2D_2) * (lod2D = DET2D_FS_DETAILED),
!							aaa * sin(gs_open_2D_2) - gs_leaf_thk * cos(gs_open_2D_2) * (lod2D = DET2D_FS_DETAILED)
						endif
					endif
				endif
				line_type gs_panelLineType
			else
				unID_Opening = unID_Opening + 4
			endif

			if not(gs_opening_leaves2) | (gs_opening_leaves2 & not(gs_iSwingType = LINE_SHAPE_SWING_SIMPLE_LINE)) then
				rot2 gs_open_2D_2 * gs_opening_leaves2
				add2 aaa/2, 0
				gosub "Leaf_Panel"
				del 2
			endif

			del (gs_leaf_num-2)
		endif

		del 1
		if gs_leaf_optype_m = LEAF_1L_MULTIPANEL_M then del 1
		del 1
	endif



	! =============================================================================
	! Sliding Folding Multi-panel 2 Side Panel
	! =============================================================================

	if	gs_leaf_optype_m = LEAF_2L_MULTIPANEL then
		if bDetailedSlidingLeafSymbol then
			lod2D = DET2D_FS_DETAILED
		else
			lod2D = DET2D_FS_MIDDLE
		endif

		if bSimpleLeafin50 & lod2D = DET2D_FS_DETAILED then
			lod2D = DET2D_FS_MIDDLE		!simple leaf in detailed symbol
		endif

		panelWidth = (TotalLeafWidthin2D) / (gs_leaf_num + gs_leaf_num2 - bMiddleStacking)

		add2 a_x + TotalLeafWidthin2D/2, 0

		sideRatio = (gs_leaf_num2-bMiddleStacking * 0.5) / (gs_leaf_num + gs_leaf_num2 - bMiddleStacking)
		opmax = TotalLeafWidthin2D
		opmax2 = opmax * sideRatio
		opmax1 = opmax * (1 - sideRatio)

		! -------------- HOTSPOT EDITING
		openingOrig = TotalLeafWidthin2D/2 - TotalLeafWidthin2D * sideRatio
		hotspot2 openingOrig,				0, unID_Opening, gs_open2D, 1+128	: unID_Opening = unID_Opening + 1
		hotspot2 openingOrig - gs_open2D,	0, unID_Opening, gs_open2D, 2		: unID_Opening = unID_Opening + 1
		hotspot2 openingOrig + 1,			0, unID_Opening, gs_open2D, 3		: unID_Opening = unID_Opening + 1

		hotspot2 openingOrig,				0, unID_Opening, gs_open2D_2, 1		: unID_Opening = unID_Opening + 1
		hotspot2 openingOrig + gs_open2D_2,	0, unID_Opening, gs_open2D_2, 2		: unID_Opening = unID_Opening + 1
		hotspot2 openingOrig - 1,			0, unID_Opening, gs_open2D_2, 3		: unID_Opening = unID_Opening + 1

		if gs_door_rail then
			add2 -TotalLeafWidthin2D/2,0
			pen gs_frame_pen_cont
			line_property 0
			line2 0, 0, 			TotalLeafWidthin2D,  0
			line2 0,-gs_leaf_thk,	TotalLeafWidthin2D,	-gs_leaf_thk
			del 1
		endif

		if	((gs_iSlidingType = LINE_SHAPE_SLIDING_SIMPLE_LINE) &\
			 ((gs_open2D > EPS) | not(gs_opening_leaves)) &\
			 ((gs_open2D_2 > EPS) | not(gs_opening_leaves2))) then

			add2 0, (-gs_frame_thk/2) * (lod2D = DET2D_FS_MIDDLE | lod2D = DET2D_FS_DETAILED)
			gosub "LineShapeSimpleLine"
			del 1
		endif

		add2 -TotalLeafWidthin2D/2, 0

		for j = 1 to 2
			if j = 1 then
				w=(opmax1-gs_open2D) / (gs_leaf_num - bMiddleStacking * 0.5)
				leafNum = gs_leaf_num
				bOpened = (gs_open2D > EPS)
			else
				w=(opmax2-gs_open2D_2) / (gs_leaf_num2 - bMiddleStacking * 0.5)
				leafNum = gs_leaf_num2
				bOpened = (gs_open2D_2 > EPS)
			endif


			alph = acs(w/sqr((panelWidth)^2+(gs_leaf_thk^2))) + atn(gs_leaf_thk/panelWidth)


			if bOpened then
				for i=1 to leafNum

					if bMiddleStacking and (i=1) then
						aaa = panelWidth/2
					else
						aaa = panelWidth
					endif

					simpAng = 0
					if lod2D = DET2D_FS_SIMPLE | lod2D = DET2D_FS_SIMPLE_CHI | lod2D = DET2D_FS_MIDDLE then
						simpAng = atn(gs_leaf_thk / aaa)
					endif


					if i=1 then
						rot2 alph*bOpened
					else
						if i mod 2 then
							rot2 2*alph*bOpened
							add2 0, 0
						else
							rot2 -2*alph*bOpened
							add2 0, gs_leaf_thk
						endif
					endif

					if i = leafNum then
						bShowHandleonActualLeaf = (gs_handle_type_m <> 0)
					else
						if (j = 1 & i = 1 & gs_opening_leaves) | (j = 2 & i = 1 & gs_opening_leaves2) then
							bShowHandleonActualLeaf = (gs_handle_type_m <> 0)
						else
							bShowHandleonActualLeaf = 0
						endif
					endif

					temp_aaa = aaa

					if SimpAng then
						aaa = sqr(gs_leaf_thk^2 + aaa^2)
						if i mod 2 then
							add2 0,0
							rot2 -SimpAng
						else
							add2 0,-gs_leaf_thk
							rot2 SimpAng
						endif
					endif

					if i=1 and gs_opening_leaves then
						mul2 -1, 1
						add2 -aaa/2, 0
					else
						add2 aaa/2, 0
					endif

					gosub "Leaf_Panel"

					del 1 + (i=1 and gs_opening_leaves)
					if SimpAng then del 2

					aaa = temp_aaa
					if i mod 2 then
						add2 aaa, -gs_leaf_thk
					else
						add2 aaa, 0
					endif
				next i
				del 3 * leafNum - 1
			else
				if bMiddleStacking then
					leafWidth = panelWidth/2
				else
					leafWidth = panelWidth
				endif
				aaa = leafWidth

				add2 leafWidth, 0

				if j = 1 then
					if gs_opening_leaves then
						if gs_iSwingType = LINE_SHAPE_SWING_SIMPLE_LINE then
							add2 -aaa/2, (-gs_frame_thk/2) * (lod2D = DET2D_FS_MIDDLE | lod2D = DET2D_FS_DETAILED)
							gosub "LineShapeSimpleLine"
							del 1
						else
							! -------------- HOTSPOT EDITING
							hotspot2 0, 							0, 								unID_Opening,	gs_open_2D, 6 + reverse2dAngleMask		: unID_Opening = unID_Opening + 1
							hotspot2 -10, 							0, 								unID_Opening,	gs_open_2D, 4+128	: unID_Opening = unID_Opening + 1
							hotspot2 -leafWidth*cos(gs_open_2D), 	leafWidth*sin(gs_open_2D),		unID_Opening,	gs_open_2D,	5		: unID_Opening = unID_Opening + 1

							! Swing Line ------------------------------
							pen gs_opLinePen
							drawindex 30
							line_type gs_swingLineType

							if gs_open_2D > 0 then
								if gs_iSwingType = LINE_SHAPE_SWING_CURVED then
									arc2 0, 0, aaa, 180-gs_open_2D, 180
!								else
!									line2 -aaa , 0,
!									- aaa * cos(gs_open_2D) - gs_leaf_thk * sin(gs_open_2D) * (lod2D = DET2D_FS_DETAILED),
!									aaa * sin(gs_open_2D) - gs_leaf_thk * cos(gs_open_2D) * (lod2D = DET2D_FS_DETAILED)
								endif
							endif
						endif
						line_type gs_panelLineType
						bShowHandleonActualLeaf = (gs_handle_type_m <> 0)
					else
						unID_Opening=unID_Opening+4
						bShowHandleonActualLeaf = 0
					endif
					rot2 -gs_open_2D * gs_opening_leaves
				else
					if gs_opening_leaves2 then
						if gs_iSwingType = LINE_SHAPE_SWING_SIMPLE_LINE then
							add2 -aaa/2, (-gs_frame_thk/2) * (lod2D = DET2D_FS_MIDDLE | lod2D = DET2D_FS_DETAILED)
							gosub "LineShapeSimpleLine"
							del 1
						else
							! -------------- HOTSPOT EDITING
							hotspot2 0,								0,								unID_Opening,	gs_open_2D_2, 6 + 512 - reverse2dAngleMask		: unID_Opening = unID_Opening + 1
							hotspot2 -10,							0,								unID_Opening,	gs_open_2D_2, 4+128		: unID_Opening = unID_Opening + 1
							hotspot2 -leafWidth*cos(gs_open_2D_2),	leafWidth*sin(gs_open_2D_2),	unID_Opening,	gs_open_2D_2,5			: unID_Opening = unID_Opening + 1

							! Swing Line ------------------------------
							pen gs_opLinePen
							drawindex 30
							line_type gs_swingLineType

							if gs_open_2D_2 > 0 then
								if gs_iSwingType = LINE_SHAPE_SWING_CURVED then
									arc2 0, 0, aaa, 180-gs_open_2D_2, 180
!								else
!									line2 -aaa , 0,
!									- aaa * cos(gs_open_2D_2) - gs_leaf_thk * sin(gs_open_2D_2) * (lod2D = DET2D_FS_DETAILED),
!									aaa * sin(gs_open_2D_2) - gs_leaf_thk * cos(gs_open_2D_2) * (lod2D = DET2D_FS_DETAILED)
								endif
							endif
						endif
						line_type gs_panelLineType
						bShowHandleonActualLeaf = (gs_handle_type_m <> 0)
					else
						unID_Opening=unID_Opening+4
						bShowHandleonActualLeaf = 0
					endif
					rot2 -gs_open_2D_2 * gs_opening_leaves2
				endif

				if j = 1 & (not(gs_opening_leaves) | (gs_opening_leaves & not(gs_iSwingType = LINE_SHAPE_SWING_SIMPLE_LINE))) then
					add2 -leafWidth/2, 0
					mul2 -1, 1
					gosub "Leaf_Panel"
					del 2
				endif

				if j = 2 & (not(gs_opening_leaves2) | (gs_opening_leaves2 & not(gs_iSwingType = LINE_SHAPE_SWING_SIMPLE_LINE))) then
					add2 -leafWidth/2, 0
					mul2 -1, 1
					gosub "Leaf_Panel"
					del 2
				endif

				del 1

				leafWidth = panelWidth
				aaa = leafWidth

				for i=1 to leafNum-1
					if i = leafNum-1 then
						bShowHandleonActualLeaf = (gs_handle_type_m <> 0)
					else
						bShowHandleonActualLeaf = 0
					endif

					add2 panelWidth/2, 0

					gosub "Leaf_Panel"

					del 1

					add2 panelWidth, 0
				next i
				del leafNum-1

				del 1
			endif

			add2 opmax, 0
			mul2 -1, 1
		next j

		del 4

		del 2
	endif
else

	! =============================================================================
	! 1 Leaf Panels, 2 Leaf Panels, Pivot Door Leafs
	! =============================================================================

	if	gs_leaf_optype_m = LEAF_1L_SIDE_HUNG |\
		gs_leaf_optype_m = LEAF_1L_SIDE_HUNG_M |\
		gs_leaf_optype_m = LEAF_1L_DOUBLE_ACTING |\
		gs_leaf_optype_m = LEAF_1L_DOUBLE_ACTING_M |\
		gs_leaf_optype_m = LEAF_2L_SIDE_HUNG |\
		gs_leaf_optype_m = LEAF_2L_DOUBLE_ACTING |\
		gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS |\
		gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS_M |\
		gs_leaf_optype_m = LEAF_1L_PIVOT |\
		gs_leaf_optype_m = LEAF_1L_PIVOT_M then


		if gs_iSwingType = LINE_SHAPE_SWING_SIMPLE_LINE then
			add2 a_x + TotalLeafWidthin2D/2, 0
			mul2 -1, 1
			add2 0, (-gs_frame_thk/2) * (lod2D = DET2D_FS_MIDDLE | lod2D = DET2D_FS_DETAILED)
			gosub "LineShapeSimpleLine"
			del 3
		endif
	endif


	! =============================================================================
	! Sliding Leafs
	! =============================================================================

	if	gs_leaf_optype_m = LEAF_2L_1SLIDING |\
		gs_leaf_optype_m = LEAF_2L_1SLIDING_M |\
		gs_leaf_optype_m = LEAF_2L_2SLIDING |\
		gs_leaf_optype_m = LEAF_2L_2SLIDING_M |\
		gs_leaf_optype_m = LEAF_3L_2SLIDING |\
		gs_leaf_optype_m = LEAF_3L_2SLIDING_M |\
		gs_leaf_optype_m = LEAF_4L_2SLIDING |\
		gs_leaf_optype_m = LEAF_4L_3SLIDING |\
		gs_leaf_optype_m = LEAF_4L_3SLIDING_M |\
		gs_leaf_optype_m = LEAF_4L_4SLIDING |\
		gs_leaf_optype_m = LEAF_4L_4SLIDING_M then

		if gs_iSlidingType = LINE_SHAPE_SLIDING_SIMPLE_LINE then
			add2 a_x+TotalLeafWidthin2D/2, 0
			mul2 -1, 1
			add2 0, (-gs_frame_thk/2) * (lod2D = DET2D_FS_MIDDLE | lod2D = DET2D_FS_DETAILED)
			gosub "LineShapeSimpleLine"
			del 3
		endif
	endif


	! =============================================================================
	! External Sliding Leafs, External Double Sliding Leafs
	! =============================================================================

	if	gs_leaf_optype_m = LEAF_1L_EXTERNAL_SLIDING |\
		gs_leaf_optype_m = LEAF_1L_EXTERNAL_SLIDING_M |\
		gs_leaf_optype_m = LEAF_2L_EXTERNAL_SLIDING then

		if gs_iSlidingType = LINE_SHAPE_SLIDING_SIMPLE_LINE then
			if WIDO_REVEAL_SIDE then add2 0, WALL_THICKNESS - gs_frame_thk
			add2 a_x + TotalLeafWidthin2D/2,  0
			gosub "LineShapeSimpleLine"
			del 1
			if WIDO_REVEAL_SIDE then del 1
		endif
	endif


	! =============================================================================
	! Single Pocket Door Leaf, Double Pocket Door Leaf
	! =============================================================================

	if	gs_leaf_optype_m = LEAF_1L_POCKET |\
		gs_leaf_optype_m = LEAF_1L_POCKET_M |\
		gs_leaf_optype_m = LEAF_2L_POCKET then

		if gs_iSlidingType = LINE_SHAPE_SLIDING_SIMPLE_LINE then
			add2 a_x + TotalLeafWidthin2D/2, -posLeafy - posHole - gs_leaf_thk/2
			gosub "LineShapeSimpleLine"
			del 1
		endif
	endif


	! =============================================================================
	! Sliding Folding Multi-panel 1 Side Panel/2 Side Panel
	! =============================================================================

	if	gs_leaf_optype_m = LEAF_1L_MULTIPANEL |\
		gs_leaf_optype_m = LEAF_1L_MULTIPANEL_M |\
		gs_leaf_optype_m = LEAF_2L_MULTIPANEL then

		if	gs_iSwingType = LINE_SHAPE_SWING_SIMPLE_LINE |\
			gs_iSlidingType = LINE_SHAPE_SLIDING_SIMPLE_LINE then

			add2 a_x + TotalLeafWidthin2D/2, (-gs_frame_thk/2) * (lod2D = DET2D_FS_MIDDLE | lod2D = DET2D_FS_DETAILED)
			gosub "LineShapeSimpleLine"
			del 1
		endif
	endif
endif

del 1


! =============================================================================
end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end
! =============================================================================


"Leaf_Panel":

	if bSecondPanel then
		_iDoorPanelType		= iDoorPanelType2
		_gs_fw_side			= gs_fw_side2
		_gs_fw_side_right	= gs_fw_side_right2
		_gs_fw_side_left	= gs_fw_side_left2
		_gs_fw_lower		= gs_fw_lower2
		_gs_fw_upper		= gs_fw_upper2
	else
		_iDoorPanelType		= iDoorPanelType
		_gs_fw_side			= gs_fw_side
		_gs_fw_side_right	= gs_fw_side_right
		_gs_fw_side_left	= gs_fw_side_left
		_gs_fw_lower		= gs_fw_lower
		_gs_fw_upper		= gs_fw_upper
	endif
	
	_bShowGlassPanelOnSymbol	= bShowGlassPanelOnSymbol
	if iLoD2D = SYMBD_M_2LINELEAFCL_GLASS then
		_iDoorPanelType				= 1
		_bShowGlassPanelOnSymbol	= 0
	endif
	
		call "DoorLeafPanels" parameters all A				= aaa,
											 B				= gs_leaf_thk,
								bHideInnerContour			= bHideInnerContour,
								lod2D						= lod2D,
								iSymbolGlassType			= iSymbolGlassType,
								iDoorPanelType				= _iDoorPanelType,
								gs_fw_side					= _gs_fw_side,
								gs_fw_side_right			= _gs_fw_side_right,
								gs_fw_side_left				= _gs_fw_side_left,
								gs_fillAirtight				= gs_fillAirtight,
								gs_penAirtight_fg			= gs_penAirtight_fg,
								gs_penAirtight_bg			= gs_penAirtight_bg,
								bShowHandleOnSymbol			= bShowHandleOnSymbol,
								bShowHandleonActualLeaf		= bShowHandleonActualLeaf,
								bShowGlassPanelOnSymbol		= _bShowGlassPanelOnSymbol,
								bShowChiSpringSymbol		= bShowChiSpringSymbol,
								bShowAirtightPanel			= bShowAirtightPanel
return

"LineShapeSimpleLine":
	drawindex 30

	pen gs_opLinePen
	line_type gs_swingLineType

	hotspot2 0, -0.50, unID_Opening
	hotspot2 0, 0.50, unID_Opening + 1
	line2 0, -0.50, 0, 0.50

	line_type gs_panelLineType
return

"LineShapeArrow":
	drawindex 30

	pen gs_opLinePen
	line_type gs_swingLineType

	if bLineShapeArrowNED then
		line2 0, 0, 0, 0.12
	endif
	line2 0, 0.12, 0.20, 0.12
	line2 0.20, 0.12, 0.15, 0.17
	line2 0.20, 0.12, 0.15, 0.07

	line_type gs_panelLineType
return
]]>
</Script_2D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_1D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
! const values for parameter: iTypeDemolitionFill
RENOVATION_FILL_EXIST		= 1
RENOVATION_FILL_DEMOLISHED	= 2
RENOVATION_FILL_NEW			= 3
RENOVATION_FILL_NEW_FULL	= 4

! const values for parameter: iOpeningMethod
OPENMETHOD_OPEN_SIMP		= 1
OPENMETHOD_OPEN_DOUB		= 2
OPENMETHOD_PIVOT			= 3
OPENMETHOD_SLIDE_INT		= 4
OPENMETHOD_SLIDE_EXT_SIMP	= 5
OPENMETHOD_SLIDE_EXT_DOUB	= 6
OPENMETHOD_POCKET_SIMP		= 7
OPENMETHOD_POCKET_DOUB		= 8
OPENMETHOD_SLIDFOLD_SIMP	= 9
OPENMETHOD_SLIDFOLD_BIFOLD	= 10

! const values for parameter: iThresholdType
TRESHOLD_OFF          = 1
TRESHOLD_NORMAL       = 2
TRESHOLD_EXTENDED     = 3
TRESHOLD_BOTHEXTENDED = 4
TRESHOLD_BENEATHPANEL = 5
TRESHOLD_PROFILED     = 6
TRESHOLD_FLAT         = 7
TRESHOLD_ANSLAG       = 8
TRESHOLD_GUMMI        = 9
TRESHOLD_HEVE         = 10
TRESHOLD_HC           = 11
TRESHOLD_BRANN        = 12
TRESHOLD_BADEROMS     = 13
TRESHOLD_AKKUSTIKK    = 14
TRESHOLD_SIMPLE       = 15
TRESHOLD_SLOPINGEXT   = 16
TRESHOLD_METAL        = 17
TRESHOLD_EXTENDED_SWE = 18
TRESHOLD_NOTAVAILABLE = -1


! const values for parameter: iSillType
SILL_TIMBER       = 1
SILL_SOLID_22     = 10
SILL_METAL_1      = 11
SILL_PARALLEL     = 12
SILL_METAL_2      = 13
SILL_PARALLEL_2   = 14
SILL_SIMPLEBLOCK  = 15
SILL_BLOCK        = 16
SILL_DUTCH        = 17
SILL_BRICK        = 2
SILL_STONE        = 3
SILL_CERAMIC      = 4
SILL_ETHERNIT     = 5
SILL_CONCRETE_TUB = 6
SILL_ALUMINIUM    = 7
SILL_SOLID_11     = 8
SILL_SOLID_12     = 9

! Contact person: <SzL, FeZs, NJ>

EPS = 0.0001

! iRevealType:
REVEAL_EDGE				= 0
REVEAL_NO				= 1
REVEAL_POSITIVE			= 2
REVEAL_NEGATIVE			= 3
REVEAL_SLANTED			= 4
REVEAL_SPLAYED			= 5
REVEAL_HISTORIC			= 6
REVEAL_DOUBLE			= 7
REVEAL_DOUBLE_SPLAYED	= 8
REVEAL_OUTSIDE_SPLAYED	= 9

! gs_optype_m
SASH_FIXED					= 1		! Fixed Glass
SASH_FIXED_SCREW			= 2		! Fixed Sash
SASH_SIDE_HUNG				= 3		! Side Hung
SASH_SIDE_HUNG_M			= 4		! Side Hung Mirrored
SASH_TILT_TURN				= 5		! Tilt and Turn
SASH_TILT_TURN_M			= 6		! Tilt and Turn Mirrored
SASH_BOTTOM_HUNG			= 7		! Bottom Hung
SASH_TOP_HUNG				= 8		! Top Hung
SASH_HOR_PIVOT				= 9		! Horizontal Pivot Hung
SASH_VER_PIVOT				= 10	! Vertical Pivotted
SASH_TILT_SLIDE				= 11	! Tilt and Slide
SASH_LEFT_SLIDING			= 12	! Left Sliding
SASH_RIGHT_SLIDING			= 13	! Right Sliding
SASH_UP_SLIDING				= 14	! Sliding Up
SASH_DOWN_SLIDING			= 15	! Sliding Down
SASH_VER_PIVOT_M			= 16	! Vertical Pivotted Mirrored
SASH_FIXED_SLIDE			= 17	! Fixed Sliding Sash
SASH_DOUBLE_SIDE_HUNG		= 18	! Double Sash
SASH_DOUBLE_TILT_TURN		= 19	! Double Tilt and Turn
SASH_DOUBLE_TILT_TURN_M		= 20	! Double Tilt and Turn Mirrored
SASH_SLIDING_HOR			= 21	! Sliding
SASH_SLIDING_HOR_M			= 22	! Sliding Mirrored
SASH_DOUBLE_SLIDING_HOR		= 23	! Double Sliding
SASH_DOUBLE_SLIDING_HOR_M	= 24	! Double Sliding Mirrored
SASH_SLIDING_VER			= 25	! Single Hung
SASH_DOUBLE_SLIDING_VER		= 26	! Double Hung

! iMullionPosition
MULLION_OUTSIDE		= 1
MULLION_INSIDE		= 2
MULLION_THROUGHOUT	= 3

! gs_leaf_optype_m:
LEAF_1L_SIDE_HUNG			= 1
LEAF_1L_SIDE_HUNG_M			= 2
LEAF_1L_DOUBLE_ACTING		= 3
LEAF_1L_DOUBLE_ACTING_M		= 4
LEAF_2L_SIDE_HUNG			= 5
LEAF_2L_DOUBLE_ACTING		= 6
LEAF_2L_DOUBLE_EGRESS		= 7
LEAF_2L_DOUBLE_EGRESS_M		= 8
LEAF_1L_PIVOT				= 9
LEAF_1L_PIVOT_M				= 10
LEAF_2L_1SLIDING			= 11
LEAF_2L_1SLIDING_M			= 12
LEAF_2L_2SLIDING			= 13
LEAF_2L_2SLIDING_M			= 14
LEAF_3L_2SLIDING			= 15
LEAF_3L_2SLIDING_M			= 16
LEAF_4L_2SLIDING			= 17
LEAF_4L_3SLIDING			= 18
LEAF_4L_3SLIDING_M			= 19
LEAF_4L_4SLIDING			= 20
LEAF_4L_4SLIDING_M			= 21
LEAF_1L_EXTERNAL_SLIDING	= 22
LEAF_1L_EXTERNAL_SLIDING_M	= 23
LEAF_2L_EXTERNAL_SLIDING	= 24
LEAF_1L_POCKET				= 25
LEAF_1L_POCKET_M			= 26
LEAF_2L_POCKET				= 27
LEAF_1L_MULTIPANEL			= 28
LEAF_1L_MULTIPANEL_M		= 29
LEAF_2L_MULTIPANEL			= 30
LEAF_REVOLVING				= 31
LEAF_3L_2SLIDING_CENTER		= 32
LEAF_GAR_1L_UP_AND_OVER		= 100
LEAF_GAR_1L_UP_SLIDING		= 101
LEAF_GAR_1L_SECTIONAL		= 102
LEAF_GAR_2L_SIDE_HUNG		= 103
LEAF_GAR_2L_ROLLSIDE		= 104
LEAF_GAR_1L_ROLLUP			= 105

! gs_door_rail_ext_m:
EXT_RAIL_OFF				= 1
EXT_RAIL_BOTT				= 2
EXT_RAIL_TOP				= 3
EXT_RAIL_BOTT_TOP			= 4

DET2D_FS_OFF				= 0
DET2D_FS_SCALESENS			= -1
DET2D_FS_SIMPLE				= 11		! Simple --> INT 200
DET2D_FS_MIDDLE				= 21		! Middle --> INT 100
DET2D_FS_DETAILED			= 30		! Detailed --> INT 50
DET2D_FS_SIMPLE_CHI			= 51		! Chinese Simple
DET2D_FS_DETAILED_CHI		= 52		! Chinese Detailed

! iLoD2D
SYMBD_OFF							= 0
SYMBD_SCALESENS						= 1
SYMBD_S_1LINE						= 11
SYMBD_S_2LINE						= 12
SYMBD_S_1LINE_FRAME					= 13
SYMBD_S_1LINECL						= 14
SYMBD_S_5							= 15
SYMBD_S_6							= 16
SYMBD_S_7							= 17
SYMBD_S_8							= 18
SYMBD_S_9							= 19
SYMBD_M_1LINELEAF_2LINE				= 21
SYMBD_M_2LINELEAFCL_GLASS			= 22
SYMBD_M_1LINELEAF_1LINE				= 23
SYMBD_M_4							= 24
SYMBD_M_5							= 25
SYMBD_M_6							= 26
SYMBD_M_7							= 27
SYMBD_M_8							= 28
SYMBD_M_9							= 29
SYMBD_D_2LINELEAFOP_GLASS			= 31
SYMBD_D_2LINELEAFCL_REBATEONGLASS	= 32
SYMBD_D_2LINELEAFOP_2LINE			= 33
SYMBD_D_2LINELEAFOP_SASH			= 34
SYMBD_D_1LINELEAF_GLASS				= 35
SYMBD_D_2LINELEAFCL_SASHWLINE		= 36
SYMBD_D_1LINELEAF_SASHWLINE			= 37
SYMBD_D_2LEAFOPGLASS_GLASS			= 38
SYMBD_D_9							= 39

SYMBGLASS_NOGLASS					= 0
SYMBGLASS_SIMPLEGLASS				= 1
SYMBGLASS_DOUBLEGLASS				= 2


! gs_iSwingType:
LINE_SHAPE_SWING_NONE			= 0
LINE_SHAPE_SWING_CURVED			= 1
LINE_SHAPE_SWING_STRAIGHT		= 2
LINE_SHAPE_SWING_SIMPLE_LINE	= 3
LINE_SHAPE_SWING_LEAF_LINE		= 4

! ifc_optype:
DOOR_OP_NOT_DEFINED						= 0
DOOR_OP_SINGLE_DOOR_SINGLE_SWING		= 1
DOOR_OP_DOUBLE_DOOR_SINGLE_SWING		= 2
DOOR_OP_SINGLE_DOOR_DOUBLE_SWING		= 3
DOOR_OP_DOUBLE_DOOR_DOUBLE_SWING		= 4
DOOR_OP_DOUBLE_DOOR_SINGLE_SWING_OPP	= 5
DOOR_OP_SINGLE_DOOR_SLIDING				= 6
DOOR_OP_DOUBLE_DOOR_SLIDING				= 7
DOOR_OP_SINGLE_DOOR_FOLDING				= 8
DOOR_OP_DOUBLE_DOOR_FOLDING				= 9
DOOR_OP_REVOLVING						= 10
DOOR_OP_ROLLING_UP						= 11
DOOR_OP_USER_DEFINED					= 12

! gs_iSlidingType:
LINE_SHAPE_SLIDING_NONE			= 0
LINE_SHAPE_SLIDING_ARROW		= 1
LINE_SHAPE_SLIDING_SIMPLE_LINE	= 2

! gs_frame_style_m
FRAME_STYLE_BLOCK				= 1
FRAME_STYLE_DOUBLE_REBATE		= 2
FRAME_STYLE_SIMPLE_REBATE		= 3
FRAME_STYLE_METAL				= 4
FRAME_STYLE_DOUBLE_EGRESS_METAL = 5
FRAME_STYLE_EXTRUSION			= 6
FRAME_STYLE_WRAPPED_EXTRUSION	= 7 

! iVentilationProfileType
VENTPROFILE_OVER_FRAME		= 2
VENTPROFILE_OVER_GLAZING	= 3

! iMullionStyle:
MULLION_NONE			= 1
MULLION_HVGRID			= 2
MULLION_EDITABLEGRID	= 3
MULLION_CUSTOM			= 4
MULLION_PRAIRIE			= 5
MULLION_DIVIDED			= 6
MULLION_SUNBURST_1		= 7
MULLION_SUNBURST_2		= 8
MULLION_SUNBURST_3		= 9
MULLION_SUNBURST_4		= 10
MULLION_SUNBURST_5		= 11
MULLION_SUNBURST_6		= 12
MULLION_SOLID_GLAZED	= 13
MULLION_DIVIDED_FRAME	= 14
MULLION_SOLID_PANEL		= 15
MULLION_VENT_PANEL		= 16
MULLION_FRENCH_PANEL	= 17

! gs_kickboard_set_to_edit
KICKBOARD_IN_MAIN_PANEL		= 1
KICKBOARD_IN_SECOND_PANEL	= 2

dim stKickBoardSetToLeaf[2]
	stKickBoardSetToLeaf[1] = `Полотно Двери`
	stKickBoardSetToLeaf[2] = `Боковая Панель`


ac_unit_width = ac_unit_width + gs_unit_extra_left + gs_unit_extra_right

gs_slidingext	= 0
gs_pocket		= 0
gs_bifold		= 0
gs_sliding 		= 0

if	gs_leaf_optype_m = LEAF_1L_EXTERNAL_SLIDING | \
	gs_leaf_optype_m = LEAF_1L_EXTERNAL_SLIDING_M | \
	gs_leaf_optype_m = LEAF_2L_EXTERNAL_SLIDING then
		gs_slidingext	= 1
endif
if	gs_leaf_optype_m = LEAF_1L_POCKET | \
	gs_leaf_optype_m = LEAF_1L_POCKET_M | \
	gs_leaf_optype_m = LEAF_2L_POCKET then
		gs_pocket		= 1
endif
if	gs_leaf_optype_m = LEAF_1L_MULTIPANEL | \
	gs_leaf_optype_m = LEAF_1L_MULTIPANEL_M | \
	gs_leaf_optype_m = LEAF_2L_MULTIPANEL then
		gs_bifold		= 1
endif
if	gs_leaf_optype_m = LEAF_2L_1SLIDING | \
	gs_leaf_optype_m = LEAF_2L_1SLIDING_M | \
	gs_leaf_optype_m = LEAF_2L_2SLIDING | \
	gs_leaf_optype_m = LEAF_2L_2SLIDING_M | \
	gs_leaf_optype_m = LEAF_3L_2SLIDING | \
	gs_leaf_optype_m = LEAF_3L_2SLIDING_M | \
	gs_leaf_optype_m = LEAF_4L_2SLIDING | \
	gs_leaf_optype_m = LEAF_4L_3SLIDING | \
	gs_leaf_optype_m = LEAF_4L_3SLIDING_M | \
	gs_leaf_optype_m = LEAF_4L_4SLIDING | \
	gs_leaf_optype_m = LEAF_4L_4SLIDING_M then
		gs_sliding 		= 1
endif

if not(gs_pocket) then
	gs_pocket_door_frame	= 0
endif

if gs_sliding then
    SlidLeafNum = 1
    if	gs_leaf_optype_m = LEAF_2L_1SLIDING |\
	    gs_leaf_optype_m = LEAF_2L_1SLIDING_M |\
	    gs_leaf_optype_m = LEAF_2L_2SLIDING |\
	    gs_leaf_optype_m = LEAF_2L_2SLIDING_M then SlidLeafNum = 2
    if	gs_leaf_optype_m = LEAF_3L_2SLIDING |\
	    gs_leaf_optype_m = LEAF_3L_2SLIDING_M then SlidLeafNum = 3
    if	gs_leaf_optype_m = LEAF_4L_2SLIDING |\
	    gs_leaf_optype_m = LEAF_4L_3SLIDING |\
	    gs_leaf_optype_m = LEAF_4L_3SLIDING_M |\
	    gs_leaf_optype_m = LEAF_4L_4SLIDING |\
	    gs_leaf_optype_m = LEAF_4L_4SLIDING_M then SlidLeafNum = 4

    PanelElongOverlap = ((SlidLeafNum-1) / SlidLeafNum) * gs_leaf_overlap
    if	gs_leaf_optype_m = LEAF_4L_2SLIDING |\
	    gs_leaf_optype_m = LEAF_4L_4SLIDING |\
	    gs_leaf_optype_m = LEAF_4L_4SLIDING_M then PanelElongOverlap = gs_leaf_overlap/2
endif


! =============================================================================
! Uniform Sashes
! =============================================================================

iMullionStyleOriginal_02 = iMullionStyle_02
iMullionStyleOriginal_05 = iMullionStyle_05
iMullionStyleOriginal_06 = iMullionStyle_06
iMullionStyleOriginal_07 = iMullionStyle_07
iMullionStyleOriginal_09 = iMullionStyle_09
iMullionStyleOriginal_10 = iMullionStyle_10
iMullionStyleOriginal_11 = iMullionStyle_11

if gs_sash_uniform then

	! Changes made here must be transferred to the migration macros too!

	iMullionStyle_02 = iMullionStyle_00
	iMullionStyle_05 = iMullionStyle_00
	iMullionStyle_06 = iMullionStyle_00
	iMullionStyle_07 = iMullionStyle_00
	iMullionStyle_09 = iMullionStyle_00
	iMullionStyle_10 = iMullionStyle_00
	iMullionStyle_11 = iMullionStyle_00

	gs_cust_panel_02 = gs_cust_panel_00
	gs_cust_panel_05 = gs_cust_panel_00
	gs_cust_panel_06 = gs_cust_panel_00
	gs_cust_panel_07 = gs_cust_panel_00
	gs_cust_panel_09 = gs_cust_panel_00
	gs_cust_panel_10 = gs_cust_panel_00
	gs_cust_panel_11 = gs_cust_panel_00
	gs_cust_panel2_02 = gs_cust_panel_00
	gs_cust_panel2_05 = gs_cust_panel_00
	gs_cust_panel2_06 = gs_cust_panel_00
	gs_cust_panel2_07 = gs_cust_panel_00
	gs_cust_panel2_09 = gs_cust_panel_00
	gs_cust_panel2_10 = gs_cust_panel_00
	gs_cust_panel2_11 = gs_cust_panel_00

	vgn2_02 = vgn_02
	hgn2_02 = hgn_02

	if gs_sidelight_left then
		if (iMullionStyle_00 = MULLION_FRENCH_PANEL) then
			sashFrameWidth[1][5] = sashFrameWidth[1][9]
			sashFrameWidth[2][5] = sashFrameWidth[2][9]
			sashFrameWidth[3][5] = sashFrameWidth[3][9]
			sashFrameWidth[4][5] = sashFrameWidth[4][9]
		endif

		vgn_05 = vgn_09
		hgn_05 = hgn_09
		vgn2_05 = vgn2_09
		hgn2_05 = hgn2_09
		gs_horiz_div_height_05 = gs_horiz_div_height_09

		if gs_bSidelight_fr_hdiv_left then
			vgn_07 = vgn_11
			hgn_07 = hgn_11
			vgn2_07 = vgn2_11
			hgn2_07 = hgn2_11
			gs_horiz_div_height_07 = gs_horiz_div_height_11
		endif

		vgn_06 = vgn_09
		hgn_06 = hgn_02
		vgn2_06 = vgn2_09
		hgn2_06 = hgn2_02
		gs_horiz_div_height_06 = gs_horiz_div_height_02
		vgn_10 = vgn_09
		hgn_10 = hgn_02
		vgn2_10 = vgn2_09
		hgn2_10 = hgn2_02
		gs_horiz_div_height_10 = gs_horiz_div_height_02
	else
		vgn_06 = vgn_05
		hgn_06 = hgn_02
		vgn2_06 = vgn2_05
		hgn2_06 = hgn2_02
		gs_horiz_div_height_06 = gs_horiz_div_height_02
	endif
endif


! =============================================================================
! Frame Thickness
! =============================================================================

gs_frame_thk = gs_fthk

if gs_frame_wthk  | gs_frame_style_m = FRAME_STYLE_WRAPPED_EXTRUSION then
	if gs_sframe then
		gs_frame_thkin = gs_frame_thk
	endif
else
	gs_frame_thkin = gs_frame_thk
endif


! iLeafShape
LEAF_SHAPE_RECTANGULAR		= 1
LEAF_SHAPE_ARCHED			= 2
LEAF_SHAPE_HALFARCHED		= 3

! iWindowShape:
SHAPE_RECTANGULAR			= 0
SHAPE_ARCHED				= 1
SHAPE_ROUND					= 2
SHAPE_EYEBROWS				= 3
SHAPE_HALFCIRCLE			= 4 	! straight side is horizontal
SHAPE_MULTISIDE				= 5
SHAPE_OCTAGONAL				= 6
SHAPE_HALFARCH				= 7
SHAPE_PENTAGON				= 8
SHAPE_QUARTERROUND			= 9
SHAPE_HALFROUND				= 10 	! straight side is vertical
SHAPE_TRAPEZOID				= 11
SHAPE_TRIANGLE				= 12
SHAPE_GOTHICARCH			= 13
SHAPE_ELLIPSEARCH			= 14
SHAPE_ROMBUS				= 15
SHAPE_HORSESHOE				= 16
SHAPE_OGEECENTERED			= 17
SHAPE_SARACENIC				= 18
SHAPE_T						= 19
SHAPE_HALF_T_LEFT			= 20
SHAPE_ARCHED_T				= 21
SHAPE_ARCHED_HALF_T_LEFT	= 22
SHAPE_PARALLELOGRAM			= 23
SHAPE_ELLIPSE				= 24
SHAPE_CORNER_TRIANGLE		= 25
SHAPE_QUARTERROUND_NOFRAME	= 26
SHAPE_HALF_T_RIGHT			= 27
SHAPE_ARCHED_HALF_T_RIGHT	= 28

! gs_opening_dir_sl_m:
OPENING_DIR_DEFAULT_OUTSIDE	= 1
OPENING_DIR_FLIPPED_INSIDE	= 2

! gs_SidelightTransomRelation_m:
SIDELIGHT_UNDER_TRANSOM		= 1
SIDELIGHT_OVER_TRANSOM		= 2
SIDELIGHT_CROSSES_TRANSOM	= 3

! gs_iLeavesConfig:
LEAVESCONFIG_UNIFORM	= 1
LEAVESCONFIG_ASYMM		= 2

! Frame Element Joinery/
MITERED_JOINT	= 1
BUTT_JOINT		= 2

! Edit Sash/gs_sash_set_to_edit:
SET_TRANSOM 	= 1
SET_SIDELIGHT_2	= 2
SET_SIDELIGHT_1	= 3
SET_TRANSOM_2	= 4
SET_TRANSOM_1	= 5


iLeafShape = LEAF_SHAPE_RECTANGULAR
if not(gs_door_transom) & bArchedTop then
	if	gs_leaf_optype_m = LEAF_1L_SIDE_HUNG |\
		gs_leaf_optype_m = LEAF_1L_SIDE_HUNG_M |\
		gs_leaf_optype_m = LEAF_1L_DOUBLE_ACTING |\
		gs_leaf_optype_m = LEAF_1L_DOUBLE_ACTING_M then

		iLeafShape = LEAF_SHAPE_ARCHED
	else
		iLeafShape = LEAF_SHAPE_HALFARCHED
	endif
endif

bFrameWOutRebate = (gs_leaf_optype_m = LEAF_1L_DOUBLE_ACTING |\
					gs_leaf_optype_m = LEAF_1L_DOUBLE_ACTING_M |\
					gs_leaf_optype_m = LEAF_2L_DOUBLE_ACTING |\
					gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS |\
					gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS_M |\
					gs_leaf_optype_m = LEAF_1L_PIVOT |\
					gs_leaf_optype_m = LEAF_1L_PIVOT_M |\
					gs_leaf_optype_m = LEAF_2L_1SLIDING |\
					gs_leaf_optype_m = LEAF_2L_1SLIDING_M |\
					gs_leaf_optype_m = LEAF_2L_2SLIDING |\
					gs_leaf_optype_m = LEAF_2L_2SLIDING_M |\
					gs_leaf_optype_m = LEAF_3L_2SLIDING |\
					gs_leaf_optype_m = LEAF_3L_2SLIDING_M |\
					gs_leaf_optype_m = LEAF_4L_2SLIDING |\
					gs_leaf_optype_m = LEAF_4L_3SLIDING |\
					gs_leaf_optype_m = LEAF_4L_3SLIDING_M |\
					gs_leaf_optype_m = LEAF_4L_4SLIDING |\
					gs_leaf_optype_m = LEAF_4L_4SLIDING_M |\
					gs_leaf_optype_m = LEAF_1L_EXTERNAL_SLIDING |\
					gs_leaf_optype_m = LEAF_1L_EXTERNAL_SLIDING_M |\
					gs_leaf_optype_m = LEAF_2L_EXTERNAL_SLIDING |\
					gs_leaf_optype_m = LEAF_1L_POCKET |\
					gs_leaf_optype_m = LEAF_1L_POCKET_M |\
					gs_leaf_optype_m = LEAF_2L_POCKET |\
					gs_leaf_optype_m = LEAF_1L_MULTIPANEL |\
					gs_leaf_optype_m = LEAF_1L_MULTIPANEL_M |\
					gs_leaf_optype_m = LEAF_2L_MULTIPANEL)

bForceToShowFrameStyle = (	gs_leaf_optype_m = LEAF_1L_DOUBLE_ACTING |\
							gs_leaf_optype_m = LEAF_1L_DOUBLE_ACTING_M |\
							gs_leaf_optype_m = LEAF_2L_DOUBLE_ACTING |\
							gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS |\
							gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS_M)


gs_rebate_width_Sliding = gs_rebate_width
if bFrameWOutRebate then gs_rebate_width_Sliding = 0



! Uniform frame width
if gs_uniform_framewidth then
	gs_frame_width_left 			= gs_frame_width
	gs_frame_width_left_2			= gs_frame_width
	gs_frame_width_low_left_sl		= gs_frame_width
	gs_frame_width_right			= gs_frame_width
	gs_frame_width_right_2			= gs_frame_width
	gs_frame_width_low_right_sl		= gs_frame_width
	gs_frame_width_transom			= gs_frame_width
	gs_frame_width_upper			= gs_frame_width
endif

if bArchedTop then
	gs_frame_width_left 			= gs_frame_width_right
	gs_frame_width_upper			= gs_frame_width_right
endif


if abs(gs_frame_width_left_2)<EPS then gs_frame_width_left_2 = gs_frame_width
if abs(gs_frame_width_right_2)<EPS then gs_frame_width_right_2 = gs_frame_width
if abs(gs_frame_width_low_left_sl)<EPS then gs_frame_width_low_left_sl = gs_frame_width
if abs(gs_frame_width_low_right_sl)<EPS then gs_frame_width_low_right_sl = gs_frame_width
if abs(gs_frame_width_transom)<EPS then gs_frame_width_transom = gs_frame_width

openingArchHeight = ac_wallhole_height - gs_shoulder_h


if gs_sidelight_left then
	gs_sidelight_WHole_width_left = gs_sidelight_width_left + gs_tolerance_left - gs_frame_width_left_2 - gs_tolerance_left_2
else
	gs_sidelight_WHole_width_left = 0
endif
if gs_sidelight_right then
	gs_sidelight_WHole_width_right = gs_sidelight_width_right + gs_tolerance_right - gs_frame_width_right_2 - gs_tolerance_right_2
else
	gs_sidelight_WHole_width_right = 0
endif

!********** middle stacking for multipanel folding doors




!********** different frame widths

gs_frame_width_orig = gs_frame_width

!********** to leaves configuration

is2Leaf =	(gs_leaf_optype_m = LEAF_2L_SIDE_HUNG		|\
			 gs_leaf_optype_m = LEAF_2L_DOUBLE_ACTING	|\
			 gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS	|\
			 gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS_M	)

bShowLeavesConfig = (is2Leaf & not(bArchedTop & not(gs_door_transom)))

!************** door leaf / leafs width and height

if gs_iLeavesConfig = LEAVESCONFIG_UNIFORM | not(bShowLeavesConfig) then
	lar = ac_leaf_width / 2
	lal = ac_leaf_width / 2
else
	lar = gs_SecondLeaf_w
	lal = ac_leaf_width - gs_SecondLeaf_w
endif


! =============================================================================
! Casement IDs
! =============================================================================

dim CasementTypeArray[3][3]
CasementTypeArray[1][1]	= 1
CasementTypeArray[1][2]	= 1
CasementTypeArray[1][3]	= 1
CasementTypeArray[2][1]	= 1
CasementTypeArray[2][2]	= 1
CasementTypeArray[2][3]	= 1
CasementTypeArray[3][1]	= 1
CasementTypeArray[3][2]	= 1
CasementTypeArray[3][3]	= 1

dim CasementShapeArray[3][3]
CasementShapeArray[1][1]	= 1
if bArchedTop then
	CasementShapeArray[1][2]	= 2	! SASH_SHAPE_ARCHED
else
	CasementShapeArray[1][2]	= 1
endif
CasementShapeArray[1][3]	= 1
CasementShapeArray[2][1]	= 1
CasementShapeArray[2][2]	= 1
CasementShapeArray[2][3]	= 1
CasementShapeArray[3][1]	= 1
CasementShapeArray[3][2]	= 1
CasementShapeArray[3][3]	= 1


!************************* rebate width

bOpeningDirectionSL	= (gs_opening_dir_sl_m = OPENING_DIR_FLIPPED_INSIDE)


! =============================================================================
! Sidelight-Transom Relation handling
! =============================================================================
if gs_SidelightTransomRelation_m = SIDELIGHT_UNDER_TRANSOM then
	gs_LeftMullion_Top		= 0
	gs_RightMullion_Top		= 0
	gs_Transom_toLeft		= 1
	gs_Transom_toRight		= 1
endif
if gs_SidelightTransomRelation_m = SIDELIGHT_OVER_TRANSOM then
	gs_LeftMullion_Top		= 1
	gs_RightMullion_Top		= 1
	gs_Transom_toLeft		= 0
	gs_Transom_toRight		= 0
endif
if gs_SidelightTransomRelation_m = SIDELIGHT_CROSSES_TRANSOM then
	gs_LeftMullion_Top		= 1
	gs_RightMullion_Top		= 1
	gs_Transom_toLeft		= 1
	gs_Transom_toRight		= 1
endif


simple_sash_width = gs_sash_width-gs_sidelight_rebate_width

!! CURVED TOP CALCULATION !!
if bArchedTop then
	ace = ac_wallhole_width / 2
	bce = max(0.005, ac_wallhole_height - gs_shoulder_h)

	if bce > EPS then
		r2=(ace^2+bce^2)/(2*bce)
		if abs(ace/r2) > (1 - EPS) then r2=r2+0.0000001

		fce				= sqr(r2^2-ace^2)
		fcefw			= sqr((r2-gs_frame_width_left-gs_tolerance_left)^2-(ace-gs_frame_width_left-gs_tolerance_left)^2)
		fce_Sl_rebate	= sqr((r2-gs_frame_width_left-gs_tolerance_left+gs_sidelight_rebate_width)^2-(ace-gs_frame_width_left-gs_tolerance_left+gs_sidelight_rebate_width)^2)
		fce_simple		= sqr((r2-gs_frame_width_left-gs_tolerance_left-simple_sash_width)^2-(ace-gs_frame_width_left-gs_tolerance_left-simple_sash_width)^2)
		fce_leaf_rebate	= sqr((r2-gs_frame_width_left-gs_tolerance_left+gs_rebate_width)^2-(ace-gs_frame_width_left-gs_tolerance_left+gs_rebate_width)^2)
	else
		bArchedTop = 0
	endif
endif
!! END OF CURVED TOP CALCULATION !!


! =============================================================================
! Sash Sizes
! =============================================================================

dim sashWidthArray[3][3]
dim sashHeightArray[3][3]
dim sashPosXArray[3][3]
dim sashPosYArray[3][3]
for i=1 to 3
	for j=1 to 3
		sashWidthArray[i][j]	= 0
		sashHeightArray[i][j]	= 0
		sashPosXArray[i][j]		= 0
		sashPosYArray[i][j]		= 0
	next j
next i

! Transom Sashes ==============================================================

cavityHeight = gs_transom_height - gs_frame_width_transom - gs_frame_width_upper + 2*gs_sidelight_rebate_width
cavityBottom = ac_unit_height - gs_transom_height + gs_frame_width_transom - gs_sidelight_rebate_width

! Upper Left Sash -------------------------------------------------------------

if gs_door_transom & gs_sidelight_left & (gs_SidelightTransomRelation_m = SIDELIGHT_CROSSES_TRANSOM) then
	cavityLeft	= -ac_unit_width/2 + gs_frame_width_left - gs_sidelight_rebate_width
	cavityRight	= -ac_unit_width/2 + gs_sidelight_width_left - gs_frame_width_left_2 + gs_sidelight_rebate_width

	sashWidthArray[1][1]	= cavityRight - cavityLeft
	sashHeightArray[1][1]	= cavityHeight
	sashPosXArray[1][1]		= cavityLeft + (cavityRight - cavityLeft)/2
	sashPosYArray[1][1]		= cavityBottom
endif

! Upper Middle Sash -----------------------------------------------------------

if gs_door_transom then
	if gs_sidelight_left &\
	((gs_SidelightTransomRelation_m = SIDELIGHT_CROSSES_TRANSOM) |\
	 (gs_SidelightTransomRelation_m = SIDELIGHT_OVER_TRANSOM)) then
		cavityLeft	= -ac_unit_width/2 + gs_sidelight_width_left - gs_sidelight_rebate_width
	else
		cavityLeft	= -ac_unit_width/2 + gs_frame_width_left - gs_sidelight_rebate_width
	endif
	if gs_sidelight_right &\
	((gs_SidelightTransomRelation_m = SIDELIGHT_CROSSES_TRANSOM) |\
	 (gs_SidelightTransomRelation_m = SIDELIGHT_OVER_TRANSOM)) then
		cavityRight	=  ac_unit_width/2 - gs_sidelight_width_right + gs_sidelight_rebate_width
	else
		cavityRight	=  ac_unit_width/2 - gs_frame_width_right + gs_sidelight_rebate_width
	endif

	sashWidthArray[1][2]	= cavityRight - cavityLeft
	sashHeightArray[1][2]	= cavityHeight
	sashPosXArray[1][2]		= cavityLeft + (cavityRight - cavityLeft)/2
	sashPosYArray[1][2]		= cavityBottom
endif

! Upper Right Sash ------------------------------------------------------------

if gs_door_transom & gs_sidelight_right & (gs_SidelightTransomRelation_m = SIDELIGHT_CROSSES_TRANSOM) then
	cavityLeft	= ac_unit_width/2 - gs_sidelight_width_right + gs_frame_width_right_2 - gs_sidelight_rebate_width
	cavityRight	= ac_unit_width/2 - gs_frame_width_right + gs_sidelight_rebate_width

	sashWidthArray[1][3]	= cavityRight - cavityLeft
	sashHeightArray[1][3]	= cavityHeight
	sashPosXArray[1][3]		= cavityRight - (cavityRight - cavityLeft)/2
	sashPosYArray[1][3]		= cavityBottom
endif


! Sidelight Sashes ============================================================

if gs_door_transom &\
	((gs_SidelightTransomRelation_m = SIDELIGHT_CROSSES_TRANSOM) |\
	 (gs_SidelightTransomRelation_m = SIDELIGHT_UNDER_TRANSOM)) then
	cavityTop = ac_unit_height - gs_transom_height + gs_sidelight_rebate_width
else
	cavityTop = ac_unit_height - gs_frame_width_upper + gs_sidelight_rebate_width
endif

! Left Sidelight Sash ---------------------------------------------------------

if gs_sidelight_left then
	if gs_bSidelight_fr_hdiv_left then
		cavityBottom = gs_sidelight_fr_hdiv_hgt_left + gs_sidelight_fr_hdiv_wdt_left - gs_sidelight_rebate_width
	else
		cavityBottom = gs_sidelight_parapet_hgt_left + gs_frame_width_low_left_sl + (gs_sidelight_parapet_hgt_left > EPS) * gs_tolerance_low_left_sl - gs_sidelight_rebate_width
	endif
	cavityLeft	= -ac_unit_width/2 + gs_frame_width_left - gs_sidelight_rebate_width
	cavityRight	= -ac_unit_width/2 + gs_sidelight_width_left - gs_frame_width_left_2 + gs_sidelight_rebate_width

	sashWidthArray[2][1]	= cavityRight - cavityLeft
	sashHeightArray[2][1]	= cavityTop - cavityBottom
	sashPosXArray[2][1]		= cavityLeft + (cavityRight - cavityLeft)/2
	sashPosYArray[2][1]		= cavityBottom
endif

! Left Sidelight Lower Sash ---------------------------------------------------------

if gs_sidelight_left & gs_bSidelight_fr_hdiv_left then
	cavityLowTop = gs_sidelight_fr_hdiv_hgt_left + gs_sidelight_rebate_width
	cavityLowBottom = gs_sidelight_parapet_hgt_left + gs_frame_width_low_left_sl + (gs_sidelight_parapet_hgt_left > EPS) * gs_tolerance_low_left_sl - gs_sidelight_rebate_width

	sashWidthArray[3][1]	= cavityRight - cavityLeft
	sashHeightArray[3][1]	= cavityLowTop - cavityLowBottom
	sashPosXArray[3][1]		= cavityLeft + (cavityRight - cavityLeft)/2
	sashPosYArray[3][1]		= cavityLowBottom
endif


! Right Sidelight Sash --------------------------------------------------------

if gs_sidelight_right then
	if gs_bSidelight_fr_hdiv_right then
		cavityBottom = gs_sidelight_fr_hdiv_hgt_right + gs_sidelight_fr_hdiv_wdt_right - gs_sidelight_rebate_width
	else
		cavityBottom = gs_sidelight_parapet_hgt_right + gs_frame_width_low_right_sl + (gs_sidelight_parapet_hgt_right > EPS) * gs_tolerance_low_right_sl - gs_sidelight_rebate_width
	endif
	cavityLeft	= ac_unit_width/2 - gs_sidelight_width_right + gs_frame_width_right_2 - gs_sidelight_rebate_width
	cavityRight	= ac_unit_width/2 - gs_frame_width_right + gs_sidelight_rebate_width

	sashWidthArray[2][3]	= cavityRight - cavityLeft
	sashHeightArray[2][3]	= cavityTop - cavityBottom
	sashPosXArray[2][3]		= cavityRight - (cavityRight - cavityLeft)/2
	sashPosYArray[2][3]		= cavityBottom
endif

! Right Sidelight Lower Sash ---------------------------------------------------------

if gs_sidelight_right & gs_bSidelight_fr_hdiv_right then
	cavityLowTop = gs_sidelight_fr_hdiv_hgt_right + gs_sidelight_rebate_width
	cavityLowBottom = gs_sidelight_parapet_hgt_right + gs_frame_width_low_right_sl + (gs_sidelight_parapet_hgt_right > EPS) * gs_tolerance_low_right_sl - gs_sidelight_rebate_width

	sashWidthArray[3][3]	= cavityRight - cavityLeft
	sashHeightArray[3][3]	= cavityLowTop - cavityLowBottom
	sashPosXArray[3][3]		= cavityLeft + (cavityRight - cavityLeft)/2
	sashPosYArray[3][3]		= cavityLowBottom
endif


! =============================================================================
! Ventilation Profile
! =============================================================================

if not(bEnableVentilationProfile & bVentilationProfile & (iVentilationProfileType = VENTPROFILE_OVER_GLAZING)) then
	isVentilationProfileInSash_01	= 0
	isVentilationProfileInSash_02	= 0
	isVentilationProfileInSash_03	= 0
	isVentilationProfileInSash_04	= 0
	isVentilationProfileInSash_05	= 0
	isVentilationProfileInSash_06	= 0
	isVentilationProfileInSash_07	= 0
	isVentilationProfileInSash_08	= 0
	isVentilationProfileInSash_09	= 0
	isVentilationProfileInSash_10	= 0
	isVentilationProfileInSash_11	= 0
endif


! =============================================================================
! Enable Kick Board
! =============================================================================

bEnableKickBoard	= not(bBombShelter)
bSecondKickBoard	= bEnableKickBoard & bAsymmetricLeafs


! =============================================================================
! Parameters locking
! =============================================================================

bUncutFillEnable = (iDoorPanelType = 15 |\
					iDoorPanelType = 17 |\
					iDoorPanelType = 18 |\
					iDoorPanelType = 19 |\
					iDoorPanelType = 20 |\
					iDoorPanelType = 21 |\
					iDoorPanelType = 35 |\
					iDoorPanelType = 39 |\
					iDoorPanelType = 40 |\
					iDoorPanelType = 45 |\
					iDoorPanelType = 46 |\
					iDoorPanelType = 47 |\
					iDoorPanelType = 48 |\
					iDoorPanelType = 53 |\
					iDoorPanelType = 54 |\
					iDoorPanelType = 64 |\
					iDoorPanelType = 75 |\
					iDoorPanelType = 36 |\
					iDoorPanelType = 37 |\
					iDoorPanelType = 38 |\
					iDoorPanelType = 39)

bUncutParametersLock = not(gs_sidelight_left) & not(gs_sidelight_right) & not(bUncutFillEnable)
bGlass2DParametersLock = (lod2D_Glazing = 2) | not(bUncutFillEnable)	! TODO B-276
bGlass3DParametersLock =   (iDoorPanelType = 0 |\
							iDoorPanelType = 1 |\
							iDoorPanelType = 5 |\
							iDoorPanelType = 6 |\
							iDoorPanelType = 8 |\
							iDoorPanelType = 7 |\
							iDoorPanelType = 9 |\
							iDoorPanelType = 10 |\
							iDoorPanelType = 11 |\
							iDoorPanelType = 12 |\
							iDoorPanelType = 41 |\
							iDoorPanelType = 42 |\
							iDoorPanelType = 43 |\
							iDoorPanelType = 44 |\
							iDoorPanelType = 49 |\
							iDoorPanelType = 50 |\
							iDoorPanelType = 57 |\
							iDoorPanelType = 58 |\
							iDoorPanelType = 59 |\
							iDoorPanelType = 60 |\
							iDoorPanelType = 69 |\
							iDoorPanelType = 73 |\
							iDoorPanelType = 74) & not(gs_door_transom)

if gs_sash_uniform then
	_bOneFrenchSidelightSashOnLeft = not(gs_bSidelight_fr_hdiv_left) & (iMullionStyle_00 = MULLION_FRENCH_PANEL)
	_bOneFrenchSidelightSashOnRight = not(gs_bSidelight_fr_hdiv_right) & (iMullionStyle_00 = MULLION_FRENCH_PANEL)
else
	_bOneFrenchSidelightSashOnLeft = not(gs_bSidelight_fr_hdiv_left) & (iMullionStyle_09 = MULLION_FRENCH_PANEL)
	_bOneFrenchSidelightSashOnRight = not(gs_bSidelight_fr_hdiv_right) & (iMullionStyle_05 = MULLION_FRENCH_PANEL)
endif

bDisableSidelightSashWidth = ((gs_sidelight_left & _bOneFrenchSidelightSashOnLeft & not(gs_sidelight_right)) exor\
							  (not(gs_sidelight_left) & gs_sidelight_right & _bOneFrenchSidelightSashOnRight)) |\
							 (gs_sidelight_left & _bOneFrenchSidelightSashOnLeft & gs_sidelight_right & _bOneFrenchSidelightSashOnRight)
]]>
</Script_1D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_PR SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_PR>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_UI SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[

! =============================================================================
! Tabpage Structure Definition
! =============================================================================

! call all available page fix IDs
call "ui_tabIDlistHierarchy_m" parameters  iUITreeStandardType = 10,		!INT_STANDARD_DOOR_UI
		returned_parameters iUiID_Root,
							iUiID_Shape,			iParID_Shape,
							iUiID_NominalSizes, 	iParID_NominalSizes,
							iUiID_DoorSettOpening,	iParID_DoorSettOpening,
							iUiID_FrameSettings,	iParID_FrameSettings,
							iUiID_VentProfile,		iParID_VentProfile,
							iUiID_FrameSettingsGar,	iParID_FrameSettingsGar,
							iUiID_VentProfileGar,	iParID_VentProfileGar,
							iUiID_LeafSettingsGar,	iParID_LeafSettingsGar,
							iUiID_LeafSettingsGar2,	iParID_LeafSettingsGar2,
							iUiID_LeafTypeHandle,	iParID_LeafTypeHandle,
							iUiID_LeafSymbol_CHI,	iParID_LeafSymbol_CHI,
							iUiID_SidePanel,		iParID_SidePanel,
							iUiID_HandleAndKickBoard,	iParID_HandleAndKickBoard,
							iUiID_LeafTypeHandle2,	iParID_LeafTypeHandle2,
							iUiID_PassDoorHandle,	iParID_PassDoorHandle,
							iUiID_LeafSashDimensions,	iParID_LeafSashDimensions,
							iUiID_SideSashes,		iParID_SideSashes,
							iUiID_OpeningType,		iParID_OpeningType,
							iUiID_OpLinesDoor,		iParID_OpLinesDoor,
							iUiID_OpLinesSideSashes,	iParID_OpLinesSideSashes,
							iUiID_OpeningGar,		iParID_OpeningGar,
							iUiID_DoorSettOpModAttr,	iParID_DoorSettOpModAttr,
							
							! Wall Opening group
							iUiID_WallOpening,		iParID_WallOpening,
							iUiID_Reveal,			iParID_Reveal,
							iUiID_Closure,			iParID_Closure,
							iUiID_MasonryArch,		iParID_MasonryArch,
							iUiID_Tolerances,		iParID_Tolerances,
							iUiID_WallOpModelAttr,	iParID_WallOpModelAttr,
							
							! Fixtures and Fittings group
							iUiID_FixtureFitting,	iParID_FixtureFitting,
							iUiID_Threshold,		iParID_Threshold,
							iUiID_ThresholdSill,	iParID_ThresholdSill,
							iUiID_Sill,				iParID_Sill,
							iUiID_Board,			iParID_Board,
							iUiID_CasingOut,		iParID_CasingOut,
							iUiID_CasingIn,			iParID_CasingIn,
							iUiID_Shutter,			iParID_Shutter,
							iUiID_FixFittingModAttr, iParID_FixFittingModAttr,
				
							iUiID_FloorPlanSection,	iParID_FloorPlanSection,
							iUiID_MinSpace,			iParID_MinSpace,
							iUiID_Descriptions,		iParID_Descriptions



! =============================================================================
! Display actual tabpages
! =============================================================================
ui_current_page gs_ui_current_page

bDoorPanelPage1 	= 0
bDoorPanelPage2 	= 0
bFrameStylePage		= 0
bLeafSashPage		= 0
bOpeningTypePage 	= 0
bSidelightPage 		= 0
bLeafSymbolCHIPage 	= 0

if (gs_sidelight_left & gs_sidelight_right) then
	iWindowType = 102	! DOOR_TwoSidelight
else
	if (gs_sidelight_left | gs_sidelight_right) then
		iWindowType = 101	! DOOR_OneSidelight
	else
		iWindowType = 100	! DOOR_NoSidelight
	endif
endif
	
for iTabs = 1 to vardim1(uiUsedPageIDs)
	! --------------------------------------------------------------------------------
	! Independent pages
	! --------------------------------------------------------------------------------
	if uiUsedPageIDs[iTabs][1]= iUiID_Shape then
		ui_page	uiUsedPageIDs[iTabs][1], uiUsedPageIDs[iTabs][2], uiUsedPageNames[iTabs][1], uiUsedPageNames[iTabs][2]
		if gs_ui_current_page = iUiID_Shape then
			gosub "pageCallShape"
		endif
	endif
	! --------------------------------------------------------------------------------
	! Door Settings and Opening group
	! --------------------------------------------------------------------------------
	if uiUsedPageIDs[iTabs][1]= iUiID_DoorSettOpModAttr then
		ui_page	uiUsedPageIDs[iTabs][1], uiUsedPageIDs[iTabs][2], uiUsedPageNames[iTabs][1], uiUsedPageNames[iTabs][2]
		if gs_ui_current_page = iUiID_DoorSettOpModAttr then
			listFieldDoorOpSettAttrID = iUiID_DoorSettOpModAttr
			gosub "pageCallDoorModAttributes"
		endif
	endif
	if uiUsedPageIDs[iTabs][1]= iUiID_VentProfile then
		ui_page	uiUsedPageIDs[iTabs][1], uiUsedPageIDs[iTabs][2], uiUsedPageNames[iTabs][1], uiUsedPageNames[iTabs][2]
		if gs_ui_current_page = iUiID_VentProfile then
			gosub "pageCallVentilationProfile"
		endif
	endif
	if uiUsedPageIDs[iTabs][1]= iUiID_LeafTypeHandle then
		ui_page	uiUsedPageIDs[iTabs][1], uiUsedPageIDs[iTabs][2], uiUsedPageNames[iTabs][1], uiUsedPageNames[iTabs][2]
		if gs_ui_current_page = iUiID_LeafTypeHandle then
			bDoorPanelPage1 	= 1
			bDoorPanelPage2 	= 0
			bLeafSymbolCHIPage 	= 0
			gosub "pageCallDoorPanelSettings"
		endif
	endif
	if uiUsedPageIDs[iTabs][1]= iUiID_LeafSymbol_CHI then
		ui_page	uiUsedPageIDs[iTabs][1], uiUsedPageIDs[iTabs][2], uiUsedPageNames[iTabs][1], uiUsedPageNames[iTabs][2]
		if gs_ui_current_page = iUiID_LeafSymbol_CHI then
			bDoorPanelPage1 	= 1
			bDoorPanelPage2 	= 0
			bLeafSymbolCHIPage 	= 1
			gosub "pageCallDoorPanelSettings"
		endif
	endif
	if uiUsedPageIDs[iTabs][1]= iUiID_SidePanel then
		ui_page	uiUsedPageIDs[iTabs][1], uiUsedPageIDs[iTabs][2], uiUsedPageNames[iTabs][1], uiUsedPageNames[iTabs][2]
		if gs_ui_current_page = iUiID_SidePanel then
			bDoorPanelPage1 	= 0
			bDoorPanelPage2 	= 1
			bLeafSymbolCHIPage 	= 0
			gosub "pageCallDoorPanelSettings"
		endif
	endif
	if uiUsedPageIDs[iTabs][1]= iUiID_HandleAndKickBoard then
		ui_page	uiUsedPageIDs[iTabs][1], uiUsedPageIDs[iTabs][2], uiUsedPageNames[iTabs][1], uiUsedPageNames[iTabs][2]
		if gs_ui_current_page = iUiID_HandleAndKickBoard then
			gosub "pageCallHandleAndKickBoard"
		endif
	endif
	if uiUsedPageIDs[iTabs][1]= iUiID_FrameSettings then
		ui_page	uiUsedPageIDs[iTabs][1], uiUsedPageIDs[iTabs][2], uiUsedPageNames[iTabs][1], uiUsedPageNames[iTabs][2]
		if gs_ui_current_page = iUiID_FrameSettings then
			bFrameStylePage	= 1
			bLeafSashPage	= 0
			gosub "pageCallDoorFrame"
		endif
	endif
	if uiUsedPageIDs[iTabs][1]= iUiID_LeafSashDimensions then
		ui_page	uiUsedPageIDs[iTabs][1], uiUsedPageIDs[iTabs][2], uiUsedPageNames[iTabs][1], uiUsedPageNames[iTabs][2]
		if gs_ui_current_page = iUiID_LeafSashDimensions then
			bFrameStylePage	= 0
			bLeafSashPage	= 1
			gosub "pageCallDoorFrame"
		endif
	endif
	if uiUsedPageIDs[iTabs][1]= iUiID_SideSashes then
		ui_page	uiUsedPageIDs[iTabs][1], uiUsedPageIDs[iTabs][2], uiUsedPageNames[iTabs][1], uiUsedPageNames[iTabs][2]
		if gs_ui_current_page = iUiID_SideSashes then
			bOpeningTypePage= 0
			bSidelightPage	= 1
			gosub "pageCallCasementRect"
		endif
	endif
	if uiUsedPageIDs[iTabs][1]= iUiID_OpeningType then
		ui_page	uiUsedPageIDs[iTabs][1], uiUsedPageIDs[iTabs][2], uiUsedPageNames[iTabs][1], uiUsedPageNames[iTabs][2]
		if gs_ui_current_page = iUiID_OpeningType then
			bOpeningTypePage= 1
			bSidelightPage	= 0
			gosub "pageCallCasementRect"
		endif
	endif
next iTabs

! =============================================================================
end
! =============================================================================


! --------------------------------------------------------------------------------
! Casement Rectangular (Sidelight related pages)
! --------------------------------------------------------------------------------
"pageCallCasementRect":
	pageStartY = 5

	call "Casement_rectangular" parameters	bSashOptionsPage		= bSidelightPage,
											bOpeningTypePage		= bOpeningTypePage,
											bSlidingUIalternative	= bSlidingUIalternative,
											iWindowType				= iWindowType,
											iWindowClass			= 7,		! WINCLASS_DOORSASH
											isWindow				= 0,
											CasementIDArray 		= CasementIDArray,
											CasementTypeArray		= CasementTypeArray,
											CasementShapeArray		= CasementShapeArray,
											gs_sash_uniform			= gs_sash_uniform,
											gs_sash_set_to_edit		= gs_sash_set_to_edit,
											gs_more_sash_set_to_edit = gs_more_sash_set_to_edit,
											gs_bLeftSLight			= gs_sidelight_left,
											gs_bSLight				= gs_sidelight_right,
											gs_UTrans				= gs_door_transom,
											gs_LTrans				= gs_bSidelight_fr_hdiv_right | gs_bSidelight_fr_hdiv_left,
											gs_UTrans_Div			= gs_door_transom & (gs_SidelightTransomRelation_m = SIDELIGHT_CROSSES_TRANSOM),
											gs_LTrans_Div			= 1,
											gs_bSidelight_fr_hdiv_right	= gs_bSidelight_fr_hdiv_right,
											gs_bSidelight_fr_hdiv_left	= gs_bSidelight_fr_hdiv_left,
											iMullionStyle_00		= iMullionStyle_00,
											iMullionStyle_02		= iMullionStyle_02,
											iMullionStyle_05		= iMullionStyle_05,
											iMullionStyle_06		= iMullionStyle_06,
											iMullionStyle_07		= iMullionStyle_07,
											iMullionStyle_09		= iMullionStyle_09,
											iMullionStyle_10		= iMullionStyle_10,
											iMullionStyle_11		= iMullionStyle_11,
											sashFrameWidth			= sashFrameWidth,
											gs_optype_m_02			= gs_optype_m_02,
											gs_optype_m_05			= gs_optype_m_05,
											gs_optype_m_06			= gs_optype_m_06,
											gs_optype_m_07			= gs_optype_m_07,
											gs_optype_m_09			= gs_optype_m_09,
											gs_optype_m_10			= gs_optype_m_10,
											gs_optype_m_11			= gs_optype_m_11,
											gs_UI_CasementRect		= gs_UI_CasementRect,
											stSashType				= stSashType,
											stMullionPosition		= stMullionPosition,
											stOpeningType			= stOpeningType,
											stLouversinFrame		= stLouversinFrame,
											openingAngle_02			= openingAngle_02,
											openingAngle_05			= openingAngle_05,
											openingAngle_06			= openingAngle_06,
											openingAngle_07			= openingAngle_07,
											openingAngle_09			= openingAngle_09,
											openingAngle_10			= openingAngle_10,
											openingAngle_11			= openingAngle_11,
											openingAngle2_02		= openingAngle2_02,
											openingAngle2_05		= openingAngle2_05,
											openingAngle2_06		= openingAngle2_06,
											openingAngle2_07		= openingAngle2_07,
											openingAngle2_09		= openingAngle2_09,
											openingAngle2_10		= openingAngle2_10,
											openingAngle2_11		= openingAngle2_11,
											iOpeningMethod			= iOpeningMethod,
											gs_door_transom			= gs_door_transom,
											gs_sidelight_left		= gs_sidelight_left,
											gs_sidelight_right		= gs_sidelight_right,
											LouverStyle				= LouverStyle,
											iLouverStyle			= iLouverStyle,
											gs_louver_thk			= gs_louver_thk,
											gs_louver_width			= gs_louver_width,
											gs_louver_opening_angle	= gs_louver_opening_angle,
											gs_ventSashLouver_mat	= gs_ventSashLouver_mat

	if bOpeningTypePage then
		call "ui_door_general" parameters	bOpeningTypePage				= bOpeningTypePage,
											bSlidingUIalternative			= bSlidingUIalternative,
											stDoorGeneralOpeningUI			= stDoorGeneralOpeningUI,
											stOpenLeaf						= stOpenLeaf,
											gs_leaf_optype_m				= gs_leaf_optype_m,
											gs_openleaf_set_to_edit			= gs_openleaf_set_to_edit,
											gs_opening_leaves				= gs_opening_leaves,
											gs_open3D						= gs_open3D,
											gs_open2D						= gs_open2D,
											gs_opening_leaves2				= gs_opening_leaves2,
											gs_open3D_2						= gs_open3D_2,
											gs_open2D_2						= gs_open2D_2,
											bArchedTop						= bArchedTop,
											gs_door_transom					= gs_door_transom,
											gs_sidelight_left				= gs_sidelight_left,
											gs_sidelight_right				= gs_sidelight_right,
											gs_SidelightTransomRelation_m	= gs_SidelightTransomRelation_m,
											iOpeningMethod					= iOpeningMethod,
											gs_frame_auto_changed			= gs_frame_auto_changed,
											gs_threshold_auto_changed		= gs_threshold_auto_changed,
											gs_sill_auto_changed			= gs_sill_auto_changed,
											gs_bSidelight_fr_hdiv_left		= gs_bSidelight_fr_hdiv_left,
											gs_bSidelight_fr_hdiv_right		= gs_bSidelight_fr_hdiv_right,
											pageStartY						= pageStartY
	endif
return


! --------------------------------------------------------------------------------
! Door Model Attributes
! --------------------------------------------------------------------------------
"pageCallDoorModAttributes":
	_bShowKickBoard =	bEnableKickBoard & (bKickBoardOut | bKickBoardIn | \
						bSecondKickBoard & (bKickBoardOut2 | bKickBoardIn2))

	call "ui_DoorSettOpeningModAttr_m" parameters all listFieldDoorOpSettAttrID	= listFieldDoorOpSettAttrID,
													bArchedTop			= bArchedTop,
													iOpeningMethod		= iOpeningMethod,
													bMetalDoor			= bMetalDoor,
													bEntranceDoor		= bStorefrontDoor,
													bShowKickBoard		= _bShowKickBoard,
													gs_door_transom		= gs_door_transom,
													gs_sidelight_left	= gs_sidelight_left,
													gs_sidelight_right	= gs_sidelight_right,
													st_uiDoorSettModAttr = st_uiDoorSettModAttr
return


! --------------------------------------------------------------------------------
! Shape
! --------------------------------------------------------------------------------
"pageCallShape":
		call "ui_door_shape" parameters all stSidelightTransomRelation	= stSidelightTransomRelation,
											stLeavesConfiguration		= stLeavesConfiguration,
											is2Leaf						= is2Leaf,
											bShowLeavesConfig			= bShowLeavesConfig
return


! --------------------------------------------------------------------------------
! Door Frame
! --------------------------------------------------------------------------------
"pageCallDoorFrame":
		call "ui_door_frame_t" parameters all	bFrameStylePage		= bFrameStylePage,
												bLeafSashPage		= bLeafSashPage,
												gs_leaf_optype_m		= gs_leaf_optype_m,
												gs_stDoorFrame			= gs_stDoorFrame,
												stOpeningDir			= stOpeningDir,
												stFrameElemJoin			= stFrameElemJoin,
												bCHIVer					= bCHIVer,
												bForceToShowFrameStyle	= bForceToShowFrameStyle,
												bBombShelter			= bBombShelter,
												isRebateWidth			= isRebateWidth,
												bEnableNEDFrameStyles	= bEnableNEDFrameStyles,
												bDisableSidelightSashWidth	= bDisableSidelightSashWidth
return


! --------------------------------------------------------------------------------
! Door Panel
! --------------------------------------------------------------------------------
"pageCallDoorPanelSettings":
		call "DoorLeafPanels" parameters all A=A,
											bDoorPanelPage1				= bDoorPanelPage1,
											bDoorPanelPage2				= bDoorPanelPage2,
											bAsymmetricLeafs			= bAsymmetricLeafs,
											iLeafShape					= iLeafShape,
											iDoorPanelType				= iDoorPanelType,
											gs_glass_pen_cont			= gs_glass_pen_cont,
											gs_leaf_pen_2D				= gs_leaf_pen_2D,
											gs_ui_dtype					= 0,
											gs_leaf_optype_m			= gs_leaf_optype_m,
											gs_transom_n_m				= 0,
											gs_handle_type_m			= gs_handle_type_m,
											gs_cust_handle				= gs_cust_handle,
											bLeafSymbolCHIPage			= bLeafSymbolCHIPage,
											stDoorTypes					= stDoorTypes,
											stGrillPos					= stGrillPos,
											bUncutParametersLock		= bUncutParametersLock,
											bGlass2DParametersLock		= bGlass2DParametersLock,
											bGlass3DParametersLock		= bGlass3DParametersLock,
											bEnableShowHandle			= bEnableShowHandle,
											bEnableShowGlassPanel		= bEnableShowGlassPanel,
											bEnableShowChiSpringSymbol	= bEnableShowChiSpringSymbol,
											bEnableShowAirtightPanel	= bEnableShowAirtightPanel
return


! --------------------------------------------------------------------------------
! Handle and Kick Board
! --------------------------------------------------------------------------------
"pageCallHandleAndKickBoard":

	pageStartY = 4

	call "DoorHandle" parameters A=A,
		pageStartY				= pageStartY,
		bSecondPanel			= ((iOpeningMethod = OPENMETHOD_OPEN_DOUB) & not(bBombShelter)),
		bDifferentHandles		= 0,
		bSecondHandle			= 1,
		bIndependentHandlePage	= 1,
		bINTHandles				= 1,
		gs_handle_type_m		= gs_handle_type_m,
		gs_handle_type2_m		= gs_handle_type2_m,
		gs_handle_set_to_edit	= gs_handle_set_to_edit,
		gs_handle_uniform		= gs_handle_uniform

	! Full Vertical Separator Line
	ui_separator	222,	2,		222,	214

	gosub "pageDrawKickBoardBlock"

return


! --------------------------------------------------------------------------------
! Kick Board Block
! --------------------------------------------------------------------------------
"pageDrawKickBoardBlock":

	y0 = pageStartY
	y1 = y0
	dy = 24

	fullWidth	= 212
	boolWidth	= 120
	inFldWdt	= 90
	outFldWdt	= 90

	inFldHgt	= 19
	outFldHgt	= 15


	_titleMainKickBoard	= `Защитная Пластина`

	boolWidth	= fullWidth
	outFldWdt	= 120

	xPos01	= 230
	xPos02	= xPos01 + outFldWdt + 2

	ui_style 0, 1
	if bAsymmetricLeafs then
		ui_outfield		_titleMainKickBoard,	xPos01,	y1,		outFldWdt,	outFldHgt

		ui_style 0, 0

		ui_infield{3}	"gs_kickboard_set_to_edit",	xPos02,	y1-4,	inFldWdt,	inFldHgt,
			8, "",
			10,
			1, 20, 20, 20, 20,
			1, stKickBoardSetToLeaf[1], KICKBOARD_IN_MAIN_PANEL,
			2, stKickBoardSetToLeaf[2], KICKBOARD_IN_SECOND_PANEL
	else
		ui_outfield		_titleMainKickBoard,	xPos01,	y1,		fullWidth,	outFldHgt
	endif

	y1 = y1 + dy

	if (gs_kickboard_set_to_edit = KICKBOARD_IN_MAIN_PANEL) | not(bAsymmetricLeafs) then

		ui_style 0, 0
		ui_infield{3}	"bKickBoardOut",		xPos01,	y1-4,	boolWidth,	inFldHgt,
			7, "", 1, 1,
			0, 0, 0, 0,
			1,	`Снаружи`, 0,
			1,	`Снаружи`, 1

		y1 = y1 + dy

		ui_infield{3}	"bKickBoardIn",			xPos01,	y1-4,	boolWidth,	inFldHgt,
			7, "", 1, 1,
			0, 0, 0, 0,
			1,	`Внутри`, 0,
			1,	`Внутри`, 1

		y1 = y1 + dy

		ui_outfield		`Высота`,				xPos01,	y1,		outFldWdt,	outFldHgt,	4 * not(bKickBoardOut | bKickBoardIn)

		ui_infield		"kickBoardHeight",		xPos02,	y1-4,	inFldWdt,	inFldHgt

	else

		ui_style 0, 0
		ui_infield{3}	"bKickBoardOut2",		xPos01,	y1-4,	boolWidth,	inFldHgt,
			7, "", 1, 1,
			0, 0, 0, 0,
			1,	`Снаружи`, 0,
			1,	`Снаружи`, 1

		y1 = y1 + dy

		ui_infield{3}	"bKickBoardIn2",		xPos01,	y1-4,	boolWidth,	inFldHgt,
			7, "", 1, 1,
			0, 0, 0, 0,
			1,	`Внутри`, 0,
			1,	`Внутри`, 1

		y1 = y1 + dy

		ui_outfield		`Высота`,				xPos01,	y1,		outFldWdt,	outFldHgt,	4 * not(bKickBoardOut2 | bKickBoardIn2)

		ui_infield		"kickBoardHeight2",		xPos02,	y1-4,	inFldWdt,	inFldHgt

	endif

return


! --------------------------------------------------------------------------------
! Ventilation Profile
! --------------------------------------------------------------------------------
"pageCallVentilationProfile":
		call "Ventilation_profile" parameters	isWindow						= 0,
												iWindowType						= iWindowType,
												gs_UTrans						= gs_door_transom * not(bArchedTop),
												gs_UTrans_Div					= gs_door_transom & (gs_SidelightTransomRelation_m = SIDELIGHT_CROSSES_TRANSOM),
												CasementIDArray					= CasementIDArray,
												bVentilationProfile				= bVentilationProfile,
												iVentilationProfileType			= iVentilationProfileType,
												isVentilationProfileInSash_01	= isVentilationProfileInSash_01,
												isVentilationProfileInSash_02	= isVentilationProfileInSash_02,
												isVentilationProfileInSash_03	= isVentilationProfileInSash_03,
												isVentilationProfileInSash_04	= isVentilationProfileInSash_04,
												isVentilationProfileInSash_05	= isVentilationProfileInSash_05,
												isVentilationProfileInSash_06	= isVentilationProfileInSash_06,
												isVentilationProfileInSash_07	= isVentilationProfileInSash_07,
												isVentilationProfileInSash_08	= isVentilationProfileInSash_08,
												isVentilationProfileInSash_09	= isVentilationProfileInSash_09,
												isVentilationProfileInSash_10	= isVentilationProfileInSash_10,
												isVentilationProfileInSash_11	= isVentilationProfileInSash_11,
												iMullionStyle_02				= iMullionStyle_02,
												iMullionStyle_05				= iMullionStyle_05,
												iMullionStyle_06				= iMullionStyle_06,
												iMullionStyle_07				= iMullionStyle_07,
												iMullionStyle_09				= iMullionStyle_09,
												iMullionStyle_10				= iMullionStyle_10,
												iMullionStyle_11				= iMullionStyle_11
return



]]>
</Script_UI>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_VL SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
! =============================================================================
! Attributes
! =============================================================================

if gs_pen_2D		<= 0 then parameters gs_pen_2D		= 3
if gs_leaf_pen_2D	<= 0 then parameters gs_leaf_pen_2D	= 3
if gs_frame_pen		<= 0 then parameters gs_frame_pen	= 2
if gs_leaf_pen		<= 0 then parameters gs_leaf_pen	= 2
if gs_glass_pen		<= 0 then parameters gs_glass_pen	= 2

if res<3 then parameters res=3

glassarea_counter = 0


! =============================================================================
! Ventilation Profile
! =============================================================================

if bEnableVentilationProfile then
	call "Ventilation_profile" parameters	isWindow						= 0,
											iWindowType						= iWindowType,
											gs_UTrans						= gs_door_transom * not(bArchedTop),
											CasementIDArray					= CasementIDArray,
											bVentilationProfile				= bVentilationProfile,
											iVentilationProfileType			= iVentilationProfileType,
											isVentilationProfileInSash_01	= isVentilationProfileInSash_01,
											isVentilationProfileInSash_02	= isVentilationProfileInSash_02,
											isVentilationProfileInSash_03	= isVentilationProfileInSash_03,
											isVentilationProfileInSash_04	= isVentilationProfileInSash_04,
											isVentilationProfileInSash_05	= isVentilationProfileInSash_05,
											isVentilationProfileInSash_06	= isVentilationProfileInSash_06,
											isVentilationProfileInSash_07	= isVentilationProfileInSash_07,
											isVentilationProfileInSash_08	= isVentilationProfileInSash_08,
											isVentilationProfileInSash_09	= isVentilationProfileInSash_09,
											isVentilationProfileInSash_10	= isVentilationProfileInSash_10,
											isVentilationProfileInSash_11	= isVentilationProfileInSash_11,
											iMullionStyle_02				= iMullionStyle_02,
											iMullionStyle_05				= iMullionStyle_05,
											iMullionStyle_06				= iMullionStyle_06,
											iMullionStyle_07				= iMullionStyle_07,
											iMullionStyle_09				= iMullionStyle_09,
											iMullionStyle_10				= iMullionStyle_10,
											iMullionStyle_11				= iMullionStyle_11,
											gs_VentilationProfileTypeEnable	= gs_VentilationProfileTypeEnable
endif


! =============================================================================
! Leaf Opening Type Parameters
! =============================================================================

if GLOB_MODPAR_NAME = "gs_leaf_optype" then
	for i = 1 to vardim1(stLeafOpeningType)
		if gs_leaf_optype = stLeafOpeningType[i] then
			gs_leaf_optype_m = i
			parameters gs_leaf_optype_m = gs_leaf_optype_m
			i = vardim1(stLeafOpeningType)
		endif
	next i
else
	gs_leaf_optype = stLeafOpeningType[gs_leaf_optype_m]
	parameters gs_leaf_optype = gs_leaf_optype
endif


if iOpeningMethod = OPENMETHOD_OPEN_SIMP then
	values "gs_leaf_optype"	stLeafOpeningType[LEAF_1L_SIDE_HUNG],
							stLeafOpeningType[LEAF_1L_DOUBLE_ACTING]
	values "gs_leaf_optype_m"	LEAF_1L_SIDE_HUNG,
								LEAF_1L_DOUBLE_ACTING
	! Handling Multiselection
	if gs_leaf_optype_m = LEAF_2L_SIDE_HUNG		then gs_leaf_optype_m = LEAF_1L_SIDE_HUNG
	if gs_leaf_optype_m = LEAF_2L_DOUBLE_ACTING	then gs_leaf_optype_m = LEAF_1L_DOUBLE_ACTING
	parameters gs_leaf_optype_m = gs_leaf_optype_m
endif
if iOpeningMethod = OPENMETHOD_OPEN_DOUB then
	values "gs_leaf_optype"	stLeafOpeningType[LEAF_2L_SIDE_HUNG],
							stLeafOpeningType[LEAF_2L_DOUBLE_ACTING],
							stLeafOpeningType[LEAF_2L_DOUBLE_EGRESS]
	values "gs_leaf_optype_m"	LEAF_2L_SIDE_HUNG,
								LEAF_2L_DOUBLE_ACTING,
								LEAF_2L_DOUBLE_EGRESS
	! Handling Multiselection
	if gs_leaf_optype_m = LEAF_1L_SIDE_HUNG		then gs_leaf_optype_m = LEAF_2L_SIDE_HUNG
	if gs_leaf_optype_m = LEAF_1L_DOUBLE_ACTING	then gs_leaf_optype_m = LEAF_2L_DOUBLE_ACTING
	parameters gs_leaf_optype_m = gs_leaf_optype_m
endif
if iOpeningMethod = OPENMETHOD_PIVOT then
	values "gs_leaf_optype" stLeafOpeningType[LEAF_1L_PIVOT]
	values "gs_leaf_optype_m" LEAF_1L_PIVOT
endif
if iOpeningMethod = OPENMETHOD_SLIDE_INT then
	values "gs_leaf_optype"	stLeafOpeningType[LEAF_2L_1SLIDING],
							stLeafOpeningType[LEAF_2L_2SLIDING],
							stLeafOpeningType[LEAF_3L_2SLIDING],
							stLeafOpeningType[LEAF_4L_2SLIDING],
							stLeafOpeningType[LEAF_4L_3SLIDING],
							stLeafOpeningType[LEAF_4L_4SLIDING]
	values "gs_leaf_optype_m"	LEAF_2L_1SLIDING,
								LEAF_2L_2SLIDING,
								LEAF_3L_2SLIDING,
								LEAF_4L_2SLIDING,
								LEAF_4L_3SLIDING,
								LEAF_4L_4SLIDING
endif
if iOpeningMethod = OPENMETHOD_SLIDE_EXT_SIMP then
	values "gs_leaf_optype" stLeafOpeningType[LEAF_1L_EXTERNAL_SLIDING]
	values "gs_leaf_optype_m" LEAF_1L_EXTERNAL_SLIDING
endif
if iOpeningMethod = OPENMETHOD_SLIDE_EXT_DOUB then
	values "gs_leaf_optype" stLeafOpeningType[LEAF_2L_EXTERNAL_SLIDING]
	values "gs_leaf_optype_m" LEAF_2L_EXTERNAL_SLIDING
endif
if iOpeningMethod = OPENMETHOD_POCKET_SIMP then
	values "gs_leaf_optype" stLeafOpeningType[LEAF_1L_POCKET]
	values "gs_leaf_optype_m" LEAF_1L_POCKET
endif
if iOpeningMethod = OPENMETHOD_POCKET_DOUB then
	values "gs_leaf_optype" stLeafOpeningType[LEAF_2L_POCKET]
	values "gs_leaf_optype_m" LEAF_2L_POCKET
endif
if iOpeningMethod = OPENMETHOD_SLIDFOLD_SIMP then
	if gs_leaf_optype_m = LEAF_1L_MULTIPANEL_M then
		values "gs_leaf_optype" stLeafOpeningType[LEAF_1L_MULTIPANEL_M]
		values "gs_leaf_optype_m" LEAF_1L_MULTIPANEL_M
	else
		values "gs_leaf_optype" stLeafOpeningType[LEAF_1L_MULTIPANEL]
		values "gs_leaf_optype_m" LEAF_1L_MULTIPANEL
	endif
endif
if iOpeningMethod = OPENMETHOD_SLIDFOLD_BIFOLD then
	values "gs_leaf_optype" stLeafOpeningType[LEAF_2L_MULTIPANEL]
	values "gs_leaf_optype_m" LEAF_2L_MULTIPANEL
endif

if	gs_leaf_optype_m = LEAF_1L_PIVOT |\
	gs_leaf_optype_m = LEAF_1L_PIVOT_M |\
	gs_leaf_optype_m = LEAF_1L_EXTERNAL_SLIDING |\
	gs_leaf_optype_m = LEAF_1L_EXTERNAL_SLIDING_M |\
	gs_leaf_optype_m = LEAF_2L_EXTERNAL_SLIDING |\
	gs_leaf_optype_m = LEAF_1L_POCKET |\
	gs_leaf_optype_m = LEAF_1L_POCKET_M |\
	gs_leaf_optype_m = LEAF_2L_POCKET |\
	gs_leaf_optype_m = LEAF_1L_MULTIPANEL |\
	gs_leaf_optype_m = LEAF_1L_MULTIPANEL_M |\
	gs_leaf_optype_m = LEAF_2L_MULTIPANEL then

	! Hide Leaf Opening Type when only one opening type available
	hideparameter	"gs_leaf_optype",
					"gs_leaf_optype_m"
	lock			"gs_leaf_optype",
					"gs_leaf_optype_m"
endif

if	(gs_leaf_optype_m = LEAF_1L_POCKET |\
	gs_leaf_optype_m = LEAF_1L_POCKET_M |\
	gs_leaf_optype_m = LEAF_2L_POCKET) & not(gs_pocket_frame) then
	hideparameter	"gs_pocket_frame_thk"
	lock			"gs_pocket_frame_thk"
endif


! =============================================================================
! Door Specific Parameters
! =============================================================================

if GLOB_MODPAR_NAME = "gs_SashText_typ" | gs_SashText_typ_num = 0 then
	gs_SashText_typ_num = MITERED_JOINT
	if gs_SashText_typ = stFrameElemJoin[2] then gs_SashText_typ_num = BUTT_JOINT
	parameters gs_SashText_typ_num = gs_SashText_typ_num
else
	gs_SashText_typ = stFrameElemJoin[gs_SashText_typ_num]
	parameters gs_SashText_typ = gs_SashText_typ
endif
values "gs_SashText_typ" stFrameElemJoin
values "gs_SashText_typ_num" MITERED_JOINT, BUTT_JOINT

if	gs_leaf_optype_m = LEAF_2L_1SLIDING |\
	gs_leaf_optype_m = LEAF_2L_1SLIDING_M |\
	gs_leaf_optype_m = LEAF_2L_2SLIDING |\
	gs_leaf_optype_m = LEAF_2L_2SLIDING_M |\
	gs_leaf_optype_m = LEAF_3L_2SLIDING |\
	gs_leaf_optype_m = LEAF_3L_2SLIDING_M |\
	gs_leaf_optype_m = LEAF_4L_2SLIDING |\
	gs_leaf_optype_m = LEAF_4L_3SLIDING |\
	gs_leaf_optype_m = LEAF_4L_3SLIDING_M |\
	gs_leaf_optype_m = LEAF_4L_4SLIDING |\
	gs_leaf_optype_m = LEAF_4L_4SLIDING_M |\
	gs_leaf_optype_m = LEAF_1L_EXTERNAL_SLIDING |\
	gs_leaf_optype_m = LEAF_1L_EXTERNAL_SLIDING_M |\
	gs_leaf_optype_m = LEAF_2L_EXTERNAL_SLIDING |\
	gs_leaf_optype_m = LEAF_1L_POCKET |\
	gs_leaf_optype_m = LEAF_1L_POCKET_M |\
	gs_leaf_optype_m = LEAF_2L_POCKET |\
	gs_leaf_optype_m = LEAF_1L_MULTIPANEL |\
	gs_leaf_optype_m = LEAF_1L_MULTIPANEL_M |\
	gs_leaf_optype_m = LEAF_2L_MULTIPANEL then

	if GLOB_MODPAR_NAME = "gs_door_rail_ext" then
		for i = 1 to vardim1(stRailTypes)
			if gs_door_rail_ext = stRailTypes[i] then
				gs_door_rail_ext_m = i
				parameters gs_door_rail_ext_m = gs_door_rail_ext_m
			endif
		next i
	else
		gs_door_rail_ext = stRailTypes[gs_door_rail_ext_m]
		parameters gs_door_rail_ext = gs_door_rail_ext
	endif
	if	gs_leaf_optype_m = LEAF_1L_EXTERNAL_SLIDING |\
		gs_leaf_optype_m = LEAF_1L_EXTERNAL_SLIDING_M |\
		gs_leaf_optype_m = LEAF_2L_EXTERNAL_SLIDING |\
		gs_leaf_optype_m = LEAF_1L_POCKET |\
		gs_leaf_optype_m = LEAF_1L_POCKET_M |\
		gs_leaf_optype_m = LEAF_2L_POCKET then
		values "gs_door_rail_ext" stRailTypes[2], stRailTypes[3], stRailTypes[4]
		values "gs_door_rail_ext_m" EXT_RAIL_BOTT, EXT_RAIL_TOP, EXT_RAIL_BOTT_TOP

		if not(gs_door_rail) then
			lock "gs_door_rail_ext", "gs_door_rail_ext_m", "gs_rail_mat"
		endif 

		if gs_door_rail_ext_m < 2 then
			hideparameter "gs_rail_mat"
			lock "gs_rail_mat"
		endif
	else
		hideparameter "gs_door_rail_ext", "gs_door_rail_ext_m"
		lock "gs_door_rail_ext", "gs_door_rail_ext_m"
		if not(gs_door_rail) then
			lock "gs_rail_mat"
		endif 	
	endif
else
	hideparameter "gs_door_rail", "gs_door_rail_ext", "gs_door_rail_ext_m", "gs_rail_mat"
	lock "gs_door_rail", "gs_door_rail_ext", "gs_door_rail_ext_m", "gs_rail_mat"
endif


if GLOB_MODPAR_NAME = "gs_opening_dir_sl" | gs_opening_dir_sl_m = 0 then
	gs_opening_dir_sl_m = OPENING_DIR_DEFAULT_OUTSIDE
	if gs_opening_dir_sl = stOpeningDir[2] then gs_opening_dir_sl_m = OPENING_DIR_FLIPPED_INSIDE
	parameters gs_opening_dir_sl_m = gs_opening_dir_sl_m
else
	gs_opening_dir_sl = stOpeningDir[gs_opening_dir_sl_m]
	parameters gs_opening_dir_sl = gs_opening_dir_sl
endif
values "gs_opening_dir_sl"	stOpeningDir
values "gs_opening_dir_sl_m"	OPENING_DIR_DEFAULT_OUTSIDE, OPENING_DIR_FLIPPED_INSIDE


if	gs_leaf_optype_m = LEAF_1L_PIVOT |\
	gs_leaf_optype_m = LEAF_1L_PIVOT_M then
	values "gs_pivotOffset" range [gs_leaf_thk/2, ac_leaf_width/2]
else
	hideparameter "gs_pivotOffset"
	lock "gs_pivotOffset"
endif


! =============================================================================
! Minimal Leaf Width Calclulation
! =============================================================================

minLeafWidth = 0.2 + EPS
if	iDoorPanelType = 1 then minLeafWidth = gs_leaf_thk			! Style 1 (Solid Panel)
if	iDoorPanelType = 41 |\
	iDoorPanelType = 42 |\
	iDoorPanelType = 43 |\
	iDoorPanelType = 44 then minLeafWidth = 0.3 + EPS			! Style 41, Style 42, Style 43, Style 44
if iDoorPanelType = 47 then minLeafWidth = gs_fw_side * 2 + EPS	! H-V Grid
if iDoorPanelType = 49 then minLeafWidth = gs_leaf_thk			! Custom Panel


! =============================================================================
! Frame Style parameter handling
! =============================================================================

if GLOB_MODPAR_NAME = "gs_frame_style" then
	gs_frame_style_m = 	FRAME_STYLE_BLOCK														! Block
	if gs_frame_style = gs_stDoorFrame[2] then gs_frame_style_m = FRAME_STYLE_DOUBLE_REBATE		! Double Rebate
	if gs_frame_style = gs_stDoorFrame[3] then gs_frame_style_m = FRAME_STYLE_SIMPLE_REBATE		! Simple Rebate
	if gs_frame_style = gs_stDoorFrame[6] then gs_frame_style_m = FRAME_STYLE_EXTRUSION			! Extrusion
	if gs_frame_style = gs_stDoorFrame[7] then gs_frame_style_m = FRAME_STYLE_WRAPPED_EXTRUSION	! Wrapped Extrusion
	parameters gs_frame_style_m = gs_frame_style_m
else
	gs_frame_style = gs_stDoorFrame[gs_frame_style_m]
	parameters gs_frame_style= gs_frame_style
endif
if bFrameWOutRebate then
	! double acting, double egress ans sliding doors
	if	bEnableNEDFrameStyles &\
		(gs_leaf_optype_m = LEAF_2L_1SLIDING |\
		 gs_leaf_optype_m = LEAF_2L_1SLIDING_M |\
		 gs_leaf_optype_m = LEAF_2L_2SLIDING |\
		 gs_leaf_optype_m = LEAF_2L_2SLIDING_M |\
		 gs_leaf_optype_m = LEAF_3L_2SLIDING |\
		 gs_leaf_optype_m = LEAF_3L_2SLIDING_M |\
		 gs_leaf_optype_m = LEAF_4L_2SLIDING |\
		 gs_leaf_optype_m = LEAF_4L_3SLIDING |\
		 gs_leaf_optype_m = LEAF_4L_3SLIDING_M |\
		 gs_leaf_optype_m = LEAF_4L_4SLIDING |\
		 gs_leaf_optype_m = LEAF_4L_4SLIDING_M) then

		values "gs_frame_style_m"	FRAME_STYLE_BLOCK,
									FRAME_STYLE_EXTRUSION,
									FRAME_STYLE_WRAPPED_EXTRUSION
		values "gs_frame_style" gs_stDoorFrame[1],
								gs_stDoorFrame[6],
								gs_stDoorFrame[7]
	else
		values "gs_frame_style_m" FRAME_STYLE_BLOCK
		values "gs_frame_style" gs_stDoorFrame[1]
		lock "gs_frame_style", "gs_frame_style_m"
		if not(bForceToShowFrameStyle) then
			hideparameter "gs_frame_style"
		endif
	endif

	if (GLOB_MODPAR_NAME = "gs_leaf_optype"		|\
		GLOB_MODPAR_NAME = "gs_leaf_optype_m")	then

		if (gs_leaf_optype_m = LEAF_1L_DOUBLE_ACTING	|\
			 gs_leaf_optype_m = LEAF_1L_DOUBLE_ACTING_M	|\
			 gs_leaf_optype_m = LEAF_2L_DOUBLE_ACTING	|\
			 gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS	|\
			 gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS_M	) &\
			gs_frame_style_m <> FRAME_STYLE_BLOCK then

			parameters gs_frame_auto_changed = 1
		endif
	else
		parameters gs_frame_auto_changed = 0
	endif
else
	if bBombShelter then
		values "gs_frame_style_m" FRAME_STYLE_BLOCK, FRAME_STYLE_SIMPLE_REBATE
		values "gs_frame_style" gs_stDoorFrame[1], gs_stDoorFrame[3]
	else
		if bEnableNEDFrameStyles then
			values "gs_frame_style_m"	FRAME_STYLE_BLOCK,
										FRAME_STYLE_DOUBLE_REBATE,
										FRAME_STYLE_SIMPLE_REBATE,
										FRAME_STYLE_EXTRUSION,
										FRAME_STYLE_WRAPPED_EXTRUSION
			values "gs_frame_style" gs_stDoorFrame[1],
									gs_stDoorFrame[2],
									gs_stDoorFrame[3],
									gs_stDoorFrame[6],
									gs_stDoorFrame[7]
		else
			values "gs_frame_style_m"	FRAME_STYLE_BLOCK,
										FRAME_STYLE_DOUBLE_REBATE,
										FRAME_STYLE_SIMPLE_REBATE
			values "gs_frame_style" gs_stDoorFrame[1],
									gs_stDoorFrame[2],
									gs_stDoorFrame[3]
			endif
	endif
endif
if bThreshold then
	if (GLOB_MODPAR_NAME = "gs_leaf_optype"		|\
		GLOB_MODPAR_NAME = "gs_leaf_optype_m")	then

		if	(gs_leaf_optype_m = LEAF_1L_DOUBLE_ACTING	|\
			 gs_leaf_optype_m = LEAF_1L_DOUBLE_ACTING_M	|\
			 gs_leaf_optype_m = LEAF_2L_DOUBLE_ACTING	|\
			 gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS	|\
			 gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS_M	) then

			parameters gs_threshold_auto_changed = 1
		endif
	else
		parameters gs_threshold_auto_changed = 0
	endif
endif
if (gs_sill_outside = 1  & iSillType = SILL_TIMBER) then
	if (GLOB_MODPAR_NAME = "gs_leaf_optype"		|\
		GLOB_MODPAR_NAME = "gs_leaf_optype_m")	then

		if	(gs_leaf_optype_m = LEAF_1L_DOUBLE_ACTING	|\
			 gs_leaf_optype_m = LEAF_1L_DOUBLE_ACTING_M	|\
			 gs_leaf_optype_m = LEAF_2L_DOUBLE_ACTING	|\
			 gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS	|\
			 gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS_M	) then

			parameters gs_sill_auto_changed = 1
		endif
	else
		parameters gs_sill_auto_changed = 0
	endif
endif
if not(iRevealType = REVEAL_EDGE | iRevealType = REVEAL_NEGATIVE) then
	if (GLOB_MODPAR_NAME = "gs_frame_style"					|\
		GLOB_MODPAR_NAME = "gs_frame_style_m")				&\
		(gs_frame_style_m = FRAME_STYLE_WRAPPED_EXTRUSION	) then

		parameters gs_reveal_auto_changed_frstyle = 1
	endif
endif
if (gs_trim_inside | gs_trim_outside) then
	if (GLOB_MODPAR_NAME = "gs_frame_style"					|\
		GLOB_MODPAR_NAME = "gs_frame_style_m")				&\
		(gs_frame_style_m = FRAME_STYLE_WRAPPED_EXTRUSION	) then

		parameters gs_casing_auto_changed_frstyle = 1
	endif
endif
if	((gs_sill_outside_sl_left & gs_sidelight_left & gs_sidelight_parapet_hgt_left > EPS)		|\
	 (gs_sill_outside_sl_right & gs_sidelight_right & gs_sidelight_parapet_hgt_right > EPS))	then
	if (GLOB_MODPAR_NAME = "gs_frame_style"					|\
		GLOB_MODPAR_NAME = "gs_frame_style_m")				&\
		(gs_frame_style_m = FRAME_STYLE_WRAPPED_EXTRUSION	) then

		parameters gs_sill_auto_changed_frstyle = 1
	endif
endif
if	((gs_board_inside_sl_left & gs_sidelight_left & gs_sidelight_parapet_hgt_left > EPS)		|\
	 (gs_board_inside_sl_right & gs_sidelight_right & gs_sidelight_parapet_hgt_right > EPS))	then
	if (GLOB_MODPAR_NAME = "gs_frame_style"					|\
		GLOB_MODPAR_NAME = "gs_frame_style_m")				&\
		(gs_frame_style_m = FRAME_STYLE_WRAPPED_EXTRUSION	) then

		parameters gs_board_auto_changed_frstyle = 1
	endif
endif
if GLOB_MODPAR_NAME = "" & GLOB_UI_BUTTON_ID = 0 then
	parameters gs_frame_auto_changed			= 0
	parameters gs_threshold_auto_changed		= 0
	parameters gs_sill_auto_changed				= 0
	parameters gs_reveal_auto_changed_frstyle	= 0
	parameters gs_casing_auto_changed_frstyle	= 0
	parameters gs_sill_auto_changed_frstyle		= 0
	parameters gs_board_auto_changed_frstyle	= 0
endif


! =============================================================================
! Frame, Leaf and Sash parameter handling
! =============================================================================

if not(gs_sidelight_left) & not(gs_sidelight_right) then
	if bArchedTop then
		iWindowShape = SHAPE_ARCHED
	else
		iWindowShape = SHAPE_RECTANGULAR
	endif
endif

if gs_sidelight_left & not(gs_sidelight_right) then
	if bArchedTop then
		iWindowShape = SHAPE_ARCHED_HALF_T_LEFT
	else
		iWindowShape = SHAPE_HALF_T_LEFT
	endif
endif

if not(gs_sidelight_left) & gs_sidelight_right then
	if bArchedTop then
		iWindowShape = SHAPE_ARCHED_HALF_T_RIGHT
	else
		iWindowShape = SHAPE_HALF_T_RIGHT
	endif
endif

if gs_sidelight_left & gs_sidelight_right then
	if bArchedTop then
		iWindowShape = SHAPE_ARCHED_T
	else
		iWindowShape = SHAPE_T
	endif
endif

call "DoorFrame" parameters A=A,
	iWindowShape					= iWindowShape,
	gs_frame_style_m				= gs_frame_style_m,
	gs_door_transom					= gs_door_transom,
	gs_sidelight_left				= gs_sidelight_left,
	gs_sidelight_parapet_hgt_left	= gs_sidelight_parapet_hgt_left,
	gs_bSidelight_fr_hdiv_left		= gs_bSidelight_fr_hdiv_left,
	gs_sidelight_right				= gs_sidelight_right,
	gs_sidelight_parapet_hgt_right	= gs_sidelight_parapet_hgt_right,
	gs_bSidelight_fr_hdiv_right		= gs_bSidelight_fr_hdiv_right,
	gs_frame_wthk					= gs_frame_wthk,
	gs_sframe						= gs_sframe,
	gs_frame_thk					= gs_frame_thk,
	gs_frame_thkin					= gs_frame_thkin,
	gs_uniform_framewidth			= gs_uniform_framewidth,
	gs_frame_width					= gs_frame_width,
	gs_frame_width_right			= gs_frame_width_right,
	gs_frame_width_right_2			= gs_frame_width_right_2,
	gs_frame_width_low_right_sl		= gs_frame_width_low_right_sl,
	gs_frame_width_left				= gs_frame_width_left,
	gs_frame_width_left_2			= gs_frame_width_left_2,
	gs_frame_width_low_left_sl		= gs_frame_width_low_left_sl,
	gs_frame_width_upper			= gs_frame_width_upper,
	gs_frame_width_transom			= gs_frame_width_transom,
	gs_ds_thk						= gs_ds_thk,
	gs_rebate_width					= gs_rebate_width,
	gs_sidelight_rebate_width		= gs_sidelight_rebate_width,
	gs_sidelight_rebate_depth		= gs_sidelight_rebate_depth,
	gs_opening_dir_SL_m				= gs_opening_dir_SL_m,
	gs_leaf_optype_m				= gs_leaf_optype_m,
	gs_leaf_thk						= gs_leaf_thk,
	bEnableLeafRebateDepth3D		= bEnableLeafRebateDepth3D



if gs_leaf_thk < EPS then
	gs_leaf_thk = EPS
	parameters gs_leaf_thk = gs_leaf_thk
endif
if gs_sash_width < EPS then
	gs_sash_width = EPS
	parameters gs_sash_width = gs_sash_width
endif
if gs_sash_thk < EPS then
	gs_sash_thk = EPS
	parameters gs_sash_thk = gs_sash_thk
endif
if gs_glass_thk < 0 then
	gs_glass_thk = 0
	parameters gs_glass_thk = gs_glass_thk
endif


! =============================================================================
! Double Acting parameters
! =============================================================================

if	not(gs_pocket) &\
	not(gs_leaf_optype_m = LEAF_1L_DOUBLE_ACTING |\
		gs_leaf_optype_m = LEAF_1L_DOUBLE_ACTING_M |\
		gs_leaf_optype_m = LEAF_2L_DOUBLE_ACTING) then
	lock			"gs_swing_pen_line"
	hideparameter	"gs_swing_pen_line"
endif


! =============================================================================
! Pocket Door parameter handling
! =============================================================================

if gs_pocket then

	if not(gs_pocket_door_frame) then
		lock	"gs_frame_wthk",
				"gs_uniform_framewidth",
				"gs_frame_width",
				"gs_frame_width_left",
				"gs_frame_width_left_2",
				"gs_frame_width_low_left_sl",
				"gs_frame_width_right",
				"gs_frame_width_right_2",
				"gs_frame_width_low_right_sl",
				"gs_frame_width_upper",
				"gs_frame_thk",
				"gs_leaf_center",
				"gs_leaf_offset"

		hideparameter	"gs_frame_wthk",
						"gs_uniform_framewidth",
						"gs_frame_width",
						"gs_frame_width_left",
						"gs_frame_width_left_2",
						"gs_frame_width_low_left_sl",
						"gs_frame_width_right",
						"gs_frame_width_right_2",
						"gs_frame_width_low_right_sl",
						"gs_frame_width_upper",
						"gs_frame_thk",
						"gs_leaf_center",
						"gs_leaf_offset"
	else
		values "gs_frame_thk"	range (gs_leaf_thk + 0.005*2,)
		values "gs_leaf_offset"	range [0, gs_fthk - gs_leaf_thk]

		if gs_leaf_center then
			lock "gs_leaf_offset"
			hideparameter "gs_leaf_offset"
		endif
	endif
else
	lock			"gs_pocket_door_frame", "gs_leaf_center", "gs_leaf_offset"
	hideparameter	"gs_pocket_door_frame", "gs_leaf_center", "gs_leaf_offset"
endif


! =============================================================================
! Sliding Folding Multi-panel parameters
! =============================================================================

if gs_leaf_optype_m = LEAF_1L_MULTIPANEL | gs_leaf_optype_m = LEAF_1L_MULTIPANEL_M | gs_leaf_optype_m = LEAF_2L_MULTIPANEL then

	if bMiddleStacking then minLeafWidth = 2 * minLeafWidth
	maxLeafNum = int((ac_unit_width - gs_frame_width_left - gs_frame_width_right) / minLeafWidth)
	if maxLeafNum < 2 then maxLeafNum = 2

	if gs_leaf_optype_m = LEAF_2L_MULTIPANEL then
		if maxLeafNum < gs_leaf_num + gs_leaf_num2 then
			diffLeafNum = gs_leaf_num + gs_leaf_num2 - maxLeafNum

			gs_leaf_num = gs_leaf_num - ceil(diffLeafNum/2)
			if gs_leaf_num < 1 then gs_leaf_num = 1
			gs_leaf_num2 = maxLeafNum - gs_leaf_num
			if gs_leaf_num2 < 1 then gs_leaf_num2 = 1
			parameters gs_leaf_num = gs_leaf_num
			parameters gs_leaf_num2 = gs_leaf_num2
		endif

		values "gs_leaf_num"  range [1, maxLeafNum - gs_leaf_num2]
		values "gs_leaf_num2" range [1, maxLeafNum - gs_leaf_num]
	else
		values "gs_leaf_num" range [2, maxLeafNum]
		lock "gs_leaf_num2"
		hideparameter "gs_leaf_num2"
	endif
else
	if	gs_leaf_optype_m <> LEAF_2L_SIDE_HUNG &\
		gs_leaf_optype_m <> LEAF_2L_DOUBLE_ACTING &\
		gs_leaf_optype_m <> LEAF_2L_DOUBLE_EGRESS &\
		gs_leaf_optype_m <> LEAF_2L_DOUBLE_EGRESS_M then

		lock			"gs_open_3D_2"
		hideparameter	"gs_open_3D_2"
	endif

	lock			"gs_leaf_num", "gs_leaf_num2", "gs_opening_leaves", "gs_opening_leaves2"
	hideparameter	"gs_leaf_num", "gs_leaf_num2", "gs_opening_leaves", "gs_opening_leaves2"
endif


! =============================================================================
! Shape geometry parameters handling
! =============================================================================
!
!if not(bArchedTop) & not(gs_sidelight_left | gs_sidelight_right) then
!	lock "gs_shape_geometry"
!	hideparameter "gs_shape_geometry"
!endif

if not(bArchedTop) then
	lock "gs_shoulder_h"
	hideparameter "gs_shoulder_h"
endif


! =============================================================================
! Sidelight and Transom parameter handling
! =============================================================================

if not(gs_sidelight_left | gs_sidelight_right | gs_door_transom) then
	lock "gs_Sl_Tr_Sashes", "gs_opening_dir_sl", "gs_opening_dir_sl_m"
	hideparameter	"gs_Sl_Tr_Sashes", "gs_opening_dir_sl", "gs_opening_dir_sl_m"

	lock "bOverride_MVO_win_3D"
	hideparameter "bOverride_MVO_win_3D"
endif


if bUncutParametersLock then
	lock "gs_FillSdl", "gs_penSdl_fg", "gs_penSdl_bg"
	hideparameter	"gs_FillSdl", "gs_penSdl_fg", "gs_penSdl_bg"
endif

if bStorefrontDoor & bGlass2DParametersLock then
	lock "gs_glass_pen_cont","gs_gsect", "gs_penGlass_fg", "gs_penGlass_bg"
	hideparameter "gs_glass_pen_cont","gs_gsect", "gs_penGlass_fg", "gs_penGlass_bg"
endif

if (gs_sidelight_left & gs_sidelight_right) then
	bNoParapet = ((gs_sidelight_parapet_hgt_left < EPS) & (gs_sidelight_parapet_hgt_right < EPS))
else
	if gs_sidelight_left then
		bNoParapet = (gs_sidelight_parapet_hgt_left < EPS)
	else
		bNoParapet = (gs_sidelight_parapet_hgt_right < EPS)
	endif
endif

if not(gs_pocket) & (not(gs_sidelight_left | gs_sidelight_right) | bNoParapet) then
	lock	"gs_wcont_line_sl",
			"iWallContourLineSl",
			"gs_wcont_line_sl_in",
			"gs_wcont_line_sl_out",
			"gs_wcont_hidden_line_sl_in",
			"gs_wcont_hidden_line_sl_out",
			"gs_wallhole_fill_sl",
			"gs_wallhole_pen_sl_fg",
			"gs_wallhole_pen_sl_bg"
	hideparameter	"gs_wcont_line_sl",
					"iWallContourLineSl",
					"gs_wcont_line_sl_in",
					"gs_wcont_line_sl_out",
					"gs_wcont_hidden_line_sl_in",
					"gs_wcont_hidden_line_sl_out",
					"gs_wallhole_fill_sl",
					"gs_wallhole_pen_sl_fg",
					"gs_wallhole_pen_sl_bg"
endif

if not(gs_sidelight_left) then
	lock "gs_tolerance_left_2", "gs_tolerance_low_left_sl",
		 "gs_reveal_left_sL", "gs_reveal_double_innerLeft_sL", "gs_reveal_bottom_sL", "gs_reveal_double_innerBottom_sL"
	hideparameter	"gs_tolerance_left_2", "gs_tolerance_low_left_sl",
					"gs_reveal_left_sL", "gs_reveal_double_innerLeft_sL", "gs_reveal_bottom_sL", "gs_reveal_double_innerBottom_sL"
endif

if not(gs_sidelight_right) then
	lock "gs_tolerance_right_2", "gs_tolerance_low_right_sl",
		 "gs_reveal_right_sR", "gs_reveal_double_innerRight_sR", "gs_reveal_bottom_sR", "gs_reveal_double_innerBottom_sR"
	hideparameter	"gs_tolerance_right_2", "gs_tolerance_low_right_sl",
					"gs_reveal_right_sR", "gs_reveal_double_innerRight_sR", "gs_reveal_bottom_sR", "gs_reveal_double_innerBottom_sR"
endif

if not(gs_door_transom) then
	lock "gs_transom_height"
	hideparameter "gs_transom_height"
endif


! =============================================================================
! Sidelight-Transom Relation handling
! =============================================================================

if bArchedTop then
	gs_SidelightTransomRelation_m = SIDELIGHT_UNDER_TRANSOM
	parameters gs_SidelightTransomRelation_m = gs_SidelightTransomRelation_m
	lock "gs_SidelightTransomRelation"
endif

if not(gs_door_transom & (gs_sidelight_left | gs_sidelight_right)) then
	lock "gs_SidelightTransomRelation", "gs_SidelightTransomRelation_m"
	hideparameter "gs_SidelightTransomRelation"
endif

if GLOB_MODPAR_NAME = "gs_SidelightTransomRelation" then
	gs_SidelightTransomRelation_m = SIDELIGHT_UNDER_TRANSOM
	if gs_SidelightTransomRelation = stSidelightTransomRelation[2] then gs_SidelightTransomRelation_m = SIDELIGHT_OVER_TRANSOM
	if gs_SidelightTransomRelation = stSidelightTransomRelation[3] then gs_SidelightTransomRelation_m = SIDELIGHT_CROSSES_TRANSOM
	parameters gs_SidelightTransomRelation_m = gs_SidelightTransomRelation_m
else
	gs_SidelightTransomRelation = stSidelightTransomRelation[gs_SidelightTransomRelation_m]
	parameters gs_SidelightTransomRelation = gs_SidelightTransomRelation
endif

values "gs_SidelightTransomRelation" stSidelightTransomRelation
values "gs_SidelightTransomRelation_m"	SIDELIGHT_UNDER_TRANSOM,
										SIDELIGHT_OVER_TRANSOM,
										SIDELIGHT_CROSSES_TRANSOM


! =============================================================================
! Leaves Configuration handling
! =============================================================================

if GLOB_MODPAR_NAME = "gs_LeavesConfig" then
	gs_iLeavesConfig = LEAVESCONFIG_UNIFORM
	if gs_LeavesConfig = stLeavesConfiguration[2] then gs_iLeavesConfig = LEAVESCONFIG_ASYMM
	parameters gs_iLeavesConfig = gs_iLeavesConfig
else
	gs_LeavesConfig = stLeavesConfiguration[gs_iLeavesConfig]
	parameters gs_LeavesConfig = gs_LeavesConfig
endif

values "gs_LeavesConfig" stLeavesConfiguration
values "gs_iLeavesConfig"	LEAVESCONFIG_UNIFORM,
							LEAVESCONFIG_ASYMM

if bShowLeavesConfig then
	if gs_iLeavesConfig = LEAVESCONFIG_UNIFORM | ac_leaf_width < 2 * minLeafWidth then
		parameters gs_SecondLeaf_w = ac_leaf_width / 2
		lock "gs_SecondLeaf_w"
	else
		values "gs_SecondLeaf_w" range[minLeafWidth, ac_leaf_width - minLeafWidth]
	endif
else
	lock "gs_LeavesConfig", "gs_SecondLeaf_w"
	hideparameter "gs_LeavesConfig", "gs_SecondLeaf_w"
endif


! =============================================================================
! Opening Angle Params handling
! =============================================================================

if	gs_leaf_optype_m = LEAF_1L_DOUBLE_ACTING |\
	gs_leaf_optype_m = LEAF_1L_DOUBLE_ACTING_M |\
	gs_leaf_optype_m = LEAF_2L_DOUBLE_ACTING |\
	gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS |\
	gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS_M |\
	gs_leaf_optype_m = LEAF_2L_1SLIDING |\
	gs_leaf_optype_m = LEAF_2L_1SLIDING_M |\
	gs_leaf_optype_m = LEAF_2L_2SLIDING |\
	gs_leaf_optype_m = LEAF_2L_2SLIDING_M |\
	gs_leaf_optype_m = LEAF_3L_2SLIDING |\
	gs_leaf_optype_m = LEAF_3L_2SLIDING_M |\
	gs_leaf_optype_m = LEAF_4L_2SLIDING |\
	gs_leaf_optype_m = LEAF_4L_3SLIDING |\
	gs_leaf_optype_m = LEAF_4L_3SLIDING_M |\
	gs_leaf_optype_m = LEAF_4L_4SLIDING |\
	gs_leaf_optype_m = LEAF_4L_4SLIDING_M |\
	gs_leaf_optype_m = LEAF_1L_EXTERNAL_SLIDING |\
	gs_leaf_optype_m = LEAF_1L_EXTERNAL_SLIDING_M |\
	gs_leaf_optype_m = LEAF_2L_EXTERNAL_SLIDING |\
	gs_leaf_optype_m = LEAF_1L_POCKET |\
	gs_leaf_optype_m = LEAF_1L_POCKET_M |\
	gs_leaf_optype_m = LEAF_2L_POCKET |\
	gs_leaf_optype_m = LEAF_1L_MULTIPANEL |\
	gs_leaf_optype_m = LEAF_1L_MULTIPANEL_M |\
	gs_leaf_optype_m = LEAF_2L_MULTIPANEL then

	openValues	= 0
	if	gs_leaf_optype_m = LEAF_4L_2SLIDING |\
		gs_leaf_optype_m = LEAF_4L_4SLIDING |\
		gs_leaf_optype_m = LEAF_4L_4SLIDING_M then
		values "gs_open3D"	 range [0, ac_egress_width/2]
		values "gs_open3D_2" range [0, ac_egress_width/2]
		values "gs_open2D"	 range [0, ac_egress_width/2]
		values "gs_open2D_2" range [0, ac_egress_width/2]
		openValues	= 1
	endif
	if gs_leaf_optype_m = LEAF_2L_MULTIPANEL then
		side1Length = (ac_leaf_width) * (gs_leaf_num  - bMiddleStacking * 0.5) / (gs_leaf_num + gs_leaf_num2 - bMiddleStacking)
		side2Length = (ac_leaf_width) * (gs_leaf_num2 - bMiddleStacking * 0.5) / (gs_leaf_num + gs_leaf_num2 - bMiddleStacking)
		values "gs_open3D"	 range [0, side1Length - gs_leaf_num  * gs_leaf_thk]
		values "gs_open3D_2" range [0, side2Length - gs_leaf_num2 * gs_leaf_thk]
		values "gs_open2D"	 range [0, side1Length - gs_leaf_num  * gs_leaf_thk]
		values "gs_open2D_2" range [0, side2Length - gs_leaf_num2 * gs_leaf_thk]
		openValues	= 1
	endif
	if	gs_leaf_optype_m = LEAF_1L_EXTERNAL_SLIDING |\
		gs_leaf_optype_m = LEAF_1L_EXTERNAL_SLIDING_M |\
		gs_leaf_optype_m = LEAF_2L_EXTERNAL_SLIDING then
		if gs_leaf_optype_m = LEAF_2L_EXTERNAL_SLIDING then
			values "gs_open3D"	 range [0, ac_wallhole_width/2]
			values "gs_open3D_2" range [0, ac_wallhole_width/2]
			values "gs_open2D"	 range [0, ac_wallhole_width/2]
			values "gs_open2D_2" range [0, ac_wallhole_width/2]
		else
			values "gs_open3D"	 range [0, ac_wallhole_width]
			values "gs_open3D_2" range [0, ac_wallhole_width]
			values "gs_open2D"	 range [0, ac_wallhole_width]
			values "gs_open2D_2" range [0, ac_wallhole_width]
		endif
		openValues	= 1
	endif
	if gs_leaf_optype_m = LEAF_1L_POCKET | gs_leaf_optype_m = LEAF_1L_POCKET_M | gs_leaf_optype_m = LEAF_2L_POCKET then
		if gs_leaf_optype_m = LEAF_2L_POCKET then
			if gs_pocket_door_frame then
				values "gs_open3D"	 range [0, ac_egress_width - ac_leaf_width/2]
				values "gs_open3D_2" range [0, ac_egress_width - ac_leaf_width/2]
				values "gs_open2D"	 range [0, ac_egress_width - ac_leaf_width/2]
				values "gs_open2D_2" range [0, ac_egress_width - ac_leaf_width/2]
			else
				values "gs_open3D"	 range [0, ac_wallhole_width - ac_leaf_width/2]
				values "gs_open3D_2" range [0, ac_wallhole_width - ac_leaf_width/2]
				values "gs_open2D"	 range [0, ac_wallhole_width - ac_leaf_width/2]
				values "gs_open2D_2" range [0, ac_wallhole_width - ac_leaf_width/2]
			endif
		else
			if gs_pocket_door_frame then
				values "gs_open3D"	range [0, 2*ac_egress_width - ac_leaf_width]
				values "gs_open2D"	range [0, 2*ac_egress_width - ac_leaf_width]
			else
				values "gs_open3D"	range [0, 2*ac_wallhole_width - ac_leaf_width]
				values "gs_open2D"	range [0, 2*ac_wallhole_width - ac_leaf_width]
			endif
		endif
		openValues	= 1
	endif
	if not(openValues) then
		values "gs_open3D"	 range [0, ac_egress_width]
		values "gs_open3D_2" range [0, ac_egress_width]
		values "gs_open2D"	 range [0, ac_egress_width]
		values "gs_open2D_2" range [0, ac_egress_width]
	endif

endif

values "gs_open_3D" range [0, 180]
values "gs_open_2D" range [0, 180]

if	gs_leaf_optype_m = LEAF_1L_MULTIPANEL |\
	gs_leaf_optype_m = LEAF_1L_MULTIPANEL_M |\
	gs_leaf_optype_m = LEAF_2L_MULTIPANEL |\
	gs_leaf_optype_m = LEAF_2L_SIDE_HUNG |\
	gs_leaf_optype_m = LEAF_2L_DOUBLE_ACTING |\
	gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS |\
	gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS_M then
		values "gs_open_2D_2" range [0, 180]
		values "gs_open_3D_2" range [0, 180]
endif

if	gs_sidelight_right | \
	gs_sidelight_left then
	values "gs_open_2D_sl_left"  range [0, 90]
	values "gs_open_2D_sl_right" range [0, 90]
endif

if	gs_leaf_optype_m = LEAF_2L_1SLIDING |\
	gs_leaf_optype_m = LEAF_2L_1SLIDING_M |\
	gs_leaf_optype_m = LEAF_2L_2SLIDING |\
	gs_leaf_optype_m = LEAF_2L_2SLIDING_M |\
	gs_leaf_optype_m = LEAF_3L_2SLIDING |\
	gs_leaf_optype_m = LEAF_3L_2SLIDING_M |\
	gs_leaf_optype_m = LEAF_4L_2SLIDING |\
	gs_leaf_optype_m = LEAF_4L_3SLIDING |\
	gs_leaf_optype_m = LEAF_4L_3SLIDING_M |\
	gs_leaf_optype_m = LEAF_4L_4SLIDING |\
	gs_leaf_optype_m = LEAF_4L_4SLIDING_M |\
	gs_leaf_optype_m = LEAF_1L_EXTERNAL_SLIDING |\
	gs_leaf_optype_m = LEAF_1L_EXTERNAL_SLIDING_M |\
	gs_leaf_optype_m = LEAF_2L_EXTERNAL_SLIDING |\
	gs_leaf_optype_m = LEAF_1L_POCKET |\
	gs_leaf_optype_m = LEAF_1L_POCKET_M |\
	gs_leaf_optype_m = LEAF_2L_POCKET then

	lock "gs_open_3D", "gs_open_2D"
	hideparameter	"gs_open_3D", "gs_open_2D"
endif
if	gs_leaf_optype_m = LEAF_1L_MULTIPANEL | \
	gs_leaf_optype_m = LEAF_1L_MULTIPANEL_M then
	if not(gs_opening_leaves & gs_open2D < EPS) then
		lock "gs_open_2D"
		hideparameter "gs_open_2D"
	endif
	if not(gs_opening_leaves2 & gs_open2D < EPS) then
		lock "gs_open_2D_2"
		hideparameter "gs_open_2D_2"
	endif
	if not(gs_opening_leaves & gs_open3D < EPS) then
		lock "gs_open_3D"
		hideparameter "gs_open_3D"
	endif
	if not(gs_opening_leaves2 & gs_open3D < EPS) then
		lock "gs_open_3D_2"
		hideparameter "gs_open_3D_2"
	endif
endif
if	gs_leaf_optype_m = LEAF_2L_MULTIPANEL then
	if not(gs_opening_leaves & gs_open2D < EPS) then
		lock "gs_open_2D"
		hideparameter "gs_open_2D"
	endif
	if not(gs_opening_leaves2 & gs_open2D_2 < EPS) then
		lock "gs_open_2D_2"
		hideparameter "gs_open_2D_2"
	endif
	if not(gs_opening_leaves & gs_open3D < EPS) then
		lock "gs_open_3D"
		hideparameter "gs_open_3D"
	endif
	if not(gs_opening_leaves2 & gs_open3D_2 < EPS) then
		lock "gs_open_3D_2"
		hideparameter "gs_open_3D_2"
	endif
endif
if	gs_leaf_optype_m <> LEAF_1L_MULTIPANEL & \
	gs_leaf_optype_m <> LEAF_1L_MULTIPANEL_M &\
	gs_leaf_optype_m <> LEAF_2L_MULTIPANEL &\
	gs_leaf_optype_m <> LEAF_2L_SIDE_HUNG &\
	gs_leaf_optype_m <> LEAF_2L_DOUBLE_ACTING &\
	gs_leaf_optype_m <> LEAF_2L_DOUBLE_EGRESS &\
	gs_leaf_optype_m <> LEAF_2L_DOUBLE_EGRESS_M then
	lock "gs_open_2D_2"
	hideparameter "gs_open_2D_2"
endif
if	gs_leaf_optype_m = LEAF_1L_SIDE_HUNG |\
	gs_leaf_optype_m = LEAF_1L_SIDE_HUNG_M |\
	gs_leaf_optype_m = LEAF_1L_DOUBLE_ACTING |\
	gs_leaf_optype_m = LEAF_1L_DOUBLE_ACTING_M |\
	gs_leaf_optype_m = LEAF_2L_SIDE_HUNG |\
	gs_leaf_optype_m = LEAF_2L_DOUBLE_ACTING |\
	gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS |\
	gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS_M |\
	gs_leaf_optype_m = LEAF_1L_PIVOT |\
	gs_leaf_optype_m = LEAF_1L_PIVOT_M then

	lock "gs_open3D", "gs_open2D"
	hideparameter	"gs_open3D", "gs_open2D"
endif
if	gs_leaf_optype_m <> LEAF_2L_2SLIDING & \
	gs_leaf_optype_m <> LEAF_2L_2SLIDING_M & \
	gs_leaf_optype_m <> LEAF_4L_4SLIDING & \
	gs_leaf_optype_m <> LEAF_4L_4SLIDING_M & \
	gs_leaf_optype_m <> LEAF_2L_MULTIPANEL then

	lock "gs_open3D_2", "gs_open2D_2"
	hideparameter "gs_open3D_2", "gs_open2D_2"
endif

if gs_sidelight_right then
	if	(gs_optype_m_05 <> SASH_SIDE_HUNG &\
		gs_optype_m_05 <> SASH_SIDE_HUNG_M &\
		gs_optype_m_05 <> SASH_TILT_TURN &\
		gs_optype_m_05 <> SASH_TILT_TURN_M &\
		gs_optype_m_05 <> SASH_VER_PIVOT &\
		gs_optype_m_05 <> SASH_VER_PIVOT_M &\
		gs_optype_m_05 <> SASH_DOUBLE_SIDE_HUNG &\
		gs_optype_m_05 <> SASH_DOUBLE_TILT_TURN &\
		gs_optype_m_05 <> SASH_DOUBLE_TILT_TURN_M) then
		lock "gs_open_2D_sl_right"
		hideparameter "gs_open_2D_sl_right"
	endif
endif

if gs_sidelight_left then
	if	(gs_optype_m_09 <> SASH_SIDE_HUNG &\
		gs_optype_m_09 <> SASH_SIDE_HUNG_M &\
		gs_optype_m_09 <> SASH_TILT_TURN &\
		gs_optype_m_09 <> SASH_TILT_TURN_M &\
		gs_optype_m_09 <> SASH_VER_PIVOT &\
		gs_optype_m_09 <> SASH_VER_PIVOT_M &\
		gs_optype_m_09 <> SASH_DOUBLE_SIDE_HUNG &\
		gs_optype_m_09 <> SASH_DOUBLE_TILT_TURN &\
		gs_optype_m_09 <> SASH_DOUBLE_TILT_TURN_M) then
		lock "gs_open_2D_sl_left"
		hideparameter "gs_open_2D_sl_left"
	endif
endif


! ==============================================================================
! Uniform Surfaces
! ==============================================================================

dim	surfaceParNames[]							:	dim	surfaceParameters[]
	surfaceParNames[1]	= "gs_frame_mat"		:		surfaceParameters[1]	= gs_frame_mat
	surfaceParNames[2]	= "gs_frame_mat2"		:		surfaceParameters[2]	= gs_frame_mat2
	surfaceParNames[3]	= "gs_leaf_mat"			:		surfaceParameters[3]	= gs_leaf_mat
	surfaceParNames[4]	= "gs_leaf_matin"		:		surfaceParameters[4]	= gs_leaf_matin
	surfaceParNames[5]	= "gs_leaf_mat2"		:		surfaceParameters[5]	= gs_leaf_mat2
	surfaceParNames[6]	= "gs_leaf_mat3"		:		surfaceParameters[6]	= gs_leaf_mat3
	surfaceParNames[7]	= "gs_grill_mat"		:		surfaceParameters[7]	= gs_grill_mat
	surfaceParNames[8]	= "gs_grill_mat2"		:		surfaceParameters[8]	= gs_grill_mat2
	surfaceParNames[9]	= "gs_leaf_grill_mat"	:		surfaceParameters[9]	= gs_leaf_grill_mat
	surfaceParNames[10]	= "gs_leaf_grill_mat2"	:		surfaceParameters[10]	= gs_leaf_grill_mat2
	surfaceParNames[11]	= "gs_panel_mat"		:		surfaceParameters[11]	= gs_panel_mat
	surfaceParNames[12]	= "gs_panel_mat2"		:		surfaceParameters[12]	= gs_panel_mat2

_startDim = 13
sf = _startDim
if gs_door_transom then
	surfaceParNames[sf]	= "gs_transom_mat"		:		surfaceParameters[sf]	= gs_transom_mat		: sf = sf + 1
	surfaceParNames[sf]	= "gs_transom_matin"	:		surfaceParameters[sf]	= gs_transom_matin		: sf = sf + 1
endif

if gs_sidelight_right then
	surfaceParNames[sf]	= "gs_sidelight1_mat"	:		surfaceParameters[sf]	= gs_sidelight1_mat		: sf = sf + 1
	surfaceParNames[sf]	= "gs_sidelight1_matin"	:		surfaceParameters[sf]	= gs_sidelight1_matin	: sf = sf + 1
endif

if gs_sidelight_left then
	surfaceParNames[sf]	= "gs_sidelight2_mat"	:		surfaceParameters[sf]	= gs_sidelight2_mat		: sf = sf + 1
	surfaceParNames[sf]	= "gs_sidelight2_matin"	:		surfaceParameters[sf]	= gs_sidelight2_matin	: sf = sf + 1
endif


_lastModSurfaceParameter = gs_frame_mat

if (stored_material[1][1] <> -9999) & (vardim1(surfaceParNames) = vardim2(stored_material)) then
	for i = 1 to vardim1(surfaceParNames)
		if GLOB_MODPAR_NAME = surfaceParNames[i] then
			_lastModSurfaceParameter	= surfaceParameters[i]
			stored_material[1][i]	= surfaceParameters[i]
			stored_material[2][i]	= 1

			for j = 1 to i-1
				stored_material[2][j]	= 0
				parameters stored_material[2][j]	= stored_material[2][j]
			next j

			for k = i+1 to vardim1(surfaceParNames)
				stored_material[2][k]	= 0
				parameters stored_material[2][k]	= stored_material[2][k]
			next k
		endif

		parameters	stored_material[1][i]	= stored_material[1][i],
					stored_material[2][i]	= stored_material[2][i]

		if stored_material[2][i] = 1 then
			_lastModSurfaceParameter = stored_material[1][i]
		endif
	next i
else
	gosub "preloadSurfaces"
endif

if bLinkSurfacesFrameSash then
	parameters	gs_frame_mat		= _lastModSurfaceParameter,
				gs_frame_mat2		= _lastModSurfaceParameter,
				gs_leaf_mat			= _lastModSurfaceParameter,
				gs_leaf_matin		= _lastModSurfaceParameter,
				gs_leaf_mat2		= _lastModSurfaceParameter,
				gs_leaf_mat3		= _lastModSurfaceParameter,
				gs_grill_mat		= _lastModSurfaceParameter,
				gs_grill_mat2		= _lastModSurfaceParameter,
				gs_leaf_grill_mat	= _lastModSurfaceParameter,
				gs_leaf_grill_mat2	= _lastModSurfaceParameter,
				gs_panel_mat		= _lastModSurfaceParameter,
				gs_panel_mat2		= _lastModSurfaceParameter

	if gs_door_transom then
		parameters	gs_transom_mat		= _lastModSurfaceParameter,
					gs_transom_matin	= _lastModSurfaceParameter
	endif

	if gs_sidelight_right then
		parameters	gs_sidelight1_mat	= _lastModSurfaceParameter,
					gs_sidelight1_matin	= _lastModSurfaceParameter
	endif

	if gs_sidelight_left then
		parameters	gs_sidelight2_mat	= _lastModSurfaceParameter,
					gs_sidelight2_matin	= _lastModSurfaceParameter
	endif
else
	if GLOB_MODPAR_NAME = "bLinkSurfacesFrameSash" then
		parameters	gs_frame_mat		= stored_material[1][1],
					gs_frame_mat2		= stored_material[1][2],
					gs_leaf_mat			= stored_material[1][3],
					gs_leaf_matin		= stored_material[1][4],
					gs_leaf_mat2		= stored_material[1][5],
					gs_leaf_mat3		= stored_material[1][6],
					gs_grill_mat		= stored_material[1][7],
					gs_grill_mat2		= stored_material[1][8],
					gs_leaf_grill_mat	= stored_material[1][9],
					gs_leaf_grill_mat2	= stored_material[1][10],
					gs_panel_mat		= stored_material[1][11],
					gs_panel_mat2		= stored_material[1][12]

		sf = _startDim
		if gs_door_transom then
			parameters	gs_transom_mat		= stored_material[1][sf]	: sf = sf + 1
			parameters	gs_transom_matin	= stored_material[1][sf]	: sf = sf + 1
		endif

		if gs_sidelight_right then
			parameters	gs_sidelight1_mat	= stored_material[1][sf]	: sf = sf + 1
			parameters	gs_sidelight1_matin	= stored_material[1][sf]	: sf = sf + 1
		endif

		if gs_sidelight_left then
			parameters	gs_sidelight2_mat	= stored_material[1][sf]	: sf = sf + 1
			parameters	gs_sidelight2_matin	= stored_material[1][sf]	: sf = sf + 1
		endif
	else
		gosub "preloadSurfaces"
	endif
endif


! ==============================================================================
! Common Door Panel and Sidelight/Transom Parameters
! ==============================================================================

if GLOB_MODPAR_NAME = "gs_leaf_glass_pen" then
	gs_glass_pen = gs_leaf_glass_pen
	parameters gs_glass_pen = gs_glass_pen
else
	gs_leaf_glass_pen = gs_glass_pen
	parameters gs_leaf_glass_pen = gs_leaf_glass_pen
endif

if GLOB_MODPAR_NAME = "gs_leaf_glass_mat" then
	gs_glass_mat = gs_leaf_glass_mat
	parameters gs_glass_mat = gs_glass_mat
else
	gs_leaf_glass_mat = gs_glass_mat
	parameters gs_leaf_glass_mat = gs_leaf_glass_mat
endif

if GLOB_MODPAR_NAME = "gs_leaf_grill_mat" then
	gs_grill_mat = gs_leaf_grill_mat
	parameters gs_grill_mat = gs_grill_mat
else
	gs_leaf_grill_mat = gs_grill_mat
	parameters gs_leaf_grill_mat = gs_leaf_grill_mat
endif

if GLOB_MODPAR_NAME = "gs_leaf_grill_mat2" then
	gs_grill_mat2 = gs_leaf_grill_mat2
	parameters gs_grill_mat2 = gs_grill_mat2
else
	gs_leaf_grill_mat2 = gs_grill_mat2
	parameters gs_leaf_grill_mat2 = gs_leaf_grill_mat2
endif

! ==============================================================================
! Door Panel
! ==============================================================================

if	iOpeningMethod = OPENMETHOD_OPEN_SIMP |\
	iOpeningMethod = OPENMETHOD_OPEN_DOUB then
	iHandleCategoryEnable	= 1 + 2 + 4 + 64
	if bMetalDoor | bStorefrontDoor then
		iHandleCategoryEnable	= 2 + 4 + 8 + 16 + 64
	endif
	if bBombShelter then
		iHandleCategoryEnable	= 2 + 8 + 16 + 32
	endif
endif
if iOpeningMethod = OPENMETHOD_PIVOT then
	iHandleCategoryEnable	= 2 + 4 + 8 + 64
endif
if	iOpeningMethod = OPENMETHOD_SLIDE_INT |\
	iOpeningMethod = OPENMETHOD_SLIDE_EXT_SIMP |\
	iOpeningMethod = OPENMETHOD_SLIDE_EXT_DOUB |\
	iOpeningMethod = OPENMETHOD_POCKET_SIMP |\
	iOpeningMethod = OPENMETHOD_POCKET_DOUB |\
	iOpeningMethod = OPENMETHOD_SLIDFOLD_SIMP |\
	iOpeningMethod = OPENMETHOD_SLIDFOLD_BIFOLD	 then
	iHandleCategoryEnable	= 1 + 4 + 128
endif

if	gs_leaf_optype_m = LEAF_2L_EXTERNAL_SLIDING  |\
	gs_leaf_optype_m = LEAF_1L_EXTERNAL_SLIDING |\
	gs_leaf_optype_m = LEAF_1L_EXTERNAL_SLIDING_M then
		ac_leaf_width	= ac_wallhole_width
		ac_leaf_height	= ac_wallhole_height
endif

dim leafWidthArray[]
leafWidthArray[1] = ac_leaf_width

if	gs_leaf_optype_m = LEAF_2L_SIDE_HUNG |\
	gs_leaf_optype_m = LEAF_2L_DOUBLE_ACTING |\
	gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS |\
	gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS_M |\
	gs_leaf_optype_m = LEAF_2L_1SLIDING |\
	gs_leaf_optype_m = LEAF_2L_1SLIDING_M |\
	gs_leaf_optype_m = LEAF_2L_2SLIDING |\
	gs_leaf_optype_m = LEAF_2L_2SLIDING_M |\
	gs_leaf_optype_m = LEAF_2L_EXTERNAL_SLIDING |\
	gs_leaf_optype_m = LEAF_2L_POCKET then

	if bAsymmetricLeafs then
		leafWidthArray[1] = ac_leaf_width - gs_SecondLeaf_w
		leafWidthArray[2] = gs_SecondLeaf_w
	else
		leafWidthArray[1] = ac_leaf_width / 2
		leafWidthArray[2] = ac_leaf_width / 2
	endif
endif

if	gs_leaf_optype_m = LEAF_3L_2SLIDING |\
	gs_leaf_optype_m = LEAF_3L_2SLIDING_M |\
	gs_leaf_optype_m = LEAF_3L_2SLIDING_CENTER then
		leafWidthArray[1] = ac_leaf_width / 3
		leafWidthArray[2] = ac_leaf_width / 3
		leafWidthArray[3] = ac_leaf_width / 3
endif

if	gs_leaf_optype_m = LEAF_4L_2SLIDING  |\
	gs_leaf_optype_m = LEAF_4L_3SLIDING  |\
	gs_leaf_optype_m = LEAF_4L_3SLIDING_M  |\
	gs_leaf_optype_m = LEAF_4L_4SLIDING  |\
	gs_leaf_optype_m = LEAF_4L_4SLIDING_M then
		leafWidthArray[1] = ac_leaf_width / 4
		leafWidthArray[2] = ac_leaf_width / 4
		leafWidthArray[3] = ac_leaf_width / 4
		leafWidthArray[4] = ac_leaf_width / 4
endif

if gs_leaf_optype_m = LEAF_1L_MULTIPANEL then
	for lnum = 1 to gs_leaf_num
		leafWidthArray[lnum] = ac_leaf_width / gs_leaf_num
	next lnum
endif

if gs_leaf_optype_m = LEAF_2L_MULTIPANEL then
	_leafnum = gs_leaf_num + gs_leaf_num2
	for lnum = 1 to _leafnum
		leafWidthArray[lnum] = ac_leaf_width / _leafnum
	next lnum
endif

if iLeafShape = LEAF_SHAPE_HALFARCHED | iLeafShape = LEAF_SHAPE_ARCHED then
	if lod3D = 5 then
		gs_shoulder_h = (ac_wallhole_height - r2) + fcefw
	else
		gs_shoulder_h = (ac_wallhole_height - r2) + fce_leaf_rebate
	endif
endif

call "DoorLeafPanels" parameters all A = ac_leaf_width,
									 B = ac_leaf_height,
	iOpeningMethod			= iOpeningMethod,
	bEnableKickBoard		= bEnableKickBoard,
	bSecondKickBoard		= bSecondKickBoard,
	bKickBoardOut			= bKickBoardOut,
	bKickBoardIn			= bKickBoardIn,
	kickBoardHeight			= kickBoardHeight,
	bKickBoardOut2			= bKickBoardOut2,
	bKickBoardIn2			= bKickBoardIn2,
	kickBoardHeight2		= kickBoardHeight2,
	gs_shoulder_h			= gs_shoulder_h,
	iLeafShape				= iLeafShape,
	bAsymmetricLeafs		= bAsymmetricLeafs,
	iHandleCategoryEnable	= iHandleCategoryEnable,
	bMetalDoor				= bMetalDoor,
	bStorefrontDoor			= bStorefrontDoor,
	bFoldingDoor			= bFoldingDoor,
	bBombShelter			= bBombShelter,
	gs_leaf_optype_m		= gs_leaf_optype_m,
	gs_SecondLeaf_w			= gs_SecondLeaf_w,
	stDoorTypes				= stDoorTypes,
	stGrillPos				= stGrillPos,
	leafWidthArray			= leafWidthArray,
returned_parameters	bLockMullionParamsLeaf,
					bLockGlassParamsLeaf,
					PanelGlassArea

glassarea_counter = glassarea_counter + PanelGlassArea


! =============================================================================
! Kick Board
! =============================================================================

if bEnableKickBoard then
	if bAsymmetricLeafs then
		values{2} "gs_kickboard_set_to_edit"	KICKBOARD_IN_MAIN_PANEL,	stKickBoardSetToLeaf[1],
												KICKBOARD_IN_SECOND_PANEL,	stKickBoardSetToLeaf[2]
	endif
endif


! =============================================================================
! Sash Parameters
! =============================================================================

bHaveNonfixSashSidelight = 0
bHaveNonfixSashSidelight = bHaveNonfixSashSidelight | (gs_sidelight_left  & gs_optype_m_09 <> SASH_FIXED)	! Left Sidelight
bHaveNonfixSashSidelight = bHaveNonfixSashSidelight | (gs_sidelight_right & gs_optype_m_05 <> SASH_FIXED)	! Right Sidelight

bHaveNonfixSashTransom = 0
bHaveNonfixSashTransom = bHaveNonfixSashTransom | (gs_door_transom & gs_optype_m_02 <> SASH_FIXED)		! Transom
bHaveNonfixSashTransom = bHaveNonfixSashTransom | (gs_sidelight_left  & gs_LeftMullion_Top  & gs_door_transom & gs_Transom_toLeft  & gs_optype_m_10 <> SASH_FIXED)	! Left Upper Sidelight
bHaveNonfixSashTransom = bHaveNonfixSashTransom | (gs_sidelight_right & gs_RightMullion_Top & gs_door_transom & gs_Transom_toRight & gs_optype_m_06 <> SASH_FIXED)	! Right Upper Sidelight

if not(bHaveNonfixSashSidelight | bHaveNonfixSashTransom) then
	hideparameter "gs_sidelight_rebate_width", "gs_sash_thk"	! Do not lock, just hide it
endif
if not(bHaveNonfixSashTransom) then
	hideparameter "gs_sash_width"	! Do not lock, just hide it
endif
if not(bHaveNonfixSashSidelight) then
	hideparameter "gs_sl_sash_width"	! Do not lock, just hide it
endif

if bDisableSidelightSashWidth then
	lock "gs_sl_sash_width"
endif

if not(gs_sidelight_left & gs_door_transom & (gs_SidelightTransomRelation_m = SIDELIGHT_CROSSES_TRANSOM)) then
	lock	"gs_optype_10", "gs_optype_m_10",
			"iMullionStyle_10", "MullionStyle_10",
			"gs_horiz_div_height_10",
			"gs_cust_panel_10", "gs_cust_panel2_10",
			"hgn_10", "vgn_10", "hgn2_10", "vgn2_10",
			"openingAngle_10", "openingAngle2_10",
			"openingLength_10", "openingLength2_10"
	hideparameter	"gs_optype_10", "gs_optype_m_10",
					"iMullionStyle_10", "MullionStyle_10",
					"gs_horiz_div_height_10",
					"gs_cust_panel_10", "gs_cust_panel2_10",
					"hgn_10", "vgn_10", "hgn2_10", "vgn2_10",
					"openingAngle_10", "openingAngle2_10",
					"openingLength_10", "openingLength2_10"
endif

if not(gs_door_transom) then
	lock	"gs_optype_02", "gs_optype_m_02",
			"iMullionStyle_02", "MullionStyle_02",
			"gs_horiz_div_height_02",
			"gs_cust_panel_02", "gs_cust_panel2_02",
			"hgn_02", "vgn_02", "hgn2_02", "vgn2_02",
			"openingAngle_02", "openingAngle2_02",
			"openingLength_02", "openingLength2_02"
	hideparameter	"gs_optype_02", "gs_optype_m_02",
					"iMullionStyle_02", "MullionStyle_02",
					"gs_horiz_div_height_02",
					"gs_cust_panel_02", "gs_cust_panel2_02",
					"hgn_02", "vgn_02", "hgn2_02", "vgn2_02",
					"openingAngle_02", "openingAngle2_02",
					"openingLength_02", "openingLength2_02"
endif

if not(gs_sidelight_right & gs_door_transom & (gs_SidelightTransomRelation_m = SIDELIGHT_CROSSES_TRANSOM)) then
	lock	"gs_optype_06", "gs_optype_m_06",
			"iMullionStyle_06", "MullionStyle_06",
			"gs_horiz_div_height_06",
			"gs_cust_panel_06", "gs_cust_panel2_06",
			"hgn_06", "vgn_06", "hgn2_06", "vgn2_06",
			"openingAngle_06", "openingAngle2_06",
			"openingLength_06", "openingLength2_06"
	hideparameter	"gs_optype_06", "gs_optype_m_06",
					"iMullionStyle_06", "MullionStyle_06",
					"gs_horiz_div_height_06",
					"gs_cust_panel_06", "gs_cust_panel2_06",
					"hgn_06", "vgn_06", "hgn2_06", "vgn2_06",
					"openingAngle_06", "openingAngle2_06",
					"openingLength_06", "openingLength2_06"
endif

if not(gs_sidelight_left) then
	lock	"gs_optype_09", "gs_optype_m_09",
			"iMullionStyle_09", "MullionStyle_09",
			"gs_horiz_div_height_09",
			"gs_cust_panel_09", "gs_cust_panel2_09",
			"hgn_09", "vgn_09", "hgn2_09", "vgn2_09",
			"openingAngle_09", "openingAngle2_09",
			"openingLength_09", "openingLength2_09"
	hideparameter	"gs_optype_09", "gs_optype_m_09",
					"iMullionStyle_09", "MullionStyle_09",
					"gs_horiz_div_height_09",
					"gs_cust_panel_09", "gs_cust_panel2_09",
					"hgn_09", "vgn_09", "hgn2_09", "vgn2_09",
					"openingAngle_09", "openingAngle2_09",
					"openingLength_09", "openingLength2_09"
endif

if not(gs_sidelight_right) then
	lock	"gs_optype_05", "gs_optype_m_05",
			"iMullionStyle_05", "MullionStyle_05",
			"gs_horiz_div_height_05",
			"gs_cust_panel_05", "gs_cust_panel2_05",
			"hgn_05", "vgn_05", "hgn2_05", "vgn2_05",
			"openingAngle_05", "openingAngle2_05",
			"openingLength_05", "openingLength2_05"
	hideparameter	"gs_optype_05", "gs_optype_m_05",
					"iMullionStyle_05", "MullionStyle_05",
					"gs_horiz_div_height_05",
					"gs_cust_panel_05", "gs_cust_panel2_05",
					"hgn_05", "vgn_05", "hgn2_05", "vgn2_05",
					"openingAngle_05", "openingAngle2_05",
					"openingLength_05", "openingLength2_05"
endif

if gs_sidelight_left & not(gs_bSidelight_fr_hdiv_left) then
	lock	"gs_optype_11", "gs_optype_m_11",
			"iMullionStyle_11", "MullionStyle_11",
			"gs_horiz_div_height_11",
			"gs_cust_panel_11", "gs_cust_panel2_11",
			"hgn_11", "vgn_11", "hgn2_11", "vgn2_11",
			"openingAngle_11", "openingAngle2_11",
			"openingLength_11", "openingLength2_11"
	hideparameter	"gs_optype_11", "gs_optype_m_11",
					"iMullionStyle_11", "MullionStyle_11",
					"gs_horiz_div_height_11",
					"gs_cust_panel_11", "gs_cust_panel2_11",
					"hgn_11", "vgn_11", "hgn2_11", "vgn2_11",
					"openingAngle_11", "openingAngle2_11",
					"openingLength_11", "openingLength2_11"
endif

if gs_sidelight_right & not(gs_bSidelight_fr_hdiv_right) then
	lock	"gs_optype_07", "gs_optype_m_07",
			"iMullionStyle_07", "MullionStyle_07",
			"gs_horiz_div_height_07",
			"gs_cust_panel_07", "gs_cust_panel2_07",
			"hgn_07", "vgn_07", "hgn2_07", "vgn2_07",
			"openingAngle_07", "openingAngle2_07",
			"openingLength_07", "openingLength2_07"
	hideparameter	"gs_optype_07", "gs_optype_m_07",
					"iMullionStyle_07", "MullionStyle_07",
					"gs_horiz_div_height_07",
					"gs_cust_panel_07", "gs_cust_panel2_07",
					"hgn_07", "vgn_07", "hgn2_07", "vgn2_07",
					"openingAngle_07", "openingAngle2_07",
					"openingLength_07", "openingLength2_07"
endif



! =============================================================================
! Sash Options
! =============================================================================

if gs_sash_uniform then
	if gs_sidelight_left then
		lock "vgn_05", "hgn_05", "vgn2_05", "hgn2_05"
		hideparameter "vgn_05", "hgn_05", "vgn2_05", "hgn2_05"

		if gs_bSidelight_fr_hdiv_left then
			lock "vgn_07", "hgn_07", "vgn2_07", "hgn2_07"
			hideparameter "vgn_07", "hgn_07", "vgn2_07", "hgn2_07"
		endif
	endif
	lock "vgn_06", "hgn_06", "vgn2_06", "hgn2_06"
	hideparameter "vgn_06", "hgn_06", "vgn2_06", "hgn2_06"
	lock "vgn_10", "hgn_10", "vgn2_10", "hgn2_10"
	hideparameter "vgn_10", "hgn_10", "vgn2_10", "hgn2_10"
endif

dim sashMullionResetArray[3][3]
for i=1 to 3
	for j=1 to 3
		sashMullionResetArray[i][j]	= 0
	next j
next i
if GLOB_MODPAR_NAME <> "" then
	! Not in case of multiple selection
	if	GLOB_MODPAR_NAME = "A" | \
		GLOB_MODPAR_NAME = "B" | \
		(gs_sash_uniform & (GLOB_MODPAR_NAME = "gs_sash_uniform" | GLOB_MODPAR_NAME = "MullionStyle_00" | GLOB_MODPAR_NAME = "iMullionStyle_00")) | \
		(not(gs_unit_nominal) & (GLOB_MODPAR_NAME = "gs_tolerance_left" | GLOB_MODPAR_NAME = "gs_tolerance_right" | GLOB_MODPAR_NAME = "gs_tolerance_upper" | GLOB_MODPAR_NAME = "gs_tolerance_lower")) |\
		GLOB_MODPAR_NAME = "gs_SidelightTransomRelation" |\
		GLOB_MODPAR_NAME = "gs_SidelightTransomRelation_m" |\
		GLOB_MODPAR_NAME = "bVentilationProfile"		|\
		GLOB_MODPAR_NAME = "iVentilationProfileType"	|\
		(GLOB_MODPAR_NAME = "VentilationProfileHeight" & bVentilationProfile & (iVentilationProfileType = VENTPROFILE_OVER_FRAME)) then
		! Reset all sashes
		for i=1 to 3
			for j=1 to 3
				sashMullionResetArray[i][j]	= 1
			next j
		next i
	else
		! Reset specific sashes
		if gs_door_transom then
			if GLOB_MODPAR_NAME = "gs_door_transom" | GLOB_MODPAR_NAME = "gs_transom_height" | GLOB_MODPAR_NAME = "gs_sidelight_width_right" |\
				(GLOB_MODPAR_NAME = "gs_sash_width" & gs_optype_m_10 <> SASH_FIXED) then
				sashMullionResetArray[1][1]	= 1
			endif
			if GLOB_MODPAR_NAME = "gs_door_transom" | GLOB_MODPAR_NAME = "gs_transom_height" |\
				(gs_SidelightTransomRelation_m <> SIDELIGHT_UNDER_TRANSOM &\
				(GLOB_MODPAR_NAME = "gs_sidelight_width_left" | GLOB_MODPAR_NAME = "gs_sidelight_width_left_half" | GLOB_MODPAR_NAME = "gs_sidelight_width_right" | GLOB_MODPAR_NAME = "gs_sidelight_width_right_half")) |\
				(GLOB_MODPAR_NAME = "gs_sash_width" & gs_optype_m_02 <> SASH_FIXED) then
				sashMullionResetArray[1][2]	= 1
			endif
			if GLOB_MODPAR_NAME = "gs_door_transom" | GLOB_MODPAR_NAME = "gs_transom_height" | GLOB_MODPAR_NAME = "gs_sidelight_width_left" |\
				(GLOB_MODPAR_NAME = "gs_sash_width" & gs_optype_m_06 <> SASH_FIXED) then
				sashMullionResetArray[1][3]	= 1
			endif
		endif
		if	GLOB_MODPAR_NAME = "gs_door_transom" | GLOB_MODPAR_NAME = "gs_transom_height" |\
			GLOB_MODPAR_NAME = "gs_bSidelight_fr_hdiv_left" | GLOB_MODPAR_NAME = "gs_sidelight_fr_hdiv_hgt_left" | GLOB_MODPAR_NAME = "gs_sidelight_fr_hdiv_wdt_left" |\
			GLOB_MODPAR_NAME = "gs_sidelight_width_left" | GLOB_MODPAR_NAME = "gs_sidelight_width_left_half" | GLOB_MODPAR_NAME = "gs_sidelight_parapet_hgt_left" |\
			(GLOB_MODPAR_NAME = "gs_sl_sash_width" & gs_optype_m_09 <> SASH_FIXED) then
			sashMullionResetArray[2][1]	= 1
		endif
		if	GLOB_MODPAR_NAME = "gs_door_transom" | GLOB_MODPAR_NAME = "gs_transom_height" |\
			GLOB_MODPAR_NAME = "gs_bSidelight_fr_hdiv_right" | GLOB_MODPAR_NAME = "gs_sidelight_fr_hdiv_hgt_right" | GLOB_MODPAR_NAME = "gs_sidelight_fr_hdiv_wdt_right" |\
			GLOB_MODPAR_NAME = "gs_sidelight_width_right" | GLOB_MODPAR_NAME = "gs_sidelight_width_right_half" | GLOB_MODPAR_NAME = "gs_sidelight_parapet_hgt_right" |\
			(GLOB_MODPAR_NAME = "gs_sl_sash_width" & gs_optype_m_05 <> SASH_FIXED) then
			sashMullionResetArray[2][3]	= 1
		endif
		if	GLOB_MODPAR_NAME = "gs_bSidelight_fr_hdiv_left" | GLOB_MODPAR_NAME = "gs_sidelight_fr_hdiv_hgt_left" | GLOB_MODPAR_NAME = "gs_sidelight_fr_hdiv_wdt_left" |\
			GLOB_MODPAR_NAME = "gs_sidelight_width_left" | GLOB_MODPAR_NAME = "gs_sidelight_width_left_half" | GLOB_MODPAR_NAME = "gs_sidelight_parapet_hgt_left" |\
			(GLOB_MODPAR_NAME = "gs_sl_sash_width" & gs_optype_m_11 <> SASH_FIXED) then
			sashMullionResetArray[3][1]	= 1
		endif
		if	GLOB_MODPAR_NAME = "gs_bSidelight_fr_hdiv_right" | GLOB_MODPAR_NAME = "gs_sidelight_fr_hdiv_hgt_right" | GLOB_MODPAR_NAME = "gs_sidelight_fr_hdiv_wdt_right" |\
			GLOB_MODPAR_NAME = "gs_sidelight_width_right" | GLOB_MODPAR_NAME = "gs_sidelight_width_right_half" | GLOB_MODPAR_NAME = "gs_sidelight_parapet_hgt_right" |\
			(GLOB_MODPAR_NAME = "gs_sl_sash_width" & gs_optype_m_07 <> SASH_FIXED) then
			sashMullionResetArray[3][3]	= 1
		endif
	endif
endif

if abs(ac_unit_height - gs_shoulder_h) > EPS & bArchedTop then
	arcrad					= ((ac_unit_width^2)/4 + (ac_unit_height - gs_shoulder_h)^2) / (2 * (ac_unit_height - gs_shoulder_h))
	triangHIn				= SQR((arcrad - gs_frame_width_right)^2 -  (ac_unit_width/2 - gs_frame_width_right)^2)
else
	arcrad					= 0
	triangHIn				= 0
endif

call "Casement_rectangular" parameters	iWindowClass			= 7,		! WINCLASS_DOORSASH
										isWindow				= 0,
										CasementIDArray 		= CasementIDArray,
										CasementTypeArray		= CasementTypeArray,
										CasementShapeArray		= CasementShapeArray,
										sashWidthArray			= sashWidthArray,
										sashHeightArray			= sashHeightArray,
										sashMullionResetArray	= sashMullionResetArray,
										gs_frame_thk			= gs_frame_thkin,
										gs_sash_uniform			= gs_sash_uniform,
										gs_sash_thk				= gs_sash_thk,
										gs_sash_width			= gs_sash_width,
										gs_sl_sash_width		= gs_sl_sash_width,
										gs_rebate_width			= gs_sidelight_rebate_width,
										gs_bLeftSLight			= gs_sidelight_left,
										gs_bSLight				= gs_sidelight_right,
										gs_UTrans				= gs_door_transom,
										gs_LTrans				= gs_bSidelight_fr_hdiv_right | gs_bSidelight_fr_hdiv_left,
										gs_UTrans_Div			= gs_door_transom & (gs_SidelightTransomRelation_m = SIDELIGHT_CROSSES_TRANSOM),
										gs_LTrans_Div			= 1,
										iMullionPosition		= iMullionPosition,
										MullionStyle_00			= MullionStyle_00,
										iMullionStyle_00		= iMullionStyle_00,
										MullionStyle_02			= MullionStyle_02,
										iMullionStyle_02		= iMullionStyle_02,
										iMullionStyleOriginal_02= iMullionStyleOriginal_02,
										MullionStyle_05			= MullionStyle_05,
										iMullionStyle_05		= iMullionStyle_05,
										iMullionStyleOriginal_05= iMullionStyleOriginal_05,
										MullionStyle_06			= MullionStyle_06,
										iMullionStyle_06		= iMullionStyle_06,
										iMullionStyleOriginal_06= iMullionStyleOriginal_06,
										MullionStyle_07			= MullionStyle_07,
										iMullionStyle_07		= iMullionStyle_07,
										iMullionStyleOriginal_07= iMullionStyleOriginal_07,
										MullionStyle_09			= MullionStyle_09,
										iMullionStyle_09		= iMullionStyle_09,
										iMullionStyleOriginal_09= iMullionStyleOriginal_09,
										MullionStyle_10			= MullionStyle_10,
										iMullionStyle_10		= iMullionStyle_10,
										iMullionStyleOriginal_10= iMullionStyleOriginal_10,
										MullionStyle_11			= MullionStyle_11,
										iMullionStyle_11		= iMullionStyle_11,
										iMullionStyleOriginal_11= iMullionStyleOriginal_11,
										MullionPosition			= MullionPosition,
										sashFrameWidth			= sashFrameWidth,
										gs_horiz_div_height_02	= gs_horiz_div_height_02,
										gs_horiz_div_height_05	= gs_horiz_div_height_05,
										gs_horiz_div_height_06	= gs_horiz_div_height_06,
										gs_horiz_div_height_07	= gs_horiz_div_height_07,
										gs_horiz_div_height_09	= gs_horiz_div_height_09,
										gs_horiz_div_height_10	= gs_horiz_div_height_10,
										gs_horiz_div_height_11	= gs_horiz_div_height_11,
										gs_optype_02			= gs_optype_02,
										gs_optype_05			= gs_optype_05,
										gs_optype_06			= gs_optype_06,
										gs_optype_07			= gs_optype_07,
										gs_optype_09			= gs_optype_09,
										gs_optype_10			= gs_optype_10,
										gs_optype_11			= gs_optype_11,
										gs_optype_m_02			= gs_optype_m_02,
										gs_optype_m_05			= gs_optype_m_05,
										gs_optype_m_06			= gs_optype_m_06,
										gs_optype_m_07			= gs_optype_m_07,
										gs_optype_m_09			= gs_optype_m_09,
										gs_optype_m_10			= gs_optype_m_10,
										gs_optype_m_11			= gs_optype_m_11,
										stSashType				= stSashType,
										gw						= gw,
										ghe						= ghe,
										gs_sidelight_div_width	= gs_sidelight_div_width,
										gs_sidelight_div_thk	= gs_sidelight_div_thk,
										vgn_02					= vgn_02,
										hgn_02					= hgn_02,
										vgn_05					= vgn_05,
										hgn_05					= hgn_05,
										vgn_06					= vgn_06,
										hgn_06					= hgn_06,
										vgn_07					= vgn_07,
										hgn_07					= hgn_07,
										vgn_09					= vgn_09,
										hgn_09					= hgn_09,
										vgn_10					= vgn_10,
										hgn_10					= hgn_10,
										vgn_11					= vgn_11,
										hgn_11					= hgn_11,
										vgn2_02					= vgn2_02,
										hgn2_02					= hgn2_02,
										vgn2_05					= vgn2_05,
										hgn2_05					= hgn2_05,
										vgn2_06					= vgn2_06,
										hgn2_06					= hgn2_06,
										vgn2_07					= vgn2_07,
										hgn2_07					= hgn2_07,
										vgn2_09					= vgn2_09,
										hgn2_09					= hgn2_09,
										vgn2_10					= vgn2_10,
										hgn2_10					= hgn2_10,
										vgn2_11					= vgn2_11,
										hgn2_11					= hgn2_11,
										vergrid_02				= vergrid_02,
										horgrid_02				= horgrid_02,
										vergrid_05				= vergrid_05,
										horgrid_05				= horgrid_05,
										vergrid_06				= vergrid_06,
										horgrid_06				= horgrid_06,
										vergrid_07				= vergrid_07,
										horgrid_07				= horgrid_07,
										vergrid_09				= vergrid_09,
										horgrid_09				= horgrid_09,
										vergrid_10				= vergrid_10,
										horgrid_10				= horgrid_10,
										vergrid_11				= vergrid_11,
										horgrid_11				= horgrid_11,
										vergrid2_05				= vergrid2_05,
										horgrid2_05				= horgrid2_05,
										vergrid2_06				= vergrid2_06,
										horgrid2_06				= horgrid2_06,
										vergrid2_07				= vergrid2_07,
										horgrid2_07				= horgrid2_07,
										vergrid2_09				= vergrid2_09,
										horgrid2_09				= horgrid2_09,
										vergrid2_10				= vergrid2_10,
										horgrid2_10				= horgrid2_10,
										vergrid2_11				= vergrid2_11,
										horgrid2_11				= horgrid2_11,
										bVentilationProfile				= bVentilationProfile,
										iVentilationProfileType			= iVentilationProfileType,
										VentilationProfileHeight		= VentilationProfileHeight,
										isVentilationProfileInSash_01	= isVentilationProfileInSash_01,
										isVentilationProfileInSash_02	= isVentilationProfileInSash_02,
										isVentilationProfileInSash_03	= isVentilationProfileInSash_03,
										isVentilationProfileInSash_04	= isVentilationProfileInSash_04,
										isVentilationProfileInSash_05	= isVentilationProfileInSash_05,
										isVentilationProfileInSash_06	= isVentilationProfileInSash_06,
										isVentilationProfileInSash_07	= isVentilationProfileInSash_07,
										isVentilationProfileInSash_08	= isVentilationProfileInSash_08,
										isVentilationProfileInSash_09	= isVentilationProfileInSash_09,
										isVentilationProfileInSash_10	= isVentilationProfileInSash_10,
										isVentilationProfileInSash_11	= isVentilationProfileInSash_11,
										stMullionPosition		= stMullionPosition,
										stOpeningType			= stOpeningType,
										openingAngle_02			= openingAngle_02,
										openingAngle_05			= openingAngle_05,
										openingAngle_06			= openingAngle_06,
										openingAngle_07			= openingAngle_07,
										openingAngle_09			= openingAngle_09,
										openingAngle_10			= openingAngle_10,
										openingAngle_11			= openingAngle_11,
										openingAngle2_02		= openingAngle2_02,
										openingAngle2_05		= openingAngle2_05,
										openingAngle2_06		= openingAngle2_06,
										openingAngle2_07		= openingAngle2_07,
										openingAngle2_09		= openingAngle2_09,
										openingAngle2_10		= openingAngle2_10,
										openingAngle2_11		= openingAngle2_11,
										glassShoulderHeight		= gs_transom_height - gs_frame_width_right - (arcrad - triangHIn),
										LouverStyle				= LouverStyle,
										iLouverStyle			= iLouverStyle,
										gs_louver_thk			= gs_louver_thk,
										gs_louver_width			= gs_louver_width,
										gs_louver_opening_angle	= gs_louver_opening_angle,
										gs_ventSashLouver_mat	= gs_ventSashLouver_mat,
										bSlidingUIalternative	= bSlidingUIalternative,
								returned_parameters	bLockMullionParamsSash,
													bLockGlassParamsSash,
													PanelGlassArea

glassarea_counter = glassarea_counter + PanelGlassArea

if not(bLockMullionParamsLeaf | bLockMullionParamsSash) then
	hideparameter "gs_leaf_grill_mat"
	hideparameter "gs_leaf_grill_mat2"
endif
if bLockGlassParamsLeaf & bLockGlassParamsSash then
	hideparameter "gs_leaf_glass_pen", "gs_leaf_glass_mat"
	lock "gs_leaf_glass_pen", "gs_leaf_glass_mat"
endif
if not(bLockGlassParamsSash) then
	hideparameter "gs_leaf_glass_pen", "gs_leaf_glass_mat"
endif

! =============================================================================
! Total Glazed Area Listing Parameters
! =============================================================================
if NOT(gs_list_glassarea_override) then
	if GLOB_MODPAR_NAME = "gs_list_glassarea" then
		gs_list_glassarea_tmp = gs_list_glassarea
		parameters gs_list_glassarea_tmp = gs_list_glassarea_tmp
	else
		gs_list_glassarea = gs_list_glassarea_tmp
		parameters gs_list_glassarea = gs_list_glassarea
	endif

	parameters gs_list_glassarea = glassarea_counter
	lock "gs_list_glassarea"
else
	if GLOB_MODPAR_NAME = "gs_list_glassarea" then
		gs_list_glassarea_tmp = gs_list_glassarea
		parameters gs_list_glassarea_tmp = gs_list_glassarea_tmp
	else
		gs_list_glassarea = gs_list_glassarea_tmp
		parameters gs_list_glassarea = gs_list_glassarea
	endif
endif


! =============================================================================
! Orientation
! =============================================================================

values{2} "gs_list_orientationDef_m"	0, `Автоматически`,
										1, `Специальный`

if gs_list_orientationDef_m = 0 then
	ac_OpeningSide = ""
	if	gs_leaf_optype_m = LEAF_1L_SIDE_HUNG |\
		gs_leaf_optype_m = LEAF_2L_SIDE_HUNG |\
		gs_leaf_optype_m = LEAF_2L_1SLIDING |\
		gs_leaf_optype_m = LEAF_3L_2SLIDING |\
		gs_leaf_optype_m = LEAF_4L_3SLIDING |\
		gs_leaf_optype_m = LEAF_1L_EXTERNAL_SLIDING |\
		gs_leaf_optype_m = LEAF_1L_POCKET then

		if SYMB_MIRRORED then
			ac_OpeningSide = stOpeningSide[2]
		else
			ac_OpeningSide = stOpeningSide[1]
		endif
	endif
	if	gs_leaf_optype_m = LEAF_1L_SIDE_HUNG_M |\
		gs_leaf_optype_m = LEAF_2L_1SLIDING_M |\
		gs_leaf_optype_m = LEAF_3L_2SLIDING_M |\
		gs_leaf_optype_m = LEAF_4L_3SLIDING_M |\
		gs_leaf_optype_m = LEAF_1L_EXTERNAL_SLIDING_M |\
		gs_leaf_optype_m = LEAF_1L_POCKET_M then

		if SYMB_MIRRORED then
			ac_OpeningSide = stOpeningSide[1]
		else
			ac_OpeningSide = stOpeningSide[2]
		endif
	endif
	parameters ac_OpeningSide = ac_OpeningSide

	lock "ac_OpeningSide"
	hideparameter "ac_OpeningSide"
endif

!
!! =============================================================================
!! Door Leaf Widths for Listing
!! =============================================================================
!
!if	((iOpeningMethod = OPENMETHOD_OPEN_SIMP		|\
!	  iOpeningMethod = OPENMETHOD_OPEN_DOUB)	&\
!	 not(bBombShelter)) then
!
!	_formatStr = ""
!	rrr = REQUEST ("Window_door_dimension", "", _formatStr)
!
!	if (iOpeningMethod = OPENMETHOD_OPEN_DOUB)	then
!		if gs_iLeavesConfig = LEAVESCONFIG_UNIFORM then
!			gs_list_doorleafwidths = STR{2}(_formatStr, ac_leaf_width/2)
!			gs_list_doorleafwidths = gs_list_doorleafwidths + " / " + gs_list_doorleafwidths
!		else
!			gs_list_doorleafwidths = STR{2}(_formatStr, gs_SecondLeaf_w) + " / " + STR{2}(_formatStr, (ac_leaf_width - gs_SecondLeaf_w))
!		endif
!	else
!		gs_list_doorleafwidths = STR{2}(_formatStr, ac_leaf_width)
!	endif
!
!	parameters gs_list_doorleafwidths = gs_list_doorleafwidths
!endif
!

! =============================================================================
! IFC Parameters
! =============================================================================

ifc_optype = DOOR_OP_USER_DEFINED

if not(gs_sidelight_left | gs_sidelight_right) then
	if iDoorPanelType = 0 then
		ifc_optype = DOOR_OP_NOT_DEFINED
	else
		if gs_leaf_optype_m = LEAF_1L_SIDE_HUNG then
			ifc_optype = DOOR_OP_SINGLE_DOOR_SINGLE_SWING
		endif

		if gs_leaf_optype_m = LEAF_1L_DOUBLE_ACTING then
			ifc_optype = DOOR_OP_SINGLE_DOOR_DOUBLE_SWING
		endif

		if gs_leaf_optype_m = LEAF_2L_SIDE_HUNG | gs_leaf_optype_m = LEAF_GAR_2L_SIDE_HUNG then
			ifc_optype = DOOR_OP_DOUBLE_DOOR_SINGLE_SWING
		endif

		if gs_leaf_optype_m = LEAF_2L_DOUBLE_ACTING then
			ifc_optype = DOOR_OP_DOUBLE_DOOR_DOUBLE_SWING
		endif

		if gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS then
			ifc_optype = DOOR_OP_DOUBLE_DOOR_SINGLE_SWING_OPP
		endif

		if gs_leaf_optype_m = LEAF_1L_EXTERNAL_SLIDING then
			ifc_optype = DOOR_OP_SINGLE_DOOR_SLIDING
		endif

		if gs_leaf_optype_m = LEAF_2L_EXTERNAL_SLIDING then
			ifc_optype = DOOR_OP_DOUBLE_DOOR_SLIDING
		endif

		if gs_leaf_optype_m = LEAF_1L_MULTIPANEL then
			ifc_optype = DOOR_OP_SINGLE_DOOR_FOLDING
		endif

		if gs_leaf_optype_m = LEAF_2L_MULTIPANEL then
			ifc_optype = DOOR_OP_DOUBLE_DOOR_FOLDING
		endif

		if	gs_leaf_optype_m = LEAF_GAR_1L_UP_AND_OVER |\
			gs_leaf_optype_m = LEAF_GAR_1L_UP_SLIDING |\
			gs_leaf_optype_m = LEAF_GAR_1L_SECTIONAL |\
			gs_leaf_optype_m = LEAF_GAR_1L_ROLLUP then

			ifc_optype = DOOR_OP_ROLLING_UP
		endif
	endif
endif

parameters ifc_optype = ifc_optype

call "IFC_optype_door" parameters ifc_optype = ifc_optype

lock "ifc_optypestr"

bNoFrame =	((gs_leaf_optype_m = LEAF_1L_EXTERNAL_SLIDING	|\
			  gs_leaf_optype_m = LEAF_1L_EXTERNAL_SLIDING_M	|\
			  gs_leaf_optype_m = LEAF_2L_EXTERNAL_SLIDING) 	|\
			((gs_leaf_optype_m = LEAF_1L_POCKET 			|\
			  gs_leaf_optype_m = LEAF_1L_POCKET_M 			|\
			  gs_leaf_optype_m = LEAF_2L_POCKET				&\
			  not(gs_pocket_door_frame))))

if gs_frame_wthk | bNoFrame then
	ifc_LiningDepth = 0
else
	ifc_LiningDepth = WIDO_FRAME_THICKNESS
endif
parameters	ifc_LiningDepth = ifc_LiningDepth

if bNoFrame then
	ifc_LiningThickness	= 0
	ifc_LiningOffset	= 0
else
	ifc_LiningThickness	= gs_frame_width
	ifc_LiningOffset	= WIDO_FRAME_THICKNESS * WIDO_REVEAL_SIDE
endif
parameters	ifc_LiningThickness	= ifc_LiningThickness,
			ifc_LiningOffset	= ifc_LiningOffset

if gs_door_transom then
	ifc_TransomOffset		= ac_unit_height - gs_transom_height
	ifc_TransomThickness	= gs_frame_width_transom
else
	ifc_TransomOffset		= 0
	ifc_TransomThickness 	= 0
endif
parameters	ifc_TransomOffset		= ifc_TransomOffset,
			ifc_TransomThickness	= ifc_TransomThickness

dim ifc_DoorPanel[][4]
	ifc_DoorPanel[1][1] = 0
	ifc_DoorPanel[1][2] = 0
	ifc_DoorPanel[1][3] = 0		! NOTDEFINED
	ifc_DoorPanel[1][4] = 0		! NOTDEFINED

if not(ifc_optype = DOOR_OP_NOT_DEFINED | ifc_optype = DOOR_OP_USER_DEFINED) then
	iDoorPanelOperation = 0		! NOTDEFINED
	if	gs_leaf_optype_m = LEAF_1L_SIDE_HUNG |\
		gs_leaf_optype_m = LEAF_1L_SIDE_HUNG_M |\
		gs_leaf_optype_m = LEAF_2L_SIDE_HUNG |\
		gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS |\
		gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS_M |\
		gs_leaf_optype_m = LEAF_GAR_2L_SIDE_HUNG then

		iDoorPanelOperation = 1		! SWINGING
	endif
	if	gs_leaf_optype_m = LEAF_1L_DOUBLE_ACTING |\
		gs_leaf_optype_m = LEAF_1L_DOUBLE_ACTING_M |\
		gs_leaf_optype_m = LEAF_2L_DOUBLE_ACTING then

		iDoorPanelOperation = 2		! DOUBLE_ACTING
	endif
	if	gs_slidingext |\
		gs_pocket |\
		gs_sliding then

		iDoorPanelOperation = 3		! SLIDING
	endif
	if gs_bifold then
		iDoorPanelOperation = 4		! FOLDING
	endif
	if gs_leaf_optype_m = LEAF_REVOLVING then
		iDoorPanelOperation = 5		! REVOLVING
	endif
	if	gs_leaf_optype_m = LEAF_GAR_1L_UP_AND_OVER |\
		gs_leaf_optype_m = LEAF_GAR_1L_UP_SLIDING |\
		gs_leaf_optype_m = LEAF_GAR_1L_SECTIONAL |\
		gs_leaf_optype_m = LEAF_GAR_1L_ROLLUP then

		iDoorPanelOperation = 6		! ROLLINGUP
	endif
	if	gs_leaf_optype_m = LEAF_1L_PIVOT |\
		gs_leaf_optype_m = LEAF_1L_PIVOT_M |\
		gs_leaf_optype_m = LEAF_GAR_2L_ROLLSIDE then

		iDoorPanelOperation = 7		! USERDEFINED
	endif


	if	gs_leaf_optype_m = LEAF_1L_SIDE_HUNG |\
		gs_leaf_optype_m = LEAF_1L_SIDE_HUNG_M |\
		gs_leaf_optype_m = LEAF_1L_DOUBLE_ACTING |\
		gs_leaf_optype_m = LEAF_1L_DOUBLE_ACTING_M |\
		gs_leaf_optype_m = LEAF_1L_PIVOT |\
		gs_leaf_optype_m = LEAF_1L_PIVOT_M |\
		gs_leaf_optype_m = LEAF_1L_EXTERNAL_SLIDING |\
		gs_leaf_optype_m = LEAF_1L_EXTERNAL_SLIDING_M |\
		gs_leaf_optype_m = LEAF_1L_POCKET |\
		gs_leaf_optype_m = LEAF_1L_POCKET_M |\
		gs_leaf_optype_m = LEAF_GAR_1L_UP_AND_OVER |\
		gs_leaf_optype_m = LEAF_GAR_1L_UP_SLIDING |\
		gs_leaf_optype_m = LEAF_GAR_1L_SECTIONAL |\
		gs_leaf_optype_m = LEAF_GAR_1L_ROLLUP then

		ifc_DoorPanel[1][1] = gs_leaf_thk
		ifc_DoorPanel[1][2] = ac_leaf_width/ac_egress_width
		ifc_DoorPanel[1][3] = iDoorPanelOperation
		ifc_DoorPanel[1][4] = 2		! MIDDLE
	endif

	if	gs_leaf_optype_m = LEAF_2L_SIDE_HUNG |\
		gs_leaf_optype_m = LEAF_2L_DOUBLE_ACTING |\
		gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS |\
		gs_leaf_optype_m = LEAF_2L_DOUBLE_EGRESS_M |\
		gs_leaf_optype_m = LEAF_2L_EXTERNAL_SLIDING |\
		gs_leaf_optype_m = LEAF_2L_POCKET |\
		gs_leaf_optype_m = LEAF_GAR_2L_SIDE_HUNG |\
		gs_leaf_optype_m = LEAF_GAR_2L_ROLLSIDE then

		ifc_DoorPanel[1][1] = gs_leaf_thk
		ifc_DoorPanel[1][2] = lal/ac_egress_width
		ifc_DoorPanel[1][3] = iDoorPanelOperation
		ifc_DoorPanel[1][4] = 1		! LEFT

		ifc_DoorPanel[2][1] = gs_leaf_thk
		ifc_DoorPanel[2][2] = lar/ac_egress_width
		ifc_DoorPanel[2][3] = iDoorPanelOperation
		ifc_DoorPanel[2][4] = 3		! RIGHT
	endif

	if gs_leaf_optype_m = LEAF_REVOLVING then
		ifc_DoorPanel[1][1] = gs_leaf_thk
		ifc_DoorPanel[1][2] = 0
		ifc_DoorPanel[1][3] = iDoorPanelOperation
		ifc_DoorPanel[1][4] = 0		! NOTDEFINED
	endif

	if gs_sliding then
		LeafNum = 2
		SlidingLeafNum = 1
		if	gs_leaf_optype_m = LEAF_2L_2SLIDING |\
			gs_leaf_optype_m = LEAF_2L_2SLIDING_M then

			LeafNum = 2
			SlidingLeafNum = 2
		endif
		if	gs_leaf_optype_m = LEAF_3L_2SLIDING |\
			gs_leaf_optype_m = LEAF_3L_2SLIDING_M then

			LeafNum = 3
			SlidingLeafNum = 2
		endif
		if gs_leaf_optype_m = LEAF_4L_2SLIDING then
			LeafNum = 4
			SlidingLeafNum = 2
		endif
		if	gs_leaf_optype_m = LEAF_4L_3SLIDING |\
			gs_leaf_optype_m = LEAF_4L_3SLIDING_M then

			LeafNum = 4
			SlidingLeafNum = 3
		endif
		if	gs_leaf_optype_m = LEAF_4L_4SLIDING |\
			gs_leaf_optype_m = LEAF_4L_4SLIDING_M then

			LeafNum = 4
			SlidingLeafNum = 4
		endif

		TotalLeafWidth = ac_unit_width - gs_sidelight_width_right * gs_sidelight_right - gs_sidelight_width_left * gs_sidelight_left - \
						gs_frame_width_right * not(gs_sidelight_right) - gs_frame_width_left * not(gs_sidelight_left) + 2 * gs_rebate_width

		panelWidth = TotalLeafWidth/LeafNum

		for i = 1 to SlidingLeafNum
			if SlidingLeafNum = 1 then
				iDoorPanelPosition = 2		! MIDDLE
			else
				if i = 1 then
					iDoorPanelPosition = 1		! LEFT
				else
					if i = SlidingLeafNum then
						iDoorPanelPosition = 3		! RIGHT
					else
						iDoorPanelPosition = 2		! MIDDLE
					endif
				endif
			endif

			ifc_DoorPanel[i][1] = gs_leaf_thk
			ifc_DoorPanel[i][2] = panelWidth/ac_egress_width
			ifc_DoorPanel[i][3] = iDoorPanelOperation
			ifc_DoorPanel[i][4] = iDoorPanelPosition
		next i
	endif

	if gs_bifold then
		TotalLeafWidth = ac_unit_width - gs_sidelight_width_right * gs_sidelight_right - gs_sidelight_width_left * gs_sidelight_left - \
						gs_frame_width_right * not(gs_sidelight_right) - gs_frame_width_left * not(gs_sidelight_left) + 2 * gs_rebate_width

		if gs_leaf_optype_m = LEAF_2L_MULTIPANEL then
			panelWidth = TotalLeafWidth/(gs_leaf_num + gs_leaf_num2 - bMiddleStacking)

			for i = 1 to gs_leaf_num + gs_leaf_num2
				if i < (gs_leaf_num + 1) then
					iDoorPanelPosition = 1		! LEFT
				else
					iDoorPanelPosition = 3		! RIGHT
				endif

				ifc_DoorPanel[i][1] = gs_leaf_thk
				ifc_DoorPanel[i][2] = (panelWidth - (panelWidth/2) * ((i = 1) | (i = (gs_leaf_num + gs_leaf_num2))) * bMiddleStacking)/ac_egress_width
				ifc_DoorPanel[i][3] = iDoorPanelOperation
				ifc_DoorPanel[i][4] = iDoorPanelPosition
			next i
		else
			panelWidth = TotalLeafWidth/(gs_leaf_num - bMiddleStacking)

			if gs_leaf_optype_m = LEAF_1L_MULTIPANEL then
				iDoorPanelPosition = 1		! LEFT
			else
				iDoorPanelPosition = 3		! RIGHT
			endif

			for i = 1 to gs_leaf_num
				ifc_DoorPanel[i][1] = gs_leaf_thk
				ifc_DoorPanel[i][2] = (panelWidth - (panelWidth/2) * ((i = 1) | (i = gs_leaf_num)) * bMiddleStacking)/ac_egress_width
				ifc_DoorPanel[i][3] = iDoorPanelOperation
				ifc_DoorPanel[i][4] = iDoorPanelPosition
			next i
		endif
	endif
endif
parameters ifc_DoorPanel = ifc_DoorPanel


end

"preloadSurfaces":
	parameters	stored_material[1][1]	= gs_frame_mat,
				stored_material[1][2]	= gs_frame_mat2,
				stored_material[1][3]	= gs_leaf_mat,
				stored_material[1][4]	= gs_leaf_matin,
				stored_material[1][5]	= gs_leaf_mat2,
				stored_material[1][6]	= gs_leaf_mat3,
				stored_material[1][7]	= gs_grill_mat,
				stored_material[1][8]	= gs_grill_mat2,
				stored_material[1][9]	= gs_leaf_grill_mat,
				stored_material[1][10]	= gs_leaf_grill_mat2,
				stored_material[1][11]	= gs_panel_mat,
				stored_material[1][12]	= gs_panel_mat2

	sf = _startDim
	if gs_door_transom then
		parameters	stored_material[1][sf]	= gs_transom_mat		: sf = sf + 1
		parameters	stored_material[1][sf]	= gs_transom_matin		: sf = sf + 1
	endif

	if gs_sidelight_right then
		parameters	stored_material[1][sf]	= gs_sidelight1_mat		: sf = sf + 1
		parameters	stored_material[1][sf]	= gs_sidelight1_matin	: sf = sf + 1
	endif

	if gs_sidelight_left then
		parameters	stored_material[1][sf]	= gs_sidelight2_mat		: sf = sf + 1
		parameters	stored_material[1][sf]	= gs_sidelight2_matin	: sf = sf + 1
	endif
return
]]>
</Script_VL>

<Comment SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Comment>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_FWM SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_FWM>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_BWM SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_BWM>

<ParamSection SectVersion="27" SectionFlags="0" SubIdent="0">
	<ParamSectHeader>
		<AutoHotspots>false</AutoHotspots>
		<StatBits>
			<STBit_FixSize/>
			<STBit_UIUseHierarchicalPages/>
		</StatBits>
		<WDLeftFrame>0</WDLeftFrame>
		<WDRightFrame>0</WDRightFrame>
		<WDTopFrame>0</WDTopFrame>
		<WDBotFrame>0</WDBotFrame>
		<LayFlags>65535</LayFlags>
		<WDMirrorThickness>0</WDMirrorThickness>
		<WDWallInset>0</WDWallInset>
	</ParamSectHeader>
	<Parameters>
		<Integer Name="lod2D">
			<Description><![CDATA["2D Detail Level"]]></Description>
			<Value>1</Value>
		</Integer>
		<Integer Name="iLoD2D">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Integer>
		<Integer Name="lod2D_Glazing">
			<Description><![CDATA["Glass 2D Detail Level"]]></Description>
			<Value>0</Value>
		</Integer>
		<Integer Name="gs_detlevel_2D_m">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Integer>
		<Integer Name="lod3D">
			<Description><![CDATA["3D Detail Level"]]></Description>
			<Value>2</Value>
		</Integer>
		<Integer Name="iWindowType">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Integer>
		<Length Name="gs_sliding_fixpanel_width_left">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="gs_sliding_fixpanel_width_right">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<Boolean Name="bShowAddHotspots">
			<Description><![CDATA["Show Additional Hotspots"]]></Description>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="bShowAddHotspotsForIS">
			<Description><![CDATA[""]]></Description>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="bShowUnitHotspots">
			<Description><![CDATA["Show Unit Hotspots"]]></Description>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="bShowEgressHotspots">
			<Description><![CDATA["Show Egress Hotspots"]]></Description>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="bShowLeafHotspots">
			<Description><![CDATA["Show Leaf Hotspots"]]></Description>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="bHide2DDoubAct2ndLeaf">
			<Description><![CDATA["Hide Double Acting 2nd Leaf on 2D"]]></Description>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_frame_ovhg_left_out">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="gs_frame_ovhg_right_out">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="gs_frame_ovhg_top_out">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="gs_frame_ovhg_bottom_out">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="gs_frame_ovhg_left_in">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="gs_frame_ovhg_right_in">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="gs_frame_ovhg_top_in">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="gs_frame_ovhg_bottom_in">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="thresholdModify">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<Integer Name="pwi">
			<Description><![CDATA["Parapet Wall Inset Value"]]></Description>
			<Value>0</Value>
		</Integer>
		<String Name="uiUsedPageNames">
			<Description><![CDATA[""]]></Description>
			<ArrayValues FirstDimension="1" SecondDimension="2">
				<AVal Column="1" Row="1"><![CDATA[""]]></AVal>
				<AVal Column="2" Row="1"><![CDATA[""]]></AVal>
			</ArrayValues>
		</String>
		<Integer Name="uiUsedPageIDs">
			<Description><![CDATA[""]]></Description>
			<ArrayValues FirstDimension="1" SecondDimension="2">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0</AVal>
			</ArrayValues>
		</Integer>
		<String Name="gs_UI_CasementRect">
			<Description><![CDATA[""]]></Description>
			<ArrayValues FirstDimension="62" SecondDimension="0">
				<AVal Row="1"><![CDATA["Одинаковые Створки"]]></AVal>
				<AVal Row="2"><![CDATA["Выбор Створки"]]></AVal>
				<AVal Row="3"><![CDATA["Тип Створки"]]></AVal>
				<AVal Row="4"><![CDATA["Вертикаль"]]></AVal>
				<AVal Row="5"><![CDATA["Горизонталь"]]></AVal>
				<AVal Row="6"><![CDATA["Верт."]]></AVal>
				<AVal Row="7"><![CDATA["Гор."]]></AVal>
				<AVal Row="8"><![CDATA["Верт. Вверху"]]></AVal>
				<AVal Row="9"><![CDATA["Гориз. Вверху"]]></AVal>
				<AVal Row="10"><![CDATA["Верт. Внизу"]]></AVal>
				<AVal Row="11"><![CDATA["Гориз. Внизу"]]></AVal>
				<AVal Row="12"><![CDATA["Раскладка"]]></AVal>
				<AVal Row="13"><![CDATA["Ширина"]]></AVal>
				<AVal Row="14"><![CDATA["Высота"]]></AVal>
				<AVal Row="15"><![CDATA["Толщина"]]></AVal>
				<AVal Row="16"><![CDATA["Расположение"]]></AVal>
				<AVal Row="17"><![CDATA["К-во Стекол"]]></AVal>
				<AVal Row="18"><![CDATA["Имя Полотна Двери"]]></AVal>
				<AVal Row="19"><![CDATA["Переплет Створки"]]></AVal>
				<AVal Row="20"><![CDATA["Для создания специального полотна:"]]></AVal>
				<AVal Row="21"><![CDATA["1. Начертите полотно с помощью конструктивных инструментов (морф, перекрытие...)"]]></AVal>
				<AVal Row="22"><![CDATA["2. Сохраните его при помощи команды Сохранить Выбранное Как... в меню Файл / Библиотеки и Объекты"]]></AVal>
				<AVal Row="23"><![CDATA["3. Выберите полотно в списке Имен Специальных панелей"]]></AVal>
				<AVal Row="24"><![CDATA["Основная Створка"]]></AVal>
				<AVal Row="25"><![CDATA["Основная Средняя"]]></AVal>
				<AVal Row="26"><![CDATA["Основная Средняя 1"]]></AVal>
				<AVal Row="27"><![CDATA["Основная Боковая 2"]]></AVal>
				<AVal Row="28"><![CDATA["Фрамуга"]]></AVal>
				<AVal Row="29"><![CDATA["Фрамуга 1"]]></AVal>
				<AVal Row="30"><![CDATA["Фрамуга 2"]]></AVal>
				<AVal Row="31"><![CDATA["Средняя Фрамуга"]]></AVal>
				<AVal Row="32"><![CDATA["Боковая Фрамуга 1"]]></AVal>
				<AVal Row="33"><![CDATA["Боковая Фрамуга 2"]]></AVal>
				<AVal Row="34"><![CDATA["Нижняя Створка"]]></AVal>
				<AVal Row="35"><![CDATA["Нижняя Створка 1"]]></AVal>
				<AVal Row="36"><![CDATA["Нижняя Створка 2"]]></AVal>
				<AVal Row="37"><![CDATA["Нижняя Средняя"]]></AVal>
				<AVal Row="38"><![CDATA["Нижняя Боковая 1"]]></AVal>
				<AVal Row="39"><![CDATA["Нижняя Боковая 2"]]></AVal>
				<AVal Row="40"><![CDATA["Боковая Панель"]]></AVal>
				<AVal Row="41"><![CDATA["Боковые Створки"]]></AVal>
				<AVal Row="42"><![CDATA["Боковая Створка 1"]]></AVal>
				<AVal Row="43"><![CDATA["Боковая Створка 2"]]></AVal>
				<AVal Row="44"><![CDATA["Фрамуга"]]></AVal>
				<AVal Row="45"><![CDATA["Основная Створка 1"]]></AVal>
				<AVal Row="46"><![CDATA["Основная Створка 2"]]></AVal>
				<AVal Row="47"><![CDATA["Тип и Угол/Ширина Открывания в 3D"]]></AVal>
				<AVal Row="48"><![CDATA["Угол Открывания в 2D"]]></AVal>
				<AVal Row="49"><![CDATA["Редактирование Створки"]]></AVal>
				<AVal Row="50"><![CDATA["Стекло"]]></AVal>
				<AVal Row="51"><![CDATA["Покрытие"]]></AVal>
				<AVal Row="52"><![CDATA["Перо 3D"]]></AVal>
				<AVal Row="53"><![CDATA["Снаружи"]]></AVal>
				<AVal Row="54"><![CDATA["Внутри"]]></AVal>
				<AVal Row="55"><![CDATA["Разделенная Створка возможна только при деактивации Одинаковых Створок."]]></AVal>
				<AVal Row="56"><![CDATA["Основные Створки"]]></AVal>
				<AVal Row="57"><![CDATA["Створки Фрамуги"]]></AVal>
				<AVal Row="58"><![CDATA["Верхняя Створка"]]></AVal>
				<AVal Row="59"><![CDATA["Фиксированная Створка"]]></AVal>
				<AVal Row="60"><![CDATA["Раздвижная Створка"]]></AVal>
				<AVal Row="61"><![CDATA["Сторона 1"]]></AVal>
				<AVal Row="62"><![CDATA["Сторона 2"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stDoorGeneralOpeningUI">
			<Description><![CDATA[""]]></Description>
			<ArrayValues FirstDimension="7" SecondDimension="0">
				<AVal Row="1"><![CDATA["Дверь"]]></AVal>
				<AVal Row="2"><![CDATA["Тип Открывания"]]></AVal>
				<AVal Row="3"><![CDATA["Угол Открывания в 2D"]]></AVal>
				<AVal Row="4"><![CDATA["Угол Открывания в 3D"]]></AVal>
				<AVal Row="5"><![CDATA["Ширина Открывания в 2D"]]></AVal>
				<AVal Row="6"><![CDATA["Ширина Открывания в 3D"]]></AVal>
				<AVal Row="7"><![CDATA["Стиль Коробки был изменен на Гладкую."]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stSashType">
			<Description><![CDATA[""]]></Description>
			<ArrayValues FirstDimension="16" SecondDimension="0">
				<AVal Row="1"><![CDATA["Без Раскладки"]]></AVal>
				<AVal Row="2"><![CDATA["Г/В-Раскладка"]]></AVal>
				<AVal Row="3"><![CDATA["Редактируемая Раскладка"]]></AVal>
				<AVal Row="4"><![CDATA["Специальная Панель"]]></AVal>
				<AVal Row="5"><![CDATA["Стиль Прерия"]]></AVal>
				<AVal Row="6"><![CDATA["Разделенный"]]></AVal>
				<AVal Row="7"><![CDATA["Солнечные Лучи 1"]]></AVal>
				<AVal Row="8"><![CDATA["Солнечные Лучи 2"]]></AVal>
				<AVal Row="9"><![CDATA["Солнечные Лучи 3"]]></AVal>
				<AVal Row="10"><![CDATA["Солнечные Лучи 4"]]></AVal>
				<AVal Row="11"><![CDATA["Солнечные Лучи 5"]]></AVal>
				<AVal Row="12"><![CDATA["Солнечные Лучи 6"]]></AVal>
				<AVal Row="13"><![CDATA["Сплошное Остекление"]]></AVal>
				<AVal Row="14"><![CDATA["Разделенная Рама"]]></AVal>
				<AVal Row="15"><![CDATA["Сплошная Панель"]]></AVal>
				<AVal Row="16"><![CDATA["Вентиляционная Створка"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stMullionPosition">
			<Description><![CDATA[""]]></Description>
			<ArrayValues FirstDimension="3" SecondDimension="0">
				<AVal Row="1"><![CDATA["Снаружи"]]></AVal>
				<AVal Row="2"><![CDATA["Внутри"]]></AVal>
				<AVal Row="3"><![CDATA["Посередине"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stOpeningType">
			<Description><![CDATA[""]]></Description>
			<ArrayValues FirstDimension="26" SecondDimension="0">
				<AVal Row="1"><![CDATA["Фиксированный"]]></AVal>
				<AVal Row="2"><![CDATA[""]]></AVal>
				<AVal Row="3"><![CDATA["Распашная"]]></AVal>
				<AVal Row="4"><![CDATA["Распашная Зеркальная"]]></AVal>
				<AVal Row="5"><![CDATA["Наклонно-Поворотная "]]></AVal>
				<AVal Row="6"><![CDATA["Наклонно-Поворотная Зеркальная"]]></AVal>
				<AVal Row="7"><![CDATA["Нижнеподвесная"]]></AVal>
				<AVal Row="8"><![CDATA["Верхнеподвесная"]]></AVal>
				<AVal Row="9"><![CDATA[""]]></AVal>
				<AVal Row="10"><![CDATA["Среднеповоротная Вертикальная"]]></AVal>
				<AVal Row="11"><![CDATA[""]]></AVal>
				<AVal Row="12"><![CDATA[""]]></AVal>
				<AVal Row="13"><![CDATA[""]]></AVal>
				<AVal Row="14"><![CDATA[""]]></AVal>
				<AVal Row="15"><![CDATA[""]]></AVal>
				<AVal Row="16"><![CDATA["Среднеповоротная Вертикальная Зеркальная"]]></AVal>
				<AVal Row="17"><![CDATA[""]]></AVal>
				<AVal Row="18"><![CDATA["Двойная Створка"]]></AVal>
				<AVal Row="19"><![CDATA["Двойная Наклонно-Поворотная"]]></AVal>
				<AVal Row="20"><![CDATA["Двойная Наклонно-Поворотная Зеркальная"]]></AVal>
				<AVal Row="21"><![CDATA["Раздвижная"]]></AVal>
				<AVal Row="22"><![CDATA["Раздвижная Зеркальная"]]></AVal>
				<AVal Row="23"><![CDATA["Двойная Раздвижная"]]></AVal>
				<AVal Row="24"><![CDATA["Двойная Раздвижная Зеркальная"]]></AVal>
				<AVal Row="25"><![CDATA["Подъемная"]]></AVal>
				<AVal Row="26"><![CDATA["Подъемно-Опускная"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stOpenLeaf">
			<Description><![CDATA[""]]></Description>
			<ArrayValues FirstDimension="6" SecondDimension="0">
				<AVal Row="1"><![CDATA[""]]></AVal>
				<AVal Row="2"><![CDATA[""]]></AVal>
				<AVal Row="3"><![CDATA[""]]></AVal>
				<AVal Row="4"><![CDATA[""]]></AVal>
				<AVal Row="5"><![CDATA[""]]></AVal>
				<AVal Row="6"><![CDATA[""]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stLouversinFrame">
			<Description><![CDATA[""]]></Description>
			<Value><![CDATA["Жалюзи в Раме"]]></Value>
		</String>
		<String Name="stSidelightTransomRelation">
			<Description><![CDATA[""]]></Description>
			<ArrayValues FirstDimension="3" SecondDimension="0">
				<AVal Row="1"><![CDATA["Под Фрамугой"]]></AVal>
				<AVal Row="2"><![CDATA["Над Фрамугой"]]></AVal>
				<AVal Row="3"><![CDATA["Пересекает Фрамугу"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stLeavesConfiguration">
			<Description><![CDATA[""]]></Description>
			<ArrayValues FirstDimension="2" SecondDimension="0">
				<AVal Row="1"><![CDATA["Одинаковые Полотна"]]></AVal>
				<AVal Row="2"><![CDATA["Асимметрично"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stOpeningDir">
			<Description><![CDATA[""]]></Description>
			<ArrayValues FirstDimension="2" SecondDimension="0">
				<AVal Row="1"><![CDATA[""]]></AVal>
				<AVal Row="2"><![CDATA[""]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stFrameElemJoin">
			<Description><![CDATA[""]]></Description>
			<ArrayValues FirstDimension="2" SecondDimension="0">
				<AVal Row="1"><![CDATA["Угловое Соединение"]]></AVal>
				<AVal Row="2"><![CDATA["Соединение Встык"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stGrillPos">
			<Description><![CDATA[""]]></Description>
			<ArrayValues FirstDimension="3" SecondDimension="0">
				<AVal Row="1"><![CDATA["Снаружи"]]></AVal>
				<AVal Row="2"><![CDATA["Внутри"]]></AVal>
				<AVal Row="3"><![CDATA["Посередине"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="gs_stDoorFrame">
			<Description><![CDATA[""]]></Description>
			<ArrayValues FirstDimension="7" SecondDimension="0">
				<AVal Row="1"><![CDATA["Блок"]]></AVal>
				<AVal Row="2"><![CDATA["Двойной Уступ"]]></AVal>
				<AVal Row="3"><![CDATA["Простой Уступ"]]></AVal>
				<AVal Row="4"><![CDATA[""]]></AVal>
				<AVal Row="5"><![CDATA[""]]></AVal>
				<AVal Row="6"><![CDATA["Выступ"]]></AVal>
				<AVal Row="7"><![CDATA["Завернутый Уступ"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stLeafOpeningType">
			<Description><![CDATA[""]]></Description>
			<ArrayValues FirstDimension="30" SecondDimension="0">
				<AVal Row="1"><![CDATA["Распашная"]]></AVal>
				<AVal Row="2"><![CDATA["Распашная Зеркальная"]]></AVal>
				<AVal Row="3"><![CDATA["Открывающаяся в Обе Стороны"]]></AVal>
				<AVal Row="4"><![CDATA["Открывающаяся в Обе Стороны, Зеркально"]]></AVal>
				<AVal Row="5"><![CDATA["Распашная"]]></AVal>
				<AVal Row="6"><![CDATA["Открывающаяся в Обе Стороны"]]></AVal>
				<AVal Row="7"><![CDATA["На Два Выхода"]]></AVal>
				<AVal Row="8"><![CDATA["На Два Выхода Зеркально"]]></AVal>
				<AVal Row="9"><![CDATA["Поворотная"]]></AVal>
				<AVal Row="10"><![CDATA["Поворотная Зеркальная"]]></AVal>
				<AVal Row="11"><![CDATA["2 Полотна 1 Раздвижное"]]></AVal>
				<AVal Row="12"><![CDATA["2 Полотна 1 Раздвижное, Зеркально"]]></AVal>
				<AVal Row="13"><![CDATA["2 Раздвижных Полотна"]]></AVal>
				<AVal Row="14"><![CDATA["2 Раздвижных Полотна, Зеркально"]]></AVal>
				<AVal Row="15"><![CDATA["3 Полотна 2 Раздвижных"]]></AVal>
				<AVal Row="16"><![CDATA["3 Полотна 2 Раздвижных, Зеркально"]]></AVal>
				<AVal Row="17"><![CDATA["4 Полотна 2 Раздвижных"]]></AVal>
				<AVal Row="18"><![CDATA["4 Полотна 3 Раздвижных"]]></AVal>
				<AVal Row="19"><![CDATA["4 Полотна 3 Раздвижных, Зеркально"]]></AVal>
				<AVal Row="20"><![CDATA["4 Раздвижных Полотна"]]></AVal>
				<AVal Row="21"><![CDATA["4 Раздвижных Полотна, Зеркально"]]></AVal>
				<AVal Row="22"><![CDATA["Наружная Раздвигающаяся"]]></AVal>
				<AVal Row="23"><![CDATA["Наружная Раздвигающаяся Зеркально"]]></AVal>
				<AVal Row="24"><![CDATA["Наружная 2 Раздвигающаяся"]]></AVal>
				<AVal Row="25"><![CDATA["Карман"]]></AVal>
				<AVal Row="26"><![CDATA["Карман Зеркально"]]></AVal>
				<AVal Row="27"><![CDATA["Двойная с Карманом"]]></AVal>
				<AVal Row="28"><![CDATA["Раздвижная Складывающаяся Многопанельная"]]></AVal>
				<AVal Row="29"><![CDATA["Раздвижная Складывающаяся Многопанельная, Зеркальная"]]></AVal>
				<AVal Row="30"><![CDATA["Двойная Раздвижная Складывающаяся Многопанельная"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stDoorTypes">
			<Description><![CDATA[""]]></Description>
			<ArrayValues FirstDimension="75" SecondDimension="0">
				<AVal Row="1"><![CDATA["Стиль 1"]]></AVal>
				<AVal Row="2"><![CDATA["Стиль 2"]]></AVal>
				<AVal Row="3"><![CDATA["Стиль 3"]]></AVal>
				<AVal Row="4"><![CDATA["Стиль 4"]]></AVal>
				<AVal Row="5"><![CDATA["Стиль 5"]]></AVal>
				<AVal Row="6"><![CDATA["Стиль 6"]]></AVal>
				<AVal Row="7"><![CDATA["Стиль 7"]]></AVal>
				<AVal Row="8"><![CDATA["Стиль 8"]]></AVal>
				<AVal Row="9"><![CDATA["Стиль 9"]]></AVal>
				<AVal Row="10"><![CDATA["Стиль 10"]]></AVal>
				<AVal Row="11"><![CDATA["Стиль 11"]]></AVal>
				<AVal Row="12"><![CDATA["Стиль 12"]]></AVal>
				<AVal Row="13"><![CDATA["Стиль 13"]]></AVal>
				<AVal Row="14"><![CDATA["Стиль 14"]]></AVal>
				<AVal Row="15"><![CDATA["Стиль 15"]]></AVal>
				<AVal Row="16"><![CDATA["Стиль 16"]]></AVal>
				<AVal Row="17"><![CDATA["Стиль 17"]]></AVal>
				<AVal Row="18"><![CDATA["Стиль 18"]]></AVal>
				<AVal Row="19"><![CDATA["Стиль 19"]]></AVal>
				<AVal Row="20"><![CDATA["Стиль 20"]]></AVal>
				<AVal Row="21"><![CDATA["Стиль 21"]]></AVal>
				<AVal Row="22"><![CDATA["Стиль 22"]]></AVal>
				<AVal Row="23"><![CDATA["Стиль 23"]]></AVal>
				<AVal Row="24"><![CDATA["Стиль 24"]]></AVal>
				<AVal Row="25"><![CDATA["Стиль 25"]]></AVal>
				<AVal Row="26"><![CDATA["Стиль 26"]]></AVal>
				<AVal Row="27"><![CDATA["Стиль 27"]]></AVal>
				<AVal Row="28"><![CDATA["Стиль 28"]]></AVal>
				<AVal Row="29"><![CDATA["Стиль 29"]]></AVal>
				<AVal Row="30"><![CDATA["Стиль 30"]]></AVal>
				<AVal Row="31"><![CDATA["Стиль 31"]]></AVal>
				<AVal Row="32"><![CDATA["Стиль 32"]]></AVal>
				<AVal Row="33"><![CDATA["Стиль 33"]]></AVal>
				<AVal Row="34"><![CDATA["Стиль 34"]]></AVal>
				<AVal Row="35"><![CDATA["Стиль 35"]]></AVal>
				<AVal Row="36"><![CDATA["Стиль 36"]]></AVal>
				<AVal Row="37"><![CDATA["Стиль 37"]]></AVal>
				<AVal Row="38"><![CDATA["Стиль 38"]]></AVal>
				<AVal Row="39"><![CDATA["Стиль 39"]]></AVal>
				<AVal Row="40"><![CDATA["Стиль 40"]]></AVal>
				<AVal Row="41"><![CDATA["Стиль 41"]]></AVal>
				<AVal Row="42"><![CDATA["Стиль 42"]]></AVal>
				<AVal Row="43"><![CDATA["Стиль 43"]]></AVal>
				<AVal Row="44"><![CDATA["Стиль 44"]]></AVal>
				<AVal Row="45"><![CDATA["Французская Панель"]]></AVal>
				<AVal Row="46"><![CDATA["Без Раскладки"]]></AVal>
				<AVal Row="47"><![CDATA["Г/В-Раскладка"]]></AVal>
				<AVal Row="48"><![CDATA["Стиль Прерия"]]></AVal>
				<AVal Row="49"><![CDATA["Специальная Панель"]]></AVal>
				<AVal Row="50"><![CDATA["Пусто"]]></AVal>
				<AVal Row="51"><![CDATA[""]]></AVal>
				<AVal Row="52"><![CDATA[""]]></AVal>
				<AVal Row="53"><![CDATA[""]]></AVal>
				<AVal Row="54"><![CDATA[""]]></AVal>
				<AVal Row="55"><![CDATA[""]]></AVal>
				<AVal Row="56"><![CDATA[""]]></AVal>
				<AVal Row="57"><![CDATA[""]]></AVal>
				<AVal Row="58"><![CDATA[""]]></AVal>
				<AVal Row="59"><![CDATA[""]]></AVal>
				<AVal Row="60"><![CDATA[""]]></AVal>
				<AVal Row="61"><![CDATA[""]]></AVal>
				<AVal Row="62"><![CDATA[""]]></AVal>
				<AVal Row="63"><![CDATA[""]]></AVal>
				<AVal Row="64"><![CDATA[""]]></AVal>
				<AVal Row="65"><![CDATA[""]]></AVal>
				<AVal Row="66"><![CDATA[""]]></AVal>
				<AVal Row="67"><![CDATA[""]]></AVal>
				<AVal Row="68"><![CDATA[""]]></AVal>
				<AVal Row="69"><![CDATA[""]]></AVal>
				<AVal Row="70"><![CDATA[""]]></AVal>
				<AVal Row="71"><![CDATA[""]]></AVal>
				<AVal Row="72"><![CDATA[""]]></AVal>
				<AVal Row="73"><![CDATA[""]]></AVal>
				<AVal Row="74"><![CDATA[""]]></AVal>
				<AVal Row="75"><![CDATA[""]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stRailTypes">
			<Description><![CDATA[""]]></Description>
			<ArrayValues FirstDimension="4" SecondDimension="0">
				<AVal Row="1"><![CDATA["Откл."]]></AVal>
				<AVal Row="2"><![CDATA["Направляющая Внизу"]]></AVal>
				<AVal Row="3"><![CDATA["Направляющая Вверху"]]></AVal>
				<AVal Row="4"><![CDATA["Направляющая Вверху и Внизу"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stSillTypes">
			<Description><![CDATA[""]]></Description>
			<ArrayValues FirstDimension="17" SecondDimension="0">
				<AVal Row="1"><![CDATA["Деревянный Отлив"]]></AVal>
				<AVal Row="2"><![CDATA["Кирпичный Отлив"]]></AVal>
				<AVal Row="3"><![CDATA["Каменный Отлив"]]></AVal>
				<AVal Row="4"><![CDATA["Керамический Отлив"]]></AVal>
				<AVal Row="5"><![CDATA["Этернитовый Отлив"]]></AVal>
				<AVal Row="6"><![CDATA["Бетонный Отлив"]]></AVal>
				<AVal Row="7"><![CDATA["Алюминиевый Отлив"]]></AVal>
				<AVal Row="8"><![CDATA["Монолитный Отлив 1.1"]]></AVal>
				<AVal Row="9"><![CDATA["Монолитный Отлив 1.2"]]></AVal>
				<AVal Row="10"><![CDATA["Монолитный Отлив"]]></AVal>
				<AVal Row="11"><![CDATA["Металлический Лист"]]></AVal>
				<AVal Row="12"><![CDATA["Сплошной Параллельный"]]></AVal>
				<AVal Row="13"><![CDATA["Металлический Лист 2"]]></AVal>
				<AVal Row="14"><![CDATA["Сплошной Параллельный 2"]]></AVal>
				<AVal Row="15"><![CDATA["Простой Блок"]]></AVal>
				<AVal Row="16"><![CDATA["Блок Отлив"]]></AVal>
				<AVal Row="17"><![CDATA["Голландский Профилированный Отлив"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stThresholdTypes">
			<Description><![CDATA[""]]></Description>
			<ArrayValues FirstDimension="19" SecondDimension="0">
				<AVal Row="1"><![CDATA["Откл."]]></AVal>
				<AVal Row="2"><![CDATA["Обычный"]]></AVal>
				<AVal Row="3"><![CDATA["Выступающий"]]></AVal>
				<AVal Row="4"><![CDATA["Выступает в Обе Стороны"]]></AVal>
				<AVal Row="5"><![CDATA["Под Панелью"]]></AVal>
				<AVal Row="6"><![CDATA["Профильный"]]></AVal>
				<AVal Row="7"><![CDATA["Стиль 1"]]></AVal>
				<AVal Row="8"><![CDATA[""]]></AVal>
				<AVal Row="9"><![CDATA["Стиль 2"]]></AVal>
				<AVal Row="10"><![CDATA[""]]></AVal>
				<AVal Row="11"><![CDATA[""]]></AVal>
				<AVal Row="12"><![CDATA["Стиль 3"]]></AVal>
				<AVal Row="13"><![CDATA[""]]></AVal>
				<AVal Row="14"><![CDATA[""]]></AVal>
				<AVal Row="15"><![CDATA["Простой"]]></AVal>
				<AVal Row="16"><![CDATA["Продленный Наклон"]]></AVal>
				<AVal Row="17"><![CDATA["Металл"]]></AVal>
				<AVal Row="18"><![CDATA[""]]></AVal>
				<AVal Row="19"><![CDATA[""]]></AVal>
			</ArrayValues>
		</String>
		<String Name="st_uiDoorSettModAttr">
			<Description><![CDATA[""]]></Description>
			<ArrayValues FirstDimension="6" SecondDimension="0">
				<AVal Row="1"><![CDATA["Покрытия Коробки и Полотна"]]></AVal>
				<AVal Row="2"><![CDATA["Покрытия Ручки"]]></AVal>
				<AVal Row="3"><![CDATA["Покрытие Защитной Пластины"]]></AVal>
				<AVal Row="4"><![CDATA["Дополнительные Покрытия Боковой Панели и Фрамуги"]]></AVal>
				<AVal Row="5"><![CDATA["Перья Коробки и Полотна в 3D"]]></AVal>
				<AVal Row="6"><![CDATA["Приточный Клапан"]]></AVal>
			</ArrayValues>
		</String>
		<Length Name="A">
			<Description><![CDATA["Width"]]></Description>
			<Fix/>
			<Value>1</Value>
		</Length>
		<Length Name="B">
			<Description><![CDATA["Height"]]></Description>
			<Fix/>
			<Value>2.1</Value>
		</Length>
		<Boolean Name="bArchedTop">
			<Description><![CDATA["Arched Top"]]></Description>
			<Value>0</Value>
		</Boolean>
		<Integer Name="iOpeningMethod">
			<Description><![CDATA["Opening Method"]]></Description>
			<Value>1</Value>
		</Integer>
		<Boolean Name="bAsymmetricLeafs">
			<Description><![CDATA["Asymmetric Leaves"]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bMetalDoor">
			<Description><![CDATA["Metal Door"]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bStorefrontDoor">
			<Description><![CDATA["Storefront Door"]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bFoldingDoor">
			<Description><![CDATA["Sliding Folding Multi-panel Door"]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bBombShelter">
			<Description><![CDATA["Bomb Shelter Door"]]></Description>
			<Value>0</Value>
		</Boolean>
		<Length Name="ZZYZX">
			<Description><![CDATA["Z Dimension"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Integer Name="AC_WallContours">
			<Description><![CDATA["Wall Contours (0-None,1-Full,2-Side,3-Length)"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="AC_Hole_Hotspot_Control">
			<Description><![CDATA["Hotspots 0-None,1-2D,2-3D,3-All"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>3</Value>
		</Integer>
		<Boolean Name="AC_show2DHotspotsIn3D">
			<Description><![CDATA["Show 2D Hotspots in 3D"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="ac_bottomlevel">
			<Description><![CDATA["Bottom Level"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="ac_toplevel">
			<Description><![CDATA["Top Level"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Boolean Name="AC_HoleSideMaterial">
			<Description><![CDATA["Hole has Wall's Side Surface"]]></Description>
			<Fix/>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="AC_HoleMaterialCurved">
			<Description><![CDATA["Hole Surface's Split is Curved in Curved Walls"]]></Description>
			<Fix/>
			<Value>0</Value>
		</Boolean>

		<!-- iTypeDemolitionFill: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Integer Name="iTypeDemolitionFill">
			<Description><![CDATA["Demolition / New construction"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<FillPattern Name="gs_new_symb_fill">
			<Description><![CDATA["New Wall Fill Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>4</Value>
		</FillPattern>
		<PenColor Name="gs_new_symb_pen_Fg">
			<Description><![CDATA["New Wall Fill Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</PenColor>
		<PenColor Name="gs_new_symb_pen_bg">
			<Description><![CDATA["New Wall Fill Background Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<Length Name="gs_new_symb_width_r">
			<Description><![CDATA["New Wall Fill Width Right"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.15</Value>
		</Length>
		<Length Name="gs_new_symb_width_l">
			<Description><![CDATA["New Wall Fill Width Left"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.15</Value>
		</Length>
		<Boolean Name="gs_bShowNewOnCC">
			<Description><![CDATA["Show new construction on Wall"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<LineType Name="gs_Demolition_linetype">
			<Description><![CDATA["Demolition line type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</LineType>
		<Boolean Name="gs_bShowDemolitionPar">
			<Description><![CDATA["Show Demolition/New parameter"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_transom_display">
			<Description><![CDATA["Display as Transom"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- gs_shape_geometry: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_shape_geometry">
			<Description><![CDATA["Shape Geometry"]]></Description>
		</Title>
		<Boolean Name="gs_door_transom">
			<Description><![CDATA["Transom"]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_sidelight_right">
			<Description><![CDATA["Sidelight 1"]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_sidelight_left">
			<Description><![CDATA["Sidelight 2"]]></Description>
			<Value>1</Value>
		</Boolean>
		<Length Name="gs_shoulder_h">
			<Description><![CDATA["Shoulder Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2.1</Value>
		</Length>
		<Boolean Name="bSlidingUIalternative">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Boolean>
		<String Name="gs_SidelightTransomRelation">
			<Description><![CDATA["Sidelight"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Под Фрамугой"]]></Value>
		</String>
		<Integer Name="gs_SidelightTransomRelation_m">
			<Description><![CDATA["Sidelight"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="gs_sidelight_width_right">
			<Description><![CDATA["Sidelight 1 Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.3</Value>
		</Length>
		<Length Name="gs_sidelight_width_right_half">
			<Description><![CDATA["Sidelight 1 Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.15</Value>
		</Length>
		<Length Name="gs_sidelight_width_right_orig">
			<Description><![CDATA["Sidelight 1 Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.3</Value>
		</Length>
		<Length Name="gs_sidelight_parapet_hgt_right">
			<Description><![CDATA["Sidelight 1 Sill Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.9</Value>
		</Length>
		<Length Name="gs_sidelight_width_left">
			<Description><![CDATA["Sidelight 2 Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.4</Value>
		</Length>
		<Length Name="gs_sidelight_width_left_half">
			<Description><![CDATA["Sidelight 2 Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.2</Value>
		</Length>
		<Length Name="gs_sidelight_width_left_orig">
			<Description><![CDATA["Sidelight 2 Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.4</Value>
		</Length>
		<Length Name="gs_sidelight_parapet_hgt_left">
			<Description><![CDATA["Sidelight 2 Sill Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.5</Value>
		</Length>
		<Boolean Name="gs_bSidelight_fr_hdiv_left">
			<Description><![CDATA["Sidelight 2 Horizontal Division"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_sidelight_fr_hdiv_hgt_left">
			<Description><![CDATA["Sidelight 2 Division Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.6</Value>
		</Length>
		<Length Name="gs_sidelight_fr_hdiv_wdt_left">
			<Description><![CDATA["Sidelight 2 Division Frame Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.04</Value>
		</Length>
		<Boolean Name="gs_bSidelight_fr_hdiv_right">
			<Description><![CDATA["Sidelight 1 Horizontal Division"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_sidelight_fr_hdiv_hgt_right">
			<Description><![CDATA["Sidelight 1 Division Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.6</Value>
		</Length>
		<Length Name="gs_sidelight_fr_hdiv_wdt_right">
			<Description><![CDATA["Sidelight 1 Division Frame Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.04</Value>
		</Length>

		<!-- gs_door_sizes: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_door_sizes">
			<Description><![CDATA["Door Sizes"]]></Description>
		</Title>
		<Length Name="gs_pivotOffset">
			<Description><![CDATA["Pivot Axis Offset"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.287</Value>
		</Length>
		<Boolean Name="gs_tolerance_uniform">
			<Description><![CDATA["Uniform Tolerances"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_tolerance_left">
			<Description><![CDATA["Tolerance Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_tolerance_left_2">
			<Description><![CDATA["Tolerance Side 2 Lower"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_tolerance_low_left_sl">
			<Description><![CDATA["Tolerance Sidelight 2 Bottom"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_tolerance_right">
			<Description><![CDATA["Tolerance Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_tolerance_right_2">
			<Description><![CDATA["Tolerance Side 1 Lower"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_tolerance_low_right_sl">
			<Description><![CDATA["Tolerance Sidelight 1 Bottom"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_tolerance_upper">
			<Description><![CDATA["Tolerance Upper"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_tolerance_lower">
			<Description><![CDATA["Tolerance Lower"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ac_wallhole_width">
			<Description><![CDATA["Wallhole Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="ac_wallhole_height">
			<Description><![CDATA["Wallhole Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2.1</Value>
		</Length>
		<Length Name="ac_reveal_width">
			<Description><![CDATA["Reveal Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="ac_reveal_height">
			<Description><![CDATA["Reveal Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2.1</Value>
		</Length>
		<Length Name="ac_unit_width">
			<Description><![CDATA["Unit Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="ac_unit_height">
			<Description><![CDATA["Unit Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2.1</Value>
		</Length>
		<Length Name="ac_egress_width">
			<Description><![CDATA["Egress Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.55</Value>
		</Length>
		<Length Name="ac_egress_height">
			<Description><![CDATA["Egress Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2.05</Value>
		</Length>
		<Length Name="ac_leaf_width">
			<Description><![CDATA["Leaf Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.574</Value>
		</Length>
		<Length Name="ac_leaf_height">
			<Description><![CDATA["Leaf Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2.062</Value>
		</Length>
		<Boolean Name="gs_unit_nominal">
			<Description><![CDATA["Set Unit Size as Nominal Size"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_leaf_overlap">
			<Description><![CDATA["Leaf Overlap"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_leaf_gap">
			<Description><![CDATA["Gap between Door Leaves"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>

		<!-- gs_options: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_options">
			<Description><![CDATA["Options"]]></Description>
		</Title>
		<Boolean Name="gs_full_edit">
			<Description><![CDATA["Show Editable Hotspots"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Integer Name="iRevealOnSymbol">
			<Description><![CDATA["Show Reveal on Symbol"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="gs_detlevel_3D">
			<Description><![CDATA["3D Detail Level"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Детальный"]]></Value>
		</String>
		<Integer Name="gs_3DDetEnable">
			<Description><![CDATA["3D Detail Level Enable"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>14</Value>
		</Integer>
		<String Name="gs_opening_dir_sl">
			<Description><![CDATA["Opening Direction Sidelight"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="gs_opening_dir_sl_m">
			<Description><![CDATA["Opening Direction Sidelight"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Boolean Name="bMiddleStacking">
			<Description><![CDATA["Middle Stacking"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- gs_door_frame: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_door_frame">
			<Description><![CDATA["Door Frame"]]></Description>
		</Title>
		<Boolean Name="gs_pocket_door_frame">
			<Description><![CDATA["Door Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<String Name="gs_frame_style">
			<Description><![CDATA["Frame Style"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Блок"]]></Value>
		</String>
		<Integer Name="gs_frame_style_m">
			<Description><![CDATA["Frame Style"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="gs_frame_wthk">
			<Description><![CDATA["Frame Thickness=Wall Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_sframe">
			<Description><![CDATA["Uniform Frame Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="gs_frame_thk">
			<Description><![CDATA["Frame Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Length Name="gs_frame_thkin">
			<Description><![CDATA["Frame Thickness Inside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.075</Value>
		</Length>
		<Boolean Name="gs_leaf_center">
			<Description><![CDATA["Centered Leaf"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="gs_leaf_offset">
			<Description><![CDATA["Leaf Offset"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="widthWallCut">
			<Description><![CDATA["Wall Cut Width for Pocket"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="posLeafy">
			<Description><![CDATA["Beginning Position of Pocket Hole"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="posHole">
			<Description><![CDATA["Gap between Pocket Hole and Wall"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.005</Value>
		</Length>
		<Boolean Name="gs_uniform_framewidth">
			<Description><![CDATA["Uniform Frame Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="gs_frame_width">
			<Description><![CDATA["Frame Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_frame_oversize">
			<Description><![CDATA["Frame Oversize"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.01</Value>
		</Length>
		<Length Name="gs_frame_oversize_thk">
			<Description><![CDATA["Frame Outer Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.01</Value>
		</Length>
		<Length Name="gs_frame_width_right">
			<Description><![CDATA["Frame Width Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_frame_width_right_2">
			<Description><![CDATA["Middle Frame Width Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_frame_width_low_right_sl">
			<Description><![CDATA["Bottom Frame Width Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_frame_width_left">
			<Description><![CDATA["Frame Width Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_frame_width_left_2">
			<Description><![CDATA["Middle Frame Width Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_frame_width_low_left_sl">
			<Description><![CDATA["Bottom Frame Width Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_frame_width_transom">
			<Description><![CDATA["Transom Frame Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_frame_width_upper">
			<Description><![CDATA["Upper Frame Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_ds_thk">
			<Description><![CDATA["Door Stop Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.032</Value>
		</Length>
		<Length Name="gs_ds_w">
			<Description><![CDATA["Door Stop Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.016</Value>
		</Length>
		<Length Name="gs_rebate_width">
			<Description><![CDATA["Rebate Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.012</Value>
		</Length>
		<Length Name="gs_rebate_depth_3D">
			<Description><![CDATA["Leaf Rebate Depth in 3D"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_sidelight_rebate_width">
			<Description><![CDATA["Sidelight and Transom Rebate Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.023</Value>
		</Length>
		<Length Name="gs_sidelight_rebate_depth">
			<Description><![CDATA["Sidelight and Transom Rebate Depth"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.018</Value>
		</Length>
		<Boolean Name="gs_frame_auto_changed">
			<Description><![CDATA["Frame Style Changed Automatically"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_door_rail">
			<Description><![CDATA["Rail under Leaves"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- gs_door_rail_ext: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<String Name="gs_door_rail_ext">
			<Description><![CDATA["Rail"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA["Откл."]]></Value>
		</String>
		<Integer Name="gs_door_rail_ext_m">
			<Description><![CDATA["Rail"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="gs_pocket_frame">
			<Description><![CDATA["Pocket Frame"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_pocket_frame_thk">
			<Description><![CDATA["Pocket Frame Thickness"]]></Description>
			<Value>0.02</Value>
		</Length>

		<!-- gs_door_panel: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_door_panel">
			<Description><![CDATA["Door Panel"]]></Description>
		</Title>
		<Integer Name="gs_leaf_num">
			<Description><![CDATA["Number of Door Leaves"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>4</Value>
		</Integer>
		<Integer Name="gs_leaf_num2">
			<Description><![CDATA["Number of Door Leaves - Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3</Value>
		</Integer>
		<Integer Name="iDoorPanelType">
			<Description><![CDATA["Door Panel Style"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>45</Value>
		</Integer>
		<String Name="gs_LeavesConfig">
			<Description><![CDATA["Leaves Configuration"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Одинаковые Полотна"]]></Value>
		</String>
		<Integer Name="gs_iLeavesConfig">
			<Description><![CDATA["Leaves Configuration"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="gs_SecondLeaf_w">
			<Description><![CDATA["Leaf Width Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.9</Value>
		</Length>
		<String Name="gs_cust_panel">
			<Description><![CDATA["Custom Panel Name"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Length Name="gs_leaf_thk">
			<Description><![CDATA["Leaf Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.044</Value>
		</Length>
		<Length Name="gs_fw_side">
			<Description><![CDATA["Leaf Frame Width Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Length Name="gs_fw_side_right">
			<Description><![CDATA["Leaf Frame Width Right"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Length Name="gs_fw_side_left">
			<Description><![CDATA["Leaf Frame Width Left"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Length Name="gs_fw_lower">
			<Description><![CDATA["Leaf Frame Width Lower"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.2</Value>
		</Length>
		<Length Name="gs_fw_upper">
			<Description><![CDATA["Leaf Frame Width Upper"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Length Name="gs_int_fw">
			<Description><![CDATA["Leaf Frame Width Internal"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.025</Value>
		</Length>
		<Length Name="gs_leaf_undercut">
			<Description><![CDATA["Leaf Undercut"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<String Name="gs_grill_pos">
			<Description><![CDATA["Grid Position"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Снаружи"]]></Value>
		</String>
		<Integer Name="gs_grill_pos_m">
			<Description><![CDATA["Grid Position"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="gs_grid_w">
			<Description><![CDATA["Grid Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.012</Value>
		</Length>
		<Length Name="gs_grid_thk">
			<Description><![CDATA["Grid Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.025</Value>
		</Length>
		<Integer Name="gs_hor_gnum">
			<Description><![CDATA["Panes Number Vertically Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3</Value>
		</Integer>
		<Integer Name="gs_ver_gnum">
			<Description><![CDATA["Panes Number Horizontally Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>6</Value>
		</Integer>
		<Integer Name="gs_hor_gnum4">
			<Description><![CDATA["Panes Number Vertically Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>4</Value>
		</Integer>
		<Integer Name="gs_ver_gnum4">
			<Description><![CDATA["Panes Number Horizontally Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="gs_glass_thk">
			<Description><![CDATA["Glass Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.012</Value>
		</Length>
		<Boolean Name="bShowGlassPanelOnSymbol">
			<Description><![CDATA["Show as Glass Panel on Symbol"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="bShowChiSpringSymbol">
			<Description><![CDATA["Show Chinese Spring Door Symbol"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bShowAirtightPanel">
			<Description><![CDATA["Show Symbol as Airtight Panel"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="gs_handle_set_to_edit">
			<Description><![CDATA["Edit Handle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="gs_handle_uniform">
			<Description><![CDATA["Uniform Handles"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<String Name="gs_handle_type">
			<Description><![CDATA["Opening Handle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Нет"]]></Value>
		</String>
		<Integer Name="gs_handle_type_m">
			<Description><![CDATA["Opening Handle"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Boolean Name="bShowHandleOnSymbol">
			<Description><![CDATA["Show Handle on Symbol"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<String Name="gs_cust_handle">
			<Description><![CDATA["Custom Handle Name"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Length Name="gs_han_height">
			<Description><![CDATA["Handle Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="gs_han_pos">
			<Description><![CDATA["Handle Position"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Integer Name="gs_kickboard_set_to_edit">
			<Description><![CDATA["Kick Board"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="bKickBoardOut">
			<Description><![CDATA["Kick Board Outside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bKickBoardIn">
			<Description><![CDATA["Kick Board Inside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="kickBoardHeight">
			<Description><![CDATA["Kick Board Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Boolean Name="bKickBoardOut2">
			<Description><![CDATA["Kick Board Outside 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bKickBoardIn2">
			<Description><![CDATA["Kick Board Inside 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="kickBoardHeight2">
			<Description><![CDATA["Kick Board Height 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>

		<!-- gs_door_panel2: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_door_panel2">
			<Description><![CDATA["Side Panel"]]></Description>
		</Title>
		<Integer Name="iDoorPanelType2">
			<Description><![CDATA["Door Panel Style"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="gs_cust_panel2">
			<Description><![CDATA["Custom Panel Name"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Length Name="gs_fw_side2">
			<Description><![CDATA["Leaf Frame Width Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Length Name="gs_fw_side_right2">
			<Description><![CDATA["Leaf Frame Width Right"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Length Name="gs_fw_side_left2">
			<Description><![CDATA["Leaf Frame Width Left"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Length Name="gs_fw_lower2">
			<Description><![CDATA["Leaf Frame Width Lower"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.2</Value>
		</Length>
		<Length Name="gs_fw_upper2">
			<Description><![CDATA["Leaf Frame Width Upper"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Length Name="gs_int_fw2">
			<Description><![CDATA["Leaf Frame Width Internal"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.025</Value>
		</Length>
		<String Name="gs_grill_pos2">
			<Description><![CDATA["Grid Position"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Снаружи"]]></Value>
		</String>
		<Integer Name="gs_grill_pos2_m">
			<Description><![CDATA["Grid Position"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="gs_grid_w2">
			<Description><![CDATA["Grid Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.012</Value>
		</Length>
		<Length Name="gs_grid_thk2">
			<Description><![CDATA["Grid Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.025</Value>
		</Length>
		<Integer Name="gs_hor_gnum2">
			<Description><![CDATA["Panes Number Vertically"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3</Value>
		</Integer>
		<Integer Name="gs_ver_gnum2">
			<Description><![CDATA["Panes Number Horizontally"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="gs_handle_type2_m">
			<Description><![CDATA["Opening Handle"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<String Name="gs_cust_handle2">
			<Description><![CDATA["Custom Handle Name"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Length Name="gs_han_height2">
			<Description><![CDATA["Handle Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="gs_han_pos2">
			<Description><![CDATA["Handle Position"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>

		<!-- gs_Sl_Tr_Sashes: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_Sl_Tr_Sashes">
			<Description><![CDATA["Sidelight and Transom Sashes"]]></Description>
		</Title>
		<Integer Name="gs_sash_set_to_edit">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>3</Value>
		</Integer>
		<Integer Name="gs_more_sash_set_to_edit">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="gs_sash_uniform">
			<Description><![CDATA["Uniform Sashes"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<String Name="gs_optype_05">
			<Description><![CDATA["Opening Type Sidelight Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="gs_optype_m_05">
			<Description><![CDATA["Opening Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>3</Value>
		</Integer>
		<String Name="gs_optype_09">
			<Description><![CDATA["Opening Type Sidelight Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Распашная"]]></Value>
		</String>
		<Integer Name="gs_optype_m_09">
			<Description><![CDATA["Opening Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>3</Value>
		</Integer>
		<String Name="gs_optype_07">
			<Description><![CDATA["Opening Type Sidelight 1 Lower"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="gs_optype_m_07">
			<Description><![CDATA["Opening Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="gs_optype_11">
			<Description><![CDATA["Opening Type Sidelight 2 Lower"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="gs_optype_m_11">
			<Description><![CDATA["Opening Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="gs_optype_02">
			<Description><![CDATA["Opening Type Middle Transom"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="gs_optype_m_02">
			<Description><![CDATA["Opening Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="gs_optype_06">
			<Description><![CDATA["Opening Type Transom Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="gs_optype_m_06">
			<Description><![CDATA["Opening Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="gs_optype_10">
			<Description><![CDATA["Opening Type Transom Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="gs_optype_m_10">
			<Description><![CDATA["Opening Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="MullionStyle_00">
			<Description><![CDATA["Sash Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Без Раскладки"]]></Value>
		</String>
		<Integer Name="iMullionStyle_00">
			<Description><![CDATA["Sash Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="MullionStyle_05">
			<Description><![CDATA["Sash Type Sidelight Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="iMullionStyle_05">
			<Description><![CDATA["Sash Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="MullionStyle_09">
			<Description><![CDATA["Sash Type Sidelight Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Без Раскладки"]]></Value>
		</String>
		<Integer Name="iMullionStyle_09">
			<Description><![CDATA["Sash Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="MullionStyle_07">
			<Description><![CDATA["Sash Type Sidelight 1 Lower"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="iMullionStyle_07">
			<Description><![CDATA["Sash Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>15</Value>
		</Integer>
		<String Name="MullionStyle_11">
			<Description><![CDATA["Sash Type Sidelight 2 Lower"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="iMullionStyle_11">
			<Description><![CDATA["Sash Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>15</Value>
		</Integer>
		<String Name="MullionStyle_02">
			<Description><![CDATA["Sash Type Middle Transom"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="iMullionStyle_02">
			<Description><![CDATA["Sash Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="MullionStyle_06">
			<Description><![CDATA["Sash Type Transom Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="iMullionStyle_06">
			<Description><![CDATA["Sash Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="MullionStyle_10">
			<Description><![CDATA["Sash Type Transom Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="iMullionStyle_10">
			<Description><![CDATA["Sash Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="sashFrameWidth">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="4" SecondDimension="11">
				<AVal Column="1" Row="1">0.05</AVal>
				<AVal Column="2" Row="1">0.05</AVal>
				<AVal Column="3" Row="1">0.05</AVal>
				<AVal Column="4" Row="1">0.05</AVal>
				<AVal Column="5" Row="1">0.05</AVal>
				<AVal Column="6" Row="1">0.05</AVal>
				<AVal Column="7" Row="1">0.05</AVal>
				<AVal Column="8" Row="1">0.05</AVal>
				<AVal Column="9" Row="1">0.05</AVal>
				<AVal Column="10" Row="1">0.05</AVal>
				<AVal Column="11" Row="1">0.05</AVal>
				<AVal Column="1" Row="2">0.05</AVal>
				<AVal Column="2" Row="2">0.05</AVal>
				<AVal Column="3" Row="2">0.05</AVal>
				<AVal Column="4" Row="2">0.05</AVal>
				<AVal Column="5" Row="2">0.05</AVal>
				<AVal Column="6" Row="2">0.05</AVal>
				<AVal Column="7" Row="2">0.05</AVal>
				<AVal Column="8" Row="2">0.05</AVal>
				<AVal Column="9" Row="2">0.05</AVal>
				<AVal Column="10" Row="2">0.05</AVal>
				<AVal Column="11" Row="2">0.05</AVal>
				<AVal Column="1" Row="3">0.05</AVal>
				<AVal Column="2" Row="3">0.05</AVal>
				<AVal Column="3" Row="3">0.05</AVal>
				<AVal Column="4" Row="3">0.05</AVal>
				<AVal Column="5" Row="3">0.05</AVal>
				<AVal Column="6" Row="3">0.05</AVal>
				<AVal Column="7" Row="3">0.05</AVal>
				<AVal Column="8" Row="3">0.05</AVal>
				<AVal Column="9" Row="3">0.05</AVal>
				<AVal Column="10" Row="3">0.05</AVal>
				<AVal Column="11" Row="3">0.05</AVal>
				<AVal Column="1" Row="4">0.1</AVal>
				<AVal Column="2" Row="4">0.1</AVal>
				<AVal Column="3" Row="4">0.1</AVal>
				<AVal Column="4" Row="4">0.1</AVal>
				<AVal Column="5" Row="4">0.1</AVal>
				<AVal Column="6" Row="4">0.1</AVal>
				<AVal Column="7" Row="4">0.1</AVal>
				<AVal Column="8" Row="4">0.1</AVal>
				<AVal Column="9" Row="4">0.1</AVal>
				<AVal Column="10" Row="4">0.1</AVal>
				<AVal Column="11" Row="4">0.1</AVal>
			</ArrayValues>
		</Length>
		<Length Name="gs_horiz_div_height_05">
			<Description><![CDATA["Horizontal Division Height Sidelight Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.9</Value>
		</Length>
		<Length Name="gs_horiz_div_height_09">
			<Description><![CDATA["Horizontal Division Height Sidelight Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.9</Value>
		</Length>
		<Length Name="gs_horiz_div_height_07">
			<Description><![CDATA["Horizontal Division Height Sidelight 1 Lower"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.9</Value>
		</Length>
		<Length Name="gs_horiz_div_height_11">
			<Description><![CDATA["Horizontal Division Height Sidelight 2 Lower"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.9</Value>
		</Length>
		<Length Name="gs_horiz_div_height_02">
			<Description><![CDATA["Horizontal Division Height Middle Transom"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.9</Value>
		</Length>
		<Length Name="gs_horiz_div_height_06">
			<Description><![CDATA["Horizontal Division Height Transom Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.9</Value>
		</Length>
		<Length Name="gs_horiz_div_height_10">
			<Description><![CDATA["Horizontal Division Height Transom Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.9</Value>
		</Length>
		<String Name="gs_cust_panel_00">
			<Description><![CDATA["Custom Panel Name"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_cust_panel_05">
			<Description><![CDATA["Custom Panel Name Sidelight Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_cust_panel2_05">
			<Description><![CDATA["Custom Panel Name 2 Sidelight Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_cust_panel_09">
			<Description><![CDATA["Custom Panel Name Sidelight Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_cust_panel2_09">
			<Description><![CDATA["Custom Panel Name 2 Sidelight Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_cust_panel_07">
			<Description><![CDATA["Custom Panel Name Sidelight 1 Lower"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_cust_panel2_07">
			<Description><![CDATA["Custom Panel Name 2 Sidelight 1 Lower"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_cust_panel_11">
			<Description><![CDATA["Custom Panel Name Sidelight 2 Lower"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_cust_panel2_11">
			<Description><![CDATA["Custom Panel Name 2 Sidelight 2 Lower"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_cust_panel_02">
			<Description><![CDATA["Custom Panel Name Middle Transom"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_cust_panel2_02">
			<Description><![CDATA["Custom Panel Name 2 Middle Transom"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_cust_panel_06">
			<Description><![CDATA["Custom Panel Name Transom Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_cust_panel2_06">
			<Description><![CDATA["Custom Panel Name 2 Transom Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_cust_panel_10">
			<Description><![CDATA["Custom Panel Name Transom Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_cust_panel2_10">
			<Description><![CDATA["Custom Panel Name 2 Transom Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Boolean Name="ghe">
			<Description><![CDATA["Hotspot Grill Editing"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="gs_sash_thk">
			<Description><![CDATA["Sidelight and Transom Frame Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.044</Value>
		</Length>
		<Length Name="gs_sash_width">
			<Description><![CDATA["Transom Frame Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.067</Value>
		</Length>
		<Length Name="gs_sl_sash_width">
			<Description><![CDATA["Sidelight Frame Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.078</Value>
		</Length>
		<String Name="MullionPosition">
			<Description><![CDATA["Grid Position"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Посередине"]]></Value>
		</String>
		<Integer Name="iMullionPosition">
			<Description><![CDATA["Grid Position"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>3</Value>
		</Integer>
		<Length Name="gw">
			<Description><![CDATA["Grill Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.02</Value>
		</Length>
		<Length Name="gth">
			<Description><![CDATA["Grill Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.025</Value>
		</Length>
		<Length Name="gs_sidelight_div_width">
			<Description><![CDATA["Sidelight Division Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_sidelight_div_thk">
			<Description><![CDATA["Sidelight Division Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.04</Value>
		</Length>
		<Integer Name="hgn_05">
			<Description><![CDATA["Panes Number Vertically Main Sash Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="vgn_05">
			<Description><![CDATA["Panes Number Horizontally Main Sash Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="hgn2_05">
			<Description><![CDATA["Panes Number Vertically 2 Main Sash Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="vgn2_05">
			<Description><![CDATA["Panes Number Horizontally 2 Main Sash Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="hgn_09">
			<Description><![CDATA["Panes Number Vertically Main Sash Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="vgn_09">
			<Description><![CDATA["Panes Number Horizontally Main Sash Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="hgn2_09">
			<Description><![CDATA["Panes Number Vertically 2 Main Sash Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="vgn2_09">
			<Description><![CDATA["Panes Number Horizontally 2 Main Sash Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="hgn_07">
			<Description><![CDATA["Panes Number Vertically Sidelight 1 Lower"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>4</Value>
		</Integer>
		<Integer Name="vgn_07">
			<Description><![CDATA["Panes Number Horizontally Sidelight 1 Lower"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="hgn2_07">
			<Description><![CDATA["Panes Number Vertically 2 Sidelight 1 Lower"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>4</Value>
		</Integer>
		<Integer Name="vgn2_07">
			<Description><![CDATA["Panes Number Horizontally 2 Sidelight 1 Lower"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="hgn_11">
			<Description><![CDATA["Panes Number Vertically Sidelight 2 Lower"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>4</Value>
		</Integer>
		<Integer Name="vgn_11">
			<Description><![CDATA["Panes Number Horizontally Sidelight 2 Lower"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="hgn2_11">
			<Description><![CDATA["Panes Number Vertically 2 Sidelight 2 Lower"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>4</Value>
		</Integer>
		<Integer Name="vgn2_11">
			<Description><![CDATA["Panes Number Horizontally 2 Sidelight 2 Lower"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="hgn_02">
			<Description><![CDATA["Panes Number Vertically Middle Transom"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="vgn_02">
			<Description><![CDATA["Panes Number Horizontally Middle Transom"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="hgn2_02">
			<Description><![CDATA["Panes Number Vertically 2 Middle Transom"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="vgn2_02">
			<Description><![CDATA["Panes Number Horizontally 2 Middle Transom"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="hgn_06">
			<Description><![CDATA["Panes Number Vertically Transom Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="vgn_06">
			<Description><![CDATA["Panes Number Horizontally Transom Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="hgn2_06">
			<Description><![CDATA["Panes Number Vertically 2 Transom Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="vgn2_06">
			<Description><![CDATA["Panes Number Horizontally 2 Transom Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="hgn_10">
			<Description><![CDATA["Panes Number Vertically Transom Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="vgn_10">
			<Description><![CDATA["Panes Number Horizontally Transom Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="hgn2_10">
			<Description><![CDATA["Panes Number Vertically 2 Transom Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="vgn2_10">
			<Description><![CDATA["Panes Number Horizontally 2 Transom Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Length Name="vergrid_02">
			<Description><![CDATA["V. Grid Positioning from Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="3">
				<AVal Column="1" Row="1">0.218333333333</AVal>
				<AVal Column="2" Row="1">0.025</AVal>
				<AVal Column="3" Row="1">0.275</AVal>
			</ArrayValues>
		</Length>
		<Length Name="horgrid_02">
			<Description><![CDATA["H. Grid Positioning from Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="3">
				<AVal Column="1" Row="1">0.135</AVal>
				<AVal Column="2" Row="1">0.025</AVal>
				<AVal Column="3" Row="1">0.441666666667</AVal>
			</ArrayValues>
		</Length>
		<Length Name="vergrid2_02">
			<Description><![CDATA["V. Grid Positioning from Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="10" SecondDimension="3">
				<AVal Column="1" Row="1">0.1975</AVal>
				<AVal Column="2" Row="1">0.05</AVal>
				<AVal Column="3" Row="1">1.1</AVal>
				<AVal Column="1" Row="2">0</AVal>
				<AVal Column="2" Row="2">0</AVal>
				<AVal Column="3" Row="2">0</AVal>
				<AVal Column="1" Row="3">0</AVal>
				<AVal Column="2" Row="3">0</AVal>
				<AVal Column="3" Row="3">0</AVal>
				<AVal Column="1" Row="4">0</AVal>
				<AVal Column="2" Row="4">0</AVal>
				<AVal Column="3" Row="4">0</AVal>
				<AVal Column="1" Row="5">0</AVal>
				<AVal Column="2" Row="5">0</AVal>
				<AVal Column="3" Row="5">0</AVal>
				<AVal Column="1" Row="6">0</AVal>
				<AVal Column="2" Row="6">0</AVal>
				<AVal Column="3" Row="6">0</AVal>
				<AVal Column="1" Row="7">0</AVal>
				<AVal Column="2" Row="7">0</AVal>
				<AVal Column="3" Row="7">0</AVal>
				<AVal Column="1" Row="8">0</AVal>
				<AVal Column="2" Row="8">0</AVal>
				<AVal Column="3" Row="8">0</AVal>
				<AVal Column="1" Row="9">0</AVal>
				<AVal Column="2" Row="9">0</AVal>
				<AVal Column="3" Row="9">0</AVal>
				<AVal Column="1" Row="10">0</AVal>
				<AVal Column="2" Row="10">0</AVal>
				<AVal Column="3" Row="10">0</AVal>
			</ArrayValues>
		</Length>
		<Length Name="horgrid2_02">
			<Description><![CDATA["H. Grid Positioning from Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="10" SecondDimension="3">
				<AVal Column="1" Row="1">0.2575</AVal>
				<AVal Column="2" Row="1">0.05</AVal>
				<AVal Column="3" Row="1">0.45</AVal>
				<AVal Column="1" Row="2">0.515</AVal>
				<AVal Column="2" Row="2">0.05</AVal>
				<AVal Column="3" Row="2">0.45</AVal>
				<AVal Column="1" Row="3">0.7725</AVal>
				<AVal Column="2" Row="3">0.05</AVal>
				<AVal Column="3" Row="3">0.45</AVal>
				<AVal Column="1" Row="4">0</AVal>
				<AVal Column="2" Row="4">0</AVal>
				<AVal Column="3" Row="4">0</AVal>
				<AVal Column="1" Row="5">0</AVal>
				<AVal Column="2" Row="5">0</AVal>
				<AVal Column="3" Row="5">0</AVal>
				<AVal Column="1" Row="6">0</AVal>
				<AVal Column="2" Row="6">0</AVal>
				<AVal Column="3" Row="6">0</AVal>
				<AVal Column="1" Row="7">0</AVal>
				<AVal Column="2" Row="7">0</AVal>
				<AVal Column="3" Row="7">0</AVal>
				<AVal Column="1" Row="8">0</AVal>
				<AVal Column="2" Row="8">0</AVal>
				<AVal Column="3" Row="8">0</AVal>
				<AVal Column="1" Row="9">0</AVal>
				<AVal Column="2" Row="9">0</AVal>
				<AVal Column="3" Row="9">0</AVal>
				<AVal Column="1" Row="10">0</AVal>
				<AVal Column="2" Row="10">0</AVal>
				<AVal Column="3" Row="10">0</AVal>
			</ArrayValues>
		</Length>
		<Length Name="vergrid_05">
			<Description><![CDATA["V. Grid Positioning from Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="3">
				<AVal Column="1" Row="1">0.168333333333</AVal>
				<AVal Column="2" Row="1">0.05</AVal>
				<AVal Column="3" Row="1">1.05</AVal>
			</ArrayValues>
		</Length>
		<Length Name="horgrid_05">
			<Description><![CDATA["H. Grid Positioning from Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="3">
				<AVal Column="1" Row="1">0.51</AVal>
				<AVal Column="2" Row="1">0.05</AVal>
				<AVal Column="3" Row="1">0.366666666667</AVal>
			</ArrayValues>
		</Length>
		<Length Name="vergrid2_05">
			<Description><![CDATA["V. Grid Positioning from Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="10" SecondDimension="3">
				<AVal Column="1" Row="1">0.1975</AVal>
				<AVal Column="2" Row="1">0.05</AVal>
				<AVal Column="3" Row="1">1.1</AVal>
				<AVal Column="1" Row="2">0</AVal>
				<AVal Column="2" Row="2">0</AVal>
				<AVal Column="3" Row="2">0</AVal>
				<AVal Column="1" Row="3">0</AVal>
				<AVal Column="2" Row="3">0</AVal>
				<AVal Column="3" Row="3">0</AVal>
				<AVal Column="1" Row="4">0</AVal>
				<AVal Column="2" Row="4">0</AVal>
				<AVal Column="3" Row="4">0</AVal>
				<AVal Column="1" Row="5">0</AVal>
				<AVal Column="2" Row="5">0</AVal>
				<AVal Column="3" Row="5">0</AVal>
				<AVal Column="1" Row="6">0</AVal>
				<AVal Column="2" Row="6">0</AVal>
				<AVal Column="3" Row="6">0</AVal>
				<AVal Column="1" Row="7">0</AVal>
				<AVal Column="2" Row="7">0</AVal>
				<AVal Column="3" Row="7">0</AVal>
				<AVal Column="1" Row="8">0</AVal>
				<AVal Column="2" Row="8">0</AVal>
				<AVal Column="3" Row="8">0</AVal>
				<AVal Column="1" Row="9">0</AVal>
				<AVal Column="2" Row="9">0</AVal>
				<AVal Column="3" Row="9">0</AVal>
				<AVal Column="1" Row="10">0</AVal>
				<AVal Column="2" Row="10">0</AVal>
				<AVal Column="3" Row="10">0</AVal>
			</ArrayValues>
		</Length>
		<Length Name="horgrid2_05">
			<Description><![CDATA["H. Grid Positioning from Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="10" SecondDimension="3">
				<AVal Column="1" Row="1">0.2575</AVal>
				<AVal Column="2" Row="1">0.05</AVal>
				<AVal Column="3" Row="1">0.45</AVal>
				<AVal Column="1" Row="2">0.515</AVal>
				<AVal Column="2" Row="2">0.05</AVal>
				<AVal Column="3" Row="2">0.45</AVal>
				<AVal Column="1" Row="3">0.7725</AVal>
				<AVal Column="2" Row="3">0.05</AVal>
				<AVal Column="3" Row="3">0.45</AVal>
				<AVal Column="1" Row="4">0</AVal>
				<AVal Column="2" Row="4">0</AVal>
				<AVal Column="3" Row="4">0</AVal>
				<AVal Column="1" Row="5">0</AVal>
				<AVal Column="2" Row="5">0</AVal>
				<AVal Column="3" Row="5">0</AVal>
				<AVal Column="1" Row="6">0</AVal>
				<AVal Column="2" Row="6">0</AVal>
				<AVal Column="3" Row="6">0</AVal>
				<AVal Column="1" Row="7">0</AVal>
				<AVal Column="2" Row="7">0</AVal>
				<AVal Column="3" Row="7">0</AVal>
				<AVal Column="1" Row="8">0</AVal>
				<AVal Column="2" Row="8">0</AVal>
				<AVal Column="3" Row="8">0</AVal>
				<AVal Column="1" Row="9">0</AVal>
				<AVal Column="2" Row="9">0</AVal>
				<AVal Column="3" Row="9">0</AVal>
				<AVal Column="1" Row="10">0</AVal>
				<AVal Column="2" Row="10">0</AVal>
				<AVal Column="3" Row="10">0</AVal>
			</ArrayValues>
		</Length>
		<Length Name="vergrid_06">
			<Description><![CDATA["V. Grid Positioning from Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="3">
				<AVal Column="1" Row="1">0.168333333333</AVal>
				<AVal Column="2" Row="1">0.05</AVal>
				<AVal Column="3" Row="1">0.25</AVal>
			</ArrayValues>
		</Length>
		<Length Name="horgrid_06">
			<Description><![CDATA["H. Grid Positioning from Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="3">
				<AVal Column="1" Row="1">0.11</AVal>
				<AVal Column="2" Row="1">0.05</AVal>
				<AVal Column="3" Row="1">0.366666666667</AVal>
			</ArrayValues>
		</Length>
		<Length Name="vergrid2_06">
			<Description><![CDATA["V. Grid Positioning from Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="10" SecondDimension="3">
				<AVal Column="1" Row="1">0.1975</AVal>
				<AVal Column="2" Row="1">0.05</AVal>
				<AVal Column="3" Row="1">1.1</AVal>
				<AVal Column="1" Row="2">0</AVal>
				<AVal Column="2" Row="2">0</AVal>
				<AVal Column="3" Row="2">0</AVal>
				<AVal Column="1" Row="3">0</AVal>
				<AVal Column="2" Row="3">0</AVal>
				<AVal Column="3" Row="3">0</AVal>
				<AVal Column="1" Row="4">0</AVal>
				<AVal Column="2" Row="4">0</AVal>
				<AVal Column="3" Row="4">0</AVal>
				<AVal Column="1" Row="5">0</AVal>
				<AVal Column="2" Row="5">0</AVal>
				<AVal Column="3" Row="5">0</AVal>
				<AVal Column="1" Row="6">0</AVal>
				<AVal Column="2" Row="6">0</AVal>
				<AVal Column="3" Row="6">0</AVal>
				<AVal Column="1" Row="7">0</AVal>
				<AVal Column="2" Row="7">0</AVal>
				<AVal Column="3" Row="7">0</AVal>
				<AVal Column="1" Row="8">0</AVal>
				<AVal Column="2" Row="8">0</AVal>
				<AVal Column="3" Row="8">0</AVal>
				<AVal Column="1" Row="9">0</AVal>
				<AVal Column="2" Row="9">0</AVal>
				<AVal Column="3" Row="9">0</AVal>
				<AVal Column="1" Row="10">0</AVal>
				<AVal Column="2" Row="10">0</AVal>
				<AVal Column="3" Row="10">0</AVal>
			</ArrayValues>
		</Length>
		<Length Name="horgrid2_06">
			<Description><![CDATA["H. Grid Positioning from Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="10" SecondDimension="3">
				<AVal Column="1" Row="1">0.2575</AVal>
				<AVal Column="2" Row="1">0.05</AVal>
				<AVal Column="3" Row="1">0.45</AVal>
				<AVal Column="1" Row="2">0.515</AVal>
				<AVal Column="2" Row="2">0.05</AVal>
				<AVal Column="3" Row="2">0.45</AVal>
				<AVal Column="1" Row="3">0.7725</AVal>
				<AVal Column="2" Row="3">0.05</AVal>
				<AVal Column="3" Row="3">0.45</AVal>
				<AVal Column="1" Row="4">0</AVal>
				<AVal Column="2" Row="4">0</AVal>
				<AVal Column="3" Row="4">0</AVal>
				<AVal Column="1" Row="5">0</AVal>
				<AVal Column="2" Row="5">0</AVal>
				<AVal Column="3" Row="5">0</AVal>
				<AVal Column="1" Row="6">0</AVal>
				<AVal Column="2" Row="6">0</AVal>
				<AVal Column="3" Row="6">0</AVal>
				<AVal Column="1" Row="7">0</AVal>
				<AVal Column="2" Row="7">0</AVal>
				<AVal Column="3" Row="7">0</AVal>
				<AVal Column="1" Row="8">0</AVal>
				<AVal Column="2" Row="8">0</AVal>
				<AVal Column="3" Row="8">0</AVal>
				<AVal Column="1" Row="9">0</AVal>
				<AVal Column="2" Row="9">0</AVal>
				<AVal Column="3" Row="9">0</AVal>
				<AVal Column="1" Row="10">0</AVal>
				<AVal Column="2" Row="10">0</AVal>
				<AVal Column="3" Row="10">0</AVal>
			</ArrayValues>
		</Length>
		<Length Name="vergrid_07">
			<Description><![CDATA["V. Grid Positioning from Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="3">
				<AVal Column="1" Row="1">0.193333333333</AVal>
				<AVal Column="2" Row="1">0.05</AVal>
				<AVal Column="3" Row="1">1.05</AVal>
			</ArrayValues>
		</Length>
		<Length Name="horgrid_07">
			<Description><![CDATA["H. Grid Positioning from Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="3">
				<AVal Column="1" Row="1">0.51</AVal>
				<AVal Column="2" Row="1">0.05</AVal>
				<AVal Column="3" Row="1">0.416666666667</AVal>
			</ArrayValues>
		</Length>
		<Length Name="vergrid2_07">
			<Description><![CDATA["V. Grid Positioning from Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="10" SecondDimension="3">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0</AVal>
				<AVal Column="3" Row="1">0</AVal>
				<AVal Column="1" Row="2">0</AVal>
				<AVal Column="2" Row="2">0</AVal>
				<AVal Column="3" Row="2">0</AVal>
				<AVal Column="1" Row="3">0</AVal>
				<AVal Column="2" Row="3">0</AVal>
				<AVal Column="3" Row="3">0</AVal>
				<AVal Column="1" Row="4">0</AVal>
				<AVal Column="2" Row="4">0</AVal>
				<AVal Column="3" Row="4">0</AVal>
				<AVal Column="1" Row="5">0</AVal>
				<AVal Column="2" Row="5">0</AVal>
				<AVal Column="3" Row="5">0</AVal>
				<AVal Column="1" Row="6">0</AVal>
				<AVal Column="2" Row="6">0</AVal>
				<AVal Column="3" Row="6">0</AVal>
				<AVal Column="1" Row="7">0</AVal>
				<AVal Column="2" Row="7">0</AVal>
				<AVal Column="3" Row="7">0</AVal>
				<AVal Column="1" Row="8">0</AVal>
				<AVal Column="2" Row="8">0</AVal>
				<AVal Column="3" Row="8">0</AVal>
				<AVal Column="1" Row="9">0</AVal>
				<AVal Column="2" Row="9">0</AVal>
				<AVal Column="3" Row="9">0</AVal>
				<AVal Column="1" Row="10">0</AVal>
				<AVal Column="2" Row="10">0</AVal>
				<AVal Column="3" Row="10">0</AVal>
			</ArrayValues>
		</Length>
		<Length Name="horgrid2_07">
			<Description><![CDATA["H. Grid Positioning from Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="10" SecondDimension="3">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0</AVal>
				<AVal Column="3" Row="1">0</AVal>
				<AVal Column="1" Row="2">0</AVal>
				<AVal Column="2" Row="2">0</AVal>
				<AVal Column="3" Row="2">0</AVal>
				<AVal Column="1" Row="3">0</AVal>
				<AVal Column="2" Row="3">0</AVal>
				<AVal Column="3" Row="3">0</AVal>
				<AVal Column="1" Row="4">0</AVal>
				<AVal Column="2" Row="4">0</AVal>
				<AVal Column="3" Row="4">0</AVal>
				<AVal Column="1" Row="5">0</AVal>
				<AVal Column="2" Row="5">0</AVal>
				<AVal Column="3" Row="5">0</AVal>
				<AVal Column="1" Row="6">0</AVal>
				<AVal Column="2" Row="6">0</AVal>
				<AVal Column="3" Row="6">0</AVal>
				<AVal Column="1" Row="7">0</AVal>
				<AVal Column="2" Row="7">0</AVal>
				<AVal Column="3" Row="7">0</AVal>
				<AVal Column="1" Row="8">0</AVal>
				<AVal Column="2" Row="8">0</AVal>
				<AVal Column="3" Row="8">0</AVal>
				<AVal Column="1" Row="9">0</AVal>
				<AVal Column="2" Row="9">0</AVal>
				<AVal Column="3" Row="9">0</AVal>
				<AVal Column="1" Row="10">0</AVal>
				<AVal Column="2" Row="10">0</AVal>
				<AVal Column="3" Row="10">0</AVal>
			</ArrayValues>
		</Length>
		<Length Name="vergrid_09">
			<Description><![CDATA["V. Grid Positioning from Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="3">
				<AVal Column="1" Row="1">0.193333333333</AVal>
				<AVal Column="2" Row="1">0.05</AVal>
				<AVal Column="3" Row="1">1.05</AVal>
			</ArrayValues>
		</Length>
		<Length Name="horgrid_09">
			<Description><![CDATA["H. Grid Positioning from Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="3">
				<AVal Column="1" Row="1">0.51</AVal>
				<AVal Column="2" Row="1">0.05</AVal>
				<AVal Column="3" Row="1">0.416666666667</AVal>
			</ArrayValues>
		</Length>
		<Length Name="vergrid2_09">
			<Description><![CDATA["V. Grid Positioning from Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="10" SecondDimension="3">
				<AVal Column="1" Row="1">0.1975</AVal>
				<AVal Column="2" Row="1">0.05</AVal>
				<AVal Column="3" Row="1">1.1</AVal>
				<AVal Column="1" Row="2">0</AVal>
				<AVal Column="2" Row="2">0</AVal>
				<AVal Column="3" Row="2">0</AVal>
				<AVal Column="1" Row="3">0</AVal>
				<AVal Column="2" Row="3">0</AVal>
				<AVal Column="3" Row="3">0</AVal>
				<AVal Column="1" Row="4">0</AVal>
				<AVal Column="2" Row="4">0</AVal>
				<AVal Column="3" Row="4">0</AVal>
				<AVal Column="1" Row="5">0</AVal>
				<AVal Column="2" Row="5">0</AVal>
				<AVal Column="3" Row="5">0</AVal>
				<AVal Column="1" Row="6">0</AVal>
				<AVal Column="2" Row="6">0</AVal>
				<AVal Column="3" Row="6">0</AVal>
				<AVal Column="1" Row="7">0</AVal>
				<AVal Column="2" Row="7">0</AVal>
				<AVal Column="3" Row="7">0</AVal>
				<AVal Column="1" Row="8">0</AVal>
				<AVal Column="2" Row="8">0</AVal>
				<AVal Column="3" Row="8">0</AVal>
				<AVal Column="1" Row="9">0</AVal>
				<AVal Column="2" Row="9">0</AVal>
				<AVal Column="3" Row="9">0</AVal>
				<AVal Column="1" Row="10">0</AVal>
				<AVal Column="2" Row="10">0</AVal>
				<AVal Column="3" Row="10">0</AVal>
			</ArrayValues>
		</Length>
		<Length Name="horgrid2_09">
			<Description><![CDATA["H. Grid Positioning from Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="10" SecondDimension="3">
				<AVal Column="1" Row="1">0.2575</AVal>
				<AVal Column="2" Row="1">0.05</AVal>
				<AVal Column="3" Row="1">0.45</AVal>
				<AVal Column="1" Row="2">0.515</AVal>
				<AVal Column="2" Row="2">0.05</AVal>
				<AVal Column="3" Row="2">0.45</AVal>
				<AVal Column="1" Row="3">0.7725</AVal>
				<AVal Column="2" Row="3">0.05</AVal>
				<AVal Column="3" Row="3">0.45</AVal>
				<AVal Column="1" Row="4">0</AVal>
				<AVal Column="2" Row="4">0</AVal>
				<AVal Column="3" Row="4">0</AVal>
				<AVal Column="1" Row="5">0</AVal>
				<AVal Column="2" Row="5">0</AVal>
				<AVal Column="3" Row="5">0</AVal>
				<AVal Column="1" Row="6">0</AVal>
				<AVal Column="2" Row="6">0</AVal>
				<AVal Column="3" Row="6">0</AVal>
				<AVal Column="1" Row="7">0</AVal>
				<AVal Column="2" Row="7">0</AVal>
				<AVal Column="3" Row="7">0</AVal>
				<AVal Column="1" Row="8">0</AVal>
				<AVal Column="2" Row="8">0</AVal>
				<AVal Column="3" Row="8">0</AVal>
				<AVal Column="1" Row="9">0</AVal>
				<AVal Column="2" Row="9">0</AVal>
				<AVal Column="3" Row="9">0</AVal>
				<AVal Column="1" Row="10">0</AVal>
				<AVal Column="2" Row="10">0</AVal>
				<AVal Column="3" Row="10">0</AVal>
			</ArrayValues>
		</Length>
		<Length Name="vergrid_10">
			<Description><![CDATA["V. Grid Positioning from Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="3">
				<AVal Column="1" Row="1">0.193333333333</AVal>
				<AVal Column="2" Row="1">0.05</AVal>
				<AVal Column="3" Row="1">0.25</AVal>
			</ArrayValues>
		</Length>
		<Length Name="horgrid_10">
			<Description><![CDATA["H. Grid Positioning from Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="3">
				<AVal Column="1" Row="1">0.11</AVal>
				<AVal Column="2" Row="1">0.05</AVal>
				<AVal Column="3" Row="1">0.416666666667</AVal>
			</ArrayValues>
		</Length>
		<Length Name="vergrid2_10">
			<Description><![CDATA["V. Grid Positioning from Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="10" SecondDimension="3">
				<AVal Column="1" Row="1">0.1975</AVal>
				<AVal Column="2" Row="1">0.05</AVal>
				<AVal Column="3" Row="1">1.1</AVal>
				<AVal Column="1" Row="2">0</AVal>
				<AVal Column="2" Row="2">0</AVal>
				<AVal Column="3" Row="2">0</AVal>
				<AVal Column="1" Row="3">0</AVal>
				<AVal Column="2" Row="3">0</AVal>
				<AVal Column="3" Row="3">0</AVal>
				<AVal Column="1" Row="4">0</AVal>
				<AVal Column="2" Row="4">0</AVal>
				<AVal Column="3" Row="4">0</AVal>
				<AVal Column="1" Row="5">0</AVal>
				<AVal Column="2" Row="5">0</AVal>
				<AVal Column="3" Row="5">0</AVal>
				<AVal Column="1" Row="6">0</AVal>
				<AVal Column="2" Row="6">0</AVal>
				<AVal Column="3" Row="6">0</AVal>
				<AVal Column="1" Row="7">0</AVal>
				<AVal Column="2" Row="7">0</AVal>
				<AVal Column="3" Row="7">0</AVal>
				<AVal Column="1" Row="8">0</AVal>
				<AVal Column="2" Row="8">0</AVal>
				<AVal Column="3" Row="8">0</AVal>
				<AVal Column="1" Row="9">0</AVal>
				<AVal Column="2" Row="9">0</AVal>
				<AVal Column="3" Row="9">0</AVal>
				<AVal Column="1" Row="10">0</AVal>
				<AVal Column="2" Row="10">0</AVal>
				<AVal Column="3" Row="10">0</AVal>
			</ArrayValues>
		</Length>
		<Length Name="horgrid2_10">
			<Description><![CDATA["H. Grid Positioning from Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="10" SecondDimension="3">
				<AVal Column="1" Row="1">0.2575</AVal>
				<AVal Column="2" Row="1">0.05</AVal>
				<AVal Column="3" Row="1">0.45</AVal>
				<AVal Column="1" Row="2">0.515</AVal>
				<AVal Column="2" Row="2">0.05</AVal>
				<AVal Column="3" Row="2">0.45</AVal>
				<AVal Column="1" Row="3">0.7725</AVal>
				<AVal Column="2" Row="3">0.05</AVal>
				<AVal Column="3" Row="3">0.45</AVal>
				<AVal Column="1" Row="4">0</AVal>
				<AVal Column="2" Row="4">0</AVal>
				<AVal Column="3" Row="4">0</AVal>
				<AVal Column="1" Row="5">0</AVal>
				<AVal Column="2" Row="5">0</AVal>
				<AVal Column="3" Row="5">0</AVal>
				<AVal Column="1" Row="6">0</AVal>
				<AVal Column="2" Row="6">0</AVal>
				<AVal Column="3" Row="6">0</AVal>
				<AVal Column="1" Row="7">0</AVal>
				<AVal Column="2" Row="7">0</AVal>
				<AVal Column="3" Row="7">0</AVal>
				<AVal Column="1" Row="8">0</AVal>
				<AVal Column="2" Row="8">0</AVal>
				<AVal Column="3" Row="8">0</AVal>
				<AVal Column="1" Row="9">0</AVal>
				<AVal Column="2" Row="9">0</AVal>
				<AVal Column="3" Row="9">0</AVal>
				<AVal Column="1" Row="10">0</AVal>
				<AVal Column="2" Row="10">0</AVal>
				<AVal Column="3" Row="10">0</AVal>
			</ArrayValues>
		</Length>
		<Length Name="vergrid_11">
			<Description><![CDATA["V. Grid Positioning from Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="3">
				<AVal Column="1" Row="1">0.193333333333</AVal>
				<AVal Column="2" Row="1">0.05</AVal>
				<AVal Column="3" Row="1">1.05</AVal>
			</ArrayValues>
		</Length>
		<Length Name="horgrid_11">
			<Description><![CDATA["H. Grid Positioning from Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="3">
				<AVal Column="1" Row="1">0.51</AVal>
				<AVal Column="2" Row="1">0.05</AVal>
				<AVal Column="3" Row="1">0.416666666667</AVal>
			</ArrayValues>
		</Length>
		<Length Name="vergrid2_11">
			<Description><![CDATA["V. Grid Positioning from Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="10" SecondDimension="3">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0</AVal>
				<AVal Column="3" Row="1">0</AVal>
				<AVal Column="1" Row="2">0</AVal>
				<AVal Column="2" Row="2">0</AVal>
				<AVal Column="3" Row="2">0</AVal>
				<AVal Column="1" Row="3">0</AVal>
				<AVal Column="2" Row="3">0</AVal>
				<AVal Column="3" Row="3">0</AVal>
				<AVal Column="1" Row="4">0</AVal>
				<AVal Column="2" Row="4">0</AVal>
				<AVal Column="3" Row="4">0</AVal>
				<AVal Column="1" Row="5">0</AVal>
				<AVal Column="2" Row="5">0</AVal>
				<AVal Column="3" Row="5">0</AVal>
				<AVal Column="1" Row="6">0</AVal>
				<AVal Column="2" Row="6">0</AVal>
				<AVal Column="3" Row="6">0</AVal>
				<AVal Column="1" Row="7">0</AVal>
				<AVal Column="2" Row="7">0</AVal>
				<AVal Column="3" Row="7">0</AVal>
				<AVal Column="1" Row="8">0</AVal>
				<AVal Column="2" Row="8">0</AVal>
				<AVal Column="3" Row="8">0</AVal>
				<AVal Column="1" Row="9">0</AVal>
				<AVal Column="2" Row="9">0</AVal>
				<AVal Column="3" Row="9">0</AVal>
				<AVal Column="1" Row="10">0</AVal>
				<AVal Column="2" Row="10">0</AVal>
				<AVal Column="3" Row="10">0</AVal>
			</ArrayValues>
		</Length>
		<Length Name="horgrid2_11">
			<Description><![CDATA["H. Grid Positioning from Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="10" SecondDimension="3">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0</AVal>
				<AVal Column="3" Row="1">0</AVal>
				<AVal Column="1" Row="2">0</AVal>
				<AVal Column="2" Row="2">0</AVal>
				<AVal Column="3" Row="2">0</AVal>
				<AVal Column="1" Row="3">0</AVal>
				<AVal Column="2" Row="3">0</AVal>
				<AVal Column="3" Row="3">0</AVal>
				<AVal Column="1" Row="4">0</AVal>
				<AVal Column="2" Row="4">0</AVal>
				<AVal Column="3" Row="4">0</AVal>
				<AVal Column="1" Row="5">0</AVal>
				<AVal Column="2" Row="5">0</AVal>
				<AVal Column="3" Row="5">0</AVal>
				<AVal Column="1" Row="6">0</AVal>
				<AVal Column="2" Row="6">0</AVal>
				<AVal Column="3" Row="6">0</AVal>
				<AVal Column="1" Row="7">0</AVal>
				<AVal Column="2" Row="7">0</AVal>
				<AVal Column="3" Row="7">0</AVal>
				<AVal Column="1" Row="8">0</AVal>
				<AVal Column="2" Row="8">0</AVal>
				<AVal Column="3" Row="8">0</AVal>
				<AVal Column="1" Row="9">0</AVal>
				<AVal Column="2" Row="9">0</AVal>
				<AVal Column="3" Row="9">0</AVal>
				<AVal Column="1" Row="10">0</AVal>
				<AVal Column="2" Row="10">0</AVal>
				<AVal Column="3" Row="10">0</AVal>
			</ArrayValues>
		</Length>
		<String Name="LouverStyle">
			<Description><![CDATA["Louvers Style"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="iLouverStyle">
			<Description><![CDATA["Louvers Style"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="gs_louver_thk">
			<Description><![CDATA["Louvers Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.01</Value>
		</Length>
		<Length Name="gs_louver_width">
			<Description><![CDATA["Louvers Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Angle Name="gs_louver_opening_angle">
			<Description><![CDATA["Opening Angle of Louvers"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>

		<!-- gs_door_transom_title: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_door_transom_title">
			<Description><![CDATA["Transom"]]></Description>
		</Title>
		<Length Name="gs_transom_height">
			<Description><![CDATA["Transom Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.3</Value>
		</Length>
		<Boolean Name="bThreshold">
			<Description><![CDATA["Threshold"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="iThresholdType">
			<Description><![CDATA["Threshold Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="gs_threshold_auto_changed">
			<Description><![CDATA["Threshold Changed Automatically"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- gs_sill: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_sill">
			<Description><![CDATA["Sill"]]></Description>
		</Title>
		<Boolean Name="gs_sill_outside">
			<Description><![CDATA["Sill - Door"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_sill_outside_sl_right">
			<Description><![CDATA["Sill - Sidelight 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_sill_outside_sl_left">
			<Description><![CDATA["Sill - Sidelight 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="iSillType">
			<Description><![CDATA["Type of the Sill"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="gs_sill_auto_changed">
			<Description><![CDATA["Sill Style Changed Automatically"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_sill_auto_changed_frstyle">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- gs_board: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_board">
			<Description><![CDATA["Board"]]></Description>
		</Title>
		<Boolean Name="gs_board_inside_sl_right">
			<Description><![CDATA["Board - Sidelight Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_board_inside_sl_left">
			<Description><![CDATA["Board - Sidelight"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_board_auto_changed_frstyle">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- gs_door_oversize: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_door_oversize">
			<Description><![CDATA["Opening Oversize"]]></Description>
		</Title>
		<Length Name="gs_left_oversize">
			<Description><![CDATA["Left Opening Oversize"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_right_oversize">
			<Description><![CDATA["Right Opening Oversize"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_upper_oversize">
			<Description><![CDATA["Upper Opening Oversize"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_lower_oversize">
			<Description><![CDATA["Lower Opening Oversize"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>

		<!-- gs_door_stack: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_door_stack">
			<Description><![CDATA["Ganging"]]></Description>
		</Title>
		<Boolean Name="gs_stack_right">
			<Description><![CDATA["Connection on Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_stack_left">
			<Description><![CDATA["Connection on Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_stack_top">
			<Description><![CDATA["Connection on the Top"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- gs_opening_params: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_opening_params">
			<Description><![CDATA["Opening"]]></Description>
		</Title>
		<String Name="gs_leaf_optype">
			<Description><![CDATA["Opening Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Распашная"]]></Value>
		</String>
		<Integer Name="gs_leaf_optype_m">
			<Description><![CDATA["Opening Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="gs_openleaf_set_to_edit">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="gs_opening_leaves">
			<Description><![CDATA["End Panel Opening Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_opening_leaves2">
			<Description><![CDATA["End Panel Opening Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bEnableSlidingOpLine2D">
			<Description><![CDATA["Enable Opening Line in 2D"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bSlidingOpLine2D">
			<Description><![CDATA["Opening Line in 2D"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Angle Name="gs_open_2D">
			<Description><![CDATA["Opening Angle in 2D"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>90</Value>
		</Angle>
		<Angle Name="gs_open_2D_2">
			<Description><![CDATA["End Panel Opening Angle in 2D on Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Angle Name="gs_open_2D_sl_right">
			<Description><![CDATA["2D Opening Angle Sidelight 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Angle Name="gs_open_2D_sl_left">
			<Description><![CDATA["2D Opening Angle Sidelight 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Angle Name="gs_open_3D">
			<Description><![CDATA["Opening Angle in 3D"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Angle Name="gs_open_3D_2">
			<Description><![CDATA["End Panel Opening Angle in 3D on Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Length Name="gs_open3D">
			<Description><![CDATA["Opening Width in 3D"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_open3D_2">
			<Description><![CDATA["Opening Width in 3D on Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_open2D">
			<Description><![CDATA["Opening Width in 2D"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_open2D_2">
			<Description><![CDATA["Opening Width in 2D on Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Angle Name="openingAngle_05">
			<Description><![CDATA["Opening Angle of Main Sash Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Angle Name="openingAngle2_05">
			<Description><![CDATA["Opening Angle of Main Sash Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Length Name="openingLength_05">
			<Description><![CDATA["Opening Distance 1 Main Sash Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="openingLength2_05">
			<Description><![CDATA["Opening Distance 2 Main Sash Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Angle Name="openingAngle_09">
			<Description><![CDATA["Opening Angle of Main Sash Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Angle Name="openingAngle2_09">
			<Description><![CDATA["Opening Angle of Main Sash Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Length Name="openingLength_09">
			<Description><![CDATA["Opening Distance 1 Main Sash Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="openingLength2_09">
			<Description><![CDATA["Opening Distance 2 Main Sash Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Angle Name="openingAngle_07">
			<Description><![CDATA["Opening Angle of Sidelight 1 Lower"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Angle Name="openingAngle2_07">
			<Description><![CDATA["Opening Angle of Sidelight 1 Lower"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Length Name="openingLength_07">
			<Description><![CDATA["Opening Distance 1 Sidelight 1 Lower"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="openingLength2_07">
			<Description><![CDATA["Opening Distance 2 Sidelight 1 Lower"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Angle Name="openingAngle_11">
			<Description><![CDATA["Opening Angle of Sidelight 2 Lower"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Angle Name="openingAngle2_11">
			<Description><![CDATA["Opening Angle of Sidelight 2 Lower"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Length Name="openingLength_11">
			<Description><![CDATA["Opening Distance 1 Sidelight 2 Lower"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="openingLength2_11">
			<Description><![CDATA["Opening Distance 2 Sidelight 2 Lower"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Angle Name="openingAngle_02">
			<Description><![CDATA["Opening Angle of Middle Transom"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Angle Name="openingAngle2_02">
			<Description><![CDATA["Opening Angle of Middle Transom"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Length Name="openingLength_02">
			<Description><![CDATA["Opening Distance 1 Middle Transom"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="openingLength2_02">
			<Description><![CDATA["Opening Distance 2 Middle Transom"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Angle Name="openingAngle_06">
			<Description><![CDATA["Opening Angle of Transom Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Angle Name="openingAngle2_06">
			<Description><![CDATA["Opening Angle of Transom Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Length Name="openingLength_06">
			<Description><![CDATA["Opening Distance 1 Transom Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="openingLength2_06">
			<Description><![CDATA["Opening Distance 2 Transom Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Angle Name="openingAngle_10">
			<Description><![CDATA["Opening Angle of Transom Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Angle Name="openingAngle2_10">
			<Description><![CDATA["Opening Angle of Transom Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Length Name="openingLength_10">
			<Description><![CDATA["Opening Distance 1 Transom Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="openingLength2_10">
			<Description><![CDATA["Opening Distance 2 Transom Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<LineType Name="gs_swing_pen_line">
			<Description><![CDATA["Double Acting Line Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>4</Value>
		</LineType>
		<Boolean Name="bOverride_MVO_2D">
			<Description><![CDATA["Override MVO for 2D Symbolic Display"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<LineType Name="or_swingLineType">
			<Description><![CDATA["Opening Line Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</LineType>
		<String Name="or_SwingType">
			<Description><![CDATA["Opening Line Shape"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Криволинейная"]]></Value>
		</String>
		<Integer Name="or_iSwingType">
			<Description><![CDATA["Opening Line Shape"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="or_SlidingType">
			<Description><![CDATA["Opening Line Shape"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Нет"]]></Value>
		</String>
		<Integer Name="or_iSlidingType">
			<Description><![CDATA["Opening Line Shape"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Boolean Name="bOverride_MVO_3D">
			<Description><![CDATA["Override MVO for Door 3D Projections"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="or_bOplines3d">
			<Description><![CDATA["Show Opening Line"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<String Name="or_opLineType3dIn">
			<Description><![CDATA["Line Type Opening Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Штриховая"]]></Value>
		</String>
		<Integer Name="or_iOpLineType3dIn">
			<Description><![CDATA["Line Type Opening Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="or_opLineType3dOut">
			<Description><![CDATA["Line Type Opposite Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Сплошная Линия"]]></Value>
		</String>
		<Integer Name="or_iOpLineType3dOut">
			<Description><![CDATA["Line Type Opposite Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<String Name="or_oplineStyle">
			<Description><![CDATA["Line Orientation"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Ручка"]]></Value>
		</String>
		<Integer Name="or_iOplineStyle">
			<Description><![CDATA["Line Orientation"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<PenColor Name="or_opLinePen">
			<Description><![CDATA["Opening Line Pen in 2D/3D"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3</Value>
		</PenColor>
		<Integer Name="or_iOpLinePen">
			<Description><![CDATA["Opening Line Pen in 2D/3D"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>3</Value>
		</Integer>
		<Boolean Name="bOverride_MVO_win_2D">
			<Description><![CDATA["Override MVO for Sidelight 2D Symbolic Display"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<LineType Name="or_winSwingLineType">
			<Description><![CDATA["Opening Line Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</LineType>
		<String Name="or_winSwingType">
			<Description><![CDATA["Opening Line Shape"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="or_iWinSwingType">
			<Description><![CDATA["Opening Line Shape"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Boolean Name="bOverride_MVO_win_3D">
			<Description><![CDATA["Override MVO for Sidelight/Transom 3D Projections"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="or_bWinOplines3d">
			<Description><![CDATA["Show Opening Line"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<String Name="or_winOpLineType3dIn">
			<Description><![CDATA["Line Type Opening Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Штриховая"]]></Value>
		</String>
		<Integer Name="or_iWinOpLineType3dIn">
			<Description><![CDATA["Line Type Opening Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="or_winOpLineType3dOut">
			<Description><![CDATA["Line Type Opposite Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Сплошная Линия"]]></Value>
		</String>
		<Integer Name="or_iWinOpLineType3dOut">
			<Description><![CDATA["Line Type Opposite Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<String Name="or_winOplineStyle">
			<Description><![CDATA["Line Orientation"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Ручка"]]></Value>
		</String>
		<Integer Name="or_iWinOplineStyle">
			<Description><![CDATA["Line Orientation"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<PenColor Name="or_winOpLinePen">
			<Description><![CDATA["Opening Line Pen in 2D/3D"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3</Value>
		</PenColor>
		<Integer Name="or_iWinOpLinePen">
			<Description><![CDATA["Opening Line Pen in 2D/3D"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>3</Value>
		</Integer>
		<PenColor Name="gs_opLinePen">
			<Description><![CDATA["Opening Line Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</PenColor>
		<Integer Name="gs_iSwingType">
			<Description><![CDATA["Swing Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="gs_iSlidingType">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<LineType Name="gs_swingLineType">
			<Description><![CDATA["Swing Line Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>4</Value>
		</LineType>
		<Boolean Name="bOplines3d">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<LineType Name="opLineType3dIn">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</LineType>
		<LineType Name="opLineType3dOut">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</LineType>
		<Integer Name="gs_opline_style_m">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>

		<!-- bVentilationProfile: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Boolean Name="bVentilationProfile">
			<Description><![CDATA["Natural Ventilation"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="iVentilationProfileType">
			<Description><![CDATA["Natural Ventilation Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="bEnableVentilationProfile">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="gs_VentilationProfileTypeEnable">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Length Name="VentilationProfileHeight">
			<Description><![CDATA["Profile Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.065</Value>
		</Length>
		<Length Name="VentilationProfileThickness">
			<Description><![CDATA["Profile Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.11</Value>
		</Length>

		<!-- gs_select_sash_vent_profile: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_select_sash_vent_profile">
			<Description><![CDATA["Select Sash with Ventilation Profile"]]></Description>
		</Title>
		<Boolean Name="isVentilationProfileInSash_01">
			<Description><![CDATA["Main Sash Middle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="isVentilationProfileInSash_05">
			<Description><![CDATA["Main Sash Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="isVentilationProfileInSash_09">
			<Description><![CDATA["Main Sash Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="isVentilationProfileInSash_03">
			<Description><![CDATA["Lower Sash Middle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="isVentilationProfileInSash_07">
			<Description><![CDATA["Lower Sash Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="isVentilationProfileInSash_11">
			<Description><![CDATA["Lower Sash Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="isVentilationProfileInSash_02">
			<Description><![CDATA["Transom Sash Middle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="isVentilationProfileInSash_06">
			<Description><![CDATA["Transom Sash Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="isVentilationProfileInSash_10">
			<Description><![CDATA["Transom Sash Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="isVentilationProfileInSash_04">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="isVentilationProfileInSash_08">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- gs_2D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_2D_representation">
			<Description><![CDATA["2D and Section Representation"]]></Description>
		</Title>
		<PenColor Name="gs_pen_2D">
			<Description><![CDATA["Symbol Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3</Value>
		</PenColor>
		<PenColor Name="gs_frame_pen_cont">
			<Description><![CDATA["Frame Contour Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>23</Value>
		</PenColor>
		<PenColor Name="gs_glass_pen_cont">
			<Description><![CDATA["Glass Contour Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>43</Value>
		</PenColor>
		<PenColor Name="gs_leaf_pen_2D">
			<Description><![CDATA["Leaf Contour Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3</Value>
		</PenColor>
		<Boolean Name="gs_bFills">
			<Description><![CDATA["Use Fills"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<FillPattern Name="gs_fillFr">
			<Description><![CDATA["Frame Fill Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_penFr_fg">
			<Description><![CDATA["Frame Fill Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>103</Value>
		</PenColor>
		<PenColor Name="gs_penFr_bg">
			<Description><![CDATA["Frame Fill Background Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<FillPattern Name="gs_fillLeaf">
			<Description><![CDATA["Leaf Fill Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>16</Value>
		</FillPattern>
		<PenColor Name="gs_penLeaf_fg">
			<Description><![CDATA["Leaf Fill Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_penLeaf_bg">
			<Description><![CDATA["Leaf Fill Background Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<FillPattern Name="gs_fillAirtight">
			<Description><![CDATA["Airtight Symbol Fill Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>64</Value>
		</FillPattern>
		<PenColor Name="gs_penAirtight_fg">
			<Description><![CDATA["Airtight Symbol Fill Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</PenColor>
		<PenColor Name="gs_penAirtight_bg">
			<Description><![CDATA["Airtight Symbol Fill Background Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</PenColor>
		<FillPattern Name="gs_wallhole_fill">
			<Description><![CDATA["Door Plan Symbol Fill Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_wallhole_pen_fg">
			<Description><![CDATA["Door Plan Symbol Fill Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_wallhole_pen_bg">
			<Description><![CDATA["Door Plan Symbol Fill Background Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</PenColor>
		<FillPattern Name="gs_FillSdl">
			<Description><![CDATA["Frame Uncut Fill Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_penSdl_fg">
			<Description><![CDATA["Frame Uncut Fill Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_penSdl_bg">
			<Description><![CDATA["Frame Uncut Fill Background Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<FillPattern Name="gs_gsect">
			<Description><![CDATA["Glass Section Fill"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>28</Value>
		</FillPattern>
		<PenColor Name="gs_penGlass_fg">
			<Description><![CDATA["Glass Section Fill Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3</Value>
		</PenColor>
		<PenColor Name="gs_penGlass_bg">
			<Description><![CDATA["Glass Section Fill Background Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</PenColor>
		<FillPattern Name="gs_ventProfile_fill">
			<Description><![CDATA["Ventilation Section Fill Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>16</Value>
		</FillPattern>
		<PenColor Name="gs_ventProfile_pen_fg">
			<Description><![CDATA["Ventilation Section Fill Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_ventProfile_pen_bg">
			<Description><![CDATA["Ventilation Section Fill Background Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>

		<!-- gs_3D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_3D_representation">
			<Description><![CDATA["3D Representation"]]></Description>
		</Title>
		<String Name="gs_SashText_typ">
			<Description><![CDATA["Frame Element Joinery"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Соединение Встык"]]></Value>
		</String>
		<Integer Name="gs_SashText_typ_num">
			<Description><![CDATA["Frame Element Joinery"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<PenColor Name="gs_frame_pen">
			<Description><![CDATA["Frame Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3</Value>
		</PenColor>
		<PenColor Name="gs_leaf_pen">
			<Description><![CDATA["Leaf Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3</Value>
		</PenColor>
		<PenColor Name="gs_glass_pen">
			<Description><![CDATA["Glass Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>43</Value>
		</PenColor>
		<PenColor Name="gs_leaf_glass_pen">
			<Description><![CDATA["Leaf Glass Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>43</Value>
		</PenColor>
		<Integer Name="res">
			<Description><![CDATA["Curve Resolution"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>32</Value>
		</Integer>
		<Boolean Name="gs_shadow">
			<Description><![CDATA["Shadow"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>

		<!-- gs_door_material: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_door_material">
			<Description><![CDATA["Surfaces"]]></Description>
		</Title>
		<Boolean Name="bLinkSurfacesFrameSash">
			<Description><![CDATA["Uniform Surfaces"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="stored_material">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="4" SecondDimension="14">
				<AVal Column="1" Row="1">15</AVal>
				<AVal Column="2" Row="1">15</AVal>
				<AVal Column="3" Row="1">15</AVal>
				<AVal Column="4" Row="1">15</AVal>
				<AVal Column="5" Row="1">15</AVal>
				<AVal Column="6" Row="1">15</AVal>
				<AVal Column="7" Row="1">15</AVal>
				<AVal Column="8" Row="1">15</AVal>
				<AVal Column="9" Row="1">15</AVal>
				<AVal Column="10" Row="1">15</AVal>
				<AVal Column="11" Row="1">15</AVal>
				<AVal Column="12" Row="1">15</AVal>
				<AVal Column="13" Row="1">15</AVal>
				<AVal Column="14" Row="1">15</AVal>
				<AVal Column="1" Row="2">0</AVal>
				<AVal Column="2" Row="2">0</AVal>
				<AVal Column="3" Row="2">0</AVal>
				<AVal Column="4" Row="2">0</AVal>
				<AVal Column="5" Row="2">0</AVal>
				<AVal Column="6" Row="2">0</AVal>
				<AVal Column="7" Row="2">0</AVal>
				<AVal Column="8" Row="2">0</AVal>
				<AVal Column="9" Row="2">0</AVal>
				<AVal Column="10" Row="2">0</AVal>
				<AVal Column="11" Row="2">0</AVal>
				<AVal Column="12" Row="2">0</AVal>
				<AVal Column="13" Row="2">0</AVal>
				<AVal Column="14" Row="2">0</AVal>
				<AVal Column="1" Row="3">-9999</AVal>
				<AVal Column="2" Row="3">0</AVal>
				<AVal Column="3" Row="3">0</AVal>
				<AVal Column="4" Row="3">0</AVal>
				<AVal Column="5" Row="3">0</AVal>
				<AVal Column="6" Row="3">0</AVal>
				<AVal Column="7" Row="3">0</AVal>
				<AVal Column="8" Row="3">0</AVal>
				<AVal Column="9" Row="3">0</AVal>
				<AVal Column="10" Row="3">0</AVal>
				<AVal Column="11" Row="3">0</AVal>
				<AVal Column="12" Row="3">0</AVal>
				<AVal Column="13" Row="3">0</AVal>
				<AVal Column="14" Row="3">0</AVal>
				<AVal Column="1" Row="4">0</AVal>
				<AVal Column="2" Row="4">0</AVal>
				<AVal Column="3" Row="4">0</AVal>
				<AVal Column="4" Row="4">0</AVal>
				<AVal Column="5" Row="4">0</AVal>
				<AVal Column="6" Row="4">0</AVal>
				<AVal Column="7" Row="4">0</AVal>
				<AVal Column="8" Row="4">0</AVal>
				<AVal Column="9" Row="4">0</AVal>
				<AVal Column="10" Row="4">0</AVal>
				<AVal Column="11" Row="4">0</AVal>
				<AVal Column="12" Row="4">0</AVal>
				<AVal Column="13" Row="4">0</AVal>
				<AVal Column="14" Row="4">0</AVal>
			</ArrayValues>
		</Integer>
		<Material Name="gs_frame_mat">
			<Description><![CDATA["Frame Surface Outside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="gs_frame_mat2">
			<Description><![CDATA["Frame Surface Inside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="gs_leaf_mat">
			<Description><![CDATA["Leaf Surface Outside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="gs_leaf_matin">
			<Description><![CDATA["Leaf Surface Inside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="gs_leaf_mat2">
			<Description><![CDATA["Leaf Surface 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="gs_leaf_mat3">
			<Description><![CDATA["Leaf Surface 3"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="gs_transom_mat">
			<Description><![CDATA["Transom Outside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="gs_transom_matin">
			<Description><![CDATA["Transom Inside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="gs_sidelight1_mat">
			<Description><![CDATA["Sidelight 1 Outside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="gs_sidelight1_matin">
			<Description><![CDATA["Sidelight 1 Inside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="gs_sidelight2_mat">
			<Description><![CDATA["Sidelight 2 Outside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="gs_sidelight2_matin">
			<Description><![CDATA["Sidelight 2 Inside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="gs_lock_mat">
			<Description><![CDATA["Lock Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>10</Value>
		</Material>
		<Material Name="gs_grill_mat">
			<Description><![CDATA["Grid Surface Outside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="gs_grill_mat2">
			<Description><![CDATA["Grid Surface Inside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="gs_leaf_grill_mat">
			<Description><![CDATA["Grid Surface Outside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="gs_leaf_grill_mat2">
			<Description><![CDATA["Grid Surface Inside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="gs_panel_mat">
			<Description><![CDATA["Solid Panel Surface Outside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="gs_panel_mat2">
			<Description><![CDATA["Solid Panel Surface Inside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="gs_glass_mat">
			<Description><![CDATA["Glass Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>24</Value>
		</Material>
		<Material Name="gs_leaf_glass_mat">
			<Description><![CDATA["Leaf Glass Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>24</Value>
		</Material>
		<Material Name="gs_rail_mat">
			<Description><![CDATA["Rail Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>40</Value>
		</Material>
		<Material Name="gs_louver_mat">
			<Description><![CDATA["Louver Surface Outside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="gs_louver_matin">
			<Description><![CDATA["Louver Surface Inside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Material>
		<Material Name="gs_ventSashLouver_mat">
			<Description><![CDATA["Louvers Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="gs_kp_mat">
			<Description><![CDATA["Kick Plate Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>45</Value>
		</Material>
		<Material Name="gs_handle_mat">
			<Description><![CDATA["Handle Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>11</Value>
		</Material>
		<Material Name="gs_handle_ac_mat">
			<Description><![CDATA["Handle Accessories Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>40</Value>
		</Material>
		<Material Name="matKickBoardOut">
			<Description><![CDATA["Kick Board Surface Outside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>11</Value>
		</Material>
		<Material Name="matKickBoardIn">
			<Description><![CDATA["Kick Board Surface Inside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>11</Value>
		</Material>
		<Material Name="gs_ventProfile_mat">
			<Description><![CDATA["Ventilation Profile Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>45</Value>
		</Material>
		<Length Name="gs_unit_extra_left">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="gs_unit_extra_right">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<Integer Name="gs_ui_current_page">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="gs_ui_sub_tabpage_closure">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="gs_hor_d">
			<Description><![CDATA["Horiz. Grid Distance"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="3" SecondDimension="0">
				<AVal Row="1">0.591333333333</AVal>
				<AVal Row="2">1.18266666667</AVal>
				<AVal Row="3">1.774</AVal>
			</ArrayValues>
		</Length>
		<Length Name="gs_ver_d">
			<Description><![CDATA["Vert. Grid Distance"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="6" SecondDimension="0">
				<AVal Row="1">0.0643333333333</AVal>
				<AVal Row="2">0.128666666667</AVal>
				<AVal Row="3">0.193</AVal>
				<AVal Row="4">0.257333333333</AVal>
				<AVal Row="5">0.321666666667</AVal>
				<AVal Row="6">0.386</AVal>
			</ArrayValues>
		</Length>
		<Length Name="gs_hor_d2">
			<Description><![CDATA["Horiz. Grid Distance"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="0">
				<AVal Row="1">0</AVal>
			</ArrayValues>
		</Length>
		<Length Name="gs_ver_d2">
			<Description><![CDATA["Vert. Grid Distance"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="0">
				<AVal Row="1">0</AVal>
			</ArrayValues>
		</Length>
		<Length Name="gs_hor_d4">
			<Description><![CDATA["Horiz. Grid Distance"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="0">
				<AVal Row="1">0</AVal>
			</ArrayValues>
		</Length>
		<Length Name="gs_ver_d4">
			<Description><![CDATA["Vert. Grid Distance"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="2" SecondDimension="0">
				<AVal Row="1">0</AVal>
				<AVal Row="2">0</AVal>
			</ArrayValues>
		</Length>
		<Length Name="gs_fthk">
			<Description><![CDATA["Real Frame Thickness"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Boolean Name="bEnableShowHandle">
			<Description><![CDATA["Enable Show Handle on Symbol"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bEnableShowGlassPanel">
			<Description><![CDATA["Enable Show as Glass Panel on Symbol"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bEnableShowChiSpringSymbol">
			<Description><![CDATA["Enable Show Chinese Spring Door Symbol"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bEnableShowAirtightPanel">
			<Description><![CDATA["Enable Show Symbol as Airtight Panel"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bSimpleLeafin50">
			<Description><![CDATA["Simple Leaf in 1:50"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bEnableLeafRebateDepth3D">
			<Description><![CDATA["Enable Leaf Rebate in 3D"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bCHIVer">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bEnableLeafUnderCut">
			<Description><![CDATA["Enable LEaf Undercut"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bLineShapeArrowNED">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bEnableNEDFrameStyles">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="isRebateWidth">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Integer Name="iRevealType">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="gs_reveal_auto_changed_frstyle">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_trim_inside">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_trim_outside">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_casing_auto_changed_frstyle">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<RealNum Name="gs_list_freeAirPerformance">
			<Description><![CDATA["Free Air Performance (mm2/l/m)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<RealNum Name="gs_list_glassarea_tmp">
			<Description><![CDATA["Total Glazed Area"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<Boolean Name="gs_list_glassarea_override">
			<Description><![CDATA["Override Glazed Area"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<RealNum Name="gs_list_glassarea">
			<Description><![CDATA["Total Glazed Area"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<Integer Name="gs_list_orientationDef_m">
			<Description><![CDATA["Door Orientation Definition"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<String Name="ac_OpeningSide">
			<Description><![CDATA["Door Orientation"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_doorleafwidths">
			<Description><![CDATA["Door Leaf Widths"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="ifc_optypestr">
			<Description><![CDATA["IFC Operation"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value><![CDATA["Не определена"]]></Value>
		</String>
		<Integer Name="ifc_optype">
			<Description><![CDATA["IFC Operation"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Length Name="ifc_LiningDepth">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ifc_LiningThickness">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ifc_LiningOffset">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ifc_CasingDepth">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ifc_CasingThickness">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ifc_ThresholdDepth">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ifc_ThresholdThickness">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ifc_ThresholdOffset">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ifc_TransomOffset">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ifc_TransomThickness">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ifc_DoorPanel">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="4">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0</AVal>
				<AVal Column="3" Row="1">0</AVal>
				<AVal Column="4" Row="1">0</AVal>
			</ArrayValues>
		</Length>
		<String Name="stOpeningSide">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="2" SecondDimension="0">
				<AVal Row="1"><![CDATA["Л"]]></AVal>
				<AVal Row="2"><![CDATA["П"]]></AVal>
			</ArrayValues>
		</String>
		<Integer Name="CasementIDArray">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="3" SecondDimension="10">
				<AVal Column="1" Row="1">10</AVal>
				<AVal Column="2" Row="1">2</AVal>
				<AVal Column="3" Row="1">6</AVal>
				<AVal Column="4" Row="1">0</AVal>
				<AVal Column="5" Row="1">0</AVal>
				<AVal Column="6" Row="1">0</AVal>
				<AVal Column="7" Row="1">0</AVal>
				<AVal Column="8" Row="1">0</AVal>
				<AVal Column="9" Row="1">0</AVal>
				<AVal Column="10" Row="1">0</AVal>
				<AVal Column="1" Row="2">9</AVal>
				<AVal Column="2" Row="2">1</AVal>
				<AVal Column="3" Row="2">5</AVal>
				<AVal Column="4" Row="2">0</AVal>
				<AVal Column="5" Row="2">0</AVal>
				<AVal Column="6" Row="2">0</AVal>
				<AVal Column="7" Row="2">0</AVal>
				<AVal Column="8" Row="2">0</AVal>
				<AVal Column="9" Row="2">0</AVal>
				<AVal Column="10" Row="2">0</AVal>
				<AVal Column="1" Row="3">11</AVal>
				<AVal Column="2" Row="3">3</AVal>
				<AVal Column="3" Row="3">7</AVal>
				<AVal Column="4" Row="3">0</AVal>
				<AVal Column="5" Row="3">0</AVal>
				<AVal Column="6" Row="3">0</AVal>
				<AVal Column="7" Row="3">0</AVal>
				<AVal Column="8" Row="3">0</AVal>
				<AVal Column="9" Row="3">0</AVal>
				<AVal Column="10" Row="3">0</AVal>
			</ArrayValues>
		</Integer>
	</Parameters>
</ParamSection>

<Copyright SectVersion="1" SectionFlags="0" SubIdent="0">
	<Author>GRAPHISOFT</Author>
	<License>
		<Type>CC BY-ND</Type>
		<Version>3.0</Version>
	</License>
</Copyright>

<Keywords SectVersion="1" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Keywords>

</Symbol>
