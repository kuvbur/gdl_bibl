<?xml version="1.0" encoding="UTF-8"?>
<Symbol IsArchivable="true" IsPlaceable="false" MainGUID="EC696F24-8561-4C3A-99E1-2CBF421B0781" MigrationValue="Normal" Owner="1196638531" Signature="1465080141" Version="43">
<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_3D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
! Contact person: <SzL, NJ>


gs_fillFr		= gs_bFills * gs_fillFr
gs_penFr_fg		= gs_bFills * gs_penFr_fg
gs_penFr_bg		= gs_bFills * gs_penFr_bg

gs_fillSash		= gs_bFills * gs_fillSash
gs_penSash_fg	= gs_bFills * gs_penSash_fg
gs_penSash_bg	= gs_bFills * gs_penSash_bg

if gs_frame_pen_cont < 1	then gs_frame_pen_cont = SYMB_SECT_PEN
if gs_fillFr < 1			then gs_fillFr = SYMB_FILL
if gs_penFr_bg < 1			then gs_penFr_bg = SYMB_FBGD_PEN
if gs_penFr_fg < 1			then gs_penFr_fg = SYMB_FILL_PEN


! =============================================================================
! Hotspot Editing of Frame
! =============================================================================

if	iWindowType = WIN_W2			|\
	iWindowType = WIN_WSingleHung2	|\
	iWindowType = WIN_WDoubleHung2	|\
	iWindowType = WIN_WDoubleSash	|\
	iWindowType = WIN_W2Sidelight 	then

	unID=1300
	if gs_iPanesConfig = PANESCONFIG_SYMM | gs_iPanesConfig = PANESCONFIG_ASYMM then
		hotspot ac_unit_width/2,			 0, 0, unID,	gs_SLight_w, 1+128
		hotspot ac_unit_width/2+1,			 0, 0, unID+1,	gs_SLight_w, 3
		hotspot ac_unit_width/2-gs_SLight_w, 0, 0, unID+2,	gs_SLight_w, 2
		unID=unID+3
	else
		hotspot ac_unit_width/2-gs_SLight_w, 0, 0, unID
	endif
endif

if	iWindowType = WIN_W3				|\
	iWindowType = WIN_WSingleHung3		|\
	iWindowType = WIN_WDoubleHung3		|\
	iWindowType = WIN_W32Sidelights1	|\
	iWindowType = WIN_W32Sidelights2	then

	unID=1300
	if gs_iPanesConfig = PANESCONFIG_SYMM | gs_iPanesConfig = PANESCONFIG_ASYMM then
		hotspot ac_unit_width/2,			 0, 0, unID,	gs_SLight_w, 1+128
		hotspot ac_unit_width/2+1,			 0, 0, unID+1,	gs_SLight_w, 3
		hotspot ac_unit_width/2-gs_SLight_w, 0, 0, unID+2,	gs_SLight_w, 2
		unID=unID+3
	else
		hotspot ac_unit_width/2-gs_SLight_w, 0, 0, unID
	endif

	unID=1310
	if gs_iPanesConfig = PANESCONFIG_SYMM | gs_iPanesConfig = PANESCONFIG_ASYMM then
		hotspot ac_unit_width/2,			 ac_unit_height, 0, unID,	gs_SLight_w, 1+128
		hotspot ac_unit_width/2+1,			 ac_unit_height, 0, unID+1,	gs_SLight_w, 3
		hotspot ac_unit_width/2-gs_SLight_w, ac_unit_height, 0, unID+2,	gs_SLight_w, 2
		unID=unID+3
	else
		hotspot ac_unit_width/2-gs_SLight_w, ac_unit_height, 0, unID
	endif

	unID=1320
	if gs_iPanesConfig = PANESCONFIG_SYMM | gs_iPanesConfig = PANESCONFIG_ASYMM then
		if gs_iPanesConfig = PANESCONFIG_SYMM then
			hotspot -ac_unit_width/2,				0, 0, unID,		gs_SLight_w, 1+128
			hotspot -ac_unit_width/2-1,				0, 0, unID+1,	gs_SLight_w, 3
			hotspot -ac_unit_width/2+gs_SLight_w,	0, 0, unID+2,	gs_SLight_w, 2
		else
			hotspot ac_unit_width/2-gs_SLight_w,				0, 0, unID,		gs_MidPane_w, 1+128
			hotspot ac_unit_width/2-gs_SLight_w+1,				0, 0, unID+1,	gs_MidPane_w, 3
			hotspot ac_unit_width/2-gs_SLight_w-gs_MidPane_w,	0, 0, unID+2,	gs_MidPane_w, 2
		endif
		unID=unID+3
	else
		hotspot -ac_unit_width/2+gs_LeftSLight_w, 0, 0, unID
	endif

	unID=1330
	if gs_iPanesConfig = PANESCONFIG_SYMM | gs_iPanesConfig = PANESCONFIG_ASYMM then
		if gs_iPanesConfig = PANESCONFIG_SYMM then
			hotspot -ac_unit_width/2,				ac_unit_height, 0, unID,		gs_SLight_w, 1+128
			hotspot -ac_unit_width/2-1,				ac_unit_height, 0, unID+1,	gs_SLight_w, 3
			hotspot -ac_unit_width/2+gs_SLight_w,	ac_unit_height, 0, unID+2,	gs_SLight_w, 2
		else
			hotspot ac_unit_width/2-gs_SLight_w,				ac_unit_height, 0, unID,		gs_MidPane_w, 1+128
			hotspot ac_unit_width/2-gs_SLight_w+1,				ac_unit_height, 0, unID+1,	gs_MidPane_w, 3
			hotspot ac_unit_width/2-gs_SLight_w-gs_MidPane_w,	ac_unit_height, 0, unID+2,	gs_MidPane_w, 2
		endif
		unID=unID+3
	else
		hotspot -ac_unit_width/2+gs_LeftSLight_w, ac_unit_height, 0, unID
	endif
endif


! =============================================================================
! Hotspot Editing of Transom
! =============================================================================

if iWindowType = WIN_WDoubleSash then
	if gs_UTrans then
		unID=1340
		if gs_iPanesConfig = PANESCONFIG_SYMM | gs_iPanesConfig = PANESCONFIG_ASYMM then
			hotspot ac_unit_width/2-gs_SLight_w,  0,			0, unID,	gs_UTrans_h, 1+128
			hotspot ac_unit_width/2-gs_SLight_w, -1,			0, unID+1,	gs_UTrans_h, 3
			hotspot ac_unit_width/2-gs_SLight_w,  gs_UTrans_h,	0, unID+2,	gs_UTrans_h, 2
			unID=unID+3
		else
			hotspot ac_unit_width/2-gs_SLight_w, gs_UTrans_h, 0, unID
		endif
	endif

	if gs_LTrans then
		unID=1360
		if gs_iPanesConfig = PANESCONFIG_SYMM | gs_iPanesConfig = PANESCONFIG_ASYMM then
			hotspot ac_unit_width/2-gs_SLight_w,  0,			0, unID,	gs_LTrans_h, 1+128
			hotspot ac_unit_width/2-gs_SLight_w, -1,			0, unID+1,	gs_LTrans_h, 3
			hotspot ac_unit_width/2-gs_SLight_w,  gs_LTrans_h,	0, unID+2,	gs_LTrans_h, 2
			unID=unID+3
		else
			hotspot ac_unit_width/2-gs_SLight_w, gs_LTrans_h, 0, unID
		endif
	endif
endif

if	iWindowType = WIN_W3				|\
	iWindowType = WIN_WSingleHung3		|\
	iWindowType = WIN_WDoubleHung3		|\
	iWindowType = WIN_W32Sidelights1	|\
	iWindowType = WIN_W32Sidelights2	then

	if gs_UTrans then
		unID=1340
		if gs_iPanesConfig = PANESCONFIG_SYMM | gs_iPanesConfig = PANESCONFIG_ASYMM then
			hotspot ac_unit_width/2-gs_SLight_w,  0,			0, unID,	gs_UTrans_h, 1+128
			hotspot ac_unit_width/2-gs_SLight_w, -1,			0, unID+1,	gs_UTrans_h, 3
			hotspot ac_unit_width/2-gs_SLight_w,  gs_UTrans_h,	0, unID+2,	gs_UTrans_h, 2
			unID=unID+3
		else
			hotspot ac_unit_width/2-gs_SLight_w, gs_UTrans_h, 0, unID
		endif

		unID=1350
		if gs_iPanesConfig = PANESCONFIG_SYMM | gs_iPanesConfig = PANESCONFIG_ASYMM then
			hotspot -ac_unit_width/2+gs_LeftSLight_w,  0,			0, unID,	gs_UTrans_h, 1+128
			hotspot -ac_unit_width/2+gs_LeftSLight_w, -1,			0, unID+1,	gs_UTrans_h, 3
			hotspot -ac_unit_width/2+gs_LeftSLight_w,  gs_UTrans_h,	0, unID+2,	gs_UTrans_h, 2
			unID=unID+3
		else
			hotspot -ac_unit_width/2+gs_LeftSLight_w, gs_UTrans_h, 0, unID
		endif
	endif

	if gs_LTrans then
		unID=1360
		if gs_iPanesConfig = PANESCONFIG_SYMM | gs_iPanesConfig = PANESCONFIG_ASYMM then
			hotspot ac_unit_width/2-gs_SLight_w,  0,			0, unID,	gs_LTrans_h, 1+128
			hotspot ac_unit_width/2-gs_SLight_w, -1,			0, unID+1,	gs_LTrans_h, 3
			hotspot ac_unit_width/2-gs_SLight_w,  gs_LTrans_h,	0, unID+2,	gs_LTrans_h, 2
			unID=unID+3
		else
			hotspot ac_unit_width/2-gs_SLight_w, gs_LTrans_h, 0, unID
		endif

		unID=1370
		if gs_iPanesConfig = PANESCONFIG_SYMM | gs_iPanesConfig = PANESCONFIG_ASYMM then
			hotspot -ac_unit_width/2+gs_LeftSLight_w,  0,			0, unID,	gs_LTrans_h, 1+128
			hotspot -ac_unit_width/2+gs_LeftSLight_w, -1,			0, unID+1,	gs_LTrans_h, 3
			hotspot -ac_unit_width/2+gs_LeftSLight_w,  gs_LTrans_h,	0, unID+2,	gs_LTrans_h, 2
			unID=unID+3
		else
			hotspot -ac_unit_width/2+gs_LeftSLight_w, gs_LTrans_h, 0, unID
		endif
	endif
endif


! =============================================================================
! Draw Ventilation Profile
! =============================================================================

isVentilationOverFrame = (bEnableVentilationProfile & bVentilationProfile & (iVentilationProfileType = VENTPROFILE_OVER_FRAME))

if isVentilationOverFrame then
	addy ac_unit_height
	if not(WIDO_REVEAL_SIDE) then
		addz gs_frame_thk
		mulz -1
	endif
	call "Ventilation_profile" parameters	A							= ac_unit_width,
											VentilationProfileThickness	= VentilationProfileThickness,
											VentilationProfileHeight	= VentilationProfileHeight,
											gs_frame_thk				= gs_frame_thk,
											bVentilationProfile			= bVentilationProfile,
											iVentilationProfileType		= iVentilationProfileType,
											gs_ventProfile_pen			= gs_frame_pen,
											gs_ventProfile_pen_cont		= gs_frame_pen_cont,
											gs_ventProfile_fill			= gs_ventProfile_fill,
											gs_ventProfile_pen_bg		= gs_ventProfile_pen_bg,
											gs_ventProfile_pen_fg		= gs_ventProfile_pen_fg,
											gs_ventProfile_mat			= gs_ventProfile_mat
	if not(WIDO_REVEAL_SIDE) then del 2

	pen gs_frame_pen
	cutpolya 5, 2, 0,
		-ac_unit_width/2, 0, 11+3*(WIDO_REVEAL_SIDE),
		-ac_unit_width/2, VentilationProfileHeight, 11+3*(WIDO_REVEAL_SIDE),
		ac_unit_width/2, VentilationProfileHeight, 11+3*(WIDO_REVEAL_SIDE),
		ac_unit_width/2, 0, 11+3*(WIDO_REVEAL_SIDE),
		-ac_unit_width/2, 0, -1
	del 1
endif


! =============================================================================
! Draw Frame
! =============================================================================

if lod3D = 5 then	! Chinese
	fr_sect_fill_type	= gs_fillShCover
	fr_sect_fill_fg		= gs_penShCov_fg
	fr_sect_fill_bg		= gs_penShCov_bg
else
	fr_sect_fill_type	= gs_fillFr
	fr_sect_fill_fg		= gs_penFr_fg
	fr_sect_fill_bg		= gs_penFr_bg
endif

if iWindowClass = WINCLASS_MULTISASH then
	unID = 1300

	if iWindowType = WIN_MultisashHorizontal then
		_offsetX = -ac_unit_width/2

		for iModule = 1 to _RepeatNum
			if gs_repeat_modules then
				if iModule = 1 then
					_ModuleLength				= gs_axis_distance + gs_frame_offset_left
					_gs_frame_width_left		= gs_frame_width_left
					_gs_frame_width				= MullionWidth/2
					_gs_frame_ovhg_left_out		= gs_frame_ovhg_left_out
					_gs_frame_ovhg_right_out	= 0
					_gs_frame_ovhg_left_in		= gs_frame_ovhg_left_in
					_gs_frame_ovhg_right_in		= 0
					_gs_stack_left				= gs_stack_left
					_gs_stack_right				= 1
					bLeftFrame					= not(bLeftGlassCorner)
					bRightFrame					= 1
				else
					if iModule = _RepeatNum then
						_ModuleLength				= gs_axis_distance + gs_frame_offset_right
						_gs_frame_width_left		= MullionWidth/2
						_gs_frame_width				= gs_frame_width
						_gs_frame_ovhg_left_out		= 0
						_gs_frame_ovhg_right_out	= gs_frame_ovhg_right_out
						_gs_frame_ovhg_left_in		= 0
						_gs_frame_ovhg_right_in		= gs_frame_ovhg_right_in
						_gs_stack_left				= 1
						_gs_stack_right				= gs_stack_right
						bLeftFrame					= 1
						bRightFrame					= not(bRightGlassCorner)
					else
						_ModuleLength = gs_axis_distance
						_gs_frame_width				= MullionWidth/2
						_gs_frame_width_left		= MullionWidth/2
						_gs_frame_ovhg_left_out		= 0
						_gs_frame_ovhg_right_out	= 0
						_gs_frame_ovhg_left_in		= 0
						_gs_frame_ovhg_right_in		= 0
						_gs_stack_left				= 1
						_gs_stack_right				= 1
						bLeftFrame					= 1
						bRightFrame					= 1
					endif
				endif
			else
				_ModuleLength				= ac_unit_width
				_gs_frame_width_left		= gs_frame_width_left
				_gs_frame_width				= gs_frame_width
				_gs_frame_ovhg_left_out		= gs_frame_ovhg_left_out
				_gs_frame_ovhg_right_out	= gs_frame_ovhg_right_out
				_gs_frame_ovhg_left_in		= gs_frame_ovhg_left_in
				_gs_frame_ovhg_right_in		= gs_frame_ovhg_right_in
				_gs_stack_left				= gs_stack_left
				_gs_stack_right				= gs_stack_right
				bLeftFrame					= not(bLeftGlassCorner)
				bRightFrame					= not(bRightGlassCorner)
			endif

			addx _offsetX + _ModuleLength/2
			call "Multisash_window_frame" parameters A	= _ModuleLength,
						B								= ac_unit_height,
						ZZYZX							= ZZYZX,
						gs_panes_number					= gs_panes_number,
						bHorizMultisashWindow			= 1,
						gs_repeat_modules				= gs_repeat_modules,
						bFirstModule					= (iModule = 1),
						bLastModule						= (iModule = _RepeatNum),
						lod3D							= lod3D,
						bOpeningDirectionInside			= WIDO_REVEAL_SIDE,
						gs_SashText_typ_num				= gs_SashText_typ_num,
						gs_frame_pen					= gs_frame_pen,
						bLeftFrame						= bLeftFrame,
						bRightFrame						= bRightFrame,
						gs_frame_mat					= gs_frame_mat,
						gs_frame_mat2					= gs_frame_mat2,
						gs_frame_thk					= gs_frame_thk,
						gs_frame_width					= _gs_frame_width,
						gs_frame_width_left				= _gs_frame_width_left,
						gs_frame_width_upper			= gs_frame_width_upper,
						gs_frame_width_lower			= gs_frame_width_lower,
						gs_frame_offset_left			= gs_frame_offset_left * (gs_repeat_modules & (iModule = 1)),
						gs_frame_offset_right			= gs_frame_offset_left * (gs_repeat_modules & (iModule = _RepeatNum)),
						gs_frame_offset_upper			= 0,
						gs_frame_offset_lower			= 0,
						gs_frame_pen_cont				= gs_frame_pen_cont,
						gs_fillFr						= fr_sect_fill_type,
						gs_penFr_fg						= fr_sect_fill_fg,
						gs_penFr_bg						= fr_sect_fill_bg,
						gs_sash_width					= gs_sash_width,
						gs_rebate_width					= gs_rebate_width,
						gs_rebate_depth					= gs_rebate_depth,
						PaneWidth_01					= PaneWidth_01,
						PaneWidth_02					= PaneWidth_02,
						PaneWidth_03					= PaneWidth_03,
						PaneWidth_04					= PaneWidth_04,
						PaneWidth_05					= PaneWidth_05,
						PaneWidth_06					= PaneWidth_06,
						PaneWidth_07					= PaneWidth_07,
						PaneWidth_08					= PaneWidth_08,
						PaneWidth_09					= PaneWidth_09,
						gs_frame_ovhg_left_out			= _gs_frame_ovhg_left_out,
						gs_frame_ovhg_right_out			= _gs_frame_ovhg_right_out,
						gs_frame_ovhg_top_out			= gs_frame_ovhg_top_out,
						gs_frame_ovhg_bottom_out		= gs_frame_ovhg_bottom_out,
						gs_frame_ovhg_left_in			= _gs_frame_ovhg_left_in,
						gs_frame_ovhg_right_in			= _gs_frame_ovhg_right_in,
						gs_frame_ovhg_top_in			= gs_frame_ovhg_top_in,
						gs_frame_ovhg_bottom_in			= gs_frame_ovhg_bottom_in,
						CasementIDArray					= CasementIDArray,
						optypeIDArray					= optypeIDArray,
						PaneWidthArray					= PaneWidthArray,
						MullionWidthArray				= MullionWidthArray,
						PaneHeightArray					= PaneHeightArray,
						TransomWidthArray				= TransomWidthArray,
						gs_stack_left					= _gs_stack_left,
						gs_stack_right					= _gs_stack_right,
						gs_stack_bottom					= gs_stack_bottom,
						gs_stack_top					= gs_stack_top,
						gs_glass_thk					= gs_glass_thk,
						bShowUnitHotspots				= bShowUnitHotspots,
						gs_iPanesConfig					= gs_iPanesConfig,
						gs_hotspotUnIdBegin				= unID
			del 1
			_offsetX = _offsetX + _ModuleLength
			unID = unID + 6*9+2
		next iModule
	else
		_offsetY = 0

		for iModule = 1 to _RepeatNum
			if gs_repeat_modules then
				if iModule = 1 then
					_ModuleHeight				= gs_axis_distance + gs_frame_offset_lower
					_gs_frame_width_upper		= TransomWidth/2
					_gs_frame_width_lower		= gs_frame_width_lower
					_gs_frame_ovhg_top_out		= 0
					_gs_frame_ovhg_bottom_out	= gs_frame_ovhg_bottom_out
					_gs_frame_ovhg_top_in		= 0
					_gs_frame_ovhg_bottom_in	= gs_frame_ovhg_bottom_in
					_gs_stack_top				= 1
					_gs_stack_bottom			= gs_stack_bottom
				else
					if iModule = _RepeatNum then
						_ModuleHeight				= gs_axis_distance + gs_frame_offset_upper
						_gs_frame_width_upper		= gs_frame_width_upper
						_gs_frame_width_lower		= TransomWidth/2
						_gs_frame_ovhg_top_out		= gs_frame_ovhg_top_out
						_gs_frame_ovhg_bottom_out	= 0
						_gs_frame_ovhg_top_in		= gs_frame_ovhg_top_in
						_gs_frame_ovhg_bottom_in	= 0
						_gs_stack_top				= gs_stack_top
						_gs_stack_bottom			= 1
					else
						_ModuleHeight = gs_axis_distance
						_gs_frame_width_upper		= TransomWidth/2
						_gs_frame_width_lower		= TransomWidth/2
						_gs_frame_ovhg_top_out		= 0
						_gs_frame_ovhg_bottom_out	= 0
						_gs_frame_ovhg_top_in		= 0
						_gs_frame_ovhg_bottom_in	= 0
						_gs_stack_top				= 1
						_gs_stack_bottom			= 1
					endif
				endif
			else
				_ModuleHeight				= ac_unit_height
				_gs_frame_width_upper		= gs_frame_width_upper
				_gs_frame_width_lower		= gs_frame_width_lower
				_gs_frame_ovhg_top_out		= gs_frame_ovhg_top_out
				_gs_frame_ovhg_bottom_out	= gs_frame_ovhg_bottom_out
				_gs_frame_ovhg_top_in		= gs_frame_ovhg_top_in
				_gs_frame_ovhg_bottom_in	= gs_frame_ovhg_bottom_in
				_gs_stack_top				= gs_stack_top
				_gs_stack_bottom			= gs_stack_bottom
			endif

			addy _offsetY
			call "Multisash_window_frame" parameters A	= ac_unit_width,
						B								= _ModuleHeight,
						ZZYZX							= ZZYZX,
						gs_panes_number					= gs_panes_number,
						bHorizMultisashWindow			= 0,
						gs_repeat_modules				= gs_repeat_modules,
						bFirstModule					= (iModule = 1),
						bLastModule						= (iModule = _RepeatNum),
						lod3D							= lod3D,
						bOpeningDirectionInside			= WIDO_REVEAL_SIDE,
						gs_SashText_typ_num				= gs_SashText_typ_num,
						gs_frame_pen					= gs_frame_pen,
						bLeftFrame						= 1,
						bRightFrame						= 1,
						gs_frame_mat					= gs_frame_mat,
						gs_frame_mat2					= gs_frame_mat2,
						gs_frame_thk					= gs_frame_thk,
						gs_frame_width					= gs_frame_width,
						gs_frame_width_left				= gs_frame_width_left,
						gs_frame_width_upper			= _gs_frame_width_upper,
						gs_frame_width_lower			= _gs_frame_width_lower,
						gs_frame_offset_left			= 0,
						gs_frame_offset_right			= 0,
						gs_frame_offset_upper			= gs_frame_offset_lower * (gs_repeat_modules & (iModule = _RepeatNum)),
						gs_frame_offset_lower			= gs_frame_offset_lower * (gs_repeat_modules & (iModule = 1)),
						gs_frame_pen_cont				= gs_frame_pen_cont,
						gs_fillFr						= fr_sect_fill_type,
						gs_penFr_fg						= fr_sect_fill_fg,
						gs_penFr_bg						= fr_sect_fill_bg,
						gs_sash_width					= gs_sash_width,
						gs_rebate_width					= gs_rebate_width,
						gs_rebate_depth					= gs_rebate_depth,
						PaneHeight_01					= PaneHeight_01,
						PaneHeight_02					= PaneHeight_02,
						PaneHeight_03					= PaneHeight_03,
						PaneHeight_04					= PaneHeight_04,
						PaneHeight_05					= PaneHeight_05,
						PaneHeight_06					= PaneHeight_06,
						PaneHeight_07					= PaneHeight_07,
						PaneHeight_08					= PaneHeight_08,
						PaneHeight_09					= PaneHeight_09,
						gs_frame_ovhg_left_out			= gs_frame_ovhg_left_out,
						gs_frame_ovhg_right_out			= gs_frame_ovhg_right_out,
						gs_frame_ovhg_top_out			= _gs_frame_ovhg_top_out,
						gs_frame_ovhg_bottom_out		= _gs_frame_ovhg_bottom_out,
						gs_frame_ovhg_left_in			= gs_frame_ovhg_left_in,
						gs_frame_ovhg_right_in			= gs_frame_ovhg_right_in,
						gs_frame_ovhg_top_in			= _gs_frame_ovhg_top_in,
						gs_frame_ovhg_bottom_in			= _gs_frame_ovhg_bottom_in,
						CasementIDArray					= CasementIDArray,
						optypeIDArray					= optypeIDArray,
						PaneWidthArray					= PaneWidthArray,
						MullionWidthArray				= MullionWidthArray,
						PaneHeightArray					= PaneHeightArray,
						TransomWidthArray				= TransomWidthArray,
						gs_stack_left					= gs_stack_left,
						gs_stack_right					= gs_stack_right,
						gs_stack_bottom					= _gs_stack_bottom,
						gs_stack_top					= _gs_stack_top,
						gs_glass_thk					= gs_glass_thk,
						bShowUnitHotspots				= bShowUnitHotspots,
						gs_iPanesConfigVertical			= gs_iPanesConfigVertical,
						gs_hotspotUnIdBegin				= unID
			del 1
			_offsetY = _offsetY + _ModuleHeight
			unID = unID + 6*9+2
		next iModule
	endif
else
	sash_num = 1
	a_center = 0

	if	iWindowType = WIN_WDoubleSash			|\
		iWindowType = WIN_WVariableDoubleSash	then

		sash_num = 2
		if iWindowType = WIN_WDoubleSash then
			a_center = ac_unit_width/2 - gs_SLight_w
		endif
		if iWindowType = WIN_WVariableDoubleSash then
			a_center = ac_unit_width/2 - gs_bSLight * gs_SLight_w - gs_MidPane_w
		endif
	endif

	bLeftFrame	= 1
	bRightFrame	= 1
	bNeedOldSidelighHotspot = 0

	if	iWindowType = WIN_WVariable				|\
		iWindowType = WIN_WVariableDoubleSash	then

		bLeftFrame	= (bFrCornerLeft = 1 | bFrCornerLeft = 2)
		bRightFrame	= (bFrCornerRight = 1 | bFrCornerRight = 2)
		bNeedOldSidelighHotspot = 1
	endif

	if bSkylight then
		bOpeningDirectionInside = (gs_opening_dir = stOpeningDir[1])
	else
		bOpeningDirectionInside = WIDO_REVEAL_SIDE
	endif

	call "Rectangular_window_frame" parameters A= ac_unit_width,
				B								= ac_unit_height,
				ZZYZX							= ZZYZX,
				ac_cw_function					= ac_cw_function,
				ac_corner_angle					= ac_corner_angle,
				ac_diff_con_wall_thk			= ac_diff_con_wall_thk,
				ac_con_wall_thk					= ac_con_wall_thk,
				lod3D							= lod3D,
				bOpeningDirectionInside			= bOpeningDirectionInside,
				gs_SashText_typ_num				= gs_SashText_typ_num,
				gs_frame_pen					= gs_frame_pen,
				bLeftFrame						= bLeftFrame,
				bRightFrame						= bRightFrame,
				gs_frame_mat					= gs_frame_mat,
				gs_frame_mat2					= gs_frame_mat2,
				gs_frame_thk					= gs_frame_thk,
				gs_frame_width					= gs_frame_width,
				gs_frame_width_left				= gs_frame_width_left,
				gs_frame_width_upper			= gs_frame_width_upper,
				gs_frame_width_lower			= gs_frame_width_lower,
				gs_frame_pen_cont				= gs_frame_pen_cont,
				gs_fillFr						= fr_sect_fill_type,
				gs_penFr_fg						= fr_sect_fill_fg,
				gs_penFr_bg						= fr_sect_fill_bg,
				gs_sash_thk						= gs_sash_thk,
				gs_sash_width					= gs_sash_width,
				gs_rebate_width					= gs_rebate_width,
				gs_rebate_depth					= gs_rebate_depth,
				gs_UTrans						= gs_UTrans,
				gs_UTrans_w						= gs_UTrans_w,
				gs_UTrans_h						= gs_UTrans_h,
				gs_LTrans						= gs_LTrans,
				gs_LTrans_w						= gs_LTrans_w,
				gs_LTrans_h						= gs_LTrans_h,
				gs_bSLight						= gs_bSLight,
				gs_SLight_w						= gs_SLight_w,
				gs_bLeftSLight					= gs_bLeftSLight,
				gs_LeftSLight_w					= gs_LeftSLight_w,
				gs_Mullion_w					= gs_Mullion_w,
				gs_Mullion_w_left				= gs_Mullion_w_left,
				gs_Mullion_Top					= gs_Mullion_Top,
				gs_Mullion_Bott					= gs_Mullion_Bott,
				gs_LeftMullion_Top				= gs_LeftMullion_Top,
				gs_LeftMullion_Bott				= gs_LeftMullion_Bott,
				gs_UTransom_toLeft				= gs_UTransom_toLeft,
				gs_UTransom_toRight				= gs_UTransom_toRight,
				gs_LTransom_toLeft				= gs_LTransom_toLeft,
				gs_LTransom_toRight				= gs_LTransom_toRight,
				gs_RightMullion_Middle			= gs_RightMullion_Middle,
				gs_LeftMullion_Middle			= gs_LeftMullion_Middle,
				gs_UTransom_Middle				= gs_UTransom_Middle,
				gs_LTransom_Middle				= gs_LTransom_Middle,
				a_center						= a_center,
				gs_frame_ovhg_left_out			= gs_frame_ovhg_left_out,
				gs_frame_ovhg_right_out			= gs_frame_ovhg_right_out,
				gs_frame_ovhg_top_out			= gs_frame_ovhg_top_out,
				gs_frame_ovhg_bottom_out		= gs_frame_ovhg_bottom_out,
				gs_frame_ovhg_left_in			= gs_frame_ovhg_left_in,
				gs_frame_ovhg_right_in			= gs_frame_ovhg_right_in,
				gs_frame_ovhg_top_in			= gs_frame_ovhg_top_in,
				gs_frame_ovhg_bottom_in			= gs_frame_ovhg_bottom_in,
				CasementIDArray					= CasementIDArray,
				CasementTypeArray				= CasementTypeArray,
				gs_optype_m_01					= gs_optype_m_01,
				gs_optype_m_02					= gs_optype_m_02,
				gs_optype_m_03					= gs_optype_m_03,
				gs_optype_m_05					= gs_optype_m_05,
				gs_optype_m_06					= gs_optype_m_06,
				gs_optype_m_07					= gs_optype_m_07,
				gs_optype_m_09					= gs_optype_m_09,
				gs_optype_m_10					= gs_optype_m_10,
				gs_optype_m_11					= gs_optype_m_11,
				sash_num						= sash_num,
				gs_stack_left					= gs_stack_left,
				gs_stack_right					= gs_stack_right,
				gs_stack_bottom					= gs_stack_bottom,
				gs_stack_top					= gs_stack_top,
				gs_glass_thk					= gs_glass_thk,
				bShowUnitHotspots				= bShowUnitHotspots,
				bNeedOldSidelighHotspot			= bNeedOldSidelighHotspot
endif
body -1

if isVentilationOverFrame then
	cutend
endif


! =============================================================================
! Draw Casement
! =============================================================================

if lod3D = 5 then	! Chinese
	sh_sect_fill_type	= gs_fillShCover
	sh_sect_fill_fg		= gs_penShCov_fg
	sh_sect_fill_bg		= gs_penShCov_bg
else
	sh_sect_fill_type	= gs_fillSash
	sh_sect_fill_fg		= gs_penSash_fg
	sh_sect_fill_bg		= gs_penSash_bg
endif

! --- Cutting in case of corner window -----------------------------------------

cutnum = 0

if bLeftGlassCorner & (abs(gs_frame_ovhg_left_out - gs_frame_ovhg_left_in) > EPS) then
	addx -ac_unit_width/2 - gs_frame_ovhg_left_out
	rotz 90
	cutplane -90 + atn((gs_frame_ovhg_left_out - gs_frame_ovhg_left_in) / gs_frame_thk)
	del 2
	cutnum = cutnum + 1
endif

if bRightGlassCorner & (abs(gs_frame_ovhg_right_out - gs_frame_ovhg_right_in) > EPS) then
	addx ac_unit_width/2 + gs_frame_ovhg_right_out
	rotz 90
	cutplane 90 - atn((gs_frame_ovhg_right_out - gs_frame_ovhg_right_in) / gs_frame_thk)
	del 2
	cutnum = cutnum + 1
endif

if iWindowClass = WINCLASS_MULTISASH then
	sh_unID	= 2000

	iSash = 1
	for iModule = 1 to _RepeatNum
		for iPane = 1 to gs_panes_number
			sashWidth	= sashWidthArray[1][iSash]
			sashHeight	= sashHeightArray[1][iSash]
			CasementID	= CasementIDArray[1][iPane]

			add sashPosXArray[1][iSash], sashPosYArray[1][iSash], gs_frame_thk
			gosub "CallCasement"
			del 1
			sh_unID	= sh_unID + 400
			iSash = iSash + 1
		next iPane
	next iModule
else

	! =============================================================================
	! Transom Sashes
	! =============================================================================

	! Upper Left Sash -------------------------------------------------------------

	if gs_UTrans & gs_UTransom_toLeft & gs_LeftMullion_Top then
		sh_unID		= 5600
		sashWidth	= sashWidthArray[1][1]
		sashHeight	= sashHeightArray[1][1]
		CasementID	= CasementIDArray[1][1]

		add sashPosXArray[1][1], sashPosYArray[1][1], gs_frame_thk
		gosub "CallCasement"
		del 1
	endif

	! Upper Middle Sash -----------------------------------------------------------

	if gs_UTrans & gs_UTransom_Middle then
		sh_unID		= 2400
		sashWidth	= sashWidthArray[1][2]
		sashHeight	= sashHeightArray[1][2]
		CasementID	= CasementIDArray[1][2]

		add sashPosXArray[1][2], sashPosYArray[1][2], gs_frame_thk
		gosub "CallCasement"
		del 1
	endif

	! Upper Right Sash ------------------------------------------------------------

	if gs_UTrans & gs_UTransom_toRight & gs_Mullion_Top then
		sh_unID		= 4000
		sashWidth	= sashWidthArray[1][3]
		sashHeight	= sashHeightArray[1][3]
		CasementID	= CasementIDArray[1][3]

		add sashPosXArray[1][3], sashPosYArray[1][3], gs_frame_thk
		gosub "CallCasement"
		del 1
	endif


	! =============================================================================
	! Main Sashes
	! =============================================================================

	! Middle Left Sash ------------------------------------------------------------

	if gs_bLeftSLight | CasementTypeArray[2][1] = 2 | CasementTypeArray[2][1] = 3 then
		sh_unID		= 5200
		sashWidth	= sashWidthArray[2][1]
		sashHeight	= sashHeightArray[2][1]
		CasementID	= CasementIDArray[2][1]

		add sashPosXArray[2][1], sashPosYArray[2][1], gs_frame_thk
		gosub "CallCasement"
		del 1
	endif

	! Middle Middle Sash ----------------------------------------------------------

	sh_unID		= 2000
	sashWidth	= sashWidthArray[2][2]
	sashHeight	= sashHeightArray[2][2]
	CasementID	= CasementIDArray[2][2]

	add sashPosXArray[2][2], sashPosYArray[2][2], gs_frame_thk
	gosub "CallCasement"
	del 1

	! Middle Right Sash -----------------------------------------------------------

	if gs_bSLight | CasementTypeArray[2][3] = 2 | CasementTypeArray[2][3] = 3 then
		sh_unID		= 3600
		sashWidth	= sashWidthArray[2][3]
		sashHeight	= sashHeightArray[2][3]
		CasementID	= CasementIDArray[2][3]

		add sashPosXArray[2][3], sashPosYArray[2][3], gs_frame_thk
		gosub "CallCasement"
		del 1
	endif


	! =============================================================================
	! Lower Transom Sashes
	! =============================================================================

	! Lower Left Sash -------------------------------------------------------------

	if gs_LTrans & gs_LTransom_toLeft & gs_LeftMullion_Bott then
		sh_unID		= 6000
		sashWidth	= sashWidthArray[3][1]
		sashHeight	= sashHeightArray[3][1]
		CasementID	= CasementIDArray[3][1]

		add sashPosXArray[3][1], sashPosYArray[3][1], gs_frame_thk
		gosub "CallCasement"
		del 1
	endif

	! Lower Middle Sash -----------------------------------------------------------

	if gs_LTrans & gs_LTransom_Middle then
		sh_unID		= 2800
		sashWidth	= sashWidthArray[3][2]
		sashHeight	= sashHeightArray[3][2]
		CasementID	= CasementIDArray[3][2]

		add sashPosXArray[3][2], sashPosYArray[3][2], gs_frame_thk
		gosub "CallCasement"
		del 1
	endif

	! Lower Right Sash ------------------------------------------------------------

	if gs_LTrans & gs_LTransom_toRight & gs_Mullion_Bott then
		sh_unID		= 4400
		sashWidth	= sashWidthArray[3][3]
		sashHeight	= sashHeightArray[3][3]
		CasementID	= CasementIDArray[3][3]

		add sashPosXArray[3][3], sashPosYArray[3][3], gs_frame_thk
		gosub "CallCasement"
		del 1
	endif
endif

for i = 1 to cutnum
	cutend
next i


! =============================================================================
end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end
! =============================================================================


"CallCasement":
! =============================================================================
! Casement Macro
! -----------------------------------------------------------------------------
! sashWidth:	Width of Sash
! sashHeight:	Height of Sash
! CasementID:	Sash ID
! sh_unID:		Hotspot ID
! =============================================================================

	if bSkylight then
		bOpeningDirectionInside = (gs_opening_dir = stOpeningDir[1])
	else
		bOpeningDirectionInside = WIDO_REVEAL_SIDE
	endif

	call "Casement_rectangular" parameters A = sashWidth, B = sashHeight,
			iWindowClass					= iWindowClass,
			iWindowType						= iWindowType,
			CasementID 						= CasementID,
			lod3D							= lod3D,
			bEdwardianSash					= (iWindowClass = 3),	! WINCLASS_SINGLE_HUNG
			gs_rebate_width					= gs_rebate_width,
			gs_rebate_depth					= gs_rebate_depth,
			gs_sash_thk						= gs_sash_thk,
			gs_sash_width					= gs_sash_width,
			gs_frame_thk					= gs_frame_thk,
			iMullionStyle_01				= iMullionStyle_01,
			iMullionStyle_02				= iMullionStyle_02,
			iMullionStyle_03				= iMullionStyle_03,
			iMullionStyle_04				= iMullionStyle_04,
			iMullionStyle_05				= iMullionStyle_05,
			iMullionStyle_06				= iMullionStyle_06,
			iMullionStyle_07				= iMullionStyle_07,
			iMullionStyle_08				= iMullionStyle_08,
			iMullionStyle_09				= iMullionStyle_09,
			iMullionStyle_10				= iMullionStyle_10,
			iMullionStyle_11				= iMullionStyle_11,
			iMullionPosition				= iMullionPosition,
			gs_horiz_div_height_01			= gs_horiz_div_height_01,
			gs_horiz_div_height_02			= gs_horiz_div_height_02,
			gs_horiz_div_height_03			= gs_horiz_div_height_03,
			gs_horiz_div_height_04			= gs_horiz_div_height_04,
			gs_horiz_div_height_05			= gs_horiz_div_height_05,
			gs_horiz_div_height_06			= gs_horiz_div_height_06,
			gs_horiz_div_height_07			= gs_horiz_div_height_07,
			gs_horiz_div_height_08			= gs_horiz_div_height_08,
			gs_horiz_div_height_09			= gs_horiz_div_height_09,
			gs_horiz_div_height_10			= gs_horiz_div_height_10,
			gs_horiz_div_height_11			= gs_horiz_div_height_11,
			gw								= gw,
			gth								= gth,
			gs_glass_thk					= gs_glass_thk,
			vgn_01							= vgn_01,
			hgn_01							= hgn_01,
			vgn_02							= vgn_02,
			hgn_02							= hgn_02,
			vgn_03							= vgn_03,
			hgn_03							= hgn_03,
			vgn_04							= vgn_04,
			hgn_04							= hgn_04,
			vgn_05							= vgn_05,
			hgn_05							= hgn_05,
			vgn_06							= vgn_06,
			hgn_06							= hgn_06,
			vgn_07							= vgn_07,
			hgn_07							= hgn_07,
			vgn_08							= vgn_08,
			hgn_08							= hgn_08,
			vgn_09							= vgn_09,
			hgn_09							= hgn_09,
			vgn_10							= vgn_10,
			hgn_10							= hgn_10,
			vgn_11							= vgn_11,
			hgn_11							= hgn_11,
			vgn2_01							= vgn2_01,
			hgn2_01							= hgn2_01,
			vgn2_02							= vgn2_02,
			hgn2_02							= hgn2_02,
			vgn2_03							= vgn2_03,
			hgn2_03							= hgn2_03,
			vgn2_04							= vgn2_04,
			hgn2_04							= hgn2_04,
			vgn2_05							= vgn2_05,
			hgn2_05							= hgn2_05,
			vgn2_06							= vgn2_06,
			hgn2_06							= hgn2_06,
			vgn2_07							= vgn2_07,
			hgn2_07							= hgn2_07,
			vgn2_08							= vgn2_08,
			hgn2_08							= hgn2_08,
			vgn2_09							= vgn2_09,
			hgn2_09							= hgn2_09,
			vgn2_10							= vgn2_10,
			hgn2_10							= hgn2_10,
			vgn2_11							= vgn2_11,
			hgn2_11							= hgn2_11,
			vergrid_01						= vergrid_01,
			horgrid_01						= horgrid_01,
			vergrid_02						= vergrid_02,
			horgrid_02						= horgrid_02,
			vergrid_03						= vergrid_03,
			horgrid_03						= horgrid_03,
			vergrid_04						= vergrid_04,
			horgrid_04						= horgrid_04,
			vergrid_05						= vergrid_05,
			horgrid_05						= horgrid_05,
			vergrid_06						= vergrid_06,
			horgrid_06						= horgrid_06,
			vergrid_07						= vergrid_07,
			horgrid_07						= horgrid_07,
			vergrid_08						= vergrid_08,
			horgrid_08						= horgrid_08,
			vergrid_09						= vergrid_09,
			horgrid_09						= horgrid_09,
			vergrid_10						= vergrid_10,
			horgrid_10						= horgrid_10,
			vergrid_11						= vergrid_11,
			horgrid_11						= horgrid_11,
			vergrid2_01						= vergrid2_01,
			horgrid2_01						= horgrid2_01,
			vergrid2_02						= vergrid2_02,
			horgrid2_02						= horgrid2_02,
			vergrid2_03						= vergrid2_03,
			horgrid2_03						= horgrid2_03,
			vergrid2_04						= vergrid2_04,
			horgrid2_04						= horgrid2_04,
			vergrid2_05						= vergrid2_05,
			horgrid2_05						= horgrid2_05,
			vergrid2_06						= vergrid2_06,
			horgrid2_06						= horgrid2_06,
			vergrid2_07						= vergrid2_07,
			horgrid2_07						= horgrid2_07,
			vergrid2_08						= vergrid2_08,
			horgrid2_08						= horgrid2_08,
			vergrid2_09						= vergrid2_09,
			horgrid2_09						= horgrid2_09,
			vergrid2_10						= vergrid2_10,
			horgrid2_10						= horgrid2_10,
			vergrid2_11						= vergrid2_11,
			horgrid2_11						= horgrid2_11,
			gs_glass_pen					= gs_glass_pen,
			gs_glass_pen_cont				= gs_frame_pen_cont,
			ghe								= ghe,
			VentilationProfileHeight		= VentilationProfileHeight,
			isVentilationProfileInSash_01	= isVentilationProfileInSash_01,
			isVentilationProfileInSash_02	= isVentilationProfileInSash_02,
			isVentilationProfileInSash_03	= isVentilationProfileInSash_03,
			isVentilationProfileInSash_04	= isVentilationProfileInSash_04,
			isVentilationProfileInSash_05	= isVentilationProfileInSash_05,
			isVentilationProfileInSash_06	= isVentilationProfileInSash_06,
			isVentilationProfileInSash_07	= isVentilationProfileInSash_07,
			isVentilationProfileInSash_08	= isVentilationProfileInSash_08,
			isVentilationProfileInSash_09	= isVentilationProfileInSash_09,
			isVentilationProfileInSash_10	= isVentilationProfileInSash_10,
			isVentilationProfileInSash_11	= isVentilationProfileInSash_11,
			openingAngle_01					= openingAngle_01,
			openingAngle2_01				= openingAngle2_01,
			openingLength_01				= openingLength_01,
			openingLength2_01				= openingLength2_01,
			openingAngle_02					= openingAngle_02,
			openingAngle2_02				= openingAngle2_02,
			openingLength_02				= openingLength_02,
			openingLength2_02				= openingLength2_02,
			openingAngle_03					= openingAngle_03,
			openingAngle2_03				= openingAngle2_03,
			openingLength_03				= openingLength_03,
			openingLength2_03				= openingLength2_03,
			openingAngle_04					= openingAngle_04,
			openingAngle2_04				= openingAngle2_04,
			openingLength_04				= openingLength_04,
			openingLength2_04				= openingLength2_04,
			openingAngle_05					= openingAngle_05,
			openingAngle2_05				= openingAngle2_05,
			openingLength_05				= openingLength_05,
			openingLength2_05				= openingLength2_05,
			openingAngle_06					= openingAngle_06,
			openingAngle2_06				= openingAngle2_06,
			openingLength_06				= openingLength_06,
			openingLength2_06				= openingLength2_06,
			openingAngle_07					= openingAngle_07,
			openingAngle2_07				= openingAngle2_07,
			openingLength_07				= openingLength_07,
			openingLength2_07				= openingLength2_07,
			openingAngle_08					= openingAngle_08,
			openingAngle2_08				= openingAngle2_08,
			openingLength_08				= openingLength_08,
			openingLength2_08				= openingLength2_08,
			openingAngle_09					= openingAngle_09,
			openingAngle2_09				= openingAngle2_09,
			openingLength_09				= openingLength_09,
			openingLength2_09				= openingLength2_09,
			openingAngle_10					= openingAngle_10,
			openingAngle2_10				= openingAngle2_10,
			openingLength_10				= openingLength_10,
			openingLength2_10				= openingLength2_10,
			openingAngle_11					= openingAngle_11,
			openingAngle2_11				= openingAngle2_11,
			openingLength_11				= openingLength_11,
			openingLength2_11				= openingLength2_11,
			gs_optype_m_01					= gs_optype_m_01,
			gs_optype_m_02					= gs_optype_m_02,
			gs_optype_m_03					= gs_optype_m_03,
			gs_optype_m_04					= gs_optype_m_04,
			gs_optype_m_05					= gs_optype_m_05,
			gs_optype_m_06					= gs_optype_m_06,
			gs_optype_m_07					= gs_optype_m_07,
			gs_optype_m_08					= gs_optype_m_08,
			gs_optype_m_09					= gs_optype_m_09,
			gs_optype_m_10					= gs_optype_m_10,
			gs_optype_m_11					= gs_optype_m_11,
			gs_full_edit					= gs_full_edit,
			gs_frame_pen					= gs_frame_pen,
			gs_sash_pen						= gs_sash_pen,
			gs_sash_mat						= gs_sash_mat,
			gs_sash_mat2					= gs_sash_mat2,
			gs_grill_mat					= gs_grill_mat,
			gs_grill_mat2					= gs_grill_mat2,
			gs_glass_mat					= gs_glass_mat,
			gs_ventProfile_mat				= gs_ventProfile_mat,
			gs_sash_pen_cont				= gs_frame_pen_cont,
			gs_fillSash						= sh_sect_fill_type,
			gs_penSash_bg					= sh_sect_fill_bg,
			gs_penSash_fg					= sh_sect_fill_fg,
			gs_frame_pen_cont				= gs_frame_pen_cont,
			gs_ventProfile_fill				= gs_ventProfile_fill,
			gs_ventProfile_pen_fg			= gs_ventProfile_pen_fg,
			gs_ventProfile_pen_bg			= gs_ventProfile_pen_bg,
			bOpeningDirectionInside			= bOpeningDirectionInside,
			gs_SashText_typ_num				= gs_SashText_typ_num,
			gs_cust_panel_01				= gs_cust_panel_01,
			gs_cust_panel2_01				= gs_cust_panel2_01,
			gs_cust_panel_02				= gs_cust_panel_02,
			gs_cust_panel2_02				= gs_cust_panel2_02,
			gs_cust_panel_03				= gs_cust_panel_03,
			gs_cust_panel2_03				= gs_cust_panel2_03,
			gs_cust_panel_04				= gs_cust_panel_04,
			gs_cust_panel2_04				= gs_cust_panel2_04,
			gs_cust_panel_05				= gs_cust_panel_05,
			gs_cust_panel2_05				= gs_cust_panel2_05,
			gs_cust_panel_06				= gs_cust_panel_06,
			gs_cust_panel2_06				= gs_cust_panel2_06,
			gs_cust_panel_07				= gs_cust_panel_07,
			gs_cust_panel2_07				= gs_cust_panel2_07,
			gs_cust_panel_08				= gs_cust_panel_08,
			gs_cust_panel2_08				= gs_cust_panel2_08,
			gs_cust_panel_09				= gs_cust_panel_09,
			gs_cust_panel2_09				= gs_cust_panel2_09,
			gs_cust_panel_10				= gs_cust_panel_10,
			gs_cust_panel2_10				= gs_cust_panel2_10,
			gs_cust_panel_11				= gs_cust_panel_11,
			gs_cust_panel2_11				= gs_cust_panel2_11,
			gs_bMirr_cust_panel_05			= gs_bMirr_cust_panel_05,
			gs_bMirr_cust_panel2_05			= gs_bMirr_cust_panel2_05,
			sh_unID							= sh_unID,
			bOplines3d						= bOplines3d,
			opLineType3dIn					= opLineType3dIn,
			opLineType3dOut					= opLineType3dOut,
			gs_opline_style_m				= gs_opline_style_m,
			gs_opLinePen					= gs_opLinePen,
			gs_panel_mat					= gs_panel_mat,
			gs_panel_mat2					= gs_panel_mat2,
			bBrokenGlass					= bBrokenGlass,
			iLouverStyle					= iLouverStyle,
			gs_louver_thk					= gs_louver_thk,
			gs_louver_width					= gs_louver_width,
			gs_louver_opening_angle			= gs_louver_opening_angle,
			gs_ventSashLouver_mat			= gs_ventSashLouver_mat,
			bSkylight						= bSkylight,
			gs_glass_01_mat=gs_glass_01_mat,
			gs_glass_02_mat=gs_glass_02_mat,
			gs_glass_03_mat=gs_glass_03_mat,
			gs_glass_04_mat=gs_glass_04_mat,
			gs_glass_05_mat=gs_glass_05_mat,
			gs_glass_06_mat=gs_glass_06_mat,
			gs_glass_07_mat=gs_glass_07_mat,
			gs_glass_08_mat=gs_glass_08_mat,
			gs_glass_09_mat=gs_glass_09_mat,
			gs_glass_10_mat=gs_glass_10_mat,
			gs_glass_11_mat=gs_glass_11_mat,
			gs_glass_mat_eq=gs_glass_mat_eq
return

]]>
</Script_3D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_2D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
! Contact person: <SzL, NJ>

gs_fillFr		= gs_bFills * gs_fillFr
gs_fillSh		= gs_bFills * gs_fillSash
gs_penSh_fg		= gs_bFills * gs_penSash_fg
gs_penSh_bg		= gs_bFills * gs_penSash_bg
gs_fillShCover	= gs_bFills * gs_fillShCover


! =============================================================================
! Hotspot Editing of Frame
! =============================================================================

if iLoD2D > SYMBW_S_9 then

	if	iWindowType = WIN_W2			|\
		iWindowType = WIN_WSingleHung2	|\
		iWindowType = WIN_WDoubleHung2	|\
		iWindowType = WIN_WDoubleSash	|\
		iWindowType = WIN_W2Sidelight 	then

		unID = 1300
		if gs_iPanesConfig = PANESCONFIG_UNIFORM then
			hotspot2 ac_unit_width/2-gs_SLight_w,	0,unID+2
		else
			hotspot2 ac_unit_width/2,				0,unID,  gs_SLight_w,1+128
			hotspot2 ac_unit_width/2+1,				0,unID+1,gs_SLight_w,3
			hotspot2 ac_unit_width/2-gs_SLight_w,	0,unID+2,gs_SLight_w,2
		endif
		unID=unID+3

		if bShowAddHotspots then
			hotspot2 ac_unit_width/2-gs_SLight_w, -gs_frame_thk, unID
		endif
	endif

	if	iWindowType = WIN_W3			|\
		iWindowType = WIN_WSingleHung3	|\
		iWindowType = WIN_WDoubleHung3	then

		unID = 1300
		if gs_iPanesConfig = PANESCONFIG_UNIFORM then
			hotspot2 ac_unit_width/2-gs_SLight_w-gs_MidPane_w,	0,unID+2
		else
			if gs_iPanesConfig = PANESCONFIG_SYMM then
				hotspot2 -ac_unit_width/2,				0,unID,	 gs_SLight_w,1+128
				hotspot2 -ac_unit_width/2-1,			0,unID+1,gs_SLight_w,3
				hotspot2 -ac_unit_width/2+gs_SLight_w,	0,unID+2,gs_SLight_w,2
			else
				hotspot2 ac_unit_width/2-gs_SLight_w,				0,unID,	 gs_MidPane_w,1+128
				hotspot2 ac_unit_width/2+1,							0,unID+1,gs_MidPane_w,3
				hotspot2 ac_unit_width/2-gs_SLight_w-gs_MidPane_w,	0,unID+2,gs_MidPane_w,2
			endif
		endif
		unID=unID+3

			unID = 1310
		if gs_iPanesConfig = PANESCONFIG_UNIFORM then
			hotspot2 ac_unit_width/2-gs_SLight_w,	0,unID+2
		else
			hotspot2 ac_unit_width/2,				0,unID,  gs_SLight_w,1+128
			hotspot2 ac_unit_width/2+1,				0,unID+1,gs_SLight_w,3
			hotspot2 ac_unit_width/2-gs_SLight_w,	0,unID+2,gs_SLight_w,2
		endif
		unID=unID+3

		if bShowAddHotspots then
			hotspot2 -ac_unit_width/2+gs_LeftSLight_w, -gs_frame_thk, unID : unID=unID+1
			hotspot2  ac_unit_width/2-gs_SLight_w, -gs_frame_thk, unID
		endif
	endif

	if	iWindowType = WIN_W32Sidelights1	|\
		iWindowType = WIN_W32Sidelights2	then

		unID = 1310
		if gs_iPanesConfig = PANESCONFIG_UNIFORM then
			hotspot2 ac_unit_width/2-gs_SLight_w-gs_MidPane_w,	0,unID+2
		else
			if gs_iPanesConfig = PANESCONFIG_SYMM then
				hotspot2 -ac_unit_width/2,				0,unID,	 gs_SLight_w,1+128
				hotspot2 -ac_unit_width/2-1,			0,unID+1,gs_SLight_w,3
				hotspot2 -ac_unit_width/2+gs_SLight_w,	0,unID+2,gs_SLight_w,2
			else
				hotspot2 ac_unit_width/2-gs_SLight_w,				0,unID,	 gs_MidPane_w,1+128
				hotspot2 ac_unit_width/2+1,							0,unID+1,gs_MidPane_w,3
				hotspot2 ac_unit_width/2-gs_SLight_w-gs_MidPane_w,	0,unID+2,gs_MidPane_w,2
			endif
		endif
		unID=unID+3

		unID = 1300
		if gs_iPanesConfig = PANESCONFIG_UNIFORM then
			hotspot2 ac_unit_width/2-gs_SLight_w,	0,unID+2
		else
			hotspot2 ac_unit_width/2,				0,unID,	 gs_SLight_w,1+128
			hotspot2 ac_unit_width/2+1,				0,unID+1,gs_SLight_w,3
			hotspot2 ac_unit_width/2-gs_SLight_w,	0,unID+2,gs_SLight_w,2
		endif
		unID=unID+3

		if bShowAddHotspots then
			hotspot2 -ac_unit_width/2+gs_LeftSLight_w, -gs_frame_thk, unID : unID=unID+1
			hotspot2  ac_unit_width/2-gs_SLight_w, -gs_frame_thk, unID
		endif
	endif

	if	iWindowType = WIN_WVariable				|\
		iWindowType = WIN_WVariableDoubleSash	then

		if gs_bSLight then
			unID = 1300
			hotspot2 ac_unit_width/2,				0,unID,	 gs_SLight_w,1+128
			hotspot2 ac_unit_width/2+1,				0,unID+1,gs_SLight_w,3
			hotspot2 ac_unit_width/2-gs_SLight_w,	0,unID+2,gs_SLight_w,2
			unID=unID+3

			if bShowAddHotspots then
				hotspot2 ac_unit_width/2-gs_SLight_w, -gs_frame_thk, unID
			endif
		endif
	endif

	if iWindowType = WIN_MultisashHorizontal then
		unID = 1300

		_offsetX = -ac_unit_width/2 + gs_frame_offset_left * gs_repeat_modules

		for iModule = 1 to _RepeatNum
			if gs_repeat_modules then
				if iModule > 1 then
					hotspot2 _offsetX, 0, unID
				endif
			endif
			unID = unID+1

			if gs_panes_number > 1 then
				_BaseHotspotX = _offsetX
				if gs_iPanesConfig = PANESCONFIG_UNIFORM then
					hotspot2 _BaseHotspotX + PaneWidth_01,	0, unID+2
				else
					hotspot2 _BaseHotspotX,					0, unID,	PaneWidth_01, 1+128
					hotspot2 _BaseHotspotX - 1,				0, unID+1,	PaneWidth_01, 3
					hotspot2 _BaseHotspotX + PaneWidth_01,	0, unID+2,	PaneWidth_01, 2
				endif
				unID = unID+3

				if bShowAddHotspots then
					hotspot2 _BaseHotspotX + PaneWidth_01, -gs_frame_thk, unID
				endif
				unID = unID+1
			endif

			if gs_panes_number > 2 then
				_BaseHotspotX = _BaseHotspotX + PaneWidth_01
				if gs_iPanesConfig = PANESCONFIG_UNIFORM then
					hotspot2 _BaseHotspotX + PaneWidth_02,	0, unID+2
				else
					hotspot2 _BaseHotspotX,					0, unID,	PaneWidth_02, 1+128
					hotspot2 _BaseHotspotX - 1,				0, unID+1,	PaneWidth_02, 3
					hotspot2 _BaseHotspotX + PaneWidth_02,	0, unID+2,	PaneWidth_02, 2
				endif
				unID = unID+3

				if bShowAddHotspots then
					hotspot2 _BaseHotspotX + PaneWidth_02, -gs_frame_thk, unID
				endif
				unID = unID+1
			endif

			if gs_panes_number > 3 then
				_BaseHotspotX = _BaseHotspotX + PaneWidth_02
				if gs_iPanesConfig = PANESCONFIG_UNIFORM then
					hotspot2 _BaseHotspotX + PaneWidth_03,	0, unID+2
				else
					hotspot2 _BaseHotspotX,					0, unID,	PaneWidth_03, 1+128
					hotspot2 _BaseHotspotX - 1,				0, unID+1,	PaneWidth_03, 3
					hotspot2 _BaseHotspotX + PaneWidth_03,	0, unID+2,	PaneWidth_03, 2
				endif
				unID = unID+3

				if bShowAddHotspots then
					hotspot2 _BaseHotspotX + PaneWidth_03, -gs_frame_thk, unID
				endif
				unID = unID+1
			endif

			if gs_panes_number > 4 then
				_BaseHotspotX = _BaseHotspotX + PaneWidth_03
				if gs_iPanesConfig = PANESCONFIG_UNIFORM then
					hotspot2 _BaseHotspotX + PaneWidth_04,	0, unID+2
				else
					hotspot2 _BaseHotspotX,					0, unID,	PaneWidth_04, 1+128
					hotspot2 _BaseHotspotX - 1,				0, unID+1,	PaneWidth_04, 3
					hotspot2 _BaseHotspotX + PaneWidth_04,	0, unID+2,	PaneWidth_04, 2
				endif
				unID = unID+3

				if bShowAddHotspots then
					hotspot2 _BaseHotspotX + PaneWidth_04, -gs_frame_thk, unID
				endif
				unID = unID+1
			endif

			if gs_panes_number > 5 then
				_BaseHotspotX = _BaseHotspotX + PaneWidth_04
				if gs_iPanesConfig = PANESCONFIG_UNIFORM then
					hotspot2 _BaseHotspotX + PaneWidth_05,	0, unID+2
				else
					hotspot2 _BaseHotspotX,					0, unID,	PaneWidth_05, 1+128
					hotspot2 _BaseHotspotX - 1,				0, unID+1,	PaneWidth_05, 3
					hotspot2 _BaseHotspotX + PaneWidth_05,	0, unID+2,	PaneWidth_05, 2
				endif
				unID = unID+3

				if bShowAddHotspots then
					hotspot2 _BaseHotspotX + PaneWidth_05, -gs_frame_thk, unID
				endif
				unID = unID+1
			endif

			if gs_panes_number > 6 then
				_BaseHotspotX = _BaseHotspotX + PaneWidth_05
				if gs_iPanesConfig = PANESCONFIG_UNIFORM then
					hotspot2 _BaseHotspotX + PaneWidth_06,	0, unID+2
				else
					hotspot2 _BaseHotspotX,					0, unID,	PaneWidth_06, 1+128
					hotspot2 _BaseHotspotX - 1,				0, unID+1,	PaneWidth_06, 3
					hotspot2 _BaseHotspotX + PaneWidth_06,	0, unID+2,	PaneWidth_06, 2
				endif
				unID = unID+3

				if bShowAddHotspots then
					hotspot2 _BaseHotspotX + PaneWidth_06, -gs_frame_thk, unID
				endif
				unID = unID+1
			endif

			if gs_panes_number > 7 then
				_BaseHotspotX = _BaseHotspotX + PaneWidth_06
				if gs_iPanesConfig = PANESCONFIG_UNIFORM then
					hotspot2 _BaseHotspotX + PaneWidth_07,	0, unID+2
				else
					hotspot2 _BaseHotspotX,					0, unID,	PaneWidth_07, 1+128
					hotspot2 _BaseHotspotX - 1,				0, unID+1,	PaneWidth_07, 3
					hotspot2 _BaseHotspotX + PaneWidth_07,	0, unID+2,	PaneWidth_07, 2
				endif
				unID = unID+3

				if bShowAddHotspots then
					hotspot2 _BaseHotspotX + PaneWidth_07, -gs_frame_thk, unID
				endif
				unID = unID+1
			endif

			if gs_panes_number > 8 then
				_BaseHotspotX = _BaseHotspotX + PaneWidth_07
				if gs_iPanesConfig = PANESCONFIG_UNIFORM then
					hotspot2 _BaseHotspotX + PaneWidth_08,	0, unID+2
				else
					hotspot2 _BaseHotspotX,					0, unID,	PaneWidth_08, 1+128
					hotspot2 _BaseHotspotX - 1,				0, unID+1,	PaneWidth_08, 3
					hotspot2 _BaseHotspotX + PaneWidth_08,	0, unID+2,	PaneWidth_08, 2
				endif
				unID = unID+3

				if bShowAddHotspots then
					hotspot2 _BaseHotspotX + PaneWidth_08, -gs_frame_thk, unID
				endif
				unID = unID+1
			endif

			if gs_panes_number > 9 then
				_BaseHotspotX = _BaseHotspotX + PaneWidth_08
				if gs_iPanesConfig = PANESCONFIG_UNIFORM then
					hotspot2 _BaseHotspotX + PaneWidth_09,	0, unID+2
				else
					hotspot2 _BaseHotspotX,					0, unID,	PaneWidth_09, 1+128
					hotspot2 _BaseHotspotX - 1,				0, unID+1,	PaneWidth_09, 3
					hotspot2 _BaseHotspotX + PaneWidth_09,	0, unID+2,	PaneWidth_09, 2
				endif
				unID = unID+3

				if bShowAddHotspots then
					hotspot2 _BaseHotspotX + PaneWidth_09, -gs_frame_thk, unID
				endif
				unID = unID+1
			endif

			_offsetX = _offsetX + gs_axis_distance
			unID = unID + 3*9+1
		next iModule
	endif
endif


! =============================================================================
! Draw window frame and sash
! =============================================================================

if	iWindowType = WIN_W1			|\
	iWindowType = WIN_WSingleHung1	|\
	iWindowType = WIN_WDoubleHung1	then

	! Draw Main sash --------------------------------------------------------------

	call "BasicWindowPanelStraight",
		parameters	A							= ac_unit_width,
					iTypeDemolitionFill			= iTypeDemolitionFill,
					gs_Demolition_linetype		= gs_Demolition_linetype,
					gs_optype_m					= gs_optype_m_01,
					bLeftCornerFunction			= bLeftCornerFunction,
					bRightCornerFunction		= bRightCornerFunction | bCornerWindow,
					gs_frame_thk				= gs_frame_thk,
					gs_frame_width				= gs_frame_width,
					gs_frame_width_left			= gs_frame_width_left,
					gs_frame_right_endline		= not(bCornerWindow) & not ((gs_tolerance_right > EPS) & gs_stack_right),
					gs_frame_left_endline		= not ((gs_tolerance_left > EPS) & gs_stack_left),
					gs_frame_right_endline_comp	= 1 + (gs_right_oversize < EPS),
					gs_frame_left_endline_comp	= 1 + (gs_left_oversize < EPS),
					gs_frame_right_unitline		= not(bCornerWindow),
					gs_frame_left_unitline		= 1,
					gs_frame_cut_width			= gs_rebate_width,
					gs_frame_cut_depth			= gs_rebate_depth,
					gs_bFrameLeft				= 1,
					gs_bFrameRight				= 1,
					gs_frame_ovhg_left_out		= gs_frame_ovhg_left_out,
					gs_frame_ovhg_right_out		= gs_frame_ovhg_right_out,
					gs_frame_ovhg_left_in		= gs_frame_ovhg_left_in,
					gs_frame_ovhg_right_in		= gs_frame_ovhg_right_in,
					gs_sash_thk					= gs_sash_thk,
					gs_sash_width				= gs_sash_width,
					FixGlassDir_m				= FixGlassDir_m,
					iMullionStyle				= iMullionStyle_01,
					gs_open_2D					= gs_open_2D,
					gs_openLength_2D			= gs_openLength_2D,
					gs_opLinePen				= gs_opLinePen,
					gs_iSwingType				= gs_iSwingType,
					gs_swingLineType			= gs_swingLineType,
					iLoD2D						= iLoD2D,
					gs_pen_2D					= gs_pen_2D,
					gs_frame_pen_cont			= gs_frame_pen_cont,
					gs_fillFr					= gs_fillFr,
					gs_penFr_fg					= gs_penFr_fg,
					gs_penFr_bg					= gs_penFr_bg,
					gs_fillSh					= gs_fillSash,
					gs_penSh_fg					= gs_penSash_fg,
					gs_penSh_bg					= gs_penSash_bg,
					gs_fillShCover				= gs_fillShCover,
					gs_penShCov_fg       		= gs_penShCov_fg,
					gs_penShCov_bg      		= gs_penShCov_bg,
					gs_glass_thk				= gs_glass_thk,
					sh_UnID						= 1000,
					bShowUnitHotspots			= bShowUnitHotspots
endif

if	iWindowType = WIN_W2			|\
	iWindowType = WIN_WSingleHung2	|\
	iWindowType = WIN_WDoubleHung2	|\
	iWindowType = WIN_W2Sidelight 	then

	! Draw Left sash --------------------------------------------------------------

	add2 -gs_SLight_w/2, 0

	call "BasicWindowPanelStraight",
		parameters	A							= ac_unit_width - gs_SLight_w,
					iTypeDemolitionFill			= iTypeDemolitionFill,
					gs_Demolition_linetype		= gs_Demolition_linetype,
					gs_optype_m					= gs_optype_m_01,
					bLeftCornerFunction			= bLeftCornerFunction,
					bRightCornerFunction		= 0,
					gs_frame_thk				= gs_frame_thk,
					gs_frame_width				= gs_Mullion_w/2,
					gs_frame_width_left			= gs_frame_width_left,
					gs_frame_right_endline		= 0,
					gs_frame_left_endline		= not ((gs_tolerance_left > EPS) & gs_stack_left),
					gs_frame_right_endline_comp	= 0,
					gs_frame_left_endline_comp	= 1 + (gs_left_oversize < EPS),
					gs_frame_right_unitline		= 0,
					gs_frame_left_unitline		= 1,
					gs_frame_cut_width			= gs_rebate_width,
					gs_frame_cut_depth			= gs_rebate_depth,
					gs_bFrameLeft				= 1,
					gs_bFrameRight				= 1,
					gs_frame_ovhg_left_out		= gs_frame_ovhg_left_out,
					gs_frame_ovhg_right_out		= 0,
					gs_frame_ovhg_left_in		= gs_frame_ovhg_left_in,
					gs_frame_ovhg_right_in		= 0,
					gs_sash_thk					= gs_sash_thk,
					gs_sash_width				= gs_sash_width,
					FixGlassDir_m				= FixGlassDir_m,
					iMullionStyle				= iMullionStyle_01,
					gs_open_2D					= gs_open_2D,
					gs_openLength_2D			= gs_openLength_2D,
					gs_opLinePen				= gs_opLinePen,
					gs_iSwingType				= gs_iSwingType,
					gs_swingLineType			= gs_swingLineType,
					iLoD2D						= iLoD2D,
					gs_pen_2D					= gs_pen_2D,
					gs_frame_pen_cont			= gs_frame_pen_cont,
					gs_fillFr					= gs_fillFr,
					gs_penFr_fg					= gs_penFr_fg,
					gs_penFr_bg					= gs_penFr_bg,
					gs_fillSh					= gs_fillSash,
					gs_penSh_fg					= gs_penSash_fg,
					gs_penSh_bg					= gs_penSash_bg,
					gs_fillShCover				= gs_fillShCover,
					gs_penShCov_fg       		= gs_penShCov_fg,
					gs_penShCov_bg      		= gs_penShCov_bg,
					gs_glass_thk				= gs_glass_thk,
					sh_UnID						= 1000,
					bShowUnitHotspots			= bShowUnitHotspots
	del 1


	! Draw Right Sash -------------------------------------------------------------

	add2 ac_unit_width/2 - gs_SLight_w/2, 0

	call "BasicWindowPanelStraight",
		parameters	A							= gs_SLight_w,
					iTypeDemolitionFill			= iTypeDemolitionFill,
					gs_Demolition_linetype		= gs_Demolition_linetype,
					gs_optype_m					= gs_optype_m_05,
					bLeftCornerFunction			= 0,
					bRightCornerFunction		= bRightCornerFunction | bCornerWindow,
					gs_frame_thk				= gs_frame_thk,
					gs_frame_width				= gs_frame_width,
					gs_frame_width_left			= gs_Mullion_w/2,
					gs_frame_right_endline		= not(bCornerWindow) & not ((gs_tolerance_right > EPS) & gs_stack_right),
					gs_frame_left_endline		= 0,
					gs_frame_right_endline_comp	= 1 + (gs_right_oversize < EPS),
					gs_frame_left_endline_comp	= 0,
					gs_frame_right_unitline		= not(bCornerWindow),
					gs_frame_left_unitline		= 0,
					gs_frame_cut_width			= gs_rebate_width,
					gs_frame_cut_depth			= gs_rebate_depth,
					gs_bFrameLeft				= 1,
					gs_bFrameRight				= 1,
					gs_frame_ovhg_left_out		= 0,
					gs_frame_ovhg_right_out		= gs_frame_ovhg_right_out,
					gs_frame_ovhg_left_in		= 0,
					gs_frame_ovhg_right_in		= gs_frame_ovhg_right_in,
					gs_sash_thk					= gs_sash_thk,
					gs_sash_width				= gs_sash_width,
					FixGlassDir_m				= FixGlassDir_m,
					iMullionStyle				= iMullionStyle_05,
					gs_open_2D					= gs_open_2D,
					gs_openLength_2D			= gs_openLength_2D,
					gs_opLinePen				= gs_opLinePen,
					gs_iSwingType				= gs_iSwingType,
					gs_swingLineType			= gs_swingLineType,
					iLoD2D						= iLoD2D,
					gs_pen_2D					= gs_pen_2D,
					gs_frame_pen_cont			= gs_frame_pen_cont,
					gs_fillFr					= gs_fillFr,
					gs_penFr_fg					= gs_penFr_fg,
					gs_penFr_bg					= gs_penFr_bg,
					gs_fillSh					= gs_fillSash,
					gs_penSh_fg					= gs_penSash_fg,
					gs_penSh_bg					= gs_penSash_bg,
					gs_fillShCover				= gs_fillShCover,
					gs_penShCov_fg       		= gs_penShCov_fg,
					gs_penShCov_bg      		= gs_penShCov_bg,
					gs_glass_thk				= gs_glass_thk,
					sh_UnID						= 1010,
					bShowUnitHotspots			= bShowUnitHotspots
	del 1
endif

if iWindowType = WIN_WDoubleSash then
	! --- Double Window ------------------------------------------------------------

	add2 -ac_unit_width / 2 + (ac_unit_width-gs_SLight_w) / 2, 0

	call "BasicWindowPanelStraight",
		parameters	A							= ac_unit_width-gs_SLight_w,
					iTypeDemolitionFill			= iTypeDemolitionFill,
					gs_Demolition_linetype		= gs_Demolition_linetype,
					gs_optype_m					= gs_optype_m_01,
					bLeftCornerFunction			= bLeftCornerFunction,
					bRightCornerFunction		= 0,
					gs_frame_thk				= gs_frame_thk,
					gs_frame_width				= gs_frame_width,
					gs_frame_width_left			= gs_frame_width_left,
					gs_frame_right_endline		= 0,
					gs_frame_left_endline		= not ((gs_tolerance_left > EPS) & gs_stack_left),
					gs_frame_right_endline_comp	= 0,
					gs_frame_left_endline_comp	= 1 + (gs_left_oversize < EPS),
					gs_frame_right_unitline		= 0,
					gs_frame_left_unitline		= 1,
					gs_frame_cut_width			= gs_rebate_width,
					gs_frame_cut_depth			= gs_rebate_depth,
					gs_bFrameLeft				= 1,
					gs_bFrameRight				= 0,
					gs_frame_ovhg_left_out		= gs_frame_ovhg_left_out,
					gs_frame_ovhg_right_out		= 0,
					gs_frame_ovhg_left_in		= gs_frame_ovhg_left_in,
					gs_frame_ovhg_right_in		= 0,
					gs_sash_thk					= gs_sash_thk,
					gs_sash_width				= gs_sash_width,
					FixGlassDir_m				= FixGlassDir_m,
					iMullionStyle				= iMullionStyle_01,
					gs_open_2D					= gs_open_2D,
					gs_openLength_2D			= gs_openLength_2D,
					gs_opLinePen				= gs_opLinePen,
					gs_iSwingType				= gs_iSwingType,
					gs_swingLineType			= gs_swingLineType,
					iLoD2D						= iLoD2D,
					gs_pen_2D					= gs_pen_2D,
					gs_frame_pen_cont			= gs_frame_pen_cont,
					gs_fillFr					= gs_fillFr,
					gs_penFr_fg					= gs_penFr_fg,
					gs_penFr_bg					= gs_penFr_bg,
					gs_fillSh					= gs_fillSash,
					gs_penSh_fg					= gs_penSash_fg,
					gs_penSh_bg					= gs_penSash_bg,
					gs_fillShCover				= gs_fillShCover,
					gs_penShCov_fg       		= gs_penShCov_fg,
					gs_penShCov_bg      		= gs_penShCov_bg,
					gs_glass_thk				= gs_glass_thk,
					sh_UnID						= 1000,
					bShowUnitHotspots			= bShowUnitHotspots
	del 1


	add2 ac_unit_width / 2  - gs_SLight_w / 2, 0

	call "BasicWindowPanelStraight",
		parameters	A							= gs_SLight_w,
					iTypeDemolitionFill			= iTypeDemolitionFill,
					gs_Demolition_linetype		= gs_Demolition_linetype,
					gs_optype_m					= gs_optype_m_05,
					bLeftCornerFunction			= 0,
					bRightCornerFunction		= bRightCornerFunction | bCornerWindow,
					gs_frame_thk				= gs_frame_thk,
					gs_frame_width				= gs_frame_width,
					gs_frame_right_endline		= not(bCornerWindow) & not ((gs_tolerance_right > EPS) & gs_stack_right),
					gs_frame_left_endline		= 0,
					gs_frame_right_endline_comp	= 1 + (gs_right_oversize < EPS),
					gs_frame_left_endline_comp	= 0,
					gs_frame_right_unitline		= not(bCornerWindow),
					gs_frame_left_unitline		= 0,
					gs_frame_cut_width			= gs_rebate_width,
					gs_frame_cut_depth			= gs_rebate_depth,
					gs_bFrameLeft				= 0,
					gs_bFrameRight				= 1,
					gs_frame_ovhg_left_out		= 0,
					gs_frame_ovhg_right_out		= gs_frame_ovhg_right_out,
					gs_frame_ovhg_left_in		= 0,
					gs_frame_ovhg_right_in		= gs_frame_ovhg_right_in,
					gs_sash_thk					= gs_sash_thk,
					gs_sash_width				= gs_sash_width,
					FixGlassDir_m				= FixGlassDir_m,
					iMullionStyle				= iMullionStyle_05,
					gs_open_2D					= gs_open_2D,
					gs_openLength_2D			= gs_openLength_2D,
					gs_opLinePen				= gs_opLinePen,
					gs_iSwingType				= gs_iSwingType,
					gs_swingLineType			= gs_swingLineType,
					iLoD2D						= iLoD2D,
					gs_pen_2D					= gs_pen_2D,
					gs_frame_pen_cont			= gs_frame_pen_cont,
					gs_fillFr					= gs_fillFr,
					gs_penFr_fg					= gs_penFr_fg,
					gs_penFr_bg					= gs_penFr_bg,
					gs_fillSh					= gs_fillSash,
					gs_penSh_fg					= gs_penSash_fg,
					gs_penSh_bg					= gs_penSash_bg,
					gs_fillShCover				= gs_fillShCover,
					gs_penShCov_fg       		= gs_penShCov_fg,
					gs_penShCov_bg      		= gs_penShCov_bg,
					gs_glass_thk				= gs_glass_thk,
					sh_UnID						= 1010,
					bShowUnitHotspots			= bShowUnitHotspots
	del 1
endif

if	iWindowType = WIN_W3				|\
	iWindowType = WIN_WSingleHung3		|\
	iWindowType = WIN_WDoubleHung3		|\
	iWindowType = WIN_W32Sidelights1	|\
	iWindowType = WIN_W32Sidelights2	then

	! Draw Left sash --------------------------------------------------------------

	add2 -ac_unit_width/2 + gs_LeftSLight_w/2, 0

	call "BasicWindowPanelStraight",
		parameters	A							= gs_LeftSLight_w,
					iTypeDemolitionFill			= iTypeDemolitionFill,
					gs_Demolition_linetype		= gs_Demolition_linetype,
					gs_optype_m					= gs_optype_m_09,
					bLeftCornerFunction			= bLeftCornerFunction,
					bRightCornerFunction		= 0,
					gs_frame_thk				= gs_frame_thk,
					gs_frame_width				= gs_Mullion_w_left/2,
					gs_frame_width_left			= gs_frame_width_left,
					gs_frame_right_endline		= 0,
					gs_frame_left_endline		= not ((gs_tolerance_left > EPS) & gs_stack_left),
					gs_frame_right_endline_comp	= 0,
					gs_frame_left_endline_comp	= 1 + (gs_left_oversize < EPS),
					gs_frame_right_unitline		= 0,
					gs_frame_left_unitline		= 1,
					gs_frame_cut_width			= gs_rebate_width,
					gs_frame_cut_depth			= gs_rebate_depth,
					gs_bFrameLeft				= 1,
					gs_bFrameRight				= 1,
					gs_frame_ovhg_left_out		= gs_frame_ovhg_left_out,
					gs_frame_ovhg_right_out		= 0,
					gs_frame_ovhg_left_in		= gs_frame_ovhg_left_in,
					gs_frame_ovhg_right_in		= 0,
					gs_sash_thk					= gs_sash_thk,
					gs_sash_width				= gs_sash_width,
					FixGlassDir_m				= FixGlassDir_m,
					iMullionStyle				= iMullionStyle_09,
					gs_open_2D					= gs_open_2D,
					gs_openLength_2D			= gs_openLength_2D,
					gs_opLinePen				= gs_opLinePen,
					gs_iSwingType				= gs_iSwingType,
					gs_swingLineType			= gs_swingLineType,
					iLoD2D						= iLoD2D,
					gs_pen_2D					= gs_pen_2D,
					gs_frame_pen_cont			= gs_frame_pen_cont,
					gs_fillFr					= gs_fillFr,
					gs_penFr_fg					= gs_penFr_fg,
					gs_penFr_bg					= gs_penFr_bg,
					gs_fillSh					= gs_fillSash,
					gs_penSh_fg					= gs_penSash_fg,
					gs_penSh_bg					= gs_penSash_bg,
					gs_fillShCover				= gs_fillShCover,
					gs_penShCov_fg       		= gs_penShCov_fg,
					gs_penShCov_bg      		= gs_penShCov_bg,
					gs_glass_thk				= gs_glass_thk,
					sh_UnID						= 1000,
					bShowUnitHotspots			= bShowUnitHotspots
	del 1


	! Draw Main sash --------------------------------------------------------------

	cavityLeft = -ac_unit_width/2 + gs_LeftSLight_w
	cavityRight = ac_unit_width/2 - gs_SLight_w

	add2 (cavityLeft + cavityRight)/2,0

	call "BasicWindowPanelStraight",
		parameters	A							= cavityRight - cavityLeft,
					iTypeDemolitionFill			= iTypeDemolitionFill,
					gs_Demolition_linetype		= gs_Demolition_linetype,
					gs_optype_m					= gs_optype_m_01,
					bLeftCornerFunction			= 0,
					bRightCornerFunction		= 0,
					gs_frame_thk				= gs_frame_thk,
					gs_frame_width				= gs_Mullion_w/2,
					gs_frame_width_left			= gs_Mullion_w_left/2,
					gs_frame_right_endline		= 0,
					gs_frame_left_endline		= 0,
					gs_frame_right_endline_comp	= 0,
					gs_frame_left_endline_comp	= 0,
					gs_frame_right_unitline		= 0,
					gs_frame_left_unitline		= 0,
					gs_frame_cut_width			= gs_rebate_width,
					gs_frame_cut_depth			= gs_rebate_depth,
					gs_bFrameLeft				= 1,
					gs_bFrameRight				= 1,
					gs_frame_ovhg_left_out		= 0,
					gs_frame_ovhg_right_out		= 0,
					gs_frame_ovhg_left_in		= 0,
					gs_frame_ovhg_right_in		= 0,
					gs_sash_thk					= gs_sash_thk,
					gs_sash_width				= gs_sash_width,
					FixGlassDir_m				= FixGlassDir_m,
					iMullionStyle				= iMullionStyle_01,
					gs_open_2D					= gs_open_2D,
					gs_openLength_2D			= gs_openLength_2D,
					gs_opLinePen				= gs_opLinePen,
					gs_iSwingType				= gs_iSwingType,
					gs_swingLineType			= gs_swingLineType,
					iLoD2D						= iLoD2D,
					gs_pen_2D					= gs_pen_2D,
					gs_frame_pen_cont			= gs_frame_pen_cont,
					gs_fillFr					= gs_fillFr,
					gs_penFr_fg					= gs_penFr_fg,
					gs_penFr_bg					= gs_penFr_bg,
					gs_fillSh					= gs_fillSash,
					gs_penSh_fg					= gs_penSash_fg,
					gs_penSh_bg					= gs_penSash_bg,
					gs_fillShCover				= gs_fillShCover,
					gs_penShCov_fg       		= gs_penShCov_fg,
					gs_penShCov_bg      		= gs_penShCov_bg,
					gs_glass_thk				= gs_glass_thk,
					sh_UnID						= 1010,
					bShowUnitHotspots			= bShowUnitHotspots
	del 1


	! Draw Right Sash -------------------------------------------------------------

	add2 ac_unit_width/2 - gs_SLight_w/2, 0

	call "BasicWindowPanelStraight",
		parameters	A							= gs_SLight_w,
					iTypeDemolitionFill			= iTypeDemolitionFill,
					gs_Demolition_linetype		= gs_Demolition_linetype,
					gs_optype_m					= gs_optype_m_05,
					bLeftCornerFunction			= 0,
					bRightCornerFunction		= bRightCornerFunction | bCornerWindow,
					gs_frame_thk				= gs_frame_thk,
					gs_frame_width				= gs_frame_width,
					gs_frame_width_left			= gs_mullion_w/2,
					gs_frame_right_endline		= not(bCornerWindow) & not ((gs_tolerance_right > EPS) & gs_stack_right),
					gs_frame_left_endline		= not ((gs_tolerance_left > EPS) & gs_stack_left),
					gs_frame_right_endline_comp	= 1 + (gs_right_oversize < EPS),
					gs_frame_left_endline_comp	= 0,
					gs_frame_right_unitline		= not(bCornerWindow),
					gs_frame_left_unitline		= 0,
					gs_frame_cut_width			= gs_rebate_width,
					gs_frame_cut_depth			= gs_rebate_depth,
					gs_bFrameLeft				= 1,
					gs_bFrameRight				= 1,
					gs_frame_ovhg_left_out		= 0,
					gs_frame_ovhg_right_out		= gs_frame_ovhg_right_out,
					gs_frame_ovhg_left_in		= 0,
					gs_frame_ovhg_right_in		= gs_frame_ovhg_right_in,
					gs_sash_thk					= gs_sash_thk,
					gs_sash_width				= gs_sash_width,
					FixGlassDir_m				= FixGlassDir_m,
					iMullionStyle				= iMullionStyle_05,
					gs_open_2D					= gs_open_2D,
					gs_openLength_2D			= gs_openLength_2D,
					gs_opLinePen				= gs_opLinePen,
					gs_iSwingType				= gs_iSwingType,
					gs_swingLineType			= gs_swingLineType,
					iLoD2D						= iLoD2D,
					gs_pen_2D					= gs_pen_2D,
					gs_frame_pen_cont			= gs_frame_pen_cont,
					gs_fillFr					= gs_fillFr,
					gs_penFr_fg					= gs_penFr_fg,
					gs_penFr_bg					= gs_penFr_bg,
					gs_fillSh					= gs_fillSash,
					gs_penSh_fg					= gs_penSash_fg,
					gs_penSh_bg					= gs_penSash_bg,
					gs_fillShCover				= gs_fillShCover,
					gs_penShCov_fg       		= gs_penShCov_fg,
					gs_penShCov_bg      		= gs_penShCov_bg,
					gs_glass_thk				= gs_glass_thk,
					sh_UnID						= 1020,
					bShowUnitHotspots			= bShowUnitHotspots
	del 1
endif

if iWindowType = WIN_WVariable then
	if not(gs_bSLight) then

		call "BasicWindowPanelStraight",
			parameters	A							= ac_unit_width,
						iTypeDemolitionFill			= iTypeDemolitionFill,
						gs_Demolition_linetype		= gs_Demolition_linetype,
						gs_optype_m					= gs_optype_m_01,
						bLeftCornerFunction			= bLeftCornerFunction,
						bRightCornerFunction		= bRightCornerFunction | bCornerWindow,
						gs_frame_thk				= gs_frame_thk,
						gs_frame_width				= gs_frame_width,
						gs_frame_width_left			= gs_frame_width_left,
						gs_frame_right_endline		= not(bCornerWindow) & not ((gs_tolerance_right > EPS) & gs_stack_right),
						gs_frame_left_endline		= not ((gs_tolerance_left > EPS) & gs_stack_left),
						gs_frame_right_endline_comp	= 1 + (gs_right_oversize < EPS),
						gs_frame_left_endline_comp	= 1 + (gs_left_oversize < EPS),
						gs_frame_right_unitline		= not(bCornerWindow),
						gs_frame_left_unitline		= 1,
						gs_frame_cut_width			= gs_rebate_width,
						gs_frame_cut_depth			= gs_rebate_depth,
						gs_bFrameLeft				= 1,
						gs_bFrameRight				= 1,
						gs_frame_ovhg_left_out		= gs_frame_ovhg_left_out,
						gs_frame_ovhg_right_out		= gs_frame_ovhg_right_out,
						gs_frame_ovhg_left_in		= gs_frame_ovhg_left_in,
						gs_frame_ovhg_right_in		= gs_frame_ovhg_right_in,
						gs_sash_thk					= gs_sash_thk,
						gs_sash_width				= gs_sash_width,
						FixGlassDir_m				= FixGlassDir_m,
						iMullionStyle				= iMullionStyle_01,
						gs_open_2D					= gs_open_2D,
						gs_openLength_2D			= gs_openLength_2D,
						gs_opLinePen				= gs_opLinePen,
						gs_iSwingType				= gs_iSwingType,
						gs_swingLineType			= gs_swingLineType,
						iLoD2D						= iLoD2D,
						gs_pen_2D					= gs_pen_2D,
						gs_frame_pen_cont			= gs_frame_pen_cont,
						gs_fillFr					= gs_fillFr,
						gs_penFr_fg					= gs_penFr_fg,
						gs_penFr_bg					= gs_penFr_bg,
						gs_fillSh					= gs_fillSash,
						gs_penSh_fg					= gs_penSash_fg,
						gs_penSh_bg					= gs_penSash_bg,
						gs_fillShCover				= gs_fillShCover,
						gs_penShCov_fg       		= gs_penShCov_fg,
						gs_penShCov_bg      		= gs_penShCov_bg,
						bFrCornerLeft				= bFrCornerLeft,
						gs_glass_thk				= gs_glass_thk,
						sh_UnID						= 1000,
						bShowUnitHotspots			= bShowUnitHotspots
	else
		! Draw Left sash --------------------------------------------------------------

		add2 -gs_SLight_w/2, 0

		call "BasicWindowPanelStraight",
			parameters	A							= ac_unit_width-gs_SLight_w,
						iTypeDemolitionFill			= iTypeDemolitionFill,
						gs_Demolition_linetype		= gs_Demolition_linetype,
						gs_optype_m					= gs_optype_m_01,
						bLeftCornerFunction			= bLeftCornerFunction,
						bRightCornerFunction		= 0,
						gs_frame_thk				= gs_frame_thk,
						gs_frame_width				= gs_Mullion_w/2,
						gs_frame_width_left			= gs_frame_width_left,
						gs_frame_right_endline		= 0,
						gs_frame_left_endline		= not ((gs_tolerance_left > EPS) & gs_stack_left),
						gs_frame_right_endline_comp	= 0,
						gs_frame_left_endline_comp	= 1 + (gs_left_oversize < EPS),
						gs_frame_right_unitline		= 0,
						gs_frame_left_unitline		= 1,
						gs_frame_cut_width			= gs_rebate_width,
						gs_frame_cut_depth			= gs_rebate_depth,
						gs_bFrameLeft				= 1,
						gs_bFrameRight				= 1,
						gs_frame_ovhg_left_out		= gs_frame_ovhg_left_out,
						gs_frame_ovhg_right_out		= 0,
						gs_frame_ovhg_left_in		= gs_frame_ovhg_left_in,
						gs_frame_ovhg_right_in		= 0,
						gs_sash_thk					= gs_sash_thk,
						gs_sash_width				= gs_sash_width,
						FixGlassDir_m				= FixGlassDir_m,
						iMullionStyle				= iMullionStyle_01,
						gs_open_2D					= gs_open_2D,
						gs_openLength_2D			= gs_openLength_2D,
						gs_opLinePen				= gs_opLinePen,
						gs_iSwingType				= gs_iSwingType,
						gs_swingLineType			= gs_swingLineType,
						iLoD2D						= iLoD2D,
						gs_pen_2D					= gs_pen_2D,
						gs_frame_pen_cont			= gs_frame_pen_cont,
						gs_fillFr					= gs_fillFr,
						gs_penFr_fg					= gs_penFr_fg,
						gs_penFr_bg					= gs_penFr_bg,
						gs_fillSh					= gs_fillSash,
						gs_penSh_fg					= gs_penSash_fg,
						gs_penSh_bg					= gs_penSash_bg,
						gs_fillShCover				= gs_fillShCover,
						gs_penShCov_fg       		= gs_penShCov_fg,
						gs_penShCov_bg      		= gs_penShCov_bg,
						bFrCornerLeft				= bFrCornerLeft,
						gs_glass_thk				= gs_glass_thk,
						sh_UnID						= 1000,
						bShowUnitHotspots			= bShowUnitHotspots
		del 1

		! Draw Right sash -------------------------------------------------------------

		add2 ac_unit_width/2 - gs_SLight_w/2, 0

		call "BasicWindowPanelStraight",
			parameters	A							= gs_SLight_w,
						iTypeDemolitionFill			= iTypeDemolitionFill,
						gs_Demolition_linetype		= gs_Demolition_linetype,
						gs_optype_m					= gs_optype_m_05,
						bLeftCornerFunction			= 0,
						bRightCornerFunction		= bRightCornerFunction | bCornerWindow,
						gs_frame_thk				= gs_frame_thk,
						gs_frame_width				= gs_frame_width,
						gs_frame_width_left			= gs_Mullion_w/2,
						gs_frame_right_endline		= not(bCornerWindow) & not ((gs_tolerance_right > EPS) & gs_stack_right),
						gs_frame_left_endline		= 0,
						gs_frame_right_endline_comp	= 1 + (gs_right_oversize < EPS),
						gs_frame_left_endline_comp	= 0,
						gs_frame_right_unitline		= not(bCornerWindow),
						gs_frame_left_unitline		= 0,
						gs_frame_cut_width			= gs_rebate_width,
						gs_frame_cut_depth			= gs_rebate_depth,
						gs_bFrameLeft				= 1,
						gs_bFrameRight				= 1,
						gs_frame_ovhg_left_out		= 0,
						gs_frame_ovhg_right_out		= gs_frame_ovhg_right_out,
						gs_frame_ovhg_left_in		= 0,
						gs_frame_ovhg_right_in		= gs_frame_ovhg_right_in,
						gs_sash_thk					= gs_sash_thk,
						gs_sash_width				= gs_sash_width,
						FixGlassDir_m				= FixGlassDir_m,
						iMullionStyle				= iMullionStyle_05,
						gs_open_2D					= gs_open_2D,
						gs_openLength_2D			= gs_openLength_2D,
						gs_opLinePen				= gs_opLinePen,
						gs_iSwingType				= gs_iSwingType,
						gs_swingLineType			= gs_swingLineType,
						iLoD2D						= iLoD2D,
						gs_pen_2D					= gs_pen_2D,
						gs_frame_pen_cont			= gs_frame_pen_cont,
						gs_fillFr					= gs_fillFr,
						gs_penFr_fg					= gs_penFr_fg,
						gs_penFr_bg					= gs_penFr_bg,
						gs_fillSh					= gs_fillSash,
						gs_penSh_fg					= gs_penSash_fg,
						gs_penSh_bg					= gs_penSash_bg,
						gs_fillShCover				= gs_fillShCover,
						gs_penShCov_fg       		= gs_penShCov_fg,
						gs_penShCov_bg      		= gs_penShCov_bg,
						bFrCornerRight				= bFrCornerRight,
						gs_glass_thk				= gs_glass_thk,
						sh_UnID						= 1010,
						bShowUnitHotspots			= bShowUnitHotspots
		del 1

	endif
endif

if iWindowType = WIN_WVariableDoubleSash then

	if not(gs_bSLight) then

		add2 -gs_MidPane_w/2, 0

		call "BasicWindowPanelStraight",
			parameters	A							= ac_unit_width-gs_MidPane_w,
						iTypeDemolitionFill			= iTypeDemolitionFill,
						gs_Demolition_linetype		= gs_Demolition_linetype,
						gs_optype_m					= gs_optype_m_09,
						bLeftCornerFunction			= bLeftCornerFunction,
						bRightCornerFunction		= 0,
						gs_frame_thk				= gs_frame_thk,
						gs_frame_width				= gs_frame_width,
						gs_frame_width_left			= gs_frame_width_left,
						gs_frame_right_endline		= 0,
						gs_frame_left_endline		= not ((gs_tolerance_left > EPS) & gs_stack_left),
						gs_frame_right_endline_comp	= 0,
						gs_frame_left_endline_comp	= 1 + (gs_left_oversize < EPS),
						gs_frame_right_unitline		= 0,
						gs_frame_left_unitline		= 1,
						gs_frame_cut_width			= gs_rebate_width,
						gs_frame_cut_depth			= gs_rebate_depth,
						gs_bFrameLeft				= 1,
						gs_bFrameRight				= 0,
						gs_frame_ovhg_left_out		= gs_frame_ovhg_left_out,
						gs_frame_ovhg_right_out		= 0,
						gs_frame_ovhg_left_in		= gs_frame_ovhg_left_in,
						gs_frame_ovhg_right_in		= 0,
						gs_sash_thk					= gs_sash_thk,
						gs_sash_width				= gs_sash_width,
						FixGlassDir_m				= FixGlassDir_m,
						iMullionStyle				= iMullionStyle_09,
						gs_open_2D					= gs_open_2D,
						gs_openLength_2D			= gs_openLength_2D,
						gs_opLinePen				= gs_opLinePen,
						gs_iSwingType				= gs_iSwingType,
						gs_swingLineType			= gs_swingLineType,
						iLoD2D						= iLoD2D,
						gs_pen_2D					= gs_pen_2D,
						gs_frame_pen_cont			= gs_frame_pen_cont,
						gs_fillFr					= gs_fillFr,
						gs_penFr_fg					= gs_penFr_fg,
						gs_penFr_bg					= gs_penFr_bg,
						gs_fillSh					= gs_fillSash,
						gs_penSh_fg					= gs_penSash_fg,
						gs_penSh_bg					= gs_penSash_bg,
						gs_fillShCover				= gs_fillShCover,
						gs_penShCov_fg       		= gs_penShCov_fg,
						gs_penShCov_bg      		= gs_penShCov_bg,
						bFrCornerLeft				= bFrCornerLeft,
						gs_glass_thk				= gs_glass_thk,
						sh_UnID						= 1000,
						bShowUnitHotspots			= bShowUnitHotspots
		del 1

		add2 ac_unit_width / 2  - gs_MidPane_w / 2, 0

		call "BasicWindowPanelStraight",
			parameters	A							= gs_MidPane_w,
						iTypeDemolitionFill			= iTypeDemolitionFill,
						gs_Demolition_linetype		= gs_Demolition_linetype,
						gs_optype_m					= gs_optype_m_01,
						bLeftCornerFunction			= 0,
						bRightCornerFunction		= bRightCornerFunction | bCornerWindow,
						gs_frame_thk				= gs_frame_thk,
						gs_frame_width				= gs_frame_width,
						gs_frame_right_endline		= not(bCornerWindow) & not ((gs_tolerance_right > EPS) & gs_stack_right),
						gs_frame_left_endline		= 0,
						gs_frame_right_endline_comp	= 1 + (gs_right_oversize < EPS),
						gs_frame_left_endline_comp	= 0,
						gs_frame_right_unitline		= not(bCornerWindow),
						gs_frame_left_unitline		= 0,
						gs_frame_cut_width			= gs_rebate_width,
						gs_frame_cut_depth			= gs_rebate_depth,
						gs_bFrameLeft				= 0,
						gs_bFrameRight				= 1,
						gs_frame_ovhg_left_out		= 0,
						gs_frame_ovhg_right_out		= gs_frame_ovhg_right_out,
						gs_frame_ovhg_left_in		= 0,
						gs_frame_ovhg_right_in		= gs_frame_ovhg_right_in,
						gs_sash_thk					= gs_sash_thk,
						gs_sash_width				= gs_sash_width,
						FixGlassDir_m				= FixGlassDir_m,
						iMullionStyle				= iMullionStyle_01,
						gs_open_2D					= gs_open_2D,
						gs_openLength_2D			= gs_openLength_2D,
						gs_opLinePen				= gs_opLinePen,
						gs_iSwingType				= gs_iSwingType,
						gs_swingLineType			= gs_swingLineType,
						iLoD2D						= iLoD2D,
						gs_pen_2D					= gs_pen_2D,
						gs_frame_pen_cont			= gs_frame_pen_cont,
						gs_fillFr					= gs_fillFr,
						gs_penFr_fg					= gs_penFr_fg,
						gs_penFr_bg					= gs_penFr_bg,
						gs_fillSh					= gs_fillSash,
						gs_penSh_fg					= gs_penSash_fg,
						gs_penSh_bg					= gs_penSash_bg,
						gs_fillShCover				= gs_fillShCover,
						gs_penShCov_fg       		= gs_penShCov_fg,
						gs_penShCov_bg      		= gs_penShCov_bg,
						gs_glass_thk				= gs_glass_thk,
						sh_UnID						= 1010,
						bShowUnitHotspots			= bShowUnitHotspots
		del 1
	else
		! Double Window with Sidelight ------------------------------------------------

		! --- Draw sash # 1 ---

		add2 -gs_MidPane_w/2 - gs_SLight_w/2, 0
		call "BasicWindowPanelStraight",
			parameters	A							= ac_unit_width-gs_MidPane_w-gs_SLight_w,
						iTypeDemolitionFill			= iTypeDemolitionFill,
						gs_Demolition_linetype		= gs_Demolition_linetype,
						gs_optype_m					= gs_optype_m_09,
						bLeftCornerFunction			= bLeftCornerFunction,
						bRightCornerFunction		= 0,
						gs_frame_thk				= gs_frame_thk,
						gs_frame_width				= gs_frame_width,
						gs_frame_width_left			= gs_frame_width_left,
						gs_frame_right_endline		= 0,
						gs_frame_left_endline		= not ((gs_tolerance_left > EPS) & gs_stack_left),
						gs_frame_right_endline_comp	= 0,
						gs_frame_left_endline_comp	= 1 + (gs_left_oversize < EPS),
						gs_frame_right_unitline		= 0,
						gs_frame_left_unitline		= 1,
						gs_frame_cut_width			= gs_rebate_width,
						gs_frame_cut_depth			= gs_rebate_depth,
						gs_bFrameLeft				= 1,
						gs_bFrameRight				= 0,
						gs_frame_ovhg_left_out		= gs_frame_ovhg_left_out,
						gs_frame_ovhg_right_out		= 0,
						gs_frame_ovhg_left_in		= gs_frame_ovhg_left_in,
						gs_frame_ovhg_right_in		= 0,
						gs_sash_thk					= gs_sash_thk,
						gs_sash_width				= gs_sash_width,
						FixGlassDir_m				= FixGlassDir_m,
						iMullionStyle				= iMullionStyle_09,
						gs_open_2D					= gs_open_2D,
						gs_openLength_2D			= gs_openLength_2D,
						gs_opLinePen				= gs_opLinePen,
						gs_iSwingType				= gs_iSwingType,
						gs_swingLineType			= gs_swingLineType,
						iLoD2D						= iLoD2D,
						gs_pen_2D					= gs_pen_2D,
						gs_frame_pen_cont			= gs_frame_pen_cont,
						gs_fillFr					= gs_fillFr,
						gs_penFr_fg					= gs_penFr_fg,
						gs_penFr_bg					= gs_penFr_bg,
						gs_fillSh					= gs_fillSash,
						gs_penSh_fg					= gs_penSash_fg,
						gs_penSh_bg					= gs_penSash_bg,
						gs_fillShCover				= gs_fillShCover,
						gs_penShCov_fg       		= gs_penShCov_fg,
						gs_penShCov_bg      		= gs_penShCov_bg,
						bFrCornerLeft				= bFrCornerLeft,
						gs_glass_thk				= gs_glass_thk,
						sh_UnID						= 1000,
						bShowUnitHotspots			= bShowUnitHotspots
		del 1

	! --- Draw sash # 2 ---


		add2 ac_unit_width/2 - gs_MidPane_w/2 - gs_SLight_w, 0

		call "BasicWindowPanelStraight",
			parameters	A							= gs_MidPane_w,
						iTypeDemolitionFill			= iTypeDemolitionFill,
						gs_Demolition_linetype		= gs_Demolition_linetype,
						gs_optype_m					= gs_optype_m_01,
						bLeftCornerFunction			= 0,
						bRightCornerFunction		= 0,
						gs_frame_thk				= gs_frame_thk,
						gs_frame_width				= gs_Mullion_w/2,
						gs_frame_right_endline		= 0,
						gs_frame_left_endline		= 0,
						gs_frame_right_endline_comp	= 0,
						gs_frame_left_endline_comp	= 0,
						gs_frame_right_unitline		= 0,
						gs_frame_left_unitline		= 0,
						gs_frame_cut_width			= gs_rebate_width,
						gs_frame_cut_depth			= gs_rebate_depth,
						gs_bFrameLeft				= 0,
						gs_bFrameRight				= 1,
						gs_frame_ovhg_left_out		= 0,
						gs_frame_ovhg_right_out		= 0,
						gs_frame_ovhg_left_in		= 0,
						gs_frame_ovhg_right_in		= 0,
						gs_sash_thk					= gs_sash_thk,
						gs_sash_width				= gs_sash_width,
						FixGlassDir_m				= FixGlassDir_m,
						iMullionStyle				= iMullionStyle_01,
						gs_open_2D					= gs_open_2D,
						gs_openLength_2D			= gs_openLength_2D,
						gs_opLinePen				= gs_opLinePen,
						gs_swingLineType			= gs_swingLineType,
						gs_iSwingType				= gs_iSwingType,
						iLoD2D						= iLoD2D,
						gs_pen_2D					= gs_pen_2D,
						gs_frame_pen_cont			= gs_frame_pen_cont,
						gs_fillFr					= gs_fillFr,
						gs_penFr_fg					= gs_penFr_fg,
						gs_penFr_bg					= gs_penFr_bg,
						gs_fillSh					= gs_fillSash,
						gs_penSh_fg					= gs_penSash_fg,
						gs_penSh_bg					= gs_penSash_bg,
						gs_fillShCover				= gs_fillShCover,
						gs_penShCov_fg       		= gs_penShCov_fg,
						gs_penShCov_bg      		= gs_penShCov_bg,
						gs_glass_thk				= gs_glass_thk,
						sh_UnID						= 1010,
						bShowUnitHotspots			= bShowUnitHotspots
		del 1


	! --- Sidelight ---
		add2 ac_unit_width/2 - gs_SLight_w/2, 0
		call "BasicWindowPanelStraight",
			parameters	A							= gs_SLight_w,
						iTypeDemolitionFill			= iTypeDemolitionFill,
						gs_Demolition_linetype		= gs_Demolition_linetype,
						gs_optype_m					= gs_optype_m_05,
						bLeftCornerFunction			= 0,
						bRightCornerFunction		= bRightCornerFunction | bCornerWindow,
						gs_frame_thk				= gs_frame_thk,
						gs_frame_width				= gs_frame_width,
						gs_frame_width_left			= gs_Mullion_w/2,
						gs_frame_right_endline		= not(bCornerWindow) & not ((gs_tolerance_right > EPS) & gs_stack_right),
						gs_frame_left_endline		= 0,
						gs_frame_right_endline_comp	= 1 + (gs_right_oversize < EPS),
						gs_frame_left_endline_comp	= 0,
						gs_frame_right_unitline		= not(bCornerWindow),
						gs_frame_left_unitline		= 0,
						gs_frame_cut_width			= gs_rebate_width,
						gs_frame_cut_depth			= gs_rebate_depth,
						gs_bFrameLeft				= 1,
						gs_bFrameRight				= 1,
						gs_frame_ovhg_left_out		= 0,
						gs_frame_ovhg_right_out		= gs_frame_ovhg_right_out,
						gs_frame_ovhg_left_in		= 0,
						gs_frame_ovhg_right_in		= gs_frame_ovhg_right_in,
						gs_sash_thk					= gs_sash_thk,
						gs_sash_width				= gs_sash_width,
						FixGlassDir_m				= FixGlassDir_m,
						iMullionStyle				= iMullionStyle_05,
						gs_open_2D					= gs_open_2D,
						gs_openLength_2D			= gs_openLength_2D,
						gs_opLinePen				= gs_opLinePen,
						gs_iSwingType				= gs_iSwingType,
						gs_swingLineType			= gs_swingLineType,
						iLoD2D						= iLoD2D,
						gs_pen_2D					= gs_pen_2D,
						gs_frame_pen_cont			= gs_frame_pen_cont,
						gs_fillFr					= gs_fillFr,
						gs_penFr_fg					= gs_penFr_fg,
						gs_penFr_bg					= gs_penFr_bg,
						gs_fillSh					= gs_fillSash,
						gs_penSh_fg					= gs_penSash_fg,
						gs_penSh_bg					= gs_penSash_bg,
						gs_fillShCover				= gs_fillShCover,
						gs_penShCov_fg       		= gs_penShCov_fg,
						gs_penShCov_bg      		= gs_penShCov_bg,
						bFrCornerRight				= bFrCornerRight,
						gs_glass_thk				= gs_glass_thk,
						sh_UnID						= 1020,
						bShowUnitHotspots			= bShowUnitHotspots
		del 1

	endif
endif

if iWindowType = WIN_MultisashHorizontal then

	! Draw Sashes ------------------------------------------------------------------

	_offsetX = -ac_unit_width/2
	sh_UnID	= 1000

	for iModule = 1 to _RepeatNum
		for iPane = 1 to gs_panes_number
			if iPane = 1 then
				_PaneWidth						= PaneWidthArray[iPane] + gs_frame_offset_left * (gs_repeat_modules | gs_panes_number = 1) * (iModule = 1)
				_bLeftCornerFunction			= bLeftCornerFunction
				_bRightCornerFunction			= 0
				_gs_frame_width					= MullionWidthArray[iPane]/2
				_gs_frame_width_left			= gs_frame_width_left
				_gs_frame_right_endline			= 0
				_gs_frame_left_endline			= not ((gs_tolerance_left > EPS) & gs_stack_left)
				_gs_frame_right_endline_comp	= 0
				_gs_frame_left_endline_comp		= 1 + (gs_left_oversize < EPS)
				_gs_frame_right_unitline		= 0
				_gs_frame_left_unitline			= 1
				_gs_frame_ovhg_left_out			= gs_frame_ovhg_left_out
				_gs_frame_ovhg_right_out		= 0
				_gs_frame_ovhg_left_in			= gs_frame_ovhg_left_in
				_gs_frame_ovhg_right_in			= 0
				_bFrCornerLeft					= not(bLeftGlassCorner)
				_bFrCornerRight					= 1

				if gs_repeat_modules & iModule > 1 then
					_gs_frame_width_left			= MullionWidth/2
					_gs_frame_left_endline			= 0
					_gs_frame_left_endline_comp		= 0
					_gs_frame_left_unitline			= 0
					_gs_frame_ovhg_left_out			= 0
					_gs_frame_ovhg_left_in			= 0
					_bFrCornerLeft					= 1
				endif

				if gs_panes_number = 1 & iModule = _RepeatNum then
					_bRightCornerFunction			= bRightCornerFunction | bCornerWindow
					if gs_repeat_modules then
						_PaneWidth					= _PaneWidth + gs_frame_offset_right * gs_repeat_modules * (gs_panes_number = 1 & iModule = _RepeatNum)
					else
						_PaneWidth					= ac_unit_width
					endif
					_gs_frame_width					= gs_frame_width
					_gs_frame_right_endline			= not(bCornerWindow) & not ((gs_tolerance_right > EPS) & gs_stack_right)
					_gs_frame_right_endline_comp	= 1 + (gs_right_oversize < EPS)
					_gs_frame_right_unitline		= not(bCornerWindow)
					_gs_frame_ovhg_right_out		= gs_frame_ovhg_right_out
					_gs_frame_ovhg_right_in			= gs_frame_ovhg_right_in	
					_bFrCornerRight					= not(bRightGlassCorner)
				endif
			else
				if iPane = gs_panes_number then
					_PaneWidth						= PaneWidthArray[iPane] + gs_frame_offset_right * gs_repeat_modules * (iModule = _RepeatNum)
					_bLeftCornerFunction			= 0
					_bRightCornerFunction			= bRightCornerFunction | bCornerWindow
					_gs_frame_width					= gs_frame_width
					_gs_frame_width_left			= MullionWidthArray[iPane-1]/2
					_gs_frame_right_endline			= not(bCornerWindow) & not ((gs_tolerance_right > EPS) & gs_stack_right)
					_gs_frame_left_endline			= 0
					_gs_frame_right_endline_comp	= 1 + (gs_right_oversize < EPS)
					_gs_frame_left_endline_comp		= 0
					_gs_frame_right_unitline		= not(bCornerWindow)
					_gs_frame_left_unitline			= 0
					_gs_frame_ovhg_left_out			= 0
					_gs_frame_ovhg_right_out		= gs_frame_ovhg_right_out
					_gs_frame_ovhg_left_in			= 0
					_gs_frame_ovhg_right_in			= gs_frame_ovhg_right_in
					_bFrCornerLeft					= 1
					_bFrCornerRight					= not(bRightGlassCorner)

					if gs_repeat_modules & iModule < _RepeatNum then
						_bRightCornerFunction			= 0
						_gs_frame_width					= MullionWidth/2
						_gs_frame_right_endline			= 0
						_gs_frame_right_endline_comp	= 0
						_gs_frame_right_unitline		= 0
						_gs_frame_ovhg_right_out		= 0
						_gs_frame_ovhg_right_in			= 0
						_bFrCornerRight					= 1
					endif
				else
					_PaneWidth						= PaneWidthArray[iPane]
					_bLeftCornerFunction			= 0
					_bRightCornerFunction			= 0
					_gs_frame_width					= MullionWidthArray[iPane]/2
					_gs_frame_width_left			= MullionWidthArray[iPane-1]/2
					_gs_frame_right_endline			= 0
					_gs_frame_left_endline			= 0
					_gs_frame_right_endline_comp	= 0
					_gs_frame_left_endline_comp		= 0
					_gs_frame_right_unitline		= 0
					_gs_frame_left_unitline			= 0
					_gs_frame_ovhg_left_out			= 0
					_gs_frame_ovhg_right_out		= 0
					_gs_frame_ovhg_left_in			= 0
					_gs_frame_ovhg_right_in			= 0
					_bFrCornerLeft					= 1
					_bFrCornerRight					= 1
				endif
			endif

			add2 _offsetX + _PaneWidth/2, 0
			call "BasicWindowPanelStraight",
				parameters	A							= _PaneWidth,
							iTypeDemolitionFill			= iTypeDemolitionFill,
							gs_Demolition_linetype		= gs_Demolition_linetype,
							gs_optype_m					= optypeIDArray[iPane],
							bLeftCornerFunction			= _bLeftCornerFunction,
							bRightCornerFunction		= _bRightCornerFunction,
							gs_frame_thk				= gs_frame_thk,
							gs_frame_width				= _gs_frame_width,
							gs_frame_width_left			= _gs_frame_width_left,
							gs_frame_right_endline		= _gs_frame_right_endline,
							gs_frame_left_endline		= _gs_frame_left_endline,
							gs_frame_right_endline_comp	= _gs_frame_right_endline_comp,
							gs_frame_left_endline_comp	= _gs_frame_left_endline_comp,
							gs_frame_right_unitline		= _gs_frame_right_unitline,
							gs_frame_left_unitline		= _gs_frame_left_unitline,
							gs_frame_cut_width			= gs_rebate_width,
							gs_frame_cut_depth			= gs_rebate_depth,
							gs_bFrameLeft				= 1,
							gs_bFrameRight				= 1,
							gs_frame_ovhg_left_out		= _gs_frame_ovhg_left_out,
							gs_frame_ovhg_right_out		= _gs_frame_ovhg_right_out,
							gs_frame_ovhg_left_in		= _gs_frame_ovhg_left_in,
							gs_frame_ovhg_right_in		= _gs_frame_ovhg_right_in,
							gs_sash_thk					= gs_sash_thk,
							gs_sash_width				= gs_sash_width,
							FixGlassDir_m				= FixGlassDir_m,
							iMullionStyle				= MullionStyleArray[iPane],
							gs_open_2D					= gs_open_2D,
							gs_openLength_2D			= gs_openLength_2D,
							gs_opLinePen				= gs_opLinePen,
							gs_iSwingType				= gs_iSwingType,
							gs_swingLineType			= gs_swingLineType,
							iLoD2D						= iLoD2D,
							gs_pen_2D					= gs_pen_2D,
							gs_frame_pen_cont			= gs_frame_pen_cont,
							gs_fillFr					= gs_fillFr,
							gs_penFr_fg					= gs_penFr_fg,
							gs_penFr_bg					= gs_penFr_bg,
							gs_fillSh					= gs_fillSash,
							gs_penSh_fg					= gs_penSash_fg,
							gs_penSh_bg					= gs_penSash_bg,
							gs_fillShCover				= gs_fillShCover,
							gs_penShCov_fg       		= gs_penShCov_fg,
							gs_penShCov_bg      		= gs_penShCov_bg,
							gs_glass_thk				= gs_glass_thk,
							sh_UnID						= sh_UnID,
							bFrCornerRight				= _bFrCornerRight,
							bFrCornerLeft				= _bFrCornerLeft,
							bShowUnitHotspots			= bShowUnitHotspots
			del 1

			_offsetX = _offsetX + _PaneWidth
			sh_UnID = sh_UnID + 10
		next iPane
	next iModule
endif

if iWindowType = WIN_MultisashVertical then

	! Draw Sash -------------------------------------------------------------------

	iPane = gs_iShowSashOnSymbol
	call "BasicWindowPanelStraight",
		parameters	A							= ac_unit_width,
					iTypeDemolitionFill			= iTypeDemolitionFill,
					gs_Demolition_linetype		= gs_Demolition_linetype,
					gs_optype_m					= optypeIDArray[iPane],
					bLeftCornerFunction			= bLeftCornerFunction,
					bRightCornerFunction		= bRightCornerFunction | bCornerWindow,
					gs_frame_thk				= gs_frame_thk,
					gs_frame_width				= gs_frame_width,
					gs_frame_width_left			= gs_frame_width_left,
					gs_frame_right_endline		= not(bCornerWindow) & not ((gs_tolerance_right > EPS) & gs_stack_right),
					gs_frame_left_endline		= not ((gs_tolerance_left > EPS) & gs_stack_left),
					gs_frame_right_endline_comp	= 1 + (gs_right_oversize < EPS),
					gs_frame_left_endline_comp	= 1 + (gs_left_oversize < EPS),
					gs_frame_right_unitline		= not(bCornerWindow),
					gs_frame_left_unitline		= 1,
					gs_frame_cut_width			= gs_rebate_width,
					gs_frame_cut_depth			= gs_rebate_depth,
					gs_bFrameLeft				= 1,
					gs_bFrameRight				= 1,
					gs_frame_ovhg_left_out		= gs_frame_ovhg_left_out,
					gs_frame_ovhg_right_out		= gs_frame_ovhg_right_out,
					gs_frame_ovhg_left_in		= gs_frame_ovhg_left_in,
					gs_frame_ovhg_right_in		= gs_frame_ovhg_right_in,
					gs_sash_thk					= gs_sash_thk,
					gs_sash_width				= gs_sash_width,
					FixGlassDir_m				= FixGlassDir_m,
					iMullionStyle				= MullionStyleArray[iPane],
					gs_open_2D					= gs_open_2D,
					gs_openLength_2D			= gs_openLength_2D,
					gs_opLinePen				= gs_opLinePen,
					gs_iSwingType				= gs_iSwingType,
					gs_swingLineType			= gs_swingLineType,
					iLoD2D						= iLoD2D,
					gs_pen_2D					= gs_pen_2D,
					gs_frame_pen_cont			= gs_frame_pen_cont,
					gs_fillFr					= gs_fillFr,
					gs_penFr_fg					= gs_penFr_fg,
					gs_penFr_bg					= gs_penFr_bg,
					gs_fillSh					= gs_fillSash,
					gs_penSh_fg					= gs_penSash_fg,
					gs_penSh_bg					= gs_penSash_bg,
					gs_fillShCover				= gs_fillShCover,
					gs_penShCov_fg       		= gs_penShCov_fg,
					gs_penShCov_bg      		= gs_penShCov_bg,
					gs_glass_thk				= gs_glass_thk,
					sh_UnID						= 1000,
					bShowUnitHotspots			= bShowUnitHotspots
endif
]]>
</Script_2D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_1D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
! const values for parameter: iDWDet2D
DETLEVEL_DW2D_MVO     = 1
DETLEVEL_DW2D_SCSENS  = 2
DETLEVEL_DW2D_50      = 3
DETLEVEL_DW2D_100     = 4
DETLEVEL_DW2D_MIDDET  = 5
DETLEVEL_DW2D_SMPL2L  = 6
DETLEVEL_DW2D_200     = 7
DETLEVEL_DW2D_OFF     = 8
DETLEVEL_DW2D_MIDUSA  = 9
DETLEVEL_DW2D_CHISMPL = 10
DETLEVEL_DW2D_CHIDET  = 11
DETLEVEL_DW2D_20      = 12


! const values for parameter: iTypeDemolitionFill
RENOVATION_FILL_EXIST      = 1
RENOVATION_FILL_DEMOLISHED = 2
RENOVATION_FILL_NEW        = 3


! const values for parameter: iCornerConnTypeRight
CONNECTION_TYPE_FRAME  = 1
CONNECTION_TYPE_COLUMN = 2
CONNECTION_TYPE_GLASS  = 3


! const values for parameter: iCornerConnTypeLeft
CONNECTION_TYPE_FRAME  = 1
CONNECTION_TYPE_COLUMN = 2
CONNECTION_TYPE_GLASS  = 3


! const values for parameter: gs_SashText_typ_num
MITERED_JOINT = 1
BUTT_JOINT    = 2

! Contact person: <SzL, NJ>

EPS = 0.0001

! gs_optype_m
SASH_FIXED					= 1		! Fixed Glass
SASH_FIXED_SCREW			= 2		! Fixed Sash
SASH_SIDE_HUNG				= 3		! Side Hung
SASH_SIDE_HUNG_M			= 4		! Side Hung Mirrored
SASH_TILT_TURN				= 5		! Tilt and Turn
SASH_TILT_TURN_M			= 6		! Tilt and Turn Mirrored
SASH_BOTTOM_HUNG			= 7		! Bottom Hung
SASH_TOP_HUNG				= 8		! Top Hung
SASH_HOR_PIVOT				= 9		! Horizontal Pivot Hung
SASH_VER_PIVOT				= 10	! Vertical Pivotted
SASH_TILT_SLIDE				= 11	! Tilt and Slide
SASH_LEFT_SLIDING			= 12	! Left Sliding
SASH_RIGHT_SLIDING			= 13	! Right Sliding
SASH_UP_SLIDING				= 14	! Sliding Up
SASH_DOWN_SLIDING			= 15	! Sliding Down
SASH_VER_PIVOT_M			= 16	! Vertical Pivotted Mirrored
SASH_FIXED_SLIDE			= 17	! Fixed Sliding Sash
SASH_DOUBLE_SIDE_HUNG		= 18	! Double Sash
SASH_DOUBLE_TILT_TURN		= 19	! Double Tilt and Turn
SASH_DOUBLE_TILT_TURN_M		= 20	! Double Tilt and Turn Mirrored
SASH_SLIDING_HOR			= 21	! Sliding
SASH_SLIDING_HOR_M			= 22	! Sliding Mirrored
SASH_DOUBLE_SLIDING_HOR		= 23	! Double Sliding
SASH_DOUBLE_SLIDING_HOR_M	= 24	! Double Sliding Mirrored
SASH_SLIDING_VER			= 25	! Single Hung
SASH_DOUBLE_SLIDING_VER		= 26	! Double Hung

! gs_iPanesConfig
PANESCONFIG_UNIFORM		= 1
PANESCONFIG_SYMM		= 2
PANESCONFIG_ASYMM		= 3
PANESCONFIG_UNIF_DOUBSASHES		= 4

! iMullionStyle
MULLION_NONE			= 1
MULLION_HVGRID			= 2
MULLION_EDITABLEGRID	= 3
MULLION_CUSTOM			= 4
MULLION_PRAIRIE			= 5
MULLION_DIVIDED			= 6

! iMullionPosition
MULLION_OUTSIDE		= 1
MULLION_INSIDE		= 2
MULLION_THROUGHOUT	= 3

! iSashType:
SASHTYPE_INDEPENDENT	= 1
SASHTYPE_DOUBLE_LEFT	= 2
SASHTYPE_DOUBLE_RIGHT	= 3

! iWindowType:
WIN_W1							= 1
WIN_WDoubleSash					= 2
WIN_W2							= 3
WIN_W2Sidelight					= 4
WIN_W3							= 5
WIN_W32Sidelights1				= 6
WIN_W32Sidelights2				= 7
WIN_WVariable					= 8
WIN_WVariableDoubleSash			= 9
WIN_HistoricWindowSingle2		= 10
WIN_HistoricWindowSingle		= 11
WIN_HistoricWindowDouble		= 12
WIN_HistoricWindowTriple		= 13
WIN_HistoricWindowSegmented		= 14
WIN_HistoricWindowTripleArched	= 15
WIN_W2HorizontalSlide			= 16
WIN_W4HorizontalSlide			= 17
WIN_Curved						= 18
WIN_Bow							= 19
WIN_SplayBay					= 20
WIN_SquareBay					= 21
WIN_Ribbon						= 22
WIN_WSingleHung1				= 23
WIN_WSingleHung2				= 24
WIN_WSingleHung3				= 25
WIN_WDoubleHung1				= 26
WIN_WDoubleHung2				= 27
WIN_WDoubleHung3				= 28
WIN_WRound						= 29
WIN_WOval						= 30
WIN_WMultiside					= 31
WIN_WHalfRound					= 32
WIN_WQuarterRound 				= 33
WIN_WPentagon					= 34
WIN_WTriangle					= 35
WIN_WEyebrows					= 36
WIN_WArched						= 37
WIN_WTrapezoid					= 38
WIN_WTrapezoidDoubleSash		= 39
WIN_VentWindow					= 40
WIN_2SashSliding				= 41
WIN_MultisashHorizontal			= 42
WIN_MultisashVertical			= 43
WIN_GlassBlock					= 44
WIN_TerraceDoorSWE				= 45
WIN_W3HorizontalSlide			= 46
WIN_W6HorizontalSlide			= 47
WIN_VentilationBrick			= 48
WIN_Rhomb						= 49
WIN_Skewed						= 50
DOOR_NoSidelight				= 100
DOOR_OneSidelight				= 101
DOOR_TwoSidelight				= 102

! iWindowClass:
WINCLASS_NORMAL				= 1
WINCLASS_HISTORIC			= 2
WINCLASS_SINGLE_HUNG		= 3
WINCLASS_DOUBLE_HUNG		= 4
WINCLASS_HORIZONTAL_SLIDING	= 5
WINCLASS_SPECIAL			= 6
WINCLASS_DOORSASH			= 7
WINCLASS_MULTISASH			= 8
WINCLASS_SHELL				= 10

! lod2D:
DET2D_OFF				= 0
DET2D_SCALESENS			= -1
DET2D_SIMPLE_ONE		= 11
DET2D_SIMPLE_TWO		= 12
DET2D_MIDDLE			= 21
DET2D_MIDDLE_USA		= 22
DET2D_DETAILED			= 30
DET2D_DETAILED_FIX_GRID	= 31
DET2D_DETAILED_USA		= 32
DET2D_SIMPLE_CHI		= 51
DET2D_DETAILED_CHI		= 52

! iLoD2D
SYMBW_OFF					= 0
SYMBW_SCALESENS				= 1
SYMBW_S_1LINE				= 11
SYMBW_S_2LINE				= 12
SYMBW_S_CENTERLINE			= 13
SYMBW_S_2LINE_ACC			= 14
SYMBW_S_5					= 15
SYMBW_S_6					= 16
SYMBW_S_7					= 17
SYMBW_S_8					= 18
SYMBW_S_9					= 19
SYMBW_M_2LINE_NOGLASS		= 21
SYMBW_M_2LINE_GLASS			= 22
SYMBW_M_FRAMESASH			= 23
SYMBW_M_2LINE_FRAME			= 24
SYMBW_M_5					= 25
SYMBW_M_6					= 26
SYMBW_M_7					= 27
SYMBW_M_8					= 28
SYMBW_M_9					= 29
SYMBW_D_SGLASS				= 31
SYMBW_D_2GLASS				= 32
SYMBW_D_2LINE_HS			= 33
SYMBW_D_NOGLASS				= 34
SYMBW_D_REBATEONGLASS		= 35
SYMBW_D_2GLASS_OVERLAP		= 36
SYMBW_D_7					= 37
SYMBW_D_8					= 38
SYMBW_D_9					= 39

! ifc_optype:
WIN_OP_NOT_DEFINED				= 0
WIN_OP_SINGLE_PANEL				= 1
WIN_OP_DOUBLE_PANEL_VERTICAL	= 2
WIN_OP_DOUBLE_PANEL_HORIZONTAL	= 3
WIN_OP_TRIPLE_PANEL_VERTICAL	= 4
WIN_OP_TRIPLE_PANEL_HORIZONTAL	= 5
WIN_OP_TRIPLE_PANEL_BOTTOM		= 6
WIN_OP_TRIPLE_PANEL_TOP			= 7
WIN_OP_TRIPLE_PANEL_LEFT		= 8
WIN_OP_TRIPLE_PANEL_RIGHT		= 9
WIN_OP_USER_DEFINED				= 10

! iVentilationProfileType
VENTPROFILE_OVER_FRAME		= 2
VENTPROFILE_OVER_GLAZING	= 3


! =============================================================================
! Uniform Sashes
! =============================================================================

iMullionStyleOriginal_01 = iMullionStyle_01
iMullionStyleOriginal_02 = iMullionStyle_02
iMullionStyleOriginal_03 = iMullionStyle_03
iMullionStyleOriginal_04 = iMullionStyle_04
iMullionStyleOriginal_05 = iMullionStyle_05
iMullionStyleOriginal_06 = iMullionStyle_06
iMullionStyleOriginal_07 = iMullionStyle_07
iMullionStyleOriginal_08 = iMullionStyle_08
iMullionStyleOriginal_09 = iMullionStyle_09
iMullionStyleOriginal_10 = iMullionStyle_10
iMullionStyleOriginal_11 = iMullionStyle_11

if gs_sash_uniform then
!	MainCasementID = 1	(values of CasementIDArray[2][2])

	iMullionStyle_01 = iMullionStyle_00
	iMullionStyle_02 = iMullionStyle_00
	iMullionStyle_03 = iMullionStyle_00
	iMullionStyle_04 = iMullionStyle_00
	iMullionStyle_05 = iMullionStyle_00
	iMullionStyle_06 = iMullionStyle_00
	iMullionStyle_07 = iMullionStyle_00
	iMullionStyle_08 = iMullionStyle_00
	iMullionStyle_09 = iMullionStyle_00
	iMullionStyle_10 = iMullionStyle_00
	iMullionStyle_11 = iMullionStyle_00

	gs_cust_panel_01 = gs_cust_panel_00
	gs_cust_panel_02 = gs_cust_panel_00
	gs_cust_panel_03 = gs_cust_panel_00
	gs_cust_panel_04 = gs_cust_panel_00
	gs_cust_panel_05 = gs_cust_panel_00
	gs_cust_panel_06 = gs_cust_panel_00
	gs_cust_panel_07 = gs_cust_panel_00
	gs_cust_panel_08 = gs_cust_panel_00
	gs_cust_panel_09 = gs_cust_panel_00
	gs_cust_panel_10 = gs_cust_panel_00
	gs_cust_panel_11 = gs_cust_panel_00
	gs_cust_panel2_01 = gs_cust_panel_00
	gs_cust_panel2_02 = gs_cust_panel_00
	gs_cust_panel2_03 = gs_cust_panel_00
	gs_cust_panel2_04 = gs_cust_panel_00
	gs_cust_panel2_05 = gs_cust_panel_00
	gs_cust_panel2_06 = gs_cust_panel_00
	gs_cust_panel2_07 = gs_cust_panel_00
	gs_cust_panel2_08 = gs_cust_panel_00
	gs_cust_panel2_09 = gs_cust_panel_00
	gs_cust_panel2_10 = gs_cust_panel_00
	gs_cust_panel2_11 = gs_cust_panel_00

	if	iWindowType = WIN_MultisashHorizontal	|\
		iWindowType = WIN_MultisashVertical		then

		if iMullionStyle_00 <> MULLION_DIVIDED then
			vgn2_01 = vgn_01
			hgn2_01 = hgn_01
		endif

		vgn_02	= vgn_01
		hgn_02	= hgn_01
		vgn2_02	= vgn2_01
		hgn2_02	= hgn2_01
		vgn_03	= vgn_01
		hgn_03	= hgn_01
		vgn2_03	= vgn2_01
		hgn2_03	= hgn2_01
		vgn_04	= vgn_01
		hgn_04	= hgn_01
		vgn2_04	= vgn2_01
		hgn2_04	= hgn2_01
		vgn_05	= vgn_01
		hgn_05	= hgn_01
		vgn2_05	= vgn2_01
		hgn2_05	= hgn2_01
		vgn_06	= vgn_01
		hgn_06	= hgn_01
		vgn2_06	= vgn2_01
		hgn2_06	= hgn2_01
		vgn_07	= vgn_01
		hgn_07	= hgn_01
		vgn2_07	= vgn2_01
		hgn2_07	= hgn2_01
		vgn_08	= vgn_01
		hgn_08	= hgn_01
		vgn2_08	= vgn2_01
		hgn2_08	= hgn2_01
		vgn_09	= vgn_01
		hgn_09	= hgn_01
		vgn2_09	= vgn2_01
		hgn2_09	= hgn2_01
		vgn_10	= vgn_01
		hgn_10	= hgn_01
		vgn2_10	= vgn2_01
		hgn2_10	= hgn2_01

		gs_horiz_div_height_02 = gs_horiz_div_height_01
		gs_horiz_div_height_03 = gs_horiz_div_height_01
		gs_horiz_div_height_04 = gs_horiz_div_height_01
		gs_horiz_div_height_05 = gs_horiz_div_height_01
		gs_horiz_div_height_06 = gs_horiz_div_height_01
		gs_horiz_div_height_07 = gs_horiz_div_height_01
		gs_horiz_div_height_08 = gs_horiz_div_height_01
		gs_horiz_div_height_09 = gs_horiz_div_height_01
		gs_horiz_div_height_10 = gs_horiz_div_height_01
	else
		for i = 1 to vardim1(CasementIDArray)
			for j = 1 to vardim2(CasementIDArray)
				if CasementIDArray[i][j] > 0 & (CasementIDArray[i][j] = CasementLinkArray[i][j]) & iMullionStyle_00 <> MULLION_DIVIDED then

					if CasementIDArray[i][j] = 1 then
						vgn2_01 = vgn_01
						hgn2_01 = hgn_01
					endif
					if CasementIDArray[i][j] = 2 then
						vgn2_02 = vgn_02
						hgn2_02 = hgn_02
					endif
					if CasementIDArray[i][j] = 3 then
						vgn2_03 = vgn_03
						hgn2_03 = hgn_03
					endif
					if CasementIDArray[i][j] = 5 then
						vgn2_05 = vgn_05
						hgn2_05 = hgn_05
					endif
					if CasementIDArray[i][j] = 6 then
						vgn2_06 = vgn_06
						hgn2_06 = hgn_06
					endif
					if CasementIDArray[i][j] = 7 then
						vgn2_07 = vgn_07
						hgn2_07 = hgn_07
					endif
					if CasementIDArray[i][j] = 9 then
						vgn2_09 = vgn_09
						hgn2_09 = hgn_09
					endif
					if CasementIDArray[i][j] = 10 then
						vgn2_10 = vgn_10
						hgn2_10 = hgn_10
					endif
					if CasementIDArray[i][j] = 11 then
						vgn2_11 = vgn_11
						hgn2_11 = hgn_11
					endif
				endif
			next j
		next i

		for i = 1 to vardim1(CasementIDArray)
			for j = 1 to vardim2(CasementIDArray)
				if CasementIDArray[i][j] > 0 & (CasementIDArray[i][j] <> CasementLinkArray[i][j]) then

					if CasementLinkArray[i][j] = 1 then
						vgn_linked	= vgn_01
						hgn_linked	= hgn_01
						vgn2_linked	= vgn2_01
						hgn2_linked	= hgn2_01
						gs_horiz_div_height_linked = gs_horiz_div_height_01
					endif
					if CasementLinkArray[i][j] = 2 then
						vgn_linked	= vgn_02
						hgn_linked	= hgn_02
						vgn2_linked	= vgn2_02
						hgn2_linked	= hgn2_02
						gs_horiz_div_height_linked = gs_horiz_div_height_02
					endif
					if CasementLinkArray[i][j] = 3 then
						vgn_linked	= vgn_03
						hgn_linked	= hgn_03
						vgn2_linked	= vgn2_03
						hgn2_linked	= hgn2_03
						gs_horiz_div_height_linked = gs_horiz_div_height_03
					endif
					if CasementLinkArray[i][j] = 5 then
						vgn_linked	= vgn_05
						hgn_linked	= hgn_05
						vgn2_linked	= vgn2_05
						hgn2_linked	= hgn2_05
						gs_horiz_div_height_linked = gs_horiz_div_height_05
					endif
					if CasementLinkArray[i][j] = 6 then
						vgn_linked	= vgn_06
						hgn_linked	= hgn_06
						vgn2_linked	= vgn2_06
						hgn2_linked	= hgn2_06
						gs_horiz_div_height_linked = gs_horiz_div_height_06
					endif
					if CasementLinkArray[i][j] = 7 then
						vgn_linked	= vgn_07
						hgn_linked	= hgn_07
						vgn2_linked	= vgn2_07
						hgn2_linked	= hgn2_07
						gs_horiz_div_height_linked = gs_horiz_div_height_07
					endif
					if CasementLinkArray[i][j] = 9 then
						vgn_linked	= vgn_09
						hgn_linked	= hgn_09
						vgn2_linked	= vgn2_09
						hgn2_linked	= hgn2_09
						gs_horiz_div_height_linked = gs_horiz_div_height_09
					endif
					if CasementLinkArray[i][j] = 10 then
						vgn_linked	= vgn_10
						hgn_linked	= hgn_10
						vgn2_linked	= vgn2_10
						hgn2_linked	= hgn2_10
						gs_horiz_div_height_linked = gs_horiz_div_height_10
					endif
					if CasementLinkArray[i][j] = 11 then
						vgn_linked	= vgn_11
						hgn_linked	= hgn_11
						vgn2_linked	= vgn2_11
						hgn2_linked	= hgn2_11
						gs_horiz_div_height_linked = gs_horiz_div_height_11
					endif
	
					if CasementIDArray[i][j] = 1 then
						vgn_01	= vgn_linked
						hgn_01	= hgn_linked
						vgn2_01	= vgn2_linked
						hgn2_01	= hgn2_linked
						gs_horiz_div_height_01 = gs_horiz_div_height_linked
					endif
					if CasementIDArray[i][j] = 2 then
						vgn_02	= vgn_linked
						hgn_02	= hgn_linked
						vgn2_02	= vgn2_linked
						hgn2_02	= hgn2_linked
						gs_horiz_div_height_02 = gs_horiz_div_height_linked
					endif
					if CasementIDArray[i][j] = 3 then
						vgn_03	= vgn_linked
						hgn_03	= hgn_linked
						vgn2_03	= vgn2_linked
						hgn2_03	= hgn2_linked
						gs_horiz_div_height_03 = gs_horiz_div_height_linked
					endif
					if CasementIDArray[i][j] = 5 then
						vgn_05	= vgn_linked
						hgn_05	= hgn_linked
						vgn2_05	= vgn2_linked
						hgn2_05	= hgn2_linked
						gs_horiz_div_height_05 = gs_horiz_div_height_linked
					endif
					if CasementIDArray[i][j] = 6 then
						vgn_06	= vgn_linked
						hgn_06	= hgn_linked
						vgn2_06	= vgn2_linked
						hgn2_06	= hgn2_linked
						gs_horiz_div_height_06 = gs_horiz_div_height_linked
					endif
					if CasementIDArray[i][j] = 7 then
						vgn_07	= vgn_linked
						hgn_07	= hgn_linked
						vgn2_07	= vgn2_linked
						hgn2_07	= hgn2_linked
						gs_horiz_div_height_07 = gs_horiz_div_height_linked
					endif
					if CasementIDArray[i][j] = 9 then
						vgn_09	= vgn_linked
						hgn_09	= hgn_linked
						vgn2_09	= vgn2_linked
						hgn2_09	= hgn2_linked
						gs_horiz_div_height_09 = gs_horiz_div_height_linked
					endif
					if CasementIDArray[i][j] = 10 then
						vgn_10	= vgn_linked
						hgn_10	= hgn_linked
						vgn2_10	= vgn2_linked
						hgn2_10	= hgn2_linked
						gs_horiz_div_height_10 = gs_horiz_div_height_linked
					endif
					if CasementIDArray[i][j] = 11 then
						vgn_11	= vgn_linked
						hgn_11	= hgn_linked
						vgn2_11	= vgn2_linked
						hgn2_11	= hgn2_linked
						gs_horiz_div_height_11 = gs_horiz_div_height_linked
					endif
				endif
			next j
		next i
	endif
endif


! =============================================================================
! Double Sash - linked opening type parameters
! =============================================================================

if	iWindowType <> WIN_MultisashHorizontal	&\
	iWindowType <> WIN_MultisashVertical	then

	if GLOB_SCRIPT_TYPE = 2 | GLOB_SCRIPT_TYPE = 3 then

		for i = 1 to vardim1(CasementTypeArray)
			for j = 1 to vardim2(CasementTypeArray)
				if CasementTypeArray[i][j] = SASHTYPE_DOUBLE_LEFT then

					if CasementIDArray[i][j] = 1 then
						if gs_optype_m_01 = SASH_TILT_TURN_M then
							gs_optype_m_01 = SASH_TILT_TURN_M
							gs_optype_m_05 = SASH_SIDE_HUNG
						else
							if gs_optype_m_01 = SASH_TILT_TURN then
								gs_optype_m_01 = SASH_SIDE_HUNG_M
								gs_optype_m_05 = SASH_TILT_TURN
							else
								gs_optype_m_01 = SASH_SIDE_HUNG_M
								gs_optype_m_05 = SASH_SIDE_HUNG
							endif
						endif
					endif
					if CasementIDArray[i][j] = 2 then
						if gs_optype_m_02 = SASH_TILT_TURN_M then
							gs_optype_m_02 = SASH_TILT_TURN_M
							gs_optype_m_06 = SASH_SIDE_HUNG
						else
							if gs_optype_m_02 = SASH_TILT_TURN then
								gs_optype_m_02 = SASH_SIDE_HUNG_M
								gs_optype_m_06 = SASH_TILT_TURN
							else
								gs_optype_m_02 = SASH_SIDE_HUNG_M
								gs_optype_m_06 = SASH_SIDE_HUNG
							endif
						endif
					endif
					if CasementIDArray[i][j] = 3 then
						if gs_optype_m_03 = SASH_TILT_TURN_M then
							gs_optype_m_03 = SASH_TILT_TURN_M
							gs_optype_m_07 = SASH_SIDE_HUNG
						else
							if gs_optype_m_03 = SASH_TILT_TURN then
								gs_optype_m_03 = SASH_SIDE_HUNG_M
								gs_optype_m_07 = SASH_TILT_TURN
							else
								gs_optype_m_03 = SASH_SIDE_HUNG_M
								gs_optype_m_07 = SASH_SIDE_HUNG
							endif
						endif
					endif

					if CasementIDArray[i][j] = 9 then
						if gs_optype_m_09 = SASH_TILT_TURN_M then
							gs_optype_m_09 = SASH_TILT_TURN_M
							gs_optype_m_01 = SASH_SIDE_HUNG
						else
							if gs_optype_m_09 = SASH_TILT_TURN then
								gs_optype_m_09 = SASH_SIDE_HUNG_M
								gs_optype_m_01 = SASH_TILT_TURN
							else
								gs_optype_m_09 = SASH_SIDE_HUNG_M
								gs_optype_m_01 = SASH_SIDE_HUNG
							endif
						endif
					endif
					if CasementIDArray[i][j] = 10 then
						if gs_optype_m_10 = SASH_TILT_TURN_M then
							gs_optype_m_10 = SASH_TILT_TURN_M
							gs_optype_m_02 = SASH_SIDE_HUNG
						else
							if gs_optype_m_10 = SASH_TILT_TURN then
								gs_optype_m_10 = SASH_SIDE_HUNG_M
								gs_optype_m_02 = SASH_TILT_TURN
							else
								gs_optype_m_10 = SASH_SIDE_HUNG_M
								gs_optype_m_02 = SASH_SIDE_HUNG
							endif
						endif
					endif
					if CasementIDArray[i][j] = 11 then
						if gs_optype_m_11 = SASH_TILT_TURN_M then
							gs_optype_m_11 = SASH_TILT_TURN_M
							gs_optype_m_03 = SASH_SIDE_HUNG
						else
							if gs_optype_m_11 = SASH_TILT_TURN then
								gs_optype_m_11 = SASH_SIDE_HUNG_M
								gs_optype_m_03 = SASH_TILT_TURN
							else
								gs_optype_m_11 = SASH_SIDE_HUNG_M
								gs_optype_m_03 = SASH_SIDE_HUNG
							endif
						endif
					endif
				endif
			next j
		next i
	endif
endif


! =============================================================================
! Main Definitions
! =============================================================================

gs_fillFr	= gs_fillFr * gs_bFills
gs_fillSash	= gs_fillSash * gs_bFills

bCornerWindow	= (ac_cw_function & ac_corner_window)

!!!**************************From String to Number for the Macros**********************************

bFrCornerLeft = 1		! Frame
if bLeftCornerFunction then
	if iCornerConnTypeLeft = CONNECTION_TYPE_COLUMN then bFrCornerLeft = 2		! Corner Column
	if iCornerConnTypeLeft = CONNECTION_TYPE_GLASS then bFrCornerLeft = 0		! Glass
endif

bFrCornerRight = 1		! Frame
if bRightCornerFunction | bCornerWindow then
	if iCornerConnTypeRight = CONNECTION_TYPE_COLUMN then bFrCornerRight = 2		! Corner Column
	if iCornerConnTypeRight = CONNECTION_TYPE_GLASS then bFrCornerRight = 0		! Glass
endif

if bCornerWindow then
	rightCornerAngle	= ac_corner_angle
endif

if iWindowType = WIN_MultisashHorizontal then
	bLeftGlassCorner	= bLeftCornerFunction & (bFrCornerLeft = 0) & (optypeIDArray[1] = SASH_FIXED)
	bRightGlassCorner	= (bRightCornerFunction | bCornerWindow) & (bFrCornerRight = 0) & (optypeIDArray[gs_panes_number] = SASH_FIXED)
else
	bLeftGlassCorner	= 0
	bRightGlassCorner	= 0
endif


! =============================================================================
! Arrays to Set of Mullion/Transom/Pane Width
! =============================================================================

dim validMullionID[]
	validMullionID[1] = 0

dim iMullionID[]
	iMullionID[1] = 0

dim stMullionName[]
	stMullionName[1] = ""

dim validTransomID[]
	validTransomID[1] = 0

dim iTransomID[]
	iTransomID[1] = 0

dim stTransomName[]
	stTransomName[1] = ""

dim validPaneID[]
	validPaneID[1] = 0

dim iPaneID[]
	iPaneID[1] = 0

dim stPaneName[]
	stPaneName[1] = ""

if	iWindowType = WIN_MultisashHorizontal	|\
	iWindowType = WIN_MultisashVertical		then

	if iWindowType = WIN_MultisashHorizontal then
		iMullion	= 1
		iValid		= 1
		for i = 2 to 10
			if i < gs_panes_number + 1 then
				validMullionID[iValid]	= iValid
				iMullionID[iMullion]	= iMullion
				stMullionName[iMullion]	= gs_UI_WindowElevation[66+iMullion]
				iValid = iValid + 1
			else
				iMullionID[iMullion]	= 0
				stMullionName[iMullion]	= ""
			endif
			iMullion = iMullion + 1
		next i
		if gs_repeat_modules then
			validMullionID[iValid]	= iMullion
			iMullionID[iMullion]	= iMullion
			stMullionName[iMullion]	= gs_UI_WindowElevation[45]	! Middle Mullion Width
		else
			iMullionID[iMullion]	= 0
			stMullionName[iMullion]	= ""
		endif
	endif

	if iWindowType = WIN_MultisashVertical then
		iTransom	= 1
		iValid		= 1
		for i = 2 to 10
			if i < gs_panes_number + 1 then
				validTransomID[iValid]	= iValid
				iTransomID[iTransom]	= iTransom
				stTransomName[iTransom]	= gs_UI_WindowElevation[75+iTransom]
				iValid = iValid + 1
			else
				iTransomID[iTransom]	= 0
				stTransomName[iTransom]	= ""
			endif
			iTransom = iTransom + 1
		next i
		if gs_repeat_modules then
			validTransomID[iValid]	= iTransom
			iTransomID[iTransom]	= iTransom
			stTransomName[iTransom]	= gs_UI_WindowElevation[46]	! Middle Transom Width
		else
			iTransomID[iTransom]	= 0
			stTransomName[iTransom]	= ""
		endif

		iPane	= 1
		iValid	= 1
		for iPane = 1 to 10
			if iPane < gs_panes_number + 1 then
				validPaneID[iValid]	= iValid
				iPaneID[iPane]		= iPane
				stPaneName[iPane]	= gs_UI_WindowElevation[56+iPane]
				iValid = iValid + 1
			else
				iPaneID[iPane]		= 0
				stPaneName[iPane]	= ""
			endif
		next iPane
	endif
endif


gs_frame_offset_left	= gs_frame_width_left - MullionWidth/2
gs_frame_offset_right	= gs_frame_width - MullionWidth/2
gs_frame_offset_upper	= gs_frame_width_upper - TransomWidth/2
gs_frame_offset_lower	= gs_frame_width_lower - TransomWidth/2
_RepeatNum = 1 + (gs_repeat_modules_number - 1) * gs_repeat_modules


! =============================================================================
! Panes Configuration
! =============================================================================

dim	NoRebateSashes[]
	NoRebateSashes[ 1]	= SASH_HOR_PIVOT
	NoRebateSashes[ 2]	= SASH_VER_PIVOT
	NoRebateSashes[ 3]	= SASH_TILT_SLIDE
	NoRebateSashes[ 4]	= SASH_LEFT_SLIDING
	NoRebateSashes[ 5]	= SASH_RIGHT_SLIDING
	NoRebateSashes[ 6]	= SASH_UP_SLIDING
	NoRebateSashes[ 7]	= SASH_DOWN_SLIDING
	NoRebateSashes[ 8]	= SASH_VER_PIVOT_M
	NoRebateSashes[ 9]	= SASH_FIXED_SLIDE
	NoRebateSashes[10]	= SASH_SLIDING_HOR
	NoRebateSashes[11]	= SASH_SLIDING_HOR_M
	NoRebateSashes[12]	= SASH_DOUBLE_SLIDING_HOR
	NoRebateSashes[13]	= SASH_DOUBLE_SLIDING_HOR_M
	NoRebateSashes[14]	= SASH_SLIDING_VER
	NoRebateSashes[15]	= SASH_DOUBLE_SLIDING_VER

GlassSashMod 		= 2 * (gs_sash_width - gs_rebate_width)
GlassNoRebateMod 	= 2 * gs_sash_width

PaneWidth_Remain	= 0
PaneHeight_Remain	= 0

if	iWindowType = WIN_MultisashHorizontal	|\
	iWindowType = WIN_MultisashVertical		then

! =============================================================================
! Panes Configuration Horizontal
! =============================================================================

	dim PaneWidthArray[10]
		PaneWidthArray[1] = PaneWidth_01
		PaneWidthArray[2] = PaneWidth_02
		PaneWidthArray[3] = PaneWidth_03
		PaneWidthArray[4] = PaneWidth_04
		PaneWidthArray[5] = PaneWidth_05
		PaneWidthArray[6] = PaneWidth_06
		PaneWidthArray[7] = PaneWidth_07
		PaneWidthArray[8] = PaneWidth_08
		PaneWidthArray[9] = PaneWidth_09
		PaneWidthArray[10] = 0

	dim MullionWidthArray[9]
		MullionWidthArray[1] = MullionWidth_01
		MullionWidthArray[2] = MullionWidth_02
		MullionWidthArray[3] = MullionWidth_03
		MullionWidthArray[4] = MullionWidth_04
		MullionWidthArray[5] = MullionWidth_05
		MullionWidthArray[6] = MullionWidth_06
		MullionWidthArray[7] = MullionWidth_07
		MullionWidthArray[8] = MullionWidth_08
		MullionWidthArray[9] = MullionWidth_09

	if iWindowType = WIN_MultisashHorizontal then
		dim GlassWidthMod[]
		dim MinSashWidth[]

		for iPane = 1 to gs_panes_number
			GlassWidthMod[iPane] = 0
			if optypeIDArray[iPane] <> SASH_FIXED then GlassWidthMod[iPane] = GlassSashMod
			for i = 1 to vardim1(NoRebateSashes)
				if optypeIDArray[iPane] = NoRebateSashes[i] then GlassWidthMod[iPane] = GlassNoRebateMod
			next i
			MinSashWidth[iPane] = GlassWidthMod[iPane] + 0.01
		next iPane

		if gs_iPanesConfig = PANESCONFIG_UNIFORM then
			if gs_repeat_modules then
				AllSashGlassWidth = gs_axis_distance - MullionWidth

				for iPane = 1 to gs_panes_number
					if iPane < gs_panes_number then
						AllSashGlassWidth = AllSashGlassWidth - MullionWidthArray[iPane]
					endif
					AllSashGlassWidth = AllSashGlassWidth - GlassWidthMod[iPane]
				next iPane

				OneSashGlassWidth = AllSashGlassWidth / gs_panes_number

				for iPane = 1 to gs_panes_number
					if iPane = 1 then
						PaneWidthArray[iPane] = OneSashGlassWidth + MullionWidth/2 + MullionWidthArray[iPane]/2 + GlassWidthMod[iPane]
					else
						if iPane = gs_panes_number then
							PaneWidthArray[iPane] = OneSashGlassWidth + MullionWidth/2 + MullionWidthArray[iPane - 1]/2 + GlassWidthMod[iPane]
						else
							PaneWidthArray[iPane] = OneSashGlassWidth + MullionWidthArray[iPane - 1]/2  + MullionWidthArray[iPane]/2 + GlassWidthMod[iPane]
						endif
					endif
				next iPane
			else
				AllSashGlassWidth = ac_unit_width - gs_frame_width_left - gs_frame_width

				for iPane = 1 to gs_panes_number
					if iPane < gs_panes_number then
						AllSashGlassWidth = AllSashGlassWidth - MullionWidthArray[iPane]
					endif
					AllSashGlassWidth = AllSashGlassWidth - GlassWidthMod[iPane]
				next iPane

				OneSashGlassWidth = AllSashGlassWidth / gs_panes_number

				for iPane = 1 to gs_panes_number
					if iPane = 1 then
						PaneWidthArray[iPane] = OneSashGlassWidth + gs_frame_width_left + MullionWidthArray[iPane]/2 + GlassWidthMod[iPane]
					else
						if iPane = gs_panes_number then
							PaneWidthArray[iPane] = OneSashGlassWidth + gs_frame_width + MullionWidthArray[iPane - 1]/2 + GlassWidthMod[iPane]
						else
							PaneWidthArray[iPane] = OneSashGlassWidth + MullionWidthArray[iPane - 1]/2  + MullionWidthArray[iPane]/2 + GlassWidthMod[iPane]
						endif
					endif
				next iPane
			endif
			PaneWidth_01 = PaneWidthArray[1]
			PaneWidth_02 = PaneWidthArray[2]
			PaneWidth_03 = PaneWidthArray[3]
			PaneWidth_04 = PaneWidthArray[4]
			PaneWidth_05 = PaneWidthArray[5]
			PaneWidth_06 = PaneWidthArray[6]
			PaneWidth_07 = PaneWidthArray[7]
			PaneWidth_08 = PaneWidthArray[8]
			PaneWidth_09 = PaneWidthArray[9]
			parameters	PaneWidth_01 = PaneWidth_01,
						PaneWidth_02 = PaneWidth_02,
						PaneWidth_03 = PaneWidth_03,
						PaneWidth_04 = PaneWidth_04,
						PaneWidth_05 = PaneWidth_05,
						PaneWidth_06 = PaneWidth_06,
						PaneWidth_07 = PaneWidth_07,
						PaneWidth_08 = PaneWidth_08,
						PaneWidth_09 = PaneWidth_09
		else
			_sumPaneWidth = 0
			for i=1 to gs_panes_number - 1
				_sumPaneWidth = _sumPaneWidth + PaneWidthArray[i]
			next i
			if gs_repeat_modules then
				PaneWidthArray[gs_panes_number] = (ac_unit_width - gs_frame_offset_left - gs_frame_offset_right) / gs_repeat_modules_number - _sumPaneWidth
			else
				PaneWidthArray[gs_panes_number] = ac_unit_width - _sumPaneWidth
			endif
		endif
	endif

	PaneWidth_Remain = PaneWidthArray[gs_panes_number]

! =============================================================================
! Panes Configuration Vertical
! =============================================================================

	dim PaneHeightArray[10]
		PaneHeightArray[1] = PaneHeight_01
		PaneHeightArray[2] = PaneHeight_02
		PaneHeightArray[3] = PaneHeight_03
		PaneHeightArray[4] = PaneHeight_04
		PaneHeightArray[5] = PaneHeight_05
		PaneHeightArray[6] = PaneHeight_06
		PaneHeightArray[7] = PaneHeight_07
		PaneHeightArray[8] = PaneHeight_08
		PaneHeightArray[9] = PaneHeight_09
		PaneHeightArray[10] = 0

	dim TransomWidthArray[9]
		TransomWidthArray[1] = TransomWidth_01
		TransomWidthArray[2] = TransomWidth_02
		TransomWidthArray[3] = TransomWidth_03
		TransomWidthArray[4] = TransomWidth_04
		TransomWidthArray[5] = TransomWidth_05
		TransomWidthArray[6] = TransomWidth_06
		TransomWidthArray[7] = TransomWidth_07
		TransomWidthArray[8] = TransomWidth_08
		TransomWidthArray[9] = TransomWidth_09

	if iWindowType = WIN_MultisashVertical then
		dim GlassHeightMod[]
		dim MinSashHeight[]

		for iPane = 1 to gs_panes_number
			GlassHeightMod[iPane] = 0
			if optypeIDArray[iPane] <> SASH_FIXED then GlassHeightMod[iPane] = GlassSashMod
			for i = 1 to vardim1(NoRebateSashes)
				if optypeIDArray[iPane] = NoRebateSashes[i] then GlassHeightMod[iPane] = GlassNoRebateMod
			next i
			MinSashHeight[iPane] = GlassHeightMod[iPane] + 0.01
		next iPane

		if gs_iPanesConfigVertical = PANESCONFIG_UNIFORM then
			if gs_repeat_modules then
				AllSashGlassHeight = gs_axis_distance - TransomWidth

				for iPane = 1 to gs_panes_number
					if iPane < gs_panes_number then
						AllSashGlassHeight = AllSashGlassHeight - TransomWidthArray[iPane]
					endif
					AllSashGlassHeight = AllSashGlassHeight - GlassHeightMod[iPane]
				next iPane

				OneSashGlassHeight = AllSashGlassHeight / gs_panes_number

				for iPane = 1 to gs_panes_number
					if iPane = 1 then
						PaneHeightArray[iPane] = OneSashGlassHeight + TransomWidth/2 + TransomWidthArray[iPane]/2 + GlassHeightMod[iPane]
					else
						if iPane = gs_panes_number then
							PaneHeightArray[iPane] = OneSashGlassHeight + TransomWidth/2 + TransomWidthArray[iPane - 1]/2 + GlassHeightMod[iPane]
						else
							PaneHeightArray[iPane] = OneSashGlassHeight + TransomWidthArray[iPane - 1]/2  + TransomWidthArray[iPane]/2 + GlassHeightMod[iPane]
						endif
					endif
				next iPane
			else
				AllSashGlassHeight = ac_unit_height - gs_frame_width_lower - gs_frame_width_upper

				for iPane = 1 to gs_panes_number
					if iPane < gs_panes_number then
						AllSashGlassHeight = AllSashGlassHeight - TransomWidthArray[iPane]
					endif
					AllSashGlassHeight = AllSashGlassHeight - GlassHeightMod[iPane]
				next iPane

				OneSashGlassHeight = AllSashGlassHeight / gs_panes_number

				for iPane = 1 to gs_panes_number
					if iPane = 1 then
						PaneHeightArray[iPane] = OneSashGlassHeight + gs_frame_width_lower + TransomWidthArray[iPane]/2 + GlassHeightMod[iPane]
					else
						if iPane = gs_panes_number then
							PaneHeightArray[iPane] = OneSashGlassHeight + gs_frame_width_upper + TransomWidthArray[iPane - 1]/2 + GlassHeightMod[iPane]
						else
							PaneHeightArray[iPane] = OneSashGlassHeight + TransomWidthArray[iPane - 1]/2  + TransomWidthArray[iPane]/2 + GlassHeightMod[iPane]
						endif
					endif
				next iPane
			endif
			PaneHeight_01 = PaneHeightArray[1]
			PaneHeight_02 = PaneHeightArray[2]
			PaneHeight_03 = PaneHeightArray[3]
			PaneHeight_04 = PaneHeightArray[4]
			PaneHeight_05 = PaneHeightArray[5]
			PaneHeight_06 = PaneHeightArray[6]
			PaneHeight_07 = PaneHeightArray[7]
			PaneHeight_08 = PaneHeightArray[8]
			PaneHeight_09 = PaneHeightArray[9]
			parameters	PaneHeight_01 = PaneHeight_01,
						PaneHeight_02 = PaneHeight_02,
						PaneHeight_03 = PaneHeight_03,
						PaneHeight_04 = PaneHeight_04,
						PaneHeight_05 = PaneHeight_05,
						PaneHeight_06 = PaneHeight_06,
						PaneHeight_07 = PaneHeight_07,
						PaneHeight_08 = PaneHeight_08,
						PaneHeight_09 = PaneHeight_09
		else
			_sumPaneHeight = 0
				for i=1 to gs_panes_number - 1
				_sumPaneHeight = _sumPaneHeight + PaneHeightArray[i]
			next i
			if gs_repeat_modules then
				PaneHeightArray[gs_panes_number] = (ac_unit_height - gs_frame_offset_upper - gs_frame_offset_lower) / gs_repeat_modules_number - _sumPaneHeight
			else
				PaneHeightArray[gs_panes_number] = ac_unit_height - _sumPaneHeight
			endif
		endif
	endif

	PaneHeight_Remain = PaneHeightArray[gs_panes_number]
else

! =============================================================================
! Panes Configuration Horizontal
! =============================================================================

	bEnableMiddlePanelWidth	= 0
	if	iWindowType = WIN_W32Sidelights1 |\
		iWindowType = WIN_W32Sidelights2 |\
		iWindowType = WIN_W3 |\
		iWindowType = WIN_WVariableDoubleSash |\
		iWindowType = WIN_WVariable |\
		iWindowType = WIN_W2Sidelight |\
		iWindowType = WIN_W1 |\
		iWindowType = WIN_WDoubleHung2 |\
		iWindowType = WIN_WDoubleHung3 |\
		iWindowType = WIN_WDoubleHung1 |\
		iWindowType = WIN_WSingleHung2 |\
		iWindowType = WIN_WSingleHung3 |\
		iWindowType = WIN_WSingleHung1 then

		bEnableMiddlePanelWidth	= 1
	endif

	gs_LeftSLight_w = ac_unit_width - gs_SLight_w - gs_MidPane_w
	bVariableDoubleSashWin = (iWindowType = WIN_WVariableDoubleSash)

	if	gs_iPanesConfig = PANESCONFIG_UNIFORM	then
		OnlyFixSashesWidth = ac_unit_width - gs_frame_width_left - gs_frame_width - gs_Mullion_w * gs_bSLight - gs_Mullion_w_left * gs_bLeftSLight * not(bVariableDoubleSashWin)

		MainGlassWMod		= 0
		SideLGlassWMod 		= 0
		LeftSideLGlassWMod	= 0

		if CasementIDArray[2][1] > 0 & gs_bLeftSLight & not(bVariableDoubleSashWin) then
			if gs_optype_m_09 <> SASH_FIXED then LeftSideLGlassWMod	= GlassSashMod
			for i = 1 to vardim1(NoRebateSashes)
				if gs_optype_m_09 = NoRebateSashes[i] then LeftSideLGlassWMod	= GlassNoRebateMod
			next i
		endif
		if gs_optype_m_01 <> SASH_FIXED then MainGlassWMod	= GlassSashMod
		for i = 1 to vardim1(NoRebateSashes)
			if gs_optype_m_01 = NoRebateSashes[i] then MainGlassWMod	= GlassNoRebateMod
		next i
		if CasementIDArray[2][3] > 0 & gs_bSLight then
			if gs_optype_m_05 <> SASH_FIXED then SideLGlassWMod	= GlassSashMod
			for i = 1 to vardim1(NoRebateSashes)
				if gs_optype_m_05 = NoRebateSashes[i] then SideLGlassWMod	= GlassNoRebateMod
			next i
		endif

		OneSashGlassWidth = (OnlyFixSashesWidth - MainGlassWMod - SideLGlassWMod - LeftSideLGlassWMod) / (1 + gs_bSLight + gs_bLeftSLight * not(bVariableDoubleSashWin))

		gs_SLight_w = gs_frame_width + gs_Mullion_w/2 + OneSashGlassWidth + SideLGlassWMod
		gs_LeftSLight_w = gs_frame_width_left + gs_Mullion_w_left/2 + OneSashGlassWidth + LeftSideLGlassWMod
		if gs_bSLight then
			gs_MidPane_w = ac_unit_width - gs_SLight_w - gs_LeftSLight_w
		else
			gs_MidPane_w = (ac_unit_width + gs_frame_width - gs_frame_width_left) / 2
		endif
		if bEnableMiddlePanelWidth then parameters gs_MidPane_w = gs_MidPane_w
	
		if gs_bSLight 					then parameters	gs_SLight_w = gs_SLight_w
	endif

	if gs_iPanesConfig = PANESCONFIG_SYMM then
		gs_LeftSLight_w	= gs_SLight_w
		gs_MidPane_w	= ac_unit_width - gs_LeftSLight_w - gs_SLight_w
		if bEnableMiddlePanelWidth then parameters gs_MidPane_w = gs_MidPane_w
	
		if gs_bSLight & gs_bLeftSLight	then
			lock "gs_MidPane_w"
			hideparameter "gs_MidPane_w"
		endif
	endif

	if gs_iPanesConfig = PANESCONFIG_UNIF_DOUBSASHES | (gs_iPanesConfig = PANESCONFIG_UNIFORM & bVariableDoubleSashWin) then
		if gs_bSLight then
			gs_MidPane_w = (ac_unit_width - gs_SLight_w - gs_Mullion_w/2 - gs_frame_width_left) / 2 + gs_Mullion_w/2
		else
			gs_MidPane_w = (ac_unit_width + gs_frame_width - gs_frame_width_left) / 2
		endif
		if bEnableMiddlePanelWidth then parameters gs_MidPane_w = gs_MidPane_w
	endif


	! =============================================================================
	! Panes Configuration Vertical
	! =============================================================================

	OnlyFixSashesHeight = ac_unit_height - gs_frame_width_upper - gs_frame_width_lower - gs_UTrans_w * gs_UTrans - gs_LTrans_w * gs_LTrans

	if gs_iPanesConfigVertical = PANESCONFIG_UNIFORM then

		UppTransGlassHMod	= 0
		MainGlassHMod 		= 0
		LowTransGlassHMod	= 0

		if gs_UTrans then
			if CasementIDArray[1][1] > 0 & gs_UTrans_Div then
				if gs_optype_m_10 <> SASH_FIXED then UppTransGlassHMod	= GlassSashMod
				for i = 1 to vardim1(NoRebateSashes)
					if gs_optype_m_10 = NoRebateSashes[i] then UppTransGlassHMod	= GlassNoRebateMod
				next i
			endif
			if CasementIDArray[1][2] > 0 & UppTransGlassHMod < GlassNoRebateMod then
				if gs_optype_m_02 <> SASH_FIXED then UppTransGlassHMod	= GlassSashMod
				for i = 1 to vardim1(NoRebateSashes)
					if gs_optype_m_02 = NoRebateSashes[i] then UppTransGlassHMod	= GlassNoRebateMod
				next i
			endif
			if CasementIDArray[1][3] > 0 & gs_UTrans_Div & UppTransGlassHMod < GlassNoRebateMod then
				if gs_optype_m_06 <> SASH_FIXED then UppTransGlassHMod	= GlassSashMod
				for i = 1 to vardim1(NoRebateSashes)
					if gs_optype_m_06 = NoRebateSashes[i] then UppTransGlassHMod	= GlassNoRebateMod
				next i
			endif
		endif

		if CasementIDArray[2][1] > 0 & gs_bLeftSLight then
			if gs_optype_m_09 <> SASH_FIXED then MainGlassHMod	= GlassSashMod
			for i = 1 to vardim1(NoRebateSashes)
				if gs_optype_m_09 = NoRebateSashes[i] then MainGlassHMod	= GlassNoRebateMod
			next i
		endif
		if MainGlassHMod < GlassNoRebateMod then
			if gs_optype_m_01 <> SASH_FIXED then MainGlassHMod	= GlassSashMod
			for i = 1 to vardim1(NoRebateSashes)
				if gs_optype_m_01 = NoRebateSashes[i] then MainGlassHMod	= GlassNoRebateMod
			next i
		endif
		if CasementIDArray[2][3] > 0 & gs_bSLight & MainGlassHMod < GlassNoRebateMod then
			if gs_optype_m_05 <> SASH_FIXED	then MainGlassHMod	= GlassSashMod
			for i = 1 to vardim1(NoRebateSashes)
				if gs_optype_m_05 = NoRebateSashes[i] then MainGlassHMod	= GlassNoRebateMod
			next i
		endif

		if gs_LTrans then
			if CasementIDArray[3][1] > 0 & gs_LTrans_Div then
				if gs_optype_m_11 <> SASH_FIXED then LowTransGlassHMod	= GlassSashMod
				for i = 1 to vardim1(NoRebateSashes)
					if gs_optype_m_11 = NoRebateSashes[i] then LowTransGlassHMod	= GlassNoRebateMod
				next i
			endif
			if CasementIDArray[3][2] > 0 & LowTransGlassHMod < GlassNoRebateMod then
				if gs_optype_m_03 <> SASH_FIXED then LowTransGlassHMod	= GlassSashMod
				for i = 1 to vardim1(NoRebateSashes)
					if gs_optype_m_03 = NoRebateSashes[i] then LowTransGlassHMod	= GlassNoRebateMod
				next i
			endif
			if CasementIDArray[3][3] > 0 & gs_LTrans_Div & LowTransGlassHMod < GlassNoRebateMod then
				if gs_optype_m_07 <> SASH_FIXED then LowTransGlassHMod	= GlassSashMod
				for i = 1 to vardim1(NoRebateSashes)
					if gs_optype_m_07 = NoRebateSashes[i] then LowTransGlassHMod	= GlassNoRebateMod
				next i
			endif
		endif
	
		OneSashGlassHeight = (OnlyFixSashesHeight - UppTransGlassHMod - MainGlassHMod - LowTransGlassHMod) / (1 + gs_UTrans + gs_LTrans)
	
		gs_UTrans_h = ac_unit_height - gs_frame_width_upper - gs_UTrans_w/2 - OneSashGlassHeight - UppTransGlassHMod
		gs_LTrans_h = gs_frame_width_lower + gs_LTrans_w/2 + OneSashGlassHeight + LowTransGlassHMod
		parameters	gs_UTrans_h = gs_UTrans_h,
					gs_LTrans_h = gs_LTrans_h	
	endif

	if gs_iPanesConfigVertical = PANESCONFIG_SYMM & gs_UTrans & gs_LTrans then
		if GLOB_MODPAR_NAME = "gs_UTrans_h" then
			gs_LTrans_h	= ac_unit_height - gs_UTrans_h
			parameters gs_LTrans_h	= gs_LTrans_h
		else
			gs_UTrans_h	= ac_unit_height - gs_LTrans_h
			parameters gs_UTrans_h	= gs_UTrans_h
		endif
	endif
endif


! =============================================================================
! Sash Sizes
! =============================================================================

dim MullionStyleArray[10]
	MullionStyleArray[1] = iMullionStyle_01
	MullionStyleArray[2] = iMullionStyle_02
	MullionStyleArray[3] = iMullionStyle_03
	MullionStyleArray[4] = iMullionStyle_04
	MullionStyleArray[5] = iMullionStyle_05
	MullionStyleArray[6] = iMullionStyle_06
	MullionStyleArray[7] = iMullionStyle_07
	MullionStyleArray[8] = iMullionStyle_08
	MullionStyleArray[9] = iMullionStyle_09
	MullionStyleArray[10] = iMullionStyle_10

if	iWindowType = WIN_MultisashHorizontal	|\
	iWindowType = WIN_MultisashVertical		then

	dim sashWidthArray[1][]
	dim sashHeightArray[1][]
	dim sashPosXArray[1][]
	dim sashPosYArray[1][]
	for i = 1 to 10
		sashWidthArray[1][i]	= 0
		sashHeightArray[1][i]	= 0
		sashPosXArray[1][i]		= 0
		sashPosYArray[1][i]		= 0
	next i

	if iWindowType = WIN_MultisashHorizontal then
		cavityTop		= ac_unit_height - gs_frame_width_upper + gs_rebate_width
		cavityBottom	= gs_frame_width_lower - gs_rebate_width
		_offsetX		= -ac_unit_width/2
		iSash			= 1

		for iModule = 1 to _RepeatNum
			_ModuleLength			= ac_unit_width
			_gs_frame_width			= gs_frame_width
			_gs_frame_width_left	= gs_frame_width_left

			if gs_repeat_modules then
				if iModule = 1 then
					_ModuleLength		= gs_axis_distance + gs_frame_offset_left
					_gs_frame_width		= MullionWidth/2
				else
					if iModule = gs_repeat_modules_number then
						_ModuleLength			= gs_axis_distance + gs_frame_offset_right
						_gs_frame_width_left	= MullionWidth/2
					else
						_ModuleLength			= gs_axis_distance
						_gs_frame_width			= MullionWidth/2
						_gs_frame_width_left	= MullionWidth/2
					endif
				endif
			endif

			for iPane = 1 to gs_panes_number
				if iPane = 1 then
					cavityLeft = _offsetX + _gs_frame_width_left - gs_rebate_width
				else
					if iPane = 2 then
						cavityLeft = cavityLeft + PaneWidthArray[iPane-1] + gs_frame_offset_left * gs_repeat_modules * (iModule = 1)\
										-_gs_frame_width_left + MullionWidthArray[iPane-1]/2
					else
						cavityLeft = cavityLeft + PaneWidthArray[iPane-1] - MullionWidthArray[iPane-2]/2 + MullionWidthArray[iPane-1]/2
					endif
				endif
				if iPane = gs_panes_number then
					cavityRight	=  _offsetX + _ModuleLength - _gs_frame_width + gs_rebate_width
				else
					if iPane = 1 then
						cavityRight	= cavityLeft + PaneWidthArray[iPane] + gs_frame_offset_left * gs_repeat_modules * (iModule = 1)\
										-_gs_frame_width_left - MullionWidthArray[iPane]/2 + 2 * gs_rebate_width
					else
						cavityRight	=  cavityLeft + PaneWidthArray[iPane] - MullionWidthArray[iPane-1]/2 - MullionWidthArray[iPane]/2 + 2 * gs_rebate_width
					endif
				endif

				if (iPane = 1) & (iModule = 1) & bLeftCornerFunction & (bFrCornerLeft = 0) & (optypeIDArray[iPane] = SASH_FIXED) then
					leftFrameCorr = gs_frame_width_left + gs_frame_thk * abs(tan(90 - leftCornerAngle / 2))
				else
					leftFrameCorr = 0
				endif

				if ((gs_panes_number = 1) | (iPane = gs_panes_number)) & (iModule = _RepeatNum) & (bRightCornerFunction | bCornerWindow) & (bFrCornerRight = 0) & (optypeIDArray[iPane] = SASH_FIXED) then
					rightFrameCorr = gs_frame_width + gs_frame_thk * abs(tan(90 - rightCornerAngle / 2))
				else
					rightFrameCorr = 0
				endif

				sashWidthArray[1][iSash]	= cavityRight - cavityLeft + leftFrameCorr + rightFrameCorr
				sashHeightArray[1][iSash]	= cavityTop - cavityBottom
				sashPosXArray[1][iSash]		= (cavityLeft + cavityRight - leftFrameCorr + rightFrameCorr)/2
				sashPosYArray[1][iSash]		= cavityBottom
				iSash						= iSash + 1
			next iPane

			_offsetX = _offsetX + _ModuleLength
		next iModule
	else
		cavityLeft	= -ac_unit_width/2 + gs_frame_width_left - gs_rebate_width
		cavityRight	=  ac_unit_width/2 - gs_frame_width + gs_rebate_width
		_offsetY		= 0
		iSash			= 1

		for iModule = 1 to _RepeatNum
			_ModuleHeight			= ac_unit_height
			_gs_frame_width_upper	= gs_frame_width_upper
			_gs_frame_width_lower	= gs_frame_width_lower

			if gs_repeat_modules then
				if iModule = 1 then
					_ModuleHeight			= gs_axis_distance + gs_frame_offset_lower
					_gs_frame_width_upper	= TransomWidth/2
				else
					if iModule = gs_repeat_modules_number then
						_ModuleHeight			= gs_axis_distance + gs_frame_offset_upper
						_gs_frame_width_lower	= TransomWidth/2
					else
						_ModuleHeight			= gs_axis_distance
						_gs_frame_width_upper	= TransomWidth/2
						_gs_frame_width_lower	= TransomWidth/2
					endif
				endif
			endif

			for iPane = 1 to gs_panes_number
				if iPane = 1 then
					cavityBottom = _offsetY + _gs_frame_width_lower - gs_rebate_width
				else
					if iPane = 2 then
						cavityBottom = cavityBottom + PaneHeightArray[iPane-1] + gs_frame_offset_lower * gs_repeat_modules * (iModule = 1)\
										-_gs_frame_width_lower + TransomWidthArray[iPane-1]/2
					else
						cavityBottom = cavityBottom + PaneHeightArray[iPane-1] - TransomWidthArray[iPane-2]/2 + TransomWidthArray[iPane-1]/2
					endif
				endif
				if iPane = gs_panes_number then
					cavityTop = _offsetY + _ModuleHeight - _gs_frame_width_upper + gs_rebate_width
				else
					if iPane = 1 then
						cavityTop = cavityBottom + PaneHeightArray[iPane] + gs_frame_offset_lower * gs_repeat_modules * (iModule = 1)\
									-_gs_frame_width_lower - TransomWidthArray[iPane]/2 + 2 * gs_rebate_width
					else
						cavityTop = cavityBottom + PaneHeightArray[iPane] - TransomWidthArray[iPane-1]/2 - TransomWidthArray[iPane]/2 + 2 * gs_rebate_width
					endif
				endif

				sashWidthArray[1][iSash]	= cavityRight - cavityLeft
				sashHeightArray[1][iSash]	= cavityTop - cavityBottom
				sashPosXArray[1][iSash]		= (cavityLeft + cavityRight)/2
				sashPosYArray[1][iSash]		= cavityBottom
				iSash						= iSash + 1
			next iPane

			_offsetY = _offsetY + _ModuleHeight
		next iModule
	endif
else
	dim sashWidthArray[3][3]
	dim sashHeightArray[3][3]
	dim sashPosXArray[3][3]
	dim sashPosYArray[3][3]
	for i=1 to 3
		for j=1 to 3
			sashWidthArray[i][j]	= 0
			sashHeightArray[i][j]	= 0
			sashPosXArray[i][j]		= 0
			sashPosYArray[i][j]		= 0
		next j
	next i

	! Transom Sashes ==============================================================

	if gs_UTrans then
		cavityHeight = ac_unit_height - gs_UTrans_h - gs_UTrans_w/2 - gs_frame_width_upper + 2*gs_rebate_width
		cavityBottom = gs_UTrans_h + gs_UTrans_w/2 - gs_rebate_width

		! Upper Left Sash -------------------------------------------------------------

		if gs_UTransom_toLeft & gs_LeftMullion_Top  then
			cavityLeft	= -ac_unit_width/2 + gs_frame_width_left - gs_rebate_width
			cavityRight	= -ac_unit_width/2 + gs_LeftSLight_w - gs_Mullion_w_left/2 + gs_rebate_width

			sashWidthArray[1][1]	= cavityRight - cavityLeft
			sashHeightArray[1][1]	= cavityHeight
			sashPosXArray[1][1]		= cavityLeft + (cavityRight - cavityLeft)/2
			sashPosYArray[1][1]		= cavityBottom
		endif

		! Upper Middle Sash -----------------------------------------------------------

		if gs_UTransom_Middle then
			if gs_LeftMullion_Top then
				cavityLeft	= -ac_unit_width/2 + gs_LeftSLight_w + gs_Mullion_w_left/2 - gs_rebate_width
			else
				cavityLeft	= -ac_unit_width/2 + gs_frame_width_left - gs_rebate_width
			endif

			if gs_Mullion_Top then
				cavityRight	= ac_unit_width/2 - gs_SLight_w - gs_Mullion_w/2 + gs_rebate_width
			else
				cavityRight	= ac_unit_width/2 - gs_frame_width + gs_rebate_width
			endif

			if bLeftCornerFunction & bFrCornerLeft = 0 & (gs_optype_m_02 = SASH_FIXED) then
				leftFrameCorr = gs_frame_width + gs_frame_thk * abs(tan(90 - leftCornerAngle / 2))
			else
				leftFrameCorr = 0
			endif

			if bRightCornerFunction & ((gs_bSLight & not(gs_Mullion_Top)) | not(gs_bSLight)) & bFrCornerRight = 0 & (gs_optype_m_02 = SASH_FIXED) then
				rightFrameCorr = gs_frame_width + gs_frame_thk * abs(tan(90 - rightCornerAngle / 2))
			else
				rightFrameCorr = 0
			endif

			sashWidthArray[1][2]	= cavityRight - cavityLeft + leftFrameCorr + rightFrameCorr
			sashHeightArray[1][2]	= cavityHeight
			sashPosXArray[1][2]		= cavityLeft + (cavityRight - cavityLeft - leftFrameCorr + rightFrameCorr)/2
			sashPosYArray[1][2]		= cavityBottom
		endif

		! Upper Right Sash ------------------------------------------------------------

		if gs_UTransom_toRight & gs_Mullion_Top then
			cavityLeft	= ac_unit_width/2 - gs_SLight_w + gs_Mullion_w/2 - gs_rebate_width
			cavityRight	= ac_unit_width/2 - gs_frame_width + gs_rebate_width

			sashWidthArray[1][3]	= cavityRight - cavityLeft
			sashHeightArray[1][3]	= cavityHeight
			sashPosXArray[1][3]		= cavityRight - (cavityRight - cavityLeft)/2
			sashPosYArray[1][3]		= cavityBottom
		endif
	endif


	! Main Sashes =================================================================

	! Middle Left Sash ------------------------------------------------------------

	if gs_bLeftSLight then
		if gs_UTrans & gs_UTransom_toLeft then
			cavityTop = gs_UTrans_h - gs_UTrans_w/2 + gs_rebate_width
		else
			cavityTop = ac_unit_height - gs_frame_width_upper + gs_rebate_width
		endif

		if gs_LTrans & gs_LTransom_toLeft then
			cavityBottom = gs_LTrans_h + gs_LTrans_w/2 - gs_rebate_width
		else
			cavityBottom = gs_frame_width_lower - gs_rebate_width
		endif

		cavityLeft	= -ac_unit_width/2 + gs_frame_width_left - gs_rebate_width

		if gs_LeftMullion_Middle then
			cavityRight	= -ac_unit_width/2 + gs_LeftSLight_w - gs_Mullion_w_left/2 + gs_rebate_width
		else
			cavityRight	=  ac_unit_width/2 - gs_MidPane_w - gs_bSLight * gs_SLight_w
		endif
		sashWidthArray[2][1]	= cavityRight - cavityLeft
		sashHeightArray[2][1]	= cavityTop - cavityBottom
		sashPosXArray[2][1]		= cavityLeft + (cavityRight - cavityLeft)/2
		sashPosYArray[2][1]		= cavityBottom
	endif

	! Middle Middle Sash ----------------------------------------------------------

	if gs_UTrans & gs_UTransom_Middle then
		cavityTop = gs_UTrans_h - gs_UTrans_w/2 + gs_rebate_width
	else
		cavityTop = ac_unit_height - gs_frame_width_upper + gs_rebate_width
	endif

	if gs_LTrans & gs_LTransom_Middle then
		cavityBottom = gs_LTrans_h + gs_LTrans_w/2 - gs_rebate_width
	else
		cavityBottom = gs_frame_width_lower - gs_rebate_width
	endif

	if gs_bLeftSLight then
		if gs_LeftMullion_Middle then
			cavityLeft = -ac_unit_width/2 + gs_LeftSLight_w + gs_Mullion_w_left/2 - gs_rebate_width
		else
			cavityLeft	= ac_unit_width/2 - gs_MidPane_w - gs_bSLight * gs_SLight_w
		endif
	else
		cavityLeft = -ac_unit_width/2 + gs_frame_width_left - gs_rebate_width
	endif

	if gs_bSLight then
		if gs_RightMullion_Middle then
			cavityRight = ac_unit_width/2 - gs_SLight_w - gs_Mullion_w/2 + gs_rebate_width
		else
			cavityRight = ac_unit_width/2 - gs_SLight_w
		endif
	else
		cavityRight	=  ac_unit_width/2 - gs_frame_width + gs_rebate_width
	endif

	sashWidthArray[2][2]	= cavityRight - cavityLeft
	sashHeightArray[2][2]	= cavityTop - cavityBottom
	sashPosXArray[2][2]		= (cavityLeft + cavityRight)/2
	sashPosYArray[2][2]		= cavityBottom

	! Middle Right Sash -----------------------------------------------------------

	if gs_bSLight then
		if gs_UTrans & gs_UTransom_toRight then
			cavityTop = gs_UTrans_h - gs_UTrans_w/2 + gs_rebate_width
		else
			cavityTop = ac_unit_height - gs_frame_width_upper + gs_rebate_width
		endif

		if gs_LTrans & gs_LTransom_toRight then
			cavityBottom = gs_LTrans_h + gs_LTrans_w/2 - gs_rebate_width
		else
			cavityBottom = gs_frame_width_lower - gs_rebate_width
		endif

		if bRightCornerFunction & bFrCornerRight = 0 & (gs_optype_m_05 = SASH_FIXED) then
			rightFrameCorr = gs_frame_width + gs_frame_thk * abs(tan(90 - rightCornerAngle / 2))
		else
			rightFrameCorr = 0
		endif

		if gs_RightMullion_Middle then
			cavityLeft = ac_unit_width/2 - gs_SLight_w + gs_Mullion_w/2 - gs_rebate_width
		else
			cavityLeft = ac_unit_width/2 - gs_SLight_w
		endif

		cavityRight	= ac_unit_width/2 - gs_frame_width + gs_rebate_width
		sashWidthArray[2][3]	= cavityRight - cavityLeft + rightFrameCorr
		sashHeightArray[2][3]	= cavityTop - cavityBottom
		sashPosXArray[2][3]		= cavityRight - (cavityRight - cavityLeft - rightFrameCorr)/2
		sashPosYArray[2][3]		= cavityBottom
	endif

	! Lower Transom Sashes ========================================================

	if gs_LTrans then
		cavityHeight = gs_LTrans_h - gs_LTrans_w/2 - gs_frame_width_lower + 2*gs_rebate_width
		cavityBottom = gs_frame_width_lower - gs_rebate_width

		! Lower Left Sash -------------------------------------------------------------

		if gs_LTransom_toLeft & gs_LeftMullion_Bott then
			cavityLeft	= -ac_unit_width/2 + gs_frame_width_left - gs_rebate_width
			cavityRight	= -ac_unit_width/2 + gs_LeftSLight_w - gs_Mullion_w_left/2 + gs_rebate_width
	
			sashWidthArray[3][1]	= cavityRight - cavityLeft
			sashHeightArray[3][1]	= cavityHeight
			sashPosXArray[3][1]		= cavityLeft + (cavityRight - cavityLeft)/2
			sashPosYArray[3][1]		= cavityBottom
		endif

		! Lower Middle Sash -----------------------------------------------------------

		if gs_LTransom_Middle then
			if gs_LeftMullion_Bott then
				cavityLeft	= -ac_unit_width/2 + gs_LeftSLight_w + gs_Mullion_w_left/2 - gs_rebate_width
			else
				cavityLeft	= -ac_unit_width/2 + gs_frame_width_left - gs_rebate_width
			endif

			if gs_Mullion_Bott then
				cavityRight	=  ac_unit_width/2 - gs_SLight_w - gs_Mullion_w/2 + gs_rebate_width
			else
				cavityRight	=  ac_unit_width/2 - gs_frame_width + gs_rebate_width
			endif

			if bLeftCornerFunction & bFrCornerLeft = 0 & (gs_optype_m_03 = SASH_FIXED) then
				leftFrameCorr = gs_frame_width + gs_frame_thk * abs(tan(90 - leftCornerAngle/2))
			else
				leftFrameCorr = 0
			endif

			if bRightCornerFunction & ((gs_bSLight & not(gs_Mullion_Bott)) | not(gs_bSLight)) & bFrCornerRight = 0 & (gs_optype_m_03 = SASH_FIXED) then
				rightFrameCorr = gs_frame_width + gs_frame_thk * abs(tan(90 - rightCornerAngle/2))
			else
				rightFrameCorr = 0
			endif

			sashWidthArray[3][2]	= cavityRight - cavityLeft + leftFrameCorr + rightFrameCorr
			sashHeightArray[3][2]	= cavityHeight
			sashPosXArray[3][2]		= (cavityLeft + cavityRight - leftFrameCorr + rightFrameCorr)/2
			sashPosYArray[3][2]		= cavityBottom
		endif

		if gs_LTransom_toRight & gs_Mullion_Bott then
			cavityLeft	= ac_unit_width/2 - gs_SLight_w + gs_Mullion_w/2 - gs_rebate_width
			cavityRight	= ac_unit_width/2 - gs_frame_width + gs_rebate_width

			sashWidthArray[3][3]	= cavityRight - cavityLeft
			sashHeightArray[3][3]	= cavityHeight
			sashPosXArray[3][3]		= cavityRight - (cavityRight - cavityLeft)/2
			sashPosYArray[3][3]		= cavityBottom
		endif
	endif
endif


! =============================================================================
! Ventilation Profile
! =============================================================================

if not(bEnableVentilationProfile & bVentilationProfile & (iVentilationProfileType = VENTPROFILE_OVER_GLAZING)) then
	isVentilationProfileInSash_01	= 0
	isVentilationProfileInSash_02	= 0
	isVentilationProfileInSash_03	= 0
	isVentilationProfileInSash_04	= 0
	isVentilationProfileInSash_05	= 0
	isVentilationProfileInSash_06	= 0
	isVentilationProfileInSash_07	= 0
	isVentilationProfileInSash_08	= 0
	isVentilationProfileInSash_09	= 0
	isVentilationProfileInSash_10	= 0
	isVentilationProfileInSash_11	= 0
endif
]]>
</Script_1D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_UI SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[

dim st_uiWinFrameSash[14]
	st_uiWinFrameSash[1] = `Верхняя Средняя`
	st_uiWinFrameSash[2] = `Криволинейное Окно`
	st_uiWinFrameSash[3] = `Соединения Коробки`
	st_uiWinFrameSash[4] = `Угловое Соединение`
	st_uiWinFrameSash[5] = `Соединение Встык`
	st_uiWinFrameSash[6] = `Единая Ширина Коробки`
	st_uiWinFrameSash[7] = `Ширина Коробки...`
	st_uiWinFrameSash[8] = `Глубина Паза`
	st_uiWinFrameSash[9] = `Толщина Остекления`
	st_uiWinFrameSash[10] = `Толщина Коробки`
	st_uiWinFrameSash[11] = `Толщина Коробки`
	st_uiWinFrameSash[12] = `Ширина Рамы Створки`
	st_uiWinFrameSash[13] = `Ширина Паза`
	st_uiWinFrameSash[14] = `Толщина Рамы Створки`

! =============================================================================
! Tabpage Structure Definition
! =============================================================================
! call all available page fix IDs

if iWindowClass	= WINCLASS_SHELL then
	call "ui_tabIDlistHierarchy_m" parameters iUITreeStandardType = 3,		! SHELLWINDOW_UI
						returned_parameters iUiID_Root,
											iUiID_Shape,
											iUiID_FrameSash,
											iUiID_FrameWidth,
											iUiID_SashOption,
											iUiID_OpeningType,
											iUiID_ShellOpening,
											iUiID_Surfaces,
											iUiID_OpLines,
											iUiID_Descriptions
else
	call "ui_tabIDlistHierarchy_m" parameters iUITreeStandardType = 11,		! INT_STANDARD_WIN_UI
			returned_parameters iUiID_Root,
								iUiID_Shape,		iParID_Shape,
								iUiID_NominalSizes,	iParID_NominalSizes,
								iUiID_WinSettOpening, iParID_WinSettOpening,
								iUiID_FrameSash,	iParID_FrameSash,
								iUiID_FrameWidth,	iParID_FrameWidth,
								iUiID_SashFrame,	iParID_SashFrame,
								iUiID_SashOption,	iParID_SashOption,
								iUiID_Handle,		iParID_Handle,
								iUiID_VentProfile,	iParID_VentProfile,
								iUiID_OpeningType,	iParID_OpeningType,
								iUiID_OpLines,		iParID_OpLines,
								iUiID_WinSettOpModAttr,	iParID_WinSettOpModAttr,

								! Wall Opening group
								iUiID_WallOpening,	iParID_WallOpening,
								iUiID_Reveal,		iParID_Reveal,
								iUiID_Closure,	iParID_Closure,
								iUiID_WallInset,	iParID_WallInset,
								iUiID_MasonryArch,	iParID_MasonryArch,
								iUiID_WallOpModelAttr,	iParID_WallOpModelAttr,

								! Fixtures and Fittings group
								iUiID_FixtureFitting,	iParID_FixtureFitting,
								iUiID_CustomCorner,		iParID_CustomCorner,
								iUiID_ThresholdSill,	iParID_ThresholdSill,
								iUiID_Sill,				iParID_Sill,
								iUiID_Board,			iParID_Board,
								iUiID_CasingOut,		iParID_CasingOut,
								iUiID_CasingIn,			iParID_CasingIn,
								iUiID_Shutter,			iParID_Shutter,
                                iUiID_BayBowSillBoard,	iParID_BayBowSillBoard,
								iUiID_FixFittingModAttr, iParID_FixFittingModAttr,

								iUiID_FloorPlanSection,	iParID_FloorPlanSection,
								iUiID_Descriptions,		iParID_Descriptionsendif

endif

! =============================================================================
! Display actual tabpages
! =============================================================================
bOnlyWindowPicture	= 0
ui_current_page gs_ui_current_page

for iTabs = 1 to vardim1(uiUsedPageIDs)
	! --------------------------------------------------------------------------------
	! Independent pages
	! --------------------------------------------------------------------------------
	if uiUsedPageIDs[iTabs][1]= iUiID_Shape then
		ui_page	uiUsedPageIDs[iTabs][1], uiUsedPageIDs[iTabs][2], uiUsedPageNames[iTabs][1], uiUsedPageNames[iTabs][2]
		if gs_ui_current_page = iUiID_Shape then
			iTabpageType		= 1
			gosub "pageCallElevationFrameWidthPages"
		endif
	endif

	! --------------------------------------------------------------------------------
	! Window Settings and Opening group
	! --------------------------------------------------------------------------------
	bSashOptionsPage	= 0
	bOpeningTypePage	= 0
	bFrameSettingsPage	= 0
	bShowAngleValues	= 0
	if iWindowClass	<> WINCLASS_SHELL then
		if uiUsedPageIDs[iTabs][1]= iUiID_WinSettOpening then
			ui_page	uiUsedPageIDs[iTabs][1], uiUsedPageIDs[iTabs][2], uiUsedPageNames[iTabs][1], uiUsedPageNames[iTabs][2]
			if gs_ui_current_page = iUiID_WinSettOpening then
				bOnlyWindowPicture	= 1									 
				iTabpageType		= 1									! TABPAGE_SHAPE
	
				bSashOptionsPage	= 0
				bOpeningTypePage	= 1
				bFrameSettingsPage	= 0
				bShowAngleValues	= 0
	
				gosub "pageCallWinSettOpening"							! Other part of tabpage in gs_general_window_macro
			endif
		endif
	endif
	if uiUsedPageIDs[iTabs][1]= iUiID_FrameSash then
		ui_page	uiUsedPageIDs[iTabs][1], uiUsedPageIDs[iTabs][2], uiUsedPageNames[iTabs][1], uiUsedPageNames[iTabs][2]
		if gs_ui_current_page = iUiID_FrameSash then
			gosub "pageCallWinFrameSash"

			bFrameSettingsPage	= 1
			gosub "pageCallOpTypeSashOptFrameSetPages":
		endif
	endif
	if uiUsedPageIDs[iTabs][1]= iUiID_FrameWidth then
		ui_page	uiUsedPageIDs[iTabs][1], uiUsedPageIDs[iTabs][2], uiUsedPageNames[iTabs][1], uiUsedPageNames[iTabs][2]
		if gs_ui_current_page = iUiID_FrameWidth then
			iTabpageType		= 2
			gosub "pageCallElevationFrameWidthPages"
		endif
	endif
	if uiUsedPageIDs[iTabs][1]= iUiID_SashOption then
		ui_page	uiUsedPageIDs[iTabs][1], uiUsedPageIDs[iTabs][2], uiUsedPageNames[iTabs][1], uiUsedPageNames[iTabs][2]
		if gs_ui_current_page = iUiID_SashOption then
			bSashOptionsPage	= 1
			bOpeningTypePage	= 0
			bFrameSettingsPage	= 0
			gosub "pageCallOpTypeSashOptFrameSetPages"
		endif
	endif
	if uiUsedPageIDs[iTabs][1]= iUiID_OpeningType then
		ui_page	uiUsedPageIDs[iTabs][1], uiUsedPageIDs[iTabs][2], uiUsedPageNames[iTabs][1], uiUsedPageNames[iTabs][2]
		if gs_ui_current_page = iUiID_OpeningType then
			bSashOptionsPage	= 0
			bOpeningTypePage	= 1
			bFrameSettingsPage	= 0
			bShowAngleValues	= 1
			gosub "pageCallOpTypeSashOptFrameSetPages"
		endif
	endif
	if iWindowClass	<> WINCLASS_SHELL then
		if uiUsedPageIDs[iTabs][1]= iUiID_VentProfile then
			ui_page	uiUsedPageIDs[iTabs][1], uiUsedPageIDs[iTabs][2], uiUsedPageNames[iTabs][1], uiUsedPageNames[iTabs][2]
			if gs_ui_current_page = iUiID_VentProfile then
				gosub "pageCallVentilationProfile"
			endif
		endif

		if uiUsedPageIDs[iTabs][1]= iUiID_WinSettOpModAttr then
			ui_page	uiUsedPageIDs[iTabs][1], uiUsedPageIDs[iTabs][2], uiUsedPageNames[iTabs][1], uiUsedPageNames[iTabs][2]
			if gs_ui_current_page = iUiID_WinSettOpModAttr then
				listFieldWinOpSettAttrID = iUiID_WinSettOpModAttr
				gosub "pageCallWinModAttributes"
			endif
		endif
	endif
next iTabs



! =============================================================================
end
! =============================================================================

! --------------------------------------------------------------------------------
! Window Settings and Opening
! --------------------------------------------------------------------------------
"pageCallWinSettOpening":
	call "Casement_rectangular" parameters	bSashOptionsPage		= bSashOptionsPage,
											bOpeningTypePage		= bOpeningTypePage,
											bFrameSettingsPage		= bFrameSettingsPage,
											bShowAngleValues		= bShowAngleValues,
											iUiID_OpeningType		= iUiID_OpeningType,
											iWindowType				= iWindowType,
											iWindowClass			= iWindowClass,
											CasementIDArray 		= CasementIDArray,
											CasementTypeArray		= CasementTypeArray,
											gs_panes_number			= gs_panes_number,
											gs_sash_uniform			= gs_sash_uniform,
											gs_sash_set_to_edit		= gs_sash_set_to_edit,
											gs_more_sash_set_to_edit = gs_more_sash_set_to_edit,
											gs_bLeftSLight			= gs_bLeftSLight,
											gs_bSLight				= gs_bSLight,
											gs_UTrans				= gs_UTrans,
											gs_LTrans				= gs_LTrans,
											gs_UTrans_Div			= gs_UTrans_Div,
											gs_LTrans_Div			= gs_LTrans_Div,
											iMullionStyle_00		= iMullionStyle_00,
											iMullionStyle_01		= iMullionStyle_01,
											iMullionStyle_02		= iMullionStyle_02,
											iMullionStyle_03		= iMullionStyle_03,
											iMullionStyle_04		= iMullionStyle_04,
											iMullionStyle_05		= iMullionStyle_05,
											iMullionStyle_06		= iMullionStyle_06,
											iMullionStyle_07		= iMullionStyle_07,
											iMullionStyle_08		= iMullionStyle_08,
											iMullionStyle_09		= iMullionStyle_09,
											iMullionStyle_10		= iMullionStyle_10,
											iMullionStyle_11		= iMullionStyle_11,
											stFixGlassDir			= stFixGlassDir,
											FixGlassDir				= FixGlassDir,
											FixGlassDir_m			= FixGlassDir_m,
											gs_optype_m_01			= gs_optype_m_01,
											gs_optype_m_02			= gs_optype_m_02,
											gs_optype_m_03			= gs_optype_m_03,
											gs_optype_m_04			= gs_optype_m_04,
											gs_optype_m_05			= gs_optype_m_05,
											gs_optype_m_06			= gs_optype_m_06,
											gs_optype_m_07			= gs_optype_m_07,
											gs_optype_m_08			= gs_optype_m_08,
											gs_optype_m_09			= gs_optype_m_09,
											gs_optype_m_10			= gs_optype_m_10,
											gs_optype_m_11			= gs_optype_m_11,
											gs_UI_CasementRect		= gs_UI_CasementRect,
											stSashType				= stSashType,
											stMullionPosition		= stMullionPosition,
											stOpeningType			= stOpeningType,
											stLouversinFrame		= stLouversinFrame,
											openingAngle_01			= openingAngle_01,
											openingAngle_02			= openingAngle_02,
											openingAngle_03			= openingAngle_03,
											openingAngle_04			= openingAngle_04,
											openingAngle_05			= openingAngle_05,
											openingAngle_06			= openingAngle_06,
											openingAngle_07			= openingAngle_07,
											openingAngle_08			= openingAngle_08,
											openingAngle_09			= openingAngle_09,
											openingAngle_10			= openingAngle_10,
											openingAngle_11			= openingAngle_11,
											openingAngle2_01		= openingAngle2_01,
											openingAngle2_02		= openingAngle2_02,
											openingAngle2_03		= openingAngle2_03,
											openingAngle2_04		= openingAngle2_04,
											openingAngle2_05		= openingAngle2_05,
											openingAngle2_06		= openingAngle2_06,
											openingAngle2_07		= openingAngle2_07,
											openingAngle2_08		= openingAngle2_08,
											openingAngle2_09		= openingAngle2_09,
											openingAngle2_10		= openingAngle2_10,
											openingAngle2_11		= openingAngle2_11,
											gs_panel_mat			= gs_panel_mat,
											gs_panel_mat2			= gs_panel_mat2,
											iLouverStyle			= iLouverStyle,
											gs_louver_thk			= gs_louver_thk,
											gs_louver_width			= gs_louver_width,
											gs_louver_opening_angle	= gs_louver_opening_angle,
											gs_ventSashLouver_mat	= gs_ventSashLouver_mat,
											gs_ui_current_page	= gs_ui_current_page


	call "ui_window_elevation" parameters	iWindowType					= iWindowType,
											iUiID_Shape					= iUiID_Shape,
											gs_pane_set_to_edit			= gs_pane_set_to_edit,
											gs_mullion_set_to_edit		= gs_mullion_set_to_edit,
											gs_transom_set_to_edit		= gs_transom_set_to_edit,
											gs_panes_number				= gs_panes_number,
											gs_repeat_modules			= gs_repeat_modules,
											iTabpageType				= iTabpageType,
											gs_axis_lock				= gs_axis_lock,
											gs_axis_distance			= gs_axis_distance,
											gs_uniform_framewidth		= gs_uniform_framewidth,
											gs_UTrans					= gs_UTrans,
											gs_UTrans_Div				= gs_UTrans_Div,
											gs_UTrans_w					= gs_UTrans_w,
											gs_LTrans					= gs_LTrans,
											gs_LTrans_Div				= gs_LTrans_Div,
											gs_LTrans_w					= gs_LTrans_w,
											gs_frame_width				= gs_frame_width,
											gs_frame_width_left			= gs_frame_width_left,
											gs_frame_width_upper		= gs_frame_width_upper,
											gs_frame_width_lower		= gs_frame_width_lower,
											MullionWidth_01				= MullionWidth_01,
											MullionWidth_02				= MullionWidth_02,
											MullionWidth_03				= MullionWidth_03,
											MullionWidth_04				= MullionWidth_04,
											MullionWidth_05				= MullionWidth_05,
											MullionWidth_06				= MullionWidth_06,
											MullionWidth_07				= MullionWidth_07,
											MullionWidth_08				= MullionWidth_08,
											MullionWidth_09				= MullionWidth_09,
											MullionWidth				= MullionWidth,
											TransomWidth_01				= TransomWidth_01,
											TransomWidth_02				= TransomWidth_02,
											TransomWidth_03				= TransomWidth_03,
											TransomWidth_04				= TransomWidth_04,
											TransomWidth_05				= TransomWidth_05,
											TransomWidth_06				= TransomWidth_06,
											TransomWidth_07				= TransomWidth_07,
											TransomWidth_08				= TransomWidth_08,
											TransomWidth_09				= TransomWidth_09,
											TransomWidth				= TransomWidth,
											PaneWidth_01				= PaneWidth_01,
											PaneWidth_02				= PaneWidth_02,
											PaneWidth_03				= PaneWidth_03,
											PaneWidth_04				= PaneWidth_04,
											PaneWidth_05				= PaneWidth_05,
											PaneWidth_06				= PaneWidth_06,
											PaneWidth_07				= PaneWidth_07,
											PaneWidth_08				= PaneWidth_08,
											PaneWidth_09				= PaneWidth_09,
											PaneWidth_Remain			= PaneWidth_Remain,
											PaneHeight_01				= PaneHeight_01,
											PaneHeight_02				= PaneHeight_02,
											PaneHeight_03				= PaneHeight_03,
											PaneHeight_04				= PaneHeight_04,
											PaneHeight_05				= PaneHeight_05,
											PaneHeight_06				= PaneHeight_06,
											PaneHeight_07				= PaneHeight_07,
											PaneHeight_08				= PaneHeight_08,
											PaneHeight_09				= PaneHeight_09,
											PaneHeight_Remain			= PaneHeight_Remain,
											bOnlyWindowPicture			= bOnlyWindowPicture,
											gs_Mullion_w				= gs_Mullion_w,
											gs_Mullion_w_left			= gs_Mullion_w_left,
											gs_Mullion_Top				= gs_Mullion_Top,
											gs_Mullion_Bott				= gs_Mullion_Bott,
											gs_bSLight					= gs_bSLight,
											gs_iPanesConfig				= gs_iPanesConfig,
											gs_iPanesConfigVertical		= gs_iPanesConfigVertical,
											stPanesConfiguration		= stPanesConfiguration,
											gs_UI_WindowElevation		= gs_UI_WindowElevation,
											stShowSashOnSymbol			= stShowSashOnSymbol,
											stPanesNumber				= stPanesNumber,
											iPaneID						= iPaneID,
											stPaneName					= stPaneName,
											iMullionID					= iMullionID,
											stMullionName				= stMullionName,
											iTransomID					= iTransomID,
											stTransomName				= stTransomName,
											pageStartY					= 0
return


! --------------------------------------------------------------------------------
! Window Frame and Sash
! --------------------------------------------------------------------------------
"pageCallWinFrameSash":

	call "ui_WinFrameSashOptions_m" parameters iWindowType		= iWindowType,
										iWindowShape		= 202,
										bEnableUniformFrameWidth = 1,
										gs_iPanelType		= gs_iPanelType,
										gs_uniform_framewidth = gs_uniform_framewidth,
										bOpeningDirection	= bOpeningDirection,
										bShowRebateOnFixSashUI = 0,
										gs_SashText_typ_num = gs_SashText_typ_num,
										gs_glass_thk		= gs_glass_thk,
										gs_frame_width		= gs_frame_width,
										gs_frame_thk		= gs_frame_thk,
										gs_rebate_width		= gs_rebate_width,
										gs_rebate_depth		= gs_rebate_depth,
										gs_sash_width		= gs_sash_width,
										gs_sash_thk			= gs_sash_thk,
										st_uiWinFrameSash	= st_uiWinFrameSash,
										iUiID_FrameWidth	= iUiID_FrameWidth
										
return



! --------------------------------------------------------------------------------
! Window Settings and Opening Model Attributes
! --------------------------------------------------------------------------------
"pageCallWinModAttributes":

	call "ui_WinSettOpeningModAttr_m" parameters listFieldWinOpSettAttrID	= listFieldWinOpSettAttrID,
										iWindowShape		= 0,
										bVentilationProfile	= bVentilationProfile,
										iWindowType			= iWindowType,
										gs_bLeftSLight		= gs_bLeftSLight,
										gs_bSLight			= gs_bSLight,
										gs_UTrans			= gs_UTrans,
										gs_UTrans_Div		= gs_UTrans_Div,
										gs_LTrans			= gs_LTrans,
										gs_LTrans_Div		= gs_LTrans_Div,
										gs_sash_uniform		= gs_sash_uniform,
										gs_panes_number		= gs_panes_number,
										CasementIDArray		= CasementIDArray,
										iMullionStyle_00	= iMullionStyle_00,
										iMullionStyle_01	= iMullionStyle_01,
										iMullionStyle_02	= iMullionStyle_02,
										iMullionStyle_03	= iMullionStyle_03,
										iMullionStyle_04	= iMullionStyle_04,
										iMullionStyle_05	= iMullionStyle_05,
										iMullionStyle_06	= iMullionStyle_06,
										iMullionStyle_07	= iMullionStyle_07,
										iMullionStyle_08	= iMullionStyle_08,
										iMullionStyle_09	= iMullionStyle_09,
										iMullionStyle_10	= iMullionStyle_10,
										iMullionStyle_11	= iMullionStyle_11,
										gs_optype_m_01		= gs_optype_m_01,
										gs_optype_m_02		= gs_optype_m_02,
										gs_optype_m_03		= gs_optype_m_03,
										gs_optype_m_04		= gs_optype_m_04,
										gs_optype_m_05		= gs_optype_m_05,
										gs_optype_m_06		= gs_optype_m_06,
										gs_optype_m_07		= gs_optype_m_07,
										gs_optype_m_08		= gs_optype_m_08,
										gs_optype_m_09		= gs_optype_m_09,
										gs_optype_m_10		= gs_optype_m_10,
										gs_optype_m_11		= gs_optype_m_11,
										st_uiWinSettModAttr = st_uiWinSettModAttr,
										bLinkSurfacesFrameSash = bLinkSurfacesFrameSash,
										bOverride_MVO_3D	= bOverride_MVO_3D,
										or_bOplines3D		= or_bOplines3D

return



! --------------------------------------------------------------------------------
! Window Sash Options, Opening Type Pages
! --------------------------------------------------------------------------------
"pageCallOpTypeSashOptFrameSetPages":

	call "Casement_rectangular" parameters	bSashOptionsPage		= bSashOptionsPage,
											bOpeningTypePage		= bOpeningTypePage,
											bFrameSettingsPage		= bFrameSettingsPage,
											bShowAngleValues		= bShowAngleValues,
											iWindowType				= iWindowType,
											iWindowClass			= iWindowClass,
											CasementIDArray 		= CasementIDArray,
											CasementTypeArray		= CasementTypeArray,
											gs_panes_number			= gs_panes_number,
											gs_sash_uniform			= gs_sash_uniform,
											gs_sash_set_to_edit		= gs_sash_set_to_edit,
											gs_more_sash_set_to_edit = gs_more_sash_set_to_edit,
											gs_bLeftSLight			= gs_bLeftSLight,
											gs_bSLight				= gs_bSLight,
											gs_UTrans				= gs_UTrans,
											gs_LTrans				= gs_LTrans,
											gs_UTrans_Div			= gs_UTrans_Div,
											gs_LTrans_Div			= gs_LTrans_Div,
											iMullionStyle_00		= iMullionStyle_00,
											iMullionStyle_01		= iMullionStyle_01,
											iMullionStyle_02		= iMullionStyle_02,
											iMullionStyle_03		= iMullionStyle_03,
											iMullionStyle_04		= iMullionStyle_04,
											iMullionStyle_05		= iMullionStyle_05,
											iMullionStyle_06		= iMullionStyle_06,
											iMullionStyle_07		= iMullionStyle_07,
											iMullionStyle_08		= iMullionStyle_08,
											iMullionStyle_09		= iMullionStyle_09,
											iMullionStyle_10		= iMullionStyle_10,
											iMullionStyle_11		= iMullionStyle_11,
											stFixGlassDir			= stFixGlassDir,
											FixGlassDir				= FixGlassDir,
											FixGlassDir_m			= FixGlassDir_m,
											gs_optype_m_01			= gs_optype_m_01,
											gs_optype_m_02			= gs_optype_m_02,
											gs_optype_m_03			= gs_optype_m_03,
											gs_optype_m_04			= gs_optype_m_04,
											gs_optype_m_05			= gs_optype_m_05,
											gs_optype_m_06			= gs_optype_m_06,
											gs_optype_m_07			= gs_optype_m_07,
											gs_optype_m_08			= gs_optype_m_08,
											gs_optype_m_09			= gs_optype_m_09,
											gs_optype_m_10			= gs_optype_m_10,
											gs_optype_m_11			= gs_optype_m_11,
											gs_UI_CasementRect		= gs_UI_CasementRect,
											stSashType				= stSashType,
											stMullionPosition		= stMullionPosition,
											stOpeningType			= stOpeningType,
											stLouversinFrame		= stLouversinFrame,
											openingAngle_01			= openingAngle_01,
											openingAngle_02			= openingAngle_02,
											openingAngle_03			= openingAngle_03,
											openingAngle_04			= openingAngle_04,
											openingAngle_05			= openingAngle_05,
											openingAngle_06			= openingAngle_06,
											openingAngle_07			= openingAngle_07,
											openingAngle_08			= openingAngle_08,
											openingAngle_09			= openingAngle_09,
											openingAngle_10			= openingAngle_10,
											openingAngle_11			= openingAngle_11,
											openingAngle2_01		= openingAngle2_01,
											openingAngle2_02		= openingAngle2_02,
											openingAngle2_03		= openingAngle2_03,
											openingAngle2_04		= openingAngle2_04,
											openingAngle2_05		= openingAngle2_05,
											openingAngle2_06		= openingAngle2_06,
											openingAngle2_07		= openingAngle2_07,
											openingAngle2_08		= openingAngle2_08,
											openingAngle2_09		= openingAngle2_09,
											openingAngle2_10		= openingAngle2_10,
											openingAngle2_11		= openingAngle2_11,
											gs_panel_mat			= gs_panel_mat,
											gs_panel_mat2			= gs_panel_mat2,
											iLouverStyle			= iLouverStyle,
											gs_louver_thk			= gs_louver_thk,
											gs_louver_width			= gs_louver_width,
											gs_louver_opening_angle	= gs_louver_opening_angle,
											gs_ventSashLouver_mat	= gs_ventSashLouver_mat,
											gs_ui_current_page	= gs_ui_current_page

	! Drawing Elevation on Opening Page
	if	bOpeningTypePage					&\
		iWindowType <> WIN_MultisashHorizontal	&\
		iWindowType <> WIN_MultisashVertical	then


		call "ui_window_elevation" parameters	iWindowType			= iWindowType,
												iTabpageType		= 0,			! TABPAGE_NO
												gs_UTrans			= gs_UTrans,
												gs_UTrans_Div		= gs_UTrans_Div,
												gs_LTrans			= gs_LTrans,
												gs_LTrans_Div		= gs_LTrans_Div,
												gs_Mullion_Top		= gs_Mullion_Top,
												gs_Mullion_Bott		= gs_Mullion_Bott,
												gs_bSLight			= gs_bSLight,
												iWindowClass		= iWindowClass,
												pageStartY			= 0
	endif

return


! --------------------------------------------------------------------------------
! Window Shape, Frame Widths
! --------------------------------------------------------------------------------
"pageCallElevationFrameWidthPages":

	call "ui_window_elevation" parameters	iWindowType					= iWindowType,
											gs_pane_set_to_edit			= gs_pane_set_to_edit,
											gs_mullion_set_to_edit		= gs_mullion_set_to_edit,
											gs_transom_set_to_edit		= gs_transom_set_to_edit,
											gs_panes_number				= gs_panes_number,
											gs_repeat_modules			= gs_repeat_modules,
											iTabpageType				= iTabpageType,
											gs_axis_lock				= gs_axis_lock,
											gs_axis_distance			= gs_axis_distance,
											gs_uniform_framewidth		= gs_uniform_framewidth,
											gs_UTrans					= gs_UTrans,
											gs_UTrans_Div				= gs_UTrans_Div,
											gs_UTrans_w					= gs_UTrans_w,
											gs_LTrans					= gs_LTrans,
											gs_LTrans_Div				= gs_LTrans_Div,
											gs_LTrans_w					= gs_LTrans_w,
											gs_frame_width				= gs_frame_width,
											gs_frame_width_left			= gs_frame_width_left,
											gs_frame_width_upper		= gs_frame_width_upper,
											gs_frame_width_lower		= gs_frame_width_lower,
											MullionWidth_01				= MullionWidth_01,
											MullionWidth_02				= MullionWidth_02,
											MullionWidth_03				= MullionWidth_03,
											MullionWidth_04				= MullionWidth_04,
											MullionWidth_05				= MullionWidth_05,
											MullionWidth_06				= MullionWidth_06,
											MullionWidth_07				= MullionWidth_07,
											MullionWidth_08				= MullionWidth_08,
											MullionWidth_09				= MullionWidth_09,
											MullionWidth				= MullionWidth,
											TransomWidth_01				= TransomWidth_01,
											TransomWidth_02				= TransomWidth_02,
											TransomWidth_03				= TransomWidth_03,
											TransomWidth_04				= TransomWidth_04,
											TransomWidth_05				= TransomWidth_05,
											TransomWidth_06				= TransomWidth_06,
											TransomWidth_07				= TransomWidth_07,
											TransomWidth_08				= TransomWidth_08,
											TransomWidth_09				= TransomWidth_09,
											TransomWidth				= TransomWidth,
											PaneWidth_01				= PaneWidth_01,
											PaneWidth_02				= PaneWidth_02,
											PaneWidth_03				= PaneWidth_03,
											PaneWidth_04				= PaneWidth_04,
											PaneWidth_05				= PaneWidth_05,
											PaneWidth_06				= PaneWidth_06,
											PaneWidth_07				= PaneWidth_07,
											PaneWidth_08				= PaneWidth_08,
											PaneWidth_09				= PaneWidth_09,
											PaneWidth_Remain			= PaneWidth_Remain,
											PaneHeight_01				= PaneHeight_01,
											PaneHeight_02				= PaneHeight_02,
											PaneHeight_03				= PaneHeight_03,
											PaneHeight_04				= PaneHeight_04,
											PaneHeight_05				= PaneHeight_05,
											PaneHeight_06				= PaneHeight_06,
											PaneHeight_07				= PaneHeight_07,
											PaneHeight_08				= PaneHeight_08,
											PaneHeight_09				= PaneHeight_09,
											PaneHeight_Remain			= PaneHeight_Remain,
											bOnlyWindowPicture			= bOnlyWindowPicture,
											gs_Mullion_w				= gs_Mullion_w,
											gs_Mullion_w_left			= gs_Mullion_w_left,
											gs_Mullion_Top				= gs_Mullion_Top,
											gs_Mullion_Bott				= gs_Mullion_Bott,
											gs_bSLight					= gs_bSLight,
											gs_iPanesConfig				= gs_iPanesConfig,
											gs_iPanesConfigVertical		= gs_iPanesConfigVertical,
											stPanesConfiguration		= stPanesConfiguration,
											gs_UI_WindowElevation		= gs_UI_WindowElevation,
											stPanesNumber				= stPanesNumber,
											iPaneID						= iPaneID,
											stPaneName					= stPaneName,
											iMullionID					= iMullionID,
											stMullionName				= stMullionName,
											iTransomID					= iTransomID,
											stTransomName				= stTransomName,
											pageStartY					= 0
return



! --------------------------------------------------------------------------------
! Window Ventilation
! --------------------------------------------------------------------------------
"pageCallVentilationProfile":

	call "Ventilation_profile" parameters	isWindow						= 1,
											iWindowType						= iWindowType,
											gs_bSLight						= gs_bSLight,
											gs_bLeftSLight					= gs_bLeftSLight,
											gs_LTrans						= gs_LTrans,
											gs_LTrans_Div					= gs_LTrans_Div,
											gs_UTrans						= gs_UTrans,
											gs_UTrans_Div					= gs_UTrans_Div,
											gs_panes_number					= gs_panes_number,
											CasementIDArray					= CasementIDArray,
											bVentilationProfile				= bVentilationProfile,
											iVentilationProfileType			= iVentilationProfileType,
											isVentilationProfileInSash_01	= isVentilationProfileInSash_01,
											isVentilationProfileInSash_02	= isVentilationProfileInSash_02,
											isVentilationProfileInSash_03	= isVentilationProfileInSash_03,
											isVentilationProfileInSash_04	= isVentilationProfileInSash_04,
											isVentilationProfileInSash_05	= isVentilationProfileInSash_05,
											isVentilationProfileInSash_06	= isVentilationProfileInSash_06,
											isVentilationProfileInSash_07	= isVentilationProfileInSash_07,
											isVentilationProfileInSash_08	= isVentilationProfileInSash_08,
											isVentilationProfileInSash_09	= isVentilationProfileInSash_09,
											isVentilationProfileInSash_10	= isVentilationProfileInSash_10,
											isVentilationProfileInSash_11	= isVentilationProfileInSash_11,
											iMullionStyle_01				= iMullionStyle_01,
											iMullionStyle_02				= iMullionStyle_02,
											iMullionStyle_03				= iMullionStyle_03,
											iMullionStyle_04				= iMullionStyle_04,
											iMullionStyle_05				= iMullionStyle_05,
											iMullionStyle_06				= iMullionStyle_06,
											iMullionStyle_07				= iMullionStyle_07,
											iMullionStyle_08				= iMullionStyle_08,
											iMullionStyle_09				= iMullionStyle_09,
											iMullionStyle_10				= iMullionStyle_10,
											iMullionStyle_11				= iMullionStyle_11
return


]]>
</Script_UI>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_VL SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
! =============================================================================
! Attributes
! =============================================================================

if gs_pen_2D	<= 0 then parameters gs_pen_2D		= 3
if gs_frame_pen	<= 0 then parameters gs_frame_pen	= 2
if gs_sash_pen	<= 0 then parameters gs_sash_pen	= 2
if gs_glass_pen	<= 0 then parameters gs_glass_pen	= 2


! =============================================================================
! Ventilation Profile
! =============================================================================

if bEnableVentilationProfile then
	call "Ventilation_profile" parameters	isWindow						= 1,
											iWindowType						= iWindowType,
											gs_bSLight						= gs_bSLight,
											gs_bLeftSLight					= gs_bLeftSLight,
											gs_LTrans						= gs_LTrans,
											gs_LTrans_Div					= gs_LTrans_Div,
											gs_UTrans						= gs_UTrans,
											gs_UTrans_Div					= gs_UTrans_Div,
											gs_panes_number					= gs_panes_number,
											CasementIDArray					= CasementIDArray,
											bVentilationProfile				= bVentilationProfile,
											iVentilationProfileType			= iVentilationProfileType,
											isVentilationProfileInSash_01	= isVentilationProfileInSash_01,
											isVentilationProfileInSash_02	= isVentilationProfileInSash_02,
											isVentilationProfileInSash_03	= isVentilationProfileInSash_03,
											isVentilationProfileInSash_04	= isVentilationProfileInSash_04,
											isVentilationProfileInSash_05	= isVentilationProfileInSash_05,
											isVentilationProfileInSash_06	= isVentilationProfileInSash_06,
											isVentilationProfileInSash_07	= isVentilationProfileInSash_07,
											isVentilationProfileInSash_08	= isVentilationProfileInSash_08,
											isVentilationProfileInSash_09	= isVentilationProfileInSash_09,
											isVentilationProfileInSash_10	= isVentilationProfileInSash_10,
											isVentilationProfileInSash_11	= isVentilationProfileInSash_11,
											iMullionStyle_01				= iMullionStyle_01,
											iMullionStyle_02				= iMullionStyle_02,
											iMullionStyle_03				= iMullionStyle_03,
											iMullionStyle_04				= iMullionStyle_04,
											iMullionStyle_05				= iMullionStyle_05,
											iMullionStyle_06				= iMullionStyle_06,
											iMullionStyle_07				= iMullionStyle_07,
											iMullionStyle_08				= iMullionStyle_08,
											iMullionStyle_09				= iMullionStyle_09,
											iMullionStyle_10				= iMullionStyle_10,
											iMullionStyle_11				= iMullionStyle_11,
											gs_VentilationProfileTypeEnable	= gs_VentilationProfileTypeEnable
else
	if not(bSkylight) then
		lock	"bVentilationProfile",
				"gs_select_sash_vent_profile",
				"gs_list_freeAirPerformance"
		hideparameter	"bVentilationProfile",
						"gs_select_sash_vent_profile",
						"gs_list_freeAirPerformance"
	endif
endif


! =============================================================================
! Frame
! =============================================================================

values "gs_frame_thk"			range (gs_rebate_depth, ]
values "gs_sash_thk"			range (0, ]
values "gs_frame_width"			range (gs_rebate_width, ]
values "gs_frame_width_left"	range (gs_rebate_width, ]
values "gs_frame_width_upper"	range (gs_rebate_width, ]
values "gs_frame_width_lower"	range (gs_rebate_width, ]
values "gs_sash_width"			range (0, ]
values "gs_glass_thk"			range (0, )
if iWindowType = WIN_MultisashHorizontal then
	values "MullionWidth" range (gs_rebate_width, 2*(min(gs_frame_width, gs_frame_width_left))]
	values "MullionWidth_01" range (gs_rebate_width, ]
	values "MullionWidth_02" range (gs_rebate_width, ]
	values "MullionWidth_03" range (gs_rebate_width, ]
	values "MullionWidth_04" range (gs_rebate_width, ]
	values "MullionWidth_05" range (gs_rebate_width, ]
	values "MullionWidth_06" range (gs_rebate_width, ]
	values "MullionWidth_07" range (gs_rebate_width, ]
	values "MullionWidth_08" range (gs_rebate_width, ]
	values "MullionWidth_09" range (gs_rebate_width, ]
endif
if iWindowType = WIN_MultisashVertical then
	values "TransomWidth" range (gs_rebate_width, 2*(min(gs_frame_width_upper, gs_frame_width_lower))]
	values "TransomWidth_01" range (gs_rebate_width, ]
	values "TransomWidth_02" range (gs_rebate_width, ]
	values "TransomWidth_03" range (gs_rebate_width, ]
	values "TransomWidth_04" range (gs_rebate_width, ]
	values "TransomWidth_05" range (gs_rebate_width, ]
	values "TransomWidth_06" range (gs_rebate_width, ]
	values "TransomWidth_07" range (gs_rebate_width, ]
	values "TransomWidth_08" range (gs_rebate_width, ]
	values "TransomWidth_09" range (gs_rebate_width, ]
endif

if	iWindowType = WIN_MultisashHorizontal |\
	iWindowType = WIN_MultisashVertical then

	values "gs_panes_number" 1,2,3,4,5,6,7,8,9,10

	if gs_repeat_modules then
		if gs_repeat_modules_number < 2 then
			gs_repeat_modules_number = 2
			parameters gs_repeat_modules_number = gs_repeat_modules_number
		endif
		values "gs_repeat_modules_number" range[2, ]
		if iWindowType = WIN_MultisashHorizontal then
			minPaneWidth = MinSashWidth[1]
			for iPane = 2 to gs_panes_number
				minPaneWidth = minPaneWidth + MullionWidthArray[iPane-1] + MinSashWidth[iPane]
			next iPane

			values "gs_axis_distance" range[(minPaneWidth + MullionWidth), ]
		else
			minPaneHeight = MinSashHeight[1]
			for iPane = 2 to gs_panes_number
				minPaneHeight = minPaneHeight + TransomWidthArray[iPane-1] + MinSashHeight[iPane]
			next iPane

			values "gs_axis_distance" range[(minPaneHeight + TransomWidth), ]
		endif
	else
		lock "gs_repeat_modules_number",
			 "gs_axis_lock",
			 "gs_axis_distance"

		if iWindowType = WIN_MultisashHorizontal then
			lock "MullionWidth"
			hideparameter "MullionWidth"
		else
			lock "TransomWidth"
			hideparameter "TransomWidth"
		endif
	endif
endif

minframeWidth = min(gs_frame_width, gs_frame_width_left, gs_frame_width_upper, gs_frame_width_lower)
if gs_bSLight then
	minframeWidth = min(minframeWidth, gs_Mullion_w)
endif
if gs_bLeftSLight then
	minframeWidth = min(minframeWidth, gs_Mullion_w_left)
endif
if gs_UTrans then
	minframeWidth = min(minframeWidth, gs_UTrans_w)
endif
if gs_LTrans then
	minframeWidth = min(minframeWidth, gs_LTrans_w)
endif
if iWindowType = WIN_MultisashHorizontal then
	for i = 2 to gs_panes_number
		minframeWidth = min(minframeWidth, MullionWidthArray[i-1])
	next i
endif
if iWindowType = WIN_MultisashVertical then
	for i = 2 to gs_panes_number
		minframeWidth = min(minframeWidth, TransomWidthArray[i-1])
	next i
endif

values "gs_rebate_width"	range (0, minframeWidth)
values "gs_rebate_depth"	range (0, gs_frame_thk)

values{2} "gs_SashText_typ_num" 	MITERED_JOINT, `Угловое Соединение`,
									BUTT_JOINT, `Соединение Встык`

if gs_uniform_framewidth then
	lock	"gs_frame_width_left",
			"gs_frame_width_upper",
			"gs_frame_width_lower"

	if iWindowType = WIN_MultisashHorizontal then
		lock	"MullionWidth",
				"MullionWidth_01",
				"MullionWidth_02",
				"MullionWidth_03",
				"MullionWidth_04",
				"MullionWidth_05",
				"MullionWidth_06",
				"MullionWidth_07",
				"MullionWidth_08",
				"MullionWidth_09"

		hideparameter	"MullionWidth",
						"MullionWidth_01",
						"MullionWidth_02",
						"MullionWidth_03",
						"MullionWidth_04",
						"MullionWidth_05",
						"MullionWidth_06",
						"MullionWidth_07",
						"MullionWidth_08",
						"MullionWidth_09"
	endif
	if iWindowType = WIN_MultisashVertical then
		lock	"TransomWidth",
				"TransomWidth_01",
				"TransomWidth_02",
				"TransomWidth_03",
				"TransomWidth_04",
				"TransomWidth_05",
				"TransomWidth_06",
				"TransomWidth_07",
				"TransomWidth_08",
				"TransomWidth_09"

		hideparameter	"TransomWidth",
						"TransomWidth_01",
						"TransomWidth_02",
						"TransomWidth_03",
						"TransomWidth_04",
						"TransomWidth_05",
						"TransomWidth_06",
						"TransomWidth_07",
						"TransomWidth_08",
						"TransomWidth_09"
	endif
	if	iWindowType <> WIN_MultisashHorizontal	&\
		iWindowType <> WIN_MultisashVertical	then

		lock	"gs_UTrans_w",
				"gs_LTrans_w",
				"gs_Mullion_w",
				"gs_Mullion_w_left"
	endif
else
	if iWindowType = WIN_MultisashHorizontal then
		for i = 2 to 10
			if (CasementIDArray[1][i] = 2) & not(i < (gs_panes_number + 1)) then
				lock "MullionWidth_01"
				hideparameter "MullionWidth_01"
			endif
			if (CasementIDArray[1][i] = 3) & not(i < (gs_panes_number + 1)) then
				lock "MullionWidth_02"
				hideparameter "MullionWidth_02"
			endif
			if (CasementIDArray[1][i] = 4) & not(i < (gs_panes_number + 1)) then
				lock "MullionWidth_03"
				hideparameter "MullionWidth_03"
			endif
			if (CasementIDArray[1][i] = 5) & not(i < (gs_panes_number + 1)) then
				lock "MullionWidth_04"
				hideparameter "MullionWidth_04"
			endif
			if (CasementIDArray[1][i] = 6) & not(i < (gs_panes_number + 1)) then
				lock "MullionWidth_05"
				hideparameter "MullionWidth_05"
			endif
			if (CasementIDArray[1][i] = 7) & not(i < (gs_panes_number + 1)) then
				lock "MullionWidth_06"
				hideparameter "MullionWidth_06"
			endif
			if (CasementIDArray[1][i] = 8) & not(i < (gs_panes_number + 1)) then
				lock "MullionWidth_07"
				hideparameter "MullionWidth_07"
			endif
			if (CasementIDArray[1][i] = 9) & not(i < (gs_panes_number + 1)) then
				lock "MullionWidth_08"
				hideparameter "MullionWidth_08"
			endif
			if (CasementIDArray[1][i] = 10) & not(i < (gs_panes_number + 1)) then
				lock "MullionWidth_09"
				hideparameter "MullionWidth_09"
			endif
		next i
	endif

	if iWindowType = WIN_MultisashVertical then
		for i = 2 to 10
			if (CasementIDArray[1][i] = 2) & not(i < (gs_panes_number + 1)) then
				lock "TransomWidth_01"
				hideparameter "TransomWidth_01"
			endif
			if (CasementIDArray[1][i] = 3) & not(i < (gs_panes_number + 1)) then
				lock "TransomWidth_02"
				hideparameter "TransomWidth_02"
			endif
			if (CasementIDArray[1][i] = 4) & not(i < (gs_panes_number + 1)) then
				lock "TransomWidth_03"
				hideparameter "TransomWidth_03"
			endif
			if (CasementIDArray[1][i] = 5) & not(i < (gs_panes_number + 1)) then
				lock "TransomWidth_04"
				hideparameter "TransomWidth_04"
			endif
			if (CasementIDArray[1][i] = 6) & not(i < (gs_panes_number + 1)) then
				lock "TransomWidth_05"
				hideparameter "TransomWidth_05"
			endif
			if (CasementIDArray[1][i] = 7) & not(i < (gs_panes_number + 1)) then
				lock "TransomWidth_06"
				hideparameter "TransomWidth_06"
			endif
			if (CasementIDArray[1][i] = 8) & not(i < (gs_panes_number + 1)) then
				lock "TransomWidth_07"
				hideparameter "TransomWidth_07"
			endif
			if (CasementIDArray[1][i] = 9) & not(i < (gs_panes_number + 1)) then
				lock "TransomWidth_08"
				hideparameter "TransomWidth_08"
			endif
			if (CasementIDArray[1][i] = 10) & not(i < (gs_panes_number + 1)) then
				lock "TransomWidth_09"
				hideparameter "TransomWidth_09"
			endif
		next i
	endif
endif

if iWindowType = WIN_MultisashVertical then
	dim stAvailableSashOnSymbol[]
	dim iAvailableSashOnSymbol[]
	for iPane = 1 to gs_panes_number
		stAvailableSashOnSymbol[iPane] = stShowSashOnSymbol[iPane]
		iAvailableSashOnSymbol[iPane] = iPane
	next iPane

	values "gs_ShowSashOnSymbol"	stAvailableSashOnSymbol
	values "gs_iShowSashOnSymbol"	iAvailableSashOnSymbol

	if GLOB_MODPAR_NAME = "gs_ShowSashOnSymbol" then
		for iPane = 1 to gs_panes_number
			if gs_ShowSashOnSymbol = stShowSashOnSymbol[iPane] then
				gs_iShowSashOnSymbol = iPane				
				iPane = gs_panes_number
			endif
		next iPane
		parameters gs_iShowSashOnSymbol = gs_iShowSashOnSymbol
	else
		gs_ShowSashOnSymbol = stShowSashOnSymbol[gs_iShowSashOnSymbol]
		parameters gs_ShowSashOnSymbol = gs_ShowSashOnSymbol
	endif
endif

if	iWindowType = WIN_W2					|\
	iWindowType = WIN_WSingleHung2			|\
	iWindowType = WIN_WDoubleHung2			|\
	iWindowType = WIN_WDoubleSash			|\
	iWindowType = WIN_W2Sidelight			|\
	iWindowType = WIN_WVariable				then

	values "gs_PanesConfig"		stPanesConfiguration[1], stPanesConfiguration[3]
	values "gs_iPanesConfig"	PANESCONFIG_UNIFORM, PANESCONFIG_ASYMM
endif

if	iWindowType = WIN_W3				|\
	iWindowType = WIN_WSingleHung3		|\
	iWindowType = WIN_WDoubleHung3		|\
	iWindowType = WIN_W32Sidelights1	|\
	iWindowType = WIN_W32Sidelights2	then

	values "gs_PanesConfig"		stPanesConfiguration[1], stPanesConfiguration[2], stPanesConfiguration[3]
	values "gs_iPanesConfig"	PANESCONFIG_UNIFORM, PANESCONFIG_SYMM, PANESCONFIG_ASYMM
endif

if	iWindowType = WIN_WVariableDoubleSash	then
	values "gs_PanesConfig"		stPanesConfiguration[1], stPanesConfiguration[3], stPanesConfiguration[4]
	values "gs_iPanesConfig"	PANESCONFIG_UNIFORM, PANESCONFIG_ASYMM, PANESCONFIG_UNIF_DOUBSASHES
endif

if	iWindowType = WIN_MultisashHorizontal	then
	values "gs_PanesConfig"		stPanesConfiguration[1], stPanesConfiguration[3]
	values "gs_iPanesConfig"	PANESCONFIG_UNIFORM, PANESCONFIG_ASYMM

	if gs_panes_number = 1 then
		lock "gs_PanesConfig", "gs_iPanesConfig"
	endif
endif

if	iWindowType <> WIN_MultisashVertical	then
	if GLOB_MODPAR_NAME = "gs_PanesConfig" then
		gs_iPanesConfig	= PANESCONFIG_UNIFORM
		if gs_PanesConfig = stPanesConfiguration[2]	then gs_iPanesConfig	= PANESCONFIG_SYMM
		if gs_PanesConfig = stPanesConfiguration[3]	then gs_iPanesConfig	= PANESCONFIG_ASYMM
		if gs_PanesConfig = stPanesConfiguration[4]	then gs_iPanesConfig	= PANESCONFIG_UNIF_DOUBSASHES

		parameters gs_iPanesConfig = gs_iPanesConfig
	else
		gs_PanesConfig = stPanesConfiguration[gs_iPanesConfig]
		parameters gs_PanesConfig = gs_PanesConfig
	endif
endif


if	iWindowType = WIN_W1					|\
	iWindowType = WIN_W2					|\
	iWindowType = WIN_W3					|\
	iWindowType = WIN_WVariable				|\
	iWindowType = WIN_WDoubleSash			|\
	iWindowType = WIN_WVariableDoubleSash	then

	if gs_UTrans & gs_LTrans then
		values "gs_PanesConfigVertical"		stPanesConfiguration
		values "gs_iPanesConfigVertical"	PANESCONFIG_UNIFORM, PANESCONFIG_SYMM, PANESCONFIG_ASYMM
	else
		values "gs_PanesConfigVertical"		stPanesConfiguration[1], stPanesConfiguration[3]
		values "gs_iPanesConfigVertical"	PANESCONFIG_UNIFORM, PANESCONFIG_ASYMM
	endif
endif

if	iWindowType = WIN_W2Sidelight			then
	if gs_LTrans then
		values "gs_PanesConfigVertical"		stPanesConfiguration
		values "gs_iPanesConfigVertical"	PANESCONFIG_UNIFORM, PANESCONFIG_SYMM, PANESCONFIG_ASYMM
	else
		values "gs_PanesConfigVertical"		stPanesConfiguration[1], stPanesConfiguration[3]
		values "gs_iPanesConfigVertical"	PANESCONFIG_UNIFORM, PANESCONFIG_ASYMM
	endif
endif

if	iWindowType = WIN_W32Sidelights1		|\
	iWindowType = WIN_W32Sidelights2		then

	values "gs_PanesConfigVertical"		stPanesConfiguration[1], stPanesConfiguration[3]
	values "gs_iPanesConfigVertical"	PANESCONFIG_UNIFORM, PANESCONFIG_ASYMM
endif

if iWindowType = WIN_MultisashVertical then
	values "gs_PanesConfigVertical"		stPanesConfiguration[1], stPanesConfiguration[3]
	values "gs_iPanesConfigVertical"	PANESCONFIG_UNIFORM, PANESCONFIG_ASYMM

	if gs_panes_number = 1 then
		lock "gs_PanesConfigVertical", "gs_iPanesConfigVertical"
	endif
endif

if	iWindowType <> WIN_MultisashHorizontal	then

	if GLOB_MODPAR_NAME = "gs_PanesConfigVertical" then
		gs_iPanesConfigVertical	= PANESCONFIG_UNIFORM
		if gs_PanesConfigVertical = stPanesConfiguration[2]	then gs_iPanesConfigVertical	= PANESCONFIG_SYMM
		if gs_PanesConfigVertical = stPanesConfiguration[3]	then gs_iPanesConfigVertical	= PANESCONFIG_ASYMM

		parameters gs_iPanesConfigVertical = gs_iPanesConfigVertical
	else
		gs_PanesConfigVertical = stPanesConfiguration[gs_iPanesConfigVertical]
		parameters gs_PanesConfigVertical = gs_PanesConfigVertical
	endif
endif

if	iWindowType = WIN_MultisashHorizontal	|\
	iWindowType = WIN_MultisashVertical		then

	if iWindowType = WIN_MultisashHorizontal then
		if gs_iPanesConfig = PANESCONFIG_UNIFORM then
			lock	"PaneWidth_01",
					"PaneWidth_02",
					"PaneWidth_03",
					"PaneWidth_04",
					"PaneWidth_05",
					"PaneWidth_06",
					"PaneWidth_07",
					"PaneWidth_08",
					"PaneWidth_09",
					"PaneWidth_Remain"

			hideparameter	"PaneWidth_01",
							"PaneWidth_02",
							"PaneWidth_03",
							"PaneWidth_04",
							"PaneWidth_05",
							"PaneWidth_06",
							"PaneWidth_07",
							"PaneWidth_08",
							"PaneWidth_09",
							"PaneWidth_Remain"
		else
			for i = 2 to 10
				if (CasementIDArray[1][i] = 2) & not(i < (gs_panes_number + 1)) then
					lock "PaneWidth_01"
					hideparameter "PaneWidth_01"
				endif
				if (CasementIDArray[1][i] = 3) & not(i < (gs_panes_number + 1)) then
					lock "PaneWidth_02"
					hideparameter "PaneWidth_02"
				endif
				if (CasementIDArray[1][i] = 4) & not(i < (gs_panes_number + 1)) then
					lock "PaneWidth_03"
					hideparameter "PaneWidth_03"
				endif
				if (CasementIDArray[1][i] = 5) & not(i < (gs_panes_number + 1)) then
					lock "PaneWidth_04"
					hideparameter "PaneWidth_04"
				endif
				if (CasementIDArray[1][i] = 6) & not(i < (gs_panes_number + 1)) then
					lock "PaneWidth_05"
					hideparameter "PaneWidth_05"
				endif
				if (CasementIDArray[1][i] = 7) & not(i < (gs_panes_number + 1)) then
					lock "PaneWidth_06"
					hideparameter "PaneWidth_06"
				endif
				if (CasementIDArray[1][i] = 8) & not(i < (gs_panes_number + 1)) then
					lock "PaneWidth_07"
					hideparameter "PaneWidth_07"
				endif
				if (CasementIDArray[1][i] = 9) & not(i < (gs_panes_number + 1)) then
					lock "PaneWidth_08"
					hideparameter "PaneWidth_08"
				endif
				if (CasementIDArray[1][i] = 10) & not(i < (gs_panes_number + 1)) then
					lock "PaneWidth_09"
					hideparameter "PaneWidth_09"
				endif
			next i

			lock "PaneWidth_Remain"
			parameters PaneWidth_Remain = PaneWidth_Remain
		endif
	endif

	if iWindowType = WIN_MultisashVertical then
		if gs_iPanesConfigVertical = PANESCONFIG_UNIFORM then
			lock	"PaneHeight_01",
					"PaneHeight_02",
					"PaneHeight_03",
					"PaneHeight_04",
					"PaneHeight_05",
					"PaneHeight_06",
					"PaneHeight_07",
					"PaneHeight_08",
					"PaneHeight_09",
					"PaneHeight_Remain"

			hideparameter	"PaneHeight_01",
							"PaneHeight_02",
							"PaneHeight_03",
							"PaneHeight_04",
							"PaneHeight_05",
							"PaneHeight_06",
							"PaneHeight_07",
							"PaneHeight_08",
							"PaneHeight_09",
							"PaneHeight_Remain"
		else
			for i = 2 to 10
				if (CasementIDArray[1][i] = 2) & not(i < (gs_panes_number + 1)) then
					lock "PaneHeight_01"
					hideparameter "PaneHeight_01"
				endif
				if (CasementIDArray[1][i] = 3) & not(i < (gs_panes_number + 1)) then
					lock "PaneHeight_02"
					hideparameter "PaneHeight_02"
				endif
				if (CasementIDArray[1][i] = 4) & not(i < (gs_panes_number + 1)) then
					lock "PaneHeight_03"
					hideparameter "PaneHeight_03"
				endif
				if (CasementIDArray[1][i] = 5) & not(i < (gs_panes_number + 1)) then
					lock "PaneHeight_04"
					hideparameter "PaneHeight_04"
				endif
				if (CasementIDArray[1][i] = 6) & not(i < (gs_panes_number + 1)) then
					lock "PaneHeight_05"
					hideparameter "PaneHeight_05"
				endif
				if (CasementIDArray[1][i] = 7) & not(i < (gs_panes_number + 1)) then
					lock "PaneHeight_06"
					hideparameter "PaneHeight_06"
				endif
				if (CasementIDArray[1][i] = 8) & not(i < (gs_panes_number + 1)) then
					lock "PaneHeight_07"
					hideparameter "PaneHeight_07"
				endif
				if (CasementIDArray[1][i] = 9) & not(i < (gs_panes_number + 1)) then
					lock "PaneHeight_08"
					hideparameter "PaneHeight_08"
				endif
				if (CasementIDArray[1][i] = 10) & not(i < (gs_panes_number + 1)) then
					lock "PaneHeight_09"
					hideparameter "PaneHeight_09"
				endif
			next i

			lock "PaneHeight_Remain"
			parameters PaneHeight_Remain = PaneHeight_Remain
		endif
	endif
else
	if gs_iPanesConfig = PANESCONFIG_UNIFORM then
		if gs_bSLight then
			lock "gs_SLight_w"
			hideparameter "gs_SLight_w"
		endif
		if gs_bSLight & gs_bLeftSLight then
			lock "gs_MidPane_w"
			hideparameter "gs_MidPane_w"
		endif
	endif
	if gs_iPanesConfigVertical = PANESCONFIG_UNIFORM then
		if gs_UTrans then
			lock "gs_UTrans_h"
			hideparameter "gs_UTrans_h"
		endif
		if gs_LTrans then
			lock "gs_LTrans_h"
			hideparameter "gs_LTrans_h"
		endif
	endif
	if gs_iPanesConfigVertical = PANESCONFIG_SYMM then
		lock "gs_UTrans_h"
		hideparameter "gs_UTrans_h"
	endif

	if not(gs_UTrans) & not(gs_LTrans) then
		lock "gs_PanesConfigVertical", "gs_iPanesConfigVertical"
		hideparameter "gs_PanesConfigVertical", "gs_iPanesConfigVertical"
	endif
endif


! =============================================================================
! Transom
! =============================================================================

if	iWindowType <> WIN_MultisashHorizontal	&\
	iWindowType <> WIN_MultisashVertical	then

	values "gs_UTrans_w"		range(gs_rebate_width, ]
	values "gs_LTrans_w"		range(gs_rebate_width, ]
	values "gs_Mullion_w"		range(gs_rebate_width, ]
	values "gs_Mullion_w_left"	range(gs_rebate_width, ]

	values "gs_UTrans_h" range( gs_LTrans*(gs_LTrans_h+gs_UTrans_w/2) + not(gs_LTrans)*gs_frame_width_lower - gs_rebate_width+gs_sash_width + gs_UTrans_w/2,
								ac_unit_height - (gs_frame_width_upper - gs_rebate_width + gs_sash_width + gs_UTrans_w/2))
	if	gs_iPanesConfigVertical = PANESCONFIG_SYMM then
		values "gs_LTrans_h" range( gs_frame_width_lower - gs_rebate_width + gs_sash_width + gs_LTrans_w/2,
									ac_unit_height/2-( gs_sash_width - gs_rebate_width+gs_LTrans_w/2))
	else
		values "gs_LTrans_h" range( gs_frame_width_lower - gs_rebate_width + gs_sash_width + gs_LTrans_w/2,
									not(gs_UTrans)*(ac_unit_height - gs_frame_width_upper) + gs_UTrans*(gs_UTrans_h-gs_UTrans_w/2)-( gs_sash_width - gs_rebate_width+gs_LTrans_w/2))
	endif

	if not(gs_UTrans) then
		lock "gs_UTrans_w", "gs_UTrans_h", "gs_UTrans_Div"
		hideparameter "gs_UTrans_w", "gs_UTrans_h", "gs_UTrans_Div"
	endif

	if not(gs_LTrans) & iWindowType <> WIN_W2Sidelight  then
		lock "gs_LTrans_w", "gs_LTrans_h", "gs_LTrans_Div"
		hideparameter "gs_LTrans_w", "gs_LTrans_h", "gs_LTrans_Div"
	endif
endif

if	iWindowType = WIN_W2					|\
	iWindowType = WIN_WSingleHung2			|\
	iWindowType = WIN_WDoubleHung2			|\
	iWindowType = WIN_WDoubleSash			|\
	iWindowType = WIN_W2Sidelight			|\
	iWindowType = WIN_WVariable				|\
	iWindowType = WIN_WVariableDoubleSash	then

	values "gs_SLight_w" range ( gs_frame_width - gs_rebate_width + gs_sash_width + gs_Mullion_w/2,
								ac_unit_width - gs_frame_width_left - gs_Mullion_w/2 - 2 * (gs_sash_width - gs_rebate_width) )
endif

if	iWindowType = WIN_W3				|\
	iWindowType = WIN_WSingleHung3		|\
	iWindowType = WIN_WDoubleHung3		|\
	iWindowType = WIN_W32Sidelights1	|\
	iWindowType = WIN_W32Sidelights2	then

	if gs_iPanesConfig = PANESCONFIG_SYMM then
		values "gs_SLight_w" range (max(gs_frame_width, gs_frame_width_left) + 2 *(gs_sash_width - gs_rebate_width) + (max(gs_Mullion_w, gs_Mullion_w_left))/2,
									ac_unit_width/2 - (max(gs_Mullion_w, gs_Mullion_w_left))/2 - (gs_sash_width - gs_rebate_width)]
	endif
	if gs_iPanesConfig = PANESCONFIG_ASYMM then
		values "gs_SLight_w" range( gs_frame_width + 2 *(gs_sash_width - gs_rebate_width) + gs_Mullion_w/2,
									ac_unit_width - gs_MidPane_w - gs_frame_width - gs_frame_width_left - gs_Mullion_w/2 - gs_Mullion_w_left/2 - 4 *( gs_sash_width - gs_rebate_width))
		values "gs_MidPane_w" range(2 *(gs_sash_width - gs_rebate_width) + gs_Mullion_w/2 + gs_Mullion_w_left/2,
									ac_unit_width - gs_SLight_w - gs_frame_width_left - gs_Mullion_w_left - 2 *(gs_sash_width - gs_rebate_width))
	endif
endif

if	iWindowType = WIN_WVariable				|\
	iWindowType = WIN_WVariableDoubleSash	then

	if not(gs_bSLight) then
		lock "gs_SLight_w", "gs_Mullion_w"
		hideparameter "gs_SLight_w", "gs_Mullion_w"
	endif

	if not(gs_bSLight & gs_UTrans) then
		lock "gs_Mullion_Top"
		hideparameter "gs_Mullion_Top"
	endif

	if not(gs_bSLight & gs_LTrans) then
		lock "gs_Mullion_Bott"
		hideparameter "gs_Mullion_Bott"
	endif
endif

if iWindowType = WIN_MultisashHorizontal then
	if gs_panes_number > 1 then
		for iPane = 1 to gs_panes_number - 1
			if iPane = 1 then
				if gs_repeat_modules then
					minPaneWidth = MullionWidth/2 + MullionWidthArray[iPane]/2
				else
					minPaneWidth = gs_frame_width_left + MullionWidthArray[iPane]/2
				endif
			else
				minPaneWidth = MullionWidthArray[iPane-1]/2 + MullionWidthArray[iPane]/2
			endif
			minPaneWidth = minPaneWidth + MinSashWidth[iPane]

			_SumLeftPaneWidth = 0
			for jPane = 1 to iPane - 1
				_SumLeftPaneWidth = _SumLeftPaneWidth + PaneWidthArray[jPane]
			next jPane

			_SumRightMinPaneWidth = 0
			for jPane = iPane + 1 to gs_panes_number
				if jPane = gs_panes_number then
					if gs_repeat_modules then
						_SumRightMinPaneWidth = _SumRightMinPaneWidth + MinSashWidth[jPane] + MullionWidthArray[jPane-1]/2 + Mullionwidth/2
					else
						_SumRightMinPaneWidth = _SumRightMinPaneWidth + MinSashWidth[jPane] + MullionWidthArray[jPane-1]/2 + gs_frame_width
					endif
				else
					_SumRightMinPaneWidth = _SumRightMinPaneWidth + MinSashWidth[jPane] + MullionWidthArray[jPane-1]/2 + MullionWidthArray[jPane]/2
				endif
			next jPane

			if gs_repeat_modules then
				maxPaneWidth = gs_axis_distance - _SumLeftPaneWidth - _SumRightMinPaneWidth
			else
				maxPaneWidth = ac_unit_width - _SumLeftPaneWidth - _SumRightMinPaneWidth
			endif

			_VariableName = "PaneWidth_0" + STR (iPane, 1, 0)
			values _VariableName range[minPaneWidth, maxPaneWidth]
		next iPane
	endif

	values "gs_mullion_set_to_edit" validMullionID
endif

if iWindowType = WIN_MultisashVertical then
	if gs_panes_number > 1 then
		for iPane = 1 to gs_panes_number - 1
			if iPane = 1 then
				if gs_repeat_modules then
					minPaneHeight = TransomWidth/2 + TransomWidthArray[iPane]/2
				else
					minPaneHeight = gs_frame_width_lower + TransomWidthArray[iPane]/2
				endif
			else
				minPaneHeight = TransomWidthArray[iPane-1]/2 + TransomWidthArray[iPane]/2
			endif
			minPaneHeight = minPaneHeight + MinSashHeight[iPane]

			_SumLowerPaneHeight = 0
			for jPane = 1 to iPane - 1
				_SumLowerPaneHeight = _SumLowerPaneHeight + PaneHeightArray[jPane]
			next jPane

			_SumUpperMinPaneHeight = 0
			for jPane = iPane + 1 to gs_panes_number
				if jPane = gs_panes_number then
					if gs_repeat_modules then
						_SumUpperMinPaneHeight = _SumUpperMinPaneHeight + MinSashHeight[jPane] + TransomWidthArray[jPane-1]/2 + TransomWidth/2
					else
						_SumUpperMinPaneHeight = _SumUpperMinPaneHeight + MinSashHeight[jPane] + TransomWidthArray[jPane-1]/2 + gs_frame_width_upper
					endif
				else
					_SumUpperMinPaneHeight = _SumUpperMinPaneHeight + MinSashHeight[jPane] + TransomWidthArray[jPane-1]/2 + TransomWidthArray[jPane]/2
				endif
			next jPane

			if gs_repeat_modules then
				maxPaneHeight = gs_axis_distance - _SumLowerPaneHeight - _SumUpperMinPaneHeight
			else
				maxPaneHeight = ac_unit_height - _SumLowerPaneHeight - _SumUpperMinPaneHeight
			endif

			_VariableName = "PaneHeight_0" + STR (iPane, 1, 0)
			values _VariableName range[minPaneHeight, maxPaneHeight]
		next iPane
	endif

	values "gs_pane_set_to_edit" validPaneID
	values "gs_transom_set_to_edit" validTransomID
endif


! =============================================================================
! Sash
! =============================================================================

if bSkylight then
	values "gs_opening_dir"		stOpeningDir
endif

if	iWindowClass = WINCLASS_SINGLE_HUNG |\
	iWindowClass = WINCLASS_DOUBLE_HUNG |\
	iWindowClass = WINCLASS_HORIZONTAL_SLIDING then
	parameters gs_sash_thk = gs_frame_thk/2
	lock "gs_sash_thk"
endif


! =============================================================================
! Sash Options
! =============================================================================

if iWindowClass = WINCLASS_MULTISASH then
	if gs_sash_uniform then
		for i = 1 to gs_panes_number
			if CasementIDArray[1][i] = 2 then
				lock "vgn_02", "hgn_02", "vgn2_02", "hgn2_02"
				hideparameter "vgn_02", "hgn_02", "vgn2_02", "hgn2_02"
			endif
			if CasementIDArray[1][i] = 3 then
				lock "vgn_03", "hgn_03", "vgn2_03", "hgn2_03"
				hideparameter "vgn_03", "hgn_03", "vgn2_03", "hgn2_03"
			endif
			if CasementIDArray[1][i] = 4 then
				lock "vgn_04", "hgn_04", "vgn2_04", "hgn2_04"
				hideparameter "vgn_04", "hgn_04", "vgn2_04", "hgn2_04"
			endif
			if CasementIDArray[1][i] = 5 then
				lock "vgn_05", "hgn_05", "vgn2_05", "hgn2_05"
				hideparameter "vgn_05", "hgn_05", "vgn2_05", "hgn2_05"
			endif
			if CasementIDArray[1][i] = 6 then
				lock "vgn_06", "hgn_06", "vgn2_06", "hgn2_06"
				hideparameter "vgn_06", "hgn_06", "vgn2_06", "hgn2_06"
			endif
			if CasementIDArray[1][i] = 7 then
				lock "vgn_07", "hgn_07", "vgn2_07", "hgn2_07"
				hideparameter "vgn_07", "hgn_07", "vgn2_07", "hgn2_07"
			endif
			if CasementIDArray[1][i] = 8 then
				lock "vgn_08", "hgn_08", "vgn2_08", "hgn2_08"
				hideparameter "vgn_08", "hgn_08", "vgn2_08", "hgn2_08"
			endif
			if CasementIDArray[1][i] = 9 then
				lock "vgn_09", "hgn_09", "vgn2_09", "hgn2_09"
				hideparameter "vgn_09", "hgn_09", "vgn2_09", "hgn2_09"
			endif
			if CasementIDArray[1][i] = 10 then
				lock "vgn_10", "hgn_10", "vgn2_10", "hgn2_10"
				hideparameter "vgn_10", "hgn_10", "vgn2_10", "hgn2_10"
			endif
		next i
	endif

	dim sashMullionResetArray[1][]
	for i = 1 to 10
		sashMullionResetArray[1][i]	= 0
	next i
	if GLOB_MODPAR_NAME <> "" then
		! Not in case of multiple selection
		if	(iWindowType = WIN_MultisashHorizontal & (GLOB_MODPAR_NAME = "B" | (GLOB_MODPAR_NAME = "A" & not(gs_repeat_modules & gs_axis_lock)))) | \
			(iWindowType = WIN_MultisashVertical & (GLOB_MODPAR_NAME = "A" | (GLOB_MODPAR_NAME = "B" &  not(gs_repeat_modules & gs_axis_lock)))) | \
			(gs_repeat_modules & GLOB_MODPAR_NAME = "gs_axis_distance") | \
			(gs_sash_uniform & (GLOB_MODPAR_NAME = "gs_sash_uniform" | GLOB_MODPAR_NAME = "MullionStyle_00" | GLOB_MODPAR_NAME = "iMullionStyle_00")) | \
			(not(gs_unit_nominal) & (GLOB_MODPAR_NAME = "gs_tolerance_left" | GLOB_MODPAR_NAME = "gs_tolerance_right" | GLOB_MODPAR_NAME = "gs_tolerance_upper" | GLOB_MODPAR_NAME = "gs_tolerance_lower")) |\
			GLOB_MODPAR_NAME = "bVentilationProfile"		|\
			GLOB_MODPAR_NAME = "iVentilationProfileType"	|\
			(GLOB_MODPAR_NAME = "VentilationProfileHeight" & bVentilationProfile & (iVentilationProfileType = VENTPROFILE_OVER_FRAME)) then
			! Reset all sashes
			for i = 1 to gs_panes_number
				sashMullionResetArray[1][i]	= 1
			next i
		else
			! Reset specific sashes
			if iWindowType = WIN_MultisashHorizontal then
				if GLOB_MODPAR_NAME = "PaneWidth_01" then
					sashMullionResetArray[1][1] = 1
					sashMullionResetArray[1][gs_panes_number] = 1
				endif
				if GLOB_MODPAR_NAME = "PaneWidth_02" then
					sashMullionResetArray[1][2] = 1
					sashMullionResetArray[1][gs_panes_number] = 1
				endif
				if GLOB_MODPAR_NAME = "PaneWidth_03" then
					sashMullionResetArray[1][3] = 1
					sashMullionResetArray[1][gs_panes_number] = 1
				endif
				if GLOB_MODPAR_NAME = "PaneWidth_04" then
					sashMullionResetArray[1][4] = 1
					sashMullionResetArray[1][gs_panes_number] = 1
				endif
				if GLOB_MODPAR_NAME = "PaneWidth_05" then
					sashMullionResetArray[1][5] = 1
					sashMullionResetArray[1][gs_panes_number] = 1
				endif
				if GLOB_MODPAR_NAME = "PaneWidth_06" then
					sashMullionResetArray[1][6] = 1
					sashMullionResetArray[1][gs_panes_number] = 1
				endif
				if GLOB_MODPAR_NAME = "PaneWidth_07" then
					sashMullionResetArray[1][7] = 1
					sashMullionResetArray[1][gs_panes_number] = 1
				endif
				if GLOB_MODPAR_NAME = "PaneWidth_08" then
					sashMullionResetArray[1][8] = 1
					sashMullionResetArray[1][gs_panes_number] = 1
				endif
				if GLOB_MODPAR_NAME = "PaneWidth_09" then
					sashMullionResetArray[1][9] = 1
					sashMullionResetArray[1][gs_panes_number] = 1
				endif
			endif

			if iWindowType = WIN_MultisashVertical then
				if GLOB_MODPAR_NAME = "PaneHeight_01" then
					sashMullionResetArray[1][1] = 1
					sashMullionResetArray[1][gs_panes_number] = 1
				endif
				if GLOB_MODPAR_NAME = "PaneHeight_02" then
					sashMullionResetArray[1][2] = 1
					sashMullionResetArray[1][gs_panes_number] = 1
				endif
				if GLOB_MODPAR_NAME = "PaneHeight_03" then
					sashMullionResetArray[1][3] = 1
					sashMullionResetArray[1][gs_panes_number] = 1
				endif
				if GLOB_MODPAR_NAME = "PaneHeight_04" then
					sashMullionResetArray[1][4] = 1
					sashMullionResetArray[1][gs_panes_number] = 1
				endif
				if GLOB_MODPAR_NAME = "PaneHeight_05" then
					sashMullionResetArray[1][5] = 1
					sashMullionResetArray[1][gs_panes_number] = 1
				endif
				if GLOB_MODPAR_NAME = "PaneHeight_06" then
					sashMullionResetArray[1][6] = 1
					sashMullionResetArray[1][gs_panes_number] = 1
				endif
				if GLOB_MODPAR_NAME = "PaneHeight_07" then
					sashMullionResetArray[1][7] = 1
					sashMullionResetArray[1][gs_panes_number] = 1
				endif
				if GLOB_MODPAR_NAME = "PaneHeight_08" then
					sashMullionResetArray[1][8] = 1
					sashMullionResetArray[1][gs_panes_number] = 1
				endif
				if GLOB_MODPAR_NAME = "PaneHeight_09" then
					sashMullionResetArray[1][9] = 1
					sashMullionResetArray[1][gs_panes_number] = 1
				endif
			endif
		endif
	endif
else
	if gs_sash_uniform then
		for i = 1 to 3
			for j = 1 to 3
				if (CasementIDArray[i][j] > 0) & (CasementIDArray[i][j] <> CasementLinkArray[i][j]) then
					if CasementIDArray[i][j] = 1 then
						lock "vgn_01", "hgn_01", "vgn2_01", "hgn2_01"
						hideparameter "vgn_01", "hgn_01", "vgn2_01", "hgn2_01"
					endif
					if CasementIDArray[i][j] = 2 then
						lock "vgn_02", "hgn_02", "vgn2_02", "hgn2_02"
						hideparameter "vgn_02", "hgn_02", "vgn2_02", "hgn2_02"
					endif
					if CasementIDArray[i][j] = 3 then
						lock "vgn_03", "hgn_03", "vgn2_03", "hgn2_03"
						hideparameter "vgn_03", "hgn_03", "vgn2_03", "hgn2_03"
					endif

					if CasementIDArray[i][j] = 5 then
						lock "vgn_05", "hgn_05", "vgn2_05", "hgn2_05"
						hideparameter "vgn_05", "hgn_05", "vgn2_05", "hgn2_05"
					endif
					if CasementIDArray[i][j] = 6 then
						lock "vgn_06", "hgn_06", "vgn2_06", "hgn2_06"
						hideparameter "vgn_06", "hgn_06", "vgn2_06", "hgn2_06"
					endif
					if CasementIDArray[i][j] = 7 then
						lock "vgn_07", "hgn_07", "vgn2_07", "hgn2_07"
						hideparameter "vgn_07", "hgn_07", "vgn2_07", "hgn2_07"
					endif

					if CasementIDArray[i][j] = 9 then
						lock "vgn_09", "hgn_09", "vgn2_09", "hgn2_09"
						hideparameter "vgn_09", "hgn_09", "vgn2_09", "hgn2_09"
					endif
					if CasementIDArray[i][j] = 10 then
						lock "vgn_10", "hgn_10", "vgn2_10", "hgn2_10"
						hideparameter "vgn_10", "hgn_10", "vgn2_10", "hgn2_10"
					endif
					if CasementIDArray[i][j] = 11 then
						lock "vgn_11", "hgn_11", "vgn2_11", "hgn2_11"
						hideparameter "vgn_11", "hgn_11", "vgn2_11", "hgn2_11"
					endif
				endif
			next j
		next i
	endif

	dim sashMullionResetArray[3][3]
	for i=1 to 3
		for j=1 to 3
			sashMullionResetArray[i][j]	= 0
		next j
	next i
	if GLOB_MODPAR_NAME <> "" then
		! Not in case of multiple selection
		if	GLOB_MODPAR_NAME = "A" | \
			GLOB_MODPAR_NAME = "B" | \
			(gs_sash_uniform & (GLOB_MODPAR_NAME = "gs_sash_uniform" | GLOB_MODPAR_NAME = "MullionStyle_00" | GLOB_MODPAR_NAME = "iMullionStyle_00")) | \
			(not(gs_unit_nominal) & (GLOB_MODPAR_NAME = "gs_tolerance_left" | GLOB_MODPAR_NAME = "gs_tolerance_right" | GLOB_MODPAR_NAME = "gs_tolerance_upper" | GLOB_MODPAR_NAME = "gs_tolerance_lower"))	|\
			GLOB_MODPAR_NAME = "bVentilationProfile"		|\
			GLOB_MODPAR_NAME = "iVentilationProfileType"	|\
			(GLOB_MODPAR_NAME = "VentilationProfileHeight" & bVentilationProfile & (iVentilationProfileType = VENTPROFILE_OVER_FRAME)) then
			! Reset all sashes
			for i=1 to 3
				for j=1 to 3
					sashMullionResetArray[i][j]	= 1
				next j
			next i
		else
			! Reset specific sashes
			bColumnReset1 = 0
			bColumnReset2 = 0
			bColumnReset3 = 0
			if iWindowType = WIN_W3 then
				if GLOB_MODPAR_NAME = "gs_SLight_w" then
					bColumnReset1 = 1
					if gs_iPanesConfig = PANESCONFIG_SYMM then
						bColumnReset2 = 1
					endif
					bColumnReset3 = 1
				endif
				if GLOB_MODPAR_NAME = "gs_MidPane_w" then
					bColumnReset1 = 1
					bColumnReset2 = 1
				endif
			endif

			if gs_bLeftSLight & gs_UTrans & gs_LeftMullion_Top then
				if GLOB_MODPAR_NAME = "gs_UTrans" | GLOB_MODPAR_NAME = "gs_UTrans_h" | bColumnReset1 | bColumnReset2 then
					sashMullionResetArray[1][1]	= 1
					sashMullionResetArray[1][2]	= 1
				endif
			endif
			if gs_bSLight & gs_UTrans & gs_Mullion_Top then
				if GLOB_MODPAR_NAME = "gs_UTrans" | GLOB_MODPAR_NAME = "gs_UTrans_h" | bColumnReset2 | bColumnReset3 then
					sashMullionResetArray[1][2]	= 1
					sashMullionResetArray[1][3]	= 1
				endif
			endif

			if gs_bLeftSLight & gs_UTrans & gs_UTransom_toLeft then
				if GLOB_MODPAR_NAME = "gs_UTrans" | GLOB_MODPAR_NAME = "gs_UTrans_h" | bColumnReset1 then
					sashMullionResetArray[1][1]	= 1
					sashMullionResetArray[2][1]	= 1
				endif
			endif
			if gs_UTrans & gs_UTransom_Middle then
				if GLOB_MODPAR_NAME = "gs_UTrans" | GLOB_MODPAR_NAME = "gs_UTrans_h" | bColumnReset2 then
					sashMullionResetArray[1][2]	= 1
					sashMullionResetArray[2][2]	= 1
				endif
			endif
			if gs_bSLight & gs_UTrans & gs_UTransom_toRight then
				if GLOB_MODPAR_NAME = "gs_UTrans" | GLOB_MODPAR_NAME = "gs_UTrans_h" | bColumnReset3 then
					sashMullionResetArray[1][3]	= 1
					sashMullionResetArray[2][3]	= 1
				endif
			endif

			if gs_bLeftSLight & gs_LeftMullion_Middle then
				if GLOB_MODPAR_NAME = "gs_UTrans" | GLOB_MODPAR_NAME = "gs_UTrans_h" | GLOB_MODPAR_NAME = "gs_LTrans" | GLOB_MODPAR_NAME = "gs_LTrans_h" | bColumnReset1 | bColumnReset2 then
					sashMullionResetArray[2][1]	= 1
					sashMullionResetArray[2][2]	= 1
				endif
			endif
			if gs_bSLight & gs_RightMullion_Middle then
				if GLOB_MODPAR_NAME = "gs_UTrans" | GLOB_MODPAR_NAME = "gs_UTrans_h" | GLOB_MODPAR_NAME = "gs_LTrans" | GLOB_MODPAR_NAME = "gs_LTrans_h" | bColumnReset2 | bColumnReset3 then
					sashMullionResetArray[2][2]	= 1
					sashMullionResetArray[2][3]	= 1
				endif
			endif

			if gs_bLeftSLight & gs_LTrans & gs_LTransom_toLeft then
				if GLOB_MODPAR_NAME = "gs_LTrans" | GLOB_MODPAR_NAME = "gs_LTrans_h" | bColumnReset1 then
					sashMullionResetArray[2][1]	= 1
					sashMullionResetArray[3][1]	= 1
				endif
			endif
			if gs_LTrans & gs_LTransom_Middle then
				if GLOB_MODPAR_NAME = "gs_LTrans" | GLOB_MODPAR_NAME = "gs_LTrans_h" | bColumnReset2 then
					sashMullionResetArray[2][2]	= 1
					sashMullionResetArray[3][2]	= 1
				endif
			endif
			if gs_bSLight & gs_LTrans & gs_LTransom_toRight then
				if GLOB_MODPAR_NAME = "gs_LTrans" | GLOB_MODPAR_NAME = "gs_LTrans_h" | bColumnReset3 then
					sashMullionResetArray[2][3]	= 1
					sashMullionResetArray[3][3]	= 1
				endif
			endif

			if gs_bLeftSLight & gs_LTrans & gs_LeftMullion_Bott then
				if GLOB_MODPAR_NAME = "gs_LTrans" | GLOB_MODPAR_NAME = "gs_LTrans_h" | bColumnReset1 | bColumnReset2 then
					sashMullionResetArray[3][1]	= 1
					sashMullionResetArray[3][2]	= 1
				endif
			endif
			if gs_bSLight & gs_LTrans & gs_Mullion_Bott then
				if GLOB_MODPAR_NAME = "gs_LTrans" | GLOB_MODPAR_NAME = "gs_LTrans_h" | bColumnReset2 | bColumnReset3 then
					sashMullionResetArray[3][2]	= 1
					sashMullionResetArray[3][3]	= 1
				endif
			endif
		endif
	endif
endif

call "Casement_rectangular" parameters	iWindowClass			= iWindowClass,
										iWindowType				= iWindowType,
										CasementIDArray 		= CasementIDArray,
										CasementTypeArray		= CasementTypeArray,
										sashWidthArray			= sashWidthArray,
										sashHeightArray			= sashHeightArray,
										sashMullionResetArray	= sashMullionResetArray,
										gs_panes_number			= gs_panes_number,
										gs_repeat_modules		= gs_repeat_modules,
										gs_repeat_modules_number= gs_repeat_modules_number,
										gs_iShowSashOnSymbol	= gs_iShowSashOnSymbol,
										gs_sash_uniform			= gs_sash_uniform,
										gs_sash_width			= gs_sash_width,
										gs_rebate_width			= gs_rebate_width,
										gs_bLeftSLight			= gs_bLeftSLight,
										gs_bSLight				= gs_bSLight,
										gs_UTrans				= gs_UTrans,
										gs_LTrans				= gs_LTrans,
										gs_UTrans_Div			= gs_UTrans_Div,
										gs_LTrans_Div			= gs_LTrans_Div,
										iMullionPosition		= iMullionPosition,
										MullionStyle_00			= MullionStyle_00,
										iMullionStyle_00		= iMullionStyle_00,
										MullionStyle_01			= MullionStyle_01,
										iMullionStyle_01		= iMullionStyle_01,
										iMullionStyleOriginal_01= iMullionStyleOriginal_01,
										MullionStyle_02			= MullionStyle_02,
										iMullionStyle_02		= iMullionStyle_02,
										iMullionStyleOriginal_02= iMullionStyleOriginal_02,
										MullionStyle_03			= MullionStyle_03,
										iMullionStyle_03		= iMullionStyle_03,
										iMullionStyleOriginal_03= iMullionStyleOriginal_03,
										MullionStyle_04			= MullionStyle_04,
										iMullionStyle_04		= iMullionStyle_04,
										iMullionStyleOriginal_04= iMullionStyleOriginal_04,
										MullionStyle_05			= MullionStyle_05,
										iMullionStyle_05		= iMullionStyle_05,
										iMullionStyleOriginal_05= iMullionStyleOriginal_05,
										MullionStyle_06			= MullionStyle_06,
										iMullionStyle_06		= iMullionStyle_06,
										iMullionStyleOriginal_06= iMullionStyleOriginal_06,
										MullionStyle_07			= MullionStyle_07,
										iMullionStyle_07		= iMullionStyle_07,
										iMullionStyleOriginal_07= iMullionStyleOriginal_07,
										MullionStyle_08			= MullionStyle_08,
										iMullionStyle_08		= iMullionStyle_08,
										iMullionStyleOriginal_08= iMullionStyleOriginal_08,
										MullionStyle_09			= MullionStyle_09,
										iMullionStyle_09		= iMullionStyle_09,
										iMullionStyleOriginal_09= iMullionStyleOriginal_09,
										MullionStyle_10			= MullionStyle_10,
										iMullionStyle_10		= iMullionStyle_10,
										iMullionStyleOriginal_10= iMullionStyleOriginal_10,
										MullionStyle_11			= MullionStyle_11,
										iMullionStyle_11		= iMullionStyle_11,
										iMullionStyleOriginal_11= iMullionStyleOriginal_11,
										MullionPosition			= MullionPosition,
										gs_horiz_div_height_01	= gs_horiz_div_height_01,
										gs_horiz_div_height_02	= gs_horiz_div_height_02,
										gs_horiz_div_height_03	= gs_horiz_div_height_03,
										gs_horiz_div_height_04	= gs_horiz_div_height_04,
										gs_horiz_div_height_05	= gs_horiz_div_height_05,
										gs_horiz_div_height_06	= gs_horiz_div_height_06,
										gs_horiz_div_height_07	= gs_horiz_div_height_07,
										gs_horiz_div_height_08	= gs_horiz_div_height_08,
										gs_horiz_div_height_09	= gs_horiz_div_height_09,
										gs_horiz_div_height_10	= gs_horiz_div_height_10,
										gs_horiz_div_height_11	= gs_horiz_div_height_11,
										stFixGlassDir			= stFixGlassDir,
										FixGlassDir				= FixGlassDir,
										FixGlassDir_m			= FixGlassDir_m,
										gs_optype_01			= gs_optype_01,
										gs_optype_02			= gs_optype_02,
										gs_optype_03			= gs_optype_03,
										gs_optype_04			= gs_optype_04,
										gs_optype_05			= gs_optype_05,
										gs_optype_06			= gs_optype_06,
										gs_optype_07			= gs_optype_07,
										gs_optype_08			= gs_optype_08,
										gs_optype_09			= gs_optype_09,
										gs_optype_10			= gs_optype_10,
										gs_optype_11			= gs_optype_11,
										gs_optype_m_01			= gs_optype_m_01,
										gs_optype_m_02			= gs_optype_m_02,
										gs_optype_m_03			= gs_optype_m_03,
										gs_optype_m_04			= gs_optype_m_04,
										gs_optype_m_05			= gs_optype_m_05,
										gs_optype_m_06			= gs_optype_m_06,
										gs_optype_m_07			= gs_optype_m_07,
										gs_optype_m_08			= gs_optype_m_08,
										gs_optype_m_09			= gs_optype_m_09,
										gs_optype_m_10			= gs_optype_m_10,
										gs_optype_m_11			= gs_optype_m_11,
										bVentilationProfile				= bVentilationProfile,
										iVentilationProfileType			= iVentilationProfileType,
										VentilationProfileHeight		= VentilationProfileHeight,
										isVentilationProfileInSash_01	= isVentilationProfileInSash_01,
										isVentilationProfileInSash_02	= isVentilationProfileInSash_02,
										isVentilationProfileInSash_03	= isVentilationProfileInSash_03,
										isVentilationProfileInSash_04	= isVentilationProfileInSash_04,
										isVentilationProfileInSash_05	= isVentilationProfileInSash_05,
										isVentilationProfileInSash_06	= isVentilationProfileInSash_06,
										isVentilationProfileInSash_07	= isVentilationProfileInSash_07,
										isVentilationProfileInSash_08	= isVentilationProfileInSash_08,
										isVentilationProfileInSash_09	= isVentilationProfileInSash_09,
										isVentilationProfileInSash_10	= isVentilationProfileInSash_10,
										isVentilationProfileInSash_11	= isVentilationProfileInSash_11,
										stSashType				= stSashType,
										gw						= gw,
										ghe						= ghe,
										vgn_01					= vgn_01,
										hgn_01					= hgn_01,
										vgn_02					= vgn_02,
										hgn_02					= hgn_02,
										vgn_03					= vgn_03,
										hgn_03					= hgn_03,
										vgn_04					= vgn_04,
										hgn_04					= hgn_04,
										vgn_05					= vgn_05,
										hgn_05					= hgn_05,
										vgn_06					= vgn_06,
										hgn_06					= hgn_06,
										vgn_07					= vgn_07,
										hgn_07					= hgn_07,
										vgn_08					= vgn_08,
										hgn_08					= hgn_08,
										vgn_09					= vgn_09,
										hgn_09					= hgn_09,
										vgn_10					= vgn_10,
										hgn_10					= hgn_10,
										vgn_11					= vgn_11,
										hgn_11					= hgn_11,
										vgn2_01					= vgn2_01,
										hgn2_01					= hgn2_01,
										vgn2_02					= vgn2_02,
										hgn2_02					= hgn2_02,
										vgn2_03					= vgn2_03,
										hgn2_03					= hgn2_03,
										vgn2_04					= vgn2_04,
										hgn2_04					= hgn2_04,
										vgn2_05					= vgn2_05,
										hgn2_05					= hgn2_05,
										vgn2_06					= vgn2_06,
										hgn2_06					= hgn2_06,
										vgn2_07					= vgn2_07,
										hgn2_07					= hgn2_07,
										vgn2_08					= vgn2_08,
										hgn2_08					= hgn2_08,
										vgn2_09					= vgn2_09,
										hgn2_09					= hgn2_09,
										vgn2_10					= vgn2_10,
										hgn2_10					= hgn2_10,
										vgn2_11					= vgn2_11,
										hgn2_11					= hgn2_11,
										vergrid_01				= vergrid_01,
										horgrid_01				= horgrid_01,
										vergrid_02				= vergrid_02,
										horgrid_02				= horgrid_02,
										vergrid_03				= vergrid_03,
										horgrid_03				= horgrid_03,
										vergrid_04				= vergrid_04,
										horgrid_04				= horgrid_04,
										vergrid_05				= vergrid_05,
										horgrid_05				= horgrid_05,
										vergrid_06				= vergrid_06,
										horgrid_06				= horgrid_06,
										vergrid_07				= vergrid_07,
										horgrid_07				= horgrid_07,
										vergrid_08				= vergrid_08,
										horgrid_08				= horgrid_08,
										vergrid_09				= vergrid_09,
										horgrid_09				= horgrid_09,
										vergrid_10				= vergrid_10,
										horgrid_10				= horgrid_10,
										vergrid_11				= vergrid_11,
										horgrid_11				= horgrid_11,
										vergrid2_01				= vergrid2_01,
										horgrid2_01				= horgrid2_01,
										vergrid2_02				= vergrid2_02,
										horgrid2_02				= horgrid2_02,
										vergrid2_03				= vergrid2_03,
										horgrid2_03				= horgrid2_03,
										vergrid2_04				= vergrid2_04,
										horgrid2_04				= horgrid2_04,
										vergrid2_05				= vergrid2_05,
										horgrid2_05				= horgrid2_05,
										vergrid2_06				= vergrid2_06,
										horgrid2_06				= horgrid2_06,
										vergrid2_07				= vergrid2_07,
										horgrid2_07				= horgrid2_07,
										vergrid2_08				= vergrid2_08,
										horgrid2_08				= horgrid2_08,
										vergrid2_09				= vergrid2_09,
										horgrid2_09				= horgrid2_09,
										vergrid2_10				= vergrid2_10,
										horgrid2_10				= horgrid2_10,
										vergrid2_11				= vergrid2_11,
										horgrid2_11				= horgrid2_11,
										stMullionPosition		= stMullionPosition,
										stOpeningType			= stOpeningType,
										stLouversinFrame		= stLouversinFrame,
										openingAngle_01			= openingAngle_01,
										openingAngle_02			= openingAngle_02,
										openingAngle_03			= openingAngle_03,
										openingAngle_04			= openingAngle_04,
										openingAngle_05			= openingAngle_05,
										openingAngle_06			= openingAngle_06,
										openingAngle_07			= openingAngle_07,
										openingAngle_08			= openingAngle_08,
										openingAngle_09			= openingAngle_09,
										openingAngle_10			= openingAngle_10,
										openingAngle_11			= openingAngle_11,
										openingAngle2_01		= openingAngle2_01,
										openingAngle2_02		= openingAngle2_02,
										openingAngle2_03		= openingAngle2_03,
										openingAngle2_04		= openingAngle2_04,
										openingAngle2_05		= openingAngle2_05,
										openingAngle2_06		= openingAngle2_06,
										openingAngle2_07		= openingAngle2_07,
										openingAngle2_08		= openingAngle2_08,
										openingAngle2_09		= openingAngle2_09,
										openingAngle2_10		= openingAngle2_10,
										openingAngle2_11		= openingAngle2_11,
										gs_panel_mat			= gs_panel_mat,
										gs_panel_mat2			= gs_panel_mat2,
										LouverStyle				= LouverStyle,
										iLouverStyle			= iLouverStyle,
										gs_louver_thk			= gs_louver_thk,
										gs_louver_width			= gs_louver_width,
										gs_louver_opening_angle	= gs_louver_opening_angle,
										gs_ventSashLouver_mat	= gs_ventSashLouver_mat,
										gs_ui_current_page	= gs_ui_current_page,
								returned_parameters	bLockMullionParamsSash,
													bLockGlassParamsSash,
													PanelGlassArea


! ==============================================================================
! Uniform Surfaces
! ==============================================================================

dim	surfaceParNames[8]						:	dim	surfaceParameters[8]
	surfaceParNames[1]	= "gs_frame_mat"	:		surfaceParameters[1]	= gs_frame_mat
	surfaceParNames[2]	= "gs_frame_mat2"	:		surfaceParameters[2]	= gs_frame_mat2
	surfaceParNames[3]	= "gs_sash_mat"		:		surfaceParameters[3]	= gs_sash_mat
	surfaceParNames[4]	= "gs_sash_mat2"	:		surfaceParameters[4]	= gs_sash_mat2
	surfaceParNames[5]	= "gs_grill_mat"	:		surfaceParameters[5]	= gs_grill_mat
	surfaceParNames[6]	= "gs_grill_mat2"	:		surfaceParameters[6]	= gs_grill_mat2
	surfaceParNames[7]	= "gs_panel_mat"	:		surfaceParameters[7]	= gs_panel_mat
	surfaceParNames[8]	= "gs_panel_mat2"	:		surfaceParameters[8]	= gs_panel_mat2

_lastModSurfaceParameter = gs_frame_mat

if iWindowClass	<> WINCLASS_SHELL then
	if stored_material[1][1] <> -9999 then
		for i = 1 to vardim1(surfaceParNames)
			if GLOB_MODPAR_NAME = surfaceParNames[i] then
				_lastModSurfaceParameter	= surfaceParameters[i]
				stored_material[1][i]	= surfaceParameters[i]
				stored_material[2][i]	= 1
	
				for j = 1 to i-1
					stored_material[2][j]	= 0
					parameters stored_material[2][j]	= stored_material[2][j]
				next j
	
				for k = i+1 to vardim1(surfaceParNames)
					stored_material[2][k]	= 0
					parameters stored_material[2][k]	= stored_material[2][k]
				next k
			endif
	
			parameters	stored_material[1][i]	= stored_material[1][i],
						stored_material[2][i]	= stored_material[2][i]
	
			if stored_material[2][i] = 1 then
				_lastModSurfaceParameter = stored_material[1][i]
			endif
		next i
	else
		gosub "preloadSurfaces"
	endif
	
	if bLinkSurfacesFrameSash then
		parameters	gs_frame_mat	= _lastModSurfaceParameter,
					gs_frame_mat2	= _lastModSurfaceParameter,
					gs_sash_mat		= _lastModSurfaceParameter,
					gs_sash_mat2	= _lastModSurfaceParameter,
					gs_grill_mat	= _lastModSurfaceParameter,
					gs_grill_mat2	= _lastModSurfaceParameter,
					gs_panel_mat	= _lastModSurfaceParameter,
					gs_panel_mat2	= _lastModSurfaceParameter
	else
		if GLOB_MODPAR_NAME = "bLinkSurfacesFrameSash" then
			parameters	gs_frame_mat	= stored_material[1][1],
						gs_frame_mat2	= stored_material[1][2],
						gs_sash_mat		= stored_material[1][3],
						gs_sash_mat2	= stored_material[1][4],
						gs_grill_mat	= stored_material[1][5],
						gs_grill_mat2	= stored_material[1][6],
						gs_panel_mat	= stored_material[1][7],
						gs_panel_mat2	= stored_material[1][8]
		else
			gosub "preloadSurfaces"
		endif
	endif
endif

! =============================================================================
! Total Glazed Area Listing Parameters
! =============================================================================
if NOT(gs_list_glassarea_override) then
	if GLOB_MODPAR_NAME = "gs_list_glassarea" then
		gs_list_glassarea_tmp = gs_list_glassarea
		parameters gs_list_glassarea_tmp = gs_list_glassarea_tmp
	else
		gs_list_glassarea = gs_list_glassarea_tmp
		parameters gs_list_glassarea = gs_list_glassarea
	endif

	gs_list_glassarea = PanelGlassArea
	parameters gs_list_glassarea = gs_list_glassarea
	lock "gs_list_glassarea"
else
	if GLOB_MODPAR_NAME = "gs_list_glassarea" then
		gs_list_glassarea_tmp = gs_list_glassarea
		parameters gs_list_glassarea_tmp = gs_list_glassarea_tmp
	else
		gs_list_glassarea = gs_list_glassarea_tmp
		parameters gs_list_glassarea = gs_list_glassarea
	endif
endif


! =============================================================================
! Orientation
! =============================================================================

if not(bSkylight) then
	values{2} "gs_list_orientationDef_m"	0, `Автоматически`,
											1, `Специальный`

	if gs_list_orientationDef_m = 0 then
		ac_OpeningSide = ""
		if	(iWindowType = WIN_W1 |\
			 iWindowType = WIN_WDoubleSash |\
			 iWindowType = WIN_WVariable |\
			 iWindowType = WIN_W2Sidelight |\
			 ((iWindowType = WIN_MultisashHorizontal | iWindowType = WIN_MultisashVertical) &\
			  (gs_panes_number = 1) &\
			  (not(gs_repeat_modules) | (gs_repeat_modules & (gs_repeat_modules_number = 1))))) then

			if	gs_optype_m_01 = SASH_SIDE_HUNG |\
				gs_optype_m_01 = SASH_TILT_TURN |\
				gs_optype_m_01 = SASH_DOUBLE_SIDE_HUNG |\
				gs_optype_m_01 = SASH_SLIDING_HOR_M then

				if SYMB_MIRRORED then
					ac_OpeningSide = stOpeningSide[2]
				else
					ac_OpeningSide = stOpeningSide[1]
				endif
			endif
			if	gs_optype_m_01 = SASH_SIDE_HUNG_M |\
				gs_optype_m_01 = SASH_TILT_TURN_M |\
				gs_optype_m_01 = SASH_SLIDING_HOR then

				if SYMB_MIRRORED then
					ac_OpeningSide = stOpeningSide[1]
				else
					ac_OpeningSide = stOpeningSide[2]
				endif
			endif
		endif
		if iWindowType = WIN_WVariableDoubleSash then
			if	gs_optype_m_09 = SASH_SIDE_HUNG |\
				gs_optype_m_09 = SASH_TILT_TURN then

				if SYMB_MIRRORED then
					ac_OpeningSide = stOpeningSide[2]
				else
					ac_OpeningSide = stOpeningSide[1]
				endif
			endif
			if gs_optype_m_09 = SASH_TILT_TURN_M then
				if SYMB_MIRRORED then
					ac_OpeningSide = stOpeningSide[1]
				else
					ac_OpeningSide = stOpeningSide[2]
				endif
			endif
		endif
		parameters ac_OpeningSide = ac_OpeningSide

		lock "ac_OpeningSide"
		hideparameter "ac_OpeningSide"
	endif
endif


! =============================================================================
! IFC Parameters
! =============================================================================

ifc_optype = WIN_OP_USER_DEFINED

if iWindowType = WIN_W1 then
	if not(gs_UTrans | gs_LTrans) then
		ifc_optype = WIN_OP_SINGLE_PANEL
	endif

	if gs_UTrans & not(gs_LTrans) then
		ifc_optype = WIN_OP_DOUBLE_PANEL_HORIZONTAL
	endif

	if not(gs_UTrans) & gs_LTrans then
		ifc_optype = WIN_OP_DOUBLE_PANEL_HORIZONTAL
	endif

	if gs_UTrans & gs_LTrans then
		ifc_optype = WIN_OP_TRIPLE_PANEL_HORIZONTAL
	endif
endif

if	iWindowType = WIN_WDoubleHung1 |\
	iWindowType = WIN_WSingleHung1 then

	ifc_optype = WIN_OP_SINGLE_PANEL
endif

if iWindowType = WIN_W2 | iWindowType = WIN_WDoubleSash then
	if not(gs_UTrans | gs_LTrans) then
		ifc_optype = WIN_OP_DOUBLE_PANEL_VERTICAL
	endif

	if (gs_UTrans & not(gs_UTrans_Div)) & not(gs_LTrans) then
		ifc_optype = WIN_OP_TRIPLE_PANEL_TOP
	endif

	if not(gs_UTrans) & (gs_LTrans & not(gs_LTrans_Div)) then
		ifc_optype = WIN_OP_TRIPLE_PANEL_BOTTOM
	endif
endif

if iWindowType = WIN_W3 then
	if not(gs_UTrans | gs_LTrans) then
		ifc_optype = WIN_OP_TRIPLE_PANEL_VERTICAL
	endif
endif

if iWindowType = WIN_WVariable then
	if gs_bSLight then
		if not(gs_UTrans | gs_LTrans) then
			ifc_optype = WIN_OP_DOUBLE_PANEL_VERTICAL
		endif

		if gs_UTrans & not(gs_LTrans) then
			if gs_Mullion_Top then
				ifc_optype = WIN_OP_TRIPLE_PANEL_RIGHT
			else
				ifc_optype = WIN_OP_TRIPLE_PANEL_TOP
			endif
		endif

		if not(gs_UTrans) & gs_LTrans then
			if gs_Mullion_Bott then
				ifc_optype = WIN_OP_TRIPLE_PANEL_RIGHT
			else
				ifc_optype = WIN_OP_TRIPLE_PANEL_BOTTOM
			endif
		endif
	else
		if not(gs_UTrans | gs_LTrans) then
			ifc_optype = WIN_OP_SINGLE_PANEL
		endif

		if gs_UTrans & not(gs_LTrans) then
			ifc_optype = WIN_OP_DOUBLE_PANEL_HORIZONTAL
		endif

		if not(gs_UTrans) & gs_LTrans then
			ifc_optype = WIN_OP_DOUBLE_PANEL_HORIZONTAL
		endif

		if gs_UTrans & gs_LTrans then
			ifc_optype = WIN_OP_TRIPLE_PANEL_HORIZONTAL
		endif
	endif
endif

if iWindowType = WIN_WVariableDoubleSash then
	if gs_bSLight then
		if not(gs_UTrans | gs_LTrans) then
			ifc_optype = WIN_OP_TRIPLE_PANEL_VERTICAL
		endif
	else
		if not(gs_UTrans | gs_LTrans) then
			ifc_optype = WIN_OP_DOUBLE_PANEL_VERTICAL
		endif

		if gs_UTrans & not(gs_LTrans) then
			ifc_optype = WIN_OP_TRIPLE_PANEL_TOP
		endif

		if not(gs_UTrans) & gs_LTrans then
			ifc_optype = WIN_OP_TRIPLE_PANEL_BOTTOM
		endif
	endif
endif

if iWindowType = WIN_W2Sidelight then
	if not(gs_LTrans) then
		ifc_optype = WIN_OP_TRIPLE_PANEL_RIGHT
	endif
endif

if iWindowType = WIN_MultisashHorizontal then
	if gs_repeat_modules then
		if gs_panes_number = 1 then
			if gs_repeat_modules_number = 2 then
				ifc_optype = WIN_OP_DOUBLE_PANEL_VERTICAL
			endif

			if gs_repeat_modules_number = 3 then
				ifc_optype = WIN_OP_TRIPLE_PANEL_VERTICAL
			endif
		endif
	else
		if gs_panes_number = 1 then
			ifc_optype = WIN_OP_SINGLE_PANEL
		endif

		if gs_panes_number = 2 then
			ifc_optype = WIN_OP_DOUBLE_PANEL_VERTICAL
		endif

		if gs_panes_number = 3 then
			ifc_optype = WIN_OP_TRIPLE_PANEL_VERTICAL
		endif
	endif
endif

if iWindowType = WIN_MultisashVertical then
	if gs_repeat_modules then
		if gs_panes_number = 1 then
			if gs_repeat_modules_number = 2 then
				ifc_optype = WIN_OP_DOUBLE_PANEL_HORIZONTAL
			endif

			if gs_repeat_modules_number = 3 then
				ifc_optype = WIN_OP_TRIPLE_PANEL_HORIZONTAL
			endif
		endif
	else
		if gs_panes_number = 1 then
			ifc_optype = WIN_OP_SINGLE_PANEL
		endif

		if gs_panes_number = 2 then
			ifc_optype = WIN_OP_DOUBLE_PANEL_HORIZONTAL
		endif

		if gs_panes_number = 3 then
			ifc_optype = WIN_OP_TRIPLE_PANEL_HORIZONTAL
		endif
	endif
endif

parameters ifc_optype = ifc_optype

if iWindowClass	= WINCLASS_SHELL then
	ifc_LiningDepth = gs_frame_thk
else
	ifc_LiningDepth = WIDO_FRAME_THICKNESS
endif
parameters ifc_LiningDepth = ifc_LiningDepth

ifc_LiningThickness = gs_frame_width
parameters ifc_LiningThickness = ifc_LiningThickness


ifc_MullionThickness	= 0
ifc_FirstMullionOffset	= 0
ifc_SecondMullionOffset	= 0
if	ifc_optype = WIN_OP_DOUBLE_PANEL_VERTICAL |\
	ifc_optype = WIN_OP_TRIPLE_PANEL_BOTTOM |\
	ifc_optype = WIN_OP_TRIPLE_PANEL_TOP |\
	ifc_optype = WIN_OP_TRIPLE_PANEL_LEFT |\
	ifc_optype = WIN_OP_TRIPLE_PANEL_RIGHT then

	ifc_MullionThickness	= gs_frame_width
	if iWindowType = WIN_MultisashHorizontal then
		ifc_FirstMullionOffset	= PaneWidthArray[1]/ac_unit_width
	else
		ifc_FirstMullionOffset	= (ac_unit_width - gs_SLight_w)/ac_unit_width
	endif
endif
if ifc_optype = WIN_OP_TRIPLE_PANEL_VERTICAL then
	ifc_MullionThickness	= gs_frame_width
	if iWindowType = WIN_MultisashHorizontal then
		ifc_FirstMullionOffset	= PaneWidthArray[1]/ac_unit_width
		if gs_repeat_modules then
			ifc_SecondMullionOffset	= (PaneWidthArray[1] + PaneWidthArray[1])/ac_unit_width
		else
			ifc_SecondMullionOffset	= (PaneWidthArray[1] + PaneWidthArray[2])/ac_unit_width
		endif
	else
		ifc_FirstMullionOffset	= (ac_unit_width - gs_SLight_w - gs_MidPane_w)/ac_unit_width
		ifc_SecondMullionOffset	= (ac_unit_width - gs_SLight_w)/ac_unit_width
	endif
endif
parameters	ifc_MullionThickness	= ifc_MullionThickness,
			ifc_FirstMullionOffset	= ifc_FirstMullionOffset,
			ifc_SecondMullionOffset	= ifc_SecondMullionOffset


ifc_TransomThickness	= 0
ifc_FirstTransomOffset	= 0
ifc_SecondTransomOffset	= 0
if	ifc_optype = WIN_OP_DOUBLE_PANEL_HORIZONTAL |\
	ifc_optype = WIN_OP_TRIPLE_PANEL_BOTTOM |\
	ifc_optype = WIN_OP_TRIPLE_PANEL_TOP |\
	ifc_optype = WIN_OP_TRIPLE_PANEL_LEFT |\
	ifc_optype = WIN_OP_TRIPLE_PANEL_RIGHT then

	ifc_TransomThickness = gs_frame_width
	if iWindowType = WIN_MultisashVertical then
		ifc_FirstTransomOffset = PaneHeightArray[1]/ac_unit_height
	else
		if gs_UTrans then
			ifc_FirstTransomOffset = gs_UTrans_h/ac_unit_height
		else
			ifc_FirstTransomOffset = gs_LTrans_h/ac_unit_height
		endif
	endif
endif
if ifc_optype = WIN_OP_TRIPLE_PANEL_HORIZONTAL then
	ifc_TransomThickness	= gs_frame_width
	if iWindowType = WIN_MultisashVertical then
		ifc_FirstTransomOffset	= PaneHeightArray[1]/ac_unit_height
		if gs_repeat_modules then
			ifc_SecondTransomOffset	= (PaneHeightArray[1] + PaneHeightArray[1])/ac_unit_height
		else
			ifc_SecondTransomOffset	= (PaneHeightArray[1] + PaneHeightArray[2])/ac_unit_height
		endif
	else
		ifc_FirstTransomOffset	= gs_LTrans_h/ac_unit_height
		ifc_SecondTransomOffset	= gs_UTrans_h/ac_unit_height
	endif
endif
parameters	ifc_TransomThickness	= ifc_TransomThickness,
			ifc_FirstTransomOffset	= ifc_FirstTransomOffset,
			ifc_SecondTransomOffset	= ifc_SecondTransomOffset

dim ifc_WindowPanel[][4]
	ifc_WindowPanel[1][1] = 0
	ifc_WindowPanel[1][2] = 0
	ifc_WindowPanel[1][3] = 0		! NOTDEFINED
	ifc_WindowPanel[1][4] = 0		! NOTDEFINED

if not(ifc_optype = WIN_OP_NOT_DEFINED | ifc_optype = WIN_OP_USER_DEFINED) then

	bIFCParametersDone = 0

	if ifc_optype = WIN_OP_SINGLE_PANEL & not(bIFCParametersDone) then
		if iWindowClass = WINCLASS_MULTISASH then
			CasementID	= CasementIDArray[1][1]
		else
			CasementID	= CasementIDArray[2][2]
		endif
		optypeID	= optypeIDArray[CasementID]
		gosub "two sash"

		if bTwoSash then
			if (optypeID = SASH_SLIDING_VER			|\
				optypeID = SASH_DOUBLE_SLIDING_VER	)	then

				ifc_optype = WIN_OP_DOUBLE_PANEL_HORIZONTAL
			else
				ifc_optype = WIN_OP_DOUBLE_PANEL_VERTICAL
			endif
			parameters ifc_optype = ifc_optype

			ifc_WindowPanel[1][1] = gs_sash_thk
			ifc_WindowPanel[1][2] = gs_sash_width

			ifc_WindowPanel[2][1] = gs_sash_thk
			ifc_WindowPanel[2][2] = gs_sash_width

			if	optypeID = SASH_SLIDING_VER			|\
				optypeID = SASH_DOUBLE_SLIDING_VER	then

				ifc_WindowPanel[1][4] = 5	! TOP
				ifc_WindowPanel[2][4] = 4	! BOTTOM

				ifc_FirstTransomOffset = 0.5
				parameters ifc_FirstTransomOffset = ifc_FirstTransomOffset
			else
				ifc_WindowPanel[1][4] = 1	! LEFT
				ifc_WindowPanel[2][4] = 3	! RIGHT

				ifc_FirstMullionOffset = 0.5
				parameters ifc_FirstMullionOffset = ifc_FirstMullionOffset
			endif

			_sashMullionThickness = 0
			_sashTransomThickness = 0

			if optypeID = SASH_DOUBLE_SIDE_HUNG	then
				ifc_WindowPanel[1][3] = 1	! SIDEHUNGRIGHTHAND
				ifc_WindowPanel[2][3] = 2	! SIDEHUNGLEFTHAND
				_sashMullionThickness = 2 * gs_sash_width
			endif
			if optypeID = SASH_SLIDING_HOR then
				ifc_WindowPanel[1][3] = 12	! FIXEDCASEMENT
				ifc_WindowPanel[2][3] = 9	! SLIDINGHORIZONTAL
				_sashMullionThickness = gs_sash_width
			endif
			if optypeID = SASH_SLIDING_HOR_M then
				ifc_WindowPanel[1][3] = 9	! SLIDINGHORIZONTAL
				ifc_WindowPanel[2][3] = 12	! FIXEDCASEMENT
				_sashMullionThickness = gs_sash_width
			endif
			if	optypeID = SASH_DOUBLE_SLIDING_HOR		|\
				optypeID = SASH_DOUBLE_SLIDING_HOR_M	then

				ifc_WindowPanel[1][3] = 9	! SLIDINGHORIZONTAL
				ifc_WindowPanel[2][3] = 9	! SLIDINGHORIZONTAL
				_sashMullionThickness = gs_sash_width
			endif
			if optypeID = SASH_SLIDING_VER then
				ifc_WindowPanel[1][3] = 12	! FIXEDCASEMENT
				ifc_WindowPanel[2][3] = 10	! SLIDINGVERTICAL
				_sashTransomThickness = gs_sash_width
			endif
			if optypeID = SASH_DOUBLE_SLIDING_VER then
				ifc_WindowPanel[1][3] = 10	! SLIDINGVERTICAL
				ifc_WindowPanel[2][3] = 10	! SLIDINGVERTICAL
				_sashTransomThickness = gs_sash_width
			endif

			if ifc_MullionThickness < EPS then
				ifc_MullionThickness = _sashMullionThickness
				parameters ifc_MullionThickness = ifc_MullionThickness
			endif
			if ifc_TransomThickness < EPS then
				ifc_TransomThickness = _sashTransomThickness
				parameters ifc_TransomThickness = ifc_TransomThickness
			endif
		else
			gosub "paneloperation"
			ifc_WindowPanel[1][1] = gs_sash_thk * (optypeID <> SASH_FIXED)
			ifc_WindowPanel[1][2] = gs_sash_width * (optypeID <> SASH_FIXED)
			ifc_WindowPanel[1][3] = panelOperationID
			ifc_WindowPanel[1][4] = 2	! MIDDLE
		endif

		bIFCParametersDone = 1
	endif

	if ifc_optype = WIN_OP_DOUBLE_PANEL_VERTICAL & not(bIFCParametersDone) then
		if iWindowClass = WINCLASS_MULTISASH then
			CasementID	= CasementIDArray[1][1]
		else
			CasementID	= CasementIDArray[2][2]
		endif
		optypeID		= optypeIDArray[CasementID]
		optypeID_Left	= optypeID
		gosub "two sash"
		bTwoSash_Left =	bTwoSash

		if iWindowClass = WINCLASS_MULTISASH then
			if gs_repeat_modules then
				CasementID	= CasementIDArray[1][1]
			else
				CasementID	= CasementIDArray[1][2]
			endif
		else
			CasementID	= CasementIDArray[2][3]
		endif
		optypeID		= optypeIDArray[CasementID]
		optypeID_Right	= optypeID
		gosub "two sash"
		bTwoSash_Right = bTwoSash

		if bTwoSash_Left exor bTwoSash_Right then
			if bTwoSash_Left then
				optypeID = optypeID_Left
			else
				optypeID = optypeID_Right
			endif

			bPanelVertical = (optypeID = SASH_SLIDING_VER		|\
							  optypeID = SASH_DOUBLE_SLIDING_VER)

			ifc_WindowPanel[1][1] = gs_sash_thk
			ifc_WindowPanel[1][2] = gs_sash_width

			ifc_WindowPanel[2][1] = gs_sash_thk
			ifc_WindowPanel[2][2] = gs_sash_width

			if bPanelVertical then
				ifc_FirstTransomOffset = 0.5
				parameters ifc_FirstTransomOffset = ifc_FirstTransomOffset

				ifc_WindowPanel[1][4] = 5	! TOP
				ifc_WindowPanel[2][4] = 4	! BOTTOM
			else
				if bTwoSash_Left then
					ifc_FirstMullionOffset	= ((ac_unit_width - gs_SLight_w - gs_Mullion_w/2+gs_frame_width_left)/2)/ac_unit_width
					ifc_SecondMullionOffset	= (ac_unit_width - gs_SLight_w)/ac_unit_width
				else
					ifc_FirstMullionOffset	= (ac_unit_width - gs_SLight_w)/ac_unit_width
					ifc_SecondMullionOffset	= ((ac_unit_width - gs_SLight_w) + (gs_SLight_w + gs_Mullion_w/2-gs_frame_width)/2)/ac_unit_width
				endif
				parameters	ifc_FirstMullionOffset	= ifc_FirstMullionOffset,
							ifc_SecondMullionOffset	= ifc_SecondMullionOffset

				ifc_WindowPanel[1][4] = 2	! MIDDLE
				if bTwoSash_Left then
					ifc_WindowPanel[2][4] = 1	! LEFT
				else
					ifc_WindowPanel[2][4] = 3	! RIGHT
				endif
			endif

			_sashTransomThickness = 0

			if optypeID = SASH_DOUBLE_SIDE_HUNG	then
				ifc_WindowPanel[1][3] = 1	! SIDEHUNGRIGHTHAND
				ifc_WindowPanel[2][3] = 2	! SIDEHUNGLEFTHAND
			endif
			if optypeID = SASH_SLIDING_HOR then
				ifc_WindowPanel[1][3] = 12	! FIXEDCASEMENT
				ifc_WindowPanel[2][3] = 9	! SLIDINGHORIZONTAL
			endif
			if optypeID = SASH_SLIDING_HOR_M then
				ifc_WindowPanel[1][3] = 9	! SLIDINGHORIZONTAL
				ifc_WindowPanel[2][3] = 12	! FIXEDCASEMENT
			endif
			if	optypeID = SASH_DOUBLE_SLIDING_HOR		|\
				optypeID = SASH_DOUBLE_SLIDING_HOR_M	then

				ifc_WindowPanel[1][3] = 9	! SLIDINGHORIZONTAL
				ifc_WindowPanel[2][3] = 9	! SLIDINGHORIZONTAL
			endif
			if optypeID = SASH_SLIDING_VER then
				ifc_WindowPanel[1][3] = 12	! FIXEDCASEMENT
				ifc_WindowPanel[2][3] = 10	! SLIDINGVERTICAL
				_sashTransomThickness = gs_sash_width
			endif
			if optypeID = SASH_DOUBLE_SLIDING_VER then
				ifc_WindowPanel[1][3] = 10	! SLIDINGVERTICAL
				ifc_WindowPanel[2][3] = 10	! SLIDINGVERTICAL
				_sashTransomThickness = gs_sash_width
			endif

			if ifc_TransomThickness < EPS then
				ifc_TransomThickness = _sashTransomThickness
				parameters ifc_TransomThickness = ifc_TransomThickness
			endif

			if bTwoSash_Left then
				if bPanelVertical then
					ifc_optype = WIN_OP_TRIPLE_PANEL_RIGHT
				else
					ifc_optype = WIN_OP_TRIPLE_PANEL_VERTICAL
				endif
				parameters ifc_optype = ifc_optype

				if iWindowClass = WINCLASS_MULTISASH then
					if gs_repeat_modules then
						CasementID	= CasementIDArray[1][1]
					else
						CasementID	= CasementIDArray[1][2]
					endif
				else
					CasementID	= CasementIDArray[2][3]
				endif
				optypeID	= optypeIDArray[CasementID]
				gosub "paneloperation"
				ifc_WindowPanel[3][1] = gs_sash_thk * (optypeID <> SASH_FIXED)
				ifc_WindowPanel[3][2] = gs_sash_width * (optypeID <> SASH_FIXED)
				ifc_WindowPanel[3][3] = panelOperationID
				ifc_WindowPanel[3][4] = 3	! RIGHT
			else
				if bPanelVertical then
					ifc_optype = WIN_OP_TRIPLE_PANEL_LEFT
				else
					ifc_optype = WIN_OP_TRIPLE_PANEL_VERTICAL
				endif
				parameters ifc_optype = ifc_optype

				if iWindowClass = WINCLASS_MULTISASH then
					CasementID	= CasementIDArray[1][1]
				else
					CasementID	= CasementIDArray[2][2]
				endif
				optypeID	= optypeIDArray[CasementID]
				gosub "paneloperation"
				ifc_WindowPanel[3][1] = gs_sash_thk * (optypeID <> SASH_FIXED)
				ifc_WindowPanel[3][2] = gs_sash_width * (optypeID <> SASH_FIXED)
				ifc_WindowPanel[3][3] = panelOperationID
				ifc_WindowPanel[3][4] = 1	! LEFT
			endif
		else
			if not(bTwoSash_Left | bTwoSash_Right) then
				if iWindowClass = WINCLASS_MULTISASH then
					CasementID	= CasementIDArray[1][1]
				else
					CasementID	= CasementIDArray[2][2]
				endif
				optypeID	= optypeIDArray[CasementID]
				if iWindowType = WIN_WDoubleSash then
					panelOperationID = 1	! SIDEHUNGRIGHTHAND
					if optypeID = SASH_TILT_TURN_M	then panelOperationID = 3	! TILTANDTURNRIGHTHAND
				else
					gosub "paneloperation"
				endif
				ifc_WindowPanel[1][1] = gs_sash_thk * (optypeID <> SASH_FIXED)
				ifc_WindowPanel[1][2] = gs_sash_width * (optypeID <> SASH_FIXED)
				ifc_WindowPanel[1][3] = panelOperationID
				ifc_WindowPanel[1][4] = 1	! LEFT

				if iWindowType = WIN_WDoubleSash then
					panelOperationID = 2	! SIDEHUNGLEFTHAND
					if optypeID = SASH_TILT_TURN then panelOperationID = 4	! TILTANDTURNLEFTHAND
				else
					if iWindowClass = WINCLASS_MULTISASH then
						if gs_repeat_modules then
							CasementID	= CasementIDArray[1][1]
						else
							CasementID	= CasementIDArray[1][2]
						endif
					else
						CasementID	= CasementIDArray[2][3]
					endif
					optypeID	= optypeIDArray[CasementID]
					gosub "paneloperation"
				endif
				ifc_WindowPanel[2][1] = gs_sash_thk * (optypeID <> SASH_FIXED)
				ifc_WindowPanel[2][2] = gs_sash_width * (optypeID <> SASH_FIXED)
				ifc_WindowPanel[2][3] = panelOperationID
				ifc_WindowPanel[2][4] = 3	! RIGHT
			else
				ifc_optype = WIN_OP_USER_DEFINED
				parameters ifc_optype = ifc_optype
			endif
		endif

		bIFCParametersDone = 1
	endif

	if ifc_optype = WIN_OP_DOUBLE_PANEL_HORIZONTAL & not(bIFCParametersDone) then
		TwoSashOptypeID = 0
		if gs_UTrans then
			CasementID	= CasementIDArray[1][2]
			optypeID	= optypeIDArray[CasementID]
			bTwoSash_Top =	(optypeID = SASH_DOUBLE_SIDE_HUNG		|\
							 optypeID = SASH_SLIDING_HOR			|\
							 optypeID = SASH_SLIDING_HOR_M			|\
							 optypeID = SASH_DOUBLE_SLIDING_HOR		|\
							 optypeID = SASH_DOUBLE_SLIDING_HOR_M	|\
							 optypeID = SASH_SLIDING_VER			|\
							 optypeID = SASH_DOUBLE_SLIDING_VER		)
			if bTwoSash_Top then TwoSashOptypeID = optypeID

			CasementID	= CasementIDArray[2][2]
			optypeID	= optypeIDArray[CasementID]
			bTwoSash_Bottom =  (optypeID = SASH_DOUBLE_SIDE_HUNG	|\
								optypeID = SASH_SLIDING_HOR			|\
								optypeID = SASH_SLIDING_HOR_M		|\
								optypeID = SASH_DOUBLE_SLIDING_HOR	|\
								optypeID = SASH_DOUBLE_SLIDING_HOR_M|\
								optypeID = SASH_SLIDING_VER			|\
								optypeID = SASH_DOUBLE_SLIDING_VER	)
			if bTwoSash_Bottom then TwoSashOptypeID = optypeID
		else
			if iWindowClass = WINCLASS_MULTISASH then
				if gs_repeat_modules then
					CasementID	= CasementIDArray[1][1]
				else
					CasementID	= CasementIDArray[1][2]
				endif
			else
				CasementID	= CasementIDArray[2][2]
			endif
			optypeID	= optypeIDArray[CasementID]
			bTwoSash_Top =	(optypeID = SASH_DOUBLE_SIDE_HUNG		|\
							 optypeID = SASH_SLIDING_HOR			|\
							 optypeID = SASH_SLIDING_HOR_M			|\
							 optypeID = SASH_DOUBLE_SLIDING_HOR		|\
							 optypeID = SASH_DOUBLE_SLIDING_HOR_M	|\
							 optypeID = SASH_SLIDING_VER			|\
							 optypeID = SASH_DOUBLE_SLIDING_VER		)
			if bTwoSash_Top then TwoSashOptypeID = optypeID

			if iWindowClass = WINCLASS_MULTISASH then
				CasementID	= CasementIDArray[1][1]
			else
				CasementID	= CasementIDArray[3][2]
			endif
			optypeID	= optypeIDArray[CasementID]
			bTwoSash_Bottom =  (optypeID = SASH_DOUBLE_SIDE_HUNG	|\
								optypeID = SASH_SLIDING_HOR			|\
								optypeID = SASH_SLIDING_HOR_M		|\
								optypeID = SASH_DOUBLE_SLIDING_HOR	|\
								optypeID = SASH_DOUBLE_SLIDING_HOR_M|\
								optypeID = SASH_SLIDING_VER			|\
								optypeID = SASH_DOUBLE_SLIDING_VER	)
			if bTwoSash_Bottom then TwoSashOptypeID = optypeID
		endif

		if bTwoSash_Top exor bTwoSash_Bottom then
			if	(TwoSashOptypeID = SASH_SLIDING_VER	|\
				 TwoSashOptypeID = SASH_DOUBLE_SLIDING_VER	) then

				ifc_optype = WIN_OP_TRIPLE_PANEL_HORIZONTAL
				parameters ifc_optype = ifc_optype

				if bTwoSash_Top then
					ifc_WindowPanel[1][1] = gs_sash_thk
					ifc_WindowPanel[1][2] = gs_sash_width
					ifc_WindowPanel[1][4] = 5	! TOP

					ifc_WindowPanel[2][1] = gs_sash_thk
					ifc_WindowPanel[2][2] = gs_sash_width
					ifc_WindowPanel[2][4] = 2	! MIDDLE

					if TwoSashOptypeID = SASH_SLIDING_VER then
						ifc_WindowPanel[1][3] = 12	! FIXEDCASEMENT
						ifc_WindowPanel[2][3] = 10	! SLIDINGVERTICAL
					endif

					if TwoSashOptypeID = SASH_DOUBLE_SLIDING_VER then
						ifc_WindowPanel[1][3] = 10	! SLIDINGVERTICAL
						ifc_WindowPanel[2][3] = 10	! SLIDINGVERTICAL
					endif

					if gs_UTrans then
						ifc_FirstTransomOffset	= gs_UTrans_h/ac_unit_height
						ifc_SecondTransomOffset	= (ac_unit_height/2+(gs_UTrans_h + gs_UTrans_w/2-gs_frame_width_upper)/2)/ac_unit_height

						CasementID	= CasementIDArray[2][2]
						optypeID	= optypeIDArray[CasementID]
					else
						ifc_FirstTransomOffset	= gs_LTrans_h/ac_unit_height
						ifc_SecondTransomOffset	= (ac_unit_height/2+(gs_LTrans_h + gs_LTrans_w/2-gs_frame_width_upper)/2)/ac_unit_height

						if iWindowClass = WINCLASS_MULTISASH then
							CasementID	= CasementIDArray[1][1]
						else
							CasementID	= CasementIDArray[3][2]
						endif
						optypeID	= optypeIDArray[CasementID]
					endif
					gosub "paneloperation"
					ifc_WindowPanel[3][1] = gs_sash_thk * (optypeID <> SASH_FIXED)
					ifc_WindowPanel[3][2] = gs_sash_width * (optypeID <> SASH_FIXED)
					ifc_WindowPanel[3][3] = panelOperationID
					ifc_WindowPanel[3][4] = 4	! BOTTOM
				else
					ifc_WindowPanel[2][1] = gs_sash_thk
					ifc_WindowPanel[2][2] = gs_sash_width
					ifc_WindowPanel[2][4] = 2	! MIDDLE

					ifc_WindowPanel[3][1] = gs_sash_thk
					ifc_WindowPanel[3][2] = gs_sash_width
					ifc_WindowPanel[3][4] = 4	! BOTTOM

					if TwoSashOptypeID = SASH_SLIDING_VER then
						ifc_WindowPanel[2][3] = 12	! FIXEDCASEMENT
						ifc_WindowPanel[3][3] = 10	! SLIDINGVERTICAL
					endif

					if TwoSashOptypeID = SASH_DOUBLE_SLIDING_VER then
						ifc_WindowPanel[2][3] = 10	! SLIDINGVERTICAL
						ifc_WindowPanel[3][3] = 10	! SLIDINGVERTICAL
					endif

					if gs_UTrans then
						ifc_FirstTransomOffset	= (gs_frame_width_lower/2+(gs_UTrans_h-gs_UTrans_w/2)/2)/ac_unit_height
						ifc_SecondTransomOffset	= gs_UTrans_h/ac_unit_height

						CasementID	= CasementIDArray[1][2]
						optypeID	= optypeIDArray[CasementID]
					else
						ifc_FirstTransomOffset	= (gs_frame_width_lower/2+(gs_LTrans_h-gs_LTrans_w/2)/2)/ac_unit_height
						ifc_SecondTransomOffset	= gs_LTrans_h/ac_unit_height

						if iWindowClass = WINCLASS_MULTISASH then
							if gs_repeat_modules then
								CasementID	= CasementIDArray[1][1]
							else
								CasementID	= CasementIDArray[1][2]
							endif
						else
							CasementID	= CasementIDArray[2][2]
						endif
						optypeID	= optypeIDArray[CasementID]
					endif
					gosub "paneloperation"
					ifc_WindowPanel[1][1] = gs_sash_thk * (optypeID <> SASH_FIXED)
					ifc_WindowPanel[1][2] = gs_sash_width * (optypeID <> SASH_FIXED)
					ifc_WindowPanel[1][3] = panelOperationID
					ifc_WindowPanel[1][4] = 5	! TOP
				endif
				parameters	ifc_FirstTransomOffset	= ifc_FirstTransomOffset,
							ifc_SecondTransomOffset	= ifc_SecondTransomOffset
			else
				ifc_FirstMullionOffset = 0.5
				parameters ifc_FirstMullionOffset = ifc_FirstMullionOffset

				ifc_WindowPanel[1][1] = gs_sash_thk
				ifc_WindowPanel[1][2] = gs_sash_width
				ifc_WindowPanel[1][4] = 1	! LEFT

				ifc_WindowPanel[2][1] = gs_sash_thk
				ifc_WindowPanel[2][2] = gs_sash_width
				ifc_WindowPanel[2][4] = 3	! RIGHT

				if TwoSashOptypeID = SASH_DOUBLE_SIDE_HUNG	then
					ifc_WindowPanel[1][3] = 1	! SIDEHUNGRIGHTHAND
					ifc_WindowPanel[2][3] = 2	! SIDEHUNGLEFTHAND
					_sashMullionThickness = 2 * gs_sash_width
				endif
				if TwoSashOptypeID = SASH_SLIDING_HOR then
					ifc_WindowPanel[1][3] = 12	! FIXEDCASEMENT
					ifc_WindowPanel[2][3] = 9	! SLIDINGHORIZONTAL
					_sashMullionThickness = gs_sash_width
				endif
				if TwoSashOptypeID = SASH_SLIDING_HOR_M then
					ifc_WindowPanel[1][3] = 9	! SLIDINGHORIZONTAL
					ifc_WindowPanel[2][3] = 12	! FIXEDCASEMENT
					_sashMullionThickness = gs_sash_width
				endif
				if	TwoSashOptypeID = SASH_DOUBLE_SLIDING_HOR		|\
					TwoSashOptypeID = SASH_DOUBLE_SLIDING_HOR_M	then

					ifc_WindowPanel[1][3] = 9	! SLIDINGHORIZONTAL
					ifc_WindowPanel[2][3] = 9	! SLIDINGHORIZONTAL
					_sashMullionThickness = gs_sash_width
				endif

				if ifc_MullionThickness < EPS then
					ifc_MullionThickness = _sashMullionThickness
					parameters ifc_MullionThickness = ifc_MullionThickness
				endif

				if bTwoSash_Top then
					ifc_optype = WIN_OP_TRIPLE_PANEL_BOTTOM
					parameters ifc_optype = ifc_optype

					if gs_UTrans then
						CasementID	= CasementIDArray[2][2]
						optypeID	= optypeIDArray[CasementID]
					else
						if iWindowClass = WINCLASS_MULTISASH then
							CasementID	= CasementIDArray[1][1]
						else
							CasementID	= CasementIDArray[3][2]
						endif
						optypeID	= optypeIDArray[CasementID]
					endif
					gosub "paneloperation"
					ifc_WindowPanel[3][1] = gs_sash_thk * (optypeID <> SASH_FIXED)
					ifc_WindowPanel[3][2] = gs_sash_width * (optypeID <> SASH_FIXED)
					ifc_WindowPanel[3][3] = panelOperationID
					ifc_WindowPanel[3][4] = 4	! BOTTOM
				else
					ifc_optype = WIN_OP_TRIPLE_PANEL_TOP
					parameters ifc_optype = ifc_optype

					if gs_UTrans then
						CasementID	= CasementIDArray[1][2]
						optypeID	= optypeIDArray[CasementID]
					else
						if iWindowClass = WINCLASS_MULTISASH then
							if gs_repeat_modules then
								CasementID	= CasementIDArray[1][1]
							else
								CasementID	= CasementIDArray[1][2]
							endif
						else
							CasementID	= CasementIDArray[2][2]
						endif
						optypeID	= optypeIDArray[CasementID]
					endif
					gosub "paneloperation"
					ifc_WindowPanel[3][1] = gs_sash_thk * (optypeID <> SASH_FIXED)
					ifc_WindowPanel[3][2] = gs_sash_width * (optypeID <> SASH_FIXED)
					ifc_WindowPanel[3][3] = panelOperationID
					ifc_WindowPanel[3][4] = 5	! TOP
				endif
			endif
		else
			if not(bTwoSash_Top | bTwoSash_Bottom) then
				if gs_UTrans then
					CasementID	= CasementIDArray[1][2]
					optypeID	= optypeIDArray[CasementID]
					gosub "paneloperation"
					ifc_WindowPanel[1][1] = gs_sash_thk * (optypeID <> SASH_FIXED)
					ifc_WindowPanel[1][2] = gs_sash_width * (optypeID <> SASH_FIXED)
					ifc_WindowPanel[1][3] = panelOperationID
					ifc_WindowPanel[1][4] = 5	! TOP

					CasementID	= CasementIDArray[2][2]
					optypeID	= optypeIDArray[CasementID]
					gosub "paneloperation"
					ifc_WindowPanel[2][1] = gs_sash_thk * (optypeID <> SASH_FIXED)
					ifc_WindowPanel[2][2] = gs_sash_width * (optypeID <> SASH_FIXED)
					ifc_WindowPanel[2][3] = panelOperationID
					ifc_WindowPanel[2][4] = 4	! BOTTOM
				else
					if iWindowClass = WINCLASS_MULTISASH then
						if gs_repeat_modules then
							CasementID	= CasementIDArray[1][1]
						else
							CasementID	= CasementIDArray[1][2]
						endif
					else
						CasementID	= CasementIDArray[2][2]
					endif
					optypeID	= optypeIDArray[CasementID]
					gosub "paneloperation"
					ifc_WindowPanel[1][1] = gs_sash_thk * (optypeID <> SASH_FIXED)
					ifc_WindowPanel[1][2] = gs_sash_width * (optypeID <> SASH_FIXED)
					ifc_WindowPanel[1][3] = panelOperationID
					ifc_WindowPanel[1][4] = 5	! TOP

					if iWindowClass = WINCLASS_MULTISASH then
						CasementID	= CasementIDArray[1][1]
					else
						CasementID	= CasementIDArray[3][2]
					endif
					optypeID	= optypeIDArray[CasementID]
					gosub "paneloperation"
					ifc_WindowPanel[2][1] = gs_sash_thk * (optypeID <> SASH_FIXED)
					ifc_WindowPanel[2][2] = gs_sash_width * (optypeID <> SASH_FIXED)
					ifc_WindowPanel[2][3] = panelOperationID
					ifc_WindowPanel[2][4] = 4	! BOTTOM
				endif
			else
				ifc_optype = WIN_OP_USER_DEFINED
				parameters ifc_optype = ifc_optype
			endif
		endif

		bIFCParametersDone = 1
	endif

	if ifc_optype = WIN_OP_TRIPLE_PANEL_VERTICAL & not(bIFCParametersDone) then
		for i = 1 to 3
			if iWindowClass = WINCLASS_MULTISASH then
				if gs_repeat_modules then
					CasementID	= CasementIDArray[1][1]
				else
					CasementID	= CasementIDArray[1][i]
				endif
			else
				CasementID	= CasementIDArray[2][i]
			endif
			optypeID	= optypeIDArray[CasementID]
			gosub "two sash"
			if bTwoSash then i = 3
		next i

		if bTwoSash then
			ifc_optype = WIN_OP_USER_DEFINED
			parameters ifc_optype = ifc_optype
		else
			if iWindowClass = WINCLASS_MULTISASH then
				CasementID	= CasementIDArray[1][1]
			else
				CasementID	= CasementIDArray[2][1]
			endif
			optypeID	= optypeIDArray[CasementID]
			if iWindowType = WIN_WVariableDoubleSash then
				panelOperationID = 1	! SIDEHUNGRIGHTHAND
				if optypeID = SASH_TILT_TURN_M	then panelOperationID = 3	! TILTANDTURNRIGHTHAND
			else
				gosub "paneloperation"
			endif
			ifc_WindowPanel[1][1] = gs_sash_thk * (optypeID <> SASH_FIXED)
			ifc_WindowPanel[1][2] = gs_sash_width * (optypeID <> SASH_FIXED)
			ifc_WindowPanel[1][3] = panelOperationID
			ifc_WindowPanel[1][4] = 1	! LEFT

			if iWindowType = WIN_WVariableDoubleSash then
				panelOperationID = 2	! SIDEHUNGLEFTHAND
				if optypeID = SASH_TILT_TURN then panelOperationID = 4	! TILTANDTURNLEFTHAND
			else
				if iWindowClass = WINCLASS_MULTISASH then
					if gs_repeat_modules then
						CasementID	= CasementIDArray[1][1]
					else
						CasementID	= CasementIDArray[1][2]
					endif
				else
					CasementID	= CasementIDArray[2][2]
				endif
				optypeID	= optypeIDArray[CasementID]
				gosub "paneloperation"
			endif
			ifc_WindowPanel[2][1] = gs_sash_thk * (optypeID <> SASH_FIXED)
			ifc_WindowPanel[2][2] = gs_sash_width * (optypeID <> SASH_FIXED)
			ifc_WindowPanel[2][3] = panelOperationID
			ifc_WindowPanel[2][4] = 2	! MIDDLE

			if iWindowClass = WINCLASS_MULTISASH then
				if gs_repeat_modules then
					CasementID	= CasementIDArray[1][1]
				else
					CasementID	= CasementIDArray[1][3]
				endif
			else
				CasementID	= CasementIDArray[2][3]
			endif
			optypeID	= optypeIDArray[CasementID]
			gosub "paneloperation"
			ifc_WindowPanel[3][1] = gs_sash_thk * (optypeID <> SASH_FIXED)
			ifc_WindowPanel[3][2] = gs_sash_width * (optypeID <> SASH_FIXED)
			ifc_WindowPanel[3][3] = panelOperationID
			ifc_WindowPanel[3][4] = 3	! RIGHT
		endif

		bIFCParametersDone = 1
	endif

	if ifc_optype = WIN_OP_TRIPLE_PANEL_HORIZONTAL & not(bIFCParametersDone) then
		for i = 1 to 3
			if iWindowClass = WINCLASS_MULTISASH then
				if gs_repeat_modules then
					CasementID	= CasementIDArray[1][1]
				else
					CasementID	= CasementIDArray[1][i]
				endif
			else
				CasementID	= CasementIDArray[i][2]
			endif
			optypeID	= optypeIDArray[CasementID]
			gosub "two sash"
			if bTwoSash then i = 3
		next i

		if bTwoSash then
			ifc_optype = WIN_OP_USER_DEFINED
			parameters ifc_optype = ifc_optype
		else
			if iWindowClass = WINCLASS_MULTISASH then
				if gs_repeat_modules then
					CasementID	= CasementIDArray[1][1]
				else
					CasementID	= CasementIDArray[1][3]
				endif
			else
				CasementID	= CasementIDArray[1][2]
			endif
			optypeID	= optypeIDArray[CasementID]
			gosub "paneloperation"
			ifc_WindowPanel[1][1] = gs_sash_thk * (optypeID <> SASH_FIXED)
			ifc_WindowPanel[1][2] = gs_sash_width * (optypeID <> SASH_FIXED)
			ifc_WindowPanel[1][3] = panelOperationID
			ifc_WindowPanel[1][4] = 5	! TOP

			if iWindowClass = WINCLASS_MULTISASH then
				if gs_repeat_modules then
					CasementID	= CasementIDArray[1][1]
				else
					CasementID	= CasementIDArray[1][2]
				endif
			else
				CasementID	= CasementIDArray[2][2]
			endif
			optypeID	= optypeIDArray[CasementID]
			gosub "paneloperation"
			ifc_WindowPanel[2][1] = gs_sash_thk * (optypeID <> SASH_FIXED)
			ifc_WindowPanel[2][2] = gs_sash_width * (optypeID <> SASH_FIXED)
			ifc_WindowPanel[2][3] = panelOperationID
			ifc_WindowPanel[2][4] = 2	! MIDDLE

			if iWindowClass = WINCLASS_MULTISASH then
				CasementID	= CasementIDArray[1][1]
			else
				CasementID	= CasementIDArray[3][2]
			endif
			optypeID	= optypeIDArray[CasementID]
			gosub "paneloperation"
			ifc_WindowPanel[3][1] = gs_sash_thk * (optypeID <> SASH_FIXED)
			ifc_WindowPanel[3][2] = gs_sash_width * (optypeID <> SASH_FIXED)
			ifc_WindowPanel[3][3] = panelOperationID
			ifc_WindowPanel[3][4] = 4	! BOTTOM
		endif

		bIFCParametersDone = 1
	endif

	if ifc_optype = WIN_OP_TRIPLE_PANEL_BOTTOM & not(bIFCParametersDone) then
		CasementID	= CasementIDArray[2][2]
		optypeID	= optypeIDArray[CasementID]
		gosub "two sash"
		if not(bTwoSash) then
			CasementID	= CasementIDArray[2][3]
			optypeID	= optypeIDArray[CasementID]
			gosub "two sash"
		endif
		if not(bTwoSash) then
			CasementID	= CasementIDArray[3][2]
			optypeID	= optypeIDArray[CasementID]
			gosub "two sash"
		endif

		if bTwoSash then
			ifc_optype = WIN_OP_USER_DEFINED
			parameters ifc_optype = ifc_optype
		else
			CasementID	= CasementIDArray[2][2]
			optypeID	= optypeIDArray[CasementID]
			gosub "paneloperation"
			ifc_WindowPanel[1][1] = gs_sash_thk * (optypeID <> SASH_FIXED)
			ifc_WindowPanel[1][2] = gs_sash_width * (optypeID <> SASH_FIXED)
			ifc_WindowPanel[1][3] = panelOperationID
			ifc_WindowPanel[1][4] = 1	! LEFT

			CasementID	= CasementIDArray[2][3]
			optypeID	= optypeIDArray[CasementID]
			gosub "paneloperation"
			ifc_WindowPanel[2][1] = gs_sash_thk * (optypeID <> SASH_FIXED)
			ifc_WindowPanel[2][2] = gs_sash_width * (optypeID <> SASH_FIXED)
			ifc_WindowPanel[2][3] = panelOperationID
			ifc_WindowPanel[2][4] = 3	! RIGHT

			CasementID	= CasementIDArray[3][2]
			optypeID	= optypeIDArray[CasementID]
			gosub "paneloperation"
			ifc_WindowPanel[3][1] = gs_sash_thk * (optypeID <> SASH_FIXED)
			ifc_WindowPanel[3][2] = gs_sash_width * (optypeID <> SASH_FIXED)
			ifc_WindowPanel[3][3] = panelOperationID
			ifc_WindowPanel[3][4] = 4	! BOTTOM
		endif

		bIFCParametersDone = 1
	endif

	if ifc_optype = WIN_OP_TRIPLE_PANEL_TOP & not(bIFCParametersDone) then
		CasementID	= CasementIDArray[2][2]
		optypeID	= optypeIDArray[CasementID]
		gosub "two sash"
		if not(bTwoSash) then
			CasementID	= CasementIDArray[2][3]
			optypeID	= optypeIDArray[CasementID]
			gosub "two sash"
		endif
		if not(bTwoSash) then
			CasementID	= CasementIDArray[1][2]
			optypeID	= optypeIDArray[CasementID]
			gosub "two sash"
		endif

		if bTwoSash then
			ifc_optype = WIN_OP_USER_DEFINED
			parameters ifc_optype = ifc_optype
		else
			CasementID	= CasementIDArray[2][2]
			optypeID	= optypeIDArray[CasementID]
			gosub "paneloperation"
			ifc_WindowPanel[1][1] = gs_sash_thk * (optypeID <> SASH_FIXED)
			ifc_WindowPanel[1][2] = gs_sash_width * (optypeID <> SASH_FIXED)
			ifc_WindowPanel[1][3] = panelOperationID
			ifc_WindowPanel[1][4] = 1	! LEFT

			CasementID	= CasementIDArray[2][3]
			optypeID	= optypeIDArray[CasementID]
			gosub "paneloperation"
			ifc_WindowPanel[2][1] = gs_sash_thk * (optypeID <> SASH_FIXED)
			ifc_WindowPanel[2][2] = gs_sash_width * (optypeID <> SASH_FIXED)
			ifc_WindowPanel[2][3] = panelOperationID
			ifc_WindowPanel[2][4] = 3	!RIGHT

			CasementID	= CasementIDArray[1][2]
			optypeID	= optypeIDArray[CasementID]
			gosub "paneloperation"
			ifc_WindowPanel[3][1] = gs_sash_thk * (optypeID <> SASH_FIXED)
			ifc_WindowPanel[3][2] = gs_sash_width * (optypeID <> SASH_FIXED)
			ifc_WindowPanel[3][3] = panelOperationID
			ifc_WindowPanel[3][4] = 5	! TOP
		endif

		bIFCParametersDone = 1
	endif

	if (ifc_optype = WIN_OP_TRIPLE_PANEL_LEFT |\
		ifc_optype = WIN_OP_TRIPLE_PANEL_RIGHT) & not(bIFCParametersDone) then

		CasementID	= CasementIDArray[2][3]
		optypeID	= optypeIDArray[CasementID]
		gosub "two sash"
		if gs_UTrans then
			if not(bTwoSash) then
				CasementID	= CasementIDArray[1][2]
				optypeID	= optypeIDArray[CasementID]
				gosub "two sash"
			endif
			if not(bTwoSash) then
				CasementID	= CasementIDArray[2][2]
				optypeID	= optypeIDArray[CasementID]
				gosub "two sash"
			endif
		else
			if not(bTwoSash) then
				CasementID	= CasementIDArray[2][2]
				optypeID	= optypeIDArray[CasementID]
				gosub "two sash"
			endif
			if not(bTwoSash) then
				CasementID	= CasementIDArray[3][2]
				optypeID	= optypeIDArray[CasementID]
				gosub "two sash"
			endif
		endif

		if bTwoSash then
			ifc_optype = WIN_OP_USER_DEFINED
			parameters ifc_optype = ifc_optype
		else
			if gs_UTrans then
				CasementID	= CasementIDArray[1][2]
				optypeID	= optypeIDArray[CasementID]
				gosub "paneloperation"
				ifc_WindowPanel[1][1] = gs_sash_thk * (optypeID <> SASH_FIXED)
				ifc_WindowPanel[1][2] = gs_sash_width * (optypeID <> SASH_FIXED)
				ifc_WindowPanel[1][3] = panelOperationID
				ifc_WindowPanel[1][4] = 5	! TOP

				CasementID	= CasementIDArray[2][2]
				optypeID	= optypeIDArray[CasementID]
				gosub "paneloperation"
				ifc_WindowPanel[2][1] = gs_sash_thk * (optypeID <> SASH_FIXED)
				ifc_WindowPanel[2][2] = gs_sash_width * (optypeID <> SASH_FIXED)
				ifc_WindowPanel[2][3] = panelOperationID
				ifc_WindowPanel[2][4] = 4	! BOTTOM
			else
				CasementID	= CasementIDArray[2][2]
				optypeID	= optypeIDArray[CasementID]
				gosub "paneloperation"
				ifc_WindowPanel[1][1] = gs_sash_thk * (optypeID <> SASH_FIXED)
				ifc_WindowPanel[1][2] = gs_sash_width * (optypeID <> SASH_FIXED)
				ifc_WindowPanel[1][3] = panelOperationID
				ifc_WindowPanel[1][4] = 5	! TOP

				CasementID	= CasementIDArray[3][2]
				optypeID	= optypeIDArray[CasementID]
				gosub "paneloperation"
				ifc_WindowPanel[2][1] = gs_sash_thk * (optypeID <> SASH_FIXED)
				ifc_WindowPanel[2][2] = gs_sash_width * (optypeID <> SASH_FIXED)
				ifc_WindowPanel[2][3] = panelOperationID
				ifc_WindowPanel[2][4] = 4	! BOTTOM
			endif

			CasementID	= CasementIDArray[2][3]
			optypeID	= optypeIDArray[CasementID]
			gosub "paneloperation"
			ifc_WindowPanel[3][1] = gs_sash_thk * (optypeID <> SASH_FIXED)
			ifc_WindowPanel[3][2] = gs_sash_width * (optypeID <> SASH_FIXED)
			ifc_WindowPanel[3][3] = panelOperationID
			if ifc_optype = WIN_OP_TRIPLE_PANEL_LEFT then
				ifc_WindowPanel[3][4] = 1	! LEFT
			else
				ifc_WindowPanel[3][4] = 3	! RIGHT
			endif
		endif

		bIFCParametersDone = 1
	endif
endif
parameters ifc_WindowPanel = ifc_WindowPanel

if ifc_optype = WIN_OP_NOT_DEFINED | ifc_optype = WIN_OP_USER_DEFINED then
	ifc_MullionThickness	= 0
	ifc_FirstMullionOffset	= 0
	ifc_SecondMullionOffset	= 0
	parameters	ifc_MullionThickness	= ifc_MullionThickness,
				ifc_FirstMullionOffset	= ifc_FirstMullionOffset,
				ifc_SecondMullionOffset	= ifc_SecondMullionOffset

	ifc_TransomThickness	= 0
	ifc_FirstTransomOffset	= 0
	ifc_SecondTransomOffset	= 0
	parameters	ifc_TransomThickness	= ifc_TransomThickness,
				ifc_FirstTransomOffset	= ifc_FirstTransomOffset,
				ifc_SecondTransomOffset	= ifc_SecondTransomOffset
endif

call "IFC_optype_window" parameters ifc_optype = ifc_optype

lock "ifc_optypestr"

end

"preloadSurfaces":
	parameters	stored_material[1][1]	= gs_frame_mat,
				stored_material[1][2]	= gs_frame_mat2,
				stored_material[1][3]	= gs_sash_mat,
				stored_material[1][4]	= gs_sash_mat2,
				stored_material[1][5]	= gs_grill_mat,
				stored_material[1][6]	= gs_grill_mat2,
				stored_material[1][7]	= gs_panel_mat,
				stored_material[1][8]	= gs_panel_mat2
return


"paneloperation":
	panelOperationID = 13	! OTHEROPERATION
	if optypeID = SASH_FIXED		then panelOperationID = 12 	! FIXEDCASEMENT
	if optypeID = SASH_FIXED_SCREW	then panelOperationID = 12 	! FIXEDCASEMENT
	if optypeID = SASH_SIDE_HUNG	then panelOperationID = 2	! SIDEHUNGLEFTHAND
	if optypeID = SASH_SIDE_HUNG_M	then panelOperationID = 1	! SIDEHUNGRIGHTHAND
	if optypeID = SASH_TILT_TURN	then panelOperationID = 4	! TILTANDTURNLEFTHAND
	if optypeID = SASH_TILT_TURN_M	then panelOperationID = 3	! TILTANDTURNRIGHTHAND
	if optypeID = SASH_BOTTOM_HUNG	then panelOperationID = 6	! BOTTOMHUNG
	if optypeID = SASH_TOP_HUNG		then panelOperationID = 5	! TOPHUNG
	if optypeID = SASH_VER_PIVOT	then panelOperationID = 8	! PIVOTVERTICAL
	if optypeID = SASH_VER_PIVOT_M	then panelOperationID = 8	! PIVOTVERTICAL
	if optypeID = SASH_HOR_PIVOT	then panelOperationID = 7	! PIVOTHORIZONTAL
return

"two sash":
	bTwoSash = (optypeID = SASH_DOUBLE_SIDE_HUNG		|\
				optypeID = SASH_SLIDING_HOR				|\
				optypeID = SASH_SLIDING_HOR_M			|\
				optypeID = SASH_DOUBLE_SLIDING_HOR		|\
				optypeID = SASH_DOUBLE_SLIDING_HOR_M	|\
				optypeID = SASH_SLIDING_VER				|\
				optypeID = SASH_DOUBLE_SLIDING_VER		)
return

]]>
</Script_VL>

<ParamSection SectVersion="26" SectionFlags="0" SubIdent="0">
	<ParamSectHeader>
		<AutoHotspots>false</AutoHotspots>
		<HoleBits>
			<WDBit_3DFrame/>
			<WDBit_ThickIsParam/>
		</HoleBits>
		<StatBits>
			<STBit_UIDefault/>
			<STBit_FixSize/>
			<STBit_UIUseHierarchicalPages/>
		</StatBits>
		<WDLeftFrame>0</WDLeftFrame>
		<WDRightFrame>0</WDRightFrame>
		<WDTopFrame>0</WDTopFrame>
		<WDBotFrame>0</WDBotFrame>
		<LayFlags>65535</LayFlags>
		<WDMirrorThickness>0</WDMirrorThickness>
		<WDWallInset>0</WDWallInset>
	</ParamSectHeader>
	<Parameters>
		<Length Name="A">
			<Description><![CDATA["Width"]]></Description>
			<Fix/>
			<Value>1.5</Value>
		</Length>
		<Length Name="B">
			<Description><![CDATA["Height"]]></Description>
			<Fix/>
			<Value>1.5</Value>
		</Length>
		<Length Name="ZZYZX">
			<Description><![CDATA["Z Dimension"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Boolean Name="bSkylight">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Boolean>
		<Integer Name="CasementIDArray">
			<Description><![CDATA[""]]></Description>
			<ArrayValues FirstDimension="3" SecondDimension="3">
				<AVal Column="1" Row="1">10</AVal>
				<AVal Column="2" Row="1">2</AVal>
				<AVal Column="3" Row="1">6</AVal>
				<AVal Column="1" Row="2">9</AVal>
				<AVal Column="2" Row="2">1</AVal>
				<AVal Column="3" Row="2">5</AVal>
				<AVal Column="1" Row="3">11</AVal>
				<AVal Column="2" Row="3">3</AVal>
				<AVal Column="3" Row="3">7</AVal>
			</ArrayValues>
		</Integer>
		<Integer Name="CasementTypeArray">
			<Description><![CDATA[""]]></Description>
			<ArrayValues FirstDimension="3" SecondDimension="3">
				<AVal Column="1" Row="1">1</AVal>
				<AVal Column="2" Row="1">1</AVal>
				<AVal Column="3" Row="1">1</AVal>
				<AVal Column="1" Row="2">1</AVal>
				<AVal Column="2" Row="2">1</AVal>
				<AVal Column="3" Row="2">1</AVal>
				<AVal Column="1" Row="3">1</AVal>
				<AVal Column="2" Row="3">1</AVal>
				<AVal Column="3" Row="3">1</AVal>
			</ArrayValues>
		</Integer>
		<Integer Name="CasementLinkArray">
			<Description><![CDATA[""]]></Description>
			<ArrayValues FirstDimension="3" SecondDimension="3">
				<AVal Column="1" Row="1">2</AVal>
				<AVal Column="2" Row="1">2</AVal>
				<AVal Column="3" Row="1">2</AVal>
				<AVal Column="1" Row="2">1</AVal>
				<AVal Column="2" Row="2">1</AVal>
				<AVal Column="3" Row="2">1</AVal>
				<AVal Column="1" Row="3">3</AVal>
				<AVal Column="2" Row="3">3</AVal>
				<AVal Column="3" Row="3">3</AVal>
			</ArrayValues>
		</Integer>
		<Integer Name="lod2D">
			<Description><![CDATA["2D Detail Level"]]></Description>
			<Value>1</Value>
		</Integer>
		<Integer Name="iLoD2D">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Integer>
		<Integer Name="lod3D">
			<Description><![CDATA["3D Detail Level"]]></Description>
			<Value>2</Value>
		</Integer>
		<Integer Name="iWindowClass">
			<Description><![CDATA[""]]></Description>
			<Value>1</Value>
		</Integer>
		<Integer Name="iWindowType">
			<Description><![CDATA[""]]></Description>
			<Value>5</Value>
		</Integer>
		<Boolean Name="gs_bSLight">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_bLeftSLight">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_Mullion_Top">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_LeftMullion_Top">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_Mullion_Bott">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_LeftMullion_Bott">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_UTransom_toLeft">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_UTransom_toRight">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_LTransom_toLeft">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_LTransom_toRight">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_RightMullion_Middle">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_LeftMullion_Middle">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_UTransom_Middle">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_LTransom_Middle">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bShowAddHotspots">
			<Description><![CDATA["Show Additional Hotspots"]]></Description>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="bShowUnitHotspots">
			<Description><![CDATA[""]]></Description>
			<Value>1</Value>
		</Boolean>
		<Length Name="gs_frame_ovhg_left_out">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="gs_frame_ovhg_right_out">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="gs_frame_ovhg_top_out">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="gs_frame_ovhg_bottom_out">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="gs_frame_ovhg_left_in">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="gs_frame_ovhg_right_in">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="gs_frame_ovhg_top_in">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="gs_frame_ovhg_bottom_in">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<Integer Name="uiUsedPageIDs">
			<Description><![CDATA["ID of Tabpages"]]></Description>
			<ArrayValues FirstDimension="1" SecondDimension="2">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0</AVal>
			</ArrayValues>
		</Integer>
		<String Name="uiUsedPageNames">
			<Description><![CDATA["Name and Icon of Tabpages"]]></Description>
			<ArrayValues FirstDimension="1" SecondDimension="2">
				<AVal Column="1" Row="1"><![CDATA[""]]></AVal>
				<AVal Column="2" Row="1"><![CDATA[""]]></AVal>
			</ArrayValues>
		</String>
		<Integer Name="myPage_ElevationId">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Integer>
		<Integer Name="myPage_FrameSettingsId">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Integer>
		<Integer Name="myPage_FrameWidthSettingsId">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Integer>
		<Integer Name="myPage_SashOptionsId">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Integer>
		<Integer Name="myPage_OpeningId">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Integer>
		<Integer Name="myPage_VentilationProfileId">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Integer>
		<Integer Name="myPage_ListingId">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Integer>
		<String Name="gs_UI_CasementRect">
			<Description><![CDATA[""]]></Description>
			<ArrayValues FirstDimension="96" SecondDimension="0">
				<AVal Row="1"><![CDATA["Одинаковые Створки"]]></AVal>
				<AVal Row="2"><![CDATA["Выбор Створки"]]></AVal>
				<AVal Row="3"><![CDATA["Тип Створки"]]></AVal>
				<AVal Row="4"><![CDATA["Вертикаль"]]></AVal>
				<AVal Row="5"><![CDATA["Горизонталь"]]></AVal>
				<AVal Row="6"><![CDATA["Верт."]]></AVal>
				<AVal Row="7"><![CDATA["Гор."]]></AVal>
				<AVal Row="8"><![CDATA["Верт. Вверху"]]></AVal>
				<AVal Row="9"><![CDATA["Гориз. Вверху"]]></AVal>
				<AVal Row="10"><![CDATA["Верт. Внизу"]]></AVal>
				<AVal Row="11"><![CDATA["Гориз. Внизу"]]></AVal>
				<AVal Row="12"><![CDATA["Раскладка"]]></AVal>
				<AVal Row="13"><![CDATA["Ширина"]]></AVal>
				<AVal Row="14"><![CDATA["Высота"]]></AVal>
				<AVal Row="15"><![CDATA["Толщина"]]></AVal>
				<AVal Row="16"><![CDATA["Расположение"]]></AVal>
				<AVal Row="17"><![CDATA["К-во Стекол"]]></AVal>
				<AVal Row="18"><![CDATA["Имя Створки Окна"]]></AVal>
				<AVal Row="19"><![CDATA["Переплет Створки"]]></AVal>
				<AVal Row="20"><![CDATA["Для создания специальной створки:"]]></AVal>
				<AVal Row="21"><![CDATA["1. Начертите ее с помощью инструментов конструирования (морф, перекрытие...)"]]></AVal>
				<AVal Row="22"><![CDATA["2. Сохраните створку при помощи команды Сохранить Выбранное Как... в меню Файл / Библиотеки и Объекты"]]></AVal>
				<AVal Row="23"><![CDATA["3. Выберите створку из списка Имени Створки Окна"]]></AVal>
				<AVal Row="24"><![CDATA["Основная Створка"]]></AVal>
				<AVal Row="25"><![CDATA["Основная Средняя"]]></AVal>
				<AVal Row="26"><![CDATA["Основная Средняя 1"]]></AVal>
				<AVal Row="27"><![CDATA["Основная Боковая 2"]]></AVal>
				<AVal Row="28"><![CDATA["Фрамуга"]]></AVal>
				<AVal Row="29"><![CDATA["Фрамуга 1"]]></AVal>
				<AVal Row="30"><![CDATA["Фрамуга 2"]]></AVal>
				<AVal Row="31"><![CDATA["Средняя Фрамуга"]]></AVal>
				<AVal Row="32"><![CDATA["Боковая Фрамуга 1"]]></AVal>
				<AVal Row="33"><![CDATA["Боковая Фрамуга 2"]]></AVal>
				<AVal Row="34"><![CDATA["Нижняя Створка"]]></AVal>
				<AVal Row="35"><![CDATA["Нижняя Створка 1"]]></AVal>
				<AVal Row="36"><![CDATA["Нижняя Створка 2"]]></AVal>
				<AVal Row="37"><![CDATA["Нижняя Средняя"]]></AVal>
				<AVal Row="38"><![CDATA["Нижняя Боковая 1"]]></AVal>
				<AVal Row="39"><![CDATA["Нижняя Боковая 2"]]></AVal>
				<AVal Row="40"><![CDATA["Боковая Панель"]]></AVal>
				<AVal Row="41"><![CDATA["Боковые Створки"]]></AVal>
				<AVal Row="42"><![CDATA["Боковая Створка 1"]]></AVal>
				<AVal Row="43"><![CDATA["Боковая Створка 2"]]></AVal>
				<AVal Row="44"><![CDATA["Фрамуга"]]></AVal>
				<AVal Row="45"><![CDATA["Основная Створка 1"]]></AVal>
				<AVal Row="46"><![CDATA["Основная Створка 2"]]></AVal>
				<AVal Row="47"><![CDATA["Тип и Угол/Ширина Открывания в 3D"]]></AVal>
				<AVal Row="48"><![CDATA["Угол Открывания в 2D"]]></AVal>
				<AVal Row="49"><![CDATA["Редактирование Створки"]]></AVal>
				<AVal Row="50"><![CDATA["Стекло"]]></AVal>
				<AVal Row="51"><![CDATA["Покрытие"]]></AVal>
				<AVal Row="52"><![CDATA["Перо 3D"]]></AVal>
				<AVal Row="53"><![CDATA["Снаружи"]]></AVal>
				<AVal Row="54"><![CDATA["Внутри"]]></AVal>
				<AVal Row="55"><![CDATA["Разделенная Створка возможна только при деактивации Одинаковых Створок."]]></AVal>
				<AVal Row="56"><![CDATA["Основные Створки"]]></AVal>
				<AVal Row="57"><![CDATA["Створки Фрамуги"]]></AVal>
				<AVal Row="58"><![CDATA["Верхняя Створка"]]></AVal>
				<AVal Row="59"><![CDATA["Фиксированная Створка"]]></AVal>
				<AVal Row="60"><![CDATA["Раздвижная Створка"]]></AVal>
				<AVal Row="61"><![CDATA["Сторона 1"]]></AVal>
				<AVal Row="62"><![CDATA["Сторона 2"]]></AVal>
				<AVal Row="63"><![CDATA["Тип Штриховки Сечения"]]></AVal>
				<AVal Row="64"><![CDATA["Перо"]]></AVal>
				<AVal Row="65"><![CDATA["Перо Фона"]]></AVal>
				<AVal Row="66"><![CDATA["Перо 3D"]]></AVal>
				<AVal Row="67"><![CDATA["Внутри"]]></AVal>
				<AVal Row="68"><![CDATA["Снаружи"]]></AVal>
				<AVal Row="69"><![CDATA["Створка"]]></AVal>
				<AVal Row="70"><![CDATA[""]]></AVal>
				<AVal Row="71"><![CDATA[""]]></AVal>
				<AVal Row="72"><![CDATA[""]]></AVal>
				<AVal Row="73"><![CDATA[""]]></AVal>
				<AVal Row="74"><![CDATA[""]]></AVal>
				<AVal Row="75"><![CDATA[""]]></AVal>
				<AVal Row="76"><![CDATA[""]]></AVal>
				<AVal Row="77"><![CDATA[""]]></AVal>
				<AVal Row="78"><![CDATA[""]]></AVal>
				<AVal Row="79"><![CDATA[""]]></AVal>
				<AVal Row="80"><![CDATA[""]]></AVal>
				<AVal Row="81"><![CDATA[""]]></AVal>
				<AVal Row="82"><![CDATA[""]]></AVal>
				<AVal Row="83"><![CDATA[""]]></AVal>
				<AVal Row="84"><![CDATA[""]]></AVal>
				<AVal Row="85"><![CDATA[""]]></AVal>
				<AVal Row="86"><![CDATA[""]]></AVal>
				<AVal Row="87"><![CDATA[""]]></AVal>
				<AVal Row="88"><![CDATA[""]]></AVal>
				<AVal Row="89"><![CDATA[""]]></AVal>
				<AVal Row="90"><![CDATA[""]]></AVal>
				<AVal Row="91"><![CDATA[""]]></AVal>
				<AVal Row="92"><![CDATA["Разделенная Створка возможна только при Одинаковых Створках без Фиксированного Стекла."]]></AVal>
				<AVal Row="93"><![CDATA["Разделенная Створка возможна только при Одинаковых Створках и отсутствии Фрамуги."]]></AVal>
				<AVal Row="94"><![CDATA["Разделенная створка невозможна при Фиксированном Стекле. Тип створки был изменен."]]></AVal>
				<AVal Row="95"><![CDATA["Сплошная застекленная створка невозможна при Фиксированном Стекле. Тип створки был изменен."]]></AVal>
				<AVal Row="96"><![CDATA["Разделенная Рама возможна только при выборе Фиксированного Стекла. Тип створки был изменен."]]></AVal>
			</ArrayValues>
		</String>
		<String Name="gs_UI_WindowElevation">
			<Description><![CDATA[""]]></Description>
			<ArrayValues FirstDimension="110" SecondDimension="0">
				<AVal Row="1"><![CDATA["Фрамуга Вверху"]]></AVal>
				<AVal Row="2"><![CDATA["Фрамуга Внизу"]]></AVal>
				<AVal Row="3"><![CDATA["Импосты Фрамуги"]]></AVal>
				<AVal Row="4"><![CDATA["Импосты Внизу"]]></AVal>
				<AVal Row="5"><![CDATA["Конфигурация Остекления"]]></AVal>
				<AVal Row="6"><![CDATA["Ширина Верхнего Средника"]]></AVal>
				<AVal Row="7"><![CDATA["Ширина Нижнего Средника"]]></AVal>
				<AVal Row="8"><![CDATA["Высота Верхнего Средника"]]></AVal>
				<AVal Row="9"><![CDATA["Высота Нижнего Средника."]]></AVal>
				<AVal Row="10"><![CDATA["Ширина Боковой Панели"]]></AVal>
				<AVal Row="11"><![CDATA["Ширина Остекления Сбоку"]]></AVal>
				<AVal Row="12"><![CDATA["Ширина Средней Створки"]]></AVal>
				<AVal Row="13"><![CDATA["Ширина Решетки"]]></AVal>
				<AVal Row="14"><![CDATA["Ширина Боковой Створки 1"]]></AVal>
				<AVal Row="15"><![CDATA["Ширина Боковой Створки 1"]]></AVal>
				<AVal Row="16"><![CDATA["Единая Ширина Коробки"]]></AVal>
				<AVal Row="17"><![CDATA["Толщина Коробки"]]></AVal>
				<AVal Row="18"><![CDATA["Ширина Коробки Сбоку 2"]]></AVal>
				<AVal Row="19"><![CDATA["Ширина Коробки Вверху"]]></AVal>
				<AVal Row="20"><![CDATA["Ширина Коробки Внизу"]]></AVal>
				<AVal Row="21"><![CDATA["Ширина Бокового Импоста 1"]]></AVal>
				<AVal Row="22"><![CDATA["Ширина Бокового Импоста 2"]]></AVal>
				<AVal Row="23"><![CDATA["Боковая Панель"]]></AVal>
				<AVal Row="24"><![CDATA["Импост Вверху"]]></AVal>
				<AVal Row="25"><![CDATA["Импост Внизу"]]></AVal>
				<AVal Row="26"><![CDATA["Классическое Разделение"]]></AVal>
				<AVal Row="27"><![CDATA["Высота Пяты"]]></AVal>
				<AVal Row="28"><![CDATA["Малый Радиус"]]></AVal>
				<AVal Row="29"><![CDATA["Размер Створки 1"]]></AVal>
				<AVal Row="30"><![CDATA["Размер Створки 2"]]></AVal>
				<AVal Row="31"><![CDATA["Размер Створки 3"]]></AVal>
				<AVal Row="32"><![CDATA["Верхний Торец от Центра"]]></AVal>
				<AVal Row="33"><![CDATA["Радиус Малой Кривой"]]></AVal>
				<AVal Row="34"><![CDATA["Определение Верха Окна"]]></AVal>
				<AVal Row="35"><![CDATA["Угол Вверху"]]></AVal>
				<AVal Row="36"><![CDATA["По Горизонтали"]]></AVal>
				<AVal Row="37"><![CDATA["По Вертикали"]]></AVal>
				<AVal Row="38"><![CDATA["К-во Стекол"]]></AVal>
				<AVal Row="39"><![CDATA["Тиражировать Элемент"]]></AVal>
				<AVal Row="40"><![CDATA["Количество Копий"]]></AVal>
				<AVal Row="41"><![CDATA["Сохранять Осевое Расстояние"]]></AVal>
				<AVal Row="42"><![CDATA["Осевое Расстояние"]]></AVal>
				<AVal Row="43"><![CDATA["Остаточная Ширина Переплета"]]></AVal>
				<AVal Row="44"><![CDATA["Остаточная Высота Переплета"]]></AVal>
				<AVal Row="45"><![CDATA["Ширина Среднего Импоста"]]></AVal>
				<AVal Row="46"><![CDATA["Ширина Средней Фрамуги"]]></AVal>
				<AVal Row="47"><![CDATA["Ширина Переплета 1"]]></AVal>
				<AVal Row="48"><![CDATA["Ширина Переплета 2"]]></AVal>
				<AVal Row="49"><![CDATA["Ширина Переплета 3"]]></AVal>
				<AVal Row="50"><![CDATA["Ширина Переплета 4"]]></AVal>
				<AVal Row="51"><![CDATA["Ширина Переплета 5"]]></AVal>
				<AVal Row="52"><![CDATA["Ширина Переплета 6"]]></AVal>
				<AVal Row="53"><![CDATA["Ширина Переплета 7"]]></AVal>
				<AVal Row="54"><![CDATA["Ширина Переплета 8"]]></AVal>
				<AVal Row="55"><![CDATA["Ширина Переплета 9"]]></AVal>
				<AVal Row="56"><![CDATA["Ширина Переплета 10"]]></AVal>
				<AVal Row="57"><![CDATA["Высота Переплета 1"]]></AVal>
				<AVal Row="58"><![CDATA["Высота Переплета 2"]]></AVal>
				<AVal Row="59"><![CDATA["Высота Переплета 3"]]></AVal>
				<AVal Row="60"><![CDATA["Высота Переплета 4"]]></AVal>
				<AVal Row="61"><![CDATA["Высота Переплета 5"]]></AVal>
				<AVal Row="62"><![CDATA["Высота Переплета 6"]]></AVal>
				<AVal Row="63"><![CDATA["Высота Переплета 7"]]></AVal>
				<AVal Row="64"><![CDATA["Высота Переплета 8"]]></AVal>
				<AVal Row="65"><![CDATA["Высота Переплета 9"]]></AVal>
				<AVal Row="66"><![CDATA["Высота Переплета 10"]]></AVal>
				<AVal Row="67"><![CDATA["Ширина Импоста 1"]]></AVal>
				<AVal Row="68"><![CDATA["Ширина Импоста 2"]]></AVal>
				<AVal Row="69"><![CDATA["Ширина Импоста 3"]]></AVal>
				<AVal Row="70"><![CDATA["Ширина Импоста 4"]]></AVal>
				<AVal Row="71"><![CDATA["Ширина Импоста 5"]]></AVal>
				<AVal Row="72"><![CDATA["Ширина Импоста 6"]]></AVal>
				<AVal Row="73"><![CDATA["Ширина Импоста 7"]]></AVal>
				<AVal Row="74"><![CDATA["Ширина Импоста 8"]]></AVal>
				<AVal Row="75"><![CDATA["Ширина Импоста 9"]]></AVal>
				<AVal Row="76"><![CDATA["Ширина Средника 1"]]></AVal>
				<AVal Row="77"><![CDATA["Ширина Средника 2"]]></AVal>
				<AVal Row="78"><![CDATA["Ширина Средника 3"]]></AVal>
				<AVal Row="79"><![CDATA["Ширина Средника 4"]]></AVal>
				<AVal Row="80"><![CDATA["Ширина Средника 5"]]></AVal>
				<AVal Row="81"><![CDATA["Ширина Средника 6"]]></AVal>
				<AVal Row="82"><![CDATA["Ширина Средника 7"]]></AVal>
				<AVal Row="83"><![CDATA["Ширина Средника 8"]]></AVal>
				<AVal Row="84"><![CDATA["Ширина Средника 9"]]></AVal>
				<AVal Row="85"><![CDATA["Средняя"]]></AVal>
				<AVal Row="86"><![CDATA[""]]></AVal>
				<AVal Row="87"><![CDATA[""]]></AVal>
				<AVal Row="88"><![CDATA[""]]></AVal>
				<AVal Row="89"><![CDATA[""]]></AVal>
				<AVal Row="90"><![CDATA[""]]></AVal>
				<AVal Row="91"><![CDATA[""]]></AVal>
				<AVal Row="92"><![CDATA[""]]></AVal>
				<AVal Row="93"><![CDATA[""]]></AVal>
				<AVal Row="94"><![CDATA[""]]></AVal>
				<AVal Row="95"><![CDATA["Остаточная"]]></AVal>
				<AVal Row="96"><![CDATA["Фрамуга 1"]]></AVal>
				<AVal Row="97"><![CDATA["Фрамуга 2"]]></AVal>
				<AVal Row="98"><![CDATA["Фрамуга 3"]]></AVal>
				<AVal Row="99"><![CDATA["Фрамуга 4"]]></AVal>
				<AVal Row="100"><![CDATA["Фрамуга 5"]]></AVal>
				<AVal Row="101"><![CDATA["Фрамуга 6"]]></AVal>
				<AVal Row="102"><![CDATA["Фрамуга 7"]]></AVal>
				<AVal Row="103"><![CDATA["Фрамуга 8"]]></AVal>
				<AVal Row="104"><![CDATA["Фрамуга 9"]]></AVal>
				<AVal Row="105"><![CDATA["Размеры окна будут пересчитываться при изменении определенных параметров."]]></AVal>
				<AVal Row="106"><![CDATA["Смещение Коробки"]]></AVal>
				<AVal Row="107"><![CDATA["Смещение Коробки 2"]]></AVal>
				<AVal Row="108"><![CDATA["Смещение Верхней Рамы"]]></AVal>
				<AVal Row="109"><![CDATA["Смещение Нижней Рамы"]]></AVal>
				<AVal Row="110"><![CDATA["Створка для Показа в Символе"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stShowSashOnSymbol">
			<Description><![CDATA[""]]></Description>
			<ArrayValues FirstDimension="10" SecondDimension="0">
				<AVal Row="1"><![CDATA["1. Створка"]]></AVal>
				<AVal Row="2"><![CDATA["2. Створка"]]></AVal>
				<AVal Row="3"><![CDATA["3. Створка"]]></AVal>
				<AVal Row="4"><![CDATA["4. Створка"]]></AVal>
				<AVal Row="5"><![CDATA["5. Створка"]]></AVal>
				<AVal Row="6"><![CDATA["6. Створка"]]></AVal>
				<AVal Row="7"><![CDATA["7. Створка"]]></AVal>
				<AVal Row="8"><![CDATA["8. Створка"]]></AVal>
				<AVal Row="9"><![CDATA["9. Створка"]]></AVal>
				<AVal Row="10"><![CDATA["10. Створка"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stPanesConfiguration">
			<Description><![CDATA[""]]></Description>
			<ArrayValues FirstDimension="4" SecondDimension="0">
				<AVal Row="1"><![CDATA["Одинаковое Остекление"]]></AVal>
				<AVal Row="2"><![CDATA["Симметрично"]]></AVal>
				<AVal Row="3"><![CDATA["Асимметрично"]]></AVal>
				<AVal Row="4"><![CDATA["Одинаковые Створки"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stOpeningDir">
			<Description><![CDATA[""]]></Description>
			<ArrayValues FirstDimension="2" SecondDimension="0">
				<AVal Row="1"><![CDATA["Внутри"]]></AVal>
				<AVal Row="2"><![CDATA["Снаружи"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stPanesNumber">
			<Description><![CDATA[""]]></Description>
			<ArrayValues FirstDimension="10" SecondDimension="0">
				<AVal Row="1"><![CDATA["1"]]></AVal>
				<AVal Row="2"><![CDATA["2"]]></AVal>
				<AVal Row="3"><![CDATA["3"]]></AVal>
				<AVal Row="4"><![CDATA["4"]]></AVal>
				<AVal Row="5"><![CDATA["5"]]></AVal>
				<AVal Row="6"><![CDATA["6"]]></AVal>
				<AVal Row="7"><![CDATA["7"]]></AVal>
				<AVal Row="8"><![CDATA["8"]]></AVal>
				<AVal Row="9"><![CDATA["9"]]></AVal>
				<AVal Row="10"><![CDATA["10"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stSashType">
			<Description><![CDATA[""]]></Description>
			<ArrayValues FirstDimension="16" SecondDimension="0">
				<AVal Row="1"><![CDATA["Без Раскладки"]]></AVal>
				<AVal Row="2"><![CDATA["Г/В-Раскладка"]]></AVal>
				<AVal Row="3"><![CDATA["Редактируемая Раскладка"]]></AVal>
				<AVal Row="4"><![CDATA["Специальная Панель"]]></AVal>
				<AVal Row="5"><![CDATA["Стиль Прерия"]]></AVal>
				<AVal Row="6"><![CDATA["Разделенный"]]></AVal>
				<AVal Row="7"><![CDATA["Солнечные Лучи 1"]]></AVal>
				<AVal Row="8"><![CDATA["Солнечные Лучи 2"]]></AVal>
				<AVal Row="9"><![CDATA["Солнечные Лучи 3"]]></AVal>
				<AVal Row="10"><![CDATA["Солнечные Лучи 4"]]></AVal>
				<AVal Row="11"><![CDATA["Солнечные Лучи 5"]]></AVal>
				<AVal Row="12"><![CDATA["Солнечные Лучи 6"]]></AVal>
				<AVal Row="13"><![CDATA["Сплошное Остекление"]]></AVal>
				<AVal Row="14"><![CDATA["Разделенная Рама"]]></AVal>
				<AVal Row="15"><![CDATA["Сплошная Панель"]]></AVal>
				<AVal Row="16"><![CDATA["Вентиляционная Створка"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stMullionPosition">
			<Description><![CDATA[""]]></Description>
			<ArrayValues FirstDimension="3" SecondDimension="0">
				<AVal Row="1"><![CDATA["Снаружи"]]></AVal>
				<AVal Row="2"><![CDATA["Внутри"]]></AVal>
				<AVal Row="3"><![CDATA["Посередине"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stFixGlassDir">
			<Description><![CDATA[""]]></Description>
			<ArrayValues FirstDimension="2" SecondDimension="0">
				<AVal Row="1"><![CDATA["По Направлению Открывания"]]></AVal>
				<AVal Row="2"><![CDATA["Противоположное Направление"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stOpeningType">
			<Description><![CDATA[""]]></Description>
			<ArrayValues FirstDimension="26" SecondDimension="0">
				<AVal Row="1"><![CDATA["Фиксированное Остекление"]]></AVal>
				<AVal Row="2"><![CDATA["Фиксированная Створка"]]></AVal>
				<AVal Row="3"><![CDATA["Распашная"]]></AVal>
				<AVal Row="4"><![CDATA["Распашная Зеркальная"]]></AVal>
				<AVal Row="5"><![CDATA["Наклонно-Поворотная "]]></AVal>
				<AVal Row="6"><![CDATA["Наклонно-Поворотная Зеркальная"]]></AVal>
				<AVal Row="7"><![CDATA["Нижнеподвесная"]]></AVal>
				<AVal Row="8"><![CDATA["Верхнеподвесная"]]></AVal>
				<AVal Row="9"><![CDATA[""]]></AVal>
				<AVal Row="10"><![CDATA["Среднеповоротная Вертикальная"]]></AVal>
				<AVal Row="11"><![CDATA[""]]></AVal>
				<AVal Row="12"><![CDATA[""]]></AVal>
				<AVal Row="13"><![CDATA[""]]></AVal>
				<AVal Row="14"><![CDATA[""]]></AVal>
				<AVal Row="15"><![CDATA[""]]></AVal>
				<AVal Row="16"><![CDATA["Среднеповоротная Вертикальная Зеркальная"]]></AVal>
				<AVal Row="17"><![CDATA[""]]></AVal>
				<AVal Row="18"><![CDATA["Двойная Створка"]]></AVal>
				<AVal Row="19"><![CDATA["Двойная Наклонно-Поворотная"]]></AVal>
				<AVal Row="20"><![CDATA["Двойная Наклонно-Поворотная Зеркальная"]]></AVal>
				<AVal Row="21"><![CDATA["Раздвижная"]]></AVal>
				<AVal Row="22"><![CDATA["Раздвижная Зеркальная"]]></AVal>
				<AVal Row="23"><![CDATA["Двойная Раздвижная"]]></AVal>
				<AVal Row="24"><![CDATA["Двойная Раздвижная Зеркальная"]]></AVal>
				<AVal Row="25"><![CDATA["Подъемная"]]></AVal>
				<AVal Row="26"><![CDATA["Подъемно-Опускная"]]></AVal>
			</ArrayValues>
		</String>
		<String Name="stLouversinFrame">
			<Description><![CDATA[""]]></Description>
			<Value><![CDATA["Жалюзи в Раме"]]></Value>
		</String>
		<String Name="stCornerConnType">
			<Description><![CDATA[""]]></Description>
			<ArrayValues FirstDimension="3" SecondDimension="0">
				<AVal Row="1"><![CDATA["Коробка"]]></AVal>
				<AVal Row="2"><![CDATA["Угловой Импост"]]></AVal>
				<AVal Row="3"><![CDATA["Стекло"]]></AVal>
			</ArrayValues>
		</String>
		<Integer Name="casementIDForLabel">
			<Description><![CDATA[""]]></Description>
			<ArrayValues FirstDimension="3" SecondDimension="4">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0</AVal>
				<AVal Column="3" Row="1">0</AVal>
				<AVal Column="4" Row="1">0</AVal>
				<AVal Column="1" Row="2">0</AVal>
				<AVal Column="2" Row="2">1</AVal>
				<AVal Column="3" Row="2">0</AVal>
				<AVal Column="4" Row="2">0</AVal>
				<AVal Column="1" Row="3">0</AVal>
				<AVal Column="2" Row="3">0</AVal>
				<AVal Column="3" Row="3">0</AVal>
				<AVal Column="4" Row="3">0</AVal>
			</ArrayValues>
		</Integer>
		<String Name="st_uiWinSettModAttr">
			<Description><![CDATA[""]]></Description>
			<ArrayValues FirstDimension="3" SecondDimension="0">
				<AVal Row="1"><![CDATA["Покрытия Коробки и Полотна"]]></AVal>
				<AVal Row="2"><![CDATA["Перья Коробки и Створок в 3D"]]></AVal>
				<AVal Row="3"><![CDATA["Приточный Клапан"]]></AVal>
			</ArrayValues>
		</String>
		<Integer Name="gs_iPanelType">
			<Description><![CDATA["Panel Type"]]></Description>
			<Value>0</Value>
		</Integer>
		<Integer Name="AC_WallContours">
			<Description><![CDATA["Wall Contours (0-None,1-Full,2-Side,3-Length)"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="AC_Hole_Hotspot_Control">
			<Description><![CDATA["Hotspots 0-None,1-2D,2-3D,3-All"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>3</Value>
		</Integer>
		<Integer Name="AC_Hole_Display_Option">
			<Description><![CDATA["Floor Plan Display Option"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>3</Value>
		</Integer>
		<Angle Name="AC_Hole_Position_Angle">
			<Description><![CDATA["Hole Position Angle"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Boolean Name="AC_HoleSideMaterial">
			<Description><![CDATA["Hole has Wall's Side Surface"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="AC_HoleMaterialCurved">
			<Description><![CDATA["Hole Surface's Split is Curved in Curved Walls"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_glass_mat_eq">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Value>1</Value>
		</Boolean>
		<Material Name="gs_glass_01_mat">
			<Description><![CDATA["Остекление 1"]]></Description>
			<Fix/>
			<Value>24</Value>
		</Material>
		<Material Name="gs_glass_02_mat">
			<Description><![CDATA["Остекление 2"]]></Description>
			<Fix/>
			<Value>24</Value>
		</Material>
		<Material Name="gs_glass_03_mat">
			<Description><![CDATA["Остекление 3"]]></Description>
			<Fix/>
			<Value>24</Value>
		</Material>
		<Material Name="gs_glass_04_mat">
			<Description><![CDATA["Остекление 4"]]></Description>
			<Fix/>
			<Value>24</Value>
		</Material>
		<Material Name="gs_glass_05_mat">
			<Description><![CDATA["Остекление 5"]]></Description>
			<Fix/>
			<Value>24</Value>
		</Material>
		<Material Name="gs_glass_06_mat">
			<Description><![CDATA["Остекление 6"]]></Description>
			<Fix/>
			<Value>24</Value>
		</Material>
		<Material Name="gs_glass_07_mat">
			<Description><![CDATA["Остекление 7"]]></Description>
			<Fix/>
			<Value>24</Value>
		</Material>
		<Material Name="gs_glass_08_mat">
			<Description><![CDATA["Остекление 8"]]></Description>
			<Fix/>
			<Value>24</Value>
		</Material>
		<Material Name="gs_glass_09_mat">
			<Description><![CDATA["Остекление 9"]]></Description>
			<Fix/>
			<Value>24</Value>
		</Material>
		<Material Name="gs_glass_10_mat">
			<Description><![CDATA["Остекление 10"]]></Description>
			<Fix/>
			<Value>24</Value>
		</Material>
		<Material Name="gs_glass_11_mat">
			<Description><![CDATA["Остекление 11"]]></Description>
			<Fix/>
			<Value>24</Value>
		</Material>
		<Boolean Name="AC_show2DHotspotsIn3D">
			<Description><![CDATA["Show 2D Hotspots in 3D"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="ac_bottomlevel">
			<Description><![CDATA["Bottom Level"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="ac_toplevel">
			<Description><![CDATA["Top Level"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="AC_Sill_To_Curr_Story">
			<Description><![CDATA["Sill Height to Current Story"]]></Description>
			<Flags>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Integer Name="AC_WallType">
			<Description><![CDATA["Wall Type"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="AC_WindowInWallContour">
			<Description><![CDATA["Window in Wall Contour"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="4" SecondDimension="0">
				<AVal Row="1">0</AVal>
				<AVal Row="2">0</AVal>
				<AVal Row="3">0</AVal>
				<AVal Row="4">0</AVal>
			</ArrayValues>
		</Integer>
		<Length Name="AC_WallContourPolygon">
			<Description><![CDATA["Wall Contour Polygon"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="3">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0</AVal>
				<AVal Column="3" Row="1">0</AVal>
			</ArrayValues>
		</Length>
		<Integer Name="AC_Wall_Direction_Type">
			<Description><![CDATA["Wall Direction Type"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Boolean Name="ac_cw_debug">
			<Description><![CDATA["Corner Window Debug Function"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="ac_cw_function">
			<Description><![CDATA["Placement Type (1=CW,0=W)"]]></Description>
			<Value>0</Value>
		</Boolean>

		<!-- iTypeDemolitionFill: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Integer Name="iTypeDemolitionFill">
			<Description><![CDATA["Demolition / New construction"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<FillPattern Name="gs_new_symb_fill">
			<Description><![CDATA["New Wall Fill Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>4</Value>
		</FillPattern>
		<PenColor Name="gs_new_symb_pen_Fg">
			<Description><![CDATA["New Wall Fill Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</PenColor>
		<PenColor Name="gs_new_symb_pen_bg">
			<Description><![CDATA["New Wall Fill Background Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<Length Name="gs_new_symb_width_r">
			<Description><![CDATA["New Wall Fill Width Right"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.15</Value>
		</Length>
		<Length Name="gs_new_symb_width_l">
			<Description><![CDATA["New Wall Fill Width Left"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.15</Value>
		</Length>
		<Boolean Name="gs_bShowNewOnCC">
			<Description><![CDATA["Show new construction on Wall"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<LineType Name="gs_Demolition_linetype">
			<Description><![CDATA["Demolition line type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>4</Value>
		</LineType>
		<Boolean Name="gs_bShowDemolitionPar">
			<Description><![CDATA["Show Demolition/New parameter"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- ac_corner_window: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Boolean Name="ac_corner_window">
			<Description><![CDATA["Corner Window Function"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Angle Name="ac_corner_angle">
			<Description><![CDATA["Corner Angle"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>90</Value>
		</Angle>
		<Boolean Name="ac_diff_con_wall_thk">
			<Description><![CDATA["Diff. Conn. Wall Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="ac_con_wall_thk">
			<Description><![CDATA["Connecting Wall Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>

		<!-- customCorner: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="customCorner">
			<Description><![CDATA["Custom Corner Function"]]></Description>
		</Title>
		<Boolean Name="gs_corner_column">
			<Description><![CDATA["Corner Column"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bLeftCornerFunction">
			<Description><![CDATA["Left Corner"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Angle Name="leftCornerAngle">
			<Description><![CDATA["Left Corner Angle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>90</Value>
		</Angle>
		<Boolean Name="bLeftDiffConnWall">
			<Description><![CDATA["Left Diff. Conn. Wall Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="leftConnWallThk">
			<Description><![CDATA["Left Connected Wall Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0.3</Value>
		</Length>
		<Boolean Name="bRightCornerFunction">
			<Description><![CDATA["Right Corner"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Angle Name="rightCornerAngle">
			<Description><![CDATA["Right Corner Angle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>90</Value>
		</Angle>
		<Boolean Name="bRightDiffConnWall">
			<Description><![CDATA["Right Diff. Conn. Wall Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="rightConnWallThk">
			<Description><![CDATA["Right Connected Wall Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0.3</Value>
		</Length>
		<Integer Name="iCornerConnTypeRight">
			<Description><![CDATA["Right Corner Connection Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="iCornerConnTypeLeft">
			<Description><![CDATA["Corner Connection Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="gs_cc_width">
			<Description><![CDATA["Corner Column Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_cc_thk">
			<Description><![CDATA["Corner Column Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_cc_pr">
			<Description><![CDATA["Corner Column Projection"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>

		<!-- gs_options: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_options">
			<Description><![CDATA["Options"]]></Description>
		</Title>
		<Boolean Name="gs_full_edit">
			<Description><![CDATA["Fully Editable"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Integer Name="iDWDet2D">
			<Description><![CDATA["2D Detail Level"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="iRevealOnSymbol">
			<Description><![CDATA["Show Reveal on Symbol"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="gs_detlevel_3D">
			<Description><![CDATA["3D Detail Level"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Детальный"]]></Value>
		</String>
		<Integer Name="gs_3DDetEnable">
			<Description><![CDATA["3D Detail Level Enable"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>14</Value>
		</Integer>
		<String Name="gs_opening_dir">
			<Description><![CDATA["Opening Direction"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Внутри"]]></Value>
		</String>
		<Boolean Name="bOpeningDirection">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Boolean>

		<!-- gs_window_sizes: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_window_sizes">
			<Description><![CDATA["Window Sizes"]]></Description>
		</Title>
		<Length Name="maxTolerance">
			<Description><![CDATA["Maximal Tolerance"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Length Name="gs_tolerance">
			<Description><![CDATA["Tolerance"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_tolerance_left">
			<Description><![CDATA["Tolerance Left"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_tolerance_right">
			<Description><![CDATA["Tolerance Right"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_tolerance_upper">
			<Description><![CDATA["Tolerance Upper"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_tolerance_lower">
			<Description><![CDATA["Tolerance Lower"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ac_wallhole_width">
			<Description><![CDATA["Wallhole Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>1.5</Value>
		</Length>
		<Length Name="ac_wallhole_height">
			<Description><![CDATA["Wallhole Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>1.5</Value>
		</Length>
		<Length Name="ac_reveal_width">
			<Description><![CDATA["Reveal Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>1.5</Value>
		</Length>
		<Length Name="ac_reveal_height">
			<Description><![CDATA["Reveal Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>1.5</Value>
		</Length>
		<Length Name="ac_unit_width">
			<Description><![CDATA["Unit Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>1.5</Value>
		</Length>
		<Length Name="ac_unit_height">
			<Description><![CDATA["Unit Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>1.5</Value>
		</Length>
		<Integer Name="gs_nominal_size">
			<Description><![CDATA["Nominal Size"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Boolean Name="gs_wallhole_nominal">
			<Description><![CDATA["Set Wallhole Size as Nominal Size"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_reveal_nominal">
			<Description><![CDATA["Set Reveal Size as Nominal Size"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_unit_nominal">
			<Description><![CDATA["Set Unit Size as Nominal Size"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_retain_nominal_sizes">
			<Description><![CDATA["Transfer Current Nominal Size to Selection"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- gs_window_frame: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_window_frame">
			<Description><![CDATA["Window Frame"]]></Description>
		</Title>
		<Integer Name="gs_pane_set_to_edit">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="gs_mullion_set_to_edit">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="gs_transom_set_to_edit">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="gs_panes_number">
			<Description><![CDATA["Panes Number"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Boolean Name="gs_repeat_modules">
			<Description><![CDATA["Repeat Modules"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="gs_repeat_modules_number">
			<Description><![CDATA["Repeat Modules Number"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Boolean Name="gs_axis_lock">
			<Description><![CDATA["Keep Axis Distance"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_axis_distance">
			<Description><![CDATA["Axis Distance"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<String Name="gs_PanesConfig">
			<Description><![CDATA["Panes Configuration"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Одинаковое Остекление"]]></Value>
		</String>
		<Integer Name="gs_iPanesConfig">
			<Description><![CDATA["Panes Configuration"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="gs_SLight_w">
			<Description><![CDATA["Side Pane Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.5</Value>
		</Length>
		<Length Name="gs_MidPane_w">
			<Description><![CDATA["Middle Pane Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.75</Value>
		</Length>
		<Length Name="PaneWidth_01">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.5</Value>
		</Length>
		<Length Name="PaneWidth_02">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.5</Value>
		</Length>
		<Length Name="PaneWidth_03">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.5</Value>
		</Length>
		<Length Name="PaneWidth_04">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.5</Value>
		</Length>
		<Length Name="PaneWidth_05">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.5</Value>
		</Length>
		<Length Name="PaneWidth_06">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.5</Value>
		</Length>
		<Length Name="PaneWidth_07">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.5</Value>
		</Length>
		<Length Name="PaneWidth_08">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.5</Value>
		</Length>
		<Length Name="PaneWidth_09">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.5</Value>
		</Length>
		<Length Name="PaneHeight_01">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.5</Value>
		</Length>
		<Length Name="PaneHeight_02">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.5</Value>
		</Length>
		<Length Name="PaneHeight_03">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.5</Value>
		</Length>
		<Length Name="PaneHeight_04">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.5</Value>
		</Length>
		<Length Name="PaneHeight_05">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.5</Value>
		</Length>
		<Length Name="PaneHeight_06">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.5</Value>
		</Length>
		<Length Name="PaneHeight_07">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.5</Value>
		</Length>
		<Length Name="PaneHeight_08">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.5</Value>
		</Length>
		<Length Name="PaneHeight_09">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.5</Value>
		</Length>
		<Boolean Name="gs_uniform_framewidth">
			<Description><![CDATA["Uniform Frame Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_frame_thk">
			<Description><![CDATA["Frame Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_frame_width">
			<Description><![CDATA["Frame Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_frame_width_left">
			<Description><![CDATA["Frame Width Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_frame_width_upper">
			<Description><![CDATA["Upper Frame Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_frame_width_lower">
			<Description><![CDATA["Bottom Frame Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_rebate_depth">
			<Description><![CDATA["Rebate Depth"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.025</Value>
		</Length>
		<Length Name="gs_rebate_width">
			<Description><![CDATA["Rebate Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.025</Value>
		</Length>
		<Boolean Name="gs_frame_wall">
			<Description><![CDATA["Frame=Wall Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_UTrans">
			<Description><![CDATA["Upper Transom"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_UTrans_w">
			<Description><![CDATA["Upper Division Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Length Name="gs_UTrans_h">
			<Description><![CDATA["Height of Upper Horiz. Divisions"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.135</Value>
		</Length>
		<Boolean Name="gs_UTrans_Div">
			<Description><![CDATA["Divided Upper Transom"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_LTrans">
			<Description><![CDATA["Lower Transom"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_LTrans_w">
			<Description><![CDATA["Lower Division Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Length Name="gs_LTrans_h">
			<Description><![CDATA["Height of Lower Horiz. Divisions"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1.365</Value>
		</Length>
		<Boolean Name="gs_LTrans_Div">
			<Description><![CDATA["Divided Lower Transom"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="TransomWidth">
			<Description><![CDATA["Transom Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Length Name="TransomWidth_01">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Length Name="TransomWidth_02">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Length Name="TransomWidth_03">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Length Name="TransomWidth_04">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Length Name="TransomWidth_05">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Length Name="TransomWidth_06">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Length Name="TransomWidth_07">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Length Name="TransomWidth_08">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Length Name="TransomWidth_09">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<String Name="gs_PanesConfigVertical">
			<Description><![CDATA["Panes Vertical"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Одинаковое Остекление"]]></Value>
		</String>
		<Integer Name="gs_iPanesConfigVertical">
			<Description><![CDATA["Panes Vertical"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="gs_Mullion_w">
			<Description><![CDATA["Mullion Width Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Length Name="gs_Mullion_w_left">
			<Description><![CDATA["Mullion Width Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Length Name="MullionWidth">
			<Description><![CDATA["Grid Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Length Name="MullionWidth_01">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Length Name="MullionWidth_02">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Length Name="MullionWidth_03">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Length Name="MullionWidth_04">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Length Name="MullionWidth_05">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Length Name="MullionWidth_06">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Length Name="MullionWidth_07">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Length Name="MullionWidth_08">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Length Name="MullionWidth_09">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>

		<!-- gs_window_sash: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_window_sash">
			<Description><![CDATA["Sash Frame"]]></Description>
		</Title>
		<Integer Name="gs_sash_set_to_edit">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>6</Value>
		</Integer>
		<Integer Name="gs_more_sash_set_to_edit">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="gs_sash_uniform">
			<Description><![CDATA["Uniform Sashes"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<String Name="FixGlassDir">
			<Description><![CDATA["Fixed Glass Direction"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["По Направлению Открывания"]]></Value>
		</String>
		<Integer Name="FixGlassDir_m">
			<Description><![CDATA["Fixed Glass Direction"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="gs_optype_01">
			<Description><![CDATA["Opening Type Main Sash Middle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Распашная"]]></Value>
		</String>
		<Integer Name="gs_optype_m_01">
			<Description><![CDATA["Opening Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>3</Value>
		</Integer>
		<String Name="gs_optype_05">
			<Description><![CDATA["Opening Type Main Sash Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="gs_optype_m_05">
			<Description><![CDATA["Opening Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>3</Value>
		</Integer>
		<String Name="gs_optype_09">
			<Description><![CDATA["Opening Type Main Sash Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="gs_optype_m_09">
			<Description><![CDATA["Opening Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>3</Value>
		</Integer>
		<String Name="gs_optype_03">
			<Description><![CDATA["Opening Type Lower Sash Middle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="gs_optype_m_03">
			<Description><![CDATA["Opening Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="gs_optype_07">
			<Description><![CDATA["Opening Type Lower Sash Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="gs_optype_m_07">
			<Description><![CDATA["Opening Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="gs_optype_11">
			<Description><![CDATA["Opening Type Lower Sash Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="gs_optype_m_11">
			<Description><![CDATA["Opening Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="gs_optype_02">
			<Description><![CDATA["Opening Type Transom Sash Middle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="gs_optype_m_02">
			<Description><![CDATA["Opening Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="gs_optype_06">
			<Description><![CDATA["Opening Type Transom Sash Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="gs_optype_m_06">
			<Description><![CDATA["Opening Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="gs_optype_10">
			<Description><![CDATA["Opening Type Transom Sash Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="gs_optype_m_10">
			<Description><![CDATA["Opening Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="gs_optype_04">
			<Description><![CDATA["Opening Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="gs_optype_m_04">
			<Description><![CDATA["Opening Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="gs_optype_08">
			<Description><![CDATA["Opening Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="gs_optype_m_08">
			<Description><![CDATA["Opening Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="MullionStyle_00">
			<Description><![CDATA["Sash Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Без Раскладки"]]></Value>
		</String>
		<Integer Name="iMullionStyle_00">
			<Description><![CDATA["Sash Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="MullionStyle_01">
			<Description><![CDATA["Sash Type Main Sash Middle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Без Раскладки"]]></Value>
		</String>
		<Integer Name="iMullionStyle_01">
			<Description><![CDATA["Sash Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="MullionStyle_05">
			<Description><![CDATA["Sash Type Main Sash Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="iMullionStyle_05">
			<Description><![CDATA["Sash Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="MullionStyle_09">
			<Description><![CDATA["Sash Type Main Sash Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="iMullionStyle_09">
			<Description><![CDATA["Sash Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="MullionStyle_03">
			<Description><![CDATA["Sash Type Lower Sash Middle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="iMullionStyle_03">
			<Description><![CDATA["Sash Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="MullionStyle_07">
			<Description><![CDATA["Sash Type Lower Sash Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="iMullionStyle_07">
			<Description><![CDATA["Sash Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="MullionStyle_11">
			<Description><![CDATA["Sash Type Lower Sash Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="iMullionStyle_11">
			<Description><![CDATA["Sash Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="MullionStyle_02">
			<Description><![CDATA["Sash Type Transom Sash Middle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="iMullionStyle_02">
			<Description><![CDATA["Sash Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="MullionStyle_06">
			<Description><![CDATA["Sash Type Transom Sash Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="iMullionStyle_06">
			<Description><![CDATA["Sash Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="MullionStyle_10">
			<Description><![CDATA["Sash Type Transom Sash Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="iMullionStyle_10">
			<Description><![CDATA["Sash Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="MullionStyle_04">
			<Description><![CDATA["Sash Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="iMullionStyle_04">
			<Description><![CDATA["Sash Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="MullionStyle_08">
			<Description><![CDATA["Sash Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="iMullionStyle_08">
			<Description><![CDATA["Sash Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="gs_horiz_div_height_01">
			<Description><![CDATA["Horizontal Division Height Main Sash Middle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.9</Value>
		</Length>
		<Length Name="gs_horiz_div_height_05">
			<Description><![CDATA["Horizontal Division Height Main Sash Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.9</Value>
		</Length>
		<Length Name="gs_horiz_div_height_09">
			<Description><![CDATA["Horizontal Division Height Main Sash Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.9</Value>
		</Length>
		<Length Name="gs_horiz_div_height_03">
			<Description><![CDATA["Horizontal Division Height Lower Sash Middle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.9</Value>
		</Length>
		<Length Name="gs_horiz_div_height_07">
			<Description><![CDATA["Horizontal Division Height Lower Sash Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.9</Value>
		</Length>
		<Length Name="gs_horiz_div_height_11">
			<Description><![CDATA["Horizontal Division Height Lower Sash Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.9</Value>
		</Length>
		<Length Name="gs_horiz_div_height_02">
			<Description><![CDATA["Horizontal Division Height Transom Sash Middle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.9</Value>
		</Length>
		<Length Name="gs_horiz_div_height_06">
			<Description><![CDATA["Horizontal Division Height Transom Sash Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.9</Value>
		</Length>
		<Length Name="gs_horiz_div_height_10">
			<Description><![CDATA["Horizontal Division Height Transom Sash Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.9</Value>
		</Length>
		<Length Name="gs_horiz_div_height_04">
			<Description><![CDATA["Horizontal Division Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.9</Value>
		</Length>
		<Length Name="gs_horiz_div_height_08">
			<Description><![CDATA["Horizontal Division Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.9</Value>
		</Length>
		<String Name="gs_cust_panel_00">
			<Description><![CDATA["Custom Panel Name"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_cust_panel_01">
			<Description><![CDATA["Custom Panel Name Main Sash Middle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_cust_panel2_01">
			<Description><![CDATA["Custom Panel Name 2 Main Sash Middle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_cust_panel_05">
			<Description><![CDATA["Custom Panel Name Main Sash Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_cust_panel2_05">
			<Description><![CDATA["Custom Panel Name 2 Main Sash Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_cust_panel_09">
			<Description><![CDATA["Custom Panel Name Main Sash Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_cust_panel2_09">
			<Description><![CDATA["Custom Panel Name 2 Main Sash Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_cust_panel_03">
			<Description><![CDATA["Custom Panel Name Lower Sash Middle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_cust_panel2_03">
			<Description><![CDATA["Custom Panel Name 2 Lower Sash Middle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_cust_panel_07">
			<Description><![CDATA["Custom Panel Name Lower Sash Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_cust_panel2_07">
			<Description><![CDATA["Custom Panel Name 2 Lower Sash Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_cust_panel_11">
			<Description><![CDATA["Custom Panel Name Lower Sash Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_cust_panel2_11">
			<Description><![CDATA["Custom Panel Name 2 Lower Sash Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_cust_panel_02">
			<Description><![CDATA["Custom Panel Name Transom Sash Middle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_cust_panel2_02">
			<Description><![CDATA["Custom Panel Name 2 Transom Sash Middle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_cust_panel_06">
			<Description><![CDATA["Custom Panel Name Transom Sash Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_cust_panel2_06">
			<Description><![CDATA["Custom Panel Name 2 Transom Sash Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_cust_panel_10">
			<Description><![CDATA["Custom Panel Name Transom Sash Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_cust_panel2_10">
			<Description><![CDATA["Custom Panel Name 2 Transom Sash Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_cust_panel_04">
			<Description><![CDATA["Custom Panel Name"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_cust_panel2_04">
			<Description><![CDATA["Custom Panel Name"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_cust_panel_08">
			<Description><![CDATA["Custom Panel Name"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_cust_panel2_08">
			<Description><![CDATA["Custom Panel Name"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Boolean Name="gs_bMirr_cust_panel_05">
			<Description><![CDATA["Mirrored Custom Panel"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_bMirr_cust_panel2_05">
			<Description><![CDATA["Mirrored Custom Panel"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="ghe">
			<Description><![CDATA["Hotspot Grill Editing"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="gs_sash_thk">
			<Description><![CDATA["Sash Frame Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_sash_width">
			<Description><![CDATA["Sash Frame Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<String Name="MullionPosition">
			<Description><![CDATA["Grid Position"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Посередине"]]></Value>
		</String>
		<Integer Name="iMullionPosition">
			<Description><![CDATA["Grid Position"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>3</Value>
		</Integer>
		<Length Name="gw">
			<Description><![CDATA["Grill Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.02</Value>
		</Length>
		<Length Name="gth">
			<Description><![CDATA["Grill Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.025</Value>
		</Length>
		<Integer Name="hgn_01">
			<Description><![CDATA["Panes Number Vertically Main Sash Middle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="vgn_01">
			<Description><![CDATA["Panes Number Horizontally Main Sash Middle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="hgn2_01">
			<Description><![CDATA["Panes Number Vertically 2 Main Sash Middle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="vgn2_01">
			<Description><![CDATA["Panes Number Horizontally 2 Main Sash Middle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="hgn_05">
			<Description><![CDATA["Panes Number Vertically Main Sash Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="vgn_05">
			<Description><![CDATA["Panes Number Horizontally Main Sash Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="hgn2_05">
			<Description><![CDATA["Panes Number Vertically 2 Main Sash Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="vgn2_05">
			<Description><![CDATA["Panes Number Horizontally 2 Main Sash Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="hgn_09">
			<Description><![CDATA["Panes Number Vertically Main Sash Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="vgn_09">
			<Description><![CDATA["Panes Number Horizontally Main Sash Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="hgn2_09">
			<Description><![CDATA["Panes Number Vertically 2 Main Sash Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="vgn2_09">
			<Description><![CDATA["Panes Number Horizontally 2 Main Sash Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="hgn_03">
			<Description><![CDATA["Panes Number Vertically Lower Sash Middle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="vgn_03">
			<Description><![CDATA["Panes Number Horizontally Lower Sash Middle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="hgn2_03">
			<Description><![CDATA["Panes Number Vertically 2 Lower Sash Middle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="vgn2_03">
			<Description><![CDATA["Panes Number Horizontally 2 Lower Sash Middle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="hgn_07">
			<Description><![CDATA["Panes Number Vertically Lower Sash Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="vgn_07">
			<Description><![CDATA["Panes Number Horizontally Lower Sash Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="hgn2_07">
			<Description><![CDATA["Panes Number Vertically 2 Lower Sash Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="vgn2_07">
			<Description><![CDATA["Panes Number Horizontally 2 Lower Sash Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="hgn_11">
			<Description><![CDATA["Panes Number Vertically Lower Sash Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="vgn_11">
			<Description><![CDATA["Panes Number Horizontally Lower Sash Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="hgn2_11">
			<Description><![CDATA["Panes Number Vertically 2 Lower Sash Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="vgn2_11">
			<Description><![CDATA["Panes Number Horizontally 2 Lower Sash Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="hgn_02">
			<Description><![CDATA["Panes Number Vertically Transom Sash Middle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="vgn_02">
			<Description><![CDATA["Panes Number Horizontally Transom Sash Middle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="hgn2_02">
			<Description><![CDATA["Panes Number Vertically 2 Transom Sash Middle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="vgn2_02">
			<Description><![CDATA["Panes Number Horizontally 2 Transom Sash Middle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="hgn_06">
			<Description><![CDATA["Panes Number Vertically Transom Sash Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="vgn_06">
			<Description><![CDATA["Panes Number Horizontally Transom Sash Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="hgn2_06">
			<Description><![CDATA["Panes Number Vertically 2 Transom Sash Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="vgn2_06">
			<Description><![CDATA["Panes Number Horizontally 2 Transom Sash Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="hgn_10">
			<Description><![CDATA["Panes Number Vertically Transom Sash Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="vgn_10">
			<Description><![CDATA["Panes Number Horizontally Transom Sash Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="hgn2_10">
			<Description><![CDATA["Panes Number Vertically 2 Transom Sash Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="vgn2_10">
			<Description><![CDATA["Panes Number Horizontally 2 Transom Sash Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="hgn_04">
			<Description><![CDATA["Panes Number Vertically"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="vgn_04">
			<Description><![CDATA["Panes Number Horizontally"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="hgn2_04">
			<Description><![CDATA["Panes Number Vertically 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="vgn2_04">
			<Description><![CDATA["Panes Number Horizontally 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="hgn_08">
			<Description><![CDATA["Panes Number Vertically"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="vgn_08">
			<Description><![CDATA["Panes Number Horizontally"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="hgn2_08">
			<Description><![CDATA["Panes Number Vertically 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="vgn2_08">
			<Description><![CDATA["Panes Number Horizontally 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Length Name="vergrid_01">
			<Description><![CDATA["V. Grid Positioning from Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="3">
				<AVal Column="1" Row="1">0.218333333333</AVal>
				<AVal Column="2" Row="1">0.025</AVal>
				<AVal Column="3" Row="1">1.075</AVal>
			</ArrayValues>
		</Length>
		<Length Name="horgrid_01">
			<Description><![CDATA["H. Grid Positioning from Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="3">
				<AVal Column="1" Row="1">0.535</AVal>
				<AVal Column="2" Row="1">0.025</AVal>
				<AVal Column="3" Row="1">0.441666666667</AVal>
			</ArrayValues>
		</Length>
		<Length Name="vergrid2_01">
			<Description><![CDATA["V. Grid Positioning from Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="10" SecondDimension="3">
				<AVal Column="1" Row="1">0.1975</AVal>
				<AVal Column="2" Row="1">0.05</AVal>
				<AVal Column="3" Row="1">1.1</AVal>
				<AVal Column="1" Row="2">0</AVal>
				<AVal Column="2" Row="2">0</AVal>
				<AVal Column="3" Row="2">0</AVal>
				<AVal Column="1" Row="3">0</AVal>
				<AVal Column="2" Row="3">0</AVal>
				<AVal Column="3" Row="3">0</AVal>
				<AVal Column="1" Row="4">0</AVal>
				<AVal Column="2" Row="4">0</AVal>
				<AVal Column="3" Row="4">0</AVal>
				<AVal Column="1" Row="5">0</AVal>
				<AVal Column="2" Row="5">0</AVal>
				<AVal Column="3" Row="5">0</AVal>
				<AVal Column="1" Row="6">0</AVal>
				<AVal Column="2" Row="6">0</AVal>
				<AVal Column="3" Row="6">0</AVal>
				<AVal Column="1" Row="7">0</AVal>
				<AVal Column="2" Row="7">0</AVal>
				<AVal Column="3" Row="7">0</AVal>
				<AVal Column="1" Row="8">0</AVal>
				<AVal Column="2" Row="8">0</AVal>
				<AVal Column="3" Row="8">0</AVal>
				<AVal Column="1" Row="9">0</AVal>
				<AVal Column="2" Row="9">0</AVal>
				<AVal Column="3" Row="9">0</AVal>
				<AVal Column="1" Row="10">0</AVal>
				<AVal Column="2" Row="10">0</AVal>
				<AVal Column="3" Row="10">0</AVal>
			</ArrayValues>
		</Length>
		<Length Name="horgrid2_01">
			<Description><![CDATA["H. Grid Positioning from Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="10" SecondDimension="3">
				<AVal Column="1" Row="1">0.2575</AVal>
				<AVal Column="2" Row="1">0.05</AVal>
				<AVal Column="3" Row="1">0.45</AVal>
				<AVal Column="1" Row="2">0.515</AVal>
				<AVal Column="2" Row="2">0.05</AVal>
				<AVal Column="3" Row="2">0.45</AVal>
				<AVal Column="1" Row="3">0.7725</AVal>
				<AVal Column="2" Row="3">0.05</AVal>
				<AVal Column="3" Row="3">0.45</AVal>
				<AVal Column="1" Row="4">0</AVal>
				<AVal Column="2" Row="4">0</AVal>
				<AVal Column="3" Row="4">0</AVal>
				<AVal Column="1" Row="5">0</AVal>
				<AVal Column="2" Row="5">0</AVal>
				<AVal Column="3" Row="5">0</AVal>
				<AVal Column="1" Row="6">0</AVal>
				<AVal Column="2" Row="6">0</AVal>
				<AVal Column="3" Row="6">0</AVal>
				<AVal Column="1" Row="7">0</AVal>
				<AVal Column="2" Row="7">0</AVal>
				<AVal Column="3" Row="7">0</AVal>
				<AVal Column="1" Row="8">0</AVal>
				<AVal Column="2" Row="8">0</AVal>
				<AVal Column="3" Row="8">0</AVal>
				<AVal Column="1" Row="9">0</AVal>
				<AVal Column="2" Row="9">0</AVal>
				<AVal Column="3" Row="9">0</AVal>
				<AVal Column="1" Row="10">0</AVal>
				<AVal Column="2" Row="10">0</AVal>
				<AVal Column="3" Row="10">0</AVal>
			</ArrayValues>
		</Length>
		<Length Name="vergrid_02">
			<Description><![CDATA["V. Grid Positioning from Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="3">
				<AVal Column="1" Row="1">0.218333333333</AVal>
				<AVal Column="2" Row="1">0.025</AVal>
				<AVal Column="3" Row="1">0.275</AVal>
			</ArrayValues>
		</Length>
		<Length Name="horgrid_02">
			<Description><![CDATA["H. Grid Positioning from Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="3">
				<AVal Column="1" Row="1">0.135</AVal>
				<AVal Column="2" Row="1">0.025</AVal>
				<AVal Column="3" Row="1">0.441666666667</AVal>
			</ArrayValues>
		</Length>
		<Length Name="vergrid2_02">
			<Description><![CDATA["V. Grid Positioning from Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="10" SecondDimension="3">
				<AVal Column="1" Row="1">0.1975</AVal>
				<AVal Column="2" Row="1">0.05</AVal>
				<AVal Column="3" Row="1">1.1</AVal>
				<AVal Column="1" Row="2">0</AVal>
				<AVal Column="2" Row="2">0</AVal>
				<AVal Column="3" Row="2">0</AVal>
				<AVal Column="1" Row="3">0</AVal>
				<AVal Column="2" Row="3">0</AVal>
				<AVal Column="3" Row="3">0</AVal>
				<AVal Column="1" Row="4">0</AVal>
				<AVal Column="2" Row="4">0</AVal>
				<AVal Column="3" Row="4">0</AVal>
				<AVal Column="1" Row="5">0</AVal>
				<AVal Column="2" Row="5">0</AVal>
				<AVal Column="3" Row="5">0</AVal>
				<AVal Column="1" Row="6">0</AVal>
				<AVal Column="2" Row="6">0</AVal>
				<AVal Column="3" Row="6">0</AVal>
				<AVal Column="1" Row="7">0</AVal>
				<AVal Column="2" Row="7">0</AVal>
				<AVal Column="3" Row="7">0</AVal>
				<AVal Column="1" Row="8">0</AVal>
				<AVal Column="2" Row="8">0</AVal>
				<AVal Column="3" Row="8">0</AVal>
				<AVal Column="1" Row="9">0</AVal>
				<AVal Column="2" Row="9">0</AVal>
				<AVal Column="3" Row="9">0</AVal>
				<AVal Column="1" Row="10">0</AVal>
				<AVal Column="2" Row="10">0</AVal>
				<AVal Column="3" Row="10">0</AVal>
			</ArrayValues>
		</Length>
		<Length Name="horgrid2_02">
			<Description><![CDATA["H. Grid Positioning from Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="10" SecondDimension="3">
				<AVal Column="1" Row="1">0.2575</AVal>
				<AVal Column="2" Row="1">0.05</AVal>
				<AVal Column="3" Row="1">0.45</AVal>
				<AVal Column="1" Row="2">0.515</AVal>
				<AVal Column="2" Row="2">0.05</AVal>
				<AVal Column="3" Row="2">0.45</AVal>
				<AVal Column="1" Row="3">0.7725</AVal>
				<AVal Column="2" Row="3">0.05</AVal>
				<AVal Column="3" Row="3">0.45</AVal>
				<AVal Column="1" Row="4">0</AVal>
				<AVal Column="2" Row="4">0</AVal>
				<AVal Column="3" Row="4">0</AVal>
				<AVal Column="1" Row="5">0</AVal>
				<AVal Column="2" Row="5">0</AVal>
				<AVal Column="3" Row="5">0</AVal>
				<AVal Column="1" Row="6">0</AVal>
				<AVal Column="2" Row="6">0</AVal>
				<AVal Column="3" Row="6">0</AVal>
				<AVal Column="1" Row="7">0</AVal>
				<AVal Column="2" Row="7">0</AVal>
				<AVal Column="3" Row="7">0</AVal>
				<AVal Column="1" Row="8">0</AVal>
				<AVal Column="2" Row="8">0</AVal>
				<AVal Column="3" Row="8">0</AVal>
				<AVal Column="1" Row="9">0</AVal>
				<AVal Column="2" Row="9">0</AVal>
				<AVal Column="3" Row="9">0</AVal>
				<AVal Column="1" Row="10">0</AVal>
				<AVal Column="2" Row="10">0</AVal>
				<AVal Column="3" Row="10">0</AVal>
			</ArrayValues>
		</Length>
		<Length Name="vergrid_03">
			<Description><![CDATA["V. Grid Positioning from Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="3">
				<AVal Column="1" Row="1">0.71</AVal>
				<AVal Column="2" Row="1">0.025</AVal>
				<AVal Column="3" Row="1">0.325</AVal>
			</ArrayValues>
		</Length>
		<Length Name="horgrid_03">
			<Description><![CDATA["H. Grid Positioning from Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="3">
				<AVal Column="1" Row="1">0.16</AVal>
				<AVal Column="2" Row="1">0.025</AVal>
				<AVal Column="3" Row="1">1.425</AVal>
			</ArrayValues>
		</Length>
		<Length Name="vergrid2_03">
			<Description><![CDATA["V. Grid Positioning from Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="10" SecondDimension="3">
				<AVal Column="1" Row="1">0.1975</AVal>
				<AVal Column="2" Row="1">0.05</AVal>
				<AVal Column="3" Row="1">1.1</AVal>
				<AVal Column="1" Row="2">0</AVal>
				<AVal Column="2" Row="2">0</AVal>
				<AVal Column="3" Row="2">0</AVal>
				<AVal Column="1" Row="3">0</AVal>
				<AVal Column="2" Row="3">0</AVal>
				<AVal Column="3" Row="3">0</AVal>
				<AVal Column="1" Row="4">0</AVal>
				<AVal Column="2" Row="4">0</AVal>
				<AVal Column="3" Row="4">0</AVal>
				<AVal Column="1" Row="5">0</AVal>
				<AVal Column="2" Row="5">0</AVal>
				<AVal Column="3" Row="5">0</AVal>
				<AVal Column="1" Row="6">0</AVal>
				<AVal Column="2" Row="6">0</AVal>
				<AVal Column="3" Row="6">0</AVal>
				<AVal Column="1" Row="7">0</AVal>
				<AVal Column="2" Row="7">0</AVal>
				<AVal Column="3" Row="7">0</AVal>
				<AVal Column="1" Row="8">0</AVal>
				<AVal Column="2" Row="8">0</AVal>
				<AVal Column="3" Row="8">0</AVal>
				<AVal Column="1" Row="9">0</AVal>
				<AVal Column="2" Row="9">0</AVal>
				<AVal Column="3" Row="9">0</AVal>
				<AVal Column="1" Row="10">0</AVal>
				<AVal Column="2" Row="10">0</AVal>
				<AVal Column="3" Row="10">0</AVal>
			</ArrayValues>
		</Length>
		<Length Name="horgrid2_03">
			<Description><![CDATA["H. Grid Positioning from Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="10" SecondDimension="3">
				<AVal Column="1" Row="1">0.2575</AVal>
				<AVal Column="2" Row="1">0.05</AVal>
				<AVal Column="3" Row="1">0.45</AVal>
				<AVal Column="1" Row="2">0.515</AVal>
				<AVal Column="2" Row="2">0.05</AVal>
				<AVal Column="3" Row="2">0.45</AVal>
				<AVal Column="1" Row="3">0.7725</AVal>
				<AVal Column="2" Row="3">0.05</AVal>
				<AVal Column="3" Row="3">0.45</AVal>
				<AVal Column="1" Row="4">0</AVal>
				<AVal Column="2" Row="4">0</AVal>
				<AVal Column="3" Row="4">0</AVal>
				<AVal Column="1" Row="5">0</AVal>
				<AVal Column="2" Row="5">0</AVal>
				<AVal Column="3" Row="5">0</AVal>
				<AVal Column="1" Row="6">0</AVal>
				<AVal Column="2" Row="6">0</AVal>
				<AVal Column="3" Row="6">0</AVal>
				<AVal Column="1" Row="7">0</AVal>
				<AVal Column="2" Row="7">0</AVal>
				<AVal Column="3" Row="7">0</AVal>
				<AVal Column="1" Row="8">0</AVal>
				<AVal Column="2" Row="8">0</AVal>
				<AVal Column="3" Row="8">0</AVal>
				<AVal Column="1" Row="9">0</AVal>
				<AVal Column="2" Row="9">0</AVal>
				<AVal Column="3" Row="9">0</AVal>
				<AVal Column="1" Row="10">0</AVal>
				<AVal Column="2" Row="10">0</AVal>
				<AVal Column="3" Row="10">0</AVal>
			</ArrayValues>
		</Length>
		<Length Name="vergrid_05">
			<Description><![CDATA["V. Grid Positioning from Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="3">
				<AVal Column="1" Row="1">0.168333333333</AVal>
				<AVal Column="2" Row="1">0.05</AVal>
				<AVal Column="3" Row="1">1.05</AVal>
			</ArrayValues>
		</Length>
		<Length Name="horgrid_05">
			<Description><![CDATA["H. Grid Positioning from Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="3">
				<AVal Column="1" Row="1">0.51</AVal>
				<AVal Column="2" Row="1">0.05</AVal>
				<AVal Column="3" Row="1">0.366666666667</AVal>
			</ArrayValues>
		</Length>
		<Length Name="vergrid2_05">
			<Description><![CDATA["V. Grid Positioning from Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="10" SecondDimension="3">
				<AVal Column="1" Row="1">0.1975</AVal>
				<AVal Column="2" Row="1">0.05</AVal>
				<AVal Column="3" Row="1">1.1</AVal>
				<AVal Column="1" Row="2">0</AVal>
				<AVal Column="2" Row="2">0</AVal>
				<AVal Column="3" Row="2">0</AVal>
				<AVal Column="1" Row="3">0</AVal>
				<AVal Column="2" Row="3">0</AVal>
				<AVal Column="3" Row="3">0</AVal>
				<AVal Column="1" Row="4">0</AVal>
				<AVal Column="2" Row="4">0</AVal>
				<AVal Column="3" Row="4">0</AVal>
				<AVal Column="1" Row="5">0</AVal>
				<AVal Column="2" Row="5">0</AVal>
				<AVal Column="3" Row="5">0</AVal>
				<AVal Column="1" Row="6">0</AVal>
				<AVal Column="2" Row="6">0</AVal>
				<AVal Column="3" Row="6">0</AVal>
				<AVal Column="1" Row="7">0</AVal>
				<AVal Column="2" Row="7">0</AVal>
				<AVal Column="3" Row="7">0</AVal>
				<AVal Column="1" Row="8">0</AVal>
				<AVal Column="2" Row="8">0</AVal>
				<AVal Column="3" Row="8">0</AVal>
				<AVal Column="1" Row="9">0</AVal>
				<AVal Column="2" Row="9">0</AVal>
				<AVal Column="3" Row="9">0</AVal>
				<AVal Column="1" Row="10">0</AVal>
				<AVal Column="2" Row="10">0</AVal>
				<AVal Column="3" Row="10">0</AVal>
			</ArrayValues>
		</Length>
		<Length Name="horgrid2_05">
			<Description><![CDATA["H. Grid Positioning from Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="10" SecondDimension="3">
				<AVal Column="1" Row="1">0.2575</AVal>
				<AVal Column="2" Row="1">0.05</AVal>
				<AVal Column="3" Row="1">0.45</AVal>
				<AVal Column="1" Row="2">0.515</AVal>
				<AVal Column="2" Row="2">0.05</AVal>
				<AVal Column="3" Row="2">0.45</AVal>
				<AVal Column="1" Row="3">0.7725</AVal>
				<AVal Column="2" Row="3">0.05</AVal>
				<AVal Column="3" Row="3">0.45</AVal>
				<AVal Column="1" Row="4">0</AVal>
				<AVal Column="2" Row="4">0</AVal>
				<AVal Column="3" Row="4">0</AVal>
				<AVal Column="1" Row="5">0</AVal>
				<AVal Column="2" Row="5">0</AVal>
				<AVal Column="3" Row="5">0</AVal>
				<AVal Column="1" Row="6">0</AVal>
				<AVal Column="2" Row="6">0</AVal>
				<AVal Column="3" Row="6">0</AVal>
				<AVal Column="1" Row="7">0</AVal>
				<AVal Column="2" Row="7">0</AVal>
				<AVal Column="3" Row="7">0</AVal>
				<AVal Column="1" Row="8">0</AVal>
				<AVal Column="2" Row="8">0</AVal>
				<AVal Column="3" Row="8">0</AVal>
				<AVal Column="1" Row="9">0</AVal>
				<AVal Column="2" Row="9">0</AVal>
				<AVal Column="3" Row="9">0</AVal>
				<AVal Column="1" Row="10">0</AVal>
				<AVal Column="2" Row="10">0</AVal>
				<AVal Column="3" Row="10">0</AVal>
			</ArrayValues>
		</Length>
		<Length Name="vergrid_06">
			<Description><![CDATA["V. Grid Positioning from Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="3">
				<AVal Column="1" Row="1">0.168333333333</AVal>
				<AVal Column="2" Row="1">0.05</AVal>
				<AVal Column="3" Row="1">0.25</AVal>
			</ArrayValues>
		</Length>
		<Length Name="horgrid_06">
			<Description><![CDATA["H. Grid Positioning from Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="3">
				<AVal Column="1" Row="1">0.11</AVal>
				<AVal Column="2" Row="1">0.05</AVal>
				<AVal Column="3" Row="1">0.366666666667</AVal>
			</ArrayValues>
		</Length>
		<Length Name="vergrid2_06">
			<Description><![CDATA["V. Grid Positioning from Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="10" SecondDimension="3">
				<AVal Column="1" Row="1">0.1975</AVal>
				<AVal Column="2" Row="1">0.05</AVal>
				<AVal Column="3" Row="1">1.1</AVal>
				<AVal Column="1" Row="2">0</AVal>
				<AVal Column="2" Row="2">0</AVal>
				<AVal Column="3" Row="2">0</AVal>
				<AVal Column="1" Row="3">0</AVal>
				<AVal Column="2" Row="3">0</AVal>
				<AVal Column="3" Row="3">0</AVal>
				<AVal Column="1" Row="4">0</AVal>
				<AVal Column="2" Row="4">0</AVal>
				<AVal Column="3" Row="4">0</AVal>
				<AVal Column="1" Row="5">0</AVal>
				<AVal Column="2" Row="5">0</AVal>
				<AVal Column="3" Row="5">0</AVal>
				<AVal Column="1" Row="6">0</AVal>
				<AVal Column="2" Row="6">0</AVal>
				<AVal Column="3" Row="6">0</AVal>
				<AVal Column="1" Row="7">0</AVal>
				<AVal Column="2" Row="7">0</AVal>
				<AVal Column="3" Row="7">0</AVal>
				<AVal Column="1" Row="8">0</AVal>
				<AVal Column="2" Row="8">0</AVal>
				<AVal Column="3" Row="8">0</AVal>
				<AVal Column="1" Row="9">0</AVal>
				<AVal Column="2" Row="9">0</AVal>
				<AVal Column="3" Row="9">0</AVal>
				<AVal Column="1" Row="10">0</AVal>
				<AVal Column="2" Row="10">0</AVal>
				<AVal Column="3" Row="10">0</AVal>
			</ArrayValues>
		</Length>
		<Length Name="horgrid2_06">
			<Description><![CDATA["H. Grid Positioning from Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="10" SecondDimension="3">
				<AVal Column="1" Row="1">0.2575</AVal>
				<AVal Column="2" Row="1">0.05</AVal>
				<AVal Column="3" Row="1">0.45</AVal>
				<AVal Column="1" Row="2">0.515</AVal>
				<AVal Column="2" Row="2">0.05</AVal>
				<AVal Column="3" Row="2">0.45</AVal>
				<AVal Column="1" Row="3">0.7725</AVal>
				<AVal Column="2" Row="3">0.05</AVal>
				<AVal Column="3" Row="3">0.45</AVal>
				<AVal Column="1" Row="4">0</AVal>
				<AVal Column="2" Row="4">0</AVal>
				<AVal Column="3" Row="4">0</AVal>
				<AVal Column="1" Row="5">0</AVal>
				<AVal Column="2" Row="5">0</AVal>
				<AVal Column="3" Row="5">0</AVal>
				<AVal Column="1" Row="6">0</AVal>
				<AVal Column="2" Row="6">0</AVal>
				<AVal Column="3" Row="6">0</AVal>
				<AVal Column="1" Row="7">0</AVal>
				<AVal Column="2" Row="7">0</AVal>
				<AVal Column="3" Row="7">0</AVal>
				<AVal Column="1" Row="8">0</AVal>
				<AVal Column="2" Row="8">0</AVal>
				<AVal Column="3" Row="8">0</AVal>
				<AVal Column="1" Row="9">0</AVal>
				<AVal Column="2" Row="9">0</AVal>
				<AVal Column="3" Row="9">0</AVal>
				<AVal Column="1" Row="10">0</AVal>
				<AVal Column="2" Row="10">0</AVal>
				<AVal Column="3" Row="10">0</AVal>
			</ArrayValues>
		</Length>
		<Length Name="vergrid_07">
			<Description><![CDATA["V. Grid Positioning from Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="10" SecondDimension="3">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0</AVal>
				<AVal Column="3" Row="1">0</AVal>
				<AVal Column="1" Row="2">0</AVal>
				<AVal Column="2" Row="2">0</AVal>
				<AVal Column="3" Row="2">0</AVal>
				<AVal Column="1" Row="3">0</AVal>
				<AVal Column="2" Row="3">0</AVal>
				<AVal Column="3" Row="3">0</AVal>
				<AVal Column="1" Row="4">0</AVal>
				<AVal Column="2" Row="4">0</AVal>
				<AVal Column="3" Row="4">0</AVal>
				<AVal Column="1" Row="5">0</AVal>
				<AVal Column="2" Row="5">0</AVal>
				<AVal Column="3" Row="5">0</AVal>
				<AVal Column="1" Row="6">0</AVal>
				<AVal Column="2" Row="6">0</AVal>
				<AVal Column="3" Row="6">0</AVal>
				<AVal Column="1" Row="7">0</AVal>
				<AVal Column="2" Row="7">0</AVal>
				<AVal Column="3" Row="7">0</AVal>
				<AVal Column="1" Row="8">0</AVal>
				<AVal Column="2" Row="8">0</AVal>
				<AVal Column="3" Row="8">0</AVal>
				<AVal Column="1" Row="9">0</AVal>
				<AVal Column="2" Row="9">0</AVal>
				<AVal Column="3" Row="9">0</AVal>
				<AVal Column="1" Row="10">0</AVal>
				<AVal Column="2" Row="10">0</AVal>
				<AVal Column="3" Row="10">0</AVal>
			</ArrayValues>
		</Length>
		<Length Name="horgrid_07">
			<Description><![CDATA["H. Grid Positioning from Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="10" SecondDimension="3">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0</AVal>
				<AVal Column="3" Row="1">0</AVal>
				<AVal Column="1" Row="2">0</AVal>
				<AVal Column="2" Row="2">0</AVal>
				<AVal Column="3" Row="2">0</AVal>
				<AVal Column="1" Row="3">0</AVal>
				<AVal Column="2" Row="3">0</AVal>
				<AVal Column="3" Row="3">0</AVal>
				<AVal Column="1" Row="4">0</AVal>
				<AVal Column="2" Row="4">0</AVal>
				<AVal Column="3" Row="4">0</AVal>
				<AVal Column="1" Row="5">0</AVal>
				<AVal Column="2" Row="5">0</AVal>
				<AVal Column="3" Row="5">0</AVal>
				<AVal Column="1" Row="6">0</AVal>
				<AVal Column="2" Row="6">0</AVal>
				<AVal Column="3" Row="6">0</AVal>
				<AVal Column="1" Row="7">0</AVal>
				<AVal Column="2" Row="7">0</AVal>
				<AVal Column="3" Row="7">0</AVal>
				<AVal Column="1" Row="8">0</AVal>
				<AVal Column="2" Row="8">0</AVal>
				<AVal Column="3" Row="8">0</AVal>
				<AVal Column="1" Row="9">0</AVal>
				<AVal Column="2" Row="9">0</AVal>
				<AVal Column="3" Row="9">0</AVal>
				<AVal Column="1" Row="10">0</AVal>
				<AVal Column="2" Row="10">0</AVal>
				<AVal Column="3" Row="10">0</AVal>
			</ArrayValues>
		</Length>
		<Length Name="vergrid2_07">
			<Description><![CDATA["V. Grid Positioning from Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="10" SecondDimension="3">
				<AVal Column="1" Row="1">0.1975</AVal>
				<AVal Column="2" Row="1">0.05</AVal>
				<AVal Column="3" Row="1">1.1</AVal>
				<AVal Column="1" Row="2">0</AVal>
				<AVal Column="2" Row="2">0</AVal>
				<AVal Column="3" Row="2">0</AVal>
				<AVal Column="1" Row="3">0</AVal>
				<AVal Column="2" Row="3">0</AVal>
				<AVal Column="3" Row="3">0</AVal>
				<AVal Column="1" Row="4">0</AVal>
				<AVal Column="2" Row="4">0</AVal>
				<AVal Column="3" Row="4">0</AVal>
				<AVal Column="1" Row="5">0</AVal>
				<AVal Column="2" Row="5">0</AVal>
				<AVal Column="3" Row="5">0</AVal>
				<AVal Column="1" Row="6">0</AVal>
				<AVal Column="2" Row="6">0</AVal>
				<AVal Column="3" Row="6">0</AVal>
				<AVal Column="1" Row="7">0</AVal>
				<AVal Column="2" Row="7">0</AVal>
				<AVal Column="3" Row="7">0</AVal>
				<AVal Column="1" Row="8">0</AVal>
				<AVal Column="2" Row="8">0</AVal>
				<AVal Column="3" Row="8">0</AVal>
				<AVal Column="1" Row="9">0</AVal>
				<AVal Column="2" Row="9">0</AVal>
				<AVal Column="3" Row="9">0</AVal>
				<AVal Column="1" Row="10">0</AVal>
				<AVal Column="2" Row="10">0</AVal>
				<AVal Column="3" Row="10">0</AVal>
			</ArrayValues>
		</Length>
		<Length Name="horgrid2_07">
			<Description><![CDATA["H. Grid Positioning from Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="10" SecondDimension="3">
				<AVal Column="1" Row="1">0.2575</AVal>
				<AVal Column="2" Row="1">0.05</AVal>
				<AVal Column="3" Row="1">0.45</AVal>
				<AVal Column="1" Row="2">0.515</AVal>
				<AVal Column="2" Row="2">0.05</AVal>
				<AVal Column="3" Row="2">0.45</AVal>
				<AVal Column="1" Row="3">0.7725</AVal>
				<AVal Column="2" Row="3">0.05</AVal>
				<AVal Column="3" Row="3">0.45</AVal>
				<AVal Column="1" Row="4">0</AVal>
				<AVal Column="2" Row="4">0</AVal>
				<AVal Column="3" Row="4">0</AVal>
				<AVal Column="1" Row="5">0</AVal>
				<AVal Column="2" Row="5">0</AVal>
				<AVal Column="3" Row="5">0</AVal>
				<AVal Column="1" Row="6">0</AVal>
				<AVal Column="2" Row="6">0</AVal>
				<AVal Column="3" Row="6">0</AVal>
				<AVal Column="1" Row="7">0</AVal>
				<AVal Column="2" Row="7">0</AVal>
				<AVal Column="3" Row="7">0</AVal>
				<AVal Column="1" Row="8">0</AVal>
				<AVal Column="2" Row="8">0</AVal>
				<AVal Column="3" Row="8">0</AVal>
				<AVal Column="1" Row="9">0</AVal>
				<AVal Column="2" Row="9">0</AVal>
				<AVal Column="3" Row="9">0</AVal>
				<AVal Column="1" Row="10">0</AVal>
				<AVal Column="2" Row="10">0</AVal>
				<AVal Column="3" Row="10">0</AVal>
			</ArrayValues>
		</Length>
		<Length Name="vergrid_09">
			<Description><![CDATA["V. Grid Positioning from Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="3">
				<AVal Column="1" Row="1">0.193333333333</AVal>
				<AVal Column="2" Row="1">0.05</AVal>
				<AVal Column="3" Row="1">1.05</AVal>
			</ArrayValues>
		</Length>
		<Length Name="horgrid_09">
			<Description><![CDATA["H. Grid Positioning from Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="3">
				<AVal Column="1" Row="1">0.51</AVal>
				<AVal Column="2" Row="1">0.05</AVal>
				<AVal Column="3" Row="1">0.416666666667</AVal>
			</ArrayValues>
		</Length>
		<Length Name="vergrid2_09">
			<Description><![CDATA["V. Grid Positioning from Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="10" SecondDimension="3">
				<AVal Column="1" Row="1">0.1975</AVal>
				<AVal Column="2" Row="1">0.05</AVal>
				<AVal Column="3" Row="1">1.1</AVal>
				<AVal Column="1" Row="2">0</AVal>
				<AVal Column="2" Row="2">0</AVal>
				<AVal Column="3" Row="2">0</AVal>
				<AVal Column="1" Row="3">0</AVal>
				<AVal Column="2" Row="3">0</AVal>
				<AVal Column="3" Row="3">0</AVal>
				<AVal Column="1" Row="4">0</AVal>
				<AVal Column="2" Row="4">0</AVal>
				<AVal Column="3" Row="4">0</AVal>
				<AVal Column="1" Row="5">0</AVal>
				<AVal Column="2" Row="5">0</AVal>
				<AVal Column="3" Row="5">0</AVal>
				<AVal Column="1" Row="6">0</AVal>
				<AVal Column="2" Row="6">0</AVal>
				<AVal Column="3" Row="6">0</AVal>
				<AVal Column="1" Row="7">0</AVal>
				<AVal Column="2" Row="7">0</AVal>
				<AVal Column="3" Row="7">0</AVal>
				<AVal Column="1" Row="8">0</AVal>
				<AVal Column="2" Row="8">0</AVal>
				<AVal Column="3" Row="8">0</AVal>
				<AVal Column="1" Row="9">0</AVal>
				<AVal Column="2" Row="9">0</AVal>
				<AVal Column="3" Row="9">0</AVal>
				<AVal Column="1" Row="10">0</AVal>
				<AVal Column="2" Row="10">0</AVal>
				<AVal Column="3" Row="10">0</AVal>
			</ArrayValues>
		</Length>
		<Length Name="horgrid2_09">
			<Description><![CDATA["H. Grid Positioning from Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="10" SecondDimension="3">
				<AVal Column="1" Row="1">0.2575</AVal>
				<AVal Column="2" Row="1">0.05</AVal>
				<AVal Column="3" Row="1">0.45</AVal>
				<AVal Column="1" Row="2">0.515</AVal>
				<AVal Column="2" Row="2">0.05</AVal>
				<AVal Column="3" Row="2">0.45</AVal>
				<AVal Column="1" Row="3">0.7725</AVal>
				<AVal Column="2" Row="3">0.05</AVal>
				<AVal Column="3" Row="3">0.45</AVal>
				<AVal Column="1" Row="4">0</AVal>
				<AVal Column="2" Row="4">0</AVal>
				<AVal Column="3" Row="4">0</AVal>
				<AVal Column="1" Row="5">0</AVal>
				<AVal Column="2" Row="5">0</AVal>
				<AVal Column="3" Row="5">0</AVal>
				<AVal Column="1" Row="6">0</AVal>
				<AVal Column="2" Row="6">0</AVal>
				<AVal Column="3" Row="6">0</AVal>
				<AVal Column="1" Row="7">0</AVal>
				<AVal Column="2" Row="7">0</AVal>
				<AVal Column="3" Row="7">0</AVal>
				<AVal Column="1" Row="8">0</AVal>
				<AVal Column="2" Row="8">0</AVal>
				<AVal Column="3" Row="8">0</AVal>
				<AVal Column="1" Row="9">0</AVal>
				<AVal Column="2" Row="9">0</AVal>
				<AVal Column="3" Row="9">0</AVal>
				<AVal Column="1" Row="10">0</AVal>
				<AVal Column="2" Row="10">0</AVal>
				<AVal Column="3" Row="10">0</AVal>
			</ArrayValues>
		</Length>
		<Length Name="vergrid_10">
			<Description><![CDATA["V. Grid Positioning from Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="3">
				<AVal Column="1" Row="1">0.193333333333</AVal>
				<AVal Column="2" Row="1">0.05</AVal>
				<AVal Column="3" Row="1">0.25</AVal>
			</ArrayValues>
		</Length>
		<Length Name="horgrid_10">
			<Description><![CDATA["H. Grid Positioning from Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="3">
				<AVal Column="1" Row="1">0.11</AVal>
				<AVal Column="2" Row="1">0.05</AVal>
				<AVal Column="3" Row="1">0.416666666667</AVal>
			</ArrayValues>
		</Length>
		<Length Name="vergrid2_10">
			<Description><![CDATA["V. Grid Positioning from Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="10" SecondDimension="3">
				<AVal Column="1" Row="1">0.1975</AVal>
				<AVal Column="2" Row="1">0.05</AVal>
				<AVal Column="3" Row="1">1.1</AVal>
				<AVal Column="1" Row="2">0</AVal>
				<AVal Column="2" Row="2">0</AVal>
				<AVal Column="3" Row="2">0</AVal>
				<AVal Column="1" Row="3">0</AVal>
				<AVal Column="2" Row="3">0</AVal>
				<AVal Column="3" Row="3">0</AVal>
				<AVal Column="1" Row="4">0</AVal>
				<AVal Column="2" Row="4">0</AVal>
				<AVal Column="3" Row="4">0</AVal>
				<AVal Column="1" Row="5">0</AVal>
				<AVal Column="2" Row="5">0</AVal>
				<AVal Column="3" Row="5">0</AVal>
				<AVal Column="1" Row="6">0</AVal>
				<AVal Column="2" Row="6">0</AVal>
				<AVal Column="3" Row="6">0</AVal>
				<AVal Column="1" Row="7">0</AVal>
				<AVal Column="2" Row="7">0</AVal>
				<AVal Column="3" Row="7">0</AVal>
				<AVal Column="1" Row="8">0</AVal>
				<AVal Column="2" Row="8">0</AVal>
				<AVal Column="3" Row="8">0</AVal>
				<AVal Column="1" Row="9">0</AVal>
				<AVal Column="2" Row="9">0</AVal>
				<AVal Column="3" Row="9">0</AVal>
				<AVal Column="1" Row="10">0</AVal>
				<AVal Column="2" Row="10">0</AVal>
				<AVal Column="3" Row="10">0</AVal>
			</ArrayValues>
		</Length>
		<Length Name="horgrid2_10">
			<Description><![CDATA["H. Grid Positioning from Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="10" SecondDimension="3">
				<AVal Column="1" Row="1">0.2575</AVal>
				<AVal Column="2" Row="1">0.05</AVal>
				<AVal Column="3" Row="1">0.45</AVal>
				<AVal Column="1" Row="2">0.515</AVal>
				<AVal Column="2" Row="2">0.05</AVal>
				<AVal Column="3" Row="2">0.45</AVal>
				<AVal Column="1" Row="3">0.7725</AVal>
				<AVal Column="2" Row="3">0.05</AVal>
				<AVal Column="3" Row="3">0.45</AVal>
				<AVal Column="1" Row="4">0</AVal>
				<AVal Column="2" Row="4">0</AVal>
				<AVal Column="3" Row="4">0</AVal>
				<AVal Column="1" Row="5">0</AVal>
				<AVal Column="2" Row="5">0</AVal>
				<AVal Column="3" Row="5">0</AVal>
				<AVal Column="1" Row="6">0</AVal>
				<AVal Column="2" Row="6">0</AVal>
				<AVal Column="3" Row="6">0</AVal>
				<AVal Column="1" Row="7">0</AVal>
				<AVal Column="2" Row="7">0</AVal>
				<AVal Column="3" Row="7">0</AVal>
				<AVal Column="1" Row="8">0</AVal>
				<AVal Column="2" Row="8">0</AVal>
				<AVal Column="3" Row="8">0</AVal>
				<AVal Column="1" Row="9">0</AVal>
				<AVal Column="2" Row="9">0</AVal>
				<AVal Column="3" Row="9">0</AVal>
				<AVal Column="1" Row="10">0</AVal>
				<AVal Column="2" Row="10">0</AVal>
				<AVal Column="3" Row="10">0</AVal>
			</ArrayValues>
		</Length>
		<Length Name="vergrid_11">
			<Description><![CDATA["V. Grid Positioning from Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="10" SecondDimension="3">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0</AVal>
				<AVal Column="3" Row="1">0</AVal>
				<AVal Column="1" Row="2">0</AVal>
				<AVal Column="2" Row="2">0</AVal>
				<AVal Column="3" Row="2">0</AVal>
				<AVal Column="1" Row="3">0</AVal>
				<AVal Column="2" Row="3">0</AVal>
				<AVal Column="3" Row="3">0</AVal>
				<AVal Column="1" Row="4">0</AVal>
				<AVal Column="2" Row="4">0</AVal>
				<AVal Column="3" Row="4">0</AVal>
				<AVal Column="1" Row="5">0</AVal>
				<AVal Column="2" Row="5">0</AVal>
				<AVal Column="3" Row="5">0</AVal>
				<AVal Column="1" Row="6">0</AVal>
				<AVal Column="2" Row="6">0</AVal>
				<AVal Column="3" Row="6">0</AVal>
				<AVal Column="1" Row="7">0</AVal>
				<AVal Column="2" Row="7">0</AVal>
				<AVal Column="3" Row="7">0</AVal>
				<AVal Column="1" Row="8">0</AVal>
				<AVal Column="2" Row="8">0</AVal>
				<AVal Column="3" Row="8">0</AVal>
				<AVal Column="1" Row="9">0</AVal>
				<AVal Column="2" Row="9">0</AVal>
				<AVal Column="3" Row="9">0</AVal>
				<AVal Column="1" Row="10">0</AVal>
				<AVal Column="2" Row="10">0</AVal>
				<AVal Column="3" Row="10">0</AVal>
			</ArrayValues>
		</Length>
		<Length Name="horgrid_11">
			<Description><![CDATA["H. Grid Positioning from Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="10" SecondDimension="3">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0</AVal>
				<AVal Column="3" Row="1">0</AVal>
				<AVal Column="1" Row="2">0</AVal>
				<AVal Column="2" Row="2">0</AVal>
				<AVal Column="3" Row="2">0</AVal>
				<AVal Column="1" Row="3">0</AVal>
				<AVal Column="2" Row="3">0</AVal>
				<AVal Column="3" Row="3">0</AVal>
				<AVal Column="1" Row="4">0</AVal>
				<AVal Column="2" Row="4">0</AVal>
				<AVal Column="3" Row="4">0</AVal>
				<AVal Column="1" Row="5">0</AVal>
				<AVal Column="2" Row="5">0</AVal>
				<AVal Column="3" Row="5">0</AVal>
				<AVal Column="1" Row="6">0</AVal>
				<AVal Column="2" Row="6">0</AVal>
				<AVal Column="3" Row="6">0</AVal>
				<AVal Column="1" Row="7">0</AVal>
				<AVal Column="2" Row="7">0</AVal>
				<AVal Column="3" Row="7">0</AVal>
				<AVal Column="1" Row="8">0</AVal>
				<AVal Column="2" Row="8">0</AVal>
				<AVal Column="3" Row="8">0</AVal>
				<AVal Column="1" Row="9">0</AVal>
				<AVal Column="2" Row="9">0</AVal>
				<AVal Column="3" Row="9">0</AVal>
				<AVal Column="1" Row="10">0</AVal>
				<AVal Column="2" Row="10">0</AVal>
				<AVal Column="3" Row="10">0</AVal>
			</ArrayValues>
		</Length>
		<Length Name="vergrid2_11">
			<Description><![CDATA["V. Grid Positioning from Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="10" SecondDimension="3">
				<AVal Column="1" Row="1">0.1975</AVal>
				<AVal Column="2" Row="1">0.05</AVal>
				<AVal Column="3" Row="1">1.1</AVal>
				<AVal Column="1" Row="2">0</AVal>
				<AVal Column="2" Row="2">0</AVal>
				<AVal Column="3" Row="2">0</AVal>
				<AVal Column="1" Row="3">0</AVal>
				<AVal Column="2" Row="3">0</AVal>
				<AVal Column="3" Row="3">0</AVal>
				<AVal Column="1" Row="4">0</AVal>
				<AVal Column="2" Row="4">0</AVal>
				<AVal Column="3" Row="4">0</AVal>
				<AVal Column="1" Row="5">0</AVal>
				<AVal Column="2" Row="5">0</AVal>
				<AVal Column="3" Row="5">0</AVal>
				<AVal Column="1" Row="6">0</AVal>
				<AVal Column="2" Row="6">0</AVal>
				<AVal Column="3" Row="6">0</AVal>
				<AVal Column="1" Row="7">0</AVal>
				<AVal Column="2" Row="7">0</AVal>
				<AVal Column="3" Row="7">0</AVal>
				<AVal Column="1" Row="8">0</AVal>
				<AVal Column="2" Row="8">0</AVal>
				<AVal Column="3" Row="8">0</AVal>
				<AVal Column="1" Row="9">0</AVal>
				<AVal Column="2" Row="9">0</AVal>
				<AVal Column="3" Row="9">0</AVal>
				<AVal Column="1" Row="10">0</AVal>
				<AVal Column="2" Row="10">0</AVal>
				<AVal Column="3" Row="10">0</AVal>
			</ArrayValues>
		</Length>
		<Length Name="horgrid2_11">
			<Description><![CDATA["H. Grid Positioning from Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="10" SecondDimension="3">
				<AVal Column="1" Row="1">0.2575</AVal>
				<AVal Column="2" Row="1">0.05</AVal>
				<AVal Column="3" Row="1">0.45</AVal>
				<AVal Column="1" Row="2">0.515</AVal>
				<AVal Column="2" Row="2">0.05</AVal>
				<AVal Column="3" Row="2">0.45</AVal>
				<AVal Column="1" Row="3">0.7725</AVal>
				<AVal Column="2" Row="3">0.05</AVal>
				<AVal Column="3" Row="3">0.45</AVal>
				<AVal Column="1" Row="4">0</AVal>
				<AVal Column="2" Row="4">0</AVal>
				<AVal Column="3" Row="4">0</AVal>
				<AVal Column="1" Row="5">0</AVal>
				<AVal Column="2" Row="5">0</AVal>
				<AVal Column="3" Row="5">0</AVal>
				<AVal Column="1" Row="6">0</AVal>
				<AVal Column="2" Row="6">0</AVal>
				<AVal Column="3" Row="6">0</AVal>
				<AVal Column="1" Row="7">0</AVal>
				<AVal Column="2" Row="7">0</AVal>
				<AVal Column="3" Row="7">0</AVal>
				<AVal Column="1" Row="8">0</AVal>
				<AVal Column="2" Row="8">0</AVal>
				<AVal Column="3" Row="8">0</AVal>
				<AVal Column="1" Row="9">0</AVal>
				<AVal Column="2" Row="9">0</AVal>
				<AVal Column="3" Row="9">0</AVal>
				<AVal Column="1" Row="10">0</AVal>
				<AVal Column="2" Row="10">0</AVal>
				<AVal Column="3" Row="10">0</AVal>
			</ArrayValues>
		</Length>
		<Length Name="vergrid_04">
			<Description><![CDATA["V. Grid Positioning from Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="3">
				<AVal Column="1" Row="1">0.193333333333</AVal>
				<AVal Column="2" Row="1">0.05</AVal>
				<AVal Column="3" Row="1">0.25</AVal>
			</ArrayValues>
		</Length>
		<Length Name="horgrid_04">
			<Description><![CDATA["H. Grid Positioning from Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="3">
				<AVal Column="1" Row="1">0.11</AVal>
				<AVal Column="2" Row="1">0.05</AVal>
				<AVal Column="3" Row="1">0.416666666667</AVal>
			</ArrayValues>
		</Length>
		<Length Name="vergrid2_04">
			<Description><![CDATA["V. Grid Positioning from Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="10" SecondDimension="3">
				<AVal Column="1" Row="1">0.1975</AVal>
				<AVal Column="2" Row="1">0.05</AVal>
				<AVal Column="3" Row="1">1.1</AVal>
				<AVal Column="1" Row="2">0</AVal>
				<AVal Column="2" Row="2">0</AVal>
				<AVal Column="3" Row="2">0</AVal>
				<AVal Column="1" Row="3">0</AVal>
				<AVal Column="2" Row="3">0</AVal>
				<AVal Column="3" Row="3">0</AVal>
				<AVal Column="1" Row="4">0</AVal>
				<AVal Column="2" Row="4">0</AVal>
				<AVal Column="3" Row="4">0</AVal>
				<AVal Column="1" Row="5">0</AVal>
				<AVal Column="2" Row="5">0</AVal>
				<AVal Column="3" Row="5">0</AVal>
				<AVal Column="1" Row="6">0</AVal>
				<AVal Column="2" Row="6">0</AVal>
				<AVal Column="3" Row="6">0</AVal>
				<AVal Column="1" Row="7">0</AVal>
				<AVal Column="2" Row="7">0</AVal>
				<AVal Column="3" Row="7">0</AVal>
				<AVal Column="1" Row="8">0</AVal>
				<AVal Column="2" Row="8">0</AVal>
				<AVal Column="3" Row="8">0</AVal>
				<AVal Column="1" Row="9">0</AVal>
				<AVal Column="2" Row="9">0</AVal>
				<AVal Column="3" Row="9">0</AVal>
				<AVal Column="1" Row="10">0</AVal>
				<AVal Column="2" Row="10">0</AVal>
				<AVal Column="3" Row="10">0</AVal>
			</ArrayValues>
		</Length>
		<Length Name="horgrid2_04">
			<Description><![CDATA["H. Grid Positioning from Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="10" SecondDimension="3">
				<AVal Column="1" Row="1">0.2575</AVal>
				<AVal Column="2" Row="1">0.05</AVal>
				<AVal Column="3" Row="1">0.45</AVal>
				<AVal Column="1" Row="2">0.515</AVal>
				<AVal Column="2" Row="2">0.05</AVal>
				<AVal Column="3" Row="2">0.45</AVal>
				<AVal Column="1" Row="3">0.7725</AVal>
				<AVal Column="2" Row="3">0.05</AVal>
				<AVal Column="3" Row="3">0.45</AVal>
				<AVal Column="1" Row="4">0</AVal>
				<AVal Column="2" Row="4">0</AVal>
				<AVal Column="3" Row="4">0</AVal>
				<AVal Column="1" Row="5">0</AVal>
				<AVal Column="2" Row="5">0</AVal>
				<AVal Column="3" Row="5">0</AVal>
				<AVal Column="1" Row="6">0</AVal>
				<AVal Column="2" Row="6">0</AVal>
				<AVal Column="3" Row="6">0</AVal>
				<AVal Column="1" Row="7">0</AVal>
				<AVal Column="2" Row="7">0</AVal>
				<AVal Column="3" Row="7">0</AVal>
				<AVal Column="1" Row="8">0</AVal>
				<AVal Column="2" Row="8">0</AVal>
				<AVal Column="3" Row="8">0</AVal>
				<AVal Column="1" Row="9">0</AVal>
				<AVal Column="2" Row="9">0</AVal>
				<AVal Column="3" Row="9">0</AVal>
				<AVal Column="1" Row="10">0</AVal>
				<AVal Column="2" Row="10">0</AVal>
				<AVal Column="3" Row="10">0</AVal>
			</ArrayValues>
		</Length>
		<Length Name="vergrid_08">
			<Description><![CDATA["V. Grid Positioning from Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="3">
				<AVal Column="1" Row="1">0.193333333333</AVal>
				<AVal Column="2" Row="1">0.05</AVal>
				<AVal Column="3" Row="1">0.25</AVal>
			</ArrayValues>
		</Length>
		<Length Name="horgrid_08">
			<Description><![CDATA["H. Grid Positioning from Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="3">
				<AVal Column="1" Row="1">0.11</AVal>
				<AVal Column="2" Row="1">0.05</AVal>
				<AVal Column="3" Row="1">0.416666666667</AVal>
			</ArrayValues>
		</Length>
		<Length Name="vergrid2_08">
			<Description><![CDATA["V. Grid Positioning from Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="10" SecondDimension="3">
				<AVal Column="1" Row="1">0.1975</AVal>
				<AVal Column="2" Row="1">0.05</AVal>
				<AVal Column="3" Row="1">1.1</AVal>
				<AVal Column="1" Row="2">0</AVal>
				<AVal Column="2" Row="2">0</AVal>
				<AVal Column="3" Row="2">0</AVal>
				<AVal Column="1" Row="3">0</AVal>
				<AVal Column="2" Row="3">0</AVal>
				<AVal Column="3" Row="3">0</AVal>
				<AVal Column="1" Row="4">0</AVal>
				<AVal Column="2" Row="4">0</AVal>
				<AVal Column="3" Row="4">0</AVal>
				<AVal Column="1" Row="5">0</AVal>
				<AVal Column="2" Row="5">0</AVal>
				<AVal Column="3" Row="5">0</AVal>
				<AVal Column="1" Row="6">0</AVal>
				<AVal Column="2" Row="6">0</AVal>
				<AVal Column="3" Row="6">0</AVal>
				<AVal Column="1" Row="7">0</AVal>
				<AVal Column="2" Row="7">0</AVal>
				<AVal Column="3" Row="7">0</AVal>
				<AVal Column="1" Row="8">0</AVal>
				<AVal Column="2" Row="8">0</AVal>
				<AVal Column="3" Row="8">0</AVal>
				<AVal Column="1" Row="9">0</AVal>
				<AVal Column="2" Row="9">0</AVal>
				<AVal Column="3" Row="9">0</AVal>
				<AVal Column="1" Row="10">0</AVal>
				<AVal Column="2" Row="10">0</AVal>
				<AVal Column="3" Row="10">0</AVal>
			</ArrayValues>
		</Length>
		<Length Name="horgrid2_08">
			<Description><![CDATA["H. Grid Positioning from Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="10" SecondDimension="3">
				<AVal Column="1" Row="1">0.2575</AVal>
				<AVal Column="2" Row="1">0.05</AVal>
				<AVal Column="3" Row="1">0.45</AVal>
				<AVal Column="1" Row="2">0.515</AVal>
				<AVal Column="2" Row="2">0.05</AVal>
				<AVal Column="3" Row="2">0.45</AVal>
				<AVal Column="1" Row="3">0.7725</AVal>
				<AVal Column="2" Row="3">0.05</AVal>
				<AVal Column="3" Row="3">0.45</AVal>
				<AVal Column="1" Row="4">0</AVal>
				<AVal Column="2" Row="4">0</AVal>
				<AVal Column="3" Row="4">0</AVal>
				<AVal Column="1" Row="5">0</AVal>
				<AVal Column="2" Row="5">0</AVal>
				<AVal Column="3" Row="5">0</AVal>
				<AVal Column="1" Row="6">0</AVal>
				<AVal Column="2" Row="6">0</AVal>
				<AVal Column="3" Row="6">0</AVal>
				<AVal Column="1" Row="7">0</AVal>
				<AVal Column="2" Row="7">0</AVal>
				<AVal Column="3" Row="7">0</AVal>
				<AVal Column="1" Row="8">0</AVal>
				<AVal Column="2" Row="8">0</AVal>
				<AVal Column="3" Row="8">0</AVal>
				<AVal Column="1" Row="9">0</AVal>
				<AVal Column="2" Row="9">0</AVal>
				<AVal Column="3" Row="9">0</AVal>
				<AVal Column="1" Row="10">0</AVal>
				<AVal Column="2" Row="10">0</AVal>
				<AVal Column="3" Row="10">0</AVal>
			</ArrayValues>
		</Length>
		<Length Name="gs_glass_thk">
			<Description><![CDATA["Glass Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0.02</Value>
		</Length>
		<String Name="LouverStyle">
			<Description><![CDATA["Louvers Style"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="iLouverStyle">
			<Description><![CDATA["Louvers Style"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="gs_louver_thk">
			<Description><![CDATA["Louvers Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.01</Value>
		</Length>
		<Length Name="gs_louver_width">
			<Description><![CDATA["Louvers Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Angle Name="gs_louver_opening_angle">
			<Description><![CDATA["Opening Angle of Louvers"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>45</Value>
		</Angle>

		<!-- gs_window_oversize: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_window_oversize">
			<Description><![CDATA["Opening Oversize"]]></Description>
		</Title>
		<Length Name="gs_left_oversize">
			<Description><![CDATA["Left Opening Oversize"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_right_oversize">
			<Description><![CDATA["Right Opening Oversize"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_upper_oversize">
			<Description><![CDATA["Upper Opening Oversize"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_lower_oversize">
			<Description><![CDATA["Lower Opening Oversize"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>

		<!-- gs_window_stack: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_window_stack">
			<Description><![CDATA["Ganging"]]></Description>
		</Title>
		<Boolean Name="gs_stack_left">
			<Description><![CDATA["Connection on the Left"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_stack_right">
			<Description><![CDATA["Connection on the Right"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_stack_top">
			<Description><![CDATA["Connection on the Top"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_stack_bottom">
			<Description><![CDATA["Connection on the Bottom"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- gs_openingTitle: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_openingTitle">
			<Description><![CDATA["Opening"]]></Description>
		</Title>
		<Angle Name="openingAngle_01">
			<Description><![CDATA["Opening Angle of Main Sash Middle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Angle Name="openingAngle2_01">
			<Description><![CDATA["Opening Angle of Main Sash Middle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Length Name="openingLength_01">
			<Description><![CDATA["Opening Distance 1 Main Sash Middle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="openingLength2_01">
			<Description><![CDATA["Opening Distance 2 Main Sash Middle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Angle Name="openingAngle_05">
			<Description><![CDATA["Opening Angle of Main Sash Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Angle Name="openingAngle2_05">
			<Description><![CDATA["Opening Angle of Main Sash Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Length Name="openingLength_05">
			<Description><![CDATA["Opening Distance 1 Main Sash Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="openingLength2_05">
			<Description><![CDATA["Opening Distance 2 Main Sash Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Angle Name="openingAngle_09">
			<Description><![CDATA["Opening Angle of Main Sash Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Angle Name="openingAngle2_09">
			<Description><![CDATA["Opening Angle of Main Sash Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Length Name="openingLength_09">
			<Description><![CDATA["Opening Distance 1 Main Sash Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="openingLength2_09">
			<Description><![CDATA["Opening Distance 2 Main Sash Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Angle Name="openingAngle_03">
			<Description><![CDATA["Opening Angle of Lower Sash Middle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Angle Name="openingAngle2_03">
			<Description><![CDATA["Opening Angle of Lower Sash Middle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Length Name="openingLength_03">
			<Description><![CDATA["Opening Distance 1 Lower Sash Middle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="openingLength2_03">
			<Description><![CDATA["Opening Distance 2 Lower Sash Middle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Angle Name="openingAngle_07">
			<Description><![CDATA["Opening Angle of Lower Sash Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Angle Name="openingAngle2_07">
			<Description><![CDATA["Opening Angle of Lower Sash Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Length Name="openingLength_07">
			<Description><![CDATA["Opening Distance 1 Lower Sash Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="openingLength2_07">
			<Description><![CDATA["Opening Distance 2 Lower Sash Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Angle Name="openingAngle_11">
			<Description><![CDATA["Opening Angle of Lower Sash Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Angle Name="openingAngle2_11">
			<Description><![CDATA["Opening Angle of Lower Sash Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Length Name="openingLength_11">
			<Description><![CDATA["Opening Distance 1 Lower Sash Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="openingLength2_11">
			<Description><![CDATA["Opening Distance 2 Lower Sash Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Angle Name="openingAngle_02">
			<Description><![CDATA["Opening Angle of Transom Sash Middle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Angle Name="openingAngle2_02">
			<Description><![CDATA["Opening Angle of Transom Sash Middle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Length Name="openingLength_02">
			<Description><![CDATA["Opening Distance 1 Transom Sash Middle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="openingLength2_02">
			<Description><![CDATA["Opening Distance 2 Transom Sash Middle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Angle Name="openingAngle_06">
			<Description><![CDATA["Opening Angle of Transom Sash Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Angle Name="openingAngle2_06">
			<Description><![CDATA["Opening Angle of Transom Sash Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Length Name="openingLength_06">
			<Description><![CDATA["Opening Distance 1 Transom Sash Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="openingLength2_06">
			<Description><![CDATA["Opening Distance 2 Transom Sash Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Angle Name="openingAngle_10">
			<Description><![CDATA["Opening Angle of Transom Sash Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Angle Name="openingAngle2_10">
			<Description><![CDATA["Opening Angle of Transom Sash Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Length Name="openingLength_10">
			<Description><![CDATA["Opening Distance 1 Transom Sash Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="openingLength2_10">
			<Description><![CDATA["Opening Distance 2 Transom Sash Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Angle Name="openingAngle_04">
			<Description><![CDATA["Opening Angle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Angle Name="openingAngle2_04">
			<Description><![CDATA["Opening Angle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Length Name="openingLength_04">
			<Description><![CDATA["Opening Distance 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="openingLength2_04">
			<Description><![CDATA["Opening Distance 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Angle Name="openingAngle_08">
			<Description><![CDATA["Opening Angle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Angle Name="openingAngle2_08">
			<Description><![CDATA["Opening Angle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Length Name="openingLength_08">
			<Description><![CDATA["Opening Distance 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="openingLength2_08">
			<Description><![CDATA["Opening Distance 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Angle Name="gs_open_2D">
			<Description><![CDATA["Opening Angle in 2D"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Length Name="gs_openLength_2D">
			<Description><![CDATA["Opening Length in 2D"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Boolean Name="bOverride_MVO_2D">
			<Description><![CDATA["Override MVO for 2D Symbolic Display"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<LineType Name="or_swingLineType">
			<Description><![CDATA["Opening Line Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</LineType>
		<String Name="or_SwingType">
			<Description><![CDATA["Opening Line Shape"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Криволинейная"]]></Value>
		</String>
		<Integer Name="or_iSwingType">
			<Description><![CDATA["Opening Line Shape"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="or_SlidingType">
			<Description><![CDATA["Opening Line Shape"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Нет"]]></Value>
		</String>
		<Integer Name="or_iSlidingType">
			<Description><![CDATA["Opening Line Shape"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<PenColor Name="or_opLinePen">
			<Description><![CDATA["Opening Line Pen in 2D/3D"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3</Value>
		</PenColor>
		<Integer Name="or_iOpLinePen">
			<Description><![CDATA["Opening Line Pen in 2D/3D"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>3</Value>
		</Integer>
		<Boolean Name="bOverride_MVO_3D">
			<Description><![CDATA["Override MVO for 3D Projections"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="or_bOplines3d">
			<Description><![CDATA["Show Opening Line"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<String Name="or_opLineType3dIn">
			<Description><![CDATA["Line Type Opening Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Штриховая"]]></Value>
		</String>
		<Integer Name="or_iOpLineType3dIn">
			<Description><![CDATA["Line Type Opening Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="or_opLineType3dOut">
			<Description><![CDATA["Line Type Opposite Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Сплошная Линия"]]></Value>
		</String>
		<Integer Name="or_iOpLineType3dOut">
			<Description><![CDATA["Line Type Opposite Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<String Name="or_oplineStyle">
			<Description><![CDATA["Line Orientation"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Ручка"]]></Value>
		</String>
		<Integer Name="or_iOplineStyle">
			<Description><![CDATA["Line Orientation"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<PenColor Name="gs_opLinePen">
			<Description><![CDATA["pening Line Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</PenColor>
		<Integer Name="gs_iSwingType">
			<Description><![CDATA["Swing Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<LineType Name="gs_swingLineType">
			<Description><![CDATA["Swing Line Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</LineType>
		<Boolean Name="bOplines3d">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<LineType Name="opLineType3dIn">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</LineType>
		<LineType Name="opLineType3dOut">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</LineType>
		<Integer Name="gs_opline_style_m">
			<Description><![CDATA["Opening Line Style"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>

		<!-- bVentilationProfile: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Boolean Name="bVentilationProfile">
			<Description><![CDATA["Natural Ventilation"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="iVentilationProfileType">
			<Description><![CDATA["Natural Ventilation Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="bEnableVentilationProfile">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="gs_VentilationProfileTypeEnable">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Length Name="VentilationProfileHeight">
			<Description><![CDATA["Profile Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.065</Value>
		</Length>
		<Length Name="VentilationProfileThickness">
			<Description><![CDATA["Profile Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.11</Value>
		</Length>

		<!-- gs_select_sash_vent_profile: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_select_sash_vent_profile">
			<Description><![CDATA["Select Sash with Ventilation Profile"]]></Description>
		</Title>
		<Boolean Name="isVentilationProfileInSash_01">
			<Description><![CDATA["Main Sash Middle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="isVentilationProfileInSash_05">
			<Description><![CDATA["Main Sash Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="isVentilationProfileInSash_09">
			<Description><![CDATA["Main Sash Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="isVentilationProfileInSash_03">
			<Description><![CDATA["Lower Sash Middle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="isVentilationProfileInSash_07">
			<Description><![CDATA["Lower Sash Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="isVentilationProfileInSash_11">
			<Description><![CDATA["Lower Sash Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="isVentilationProfileInSash_02">
			<Description><![CDATA["Transom Sash Middle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="isVentilationProfileInSash_06">
			<Description><![CDATA["Transom Sash Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="isVentilationProfileInSash_10">
			<Description><![CDATA["Transom Sash Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="isVentilationProfileInSash_04">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="isVentilationProfileInSash_08">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- gs_2D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_2D_representation">
			<Description><![CDATA["2D and Section Representation"]]></Description>
		</Title>
		<String Name="gs_ShowSashOnSymbol">
			<Description><![CDATA["Sash to Show on Symbol"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["1. Створка"]]></Value>
		</String>
		<Integer Name="gs_iShowSashOnSymbol">
			<Description><![CDATA["Sash to Show on Symbol"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<PenColor Name="gs_pen_2D">
			<Description><![CDATA["Uncut Line Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3</Value>
		</PenColor>
		<PenColor Name="gs_frame_pen_cont">
			<Description><![CDATA["Cut Line Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>23</Value>
		</PenColor>
		<PenColor Name="gs_trim_pen_cont">
			<Description><![CDATA["Casing Contour Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3</Value>
		</PenColor>
		<String Name="gs_wcont_line">
			<Description><![CDATA["Wall Contour Line"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["С Обеих Сторон"]]></Value>
		</String>
		<LineType Name="gs_wcont_line_in">
			<Description><![CDATA["Wall Contour Line Type Inside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</LineType>
		<LineType Name="gs_wcont_line_out">
			<Description><![CDATA["Wall Contour Line Type Outside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</LineType>
		<PenColor Name="gs_wcont_line_pen">
			<Description><![CDATA["Wall Contour Line Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3</Value>
		</PenColor>
		<Boolean Name="gs_bFills">
			<Description><![CDATA["Use Fills"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<FillPattern Name="gs_fillFr">
			<Description><![CDATA["Frame Fill Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_penFr_fg">
			<Description><![CDATA["Frame Fill Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>103</Value>
		</PenColor>
		<PenColor Name="gs_penFr_bg">
			<Description><![CDATA["Frame Fill Background Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<FillPattern Name="gs_fillSash">
			<Description><![CDATA["Sash Fill Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>16</Value>
		</FillPattern>
		<PenColor Name="gs_penSash_fg">
			<Description><![CDATA["Sash Fill Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>103</Value>
		</PenColor>
		<PenColor Name="gs_penSash_bg">
			<Description><![CDATA["Sash Fill Background Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<FillPattern Name="gs_fillShCover">
			<Description><![CDATA["Uncut Fill Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_penShCov_fg">
			<Description><![CDATA["Uncut Fill Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>103</Value>
		</PenColor>
		<PenColor Name="gs_penShCov_bg">
			<Description><![CDATA["Uncut Fill Background Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<FillPattern Name="gs_ventProfile_fill">
			<Description><![CDATA["Ventilation Section Fill Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>16</Value>
		</FillPattern>
		<PenColor Name="gs_ventProfile_pen_fg">
			<Description><![CDATA["Ventilation Section Fill Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_ventProfile_pen_bg">
			<Description><![CDATA["Ventilation Section Fill Background Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>

		<!-- gs_3D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_3D_representation">
			<Description><![CDATA["3D Representation"]]></Description>
		</Title>
		<Integer Name="gs_SashText_typ_num">
			<Description><![CDATA["Frame Element Joinery"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<PenColor Name="gs_frame_pen">
			<Description><![CDATA["Frame Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3</Value>
		</PenColor>
		<PenColor Name="gs_sash_pen">
			<Description><![CDATA["Sash Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3</Value>
		</PenColor>
		<PenColor Name="gs_glass_pen">
			<Description><![CDATA["Glass Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>43</Value>
		</PenColor>
		<Boolean Name="gs_shadow">
			<Description><![CDATA["Shadow"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>

		<!-- gs_window_material: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_window_material">
			<Description><![CDATA["Surfaces"]]></Description>
		</Title>
		<Boolean Name="bLinkSurfacesFrameSash">
			<Description><![CDATA["Uniform Surfaces"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="stored_material">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="4" SecondDimension="8">
				<AVal Column="1" Row="1">15</AVal>
				<AVal Column="2" Row="1">15</AVal>
				<AVal Column="3" Row="1">15</AVal>
				<AVal Column="4" Row="1">15</AVal>
				<AVal Column="5" Row="1">15</AVal>
				<AVal Column="6" Row="1">15</AVal>
				<AVal Column="7" Row="1">15</AVal>
				<AVal Column="8" Row="1">15</AVal>
				<AVal Column="1" Row="2">0</AVal>
				<AVal Column="2" Row="2">0</AVal>
				<AVal Column="3" Row="2">0</AVal>
				<AVal Column="4" Row="2">0</AVal>
				<AVal Column="5" Row="2">0</AVal>
				<AVal Column="6" Row="2">0</AVal>
				<AVal Column="7" Row="2">0</AVal>
				<AVal Column="8" Row="2">0</AVal>
				<AVal Column="1" Row="3">-9999</AVal>
				<AVal Column="2" Row="3">0</AVal>
				<AVal Column="3" Row="3">0</AVal>
				<AVal Column="4" Row="3">0</AVal>
				<AVal Column="5" Row="3">0</AVal>
				<AVal Column="6" Row="3">0</AVal>
				<AVal Column="7" Row="3">0</AVal>
				<AVal Column="8" Row="3">0</AVal>
				<AVal Column="1" Row="4">0</AVal>
				<AVal Column="2" Row="4">0</AVal>
				<AVal Column="3" Row="4">0</AVal>
				<AVal Column="4" Row="4">0</AVal>
				<AVal Column="5" Row="4">0</AVal>
				<AVal Column="6" Row="4">0</AVal>
				<AVal Column="7" Row="4">0</AVal>
				<AVal Column="8" Row="4">0</AVal>
			</ArrayValues>
		</Integer>
		<Material Name="gs_frame_mat">
			<Description><![CDATA["Frame Surface Outside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="gs_frame_mat2">
			<Description><![CDATA["Frame Surface Inside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="gs_sash_mat">
			<Description><![CDATA["Sash Surface Outside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="gs_sash_mat2">
			<Description><![CDATA["Sash Surface Inside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="gs_ventSashLouver_mat">
			<Description><![CDATA["Louvers Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="gs_glass_mat">
			<Description><![CDATA["Glass Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>24</Value>
		</Material>
		<Material Name="gs_grill_mat">
			<Description><![CDATA["Grid Surface Outside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="gs_grill_mat2">
			<Description><![CDATA["Grid Surface Inside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="gs_panel_mat">
			<Description><![CDATA["Solid Panel Surface Outside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="gs_panel_mat2">
			<Description><![CDATA["Solid Panel Surface Inside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="gs_ventProfile_mat">
			<Description><![CDATA["Ventilation Profile Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>45</Value>
		</Material>

		<!-- ac_details: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="ac_details">
			<Description><![CDATA["Computed Oversize Values"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
		</Title>
		<Length Name="ac_left_oversize">
			<Description><![CDATA["AC Left Opening Oversize"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ac_right_oversize">
			<Description><![CDATA["AC Right Opening Oversize"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ac_upper_oversize">
			<Description><![CDATA["AC Upper Opening Oversize"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ac_lower_oversize">
			<Description><![CDATA["AC Lower Opening Oversize"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Integer Name="ac_zone_on_reveal_side">
			<Description><![CDATA["Opening Direction"]]></Description>
			<Flags>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="gs_transom_display">
			<Description><![CDATA["Display as Transom"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<PenColor Name="gs_transom_display_pen">
			<Description><![CDATA["Wall End Line Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</PenColor>
		<LineType Name="gs_transom_display_linetype">
			<Description><![CDATA["Wall End Line Line Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>21</Value>
		</LineType>

		<!-- gs_head_symbol: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Boolean Name="gs_head_symbol">
			<Description><![CDATA["Head Depth on Symbol"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<LineType Name="gs_head_symbol_line">
			<Description><![CDATA["Head Depth Symbol Line Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>21</Value>
		</LineType>
		<PenColor Name="gs_head_symbol_pen">
			<Description><![CDATA["Head Depth Symbol Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>6</Value>
		</PenColor>
		<Integer Name="gs_ui_current_page">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="gs_ui_sub_tabpage_closure">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="gs_trim_inside">
			<Description><![CDATA["Casing Inside"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_trim_outside">
			<Description><![CDATA["Casing Outside"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="ac_wido_hide_options">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="gs_optyp_lab_ord">
			<Description><![CDATA["Opening Type Label Order"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="3" SecondDimension="0">
				<AVal Row="1">1</AVal>
				<AVal Row="2">5</AVal>
				<AVal Row="3">2</AVal>
			</ArrayValues>
		</Integer>
		<Integer Name="gs_SWE_listParams_contr">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<String Name="ifc_optypestr">
			<Description><![CDATA["IFC Operation"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value><![CDATA["Тройное Вертикальное"]]></Value>
		</String>
		<Integer Name="ifc_optype">
			<Description><![CDATA["IFC Operation"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>4</Value>
		</Integer>
		<RealNum Name="gs_list_freeAirPerformance">
			<Description><![CDATA["Free Air Performance (mm2/l/m)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<RealNum Name="gs_list_glassarea_tmp">
			<Description><![CDATA["Total Glazed Area"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<Boolean Name="gs_list_glassarea_override">
			<Description><![CDATA["Override Glazed Area"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<RealNum Name="gs_list_glassarea">
			<Description><![CDATA["Total Glazed Area"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>1.8225</Value>
		</RealNum>
		<Integer Name="gs_list_orientationDef_m">
			<Description><![CDATA["Window Orientation Definition"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<String Name="ac_OpeningSide">
			<Description><![CDATA["Window Orientation"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Length Name="ifc_LiningDepth">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ifc_LiningThickness">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="ifc_MullionThickness">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<RealNum Name="ifc_FirstMullionOffset">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>-0.466666666666667</Value>
		</RealNum>
		<RealNum Name="ifc_SecondMullionOffset">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.0333333333333334</Value>
		</RealNum>
		<Length Name="ifc_TransomThickness">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<RealNum Name="ifc_FirstTransomOffset">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<RealNum Name="ifc_SecondTransomOffset">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<Length Name="ifc_WindowPanel">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="3" SecondDimension="4">
				<AVal Column="1" Row="1">0.05</AVal>
				<AVal Column="2" Row="1">0.05</AVal>
				<AVal Column="3" Row="1">13</AVal>
				<AVal Column="4" Row="1">1</AVal>
				<AVal Column="1" Row="2">0.05</AVal>
				<AVal Column="2" Row="2">0.05</AVal>
				<AVal Column="3" Row="2">13</AVal>
				<AVal Column="4" Row="2">2</AVal>
				<AVal Column="1" Row="3">0.05</AVal>
				<AVal Column="2" Row="3">0.05</AVal>
				<AVal Column="3" Row="3">13</AVal>
				<AVal Column="4" Row="3">3</AVal>
			</ArrayValues>
		</Length>
		<Integer Name="optypeIDArray">
			<Description><![CDATA[""]]></Description>
			<ArrayValues FirstDimension="10" SecondDimension="0">
				<AVal Row="1">0</AVal>
				<AVal Row="2">0</AVal>
				<AVal Row="3">0</AVal>
				<AVal Row="4">0</AVal>
				<AVal Row="5">0</AVal>
				<AVal Row="6">0</AVal>
				<AVal Row="7">0</AVal>
				<AVal Row="8">0</AVal>
				<AVal Row="9">0</AVal>
				<AVal Row="10">0</AVal>
			</ArrayValues>
		</Integer>
		<String Name="stOpeningSide">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="2" SecondDimension="0">
				<AVal Row="1"><![CDATA["Л"]]></AVal>
				<AVal Row="2"><![CDATA["П"]]></AVal>
			</ArrayValues>
		</String>
		<Boolean Name="bBrokenGlass">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Boolean>
	</Parameters>
</ParamSection>

<Ancestry SectVersion="1" SectionFlags="0" SubIdent="0" Template="false">
	<MainGUID>F938E33A-329D-4A36-BE3E-85E126820996</MainGUID>
	<MainGUID>103E8D2C-8230-42E1-9597-46F84CCE28C0</MainGUID>
	<MainGUID>6ACDA889-69B2-4EC5-936C-CB1DA7032A92</MainGUID>
	<MainGUID>F6AE9687-2BC7-4D47-88C9-8F793E1DE2D6</MainGUID>
	<MainGUID>1C4203CF-11A2-4120-8A5C-FB7AD679FBB0</MainGUID>
</Ancestry>

<CalledMacros SectVersion="2" SectionFlags="0" SubIdent="0">
	<Macro>
		<MName><![CDATA["BasicWindowPanelStraight"]]></MName>
		<MainGUID>E3F9CED6-9A4A-499F-BC87-74CFD2CA7D3E</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["Ventilation_profile"]]></MName>
		<MainGUID>58676F56-A0A0-4A02-ADA8-565DD41323CF</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["Multisash_window_frame"]]></MName>
		<MainGUID>5BDFD2DF-41BF-4003-8DAF-24A529B39077</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["Rectangular_window_frame"]]></MName>
		<MainGUID>39AF87D4-1226-4D4A-B294-D1F79ED96BE6</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["Casement_rectangular"]]></MName>
		<MainGUID>7CE56836-4932-4D30-9C66-53D969052E7C</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["ui_tabIDlistHierarchy_m"]]></MName>
		<MainGUID>8D3FA40B-0E02-4FD9-B890-741FFA7BCDC8</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["ui_window_elevation"]]></MName>
		<MainGUID>E8B53A5A-EF73-476B-ADFE-17D3BA36701E</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["ui_WinFrameSashOptions_m"]]></MName>
		<MainGUID>2763B585-2182-C04F-BD0D-204CC8658251</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["ui_WinSettOpeningModAttr_m"]]></MName>
		<MainGUID>3F088F9D-030F-4E0A-9577-30A0A8660070</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["IFC_optype_window"]]></MName>
		<MainGUID>60D88201-1F7F-4F48-A18B-15CC621CA252</MainGUID>
	</Macro>
</CalledMacros>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_PR SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_PR>

<Comment SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Comment>

<Copyright SectVersion="1" SectionFlags="0" SubIdent="0">
	<Author>GRAPHISOFT</Author>
	<License>
		<Type>CC BY-ND</Type>
		<Version>3.0</Version>
	</License>
</Copyright>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_FWM SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_FWM>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_BWM SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_BWM>

<Keywords SectVersion="1" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Keywords>

</Symbol>
