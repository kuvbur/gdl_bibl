<?xml version="1.0" encoding="UTF-8"?>
<Symbol IsArchivable="false" IsPlaceable="false" MainGUID="AAB48003-7FFF-486F-BCCC-5242D4C2427D" MigrationValue="Normal" Owner="1196638531" Signature="1465080141" Version="38">
<Ancestry SectVersion="1" SectionFlags="0" SubIdent="0" Template="false">
	<MainGUID>F938E33A-329D-4A36-BE3E-85E126820996</MainGUID>
	<MainGUID>103E8D2C-8230-42E1-9597-46F84CCE28C0</MainGUID>
	<MainGUID>6ACDA889-69B2-4EC5-936C-CB1DA7032A92</MainGUID>
	<MainGUID>F6AE9687-2BC7-4D47-88C9-8F793E1DE2D6</MainGUID>
	<MainGUID>11E85B84-8DD1-491B-A2FE-337454A91545</MainGUID>
	<MainGUID>4C454F1B-EBE2-41D6-ABBF-29259AF178AC</MainGUID>
</Ancestry>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_3D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
! Contact person: <NJ>

! =============================================================================

bFeedBack = (GLOB_CONTEXT > 20 & GLOB_CONTEXT < 40)

! =============================================================================
! Section detail level settings
! =============================================================================

lodSE = LODSE_20
if GLOB_SCALE > 21  then lodSE = LODSE_50
if GLOB_SCALE > 51  then lodSE = LODSE_100
if GLOB_SCALE > 101 then lodSE = LODSE_200
if GLOB_SCALE > 201 then lodSE = LODSE_500


! =============================================================================
! Request globals for Opening Lines
! =============================================================================

bOplines3d				= 0
opLineType3dIn			= 1
opLineType3dOut			= 1
gs_opline_style_m		= 1
gs_opLinePen			= 1

call "OpeningOptions" parameters	gs_opening_dir_m	= 2,
									bWindow				= 0,
									bOverride_MVO_3D	= bOverride_MVO_3D,
									or_bOplines3d		= or_bOplines3d,
									or_iOpLineType3dIn	= or_iOpLineType3dIn,
									or_iOpLineType3dOut	= or_iOpLineType3dOut,
									or_iOpLineType3dSecondary = or_iOpLineType3dSecondary,
									or_iOplineStyle		= or_iOplineStyle,
									or_opLinePen		= or_opLinePen,
									bEnableSwingLineTurnOff	= bEnableSwingLineTurnOff,
									bEnableSecondaryOpLineTypes = bEnableSecondaryOpLineTypes,
					returned_parameters bOplines3d,
										opLineType3dIn,
										opLineType3dOut,
										opLineTypeSecondary,
										gs_opline_style_m,
										gs_opLinePen


! -----------------------------------------------------------------------------
! Hotspot Display Control
! -----------------------------------------------------------------------------

if GLOB_CONTEXT = 4 | GLOB_CONTEXT = 24 then
	if bLanguageUSA then
		bShowUnitHotspots	= 1
		bShowEgressHotspots	= gs_egress_nominal | bShowAddHotspots
		bShowLeafHotspots	= gs_leaf_nominal | bShowAddHotspots
	else
		if lodSE = LODSE_200 | lodSE = LODSE_500 then
			bShowUnitHotspots	= 0
			bShowEgressHotspots	= 0
			bShowLeafHotspots	= 0
			bShowAddHotspots	= 0
		else
			bShowUnitHotspots	= (lodSE = LODSE_20 | lodSE = LODSE_50 | gs_unit_nominal)
			bShowEgressHotspots	= gs_egress_nominal | ((lodSE = LODSE_20 | lodSE = LODSE_50) & bShowAddHotspots)
			bShowLeafHotspots	= gs_leaf_nominal | ((lodSE = LODSE_20 | lodSE = LODSE_50) & bShowAddHotspots)
		endif
	endif
else
	bShowUnitHotspots	= 0
	bShowEgressHotspots	= 0
	bShowLeafHotspots	= 0
	bShowAddHotspots	= 0
endif

if bShowAddHotspotsForIS then
	bShowUnitHotspots	= 1
	bShowEgressHotspots	= 1
	bShowLeafHotspots	= 1
	bShowAddHotspots	= 1
endif

! =============================================================================
! Wallhole Structure
! =============================================================================

if gs_board_inside then
	gs_reveal_bottom_angle = 0
endif

call "WallholeStructure" parameters all A = A,
	AC_Sill_To_Curr_Story	= AC_Sill_To_Curr_Story,
	ac_wallhole_height		= openingHeight,
	refWidth				= refWidth,
	leftWidth				= leftWallholeWidth,
	rightWidth				= rightWallholeWidth,
	iRevealType				= iRevealType,
	iSillRevealType			= iSillRevealType,
	iBoardRevealType		= iBoardRevealType,
	leftWallholeRevealPnts	= leftWallholeRevealPnts,
	rightWallholeRevealPnts	= rightWallholeRevealPnts,
	iRevealPointsIdx		= iRevealPointsIdx,
	revealInnerLeft			= revealInnerLeft,
	revealInnerRight		= revealInnerRight,
	iClosureType			= iClosureType,
	radSill					= radSill,
	radBoard				= radBoard,
	WOD						= WOD,
	overSizeLeft			= overSizeLeft,
	overSizeRight			= overSizeRight,
	overSizeUpper			= overSizeUpper,
	overSizeLower			= overSizeLower,
! --- Function Control Parameters
	bEnableParapetInset		= bEnableParapetInset,
	bEnableMasonryArch		= bEnableMasonryArch,
	bEnableFaschen			= bEnableFaschen,
! --- Macro Control Parameters
	isWindow				= 1,
	gs_IsCurved				= gs_IsCurved,
	bParalellInCurvedWalls	= bParalellInCurvedWalls,
! --- Corner Functions
	bLeftCornerFunction		= bLeftCornerFunction,
	leftCornerAngle			= leftCornerAngle,
	leftConnWallThk			= leftConnWallThk,
	bRightCornerFunction	= bRightCornerFunction,
	rightCornerAngle		= rightCornerAngle,
	rightConnWallThk		= rightConnWallThk,
! --- Turn Plaster
	possibleSkinTurnIn		= possibleSkinTurnIn,
	possibleSkinTurnOut		= possibleSkinTurnOut,
	gs_turn_plaster_show_3D	= gs_turn_plaster_show_3D,
	thkPlasterAtSillLeft	= thkPlasterAtSillLeft,
	thkPlasterAtSillRight	= thkPlasterAtSillRight,
	thkPlasterAtSillTop		= thkPlasterAtSillTop,
	thkPlasterAtSillBottom	= thkPlasterAtSillBottom,
	thkPlasterAtBoardLeft	= thkPlasterAtBoardLeft,
	thkPlasterAtBoardRight	= thkPlasterAtBoardRight,
	thkPlasterAtBoardTop	= thkPlasterAtBoardTop,
	thkPlasterAtBoardBottom	= thkPlasterAtBoardBottom,
! --- Window Sizes
	gs_wallhole_hotspots	= 1,
	gs_reveal_hotspots		= 1,
! --- Casing
	bDrawOutsideTrim		= bDrawOutsideTrim,
	bDrawInsideTrim			= bDrawInsideTrim,
! --- String Resources
	stWallContourLine		= stWallContourLine,
	stMasonryArchTypes		= stMasonryArchTypes,
	stMasonryArchStructure	= stMasonryArchStructure,
! --- Parapet
	iParapetBottom			= iParapetBottom,
	iParapetSize			= 1			! PARAPET_SIZE_AUTO


! =============================================================================
! Returned Parameters
! =============================================================================

!!if gs_stack_top then
!!	gs_frame_ovhg_top_out	= 0
!!	gs_frame_ovhg_top_in	= 0
!!else
	if iRevealType = REVEAL_SLANTED then
		gs_frame_ovhg_top_out	= gs_tolerance_upper + VentilationProfileHeight * isVentilationOverFrame + WIDO_FRAME_THICKNESS * tan(gs_reveal_top_angle)
		gs_frame_ovhg_top_in	= gs_tolerance_upper + VentilationProfileHeight * isVentilationOverFrame
	else
		gs_frame_ovhg_top_out	= gs_tolerance_upper + VentilationProfileHeight * isVentilationOverFrame
		gs_frame_ovhg_top_in	= gs_tolerance_upper + VentilationProfileHeight * isVentilationOverFrame
	endif
!!endif

gs_frame_ovhg_bottom_out = 0
gs_frame_ovhg_bottom_in	 = 0


if iRevealType = REVEAL_SLANTED & not(WIDO_REVEAL_SIDE) then
	temp = gs_frame_ovhg_top_in
	gs_frame_ovhg_top_in = gs_frame_ovhg_top_out
	gs_frame_ovhg_top_out = temp
endif


! =============================================================================

addPrmX = offsWindowX
addPrmY = -(WIDO_REVEAL_SIDE - not(WIDO_REVEAL_SIDE)) * gs_wthk * WIDO_SILL			!!!WIDO_FRAME_THICKNESS
mulPrmX = not(bMirrored) - bMirrored
mulPrmY = 1

if not(bShowReveal) then
	leftUnitWidth	= min(-leftWallFrameRevealPnts[idxFrameStartRevealLeft][1], -leftWallFrameRevealPnts[idxFrameEndRevealLeft][1])
	rightUnitWidth	= min(rightWallFrameRevealPnts[idxFrameStartRevealRight][1], rightWallFrameRevealPnts[idxFrameEndRevealRight][1])

	ac_unit_width = leftUnitWidth + rightUnitWidth
endif

end ac_unit_width,
	ac_unit_height,
	gs_frame_ovhg_left_out,
	gs_frame_ovhg_right_out,
	gs_frame_ovhg_top_out,
	gs_frame_ovhg_bottom_out,
	gs_frame_ovhg_left_in,
	gs_frame_ovhg_right_in,
	gs_frame_ovhg_top_in,
	gs_frame_ovhg_bottom_in,
	gs_fthk,
	bMirrored,

	mulPrmX, 0,					 0,					 addPrmX,
	0,		 mulPrmY * cos(-90),-sin(-90),			 0,
	0,		 mulPrmY * sin(-90), mulPrmY * cos(-90),-addPrmY,

	bOplines3d,	opLineType3dIn,	opLineType3dOut, opLineTypeSecondary, gs_opline_style_m, gs_opLinePen,
	bShowAddHotspots, bShowAddHotspotsForIS, bShowUnitHotspots, bShowEgressHotspots, bShowLeafHotspots

]]>
</Script_3D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_2D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
! Contact person: <NJ>

! =============================================================================
! Center Hotspot
! =============================================================================

if curvedWall then
	if WIDO_REVEAL_SIDE exor SYMB_ROTANGLE < EPS then
		radSill = sqr(A^2 / 4 + WOD^2) - WIDO_SILL
		radBoard = radSill + WALL_THICKNESS
	else
		radSill = sqr(A^2 / 4 + WOD^2) + WIDO_SILL
		radBoard = radSill - WALL_THICKNESS
	endif
	if wallIsLeft then
		if WIDO_REVEAL_SIDE then
			py = -radSill * cos(leftAlfa) + WOD - WIDO_FRAME_THICKNESS
		else
			py = radSill * cos(leftAlfa) - WOD
		endif
	else
		if WIDO_REVEAL_SIDE then
			py = radBoard * cos(leftAlfa) + WOD - WIDO_FRAME_THICKNESS
		else
			py = -radBoard * cos(leftAlfa) - WOD
		endif
	endif
else
	if AC_WallType = 2 then
		idx1 = AC_WindowInWallContour[1]
		idx2 = AC_WindowInWallContour[2]
		if idx1 > 0 & idx2 > 0 then
			py = (AC_WallContourPolygon[idx1][2] + AC_WallContourPolygon[idx2][2]) / 2
		else
			py = 0
			if idx1 > 0 then py = AC_WallContourPolygon[idx1][2]
			if idx2 > 0 then py = AC_WallContourPolygon[idx2][2]
		endif
	else
		if bInclinedWall | wallIsLeft then
			if WIDO_REVEAL_SIDE then
				py = -WIDO_SILL - WIDO_FRAME_THICKNESS
			else
				py = WIDO_SILL
			endif
		else
			if WIDO_REVEAL_SIDE then
				py = WALL_THICKNESS - WIDO_SILL - WIDO_FRAME_THICKNESS
			else
				py = WIDO_SILL - WALL_THICKNESS
			endif
		endif
	endif
endif

hotspot2 0,py, 9999


! =============================================================================
! 2D detail level settings
! =============================================================================

! Detail values of Fixtures and Fittings
!lod2D_SillBoard: 0-Off, 1-On
!lod2D_Treshold	: 0-Off, 1-Simple, 2-Detailed
!lod2D_Casing	: 0-Off, 1-On
!lod2D_sunShade	: 0-Off, 1-Simple, 2-Detailed

lod2D_SillBoard		= 0
lod2D_Treshold 		= 0
lod2D_Casing 		= 0
lod2D_sunShade	 	= 0
bShowFrameIn2D		= 1

if	iLoD2D = SYMBD_S_1LINE |\						! Simple --> INT 200
	iLoD2D = SYMBD_S_1LINECL then
	if bGetMVOValueDlev2D then bShowFrameIn2D	= 0
	lod2D_SillBoard = 0
	lod2D_Treshold	= 0
	lod2D_Casing	= 0
	lod2D_sunShade	= 0
endif

if	iLoD2D = SYMBD_M_1LINELEAF_2LINE |\			! Middle --> INT 100, NLD 100
	iLoD2D = SYMBD_M_2LINELEAFCL_GLASS then
	if bShowSillBoardIn2D100NED then
		lod2D_SillBoard = 1
	else
		lod2D_SillBoard = 0
	endif
	lod2D_Treshold	= 1
	lod2D_Casing	= 0
	lod2D_sunShade	= 1
endif

if	iLoD2D = SYMBD_D_2LINELEAFOP_GLASS |\			! Detailed --> INT 50, NLD 50
	iLoD2D = SYMBD_D_2LINELEAFCL_REBATEONGLASS then
	lod2D_SillBoard = 1
	lod2D_Treshold	= 2
	if bNotShowCasingIn2DNOR then
		lod2D_Casing	= 0
	else
		lod2D_Casing	= 1
	endif
	lod2D_sunShade	= 2

	if iLoD2D = SYMBD_D_2LINELEAFOP_GLASS & bGetMVOValueDlev2D then
		! if SWE and simple leaf in 50 is enabled, force disable it if MVO symbol is chosen
		bSimpleLeafin50 = 0
	endif
endif

if iLoD2D = SYMBD_D_2LEAFOPGLASS_GLASS then		! Detailed --> INT 20, Storefronts
	lod2D_SillBoard	= 1
	lod2D_Treshold	= 2
	lod2D_Casing	= 1
	lod2D_sunShade	= 2
endif

if iLoD2D = SYMBD_S_2LINE then
	lod2D_SillBoard	= 0
	lod2D_Treshold	= 0
	lod2D_Casing	= 0
	lod2D_sunShade	= 0
endif

if iLoD2D = SYMBD_D_2LINELEAFOP_2LINE then		! Chinese Detailed
	lod2D_SillBoard	= 0
	lod2D_Treshold	= 0
	lod2D_Casing	= 0
	lod2D_sunShade	= 0
endif

if iLoD2D = SYMBD_SCALESENS then							! Scale sensitive
	if GLOB_SCALE > 150 then
		iLoD2D = SYMBD_S_1LINE
!		if bOpeningSymbDisplay then iLoD2D = SYMBD_S_1LINECL
		lod2D_SillBoard = 0
		lod2D_Treshold 	= 0
		lod2D_Casing 	= 0
		lod2D_sunShade 	= 0
	endif
	if GLOB_SCALE <= 150 and GLOB_SCALE > 75 then
		iLoD2D = SYMBD_M_1LINELEAF_2LINE
!		if bOpeningSymbDisplay then iLoD2D = SYMBD_M_2LINELEAFCL_GLASS
		if bShowSillBoardIn2D100NED then
			lod2D_SillBoard = 1
		else
			lod2D_SillBoard = 0
		endif
		lod2D_Treshold	= 1
		lod2D_Casing	= 0
		lod2D_sunShade	= 1
	endif
	if GLOB_SCALE <=  75 then
		iLoD2D = SYMBD_D_2LINELEAFOP_GLASS
!		if bOpeningSymbDisplay then iLoD2D = SYMBD_D_2LINELEAFCL_REBATEONGLASS
		lod2D_SillBoard = 1
		lod2D_Treshold	= 2
		lod2D_Casing	= 1
		lod2D_sunShade	= 2
	endif
	if GLOB_SCALE < 48 then	iLoD2D = SYMBD_D_2LEAFOPGLASS_GLASS
	if bNotShowCasingIn2DNOR then
		if GLOB_SCALE > 49 then
			lod2D_Casing	= 0
		else
			lod2D_Casing	= 1
		endif
	endif

	if GLOB_SCALE <=  49 then
		! if SWE and simple leaf in 50 is enabled, force disable it for below scales
		bSimpleLeafin50 = 0									! SWE 20
	endif
endif


! =============================================================================

bFeedBack =  (GLOB_CONTEXT > 20 & GLOB_CONTEXT < 40)

if AC_WallType = 2 then
	id1 = AC_WindowInWallContour[1]
	id2 = AC_WindowInWallContour[2]
	id3 = AC_WindowInWallContour[3]
	id4 = AC_WindowInWallContour[4]

	if id1 > 0 & id2 > 0 & id3 > 0 & id4 > 0 & abs(id1 - id2) = 1 & abs(id3 - id4) = 1 then
		if abs(AC_WallContourPolygon[id1][2] - AC_WallContourPolygon[id2][2]) < EPS & abs(AC_WallContourPolygon[id3][2] - AC_WallContourPolygon[id4][2]) < EPS then
			AC_WallType = 1
		endif
	endif
endif

! =============================================================================
! Request Globals for Opening Lines
! =============================================================================

bShowOplines2D			= 1
gs_opLinePen			= 1
gs_iSwingType			= 1
gs_swingLineType		= 1
gs_swingLineType2		= 1

call "OpeningOptions" parameters	bWindow						= 0,
									iLineShapeCategory			= iLineShapeCategory,
									bOverride_MVO_2D			= bOverride_MVO_2D,
									or_bOplines2d				= or_bOplines2d,
									or_opLinePen				= or_opLinePen,
									or_iSwingType				= or_iSwingType,
									or_iSlidingType				= or_iSlidingType,
									or_swingLineType			= or_swingLineType,
									or_swingLineType2			= or_swingLineType2,
									bEnableSwingLineTurnOff		= bEnableSwingLineTurnOff,
									bEnableSecondaryOpLineTypes	= bEnableSecondaryOpLineTypes,
						returned_parameters bShowOplines2D,
											gs_opLinePen,
											gs_iSwingType,
											gs_iSlidingType,
											gs_swingLineType,
											gs_swingLineType2

! -----------------------------------------------------------------------------
! Hotspot Display Control
! -----------------------------------------------------------------------------

if iLoD2D < SYMBD_M_1LINELEAF_2LINE then
	bShowUnitHotspots	= 0
	bShowEgressHotspots	= 0
	bShowLeafHotspots	= 0
	bShowAddHotspots	= 0
else
	bShowUnitHotspots	= ((iLoD2D > SYMBD_M_9) | gs_unit_nominal)
	bShowEgressHotspots	= gs_egress_nominal | ((iLoD2D > SYMBD_M_9) & bShowAddHotspots)
	bShowLeafHotspots	= gs_leaf_nominal | ((iLoD2D > SYMBD_M_9) & bShowAddHotspots)
endif

if bShowAddHotspotsForIS then
	bShowUnitHotspots	= 1
	bShowEgressHotspots	= 1
	bShowLeafHotspots	= 1
	bShowAddHotspots	= 1
endif

if iLoD2D = SYMBD_OFF then 100


! =============================================================================
! Demolition / New construction
! =============================================================================

if iTypeDemolitionFill = RENOVATION_FILL_EXIST then
	gs_wallhole_fill = gs_wallhole_fill
	gs_wallhole_pen_fg = gs_wallhole_pen_fg
	gs_wallhole_pen_bg = gs_wallhole_pen_bg
endif

if iTypeDemolitionFill = RENOVATION_FILL_DEMOLISHED then
	gs_wallhole_fill = gs_Demolition_fill
	gs_wallhole_pen_fg = gs_Demolition_pen_fg
	gs_wallhole_pen_bg = gs_Demolition_pen_bg
endif

if	iTypeDemolitionFill = RENOVATION_FILL_NEW |\
	iTypeDemolitionFill = RENOVATION_FILL_NEW_FULL then

	gs_wallhole_fill = gs_New_fill
	gs_wallhole_pen_fg = gs_New_pen_fg
	gs_wallhole_pen_bg = gs_New_pen_bg
endif


! =============================================================================
! SWE New Symbol
! =============================================================================

if gs_bShowNewOnCC & iTypeDemolitionFill = RENOVATION_FILL_NEW then
	bEnableMasonryArch			= 0
	bEnableFaschen				= 0
	bEnableSill					= 0
	bEnableBoard				= 0
	bEnableThreshold			= 0
	bEnableCasing				= 0
	bEnableShutter				= 0
endif


! =============================================================================
! Turned Plaster Restrictions
! =============================================================================

bOutsideAtRefLine = (wallIsLeft exor (AC_Wall_Direction_Type <> 1 & AC_Wall_Direction_Type <> 3))

if bOutsideAtRefLine then
	if bDrawInsideTrim then
		gs_bAutoTurnOut	= 0
		gs_bOverOut		= 0
	endif
	if bDrawOutsideTrim then
		gs_bAutoTurnIn	= 0
		gs_bOverIn		= 0
	endif
else
	if bDrawOutsideTrim then
		gs_bAutoTurnOut	= 0
		gs_bOverOut		= 0
	endif
	if bDrawInsideTrim then
		gs_bAutoTurnIn	= 0
		gs_bOverIn		= 0
	endif
endif


! =============================================================================
! Wallhole Structure
! =============================================================================

drawindex 40	! Draw Cavity Closure at the top

bDrawSillFill	= not(bDrawSill  | bDrawOutsideTrim)
bDrawBoardFill	= not(bDrawBoard | bDrawInsideTrim)

call "WallholeStructure" parameters all A = A,
	iTypeDemolitionFill		= iTypeDemolitionFill,
	refWidth				= refWidth,
	leftWidth				= leftWallholeWidth,
	rightWidth				= rightWallholeWidth,
	iRevealType				= iRevealType,
	leftWallholeRevealPnts	= leftWallholeRevealPnts,
	rightWallholeRevealPnts	= rightWallholeRevealPnts,
	iRevealPointsIdx		= iRevealPointsIdx,
	bAddPoint				= bAddPoint,
	iClosureType			= iClosureType,
	radSill					= radSill,
	radBoard				= radBoard,
	WOD						= WOD,
	overSizeLeft			= overSizeLeft,
	overSizeRight			= overSizeRight,
	overSizeUpper			= overSizeUpper,
	overSizeLower			= overSizeLower,
	lineSections			= lineSections,
! --- Turned Plaster Skins
	possibleSkinTurnIn		= possibleSkinTurnIn,
	possibleSkinTurnOut		= possibleSkinTurnOut,
	maxSkinTurnIn			= maxSkinTurnIn,
	maxSkinTurnOut			= maxSkinTurnOut,
	nSkinTurnIn				= nSkinTurnIn,
	nSkinTurnOut			= nSkinTurnOut,
	thkPlasterAtSillLeft	= thkPlasterAtSillLeft,
	thkPlasterAtSillRight	= thkPlasterAtSillRight,
	thkPlasterAtBoardLeft	= thkPlasterAtBoardLeft,
	thkPlasterAtBoardRight	= thkPlasterAtBoardRight,
! --- Function Control Parameters
	bEnablePlasterLeftIn	= bEnablePlasterLeftIn,
	bEnablePlasterLeftOut	= bEnablePlasterLeftOut,
	bEnablePlasterRightIn	= bEnablePlasterRightIn,
	bEnablePlasterRightOut	= bEnablePlasterRightOut,
	bEnableParapetInset		= bEnableParapetInset,
	bEnableMasonryArch		= bEnableMasonryArch,
	bEnableFaschen			= bEnableFaschen,
	bEnableWallContourHiddenLine	= bEnableWallContourHiddenLine,
	bWallContHiddenLineIn	= 0,
	bWallContHiddenLineOut	= 0,
! --- Macro Control Parameters
	isWindow				= 1,
	gs_IsCurved				= gs_IsCurved,
	bParalellInCurvedWalls	= bParalellInCurvedWalls,
	bDrawSillFill			= bDrawSillFill,
	bDrawBoardFill			= bDrawBoardFill,
! --- Corner Functions
	bLeftCornerFunction		= bLeftCornerFunction,
	leftCornerAngle			= leftCornerAngle,
	leftConnWallThk			= leftConnWallThk,
	bRightCornerFunction	= bRightCornerFunction,
	rightCornerAngle		= rightCornerAngle,
	rightConnWallThk		= rightConnWallThk,
! --- Window Sizes
	gs_wallhole_hotspots	= 1,
	gs_reveal_hotspots		= 1,
! --- Reveal and Closure Type
	gs_reveal_left			= gs_reveal_left,
	gs_reveal_right			= gs_reveal_right,
	revealInnerLeft 		= revealInnerLeft,
	revealInnerRight		= revealInnerRight,
! --- Casing
	bDrawOutsideTrim		= bDrawOutsideTrim,
	bDrawInsideTrim			= bDrawInsideTrim,
! --- String Resources
	stWallContourLine		= stWallContourLine,
	stCavityClosureSide		= stCavityClosureSide,
	stCavityClosureTurnDir	= stCavityClosureTurnDir,
	stMasonryArchTypes		= stMasonryArchTypes,
	stMasonryArchStructure	= stMasonryArchStructure,
! --- Parapet
	iParapetSize			= 1			! PARAPET_SIZE_AUTO


! =============================================================================
! Minimal Space for Doors
! =============================================================================

reqBMinSpace = 0
success = LIBRARYGLOBAL ("LibraryGlobals13", "showBMinSpace", reqBMinSpace)

if success > 0 and reqBMinSpace then
	drawindex 10

	call "dw_minimalspace" parameters A = A,
									B = B,
									ac_wallhole_width = A,
									EgressMSWidth = EgressMSWidth,
									egressOffset = egressOffset,
									msOpeningSideWidth2 = msOpeningSideWidth2,
									msOpeningSideWidth1 = msOpeningSideWidth1,
									ms_openingSDepth = ms_openingSDepth,
									msOppositeSideWidth2 = msOppositeSideWidth2,
									msOppositeSideWidth1 = msOppositeSideWidth1,
									ms_oppositeSDepth = ms_oppositeSDepth,
									ms_slidingWidth = 0,
									leftRevealPnts = leftWallholeRevealPnts,
									rightRevealPnts =rightWallholeRevealPnts,
									iRevealPointsIdx = iRevealPointsIdx,
									ac_unit_width = ac_unit_width,
									radSill = radSill,
									radBoard = radBoard,
									WOD = WOD,
!									gs_opside_list = gs_opside_list,
!									gs_opside_list_m = gs_opside_list_m,
									bSlidingSingle = 0,
									bSlidingDouble = 0,
									ms_rightOffset = ms_rightOffset,
									ms_leftOffset = ms_leftOffset,
									gs_frame_wthk		= gs_wthk,
									gs_frame_thkin 		= gs_fthk,
									gs_fthk				= gs_fthk,
									gs_sidelight_left 	= bSidelights,
									gs_sidelight_right 	= bSidelights,
									gs_sidelight_width_left = gs_sidelight_width_left,
									gs_sidelight_width_right = gs_sidelight_width_right,
									gs_leaf_optype_m	= gs_leaf_optype_m


endif


! =============================================================================
! NED Fire Rating Symbol
! =============================================================================

if bEnableNEDFireRating then
	_bSuccess = 0
	_bShowSymbol = 0
	_bSuccess = LIBRARYGLOBAL ("LibraryGlobals13", "bShowFireRating", _bShowSymbol)
	if _bSuccess then
		_bSuccess = LIBRARYGLOBAL ("LibraryGlobals13", "fireRatingSymbPen", _fireSymbPen)
	endif

	if _bSuccess and _bShowSymbol then
		pen _fireSymbPen

		_radSymb = 0.072
		_dx = 0.08
		_dy1 = 0.5
		_dy2 = 0.3
		_dy3 = 0.16

		if gs_wthk then
			add2 0, -WALL_THICKNESS/2
		else
			add2 0, -gs_frame_thk/2
		endif

		if iNEDFireRating = 1 or iNEDFireRating = 4 or iNEDFireRating = 5 then
			poly2_ 9, 1,
				0,			 4 * _radSymb,	1,
				0,			 3 *_radSymb,	901,
				_radSymb,	-180,			4001,
				0,			 1 * _radSymb,	901,
				_radSymb,	 180,			4001,
				0,			-_radSymb,		901,
				_radSymb,	-180,			4001,
				0,			-3 * _radSymb,	901,
				_radSymb,	 180,			4001
		endif

		if iNEDFireRating = 2 or iNEDFireRating = 3 or iNEDFireRating = 4 or iNEDFireRating = 5 then
			line2 -_dx,	 _dy1,	 _dx,	 _dy1 + _dy3
			line2 -_dx,	-_dy1,	 _dx,	-_dy1 - _dy3
			line2  _dx,	 _dy1,	-_dx,	 _dy1 + _dy3
			line2  _dx,	-_dy1,	-_dx,	-_dy1 - _dy3
		endif

		if iNEDFireRating = 3 or iNEDFireRating = 5 then
			line2 -_dx,	 _dy2,	 _dx,	 _dy2 + _dy3
			line2 -_dx,	-_dy2,	 _dx,	-_dy2 - _dy3
			line2  _dx,	 _dy2,	-_dx,	 _dy2 + _dy3
			line2  _dx,	-_dy2,	-_dx,	-_dy2 - _dy3
		endif

		if iNEDFireRating > 0 and iNEDFireRating < 6 then
			line2 0, -_dy1 - _dy3, 0, _dy1 + _dy3
		endif
		del 1

	endif

endif


100:
! =============================================================================
! Returned Parameters
! =============================================================================

drawindex 40	! Draw Window Panel in the Middle

addPrmX = offsWindowX + SymbMid_RightDx/2 - SymbMid_LeftDx/2
addPrmY = -(WIDO_REVEAL_SIDE - not(WIDO_REVEAL_SIDE)) * gs_wthk * WIDO_SILL + gs_wthk * WIDO_REVEAL_SIDE * (WALL_THICKNESS - WIDO_FRAME_THICKNESS) + SymbolMid_shiftDy
mulPrmX = not(bMirrored) - bMirrored
mulPrmY = 1

mulPrmX = (not(bMirrored) - bMirrored)

if not(bShowReveal) then
	leftUnitWidth	= min(-leftWallFrameRevealPnts[idxFrameStartRevealLeft][1], -leftWallFrameRevealPnts[idxFrameEndRevealLeft][1])
	rightUnitWidth	= min(rightWallFrameRevealPnts[idxFrameStartRevealRight][1], rightWallFrameRevealPnts[idxFrameEndRevealRight][1])

	ac_unit_width = leftUnitWidth + rightUnitWidth
endif

end ac_unit_width,
	gs_frame_ovhg_left_out,
	gs_frame_ovhg_right_out,
	gs_frame_ovhg_left_in,
	gs_frame_ovhg_right_in,
	gs_wthk,
	gs_fthk,
	bMirrored,
	addPrmX, addPrmY,
	mulPrmX, mulPrmY,
	iLoD2D,
	bSimpleLeafin50,

	bShowOplines2D,
	bShowFrameIn2D,
	bShowGlassInMiddle2D,
	gs_opLinePen,
	gs_iSwingType,
	gs_swingLineType,
	gs_swingLineType2,
	bShowAddHotspots, bShowUnitHotspots, bShowEgressHotspots, bShowLeafHotspots
]]>
</Script_2D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_1D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
! const values for parameter: iTypeDemolitionFill
RENOVATION_FILL_EXIST		= 1
RENOVATION_FILL_DEMOLISHED	= 2
RENOVATION_FILL_NEW			= 3
RENOVATION_FILL_NEW_FULL	= 4

! const values for parameter: iDWDet2D
DETLEVEL_DW2D_MVO     = 1
DETLEVEL_DW2D_SCSENS  = 2
DETLEVEL_DW2D_50      = 3
DETLEVEL_DW2D_100     = 4
DETLEVEL_DW2D_200     = 5
DETLEVEL_DW2D_OFF     = 6
DETLEVEL_DW2D_CHISMPL = 7
DETLEVEL_DW2D_CHIDET  = 8
DETLEVEL_DW2D_20      = 9
DETLEVEL_DW2D_500     = 10

! Contact person: <NJ>

EPS = 0.0001

! iRevealType:
REVEAL_EDGE				= 0
REVEAL_NO				= 1
REVEAL_POSITIVE			= 2
REVEAL_NEGATIVE			= 3
REVEAL_SLANTED			= 4
REVEAL_SPLAYED			= 5
REVEAL_HISTORIC			= 6
REVEAL_DOUBLE			= 7
REVEAL_DOUBLE_SPLAYED	= 8
REVEAL_OUTSIDE_SPLAYED	= 9

! iRevealOnSymbol
SHOWREV_MVO		= 1
SHOWREV_ALWAYS	= 2
SHOWREV_UPTO50	= 3
SHOWREV_UPTO100	= 4
SHOWREV_UPTO200	= 5
SHOWREV_NEVER	= 6

! iClosureType:
CLOSURE_NO					= 0
CLOSURE_TRADITIONAL			= 1
CLOSURE_PREFABRICATED		= 2
CLOSURE_CUSTOM				= 3
CLOSURE_SOLID_WALL			= 4
CLOSURE_STUD_WALL			= 5
CLOSURE_STUD_WALL_SIDING	= 6
CLOSURE_BRICK_VENEER		= 7
CLOSURE_VARIABLE			= 8
CLOSURE_PLASTER_REVEAL	 			= 9
CLOSURE_INSULATED_REVEAL			= 10
CLOSURE_INSULATED_FOR_RENOVATION	= 11
CLOSURE_FINISH						= 12
CLOSURE_AIR_SPACE					= 13
CLOSURE_DUTCH_VARIABLE				= 14

! lodSE - S/E Detail level
LODSE_20	= 1
LODSE_50	= 2
LODSE_100	= 3
LODSE_200	= 4
LODSE_500	= 5

!lod2d
DET2D_FS_OFF				= 0
DET2D_FS_SCALESENS			= -1
DET2D_FS_SIMPLE				= 11
DET2D_FS_MIDDLE				= 21
DET2D_FS_DETAILED			= 30
DET2D_FS_SIMPLE_CHI			= 51
DET2D_FS_DETAILED_CHI		= 52

! iLoD2D
SYMBD_OFF							= 0
SYMBD_SCALESENS						= 1
SYMBD_S_1LINE						= 11
SYMBD_S_2LINE						= 12
SYMBD_S_1LINE_FRAME					= 13
SYMBD_S_1LINECL						= 14
SYMBD_S_5							= 15
SYMBD_S_6							= 16
SYMBD_S_7							= 17
SYMBD_S_8							= 18
SYMBD_S_9							= 19
SYMBD_M_1LINELEAF_2LINE				= 21
SYMBD_M_2LINELEAFCL_GLASS			= 22
SYMBD_M_1LINELEAF_1LINE				= 23
SYMBD_M_4							= 24
SYMBD_M_5							= 25
SYMBD_M_6							= 26
SYMBD_M_7							= 27
SYMBD_M_8							= 28
SYMBD_M_9							= 29
SYMBD_D_2LINELEAFOP_GLASS			= 31
SYMBD_D_2LINELEAFCL_REBATEONGLASS	= 32
SYMBD_D_2LINELEAFOP_2LINE			= 33
SYMBD_D_2LINELEAFOP_SASH			= 34
SYMBD_D_1LINELEAF_GLASS				= 35
SYMBD_D_2LINELEAFCL_SASHWLINE		= 36
SYMBD_D_1LINELEAF_SASHWLINE			= 37
SYMBD_D_2LEAFOPGLASS_GLASS			= 38
SYMBD_D_9							= 39

iWindowShape			= 0	! SHAPE_RECTANGULAR
bParalellInCurvedWalls	= 0

! Turn Skin on Side
CAVITY_SIDE_BOTH	= 1
CAVITY_SIDE_LEFT	= 2
CAVITY_SIDE_RIGHT	= 3
CAVITY_SIDE_NONE	= 4

! Wall Inset Sizes
PARAPET_SIZE_AUTO	= 1
PARAPET_SIZE_SYMM	= 2
PARAPET_SIZE_ASYMM	= 3

! Wall Inset Bottom at
PARAPET_BOTTOM_CURRENTSTORY	= 1
PARAPET_BOTTOM_WALLBASE		= 2

! Wall Contour Line - iWallContourLine
WALL_CONTOUR_OFF		= 1
WALL_CONTOUR_INSIDE		= 2
WALL_CONTOUR_OUTSIDE	= 3
WALL_CONTOUR_BOTHSIDES	= 4

! iVentilationProfileType
VENTPROFILE_OVER_FRAME		= 2
VENTPROFILE_OVER_GLAZING	= 3

! ==============================================================================
! Localization
! ==============================================================================

dim stDetail2D[10]
	stDetail2D[ 1] = `по ПМВ`
	stDetail2D[ 2] = `Зависит от Масштаба`
	stDetail2D[ 3] = `1:50`
	stDetail2D[ 4] = `1:100`
	stDetail2D[ 5] = `1:200`
	stDetail2D[ 6] = `Откл.`
	stDetail2D[ 7] = `Китайский Простой`
	stDetail2D[ 8] = `Китайский Детальный`
	stDetail2D[ 9] = `1:20`
	stDetail2D[10] = `1:500`

dim stRevealTypes[10]	! gs_reveal_type
	stRevealTypes[ 1] = `Без Четверти - Торец`
	stRevealTypes[ 2] = `Без Четверти`
	stRevealTypes[ 3] = `Четверть`
	stRevealTypes[ 4] = `Отрицательная Четверть`
	stRevealTypes[ 5] = `Четверть с Рассветами`
	stRevealTypes[ 6] = `Четверть с Откосом`
	stRevealTypes[ 7] = `Историческая Четверть`
	stRevealTypes[ 8] = `Специальная Четверть`
	stRevealTypes[ 9] = `Четверть с Двумя Откосами`
	stRevealTypes[10] = `Четверть с Откосом Снаружи`

dim stRevealTypesBottom[4]		! gs_reveal_type_bottom
	stRevealTypesBottom[1] = `Одинаковый`
	stRevealTypesBottom[2] = `Без Четверти`
	stRevealTypesBottom[3] = `Четверть`
	stRevealTypesBottom[4] = `Отрицательная Четверть`

dim stRevealAngleEditBy[2]	! gs_reveal_angle_edit_by
	stRevealAngleEditBy[1] = `Угол и Глубина`
	stRevealAngleEditBy[2] = `Ширина и Глубина`

dim stClosureTypes[15]	! gs_closure_type
	stClosureTypes[ 1] = `Без Замыкания`
	stClosureTypes[ 2] = `Традиционное Замыкание Слоев`
	stClosureTypes[ 3] = `Готовое Замыкание Слоев`
	stClosureTypes[ 4] = `Специальное Замыкание`
	stClosureTypes[ 5] = `Сплошная Стена`
	stClosureTypes[ 6] = `Деревянная Каркасная Стена`
	stClosureTypes[ 7] = `Деревянная Каркасная Стена с Наружной Обшивкой`
	stClosureTypes[ 8] = `Кирпичная Облицовка`
	stClosureTypes[ 9] = `Настраиваемое Замыкание`
	stClosureTypes[10] = `Штукатурная Четверть`
	stClosureTypes[11] = `Утепленная Четверть`
	stClosureTypes[12] = `Утепление при Реконструкции`
	stClosureTypes[13] = `Замыкание Отделкой`
	stClosureTypes[14] = `Замыкание с Воздушной Прослойкой`
	stClosureTypes[15] = `Датское Замыкание`

dim stRevealOnSymbValues[6]
	stRevealOnSymbValues[1] = `по ПМВ`
	stRevealOnSymbValues[2] = `Всегда`
	stRevealOnSymbValues[3] = `До 1:50`
	stRevealOnSymbValues[4] = `До 1:100`
	stRevealOnSymbValues[5] = `До 1:200`
	stRevealOnSymbValues[6] = `Никогда`

dim stWallContourLine[4]	! gs_wcont_line_sl
	stWallContourLine[1] = `Откл.`
	stWallContourLine[2] = `Внутри`
	stWallContourLine[3] = `Снаружи`
	stWallContourLine[4] = `Обе Стороны`

dim stCavityClosureSide[4]	! gs_cavity_side
	stCavityClosureSide[1] = `Обе`
	stCavityClosureSide[2] = `Слева`
	stCavityClosureSide[3] = `Справа`
	stCavityClosureSide[4] = `Нет`

dim stCavityClosureTurnDir[2]	! gs_nTurnDir
	stCavityClosureTurnDir[1] = `Снаружи`
	stCavityClosureTurnDir[2] = `Внутри`

dim stDutchClosureToSide[2]
	stDutchClosureToSide[1] = `Снаружи`
	stDutchClosureToSide[2] = `Внутри`

dim stCavityClosureEditedJambSide[3]
	stCavityClosureEditedJambSide[1] = `Редактирование Обоих Откосов`
	stCavityClosureEditedJambSide[2] = `Редактирование Левого Откоса`
	stCavityClosureEditedJambSide[3] = `Редактирование Правого Откоса`

dim stCavityClosureEditedWallSide[2]
	stCavityClosureEditedWallSide[1] = `Снаружи`
	stCavityClosureEditedWallSide[2] = `Внутри`

dim stCavityClosureEditedSkinNumber[4]
	stCavityClosureEditedSkinNumber[1] = `1. Слой`
	stCavityClosureEditedSkinNumber[2] = `2. Слой`
	stCavityClosureEditedSkinNumber[3] = `3. Слой`
	stCavityClosureEditedSkinNumber[4] = `4. Слой`

dim stCavityClosureTurnInThickness[2]
	stCavityClosureTurnInThickness[1] = `Исходная`
	stCavityClosureTurnInThickness[2] = `Специальный`

dim stCavityClosureHatchOrientation[2]
	stCavityClosureHatchOrientation[1] = `Исходная`
	stCavityClosureHatchOrientation[2] = `Поворот Внутрь`

dim stMasonryArchTypes[7]	! gs_masonry_arch_int
	stMasonryArchTypes[1] = `Откл.`
	stMasonryArchTypes[2] = `Прямая Перемычка`
	stMasonryArchTypes[3] = `Клинчатая Перемычка`
	stMasonryArchTypes[4] = `Клинчатая Перемычка с Замковым Камнем`
	stMasonryArchTypes[5] = `Лучковая Перемычка`
	stMasonryArchTypes[6] = `Лучковая Перемычка с Замковым Камнем`
	stMasonryArchTypes[7] = `Декоративная Арка`

dim stMasonryArchStructure[2]	! gs_masonry_arch_structure
	stMasonryArchStructure[1] = `Штукатурная`
	stMasonryArchStructure[2] = `Кирпичная`

dim stParapetBottom[2]	! gs_parapet_bottom_st
	stParapetBottom[1] = `Текущий Этаж`
	stParapetBottom[2] = `Основание Стены`

dim stParapetSize[3] ! gs_parapet_sizes_st
	stParapetSize[1] = `Автоматически`
	stParapetSize[2] = `Симметрично`
	stParapetSize[3] = `Асимметрично`

dim stVisionPanelTypes[3]	! gs_list_visionpanel_type
	stVisionPanelTypes[1] = `Нет Видеопанели`
	stVisionPanelTypes[2] = `Видеопанель`
	stVisionPanelTypes[3] = `Полностью Стеклянная`

dim stLocationAs[3]
	stLocationAs[1]		= `Имя Помещения`
	stLocationAs[2]		= `Номер Помещения`
	stLocationAs[3]		= `Специальный`


! =============================================================================
! Array index definitions
! =============================================================================

iRevealType = gs_reveal_type_int - 1

if gs_bShowNewOnCC & iTypeDemolitionFill = RENOVATION_FILL_NEW then iRevealType = REVEAL_NO

iSillRevealType  = gs_reveal_doubleOuterTypeInt - 1
iBoardRevealType = gs_reveal_doubleInnerTypeInt - 1


! ==============================================================================
! Function Control
! ==============================================================================

if bEnableParapetInset		< 0	then bEnableParapetInset		= 0
if bEnableMasonryArch		< 0	then bEnableMasonryArch			= 0
if bEnableFaschen			< 0	then bEnableFaschen				= 0
if bEnableSill				< 0	then bEnableSill				= 0
if bEnableBoard				< 0	then bEnableBoard				= 0
if bEnableThreshold			< 0	then bEnableThreshold			= 0
if bEnableCasing			< 0	then bEnableCasing				= 0
if bEnableShutter			< 0	then bEnableShutter				= 0
if bEnableCustomCornerLeft	< 0	then bEnableCustomCornerLeft	= 0
if bEnableCustomCornerRight	< 0	then bEnableCustomCornerRight	= 0

bEnableWallContourHiddenLine	= 1

if gs_RevealTypeEnable  = 0 then gs_RevealTypeEnable  = 1 + 2 + 4 + 8 + 16 + 32 + 64 + 128
if gs_ClosureTypeEnable = 0 then gs_ClosureTypeEnable = 1 + 2 + 4 + 8 + 256 + 512 + 1024 + 2048

defaultSillDepth	= 0.120

iLineShapeCategory		= 1						! LINE_SHAPE_CATEGORY_SWING
if bDoorEmptyPanel then
	iLineShapeSwingEnable	= 1+8				! None, Opening Axis Line
else
	if gs_leaf_optype_m = 1 then				! LEAF_1L_SIDE_HUNG
		iLineShapeSwingEnable	= 2+4+8			! Curved, Straight, Opening Axis Line
	else
		iLineShapeSwingEnable	= 2+4+8+16		! Curved, Straight, Opening Axis Line, Leaf Axis Line
	endif
endif

! =============================================================================

curvedWall		= abs(WIDO_ORIG_DIST) > EPS
wallIsLeft		= (SYMB_ROTANGLE > EPS) exor WIDO_REVEAL_SIDE
bInclinedWall	= (abs(WALL_INCL) > EPS)

gs_IsCurved		= 0
gs_sill_curved	= 1
gs_board_curved	= 1
gs_sill_outside	= 0
gs_board_inside	= 0

gs_show_Hs	= 1

transomHeight		= (gs_door_transom)    * gs_transom_height
sidelightLeftWidth	= (gs_sidelight_left)  * gs_sidelight_width_left
sidelightRightWidth	= (gs_sidelight_right) * gs_sidelight_width_right


! =============================================================================
! Show Reveal On Symbol
! =============================================================================

bCanHaveReveal = (bittest(gs_RevealTypeEnable, REVEAL_POSITIVE)			| \
				  bittest(gs_RevealTypeEnable, REVEAL_NEGATIVE)			| \
				  bittest(gs_RevealTypeEnable, REVEAL_SLANTED)			| \
				  bittest(gs_RevealTypeEnable, REVEAL_SPLAYED)			| \
				  bittest(gs_RevealTypeEnable, REVEAL_HISTORIC)			| \
				  bittest(gs_RevealTypeEnable, REVEAL_DOUBLE)			| \
				  bittest(gs_RevealTypeEnable, REVEAL_DOUBLE_SPLAYED)	| \
				  bittest(gs_RevealTypeEnable, REVEAL_OUTSIDE_SPLAYED)	)


! =============================================================================
! Request globals for 2D (MVO Detail Level, MVO Reveal, Hotspots for IS)
! =============================================================================

iMVODetlevel2D			= 0
bMVOCasing2D			= 0
bShowAddHotspots		= 1
bMVODetlevelReveal		= 0
bShowAddHotspotsForIS	= 0

if GLOB_SCRIPT_TYPE = 2 then
	bGetMVOValueDlev2D		= (iDWDet2D = DETLEVEL_DW2D_MVO)
	bGetMVOValueCasing2D	= 0
	bGetMVOValueDlevReveal	= (iRevealOnSymbol = SHOWREV_MVO)
	bGetHotspotsForIS		= (GLOB_CONTEXT = 6)

	if bGetMVOValueDlev2D | bGetMVOValueDlevReveal | bGetHotspotsForIS then
		call "GetDWSymbSettings" parameters	bWindow					= 0,
											bGetMVOValueDlev2D		= bGetMVOValueDlev2D,
											bGetMVOValueCasing2D	= bGetMVOValueCasing2D,
											bGetMVOValueDlevReveal	= bGetMVOValueDlevReveal,
											bGetHotspotsForIS		= bGetHotspotsForIS,
						returned_parameters iMVODetlevel2D,
											bMVOCasing2D,
											bMVODetlevelReveal,
											bShowAddHotspotsForIS
	endif
endif

! =============================================================================
! Request globals for 3D (MVO SE Detail Level, Hotspots for IS)
! =============================================================================

if GLOB_SCRIPT_TYPE = 3 then
	iMVODetlevelSE			= 0
	bGetMVOValueDlevSE		= 0					! not used in INT
	bGetHotspotsForIS		= (GLOB_CONTEXT = 6)

	if bGetMVOValueDlevSE | bGetHotspotsForIS then
		call "GetDWSymbSettings" parameters	bWindow					= 0,
											bGetMVOValueDlevSE		= bGetMVOValueDlevSE,
											bGetHotspotsForIS		= bGetHotspotsForIS,
						returned_parameters iMVODetlevelSE,
											bShowAddHotspotsForIS
	endif
endif

! =============================================================================
! 2D detail level settings
! =============================================================================

iLoD2D	= SYMBD_SCALESENS
if GLOB_SCRIPT_TYPE = 2 then
	bShowGlassInMiddle2D	= 1
	if bGetMVOValueDlev2D then																			! by MVO
		iLoD2D	= iMVODetlevel2D
		if	iLoD2D <> SYMBD_S_1LINE &\																	! Non INT MVO Types
			iLoD2D <> SYMBD_S_1LINECL &\
			iLoD2D <> SYMBD_M_1LINELEAF_2LINE &\
			iLoD2D <> SYMBD_M_2LINELEAFCL_GLASS &\
			iLoD2D <> SYMBD_D_2LINELEAFOP_GLASS &\
			iLoD2D <> SYMBD_D_2LINELEAFCL_REBATEONGLASS then

			iLoD2D	= SYMBD_D_2LINELEAFOP_GLASS
			if iMVODetlevel2D < SYMBD_D_2LINELEAFOP_GLASS then		iLoD2D = SYMBD_M_1LINELEAF_2LINE
			if iMVODetlevel2D < SYMBD_M_1LINELEAF_2LINE then		iLoD2D = SYMBD_S_1LINE
		endif
		
		if GLOB_PREVIEW_MODE = 3 then				! in case of 2D-3D Favorite Preview
			iLoD2D = SYMBD_D_2LINELEAFOP_GLASS
		endif
		if iLoD2D = SYMBD_M_1LINELEAF_2LINE	then bShowGlassInMiddle2D	= 0
	else
		if iDWDet2D = DETLEVEL_DW2D_50		then	iLoD2D = SYMBD_D_2LINELEAFOP_GLASS					! Detailed --> INT 50
		if iDWDet2D = DETLEVEL_DW2D_100		then	iLoD2D = SYMBD_M_1LINELEAF_2LINE					! Middle --> INT 100
		if iDWDet2D = DETLEVEL_DW2D_200		then	iLoD2D = SYMBD_S_1LINE								! Simple --> INT 200
		if iDWDet2D = DETLEVEL_DW2D_OFF		then	iLoD2D = SYMBD_OFF									! Off
		if iDWDet2D = DETLEVEL_DW2D_CHISMPL	then	iLoD2D = SYMBD_S_2LINE								! Chinese Simple
		if iDWDet2D = DETLEVEL_DW2D_CHIDET	then	iLoD2D = SYMBD_D_2LINELEAFOP_2LINE					! Chinese Detailed
		if iDWDet2D = DETLEVEL_DW2D_20		then	iLoD2D = SYMBD_D_2LEAFOPGLASS_GLASS					! Detailed --> DAN 20, INT 50 Storefronts
		if iDWDet2D = DETLEVEL_DW2D_500		then	iLoD2D = SYMBD_S_1LINE								! DACH 500
	endif
endif

! =============================================================================
! Hide Variable Closure Type NED, FLA
! =============================================================================

iClosureType = gs_closure_type_int - 1
if GLOB_SCRIPT_TYPE = 2 then
	if	bHideVariClosTypeInSimple2D &\
		iClosureType = CLOSURE_VARIABLE	&\
		((iLoD2D < SYMBD_M_1LINELEAF_2LINE & iLoD2D > SYMBD_SCALESENS) | (iLoD2D = SYMBD_SCALESENS & GLOB_SCALE > 150)) then
		iClosureType = CLOSURE_NO
	endif
endif

! ==============================================================================
! Symbol at Middle
! ==============================================================================

SymbolMid_shiftDy	= 0
bDWSymbolAtMiddle	= 0

signrevealside = not(WIDO_REVEAL_SIDE) - WIDO_REVEAL_SIDE

if GLOB_SCRIPT_TYPE = 2 then
	if GLOB_CONTEXT = 2 | GLOB_CONTEXT = 22 then
		if iLoD2D = SYMBD_S_2LINE | iLoD2D = SYMBD_D_2LINELEAFOP_2LINE then bDWSymbolAtMiddle = 1
	endif
endif
if GLOB_SCRIPT_TYPE = 3 then
	if GLOB_CONTEXT = 4 | GLOB_CONTEXT = 24 | GLOB_CONTEXT = 6 then
		if lod3D = 5 then bDWSymbolAtMiddle = 1
	endif
endif

SymbolMid_shiftDy = bDWSymbolAtMiddle * (WIDO_SILL - WALL_THICKNESS / 2 + WIDO_FRAME_THICKNESS / 2) * signrevealside
signrotangle = (abs(SYMB_ROTANGLE-180) < EPS) - not(SYMB_ROTANGLE)


! =============================================================================
! Definitions
! =============================================================================

bDrawOutsideTrim	= 0
bDrawInsideTrim		= 0
bDrawSill			= 0
bDrawBoard			= 0
bDisabeMirroring = 0
bMirrored = (bDisabeMirroring & SYMB_MIRRORED)

ac_zone_on_reveal_side = 1
if WIDO_REVEAL_SIDE exor not(gs_bOpeningToZone) then
	ac_zone_on_reveal_side = not(ac_zone_on_reveal_side)
endif
parameters ac_zone_on_reveal_side = ac_zone_on_reveal_side

isVentilationOverFrame = (bEnableVentilationProfile & bVentilationProfile & (iVentilationProfileType = VENTPROFILE_OVER_FRAME))


! =============================================================================
! Nominal Size
! =============================================================================

if gs_nominal_size > 0 then
	gs_wallhole_nominal	= 0
	gs_reveal_nominal	= 0
	gs_unit_nominal		= 0
	gs_egress_nominal	= 0
	gs_leaf_nominal		= 0
	bSetParams = 0

	if not(bSetParams) & bittest(gs_nominal_size, 0) then: gs_wallhole_nominal	= 1: bSetParams = 1: endif
	if not(bSetParams) & bittest(gs_nominal_size, 1) then: gs_reveal_nominal	= 1: bSetParams = 1: endif
	if not(bSetParams) & bittest(gs_nominal_size, 2) then: gs_unit_nominal		= 1: bSetParams = 1: endif
	if not(bSetParams) & bittest(gs_nominal_size, 3) then: gs_egress_nominal	= 1: bSetParams = 1: endif
	if not(bSetParams) & bittest(gs_nominal_size, 4) then: gs_leaf_nominal		= 1: bSetParams = 1: endif

	if bSetParams & GLOB_SCRIPT_TYPE = 5 then
		parameters	gs_wallhole_nominal	= gs_wallhole_nominal,
					gs_reveal_nominal	= gs_reveal_nominal,
					gs_unit_nominal		= gs_unit_nominal,
					gs_egress_nominal	= gs_egress_nominal,
					gs_leaf_nominal		= gs_leaf_nominal
	endif
endif


! ==============================================================================
! Retroactive Logic
! ==============================================================================

bEnablePlasterLeftIn	= 1
bEnablePlasterLeftOut	= 1
bEnablePlasterRightIn	= 1
bEnablePlasterRightOut	= 1
bEnablePlasterTopIn		= 1
bEnablePlasterTopOut	= 1
bEnablePlasterBottomIn	= 1
bEnablePlasterBottomOut	= 1

bOutsideAtRefLine = (wallIsLeft exor (AC_Wall_Direction_Type <> 1 & AC_Wall_Direction_Type <> 3))
if bOutsideAtRefLine then
	if bDrawInsideTrim then
		bEnablePlasterLeftOut	= 0
		bEnablePlasterRightOut	= 0
		bEnablePlasterTopOut	= 0
		bEnablePlasterBottomOut	= 0
	endif
	if bDrawOutsideTrim then
		bEnablePlasterLeftIn	= 0
		bEnablePlasterRightIn	= 0
		bEnablePlasterTopIn		= 0
		bEnablePlasterBottomIn	= 0
	endif
	if bDrawSill then
		bEnablePlasterBottomIn	= 0
	endif
	if bDrawBoard then
		bEnablePlasterBottomOut	= 0
	endif
else
	if bDrawOutsideTrim then
		bEnablePlasterLeftOut	= 0
		bEnablePlasterRightOut	= 0
		bEnablePlasterTopOut	= 0
		bEnablePlasterBottomOut	= 0
	endif
	if bDrawInsideTrim then
		bEnablePlasterLeftIn	= 0
		bEnablePlasterRightIn	= 0
		bEnablePlasterTopIn		= 0
		bEnablePlasterBottomIn	= 0
	endif
	if bDrawSill then
		bEnablePlasterBottomOut	= 0
	endif
	if bDrawBoard then
		bEnablePlasterBottomIn	= 0
	endif
endif


! =============================================================================
! Plaster Geometry
! =============================================================================

call "PlasterGeometry" parameters gs_macro_version = 12,
	AC_Wall_Direction_Type	= AC_Wall_Direction_Type,
	bEnablePlasterLeftIn	= bEnablePlasterLeftIn,
	bEnablePlasterLeftOut	= bEnablePlasterLeftOut,
	bEnablePlasterRightIn	= bEnablePlasterRightIn,
	bEnablePlasterRightOut	= bEnablePlasterRightOut,
	bEnablePlasterTopIn		= bEnablePlasterTopIn,
	bEnablePlasterTopOut	= bEnablePlasterTopOut,
	bEnablePlasterBottomIn	= bEnablePlasterBottomIn,
	bEnablePlasterBottomOut	= bEnablePlasterBottomOut,
	gs_useWallFinishSkin	= gs_useWallFinishSkin,
	gs_maxPlasterThk		= gs_maxPlasterThk,
	gs_bAutoTurnOut			= gs_bAutoTurnOut,
	gs_bOverOut				= gs_bOverOut,
	gs_bAutoTurnIn			= gs_bAutoTurnIn,
	gs_bOverIn				= gs_bOverIn,
	iClosureType			= iClosureType,
	gs_custom_cc_array_left	= gs_custom_cc_array_left,
	gs_custom_cc_array_right= gs_custom_cc_array_right,
returned_parameters	thkPlasterAtSillLeft,
					thkPlasterAtSillSlLeft,
					thkPlasterAtSillSlLeftBottom,
					thkPlasterAtSillRight,
					thkPlasterAtSillSlRight,
					thkPlasterAtSillSlRightBottom,
					thkPlasterAtSillTop,
					thkPlasterAtSillBottom,
					thkPlasterAtBoardLeft,
					thkPlasterAtBoardSlLeft,
					thkPlasterAtBoardSlLeftBottom,
					thkPlasterAtBoardRight,
					thkPlasterAtBoardSlRight,
					thkPlasterAtBoardSlRightBottom,
					thkPlasterAtBoardTop,
					thkPlasterAtBoardBottom,
					possibleSkinTurnIn,
					possibleSkinTurnOut,
					maxSkinTurnIn,
					maxSkinTurnOut,
					nSkinTurnIn,
					nSkinTurnOut


! =============================================================================
! Show Reveal On Symbol
! =============================================================================

bShowReveal = 1
if GLOB_SCRIPT_TYPE = 2 then
	if bGetMVOValueDlevReveal then																					! by MVO
		bShowReveal = bMVODetlevelReveal
	else
		bShowReveal = 1
		if iRevealOnSymbol = SHOWREV_NEVER												then bShowReveal = 0		! Never
		if iLoD2D = SYMBD_SCALESENS then																			! Scale sensitive
			if iRevealOnSymbol = SHOWREV_UPTO50 & GLOB_SCALE > 75						then bShowReveal = 0		! Up to 1:50
			if iRevealOnSymbol = SHOWREV_UPTO100 & GLOB_SCALE > 150						then bShowReveal = 0		! Up to 1:100
		else
			if iRevealOnSymbol = SHOWREV_UPTO50 & iLoD2D < SYMBD_D_2LINELEAFOP_GLASS	then bShowReveal = 0		! Up to 1:50
			if iRevealOnSymbol = SHOWREV_UPTO100 & iLoD2D < SYMBD_M_1LINELEAF_2LINE		then bShowReveal = 0		! Up to 1:100
		endif
		if iRevealOnSymbol = SHOWREV_UPTO200 & GLOB_SCALE > 200							then bShowReveal = 0		! Up to 1:200
	endif
endif

! =============================================================================
! Wallhole Oversize
! =============================================================================

overSize = 0

if bMirrored then
	overSizeLeft	= overSize * not(gs_stack_right)
	overSizeRight	= overSize * not(gs_stack_left)
else
	overSizeLeft	= overSize * not(gs_stack_left)
	overSizeRight	= overSize * not(gs_stack_right)
endif

overSizeLower = 0
overSizeUpper	= 0


! =============================================================================
! Wallhole Geometry
! =============================================================================

refWidth	= A
leftWidth	= ac_wallhole_width / 2
rightWidth	= ac_wallhole_width / 2

openingHeight	= ac_wallhole_height
gs_IsCurved = 0


! ==============================================================================
! Calculations for Curved Walls
! ==============================================================================

if curvedWall then
	WOD = abs(WIDO_ORIG_DIST) - (SYMB_ROTANGLE > EPS) * WIDO_FRAME_THICKNESS

	leftAlfa	= atn(leftWidth  / WOD)
	rightAlfa	= atn(rightWidth / WOD)
endif

! ==============================================================================
! Calculations for Trapezoid Walls
! ==============================================================================

if abs(WALL_INCL) > EPS then
	bInclinedWall = 1
	bInclDir = SYMB_MIRRORED exor (SYMB_ROTANGLE > EPS)	! (0 / 1)
	iInclDir = not(bInclDir) - bInclDir					! (1 / -1)

	incH = cos(WALL_INCL)
	incV = sin(WALL_INCL) * iInclDir

	incHor = tan(WALL_INCL)
else
	bInclinedWall = 0
endif


! =============================================================================
! Wallhole Reveal Geometry
! =============================================================================

origRevealType					= iRevealType
origRevealLeft					= gs_reveal_left
origRevealRight					= gs_reveal_right
origRevealTop					= gs_reveal_top
origRevealBottom				= gs_reveal_bottom
origRevealLeftAngle				= gs_reveal_left_angle
origRevealRightAngle			= gs_reveal_right_angle
origRevealTopAngle				= gs_reveal_top_angle
origRevealBottomAngle			= gs_reveal_bottom_angle
origRevealSplayedInnerLeft		= gs_reveal_splayed_innerLeft
origRevealSplayedInnerRight		= gs_reveal_splayed_innerRight
origRevealSplayedInnerTop		= gs_reveal_splayed_innerTop
origRevealSplayedInnerBottom	= gs_reveal_splayed_innerBottom
origRevealOuterJambDepth		= gs_reveal_outer_jamb_depth
origRevealDoubleInnerLeft		= gs_reveal_double_innerLeft
origRevealDoubleInnerRight		= gs_reveal_double_innerRight
origRevealDoubleInnerTop		= gs_reveal_double_innerTop
origRevealDoubleInnerBottom		= gs_reveal_double_innerBottom
origRevealOuterLeftAngle		= 0 ! gs_reveal_outerLeft_angle
origRevealOuterRightAngle		= 0 ! gs_reveal_outerRight_angle
origRevealOuterTopAngle			= 0 ! gs_reveal_outerTop_angle
origRevealOuterBottomAngle		= 0 ! gs_reveal_outerBottom_angle
origRevealInnerWidthLeft		= 0 ! gs_reveal_innerLeft_width
origRevealInnerWidthRight		= 0 ! gs_reveal_innerRight_width
origRevealInnerWidthTop			= 0 ! gs_reveal_innerTop_width
origRevealInnerWidthBottom		= 0 ! gs_reveal_innerBottom_width
origRevealOuterWidthLeft		= 0 ! gs_reveal_outerLeft_width
origRevealOuterWidthRight		= 0 ! gs_reveal_outerRight_width
origRevealOuterWidthTop			= 0 ! gs_reveal_outerTop_width
origRevealOuterWidthBottom		= 0 ! gs_reveal_outerBottom_width

dim revealPointsArray[]
dim iRevealPointsIdx[20]

dim bAddPoint[4]

dim  leftWallholeRevealPnts[][2]
dim rightWallholeRevealPnts[][2]

call "RevealGeometry" parameters A	= A,
	AC_WallType						= AC_WallType,
	AC_WindowInWallContour			= AC_WindowInWallContour,
	AC_WallContourPolygon			= AC_WallContourPolygon,
	gs_macro_version				= 12,
	iWindowShape					= iWindowShape,
	refWidth						= refWidth,
	leftWidth						= leftWidth  + gs_left_oversize,
	rightWidth						= rightWidth + gs_right_oversize,
	cornerPostX						= 0,
	bWndCurved						= gs_IsCurved,
	bParalellInCurvedWalls			= bParalellInCurvedWalls,
	bShowReveal						= bShowReveal,
	bDWSymbolAtMiddle				= bDWSymbolAtMiddle,
	iClosureType					= iClosureType,
	iRevealType						= origRevealType,
	gs_reveal_type_bottom_int		= gs_reveal_type_bottom_int,
	iSillRevealType					= iSillRevealType,
	iBoardRevealType				= iBoardRevealType,
	gs_wido_sill					= gs_wido_sill,
	gs_reveal_uniform				= gs_reveal_uniform,
	gs_reveal_left					= origRevealLeft,
	gs_reveal_right					= origRevealRight,
	gs_reveal_top					= origRevealTop,
	gs_reveal_bottom				= origRevealBottom,
	gs_reveal_splayed_innerLeft		= origRevealSplayedInnerLeft,
	gs_reveal_splayed_innerRight	= origRevealSplayedInnerRight,
	gs_reveal_splayed_innerTop		= origRevealSplayedInnerTop,
	gs_reveal_splayed_innerBottom	= origRevealSplayedInnerBottom,
	gs_reveal_double_innerLeft		= origRevealDoubleInnerLeft,
	gs_reveal_double_innerRight		= origRevealDoubleInnerRight,
	gs_reveal_double_innerTop		= origRevealDoubleInnerTop,
	gs_reveal_double_innerBottom	= origRevealDoubleInnerBottom,
	gs_reveal_outer_jamb_depth		= origRevealOuterJambDepth,
	gs_reveal_left_angle			= origRevealLeftAngle,
	gs_reveal_right_angle			= origRevealRightAngle,
	gs_reveal_top_angle				= origRevealTopAngle,
	gs_reveal_bottom_angle			= origRevealBottomAngle,
	gs_reveal_outerLeft_angle		= origRevealOuterLeftAngle,
	gs_reveal_outerRight_angle		= origRevealOuterRightAngle,
	gs_reveal_outerTop_angle		= origRevealOuterTopAngle,
	gs_reveal_outerBottom_angle		= origRevealOuterBottomAngle,
	gs_reveal_angle_edit_by_int		= 1,
	gs_reveal_innerLeft_width		= origRevealInnerWidthLeft,
	gs_reveal_innerRight_width		= origRevealInnerWidthRight,
	gs_reveal_innerTop_width		= origRevealInnerWidthTop,
	gs_reveal_innerBottom_width		= origRevealInnerWidthBottom,
	gs_reveal_outerLeft_width		= origRevealOuterWidthLeft,
	gs_reveal_outerRight_width		= origRevealOuterWidthRight,
	gs_reveal_outerTop_width		= origRevealOuterWidthTop,
	gs_reveal_outerBottom_width		= origRevealOuterWidthBottom,
	gs_reveal_left_sL				= 0,
	gs_reveal_right_sR				= 0,
	gs_reveal_bottom_sL				= 0,
	gs_reveal_bottom_sR				= 0,
	gs_reveal_double_innerLeft_sL	= 0,
	gs_reveal_double_innerRight_sR	= 0,
	gs_reveal_double_innerBottom_sL	= 0,
	gs_reveal_double_innerBottom_sR	= 0,
	gs_mountingFrame				= gs_mountingFrame,
	gs_mountingFrame_depth			= gs_mountingFrame_depth,
	thkPlasterAtSillLeft			= thkPlasterAtSillLeft,
	thkPlasterAtSillRight			= thkPlasterAtSillRight,
	thkPlasterAtBoardLeft			= thkPlasterAtBoardLeft,
	thkPlasterAtBoardRight			= thkPlasterAtBoardRight,
	bLeftCornerFunction				= bLeftCornerFunction,
	leftCornerAngle					= leftCornerAngle,
	leftConnWallThk					= leftConnWallThk,
	bRightCornerFunction			= bRightCornerFunction,
	rightCornerAngle				= rightCornerAngle,
	rightConnWallThk				= rightConnWallThk,
	bCornerWindow					= 0,
	bGangingLeft					= gs_stack_left,
	bGangingRight					= gs_stack_right,
	gs_unit_nominal					= gs_unit_nominal,
	gs_reveal_nominal				= gs_reveal_nominal,
	gs_egress_nominal				= gs_egress_nominal,
	gs_leaf_nominal					= gs_leaf_nominal,
	gs_tolerance_left				= gs_tolerance_left,
	gs_tolerance_right				= gs_tolerance_right,
	gs_left_oversize				= gs_left_oversize,
	gs_right_oversize				= gs_right_oversize,
returned_parameters	iRevealType,
	iRevealTypeForDisplay,
	iClosureType,
	bShowReveal,
	leftWallholeWidth,
	rightWallholeWidth,
	originalOffsWindowX,
	offsWindowX,
	gs_reveal_left,
	gs_reveal_right,
	revealInnerLeft,
	revealInnerRight,
	gs_reveal_top,
	gs_reveal_bottom,
	gs_reveal_splayed_innerTop,
	gs_reveal_splayed_innerBottom,
	gs_reveal_double_innerLeft,
	gs_reveal_double_innerRight,
	gs_reveal_double_innerTop,
	gs_reveal_double_innerBottom,
	gs_reveal_outer_jamb_depth,
	gs_reveal_left_angle,
	gs_reveal_right_angle,
	gs_reveal_top_angle,
	gs_reveal_bottom_angle,
	gs_reveal_outerLeft_angle,
	gs_reveal_outerRight_angle,
	gs_reveal_outerTop_angle,
	gs_reveal_outerBottom_angle,
	gs_reveal_left_sL,
	gs_reveal_right_sR,
	gs_reveal_bottom_sL,
	gs_reveal_bottom_sR,
	gs_reveal_double_innerLeft_sL,
	gs_reveal_double_innerRight_sR,
	gs_reveal_double_innerBottom_sL,
	gs_reveal_double_innerBottom_sR,
	radSill,
	radBoard,
	WOD,
	iRevealPointsIdx,
	bAddPoint,
	revealPointsArray


for i=1 to iRevealPointsIdx[10]
	idx = 2 * (i - 1) + 1
	leftWallholeRevealPnts[i][1] = revealPointsArray[idx]
	leftWallholeRevealPnts[i][2] = revealPointsArray[idx + 1]
next i

for i=1 to iRevealPointsIdx[20]
	idx = 2 * (iRevealPointsIdx[10] + i - 1) + 1
	rightWallholeRevealPnts[i][1] = revealPointsArray[idx]
	rightWallholeRevealPnts[i][2] = revealPointsArray[idx + 1]
next i


! =============================================================================
! Wall Framing Reveal Geometry
! =============================================================================

dim leftWallFrameRevealPnts[][2]
dim rightWallFrameRevealPnts[][2]

if abs(gs_left_oversize) > EPS | abs(gs_right_oversize) > EPS then
	if GLOB_SCRIPT_TYPE = 2 | GLOB_SCRIPT_TYPE = 3 | ((GLOB_SCRIPT_TYPE = 4 | GLOB_SCRIPT_TYPE = 5) & gs_sunShade_iType <> 0) then
		call "RevealGeometry" parameters A	= A,
			AC_WallType						= AC_WallType,
			AC_WindowInWallContour			= AC_WindowInWallContour,
			AC_WallContourPolygon			= AC_WallContourPolygon,
			gs_macro_version				= 12,
			iWindowShape					= iWindowShape,
			bDoorWithSidelightSupport		= bDoorWithSidelightSupport,
			refWidth						= refWidth,
			leftWidth						= leftWidth,
			rightWidth						= rightWidth,
			cornerPostX						= 0,
			bWndCurved						= gs_IsCurved,
			bParalellInCurvedWalls			= bParalellInCurvedWalls,
			bShowReveal						= bShowReveal,
			bDWSymbolAtMiddle				= bDWSymbolAtMiddle,
			iClosureType					= iClosureType,
			iRevealType						= origRevealType,
			gs_reveal_type_bottom_int		= gs_reveal_type_bottom_int,
			iSillRevealType					= iSillRevealType,
			iBoardRevealType				= iBoardRevealType,
			gs_wido_sill					= gs_wido_sill,
			gs_reveal_uniform				= gs_reveal_uniform,
			gs_reveal_left					= origRevealLeft,
			gs_reveal_right					= origRevealRight,
			gs_reveal_top					= origRevealTop,
			gs_reveal_bottom				= origRevealBottom,
			gs_reveal_splayed_innerLeft		= origRevealSplayedInnerLeft,
			gs_reveal_splayed_innerRight	= origRevealSplayedInnerRight,
			gs_reveal_splayed_innerTop		= origRevealSplayedInnerTop,
			gs_reveal_splayed_innerBottom	= origRevealSplayedInnerBottom,
			gs_reveal_double_innerLeft		= origRevealDoubleInnerLeft,
			gs_reveal_double_innerRight		= origRevealDoubleInnerRight,
			gs_reveal_double_innerTop		= origRevealDoubleInnerTop,
			gs_reveal_double_innerBottom	= origRevealDoubleInnerBottom,
			gs_reveal_outer_jamb_depth		= origRevealOuterJambDepth,
			gs_reveal_left_angle			= origRevealLeftAngle,
			gs_reveal_right_angle			= origRevealRightAngle,
			gs_reveal_top_angle				= origRevealTopAngle,
			gs_reveal_bottom_angle			= origRevealBottomAngle,
			gs_reveal_outerLeft_angle		= origRevealOuterLeftAngle,
			gs_reveal_outerRight_angle		= origRevealOuterRightAngle,
			gs_reveal_outerTop_angle		= origRevealOuterTopAngle,
			gs_reveal_outerBottom_angle		= origRevealOuterBottomAngle,
			gs_reveal_angle_edit_by_int		= 1,
			gs_reveal_innerLeft_width		= origRevealInnerWidthLeft,
			gs_reveal_innerRight_width		= origRevealInnerWidthRight,
			gs_reveal_innerTop_width		= origRevealInnerWidthTop,
			gs_reveal_innerBottom_width		= origRevealInnerWidthBottom,
			gs_reveal_outerLeft_width		= origRevealOuterWidthLeft,
			gs_reveal_outerRight_width		= origRevealOuterWidthRight,
			gs_reveal_outerTop_width		= origRevealOuterWidthTop,
			gs_reveal_outerBottom_width		= origRevealOuterWidthBottom,
			gs_reveal_left_sL				= gs_reveal_left_sL,
			gs_reveal_right_sR				= gs_reveal_right_sR,
			gs_reveal_bottom_sL				= gs_reveal_bottom_sL,
			gs_reveal_bottom_sR				= gs_reveal_bottom_sR,
			gs_reveal_double_innerLeft_sL	= gs_reveal_double_innerLeft_sL,
			gs_reveal_double_innerRight_sR	= gs_reveal_double_innerRight_sR,
			gs_reveal_double_innerBottom_sL	= gs_reveal_double_innerBottom_sL,
			gs_reveal_double_innerBottom_sR	= gs_reveal_double_innerBottom_sR,
			gs_mountingFrame				= gs_mountingFrame,
			gs_mountingFrame_depth			= gs_mountingFrame_depth,
			thkPlasterAtSillLeft			= thkPlasterAtSillLeft,
			thkPlasterAtSillRight			= thkPlasterAtSillRight,
			thkPlasterAtBoardLeft			= thkPlasterAtBoardLeft,
			thkPlasterAtBoardRight			= thkPlasterAtBoardRight,
			bLeftCornerFunction				= bLeftCornerFunction,
!			leftCornerAngle					= leftCornerAngle,
!			leftConnWallThk					= leftConnWallThk,
			bRightCornerFunction			= bRightCornerFunction,
!			rightCornerAngle				= rightCornerAngle,
!			rightConnWallThk				= rightConnWallThk,
			bCornerWindow					= 0,
			bGangingLeft					= gs_stack_left,
			bGangingRight					= gs_stack_right,
			gs_unit_nominal					= gs_unit_nominal,
			gs_reveal_nominal				= gs_reveal_nominal,
			gs_tolerance_left				= gs_tolerance_left,
			gs_tolerance_right				= gs_tolerance_right,
			gs_left_oversize				= 0,
			gs_right_oversize				= 0,
		returned_parameters	dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			leftWidth,
			rightWidth,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			iRevealPointsIdx,
			dummyParam,dummyParam,dummyParam,dummyParam,
			revealPointsArray

		for i=1 to iRevealPointsIdx[10]
			idx = 2 * (i - 1) + 1
			leftWallFrameRevealPnts[i][1] = revealPointsArray[idx]
			leftWallFrameRevealPnts[i][2] = revealPointsArray[idx + 1]
		next i

		for i=1 to iRevealPointsIdx[20]
			idx = 2 * (iRevealPointsIdx[10] + i - 1) + 1
			rightWallFrameRevealPnts[i][1] = revealPointsArray[idx]
			rightWallFrameRevealPnts[i][2] = revealPointsArray[idx + 1]
		next i
	endif
else
	leftWallFrameRevealPnts =  leftWallholeRevealPnts
	rightWallFrameRevealPnts = rightWallholeRevealPnts

	leftWidth	= leftWallholeWidth
	rightWidth	= rightWallholeWidth
endif


! ==============================================================================
! Reveal Points Indexes
! ==============================================================================

idxFrameStartRevealLeft		= iRevealPointsIdx[3]
idxFrameEndRevealLeft		= iRevealPointsIdx[4]
idxFrameStartRevealRight	= iRevealPointsIdx[13]
idxFrameEndRevealRight		= iRevealPointsIdx[14]


! =============================================================================
! Wall Framing Reveal Geometry
! =============================================================================

dim lineSections[][7]
lineSections[1][1] = 0	! Initialization
lineSections[1][2] = 0
lineSections[1][3] = 0
lineSections[1][4] = 0
lineSections[1][5] = 0
lineSections[1][6] = 0
lineSections[1][7] = 0

if GLOB_SCRIPT_TYPE = 2 then

	bCompositeWall		= (WALL_SKINS_NUMBER > 0)

	bSkinTurnLeft	= 0
	bSkinTurnRight	= 0
	if bCompositeWall then
		if	iClosureType = CLOSURE_TRADITIONAL |\
			iClosureType = CLOSURE_VARIABLE |\
			iClosureType = CLOSURE_DUTCH_VARIABLE |\
			iClosureType = CLOSURE_PREFABRICATED then

			bSkinTurnLeft	= (iCavityClosureSide = CAVITY_SIDE_BOTH | iCavityClosureSide = CAVITY_SIDE_LEFT)
			bSkinTurnRight	= (iCavityClosureSide = CAVITY_SIDE_BOTH | iCavityClosureSide = CAVITY_SIDE_RIGHT)
		endif
		if iClosureType = CLOSURE_CUSTOM then
			bSkinTurnLeft	= 1
			bSkinTurnRight	= 1
		endif

		bPlasterTurnSillLeft	= (thkPlasterAtSillLeft > EPS)
		bPlasterTurnSillRight	= (thkPlasterAtSillRight > EPS)
		bPlasterTurnBoardLeft	= (thkPlasterAtBoardLeft > EPS)
		bPlasterTurnBoardRight	= (thkPlasterAtBoardRight > EPS)
	else
		bPlasterTurnSillLeft	= 0
		bPlasterTurnSillRight	= 0
		bPlasterTurnBoardLeft	= 0
		bPlasterTurnBoardRight	= 0
	endif

	dim tempLineSections[]
	tempLineSections[1] = 0	! Initialization

	call "FramingGeometry" parameters gs_macro_version = 12,
		refWidth				= refWidth,
		leftWidth				= leftWidth  + gs_left_oversize,
		rightWidth				= rightWidth + gs_right_oversize,
		bWndCurved				= gs_IsCurved,
		bParalellInCurvedWalls	= bParalellInCurvedWalls,
		radSill					= radSill,
		radBoard				= radBoard,
		WOD						= WOD,
		bSkinTurnLeft			= bSkinTurnLeft,
		bSkinTurnRight			= bSkinTurnRight,
		bPlasterTurnSillLeft	= bPlasterTurnSillLeft,
		bPlasterTurnSillRight	= bPlasterTurnSillRight,
		bPlasterTurnBoardLeft	= bPlasterTurnBoardLeft,
		bPlasterTurnBoardRight	= bPlasterTurnBoardRight,
		bLeftCornerFunction		= bLeftCornerFunction,
		bRightCornerFunction	= bRightCornerFunction,
		iRevealType				= iRevealTypeForDisplay,
		gs_reveal_left			= gs_reveal_left,
		gs_reveal_right			= gs_reveal_right,
		gs_reveal_left_angle	= gs_reveal_left_angle,
		gs_reveal_right_angle	= gs_reveal_right_angle,
		leftRevealPnts			= leftWallholeRevealPnts,
		rightRevealPnts			= rightWallholeRevealPnts,
		iRevealPointsIdx		= iRevealPointsIdx,
		bGangingLeft			= gs_stack_left,
		bGangingRight			= gs_stack_right,
		gs_left_oversize		= gs_left_oversize,
		gs_right_oversize		= gs_right_oversize,
		gs_sill_outside			= gs_sill_outside,
!		iSillType				= iSillType,
!		gs_sill_nosing			= gs_sill_nosing,
!		gs_sill_ovhg_left		= gs_sill_ovhg_left,
!		gs_sill_ovhg_right		= gs_sill_ovhg_right,
!		gs_board_inside			= gs_board_inside,
!		gs_board_ovhg_left		= gs_board_ovhg_left,
!		gs_board_ovhg_right		= gs_board_ovhg_right,
		bDrawOutsideTrim		= bDrawOutsideTrim,
		bDrawInsideTrim			= bDrawInsideTrim,
!		gs_trim_outside_uniform	= gs_trim_outside_uniform,
!		gs_trim_inside_uniform	= gs_trim_inside_uniform,
!		gs_trim_width_in		= gs_trim_width_in,
!		gs_trim_width_out		= gs_trim_width_out,
!		gs_trim_offs_in			= gs_trim_offs_in,
!		gs_trim_offs_out		= gs_trim_offs_out,
!		gs_trim_thk_in			= gs_trim_thk_in,
!		gs_trim_thk_out			= gs_trim_thk_out,
!		gs_tw_left_in			= gs_tw_left_in,
!		gs_tw_right_in			= gs_tw_right_in,
!		gs_tw_left_out			= gs_tw_left_out,
!		gs_tw_right_out			= gs_tw_right_out,
!		gs_trim_atframe_out		= gs_trim_atframe_out,
!		gs_trim_atframe_in		= gs_trim_atframe_in,
		msOpeningSideWidth2		= msOpeningSideWidth2,
		msOpeningSideWidth1		= msOpeningSideWidth1,
		msOppositeSideWidth2		= msOppositeSideWidth2,
		msOppositeSideWidth1		= msOppositeSideWidth1,
		EgressMSWidth 			= EgressMSWidth,
		egressOffset 			= egressOffset,
	returned_parameters	tempLineSections

	numLineSections = round_int(vardim1(tempLineSections) / 7)
	idx = 0
	for i=1 to numLineSections
		for j=1 to 7
			lineSections[i][j] = tempLineSections[idx + j]
		next j
		idx = idx + 7
	next i
endif


! =============================================================================
! Frame Overhang Calculations
! =============================================================================

if GLOB_SCRIPT_TYPE = 2 | GLOB_SCRIPT_TYPE = 3 then
	fx1L = -leftWidth
	fx2L = -leftWidth

	fx1L =  rightWidth
	fx2L =  rightWidth

	fx1L = leftWallFrameRevealPnts[idxFrameStartRevealLeft][1]
	fx2L = leftWallFrameRevealPnts[idxFrameEndRevealLeft][1]

	fx1R = rightWallFrameRevealPnts[idxFrameStartRevealRight][1]
	fx2R = rightWallFrameRevealPnts[idxFrameEndRevealRight][1]

	! Curved
	SymbMid_LeftDx = 0
	SymbMid_RightDx = 0
	if GLOB_CONTEXT = 2 | GLOB_CONTEXT = 22 | GLOB_CONTEXT = 4 | GLOB_CONTEXT = 24 | GLOB_CONTEXT = 6 then
		if curvedWall then
			SymbMid_LeftDx = signrotangle * SymbolMid_shiftDy * tan(leftAlfa)
			SymbMid_RightDx = signrotangle * SymbolMid_shiftDy * tan(rightAlfa)
		endif
	endif

	leftFrameOverhang	= bShowReveal * (overSizeLeft + gs_left_oversize + gs_tolerance_left) - SymbMid_LeftDx
	rightFrameOverhang	= bShowReveal * (overSizeRight + gs_right_oversize + gs_tolerance_right) - SymbMid_RightDx

	if WIDO_REVEAL_SIDE then
		gs_frame_ovhg_left_in	= -fx1L - leftWallholeWidth + leftFrameOverhang + not(bShowReveal) * gs_left_oversize
		gs_frame_ovhg_left_out	= -fx2L - leftWallholeWidth + leftFrameOverhang + not(bShowReveal) * gs_left_oversize

		gs_frame_ovhg_right_in	= fx1R - rightWallholeWidth + rightFrameOverhang + not(bShowReveal) * gs_right_oversize
		gs_frame_ovhg_right_out	= fx2R - rightWallholeWidth + rightFrameOverhang + not(bShowReveal) * gs_right_oversize
	else
		gs_frame_ovhg_left_out	= -fx1L - leftWallholeWidth + leftFrameOverhang + not(bShowReveal) * gs_left_oversize
		gs_frame_ovhg_left_in	= -fx2L - leftWallholeWidth + leftFrameOverhang + not(bShowReveal) * gs_left_oversize

		gs_frame_ovhg_right_out	= fx1R - rightWallholeWidth + rightFrameOverhang + not(bShowReveal) * gs_right_oversize
		gs_frame_ovhg_right_in	= fx2R - rightWallholeWidth + rightFrameOverhang + not(bShowReveal) * gs_right_oversize
	endif
endif
]]>
</Script_1D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_PR SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_PR>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_UI SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
listFieldGenSetAttrID = 1

! =============================================================================
! Localization
! =============================================================================
stSetAsNominal			= `Назначить как Номинал`
stWidth					= `Ширина`
stHeight				= `Высота`

stRevealDimensions		= `2. Размеры Четверти`
stEgressDimensions		= `4. Размеры Прохода`
stRetainNominalSizes	= `Применить Номинальные Размеры для Выбранного`
stRetainNominalSizesTooltip = `Отметьте этот маркер при сбросе Номинальных Размеров, чтобы использовать текущие Номинальные значения в качестве Новых Номинальных Размеров.`

if bLanguageUSA then
	stLeafDimensions		= `1. Размер полотна`
	stUnitDimensions		= `2. Размер Блока`
	stWallholeDimensions	= `3. Грубое Открывание`
else
	stLeafDimensions		= `5. Размеры Полотна`
	stUnitDimensions		= `3. Размеры Элемента`
	stWallholeDimensions	= `1. Размеры Проема`
endif

stOversize				= `Допуски`
stOversizeLeft			= `Слева`
stOversizeRight			= `Справа`
stOversizeUpper			= `Вверху`
stOversizeLower			= `Внизу`
stRevealDepth			= `Глубина Четверти`

stToleranceLeft			= `Допуск Слева`
stToleranceRight		= `Допуск Справа`
stToleranceUpper		= `Допуск Вверху`

st2DDetailLevel			= `2D-детализация`
st3DDetailLevel			= `3D-детализация`

stShowRevealOnSymbol	= `Показ Четвертей в Символе`
stUseFills				= `Использовать Штриховку`
stPlanSymbolPen			= `Символ Плана`
stWallholeFillTitle		= `Штриховка Фона`

stWallContourLines		= `Линии Контура Стены`
stLineTypeInside		= `Тип Линии Внутри`
stLineTypeOutside		= `Тип Линии Снаружи`
stLinePen				= `Перо Линии`

dim stWallholeCutUI[32]
	stWallholeCutUI[ 1] = `Специальная Четверть`
	stWallholeCutUI[ 2] = `Размеры Специальной Четверти`
	stWallholeCutUI[ 3] = `Подоконная Ниша`
	stWallholeCutUI[ 4] = `Длина`
	stWallholeCutUI[ 5] = `Специальная Четверть`
	stWallholeCutUI[ 6] = `Тип Четверти`
	stWallholeCutUI[ 7] = `Показать Нишу в 2D`
	stWallholeCutUI[ 8] = `Автоматические Размеры Ниши`
	stWallholeCutUI[ 9] = `Тип Линии Ниши`
	stWallholeCutUI[10] = `Привязка Низа Ниши:`
	stWallholeCutUI[11] = `Ширина Подоконной Ниши`
	stWallholeCutUI[12] = `Высота Подоконной Ниши`
	stWallholeCutUI[13] = `Отметка Низа`
	stWallholeCutUI[14] = `Размеры Ниши:`
	stWallholeCutUI[15] = `Выступ Сбоку 2`
	stWallholeCutUI[16] = `Выступ Сбоку 1`
	stWallholeCutUI[17] = `Четверть с 2 Откосами - Геометрия Четверти`
	stWallholeCutUI[18] = `Четверть с 2 Откосами - Реквизиты Установки Коробки`
	stWallholeCutUI[19] = `Четверть с Откосом Снаружи - Геометрия Четверти`
	stWallholeCutUI[20] = `Четверть с Откосом Снаружи - Реквизиты Установки Коробки`
	stWallholeCutUI[21] = `Монтажная Коробка`
	stWallholeCutUI[22] = `Изменение Четверти`
	stWallholeCutUI[23] = `Покрытие`
	stWallholeCutUI[24] = `Перо Линии Сечения`
	stWallholeCutUI[25] = `Перо Линии Видимого Контура`
	stWallholeCutUI[26] = `Тип Штриховки Сечения`
	stWallholeCutUI[27] = `Перо Штриховки`
	stWallholeCutUI[28] = `Перо Фона Штриховки`
	stWallholeCutUI[29] = `Угол и Глубина`
	stWallholeCutUI[30] = `Ширина и Глубина`
	stWallholeCutUI[31] = `Ширина Четверти`
	stWallholeCutUI[32] = `Нижняя Четверть`

dim stCavityClosureUI[60]
	stCavityClosureUI[ 1] = `Замыкание Слоев`
	stCavityClosureUI[ 2] = `Способ Замыкания`
	stCavityClosureUI[ 3] = `Сторона Проема`
	stCavityClosureUI[ 4] = `Наружных Слоев`
	stCavityClosureUI[ 5] = `Поворачивающих Слоев`
	stCavityClosureUI[ 6] = `Начало Нумерации`
	stCavityClosureUI[ 7] = `Поворот на Четверти`
	stCavityClosureUI[ 8] = `Термовкладыш`
	stCavityClosureUI[ 9] = `Толщина Вкладыша`
	stCavityClosureUI[10] = `Перо Контура`
	stCavityClosureUI[11] = `Тип Линии Контура`
	stCavityClosureUI[12] = `Тип Штриховки`
	stCavityClosureUI[13] = `Перо Штриховки`
	stCavityClosureUI[14] = `Перо Фона Штриховки`
	stCavityClosureUI[15] = `Профиль`
	stCavityClosureUI[16] = `Ширина Профиля`
	stCavityClosureUI[17] = `Поворот Штукатурки`
	stCavityClosureUI[18] = `Снаружи`
	stCavityClosureUI[19] = `Внутри`
	stCavityClosureUI[20] = `Автоматически`
	stCavityClosureUI[21] = `Поворачивающих Слоев`
	stCavityClosureUI[22] = `Предел Толщины`
	stCavityClosureUI[23] = `Использовать Отделку Стены`
	stCavityClosureUI[24] = `Выбор Редактируемого Слоя`
	stCavityClosureUI[25] = `Поворот Слоя Внутрь`
	stCavityClosureUI[26] = `2. Толщина Поворота`
	stCavityClosureUI[27] = `Специальная Толщина`
	stCavityClosureUI[28] = `Ориентация Штриховки`
	stCavityClosureUI[29] = `Разделитель при Повороте Внутрь`
	stCavityClosureUI[30] = `Перо Разделительной Линии`
	stCavityClosureUI[31] = `3. Продление Слоя за Коробку`
	stCavityClosureUI[32] = `Считать Слой Штукатуркой, если он Тоньше или Равен`
	stCavityClosureUI[33] = `Настройка Слоя Штукатурки`
	stCavityClosureUI[34] = `Показ в 3D`
	stCavityClosureUI[35] = `Прим: Ширина Четверти определяет толщину повернутого слоя Штукатурки.`
	stCavityClosureUI[36] = `Реквизиты Термовкладыша`
	stCavityClosureUI[37] = `Реквизиты`
	stCavityClosureUI[38] = `Параметры четверти были изменены.`
	stCavityClosureUI[39] = ``
	stCavityClosureUI[40] = `1. Считать Слой Штукатуркой`
	stCavityClosureUI[41] = `Размеры Ширины Четверти определяют толщину повернутого слоя Штукатурки.`
	stCavityClosureUI[42] = `Несущий слой не может быть повернут.`
	stCavityClosureUI[43] = ``
	stCavityClosureUI[44] = ``
	stCavityClosureUI[45] = `Вкладыш для`
	stCavityClosureUI[46] = `Начиная от`
	stCavityClosureUI[47] = `Сторона Проема`
	stCavityClosureUI[48] = `Сторона Проема`
	stCavityClosureUI[49] = `Продлить Слой до Термовкладыша`
	stCavityClosureUI[50] = `1. Слой`
	stCavityClosureUI[51] = `2. Слой`
	stCavityClosureUI[52] = `3. Слой`
	stCavityClosureUI[53] = `4. Слой`
	stCavityClosureUI[54] = `Специальное Покрытие`
	stCavityClosureUI[55] = `Покрытие`
	stCavityClosureUI[56] = `Расстояние от Термовкладыша до Слоя`
	stCavityClosureUI[57] = `Ширина Термовкладыша`
	stCavityClosureUI[58] = `Толщина Термовкладыша`
	stCavityClosureUI[59] = `Зазор Наружного Слоя`
	stCavityClosureUI[60] = `Размеры в 2D`

dim stWallholeStructureUI[4]
	stWallholeStructureUI[1] = `Настройка Слоя Штукатурки`
	stWallholeStructureUI[2] = `К параметрам Штукатурки...`
	stWallholeStructureUI[3] = `Настройка Замыкания Слоев`
	stWallholeStructureUI[4] = `Назад к Замыканию Слоев...`

dim stRevealClusureUITips[31]
	stRevealClusureUITips[ 1] = `Глубина Четверти`
	stRevealClusureUITips[ 2] = `Ширина Четверти со Стороны 2`
	if gs_reveal_uniform then
		stRevealClusureUITips[ 3] = `Ширина Четверти`
		stRevealClusureUITips[ 5] = `Ширина Внутренней Четверти`
		stRevealClusureUITips[11] = `Угол`
		stRevealClusureUITips[15] = `Наружный Угол`
	else
		stRevealClusureUITips[ 3] = `Ширина Четверти со Стороны 1`
		stRevealClusureUITips[ 5] = `Ширина Внутренней Четверти со Стороны 1`
		stRevealClusureUITips[11] = `Угол Откоса со Стороны 1`
		stRevealClusureUITips[15] = `Угол Наружного Откоса со Стороны 1`
	endif
	stRevealClusureUITips[ 4] = `Ширина Внутренней Четверти со Стороны 2`
	stRevealClusureUITips[ 6] = `Высота Верхней Четверти`
	stRevealClusureUITips[ 7] = `Высота Отлива`
	stRevealClusureUITips[ 8] = `Высота Верхней Внутренней Четверти`
	stRevealClusureUITips[ 9] = `Высота Отлива Внутри`
	stRevealClusureUITips[10] = `Угол Откоса со Стороны 2`
	stRevealClusureUITips[12] = `Угол Верхней Стороны`
	stRevealClusureUITips[13] = `Угол Нижней Стороны`
	stRevealClusureUITips[14] = `Угол Наружного Откоса со Стороны 2`
	stRevealClusureUITips[16] = `Наружный Угол Верхнего Откоса`
	stRevealClusureUITips[17] = `Наружный Угол Нижнего Откоса`
	stRevealClusureUITips[18] = `Ширина Наружной Четверти`
	stRevealClusureUITips[19] = `Ширина Монтажной Коробки со Стороны 2`
	stRevealClusureUITips[20] = `Ширина Монтажной Коробки со Стороны 1`
	stRevealClusureUITips[21] = `Ширина Монтажной Коробки Вверху`
	stRevealClusureUITips[22] = `Ширина Монтажной Коробки Внизу`
	stRevealClusureUITips[23] = `Толщина Монтажной Коробки`
	stRevealClusureUITips[24] = `Ширина Скоса со Стороны 2`
	stRevealClusureUITips[25] = `Ширина Скоса со Стороны 1`
	stRevealClusureUITips[26] = `Ширина Скоса Вверху`
	stRevealClusureUITips[27] = `Ширина Скоса Внизу`
	stRevealClusureUITips[28] = `Ширина Скоса Снаружи со Стороны 2`
	stRevealClusureUITips[29] = `Ширина Скоса Снаружи со Стороны 1`
	stRevealClusureUITips[30] = `Ширина Скоса Снаружи Вверху`
	stRevealClusureUITips[31] = `Ширина Скоса Снаружи Внизу`

dim stMasonryArchUI[28]
	stMasonryArchUI[ 1] = `Декоративная Перемычка`
	stMasonryArchUI[ 2] = `Подъем`
	stMasonryArchUI[ 3] = `Угол Пяты`
	stMasonryArchUI[ 4] = `Тип`
	stMasonryArchUI[ 5] = `Толщина Кирпича`
	stMasonryArchUI[ 6] = `Толщина Раствора`
	stMasonryArchUI[ 7] = `Замковый Камень`
	stMasonryArchUI[ 8] = `Ширина`
	stMasonryArchUI[ 9] = `Допуски`
	stMasonryArchUI[10] = `Проекция`
	stMasonryArchUI[11] = `Без Пространства над Проемом`
	stMasonryArchUI[12] = `Ниша над Проемом`
	stMasonryArchUI[13] = `Покрытия`
	stMasonryArchUI[14] = `Кирпич`
	stMasonryArchUI[15] = `Раствор`
	stMasonryArchUI[16] = `Замковый Камень`
	stMasonryArchUI[17] = `Штриховка Сечения`
	stMasonryArchUI[18] = `Тип Штриховки`
	stMasonryArchUI[19] = `Перо Штриховки`
	stMasonryArchUI[20] = `Перо Фона`
	stMasonryArchUI[21] = `Высота Декоративной Перемычки`
	stMasonryArchUI[22] = `Глубина Декоративной Перемычки`
	stMasonryArchUI[23] = `Зазор за Отливом`
	stMasonryArchUI[24] = `Проекция Декоративной Перемычки`
	stMasonryArchUI[25] = `Выступ Декоративной Перемычки Слева`
	stMasonryArchUI[26] = `Выступ Декоративной Перемычки Справа`
	stMasonryArchUI[27] = `Расстояние между Перемычкой и Дверью`
	stMasonryArchUI[28] = `Перо в 3D`

dim stRevealUI[6]
	stRevealUI[1]		= `Тип Четверти`
	stRevealUI[2]		= `Ранее выбранный тип замыкания стены недопустим для этой четверти.`
	stRevealUI[3]		= `Замыкание стены было изменено.`
	stRevealUI[4]		= `Одинаковая Ширина Четвертей`
	stRevealUI[5]		= `Четверть Снаружи`
	stRevealUI[6]		= `Четверть Внутри`

dim st_uiWallOpening[23]
	st_uiWallOpening[1] = `Четверть`
	st_uiWallOpening[2] = `Замыкание Слоев`
	st_uiWallOpening[3] = `Декоративная Перемычка`
	st_uiWallOpening[4] = `Зазоры Проема`
	st_uiWallOpening[5] = `Слева`
	st_uiWallOpening[6] = `Справа`
	st_uiWallOpening[7] = `Вверху`
	st_uiWallOpening[8] = `Внизу`
	st_uiWallOpening[9] = `Примечание: Зазоры не меняют номинальные размеры проема.`
	st_uiWallOpening[10] = `Покрытие Проема в Стене`
	st_uiWallOpening[11] = `Как Торцы Стены`
	st_uiWallOpening[12] = `Как Поверхности Стены`
	st_uiWallOpening[13] = `Подоконная Ниша`
	st_uiWallOpening[14] = `Количество Сторон`
	st_uiWallOpening[15] = `Высота Арочного Проема`
	st_uiWallOpening[16] = `Малый Радиус`
	st_uiWallOpening[17] = `Высота Низа Перемычки`
	st_uiWallOpening[18] = `Откосы в Криволинейных Стенах`
	st_uiWallOpening[19] = `Параллельно`
	st_uiWallOpening[20] = `Радиально`
	st_uiWallOpening[21] = `Толщина Коробки`
	st_uiWallOpening[22] = `Аппроксимация`
	st_uiWallOpening[23] = `Высота Пяты`

dim	stMinSpaceTooltip[7]
	stMinSpaceTooltip[1]	= `Глубина со Стороны Открывания`
	stMinSpaceTooltip[2]	= `Глубина с Противоположной Стороны`
	stMinSpaceTooltip[3]	= `Ширина 1 со Стороны Открывания`
	stMinSpaceTooltip[4]	= `Ширина 2 со Стороны Открывания`
	stMinSpaceTooltip[5]	= `Ширина с Противоположной Стороны`
	stMinSpaceTooltip[6]	= `Ширина 1 с Противоположной Стороны`
	stMinSpaceTooltip[7]	= `Ширина 2 с Противоположной Стороны`

stClosureChangedTip		= stRevealUI[2] + " " + stRevealUI[3]

stWallClosure			= `Замыкание Слоев`
stClosureType			= `Способ Замыкания`

stVentFrameProfileHeight	= `Высота Вентиляционного Клапана`


! =============================================================================
! Tabpage Structure Definition
! =============================================================================

! call all available page fix IDs
call "ui_tabIDlistHierarchy_m" parameters iUITreeStandardType = 2,			! STOREFRONT_UI
					returned_parameters iUiID_Root,
										iUiID_NominalSizes,		iParID_NominalSizes,
										iUiID_ShapePanelDiv,	iParID_ShapePanelDiv,
										iUiID_GlassMullions,	iParID_GlassMullions,
										iUiID_SFFrameStyle,		iParID_SFFrameStyle,
										iUiID_VentProfile,		iParID_VentProfile,
										iUiID_Doorleaf,			iParID_Doorleaf,
										iUiID_Handle1,			iParID_Handle1,
										iUiID_Handle2,			iParID_Handle2,
										iUiID_OpeningLines,		iParID_OpeningLines,
										iUiID_DoorModelAttrib,	iParID_DoorModelAttrib,
										iUiID_WallOpening,		iParID_WallOpening,
										iUiID_Reveal,			iParID_Reveal,
										iUiID_Closure,			iParID_Closure,
										iUiID_FloorPlanSection,	iParID_FloorPlanSection,
										iUiID_MinSpace,			iParID_MinSpace,
										iUiID_Descriptions,		iParID_Descriptions


! =============================================================================
! Display actual tabpages
! =============================================================================

ui_current_page gs_ui_current_page

for iTabs = 1 to vardim1(uiUsedPageIDs)
	! --------------------------------------------------------------------------------
	! Independent pages
	! --------------------------------------------------------------------------------
	if uiUsedPageIDs[iTabs][1] = iUiID_NominalSizes then
		ui_page	uiUsedPageIDs[iTabs][1], uiUsedPageIDs[iTabs][2], `Номинальные Размеры и Допуски`, "uiTab_DoorSizes_flat(1)"
		if gs_ui_current_page = iUiID_NominalSizes then
			gosub "pageNominalSizes"
		endif
	endif
	if uiUsedPageIDs[iTabs][1]= iUiID_FloorPlanSection then
		! for Show Reveal on Symbol
		ui_page	uiUsedPageIDs[iTabs][1], uiUsedPageIDs[iTabs][2], uiUsedPageNames[iTabs][1], uiUsedPageNames[iTabs][2]
		if gs_ui_current_page = iUiID_FloorPlanSection then
			gosub "pageCallFloorPlanAndSect"
		endif
	endif

	! --------------------------------------------------------------------------------
	! Door Settings and Opening group
	! --------------------------------------------------------------------------------
	if uiUsedPageIDs[iTabs][1] = iUiID_OpeningLines then
		ui_page	uiUsedPageIDs[iTabs][1], uiUsedPageIDs[iTabs][2], `Линии Открывания`, "uiTab_DoorOpeningLines_flat(1)"
		if gs_ui_current_page = iUiID_OpeningLines then
			gosub "pageCallOpeningOptions"
		endif
	endif

	! --------------------------------------------------------------------------------
	! Wall Opening group
	! --------------------------------------------------------------------------------
	if uiUsedPageIDs[iTabs][1] = iUiID_WallOpening then
		ui_page	uiUsedPageIDs[iTabs][1], uiUsedPageIDs[iTabs][2], `Проем в Стене`, "uiTab_DoorWallOpening_flat(1)"
		if gs_ui_current_page = iUiID_WallOpening then
			gosub "pageCallWallOpening"
		endif
	endif
	if uiUsedPageIDs[iTabs][1] = iUiID_Reveal then
		uiUsedPageNames[iTabs][1]	= `Четверть`
		uiUsedPageNames[iTabs][2]	= "uiTab_OpeningReveal_flat(1)"
	endif
	if uiUsedPageIDs[iTabs][1] = iUiID_Closure then
		uiUsedPageNames[iTabs][1]	= `Замыкание Слоев`
		uiUsedPageNames[iTabs][2]	= "uiTab_OpeningClosure_flat(1)"
	endif

	! --------------------------------------------------------------------------------
	! Additional independent pages
	! --------------------------------------------------------------------------------
	if uiUsedPageIDs[iTabs][1] = iUiID_MinSpace then
		ui_page	uiUsedPageIDs[iTabs][1], uiUsedPageIDs[iTabs][2], `Минимальное Пространство`, "uiTab_MinSpace_flat(1)"
		if gs_ui_current_page = iUiID_MinSpace then
			gosub "pageCallMinSpace"
		endif
	endif
	if uiUsedPageIDs[iTabs][1]= iUiID_Descriptions then
		ui_page	uiUsedPageIDs[iTabs][1], uiUsedPageIDs[iTabs][2], `Характеристики`, "uiTab_Descriptions_flat(1)"
		if gs_ui_current_page = iUiID_Descriptions then
			gosub "pageCallListing"
		endif
	endif
next iTabs

gosub "pageCallWallholeStructure"

! --------------------------------------------------------------------------------
! Image links for archive
! --------------------------------------------------------------------------------
file_dependence "uiTab_DoorOpeningLines_flat(1)"
file_dependence "uiTab_DoorWallOpening_flat(1)"
file_dependence "uiTab_OpeningReveal_flat(1)"
file_dependence "uiTab_OpeningClosure_flat(1)"
file_dependence "uiTab_Descriptions_flat(1)"
file_dependence "uiTab_MinSpace_flat(1)"

! =============================================================================
end
! =============================================================================


! --------------------------------------------------------------------------------
! Built-In Nominal Sizes and Tolerance Tabpage
! --------------------------------------------------------------------------------
"pageNominalSizes":
	pageStartY = 0

	sepx = 310
	if bLanguageUSA then
		sepy = 135 + pageStartY
	else
		sepy = 154 + pageStartY
	endif

	x1 = 0
	x2 = 0
	x3 = 22
	x4 = 175
	x5 = 243

	y = pageStartY
	cx = 60
	dy = 22

	ui_style 0,1
	ui_separator x2+7,y+9, x3-4,y+9
	ui_separator x2+7,y+9, x2+7,y+19
	ui_outfield stSetAsNominal,	x3,y+1, x4-x3-1,18		! Set As Nominal

	ui_outfield stWidth,		x4,y+1, x5-x4-1,18		! Width
	ui_outfield stHeight,		x5,y+1, sepx-x5-1,18	! Height
	y = y + dy + 2

	if bLanguageUSA then
		if gs_leaf_nominal then
			ui_style 0,1
		else
			ui_style 0, 0
		endif
		ui_radiobutton "gs_leaf_nominal", 1, stLeafDimensions, 	x2, y, x4-x1-1, 18
		ui_infield "gs_unit_size",	x4,y, cx+65,20
		y = y + dy
		ui_infield "ac_leaf_width",			x4,y-2, cx,20
		ui_infield "ac_leaf_height",		x5,y-2, cx,20
		y = y + dy

		if gs_unit_nominal then
			ui_style 0,1
		else
			ui_style 0, 0
		endif
		if gs_unit_size = `Специальный Размер` then
			ui_radiobutton "gs_unit_nominal", 1, stUnitDimensions, 	x2, y, x4-x1-1, 18
		else
			ui_outfield stUnitDimensions,		x3,y+3, x4-x3-1,dy-1	! Unit Dimensions
		endif
		ui_infield "ac_unit_width",			x4,y-2, cx,20
		ui_infield "ac_unit_height",		x5,y-2, cx,20
		y = y + dy

		if gs_wallhole_nominal then
			ui_style 0,1
		else
			ui_style 0, 0
		endif

		if gs_unit_size = `Специальный Размер` then
			ui_radiobutton "gs_wallhole_nominal", 1, stWallholeDimensions, 	x2, y, x4-x1-1, 18
		else
			ui_outfield stWallholeDimensions,	x3,y+3, x4-x3-1,dy-1	! Wallhole Dimensions
		endif
		ui_infield "ac_wallhole_width",		x4,y-2, cx,20
		ui_infield "ac_wallhole_height",	x5,y-2, cx,20
		y = y + dy

	else
		if gs_wallhole_nominal then
			ui_style 0,1
		else
			ui_style 0, 0
		endif
		ui_radiobutton "gs_wallhole_nominal", 1, stWallholeDimensions, 	x2, y, x4-x1-1, 18
		ui_infield "ac_wallhole_width",		x4,y-2, cx,20
		ui_infield "ac_wallhole_height",	x5,y-2, cx,20
		y = y + dy

		if gs_reveal_nominal then
			ui_style 0,1
		else
			ui_style 0, 0
		endif
		ui_radiobutton "gs_reveal_nominal", 1, stRevealDimensions, 	x2, y, x4-x1-1, 18
		ui_infield "ac_reveal_width",		x4,y-2, cx,20
		ui_infield "ac_reveal_height",		x5,y-2, cx,20
		y = y + dy

		if gs_unit_nominal then
			ui_style 0,1
		else
			ui_style 0, 0
		endif
		ui_radiobutton "gs_unit_nominal", 1, stUnitDimensions, 	x2, y, x4-x1-1, 18
		ui_infield "ac_unit_width",			x4,y-2, cx,20
		ui_infield "ac_unit_height",		x5,y-2, cx,20
		y = y + dy

		if gs_egress_nominal then
			ui_style 0,1
		else
			ui_style 0, 0
		endif
		ui_radiobutton "gs_egress_nominal", 1, stEgressDimensions, 	x2, y, x4-x1-1, 18
		ui_infield "ac_egress_width",		x4,y-2, cx,20
		ui_infield "ac_egress_height",		x5,y-2, cx,20
		y = y + dy

		if gs_leaf_nominal then
			ui_style 0,1
		else
			ui_style 0, 0
		endif
		ui_radiobutton "gs_leaf_nominal", 1, stLeafDimensions, 	x2, y, x4-x1-1, 18
		ui_infield "ac_leaf_width",			x4,y-2, cx,20
		ui_infield "ac_leaf_height",		x5,y-2, cx,20
		y = y + dy
	endif

	ui_style 0, 0
	ui_infield{3} "gs_retain_nominal_sizes", x2, y, sepx-x1-1, 18,
			7, "",
			2,
			1, 20, 20, 20, 20,
			0, stRetainNominalSizes, 0,		! Transfer Current Nominal Size to Selection
			1, stRetainNominalSizes, 1 ui_tooltip stRetainNominalSizesTooltip	! Transfer Current Nominal Size to Selection
	y = y + dy

	ui_separator sepx, 7 + pageStartY, sepx, 265
	ui_separator 0,sepy, sepx-4,sepy

	x = 10
	if bLanguageUSA then
		y = 165 + pageStartY
	else
		y = 184 + pageStartY
	endif

	ui_infield "gs_tolerance_left",		x,y-25, cx,20 ui_tooltip stToleranceLeft
	ui_infield "gs_tolerance_right",	x+287-cx,y-25, cx,20 ui_tooltip stToleranceRight

	if bLanguageUSA then
		ui_pict 29, x,y-5, 287,84, 1		! ui_sf_door_widthUSA.png
	else
		ui_pict 1, x,y-5, 287,84, 1		! ui_sf_door_width.png
	endif

	x = 313
	y = 30 + pageStartY
	if bLanguageUSA then
		if isVentilationOverFrame then
			ui_pict 33, x,y, 100,200, 1		! ui_sf_door_height_ventUSA.png
			ui_infield "VentilationProfileHeight",	x+88,y+59, 40,20 ui_tooltip stVentFrameProfileHeight
			posY = y+14
		else
			ui_pict 30, x,y, 100,200, 1		! ui_sf_door_heightUSA.png
			posY = y+15
		endif
	else
		if isVentilationOverFrame then
			ui_pict 32, x,y, 100,200, 1		! ui_sf_door_height_vent.png
			ui_infield "VentilationProfileHeight",	x+88,y+53, 40,20 ui_tooltip stVentFrameProfileHeight
			posY = y+8
		else
			ui_pict 2, x,y, 100,200, 1		! ui_sf_door_height.png
			posY = y+15
		endif
	endif
	ui_infield "gs_tolerance_upper",	x+88,posY, 40,20 ui_tooltip stToleranceUpper
return




! --------------------------------------------------------------------------------
! Minimal Space Settings Tabpage
! --------------------------------------------------------------------------------
"pageCallMinSpace":
	call "dw_minimalspace" parameters 	gs_sidelight_left 	= bSidelights,
										gs_sidelight_right 	= bSidelights,
										gs_leaf_optype_m = gs_leaf_optype_m,
										stMinSpaceTooltip = stMinSpaceTooltip

return

! --------------------------------------------------------------------------------
! Wall Opening Tabpage
! --------------------------------------------------------------------------------
"pageCallWallOpening":
	call "ui_WallOpening_m" parameters iWindowShape		= iWindowShape,
									isWindow			= 0,
									isEmptyOpening		= 0,
									bSlidingDoor		= 0,
									iRevealType			= iRevealType,
									gs_RevealTypeEnable	= gs_RevealTypeEnable,
									bEnableParapetInset = bEnableParapetInset,
									bEnableMasonryArch	= bEnableMasonryArch,
									iUiID_Reveal		= iUiID_Reveal,
									iUiID_Closure		= iUiID_Closure,
									iUiID_WallInset		= 0,
									iUiID_MasonryArch	= 0,
									st_uiWallOpening	= st_uiWallOpening,
									stRevealTypes		= stRevealTypes,
									stClosureTypes		= stClosureTypes,
									gs_reveal_type_int	= gs_reveal_type_int,
									gs_wido_sill		= gs_wido_sill,
									AC_wido_sill		= AC_wido_sill,
									gs_closure_type_int	= gs_closure_type_int,
!									bMasonryArch		= bMasonryArch,			! No Masonry Arch
!									gs_masonry_arch_int	= gs_masonry_arch_int,
									gs_left_oversize	= gs_left_oversize,
									gs_right_oversize	= gs_right_oversize,
									gs_upper_oversize	= gs_upper_oversize,
									gs_lower_oversize	= gs_lower_oversize
return


! --------------------------------------------------------------------------------
! Descriptions
! --------------------------------------------------------------------------------
"pageCallListing":

	call "ui_Description_m" parameters all	iDWObjectType				= 6, 	! STOREFRONT_DOOR_OBJECT
											gs_show_UKListParams		= gs_show_UKListParams,
											listFieldID 				= iUiID_Descriptions,
											gs_bOpeningToZone			= gs_bOpeningToZone,
											gs_list_cost				= gs_list_cost,
											gs_list_manufacturer		= gs_list_manufacturer,
											gs_list_note				= gs_list_note,
											gs_list_location			= gs_list_location,
											gs_list_location_as			= gs_list_location_as,
											gs_list_accessories			= gs_list_accessories,
											gs_list_glazing				= gs_list_glazing,
											gs_list_headdet				= gs_list_headdet,
											gs_list_jambdet				= gs_list_jambdet,
											gs_list_silldet				= gs_list_silldet,
											gs_list_hwsetno				= gs_list_hwsetno,
											gs_list_hwkeyside			= gs_list_hwkeyside,
											gs_list_optype				= gs_list_optype,
											gs_list_finish				= gs_list_finish,
											gs_list_elevation			= gs_list_elevation,
											gs_list_hings				= gs_list_hings,
											gs_list_lockset				= gs_list_lockset,
											gs_list_glassarea_tmp		= gs_list_glassarea_tmp,
											gs_list_glassarea_override	= gs_list_glassarea_override,
											gs_list_glassarea			= gs_list_glassarea,
											gs_list_glassperimeter		= gs_list_glassperimeter,
											gs_list_heattransfer		= gs_list_heattransfer,
											gs_list_firerating			= gs_list_firerating,
											gs_list_acousticrating		= gs_list_acousticrating,
											FM_Type						= FM_Type,
											iFMType						= iFMType,
											FM_InventoryNumber			= FM_InventoryNumber,
											FM_SerialNumber				= FM_SerialNumber,
											FM_ProductionYear			= FM_ProductionYear,
											FM_ObjectWeight				= FM_ObjectWeight,
											FM_ObjectWeightUnit			= FM_ObjectWeightUnit,
											gs_list_orientationDef_m	= gs_list_orientationDef_m,
											gs_list_NBSClause			= gs_list_NBSClause,
											gs_list_doorcloser			= gs_list_doorcloser,
											gs_list_visionpanel_type	= gs_list_visionpanel_type,
											gs_list_elevationtype		= gs_list_elevationtype,
											gs_list_frametype			= gs_list_frametype,
											gs_list_holddevice			= gs_list_holddevice,
											gs_list_firesignage			= gs_list_firesignage,
											gs_list_comment				= gs_list_comment,
											ifc_optypestr				= ifc_optypestr,
											ifc_optype					= ifc_optype

return

! --------------------------------------------------------------------------------
! Masonry Arch, Cavity Closure, Custom Reveal Settings Tabpage
! --------------------------------------------------------------------------------
"pageCallWallholeStructure":
	call "WallholeStructure" parameters all A = A,
		iRevealType					= iRevealType,
		iSillRevealType				= iSillRevealType,
		iBoardRevealType			= iBoardRevealType,
		iClosureType				= iClosureType,
	! --- Function Control Parameters
		bEnablePlasterLeftIn		= bEnablePlasterLeftIn,
		bEnablePlasterLeftOut		= bEnablePlasterLeftOut,
		bEnablePlasterRightIn		= bEnablePlasterRightIn,
		bEnablePlasterRightOut		= bEnablePlasterRightOut,
		bEnableParapetInset			= bEnableParapetInset,
		bEnableMasonryArch			= bEnableMasonryArch,
		bEnableFaschen				= bEnableFaschen,
		gs_RevealTypeEnable			= gs_RevealTypeEnable,
		gs_ClosureTypeEnable		= gs_ClosureTypeEnable,
	! --- Macro Control Parameters
		isWindow					= 1,
		iWindowShape				= iWindowShape,
		iParapetSize				= 1,			! PARAPET_SIZE_AUTO
	! --- Corner Functions
		bLeftCornerFunction			= bLeftCornerFunction,
	!	leftCornerAngle				= leftCornerAngle,
	!	leftConnWallThk				= leftConnWallThk,
		bRightCornerFunction		= bRightCornerFunction,
	!	rightCornerAngle			= rightCornerAngle,
	!	rightConnWallThk			= rightConnWallThk,
	! --- Casing
		bDrawOutsideTrim		= bDrawOutsideTrim,
		bDrawInsideTrim			= bDrawInsideTrim,
	! --- String Resources
		stRevealTypes					= stRevealTypes,
		stRevealTypesBottom				= stRevealTypesBottom,
		stClosureTypes					= stClosureTypes,
		stWallContourLine				= stWallContourLine,
		stCavityClosureSide				= stCavityClosureSide,
		stCavityClosureTurnDir			= stCavityClosureTurnDir,
		stDutchClosureToSide			= stDutchClosureToSide,
		stCavityClosureEditedJambSide	= stCavityClosureEditedJambSide,
		stCavityClosureEditedWallSide	= stCavityClosureEditedWallSide,
		stCavityClosureEditedSkinNumber	= stCavityClosureEditedSkinNumber,
		stCavityClosureTurnInThickness	= stCavityClosureTurnInThickness,
		stCavityClosureHatchOrientation	= stCavityClosureHatchOrientation,
		stMasonryArchTypes				= stMasonryArchTypes,
		stMasonryArchStructure			= stMasonryArchStructure,
		stWallholeCutUI					= stWallholeCutUI,
		stCavityClosureUI				= stCavityClosureUI,
		stWallholeStructureUI			= stWallholeStructureUI,
		stMasonryArchUI					= stMasonryArchUI,
		stRevealClusureUITips			= stRevealClusureUITips,
		stRevealUI						= stRevealUI,
		stClosureType					= stClosureType,
		uiUsedPageIDs					= uiUsedPageIDs,
		uiUsedPageNames					= uiUsedPageNames,
		bStorefrontClassic				= 1

return

! --------------------------------------------------------------------------------
! Opening Lines
! --------------------------------------------------------------------------------
"pageCallOpeningOptions":

	call "OpeningOptions" parameters	bWindow					= 0,
										iLineShapeCategory		= iLineShapeCategory,
										iLineShapeSwingEnable	= iLineShapeSwingEnable,
										gs_leaf_optype_m		= gs_leaf_optype_m,
										b2ColumnsOnOplineUI		= 1,
										bHideOplineStyle		= bHideOplineStyle,
										bLockOplineStyle		= bLockOplineStyle,
										bDisable2DOverride		= 0,
										bDisable3DOverride		= 0,
										bDisableSwingType		= 0,
										iOpeningParamType		= 1,
										bOverride_MVO_3D		= bOverride_MVO_3D,
										bOverride_MVO_2D		= bOverride_MVO_2D,
										or_bOplines3d			= or_bOplines3d,
										or_bOplines2d			= or_bOplines2d,
										or_iOpLineType3dIn		= or_iOpLineType3dIn,
										or_iOpLineType3dOut		= or_iOpLineType3dOut,
										or_iOplineStyle			= or_iOplineStyle,
										or_iSwingType			= or_iSwingType,
										or_iSlidingType			= or_iSlidingType,
										or_opLinePen			= or_opLinePen,
										bEnableSwingLineTurnOff = bEnableSwingLineTurnOff,
										bEnableSecondaryOpLineTypes = bEnableSecondaryOpLineTypes,
										gs_bSameLineTypeForLeaves = gs_bSameLineTypeForLeaves


return


! --------------------------------------------------------------------------------
! Floor Plan and Section
! --------------------------------------------------------------------------------
"pageCallFloorPlanAndSect":
	if bCanHaveReveal then
		itemID = 2
		ui_listitem itemID, iUiID_FloorPlanSection, "iRevealOnSymbol", 	0,	"",			`Показ Четвертей в Символе`	: itemID = itemID + 1
	endif
return
]]>
</Script_UI>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_VL SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[

! =============================================================================
! Hide All parameters list
! =============================================================================
hideparameter all


! =============================================================================
! 3D Based 2D Symbol Support
! =============================================================================

if AC_Hole_Display_Option = 3 then
	parameters AC_WallContours = 0
else
	parameters AC_WallContours = 1
endif


hideparameter "ac_details"

! =============================================================================
! Dimension Link
! =============================================================================

! Egress Size -> Leaf Size difference
leafDLeft		= bEnableDoorStop * gs_ds_w
leafDRight		= bEnableDoorStop * gs_ds_w
leafDUpper		= bEnableDoorStop * gs_ds_w
leafDLower		= 0

! Egress Size -> Unit Size difference
unitDLeft		= not(gs_sidelight_left)  * gs_fw_side_left  + bEnableDoorStop * gs_ds_w + sidelightLeftWidth
unitDRight		= not(gs_sidelight_right) * gs_fw_side_right + bEnableDoorStop * gs_ds_w + sidelightRightWidth
unitDUpper		= not(gs_door_transom)    * gs_fw_upper + bEnableDoorStop * gs_ds_w + transomHeight
unitDLower		= 0

! Unit Size -> Wallhole Size difference
wallholeDLeft	= gs_tolerance_left
wallholeDRight	= gs_tolerance_right
wallholeDUpper	= gs_tolerance_upper + VentilationProfileHeight * isVentilationOverFrame
wallholeDLower	= gs_tolerance_lower

! Reveal Size -> Wallhole Size difference
revealDLeft		= gs_reveal_left
revealDRight	= gs_reveal_right
revealDUpper	= gs_reveal_top
revealDLower	= gs_reveal_bottom


! =============================================================================
! Show / Hide 2D Fills
! =============================================================================

if not(gs_bFills) then	! Hide
	hideparameter	"gs_wallhole_fill",
					"gs_wallhole_pen_fg",
					"gs_wallhole_pen_bg"

	lock	"gs_wallhole_fill",
			"gs_wallhole_pen_fg",
			"gs_wallhole_pen_bg"
endif


! =============================================================================
! Wall Contour Line Parameter Handling
! =============================================================================

if not(bEnableSill | bEnableThreshold) then
	lock "gs_wcont_hidden_line_out"
	hideparameter "gs_wcont_hidden_line_out"
endif
if not(bEnableThreshold) then
	lock "gs_wcont_hidden_line_in"
	hideparameter "gs_wcont_hidden_line_in"
endif


! =============================================================================
! UK Listing Parameters
! =============================================================================

if bEnableNEDFireRating then
	values "gs_list_firerating"			`Нет`, `Самозакрывающаяся`, `30 минут`, `60 минут`, `30 минут + самозакрывающаяся`, `60 минут + самозакрывающаяся`, CUSTOM

	if GLOB_MODPAR_NAME = "gs_list_firerating" then
		iNEDFireRating = 0
		if gs_list_firerating = `Самозакрывающаяся` then iNEDFireRating = 1
		if gs_list_firerating = `30 минут` then iNEDFireRating = 2
		if gs_list_firerating = `60 минут` then iNEDFireRating = 3
		if gs_list_firerating = `30 минут + самозакрывающаяся` then iNEDFireRating = 4
		if gs_list_firerating = `60 минут + самозакрывающаяся` then iNEDFireRating = 5
		parameters iNEDFireRating = iNEDFireRating
	else
		if iNEDFireRating = 1 then gs_list_firerating = `Самозакрывающаяся`
		if iNEDFireRating = 2 then gs_list_firerating = `30 минут`
		if iNEDFireRating = 3 then gs_list_firerating = `60 минут`
		if iNEDFireRating = 4 then gs_list_firerating = `30 минут + самозакрывающаяся`
		if iNEDFireRating = 5 then gs_list_firerating = `60 минут + самозакрывающаяся`
		parameters gs_list_firerating = gs_list_firerating
	endif
else
	if bEnableDACHFireRating then
		! Fire rating: Self-Closing
		! =============================================================================

		gs_list_FR_expression = ""
		if LibraryLangCode = "AUT" then
			gs_list_FR_expression = "E"
		endif

		if gs_list_bInsulation then
			gs_list_FR_expression = gs_list_FR_expression + "I" + gs_list_FR_indexSelfClosing
		endif
		
		gs_list_FR_expression = gs_list_FR_expression + gs_list_firerating
		
		if gs_list_FR_bSelfClosing | gs_list_bSmokeProtection then
		
			gs_list_FR_expression = gs_list_FR_expression + "-"
		
			if gs_list_FR_bSelfClosing then
				gs_list_FR_expression = gs_list_FR_expression + "C"
			endif
			if gs_list_bSmokeProtection then
				gs_list_FR_expression = gs_list_FR_expression + "S" + gs_list_SmokeTestTemp
			endif
		endif
		parameters gs_list_FR_expression = gs_list_FR_expression
		
		lock "gs_list_FR_expression"
		if not(gs_list_bInsulation) then
			lock "gs_list_FR_indexSelfClosing"
		endif
		if not(gs_list_bSmokeProtection) then
			lock "gs_list_SmokeTestTemp"
		endif

	else
		values "gs_list_firerating"			`Нет`, `FS30`, `FD30SC`, `FS30SC`, `FS60`, `FD60SC`, `FS60SC`, CUSTOM
	endif
endif

if gs_show_UKListParams then
	values "gs_list_acousticrating"		`Нет`, `32 dB/Rw`, `35 dB/Rw`, `38 dB/Rw`, custom
	values "gs_list_finish"				`Нет`, `Облицовка`, `Поливинилхлорид`, `Полированная Сталь`, custom
	values "gs_list_frametype"			`Нет`, `Сталь`, `Алюминий`, `Древесина`, custom
	values "gs_list_firesignage"		`Нет`, `FDKS`, `FDKLS`, `AFDKC`, custom
	values "gs_list_visionpanel_type"	stVisionPanelTypes
endif

if not(bEnableDACHFireRating) then
	lock	"gs_list_FR_bSelfClosing",
			"gs_list_FR_indexSelfClosing",
			"gs_list_FR_expression"
	hideparameter	"gs_list_FR_bSelfClosing",
					"gs_list_FR_indexSelfClosing",
					"gs_list_FR_expression"
endif

! =============================================================================
! Wallhole Structure
! =============================================================================

call "WallholeStructure" parameters all A = A, B = B,
	refWidth 				= refWidth,
	leftWidth				= leftWidth,
	rightWidth				= rightWidth,
	openingHeight			= openingHeight,
	iRevealType				= iRevealType,
	iSillRevealType			= iSillRevealType,
	iBoardRevealType		= iBoardRevealType,
	leftWallholeRevealPnts	= leftWallholeRevealPnts,
	rightWallholeRevealPnts	= rightWallholeRevealPnts,
	iRevealPointsIdx		= iRevealPointsIdx,
	iClosureType			= iClosureType,
! --- Coustom CC Settings ---
	gs_custom_cc_turn_in		= gs_custom_cc_turn_in,
	iCustomCCThicknessType = iCustomCCThicknessType,
	iCustomCCOrientation = iCustomCCOrientation,
	gs_custom_cc_separator		= gs_custom_cc_separator,
	iCustomCCEditJambSide = iCustomCCEditJambSide,
	iCustomCCEditWallSide = iCustomCCEditWallSide,
	iCustomCCEditSkin = iCustomCCEditSkin,
	gs_custom_cc_array_left		= gs_custom_cc_array_left,
	gs_custom_cc_array_right	= gs_custom_cc_array_right,
	gs_custom_cc_thickness		= gs_custom_cc_thickness,
	gs_custom_cc_overhang		= gs_custom_cc_overhang,
	gs_custom_cc_separator_pen	= gs_custom_cc_separator_pen,
! --- Connections ---
	gs_stack_left			= gs_stack_left,
	gs_stack_right			= gs_stack_right,
	gs_stack_top			= 0,
! --- Function Control Parameters
	bEnablePlasterLeftIn	= bEnablePlasterLeftIn,
	bEnablePlasterLeftOut	= bEnablePlasterLeftOut,
	bEnablePlasterRightIn	= bEnablePlasterRightIn,
	bEnablePlasterRightOut	= bEnablePlasterRightOut,
	bEnablePlasterTopIn		= bEnablePlasterTopIn,
	bEnablePlasterTopOut	= bEnablePlasterTopOut,
	bEnablePlasterBottomIn	= bEnablePlasterBottomIn,
	bEnablePlasterBottomOut	= bEnablePlasterBottomOut,
	bEnableParapetInset		= bEnableParapetInset,
	bEnableMasonryArch		= bEnableMasonryArch,
	bEnableFaschen			= bEnableFaschen,
	gs_RevealTypeEnable		= gs_RevealTypeEnable,
	gs_ClosureTypeEnable	= gs_ClosureTypeEnable,
	bEnableWallContourHiddenLine	= bEnableWallContourHiddenLine,
! --- Macro Control Parameters
	isWindow				= 1,
	iWindowShape			= iWindowShape,
	defaultSillDepth		= defaultSillDepth,
! --- Corner Functions
	bLeftCornerFunction		= bLeftCornerFunction,
!	leftCornerAngle			= leftCornerAngle,
!	leftConnWallThk			= leftConnWallThk,
	bRightCornerFunction	= bRightCornerFunction,
!	rightCornerAngle		= rightCornerAngle,
!	rightConnWallThk		= rightConnWallThk,
! --- Casing
	bDrawOutsideTrim		= bDrawOutsideTrim,
	bDrawInsideTrim			= bDrawInsideTrim,
! --- ventialtion over frame wallhole size modification
	includeVentilationHeight		= VentilationProfileHeight * isVentilationOverFrame,
! --- String Resources
	stRevealTypes					= stRevealTypes,
	stRevealTypesBottom				= stRevealTypesBottom,
	stRevealAngleEditBy				= stRevealAngleEditBy,
	stClosureTypes					= stClosureTypes,
	stWallContourLine				= stWallContourLine,
	stCavityClosureSide				= stCavityClosureSide,
	stCavityClosureTurnDir			= stCavityClosureTurnDir,
	stDutchClosureToSide			= stDutchClosureToSide,
	stCavityClosureEditedJambSide	= stCavityClosureEditedJambSide,
	stCavityClosureEditedWallSide	= stCavityClosureEditedWallSide,
	stCavityClosureEditedSkinNumber	= stCavityClosureEditedSkinNumber,
	stCavityClosureTurnInThickness	= stCavityClosureTurnInThickness,
	stCavityClosureHatchOrientation	= stCavityClosureHatchOrientation,
!	stMasonryArchTypes				= stMasonryArchTypes,
!	stMasonryArchStructure			= stMasonryArchStructure,
!	gs_faschen_type 				= gs_faschen_type
! --- Dimension Link Parameters
	unitDLeft	= unitDLeft,
	unitDRight	= unitDRight,
	unitDUpper	= unitDUpper,
	unitDLower	= unitDLower,
	leafDLeft	= leafDLeft,
	leafDRight	= leafDRight,
	leafDUpper	= leafDUpper,
	leafDLower	= leafDLower


! =============================================================================
! Demolition / New construction
! =============================================================================

if gs_bFills = 0 then
	lock "iTypeDemolitionFill"
endif

if gs_bShowDemolitionPar then
	values{2} "iTypeDemolitionFill" 	RENOVATION_FILL_EXIST, `Нет`,
										RENOVATION_FILL_DEMOLISHED, `Демонтаж`,
										RENOVATION_FILL_NEW, `Новая Конструкция - Пустой Символ`,
										RENOVATION_FILL_NEW_FULL, `Новая Конструкция - Полный Символ`

	if iTypeDemolitionFill = RENOVATION_FILL_DEMOLISHED then
		lock "gs_wallhole_fill"
		lock "gs_wallhole_pen_fg"
		lock "gs_wallhole_pen_bg"
	endif

	if	iTypeDemolitionFill = RENOVATION_FILL_NEW |\
		iTypeDemolitionFill = RENOVATION_FILL_NEW_FULL then

		lock "gs_wallhole_fill"
		lock "gs_wallhole_pen_fg"
		lock "gs_wallhole_pen_bg"
	endif
endif


! =============================================================================
! 2D Detail Level
! =============================================================================

if gs_2DDetEnable = 0 then
			values{2} "iDWDet2D"	DETLEVEL_DW2D_MVO,		`по ПМВ`,
									DETLEVEL_DW2D_SCSENS,	`Зависит от Масштаба`,
									DETLEVEL_DW2D_50,		`1:50`,
									DETLEVEL_DW2D_100,		`1:100`,
									DETLEVEL_DW2D_200,		`1:200`,
									DETLEVEL_DW2D_OFF,		`Откл.`
else

	dim n2DScaleValueMask[]
	dim n2DScaleValueMask_m[]

	i=1
	if bittest( gs_2DDetEnable, 8) then                                              ! by MVO, 256
				n2DScaleValueMask[i] = stDetail2D[1]
				n2DScaleValueMask_m[i] = DETLEVEL_DW2D_MVO
				i = i + 1
	endif
	if bittest( gs_2DDetEnable, 0) then                                              ! Scale Sensitive in Value list, 1
				n2DScaleValueMask[i] = stDetail2D[2]
				n2DScaleValueMask_m[i] = DETLEVEL_DW2D_SCSENS
				i = i + 1
	endif
	if bittest( gs_2DDetEnable, 7) then                                              ! 1:20 in Value list,128
				n2DScaleValueMask[i] = stDetail2D[9]
				n2DScaleValueMask_m[i] = DETLEVEL_DW2D_20
				i = i + 1
	endif
	if bittest( gs_2DDetEnable, 1) then                                              ! 1:50 in Value list,2
				n2DScaleValueMask[i] = stDetail2D[3]
				n2DScaleValueMask_m[i] = DETLEVEL_DW2D_50
				i = i + 1
	endif
	if bittest( gs_2DDetEnable, 2) then                                              ! 1:100 in Value list,4
				n2DScaleValueMask[i] = stDetail2D[4]
				n2DScaleValueMask_m[i] = DETLEVEL_DW2D_100
				i = i + 1
	endif
	if bittest( gs_2DDetEnable, 3) then                                              ! 1:200 in Value list,8
				n2DScaleValueMask[i] = stDetail2D[5]
				n2DScaleValueMask_m[i] = DETLEVEL_DW2D_200
				i = i + 1
	endif
	if bittest( gs_2DDetEnable, 9) then                                              ! 1:500 in Value list, 512
				n2DScaleValueMask[i] = stDetail2D[10]
				n2DScaleValueMask_m[i] = DETLEVEL_DW2D_500
				i = i + 1
	endif
	if bittest( gs_2DDetEnable, 4) then                                              ! Off in Value list,16
				n2DScaleValueMask[i] = stDetail2D[6]
				n2DScaleValueMask_m[i] = DETLEVEL_DW2D_OFF
				i = i + 1
	endif
	if bittest( gs_2DDetEnable, 5) then                                              ! Chinese Simple in Value list,32
				n2DScaleValueMask[i] = stDetail2D[7]
				n2DScaleValueMask_m[i] = DETLEVEL_DW2D_CHISMPL
				i = i + 1
	endif
	if bittest( gs_2DDetEnable, 6) then                                              ! Chinese Detailed in Value list,64
				n2DScaleValueMask[i] = stDetail2D[8]
				n2DScaleValueMask_m[i] = DETLEVEL_DW2D_CHIDET
				i = i + 1
	endif

			values{2} "iDWDet2D"  n2DScaleValueMask_m, n2DScaleValueMask
endif


! =============================================================================
! Show Reveal On Symbol
! =============================================================================

if bCanHaveReveal then
	values{2} "iRevealOnSymbol"	SHOWREV_MVO, stRevealOnSymbValues[1],
					SHOWREV_ALWAYS, stRevealOnSymbValues[2],
					SHOWREV_UPTO50, stRevealOnSymbValues[3],
					SHOWREV_UPTO100, stRevealOnSymbValues[4],
					SHOWREV_UPTO200, stRevealOnSymbValues[5],
					SHOWREV_NEVER, stRevealOnSymbValues[6]
					
else
	lock "iRevealOnSymbol"
	hideparameter "iRevealOnSymbol"
endif


! =============================================================================
! UI Support
! =============================================================================

if GLOB_UI_BUTTON_ID < 0 then
	parameters gs_ui_current_page = -GLOB_UI_BUTTON_ID
endif

! =============================================================================
! Opline Parameters
! =============================================================================

call "OpeningOptions" parameters all bWindow 		= 0,
						iLineShapeCategory			= iLineShapeCategory,
						iLineShapeSwingEnable		= iLineShapeSwingEnable,
						gs_leaf_optype_m			= gs_leaf_optype_m,
						b2ColumnsOnOpLineUI			= 1,
						bLockOplineStyle			= bLockOplineStyle,
						bDisable2DOverride			= 0,
						bDisable3DOverride			= 0,
						bDisableSwingType			= 0,
						iOpeningParamType			= 1,
						bEnableSwingLineTurnOff		= bEnableSwingLineTurnOff,
						bEnableSecondaryOpLineTypes	= bEnableSecondaryOpLineTypes,
						gs_bSameLineTypeForLeaves	= gs_bSameLineTypeForLeaves

! =============================================================================
! Minimal Space parameter cotrol
! =============================================================================

	call "dw_minimalspace" parameters A = A,
									B = B,
									ac_wallhole_width = A,
									EgressMSWidth = EgressMSWidth,
									egressOffset = egressOffset,
									msOpeningSideWidth2 = msOpeningSideWidth2,
									msOpeningSideWidth1 = msOpeningSideWidth1,
									ms_openingSDepth = ms_openingSDepth,
									msOppositeSideWidth2 = msOppositeSideWidth2,
									msOppositeSideWidth1 = msOppositeSideWidth1,
									ms_oppositeSDepth = ms_oppositeSDepth,
									ms_slidingWidth = 0,
!									ac_unit_width = ac_unit_width,
!									gs_opside_list = gs_opside_list,
!									gs_opside_list_m = gs_opside_list_m,
									bSlidingSingle = 0,
									bSlidingDouble = 0,
									gs_leaf_optype_m	= gs_leaf_optype_m

! =============================================================================
! Oversize
! =============================================================================

values "gs_left_oversize"  range[0,]
values "gs_right_oversize" range[0,]
values "gs_upper_oversize" range[0,]
values "gs_lower_oversize" range[0,]

! =============================================================================
! Nominal Size Chooser
! =============================================================================
if not(bLanguageUSA) then
	hideparameter "gs_unit_size"
	lock "gs_unit_size"
else
	!! TYPICAL SIZES !!

	if iDoorType = 1 then
		dim bTyp_asize[]
			bTyp_asize[1]=30"
			bTyp_asize[2]=32"
			bTyp_asize[3]=36"

		dim bTyp_bsize[]
			bTyp_bsize[1]=80"
			bTyp_bsize[2]=84"
			bTyp_bsize[3]=96"
	else
		dim bTyp_asize[]
			bTyp_asize[1]=60"
			bTyp_asize[2]=64"
			bTyp_asize[3]=72"

		dim bTyp_bsize[]
			bTyp_bsize[1]=80"
			bTyp_bsize[2]=84"
			bTyp_bsize[3]=96"
	endif

	dim bTypsize[]
		for ib=1 to vardim1(bTyp_bsize)
			for ia=1 to vardim1(bTyp_asize)
				bTypsize[ib+vardim1(bTyp_bsize)*(ia-1)]=str("%0ffi", bTyp_asize[ia])+" x "+str("%0ffi", bTyp_bsize[ib])
			next ia
		next ib

	values "gs_unit_size" `Специальный Размер`, bTypsize

	if not(gs_leaf_nominal) then lock "gs_unit_size"
endif

bSetParams = 0

if GLOB_MODPAR_NAME = "gs_wallhole_nominal" | (gs_reveal_nominal & not(bCanHaveReveal)) then
	gs_wallhole_nominal	= 1
	gs_reveal_nominal	= 0
	gs_unit_nominal		= 0
	gs_egress_nominal	= 0
	gs_leaf_nominal		= 0

	bSetParams = 1
endif

if GLOB_MODPAR_NAME = "gs_reveal_nominal" then
	gs_wallhole_nominal	= 0
	gs_reveal_nominal	= 1
	gs_unit_nominal		= 0
	gs_egress_nominal	= 0
	gs_leaf_nominal		= 0

	bSetParams = 1
endif

if GLOB_MODPAR_NAME = "gs_unit_nominal" then
	gs_wallhole_nominal	= 0
	gs_reveal_nominal	= 0
	gs_unit_nominal		= 1
	gs_egress_nominal	= 0
	gs_leaf_nominal		= 0

	bSetParams = 1
endif

if GLOB_MODPAR_NAME = "gs_egress_nominal" then
	gs_wallhole_nominal	= 0
	gs_reveal_nominal	= 0
	gs_unit_nominal		= 0
	gs_egress_nominal	= 1
	gs_leaf_nominal		= 0

	bSetParams = 1
endif

if GLOB_MODPAR_NAME = "gs_leaf_nominal" then
	gs_wallhole_nominal	= 0
	gs_reveal_nominal	= 0
	gs_unit_nominal		= 0
	gs_egress_nominal	= 0
	gs_leaf_nominal		= 1

	bSetParams = 1
endif

if bSetParams then
	parameters	gs_nominal_size		= gs_wallhole_nominal + 2 * gs_reveal_nominal + 4 * gs_unit_nominal + 8 * gs_egress_nominal + 16 * gs_leaf_nominal,
				gs_wallhole_nominal	= gs_wallhole_nominal,
				gs_reveal_nominal	= gs_reveal_nominal,
				gs_unit_nominal		= gs_unit_nominal,
				gs_egress_nominal	= gs_egress_nominal,
				gs_leaf_nominal		= gs_leaf_nominal
endif


! =============================================================================

bRecalculate	= 	(GLOB_MODPAR_NAME = "gs_frame_width" |		\
					GLOB_MODPAR_NAME = "gs_tolerance_left" |	\
					GLOB_MODPAR_NAME = "gs_tolerance_right" |	\
					GLOB_MODPAR_NAME = "gs_tolerance_upper" |	\
					GLOB_MODPAR_NAME = "gs_tolerance_lower" |	\
					GLOB_MODPAR_NAME = "gs_reveal_left" |		\
					GLOB_MODPAR_NAME = "gs_reveal_right" |		\
					GLOB_MODPAR_NAME = "gs_reveal_top" |		\
					GLOB_MODPAR_NAME = "gs_reveal_bottom"|	\
					GLOB_MODPAR_NAME = "bVentilationProfile"|	\
					GLOB_MODPAR_NAME = "iVentilationProfileType"|	\
					(GLOB_MODPAR_NAME = "VentilationProfileHeight" & isVentilationOverFrame))

bNominalSelectChanged	= (	GLOB_MODPAR_NAME = "gs_wallhole_nominal" |	\
							GLOB_MODPAR_NAME = "gs_reveal_nominal" |	\
							GLOB_MODPAR_NAME = "gs_unit_nominal" |		\
							GLOB_MODPAR_NAME = "gs_egress_nominal" |	\
							GLOB_MODPAR_NAME = "gs_leaf_nominal")

minWallholeWidth	= minUnitWidth	+ wallholeDLeft  + wallholeDRight
minWallholeHeight	= minUnitHeight + wallholeDUpper + wallholeDLower
minRevealWidth		= minUnitWidth	+ wallholeDLeft	 + wallholeDRight - revealDLeft  - revealDRight
minRevealHeight		= minUnitHeight + wallholeDUpper + wallholeDLower - revealDUpper - revealDLower
minEgressWidth		= minUnitWidth	- unitDLeft  - unitDRight
minEgressHeight		= minUnitHeight	- unitDUpper - unitDLower
minLeafWidth		= minEgressWidth  + leafDLeft  + leafDRight
minLeafHeight		= minEgressHeight + leafDUpper + leafDLower

bSizeModified	= 0
gosub 100		! Link Dimensions

if gs_wallhole_nominal then
	minWidth	= minWallholeWidth
	minHeight	= minWallholeHeight
endif
if gs_reveal_nominal then
	minWidth	= minRevealWidth
	minHeight	= minRevealHeight
endif
if gs_unit_nominal then
	minWidth	= minUnitWidth
	minHeight	= minUnitHeight
endif
if gs_egress_nominal then
	minWidth	= minEgressWidth
	minHeight	= minEgressHeight
endif
if gs_leaf_nominal then
	minWidth	= minLeafWidth
	minHeight	= minLeafHeight
endif


values "A" range [minWidth,]
values "B" range [minHeight,]

if bSizeModified | (not(gs_retain_nominal_sizes) & bNominalSelectChanged) then
	if gs_wallhole_nominal then
		if ac_wallhole_width < minWallholeWidth then
						ac_wallhole_width = minWallholeWidth
			parameters	ac_wallhole_width = minWallholeWidth
			bSizeModified = 1
		endif
		if ac_wallhole_height < minWallholeHeight then
						ac_wallhole_height = minWallholeHeight
			parameters	ac_wallhole_height = minWallholeHeight
			bSizeModified = 1
		endif

		parameters A = ac_wallhole_width,	B = ac_wallhole_height
	endif
	if gs_reveal_nominal then
		if ac_reveal_width < minRevealWidth then
						ac_reveal_width = minRevealWidth
			parameters	ac_reveal_width = minRevealWidth
			bSizeModified = 1
		endif
		if ac_reveal_height < minRevealHeight then
						ac_reveal_height = minRevealHeight
			parameters	ac_reveal_height = minRevealHeight
			bSizeModified = 1
		endif

		parameters A = ac_reveal_width,	B = ac_reveal_height
	endif
	if gs_unit_nominal then
		if ac_unit_width < minUnitWidth then
						ac_unit_width = minUnitWidth
			parameters	ac_unit_width = minUnitWidth
			bSizeModified = 1
		endif
		if ac_unit_height < minUnitHeight then
						ac_unit_height = minUnitHeight
			parameters	ac_unit_height = minUnitHeight
			bSizeModified = 1
		endif

		parameters A = ac_unit_width, B = ac_unit_height
	endif
	if gs_egress_nominal then
		if ac_egress_width < minEgressWidth then
						ac_egress_width = minEgressWidth
			parameters	ac_egress_width = minEgressWidth
			bSizeModified = 1
		endif
		if ac_egress_height < minEgressHeight then
						ac_egress_height = minEgressHeight
			parameters	ac_egress_height = minEgressHeight
			bSizeModified = 1
		endif

		parameters A = ac_egress_width, B = ac_egress_height
	endif
	if gs_leaf_nominal then
		if ac_leaf_width < minLeafWidth then
						ac_leaf_width = minLeafWidth
			parameters	ac_leaf_width = minLeafWidth
			bSizeModified = 1
		endif
		if ac_leaf_height < minLeafHeight then
						ac_leaf_height = minLeafHeight
			parameters	ac_leaf_height = minLeafHeight
			bSizeModified = 1
		endif

		parameters A = ac_leaf_width, B = ac_leaf_height
	endif
else
	if A < minWidth then
		A = minWidth
		parameters A = A
	endif
	if B < minHeight then
		B = minHeight
		parameters B = B
	endif

	if gs_wallhole_nominal then
		ac_wallhole_width	= A
		ac_wallhole_height	= B
		parameters ac_wallhole_width = A, ac_wallhole_height = B
	endif
	if gs_reveal_nominal then
		ac_reveal_width  = A
		ac_reveal_height = B
		parameters ac_reveal_width = A, ac_reveal_height = B
	endif
	if gs_unit_nominal then
		ac_unit_width	= A
		ac_unit_height	= B
		parameters ac_unit_width = A, ac_unit_height = B
	endif
	if gs_egress_nominal then
		ac_egress_width  = A
		ac_egress_height = B
		parameters ac_egress_width = A, ac_egress_height = B
	endif
	if gs_leaf_nominal then
		ac_leaf_width	= A
		ac_leaf_height	= B
		parameters ac_leaf_width = A, ac_leaf_height = B
	endif

	bRecalculate = 1
	gosub 100		! Link Dimensions
endif

if	not(bCanHaveReveal)	then
	lock "gs_reveal_nominal", "ac_reveal_width", "ac_reveal_height"
	hideparameter "gs_reveal_nominal", "ac_reveal_width", "ac_reveal_height"
endif


! ====================================================
! 				Door opens to Zone
! ====================================================


values "gs_list_location_as" stLocationAs

if gs_list_location_as <> stLocationAs[3] then
	roomname	= ""
	roomnumber	= ""

	catname = "" : code = ""
	name = ""	: nr = ""
	catname2 = "" : code2 = ""
	name2 = "" 	: nr2 = ""
	rrr = request("Zone_relations","",catname,code,name,nr,catname2,code2,name2,nr2)

	if rrr<>0 then

		outDir = 0
		zzz = request ("WINDOW_DOOR_ZONE_RELEV", "", outDir)

		if rrr=8 then
				if outDir = 1 then
					roomname=name
					roomnumber=nr
				else
					roomname=name2
					roomnumber=nr2
				endif
			else
				if rrr=4 then !this reports if only one zone
					if outDir = 1 then
						roomname=name
						roomnumber=nr
					else
						roomname=name!nullStr
						roomnumber=nr
					endif
				endif
		endif
	endif

	if gs_list_location_as = stLocationAs[1] then
		parameters gs_list_location = roomname
		lock "gs_list_location"
	endif

	if gs_list_location_as = stLocationAs[2] then
		parameters gs_list_location = roomnumber
		lock "gs_list_location"
	endif
endif

! =============================================================================
end
! =============================================================================


100:
! =============================================================================
! Link Dimensions
! =============================================================================
	if bLanguageUSA then
		if gs_unit_size<>`Специальный Размер` then
			nr=split ( gs_unit_size, "%n x %n", a_size, sep, b_size)

			ac_leaf_width=a_size
			ac_leaf_height=b_size
			parameters ac_leaf_width=a_size
			parameters ac_leaf_height=b_size

			ac_egress_width		= ac_leaf_width		- leafDLeft		- leafDRight
			ac_unit_width		= ac_egress_width	+ unitDLeft		+ unitDRight
			ac_wallhole_width	= ac_unit_width		+ wallholeDLeft	+ wallholeDRight
			ac_reveal_width		= ac_wallhole_width	- revealDLeft	- revealDRight
			parameters	ac_wallhole_width	= ac_wallhole_width,
						ac_reveal_width		= ac_reveal_width,
						ac_unit_width		= ac_unit_width,
						ac_egress_width		= ac_egress_width

			ac_egress_height	= ac_leaf_height	- leafDUpper	 - leafDLower
			ac_unit_height		= ac_egress_height	+ unitDUpper	 + unitDLower
			ac_wallhole_height	= ac_unit_height	+ wallholeDUpper + wallholeDLower
			ac_reveal_height	= ac_wallhole_height - revealDUpper		- revealDLower
			parameters	ac_wallhole_height	= ac_wallhole_height,
						ac_reveal_height	= ac_reveal_height,
						ac_unit_height		= ac_unit_height,
						ac_egress_height	= ac_egress_height

			lock "ac_unit_width", "ac_unit_height"
			lock "ac_wallhole_width", "ac_wallhole_height"
			lock "ac_egress_width", "ac_egress_height"
			lock "ac_reveal_width", "ac_reveal_height"

			bSizeModified = 1
		endif
	endif

	if GLOB_MODPAR_NAME = "ac_wallhole_width" | (gs_wallhole_nominal & bRecalculate) then
		if ac_wallhole_width < minWallholeWidth then
						ac_wallhole_width = minWallholeWidth
			parameters	ac_wallhole_width = minWallholeWidth
		endif

		ac_reveal_width	= ac_wallhole_width	- revealDLeft	- revealDRight
		ac_unit_width	= ac_wallhole_width	- wallholeDLeft	- wallholeDRight
		gosub "sidelightSizeModifier"
		ac_leaf_width	= ac_egress_width	+ leafDLeft		+ leafDRight

		parameters	ac_reveal_width	= ac_reveal_width,
					ac_unit_width	= ac_unit_width,
					ac_egress_width	= ac_egress_width,
					ac_leaf_width	= ac_leaf_width

		bSizeModified = 1
	endif
	if GLOB_MODPAR_NAME = "ac_reveal_width" | (gs_reveal_nominal & bRecalculate) then
		if ac_reveal_width < minRevealWidth then
						ac_reveal_width = minRevealWidth
			parameters	ac_reveal_width = minRevealWidth
		endif

		ac_wallhole_width	= ac_reveal_width	+ revealDLeft	+ revealDRight
		ac_unit_width		= ac_wallhole_width	- wallholeDLeft	- wallholeDRight
		gosub "sidelightSizeModifier"
		ac_leaf_width		= ac_egress_width	+ leafDLeft		+ leafDRight

		parameters	ac_wallhole_width	= ac_wallhole_width,
					ac_unit_width		= ac_unit_width,
					ac_egress_width		= ac_egress_width,
					ac_leaf_width		= ac_leaf_width

		bSizeModified = 1
	endif
	if GLOB_MODPAR_NAME = "ac_unit_width" | (gs_unit_nominal & bRecalculate) then
		if ac_unit_width < minUnitWidth then
						ac_unit_width = minUnitWidth
			parameters	ac_unit_width = minUnitWidth
		endif

		ac_wallhole_width	= ac_unit_width		+ wallholeDLeft	+ wallholeDRight
		ac_reveal_width		= ac_wallhole_width	- revealDLeft	- revealDRight
		gosub "sidelightSizeModifier"
		ac_leaf_width		= ac_egress_width	+ leafDLeft		+ leafDRight

		parameters	ac_wallhole_width	= ac_wallhole_width,
					ac_reveal_width		= ac_reveal_width,
					ac_egress_width		= ac_egress_width,
					ac_leaf_width		= ac_leaf_width

		bSizeModified = 1
	endif
	if GLOB_MODPAR_NAME = "ac_egress_width" | (gs_egress_nominal & bRecalculate) then
		if ac_egress_width < minEgressWidth then
						ac_egress_width = minEgressWidth
			parameters	ac_egress_width = minEgressWidth
		endif

		if GLOB_MODPAR_NAME = "ac_egress_width" then gosub "sidelightSizeModifierForLeafEgress"
		ac_leaf_width		= ac_egress_width	+ leafDLeft		+ leafDRight
		ac_unit_width		= ac_egress_width	+ unitDLeft		+ unitDRight
		ac_wallhole_width	= ac_unit_width		+ wallholeDLeft	+ wallholeDRight
		ac_reveal_width		= ac_wallhole_width	- revealDLeft	- revealDRight

		parameters	ac_wallhole_width	= ac_wallhole_width,
					ac_reveal_width		= ac_reveal_width,
					ac_unit_width		= ac_unit_width,
					ac_leaf_width		= ac_leaf_width

		bSizeModified = 1
	endif
	if GLOB_MODPAR_NAME = "ac_leaf_width" | (gs_leaf_nominal & bRecalculate) then
		if ac_leaf_width < minLeafWidth then
						ac_leaf_width = minLeafWidth
			parameters	ac_leaf_width = minLeafWidth
		endif

		ac_egress_width		= ac_leaf_width		- leafDLeft		- leafDRight
		if GLOB_MODPAR_NAME = "ac_leaf_width" then gosub "sidelightSizeModifierForLeafEgress"
		ac_unit_width		= ac_egress_width	+ unitDLeft		+ unitDRight
		ac_wallhole_width	= ac_unit_width		+ wallholeDLeft	+ wallholeDRight
		ac_reveal_width		= ac_wallhole_width	- revealDLeft	- revealDRight

		parameters	ac_wallhole_width	= ac_wallhole_width,
					ac_reveal_width		= ac_reveal_width,
					ac_unit_width		= ac_unit_width,
					ac_egress_width		= ac_egress_width

		bSizeModified = 1
	endif

	! =============================================================================

	if GLOB_MODPAR_NAME = "ac_wallhole_height" | (gs_wallhole_nominal & bRecalculate) then
		if ac_wallhole_height < minWallholeHeight then
						ac_wallhole_height = minWallholeHeight
			parameters	ac_wallhole_height = minWallholeHeight
		endif

		ac_reveal_height	= ac_wallhole_height - revealDUpper		- revealDLower
		ac_unit_height		= ac_wallhole_height - wallholeDUpper	- wallholeDLower
		gosub "transomSizeModifier"
		ac_leaf_height		= ac_egress_height	 + leafDUpper		+ leafDLower

		parameters	ac_reveal_height	= ac_reveal_height,
					ac_unit_height		= ac_unit_height,
					ac_egress_height	= ac_egress_height,
					ac_leaf_height		= ac_leaf_height

		bSizeModified = 1
	endif
	if GLOB_MODPAR_NAME = "ac_reveal_height" | (gs_reveal_nominal & bRecalculate) then
		if ac_reveal_height < minRevealHeight then
						ac_reveal_height = minRevealHeight
			parameters	ac_reveal_height = minRevealHeight
		endif

		ac_wallhole_height	= ac_reveal_height	 + revealDUpper		+ revealDLower
		ac_unit_height		= ac_wallhole_height - wallholeDUpper	- wallholeDLower
		gosub "transomSizeModifier"
		ac_leaf_height		= ac_egress_height	 + leafDUpper		+ leafDLower

		parameters	ac_wallhole_height	= ac_wallhole_height,
					ac_unit_height		= ac_unit_height,
					ac_egress_height	= ac_egress_height,
					ac_leaf_height		= ac_leaf_height

		bSizeModified = 1
	endif
	if GLOB_MODPAR_NAME = "ac_unit_height" | (gs_unit_nominal & bRecalculate) then
		if ac_unit_height < minUnitHeight then
						ac_unit_height = minUnitHeight
			parameters	ac_unit_height = minUnitHeight
		endif

		ac_wallhole_height	= ac_unit_height	+ wallholeDUpper + wallholeDLower
		ac_reveal_height	= ac_wallhole_height - revealDUpper	 - revealDLower
		gosub "transomSizeModifier"
		ac_leaf_height		= ac_egress_height	+ leafDUpper	 + leafDLower

		parameters	ac_wallhole_height	= ac_wallhole_height,
					ac_reveal_height	= ac_reveal_height,
					ac_egress_height	= ac_egress_height,
					ac_leaf_height		= ac_leaf_height

		bSizeModified = 1
	endif
	if GLOB_MODPAR_NAME = "ac_egress_height" | (gs_egress_nominal & bRecalculate) then
		if ac_egress_height < minEgressHeight then
						ac_egress_height = minEgressHeight
			parameters	ac_egress_height = minEgressHeight
		endif

		if GLOB_MODPAR_NAME = "ac_egress_height" then gosub "transomSizeModifierForLeafEgress"
		ac_leaf_height		= ac_egress_height	+ leafDUpper	 + leafDLower
		ac_unit_height		= ac_egress_height	+ unitDUpper	 + unitDLower
		ac_wallhole_height	= ac_unit_height	+ wallholeDUpper + wallholeDLower
		ac_reveal_height	= ac_wallhole_height - revealDUpper		- revealDLower

		parameters	ac_wallhole_height	= ac_wallhole_height,
					ac_reveal_height	= ac_reveal_height,
					ac_unit_height		= ac_unit_height,
					ac_leaf_height		= ac_leaf_height

		bSizeModified = 1
	endif
	if GLOB_MODPAR_NAME = "ac_leaf_height" | (gs_leaf_nominal & bRecalculate) then
		if ac_leaf_height < minLeafHeight then
						ac_leaf_height = minLeafHeight
			parameters	ac_leaf_height = minLeafHeight
		endif

		ac_egress_height	= ac_leaf_height	- leafDUpper	 - leafDLower
		if GLOB_MODPAR_NAME = "ac_leaf_height" then gosub "transomSizeModifierForLeafEgress"
		ac_unit_height		= ac_egress_height	+ unitDUpper	 + unitDLower
		ac_wallhole_height	= ac_unit_height	+ wallholeDUpper + wallholeDLower
		ac_reveal_height	= ac_wallhole_height - revealDUpper		- revealDLower

		parameters	ac_wallhole_height	= ac_wallhole_height,
					ac_reveal_height	= ac_reveal_height,
					ac_unit_height		= ac_unit_height,
					ac_egress_height	= ac_egress_height

		bSizeModified = 1
	endif
return

! =============================================================================

"sidelightSizeModifier":

	if gs_sidelight_left then
		if gs_sidelight_right then
			! sidelights on both sides
			sidelightsTotalWidth = ac_unit_width - ac_egress_width - gs_ds_w * 2
			if GLOB_MODPAR_NAME = "gs_sidelight_width_left" then
				if gs_sidelight_width_left > sidelightsTotalWidth - minSidelightWidthRight then gs_sidelight_width_left = sidelightsTotalWidth - minSidelightWidthRight
				if gs_sidelight_width_left < minSidelightWidthLeft then gs_sidelight_width_left = minSidelightWidthLeft
				gs_sidelight_width_right = sidelightsTotalWidth - gs_sidelight_width_left
			else
				if GLOB_MODPAR_NAME = "gs_sidelight_width_right" then
					if gs_sidelight_width_right > sidelightsTotalWidth - minSidelightWidthLeft then gs_sidelight_width_right = sidelightsTotalWidth - minSidelightWidthLeft
					if gs_sidelight_width_right < minSidelightWidthRight then gs_sidelight_width_right = minSidelightWidthRight
					gs_sidelight_width_left = sidelightsTotalWidth - gs_sidelight_width_right
				else
					sideRatio = gs_sidelight_width_left / (gs_sidelight_width_left + gs_sidelight_width_right)
					gs_sidelight_width_left = sideRatio * sidelightsTotalWidth
					if gs_sidelight_width_left < minSidelightWidthLeft then gs_sidelight_width_left = minSidelightWidthLeft
					gs_sidelight_width_right = sidelightsTotalWidth - gs_sidelight_width_left
					if gs_sidelight_width_right < minSidelightWidthRight then gs_sidelight_width_right = minSidelightWidthRight
				endif
			endif
			parameters gs_sidelight_width_left = gs_sidelight_width_left, gs_sidelight_width_right = gs_sidelight_width_right
			ac_egress_width = ac_unit_width - gs_ds_w * 2 - gs_sidelight_width_left - gs_sidelight_width_right
		else
			! sidelight only on the left
			if	GLOB_MODPAR_NAME <> "gs_sidelight_width_left" then
				gs_sidelight_width_left = ac_unit_width - unitDRight - ac_egress_width - gs_ds_w
			endif
			if gs_sidelight_width_left < minSidelightWidthLeft then gs_sidelight_width_left = minSidelightWidthLeft
			parameters gs_sidelight_width_left = gs_sidelight_width_left
			ac_egress_width = ac_unit_width - gs_ds_w - gs_sidelight_width_left - unitDRight
		endif
	else
		if gs_sidelight_right then
			! sidelight only on the right
			if	GLOB_MODPAR_NAME <> "gs_sidelight_width_right" then
				gs_sidelight_width_right = ac_unit_width - unitDLeft - ac_egress_width - gs_ds_w
			endif
			if gs_sidelight_width_right < minSidelightWidthRight then gs_sidelight_width_right = minSidelightWidthRight
			parameters gs_sidelight_width_right = gs_sidelight_width_right
			ac_egress_width = ac_unit_width - gs_ds_w - gs_sidelight_width_right - unitDLeft
		else
			! no sidelight at all
			ac_egress_width	= ac_unit_width		- unitDLeft		- unitDRight
		endif
	endif
	if ac_egress_width < minEgressWidth then ac_egress_width = minEgressWidth

return


"sidelightSizeModifierForLeafEgress":

	if gs_sidelight_left then
		if gs_sidelight_right then
			! sidelights on both sides
			sidelightsTotalWidth = ac_unit_width - ac_egress_width - gs_ds_w * 2
			sideRatio = gs_sidelight_width_left / (gs_sidelight_width_left + gs_sidelight_width_right)

			gs_sidelight_width_left = sideRatio * sidelightsTotalWidth
			if gs_sidelight_width_left < minSidelightWidthLeft then gs_sidelight_width_left = minSidelightWidthLeft

			gs_sidelight_width_right = sidelightsTotalWidth - gs_sidelight_width_left
			if gs_sidelight_width_right < minSidelightWidthRight then gs_sidelight_width_right = minSidelightWidthRight

			parameters	gs_sidelight_width_left = gs_sidelight_width_left,
						gs_sidelight_width_right = gs_sidelight_width_right
		else
			! sidelight only on the left
			gs_sidelight_width_left = ac_unit_width - unitDRight - ac_egress_width - gs_ds_w

			if gs_sidelight_width_left < minSidelightWidthLeft then gs_sidelight_width_left = minSidelightWidthLeft
			parameters gs_sidelight_width_left = gs_sidelight_width_left
		endif
	else
		if gs_sidelight_right then
			! sidelight only on the right
			gs_sidelight_width_right = ac_unit_width - unitDLeft - ac_egress_width - gs_ds_w

			if gs_sidelight_width_right < minSidelightWidthRight then gs_sidelight_width_right = minSidelightWidthRight
			parameters gs_sidelight_width_right = gs_sidelight_width_right
		else
			! no sidelight at all
		endif
	endif
	if gs_sidelight_left | gs_sidelight_right then gosub "unitSizeDiff"

return


"transomSizeModifier":

	if gs_door_transom then
		! Has Transom
		if	GLOB_MODPAR_NAME <> "gs_transom_height" then
			gs_transom_height = ac_unit_height - unitDLower - ac_egress_height - gs_ds_w
		endif
		if gs_transom_height < minTransomHeight then gs_transom_height = minTransomHeight
		parameters gs_transom_height = gs_transom_height
		ac_egress_height = ac_unit_height - unitDLower - gs_transom_height - gs_ds_w
	else
		! No Transom
		ac_egress_height	= ac_unit_height	 - unitDUpper		- unitDLower
	endif
	if ac_egress_height < minEgressHeight then ac_egress_height = minEgressHeight

return


"transomSizeModifierForLeafEgress":

	if gs_door_transom then
		gs_transom_height = ac_unit_height - unitDLower - ac_egress_height - gs_ds_w

		if gs_transom_height < minTransomHeight then gs_transom_height = minTransomHeight
		parameters gs_transom_height = gs_transom_height

		gosub "unitSizeDiff"
	endif

return


"unitSizeDiff":

	unitDLeft		= not(gs_sidelight_left)  * gs_frame_width_left  + gs_ds_w + gs_sidelight_width_left * gs_sidelight_left
	unitDRight		= not(gs_sidelight_right) * gs_frame_width_right + gs_ds_w + gs_sidelight_width_right * gs_sidelight_right
	unitDUpper		= not(gs_door_transom)    * gs_frame_width_upper + gs_ds_w + gs_transom_height * gs_door_transom
	unitDLower		= 0

return

]]>
</Script_VL>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Comment SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Comment>

<ParamSection SectVersion="26" SectionFlags="0" SubIdent="0">
	<ParamSectHeader>
		<Version>26</Version>
		<AutoHotspots>false</AutoHotspots>
		<HoleBits>
			<WDBit_3DFrame/>
			<WDBit_ThickIsParam/>
			<WDBit_LFramIsParam/>
			<WDBit_RFramIsParam/>
			<WDBit_TFramIsParam/>
			<WDBit_BFramIsParam/>
		</HoleBits>
		<WDLeftFrame>0</WDLeftFrame>
		<WDRightFrame>0</WDRightFrame>
		<WDTopFrame>0</WDTopFrame>
		<WDBotFrame>0</WDBotFrame>
		<LayFlags>65535</LayFlags>
		<WDMirrorThickness>0</WDMirrorThickness>
		<WDWallInset>-1</WDWallInset>
		<SymbolColor>0</SymbolColor>
	</ParamSectHeader>
	<Parameters>
		<Length Name="A">
			<Description><![CDATA["Nominal Width"]]></Description>
			<Fix/>
			<Value>1</Value>
		</Length>
		<Length Name="B">
			<Description><![CDATA["Nominal Height"]]></Description>
			<Fix/>
			<Value>1</Value>
		</Length>
		<Length Name="ZZYZX">
			<Description><![CDATA["Z Dimension"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Integer Name="AC_WallContours">
			<Description><![CDATA["Wall Contours (0-None,1-Full,2-Side,3-Length)"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="AC_Hole_Hotspot_Control">
			<Description><![CDATA["Hotspots 0-None,1-2D,2-3D,3-All"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>3</Value>
		</Integer>
		<Boolean Name="AC_show2DHotspotsIn3D">
			<Description><![CDATA["Show 2D Hotspots in 3D"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="ac_bottomlevel">
			<Description><![CDATA["Bottom Level"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="ac_toplevel">
			<Description><![CDATA["Top Level"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="AC_Sill_To_Curr_Story">
			<Description><![CDATA["Sill Height to Current Story"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Integer Name="AC_Hole_Display_Option">
			<Description><![CDATA["Floor Plan Display Option"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>3</Value>
		</Integer>
		<Angle Name="AC_Hole_Position_Angle">
			<Description><![CDATA["Hole Position Angle"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Boolean Name="AC_HoleSideMaterial">
			<Description><![CDATA["Hole has Wall's Side Surface"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="AC_HoleMaterialCurved">
			<Description><![CDATA["Hole Surface's Split is Curved in Curved Walls"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- gs_door_frame: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_door_frame">
			<Description><![CDATA["Door Frame"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
		</Title>
		<Integer Name="AC_WallType">
			<Description><![CDATA["Wall Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="AC_WindowInWallContour">
			<Description><![CDATA["Window in Wall Contour"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="4" SecondDimension="0">
				<AVal Row="1">0</AVal>
				<AVal Row="2">0</AVal>
				<AVal Row="3">0</AVal>
				<AVal Row="4">0</AVal>
			</ArrayValues>
		</Integer>
		<Length Name="AC_WallContourPolygon">
			<Description><![CDATA["Wall Contour Polygon"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="3">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0</AVal>
				<AVal Column="3" Row="1">0</AVal>
			</ArrayValues>
		</Length>
		<Integer Name="AC_Wall_Direction_Type">
			<Description><![CDATA["Wall Direction Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="ac_revealAnchorPos">
			<Description><![CDATA["Reveal Anchor Position"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Length Name="ac_revealToWallCore">
			<Description><![CDATA["Reveal to Wall Core"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Integer Name="ac_zone_on_reveal_side">
			<Description><![CDATA["Opening Direction"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>-1</Value>
		</Integer>
		<Integer Name="pwi">
			<Description><![CDATA["Parapet Wall Inset Value"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="ac_wido_hide_options">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="gs_RevealTypeEnable">
			<Description><![CDATA["Reveal and Closure Type Enable Mask"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="gs_ClosureTypeEnable">
			<Description><![CDATA["Closure Type Enable Mask"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="iDoorType">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Integer>
		<Boolean Name="bLanguageUSA">
			<Description><![CDATA["USA"]]></Description>
			<Value>0</Value>
		</Boolean>
		<String Name="LibraryLangCode">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value><![CDATA["RUS"]]></Value>
		</String>

		<!-- gs_function_control_parameters: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_function_control_parameters">
			<Description><![CDATA["Function Control Parameters"]]></Description>
		</Title>
		<Integer Name="bEnableSill">
			<Description><![CDATA["Enable/Disable Sill Function"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>-1</Value>
		</Integer>
		<Integer Name="bEnableBoard">
			<Description><![CDATA["Enable/Disable Board Function"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>-1</Value>
		</Integer>
		<Integer Name="bEnableParapetInset">
			<Description><![CDATA["Enable/Disable Parapet Inset"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>-1</Value>
		</Integer>
		<Integer Name="bEnableMasonryArch">
			<Description><![CDATA["Enable/Disable Masonry Arch"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>-1</Value>
		</Integer>
		<Integer Name="bEnableFaschen">
			<Description><![CDATA["Enable/Disable Ornamental Window Moldings"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>-1</Value>
		</Integer>
		<Integer Name="bEnableThreshold">
			<Description><![CDATA["Enable/Disable Threshold"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>-1</Value>
		</Integer>
		<Integer Name="bEnableCasing">
			<Description><![CDATA["Enable/Disable Casing"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>-1</Value>
		</Integer>
		<Integer Name="bEnableShutter">
			<Description><![CDATA["Enable/Disable Shutter"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>-1</Value>
		</Integer>
		<Integer Name="bEnableCustomCornerLeft">
			<Description><![CDATA["Enable/Disable Custom Corner Left"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>-1</Value>
		</Integer>
		<Integer Name="bEnableCustomCornerRight">
			<Description><![CDATA["Enable/Disable Custom Corner Right"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>-1</Value>
		</Integer>

		<!-- gs_macro_control_parameters: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_macro_control_parameters">
			<Description><![CDATA["Macro Control Parameters"]]></Description>
		</Title>
		<Integer Name="gs_macro_version">
			<Description><![CDATA["Macro Version"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>11</Value>
		</Integer>
		<Boolean Name="gs_IsCurved">
			<Description><![CDATA["Curved Window"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="lod3D">
			<Description><![CDATA["3D Detail Level"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="uiUsedPageIDs">
			<Description><![CDATA[""]]></Description>
			<ArrayValues FirstDimension="1" SecondDimension="2">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0</AVal>
			</ArrayValues>
		</Integer>
		<String Name="uiUsedPageNames">
			<Description><![CDATA[""]]></Description>
			<ArrayValues FirstDimension="1" SecondDimension="2">
				<AVal Column="1" Row="1"><![CDATA[""]]></AVal>
				<AVal Column="2" Row="1"><![CDATA[""]]></AVal>
			</ArrayValues>
		</String>
		<Boolean Name="bLeftCornerFunction">
			<Description><![CDATA["Left Corner"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Angle Name="leftCornerAngle">
			<Description><![CDATA["Left Corner Angle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>180</Value>
		</Angle>
		<Boolean Name="bLeftDiffConnWall">
			<Description><![CDATA["Left Diff. Conn. Wall Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="leftConnWallThk">
			<Description><![CDATA["Left Connected Wall Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0.3</Value>
		</Length>
		<Boolean Name="bRightCornerFunction">
			<Description><![CDATA["Right Corner"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Angle Name="rightCornerAngle">
			<Description><![CDATA["Right Corner Angle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>180</Value>
		</Angle>
		<Boolean Name="bRightDiffConnWall">
			<Description><![CDATA["Right Diff. Conn. Wall Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="rightConnWallThk">
			<Description><![CDATA["Right Connected Wall Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0.3</Value>
		</Length>

		<!-- iTypeDemolitionFill: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Integer Name="iTypeDemolitionFill">
			<Description><![CDATA["Demolition / New construction"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_BoldName/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<FillPattern Name="gs_Demolition_fill">
			<Description><![CDATA["Demolition Fill Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</FillPattern>
		<PenColor Name="gs_Demolition_pen_fg">
			<Description><![CDATA["Demolition Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</PenColor>
		<PenColor Name="gs_Demolition_pen_bg">
			<Description><![CDATA["Demolition Background Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</PenColor>
		<FillPattern Name="gs_New_fill">
			<Description><![CDATA["New Fill Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</FillPattern>
		<PenColor Name="gs_New_pen_fg">
			<Description><![CDATA["New Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</PenColor>
		<PenColor Name="gs_New_pen_bg">
			<Description><![CDATA["New Background Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</PenColor>
		<FillPattern Name="gs_new_symb_fill">
			<Description><![CDATA["New Wall Fill Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>4</Value>
		</FillPattern>
		<PenColor Name="gs_new_symb_pen_Fg">
			<Description><![CDATA["New Wall Fill Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</PenColor>
		<PenColor Name="gs_new_symb_pen_bg">
			<Description><![CDATA["New Wall Fill Background Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<Length Name="gs_new_symb_width_r">
			<Description><![CDATA["New Wall Fill Width Right"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.15</Value>
		</Length>
		<Length Name="gs_new_symb_width_l">
			<Description><![CDATA["New Wall Fill Width Left"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.15</Value>
		</Length>
		<Boolean Name="gs_bShowNewOnCC">
			<Description><![CDATA["Show new construction on Wall"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<LineType Name="gs_Demolition_linetype">
			<Description><![CDATA["Demolition line type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</LineType>
		<Boolean Name="gs_bShowDemolitionPar">
			<Description><![CDATA["Show Demolition/New parameter"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- gs_options: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_options">
			<Description><![CDATA["Options"]]></Description>
			<Fix/>
		</Title>
		<Boolean Name="bOpeningSymbDisplay">
			<Description><![CDATA["Symbolic Display of Opening"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="iDWDet2D">
			<Description><![CDATA["2D Detail Level"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="gs_2DDetEnable">
			<Description><![CDATA["2D Detail Level Enable"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<String Name="gs_detlevel_3D">
			<Description><![CDATA["3D Detail Level"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="iDWDet3D">
			<Description><![CDATA["3D Detail Level"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>-9999</Value>
		</Integer>
		<Boolean Name="bNotShowCasingIn2DNOR">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bShowSillBoardIn2D100NED">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bHideVariClosTypeInSimple2D">
			<Description><![CDATA["Hide Variable Closure Type (NED, FLA)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- gs_door_sizes: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_door_sizes">
			<Description><![CDATA["Door Sizes"]]></Description>
			<Fix/>
		</Title>
		<String Name="gs_unit_size">
			<Description><![CDATA["Unit Size"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Специальный Размер"]]></Value>
		</String>
		<Length Name="minUnitWidth">
			<Description><![CDATA["Minimal Unit Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="minUnitHeight">
			<Description><![CDATA["Minimal Unit Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="minSidelightWidthLeft">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="minSidelightWidthRight">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="minTransomHeight">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="gs_tolerance_left">
			<Description><![CDATA["Tolerance Left"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_tolerance_right">
			<Description><![CDATA["Tolerance Right"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_tolerance_upper">
			<Description><![CDATA["Tolerance Upper"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_tolerance_lower">
			<Description><![CDATA["Tolerance Lower"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ac_wallhole_width">
			<Description><![CDATA["Wallhole Width"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1.5</Value>
		</Length>
		<Length Name="ac_wallhole_height">
			<Description><![CDATA["Wallhole Height"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2.4</Value>
		</Length>
		<Length Name="ac_reveal_width">
			<Description><![CDATA["Reveal Width"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1.5</Value>
		</Length>
		<Length Name="ac_reveal_height">
			<Description><![CDATA["Reveal Height"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2.4</Value>
		</Length>
		<Length Name="ac_unit_width">
			<Description><![CDATA["Unit Width"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1.5</Value>
		</Length>
		<Length Name="ac_unit_height">
			<Description><![CDATA["Unit Height"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2.4</Value>
		</Length>
		<Length Name="ac_egress_width">
			<Description><![CDATA["Egress Width"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1.068</Value>
		</Length>
		<Length Name="ac_egress_height">
			<Description><![CDATA["Egress Height"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2.1</Value>
		</Length>
		<Length Name="ac_leaf_width">
			<Description><![CDATA["Leaf Width"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1.092</Value>
		</Length>
		<Length Name="ac_leaf_height">
			<Description><![CDATA["Leaf Height"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2.112</Value>
		</Length>
		<Integer Name="gs_nominal_size">
			<Description><![CDATA["Nominal Size"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Boolean Name="gs_wallhole_nominal">
			<Description><![CDATA["Set Wallhole Size as Nominal Size"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_reveal_nominal">
			<Description><![CDATA["Set Reveal Size as Nominal Size"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_unit_nominal">
			<Description><![CDATA["Set Unit Size as Nominal Size"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_egress_nominal">
			<Description><![CDATA["Set Egress Size as Nominal Size"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_leaf_nominal">
			<Description><![CDATA["Set Leaf Size as Nominal Size"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_retain_nominal_sizes">
			<Description><![CDATA["Transfer Current Nominal Size to Selection"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- titleStorefrontFrame: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="titleStorefrontFrame">
			<Description><![CDATA["Door Frame"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
		</Title>
		<Length Name="gs_fw_side_left">
			<Description><![CDATA["Frame W. on Left Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_fw_side_right">
			<Description><![CDATA["Frame W. on Right Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_fw_upper">
			<Description><![CDATA["Frame Width Upper"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Boolean Name="gs_ds">
			<Description><![CDATA["Door Stop"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_ds_w">
			<Description><![CDATA["Door Stop Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Boolean Name="bEnableDoorStop">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- gs_sidelight: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_sidelight">
			<Description><![CDATA["Shape"]]></Description>
			<Fix/>
		</Title>
		<Boolean Name="gs_door_transom">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_transom_height">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Boolean Name="gs_sidelight_left">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_sidelight_right">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_sidelight_width_left">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_sidelight_width_right">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>

		<!-- gs_window_frame: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_window_frame">
			<Description><![CDATA["Window Frame"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
		</Title>
		<Length Name="gs_frame_thk">
			<Description><![CDATA["Frame Thickness"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_frame_width">
			<Description><![CDATA["Frame Width"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.07</Value>
		</Length>

		<!-- gs_door_panel: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_door_panel">
			<Description><![CDATA["Door Panel"]]></Description>
			<Fix/>
		</Title>

		<!-- titleStorefrontPanel: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="titleStorefrontPanel">
			<Description><![CDATA["Door Panel"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
		</Title>
		<Length Name="gs_leaf_thk">
			<Description><![CDATA["Leaf Thickness"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.04</Value>
		</Length>

		<!-- gs_window_sash: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_window_sash">
			<Description><![CDATA["Sash Frame"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
		</Title>
		<Length Name="gs_sash_thk">
			<Description><![CDATA["Sash Frame Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_sash_width">
			<Description><![CDATA["Sash Frame Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_glass_thk">
			<Description><![CDATA["Glass Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.02</Value>
		</Length>

		<!-- gs_oversize: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_oversize">
			<Description><![CDATA["Opening Oversize"]]></Description>
		</Title>
		<Length Name="gs_left_oversize">
			<Description><![CDATA["Left Opening Oversize"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_right_oversize">
			<Description><![CDATA["Right Opening Oversize"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_upper_oversize">
			<Description><![CDATA["Upper Opening Oversize"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_lower_oversize">
			<Description><![CDATA["Lower Opening Oversize"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>

		<!-- gs_window_stack: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_window_stack">
			<Description><![CDATA["Ganging"]]></Description>
		</Title>
		<Boolean Name="gs_stack_left">
			<Description><![CDATA["Connection on the Left"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_stack_right">
			<Description><![CDATA["Connection on the Right"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- bVentilationProfile: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Boolean Name="bVentilationProfile">
			<Description><![CDATA["Natural Ventilation"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="iVentilationProfileType">
			<Description><![CDATA["Natural Ventilation Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="bEnableVentilationProfile">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="VentilationProfileHeight">
			<Description><![CDATA["Profile Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.065</Value>
		</Length>

		<!-- gs_reveal_type_new: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<String Name="gs_reveal_type_new">
			<Description><![CDATA["Reveal Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="gs_reveal_type_int">
			<Description><![CDATA["Reveal Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<String Name="gs_reveal_type_bottom">
			<Description><![CDATA["Bottom Reveal Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Без Четверти"]]></Value>
		</String>
		<Integer Name="gs_reveal_type_bottom_int">
			<Description><![CDATA["Bottom Reveal Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Length Name="gs_wido_sill">
			<Description><![CDATA["Reveal Depth"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>-9999</Value>
		</Length>
		<Length Name="AC_wido_sill">
			<Description><![CDATA["Reveal Depth"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<String Name="gs_reveal_type">
			<Description><![CDATA["Outer Reveal Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Без Четверти"]]></Value>
		</String>
		<Integer Name="gs_reveal_doubleOuterTypeInt">
			<Description><![CDATA["Reveal Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<String Name="gs_reveal_double_innerType">
			<Description><![CDATA["Inner Reveal Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Без Четверти"]]></Value>
		</String>
		<Integer Name="gs_reveal_doubleInnerTypeInt">
			<Description><![CDATA["Reveal Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Boolean Name="gs_reveal_uniform">
			<Description><![CDATA["Uniform Jamb Depth"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="gs_reveal_left">
			<Description><![CDATA["Jamb Depth Side 2"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_reveal_right">
			<Description><![CDATA["Jamb Depth"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_reveal_splayed_innerLeft">
			<Description><![CDATA["Inner Jamb Depth Side 2"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_reveal_splayed_innerRight">
			<Description><![CDATA["Inner Jamb Depth"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_reveal_double_innerLeft">
			<Description><![CDATA["Inner Jamb Depth Side 2"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_reveal_double_innerRight">
			<Description><![CDATA["Inner Jamb Depth"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_reveal_top">
			<Description><![CDATA["Head Jamb Depth"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_reveal_bottom">
			<Description><![CDATA["Sill Jamb Depth"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_reveal_splayed_innerTop">
			<Description><![CDATA["Inner Head Depth"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_reveal_splayed_innerBottom">
			<Description><![CDATA["Inner Sill Depth"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_reveal_double_innerTop">
			<Description><![CDATA["Inner Head Depth"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_reveal_double_innerBottom">
			<Description><![CDATA["Inner Sill Depth"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_reveal_outer_jamb_depth">
			<Description><![CDATA["Outer Jamb Depth"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.08</Value>
		</Length>
		<Angle Name="gs_reveal_left_angle">
			<Description><![CDATA["Angle Side 2"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>20</Value>
		</Angle>
		<Angle Name="gs_reveal_right_angle">
			<Description><![CDATA["Angle Side"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>20</Value>
		</Angle>
		<Angle Name="gs_reveal_top_angle">
			<Description><![CDATA["Upper Side Angle"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>20</Value>
		</Angle>
		<Angle Name="gs_reveal_bottom_angle">
			<Description><![CDATA["Bottom Side Angle"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>20</Value>
		</Angle>
		<Boolean Name="gs_reveal_auto_changed_by_cc">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_mountingFrame">
			<Description><![CDATA["Mounting Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_mountingFrame_depth">
			<Description><![CDATA["Mounting Frame Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_mountingFrame_width_left">
			<Description><![CDATA["Mounting Frame Width Left"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_mountingFrame_width_right">
			<Description><![CDATA["Mounting Frame Width Right"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_mountingFrame_width_top">
			<Description><![CDATA["Mounting Frame Width Upper"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_mountingFrame_width_bottom">
			<Description><![CDATA["Mounting Frame Width Bottom"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>

		<!-- gs_turn_plaster: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_turn_plaster">
			<Description><![CDATA["Turn Plaster"]]></Description>
			<Fix/>
		</Title>
		<Boolean Name="gs_useWallFinishSkin">
			<Description><![CDATA["Use Wall Finish Component"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_maxPlasterThk">
			<Description><![CDATA["Plaster Thickness Limit"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.04</Value>
		</Length>
		<Boolean Name="gs_bAutoTurnOut">
			<Description><![CDATA["Auto Turn Inside Face Plaster"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Integer Name="gs_bOverOut">
			<Description><![CDATA["Turn Inside Face Plaster"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Boolean Name="gs_bAutoTurnIn">
			<Description><![CDATA["Auto Turn Outside Face Plaster"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Integer Name="gs_bOverIn">
			<Description><![CDATA["Turn Outside Face Plaster"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Boolean Name="gs_turn_plaster_dim_2D">
			<Description><![CDATA["Dimensionable on 2D"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_turn_plaster_show_3D">
			<Description><![CDATA["Show in 3D"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- gs_closure_type: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<String Name="gs_closure_type">
			<Description><![CDATA["Closure Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="gs_closure_type_int">
			<Description><![CDATA["Closure Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<String Name="gs_cavity_side">
			<Description><![CDATA["Turn Skin on Side"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Обе"]]></Value>
		</String>
		<Integer Name="iCavityClosureSide">
			<Description><![CDATA["Turn Skin on Side"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="gs_nTurn">
			<Description><![CDATA["Number of Skins to Turn"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="gs_nTurnDir">
			<Description><![CDATA["Number from"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Снаружи"]]></Value>
		</String>
		<Integer Name="iCavityClosureTurnDir">
			<Description><![CDATA["Number from"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="gs_cc_dutch_ShowLeft">
			<Description><![CDATA["Place Closer on Side 2"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_cc_dutch_ShowRight">
			<Description><![CDATA["Place Closer on Side 1"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_cc_dutch_ShowTop">
			<Description><![CDATA["Place Closer on Top"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_cc_dutch_ShowBottom">
			<Description><![CDATA["Place Closer on Bottom"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="gs_cc_dutch_ClosureToSkin">
			<Description><![CDATA["Place Closer to Skin"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="gs_cc_dutch_ClosureToSide_str">
			<Description><![CDATA["Place Closer from Side"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="gs_cc_dutch_ClosureToSide">
			<Description><![CDATA["Place Closer from Side"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="gs_cc_dutch_GapAtOutsideSkin">
			<Description><![CDATA["Gap at Outside Skin"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_cc_dutch_TurnToClosure">
			<Description><![CDATA["Turn Skin to Closer"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_cc_dutch_TurnToClosureOffs">
			<Description><![CDATA["Distance of Skin from Closer"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_cc_dutch_widthJoint">
			<Description><![CDATA["Closer Width"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.038</Value>
		</Length>
		<Length Name="gs_cc_dutch_thkJoint">
			<Description><![CDATA["Closer Thickness"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Boolean Name="gs_bJoint">
			<Description><![CDATA["Insert Insulation Strip"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_showJoint">
			<Description><![CDATA["Show Insulation Strip"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="gs_thkJoint">
			<Description><![CDATA["Strip Thickness"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.025</Value>
		</Length>
		<PenColor Name="gs_penJoint">
			<Description><![CDATA["Contour Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>100</Value>
		</PenColor>
		<LineType Name="gs_ltJoint">
			<Description><![CDATA["Contour Line Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</LineType>
		<FillPattern Name="gs_fillJoint">
			<Description><![CDATA["Fill Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>17</Value>
		</FillPattern>
		<PenColor Name="gs_penJointFg">
			<Description><![CDATA["Fill Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</PenColor>
		<PenColor Name="gs_penJointBg">
			<Description><![CDATA["Fill Background Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>93</Value>
		</PenColor>
		<Boolean Name="gs_cc_dutch_matJointCustom">
			<Description><![CDATA["Custom Surface"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Material Name="gs_cc_dutch_matJoint">
			<Description><![CDATA["Surface"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Length Name="gs_widthPlug">
			<Description><![CDATA["Profile Width"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.075</Value>
		</Length>
		<PenColor Name="gs_penPlug">
			<Description><![CDATA["Contour Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>100</Value>
		</PenColor>
		<LineType Name="gs_ltPlug">
			<Description><![CDATA["Contour Line Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</LineType>
		<FillPattern Name="gs_fillPlug">
			<Description><![CDATA["Fill Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>17</Value>
		</FillPattern>
		<PenColor Name="gs_penPlugFg">
			<Description><![CDATA["Fill Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</PenColor>
		<PenColor Name="gs_penPlugBg">
			<Description><![CDATA["Fill Background Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>93</Value>
		</PenColor>
		<Length Name="gs_custom_cc_array_left">
			<Description><![CDATA["Left Side Skin Data"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="8" SecondDimension="4">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0.015</AVal>
				<AVal Column="3" Row="1">0</AVal>
				<AVal Column="4" Row="1">1</AVal>
				<AVal Column="1" Row="2">0</AVal>
				<AVal Column="2" Row="2">0.015</AVal>
				<AVal Column="3" Row="2">0</AVal>
				<AVal Column="4" Row="2">1</AVal>
				<AVal Column="1" Row="3">0</AVal>
				<AVal Column="2" Row="3">0.015</AVal>
				<AVal Column="3" Row="3">0</AVal>
				<AVal Column="4" Row="3">1</AVal>
				<AVal Column="1" Row="4">0</AVal>
				<AVal Column="2" Row="4">0.015</AVal>
				<AVal Column="3" Row="4">0</AVal>
				<AVal Column="4" Row="4">1</AVal>
				<AVal Column="1" Row="5">0</AVal>
				<AVal Column="2" Row="5">0.015</AVal>
				<AVal Column="3" Row="5">0</AVal>
				<AVal Column="4" Row="5">1</AVal>
				<AVal Column="1" Row="6">0</AVal>
				<AVal Column="2" Row="6">0.015</AVal>
				<AVal Column="3" Row="6">0</AVal>
				<AVal Column="4" Row="6">1</AVal>
				<AVal Column="1" Row="7">0</AVal>
				<AVal Column="2" Row="7">0.015</AVal>
				<AVal Column="3" Row="7">0</AVal>
				<AVal Column="4" Row="7">1</AVal>
				<AVal Column="1" Row="8">0</AVal>
				<AVal Column="2" Row="8">0.015</AVal>
				<AVal Column="3" Row="8">0</AVal>
				<AVal Column="4" Row="8">1</AVal>
			</ArrayValues>
		</Length>
		<Length Name="gs_custom_cc_array_right">
			<Description><![CDATA["Right Side Skin Data"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="8" SecondDimension="4">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0.015</AVal>
				<AVal Column="3" Row="1">0</AVal>
				<AVal Column="4" Row="1">1</AVal>
				<AVal Column="1" Row="2">0</AVal>
				<AVal Column="2" Row="2">0.015</AVal>
				<AVal Column="3" Row="2">0</AVal>
				<AVal Column="4" Row="2">1</AVal>
				<AVal Column="1" Row="3">0</AVal>
				<AVal Column="2" Row="3">0.015</AVal>
				<AVal Column="3" Row="3">0</AVal>
				<AVal Column="4" Row="3">1</AVal>
				<AVal Column="1" Row="4">0</AVal>
				<AVal Column="2" Row="4">0.015</AVal>
				<AVal Column="3" Row="4">0</AVal>
				<AVal Column="4" Row="4">1</AVal>
				<AVal Column="1" Row="5">0</AVal>
				<AVal Column="2" Row="5">0.015</AVal>
				<AVal Column="3" Row="5">0</AVal>
				<AVal Column="4" Row="5">1</AVal>
				<AVal Column="1" Row="6">0</AVal>
				<AVal Column="2" Row="6">0.015</AVal>
				<AVal Column="3" Row="6">0</AVal>
				<AVal Column="4" Row="6">1</AVal>
				<AVal Column="1" Row="7">0</AVal>
				<AVal Column="2" Row="7">0.015</AVal>
				<AVal Column="3" Row="7">0</AVal>
				<AVal Column="4" Row="7">1</AVal>
				<AVal Column="1" Row="8">0</AVal>
				<AVal Column="2" Row="8">0.015</AVal>
				<AVal Column="3" Row="8">0</AVal>
				<AVal Column="4" Row="8">1</AVal>
			</ArrayValues>
		</Length>
		<Integer Name="iCustomCCEditJambSide">
			<Description><![CDATA["Edited Jamb Side"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="iCustomCCEditWallSide">
			<Description><![CDATA["Edited Wall Side"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="iCustomCCEditSkin">
			<Description><![CDATA["Edited Skin Number"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="gs_custom_cc_turn_in">
			<Description><![CDATA["Turn-in Skin"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_custom_cc_plaster">
			<Description><![CDATA["Consider Skin as Plaster"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="iCustomCCThicknessType">
			<Description><![CDATA["Turn-in Thickness"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="gs_custom_cc_thickness">
			<Description><![CDATA["Custom Thickness"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.015</Value>
		</Length>
		<Integer Name="iCustomCCOrientation">
			<Description><![CDATA["Hatch Orientation"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="gs_custom_cc_separator">
			<Description><![CDATA["Separating Line at Turn-in"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<PenColor Name="gs_custom_cc_separator_pen">
			<Description><![CDATA["Separating Line Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</PenColor>
		<Length Name="gs_custom_cc_overhang">
			<Description><![CDATA["Skin Overhang to Frame Depth"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Boolean Name="gs_custom_cc_last_sel_side">
			<Description><![CDATA["Last Selected Side"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_closure_auto_changed">
			<Description><![CDATA["Closure Method Changed Automatically"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- gs_opening_params: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_opening_params">
			<Description><![CDATA["Opening"]]></Description>
		</Title>
		<Boolean Name="bOverride_MVO_2D">
			<Description><![CDATA["Override MVO for 2D Symbolic Display"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="or_bOplines2D">
			<Description><![CDATA["Show 2D Opening Lines"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<LineType Name="or_swingLineType">
			<Description><![CDATA["Opening Line Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</LineType>
		<LineType Name="or_swingLineType2">
			<Description><![CDATA["Secondary Opening Line Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>4</Value>
		</LineType>
		<String Name="or_SwingType">
			<Description><![CDATA["Opening Line Shape"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Изогнутый"]]></Value>
		</String>
		<Integer Name="or_iSwingType">
			<Description><![CDATA["Opening Line Shape"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="or_SlidingType">
			<Description><![CDATA["Opening Line Shape"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Нет"]]></Value>
		</String>
		<Integer Name="or_iSlidingType">
			<Description><![CDATA["Opening Line Shape"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<PenColor Name="or_opLinePen">
			<Description><![CDATA["Opening Line Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3</Value>
		</PenColor>
		<Integer Name="or_iOpLinePen">
			<Description><![CDATA["Opening Line Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>3</Value>
		</Integer>
		<Boolean Name="bOverride_MVO_3D">
			<Description><![CDATA["Override MVO for 3D Projections"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="or_bOplines3d">
			<Description><![CDATA["Show Opening Line"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<String Name="or_opLineType3dIn">
			<Description><![CDATA["Line Type Opening Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Штриховая"]]></Value>
		</String>
		<Integer Name="or_iOpLineType3dIn">
			<Description><![CDATA["Line Type Opening Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="or_opLineType3dOut">
			<Description><![CDATA["Line Type Opposite Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Сплошная Линия"]]></Value>
		</String>
		<Integer Name="or_iOpLineType3dOut">
			<Description><![CDATA["Line Type Opposite Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<String Name="or_opLineType3dSecondary">
			<Description><![CDATA["Secondary Leaf Line Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Штриховая"]]></Value>
		</String>
		<Integer Name="or_iOpLineType3dSecondary">
			<Description><![CDATA["Secondary Leaf Line Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="or_oplineStyle">
			<Description><![CDATA["Line Orientation"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Ручка"]]></Value>
		</String>
		<Integer Name="or_iOplineStyle">
			<Description><![CDATA["Line Orientation"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="bHideOplineStyle">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bLockOplineStyle">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bEnableSecondaryOpLineTypes">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_bSameLineTypeForLeaves">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bEnableSwingLineTurnOff">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bDoorEmptyPanel">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bSimpleLeafin50">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Boolean>

		<!-- gs_2D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_2D_representation">
			<Description><![CDATA["2D and Section Representation"]]></Description>
			<Fix/>
		</Title>
		<Angle Name="gs_open_2D">
			<Description><![CDATA["Opening Angle in 2D"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>90</Value>
		</Angle>
		<PenColor Name="gs_pen_2D">
			<Description><![CDATA["Symbol Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3</Value>
		</PenColor>
		<String Name="gs_wcont_line">
			<Description><![CDATA["Wall Contour Line"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA["Откл."]]></Value>
		</String>
		<Integer Name="iWallContourLine">
			<Description><![CDATA["Wall Contour Line"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<LineType Name="gs_wcont_line_in">
			<Description><![CDATA["Wall Contour Line Type Inside"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</LineType>
		<LineType Name="gs_wcont_line_out">
			<Description><![CDATA["Wall Contour Line Type Outside"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</LineType>
		<LineType Name="gs_wcont_hidden_line_in">
			<Description><![CDATA["Hidden Wall Contour Line Type Inside"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>4</Value>
		</LineType>
		<LineType Name="gs_wcont_hidden_line_out">
			<Description><![CDATA["Hidden Wall Contour Line Type Outside"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>4</Value>
		</LineType>
		<PenColor Name="gs_wcont_line_pen">
			<Description><![CDATA["Wall Contour Line Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</PenColor>
		<Boolean Name="gs_bFills">
			<Description><![CDATA["Use Fills"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<FillPattern Name="gs_wallhole_fill">
			<Description><![CDATA["Plan Symbol Fill Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_wallhole_pen_fg">
			<Description><![CDATA["Plan Symbol Fill Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_wallhole_pen_bg">
			<Description><![CDATA["Plan Symbol Fill Background Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>

		<!-- gs_3D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_3D_representation">
			<Description><![CDATA["3D Representation"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
		</Title>
		<Boolean Name="gs_shadow">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="res">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Integer>
		<Angle Name="gs_open_3D">
			<Description><![CDATA["Opening Angle in 3D"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<PenColor Name="gs_frame_pen">
			<Description><![CDATA["Frame Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>2</Value>
		</PenColor>
		<PenColor Name="gs_leaf_pen">
			<Description><![CDATA["Leaf Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>2</Value>
		</PenColor>

		<!-- gs_door_material: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_door_material">
			<Description><![CDATA["Surfaces"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
		</Title>
		<PenColor Name="gs_sash_pen">
			<Description><![CDATA["Sash Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>2</Value>
		</PenColor>
		<PenColor Name="gs_glass_pen">
			<Description><![CDATA["Glass Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>2</Value>
		</PenColor>

		<!-- gs_window_material: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_window_material">
			<Description><![CDATA["Surfaces"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
		</Title>
		<Material Name="gs_frame_mat">
			<Description><![CDATA["Frame Surface"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="gs_leaf_mat">
			<Description><![CDATA["Leaf Surface"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="gs_sash_mat">
			<Description><![CDATA["Sash Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="gs_glass_mat">
			<Description><![CDATA["Glass Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>24</Value>
		</Material>

		<!-- ac_details: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="ac_details">
			<Description><![CDATA["Computed Oversize Values"]]></Description>
			<Fix/>
		</Title>
		<Length Name="ac_left_oversize">
			<Description><![CDATA["AC Left Opening Oversize"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ac_right_oversize">
			<Description><![CDATA["AC Right Opening Oversize"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ac_upper_oversize">
			<Description><![CDATA["AC Upper Opening Oversize"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ac_lower_oversize">
			<Description><![CDATA["AC Lower Opening Oversize"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<String Name="ifc_optypestr">
			<Description><![CDATA["IFC Operation"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value><![CDATA["Не определена"]]></Value>
		</String>
		<Integer Name="ifc_optype">
			<Description><![CDATA["IFC Operation"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Length Name="ifc_LiningDepth">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ifc_LiningThickness">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ifc_LiningOffset">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ifc_CasingDepth">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ifc_CasingThickness">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ifc_ThresholdDepth">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ifc_ThresholdThickness">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ifc_ThresholdOffset">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ifc_TransomOffset">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ifc_TransomThickness">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ifc_DoorPanel">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="4">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0</AVal>
				<AVal Column="3" Row="1">0</AVal>
				<AVal Column="4" Row="1">0</AVal>
			</ArrayValues>
		</Length>
		<Integer Name="iRevealOnSymbol">
			<Description><![CDATA["Show Reveal on Symbol"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>

		<!-- gs_head_symbol: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Boolean Name="gs_head_symbol">
			<Description><![CDATA["Head Depth on Symbol"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<LineType Name="gs_head_symbol_line">
			<Description><![CDATA["Head Depth Symbol Line Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>21</Value>
		</LineType>
		<PenColor Name="gs_head_symbol_pen">
			<Description><![CDATA["Head Depth Symbol Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>6</Value>
		</PenColor>

		<!-- gs_parapet_wall_inset: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Boolean Name="gs_parapet_wall_inset">
			<Description><![CDATA["Wall Inset"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_parapet_inset_thk">
			<Description><![CDATA["Depth of Inset"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<String Name="gs_parapet_sizes_st">
			<Description><![CDATA["Wall Inset Sizes"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Автоматически"]]></Value>
		</String>
		<Integer Name="iParapetSize">
			<Description><![CDATA["Wall Inset Sizes"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Boolean Name="gs_parapet_autodim">
			<Description><![CDATA["Auto Width and Height Dimensions"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="gs_parapet_width">
			<Description><![CDATA["Parapet Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="gs_parapet_right">
			<Description><![CDATA["Overhang Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_parapet_left">
			<Description><![CDATA["Overhang Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_parapet_height">
			<Description><![CDATA["Parapet Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.9</Value>
		</Length>
		<Boolean Name="gs_parapet_2D">
			<Description><![CDATA["Show Hidden Parapet"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<String Name="gs_parapet_bottom_st">
			<Description><![CDATA["Wall Inset Bottom at"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Текущий Этаж"]]></Value>
		</String>
		<Integer Name="iParapetBottom">
			<Description><![CDATA["Wall Inset Bottom at"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Length Name="gs_parapet_botelev">
			<Description><![CDATA["Bottom Overhang"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<LineType Name="gs_parapet_line">
			<Description><![CDATA["Hidden Parapet Line Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</LineType>
		<Integer Name="gs_ui_current_page">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="gs_ui_sub_tabpage_closure">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>

		<!-- gs_min_space: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_min_space">
			<Description><![CDATA["Minimal Space"]]></Description>
		</Title>
		<Length Name="msOpeningSideWidth2">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="msOpeningSideWidth1">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ms_openingSDepth">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="msOppositeSideWidth2">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="msOppositeSideWidth1">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ms_oppositeSDepth">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ms_leftOffset">
			<Description><![CDATA["Frame Offset Left"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ms_rightOffset">
			<Description><![CDATA["Frame Offset Right"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="egressOffset">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="EgressMSWidth">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Boolean Name="bOpeningDirection">
			<Description><![CDATA["Default/Flipped"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_wthk">
			<Description><![CDATA["Frame Thickness=Wall Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_fthk">
			<Description><![CDATA["Frame thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Boolean Name="bSidelights">
			<Description><![CDATA["Sidelights on/off"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="gs_leaf_optype_m">
			<Description><![CDATA["Opening Type"]]></Description>
			<Value>0</Value>
		</Integer>

		<!-- gs_list: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_list">
			<Description><![CDATA["Parameters for Listing"]]></Description>
			<Fix/>
		</Title>
		<Boolean Name="gs_bOpeningToZone">
			<Description><![CDATA["Door belongs to the Zone into which it opens"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<RealNum Name="gs_list_cost">
			<Description><![CDATA["Cost"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="gs_list_manufacturer">
			<Description><![CDATA["Manufacturer"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_note">
			<Description><![CDATA["Note/Remarks"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_location_as">
			<Description><![CDATA["Location as"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Специальный"]]></Value>
		</String>
		<String Name="gs_list_location">
			<Description><![CDATA["Location"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_accessories">
			<Description><![CDATA["Accessories"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_glazing">
			<Description><![CDATA["Glazing"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_headdet">
			<Description><![CDATA["Header Detail"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_jambdet">
			<Description><![CDATA["Jamb Detail"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_silldet">
			<Description><![CDATA["Sill Detail"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_hwsetno">
			<Description><![CDATA["Hardware Set"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_hwkeyside">
			<Description><![CDATA["Hardware Key Side Room Number"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_optype">
			<Description><![CDATA["Operation Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_finish">
			<Description><![CDATA["Finish"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_elevation">
			<Description><![CDATA["Elevation"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_hings">
			<Description><![CDATA["Hinges"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_lockset">
			<Description><![CDATA["Lockset"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<RealNum Name="gs_list_glassarea_tmp">
			<Description><![CDATA["Total Glazed Area"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<Boolean Name="gs_list_glassarea_override">
			<Description><![CDATA["Override Glazed Area"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<RealNum Name="gs_list_glassarea">
			<Description><![CDATA["Total Glazed Area"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<RealNum Name="gs_list_glassperimeter">
			<Description><![CDATA["Total Glass Perimeter"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="gs_list_heattransfer">
			<Description><![CDATA["U-value"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Boolean Name="bEnableNEDFireRating">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bEnableDACHFireRating">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<String Name="gs_list_firerating">
			<Description><![CDATA["Fire Rating"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="iNEDFireRating">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Boolean Name="gs_list_bInsulation">
			<Description><![CDATA["Insulation"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_list_FR_bSelfClosing">
			<Description><![CDATA["Self-Closing"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_list_bSmokeProtection">
			<Description><![CDATA["Smoke Protection Door"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<String Name="gs_list_SmokeTestTemp">
			<Description><![CDATA["Smoke Test Temperature"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["200"]]></Value>
		</String>
		<String Name="gs_list_FR_indexSelfClosing">
			<Description><![CDATA["Insulation Index"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["2"]]></Value>
		</String>
		<String Name="gs_list_FR_expression">
			<Description><![CDATA["Fire Rating Expression"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_acousticrating">
			<Description><![CDATA["Acoustic Rating"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_Type">
			<Description><![CDATA["Group Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Другой"]]></Value>
		</String>
		<Integer Name="iFMType">
			<Description><![CDATA["Group Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>25</Value>
		</Integer>
		<String Name="FM_InventoryNumber">
			<Description><![CDATA["Inventory No."]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_SerialNumber">
			<Description><![CDATA["Serial No."]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_ProductionYear">
			<Description><![CDATA["Production Year"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<RealNum Name="FM_ObjectWeight">
			<Description><![CDATA["Object Weight"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="FM_ObjectWeightUnit">
			<Description><![CDATA["Object Weight Unit"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["кг"]]></Value>
		</String>
		<Integer Name="gs_list_orientationDef_m">
			<Description><![CDATA["Door Orientation Definition"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<String Name="ac_OpeningSide">
			<Description><![CDATA["Door Orientation"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Boolean Name="gs_show_UKListParams">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<String Name="gs_list_NBSClause">
			<Description><![CDATA["NBS Clause"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Boolean Name="gs_list_doorcloser">
			<Description><![CDATA["Door Closer"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<String Name="gs_list_visionpanel_type">
			<Description><![CDATA["Vision Panel Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Нет Видеопанели"]]></Value>
		</String>
		<String Name="gs_list_elevationtype">
			<Description><![CDATA["Elevation Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_frametype">
			<Description><![CDATA["Frame Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Boolean Name="gs_list_holddevice">
			<Description><![CDATA["Hold Open Device"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<String Name="gs_list_firesignage">
			<Description><![CDATA["Fire Signage"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_comment">
			<Description><![CDATA["Comments"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
	</Parameters>
	<WDFrameExpression>
		<F><![CDATA["gs_frame_thk"]]></F>
		<F><![CDATA["ac_left_oversize"]]></F>
		<F><![CDATA["ac_right_oversize"]]></F>
		<F><![CDATA["ac_upper_oversize"]]></F>
		<F><![CDATA["ac_lower_oversize"]]></F>
		<F><![CDATA[""]]></F>
	</WDFrameExpression>
</ParamSection>

<CalledMacros SectVersion="2" SectionFlags="0" SubIdent="0">
	<Macro>
		<MName><![CDATA["GetDWSymbSettings"]]></MName>
		<MainGUID>7EB1AF80-DC0B-4BAF-96D2-822C4913C299</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["PlasterGeometry"]]></MName>
		<MainGUID>98FA003A-2EEA-11E0-AF68-03A0DFD72085</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["RevealGeometry"]]></MName>
		<MainGUID>1BADC4DE-6D3E-11E1-9330-72D24824019B</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["FramingGeometry"]]></MName>
		<MainGUID>B87A0BAF-392D-4731-A4CB-4EAC7D83BF43</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["OpeningOptions"]]></MName>
		<MainGUID>6ED91FFB-F336-4BD0-9772-DE49ACA9F6F3</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["WallholeStructure"]]></MName>
		<MainGUID>5E86C21E-409C-454E-9513-CFF4F3149920</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["dw_minimalspace"]]></MName>
		<MainGUID>2AF8384E-069E-4FDD-B5C0-D6B1009222C3</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["LibraryGlobals13"]]></MName>
		<MainGUID>9137124A-DDF2-4A06-A532-5FC0CE873258</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["ui_tabIDlistHierarchy_m"]]></MName>
		<MainGUID>8D3FA40B-0E02-4FD9-B890-741FFA7BCDC8</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["ui_WallOpening_m"]]></MName>
		<MainGUID>922ECE6E-C9AA-48CE-84B1-4D539899F2D3</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["ui_Description_m"]]></MName>
		<MainGUID>F92D662A-41C8-488C-8D95-330ABB192F6B</MainGUID>
	</Macro>
</CalledMacros>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="1" length_in_bytes="615" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D494844520000011F0000
	0054040300000049912E650000000774494D4507DF030C0C0F08A293ACAB0000
	00097048597300000AF000000AF00142AC34980000000467414D410000B18F0B
	FC61050000000C504C5445FF0000000000CCCCCCFFFFFF751AEA4A0000000174
	524E530040E6D866000001C74944415478DAED9A517283300C44ED1B48CD05DA
	9EA09DDEFF6E354E619CD6905DA582005232F9B2A5A7C5962038A5B0754CC5C9
	B134BF84E5F2F109A5D5BD215D1E080A957532C16D740C0ED71BDB994249F2E0
	7B9D35640B85A62B3C119AAB21D9A70FB553EC5068D3506EBDCC886DA9436428
	36631268DEBDF68DEE1EE478CDFDB8320744B5D7512074FC52CCF4DE355A2156
	50CD2FDDC0AF7F80DEEA57C908E502708B480AD035D43DA01F85C88479A3155A
	012814DA52A17CF7DEF81F1462F6195FA77985A84A94B9E6AA16856A03C16CD4
	081C5E0BB2B342E445332944AE210AC8B4863881C8C72039421D72BB270D854E
	A390C23669C94CC115C2BD3E00341903F485DAC70804CFF864804ABE95C515E8
	32FC0C910228804E0DE459870E015490BCDAD8E57ADD0228800228807602D4D4
	532F20E32DECB300B93E8FFD360EC8F12DAA0D28143AB642441ECB0ACDDFFF51
	44C43F92ADD74EF42520A2100901D4465888DE995947602FF0043C1D6328B826
	85984325AD42E40EC2D710F3AE83AD26C66D6F9BE65863DC8EEBF8FED9B969B0
	5D429F4921C75D66726D3969088632BA36CD82AA29DAC06E7B59224E7A366D0D
	49C3A690ED4263FD664520CF5DEFD73A36B66FC0D4CF718ACEEDA20000000049
	454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="2" length_in_bytes="502" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000640000
	00C80403000000EC1259F20000000774494D4507DF030C0B2B1EA2E0EED90000
	00097048597300000AF000000AF00142AC34980000000467414D410000B18F0B
	FC61050000000C504C5445FF0000000000FFFFFFCCCCCC9E7D55BF0000000174
	524E530040E6D866000001564944415478DAED99690E82301046DB1B4CF50478
	03E2FDEFA6A5DB4C77128301BEF923425F5F8756D345A973847EBEABB1121020
	408000B92142BB1163682FA24D2A473A8559431811B2619C4E961CB1118BF136
	3224DED4E18AA542EA544896BA487F8CCC5A1E2F1F0B959DC17B3FD55D20BC33
	880D820E520ECBCCABBB0815DE2152BD33638977DCC04EF98C2D2EA701222D2E
	A7AD5DCBA4C57D0E10DA8FD46C3544CD589AC3B26D91C894657B778DBE6E58EC
	65F50FAF6BF9F6E9D8A25A0DFB692E17B654031658608105165860E95B8E09A7
	0F13F87CCA167361337CBF0A2245AC82146C6E151F917855CA64CB0536212916
	23BA7C221153C05445A863D1F19B40F89C97B28AECCACEBF18D932B67EF873D7
	4EC4957E2FB0C0020B2CB0C0020B2CB0C0020B2CB09CC2726FC46F35841D077F
	92180ED1D28915DBA0F15B326167869F57DA32B1A06EEF9064FD5736CCEC8E63
	900F89283AE7219D42980000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="3" length_in_bytes="248" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000880000
	003D02030000000BD3C90700000009504C5445FF0000000000FFFFFFCA92C399
	0000000174524E530040E6D8660000009349444154785EEDD2B10DC240104451
	13B8041257E3120818079470FDB88323F05609095A992FEDA420DDC45F2FD8BB
	E95F36363676B9B9E2BA7543A8453744447443D489DE4499CC8AA8133DE2B3C3
	1099804002820909262472BB21E2D07ABAB748DC71EF9AD87E9490239E9A4E23
	A1EF3FDF0C91090824209890609204B71822933D0926B837133C1913104C4060
	F3EA8A17608A125C455372E80000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="4" length_in_bytes="271" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000880000
	003D02030000000BD3C90700000009504C5445FF0000000000FFFFFFCA92C399
	0000000174524E530040E6D866000000AA49444154785EEDD1B10DC2301046E1
	73613648936932420ACE0523641A9A6C0045FE299125AC275D646841F25F3F7D
	C59DFDCAC6C6C6F2F23948ABCDFBF553319587CD3ABC0B25DF5413092812D23B
	018A0489B47B2CBC122475BE1AB3EC524B36B53D81CC6F6A3B48802048040471
	4A80203A89EE17C5A47C4BF67AA05EC251A7D249780D1009441B909674228048
	220144120920128800794BFC4CF0E09AF072C6B29BF96A7FB6B11700A7068B49
	4A4CBA0000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="5" length_in_bytes="244" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000880000
	003D02030000000BD3C90700000009504C5445FF0000000000FFFFFFCA92C399
	0000000174524E530040E6D8660000008F49444154785EEDD1A111C3301404D1
	33700921AE462518E81BA404F5A30E12A05F65E640983C0B13A0C33B8F9CF622
	DAD12B2639A250926908124390180A48BC38EF9296DFBD0313439418C2C4D03C
	01E8CA4C80B66889D063025584FC0843FDC75030A47832B44F2021342401E404
	2027003901C809402FDD2E2E4CFC0825BE1613439418C244DBA93FD9DADADA07
	2239125C7FB206A80000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="6" length_in_bytes="269" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000880000
	003D02030000000BD3C90700000009504C5445FF0000000000FFFFFFCA92C399
	0000000174524E530040E6D866000000A849444154785EEDD1B10D83301484E1
	47E16C9026D330820B8E821198260D1B90829B3242967592DF0B6913C957FFFA
	9AB37F5B5F8219F2558185E3C0173E0677906742620A83012B6BC2036340CCA4
	12729B2242892047281124A2EE79639D20114A0489F089A042F84490ADDF92A3
	4D90132E93F20E169F88A87FFB44842E57F2688916DA6BB2C19A6156A2CBDCB5
	4ADCF17AB7242222E84C44C4D06E49440C65FB91F5F5F5BD01F429068B2BC9DB
	070000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="7" length_in_bytes="142" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D494844520000002A0000
	001002030000001D4C05030000000C504C5445FF0000000000CCCCCCCECECEC7
	3062650000000174524E530040E6D8660000002649444154785EB5C6B1110000
	040340236AEC650E4DF6CA148EACC0576F57427C5E929F07F70D61B431CF9634
	95200000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="8" length_in_bytes="143" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D494844520000002A0000
	001002030000001D4C05030000000C504C5445FF0000000000CCCCCCCECECEC7
	3062650000000174524E530040E6D8660000002749444154785EB5C631150000
	040450112D4A4865B6E875293CA7027FFA72C896CE3D29DE5EE01B6A9A301FDD
	651B920000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="9" length_in_bytes="177" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D494844520000002A0000
	002704030000008B73C7B60000000F504C5445FF0000CCCCCCCECECE000000FF
	FFFF4C7684150000000174524E530040E6D8660000004649444154785EDDD1B1
	0D002008044056502680151841F79F492521C4C2C6040AAEA0F8E203019A61DA
	034569EA701E233E65FA6B28B06F40EFEB9BA0D2D3CE769BA772834216E25743
	02C2F10B590000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="10" length_in_bytes="172" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D494844520000002A0000
	002704030000008B73C7B60000000F504C5445FF0000000000CCCCCCCECECEFF
	FFFFC0F1CF850000000174524E530040E6D8660000004149444154785EDDCFB1
	0D0020084451568038C1B981ACE0FE3319C1465A1331BEF217E4203682AAD086
	854A9F04E6523DDD90BF37FF2E9B58DD0B35FEE678475F188B4F56E1209F4ADE
	0000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="11" length_in_bytes="481" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D494844520000000E0000
	000E08060000001F482DD100000006624B474400FF00FF00FFA0BDA793000001
	8C494441542891AD91CB4B025114C6BF3B332A6333A989540699653E02C17C5D
	14A345F470DDAAD7BF5021FD03B54DD761D0B65AB56ED92208DA852DA25D51B9
	7282B0521CEF6D110E65136D3ACB73CEC7EF7CE703FEBBE8746A3F359D3E0140
	CCE6A2593318CBA6643B2B3914362A28BE8A567DB8EDDE11CC84BDAABEBBB1A4
	D9B7D66A8AC3CE8A66D41FC2709C262481A7FAFB7462B332B89C6C3098A4F9BF
	AC2139953E3BDC1F63514A7994527E7AECE3F15CFAA69BFA8DD8A12DCEBC9066
	8BA0D92298CBBCC2A5B68742F1CCFCAF42A58797D65734D96AE1468F10A0B056
	53547BBB682AFC4A038044A48144A4010058C8D6A1AAEDE1F1249DEDEC1B718C
	04868E3657B5402CD42000E071E9484EBCC3E76D8110C0ED60B68B2B3956BD7F
	DA3388DD340028940650280D18A7E573752832F30727333306D11FF41E6C2C6B
	E10E0D00C2234DCC67EBF0795B9F9E08E07632CBE5B51C7ABC7B3C9000401048
	75A7EC11B6CB9E6FD14822D74509BA6C650D9B155C12191345FE86EE6CCC2A40
	69AFFC66317E51A99C3F03C007C40F77771DFF36FB0000000049454E44AE4260
	82
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="29" length_in_bytes="1955" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D494844520000011F0000
	005408030000008C61C364000000017352474200AECE1CE90000000467414D41
	0000B18F0BFC610500000300504C5445000000CCCCCCF0F0F0FFFFFF00000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	00000000000000000000000000000000FBF208230000010074524E53FFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0053F70725
	000000097048597300000EC300000EC301C76FA8640000001974455874536F66
	7477617265005061696E742E4E45542076332E352E38373B805D000002F14944
	4154785EED5CDB76C3200CA3DBFF7F739770C9B5C1E2C43664157B6876E68325
	211C6069C29BADA640184D9EC1004970A6BFC790F2997F35533548806E65CE9D
	9F495DF62AC159F1C6ABF0B6262001BAA7CF847F66B12411D94870C2A6451F2D
	6DD64AF1A7F02E8034FB9E47B5B43D09057D16E01EFE319EBE931CDAFE71AE3F
	A9DA5935FDFA73406A8A3EE65A6F043622353200C2CBFDCB066FA75E5152803E
	5B068DE19DC82B2EF800C2A8D4038A710D092505E843FFD4471E959AFE315E9D
	B808AC3F61E81F7CE01AD5C73B768B6C640084D33FF8E00172E29D75896C6400
	847FB77FB607181DAF4F5EEA8865C4D4C3EAF3925A083F530BE1776EF9235EAB
	B6933EAABDAF9D2D3C122989FC0B88A03E5515E99FBAC9A80FF5B95680F54770
	875CC1599F599F2F15E0FCE2FCDA2E35B93EAC2FBCCDF531DABCF9EDBFF23EC9
	6A7F417D0E056BB77E2EE6159F7BE872F655497AD8581752F2EA468ED8AE7FA8
	CF492FFAA761FF45FFD03F3B051AD7CFF40FFD43FFCCE7E836EB43CE2FCE2FCE
	2FCEAF0FDBDDDDBE9EF5E7F86072FAFFE65A3F599F770A59EE4F3F1E698CB641
	17F05C1CCBC8BB7339E273D7D4272BF7B8A31E7CE4949E4F981302CF51E1B806
	884C0F7D01BB4F607E0D40C70682A23EF4CF9591587FA4F343D69F9A42F4CF40
	FE99D65A36A5F8D8EB33EF5FE92BC06E4DF5FEE585DB234FFA1AB3EAFAC7D5F8
	D60ECA6434FD63F55E80F21E802CC9E21EE5F7039437191CDE1320AF8EE58804
	D9C73F1E936B25A3E81F9FBA1947D721551E06557DAC6B4287FEA94F5D74EA73
	5F1FE079B00ECEF749097047427CC076C8F2D5E475F406161C40880E16F75E00
	6640883BEC911202FA002123316AC0023003421A12FEBF50401F20E4A1BA00CC
	80908792D7810DE80384E860891B6BD76C326E4F38189AF11009B89D013BA603
	520121B3EDE5A1578AF09B5F182720CAFA9DB4076501442A6391DF35AA307996
	57BB1A9D09C7B3E1D8E68FE5D2305B6604E80C8C96A77FD2FD0B000550939CB1
	8C4A2D10838245DDC7ECD903C6E90FBF8919590DB399F60000000049454E44AE
	426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="30" length_in_bytes="1798" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000640000
	00C8080300000029E2B4F3000000017352474200AECE1CE90000000467414D41
	0000B18F0BFC610500000300504C5445000000CCCCCCF0F0F0FFFFFF00000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	00000000000000000000000000000000FBF208230000010074524E53FFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0053F70725
	000000097048597300000EC300000EC301C76FA8640000001974455874536F66
	7477617265005061696E742E4E45542076332E352E38373B805D000002544944
	4154785EED9BDB56C4200C4551FFFF9BC7764A5709E4024C8B0F6E7C52694F6E
	270950D26BC1480B305E3A484A5F4323F9B20222AD89B9882E8DDCF0049E1471
	4116362A203C8127F0648B011A091A091A89380696F324ED437AE681A2D56098
	CBB9B73C03A314BD11DCD264E0FDC7D44DDCF627EB60817CDB23F0F2ABB04EB6
	DCA320670C3C0A722AF5A720AEE355274BB7E7683B74988AAE2B5E5B4EC877FA
	203FF628A24B61F7267739C1D5A40F44B38400BE4313CBDC5551B17C32AF8900
	58AE49937564044BB5445A0936E584267501B80BE4B05D86AA925E4A85F0E297
	EDEF939A34E1DE0FD2B58599EDD498EB7E4D9A7047137F89EDFBA4CEFBE59ACC
	F7BCCF13E17807E4BEE872DE34C2F83A6D4A3276891B4BE2FB247EDE9AD19D85
	C33E2B54B48BF1681235778227A1D18309F8E434108CDFDB0B72974E1878024F
	CA46079EC013B9B2AAED413DA19ED8CD17F5847A423D89572FF0E4069EC4661E
	9A1154B6A17799935782CC62A9A70E9746E2B86976FB6497CD91EFFCF77BCABE
	C13D3D3AFA159D8C03883EC661A24F41421314160DE71ABA057A642D2E4D6670
	F2FEBBF9A87B9839E0939EA933F2F7BC57CC21D5DF90EAD9C0F129CB367A5423
	381018CE5C56D1EA276347F1B5BF91E04040F518F5847AC2123B4E66F0049EC0
	137842B7D2C400BD704C0BC368F53283E822BAAA6F5127628B9556B1BDECDB8F
	DC35115FF4C2F4C2F4C23171E0093C8127F084AEDEEFEA971C37013274A6B5C0
	5CCADD3971A129074D7BEAA3DE312D5AFEF7FD69FB16A006A224A991EF5622D3
	DA39B0EF4C6BF8FAF8FF7E202E399FCFF805DFA76A881AD9B0A5000000004945
	4E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="32" length_in_bytes="577" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000640000
	00C80403000000EC1259F20000000774494D4507DF030C0B321A3E8D83D80000
	00097048597300000AF000000AF00142AC34980000000467414D410000B18F0B
	FC61050000000C504C5445FF0000000000FFFFFFCCCCCC9E7D55BF0000000174
	524E530040E6D866000001A14944415478DAED995B72C3200C45610752BA02BA
	834CF7BFB782CD431236E0994E5B27571F9924E6F8208163829DBB47F88FAFC3
	781210204080007943842E23CC7415F1DCDA916FC1CF12AC42774CD2CD629114
	B599ECA340EA97BEBC13A990BB15625257E9CF9155CBE333C6F642FD60C8D16F
	E74EAD4310881C0C129340214159FA6969BC3E21CAD2E76226AA8F6D395AC2C0
	62BED9906809034B8F84CDC2172CB171CA851F838A1924D52CD580CFC7C520CC
	795C783997E11C3B0CBF32C78C651BF814613CC746C8BC621DE2A6B90C913FB1
	EC3F9EF5325BB0ECB59C20DAB2D772EB5758B4EC472688CD650159B5B815CBE9
	B43CB76864C9B2D5CEB61B5BD2DBC39BEAD012C7746E71671DFBD15C5ED87218
	B0C0020B2C77B7FC4EECFAB2A8B3B7D39A8B58F5E57F41E4489CA085B8EFD543
	A44AE5D8FC5D10378B6EA1E8FB231AE10EA6438406165F3F2944AE47C89C28AD
	BA736174CF6AC77936FEFF205EE97A81051658608105165860810516586081E5
	1696F746F25643D971C84F79CA038EF634416CD0E42D99B233239F25A536B5A1
	3FDF2131E3D7778C2FC7EF20DFC2AF418C4A4D29880000000049454E44AE4260
	82
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="33" length_in_bytes="574" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000640000
	00C8080300000029E2B4F30000000774494D4507DE05160E2E11325B54180000
	00097048597300000E7400000E74016B24B3D60000000F504C5445FF00000000
	00FFFFFFF0F0F0CCCCCC188768840000000174524E530040E6D866000001AB49
	44415478DAED9BD192C2200C008977FFFFCD378ED70A254002D1F1B88D3E146A
	D96E4AB1629BD2DE21F2ED0A1120408000010204081020408000F968886C0291
	7B7421DE68B49262218FD7F93E0A5DC8573B64B4EDB9FE65903C79AF33C99AFE
	08C8A02B49F7653DF0EEFEAA980CBBF0AD8CA26C848C4FC62B43FC9071BA024C
	BC10978986EB428E05C97DA24D4472131BC46C72324A934731CAA4CA9664E550
	139167DA72B540930C91F5AE7B659C8914DDF8B96C1F564C5FBF8DF36408C95B
	49238865144ECA885CAC5C8118777600B9B5236B574DBB3D9B3688BDC568C8FE
	26D5B54019412697CF2E419A26978E589EEE312655775F8234B955BAAC104F4C
	4330A921BE6BE149930E24CE6472CF47626608269860820926986082092698EC
	65E2707698EC13D33F9E9499A8D6319C3DB652EF9F5275AC5899EC31E7656192
	CF9E966988982B170EBC5AD386CCFDDBFD3B815BD6ADA4E64FC4F40019359B1A
	360A638209269860820926986082092698608209269860820926986082092698
	608209265B9900F99710E5A90DDBCDFACADAF606F5F327C627023CF7AD84DE88
	A155BD213682BC237E0070CF2F4621E2D3C40000000049454E44AE426082
	]]>
</GDLPict>

<Copyright SectVersion="1" SectionFlags="0" SubIdent="0">
	<Author>GRAPHISOFT</Author>
	<License>
		<Type>CC BY-ND</Type>
		<Version>3.0</Version>
	</License>
</Copyright>

</Symbol>
