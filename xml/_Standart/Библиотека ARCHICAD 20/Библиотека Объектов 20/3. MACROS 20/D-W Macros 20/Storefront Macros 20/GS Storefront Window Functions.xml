<?xml version="1.0" encoding="UTF-8"?>
<Symbol IsArchivable="false" IsPlaceable="false" MainGUID="D3331679-1230-41BF-B8CE-E9BFD2CFE69E" MigrationValue="Normal" Owner="1196638531" Signature="1465080141" Version="43">
<Ancestry SectVersion="1" SectionFlags="0" SubIdent="0" Template="false">
	<MainGUID>F938E33A-329D-4A36-BE3E-85E126820996</MainGUID>
	<MainGUID>103E8D2C-8230-42E1-9597-46F84CCE28C0</MainGUID>
	<MainGUID>6ACDA889-69B2-4EC5-936C-CB1DA7032A92</MainGUID>
	<MainGUID>F6AE9687-2BC7-4D47-88C9-8F793E1DE2D6</MainGUID>
	<MainGUID>4ABD0A6E-634B-4931-B3AA-9BEE01F35CDF</MainGUID>
	<MainGUID>E016C384-9D83-4B78-AB34-2BC73671661A</MainGUID>
</Ancestry>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_3D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
! Contact person: <NJ>

! =============================================================================

bFeedBack = (GLOB_CONTEXT > 20 & GLOB_CONTEXT < 40)

! =============================================================================
! Section detail level settings
! =============================================================================

lodSE = LODSE_20
if GLOB_SCALE > 21  then lodSE = LODSE_50
if GLOB_SCALE > 51  then lodSE = LODSE_100
if GLOB_SCALE > 101 then lodSE = LODSE_200
if GLOB_SCALE > 201 then lodSE = LODSE_500


! -----------------------------------------------------------------------------
! Hotspot Display Control
! -----------------------------------------------------------------------------

if GLOB_CONTEXT = 4 | GLOB_CONTEXT = 24 then
	if bLanguageUSA then
		bShowUnitHotspots	= 1
	else
		if lodSE = LODSE_200 | lodSE = LODSE_500 then
			bShowUnitHotspots	= 0
			bShowAddHotspots	= 0
		else
			bShowUnitHotspots	= (lodSE = LODSE_20 | lodSE = LODSE_50 | gs_unit_nominal)
		endif
	endif
else
	bShowUnitHotspots	= 0
	bShowAddHotspots	= 0
endif

if bShowAddHotspotsForIS then
	bShowUnitHotspots	= 1
	bShowAddHotspots	= 1
endif

! =============================================================================
! Wallhole Structure
! =============================================================================

if gs_board_inside then
	gs_reveal_bottom_angle = 0
endif

call "WallholeStructure" parameters all A = A,
	AC_Sill_To_Curr_Story	= AC_Sill_To_Curr_Story,
	ac_wallhole_height		= openingHeight,
	refWidth				= refWidth,
	leftWidth				= leftWallholeWidth,
	rightWidth				= rightWallholeWidth,
	iRevealType				= iRevealType,
	iSillRevealType			= iSillRevealType,
	iBoardRevealType		= iBoardRevealType,
	leftWallholeRevealPnts	= leftWallholeRevealPnts,
	rightWallholeRevealPnts	= rightWallholeRevealPnts,
	iRevealPointsIdx		= iRevealPointsIdx,
	revealInnerLeft			= revealInnerLeft,
	revealInnerRight		= revealInnerRight,
	iClosureType			= iClosureType,
	radSill					= radSill,
	radBoard				= radBoard,
	WOD						= WOD,
	overSizeLeft			= overSizeLeft,
	overSizeRight			= overSizeRight,
	overSizeUpper			= overSizeUpper,
	overSizeLower			= overSizeLower,
! --- Function Control Parameters
	bEnableParapetInset		= bEnableParapetInset,
	bEnableMasonryArch		= bEnableMasonryArch,
	bEnableFaschen			= bEnableFaschen,
! --- Macro Control Parameters
	isWindow				= 1,
	gs_IsCurved				= gs_IsCurved,
	bParalellInCurvedWalls	= bParalellInCurvedWalls,
! --- Corner Functions
	bLeftCornerFunction		= bLeftCornerFunction,
	leftCornerAngle			= leftCornerAngle,
	leftConnWallThk			= leftConnWallThk,
	bRightCornerFunction	= bRightCornerFunction,
	rightCornerAngle		= rightCornerAngle,
	rightConnWallThk		= rightConnWallThk,
! --- Turn Plaster
	possibleSkinTurnIn		= possibleSkinTurnIn,
	possibleSkinTurnOut		= possibleSkinTurnOut,
	gs_turn_plaster_show_3D	= gs_turn_plaster_show_3D,
	thkPlasterAtSillLeft	= thkPlasterAtSillLeft,
	thkPlasterAtSillRight	= thkPlasterAtSillRight,
	thkPlasterAtSillTop		= thkPlasterAtSillTop,
	thkPlasterAtSillBottom	= thkPlasterAtSillBottom,
	thkPlasterAtBoardLeft	= thkPlasterAtBoardLeft,
	thkPlasterAtBoardRight	= thkPlasterAtBoardRight,
	thkPlasterAtBoardTop	= thkPlasterAtBoardTop,
	thkPlasterAtBoardBottom	= thkPlasterAtBoardBottom,
! --- Casing
	bDrawOutsideTrim		= bDrawOutsideTrim,
	bDrawInsideTrim			= bDrawInsideTrim,
! --- String Resources
	stWallContourLine		= stWallContourLine,
	stMasonryArchTypes		= stMasonryArchTypes,
	stMasonryArchStructure	= stMasonryArchStructure,
! --- Parapet
	iParapetBottom			= iParapetBottom,
	iParapetSize			= iParapetSize


! =============================================================================
! Returned Parameters
! =============================================================================

if gs_stack_top then
	gs_frame_ovhg_top_out	= 0
	gs_frame_ovhg_top_in	= 0
else
	if iRevealType = REVEAL_SLANTED then
		gs_frame_ovhg_top_out	= overSize + gs_tolerance_upper + VentilationProfileHeight * isVentilationOverFrame + WIDO_FRAME_THICKNESS * tan(gs_reveal_top_angle)
		gs_frame_ovhg_top_in	= overSize + gs_tolerance_upper + VentilationProfileHeight * isVentilationOverFrame
	else
		gs_frame_ovhg_top_out	= overSize + gs_tolerance_upper + VentilationProfileHeight * isVentilationOverFrame
		gs_frame_ovhg_top_in	= overSize + gs_tolerance_upper + VentilationProfileHeight * isVentilationOverFrame
	endif
endif

if gs_stack_bottom then
	gs_frame_ovhg_bottom_out	= 0
	gs_frame_ovhg_bottom_in		= 0
else
	if iRevealType = REVEAL_SLANTED & (not(bDrawSill) & not(bDrawBoard)) then
		gs_frame_ovhg_bottom_out	= overSizeLower + gs_tolerance_lower + WIDO_FRAME_THICKNESS * tan(gs_reveal_bottom_angle)
		gs_frame_ovhg_bottom_in		= overSizeLower + gs_tolerance_lower
	else
		gs_frame_ovhg_bottom_out	= overSizeLower + gs_tolerance_lower
		gs_frame_ovhg_bottom_in		= overSizeLower + gs_tolerance_lower
	endif
endif

if iRevealType = REVEAL_SLANTED & not(WIDO_REVEAL_SIDE) then
	temp = gs_frame_ovhg_top_in
	gs_frame_ovhg_top_in = gs_frame_ovhg_top_out
	gs_frame_ovhg_top_out = temp

	temp = gs_frame_ovhg_bottom_in
	gs_frame_ovhg_bottom_in = gs_frame_ovhg_bottom_out
	gs_frame_ovhg_bottom_out = temp
endif


! =============================================================================

addPrmX = offsWindowX
addPrmY = gs_tolerance_lower
addPrmZ = SymbolMid_shiftDy
mulPrmX = 1
mulPrmY = 1

if not(bShowReveal) then
	leftUnitWidth	= min(-leftWallFrameRevealPnts[idxFrameStartRevealLeft][1], -leftWallFrameRevealPnts[idxFrameEndRevealLeft][1])
	rightUnitWidth	= min(rightWallFrameRevealPnts[idxFrameStartRevealRight][1], rightWallFrameRevealPnts[idxFrameEndRevealRight][1])

	ac_unit_width = leftUnitWidth + rightUnitWidth - cornerPostXRight - cornerPostXLeft
endif

end ac_unit_width,
	ac_unit_height,
	gs_frame_ovhg_left_out,
	gs_frame_ovhg_right_out,
	gs_frame_ovhg_top_out,
	gs_frame_ovhg_bottom_out,
	gs_frame_ovhg_left_in,
	gs_frame_ovhg_right_in,
	gs_frame_ovhg_top_in,
	gs_frame_ovhg_bottom_in,
	bMirrored,

	mulPrmX, 0,					 0,					 addPrmX,
	0,		 mulPrmY * cos(-90),-sin(-90),			 addPrmY,
	0,		 mulPrmY * sin(-90), mulPrmY * cos(-90),-addPrmZ,

	bShowAddHotspots, bShowAddHotspotsForIS, bShowUnitHotspots

]]>
</Script_3D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_2D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
! Contact person: <NJ>

! =============================================================================
! Center Hotspot
! =============================================================================

if curvedWall then
	if WIDO_REVEAL_SIDE exor SYMB_ROTANGLE < EPS then
		radSill = sqr(A^2 / 4 + WOD^2) - WIDO_SILL
		radBoard = radSill + WALL_THICKNESS
	else
		radSill = sqr(A^2 / 4 + WOD^2) + WIDO_SILL
		radBoard = radSill - WALL_THICKNESS
	endif
	if wallIsLeft then
		if WIDO_REVEAL_SIDE then
			py = -radSill * cos(leftAlfa) + WOD - WIDO_FRAME_THICKNESS
		else
			py = radSill * cos(leftAlfa) - WOD
		endif
	else
		if WIDO_REVEAL_SIDE then
			py = radBoard * cos(leftAlfa) + WOD - WIDO_FRAME_THICKNESS
		else
			py = -radBoard * cos(leftAlfa) - WOD
		endif
	endif
else
	if AC_WallType = 2 then
		idx1 = AC_WindowInWallContour[1]
		idx2 = AC_WindowInWallContour[2]
		if idx1 > 0 & idx2 > 0 then
			py = (AC_WallContourPolygon[idx1][2] + AC_WallContourPolygon[idx2][2]) / 2
		else
			py = 0
			if idx1 > 0 then py = AC_WallContourPolygon[idx1][2]
			if idx2 > 0 then py = AC_WallContourPolygon[idx2][2]
		endif
	else
		if bInclinedWall | wallIsLeft then
			if WIDO_REVEAL_SIDE then
				py = -WIDO_SILL - WIDO_FRAME_THICKNESS
			else
				py = WIDO_SILL
			endif
		else
			if WIDO_REVEAL_SIDE then
				py = WALL_THICKNESS - WIDO_SILL - WIDO_FRAME_THICKNESS
			else
				py = WIDO_SILL - WALL_THICKNESS
			endif
		endif
	endif
endif

hotspot2 0,py, 9999


! =============================================================================
! 2D detail level settings
! =============================================================================

! Detail values of Fixtures and Fittings
!lod2D_SillBoard: 0-Off, 1-On
!lod2D_Treshold	: 0-Off, 1-Simple, 2-Detailed
!lod2D_Casing	: 0-Off, 1-On
!lod2D_sunShade	: 0-Off, 1-Simple, 2-Detailed

lod2D_SillBoard		= 0
lod2D_Treshold 		= 0
lod2D_Casing 		= 0
lod2D_sunShade	 	= 0

if iLoD2D = SYMBW_S_1LINE then 					! Simple - One Line --> INT 200
	lod2D_SillBoard = 0
	lod2D_Treshold 	= 0
	lod2D_Casing 	= 0
	lod2D_sunShade 	= 0
endif

if iLoD2D = SYMBW_S_CENTERLINE then 				! Simple - Center Line --> SWE 200
	lod2D_SillBoard = 0
	lod2D_Treshold 	= 0
	lod2D_Casing 	= 0
	lod2D_sunShade 	= 0
endif

if iLoD2D = SYMBW_S_2LINE_ACC then 				! Simple - Two Lines
	lod2D_SillBoard = 1
	lod2D_Treshold	= 1
	lod2D_Casing	= 0
	lod2D_sunShade	= 1
endif

if iLoD2D = SYMBW_M_2LINE_GLASS then 				! Middle - without acc
	lod2D_SillBoard = 1
	lod2D_Treshold	= 1
	lod2D_Casing	= 0
	lod2D_sunShade	= 1
endif

if iLoD2D = SYMBW_M_2LINE_NOGLASS then 			! Middle - with acc --> INT 100
	if bShowSillBoardIn2D100NED then
		lod2D_SillBoard = 1
	else
		lod2D_SillBoard = 0
	endif
	lod2D_Treshold	= 1
	lod2D_Casing	= 0
	lod2D_sunShade	= 1
endif

if	iLoD2D = SYMBW_D_SGLASS |\
	iLoD2D = SYMBW_D_REBATEONGLASS |\
	iLoD2D = SYMBW_D_2GLASS then 			! INT 50, NLD 50, DAN 20
	lod2D_SillBoard = 1
	lod2D_Treshold	= 2
	if bNotShowCasingIn2DNOR then
		lod2D_Casing	= 0
	else
		lod2D_Casing	= 1
	endif
	lod2D_sunShade	= 2
endif

if iLoD2D = SYMBW_M_FRAMESASH then					! Middle NLD
	lod2D_SillBoard	= 0
	lod2D_Treshold	= 0
	lod2D_Casing	= 0
	lod2D_sunShade	= 0
endif

if iLoD2D = SYMBW_S_2LINE then					! Chinese Simple
	lod2D_SillBoard	= 0
	lod2D_Treshold	= 0
	lod2D_Casing	= 0
	lod2D_sunShade	= 0
endif

if iLoD2D = SYMBW_D_2LINE_HS then				! Chinese Detailed
	lod2D_SillBoard	= 0
	lod2D_Treshold	= 0
	lod2D_Casing	= 0
	lod2D_sunShade	= 0
endif

if iLoD2D = SYMBW_SCALESENS then							! Scale sensitive
	if GLOB_SCALE > 150 then
		iLoD2D = SYMBW_S_1LINE
		lod2D_SillBoard = 0
		lod2D_Treshold 	= 0
		lod2D_Casing 	= 0
		lod2D_sunShade 	= 0
	endif
	if GLOB_SCALE <= 150 and GLOB_SCALE > 75 then
		iLoD2D = SYMBW_M_2LINE_NOGLASS
		if bShowSillBoardIn2D100NED then
			lod2D_SillBoard = 1
		else
			lod2D_SillBoard = 0
		endif
		lod2D_Treshold	= 1
		lod2D_Casing	= 0
		lod2D_sunShade	= 1
	endif
	if GLOB_SCALE <=  75 then
		iLoD2D = SYMBW_D_SGLASS
		lod2D_SillBoard = 1
		lod2D_Treshold	= 2
		lod2D_Casing	= 1
		lod2D_sunShade	= 2
	endif
	if bNotShowCasingIn2DNOR then
		if GLOB_SCALE > 49 then
			lod2D_Casing	= 0
		else
			lod2D_Casing	= 1
		endif
	endif
endif

if lod2D_SillBoard = 0 | lod2D_Casing = 0 then
	if (lod2D_SillBoard = 0 & bDrawSill) | (lod2D_Casing = 0 & bDrawOutsideTrim) then
		if iWallContourLine = WALL_CONTOUR_OFF then iWallContourLine = WALL_CONTOUR_OUTSIDE
		if iWallContourLine = WALL_CONTOUR_INSIDE then iWallContourLine = WALL_CONTOUR_BOTHSIDES
	endif
	if (lod2D_SillBoard = 0 & bDrawBoard) | (lod2D_Casing = 0 & bDrawInsideTrim) then
		if iWallContourLine = WALL_CONTOUR_OFF then iWallContourLine = WALL_CONTOUR_INSIDE
		if iWallContourLine = WALL_CONTOUR_OUTSIDE then iWallContourLine = WALL_CONTOUR_BOTHSIDES
	endif
endif


! =============================================================================

bFeedBack =  (GLOB_CONTEXT > 20 & GLOB_CONTEXT < 40)


! -----------------------------------------------------------------------------
! Hotspot Display Control
! -----------------------------------------------------------------------------

if iLoD2D < SYMBW_M_2LINE_NOGLASS then
	bShowUnitHotspots	= 0
	bShowAddHotspots	= 0
else
	bShowUnitHotspots	= ((iLoD2D > SYMBW_M_9) | gs_unit_nominal)
endif

if bShowAddHotspotsForIS then
	bShowUnitHotspots	= 1
	bShowAddHotspots	= 1
endif

if iLoD2D = SYMBW_OFF then 100


if AC_WallType = 2 then
	id1 = AC_WindowInWallContour[1]
	id2 = AC_WindowInWallContour[2]
	id3 = AC_WindowInWallContour[3]
	id4 = AC_WindowInWallContour[4]

	if id1 > 0 & id2 > 0 & id3 > 0 & id4 > 0 & abs(id1 - id2) = 1 & abs(id3 - id4) = 1 then
		if abs(AC_WallContourPolygon[id1][2] - AC_WallContourPolygon[id2][2]) < EPS & abs(AC_WallContourPolygon[id3][2] - AC_WallContourPolygon[id4][2]) < EPS then
			AC_WallType = 1
		endif
	endif
endif


! =============================================================================
! Demolition / New construction
! =============================================================================

if iTypeDemolitionFill = RENOVATION_FILL_EXIST then
	gs_wallhole_fill = gs_wallhole_fill
	gs_wallhole_pen_fg = gs_wallhole_pen_fg
	gs_wallhole_pen_bg = gs_wallhole_pen_bg
endif

if iTypeDemolitionFill = RENOVATION_FILL_DEMOLISHED then
	gs_wallhole_fill = gs_Demolition_fill
	gs_wallhole_pen_fg = gs_Demolition_pen_fg
	gs_wallhole_pen_bg = gs_Demolition_pen_bg
endif

if	iTypeDemolitionFill = RENOVATION_FILL_NEW |\
	iTypeDemolitionFill = RENOVATION_FILL_NEW_FULL then

	gs_wallhole_fill = gs_New_fill
	gs_wallhole_pen_fg = gs_New_pen_fg
	gs_wallhole_pen_bg = gs_New_pen_bg
endif


! =============================================================================
! SWE New Symbol
! =============================================================================

if gs_bShowNewOnCC & iTypeDemolitionFill = RENOVATION_FILL_NEW then
	bEnableMasonryArch			= 0
	bEnableFaschen				= 0
	bEnableSill					= 0
	bEnableBoard				= 0
	bEnableThreshold			= 0
	bEnableCasing				= 0
	bEnableShutter				= 0
endif

! =============================================================================
! Turned Plaster Restrictions
! =============================================================================

bOutsideAtRefLine = (wallIsLeft exor (AC_Wall_Direction_Type <> 1 & AC_Wall_Direction_Type <> 3))

if bOutsideAtRefLine then
	if bDrawInsideTrim then
		gs_bAutoTurnOut	= 0
		gs_bOverOut		= 0
	endif
	if bDrawOutsideTrim then
		gs_bAutoTurnIn	= 0
		gs_bOverIn		= 0
	endif
else
	if bDrawOutsideTrim then
		gs_bAutoTurnOut	= 0
		gs_bOverOut		= 0
	endif
	if bDrawInsideTrim then
		gs_bAutoTurnIn	= 0
		gs_bOverIn		= 0
	endif
endif

! =============================================================================
! Wallhole Structure
! =============================================================================

drawindex 40	! Draw Cavity Closure at the top

bDrawSillFill	= not(bDrawSill  | bDrawOutsideTrim)
bDrawBoardFill	= not(bDrawBoard | bDrawInsideTrim)

call "WallholeStructure" parameters all A = A,
	iTypeDemolitionFill		= iTypeDemolitionFill,
	refWidth				= refWidth,
	leftWidth				= leftWallholeWidth,
	rightWidth				= rightWallholeWidth,
	iRevealType				= iRevealType,
	leftWallholeRevealPnts	= leftWallholeRevealPnts,
	rightWallholeRevealPnts	= rightWallholeRevealPnts,
	iRevealPointsIdx		= iRevealPointsIdx,
	bAddPoint				= bAddPoint,
	iClosureType			= iClosureType,
	radSill					= radSill,
	radBoard				= radBoard,
	WOD						= WOD,
	overSizeLeft			= overSizeLeft,
	overSizeRight			= overSizeRight,
	overSizeUpper			= overSizeUpper,
	overSizeLower			= overSizeLower,
	lineSections			= lineSections,
! --- Turned Plaster Skins
	possibleSkinTurnIn		= possibleSkinTurnIn,
	possibleSkinTurnOut		= possibleSkinTurnOut,
	maxSkinTurnIn			= maxSkinTurnIn,
	maxSkinTurnOut			= maxSkinTurnOut,
	nSkinTurnIn				= nSkinTurnIn,
	nSkinTurnOut			= nSkinTurnOut,
	thkPlasterAtSillLeft	= thkPlasterAtSillLeft,
	thkPlasterAtSillRight	= thkPlasterAtSillRight,
	thkPlasterAtBoardLeft	= thkPlasterAtBoardLeft,
	thkPlasterAtBoardRight	= thkPlasterAtBoardRight,
! --- Function Control Parameters
	bEnablePlasterLeftIn	= bEnablePlasterLeftIn,
	bEnablePlasterLeftOut	= bEnablePlasterLeftOut,
	bEnablePlasterRightIn	= bEnablePlasterRightIn,
	bEnablePlasterRightOut	= bEnablePlasterRightOut,
	bEnableParapetInset		= bEnableParapetInset,
	bEnableMasonryArch		= bEnableMasonryArch,
	bEnableFaschen			= bEnableFaschen,
	bEnableWallContourHiddenLine	= bEnableWallContourHiddenLine,
	bWallContHiddenLineIn	= 0,
	bWallContHiddenLineOut	= 0,
! --- Macro Control Parameters
	isWindow				= 1,
	gs_IsCurved				= gs_IsCurved,
	bParalellInCurvedWalls	= bParalellInCurvedWalls,
	bDrawSillFill			= bDrawSillFill,
	bDrawBoardFill			= bDrawBoardFill,
! --- Corner Functions
	bLeftCornerFunction		= bLeftCornerFunction,
	leftCornerAngle			= leftCornerAngle,
	leftConnWallThk			= leftConnWallThk,
	bRightCornerFunction	= bRightCornerFunction,
	rightCornerAngle		= rightCornerAngle,
	rightConnWallThk		= rightConnWallThk,
! --- Window Sizes
	gs_wallhole_hotspots	= 1,
	gs_reveal_hotspots		= 1,
! --- Reveal and Closure Type
	gs_reveal_left			= gs_reveal_left,
	gs_reveal_right			= gs_reveal_right,
	revealInnerLeft 		= revealInnerLeft,
	revealInnerRight		= revealInnerRight,
! --- Casing
	bDrawOutsideTrim		= bDrawOutsideTrim,
	bDrawInsideTrim			= bDrawInsideTrim,
! --- String Resources
	stWallContourLine		= stWallContourLine,
	stCavityClosureSide		= stCavityClosureSide,
	stCavityClosureTurnDir	= stCavityClosureTurnDir,
	stMasonryArchTypes		= stMasonryArchTypes,
	stMasonryArchStructure	= stMasonryArchStructure,
! --- Parapet
	iParapetSize			= iParapetSize


! =============================================================================
! NED Fire Rating Symbol
! =============================================================================

if bEnableNEDFireRating then
	_bSuccess = 0
	_bShowSymbol = 0
	_bSuccess = LIBRARYGLOBAL ("LibraryGlobals13", "bShowFireRating", _bShowSymbol)
	if _bSuccess then
		_bSuccess = LIBRARYGLOBAL ("LibraryGlobals13", "fireRatingSymbPen", _fireSymbPen)
	endif

	if _bSuccess and _bShowSymbol and iNEDFireRating > 0 and iNEDFireRating < 6 then
		pen _fireSymbPen

		_dx = 0.08
		_dy1 = 0.5
		_dy2 = 0.3
		_dy3 = 0.16

		hotspot2 0, -_dy1 - _dy3, 10501, NEDFireRatingPos, 1+128
		hotspot2 NEDFireRatingPos, -_dy1 - _dy3, 10502, NEDFireRatingPos, 2
		hotspot2 -1, -_dy1 - _dy3, 10503, NEDFireRatingPos, 3

		hotspot2 0, _dy1 + _dy3, 10504, NEDFireRatingPos, 1+128
		hotspot2 NEDFireRatingPos, _dy1 + _dy3, 10505, NEDFireRatingPos, 2
		hotspot2 -1, _dy1 + _dy3, 10506, NEDFireRatingPos, 3

		add2 NEDFireRatingPos, 0

		if iNEDFireRating = 2 or iNEDFireRating = 3 then
			line2 -_dx,	 _dy1,	 _dx,	 _dy1 + _dy3
			line2 -_dx,	-_dy1,	 _dx,	-_dy1 - _dy3
			line2  _dx,	 _dy1,	-_dx,	 _dy1 + _dy3
			line2  _dx,	-_dy1,	-_dx,	-_dy1 - _dy3
		endif

		if iNEDFireRating = 3 then
			line2 -_dx,	 _dy2,	 _dx,	 _dy2 + _dy3
			line2 -_dx,	-_dy2,	 _dx,	-_dy2 - _dy3
			line2  _dx,	 _dy2,	-_dx,	 _dy2 + _dy3
			line2  _dx,	-_dy2,	-_dx,	-_dy2 - _dy3
		endif

		line2 0, -_dy1 - _dy3, 0, _dy1 + _dy3

		del 1
	endif
endif


100:
! =============================================================================
! Returned Parameters
! =============================================================================

drawindex 40	! Draw Window Panel in the Middle

addPrmX = offsWindowX + (SymbMid_RightDx - SymbMid_LeftDx)/2
addPrmY = SymbolMid_shiftDy
mulPrmX = 1
mulPrmY = 1

if not(bShowReveal) then
	leftUnitWidth	= min(-leftWallFrameRevealPnts[idxFrameStartRevealLeft][1], -leftWallFrameRevealPnts[idxFrameEndRevealLeft][1])
	rightUnitWidth	= min(rightWallFrameRevealPnts[idxFrameStartRevealRight][1], rightWallFrameRevealPnts[idxFrameEndRevealRight][1])

	ac_unit_width = leftUnitWidth + rightUnitWidth - cornerPostXRight - cornerPostXLeft
endif

ac_unit_width = ac_unit_width + SymbMid_RightDx + SymbMid_LeftDx

end ac_unit_width,
	gs_frame_ovhg_left_out,
	gs_frame_ovhg_right_out,
	gs_frame_ovhg_left_in,
	gs_frame_ovhg_right_in,
	bMirrored,
	addPrmX, addPrmY,
	mulPrmX, mulPrmY,
	iLoD2D,
	bShowAddHotspots, bShowUnitHotspots


]]>
</Script_2D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_1D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
! const values for parameter: iTypeDemolitionFill
RENOVATION_FILL_EXIST		= 1
RENOVATION_FILL_DEMOLISHED	= 2
RENOVATION_FILL_NEW			= 3
RENOVATION_FILL_NEW_FULL	= 4

! const values for parameter: iDWDet2D
if	LibraryLangCode = "AUT" |\
	LibraryLangCode = "CHE" |\
	LibraryLangCode = "GER" then

	DETLEVEL_DW2D_MVO    = 1
	DETLEVEL_DW2D_SCSENS = 2
	DETLEVEL_DW2D_50     = 3
	DETLEVEL_DW2D_100    = 4
	DETLEVEL_DW2D_200    = 5
	DETLEVEL_DW2D_OFF    = 8
	DETLEVEL_DW2D_20     = 9
	DETLEVEL_DW2D_500    = 10
else
	DETLEVEL_DW2D_MVO     = 1
	DETLEVEL_DW2D_SCSENS  = 2
	DETLEVEL_DW2D_50      = 3
	DETLEVEL_DW2D_100     = 4
	DETLEVEL_DW2D_MIDDET  = 5
	DETLEVEL_DW2D_SMPL2L  = 6
	DETLEVEL_DW2D_200     = 7
	DETLEVEL_DW2D_OFF     = 8
	DETLEVEL_DW2D_MIDUSA  = 9
	DETLEVEL_DW2D_CHISMPL = 10
	DETLEVEL_DW2D_CHIDET  = 11
	DETLEVEL_DW2D_20      = 12
endif

! Contact person: <NJ>

EPS = 0.0001

! iRevealType:
REVEAL_EDGE				= 0
REVEAL_NO				= 1
REVEAL_POSITIVE			= 2
REVEAL_NEGATIVE			= 3
REVEAL_SLANTED			= 4
REVEAL_SPLAYED			= 5
REVEAL_HISTORIC			= 6
REVEAL_DOUBLE			= 7
REVEAL_DOUBLE_SPLAYED	= 8
REVEAL_OUTSIDE_SPLAYED	= 9

! iRevealOnSymbol
SHOWREV_MVO		= 1
SHOWREV_ALWAYS	= 2
SHOWREV_UPTO50	= 3
SHOWREV_UPTO100	= 4
SHOWREV_UPTO200	= 5
SHOWREV_NEVER	= 6

! iClosureType:
CLOSURE_NO					= 0
CLOSURE_TRADITIONAL			= 1
CLOSURE_PREFABRICATED		= 2
CLOSURE_CUSTOM				= 3
CLOSURE_SOLID_WALL			= 4
CLOSURE_STUD_WALL			= 5
CLOSURE_STUD_WALL_SIDING	= 6
CLOSURE_BRICK_VENEER		= 7
CLOSURE_VARIABLE			= 8
CLOSURE_PLASTER_REVEAL	 			= 9
CLOSURE_INSULATED_REVEAL			= 10
CLOSURE_INSULATED_FOR_RENOVATION	= 11
CLOSURE_FINISH						= 12
CLOSURE_AIR_SPACE					= 13
CLOSURE_DUTCH_VARIABLE				= 14

! lodSE - S/E Detail level
LODSE_20	= 1
LODSE_50	= 2
LODSE_100	= 3
LODSE_200	= 4
LODSE_500	= 5

! lod2d
DET2D_FS_OFF				= 0
DET2D_FS_SCALESENS			= -1
DET2D_FS_SIMPLE_ONE			= 11
DET2D_FS_SIMPLE_TWO			= 12
DET2D_FS_MIDDLE				= 21
DET2D_FS_MIDDLE_USA			= 22
DET2D_FS_DETAILED			= 30
DET2D_FS_DETAILED_FIX_GRID	= 31
DET2D_FS_DETAILED_USA		= 32
DET2D_FS_SIMPLE_CHI			= 51
DET2D_FS_DETAILED_CHI		= 52

! iLoD2D
SYMBW_OFF					= 0
SYMBW_SCALESENS				= 1
SYMBW_S_1LINE				= 11
SYMBW_S_2LINE				= 12
SYMBW_S_CENTERLINE			= 13
SYMBW_S_2LINE_ACC			= 14
SYMBW_S_5					= 15
SYMBW_S_6					= 16
SYMBW_S_7					= 17
SYMBW_S_8					= 18
SYMBW_S_9					= 19
SYMBW_M_2LINE_NOGLASS		= 21
SYMBW_M_2LINE_GLASS			= 22
SYMBW_M_FRAMESASH			= 23
SYMBW_M_2LINE_FRAME			= 24
SYMBW_M_5					= 25
SYMBW_M_6					= 26
SYMBW_M_7					= 27
SYMBW_M_8					= 28
SYMBW_M_9					= 29
SYMBW_D_SGLASS				= 31
SYMBW_D_2GLASS				= 32
SYMBW_D_2LINE_HS			= 33
SYMBW_D_NOGLASS				= 34
SYMBW_D_REBATEONGLASS		= 35
SYMBW_D_2GLASS_OVERLAP		= 36
SYMBW_D_7					= 37
SYMBW_D_8					= 38
SYMBW_D_9					= 39

iWindowShape			= 0	! SHAPE_RECTANGULAR
bParalellInCurvedWalls	= 0

! Turn Skin on Side
CAVITY_SIDE_BOTH	= 1
CAVITY_SIDE_LEFT	= 2
CAVITY_SIDE_RIGHT	= 3
CAVITY_SIDE_NONE	= 4

! Wall Inset Sizes
PARAPET_SIZE_AUTO	= 1
PARAPET_SIZE_SYMM	= 2
PARAPET_SIZE_ASYMM	= 3

! Wall Inset Bottom at
PARAPET_BOTTOM_CURRENTSTORY	= 1
PARAPET_BOTTOM_WALLBASE		= 2

! Wall Contour Line - iWallContourLine
WALL_CONTOUR_OFF		= 1
WALL_CONTOUR_INSIDE		= 2
WALL_CONTOUR_OUTSIDE	= 3
WALL_CONTOUR_BOTHSIDES	= 4

! iVentilationProfileType
VENTPROFILE_OVER_FRAME		= 2
VENTPROFILE_OVER_GLAZING	= 3

! ==============================================================================
! Localization
! ==============================================================================

dim stDetail2D[13]
	stDetail2D[1]	= `по ПМВ`
	stDetail2D[2]	= `Зависит от Масштаба`
	stDetail2D[3]	= `1:50`
	stDetail2D[4]	= `1:100`
	stDetail2D[5]	= `Средняя Детализация - без Аксесс.`
	stDetail2D[6]	= `Простой - Две Линии`
	stDetail2D[7]	= `1:200`
	stDetail2D[8]	= `Откл.`
	stDetail2D[9]	= `Средний США`
	stDetail2D[10]	= `Китайский Простой`
	stDetail2D[11]	= `Китайский Детальный`
	stDetail2D[12]	= `1:20`
	stDetail2D[13]	= `1:500`

dim stRevealTypes[10]	! gs_reveal_type
	stRevealTypes[ 1] = `Без Четверти - Торец`
	stRevealTypes[ 2] = `Без Четверти`
	stRevealTypes[ 3] = `Четверть`
	stRevealTypes[ 4] = `Отрицательная Четверть`
	stRevealTypes[ 5] = `Четверть с Рассветами`
	stRevealTypes[ 6] = `Четверть с Откосом`
	stRevealTypes[ 7] = `Историческая Четверть`
	stRevealTypes[ 8] = `Специальная Четверть`
	stRevealTypes[ 9] = `Четверть с Двумя Откосами`
	stRevealTypes[10] = `Четверть с Откосом Снаружи`

dim stRevealTypesBottom[4]		! gs_reveal_type_bottom
	stRevealTypesBottom[1] = `Одинаковый`
	stRevealTypesBottom[2] = `Без Четверти`
	stRevealTypesBottom[3] = `Четверть`
	stRevealTypesBottom[4] = `Отрицательная Четверть`

dim stRevealAngleEditBy[2]	! gs_reveal_angle_edit_by
	stRevealAngleEditBy[1] = `Угол и Глубина`
	stRevealAngleEditBy[2] = `Ширина и Глубина`

dim stClosureTypes[15]	! gs_closure_type
	stClosureTypes[ 1] = `Без Замыкания`
	stClosureTypes[ 2] = `Традиционное Замыкание Полости`
	stClosureTypes[ 3] = `Готовое Замыкание Слоев`
	stClosureTypes[ 4] = `Специальное Замыкание`
	stClosureTypes[ 5] = `Сплошная Стена`
	stClosureTypes[ 6] = `Деревянная Каркасная Стена`
	stClosureTypes[ 7] = `Деревянная Каркасная Стена с Наружной Обшивкой`
	stClosureTypes[ 8] = `Кирпичная Облицовка`
	stClosureTypes[ 9] = `Настраиваемое Замыкание`
	stClosureTypes[10] = `Штукатурная Четверть`
	stClosureTypes[11] = `Утепленная Четверть`
	stClosureTypes[12] = `Утепление при Реконструкции`
	stClosureTypes[13] = `Замыкание Отделкой`
	stClosureTypes[14] = `Замыкание с Воздушной Прослойкой`
	stClosureTypes[15] = `Датское Замыкание`

dim stRevealOnSymbValues[6]
	stRevealOnSymbValues[1] = `по ПМВ`
	stRevealOnSymbValues[2] = `Всегда`
	stRevealOnSymbValues[3] = `До 1:50`
	stRevealOnSymbValues[4] = `До 1:100`
	stRevealOnSymbValues[5] = `До 1:200`
	stRevealOnSymbValues[6] = `Никогда`

dim stWallContourLine[4]	! gs_wcont_line_sl
	stWallContourLine[1] = `Откл.`
	stWallContourLine[2] = `Внутрь`
	stWallContourLine[3] = `Снаружи`
	stWallContourLine[4] = `Обе стороны`

dim stCavityClosureSide[4]		! gs_cavity_side
	stCavityClosureSide[1] = `Обе`
	stCavityClosureSide[2] = `Слева`
	stCavityClosureSide[3] = `Справа`
	stCavityClosureSide[4] = `Нет`

dim stCavityClosureTurnDir[2]	! gs_nTurnDir
	stCavityClosureTurnDir[1] = `Наружная Поверхность`
	stCavityClosureTurnDir[2] = `Внутренняя Поверхность`

dim stDutchClosureToSide[2]
	stDutchClosureToSide[1] = `Наружная Поверхность`
	stDutchClosureToSide[2] = `Внутренняя Поверхность`

dim stCavityClosureEditedJambSide[3]
	stCavityClosureEditedJambSide[1] = `Редактирование Обоих Откосов`
	stCavityClosureEditedJambSide[2] = `Редактирование Левого Откоса`
	stCavityClosureEditedJambSide[3] = `Редактирование Правого Откоса`

dim stCavityClosureEditedWallSide[2]
	stCavityClosureEditedWallSide[1] = `Наружная Поверхность`
	stCavityClosureEditedWallSide[2] = `Внутренняя Поверхность`

dim stCavityClosureEditedSkinNumber[4]
	stCavityClosureEditedSkinNumber[1] = `1. Слой`
	stCavityClosureEditedSkinNumber[2] = `2. Слой`
	stCavityClosureEditedSkinNumber[3] = `3. Слой`
	stCavityClosureEditedSkinNumber[4] = `4. Слой`

dim stCavityClosureTurnInThickness[2]
	stCavityClosureTurnInThickness[1] = `Исходный`
	stCavityClosureTurnInThickness[2] = `Специальный`

dim stCavityClosureHatchOrientation[2]
	stCavityClosureHatchOrientation[1] = `Исходный`
	stCavityClosureHatchOrientation[2] = `Поворот Внутрь`

dim stMasonryArchTypes[7]	! gs_masonry_arch_int
	stMasonryArchTypes[1] = `Откл.`
	stMasonryArchTypes[2] = `Прямая Перемычка`
	stMasonryArchTypes[3] = `Клинчатая Перемычка`
	stMasonryArchTypes[4] = `Клинчатая Перемычка с Замковым Камнем`
	stMasonryArchTypes[5] = `Лучковая Перемычка`
	stMasonryArchTypes[6] = `Лучковая Перемычка с Замковым Камнем`
	stMasonryArchTypes[7] = `Декоративная Арка`

dim stMasonryArchStructure[2]	! gs_masonry_arch_structure
	stMasonryArchStructure[1] = `Штукатурная`
	stMasonryArchStructure[2] = `Кирпичная`

dim stParapetBottom[2]	! gs_parapet_bottom_st
	stParapetBottom[1] = `Текущий Этаж`
	stParapetBottom[2] = `Основание Стены`

dim stParapetSize[3] ! gs_parapet_sizes_st
	stParapetSize[1] = `Автоматически`
	stParapetSize[2] = `Симметрично`
	stParapetSize[3] = `Асимметрично`


! =============================================================================
! Array index definitions
! =============================================================================

iRevealType = gs_reveal_type_int - 1

if gs_bShowNewOnCC & iTypeDemolitionFill = RENOVATION_FILL_NEW then iRevealType = REVEAL_NO

iSillRevealType  = gs_reveal_doubleOuterTypeInt - 1
iBoardRevealType = gs_reveal_doubleInnerTypeInt - 1


! ==============================================================================
! Function Control
! ==============================================================================

if bEnableParapetInset		< 0	then bEnableParapetInset		= 0
if bEnableMasonryArch		< 0	then bEnableMasonryArch			= 0
if bEnableFaschen			< 0	then bEnableFaschen				= 0
if bEnableSill				< 0	then bEnableSill				= 0
if bEnableBoard				< 0	then bEnableBoard				= 0
if bEnableThreshold			< 0	then bEnableThreshold			= 0
if bEnableCasing			< 0	then bEnableCasing				= 0
if bEnableShutter			< 0	then bEnableShutter				= 0
if bEnableCustomCornerLeft	< 0	then bEnableCustomCornerLeft	= 0
if bEnableCustomCornerRight	< 0	then bEnableCustomCornerRight	= 0
bEnableWallContourHiddenLine	= 1

if gs_RevealTypeEnable  = 0 then gs_RevealTypeEnable  = 1 + 2 + 4 + 8 + 16 + 32 + 64 + 128
if gs_ClosureTypeEnable = 0 then gs_ClosureTypeEnable = 1 + 2 + 4 + 8 + 256 + 512 + 1024 + 2048

defaultSillDepth	= 0.120


! =============================================================================

curvedWall		= abs(WIDO_ORIG_DIST) > EPS
wallIsLeft		= (SYMB_ROTANGLE > EPS) exor WIDO_REVEAL_SIDE
bInclinedWall	= (abs(WALL_INCL) > EPS)

gs_IsCurved		= 0
gs_sill_curved	= 1
gs_board_curved	= 1
gs_sill_outside	= 0
gs_board_inside	= 0

gs_show_Hs	= 1


! =============================================================================
! Show Reveal On Symbol
! =============================================================================

bCanHaveReveal = (bittest(gs_RevealTypeEnable, REVEAL_POSITIVE)			| \
				  bittest(gs_RevealTypeEnable, REVEAL_NEGATIVE)			| \
				  bittest(gs_RevealTypeEnable, REVEAL_SLANTED)			| \
				  bittest(gs_RevealTypeEnable, REVEAL_SPLAYED)			| \
				  bittest(gs_RevealTypeEnable, REVEAL_HISTORIC)			| \
				  bittest(gs_RevealTypeEnable, REVEAL_DOUBLE)			| \
				  bittest(gs_RevealTypeEnable, REVEAL_DOUBLE_SPLAYED)	| \
				  bittest(gs_RevealTypeEnable, REVEAL_OUTSIDE_SPLAYED)	)


! =============================================================================
! Request globals for 2D (MVO Detail Level, MVO Reveal, Hotspots for IS)
! =============================================================================

iMVODetlevel2D			= 0
bMVOCasing2D			= 0
bShowAddHotspots		= 1
bMVODetlevelReveal		= 0
bShowAddHotspotsForIS	= 0

if GLOB_SCRIPT_TYPE = 2 then
	bGetMVOValueDlev2D		= (iDWDet2D = DETLEVEL_DW2D_MVO)
	bGetMVOValueCasing2D	= 0
	bGetMVOValueDlevReveal	= (iRevealOnSymbol = SHOWREV_MVO)
	bGetHotspotsForIS		= (GLOB_CONTEXT = 6)

	if bGetMVOValueDlev2D | bGetMVOValueDlevReveal | bGetHotspotsForIS then
		call "GetDWSymbSettings" parameters	bWindow					= 1,
											bGetMVOValueDlev2D		= bGetMVOValueDlev2D,
											bGetMVOValueCasing2D	= bGetMVOValueCasing2D,
											bGetMVOValueDlevReveal	= bGetMVOValueDlevReveal,
											bGetHotspotsForIS		= bGetHotspotsForIS,
						returned_parameters iMVODetlevel2D,
											bMVOCasing2D,
											bMVODetlevelReveal,
											bShowAddHotspotsForIS
	endif
endif

! =============================================================================
! Request globals for 3D (MVO SE Detail Level, Hotspots for IS)
! =============================================================================

if GLOB_SCRIPT_TYPE = 3 then
	iMVODetlevelSE			= 0
	bGetMVOValueDlevSE		= 0					! not used in INT
	bGetHotspotsForIS		= (GLOB_CONTEXT = 6)

	if bGetMVOValueDlevSE | bGetHotspotsForIS then
		call "GetDWSymbSettings" parameters	bWindow					= 1,
											bGetMVOValueDlevSE		= bGetMVOValueDlevSE,
											bGetHotspotsForIS		= bGetHotspotsForIS,
						returned_parameters iMVODetlevelSE,
											bShowAddHotspotsForIS
	endif
endif

! =============================================================================
! 2D detail level settings
! =============================================================================

iLoD2D	= SYMBW_SCALESENS
if GLOB_SCRIPT_TYPE = 2 then
	if bGetMVOValueDlev2D then																	! by MVO
		iLoD2D	= SYMBW_D_SGLASS
		if iMVODetlevel2D < SYMBW_D_SGLASS then
			iLoD2D	= SYMBW_M_2LINE_NOGLASS
			if iMVODetlevel2D = SYMBW_M_2LINE_GLASS | iLoD2D = SYMBW_M_FRAMESASH then iLoD2D = SYMBW_M_2LINE_GLASS
		endif
		if iMVODetlevel2D < SYMBW_M_2LINE_NOGLASS then
			iLoD2D = SYMBW_S_1LINE
			if iMVODetlevel2D = SYMBW_S_CENTERLINE | iMVODetlevel2D = SYMBW_S_2LINE then iLoD2D	= iMVODetlevel2D
		endif

		if GLOB_PREVIEW_MODE = 3 then				! in case of 2D-3D Favorite Preview
			iLoD2D = SYMBW_D_SGLASS
		endif
	else
		if iDWDet2D = DETLEVEL_DW2D_50		then	iLoD2D = SYMBW_D_SGLASS				! Detailed --> INT 50
		if iDWDet2D = DETLEVEL_DW2D_100		then	iLoD2D = SYMBW_M_2LINE_NOGLASS		! Middle - with acc --> INT 100
		if iDWDet2D = DETLEVEL_DW2D_200		then	iLoD2D = SYMBW_S_1LINE				! Simple - One Line --> INT 200
		if iDWDet2D = DETLEVEL_DW2D_OFF 	then	iLoD2D = SYMBW_OFF					! Off
		if iDWDet2D = DETLEVEL_DW2D_20		then	iLoD2D = SYMBW_D_2GLASS				! Detailed --> DAN 20

		if	LibraryLangCode = "AUT" |\
			LibraryLangCode = "CHE" |\
			LibraryLangCode = "GER" then
			if iDWDet2D = DETLEVEL_DW2D_500		then	iLoD2D = SYMBW_S_1LINE			! DACH 500
		else
			if iDWDet2D = DETLEVEL_DW2D_MIDDET	then	iLoD2D = SYMBW_M_2LINE_GLASS	! Middle - without acc
			if iDWDet2D = DETLEVEL_DW2D_SMPL2L	then	iLoD2D = SYMBW_S_2LINE_ACC		! Simple - Two Lines
			if iDWDet2D = DETLEVEL_DW2D_MIDUSA	then	iLoD2D = SYMBW_M_FRAMESASH		! Middle USA
			if iDWDet2D = DETLEVEL_DW2D_CHISMPL	then	iLoD2D = SYMBW_S_2LINE			! Chinese Simple
			if iDWDet2D = DETLEVEL_DW2D_CHIDET	then	iLoD2D = SYMBW_D_2LINE_HS		! Chinese Detailed
		endif
	endif
endif


! =============================================================================
! Show Reveal On Symbol
! =============================================================================

bShowReveal = 1
if GLOB_SCRIPT_TYPE = 2 then
	if bGetMVOValueDlevReveal then																				! by MVO
		bShowReveal = bMVODetlevelReveal
	else
		bShowReveal = 1
		if iRevealOnSymbol = SHOWREV_NEVER											then bShowReveal = 0		! Never
		if iLoD2D = SYMBW_SCALESENS then																		! Scale sensitive
			if iRevealOnSymbol = SHOWREV_UPTO50 & GLOB_SCALE > 75					then bShowReveal = 0		! Up to 1:50
			if iRevealOnSymbol = SHOWREV_UPTO100 & GLOB_SCALE > 150					then bShowReveal = 0		! Up to 1:100
		else
			if iRevealOnSymbol = SHOWREV_UPTO50 & iLoD2D < SYMBW_D_SGLASS			then bShowReveal = 0		! Up to 1:50
			if iRevealOnSymbol = SHOWREV_UPTO100 & iLoD2D < SYMBW_M_2LINE_NOGLASS	then bShowReveal = 0		! Up to 1:100
		endif
		if iRevealOnSymbol = SHOWREV_UPTO200 & GLOB_SCALE > 200						then bShowReveal = 0		! Up to 1:200
	endif
endif


! =============================================================================
! Hide Variable Closure Type NED, FLA
! =============================================================================

iClosureType = gs_closure_type_int - 1
if GLOB_SCRIPT_TYPE = 2 then
	if	bHideVariClosTypeInSimple2D &\
		iClosureType = CLOSURE_VARIABLE	&\
		((iLoD2D < SYMBW_M_2LINE_NOGLASS & iLoD2D > SYMBW_SCALESENS) | (iLoD2D = SYMBW_SCALESENS & GLOB_SCALE > 150)) then
		iClosureType = CLOSURE_NO
	endif
endif


! ==============================================================================
! Symbol at Middle
! ==============================================================================

signRevealSide = not(WIDO_REVEAL_SIDE) - WIDO_REVEAL_SIDE

if GLOB_SCRIPT_TYPE = 2 then
	if GLOB_CONTEXT = 2 | GLOB_CONTEXT = 22 then
		if	iLoD2D = SYMBW_S_2LINE | iLoD2D = SYMBW_D_2LINE_HS then bDWSymbolAtMiddle = 1
		if	iLoD2D = SYMBW_S_CENTERLINE then bDWSymbolAtMiddle2 = 1
	endif
endif
if GLOB_SCRIPT_TYPE = 3 then
	if GLOB_CONTEXT = 4 | GLOB_CONTEXT = 24 | GLOB_CONTEXT = 6 then
		if lod3D = 5 then bDWSymbolAtMiddle = 1
	endif
endif

SymbMid_LeftDx		= 0
SymbMid_RightDx		= 0
SymbolMid_shiftDy	= 0

cornerPostXLeft		= 0
cornerPostXRight	= 0

if bDWSymbolAtMiddle then
	SymbolMid_shiftDy = (WIDO_SILL - WALL_THICKNESS / 2 + WIDO_FRAME_THICKNESS / 2) * signRevealSide

	if bRightCornerFunction then
		if gs_corner_column then
			SymbMid_RightDx = cornerPostXRight + (WIDO_FRAME_THICKNESS/2 + SymbolMid_shiftDy) / tan(rightCornerAngle/2)
		else
			SymbMid_RightDx = signRevealSide * SymbolMid_shiftDy / tan(rightCornerAngle/2)
		endif
	endif
	if bLeftCornerFunction then
		if gs_corner_column then
			SymbMid_LeftDx = cornerPostXLeft + (WIDO_FRAME_THICKNESS/2 + SymbolMid_shiftDy) / tan(leftCornerAngle/2)
		else
			SymbMid_LeftDx = signRevealSide * SymbolMid_shiftDy / tan(leftCornerAngle/2)
		endif
	endif
endif

if bDWSymbolAtMiddle2 then
	SymbolMid_shiftDy = (WIDO_SILL - WALL_THICKNESS / 2) * signRevealSide

	if bRightCornerFunction then
		SymbMid_RightDx = signRevealSide * SymbolMid_shiftDy / tan(rightCornerAngle/2)
	endif
	if bLeftCornerFunction then
		SymbMid_LeftDx = signRevealSide * SymbolMid_shiftDy / tan(leftCornerAngle/2)
	endif
endif


! =============================================================================
! Definitions
! =============================================================================

bDrawOutsideTrim	= 0
bDrawInsideTrim		= 0
bDrawSill			= 0
bDrawBoard			= 0
bDisabeMirroring = 0
bMirrored = (bDisabeMirroring & SYMB_MIRRORED)

ac_zone_on_reveal_side = 1
if WIDO_REVEAL_SIDE exor not(gs_bOpeningToZone) then
	ac_zone_on_reveal_side = not(ac_zone_on_reveal_side)
endif
parameters ac_zone_on_reveal_side = ac_zone_on_reveal_side

isVentilationOverFrame = (bEnableVentilationProfile & bVentilationProfile & (iVentilationProfileType = VENTPROFILE_OVER_FRAME))


! =============================================================================
! Nominal Size
! =============================================================================

if gs_nominal_size > 0 then
	gs_wallhole_nominal	= 0
	gs_reveal_nominal	= 0
	gs_unit_nominal		= 0
	bSetParams = 0

	if not(bSetParams) & bittest(gs_nominal_size, 0) then: gs_wallhole_nominal	= 1: bSetParams = 1: endif
	if not(bSetParams) & bittest(gs_nominal_size, 1) then: gs_reveal_nominal	= 1: bSetParams = 1: endif
	if not(bSetParams) & bittest(gs_nominal_size, 2) then: gs_unit_nominal		= 1: bSetParams = 1: endif

	if bSetParams & GLOB_SCRIPT_TYPE = 5 then
		parameters	gs_wallhole_nominal	= gs_wallhole_nominal,
					gs_reveal_nominal	= gs_reveal_nominal,
					gs_unit_nominal		= gs_unit_nominal
	endif
endif

! ==============================================================================
! Retroactive Logic
! ==============================================================================

bEnablePlasterLeftIn	= 1
bEnablePlasterLeftOut	= 1
bEnablePlasterRightIn	= 1
bEnablePlasterRightOut	= 1
bEnablePlasterTopIn		= 1
bEnablePlasterTopOut	= 1
bEnablePlasterBottomIn	= 1
bEnablePlasterBottomOut	= 1

bOutsideAtRefLine = (wallIsLeft exor (AC_Wall_Direction_Type <> 1 & AC_Wall_Direction_Type <> 3))
if bOutsideAtRefLine then
	if bDrawInsideTrim then
		bEnablePlasterLeftOut	= 0
		bEnablePlasterRightOut	= 0
		bEnablePlasterTopOut	= 0
		bEnablePlasterBottomOut	= 0
	endif
	if bDrawOutsideTrim then
		bEnablePlasterLeftIn	= 0
		bEnablePlasterRightIn	= 0
		bEnablePlasterTopIn		= 0
		bEnablePlasterBottomIn	= 0
	endif
	if bDrawSill then
		bEnablePlasterBottomIn	= 0
	endif
	if bDrawBoard then
		bEnablePlasterBottomOut	= 0
	endif
else
	if bDrawOutsideTrim then
		bEnablePlasterLeftOut	= 0
		bEnablePlasterRightOut	= 0
		bEnablePlasterTopOut	= 0
		bEnablePlasterBottomOut	= 0
	endif
	if bDrawInsideTrim then
		bEnablePlasterLeftIn	= 0
		bEnablePlasterRightIn	= 0
		bEnablePlasterTopIn		= 0
		bEnablePlasterBottomIn	= 0
	endif
	if bDrawSill then
		bEnablePlasterBottomOut	= 0
	endif
	if bDrawBoard then
		bEnablePlasterBottomIn	= 0
	endif
endif


! =============================================================================
! Plaster Geometry
! =============================================================================

call "PlasterGeometry" parameters gs_macro_version = 12,
	AC_Wall_Direction_Type	= AC_Wall_Direction_Type,
	bEnablePlasterLeftIn	= bEnablePlasterLeftIn,
	bEnablePlasterLeftOut	= bEnablePlasterLeftOut,
	bEnablePlasterRightIn	= bEnablePlasterRightIn,
	bEnablePlasterRightOut	= bEnablePlasterRightOut,
	bEnablePlasterTopIn		= bEnablePlasterTopIn,
	bEnablePlasterTopOut	= bEnablePlasterTopOut,
	bEnablePlasterBottomIn	= bEnablePlasterBottomIn,
	bEnablePlasterBottomOut	= bEnablePlasterBottomOut,
	gs_useWallFinishSkin	= gs_useWallFinishSkin,
	gs_maxPlasterThk		= gs_maxPlasterThk,
	gs_bAutoTurnOut			= gs_bAutoTurnOut,
	gs_bOverOut				= gs_bOverOut,
	gs_bAutoTurnIn			= gs_bAutoTurnIn,
	gs_bOverIn				= gs_bOverIn,
	iClosureType			= iClosureType,
	gs_custom_cc_array_left	= gs_custom_cc_array_left,
	gs_custom_cc_array_right= gs_custom_cc_array_right,
returned_parameters	thkPlasterAtSillLeft,
					thkPlasterAtSillSlLeft,
					thkPlasterAtSillSlLeftBottom,
					thkPlasterAtSillRight,
					thkPlasterAtSillSlRight,
					thkPlasterAtSillSlRightBottom,
					thkPlasterAtSillTop,
					thkPlasterAtSillBottom,
					thkPlasterAtBoardLeft,
					thkPlasterAtBoardSlLeft,
					thkPlasterAtBoardSlLeftBottom,
					thkPlasterAtBoardRight,
					thkPlasterAtBoardSlRight,
					thkPlasterAtBoardSlRightBottom,
					thkPlasterAtBoardTop,
					thkPlasterAtBoardBottom,
					possibleSkinTurnIn,
					possibleSkinTurnOut,
					maxSkinTurnIn,
					maxSkinTurnOut,
					nSkinTurnIn,
					nSkinTurnOut


! =============================================================================
! Wallhole Oversize
! =============================================================================

overSize = 0

if bMirrored then
	overSizeLeft	= overSize * not(gs_stack_right)
	overSizeRight	= overSize * not(gs_stack_left)
else
	overSizeLeft	= overSize * not(gs_stack_left)
	overSizeRight	= overSize * not(gs_stack_right)
endif

overSizeLower = overSize
overSizeUpper	= 0


! =============================================================================
! Wallhole Geometry
! =============================================================================

refWidth	= A
leftWidth	= ac_wallhole_width / 2 + overSizeLeft
rightWidth	= ac_wallhole_width / 2 + overSizeRight

openingHeight	= ac_wallhole_height + overSizeLower + overSizeUpper
offsY			= overSizeLower


! ==============================================================================
! Calculations for Curved Walls
! ==============================================================================

if curvedWall then
	WOD = abs(WIDO_ORIG_DIST) - (SYMB_ROTANGLE > EPS) * WIDO_FRAME_THICKNESS

	leftAlfa	= atn(leftWidth  / WOD)
	rightAlfa	= atn(rightWidth / WOD)
endif


! =============================================================================
! Wallhole Reveal Geometry
! =============================================================================

origRevealType					= iRevealType
origRevealLeft					= gs_reveal_left
origRevealRight					= gs_reveal_right
origRevealTop					= gs_reveal_top
origRevealBottom				= gs_reveal_bottom
origRevealLeftAngle				= gs_reveal_left_angle
origRevealRightAngle			= gs_reveal_right_angle
origRevealTopAngle				= gs_reveal_top_angle
origRevealBottomAngle			= gs_reveal_bottom_angle
origRevealSplayedInnerLeft		= gs_reveal_splayed_innerLeft
origRevealSplayedInnerRight		= gs_reveal_splayed_innerRight
origRevealSplayedInnerTop		= gs_reveal_splayed_innerTop
origRevealSplayedInnerBottom	= gs_reveal_splayed_innerBottom
origRevealOuterJambDepth		= gs_reveal_outer_jamb_depth
origRevealDoubleInnerLeft		= gs_reveal_double_innerLeft
origRevealDoubleInnerRight		= gs_reveal_double_innerRight
origRevealDoubleInnerTop		= gs_reveal_double_innerTop
origRevealDoubleInnerBottom		= gs_reveal_double_innerBottom
origRevealOuterLeftAngle		= 0 ! gs_reveal_outerLeft_angle
origRevealOuterRightAngle		= 0 ! gs_reveal_outerRight_angle
origRevealOuterTopAngle			= 0 ! gs_reveal_outerTop_angle
origRevealOuterBottomAngle		= 0 ! gs_reveal_outerBottom_angle
origRevealInnerWidthLeft		= 0 ! gs_reveal_innerLeft_width
origRevealInnerWidthRight		= 0 ! gs_reveal_innerRight_width
origRevealInnerWidthTop			= 0 ! gs_reveal_innerTop_width
origRevealInnerWidthBottom		= 0 ! gs_reveal_innerBottom_width
origRevealOuterWidthLeft		= 0 ! gs_reveal_outerLeft_width
origRevealOuterWidthRight		= 0 ! gs_reveal_outerRight_width
origRevealOuterWidthTop			= 0 ! gs_reveal_outerTop_width
origRevealOuterWidthBottom		= 0 ! gs_reveal_outerBottom_width

dim revealPointsArray[]
dim iRevealPointsIdx[20]

dim bAddPoint[4]

dim  leftWallholeRevealPnts[][2]
dim rightWallholeRevealPnts[][2]

call "RevealGeometry" parameters A	= A,
	AC_WallType						= AC_WallType,
	AC_WindowInWallContour			= AC_WindowInWallContour,
	AC_WallContourPolygon			= AC_WallContourPolygon,
	gs_macro_version				= 12,
	iWindowShape					= iWindowShape,
	refWidth						= refWidth,
	leftWidth						= leftWidth  + gs_left_oversize,
	rightWidth						= rightWidth + gs_right_oversize,
	cornerPostX						= 0,
	bWndCurved						= gs_IsCurved,
	bParalellInCurvedWalls			= bParalellInCurvedWalls,
	bShowReveal						= bShowReveal,
	bDWSymbolAtMiddle				= bDWSymbolAtMiddle,
	iClosureType					= iClosureType,
	iRevealType						= origRevealType,
	gs_reveal_type_bottom_int		= gs_reveal_type_bottom_int,
	iSillRevealType					= iSillRevealType,
	iBoardRevealType				= iBoardRevealType,
	gs_wido_sill					= gs_wido_sill,
	gs_reveal_uniform				= gs_reveal_uniform,
	gs_reveal_left					= origRevealLeft,
	gs_reveal_right					= origRevealRight,
	gs_reveal_top					= origRevealTop,
	gs_reveal_bottom				= origRevealBottom,
	gs_reveal_splayed_innerLeft		= origRevealSplayedInnerLeft,
	gs_reveal_splayed_innerRight	= origRevealSplayedInnerRight,
	gs_reveal_splayed_innerTop		= origRevealSplayedInnerTop,
	gs_reveal_splayed_innerBottom	= origRevealSplayedInnerBottom,
	gs_reveal_double_innerLeft		= origRevealDoubleInnerLeft,
	gs_reveal_double_innerRight		= origRevealDoubleInnerRight,
	gs_reveal_double_innerTop		= origRevealDoubleInnerTop,
	gs_reveal_double_innerBottom	= origRevealDoubleInnerBottom,
	gs_reveal_outer_jamb_depth		= origRevealOuterJambDepth,
	gs_reveal_left_angle			= origRevealLeftAngle,
	gs_reveal_right_angle			= origRevealRightAngle,
	gs_reveal_top_angle				= origRevealTopAngle,
	gs_reveal_bottom_angle			= origRevealBottomAngle,
	gs_reveal_outerLeft_angle		= origRevealOuterLeftAngle,
	gs_reveal_outerRight_angle		= origRevealOuterRightAngle,
	gs_reveal_outerTop_angle		= origRevealOuterTopAngle,
	gs_reveal_outerBottom_angle		= origRevealOuterBottomAngle,
	gs_reveal_angle_edit_by_int		= 1,
	gs_reveal_innerLeft_width		= origRevealInnerWidthLeft,
	gs_reveal_innerRight_width		= origRevealInnerWidthRight,
	gs_reveal_innerTop_width		= origRevealInnerWidthTop,
	gs_reveal_innerBottom_width		= origRevealInnerWidthBottom,
	gs_reveal_outerLeft_width		= origRevealOuterWidthLeft,
	gs_reveal_outerRight_width		= origRevealOuterWidthRight,
	gs_reveal_outerTop_width		= origRevealOuterWidthTop,
	gs_reveal_outerBottom_width		= origRevealOuterWidthBottom,
	gs_reveal_left_sL				= 0,
	gs_reveal_right_sR				= 0,
	gs_reveal_bottom_sL				= 0,
	gs_reveal_bottom_sR				= 0,
	gs_reveal_double_innerLeft_sL	= 0,
	gs_reveal_double_innerRight_sR	= 0,
	gs_reveal_double_innerBottom_sL	= 0,
	gs_reveal_double_innerBottom_sR	= 0,
	gs_mountingFrame				= gs_mountingFrame,
	gs_mountingFrame_depth			= gs_mountingFrame_depth,
	thkPlasterAtSillLeft			= thkPlasterAtSillLeft,
	thkPlasterAtSillRight			= thkPlasterAtSillRight,
	thkPlasterAtBoardLeft			= thkPlasterAtBoardLeft,
	thkPlasterAtBoardRight			= thkPlasterAtBoardRight,
	bLeftCornerFunction				= bLeftCornerFunction,
	leftCornerAngle					= leftCornerAngle,
	leftConnWallThk					= leftConnWallThk,
	bRightCornerFunction			= bRightCornerFunction,
	rightCornerAngle				= rightCornerAngle,
	rightConnWallThk				= rightConnWallThk,
	bCornerWindow					= 0,
	bGangingLeft					= gs_stack_left,
	bGangingRight					= gs_stack_right,
	gs_unit_nominal					= gs_unit_nominal,
	gs_reveal_nominal				= gs_reveal_nominal,
	gs_tolerance_left				= gs_tolerance_left,
	gs_tolerance_right				= gs_tolerance_right,
	gs_left_oversize				= gs_left_oversize,
	gs_right_oversize				= gs_right_oversize,
returned_parameters	iRevealType,
	iRevealTypeForDisplay,
	iClosureType,
	bShowReveal,
	leftWallholeWidth,
	rightWallholeWidth,
	originalOffsWindowX,
	offsWindowX,
	gs_reveal_left,
	gs_reveal_right,
	revealInnerLeft,
	revealInnerRight,
	gs_reveal_top,
	gs_reveal_bottom,
	gs_reveal_splayed_innerTop,
	gs_reveal_splayed_innerBottom,
	gs_reveal_double_innerLeft,
	gs_reveal_double_innerRight,
	gs_reveal_double_innerTop,
	gs_reveal_double_innerBottom,
	gs_reveal_outer_jamb_depth,
	gs_reveal_left_angle,
	gs_reveal_right_angle,
	gs_reveal_top_angle,
	gs_reveal_bottom_angle,
	gs_reveal_outerLeft_angle,
	gs_reveal_outerRight_angle,
	gs_reveal_outerTop_angle,
	gs_reveal_outerBottom_angle,
	gs_reveal_left_sL,
	gs_reveal_right_sR,
	gs_reveal_bottom_sL,
	gs_reveal_bottom_sR,
	gs_reveal_double_innerLeft_sL,
	gs_reveal_double_innerRight_sR,
	gs_reveal_double_innerBottom_sL,
	gs_reveal_double_innerBottom_sR,
	radSill,
	radBoard,
	WOD,
	iRevealPointsIdx,
	bAddPoint,
	revealPointsArray


for i=1 to iRevealPointsIdx[10]
	idx = 2 * (i - 1) + 1
	leftWallholeRevealPnts[i][1] = revealPointsArray[idx]
	leftWallholeRevealPnts[i][2] = revealPointsArray[idx + 1]
next i

for i=1 to iRevealPointsIdx[20]
	idx = 2 * (iRevealPointsIdx[10] + i - 1) + 1
	rightWallholeRevealPnts[i][1] = revealPointsArray[idx]
	rightWallholeRevealPnts[i][2] = revealPointsArray[idx + 1]
next i


! =============================================================================
! Wall Framing Reveal Geometry
! =============================================================================

dim  leftWallFrameRevealPnts[][2]
dim rightWallFrameRevealPnts[][2]

if abs(gs_left_oversize) > EPS | abs(gs_right_oversize) > EPS then
	if GLOB_SCRIPT_TYPE = 2 | GLOB_SCRIPT_TYPE = 3 | ((GLOB_SCRIPT_TYPE = 4 | GLOB_SCRIPT_TYPE = 5) & gs_sunShade_iType <> 0) then
		call "RevealGeometry" parameters A	= A,
			AC_WallType						= AC_WallType,
			AC_WindowInWallContour			= AC_WindowInWallContour,
			AC_WallContourPolygon			= AC_WallContourPolygon,
			gs_macro_version				= 12,
			iWindowShape					= iWindowShape,
			refWidth						= refWidth,
			leftWidth						= leftWidth,
			rightWidth						= rightWidth,
			cornerPostX						= cornerPostXRight,
			bWndCurved						= gs_IsCurved,
			bParalellInCurvedWalls			= bParalellInCurvedWalls,
			bShowReveal						= bShowReveal,
			bDWSymbolAtMiddle				= bDWSymbolAtMiddle,
			iClosureType					= iClosureType,
			iRevealType						= origRevealType,
			gs_reveal_type_bottom_int		= gs_reveal_type_bottom_int,
			iSillRevealType					= iSillRevealType,
			iBoardRevealType				= iBoardRevealType,
			gs_wido_sill					= gs_wido_sill,
			gs_reveal_uniform				= gs_reveal_uniform,
			gs_reveal_left					= origRevealLeft,
			gs_reveal_right					= origRevealRight,
			gs_reveal_top					= origRevealTop,
			gs_reveal_bottom				= origRevealBottom,
			gs_reveal_splayed_innerLeft		= origRevealSplayedInnerLeft,
			gs_reveal_splayed_innerRight	= origRevealSplayedInnerRight,
			gs_reveal_splayed_innerTop		= origRevealSplayedInnerTop,
			gs_reveal_splayed_innerBottom	= origRevealSplayedInnerBottom,
			gs_reveal_double_innerLeft		= origRevealDoubleInnerLeft,
			gs_reveal_double_innerRight		= origRevealDoubleInnerRight,
			gs_reveal_double_innerTop		= origRevealDoubleInnerTop,
			gs_reveal_double_innerBottom	= origRevealDoubleInnerBottom,
			gs_reveal_outer_jamb_depth		= origRevealOuterJambDepth,
			gs_reveal_left_angle			= origRevealLeftAngle,
			gs_reveal_right_angle			= origRevealRightAngle,
			gs_reveal_top_angle				= origRevealTopAngle,
			gs_reveal_bottom_angle			= origRevealBottomAngle,
			gs_reveal_outerLeft_angle		= origRevealOuterLeftAngle,
			gs_reveal_outerRight_angle		= origRevealOuterRightAngle,
			gs_reveal_outerTop_angle		= origRevealOuterTopAngle,
			gs_reveal_outerBottom_angle		= origRevealOuterBottomAngle,
			gs_reveal_angle_edit_by_int		= 1,
			gs_reveal_innerLeft_width		= origRevealInnerWidthLeft,
			gs_reveal_innerRight_width		= origRevealInnerWidthRight,
			gs_reveal_innerTop_width		= origRevealInnerWidthTop,
			gs_reveal_innerBottom_width		= origRevealInnerWidthBottom,
			gs_reveal_outerLeft_width		= origRevealOuterWidthLeft,
			gs_reveal_outerRight_width		= origRevealOuterWidthRight,
			gs_reveal_outerTop_width		= origRevealOuterWidthTop,
			gs_reveal_outerBottom_width		= origRevealOuterWidthBottom,
			gs_reveal_left_sL				= 0,
			gs_reveal_right_sR				= 0,
			gs_reveal_bottom_sL				= 0,
			gs_reveal_bottom_sR				= 0,
			gs_reveal_double_innerLeft_sL	= 0,
			gs_reveal_double_innerRight_sR	= 0,
			gs_reveal_double_innerBottom_sL	= 0,
			gs_reveal_double_innerBottom_sR	= 0,
			gs_mountingFrame				= gs_mountingFrame,
			gs_mountingFrame_depth			= gs_mountingFrame_depth,
			thkPlasterAtSillLeft			= thkPlasterAtSillLeft,
			thkPlasterAtSillRight			= thkPlasterAtSillRight,
			thkPlasterAtBoardLeft			= thkPlasterAtBoardLeft,
			thkPlasterAtBoardRight			= thkPlasterAtBoardRight,
			bLeftCornerFunction				= bLeftCornerFunction,
			leftCornerAngle					= leftCornerAngle,
			leftConnWallThk					= leftConnWallThk,
			bRightCornerFunction			= bRightCornerFunction,
			rightCornerAngle				= rightCornerAngle,
			rightConnWallThk				= rightConnWallThk,
			bCornerWindow					= bCornerWindow,
			bGangingLeft					= gs_stack_left,
			bGangingRight					= gs_stack_right,
			gs_unit_nominal					= gs_unit_nominal,
			gs_reveal_nominal				= gs_reveal_nominal,
			gs_tolerance_left				= gs_tolerance_left,
			gs_tolerance_right				= gs_tolerance_right,
			gs_left_oversize				= 0,
			gs_right_oversize				= 0,
		returned_parameters	dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			leftWidth,
			rightWidth,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			dummyParam,
			iRevealPointsIdx,
			dummyParam,dummyParam,dummyParam,dummyParam,
			revealPointsArray

		for i=1 to iRevealPointsIdx[10]
			idx = 2 * (i - 1) + 1
			leftWallFrameRevealPnts[i][1] = revealPointsArray[idx]
			leftWallFrameRevealPnts[i][2] = revealPointsArray[idx + 1]
		next i

		for i=1 to iRevealPointsIdx[20]
			idx = 2 * (iRevealPointsIdx[10] + i - 1) + 1
			rightWallFrameRevealPnts[i][1] = revealPointsArray[idx]
			rightWallFrameRevealPnts[i][2] = revealPointsArray[idx + 1]
		next i
	endif
else
	 leftWallFrameRevealPnts =  leftWallholeRevealPnts
	rightWallFrameRevealPnts = rightWallholeRevealPnts

	leftWidth	= leftWallholeWidth
	rightWidth	= rightWallholeWidth
endif


! ==============================================================================
! Reveal Points Indexes
! ==============================================================================

idxFrameStartRevealLeft		= iRevealPointsIdx[3]
idxFrameEndRevealLeft		= iRevealPointsIdx[4]
idxFrameStartRevealRight	= iRevealPointsIdx[13]
idxFrameEndRevealRight		= iRevealPointsIdx[14]


! =============================================================================
! Wall Framing Reveal Geometry
! =============================================================================

dim lineSections[][7]
lineSections[1][1] = 0	! Initialization
lineSections[1][2] = 0
lineSections[1][3] = 0
lineSections[1][4] = 0
lineSections[1][5] = 0
lineSections[1][6] = 0
lineSections[1][7] = 0

if GLOB_SCRIPT_TYPE = 2 then

	bCompositeWall		= (WALL_SKINS_NUMBER > 0)

	bSkinTurnLeft	= 0
	bSkinTurnRight	= 0
	if bCompositeWall then
		if	iClosureType = CLOSURE_TRADITIONAL |\
			iClosureType = CLOSURE_VARIABLE |\
			iClosureType = CLOSURE_DUTCH_VARIABLE |\
			iClosureType = CLOSURE_PREFABRICATED then

			bSkinTurnLeft	= (iCavityClosureSide = CAVITY_SIDE_BOTH | iCavityClosureSide = CAVITY_SIDE_LEFT)
			bSkinTurnRight	= (iCavityClosureSide = CAVITY_SIDE_BOTH | iCavityClosureSide = CAVITY_SIDE_RIGHT)
		endif
		if iClosureType = CLOSURE_CUSTOM then
			bSkinTurnLeft	= 1
			bSkinTurnRight	= 1
		endif

		bPlasterTurnSillLeft	= (thkPlasterAtSillLeft > EPS)
		bPlasterTurnSillRight	= (thkPlasterAtSillRight > EPS)
		bPlasterTurnBoardLeft	= (thkPlasterAtBoardLeft > EPS)
		bPlasterTurnBoardRight	= (thkPlasterAtBoardRight > EPS)
	else
		bPlasterTurnSillLeft	= 0
		bPlasterTurnSillRight	= 0
		bPlasterTurnBoardLeft	= 0
		bPlasterTurnBoardRight	= 0
	endif

	dim tempLineSections[]
	tempLineSections[1] = 0	! Initialization

	call "FramingGeometry" parameters gs_macro_version = 12,
		refWidth				= refWidth,
		leftWidth				= leftWidth  + gs_left_oversize,
		rightWidth				= rightWidth + gs_right_oversize,
		bWndCurved				= gs_IsCurved,
		bParalellInCurvedWalls	= bParalellInCurvedWalls,
		radSill					= radSill,
		radBoard				= radBoard,
		WOD						= WOD,
		bSkinTurnLeft			= bSkinTurnLeft,
		bSkinTurnRight			= bSkinTurnRight,
		bPlasterTurnSillLeft	= bPlasterTurnSillLeft,
		bPlasterTurnSillRight	= bPlasterTurnSillRight,
		bPlasterTurnBoardLeft	= bPlasterTurnBoardLeft,
		bPlasterTurnBoardRight	= bPlasterTurnBoardRight,
		bLeftCornerFunction		= bLeftCornerFunction,
		bRightCornerFunction	= bRightCornerFunction,
		iRevealType				= iRevealTypeForDisplay,
		gs_reveal_left			= gs_reveal_left,
		gs_reveal_right			= gs_reveal_right,
		gs_reveal_left_angle	= gs_reveal_left_angle,
		gs_reveal_right_angle	= gs_reveal_right_angle,
		leftRevealPnts			= leftWallholeRevealPnts,
		rightRevealPnts			= rightWallholeRevealPnts,
		iRevealPointsIdx		= iRevealPointsIdx,
		bGangingLeft			= gs_stack_left,
		bGangingRight			= gs_stack_right,
		gs_left_oversize		= gs_left_oversize,
		gs_right_oversize		= gs_right_oversize,
		gs_sill_outside			= gs_sill_outside,
!		iSillType				= iSillType,
!		gs_sill_nosing			= gs_sill_nosing,
!		gs_sill_ovhg_left		= gs_sill_ovhg_left,
!		gs_sill_ovhg_right		= gs_sill_ovhg_right,
!		gs_board_inside			= gs_board_inside,
!		gs_board_ovhg_left		= gs_board_ovhg_left,
!		gs_board_ovhg_right		= gs_board_ovhg_right,
		bDrawOutsideTrim		= bDrawOutsideTrim,
		bDrawInsideTrim			= bDrawInsideTrim,
!		gs_trim_outside_uniform	= gs_trim_outside_uniform,
!		gs_trim_inside_uniform	= gs_trim_inside_uniform,
!		gs_trim_width_in		= gs_trim_width_in,
!		gs_trim_width_out		= gs_trim_width_out,
!		gs_trim_offs_in			= gs_trim_offs_in,
!		gs_trim_offs_out		= gs_trim_offs_out,
!		gs_trim_thk_in			= gs_trim_thk_in,
!		gs_trim_thk_out			= gs_trim_thk_out,
!		gs_tw_left_in			= gs_tw_left_in,
!		gs_tw_right_in			= gs_tw_right_in,
!		gs_tw_left_out			= gs_tw_left_out,
!		gs_tw_right_out			= gs_tw_right_out,
!		gs_trim_atframe_out		= gs_trim_atframe_out,
!		gs_trim_atframe_in		= gs_trim_atframe_in,
	returned_parameters	tempLineSections

	numLineSections = round_int(vardim1(tempLineSections) / 7)
	idx = 0
	for i=1 to numLineSections
		for j=1 to 7
			lineSections[i][j] = tempLineSections[idx + j]
		next j
		idx = idx + 7
	next i
endif

! =============================================================================
! Frame Overhang Calculations
! =============================================================================

if GLOB_SCRIPT_TYPE = 2 | GLOB_SCRIPT_TYPE = 3 then
	fx1L = -leftWidth
	fx2L = -leftWidth

	fx1R =  rightWidth
	fx1R =  rightWidth

	fx1L = leftWallFrameRevealPnts[idxFrameStartRevealLeft][1]
	fx2L = leftWallFrameRevealPnts[idxFrameEndRevealLeft][1]

	fx1R = rightWallFrameRevealPnts[idxFrameStartRevealRight][1]
	fx2R = rightWallFrameRevealPnts[idxFrameEndRevealRight][1]

	! Curved
	if GLOB_CONTEXT = 2 | GLOB_CONTEXT = 22 | GLOB_CONTEXT = 4 | GLOB_CONTEXT = 24 | GLOB_CONTEXT = 6 then
		if curvedWall then
			signRotAngle = (abs(SYMB_ROTANGLE - 180) < EPS) - not(SYMB_ROTANGLE > EPS)
			SymbMid_LeftDx	= signRotAngle * SymbolMid_shiftDy * tan(leftAlfa)
			SymbMid_RightDx	= signRotAngle * SymbolMid_shiftDy * tan(rightAlfa)
		endif
	endif

	if bDWSymbolAtMiddle2 then
		if NOT(bLeftCornerFunction) then
			if idxFrameStartRevealLeft = 2 then
				if WIDO_SILL + WIDO_FRAME_THICKNESS < WALL_THICKNESS / 2 then
					if WIDO_SILL < EPS then
						fx1L = leftWallFrameRevealPnts[idxFrameStartRevealLeft + 2][1] + TAN(gs_reveal_left_angle) * (WALL_THICKNESS / 2 - WIDO_SILL)
					else
						fx1L = leftWallFrameRevealPnts[idxFrameStartRevealLeft + 2][1] - TAN(gs_reveal_left_angle) * (WALL_THICKNESS / 2 - WIDO_SILL - WIDO_FRAME_THICKNESS)
					endif
				endif
			else
				if WIDO_SILL + WIDO_FRAME_THICKNESS < WALL_THICKNESS / 2 then
					if ABS(leftWallFrameRevealPnts[idxFrameStartRevealLeft + 1][2] - leftWallFrameRevealPnts[idxFrameStartRevealLeft + 2][2]) < EPS then
						fx1L = leftWallFrameRevealPnts[idxFrameStartRevealLeft + 2][1] - TAN(gs_reveal_left_angle) * (WALL_THICKNESS / 2 - WIDO_SILL - WIDO_FRAME_THICKNESS)
					else
						fx1L = leftWallFrameRevealPnts[idxFrameStartRevealLeft][1] - TAN(gs_reveal_left_angle) * (WALL_THICKNESS / 2 - WIDO_SILL)			
					endif
				else
					if WIDO_SILL > WALL_THICKNESS / 2 then
						fx1L = leftWallFrameRevealPnts[idxFrameStartRevealLeft - 1][1]
					else
						if ABS(leftWallFrameRevealPnts[idxFrameStartRevealLeft + 1][2] - leftWallFrameRevealPnts[idxFrameStartRevealLeft + 2][2]) > EPS then
							fx1L = leftWallFrameRevealPnts[idxFrameStartRevealLeft][1] - TAN(gs_reveal_left_angle) * (WALL_THICKNESS / 2 - WIDO_SILL)
						endif
					endif
				endif
			endif
		endif

		if NOT(bRightCornerFunction) then
			if idxFrameStartRevealRight = 2 then
				if WIDO_SILL + WIDO_FRAME_THICKNESS < WALL_THICKNESS / 2 then
					if WIDO_SILL < EPS then
						fx1R = rightWallFrameRevealPnts[idxFrameStartRevealRight + 2][1] - TAN(gs_reveal_right_angle) * (WALL_THICKNESS / 2 - WIDO_SILL)
					else
						fx1R = rightWallFrameRevealPnts[idxFrameStartRevealRight + 2][1] + TAN(gs_reveal_right_angle) * (WALL_THICKNESS / 2 - WIDO_SILL - WIDO_FRAME_THICKNESS)
					endif
				endif
			else
				if WIDO_SILL + WIDO_FRAME_THICKNESS < WALL_THICKNESS / 2 then
					if ABS(rightWallFrameRevealPnts[idxFrameStartRevealRight + 1][2] - rightWallFrameRevealPnts[idxFrameStartRevealRight + 2][2]) < EPS then
						fx1R = rightWallFrameRevealPnts[idxFrameStartRevealRight + 2][1] + TAN(gs_reveal_right_angle) * (WALL_THICKNESS / 2 - WIDO_SILL - WIDO_FRAME_THICKNESS)
					else
						fx1R = rightWallFrameRevealPnts[idxFrameStartRevealRight][1] + TAN(gs_reveal_right_angle) * (WALL_THICKNESS / 2 - WIDO_SILL)			
					endif
				else
					if WIDO_SILL > WALL_THICKNESS / 2 then
						fx1R = rightWallFrameRevealPnts[idxFrameStartRevealRight - 1][1]
					else
						if ABS(rightWallFrameRevealPnts[idxFrameStartRevealRight + 1][2] - rightWallFrameRevealPnts[idxFrameStartRevealRight + 2][2]) > EPS then
							fx1R = rightWallFrameRevealPnts[idxFrameStartRevealRight][1] + TAN(gs_reveal_right_angle) * (WALL_THICKNESS / 2 - WIDO_SILL)
						endif
					endif
				endif
			endif
		endif
	endif

	! Curved
	if GLOB_CONTEXT = 2 | GLOB_CONTEXT = 22 | GLOB_CONTEXT = 4 | GLOB_CONTEXT = 24 | GLOB_CONTEXT = 6 then
		if curvedWall then
			signRotAngle = (abs(SYMB_ROTANGLE - 180) < EPS) - not(SYMB_ROTANGLE > EPS)
			SymbMid_LeftDx	= signRotAngle * SymbolMid_shiftDy * tan(leftAlfa)
			SymbMid_RightDx	= signRotAngle * SymbolMid_shiftDy * tan(rightAlfa)
		endif
	endif

	bCornerWindow = 0
	leftFrameOverhang	= (not(bLeftCornerFunction) & bShowReveal) * (overSizeLeft + gs_left_oversize) + bShowReveal * gs_tolerance_left - SymbMid_LeftDx * NOT(bDWSymbolAtMiddle2)
	rightFrameOverhang	= (not(bRightCornerFunction) & bShowReveal) * (overSizeRight + gs_right_oversize) + (not(bCornerWindow) & bShowReveal) * gs_tolerance_right - SymbMid_RightDx * NOT(bDWSymbolAtMiddle2)

	if WIDO_REVEAL_SIDE then
		gs_frame_ovhg_left_in	= -fx1L - leftWallholeWidth + leftFrameOverhang + not(bShowReveal) * gs_left_oversize
		gs_frame_ovhg_left_out	= -fx2L - leftWallholeWidth + leftFrameOverhang + not(bShowReveal) * gs_left_oversize

		gs_frame_ovhg_right_in	= fx1R - rightWallholeWidth + rightFrameOverhang + not(bShowReveal) * gs_right_oversize
		gs_frame_ovhg_right_out	= fx2R - rightWallholeWidth + rightFrameOverhang + not(bShowReveal) * gs_right_oversize
	else
		gs_frame_ovhg_left_out	= -fx1L - leftWallholeWidth + leftFrameOverhang + not(bShowReveal) * gs_left_oversize
		gs_frame_ovhg_left_in	= -fx2L - leftWallholeWidth + leftFrameOverhang + not(bShowReveal) * gs_left_oversize

		gs_frame_ovhg_right_out	= fx1R - rightWallholeWidth + rightFrameOverhang + not(bShowReveal) * gs_right_oversize
		gs_frame_ovhg_right_in	= fx2R - rightWallholeWidth + rightFrameOverhang + not(bShowReveal) * gs_right_oversize
	endif
endif

]]>
</Script_1D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_PR SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_PR>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_UI SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[


! =============================================================================
! Localization
! =============================================================================
stSetAsNominal			= `Назначить как Номинал`
stWidth					= `Ширина`
stHeight				= `Высота`

stRetainNominalSizes	= `Применить Номинальные Размеры для Выбранного`
stRetainNominalSizesTooltip = `Отметьте этот маркер при сбросе Номинальных Размеров, чтобы использовать текущие Номинальные значения в качестве Новых Номинальных Размеров.`

if bLanguageUSA then
	stUnitDimensions		= `1. Размер Блока`
	stWallholeDimensions	= `2. Грубое Открывание`
else
	stWallholeDimensions	= `1. Размеры Проема`
	stRevealDimensions		= `2. Размеры Четверти`
	stUnitDimensions		= `3. Размеры Элемента`
endif

stOversize				= `Допуски`
stOversizeLeft			= `Слева`
stOversizeRight			= `Справа`
stOversizeUpper			= `Вверху`
stOversizeLower			= `Внизу`
stRevealDepth			= `Глубина Четверти`

stToleranceLeft			= `Допуск Слева`
stToleranceRight		= `Допуск Справа`
stToleranceUpper		= `Допуск Вверху`
stToleranceLower		= `Допуск Внизу`

st2DDetailLevel			= `2D-детализация`
st3DDetailLevel			= `3D-детализация`

stShowRevealOnSymbol	= `Показ Четвертей в Символе`
stUseFills				= `Использовать Штриховку`

stWallContourLines		= `Линии Контура Стены`
stLineTypeInside		= `Тип Линии Внутри`
stLineTypeOutside		= `Тип Линии Снаружи`
stLinePen				= `Перо Линии`

dim stWallholeCutUI[32]
	stWallholeCutUI[ 1] = `Специальная Четверть`
	stWallholeCutUI[ 2] = `Размеры Специальной Четверти`
	stWallholeCutUI[ 3] = `Подоконная Ниша`
	stWallholeCutUI[ 4] = `Длина`
	stWallholeCutUI[ 5] = `Специальная Четверть`
	stWallholeCutUI[ 6] = `Тип Четверти`
	stWallholeCutUI[ 7] = `Показать Нишу в 2D`
	stWallholeCutUI[ 8] = `Автоматические Размеры Ниши`
	stWallholeCutUI[ 9] = `Тип Линии Невидимого Контура Ниши`
	stWallholeCutUI[10] = `Привязка Низа Ниши:`
	stWallholeCutUI[11] = `Ширина Подоконной Ниши`
	stWallholeCutUI[12] = `Высота Подоконной Ниши`
	stWallholeCutUI[13] = `Отметка Низа`
	stWallholeCutUI[14] = `Размеры Ниши:`
	stWallholeCutUI[15] = `Выступ Сбоку 2`
	stWallholeCutUI[16] = `Выступ Сбоку 1`
	stWallholeCutUI[17] = `Четверть с 2 Откосами - Геометрия Четверти`
	stWallholeCutUI[18] = `Четверть с 2 Откосами - Реквизиты Установки Коробки`
	stWallholeCutUI[19] = `Четверть с Откосом Снаружи - Геометрия Четверти`
	stWallholeCutUI[20] = `Четверть с Откосом Снаружи - Реквизиты Установки Коробки`
	stWallholeCutUI[21] = `Монтажная Коробка`
	stWallholeCutUI[22] = `Изменение Четверти`
	stWallholeCutUI[23] = `Покрытие`
	stWallholeCutUI[24] = `Перо Линии Сечения`
	stWallholeCutUI[25] = `Перо Линии Видимого Контура`
	stWallholeCutUI[26] = `Тип Штриховки Сечения`
	stWallholeCutUI[27] = `Перо Штриховки`
	stWallholeCutUI[28] = `Перо Фона Штриховки`
	stWallholeCutUI[29] = `Угол и Глубина`
	stWallholeCutUI[30] = `Ширина и Глубина`
	stWallholeCutUI[31] = `Ширина Четверти`
	stWallholeCutUI[32] = `Нижняя Четверть`

dim stCavityClosureUI[60]
	stCavityClosureUI[ 1] = `Замыкание Слоев`
	stCavityClosureUI[ 2] = `Способ Замыкания`
	stCavityClosureUI[ 3] = `Сторона Проема`
	stCavityClosureUI[ 4] = `Наружных Слоев`
	stCavityClosureUI[ 5] = `Поворачивающих Слоев`
	stCavityClosureUI[ 6] = `Начало Нумерации`
	stCavityClosureUI[ 7] = `Поворот на Четверти`
	stCavityClosureUI[ 8] = `Термовкладыш`
	stCavityClosureUI[ 9] = `Толщина Вкладыша`
	stCavityClosureUI[10] = `Перо Контура`
	stCavityClosureUI[11] = `Тип Линии Контура`
	stCavityClosureUI[12] = `Тип Штриховки`
	stCavityClosureUI[13] = `Перо Штриховки`
	stCavityClosureUI[14] = `Перо Фона Штриховки`
	stCavityClosureUI[15] = `Профиль`
	stCavityClosureUI[16] = `Ширина Профиля`
	stCavityClosureUI[17] = `Поворот Штукатурки`
	stCavityClosureUI[18] = `Наружная Поверхность`
	stCavityClosureUI[19] = `Внутренняя Поверхность`
	stCavityClosureUI[20] = `Автоматически`
	stCavityClosureUI[21] = `Поворачивающих Слоев`
	stCavityClosureUI[22] = `Предел Толщины`
	stCavityClosureUI[23] = `Использовать Отделку Стены`
	stCavityClosureUI[24] = `Выбор Редактируемого Слоя`
	stCavityClosureUI[25] = `Поворот Слоя Внутрь`
	stCavityClosureUI[26] = `2. Толщина Поворота`
	stCavityClosureUI[27] = `Специальная Толщина`
	stCavityClosureUI[28] = `Ориентация Штриховки`
	stCavityClosureUI[29] = `Разделитель при Повороте Внутрь`
	stCavityClosureUI[30] = `Перо Разделительной Линии`
	stCavityClosureUI[31] = `3. Продление Слоя за Коробку`
	stCavityClosureUI[32] = `Считать Слой Штукатуркой, если он Тоньше или Равен`
	stCavityClosureUI[33] = `Настройка Слоя Штукатурки`
	stCavityClosureUI[34] = `Показ в 3D`
	stCavityClosureUI[35] = `Прим: Ширина Четверти определяет толщину повернутого слоя Штукатурки.`
	stCavityClosureUI[36] = `Реквизиты Термовкладыша`
	stCavityClosureUI[37] = `Реквизиты`
	stCavityClosureUI[38] = `Параметры четверти были изменены.`
	stCavityClosureUI[39] = ``
	stCavityClosureUI[40] = `1. Считать Слой Штукатуркой`
	stCavityClosureUI[41] = `Размеры Ширины Четверти определяют толщину повернутого слоя Штукатурки.`
	stCavityClosureUI[42] = `Несущий слой не может быть повернут.`
	stCavityClosureUI[43] = ``
	stCavityClosureUI[44] = ``
	stCavityClosureUI[45] = `Вкладыш для`
	stCavityClosureUI[46] = `от`
	stCavityClosureUI[47] = `Сторона Проема`
	stCavityClosureUI[48] = `Сторона Проема`
	stCavityClosureUI[49] = `Продлить Слой до Термовкладыша`
	stCavityClosureUI[50] = `1. Слой`
	stCavityClosureUI[51] = `2. Слой`
	stCavityClosureUI[52] = `3. Слой`
	stCavityClosureUI[53] = `4. Слой`
	stCavityClosureUI[54] = `Специальное Покрытие`
	stCavityClosureUI[55] = `Покрытие`
	stCavityClosureUI[56] = `Расстояние от Термовкладыша до Слоя`
	stCavityClosureUI[57] = `Ширина Термовкладыша`
	stCavityClosureUI[58] = `Толщина Термовкладыша`
	stCavityClosureUI[59] = `Зазор Наружного Слоя`
	stCavityClosureUI[60] = `Размеры в 2D`

dim stWallholeStructureUI[4]
	stWallholeStructureUI[1] = `Настройка Слоя Штукатурки`
	stWallholeStructureUI[2] = `К параметрам Штукатурки...`
	stWallholeStructureUI[3] = `Настройка Замыкания Слоев`
	stWallholeStructureUI[4] = `Назад к Замыканию Слоев...`

dim stRevealClusureUITips[31]
	stRevealClusureUITips[ 1] = `Глубина Четверти`
	stRevealClusureUITips[ 2] = `Ширина Четверти со Стороны 2`
	if gs_reveal_uniform then
		stRevealClusureUITips[ 3] = `Ширина Четверти`
		stRevealClusureUITips[ 5] = `Ширина Внутренней Четверти`
		stRevealClusureUITips[11] = `Угол`
		stRevealClusureUITips[15] = `Наружный Угол`
	else
		stRevealClusureUITips[ 3] = `Ширина Четверти со Стороны 1`
		stRevealClusureUITips[ 5] = `Ширина Внутренней Четверти со Стороны 1`
		stRevealClusureUITips[11] = `Угол Откоса со Стороны 1`
		stRevealClusureUITips[15] = `Угол Наружного Откоса со Стороны 1`
	endif
	stRevealClusureUITips[ 4] = `Ширина Внутренней Четверти со Стороны 2`
	stRevealClusureUITips[ 6] = `Высота Верхней Четверти`
	stRevealClusureUITips[ 7] = `Высота Отлива`
	stRevealClusureUITips[ 8] = `Высота Верхней Внутренней Четверти`
	stRevealClusureUITips[ 9] = `Высота Отлива Внутри`
	stRevealClusureUITips[10] = `Угол Откоса со Стороны 2`
	stRevealClusureUITips[12] = `Угол Верхней Стороны`
	stRevealClusureUITips[13] = `Угол Нижней Стороны`
	stRevealClusureUITips[14] = `Угол Наружного Откоса со Стороны 2`
	stRevealClusureUITips[16] = `Наружный Угол Верхнего Откоса`
	stRevealClusureUITips[17] = `Наружный Угол Нижнего Откоса`
	stRevealClusureUITips[18] = `Ширина Наружной Четверти`
	stRevealClusureUITips[19] = `Ширина Монтажной Коробки со Стороны 2`
	stRevealClusureUITips[20] = `Ширина Монтажной Коробки со Стороны 1`
	stRevealClusureUITips[21] = `Ширина Монтажной Коробки Вверху`
	stRevealClusureUITips[22] = `Ширина Монтажной Коробки Внизу`
	stRevealClusureUITips[23] = `Толщина Монтажной Коробки`
	stRevealClusureUITips[24] = `Ширина Скоса со Стороны 2`
	stRevealClusureUITips[25] = `Ширина Скоса со Стороны 1`
	stRevealClusureUITips[26] = `Ширина Скоса Вверху`
	stRevealClusureUITips[27] = `Ширина Скоса Внизу`
	stRevealClusureUITips[28] = `Ширина Скоса Снаружи со Стороны 2`
	stRevealClusureUITips[29] = `Ширина Скоса Снаружи со Стороны 1`
	stRevealClusureUITips[30] = `Ширина Скоса Снаружи Вверху`
	stRevealClusureUITips[31] = `Ширина Скоса Снаружи Внизу`

dim stMasonryArchUI[28]
	stMasonryArchUI[ 1] = `Декоративная Перемычка`
	stMasonryArchUI[ 2] = `Подъем`
	stMasonryArchUI[ 3] = `Угол Пяты`
	stMasonryArchUI[ 4] = `Тип`
	stMasonryArchUI[ 5] = `Толщина Кирпича`
	stMasonryArchUI[ 6] = `Толщина Раствора`
	stMasonryArchUI[ 7] = `Замковый Камень`
	stMasonryArchUI[ 8] = `Ширина`
	stMasonryArchUI[ 9] = `Допуски`
	stMasonryArchUI[10] = `Проекция`
	stMasonryArchUI[11] = `Без Пространства над Проемом`
	stMasonryArchUI[12] = `Ниша над Проемом`
	stMasonryArchUI[13] = `Покрытия`
	stMasonryArchUI[14] = `Кирпич`
	stMasonryArchUI[15] = `Раствор`
	stMasonryArchUI[16] = `Замковый Камень`
	stMasonryArchUI[17] = `Штриховка Сечения`
	stMasonryArchUI[18] = `Тип Штриховки`
	stMasonryArchUI[19] = `Перо Штриховки`
	stMasonryArchUI[20] = `Перо Фона`
	stMasonryArchUI[21] = `Высота Декоративной Перемычки`
	stMasonryArchUI[22] = `Глубина Декоративной Перемычки`
	stMasonryArchUI[23] = `Зазор за Отливом`
	stMasonryArchUI[24] = `Проекция Декоративной Перемычки`
	stMasonryArchUI[25] = `Выступ Декоративной Перемычки Слева`
	stMasonryArchUI[26] = `Выступ Декоративной Перемычки Справа`
	stMasonryArchUI[27] = `Расстояние Между Перемычкой и Окном`
	stMasonryArchUI[28] = `Перо в 3D`

dim stRevealUI[6]
	stRevealUI[1]		= `Тип Четверти`
	stRevealUI[2]		= `Ранее выбранный тип замыкания стены недопустим для этой четверти.`
	stRevealUI[3]		= `Замыкание стены было изменено.`
	stRevealUI[4]		= `Одинаковая Ширина Четвертей`
	stRevealUI[5]		= `Четверть Снаружи`
	stRevealUI[6]		= `Четверть Внутри`

dim st_uiWallOpening[23]
	st_uiWallOpening[1] = `Четверть`
	st_uiWallOpening[2] = `Замыкание Слоев`
	st_uiWallOpening[3] = `Декоративная Перемычка`
	st_uiWallOpening[4] = `Зазоры Проема`
	st_uiWallOpening[5] = `Слева`
	st_uiWallOpening[6] = `Справа`
	st_uiWallOpening[7] = `Вверху`
	st_uiWallOpening[8] = `Внизу`
	st_uiWallOpening[9] = `Примечание: Зазоры не меняют номинальные размеры проема.`
	st_uiWallOpening[10] = `Покрытие Проема в Стене`
	st_uiWallOpening[11] = `Как Торцы Стены`
	st_uiWallOpening[12] = `Как Поверхности Стены`
	st_uiWallOpening[13] = `Подоконная Ниша`
	st_uiWallOpening[14] = `Количество Сторон`
	st_uiWallOpening[15] = `Высота Арочного Проема`
	st_uiWallOpening[16] = `Малый Радиус`
	st_uiWallOpening[17] = `Высота Низа Перемычки`
	st_uiWallOpening[18] = `Откосы в Криволинейных Стенах`
	st_uiWallOpening[19] = `Параллельно`
	st_uiWallOpening[20] = `Радиально`
	st_uiWallOpening[21] = `Толщина Коробки`
	st_uiWallOpening[22] = `Аппроксимация`
	st_uiWallOpening[23] = `Высота Пяты`

stClosureChangedTip		= stRevealUI[2] + " " + stRevealUI[3]

stWallClosure			= `Замыкание Слоев`
stClosureType			= `Способ Замыкания`

stVentFrameProfileHeight	= `Высота Вентиляционного Клапана`


! =============================================================================
! Tabpage Structure Definition
! =============================================================================

! call all available page fix IDs
call "ui_tabIDlistHierarchy_m" parameters iUITreeStandardType = 2,			! STOREFRONT_UI
					returned_parameters iUiID_Root,
										iUiID_NominalSizes,		iParID_NominalSizes,
										iUiID_ShapePanelDiv,	iParID_ShapePanelDiv,
										iUiID_GlassMullions,	iParID_GlassMullions,
										iUiID_SFFrameStyle,		iParID_SFFrameStyle,
										iUiID_VentProfile,		iParID_VentProfile,
										iUiID_Doorleaf,			iParID_Doorleaf,
										iUiID_Handle1,			iParID_Handle1,
										iUiID_Handle2,			iParID_Handle2,
										iUiID_OpeningLines,		iParID_OpeningLines,
										iUiID_DoorModelAttrib,	iParID_DoorModelAttrib,
										iUiID_WallOpening,		iParID_WallOpening,
										iUiID_Reveal,			iParID_Reveal,
										iUiID_Closure,			iParID_Closure,
										iUiID_FloorPlanSection,	iParID_FloorPlanSection,
										iUiID_MinSpace,			iParID_MinSpace,
										iUiID_Descriptions,		iParID_Descriptions


! =============================================================================
! Display actual tabpages
! =============================================================================

ui_current_page gs_ui_current_page

for iTabs = 1 to vardim1(uiUsedPageIDs)
	! --------------------------------------------------------------------------------
	! Independent pages
	! --------------------------------------------------------------------------------
	if uiUsedPageIDs[iTabs][1] = iUiID_NominalSizes then
		ui_page	uiUsedPageIDs[iTabs][1], uiUsedPageIDs[iTabs][2], `Номинальные Размеры и Допуски`, "uiTab_WindowSizes_flat(1)"
		if gs_ui_current_page = iUiID_NominalSizes then
			gosub "pageNominalSizes"
		endif
	endif
	if uiUsedPageIDs[iTabs][1]= iUiID_FloorPlanSection then
		! for Show Reveal on Symbol
		ui_page	uiUsedPageIDs[iTabs][1], uiUsedPageIDs[iTabs][2], uiUsedPageNames[iTabs][1], uiUsedPageNames[iTabs][2]
		if gs_ui_current_page = iUiID_FloorPlanSection then
			gosub "pageCallFloorPlanAndSect"
		endif
	endif

	! --------------------------------------------------------------------------------
	! Wall Opening group
	! --------------------------------------------------------------------------------
	if uiUsedPageIDs[iTabs][1] = iUiID_WallOpening then
		ui_page	uiUsedPageIDs[iTabs][1], uiUsedPageIDs[iTabs][2], `Проем в Стене`, "uiTab_WindowWallOpening_flat(1)"
		if gs_ui_current_page = iUiID_WallOpening then
			gosub "pageCallWallOpening"
		endif
	endif
	if uiUsedPageIDs[iTabs][1] = iUiID_Reveal then
		uiUsedPageNames[iTabs][1]	= `Четверть`
		uiUsedPageNames[iTabs][2]	= "uiTab_OpeningReveal_flat(1)"
	endif
	if uiUsedPageIDs[iTabs][1] = iUiID_Closure then
		uiUsedPageNames[iTabs][1]	= `Замыкание Слоев`
		uiUsedPageNames[iTabs][2]	= "uiTab_OpeningClosure_flat(1)"
	endif

	! --------------------------------------------------------------------------------
	! Additional independent pages
	! --------------------------------------------------------------------------------
	if uiUsedPageIDs[iTabs][1]= iUiID_Descriptions then
		ui_page	uiUsedPageIDs[iTabs][1], uiUsedPageIDs[iTabs][2], `Характеристики`, "uiTab_Descriptions_flat(1)"
		if gs_ui_current_page = iUiID_Descriptions then
			gosub "pageCallListing"
		endif
	endif
next iTabs

gosub "pageCallWallholeStructure"

! --------------------------------------------------------------------------------
! Image links for archive
! --------------------------------------------------------------------------------
file_dependence "uiTab_WindowSizes_flat(1)"
file_dependence "uiTab_WindowWallOpening_flat(1)"
file_dependence "uiTab_OpeningReveal_flat(1)"
file_dependence "uiTab_OpeningClosure_flat(1)"
file_dependence "uiTab_Descriptions_flat(1)"


! =============================================================================
end
! =============================================================================


! --------------------------------------------------------------------------------
! Built-In Nominal Sizes and Tolerance Tabpage
! --------------------------------------------------------------------------------
"pageNominalSizes":
	pageStartY = 3

	sepx = 310
	sepy = 115 + pageStartY

	x1 = 5
	x2 = x1
	x3 = 20
	x4 = 175
	x5 = 243

	y = pageStartY
	cx = 60
	dy = 22

	ui_style 0,1
	ui_separator x2+7,y+9, x3-4,y+9
	ui_separator x2+7,y+9, x2+7,y+19
	ui_outfield stSetAsNominal,	x3,y, x4-x3-1,18	! Set As Nominal

	ui_outfield stWidth,		x4,y, x5-x4-1,18	! Width
	ui_outfield stHeight,		x5,y, 310-x5-1,18	! Height
	y = y + dy

	if bLanguageUSA then
		if gs_unit_nominal then
			ui_style 0,1
		else
			ui_style 0, 0
		endif
		ui_radiobutton "gs_unit_nominal", 1, stUnitDimensions, 	x2, y, x4-x1-1, 18
		ui_infield "gs_unit_size",			x4,y, cx+65,20

		y = y + dy
		ui_infield "ac_unit_width",		x4,y, cx,20
		ui_infield "ac_unit_height",	x5,y, cx,20
		y = y + dy
		if gs_wallhole_nominal then
			ui_style 0,1
		else
			ui_style 0, 0
		endif

		if gs_unit_size = `Специальный Размер` then
			ui_radiobutton "gs_wallhole_nominal", 1, stWallholeDimensions, 	x2, y, x4-x1-1, 18
		else
			ui_style 0, 0
			ui_outfield stWallholeDimensions,		x3,y+3, x4-x3-1,18	! Wallhole Dimensions
		endif
		ui_infield "ac_wallhole_width",		x4,y, cx,20
		ui_infield "ac_wallhole_height",	x5,y, cx,20
		y = y + 1.5*dy

	else
		if gs_wallhole_nominal then
			ui_style 0,1
		else
			ui_style 0, 0
		endif
		ui_radiobutton "gs_wallhole_nominal", 1, stWallholeDimensions, 	x2, y, x4-x1-1, 18
		ui_infield "ac_wallhole_width",		x4,y, cx,20
		ui_infield "ac_wallhole_height",	x5,y, cx,20
		y = y + dy

		if gs_reveal_nominal then
			ui_style 0,1
		else
			ui_style 0, 0
		endif
		ui_radiobutton "gs_reveal_nominal", 1, stRevealDimensions, 	x2, y, x4-x1-1, 18
		ui_infield "ac_reveal_width",		x4,y, cx,20
		ui_infield "ac_reveal_height",		x5,y, cx,20
		y = y + dy

		if gs_unit_nominal then
			ui_style 0,1
		else
			ui_style 0, 0
		endif
		ui_radiobutton "gs_unit_nominal", 1, stUnitDimensions, 	x2, y, x4-x1-1, 18
		ui_infield "ac_unit_width",			x4,y, cx,20
		ui_infield "ac_unit_height",		x5,y, cx,20
		y = y + dy
	endif

	ui_style 0, 0
	ui_infield{3} "gs_retain_nominal_sizes", x2, y, sepx-x1-1, 18,
			7, "",
			2,
			1, 20, 20, 20, 20,
			0, stRetainNominalSizes, 0,		! Transfer Current Nominal Size to Selection
			1, stRetainNominalSizes, 1 ui_tooltip stRetainNominalSizesTooltip	! Transfer Current Nominal Size to Selection

	ui_separator sepx, 2 + pageStartY, sepx, 265
	ui_separator 0,sepy, sepx-4,sepy

	cx = 52

	x = 5
	y = 155 + pageStartY
	if bLanguageUSA then
		ui_pict 28, x,y, 292,82, 1		! ui_sf_window_widthUSA.png
	else
		ui_pict 19, x,y, 292,82, 1		! ui_sf_window_width.png
	endif

	ui_infield "gs_tolerance_left",		x,y-25,			cx,20 ui_tooltip stToleranceLeft
	ui_infield "gs_tolerance_right",	x+287-cx,y-25,	cx,20 ui_tooltip stToleranceRight

	x = 313
	y = 10 + pageStartY
	if bLanguageUSA then
		if isVentilationOverFrame then
			ui_pict 32, x,y, 88,204, 1		! ui_sf_window_height_ventUSA.png
			ui_infield "VentilationProfileHeight",	x+88,y+38,	cx-10,20 ui_tooltip stVentFrameProfileHeight
			posY = y+14
		else
			ui_pict 29, x,y, 88,204, 1		! ui_sf_window_heightUSA.png
			posY = y+28
		endif
	else
		if isVentilationOverFrame then
			ui_pict 31, x,y, 88,204, 1		! ui_sf_window_height_vent.png
			ui_infield "VentilationProfileHeight",	x+88,y+30,	cx-10,20 ui_tooltip stVentFrameProfileHeight
			posY = y+6
		else
			ui_pict 20, x,y, 88,204, 1		! ui_sf_window_height.png
			posY = y+28
		endif
	endif
	ui_infield "gs_tolerance_upper",	x+88,posY,	cx-10,20 ui_tooltip stToleranceUpper
	ui_infield "gs_tolerance_lower",	x+88,y+157,	cx-10,20 ui_tooltip stToleranceLower
return




! --------------------------------------------------------------------------------
! Descriptions
! --------------------------------------------------------------------------------
"pageCallListing":
	call "ui_Description_m" parameters 	A = A,
										iDWObjectType 			= 5,		! STOREFRONT_OBJECT 
										gs_show_UKListParams	= 0,
										listFieldID 			= iUiID_Descriptions,
										gs_bOpeningToZone		= gs_bOpeningToZone,
										gs_list_cost			= gs_list_cost,
										gs_list_manufacturer	= gs_list_manufacturer,
										gs_list_note			= gs_list_note,
										gs_list_location		= gs_list_location,
										gs_list_accessories		= gs_list_accessories,
										gs_list_glazing			= gs_list_glazing,
										gs_list_headdet			= gs_list_headdet,
										gs_list_jambdet			= gs_list_jambdet,
										gs_list_silldet			= gs_list_silldet,
										gs_list_hwsetno			= gs_list_hwsetno,
										gs_list_optype			= gs_list_optype,
										gs_list_finish			= gs_list_finish,
										gs_list_elevation		= gs_list_elevation,
										gs_list_hings			= gs_list_hings,
										gs_list_lockset			= gs_list_lockset,
										gs_list_glassarea_tmp	= gs_list_glassarea_tmp,
										gs_list_glassarea_override	= gs_list_glassarea_override,
										gs_list_glassarea		= gs_list_glassarea,
										gs_list_glassperimeter	= gs_list_glassperimeter,
										gs_list_heattransfer	= gs_list_heattransfer,
										gs_list_firerating		= gs_list_firerating,
										gs_list_acousticrating	= gs_list_acousticrating,
										gs_list_ventilation		= gs_list_ventilation,
										FM_Type					= FM_Type,
										iFMType					= iFMType,
										FM_InventoryNumber		= FM_InventoryNumber,
										FM_SerialNumber			= FM_SerialNumber,
										FM_ProductionYear		= FM_ProductionYear,
										FM_ObjectWeight			= FM_ObjectWeight,
										FM_ObjectWeightUnit		= FM_ObjectWeightUnit,
										gs_list_orientationDef_m = gs_list_orientationDef_m,
										ifc_optypestr			= ifc_optypestr,
										ifc_optype				= ifc_optype							
 

return


! --------------------------------------------------------------------------------
! Wall Opening
! --------------------------------------------------------------------------------
"pageCallWallOpening":
	call "ui_WallOpening_m" parameters 	iWindowShape		= iWindowShape,
										isWindow			= 1,
										isEmptyOpening		= 0,
										iRevealType			= iRevealType,
										gs_RevealTypeEnable	= gs_RevealTypeEnable,
										bEnableParapetInset = 0,
										bEnableMasonryArch	= 0,
										iUiID_Reveal		= iUiID_Reveal,
										iUiID_Closure		= iUiID_Closure,
										iUiID_WallInset		= 0,
										iUiID_MasonryArch	= 0,
										st_uiWallOpening	= st_uiWallOpening,
										stRevealTypes		= stRevealTypes,
										stClosureTypes		= stClosureTypes,
										gs_reveal_type_int 	= gs_reveal_type_int,
										gs_wido_sill		= gs_wido_sill,
										AC_wido_sill		= AC_wido_sill,
										gs_closure_type_int	= gs_closure_type_int,
										gs_left_oversize	= gs_left_oversize,
										gs_right_oversize	= gs_right_oversize,
										gs_upper_oversize	= gs_upper_oversize,
										gs_lower_oversize	= gs_lower_oversize
return

! --------------------------------------------------------------------------------
! Masonry Arch, Cavity Closure, Custom Reveal Settings Tabpage
! --------------------------------------------------------------------------------
"pageCallWallholeStructure":
	call "WallholeStructure" parameters all A = A,
		iRevealType					= iRevealType,
		iSillRevealType				= iSillRevealType,
		iBoardRevealType			= iBoardRevealType,
		iClosureType				= iClosureType,
	! --- Function Control Parameters
		bEnablePlasterLeftIn		= bEnablePlasterLeftIn,
		bEnablePlasterLeftOut		= bEnablePlasterLeftOut,
		bEnablePlasterRightIn		= bEnablePlasterRightIn,
		bEnablePlasterRightOut		= bEnablePlasterRightOut,
		bEnableParapetInset			= bEnableParapetInset,
		bEnableMasonryArch			= bEnableMasonryArch,
		bEnableFaschen				= bEnableFaschen,
		gs_RevealTypeEnable			= gs_RevealTypeEnable,
		gs_ClosureTypeEnable		= gs_ClosureTypeEnable,
	! --- Macro Control Parameters
		isWindow					= 1,
		iWindowShape				= iWindowShape,
		iParapetSize				= iParapetSize,
		iParapetBottom				= iParapetBottom,
	! --- Corner Functions
		bLeftCornerFunction			= bLeftCornerFunction,
	!	leftCornerAngle				= leftCornerAngle,
	!	leftConnWallThk				= leftConnWallThk,
		bRightCornerFunction		= bRightCornerFunction,
	!	rightCornerAngle			= rightCornerAngle,
	!	rightConnWallThk			= rightConnWallThk,
	! --- Casing
		bDrawOutsideTrim		= bDrawOutsideTrim,
		bDrawInsideTrim			= bDrawInsideTrim,
	! --- String Resources
		stRevealTypes					= stRevealTypes,
		stRevealTypesBottom				= stRevealTypesBottom,
		stClosureTypes					= stClosureTypes,
		stWallContourLine				= stWallContourLine,
		stCavityClosureSide				= stCavityClosureSide,
		stCavityClosureTurnDir			= stCavityClosureTurnDir,
		stDutchClosureToSide			= stDutchClosureToSide,
		stCavityClosureEditedJambSide	= stCavityClosureEditedJambSide,
		stCavityClosureEditedWallSide	= stCavityClosureEditedWallSide,
		stCavityClosureEditedSkinNumber	= stCavityClosureEditedSkinNumber,
		stCavityClosureTurnInThickness	= stCavityClosureTurnInThickness,
		stCavityClosureHatchOrientation	= stCavityClosureHatchOrientation,
		stMasonryArchTypes				= stMasonryArchTypes,
		stMasonryArchStructure			= stMasonryArchStructure,
		stWallholeCutUI					= stWallholeCutUI,
		stCavityClosureUI				= stCavityClosureUI,
		stWallholeStructureUI			= stWallholeStructureUI,
		stMasonryArchUI					= stMasonryArchUI,
		stRevealClusureUITips			= stRevealClusureUITips,
		stRevealUI						= stRevealUI,
		stClosureType					= stClosureType,
		stParapetSize					= stParapetSize,
		stParapetBottom					= stParapetBottom,
		uiUsedPageIDs					= uiUsedPageIDs,
		uiUsedPageNames					= uiUsedPageNames,
		bStorefrontClassic				= 1


return


! --------------------------------------------------------------------------------
! Floor Plan and Section
! --------------------------------------------------------------------------------
"pageCallFloorPlanAndSect":
	if bCanHaveReveal then
		itemID = 2
		ui_listitem itemID, iUiID_FloorPlanSection, "iRevealOnSymbol", 	0,	"",			`Показ Четвертей в Символе`	: itemID = itemID + 1
	endif
return
]]>
</Script_UI>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_VL SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[

! =============================================================================
! Hide All parameters list
! =============================================================================
hideparameter all


! =============================================================================
! 3D Based 2D Symbol Support
! =============================================================================

if AC_Hole_Display_Option = 3 then
	parameters AC_WallContours = 0
else
	parameters AC_WallContours = 1
endif


hideparameter "ac_details"

! =============================================================================
! Show / Hide 2D Fills
! =============================================================================

if not(gs_bFills) then	! Hide
	hideparameter	"gs_wallhole_fill",
					"gs_wallhole_pen_fg",
					"gs_wallhole_pen_bg"

	lock	"gs_wallhole_fill",
			"gs_wallhole_pen_fg",
			"gs_wallhole_pen_bg"
endif


! =============================================================================
! Wall Contour Line Parameter Handling
! =============================================================================

if not(bEnableSill | bEnableThreshold) then
	lock "gs_wcont_hidden_line_out"
	hideparameter "gs_wcont_hidden_line_out"
endif
if not(bEnableBoard | bEnableThreshold) then
	lock "gs_wcont_hidden_line_in"
	hideparameter "gs_wcont_hidden_line_in"
endif


! =============================================================================
! Wallhole Structure
! =============================================================================

call "WallholeStructure" parameters all A = A, B = B,
	refWidth 				= refWidth,
	leftWidth				= leftWidth,
	rightWidth				= rightWidth,
	openingHeight			= openingHeight,
	iRevealType				= iRevealType,
	iSillRevealType			= iSillRevealType,
	iBoardRevealType		= iBoardRevealType,
	leftWallholeRevealPnts	= leftWallholeRevealPnts,
	rightWallholeRevealPnts	= rightWallholeRevealPnts,
	iRevealPointsIdx		= iRevealPointsIdx,
	iClosureType			= iClosureType,
! --- Coustom CC Settings ---
	gs_custom_cc_turn_in		= gs_custom_cc_turn_in,
	iCustomCCThicknessType = iCustomCCThicknessType,
	iCustomCCOrientation = iCustomCCOrientation,
	gs_custom_cc_separator		= gs_custom_cc_separator,
	iCustomCCEditJambSide = iCustomCCEditJambSide,
	iCustomCCEditWallSide = iCustomCCEditWallSide,
	iCustomCCEditSkin = iCustomCCEditSkin,
	gs_custom_cc_array_left		= gs_custom_cc_array_left,
	gs_custom_cc_array_right	= gs_custom_cc_array_right,
	gs_custom_cc_thickness		= gs_custom_cc_thickness,
	gs_custom_cc_overhang		= gs_custom_cc_overhang,
	gs_custom_cc_separator_pen	= gs_custom_cc_separator_pen,
! --- Connections ---
	gs_stack_left			= gs_stack_left,
	gs_stack_right			= gs_stack_right,
	gs_stack_top			= 0,
! --- Function Control Parameters
	bEnablePlasterLeftIn	= bEnablePlasterLeftIn,
	bEnablePlasterLeftOut	= bEnablePlasterLeftOut,
	bEnablePlasterRightIn	= bEnablePlasterRightIn,
	bEnablePlasterRightOut	= bEnablePlasterRightOut,
	bEnablePlasterTopIn		= bEnablePlasterTopIn,
	bEnablePlasterTopOut	= bEnablePlasterTopOut,
	bEnablePlasterBottomIn	= bEnablePlasterBottomIn,
	bEnablePlasterBottomOut	= bEnablePlasterBottomOut,
	bEnableParapetInset		= bEnableParapetInset,
	bEnableMasonryArch		= bEnableMasonryArch,
	bEnableFaschen			= bEnableFaschen,
	gs_RevealTypeEnable		= gs_RevealTypeEnable,
	gs_ClosureTypeEnable	= gs_ClosureTypeEnable,
	bEnableWallContourHiddenLine	= bEnableWallContourHiddenLine,
! --- Macro Control Parameters
	isWindow				= 1,
	iWindowShape			= iWindowShape,
	defaultSillDepth		= defaultSillDepth,
! --- Corner Functions
	bLeftCornerFunction		= bLeftCornerFunction,
!	leftCornerAngle			= leftCornerAngle,
!	leftConnWallThk			= leftConnWallThk,
	bRightCornerFunction	= bRightCornerFunction,
!	rightCornerAngle		= rightCornerAngle,
!	rightConnWallThk		= rightConnWallThk,
! --- Casing
	bDrawOutsideTrim		= bDrawOutsideTrim,
	bDrawInsideTrim			= bDrawInsideTrim,
! --- ventialtion over frame wallhole size modification
	includeVentilationHeight		= VentilationProfileHeight * isVentilationOverFrame,
! --- String Resources
	stRevealTypes					= stRevealTypes,
	stRevealTypesBottom				= stRevealTypesBottom,
	stRevealAngleEditBy				= stRevealAngleEditBy,
	stClosureTypes					= stClosureTypes,
	stWallContourLine				= stWallContourLine,
	stCavityClosureSide				= stCavityClosureSide,
	stCavityClosureTurnDir			= stCavityClosureTurnDir,
	stDutchClosureToSide			= stDutchClosureToSide,
	stCavityClosureEditedJambSide	= stCavityClosureEditedJambSide,
	stCavityClosureEditedWallSide	= stCavityClosureEditedWallSide,
	stCavityClosureEditedSkinNumber	= stCavityClosureEditedSkinNumber,
	stCavityClosureTurnInThickness	= stCavityClosureTurnInThickness,
	stCavityClosureHatchOrientation	= stCavityClosureHatchOrientation
!	stMasonryArchTypes				= stMasonryArchTypes,
!	stMasonryArchStructure			= stMasonryArchStructure,
!	gs_faschen_type 				= gs_faschen_type


! =============================================================================
! Demolition / New construction
! =============================================================================

if gs_bFills = 0 then
	lock "iTypeDemolitionFill"
endif

if gs_bShowDemolitionPar then
	values{2} "iTypeDemolitionFill" 	RENOVATION_FILL_EXIST, `Нет`,
										RENOVATION_FILL_DEMOLISHED, `Демонтаж`,
										RENOVATION_FILL_NEW, `Новая Конструкция - Пустой Символ`,
										RENOVATION_FILL_NEW_FULL, `Новая Конструкция - Полный Символ`

	if iTypeDemolitionFill <> RENOVATION_FILL_EXIST then
		lock "gs_wallhole_fill"
		lock "gs_wallhole_pen_fg"
		lock "gs_wallhole_pen_bg"
	endif
endif


! =============================================================================
! 2D Detail Level
! =============================================================================

if gs_2DDetEnable = 0 then
			values{2} "iDWDet2D" 	DETLEVEL_DW2D_MVO,		`по ПМВ`,
									DETLEVEL_DW2D_SCSENS,	`Зависит от Масштаба`,
									DETLEVEL_DW2D_50,		`1:50`,
									DETLEVEL_DW2D_100,		`1:100`,
									DETLEVEL_DW2D_200,		`1:200`,
									DETLEVEL_DW2D_OFF,		`Откл.`
else

	dim n2DScaleValueMask[]
	dim n2DScaleValueMask_m[]

	i=1
	if bittest( gs_2DDetEnable, 11) then                                              ! by MVO, 2048
				n2DScaleValueMask[i] = stDetail2D[1]
				n2DScaleValueMask_m[i] = DETLEVEL_DW2D_MVO
				i = i + 1
	endif
	if bittest( gs_2DDetEnable, 0) then                                              ! Scale Sensitive in Value list, 1
				n2DScaleValueMask[i] = stDetail2D[2]
				n2DScaleValueMask_m[i] = DETLEVEL_DW2D_SCSENS
				i = i + 1
	endif
	if bittest( gs_2DDetEnable, 10) then                                              ! 1:20 in Value list,1024
				n2DScaleValueMask[i] = stDetail2D[12]
				n2DScaleValueMask_m[i] = DETLEVEL_DW2D_20
				i = i + 1
	endif
	if bittest( gs_2DDetEnable, 1) then                                              ! 1:50 in Value list,2
				n2DScaleValueMask[i] = stDetail2D[3]
				n2DScaleValueMask_m[i] = DETLEVEL_DW2D_50
				i = i + 1
	endif
	if bittest( gs_2DDetEnable, 2) then                                              ! 1:100 in Value list,4
				n2DScaleValueMask[i] = stDetail2D[4]
				n2DScaleValueMask_m[i] = DETLEVEL_DW2D_100
				i = i + 1
	endif
	if bittest( gs_2DDetEnable, 3) then                                              ! Middle Detail in Value list,8
				n2DScaleValueMask[i] = stDetail2D[5]
				n2DScaleValueMask_m[i] = DETLEVEL_DW2D_MIDDET
				i = i + 1
	endif
	if bittest( gs_2DDetEnable, 4) then                                              ! Simple in Value list,16
				n2DScaleValueMask[i] = stDetail2D[6]
				n2DScaleValueMask_m[i] = DETLEVEL_DW2D_SMPL2L
				i = i + 1
	endif
	if bittest( gs_2DDetEnable, 5) then                                              ! 1:200 in Value list,32
				n2DScaleValueMask[i] = stDetail2D[7]
				n2DScaleValueMask_m[i] = DETLEVEL_DW2D_200
				i = i + 1
	endif
	if bittest( gs_2DDetEnable, 12) then                                              ! 1:500 in Value list,4096
				n2DScaleValueMask[i] = stDetail2D[13]
				n2DScaleValueMask_m[i] = DETLEVEL_DW2D_500
				i = i + 1
	endif
	if bittest( gs_2DDetEnable, 6) then                                              ! Off in Value list,64
				n2DScaleValueMask[i] = stDetail2D[8]
				n2DScaleValueMask_m[i] = DETLEVEL_DW2D_OFF
				i = i + 1
	endif
	if bittest( gs_2DDetEnable, 7) then                                              ! Middle USA in Value list,128
				n2DScaleValueMask[i] = stDetail2D[7]
				n2DScaleValueMask_m[i] = DETLEVEL_DW2D_MIDUSA
				i = i + 1
	endif
	if bittest( gs_2DDetEnable, 8) then                                              ! Chinese Simple in Value list,256
				n2DScaleValueMask[i] = stDetail2D[10]
				n2DScaleValueMask_m[i] = DETLEVEL_DW2D_CHISMPL
				i = i + 1
	endif
	if bittest( gs_2DDetEnable, 9) then                                              ! Chinese Detailed in Value list,512
				n2DScaleValueMask[i] = stDetail2D[11]
				n2DScaleValueMask_m[i] = DETLEVEL_DW2D_CHIDET
				i = i + 1
	endif

			values{2} "iDWDet2D"  n2DScaleValueMask_m, n2DScaleValueMask
endif


! =============================================================================
! Show Reveal On Symbol
! =============================================================================

if bCanHaveReveal then
	values{2} "iRevealOnSymbol"	SHOWREV_MVO, stRevealOnSymbValues[1],
					SHOWREV_ALWAYS, stRevealOnSymbValues[2],
					SHOWREV_UPTO50, stRevealOnSymbValues[3],
					SHOWREV_UPTO100, stRevealOnSymbValues[4],
					SHOWREV_UPTO200, stRevealOnSymbValues[5],
					SHOWREV_NEVER, stRevealOnSymbValues[6]
					
else
	lock "iRevealOnSymbol"
	hideparameter "iRevealOnSymbol"
endif


! =============================================================================
! UI Support
! =============================================================================

if GLOB_UI_BUTTON_ID < 0 then
	parameters gs_ui_current_page = -GLOB_UI_BUTTON_ID
endif


! =============================================================================
! Oversize
! =============================================================================

values "gs_left_oversize"  range[0,]
values "gs_right_oversize" range[0,]
values "gs_upper_oversize" range[0,]
values "gs_lower_oversize" range[0,]

! =============================================================================
! Nominal Size Chooser
! =============================================================================
if not(bLanguageUSA) then
	hideparameter "gs_unit_size"
	lock "gs_unit_size"
else
	!! TYPICAL SIZES !!

	if iStorefrontType = 5 then
		dim bTyp_asize[]
			bTyp_asize[1]=24"
			bTyp_asize[2]=30"
			bTyp_asize[3]=32"
			bTyp_asize[4]=36"
			bTyp_asize[5]=40"
			bTyp_asize[6]=44"
			bTyp_asize[7]=60"

		dim bTyp_bsize[]
			bTyp_bsize[1]=36"
			bTyp_bsize[2]=44"
			bTyp_bsize[3]=52"
			bTyp_bsize[4]=60"
			bTyp_bsize[5]=120"
	else
		dim bTyp_asize[]
			bTyp_asize[1]=24"
			bTyp_asize[2]=30"
			bTyp_asize[3]=32"
			bTyp_asize[4]=36"
			bTyp_asize[5]=40"
			bTyp_asize[6]=44"
			bTyp_asize[7]=72"

		dim bTyp_bsize[]
			bTyp_bsize[1]=36"
			bTyp_bsize[2]=44"
			bTyp_bsize[3]=52"
			bTyp_bsize[4]=60"
			bTyp_bsize[5]=120"
	endif

	dim bTypsize[]
		for ib=1 to vardim1(bTyp_bsize)
			for ia=1 to vardim1(bTyp_asize)
				bTypsize[ib+vardim1(bTyp_bsize)*(ia-1)]=str("%0ffi", bTyp_asize[ia])+" x "+str("%0ffi", bTyp_bsize[ib])
			next ia
		next ib

	values "gs_unit_size" `Специальный Размер`, bTypsize

	if not(gs_unit_nominal) then lock "gs_unit_size"
endif

bSetParams = 0

if GLOB_MODPAR_NAME = "gs_wallhole_nominal" | (gs_reveal_nominal & not(bCanHaveReveal)) then
	gs_wallhole_nominal	= 1
	gs_reveal_nominal	= 0
	gs_unit_nominal		= 0

	bSetParams = 1
endif

if GLOB_MODPAR_NAME = "gs_reveal_nominal" then
	gs_wallhole_nominal	= 0
	gs_reveal_nominal	= 1
	gs_unit_nominal		= 0

	bSetParams = 1
endif

if GLOB_MODPAR_NAME = "gs_unit_nominal" then
	gs_wallhole_nominal	= 0
	gs_reveal_nominal	= 0
	gs_unit_nominal		= 1

	bSetParams = 1
endif

if bSetParams then
	parameters	gs_nominal_size		= gs_wallhole_nominal + 2 * gs_reveal_nominal + 4 * gs_unit_nominal,
				gs_wallhole_nominal	= gs_wallhole_nominal,
				gs_reveal_nominal	= gs_reveal_nominal,
				gs_unit_nominal		= gs_unit_nominal
endif


! =============================================================================
! Dimension Link
! =============================================================================

! Unit Size -> Wallhole Size difference
wallholeDLeft	= gs_tolerance_left
wallholeDRight	= gs_tolerance_right
wallholeDUpper	= gs_tolerance_upper + VentilationProfileHeight * isVentilationOverFrame
wallholeDLower	= gs_tolerance_lower

! Reveal Size -> Wallhole Size difference
revealDLeft		= gs_reveal_left
revealDRight	= gs_reveal_right
revealDUpper	= gs_reveal_top
revealDLower	= gs_reveal_bottom


bRecalculate	= (	GLOB_MODPAR_NAME = "gs_frame_width" |		\
					GLOB_MODPAR_NAME = "gs_tolerance_left" |	\
					GLOB_MODPAR_NAME = "gs_tolerance_right" |	\
					GLOB_MODPAR_NAME = "gs_tolerance_upper" |	\
					GLOB_MODPAR_NAME = "gs_tolerance_lower" |	\
					GLOB_MODPAR_NAME = "gs_reveal_left" |		\
					GLOB_MODPAR_NAME = "gs_reveal_right" |		\
					GLOB_MODPAR_NAME = "gs_reveal_top" |		\
					GLOB_MODPAR_NAME = "gs_reveal_bottom"|	\
					GLOB_MODPAR_NAME = "bVentilationProfile"|	\
					GLOB_MODPAR_NAME = "iVentilationProfileType"|	\
					(GLOB_MODPAR_NAME = "VentilationProfileHeight" & isVentilationOverFrame))

!GLOB_MODPAR_NAME = "WIDO_LEFT_JAMB" |		\
!GLOB_MODPAR_NAME = "WIDO_RIGHT_JAMB" |		\
!GLOB_MODPAR_NAME = "WIDO_HEAD_DEPTH" |		\
!GLOB_MODPAR_NAME = "WIDO_THRES_DEPTH" |	\

bNominalSelectChanged	= (	GLOB_MODPAR_NAME = "gs_wallhole_nominal" |	\
							GLOB_MODPAR_NAME = "gs_reveal_nominal" |	\
							GLOB_MODPAR_NAME = "gs_unit_nominal")

minWallholeWidth	= minUnitWidth	+ wallholeDLeft  + wallholeDRight
minWallholeHeight	= minUnitHeight + wallholeDUpper + wallholeDLower
minRevealWidth		= minUnitWidth	+ wallholeDLeft	 + wallholeDRight - revealDLeft  - revealDRight
minRevealHeight		= minUnitHeight + wallholeDUpper + wallholeDLower - revealDUpper - revealDLower

bSizeModified	= 0
gosub 100		! Link Dimensions

if gs_wallhole_nominal then
	minWidth	= minWallholeWidth
	minHeight	= minWallholeHeight
endif
if gs_reveal_nominal then
	minWidth	= minRevealWidth
	minHeight	= minRevealHeight
endif
if gs_unit_nominal then
	minWidth	= minUnitWidth
	minHeight	= minUnitHeight
endif

values "A" range [minWidth,]
values "B" range [minHeight,]

if bSizeModified | (not(gs_retain_nominal_sizes) & bNominalSelectChanged) then

	bSizeModified = 0

	if gs_wallhole_nominal then
		if ac_wallhole_width < minWallholeWidth then
						ac_wallhole_width = minWallholeWidth
			parameters	ac_wallhole_width = minWallholeWidth
			bSizeModified = 1
		endif
		if ac_wallhole_height < minWallholeHeight then
						ac_wallhole_height = minWallholeHeight
			parameters	ac_wallhole_height = minWallholeHeight
			bSizeModified = 1
		endif

		parameters A = ac_wallhole_width,	B = ac_wallhole_height
	endif
	if gs_reveal_nominal then
		if ac_reveal_width < minRevealWidth then
						ac_reveal_width = minRevealWidth
			parameters	ac_reveal_width = minRevealWidth
			bSizeModified = 1
		endif
		if ac_reveal_height < minRevealHeight then
						ac_reveal_height = minRevealHeight
			parameters	ac_reveal_height = minRevealHeight
			bSizeModified = 1
		endif

		parameters A = ac_reveal_width,	B = ac_reveal_height
	endif
	if gs_unit_nominal then
		if ac_unit_width < minUnitWidth then
						ac_unit_width = minUnitWidth
			parameters	ac_unit_width = minUnitWidth
			bSizeModified = 1
		endif
		if ac_unit_height < minUnitHeight then
						ac_unit_height = minUnitHeight
			parameters	ac_unit_height = minUnitHeight
			bSizeModified = 1
		endif

		parameters A = ac_unit_width, B = ac_unit_height
	endif

	if bSizeModified then
		gosub 100		! Link Dimensions
	endif
else
	if gs_wallhole_nominal then
		if A < minWidth then
			A = minWidth
			parameters A = A
		endif
		if B < minHeight then
			B = minHeight
			parameters B = B
		endif

		ac_wallhole_width	= A
		ac_wallhole_height	= B
		parameters ac_wallhole_width = A, ac_wallhole_height = B
	endif
	if gs_reveal_nominal then
		if A < minWidth then
			A = minWidth
			parameters A = A
		endif
		if B < minHeight then
			B = minHeight
			parameters B = B
		endif

		ac_reveal_width  = A
		ac_reveal_height = B
		parameters ac_reveal_width = A, ac_reveal_height = B
	endif
	if gs_unit_nominal then
		if A < minWidth then
			A = minWidth
			parameters A = A
		endif
		if B < minHeight then
			B = minHeight
			parameters B = B
		endif

		ac_unit_width	= A
		ac_unit_height	= B
		parameters ac_unit_width = A, ac_unit_height = B
	endif

	bRecalculate = 1
	gosub 100		! Link Dimensions
endif

if	not(bCanHaveReveal)	then
	lock "gs_reveal_nominal", "ac_reveal_width", "ac_reveal_height"
	hideparameter "gs_reveal_nominal", "ac_reveal_width", "ac_reveal_height"
endif


! =============================================================================
! NED Fire Rating
! =============================================================================
if bEnableNEDFireRating then
	values "gs_list_firerating"			`Нет`, `30 минут`, `60 минут`, CUSTOM

	if GLOB_MODPAR_NAME = "gs_list_firerating" then
		iNEDFireRating = 0
		if gs_list_firerating = `30 минут` then iNEDFireRating = 2
		if gs_list_firerating = `60 минут` then iNEDFireRating = 3
		parameters iNEDFireRating = iNEDFireRating
	else
		if iNEDFireRating = 2 then gs_list_firerating = `30 минут`
		if iNEDFireRating = 3 then gs_list_firerating = `60 минут`
		parameters gs_list_firerating = gs_list_firerating
	endif

	values "NEDFireRatingPos" range [-ac_unit_width/2, ac_unit_width/2]
endif

! =============================================================================
! DACH Fire rating: Self-Closing
! =============================================================================

if bEnableDACHFireRating then
	gs_list_FR_expression = ""
	if LibraryLangCode = "AUT" then
		gs_list_FR_expression = "E"
	endif

	if gs_list_FR_bSelfClosing and (gs_list_FR_indexSelfClosing <> "") then
		gs_list_FR_expression = gs_list_FR_expression + "I" + gs_list_FR_indexSelfClosing
	endif
	gs_list_FR_expression = gs_list_FR_expression + gs_list_firerating
	if gs_list_FR_bSelfClosing then
		gs_list_FR_expression = gs_list_FR_expression + "-C"
	endif
	parameters gs_list_FR_expression = gs_list_FR_expression

	lock "gs_list_FR_expression"
	if not(gs_list_FR_bSelfClosing) then
		lock "gs_list_FR_indexSelfClosing"
	endif
else
	lock	"gs_list_FR_bSelfClosing",
			"gs_list_FR_indexSelfClosing",
			"gs_list_FR_expression"
	hideparameter	"gs_list_FR_bSelfClosing",
					"gs_list_FR_indexSelfClosing",
					"gs_list_FR_expression"
endif


! =============================================================================
end
! =============================================================================


100:
! =============================================================================
! Link Dimensions
! =============================================================================

	if bLanguageUSA and gs_unit_size<>`Специальный Размер` then
		nr=split ( gs_unit_size, "%n x %n", a_size, sep, b_size)

		ac_unit_width=a_size
		ac_unit_height=b_size
		parameters ac_unit_width=a_size
		parameters ac_unit_height=b_size

		ac_wallhole_width	= ac_unit_width		+ wallholeDLeft	+ wallholeDRight
		ac_reveal_width		= ac_wallhole_width	- revealDLeft	- revealDRight
		parameters	ac_wallhole_width	= ac_wallhole_width,
					ac_reveal_width		= ac_reveal_width

		ac_wallhole_height	= ac_unit_height	+ wallholeDUpper + wallholeDLower
		ac_reveal_height	= ac_wallhole_height - revealDUpper	 - revealDLower
		parameters	ac_wallhole_height	= ac_wallhole_height,
					ac_reveal_height	= ac_reveal_height

		lock "ac_wallhole_width", "ac_wallhole_height"
		lock "ac_reveal_width", "ac_reveal_height"

		bSizeModified = 1
	endif

	if GLOB_MODPAR_NAME = "ac_wallhole_width" | (gs_wallhole_nominal & bRecalculate) then
		if ac_wallhole_width < minWallholeWidth then
						ac_wallhole_width = minWallholeWidth
			parameters	ac_wallhole_width = minWallholeWidth
		endif

		ac_reveal_width	= ac_wallhole_width	- revealDLeft	- revealDRight
		ac_unit_width	= ac_wallhole_width	- wallholeDLeft	- wallholeDRight

		parameters	ac_reveal_width	= ac_reveal_width,
					ac_unit_width	= ac_unit_width

		bSizeModified = 1
	endif
	if GLOB_MODPAR_NAME = "ac_reveal_width" | (gs_reveal_nominal & bRecalculate) then
		if ac_reveal_width < minRevealWidth then
						ac_reveal_width = minRevealWidth
			parameters	ac_reveal_width = minRevealWidth
		endif

		ac_wallhole_width	= ac_reveal_width	+ revealDLeft	+ revealDRight
		ac_unit_width		= ac_wallhole_width	- wallholeDLeft	- wallholeDRight

		parameters	ac_wallhole_width	= ac_wallhole_width,
					ac_unit_width		= ac_unit_width

		bSizeModified = 1
	endif
	if GLOB_MODPAR_NAME = "ac_unit_width" | (gs_unit_nominal & bRecalculate) then
		if ac_unit_width < minUnitWidth then
						ac_unit_width = minUnitWidth
			parameters	ac_unit_width = minUnitWidth
		endif

		ac_wallhole_width	= ac_unit_width		+ wallholeDLeft	+ wallholeDRight
		ac_reveal_width		= ac_wallhole_width	- revealDLeft	- revealDRight

		parameters	ac_wallhole_width	= ac_wallhole_width,
					ac_reveal_width		= ac_reveal_width

		bSizeModified = 1
	endif

	! =============================================================================

	if GLOB_MODPAR_NAME = "ac_wallhole_height" | (gs_wallhole_nominal & bRecalculate) then
		if ac_wallhole_height < minWallholeHeight then
						ac_wallhole_height = minWallholeHeight
			parameters	ac_wallhole_height = minWallholeHeight
		endif

		ac_reveal_height	= ac_wallhole_height - revealDUpper		- revealDLower
		ac_unit_height		= ac_wallhole_height - wallholeDUpper	- wallholeDLower

		parameters	ac_reveal_height	= ac_reveal_height,
					ac_unit_height		= ac_unit_height

		bSizeModified = 1
	endif
	if GLOB_MODPAR_NAME = "ac_reveal_height" | (gs_reveal_nominal & bRecalculate) then
		if ac_reveal_height < minRevealHeight then
						ac_reveal_height = minRevealHeight
			parameters	ac_reveal_height = minRevealHeight
		endif

		ac_wallhole_height	= ac_reveal_height	 + revealDUpper		+ revealDLower
		ac_unit_height		= ac_wallhole_height - wallholeDUpper	- wallholeDLower

		parameters	ac_wallhole_height	= ac_wallhole_height,
					ac_unit_height		= ac_unit_height

		bSizeModified = 1
	endif
	if GLOB_MODPAR_NAME = "ac_unit_height" | (gs_unit_nominal & bRecalculate) then
		if ac_unit_height < minUnitHeight then
						ac_unit_height = minUnitHeight
			parameters	ac_unit_height = minUnitHeight
		endif

		ac_wallhole_height	= ac_unit_height	+ wallholeDUpper + wallholeDLower
		ac_reveal_height	= ac_wallhole_height - revealDUpper	 - revealDLower

		parameters	ac_wallhole_height	= ac_wallhole_height,
					ac_reveal_height	= ac_reveal_height

		bSizeModified = 1
	endif
return

! =============================================================================

]]>
</Script_VL>

<Comment SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Comment>

<ParamSection SectVersion="22" SectionFlags="0" SubIdent="0">
	<ParamSectHeader>
		<AutoHotspots>false</AutoHotspots>
		<HoleBits>
			<WDBit_3DFrame/>
			<WDBit_ThickIsParam/>
			<WDBit_LFramIsParam/>
			<WDBit_RFramIsParam/>
			<WDBit_TFramIsParam/>
			<WDBit_BFramIsParam/>
		</HoleBits>
		<StatBits>
			<STBit_UIUseHierarchicalPages/>
		</StatBits>
		<WDLeftFrame>0</WDLeftFrame>
		<WDRightFrame>0</WDRightFrame>
		<WDTopFrame>0</WDTopFrame>
		<WDBotFrame>0</WDBotFrame>
		<LayFlags>65535</LayFlags>
		<WDMirrorThickness>0</WDMirrorThickness>
		<WDWallInset>-1</WDWallInset>
	</ParamSectHeader>
	<Parameters>
		<Length Name="A">
			<Description><![CDATA["Nominal Width"]]></Description>
			<Fix/>
			<Value>1</Value>
		</Length>
		<Length Name="B">
			<Description><![CDATA["Nominal Height"]]></Description>
			<Fix/>
			<Value>1</Value>
		</Length>
		<Length Name="ZZYZX">
			<Description><![CDATA["Z Dimension"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Integer Name="AC_WallContours">
			<Description><![CDATA["Wall Contours (0-None,1-Full,2-Side,3-Length)"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="AC_Hole_Hotspot_Control">
			<Description><![CDATA["Hotspots 0-None,1-2D,2-3D,3-All"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>3</Value>
		</Integer>
		<Boolean Name="AC_show2DHotspotsIn3D">
			<Description><![CDATA["Show 2D Hotspots in 3D"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="ac_bottomlevel">
			<Description><![CDATA["Bottom Level"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="ac_toplevel">
			<Description><![CDATA["Top Level"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="AC_Sill_To_Curr_Story">
			<Description><![CDATA["Sill Height to Current Story"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Integer Name="AC_Hole_Display_Option">
			<Description><![CDATA["Floor Plan Display Option"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>3</Value>
		</Integer>
		<Angle Name="AC_Hole_Position_Angle">
			<Description><![CDATA["Hole Position Angle"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Boolean Name="AC_HoleSideMaterial">
			<Description><![CDATA["Hole has Wall's Side Surface"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="AC_HoleMaterialCurved">
			<Description><![CDATA["Hole Surface's Split is Curved in Curved Walls"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="AC_WallType">
			<Description><![CDATA["Wall Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="AC_WindowInWallContour">
			<Description><![CDATA["Window in Wall Contour"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="4" SecondDimension="0">
				<AVal Row="1">0</AVal>
				<AVal Row="2">0</AVal>
				<AVal Row="3">0</AVal>
				<AVal Row="4">0</AVal>
			</ArrayValues>
		</Integer>
		<Length Name="AC_WallContourPolygon">
			<Description><![CDATA["Wall Contour Polygon"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="3">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0</AVal>
				<AVal Column="3" Row="1">0</AVal>
			</ArrayValues>
		</Length>
		<Integer Name="AC_Wall_Direction_Type">
			<Description><![CDATA["Wall Direction Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="ac_revealAnchorPos">
			<Description><![CDATA["Reveal Anchor Position"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Length Name="ac_revealToWallCore">
			<Description><![CDATA["Reveal to Wall Core"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Integer Name="ac_zone_on_reveal_side">
			<Description><![CDATA["Opening Direction"]]></Description>
			<Flags>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>-1</Value>
		</Integer>
		<Integer Name="ac_wido_hide_options">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="gs_RevealTypeEnable">
			<Description><![CDATA["Reveal and Closure Type Enable Mask"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="gs_ClosureTypeEnable">
			<Description><![CDATA["Closure Type Enable Mask"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="iStorefrontType">
			<Description><![CDATA["Storefront Type"]]></Description>
			<Value>0</Value>
		</Integer>
		<Boolean Name="bLanguageUSA">
			<Description><![CDATA["USA"]]></Description>
			<Value>0</Value>
		</Boolean>
		<String Name="LibraryLangCode">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value><![CDATA["RUS"]]></Value>
		</String>

		<!-- gs_function_control_parameters: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_function_control_parameters">
			<Description><![CDATA["Function Control Parameters"]]></Description>
		</Title>
		<Integer Name="bEnableSill">
			<Description><![CDATA["Enable/Disable Sill Function"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>-1</Value>
		</Integer>
		<Integer Name="bEnableBoard">
			<Description><![CDATA["Enable/Disable Board Function"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>-1</Value>
		</Integer>
		<Integer Name="bEnableParapetInset">
			<Description><![CDATA["Enable/Disable Parapet Inset"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>-1</Value>
		</Integer>
		<Integer Name="bEnableMasonryArch">
			<Description><![CDATA["Enable/Disable Masonry Arch"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>-1</Value>
		</Integer>
		<Integer Name="bEnableFaschen">
			<Description><![CDATA["Enable/Disable Ornamental Window Moldings"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>-1</Value>
		</Integer>
		<Integer Name="bEnableThreshold">
			<Description><![CDATA["Enable/Disable Threshold"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>-1</Value>
		</Integer>
		<Integer Name="bEnableCasing">
			<Description><![CDATA["Enable/Disable Casing"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>-1</Value>
		</Integer>
		<Integer Name="bEnableShutter">
			<Description><![CDATA["Enable/Disable Shutter"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>-1</Value>
		</Integer>
		<Integer Name="bEnableCustomCornerLeft">
			<Description><![CDATA["Enable/Disable Custom Corner Left"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>-1</Value>
		</Integer>
		<Integer Name="bEnableCustomCornerRight">
			<Description><![CDATA["Enable/Disable Custom Corner Right"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>-1</Value>
		</Integer>

		<!-- gs_macro_control_parameters: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_macro_control_parameters">
			<Description><![CDATA["Macro Control Parameters"]]></Description>
		</Title>
		<Integer Name="gs_macro_version">
			<Description><![CDATA["Macro Version"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>11</Value>
		</Integer>
		<Boolean Name="gs_IsCurved">
			<Description><![CDATA["Curved Window"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="lod2D">
			<Description><![CDATA["2D Detail Level"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="lod3D">
			<Description><![CDATA["3D Detail Level"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="uiUsedPageIDs">
			<Description><![CDATA[""]]></Description>
			<ArrayValues FirstDimension="1" SecondDimension="2">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0</AVal>
			</ArrayValues>
		</Integer>
		<String Name="uiUsedPageNames">
			<Description><![CDATA[""]]></Description>
			<ArrayValues FirstDimension="1" SecondDimension="2">
				<AVal Column="1" Row="1"><![CDATA[""]]></AVal>
				<AVal Column="2" Row="1"><![CDATA[""]]></AVal>
			</ArrayValues>
		</String>
		<Boolean Name="bLeftCornerFunction">
			<Description><![CDATA["Left Corner"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Angle Name="leftCornerAngle">
			<Description><![CDATA["Left Corner Angle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>180</Value>
		</Angle>
		<Boolean Name="bLeftDiffConnWall">
			<Description><![CDATA["Left Diff. Conn. Wall Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="leftConnWallThk">
			<Description><![CDATA["Left Connected Wall Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0.3</Value>
		</Length>
		<Boolean Name="bRightCornerFunction">
			<Description><![CDATA["Right Corner"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Angle Name="rightCornerAngle">
			<Description><![CDATA["Right Corner Angle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>180</Value>
		</Angle>
		<Boolean Name="bRightDiffConnWall">
			<Description><![CDATA["Right Diff. Conn. Wall Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="rightConnWallThk">
			<Description><![CDATA["Right Connected Wall Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0.3</Value>
		</Length>
		<Boolean Name="bNotShowCasingIn2DNOR">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bShowSillBoardIn2D100NED">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bDWSymbolAtMiddle">
			<Description><![CDATA["Symbol at Middle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bDWSymbolAtMiddle2">
			<Description><![CDATA["Symbol at Middle (Simple Centerline)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bHideVariClosTypeInSimple2D">
			<Description><![CDATA["Hide Variable Closure Type (NED, FLA)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- iTypeDemolitionFill: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Integer Name="iTypeDemolitionFill">
			<Description><![CDATA["Demolition / New construction"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_BoldName/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<FillPattern Name="gs_Demolition_fill">
			<Description><![CDATA["Demolition Fill Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</FillPattern>
		<PenColor Name="gs_Demolition_pen_fg">
			<Description><![CDATA["Demolition Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</PenColor>
		<PenColor Name="gs_Demolition_pen_bg">
			<Description><![CDATA["Demolition Background Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</PenColor>
		<FillPattern Name="gs_New_fill">
			<Description><![CDATA["New Fill Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</FillPattern>
		<PenColor Name="gs_New_pen_fg">
			<Description><![CDATA["New Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</PenColor>
		<PenColor Name="gs_New_pen_bg">
			<Description><![CDATA["New Background Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</PenColor>
		<FillPattern Name="gs_new_symb_fill">
			<Description><![CDATA["New Wall Fill Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>4</Value>
		</FillPattern>
		<PenColor Name="gs_new_symb_pen_Fg">
			<Description><![CDATA["New Wall Fill Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</PenColor>
		<PenColor Name="gs_new_symb_pen_bg">
			<Description><![CDATA["New Wall Fill Background Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<Length Name="gs_new_symb_width_r">
			<Description><![CDATA["New Wall Fill Width Right"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.15</Value>
		</Length>
		<Length Name="gs_new_symb_width_l">
			<Description><![CDATA["New Wall Fill Width Left"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.15</Value>
		</Length>
		<Boolean Name="gs_bShowNewOnCC">
			<Description><![CDATA["Show new construction on Wall"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<LineType Name="gs_Demolition_linetype">
			<Description><![CDATA["Demolition line type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</LineType>
		<Boolean Name="gs_bShowDemolitionPar">
			<Description><![CDATA["Show Demolition/New parameter"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- gs_options: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_options">
			<Description><![CDATA["Options"]]></Description>
			<Fix/>
		</Title>
		<Integer Name="iDWDet2D">
			<Description><![CDATA["2D Detail Level"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="gs_2DDetEnable">
			<Description><![CDATA["2D Detail Level Enable"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>

		<!-- gs_window_sizes: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_window_sizes">
			<Description><![CDATA["Window Sizes"]]></Description>
			<Fix/>
		</Title>
		<String Name="gs_unit_size">
			<Description><![CDATA["Unit Size"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Специальный Размер"]]></Value>
		</String>
		<Length Name="minUnitWidth">
			<Description><![CDATA["Minimal Unit Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="minUnitHeight">
			<Description><![CDATA["Minimal Unit Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_tolerance_left">
			<Description><![CDATA["Tolerance Left"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_tolerance_right">
			<Description><![CDATA["Tolerance Right"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_tolerance_upper">
			<Description><![CDATA["Tolerance Upper"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_tolerance_lower">
			<Description><![CDATA["Tolerance Lower"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ac_wallhole_width">
			<Description><![CDATA["Wallhole Width"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0.9</Value>
		</Length>
		<Length Name="ac_wallhole_height">
			<Description><![CDATA["Wallhole Height"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>1.5</Value>
		</Length>
		<Length Name="ac_reveal_width">
			<Description><![CDATA["Reveal Width"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0.9</Value>
		</Length>
		<Length Name="ac_reveal_height">
			<Description><![CDATA["Reveal Height"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>1.5</Value>
		</Length>
		<Length Name="ac_unit_width">
			<Description><![CDATA["Unit Width"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0.9</Value>
		</Length>
		<Length Name="ac_unit_height">
			<Description><![CDATA["Unit Height"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>1.5</Value>
		</Length>
		<Integer Name="gs_nominal_size">
			<Description><![CDATA["Nominal Size"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Boolean Name="gs_wallhole_nominal">
			<Description><![CDATA["Set Wallhole Size as Nominal Size"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_reveal_nominal">
			<Description><![CDATA["Set Reveal Size as Nominal Size"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_unit_nominal">
			<Description><![CDATA["Set Unit Size as Nominal Size"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_retain_nominal_sizes">
			<Description><![CDATA["Transfer Current Nominal Size to Selection"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- gs_window_frame: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_window_frame">
			<Description><![CDATA["Window Frame"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
		</Title>
		<Length Name="gs_frame_thk">
			<Description><![CDATA["Frame Thickness"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_frame_width">
			<Description><![CDATA["Frame Width"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.07</Value>
		</Length>

		<!-- gs_sidelight: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_sidelight">
			<Description><![CDATA["Shape"]]></Description>
			<Fix/>
		</Title>
		<Boolean Name="bMiddleRail">
			<Description><![CDATA["Middle Rail"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="midRailElevation">
			<Description><![CDATA["Middle Rail Elevation"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.9</Value>
		</Length>
		<Boolean Name="gs_UTrans">
			<Description><![CDATA["Upper Transom"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="transomHeight">
			<Description><![CDATA["Transom Height"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.64</Value>
		</Length>
		<Boolean Name="gs_bSLight">
			<Description><![CDATA["Side Panel 1"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="gs_SLight_w">
			<Description><![CDATA["Side Panel Width 1"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.64</Value>
		</Length>
		<Boolean Name="gs_bSLight2">
			<Description><![CDATA["Side Panel 2"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="gs_SLight_w2">
			<Description><![CDATA["Side Panel Width 2"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.64</Value>
		</Length>
		<Boolean Name="gs_wthk">
			<Description><![CDATA["Frame Thickness=Wall Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- gs_window_sash: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_window_sash">
			<Description><![CDATA["Sash Frame"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
		</Title>
		<Length Name="gs_sash_thk">
			<Description><![CDATA["Sash Frame Thickness"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_sash_width">
			<Description><![CDATA["Sash Frame Width"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_glass_thk">
			<Description><![CDATA["Glass Thickness"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.02</Value>
		</Length>

		<!-- gs_oversize: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_oversize">
			<Description><![CDATA["Opening Oversize"]]></Description>
		</Title>
		<Length Name="gs_left_oversize">
			<Description><![CDATA["Left Opening Oversize"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_right_oversize">
			<Description><![CDATA["Right Opening Oversize"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_upper_oversize">
			<Description><![CDATA["Upper Opening Oversize"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_lower_oversize">
			<Description><![CDATA["Lower Opening Oversize"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>

		<!-- gs_window_stack: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_window_stack">
			<Description><![CDATA["Ganging"]]></Description>
		</Title>
		<Boolean Name="gs_stack_left">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_stack_right">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_stack_top">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_stack_bottom">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- bVentilationProfile: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Boolean Name="bVentilationProfile">
			<Description><![CDATA["Natural Ventilation"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="iVentilationProfileType">
			<Description><![CDATA["Natural Ventilation Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="bEnableVentilationProfile">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="VentilationProfileHeight">
			<Description><![CDATA["Profile Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.065</Value>
		</Length>

		<!-- gs_reveal_type_new: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<String Name="gs_reveal_type_new">
			<Description><![CDATA["Reveal Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="gs_reveal_type_int">
			<Description><![CDATA["Reveal Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<String Name="gs_reveal_type_bottom">
			<Description><![CDATA["Bottom Reveal Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Без Четверти"]]></Value>
		</String>
		<Integer Name="gs_reveal_type_bottom_int">
			<Description><![CDATA["Bottom Reveal Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Length Name="gs_wido_sill">
			<Description><![CDATA["Reveal Depth"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>-9999</Value>
		</Length>
		<Length Name="AC_wido_sill">
			<Description><![CDATA["Reveal Depth"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<String Name="gs_reveal_type">
			<Description><![CDATA["Outer Reveal Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Без Четверти"]]></Value>
		</String>
		<Integer Name="gs_reveal_doubleOuterTypeInt">
			<Description><![CDATA["Reveal Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<String Name="gs_reveal_double_innerType">
			<Description><![CDATA["Inner Reveal Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Без Четверти"]]></Value>
		</String>
		<Integer Name="gs_reveal_doubleInnerTypeInt">
			<Description><![CDATA["Reveal Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Boolean Name="gs_reveal_uniform">
			<Description><![CDATA["Uniform Jamb Depth"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="gs_reveal_left">
			<Description><![CDATA["Jamb Depth Side 2"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_reveal_right">
			<Description><![CDATA["Jamb Depth"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_reveal_splayed_innerLeft">
			<Description><![CDATA["Inner Jamb Depth Side 2"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_reveal_splayed_innerRight">
			<Description><![CDATA["Inner Jamb Depth"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_reveal_double_innerLeft">
			<Description><![CDATA["Inner Jamb Depth Side 2"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_reveal_double_innerRight">
			<Description><![CDATA["Inner Jamb Depth"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_reveal_top">
			<Description><![CDATA["Head Jamb Depth"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_reveal_bottom">
			<Description><![CDATA["Sill Jamb Depth"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_reveal_splayed_innerTop">
			<Description><![CDATA["Inner Head Depth"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_reveal_splayed_innerBottom">
			<Description><![CDATA["Inner Sill Depth"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_reveal_double_innerTop">
			<Description><![CDATA["Inner Head Depth"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_reveal_double_innerBottom">
			<Description><![CDATA["Inner Sill Depth"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_reveal_outer_jamb_depth">
			<Description><![CDATA["Outer Jamb Depth"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.08</Value>
		</Length>
		<Angle Name="gs_reveal_left_angle">
			<Description><![CDATA["Angle Side 2"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>20</Value>
		</Angle>
		<Angle Name="gs_reveal_right_angle">
			<Description><![CDATA["Angle Side"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>20</Value>
		</Angle>
		<Angle Name="gs_reveal_top_angle">
			<Description><![CDATA["Upper Side Angle"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>20</Value>
		</Angle>
		<Angle Name="gs_reveal_bottom_angle">
			<Description><![CDATA["Bottom Side Angle"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>20</Value>
		</Angle>
		<Boolean Name="gs_reveal_auto_changed_by_cc">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_mountingFrame">
			<Description><![CDATA["Mounting Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_mountingFrame_depth">
			<Description><![CDATA["Mounting Frame Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_mountingFrame_width_left">
			<Description><![CDATA["Mounting Frame Width Left"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_mountingFrame_width_right">
			<Description><![CDATA["Mounting Frame Width Right"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_mountingFrame_width_top">
			<Description><![CDATA["Mounting Frame Width Upper"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_mountingFrame_width_bottom">
			<Description><![CDATA["Mounting Frame Width Bottom"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>

		<!-- gs_turn_plaster: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_turn_plaster">
			<Description><![CDATA["Turn Plaster"]]></Description>
			<Fix/>
		</Title>
		<Boolean Name="gs_useWallFinishSkin">
			<Description><![CDATA["Use Wall Finish Component"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_maxPlasterThk">
			<Description><![CDATA["Plaster Thickness Limit"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.04</Value>
		</Length>
		<Boolean Name="gs_bAutoTurnOut">
			<Description><![CDATA["Auto Turn Inside Face Plaster"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Integer Name="gs_bOverOut">
			<Description><![CDATA["Turn Inside Face Plaster"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Boolean Name="gs_bAutoTurnIn">
			<Description><![CDATA["Auto Turn Outside Face Plaster"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Integer Name="gs_bOverIn">
			<Description><![CDATA["Turn Outside Face Plaster"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Boolean Name="gs_turn_plaster_dim_2D">
			<Description><![CDATA["Dimensionable on 2D"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_turn_plaster_show_3D">
			<Description><![CDATA["Show in 3D"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- gs_closure_type: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<String Name="gs_closure_type">
			<Description><![CDATA["Closure Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="gs_closure_type_int">
			<Description><![CDATA["Closure Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<String Name="gs_cavity_side">
			<Description><![CDATA["Turn Skin on Side"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Обе"]]></Value>
		</String>
		<Integer Name="iCavityClosureSide">
			<Description><![CDATA["Turn Skin on Side"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="gs_nTurn">
			<Description><![CDATA["Number of Skins to Turn"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="gs_nTurnDir">
			<Description><![CDATA["Number from"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Наружная Поверхность"]]></Value>
		</String>
		<Integer Name="iCavityClosureTurnDir">
			<Description><![CDATA["Number from"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="gs_cc_dutch_ShowLeft">
			<Description><![CDATA["Place Closer on Side 2"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_cc_dutch_ShowRight">
			<Description><![CDATA["Place Closer on Side 1"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_cc_dutch_ShowTop">
			<Description><![CDATA["Place Closer on Top"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_cc_dutch_ShowBottom">
			<Description><![CDATA["Place Closer on Bottom"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="gs_cc_dutch_ClosureToSkin">
			<Description><![CDATA["Place Closer to Skin"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="gs_cc_dutch_ClosureToSide_str">
			<Description><![CDATA["Place Closer from Side"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="gs_cc_dutch_ClosureToSide">
			<Description><![CDATA["Place Closer from Side"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="gs_cc_dutch_GapAtOutsideSkin">
			<Description><![CDATA["Gap at Outside Skin"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_cc_dutch_TurnToClosure">
			<Description><![CDATA["Turn Skin to Closer"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_cc_dutch_TurnToClosureOffs">
			<Description><![CDATA["Distance of Skin from Closer"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_cc_dutch_widthJoint">
			<Description><![CDATA["Closer Width"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.038</Value>
		</Length>
		<Length Name="gs_cc_dutch_thkJoint">
			<Description><![CDATA["Closer Thickness"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Boolean Name="gs_bJoint">
			<Description><![CDATA["Insert Insulation Strip"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_showJoint">
			<Description><![CDATA["Show Insulation Strip"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="gs_thkJoint">
			<Description><![CDATA["Strip Thickness"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.025</Value>
		</Length>
		<PenColor Name="gs_penJoint">
			<Description><![CDATA["Contour Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>100</Value>
		</PenColor>
		<LineType Name="gs_ltJoint">
			<Description><![CDATA["Contour Line Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</LineType>
		<FillPattern Name="gs_fillJoint">
			<Description><![CDATA["Fill Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>17</Value>
		</FillPattern>
		<PenColor Name="gs_penJointFg">
			<Description><![CDATA["Fill Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</PenColor>
		<PenColor Name="gs_penJointBg">
			<Description><![CDATA["Fill Background Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>93</Value>
		</PenColor>
		<Boolean Name="gs_cc_dutch_matJointCustom">
			<Description><![CDATA["Custom Surface"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Material Name="gs_cc_dutch_matJoint">
			<Description><![CDATA["Surface"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Length Name="gs_widthPlug">
			<Description><![CDATA["Profile Width"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.075</Value>
		</Length>
		<PenColor Name="gs_penPlug">
			<Description><![CDATA["Contour Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>100</Value>
		</PenColor>
		<LineType Name="gs_ltPlug">
			<Description><![CDATA["Contour Line Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</LineType>
		<FillPattern Name="gs_fillPlug">
			<Description><![CDATA["Fill Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>17</Value>
		</FillPattern>
		<PenColor Name="gs_penPlugFg">
			<Description><![CDATA["Fill Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</PenColor>
		<PenColor Name="gs_penPlugBg">
			<Description><![CDATA["Fill Background Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>93</Value>
		</PenColor>
		<Length Name="gs_custom_cc_array_left">
			<Description><![CDATA["Left Side Skin Data"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="8" SecondDimension="4">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0.015</AVal>
				<AVal Column="3" Row="1">0</AVal>
				<AVal Column="4" Row="1">1</AVal>
				<AVal Column="1" Row="2">0</AVal>
				<AVal Column="2" Row="2">0.015</AVal>
				<AVal Column="3" Row="2">0</AVal>
				<AVal Column="4" Row="2">1</AVal>
				<AVal Column="1" Row="3">0</AVal>
				<AVal Column="2" Row="3">0.015</AVal>
				<AVal Column="3" Row="3">0</AVal>
				<AVal Column="4" Row="3">1</AVal>
				<AVal Column="1" Row="4">0</AVal>
				<AVal Column="2" Row="4">0.015</AVal>
				<AVal Column="3" Row="4">0</AVal>
				<AVal Column="4" Row="4">1</AVal>
				<AVal Column="1" Row="5">0</AVal>
				<AVal Column="2" Row="5">0.015</AVal>
				<AVal Column="3" Row="5">0</AVal>
				<AVal Column="4" Row="5">1</AVal>
				<AVal Column="1" Row="6">0</AVal>
				<AVal Column="2" Row="6">0.015</AVal>
				<AVal Column="3" Row="6">0</AVal>
				<AVal Column="4" Row="6">1</AVal>
				<AVal Column="1" Row="7">0</AVal>
				<AVal Column="2" Row="7">0.015</AVal>
				<AVal Column="3" Row="7">0</AVal>
				<AVal Column="4" Row="7">1</AVal>
				<AVal Column="1" Row="8">0</AVal>
				<AVal Column="2" Row="8">0.015</AVal>
				<AVal Column="3" Row="8">0</AVal>
				<AVal Column="4" Row="8">1</AVal>
			</ArrayValues>
		</Length>
		<Length Name="gs_custom_cc_array_right">
			<Description><![CDATA["Right Side Skin Data"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="8" SecondDimension="4">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0.015</AVal>
				<AVal Column="3" Row="1">0</AVal>
				<AVal Column="4" Row="1">1</AVal>
				<AVal Column="1" Row="2">0</AVal>
				<AVal Column="2" Row="2">0.015</AVal>
				<AVal Column="3" Row="2">0</AVal>
				<AVal Column="4" Row="2">1</AVal>
				<AVal Column="1" Row="3">0</AVal>
				<AVal Column="2" Row="3">0.015</AVal>
				<AVal Column="3" Row="3">0</AVal>
				<AVal Column="4" Row="3">1</AVal>
				<AVal Column="1" Row="4">0</AVal>
				<AVal Column="2" Row="4">0.015</AVal>
				<AVal Column="3" Row="4">0</AVal>
				<AVal Column="4" Row="4">1</AVal>
				<AVal Column="1" Row="5">0</AVal>
				<AVal Column="2" Row="5">0.015</AVal>
				<AVal Column="3" Row="5">0</AVal>
				<AVal Column="4" Row="5">1</AVal>
				<AVal Column="1" Row="6">0</AVal>
				<AVal Column="2" Row="6">0.015</AVal>
				<AVal Column="3" Row="6">0</AVal>
				<AVal Column="4" Row="6">1</AVal>
				<AVal Column="1" Row="7">0</AVal>
				<AVal Column="2" Row="7">0.015</AVal>
				<AVal Column="3" Row="7">0</AVal>
				<AVal Column="4" Row="7">1</AVal>
				<AVal Column="1" Row="8">0</AVal>
				<AVal Column="2" Row="8">0.015</AVal>
				<AVal Column="3" Row="8">0</AVal>
				<AVal Column="4" Row="8">1</AVal>
			</ArrayValues>
		</Length>
		<Integer Name="iCustomCCEditJambSide">
			<Description><![CDATA["Edited Jamb Side"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="iCustomCCEditWallSide">
			<Description><![CDATA["Edited Wall Side"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="iCustomCCEditSkin">
			<Description><![CDATA["Edited Skin Number"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="gs_custom_cc_turn_in">
			<Description><![CDATA["Turn-in Skin"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_custom_cc_plaster">
			<Description><![CDATA["Consider Skin as Plaster"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="iCustomCCThicknessType">
			<Description><![CDATA["Turn-in Thickness"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="gs_custom_cc_thickness">
			<Description><![CDATA["Custom Thickness"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.015</Value>
		</Length>
		<Integer Name="iCustomCCOrientation">
			<Description><![CDATA["Hatch Orientation"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="gs_custom_cc_separator">
			<Description><![CDATA["Separating Line at Turn-in"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<PenColor Name="gs_custom_cc_separator_pen">
			<Description><![CDATA["Separating Line Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</PenColor>
		<Length Name="gs_custom_cc_overhang">
			<Description><![CDATA["Skin Overhang to Frame Depth"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Boolean Name="gs_custom_cc_last_sel_side">
			<Description><![CDATA["Last Selected Side"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_closure_auto_changed">
			<Description><![CDATA["Closure Method Changed Automatically"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- gs_2D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_2D_representation">
			<Description><![CDATA["2D and Section Representation"]]></Description>
			<Fix/>
		</Title>
		<PenColor Name="gs_pen_2D">
			<Description><![CDATA["Symbol Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3</Value>
		</PenColor>
		<String Name="gs_wcont_line">
			<Description><![CDATA["Wall Contour Line"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA["Откл."]]></Value>
		</String>
		<Integer Name="iWallContourLine">
			<Description><![CDATA["Wall Contour Line"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<LineType Name="gs_wcont_line_in">
			<Description><![CDATA["Wall Contour Line Type Inside"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</LineType>
		<LineType Name="gs_wcont_line_out">
			<Description><![CDATA["Wall Contour Line Type Outside"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</LineType>
		<LineType Name="gs_wcont_hidden_line_in">
			<Description><![CDATA["Hidden Wall Contour Line Type Inside"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>4</Value>
		</LineType>
		<LineType Name="gs_wcont_hidden_line_out">
			<Description><![CDATA["Hidden Wall Contour Line Type Outside"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>4</Value>
		</LineType>
		<PenColor Name="gs_wcont_line_pen">
			<Description><![CDATA["Wall Contour Line Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</PenColor>
		<Boolean Name="gs_bFills">
			<Description><![CDATA["Use Fills"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<FillPattern Name="gs_fillShCover">
			<Description><![CDATA["Uncut Fill Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_penShCov_fg">
			<Description><![CDATA["Uncut Fill Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_penShCov_bg">
			<Description><![CDATA["Uncut Fill Background Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<FillPattern Name="gs_wallhole_fill">
			<Description><![CDATA["Plan Symbol Fill Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_wallhole_pen_fg">
			<Description><![CDATA["Plan Symbol Fill Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_wallhole_pen_bg">
			<Description><![CDATA["Plan Symbol Fill Background Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>

		<!-- gs_3D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_3D_representation">
			<Description><![CDATA["3D Representation"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
		</Title>
		<PenColor Name="gs_frame_pen">
			<Description><![CDATA["Frame Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>2</Value>
		</PenColor>
		<PenColor Name="gs_sash_pen">
			<Description><![CDATA["Sash Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>2</Value>
		</PenColor>
		<PenColor Name="gs_glass_pen">
			<Description><![CDATA["Glass Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>2</Value>
		</PenColor>
		<Boolean Name="gs_shadow">
			<Description><![CDATA["Shadow"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>

		<!-- gs_window_material: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_window_material">
			<Description><![CDATA["Surfaces"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
		</Title>
		<Material Name="gs_frame_mat">
			<Description><![CDATA["Frame Surface"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="gs_sash_mat">
			<Description><![CDATA["Sash Surface"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="gs_glass_mat">
			<Description><![CDATA["Glass Surface"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>24</Value>
		</Material>

		<!-- ac_details: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="ac_details">
			<Description><![CDATA["Computed Oversize Values"]]></Description>
			<Fix/>
		</Title>
		<Length Name="ac_left_oversize">
			<Description><![CDATA["AC Left Opening Oversize"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ac_right_oversize">
			<Description><![CDATA["AC Right Opening Oversize"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ac_upper_oversize">
			<Description><![CDATA["AC Upper Opening Oversize"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ac_lower_oversize">
			<Description><![CDATA["AC Lower Opening Oversize"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<String Name="ifc_optypestr">
			<Description><![CDATA["IFC Operation"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value><![CDATA["Не определена"]]></Value>
		</String>
		<Integer Name="ifc_optype">
			<Description><![CDATA["IFC Operation"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Length Name="ifc_LiningDepth">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ifc_LiningThickness">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ifc_MullionThickness">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<RealNum Name="ifc_FirstMullionOffset">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<RealNum Name="ifc_SecondMullionOffset">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<Length Name="ifc_TransomThickness">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<RealNum Name="ifc_FirstTransomOffset">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<RealNum Name="ifc_SecondTransomOffset">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<Length Name="ifc_WindowPanel">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="4">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0</AVal>
				<AVal Column="3" Row="1">0</AVal>
				<AVal Column="4" Row="1">0</AVal>
			</ArrayValues>
		</Length>
		<Integer Name="iRevealOnSymbol">
			<Description><![CDATA["Show Reveal on Symbol"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>

		<!-- gs_head_symbol: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Boolean Name="gs_head_symbol">
			<Description><![CDATA["Head Depth on Symbol"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<LineType Name="gs_head_symbol_line">
			<Description><![CDATA["Head Depth Symbol Line Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>21</Value>
		</LineType>
		<PenColor Name="gs_head_symbol_pen">
			<Description><![CDATA["Head Depth Symbol Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>6</Value>
		</PenColor>

		<!-- gs_parapet_wall_inset: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Boolean Name="gs_parapet_wall_inset">
			<Description><![CDATA["Wall Inset"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_parapet_inset_thk">
			<Description><![CDATA["Depth of Inset"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<String Name="gs_parapet_sizes_st">
			<Description><![CDATA["Wall Inset Sizes"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Автоматически"]]></Value>
		</String>
		<Integer Name="iParapetSize">
			<Description><![CDATA["Wall Inset Sizes"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Boolean Name="gs_parapet_autodim">
			<Description><![CDATA["Auto Width and Height Dimensions"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="gs_parapet_width">
			<Description><![CDATA["Parapet Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="gs_parapet_right">
			<Description><![CDATA["Overhang Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_parapet_left">
			<Description><![CDATA["Overhang Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_parapet_height">
			<Description><![CDATA["Parapet Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.9</Value>
		</Length>
		<Boolean Name="gs_parapet_2D">
			<Description><![CDATA["Show Hidden Parapet"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<String Name="gs_parapet_bottom_st">
			<Description><![CDATA["Wall Inset Bottom at"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Текущий Этаж"]]></Value>
		</String>
		<Integer Name="iParapetBottom">
			<Description><![CDATA["Wall Inset Bottom at"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Length Name="gs_parapet_botelev">
			<Description><![CDATA["Bottom Overhang"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<LineType Name="gs_parapet_line">
			<Description><![CDATA["Hidden Parapet Line Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</LineType>
		<Integer Name="gs_ui_current_page">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="gs_ui_sub_tabpage_closure">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>

		<!-- gs_list: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_list">
			<Description><![CDATA["Parameters for Listing"]]></Description>
			<Fix/>
		</Title>
		<Boolean Name="gs_bOpeningToZone">
			<Description><![CDATA["Window belongs to the Zone into which it opens"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<RealNum Name="gs_list_cost">
			<Description><![CDATA["Cost"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="gs_list_manufacturer">
			<Description><![CDATA["Manufacturer"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_note">
			<Description><![CDATA["Note/Remarks"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_location">
			<Description><![CDATA["Location"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_accessories">
			<Description><![CDATA["Accessories"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_glazing">
			<Description><![CDATA["Glazing"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_headdet">
			<Description><![CDATA["Header Detail"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_jambdet">
			<Description><![CDATA["Jamb Detail"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_silldet">
			<Description><![CDATA["Sill Detail"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_hwsetno">
			<Description><![CDATA["Hardware Set"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_optype">
			<Description><![CDATA["Operation Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_finish">
			<Description><![CDATA["Finish"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_elevation">
			<Description><![CDATA["Elevation"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_hings">
			<Description><![CDATA["Hinges"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_lockset">
			<Description><![CDATA["Lockset"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<RealNum Name="gs_list_glassarea_tmp">
			<Description><![CDATA["Total Glazed Area"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<Boolean Name="gs_list_glassarea_override">
			<Description><![CDATA["Override Glazed Area"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<RealNum Name="gs_list_glassarea">
			<Description><![CDATA["Total Glazed Area"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<RealNum Name="gs_list_glassperimeter">
			<Description><![CDATA["Total Glass Perimeter"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="gs_list_heattransfer">
			<Description><![CDATA["U-value"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Boolean Name="bEnableNEDFireRating">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bEnableDACHFireRating">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<String Name="gs_list_firerating">
			<Description><![CDATA["Fire Rating"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="iNEDFireRating">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Length Name="NEDFireRatingPos">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Boolean Name="gs_list_FR_bSelfClosing">
			<Description><![CDATA["Self-Closing"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<String Name="gs_list_FR_indexSelfClosing">
			<Description><![CDATA["Self-Closing Index"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["2"]]></Value>
		</String>
		<String Name="gs_list_FR_expression">
			<Description><![CDATA["Fire Rating Expression"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_ventilation">
			<Description><![CDATA["Ventilation"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_acousticrating">
			<Description><![CDATA["Acoustic Rating"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_Type">
			<Description><![CDATA["Group Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Другой"]]></Value>
		</String>
		<Integer Name="iFMType">
			<Description><![CDATA["Group Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>25</Value>
		</Integer>
		<String Name="FM_InventoryNumber">
			<Description><![CDATA["Inventory No."]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_SerialNumber">
			<Description><![CDATA["Serial No."]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_ProductionYear">
			<Description><![CDATA["Production Year"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<RealNum Name="FM_ObjectWeight">
			<Description><![CDATA["Object Weight"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="FM_ObjectWeightUnit">
			<Description><![CDATA["Object Weight Unit"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["кг"]]></Value>
		</String>
		<Integer Name="gs_list_orientationDef_m">
			<Description><![CDATA["Window Orientation Definition"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<String Name="ac_OpeningSide">
			<Description><![CDATA["Window Orientation"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
	</Parameters>
	<WDFrameExpression>
		<F><![CDATA["gs_frame_thk"]]></F>
		<F><![CDATA["ac_left_oversize"]]></F>
		<F><![CDATA["ac_right_oversize"]]></F>
		<F><![CDATA["ac_upper_oversize"]]></F>
		<F><![CDATA["ac_lower_oversize"]]></F>
		<F><![CDATA[""]]></F>
	</WDFrameExpression>
</ParamSection>

<CalledMacros SectVersion="2" SectionFlags="0" SubIdent="0">
	<Macro>
		<MName><![CDATA["GetDWSymbSettings"]]></MName>
		<MainGUID>7EB1AF80-DC0B-4BAF-96D2-822C4913C299</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["PlasterGeometry"]]></MName>
		<MainGUID>98FA003A-2EEA-11E0-AF68-03A0DFD72085</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["RevealGeometry"]]></MName>
		<MainGUID>1BADC4DE-6D3E-11E1-9330-72D24824019B</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["FramingGeometry"]]></MName>
		<MainGUID>B87A0BAF-392D-4731-A4CB-4EAC7D83BF43</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["WallholeStructure"]]></MName>
		<MainGUID>5E86C21E-409C-454E-9513-CFF4F3149920</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["LibraryGlobals13"]]></MName>
		<MainGUID>9137124A-DDF2-4A06-A532-5FC0CE873258</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["ui_tabIDlistHierarchy_m"]]></MName>
		<MainGUID>8D3FA40B-0E02-4FD9-B890-741FFA7BCDC8</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["ui_Description_m"]]></MName>
		<MainGUID>F92D662A-41C8-488C-8D95-330ABB192F6B</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["ui_WallOpening_m"]]></MName>
		<MainGUID>922ECE6E-C9AA-48CE-84B1-4D539899F2D3</MainGUID>
	</Macro>
</CalledMacros>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="1" length_in_bytes="481" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D494844520000000E0000
	000E08060000001F482DD100000006624B474400FF00FF00FFA0BDA793000001
	8C494441542891AD91CB4B025114C6BF3B332A6333A989540699653E02C17C5D
	14A345F470DDAAD7BF5021FD03B54DD761D0B65AB56ED92208DA852DA25D51B9
	7282B0521CEF6D110E65136D3ACB73CEC7EF7CE703FEBBE8746A3F359D3E0140
	CCE6A2593318CBA6643B2B3914362A28BE8A567DB8EDDE11CC84BDAABEBBB1A4
	D9B7D66A8AC3CE8A66D41FC2709C262481A7FAFB7462B332B89C6C3098A4F9BF
	AC2139953E3BDC1F63514A7994527E7AECE3F15CFAA69BFA8DD8A12DCEBC9066
	8BA0D92298CBBCC2A5B68742F1CCFCAF42A58797D65734D96AE1468F10A0B056
	53547BBB682AFC4A038044A48144A4010058C8D6A1AAEDE1F1249DEDEC1B718C
	04868E3657B5402CD42000E071E9484EBCC3E76D8110C0ED60B68B2B3956BD7F
	DA3388DD340028940650280D18A7E573752832F30727333306D11FF41E6C2C6B
	E10E0D00C2234DCC67EBF0795B9F9E08E07632CBE5B51C7ABC7B3C9000401048
	75A7EC11B6CB9E6FD14822D74509BA6C650D9B155C12191345FE86EE6CCC2A40
	69AFFC66317E51A99C3F03C007C40F77771DFF36FB0000000049454E44AE4260
	82
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="19" length_in_bytes="1989" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000001240000
	00520803000000CA2B59B60000000467414D410000B18F0BFC61050000030050
	4C5445000000D2D2D2F0F0F0FFFFFF0000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	000000B5990A220000010074524E53FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFF0053F70725000000097048597300000EC200
	000EC20115284A800000001974455874536F667477617265005061696E742E4E
	45542076332E352E38373B805D0000032049444154785EED9C5B7683300C4469
	BAFF35A7BC7168882F204D1195DB9CF643C89A8B2C1CC527CDB3369AE7B3FDED
	5EDD9FDB8C3DB2EAC29BC964FEE716A0F6C822909A69DC82CE28621605EE3D81
	34BBBD17242E0B40CA9A548774A7F439A805411A9F6E07A7B8EC655816827459
	99A2C010248C5C14B4D13458168264145458370812461E0B03968520C5D26E1F
	2D828491DBC7E7E911CB42903C238DE0BB780BC3FF8D206C2B46AEF2A4E5BF83
	F40546D3DA74AF6180B7CD4729B637EFE8A5F4BAA610F222EB0387E51200CB1B
	12AEA494C81BBB0212574C2C7F6792DF0DF7F3DC12EBDA91B24CF25B15AE8C5A
	422524921F43812196EB4C2ABB7AEDB4263FC3CA9819D9389DBD944FAAA5B8EE
	D14F381536FDED3851153E5CEAE4769E5199495E1F9CF4F7DBCBF998A8BA9AE4
	934712AFC2A79B448FCB249949006B66D23E48AF0FED283B6EA0F1B449661240
	9835691F24BC3F243BEE938D1574F95A1EBAC8C408A03A0509F8A7266B48F43A
	6CB709147860901E8F47D37CAFC69112B8199100D2EFF87B59096921F0EE2627
	A455862424B264DE948BCCA4CC24903A0929102493CDDCE044B099CC2D4035B5
	F2E95645D47DA49A9954C59490AA88329300A2849490100160E45F9336364420
	366A2268951C1781DA29869BC62D5782CDA43724D03B0E6A62D8742BCF7B04A5
	F1EE3C57270B2D255034BCCE905C01B72D24EF53317F40AC3F7D989954276F0B
	2933E9736112D624C119E5D7EC0A98498A33CA0B24979AA459719A59A623ACD6
	992459759249FAE393DDC95CF3A7DBB2AB373992BC3E833CAF8221938C8F2897
	FE5EBE0B226026096B924F26791E1D5ED2A85F6E8AB234CE619B49F57D59488B
	84046E1B83847A4560B6A026483E330A4A0084FDDFF50344D0043D4890119CF0
	6266481A32BA9830793808123292876E322192868C4CC209EC04414246312120
	69C828A67EBBA8112464641793D21392868C94515F712E04091919A953CE451B
	0E34266A771695AC333974F6D840767E5F04B00E72E8A9AAC6D878AB4EC7629A
	DE063A7655A748A76698E3547D6B781C554038E37499C49700525731B2CD2461
	EC2CB52D107151CA9890B236A0CBC5F40358D6A375D7A91AF70000000049454E
	44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="20" length_in_bytes="1862" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000580000
	00CC0803000000C0BC9453000000017352474200AECE1CE90000000467414D41
	0000B18F0BFC610500000300504C5445000000D2D2D2F0F0F0FFFFFF00000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	00000000000000000000000000000000B5990A220000010074524E53FFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0053F70725
	000000097048597300000EC300000EC301C76FA8640000001974455874536F66
	7477617265005061696E742E4E45542076332E352E38373B805D000002944944
	4154785EED5B4B76C3200C24EDFDCF9C260103D61F192FF23AB4BB388A186624
	194479B251CA637194225881E10301091D60DCD10114800241A8218058D1A900
	280005EA8A568AA1C4EA3529A0D0A0289F7147E1FD36CBFF9EF455A13A600FE2
	DECBDDFA7F1A19C3C4BFEA3185831BFE390F093FE2DBCB5D0EF426C31128521E
	470CB38513D6FC84F207E3CCE20D4405BABE3E8CB2E2F73CA6C51385F0E143C8
	63D5B02CB183103E8F758F198E2BE9BF94A461785C610E84CD8D1853A5198BC7
	C3B9F5AAB06058565E179FF0BBE31B26142B1E57EC876EB761DCEC76CB7B3D9E
	E8B2D5E39987DFE831CF202A19ACE846252954145E0609F2F828A5FA2694AA8A
	692296720E715A86D79537CD161E1F608C35EB985C6105301624098C0728501E
	94C7D2992990E54A68AE2B9041427403C6A14ACAAB6BC0E358A047EDB6A7A2FF
	3FD1CDC72BF384A7E78CCDFA322EEE859C5ED22DDBF2BE5B352CEEADBE271298
	8CF158DDD31347C0709BB3F4750D8A90C3EF69196EA9FB9EB185532CAB8B17B2
	6A612C13A3ED86BA305756488FB95F0D792E3C74A7616FF1D26F4DDE64D3591A
	1E576803AC00C6D72B21F0B8D30DCA83F2881CD4BA623A60C9D6C7501E94C7E9
	065680156085A602C4E351F11918B58FBEA53E9EBB1592E7D26EEDC60FA6077E
	8153625592E9B37FDFE3649F90B7BFB2D5E3B9C92ADD5F216F08055B4DD48419
	8915D95E2CFAA39C5DC93E21CA8A25C32B3CE65D9049BA718FCF77D2B6B1021E
	8FD84F6E62A531BEB078F7B5575E6C083532881A73855811686C8E34DDDED77F
	7C57C774A44D38D7D84CFBD2535DE952F338CB0181C5F30A0D397D5CBF72DB1A
	9B790659BCCAFB20671642A77BDD47C5ADCD036B40A166109F7CB8CC837B4D9C
	25600558015618D11302814020904581FC01ED7418C667C30415000000004945
	4E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="21" length_in_bytes="123" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D494844520000006B0000
	000A010300000089D932B000000006504C5445FF000000000041A31203000000
	0174524E530040E6D8660000001949444154785ECDC031010000008230FBA7A4
	89BE466091E863690E0DD4F1E49D530000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="22" length_in_bytes="166" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000260000
	00190403000000AF3F41E500000012504C5445FF0000CCCCCCCECECE000000D4
	D0C7FFFFFF18FE8AFF0000000174524E530040E6D8660000003849444154785E
	D5CCB10D00201002C05F0199E059C119DCC0FD6711BB4FAC4DF40A0A42881FF5
	53004DD8940E0E7357715AEDDEDE296FFD2DB9F8251EA1C39AA7000000004945
	4E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="23" length_in_bytes="168" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000260000
	00190403000000AF3F41E500000012504C5445FF0000FFFFFF000000D4D0C7CC
	CCCCCECECEEDEEA1C40000000174524E530040E6D8660000003A49444154785E
	D5CFC1090020140250776883688176B00D72FF55920EFDA06B877A471141FC28
	9F90AC906CE2A44E5473B65BBDF0662F7E5CDF1B8A4944C0C977759900000000
	49454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="24" length_in_bytes="147" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D494844520000006B0000
	00260203000000BE178D2D00000009504C5445D4D0C7FFFFFF000000358A445D
	0000003B49444154785EEDD2311100200C43D11C0A8A27245034F6A212030D63
	59FAD6DCDF8229199656D8754729E007A9E1FBC3C6DCB3ABDF28457F3065170D
	E4AF219C3BE3A10000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="25" length_in_bytes="171" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000260000
	002104030000004716C42500000012504C5445FF0000000000CCCCCCD4D0C7FF
	FFFFCECECEE9B409AA0000000174524E530040E6D8660000003D49444154785E
	D5CD410D00200C43D15AA804A6610E400109FEADD0DBC2B88FF08E3F4D0A3B34
	4A6E436ADB9A55BF94FCDB25371758885D78BEE30D1FDAAB2845AC42F61D1E00
	00000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="26" length_in_bytes="177" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000260000
	002104030000004716C42500000012504C5445FF0000000000FFFFFFD4D0C7CC
	CCCCCECECE3EBE19620000000174524E530040E6D8660000004349444154785E
	D5CFC10900200C03C0AE507002DDC0197403BBFF2A063FA1EA5328DEAF21102A
	0AA939922132EBB66E1BEF37AEFF56D8770BB88C3D628F027B7A920F4D413E66
	356795DE5F0000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="27" length_in_bytes="124" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D494844520000006B0000
	000A010300000089D932B000000006504C5445FF000000000041A31203000000
	0174524E530040E6D8660000001A49444154785ECDC031010000008230FAA7B4
	89BE4660F4058701B3BC0DD4094610870000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="28" length_in_bytes="1929" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000001240000
	00520803000000CA2B59B6000000017352474200AECE1CE90000000467414D41
	0000B18F0BFC610500000300504C5445000000D2D2D2F0F0F0FFFFFF00000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	00000000000000000000000000000000B5990A220000010074524E53FFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0053F70725
	000000097048597300000EC300000EC301C76FA8640000001974455874536F66
	7477617265005061696E742E4E45542076332E352E38373B805D000002D74944
	4154785EED9CE17683200C4659F7FECFECB0A25557CCAD841CA071EB597F7C86
	7CB70169661B26E908D3147FE7C7FC6798E3135BB2F1B04AB6274380FAC41681
	14D663083AC9C4660ABCF604D216762C48DC1680E46B920C69A4F2B9E905414A
	57B79B43347B1AB68520356BD32831040923374A5A69186C0B41524AAADB3008
	1246DE17066C0B41EACBBB7EB6081246AE9F5FCD88D816825433D31E62EFDEC2
	F0A73D18CBE5C85D162ABF0ED20F3842D4CC8FE5006F9B1BA61876460EB62E38
	BC4E01B00683C41D13A55712A174D00C33DDB07334DDBC9230CFE1166EECDC2B
	09A042908E717C4D7ACBD5D724506E5E490092571280E4950420792501485E49
	32A4C2C60A3AFDDC374027A98864FFBB0E485E9CCD05C4A79233247A1ED69598
	209BC9101E8F4708BFA763D799C1A966850690FEE7FFB40572471A872493F44A
	9219C57EAD4F371193431211CD9D7FAF2411934312115D5492CA666E0962B099
	F42D80F85ABFDBE7F93EE984CD21897534AF193EDD444C0E4944E495041039A4
	4620653644283B26326895DC37C15A258ABBC64C2883CD646D480DDF9455989A
	62D32D6632E01DA8CFBB6FD154024B46DFFFFCBF2E355D485E49D7E5E49544A7
	9B579257D22501B4B8E30F61145E8F8DAFA155AE6EF5679CE1EA97CC685FDDEA
	3B0886BBB1E8A64225BD76F531BAFECF3253B762D51F608B78F82E88FE2AC972
	4DAA5349260EEA2F7BEBB5A5CA9A547CE1420162EA769C9EF31B5DDEE9661279
	EC4FC420A156517FE669C6C83E13D121FBD37DBB7FBD570C2D9348A497936524
	640D892CB36E712C0409895A7427E784AC21913CD6D80A040989FAE484AC2151
	9FFEF5B2469090482F27CB48C81A125966DDE25808121269B87B73F3A446D88B
	18C81A12EDBB613593B6EBA52F2E54CDC7A61E8D57CCD06CA01912EC17B39CB6
	2FBFADD7554D74D77CEA0D9422274BE8454590EC2A09A5838C11916E25F1E94B
	72CB6B6C19E9AE4965CEF9D9E9B301C6A8E4FCFE007FBE1F08BE5FEF10000000
	0049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="29" length_in_bytes="1797" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000580000
	00CC0803000000C0BC9453000000017352474200AECE1CE90000000467414D41
	0000B18F0BFC610500000300504C5445000000D2D2D2F0F0F0FFFFFF00000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	0000000000000000000000000000000000000000000000000000000000000000
	00000000000000000000000000000000B5990A220000010074524E53FFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0053F70725
	000000097048597300000EC300000EC301C76FA8640000001974455874536F66
	7477617265005061696E742E4E45542076332E352E38373B805D000002534944
	4154785EED5BC196C3200874B3FFFFCD595DA3690081A01EF6EDD863FBA6741C
	10C9349D6CA5F4F572A524A000B83120B1038E3B3BA00254A0085D0CA0567429
	800A5081BEE26AC5D062F59E14548CA848BF6B47E39D618F74D2D749AF0A3500
	7D91F0D2918133F2734580497435624A07073E9E4BE28FC49623E6442F02F650
	118AD803CC368EEDB8C47164F36E4605B9E637BDAAF87EAE8FCD1313A1E8C127
	B721B09C624D10B68EC711331EDF1CFF2905811171A5D9513617724C334DD93C
	5ECEB5ABC20B6039F32A15C3F7DA776B727B1331FDEC328E5F012362ADD6F404
	B155C14F9021B5F6377E1C12BCA5B04E10A78E5B2BD58750D66F1CD40A26370D
	782AF31071E3FADEB3CE095421503155DDA06397DCC0B15DCF3D7D05AA9B4B6E
	3841D6F415A86E2EB9A1BAA1BAB541B49D78E6EDB1F4E6FF27F31C84053EE2B9
	A70460CBD55F1E9D79C1C647531EEA95E15B708D07B305370E5C469A833517B0
	3245A9E3CDF852229EC255A8B8E69E51F861EF170534C9DB096C6187AB9BF5AB
	5460ED9446C4951D8B07EB6802C7AE4E083AEE72B314875A712B2A7AFB07C7A8
	6EA4E4CC0E9BB4090BAA1BAA1B971B5401554015C3BBB4DD7BEFEB84B4C7C753
	1D7DF4B9B4592BA2FE0AB3138AFA8410B1BFBAADE298AB2BE813E226AF453E21
	AA0AEE82842DAD3BB88354FC3D8E273C85FBEC95938650C5D924D75CAF853564
	BADDE73FDEE598F6F88F63C6E625AE74D1D86C679E6576670F2DE4C9FFFC5F6E
	2F63B315B1FDC75E12B1E074AF7354FC6BB3710D2AEE011E540155B09B021204
	09C2AF8F5005540155F4E302546CA7E2076B4542EEC01A3E6E0000000049454E
	44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="31" length_in_bytes="564" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000580000
	00CC0403000000054C79520000000774494D4507DD0A100D1E10B9F356870000
	00097048597300000AF000000AF00142AC34980000000467414D410000B18F0B
	FC61050000000C504C5445FF0000000000D2D2D2FFFFFF23D080EE0000000174
	524E530040E6D866000001944944415478DAED99598E83300C40CD0DECE104C3
	0D50EE7FB721A481784930A3569DC5AEFA51F5F5E1242E8B035083964E10E808
	38E08003F6C0D3ABE08948C19FA4A2020880D31E2318F798B25D98B1A688C063
	8389D00F03DE302BF84815458C61B96AA8E139A5B4AEDB5BC0FB3C5B709A356C
	E6DC33F3E57E84CF7CC2F3A5B9FE2EC3FB6B64AE2B3FA7359B6DB8CD1A0B9CDD
	74617EA4B1529E8D75F6E45C86981279CC99EDAEA0363B6A43C3A5D458D52973
	2A51D2107E75B41696898ECDD6B17B6609FF7333FC4133ABE72B73AFF82DF347
	3E87E51399C7CCE1308739CC610EF3BBCCAF0B79C7C8835F599A5B7B5483DD52
	6649630B1813C04788BD2FE481056CCD6CCF6C89257C7CDC2EAA8A27848B957C
	52C801DEAA8D61D58539CC610E7398C3FCFBCCC3A76318C257E6EFB72C9E632E
	693ACDE556EDF9391F53E631DB70CF5C9AA88BCFEC817F88D90B5BFDE7A5DB36
	343ADB0BAFE7A6AA2718C2BCD5699AABC868CFCA4D81212CB71B86B0DCC83873
	961B19ED3F78009F6609AB68F753BCB0B553D337C39D34020E38E0800356F017
	D27F97047008B6C00000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="32" length_in_bytes="570" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000580000
	00CC0803000000C0BC94530000000774494D4507DE05160E1814CB2D31E20000
	00097048597300000E7400000E74016B24B3D60000000F504C5445FF00000000
	00D2D2D2F0F0F0FFFFFFCAB67D440000000174524E530040E6D866000001A749
	44415478DAED9B8B6E83300C0031E3FFBF792A2D1990879DD86C6B39A3564854
	C7C9351625EE346521327786C86409C0800103060C183060C080EF09963703CB
	231EF4E376068B25CE6A52F21E031FDD76F806F8EB147A11C84F42E2C186545C
	062EA4B4BD39C08AB0B12A9657C8F2DCD5C0DBB9CDE01757059B53D16B5CBFA4
	4F11675C028BDF38FB54B24DAF31E3225836E30EB0C938BDAD6708337E265A36
	7294F1FE0B5CC951C65BC1F55E7926E3885E6101EFFB58B5BBE9C6CB3176C64D
	7BDDB80AB666B3DFB869E530B66613E37B197B02E3DF306EF4639F716FA3B71A
	A79BADB41364DC02638C31C618638C31C618BF73F86EC5A479C4F3AB75F0B4AA
	AFB40F5F910A67C5389E2A8C82D323F661F0075D23AE26E4AAA8D1EE8631C618
	638C31C618638C31C618637C0FE3D1B526D722D6658BB13EE3BF583EC678C838
	AFAE20E32E709FF17C88B005EF3030C6D71B3BC0E5E66C9CDB9CFB67B16C93A6
	F340A3AF8D57EA60655B1FC36669CAC16363C2599AA2C086540C1A2B53E9C6E9
	F12CC7A562E9071753A181F5A8CCD187836B374BFFF9DF15800103060C183060
	C080013FE21B6BC534280D10CF4C0000000049454E44AE426082
	]]>
</GDLPict>

<Copyright SectVersion="1" SectionFlags="0" SubIdent="0">
	<Author>GRAPHISOFT</Author>
	<License>
		<Type>CC BY-ND</Type>
		<Version>3.0</Version>
	</License>
</Copyright>

</Symbol>
