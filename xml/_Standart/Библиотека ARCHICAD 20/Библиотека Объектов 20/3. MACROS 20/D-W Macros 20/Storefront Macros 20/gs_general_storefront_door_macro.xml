<?xml version="1.0" encoding="UTF-8"?>
<Symbol IsArchivable="true" IsPlaceable="false" MainGUID="515D0ECC-79F7-4ED6-ABE7-C2BF3C9D7B66" MigrationValue="Normal" Owner="1196638531" Signature="1196644685" Version="38">
<Ancestry SectVersion="1" SectionFlags="0" SubIdent="0" Template="false">
	<MainGUID>F938E33A-329D-4A36-BE3E-85E126820996</MainGUID>
	<MainGUID>103E8D2C-8230-42E1-9597-46F84CCE28C0</MainGUID>
	<MainGUID>6ACDA889-69B2-4EC5-936C-CB1DA7032A92</MainGUID>
	<MainGUID>F6AE9687-2BC7-4D47-88C9-8F793E1DE2D6</MainGUID>
	<MainGUID>11E85B84-8DD1-491B-A2FE-337454A91545</MainGUID>
	<MainGUID>4C454F1B-EBE2-41D6-ABBF-29259AF178AC</MainGUID>
</Ancestry>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_3D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
! Contact person: <SzL, NJ>

lod3D = 0										! Don't draw anything
if iDWDet3D = DETLEVEL_DW3D_SIMPLE then lod3D = 1	! Simple
if iDWDet3D = DETLEVEL_DW3D_DETAILED then lod3D = 2	! Detailed
if iDWDet3D = DETLEVEL_DW3D_CHI_SIMPLE | iDWDet3D = DETLEVEL_DW3D_CHI_DETAILED then
	if (GLOB_CONTEXT = 4 | GLOB_CONTEXT = 24 | GLOB_CONTEXT = 6) then
		lod3D = 5								! Chinese
	else
		lod3D = 2
	endif
endif

gs_fillFr		= gs_bFills * gs_fillFr
gs_penFr_fg		= gs_bFills * gs_penFr_fg
gs_penFr_bg		= gs_bFills * gs_penFr_bg

gs_fillLeaf		= gs_bFills * gs_fillLeaf
gs_penLeaf_fg	= gs_bFills * gs_penLeaf_fg
gs_penLeaf_bg	= gs_bFills * gs_penLeaf_bg

gs_gsect		= gs_bFills * gs_gsect
gs_penGlass_fg 	= gs_bFills * gs_penGlass_fg
gs_penGlass_bg 	= gs_bFills * gs_penGlass_bg

gs_FillSdl		= gs_bFills * gs_FillSdl
gs_penSdl_fg	= gs_bFills * gs_penSdl_fg
gs_penSdl_bg	= gs_bFills * gs_penSdl_bg

xpltp = 0
xprtp = 0
xpr = 0
xpl = 0


! =============================================================================
! GS Storefront Door Functions
! =============================================================================

call "GS Storefront Door Functions",
	parameters all	lod3D						= lod3D,
					bEnableVentilationProfile	= bEnableVentilationProfile,
					bEnableParapetInset			= bEnableParapetInset,
					bEnableMasonryArch			= bEnableMasonryArch,
					bEnableSill					= bEnableSill,
					bEnableBoard				= bEnableBoard,
					bEnableFaschen				= bEnableFaschen,
					bEnableThreshold			= bEnableThreshold,
					bEnableCasing				= bEnableCasing,
					bEnableShutter				= bEnableShutter,
					bEnableCustomCornerLeft		= bEnableCustomCornerLeft,
					bEnableCustomCornerRight	= bEnableCustomCornerRight,
				! --- Corner Functions
					bLeftCornerFunction	 		= gs_cl,
					leftCornerAngle		 		= leftCornerAngle,
					leftConnWallThk		 		= WALL_THICKNESS,
					bRightCornerFunction 		= gs_cr,
					rightCornerAngle	 		= rightCornerAngle,
					rightConnWallThk			= WALL_THICKNESS,
					gs_left_oversize			= gs_left_oversize - gs_cl * abs((gs_fthk)*TAN(90-leftCornerAngle/2)),
					gs_right_oversize			= gs_right_oversize - gs_cr * abs((gs_fthk)*TAN(90-rightCornerAngle/2)),
	returned_parameters	ac_unit_width,
						ac_unit_height,
						gs_frame_ovhg_left_out,
						gs_frame_ovhg_right_out,
						gs_frame_ovhg_top_out,
						gs_frame_ovhg_bottom_out,
						gs_frame_ovhg_left_in,
						gs_frame_ovhg_right_in,
						gs_frame_ovhg_top_in,
						gs_frame_ovhg_bottom_in,
						gs_fthk,
						bMirrored,
						xform11, xform12, xform13, xform14,
						xform21, xform22, xform23, xform24,
						xform31, xform32, xform33, xform34,
						bOplines3d,	opLineType3dIn,	opLineType3dOut, opLineTypeSecondary, gs_opline_style_m, gs_opLinePen,
						bShowAddHotspots, bShowAddHotspotsForIS, bShowUnitHotspots, bShowEgressHotspots, bShowLeafHotspots


if lod3D = 0 then end

xform	xform11, xform12, xform13, xform14,
		xform21, xform22, xform23, xform24,
		xform31, xform32, xform33, xform34
ROTx 90

if (gs_cl | gs_cr) & gs_opening_dir_sl_m = OPENING_DIR_FLIPPED_INSIDE then
	leftCornerAngle = 360 - leftCornerAngle
	rightCornerAngle = 360 - rightCornerAngle
endif



! =============================================================================
! Chinese Specific
! =============================================================================

if lod3D = 5 then
	! Move the whole door to middle of wall with half of the original thickness
	if WIDO_REVEAL_SIDE then
		addz (WIDO_SILL - WALL_THICKNESS/2 + gs_fthk/4) + gs_fthk/2
	else
		addz -(WIDO_SILL - WALL_THICKNESS/2 + gs_fthk/4)
	endif

	if abs(gs_frame_thk) > EPS then
		gs_frame_thk	= gs_frame_thk/2
	else
		gs_frame_thk	= gs_leaf_thk/2
	endif

	gs_hor_gnum 		= 0
	gs_ver_gnum 		= 0
	gs_hor_gnumtr		= 0
	gs_ver_gnumtr		= 0
	gs_hor_gtp			= 0
	gs_ver_gtp			= 0
	gs_gsb				= 0
	gs_wthk				= 0
	gs_fthk				= gs_frame_thk
	gs_glass_thk		= gs_frame_thk
	bEnableDoorStop 	= 0

	fr_sect_fill_type	= gs_FillSdl
	fr_sect_fill_fg		= gs_penSdl_fg
	fr_sect_fill_bg		= gs_penSdl_bg

	sh_sect_fill_type	= gs_FillSdl
	sh_sect_fill_fg		= gs_penSdl_fg
	sh_sect_fill_bg		= gs_penSdl_bg

	gl_sect_fill_type	= gs_FillSdl
	gl_sect_fill_fg		= gs_penSdl_fg
	gl_sect_fill_bg		= gs_penSdl_bg
else
	fr_sect_fill_type	= gs_fillFr
	fr_sect_fill_fg		= gs_penFr_fg
	fr_sect_fill_bg		= gs_penFr_bg

	sh_sect_fill_type	= gs_fillLeaf
	sh_sect_fill_fg		= gs_penLeaf_fg
	sh_sect_fill_bg		= gs_penLeaf_bg

	gl_sect_fill_type	= gs_gsect
	gl_sect_fill_fg		= gs_penGlass_fg
	gl_sect_fill_bg		= gs_penGlass_bg
endif


! =============================================================================

if gs_wthk then
	if WIDO_REVEAL_SIDE then
		addz -WALL_THICKNESS + WIDO_FRAME_THICKNESS + WIDO_SILL
	else
		addz -WIDO_SILL
	endif
endif

! =============================================================================
! Hotspots
! =============================================================================

nFlipTrans = 0
if bOpeningDirectionSL then
	addz gs_fthk
	mulz -1
	nFlipTrans = 2
endif

unID=50

if gs_full_edit=1 then
	!! MIDDLE RAIL HEIGHT !!
	if bEnableMiddleRail then
		if bMiddleRail then
			hotspot (ac_unit_width/2-gs_fw_side_right)*gs_sidelight_right+(ac_unit_width/2-gs_fw_side_right)*not(gs_sidelight_right),  0, 0, unID, midRailElevation,1+128
			unID=unID+1
			hotspot (ac_unit_width/2-gs_fw_side_right)*gs_sidelight_right+(ac_unit_width/2-gs_fw_side_right)*not(gs_sidelight_right), -1, 0, unID, midRailElevation,3
			unID=unID+1
			hotspot (ac_unit_width/2-gs_fw_side_right)*gs_sidelight_right+(ac_unit_width/2-gs_fw_side_right)*not(gs_sidelight_right), midRailElevation, 0, unID, midRailElevation,2
			unID=unID+1
		else
			unID=unID+3
		endif
	else
		unID=unID+3
	endif

	!! TOP PANEL HEIGHT !!

	if gs_door_transom then
		hotspot (ac_unit_width/2-gs_fw_side_right)*gs_sidelight_right+(-ac_unit_width/2+gs_fw_side_left)*not(gs_sidelight_right),  ac_unit_height, 0, unID, gs_transom_height,1+128
		unID=unID+1
		hotspot (ac_unit_width/2-gs_fw_side_right)*gs_sidelight_right+(-ac_unit_width/2+gs_fw_side_left)*not(gs_sidelight_right), ac_unit_height+1, 0, unID, gs_transom_height,3
		unID=unID+1
		hotspot (ac_unit_width/2-gs_fw_side_right)*gs_sidelight_right+(-ac_unit_width/2+gs_fw_side_left)*not(gs_sidelight_right), ac_unit_height-gs_transom_height, 0, unID, gs_transom_height,2
		unID=unID+1
	else
		unID=unID+3
	endif

! First Panel Width ===========================================================

	if gs_sidelight_left then
		hotspot -ac_unit_width/2,  gs_fw_lower, 0, unID, gs_sidelight_width_left,1+128
		unID=unID+1
		hotspot -ac_unit_width/2-1, gs_fw_lower, 0, unID, gs_sidelight_width_left,3
		unID=unID+1
		hotspot -ac_unit_width/2+gs_sidelight_width_left, gs_fw_lower, 0, unID, gs_sidelight_width_left,2
		unID=unID+1
	else
		unID = unID + 3
	endif


! End Panel Width =============================================================

	if gs_sidelight_right then
		hotspot ac_unit_width/2,  gs_fw_lower, 0, unID, gs_sidelight_width_right,1+128
		unID=unID+1
		hotspot ac_unit_width/2+1, gs_fw_lower, 0, unID, gs_sidelight_width_right,3
		unID=unID+1
		hotspot ac_unit_width/2-gs_sidelight_width_right, gs_fw_lower, 0, unID, gs_sidelight_width_right,2
		unID=unID+1
	else
		unID = unID + 3
	endif

! Horizontal Grids ============================================================

	if gs_hor_gnum >0 AND (gs_sidelight_right OR gs_sidelight_left) and bMiddleRail then
		for i=1 to gs_hor_gnum
			ADD  (iFrameStyleMullion = FRAME_STYLE_BUTT_GLAZED)*gs_fw_side_right, gs_fw_lower-gs_grid_w/2,0
			hotspot (ac_unit_width/2-gs_fw_side_right)*gs_sidelight_right+(-ac_unit_width/2+gs_fw_side_left)*not(gs_sidelight_right),  0, 0, unID, gs_hor_d[i],1+128
			unID=unID+1
			hotspot (ac_unit_width/2-gs_fw_side_right)*gs_sidelight_right+(-ac_unit_width/2+gs_fw_side_left)*not(gs_sidelight_right), -1, 0, unID, gs_hor_d[i],3
			unID=unID+1
			hotspot (ac_unit_width/2-gs_fw_side_right)*gs_sidelight_right+(-ac_unit_width/2+gs_fw_side_left)*not(gs_sidelight_right), gs_hor_d[i], 0, unID, gs_hor_d[i],2
			unID=unID+1
			DEL 1
		next i
	else
		unID = unID + 3*gs_hor_gnum
	endif


! Horizontal Grids Transom ====================================================

	if gs_hor_gnumtr >0 AND (gs_sidelight_right OR gs_sidelight_left) then
		for i=1 to gs_hor_gnumtr
			ADD  (iFrameStyleMullion = FRAME_STYLE_BUTT_GLAZED)*gs_fw_side_right, ac_unit_height-gs_fw_upper-middlePanelHeight-gs_grid_w/2,0
			hotspot (ac_unit_width/2-gs_fw_side_right)*gs_sidelight_right+(-ac_unit_width/2+gs_fw_side_left)*not(gs_sidelight_right),  0, 0, unID, gs_hor_dtr[i],1+128
			unID=unID+1
			hotspot (ac_unit_width/2-gs_fw_side_right)*gs_sidelight_right+(-ac_unit_width/2+gs_fw_side_left)*not(gs_sidelight_right), -1, 0, unID, gs_hor_dtr[i],3
			unID=unID+1
			hotspot (ac_unit_width/2-gs_fw_side_right)*gs_sidelight_right+(-ac_unit_width/2+gs_fw_side_left)*not(gs_sidelight_right), gs_hor_dtr[i], 0, unID, gs_hor_dtr[i],2
			unID=unID+1
			DEL 1
		next i
	else
		unID = unID + 3*gs_hor_gnumtr
	endif


! Horizontal Grids Top Panel ==================================================

	if gs_hor_gtp >0 AND gs_door_transom then
		for i=1 to gs_hor_gtp
			ADD  (iFrameStyleMullion = FRAME_STYLE_BUTT_GLAZED)*gs_fw_side_right, ac_unit_height-topPanelHeight-gs_grid_w/2,0
			hotspot (ac_unit_width/2-gs_fw_side_right)*gs_sidelight_right+(-ac_unit_width/2+gs_fw_side_left)*not(gs_sidelight_right),  0, 0, unID, gs_hor_dtp[i],1+128
			unID=unID+1
			hotspot (ac_unit_width/2-gs_fw_side_right)*gs_sidelight_right+(-ac_unit_width/2+gs_fw_side_left)*not(gs_sidelight_right), -1, 0, unID, gs_hor_dtp[i],3
			unID=unID+1
			hotspot (ac_unit_width/2-gs_fw_side_right)*gs_sidelight_right+(-ac_unit_width/2+gs_fw_side_left)*not(gs_sidelight_right), gs_hor_dtp[i], 0, unID, gs_hor_dtp[i],2
			unID=unID+1
			DEL 1
		next i
	else
		unID = unID + 3*gs_hor_gtp
	endif

! Vertica Grids ===============================================================

	if gs_ver_gnum >0 AND gs_door_transom then
		for i=1 to gs_ver_gnum
			ADD -ac_unit_width/2+frameOrSLightWidthLeft-gridWidthVert/2, ac_unit_height-topPanelHeight, 0
			hotspot 0,  0, 0, unID, gs_ver_d[i],1+128
			unID=unID+1
			hotspot -1, 0, 0, unID, gs_ver_d[i],3
			unID=unID+1
			hotspot gs_ver_d[i], 0, 0, unID, gs_ver_d[i],2
			unID=unID+1
			DEL 1
		next i
	else
		unID = unID + 3*gs_ver_gnum
	endif
endif

del nFlipTrans

! =============================================================================
! Hotspots
! =============================================================================
! ------------------------------------------------------------------------------
! Unit hotspots
! ------------------------------------------------------------------------------

if bShowUnitHotspots then
	hotspot -ac_unit_width/2, 0, 0, 100
	hotspot  ac_unit_width/2, 0, 0, 101
	hotspot -ac_unit_width/2, 0, gs_fthk, 102
	hotspot  ac_unit_width/2, 0, gs_fthk, 103

	hotspot -ac_unit_width/2, ac_unit_height, 0, 104
	hotspot  ac_unit_width/2, ac_unit_height, 0, 105
	hotspot -ac_unit_width/2, ac_unit_height, gs_fthk, 106
	hotspot  ac_unit_width/2, ac_unit_height, gs_fthk, 107
endif

!********************* coordinates according to size types

unitleft = -ac_unit_width / 2
unitright = ac_unit_width / 2
unittop = ac_unit_height
leaftop = ac_leaf_height
egresstop = ac_egress_height

if iStorefrontType = SFTYPE_DOOR_ONLY or  iStorefrontType = SFTYPE_DOOR_TRANSOM then
	leafleft = -ac_leaf_width / 2 + (gs_fw_side_left - gs_fw_side_right)/2
	leafright = ac_leaf_width / 2 - (gs_fw_side_right- gs_fw_side_left)/2

	egressleft = -ac_egress_width / 2 + (gs_fw_side_left - gs_fw_side_right)/2
	egressright = ac_egress_width / 2  - (gs_fw_side_right- gs_fw_side_left)/2
endif

if iStorefrontType = SFTYPE_DOOR_TRSL then
	leafleft	= unitleft  + frameOrSLightWidthLeft
	leafright	= unitright - frameOrSLightWidthRight
	egressleft	= unitleft  + frameOrSLightWidthLeft + gs_ds_w * bEnableDoorStop
	egressright	= unitright - frameOrSLightWidthRight - gs_ds_w * bEnableDoorStop
endif

frameleftout	= unitleft  - gs_frame_ovhg_left_out
framerightout	= unitright + gs_frame_ovhg_right_out
frameleftin		= unitleft  - gs_frame_ovhg_left_in
framerightin	= unitright + gs_frame_ovhg_right_in
frametopin		= unittop + gs_frame_ovhg_top_in
frametopout		= unittop + gs_frame_ovhg_top_out

leftFrame = -ac_unit_width/2
if (abs(gs_tolerance_left) > EPS) then
	leftFrame = frameleftout
	if abs(frameleftout) > abs(frameleftin) then
		leftFrame = frameleftin
	endif
endif

rightFrame = ac_unit_width/2
if (abs(gs_tolerance_right) > EPS) then
	rightFrame = framerightout
	if abs(framerightout) > abs(framerightin) then
		rightFrame = framerightin
	endif
endif

topFrame = ac_unit_height
if (abs(gs_tolerance_upper) > EPS) | (bEnableVentilationProfile & bVentilationProfile & (iVentilationProfileType = VENTPROFILE_OVER_FRAME)) then
	topFrame = frametopout
	if  abs(frametopout) > abs(frametopin) then
		topFrame = frametopin
	endif
endif

! ------------------------------------------------------------------------------
! Egress hotspots
! ------------------------------------------------------------------------------
flipMod = -1
if WIDO_REVEAL_SIDE then
	flipMod = 1
endif

egressthk1 = gs_leaf_thk
egressthk2 = egressthk1 - bEnableDoorStop * gs_ds_thk * flipMod

if bShowEgressHotspots then
	if not(gs_ds) then
		hotspot egressleft, egresstop, 0, 210
		hotspot egressright, egresstop, 0, 211
	else
		hotspot egressleft, egresstop, egressthk1, 210
		hotspot egressright, egresstop, egressthk1, 211
	endif

	if gs_ds then
		hotspot egressleft, egresstop, egressthk2, 212
		hotspot egressright, egresstop, egressthk2, 213
	else
		hotspot egressleft, egresstop, gs_fthk, 212
		hotspot egressright, egresstop, gs_fthk, 213
	endif
endif

if bShowAddHotspotsForIS then
	if not(gs_ds) then
		hotspot egressleft, 0, 0, 200
		hotspot egressright, 0, 0, 201
	else
		hotspot egressleft, 0, egressthk1, 200
		hotspot egressright, 0, egressthk1, 201
	endif

	if gs_ds then
		hotspot egressleft, 0, egressthk2, 202
		hotspot egressright, 0, egressthk2, 203
	else
		hotspot egressleft, 0, gs_fthk, 202
		hotspot egressright, 0, gs_fthk, 203
	endif
endif

! ------------------------------------------------------------------------------
! Leaf hotspots
! ------------------------------------------------------------------------------

if bShowLeafHotspots then
	hotspot leafleft, leaftop, 0, 310
	hotspot leafright, leaftop, 0, 311
	hotspot leafleft, leaftop, gs_fthk, 312
	hotspot leafright, leaftop, gs_fthk, 313
endif

if bShowAddHotspotsForIS then
	hotspot leafleft, 0, 0, 300
	hotspot leafright, 0, 0, 301
	hotspot leafleft, 0, gs_fthk, 302
	hotspot leafright, 0, gs_fthk, 303
endif


! =============================================================================
! Draw Ventilation Profile
! =============================================================================

isVentilationOverFrame = (bEnableVentilationProfile & bVentilationProfile & (iVentilationProfileType = VENTPROFILE_OVER_FRAME))

if isVentilationOverFrame then
	addy ac_unit_height
	if WIDO_REVEAL_SIDE then
		addz gs_fthk
		mulz -1
	endif
	call "Ventilation_profile" parameters	A							= ac_unit_width,
											VentilationProfileThickness	= VentilationProfileThickness,
											VentilationProfileHeight	= VentilationProfileHeight,
											gs_frame_thk				= gs_fthk,
											bVentilationProfile			= bVentilationProfile,
											iVentilationProfileType		= iVentilationProfileType,
											gs_ventProfile_pen			= gs_frame_pen,
											gs_ventProfile_pen_cont		= gs_pen_2D,
											gs_ventProfile_fill			= gs_ventProfile_fill,
											gs_ventProfile_pen_bg		= gs_ventProfile_pen_bg,
											gs_ventProfile_pen_fg		= gs_ventProfile_pen_fg,
											gs_ventProfile_mat			= gs_ventProfile_mat
	if WIDO_REVEAL_SIDE then del 2
	del 1
endif


! =============================================================================
! Frame
! =============================================================================

pen gs_frame_pen
material gs_frame_mat

nFlipTrans = 0
if bOpeningDirectionSL then
	addz gs_fthk
	mulz -1
	nFlipTrans = 2
endif

sect_fill fr_sect_fill_type, fr_sect_fill_bg, fr_sect_fill_fg, gs_pen_2D

GROUP "frame"

! Cut Ventilation Profile =====================================================

if isVentilationOverFrame then
	addy ac_unit_height
	cutpolya 5, 2, 0,
		-ac_unit_width/2, 0, 11+3*(WIDO_REVEAL_SIDE),
		-ac_unit_width/2, VentilationProfileHeight, 11+3*(WIDO_REVEAL_SIDE),
		ac_unit_width/2, VentilationProfileHeight, 11+3*(WIDO_REVEAL_SIDE),
		ac_unit_width/2, 0, 11+3*(WIDO_REVEAL_SIDE),
		-ac_unit_width/2, 0, -1
	del 1
endif

sect_fill fr_sect_fill_type, fr_sect_fill_bg, fr_sect_fill_fg, gs_pen_2D

! Corner ======================================================================

if gs_cl AND leftCornerAngle<180 then
	ADDX -ac_unit_width/2
	ROTY -leftCornerAngle/2
		CUTPLANE
	DEL 2
endif

if gs_cl AND leftCornerAngle>180 then
	ADD -ac_unit_width/2-WIDO_REVEAL_SIDE*gs_fthk*TAN(90-leftCornerAngle/2), 0, (1-WIDO_REVEAL_SIDE)*gs_fthk
	ROTY -leftCornerAngle/2
	CUTPLANE
	DEL 2
endif

if gs_cr AND rightCornerAngle<180 then
	ADDX ac_unit_width/2
	ROTY rightCornerAngle/2
	CUTPLANE
	DEL 2
endif

if gs_cr AND rightCornerAngle>180 then
	ADD ac_unit_width/2+WIDO_REVEAL_SIDE*gs_fthk*TAN(90-rightCornerAngle/2), 0, (1-WIDO_REVEAL_SIDE)*gs_fthk
	ROTY rightCornerAngle/2
	CUTPLANE
	DEL 2
endif


! Butt Glazed =================================================================

if bMiddleRail then
	if gs_sidelight_right then
		if iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED then
			CUTFORM 5, 1, 1+2,
				 0, 0, 1, gs_gsb+gs_glass_thk,
				ac_unit_width/2,         gs_fw_lower, 2+8+16,
				(ac_unit_width/2-rightPanelWidth),  gs_fw_lower,  2+8+16,
				(ac_unit_width/2-rightPanelWidth), midRailElevation+midRailWidth/2, 2+8+16,
				ac_unit_width/2, midRailElevation+midRailWidth/2,  2+8+16,
				ac_unit_width/2,         gs_fw_lower,  -1
		endif

		if iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED AND gs_cr AND rightCornerAngle<180 then
			ROTX 90
			ADDZ -gs_fw_lower
				CUTFORM 5, 1, 1+2,
						0,0,1, -(midRailElevation-midRailWidth/2-gs_fw_lower),
						ac_unit_width/2-gs_fw_side_right-(gs_fthk*TAN(90-rightCornerAngle/2)+(gs_frame_width/2)/SIN(rightCornerAngle/2)-gs_fw_side_right)*(rightCornerAngle<60), 0, 1+2+4+8+16+64,
						ac_unit_width/2-(gs_frame_width/2)/SIN(rightCornerAngle/2), 0,     1+2+4+8+16+64,
						ac_unit_width/2-gs_fthk*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(rightCornerAngle/2), gs_fthk,      1+2+4+8+16+64,
						ac_unit_width/2-gs_fw_side_right-(gs_fthk*TAN(90-rightCornerAngle/2)+(gs_frame_width/2)/SIN(rightCornerAngle/2)-gs_fw_side_right)*(rightCornerAngle<60), gs_fthk, 1+2+4+8+16+64,
						ac_unit_width/2-gs_fw_side_right-(gs_fthk*TAN(90-rightCornerAngle/2)+(gs_frame_width/2)/SIN(rightCornerAngle/2)-gs_fw_side_right)*(rightCornerAngle<60), 0,      -1
			DEL 2
			xpr=gs_fthk*TAN(90-rightCornerAngle/2)+(gs_frame_width/2)/SIN(rightCornerAngle/2)
		endif

		if iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED_WO_FRAME AND gs_cr then
			ROTX 90
			ADDZ -gs_fw_lower
				CUTFORM 5, 1, 1+2,
						0,0,1, -(midRailElevation-midRailWidth/2-gs_fw_lower),
						ac_unit_width/2-gs_fw_side_right, 0, 1+2+4+8+16,
						ac_unit_width/2, 0,     1+2+4+8+16,
						ac_unit_width/2, gs_fthk,      1+2+4+8+16,
						ac_unit_width/2-gs_fw_side_right, gs_fthk, 1+2+4+8+16,
						ac_unit_width/2-gs_fw_side_right, 0,      -1
			DEL 2
			xpr=0
		endif

		if iFrameStyleRight = FRAME_STYLE_ANGLE_FRAME AND gs_cr AND rightCornerAngle<180 then
			ROTX 90
			ADDZ -gs_fw_lower

			CUTFORM 6, 1, 1+2,
				0,0,1, -(midRailElevation-midRailWidth/2-gs_fw_lower),
				ac_unit_width/2-gs_fw_side_right-(gs_fthk*TAN(90-rightCornerAngle/2)+(gs_frame_width/2)/SIN(rightCornerAngle/2)-gs_fw_side_right)*(rightCornerAngle<60), 0, 1+2+4+8+16,
				ac_unit_width/2-(gs_gsb+gs_glass_thk)*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(rightCornerAngle/2), 0,     1+2+4+8+16,
				ac_unit_width/2-(gs_gsb+gs_glass_thk)*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(rightCornerAngle/2), (gs_gsb+gs_glass_thk),     1+2+4+8+16,
				ac_unit_width/2-gs_fthk*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(rightCornerAngle/2), gs_fthk,      1+2+4+8+16,
				ac_unit_width/2-gs_fw_side_right-(gs_fthk*TAN(90-rightCornerAngle/2)+(gs_frame_width/2)/SIN(rightCornerAngle/2)-gs_fw_side_right)*(rightCornerAngle<60), gs_fthk, 1+2+4+8+16,
				ac_unit_width/2-gs_fw_side_right-(gs_fthk*TAN(90-rightCornerAngle/2)+(gs_frame_width/2)/SIN(rightCornerAngle/2)-gs_fw_side_right)*(rightCornerAngle<60), 0,      -1

			DEL 2
			xpr=gs_fthk*TAN(90-rightCornerAngle/2)+(gs_frame_width/2)/SIN(rightCornerAngle/2)
		endif

		if iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED AND gs_cr AND rightCornerAngle>180 then
			ROTX 90
			ADDZ -gs_fw_lower
			CUTFORM 5, 1, 1+2,
					0,0,1, -(midRailElevation-midRailWidth/2-gs_fw_lower),
					ac_unit_width/2-gs_fw_side_right, 0,      95,
					ac_unit_width/2+gs_fthk*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(180-rightCornerAngle/2), 0,    95,
					ac_unit_width/2-(gs_frame_width/2)/SIN(180-rightCornerAngle/2), gs_fthk,      95,
					ac_unit_width/2-gs_fw_side_right, gs_fthk,     95,
					ac_unit_width/2-gs_fw_side_right, 0,      -1
			DEL 2
			xpr=-gs_fthk*TAN(90-rightCornerAngle/2)+(gs_frame_width/2)/SIN(rightCornerAngle/2)
		endif

		if iFrameStyleRight = FRAME_STYLE_ANGLE_FRAME AND gs_cr AND rightCornerAngle>180 then
			ROTX 90
			ADDZ -gs_fw_lower
			CUTFORM 6, 1, 1+2,
					0,0,1, -(midRailElevation-midRailWidth/2-gs_fw_lower),
					ac_unit_width/2-gs_fw_side_right, 0,      31,
					ac_unit_width/2+(gs_fthk-gs_gsb-gs_glass_thk)*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(180-rightCornerAngle/2), 0,    31,
					ac_unit_width/2+(gs_fthk-gs_gsb-gs_glass_thk)*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(180-rightCornerAngle/2), (gs_gsb+gs_glass_thk),    31,
					ac_unit_width/2-(gs_frame_width/2)/SIN(180-rightCornerAngle/2), gs_fthk,      31,
					ac_unit_width/2-gs_fw_side_right, gs_fthk,     31,
					ac_unit_width/2-gs_fw_side_right, 0,      -1
			DEL 2
			xpr=-gs_fthk*TAN(90-rightCornerAngle/2)+(gs_frame_width/2)/SIN(rightCornerAngle/2)
		endif
	endif

	if gs_sidelight_left then

		if iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED then
			CUTFORM 5, 1, 1+2,
				0, 0, 1, gs_gsb+gs_glass_thk,
				-ac_unit_width/2,         gs_fw_lower,  2+8+16,
				(-ac_unit_width/2+leftPanelWidth),  gs_fw_lower,  2+8+16,
				(-ac_unit_width/2+leftPanelWidth), midRailElevation+midRailWidth/2,  2+8+16,
				-ac_unit_width/2, midRailElevation+midRailWidth/2, 2+8+16,
				-ac_unit_width/2,         gs_fw_lower,  -1
		endif

		if iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED AND gs_cl AND leftCornerAngle<180 then
			ROTX 90
			ADDZ -gs_fw_lower
			CUTFORM 5, 1, 1+2,
				0,0,1, -(midRailElevation-midRailWidth/2-gs_fw_lower),
				-ac_unit_width/2+(gs_frame_width/2)/SIN(leftCornerAngle/2),0,95,
				-ac_unit_width/2+gs_fw_side_left+(gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2)-gs_fw_side_left)*(leftCornerAngle<60),0,95,
				-ac_unit_width/2+gs_fw_side_left+(gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2)-gs_fw_side_left)*(leftCornerAngle<60), gs_fthk,95,
				-ac_unit_width/2+gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2),gs_fthk,95,
				-ac_unit_width/2+(gs_frame_width/2)/SIN(leftCornerAngle/2),0,-1
			DEL 2
			xpl=gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2)
		endif

		if iFrameStyleLeft = FRAME_STYLE_ANGLE_FRAME AND gs_cl AND leftCornerAngle<180 then
			ROTX 90
			ADDZ -gs_fw_lower
			CUTFORM 6, 1, 1+2,
				0,0,1, -(midRailElevation-midRailWidth/2-gs_fw_lower),
				-ac_unit_width/2+(gs_gsb+gs_glass_thk)*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2), gs_gsb+gs_glass_thk,31,
				-ac_unit_width/2+(gs_gsb+gs_glass_thk)*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2), 0,31,
				-ac_unit_width/2+gs_fw_side_left+(gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2)-gs_fw_side_left)*(leftCornerAngle<60),0,31,
				-ac_unit_width/2+gs_fw_side_left+(gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2)-gs_fw_side_left)*(leftCornerAngle<60), gs_fthk,31,
				-ac_unit_width/2+gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2),gs_fthk,31,
				-ac_unit_width/2+(gs_gsb+gs_glass_thk)*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2), gs_gsb+gs_glass_thk,-1
			DEL 2
			xpl=gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2)
		endif

		if iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED AND gs_cl AND leftCornerAngle >180 then
			ROTX 90
			ADDZ -gs_fw_lower
			CUTFORM 5, 1, 1+2,
					0,0,1, -(midRailElevation-midRailWidth/2-gs_fw_lower),
					-ac_unit_width/2+gs_fthk*TAN(90+leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2), 0, 95,
					-ac_unit_width/2+gs_fw_side_left, 0, 95,
					-ac_unit_width/2+gs_fw_side_left, gs_fthk, 95,
					-ac_unit_width/2+(gs_frame_width/2)/SIN(leftCornerAngle/2), gs_fthk, 95,
					-ac_unit_width/2+gs_fthk*TAN(90+leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2), 0, -1
			DEL 2
			xpl=-gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2)
		endif

		if iFrameStyleLeft = FRAME_STYLE_ANGLE_FRAME AND gs_cl AND leftCornerAngle >180 then
			ROTX 90
			ADDZ -gs_fw_lower
			CUTFORM 6, 1, 1+2,
					0,0,1, -(midRailElevation-midRailWidth/2-gs_fw_lower),
					-ac_unit_width/2+(gs_fthk-gs_gsb-gs_glass_thk)*TAN(90+leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2), 0, 31,
					-ac_unit_width/2+gs_fw_side_left, 0, 31,
					-ac_unit_width/2+gs_fw_side_left, gs_fthk, 31,
					-ac_unit_width/2+(gs_frame_width/2)/SIN(leftCornerAngle/2), gs_fthk, 31,
					-ac_unit_width/2+(gs_fthk-gs_gsb-gs_glass_thk)*TAN(90+leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2), gs_gsb+gs_glass_thk, 31,
					-ac_unit_width/2+(gs_fthk-gs_gsb-gs_glass_thk)*TAN(90+leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2), 0, -1
			DEL 2
			xpl=-gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2)
		endif

		if iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED_WO_FRAME AND gs_cl then
			ROTX 90
			ADDZ -gs_fw_lower
			CUTFORM 5, 1, 1+2,
					0,0,1, -(midRailElevation-midRailWidth/2-gs_fw_lower),
					-ac_unit_width/2+gs_fw_side_left, 0, 1+2+4+8+16,
					-ac_unit_width/2, 0,     1+2+4+8+16,
					-ac_unit_width/2, gs_fthk,      1+2+4+8+16,
					-ac_unit_width/2+gs_fw_side_left, gs_fthk, 1+2+4+8+16,
					-ac_unit_width/2+gs_fw_side_left, 0,      -1
			DEL 2
			xpl=0
		endif
	endif
endif


! Butt Glazed of Transom ======================================================

if gs_sidelight_right then

	if iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED then
		CUTFORM 5, 1, 1+2,
				0, 0, 1, gs_gsb+gs_glass_thk,
				ac_unit_width/2, ac_unit_height-frameOrTransomHeight, 2+8+16,
				(ac_unit_width/2-rightPanelWidth), ac_unit_height-frameOrTransomHeight,  2+8+16,
				(ac_unit_width/2-rightPanelWidth),(midRailElevation)*bMiddleRail+midRailWidth/2,  2+8+16,
				ac_unit_width/2, (midRailElevation)*bMiddleRail+midRailWidth/2,  2+8+16,
				ac_unit_width/2, ac_unit_height-frameOrTransomHeight,  -1
	endif

	if iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED AND gs_cr AND rightCornerAngle<180 then
		ROTX 90
		ADDZ -ac_unit_height+frameOrTransomHeight
		CUTFORM 5, 1, 1+2,
				0,0,1, ac_unit_height-frameOrTransomHeight-(midRailElevation)*bMiddleRail-midRailWidth/2,
				ac_unit_width/2-gs_fw_side_right-(gs_fthk*TAN(90-rightCornerAngle/2)+(gs_frame_width/2)/SIN(rightCornerAngle/2)-gs_fw_side_right)*(rightCornerAngle<60), 0,     95,
				ac_unit_width/2-(gs_frame_width/2)/SIN(rightCornerAngle/2), 0,     95,
				ac_unit_width/2-gs_fthk*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(rightCornerAngle/2), gs_fthk,      95,
				ac_unit_width/2-gs_fw_side_right-(gs_fthk*TAN(90-rightCornerAngle/2)+(gs_frame_width/2)/SIN(rightCornerAngle/2)-gs_fw_side_right)*(rightCornerAngle<60), gs_fthk,      95,
				ac_unit_width/2-gs_fw_side_right-(gs_fthk*TAN(90-rightCornerAngle/2)+(gs_frame_width/2)/SIN(rightCornerAngle/2)-gs_fw_side_right)*(rightCornerAngle<60), 0,      -1
		DEL 2
		xprtr=gs_fthk*TAN(90-rightCornerAngle/2)+(gs_frame_width/2)/SIN(rightCornerAngle/2)
	endif

	if iFrameStyleRight = FRAME_STYLE_ANGLE_FRAME AND gs_cr AND rightCornerAngle<180 then
		ROTX 90
		ADDZ -ac_unit_height+frameOrTransomHeight
		CUTFORM 6, 1, 1+2,
				0,0,1, ac_unit_height-frameOrTransomHeight-(midRailElevation)*bMiddleRail-midRailWidth/2,
				ac_unit_width/2-gs_fw_side_right-(gs_fthk*TAN(90-rightCornerAngle/2)+(gs_frame_width/2)/SIN(rightCornerAngle/2)-gs_fw_side_right)*(rightCornerAngle<60), 0, 1+2+4+8+16,
				ac_unit_width/2-(gs_gsb+gs_glass_thk)*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(rightCornerAngle/2), 0,     1+2+4+8+16,
				ac_unit_width/2-(gs_gsb+gs_glass_thk)*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(rightCornerAngle/2), (gs_gsb+gs_glass_thk),     1+2+4+8+16,
				ac_unit_width/2-gs_fthk*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(rightCornerAngle/2), gs_fthk,      1+2+4+8+16,
				ac_unit_width/2-gs_fw_side_right-(gs_fthk*TAN(90-rightCornerAngle/2)+(gs_frame_width/2)/SIN(rightCornerAngle/2)-gs_fw_side_right)*(rightCornerAngle<60), gs_fthk, 1+2+4+8+16,
				ac_unit_width/2-gs_fw_side_right-(gs_fthk*TAN(90-rightCornerAngle/2)+(gs_frame_width/2)/SIN(rightCornerAngle/2)-gs_fw_side_right)*(rightCornerAngle<60), 0,      -1

		DEL 2
		xprtr=gs_fthk*TAN(90-rightCornerAngle/2)+(gs_frame_width/2)/SIN(rightCornerAngle/2)
	endif

	if iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED AND gs_cr AND rightCornerAngle >180 then
		ROTX 90
		ADDZ -ac_unit_height+frameOrTransomHeight
		CUTFORM 5, 1, 1+2,
				0,0,1, ac_unit_height-frameOrTransomHeight-(midRailElevation)*bMiddleRail-midRailWidth/2,
				ac_unit_width/2-gs_fw_side_right, 0,      95,
				ac_unit_width/2+gs_fthk*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(180-rightCornerAngle/2), 0,    95,
				ac_unit_width/2-(gs_frame_width/2)/SIN(180-rightCornerAngle/2), gs_fthk,      95,
				ac_unit_width/2-gs_fw_side_right,gs_fthk,     95,
				ac_unit_width/2-gs_fw_side_right, 0,      -1
		DEL 2
		xprtr=-gs_fthk*TAN(90-rightCornerAngle/2)+(gs_frame_width/2)/SIN(rightCornerAngle/2)
	endif

	if iFrameStyleRight = FRAME_STYLE_ANGLE_FRAME AND gs_cr AND rightCornerAngle>180 then
		ROTX 90
		ADDZ -ac_unit_height+frameOrTransomHeight
		CUTFORM 6, 1, 1+2,
				0,0,1, ac_unit_height-frameOrTransomHeight-(midRailElevation)*bMiddleRail-midRailWidth/2,
				ac_unit_width/2-gs_fw_side_right, 0,      31,
				ac_unit_width/2+(gs_fthk-gs_gsb-gs_glass_thk)*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(180-rightCornerAngle/2), 0,    31,
				ac_unit_width/2+(gs_fthk-gs_gsb-gs_glass_thk)*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(180-rightCornerAngle/2), (gs_gsb+gs_glass_thk),    31,
				ac_unit_width/2-(gs_frame_width/2)/SIN(180-rightCornerAngle/2), gs_fthk,      31,
				ac_unit_width/2-gs_fw_side_right, gs_fthk,     31,
				ac_unit_width/2-gs_fw_side_right, 0,      -1
		DEL 2
		xprtr=-gs_fthk*TAN(90-rightCornerAngle/2)+(gs_frame_width/2)/SIN(rightCornerAngle/2)
	endif

	if iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED_WO_FRAME AND gs_cr then
		ROTX 90
		ADDZ -ac_unit_height+frameOrTransomHeight
		CUTFORM 5, 1, 1+2,
				0,0,1, ac_unit_height-frameOrTransomHeight-(midRailElevation)*bMiddleRail-midRailWidth/2,
				ac_unit_width/2-gs_fw_side_right, 0, 1+2+4+8+16,
				ac_unit_width/2, 0,     1+2+4+8+16,
				ac_unit_width/2, gs_fthk,      1+2+4+8+16,
				ac_unit_width/2-gs_fw_side_right, gs_fthk, 1+2+4+8+16,
				ac_unit_width/2-gs_fw_side_right, 0,      -1
		DEL 2
		xprtr=0
	endif

endif

if gs_sidelight_left then
	if iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED then
		CUTFORM 5, 1, 1+2,
				 0, 0, 1, gs_gsb+gs_glass_thk,
				-ac_unit_width/2, ac_unit_height-frameOrTransomHeight, 2+8+16,
				(-ac_unit_width/2+leftPanelWidth), ac_unit_height-frameOrTransomHeight,  2+8+16,
				(-ac_unit_width/2+leftPanelWidth),(midRailElevation)*bMiddleRail+midRailWidth/2,  2+8+16,
				-ac_unit_width/2, (midRailElevation)*bMiddleRail+midRailWidth/2,  2+8+16,
				-ac_unit_width/2, ac_unit_height-frameOrTransomHeight,  -1
	endif

	if iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED AND gs_cl AND leftCornerAngle<180 then
		ROTX 90
		ADDZ -ac_unit_height+frameOrTransomHeight
		CUTFORM 5, 1, 1+2,
				0,0,1, ac_unit_height-frameOrTransomHeight-(midRailElevation)*bMiddleRail-midRailWidth/2,
				-ac_unit_width/2+(gs_frame_width/2)/SIN(leftCornerAngle/2),0,95,
				-ac_unit_width/2+gs_fw_side_left+(gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2)-gs_fw_side_left)*(leftCornerAngle<60),0,95,
				-ac_unit_width/2+gs_fw_side_left+(gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2)-gs_fw_side_left)*(leftCornerAngle<60), gs_fthk,95,
				-ac_unit_width/2+gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2),gs_fthk,95,
				-ac_unit_width/2+(gs_frame_width/2)/SIN(leftCornerAngle/2),0,-1
		DEL 2
		xpltr=gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2)
	endif

	if iFrameStyleLeft = FRAME_STYLE_ANGLE_FRAME AND gs_cl AND leftCornerAngle<180 then
		ROTX 90
		ADDZ -ac_unit_height+frameOrTransomHeight
		CUTFORM 6, 1, 1+2,
				0,0,1, ac_unit_height-frameOrTransomHeight-(midRailElevation)*bMiddleRail-midRailWidth/2,
				-ac_unit_width/2+(gs_gsb+gs_glass_thk)*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2), gs_gsb+gs_glass_thk,31,
				-ac_unit_width/2+(gs_gsb+gs_glass_thk)*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2), 0,31,
				-ac_unit_width/2+gs_fw_side_left+(gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2)-gs_fw_side_left)*(leftCornerAngle<60),0,31,
				-ac_unit_width/2+gs_fw_side_left+(gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2)-gs_fw_side_left)*(leftCornerAngle<60), gs_fthk,31,
				-ac_unit_width/2+gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2),gs_fthk, 31,
				-ac_unit_width/2+(gs_gsb+gs_glass_thk)*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2), gs_gsb+gs_glass_thk,-1
		DEL 2
		xpltr=gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2)
	endif

	if iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED AND gs_cl AND leftCornerAngle >180 then
		ROTX 90
		ADDZ -ac_unit_height+frameOrTransomHeight
		CUTFORM 5, 1, 1+2,
				0,0,1, ac_unit_height-frameOrTransomHeight-(midRailElevation)*bMiddleRail-midRailWidth/2,
				-ac_unit_width/2+gs_fthk*TAN(90+leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2), 0, 95,
				-ac_unit_width/2+gs_fw_side_left, 0, 95,
				-ac_unit_width/2+gs_fw_side_left, gs_fthk, 95,
				-ac_unit_width/2+(gs_frame_width/2)/SIN(leftCornerAngle/2), gs_fthk, 95,
				-ac_unit_width/2+gs_fthk*TAN(90+leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2), 0, -1
		DEL 2
		xpltr=-gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2)
	endif

	if iFrameStyleLeft = FRAME_STYLE_ANGLE_FRAME AND gs_cl AND leftCornerAngle >180 then
		ROTX 90
		ADDZ -ac_unit_height+frameOrTransomHeight
		CUTFORM 6, 1, 1+2,
				0,0,1, ac_unit_height-frameOrTransomHeight-(midRailElevation)*bMiddleRail-midRailWidth/2,
				-ac_unit_width/2+(gs_fthk-gs_gsb-gs_glass_thk)*TAN(90+leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2), 0, 31,
				-ac_unit_width/2+gs_fw_side_left, 0, 31,
				-ac_unit_width/2+gs_fw_side_left, gs_fthk, 31,
				-ac_unit_width/2+(gs_frame_width/2)/SIN(leftCornerAngle/2), gs_fthk, 31,
				-ac_unit_width/2+(gs_fthk-gs_gsb-gs_glass_thk)*TAN(90+leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2), gs_gsb+gs_glass_thk, 31,
				-ac_unit_width/2+(gs_fthk-gs_gsb-gs_glass_thk)*TAN(90+leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2), 0, -1
		DEL 2
		xpltr=-gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2)
	endif

	if iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED_WO_FRAME AND gs_cl then
		ROTX 90
		ADDZ -ac_unit_height+frameOrTransomHeight
		CUTFORM 5, 1, 1+2,
				0,0,1, ac_unit_height-frameOrTransomHeight-(midRailElevation)*bMiddleRail-midRailWidth/2,
				-ac_unit_width/2+gs_fw_side_left, 0, 1+2+4+8+16,
				-ac_unit_width/2, 0,     1+2+4+8+16,
				-ac_unit_width/2, gs_fthk,      1+2+4+8+16,
				-ac_unit_width/2+gs_fw_side_left, gs_fthk, 1+2+4+8+16,
				-ac_unit_width/2+gs_fw_side_left, 0,      -1
		DEL 2
		xpltr=0
	endif

endif


! Top Panel ===================================================================

if iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED AND gs_door_transom then
	CUTFORM 5, 1, 1+2,
			0, 0, 1, gs_gsb+gs_glass_thk,
			ac_unit_width/2, ac_unit_height-topPanelHeight,  2+8+16,
			(ac_unit_width/2-rightPanelWidth)*gs_sidelight_right, ac_unit_height-topPanelHeight, 2+8+16,
			(ac_unit_width/2-rightPanelWidth)*gs_sidelight_right, ac_unit_height-gs_fw_upper, 2+8+16,
			ac_unit_width/2, ac_unit_height-gs_fw_upper, 2+8+16,
			ac_unit_width/2, ac_unit_height-topPanelHeight,  -1
endif

if iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED AND gs_door_transom AND gs_cr AND rightCornerAngle<180 then
	ROTX 90
	ADDZ -ac_unit_height+gs_fw_upper
	CUTFORM 5, 1, 1+2,
			0,0,1, topPanelHeight-gs_fw_upper,
			ac_unit_width/2-gs_fw_side_right-(gs_fthk*TAN(90-rightCornerAngle/2)+(gs_frame_width/2)/SIN(rightCornerAngle/2)-gs_fw_side_right)*(rightCornerAngle<60), 0,     95,
			ac_unit_width/2-(gs_frame_width/2)/SIN(rightCornerAngle/2), 0,     95,
			ac_unit_width/2-gs_fthk*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(rightCornerAngle/2), gs_fthk,      95,
			ac_unit_width/2-gs_fw_side_right-(gs_fthk*TAN(90-rightCornerAngle/2)+(gs_frame_width/2)/SIN(rightCornerAngle/2)-gs_fw_side_right)*(rightCornerAngle<60),gs_fthk,      95,
			ac_unit_width/2-gs_fw_side_right-(gs_fthk*TAN(90-rightCornerAngle/2)+(gs_frame_width/2)/SIN(rightCornerAngle/2)-gs_fw_side_right)*(rightCornerAngle<60), 0,      -1
	DEL 2
	xprtp=gs_fthk*TAN(90-rightCornerAngle/2)+(gs_frame_width/2)/SIN(rightCornerAngle/2)
endif

if gs_door_transom then

	if iFrameStyleRight = FRAME_STYLE_ANGLE_FRAME AND gs_cr AND rightCornerAngle<180 then
		ROTX 90
		ADDZ -ac_unit_height+gs_fw_upper
		CUTFORM 6, 1, 1+2,
				0,0,1, topPanelHeight-gs_fw_upper,
				ac_unit_width/2-gs_fw_side_right-(gs_fthk*TAN(90-rightCornerAngle/2)+(gs_frame_width/2)/SIN(rightCornerAngle/2)-gs_fw_side_right)*(rightCornerAngle<60), 0, 1+2+4+8+16,
				ac_unit_width/2-(gs_gsb+gs_glass_thk)*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(rightCornerAngle/2), 0,     1+2+4+8+16,
				ac_unit_width/2-(gs_gsb+gs_glass_thk)*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(rightCornerAngle/2), (gs_gsb+gs_glass_thk),     1+2+4+8+16,
				ac_unit_width/2-gs_fthk*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(rightCornerAngle/2), gs_fthk,      1+2+4+8+16,
				ac_unit_width/2-gs_fw_side_right-(gs_fthk*TAN(90-rightCornerAngle/2)+(gs_frame_width/2)/SIN(rightCornerAngle/2)-gs_fw_side_right)*(rightCornerAngle<60), gs_fthk, 1+2+4+8+16,
				ac_unit_width/2-gs_fw_side_right-(gs_fthk*TAN(90-rightCornerAngle/2)+(gs_frame_width/2)/SIN(rightCornerAngle/2)-gs_fw_side_right)*(rightCornerAngle<60), 0,      -1

		DEL 2
		xprtp=gs_fthk*TAN(90-rightCornerAngle/2)+(gs_frame_width/2)/SIN(rightCornerAngle/2)
	endif

	if iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED AND gs_door_transom AND gs_cr AND rightCornerAngle>180 then
		ROTX 90
		ADDZ -ac_unit_height+gs_fw_upper
		CUTFORM 5, 1, 1+2,
				0,0,1, topPanelHeight-gs_fw_upper,
				ac_unit_width/2-gs_fw_side_right, 0,      95,
				ac_unit_width/2+gs_fthk*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(180-rightCornerAngle/2), 0,    95,
				ac_unit_width/2-(gs_frame_width/2)/SIN(180-rightCornerAngle/2), gs_fthk,      95,
				ac_unit_width/2-gs_fw_side_right,gs_fthk,     95,
				ac_unit_width/2-gs_fw_side_right, 0,      -1
		DEL 2
		xprtp=-gs_fthk*TAN(90-rightCornerAngle/2)+(gs_frame_width/2)/SIN(rightCornerAngle/2)
	endif

	if iFrameStyleRight = FRAME_STYLE_ANGLE_FRAME AND gs_cr AND rightCornerAngle>180 then
		ROTX 90
		ADDZ -ac_unit_height+gs_fw_upper
		CUTFORM 6, 1, 1+2,
				0,0,1, topPanelHeight-gs_fw_upper,
				ac_unit_width/2-gs_fw_side_right, 0,      31,
				ac_unit_width/2+(gs_fthk-gs_gsb-gs_glass_thk)*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(180-rightCornerAngle/2), 0,    31,
				ac_unit_width/2+(gs_fthk-gs_gsb-gs_glass_thk)*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(180-rightCornerAngle/2), (gs_gsb+gs_glass_thk),    31,
				ac_unit_width/2-(gs_frame_width/2)/SIN(180-rightCornerAngle/2), gs_fthk,      31,
				ac_unit_width/2-gs_fw_side_right, gs_fthk,     31,
				ac_unit_width/2-gs_fw_side_right, 0,      -1
		DEL 2
		xprtp=-gs_fthk*TAN(90-rightCornerAngle/2)+(gs_frame_width/2)/SIN(rightCornerAngle/2)
	endif

	if iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED_WO_FRAME AND gs_cr then
		ROTX 90
		ADDZ -ac_unit_height+gs_fw_upper
		CUTFORM 5, 1, 1+2,
				0,0,1, topPanelHeight-gs_fw_upper,
				ac_unit_width/2-gs_fw_side_right, 0, 1+2+4+8+16,
				ac_unit_width/2, 0,     1+2+4+8+16,
				ac_unit_width/2, gs_fthk,      1+2+4+8+16,
				ac_unit_width/2-gs_fw_side_right, gs_fthk, 1+2+4+8+16,
				ac_unit_width/2-gs_fw_side_right, 0,      -1
		DEL 2
		xprtp=0
	endif

endif

if iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED AND gs_door_transom then
	CUTFORM 5, 1, 1+2,
			 0, 0, 1, gs_gsb+gs_glass_thk,
			-ac_unit_width/2, ac_unit_height-topPanelHeight,  2+8+16,
			(-ac_unit_width/2+leftPanelWidth)*gs_sidelight_left, ac_unit_height-topPanelHeight, 2+8+16,
			(-ac_unit_width/2+leftPanelWidth)*gs_sidelight_left, ac_unit_height-gs_fw_upper, 2+8+16,
			-ac_unit_width/2, ac_unit_height-gs_fw_upper, 2+8+16,
			-ac_unit_width/2, ac_unit_height-topPanelHeight,  -1
endif

if gs_door_transom then
	if iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED AND gs_door_transom AND gs_cl AND leftCornerAngle <180 then
		ROTX 90
		ADDZ -ac_unit_height+gs_fw_upper
		CUTFORM 5, 1, 1+2,
				0,0,1, topPanelHeight-gs_fw_upper,
				-ac_unit_width/2+(gs_frame_width/2)/SIN(leftCornerAngle/2),0,95,
				-ac_unit_width/2+gs_fw_side_left+(gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2)-gs_fw_side_left)*(leftCornerAngle<60),0,95,
				-ac_unit_width/2+gs_fw_side_left+(gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2)-gs_fw_side_left)*(leftCornerAngle<60), gs_fthk,95,
				-ac_unit_width/2+gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2),gs_fthk,95,
				-ac_unit_width/2+(gs_frame_width/2)/SIN(leftCornerAngle/2),0,-1
		DEL 2
		xpltp=gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2)
	endif

	if iFrameStyleLeft = FRAME_STYLE_ANGLE_FRAME AND gs_cl AND leftCornerAngle<180 then
		ROTX 90
		ADDZ -ac_unit_height+gs_fw_upper
		CUTFORM 6, 1, 1+2,
				0,0,1, topPanelHeight-gs_fw_upper,
				-ac_unit_width/2+(gs_gsb+gs_glass_thk)*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2), gs_gsb+gs_glass_thk,31,
				-ac_unit_width/2+(gs_gsb+gs_glass_thk)*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2), 0,31,
				-ac_unit_width/2+gs_fw_side_left+(gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2)-gs_fw_side_left)*(leftCornerAngle<60),0,31,
				-ac_unit_width/2+gs_fw_side_left+(gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2)-gs_fw_side_left)*(leftCornerAngle<60), gs_fthk,31,
				-ac_unit_width/2+gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2),gs_fthk, 31,
				-ac_unit_width/2+(gs_gsb+gs_glass_thk)*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2), gs_gsb+gs_glass_thk,-1
		DEL 2
		xpltp=gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2)
	endif

	if iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED AND gs_door_transom AND gs_cl AND leftCornerAngle>180 then
		ROTX 90
		ADDZ -ac_unit_height+gs_fw_upper
			CUTFORM 5, 1, 1+2,
					0,0,1, topPanelHeight-gs_fw_upper,
					-ac_unit_width/2+gs_fthk*TAN(90+leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2), 0, 95,
					-ac_unit_width/2+gs_fw_side_left, 0, 95,
					-ac_unit_width/2+gs_fw_side_left, gs_fthk, 95,
					-ac_unit_width/2+(gs_frame_width/2)/SIN(leftCornerAngle/2), gs_fthk, 95,
					-ac_unit_width/2+gs_fthk*TAN(90+leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2), 0, -1
		DEL 2
		xpltp=-gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2)
	endif

	if iFrameStyleLeft = FRAME_STYLE_ANGLE_FRAME AND gs_cl AND leftCornerAngle>180 then
		ROTX 90
		ADDZ -ac_unit_height+gs_fw_upper
		CUTFORM 6, 1, 1+2,
				0,0,1, topPanelHeight-gs_fw_upper,
				-ac_unit_width/2+(gs_fthk-gs_gsb-gs_glass_thk)*TAN(90+leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2), 0, 31,
				-ac_unit_width/2+gs_fw_side_left, 0, 31,
				-ac_unit_width/2+gs_fw_side_left, gs_fthk, 31,
				-ac_unit_width/2+(gs_frame_width/2)/SIN(leftCornerAngle/2), gs_fthk, 31,
				-ac_unit_width/2+(gs_fthk-gs_gsb-gs_glass_thk)*TAN(90+leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2), gs_gsb+gs_glass_thk, 31,
				-ac_unit_width/2+(gs_fthk-gs_gsb-gs_glass_thk)*TAN(90+leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2), 0, -1
		DEL 2
		xpltp=-gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2)
	endif

	if iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED_WO_FRAME AND gs_cl then
		ROTX 90
		ADDZ -ac_unit_height+gs_fw_upper
		CUTFORM 5, 1, 1+2,
				0,0,1, topPanelHeight-gs_fw_upper,
				-ac_unit_width/2+gs_fw_side_left, 0, 1+2+4+8+16,
				-ac_unit_width/2, 0, 1+2+4+8+16,
				-ac_unit_width/2, gs_fthk, 1+2+4+8+16,
				-ac_unit_width/2+gs_fw_side_left, gs_fthk, 1+2+4+8+16,
				-ac_unit_width/2+gs_fw_side_left, 0, -1
		DEL 2
		xpltp=0
	endif
endif


! =============================================================================
! Contour Frame
! =============================================================================
sect_fill fr_sect_fill_type, fr_sect_fill_bg, fr_sect_fill_fg, gs_pen_2D

if not(gs_sidelight_left) & not(gs_sidelight_right) & not(gs_door_transom) then

if gs_SashText_typ_num = 1 then  ! Mitered Joint
	base
		Prism_ 4, gs_fthk,
			leftFrame, topFrame, mask4,
			leftFrame, 0, 15,
			-ac_unit_width/2+gs_fw_side_left, 0, 15,
			-ac_unit_width/2+gs_fw_side_left, ac_unit_height-gs_fw_upper, 10
	gosub "textures1"
	body 1

	base
		Prism_ 4, gs_fthk,
			rightFrame, 0, mask2,
			rightFrame, topFrame, 10,
			ac_unit_width/2-gs_fw_side_right, ac_unit_height-gs_fw_upper, 15,
			ac_unit_width/2-gs_fw_side_right, 0, 15
	gosub "textures1"
	body 1

	base
		Prism_ 4, gs_fthk,
			rightFrame, topFrame, mask3,
			leftFrame, topFrame, 10,
			-ac_unit_width/2+gs_fw_side_left, ac_unit_height-gs_fw_upper, 15,
			ac_unit_width/2-gs_fw_side_right, ac_unit_height-gs_fw_upper, 10
	gosub "textures2"
	body 1
else  ! Butt Joint
	base
		Prism_ 4, gs_fthk,
			leftFrame,	ac_unit_height-gs_fw_upper, mask4,
			leftFrame,	0, 15,
			-ac_unit_width/2+gs_fw_side_left, 0, 15,
			-ac_unit_width/2+gs_fw_side_left, ac_unit_height-gs_fw_upper, 10
	gosub "textures1"
	body 1

	base
		Prism_ 4, gs_fthk,
			rightFrame, 0,mask2,
			rightFrame, ac_unit_height-gs_fw_upper, 8,
			ac_unit_width/2-gs_fw_side_right, ac_unit_height-gs_fw_upper, 15,
			ac_unit_width/2-gs_fw_side_right, 0, 15
	gosub "textures1"
	body 1

	base
		Prism_ 6, gs_fthk,
			rightFrame,	topFrame,mask3,
			leftFrame,	topFrame,mask4,
			leftFrame,	ac_unit_height-gs_fw_upper, 8+maskLeftButFr,
			-ac_unit_width/2+gs_fw_side_left, ac_unit_height-gs_fw_upper, 15,
			ac_unit_width/2-gs_fw_side_right, ac_unit_height-gs_fw_upper, 10+maskRightButFr,
			rightFrame, ac_unit_height-gs_fw_upper, mask2
	gosub "textures2"
	body 1
endif
endif



!!!!With Left Sidelight
if gs_sidelight_left & not(gs_sidelight_right) & not(gs_door_transom) then
	if gs_SashText_typ_num = 1 then ! Mittered Joint
		base
			Prism_ 4, gs_fthk,
				leftFrame, topFrame, mask4,
				leftFrame, 0, 10,
				-ac_unit_width/2+gs_fw_side_left, gs_fw_lower, 15,
				-ac_unit_width/2+gs_fw_side_left, ac_unit_height-gs_fw_upper, 10
		gosub "textures1"
		body 1

		base
			Prism_ 4, gs_fthk,
				-ac_unit_width/2+leftPanelWidth, ac_unit_height-gs_fw_upper, 15,
				-ac_unit_width/2+leftPanelWidth, gs_fw_lower, 10,
				-ac_unit_width/2+frameOrSLightWidthLeft, 0, 15,
				-ac_unit_width/2+frameOrSLightWidthLeft, ac_unit_height-gs_fw_upper, 10
		gosub "textures1"
		body 1

		base
			Prism_ 4, gs_fthk,
				rightFrame, 0,mask2,
				rightFrame, topFrame, 10,
				ac_unit_width/2-gs_fw_side_right, ac_unit_height-gs_fw_upper, 15,
				ac_unit_width/2-gs_fw_side_right, 0, 15
		gosub "textures1"
		body 1

		base
			Prism_ 4, gs_fthk,
				leftFrame, 0, 10,
				-ac_unit_width/2+gs_fw_side_left, gs_fw_lower, 15,
				-ac_unit_width/2+leftPanelWidth, gs_fw_lower, 10,
				-ac_unit_width/2+frameOrSLightWidthLeft, 0, 15
		gosub "textures2"
		body 1

		base
			Prism_ 6, gs_fthk,
				rightFrame, topFrame,mask3,
				leftFrame, topFrame, 10,
				-ac_unit_width/2+gs_fw_side_left, ac_unit_height-gs_fw_upper, 15,
				-ac_unit_width/2+leftPanelWidth, ac_unit_height-gs_fw_upper, 10,
				-ac_unit_width/2+frameOrSLightWidthLeft, ac_unit_height-gs_fw_upper, 15,
				ac_unit_width/2-gs_fw_side_right, ac_unit_height-gs_fw_upper, 10
		gosub "textures2"
		body 1
	else  ! Butt Joint
		base
			Prism_ 4, gs_fthk,
				leftFrame, ac_unit_height-gs_fw_upper, mask4,
				leftFrame, gs_fw_lower, 8,
				-ac_unit_width/2+gs_fw_side_left, gs_fw_lower, 15,
				-ac_unit_width/2+gs_fw_side_left, ac_unit_height-gs_fw_upper, 10
		gosub "textures1"
		body 1

		base
			Prism_ 4, gs_fthk,
				-ac_unit_width/2+leftPanelWidth, ac_unit_height-gs_fw_upper, 15,
				-ac_unit_width/2+leftPanelWidth, gs_fw_lower, 10,
				-ac_unit_width/2+frameOrSLightWidthLeft, gs_fw_lower, 13,
				-ac_unit_width/2+frameOrSLightWidthLeft, ac_unit_height-gs_fw_upper, 10
		gosub "textures1"
		body 1

		base
			Prism_ 4, gs_fthk,
				rightFrame, 0,mask2,
				rightFrame, ac_unit_height-gs_fw_upper, 8,
				ac_unit_width/2-gs_fw_side_right, ac_unit_height-gs_fw_upper, 15,
				ac_unit_width/2-gs_fw_side_right, 0, 15
		gosub "textures1"
		body 1

		base
		gosub "leftSidelightBottomFrame"
		gosub "textures2"
		body 1

		base
			Prism_ 8, gs_fthk,
				rightFrame, ac_unit_height,mask3,
				leftFrame, ac_unit_height,mask4,
				leftFrame, ac_unit_height-gs_fw_upper, 8+maskLeftButFr,
				-ac_unit_width/2+gs_fw_side_left, ac_unit_height-gs_fw_upper, 15,
				-ac_unit_width/2+leftPanelWidth, ac_unit_height-gs_fw_upper, 10,
				-ac_unit_width/2+frameOrSLightWidthLeft, ac_unit_height-gs_fw_upper, 15,
				ac_unit_width/2-gs_fw_side_right, ac_unit_height-gs_fw_upper, 10+maskRightButFr,
				rightFrame, ac_unit_height-gs_fw_upper, mask2
		gosub "textures2"
		body 1
	endif

	!!!Both in Type1 and Type2

	if bMiddleRail then
		gosub "leftMidRail"
	endif
endif

!!!!With Right sidelight
if not(gs_sidelight_left) & gs_sidelight_right & not(gs_door_transom) then
	if gs_SashText_typ_num = 1 then ! Mittered Joint
		base
			Prism_ 4, gs_fthk,
				rightFrame, topFrame, mask4,
				rightFrame, 0, 10,
				ac_unit_width/2-gs_fw_side_right, gs_fw_lower, 15,
				ac_unit_width/2-gs_fw_side_right, ac_unit_height-gs_fw_upper, 10
		gosub "textures1"
		body 1

		base
			Prism_ 4, gs_fthk,
				ac_unit_width/2-rightPanelWidth, ac_unit_height-gs_fw_upper, 15,
				ac_unit_width/2-rightPanelWidth, gs_fw_lower, 10,
				ac_unit_width/2-frameOrSLightWidthRight, 0, 15,
				ac_unit_width/2-frameOrSLightWidthRight, ac_unit_height-gs_fw_upper, 10
		gosub "textures1"
		body 1

		base
			Prism_ 4, gs_fthk,
				leftFrame, 0, mask2,
				leftFrame, topFrame, 10,
				-ac_unit_width/2+gs_fw_side_left, ac_unit_height-gs_fw_upper, 15,
				-ac_unit_width/2+gs_fw_side_left, 0, 15
		gosub "textures1"
		body 1

		base
			Prism_ 4, gs_fthk,
				rightFrame, 0, 10,
				ac_unit_width/2-gs_fw_side_right, gs_fw_lower, 15,
				ac_unit_width/2-rightPanelWidth, gs_fw_lower, 10,
				ac_unit_width/2-frameOrSLightWidthRight, 0, 15
		gosub "textures2"
		body 1

		base
			Prism_ 6, gs_fthk,
				leftFrame, topFrame, mask3,
				rightFrame, topFrame, 10,
				ac_unit_width/2-gs_fw_side_right, ac_unit_height-gs_fw_upper, 15,
				ac_unit_width/2-rightPanelWidth, ac_unit_height-gs_fw_upper, 10,
				ac_unit_width/2-frameOrSLightWidthRight, ac_unit_height-gs_fw_upper, 15,
				-ac_unit_width/2+gs_fw_side_left, ac_unit_height-gs_fw_upper, 10
		gosub "textures2"
		body 1
	else  ! Butt Joint
		base
			Prism_ 4, gs_fthk,
				rightFrame, ac_unit_height-gs_fw_upper, mask4,
				rightFrame, gs_fw_lower, 8,
				ac_unit_width/2-gs_fw_side_right, gs_fw_lower, 15,
				ac_unit_width/2-gs_fw_side_right, ac_unit_height-gs_fw_upper, 10
		gosub "textures1"
		body 1

		base
			Prism_ 4, gs_fthk,
				ac_unit_width/2-rightPanelWidth,  ac_unit_height-gs_fw_upper, 15,
				ac_unit_width/2-rightPanelWidth, gs_fw_lower, 10,
				ac_unit_width/2-frameOrSLightWidthRight, gs_fw_lower, 13,
				ac_unit_width/2-frameOrSLightWidthRight, ac_unit_height-gs_fw_upper, 10
		gosub "textures1"
		body 1

		base
			Prism_ 4, gs_fthk,
				leftFrame, 0, mask2,
				leftFrame, ac_unit_height-gs_fw_upper, 8,
				-ac_unit_width/2+gs_fw_side_left, ac_unit_height-gs_fw_upper, 15,
				-ac_unit_width/2+gs_fw_side_left, 0, 15
		gosub "textures1"
		body 1

		base
		gosub "rightSidelightBottomFrame"
		gosub "textures2"
		body 1

		base
			Prism_ 8, gs_fthk,
				leftFrame, topFrame, mask3,
				rightFrame, topFrame, mask4,
				rightFrame, ac_unit_height-gs_fw_upper, 8+maskRightButFr,
				ac_unit_width/2-gs_fw_side_right, ac_unit_height-gs_fw_upper, 15,
				ac_unit_width/2-rightPanelWidth, ac_unit_height-gs_fw_upper, 10,
				ac_unit_width/2-frameOrSLightWidthRight, ac_unit_height-gs_fw_upper, 15,
				-ac_unit_width/2+gs_fw_side_left, ac_unit_height-gs_fw_upper, 10+maskLeftButFr,
				leftFrame, ac_unit_height-gs_fw_upper, mask2
		gosub "textures2"
		body 1
	endif


	!!!Both in Type1 and Type2

	if bMiddleRail then
		gosub "rightMidRail"
	endif
endif

!!!With left and right sidelights

if gs_sidelight_left & gs_sidelight_right & not(gs_door_transom) then
	if gs_SashText_typ_num = 1 then ! Mittered Joint

		base
			Prism_ 4, gs_fthk,
				-ac_unit_width/2+leftPanelWidth, ac_unit_height-gs_fw_upper, 15,
				-ac_unit_width/2+leftPanelWidth, gs_fw_lower, 10,
				-ac_unit_width/2+frameOrSLightWidthLeft, 0, 15,
				-ac_unit_width/2+frameOrSLightWidthLeft, ac_unit_height-gs_fw_upper, 10
		gosub "textures1"
		body 1

		base
			Prism_ 4, gs_fthk,
				rightFrame, topFrame, mask4,
				rightFrame, 0, 10,
				ac_unit_width/2-gs_fw_side_right, gs_fw_lower, 15,
				ac_unit_width/2-gs_fw_side_right, ac_unit_height-gs_fw_upper, 10
		gosub "textures1"
		body 1

		base
			Prism_ 4, gs_fthk,
				ac_unit_width/2-rightPanelWidth,  ac_unit_height-gs_fw_upper, 15,
				ac_unit_width/2-rightPanelWidth, gs_fw_lower, 10,
				ac_unit_width/2-frameOrSLightWidthRight, 0, 15,
				ac_unit_width/2-frameOrSLightWidthRight, ac_unit_height-gs_fw_upper, 10
		gosub "textures1"
		body 1

		base
			Prism_ 4, gs_fthk,
				leftFrame, 0, mask2,
				leftFrame, topFrame, 10,
				-ac_unit_width/2+gs_fw_side_left, ac_unit_height-gs_fw_upper, 15,
				-ac_unit_width/2+gs_fw_side_left, gs_fw_lower, 10
		gosub "textures1"
		body 1

		base
			Prism_ 4, gs_fthk,
				rightFrame, 0, 10,
				ac_unit_width/2-gs_fw_side_right, gs_fw_lower, 15,
				ac_unit_width/2-rightPanelWidth, gs_fw_lower, 10,
				ac_unit_width/2-frameOrSLightWidthRight, 0, 15
		gosub "textures2"
		body 1

		base
			Prism_ 8, gs_fthk,
				leftFrame, topFrame, mask3,
				rightFrame, topFrame, 10,
				ac_unit_width/2-gs_fw_side_right, ac_unit_height-gs_fw_upper, 15,
				ac_unit_width/2-rightPanelWidth, ac_unit_height-gs_fw_upper, 10,
				ac_unit_width/2-frameOrSLightWidthRight, ac_unit_height-gs_fw_upper, 15,
				-ac_unit_width/2+frameOrSLightWidthLeft, ac_unit_height-gs_fw_upper,10,
				-ac_unit_width/2+leftPanelWidth, ac_unit_height-gs_fw_upper,15,
				-ac_unit_width/2+gs_fw_side_left, ac_unit_height-gs_fw_upper, 10
		gosub "textures2"
		body 1

		base
			Prism_ 4, gs_fthk,
				leftFrame, 0, 10,
				-ac_unit_width/2+gs_fw_side_left, gs_fw_lower, 15,
				-ac_unit_width/2+leftPanelWidth, gs_fw_lower, 10,
				-ac_unit_width/2+frameOrSLightWidthLeft, 0, 15
		gosub "textures2"
		body 1
	else  ! Butt Joint
		base
			Prism_ 4, gs_fthk,
				-ac_unit_width/2+leftPanelWidth, ac_unit_height-gs_fw_upper, 15,
				-ac_unit_width/2+leftPanelWidth, gs_fw_lower, 10,
				-ac_unit_width/2+frameOrSLightWidthLeft, gs_fw_lower, 13,
				-ac_unit_width/2+frameOrSLightWidthLeft, ac_unit_height-gs_fw_upper, 10
		gosub "textures1"
		body 1

		base
			Prism_ 4, gs_fthk,
				rightFrame, ac_unit_height-gs_fw_upper, mask4,
				rightFrame, gs_fw_lower, 8,
				ac_unit_width/2-gs_fw_side_right, gs_fw_lower, 15,
				ac_unit_width/2-gs_fw_side_right, ac_unit_height-gs_fw_upper, 10
		gosub "textures1"
		body 1

		base
			Prism_ 4, gs_fthk,
				ac_unit_width/2-rightPanelWidth,  ac_unit_height-gs_fw_upper, 15,
				ac_unit_width/2-rightPanelWidth, gs_fw_lower, 10,
				ac_unit_width/2-frameOrSLightWidthRight, gs_fw_lower, 13,
				ac_unit_width/2-frameOrSLightWidthRight, ac_unit_height-gs_fw_upper, 10
		gosub "textures1"
		body 1

		base
			Prism_ 4, gs_fthk,
				leftFrame, gs_fw_lower, mask2,
				leftFrame, ac_unit_height-gs_fw_upper, 8,
				-ac_unit_width/2+gs_fw_side_left, ac_unit_height-gs_fw_upper, 15,
				-ac_unit_width/2+gs_fw_side_left, gs_fw_lower, 10
		gosub "textures1"
		body 1

		base
		gosub "rightSidelightBottomFrame"
		gosub "textures2"
		body 1

		base

			Prism_ 10, gs_fthk,
				leftFrame, topFrame, mask3,
				rightFrame, topFrame, mask4,
				rightFrame, ac_unit_height-gs_fw_upper, 8+maskRightButFr,
				ac_unit_width/2-gs_fw_side_right, ac_unit_height-gs_fw_upper, 15,
				ac_unit_width/2-rightPanelWidth, ac_unit_height-gs_fw_upper, 10,
				ac_unit_width/2-frameOrSLightWidthRight, ac_unit_height-gs_fw_upper, 15,
				-ac_unit_width/2+frameOrSLightWidthLeft, ac_unit_height-gs_fw_upper,10,
				-ac_unit_width/2+leftPanelWidth, ac_unit_height-gs_fw_upper,15,
				-ac_unit_width/2+gs_fw_side_left, ac_unit_height-gs_fw_upper, 10+maskLeftButFr,
				leftFrame, ac_unit_height-gs_fw_upper, mask2


		gosub "textures2"
		body 1

		base
		gosub "leftSidelightBottomFrame"
		gosub "textures2"
		body 1
	endif

	!!!Both in Type1 and Type2
	if bMiddleRail then
		gosub "rightMidRail"
		gosub "leftMidRail"
	endif
endif


!!!With Transom
if not(gs_sidelight_left) & not(gs_sidelight_right) & gs_door_transom then
	if gs_SashText_typ_num = 1 then ! Mittered Joint
		base
			Prism_ 6, gs_fthk,
				leftFrame, topFrame, mask4,
				leftFrame, 0, 15,
				-ac_unit_width/2+gs_fw_side_left+(xpltp-gs_fw_side_left)*(xpltp>gs_fw_side_left)*(iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED), 0, 15,
				-ac_unit_width/2+gs_fw_side_left+(xpltp-gs_fw_side_left)*(xpltp>gs_fw_side_left)*(iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED),ac_unit_height-frameOrTransomHeight,10,
				-ac_unit_width/2+gs_fw_side_left+(xpltp-gs_fw_side_left)*(xpltp>gs_fw_side_left)*(iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED), ac_unit_height-topPanelHeight , 15,
				-ac_unit_width/2+gs_fw_side_left+(xpltp-gs_fw_side_left)*(xpltp>gs_fw_side_left)*(iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED), ac_unit_height-gs_fw_upper, 10
		gosub "textures1"
		body 1

		base
			Prism_ 6, gs_fthk,
				rightFrame, 0, mask2,
				rightFrame, topFrame, 10,
				ac_unit_width/2-gs_fw_side_right-(xprtp-gs_fw_side_right)*(xprtp>gs_fw_side_right), ac_unit_height-gs_fw_upper, 15,
				ac_unit_width/2-gs_fw_side_right-(xprtp-gs_fw_side_right)*(xprtp>gs_fw_side_right), ac_unit_height-topPanelHeight , 10,
				ac_unit_width/2-gs_fw_side_right-(xprtp-gs_fw_side_right)*(xprtp>gs_fw_side_right), ac_unit_height-frameOrTransomHeight,15,
				ac_unit_width/2-gs_fw_side_right-(xprtp-gs_fw_side_right)*(xprtp>gs_fw_side_right), 0, 15
		gosub "textures1"
		body 1

		base
			Prism_ 4, gs_fthk,
				rightFrame, topFrame, mask3,
				leftFrame, topFrame, 10,
				-ac_unit_width/2+gs_fw_side_left, ac_unit_height-gs_fw_upper, 15,
				ac_unit_width/2-gs_fw_side_right, ac_unit_height-gs_fw_upper, 10
		gosub "textures2"
		body 1
	else  ! Butt Joint
		base
			Prism_ 6, gs_fthk,
				leftFrame, ac_unit_height-gs_fw_upper, mask4,
				leftFrame, 0, 15,
				-ac_unit_width/2+gs_fw_side_left+(xpltp-gs_fw_side_left)*(xpltp>gs_fw_side_left)*(iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED), 0, 15,
				-ac_unit_width/2+gs_fw_side_left+(xpltp-gs_fw_side_left)*(xpltp>gs_fw_side_left)*(iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED),ac_unit_height-frameOrTransomHeight,10,
				-ac_unit_width/2+gs_fw_side_left+(xpltp-gs_fw_side_left)*(xpltp>gs_fw_side_left)*(iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED), ac_unit_height-topPanelHeight , 15,
				-ac_unit_width/2+gs_fw_side_left+(xpltp-gs_fw_side_left)*(xpltp>gs_fw_side_left)*(iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED), ac_unit_height-gs_fw_upper, 10
		gosub "textures1"
		body 1

		base
			Prism_ 6, gs_fthk,
				rightFrame, 0,mask2,
				rightFrame, ac_unit_height-gs_fw_upper, 10,
				ac_unit_width/2-gs_fw_side_right-(xprtp-gs_fw_side_right)*(xprtp>gs_fw_side_right), ac_unit_height-gs_fw_upper, 15,
				ac_unit_width/2-gs_fw_side_right-(xprtp-gs_fw_side_right)*(xprtp>gs_fw_side_right), ac_unit_height-topPanelHeight , 10,
				ac_unit_width/2-gs_fw_side_right-(xprtp-gs_fw_side_right)*(xprtp>gs_fw_side_right), ac_unit_height-frameOrTransomHeight,15,
				ac_unit_width/2-gs_fw_side_right-(xprtp-gs_fw_side_right)*(xprtp>gs_fw_side_right), 0, 15
		gosub "textures1"
		body 1

		base
			Prism_ 6, gs_fthk,
				rightFrame, topFrame,mask3,
				leftFrame, topFrame,mask4,
				leftFrame, ac_unit_height-gs_fw_upper, 8+maskLeftButFr,
				-ac_unit_width/2+gs_fw_side_left, ac_unit_height-gs_fw_upper, 15,
				ac_unit_width/2-gs_fw_side_right, ac_unit_height-gs_fw_upper, 10+maskRightButFr,
				rightFrame, ac_unit_height-gs_fw_upper, mask2
		gosub "textures2"
		body 1
	endif

	!!!Both in Type1 and Type2
	base
		Prism_ 4, gs_fthk,
			ac_unit_width/2-gs_fw_side_right-(xprtp-gs_fw_side_right)*(xprtp>gs_fw_side_right), ac_unit_height-topPanelHeight , 10,
			ac_unit_width/2-gs_fw_side_right-(xprtp-gs_fw_side_right)*(xprtp>gs_fw_side_right), ac_unit_height-frameOrTransomHeight,15,
			-ac_unit_width/2+gs_fw_side_left+(xpltp-gs_fw_side_left)*(xpltp>gs_fw_side_left)*(iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED),ac_unit_height-frameOrTransomHeight,10,
			-ac_unit_width/2+gs_fw_side_left+(xpltp-gs_fw_side_left)*(xpltp>gs_fw_side_left)*(iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED), ac_unit_height-topPanelHeight , 15
	gosub "textures2"
	body 1
endif



!!!Left sidelight and transom
if gs_sidelight_left & not(gs_sidelight_right) & gs_door_transom then
	if gs_SashText_typ_num = 1 then ! Mittered Joint
		base
			Prism_ 6, gs_fthk,
				leftFrame, topFrame,mask4,
				leftFrame, 0, 10,
				-ac_unit_width/2+gs_fw_side_left, gs_fw_lower, 15,
				-ac_unit_width/2+gs_fw_side_left, ac_unit_height-frameOrTransomHeight,10,
				-ac_unit_width/2+gs_fw_side_left, ac_unit_height-topPanelHeight, 15,
				-ac_unit_width/2+gs_fw_side_left, ac_unit_height-gs_fw_upper, 10
		gosub "textures1"
		body 1

		base
			Prism_ 8, gs_fthk,
				-ac_unit_width/2+leftPanelWidth, ac_unit_height-gs_fw_upper, 15,
				-ac_unit_width/2+leftPanelWidth, ac_unit_height-topPanelHeight, 10,
				-ac_unit_width/2+leftPanelWidth,ac_unit_height-frameOrTransomHeight,15,
				-ac_unit_width/2+leftPanelWidth, gs_fw_lower, 10,
				-ac_unit_width/2+frameOrSLightWidthLeft, 0, 15,
				-ac_unit_width/2+frameOrSLightWidthLeft,ac_unit_height-frameOrTransomHeight,10,
				-ac_unit_width/2+frameOrSLightWidthLeft,ac_unit_height-topPanelHeight,15,
				-ac_unit_width/2+frameOrSLightWidthLeft, ac_unit_height-gs_fw_upper, 10
		gosub "textures1"
		body 1

		base
			Prism_ 6, gs_fthk,
				rightFrame, 0, mask2,
				rightFrame, topFrame, 10,
				ac_unit_width/2-gs_fw_side_right, ac_unit_height-gs_fw_upper, 15,
				ac_unit_width/2-gs_fw_side_right, ac_unit_height-topPanelHeight,10,
				ac_unit_width/2-gs_fw_side_right, ac_unit_height-frameOrTransomHeight,15,
				ac_unit_width/2-gs_fw_side_right, 0, 15
		gosub "textures1"
		body 1

		base
			Prism_ 4, gs_fthk,
				leftFrame, 0, 10,
				-ac_unit_width/2+gs_fw_side_left, gs_fw_lower, 15,
				-ac_unit_width/2+leftPanelWidth, gs_fw_lower, 10,
				-ac_unit_width/2+frameOrSLightWidthLeft, 0, 15
		gosub "textures2"
		body 1

		base
			Prism_ 6, gs_fthk,
				rightFrame, topFrame, mask3,
				leftFrame, topFrame, 10,
				-ac_unit_width/2+gs_fw_side_left, ac_unit_height-gs_fw_upper, 15,
				-ac_unit_width/2+leftPanelWidth, ac_unit_height-gs_fw_upper, 10,
				-ac_unit_width/2+frameOrSLightWidthLeft, ac_unit_height-gs_fw_upper, 15,
				ac_unit_width/2-gs_fw_side_right, ac_unit_height-gs_fw_upper, 10
		gosub "textures2"
		body 1
	else  ! Butt Joint
		base

			Prism_ 6, gs_fthk,
				leftFrame, ac_unit_height-gs_fw_upper, mask4,
				leftFrame, gs_fw_lower, 8,
				-ac_unit_width/2+gs_fw_side_left, gs_fw_lower, 15,
				-ac_unit_width/2+gs_fw_side_left, ac_unit_height-frameOrTransomHeight,10,
				-ac_unit_width/2+gs_fw_side_left, ac_unit_height-topPanelHeight, 15,
				-ac_unit_width/2+gs_fw_side_left, ac_unit_height-gs_fw_upper, 10
		gosub "textures1"
		body 1

		base
			Prism_ 8, gs_fthk,
				-ac_unit_width/2+leftPanelWidth, ac_unit_height-gs_fw_upper, 15,
				-ac_unit_width/2+leftPanelWidth, ac_unit_height-topPanelHeight, 10,
				-ac_unit_width/2+leftPanelWidth, ac_unit_height-frameOrTransomHeight,15,
				-ac_unit_width/2+leftPanelWidth, gs_fw_lower, 10,
				-ac_unit_width/2+frameOrSLightWidthLeft, gs_fw_lower, 13,
				-ac_unit_width/2+frameOrSLightWidthLeft,ac_unit_height-frameOrTransomHeight,10,
				-ac_unit_width/2+frameOrSLightWidthLeft,ac_unit_height-topPanelHeight,15,
				-ac_unit_width/2+frameOrSLightWidthLeft, ac_unit_height-gs_fw_upper, 10
		gosub "textures1"
		body 1

		base
			Prism_ 6, gs_fthk,
				rightFrame, 0,mask2,
				rightFrame, ac_unit_height-gs_fw_upper, 8,
				ac_unit_width/2-gs_fw_side_right, ac_unit_height-gs_fw_upper, 15,
				ac_unit_width/2-gs_fw_side_right, ac_unit_height-topPanelHeight, 10,
				ac_unit_width/2-gs_fw_side_right, ac_unit_height-frameOrTransomHeight,15,
				ac_unit_width/2-gs_fw_side_right, 0, 15
		gosub "textures1"
		body 1

		base
		gosub "leftSidelightBottomFrame"

		gosub "textures2"
		body 1

		base
		Prism_ 8, gs_fthk,
				rightFrame, topFrame,mask3,
				leftFrame, topFrame,mask4,
				leftFrame, ac_unit_height-gs_fw_upper, 8+maskLeftButFr,
				-ac_unit_width/2+gs_fw_side_left, ac_unit_height-gs_fw_upper, 15,
				-ac_unit_width/2+leftPanelWidth, ac_unit_height-gs_fw_upper, 10,
				-ac_unit_width/2+frameOrSLightWidthLeft, ac_unit_height-gs_fw_upper, 15,
				ac_unit_width/2-gs_fw_side_right, ac_unit_height-gs_fw_upper, 10+maskRightButFr,
				rightFrame, ac_unit_height-gs_fw_upper, mask2
		gosub "textures2"
		body 1
	endif

	!!!Both in Type1 and Type2
	base
	if bMiddleRail then
		gosub "leftMidRail"
	endif
	Prism_ 4, gs_fthk,
			ac_unit_width/2-gs_fw_side_right, ac_unit_height-topPanelHeight,10,
			ac_unit_width/2-gs_fw_side_right, ac_unit_height-frameOrTransomHeight,15,
			-ac_unit_width/2+frameOrSLightWidthLeft, ac_unit_height-frameOrTransomHeight, 10,
			-ac_unit_width/2+frameOrSLightWidthLeft, ac_unit_height-topPanelHeight, 15
	Prism_ 4, gs_fthk,
			-ac_unit_width/2+gs_fw_side_left, ac_unit_height-topPanelHeight,10,
			-ac_unit_width/2+gs_fw_side_left, ac_unit_height-frameOrTransomHeight,15,
			-ac_unit_width/2+leftPanelWidth, ac_unit_height-frameOrTransomHeight, 10,
			-ac_unit_width/2+leftPanelWidth, ac_unit_height-topPanelHeight, 15
	gosub "textures2"
	body 1
endif


!!!With Right Sidelight and Transom
if not(gs_sidelight_left) AND gs_sidelight_right AND gs_door_transom then
	if gs_SashText_typ_num = 1 then ! Mittered Joint
		base
			Prism_ 6, gs_fthk,
				rightFrame, topFrame, mask4,
				rightFrame, 0, 10,
				ac_unit_width/2-gs_fw_side_right, gs_fw_lower, 15,
				ac_unit_width/2-gs_fw_side_right, ac_unit_height-frameOrTransomHeight,10,
				ac_unit_width/2-gs_fw_side_right, ac_unit_height-topPanelHeight, 15,
				ac_unit_width/2-gs_fw_side_right, ac_unit_height-gs_fw_upper, 10
		gosub "textures1"
		body 1

		base
			Prism_ 8, gs_fthk,
				ac_unit_width/2-rightPanelWidth, ac_unit_height-gs_fw_upper, 15,
				ac_unit_width/2-rightPanelWidth, ac_unit_height-topPanelHeight, 10,
				ac_unit_width/2-rightPanelWidth,ac_unit_height-frameOrTransomHeight,15,
				ac_unit_width/2-rightPanelWidth, gs_fw_lower, 10,
				ac_unit_width/2-frameOrSLightWidthRight, 0, 15,
				ac_unit_width/2-frameOrSLightWidthRight,ac_unit_height-frameOrTransomHeight,10,
				ac_unit_width/2-frameOrSLightWidthRight,ac_unit_height-topPanelHeight,15,
				ac_unit_width/2-frameOrSLightWidthRight, ac_unit_height-gs_fw_upper, 10
		gosub "textures1"
		body 1

		base
			Prism_ 6, gs_fthk,
				leftFrame, 0, mask2,
				leftFrame, topFrame, 10,
				-ac_unit_width/2+gs_fw_side_left, ac_unit_height-gs_fw_upper, 15,
				-ac_unit_width/2+gs_fw_side_left, ac_unit_height-topPanelHeight,10,
				-ac_unit_width/2+gs_fw_side_left, ac_unit_height-frameOrTransomHeight,15,
				-ac_unit_width/2+gs_fw_side_left, 0, 15
		gosub "textures1"
		body 1

		base
			Prism_ 4, gs_fthk,
				rightFrame, 0, 10,
				ac_unit_width/2-gs_fw_side_right, gs_fw_lower, 15,
				ac_unit_width/2-rightPanelWidth, gs_fw_lower, 10,
				ac_unit_width/2-frameOrSLightWidthRight, 0, 15
		gosub "textures2"
		body 1

		base
			Prism_ 6, gs_fthk,
				leftFrame, topFrame, mask3,
				rightFrame, topFrame, 10,
				ac_unit_width/2-gs_fw_side_right, ac_unit_height-gs_fw_upper, 15,
				ac_unit_width/2-rightPanelWidth, ac_unit_height-gs_fw_upper, 10,
				ac_unit_width/2-frameOrSLightWidthRight, ac_unit_height-gs_fw_upper, 15,
				-ac_unit_width/2+gs_fw_side_left, ac_unit_height-gs_fw_upper, 10
		gosub "textures2"
		body 1
	else  ! Butt Joint
		base
			Prism_ 6, gs_fthk,
				rightFrame, ac_unit_height-gs_fw_upper, mask4,
				rightFrame, gs_fw_lower, 8,
				ac_unit_width/2-gs_fw_side_right, gs_fw_lower, 15,
				ac_unit_width/2-gs_fw_side_right, ac_unit_height-frameOrTransomHeight,10,
				ac_unit_width/2-gs_fw_side_right, ac_unit_height-topPanelHeight, 15,
				ac_unit_width/2-gs_fw_side_right, ac_unit_height-gs_fw_upper, 10
		gosub "textures1"
		body 1

		base
			Prism_ 8, gs_fthk,
				ac_unit_width/2-rightPanelWidth,  ac_unit_height-gs_fw_upper, 15,
				ac_unit_width/2-rightPanelWidth, ac_unit_height-topPanelHeight, 10,
				ac_unit_width/2-rightPanelWidth, ac_unit_height-frameOrTransomHeight,15,
				ac_unit_width/2-rightPanelWidth, gs_fw_lower, 10,
				ac_unit_width/2-frameOrSLightWidthRight, gs_fw_lower, 13,
				ac_unit_width/2-frameOrSLightWidthRight,ac_unit_height-frameOrTransomHeight,10,
				ac_unit_width/2-frameOrSLightWidthRight,ac_unit_height-topPanelHeight,15,
				ac_unit_width/2-frameOrSLightWidthRight, ac_unit_height-gs_fw_upper, 10
		gosub "textures1"
		body 1

		base
			Prism_ 6, gs_fthk,
				leftFrame, 0, mask2,
				leftFrame, ac_unit_height-gs_fw_upper, 8,
				-ac_unit_width/2+gs_fw_side_left, ac_unit_height-gs_fw_upper, 15,
				-ac_unit_width/2+gs_fw_side_left, ac_unit_height-topPanelHeight, 10,
				-ac_unit_width/2+gs_fw_side_left, ac_unit_height-frameOrTransomHeight,15,
				-ac_unit_width/2+gs_fw_side_left, 0, 15
		gosub "textures1"
		body 1

		base
		gosub "rightSidelightBottomFrame"
		gosub "textures2"
		body 1

		base
			Prism_ 8, gs_fthk,
				leftFrame, topFrame, mask3,
				rightFrame, topFrame, mask4,
				rightFrame, ac_unit_height-gs_fw_upper, 8+maskRightButFr,
				ac_unit_width/2-gs_fw_side_right, ac_unit_height-gs_fw_upper, 15,
				ac_unit_width/2-rightPanelWidth, ac_unit_height-gs_fw_upper, 10,
				ac_unit_width/2-frameOrSLightWidthRight, ac_unit_height-gs_fw_upper, 15,
				-ac_unit_width/2+gs_fw_side_left, ac_unit_height-gs_fw_upper, 10+maskLeftButFr,
				leftFrame, ac_unit_height-gs_fw_upper, mask2
		gosub "textures2"
		body 1
	endif

	!!!Both in Type1 and Type2
	base
	if bMiddleRail then
		gosub "rightMidRail"
	endif
	Prism_ 4, gs_fthk,
		-ac_unit_width/2+gs_fw_side_left, ac_unit_height-topPanelHeight,10,
		-ac_unit_width/2+gs_fw_side_left, ac_unit_height-frameOrTransomHeight,15,
		ac_unit_width/2-frameOrSLightWidthRight, ac_unit_height-frameOrTransomHeight, 10,
		ac_unit_width/2-frameOrSLightWidthRight, ac_unit_height-topPanelHeight, 15
	Prism_ 4, gs_fthk,
		ac_unit_width/2-gs_fw_side_right, ac_unit_height-topPanelHeight,10,
		ac_unit_width/2-gs_fw_side_right, ac_unit_height-frameOrTransomHeight,15,
		ac_unit_width/2-rightPanelWidth, ac_unit_height-frameOrTransomHeight, 10,
		ac_unit_width/2-rightPanelWidth, ac_unit_height-topPanelHeight, 15
	gosub "textures2"
	body 1
endif


!!!With left, right sidelight and transom
if gs_sidelight_left AND gs_sidelight_right AND gs_door_transom then
	if gs_SashText_typ_num = 1 then ! Mittered Joint
		base
			Prism_ 8, gs_fthk,
				-ac_unit_width/2+leftPanelWidth, ac_unit_height-gs_fw_upper, 15,
				-ac_unit_width/2+leftPanelWidth, ac_unit_height-topPanelHeight, 10,
				-ac_unit_width/2+leftPanelWidth, ac_unit_height-frameOrTransomHeight,15,
				-ac_unit_width/2+leftPanelWidth, gs_fw_lower, 10,
				-ac_unit_width/2+frameOrSLightWidthLeft, 0, 15,
				-ac_unit_width/2+frameOrSLightWidthLeft,ac_unit_height-frameOrTransomHeight,10,
				-ac_unit_width/2+frameOrSLightWidthLeft,ac_unit_height-topPanelHeight,15,
				-ac_unit_width/2+frameOrSLightWidthLeft, ac_unit_height-gs_fw_upper, 10
		gosub "textures1"
		body 1


		base
			Prism_ 6, gs_fthk,
				rightFrame, topFrame, mask4,
				rightFrame, 0, 10,
				ac_unit_width/2-gs_fw_side_right, gs_fw_lower, 15,
				ac_unit_width/2-gs_fw_side_right, ac_unit_height-frameOrTransomHeight,10,
				ac_unit_width/2-gs_fw_side_right, ac_unit_height-topPanelHeight, 15,
				ac_unit_width/2-gs_fw_side_right, ac_unit_height-gs_fw_upper, 10
		gosub "textures1"
		body 1

		base
			Prism_ 8, gs_fthk,
				ac_unit_width/2-rightPanelWidth,  ac_unit_height-gs_fw_upper, 15,
				ac_unit_width/2-rightPanelWidth, ac_unit_height-topPanelHeight, 10,
				ac_unit_width/2-rightPanelWidth, ac_unit_height-frameOrTransomHeight,15,
				ac_unit_width/2-rightPanelWidth, gs_fw_lower, 10,
				ac_unit_width/2-frameOrSLightWidthRight, 0, 15,
				ac_unit_width/2-frameOrSLightWidthRight,ac_unit_height-frameOrTransomHeight,10,
				ac_unit_width/2-frameOrSLightWidthRight,ac_unit_height-topPanelHeight,15,
				ac_unit_width/2-frameOrSLightWidthRight, ac_unit_height-gs_fw_upper, 10
		gosub "textures1"
		body 1

		base
			Prism_ 6, gs_fthk,
				leftFrame, 0, mask2,
				leftFrame, topFrame, 10,
				-ac_unit_width/2+gs_fw_side_left, ac_unit_height-gs_fw_upper, 15,
				-ac_unit_width/2+gs_fw_side_left, ac_unit_height-topPanelHeight,10,
				-ac_unit_width/2+gs_fw_side_left, ac_unit_height-frameOrTransomHeight,15,
				-ac_unit_width/2+gs_fw_side_left, gs_fw_lower, 10
		gosub "textures1"
		body 1

		base
			Prism_ 4, gs_fthk,
				rightFrame, 0, 10,
				ac_unit_width/2-gs_fw_side_right, gs_fw_lower, 15,
				ac_unit_width/2-rightPanelWidth, gs_fw_lower, 10,
				ac_unit_width/2-frameOrSLightWidthRight, 0, 15
			Prism_ 4, gs_fthk,
				leftFrame, 0, 10,
				-ac_unit_width/2+gs_fw_side_left, gs_fw_lower, 15,
				-ac_unit_width/2+leftPanelWidth, gs_fw_lower, 10,
				-ac_unit_width/2+frameOrSLightWidthLeft, 0, 15
		gosub "textures2"
		body 1
		base
			Prism_ 8, gs_fthk,
				leftFrame, topFrame, mask3,
				rightFrame, topFrame, 10,
				ac_unit_width/2-gs_fw_side_right, ac_unit_height-gs_fw_upper, 15,
				ac_unit_width/2-rightPanelWidth, ac_unit_height-gs_fw_upper, 10,
				ac_unit_width/2-frameOrSLightWidthRight, ac_unit_height-gs_fw_upper, 15,
				-ac_unit_width/2+frameOrSLightWidthLeft, ac_unit_height-gs_fw_upper,10,
				-ac_unit_width/2+leftPanelWidth, ac_unit_height-gs_fw_upper,15,
				-ac_unit_width/2+gs_fw_side_left, ac_unit_height-gs_fw_upper, 10
		gosub "textures2"
		body 1
	else  ! Butt joint
		base
			Prism_ 8, gs_fthk,
				-ac_unit_width/2+leftPanelWidth, ac_unit_height-gs_fw_upper, 15,
				-ac_unit_width/2+leftPanelWidth, ac_unit_height-topPanelHeight, 10,
				-ac_unit_width/2+leftPanelWidth, ac_unit_height-frameOrTransomHeight,15,
				-ac_unit_width/2+leftPanelWidth, gs_fw_lower, 10,
				-ac_unit_width/2+frameOrSLightWidthLeft, gs_fw_lower, 13,
				-ac_unit_width/2+frameOrSLightWidthLeft,ac_unit_height-frameOrTransomHeight,10,
				-ac_unit_width/2+frameOrSLightWidthLeft,ac_unit_height-topPanelHeight,15,
				-ac_unit_width/2+frameOrSLightWidthLeft, ac_unit_height-gs_fw_upper, 10
		gosub "textures1"
		body 1


		base
			Prism_ 6, gs_fthk,
				rightFrame, ac_unit_height-gs_fw_upper, mask4,
				rightFrame, gs_fw_lower, 8,
				ac_unit_width/2-gs_fw_side_right, gs_fw_lower, 15,
				ac_unit_width/2-gs_fw_side_right, ac_unit_height-frameOrTransomHeight,10,
				ac_unit_width/2-gs_fw_side_right, ac_unit_height-topPanelHeight, 15,
				ac_unit_width/2-gs_fw_side_right, ac_unit_height-gs_fw_upper, 10
		gosub "textures1"
		body 1

		base
			Prism_ 8, gs_fthk,
				ac_unit_width/2-rightPanelWidth, ac_unit_height-gs_fw_upper, 15,
				ac_unit_width/2-rightPanelWidth, ac_unit_height-topPanelHeight, 10,
				ac_unit_width/2-rightPanelWidth, ac_unit_height-frameOrTransomHeight,15,
				ac_unit_width/2-rightPanelWidth, gs_fw_lower, 10,
				ac_unit_width/2-frameOrSLightWidthRight, gs_fw_lower, 13,
				ac_unit_width/2-frameOrSLightWidthRight,ac_unit_height-frameOrTransomHeight,10,
				ac_unit_width/2-frameOrSLightWidthRight,ac_unit_height-topPanelHeight,15,
				ac_unit_width/2-frameOrSLightWidthRight, ac_unit_height-gs_fw_upper, 10
		gosub "textures1"
		body 1

		base
			Prism_ 6, gs_fthk,
				leftFrame, gs_fw_lower, mask2,
				leftFrame, ac_unit_height-gs_fw_upper, 8,
				-ac_unit_width/2+gs_fw_side_left, ac_unit_height-gs_fw_upper, 15,
				-ac_unit_width/2+gs_fw_side_left, ac_unit_height-topPanelHeight, 10,
				-ac_unit_width/2+gs_fw_side_left, ac_unit_height-frameOrTransomHeight,15,
				-ac_unit_width/2+gs_fw_side_left, gs_fw_lower, 10
		gosub "textures1"
		body 1

		base
		gosub "rightSidelightBottomFrame"
		gosub "leftSidelightBottomFrame"
		gosub "textures2"
		body 1

		base
			Prism_ 10, gs_fthk,
				leftFrame, topFrame, mask3,
				rightFrame, topFrame, mask4,
				rightFrame, ac_unit_height-gs_fw_upper, 8+maskRightButFr,
				ac_unit_width/2-gs_fw_side_right, ac_unit_height-gs_fw_upper, 15,
				ac_unit_width/2-rightPanelWidth, ac_unit_height-gs_fw_upper, 10,
				ac_unit_width/2-frameOrSLightWidthRight, ac_unit_height-gs_fw_upper, 15,
				-ac_unit_width/2+frameOrSLightWidthLeft, ac_unit_height-gs_fw_upper,10,
				-ac_unit_width/2+leftPanelWidth, ac_unit_height-gs_fw_upper,15,
				-ac_unit_width/2+gs_fw_side_left, ac_unit_height-gs_fw_upper, 10+maskLeftButFr,
				leftFrame, ac_unit_height-gs_fw_upper, mask2
		gosub "textures2"
		body 1
	endif

	!!!Both in Type1 and Type2
	if bMiddleRail then
		material gs_midrail_mat
		gosub "rightMidRail"
		gosub "leftMidRail"
	endif

	material gs_frame_mat
	Prism_ 4, gs_fthk,
		ac_unit_width/2-gs_fw_side_right, ac_unit_height-topPanelHeight,10,
		ac_unit_width/2-gs_fw_side_right, ac_unit_height-frameOrTransomHeight,15,
		ac_unit_width/2-rightPanelWidth, ac_unit_height-frameOrTransomHeight, 10,
		ac_unit_width/2-rightPanelWidth, ac_unit_height-topPanelHeight, 15
	Prism_ 4, gs_fthk,
		-ac_unit_width/2+gs_fw_side_left, ac_unit_height-topPanelHeight,10,
		-ac_unit_width/2+gs_fw_side_left, ac_unit_height-frameOrTransomHeight,15,
		-ac_unit_width/2+leftPanelWidth, ac_unit_height-frameOrTransomHeight, 10,
		-ac_unit_width/2+leftPanelWidth, ac_unit_height-topPanelHeight, 15
	Prism_ 4, gs_fthk,
		ac_unit_width/2-frameOrSLightWidthRight, ac_unit_height-frameOrTransomHeight, 10,
		ac_unit_width/2-frameOrSLightWidthRight, ac_unit_height-topPanelHeight, 15,
		-ac_unit_width/2+frameOrSLightWidthLeft, ac_unit_height-topPanelHeight, 10,
		-ac_unit_width/2+frameOrSLightWidthLeft, ac_unit_height-frameOrTransomHeight, 15
endif

if iFrameStyleLeft <> FRAME_STYLE_VISIBLE_MULLIONS AND gs_door_transom AND gs_cl then CUTEND

if iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED AND gs_door_transom then CUTEND

if iFrameStyleRight <> FRAME_STYLE_VISIBLE_MULLIONS AND gs_door_transom AND gs_cr then CUTEND

if iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED AND gs_door_transom then CUTEND

if iFrameStyleLeft <> FRAME_STYLE_VISIBLE_MULLIONS AND gs_cl AND gs_sidelight_left then CUTEND

if iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED AND gs_sidelight_left then CUTEND

if iFrameStyleRight <> FRAME_STYLE_VISIBLE_MULLIONS AND gs_cr AND gs_sidelight_right then CUTEND

if iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED AND gs_sidelight_right then CUTEND

if iFrameStyleLeft <> FRAME_STYLE_VISIBLE_MULLIONS AND gs_cl AND gs_sidelight_left AND bMiddleRail then CUTEND

if iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED AND gs_sidelight_left AND bMiddleRail then CUTEND

if iFrameStyleRight <> FRAME_STYLE_VISIBLE_MULLIONS AND gs_cr AND gs_sidelight_right AND bMiddleRail then CUTEND

if iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED AND gs_sidelight_right AND bMiddleRail then CUTEND

if gs_cl then CUTEND
if gs_cr then CUTEND

if isVentilationOverFrame then
	cutend
endif

!! END OF FRAME !!

ENDGROUP

GROUP "middle rail"
sect_fill fr_sect_fill_type, fr_sect_fill_bg, fr_sect_fill_fg, gs_pen_2D

if bMiddleRail then
	MATERIAL gs_midrail_mat

	if gs_cl AND leftCornerAngle<180 then
		ADDX -ac_unit_width/2
		ROTY -leftCornerAngle/2
			CUTPLANE
		DEL 2
	endif

	if gs_cl AND leftCornerAngle>180 then
		ADD -ac_unit_width/2-WIDO_REVEAL_SIDE*gs_fthk*TAN(90-leftCornerAngle/2), 0, (1-WIDO_REVEAL_SIDE)*gs_fthk
		ROTY -leftCornerAngle/2
		CUTPLANE
		DEL 2
	endif

	if gs_cr AND rightCornerAngle<180 then
		ADDX ac_unit_width/2
		ROTY rightCornerAngle/2
			CUTPLANE
		DEL 2
	endif

	if gs_cr AND rightCornerAngle>180 then
		ADD ac_unit_width/2+WIDO_REVEAL_SIDE*gs_fthk*TAN(90-rightCornerAngle/2), 0, (1-WIDO_REVEAL_SIDE)*gs_fthk
		ROTY rightCornerAngle/2
			CUTPLANE
		DEL 2
	endif

	if gs_cl=1 then CUTEND
	if gs_cr=1 then CUTEND
endif
ENDGROUP

sect_fill fr_sect_fill_type, fr_sect_fill_bg, fr_sect_fill_fg, gs_pen_2D
PLACEGROUP SUBGROUP ("middle rail", "frame")

if not(gs_mf) | iDoorType = 1 then
	CUTPOLYA 5, 1, 0,	!gs_fthk+gs_grid_thk,
		-ac_unit_width/2+frameOrSLightWidthLeft,	0,	15,
		-ac_unit_width/2+frameOrSLightWidthLeft,	ac_unit_height-frameOrTransomHeight,	15,
		ac_unit_width/2-frameOrSLightWidthRight,	ac_unit_height-frameOrTransomHeight,	15,
		ac_unit_width/2-frameOrSLightWidthRight,	0,	15,
		-ac_unit_width/2+frameOrSLightWidthLeft,	0,	-1
endif

PLACEGROUP "frame"

if not(gs_mf) | iDoorType = 1 then CUTEND


! =============================================================================
! Horizontal Grids
! =============================================================================

GROUP "gridsh"
	sect_fill fr_sect_fill_type, fr_sect_fill_bg, fr_sect_fill_fg, gs_pen_2D

	MATERIAL gs_sash_mat

! =============================================================================
! Corner
! =============================================================================

	if gs_cl AND leftCornerAngle<180 then
		ADDX -ac_unit_width/2
		ROTY -leftCornerAngle/2
			CUTPLANE
		DEL 2
	endif

	if gs_cl AND leftCornerAngle>180 then
		ADD -ac_unit_width/2-WIDO_REVEAL_SIDE*gs_fthk*TAN(90-leftCornerAngle/2), 0, (1-WIDO_REVEAL_SIDE)*gs_fthk
		ROTY -leftCornerAngle/2
		CUTPLANE
		DEL 2
	endif

	if gs_cr AND rightCornerAngle<180 then
		ADDX ac_unit_width/2
		ROTY rightCornerAngle/2
			CUTPLANE
		DEL 2
	endif

	if gs_cr AND rightCornerAngle>180 then
		ADD ac_unit_width/2+WIDO_REVEAL_SIDE*gs_fthk*TAN(90-rightCornerAngle/2), 0, (1-WIDO_REVEAL_SIDE)*gs_fthk
		ROTY rightCornerAngle/2
			CUTPLANE
		DEL 2
	endif


! =============================================================================
! Butt Glazed
! =============================================================================

	if iFrameStyleRight = FRAME_STYLE_ANGLE_FRAME AND gs_cr=1 AND rightCornerAngle<180 then
		ROTX 90
		CUTPOLYA 6, 1, 0,
			ac_unit_width/2, 0, 15,
			ac_unit_width/2-(gs_gsb+gs_glass_thk)*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(rightCornerAngle/2), 0,     15,
			ac_unit_width/2-(gs_gsb+gs_glass_thk)*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(rightCornerAngle/2), (gs_gsb+gs_glass_thk),     15,
			ac_unit_width/2-gs_fthk*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(rightCornerAngle/2), gs_fthk,      15,
			ac_unit_width/2, gs_fthk, 15,
			ac_unit_width/2, 0,      -1
		DEL 1
	endif

	if iFrameStyleRight = FRAME_STYLE_ANGLE_FRAME AND gs_cr=1 AND rightCornerAngle>180 then
		ROTX 90
		CUTPOLYA 6, 1, 0,
			ac_unit_width/2, 0,      15,
			ac_unit_width/2+(gs_fthk-gs_gsb-gs_glass_thk)*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(180-rightCornerAngle/2), 0,    15,
			ac_unit_width/2+(gs_fthk-gs_gsb-gs_glass_thk)*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(180-rightCornerAngle/2), (gs_gsb+gs_glass_thk),    15,
			ac_unit_width/2-(gs_frame_width/2)/SIN(180-rightCornerAngle/2), gs_fthk,      15,
			ac_unit_width/2, gs_fthk,     15,
			ac_unit_width/2, 0,      -1
		DEL 1
	endif

	if iFrameStyleLeft = FRAME_STYLE_ANGLE_FRAME AND gs_cl=1 AND leftCornerAngle<180 then
		ROTX 90
		CUTPOLYA 6, 1, 0,
			-ac_unit_width/2+(gs_gsb+gs_glass_thk)*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2), gs_gsb+gs_glass_thk,15,
			-ac_unit_width/2+(gs_gsb+gs_glass_thk)*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2), 0,15,
			-ac_unit_width/2,0,15,
			-ac_unit_width/2, gs_fthk,15,
			-ac_unit_width/2+gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2),gs_fthk, 15,
			-ac_unit_width/2+(gs_gsb+gs_glass_thk)*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2), gs_gsb+gs_glass_thk,-1
		DEL 1
	endif

	if iFrameStyleLeft = FRAME_STYLE_ANGLE_FRAME AND gs_cl=1 AND leftCornerAngle>180 then
		ROTX 90
		CUTPOLYA 6, 1, 0,
			-ac_unit_width/2+(gs_fthk-gs_gsb-gs_glass_thk)*TAN(90+leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2), 0, 15,
			-ac_unit_width/2, 0, 15,
			-ac_unit_width/2, gs_fthk, 15,
			-ac_unit_width/2+(gs_frame_width/2)/SIN(leftCornerAngle/2), gs_fthk, 15,
			-ac_unit_width/2+(gs_fthk-gs_gsb-gs_glass_thk)*TAN(90+leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2), gs_gsb+gs_glass_thk, 15,
			-ac_unit_width/2+(gs_fthk-gs_gsb-gs_glass_thk)*TAN(90+leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2), 0, -1
		DEL 1
	endif

	if iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED AND gs_cl=1 AND leftCornerAngle<180 then
		ROTX 90
		CUTPOLYA 5, 1, 0,
			-ac_unit_width/2+(gs_frame_width/2)/SIN(leftCornerAngle/2)+(gs_gsb+gs_glass_thk)/TAN(leftCornerAngle/2), (gs_gsb+gs_glass_thk),15,
			-ac_unit_width/2, (gs_gsb+gs_glass_thk),15,
			-ac_unit_width/2, gs_fthk,15,
			-ac_unit_width/2+(gs_fthk)*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2),gs_fthk,15,
			-ac_unit_width/2+(gs_frame_width/2)/SIN(leftCornerAngle/2)+(gs_gsb+gs_glass_thk)/TAN(leftCornerAngle/2), (gs_gsb+gs_glass_thk),-1
		DEL 1
	endif

	if iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED AND gs_cl=1 AND leftCornerAngle>180 then
		ROTX 90
		CUTPOLYA 5, 1, 0,
			-ac_unit_width/2+(gs_fthk-(gs_gsb+gs_glass_thk))*TAN(90+leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2), (gs_gsb+gs_glass_thk), 95,
			-ac_unit_width/2, (gs_gsb+gs_glass_thk), 95,
			-ac_unit_width/2, gs_fthk, 95,
			-ac_unit_width/2+(gs_frame_width/2)/SIN(leftCornerAngle/2), gs_fthk, 95,
			-ac_unit_width/2+(gs_fthk-(gs_gsb+gs_glass_thk))*TAN(90+leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2), (gs_gsb+gs_glass_thk), -1
		DEL 1
	endif

	if iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED AND gs_cr=1 AND rightCornerAngle<180 then
		ROTX 90
		CUTPOLYA 5, 1, 0,
			ac_unit_width/2, (gs_gsb+gs_glass_thk),     95,
			ac_unit_width/2-(gs_frame_width/2)/SIN(rightCornerAngle/2)-(gs_gsb+gs_glass_thk)/TAN(rightCornerAngle/2), (gs_gsb+gs_glass_thk),     95,
			ac_unit_width/2-gs_fthk*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(rightCornerAngle/2), gs_fthk,      95,
			ac_unit_width/2,gs_fthk,      95,
			ac_unit_width/2, (gs_gsb+gs_glass_thk),      -1
		DEL 1
	endif

	if iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED AND gs_cr=1 AND rightCornerAngle>180 then
		ROTX 90
		CUTPOLYA 5, 1, 0,
			ac_unit_width/2, (gs_gsb+gs_glass_thk),      95,
			ac_unit_width/2+(gs_fthk-(gs_gsb+gs_glass_thk))*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(180-rightCornerAngle/2), (gs_gsb+gs_glass_thk),    95,
			ac_unit_width/2-(gs_frame_width/2)/SIN(180-rightCornerAngle/2), gs_fthk,      95,
			ac_unit_width/2,gs_fthk,     95,
			ac_unit_width/2, (gs_gsb+gs_glass_thk),      -1
		DEL 1
	endif

	if iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED AND gs_cr=0 then
		ROTX 90
		CUTPOLYA 5, 1, 0,
			ac_unit_width/2,         gs_gsb+gs_glass_thk, 15,
			ac_unit_width/2-gs_fw_side_right,  gs_gsb+gs_glass_thk,  15,
			ac_unit_width/2-gs_fw_side_right, gs_fthk, 15,
			ac_unit_width/2, gs_fthk,  15,
			ac_unit_width/2,         gs_gsb+gs_glass_thk,  -1
		DEL 1
	endif

	if iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED AND gs_cl=0 then
		ROTX 90
		CUTPOLYA 5, 1, 0,
			-ac_unit_width/2,         gs_gsb+gs_glass_thk, 15,
			-ac_unit_width/2+gs_fw_side_left,  gs_gsb+gs_glass_thk,  15,
			-ac_unit_width/2+gs_fw_side_left, gs_fthk, 15,
			-ac_unit_width/2, gs_fthk,  15,
			-ac_unit_width/2,         gs_gsb+gs_glass_thk,  -1
		DEL 1
	endif


! =============================================================================
! Horizontal Grids
! =============================================================================

	MATERIAL gs_sash_mat

	if gs_hor_gnum >0 AND bMiddleRail then
		for i=1 to gs_hor_gnum
			ADDY gs_hor_d[i]

			for HI=1 to gs_ver_gnum+1

				if HI=1 AND gs_ver_gnum=0 then hgnn=ac_unit_width-gs_fw_side_right-gs_fw_side_left
				if HI=1 AND gs_ver_gnum>0 then hgnn=gs_ver_d[1]-gs_grid_w+leftPanelWidth-(gs_fw_side_left-gs_frame_width)*gs_sidelight_left
				if HI>1 AND HI<gs_ver_gnum+1 then hgnn=gs_ver_d[HI]-gs_ver_d[HI-1]-gs_grid_w
				if HI>1 AND HI=gs_ver_gnum+1 then hgnn=ac_unit_width-gs_fw_side_left-gs_fw_side_right-gs_ver_d[HI-1]-leftPanelWidth+(gs_fw_side_left-gs_frame_width)*gs_sidelight_left

				ADD -ac_unit_width/2+gs_fw_side_left, gs_fw_lower-gs_grid_w/2, (gs_gsb+gs_glass_thk)*(iFrameStyleMullion = FRAME_STYLE_BUTT_GLAZED)
				if HI=1 AND gs_sidelight_left then
					PRISM_ 5, gs_grid_thk,
						-gs_fw_side_left*(iFrameStyleLeft <> FRAME_STYLE_VISIBLE_MULLIONS), -gs_grid_w/2, 15,
						 leftPanelWidth-gs_fw_side_left, -gs_grid_w/2, 15,
						 leftPanelWidth-gs_fw_side_left,  gs_grid_w/2, 15,
						-gs_fw_side_left*(iFrameStyleLeft <> FRAME_STYLE_VISIBLE_MULLIONS),  gs_grid_w/2, 15,
						-gs_fw_side_left*(iFrameStyleLeft <> FRAME_STYLE_VISIBLE_MULLIONS), -gs_grid_w/2, -1
				endif
				if HI=gs_ver_gnum+1 AND gs_sidelight_right then
					PRISM_ 5, gs_grid_thk,
						hgnn-rightPanelWidth+gs_fw_side_right, -gs_grid_w/2, 15,
						hgnn+gs_fw_side_right*(iFrameStyleRight <> FRAME_STYLE_VISIBLE_MULLIONS), -gs_grid_w/2, 15,
						hgnn+gs_fw_side_right*(iFrameStyleRight <> FRAME_STYLE_VISIBLE_MULLIONS),  gs_grid_w/2, 15,
						hgnn-rightPanelWidth+gs_fw_side_right,  gs_grid_w/2, 15,
						hgnn-rightPanelWidth+gs_fw_side_right, -gs_grid_w/2, -1
				endif
				DEL 1

			ADDX hgnn+gs_grid_w
			next HI

			DEL gs_ver_gnum + 2
		next i
	endif


! =============================================================================
! Horizontal Grids Middle
! =============================================================================

	if gs_hor_gnumtr >0 then
		for i=1 to gs_hor_gnumtr
			ADDY gs_hor_dtr[i]
			for HI=1 to gs_ver_gnum+1

				if HI=1 AND gs_ver_gnum=0 then hgnn=ac_unit_width-gs_fw_side_right-gs_fw_side_left
				if HI=1 AND gs_ver_gnum>0 then hgnn=gs_ver_d[1]-gs_grid_w+leftPanelWidth-(gs_fw_side_left-gs_frame_width)*gs_sidelight_left
				if HI>1 AND HI<gs_ver_gnum+1 then hgnn=gs_ver_d[HI]-gs_ver_d[HI-1]-gs_grid_w
				if HI>1 AND HI=gs_ver_gnum+1 then hgnn=ac_unit_width-gs_fw_side_left-gs_fw_side_right-gs_ver_d[HI-1]-leftPanelWidth+(gs_fw_side_left-gs_frame_width)*gs_sidelight_left

				ADD -ac_unit_width/2+gs_fw_side_left, ac_unit_height-gs_fw_upper*not(gs_door_transom)-gs_frame_width*gs_door_transom-middlePanelHeight-gs_grid_w/2, (gs_gsb+gs_glass_thk)*(iFrameStyleMullion = FRAME_STYLE_BUTT_GLAZED)
				if HI=1 AND gs_sidelight_left then
					PRISM_ 5, gs_grid_thk,
						-gs_fw_side_left*(iFrameStyleLeft <> FRAME_STYLE_VISIBLE_MULLIONS), -gs_grid_w/2, 15,
						 leftPanelWidth-gs_fw_side_left, -gs_grid_w/2, 15,
						 leftPanelWidth-gs_fw_side_left,  gs_grid_w/2, 15,
						-gs_fw_side_left*(iFrameStyleLeft <> FRAME_STYLE_VISIBLE_MULLIONS),  gs_grid_w/2, 15,
						-gs_fw_side_left*(iFrameStyleLeft <> FRAME_STYLE_VISIBLE_MULLIONS), -gs_grid_w/2, -1
				endif
				if HI=gs_ver_gnum+1 AND gs_sidelight_right then
					PRISM_ 5, gs_grid_thk,
						hgnn-rightPanelWidth+gs_fw_side_right, -gs_grid_w/2, 15,
						 hgnn+gs_fw_side_right*(iFrameStyleRight <> FRAME_STYLE_VISIBLE_MULLIONS), -gs_grid_w/2, 15,
						 hgnn+gs_fw_side_right*(iFrameStyleRight <> FRAME_STYLE_VISIBLE_MULLIONS),  gs_grid_w/2, 15,
						hgnn-rightPanelWidth+gs_fw_side_right,  gs_grid_w/2, 15,
						hgnn-rightPanelWidth+gs_fw_side_right, -gs_grid_w/2, -1
				endif
				DEL 1
				ADDX hgnn+gs_grid_w
			next HI
			DEL gs_ver_gnum + 2
		next i
	endif


! =============================================================================
! Horizontal Grids Top Panel
! =============================================================================

	if gs_hor_gtp >0 AND gs_door_transom then
		base
		for i=1 to gs_hor_gtp
			ADDY gs_hor_dtp[i]
			hgnn=ac_unit_width-gs_fw_side_right-gs_fw_side_left
			ADD -ac_unit_width/2+gs_fw_side_left, ac_unit_height-topPanelHeight-gs_grid_w/2, (gs_gsb+gs_glass_thk)*(iFrameStyleMullion = FRAME_STYLE_BUTT_GLAZED)
				PRISM_ 5, gs_grid_thk,
					-gs_fw_side_left*(iFrameStyleLeft <> FRAME_STYLE_VISIBLE_MULLIONS), -gs_grid_w/2, 15,
					 hgnn+gs_fw_side_right*(iFrameStyleRight <> FRAME_STYLE_VISIBLE_MULLIONS), -gs_grid_w/2, 15,
					 hgnn+gs_fw_side_right*(iFrameStyleRight <> FRAME_STYLE_VISIBLE_MULLIONS),  gs_grid_w/2, 15,
					-gs_fw_side_left*(iFrameStyleLeft <> FRAME_STYLE_VISIBLE_MULLIONS),  gs_grid_w/2, 15,
					-gs_fw_side_left*(iFrameStyleLeft <> FRAME_STYLE_VISIBLE_MULLIONS), -gs_grid_w/2, -1
			DEL 2
		next i

		vert 0, 0, 0
		vert 1, 0, 0
		vert 0, 1, 0
		vert 0, 0, 1
		coor 2, -1, -2, -3, -4
		body 1
	endif

	if iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED AND gs_cl=0 then CUTEND
	if iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED AND gs_cr=0 then CUTEND

	if iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED AND gs_cr=1 then CUTEND
	if iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED AND gs_cl=1 then CUTEND
	if iFrameStyleLeft = FRAME_STYLE_ANGLE_FRAME AND gs_cl=1 then CUTEND
	if iFrameStyleRight = FRAME_STYLE_ANGLE_FRAME AND gs_cr=1 then CUTEND

	if gs_cl=1 then CUTEND
	if gs_cr=1 then CUTEND

ENDGROUP


! =============================================================================
! Vertical Grids
! =============================================================================

GROUP "gridsv"

	sect_fill fr_sect_fill_type, fr_sect_fill_bg, fr_sect_fill_fg, gs_pen_2D
	!material "!Краска-06"
	material gs_vertMull_mat
if iDivisionMethod = DIVISION_WIDTH then
	if gs_sidelight_left and divWidthHor>0 then
		n_left_vert = int(abs(gs_sidelight_width_left/divWidthHor))
		if n_left_vert>0 then
			shag_vert_left = gs_sidelight_width_left/n_left_vert
			addx -ac_unit_width/2
			for i = 1 to n_left_vert-1
					addx i*shag_vert_left

					hotspot 0,  0, 0
					hotspot 0,  ac_unit_height, 0

					PRISM_ 5,gridThkVert,
						-gridWidthVert/2,   gs_fw_lower, 15,
						 gridWidthVert/2,   gs_fw_lower, 15,
						 gridWidthVert/2, ac_unit_height-gs_fw_upper, 15,
						-gridWidthVert/2, ac_unit_height-gs_fw_upper, 15,
						-gridWidthVert/2,   gs_fw_lower, -1
					DEL 1
			next i
			del 1
		endif
	endif

	if gs_sidelight_right and divWidthHor>0 then
		n_right_vert = int(abs(gs_sidelight_width_right/divWidthHor))
		if n_right_vert>0 then
			shag_vert_right = gs_sidelight_width_right/n_right_vert
			addx ac_unit_width/2
			for i = 1 to n_right_vert-1
					addx -i*shag_vert_left
					hotspot 0,  0, 0
					hotspot 0,  ac_unit_height, 0
					PRISM_ 5,gridThkVert,
						-gridWidthVert/2,   gs_fw_lower, 15,
						 gridWidthVert/2,   gs_fw_lower, 15,
						 gridWidthVert/2, ac_unit_height-gs_fw_upper, 15,
						-gridWidthVert/2, ac_unit_height-gs_fw_upper, 15,
						-gridWidthVert/2,   gs_fw_lower, -1
					DEL 1
			next i
			del 1
		endif
	endif
endif
	if gs_ver_gnum > 0 AND gs_door_transom then
		base
		for HK=1 to gs_ver_gnum
			ADDX gs_ver_d[HK]
				ADD  -ac_unit_width/2+frameOrSLightWidthLeft-gridWidthVert/2, 0, (gs_gsb+gs_glass_thk)*(iFrameStyleMullion = FRAME_STYLE_BUTT_GLAZED)

				PRISM_ 5,gridThkVert,
					-gridWidthVert/2,   ac_unit_height-topPanelHeight, 15,
					 gridWidthVert/2,   ac_unit_height-topPanelHeight, 15,
					 gridWidthVert/2, ac_unit_height-gs_fw_upper, 15,
					-gridWidthVert/2, ac_unit_height-gs_fw_upper, 15,
					-gridWidthVert/2,   ac_unit_height-topPanelHeight, -1
				DEL 1
			DEL 1
		next HK

		vert 0, 0, 0
		vert 0, 1, 0
		vert 1, 0, 0
		vert 0, 0, 1
		coor 2, -1, -2, -3, -4
		body 1
	endif
ENDGROUP

! =============================================================================


sect_fill fr_sect_fill_type, fr_sect_fill_bg, fr_sect_fill_fg, gs_pen_2D

PLACEGROUP SUBGROUP (SUBGROUP("gridsh","gridsv"), "frame")
PLACEGROUP "gridsv"

! =============================================================================
! Glass
! =============================================================================

SECT_FILL gl_sect_fill_type, gl_sect_fill_bg, gl_sect_fill_fg, gs_pen_glass

MATERIAL gs_glass_mat
PEN gs_glass_pen

! CORNER !

if gs_cl=1 AND leftCornerAngle<180 then
	ADDX -ac_unit_width/2
	ROTY -leftCornerAngle/2
		CUTPLANE
	DEL 2
endif

if gs_cl=1 AND leftCornerAngle>180 then
	ADD -ac_unit_width/2-WIDO_REVEAL_SIDE*gs_fthk*TAN(90-leftCornerAngle/2), 0, (1-WIDO_REVEAL_SIDE)*gs_fthk
	ROTY -leftCornerAngle/2
	CUTPLANE
	DEL 2
endif

if gs_cr=1 AND rightCornerAngle<180 then
	ADDX ac_unit_width/2
	ROTY rightCornerAngle/2
		CUTPLANE
	DEL 2
endif

if gs_cr=1 AND rightCornerAngle>180 then
	ADD ac_unit_width/2+WIDO_REVEAL_SIDE*gs_fthk*TAN(90-rightCornerAngle/2), 0, (1-WIDO_REVEAL_SIDE)*gs_fthk
	ROTY rightCornerAngle/2
		CUTPLANE
	DEL 2
endif

! END OF CORNER !

if bMiddleRail then
	ADDZ gs_gsb
	for HJ=1 to gs_hor_gnum+1
		if HJ=1 AND gs_hor_gnum=0 then vgnn=ac_unit_height-gs_fw_upper*not(gs_door_transom)-gs_frame_width*gs_door_transom-middlePanelHeight-gs_fw_lower-midRailWidth
		if HJ=1 AND gs_hor_gnum>0 then vgnn=gs_hor_d[1]-gs_grid_w
		if HJ>1 AND HJ<gs_hor_gnum+1 then vgnn=gs_hor_d[HJ]-gs_hor_d[HJ-1]-gs_grid_w
		if HJ>1 AND HJ=gs_hor_gnum+1 then vgnn=ac_unit_height-gs_fw_upper*not(gs_door_transom)-gs_frame_width*gs_door_transom-middlePanelHeight-gs_hor_d[HJ-1]-gs_fw_lower-midRailWidth

		for HI=1 to gs_ver_gnum+1
			if HI=1 AND gs_ver_gnum=0 then hgnn=ac_unit_width-frameOrSLightWidthLeft-frameOrSLightWidthRight
			if HI=1 AND gs_ver_gnum>0 then hgnn=gs_ver_d[1]-gs_grid_w
			if HI>1 AND HI<gs_ver_gnum+1 then hgnn=gs_ver_d[HI]-gs_ver_d[HI-1]-gs_grid_w
			if HI>1 AND HI=gs_ver_gnum+1 then hgnn=ac_unit_width-gs_ver_d[HI-1]-frameOrSLightWidthLeft-frameOrSLightWidthRight

			ADDX hgnn+gs_grid_w
		next HI
		DEL gs_ver_gnum+1

		if gs_sidelight_left then
			ADD -ac_unit_width/2+gs_fw_side_left, gs_fw_lower,0
			if iFrameStyleMullion = FRAME_STYLE_BUTT_GLAZED then
				PRISM_ 5, gs_glass_thk,
					-gs_left_g,-(gs_grid_w-buttGalzedJoint)/2*(HJ<>1),15,
					leftPanelWidth-gs_fw_side_left,-(gs_grid_w-buttGalzedJoint)/2*(HJ<>1),15,
					leftPanelWidth-gs_fw_side_left,vgnn+(gs_grid_w-buttGalzedJoint)/2*(HJ<>gs_hor_gnum+1),15,
					-gs_left_g,vgnn+(gs_grid_w-buttGalzedJoint)/2*(HJ<>gs_hor_gnum+1),15,
					-gs_left_g,-(gs_grid_w-buttGalzedJoint)/2*(HJ<>1),-1
			else
				PRISM_ 5, gs_glass_thk,
					-gs_left_g, 0, 15,
					leftPanelWidth-gs_fw_side_left, 0, 15,
					leftPanelWidth-gs_fw_side_left, vgnn, 15,
					-gs_left_g, vgnn, 15,
					-gs_left_g, 0, -1
			endif
			DEL 1
		endif

		if gs_sidelight_right then
			ADD +ac_unit_width/2-rightPanelWidth, gs_fw_lower,0
			if iFrameStyleMullion = FRAME_STYLE_BUTT_GLAZED then
				PRISM_ 5, gs_glass_thk,
					0,-(gs_grid_w-buttGalzedJoint)/2*(HJ<>1),15,
					rightPanelWidth-gs_fw_side_right+gs_right_g,-(gs_grid_w-buttGalzedJoint)/2*(HJ<>1),15,
					rightPanelWidth-gs_fw_side_right+gs_right_g,vgnn+(gs_grid_w-buttGalzedJoint)/2*(HJ<>gs_hor_gnum+1),15,
					0,vgnn+(gs_grid_w-buttGalzedJoint)/2*(HJ<>gs_hor_gnum+1),15,
					0,-(gs_grid_w-buttGalzedJoint)/2*(HJ<>1),-1
			else
				PRISM_ 5, gs_glass_thk,
					0, 0, 15,
					rightPanelWidth-gs_fw_side_right+gs_right_g, 0, 15,
					rightPanelWidth-gs_fw_side_right+gs_right_g, vgnn, 15,
					0, vgnn, 15,
					0, 0, -1
			endif
			DEL 1
		endif
		ADDY vgnn+gs_grid_w
	next HJ
	DEL gs_hor_gnum+1
	DEL 1
endif
!! END OF GLASS !!

!! TRANSOM GLASS !!

MATERIAL gs_glass_mat
PEN gs_glass_pen

ADDZ gs_gsb

for HW=1 to gs_hor_gnumtr+1
	if HW=1 AND gs_hor_gnumtr=0 then vgnt=middlePanelHeight-topPanelHeight
	if HW=1 AND gs_hor_gnumtr>0 then vgnt=gs_hor_dtr[1]-gs_grid_w
	if HW>1 AND HW<gs_hor_gnumtr+1 then vgnt=gs_hor_dtr[HW]-gs_hor_dtr[HW-1]-gs_grid_w
	if HW>1 AND HW=gs_hor_gnumtr+1 then vgnt=middlePanelHeight-gs_hor_dtr[HW-1]-topPanelHeight

	for HA=1 to gs_ver_gnum+1
		if abs(HA-1)<eps AND gs_ver_gnum=0 then
			hgnn=ac_unit_width-frameOrSLightWidthLeft-frameOrSLightWidthRight
		endif
		if abs(HA-1)<eps AND gs_ver_gnum>0 then hgnn=gs_ver_d[1]-gs_grid_w
		if HA>1 AND HA<gs_ver_gnum+1 then hgnn=gs_ver_d[HA]-gs_ver_d[HA-1]-gs_grid_w
		if HA>1 AND abs(HA-gs_ver_gnum-1)<eps then
			hgnn=ac_unit_width-gs_ver_d[HA-1]-frameOrSLightWidthLeft-frameOrSLightWidthRight
		endif

		ADD -ac_unit_width/2+frameOrSLightWidthLeft, midRailElevation*bMiddleRail+midRailWidth/2,0
		DEL 1

		ADDX hgnn+gs_grid_w
	next HA
	DEL gs_ver_gnum+1

	if gs_sidelight_left then
		ADD -ac_unit_width/2+gs_fw_side_left, midRailElevation*bMiddleRail+midRailWidth/2,0
		if iFrameStyleMullion = FRAME_STYLE_BUTT_GLAZED then
			PRISM_ 5, gs_glass_thk,
				-gs_left_g,-(gs_grid_w-buttGalzedJoint)/2*(HW<>1),15,
				leftPanelWidth-gs_fw_side_left,-(gs_grid_w-buttGalzedJoint)/2*(HW<>1),15,
				leftPanelWidth-gs_fw_side_left,vgnt+(gs_grid_w-buttGalzedJoint)/2*(Hw<>gs_hor_gnumtr+1),15,
				-gs_left_g,vgnt+(gs_grid_w-buttGalzedJoint)/2*(Hw<>gs_hor_gnumtr+1),15,
				-gs_left_g,-(gs_grid_w-buttGalzedJoint)/2*(HW<>1),-1
		else
			PRISM_ 5, gs_glass_thk,
				-gs_left_g, 0, 15,
				leftPanelWidth-gs_fw_side_left, 0, 15,
				leftPanelWidth-gs_fw_side_left, vgnt, 15,
				-gs_left_g, vgnt, 15,
				-gs_left_g, 0, -1
		endif
		DEL 1
	endif

	if gs_sidelight_right then
		ADD +ac_unit_width/2-rightPanelWidth, midRailElevation*bMiddleRail+midRailWidth/2,0
		if iFrameStyleMullion = FRAME_STYLE_BUTT_GLAZED then
			PRISM_ 5, gs_glass_thk,
				0,-(gs_grid_w-buttGalzedJoint)/2*(HW<>1),15,
				rightPanelWidth-gs_fw_side_right+gs_right_g,-(gs_grid_w-buttGalzedJoint)/2*(HW<>1),15,
				rightPanelWidth-gs_fw_side_right+gs_right_g,vgnt+(gs_grid_w-buttGalzedJoint)/2*(Hw<>gs_hor_gnumtr+1),15,
				0,vgnt+(gs_grid_w-buttGalzedJoint)/2*(Hw<>gs_hor_gnumtr+1),15,
				0,-(gs_grid_w-buttGalzedJoint)/2*(HW<>1),-1
		else
			PRISM_ 5, gs_glass_thk,
				0, 0, 15,
				rightPanelWidth-gs_fw_side_right+gs_right_g, 0, 15,
				rightPanelWidth-gs_fw_side_right+gs_right_g, vgnt, 15,
				0, vgnt, 15,
				0, 0, -1
		endif
		DEL 1
	endif
	ADDY vgnt+gs_grid_w
next HW
DEL gs_hor_gnumtr+1

DEL 1

! END OF TRANSOM GLASS !!

!! TOP PANEL GLASS !!

if gs_door_transom then

MATERIAL gs_glass_mat
PEN gs_glass_pen
ADDZ gs_gsb

for HW=1 to gs_hor_gtp+1
		if HW=1 AND gs_hor_gtp=0 then vgnt=topPanelHeight-gs_fw_upper
		if HW=1 AND gs_hor_gtp>0 then vgnt=gs_hor_dtp[1]-gs_grid_w
		if HW>1 AND HW<gs_hor_gtp+1 then vgnt=gs_hor_dtp[HW]-gs_hor_dtp[HW-1]-gs_grid_w
		if HW>1 AND HW=gs_hor_gtp+1 then vgnt=topPanelHeight-gs_hor_dtp[HW-1]-gs_fw_upper

	for HA=1 to gs_ver_gnum+1
		if iStorefrontType = SFTYPE_DOOR_TRSL then
			if abs(HA-1)<eps AND gs_ver_gnum=0 then
				hgnn=ac_unit_width-frameOrSLightWidthLeft-frameOrSLightWidthRight
			endif
		else
			if abs(HA-1)<eps AND gs_ver_gnum=0 then  hgnn=ac_unit_width-gs_fw_side_left-gs_fw_side_right-leftPanelWidth-rightPanelWidth
		endif

		if abs(HA-1)<eps AND gs_ver_gnum>0 then hgnn=gs_ver_d[1]-gridWidthVert
		if HA>1 AND HA<gs_ver_gnum+1 then hgnn=gs_ver_d[HA]-gs_ver_d[HA-1]-gridWidthVert
		if HA>1 AND abs(HA-gs_ver_gnum-1)<eps then
			hgnn=ac_unit_width-gs_ver_d[HA-1]-frameOrSLightWidthLeft-frameOrSLightWidthRight
		endif

		ADD -ac_unit_width/2+frameOrSLightWidthLeft, ac_unit_height-topPanelHeight,0

		if iFrameStyleMullion = FRAME_STYLE_BUTT_GLAZED then
			PRISM_ 5, gs_glass_thk,
				-gs_left_g*(abs(HA-1)<eps)*not(gs_sidelight_left)-(gridWidthVert-buttGalzedJoint)/2*(HA>1), -(gs_grid_w-buttGalzedJoint)/2*(HW<>1), 15,
				hgnn+(gridWidthVert-buttGalzedJoint)/2*(HA<gs_ver_gnum+1)+gs_right_g*(abs(HA-gs_ver_gnum-1)<eps)*not(gs_sidelight_right),
					-(gs_grid_w-buttGalzedJoint)/2*(HW<>1), 15,
				hgnn+(gridWidthVert-buttGalzedJoint)/2*(HA<gs_ver_gnum+1)+gs_right_g*(abs(HA-gs_ver_gnum-1)<eps)*not(gs_sidelight_right),
					vgnt+(gs_grid_w-buttGalzedJoint)/2*(HW<>gs_hor_gtp+1), 15,
				-gs_left_g*(abs(HA-1)<eps)*not(gs_sidelight_left)-(gridWidthVert-buttGalzedJoint)/2*(HA>1),	vgnt+(gs_grid_w-buttGalzedJoint)/2*(HW<>gs_hor_gtp+1), 15,
				-gs_left_g*(abs(HA-1)<eps)*not(gs_sidelight_left)-(gridWidthVert-buttGalzedJoint)/2*(HA>1),	-(gs_grid_w-buttGalzedJoint)/2*(HW<>1), -1
		else
			PRISM_ 5, gs_glass_thk,
				-gs_left_g*(abs(HA-1)<eps)*not(gs_sidelight_left), 0, 15,
				hgnn+gs_right_g*(abs(HA-gs_ver_gnum-1)<eps)*not(gs_sidelight_right), 0, 15,
				hgnn+gs_right_g*(abs(HA-gs_ver_gnum-1)<eps)*not(gs_sidelight_right), vgnt, 15,
				-gs_left_g*(abs(HA-1)<eps)*not(gs_sidelight_left), vgnt, 15,
				-gs_left_g*(abs(HA-1)<eps)*not(gs_sidelight_left), 0, -1
		endif
		DEL 1
		ADDX hgnn+gridWidthVert
	next HA
	DEL gs_ver_gnum+1

	if gs_sidelight_left then
		ADD -ac_unit_width/2+gs_fw_side_left,  ac_unit_height-topPanelHeight,0
		if iFrameStyleMullion = FRAME_STYLE_BUTT_GLAZED then
			PRISM_ 5, gs_glass_thk,
				-gs_left_g,-(gs_grid_w-buttGalzedJoint)/2*(HW<>1),15,
				leftPanelWidth-gs_fw_side_left,-(gs_grid_w-buttGalzedJoint)/2*(HW<>1),15,
				leftPanelWidth-gs_fw_side_left,vgnt+(gs_grid_w-buttGalzedJoint)/2*(Hw<>gs_hor_gtp+1),15,
				-gs_left_g,vgnt+(gs_grid_w-buttGalzedJoint)/2*(Hw<>gs_hor_gtp+1),15,
				-gs_left_g,-(gs_grid_w-buttGalzedJoint)/2*(HW<>1),-1
		else
			PRISM_ 5, gs_glass_thk,
				-gs_left_g, 0, 15,
				leftPanelWidth-gs_fw_side_left, 0, 15,
				leftPanelWidth-gs_fw_side_left, vgnt, 15,
				-gs_left_g, vgnt, 15,
				-gs_left_g, 0, -1
		endif
		DEL 1
	endif

	if gs_sidelight_right then
		ADD ac_unit_width/2-rightPanelWidth, ac_unit_height-topPanelHeight,0
		if iFrameStyleMullion = FRAME_STYLE_BUTT_GLAZED then
			PRISM_ 5, gs_glass_thk,
				0,-(gs_grid_w-buttGalzedJoint)/2*(HW<>1),15,
				rightPanelWidth-gs_fw_side_right+gs_right_g,-(gs_grid_w-buttGalzedJoint)/2*(HW<>1),15,
				rightPanelWidth-gs_fw_side_right+gs_right_g,vgnt+(gs_grid_w-buttGalzedJoint)/2*(Hw<>gs_hor_gtp+1),15,
				0,vgnt+(gs_grid_w-buttGalzedJoint)/2*(Hw<>gs_hor_gtp+1),15,
				0,-(gs_grid_w-buttGalzedJoint)/2*(HW<>1),-1
		else
			PRISM_ 5, gs_glass_thk,
				0, 0, 15,
				rightPanelWidth-gs_fw_side_right+gs_right_g, 0, 15,
				rightPanelWidth-gs_fw_side_right+gs_right_g, vgnt, 15,
				0, vgnt, 15,
				0, 0, -1
		endif
		DEL 1
	endif
	ADDY vgnt+gs_grid_w
next HW
DEL gs_hor_gtp+1

DEL 1

endif
!! END OF TOP PANEL GLASS !!

if gs_cl=1 then CUTEND
if gs_cr=1 then CUTEND

!! DOOR PANELS !!

del nFlipTrans

! =============================================================================
! Door Stop
! =============================================================================

pen gs_frame_pen
material gs_frame_mat
sect_fill fr_sect_fill_type, fr_sect_fill_bg, fr_sect_fill_fg, gs_pen_2D

add -ac_unit_width/2+frameOrSLightWidthLeft,0,gs_leaf_thk

if gs_ds & bEnableDoorStop then
	if not(gs_mf) then
		if gs_SashText_typ_num = 1 then ! Mittered Joint
			base
			Prism_ 4,gs_ds_thk,
				0, 0, 15,
				0,ac_unit_height-frameOrTransomHeight, 10,
				gs_ds_w, ac_unit_height-frameOrTransomHeight-gs_ds_w, 13,
				gs_ds_w, 0, 15
			vert 0, 0, 0
			vert 0, 1, 0
			vert 1, 0, 0
			vert 0, 0, 1
			coor 2, -1, -2, -3, -4
			body 1

			base
				Prism_ 4,gs_ds_thk,
					lw, 0, 15,
					lw,ac_unit_height-frameOrTransomHeight, 10,
					lw-gs_ds_w, ac_unit_height-frameOrTransomHeight-gs_ds_w, 13,
					lw-gs_ds_w, 0, 15
			vert 0, 0, 0
			vert 0, 1, 0
			vert 1, 0, 0
			vert 0, 0, 1
			coor 2, -1, -2, -3, -4
			body 1

			base
				Prism_ 4,gs_ds_thk,
					0,ac_unit_height-frameOrTransomHeight, 10,
					gs_ds_w, ac_unit_height-frameOrTransomHeight-gs_ds_w, 15,
					lw-gs_ds_w, ac_unit_height-frameOrTransomHeight-gs_ds_w, 10,
					lw,ac_unit_height-frameOrTransomHeight, 15
			vert 0, 0, 0
			vert 1, 0, 0
			vert 0, 1, 0
			vert 0, 0, 1
			coor 2, -1, -2, -3, -4
			body 1
		else  ! Butt Joint
			base
			Prism_ 4,gs_ds_thk,
				0,0,15,
				0, ac_unit_height-frameOrTransomHeight-gs_ds_w, 10,
				gs_ds_w, ac_unit_height-frameOrTransomHeight-gs_ds_w, 13,
				gs_ds_w, 0, 15
			vert 0, 0, 0
			vert 0, 1, 0
			vert 1, 0, 0
			vert 0, 0, 1
			coor 2, -1, -2, -3, -4
			body 1

			base
				Prism_ 4,gs_ds_thk,
					lw, 0, 15,
					lw, ac_unit_height-frameOrTransomHeight-gs_ds_w, 10,
					lw-gs_ds_w, ac_unit_height-frameOrTransomHeight-gs_ds_w, 13,
					lw-gs_ds_w, 0, 15
			vert 0, 0, 0
			vert 0, 1, 0
			vert 1, 0, 0
			vert 0, 0, 1
			coor 2, -1, -2, -3, -4
			body 1

			base
				Prism_ 6,gs_ds_thk,
					0,ac_unit_height-frameOrTransomHeight,15,
					0, ac_unit_height-frameOrTransomHeight-gs_ds_w, 8,
					gs_ds_w,ac_unit_height-frameOrTransomHeight-gs_ds_w,15,
					lw-gs_ds_w, ac_unit_height-frameOrTransomHeight-gs_ds_w, 10,
					lw, ac_unit_height-frameOrTransomHeight-gs_ds_w, 13,
					lw, ac_unit_height-frameOrTransomHeight, 15
			vert 0, 0, 0
			vert 1, 0, 0
			vert 0, 1, 0
			vert 0, 0, 1
			coor 2, -1, -2, -3, -4
			body 1
		endif
	endif
	if gs_mf then
		prism_ 5+4, gs_ds_thk,
			0,0,15,
			0,ac_unit_height-frameOrTransomHeight,15,
			lal,ac_unit_height-frameOrTransomHeight,15,
			lal,0,15,
			lal-gs_ds_w,0,15,
			lal-gs_ds_w,ac_unit_height-frameOrTransomHeight-gs_ds_W,15,
			gs_ds_w,ac_unit_height-frameOrTransomHeight-gs_ds_w,15,
			gs_ds_w,0,15,
			0,0,-1
		prism_ 5+4, gs_ds_thk,
			lw-lar,0,15,
			lw-lar,ac_unit_height-frameOrTransomHeight,15,
			lw,ac_unit_height-frameOrTransomHeight,15,
			lw,0,15,
			lw-gs_ds_w,0,15,
			lw-gs_ds_w,ac_unit_height-frameOrTransomHeight-gs_ds_W,15,
			lw-lar+gs_ds_w,ac_unit_height-frameOrTransomHeight-gs_ds_w,15,
			lw-lar+gs_ds_w,0,15,
			lw-lar,0,-1
	endif
endif

del 1


! =============================================================================
! Door Panel
! =============================================================================
if iDoorPanelType <> PANEL_EMPTY then
	unIDOpening = 2
	_bMiddleLine = 0
	mulx -1

	if iDoorType = 1 then
		openSizeA = ac_unit_width-frameOrSLightWidthRight-frameOrSLightWidthLeft
	else
		openSizeA = lar
	endif

	if gs_full_edit & GLOB_CONTEXT <> 4 & GLOB_CONTEXT <> 24 & GLOB_CONTEXT <> 6 then
		addx -(ac_unit_width)/2 + frameOrSLightWidthRight

		hotspot openSizeA,gs_han_height,0,unIDOpening,gs_open_3D,4+128
		unIDOpening=unIDOpening+1

		hotspot openSizeA*cos(gs_open_3D), gs_han_height,-openSizeA*sin(gs_open_3D),unIDOpening,gs_open_3D,5
		unIDOpening=unIDOpening+1

		hotspot 0, gs_han_height,0,unIDOpening,gs_open_3D, 6
		unIDOpening=unIDOpening+1

		hotspot 0,0,0,unIDOpening,gs_open_3D,7

		del 1
	endif

	if iDoorType = 1 then
		nLeafs = 1
	else
		nLeafs = 2
	endif

	_sizeLeafB = ac_unit_height-frameOrTransomHeight

	for i=1 to nLeafs

		if iDoorType = 1 then
			_sizeLeafA = ac_unit_width-frameOrSLightWidthRight-frameOrSLightWidthLeft
		else
			if i = 1 then
				_sizeLeafA = lar
			else
				_sizeLeafA = lal
			endif
		endif

		if i = 1 then
			_iHandleTypeIn		= gs_handle_type_m
			_iHandleTypeOut		= gs_handle_type_out_m
			_gs_cust_handle		= gs_cust_handle
			_gs_cust_handle_out	= gs_cust_handle_out
			_gs_han_height		= gs_han_height
			_gs_han_pos			= gs_han_pos
			_bMiddleLine		= 1
			_opLineType3dIn		= opLineType3dIn
			_opLineType3dOut	= opLineType3dOut
		else
			_iHandleTypeIn		= gs_handle_type2_m
			_iHandleTypeOut		= gs_handle_type2_out_m
			_gs_cust_handle		= gs_cust_handle2
			_gs_cust_handle_out	= gs_cust_handle2_out
			_gs_han_height		= gs_han_height2
			_gs_han_pos			= gs_han_pos2
			_bMiddleLine		= 0

			if bEnableSecondaryOpLineTypes & not(gs_bSameLineTypeForLeaves) then
				_opLineType3dIn		= opLineTypeSecondary
				_opLineType3dOut	= opLineTypeSecondary
			else
				_opLineType3dIn		= opLineType3dIn
				_opLineType3dOut	= opLineType3dOut
			endif
		endif

		if i = 1 then
			addx -(ac_unit_width)/2 + frameOrSLightWidthRight
			roty gs_open_3D
			addx _sizeLeafA/2
		else
			addx -(ac_unit_width)/2 + frameOrSLightWidthLeft
			roty gs_open_3D
			addx _sizeLeafA/2
		endif

		if i > 1 then
			bSecondPanel = 1
		else
			bSecondPanel = 0
		endif
		gosub "doorLeafCall"

		del 3
		mulx -1
	next i
	del 1

	del 1
endif


! =============================================================================
! Middle frame
! =============================================================================

sect_fill fr_sect_fill_type, fr_sect_fill_bg, fr_sect_fill_fg, gs_pen_2D

if gs_mf then
	rotx -90
	prism_ 8, ac_unit_height-frameOrTransomHeight,
		-ac_unit_width/2+frameOrSLightWidthRight+lar, 0, 15,
		-ac_unit_width/2+frameOrSLightWidthRight+lar, -min(gs_leaf_thk, gs_fthk), 15,
		-ac_unit_width/2+frameOrSLightWidthRight+lar, -min(gs_leaf_thk, gs_fthk) - bEnableDoorStop * gs_ds_thk, 15,
		-ac_unit_width/2+frameOrSLightWidthRight+lar, -gs_fthk, 15,
		ac_unit_width/2-frameOrSLightWidthLeft-lal, -gs_fthk, 15,
		ac_unit_width/2-frameOrSLightWidthLeft-lal, -min(gs_leaf_thk, gs_fthk) - bEnableDoorStop * gs_ds_thk, 15,
		ac_unit_width/2-frameOrSLightWidthLeft-lal, -min(gs_leaf_thk, gs_fthk), 15,
		ac_unit_width/2-frameOrSLightWidthLeft-lal, 0, 15
	del 1
endif


if gs_wthk=1 then DEL 1


! =============================================================================
end
! =============================================================================


! =============================================================================
"textures1":
! =============================================================================
	vert 0, 0, 0
	vert 0, 1, 0
	vert 1, 0, 0
	vert 0, 0, 1
	coor 2, -1, -2, -3, -4

return

! =============================================================================
"textures2":
! =============================================================================
	vert 0, 0, 0
	vert 1, 0, 0
	vert 0, 1, 0
	vert 0, 0, 1
	coor 2, -1, -2, -3, -4

return


"rightMidRail":
	PRISM_ 4, gs_fthk,
			ac_unit_width/2-gs_fw_side_right+(xpr-gs_fw_side_right)*(xpr>gs_fw_side_right)*(iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED),  midRailElevation-midRailWidth/2, 15,
			ac_unit_width/2-rightPanelWidth, midRailElevation-midRailWidth/2, 15,
			ac_unit_width/2-rightPanelWidth, midRailElevation+midRailWidth/2, 15,
			ac_unit_width/2-gs_fw_side_right+(xpr-gs_fw_side_right)*(xpr>gs_fw_side_right)*(iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED),  midRailElevation+midRailWidth/2, 15
return


"leftMidRail":
	PRISM_ 4, gs_fthk,
			-ac_unit_width/2+gs_fw_side_left+(xpl-gs_fw_side_left)*(xpl>gs_fw_side_left)*(iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED),  midRailElevation-midRailWidth/2, 15,
			-ac_unit_width/2+leftPanelWidth, midRailElevation-midRailWidth/2, 15,
			-ac_unit_width/2+leftPanelWidth, midRailElevation+midRailWidth/2, 15,
			-ac_unit_width/2+gs_fw_side_left+(xpl-gs_fw_side_left)*(xpl>gs_fw_side_left)*(iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED),  midRailElevation+midRailWidth/2, 15
return


"leftSidelightBottomFrame":
	Prism_ 6, gs_fthk,
		-ac_unit_width/2+gs_fw_side_left,	gs_fw_lower,	10+maskLeftButFr,
		leftFrame,							gs_fw_lower,	mask4,
		leftFrame,							0,				15,
		-ac_unit_width/2+frameOrSLightWidthLeft,	0,			15,
		-ac_unit_width/2+frameOrSLightWidthLeft,	gs_fw_lower, 8,
		-ac_unit_width/2+leftPanelWidth,			gs_fw_lower, 15

return


"rightSidelightBottomFrame":

	Prism_ 6, gs_fthk,
		ac_unit_width/2-gs_fw_side_right, 	gs_fw_lower, 10+maskRightButFr,
		rightFrame, 						gs_fw_lower, mask4,
		rightFrame, 						0, 			 15,
		ac_unit_width/2-frameOrSLightWidthRight, 0, 15,
		ac_unit_width/2-frameOrSLightWidthRight, gs_fw_lower, 8,
		ac_unit_width/2-rightPanelWidth,		 gs_fw_lower, 15

return


"doorLeafCall":
	call "DoorLeafPanels" parameters all A		= _sizeLeafA,
										 B		= _sizeLeafB,
						bEnableKickBoard	= 1,
						bStorefrontClassic	= 1,
						bStorefrontDoor		= 1,
						bSecondPanel		= bSecondPanel,
						iDoorPanelType		= iDoorPanelType,
						gs_cust_panel		= gs_cust_panel,
						bMiddleRail			= bMiddleRail,
						midRailElevation	= midRailElevation,
						gs_leaf_thk			= gs_leaf_thk,
						gs_fw_side			= leafFrameWidth,
						gs_fw_side_right	= leafFrameWidth,
						gs_fw_side_left		= leafFrameWidth,
						gs_fw_lower			= bottomRailWidth,
						gs_fw_upper			= leafFrameWidth,
						gs_int_fw			= midRailWidth,
						gs_glass_thk		= gs_glass_thk,
						gs_handle_type_m	= _iHandleTypeIn,
						gs_handle_type_out_m= _iHandleTypeOut,
						gs_cust_handle		= _gs_cust_handle,
						gs_cust_handle_out	= _gs_cust_handle_out,
						gs_han_height		= _gs_han_height,
						gs_han_pos			= _gs_han_pos,
						lod3D				= lod3D,
						res					= res,
						gs_SashText_typ_num	= gs_SashText_typ_num,

						gs_leaf_pen			= gs_leaf_pen,
						gs_glass_pen		= gs_glass_pen,
						gs_leaf_pen_cont	= gs_leaf_pen_2D,
						gs_glass_pen_cont	= gs_pen_glass,
						gs_fillLeaf			= sh_sect_fill_type,
						gs_penLeaf_fg		= sh_sect_fill_fg,
						gs_penLeaf_bg		= sh_sect_fill_bg,
						gs_FillSdl			= gs_FillSdl,
						gs_penSdl_fg		= gs_penSdl_fg,
						gs_penSdl_bg 		= gs_penSdl_bg,
						gs_gsect			= gl_sect_fill_type,
						gs_penGlass_fg		= gl_sect_fill_fg,
						gs_penGlass_bg		= gl_sect_fill_bg,

						bMiddleLine			= _bMiddleLine,
						gs_leaf_mat			= gs_leaf_mat,
						gs_leaf_matin		= gs_leaf_mat,
						gs_lock_mat			= gs_lock_mat,
						gs_glass_mat		= gs_glass_mat,
						gs_handle_mat		= gs_handle_mat,
						gs_handle_ac_mat	= gs_handle_ac_mat,
						gs_frame_thk		= gs_frame_thk,
						gs_pivotdoor		= 0,
						bOplines3d			= bOplines3d,
						opLineType3dIn		= _opLineType3dIn,
						opLineType3dOut		= _opLineType3dOut,
						gs_opline_style_m	= gs_opline_style_m,
						gs_opLinePen		= gs_opLinePen
return


]]>
</Script_3D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_2D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
! Contact person: <SzL, NJ>

if iTypeDemolitionFill = RENOVATION_FILL_DEMOLISHED then		! Demolition
	gs_symbLineType = gs_Demolition_linetype
else
	gs_symbLineType = 1
endif

line_type gs_symbLineType

glaa = 0
glab = 0

glaa_dt	= 0
glab_dt	= 0

! =============================================================================
! No wall contour at corners and joints
! =============================================================================

if iEndFrameLeft <> ENDFRAME_NORMAL then gs_stack_left  = 1
if iEndFrameRight <> ENDFRAME_NORMAL then gs_stack_right = 1

! =============================================================================
! GS Storefront Door Functions
! =============================================================================

call "GS Storefront Door Functions",
	parameters all	gs_wcont_line_out		= gs_wcont_line_out,
					gs_wcont_line_in		= gs_wcont_line_in,
					bEnableParapetInset			= bEnableParapetInset,
					bEnableMasonryArch			= bEnableMasonryArch,
					bEnableSill					= bEnableSill,
					bEnableBoard				= bEnableBoard,
					bEnableFaschen				= bEnableFaschen,
					bEnableThreshold			= bEnableThreshold,
					bEnableCasing				= bEnableCasing,
					bEnableShutter				= bEnableShutter,
					bEnableCustomCornerLeft		= bEnableCustomCornerLeft,
					bEnableCustomCornerRight	= bEnableCustomCornerRight,
				! --- Corner Functions
					bLeftCornerFunction	 	= gs_cl,
					leftCornerAngle		 	= leftCornerAngle,
					leftConnWallThk		 	= WALL_THICKNESS,
					bRightCornerFunction 	= gs_cr,
					rightCornerAngle	 	= rightCornerAngle,
					rightConnWallThk		= WALL_THICKNESS,
					gs_left_oversize		= gs_left_oversize - gs_cl * abs(gs_fthk*TAN(90-leftCornerAngle/2)),
					gs_right_oversize		= gs_right_oversize - gs_cr * abs(gs_fthk*TAN(90-rightCornerAngle/2)),
					EgressMSWidth 			= EgressMSWidth,
					egressOffset 			= egressOffset,
					ms_rightOffset 			= ms_rightOffset,
					ms_leftOffset 			= ms_leftOffset,
					bSidelights 			= bSidelights,
					gs_sidelight_width_left = gs_sidelight_width_left,
					gs_sidelight_width_right = gs_sidelight_width_right,
					gs_sidelight_right		= gs_sidelight_right,
					gs_sidelight_left		= gs_sidelight_left,
					gs_leaf_optype_m		= gs_leaf_optype_m,
	returned_parameters ac_unit_width,
						gs_frame_ovhg_left_out,
						gs_frame_ovhg_right_out,
						gs_frame_ovhg_left_in,
						gs_frame_ovhg_right_in,
						gs_wthk,
						gs_fthk,
						bMirrored,
						addPrmX, addPrmY,
						mulPrmX, mulPrmY,
						iLoD2D,
						bSimpleLeafin50,
						bShowOplines2D,
						bShowFrameIn2D,
						bShowGlassInMiddle2D,
						gs_opLinePen,
						gs_iSwingType,
						gs_swingLineType,
						gs_swingLineType2,
						bShowAddHotspots, bShowUnitHotspots, bShowEgressHotspots, bShowLeafHotspots

if iLoD2D = 0 then end

if iTypeDemolitionFill = RENOVATION_FILL_NEW & gs_bShowNewOnCC then end		! New

lod2D	= DET2D_FS_OFF
bDetailedSlidingLeafSymbol	= 0
iSymbolGlassType			= SYMBGLASS_SIMPLEGLASS
bOpeningSymbDisplay			= 0

if iLoD2D = SYMBD_S_1LINE then						lod2D	= DET2D_FS_SIMPLE			! Simple --> INT 200
if iLoD2D = SYMBD_S_1LINECL then					lod2D	= DET2D_FS_SIMPLE			! Simple --> NLD 200
if iLoD2D = SYMBD_M_1LINELEAF_2LINE then			lod2D	= DET2D_FS_MIDDLE			! Middle --> INT 100
if iLoD2D = SYMBD_M_2LINELEAFCL_GLASS then			lod2D	= DET2D_FS_MIDDLE			! Middle --> NLD 100
if iLoD2D = SYMBD_D_2LINELEAFOP_GLASS then			lod2D	= DET2D_FS_DETAILED			! Detailed --> INT 50
if iLoD2D = SYMBD_D_2LINELEAFCL_REBATEONGLASS then	lod2D	= DET2D_FS_DETAILED			! Detailed --> NLD 50
if iLoD2D = SYMBD_D_2LEAFOPGLASS_GLASS then			lod2D	= DET2D_FS_DETAILED			! Detailed --> INT 50 Storefronts
if iLoD2D = SYMBD_S_2LINE then						lod2D	= DET2D_FS_SIMPLE_CHI		! Chinese Simple
if iLoD2D = SYMBD_D_2LINELEAFOP_2LINE then			lod2D 	= DET2D_FS_DETAILED_CHI		! Chinese Detailed

if	iLoD2D = SYMBD_S_1LINECL |\							! NLD 200
	iLoD2D = SYMBD_M_2LINELEAFCL_GLASS |\
	iLoD2D = SYMBD_D_2LINELEAFCL_REBATEONGLASS	then	! NLD 100, NLD 50
	bOpeningSymbDisplay			= 1
	bDetailedSlidingLeafSymbol	= 1
endif
if iLoD2D = SYMBD_D_2LEAFOPGLASS_GLASS 		then	! Detailed --> INT 50 Storefronts
	iSymbolGlassType	= SYMBGLASS_DOUBLEGLASS
endif


add2 addPrmX, addPrmY
mul2 mulPrmX, mulPrmY

if (gs_cl | gs_cr) & gs_opening_dir_sl_m = OPENING_DIR_FLIPPED_INSIDE then
	leftCornerAngle = 360 - leftCornerAngle
	rightCornerAngle = 360 - rightCornerAngle
endif

if not(bShowOplines2D) then
	gs_open_2D = 0
endif

gs_fillFr	= gs_bFills * gs_fillFr
gs_fillLeaf	= gs_bFills * gs_fillLeaf
gs_FillSdl	= gs_bFills * gs_FillSdl
gs_gsect	= gs_bFills * gs_gsect

pen gs_frame_pen_cont

if gs_wthk then
	if WIDO_REVEAL_SIDE then
		add2 0,WALL_THICKNESS - WIDO_FRAME_THICKNESS - WIDO_SILL
	else
		add2 0,WIDO_SILL
	endif
endif

! =============================================================================
! Opening Hotspots
! =============================================================================

wi=WALL_INCL ! Inclination of the wall surfaces


! =============================================================================
! Hotspot Editing of SideLights
! =============================================================================

if lod2D = DET2D_FS_MIDDLE | lod2D = DET2D_FS_DETAILED then
	if gs_sidelight_left then
		hotspot2 -ac_unit_width/2, 0, 1320, gs_sidelight_width_left, 1+128
		hotspot2 -ac_unit_width/2-1, 0, 1321, gs_sidelight_width_left, 3
		hotspot2 -ac_unit_width/2+gs_sidelight_width_left, 0, 1322, gs_sidelight_width_left, 2
	endif
	if gs_sidelight_right then
		hotspot2 ac_unit_width/2, 0, 1340, gs_sidelight_width_right, 1+128
		hotspot2 ac_unit_width/2+1, 0, 1341, gs_sidelight_width_right, 3
		hotspot2 ac_unit_width/2-gs_sidelight_width_right, 0, 1342, gs_sidelight_width_right, 2
	endif
endif

! =============================================================================
! Frame Hotspots
! =============================================================================

!****** 2D symbol following scale *******

symb_2d = 0
if lod2D = DET2D_FS_SIMPLE | lod2D = DET2D_FS_SIMPLE_CHI then symb_2d = 200
if lod2D = DET2D_FS_MIDDLE then symb_2d = 100
if lod2D = DET2D_FS_DETAILED | lod2D = DET2D_FS_DETAILED_CHI then symb_2d = 50

!********************* coordinates according to size types

unitleft = -ac_unit_width / 2
unitright = ac_unit_width / 2

if iStorefrontType = SFTYPE_DOOR_ONLY or  iStorefrontType = SFTYPE_DOOR_TRANSOM then
	leafleft = -ac_leaf_width / 2 + (gs_fw_side_left - gs_fw_side_right)/2
	leafright = ac_leaf_width / 2 - (gs_fw_side_right- gs_fw_side_left)/2

	egressleft = -ac_egress_width / 2 + (gs_fw_side_left - gs_fw_side_right)/2
	egressright = ac_egress_width / 2  - (gs_fw_side_right- gs_fw_side_left)/2

endif

if iStorefrontType = SFTYPE_DOOR_TRSL then
	leafleft	= unitleft  + frameOrSLightWidthLeft
	leafright	= unitright - frameOrSLightWidthRight
	egressleft	= unitleft  + frameOrSLightWidthLeft + gs_ds_w * bEnableDoorStop
	egressright	= unitright - frameOrSLightWidthRight - gs_ds_w * bEnableDoorStop
endif

frameleftout	= unitleft  - gs_frame_ovhg_left_out
framerightout	= unitright + gs_frame_ovhg_right_out

frameleftin		= unitleft  - gs_frame_ovhg_left_in
framerightin	= unitright + gs_frame_ovhg_right_in

leftFrame = frameleftout
if abs(frameleftout) > abs(frameleftin) then
	leftFrame = frameleftin
endif
rightFrame = framerightout
if abs(framerightout) > abs(framerightin) then
	rightFrame = framerightin
endif

if symb_2d=100 then
	egressright = egressright + gs_ds_w * bEnableDoorStop
	egressleft = egressleft - gs_ds_w * bEnableDoorStop
endif

egressLeftHotspot = egressleft
egressRightHotspot = egressright

!************ Hotspots on Unit Size

if bShowUnitHotspots then
	unID = 100
	hotspot2 unitleft,	 0,           unID
	if WIDO_REVEAL_SIDE then
		hotspot2 unitleft,	(-gs_fthk) * (symb_2d <> 200), unID + 2
	else
		hotspot2 unitleft,	(-gs_fthk) * (symb_2d <> 200), unID + 2
	endif

	hotspot2 unitright,	 0,           unID + 1
	if WIDO_REVEAL_SIDE then
		hotspot2 unitright,	(-gs_fthk) * (symb_2d <> 200), unID + 3
	else
		hotspot2 unitright,	(-gs_fthk) * (symb_2d <> 200), unID + 3
	endif
endif

!************ Hotspots on Egress Size

if symb_2d = 200 then
	egressthk1 = 0
	egressthk2 = 0
else
	if symb_2d = 100 then
		egressthk1 = 0
		egressthk2 = -gs_fthk
	else
		egressthk1 = - gs_leaf_thk
		egressthk2 = egressthk1 - gs_ds_thk*bEnableDoorStop
	endif
endif

if bShowEgressHotspots then
	unID = 200
	hotspot2 egressLeftHotspot, egressthk1, unID
	hotspot2 egressRightHotspot, egressthk1, unID + 1

	if bEnableDoorStop then
		hotspot2 egressLeftHotspot, egressthk2, unID + 2
		hotspot2 egressRightHotspot, egressthk2, unID + 3
	else
		hotspot2 egressLeftHotspot, -gs_fthk * (symb_2d <> 200), unID + 2
		hotspot2 egressRightHotspot, -gs_fthk * (symb_2d <> 200), unID + 3
	endif
endif

!************* Hotspots on Leaf Size

leafthk1=-gs_fthk

if bShowLeafHotspots then
	unID = 300
	hotspot2 leafleft, 0,        unID
	hotspot2 leafright, 0,        unID + 1
	if lod2D = DET2D_FS_MIDDLE | lod2D = DET2D_FS_SIMPLE then
		hotspot2 leafleft, 0,        unID + 2
		hotspot2 leafright, 0,        unID + 3
	else
		hotspot2 leafleft, leafthk1, unID + 2
		hotspot2 leafright, leafthk1, unID + 3
	endif
endif

nFlipTrans = 0
if bOpeningDirectionSL then
	mul2 1, -1
	add2 0,gs_fthk
	nFlipTrans = 2
endif

leftFrameMod = gs_fthk/TAN(leftCornerAngle/2)
rightFrameMod = gs_fthk/TAN(rightCornerAngle/2)
unID = 1
if lod2D = DET2D_FS_DETAILED | lod2D = DET2D_FS_DETAILED_CHI then
	if iEndFrameLeft = ENDFRAME_CORNER then
		if leftCornerAngle < 180 then
			hotspot2 -ac_unit_width/2+leftFrameMod, -gs_fthk, unID : unID = unID + 1
		else
			unID = unID + 1
		endif
		if leftCornerAngle > 180 then
			hotspot2 -ac_unit_width/2-leftFrameMod, 0, unID : unID = unID + 1
		else
			unID = unID + 1
		endif
	endif

	if iEndFrameRight = ENDFRAME_CORNER then
		if rightCornerAngle < 180 then
			hotspot2 ac_unit_width/2-rightFrameMod, -gs_fthk, unID : unID = unID + 1
		else
			unID = unID + 1
		endif
		if rightCornerAngle > 180 then
			hotspot2 ac_unit_width/2+rightFrameMod, 0, unID : unID = unID + 1
		else
			unID = unID + 1
		endif
	endif
endif

del nFlipTrans

! =============================================================================
! Frame
! =============================================================================
fill gs_fillFr
PEN gs_frame_pen_cont

bDetailedGlass		= (iSymbolGlassType	= SYMBGLASS_DOUBLEGLASS)
bDoorStopDisplay	= (lod2D = DET2D_FS_DETAILED | lod2D = DET2D_FS_DETAILED_CHI)

if bShowFrameIn2D then
	frameThicknessModRight = (gs_glass_thk*(bDetailedGlass)+gs_gsb)*(iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED)
	frameThicknessModLeft = (gs_glass_thk*(bDetailedGlass)+gs_gsb)*(iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED)

	if gs_sidelight_left then
		POLY2_b 7, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
				-ac_unit_width/2+leftPanelWidth,				0,					1+32,
				-ac_unit_width/2+gs_frame_width+leftPanelWidth, 0,					1+32,
				-ac_unit_width/2+gs_frame_width+leftPanelWidth, -min(gs_leaf_thk, gs_fthk), 1-(bDoorStopDisplay*bEnableDoorStop)+32,
				-ac_unit_width/2+gs_frame_width+leftPanelWidth, -min(gs_leaf_thk, gs_fthk)-bEnableDoorStop * gs_ds_thk, 1+32,
				-ac_unit_width/2+gs_frame_width+leftPanelWidth, -gs_fthk, 		1+32,
				-ac_unit_width/2+leftPanelWidth,				-gs_fthk,			1+32,
				-ac_unit_width/2+leftPanelWidth,				0,					-1
		glaa=gs_fw_side_left
		glaa_inside=gs_fw_side_left
	endif

	if gs_sidelight_right then
		POLY2_b 7, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
				ac_unit_width/2-gs_frame_width-rightPanelWidth,	0,			1+32,
				ac_unit_width/2-rightPanelWidth,				0,			1+32,
				ac_unit_width/2-rightPanelWidth,				-gs_fthk,	1+32,
				ac_unit_width/2-gs_frame_width-rightPanelWidth,	-gs_fthk,	1+32,
				ac_unit_width/2-gs_frame_width-rightPanelWidth,	-min(gs_leaf_thk, gs_fthk)-bEnableDoorStop * gs_ds_thk,	1-(bDoorStopDisplay*bEnableDoorStop)+32,
				ac_unit_width/2-gs_frame_width-rightPanelWidth,	-min(gs_leaf_thk, gs_fthk),	1+32,
				ac_unit_width/2-gs_frame_width-rightPanelWidth,	0,			-1
		glab=-gs_fw_side_right
		glab_inside=-gs_fw_side_right
	endif

	nFlipTrans = 0
	if bOpeningDirectionSL then
		mul2 1, -1
		add2 0,gs_fthk
		nFlipTrans = 2
	endif

	if symb_2d = 100 or symb_2d = 50 then
		if gs_tolerance_left  > 0 then
			line2 leftFrame,  -frameThicknessModLeft, unitleft,  -frameThicknessModLeft
			line2 leftFrame,  -gs_fthk, unitleft,  -gs_fthk
			if not(gs_stack_left) then line2 leftFrame,  -frameThicknessModLeft, leftFrame,  -gs_fthk
		endif
		if gs_tolerance_right > 0 then
			line2 rightFrame, -frameThicknessModRight, unitright, -frameThicknessModRight
			line2 rightFrame, -gs_fthk, unitright, -gs_fthk
			if not(gs_stack_right) then line2 rightFrame, -frameThicknessModRight, rightFrame, -gs_fthk
		endif
	endif

	! -----------------------------------------------------------------------------
	! Normal Frame Type
	! -----------------------------------------------------------------------------

	if bEnableDoorStop*bDoorStopDisplay*not(gs_sidelight_right) then
		if not(WIDO_REVEAL_SIDE) then
			_posDoorStop1R = -gs_leaf_thk-bEnableDoorStop * gs_ds_thk
			_posDoorStop2R = -gs_leaf_thk
		else
			_posDoorStop1R = -gs_fthk+gs_leaf_thk
			_posDoorStop2R = -gs_fthk+gs_leaf_thk+bEnableDoorStop * gs_ds_thk
		endif
	else
		_posDoorStop1R = -gs_fthk
		_posDoorStop2R = -gs_fthk
	endif

	if bEnableDoorStop*bDoorStopDisplay*not(gs_sidelight_left) then
		if not(WIDO_REVEAL_SIDE) then
			_posDoorStop1L = -gs_leaf_thk-bEnableDoorStop * gs_ds_thk
			_posDoorStop2L = -gs_leaf_thk
		else
			_posDoorStop1L = -gs_fthk+gs_leaf_thk
			_posDoorStop2L = -gs_fthk+gs_leaf_thk+bEnableDoorStop * gs_ds_thk
		endif
	else
		_posDoorStop1L = -gs_fthk
		_posDoorStop2L = -gs_fthk
	endif

	if not(gs_cr) then
		POLY2_b     7, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
					ac_unit_width/2-gs_fw_side_right,	-frameThicknessModRight,	1+32,
					unitright,							-frameThicknessModRight,	(not(gs_stack_right) | (gs_tolerance_right > 0))+32,
					unitright,							-gs_fthk,					1+32,
					ac_unit_width/2-gs_fw_side_right,	-gs_fthk,					1+32,
					ac_unit_width/2-gs_fw_side_right,	_posDoorStop1R,				1-(bDoorStopDisplay*bEnableDoorStop*not(gs_sidelight_right))+32,
					ac_unit_width/2-gs_fw_side_right,	_posDoorStop2R,				1+32,
					ac_unit_width/2-gs_fw_side_right,	-frameThicknessModRight,	-1
		glab=-gs_fw_side_right
	endif

	if not(gs_cl) then
		POLY2_b 7, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
					unitleft,							-frameThicknessModLeft,		1+32,
					-ac_unit_width/2+gs_fw_side_left,	-frameThicknessModLeft,		1+32,
					-ac_unit_width/2+gs_fw_side_left,	_posDoorStop2L,				1-(bDoorStopDisplay*bEnableDoorStop*not(gs_sidelight_left))+32,
					-ac_unit_width/2+gs_fw_side_left,	_posDoorStop1L,				1+32,
					-ac_unit_width/2+gs_fw_side_left,	-gs_fthk,					1+32,
					unitleft,							-gs_fthk,					(not(gs_stack_left) | (gs_tolerance_left > 0))+32,
					unitleft,							-frameThicknessModLeft,		-1
		glaa=gs_fw_side_left
	endif

	del nFlipTrans

	! -----------------------------------------------------------------------------
	! Corner Frame Type
	! -----------------------------------------------------------------------------


	nFlipTrans = 0
	if bOpeningDirectionSL then
		mul2 1, -1
		add2 0,gs_fthk
		nFlipTrans = 2
	endif

	if gs_cr then
		if rightCornerAngle <180 then
			if not(gs_sidelight_right) then iFrameStyleRight = FRAME_STYLE_VISIBLE_MULLIONS
			if iFrameStyleRight = FRAME_STYLE_VISIBLE_MULLIONS then
				POLY2_b  7, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
					ac_unit_width/2-gs_fw_side_right, 0,      1+32,
					ac_unit_width/2, 0,     0,
					ac_unit_width/2-gs_fthk*TAN(90-rightCornerAngle/2), -gs_fthk,      1+32,
					ac_unit_width/2-gs_fw_side_right, -gs_fthk,      1+32,
					ac_unit_width/2-gs_fw_side_right, _posDoorStop1R,		1-(bDoorStopDisplay*bEnableDoorStop*not(gs_sidelight_right))+32,
					ac_unit_width/2-gs_fw_side_right, _posDoorStop2R,      1+32,
					ac_unit_width/2-gs_fw_side_right, 0,      -1
				glab_dt = 0
			endif

			if iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED then
				POLY2_b 5, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
					ac_unit_width/2-(gs_glass_thk*(bDetailedGlass)+gs_gsb)*TAN(90-rightCornerAngle/2), -gs_glass_thk*(bDetailedGlass)-gs_gsb,      1+32,
					ac_unit_width/2-(gs_frame_width/2)/SIN(rightCornerAngle/2)-(gs_glass_thk*(bDetailedGlass)+gs_gsb)*TAN(90-rightCornerAngle/2), -gs_glass_thk*(bDetailedGlass)-gs_gsb,     1+32,
					ac_unit_width/2-gs_fthk*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(rightCornerAngle/2), -gs_fthk,      1+32,
					ac_unit_width/2-gs_fthk*TAN(90-rightCornerAngle/2),-gs_fthk,      0,
					ac_unit_width/2-(gs_glass_thk*(bDetailedGlass)+gs_gsb)*TAN(90-rightCornerAngle/2), -gs_glass_thk*(bDetailedGlass)-gs_gsb,      -1
				glab=-(gs_frame_width/2)/SIN(rightCornerAngle/2)-(gs_glass_thk*(bDetailedGlass)+gs_gsb)*TAN(90-rightCornerAngle/2)
				glab_dt=-(gs_gsb)*TAN(90-rightCornerAngle/2)
				glab_inside=-(gs_glass_thk + gs_gsb)*TAN(90-rightCornerAngle/2)
			endif

			if iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED_WO_FRAME then
				glab=-(gs_glass_thk*(bDetailedGlass)+gs_gsb)*TAN(90-rightCornerAngle/2)
				glab_dt=-(gs_gsb)*TAN(90-rightCornerAngle/2)
				glab_inside=-(gs_glass_thk + gs_gsb)*TAN(90-rightCornerAngle/2)
			endif

			if iFrameStyleRight = FRAME_STYLE_ANGLE_FRAME then
				POLY2_b 6, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
					ac_unit_width/2, 0,      1+32,
					ac_unit_width/2-(gs_frame_width/2)/SIN(rightCornerAngle/2)-(gs_glass_thk*(bDetailedGlass)+gs_gsb)*TAN(90-rightCornerAngle/2), 0,     1+32,
					ac_unit_width/2-(gs_frame_width/2)/SIN(rightCornerAngle/2)-(gs_glass_thk*(bDetailedGlass)+gs_gsb)*TAN(90-rightCornerAngle/2), -gs_glass_thk*(bDetailedGlass)-gs_gsb,     1+32,
					ac_unit_width/2-gs_fthk*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(rightCornerAngle/2), -gs_fthk,      1+32,
					ac_unit_width/2-gs_fthk*TAN(90-rightCornerAngle/2),-gs_fthk,      0,
					ac_unit_width/2, 0,      -1

				glab=-(gs_frame_width/2)/SIN(rightCornerAngle/2)-(gs_glass_thk*(bDetailedGlass)+gs_gsb)*TAN(90-rightCornerAngle/2)
				glab_dt = 0
			endif
		endif

		if rightCornerAngle >180 then
			if not(gs_sidelight_right) then iFrameStyleRight = 0
			if iFrameStyleRight = FRAME_STYLE_VISIBLE_MULLIONS then
				POLY2_b   7, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
					ac_unit_width/2-gs_fw_side_right, 0,      1+32,
					ac_unit_width/2+gs_fthk*TAN(90-rightCornerAngle/2), 0,     0,
					ac_unit_width/2, -gs_fthk,      1+32,
					ac_unit_width/2-gs_fw_side_right,-gs_fthk,      1+32,
					ac_unit_width/2-gs_fw_side_right,_posDoorStop1R,      1-(bDoorStopDisplay*bEnableDoorStop*not(gs_sidelight_right))+32,
					ac_unit_width/2-gs_fw_side_right,_posDoorStop2R,      1+32,
					ac_unit_width/2-gs_fw_side_right, 0,      -1
				glab_dt = 0
			endif

			if iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED then
				POLY2_b 5, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
					ac_unit_width/2+(gs_fthk-gs_glass_thk*(bDetailedGlass)-gs_gsb)*TAN(90-rightCornerAngle/2), -gs_glass_thk*(bDetailedGlass)-gs_gsb,      1+32,
					ac_unit_width/2+gs_fthk*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(180-rightCornerAngle/2)-(gs_glass_thk*(bDetailedGlass)+gs_gsb)*TAN(90-rightCornerAngle/2),
						-gs_glass_thk*(bDetailedGlass)-gs_gsb,     1+32,
					ac_unit_width/2-(gs_frame_width/2)/SIN(180-rightCornerAngle/2), -gs_fthk,      1+32,
					ac_unit_width/2, -gs_fthk,      0,
					ac_unit_width/2+(gs_fthk-gs_glass_thk*(bDetailedGlass)-gs_gsb)*TAN(90-rightCornerAngle/2), -gs_glass_thk*(bDetailedGlass)-gs_gsb,      -1

				glab=gs_fthk*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(180-rightCornerAngle/2)-(gs_glass_thk*(bDetailedGlass)+gs_gsb)*TAN(90-rightCornerAngle/2)
				glab_dt=(gs_fthk-gs_gsb)*TAN(90-rightCornerAngle/2)
				glab_inside=(gs_fthk-gs_glass_thk-gs_gsb)*TAN(90-rightCornerAngle/2)
			endif

			if iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED_WO_FRAME then
				glab=gs_fthk*TAN(90-rightCornerAngle/2)-(gs_glass_thk*(bDetailedGlass)+gs_gsb)*TAN(90-rightCornerAngle/2)
				glab_dt=(gs_fthk-gs_gsb)*TAN(90-rightCornerAngle/2)
				glab_inside=(gs_fthk-gs_glass_thk-gs_gsb)*TAN(90-rightCornerAngle/2)
			endif

			if iFrameStyleRight = FRAME_STYLE_ANGLE_FRAME then
				POLY2_b 6, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
					ac_unit_width/2+gs_fthk*TAN(90-rightCornerAngle/2), 0,      1+32,
					ac_unit_width/2+gs_fthk*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(180-rightCornerAngle/2)-(gs_glass_thk*(bDetailedGlass)+gs_gsb)*TAN(90-rightCornerAngle/2), 0,      1+32,
					ac_unit_width/2+gs_fthk*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(180-rightCornerAngle/2)-(gs_glass_thk*(bDetailedGlass)+gs_gsb)*TAN(90-rightCornerAngle/2),
						-gs_glass_thk*(bDetailedGlass)-gs_gsb,     1+32,
					ac_unit_width/2-(gs_frame_width/2)/SIN(180-rightCornerAngle/2), -gs_fthk,      1+32,
					ac_unit_width/2,-gs_fthk,      0,
					ac_unit_width/2+gs_fthk*TAN(90-rightCornerAngle/2), 0,      -1

				glab=gs_fthk*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(180-rightCornerAngle/2)-(gs_glass_thk*(bDetailedGlass)+gs_gsb)*TAN(90-rightCornerAngle/2)
				glab_dt = 0
			endif
		endif
	else
		glab_dt = 0
	endif

	if gs_cl then
		if leftCornerAngle <180 then
			if not(gs_sidelight_left) then iFrameStyleLeft = FRAME_STYLE_VISIBLE_MULLIONS
			if iFrameStyleLeft = FRAME_STYLE_VISIBLE_MULLIONS then
				POLY2_b 7, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
					-ac_unit_width/2,					0, 1+32,
					-ac_unit_width/2+gs_fw_side_left,	0, 1+32,
					-ac_unit_width/2+gs_fw_side_left,	_posDoorStop2L, 1-(bDoorStopDisplay*bEnableDoorStop*not(gs_sidelight_left))+32,
					-ac_unit_width/2+gs_fw_side_left,	_posDoorStop1L, 1+32,

					-ac_unit_width/2+gs_fw_side_left,	-gs_fthk, 1+32,
					-ac_unit_width/2+gs_fthk*TAN(90-leftCornerAngle/2), -gs_fthk, 0,
					-ac_unit_width/2,					0, -1
				glaa_dt=0
			endif

			if iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED then
				MUL2 -1,1
				POLY2_b 5, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
					ac_unit_width/2-(gs_glass_thk*(bDetailedGlass)+gs_gsb)*TAN(90-leftCornerAngle/2), -gs_glass_thk*(bDetailedGlass)-gs_gsb,      1+32,
					ac_unit_width/2-(gs_frame_width/2)/SIN(leftCornerAngle/2)-(gs_glass_thk*(bDetailedGlass)+gs_gsb)*TAN(90-leftCornerAngle/2), -gs_glass_thk*(bDetailedGlass)-gs_gsb,     1+32,
					ac_unit_width/2-gs_fthk*TAN(90-leftCornerAngle/2)-(gs_frame_width/2)/SIN(leftCornerAngle/2), -gs_fthk,      1+32,
					ac_unit_width/2-gs_fthk*TAN(90-leftCornerAngle/2),-gs_fthk,      0,
					ac_unit_width/2-(gs_glass_thk*(bDetailedGlass)+gs_gsb)*TAN(90-leftCornerAngle/2), -gs_glass_thk*(bDetailedGlass)-gs_gsb,      -1
				DEL 1
				glaa=(gs_frame_width/2)/SIN(leftCornerAngle/2)+(gs_glass_thk*(bDetailedGlass)+gs_gsb)*TAN(90-leftCornerAngle/2)
				glaa_dt=(gs_gsb)*TAN(90-leftCornerAngle/2)
				glaa_inside=(gs_glass_thk + gs_gsb)*TAN(90-leftCornerAngle/2)
			endif

			if iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED_WO_FRAME then
				glaa=(gs_glass_thk*(bDetailedGlass)+gs_gsb)*TAN(90-leftCornerAngle/2)
				glaa_dt=(gs_gsb)*TAN(90-leftCornerAngle/2)
				glaa_inside=(gs_glass_thk + gs_gsb)*TAN(90-leftCornerAngle/2)
			endif

			if iFrameStyleLeft = FRAME_STYLE_ANGLE_FRAME then
				MUL2 -1,1
				POLY2_b 6, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
					ac_unit_width/2, 0,      1+32,
					ac_unit_width/2-(gs_frame_width/2)/SIN(leftCornerAngle/2)-(gs_glass_thk*(bDetailedGlass)+gs_gsb)*TAN(90-leftCornerAngle/2), 0,     1+32,
					ac_unit_width/2-(gs_frame_width/2)/SIN(leftCornerAngle/2)-(gs_glass_thk*(bDetailedGlass)+gs_gsb)*TAN(90-leftCornerAngle/2), -gs_glass_thk*(bDetailedGlass)-gs_gsb,     1+32,
					ac_unit_width/2-gs_fthk*TAN(90-leftCornerAngle/2)-(gs_frame_width/2)/SIN(leftCornerAngle/2), -gs_fthk,      1+32,
					ac_unit_width/2-gs_fthk*TAN(90-leftCornerAngle/2),-gs_fthk,      0,
					ac_unit_width/2, 0,      -1

				DEL 1
				glaa=(gs_frame_width/2)/SIN(leftCornerAngle/2)+(gs_glass_thk*(bDetailedGlass)+gs_gsb)*TAN(90-leftCornerAngle/2)
				glaa_dt=0
			endif
		endif

		if leftCornerAngle >180 then
			if not(gs_sidelight_left) then iFrameStyleLeft = FRAME_STYLE_VISIBLE_MULLIONS
			if iFrameStyleLeft = FRAME_STYLE_VISIBLE_MULLIONS then
				POLY2_b 7, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
					-ac_unit_width/2+gs_fthk*TAN(90+leftCornerAngle/2), 0, 1+32,
					-ac_unit_width/2+gs_fw_side_left, 0, 1+32,
					-ac_unit_width/2+gs_fw_side_left, _posDoorStop2L, 1-(bDoorStopDisplay*bEnableDoorStop*not(gs_sidelight_left)),
					-ac_unit_width/2+gs_fw_side_left, _posDoorStop1L, 1+32,
					-ac_unit_width/2+gs_fw_side_left, -gs_fthk, 1+32,
					-ac_unit_width/2, -gs_fthk, 0,
					-ac_unit_width/2+gs_fthk*TAN(90+leftCornerAngle/2), 0, -1
				glaa_dt=0
			endif

			if iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED then
				MUL2 -1,1
				POLY2_b 5, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
					ac_unit_width/2+(gs_fthk-gs_glass_thk*(bDetailedGlass)-gs_gsb)*TAN(90-leftCornerAngle/2), -gs_glass_thk*(bDetailedGlass)-gs_gsb,      1+32,
					ac_unit_width/2+gs_fthk*TAN(90-leftCornerAngle/2)-(gs_frame_width/2)/SIN(180-leftCornerAngle/2)-(gs_glass_thk*(bDetailedGlass)+gs_gsb)*TAN(90-leftCornerAngle/2),
					 -gs_glass_thk*(bDetailedGlass)-gs_gsb,     1+32,
					ac_unit_width/2-(gs_frame_width/2)/SIN(180-leftCornerAngle/2), -gs_fthk,      1+32,
					ac_unit_width/2,-gs_fthk,      0,
					ac_unit_width/2+(gs_fthk-gs_glass_thk*(bDetailedGlass)-gs_gsb)*TAN(90-leftCornerAngle/2), -gs_glass_thk*(bDetailedGlass)-gs_gsb,      -1
				DEL 1
				glaa=-gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(180-leftCornerAngle/2)+(gs_glass_thk*(bDetailedGlass)+gs_gsb)*TAN(90-leftCornerAngle/2)
				glaa_dt=-(gs_fthk-gs_gsb)*TAN(90-leftCornerAngle/2)
				glaa_inside=-(gs_fthk-gs_glass_thk-gs_gsb)*TAN(90-leftCornerAngle/2)
			endif

			if iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED_WO_FRAME then
				glaa=-gs_fthk*TAN(90-leftCornerAngle/2)+(gs_glass_thk*(bDetailedGlass)+gs_gsb)*TAN(90-leftCornerAngle/2)
				glaa_dt=-(gs_fthk-gs_gsb)*TAN(90-leftCornerAngle/2)
				glaa_inside=-(gs_fthk-gs_glass_thk-gs_gsb)*TAN(90-leftCornerAngle/2)
			endif

			if iFrameStyleLeft = FRAME_STYLE_ANGLE_FRAME then
				MUL2 -1,1
				POLY2_b 6, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
					ac_unit_width/2+gs_fthk*TAN(90-leftCornerAngle/2), 0,      1+32,

					ac_unit_width/2+gs_fthk*TAN(90-leftCornerAngle/2)-(gs_frame_width/2)/SIN(180-leftCornerAngle/2)-(gs_glass_thk*(bDetailedGlass)+gs_gsb)*TAN(90-leftCornerAngle/2), 0,      1+32,
					ac_unit_width/2+gs_fthk*TAN(90-leftCornerAngle/2)-(gs_frame_width/2)/SIN(180-leftCornerAngle/2)-(gs_glass_thk*(bDetailedGlass)+gs_gsb)*TAN(90-leftCornerAngle/2),
					 -gs_glass_thk*(bDetailedGlass)-gs_gsb,     1+32,
					ac_unit_width/2-(gs_frame_width/2)/SIN(180-leftCornerAngle/2), -gs_fthk,      1+32,
					ac_unit_width/2,-gs_fthk,      0,
					ac_unit_width/2+gs_fthk*TAN(90-leftCornerAngle/2), 0,      -1
				DEL 1

				glaa=-(gs_fthk*TAN(90-leftCornerAngle/2)-(gs_frame_width/2)/SIN(180-leftCornerAngle/2)-(gs_glass_thk*(bDetailedGlass)+gs_gsb)*TAN(90-leftCornerAngle/2))
				glaa_dt=0
			endif
		endif
	ELSE
		glaa_dt=0
	endif

	del nFlipTrans
endif


! =============================================================================
! Glass
! =============================================================================

pen gs_pen_glass
line_type gs_symbLineType
fill gs_gsect

nFlipTrans = 0
if bOpeningDirectionSL then
	mul2 1, -1
	add2 0,gs_fthk
	nFlipTrans = 2
endif

if bShowGlassInMiddle2D then
	if gs_sidelight_left & not(gs_sidelight_right) then
		ADD2 0,-gs_gsb * bShowFrameIn2D
		gosub "leftGlass2D"
		DEL 1
	endif

	if gs_sidelight_right & not(gs_sidelight_left) then
		ADD2 0,-gs_gsb * bShowFrameIn2D
		gosub "rightGlass2D"
		DEL 1
	endif

	if gs_sidelight_right & gs_sidelight_left then
		ADD2 0,-gs_gsb * bShowFrameIn2D
		gosub "leftGlass2D"
		gosub "rightGlass2D"
		DEL 1
	endif
endif

! Sidelight frame contours and uncut polygons -----------------------------------------------------

glassFrameMod = gs_gsb+gs_glass_thk * bDetailedGlass

if gs_sidelight_left and (lod2D = DET2D_FS_DETAILED | lod2D = DET2D_FS_DETAILED_CHI | lod2D = DET2D_FS_MIDDLE) then
	line_property 0
	pen gs_frame_pen_cont
	fill gs_FillSdl
	drawindex 10

	add2 -ac_unit_width/2, 0

	if not(gs_cl) then
		line2 0, 0, gs_sidelight_width_left, 0
		line2 0, -gs_fthk, gs_sidelight_width_left, -gs_fthk
	else
		if leftCornerAngle <180 then
			line2 0, 0, gs_sidelight_width_left, 0
			line2 -gs_fthk*TAN(90+leftCornerAngle/2), -gs_fthk, gs_sidelight_width_left, -gs_fthk
		else
			line2 0, -gs_fthk, gs_sidelight_width_left, -gs_fthk
			line2 gs_fthk*TAN(90+leftCornerAngle/2), 0, gs_sidelight_width_left, 0
		endif
	endif

	if not(gs_cl) | (gs_cl & iFrameStyleLeft = FRAME_STYLE_VISIBLE_MULLIONS) then

		poly2_b 5, 1+2+64, gs_penSdl_fg, gs_penSdl_bg,
			gs_fw_side_left, -glassFrameMod, 0,
			gs_sidelight_width_left-gs_frame_width, -glassFrameMod,	0,
			gs_sidelight_width_left-gs_frame_width, -gs_fthk,	0,
			gs_fw_side_left,						-gs_fthk,	0,
			gs_fw_side_left,						-glassFrameMod,	-1

		if iFrameStyleLeft = FRAME_STYLE_VISIBLE_MULLIONS then
			poly2_b 5, 1+2+64, gs_penSdl_fg, gs_penSdl_bg,
				gs_fw_side_left, 0, 0,
				gs_sidelight_width_left-gs_frame_width, 0,			0,
				gs_sidelight_width_left-gs_frame_width, -gs_gsb,	0,
				gs_fw_side_left, -gs_gsb,	0,
				gs_fw_side_left, 0,	-1
		else
			poly2_b 5, 1+2+64, gs_penSdl_fg, gs_penSdl_bg,
				0, 0, 0,
				gs_sidelight_width_left-gs_frame_width, 0,			0,
				gs_sidelight_width_left-gs_frame_width, -gs_gsb,	0,
				0, -gs_gsb,	0,
				0, 0, -1
		endif
	else
		if leftCornerAngle <180 then
			if iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED_WO_FRAME then
				poly2_b 5, 1+2+64, gs_penSdl_fg, gs_penSdl_bg,
					glassFrameMod*TAN(90-leftCornerAngle/2), -glassFrameMod, 0,
					gs_sidelight_width_left-gs_frame_width, -glassFrameMod,	0,
					gs_sidelight_width_left-gs_frame_width, -gs_fthk,	0,
					gs_fthk*TAN(90-leftCornerAngle/2),	-gs_fthk,	0,
					glassFrameMod*TAN(90-leftCornerAngle/2),	-glassFrameMod,	-1
			else
				poly2_b 5, 1+2+64, gs_penSdl_fg, gs_penSdl_bg,
					(gs_frame_width/2)/SIN(leftCornerAngle/2)+glassFrameMod*TAN(90-leftCornerAngle/2), -glassFrameMod, 0,
					gs_sidelight_width_left-gs_frame_width, -glassFrameMod,	0,
					gs_sidelight_width_left-gs_frame_width, -gs_fthk,	0,
					+gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2),	-gs_fthk,	0,
					(gs_frame_width/2)/SIN(leftCornerAngle/2)+glassFrameMod*TAN(90-leftCornerAngle/2),	-glassFrameMod,	-1
			endif
			if iFrameStyleLeft = FRAME_STYLE_ANGLE_FRAME then
				poly2_b 5, 1+2+64, gs_penSdl_fg, gs_penSdl_bg,
					(gs_frame_width/2)/SIN(leftCornerAngle/2)+glassFrameMod*TAN(90-leftCornerAngle/2), 0, 0,
					gs_sidelight_width_left-gs_frame_width, 0,			0,
					gs_sidelight_width_left-gs_frame_width, -gs_gsb,	0,
					(gs_frame_width/2)/SIN(leftCornerAngle/2)+glassFrameMod*TAN(90-leftCornerAngle/2), -gs_gsb,	0,
					(gs_frame_width/2)/SIN(leftCornerAngle/2)+glassFrameMod*TAN(90-leftCornerAngle/2), 0, -1

			else
				poly2_b 5, 1+2+64, gs_penSdl_fg, gs_penSdl_bg,
					0, 0, 0,
					gs_sidelight_width_left-gs_frame_width, 0,			0,
					gs_sidelight_width_left-gs_frame_width, -gs_gsb,	0,
					gs_gsb*TAN(90-leftCornerAngle/2), -gs_gsb,	0,
					0, 0, -1

			endif
		else
			if iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED_WO_FRAME then
				poly2_b 5, 1+2+64, gs_penSdl_fg, gs_penSdl_bg,
					gs_fthk*TAN(90+leftCornerAngle/2)-(glassFrameMod)*TAN(90+leftCornerAngle/2), -glassFrameMod, 0,
					gs_sidelight_width_left-gs_frame_width, -glassFrameMod,	0,
					gs_sidelight_width_left-gs_frame_width, -gs_fthk,	0,
					0,	-gs_fthk,	0,
					gs_fthk*TAN(90+leftCornerAngle/2)-(glassFrameMod)*TAN(90+leftCornerAngle/2),	-glassFrameMod,	-1
			else
				poly2_b 5, 1+2+64, gs_penSdl_fg, gs_penSdl_bg,
					-(gs_fthk*TAN(90-leftCornerAngle/2)-(gs_frame_width/2)/SIN(180-leftCornerAngle/2)-glassFrameMod*TAN(90-leftCornerAngle/2)), -glassFrameMod, 0,
					gs_sidelight_width_left-gs_frame_width, -glassFrameMod,	0,
					gs_sidelight_width_left-gs_frame_width, -gs_fthk,	0,
					(gs_frame_width/2)/SIN(180-leftCornerAngle/2),	-gs_fthk,	0,
					-(gs_fthk*TAN(90-leftCornerAngle/2)-(gs_frame_width/2)/SIN(180-leftCornerAngle/2)-glassFrameMod*TAN(90-leftCornerAngle/2)),	-glassFrameMod,	-1
			endif

			if iFrameStyleLeft = FRAME_STYLE_ANGLE_FRAME then
				poly2_b 5, 1+2+64, gs_penSdl_fg, gs_penSdl_bg,
					-(gs_fthk*TAN(90-leftCornerAngle/2)-(gs_frame_width/2)/SIN(180-leftCornerAngle/2)-glassFrameMod*TAN(90-leftCornerAngle/2)), 0, 0,
					gs_sidelight_width_left-gs_frame_width, 0,			0,
					gs_sidelight_width_left-gs_frame_width, -gs_gsb,	0,
					-(gs_fthk*TAN(90-leftCornerAngle/2)-(gs_frame_width/2)/SIN(180-leftCornerAngle/2)-glassFrameMod*TAN(90-leftCornerAngle/2)), -gs_gsb,	0,
					-(gs_fthk*TAN(90-leftCornerAngle/2)-(gs_frame_width/2)/SIN(180-leftCornerAngle/2)-glassFrameMod*TAN(90-leftCornerAngle/2)), 0, -1

			else
				poly2_b 5, 1+2+64, gs_penSdl_fg, gs_penSdl_bg,
					gs_fthk*TAN(90+leftCornerAngle/2), 0, 0,
					gs_sidelight_width_left-gs_frame_width, 0,			0,
					gs_sidelight_width_left-gs_frame_width, -gs_gsb,	0,
					gs_fthk*TAN(90+leftCornerAngle/2)-(gs_gsb)*TAN(90+leftCornerAngle/2), -gs_gsb,	0,
					gs_fthk*TAN(90+leftCornerAngle/2), 0, -1
			endif
		endif
	endif
	del 1
endif

if gs_sidelight_right and (lod2D = DET2D_FS_DETAILED | lod2D = DET2D_FS_DETAILED_CHI | lod2D = DET2D_FS_MIDDLE) then
	line_property 0
	pen gs_frame_pen_cont
	fill gs_FillSdl
	drawindex 10

	add2 ac_unit_width/2, 0

	if not(gs_cr) then
		line2 0, 0, -gs_sidelight_width_right, 0
		line2 0, -gs_fthk, -gs_sidelight_width_right, -gs_fthk
	else
		if rightCornerAngle <180 then
			line2 0, 0, -gs_sidelight_width_right, 0
			line2 gs_fthk*TAN(90+rightCornerAngle/2), -gs_fthk, -gs_sidelight_width_right, -gs_fthk
		else
			line2 0, -gs_fthk, -gs_sidelight_width_right, -gs_fthk
			line2 -gs_fthk*TAN(90+rightCornerAngle/2), 0, -gs_sidelight_width_right, 0
		endif
	endif

	if not(gs_cr) | (gs_cr & iFrameStyleRight = FRAME_STYLE_VISIBLE_MULLIONS) then

		poly2_b 5, 1+2+64, gs_penSdl_fg, gs_penSdl_bg,
			-gs_fw_side_right, -glassFrameMod, 0,
			-gs_sidelight_width_right+gs_frame_width, -glassFrameMod,	0,
			-gs_sidelight_width_right+gs_frame_width, -gs_fthk,	0,
			-gs_fw_side_right,						-gs_fthk,	0,
			-gs_fw_side_right,						-glassFrameMod,	-1

		if iFrameStyleRight = FRAME_STYLE_VISIBLE_MULLIONS then
			poly2_b 5, 1+2+64, gs_penSdl_fg, gs_penSdl_bg,
				-gs_fw_side_right, 0, 0,
				-gs_sidelight_width_right+gs_frame_width, 0,			0,
				-gs_sidelight_width_right+gs_frame_width, -gs_gsb,	0,
				-gs_fw_side_right, -gs_gsb,	0,
				-gs_fw_side_right, 0,	-1
		else
			poly2_b 5, 1+2+64, gs_penSdl_fg, gs_penSdl_bg,
				0, 0, 0,
				-gs_sidelight_width_right+gs_frame_width, 0,			0,
				-gs_sidelight_width_right+gs_frame_width, -gs_gsb,	0,
				0, -gs_gsb,	0,
				0, 0, -1
		endif
	else
		if rightCornerAngle <180 then
			if iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED_WO_FRAME then
				poly2_b 5, 1+2+64, gs_penSdl_fg, gs_penSdl_bg,
					-glassFrameMod*TAN(90-rightCornerAngle/2), -glassFrameMod, 0,
					-gs_sidelight_width_right+gs_frame_width, -glassFrameMod,	0,
					-gs_sidelight_width_right+gs_frame_width, -gs_fthk,	0,
					-gs_fthk*TAN(90-rightCornerAngle/2),	-gs_fthk,	0,
					-glassFrameMod*TAN(90-rightCornerAngle/2),	-glassFrameMod,	-1
			else
				poly2_b 5, 1+2+64, gs_penSdl_fg, gs_penSdl_bg,
					-(gs_frame_width/2)/SIN(rightCornerAngle/2)-glassFrameMod*TAN(90-rightCornerAngle/2), -glassFrameMod, 0,
					-gs_sidelight_width_right+gs_frame_width, -glassFrameMod,	0,
					-gs_sidelight_width_right+gs_frame_width, -gs_fthk,	0,
					-gs_fthk*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(rightCornerAngle/2),	-gs_fthk,	0,
					-(gs_frame_width/2)/SIN(rightCornerAngle/2)-glassFrameMod*TAN(90-rightCornerAngle/2),	-glassFrameMod,	-1
			endif
			if iFrameStyleRight = FRAME_STYLE_ANGLE_FRAME then
				poly2_b 5, 1+2+64, gs_penSdl_fg, gs_penSdl_bg,
					-(gs_frame_width/2)/SIN(rightCornerAngle/2)-glassFrameMod*TAN(90-rightCornerAngle/2), 0, 0,
					-gs_sidelight_width_right+gs_frame_width, 0,			0,
					-gs_sidelight_width_right+gs_frame_width, -gs_gsb,	0,
					-(gs_frame_width/2)/SIN(rightCornerAngle/2)-glassFrameMod*TAN(90-rightCornerAngle/2), -gs_gsb,	0,
					-(gs_frame_width/2)/SIN(rightCornerAngle/2)-glassFrameMod*TAN(90-rightCornerAngle/2), 0, -1

			else
				poly2_b 5, 1+2+64, gs_penSdl_fg, gs_penSdl_bg,
					0, 0, 0,
					-gs_sidelight_width_right+gs_frame_width, 0,			0,
					-gs_sidelight_width_right+gs_frame_width, -gs_gsb,	0,
					-gs_gsb*TAN(90-rightCornerAngle/2), -gs_gsb,	0,
					0, 0, -1

			endif
		else
			if iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED_WO_FRAME then
				poly2_b 5, 1+2+64, gs_penSdl_fg, gs_penSdl_bg,
					-gs_fthk*TAN(90+rightCornerAngle/2)+(glassFrameMod)*TAN(90+rightCornerAngle/2), -glassFrameMod, 0,
					-gs_sidelight_width_right+gs_frame_width, -glassFrameMod,	0,
					-gs_sidelight_width_right+gs_frame_width, -gs_fthk,	0,
					0,	-gs_fthk,	0,
					-gs_fthk*TAN(90+rightCornerAngle/2)+(glassFrameMod)*TAN(90+rightCornerAngle/2),	-glassFrameMod,	-1
			else
				poly2_b 5, 1+2+64, gs_penSdl_fg, gs_penSdl_bg,
					(gs_fthk*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(180-rightCornerAngle/2)-glassFrameMod*TAN(90-rightCornerAngle/2)), -glassFrameMod, 0,
					-gs_sidelight_width_right+gs_frame_width, -glassFrameMod,	0,
					-gs_sidelight_width_right+gs_frame_width, -gs_fthk,	0,
					-(gs_frame_width/2)/SIN(180-rightCornerAngle/2),	-gs_fthk,	0,
					(gs_fthk*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(180-rightCornerAngle/2)-glassFrameMod*TAN(90-rightCornerAngle/2)),	-glassFrameMod,	-1
			endif

			if iFrameStyleRight = FRAME_STYLE_ANGLE_FRAME then
				poly2_b 5, 1+2+64, gs_penSdl_fg, gs_penSdl_bg,
					(gs_fthk*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(180-rightCornerAngle/2)-glassFrameMod*TAN(90-rightCornerAngle/2)), 0, 0,
					-gs_sidelight_width_right+gs_frame_width, 0,			0,
					-gs_sidelight_width_right+gs_frame_width, -gs_gsb,	0,
					(gs_fthk*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(180-rightCornerAngle/2)-glassFrameMod*TAN(90-rightCornerAngle/2)), -gs_gsb,	0,
					(gs_fthk*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(180-rightCornerAngle/2)-glassFrameMod*TAN(90-rightCornerAngle/2)), 0, -1

			else
				poly2_b 5, 1+2+64, gs_penSdl_fg, gs_penSdl_bg,
					-gs_fthk*TAN(90+rightCornerAngle/2), 0, 0,
					-gs_sidelight_width_right+gs_frame_width, 0,			0,
					-gs_sidelight_width_right+gs_frame_width, -gs_gsb,	0,
					-gs_fthk*TAN(90+rightCornerAngle/2)+(gs_gsb)*TAN(90+rightCornerAngle/2), -gs_gsb,	0,
					-gs_fthk*TAN(90+rightCornerAngle/2), 0, -1
			endif
		endif
	endif
	del 1
endif
drawindex 30

del nFlipTrans


! =============================================================================
! Leaf
! =============================================================================

! Opening Lines ---------------------------------------------------------------

if gs_bDifferentSashAndSwing2D then
	_openedSashPen		= gs_leaf_pen_2D
	_openedGlassPen		= gs_pen_glass
	gs_openedSashLineType_1	= 1
	gs_openedSashLineType_2	= 1
	gs_openedGlassLineType_1 = 1
	gs_swingLineType_1		= gs_swingLineType
else
	_openedSashPen			= gs_opLinePen
	_openedGlassPen			= gs_opLinePen
	gs_openedSashLineType_1	= gs_swingLineType
	gs_swingLineType_1		= gs_swingLineType
	if gs_bSameLineTypeForLeaves then
		gs_openedSashLineType_2	= gs_swingLineType
	else
		gs_openedSashLineType_2	= gs_swingLineType2
	endif
endif

if gs_bSameLineTypeForLeaves then
	gs_swingLineType_2		= gs_swingLineType
else
	gs_swingLineType_2		= gs_swingLineType2
endif

if iTypeDemolitionFill = RENOVATION_FILL_DEMOLISHED then
	gs_openedSashLineType_1	= gs_Demolition_linetype
	gs_swingLineType_1		= gs_Demolition_linetype
	gs_openedSashLineType_2	= gs_Demolition_linetype
	gs_swingLineType_2		= gs_Demolition_linetype
endif

pen _openedSashPen
fill gs_fillLeaf

lfsug = (ac_unit_width - 2 * gs_frame_width)

z = -gs_fthk * tan(90 - rightCornerAngle/2) - gs_fthk * tan(90)

reverse2dAngleMask = 512
reverse2dAngle2Mask = 0


unID_Opening = 1000
line_property 0

lod2D_temp	= lod2D

if iDoorPanelType <> PANEL_EMPTY then
	! ------------------------------------------------------------------------------------------
	! if you modify transformations up to gosub "LineShapeSimpleLine", copy them to ELSE branch
	! ------------------------------------------------------------------------------------------
	add2 0, -gs_fthk * not(bShowFrameIn2D) * bOpeningDirectionSL

	if iDoorType = 1 then

		_sizeLeafA = ac_unit_width-frameOrSLightWidthRight-frameOrSLightWidthLeft + gs_frame_width * 2 * not(bShowFrameIn2D)

		ADD2 (frameOrSLightWidthLeft - frameOrSLightWidthRight)/2, 0
		mul2 -1, 1

		line_type gs_openedSashLineType_1

		gosub "drawDoorLeaf"

		if gs_iSwingType = LINE_SHAPE_SWING_SIMPLE_LINE | gs_iSwingType = LINE_SHAPE_SWING_LEAF_LINE then
			pen gs_opLinePen
			line_type gs_swingLineType_1
			gosub "LineShapeSimpleLine"
		else
			! -------------- HOTSPOT EDITING
			if gs_full_edit then
				add2 -_sizeLeafA/2, 0
				hotspot2 0, 							0, 	unID_Opening,		gs_open_2D,	6 + reverse2dAngleMask	! 1000
				hotspot2 _sizeLeafA, 					0,	unID_Opening + 1,	gs_open_2D,	4+128			! 1001
				hotspot2 _sizeLeafA*cos(gs_open_2D),	_sizeLeafA*sin(gs_open_2D),	unID_Opening + 2,	gs_open_2D,	5	! 1002
				unID_Opening = unID_Opening + 10
				del 1
			endif

			! Swing Line ------------------------------
			pen gs_opLinePen
			drawindex 20
			line_type gs_swingLineType_1

			if gs_open_2D > 0 then
				if gs_iSwingType = LINE_SHAPE_SWING_CURVED then
					arc2 -_sizeLeafA/2, 0, _sizeLeafA, 0, gs_open_2D
!				else
!					line2	_sizeLeafA/2 , 0,
!							-_sizeLeafA/2 + _sizeLeafA * cos(gs_open_2D) + gs_leaf_thk * sin(gs_open_2D) * (lod2D = DET2D_FS_DETAILED),
!							_sizeLeafA * sin(gs_open_2D) - gs_leaf_thk * cos(gs_open_2D) * (lod2D = DET2D_FS_DETAILED)
				endif
			endif
		endif
		del 2

		line_type gs_symbLineType
	endif


	if iDoorType = 2 then

		if gs_iSwingType = LINE_SHAPE_SWING_SIMPLE_LINE then
			pen gs_opLinePen
			line_type gs_swingLineType_1

			add2 ac_unit_width/2 - frameOrSLightWidthRight - (ac_unit_width - frameOrSLightWidthLeft - frameOrSLightWidthRight)/2, -gs_fthk/2
			gosub "LineShapeSimpleLine"
			del 1

			add2 ac_unit_width/2- frameOrSLightWidthRight-lar, 0
			for i=1 to 2

				lod2D = lod2D_temp

				if i=1 then
					_sizeLeafA = lar + gs_frame_width * not(bShowFrameIn2D)
					line_type gs_openedSashLineType_1
				else
					_sizeLeafA = lal + gs_frame_width * not(bShowFrameIn2D)
					bShowHandleonActualLeaf = 0
					line_type gs_openedSashLineType_2
				endif

				add2 _sizeLeafA/2 + gs_frame_width*gs_mf*(i=2), 0
				mul2 -1, 1

				gosub "drawDoorLeaf"

				del 2
				mul2 -1, 1
			next i
			del 2

			del 1
		else
			add2 ac_unit_width/2- frameOrSLightWidthRight-lar, 0
			for i=1 to 2

				lod2D = lod2D_temp

				if i=1 then
					_sizeLeafA = lar + gs_frame_width * not(bShowFrameIn2D)
				else
					_sizeLeafA = lal + gs_frame_width * not(bShowFrameIn2D)
					bShowHandleonActualLeaf = 0
				endif

				add2 _sizeLeafA/2 + gs_frame_width*gs_mf*(i=2), 0
				mul2 -1, 1

				gosub "drawDoorLeaf"

				if gs_iSwingType = LINE_SHAPE_SWING_LEAF_LINE then
					pen gs_opLinePen
					if i=1 then
						line_type gs_swingLineType_1
					else
						line_type gs_swingLineType_2
					endif

					gosub "LineShapeSimpleLine"
				else
					! -------------- HOTSPOT EDITING
					add2 -_sizeLeafA/2, 0
					if gs_full_edit then
						if i=1 then
							hotspot2 0, 					0, 						unID_Opening,		gs_open_2D,	6 + reverse2dAngleMask		! 1000
							hotspot2 _sizeLeafA, 					0,						unID_Opening + 1,	gs_open_2D,	4+128			! 1001
							hotspot2 _sizeLeafA*cos(gs_open_2D),	_sizeLeafA*sin(gs_open_2D),	unID_Opening + 2,	gs_open_2D,	5	! 1002
							unID_Opening = unID_Opening + 10
						else
							hotspot2 0, 					0, 						unID_Opening,		gs_open_2D,	6 + reverse2dAngle2Mask		! 1010
							hotspot2 _sizeLeafA, 					0,						unID_Opening + 1,	gs_open_2D,	4+128			! 1011
							hotspot2 _sizeLeafA*cos(gs_open_2D),	_sizeLeafA*sin(gs_open_2D),	unID_Opening + 2,	gs_open_2D,	5	! 1012
						endif
					endif
					del 1

					! Swing Line ------------------------------
					pen gs_opLinePen
					drawindex 20
					if i=1 then
						line_type gs_swingLineType_1
					else
						line_type gs_swingLineType_2
					endif

					if abs(gs_open_2D) > EPS & abs(gs_open_2D - 360) > EPS then
						if gs_iSwingType = LINE_SHAPE_SWING_CURVED then
							arc2 -_sizeLeafA/2, 0, _sizeLeafA, 0, gs_open_2D
!						else
!							line2 _sizeLeafA/2 , 0,
!							-_sizeLeafA/2 + _sizeLeafA * cos(gs_open_2D) + gs_leaf_thk * sin(gs_open_2D) * (lod2D = DET2D_FS_DETAILED),
!							 _sizeLeafA * sin(gs_open_2D) - gs_leaf_thk * cos(gs_open_2D) * (lod2D = DET2D_FS_DETAILED)
						endif
					endif
				endif

				del 2
				mul2 -1, 1
			next i
			del 2

			del 1
		endif
	endif
	del 1
else	! iDoorPanelType = PANEL_EMPTY
	!-----------------------------------
	! transformations copied from above
	!-----------------------------------
	if gs_iSwingType = LINE_SHAPE_SWING_SIMPLE_LINE then
		add2 0, -gs_fthk * not(bShowFrameIn2D) * bOpeningDirectionSL
	
		if iDoorType = 1 then
			add2 (frameOrSLightWidthLeft - frameOrSLightWidthRight) / 2, 0
			mul2 -1, 1
		endif
		if iDoorType = 2 then
			add2 ac_unit_width/2 - frameOrSLightWidthRight - (ac_unit_width - frameOrSLightWidthLeft - frameOrSLightWidthRight) / 2, -gs_fthk / 2
			mul2 1, 1
		endif
	
		pen gs_opLinePen
		line_type gs_swingLineType_1
		gosub "LineShapeSimpleLine"

		del 3
	endif
endif

! =============================================================================
! Door Stop
! =============================================================================

if bDoorStopDisplay and bEnableDoorStop then
	line_type gs_symbLineType
	pen gs_frame_pen_cont
	fill gs_fillFr

	if gs_ds then
		poly2_b 4, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
			-ac_unit_width/2+frameOrSLightWidthLeft, -gs_leaf_thk, 1+32,
			-ac_unit_width/2+frameOrSLightWidthLeft+gs_ds_w, -gs_leaf_thk, 1+32,
			-ac_unit_width/2+frameOrSLightWidthLeft+gs_ds_w, -gs_leaf_thk-gs_ds_thk, 1+32,
			-ac_unit_width/2+frameOrSLightWidthLeft, -gs_leaf_thk-gs_ds_thk, 0

		poly2_b 4, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
			ac_unit_width/2-frameOrSLightWidthRight, -gs_leaf_thk, 1+32,
			ac_unit_width/2-frameOrSLightWidthRight-gs_ds_w, -gs_leaf_thk, 1+32,
			ac_unit_width/2-frameOrSLightWidthRight-gs_ds_w, -gs_leaf_thk-gs_ds_thk, 1+32,
			ac_unit_width/2-frameOrSLightWidthRight, -gs_leaf_thk-gs_ds_thk, 0
	endif
endif

! =============================================================================
! Middle frame
! =============================================================================

if gs_mf then
	fill gs_fillFr
	poly2_b 8, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
		ac_unit_width/2-frameOrSLightWidthRight-lar, 0, 1+32,
		ac_unit_width/2-frameOrSLightWidthRight-lar, -min(gs_leaf_thk, gs_fthk), 1-(bEnableDoorStop*(lod2D = DET2D_FS_DETAILED | lod2D = DET2D_FS_DETAILED_CHI))+32,
		ac_unit_width/2-frameOrSLightWidthRight-lar, -min(gs_leaf_thk, gs_fthk)-bEnableDoorStop * gs_ds_thk, 1+32,
		ac_unit_width/2-frameOrSLightWidthRight-lar, -gs_fthk, 1+32,
		-ac_unit_width/2+frameOrSLightWidthLeft+lal, -gs_fthk, 1+32,
		-ac_unit_width/2+frameOrSLightWidthLeft+lal, -min(gs_leaf_thk, gs_fthk)-bEnableDoorStop * gs_ds_thk, 1-(bEnableDoorStop*(lod2D = DET2D_FS_DETAILED | lod2D = DET2D_FS_DETAILED_CHI))+32,
		-ac_unit_width/2+frameOrSLightWidthLeft+lal, -min(gs_leaf_thk, gs_fthk), 1+32,
		-ac_unit_width/2+frameOrSLightWidthLeft+lal, 0, 1+32

	if gs_ds & bEnableDoorStop then
		add2 ac_unit_width/2-frameOrSLightWidthRight-lar-gs_frame_width/2, 0
		poly2_b 4, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
			-gs_frame_width/2, -gs_leaf_thk, 1+32,
			-gs_frame_width/2-gs_ds_w, -gs_leaf_thk, 1+32,
			-gs_frame_width/2-gs_ds_w, -gs_leaf_thk-gs_ds_thk, 1+32,
			-gs_frame_width/2, -gs_leaf_thk-gs_ds_thk, 0
		del 1
		add2 -ac_unit_width/2+frameOrSLightWidthLeft+lal+gs_frame_width/2, 0
		poly2_b 4, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
			gs_frame_width/2, -gs_leaf_thk, 1+32,
			gs_frame_width/2+gs_ds_w, -gs_leaf_thk, 1+32,
			gs_frame_width/2+gs_ds_w, -gs_leaf_thk-gs_ds_thk, 1+32,
			gs_frame_width/2, -gs_leaf_thk-gs_ds_thk, 0
		del 1
	endif
endif


END

"LineShapeSimpleLine":
	drawindex 20

	hotspot2 0, -0.50, unID_Opening
	hotspot2 0, 0.50, unID_Opening + 1
	line2 0, -0.50, 0, 0.50
	line_type gs_symbLineType
return


"drawDoorLeaf":

	! -------------- Door Leaf
	add2 -_sizeLeafA/2, 0
	rot2 gs_open_2D
	add2 _sizeLeafA/2, 0

	if bOpeningSymbDisplay then
		if gs_iSwingType <> LINE_SHAPE_SWING_SIMPLE_LINE & gs_iSwingType <> LINE_SHAPE_SWING_LEAF_LINE then
			pen gs_opLinePen
			line2	-_sizeLeafA/2, 0,
					_sizeLeafA/2, 0
		endif

		del 2
		add2 _sizeLeafA/2, 0

		if lod2D_temp = DET2D_FS_MIDDLE then lod2D = DET2D_FS_DETAILED
		gosub "Leaf_Panel"

		del 1
	else
		if gs_iSwingType <> LINE_SHAPE_SWING_SIMPLE_LINE & gs_iSwingType <> LINE_SHAPE_SWING_LEAF_LINE then
			gosub "Leaf_Panel"
		endif
		del 2
	endif

	del 1

return


"Leaf_Panel":
	line_type gs_symbLineType
	call "DoorLeafPanels" parameters all A				= _sizeLeafA,
										 B				= gs_leaf_thk,
							bStorefrontDoor				= 1,
							bStorefrontClassic			= 1,
							lod2D						= lod2D,
							bSimpleLeafin50				= bSimpleLeafin50,
							iSymbolGlassType			= iSymbolGlassType,
							iDoorPanelType				= iDoorPanelType,
							gs_glass_thk				= gs_glass_thk,
							gs_fw_side					= leafFrameWidth,
							gs_glass_pen_cont			= _openedGlassPen,
							gs_leaf_pen_2D				= _openedSashPen,
							gs_fillLeaf					= gs_fillLeaf,
							gs_penLeaf_fg				= gs_penLeaf_fg,
							gs_penLeaf_bg 				= gs_penLeaf_bg,
							gs_FillSdl					= gs_FillSdl,
							gs_penSdl_fg				= gs_penSdl_fg,
							gs_penSdl_bg 				= gs_penSdl_bg,
							gs_gsect					= gs_gsect,
							gs_penGlass_fg				= gs_penGlass_fg,
							gs_penGlass_bg				= gs_penGlass_bg

RETURN

"leftGlass2D":
	ADD2 -ac_unit_width/2, 0
	if iFrameStyleLeft = FRAME_STYLE_VISIBLE_MULLIONS OR iFrameStyleLeft = FRAME_STYLE_ANGLE_FRAME then
		x1 = glaa
		x3 = glaa
	else
		x1 = glaa_dt*(iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED OR iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED_WO_FRAME)
		if iEndFrameLeft = ENDFRAME_CORNER then
			x3 = glaa_inside*(iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED OR iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED_WO_FRAME)
		else
			x3 = 0
		endif
	endif
	y1 = 0
	x2 = leftPanelWidth
	y2 = 0
	y3 = -gs_glass_thk
	x4 = leftPanelWidth
	y4 = -gs_glass_thk


	if bDetailedGlass then
		pen gs_pen_glass
		line_property 2

		poly2_b 5, 1+2+32, gs_penGlass_fg, gs_penGlass_bg,
			x1,y1,0,
			x2,y2,0,
			x4,y4,0,
			x3,y3,0,
			x1,y1,-1

		line2 x4, y4, x3, y3
	else
		pen gs_leaf_pen_2D
		line_property 0
	endif

	if lod2D = DET2D_FS_DETAILED | lod2D = DET2D_FS_DETAILED_CHI then line_property 2
	line2 x1, y1, x2, y2
	line_property 0
	DEL 1
return


"rightGlass2D":
	ADD2 ac_unit_width/2-rightPanelWidth, 0
	if iFrameStyleRight = FRAME_STYLE_VISIBLE_MULLIONS OR iFrameStyleRight = FRAME_STYLE_ANGLE_FRAME then
		x1 = rightPanelWidth+glab
		x3 = rightPanelWidth+glab
	else
		x1 = rightPanelWidth+glab_dt*(iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED OR iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED_WO_FRAME)
		if iEndFrameLeft = ENDFRAME_CORNER then
			x3 = rightPanelWidth+glab_inside*(iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED OR iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED_WO_FRAME)
		else
			x3 = rightPanelWidth
		endif
	endif
	y1 = 0
	x2 = 0
	y2 = 0
	y3 = -gs_glass_thk
	x4 = 0
	y4 = -gs_glass_thk


	if bDetailedGlass then
		pen gs_pen_glass
		line_property 2

		poly2_b 5, 1+2+32, gs_penGlass_fg, gs_penGlass_bg,
			x1,y1,0,
			x2,y2,0,
			x4,y4,0,
			x3,y3,0,
			x1,y1,-1

		line2 x4, y4, x3, y3
	else
		pen gs_leaf_pen_2D
	endif

	if lod2D = DET2D_FS_DETAILED | lod2D = DET2D_FS_DETAILED_CHI then line_property 2

	line2 x1, y1, x2, y2
	line_property 0

	DEL 1
return
]]>
</Script_2D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_1D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
! const values for parameter: iTypeDemolitionFill
RENOVATION_FILL_EXIST		= 1
RENOVATION_FILL_DEMOLISHED	= 2
RENOVATION_FILL_NEW			= 3
RENOVATION_FILL_NEW_FULL	= 4


! const values for parameter: iCustomCCEditWallSide
EDITED_WALL_FACE_OUTSIDE = 1
EDITED_WALL_FACE_INSIDE  = 2


! const values for parameter: iCustomCCEditJambSide
EDITED_JAMB_SIDE_BOTH  = 1
EDITED_JAMB_SIDE_LEFT  = 2
EDITED_JAMB_SIDE_RIGHT = 3


! const values for parameter: iCustomCCThicknessType
THICKNESS_TYPE_ORIGINAL = 1
THICKNESS_TYPE_CUSTOM   = 2


! const values for parameter: iCustomCCEditSkin
EDITED_SKIN_1 = 1
EDITED_SKIN_2 = 2
EDITED_SKIN_3 = 3
EDITED_SKIN_4 = 4


! const values for parameter: iCustomCCOrientation
ORIENTATION_ORIGINAL  = 1
ORIENTATION_TURNED_IN = 2


! const values for parameter: iDWDet3D
DETLEVEL_DW3D_SCALESENS    = 1
DETLEVEL_DW3D_DETAILED     = 2
DETLEVEL_DW3D_SIMPLE       = 3
DETLEVEL_DW3D_OFF          = 4
DETLEVEL_DW3D_CHI_SIMPLE   = 5
DETLEVEL_DW3D_CHI_DETAILED = 6


! const values for parameter: iDWDet2D
DETLEVEL_DW2D_MVO     = 1
DETLEVEL_DW2D_SCSENS  = 2
DETLEVEL_DW2D_50      = 3
DETLEVEL_DW2D_100     = 4
DETLEVEL_DW2D_200     = 5
DETLEVEL_DW2D_OFF     = 6
DETLEVEL_DW2D_CHISMPL = 7
DETLEVEL_DW2D_CHIDET  = 8
DETLEVEL_DW2D_20      = 9
DETLEVEL_DW2D_500     = 10

! Contact person: <SzL, NJ>

EPS = 0.0001

bDisabeMirroring = 0

! =============================================================================
! Localization
! =============================================================================
dim stDoorTypes[75]
	stDoorTypes[ 1]	= `Стиль 1`
	stDoorTypes[ 2]	= ``
	stDoorTypes[ 3]	= ``
	stDoorTypes[ 4]	= ``
	stDoorTypes[ 5]	= ``
	stDoorTypes[ 6]	= ``
	stDoorTypes[ 7]	= ``
	stDoorTypes[ 8]	= ``
	stDoorTypes[ 9]	= ``
	stDoorTypes[10] = ``
	stDoorTypes[11] = ``
	stDoorTypes[12] = ``
	stDoorTypes[13] = ``
	stDoorTypes[14] = ``
	stDoorTypes[15] = ``
	stDoorTypes[16] = ``
	stDoorTypes[17] = ``
	stDoorTypes[18] = ``
	stDoorTypes[19] = ``
	stDoorTypes[20] = ``
	stDoorTypes[21] = ``
	stDoorTypes[22] = ``
	stDoorTypes[23] = ``
	stDoorTypes[24] = ``
	stDoorTypes[25] = ``
	stDoorTypes[26] = ``
	stDoorTypes[27] = ``
	stDoorTypes[28] = ``
	stDoorTypes[29] = ``
	stDoorTypes[30] = ``
	stDoorTypes[31] = ``
	stDoorTypes[32] = ``
	stDoorTypes[33] = ``
	stDoorTypes[34] = ``
	stDoorTypes[35] = `Стиль 2`
	stDoorTypes[36] = `Стиль 3`
	stDoorTypes[37] = `Стиль 4`
	stDoorTypes[38] = `Стиль 5`
	stDoorTypes[39] = `Стиль 7`
	stDoorTypes[40] = `Стиль 8`
	stDoorTypes[41] = ``
	stDoorTypes[42] = ``
	stDoorTypes[43]	= ``
	stDoorTypes[44]	= ``
	stDoorTypes[45] = ``
	stDoorTypes[46] = ``
	stDoorTypes[47]	= ``
	stDoorTypes[48] = ``
	stDoorTypes[49] = `Специальное Полотно Двери`
	stDoorTypes[50] = `Пусто`
	stDoorTypes[51] = ``
	stDoorTypes[52] = ``
	stDoorTypes[53]	= ``
	stDoorTypes[54]	= ``
	stDoorTypes[55] = ``
	stDoorTypes[56] = ``
	stDoorTypes[57] = ``
	stDoorTypes[58] = ``
	stDoorTypes[59] = ``
	stDoorTypes[60] = ``
	stDoorTypes[61] = ``
	stDoorTypes[62] = ``
	stDoorTypes[63]	= ``
	stDoorTypes[64]	= ``
	stDoorTypes[65] = ``
	stDoorTypes[66] = ``
	stDoorTypes[67] = ``
	stDoorTypes[68] = ``
	stDoorTypes[69] = ``
	stDoorTypes[70] = ``
	stDoorTypes[71] = ``
	stDoorTypes[72] = ``
	stDoorTypes[73]	= ``
	stDoorTypes[74]	= ``
	stDoorTypes[75] = `Стиль 6`

dim stDetail[6]
	stDetail[1] = `Зависит от Масштаба`
	stDetail[2] = `Детальный`
	stDetail[3] = `Простой`
	stDetail[4] = `Откл.`
	stDetail[5] = `Китайский Простой`
	stDetail[6] = `Китайский Детальный`

dim stFrameElemJoin[2]
	stFrameElemJoin[1] = `Угловое Соединение`
	stFrameElemJoin[2] = `Соединение Встык`

dim stFrameStyle[4]
	stFrameStyle[1] = `Видимые Профили`
	stFrameStyle[2] = `Застекленная`
	stFrameStyle[3] = `Застекленная без Коробки`
	stFrameStyle[4] = `Угловая Коробка`

dim stDivisionMethod[2]
	stDivisionMethod[1] = `Количество Раскладки`
	stDivisionMethod[2] = `Шаг Раскладки`

dim	stEndFrameProfile[3]
	stEndFrameProfile[1] = `Обычный`
	stEndFrameProfile[2] = `Соединения`
	stEndFrameProfile[3] = `Угол`

dim stOpeningDir[2]
	stOpeningDir[1] = `Со Стороны Четверти`
	stOpeningDir[2] = `С Противоположной Стороны`

! gs_opening_dir_sl_m:
OPENING_DIR_DEFAULT_OUTSIDE	= 1
OPENING_DIR_FLIPPED_INSIDE	= 2

! Frame Element Joinery
MITERED_JOINT	= 1
BUTT_JOINT		= 2

! iStorefrontType
SFTYPE_DOOR_ONLY	= 1
SFTYPE_DOOR_TRANSOM	= 2
SFTYPE_DOOR_TRSL	= 3


! iFrameStyleLeft, iFrameStyleRight:
FRAME_STYLE_VISIBLE_MULLIONS		= 1
FRAME_STYLE_BUTT_GLAZED				= 2
FRAME_STYLE_BUTT_GLAZED_WO_FRAME	= 3
FRAME_STYLE_ANGLE_FRAME				= 4

! gs_leaf_optype_m:
LEAF_1L_SIDE_HUNG			= 1
LEAF_1L_SIDE_HUNG_M			= 2
LEAF_1L_DOUBLE_ACTING		= 3
LEAF_1L_DOUBLE_ACTING_M		= 4
LEAF_2L_SIDE_HUNG			= 5
LEAF_2L_DOUBLE_ACTING		= 6
LEAF_2L_DOUBLE_EGRESS		= 7
LEAF_2L_DOUBLE_EGRESS_M		= 8
LEAF_1L_PIVOT				= 9
LEAF_1L_PIVOT_M				= 10
LEAF_2L_1SLIDING			= 11
LEAF_2L_1SLIDING_M			= 12
LEAF_2L_2SLIDING			= 13
LEAF_2L_2SLIDING_M			= 14
LEAF_3L_2SLIDING			= 15
LEAF_3L_2SLIDING_M			= 16
LEAF_4L_2SLIDING			= 17
LEAF_4L_3SLIDING			= 18
LEAF_4L_3SLIDING_M			= 19
LEAF_4L_4SLIDING			= 20
LEAF_4L_4SLIDING_M			= 21
LEAF_1L_EXTERNAL_SLIDING	= 22
LEAF_1L_EXTERNAL_SLIDING_M	= 23
LEAF_2L_EXTERNAL_SLIDING	= 24
LEAF_1L_POCKET				= 25
LEAF_1L_POCKET_M			= 26
LEAF_2L_POCKET				= 27
LEAF_1L_MULTIPANEL			= 28
LEAF_1L_MULTIPANEL_M		= 29
LEAF_2L_MULTIPANEL			= 30
LEAF_REVOLVING				= 31
LEAF_3L_2SLIDING_CENTER		= 32
LEAF_GAR_1L_UP_AND_OVER		= 100
LEAF_GAR_1L_UP_SLIDING		= 101
LEAF_GAR_1L_SECTIONAL		= 102
LEAF_GAR_2L_SIDE_HUNG		= 103
LEAF_GAR_2L_ROLLSIDE		= 104
LEAF_GAR_1L_ROLLUP			= 105

DET2D_FS_OFF				= 0
DET2D_FS_SCALESENS			= -1
DET2D_FS_SIMPLE				= 11		! Simple --> INT 200
DET2D_FS_MIDDLE				= 21		! Middle --> INT 100
DET2D_FS_DETAILED			= 30		! Detailed --> INT 50
DET2D_FS_SIMPLE_CHI			= 51		! Chinese Simple
DET2D_FS_DETAILED_CHI		= 52		! Chinese Detailed

! iLoD2D
SYMBD_OFF							= 0
SYMBD_SCALESENS						= 1
SYMBD_S_1LINE						= 11
SYMBD_S_2LINE						= 12
SYMBD_S_1LINE_FRAME					= 13
SYMBD_S_1LINECL						= 14
SYMBD_S_5							= 15
SYMBD_S_6							= 16
SYMBD_S_7							= 17
SYMBD_S_8							= 18
SYMBD_S_9							= 19
SYMBD_M_1LINELEAF_2LINE				= 21
SYMBD_M_2LINELEAFCL_GLASS			= 22
SYMBD_M_1LINELEAF_1LINE				= 23
SYMBD_M_4							= 24
SYMBD_M_5							= 25
SYMBD_M_6							= 26
SYMBD_M_7							= 27
SYMBD_M_8							= 28
SYMBD_M_9							= 29
SYMBD_D_2LINELEAFOP_GLASS			= 31
SYMBD_D_2LINELEAFCL_REBATEONGLASS	= 32
SYMBD_D_2LINELEAFOP_2LINE			= 33
SYMBD_D_2LINELEAFOP_SASH			= 34
SYMBD_D_1LINELEAF_GLASS				= 35
SYMBD_D_2LINELEAFCL_SASHWLINE		= 36
SYMBD_D_1LINELEAF_SASHWLINE			= 37
SYMBD_D_2LEAFOPGLASS_GLASS			= 38
SYMBD_D_9							= 39

SYMBGLASS_NOGLASS					= 0
SYMBGLASS_SIMPLEGLASS				= 1
SYMBGLASS_DOUBLEGLASS				= 2

! gs_iSwingType:
LINE_SHAPE_SWING_NONE			= 0
LINE_SHAPE_SWING_CURVED			= 1
LINE_SHAPE_SWING_STRAIGHT		= 2
LINE_SHAPE_SWING_SIMPLE_LINE	= 3
LINE_SHAPE_SWING_LEAF_LINE		= 4

ENDFRAME_NORMAL	= 1
ENDFRAME_JOINT	= 2
ENDFRAME_CORNER	= 3

DIVISION_NUM = 1
DIVISION_WIDTH = 2

! iDoorPanelType
PANEL_STYLE1 = 1
PANEL_STYLE2 = 35
PANEL_STYLE3 = 36
PANEL_STYLE4 = 37
PANEL_STYLE5 = 38
PANEL_STYLE6 = 75
PANEL_STYLE7 = 39
PANEL_STYLE8 = 40
PANEL_CUSTOM = 49
PANEL_EMPTY = 0

! ifc_optype:
DOOR_OP_NOT_DEFINED						= 0
DOOR_OP_SINGLE_DOOR_SINGLE_SWING		= 1
DOOR_OP_DOUBLE_DOOR_SINGLE_SWING		= 2
DOOR_OP_SINGLE_DOOR_DOUBLE_SWING		= 3
DOOR_OP_DOUBLE_DOOR_DOUBLE_SWING		= 4
DOOR_OP_DOUBLE_DOOR_SINGLE_SWING_OPP	= 5
DOOR_OP_SINGLE_DOOR_SLIDING				= 6
DOOR_OP_DOUBLE_DOOR_SLIDING				= 7
DOOR_OP_SINGLE_DOOR_FOLDING				= 8
DOOR_OP_DOUBLE_DOOR_FOLDING				= 9
DOOR_OP_REVOLVING						= 10
DOOR_OP_ROLLING_UP						= 11
DOOR_OP_USER_DEFINED					= 12

! iVentilationProfileType
VENTPROFILE_OVER_FRAME		= 2
VENTPROFILE_OVER_GLAZING	= 3

! =============================================================================
! Main Definitions
! =============================================================================

if gs_wthk then
	gs_fthk = WALL_THICKNESS
	parameters gs_fthk = gs_fthk
	hideparameter "gs_frame_thk"
	lock "gs_frame_thk"
else
	gs_fthk = gs_frame_thk
	parameters gs_fthk = gs_fthk
endif

!! ANGLE MAX !!

aps = (ac_unit_width-(gs_ver_gnum+1)*gs_grid_w)/2
yps = ((-2*gs_fthk*(gs_frame_width/2)**2)-SQR(4*(gs_frame_width/2)**4*gs_fthk**2-4*((gs_frame_width/2)**2-aps**2)*(gs_frame_width/2)**2*(aps**2+gs_fthk**2)))/(2*((gs_frame_width/2)**2-aps**2))
if abs(gs_frame_width)>EPS then
	sps = 90-ASN((gs_frame_width/2)/yps)
endif

if leftCornerAngle/2<sps then
	leftCornerAngle = sps*2
	parameters leftCornerAngle = leftCornerAngle
endif
if rightCornerAngle/2<sps then
	rightCornerAngle = sps*2
	parameters rightCornerAngle = rightCornerAngle
endif
if leftCornerAngle/2>180-sps then
	leftCornerAngle = 360-sps*2
	parameters leftCornerAngle = leftCornerAngle
endif
if rightCornerAngle/2>180-sps then
	rightCornerAngle = 360-sps*2
	parameters rightCornerAngle = rightCornerAngle
endif


! =============================================================================
! Ventilation Profile Type Enable
! =============================================================================

bEnableVentilationProfile = 1
gs_VentilationProfileTypeEnable = 1


! ==============================================================================
! Other Function Control
! ==============================================================================

bEnableParapetInset			= 0
bEnableMasonryArch			= 0
bEnableFaschen				= 0
bEnableSill					= 0
bEnableBoard				= 0
bEnableThreshold			= 0
bEnableCasing				= 0
bEnableShutter				= 0
bEnableCustomCornerLeft		= 0
bEnableCustomCornerRight	= 0


! =============================================================================
! Frame End Profile Settings
! =============================================================================

if iEndFrameLeft = ENDFRAME_JOINT then
	gs_stack_left = 1
	gs_cl = 0
else
	if iEndFrameLeft = ENDFRAME_CORNER then
		gs_stack_left = 0
		gs_cl = 1
	else
		gs_stack_left = 0
		gs_cl = 0
	endif
endif
parameters	gs_stack_left	= gs_stack_left

if iEndFrameRight = ENDFRAME_JOINT then
	gs_stack_right = 1
	gs_cr = 0
else
	if iEndFrameRight = ENDFRAME_CORNER then
		gs_stack_right = 0
		gs_cr = 1
	else
		gs_stack_right = 0
		gs_cr = 0
	endif
endif
parameters	gs_stack_right	= gs_stack_right

if gs_stack_left then
	gs_fw_side_left = gs_frame_width/2
else
	if gs_cl then
		if leftCornerAngle <180 then
			gs_fw_side_left = gs_frame_width+gs_fthk*TAN(90-leftCornerAngle/2)
		endif
		if leftCornerAngle >180 then
			gs_fw_side_left = gs_frame_width-gs_fthk*TAN(90-leftCornerAngle/2)
		endif
	else
		gs_fw_side_left = gs_frame_width
	endif
endif
parameters gs_fw_side_left = gs_fw_side_left

if gs_stack_right then
	gs_fw_side_right = gs_frame_width/2
else
	if gs_cr then
		if rightCornerAngle <180 then
			gs_fw_side_right = gs_frame_width+gs_fthk*TAN(90-rightCornerAngle/2)
		endif
		if rightCornerAngle >180 then
			gs_fw_side_right = gs_frame_width-gs_fthk*TAN(90-rightCornerAngle/2)
		endif
	else
		gs_fw_side_right = gs_frame_width
	endif
endif
parameters gs_fw_side_right = gs_fw_side_right

if gs_stack_bottom then
	gs_fw_lower = bottomRailWidth/2
else
	gs_fw_lower = bottomRailWidth
endif
parameters gs_fw_lower = gs_fw_lower

if gs_stack_top then
	gs_fw_upper = gs_frame_width/2
else
	gs_fw_upper = gs_frame_width
endif
parameters gs_fw_upper = gs_fw_upper

! =============================================================================
! Door Panels
! =============================================================================
if (((gs_fthk-gs_leaf_thk) > EPS) & gs_ds & (gs_ds_thk > EPS) & (gs_ds_w > EPS)) then
	bEnableDoorStop = 1
else
	bEnableDoorStop = 0
endif

bDoorEmptyPanel = (iDoorPanelType = 0)

lw = ac_leaf_width
lar= lw * gs_rttl / 100 - gs_frame_width/2 * (gs_mf = 1)			! Right panel width
lal= lw * (100 - gs_rttl) / 100 - gs_frame_width/2 * (gs_mf = 1)	! Left panel width

! =============================================================================
! Sidelight and Transom Control
! =============================================================================

if iStorefrontType = SFTYPE_DOOR_ONLY then
	gs_door_transom = 0
endif
if iStorefrontType = SFTYPE_DOOR_ONLY or iStorefrontType = SFTYPE_DOOR_TRANSOM then
	gs_sidelight_left = 0
	gs_sidelight_right = 0
endif

bEnableMiddleRail = 1
if iStorefrontType <> SFTYPE_DOOR_TRSL and iDoorPanelType <> PANEL_STYLE7 then
	bEnableMiddleRail = 0
	bMiddleRail = 0
endif
if iStorefrontType = SFTYPE_DOOR_TRSL and not(gs_sidelight_right or gs_sidelight_left) and iDoorPanelType <> PANEL_STYLE7 then
	bEnableMiddleRail = 0
	bMiddleRail = 0
endif

frameOrSLightWidthRight	= gs_sidelight_width_right * gs_sidelight_right + gs_fw_side_right * not(gs_sidelight_right)
frameOrSLightWidthLeft	= gs_sidelight_width_left  * gs_sidelight_left  + gs_fw_side_left  * not(gs_sidelight_left)
frameOrTransomHeight	= gs_transom_height * gs_door_transom + gs_fw_upper * not(gs_door_transom)

if gs_wallhole_nominal | gs_reveal_nominal then
	unitWidth = A - gs_tolerance_left - gs_tolerance_right
endif
if gs_unit_nominal then
	unitWidth = A
endif
if gs_egress_nominal then
	unitWidth = A + frameOrSLightWidthRight + frameOrSLightWidthLeft + 2 * bEnableDoorStop * gs_ds_w
endif
if gs_leaf_nominal then
	unitWidth = A + frameOrSLightWidthRight + frameOrSLightWidthLeft
endif

if gs_sidelight_left then
	minSidelightWidthLeft = gs_fw_side_left + gs_frame_width + EPS
	maxSidelightWidthLeft = max(minSidelightWidthLeft, unitWidth - frameOrSLightWidthRight - (gs_ver_gnum * 2 + 1) * gs_grid_w - 10")
	if gs_sidelight_width_left < minSidelightWidthLeft then
		gs_sidelight_width_left = minSidelightWidthLeft
		parameters gs_sidelight_width_left = minSidelightWidthLeft
	endif
	if gs_sidelight_width_left > maxSidelightWidthLeft then
		gs_sidelight_width_left = maxSidelightWidthLeft
		parameters gs_sidelight_width_left = maxSidelightWidthLeft
	endif
else
	minSidelightWidthLeft	= frameOrSLightWidthLeft

	hideparameter "gs_sidelight_width_left"
	lock "gs_sidelight_width_left"
endif

if gs_sidelight_right then
	minSidelightWidthRight = gs_fw_side_right + gs_frame_width + EPS
	maxSidelightWidthRight = max(minSidelightWidthRight, unitWidth - frameOrSLightWidthLeft - (gs_ver_gnum * 2 + 1) * gs_grid_w - 10")
	if gs_sidelight_width_right < minSidelightWidthRight then
		gs_sidelight_width_right = minSidelightWidthRight
		parameters gs_sidelight_width_right = minSidelightWidthRight
	endif
	if gs_sidelight_width_right > maxSidelightWidthRight then
		gs_sidelight_width_right = maxSidelightWidthRight
		parameters gs_sidelight_width_right = maxSidelightWidthRight
	endif
else
	minSidelightWidthRight	= frameOrSLightWidthRight

	hideparameter "gs_sidelight_width_right"
	lock "gs_sidelight_width_right"
endif

if gs_door_transom then
	minTransomHeight = gs_fw_upper + (gs_hor_gtp*2 + 1) * gs_grid_w
	maxTransomHeight = ac_unit_height - midRailElevation - midRailWidth/2 - (gs_hor_gnumtr*2 + 1) * gs_grid_w
	if gs_transom_height < minTransomHeight then
		gs_transom_height = minTransomHeight
		parameters gs_transom_height = gs_transom_height
	endif
	if gs_transom_height > maxTransomHeight then
		gs_transom_height = maxTransomHeight
		parameters gs_transom_height = gs_transom_height
	endif
else
	minTransomHeight = frameOrTransomHeight

	hideparameter "gs_transom_height"
	lock "gs_transom_height"
endif


leftPanelWidth	= (gs_sidelight_width_left - gs_frame_width)  * gs_sidelight_left
rightPanelWidth	= (gs_sidelight_width_right - gs_frame_width) * gs_sidelight_right
topPanelHeight	= (gs_transom_height - gs_frame_width) * gs_door_transom

bDisabeMirroring	= 0
iWindowShape		= 0

gs_fillFr	= gs_bFills * gs_fillFr
gs_fillLeaf	= gs_bFills * gs_fillLeaf

bOpeningDirectionSL = (WIDO_REVEAL_SIDE exor gs_opening_dir_sl_m = OPENING_DIR_FLIPPED_INSIDE)

!===============================================================================

!! END OF ANGLE MAX !!

if not(bMiddleRail) then
	fw_tra		= midRailWidth
	midRailWidth	= bottomRailWidth * 2
else
	fw_tra = 0
endif

middlePanelHeight = ac_unit_height - (midRailElevation)*bMiddleRail - midRailWidth/2 - gs_frame_width * gs_door_transom - gs_fw_upper * not(gs_door_transom)

if iDivisionMethod = DIVISION_WIDTH then
	if abs(divWidthHor) < EPS then gs_ver_gnum=0
	if divWidthHor>0 then
		ha=ac_unit_width-frameOrSLightWidthRight-frameOrSLightWidthLeft
		if INT(ha/divWidthHor)=0 then PARAMETERS gs_ver_gnum=0
		if INT(ha/divWidthHor)>0 then
			if (ha/INT(ha/divWidthHor)-divWidthHor)<=(divWidthHor-ha/(INT(ha/divWidthHor)+1)) then
				PARAMETERS gs_ver_gnum=INT(ha/divWidthHor)-1
			endif
			if (ha/INT(ha/divWidthHor)-divWidthHor)>(divWidthHor-ha/(INT(ha/divWidthHor)+1)) then
				PARAMETERS gs_ver_gnum=INT(ha/divWidthHor)
			endif
		endif
	endif

	if abs(divWidthVertBottom) < EPS then gs_hor_gnum=0
	if divWidthVertBottom>0 AND bMiddleRail then
		ba=(midRailElevation)-midRailWidth/2-gs_fw_lower
		if INT(ba/divWidthVertBottom)=0 then PARAMETERS gs_hor_gnum=0
		if INT(ba/divWidthVertBottom)>0 then
			if (ba/INT(ba/divWidthVertBottom)-divWidthVertBottom)<=(ba/(INT(ba/divWidthVertBottom)+1)-divWidthVertBottom) then
				PARAMETERS gs_hor_gnum=INT(ba/divWidthVertBottom)-1
			endif
			if (ba/INT(ba/divWidthVertBottom)-divWidthVertBottom)>(ba/(INT(ba/divWidthVertBottom)+1)-divWidthVertBottom) then
				PARAMETERS gs_hor_gnum=INT(ba/divWidthVertBottom)
			endif
		endif
	endif

	if abs(divWidthVertMiddle) < EPS then gs_hor_gnumtr=0
	if divWidthVertMiddle>0 then
		ma=middlePanelHeight-topPanelHeight
		if INT(ma/divWidthVertMiddle)=0 then PARAMETERS gs_hor_gnumtr=0
		if INT(ma/divWidthVertMiddle)>0 then
			if (ma/INT(ma/divWidthVertMiddle)-divWidthVertMiddle)<=(divWidthVertMiddle-ma/(INT(ma/divWidthVertMiddle)+1)) then
				PARAMETERS gs_hor_gnumtr=INT(ma/divWidthVertMiddle)-1
			endif
			if (ma/INT(ma/divWidthVertMiddle)-divWidthVertMiddle)>(divWidthVertMiddle-ma/(INT(ma/divWidthVertMiddle)+1)) then
				PARAMETERS gs_hor_gnumtr=INT(ma/divWidthVertMiddle)
			endif
		endif
	endif

	if abs(divWidthVertTransom) < EPS then gs_hor_gtp=0
	if divWidthVertTransom>0 then
		if gs_door_transom then
			ta=topPanelHeight-gs_fw_upper
			if INT(ta/divWidthVertTransom)=0 then PARAMETERS gs_hor_gtp=0
			if INT(ta/divWidthVertTransom)>0 then
				if (ta/INT(ta/divWidthVertTransom)-divWidthVertTransom)<=(ta/(INT(ta/divWidthVertTransom)+1)-divWidthVertTransom) then
					PARAMETERS gs_hor_gtp=INT(ta/divWidthVertTransom)-1
				endif
				if (ta/INT(ta/divWidthVertTransom)-divWidthVertTransom)>(ta/(INT(ta/divWidthVertTransom)+1)-divWidthVertTransom) then
					PARAMETERS gs_hor_gtp=INT(ta/divWidthVertTransom)
				endif
			endif
		endif
	endif
endif

if iDivisionMethod = DIVISION_NUM then
	if nHorDivision<1 then
		nHorDivision = 1
		PARAMETERS nHorDivision = nHorDivision
	endif
	gs_ver_gnum = nHorDivision-1
	PARAMETERS gs_ver_gnum = gs_ver_gnum

	if nVertDivBottom<1 then
		nVertDivBottom = 1
		PARAMETERS nVertDivBottom = nVertDivBottom
	endif
	gs_hor_gnum = nVertDivBottom-1
	PARAMETERS gs_hor_gnum = gs_hor_gnum

	if nVertDivMiddle<1 then
		nVertDivMiddle = 1
		PARAMETERS nVertDivMiddle = nVertDivMiddle
	endif
	gs_hor_gnumtr = nVertDivMiddle-1
	PARAMETERS gs_hor_gnumtr = gs_hor_gnumtr

	if nVertDivTransom<1 then
		nVertDivTransom = 1
		PARAMETERS nVertDivTransom = nVertDivTransom
	endif
	gs_hor_gtp = nVertDivTransom-1
	PARAMETERS gs_hor_gtp = gs_hor_gtp
endif


!!! Butt Glazed !!!

gs_left_g  = 0
gs_right_g = 0

if iFrameStyleLeft <> FRAME_STYLE_VISIBLE_MULLIONS then
	if iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED OR iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED_WO_FRAME then
		gs_left_g = gs_fw_side_left
	endif
	if iFrameStyleLeft = FRAME_STYLE_ANGLE_FRAME AND leftCornerAngle<180 then
		gs_left_g = gs_fw_side_left-((gs_gsb+gs_glass_thk)*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2))
	endif
	if iFrameStyleLeft = FRAME_STYLE_ANGLE_FRAME AND leftCornerAngle>180 then
		gs_left_g = gs_fw_side_left+(gs_fthk-gs_gsb-gs_glass_thk)*TAN(90-leftCornerAngle/2)-(gs_frame_width/2)/SIN(180-leftCornerAngle/2)
	endif
endif
if iFrameStyleRight <> FRAME_STYLE_VISIBLE_MULLIONS then
	if iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED OR iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED_WO_FRAME then
		gs_right_g = gs_fw_side_right
	endif
	if iFrameStyleRight = FRAME_STYLE_ANGLE_FRAME AND rightCornerAngle<180 then
		gs_right_g = gs_fw_side_right-((gs_gsb+gs_glass_thk)*TAN(90-rightCornerAngle/2)+(gs_frame_width/2)/SIN(rightCornerAngle/2))
	endif
	if iFrameStyleRight = FRAME_STYLE_ANGLE_FRAME AND rightCornerAngle>180 then
		gs_right_g = gs_fw_side_right+(gs_fthk-gs_gsb-gs_glass_thk)*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(180-rightCornerAngle/2)
	endif
endif


!!! Butt Glazed END !!!

!!! MASKS !!!

mask1=15
mask2=15
mask3=15
mask4=15

if gs_stack_bottom then
	mask1=8
	mask2=13
endif

if gs_stack_right then
	mask2=8
	mask3=13
endif

if gs_stack_top then
	mask3=8
	mask4=13
endif

if gs_stack_left then
	mask4=8
	if mask1<>8 then mask1=13
endif

maskLeftButFr = 0
if iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED | iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED_WO_FRAME then
	maskLeftButFr = 5
endif

maskRightButFr = 0
if iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED | iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED_WO_FRAME then
	maskRightButFr = 5
endif


!!! END OF MASKS !!!

!! DINAMIC ARRAY !!

DIM empty[1] !! Empty Array


if bMiddleRail then
	if gs_hor_gnum>0 AND (GLOB_MODPAR_NAME="B" OR GLOB_MODPAR_NAME="divisionMethod" OR GLOB_MODPAR_NAME="iDivisionMethod"\
		OR GLOB_MODPAR_NAME="divWidthVertBottom" OR GLOB_MODPAR_NAME="bottomRailWidth"\
		OR GLOB_MODPAR_NAME="gs_hor_gnum" OR GLOB_MODPAR_NAME="gs_frame_width" \
		OR GLOB_MODPAR_NAME="midRailElevation" OR GLOB_MODPAR_NAME="midRailWidth" \
		OR GLOB_MODPAR_NAME="bMiddleRail" OR GLOB_MODPAR_NAME="nVertDivBottom"\
		OR GLOB_MODPAR_NAME="gs_grid_w") then
		dim temp1[]
		temp1=empty
		last1=0
		dist1=(midRailElevation-midRailWidth/2-gs_fw_lower+gs_grid_w)/(gs_hor_gnum+1)
		for i=1 to gs_hor_gnum
			temp1[i]=last1+dist1
			last1=temp1[i]
		next i

		parameters gs_hor_d=temp1
		gs_hor_d=temp1
	endif
endif
gs_hor_gnum = min(gs_hor_gnum, vardim1(gs_hor_d))


if gs_hor_gnumtr>0 AND (GLOB_MODPAR_NAME="B" OR GLOB_MODPAR_NAME="divisionMethod" OR GLOB_MODPAR_NAME="iDivisionMethod"\
	OR GLOB_MODPAR_NAME="divWidthVertMiddle" OR GLOB_MODPAR_NAME="bottomRailWidth"\
	OR GLOB_MODPAR_NAME="gs_transom_height" OR GLOB_MODPAR_NAME="gs_door_transom" \
	OR GLOB_MODPAR_NAME="gs_hor_gnumtr" OR GLOB_MODPAR_NAME="gs_frame_width" \
	OR GLOB_MODPAR_NAME="midRailElevation" OR GLOB_MODPAR_NAME="midRailWidth" \
	OR GLOB_MODPAR_NAME="bMiddleRail" OR GLOB_MODPAR_NAME="nVertDivMiddle"\
	OR GLOB_MODPAR_NAME="gs_grid_w") OR GLOB_MODPAR_NAME="gs_stack_top" then
	dim temp2[]
	temp2=empty
	last2=0
	dist2=(middlePanelHeight-topPanelHeight+gs_grid_w)/(gs_hor_gnumtr+1)
	for i=1 to gs_hor_gnumtr
		temp2[i]=last2+dist2
		last2=temp2[i]
	next i

	parameters gs_hor_dtr=temp2
	gs_hor_dtr=temp2
endif
gs_hor_gnumtr = min(gs_hor_gnumtr, vardim1(gs_hor_dtr))


if gs_hor_gtp>0 AND (GLOB_MODPAR_NAME="B" OR GLOB_MODPAR_NAME="divisionMethod" OR GLOB_MODPAR_NAME="iDivisionMethod"\
	OR GLOB_MODPAR_NAME="divWidthVertTransom" \
	OR GLOB_MODPAR_NAME="gs_door_transom" OR GLOB_MODPAR_NAME="gs_transom_height" \
	OR GLOB_MODPAR_NAME="gs_hor_gtp" OR GLOB_MODPAR_NAME="gs_frame_width"\
	OR GLOB_MODPAR_NAME="nVertDivTransom" OR GLOB_MODPAR_NAME="gs_grid_w" OR GLOB_MODPAR_NAME="gs_stack_top") then
	dim temp3[]
	temp3=empty
	last3=0
	dist3=(topPanelHeight-gs_fw_upper+gs_grid_w)/(gs_hor_gtp+1)
	for i=1 to gs_hor_gtp
		temp3[i]=last3+dist3
		last3=temp3[i]
	next i

	parameters gs_hor_dtp=temp3
	gs_hor_dtp=temp3
endif
gs_hor_gtp = min(gs_hor_gtp, vardim1(gs_hor_dtp))


if gs_ver_gnum>0 AND (GLOB_MODPAR_NAME="A" OR GLOB_MODPAR_NAME="divisionMethod" OR GLOB_MODPAR_NAME="iDivisionMethod"\
	OR GLOB_MODPAR_NAME="divWidthHor"\
	OR GLOB_MODPAR_NAME="gs_sidelight_right" OR GLOB_MODPAR_NAME="gs_sidelight_left"\
	OR GLOB_MODPAR_NAME="gs_sidelight_width_left" OR GLOB_MODPAR_NAME="gs_sidelight_width_right" \
	OR GLOB_MODPAR_NAME="gs_ver_gnum" OR GLOB_MODPAR_NAME="leftCornerAngle"\
	OR GLOB_MODPAR_NAME="endFrameLeft" OR GLOB_MODPAR_NAME="endFrameRight" \
	OR GLOB_MODPAR_NAME="rightCornerAngle" OR GLOB_MODPAR_NAME="nHorDivision" OR GLOB_MODPAR_NAME="gs_frame_width"\
	OR rightCornerAngle = sps*2 OR leftCornerAngle = sps*2 \
	OR GLOB_MODPAR_NAME="gridWidthVert" OR GLOB_MODPAR_NAME="gs_stack_left" OR GLOB_MODPAR_NAME="gs_stack_right" \
	OR GLOB_MODPAR_NAME="gs_tolerance") then

	dim temp4[]
	temp4=empty
	last4=0
	dist4=(ac_unit_width-frameOrSLightWidthLeft-frameOrSLightWidthRight+gridWidthVert) / (gs_ver_gnum+1)

	for i=1 to gs_ver_gnum
		temp4[i]=last4+dist4
		last4=temp4[i]
	next i

	PARAMETERS gs_ver_d=temp4
	gs_ver_d=temp4
endif
gs_ver_gnum = min(gs_ver_gnum, vardim1(gs_ver_d))

!! END OF DINAMIC ARRAY !!


! =============================================================================
! Minimal Space
! =============================================================================

if iDoorType = 1 then
	gs_leaf_optype_m	= LEAF_1L_SIDE_HUNG
else
	gs_leaf_optype_m	= LEAF_2L_SIDE_HUNG
endif

bSidelights = 0
if iStorefrontType = SFTYPE_DOOR_TRSL then
	bSidelights = 1
endif

doorStop = gs_ds_w * bEnableDoorStop
EgressMSWidth = ac_egress_width
egressOffset = ac_wallhole_width/2 - frameOrSLightWidthRight - (gs_ds_w * bEnableDoorStop) - gs_tolerance_right
ms_leftOffset = gs_frame_width + doorStop
ms_rightOffset = gs_frame_width + doorStop


]]>
</Script_1D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_PR SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_PR>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_UI SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[

if iDoorType = 2 then
	stHandleTab = `Дверные Ручки и Защитная Пластина 1`
else
	stHandleTab = `Дверные Ручки и Защитная Пластина`
endif

! =============================================================================
! Tabpage Structure Definition
! =============================================================================

! call all available page fix IDs
call "ui_tabIDlistHierarchy_m" parameters iUITreeStandardType = 2,			! STOREFRONT_UI
					returned_parameters iUiID_Root,
										iUiID_NominalSizes,		iParID_NominalSizes,
										iUiID_ShapePanelDiv,	iParID_ShapePanelDiv,
										iUiID_GlassMullions,	iParID_GlassMullions,
										iUiID_SFFrameStyle,		iParID_SFFrameStyle,
										iUiID_VentProfile,		iParID_VentProfile,
										iUiID_Doorleaf,			iParID_Doorleaf,
										iUiID_Handle1,			iParID_Handle1,
										iUiID_Handle2,			iParID_Handle2,
										iUiID_OpeningLines,		iParID_OpeningLines,
										iUiID_DoorModelAttrib,	iParID_DoorModelAttrib,
										iUiID_WallOpening,		iParID_WallOpening,
										iUiID_Reveal,			iParID_Reveal,
										iUiID_Closure,			iParID_Closure,
										iUiID_FloorPlanSection,	iParID_FloorPlanSection,
										iUiID_MinSpace,			iParID_MinSpace,
										iUiID_Descriptions,		iParID_Descriptions



dim uiUsedPageIDs[][2]
dim uiUsedPageNames[][2]

! override regular iParID_SFFrameStyle and iParID_VentProfile with iUiID_Root, different hierarchy applied in this door
if iStorefrontType = SFTYPE_DOOR_ONLY then 
	iParID_SFFrameStyle = iUiID_Root
	iParID_VentProfile = iUiID_Root
endif

idxPage = 1

uiUsedPageIDs[idxPage][1]	= iUiID_NominalSizes		: uiUsedPageIDs[idxPage][2]		= iParID_NominalSizes
uiUsedPageNames[idxPage][1]	= ""						: uiUsedPageNames[idxPage][2]	= ""
idxPage = idxPage + 1

if iStorefrontType <> SFTYPE_DOOR_ONLY then
	uiUsedPageIDs[idxPage][1]	= iUiID_ShapePanelDiv			: uiUsedPageIDs[idxPage][2]		= iParID_ShapePanelDiv
	uiUsedPageNames[idxPage][1]	= `Форма и Рисунок Переплета`	: uiUsedPageNames[idxPage][2]	= "uiTab_StorefrontPanels_flat(1)"
	idxPage = idxPage + 1

	uiUsedPageIDs[idxPage][1]	= iUiID_GlassMullions	: uiUsedPageIDs[idxPage][2]		= iParID_GlassMullions
	uiUsedPageNames[idxPage][1]	= `Остекление и Раскладка`	: uiUsedPageNames[idxPage][2]	= "uiTab_StorefrontMullion_flat(1)"
	idxPage = idxPage + 1
endif

uiUsedPageIDs[idxPage][1]	= iUiID_SFFrameStyle				: uiUsedPageIDs[idxPage][2]		= iParID_SFFrameStyle
uiUsedPageNames[idxPage][1]	= `Стиль и Размеры Коробки`		: uiUsedPageNames[idxPage][2]	= "uiTab_StorefrontFrame_flat(1)"
idxPage = idxPage + 1

uiUsedPageIDs[idxPage][1]	= iUiID_Doorleaf			: uiUsedPageIDs[idxPage][2]		= iParID_Doorleaf
uiUsedPageNames[idxPage][1]	= `Полотно Двери и Открывание`	: uiUsedPageNames[idxPage][2]	= "uiTab_StorefrontLeafType_flat(1)"
idxPage = idxPage + 1

uiUsedPageIDs[idxPage][1]	= iUiID_Handle1				: uiUsedPageIDs[idxPage][2]		= iParID_Handle1
uiUsedPageNames[idxPage][1]	= stHandleTab				: uiUsedPageNames[idxPage][2]	= "uiTab_StorefrontHandle_flat(1)"
idxPage = idxPage + 1

if iDoorType = 2 then
	uiUsedPageIDs[idxPage][1]	= iUiID_Handle2						: uiUsedPageIDs[idxPage][2]		= iParID_Handle2
	uiUsedPageNames[idxPage][1]	= `Дверные Ручки и Защитная Пластина 2`	: uiUsedPageNames[idxPage][2]	= "uiTab_StorefrontHandle_flat(1)"
	idxPage = idxPage + 1
endif

uiUsedPageIDs[idxPage][1]	= iUiID_DoorModelAttrib 	: uiUsedPageIDs[idxPage][2]		= iParID_DoorModelAttrib 
uiUsedPageNames[idxPage][1]	= `Реквизиты Модели`		: uiUsedPageNames[idxPage][2]	= "uiTab_3DRepr_flat(1)"
idxPage = idxPage + 1

uiUsedPageIDs[idxPage][1]	= iUiID_OpeningLines		: uiUsedPageIDs[idxPage][2]		= iParID_OpeningLines
uiUsedPageNames[idxPage][1]	= ""						: uiUsedPageNames[idxPage][2]	= ""
idxPage = idxPage + 1

uiUsedPageIDs[idxPage][1]	= iUiID_WallOpening			: uiUsedPageIDs[idxPage][2]		= iParID_WallOpening	
uiUsedPageNames[idxPage][1]	= ""						: uiUsedPageNames[idxPage][2]	= ""
idxPage = idxPage + 1

uiUsedPageIDs[idxPage][1]	= iUiID_Reveal				: uiUsedPageIDs[idxPage][2]		= iParID_Reveal
uiUsedPageNames[idxPage][1]	= ""						: uiUsedPageNames[idxPage][2]	= ""
idxPage = idxPage + 1

uiUsedPageIDs[idxPage][1]	= iUiID_Closure				: uiUsedPageIDs[idxPage][2]		= iParID_Closure
uiUsedPageNames[idxPage][1]	= ""						: uiUsedPageNames[idxPage][2]	= ""
idxPage = idxPage + 1					

uiUsedPageIDs[idxPage][1]	= iUiID_FloorPlanSection	: uiUsedPageIDs[idxPage][2]		= iParID_FloorPlanSection
uiUsedPageNames[idxPage][1]	= `План Этажа и Разрез`	: uiUsedPageNames[idxPage][2]	= "uiTab_2DRepr_flat(1)"
idxPage = idxPage + 1					

if bEnableVentilationProfile then
	uiUsedPageIDs[idxPage][1]	= iUiID_VentProfile		: uiUsedPageIDs[idxPage][2]		= iParID_VentProfile
	uiUsedPageNames[idxPage][1]	= `Приточная Вентиляция`	: uiUsedPageNames[idxPage][2]	= "uiTab_OpeningVentilation_flat(1)"
	idxPage = idxPage + 1
endif

uiUsedPageIDs[idxPage][1]	= iUiID_MinSpace		: uiUsedPageIDs[idxPage][2]		= iParID_MinSpace
uiUsedPageNames[idxPage][1]	= ""					: uiUsedPageNames[idxPage][2]	= ""
idxPage = idxPage + 1

uiUsedPageIDs[idxPage][1]	= iUiID_Descriptions	: uiUsedPageIDs[idxPage][2]		= iParID_Descriptions
uiUsedPageNames[idxPage][1] = ""					: uiUsedPageNames[idxPage][2]	= ""
idxPage = idxPage + 1


! =============================================================================
! Tabpages
! =============================================================================

ui_current_page gs_ui_current_page

ui_dialog `Параметры Витрины `

bGlassInLeaf = 0

if	iDoorPanelType = PANEL_STYLE2 |\
	iDoorPanelType = PANEL_STYLE3 | iDoorPanelType = PANEL_STYLE4 |\
	iDoorPanelType = PANEL_STYLE5 | iDoorPanelType = PANEL_STYLE6 |\
	iDoorPanelType = PANEL_STYLE7 | iDoorPanelType = PANEL_STYLE8 then

		bGlassInLeaf = 1
endif




bPanelSettingsPage	= 0
bPanelSettingsPage2	= 0


for iTabs = 1 to vardim1(uiUsedPageIDs)
	if uiUsedPageIDs[iTabs][1]= iUiID_ShapePanelDiv then
		ui_page	uiUsedPageIDs[iTabs][1], uiUsedPageIDs[iTabs][2], uiUsedPageNames[iTabs][1], uiUsedPageNames[iTabs][2]
		if gs_ui_current_page = iUiID_ShapePanelDiv then
			gosub "pageCallPanels"
		endif
	endif	
	if uiUsedPageIDs[iTabs][1]= iUiID_GlassMullions then
		ui_page	uiUsedPageIDs[iTabs][1], uiUsedPageIDs[iTabs][2], uiUsedPageNames[iTabs][1], uiUsedPageNames[iTabs][2]
		if gs_ui_current_page = iUiID_GlassMullions then
			gosub "pageCallGlassMullions"
		endif
	endif
	if uiUsedPageIDs[iTabs][1]= iUiID_SFFrameStyle then
		ui_page	uiUsedPageIDs[iTabs][1], uiUsedPageIDs[iTabs][2], uiUsedPageNames[iTabs][1], uiUsedPageNames[iTabs][2]
		if gs_ui_current_page = iUiID_SFFrameStyle then
			gosub "pageCallFrame"
		endif
	endif
	if uiUsedPageIDs[iTabs][1]= iUiID_Doorleaf then
		ui_page	uiUsedPageIDs[iTabs][1], uiUsedPageIDs[iTabs][2], uiUsedPageNames[iTabs][1], uiUsedPageNames[iTabs][2]
		if gs_ui_current_page = iUiID_Doorleaf then
			gosub "pageCallDoorLeaves"
		endif
	endif
	if uiUsedPageIDs[iTabs][1]= iUiID_Handle1 then
		ui_page	uiUsedPageIDs[iTabs][1], uiUsedPageIDs[iTabs][2], uiUsedPageNames[iTabs][1], uiUsedPageNames[iTabs][2]
		if gs_ui_current_page = iUiID_Handle1 then
			bPanelSettingsPage	= 1
			bPanelSettingsPage2	= 0
			gosub "pageCallHandleAndKickBoard"
		endif
	endif
	if uiUsedPageIDs[iTabs][1]= iUiID_Handle2 then
		ui_page	uiUsedPageIDs[iTabs][1], uiUsedPageIDs[iTabs][2], uiUsedPageNames[iTabs][1], uiUsedPageNames[iTabs][2]
		if gs_ui_current_page = iUiID_Handle2 then
			bPanelSettingsPage	= 0
			bPanelSettingsPage2	= 1
			gosub "pageCallHandleAndKickBoard"
		endif
	endif
	if uiUsedPageIDs[iTabs][1]= iUiID_DoorModelAttrib then
		ui_page	uiUsedPageIDs[iTabs][1], uiUsedPageIDs[iTabs][2], uiUsedPageNames[iTabs][1], uiUsedPageNames[iTabs][2]
		if gs_ui_current_page = iUiID_DoorModelAttrib then
			gosub "pageCallSurfaces"
		endif
	endif
	if uiUsedPageIDs[iTabs][1]= iUiID_VentProfile then
		ui_page	uiUsedPageIDs[iTabs][1], uiUsedPageIDs[iTabs][2], uiUsedPageNames[iTabs][1], uiUsedPageNames[iTabs][2]
		if gs_ui_current_page = iUiID_VentProfile then
			gosub "pageCallVentProfile"
		endif
	endif
	if uiUsedPageIDs[iTabs][1]= iUiID_FloorPlanSection then
		ui_page	uiUsedPageIDs[iTabs][1], uiUsedPageIDs[iTabs][2], uiUsedPageNames[iTabs][1], uiUsedPageNames[iTabs][2]
		if gs_ui_current_page = iUiID_FloorPlanSection then
			gosub "pageCallFloorPlanAndSect"
		endif
	endif
next iTabs



call "GS Storefront Door Functions",
	parameters all	bEnableSwingLineTurnOff		= bEnableSwingLineTurnOff,
					bEnableSecondaryOpLineTypes = bEnableSecondaryOpLineTypes,
					gs_bSameLineTypeForLeaves	= gs_bSameLineTypeForLeaves,
					bEnableVentilationProfile	= bEnableVentilationProfile,
					bOpeningDirection			= WIDO_REVEAL_SIDE,
					bSidelights					= bSidelights,
					gs_leaf_optype_m			= gs_leaf_optype_m,
					bDoorEmptyPanel				= bDoorEmptyPanel,
					uiUsedPageIDs				= uiUsedPageIDs,
					uiUsedPageNames				= uiUsedPageNames



file_dependence "uiTab_StorefrontPanels_flat(1)"
file_dependence "uiTab_StorefrontMullion_flat(1)"
file_dependence "uiTab_StorefrontFrame_flat(1)"
file_dependence "uiTab_StorefrontLeafType_flat(1)"
file_dependence "uiTab_StorefrontHandle_flat(1)"
file_dependence "uiTab_3DRepr_flat(1)"
file_dependence "uiTab_OpeningVentilation_flat(1)"

end


! =============================================================================
! Handles
! =============================================================================
"pageCallHandleAndKickBoard":
	pageStartY = 4
	call "DoorHandle" parameters	bStorefrontDoorHandle			= 1,
									bINTHandles						= 1,
									pageStartY						= pageStartY,
									gs_handle_type_m				= gs_handle_type_m,
									gs_handle_type_out_m			= gs_handle_type_out_m,
									gs_handle_type2_m				= gs_handle_type2_m,
									gs_handle_type2_out_m			= gs_handle_type2_out_m,
									bPanelSettingsPage				= bPanelSettingsPage,
									bPanelSettingsPage2				= bPanelSettingsPage2

	y0	= pageStartY + 194
	dy	= 24

	outFldWdt	= 120
	inFldWdt	= 90
	outFldHgt	= 15
	inFldHgt	= 19

	xMiddle		= 222

	xPos1	= 2
	xPos2	= xMiddle + 8
	xPos3	= xPos2 + outFldWdt + 2

	boolWidth	= xMiddle - xPos1

	y1 = y0

	! =========================================================================
	ui_separator xPos1,	y1-4,		442,	y1-4

	if bPanelSettingsPage then
		ui_style 0, 1
		ui_outfield		`Защитная Пластина`,		xPos1,	y1,		boolWidth,	outFldHgt

		y1 = y1 + dy

		ui_style 0, 0
		ui_infield{3}	"bKickBoardOut",	xPos1,	y1-4,	boolWidth,	inFldHgt,
			7, "", 1, 1,
			0, 0, 0, 0,
			1,	`Снаружи`, 0,
			1,	`Снаружи`, 1

		y1 = y1 + dy

		ui_infield{3}	"bKickBoardIn",		xPos1,	y1-4,	boolWidth,	inFldHgt,
			7, "", 1, 1,
			0, 0, 0, 0,
			1,	`Внутри`, 0,
			1,	`Внутри`, 1

		y1	= y0 + dy

		ui_outfield		`Высота`,			xPos2,	y1,		outFldWdt,	outFldHgt, 4 * not(bKickBoardOut | bKickBoardIn)
		ui_infield		"kickBoardHeight",	xPos3,	y1-4,	inFldWdt,	inFldHgt
	endif

	if bPanelSettingsPage2 then
		ui_style 0, 1
		ui_outfield		`Защитная Пластина`,		xPos1,	y1,		boolWidth,	outFldHgt

		y1 = y1 + dy

		ui_style 0, 0
		ui_infield{3}	"bKickBoardOut2",	xPos1,	y1-4,	boolWidth,	inFldHgt,
			7, "", 1, 1,
			0, 0, 0, 0,
			1,	`Снаружи`, 0,
			1,	`Снаружи`, 1

		y1 = y1 + dy

		ui_infield{3}	"bKickBoardIn2",	xPos1,	y1-4,	boolWidth,	inFldHgt,
			7, "", 1, 1,
			0, 0, 0, 0,
			1,	`Внутри`, 0,
			1,	`Внутри`, 1

		y1	= y0 + dy

		ui_outfield		`Высота`,			xPos2,	y1,		outFldWdt,	outFldHgt, 4 * not(bKickBoardOut2 | bKickBoardIn2)
		ui_infield		"kickBoardHeight2",	xPos3,	y1-4,	inFldWdt,	inFldHgt
	endif

return


! =============================================================================
! Panels
! =============================================================================

"pageCallPanels":

	call "ui_StoreFront_Panels_m"	parameters	iStorefrontType			= iStorefrontType,
											iDoorType				= iDoorType,
											stDivisionMethod		= stDivisionMethod,
											iDivisionMethod			= iDivisionMethod,
											bMiddleRail				= bMiddleRail,
											gs_door_transom			= gs_door_transom,
											gs_sidelight_left		= gs_sidelight_left,
											gs_sidelight_right		= gs_sidelight_right
return


! =============================================================================
! Glass and Mullions
! =============================================================================
"pageCallGlassMullions":

	call "ui_StoreFront_Glass_m" parameters	iStorefrontType			= iStorefrontType,
											titleGlassMullions		= titleGlassMullions,
											iFrameStyleMullion		= iFrameStyleMullion,
											gs_opening_dir_sl_m		= gs_opening_dir_sl_m,
											gs_md					= gs_md,
											gs_grid_w				= gs_grid_w,
											gs_grid_thk				= gs_grid_thk,
											gridWidthVert			= gridWidthVert,
											gridThkVert				= gridThkVert,
											gs_glass_thk			= gs_glass_thk,
											gs_gsmd					= gs_gsmd,
											gs_gsb					= gs_gsb,
											buttGalzedJoint			= buttGalzedJoint,
											iFrameStyleLeft			= iFrameStyleLeft,
											iFrameStyleRight		= iFrameStyleRight,
											gs_wthk					= gs_wthk


return


! =============================================================================
! Frame
! =============================================================================

"pageCallFrame":

	call "ui_StoreFront_Frame_m" parameters	iStorefrontType		= iStorefrontType,
											iFrameStyleLeft			= iFrameStyleLeft,
											iFrameStyleRight		= iFrameStyleRight,
											gs_wthk					= gs_wthk,
											iEndFrameLeft			= iEndFrameLeft,
											leftCornerAngle			= leftCornerAngle,
											iEndFrameRight			= iEndFrameRight,
											rightCornerAngle		= rightCornerAngle,
											gs_frame_thk			= gs_frame_thk,
											gs_frame_width			= gs_frame_width


return


! =============================================================================
! Door Leaves
! =============================================================================
"pageCallDoorLeaves":

	call "ui_StoreFront_DoorLeaves_m" parameters	iStoreFrontType			= iStoreFrontType,
													iDoorType				= iDoorType,
													iDoorPanelType			= iDoorPanelType,
													gs_ds					= gs_ds,
													gs_ds_thk				= gs_ds_thk,
													gs_ds_w					= gs_ds_w,
													gs_sidelight_left		= gs_sidelight_left,
													gs_sidelight_right		= gs_sidelight_right,
													leafFrameWidth			= leafFrameWidth,
													gs_leaf_thk				= gs_leaf_thk,
													bottomRailWidth			= bottomRailWidth,
													bMiddleRail				= bMiddleRail,
													midRailWidth			= midRailWidth,
													midRailElevation		= midRailElevation,
													gs_rttl					= gs_rttl,
													gs_cust_panel			= gs_cust_panel
return

! =============================================================================
! Material Tabpage
! =============================================================================
"pageCallSurfaces":

	itemID = 1

	listID = iUiID_DoorModelAttrib

	ui_listfield listID, 0, 0, 444, 265 

	ui_listitem itemID, listID, "iDWDet3D",			0,	"ui_list_detailLevel3D_flat(1)"	: itemID = itemID + 1
	ui_listitem itemID, listID, "gs_SashText_typ",	0,	""							: itemID = itemID + 1

	ui_listitem itemID, listID, "", 				0, "", `Перья в 3D`						: itemID = itemID + 1	! 3D Pens
	ui_listitem itemID, listID, "gs_frame_pen",		1,	"ui_list_pencolor_flat(1)", `Коробка`		: itemID = itemID + 1
	ui_listitem itemID, listID, "gs_leaf_pen",		1,	"ui_list_pencolor_flat(1)", `Полотно`		: itemID = itemID + 1
	ui_listitem itemID, listID, "gs_glass_pen",		1,	"ui_list_pencolor_flat(1)", `Остекление`		: itemID = itemID + 1


	ui_listitem itemID, listID, "", 				0, "", `Покрытия`				: itemID = itemID + 1	! Surfaces
	ui_listitem itemID, listID, "bLinkSurfacesFrameSash",		1,		"ui_list_surface_flat(1)"	: itemID = itemID + 1

	ui_listitem itemID, listID, "gs_frame_mat",			1,	"ui_list_surface_flat(1)", `Коробка`		: itemID = itemID + 1
	ui_listitem itemID, listID, "gs_leaf_mat",			1,	"ui_list_surface_flat(1)", `Полотно`		: itemID = itemID + 1
	ui_listitem itemID, listID, "gs_leafMidrail_mat",	1,	"ui_list_surface_flat(1)", `Средник Полотна`	: itemID = itemID + 1

	if gs_sidelight_left | gs_sidelight_right then
		ui_listitem itemID, listID, "gs_midrail_mat",		1,	"ui_list_surface_flat(1)", `Средник`	: itemID = itemID + 1
	endif

	if gs_sidelight_left | gs_sidelight_right | gs_door_transom then
		ui_listitem itemID, listID, "gs_sash_mat",			1,	"ui_list_surface_flat(1)", `Горизонтальная Раскладка`		: itemID = itemID + 1
		ui_listitem itemID, listID, "gs_vertMull_mat",		1,	"ui_list_surface_flat(1)", `Вертикальная Раскладка`		: itemID = itemID + 1
	endif

	ui_listitem itemID, listID, "gs_glass_mat",			1,	"ui_list_surface_flat(1)", `Остекление`		: itemID = itemID + 1

	ui_listitem itemID, listID, "gs_handle_mat",		1,	"ui_list_surface_flat(1)", `Ручка`		: itemID = itemID + 1
	ui_listitem itemID, listID, "gs_lock_mat",			1,	"ui_list_surface_flat(1)", `Замок`		: itemID = itemID + 1
	ui_listitem itemID, listID, "gs_handle_ac_mat",		1,	"ui_list_surface_flat(1)", `Аксессуар`	: itemID = itemID + 1
	ui_listitem itemID, listID, "gs_ventProfile_mat",	1,	"ui_list_surface_flat(1)", `Приточный Клапан`	: itemID = itemID + 1

	ui_listitem itemID, listID, "matKickBoardOut",		1,	"ui_list_surface_flat(1)", `Защитная Пластина Снаружи`	: itemID = itemID + 1
	ui_listitem itemID, listID, "matKickBoardIn",		1,	"ui_list_surface_flat(1)", `Защитная Пластина Внутри`	: itemID = itemID + 1

return

! =============================================================================
! Natural Ventilation
! =============================================================================

"pageCallVentProfile":
		call "Ventilation_profile" parameters	isWindow						= 0,
												iWindowType						= 0,
												bVentilationProfile				= bVentilationProfile,
												iVentilationProfileType			= iVentilationProfileType
return

! =============================================================================
! Floor Plan and Section
! =============================================================================

"pageCallFloorPlanAndSect":
	call "ui_FloorPlanSection_m" parameters isWindow	= 0,
						iWindowShape					= 0,		! SHAPE_RECTANGULAR
						iWallContourLine				= iWallContourLine,
						gs_bFills						= gs_bFills,
						gs_bShowDemolitionPar			= gs_bShowDemolitionPar,
						bShowDemolitionLineType			= 1,
						iTypeDemolitionFill				= iTypeDemolitionFill,
						iRevealType						= gs_reveal_type_int - 1,
!						gs_frame_style_m 				= gs_frame_style_m,		! only for doors
						bDoorWithSidelightSupport		= 0,
						bStorefrontClassic				= 1,
						gs_stack_top					= gs_stack_top,
						gs_stack_bottom					= gs_stack_bottom,
						iWindowType						= 0,
!						gs_bLeftSLight					= gs_bLeftSLight,		! only for windows
!						gs_bSLight						= gs_bSLight,
!						gs_UTrans						= gs_UTrans,
!						gs_UTrans_Div					= gs_UTrans_Div,
!						gs_LTrans						= gs_LTrans,
!						gs_LTrans_Div					= gs_LTrans_Div,
!						iUTrans							= iUTrans,
						gs_sash_uniform					= 0,
!						gs_panes_number					= gs_panes_number,		! only for multi-sash windows
!						CasementIDArray					= CasementIDArray,
!						iMullionStyle_00				= iMullionStyle_00,
!						iMullionStyle_01				= iMullionStyle_01,
!						iMullionStyle_02				= iMullionStyle_02,
!						iMullionStyle_03				= iMullionStyle_03,
!						iMullionStyle_04				= iMullionStyle_04,
!						iMullionStyle_05				= iMullionStyle_05,
!						iMullionStyle_06				= iMullionStyle_06,
!						iMullionStyle_07				= iMullionStyle_07,
!						iMullionStyle_08				= iMullionStyle_08,
!						iMullionStyle_09				= iMullionStyle_09,
!						iMullionStyle_10				= iMullionStyle_10,
!						iMullionStyle_11				= iMullionStyle_11,
!						gs_optype_m_01					= gs_optype_m_01,
						gs_optype_m_02					= gs_optype_m_02,
!						gs_optype_m_03					= gs_optype_m_03,
!						gs_optype_m_04					= gs_optype_m_04,
						gs_optype_m_05					= gs_optype_m_05,
						gs_optype_m_06					= gs_optype_m_06,
!						gs_optype_m_07					= gs_optype_m_07,
!						gs_optype_m_08					= gs_optype_m_08,
						gs_optype_m_09					= gs_optype_m_09,
						gs_optype_m_10					= gs_optype_m_10,
!						gs_optype_m_11					= gs_optype_m_11,
						bOverride_MVO_2D				= bOverride_MVO_2D,
						bOverride_MVO_3D				= bOverride_MVO_3D,
						iClosureType					= gs_closure_type_int - 1,
						gs_bJoint						= gs_bJoint,
						bEnableParapetInset				= bEnableParapetInset,
						gs_parapet_wall_inset			= 0,
						bEnableMasonryArch				= bEnableMasonryArch,
						bMasonryArch					= 0,
						bEnableThreshold				= bEnableThreshold,
						bThreshold						= 0,
						bEnableCasing					= bEnableCasing,
						gs_trim_inside					= 0,
						gs_trim_outside					= 0,
						bEnableSill						= bEnableSill,
						gs_sill_outside					= 0,
!						iSillType						= iSillType,
!						gs_sill_outside_sl_left			= gs_sill_outside_sl_left,		! only for doors
!						gs_sidelight_left				= gs_sidelight_left,
!						gs_sidelight_parapet_hgt_left	= gs_sidelight_parapet_hgt_left,
!						gs_sill_outside_sl_right		= gs_sill_outside_sl_right,
!						gs_sidelight_right				= gs_sidelight_right,
!						gs_sidelight_parapet_hgt_right	= gs_sidelight_parapet_hgt_right,
!						gs_sill_ins_below				= gs_sill_ins_below,
!						gs_sill_ins_use_wall_skin		= gs_sill_ins_use_wall_skin,
						bEnableBoard					= bEnableBoard,
						gs_board_inside					= 0,
						bEnableVentilationProfile		= bEnableVentilationProfile,
						bVentilationProfile				= bVentilationProfile,
						iVentilationProfileType			= iVentilationProfileType,
!						isVentilationProfileInSash_01	= isVentilationProfileInSash_01,
!						isVentilationProfileInSash_02	= isVentilationProfileInSash_02,
!						isVentilationProfileInSash_03	= isVentilationProfileInSash_03,
!						isVentilationProfileInSash_04	= isVentilationProfileInSash_04,
!						isVentilationProfileInSash_05	= isVentilationProfileInSash_05,
!						isVentilationProfileInSash_06	= isVentilationProfileInSash_06,
!						isVentilationProfileInSash_07	= isVentilationProfileInSash_07,
!						isVentilationProfileInSash_08	= isVentilationProfileInSash_08,
!						isVentilationProfileInSash_09	= isVentilationProfileInSash_09,
!						isVentilationProfileInSash_10	= isVentilationProfileInSash_10,
!						isVentilationProfileInSash_11	= isVentilationProfileInSash_11,
						bEnableShutter					= bEnableShutter,
						bSunshade						= 0,
!						gs_sunShade_iType				= gs_sunShade_iType,
						listFieldID		 				= iUiID_FloorPlanSection,
						isEmptyOpening					= 0
return


]]>
</Script_UI>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_VL SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
! =============================================================================
! Size Limitations
! =============================================================================

minDoorLeafWidth	= 0.2
minDoorLeafHeight	= 0.4

minUnitWidth		= minDoorLeafWidth + minSidelightWidthLeft + minSidelightWidthRight
minUnitHeight		= minDoorLeafHeight + frameOrTransomHeight

! =============================================================================
! GS Storefront Door Functions
! =============================================================================

call "GS Storefront Door Functions"		parameters all	EgressMSWidth				= EgressMSWidth,
														egressOffset				= egressOffset,
														minUnitWidth				= minUnitWidth,
														minUnitHeight				= minUnitHeight,
														minSidelightWidthLeft		= minSidelightWidthLeft,
														minSidelightWidthRight		= minSidelightWidthRight,
														minTransomHeight			= minTransomHeight,
														bEnableSwingLineTurnOff		= bEnableSwingLineTurnOff,
														bEnableSecondaryOpLineTypes	= bEnableSecondaryOpLineTypes,
														gs_bSameLineTypeForLeaves	= gs_bSameLineTypeForLeaves,
														bDoorEmptyPanel				= bDoorEmptyPanel,
														bEnableVentilationProfile	= bEnableVentilationProfile,
														bEnableParapetInset			= bEnableParapetInset,
														bEnableMasonryArch			= bEnableMasonryArch,
														bEnableSill					= bEnableSill,
														bEnableBoard				= bEnableBoard,
														bEnableFaschen				= bEnableFaschen,
														bEnableThreshold			= bEnableThreshold,
														bEnableCasing				= bEnableCasing,
														bEnableShutter				= bEnableShutter,
														bEnableCustomCornerLeft		= bEnableCustomCornerLeft,
														bEnableCustomCornerRight	= bEnableCustomCornerRight,
														bEnableDoorStop				= bEnableDoorStop

values "gs_frame_width" range (0,)

values "gs_SashText_typ" stFrameElemJoin
values "gs_SashText_typ_num" MITERED_JOINT, BUTT_JOINT

if GLOB_MODPAR_NAME = "gs_SashText_typ" | gs_SashText_typ_num = 0 then
	gs_SashText_typ_num = MITERED_JOINT
	if gs_SashText_typ = stFrameElemJoin[2] then gs_SashText_typ_num = BUTT_JOINT
	parameters gs_SashText_typ_num = gs_SashText_typ_num
else
	gs_SashText_typ = stFrameElemJoin[gs_SashText_typ_num]
	parameters gs_SashText_typ = gs_SashText_typ
endif


! =============================================================================
! Ventilation Profile
! =============================================================================

if bEnableVentilationProfile then
	call "Ventilation_profile" parameters	isWindow						= 0,
											iWindowType						= 0,
											bVentilationProfile				= bVentilationProfile,
											iVentilationProfileType			= iVentilationProfileType,
											gs_VentilationProfileTypeEnable	= gs_VentilationProfileTypeEnable
else
	lock	"bVentilationProfile",
			"gs_list_freeAirPerformance"
	hideparameter	"bVentilationProfile",
					"gs_list_freeAirPerformance"
endif


! =============================================================================
! Orientation
! =============================================================================

values{2} "gs_list_orientationDef_m"	0, `Автоматически`,
										1, `Специальный`

if gs_list_orientationDef_m = 0 then
	if SYMB_MIRRORED then
		ac_OpeningSide = stOpeningSide[2]
	else
		ac_OpeningSide = stOpeningSide[1]
	endif
	parameters ac_OpeningSide = ac_OpeningSide

	lock "ac_OpeningSide"
	hideparameter "ac_OpeningSide"
endif


! =============================================================================
! Door Leaf Widths for Listing
! =============================================================================

_formatStr = ""
rrr = REQUEST ("Window_door_dimension", "", _formatStr)

if (iDoorType = 2)	then
	gs_list_doorleafwidths = STR{2}(_formatStr, ((gs_rttl/100) * ac_leaf_width)) + " / " + STR{2}(_formatStr, ((1 - (gs_rttl/100)) * ac_leaf_width))
else
	gs_list_doorleafwidths = STR{2}(_formatStr, ac_leaf_width)
endif

parameters gs_list_doorleafwidths = gs_list_doorleafwidths


! =============================================================================
! IFC Parameters
! =============================================================================

ifc_optype = DOOR_OP_USER_DEFINED

if iDoorPanelType = 0 then
	ifc_optype = DOOR_OP_NOT_DEFINED
else
	if not(gs_sidelight_left) & not(gs_sidelight_right) then
		if iDoorType = 1 then
			ifc_optype = DOOR_OP_SINGLE_DOOR_SINGLE_SWING
		endif

		if iDoorType = 2 then
			ifc_optype = DOOR_OP_DOUBLE_DOOR_SINGLE_SWING
		endif
	endif
endif

parameters ifc_optype = ifc_optype

call "IFC_optype_door" parameters ifc_optype = ifc_optype

lock "ifc_optypestr"

ifc_LiningDepth = WIDO_FRAME_THICKNESS
parameters ifc_LiningDepth = ifc_LiningDepth

ifc_LiningThickness	= gs_frame_width
ifc_LiningOffset	= WIDO_FRAME_THICKNESS * WIDO_REVEAL_SIDE
parameters	ifc_LiningThickness	= ifc_LiningThickness,
			ifc_LiningOffset	= ifc_LiningOffset

if gs_door_transom then
	ifc_TransomOffset		= ac_unit_height - gs_transom_height
	ifc_TransomThickness	= gs_frame_width
else
	ifc_TransomOffset		= 0
	ifc_TransomThickness 	= 0
endif
parameters	ifc_TransomOffset		= ifc_TransomOffset,
			ifc_TransomThickness	= ifc_TransomThickness

dim ifc_DoorPanel[][4]
if ifc_optype = DOOR_OP_NOT_DEFINED | ifc_optype = DOOR_OP_USER_DEFINED then
	ifc_DoorPanel[1][1] = 0
	ifc_DoorPanel[1][2] = 0
	ifc_DoorPanel[1][3] = 0		! NOTDEFINED
	ifc_DoorPanel[1][4] = 0		! NOTDEFINED
else
	for i = 1 to 1 + (iDoorType = 2)
		ifc_DoorPanel[i][1] = gs_leaf_thk
		ifc_DoorPanel[i][3] = 1		! SWINGING
		if iDoorType = 1 then
			ifc_DoorPanel[i][2] = ac_leaf_width/ac_egress_width
			ifc_DoorPanel[i][4] = 2		! MIDDLE
		else
			if i = 1 then
				ifc_DoorPanel[i][2] = lal/ac_egress_width
				ifc_DoorPanel[i][4] = 1		! LEFT
			else
				ifc_DoorPanel[i][2] = lar/ac_egress_width
				ifc_DoorPanel[i][4] = 3		! RIGHT
			endif
		endif
	next i
endif

parameters ifc_DoorPanel = ifc_DoorPanel


! =============================================================================
! FM Types
! =============================================================================

call "FM_types" parameters all

! =============================================================================
! Swedish list parameter control
! =============================================================================

if gs_SWE_listParams_contr > 0 then
	call "SWE_ListParameters_control" parameters gs_SWE_listParams_contr = gs_SWE_listParams_contr,
			swe_list_d1				= swe_list_d1
endif

if (iDoorType = 2 & not(bEnableSecondaryOpLineTypes)) then
	gs_bSameLineTypeForLeaves  = 1
	parameters gs_bSameLineTypeForLeaves = gs_bSameLineTypeForLeaves
	lock "gs_bSameLineTypeForLeaves", "or_swingLineType2", "or_iOpLineType3dSecondary", "or_opLineType3dSecondary"
	hideparameter "gs_bSameLineTypeForLeaves", "or_swingLineType2", "or_iOpLineType3dSecondary", "or_opLineType3dSecondary"
endif


!! OPENING ANGLE IN 2D !!
if gs_open_2D < 0	| gs_open_2D >  270 then parameters gs_open_2D = 0
if gs_open_2D > 180	& gs_open_2D <= 270 then parameters gs_open_2D = 180


!! OPENING ANGLE IN 3D !!
if gs_open_3D < 0	| gs_open_3D >  270 then parameters gs_open_3D = 0
if gs_open_3D > 180	& gs_open_3D <= 270 then parameters gs_open_3D = 180

!! RESOLUTION !!
values "res" range[3, )

! PENS -------------------------------------------------------------------[
for i = 1 to 255
	put i
next i
values "gs_penJoint" use(NSP)
values "gs_penJointFg" use(NSP)
values "gs_penPlug" use(NSP)
values "gs_penPlugFg" use(NSP)
values "gs_custom_cc_separator_pen" use(NSP)
values "gs_head_symbol_pen" use(NSP)
values "gs_pen_2D" use(NSP)
values "gs_pen_mull" use(NSP)
values "gs_pen_glass" use(NSP)
values "gs_leaf_pen_2D" use(NSP)
values "gs_wcont_line_pen" use(NSP)
values "gs_wallhole_pen_fg" use(NSP)
values "gs_penFr_fg" use(NSP)
values "gs_penLeaf_fg" use(NSP)
values "gs_penSdl_fg" use(NSP)
values "gs_penGlass_fg" use(NSP)
values "or_opLinePen" use(NSP)
values "gs_frame_pen" use(NSP)
values "gs_leaf_pen" use(NSP)
values "gs_glass_pen" use(NSP)
values "gs_frame_pen_cont" use(NSP)
for i = 1 to nsp
	dummy = get(1)
next i


! ==============================================================================
! Uniform Surfaces
! ==============================================================================

dim	surfaceParNames[6]							:	dim	surfaceParameters[6]
	surfaceParNames[1]	= "gs_frame_mat"		:		surfaceParameters[1]	= gs_frame_mat
	surfaceParNames[2]	= "gs_sash_mat"			:		surfaceParameters[2]	= gs_sash_mat
	surfaceParNames[3]	= "gs_leaf_mat"			:		surfaceParameters[3]	= gs_leaf_mat
	surfaceParNames[4]	= "gs_midrail_mat"		:		surfaceParameters[4]	= gs_midrail_mat
	surfaceParNames[5]	= "gs_leafMidrail_mat"	:		surfaceParameters[5]	= gs_leafMidrail_mat
	surfaceParNames[6]	= "gs_vertMull_mat"		:		surfaceParameters[6]	= gs_vertMull_mat

_lastModSurfaceParameter = gs_frame_mat

if stored_material[1][1] <> -9999 then
	for i = 1 to vardim1(surfaceParNames)
		if GLOB_MODPAR_NAME = surfaceParNames[i] then
			_lastModSurfaceParameter	= surfaceParameters[i]
			stored_material[1][i]	= surfaceParameters[i]
			stored_material[2][i]	= 1

			for j = 1 to i-1
				stored_material[2][j]	= 0
				parameters stored_material[2][j]	= stored_material[2][j]
			next j

			for k = i+1 to vardim1(surfaceParNames)
				stored_material[2][k]	= 0
				parameters stored_material[2][k]	= stored_material[2][k]
			next k
		endif

		parameters	stored_material[1][i]	= stored_material[1][i],
					stored_material[2][i]	= stored_material[2][i]

		if stored_material[2][i] = 1 then
			_lastModSurfaceParameter = stored_material[1][i]
		endif
	next i
else
	gosub "preloadSurfaces"
endif

if bLinkSurfacesFrameSash then
	parameters	gs_frame_mat		= _lastModSurfaceParameter,
				gs_sash_mat			= _lastModSurfaceParameter,
				gs_leaf_mat			= _lastModSurfaceParameter,
				gs_midrail_mat		= _lastModSurfaceParameter,
				gs_leafMidrail_mat	= _lastModSurfaceParameter,
				gs_vertMull_mat		= _lastModSurfaceParameter
else
	if GLOB_MODPAR_NAME = "bLinkSurfacesFrameSash" then
		parameters	gs_frame_mat		= stored_material[1][1],
					gs_sash_mat			= stored_material[1][2],
					gs_leaf_mat			= stored_material[1][3],
					gs_midrail_mat		= stored_material[1][4],
					gs_leafMidrail_mat	= stored_material[1][5],
					gs_vertMull_mat		= stored_material[1][6]
	else
		gosub "preloadSurfaces"
	endif
endif

if iStorefrontType = SFTYPE_DOOR_ONLY | iStorefrontType = SFTYPE_DOOR_TRANSOM then
	gs_sidelight_right = 0
	gs_sidelight_left = 0
	parameters	gs_sidelight_right	= gs_sidelight_right,
				gs_sidelight_left	= gs_sidelight_left
	hideparameter "gs_sidelight_right", "gs_sidelight_width_right",
					"gs_sidelight_left", "gs_sidelight_width_left"
	lock "gs_sidelight_right", "gs_sidelight_width_right",
					"gs_sidelight_left", "gs_sidelight_width_left"
endif
if iStorefrontType = SFTYPE_DOOR_ONLY then
	gs_door_transom = 0
	parameters gs_door_transom = gs_door_transom
	hideparameter "gs_door_transom", "gs_transom_height"
	lock "gs_door_transom", "gs_transom_height"
endif

values "endFrameLeft" stEndFrameProfile
values "iEndFrameLeft" 1, 2, 3

if GLOB_MODPAR_NAME = "endFrameLeft" then
	iEndFrameLeft = ENDFRAME_NORMAL
	if endFrameLeft = stEndFrameProfile[2] then iEndFrameLeft = ENDFRAME_JOINT
	if endFrameLeft = stEndFrameProfile[3] then iEndFrameLeft = ENDFRAME_CORNER
	parameters iEndFrameLeft = iEndFrameLeft
else
	endFrameLeft = stEndFrameProfile[max(1, min(iEndFrameLeft,vardim1(stEndFrameProfile)))]
	parameters endFrameLeft = endFrameLeft
endif

values "endFrameRight" stEndFrameProfile
values "iEndFrameRight" 1, 2, 3

if GLOB_MODPAR_NAME = "endFrameRight" then
	iEndFrameRight = ENDFRAME_NORMAL
	if endFrameRight = stEndFrameProfile[2] then iEndFrameRight = ENDFRAME_JOINT
	if endFrameRight = stEndFrameProfile[3] then iEndFrameRight = ENDFRAME_CORNER
	parameters iEndFrameRight = iEndFrameRight
else
	endFrameRight = stEndFrameProfile[max(1, min(iEndFrameRight,vardim1(stEndFrameProfile)))]
	parameters endFrameRight = endFrameRight
endif

if iEndFrameLeft = ENDFRAME_CORNER then
	values "frameStyleLeft" stFrameStyle[1], stFrameStyle[2], stFrameStyle[3], stFrameStyle[4]
	values "iFrameStyleLeft" 1, 2, 3, 4
else
	values "frameStyleLeft" stFrameStyle[1], stFrameStyle[2]
	values "iFrameStyleLeft" 1, 2
endif

if iEndFrameRight = ENDFRAME_CORNER then
	VALUES "frameStyleRight" stFrameStyle[1], stFrameStyle[2], stFrameStyle[3], stFrameStyle[4]
	values "iFrameStyleRight" 1, 2, 3, 4
else
	VALUES "frameStyleRight" stFrameStyle[1], stFrameStyle[2]
	values "iFrameStyleRight" 1, 2
endif

if GLOB_MODPAR_NAME = "frameStyleLeft" then
	iFrameStyleLeft = FRAME_STYLE_VISIBLE_MULLIONS
	if frameStyleLeft = stFrameStyle[2] then iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED
	if iEndFrameLeft = ENDFRAME_CORNER then
		if frameStyleLeft = stFrameStyle[3] then iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED_WO_FRAME
		if frameStyleLeft = stFrameStyle[4] then iFrameStyleLeft = FRAME_STYLE_ANGLE_FRAME
	endif
	parameters iFrameStyleLeft = iFrameStyleLeft
else
	frameStyleLeft = stFrameStyle[max(1, min(iFrameStyleLeft, vardim1(stFrameStyle)))]
	parameters frameStyleLeft = frameStyleLeft
endif

if GLOB_MODPAR_NAME = "frameStyleRight" then
	iFrameStyleRight = FRAME_STYLE_VISIBLE_MULLIONS
	if frameStyleRight = stFrameStyle[2] then iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED
	if iEndFrameRight = ENDFRAME_CORNER then
		if frameStyleRight = stFrameStyle[3] then iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED_WO_FRAME
		if frameStyleRight = stFrameStyle[4] then iFrameStyleRight = FRAME_STYLE_ANGLE_FRAME
	endif
	parameters iFrameStyleRight = iFrameStyleRight
else
	frameStyleRight = stFrameStyle[max(1, min(iFrameStyleRight, vardim1(stFrameStyle)))]
	parameters frameStyleRight = frameStyleRight
endif

if iEndFrameLeft <> ENDFRAME_NORMAL then
	gs_tolerance_left = 0
	parameters gs_tolerance_left = gs_tolerance_left
	lock "gs_tolerance_left"
endif

if iEndFrameRight <> ENDFRAME_NORMAL then
	gs_tolerance_right = 0
	parameters gs_tolerance_right = gs_tolerance_right
	lock "gs_tolerance_right"
endif

if gs_stack_top then
	gs_tolerance_upper = 0
	parameters gs_tolerance_upper = gs_tolerance_upper
	lock "gs_tolerance_upper"
endif


! ===== Show / Hide 2D Fills  =====

if not(gs_bFills) then
	hideparameter	"gs_fillFr",
					"gs_penFr_fg",
					"gs_penFr_bg",
					"gs_fillSash",
					"gs_penSash_fg",
					"gs_penSash_bg",
					"gs_fillLeaf",
					"gs_penLeaf_fg",
					"gs_penLeaf_bg",
					"gs_trim_fill_in",
					"gs_trim_pen_fg_in",
					"gs_trim_pen_bg_in",
					"gs_trim_fill_out",
					"gs_trim_pen_fg_out",
					"gs_trim_pen_bg_out",
					"gs_gsect",
					"gs_penGlass_fg",
					"gs_penGlass_bg"

endif

if iFrameStyleMullion = FRAME_STYLE_VISIBLE_MULLIONS then
	if gs_grid_thk>gs_fthk then
		PARAMETERS gs_grid_thk=gs_fthk
	endif
endif

if iFrameStyleMullion = FRAME_STYLE_BUTT_GLAZED then
	if gs_grid_thk>gs_fthk-(gs_glass_thk*(dtlev)+gs_gsb) then
		PARAMETERS gs_grid_thk=gs_fthk-(gs_glass_thk*(dtlev)+gs_gsb)
	endif
endif

if iFrameStyleMullion = FRAME_STYLE_VISIBLE_MULLIONS then
	if gridThkVert>gs_fthk then
		PARAMETERS gridThkVert=gs_fthk
	endif
endif

if iFrameStyleMullion = FRAME_STYLE_BUTT_GLAZED then
	if gridThkVert>gs_fthk-(gs_glass_thk*(dtlev)+gs_gsb) then
		PARAMETERS gridThkVert=gs_fthk-(gs_glass_thk*(dtlev)+gs_gsb)
	endif
endif

if iEndFrameLeft <> ENDFRAME_CORNER then
	HIDEPARAMETER "leftCornerAngle"
else
	values "leftCornerAngle" range(0, 180), range(180, 360)
endif

if iEndFrameRight <> ENDFRAME_CORNER then
	HIDEPARAMETER "rightCornerAngle"
else
	values "rightCornerAngle" range(0, 180), range(180, 360)
endif

values "midRailWidth" range(0, ]
values "bottomRailWidth" range(0, ]

if not(gs_door_transom) then
	hideparameter	"nHorDivision",
					"divWidthHor",
					"divWidthVertTransom",
					"nVertDivTransom"
	lock	"nHorDivision",
			"divWidthHor",
			"divWidthVertTransom",
			"nVertDivTransom"
endif

if not(bEnableMiddleRail) then
	hideparameter "bMiddleRail"
	lock "bMiddleRail"
endif

if bMiddleRail then
	if midRailElevation < (2*gs_hor_gnum+1)*gs_grid_w + gs_fw_lower + midRailWidth/2 then PARAMETERS midRailElevation = (2*gs_hor_gnum+1)*gs_grid_w + gs_fw_lower + midRailWidth/2
	if iDoorPanelType = PANEL_STYLE1 then
		if midRailElevation > ac_unit_height-frameOrTransomHeight-(gs_hor_gnumtr*2+1)*gs_grid_w-midRailWidth/2 then
			PARAMETERS midRailElevation = ac_unit_height-frameOrTransomHeight-(gs_hor_gnumtr*2+1)*gs_grid_w-midRailWidth/2
		endif
	else
		if midRailElevation > ac_unit_height-frameOrTransomHeight-(gs_hor_gnumtr*2+1)*gs_grid_w-midRailWidth/2 then
			PARAMETERS midRailElevation = ac_unit_height-frameOrTransomHeight-(gs_hor_gnumtr*2+1)*gs_grid_w-midRailWidth/2
		endif
	endif
else
	hideparameter	"midRailElevation",
					"midRailWidth",
					"divWidthVertBottom",
					"nVertDivBottom"
	lock	"midRailElevation",
			"midRailWidth",
			"divWidthVertBottom",
			"nVertDivBottom"
endif

if not(gs_sidelight_left) and not(gs_sidelight_right) then
	hideparameter "nVertDivMiddle", "nVertDivBottom", "divWidthVertBottom", "divWidthVertMiddle"
	lock "nVertDivMiddle", "nVertDivBottom", "divWidthVertBottom", "divWidthVertMiddle"
endif

VALUES "frameStyleMullion"  stFrameStyle[1],stFrameStyle[2]
VALUES "iFrameStyleMullion" 1, 2

if GLOB_MODPAR_NAME = "frameStyleMullion" then
	iFrameStyleMullion = FRAME_STYLE_VISIBLE_MULLIONS
	if frameStyleMullion = stFrameStyle[2] then iFrameStyleMullion = FRAME_STYLE_BUTT_GLAZED
	parameters iFrameStyleMullion = iFrameStyleMullion
else
	frameStyleMullion = stFrameStyle[max(1, min(iFrameStyleMullion, vardim1(stFrameStyle)))]
	parameters frameStyleMullion = frameStyleMullion
endif

VALUES "divisionMethod" stDivisionMethod
values "iDivisionMethod" 1, 2

if GLOB_MODPAR_NAME = "divisionMethod" then
	iDivisionMethod = DIVISION_NUM
	if divisionMethod= stDivisionMethod[2] then iDivisionMethod = DIVISION_WIDTH
	parameters iDivisionMethod = iDivisionMethod
else
	divisionMethod = stDivisionMethod[max(1, min(iDivisionMethod, vardim1(stDivisionMethod)))]
	parameters divisionMethod = divisionMethod
endif

if iDivisionMethod = DIVISION_NUM then
	HIDEPARAMETER "divWidthHor","divWidthVertBottom","divWidthVertMiddle","divWidthVertTransom"
endif

if iDivisionMethod = DIVISION_WIDTH then
	HIDEPARAMETER "nVertDivTransom","gs_hor_gtp","gs_hor_dtp","nVertDivBottom","gs_hor_gnum","nHorDivision","gs_ver_gnum","gs_hor_d","gs_ver_d","nVertDivMiddle","gs_hor_gnumtr","gs_hor_dtr"
endif

if not(gs_ds) then
	HIDEPARAMETER "gs_ds_w", "gs_ds_thk"
	lock "gs_ds_w", "gs_ds_thk"
endif
values "gs_ds_w" range (0, ]
values "gs_ds_thk" range (0, ]

! =============================================================================
! Transom and Sidelight
! =============================================================================

values "gs_opening_dir_sl"	stOpeningDir
values "gs_opening_dir_sl_m"	OPENING_DIR_DEFAULT_OUTSIDE, OPENING_DIR_FLIPPED_INSIDE

if not(gs_sidelight_left | gs_sidelight_right | gs_door_transom) then
	lock "gs_opening_dir_sl", "gs_opening_dir_sl_m"
	hideparameter "gs_opening_dir_sl", "gs_opening_dir_sl_m"
	parameters gs_opening_dir_sl_m = 1
endif

if GLOB_MODPAR_NAME = "gs_opening_dir_sl" then
	gs_opening_dir_sl_m = OPENING_DIR_DEFAULT_OUTSIDE
	if gs_opening_dir_sl = stOpeningDir[2] then gs_opening_dir_sl_m = OPENING_DIR_FLIPPED_INSIDE
	parameters gs_opening_dir_sl_m = gs_opening_dir_sl_m
else
	gs_opening_dir_sl = stOpeningDir[gs_opening_dir_sl_m]
	parameters gs_opening_dir_sl = gs_opening_dir_sl
endif

! =============================================================================
! Door Leaf and Handles
! =============================================================================

iHandleCategoryEnable	= 1 + 2 + 4 + 8 + 16 + 64

if iDoorType = 1 then
	call "DoorLeafPanels" parameters all A = ac_leaf_width,
										 B = ac_leaf_height,
					iDoorPanelType			= iDoorPanelType,
					bAsymmetricLeafs		= 0,
					bStorefrontDoor			= 1,
					bStorefrontClassic		= 1,
					gs_leaf_optype_m		= gs_leaf_optype_m,
					stDoorTypes				= stDoorTypes,
	! Handle parameters -----------------------------------------------
					bSecondPanel			= (iDoorType = 2),
					iHandleCategoryEnable	= iHandleCategoryEnable,
					gs_handle_type			= gs_handle_type,
					gs_handle_type_m		= gs_handle_type_m,
					gs_handle_type_out		= gs_handle_type_out,
					gs_handle_type_out_m	= gs_handle_type_out_m,
	! Kick Board parameters --------------------------------------
					bEnableKickBoard	= 1,
					bSecondKickBoard	= 0,
					bKickBoardOut		= bKickBoardOut,
					bKickBoardIn		= bKickBoardIn,
	! Glass Area Calc parameters --------------------------------------
					gs_rebate_width			= 0,
					gs_ds_w					= gs_ds_w,
					bMiddleRail				= bMiddleRail,
					gs_int_fw				= midRailWidth,
					gs_fw_lower				= bottomRailWidth,
					gs_fw_side				= leafFrameWidth,
							returned_parameters	bLockMullionParamsLeaf,
												bLockGlassParamsLeaf,
												PanelGlassArea

else
	call "DoorLeafPanels" parameters all A = ac_leaf_width,
										 B = ac_leaf_height,
					iDoorPanelType			= iDoorPanelType,
					bAsymmetricLeafs		= 0,
					bStorefrontDoor			= 1,
					bStorefrontClassic		= 1,
					gs_leaf_optype_m		= gs_leaf_optype_m,
					stDoorTypes				= stDoorTypes,
	! Handle parameters -----------------------------------------------
					bSecondPanel			= (iDoorType = 2),
					iHandleCategoryEnable	= iHandleCategoryEnable,
					gs_handle_type			= gs_handle_type,
					gs_handle_type_m		= gs_handle_type_m,
					gs_handle_type_out		= gs_handle_type_out,
					gs_handle_type_out_m	= gs_handle_type_out_m,
					gs_handle_type2_m		= gs_handle_type2_m,
					gs_handle_type2_out		= gs_handle_type2_out,
					gs_handle_type2_out_m	= gs_handle_type2_out_m,
	! Kick Board parameters --------------------------------------
					bEnableKickBoard	= 1,
					bSecondKickBoard	= 1,
					bKickBoardOut		= bKickBoardOut,
					bKickBoardIn		= bKickBoardIn,
					bKickBoardOut2		= bKickBoardOut2,
					bKickBoardIn2		= bKickBoardIn2,

							returned_parameters	bLockMullionParamsLeaf,
												bLockGlassParamsLeaf

endif

if not(gs_sidelight_left) & not(gs_sidelight_right) & iDoorPanelType <> PANEL_STYLE7 & iDoorPanelType <> PANEL_STYLE8 then
	lock "bottomRailWidth"
	hideparameter "bottomRailWidth"
endif

if bLockGlassParamsLeaf and not(gs_door_transom) and not(gs_sidelight_left) and not(gs_sidelight_right) then
	lock "gs_glass_mat", "gs_glass_pen", "gs_pen_glass",
		"gs_gsect", "gs_penGlass_fg", "gs_penGlass_bg",
		"frameStyleMullion", "iFrameStyleMullion", "gs_md", "nVertDivBottom",
		"gs_glass_thk", "gs_gsmd", "gs_gsb", "buttGalzedJoint",
		"titleGlassMullions"

	hideparameter "gs_glass_mat", "gs_glass_pen", "gs_pen_glass",
				"gs_gsect", "gs_penGlass_fg", "gs_penGlass_bg",
				"frameStyleMullion", "gs_md", "nVertDivBottom",
				"gs_glass_thk", "gs_gsmd", "gs_gsb", "buttGalzedJoint",
				"titleGlassMullions"
endif


! =============================================================================
! 3D Detail Level
! =============================================================================

if gs_3DDetEnable =0 then

    values{2} "iDWDet3D" 	DETLEVEL_DW3D_DETAILED,		`Детальный`,
						    DETLEVEL_DW3D_SIMPLE,		`Простой`,
						    DETLEVEL_DW3D_OFF,			`Откл.`

else
	dim n3DScaleValueMask[]
	dim n3DScaleValueMask_m[]

	i=1
	if bittest( gs_3DDetEnable, 0) then                                              ! Scale Sensitive in Value list, 1
				n3DScaleValueMask[i] = stDetail[1]
				n3DScaleValueMask_m[i] = DETLEVEL_DW3D_SCALESENS
				i = i + 1
	endif
	if bittest( gs_3DDetEnable, 1) then                                              ! Detailed in Value list,2
				n3DScaleValueMask[i] = stDetail[2]
				n3DScaleValueMask_m[i] = DETLEVEL_DW3D_DETAILED
				i = i + 1
	endif
	if bittest( gs_3DDetEnable, 2) then                                              ! Simple in Value list,4
				n3DScaleValueMask[i] = stDetail[3]
				n3DScaleValueMask_m[i] = DETLEVEL_DW3D_SIMPLE
				i = i + 1
	endif
	if bittest( gs_3DDetEnable, 3) then                                              ! Off in Value list,8
				n3DScaleValueMask[i] = stDetail[4]
				n3DScaleValueMask_m[i] = DETLEVEL_DW3D_OFF
				i = i + 1
	endif
	if bittest( gs_3DDetEnable, 4) then                                              ! Chinese Simple in Value list,16
				n3DScaleValueMask[i] = stDetail[5]
				n3DScaleValueMask_m[i] = DETLEVEL_DW3D_CHI_SIMPLE
				i = i + 1
	endif
	if bittest( gs_3DDetEnable, 5) then                                              ! Chinese Detailed in Value list,32
				n3DScaleValueMask[i] = stDetail[6]
				n3DScaleValueMask_m[i] = DETLEVEL_DW3D_CHI_DETAILED
				i = i + 1
	endif

	values{2} "iDWDet3D" n3DScaleValueMask_m, n3DScaleValueMask
endif


doorWidth = (ac_unit_width -(frameOrSLightWidthRight+frameOrSLightWidthLeft + gs_frame_width))/2
doorHeight = ac_unit_height - (topPanelHeight + gs_frame_width * gs_door_transom + gs_frame_width/2)

values "gs_rttl" range[1, 99]

if (iDoorPanelType <> PANEL_STYLE7) & (iDoorPanelType <> PANEL_STYLE8) then
	hideparameter "leafFrameWidth"
	lock "leafFrameWidth"
endif

if iDoorPanelType <> PANEL_STYLE4 and iDoorPanelType <> PANEL_STYLE5 then HIDEPARAMETER "gs_lock_mat"

!!! END OF DOOR !!!


!! MULLION DEPTH=FRAME DEPTH !!
if gs_md = 1 then
	gs_grid_thk = gs_fthk
	PARAMETERS gs_grid_thk = gs_grid_thk
	gridThkVert = gs_fthk
	PARAMETERS gridThkVert = gridThkVert
	HIDEPARAMETER "gs_grid_thk", "gridThkVert"
	LOCK "gs_grid_thk", "gridThkVert"
endif
!! END OF MULLION DEPTH=FRAME DEPTH !!

!! GLASS SETBACK=1/2 MULLION !!
if gs_gsmd=1 then
	gs_gsb = MIN(gs_grid_thk,gridThkVert)/2-gs_glass_thk/2
	PARAMETERS gs_gsb = gs_gsb
	HIDEPARAMETER "gs_gsb"
	LOCK "gs_gsb"
endif
!! END OF GLASS SETBACK=1/2 MULLION !!


! =============================================================================
! Onorm list Settings
! =============================================================================

if LibraryLangCode = "AUT" or LibraryLangCode = "CHE" or LibraryLangCode = "GER" then
	call "Onorm_Door" parameters all
else
	hideparameter "gs_onorm_Title"
endif

! =============================================================================
! SWE Label sash ID handling
! =============================================================================
gs_UTrans_Div = 0
gs_LTrans_Div = 0

if iDoorType = 1 then
	gs_leaf_optype_m = 1 		!LEAF_1L_SIDE_HUNG
else
	gs_leaf_optype_m = 5 		!LEAF_2L_SIDE_HUNG
endif
parameters gs_leaf_optype_m = gs_leaf_optype_m

if iStorefrontType = SFTYPE_DOOR_TRANSOM then
	gs_optype_m_02 = 1			!SASH_FIXED
	parameters	gs_optype_m_02 = gs_optype_m_02
endif
if iStorefrontType = SFTYPE_DOOR_TRSL then
	gs_optype_m_02 = 1			!SASH_FIXED
	gs_optype_m_05 = 1			!SASH_FIXED
	gs_optype_m_06 = 1			!SASH_FIXED
	gs_optype_m_09 = 1			!SASH_FIXED
	gs_optype_m_10 = 1			!SASH_FIXED

	parameters	gs_optype_m_09 = gs_optype_m_09,
				gs_optype_m_10 = gs_optype_m_10,
				gs_optype_m_02 = gs_optype_m_02,
				gs_optype_m_05 = gs_optype_m_05,
				gs_optype_m_06 = gs_optype_m_06

	if gs_door_transom and (gs_sidelight_left or gs_sidelight_right) then
		gs_UTrans_Div = 1
	endif
endif

	call "winDoorCasIDmacro" parameters 	isSweDoorWindow			= 0,
											sashRowNum				= 0,
											sashColumnNum			= 0,
											iWindowType				= 0,
											iWindowClass			= 7,			!WINCLASS_DOORSASH
											gs_bLeftSLight			= gs_sidelight_left,
											gs_bSLight				= gs_sidelight_right,
											gs_UTrans				= gs_door_transom,
											gs_LTrans				= 0,
											gs_UTrans_Div			= gs_UTrans_Div,
											gs_LTrans_Div			= 0,
											storeFrontSide1			= gs_sidelight_right,
											storeFrontSide2			= gs_sidelight_left,
											nDinamicSash			= 0


! =============================================================================
! Glass Area calculations
! =============================================================================

glassarea_counter = 0

if iDoorType = 1 then
	glassarea_counter = glassarea_counter + PanelGlassArea
endif

if iDoorType = 2 then
	for i = 1 to 2
		law	= lar
		if i = 2 then	law	= lal

		call "DoorLeafPanels" PARAMETERS		a						= law,
												b						= ac_leaf_height,
												iDoorPanelType			= iDoorPanelType,
												stDoorTypes				= stDoorTypes,
												gs_rebate_width			= 0,
												gs_ds_w					= gs_ds_w,
												bMiddleRail				= bMiddleRail,
												gs_int_fw				= midRailWidth,
												gs_fw_lower				= bottomRailWidth,
												bStorefrontDoor			= 1,
												bStorefrontClassic		= 1,
												gs_fw_side				= leafFrameWidth,
												bSecondPanel			= (iDoorType = 2),
												gs_handle_type			= gs_handle_type,
												gs_handle_type_m		= gs_handle_type_m,
												gs_handle_type_out		= gs_handle_type_out,
												gs_handle_type_out_m	= gs_handle_type_out_m,
												gs_handle_type2_m		= gs_handle_type2_m,
												gs_handle_type2_out		= gs_handle_type2_out,
												gs_handle_type2_out_m	= gs_handle_type2_out_m,
												bEnableKickBoard	= 1,
												bSecondKickBoard	= 1,
												bKickBoardOut		= bKickBoardOut,
												bKickBoardIn		= bKickBoardIn,
												bKickBoardOut2		= bKickBoardOut2,
												bKickBoardIn2		= bKickBoardIn2,
									returned_parameters	bLockMullionParams,
														bLockGlassParams,
														PanelGlassArea

		glassarea_counter = glassarea_counter + PanelGlassArea
	next i
endif

RightGlassArea = 0
if gs_sidelight_right then
		GlassHeight		= B - topPanelHeight - gs_fw_side_right - bottomRailWidth
		MidRailHeight	= midRailWidth
		GlassWidth		= rightPanelWidth - gs_fw_side_right + gs_right_g

		RightGlassArea	= GlassWidth * GlassHeight
		RightGlassArea	= RightGlassArea - gs_grid_w * GlassWidth * (gs_hor_gnum + gs_hor_gnumtr)
		if bMiddleRail then RightGlassArea = RightGlassArea - midRailWidth * GlassWidth
endif

LeftGlassArea = 0
if gs_sidelight_left then
	GlassHeight		= B - topPanelHeight - gs_fw_side_left - bottomRailWidth
	MidRailHeight	= midRailWidth
	GlassWidth		= leftPanelWidth - gs_fw_side_left + gs_left_g

	LeftGlassArea	= GlassWidth * GlassHeight
	LeftGlassArea	= LeftGlassArea - gs_grid_w * GlassWidth * (gs_hor_gnum + gs_hor_gnumtr)
	if bMiddleRail then LeftGlassArea = LeftGlassArea - midRailWidth * GlassWidth
endif

FullTransomArea	= 0
if gs_door_transom then
	GlassHeight		= topPanelHeight - gs_fw_upper

	GlassWidth		= A - leftPanelWidth - RightPanelWidth - gs_fw_side_left - gs_fw_side_right
	TransomArea 	= GlassWidth * GlassHeight
	HorGridArea		= gs_hor_gtp * gs_grid_w * GlassWidth
	VertGridArea	= gs_ver_gnum * gridWidthVert * GlassHeight
	GrillSection	= gs_hor_gtp * gs_ver_gnum * gs_grid_w * gridWidthVert
	TransomArea		= TransomArea - HorGridArea - VertGridArea + GrillSection

	RightTransomArea = 0
	if gs_sidelight_right then
		GlassWidth			= rightPanelWidth - gs_fw_side_right + gs_right_g
		RightTransomArea	= GlassWidth * GlassHeight
		RightTransomArea	= RightTransomArea  - gs_hor_gtp * gs_grid_w * GlassWidth
	endif

	LeftTransomArea = 0
	if gs_sidelight_left then
		GlassWidth			= leftPanelWidth - gs_fw_side_left + gs_left_g
		LeftTransomArea		= GlassWidth * GlassHeight
		LeftTransomArea		= LeftTransomArea - gs_hor_gtp * gs_grid_w * GlassWidth
	endif

	FullTransomArea = RightTransomArea + LeftTransomArea + TransomArea
endif

! =============================================================================
! Total Glazed Area Listing Parameters
! =============================================================================
if NOT(gs_list_glassarea_override) then
	if GLOB_MODPAR_NAME = "gs_list_glassarea" then
		gs_list_glassarea_tmp = gs_list_glassarea
		parameters gs_list_glassarea_tmp = gs_list_glassarea_tmp
	else
		gs_list_glassarea = gs_list_glassarea_tmp
		parameters gs_list_glassarea = gs_list_glassarea
	endif

	glassarea_counter = glassarea_counter + RightGlassArea + LeftGlassArea + FullTransomArea
	parameters gs_list_glassarea = glassarea_counter
	lock "gs_list_glassarea"
else
	if GLOB_MODPAR_NAME = "gs_list_glassarea" then
		gs_list_glassarea_tmp = gs_list_glassarea
		parameters gs_list_glassarea_tmp = gs_list_glassarea_tmp
	else
		gs_list_glassarea = gs_list_glassarea_tmp
		parameters gs_list_glassarea = gs_list_glassarea
	endif
endif

! =============================================================================
! Zone Recognitions for Doors - Parapet wall Inset value calculation
!		GLOB_ELEVATION				- UNconditional - Zone`s always flowing
!		WIDO_REVEAL_SIDE			- conditional
!		REVEAL (WIDO_SILL)			- conditional
!		Sidelight Parapet Height	- conditional
!
! ParapetWallInset Values:	flowing: zero or more counting from the outside (reveal side)
!		-EPS < >= WALL_THICKNESS
! =============================================================================


ZONE_RECOGNITION_NONE 		= 0
ZONE_RECOGNITION_FULL 		= 1
ZONE_RECOGNITION_OUTSIDE 	= 2
ZONE_RECOGNITION_INSIDE 	= 3

_isZoneFlow = 1
if _isZoneFlow then
	if WIDO_REVEAL_SIDE then
		pwi = ZONE_RECOGNITION_INSIDE
	else
		pwi = ZONE_RECOGNITION_OUTSIDE
	endif
else
	pwi = ZONE_RECOGNITION_NONE
endif
parameters pwi  = pwi


end

"preloadSurfaces":
		parameters	stored_material[1][1]	= gs_frame_mat,
					stored_material[1][2]	= gs_sash_mat,
					stored_material[1][3]	= gs_leaf_mat,
					stored_material[1][4]	= gs_midrail_mat,
					stored_material[1][5]	= gs_leafMidrail_mat,
					stored_material[1][6]	= gs_vertMull_mat
return

]]>
</Script_VL>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Comment SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Comment>

<ParamSection SectVersion="26" SectionFlags="0" SubIdent="0">
	<ParamSectHeader>
		<Version>26</Version>
		<AutoHotspots>false</AutoHotspots>
		<HoleBits>
			<WDBit_3DFrame/>
			<WDBit_ThickIsParam/>
			<WDBit_LFramIsParam/>
			<WDBit_RFramIsParam/>
			<WDBit_TFramIsParam/>
			<WDBit_BFramIsParam/>
		</HoleBits>
		<StatBits>
			<STBit_UIDefault/>
			<STBit_UIUseHierarchicalPages/>
		</StatBits>
		<WDLeftFrame>0</WDLeftFrame>
		<WDRightFrame>0</WDRightFrame>
		<WDTopFrame>0</WDTopFrame>
		<WDBotFrame>0</WDBotFrame>
		<LayFlags>65535</LayFlags>
		<WDMirrorThickness>0</WDMirrorThickness>
		<WDWallInset>0</WDWallInset>
		<SymbolColor>0</SymbolColor>
	</ParamSectHeader>
	<Parameters>
		<Length Name="A">
			<Description><![CDATA["Dimension 1"]]></Description>
			<Fix/>
			<Value>2.32</Value>
		</Length>
		<Length Name="B">
			<Description><![CDATA["Dimension 2"]]></Description>
			<Fix/>
			<Value>2.66</Value>
		</Length>
		<Length Name="ZZYZX">
			<Description><![CDATA["Height"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Integer Name="iStorefrontType">
			<Description><![CDATA["Storefront Type"]]></Description>
			<Value>1</Value>
		</Integer>
		<Integer Name="iDoorType">
			<Description><![CDATA["Door Type"]]></Description>
			<Value>1</Value>
		</Integer>
		<Integer Name="AC_WallContours">
			<Description><![CDATA["Wall Contours (0-None,1-Full,2-Side,3-Length)"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="AC_Hole_Hotspot_Control">
			<Description><![CDATA["Hotspots 0-None,1-2D,2-3D,3-All"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>3</Value>
		</Integer>
		<Integer Name="AC_Hole_Display_Option">
			<Description><![CDATA["Floor Plan Display Option"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>3</Value>
		</Integer>
		<Angle Name="AC_Hole_Position_Angle">
			<Description><![CDATA["Hole Position Angle"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Boolean Name="AC_show2DHotspotsIn3D">
			<Description><![CDATA["Show 2D Hotspots in 3D"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="ac_bottomlevel">
			<Description><![CDATA["Bottom Level"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="ac_toplevel">
			<Description><![CDATA["Top Level"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="AC_Sill_To_Curr_Story">
			<Description><![CDATA["Sill Height to Current Story"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Boolean Name="AC_HoleSideMaterial">
			<Description><![CDATA["Hole has Wall's Side Surface"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="AC_HoleMaterialCurved">
			<Description><![CDATA["Hole Surface's Split is Curved in Curved Walls"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- gs_door_frame: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_door_frame">
			<Description><![CDATA["Door Frame"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
		</Title>
		<Integer Name="AC_WallType">
			<Description><![CDATA["Wall Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="AC_WindowInWallContour">
			<Description><![CDATA["Window in Wall Contour"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="4" SecondDimension="0">
				<AVal Row="1">0</AVal>
				<AVal Row="2">0</AVal>
				<AVal Row="3">0</AVal>
				<AVal Row="4">0</AVal>
			</ArrayValues>
		</Integer>
		<Length Name="AC_WallContourPolygon">
			<Description><![CDATA["Wall Contour Polygon"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="3">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0</AVal>
				<AVal Column="3" Row="1">0</AVal>
			</ArrayValues>
		</Length>
		<Integer Name="AC_Wall_Direction_Type">
			<Description><![CDATA["Wall Direction Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="ac_revealAnchorPos">
			<Description><![CDATA["Reveal Anchor Position"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Length Name="ac_revealToWallCore">
			<Description><![CDATA["Reveal to Wall Core"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Integer Name="ac_zone_on_reveal_side">
			<Description><![CDATA["Opening Direction"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="pwi">
			<Description><![CDATA["Parapet Wall Inset Value"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>2</Value>
		</Integer>

		<!-- iTypeDemolitionFill: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Integer Name="iTypeDemolitionFill">
			<Description><![CDATA["Demolition / New construction"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_BoldName/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<FillPattern Name="gs_new_symb_fill">
			<Description><![CDATA["New Wall Fill Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>4</Value>
		</FillPattern>
		<PenColor Name="gs_new_symb_pen_Fg">
			<Description><![CDATA["New Wall Fill Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</PenColor>
		<PenColor Name="gs_new_symb_pen_bg">
			<Description><![CDATA["New Wall Fill Background Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<Length Name="gs_new_symb_width_r">
			<Description><![CDATA["New Wall Fill Width Right"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.15</Value>
		</Length>
		<Length Name="gs_new_symb_width_l">
			<Description><![CDATA["New Wall Fill Width Left"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.15</Value>
		</Length>
		<Boolean Name="gs_bShowNewOnCC">
			<Description><![CDATA["Show new construction on Wall"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<LineType Name="gs_Demolition_linetype">
			<Description><![CDATA["Demolition line type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</LineType>
		<Boolean Name="gs_bShowDemolitionPar">
			<Description><![CDATA["Show Demolition/New parameter"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- gs_options: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_options">
			<Description><![CDATA["Options"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
		</Title>
		<String Name="gs_opening_dir_sl">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Со Стороны Четверти"]]></Value>
		</String>
		<Integer Name="gs_opening_dir_sl_m">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="bOpeningSymbDisplay">
			<Description><![CDATA["Symbolic Display of Opening"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- gs_door_sizes: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_door_sizes">
			<Description><![CDATA["Door Sizes"]]></Description>
			<Fix/>
		</Title>
		<String Name="gs_unit_size">
			<Description><![CDATA["Unit Size"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Специальный Размер"]]></Value>
		</String>
		<Length Name="gs_tolerance_left">
			<Description><![CDATA["Tolerance Left"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_tolerance_right">
			<Description><![CDATA["Tolerance Right"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_tolerance_upper">
			<Description><![CDATA["Tolerance Upper"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_tolerance_lower">
			<Description><![CDATA["Tolerance Lower"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ac_wallhole_width">
			<Description><![CDATA["Wallhole Width"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2.4</Value>
		</Length>
		<Length Name="ac_wallhole_height">
			<Description><![CDATA["Wallhole Height"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2.7</Value>
		</Length>
		<Length Name="ac_reveal_width">
			<Description><![CDATA["Reveal Width"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2.4</Value>
		</Length>
		<Length Name="ac_reveal_height">
			<Description><![CDATA["Reveal Height"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2.7</Value>
		</Length>
		<Length Name="ac_unit_width">
			<Description><![CDATA["Unit Width"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2.4</Value>
		</Length>
		<Length Name="ac_unit_height">
			<Description><![CDATA["Unit Height"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2.7</Value>
		</Length>
		<Length Name="ac_egress_width">
			<Description><![CDATA["Egress Width"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2.3</Value>
		</Length>
		<Length Name="ac_egress_height">
			<Description><![CDATA["Egress Height"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2.65</Value>
		</Length>
		<Length Name="ac_leaf_width">
			<Description><![CDATA["Leaf Width"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2.32</Value>
		</Length>
		<Length Name="ac_leaf_height">
			<Description><![CDATA["Leaf Height"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2.66</Value>
		</Length>
		<Integer Name="gs_nominal_size">
			<Description><![CDATA["Nominal Size"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>16</Value>
		</Integer>
		<Boolean Name="gs_wallhole_nominal">
			<Description><![CDATA["Set Wallhole Size as Nominal Size"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_reveal_nominal">
			<Description><![CDATA["Set Reveal Size as Nominal Size"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_unit_nominal">
			<Description><![CDATA["Set Unit Size as Nominal Size"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_egress_nominal">
			<Description><![CDATA["Set Egress Size as Nominal Size"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_leaf_nominal">
			<Description><![CDATA["Set Leaf Size as Nominal Size"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_retain_nominal_sizes">
			<Description><![CDATA["Transfer Current Nominal Size to Selection"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- titlePanels: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="titlePanels">
			<Description><![CDATA["Panels"]]></Description>
		</Title>
		<String Name="divisionMethod">
			<Description><![CDATA["Panel Division Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Количество Раскладки"]]></Value>
		</String>
		<Integer Name="iDivisionMethod">
			<Description><![CDATA["Panel Division Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="divWidthHor">
			<Description><![CDATA["Horizontal Div. Width (0=No)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.3</Value>
		</Length>
		<Length Name="divWidthVertBottom">
			<Description><![CDATA["Bottom Vert. Div. Width (0=No)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.3</Value>
		</Length>
		<Length Name="divWidthVertMiddle">
			<Description><![CDATA["Middle Vert. Div. Width (0=No)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.3</Value>
		</Length>
		<Length Name="divWidthVertTransom">
			<Description><![CDATA["Top Vert. Div. Width (0=No)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.3</Value>
		</Length>
		<Integer Name="nHorDivision">
			<Description><![CDATA["Horizontal Div. Number"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3</Value>
		</Integer>
		<Length Name="gs_ver_d">
			<Description><![CDATA["Horizontal Mullion Distance"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="2" SecondDimension="0">
				<AVal Row="1">0.783333333333</AVal>
				<AVal Row="2">1.56666666667</AVal>
			</ArrayValues>
		</Length>
		<Integer Name="gs_ver_gnum">
			<Description><![CDATA["Horizontal Mullion Number"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="nVertDivBottom">
			<Description><![CDATA["Bottom Vert. Div. Number"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Length Name="gs_hor_d">
			<Description><![CDATA["Bottom Vert. Mull. Distance"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="0">
				<AVal Row="1">0.3525</AVal>
			</ArrayValues>
		</Length>
		<Integer Name="gs_hor_gnum">
			<Description><![CDATA["Bottom Vert. Mull. Number"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nVertDivMiddle">
			<Description><![CDATA["Middle Vert. Div. Number"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Length Name="gs_hor_dtr">
			<Description><![CDATA["Middle Vert. Mull. Distance"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="0">
				<AVal Row="1">1.27</AVal>
			</ArrayValues>
		</Length>
		<Integer Name="gs_hor_gnumtr">
			<Description><![CDATA["Middle Vert. Mull. Number"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nVertDivTransom">
			<Description><![CDATA["Transom Vert. Div. Number"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Length Name="gs_hor_dtp">
			<Description><![CDATA["Transom Vert. Mull. Distance"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="0">
				<AVal Row="1">-0.005</AVal>
			</ArrayValues>
		</Length>
		<Integer Name="gs_hor_gtp">
			<Description><![CDATA["Transom Vert. Mull. Number"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="middlePanelHeight">
			<Description><![CDATA["Transom Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>

		<!-- titleGlassMullions: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="titleGlassMullions">
			<Description><![CDATA["Glass and Mullions"]]></Description>
		</Title>
		<String Name="frameStyleMullion">
			<Description><![CDATA["Frame Style on Mullion"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Видимые Профили"]]></Value>
		</String>
		<Integer Name="iFrameStyleMullion">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="gs_md">
			<Description><![CDATA["Grid Depth=Frame Depth"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_grid_w">
			<Description><![CDATA["Horizontal Mullion Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.03</Value>
		</Length>
		<Length Name="gs_grid_thk">
			<Description><![CDATA["Horizontal Mullion Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="gridWidthVert">
			<Description><![CDATA["Vertical Mullion Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.03</Value>
		</Length>
		<Length Name="gridThkVert">
			<Description><![CDATA["Vertical Mullion Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_glass_thk">
			<Description><![CDATA["Glass Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.01</Value>
		</Length>
		<Boolean Name="gs_gsmd">
			<Description><![CDATA["Glass Setback=1/2 Mullion Depth"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_gsb">
			<Description><![CDATA["Glass Setback"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.01</Value>
		</Length>
		<Length Name="buttGalzedJoint">
			<Description><![CDATA["Butt Glazed Joint"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.01</Value>
		</Length>
		<Material Name="gs_sash_mat">
			<Description><![CDATA["Horizontal Mullion Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>45</Value>
		</Material>
		<Material Name="gs_vertMull_mat">
			<Description><![CDATA["Vertical Mullion Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>45</Value>
		</Material>
		<Material Name="gs_glass_mat">
			<Description><![CDATA["Glass Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>24</Value>
		</Material>
		<Boolean Name="gs_full_edit">
			<Description><![CDATA["Show Editable Hotspots"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Integer Name="iRevealOnSymbol">
			<Description><![CDATA["Show Reveal on Symbol"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>

		<!-- titleStorefrontFrame: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="titleStorefrontFrame">
			<Description><![CDATA["Door Frame"]]></Description>
			<Fix/>
		</Title>
		<String Name="frameStyleLeft">
			<Description><![CDATA["Frame Style on Left Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Видимые Профили"]]></Value>
		</String>
		<Integer Name="iFrameStyleLeft">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="frameStyleRight">
			<Description><![CDATA["Frame Style on Right Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Видимые Профили"]]></Value>
		</String>
		<Integer Name="iFrameStyleRight">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="gs_wthk">
			<Description><![CDATA["Frame Thickness=Wall Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_frame_thk">
			<Description><![CDATA["Frame Thickness"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.08</Value>
		</Length>
		<Length Name="gs_frame_width">
			<Description><![CDATA["Frame Width"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.04</Value>
		</Length>

		<!-- gs_door_panel: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_door_panel">
			<Description><![CDATA["Door Panel"]]></Description>
			<Fix/>
		</Title>
		<Length Name="midRailWidth">
			<Description><![CDATA["Middle Rail Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.15</Value>
		</Length>
		<Length Name="bottomRailWidth">
			<Description><![CDATA["Bottom Rail Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.15</Value>
		</Length>
		<Boolean Name="gs_ds">
			<Description><![CDATA["Door Stop"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_mf">
			<Description><![CDATA["Middle Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_ds_thk">
			<Description><![CDATA["Door Stop Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.0254</Value>
		</Length>
		<Length Name="gs_ds_w">
			<Description><![CDATA["Door Stop Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.01</Value>
		</Length>
		<Length Name="gs_fw_side_left">
			<Description><![CDATA["Frame W. on Left Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.04</Value>
		</Length>
		<Length Name="gs_fw_side_right">
			<Description><![CDATA["Frame W. on Right Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.04</Value>
		</Length>
		<Length Name="gs_fw_lower">
			<Description><![CDATA["Frame Width Lower"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.15</Value>
		</Length>
		<Length Name="gs_fw_upper">
			<Description><![CDATA["Frame Width Upper"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.04</Value>
		</Length>

		<!-- titleEndFrame: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="titleEndFrame">
			<Description><![CDATA["End Frame Profile"]]></Description>
		</Title>
		<String Name="endFrameLeft">
			<Description><![CDATA["End Frame Profile on Left"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Обычный"]]></Value>
		</String>
		<Integer Name="iEndFrameLeft">
			<Description><![CDATA["End Frame Profile on Left"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="gs_stack_left">
			<Description><![CDATA["Joint Left"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Angle Name="leftCornerAngle">
			<Description><![CDATA["Left Angle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>90</Value>
		</Angle>
		<String Name="endFrameRight">
			<Description><![CDATA["End Frame Profile on Right"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Обычный"]]></Value>
		</String>
		<Integer Name="iEndFrameRight">
			<Description><![CDATA["End Frame Profile on Right"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="gs_stack_right">
			<Description><![CDATA["Joint Right"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Angle Name="rightCornerAngle">
			<Description><![CDATA["Right Angle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>90</Value>
		</Angle>
		<Boolean Name="gs_stack_top">
			<Description><![CDATA["Joint Upper"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_stack_bottom">
			<Description><![CDATA["Joint Lower"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Material Name="gs_frame_mat">
			<Description><![CDATA["Frame Surface"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>45</Value>
		</Material>
		<Material Name="gs_midrail_mat">
			<Description><![CDATA["Middle Frame Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>45</Value>
		</Material>
		<Material Name="gs_leafMidrail_mat">
			<Description><![CDATA["Leaf Middle Rail"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>45</Value>
		</Material>
		<Length Name="gs_fthk">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.08</Value>
		</Length>

		<!-- gs_sidelight: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_sidelight">
			<Description><![CDATA["Shape"]]></Description>
			<Fix/>
		</Title>
		<Boolean Name="bMiddleRail">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="midRailElevation">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.9</Value>
		</Length>
		<Boolean Name="gs_door_transom">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_transom_height">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.64</Value>
		</Length>
		<Boolean Name="gs_sidelight_left">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_sidelight_right">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_sidelight_width_left">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_sidelight_width_right">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>

		<!-- titleStorefrontPanel: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="titleStorefrontPanel">
			<Description><![CDATA["Door Panel"]]></Description>
		</Title>
		<Integer Name="iDoorPanelType">
			<Description><![CDATA["Panel Style"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="gs_cust_panel">
			<Description><![CDATA["Custom Panel Name"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_cust_p">
			<Description><![CDATA["Custom Panel Name"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="gs_rttl">
			<Description><![CDATA["Panel Width Ratio"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>50</Value>
		</Integer>
		<Length Name="gs_leaf_thk">
			<Description><![CDATA["Leaf Thickness"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.04</Value>
		</Length>

		<!-- bVentilationProfile: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Boolean Name="bVentilationProfile">
			<Description><![CDATA["Natural Ventilation"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="iVentilationProfileType">
			<Description><![CDATA["Natural Ventilation Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Length Name="VentilationProfileHeight">
			<Description><![CDATA["Profile Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.065</Value>
		</Length>
		<Length Name="VentilationProfileThickness">
			<Description><![CDATA["Profile Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.11</Value>
		</Length>

		<!-- gs_reveal_type_new: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<String Name="gs_reveal_type_new">
			<Description><![CDATA["Reveal Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA["Без Четверти - Торец"]]></Value>
		</String>
		<Integer Name="gs_reveal_type_int">
			<Description><![CDATA["Reveal Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="gs_reveal_type_bottom">
			<Description><![CDATA["Bottom Reveal Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Без Четверти"]]></Value>
		</String>
		<Integer Name="gs_reveal_type_bottom_int">
			<Description><![CDATA["Bottom Reveal Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Length Name="gs_wido_sill">
			<Description><![CDATA["Reveal Depth"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="AC_wido_sill">
			<Description><![CDATA["Reveal Depth"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<String Name="gs_reveal_type">
			<Description><![CDATA["Outer Reveal Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Без Четверти"]]></Value>
		</String>
		<Integer Name="gs_reveal_doubleOuterTypeInt">
			<Description><![CDATA["Reveal Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<String Name="gs_reveal_double_innerType">
			<Description><![CDATA["Inner Reveal Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Без Четверти"]]></Value>
		</String>
		<Integer Name="gs_reveal_doubleInnerTypeInt">
			<Description><![CDATA["Reveal Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Boolean Name="gs_reveal_uniform">
			<Description><![CDATA["Uniform Jamb Depth"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="gs_reveal_left">
			<Description><![CDATA["Jamb Depth Side 2"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_reveal_right">
			<Description><![CDATA["Jamb Depth"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_reveal_splayed_innerLeft">
			<Description><![CDATA["Inner Jamb Depth Side 2"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_reveal_splayed_innerRight">
			<Description><![CDATA["Inner Jamb Depth"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_reveal_double_innerLeft">
			<Description><![CDATA["Inner Jamb Depth Side 2"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_reveal_double_innerRight">
			<Description><![CDATA["Inner Jamb Depth"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_reveal_top">
			<Description><![CDATA["Head Jamb Depth"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_reveal_bottom">
			<Description><![CDATA["Sill Jamb Depth"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_reveal_splayed_innerTop">
			<Description><![CDATA["Inner Head Depth"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_reveal_splayed_innerBottom">
			<Description><![CDATA["Inner Sill Depth"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_reveal_double_innerTop">
			<Description><![CDATA["Inner Head Depth"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_reveal_double_innerBottom">
			<Description><![CDATA["Inner Sill Depth"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_reveal_outer_jamb_depth">
			<Description><![CDATA["Outer Jamb Depth"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.08</Value>
		</Length>
		<Angle Name="gs_reveal_left_angle">
			<Description><![CDATA["Angle Side 2"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>20</Value>
		</Angle>
		<Angle Name="gs_reveal_right_angle">
			<Description><![CDATA["Angle Side"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>20</Value>
		</Angle>
		<Angle Name="gs_reveal_top_angle">
			<Description><![CDATA["Upper Side Angle"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>20</Value>
		</Angle>
		<Angle Name="gs_reveal_bottom_angle">
			<Description><![CDATA["Bottom Side Angle"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>20</Value>
		</Angle>
		<Boolean Name="gs_reveal_auto_changed_by_cc">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<String Name="gs_handle_type">
			<Description><![CDATA["Door Handle Type"]]></Description>
			<Value><![CDATA["Ручка 6"]]></Value>
		</String>
		<Integer Name="gs_handle_type_m">
			<Description><![CDATA["Door Handle Type"]]></Description>
			<Value>13</Value>
		</Integer>
		<String Name="gs_cust_handle">
			<Description><![CDATA["Custom Handle"]]></Description>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_handle_type_out">
			<Description><![CDATA["Door Handle Type"]]></Description>
			<Value><![CDATA["Ручка 6"]]></Value>
		</String>
		<Integer Name="gs_handle_type_out_m">
			<Description><![CDATA["Door Handle Type"]]></Description>
			<Value>13</Value>
		</Integer>
		<String Name="gs_cust_handle_out">
			<Description><![CDATA["Custom Handle Out"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="gs_handle_type2_m">
			<Description><![CDATA["Door Handle Type"]]></Description>
			<Value>1</Value>
		</Integer>
		<String Name="gs_cust_handle2">
			<Description><![CDATA["Custom Handle"]]></Description>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_handle_type2_out">
			<Description><![CDATA["Door Handle Type Outside"]]></Description>
			<Value><![CDATA["Ручка Круглая 1"]]></Value>
		</String>
		<Integer Name="gs_handle_type2_out_m">
			<Description><![CDATA["Door Handle Type Outside"]]></Description>
			<Value>2</Value>
		</Integer>
		<String Name="gs_cust_handle2_out">
			<Description><![CDATA["Custom Handle Outside"]]></Description>
			<Value><![CDATA[""]]></Value>
		</String>
		<Length Name="gs_han_height">
			<Description><![CDATA["Handle Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.914</Value>
		</Length>
		<Length Name="gs_han_height2">
			<Description><![CDATA["Handle Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.914</Value>
		</Length>
		<Length Name="gs_han_pos">
			<Description><![CDATA["Handle Position"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_han_pos2">
			<Description><![CDATA["Handle Position"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Boolean Name="bKickBoardOut">
			<Description><![CDATA["Kick Board Outside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bKickBoardIn">
			<Description><![CDATA["Kick Board Inside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="kickBoardHeight">
			<Description><![CDATA["Kick Board Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Boolean Name="bKickBoardOut2">
			<Description><![CDATA["Kick Board Outside 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bKickBoardIn2">
			<Description><![CDATA["Kick Board Inside 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="kickBoardHeight2">
			<Description><![CDATA["Kick Board Height 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Length Name="leafFrameWidth">
			<Description><![CDATA["Leaf Frame Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.08</Value>
		</Length>
		<Material Name="gs_leaf_mat">
			<Description><![CDATA["Leaf Surface"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>45</Value>
		</Material>
		<Material Name="gs_handle_mat">
			<Description><![CDATA["Handle Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>47</Value>
		</Material>
		<Material Name="gs_lock_mat">
			<Description><![CDATA["Lock Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>40</Value>
		</Material>
		<Material Name="gs_handle_ac_mat">
			<Description><![CDATA["Handle Accessories Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>40</Value>
		</Material>
		<Material Name="matKickBoardOut">
			<Description><![CDATA["Kick Board Surface Outside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>11</Value>
		</Material>
		<Material Name="matKickBoardIn">
			<Description><![CDATA["Kick Board Surface Inside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>11</Value>
		</Material>

		<!-- gs_turn_plaster: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_turn_plaster">
			<Description><![CDATA["Turn Plaster"]]></Description>
			<Fix/>
		</Title>
		<Boolean Name="gs_useWallFinishSkin">
			<Description><![CDATA["Use Wall Finish Component"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_maxPlasterThk">
			<Description><![CDATA["Plaster Thickness Limit"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.04</Value>
		</Length>
		<Boolean Name="gs_bAutoTurnOut">
			<Description><![CDATA["Auto Turn Inside Face Plaster"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Integer Name="gs_bOverOut">
			<Description><![CDATA["Turn Inside Face Plaster"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Boolean Name="gs_bAutoTurnIn">
			<Description><![CDATA["Auto Turn Outside Face Plaster"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Integer Name="gs_bOverIn">
			<Description><![CDATA["Turn Outside Face Plaster"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Boolean Name="gs_turn_plaster_dim_2D">
			<Description><![CDATA["Dimensionable on 2D"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_turn_plaster_show_3D">
			<Description><![CDATA["Show in 3D"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- gs_closure_type: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<String Name="gs_closure_type">
			<Description><![CDATA["Closure Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA["Без Замыкания"]]></Value>
		</String>
		<Integer Name="gs_closure_type_int">
			<Description><![CDATA["Closure Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="gs_cavity_side">
			<Description><![CDATA["Turn Skin on Side"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Обе"]]></Value>
		</String>
		<Integer Name="iCavityClosureSide">
			<Description><![CDATA["Turn Skin on Side"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="gs_nTurn">
			<Description><![CDATA["Number of Skins to Turn"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="gs_nTurnDir">
			<Description><![CDATA["Number from"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Снаружи"]]></Value>
		</String>
		<Integer Name="iCavityClosureTurnDir">
			<Description><![CDATA["Number from"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="gs_cc_dutch_ShowLeft">
			<Description><![CDATA["Place Closer on Side 2"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_cc_dutch_ShowRight">
			<Description><![CDATA["Place Closer on Side 1"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_cc_dutch_ShowTop">
			<Description><![CDATA["Place Closer on Top"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_cc_dutch_ShowBottom">
			<Description><![CDATA["Place Closer on Bottom"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="gs_cc_dutch_ClosureToSkin">
			<Description><![CDATA["Place Closer to Skin"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="gs_cc_dutch_ClosureToSide_str">
			<Description><![CDATA["Place Closer from Side"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="gs_cc_dutch_ClosureToSide">
			<Description><![CDATA["Place Closer from Side"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="gs_cc_dutch_GapAtOutsideSkin">
			<Description><![CDATA["Gap at Outside Skin"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_cc_dutch_TurnToClosure">
			<Description><![CDATA["Turn Skin to Closer"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_cc_dutch_TurnToClosureOffs">
			<Description><![CDATA["Distance of Skin from Closer"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_cc_dutch_widthJoint">
			<Description><![CDATA["Closer Width"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.038</Value>
		</Length>
		<Length Name="gs_cc_dutch_thkJoint">
			<Description><![CDATA["Closer Thickness"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Boolean Name="gs_bJoint">
			<Description><![CDATA["Insert Insulation Strip"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_showJoint">
			<Description><![CDATA["Show Insulation Strip"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="gs_thkJoint">
			<Description><![CDATA["Strip Thickness"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.025</Value>
		</Length>
		<PenColor Name="gs_penJoint">
			<Description><![CDATA["Contour Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>100</Value>
		</PenColor>
		<LineType Name="gs_ltJoint">
			<Description><![CDATA["Contour Line Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</LineType>
		<FillPattern Name="gs_fillJoint">
			<Description><![CDATA["Fill Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>17</Value>
		</FillPattern>
		<PenColor Name="gs_penJointFg">
			<Description><![CDATA["Fill Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</PenColor>
		<PenColor Name="gs_penJointBg">
			<Description><![CDATA["Fill Background Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>93</Value>
		</PenColor>
		<Boolean Name="gs_cc_dutch_matJointCustom">
			<Description><![CDATA["Custom Surface"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Material Name="gs_cc_dutch_matJoint">
			<Description><![CDATA["Surface"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Length Name="gs_widthPlug">
			<Description><![CDATA["Profile Width"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.075</Value>
		</Length>
		<PenColor Name="gs_penPlug">
			<Description><![CDATA["Contour Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>100</Value>
		</PenColor>
		<LineType Name="gs_ltPlug">
			<Description><![CDATA["Contour Line Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</LineType>
		<FillPattern Name="gs_fillPlug">
			<Description><![CDATA["Fill Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>17</Value>
		</FillPattern>
		<PenColor Name="gs_penPlugFg">
			<Description><![CDATA["Fill Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</PenColor>
		<PenColor Name="gs_penPlugBg">
			<Description><![CDATA["Fill Background Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>93</Value>
		</PenColor>
		<Length Name="gs_custom_cc_array_left">
			<Description><![CDATA["Left Side Skin Data"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="8" SecondDimension="4">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0.015</AVal>
				<AVal Column="3" Row="1">0</AVal>
				<AVal Column="4" Row="1">1</AVal>
				<AVal Column="1" Row="2">0</AVal>
				<AVal Column="2" Row="2">0.015</AVal>
				<AVal Column="3" Row="2">0</AVal>
				<AVal Column="4" Row="2">1</AVal>
				<AVal Column="1" Row="3">0</AVal>
				<AVal Column="2" Row="3">0.015</AVal>
				<AVal Column="3" Row="3">0</AVal>
				<AVal Column="4" Row="3">1</AVal>
				<AVal Column="1" Row="4">0</AVal>
				<AVal Column="2" Row="4">0.015</AVal>
				<AVal Column="3" Row="4">0</AVal>
				<AVal Column="4" Row="4">1</AVal>
				<AVal Column="1" Row="5">0</AVal>
				<AVal Column="2" Row="5">0.015</AVal>
				<AVal Column="3" Row="5">0</AVal>
				<AVal Column="4" Row="5">1</AVal>
				<AVal Column="1" Row="6">0</AVal>
				<AVal Column="2" Row="6">0.015</AVal>
				<AVal Column="3" Row="6">0</AVal>
				<AVal Column="4" Row="6">1</AVal>
				<AVal Column="1" Row="7">0</AVal>
				<AVal Column="2" Row="7">0.015</AVal>
				<AVal Column="3" Row="7">0</AVal>
				<AVal Column="4" Row="7">1</AVal>
				<AVal Column="1" Row="8">0</AVal>
				<AVal Column="2" Row="8">0.015</AVal>
				<AVal Column="3" Row="8">0</AVal>
				<AVal Column="4" Row="8">1</AVal>
			</ArrayValues>
		</Length>
		<Length Name="gs_custom_cc_array_right">
			<Description><![CDATA["Right Side Skin Data"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="8" SecondDimension="4">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0.015</AVal>
				<AVal Column="3" Row="1">0</AVal>
				<AVal Column="4" Row="1">1</AVal>
				<AVal Column="1" Row="2">0</AVal>
				<AVal Column="2" Row="2">0.015</AVal>
				<AVal Column="3" Row="2">0</AVal>
				<AVal Column="4" Row="2">1</AVal>
				<AVal Column="1" Row="3">0</AVal>
				<AVal Column="2" Row="3">0.015</AVal>
				<AVal Column="3" Row="3">0</AVal>
				<AVal Column="4" Row="3">1</AVal>
				<AVal Column="1" Row="4">0</AVal>
				<AVal Column="2" Row="4">0.015</AVal>
				<AVal Column="3" Row="4">0</AVal>
				<AVal Column="4" Row="4">1</AVal>
				<AVal Column="1" Row="5">0</AVal>
				<AVal Column="2" Row="5">0.015</AVal>
				<AVal Column="3" Row="5">0</AVal>
				<AVal Column="4" Row="5">1</AVal>
				<AVal Column="1" Row="6">0</AVal>
				<AVal Column="2" Row="6">0.015</AVal>
				<AVal Column="3" Row="6">0</AVal>
				<AVal Column="4" Row="6">1</AVal>
				<AVal Column="1" Row="7">0</AVal>
				<AVal Column="2" Row="7">0.015</AVal>
				<AVal Column="3" Row="7">0</AVal>
				<AVal Column="4" Row="7">1</AVal>
				<AVal Column="1" Row="8">0</AVal>
				<AVal Column="2" Row="8">0.015</AVal>
				<AVal Column="3" Row="8">0</AVal>
				<AVal Column="4" Row="8">1</AVal>
			</ArrayValues>
		</Length>
		<Integer Name="iCustomCCEditJambSide">
			<Description><![CDATA["Edited Jamb Side"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="iCustomCCEditWallSide">
			<Description><![CDATA["Edited Wall Side"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="iCustomCCEditSkin">
			<Description><![CDATA["Edited Skin Number"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="gs_custom_cc_turn_in">
			<Description><![CDATA["Turn-in Skin"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_custom_cc_plaster">
			<Description><![CDATA["Consider Skin as Plaster"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="iCustomCCThicknessType">
			<Description><![CDATA["Turn-in Thickness"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="gs_custom_cc_thickness">
			<Description><![CDATA["Custom Thickness"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.015</Value>
		</Length>
		<Integer Name="iCustomCCOrientation">
			<Description><![CDATA["Hatch Orientation"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="gs_custom_cc_separator">
			<Description><![CDATA["Separating Line at Turn-in"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<PenColor Name="gs_custom_cc_separator_pen">
			<Description><![CDATA["Separating Line Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</PenColor>
		<Length Name="gs_custom_cc_overhang">
			<Description><![CDATA["Skin Overhang to Frame Depth"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Boolean Name="gs_custom_cc_last_sel_side">
			<Description><![CDATA["Last Selected Side"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_closure_auto_changed">
			<Description><![CDATA["Closure Method Changed Automatically"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- gs_head_symbol: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Boolean Name="gs_head_symbol">
			<Description><![CDATA["Head Depth on Symbol"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<LineType Name="gs_head_symbol_line">
			<Description><![CDATA["Head Depth Symbol Line Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>21</Value>
		</LineType>
		<PenColor Name="gs_head_symbol_pen">
			<Description><![CDATA["Head Depth Symbol Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>6</Value>
		</PenColor>

		<!-- gs_door_oversize: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_door_oversize">
			<Description><![CDATA["Opening Oversize"]]></Description>
		</Title>
		<Length Name="gs_left_oversize">
			<Description><![CDATA["Left Opening Oversize"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_right_oversize">
			<Description><![CDATA["Right Opening Oversize"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_upper_oversize">
			<Description><![CDATA["Upper Opening Oversize"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_lower_oversize">
			<Description><![CDATA["Lower Opening Oversize"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>

		<!-- gs_2D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_2D_representation">
			<Description><![CDATA["2D and Section Representation"]]></Description>
			<Fix/>
		</Title>
		<Integer Name="iDWDet2D">
			<Description><![CDATA["2D Detail Level"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Angle Name="gs_open_2D">
			<Description><![CDATA["Opening Angle in 2D"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>90</Value>
		</Angle>
		<Boolean Name="gs_bSameLineTypeForLeaves">
			<Description><![CDATA["Same Line Type for Leaves"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<PenColor Name="gs_pen_2D">
			<Description><![CDATA["Frame Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>23</Value>
		</PenColor>
		<PenColor Name="gs_frame_pen_cont">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>23</Value>
		</PenColor>
		<PenColor Name="gs_pen_mull">
			<Description><![CDATA["Grid Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>43</Value>
		</PenColor>
		<PenColor Name="gs_pen_glass">
			<Description><![CDATA["Glass Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>43</Value>
		</PenColor>
		<PenColor Name="gs_leaf_pen_2D">
			<Description><![CDATA["Leaf Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>43</Value>
		</PenColor>
		<String Name="gs_wcont_line">
			<Description><![CDATA["Wall Contour Line"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA["Откл."]]></Value>
		</String>
		<Integer Name="iWallContourLine">
			<Description><![CDATA["Wall Contour Line"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<LineType Name="gs_wcont_line_in">
			<Description><![CDATA["Wall Contour Line Type Inside"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</LineType>
		<LineType Name="gs_wcont_line_out">
			<Description><![CDATA["Wall Contour Line Type Outside"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</LineType>
		<LineType Name="gs_wcont_hidden_line_in">
			<Description><![CDATA["Hidden Wall Contour Line Type Inside"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>4</Value>
		</LineType>
		<LineType Name="gs_wcont_hidden_line_out">
			<Description><![CDATA["Hidden Wall Contour Line Type Outside"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>4</Value>
		</LineType>
		<PenColor Name="gs_wcont_line_pen">
			<Description><![CDATA["Wall Contour Line Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3</Value>
		</PenColor>
		<Boolean Name="gs_bFills">
			<Description><![CDATA["Use Fills"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<FillPattern Name="gs_wallhole_fill">
			<Description><![CDATA["Plan Symbol Fill Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_wallhole_pen_fg">
			<Description><![CDATA["Plan Symbol Fill Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_wallhole_pen_bg">
			<Description><![CDATA["Plan Symbol Fill Background Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<FillPattern Name="gs_fillFr">
			<Description><![CDATA["Frame Fill Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_penFr_fg">
			<Description><![CDATA["Frame Fill Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>103</Value>
		</PenColor>
		<PenColor Name="gs_penFr_bg">
			<Description><![CDATA["Frame Fill Background Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<FillPattern Name="gs_fillLeaf">
			<Description><![CDATA["Leaf Fill Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_penLeaf_fg">
			<Description><![CDATA["Leaf Fill Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_penLeaf_bg">
			<Description><![CDATA["Leaf Fill Background Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<FillPattern Name="gs_FillSdl">
			<Description><![CDATA["Uncut Fill Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_penSdl_fg">
			<Description><![CDATA["Uncut Fill Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_penSdl_bg">
			<Description><![CDATA["Uncut Fill Pen Background"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<FillPattern Name="gs_gsect">
			<Description><![CDATA["Glass Section Fill Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>28</Value>
		</FillPattern>
		<PenColor Name="gs_penGlass_fg">
			<Description><![CDATA["Glass Section Fill Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</PenColor>
		<PenColor Name="gs_penGlass_bg">
			<Description><![CDATA["Glass Section Fill Background Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</PenColor>
		<Boolean Name="bOverride_MVO_2D">
			<Description><![CDATA["Override MVO for 2D Symbolic Display"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="or_bOplines2D">
			<Description><![CDATA[""]]></Description>
			<Value>1</Value>
		</Boolean>
		<LineType Name="or_swingLineType">
			<Description><![CDATA["Opening Line Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</LineType>
		<LineType Name="or_swingLineType2">
			<Description><![CDATA["Secondary Opening Line Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>4</Value>
		</LineType>
		<String Name="or_SwingType">
			<Description><![CDATA["Opening Line Shape"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Криволинейная"]]></Value>
		</String>
		<Integer Name="or_iSwingType">
			<Description><![CDATA["Opening Line Shape"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="or_SlidingType">
			<Description><![CDATA["Opening Line Shape"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Нет"]]></Value>
		</String>
		<Integer Name="or_iSlidingType">
			<Description><![CDATA["Opening Line Shape"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<PenColor Name="or_opLinePen">
			<Description><![CDATA["Opening Line Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3</Value>
		</PenColor>
		<Integer Name="or_iOpLinePen">
			<Description><![CDATA["Opening Line Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>3</Value>
		</Integer>
		<FillPattern Name="gs_ventProfile_fill">
			<Description><![CDATA["Ventilation Section Fill Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>16</Value>
		</FillPattern>
		<PenColor Name="gs_ventProfile_pen_fg">
			<Description><![CDATA["Ventilation Section Fill Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_ventProfile_pen_bg">
			<Description><![CDATA["Ventilation Section Fill Background Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>

		<!-- gs_3D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_3D_representation">
			<Description><![CDATA["3D Representation"]]></Description>
			<Fix/>
		</Title>
		<Boolean Name="gs_allmat">
			<Description><![CDATA["Uniform Surfaces"]]></Description>
			<Value>0</Value>
		</Boolean>
		<String Name="gs_detlevel_3D">
			<Description><![CDATA["3D Detail Level"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Детальный"]]></Value>
		</String>
		<Integer Name="iDWDet3D">
			<Description><![CDATA["3D Detail Level"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="gs_3DDetEnable">
			<Description><![CDATA["3D Detail Level Enable"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>14</Value>
		</Integer>
		<Angle Name="gs_open_3D">
			<Description><![CDATA["Opening Angle in 3D"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<String Name="gs_SashText_typ">
			<Description><![CDATA["Frame Element Joinery"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Соединение Встык"]]></Value>
		</String>
		<Integer Name="gs_SashText_typ_num">
			<Description><![CDATA["Frame Element Joinery"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<PenColor Name="gs_frame_pen">
			<Description><![CDATA["Frame Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3</Value>
		</PenColor>
		<PenColor Name="gs_leaf_pen">
			<Description><![CDATA["Leaf Contour Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3</Value>
		</PenColor>
		<PenColor Name="gs_glass_pen">
			<Description><![CDATA["Glass Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3</Value>
		</PenColor>
		<Integer Name="res">
			<Description><![CDATA["Curve Resolution"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>12</Value>
		</Integer>
		<Boolean Name="gs_shadow">
			<Description><![CDATA["Shadow"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="bOverride_MVO_3D">
			<Description><![CDATA["Override MVO for 3D Projections"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="or_bOplines3d">
			<Description><![CDATA["Show Opening Line"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<String Name="or_opLineType3dIn">
			<Description><![CDATA["Line Type Opening Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Штриховая"]]></Value>
		</String>
		<Integer Name="or_iOpLineType3dIn">
			<Description><![CDATA["Line Type Opening Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="or_opLineType3dOut">
			<Description><![CDATA["Line Type Opposite Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Сплошная Линия"]]></Value>
		</String>
		<Integer Name="or_iOpLineType3dOut">
			<Description><![CDATA["Line Type Opposite Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="or_iOpLineType3dSecondary">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<String Name="or_oplineStyle">
			<Description><![CDATA["Line Orientation"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Ручка"]]></Value>
		</String>
		<Integer Name="or_iOplineStyle">
			<Description><![CDATA["Line Orientation"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="bHideOplineStyle">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bLockOplineStyle">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bEnableSecondaryOpLineTypes">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bEnableSwingLineTurnOff">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_bDifferentSashAndSwing2D">
			<Description><![CDATA["Different pen for sash and swing in 2D"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Boolean>

		<!-- gs_door_material: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_door_material">
			<Description><![CDATA["Surfaces"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
		</Title>
		<Boolean Name="bLinkSurfacesFrameSash">
			<Description><![CDATA["Uniform Surfaces"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="stored_material">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="4" SecondDimension="6">
				<AVal Column="1" Row="1">45</AVal>
				<AVal Column="2" Row="1">45</AVal>
				<AVal Column="3" Row="1">45</AVal>
				<AVal Column="4" Row="1">45</AVal>
				<AVal Column="5" Row="1">45</AVal>
				<AVal Column="6" Row="1">45</AVal>
				<AVal Column="1" Row="2">0</AVal>
				<AVal Column="2" Row="2">0</AVal>
				<AVal Column="3" Row="2">0</AVal>
				<AVal Column="4" Row="2">0</AVal>
				<AVal Column="5" Row="2">0</AVal>
				<AVal Column="6" Row="2">0</AVal>
				<AVal Column="1" Row="3">-9999</AVal>
				<AVal Column="2" Row="3">0</AVal>
				<AVal Column="3" Row="3">0</AVal>
				<AVal Column="4" Row="3">0</AVal>
				<AVal Column="5" Row="3">0</AVal>
				<AVal Column="6" Row="3">0</AVal>
				<AVal Column="1" Row="4">0</AVal>
				<AVal Column="2" Row="4">0</AVal>
				<AVal Column="3" Row="4">0</AVal>
				<AVal Column="4" Row="4">0</AVal>
				<AVal Column="5" Row="4">0</AVal>
				<AVal Column="6" Row="4">0</AVal>
			</ArrayValues>
		</Integer>
		<Material Name="gs_ventProfile_mat">
			<Description><![CDATA["Ventilation Profile Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>45</Value>
		</Material>

		<!-- ac_details: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="ac_details">
			<Description><![CDATA["Computed Oversize Values"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
		</Title>
		<Length Name="ac_left_oversize">
			<Description><![CDATA["AC Left Opening Oversize"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.04</Value>
		</Length>
		<Length Name="ac_right_oversize">
			<Description><![CDATA["AC Right Opening Oversize"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.04</Value>
		</Length>
		<Length Name="ac_upper_oversize">
			<Description><![CDATA["AC Upper Opening Oversize"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.04</Value>
		</Length>
		<Length Name="ac_lower_oversize">
			<Description><![CDATA["AC Lower Opening Oversize"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Integer Name="gs_ui_current_page">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>6</Value>
		</Integer>
		<Integer Name="gs_ui_sub_tabpage_closure">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="ac_wido_hide_options">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>2</Value>
		</Integer>

		<!-- gs_min_space: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_min_space">
			<Description><![CDATA["Minimal Space"]]></Description>
		</Title>
		<Length Name="msOpeningSideWidth2">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="msOpeningSideWidth1">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ms_openingSDepth">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="msOppositeSideWidth2">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="msOppositeSideWidth1">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ms_oppositeSDepth">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Integer Name="gs_SWE_listParams_contr">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Boolean Name="bSimpleLeafin50">
			<Description><![CDATA["Simple Leaf in 1:50"]]></Description>
			<Value>0</Value>
		</Boolean>

		<!-- gs_list: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_list">
			<Description><![CDATA["Parameters for Listing"]]></Description>
			<Fix/>
		</Title>
		<Boolean Name="gs_bOpeningToZone">
			<Description><![CDATA["Door belongs to the Zone into which it opens"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<RealNum Name="gs_list_cost">
			<Description><![CDATA["Cost"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="gs_list_manufacturer">
			<Description><![CDATA["Manufacturer"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_note">
			<Description><![CDATA["Note/Remarks"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_location_as">
			<Description><![CDATA["Location as"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Специальный"]]></Value>
		</String>
		<String Name="gs_list_location">
			<Description><![CDATA["Location"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_accessories">
			<Description><![CDATA["Accessories"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_glazing">
			<Description><![CDATA["Glazing"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_headdet">
			<Description><![CDATA["Header Detail"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_jambdet">
			<Description><![CDATA["Jamb Detail"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_silldet">
			<Description><![CDATA["Sill Detail"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_hwsetno">
			<Description><![CDATA["Hardware Set"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_hwkeyside">
			<Description><![CDATA["Hardware Key Side Room Number"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_optype">
			<Description><![CDATA["Operation Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_finish">
			<Description><![CDATA["Finish"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_elevation">
			<Description><![CDATA["Elevation"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_hings">
			<Description><![CDATA["Hinges"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_lockset">
			<Description><![CDATA["Lockset"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<RealNum Name="gs_list_glassarea_tmp">
			<Description><![CDATA["Total Glazed Area"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<Boolean Name="gs_list_glassarea_override">
			<Description><![CDATA["Override Glazed Area"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<RealNum Name="gs_list_glassarea">
			<Description><![CDATA["Total Glazed Area"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<RealNum Name="gs_list_glassperimeter">
			<Description><![CDATA["Total Glass Perimeter"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="gs_list_heattransfer">
			<Description><![CDATA["U-value"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_firerating">
			<Description><![CDATA["Fire Rating"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Boolean Name="gs_list_bInsulation">
			<Description><![CDATA["Insulation"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_list_FR_bSelfClosing">
			<Description><![CDATA["Self-Closing"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_list_bSmokeProtection">
			<Description><![CDATA["Smoke Protection Door"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<String Name="gs_list_SmokeTestTemp">
			<Description><![CDATA["Smoke Test Temperature"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["200"]]></Value>
		</String>
		<String Name="gs_list_FR_indexSelfClosing">
			<Description><![CDATA["Insulation Index"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["2"]]></Value>
		</String>
		<String Name="gs_list_FR_expression">
			<Description><![CDATA["Fire Rating Expression"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="iNEDFireRating">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<RealNum Name="gs_list_freeAirPerformance">
			<Description><![CDATA["Free Air Performance (mm2/l/m)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="gs_list_acousticrating">
			<Description><![CDATA["Acoustic Rating"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_Type">
			<Description><![CDATA["Group Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Другой"]]></Value>
		</String>
		<Integer Name="iFMType">
			<Description><![CDATA["Group Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>25</Value>
		</Integer>
		<String Name="FM_InventoryNumber">
			<Description><![CDATA["Inventory No."]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_SerialNumber">
			<Description><![CDATA["Serial No."]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_ProductionYear">
			<Description><![CDATA["Production Year"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<RealNum Name="FM_ObjectWeight">
			<Description><![CDATA["Object Weight"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="FM_ObjectWeightUnit">
			<Description><![CDATA["Object Weight Unit"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["кг"]]></Value>
		</String>
		<Integer Name="gs_list_orientationDef_m">
			<Description><![CDATA["Door Orientation Definition"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<String Name="ac_OpeningSide">
			<Description><![CDATA["Door Orientation"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value><![CDATA["Л"]]></Value>
		</String>
		<Boolean Name="gs_show_UKListParams">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<String Name="gs_list_frametype">
			<Description><![CDATA["Frame Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_firesignage">
			<Description><![CDATA["Fire Signage"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_visionpanel_type">
			<Description><![CDATA["Vision Panel Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Нет Видеопанели"]]></Value>
		</String>
		<String Name="gs_list_doorleafwidths">
			<Description><![CDATA["Door Leaf Widths"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value><![CDATA["2320"]]></Value>
		</String>
		<Integer Name="ifc_optype">
			<Description><![CDATA["IFC Operation"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="ifc_LiningDepth">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.08</Value>
		</Length>
		<Length Name="ifc_LiningThickness">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.04</Value>
		</Length>
		<Length Name="ifc_LiningOffset">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ifc_CasingDepth">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ifc_CasingThickness">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ifc_ThresholdDepth">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ifc_ThresholdThickness">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ifc_ThresholdOffset">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ifc_TransomOffset">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ifc_TransomThickness">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ifc_DoorPanel">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="4">
				<AVal Column="1" Row="1">0.04</AVal>
				<AVal Column="2" Row="1">1.00869565217</AVal>
				<AVal Column="3" Row="1">1</AVal>
				<AVal Column="4" Row="1">2</AVal>
			</ArrayValues>
		</Length>
		<String Name="ifc_optypestr">
			<Description><![CDATA["IFC Operation"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value><![CDATA["Дверь Однопольная Распашная"]]></Value>
		</String>

		<!-- gs_onorm_Title: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_onorm_Title">
			<Description><![CDATA["Additional Listing Parameters"]]></Description>
		</Title>
		<String Name="gs_onorm_width_auto">
			<Description><![CDATA["Additional Width Value"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_width">
			<Description><![CDATA["Additional Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_height_auto">
			<Description><![CDATA["Additional Height Value"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_height">
			<Description><![CDATA["Additional Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_firerating">
			<Description><![CDATA["Additional Fire Rating"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_transom_firerating">
			<Description><![CDATA["Transoms"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_doornum">
			<Description><![CDATA["Door Number"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_locking">
			<Description><![CDATA["Locking Number"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_mat1">
			<Description><![CDATA["Additional Material 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_mat2">
			<Description><![CDATA["Additional Material 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_col1">
			<Description><![CDATA["Color 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_col2">
			<Description><![CDATA["Color 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_surface">
			<Description><![CDATA["Cleaning Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_reveal">
			<Description><![CDATA["Additional Reveal"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_frame">
			<Description><![CDATA["Additional Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_manufacturer">
			<Description><![CDATA["Additional Manufacturer"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_id">
			<Description><![CDATA["ID Number"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_doortype">
			<Description><![CDATA["Additional Door Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_sashnumber">
			<Description><![CDATA["Number of Sashes"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_construction">
			<Description><![CDATA["Construction"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_glassarea">
			<Description><![CDATA["Glass Area"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_escape">
			<Description><![CDATA["Escape"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_aks">
			<Description><![CDATA["AKS Number"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_product">
			<Description><![CDATA["Product"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_leistungbuch">
			<Description><![CDATA["Collection of Specifications ID"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_description">
			<Description><![CDATA["Additional Description"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_customtext1">
			<Description><![CDATA["Additional Information 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_customtext2">
			<Description><![CDATA["Additional Information 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_acousticrating">
			<Description><![CDATA["Additional Acoustic Rating"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_heattransfer">
			<Description><![CDATA["Additional Heat Transfer"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_admission">
			<Description><![CDATA["Admission Date"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_modification">
			<Description><![CDATA["Modification Date"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_zoneinside_auto">
			<Description><![CDATA["Zone Number Inside Value"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_zoneinside">
			<Description><![CDATA["Zone Number Inside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_zoneoutside_auto">
			<Description><![CDATA["Zone Number Outside Value"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_zoneoutside">
			<Description><![CDATA["Zone Number Outside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="LibraryLangCode">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value><![CDATA["RUS"]]></Value>
		</String>
		<Integer Name="gs_leaf_optype_m">
			<Description><![CDATA["Opening Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="gs_optype_m_02">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="gs_optype_m_05">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="gs_optype_m_06">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="gs_optype_m_09">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="gs_optype_m_10">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="casementIDForLabel">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="3" SecondDimension="4">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0</AVal>
				<AVal Column="3" Row="1">0</AVal>
				<AVal Column="4" Row="1">0</AVal>
				<AVal Column="1" Row="2">0</AVal>
				<AVal Column="2" Row="2">-1</AVal>
				<AVal Column="3" Row="2">0</AVal>
				<AVal Column="4" Row="2">0</AVal>
				<AVal Column="1" Row="3">0</AVal>
				<AVal Column="2" Row="3">0</AVal>
				<AVal Column="3" Row="3">0</AVal>
				<AVal Column="4" Row="3">0</AVal>
			</ArrayValues>
		</Integer>
		<Integer Name="gs_subHandle">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="gs_subHandle2">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="gs_ClosureTypeEnable">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>3855</Value>
		</Integer>
		<String Name="stOpeningSide">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="2" SecondDimension="0">
				<AVal Row="1"><![CDATA["Л"]]></AVal>
				<AVal Row="2"><![CDATA["П"]]></AVal>
			</ArrayValues>
		</String>
	</Parameters>
	<WDFrameExpression>
		<F><![CDATA["gs_fthk"]]></F>
		<F><![CDATA["ac_left_oversize"]]></F>
		<F><![CDATA["ac_right_oversize"]]></F>
		<F><![CDATA["ac_upper_oversize"]]></F>
		<F><![CDATA["ac_lower_oversize"]]></F>
		<F><![CDATA["(K_ + E~ * (C_ - gs_fthk - 2*K_))*((abs(J_)<0.0001)-0.5)*2"]]></F>
	</WDFrameExpression>
</ParamSection>

<CalledMacros SectVersion="2" SectionFlags="0" SubIdent="0">
	<Macro>
		<MName><![CDATA["GS Storefront Door Functions"]]></MName>
		<MainGUID>AAB48003-7FFF-486F-BCCC-5242D4C2427D</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["DoorLeafPanels"]]></MName>
		<MainGUID>FCBA42BE-2BE9-4F75-A436-507EFB3371DB</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["Ventilation_profile"]]></MName>
		<MainGUID>58676F56-A0A0-4A02-ADA8-565DD41323CF</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["ui_tabIDlistHierarchy_m"]]></MName>
		<MainGUID>8D3FA40B-0E02-4FD9-B890-741FFA7BCDC8</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["DoorHandle"]]></MName>
		<MainGUID>44E863BE-97B0-4F78-9DAC-1080C4B26C0A</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["ui_StoreFront_Panels_m"]]></MName>
		<MainGUID>48F185FB-BEE1-42E0-AC85-09D1E3729782</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["ui_StoreFront_Glass_m"]]></MName>
		<MainGUID>8E9B8502-4805-498E-A194-F5CFA15C044A</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["ui_StoreFront_Frame_m"]]></MName>
		<MainGUID>DFAF3BD3-1BC9-4000-83C1-DAA6EF6D4456</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["ui_StoreFront_DoorLeaves_m"]]></MName>
		<MainGUID>D2FB4AA9-A1E6-4C2D-B405-D0F0506074B9</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["ui_FloorPlanSection_m"]]></MName>
		<MainGUID>508DA90C-2840-4013-98E1-FA6BE7B316EA</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["IFC_optype_door"]]></MName>
		<MainGUID>8CA8F343-A708-4E60-9792-3E34AECF7A37</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["FM_types"]]></MName>
		<MainGUID>2759D2DF-AA8E-44D1-AD1D-261581266B34</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["SWE_ListParameters_control"]]></MName>
		<MainGUID>6DD7ED35-D322-49D1-91F8-8793D2FCDA8B</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["Onorm_Door"]]></MName>
		<MainGUID>B7AA23E3-280A-4528-8AAB-D248F21A6775</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["winDoorCasIDmacro"]]></MName>
		<MainGUID>BC29598A-92AC-418A-80B4-F54D1EC54735</MainGUID>
	</Macro>
</CalledMacros>

<Copyright SectVersion="1" SectionFlags="0" SubIdent="0">
	<Author>GRAPHISOFT</Author>
	<License>
		<Type>CC BY-ND</Type>
		<Version>3.0</Version>
	</License>
</Copyright>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_FWM SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_FWM>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_BWM SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_BWM>

<Keywords SectVersion="1" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Keywords>

</Symbol>
