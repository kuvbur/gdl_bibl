<?xml version="1.0" encoding="UTF-8"?>
<Symbol IsArchivable="true" IsPlaceable="false" MainGUID="25628ADB-F01F-4FCD-A48B-4F3BE3430C28" MigrationValue="Normal" Owner="1196638531" Signature="1196644685" Version="38">
<Ancestry SectVersion="1" SectionFlags="0" SubIdent="0" Template="false">
	<MainGUID>F938E33A-329D-4A36-BE3E-85E126820996</MainGUID>
	<MainGUID>103E8D2C-8230-42E1-9597-46F84CCE28C0</MainGUID>
	<MainGUID>6ACDA889-69B2-4EC5-936C-CB1DA7032A92</MainGUID>
	<MainGUID>F6AE9687-2BC7-4D47-88C9-8F793E1DE2D6</MainGUID>
	<MainGUID>4ABD0A6E-634B-4931-B3AA-9BEE01F35CDF</MainGUID>
	<MainGUID>E016C384-9D83-4B78-AB34-2BC73671661A</MainGUID>
</Ancestry>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_3D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
! Contact person: <SzL, NJ>

lod3D = 2

gs_fillFr		= gs_bFills * gs_fillFr
gs_penFr_fg		= gs_bFills * gs_penFr_fg
gs_penFr_bg		= gs_bFills * gs_penFr_bg

gs_gsect		= gs_bFills * gs_gsect
gs_penGlass_fg	= gs_bFills * gs_penGlass_fg
gs_penGlass_bg	= gs_bFills * gs_penGlass_bg

xpltp = 0
xprtp = 0
xpr = 0
xpl = 0

! =============================================================================
! GS Storefront Window Functions
! =============================================================================

call "GS Storefront Window Functions",
	parameters all	lod3D						= lod3D,
					bEnableVentilationProfile	= bEnableVentilationProfile,
					bEnableParapetInset			= bEnableParapetInset,
					bEnableMasonryArch			= bEnableMasonryArch,
					bEnableSill					= bEnableSill,
					bEnableBoard				= bEnableBoard,
					bEnableFaschen				= bEnableFaschen,
					bEnableThreshold			= bEnableThreshold,
					bEnableCasing				= bEnableCasing,
					bEnableShutter				= bEnableShutter,
					bEnableCustomCornerLeft		= bEnableCustomCornerLeft,
					bEnableCustomCornerRight	= bEnableCustomCornerRight,
				! --- Corner Functions
					bLeftCornerFunction	 		= gs_cl,
					leftCornerAngle		 		= leftCornerAngle,
					leftConnWallThk		 		= WALL_THICKNESS,
					bRightCornerFunction 		= gs_cr,
					rightCornerAngle	 		= rightCornerAngle,
					rightConnWallThk			= WALL_THICKNESS,
					gs_left_oversize			= gs_left_oversize - gs_cl * abs((gs_fthk)*TAN(90-leftCornerAngle/2)),
					gs_right_oversize			= gs_right_oversize - gs_cr * abs((gs_fthk)*TAN(90-rightCornerAngle/2)),
	returned_parameters	ac_unit_width,
						ac_unit_height,
						gs_frame_ovhg_left_out,
						gs_frame_ovhg_right_out,
						gs_frame_ovhg_top_out,
						gs_frame_ovhg_bottom_out,
						gs_frame_ovhg_left_in,
						gs_frame_ovhg_right_in,
						gs_frame_ovhg_top_in,
						gs_frame_ovhg_bottom_in,
						bMirrored,
						xform11, xform12, xform13, xform14,
						xform21, xform22, xform23, xform24,
						xform31, xform32, xform33, xform34,

						bShowAddHotspots, bShowAddHotspotsForIS, bShowUnitHotspots

if lod3D = 0 then end

xform	xform11, xform12, xform13, xform14,
		xform21, xform22, xform23, xform24,
		xform31, xform32, xform33, xform34
rotx 90

if (gs_cl | gs_cr) & WIDO_REVEAL_SIDE then
	leftCornerAngle = 360 - leftCornerAngle
	rightCornerAngle = 360 - rightCornerAngle
endif

!!! Butt Glazed !!!

gs_left_g  = 0
gs_right_g = 0

if iFrameStyleLeft <> FRAME_STYLE_VISIBLE_MULLIONS then
	if iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED OR iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED_WO_FRAME then gs_left_g=gs_fw_side_left
	if iFrameStyleLeft = FRAME_STYLE_ANGLE_FRAME AND leftCornerAngle<180 then
		gs_left_g=gs_fw_side_left-((gs_gsb+gs_glass_thk)*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2))
	endif
	if iFrameStyleLeft = FRAME_STYLE_ANGLE_FRAME AND leftCornerAngle>180 then
		gs_left_g=gs_fw_side_left+(gs_fthk-gs_gsb-gs_glass_thk)*TAN(90-leftCornerAngle/2)-(gs_frame_width/2)/SIN(180-leftCornerAngle/2)
	endif
endif
if iFrameStyleRight <> FRAME_STYLE_VISIBLE_MULLIONS then
	if iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED OR iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED_WO_FRAME then gs_right_g=gs_fw_side_right
	if iFrameStyleRight = FRAME_STYLE_ANGLE_FRAME AND rightCornerAngle<180 then
		gs_right_g=gs_fw_side_right-((gs_gsb+gs_glass_thk)*TAN(90-rightCornerAngle/2)+(gs_frame_width/2)/SIN(rightCornerAngle/2))
	endif
	if iFrameStyleRight = FRAME_STYLE_ANGLE_FRAME AND rightCornerAngle>180 then
		gs_right_g=gs_fw_side_right+(gs_fthk-gs_gsb-gs_glass_thk)*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(180-rightCornerAngle/2)
	endif
endif

!!! Butt Glazed END !!!

if gs_wthk then
	if WIDO_REVEAL_SIDE then
		addz -WALL_THICKNESS + WIDO_FRAME_THICKNESS + WIDO_SILL
	else
		addz -WIDO_SILL
	endif
endif

! =============================================================================
! Hotspots
! =============================================================================

unID=1

if gs_full_edit=1 then
	!! MIDDLE RAIL HEIGHT !!
	if bMiddleRail then
		hotspot ac_unit_width/2-gs_fw_side_right,  0, 0, unID, midRailElevation,1+128
		unID=unID+1
		hotspot ac_unit_width/2-gs_fw_side_right, -1, 0, unID, midRailElevation,3
		unID=unID+1
		hotspot ac_unit_width/2-gs_fw_side_right, midRailElevation, 0, unID, midRailElevation,2
		unID=unID+1
	else
		unID=unID+3
	endif

	!! TOP PANEL HEIGHT !!
	if gs_UTrans then
		hotspot (ac_unit_width/2-gs_fw_side_right)*gs_bSLight2+(-ac_unit_width/2+gs_fw_side_left)*(not(gs_bSLight2)),  ac_unit_height, 0, unID, transomHeight,1+128
		unID=unID+1
		hotspot (ac_unit_width/2-gs_fw_side_right)*gs_bSLight2+(-ac_unit_width/2+gs_fw_side_left)*(not(gs_bSLight2)), ac_unit_height+1, 0, unID, transomHeight,3
		unID=unID+1
		hotspot (ac_unit_width/2-gs_fw_side_right)*gs_bSLight2+(-ac_unit_width/2+gs_fw_side_left)*(not(gs_bSLight2)), ac_unit_height-transomHeight, 0, unID, transomHeight,2
		unID=unID+1
	else
		unID=unID+3
	endif

! First Panel Width ===========================================================
	if gs_bSLight then
		hotspot -ac_unit_width/2,  gs_fw_lower, 0, unID, gs_SLight_w,1+128
		unID=unID+1
		hotspot -ac_unit_width/2-1, gs_fw_lower, 0, unID, gs_SLight_w,3
		unID=unID+1
		hotspot -ac_unit_width/2+gs_SLight_w, gs_fw_lower, 0, unID, gs_SLight_w,2
		unID=unID+1
	else
		unID=unID + 3
	endif


! End Panel Width =============================================================

	if gs_bSLight2 then
		hotspot ac_unit_width/2,  gs_fw_lower, 0, unID, gs_SLight_w2,1+128
		unID=unID+1
		hotspot ac_unit_width/2+1, gs_fw_lower, 0, unID, gs_SLight_w2,3
		unID=unID+1
		hotspot ac_unit_width/2-gs_SLight_w2, gs_fw_lower, 0, unID, gs_SLight_w2,2
		unID=unID+1
	else
		unID=unID + 3
	endif

! Horizontal Grids ============================================================

	if gs_hor_gnum >0 then
		if bMiddleRail then
			for i=1 to gs_hor_gnum
				ADD  (iFrameStyleMullion = FRAME_STYLE_BUTT_GLAZED)*gs_fw_side_right, gs_fw_lower-gs_grid_w/2,0
				hotspot ac_unit_width/2-gs_fw_side_right,  0, 0, unID, gs_hor_d[i],1+128
				unID=unID+1
				hotspot ac_unit_width/2-gs_fw_side_right, -1, 0, unID, gs_hor_d[i],3
				unID=unID+1
				hotspot ac_unit_width/2-gs_fw_side_right, gs_hor_d[i], 0, unID, gs_hor_d[i],2
				unID=unID+1
				DEL 1
			next i
		endif
	else
		unID = unID + 3*gs_hor_gnum
	endif

! Horizontal Grids  ====================================================

	if gs_hor_gnumtr >0 then
		for i=1 to gs_hor_gnumtr
			ADD  (iFrameStyleMullion = FRAME_STYLE_BUTT_GLAZED)*gs_fw_side_right, ac_unit_height-gs_fw_upper-middlePanelHeight-gs_grid_w/2,0
			hotspot ac_unit_width/2-gs_fw_side_right,  0, 0, unID, gs_hor_dtr[i],1+128
			unID=unID+1
			hotspot ac_unit_width/2-gs_fw_side_right, -1, 0, unID, gs_hor_dtr[i],3
			unID=unID+1
			hotspot ac_unit_width/2-gs_fw_side_right, gs_hor_dtr[i], 0, unID, gs_hor_dtr[i],2
			unID=unID+1
			DEL 1
		next i
	else
		unID = unID + 3*gs_hor_gnumtr
	endif

! Horizontal Grids Transom ==================================================

	if gs_hor_gtp >0 and gs_UTrans then
		for i=1 to gs_hor_gtp
			ADD  (iFrameStyleMullion = FRAME_STYLE_BUTT_GLAZED)*gs_fw_side_right, ac_unit_height-topPanelHeight-gs_grid_w/2,0
			hotspot ac_unit_width/2-gs_fw_side_right,  0, 0, unID, gs_hor_dtp[i],1+128
			unID=unID+1
			hotspot ac_unit_width/2-gs_fw_side_right, -1, 0, unID, gs_hor_dtp[i],3
			unID=unID+1
			hotspot ac_unit_width/2-gs_fw_side_right, gs_hor_dtp[i], 0, unID, gs_hor_dtp[i],2
			unID=unID+1
			DEL 1
		next i
	else
		unID = unID + 3*gs_hor_gtp
	endif

! Vertica Grids ===============================================================
	if gs_ver_gnum >0 then
		for i=1 to gs_ver_gnum
			ADD -ac_unit_width/2+frameOrSLightWidthLeft-gridWidthVert/2, gs_fw_lower, 0
			hotspot 0,  0, 0, unID, gs_ver_d[i],1+128
			unID=unID+1
			hotspot -1, 0, 0, unID, gs_ver_d[i],3
			unID=unID+1
			hotspot gs_ver_d[i], 0, 0, unID, gs_ver_d[i],2
			unID=unID+1
			DEL 1
		next i
	else
		unID = unID + 3*gs_ver_gnum
	endif
endif

! =============================================================================
! Hotspots
! =============================================================================
! ------------------------------------------------------------------------------
! Unit hotspots
! ------------------------------------------------------------------------------

if bShowUnitHotspots then
	unID=100

	hotspot ac_unit_width/2, 0, 0, unID		:unID=unID+1
	hotspot -ac_unit_width/2, 0, 0, unID	:unID=unID+1
	hotspot ac_unit_width/2, 0, gs_frame_thk, unID		:unID=unID+1
	hotspot -ac_unit_width/2, 0, gs_frame_thk, unID	:unID=unID+1

	hotspot ac_unit_width/2, ac_unit_height, 0, unID		:unID=unID+1
	hotspot -ac_unit_width/2, ac_unit_height, 0, unID	:unID=unID+1
	hotspot ac_unit_width/2, ac_unit_height, gs_frame_thk, unID		:unID=unID+1
	hotspot -ac_unit_width/2, ac_unit_height, gs_frame_thk, unID

endif


! =============================================================================
! Draw Ventilation Profile
! =============================================================================

isVentilationOverFrame = (bEnableVentilationProfile & bVentilationProfile & (iVentilationProfileType = VENTPROFILE_OVER_FRAME))

if isVentilationOverFrame then
	addy ac_unit_height
	if WIDO_REVEAL_SIDE then
		addz gs_fthk
		mulz -1
	endif
	call "Ventilation_profile" parameters	A							= ac_unit_width,
											VentilationProfileThickness	= VentilationProfileThickness,
											VentilationProfileHeight	= VentilationProfileHeight,
											gs_frame_thk				= gs_fthk,
											bVentilationProfile			= bVentilationProfile,
											iVentilationProfileType		= iVentilationProfileType,
											gs_ventProfile_pen			= gs_frame_pen,
											gs_ventProfile_pen_cont		= gs_frame_pen,
											gs_ventProfile_fill			= gs_ventProfile_fill,
											gs_ventProfile_pen_bg		= gs_ventProfile_pen_bg,
											gs_ventProfile_pen_fg		= gs_ventProfile_pen_fg,
											gs_ventProfile_mat			= gs_ventProfile_mat
	if WIDO_REVEAL_SIDE then del 2
	del 1
endif


! =============================================================================
! Frame
! =============================================================================

pen gs_frame_pen
material gs_frame_mat

frameleftout	= -ac_unit_width/2 - gs_frame_ovhg_left_out
framerightout	= ac_unit_width/2 + gs_frame_ovhg_right_out
frameleftin		= -ac_unit_width/2 - gs_frame_ovhg_left_in
framerightin	= ac_unit_width/2 + gs_frame_ovhg_right_in
frametopin		= ac_unit_height + gs_frame_ovhg_top_in
frametopout		= ac_unit_height + gs_frame_ovhg_top_out
framebottomout	= -gs_frame_ovhg_bottom_out
framebottomin	= -gs_frame_ovhg_bottom_in

leftFrame = -ac_unit_width/2
if (abs(gs_tolerance_left) > EPS) then
	leftFrame = frameleftout
	if abs(frameleftout) > abs(frameleftin) then
		leftFrame = frameleftin
	endif
endif

rightFrame = ac_unit_width/2
if (abs(gs_tolerance_right) > EPS) then
	rightFrame = framerightout
	if abs(framerightout) > abs(framerightin) then
		rightFrame = framerightin
	endif
endif

topFrame = ac_unit_height
if (abs(gs_tolerance_upper) > EPS) | isVentilationOverFrame then
	topFrame = frametopout
	if  abs(frametopout) > abs(frametopin) then
		topFrame = frametopin
	endif
endif

bottomFrame = 0
if (abs(gs_tolerance_lower) > EPS) then
	bottomFrame = framebottomout
	if  abs(framebottomout) > abs(framebottomin) then
		bottomFrame = framebottomin
	endif
endif

GROUP "frame"

! Cut Ventilation Profile =====================================================

if isVentilationOverFrame then
	addy ac_unit_height
	cutpolya 5, 2, 0,
		-ac_unit_width/2, 0, 11+3*(WIDO_REVEAL_SIDE),
		-ac_unit_width/2, VentilationProfileHeight, 11+3*(WIDO_REVEAL_SIDE),
		ac_unit_width/2, VentilationProfileHeight, 11+3*(WIDO_REVEAL_SIDE),
		ac_unit_width/2, 0, 11+3*(WIDO_REVEAL_SIDE),
		-ac_unit_width/2, 0, -1
	del 1
endif


sect_fill gs_fillFr, gs_penFr_bg, gs_penFr_fg, gs_frame_pen

! Corner ======================================================================

if gs_cl AND leftCornerAngle<180 then
	ADDX -ac_unit_width/2
	ROTY -leftCornerAngle/2
		CUTPLANE
	DEL 2
endif

if gs_cl AND leftCornerAngle>180 then
	ADD -ac_unit_width/2-WIDO_REVEAL_SIDE*gs_fthk*TAN(90-leftCornerAngle/2), 0, (1-WIDO_REVEAL_SIDE)*gs_fthk
	ROTY -leftCornerAngle/2
	CUTPLANE
	DEL 2
endif

if gs_cr AND rightCornerAngle<180 then
	ADDX ac_unit_width/2
	ROTY rightCornerAngle/2
	CUTPLANE
	DEL 2
endif

if gs_cr AND rightCornerAngle>180 then
	ADD ac_unit_width/2+WIDO_REVEAL_SIDE*gs_fthk*TAN(90-rightCornerAngle/2), 0, (1-WIDO_REVEAL_SIDE)*gs_fthk
	ROTY rightCornerAngle/2
	CUTPLANE
	DEL 2
endif


! Butt Glazed =================================================================

if bMiddleRail then
	if iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED then
		CUTFORM 5, 1, 1+2,
			 0, 0, 1, gs_gsb+gs_glass_thk,
			ac_unit_width/2,         gs_fw_lower, 2+8+16,
			(ac_unit_width/2-rightPanelWidth)*(gs_bSLight2),  gs_fw_lower,  2+8+16,
			(ac_unit_width/2-rightPanelWidth)*(gs_bSLight2), midRailElevation+midRailWidth/2, 2+8+16,
			ac_unit_width/2, midRailElevation+midRailWidth/2,  2+8+16,
			ac_unit_width/2,         gs_fw_lower,  -1
	endif

	if iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED AND gs_cr AND rightCornerAngle<180 then
		ROTX 90
		ADDZ -gs_fw_lower
		CUTFORM 5, 1, 1+2,
			0,0,1, -(midRailElevation+midRailWidth/2-gs_fw_lower),
			ac_unit_width/2-gs_fw_side_right-(gs_fthk*TAN(90-rightCornerAngle/2)+(gs_ffwidth/2)/SIN(rightCornerAngle/2)-gs_fw_side_right)*(rightCornerAngle<60), 0, 1+2+4+8+16+64,
			ac_unit_width/2-(gs_frame_width/2)/SIN(rightCornerAngle/2), 0,     1+2+4+8+16+64,
			ac_unit_width/2-gs_fthk*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(rightCornerAngle/2), gs_fthk,      1+2+4+8+16+64,
			ac_unit_width/2-gs_fw_side_right-(gs_fthk*TAN(90-rightCornerAngle/2)+(gs_frame_width/2)/SIN(rightCornerAngle/2)-gs_fw_side_right)*(rightCornerAngle<60), gs_fthk, 1+2+4+8+16+64,
			ac_unit_width/2-gs_fw_side_right-(gs_fthk*TAN(90-rightCornerAngle/2)+(gs_frame_width/2)/SIN(rightCornerAngle/2)-gs_fw_side_right)*(rightCornerAngle<60), 0,      -1
		DEL 2
		xpr=gs_fthk*TAN(90-rightCornerAngle/2)+(gs_frame_width/2)/SIN(rightCornerAngle/2)
	endif

	if iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED_WO_FRAME AND gs_cr then
		ROTX 90
		ADDZ -gs_fw_lower
		CUTFORM 5, 1, 1+2,
			0,0,1, -(midRailElevation+midRailWidth/2-gs_fw_lower),
			ac_unit_width/2-gs_fw_side_right, 0, 1+2+4+8+16,
			ac_unit_width/2, 0,     1+2+4+8+16,
			ac_unit_width/2, gs_fthk,      1+2+4+8+16,
			ac_unit_width/2-gs_fw_side_right, gs_fthk, 1+2+4+8+16,
			ac_unit_width/2-gs_fw_side_right, 0,      -1
		DEL 2
		xpr=0
	endif

	if iFrameStyleRight = FRAME_STYLE_ANGLE_FRAME AND gs_cr AND rightCornerAngle<180 then
		ROTX 90
		ADDZ -gs_fw_lower
		lin_ ac_unit_width/2-(gs_gsb+gs_glass_thk)*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(rightCornerAngle/2), 0, 0, \
			ac_unit_width/2-gs_fw_side_right-(gs_fthk*TAN(90-rightCornerAngle/2)+(gs_frame_width/2)/SIN(rightCornerAngle/2)-gs_fw_side_right)*(rightCornerAngle<60), 0, 0
		lin_ ac_unit_width/2-gs_fthk*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(rightCornerAngle/2), gs_fthk, 0, \
			ac_unit_width/2-gs_fw_side_right-(gs_fthk*TAN(90-rightCornerAngle/2)+(gs_frame_width/2)/SIN(rightCornerAngle/2)-gs_fw_side_right)*(rightCornerAngle<60), gs_fthk, 0

		CUTFORM 6, 1, 1+2,
			0,0,1, -(midRailElevation+midRailWidth/2-gs_fw_lower),
			ac_unit_width/2-gs_fw_side_right-(gs_fthk*TAN(90-rightCornerAngle/2)+(gs_frame_width/2)/SIN(rightCornerAngle/2)-gs_fw_side_right)*(rightCornerAngle<60), 0, 31,
			ac_unit_width/2-(gs_gsb+gs_glass_thk)*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(rightCornerAngle/2), 0,     31,
			ac_unit_width/2-(gs_gsb+gs_glass_thk)*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(rightCornerAngle/2), (gs_gsb+gs_glass_thk),     31,
			ac_unit_width/2-gs_fthk*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(rightCornerAngle/2), gs_fthk,      31,
			ac_unit_width/2-gs_fw_side_right-(gs_fthk*TAN(90-rightCornerAngle/2)+(gs_frame_width/2)/SIN(rightCornerAngle/2)-gs_fw_side_right)*(rightCornerAngle<60), gs_fthk, 31,
			ac_unit_width/2-gs_fw_side_right-(gs_fthk*TAN(90-rightCornerAngle/2)+(gs_frame_width/2)/SIN(rightCornerAngle/2)-gs_fw_side_right)*(rightCornerAngle<60), 0,      -1
		DEL 2
		xpr=gs_fthk*TAN(90-rightCornerAngle/2)+(gs_frame_width/2)/SIN(rightCornerAngle/2)
	endif

	if iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED AND gs_cr AND rightCornerAngle>180 then
		ROTX 90
		ADDZ -gs_fw_lower
		CUTFORM 5, 1, 1+2,
			0,0,1, -(midRailElevation+midRailWidth/2-gs_fw_lower),
			ac_unit_width/2-gs_fw_side_right, 0,      95,
			ac_unit_width/2+gs_fthk*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(180-rightCornerAngle/2), 0,    95,
			ac_unit_width/2-(gs_frame_width/2)/SIN(180-rightCornerAngle/2), gs_fthk,      95,
			ac_unit_width/2-gs_fw_side_right, gs_fthk,     95,
			ac_unit_width/2-gs_fw_side_right, 0,      -1
		DEL 2
		xpr=-gs_fthk*TAN(90-rightCornerAngle/2)+(gs_frame_width/2)/SIN(rightCornerAngle/2)
	endif

	if iFrameStyleRight = FRAME_STYLE_ANGLE_FRAME AND gs_cr AND rightCornerAngle>180 then
		ROTX 90
		ADDZ -gs_fw_lower
		lin_ ac_unit_width/2-gs_fw_side_right, 0, 0, ac_unit_width/2+(gs_fthk-gs_gsb-gs_glass_thk)*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(180-rightCornerAngle/2), 0, 0
		lin_ ac_unit_width/2-(gs_frame_width/2)/SIN(180-rightCornerAngle/2), gs_fthk, 0, ac_unit_width/2-gs_fw_side_right, gs_fthk, 0

		CUTFORM 6, 1, 1+2,
			0,0,1, -(midRailElevation+midRailWidth/2-gs_fw_lower),
			ac_unit_width/2-gs_fw_side_right, 0,      31,
			ac_unit_width/2+(gs_fthk-gs_gsb-gs_glass_thk)*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(180-rightCornerAngle/2), 0,    31,
			ac_unit_width/2+(gs_fthk-gs_gsb-gs_glass_thk)*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(180-rightCornerAngle/2), (gs_gsb+gs_glass_thk),    31,
			ac_unit_width/2-(gs_frame_width/2)/SIN(180-rightCornerAngle/2), gs_fthk,      31,
			ac_unit_width/2-gs_fw_side_right, gs_fthk,     31,
			ac_unit_width/2-gs_fw_side_right, 0,      -1
		DEL 2
		xpr=-gs_fthk*TAN(90-rightCornerAngle/2)+(gs_frame_width/2)/SIN(rightCornerAngle/2)
	endif

	if iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED then
		CUTFORM 5, 1, 1+2,
			0, 0, 1, gs_gsb+gs_glass_thk,
			-ac_unit_width/2,         gs_fw_lower,  2+8+16,
			(-ac_unit_width/2+leftPanelWidth)*(gs_bSLight),  gs_fw_lower,  2+8+16,
			(-ac_unit_width/2+leftPanelWidth)*(gs_bSLight), midRailElevation+midRailWidth/2,  2+8+16,
			-ac_unit_width/2, midRailElevation+midRailWidth/2, 2+8+16,
			-ac_unit_width/2,         gs_fw_lower,  -1
	endif

	if iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED AND gs_cl AND leftCornerAngle<180 then
		ROTX 90
		ADDZ -gs_fw_lower
		CUTFORM 5, 1, 1+2,
			0,0,1, -(midRailElevation+midRailWidth/2-gs_fw_lower),
			-ac_unit_width/2+(gs_frame_width/2)/SIN(leftCornerAngle/2),0,95,
			-ac_unit_width/2+gs_fw_side_left+(gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2)-gs_fw_side_left)*(leftCornerAngle<60),0,95,
			-ac_unit_width/2+gs_fw_side_left+(gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2)-gs_fw_side_left)*(leftCornerAngle<60), gs_fthk,95,
			-ac_unit_width/2+gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2),gs_fthk,95,
			-ac_unit_width/2+(gs_frame_width/2)/SIN(leftCornerAngle/2),0,-1
		DEL 2
		xpl=gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2)
	endif

	if iFrameStyleLeft = FRAME_STYLE_ANGLE_FRAME AND gs_cl AND leftCornerAngle<180 then
		ROTX 90
		ADDZ -gs_fw_lower
		lin_ -ac_unit_width/2+(gs_gsb+gs_glass_thk)*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2), 0, 0,\
			 -ac_unit_width/2+gs_fw_side_left+(gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2)-gs_fw_side_left)*(leftCornerAngle<60), 0, 0
		lin_ -ac_unit_width/2+gs_fw_side_left+(gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2)-gs_fw_side_left)*(leftCornerAngle<60), \
			gs_fthk, 0, -ac_unit_width/2+gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2), gs_fthk, 0

		CUTFORM 6, 1, 1+2,
			0,0,1, -(midRailElevation+midRailWidth/2-gs_fw_lower),
			-ac_unit_width/2+(gs_gsb+gs_glass_thk)*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2), gs_gsb+gs_glass_thk,31,
			-ac_unit_width/2+(gs_gsb+gs_glass_thk)*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2), 0,31,
			-ac_unit_width/2+gs_fw_side_left+(gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2)-gs_fw_side_left)*(leftCornerAngle<60),0,31,
			-ac_unit_width/2+gs_fw_side_left+(gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2)-gs_fw_side_left)*(leftCornerAngle<60), gs_fthk,31,
			-ac_unit_width/2+gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2),gs_fthk,31,
			-ac_unit_width/2+(gs_gsb+gs_glass_thk)*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2), gs_gsb+gs_glass_thk,-1
		DEL 2
		xpl=gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2)
	endif

	if iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED AND gs_cl AND leftCornerAngle >180 then
		ROTX 90
		ADDZ -gs_fw_lower
		CUTFORM 5, 1, 1+2,
			0,0,1, -(midRailElevation+midRailWidth/2-gs_fw_lower),
			-ac_unit_width/2+gs_fthk*TAN(90+leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2), 0, 95,
			-ac_unit_width/2+gs_fw_side_left, 0, 95,
			-ac_unit_width/2+gs_fw_side_left, gs_fthk, 95,
			-ac_unit_width/2+(gs_frame_width/2)/SIN(leftCornerAngle/2), gs_fthk, 95,
			-ac_unit_width/2+gs_fthk*TAN(90+leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2), 0, -1
		DEL 2
		xpl=-gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2)
	endif

	if iFrameStyleLeft = FRAME_STYLE_ANGLE_FRAME AND gs_cl AND leftCornerAngle >180 then
		ROTX 90
		ADDZ -gs_fw_lower
		lin_ -ac_unit_width/2+(gs_fthk-gs_gsb-gs_glass_thk)*TAN(90+leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2), 0, 0, -ac_unit_width/2+gs_fw_side_left, 0, 0
		lin_ -ac_unit_width/2+gs_fw_side_left, gs_fthk, 0, -ac_unit_width/2+(gs_frame_width/2)/SIN(leftCornerAngle/2), gs_fthk, 0

		CUTFORM 6, 1, 1+2,
			0,0,1, -(midRailElevation+midRailWidth/2-gs_fw_lower),
			-ac_unit_width/2+(gs_fthk-gs_gsb-gs_glass_thk)*TAN(90+leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2), 0, 31,
			-ac_unit_width/2+gs_fw_side_left, 0, 31,
			-ac_unit_width/2+gs_fw_side_left, gs_fthk, 31,
			-ac_unit_width/2+(gs_frame_width/2)/SIN(leftCornerAngle/2), gs_fthk, 31,
			-ac_unit_width/2+(gs_fthk-gs_gsb-gs_glass_thk)*TAN(90+leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2), gs_gsb+gs_glass_thk, 31,
			-ac_unit_width/2+(gs_fthk-gs_gsb-gs_glass_thk)*TAN(90+leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2), 0, -1
		DEL 2
		xpl=-gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2)
	endif

	if iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED_WO_FRAME AND gs_cl then
		ROTX 90
		ADDZ -gs_fw_lower
		CUTFORM 5, 1, 1+2,
			0,0,1, -(midRailElevation+midRailWidth/2-gs_fw_lower),
			-ac_unit_width/2+gs_fw_side_left, 0, 1+2+4+8+16,
			-ac_unit_width/2, 0,     1+2+4+8+16,
			-ac_unit_width/2, gs_fthk,      1+2+4+8+16,
			-ac_unit_width/2+gs_fw_side_left, gs_fthk, 1+2+4+8+16,
			-ac_unit_width/2+gs_fw_side_left, 0,      -1
		DEL 2
		xpl=0
	endif
endif


! Butt Glazed of Transom ======================================================

if iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED then
	CUTFORM 5, 1, 1+2,
		0, 0, 1, gs_gsb+gs_glass_thk,
		ac_unit_width/2, ac_unit_height-frameOrTransomHeight, 2+8+16,
		(ac_unit_width/2-rightPanelWidth)*(gs_bSLight2), ac_unit_height-frameOrTransomHeight,  2+8+16,
		(ac_unit_width/2-rightPanelWidth)*(gs_bSLight2),(midRailElevation)*bMiddleRail+midRailWidth/2,  2+8+16,
		ac_unit_width/2, (midRailElevation)*bMiddleRail+midRailWidth/2,  2+8+16,
		ac_unit_width/2, ac_unit_height-frameOrTransomHeight,  -1
endif

if iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED AND gs_cr AND rightCornerAngle<180 then
	ROTX 90
	ADDZ -ac_unit_height+frameOrTransomHeight
	CUTFORM 5, 1, 1+2,
		0,0,1, ac_unit_height-frameOrTransomHeight-midRailElevation*bMiddleRail-midRailWidth/2,
		ac_unit_width/2-gs_fw_side_right-(gs_fthk*TAN(90-rightCornerAngle/2)+(gs_frame_width/2)/SIN(rightCornerAngle/2)-gs_fw_side_right)*(rightCornerAngle<60), 0,     95,
		ac_unit_width/2-(gs_frame_width/2)/SIN(rightCornerAngle/2), 0,     95,
		ac_unit_width/2-gs_fthk*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(rightCornerAngle/2), gs_fthk,      95,
		ac_unit_width/2-gs_fw_side_right-(gs_fthk*TAN(90-rightCornerAngle/2)+(gs_frame_width/2)/SIN(rightCornerAngle/2)-gs_fw_side_right)*(rightCornerAngle<60), gs_fthk,      95,
		ac_unit_width/2-gs_fw_side_right-(gs_fthk*TAN(90-rightCornerAngle/2)+(gs_frame_width/2)/SIN(rightCornerAngle/2)-gs_fw_side_right)*(rightCornerAngle<60), 0,      -1
	DEL 2
	xprtr=gs_fthk*TAN(90-rightCornerAngle/2)+(gs_frame_width/2)/SIN(rightCornerAngle/2)
endif

if iFrameStyleRight = FRAME_STYLE_ANGLE_FRAME AND gs_cr AND rightCornerAngle<180 then
	ROTX 90
	ADDZ -ac_unit_height+frameOrTransomHeight
	lin_ ac_unit_width/2-gs_fw_side_right-(gs_fthk*TAN(90-rightCornerAngle/2)+(gs_frame_width/2)/SIN(rightCornerAngle/2)-gs_fw_side_right)*(rightCornerAngle<60), 0, 0,\
		 ac_unit_width/2-(gs_gsb+gs_glass_thk)*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(rightCornerAngle/2), 0, 0
	lin_ ac_unit_width/2-gs_fthk*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(rightCornerAngle/2), gs_fthk, 0, \
		 ac_unit_width/2-gs_fw_side_right-(gs_fthk*TAN(90-rightCornerAngle/2)+(gs_frame_width/2)/SIN(rightCornerAngle/2)-gs_fw_side_right)*(rightCornerAngle<60), gs_fthk, 0

	ADDZ ac_unit_height-frameOrTransomHeight-midRailElevation*bMiddleRail-midRailWidth/2
	lin_ ac_unit_width/2-gs_fw_side_right-(gs_fthk*TAN(90-rightCornerAngle/2)+(gs_frame_width/2)/SIN(rightCornerAngle/2)-gs_fw_side_right)*(rightCornerAngle<60), 0, 0, \
		 ac_unit_width/2-(gs_gsb+gs_glass_thk)*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(rightCornerAngle/2), 0, 0
	lin_ ac_unit_width/2-gs_fthk*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(rightCornerAngle/2), gs_fthk, 0, \
		 ac_unit_width/2-gs_fw_side_right-(gs_fthk*TAN(90-rightCornerAngle/2)+(gs_frame_width/2)/SIN(rightCornerAngle/2)-gs_fw_side_right)*(rightCornerAngle<60), gs_fthk, 0
	DEL 1

	CUTFORM 6, 1, 1+2,
		0,0,1, ac_unit_height-frameOrTransomHeight-midRailElevation*bMiddleRail-midRailWidth/2,
		ac_unit_width/2-gs_fw_side_right-(gs_fthk*TAN(90-rightCornerAngle/2)+(gs_frame_width/2)/SIN(rightCornerAngle/2)-gs_fw_side_right)*(rightCornerAngle<60), 0, 1+2+4+8+16,
		ac_unit_width/2-(gs_gsb+gs_glass_thk)*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(rightCornerAngle/2), 0,     1+2+4+8+16,
		ac_unit_width/2-(gs_gsb+gs_glass_thk)*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(rightCornerAngle/2), (gs_gsb+gs_glass_thk),     1+2+4+8+16,
		ac_unit_width/2-gs_fthk*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(rightCornerAngle/2), gs_fthk,      1+2+4+8+16,
		ac_unit_width/2-gs_fw_side_right-(gs_fthk*TAN(90-rightCornerAngle/2)+(gs_frame_width/2)/SIN(rightCornerAngle/2)-gs_fw_side_right)*(rightCornerAngle<60), gs_fthk, 1+2+4+8+16,
		ac_unit_width/2-gs_fw_side_right-(gs_fthk*TAN(90-rightCornerAngle/2)+(gs_frame_width/2)/SIN(rightCornerAngle/2)-gs_fw_side_right)*(rightCornerAngle<60), 0,      -1
	DEL 2
	xprtr=gs_fthk*TAN(90-rightCornerAngle/2)+(gs_frame_width/2)/SIN(rightCornerAngle/2)
endif

if iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED AND gs_cr AND rightCornerAngle >180 then
	ROTX 90
	ADDZ -ac_unit_height+frameOrTransomHeight
	CUTFORM 5, 1, 1+2,
		0,0,1, ac_unit_height-frameOrTransomHeight-midRailElevation*bMiddleRail-midRailWidth/2,
		ac_unit_width/2-gs_fw_side_right, 0,      95,
		ac_unit_width/2+gs_fthk*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(180-rightCornerAngle/2), 0,    95,
		ac_unit_width/2-(gs_frame_width/2)/SIN(180-rightCornerAngle/2), gs_fthk,      95,
		ac_unit_width/2-gs_fw_side_right,gs_fthk,     95,
		ac_unit_width/2-gs_fw_side_right, 0,      -1
	DEL 2
	xprtr=-gs_fthk*TAN(90-rightCornerAngle/2)+(gs_frame_width/2)/SIN(rightCornerAngle/2)
endif

if iFrameStyleRight = FRAME_STYLE_ANGLE_FRAME AND gs_cr AND rightCornerAngle>180 then
	ROTX 90
	ADDZ -ac_unit_height+frameOrTransomHeight
	lin_ ac_unit_width/2-gs_fw_side_right, 0, 0, ac_unit_width/2+(gs_fthk-gs_gsb-gs_glass_thk)*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(180-rightCornerAngle/2), 0, 0
	lin_ ac_unit_width/2-(gs_frame_width/2)/SIN(180-rightCornerAngle/2), gs_fthk, 0, ac_unit_width/2-gs_fw_side_right, gs_fthk, 0

	ADDZ ac_unit_height-frameOrTransomHeight-midRailElevation*bMiddleRail-midRailWidth/2
	lin_ ac_unit_width/2-gs_fw_side_right, 0, 0, ac_unit_width/2+(gs_fthk-gs_gsb-gs_glass_thk)*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(180-rightCornerAngle/2), 0, 0
	lin_ ac_unit_width/2-(gs_frame_width/2)/SIN(180-rightCornerAngle/2), gs_fthk, 0, ac_unit_width/2-gs_fw_side_right, gs_fthk, 0
	DEL 1

	CUTFORM 6, 1, 1+2,
		0,0,1, ac_unit_height-frameOrTransomHeight-midRailElevation*bMiddleRail-midRailWidth/2,
		ac_unit_width/2-gs_fw_side_right, 0,      31,
		ac_unit_width/2+(gs_fthk-gs_gsb-gs_glass_thk)*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(180-rightCornerAngle/2), 0,    31,
		ac_unit_width/2+(gs_fthk-gs_gsb-gs_glass_thk)*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(180-rightCornerAngle/2), (gs_gsb+gs_glass_thk),    31,
		ac_unit_width/2-(gs_frame_width/2)/SIN(180-rightCornerAngle/2), gs_fthk,      31,
		ac_unit_width/2-gs_fw_side_right, gs_fthk,     31,
		ac_unit_width/2-gs_fw_side_right, 0,      -1
	DEL 2
	xprtr=-gs_fthk*TAN(90-rightCornerAngle/2)+(gs_frame_width/2)/SIN(rightCornerAngle/2)
endif

if iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED_WO_FRAME AND gs_cr then
	ROTX 90
	ADDZ -ac_unit_height+frameOrTransomHeight
	CUTFORM 5, 1, 1+2,
		0,0,1, ac_unit_height-frameOrTransomHeight-midRailElevation*bMiddleRail-midRailWidth/2,
		ac_unit_width/2-gs_fw_side_right, 0, 1+2+4+8+16,
		ac_unit_width/2, 0,     1+2+4+8+16,
		ac_unit_width/2, gs_fthk,      1+2+4+8+16,
		ac_unit_width/2-gs_fw_side_right, gs_fthk, 1+2+4+8+16,
		ac_unit_width/2-gs_fw_side_right, 0,      -1
	DEL 2
	xprtr=0
endif

if iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED then
	CUTFORM 5, 1, 1+2,
		 0, 0, 1, gs_gsb+gs_glass_thk,
		-ac_unit_width/2, ac_unit_height-frameOrTransomHeight, 2+8+16,
		(-ac_unit_width/2+leftPanelWidth)*(gs_bSLight), ac_unit_height-frameOrTransomHeight,  2+8+16,
		(-ac_unit_width/2+leftPanelWidth)*(gs_bSLight), midRailElevation*bMiddleRail+midRailWidth/2,  2+8+16,
		-ac_unit_width/2, midRailElevation*bMiddleRail+midRailWidth/2,  2+8+16,
		-ac_unit_width/2, ac_unit_height-frameOrTransomHeight,  -1
endif

if iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED AND gs_cl AND leftCornerAngle<180 then
	ROTX 90
	ADDZ -ac_unit_height+frameOrTransomHeight
	CUTFORM 5, 1, 1+2,
		0,0,1, ac_unit_height-frameOrTransomHeight-(midRailElevation)*bMiddleRail-midRailWidth/2,
		-ac_unit_width/2+(gs_frame_width/2)/SIN(leftCornerAngle/2),0,95,
		-ac_unit_width/2+gs_fw_side_left+(gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2)-gs_fw_side_left)*(leftCornerAngle<60),0,95,
		-ac_unit_width/2+gs_fw_side_left+(gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2)-gs_fw_side_left)*(leftCornerAngle<60), gs_fthk,95,
		-ac_unit_width/2+gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2),gs_fthk,95,
		-ac_unit_width/2+(gs_frame_width/2)/SIN(leftCornerAngle/2),0,-1
	DEL 2
	xpltr=gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2)
endif

if iFrameStyleLeft = FRAME_STYLE_ANGLE_FRAME AND gs_cl AND leftCornerAngle<180 then
	ROTX 90
	ADDZ -ac_unit_height+frameOrTransomHeight
	lin_ -ac_unit_width/2+(gs_gsb+gs_glass_thk)*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2), 0, 0, \
		 -ac_unit_width/2+gs_fw_side_left+(gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2)-gs_fw_side_left)*(leftCornerAngle<60), 0, 0
	lin_ -ac_unit_width/2+gs_fw_side_left+(gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2)-gs_fw_side_left)*(leftCornerAngle<60), \
		 gs_fthk, 0, -ac_unit_width/2+gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2), gs_fthk, 0

	ADDZ ac_unit_height-frameOrTransomHeight-(midRailElevation)*bMiddleRail-midRailWidth/2
	lin_ -ac_unit_width/2+(gs_gsb+gs_glass_thk)*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2), 0, 0, \
		 -ac_unit_width/2+gs_fw_side_left+(gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2)-gs_fw_side_left)*(leftCornerAngle<60), 0, 0
	lin_ -ac_unit_width/2+gs_fw_side_left+(gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2)-gs_fw_side_left)*(leftCornerAngle<60), \
		 gs_fthk, 0, -ac_unit_width/2+gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2), gs_fthk, 0
	DEL 1

	CUTFORM 6, 1, 1+2,
		0,0,1, ac_unit_height-frameOrTransomHeight-(midRailElevation)*bMiddleRail-midRailWidth/2,
		-ac_unit_width/2+(gs_gsb+gs_glass_thk)*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2), gs_gsb+gs_glass_thk,31,
		-ac_unit_width/2+(gs_gsb+gs_glass_thk)*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2), 0,31,
		-ac_unit_width/2+gs_fw_side_left+(gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2)-gs_fw_side_left)*(leftCornerAngle<60),0,31,
		-ac_unit_width/2+gs_fw_side_left+(gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2)-gs_fw_side_left)*(leftCornerAngle<60), gs_fthk,31,
		-ac_unit_width/2+gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2),gs_fthk, 31,
		-ac_unit_width/2+(gs_gsb+gs_glass_thk)*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2), gs_gsb+gs_glass_thk,-1
	DEL 2
	xpltr=gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2)
endif

if iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED AND gs_cl AND leftCornerAngle >180 then
	ROTX 90
	ADDZ -ac_unit_height+frameOrTransomHeight
	CUTFORM 5, 1, 1+2,
		0,0,1, ac_unit_height-frameOrTransomHeight-(midRailElevation)*bMiddleRail-midRailWidth/2,
		-ac_unit_width/2+gs_fthk*TAN(90+leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2), 0, 95,
		-ac_unit_width/2+gs_fw_side_left, 0, 95,
		-ac_unit_width/2+gs_fw_side_left, gs_fthk, 95,
		-ac_unit_width/2+(gs_frame_width/2)/SIN(leftCornerAngle/2), gs_fthk, 95,
		-ac_unit_width/2+gs_fthk*TAN(90+leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2), 0, -1
	DEL 2
	xpltr=-gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2)
endif

if iFrameStyleLeft = FRAME_STYLE_ANGLE_FRAME AND gs_cl AND leftCornerAngle >180 then
	ROTX 90
	ADDZ -ac_unit_height+frameOrTransomHeight
	lin_ -ac_unit_width/2+(gs_fthk-gs_gsb-gs_glass_thk)*TAN(90+leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2), 0, 0, -ac_unit_width/2+gs_fw_side_left, 0, 0
	lin_ -ac_unit_width/2+gs_fw_side_left, gs_fthk, 0, -ac_unit_width/2+(gs_frame_width/2)/SIN(leftCornerAngle/2), gs_fthk, 0

	ADDZ ac_unit_height-frameOrTransomHeight-(midRailElevation)*bMiddleRail-midRailWidth/2
	lin_ -ac_unit_width/2+(gs_fthk-gs_gsb-gs_glass_thk)*TAN(90+leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2), 0, 0, -ac_unit_width/2+gs_fw_side_left, 0, 0
	lin_ -ac_unit_width/2+gs_fw_side_left, gs_fthk, 0, -ac_unit_width/2+(gs_frame_width/2)/SIN(leftCornerAngle/2), gs_fthk, 0
	DEL 1

	CUTFORM 6, 1, 1+2,
		0,0,1, ac_unit_height-frameOrTransomHeight-(midRailElevation)*bMiddleRail-midRailWidth/2,
		-ac_unit_width/2+(gs_fthk-gs_gsb-gs_glass_thk)*TAN(90+leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2), 0, 31,
		-ac_unit_width/2+gs_fw_side_left, 0, 31,
		-ac_unit_width/2+gs_fw_side_left, gs_fthk, 31,
		-ac_unit_width/2+(gs_frame_width/2)/SIN(leftCornerAngle/2), gs_fthk, 31,
		-ac_unit_width/2+(gs_fthk-gs_gsb-gs_glass_thk)*TAN(90+leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2), gs_gsb+gs_glass_thk, 31,
		-ac_unit_width/2+(gs_fthk-gs_gsb-gs_glass_thk)*TAN(90+leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2), 0, -1
	DEL 2
	xpltr=-gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2)
endif

if iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED_WO_FRAME AND gs_cl then
	ROTX 90
	ADDZ -ac_unit_height+frameOrTransomHeight
	CUTFORM 5, 1, 1+2,
		0,0,1, ac_unit_height-frameOrTransomHeight-(midRailElevation)*bMiddleRail-midRailWidth/2,
		-ac_unit_width/2+gs_fw_side_left, 0, 1+2+4+8+16,
		-ac_unit_width/2, 0,     1+2+4+8+16,
		-ac_unit_width/2, gs_fthk,      1+2+4+8+16,
		-ac_unit_width/2+gs_fw_side_left, gs_fthk, 1+2+4+8+16,
		-ac_unit_width/2+gs_fw_side_left, 0,      -1
	DEL 2
	xpltr=0
endif


! Top Panel ===================================================================

if iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED AND gs_UTrans then
	CUTFORM 5, 1, 1+2,
		0, 0, 1, gs_gsb+gs_glass_thk,
		ac_unit_width/2, ac_unit_height-topPanelHeight,  2+8+16,
		(ac_unit_width/2-rightPanelWidth)*(gs_bSLight2), ac_unit_height-topPanelHeight, 2+8+16,
		(ac_unit_width/2-rightPanelWidth)*(gs_bSLight2), ac_unit_height-gs_fw_upper, 2+8+16,
		ac_unit_width/2, ac_unit_height-gs_fw_upper, 2+8+16,
		ac_unit_width/2, ac_unit_height-topPanelHeight,  -1
endif

if iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED AND gs_UTrans AND gs_cr AND rightCornerAngle<180 then
	ROTX 90
	ADDZ -ac_unit_height+gs_fw_upper
	CUTFORM 5, 1, 1+2,
			0,0,1, topPanelHeight-gs_fw_upper,
			ac_unit_width/2-gs_fw_side_right-(gs_fthk*TAN(90-rightCornerAngle/2)+(gs_frame_width/2)/SIN(rightCornerAngle/2)-gs_fw_side_right)*(rightCornerAngle<60), 0,     95,
			ac_unit_width/2-(gs_frame_width/2)/SIN(rightCornerAngle/2), 0,     95,
			ac_unit_width/2-gs_fthk*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(rightCornerAngle/2), gs_fthk,      95,
			ac_unit_width/2-gs_fw_side_right-(gs_fthk*TAN(90-rightCornerAngle/2)+(gs_frame_width/2)/SIN(rightCornerAngle/2)-gs_fw_side_right)*(rightCornerAngle<60),gs_fthk,      95,
			ac_unit_width/2-gs_fw_side_right-(gs_fthk*TAN(90-rightCornerAngle/2)+(gs_frame_width/2)/SIN(rightCornerAngle/2)-gs_fw_side_right)*(rightCornerAngle<60), 0,      -1
	DEL 2
	xprtp=gs_fthk*TAN(90-rightCornerAngle/2)+(gs_frame_width/2)/SIN(rightCornerAngle/2)
endif

if iFrameStyleRight = FRAME_STYLE_ANGLE_FRAME AND gs_UTrans AND gs_cr AND rightCornerAngle<180 then
	ROTX 90
	ADDZ -ac_unit_height+gs_fw_upper
	lin_ ac_unit_width/2-gs_fw_side_right-(gs_fthk*TAN(90-rightCornerAngle/2)+(gs_frame_width/2)/SIN(rightCornerAngle/2)-gs_fw_side_right)*(rightCornerAngle<60), 0, 0, \
		 ac_unit_width/2-(gs_gsb+gs_glass_thk)*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(rightCornerAngle/2), 0, 0
	lin_ ac_unit_width/2-gs_fthk*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(rightCornerAngle/2), gs_fthk, 0, \
		 ac_unit_width/2-gs_fw_side_right-(gs_fthk*TAN(90-rightCornerAngle/2)+(gs_frame_width/2)/SIN(rightCornerAngle/2)-gs_fw_side_right)*(rightCornerAngle<60), gs_fthk, 0

	CUTFORM 6, 1, 1+2,
		0,0,1, topPanelHeight-gs_fw_upper,
		ac_unit_width/2-gs_fw_side_right-(gs_fthk*TAN(90-rightCornerAngle/2)+(gs_frame_width/2)/SIN(rightCornerAngle/2)-gs_fw_side_right)*(rightCornerAngle<60), 0, 1+2+4+8+16,
		ac_unit_width/2-(gs_gsb+gs_glass_thk)*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(rightCornerAngle/2), 0,     1+2+4+8+16,
		ac_unit_width/2-(gs_gsb+gs_glass_thk)*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(rightCornerAngle/2), (gs_gsb+gs_glass_thk),     1+2+4+8+16,
		ac_unit_width/2-gs_fthk*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(rightCornerAngle/2), gs_fthk,      1+2+4+8+16,
		ac_unit_width/2-gs_fw_side_right-(gs_fthk*TAN(90-rightCornerAngle/2)+(gs_frame_width/2)/SIN(rightCornerAngle/2)-gs_fw_side_right)*(rightCornerAngle<60), gs_fthk, 1+2+4+8+16,
		ac_unit_width/2-gs_fw_side_right-(gs_fthk*TAN(90-rightCornerAngle/2)+(gs_frame_width/2)/SIN(rightCornerAngle/2)-gs_fw_side_right)*(rightCornerAngle<60), 0,      -1

	DEL 2
	xprtp=gs_fthk*TAN(90-rightCornerAngle/2)+(gs_frame_width/2)/SIN(rightCornerAngle/2)
endif

if iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED AND gs_UTrans AND gs_cr=1 AND rightCornerAngle>180 then
	ROTX 90
	ADDZ -ac_unit_height+gs_fw_upper
		CUTFORM 5, 1, 1+2,
			0,0,1, topPanelHeight-gs_fw_upper,
			ac_unit_width/2-gs_fw_side_right, 0,      95,
			ac_unit_width/2+gs_fthk*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(180-rightCornerAngle/2), 0,    95,
			ac_unit_width/2-(gs_frame_width/2)/SIN(180-rightCornerAngle/2), gs_fthk,      95,
			ac_unit_width/2-gs_fw_side_right,gs_fthk,     95,
			ac_unit_width/2-gs_fw_side_right, 0,      -1
	DEL 2
	xprtp=-gs_fthk*TAN(90-rightCornerAngle/2)+(gs_frame_width/2)/SIN(rightCornerAngle/2)
endif

if iFrameStyleRight = FRAME_STYLE_ANGLE_FRAME AND gs_UTrans AND gs_cr AND rightCornerAngle>180 then
	ROTX 90
	ADDZ -ac_unit_height+gs_fw_upper
	lin_ ac_unit_width/2-gs_fw_side_right, 0, 0, ac_unit_width/2+(gs_fthk-gs_gsb-gs_glass_thk)*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(180-rightCornerAngle/2), 0, 0
	lin_ ac_unit_width/2-(gs_frame_width/2)/SIN(180-rightCornerAngle/2), gs_fthk, 0, ac_unit_width/2-gs_fw_side_right, gs_fthk, 0

	CUTFORM 6, 1, 1+2,
		0,0,1, topPanelHeight-gs_fw_upper,
		ac_unit_width/2-gs_fw_side_right, 0,      31,
		ac_unit_width/2+(gs_fthk-gs_gsb-gs_glass_thk)*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(180-rightCornerAngle/2), 0,    31,
		ac_unit_width/2+(gs_fthk-gs_gsb-gs_glass_thk)*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(180-rightCornerAngle/2), (gs_gsb+gs_glass_thk),    31,
		ac_unit_width/2-(gs_frame_width/2)/SIN(180-rightCornerAngle/2), gs_fthk,      31,
		ac_unit_width/2-gs_fw_side_right, gs_fthk,     31,
		ac_unit_width/2-gs_fw_side_right, 0,      -1
	DEL 2
	xprtp=-gs_fthk*TAN(90-rightCornerAngle/2)+(gs_frame_width/2)/SIN(rightCornerAngle/2)
endif

if iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED_WO_FRAME AND gs_UTrans AND gs_cr then
	ROTX 90
	ADDZ -ac_unit_height+gs_fw_upper
	CUTFORM 5, 1, 1+2,
		0,0,1, topPanelHeight-gs_fw_upper,
		ac_unit_width/2-gs_fw_side_right, 0, 1+2+4+8+16,
		ac_unit_width/2, 0,     1+2+4+8+16,
		ac_unit_width/2, gs_fthk,      1+2+4+8+16,
		ac_unit_width/2-gs_fw_side_right, gs_fthk, 1+2+4+8+16,
		ac_unit_width/2-gs_fw_side_right, 0,      -1
	DEL 2
	xprtp=0
endif

if iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED AND gs_UTrans then
	CUTFORM 5, 1, 1+2,
		 0, 0, 1, gs_gsb+gs_glass_thk,
		-ac_unit_width/2, ac_unit_height-topPanelHeight,  2+8+16,
		(-ac_unit_width/2+leftPanelWidth)*gs_bSLight, ac_unit_height-topPanelHeight, 2+8+16,
		(-ac_unit_width/2+leftPanelWidth)*gs_bSLight, ac_unit_height-gs_fw_upper, 2+8+16,
		-ac_unit_width/2, ac_unit_height-gs_fw_upper, 2+8+16,
		-ac_unit_width/2, ac_unit_height-topPanelHeight,  -1
endif

if iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED AND gs_UTrans AND gs_cl AND leftCornerAngle <180 then
	ROTX 90
	ADDZ -ac_unit_height+gs_fw_upper
		CUTFORM 5, 1, 1+2,
			0,0,1, topPanelHeight-gs_fw_upper,
			-ac_unit_width/2+(gs_frame_width/2)/SIN(leftCornerAngle/2),0,95,
			-ac_unit_width/2+gs_fw_side_left+(gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2)-gs_fw_side_left)*(leftCornerAngle<60),0,95,
			-ac_unit_width/2+gs_fw_side_left+(gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2)-gs_fw_side_left)*(leftCornerAngle<60), gs_fthk,95,
			-ac_unit_width/2+gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2),gs_fthk,95,
			-ac_unit_width/2+(gs_frame_width/2)/SIN(leftCornerAngle/2),0,-1
	DEL 2
	xpltp=gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2)
endif

if iFrameStyleLeft = FRAME_STYLE_ANGLE_FRAME AND gs_UTrans AND gs_cl AND leftCornerAngle<180 then
	ROTX 90
	ADDZ -ac_unit_height+gs_fw_upper
	lin_ -ac_unit_width/2+(gs_gsb+gs_glass_thk)*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2), 0, 0, \
		 -ac_unit_width/2+gs_fw_side_left+(gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2)-gs_fw_side_left)*(leftCornerAngle<60), 0, 0
	lin_ -ac_unit_width/2+gs_fw_side_left+(gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2)-gs_fw_side_left)*(leftCornerAngle<60), \
		 gs_fthk, 0, -ac_unit_width/2+gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2), gs_fthk, 0

	CUTFORM 6, 1, 1+2,
		0,0,1, topPanelHeight-gs_fw_upper,
		-ac_unit_width/2+(gs_gsb+gs_glass_thk)*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2), gs_gsb+gs_glass_thk,31,
		-ac_unit_width/2+(gs_gsb+gs_glass_thk)*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2), 0,31,
		-ac_unit_width/2+gs_fw_side_left+(gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2)-gs_fw_side_left)*(leftCornerAngle<60),0,31,
		-ac_unit_width/2+gs_fw_side_left+(gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2)-gs_fw_side_left)*(leftCornerAngle<60), gs_fthk,31,
		-ac_unit_width/2+gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2),gs_fthk, 31,
		-ac_unit_width/2+(gs_gsb+gs_glass_thk)*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2), gs_gsb+gs_glass_thk,-1
	DEL 2
	xpltp=gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2)
endif

if iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED AND gs_UTrans AND gs_cl AND leftCornerAngle>180 then
	ROTX 90
	ADDZ -ac_unit_height+gs_fw_upper
		CUTFORM 5, 1, 1+2,
			0,0,1, topPanelHeight-gs_fw_upper,
			-ac_unit_width/2+gs_fthk*TAN(90+leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2), 0, 95,
			-ac_unit_width/2+gs_fw_side_left, 0, 95,
			-ac_unit_width/2+gs_fw_side_left, gs_fthk, 95,
			-ac_unit_width/2+(gs_frame_width/2)/SIN(leftCornerAngle/2), gs_fthk, 95,
			-ac_unit_width/2+gs_fthk*TAN(90+leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2), 0, -1
	DEL 2
	xpltp=-gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2)
endif

if iFrameStyleLeft = FRAME_STYLE_ANGLE_FRAME AND gs_UTrans AND gs_cl AND leftCornerAngle>180 then
	ROTX 90
	ADDZ -ac_unit_height+gs_fw_upper
	lin_ -ac_unit_width/2+(gs_fthk-gs_gsb-gs_glass_thk)*TAN(90+leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2), 0, 0, -ac_unit_width/2+gs_fw_side_left, 0, 0
	lin_ -ac_unit_width/2+gs_fw_side_left, gs_fthk, 0, -ac_unit_width/2+(gs_frame_width/2)/SIN(leftCornerAngle/2), gs_fthk, 0

	CUTFORM 6, 1, 1+2,
		0,0,1, topPanelHeight-gs_fw_upper,
		-ac_unit_width/2+(gs_fthk-gs_gsb-gs_glass_thk)*TAN(90+leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2), 0, 31,
		-ac_unit_width/2+gs_fw_side_left, 0, 31,
		-ac_unit_width/2+gs_fw_side_left, gs_fthk, 31,
		-ac_unit_width/2+(gs_frame_width/2)/SIN(leftCornerAngle/2), gs_fthk, 31,
		-ac_unit_width/2+(gs_fthk-gs_gsb-gs_glass_thk)*TAN(90+leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2), gs_gsb+gs_glass_thk, 31,
		-ac_unit_width/2+(gs_fthk-gs_gsb-gs_glass_thk)*TAN(90+leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2), 0, -1
	DEL 2
	xpltp=-gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(leftCornerAngle/2)
endif

if iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED_WO_FRAME AND gs_UTrans AND gs_cl then
	ROTX 90
	ADDZ -ac_unit_height+gs_fw_upper
	CUTFORM 5, 1, 1+2,
		0,0,1, topPanelHeight-gs_fw_upper,
		-ac_unit_width/2+gs_fw_side_left, 0, 1+2+4+8+16,
		-ac_unit_width/2, 0, 1+2+4+8+16,
		-ac_unit_width/2, gs_fthk, 1+2+4+8+16,
		-ac_unit_width/2+gs_fw_side_left, gs_fthk, 1+2+4+8+16,
		-ac_unit_width/2+gs_fw_side_left, 0, -1
	DEL 2
	xpltp=0
endif
!! END OF TOP PANEL !

gs_rh_m=0

! =============================================================================
! Contour Frame
! =============================================================================

if not(gs_UTrans) then
	if not(gs_bSLight) and not(gs_bSLight2) then
		if gs_SashText_typ_num = 1 then ! Mittered Joint
			base
			gosub "leftFrameSimpleMittered"
			gosub "textures1"
			body 1

			base
			gosub "rightFrameSimpleMittered"
			gosub "textures1"
			body 1

			base
				Prism_ 4, gs_fthk,
					rightFrame, topFrame,mask3,
					leftFrame, topFrame, 10,
					-ac_unit_width/2+gs_fw_side_left, ac_unit_height-gs_fw_upper, 15,
					ac_unit_width/2-gs_fw_side_right, ac_unit_height-gs_fw_upper, 10
			body 1
				Prism_ 4, gs_fthk,
					leftFrame, bottomFrame, 10,
					-ac_unit_width/2+gs_fw_side_left, gs_fw_lower, 15,
					ac_unit_width/2-gs_fw_side_right, gs_fw_lower, 10,
					rightFrame, bottomFrame,15

			gosub "textures2"
			body 1
	else  ! Butt Joint
			base
			gosub "leftFrameSimpleButtJoint"
			gosub "textures1"
			body 1

			base
			gosub "rightFrameSimpleButtJoint"
			gosub "textures1"
			body 1

			base
				Prism_ 6, gs_fthk,
					rightFrame, topFrame,mask3,
					leftFrame, topFrame,mask4,
					leftFrame, ac_unit_height-gs_fw_upper, 8+maskLeftButFr,
					-ac_unit_width/2+gs_fw_side_left, ac_unit_height-gs_fw_upper, 13,
					ac_unit_width/2-gs_fw_side_right, ac_unit_height-gs_fw_upper, 8+maskRightButFr,
					rightFrame, ac_unit_height-gs_fw_upper, mask2
			body 1
				Prism_ 6, gs_fthk,
					rightFrame, gs_fw_lower, 8+maskRightButFr,
					ac_unit_width/2-gs_fw_side_right, gs_fw_lower, 13,
					-ac_unit_width/2+gs_fw_side_left, gs_fw_lower, 8+maskLeftButFr,
					leftFrame, gs_fw_lower, mask4,
					leftFrame, bottomFrame, mask1,
					rightFrame, bottomFrame, mask2
			gosub "textures2"
			body 1
		endif
	endif


	if gs_bSLight and not(gs_bSLight2) then
		if gs_SashText_typ_num = 1 then   ! Mittered Joint
			base
			gosub "leftFrameSimpleMittered"
			gosub "textures1"
			body 1

			base
				Prism_ 4, gs_fthk,
					-ac_unit_width/2+leftPanelWidth, ac_unit_height-gs_fw_upper, 15,
					-ac_unit_width/2+leftPanelWidth, gs_fw_lower, 10,
					-ac_unit_width/2+frameOrSLightWidthLeft, gs_fw_lower, 15,
					-ac_unit_width/2+frameOrSLightWidthLeft, ac_unit_height-gs_fw_upper, 10
			gosub "textures1"
			body 1

			base
			gosub "rightFrameSimpleMittered"
			gosub "textures1"
			body 1

			base
				Prism_ 6, gs_fthk,
					leftFrame, bottomFrame, 10,
					-ac_unit_width/2+gs_fw_side_left, gs_fw_lower, 15,
					-ac_unit_width/2+leftPanelWidth, gs_fw_lower, 10,
					-ac_unit_width/2+frameOrSLightWidthLeft, gs_fw_lower, 15,
					ac_unit_width/2-gs_fw_side_right, gs_fw_lower, 10,
					rightFrame, bottomFrame, 15
			gosub "textures2"
			body 1

			base
				Prism_ 6, gs_fthk,
					rightFrame, topFrame,mask3,
					leftFrame, topFrame, 10,
					-ac_unit_width/2+gs_fw_side_left, ac_unit_height-gs_fw_upper, 15,
					-ac_unit_width/2+leftPanelWidth, ac_unit_height-gs_fw_upper, 10,
					-ac_unit_width/2+frameOrSLightWidthLeft, ac_unit_height-gs_fw_upper, 15,
					ac_unit_width/2-gs_fw_side_right, ac_unit_height-gs_fw_upper, 10
			gosub "textures2"
			body 1
	else
			base
			gosub "leftFrameSimpleButtJoint"
			gosub "textures1"
			body 1

			base
				Prism_ 4, gs_fthk,
					-ac_unit_width/2+leftPanelWidth, ac_unit_height-gs_fw_upper, 15,
					-ac_unit_width/2+leftPanelWidth, gs_fw_lower, 10,
					-ac_unit_width/2+frameOrSLightWidthLeft, gs_fw_lower, 13,
					-ac_unit_width/2+frameOrSLightWidthLeft, ac_unit_height-gs_fw_upper, 10
			gosub "textures1"
			body 1

			base
			gosub "rightFrameSimpleButtJoint"
			gosub "textures1"
			body 1

			base
				Prism_ 8, gs_fthk,
					-ac_unit_width/2+gs_fw_side_left, gs_fw_lower, 10,
					leftFrame, gs_fw_lower, mask4,
					leftFrame, bottomFrame, 15,
					rightFrame, bottomFrame, 15,
					rightFrame, gs_fw_lower,8+maskRightButFr,
					ac_unit_width/2-gs_fw_side_right, gs_fw_lower, 15,
					-ac_unit_width/2+frameOrSLightWidthLeft, gs_fw_lower, 8+maskLeftButFr,
					-ac_unit_width/2+leftPanelWidth, gs_fw_lower, 15

			gosub "textures2"
			body 1

			base
				Prism_ 8, gs_fthk,
					rightFrame, topFrame,mask3,
					leftFrame, topFrame,mask4,
					leftFrame, ac_unit_height-gs_fw_upper, 8+maskLeftButFr,
					-ac_unit_width/2+gs_fw_side_left, ac_unit_height-gs_fw_upper, 15,
					-ac_unit_width/2+leftPanelWidth, ac_unit_height-gs_fw_upper, 10,
					-ac_unit_width/2+frameOrSLightWidthLeft, ac_unit_height-gs_fw_upper, 15,
					ac_unit_width/2-gs_fw_side_right, ac_unit_height-gs_fw_upper, 10+maskRightButFr,
					rightFrame, ac_unit_height-gs_fw_upper, mask2
			gosub "textures2"
			body 1
		endif
	endif

	if not(gs_bSLight) AND gs_bSLight2 then
		if gs_SashText_typ_num = 1 then   ! Mittered Joint
			base
			gosub "rightFrameSimpleMittered"
			gosub "textures1"
			body 1

			base
				Prism_ 4, gs_fthk,
					ac_unit_width/2-rightPanelWidth, ac_unit_height-gs_fw_upper, 15,
					ac_unit_width/2-rightPanelWidth, gs_fw_lower, 10,
					ac_unit_width/2-gs_fw_side_left*(not(gs_bSLight2))-rightPanelWidth-gs_frame_width*(gs_bSLight2), gs_fw_lower, 15,
					ac_unit_width/2-gs_fw_side_left*(not(gs_bSLight2))-rightPanelWidth-gs_frame_width*(gs_bSLight2), ac_unit_height-gs_fw_upper, 10
			gosub "textures1"
			body 1

			base
			gosub "leftFrameSimpleMittered"
			gosub "textures1"
			body 1

			base
				Prism_ 6, gs_fthk,
					rightFrame, bottomFrame, 10,
					ac_unit_width/2-gs_fw_side_right, gs_fw_lower, 15,
					ac_unit_width/2-rightPanelWidth, gs_fw_lower, 10,
					ac_unit_width/2-frameOrSLightWidthRight, gs_fw_lower, 15,
					-ac_unit_width/2+gs_fw_side_left, gs_fw_lower, 10,
					leftFrame, bottomFrame, 15
			gosub "textures2"
			body 1

			base
				Prism_ 6, gs_fthk,
					leftFrame, topFrame, mask3,
					rightFrame, topFrame, 10,
					ac_unit_width/2-gs_fw_side_right, ac_unit_height-gs_fw_upper, 15,
					ac_unit_width/2-rightPanelWidth, ac_unit_height-gs_fw_upper, 10,
					ac_unit_width/2-frameOrSLightWidthRight, ac_unit_height-gs_fw_upper, 15,
					-ac_unit_width/2+gs_fw_side_left, ac_unit_height-gs_fw_upper, 10
			gosub "textures2"
			body 1
	else  ! Butt Joint
			base
			gosub "rightFrameSimpleButtJoint"
			gosub "textures1"
			body 1

			base
				Prism_ 4, gs_fthk,
					ac_unit_width/2-rightPanelWidth,  ac_unit_height-gs_fw_upper, 15,
					ac_unit_width/2-rightPanelWidth, gs_fw_lower, 10,
					ac_unit_width/2-frameOrSLightWidthRight, gs_fw_lower, 13,
					ac_unit_width/2-frameOrSLightWidthRight, ac_unit_height-gs_fw_upper, 10
			gosub "textures1"
			body 1

			base
			gosub "leftFrameSimpleButtJoint"
			gosub "textures1"
			body 1

			base
				Prism_ 8, gs_fthk,
					ac_unit_width/2-gs_fw_side_right, gs_fw_lower, 10,
					rightFrame, gs_fw_lower, mask4,
					rightFrame, bottomFrame, 15,
					leftFrame, bottomFrame, 15,
					leftFrame, gs_fw_lower, 8+maskLeftButFr,
					-ac_unit_width/2+gs_fw_side_left, gs_fw_lower, 15,
					ac_unit_width/2-frameOrSLightWidthRight, gs_fw_lower, 8+maskRightButFr,
					ac_unit_width/2-rightPanelWidth, gs_fw_lower, 15
			gosub "textures2"
			body 1

			base
				Prism_ 8, gs_fthk,
					leftFrame, topFrame, mask3,
					rightFrame, topFrame, mask4,
					rightFrame, ac_unit_height-gs_fw_upper, 8+maskRightButFr,
					ac_unit_width/2-gs_fw_side_right, ac_unit_height-gs_fw_upper, 15,
					ac_unit_width/2-rightPanelWidth, ac_unit_height-gs_fw_upper, 10,
					ac_unit_width/2-frameOrSLightWidthRight, ac_unit_height-gs_fw_upper, 15,
					-ac_unit_width/2+gs_fw_side_left, ac_unit_height-gs_fw_upper, 10+maskLeftButFr,
					leftFrame, ac_unit_height-gs_fw_upper, mask2
			gosub "textures2"
			body 1
		endif

	endif

	if gs_bSLight AND gs_bSLight2 then
		if gs_SashText_typ_num = 1 then   ! Mittered Joint

			base
				Prism_ 4, gs_fthk,
					-ac_unit_width/2+leftPanelWidth, ac_unit_height-gs_fw_upper, 15,
					-ac_unit_width/2+leftPanelWidth, gs_fw_lower, 10,
					-ac_unit_width/2+frameOrSLightWidthLeft, gs_fw_lower, 15,
					-ac_unit_width/2+frameOrSLightWidthLeft, ac_unit_height-gs_fw_upper, 10
			gosub "textures1"
			body 1

			base
			gosub "rightFrameSimpleMittered"
			gosub "textures1"
			body 1

			base
				Prism_ 4, gs_fthk,
					ac_unit_width/2-rightPanelWidth, ac_unit_height-gs_fw_upper, 15,
					ac_unit_width/2-rightPanelWidth, gs_fw_lower, 10,
					ac_unit_width/2-gs_fw_side_left*(not(gs_bSLight2))-rightPanelWidth-gs_frame_width*(gs_bSLight2), gs_fw_lower, 15,
					ac_unit_width/2-gs_fw_side_left*(not(gs_bSLight2))-rightPanelWidth-gs_frame_width*(gs_bSLight2), ac_unit_height-gs_fw_upper, 10
			gosub "textures1"
			body 1

			base
			gosub "leftFrameSimpleMittered"
			gosub "textures1"
			body 1

			base
				Prism_ 8, gs_fthk,
					leftFrame, topFrame, mask3,
					rightFrame, topFrame, 10,
					ac_unit_width/2-gs_fw_side_right, ac_unit_height-gs_fw_upper, 15,
					ac_unit_width/2-rightPanelWidth, ac_unit_height-gs_fw_upper, 10,
					ac_unit_width/2-frameOrSLightWidthRight, ac_unit_height-gs_fw_upper, 15,
					-ac_unit_width/2+frameOrSLightWidthLeft, ac_unit_height-gs_fw_upper,10,
					-ac_unit_width/2+leftPanelWidth, ac_unit_height-gs_fw_upper,15,
					-ac_unit_width/2+gs_fw_side_left, ac_unit_height-gs_fw_upper, 10
			gosub "textures2"
			body 1

			base
				Prism_ 8, gs_fthk,
					leftFrame, bottomFrame, 10,
					-ac_unit_width/2+gs_fw_side_left, gs_fw_lower, 15,
					-ac_unit_width/2+leftPanelWidth, gs_fw_lower, 10,
					-ac_unit_width/2+frameOrSLightWidthLeft, gs_fw_lower, 15,
					ac_unit_width/2-frameOrSLightWidthRight, gs_fw_lower, 10,
					ac_unit_width/2-rightPanelWidth,  gs_fw_lower, 15,
					ac_unit_width/2-gs_fw_side_right, gs_fw_lower, 10,
					rightFrame, bottomFrame, 15

			gosub "textures2"
			body 1
	else    ! Butt Joint
			base
				Prism_ 4, gs_fthk,
					-ac_unit_width/2+leftPanelWidth, ac_unit_height-gs_fw_upper, 15,
					-ac_unit_width/2+leftPanelWidth, gs_fw_lower, 10,
					-ac_unit_width/2+frameOrSLightWidthLeft, gs_fw_lower, 13,
					-ac_unit_width/2+frameOrSLightWidthLeft, ac_unit_height-gs_fw_upper, 10
			gosub "textures1"
			body 1

			base
			gosub "rightFrameSimpleButtJoint"
			gosub "textures1"
			body 1

			base
				Prism_ 4, gs_fthk,
					ac_unit_width/2-rightPanelWidth,  ac_unit_height-gs_fw_upper, 15,
					ac_unit_width/2-rightPanelWidth, gs_fw_lower, 10,
					ac_unit_width/2-frameOrSLightWidthRight, gs_fw_lower, 13,
					ac_unit_width/2-frameOrSLightWidthRight, ac_unit_height-gs_fw_upper, 10
			gosub "textures1"
			body 1

			base
			gosub "leftFrameSimpleButtJoint"
			gosub "textures1"
			body 1

			base
				Prism_ 10, gs_fthk,
					leftFrame, topFrame, mask3,
					rightFrame, topFrame, mask4,
					rightFrame, ac_unit_height-gs_fw_upper, 8+maskRightButFr,
					ac_unit_width/2-gs_fw_side_right, ac_unit_height-gs_fw_upper, 15,
					ac_unit_width/2-rightPanelWidth, ac_unit_height-gs_fw_upper, 10,
					ac_unit_width/2-frameOrSLightWidthRight, ac_unit_height-gs_fw_upper, 15,
					-ac_unit_width/2+frameOrSLightWidthLeft, ac_unit_height-gs_fw_upper,10,
					-ac_unit_width/2+leftPanelWidth, ac_unit_height-gs_fw_upper,15,
					-ac_unit_width/2+gs_fw_side_left, ac_unit_height-gs_fw_upper, 10+maskLeftButFr,
					leftFrame, ac_unit_height-gs_fw_upper, mask2
			gosub "textures2"
			body 1

			base
				Prism_ 10, gs_fthk,
					-ac_unit_width/2+gs_fw_side_left, gs_fw_lower, 10,
					leftFrame, gs_fw_lower, mask4,
					leftFrame, bottomFrame, 15,
					rightFrame, bottomFrame, 15,
					rightFrame, gs_fw_lower, 8,
					ac_unit_width/2-gs_fw_side_right, gs_fw_lower, 15,
					ac_unit_width/2-rightPanelWidth, gs_fw_lower, 10+maskRightButFr,
					ac_unit_width/2-frameOrSLightWidthRight, gs_fw_lower, 15,
					-ac_unit_width/2+frameOrSLightWidthLeft, gs_fw_lower, 8+maskLeftButFr,
					-ac_unit_width/2+leftPanelWidth, gs_fw_lower, 15
			gosub "textures2"
			body 1

		endif
	endif
else
	if not(gs_bSLight) AND not(gs_bSLight2) then
		if gs_SashText_typ_num = 1 then   ! Mittered Joint
			base
				if iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED then
					Prism_ 6, gs_fthk,
						leftFrame, topFrame, mask4,
						leftFrame, bottomFrame, 10,
						-ac_unit_width/2+gs_fw_side_left+(xpltp-gs_fw_side_left)*(xpltp>gs_fw_side_left), gs_fw_lower, 15,
						-ac_unit_width/2+gs_fw_side_left+(xpltp-gs_fw_side_left)*(xpltp>gs_fw_side_left),ac_unit_height-gs_fw_upper*(not(gs_UTrans))-topPanelHeight-gs_frame_width*(gs_UTrans),10,
						-ac_unit_width/2+gs_fw_side_left+(xpltp-gs_fw_side_left)*(xpltp>gs_fw_side_left), ac_unit_height-topPanelHeight , 15,
						-ac_unit_width/2+gs_fw_side_left+(xpltp-gs_fw_side_left)*(xpltp>gs_fw_side_left), ac_unit_height-gs_fw_upper, 10
				else
					Prism_ 6, gs_fthk,
						leftFrame, topFrame, mask4,
						leftFrame, bottomFrame, 10,
						-ac_unit_width/2+gs_fw_side_left, gs_fw_lower, 15,
						-ac_unit_width/2+gs_fw_side_left,ac_unit_height-gs_fw_upper*(not(gs_UTrans))-topPanelHeight-gs_frame_width*(gs_UTrans),10,
						-ac_unit_width/2+gs_fw_side_left, ac_unit_height-topPanelHeight , 15,
						-ac_unit_width/2+gs_fw_side_left, ac_unit_height-gs_fw_upper, 10
				endif
			gosub "textures1"
			body 1

			base
				Prism_ 6, gs_fthk,
					rightFrame, bottomFrame,mask2,
					rightFrame, topFrame, 10,
					ac_unit_width/2-gs_fw_side_right-(xprtp-gs_fw_side_right)*(xprtp>gs_fw_side_right), ac_unit_height-gs_fw_upper, 15,
					ac_unit_width/2-gs_fw_side_right-(xprtp-gs_fw_side_right)*(xprtp>gs_fw_side_right), ac_unit_height-topPanelHeight , 10,
					ac_unit_width/2-gs_fw_side_right-(xprtp-gs_fw_side_right)*(xprtp>gs_fw_side_right), ac_unit_height-gs_fw_upper*(not(gs_UTrans))-topPanelHeight-gs_frame_width*(gs_UTrans),15,
					ac_unit_width/2-gs_fw_side_right-(xprtp-gs_fw_side_right)*(xprtp>gs_fw_side_right), gs_fw_lower, 10
			gosub "textures1"
			body 1

			base

				Prism_ 4, gs_fthk,
					rightFrame, topFrame,mask3,
					leftFrame, topFrame, 10,
					-ac_unit_width/2+gs_fw_side_left, ac_unit_height-gs_fw_upper, 15,
					ac_unit_width/2-gs_fw_side_right, ac_unit_height-gs_fw_upper, 10
			body 1
				Prism_ 4, gs_fthk,
					leftFrame, bottomFrame, 10,
					-ac_unit_width/2+gs_fw_side_left, gs_fw_lower, 15,
					ac_unit_width/2-gs_fw_side_right, gs_fw_lower, 10,
					rightFrame, bottomFrame,15


			gosub "textures2"
			body 1
	else  ! Butt Joint
			base
				if iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED then
					Prism_ 6, gs_fthk,
						leftFrame, ac_unit_height-gs_fw_upper, mask4,
						leftFrame, gs_fw_lower, 10,
						-ac_unit_width/2+gs_fw_side_left+(xpltp-gs_fw_side_left)*(xpltp>gs_fw_side_left), gs_fw_lower, 15,
						-ac_unit_width/2+gs_fw_side_left+(xpltp-gs_fw_side_left)*(xpltp>gs_fw_side_left), ac_unit_height-gs_fw_upper*(not(gs_UTrans))-topPanelHeight-gs_frame_width*(gs_UTrans),10,
						-ac_unit_width/2+gs_fw_side_left+(xpltp-gs_fw_side_left)*(xpltp>gs_fw_side_left), ac_unit_height-topPanelHeight , 15,
						-ac_unit_width/2+gs_fw_side_left+(xpltp-gs_fw_side_left)*(xpltp>gs_fw_side_left), ac_unit_height-gs_fw_upper, 10
				else
					Prism_ 6, gs_fthk,
						leftFrame, ac_unit_height-gs_fw_upper, mask4,
						leftFrame, gs_fw_lower, 10,
						-ac_unit_width/2+gs_fw_side_left, gs_fw_lower, 15,
						-ac_unit_width/2+gs_fw_side_left, ac_unit_height-gs_fw_upper*(not(gs_UTrans))-topPanelHeight-gs_frame_width*(gs_UTrans),10,
						-ac_unit_width/2+gs_fw_side_left, ac_unit_height-topPanelHeight , 15,
						-ac_unit_width/2+gs_fw_side_left, ac_unit_height-gs_fw_upper, 10
				endif
			gosub "textures1"
			body 1

			base
				Prism_ 6, gs_fthk,
					rightFrame, gs_fw_lower, mask2,
					rightFrame, ac_unit_height-gs_fw_upper, 10,
					ac_unit_width/2-gs_fw_side_right-(xprtp-gs_fw_side_right)*(xprtp>gs_fw_side_right), ac_unit_height-gs_fw_upper, 15,
					ac_unit_width/2-gs_fw_side_right-(xprtp-gs_fw_side_right)*(xprtp>gs_fw_side_right), ac_unit_height-topPanelHeight , 10,
					ac_unit_width/2-gs_fw_side_right-(xprtp-gs_fw_side_right)*(xprtp>gs_fw_side_right), ac_unit_height-gs_fw_upper*(not(gs_UTrans))-topPanelHeight-gs_frame_width*(gs_UTrans),15,
					ac_unit_width/2-gs_fw_side_right-(xprtp-gs_fw_side_right)*(xprtp>gs_fw_side_right), gs_fw_lower, 10
			gosub "textures1"
			body 1

			base
				Prism_ 6, gs_fthk,
					rightFrame, topFrame,mask3,
					leftFrame, topFrame,mask4,
					leftFrame, ac_unit_height-gs_fw_upper, 8+maskLeftButFr,
					-ac_unit_width/2+gs_fw_side_left, ac_unit_height-gs_fw_upper, 13,
					ac_unit_width/2-gs_fw_side_right, ac_unit_height-gs_fw_upper, 8+maskRightButFr,
					rightFrame, ac_unit_height-gs_fw_upper, mask2
			body 1
				Prism_ 6, gs_fthk,
					rightFrame, gs_fw_lower, 8+maskRightButFr,
					ac_unit_width/2-gs_fw_side_right, gs_fw_lower, 13,
					-ac_unit_width/2+gs_fw_side_left, gs_fw_lower, 8+maskLeftButFr,
					leftFrame, gs_fw_lower, mask4,
					leftFrame, bottomFrame, mask1,
					rightFrame, bottomFrame, mask2
			gosub "textures2"
			body 1
		endif

		! Top Panel Frame
		base
			Prism_ 4, gs_fthk,
				ac_unit_width/2-gs_fw_side_right-(xprtp-gs_fw_side_right)*(xprtp>gs_fw_side_right), ac_unit_height-topPanelHeight , 10,
				ac_unit_width/2-gs_fw_side_right-(xprtp-gs_fw_side_right)*(xprtp>gs_fw_side_right), ac_unit_height-gs_fw_upper*(not(gs_UTrans))-topPanelHeight-gs_frame_width*(gs_UTrans),15,
				-ac_unit_width/2+gs_fw_side_left+(xpltp-gs_fw_side_left)*(xpltp>gs_fw_side_left)*(iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED),ac_unit_height-gs_fw_upper*(not(gs_UTrans))-topPanelHeight-gs_frame_width*(gs_UTrans),10,
				-ac_unit_width/2+gs_fw_side_left+(xpltp-gs_fw_side_left)*(xpltp>gs_fw_side_left)*(iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED), ac_unit_height-topPanelHeight , 15
			gosub "textures2"
		body 1
	endif


	if gs_bSLight AND not(gs_bSLight2) then
		if gs_SashText_typ_num = 1 then   ! Mittered Joint
			base
				Prism_ 6, gs_fthk,
					leftFrame, topFrame,mask4,
					leftFrame, bottomFrame, 10,
					-ac_unit_width/2+gs_fw_side_left, gs_fw_lower, 15,
					-ac_unit_width/2+gs_fw_side_left, ac_unit_height-gs_fw_upper*(not(gs_UTrans))-topPanelHeight-gs_frame_width*(gs_UTrans),10,
					-ac_unit_width/2+gs_fw_side_left, ac_unit_height-topPanelHeight, 15,
					-ac_unit_width/2+gs_fw_side_left, ac_unit_height-gs_fw_upper, 10
			gosub "textures1"
			body 1

			base
				Prism_ 8, gs_fthk,
					-ac_unit_width/2+leftPanelWidth, ac_unit_height-gs_fw_upper, 15,
					-ac_unit_width/2+leftPanelWidth, ac_unit_height-topPanelHeight, 10,
					-ac_unit_width/2+leftPanelWidth,ac_unit_height-topPanelHeight-gs_frame_width,15,
					-ac_unit_width/2+leftPanelWidth, gs_fw_lower, 10,
					-ac_unit_width/2+frameOrSLightWidthLeft, gs_fw_lower, 15,
					-ac_unit_width/2+frameOrSLightWidthLeft,ac_unit_height-gs_fw_upper*(not(gs_UTrans))-topPanelHeight-gs_frame_width*(gs_UTrans),10,
					-ac_unit_width/2+frameOrSLightWidthLeft,ac_unit_height-topPanelHeight,15,
					-ac_unit_width/2+frameOrSLightWidthLeft, ac_unit_height-gs_fw_upper, 10
			gosub "textures1"
			body 1

			base
				Prism_ 6, gs_fthk,
					rightFrame, bottomFrame, mask2,
					rightFrame, topFrame, 10,
					ac_unit_width/2-gs_fw_side_right, ac_unit_height-gs_fw_upper, 15,
					ac_unit_width/2-gs_fw_side_right, ac_unit_height-topPanelHeight,10,
					ac_unit_width/2-gs_fw_side_right, ac_unit_height-gs_fw_upper*(not(gs_UTrans))-topPanelHeight-gs_frame_width*(gs_UTrans),15,
					ac_unit_width/2-gs_fw_side_right, gs_fw_lower, 10
			gosub "textures1"
			body 1

			base
				Prism_ 6, gs_fthk,
					leftFrame, bottomFrame, 10,
					-ac_unit_width/2+gs_fw_side_left, gs_fw_lower, 15,
					-ac_unit_width/2+leftPanelWidth, gs_fw_lower, 10,
					-ac_unit_width/2+frameOrSLightWidthLeft, gs_fw_lower, 15,
					ac_unit_width/2-gs_fw_side_right, gs_fw_lower, 10,
					rightFrame, bottomFrame, 15
			gosub "textures2"
			body 1

			base
				Prism_ 6, gs_fthk,
					rightFrame, topFrame, mask3,
					leftFrame, topFrame, 10,
					-ac_unit_width/2+gs_fw_side_left, ac_unit_height-gs_fw_upper, 15,
					-ac_unit_width/2+leftPanelWidth, ac_unit_height-gs_fw_upper, 10,
					-ac_unit_width/2+frameOrSLightWidthLeft, ac_unit_height-gs_fw_upper, 15,
					ac_unit_width/2-gs_fw_side_right, ac_unit_height-gs_fw_upper, 10
			gosub "textures2"
			body 1
	else    ! Butt Joint
			base
				Prism_ 6, gs_fthk,
					leftFrame, ac_unit_height-gs_fw_upper, mask4,
					leftFrame, gs_fw_lower, 8,
					-ac_unit_width/2+gs_fw_side_left, gs_fw_lower, 15,
					-ac_unit_width/2+gs_fw_side_left, ac_unit_height-gs_fw_upper*(not(gs_UTrans))-topPanelHeight-gs_frame_width*(gs_UTrans),10,
					-ac_unit_width/2+gs_fw_side_left, ac_unit_height-topPanelHeight, 15,
					-ac_unit_width/2+gs_fw_side_left, ac_unit_height-gs_fw_upper, 10
			gosub "textures1"
			body 1

			base
				Prism_ 8, gs_fthk,
					-ac_unit_width/2+leftPanelWidth, ac_unit_height-gs_fw_upper, 15,
					-ac_unit_width/2+leftPanelWidth, ac_unit_height-topPanelHeight, 10,
					-ac_unit_width/2+leftPanelWidth, ac_unit_height-gs_fw_upper*(not(gs_UTrans))-topPanelHeight-gs_frame_width*(gs_UTrans),15,
					-ac_unit_width/2+leftPanelWidth, gs_fw_lower, 10,
					-ac_unit_width/2+frameOrSLightWidthLeft, gs_fw_lower, 13,
					-ac_unit_width/2+frameOrSLightWidthLeft, ac_unit_height-gs_fw_upper*(not(gs_UTrans))-topPanelHeight-gs_frame_width*(gs_UTrans),10,
					-ac_unit_width/2+frameOrSLightWidthLeft, ac_unit_height-topPanelHeight,15,
					-ac_unit_width/2+frameOrSLightWidthLeft, ac_unit_height-gs_fw_upper, 10
			gosub "textures1"
			body 1

			base
				Prism_ 6, gs_fthk,
					rightFrame, gs_fw_lower, mask2,
					rightFrame, ac_unit_height-gs_fw_upper, 8,
					ac_unit_width/2-gs_fw_side_right, ac_unit_height-gs_fw_upper, 15,
					ac_unit_width/2-gs_fw_side_right, ac_unit_height-topPanelHeight, 10,
					ac_unit_width/2-gs_fw_side_right, ac_unit_height-gs_fw_upper*(not(gs_UTrans))-topPanelHeight-gs_frame_width*(gs_UTrans),15,
					ac_unit_width/2-gs_fw_side_right, gs_fw_lower, 10
			gosub "textures1"
			body 1

			base
				Prism_ 8, gs_fthk,
					-ac_unit_width/2+gs_fw_side_left, gs_fw_lower, 10,
					leftFrame, gs_fw_lower, mask4,
					leftFrame, bottomFrame, 15,
					rightFrame, bottomFrame,mask2,
					rightFrame, gs_fw_lower, 8+maskRightButFr,
					ac_unit_width/2-gs_fw_side_right, gs_fw_lower, 15,
					-ac_unit_width/2+frameOrSLightWidthLeft, gs_fw_lower, 10+maskLeftButFr,
					-ac_unit_width/2+leftPanelWidth, gs_fw_lower, 15

			gosub "textures2"
			body 1

			base
				Prism_ 8, gs_fthk,
					rightFrame, topFrame, mask3,
					leftFrame, topFrame, mask4,
					leftFrame, ac_unit_height-gs_fw_upper, 8+maskLeftButFr,
					-ac_unit_width/2+gs_fw_side_left, ac_unit_height-gs_fw_upper, 15,
					-ac_unit_width/2+frameOrSLightWidthLeft, ac_unit_height-gs_fw_upper, 15,
					ac_unit_width/2-gs_fw_side_right, ac_unit_height-gs_fw_upper, 10+maskRightButFr,
					rightFrame, ac_unit_height-gs_fw_upper, mask2,
					rightFrame, topFrame, -1

			gosub "textures2"
			body 1
		endif

		! Top Panel Frame
		base
			Prism_ 4, gs_fthk,
				ac_unit_width/2-gs_fw_side_right, ac_unit_height-topPanelHeight,10,
				ac_unit_width/2-gs_fw_side_right, ac_unit_height-gs_fw_upper*(not(gs_UTrans))-topPanelHeight-gs_frame_width*(gs_UTrans),15,
				-ac_unit_width/2+frameOrSLightWidthLeft, ac_unit_height-gs_fw_upper*(not(gs_UTrans))-topPanelHeight-gs_frame_width*(gs_UTrans), 10,
				-ac_unit_width/2+frameOrSLightWidthLeft, ac_unit_height-topPanelHeight, 15
		body 1
			Prism_ 4, gs_fthk,
				-ac_unit_width/2+gs_fw_side_left, ac_unit_height-topPanelHeight,10,
				-ac_unit_width/2+gs_fw_side_left, ac_unit_height-gs_fw_upper*(not(gs_UTrans))-topPanelHeight-gs_frame_width*(gs_UTrans),15,
				-ac_unit_width/2+leftPanelWidth, ac_unit_height-gs_fw_upper*(not(gs_UTrans))-topPanelHeight-gs_frame_width*(gs_UTrans), 10,
				-ac_unit_width/2+leftPanelWidth, ac_unit_height-topPanelHeight, 15
			gosub "textures2"
		body 1
	endif

	if not(gs_bSLight) AND gs_bSLight2 then
		if gs_SashText_typ_num = 1 then   ! Mittered Joint
			base
				Prism_ 6, gs_fthk,
					rightFrame, topFrame, mask4,
					rightFrame, bottomFrame, 10,
					ac_unit_width/2-gs_fw_side_right, gs_fw_lower, 15,
					ac_unit_width/2-gs_fw_side_right, ac_unit_height-gs_fw_upper*(not(gs_UTrans))-topPanelHeight-gs_frame_width*(gs_UTrans),10,
					ac_unit_width/2-gs_fw_side_right, ac_unit_height-topPanelHeight, 15,
					ac_unit_width/2-gs_fw_side_right, ac_unit_height-gs_fw_upper, 10
			gosub "textures1"
			body 1

			base
				Prism_ 8, gs_fthk,
					ac_unit_width/2-rightPanelWidth, ac_unit_height-gs_fw_upper, 15,
					ac_unit_width/2-rightPanelWidth, ac_unit_height-topPanelHeight, 10,
					ac_unit_width/2-rightPanelWidth,ac_unit_height-gs_fw_upper*(not(gs_UTrans))-topPanelHeight-gs_frame_width*(gs_UTrans),15,
					ac_unit_width/2-rightPanelWidth, gs_fw_lower, 10,
					ac_unit_width/2-frameOrSLightWidthRight, gs_fw_lower, 15,
					ac_unit_width/2-frameOrSLightWidthRight,ac_unit_height-gs_fw_upper*(not(gs_UTrans))-topPanelHeight-gs_frame_width*(gs_UTrans),10,
					ac_unit_width/2-frameOrSLightWidthRight,ac_unit_height-topPanelHeight,15,
					ac_unit_width/2-frameOrSLightWidthRight, ac_unit_height-gs_fw_upper, 10
			gosub "textures1"
			body 1

			base
				Prism_ 6, gs_fthk,
					leftFrame, bottomFrame, mask2,
					leftFrame, topFrame, 10,
					-ac_unit_width/2+gs_fw_side_left, ac_unit_height-gs_fw_upper, 15,
					-ac_unit_width/2+gs_fw_side_left, ac_unit_height-topPanelHeight,10,
					-ac_unit_width/2+gs_fw_side_left, ac_unit_height-gs_fw_upper*(not(gs_UTrans))-topPanelHeight-gs_frame_width*(gs_UTrans),15,
					-ac_unit_width/2+gs_fw_side_left, gs_fw_lower, 10
			gosub "textures1"
			body 1

			base
				Prism_ 6, gs_fthk,
					rightFrame, bottomFrame, 10,
					ac_unit_width/2-gs_fw_side_right, gs_fw_lower, 15,
					ac_unit_width/2-rightPanelWidth, gs_fw_lower, 10,
					ac_unit_width/2-frameOrSLightWidthRight, gs_fw_lower, 15,
					-ac_unit_width/2+gs_fw_side_left, gs_fw_lower, 10,
					leftFrame, bottomFrame, 15
			gosub "textures2"
			body 1

			base
				Prism_ 6, gs_fthk,
					leftFrame, topFrame, mask3,
					rightFrame, topFrame, 10,
					ac_unit_width/2-gs_fw_side_right, ac_unit_height-gs_fw_upper, 15,
					ac_unit_width/2-rightPanelWidth, ac_unit_height-gs_fw_upper, 10,
					ac_unit_width/2-frameOrSLightWidthRight, ac_unit_height-gs_fw_upper, 15,
					-ac_unit_width/2+gs_fw_side_left, ac_unit_height-gs_fw_upper, 10
			gosub "textures2"
			body 1
	else  ! Butt Joint
			base
				Prism_ 6, gs_fthk,
					rightFrame, ac_unit_height-gs_fw_upper, mask4,
					rightFrame, gs_fw_lower, 8,
					ac_unit_width/2-gs_fw_side_right, gs_fw_lower, 15,
					ac_unit_width/2-gs_fw_side_right, ac_unit_height-gs_fw_upper*(not(gs_UTrans))-topPanelHeight-gs_frame_width*(gs_UTrans),10,
					ac_unit_width/2-gs_fw_side_right, ac_unit_height-topPanelHeight, 15,
					ac_unit_width/2-gs_fw_side_right, ac_unit_height-gs_fw_upper, 10
			gosub "textures1"
			body 1

			base
				Prism_ 8, gs_fthk,
					ac_unit_width/2-rightPanelWidth,  ac_unit_height-gs_fw_upper, 15,
					ac_unit_width/2-rightPanelWidth, ac_unit_height-topPanelHeight, 10,
					ac_unit_width/2-rightPanelWidth, ac_unit_height-gs_fw_upper*(not(gs_UTrans))-topPanelHeight-gs_frame_width*(gs_UTrans),15,
					ac_unit_width/2-rightPanelWidth, gs_fw_lower, 10,
					ac_unit_width/2-frameOrSLightWidthRight, gs_fw_lower, 13,
					ac_unit_width/2-frameOrSLightWidthRight,ac_unit_height-gs_fw_upper*(not(gs_UTrans))-topPanelHeight-gs_frame_width*(gs_UTrans),10,
					ac_unit_width/2-frameOrSLightWidthRight,ac_unit_height-topPanelHeight,15,
					ac_unit_width/2-frameOrSLightWidthRight, ac_unit_height-gs_fw_upper, 10
			gosub "textures1"
			body 1

			base
				Prism_ 6, gs_fthk,
					leftFrame, gs_fw_lower, mask2,
					leftFrame, ac_unit_height-gs_fw_upper, 8,
					-ac_unit_width/2+gs_fw_side_left, ac_unit_height-gs_fw_upper, 15,
					-ac_unit_width/2+gs_fw_side_left, ac_unit_height-topPanelHeight, 10,
					-ac_unit_width/2+gs_fw_side_left, ac_unit_height-gs_fw_upper*(not(gs_UTrans))-topPanelHeight-gs_frame_width*(gs_UTrans),15,
					-ac_unit_width/2+gs_fw_side_left, gs_fw_lower, 10
			gosub "textures1"
			body 1

			base
				Prism_ 8, gs_fthk,
					ac_unit_width/2-gs_fw_side_right, gs_fw_lower, 10,
					rightFrame, gs_fw_lower, mask4,
					rightFrame, bottomFrame, 15,
					leftFrame, bottomFrame, mask2,
					leftFrame, gs_fw_lower, 8+maskLeftButFr,
					-ac_unit_width/2+gs_fw_side_left, gs_fw_lower, 15,
					ac_unit_width/2-frameOrSLightWidthRight, gs_fw_lower, 8+maskRightButFr,
					ac_unit_width/2-rightPanelWidth, gs_fw_lower, 15
			gosub "textures2"
			body 1

			base
				Prism_ 8, gs_fthk,
					leftFrame, topFrame, mask3,
					rightFrame, topFrame, mask4,
					rightFrame, ac_unit_height-gs_fw_upper, 8+maskRightButFr,
					ac_unit_width/2-gs_fw_side_right, ac_unit_height-gs_fw_upper, 15,
					ac_unit_width/2-rightPanelWidth, ac_unit_height-gs_fw_upper, 10,
					ac_unit_width/2-frameOrSLightWidthRight, ac_unit_height-gs_fw_upper, 15,
					-ac_unit_width/2+gs_fw_side_left, ac_unit_height-gs_fw_upper, 10+maskLeftButFr,
					leftFrame, ac_unit_height-gs_fw_upper, mask2
			gosub "textures2"
			body 1
		endif

		! Top Panel Frame
		base
			Prism_ 4, gs_fthk,
				-ac_unit_width/2+gs_fw_side_left, ac_unit_height-topPanelHeight,10,
				-ac_unit_width/2+gs_fw_side_left, ac_unit_height-gs_fw_upper*(not(gs_UTrans))-topPanelHeight-gs_frame_width*(gs_UTrans),15,
				ac_unit_width/2-frameOrSLightWidthRight, ac_unit_height-gs_fw_upper*(not(gs_UTrans))-topPanelHeight-gs_frame_width*(gs_UTrans), 10,
				ac_unit_width/2-frameOrSLightWidthRight, ac_unit_height-topPanelHeight, 15
		body 1
			Prism_ 4, gs_fthk,
				ac_unit_width/2-gs_fw_side_right, ac_unit_height-topPanelHeight,10,
				ac_unit_width/2-gs_fw_side_right, ac_unit_height-gs_fw_upper*(not(gs_UTrans))-topPanelHeight-gs_frame_width*(gs_UTrans),15,
				ac_unit_width/2-rightPanelWidth, ac_unit_height-gs_fw_upper*(not(gs_UTrans))-topPanelHeight-gs_frame_width*(gs_UTrans), 10,
				ac_unit_width/2-rightPanelWidth, ac_unit_height-topPanelHeight, 15
			gosub "textures2"
		body 1
	endif

	if gs_bSLight AND gs_bSLight2 then
		if gs_SashText_typ_num = 1 then ! Mittered Joint
			base
				Prism_ 8, gs_fthk,
					-ac_unit_width/2+leftPanelWidth, ac_unit_height-gs_fw_upper, 15,
					-ac_unit_width/2+leftPanelWidth, ac_unit_height-topPanelHeight, 10,
					-ac_unit_width/2+leftPanelWidth, ac_unit_height-gs_fw_upper*(not(gs_UTrans))-topPanelHeight-gs_frame_width*(gs_UTrans),15,
					-ac_unit_width/2+leftPanelWidth, gs_fw_lower, 10,
					-ac_unit_width/2+frameOrSLightWidthLeft, gs_fw_lower, 15,
					-ac_unit_width/2+frameOrSLightWidthLeft, ac_unit_height-gs_fw_upper*(not(gs_UTrans))-topPanelHeight-gs_frame_width*(gs_UTrans),10,
					-ac_unit_width/2+frameOrSLightWidthLeft, ac_unit_height-topPanelHeight,15,
					-ac_unit_width/2+frameOrSLightWidthLeft, ac_unit_height-gs_fw_upper, 10
			gosub "textures1"
			body 1


			base
				Prism_ 6, gs_fthk,
					rightFrame, topFrame, mask4,
					rightFrame, bottomFrame, 10,
					ac_unit_width/2-gs_fw_side_right, gs_fw_lower, 15,
					ac_unit_width/2-gs_fw_side_right, ac_unit_height-gs_fw_upper*(not(gs_UTrans))-topPanelHeight-gs_frame_width*(gs_UTrans),10,
					ac_unit_width/2-gs_fw_side_right, ac_unit_height-topPanelHeight, 15,
					ac_unit_width/2-gs_fw_side_right, ac_unit_height-gs_fw_upper, 10
			gosub "textures1"
			body 1

			base
				Prism_ 8, gs_fthk,
					ac_unit_width/2-rightPanelWidth, ac_unit_height-gs_fw_upper, 15,
					ac_unit_width/2-rightPanelWidth, ac_unit_height-topPanelHeight, 10,
					ac_unit_width/2-rightPanelWidth, ac_unit_height-gs_fw_upper*(not(gs_UTrans))-topPanelHeight-gs_frame_width*(gs_UTrans),15,
					ac_unit_width/2-rightPanelWidth, gs_fw_lower, 10,
					ac_unit_width/2-frameOrSLightWidthRight, gs_fw_lower, 15,
					ac_unit_width/2-frameOrSLightWidthRight,ac_unit_height-gs_fw_upper*(not(gs_UTrans))-topPanelHeight-gs_frame_width*(gs_UTrans),10,
					ac_unit_width/2-frameOrSLightWidthRight,ac_unit_height-topPanelHeight,15,
					ac_unit_width/2-frameOrSLightWidthRight, ac_unit_height-gs_fw_upper, 10
			gosub "textures1"
			body 1

			base
				Prism_ 6, gs_fthk,
					leftFrame, bottomFrame, mask2,
					leftFrame, topFrame, 10,
					-ac_unit_width/2+gs_fw_side_left, ac_unit_height-gs_fw_upper, 15,
					-ac_unit_width/2+gs_fw_side_left, ac_unit_height-topPanelHeight,10,
					-ac_unit_width/2+gs_fw_side_left, ac_unit_height-gs_fw_upper*(not(gs_UTrans))-topPanelHeight-gs_frame_width*(gs_UTrans),15,
					-ac_unit_width/2+gs_fw_side_left, gs_fw_lower, 10
			gosub "textures1"
			body 1

			base
				Prism_ 8, gs_fthk,
					rightFrame, bottomFrame, 10,
					ac_unit_width/2-gs_fw_side_right, gs_fw_lower, 15,
					ac_unit_width/2-rightPanelWidth, gs_fw_lower, 10,
					ac_unit_width/2-frameOrSLightWidthRight, gs_fw_lower, 15,
					-ac_unit_width/2+frameOrSLightWidthLeft, gs_fw_lower, 10,
					-ac_unit_width/2+leftPanelWidth, gs_fw_lower, 15,
					-ac_unit_width/2+gs_fw_side_left, gs_fw_lower, 10,
					leftFrame, bottomFrame, 15
			gosub "textures2"
			body 1
			base
				Prism_ 8, gs_fthk,
					leftFrame, topFrame, mask3,
					rightFrame, topFrame, 10,
					ac_unit_width/2-gs_fw_side_right, ac_unit_height-gs_fw_upper, 15,
					ac_unit_width/2-rightPanelWidth, ac_unit_height-gs_fw_upper, 10,
					ac_unit_width/2-frameOrSLightWidthRight, ac_unit_height-gs_fw_upper, 15,
					-ac_unit_width/2+frameOrSLightWidthLeft, ac_unit_height-gs_fw_upper,10,
					-ac_unit_width/2+leftPanelWidth, ac_unit_height-gs_fw_upper,15,
					-ac_unit_width/2+gs_fw_side_left, ac_unit_height-gs_fw_upper, 10
			gosub "textures2"
			body 1
	else    ! Butt Joint
			base
				Prism_ 8, gs_fthk,
					-ac_unit_width/2+leftPanelWidth, ac_unit_height-gs_fw_upper, 15,
					-ac_unit_width/2+leftPanelWidth, ac_unit_height-topPanelHeight, 10,
					-ac_unit_width/2+leftPanelWidth, ac_unit_height-gs_fw_upper*(not(gs_UTrans))-topPanelHeight-gs_frame_width*(gs_UTrans),15,
					-ac_unit_width/2+leftPanelWidth, gs_fw_lower, 10,
					-ac_unit_width/2+frameOrSLightWidthLeft, gs_fw_lower, 13,
					-ac_unit_width/2+frameOrSLightWidthLeft,ac_unit_height-gs_fw_upper*(not(gs_UTrans))-topPanelHeight-gs_frame_width*(gs_UTrans),10,
					-ac_unit_width/2+frameOrSLightWidthLeft,ac_unit_height-topPanelHeight,15,
					-ac_unit_width/2+frameOrSLightWidthLeft, ac_unit_height-gs_fw_upper, 10
			gosub "textures1"
			body 1


			base
				Prism_ 6, gs_fthk,
					rightFrame, ac_unit_height-gs_fw_upper, mask4,
					rightFrame, gs_fw_lower, 8,
					ac_unit_width/2-gs_fw_side_right, gs_fw_lower, 15,
					ac_unit_width/2-gs_fw_side_right, ac_unit_height-gs_fw_upper*(not(gs_UTrans))-topPanelHeight-gs_frame_width*(gs_UTrans),10,
					ac_unit_width/2-gs_fw_side_right, ac_unit_height-topPanelHeight, 15,
					ac_unit_width/2-gs_fw_side_right, ac_unit_height-gs_fw_upper, 10
			gosub "textures1"
			body 1

			base
				Prism_ 8, gs_fthk,
					ac_unit_width/2-rightPanelWidth, ac_unit_height-gs_fw_upper, 15,
					ac_unit_width/2-rightPanelWidth, ac_unit_height-topPanelHeight, 10,
					ac_unit_width/2-rightPanelWidth, ac_unit_height-gs_fw_upper*(not(gs_UTrans))-topPanelHeight-gs_frame_width*(gs_UTrans),15,
					ac_unit_width/2-rightPanelWidth, gs_fw_lower, 10,
					ac_unit_width/2-frameOrSLightWidthRight, gs_fw_lower, 13,
					ac_unit_width/2-frameOrSLightWidthRight, ac_unit_height-gs_fw_upper*(not(gs_UTrans))-topPanelHeight-gs_frame_width*(gs_UTrans),10,
					ac_unit_width/2-frameOrSLightWidthRight, ac_unit_height-topPanelHeight,15,
					ac_unit_width/2-frameOrSLightWidthRight, ac_unit_height-gs_fw_upper, 10
			gosub "textures1"
			body 1

			base
				Prism_ 6, gs_fthk,
					leftFrame, gs_fw_lower, mask2,
					leftFrame, ac_unit_height-gs_fw_upper, 8,
					-ac_unit_width/2+gs_fw_side_left, ac_unit_height-gs_fw_upper, 15,
					-ac_unit_width/2+gs_fw_side_left, ac_unit_height-topPanelHeight, 10,
					-ac_unit_width/2+gs_fw_side_left, ac_unit_height-gs_fw_upper*(not(gs_UTrans))-topPanelHeight-gs_frame_width*(gs_UTrans),15,
					-ac_unit_width/2+gs_fw_side_left, gs_fw_lower, 10
			gosub "textures1"
			body 1

			base
				Prism_ 10, gs_fthk,
					ac_unit_width/2-rightPanelWidth, gs_fw_lower, 10,
					ac_unit_width/2-frameOrSLightWidthRight, gs_fw_lower, 15,
					-ac_unit_width/2+frameOrSLightWidthLeft, gs_fw_lower, 10,
					-ac_unit_width/2+leftPanelWidth, gs_fw_lower, 15,
					-ac_unit_width/2+gs_fw_side_left, gs_fw_lower, 8+maskLeftButFr,
					leftFrame, gs_fw_lower, mask2,
					leftFrame, bottomFrame, mask1,
					rightFrame, bottomFrame, mask4,
					rightFrame, gs_fw_lower, 8+maskRightButFr,
					ac_unit_width/2-gs_fw_side_right, gs_fw_lower, 13

			gosub "textures2"
			body 1

			base
				Prism_ 10, gs_fthk,
					leftFrame, topFrame, mask3,
					rightFrame, topFrame, mask4,
					rightFrame, ac_unit_height-gs_fw_upper, 8+maskRightButFr,
					ac_unit_width/2-gs_fw_side_right, ac_unit_height-gs_fw_upper, 13,
					ac_unit_width/2-rightPanelWidth, ac_unit_height-gs_fw_upper, 10,
					ac_unit_width/2-frameOrSLightWidthRight, ac_unit_height-gs_fw_upper, 15,
					-ac_unit_width/2+frameOrSLightWidthLeft, ac_unit_height-gs_fw_upper,10,
					-ac_unit_width/2+leftPanelWidth, ac_unit_height-gs_fw_upper,13,
					-ac_unit_width/2+gs_fw_side_left, ac_unit_height-gs_fw_upper, 8+maskLeftButFr,
					leftFrame, ac_unit_height-gs_fw_upper, mask2
			gosub "textures2"
			body 1
		endif

		! Top Panel Frame
		material gs_frame_mat
		Prism_ 4, gs_fthk,
			ac_unit_width/2-gs_fw_side_right, ac_unit_height-topPanelHeight,10,
			ac_unit_width/2-gs_fw_side_right, ac_unit_height-gs_fw_upper*(not(gs_UTrans))-topPanelHeight-gs_frame_width*(gs_UTrans),15,
			ac_unit_width/2-rightPanelWidth, ac_unit_height-gs_fw_upper*(not(gs_UTrans))-topPanelHeight-gs_frame_width*(gs_UTrans), 10,
			ac_unit_width/2-rightPanelWidth, ac_unit_height-topPanelHeight, 15
		body 1
		Prism_ 4, gs_fthk,
			-ac_unit_width/2+gs_fw_side_left, ac_unit_height-topPanelHeight,10,
			-ac_unit_width/2+gs_fw_side_left, ac_unit_height-gs_fw_upper*(not(gs_UTrans))-topPanelHeight-gs_frame_width*(gs_UTrans),15,
			-ac_unit_width/2+leftPanelWidth, ac_unit_height-gs_fw_upper*(not(gs_UTrans))-topPanelHeight-gs_frame_width*(gs_UTrans), 10,
			-ac_unit_width/2+leftPanelWidth, ac_unit_height-topPanelHeight, 15
		body 1
		Prism_ 4, gs_fthk,
			ac_unit_width/2-frameOrSLightWidthRight, ac_unit_height-gs_fw_upper*(not(gs_UTrans))-topPanelHeight-gs_frame_width*(gs_UTrans), 10,
			ac_unit_width/2-frameOrSLightWidthRight, ac_unit_height-topPanelHeight, 15,
			-ac_unit_width/2+frameOrSLightWidthLeft, ac_unit_height-topPanelHeight, 10,
			-ac_unit_width/2+frameOrSLightWidthLeft, ac_unit_height-gs_fw_upper*(not(gs_UTrans))-topPanelHeight-gs_frame_width*(gs_UTrans), 15
		body 1
	endif
endif

if iFrameStyleLeft <> FRAME_STYLE_VISIBLE_MULLIONS AND gs_UTrans AND gs_cl then CUTEND

if iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED AND gs_UTrans then CUTEND

if iFrameStyleRight <> FRAME_STYLE_VISIBLE_MULLIONS AND gs_UTrans AND gs_cr then CUTEND

if iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED AND gs_UTrans then CUTEND

if iFrameStyleLeft <> FRAME_STYLE_VISIBLE_MULLIONS AND gs_cl then CUTEND

if iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED then CUTEND

if iFrameStyleRight <> FRAME_STYLE_VISIBLE_MULLIONS AND gs_cr then CUTEND

if iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED then CUTEND

if iFrameStyleLeft <> FRAME_STYLE_VISIBLE_MULLIONS AND gs_cl AND bMiddleRail then CUTEND

if iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED AND bMiddleRail then CUTEND

if iFrameStyleRight <> FRAME_STYLE_VISIBLE_MULLIONS AND gs_cr AND bMiddleRail then CUTEND

if iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED AND bMiddleRail then CUTEND

if gs_cl then CUTEND
if gs_cr then CUTEND

if isVentilationOverFrame then
	cutend
endif

!! END OF FRAME !!

ENDGROUP

GROUP "middle rail"
sect_fill gs_fillFr, gs_penFr_bg, gs_penFr_fg, gs_frame_pen

if bMiddleRail then
	MATERIAL gs_midrail_mat

	if gs_cl AND leftCornerAngle<180 then
		ADDX -ac_unit_width/2
		ROTY -leftCornerAngle/2
			CUTPLANE
		DEL 2
	endif

	if gs_cl AND leftCornerAngle>180 then
		ADD -ac_unit_width/2-WIDO_REVEAL_SIDE*gs_fthk*TAN(90-leftCornerAngle/2), 0, (1-WIDO_REVEAL_SIDE)*gs_fthk
		ROTY -leftCornerAngle/2
		CUTPLANE
		DEL 2
	endif

	if gs_cr AND rightCornerAngle<180 then
		ADDX ac_unit_width/2
		ROTY rightCornerAngle/2
			CUTPLANE
		DEL 2
	endif

	if gs_cr AND rightCornerAngle>180 then
		ADD ac_unit_width/2+WIDO_REVEAL_SIDE*gs_fthk*TAN(90-rightCornerAngle/2), 0, (1-WIDO_REVEAL_SIDE)*gs_fthk
		ROTY rightCornerAngle/2
			CUTPLANE
		DEL 2
	endif

	PRISM_ 5, gs_fthk,
		   -ac_unit_width/2,  midRailElevation-midRailWidth/2, 15,
			ac_unit_width/2,  midRailElevation-midRailWidth/2, 15,
			ac_unit_width/2,  midRailElevation+midRailWidth/2, 15,
		   -ac_unit_width/2,  midRailElevation+midRailWidth/2, 15,
		   -ac_unit_width/2,  midRailElevation-midRailWidth/2, -1
	body 1
	if gs_cl=1 then CUTEND
	if gs_cr=1 then CUTEND
endif
ENDGROUP

sect_fill gs_fillFr, gs_penFr_bg, gs_penFr_fg, gs_frame_pen
PLACEGROUP SUBGROUP ("middle rail", "frame")

sect_fill gs_fillFr, gs_penFr_bg, gs_penFr_fg, gs_frame_pen
PLACEGROUP "frame"


! =============================================================================
! Horizontal Grids
! =============================================================================
SECT_FILL gs_fillFr, gs_penFr_bg, gs_penFr_fg, gs_frame_pen

GROUP "gridsh"

	MATERIAL gs_sash_mat

! =============================================================================
! Corner
! =============================================================================

	if gs_cl AND leftCornerAngle<180 then
		ADDX -ac_unit_width/2
		ROTY -leftCornerAngle/2
			CUTPLANE
		DEL 2
	endif

	if gs_cl AND leftCornerAngle>180 then
		ADD -ac_unit_width/2-WIDO_REVEAL_SIDE*gs_fthk*TAN(90-leftCornerAngle/2), 0, (1-WIDO_REVEAL_SIDE)*gs_fthk
		ROTY -leftCornerAngle/2
		CUTPLANE
		DEL 2
	endif

	if gs_cr AND rightCornerAngle<180 then
		ADDX ac_unit_width/2
		ROTY rightCornerAngle/2
			CUTPLANE
		DEL 2
	endif

	if gs_cr AND rightCornerAngle>180 then
		ADD ac_unit_width/2+WIDO_REVEAL_SIDE*gs_fthk*TAN(90-rightCornerAngle/2), 0, (1-WIDO_REVEAL_SIDE)*gs_fthk
		ROTY rightCornerAngle/2
			CUTPLANE
		DEL 2
	endif


! =============================================================================
! Horizontal Grids
! =============================================================================

	if gs_hor_gnum >0 AND bMiddleRail then
		for i=1 to gs_hor_gnum
			ADDY gs_hor_d[i]
				hgnn=ac_unit_width-gs_fw_side_right-gs_fw_side_left
				ADD -ac_unit_width/2+gs_fw_side_left, gs_fw_lower-gs_grid_w/2, (gs_gsb+gs_glass_thk)*(iFrameStyleMullion = FRAME_STYLE_BUTT_GLAZED)
					PRISM_ 5, gs_grid_thk,
						-gs_fw_side_left*(iFrameStyleLeft <> FRAME_STYLE_VISIBLE_MULLIONS), -gs_grid_w/2, 15,
						 hgnn+gs_fw_side_right*(iFrameStyleRight <> FRAME_STYLE_VISIBLE_MULLIONS), -gs_grid_w/2, 15,
						 hgnn+gs_fw_side_right*(iFrameStyleRight <> FRAME_STYLE_VISIBLE_MULLIONS),  gs_grid_w/2, 15,
						-gs_fw_side_left*(iFrameStyleLeft <> FRAME_STYLE_VISIBLE_MULLIONS),  gs_grid_w/2, 15,
						-gs_fw_side_left*(iFrameStyleLeft <> FRAME_STYLE_VISIBLE_MULLIONS), -gs_grid_w/2, -1
					body 1
				DEL 1
			DEL 1
		next i
	endif


! =============================================================================
! Horizontal Grids Middle
! =============================================================================

	if gs_hor_gnumtr >0 then
		for i=1 to gs_hor_gnumtr
			ADDY gs_hor_dtr[i]
				hgnn=ac_unit_width-gs_fw_side_right-gs_fw_side_left
				ADD -ac_unit_width/2+gs_fw_side_left, ac_unit_height-gs_fw_upper*(not(gs_UTrans))-gs_frame_width*(gs_UTrans)-middlePanelHeight-gs_grid_w/2, (gs_gsb+gs_glass_thk)*(iFrameStyleMullion = FRAME_STYLE_BUTT_GLAZED)
					PRISM_ 5, gs_grid_thk,
					-gs_fw_side_left*(iFrameStyleLeft <> FRAME_STYLE_VISIBLE_MULLIONS), -gs_grid_w/2, 15,
					 hgnn+gs_fw_side_right*(iFrameStyleRight <> FRAME_STYLE_VISIBLE_MULLIONS), -gs_grid_w/2, 15,
					 hgnn+gs_fw_side_right*(iFrameStyleRight <> FRAME_STYLE_VISIBLE_MULLIONS),  gs_grid_w/2, 15,
					-gs_fw_side_left*(iFrameStyleLeft <> FRAME_STYLE_VISIBLE_MULLIONS),  gs_grid_w/2, 15,
					-gs_fw_side_left*(iFrameStyleLeft <> FRAME_STYLE_VISIBLE_MULLIONS), -gs_grid_w/2, -1
					body 1
				DEL 1
			DEL 1
		next i
	endif


! =============================================================================
! Horizontal Grids Top Panel
! =============================================================================

	if gs_hor_gtp >0 AND gs_UTrans then
		base
		for i=1 to gs_hor_gtp
			ADDY gs_hor_dtp[i]
			hgnn=ac_unit_width-gs_fw_side_right-gs_fw_side_left
			ADD -ac_unit_width/2+gs_fw_side_left, ac_unit_height-topPanelHeight-gs_grid_w/2, (gs_gsb+gs_glass_thk)*(iFrameStyleMullion = FRAME_STYLE_BUTT_GLAZED)
				PRISM_ 5, gs_grid_thk,
					-gs_fw_side_left*(iFrameStyleLeft <> FRAME_STYLE_VISIBLE_MULLIONS), -gs_grid_w/2, 15,
					 hgnn+gs_fw_side_right*(iFrameStyleRight <> FRAME_STYLE_VISIBLE_MULLIONS), -gs_grid_w/2, 15,
					 hgnn+gs_fw_side_right*(iFrameStyleRight <> FRAME_STYLE_VISIBLE_MULLIONS),  gs_grid_w/2, 15,
					-gs_fw_side_left*(iFrameStyleLeft <> FRAME_STYLE_VISIBLE_MULLIONS),  gs_grid_w/2, 15,
					-gs_fw_side_left*(iFrameStyleLeft <> FRAME_STYLE_VISIBLE_MULLIONS), -gs_grid_w/2, -1
			DEL 2
		next i

		vert 0, 0, 0
		vert 1, 0, 0
		vert 0, 1, 0
		vert 0, 0, 1
		coor 2, -1, -2, -3, -4
		body 1
	endif

	if gs_cl=1 then CUTEND
	if gs_cr=1 then CUTEND

ENDGROUP


! =============================================================================
! Vertical Grids
! =============================================================================

GROUP "gridsv"
	SECT_FILL gs_fillFr, gs_penFr_bg, gs_penFr_fg, gs_frame_pen
	material gs_vertMull_mat

	if gs_ver_gnum >0 then

		base
		for HK=1 to gs_ver_gnum
			ADDX gs_ver_d[HK]
				ADD  -ac_unit_width/2+gs_fw_side_left*(not(gs_bSLight))+(leftPanelWidth+gs_frame_width)*(gs_bSLight)-gridWidthVert/2, 0, (gs_gsb+gs_glass_thk)*(iFrameStyleMullion = FRAME_STYLE_BUTT_GLAZED)

				PRISM_ 5, gridThkVert,
					-gridWidthVert/2,   gs_fw_lower, 15,
					 gridWidthVert/2,   gs_fw_lower, 15,
					 gridWidthVert/2, ac_unit_height-gs_fw_upper, 15,
					-gridWidthVert/2, ac_unit_height-gs_fw_upper, 15,
					-gridWidthVert/2,   gs_fw_lower, -1
				DEL 1
			DEL 1
		next HK

		vert 0, 0, 0
		vert 0, 1, 0
		vert 1, 0, 0
		vert 0, 0, 1
		coor 2, -1, -2, -3, -4
		body 1
	endif
ENDGROUP

! =============================================================================

SECT_FILL gs_fillFr, gs_penFr_bg, gs_penFr_fg, gs_frame_pen

PLACEGROUP SUBGROUP (SUBGROUP("gridsh","gridsv"), "frame")
PLACEGROUP SUBGROUP ("gridsv", ADDGROUP("middle rail","frame"))


! =============================================================================
! Glass
! =============================================================================

SECT_FILL gs_gsect, gs_penGlass_bg, gs_penGlass_fg, gs_glass_pen

MATERIAL gs_glass_mat
PEN gs_glass_pen

! CORNER !

if gs_cl=1 AND leftCornerAngle<180 then
	ADDX -ac_unit_width/2
	ROTY -leftCornerAngle/2
		CUTPLANE
	DEL 2
endif

if gs_cl=1 AND leftCornerAngle>180 then
	ADD -ac_unit_width/2-WIDO_REVEAL_SIDE*gs_fthk*TAN(90-leftCornerAngle/2), 0, (1-WIDO_REVEAL_SIDE)*gs_fthk
	ROTY -leftCornerAngle/2
	CUTPLANE
	DEL 2
endif

if gs_cr=1 AND rightCornerAngle<180 then
	ADDX ac_unit_width/2
	ROTY rightCornerAngle/2
		CUTPLANE
	DEL 2
endif

if gs_cr=1 AND rightCornerAngle>180 then
	ADD ac_unit_width/2+WIDO_REVEAL_SIDE*gs_fthk*TAN(90-rightCornerAngle/2), 0, (1-WIDO_REVEAL_SIDE)*gs_fthk
	ROTY rightCornerAngle/2
		CUTPLANE
	DEL 2
endif

! END OF CORNER !

if bMiddleRail then
	ADDZ gs_gsb
	for HJ=1 to gs_hor_gnum+1
		if HJ=1 AND gs_hor_gnum=0 then vgnn=ac_unit_height-gs_fw_upper*(not(gs_UTrans))-gs_frame_width*(gs_UTrans)-middlePanelHeight-gs_fw_lower-midRailWidth
		if HJ=1 AND gs_hor_gnum>0 then vgnn=gs_hor_d[1]-gs_grid_w
		if HJ>1 AND HJ<gs_hor_gnum+1 then vgnn=gs_hor_d[HJ]-gs_hor_d[HJ-1]-gs_grid_w
		if HJ>1 AND HJ=gs_hor_gnum+1 then vgnn=ac_unit_height-gs_fw_upper*(not(gs_UTrans))-gs_frame_width*(gs_UTrans)-middlePanelHeight-gs_hor_d[HJ-1]-gs_fw_lower-midRailWidth

		for HI=1 to gs_ver_gnum+1
			if HI=1 AND gs_ver_gnum=0 then hgnn=ac_unit_width-frameOrSLightWidthLeft-frameOrSLightWidthRight
			if HI=1 AND gs_ver_gnum>0 then hgnn=gs_ver_d[1]-gridWidthVert
			if HI>1 AND HI<gs_ver_gnum+1 then hgnn=gs_ver_d[HI]-gs_ver_d[HI-1]-gridWidthVert
			if HI>1 AND HI=gs_ver_gnum+1 then hgnn=ac_unit_width-gs_ver_d[HI-1]-frameOrSLightWidthLeft-frameOrSLightWidthRight

			ADD -ac_unit_width/2+frameOrSLightWidthLeft, gs_fw_lower,0
			if (iFrameStyleMullion = FRAME_STYLE_BUTT_GLAZED) then
				PRISM_ 5, gs_glass_thk,
					-gs_left_g*(HI=1)*(not(gs_bSLight))-(gridWidthVert-buttGalzedJoint)/2*(HI>1), -(gs_grid_w-buttGalzedJoint)/2*(HJ<>1), 15,
					hgnn+(gridWidthVert-buttGalzedJoint)/2*(HI<gs_ver_gnum+1)+gs_right_g*(HI=gs_ver_gnum+1)*(not(gs_bSLight2)), -(gs_grid_w-buttGalzedJoint)/2*(HJ<>1), 15,
					hgnn+(gridWidthVert-buttGalzedJoint)/2*(HI<gs_ver_gnum+1)+gs_right_g*(HI=gs_ver_gnum+1)*(not(gs_bSLight2)),  vgnn+(gs_grid_w-buttGalzedJoint)/2*(HJ<>gs_hor_gnum+1), 15,
					-gs_left_g*(HI=1)*(not(gs_bSLight))-(gridWidthVert-buttGalzedJoint)/2*(HI>1),  vgnn+(gs_grid_w-buttGalzedJoint)/2*(HJ<>gs_hor_gnum+1), 15,
					-gs_left_g*(HI=1)*(not(gs_bSLight))-(gridWidthVert-buttGalzedJoint)/2*(HI>1), -(gs_grid_w-buttGalzedJoint)/2*(HJ<>1), -1
			else
				PRISM_ 5, gs_glass_thk,
					-gs_left_g*(HI=1)*(not(gs_bSLight)), 0, 15,
					hgnn+gs_right_g*(HI=gs_ver_gnum+1)*(not(gs_bSLight2)), 0, 15,
					hgnn+gs_right_g*(HI=gs_ver_gnum+1)*(not(gs_bSLight2)),  vgnn, 15,
					-gs_left_g*(HI=1)*(not(gs_bSLight)),  vgnn, 15,
					-gs_left_g*(HI=1)*(not(gs_bSLight)), 0, -1
			endif
			body 1

			DEL 1

			ADDX hgnn+gridWidthVert
		next HI
		DEL gs_ver_gnum+1

		if gs_bSLight then
			ADD -ac_unit_width/2+gs_fw_side_left, gs_fw_lower,0
			if iFrameStyleMullion = FRAME_STYLE_BUTT_GLAZED then
				PRISM_ 5, gs_glass_thk,
					-gs_left_g,-(gs_grid_w-buttGalzedJoint)/2*(HJ<>1),15,
					leftPanelWidth-gs_fw_side_left,-(gs_grid_w-buttGalzedJoint)/2*(HJ<>1),15,
					leftPanelWidth-gs_fw_side_left,vgnn+(gs_grid_w-buttGalzedJoint)/2*(HJ<>gs_hor_gnum+1),15,
					-gs_left_g,vgnn+(gs_grid_w-buttGalzedJoint)/2*(HJ<>gs_hor_gnum+1),15,
					-gs_left_g,-(gs_grid_w-buttGalzedJoint)/2*(HJ<>1),-1
			else
				PRISM_ 5, gs_glass_thk,
					-gs_left_g, 0, 15,
					leftPanelWidth-gs_fw_side_left, 0, 15,
					leftPanelWidth-gs_fw_side_left, vgnn, 15,
					-gs_left_g, vgnn, 15,
					-gs_left_g, 0, -1
			endif
			body 1

			DEL 1
		endif

		if gs_bSLight2 then
			ADD +ac_unit_width/2-rightPanelWidth, gs_fw_lower,0
			if iFrameStyleMullion = FRAME_STYLE_BUTT_GLAZED then
				PRISM_ 5, gs_glass_thk,
					0,-(gs_grid_w-buttGalzedJoint)/2*(HJ<>1),15,
					rightPanelWidth-gs_fw_side_right+gs_right_g,-(gs_grid_w-buttGalzedJoint)/2*(HJ<>1),15,
					rightPanelWidth-gs_fw_side_right+gs_right_g,vgnn+(gs_grid_w-buttGalzedJoint)/2*(HJ<>gs_hor_gnum+1),15,
					0,vgnn+(gs_grid_w-buttGalzedJoint)/2*(HJ<>gs_hor_gnum+1),15,
					0,-(gs_grid_w-buttGalzedJoint)/2*(HJ<>1),-1
			else
				PRISM_ 5, gs_glass_thk,
					0, 0, 15,
					rightPanelWidth-gs_fw_side_right+gs_right_g, 0, 15,
					rightPanelWidth-gs_fw_side_right+gs_right_g, vgnn, 15,
					0, vgnn, 15,
					0, 0, -1
			endif
			body 1

			DEL 1
		endif
		ADDY vgnn+gs_grid_w
	next HJ
	DEL gs_hor_gnum+1
	DEL 1
endif
!! END OF GLASS !!

!! TRANSOM GLASS !!

MATERIAL gs_glass_mat
PEN gs_glass_pen

ADDZ gs_gsb

for HW=1 to gs_hor_gnumtr+1
	if HW=1 AND gs_hor_gnumtr=0 then vgnt=middlePanelHeight-topPanelHeight
	if HW=1 AND gs_hor_gnumtr>0 then vgnt=gs_hor_dtr[1]-gs_grid_w
	if HW>1 AND HW<gs_hor_gnumtr+1 then vgnt=gs_hor_dtr[HW]-gs_hor_dtr[HW-1]-gs_grid_w
	if HW>1 AND HW=gs_hor_gnumtr+1 then vgnt=middlePanelHeight-gs_hor_dtr[HW-1]-topPanelHeight

	for HA=1 to gs_ver_gnum+1
		if abs(HA-1)<eps AND gs_ver_gnum=0 then
			hgnn=ac_unit_width-frameOrSLightWidthLeft-frameOrSLightWidthRight
		endif
		if abs(HA-1)<eps AND gs_ver_gnum>0 then hgnn=gs_ver_d[1]-gridWidthVert
		if HA>1 AND HA<gs_ver_gnum+1 then hgnn=gs_ver_d[HA]-gs_ver_d[HA-1]-gridWidthVert
		if HA>1 AND abs(HA-gs_ver_gnum-1)<eps then
			hgnn=ac_unit_width-gs_ver_d[HA-1]-frameOrSLightWidthLeft-frameOrSLightWidthRight
		endif

		if iStorefrontType = 3 then
			ADD -ac_unit_width/2+frameOrSLightWidthLeft, midRailElevation*bMiddleRail+midRailWidth/2-gs_fw_lower*gs_stack_bottom,0
		else
			ADD -ac_unit_width/2+frameOrSLightWidthLeft, midRailElevation*bMiddleRail+midRailWidth/2,0
		endif
		if iFrameStyleMullion = FRAME_STYLE_BUTT_GLAZED then
			PRISM_ 5, gs_glass_thk,
				-gs_left_g*(abs(HA-1)<eps)*(not(gs_bSLight))-(gridWidthVert-buttGalzedJoint)/2*(HA>1), -(gs_grid_w-buttGalzedJoint)/2*(HW<>1), 15,
				hgnn+(gridWidthVert-buttGalzedJoint)/2*(HA<gs_ver_gnum+1)+gs_right_g*(abs(HA-gs_ver_gnum-1)<eps)*(not(gs_bSLight2)), -(gs_grid_w-buttGalzedJoint)/2*(HW<>1), 15,
				hgnn+(gridWidthVert-buttGalzedJoint)/2*(HA<gs_ver_gnum+1)+gs_right_g*(abs(HA-gs_ver_gnum-1)<eps)*(not(gs_bSLight2)),  vgnt+(gs_grid_w-buttGalzedJoint)/2*(HW<>gs_hor_gnumtr+1), 15,
				-gs_left_g*(abs(HA-1)<eps)*(not(gs_bSLight))-(gridWidthVert-buttGalzedJoint)/2*(HA>1),  vgnt+(gs_grid_w-buttGalzedJoint)/2*(HW<>gs_hor_gnumtr+1), 15,
				-gs_left_g*(abs(HA-1)<eps)*(not(gs_bSLight))-(gridWidthVert-buttGalzedJoint)/2*(HA>1), -(gs_grid_w-buttGalzedJoint)/2*(HW<>1), -1
		else
			PRISM_ 5, gs_glass_thk,
				-gs_left_g*(abs(HA-1)<eps)*(not(gs_bSLight)), 0, 15,
				hgnn+gs_right_g*(abs(HA-gs_ver_gnum-1)<eps)*(not(gs_bSLight2)), 0, 15,
				hgnn+gs_right_g*(abs(HA-gs_ver_gnum-1)<eps)*(not(gs_bSLight2)),  vgnt, 15,
				-gs_left_g*(abs(HA-1)<eps)*(not(gs_bSLight)),  vgnt, 15,
				-gs_left_g*(abs(HA-1)<eps)*(not(gs_bSLight)), 0, -1
		endif
		body 1

		DEL 1

		ADDX hgnn+gridWidthVert
	next HA
	DEL gs_ver_gnum+1

	if gs_bSLight then
		ADD -ac_unit_width/2+gs_fw_side_left, midRailElevation*bMiddleRail+midRailWidth/2,0
		if iFrameStyleMullion = FRAME_STYLE_BUTT_GLAZED then
			PRISM_ 5, gs_glass_thk,
				-gs_left_g,-(gs_grid_w-buttGalzedJoint)/2*(HW<>1),15,
				leftPanelWidth-gs_fw_side_left,-(gs_grid_w-buttGalzedJoint)/2*(HW<>1),15,
				leftPanelWidth-gs_fw_side_left,vgnt+(gs_grid_w-buttGalzedJoint)/2*(Hw<>gs_hor_gnumtr+1),15,
				-gs_left_g,vgnt+(gs_grid_w-buttGalzedJoint)/2*(Hw<>gs_hor_gnumtr+1),15,
				-gs_left_g,-(gs_grid_w-buttGalzedJoint)/2*(HW<>1),-1
		else
			PRISM_ 5, gs_glass_thk,
				-gs_left_g, 0, 15,
				leftPanelWidth-gs_fw_side_left, 0, 15,
				leftPanelWidth-gs_fw_side_left, vgnt, 15,
				-gs_left_g, vgnt, 15,
				-gs_left_g, 0, -1
		endif
		body 1

		DEL 1
	endif

	if gs_bSLight2 then
		ADD +ac_unit_width/2-rightPanelWidth, midRailElevation*bMiddleRail+midRailWidth/2,0
		if iFrameStyleMullion = FRAME_STYLE_BUTT_GLAZED then
			PRISM_ 5, gs_glass_thk,
				0,-(gs_grid_w-buttGalzedJoint)/2*(HW<>1),15,
				rightPanelWidth-gs_fw_side_right+gs_right_g,-(gs_grid_w-buttGalzedJoint)/2*(HW<>1),15,
				rightPanelWidth-gs_fw_side_right+gs_right_g,vgnt+(gs_grid_w-buttGalzedJoint)/2*(Hw<>gs_hor_gnumtr+1),15,
				0,vgnt+(gs_grid_w-buttGalzedJoint)/2*(Hw<>gs_hor_gnumtr+1),15,
				0,-(gs_grid_w-buttGalzedJoint)/2*(HW<>1),-1
		else
			PRISM_ 5, gs_glass_thk,
				0, 0, 15,
				rightPanelWidth-gs_fw_side_right+gs_right_g, 0, 15,
				rightPanelWidth-gs_fw_side_right+gs_right_g, vgnt, 15,
				0, vgnt, 15,
				0, 0, -1
		endif
		body 1

		DEL 1
	endif
	ADDY vgnt+gs_grid_w
next HW
DEL gs_hor_gnumtr+1

DEL 1

! END OF TRANSOM GLASS !!

!! TOP PANEL GLASS !!

if gs_UTrans then

MATERIAL gs_glass_mat
PEN gs_glass_pen
ADDZ gs_gsb

for HW=1 to gs_hor_gtp+1
		if HW=1 AND gs_hor_gtp=0 then vgnt=topPanelHeight-gs_fw_upper
		if HW=1 AND gs_hor_gtp>0 then vgnt=gs_hor_dtp[1]-gs_grid_w
		if HW>1 AND HW<gs_hor_gtp+1 then vgnt=gs_hor_dtp[HW]-gs_hor_dtp[HW-1]-gs_grid_w
		if HW>1 AND HW=gs_hor_gtp+1 then vgnt=topPanelHeight-gs_hor_dtp[HW-1]-gs_fw_upper

	for HA=1 to gs_ver_gnum+1
		if iStorefrontType = 5 then
			if abs(HA-1)<eps AND gs_ver_gnum=0 then
				hgnn=ac_unit_width-frameOrSLightWidthLeft-frameOrSLightWidthRight
			endif
		else
			if abs(HA-1)<eps AND gs_ver_gnum=0 then  hgnn=ac_unit_width-gs_fw_side_left-gs_fw_side_right-leftPanelWidth-rightPanelWidth
		endif

		if abs(HA-1)<eps AND gs_ver_gnum>0 then hgnn=gs_ver_d[1]-gridWidthVert
		if HA>1 AND HA<gs_ver_gnum+1 then hgnn=gs_ver_d[HA]-gs_ver_d[HA-1]-gridWidthVert
		if HA>1 AND abs(HA-gs_ver_gnum-1)<eps then
			hgnn=ac_unit_width-gs_ver_d[HA-1]-frameOrSLightWidthLeft-frameOrSLightWidthRight
		endif

		ADD -ac_unit_width/2+frameOrSLightWidthLeft, ac_unit_height-topPanelHeight,0

		if iFrameStyleMullion = FRAME_STYLE_BUTT_GLAZED then
			PRISM_ 5, gs_glass_thk,
				-gs_left_g*(abs(HA-1)<eps)*(not(gs_bSLight))-(gridWidthVert-buttGalzedJoint)/2*(HA>1), -(gs_grid_w-buttGalzedJoint)/2*(HW<>1), 15,
				hgnn+(gridWidthVert-buttGalzedJoint)/2*(HA<gs_ver_gnum+1)+gs_right_g*(abs(HA-gs_ver_gnum-1)<eps)*(not(gs_bSLight2)), -(gs_grid_w-buttGalzedJoint)/2*(HW<>1), 15,
				hgnn+(gridWidthVert-buttGalzedJoint)/2*(HA<gs_ver_gnum+1)+gs_right_g*(abs(HA-gs_ver_gnum-1)<eps)*(not(gs_bSLight2)),  vgnt+(gs_grid_w-buttGalzedJoint)/2*(HW<>gs_hor_gtp+1), 15,
				-gs_left_g*(abs(HA-1)<eps)*(not(gs_bSLight))-(gridWidthVert-buttGalzedJoint)/2*(HA>1),  vgnt+(gs_grid_w-buttGalzedJoint)/2*(HW<>gs_hor_gtp+1), 15,
				-gs_left_g*(abs(HA-1)<eps)*(not(gs_bSLight))-(gridWidthVert-buttGalzedJoint)/2*(HA>1), -(gs_grid_w-buttGalzedJoint)/2*(HW<>1), -1
		else
			PRISM_ 5, gs_glass_thk,
				-gs_left_g*(abs(HA-1)<eps)*(not(gs_bSLight)), 0, 15,
				hgnn+gs_right_g*(abs(HA-gs_ver_gnum-1)<eps)*(not(gs_bSLight2)), 0, 15,
				hgnn+gs_right_g*(abs(HA-gs_ver_gnum-1)<eps)*(not(gs_bSLight2)),  vgnt, 15,
				-gs_left_g*(abs(HA-1)<eps)*(not(gs_bSLight)),  vgnt, 15,
				-gs_left_g*(abs(HA-1)<eps)*(not(gs_bSLight)), 0, -1
		endif
		body 1

		DEL 1
		ADDX hgnn+gridWidthVert
	next HA
	DEL gs_ver_gnum+1

	if gs_bSLight then
		ADD -ac_unit_width/2+gs_fw_side_left,  ac_unit_height-topPanelHeight,0
		if iFrameStyleMullion = FRAME_STYLE_BUTT_GLAZED then
			PRISM_ 5, gs_glass_thk,
				-gs_left_g,-(gs_grid_w-buttGalzedJoint)/2*(HW<>1),15,
				leftPanelWidth-gs_fw_side_left,-(gs_grid_w-buttGalzedJoint)/2*(HW<>1),15,
				leftPanelWidth-gs_fw_side_left,vgnt+(gs_grid_w-buttGalzedJoint)/2*(Hw<>gs_hor_gtp+1),15,
				-gs_left_g,vgnt+(gs_grid_w-buttGalzedJoint)/2*(Hw<>gs_hor_gtp+1),15,
				-gs_left_g,-(gs_grid_w-buttGalzedJoint)/2*(HW<>1),-1
		else
			PRISM_ 5, gs_glass_thk,
				-gs_left_g, 0, 15,
				leftPanelWidth-gs_fw_side_left, 0, 15,
				leftPanelWidth-gs_fw_side_left, vgnt, 15,
				-gs_left_g, vgnt, 15,
				-gs_left_g, 0, -1
		endif
		body 1

		DEL 1
	endif

	if gs_bSLight2 then
		ADD ac_unit_width/2-rightPanelWidth, ac_unit_height-topPanelHeight,0
		if iFrameStyleMullion = FRAME_STYLE_BUTT_GLAZED then
			PRISM_ 5, gs_glass_thk,
				0,-(gs_grid_w-buttGalzedJoint)/2*(HW<>1),15,
				rightPanelWidth-gs_fw_side_right+gs_right_g,-(gs_grid_w-buttGalzedJoint)/2*(HW<>1),15,
				rightPanelWidth-gs_fw_side_right+gs_right_g,vgnt+(gs_grid_w-buttGalzedJoint)/2*(Hw<>gs_hor_gtp+1),15,
				0,vgnt+(gs_grid_w-buttGalzedJoint)/2*(Hw<>gs_hor_gtp+1),15,
				0,-(gs_grid_w-buttGalzedJoint)/2*(HW<>1),-1
		else
			PRISM_ 5, gs_glass_thk,
				0, 0, 15,
				rightPanelWidth-gs_fw_side_right+gs_right_g, 0, 15,
				rightPanelWidth-gs_fw_side_right+gs_right_g, vgnt, 15,
				0, vgnt, 15,
				0, 0, -1
		endif
		body 1

		DEL 1
	endif
	ADDY vgnt+gs_grid_w
next HW
DEL gs_hor_gtp+1

DEL 1

endif
!! END OF TOP PANEL GLASS !!

if gs_cl=1 then CUTEND
if gs_cr=1 then CUTEND

end


"leftFrameSimpleMittered":
	Prism_ 4, gs_fthk,
		leftFrame, topFrame, mask4,
		leftFrame, bottomFrame, 10,
		-ac_unit_width/2+gs_fw_side_left, gs_fw_lower, 15,
		-ac_unit_width/2+gs_fw_side_left, ac_unit_height-gs_fw_upper, 10
return

"rightFrameSimpleMittered":
		Prism_ 4, gs_fthk,
			rightFrame, bottomFrame,mask2,
			rightFrame, topFrame, 10,
			ac_unit_width/2-gs_fw_side_right, ac_unit_height-gs_fw_upper, 15,
			ac_unit_width/2-gs_fw_side_right, gs_fw_lower, 10
return

"leftFrameSimpleButtJoint":
	Prism_ 4, gs_fthk,
		leftFrame, ac_unit_height-gs_fw_upper, mask4,
		leftFrame, gs_fw_lower, 10,
		-ac_unit_width/2+gs_fw_side_left, gs_fw_lower, 15,
		-ac_unit_width/2+gs_fw_side_left, ac_unit_height-gs_fw_upper, 10
return

"rightFrameSimpleButtJoint":

	Prism_ 4, gs_fthk,
		rightFrame, gs_fw_lower, mask2,
		rightFrame, ac_unit_height-gs_fw_upper, 8,
		ac_unit_width/2-gs_fw_side_right, ac_unit_height-gs_fw_upper, 15,
		ac_unit_width/2-gs_fw_side_right, gs_fw_lower, 10
return

"textures1":
			vert 0, 0, 0
			vert 0, 1, 0
			vert 1, 0, 0
			vert 0, 0, 1
			coor 2, -1, -2, -3, -4

return
"textures2":
			vert 0, 0, 0
			vert 1, 0, 0
			vert 0, 1, 0
			vert 0, 0, 1
			coor 2, -1, -2, -3, -4

return

]]>
</Script_3D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_2D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
! Contact person: <SzL, NJ>

if iTypeDemolitionFill = RENOVATION_FILL_DEMOLISHED then		! Demolition
	gs_symbLineType = gs_Demolition_linetype
else
	gs_symbLineType = 1
endif

line_type gs_symbLineType

glaa_dt = 0
glab_dt = 0
butt_gl_mask = 0

! =============================================================================
lod2D = 0										! Don't draw anything

! =============================================================================
! No wall contour at corners and joints
! =============================================================================

if iEndFrameLeft <> ENDFRAME_NORMAL then gs_stack_left  = 1
if iEndFrameRight <> ENDFRAME_NORMAL then gs_stack_right = 1

! =============================================================================
! GS Storefront Window Functions
! =============================================================================

call "GS Storefront Window Functions",
	parameters all	gs_wcont_line_out		= gs_wcont_line_out,
					gs_wcont_line_in		= gs_wcont_line_in,
					bEnableParapetInset			= bEnableParapetInset,
					bEnableMasonryArch			= bEnableMasonryArch,
					bEnableSill					= bEnableSill,
					bEnableBoard				= bEnableBoard,
					bEnableFaschen				= bEnableFaschen,
					bEnableThreshold			= bEnableThreshold,
					bEnableCasing				= bEnableCasing,
					bEnableShutter				= bEnableShutter,
					bEnableCustomCornerLeft		= bEnableCustomCornerLeft,
					bEnableCustomCornerRight	= bEnableCustomCornerRight,
				! --- Corner Functions
					bLeftCornerFunction	 	= gs_cl,
					leftCornerAngle		 	= leftCornerAngle,
					leftConnWallThk		 	= WALL_THICKNESS,
					bRightCornerFunction 	= gs_cr,
					rightCornerAngle	 	= rightCornerAngle,
					rightConnWallThk		= WALL_THICKNESS,
					gs_left_oversize		= gs_left_oversize - gs_cl * abs(gs_fthk*TAN(90-leftCornerAngle/2)),
					gs_right_oversize		= gs_right_oversize - gs_cr * abs(gs_fthk*TAN(90-rightCornerAngle/2)),
	returned_parameters	ac_unit_width,
						gs_frame_ovhg_left_out,
						gs_frame_ovhg_right_out,
						gs_frame_ovhg_left_in,
						gs_frame_ovhg_right_in,
						bMirrored,
						addPrmX, addPrmY,
						mulPrmX, mulPrmY,
						iLoD2D,
						bShowAddHotspots, bShowUnitHotspots

if iLoD2D = 0 then end

if iTypeDemolitionFill = RENOVATION_FILL_NEW & gs_bShowNewOnCC then end		! New

add2 addPrmX, addPrmY
mul2 mulPrmX, mulPrmY

if (gs_cl | gs_cr) & WIDO_REVEAL_SIDE then
	leftCornerAngle = 360 - leftCornerAngle
	rightCornerAngle = 360 - rightCornerAngle
endif


lod2D				= DET2D_FS_OFF

if iLoD2D = SYMBW_S_1LINE then			lod2D = DET2D_FS_SIMPLE_ONE 		! Simple - One Line --> INT 200
if iLoD2D = SYMBW_S_CENTERLINE then		lod2D = DET2D_FS_SIMPLE_ONE 		! Simple - Centerline --> SWE 200
if iLoD2D = SYMBW_S_2LINE_ACC then		lod2D = DET2D_FS_SIMPLE_TWO			! Simple - Two Lines
if iLoD2D = SYMBW_S_2LINE then			lod2D = DET2D_FS_SIMPLE_CHI			! Chinese Simple
if iLoD2D = SYMBW_M_2LINE_GLASS then	lod2D = DET2D_FS_MIDDLE				! Middle - without acc
if iLoD2D = SYMBW_M_2LINE_NOGLASS then	lod2D = DET2D_FS_SIMPLE_TWO			! Middle - with acc --> INT 100
if iLoD2D = SYMBW_M_FRAMESASH then		lod2D = DET2D_FS_DETAILED			! NLD Middle
if iLoD2D = SYMBW_D_SGLASS then			lod2D = DET2D_FS_DETAILED			! Detailed --> INT 50, DAN 20
if iLoD2D = SYMBW_D_REBATEONGLASS then	lod2D = DET2D_FS_DETAILED			! Detailed --> NLD Detailed
if iLoD2D = SYMBW_D_SGLASS then			lod2D = DET2D_FS_DETAILED			! Detailed --> INT 50, DAN 20
if iLoD2D = SYMBW_D_2GLASS then			lod2D = DET2D_FS_DETAILED			! Detailed --> 
if iLoD2D = SYMBW_D_2LINE_HS then		lod2D = DET2D_FS_DETAILED_CHI		! Chinese Detailed

if lod2D = DET2D_FS_MIDDLE then												! Middle 2
	gs_ver_gnum = 0 						
	gs_gsb		= gs_fthk / 2
endif

! =============================================================================

gs_fillFr	= gs_bFills * gs_fillFr
gs_gsect	= gs_bFills * gs_gsect

pen gs_pen_2D

if gs_wthk then
	if WIDO_REVEAL_SIDE then
		add2 0,WALL_THICKNESS - WIDO_FRAME_THICKNESS - WIDO_SILL
	else
		add2 0,WIDO_SILL
	endif
endif

! =============================================================================
! Simple (1:200) model and Contour Line
! =============================================================================
pen gs_pen_2D
line_type gs_symbLineType

lineLeftOut = ac_unit_width/2
lineRightOut = ac_unit_width/2
lineLeftIn = ac_unit_width/2
lineRightIn = ac_unit_width/2
leftFrameMod = gs_fthk/TAN(leftCornerAngle/2)
rightFrameMod = gs_fthk/TAN(rightCornerAngle/2)

if iEndFrameLeft = ENDFRAME_CORNER then
	if leftCornerAngle < 180 then
		lineLeftIn = ac_unit_width/2-leftFrameMod
	endif
	if leftCornerAngle > 180 then
		lineLeftOut = ac_unit_width/2+leftFrameMod
	endif
endif
if iEndFrameRight = ENDFRAME_CORNER then
	if rightCornerAngle < 180 then
		lineRightIn = ac_unit_width/2-rightFrameMod
	endif
	if rightCornerAngle > 180 then
		lineRightOut = ac_unit_width/2+rightFrameMod
	endif
endif

if lod2D = DET2D_FS_SIMPLE_ONE then
	line2 -lineLeftOut-gs_tolerance_left, 0, lineRightOut+gs_tolerance_right, 0
	end
else
	LINE2   -lineLeftOut, 0, lineRightOut, 0
	LINE2   -lineLeftIn, -gs_fthk, lineRightIn, -gs_fthk

	fill gs_fillShCover

	poly2_b 4, 2+4+64,gs_penShCov_fg,gs_penShCov_bg,
		lineRightOut,0,0,
		-lineLeftOut,0,0,
		-lineLeftIn,-gs_fthk,0,
		lineRightIn,-gs_fthk,0
endif

! =============================================================================
! Detailed (1:50, 1:100) model
! =============================================================================

if lod2D = DET2D_FS_SIMPLE_TWO then gs_gsb = 0		! 1:100

! =============================================================================
! Unit Hotspots
! =============================================================================
unID = 100

if bShowUnitHotspots then
	hotspot2 -ac_unit_width/2, 0,		UnID
	hotspot2 -ac_unit_width/2, -gs_fthk * (lod2D > DET2D_FS_SIMPLE_ONE & lod2D <> DET2D_FS_SIMPLE_CHI), UnID + 2

	hotspot2  ac_unit_width/2,  0,		UnID + 1
	hotspot2  ac_unit_width/2, -gs_fthk * (lod2D > DET2D_FS_SIMPLE_ONE & lod2D <> DET2D_FS_SIMPLE_CHI), UnID + 3
endif

! =============================================================================
! Hotspots
! =============================================================================

unID = 1
if lod2D = DET2D_FS_SIMPLE_TWO | lod2D = DET2D_FS_MIDDLE | lod2D = DET2D_FS_DETAILED then
	if iEndFrameLeft = ENDFRAME_CORNER then
		if leftCornerAngle < 180 then
			hotspot2 -ac_unit_width/2+leftFrameMod, -gs_fthk, unID : unID = unID + 1
		else
			unID = unID + 1
		endif
		if leftCornerAngle > 180 then
			hotspot2 -ac_unit_width/2-leftFrameMod, 0, unID : unID = unID + 1
		else
			unID = unID + 1
		endif
	endif

	if iEndFrameRight = ENDFRAME_CORNER then
		if rightCornerAngle < 180 then
			hotspot2 ac_unit_width/2-rightFrameMod, -gs_fthk, unID : unID = unID + 1
		else
			unID = unID + 1
		endif
		if rightCornerAngle > 180 then
			hotspot2 ac_unit_width/2+rightFrameMod, 0, unID : unID = unID + 1
		else
			unID = unID + 1
		endif
	endif

	! Vertical Grids ==============================================================

	if gs_full_edit=1 then
		if gs_bSLight then
			HOTSPOT2 -ac_unit_width/2,  0, unID, gs_SLight_w,1+128
			unID=unID+1
			HOTSPOT2 -ac_unit_width/2-1, 0, unID, gs_SLight_w,3
			unID=unID+1
			HOTSPOT2 -ac_unit_width/2+gs_SLight_w, 0, unID, gs_SLight_w,2
			unID=unID+1
		else
			unID = unID + 3
		endif

		if gs_bSLight2 then
			HOTSPOT2 ac_unit_width/2,  0, unID, gs_SLight_w2,1+128
			unID=unID+1
			HOTSPOT2 ac_unit_width/2+1, 0, unID, gs_SLight_w2,3
			unID=unID+1
			HOTSPOT2 ac_unit_width/2-gs_SLight_w2, 0, unID, gs_SLight_w2,2
			unID=unID+1
		else
			unID = unID + 3
		endif

		if gs_ver_gnum >0 & lod2D = DET2D_FS_DETAILED then		! 1:50
			for HK=1 to gs_ver_gnum
				ADD2  -ac_unit_width/2+frameOrSLightWidthLeft-gridWidthVert/2, 0
				HOTSPOT2 0,  0, unID, gs_ver_d[HK],1+128
				unID=unID+1
				HOTSPOT2 -1, 0, unID, gs_ver_d[HK],3
				unID=unID+1
				HOTSPOT2 gs_ver_d[HK], 0, unID, gs_ver_d[HK],2
				unID=unID+1
				DEL 1
			next HK
		else
			unID = unID + 3*gs_ver_gnum
		endif
	endif
endif


! =============================================================================
! Vertical Grids
! =============================================================================

fill gs_fillFr
pen gs_pen_mull
if gs_ver_gnum >0 AND lod2D = DET2D_FS_DETAILED then		! 1:50
	for HK=1 to gs_ver_gnum
		ADD2 gs_ver_d[HK], 0
			ADD2  -ac_unit_width/2+frameOrSLightWidthLeft-gridWidthVert/2, -(gs_gsb)*(iFrameStyleMullion = FRAME_STYLE_BUTT_GLAZED)
			Poly2_b 4, 1+2+4+32, gs_penFr_fg, gs_penFr_bg,
				-gridWidthVert/2, 0, 1+32,
				-gridWidthVert/2,-gridThkVert, 1+32,
				gridWidthVert/2,-gridThkVert, 1+32,
				gridWidthVert/2, 0, 1+32
			DEL 1
		DEL 1
	next HK
endif


! =============================================================================
! Frame
! =============================================================================
unitleft = -ac_unit_width / 2
unitright = ac_unit_width / 2

frameleftout	= unitleft  - gs_frame_ovhg_left_out
framerightout	= unitright + gs_frame_ovhg_right_out
frameleftin		= unitleft  - gs_frame_ovhg_left_in
framerightin	= unitright + gs_frame_ovhg_right_in

leftFrame = frameleftout
if abs(frameleftout) > abs(frameleftin) then
	leftFrame = frameleftin
endif
rightFrame = framerightout
if abs(framerightout) > abs(framerightin) then
	rightFrame = framerightin
endif

pen gs_pen_2D

if lod2D = DET2D_FS_DETAILED then
	if gs_tolerance_left  > 0 then
		line2 unitleft,  -(gs_gsb*(iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED)), unitleft,  -gs_fthk
	endif
	if gs_tolerance_right > 0 then
		line2 unitright, -(gs_gsb*(iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED)), unitright, -gs_fthk
	endif
endif

if gs_bSLight then
	POLY2_b 5, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
			-ac_unit_width/2+leftPanelWidth, 0, 1+32,
			-ac_unit_width/2+gs_frame_width+leftPanelWidth, 0, 1+32,
			-ac_unit_width/2+gs_frame_width+leftPanelWidth, -gs_fthk, 1+32,
			-ac_unit_width/2+leftPanelWidth, -gs_fthk, 1+32,
			-ac_unit_width/2+leftPanelWidth, 0, -1

	glaa=gs_fw_side_left
endif

if gs_bSLight2 then
	POLY2_b  5, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
			ac_unit_width/2-gs_frame_width-rightPanelWidth,	0,			1+32,
			ac_unit_width/2-rightPanelWidth,				0,			1+32,
			ac_unit_width/2-rightPanelWidth,				-gs_fthk,	1+32,
			ac_unit_width/2-gs_frame_width-rightPanelWidth,-gs_fthk,	1+32,
			ac_unit_width/2-gs_frame_width-rightPanelWidth,	0,			-1

	glab=-gs_fw_side_right
endif

if not(gs_cr) then
	POLY2_b   5, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
				ac_unit_width/2-gs_fw_side_right,	-gs_gsb*(iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED),	1+32,
				ac_unit_width/2,					-gs_gsb*(iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED),	not(gs_stack_right)+32,
				ac_unit_width/2,					-gs_fthk,												1+32,
				ac_unit_width/2-gs_fw_side_right,	-gs_fthk,												1+32,
				ac_unit_width/2-gs_fw_side_right,	-gs_gsb*(iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED),	-1

	if ( abs((ac_unit_width/2) - rightFrame) > EPS ) then
		POLY2_b   5, 1+4+32,gs_penFr_fg, gs_penFr_bg,
					ac_unit_width/2,	-gs_gsb*(iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED),	1+32,
					rightFrame,			-gs_gsb*(iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED),	not(gs_stack_right)+32,
					rightFrame,			-gs_fthk,												1+32,
					ac_unit_width/2,	-gs_fthk,												1+32,
					ac_unit_width/2,	-gs_gsb*(iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED),	-1
	endif

		glab=-gs_fw_side_right
endif

if not(gs_cl) then
	POLY2_b 5, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
				-ac_unit_width/2,					-gs_gsb*(iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED),	1+32,
				-ac_unit_width/2+gs_fw_side_left,	-gs_gsb*(iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED),	1+32,
				-ac_unit_width/2+gs_fw_side_left,	-gs_fthk,												1+32,
				-ac_unit_width/2,					-gs_fthk,												not(gs_stack_left)+32,
				-ac_unit_width/2,					-gs_gsb*(iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED),	-1

	if ( abs((-ac_unit_width/2) - leftFrame) > EPS ) then
		POLY2_b 5, 1+4+32,gs_penFr_fg, gs_penFr_bg,
					leftFrame,			-gs_gsb*(iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED),	1+32,
					-ac_unit_width/2,	-gs_gsb*(iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED),	1+32,
					-ac_unit_width/2,	-gs_fthk,												1+32,
					leftFrame,			-gs_fthk,												not(gs_stack_left)+32,
					leftFrame,			-gs_gsb*(iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED),	-1	
	endif
		glaa=gs_fw_side_left
endif

if gs_cr then
	if rightCornerAngle <180 then
		if iFrameStyleRight = FRAME_STYLE_VISIBLE_MULLIONS then
			POLY2_b  5, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
				ac_unit_width/2-gs_fw_side_right, 0,      1+32,
				ac_unit_width/2, 0,     0,
				ac_unit_width/2-gs_fthk*TAN(90-rightCornerAngle/2), -gs_fthk,      1+32,
				ac_unit_width/2-gs_fw_side_right,-gs_fthk,     1+32,
				ac_unit_width/2-gs_fw_side_right, 0,      -1
		endif

		if iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED then
			POLY2_b 5, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
				ac_unit_width/2-gs_gsb*TAN(90-rightCornerAngle/2), -gs_gsb,      1+32,
				ac_unit_width/2-(gs_frame_width/2)/SIN(rightCornerAngle/2)-gs_gsb*TAN(90-rightCornerAngle/2), -gs_gsb,     1+32,
				ac_unit_width/2-gs_fthk*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(rightCornerAngle/2), -gs_fthk,      1+32,
				ac_unit_width/2-gs_fthk*TAN(90-rightCornerAngle/2),-gs_fthk,      0,
				ac_unit_width/2-gs_gsb*TAN(90-rightCornerAngle/2), -gs_gsb,      -1

			glab=-(gs_frame_width/2)/SIN(rightCornerAngle/2)-gs_gsb*TAN(90-rightCornerAngle/2)
			glab_dt=-(gs_gsb)*TAN(90-rightCornerAngle/2)
		endif

		if iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED_WO_FRAME then
			glab=-gs_gsb*TAN(90-rightCornerAngle/2)
			glab_dt=-(gs_gsb)*TAN(90-rightCornerAngle/2)
		endif

		if iFrameStyleRight = FRAME_STYLE_ANGLE_FRAME then
			POLY2_b 6, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
				ac_unit_width/2, 0,      1+32,
				ac_unit_width/2-(gs_frame_width/2)/SIN(rightCornerAngle/2)-gs_gsb*TAN(90-rightCornerAngle/2), 0,     1+32,
				ac_unit_width/2-(gs_frame_width/2)/SIN(rightCornerAngle/2)-gs_gsb*TAN(90-rightCornerAngle/2), 0-gs_gsb,     1+32,
				ac_unit_width/2-gs_fthk*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(rightCornerAngle/2), -gs_fthk,      1+32,
				ac_unit_width/2-gs_fthk*TAN(90-rightCornerAngle/2),-gs_fthk,      0,
				ac_unit_width/2, 0,      -1

			glab=-(gs_frame_width/2)/SIN(rightCornerAngle/2)-gs_gsb*TAN(90-rightCornerAngle/2)
		endif
	endif

	if rightCornerAngle >180 then
		if iFrameStyleRight = FRAME_STYLE_VISIBLE_MULLIONS then
			POLY2_b   5, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
				ac_unit_width/2-gs_fw_side_right, 0,      1+32,
				ac_unit_width/2+gs_fthk*TAN(90-rightCornerAngle/2), 0,     0,
				ac_unit_width/2, -gs_fthk,      1+32,
				ac_unit_width/2-gs_fw_side_right,-gs_fthk,      1+32,
				ac_unit_width/2-gs_fw_side_right, 0,      -1
		endif

		if iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED then
			POLY2_b 5, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
				ac_unit_width/2+(gs_fthk-gs_gsb)*TAN(90-rightCornerAngle/2), -gs_gsb,      1+32,
				ac_unit_width/2+gs_fthk*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(180-rightCornerAngle/2)-gs_gsb*TAN(90-rightCornerAngle/2), -gs_gsb,     1+32,
				ac_unit_width/2-(gs_frame_width/2)/SIN(180-rightCornerAngle/2), -gs_fthk,      1+32,
				ac_unit_width/2, -gs_fthk,      0,
				ac_unit_width/2+(gs_fthk-gs_gsb)*TAN(90-rightCornerAngle/2), -gs_gsb,      -1

			glab=gs_fthk*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(180-rightCornerAngle/2)-gs_gsb*TAN(90-rightCornerAngle/2)
			glab_dt=(gs_fthk-gs_gsb)*TAN(90-rightCornerAngle/2)
		endif

		if iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED_WO_FRAME then
			glab=gs_fthk*TAN(90-rightCornerAngle/2)-gs_gsb*TAN(90-rightCornerAngle/2)
			glab_dt=(gs_fthk-gs_gsb)*TAN(90-rightCornerAngle/2)
		endif

		if iFrameStyleRight = FRAME_STYLE_ANGLE_FRAME then
			POLY2_b 6, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
				ac_unit_width/2+gs_fthk*TAN(90-rightCornerAngle/2), 0,      1+32,
				ac_unit_width/2+gs_fthk*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(180-rightCornerAngle/2)-gs_gsb*TAN(90-rightCornerAngle/2), 0,      1+32,
				ac_unit_width/2+gs_fthk*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(180-rightCornerAngle/2)-gs_gsb*TAN(90-rightCornerAngle/2), -gs_gsb,  1+32,
				ac_unit_width/2-(gs_frame_width/2)/SIN(180-rightCornerAngle/2), -gs_fthk,      1+32,
				ac_unit_width/2,-gs_fthk,      0,
				ac_unit_width/2+gs_fthk*TAN(90-rightCornerAngle/2), 0,      -1

			glab=gs_fthk*TAN(90-rightCornerAngle/2)-(gs_frame_width/2)/SIN(180-rightCornerAngle/2)-gs_gsb*TAN(90-rightCornerAngle/2)
		endif
	endif
endif

if gs_cl then
	if leftCornerAngle <180 then
		if iFrameStyleLeft = FRAME_STYLE_VISIBLE_MULLIONS then
			POLY2_b 5, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
				-ac_unit_width/2,					0, 1+32,
				-ac_unit_width/2+gs_fw_side_left,	0, 1+32,
				-ac_unit_width/2+gs_fw_side_left,	-gs_fthk, 1+32,
				-ac_unit_width/2+gs_fthk*TAN(90-leftCornerAngle/2), -gs_fthk, 0,
				-ac_unit_width/2,					0, -1
		endif

		if iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED then
			MUL2 -1,1
			POLY2_b 5, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
				ac_unit_width/2-gs_gsb*TAN(90-leftCornerAngle/2), -gs_gsb,      1+32,
				ac_unit_width/2-(gs_frame_width/2)/SIN(leftCornerAngle/2)-gs_gsb*TAN(90-leftCornerAngle/2), -gs_gsb,     1+32,
				ac_unit_width/2-gs_fthk*TAN(90-leftCornerAngle/2)-(gs_frame_width/2)/SIN(leftCornerAngle/2), -gs_fthk,      1+32,
				ac_unit_width/2-gs_fthk*TAN(90-leftCornerAngle/2),-gs_fthk,      0,
				ac_unit_width/2-gs_gsb*TAN(90-leftCornerAngle/2), -gs_gsb,      -1
			DEL 1
			glaa=(gs_frame_width/2)/SIN(leftCornerAngle/2)+gs_gsb*TAN(90-leftCornerAngle/2)
			glaa_dt=(gs_gsb)*TAN(90-leftCornerAngle/2)
		endif

		if iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED_WO_FRAME then
			glaa=gs_gsb*TAN(90-leftCornerAngle/2)
			glaa_dt=(gs_gsb)*TAN(90-leftCornerAngle/2)
		endif

		if iFrameStyleLeft = FRAME_STYLE_ANGLE_FRAME then
			MUL2 -1,1
			POLY2_b 6, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
				ac_unit_width/2, 0,      1+32,
				ac_unit_width/2-(gs_frame_width/2)/SIN(leftCornerAngle/2)-gs_gsb*TAN(90-leftCornerAngle/2), 0,     1+32,
				ac_unit_width/2-(gs_frame_width/2)/SIN(leftCornerAngle/2)-gs_gsb*TAN(90-leftCornerAngle/2), -gs_gsb,     1+32,
				ac_unit_width/2-gs_fthk*TAN(90-leftCornerAngle/2)-(gs_frame_width/2)/SIN(leftCornerAngle/2), -gs_fthk,      1+32,
				ac_unit_width/2-gs_fthk*TAN(90-leftCornerAngle/2),-gs_fthk,      0,
				ac_unit_width/2, 0,      -1

			DEL 1
			glaa=(gs_frame_width/2)/SIN(leftCornerAngle/2)+gs_gsb*TAN(90-leftCornerAngle/2)
		endif
	endif

	if leftCornerAngle >180 then
		if iFrameStyleLeft = FRAME_STYLE_VISIBLE_MULLIONS then
			POLY2_b 5, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
				-ac_unit_width/2+gs_fthk*TAN(90+leftCornerAngle/2), 0, 1+32,
				-ac_unit_width/2+gs_fw_side_left, 0, 1+32,
				-ac_unit_width/2+gs_fw_side_left, -gs_fthk, 1+32,
				-ac_unit_width/2, -gs_fthk, 0,
				-ac_unit_width/2+gs_fthk*TAN(90+leftCornerAngle/2), 0, -1
		endif

		if iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED then
			MUL2 -1,1
			POLY2_b 5, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
				ac_unit_width/2+(gs_fthk-gs_gsb)*TAN(90-leftCornerAngle/2), -gs_gsb,      1+32,
				ac_unit_width/2+gs_fthk*TAN(90-leftCornerAngle/2)-(gs_frame_width/2)/SIN(180-leftCornerAngle/2)-gs_gsb*TAN(90-leftCornerAngle/2), -gs_gsb,  1+32,
				ac_unit_width/2-(gs_frame_width/2)/SIN(180-leftCornerAngle/2), -gs_fthk,      1+32,
				ac_unit_width/2,-gs_fthk,      0,
				ac_unit_width/2+(gs_fthk-gs_gsb)*TAN(90-leftCornerAngle/2), -gs_gsb,      -1
			DEL 1

			glaa=-gs_fthk*TAN(90-leftCornerAngle/2)+(gs_frame_width/2)/SIN(180-leftCornerAngle/2)+gs_gsb*TAN(90-leftCornerAngle/2)
			glaa_dt=-(gs_fthk-gs_gsb)*TAN(90-leftCornerAngle/2)
		endif

		if iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED_WO_FRAME then
			glaa=-gs_fthk*TAN(90-leftCornerAngle/2)+gs_gsb*TAN(90-leftCornerAngle/2)
			glaa_dt=-(gs_fthk-gs_gsb)*TAN(90-leftCornerAngle/2)
		endif

		if iFrameStyleLeft = FRAME_STYLE_ANGLE_FRAME then
			MUL2 -1,1
			POLY2_b 6, 1+2+4+32,gs_penFr_fg, gs_penFr_bg,
				ac_unit_width/2+gs_fthk*TAN(90-leftCornerAngle/2), 0,      1+32,

				ac_unit_width/2+gs_fthk*TAN(90-leftCornerAngle/2)-(gs_frame_width/2)/SIN(180-leftCornerAngle/2)-gs_gsb*TAN(90-leftCornerAngle/2), 0,      1+32,
				ac_unit_width/2+gs_fthk*TAN(90-leftCornerAngle/2)-(gs_frame_width/2)/SIN(180-leftCornerAngle/2)-gs_gsb*TAN(90-leftCornerAngle/2), 0-gs_gsb, 1+32,
				ac_unit_width/2-(gs_frame_width/2)/SIN(180-leftCornerAngle/2), -gs_fthk,      1+32,
				ac_unit_width/2,-gs_fthk,      0,
				ac_unit_width/2+gs_fthk*TAN(90-leftCornerAngle/2), 0,      -1
			DEL 1

			glaa=-(gs_fthk*TAN(90-leftCornerAngle/2)-(gs_frame_width/2)/SIN(180-leftCornerAngle/2)-gs_gsb*TAN(90-leftCornerAngle/2))
		endif
	endif
endif

! =============================================================================
! Glass
! =============================================================================

fill gs_gsect
pen gs_pen_glass
line_type gs_symbLineType

if lod2D = DET2D_FS_MIDDLE | lod2D = DET2D_FS_DETAILED then			! Middle 2, 1:50
	if not(gs_bSLight) AND not(gs_bSLight2) then
		ADD2 0,-gs_gsb
		for HI=1 to gs_ver_gnum+1
			if HI=1 AND gs_ver_gnum=0 then hgnn=ac_unit_width-gs_fw_side_left-gs_fw_side_right
			if HI=1 AND gs_ver_gnum>0 then hgnn=gs_ver_d[1]-gridWidthVert
			if HI>1 AND HI<gs_ver_gnum+1 then hgnn=gs_ver_d[HI]-gs_ver_d[HI-1]-gridWidthVert
			if HI>1 AND HI=gs_ver_gnum+1 then hgnn=ac_unit_width-gs_fw_side_left-gs_fw_side_right-gs_ver_d[HI-1]

			ADD2 -ac_unit_width/2+gs_fw_side_left, 0

			LINE2	-(gs_fw_side_left-glaa)*(HI=1)*(iFrameStyleLeft <> FRAME_STYLE_VISIBLE_MULLIONS), 0,
					hgnn+(gs_fw_side_right+glab)*(HI=gs_ver_gnum+1)*(iFrameStyleRight <> FRAME_STYLE_VISIBLE_MULLIONS), 0
			DEL 1
			ADD2 hgnn+gridWidthVert,0
		next HI
		DEL gs_ver_gnum+1
		DEL 1
	endif

	if gs_bSLight AND not(gs_bSLight2) then
		ADD2 0,-gs_gsb
		for HI=1 to gs_ver_gnum+1
			if HI=1 AND gs_ver_gnum=0 then
				hgnn=ac_unit_width-frameOrSLightWidthRight-frameOrSLightWidthLeft
			endif
			if HI=1 AND gs_ver_gnum>0 then hgnn=gs_ver_d[1]-gridWidthVert
			if HI>1 AND HI<gs_ver_gnum+1 then hgnn=gs_ver_d[HI]-gs_ver_d[HI-1]-gridWidthVert
			if HI>1 AND HI=gs_ver_gnum+1 then
				hgnn = ( ac_unit_width-gs_ver_d[HI-1]-(leftPanelWidth+gs_frame_width)+glab*(gs_cr=1)-gs_frame_width*(gs_cr=0) )*(iFrameStyleRight <> FRAME_STYLE_VISIBLE_MULLIONS)+ \
					   ( ac_unit_width-gs_ver_d[HI-1]-(leftPanelWidth+gs_frame_width)-gs_fw_side_right*(gs_cr=1)-gs_frame_width*(gs_cr=0) )*(iFrameStyleRight = FRAME_STYLE_VISIBLE_MULLIONS)
			endif
			ADD2 -ac_unit_width/2+leftPanelWidth+gs_frame_width, 0
			LINE2	0, 0,hgnn, 0
			DEL 1

			ADD2 hgnn+gridWidthVert,0
		next HI
		DEL gs_ver_gnum+1

		ADD2 -ac_unit_width/2, 0
		LINE2	glaa,0,leftPanelWidth, 0
		DEL 1
		DEL 1
	endif

	if gs_bSLight2 AND not(gs_bSLight) then
		ADD2 0,-gs_gsb
		for HI=1 to gs_ver_gnum+1
			if HI=1 AND gs_ver_gnum=0 then
				hgnn=ac_unit_width-frameOrSLightWidthLeft-frameOrSLightWidthRight
			endif
			if HI=1 AND gs_ver_gnum>0 then hgnn=gs_ver_d[1]-gridWidthVert
			if HI>1 AND HI<gs_ver_gnum+1 then hgnn=gs_ver_d[HI]-gs_ver_d[HI-1]-gridWidthVert
			if HI>1 AND HI=gs_ver_gnum+1 then
				hgnn=ac_unit_width-frameOrSLightWidthLeft-frameOrSLightWidthRight-gs_ver_d[HI-1]
			endif
			ADD2 -ac_unit_width/2+gs_fw_side_left, 0
			LINE2	-(gs_fw_side_left-glaa)*(HI=1)*(iFrameStyleLeft <> FRAME_STYLE_VISIBLE_MULLIONS), 0,hgnn, 0
			DEL 1

			ADD2 hgnn+gridWidthVert,0
		next HI
		DEL gs_ver_gnum+1

		ADD2 ac_unit_width/2-rightPanelWidth, 0
		LINE2	rightPanelWidth+glab, 0, 0,0
		DEL 1
		DEL 1
	endif

	if gs_bSLight2 AND gs_bSLight then
		ADD2 0,-gs_gsb
		for HI=1 to gs_ver_gnum+1
			if HI=1 AND gs_ver_gnum=0 then
				hgnn=ac_unit_width-frameOrSLightWidthLeft-frameOrSLightWidthRight
			endif
			if HI=1 AND gs_ver_gnum>0 then hgnn=gs_ver_d[1]- gridWidthVert
			if HI>1 AND HI<gs_ver_gnum+1 then hgnn=gs_ver_d[HI]- gs_ver_d[HI-1]- gridWidthVert
			if HI>1 AND HI=gs_ver_gnum+1 then
				hgnn=ac_unit_width-frameOrSLightWidthLeft-frameOrSLightWidthRight-gs_ver_d[HI-1]
			endif
			ADD2 -ac_unit_width/2+leftPanelWidth+gs_frame_width, 0
			LINE2	0, 0,hgnn, 0
			DEL 1

			ADD2 hgnn+gridWidthVert,0
		next HI
		DEL gs_ver_gnum+1

		ADD2 -ac_unit_width/2, 0
		LINE2	glaa, 0,leftPanelWidth, 0
		DEL 1

		ADD2 ac_unit_width/2-rightPanelWidth, 0
		LINE2	rightPanelWidth+glab, 0,0, 0
		DEL 1
		DEL 1
	endif
endif
]]>
</Script_2D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_1D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
! const values for parameter: iDWDet2D
if	LibraryLangCode = "AUT" |\
	LibraryLangCode = "CHE" |\
	LibraryLangCode = "GER" then

	DETLEVEL_DW2D_MVO    = 1
	DETLEVEL_DW2D_SCSENS = 2
	DETLEVEL_DW2D_50     = 3
	DETLEVEL_DW2D_100    = 4
	DETLEVEL_DW2D_200    = 5
	DETLEVEL_DW2D_OFF    = 8
	DETLEVEL_DW2D_20     = 9
	DETLEVEL_DW2D_500    = 10
else
	DETLEVEL_DW2D_MVO     = 1
	DETLEVEL_DW2D_SCSENS  = 2
	DETLEVEL_DW2D_50      = 3
	DETLEVEL_DW2D_100     = 4
	DETLEVEL_DW2D_MIDDET  = 5
	DETLEVEL_DW2D_SMPL2L  = 6
	DETLEVEL_DW2D_200     = 7
	DETLEVEL_DW2D_OFF     = 8
	DETLEVEL_DW2D_MIDUSA  = 9
	DETLEVEL_DW2D_CHISMPL = 10
	DETLEVEL_DW2D_CHIDET  = 11
	DETLEVEL_DW2D_20      = 12
endif


! const values for parameter: iTypeDemolitionFill
RENOVATION_FILL_EXIST		= 1
RENOVATION_FILL_DEMOLISHED	= 2
RENOVATION_FILL_NEW			= 3
RENOVATION_FILL_NEW_FULL	= 4


! const values for parameter: iCustomCCEditWallSide
EDITED_WALL_FACE_OUTSIDE = 1
EDITED_WALL_FACE_INSIDE  = 2


! const values for parameter: iCustomCCEditJambSide
EDITED_JAMB_SIDE_BOTH  = 1
EDITED_JAMB_SIDE_LEFT  = 2
EDITED_JAMB_SIDE_RIGHT = 3


! const values for parameter: iCustomCCThicknessType
THICKNESS_TYPE_ORIGINAL = 1
THICKNESS_TYPE_CUSTOM   = 2


! const values for parameter: iCustomCCEditSkin
EDITED_SKIN_1 = 1
EDITED_SKIN_2 = 2
EDITED_SKIN_3 = 3
EDITED_SKIN_4 = 4


! const values for parameter: iCustomCCOrientation
ORIENTATION_ORIGINAL  = 1
ORIENTATION_TURNED_IN = 2


! const values for parameter: gs_SashText_typ_num
MITERED_JOINT = 1
BUTT_JOINT    = 2

! Contact person: <SzL, NJ>

EPS = 0.0001

bDisabeMirroring = 0

! =============================================================================
! Localization
! =============================================================================

dim stDetail[4]
	stDetail[1] = `Зависит от Масштаба`
	stDetail[2] = `Детальный`
	stDetail[3] = `Простой`
	stDetail[4] = `Откл.`

dim stFrameStyle[4]
	stFrameStyle[1] = `Видимые Профили`
	stFrameStyle[2] = `Застекленная`
	stFrameStyle[3] = `Застекленная без Коробки`
	stFrameStyle[4] = `Угловая Коробка`

dim stDivisionMethod[2]
	stDivisionMethod[1] = `Количество Раскладки`
	stDivisionMethod[2] = `Шаг Раскладки`

dim	stEndFrameProfile[3]
	stEndFrameProfile[1] = `Обычный`
	stEndFrameProfile[2] = `Соединения`
	stEndFrameProfile[3] = `Угол`

! iFrameStyleLeft, iFrameStyleRight:
FRAME_STYLE_VISIBLE_MULLIONS		= 1
FRAME_STYLE_BUTT_GLAZED				= 2
FRAME_STYLE_BUTT_GLAZED_WO_FRAME	= 3
FRAME_STYLE_ANGLE_FRAME				= 4

DET2D_FS_OFF				= 0
DET2D_FS_SCALESENS			= -1
DET2D_FS_SIMPLE_ONE			= 11
DET2D_FS_SIMPLE_TWO			= 12
DET2D_FS_MIDDLE				= 21
DET2D_FS_MIDDLE_USA			= 22
DET2D_FS_DETAILED			= 30
DET2D_FS_DETAILED_FIX_GRID	= 31
DET2D_FS_DETAILED_USA		= 32
DET2D_FS_SIMPLE_CHI			= 51
DET2D_FS_DETAILED_CHI		= 52

! iLoD2D
SYMBW_OFF					= 0
SYMBW_SCALESENS				= 1
SYMBW_S_1LINE				= 11
SYMBW_S_2LINE				= 12
SYMBW_S_CENTERLINE			= 13
SYMBW_S_2LINE_ACC			= 14
SYMBW_S_5					= 15
SYMBW_S_6					= 16
SYMBW_S_7					= 17
SYMBW_S_8					= 18
SYMBW_S_9					= 19
SYMBW_M_2LINE_NOGLASS		= 21
SYMBW_M_2LINE_GLASS			= 22
SYMBW_M_FRAMESASH			= 23
SYMBW_M_2LINE_FRAME			= 24
SYMBW_M_5					= 25
SYMBW_M_6					= 26
SYMBW_M_7					= 27
SYMBW_M_8					= 28
SYMBW_M_9					= 29
SYMBW_D_SGLASS				= 31
SYMBW_D_2GLASS				= 32
SYMBW_D_2LINE_HS			= 33
SYMBW_D_NOGLASS				= 34
SYMBW_D_REBATEONGLASS		= 35
SYMBW_D_2GLASS_OVERLAP		= 36
SYMBW_D_7					= 37
SYMBW_D_8					= 38
SYMBW_D_9					= 39

SYMBGLASS_NOGLASS			= 0
SYMBGLASS_SIMPLEGLASS		= 1
SYMBGLASS_DOUBLEGLASS		= 2


ENDFRAME_NORMAL	= 1
ENDFRAME_JOINT	= 2
ENDFRAME_CORNER	= 3

DIVISION_NUM = 1
DIVISION_WIDTH = 2

! ifc_optype:
WIN_OP_NOT_DEFINED				= 0
WIN_OP_SINGLE_PANEL				= 1
WIN_OP_DOUBLE_PANEL_VERTICAL	= 2
WIN_OP_DOUBLE_PANEL_HORIZONTAL	= 3
WIN_OP_TRIPLE_PANEL_VERTICAL	= 4
WIN_OP_TRIPLE_PANEL_HORIZONTAL	= 5
WIN_OP_TRIPLE_PANEL_BOTTOM		= 6
WIN_OP_TRIPLE_PANEL_TOP			= 7
WIN_OP_TRIPLE_PANEL_LEFT		= 8
WIN_OP_TRIPLE_PANEL_RIGHT		= 9
WIN_OP_USER_DEFINED				= 10

! iVentilationProfileType
VENTPROFILE_OVER_FRAME		= 2
VENTPROFILE_OVER_GLAZING	= 3

! =============================================================================
! Main Definitions
! =============================================================================

if gs_wthk then
	gs_fthk = WALL_THICKNESS
	parameters gs_fthk = gs_fthk
	hideparameter "gs_frame_thk"
	lock "gs_frame_thk"
else
	gs_fthk = gs_frame_thk
	parameters gs_fthk = gs_fthk
endif

!! ANGLE MAX !!

aps = (ac_unit_width-(gs_ver_gnum+1)*gs_grid_w)/2
yps = ((-2*gs_fthk*(gs_frame_width/2)**2)-SQR(4*(gs_frame_width/2)**4*gs_fthk**2-4*((gs_frame_width/2)**2-aps**2)*(gs_frame_width/2)**2*(aps**2+gs_fthk**2)))/(2*((gs_frame_width/2)**2-aps**2))
if abs(gs_frame_width)>EPS then
	sps = 90-ASN((gs_frame_width/2)/yps)
endif

if leftCornerAngle/2<sps then
	leftCornerAngle = sps*2
	parameters leftCornerAngle = leftCornerAngle
endif
if rightCornerAngle/2<sps then
	rightCornerAngle = sps*2
	parameters rightCornerAngle = rightCornerAngle
endif
if leftCornerAngle/2>180-sps then
	leftCornerAngle = 360-sps*2
	parameters leftCornerAngle = leftCornerAngle
endif
if rightCornerAngle/2>180-sps then
	rightCornerAngle = 360-sps*2
	parameters rightCornerAngle = rightCornerAngle
endif


! =============================================================================
! Ventilation Profile Type Enable
! =============================================================================

bEnableVentilationProfile = 1
gs_VentilationProfileTypeEnable = 1


! ==============================================================================
! Other Function Control
! ==============================================================================

bEnableParapetInset			= 0
bEnableMasonryArch			= 0
bEnableFaschen				= 0
bEnableSill					= 0
bEnableBoard				= 0
bEnableThreshold			= 0
bEnableCasing				= 0
bEnableShutter				= 0
bEnableCustomCornerLeft		= 0
bEnableCustomCornerRight	= 0


! =============================================================================
! Frame End Profile Settings
! =============================================================================

if iEndFrameLeft = ENDFRAME_JOINT then
	gs_stack_left = 1
	gs_cl = 0
else
	if iEndFrameLeft = ENDFRAME_CORNER then
		gs_stack_left = 0
		gs_cl = 1
	else
		gs_stack_left = 0
		gs_cl = 0
	endif
endif
parameters	gs_stack_left	= gs_stack_left

if iEndFrameRight = ENDFRAME_JOINT then
	gs_stack_right = 1
	gs_cr = 0
else
	if iEndFrameRight = ENDFRAME_CORNER then
		gs_stack_right = 0
		gs_cr = 1
	else
		gs_stack_right = 0
		gs_cr = 0
	endif
endif
parameters	gs_stack_right	= gs_stack_right

if gs_stack_left then
	gs_fw_side_left = gs_frame_width/2
else
	if gs_cl then
		if leftCornerAngle <180 then
			gs_fw_side_left = gs_frame_width+gs_fthk*TAN(90-leftCornerAngle/2)
		endif
		if leftCornerAngle >180 then
			gs_fw_side_left = gs_frame_width-gs_fthk*TAN(90-leftCornerAngle/2)
		endif
	else
		gs_fw_side_left = gs_frame_width
	endif
endif
parameters gs_fw_side_left = gs_fw_side_left

if gs_stack_right then
	gs_fw_side_right = gs_frame_width/2
else
	if gs_cr then
		if rightCornerAngle <180 then
			gs_fw_side_right = gs_frame_width+gs_fthk*TAN(90-rightCornerAngle/2)
		endif
		if rightCornerAngle >180 then
			gs_fw_side_right = gs_frame_width-gs_fthk*TAN(90-rightCornerAngle/2)
		endif
	else
		gs_fw_side_right = gs_frame_width
	endif
endif
parameters gs_fw_side_right = gs_fw_side_right

if gs_stack_bottom then
	gs_fw_lower = bottomRailWidth/2
else
	gs_fw_lower = bottomRailWidth
endif
parameters gs_fw_lower = gs_fw_lower

if gs_stack_top then
	gs_fw_upper = gs_frame_width/2
else
	gs_fw_upper = gs_frame_width
endif
parameters gs_fw_upper = gs_fw_upper

! =============================================================================
! Sidelight and Transom Control
! =============================================================================

if iStorefrontType < 5 then
	gs_bSLight = 0
	gs_bSLight2 = 0
endif
if iStorefrontType = 1 or iStorefrontType = 3 then
	gs_UTrans = 0
endif
if iStorefrontType = 3 or iStorefrontType = 4 then
	bMiddleRail = 0
endif

leftPanelWidth = (gs_SLight_w - gs_frame_width) * gs_bSLight
rightPanelWidth = (gs_SLight_w2 - gs_frame_width) * gs_bSLight2
topPanelHeight = (transomHeight - gs_frame_width) * gs_UTrans

frameOrSLightWidthRight = gs_SLight_w2 * gs_bSLight2 + gs_fw_side_right * not(gs_bSLight2)
frameOrSLightWidthLeft = gs_SLight_w * gs_bSLight + gs_fw_side_left * not(gs_bSLight)
frameOrTransomHeight = transomHeight * gs_UTrans + gs_fw_upper * not(gs_UTrans)


if not(bMiddleRail) then
	fw_tra		= midRailWidth
	midRailWidth	= bottomRailWidth * 2
else
	fw_tra = 0
endif

if iStorefrontType = 3 | iStorefrontType = 4 then
	middlePanelHeight = ac_unit_height-(midRailElevation)*bMiddleRail-midRailWidth/2-gs_frame_width*gs_UTrans-gs_fw_upper*not(gs_UTrans)+gs_fw_lower*gs_stack_bottom
else
	middlePanelHeight = ac_unit_height-(midRailElevation)*bMiddleRail-midRailWidth/2-gs_frame_width*gs_UTrans-gs_fw_upper*not(gs_UTrans)
endif

if iDivisionMethod = DIVISION_WIDTH then
	if abs(divWidthHor) < EPS then gs_ver_gnum=0
	if divWidthHor>0 then
		ha=ac_unit_width-frameOrSLightWidthRight-frameOrSLightWidthLeft
		if INT(ha/divWidthHor)=0 then PARAMETERS gs_ver_gnum=0
		if INT(ha/divWidthHor)>0 then
			if (ha/INT(ha/divWidthHor)-divWidthHor)<=(divWidthHor-ha/(INT(ha/divWidthHor)+1)) then
				PARAMETERS gs_ver_gnum=INT(ha/divWidthHor)-1
			endif
			if (ha/INT(ha/divWidthHor)-divWidthHor)>(divWidthHor-ha/(INT(ha/divWidthHor)+1)) then
				PARAMETERS gs_ver_gnum=INT(ha/divWidthHor)
			endif
		endif
	endif

	if abs(divWidthVertBottom) < EPS then gs_hor_gnum=0
	if divWidthVertBottom>0 AND bMiddleRail then
		ba=(midRailElevation)-midRailWidth/2-gs_fw_lower
		if INT(ba/divWidthVertBottom)=0 then PARAMETERS gs_hor_gnum=0
		if INT(ba/divWidthVertBottom)>0 then
			if (ba/INT(ba/divWidthVertBottom)-divWidthVertBottom)<=(ba/(INT(ba/divWidthVertBottom)+1)-divWidthVertBottom) then
				PARAMETERS gs_hor_gnum=INT(ba/divWidthVertBottom)-1
			endif
			if (ba/INT(ba/divWidthVertBottom)-divWidthVertBottom)>(ba/(INT(ba/divWidthVertBottom)+1)-divWidthVertBottom) then
				PARAMETERS gs_hor_gnum=INT(ba/divWidthVertBottom)
			endif
		endif
	endif

	if abs(divWidthVertMiddle) < EPS then gs_hor_gnumtr=0
	if divWidthVertMiddle>0 then
		ma=middlePanelHeight-topPanelHeight
		if INT(ma/divWidthVertMiddle)=0 then PARAMETERS gs_hor_gnumtr=0
		if INT(ma/divWidthVertMiddle)>0 then
			if (ma/INT(ma/divWidthVertMiddle)-divWidthVertMiddle)<=(divWidthVertMiddle-ma/(INT(ma/divWidthVertMiddle)+1)) then
				PARAMETERS gs_hor_gnumtr=INT(ma/divWidthVertMiddle)-1
			endif
			if (ma/INT(ma/divWidthVertMiddle)-divWidthVertMiddle)>(divWidthVertMiddle-ma/(INT(ma/divWidthVertMiddle)+1)) then
				PARAMETERS gs_hor_gnumtr=INT(ma/divWidthVertMiddle)
			endif
		endif
	endif

	if abs(divWidthVertTransom) < EPS then gs_hor_gtp=0
	if divWidthVertTransom>0 then
		if gs_UTrans then
			ta=topPanelHeight-gs_fw_upper
			if INT(ta/divWidthVertTransom)=0 then PARAMETERS gs_hor_gtp=0
			if INT(ta/divWidthVertTransom)>0 then
				if (ta/INT(ta/divWidthVertTransom)-divWidthVertTransom)<=(ta/(INT(ta/divWidthVertTransom)+1)-divWidthVertTransom) then
					PARAMETERS gs_hor_gtp=INT(ta/divWidthVertTransom)-1
				endif
				if (ta/INT(ta/divWidthVertTransom)-divWidthVertTransom)>(ta/(INT(ta/divWidthVertTransom)+1)-divWidthVertTransom) then
					PARAMETERS gs_hor_gtp=INT(ta/divWidthVertTransom)
				endif
			endif
		endif
	endif
endif

if iDivisionMethod = DIVISION_NUM then
	if nHorDivision<1 then
		nHorDivision = 1
		PARAMETERS nHorDivision = nHorDivision
	endif
	gs_ver_gnum = nHorDivision-1
	PARAMETERS gs_ver_gnum = gs_ver_gnum

	if nVertDivBottom<1 then
		nVertDivBottom = 1
		PARAMETERS nVertDivBottom = nVertDivBottom
	endif

	if nVertDivMiddle<1 then
		nVertDivMiddle = 1
		PARAMETERS nVertDivMiddle = nVertDivMiddle
	endif
	gs_hor_gnumtr = nVertDivMiddle-1
	PARAMETERS gs_hor_gnumtr = gs_hor_gnumtr

	if nVertDivTransom<1 then
		nVertDivTransom = 1
		PARAMETERS nVertDivTransom = nVertDivTransom
	endif

	if iStorefrontType <> 3 then
		gs_hor_gnum = nVertDivBottom-1
		PARAMETERS gs_hor_gnum = gs_hor_gnum

		gs_hor_gtp = nVertDivTransom-1
		PARAMETERS gs_hor_gtp = gs_hor_gtp
	endif
endif

!!! MASKS !!!

mask1=15
mask2=15
mask3=15
mask4=15

if gs_stack_bottom then
	mask1=8
	mask2=13
endif

if gs_stack_right then
	mask2=8
	mask3=13
endif

if gs_stack_top then
	mask3=8
	mask4=13
endif

if gs_stack_left then
	mask4=8
	if mask1<>8 then mask1=13
endif

maskLeftButFr = 0
if iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED | iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED_WO_FRAME then
	maskLeftButFr = 5
endif

maskRightButFr = 0
if iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED | iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED_WO_FRAME then
	maskRightButFr = 5
endif


!!! END OF MASKS !!!

!! DINAMIC ARRAY !!

DIM empty[1] !! Empty Array


if bMiddleRail then
	if gs_hor_gnum>0 AND (GLOB_MODPAR_NAME="B" OR GLOB_MODPAR_NAME="divisionMethod" OR GLOB_MODPAR_NAME="iDivisionMethod"\
		OR GLOB_MODPAR_NAME="divWidthVertBottom" OR GLOB_MODPAR_NAME="gs_unit_size"\
		OR GLOB_MODPAR_NAME="gs_hor_gnum" OR GLOB_MODPAR_NAME="gs_frame_width"\
		OR GLOB_MODPAR_NAME="midRailElevation" OR GLOB_MODPAR_NAME="midRailWidth" \
		OR GLOB_MODPAR_NAME="bMiddleRail" OR GLOB_MODPAR_NAME="nVertDivBottom"\
		OR GLOB_MODPAR_NAME="gs_grid_w" OR GLOB_MODPAR_NAME="gs_stack_bottom") then
		dim temp1[]
		temp1=empty
		last1=0
		dist1=(midRailElevation-midRailWidth/2-gs_fw_lower+gs_grid_w)/(gs_hor_gnum+1)
		for i=1 to gs_hor_gnum
			temp1[i]=last1+dist1
			last1=temp1[i]
		next i

		parameters gs_hor_d=temp1
		gs_hor_d=temp1
	endif
endif
gs_hor_gnum = min(gs_hor_gnum, vardim1(gs_hor_d))


if gs_hor_gnumtr>0 AND (GLOB_MODPAR_NAME="B" OR GLOB_MODPAR_NAME="divisionMethod" OR GLOB_MODPAR_NAME="iDivisionMethod"\
	OR GLOB_MODPAR_NAME="divWidthVertMiddle" OR GLOB_MODPAR_NAME="gs_unit_size"\
	OR GLOB_MODPAR_NAME="transomHeight" OR GLOB_MODPAR_NAME="gs_UTrans" \
	OR GLOB_MODPAR_NAME="gs_hor_gnumtr" OR GLOB_MODPAR_NAME="gs_frame_width"\
	OR GLOB_MODPAR_NAME="midRailElevation" OR GLOB_MODPAR_NAME="midRailWidth" \
	OR GLOB_MODPAR_NAME="bMiddleRail" OR GLOB_MODPAR_NAME="nVertDivMiddle"\
	OR GLOB_MODPAR_NAME="gs_grid_w" OR GLOB_MODPAR_NAME="gs_stack_top" \
	OR GLOB_MODPAR_NAME="gs_stack_bottom") then
	dim temp2[]
	temp2=empty
	last2=0
	dist2=(middlePanelHeight-topPanelHeight+gs_grid_w)/(gs_hor_gnumtr+1)
	for i=1 to gs_hor_gnumtr
		temp2[i]=last2+dist2
		last2=temp2[i]
	next i

	parameters gs_hor_dtr=temp2
	gs_hor_dtr=temp2
endif
gs_hor_gnumtr = min(gs_hor_gnumtr, vardim1(gs_hor_dtr))


if gs_hor_gtp>0 AND (GLOB_MODPAR_NAME="B" OR GLOB_MODPAR_NAME="divisionMethod" OR GLOB_MODPAR_NAME="iDivisionMethod"\
	OR GLOB_MODPAR_NAME="divWidthVertTransom" OR GLOB_MODPAR_NAME="gs_unit_size"\
	OR GLOB_MODPAR_NAME="transomHeight" OR GLOB_MODPAR_NAME="gs_UTrans" \
	OR GLOB_MODPAR_NAME="gs_hor_gtp" OR GLOB_MODPAR_NAME="gs_frame_width"\
	OR GLOB_MODPAR_NAME="nVertDivTransom" OR GLOB_MODPAR_NAME="gs_grid_w" OR GLOB_MODPAR_NAME="gs_stack_top") then
	dim temp3[]
	temp3=empty
	last3=0
	dist3=(topPanelHeight-gs_fw_upper+gs_grid_w)/(gs_hor_gtp+1)
	for i=1 to gs_hor_gtp
		temp3[i]=last3+dist3
		last3=temp3[i]
	next i

	parameters gs_hor_dtp=temp3
	gs_hor_dtp=temp3
endif
gs_hor_gtp = min(gs_hor_gtp, vardim1(gs_hor_dtp))


if gs_ver_gnum>0 AND (GLOB_MODPAR_NAME="A" OR GLOB_MODPAR_NAME="divisionMethod" OR GLOB_MODPAR_NAME="iDivisionMethod"\
	OR GLOB_MODPAR_NAME="divWidthHor" OR GLOB_MODPAR_NAME="gs_unit_size"\
	OR GLOB_MODPAR_NAME="gs_SLight_w" OR GLOB_MODPAR_NAME="gs_bSLight" \
	OR GLOB_MODPAR_NAME="gs_SLight_w2" OR GLOB_MODPAR_NAME="gs_bSLight2" \
	OR GLOB_MODPAR_NAME="gs_ver_gnum" OR GLOB_MODPAR_NAME="leftCornerAngle"\
	OR GLOB_MODPAR_NAME="endFrameLeft" OR GLOB_MODPAR_NAME="endFrameRight" \
	OR GLOB_MODPAR_NAME="rightCornerAngle" OR GLOB_MODPAR_NAME="nHorDivision" OR GLOB_MODPAR_NAME="gs_frame_width"\
	OR rightCornerAngle = sps*2 OR leftCornerAngle = sps*2 \
	OR GLOB_MODPAR_NAME="gridWidthVert" OR GLOB_MODPAR_NAME="gs_stack_left" OR GLOB_MODPAR_NAME="gs_stack_right" \
	OR GLOB_MODPAR_NAME="gs_tolerance") then

	dim temp4[]
	temp4=empty
	last4=0
	dist4=(ac_unit_width-frameOrSLightWidthLeft-frameOrSLightWidthRight+gridWidthVert) / (gs_ver_gnum+1)

	for i=1 to gs_ver_gnum
		temp4[i]=last4+dist4
		last4=temp4[i]
	next i

	PARAMETERS gs_ver_d=temp4
	gs_ver_d=temp4
endif
gs_ver_gnum = min(gs_ver_gnum, vardim1(gs_ver_d))

!! END OF DINAMIC ARRAY !!

]]>
</Script_1D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_PR SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_PR>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_UI SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[

! =============================================================================
! Tabpage Structure Definition
! =============================================================================

! call all available page fix IDs
call "ui_tabIDlistHierarchy_m" parameters iUITreeStandardType = 2,			! STOREFRONT_UI
					returned_parameters iUiID_Root,
										iUiID_NominalSizes,		iParID_NominalSizes,
										iUiID_ShapePanelDiv,	iParID_ShapePanelDiv,
										iUiID_GlassMullions,	iParID_GlassMullions,
										iUiID_SFFrameStyle,		iParID_SFFrameStyle,
										iUiID_VentProfile,		iParID_VentProfile,
										iUiID_Doorleaf,			iParID_Doorleaf,
										iUiID_Handle1,			iParID_Handle1,
										iUiID_Handle2,			iParID_Handle2,
										iUiID_OpeningLines,		iParID_OpeningLines,
										iUiID_DoorModelAttrib,	iParID_DoorModelAttrib,
										iUiID_WallOpening,		iParID_WallOpening,
										iUiID_Reveal,			iParID_Reveal,
										iUiID_Closure,			iParID_Closure,
										iUiID_FloorPlanSection,	iParID_FloorPlanSection,
										iUiID_MinSpace,			iParID_MinSpace,
										iUiID_Descriptions,		iParID_Descriptions
					
					
					
dim uiUsedPageIDs[][2]
dim uiUsedPageNames[][2]

idxPage = 1


uiUsedPageIDs[idxPage][1]	= iUiID_NominalSizes	: uiUsedPageIDs[idxPage][2]		= iParID_NominalSizes
uiUsedPageNames[idxPage][1]	= ""					: uiUsedPageNames[idxPage][2]	= ""
idxPage = idxPage + 1

uiUsedPageIDs[idxPage][1]	= iUiID_ShapePanelDiv	: uiUsedPageIDs[idxPage][2]		= iParID_ShapePanelDiv
uiUsedPageNames[idxPage][1]	= `Форма и Рисунок Переплета`	: uiUsedPageNames[idxPage][2]	= "uiTab_StorefrontPanels_flat(1)"
idxPage = idxPage + 1

uiUsedPageIDs[idxPage][1]	= iUiID_GlassMullions	: uiUsedPageIDs[idxPage][2]		= iParID_GlassMullions
uiUsedPageNames[idxPage][1]	= `Остекление и Раскладка`	: uiUsedPageNames[idxPage][2]	= "uiTab_StorefrontMullion_flat(1)"
idxPage = idxPage + 1

uiUsedPageIDs[idxPage][1]	= iUiID_SFFrameStyle	: uiUsedPageIDs[idxPage][2]		= iParID_SFFrameStyle
uiUsedPageNames[idxPage][1]	= `Стиль и Размеры Коробки`	: uiUsedPageNames[idxPage][2]	= "uiTab_StorefrontFrame_flat(1)"
idxPage = idxPage + 1

! override regular iParID_DoorModelAttrib with iUiID_ShapePanelDiv, different hierarchy applied in this window
iParID_DoorModelAttrib = iUiID_ShapePanelDiv
uiUsedPageIDs[idxPage][1]	= iUiID_DoorModelAttrib			: uiUsedPageIDs[idxPage][2]		= iParID_DoorModelAttrib		
uiUsedPageNames[idxPage][1]	= `Реквизиты Модели`			: uiUsedPageNames[idxPage][2]	= "uiTab_3DRepr_flat(1)"
idxPage = idxPage + 1

if bEnableVentilationProfile then
	uiUsedPageIDs[idxPage][1]	= iUiID_VentProfile		: uiUsedPageIDs[idxPage][2]		= iParID_VentProfile
	uiUsedPageNames[idxPage][1]	= `Приточная Вентиляция`	: uiUsedPageNames[idxPage][2]	= "uiTab_OpeningVentilation_flat(1)"
	idxPage = idxPage + 1
endif

uiUsedPageIDs[idxPage][1]	= iUiID_WallOpening			: uiUsedPageIDs[idxPage][2]		= iParID_WallOpening	
uiUsedPageNames[idxPage][1]	= ""						: uiUsedPageNames[idxPage][2]	= ""
idxPage = idxPage + 1

uiUsedPageIDs[idxPage][1]	= iUiID_Reveal				: uiUsedPageIDs[idxPage][2]		= iParID_Reveal
uiUsedPageNames[idxPage][1]	= ""						: uiUsedPageNames[idxPage][2]	= ""
idxPage = idxPage + 1

uiUsedPageIDs[idxPage][1]	= iUiID_Closure				: uiUsedPageIDs[idxPage][2]		= iParID_Closure
uiUsedPageNames[idxPage][1]	= ""						: uiUsedPageNames[idxPage][2]	= ""
idxPage = idxPage + 1

uiUsedPageIDs[idxPage][1]	= iUiID_FloorPlanSection 	: uiUsedPageIDs[idxPage][2]		= iParID_FloorPlanSection
uiUsedPageNames[idxPage][1]	= `План Этажа и Разрез`	: uiUsedPageNames[idxPage][2]	= "uiTab_2DRepr_flat(1)"
idxPage = idxPage + 1

uiUsedPageIDs[idxPage][1]	= iUiID_Descriptions		: uiUsedPageIDs[idxPage][2]		= iParID_Descriptions
uiUsedPageNames[idxPage][1] = ""						: uiUsedPageNames[idxPage][2]	= ""
idxPage = idxPage + 1


! =============================================================================
! Tabpages
! =============================================================================

ui_current_page gs_ui_current_page

ui_dialog `Параметры Витрины `


for iTabs = 1 to vardim1(uiUsedPageIDs)
	if uiUsedPageIDs[iTabs][1]= iUiID_ShapePanelDiv then
		ui_page	uiUsedPageIDs[iTabs][1], uiUsedPageIDs[iTabs][2], uiUsedPageNames[iTabs][1], uiUsedPageNames[iTabs][2]
		if gs_ui_current_page = iUiID_ShapePanelDiv then
			gosub "pageCallPanels"
		endif
	endif	
	if uiUsedPageIDs[iTabs][1]= iUiID_GlassMullions then
		ui_page	uiUsedPageIDs[iTabs][1], uiUsedPageIDs[iTabs][2], uiUsedPageNames[iTabs][1], uiUsedPageNames[iTabs][2]
		if gs_ui_current_page = iUiID_GlassMullions then
			gosub "pageCallGlassMullions"
		endif
	endif
	if uiUsedPageIDs[iTabs][1]= iUiID_SFFrameStyle then
		ui_page	uiUsedPageIDs[iTabs][1], uiUsedPageIDs[iTabs][2], uiUsedPageNames[iTabs][1], uiUsedPageNames[iTabs][2]
		if gs_ui_current_page = iUiID_SFFrameStyle then
			gosub "pageCallFrameSettings"
		endif
	endif
	if uiUsedPageIDs[iTabs][1]= iUiID_VentProfile then
		ui_page	uiUsedPageIDs[iTabs][1], uiUsedPageIDs[iTabs][2], uiUsedPageNames[iTabs][1], uiUsedPageNames[iTabs][2]
		if gs_ui_current_page = iUiID_VentProfile then
			gosub "pageCallVentProfile"
		endif
	endif
		if uiUsedPageIDs[iTabs][1]= iUiID_DoorModelAttrib then
		ui_page	uiUsedPageIDs[iTabs][1], uiUsedPageIDs[iTabs][2], uiUsedPageNames[iTabs][1], uiUsedPageNames[iTabs][2]
		if gs_ui_current_page = iUiID_DoorModelAttrib then
			gosub "pageCallModelAttrib"
		endif
	endif
	if uiUsedPageIDs[iTabs][1]= iUiID_FloorPlanSection then
		ui_page	uiUsedPageIDs[iTabs][1], uiUsedPageIDs[iTabs][2], uiUsedPageNames[iTabs][1], uiUsedPageNames[iTabs][2]
		if gs_ui_current_page = iUiID_FloorPlanSection then
			gosub "pageCallFloorPlanAndSect"
		endif
	endif
next iTabs

gosub "pageCallFunctions"


file_dependence "uiTab_StorefrontPanels_flat(1)"
file_dependence "uiTab_StorefrontMullion_flat(1)"
file_dependence "uiTab_StorefrontFrame_flat(1)"
file_dependence "uiTab_3DRepr_flat(1)"
file_dependence "uiTab_OpeningVentilation_flat(1)"



end



! =============================================================================
! Panels
! =============================================================================

"pageCallPanels":
	call "ui_StoreFront_WinPanel_m" parameters 	A = A,
												B = B,
												iStorefrontType 	= iStorefrontType,
												bMiddleRail 		= bMiddleRail,
												gs_uTrans			= gs_uTrans,
												gs_bSLight			= gs_bSLight,
												gs_bSLight2			= gs_bSLight2,
												iDivisionMethod		= iDivisionMethod,
												midRailElevation	= midRailElevation,
												midRailWidth		= midRailWidth,
												bottomRailWidth 	= bottomRailWidth,
												divWidthHor			= divWidthHor,
												divWidthVertMiddle	= divWidthVertMiddle,
												divWidthVertBottom	= divWidthVertBottom,
												nHorDivision		= nHorDivision,
												nVertDivBottom		= nVertDivBottom,
												nVertDivMiddle		= nVertDivMiddle,
												transomHeight		= transomHeight

return


! =============================================================================
! Glass and Mullions
! =============================================================================
"pageCallGlassMullions":
	call "ui_StoreFront_WinGlass_m" parameters 	A = A,
												B = B,
												iFrameStyleMullion	= iFrameStyleMullion,
												gs_md				= gs_md,
												gs_gsmd				= gs_gsmd,
												gs_grid_w			= gs_grid_w,
												gs_grid_thk			= gs_grid_thk,
												gridWidthVert		= gridWidthVert,
												gridThkVert			= gridThkVert,
												buttGalzedJoint		= buttGalzedJoint,
												gs_glass_thk		= gs_glass_thk,
												gs_gsb				= gs_gsb

return

! =============================================================================
! Frame
! =============================================================================

"pageCallFrameSettings":
	call "ui_StoreFront_WinFrame_m" parameters 	A = A,
												B = B,
												gs_wthk				= gs_wthk,
												gs_frame_thk		= gs_frame_thk,
												gs_frame_width		= gs_frame_width,
												iEndFrameLeft		= iEndFrameLeft,
												leftCornerAngle		= leftCornerAngle,
												iFrameStyleLeft		= iFrameStyleLeft,
												iEndFrameRight		= iEndFrameRight,
												rightCornerAngle	= rightCornerAngle,
												iFrameStyleRight	= iFrameStyleRight
return



! =============================================================================
! Natural Ventilation
! =============================================================================

"pageCallVentProfile":
		call "Ventilation_profile" parameters	isWindow						= 1,
												iWindowType						= 0,
												bVentilationProfile				= bVentilationProfile,
												iVentilationProfileType			= iVentilationProfileType

return

! =============================================================================
! Model Attirbutes
! =============================================================================
"pageCallModelAttrib":

	itemID = 1
	
	listID = iUiID_DoorModelAttrib
	
	ui_listfield listID, 0, 0, 444, 265 
	
	ui_listitem itemID, listID, "gs_SashText_typ_num",	0,	""							: itemID = itemID + 1
	
	ui_listitem itemID, listID, "", 				0, "", `Перья в 3D`						: itemID = itemID + 1	! 3D Pens
	ui_listitem itemID, listID, "gs_frame_pen",		1,	"ui_list_pencolor_flat(1)", `Коробка`		: itemID = itemID + 1
	ui_listitem itemID, listID, "gs_glass_pen",		1,	"ui_list_pencolor_flat(1)", `Стекло`		: itemID = itemID + 1
	
	ui_listitem itemID, listID, "", 				0, "", `Покрытия`				: itemID = itemID + 1	! Surfaces
	ui_listitem itemID, listID, "bLinkSurfacesFrameSash",		1,		"ui_list_surface_flat(1)"	: itemID = itemID + 1

	ui_listitem itemID, listID, "gs_frame_mat",			1,	"ui_list_surface_flat(1)", `Коробка`		: itemID = itemID + 1

	if (iStorefrontType <> 4 and iStorefrontType <> 3) then
		ui_listitem itemID, listID, "gs_midrail_mat",		1,	"ui_list_surface_flat(1)", `Средник`	: itemID = itemID + 1
	endif

	ui_listitem itemID, listID, "gs_sash_mat",			1,	"ui_list_surface_flat(1)", `Горизонтальная Раскладка`		: itemID = itemID + 1
	ui_listitem itemID, listID, "gs_vertMull_mat",		1,	"ui_list_surface_flat(1)", `Вертикальная Раскладка`		: itemID = itemID + 1

	ui_listitem itemID, listID, "gs_glass_mat",			1,	"ui_list_surface_flat(1)", `Стекло`		: itemID = itemID + 1

	ui_listitem itemID, listID, "gs_ventProfile_mat",	1,	"ui_list_surface_flat(1)", `Приточный Клапан`	: itemID = itemID + 1
return

! =============================================================================
! Floor Plan and Section
! =============================================================================
"pageCallFloorPlanAndSect":
	call "ui_FloorPlanSection_m" parameters isWindow	= 1,
						iWindowShape					= 0,		! SHAPE_RECTANGULAR
						iWallContourLine				= iWallContourLine,
						gs_bFills						= gs_bFills,
						gs_bShowDemolitionPar			= gs_bShowDemolitionPar,
						bShowDemolitionLineType			= 1,
						iTypeDemolitionFill				= iTypeDemolitionFill,
						iRevealType						= gs_reveal_type_int - 1,
!						gs_frame_style_m 				= gs_frame_style_m,		! only for doors
						bDoorWithSidelightSupport		= 0,
						bStorefrontClassic				= 1,
						gs_stack_top					= gs_stack_top,
						gs_stack_bottom					= gs_stack_bottom,
						iWindowType						= 0,
						gs_bLeftSLight					= gs_bSLight2,
						gs_bSLight						= gs_bSLight,
						gs_UTrans						= gs_UTrans,
						gs_UTrans_Div					= gs_UTrans and (gs_bSLight2 or gs_bSLight),
						gs_LTrans						= bMiddleRail,
						gs_LTrans_Div					= bMiddleRail and (gs_bSLight2 or gs_bSLight),
!						iUTrans							= iUTrans,				! only for 4-Sash Sliding Window
						gs_sash_uniform					= 0,
!						gs_panes_number					= gs_panes_number,		! only for multi-sash windows
!						CasementIDArray					= CasementIDArray,
!						iMullionStyle_00				= iMullionStyle_00,
!						iMullionStyle_01				= iMullionStyle_01,
!						iMullionStyle_02				= iMullionStyle_02,
!						iMullionStyle_03				= iMullionStyle_03,
!						iMullionStyle_04				= iMullionStyle_04,
!						iMullionStyle_05				= iMullionStyle_05,
!						iMullionStyle_06				= iMullionStyle_06,
!						iMullionStyle_07				= iMullionStyle_07,
!						iMullionStyle_08				= iMullionStyle_08,
!						iMullionStyle_09				= iMullionStyle_09,
!						iMullionStyle_10				= iMullionStyle_10,
!						iMullionStyle_11				= iMullionStyle_11,
						gs_optype_m_01					= gs_optype_m_01,
						gs_optype_m_02					= gs_optype_m_02,
						gs_optype_m_03					= gs_optype_m_03,
!						gs_optype_m_04					= gs_optype_m_04,
						gs_optype_m_05					= gs_optype_m_05,
						gs_optype_m_06					= gs_optype_m_06,
						gs_optype_m_07					= gs_optype_m_07,
!						gs_optype_m_08					= gs_optype_m_08,
						gs_optype_m_09					= gs_optype_m_09,
						gs_optype_m_10					= gs_optype_m_10,
						gs_optype_m_11					= gs_optype_m_11,
						bOverride_MVO_2D				= 0,
						bOverride_MVO_3D				= 0,
						iClosureType					= gs_closure_type_int - 1,
						gs_bJoint						= gs_bJoint,
						bEnableParapetInset				= bEnableParapetInset,
						gs_parapet_wall_inset			= 0,
						bEnableMasonryArch				= bEnableMasonryArch,
						bMasonryArch					= 0,
						bEnableThreshold				= bEnableThreshold,
						bThreshold						= 0,
						bEnableCasing					= bEnableCasing,
						gs_trim_inside					= 0,
						gs_trim_outside					= 0,
						bEnableSill						= bEnableSill,
						gs_sill_outside					= 0,
!						iSillType						= iSillType,
!						gs_sill_outside_sl_left			= gs_sill_outside_sl_left,		! only for doors
!						gs_sidelight_left				= gs_sidelight_left,
!						gs_sidelight_parapet_hgt_left	= gs_sidelight_parapet_hgt_left,
!						gs_sill_outside_sl_right		= gs_sill_outside_sl_right,
!						gs_sidelight_right				= gs_sidelight_right,
!						gs_sidelight_parapet_hgt_right	= gs_sidelight_parapet_hgt_right,
!						gs_sill_ins_below				= gs_sill_ins_below,
!						gs_sill_ins_use_wall_skin		= gs_sill_ins_use_wall_skin,
						bEnableBoard					= bEnableBoard,
						gs_board_inside					= 0,
						bEnableVentilationProfile		= bEnableVentilationProfile,
						bVentilationProfile				= bVentilationProfile,
						iVentilationProfileType			= iVentilationProfileType,
!						isVentilationProfileInSash_01	= isVentilationProfileInSash_01,
!						isVentilationProfileInSash_02	= isVentilationProfileInSash_02,
!						isVentilationProfileInSash_03	= isVentilationProfileInSash_03,
!						isVentilationProfileInSash_04	= isVentilationProfileInSash_04,
!						isVentilationProfileInSash_05	= isVentilationProfileInSash_05,
!						isVentilationProfileInSash_06	= isVentilationProfileInSash_06,
!						isVentilationProfileInSash_07	= isVentilationProfileInSash_07,
!						isVentilationProfileInSash_08	= isVentilationProfileInSash_08,
!						isVentilationProfileInSash_09	= isVentilationProfileInSash_09,
!						isVentilationProfileInSash_10	= isVentilationProfileInSash_10,
!						isVentilationProfileInSash_11	= isVentilationProfileInSash_11,
						bEnableShutter					= 0,
						bSunshade						= 0,
!						gs_sunShade_iType				= gs_sunShade_iType,
						listFieldID		 				= iUiID_FloorPlanSection,
						isEmptyOpening					= 0
return

! =============================================================================
! GS Storefront Window Functions
! =============================================================================

"pageCallFunctions":
	call "GS Storefront Window Functions",
			parameters all	bEnableVentilationProfile	= bEnableVentilationProfile,
							bEnableParapetInset			= bEnableParapetInset,
							bEnableMasonryArch			= bEnableMasonryArch,
							bEnableSill					= bEnableSill,
							bEnableBoard				= bEnableBoard,
							bEnableFaschen				= bEnableFaschen,
							bEnableThreshold			= bEnableThreshold,
							bEnableCasing				= bEnableCasing,
							bEnableShutter				= bEnableShutter,
							bEnableCustomCornerLeft		= bEnableCustomCornerLeft,
							bEnableCustomCornerRight	= bEnableCustomCornerRight,
							uiUsedPageIDs				= uiUsedPageIDs,
							uiUsedPageNames				= uiUsedPageNames
	

return

]]>
</Script_UI>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_VL SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[

! =============================================================================
! GS Storefront Window Functions
! =============================================================================

call "GS Storefront Window Functions",
	parameters all bEnableVentilationProfile	= bEnableVentilationProfile,
					bEnableParapetInset			= bEnableParapetInset,
					bEnableMasonryArch			= bEnableMasonryArch,
					bEnableSill					= bEnableSill,
					bEnableBoard				= bEnableBoard,
					bEnableFaschen				= bEnableFaschen,
					bEnableThreshold			= bEnableThreshold,
					bEnableCasing				= bEnableCasing,
					bEnableShutter				= bEnableShutter,
					bEnableCustomCornerLeft		= bEnableCustomCornerLeft,
					bEnableCustomCornerRight	= bEnableCustomCornerRight

values "gs_frame_width" range (0,)

values{2} "gs_SashText_typ_num" 	MITERED_JOINT, `Угловое Соединение`,
									BUTT_JOINT, `Соединение Встык`


! =============================================================================
! Ventilation Profile
! =============================================================================

if bEnableVentilationProfile then
	call "Ventilation_profile" parameters	isWindow						= 1,
											iWindowType						= 0,
											bVentilationProfile				= bVentilationProfile,
											iVentilationProfileType			= iVentilationProfileType,
											gs_VentilationProfileTypeEnable	= gs_VentilationProfileTypeEnable
else
	lock	"bVentilationProfile",
			"gs_list_freeAirPerformance"
	hideparameter	"bVentilationProfile",
					"gs_list_freeAirPerformance"
endif


! =============================================================================
! Orientation
! =============================================================================

values{2} "gs_list_orientationDef_m"	0, `Автоматически`,
										1, `Специальный`

if gs_list_orientationDef_m = 0 then
	ac_OpeningSide = ""
	parameters ac_OpeningSide = ac_OpeningSide

	lock "ac_OpeningSide"
	hideparameter "ac_OpeningSide"
endif


! =============================================================================
! IFC Parameters
! =============================================================================

ifc_optype = WIN_OP_USER_DEFINED

if iStorefrontType = 3 then
	ifc_optype = WIN_OP_SINGLE_PANEL
endif

if iStorefrontType = 1 then
	if bMiddleRail then
		ifc_optype = WIN_OP_DOUBLE_PANEL_HORIZONTAL
	else
		ifc_optype = WIN_OP_SINGLE_PANEL
	endif
endif

if (iStorefrontType = 4) then
	if gs_Utrans then
		ifc_optype = WIN_OP_DOUBLE_PANEL_HORIZONTAL
	else
		ifc_optype = WIN_OP_SINGLE_PANEL
	endif
endif

if iStorefrontType = 2 then
	if gs_Utrans & bMiddleRail then
		ifc_optype = WIN_OP_TRIPLE_PANEL_HORIZONTAL
	else
		if gs_Utrans exor bMiddleRail then
			ifc_optype = WIN_OP_DOUBLE_PANEL_HORIZONTAL
		else
			ifc_optype = WIN_OP_SINGLE_PANEL
		endif
	endif
endif

! 2 Sidelights, 2 transoms
if iStorefrontType = 5 then
	if (gs_Utrans | bMiddleRail) & not(gs_bSLight | gs_bSLight2) then
		if gs_Utrans & bMiddleRail then
			ifc_optype = WIN_OP_TRIPLE_PANEL_HORIZONTAL
		else
			ifc_optype = WIN_OP_DOUBLE_PANEL_HORIZONTAL
		endif
	else
		if not(gs_Utrans | bMiddleRail) then
			if gs_bSLight & gs_bSLight2 then
				ifc_optype = WIN_OP_TRIPLE_PANEL_VERTICAL
			else
				if gs_bSLight exor gs_bSLight2 then
					ifc_optype = WIN_OP_DOUBLE_PANEL_VERTICAL
				else
					ifc_optype = WIN_OP_SINGLE_PANEL
				endif
			endif
		else
			ifc_optype = WIN_OP_USER_DEFINED
		endif
	endif
endif

parameters ifc_optype = ifc_optype

call "IFC_optype_window" parameters ifc_optype = ifc_optype

lock "ifc_optypestr"

ifc_LiningDepth = WIDO_FRAME_THICKNESS
parameters ifc_LiningDepth = ifc_LiningDepth

ifc_LiningThickness = gs_frame_width
parameters ifc_LiningThickness = ifc_LiningThickness


ifc_MullionThickness	= 0
ifc_FirstMullionOffset	= 0
ifc_SecondMullionOffset	= 0
if ifc_optype = WIN_OP_DOUBLE_PANEL_VERTICAL then
	ifc_MullionThickness = gs_frame_width
	if gs_bSLight then
		ifc_FirstMullionOffset = (gs_SLight_w - ifc_MullionThickness/2)/ac_unit_width
	else
		ifc_FirstMullionOffset = (ac_unit_width - gs_SLight_w2 + ifc_MullionThickness/2)/ac_unit_width
	endif
endif
if ifc_optype = WIN_OP_TRIPLE_PANEL_VERTICAL then
	ifc_MullionThickness	= gs_frame_width
	ifc_FirstMullionOffset	= (gs_SLight_w - ifc_MullionThickness/2)/ac_unit_width
	ifc_SecondMullionOffset	= (ac_unit_width - gs_SLight_w2 + ifc_MullionThickness/2)/ac_unit_width
endif
parameters	ifc_MullionThickness	= ifc_MullionThickness,
			ifc_FirstMullionOffset	= ifc_FirstMullionOffset,
			ifc_SecondMullionOffset	= ifc_SecondMullionOffset


ifc_TransomThickness	= 0
ifc_FirstTransomOffset	= 0
ifc_SecondTransomOffset	= 0
if ifc_optype = WIN_OP_DOUBLE_PANEL_HORIZONTAL then
	if gs_UTrans then
		ifc_TransomThickness	= gs_frame_width
		ifc_FirstTransomOffset	= (ac_unit_height - transomHeight + gs_frame_width/2)/ac_unit_height
	else
		ifc_TransomThickness	= midRailWidth
		ifc_FirstTransomOffset	= midRailElevation/ac_unit_height
	endif
endif
if ifc_optype = WIN_OP_TRIPLE_PANEL_HORIZONTAL then
	ifc_TransomThickness	= gs_frame_width
	ifc_FirstTransomOffset	= midRailElevation/ac_unit_height
	ifc_SecondTransomOffset	= (ac_unit_height - transomHeight + gs_frame_width/2)/ac_unit_height
endif
parameters	ifc_TransomThickness	= ifc_TransomThickness,
			ifc_FirstTransomOffset	= ifc_FirstTransomOffset,
			ifc_SecondTransomOffset	= ifc_SecondTransomOffset


dim ifc_WindowPanel[][4]
if ifc_optype = WIN_OP_NOT_DEFINED | ifc_optype = WIN_OP_USER_DEFINED then
	ifc_WindowPanel[1][1] = 0
	ifc_WindowPanel[1][2] = 0
	ifc_WindowPanel[1][3] = 0		! NOTDEFINED
	ifc_WindowPanel[1][4] = 0		! NOTDEFINED
else
	if ifc_optype = WIN_OP_SINGLE_PANEL then
		ifc_WindowPanel[1][1] = 0
		ifc_WindowPanel[1][2] = 0
		ifc_WindowPanel[1][3] = 12 	! FIXEDCASEMENT
		ifc_WindowPanel[1][4] = 2	! MIDDLE
	endif

	if ifc_optype = WIN_OP_DOUBLE_PANEL_HORIZONTAL then
		ifc_WindowPanel[1][1] = 0
		ifc_WindowPanel[1][2] = 0
		ifc_WindowPanel[1][3] = 12 	! FIXEDCASEMENT
		ifc_WindowPanel[1][4] = 5	! TOP

		ifc_WindowPanel[2][1] = 0
		ifc_WindowPanel[2][2] = 0
		ifc_WindowPanel[2][3] = 12 	! FIXEDCASEMENT
		ifc_WindowPanel[2][4] = 4	! BOTTOM
	endif

	if ifc_optype = WIN_OP_DOUBLE_PANEL_VERTICAL then
		ifc_WindowPanel[1][1] = 0
		ifc_WindowPanel[1][2] = 0
		ifc_WindowPanel[1][3] = 12 	! FIXEDCASEMENT
		ifc_WindowPanel[1][4] = 1	! LEFT?

		ifc_WindowPanel[2][1] = 0
		ifc_WindowPanel[2][2] = 0
		ifc_WindowPanel[2][3] = 12 	! FIXEDCASEMENT
		ifc_WindowPanel[2][4] = 3	! RIGHT?
	endif

	if ifc_optype = WIN_OP_TRIPLE_PANEL_HORIZONTAL then
		ifc_WindowPanel[1][1] = 0
		ifc_WindowPanel[1][2] = 0
		ifc_WindowPanel[1][3] = 12 	! FIXEDCASEMENT
		ifc_WindowPanel[1][4] = 5	! TOP

		ifc_WindowPanel[2][1] = 0
		ifc_WindowPanel[2][2] = 0
		ifc_WindowPanel[2][3] = 12 	! FIXEDCASEMENT
		ifc_WindowPanel[2][4] = 2	! MIDDLE

		ifc_WindowPanel[3][1] = 0
		ifc_WindowPanel[3][2] = 0
		ifc_WindowPanel[3][3] = 12 	! FIXEDCASEMENT
		ifc_WindowPanel[3][4] = 4	! BOTTOM
	endif
	if ifc_optype = WIN_OP_TRIPLE_PANEL_VERTICAL then
		ifc_WindowPanel[1][1] = 0
		ifc_WindowPanel[1][2] = 0
		ifc_WindowPanel[1][3] = 12 	! FIXEDCASEMENT
		ifc_WindowPanel[1][4] = 1	! LEFT?

		ifc_WindowPanel[2][1] = 0
		ifc_WindowPanel[2][2] = 0
		ifc_WindowPanel[2][3] = 12 	! FIXEDCASEMENT
		ifc_WindowPanel[2][4] = 2	! MIDDLE

		ifc_WindowPanel[3][1] = 0
		ifc_WindowPanel[3][2] = 0
		ifc_WindowPanel[3][3] = 12 	! FIXEDCASEMENT
		ifc_WindowPanel[3][4] = 3	! RIGHT?
	endif
endif
parameters ifc_WindowPanel = ifc_WindowPanel


! =============================================================================
! FM Types
! =============================================================================

call "FM_types" parameters all

! =============================================================================
! Swedish list parameter control
! =============================================================================

if gs_SWE_listParams_contr > 0 then
	call "SWE_ListParameters_control" parameters gs_SWE_listParams_contr = gs_SWE_listParams_contr,
			swe_list_f1				= swe_list_f1
endif

gosub "GlasAreaCalculation"

! =============================================================================
! SWE Label sash ID handling
! =============================================================================
	gs_UTrans_Div = 0
	gs_LTrans_Div = 0

	parameters	gs_optype_m_01 = 1
	if iStorefrontType <> 3 and iStorefrontType <> 1 then
		gs_optype_m_02 = 1
		parameters gs_optype_m_02 = gs_optype_m_02
	endif
	if iStorefrontType = 1 or iStorefrontType = 2 or iStorefrontType = 5 then
		gs_optype_m_03 = 1
		parameters gs_optype_m_03 = gs_optype_m_03
	endif
	if iStorefrontType = 5 then
		gs_optype_m_05 = 1
		gs_optype_m_06 = 1
		gs_optype_m_07 = 1

		gs_optype_m_09 = 1
		gs_optype_m_10 = 1
		gs_optype_m_11 = 1
		parameters	gs_optype_m_05 = gs_optype_m_05,
					gs_optype_m_06 = gs_optype_m_06,
					gs_optype_m_07 = gs_optype_m_07,
					gs_optype_m_09 = gs_optype_m_09,
					gs_optype_m_10 = gs_optype_m_10,
					gs_optype_m_11 = gs_optype_m_11


		if gs_UTrans and (gs_bSLight2 or gs_bSLight) then
			gs_UTrans_Div = 1
		endif
		if bMiddleRail and (gs_bSLight2 or gs_bSLight) then
			gs_LTrans_Div = 1
		endif
	endif

	call "winDoorCasIDmacro" parameters 	isSweDoorWindow			= 0,
											sashRowNum				= 0,
											sashColumnNum			= 0,
											iWindowType				= 0,
											iWindowClass			= 0,
											gs_bLeftSLight			= gs_bSLight2,
											gs_bSLight				= gs_bSLight,
											gs_UTrans				= gs_UTrans,
											gs_LTrans				= bMiddleRail,
											gs_UTrans_Div			= gs_UTrans_Div,
											gs_LTrans_Div			= gs_LTrans_Div,
											storeFrontSide1			= gs_bSLight,
											storeFrontSide2			= gs_bSLight2,
											nDinamicSash			= 0



! PENS -------------------------------------------------------------------[
for i = 1 to 255
	put i
next i

values "gs_penJoint" use(NSP)
values "gs_penJointFg" use(NSP)
values "gs_penPlug" use(NSP)
values "gs_penPlugFg" use(NSP)
values "gs_custom_cc_separator_pen" use(NSP)
values "gs_pen_2D" use(NSP)
values "gs_pen_mull" use(NSP)
values "gs_pen_glass" use(NSP)
values "gs_wcont_line_pen" use(NSP)
values "gs_penShCov_fg" use(NSP)
values "gs_penFr_fg" use(NSP)
values "gs_penFr_bg" use(NSP)
values "gs_penGlass_fg" use(NSP)
values "gs_wallhole_pen_fg" use(NSP)
values "gs_frame_pen" use(NSP)
values "gs_sash_pen" use(NSP)
values "gs_glass_pen" use(NSP)
values "gs_head_symbol_pen" use(NSP)

for i = 1 to nsp
	dummy = get(1)
next i


! ==============================================================================
! Uniform Surfaces
! ==============================================================================

dim	surfaceParNames[4]						:	dim	surfaceParameters[4]
	surfaceParNames[1]	= "gs_frame_mat"	:		surfaceParameters[1]	= gs_frame_mat
	surfaceParNames[2]	= "gs_sash_mat"		:		surfaceParameters[2]	= gs_sash_mat
	surfaceParNames[3]	= "gs_vertMull_mat"	:		surfaceParameters[3]	= gs_vertMull_mat
	surfaceParNames[4]	= "gs_midrail_mat"	:		surfaceParameters[4]	= gs_midrail_mat

_lastModSurfaceParameter = gs_frame_mat

if stored_material[1][1] <> -9999 then
	for i = 1 to vardim1(surfaceParNames)
		if GLOB_MODPAR_NAME = surfaceParNames[i] then
			_lastModSurfaceParameter	= surfaceParameters[i]
			stored_material[1][i]	= surfaceParameters[i]
			stored_material[2][i]	= 1

			for j = 1 to i-1
				stored_material[2][j]	= 0
				parameters stored_material[2][j]	= stored_material[2][j]
			next j

			for k = i+1 to vardim1(surfaceParNames)
				stored_material[2][k]	= 0
				parameters stored_material[2][k]	= stored_material[2][k]
			next k
		endif

		parameters	stored_material[1][i]	= stored_material[1][i],
					stored_material[2][i]	= stored_material[2][i]

		if stored_material[2][i] = 1 then
			_lastModSurfaceParameter = stored_material[1][i]
		endif
	next i
else
	gosub "preloadSurfaces"
endif

if bLinkSurfacesFrameSash then
	parameters	gs_frame_mat	= _lastModSurfaceParameter,
				gs_sash_mat		= _lastModSurfaceParameter,
				gs_vertMull_mat	= _lastModSurfaceParameter,
				gs_midrail_mat	= _lastModSurfaceParameter
else
	if GLOB_MODPAR_NAME = "bLinkSurfacesFrameSash" then
		parameters	gs_frame_mat	= stored_material[1][1],
					gs_sash_mat		= stored_material[1][2],
					gs_vertMull_mat	= stored_material[1][3],
					gs_midrail_mat	= stored_material[1][4]
	else
		gosub "preloadSurfaces"
	endif
endif

values "endFrameLeft" stEndFrameProfile
values "iEndFrameLeft" 1, 2, 3

if GLOB_MODPAR_NAME = "endFrameLeft" then
	iEndFrameLeft = ENDFRAME_NORMAL
	if endFrameLeft = stEndFrameProfile[2] then iEndFrameLeft = ENDFRAME_JOINT
	if endFrameLeft = stEndFrameProfile[3] then iEndFrameLeft = ENDFRAME_CORNER
	parameters iEndFrameLeft = iEndFrameLeft
else
	endFrameLeft = stEndFrameProfile[max(1, min(iEndFrameLeft,vardim1(stEndFrameProfile)))]
	parameters endFrameLeft = endFrameLeft
endif

values "endFrameRight" stEndFrameProfile
values "iEndFrameRight" 1, 2, 3

if GLOB_MODPAR_NAME = "endFrameRight" then
	iEndFrameRight = ENDFRAME_NORMAL
	if endFrameRight = stEndFrameProfile[2] then iEndFrameRight = ENDFRAME_JOINT
	if endFrameRight = stEndFrameProfile[3] then iEndFrameRight = ENDFRAME_CORNER
	parameters iEndFrameRight = iEndFrameRight
else
	endFrameRight = stEndFrameProfile[max(1, min(iEndFrameRight,vardim1(stEndFrameProfile)))]
	parameters endFrameRight = endFrameRight
endif

if iEndFrameLeft = ENDFRAME_CORNER then
	values "frameStyleLeft" stFrameStyle[1], stFrameStyle[2], stFrameStyle[3], stFrameStyle[4]
	values "iFrameStyleLeft" 1, 2, 3, 4
else
	values "frameStyleLeft" stFrameStyle[1], stFrameStyle[2]
	values "iFrameStyleLeft" 1, 2
endif

if iEndFrameRight = ENDFRAME_CORNER then
	VALUES "frameStyleRight" stFrameStyle[1], stFrameStyle[2], stFrameStyle[3], stFrameStyle[4]
	values "iFrameStyleRight" 1, 2, 3, 4
else
	VALUES "frameStyleRight" stFrameStyle[1], stFrameStyle[2]
	values "iFrameStyleRight" 1, 2
endif

if GLOB_MODPAR_NAME = "frameStyleLeft" then
	iFrameStyleLeft = FRAME_STYLE_VISIBLE_MULLIONS
	if frameStyleLeft = stFrameStyle[2] then iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED
	if iEndFrameLeft = ENDFRAME_CORNER then
		if frameStyleLeft = stFrameStyle[3] then iFrameStyleLeft = FRAME_STYLE_BUTT_GLAZED_WO_FRAME
		if frameStyleLeft = stFrameStyle[4] then iFrameStyleLeft = FRAME_STYLE_ANGLE_FRAME
	endif
	parameters iFrameStyleLeft = iFrameStyleLeft
else
	frameStyleLeft = stFrameStyle[max(1, min(iFrameStyleLeft, vardim1(stFrameStyle)))]
	parameters frameStyleLeft = frameStyleLeft
endif

if GLOB_MODPAR_NAME = "frameStyleRight" then
	iFrameStyleRight = FRAME_STYLE_VISIBLE_MULLIONS
	if frameStyleRight = stFrameStyle[2] then iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED
	if iEndFrameRight = ENDFRAME_CORNER then
		if frameStyleRight = stFrameStyle[3] then iFrameStyleRight = FRAME_STYLE_BUTT_GLAZED_WO_FRAME
		if frameStyleRight = stFrameStyle[4] then iFrameStyleRight = FRAME_STYLE_ANGLE_FRAME
	endif
	parameters iFrameStyleRight = iFrameStyleRight
else
	frameStyleRight = stFrameStyle[max(1, min(iFrameStyleRight, vardim1(stFrameStyle)))]
	parameters frameStyleRight = frameStyleRight
endif

if iEndFrameLeft <> ENDFRAME_NORMAL then
	gs_tolerance_left = 0
	parameters gs_tolerance_left = gs_tolerance_left
	lock "gs_tolerance_left"
endif

if iEndFrameRight <> ENDFRAME_NORMAL then
	gs_tolerance_right = 0
	parameters gs_tolerance_right = gs_tolerance_right
	lock "gs_tolerance_right"
endif

if gs_stack_top then
	gs_tolerance_upper = 0
	parameters gs_tolerance_upper = gs_tolerance_upper
	lock "gs_tolerance_upper"
endif
if gs_stack_bottom then
	gs_tolerance_lower = 0
	parameters gs_tolerance_lower = gs_tolerance_lower
	lock "gs_tolerance_lower"
endif

! ===== Show / Hide 2D Fills  =====

if not(gs_bFills) then
	hideparameter	"gs_fillFr",
					"gs_penFr_fg",
					"gs_penFr_bg",
					"gs_gsect",
					"gs_penGlass_fg",
					"gs_penGlass_bg"
endif

if iFrameStyleMullion = FRAME_STYLE_VISIBLE_MULLIONS then
	if gs_grid_thk>gs_fthk then
		PARAMETERS gs_grid_thk=gs_fthk
	endif
endif

if iFrameStyleMullion = FRAME_STYLE_BUTT_GLAZED then
	if gs_grid_thk>gs_fthk-gs_gsb then
		PARAMETERS gs_grid_thk=gs_fthk-gs_gsb
	endif
endif

if iFrameStyleMullion = FRAME_STYLE_VISIBLE_MULLIONS then
	if gridThkVert>gs_fthk then
		PARAMETERS gridThkVert=gs_fthk
	endif
endif

if iFrameStyleMullion = FRAME_STYLE_BUTT_GLAZED then
	if gridThkVert>gs_fthk-(gs_glass_thk*(dtlev)+gs_gsb) then
		PARAMETERS gridThkVert=gs_fthk-(gs_glass_thk*(dtlev)+gs_gsb)
	endif
endif

if iEndFrameLeft <> ENDFRAME_CORNER then
	HIDEPARAMETER "leftCornerAngle"
else
	values "leftCornerAngle" range(0, 180), range(180, 360)
endif

if iEndFrameRight <> ENDFRAME_CORNER then
	HIDEPARAMETER "rightCornerAngle"
else
	values "rightCornerAngle" range(0, 180), range(180, 360)
endif

values "midRailWidth" range(0, ]
values "bottomRailWidth" range(0, ]

if gs_UTrans then
	if transomHeight < gs_fw_upper+(gs_hor_gtp*2+1)*gs_grid_w then PARAMETERS transomHeight = gs_fw_upper+(gs_hor_gtp*2+1)*gs_grid_w

	if bMiddleRail then
		if transomHeight > ac_unit_height-midRailElevation-midRailWidth/2-(gs_hor_gnumtr*2+1)*gs_grid_w then
			PARAMETERS transomHeight = ac_unit_height-midRailElevation-midRailWidth/2-(gs_hor_gnumtr*2+1)*gs_grid_w
		endif
	else
		if transomHeight > ac_unit_height-bottomRailWidth-(gs_hor_gnumtr*2+1)*gs_grid_w then
			PARAMETERS transomHeight = ac_unit_height-bottomRailWidth-(gs_hor_gnumtr*2+1)*gs_grid_w
		endif
	endif
else
	hideparameter	"transomHeight",
					"divWidthVertTransom",
					"nVertDivTransom"
	lock	"transomHeight",
			"divWidthVertTransom",
			"nVertDivTransom"
endif

if bMiddleRail then
	if midRailElevation < (2*gs_hor_gnum+1)*gs_grid_w + gs_fw_lower + midRailWidth/2 then
		PARAMETERS midRailElevation = (2*gs_hor_gnum+1)*gs_grid_w + gs_fw_lower + midRailWidth/2
	endif
	if midRailElevation > ac_unit_height-frameOrTransomHeight-(gs_hor_gnumtr*2+1)*gs_grid_w-midRailWidth/2 then
		PARAMETERS midRailElevation = ac_unit_height-frameOrTransomHeight-(gs_hor_gnumtr*2+1)*gs_grid_w-midRailWidth/2
	endif
else
	hideparameter	"midRailElevation",
					"midRailWidth",
					"divWidthVertBottom",
					"nVertDivBottom"
	lock	"midRailElevation",
			"midRailWidth",
			"divWidthVertBottom",
			"nVertDivBottom"
endif

if gs_bSLight then
	if gs_SLight_w < gs_fw_side_left+gs_frame_width+EPS then parameters gs_SLight_w = gs_fw_side_left+gs_frame_width+EPS
	if gs_SLight_w > ac_unit_width-frameOrSLightWidthRight - 2*gs_frame_width-(gs_ver_gnum*2+1)*gs_grid_w then
		parameters gs_SLight_w = ac_unit_width-frameOrSLightWidthRight - 2*gs_frame_width-(gs_ver_gnum*2+1)*gs_grid_w
	endif
else
	hideparameter "gs_SLight_w"
	lock "gs_SLight_w"
endif

if gs_bSLight2 then
	if gs_SLight_w2 < gs_fw_side_right+gs_frame_width+EPS then parameters gs_SLight_w2 = gs_fw_side_right+gs_frame_width+EPS
	if gs_SLight_w2 > ac_unit_width-frameOrSLightWidthLeft - 2*gs_frame_width-(gs_ver_gnum*2+1)*gs_grid_w then
		parameters gs_SLight_w2 = ac_unit_width-frameOrSLightWidthLeft - 2*gs_frame_width-(gs_ver_gnum*2+1)*gs_grid_w
	endif
else
	hideparameter "gs_SLight_w2"
	lock "gs_SLight_w2"
endif

VALUES "frameStyleMullion"  stFrameStyle[1],stFrameStyle[2]
VALUES "iFrameStyleMullion" 1, 2

if GLOB_MODPAR_NAME = "frameStyleMullion" then
	iFrameStyleMullion = FRAME_STYLE_VISIBLE_MULLIONS
	if frameStyleMullion = stFrameStyle[2] then iFrameStyleMullion = FRAME_STYLE_BUTT_GLAZED
	parameters iFrameStyleMullion = iFrameStyleMullion
else
	frameStyleMullion = stFrameStyle[max(1, min(iFrameStyleMullion, vardim1(stFrameStyle)))]
	parameters frameStyleMullion = frameStyleMullion
endif

VALUES "divisionMethod" stDivisionMethod
values "iDivisionMethod" 1, 2

if GLOB_MODPAR_NAME = "divisionMethod" then
	iDivisionMethod = DIVISION_NUM
	if divisionMethod= stDivisionMethod[2] then iDivisionMethod = DIVISION_WIDTH
	parameters iDivisionMethod = iDivisionMethod
else
	divisionMethod = stDivisionMethod[max(1, min(iDivisionMethod, vardim1(stDivisionMethod)))]
	parameters divisionMethod = divisionMethod
endif

if iDivisionMethod = DIVISION_NUM then
	HIDEPARAMETER "divWidthHor","divWidthVertBottom","divWidthVertMiddle","divWidthVertTransom"
endif

if iDivisionMethod = DIVISION_WIDTH then
	HIDEPARAMETER "nVertDivTransom","gs_hor_gtp","nVertDivBottom","gs_hor_gnum","nHorDivision","gs_ver_gnum","nVertDivMiddle","gs_hor_gnumtr"
endif


!! MULLION DEPTH=FRAME DEPTH !!
if gs_md = 1 then
	gs_grid_thk = gs_fthk
	PARAMETERS gs_grid_thk = gs_grid_thk
	gridThkVert = gs_fthk
	PARAMETERS gridThkVert = gridThkVert
	HIDEPARAMETER "gs_grid_thk", "gridThkVert"
	LOCK "gs_grid_thk", "gridThkVert"
endif
!! END OF MULLION DEPTH=FRAME DEPTH !!

!! GLASS SETBACK=1/2 MULLION !!
if gs_gsmd=1 then
	gs_gsb = MIN(gs_grid_thk,gridThkVert)/2-gs_glass_thk/2
	PARAMETERS gs_gsb = gs_gsb
	HIDEPARAMETER "gs_gsb"
	LOCK "gs_gsb"
endif
!! END OF GLASS SETBACK=1/2 MULLION !!

! =============================================================================
! Onorm list Settings
! =============================================================================

if LibraryLangCode = "AUT" or LibraryLangCode = "CHE" or LibraryLangCode = "GER" then
	call "Onorm_Window" parameters all
	hideparameter "gs_window_oversize"
else
	hideparameter "gs_onorm_Title"
endif

end


"preloadSurfaces":
	parameters	stored_material[1][1]	= gs_frame_mat,
				stored_material[1][2]	= gs_sash_mat,
				stored_material[1][3]	= gs_vertMull_mat,
				stored_material[1][4]	= gs_midrail_mat
return


"GlasAreaCalculation":

	GlasWidth			= ac_unit_width - 2 * gs_frame_width
	GlasHeight			= ac_unit_height - gs_frame_width - bottomRailWidth
	GlasArea			= GlasWidth * GlasHeight

	SumFrameArea 		= 0
	MiddleRailArea		= midRailWidth * GlasWidth * bMiddleRail
	TransomFrameArea	= gs_frame_width * GlasWidth * gs_UTrans
	SideLightFrameArea	= gs_frame_width * GlasHeight * gs_bSLight
	SideLightFrameArea2	= gs_frame_width * GlasHeight * gs_bSLight2
	FrameSectionArea	= gs_frame_width * gs_frame_width * gs_UTrans * gs_bSLight + \
							gs_frame_width * gs_frame_width * gs_UTrans * gs_bSLight2 + \
							midRailWidth * gs_frame_width * bMiddleRail * gs_bSLight + \
							midRailWidth * gs_frame_width * bMiddleRail * gs_bSLight2
	SumFrameArea		= MiddleRailArea + TransomFrameArea + SideLightFrameArea + SideLightFrameArea2 - FrameSectionArea

	SumGrillArea		 = 0
	SummHorGrillNum		= gs_hor_gnum + gs_hor_gnumtr + gs_hor_gtp
	VerticalGrillArea	= gs_ver_gnum * GlasHeight * gridWidthVert
	HorizontalGrillArea	= SummHorGrillNum * GlasWidth * gs_grid_w
	HorSLSectArea		= SummHorGrillNum * gs_frame_width * gs_grid_w * gs_bSLight + \
						SummHorGrillNum * gs_frame_width * gs_grid_w * gs_bSLight2
	VerTRSectArea		= gs_ver_gnum * gs_frame_width * gridWidthVert * gs_UTrans + \
						gs_ver_gnum * midRailWidth * gridWidthVert * bMiddleRail
	GrillSectArea		= SummHorGrillNum * gs_ver_gnum * gs_grid_w * gridWidthVert
	SumSectionArea		= HorSLSectArea + VerTRSectArea + GrillSectArea
	SumGrillArea		= VerticalGrillArea + HorizontalGrillArea - SumSectionArea

	SumGlassArea		= GlasArea - SumFrameArea - SumGrillArea

	! =============================================================================
	! Total Glazed Area Listing Parameters
	! =============================================================================
	if NOT(gs_list_glassarea_override) then
		if GLOB_MODPAR_NAME = "gs_list_glassarea" then
			gs_list_glassarea_tmp = gs_list_glassarea
			parameters gs_list_glassarea_tmp = gs_list_glassarea_tmp
		else
			gs_list_glassarea = gs_list_glassarea_tmp
			parameters gs_list_glassarea = gs_list_glassarea
		endif

		gs_list_glassarea = SumGlassArea
		parameters gs_list_glassarea = gs_list_glassarea

		lock "gs_list_glassarea"
	else
		if GLOB_MODPAR_NAME = "gs_list_glassarea" then
			gs_list_glassarea_tmp = gs_list_glassarea
			parameters gs_list_glassarea_tmp = gs_list_glassarea_tmp
		else
			gs_list_glassarea = gs_list_glassarea_tmp
			parameters gs_list_glassarea = gs_list_glassarea
		endif
	endif
return
]]>
</Script_VL>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Comment SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Comment>

<ParamSection SectVersion="26" SectionFlags="0" SubIdent="0">
	<ParamSectHeader>
		<Version>26</Version>
		<AutoHotspots>false</AutoHotspots>
		<HoleBits>
			<WDBit_3DFrame/>
			<WDBit_ThickIsParam/>
			<WDBit_LFramIsParam/>
			<WDBit_RFramIsParam/>
			<WDBit_TFramIsParam/>
			<WDBit_BFramIsParam/>
		</HoleBits>
		<StatBits>
			<STBit_UIDefault/>
			<STBit_FixSize/>
			<STBit_UIUseHierarchicalPages/>
		</StatBits>
		<WDLeftFrame>0</WDLeftFrame>
		<WDRightFrame>0</WDRightFrame>
		<WDTopFrame>0</WDTopFrame>
		<WDBotFrame>0</WDBotFrame>
		<LayFlags>65535</LayFlags>
		<WDMirrorThickness>0</WDMirrorThickness>
		<WDWallInset>0</WDWallInset>
		<SymbolColor>0</SymbolColor>
	</ParamSectHeader>
	<Parameters>
		<Length Name="A">
			<Description><![CDATA["Dimension 1"]]></Description>
			<Fix/>
			<Value>1.2</Value>
		</Length>
		<Length Name="B">
			<Description><![CDATA["Dimension 2"]]></Description>
			<Fix/>
			<Value>2</Value>
		</Length>
		<Length Name="ZZYZX">
			<Description><![CDATA["Height"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Integer Name="iStorefrontType">
			<Description><![CDATA["Storefront Type"]]></Description>
			<Value>1</Value>
		</Integer>
		<Integer Name="AC_WallContours">
			<Description><![CDATA["Wall Contours (0-None,1-Full,2-Side,3-Length)"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="AC_Hole_Hotspot_Control">
			<Description><![CDATA["Hotspots 0-None,1-2D,2-3D,3-All"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>3</Value>
		</Integer>
		<Integer Name="AC_Hole_Display_Option">
			<Description><![CDATA["Floor Plan Display Option"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>3</Value>
		</Integer>
		<Angle Name="AC_Hole_Position_Angle">
			<Description><![CDATA["Hole Position Angle"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Boolean Name="AC_show2DHotspotsIn3D">
			<Description><![CDATA["Show 2D Hotspots in 3D"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="ac_bottomlevel">
			<Description><![CDATA["Bottom Level"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="ac_toplevel">
			<Description><![CDATA["Top Level"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Boolean Name="AC_HoleSideMaterial">
			<Description><![CDATA["Hole has Wall's Side Surface"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="AC_HoleMaterialCurved">
			<Description><![CDATA["Hole Surface's Split is Curved in Curved Walls"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="AC_Sill_To_Curr_Story">
			<Description><![CDATA["Sill Height to Current Story"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Integer Name="AC_WallType">
			<Description><![CDATA["Wall Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="AC_WindowInWallContour">
			<Description><![CDATA["Window in Wall Contour"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="4" SecondDimension="0">
				<AVal Row="1">0</AVal>
				<AVal Row="2">0</AVal>
				<AVal Row="3">0</AVal>
				<AVal Row="4">0</AVal>
			</ArrayValues>
		</Integer>
		<Length Name="AC_WallContourPolygon">
			<Description><![CDATA["Wall Contour Polygon"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="3">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0</AVal>
				<AVal Column="3" Row="1">0</AVal>
			</ArrayValues>
		</Length>
		<Integer Name="AC_Wall_Direction_Type">
			<Description><![CDATA["Wall Direction Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="ac_revealAnchorPos">
			<Description><![CDATA["Reveal Anchor Position"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Length Name="ac_revealToWallCore">
			<Description><![CDATA["Reveal to Wall Core"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Integer Name="ac_zone_on_reveal_side">
			<Description><![CDATA["Opening Direction"]]></Description>
			<Flags>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>-1</Value>
		</Integer>

		<!-- iTypeDemolitionFill: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Integer Name="iTypeDemolitionFill">
			<Description><![CDATA["Demolition / New construction"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_BoldName/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<FillPattern Name="gs_new_symb_fill">
			<Description><![CDATA["New Wall Fill Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>4</Value>
		</FillPattern>
		<PenColor Name="gs_new_symb_pen_Fg">
			<Description><![CDATA["New Wall Fill Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</PenColor>
		<PenColor Name="gs_new_symb_pen_bg">
			<Description><![CDATA["New Wall Fill Background Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<Length Name="gs_new_symb_width_r">
			<Description><![CDATA["New Wall Fill Width Right"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.15</Value>
		</Length>
		<Length Name="gs_new_symb_width_l">
			<Description><![CDATA["New Wall Fill Width Left"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.15</Value>
		</Length>
		<Boolean Name="gs_bShowNewOnCC">
			<Description><![CDATA["Show new construction on Wall"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<LineType Name="gs_Demolition_linetype">
			<Description><![CDATA["Demolition line type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</LineType>
		<Boolean Name="gs_bShowDemolitionPar">
			<Description><![CDATA["Show Demolition/New parameter"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- gs_options: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_options">
			<Description><![CDATA["Options"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
		</Title>

		<!-- gs_window_sizes: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_window_sizes">
			<Description><![CDATA["Window Sizes"]]></Description>
			<Fix/>
		</Title>
		<String Name="gs_unit_size">
			<Description><![CDATA["Unit Size"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Специальный Размер"]]></Value>
		</String>
		<Length Name="gs_tolerance">
			<Description><![CDATA["Tolerance"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_tolerance_left">
			<Description><![CDATA["Tolerance Left"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_tolerance_right">
			<Description><![CDATA["Tolerance Right"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_tolerance_upper">
			<Description><![CDATA["Tolerance Upper"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_tolerance_lower">
			<Description><![CDATA["Tolerance Lower"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ac_wallhole_width">
			<Description><![CDATA["Wallhole Width"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0.9</Value>
		</Length>
		<Length Name="ac_wallhole_height">
			<Description><![CDATA["Wallhole Height"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>1.5</Value>
		</Length>
		<Length Name="ac_reveal_width">
			<Description><![CDATA["Reveal Width"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0.9</Value>
		</Length>
		<Length Name="ac_reveal_height">
			<Description><![CDATA["Reveal Height"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>1.5</Value>
		</Length>
		<Length Name="ac_unit_width">
			<Description><![CDATA["Unit Width"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0.9</Value>
		</Length>
		<Length Name="ac_unit_height">
			<Description><![CDATA["Unit Height"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>1.5</Value>
		</Length>
		<Integer Name="gs_nominal_size">
			<Description><![CDATA["Nominal Size"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Boolean Name="gs_wallhole_nominal">
			<Description><![CDATA["Set Wallhole Size as Nominal Size"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_reveal_nominal">
			<Description><![CDATA["Set Reveal Size as Nominal Size"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_unit_nominal">
			<Description><![CDATA["Set Unit Size as Nominal Size"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_retain_nominal_sizes">
			<Description><![CDATA["Transfer Current Nominal Size to Selection"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- titlePanels: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="titlePanels">
			<Description><![CDATA["Panels"]]></Description>
		</Title>
		<String Name="divisionMethod">
			<Description><![CDATA["Panel Division Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Количество Раскладки"]]></Value>
		</String>
		<Integer Name="iDivisionMethod">
			<Description><![CDATA["Panel Division Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="divWidthHor">
			<Description><![CDATA["Horizontal Div. Width (0=No)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.3</Value>
		</Length>
		<Length Name="divWidthVertBottom">
			<Description><![CDATA["Bottom Vert. Div. Width (0=No)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.3</Value>
		</Length>
		<Length Name="divWidthVertMiddle">
			<Description><![CDATA["Middle Vert. Div. Width (0=No)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.3</Value>
		</Length>
		<Length Name="divWidthVertTransom">
			<Description><![CDATA["Top Vert. Div. Width (0=No)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.3</Value>
		</Length>
		<Integer Name="nHorDivision">
			<Description><![CDATA["Horizontal Div. Number"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="gs_ver_d">
			<Description><![CDATA["Horizontal Mullion Distance"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="2" SecondDimension="0">
				<AVal Row="1">0.389466666667</AVal>
				<AVal Row="2">0.778933333333</AVal>
			</ArrayValues>
		</Length>
		<Integer Name="gs_ver_gnum">
			<Description><![CDATA["Horizontal Mullion Number"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="nVertDivBottom">
			<Description><![CDATA["Bottom Vert. Div. Number"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="gs_hor_d">
			<Description><![CDATA["Bottom Vert. Mull. Distance"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="0">
				<AVal Row="1">0.3556</AVal>
			</ArrayValues>
		</Length>
		<Integer Name="gs_hor_gnum">
			<Description><![CDATA["Bottom Vert. Mull. Number"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="nVertDivMiddle">
			<Description><![CDATA["Middle Vert. Div. Number"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="gs_hor_dtr">
			<Description><![CDATA["Middle Vert. Mull. Distance"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="0">
				<AVal Row="1">0.51435</AVal>
			</ArrayValues>
		</Length>
		<Integer Name="gs_hor_gnumtr">
			<Description><![CDATA["Middle Vert. Mull. Number"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="nVertDivTransom">
			<Description><![CDATA["Top Vert. Div. Number"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Length Name="gs_hor_dtp">
			<Description><![CDATA["Top Vert. Mull. Distance"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="0">
				<AVal Row="1">-0.005</AVal>
			</ArrayValues>
		</Length>
		<Integer Name="gs_hor_gtp">
			<Description><![CDATA["Top Vert. Mull. Number"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="middlePanelHeight">
			<Description><![CDATA["Transom Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>

		<!-- titleEndFrame: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="titleEndFrame">
			<Description><![CDATA["End Frame Profile"]]></Description>
		</Title>
		<String Name="endFrameLeft">
			<Description><![CDATA["End Frame Profile on Left"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Обычный"]]></Value>
		</String>
		<Integer Name="iEndFrameLeft">
			<Description><![CDATA["End Frame Profile on Left"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="gs_stack_left">
			<Description><![CDATA["Joint Left"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Angle Name="leftCornerAngle">
			<Description><![CDATA["Left Angle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>90</Value>
		</Angle>
		<String Name="endFrameRight">
			<Description><![CDATA["End Frame Profile on Right"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Обычный"]]></Value>
		</String>
		<Integer Name="iEndFrameRight">
			<Description><![CDATA["End Frame Profile on Right"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="gs_stack_right">
			<Description><![CDATA["Joint Right"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Angle Name="rightCornerAngle">
			<Description><![CDATA["Right Angle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>90</Value>
		</Angle>
		<Boolean Name="gs_stack_bottom">
			<Description><![CDATA["Joint Lower"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_stack_top">
			<Description><![CDATA["Joint Upper"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- gs_window_frame: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_window_frame">
			<Description><![CDATA["Frame"]]></Description>
			<Fix/>
		</Title>
		<String Name="frameStyleLeft">
			<Description><![CDATA["Frame Style on Left Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Видимые Профили"]]></Value>
		</String>
		<Integer Name="iFrameStyleLeft">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="frameStyleRight">
			<Description><![CDATA["Frame Style on Right Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Видимые Профили"]]></Value>
		</String>
		<Integer Name="iFrameStyleRight">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="gs_wthk">
			<Description><![CDATA["Frame Thickness=Wall Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_frame_thk">
			<Description><![CDATA["Frame Thickness"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.08</Value>
		</Length>
		<Length Name="gs_frame_width">
			<Description><![CDATA["Frame Width"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.04</Value>
		</Length>
		<Length Name="midRailWidth">
			<Description><![CDATA["Middle Rail Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.15</Value>
		</Length>
		<Length Name="bottomRailWidth">
			<Description><![CDATA["Bottom Rail Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.15</Value>
		</Length>
		<Length Name="gs_fw_side_left">
			<Description><![CDATA["Frame W. on Left Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.04</Value>
		</Length>
		<Length Name="gs_fw_side_right">
			<Description><![CDATA["Frame W. on Right Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.04</Value>
		</Length>
		<Length Name="gs_fw_lower">
			<Description><![CDATA["Frame Width Lower"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.15</Value>
		</Length>
		<Length Name="gs_fw_upper">
			<Description><![CDATA["Frame Width Upper"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.04</Value>
		</Length>
		<Material Name="gs_frame_mat">
			<Description><![CDATA["Frame Surface"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>45</Value>
		</Material>
		<Material Name="gs_midrail_mat">
			<Description><![CDATA["Middle Frame Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>45</Value>
		</Material>
		<Length Name="gs_fthk">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.08</Value>
		</Length>

		<!-- gs_sidelight: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_sidelight">
			<Description><![CDATA["Shape"]]></Description>
			<Fix/>
		</Title>
		<Boolean Name="bMiddleRail">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="midRailElevation">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.9</Value>
		</Length>
		<Boolean Name="gs_UTrans">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="transomHeight">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Boolean Name="gs_bSLight">
			<Description><![CDATA["Side Panel 1"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="gs_SLight_w">
			<Description><![CDATA["Side Panel Width 1"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Boolean Name="gs_bSLight2">
			<Description><![CDATA["Side Panel 2"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="gs_SLight_w2">
			<Description><![CDATA["Side Panel Width 2"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>

		<!-- gs_window_sash: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_window_sash">
			<Description><![CDATA["Glass and Mullions"]]></Description>
			<Fix/>
		</Title>
		<String Name="frameStyleMullion">
			<Description><![CDATA["Frame Style on Mullion"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Видимые Профили"]]></Value>
		</String>
		<Integer Name="iFrameStyleMullion">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="gs_md">
			<Description><![CDATA["Grid Depth=Frame Depth"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_grid_w">
			<Description><![CDATA["Horizontal Mullion Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.03</Value>
		</Length>
		<Length Name="gs_grid_thk">
			<Description><![CDATA["Horizontal Mullion Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="gridWidthVert">
			<Description><![CDATA["Vertical Mullion Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.03</Value>
		</Length>
		<Length Name="gridThkVert">
			<Description><![CDATA["Vertical Mullion Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_glass_thk">
			<Description><![CDATA["Glass Thickness"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.01</Value>
		</Length>

		<!-- bVentilationProfile: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Boolean Name="bVentilationProfile">
			<Description><![CDATA["Natural Ventilation"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="iVentilationProfileType">
			<Description><![CDATA["Natural Ventilation Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="VentilationProfileHeight">
			<Description><![CDATA["Profile Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.065</Value>
		</Length>
		<Length Name="VentilationProfileThickness">
			<Description><![CDATA["Profile Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.11</Value>
		</Length>

		<!-- gs_reveal_type_new: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<String Name="gs_reveal_type_new">
			<Description><![CDATA["Reveal Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="gs_reveal_type_int">
			<Description><![CDATA["Reveal Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<String Name="gs_reveal_type_bottom">
			<Description><![CDATA["Bottom Reveal Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Без Четверти"]]></Value>
		</String>
		<Integer Name="gs_reveal_type_bottom_int">
			<Description><![CDATA["Bottom Reveal Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Length Name="gs_wido_sill">
			<Description><![CDATA["Reveal Depth"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>-9999</Value>
		</Length>
		<Length Name="AC_wido_sill">
			<Description><![CDATA["Reveal Depth"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<String Name="gs_reveal_type">
			<Description><![CDATA["Outer Reveal Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Отлив"]]></Value>
		</String>
		<Integer Name="gs_reveal_doubleOuterTypeInt">
			<Description><![CDATA["Reveal Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<String Name="gs_reveal_double_innerType">
			<Description><![CDATA["Inner Reveal Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Без Четверти"]]></Value>
		</String>
		<Integer Name="gs_reveal_doubleInnerTypeInt">
			<Description><![CDATA["Reveal Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Boolean Name="gs_reveal_uniform">
			<Description><![CDATA["Uniform Jamb Depth"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="gs_reveal_left">
			<Description><![CDATA["Jamb Depth Side 2"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_reveal_right">
			<Description><![CDATA["Jamb Depth"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_reveal_splayed_innerLeft">
			<Description><![CDATA["Inner Jamb Depth Side 2"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_reveal_splayed_innerRight">
			<Description><![CDATA["Inner Jamb Depth"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_reveal_double_innerLeft">
			<Description><![CDATA["Inner Jamb Depth Side 2"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_reveal_double_innerRight">
			<Description><![CDATA["Inner Jamb Depth"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_reveal_top">
			<Description><![CDATA["Head Jamb Depth"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_reveal_bottom">
			<Description><![CDATA["Sill Jamb Depth"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_reveal_splayed_innerTop">
			<Description><![CDATA["Inner Head Depth"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_reveal_splayed_innerBottom">
			<Description><![CDATA["Inner Sill Depth"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_reveal_double_innerTop">
			<Description><![CDATA["Inner Head Depth"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="gs_reveal_double_innerBottom">
			<Description><![CDATA["Inner Sill Depth"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_reveal_outer_jamb_depth">
			<Description><![CDATA["Outer Jamb Depth"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.08</Value>
		</Length>
		<Angle Name="gs_reveal_left_angle">
			<Description><![CDATA["Angle Side 2"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>20</Value>
		</Angle>
		<Angle Name="gs_reveal_right_angle">
			<Description><![CDATA["Angle Side"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>20</Value>
		</Angle>
		<Angle Name="gs_reveal_top_angle">
			<Description><![CDATA["Upper Side Angle"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>20</Value>
		</Angle>
		<Angle Name="gs_reveal_bottom_angle">
			<Description><![CDATA["Bottom Side Angle"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>20</Value>
		</Angle>
		<Boolean Name="gs_reveal_auto_changed_by_cc">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_gsmd">
			<Description><![CDATA["Glass Setback=1/2 Mullion Depth"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_gsb">
			<Description><![CDATA["Glass Setback"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.01</Value>
		</Length>
		<Length Name="buttGalzedJoint">
			<Description><![CDATA["Butt Glazed Joint"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.01</Value>
		</Length>
		<Material Name="gs_sash_mat">
			<Description><![CDATA["Horizontal Mullion Surface"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>45</Value>
		</Material>
		<Material Name="gs_vertMull_mat">
			<Description><![CDATA["Vertical Mullion Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>45</Value>
		</Material>
		<Material Name="gs_glass_mat">
			<Description><![CDATA["Glass Surface"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>24</Value>
		</Material>
		<Boolean Name="gs_full_edit">
			<Description><![CDATA["Show Editable Hotspots"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Integer Name="iRevealOnSymbol">
			<Description><![CDATA["Show Reveal on Symbol"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="gs_sash_thk">
			<Description><![CDATA["Sash Frame Thickness"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.05000625</Value>
		</Length>
		<Length Name="gs_sash_width">
			<Description><![CDATA["Sash Frame Width"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.05</Value>
		</Length>

		<!-- gs_turn_plaster: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_turn_plaster">
			<Description><![CDATA["Turn Plaster"]]></Description>
			<Fix/>
		</Title>
		<Boolean Name="gs_useWallFinishSkin">
			<Description><![CDATA["Use Wall Finish Component"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_maxPlasterThk">
			<Description><![CDATA["Plaster Thickness Limit"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.04</Value>
		</Length>
		<Boolean Name="gs_bAutoTurnOut">
			<Description><![CDATA["Auto Turn Inside Face Plaster"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Integer Name="gs_bOverOut">
			<Description><![CDATA["Turn Inside Face Plaster"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Boolean Name="gs_bAutoTurnIn">
			<Description><![CDATA["Auto Turn Outside Face Plaster"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Integer Name="gs_bOverIn">
			<Description><![CDATA["Turn Outside Face Plaster"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Boolean Name="gs_turn_plaster_dim_2D">
			<Description><![CDATA["Dimensionable on 2D"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_turn_plaster_show_3D">
			<Description><![CDATA["Show in 3D"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- gs_closure_type: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<String Name="gs_closure_type">
			<Description><![CDATA["Closure Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="gs_closure_type_int">
			<Description><![CDATA["Closure Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<String Name="gs_cavity_side">
			<Description><![CDATA["Turn Skin on Side"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Обе"]]></Value>
		</String>
		<Integer Name="iCavityClosureSide">
			<Description><![CDATA["Turn Skin on Side"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="gs_nTurn">
			<Description><![CDATA["Number of Skins to Turn"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="gs_nTurnDir">
			<Description><![CDATA["Number from"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Наружная Поверхность"]]></Value>
		</String>
		<Integer Name="iCavityClosureTurnDir">
			<Description><![CDATA["Number from"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="gs_cc_dutch_ShowLeft">
			<Description><![CDATA["Place Closer on Side 2"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_cc_dutch_ShowRight">
			<Description><![CDATA["Place Closer on Side 1"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_cc_dutch_ShowTop">
			<Description><![CDATA["Place Closer on Top"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_cc_dutch_ShowBottom">
			<Description><![CDATA["Place Closer on Bottom"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="gs_cc_dutch_ClosureToSkin">
			<Description><![CDATA["Place Closer to Skin"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="gs_cc_dutch_ClosureToSide_str">
			<Description><![CDATA["Place Closer from Side"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="gs_cc_dutch_ClosureToSide">
			<Description><![CDATA["Place Closer from Side"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="gs_cc_dutch_GapAtOutsideSkin">
			<Description><![CDATA["Gap at Outside Skin"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_cc_dutch_TurnToClosure">
			<Description><![CDATA["Turn Skin to Closer"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_cc_dutch_TurnToClosureOffs">
			<Description><![CDATA["Distance of Skin from Closer"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_cc_dutch_widthJoint">
			<Description><![CDATA["Closer Width"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.038</Value>
		</Length>
		<Length Name="gs_cc_dutch_thkJoint">
			<Description><![CDATA["Closer Thickness"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Boolean Name="gs_bJoint">
			<Description><![CDATA["Insert Insulation Strip"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="gs_showJoint">
			<Description><![CDATA["Show Insulation Strip"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="gs_thkJoint">
			<Description><![CDATA["Strip Thickness"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.025</Value>
		</Length>
		<PenColor Name="gs_penJoint">
			<Description><![CDATA["Contour Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>100</Value>
		</PenColor>
		<LineType Name="gs_ltJoint">
			<Description><![CDATA["Contour Line Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</LineType>
		<FillPattern Name="gs_fillJoint">
			<Description><![CDATA["Fill Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>17</Value>
		</FillPattern>
		<PenColor Name="gs_penJointFg">
			<Description><![CDATA["Fill Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</PenColor>
		<PenColor Name="gs_penJointBg">
			<Description><![CDATA["Fill Background Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>93</Value>
		</PenColor>
		<Boolean Name="gs_cc_dutch_matJointCustom">
			<Description><![CDATA["Custom Surface"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Material Name="gs_cc_dutch_matJoint">
			<Description><![CDATA["Surface"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Length Name="gs_widthPlug">
			<Description><![CDATA["Profile Width"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.075</Value>
		</Length>
		<PenColor Name="gs_penPlug">
			<Description><![CDATA["Contour Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>100</Value>
		</PenColor>
		<LineType Name="gs_ltPlug">
			<Description><![CDATA["Contour Line Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</LineType>
		<FillPattern Name="gs_fillPlug">
			<Description><![CDATA["Fill Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>17</Value>
		</FillPattern>
		<PenColor Name="gs_penPlugFg">
			<Description><![CDATA["Fill Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</PenColor>
		<PenColor Name="gs_penPlugBg">
			<Description><![CDATA["Fill Background Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>93</Value>
		</PenColor>
		<Length Name="gs_custom_cc_array_left">
			<Description><![CDATA["Left Side Skin Data"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="8" SecondDimension="4">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0.015</AVal>
				<AVal Column="3" Row="1">0</AVal>
				<AVal Column="4" Row="1">1</AVal>
				<AVal Column="1" Row="2">0</AVal>
				<AVal Column="2" Row="2">0.015</AVal>
				<AVal Column="3" Row="2">0</AVal>
				<AVal Column="4" Row="2">1</AVal>
				<AVal Column="1" Row="3">0</AVal>
				<AVal Column="2" Row="3">0.015</AVal>
				<AVal Column="3" Row="3">0</AVal>
				<AVal Column="4" Row="3">1</AVal>
				<AVal Column="1" Row="4">0</AVal>
				<AVal Column="2" Row="4">0.015</AVal>
				<AVal Column="3" Row="4">0</AVal>
				<AVal Column="4" Row="4">1</AVal>
				<AVal Column="1" Row="5">0</AVal>
				<AVal Column="2" Row="5">0.015</AVal>
				<AVal Column="3" Row="5">0</AVal>
				<AVal Column="4" Row="5">1</AVal>
				<AVal Column="1" Row="6">0</AVal>
				<AVal Column="2" Row="6">0.015</AVal>
				<AVal Column="3" Row="6">0</AVal>
				<AVal Column="4" Row="6">1</AVal>
				<AVal Column="1" Row="7">0</AVal>
				<AVal Column="2" Row="7">0.015</AVal>
				<AVal Column="3" Row="7">0</AVal>
				<AVal Column="4" Row="7">1</AVal>
				<AVal Column="1" Row="8">0</AVal>
				<AVal Column="2" Row="8">0.015</AVal>
				<AVal Column="3" Row="8">0</AVal>
				<AVal Column="4" Row="8">1</AVal>
			</ArrayValues>
		</Length>
		<Length Name="gs_custom_cc_array_right">
			<Description><![CDATA["Right Side Skin Data"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="8" SecondDimension="4">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0.015</AVal>
				<AVal Column="3" Row="1">0</AVal>
				<AVal Column="4" Row="1">1</AVal>
				<AVal Column="1" Row="2">0</AVal>
				<AVal Column="2" Row="2">0.015</AVal>
				<AVal Column="3" Row="2">0</AVal>
				<AVal Column="4" Row="2">1</AVal>
				<AVal Column="1" Row="3">0</AVal>
				<AVal Column="2" Row="3">0.015</AVal>
				<AVal Column="3" Row="3">0</AVal>
				<AVal Column="4" Row="3">1</AVal>
				<AVal Column="1" Row="4">0</AVal>
				<AVal Column="2" Row="4">0.015</AVal>
				<AVal Column="3" Row="4">0</AVal>
				<AVal Column="4" Row="4">1</AVal>
				<AVal Column="1" Row="5">0</AVal>
				<AVal Column="2" Row="5">0.015</AVal>
				<AVal Column="3" Row="5">0</AVal>
				<AVal Column="4" Row="5">1</AVal>
				<AVal Column="1" Row="6">0</AVal>
				<AVal Column="2" Row="6">0.015</AVal>
				<AVal Column="3" Row="6">0</AVal>
				<AVal Column="4" Row="6">1</AVal>
				<AVal Column="1" Row="7">0</AVal>
				<AVal Column="2" Row="7">0.015</AVal>
				<AVal Column="3" Row="7">0</AVal>
				<AVal Column="4" Row="7">1</AVal>
				<AVal Column="1" Row="8">0</AVal>
				<AVal Column="2" Row="8">0.015</AVal>
				<AVal Column="3" Row="8">0</AVal>
				<AVal Column="4" Row="8">1</AVal>
			</ArrayValues>
		</Length>
		<Integer Name="iCustomCCEditJambSide">
			<Description><![CDATA["Edited Jamb Side"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="iCustomCCEditWallSide">
			<Description><![CDATA["Edited Wall Side"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="iCustomCCEditSkin">
			<Description><![CDATA["Edited Skin Number"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="gs_custom_cc_turn_in">
			<Description><![CDATA["Turn-in Skin"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_custom_cc_plaster">
			<Description><![CDATA["Consider Skin as Plaster"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="iCustomCCThicknessType">
			<Description><![CDATA["Turn-in Thickness"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="gs_custom_cc_thickness">
			<Description><![CDATA["Custom Thickness"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.015</Value>
		</Length>
		<Integer Name="iCustomCCOrientation">
			<Description><![CDATA["Hatch Orientation"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="gs_custom_cc_separator">
			<Description><![CDATA["Separating Line at Turn-in"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<PenColor Name="gs_custom_cc_separator_pen">
			<Description><![CDATA["Separating Line Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</PenColor>
		<Length Name="gs_custom_cc_overhang">
			<Description><![CDATA["Skin Overhang to Frame Depth"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Boolean Name="gs_custom_cc_last_sel_side">
			<Description><![CDATA["Last Selected Side"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_closure_auto_changed">
			<Description><![CDATA["Closure Method Changed Automatically"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- gs_oversize: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_oversize">
			<Description><![CDATA["Opening Oversize"]]></Description>
		</Title>
		<Length Name="gs_left_oversize">
			<Description><![CDATA["Left Opening Oversize"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_right_oversize">
			<Description><![CDATA["Right Opening Oversize"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_upper_oversize">
			<Description><![CDATA["Upper Opening Oversize"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_lower_oversize">
			<Description><![CDATA["Lower Opening Oversize"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>

		<!-- gs_2D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_2D_representation">
			<Description><![CDATA["2D and Section Representation"]]></Description>
			<Fix/>
		</Title>
		<Integer Name="iDWDet2D">
			<Description><![CDATA["2D Detail Level"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<PenColor Name="gs_pen_2D">
			<Description><![CDATA["Frame Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>23</Value>
		</PenColor>
		<PenColor Name="gs_pen_mull">
			<Description><![CDATA["Grid Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>43</Value>
		</PenColor>
		<PenColor Name="gs_pen_glass">
			<Description><![CDATA["Glass Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>43</Value>
		</PenColor>
		<String Name="gs_wcont_line">
			<Description><![CDATA["Wall Contour Line"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA["Обе стороны"]]></Value>
		</String>
		<Integer Name="iWallContourLine">
			<Description><![CDATA["Wall Contour Line"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<LineType Name="gs_wcont_line_in">
			<Description><![CDATA["Wall Contour Line Type Inside"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</LineType>
		<LineType Name="gs_wcont_line_out">
			<Description><![CDATA["Wall Contour Line Type Outside"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</LineType>
		<LineType Name="gs_wcont_hidden_line_in">
			<Description><![CDATA["Hidden Wall Contour Line Type Inside"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>4</Value>
		</LineType>
		<LineType Name="gs_wcont_hidden_line_out">
			<Description><![CDATA["Hidden Wall Contour Line Type Outside"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>4</Value>
		</LineType>
		<PenColor Name="gs_wcont_line_pen">
			<Description><![CDATA["Wall Contour Line Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3</Value>
		</PenColor>
		<Boolean Name="gs_bFills">
			<Description><![CDATA["Use Fills"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<FillPattern Name="gs_fillShCover">
			<Description><![CDATA["Uncut Fill Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_penShCov_fg">
			<Description><![CDATA["Uncut Fill Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_penShCov_bg">
			<Description><![CDATA["Uncut Fill Background Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<FillPattern Name="gs_fillFr">
			<Description><![CDATA["Frame Fill Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>12</Value>
		</FillPattern>
		<PenColor Name="gs_penFr_fg">
			<Description><![CDATA["Frame Fill Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>103</Value>
		</PenColor>
		<PenColor Name="gs_penFr_bg">
			<Description><![CDATA["Frame Fill Background Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<FillPattern Name="gs_gsect">
			<Description><![CDATA["Glass Fill Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_penGlass_fg">
			<Description><![CDATA["Glass Fill Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_penGlass_bg">
			<Description><![CDATA["Glass Fill Background Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<FillPattern Name="gs_wallhole_fill">
			<Description><![CDATA["Plan Symbol Fill Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_wallhole_pen_fg">
			<Description><![CDATA["Plan Symbol Fill Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_wallhole_pen_bg">
			<Description><![CDATA["Plan Symbol Fill Background Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<FillPattern Name="gs_ventProfile_fill">
			<Description><![CDATA["Ventilation Section Fill Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>16</Value>
		</FillPattern>
		<PenColor Name="gs_ventProfile_pen_fg">
			<Description><![CDATA["Ventilation Section Fill Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_ventProfile_pen_bg">
			<Description><![CDATA["Ventilation Section Fill Background Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>

		<!-- gs_3D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_3D_representation">
			<Description><![CDATA["3D Representation"]]></Description>
			<Fix/>
		</Title>
		<Integer Name="gs_SashText_typ_num">
			<Description><![CDATA["Frame Element Joinery"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<PenColor Name="gs_frame_pen">
			<Description><![CDATA["Frame Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3</Value>
		</PenColor>
		<PenColor Name="gs_sash_pen">
			<Description><![CDATA["Sash Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>3</Value>
		</PenColor>
		<PenColor Name="gs_glass_pen">
			<Description><![CDATA["Glass Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>3</Value>
		</PenColor>

		<!-- gs_window_material: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_window_material">
			<Description><![CDATA["Surfaces"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
		</Title>
		<Boolean Name="bLinkSurfacesFrameSash">
			<Description><![CDATA["Uniform Surfaces"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="stored_material">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="4" SecondDimension="1">
				<AVal Column="1" Row="1">-9999</AVal>
				<AVal Column="1" Row="2">0</AVal>
				<AVal Column="1" Row="3">-9999</AVal>
				<AVal Column="1" Row="4">0</AVal>
			</ArrayValues>
		</Integer>
		<Material Name="gs_ventProfile_mat">
			<Description><![CDATA["Ventilation Profile Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>45</Value>
		</Material>

		<!-- ac_details: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="ac_details">
			<Description><![CDATA["Computed Oversize Values"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
		</Title>
		<Length Name="ac_left_oversize">
			<Description><![CDATA["AC Left Opening Oversize"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ac_right_oversize">
			<Description><![CDATA["AC Right Opening Oversize"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ac_upper_oversize">
			<Description><![CDATA["AC Upper Opening Oversize"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ac_lower_oversize">
			<Description><![CDATA["AC Lower Opening Oversize"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>

		<!-- gs_head_symbol: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Boolean Name="gs_head_symbol">
			<Description><![CDATA["Head Depth on Symbol"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<LineType Name="gs_head_symbol_line">
			<Description><![CDATA["Head Depth Symbol Line Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>21</Value>
		</LineType>
		<PenColor Name="gs_head_symbol_pen">
			<Description><![CDATA["Head Depth Symbol Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>6</Value>
		</PenColor>
		<Integer Name="gs_ui_current_page">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="gs_ui_sub_tabpage_closure">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="ac_wido_hide_options">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="gs_SWE_listParams_contr">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="casementIDForLabel">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="3" SecondDimension="4">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0</AVal>
				<AVal Column="3" Row="1">0</AVal>
				<AVal Column="4" Row="1">0</AVal>
				<AVal Column="1" Row="2">0</AVal>
				<AVal Column="2" Row="2">1</AVal>
				<AVal Column="3" Row="2">0</AVal>
				<AVal Column="4" Row="2">0</AVal>
				<AVal Column="1" Row="3">0</AVal>
				<AVal Column="2" Row="3">0</AVal>
				<AVal Column="3" Row="3">0</AVal>
				<AVal Column="4" Row="3">0</AVal>
			</ArrayValues>
		</Integer>
		<Integer Name="gs_optype_m_01">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="gs_optype_m_02">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="gs_optype_m_03">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="gs_optype_m_05">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="gs_optype_m_06">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="gs_optype_m_07">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="gs_optype_m_09">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="gs_optype_m_10">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="gs_optype_m_11">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>

		<!-- gs_list: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_list">
			<Description><![CDATA["Parameters for Listing"]]></Description>
			<Fix/>
		</Title>
		<Boolean Name="gs_bOpeningToZone">
			<Description><![CDATA["Window belongs to the Zone into which it opens"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<RealNum Name="gs_list_cost">
			<Description><![CDATA["Cost"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="gs_list_manufacturer">
			<Description><![CDATA["Manufacturer"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_note">
			<Description><![CDATA["Note/Remarks"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_location">
			<Description><![CDATA["Location"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_accessories">
			<Description><![CDATA["Accessories"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_glazing">
			<Description><![CDATA["Glazing"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_headdet">
			<Description><![CDATA["Header Detail"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_jambdet">
			<Description><![CDATA["Jamb Detail"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_silldet">
			<Description><![CDATA["Sill Detail"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_hwsetno">
			<Description><![CDATA["Hardware Set"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_optype">
			<Description><![CDATA["Operation Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_finish">
			<Description><![CDATA["Finish"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_elevation">
			<Description><![CDATA["Elevation"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_hings">
			<Description><![CDATA["Hinges"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_lockset">
			<Description><![CDATA["Lockset"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<RealNum Name="gs_list_glassarea_tmp">
			<Description><![CDATA["Total Glazed Area"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<Boolean Name="gs_list_glassarea_override">
			<Description><![CDATA["Override Glazed Area"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<RealNum Name="gs_list_glassarea">
			<Description><![CDATA["Total Glazed Area"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<RealNum Name="gs_list_glassperimeter">
			<Description><![CDATA["Total Glass Perimeter"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="gs_list_heattransfer">
			<Description><![CDATA["U-value"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_firerating">
			<Description><![CDATA["Fire Rating"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Boolean Name="gs_list_FR_bSelfClosing">
			<Description><![CDATA["Self-Closing"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<String Name="gs_list_FR_indexSelfClosing">
			<Description><![CDATA["Self-Closing Index"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["2"]]></Value>
		</String>
		<String Name="gs_list_FR_expression">
			<Description><![CDATA["Fire Rating Expression"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="iNEDFireRating">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Length Name="NEDFireRatingPos">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<String Name="gs_list_ventilation">
			<Description><![CDATA["Ventilation"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<RealNum Name="gs_list_freeAirPerformance">
			<Description><![CDATA["Free Air Performance (mm2/l/m)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="gs_list_acousticrating">
			<Description><![CDATA["Acoustic Rating"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_Type">
			<Description><![CDATA["Group Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Объекты по Умолчанию"]]></Value>
		</String>
		<Integer Name="iFMType">
			<Description><![CDATA["Group Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="FM_InventoryNumber">
			<Description><![CDATA["Inventory No."]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_SerialNumber">
			<Description><![CDATA["Serial No."]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_ProductionYear">
			<Description><![CDATA["Production Year"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<RealNum Name="FM_ObjectWeight">
			<Description><![CDATA["Object Weight"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="FM_ObjectWeightUnit">
			<Description><![CDATA["Object Weight Unit"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["кг"]]></Value>
		</String>
		<Integer Name="gs_list_orientationDef_m">
			<Description><![CDATA["Window Orientation Definition"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<String Name="ac_OpeningSide">
			<Description><![CDATA["Window Orientation"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="ifc_optype">
			<Description><![CDATA["IFC Operation"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>10</Value>
		</Integer>
		<Length Name="ifc_LiningDepth">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ifc_LiningThickness">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ifc_MullionThickness">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<RealNum Name="ifc_FirstMullionOffset">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<RealNum Name="ifc_SecondMullionOffset">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<Length Name="ifc_TransomThickness">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<RealNum Name="ifc_FirstTransomOffset">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<RealNum Name="ifc_SecondTransomOffset">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<Length Name="ifc_WindowPanel">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="4">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0</AVal>
				<AVal Column="3" Row="1">0</AVal>
				<AVal Column="4" Row="1">0</AVal>
			</ArrayValues>
		</Length>
		<String Name="ifc_optypestr">
			<Description><![CDATA["IFC Operation"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value><![CDATA["Другой"]]></Value>
		</String>

		<!-- gs_onorm_Title: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_onorm_Title">
			<Description><![CDATA["Additional Listing Parameters"]]></Description>
		</Title>
		<String Name="gs_onorm_width_auto">
			<Description><![CDATA["Additional Width Value"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_width">
			<Description><![CDATA["Additional Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Unique/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_height_auto">
			<Description><![CDATA["Additional Height Value"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_height">
			<Description><![CDATA["Additional Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_finsill">
			<Description><![CDATA["Finished Sill Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_rawsill">
			<Description><![CDATA["Raw Sill Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_firerating">
			<Description><![CDATA["Additional Fire Rating"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_transom_firerating">
			<Description><![CDATA["Transoms"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_transurface">
			<Description><![CDATA["Transparent Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_mat1">
			<Description><![CDATA["Additional Material 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_mat2">
			<Description><![CDATA["Additional Material 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_col1">
			<Description><![CDATA["Color 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_col2">
			<Description><![CDATA["Color 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_sunshade">
			<Description><![CDATA["Additional Sunshade"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_opening">
			<Description><![CDATA["Additional Opening"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_surface">
			<Description><![CDATA["Cleaning Surface"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_manufacturer">
			<Description><![CDATA["Additional Manufacturer"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_hwsetno">
			<Description><![CDATA["Additional Hardware Set"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_construction">
			<Description><![CDATA["Construction"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_id">
			<Description><![CDATA["ID Number"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_aks">
			<Description><![CDATA["AKS Number"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_product">
			<Description><![CDATA["Product"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_leistungbuch">
			<Description><![CDATA["Collection of Specifications ID"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_description">
			<Description><![CDATA["Additional Description"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_customtext1">
			<Description><![CDATA["Additional Information 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_customtext2">
			<Description><![CDATA["Additional Information 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_acousticrating">
			<Description><![CDATA["Additional Acoustic Rating"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_heattransfer">
			<Description><![CDATA["Additional Heat Transfer"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_admission">
			<Description><![CDATA["Admission Date"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_modification">
			<Description><![CDATA["Modification Date"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_zoneinside_auto">
			<Description><![CDATA["Zone Number Inside Value"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_zoneinside">
			<Description><![CDATA["Zone Number Inside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_zoneoutside_auto">
			<Description><![CDATA["Zone Number Outside Value"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_zoneoutside">
			<Description><![CDATA["Zone Number Outside"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="LibraryLangCode">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value><![CDATA["RUS"]]></Value>
		</String>
		<Integer Name="gs_ClosureTypeEnable">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>3855</Value>
		</Integer>
	</Parameters>
	<WDFrameExpression>
		<F><![CDATA["gs_fthk"]]></F>
		<F><![CDATA["ac_left_oversize"]]></F>
		<F><![CDATA["ac_right_oversize"]]></F>
		<F><![CDATA["ac_upper_oversize"]]></F>
		<F><![CDATA["ac_lower_oversize"]]></F>
		<F><![CDATA["(abs(J_)<0.0001)*(NOT(E~)*(C_-gs_frame_thk-K_)+E~*K_)-(abs(J_)>0.0001)"]]></F>
	</WDFrameExpression>
</ParamSection>

<CalledMacros SectVersion="2" SectionFlags="0" SubIdent="0">
	<Macro>
		<MName><![CDATA["GS Storefront Window Functions"]]></MName>
		<MainGUID>D3331679-1230-41BF-B8CE-E9BFD2CFE69E</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["Ventilation_profile"]]></MName>
		<MainGUID>58676F56-A0A0-4A02-ADA8-565DD41323CF</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["ui_tabIDlistHierarchy_m"]]></MName>
		<MainGUID>8D3FA40B-0E02-4FD9-B890-741FFA7BCDC8</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["ui_StoreFront_WinPanel_m"]]></MName>
		<MainGUID>3FE2BDF0-5BDB-4D43-AB1D-F33354805ED4</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["ui_StoreFront_WinGlass_m"]]></MName>
		<MainGUID>EA17FB46-501A-4B0A-8156-A10ACF071774</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["ui_StoreFront_WinFrame_m"]]></MName>
		<MainGUID>9B3D6415-AF52-4326-A62A-F47956DA41E1</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["ui_FloorPlanSection_m"]]></MName>
		<MainGUID>508DA90C-2840-4013-98E1-FA6BE7B316EA</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["IFC_optype_window"]]></MName>
		<MainGUID>60D88201-1F7F-4F48-A18B-15CC621CA252</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["FM_types"]]></MName>
		<MainGUID>2759D2DF-AA8E-44D1-AD1D-261581266B34</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["SWE_ListParameters_control"]]></MName>
		<MainGUID>6DD7ED35-D322-49D1-91F8-8793D2FCDA8B</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["winDoorCasIDmacro"]]></MName>
		<MainGUID>BC29598A-92AC-418A-80B4-F54D1EC54735</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["Onorm_Window"]]></MName>
		<MainGUID>C31E26BB-5EDB-472B-A0A4-765A1BAAFB6F</MainGUID>
	</Macro>
</CalledMacros>

<Copyright SectVersion="1" SectionFlags="0" SubIdent="0">
	<Author>GRAPHISOFT</Author>
	<License>
		<Type>CC BY-ND</Type>
		<Version>3.0</Version>
	</License>
</Copyright>

</Symbol>
