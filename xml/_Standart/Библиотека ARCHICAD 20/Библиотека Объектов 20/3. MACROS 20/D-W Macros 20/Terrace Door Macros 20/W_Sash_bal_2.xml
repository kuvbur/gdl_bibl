<?xml version="1.0" encoding="UTF-8"?>
<Symbol IsArchivable="true" IsPlaceable="false" MainGUID="2CC1C738-20BA-44F4-9D21-416A46185613" MigrationValue="Normal" Owner="1196638531" Signature="1297307981" Version="43">
<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_3D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[

if gs_opening_dir_m=1 then mirrored = 0
if gs_opening_dir_m=2 then mirrored = 1


!*********************************** inside/outside materials - opening direction

if not(WIDO_REVEAL_SIDE) and gs_opening_dir_m=1 then pos_def=0
if not(WIDO_REVEAL_SIDE) and gs_opening_dir_m=2 then pos_def=1
if WIDO_REVEAL_SIDE and gs_opening_dir_m=1 then pos_def=1
if WIDO_REVEAL_SIDE and gs_opening_dir_m=2 then pos_def=0

if pos_def=1 then

	!*** flip

	topmat=matsash
	botmat=gs_leaf_matin
	sidemat=matsash
	sidematedge=gs_leaf_matin

	multopmat=matpanes
	mulbotmat=gs_grill_matin
	mulsidemat=matpanes

else

	!*** default placement

	topmat=gs_leaf_matin
	botmat=matsash
	sidemat=gs_leaf_matin
	sidematedge=gs_leaf_matin

	multopmat=gs_grill_matin
	mulbotmat=matpanes
	mulsidemat=gs_grill_matin

endif

if matpanes = gs_grill_matin then
	!*** same materials inside / outside
	mn=1
	multhick=sps
	mulmmask=15
else
	!*** different materials inside / outside
	mn=2
	multhick=sps/2
	mulmmask=14
endif



sect_fill gs_fillSash, gs_penSash_bg, gs_penSash_fg, gs_sash_pen

pen gs_sash_pen


!** z dist. added at opening
!***************************

if abs(vb) < EPS then z1=ras else z1=sts-vt



!************* hotspot editing for opening ******
!************************************************

unID=sh_unID
gosub 500


if gs_glass_thk <0 then gs_glass_thk = 0.01

material matsash

if rightsash=0 then goto 10

!*********************************** right sash
!**********************************************

if vt+ras<sts+EPS or abs(vb) < EPS then

	!********** sash lies beneath the frame, no overlapping
	!******************************************************

	!** right / left

	for i=1 to 2

		cprism_ botmat, topmat, sidemat,
			5, ras,
			-a/2, 0, 10,
			-a/2+rab, rab2, 15,
			-a/2+rab, b-rab1, 10,
			-a/2, b, 15,
			-a/2, 0, -1

		mulx -1

	next i

	del 2

	gosub 100

	!** bottom / top

	for i=1 to 2

		if i=1 then rab3=rab2
		if i=2 then rab3=rab1

		cprism_ botmat, topmat, sidemat,
			5, ras,
			-a/2, 0, 10,
			-a/2+rab, rab3, 15,
			 a/2-rab, rab3, 10,
			 a/2, 0, 15,
			-a/2, 0, -1

		addy b/2
		muly -1
		addy -b/2

	next i

	del 6

	gosub 200

else

	!********* sash overlaps frame
	!*****************************

	if main=1 then

		!******** bottom overlap exists

		material botmat

		addz sts-vt

		!** top part, left / right

		for i=1 to 2

			prism_ 5, ras-(sts-vt),
				-a/2, 0, 10,
				-a/2+rab, rab2, 14,
				-a/2+rab, b-rab1, 10,
				-a/2, b, 15,
				-a/2, 0, -1

			mulx -1

		next i

		del 2

		gosub 100

		!** top part, bottom / top

		for i=1 to 2

			if i=1 then rab3=rab2
			if i=2 then rab3=rab1

			prism_ 5, ras-(sts-vt),
				-a/2, 0, 10,
				-a/2+rab, rab3, 14,
				 a/2-rab, rab3, 10,
				 a/2, 0, 15,
				-a/2, 0, -1

			addy b/2
			muly -1
			addy -b/2

		next i

		del 6

		del 1

		gosub 200

		material topmat

		!** bottom part, left / right

		for i=1 to 2

			prism_ 5, sts-vt,
				-a/2+vb, vb, 10,
				-a/2+rab, rab2, 11,
				-a/2+rab, b-rab1, 10,
				-a/2+vb, b-vb, 15,
				-a/2+vb, vb, -1

			mulx -1

		next i

		del 2

		gosub 100

		!** bottom part, bottom / top

		for i=1 to 2

			if i=1 then rab3=rab2
			if i=2 then rab3=rab1

			prism_ 5, sts-vt,
				-a/2+vb, vb, 10,
				-a/2+rab, rab3, 11,
				 a/2-rab, rab3, 10,
				 a/2-vb, vb, 15,
				-a/2+vb, vb, -1

			addy b/2
			muly -1
			addy -b/2

		next i

		del 6

		gosub 200

	else

		!******** no overlap at the bottom

		material botmat

		addz sts-vt

		!** top part, left / right

		for i=1 to 2

			prism_ 5, ras-(sts-vt),
				-a/2, 0, 10,
				-a/2+rab, rab2, 14,
				-a/2+rab, b-rab1, 10,
				-a/2, b, 15,
				-a/2, 0, -1

			mulx -1

		next i

		del 2

		gosub 100

		!** top part, bottom

		prism_ 7, ras-(sts-vt),
			-a/2, 0, 10,
			-a/2+rab, rab2, 14,
			 a/2-rab, rab2, 10,
			 a/2, 0, 15,
			 a/2-vb, 0, 12,
			-a/2+vb, 0, 13,
			-a/2, 0, -1

		!** top part, top

		prism_ 5, ras-(sts-vt),
			-a/2, b, 15,
			 a/2, b, 10,
			 a/2-rab, b-rab1, 14,
			-a/2+rab, b-rab1, 10,
			-a/2, b, -1

		gosub 200

		del 1

		material topmat

		!** bottom part, left / right

		for i=1 to 2

			prism_ 5, sts-vt,
				-a/2+vb, 0, 10,
				-a/2+rab, rab2, 11,
				-a/2+rab, b-rab1, 10,
				-a/2+vb, b-vb, 15,
				-a/2+vb, 0, -1

			mulx -1

		next i

		del 2

		gosub 100

		!** bottom part, bottom

		prism_ 5, sts-vt,
			-a/2+vb, 0, 10,
			-a/2+rab, rab2, 11,
			 a/2-rab, rab2, 10,
			 a/2-vb, 0, 11,
			-a/2+vb, 0, -1

		!** bottom part, top

		prism_ 5, sts-vt,
			-a/2+vb, b-vb, 10,
			-a/2+rab, b-rab1, 11,
			 a/2-rab, b-rab1, 10,
			 a/2-vb, b-vb, 15,
			-a/2+vb, b-vb, -1

		gosub 200

	endif

endif

goto 20



10:

!*********************************** left sash
!*********************************************


if vt+ras<sts+EPS or abs(vb) < EPS then

	!********** sash lies beneath the frame, no overlapping
	!******************************************************

	!** right / left

	for i=1 to 2

		cprism_ botmat, topmat, sidemat,
			5, ras,
			-a/2, 0, 10,
			-a/2+rab, rab2, 15,
			-a/2+rab, b-rab1, 10,
			-a/2, b, 15,
			-a/2, 0, -1

		mulx -1

	next i

	del 2

	gosub 100

	!** bottom / top

	for i=1 to 2

		if i=1 then rab3=rab2
		if i=2 then rab3=rab1

		cprism_ botmat, topmat, sidemat,
			5, ras,
			-a/2, 0, 10,
			-a/2+rab, rab3, 15,
			 a/2-rab, rab3, 10,
			 a/2, 0, 15,
			-a/2, 0, -1

		addy b/2
		muly -1
		addy -b/2

	next i

	del 6

	gosub 200

else

	!********* sash overlaps frame
	!*****************************

	if main=1 then

		!******** bottom overlap exists

		material botmat

		addz sts-vt

		!** top part, left / right

		prism_ 5, ras-(sts-vt),
			-a/2, 0, 10,
			-a/2+rab, rab2, 14,
			-a/2+rab, b-rab1, 10,
			-a/2, b, 15,
			-a/2, 0, -1


		prism_ 5, ras-(sts-vt),
			 a/2-vb, 0, 10,
			 a/2-rab, rab2, 14,
			 a/2-rab, b-rab1, 10,
			 a/2-vb, b, 15,
			 a/2-vb, 0, -1

		gosub 100

		!** top part, bottom / top

		prism_ 5, ras-(sts-vt),
			-a/2, 0, 10,
			-a/2+rab, rab2, 14,
			 a/2-rab, rab2, 10,
			 a/2-vb, 0, 15,
			-a/2, 0, -1

		prism_ 5, ras-(sts-vt),
			-a/2, b, 10,
			-a/2+rab, b-rab1, 14,
			 a/2-rab, b-rab1, 10,
			 a/2-vb, b, 15,
			-a/2, b, -1

		del 1

		gosub 200

		material topmat

		!** bottom part, left / right

		 prism_ 5, sts-vt,
			-a/2+vb, vb, 10,
			-a/2+rab, rab2, 11,
			-a/2+rab, b-rab1, 10,
			-a/2+vb, b-vb, 15,
			-a/2+vb, vb, -1

		 prism_ 5, sts-vt,
			 a/2, vb, 10,
			 a/2-rab, rab2, 11,
			 a/2-rab, b-rab1, 10,
			 a/2, b-vb, 15,
			 a/2, vb, -1

		gosub 100

		!** bottom part, bottom / top

		prism_ 5, sts-vt,
			-a/2+vb, vb, 10,
			-a/2+rab, rab2, 11,
			 a/2-rab, rab2, 10,
			 a/2, vb, 15,
			-a/2+vb, vb, -1


		prism_ 5, sts-vt,
			-a/2+vb, b-vb, 10,
			-a/2+rab, b-rab1, 11,
			 a/2-rab, b-rab1, 10,
			 a/2, b-vb, 15,
			-a/2+vb, b-vb, -1

		gosub 200

	else

		!******** no overlap at the bottom

		material botmat

		addz sts-vt

		!** top part, left / right

		prism_ 5, ras-(sts-vt),
			-a/2, 0, 10,
			-a/2+rab, rab2, 14,
			-a/2+rab, b-rab1, 10,
			-a/2, b, 15,
			-a/2, 0, -1


		prism_ 5, ras-(sts-vt),
			 a/2-vb, 0, 10,
			 a/2-rab, rab2, 14,
			 a/2-rab, b-rab1, 10,
			 a/2-vb, b, 15,
			 a/2-vb, 0, -1

		gosub 100

		!** top part, bottom

		prism_ 6, ras-(sts-vt),
			-a/2, 0, 10,
			-a/2+rab, rab2, 14,
			 a/2-rab, rab2, 10,
			 a/2-vb, 0, 12,
			-a/2+vb, 0, 13,
			-a/2, 0, -1

		!** top part, top

		prism_ 5, ras-(sts-vt),
			-a/2, b, 15,
			 a/2-vb, b, 10,
			 a/2-rab, b-rab1, 14,
			-a/2+rab, b-rab1, 10,
			-a/2, b, -1

		gosub 200

		del 1

		material topmat

		!** bottom part, left / right

		prism_ 5, sts-vt,
			-a/2+vb, 0, 10,
			-a/2+rab, rab2, 11,
			-a/2+rab, b-rab1, 10,
			-a/2+vb, b-vb, 15,
			-a/2+vb, 0, -1

		prism_ 5, sts-vt,
			 a/2, 0, 10,
			 a/2-rab, rab2, 11,
			 a/2-rab, b-rab1, 10,
			 a/2, b-vb, 15,
			 a/2, 0, -1

		gosub 100

		!** bottom part, bottom

		prism_ 6, sts-vt,
			-a/2+vb, 0, 10,
			-a/2+rab, rab2, 11,
			 a/2-rab, rab2, 10,
			 a/2, 0, 15,
			 a/2-vb, 0, 9,
			-a/2+vb, 0, -1

		!** bottom part, top

		prism_ 5, sts-vt,
			-a/2+vb, b-vb, 10,
			-a/2+rab, b-rab1, 11,
			 a/2-rab, b-rab1, 10,
			 a/2, b-vb, 15,
			-a/2+vb, b-vb, -1

		gosub 200

	endif

endif




20:

!********************** glass
!****************************


material matglas


!******** glass

if matglas<>0 then

	body 1

	material matglas
	addz ras/2-gs_glass_thk/2
	pen pg

	if lod3D = 5 then	! CHI
		mask = 8
	else
		mask = 7
	endif

	prism_ 4, gs_glass_thk,
		-a/2+rab, rab2, mask,
		 a/2-rab, rab2, mask,
		 a/2-rab, b-rab1, mask,
		-a/2+rab, b-rab1, mask

	body 1

	pen gs_sash_pen
	del 1

endif


!********************* opening lines
!***********************************



if rightsash=0 then mulx -1

if bOplines3d then

	if loc_op=2 then
		addx a/2
		mulx -1
		size_a=a
		size_b=b
		otype=1
		gosub 1000
		del 2
	endif

	if loc_op=6 then
		addx -a/2
		addz ras
		mulz -1
		size_a=a
		size_b=b
		otype=2
		gosub 1000
		del 3
	endif

	if loc_op=4 then
		addx -a/2
		size_a=a
		size_b=b
		otype=2
		gosub 1000
		del 1
		addx a/2
		mulx -1
		size_a=a
		size_b=b
		otype=1
		gosub 1000
		del 2
	endif

	if loc_op>7 then
		mulx -1
		size_a=a/2
		size_b=b
		otype=1
		gosub 1000
		del 1
		size_a=a/2
		size_b=b
		otype=1
		gosub 1000
	endif

endif

pen gs_sash_pen


if rightsash=0 then del 1



! *************** division bars in main part
!*******************************************

xm=(a-2*rab-sv*spb)/(sv+1)
ym=(b-rab1-rab2-sh*spb)/(sh+1)

sect_fill gs_fillSash, gs_penSash_bg, gs_penSash_fg, gs_sash_pen

material matpanes


!*** vertical mullions
!*********************

addz ras/2-sps/2
addx -a/2+rab
addy rab2

for i=1 to sv+1 step 1
addx xm+spb

if i<sv+EPS then

	if spb>0.001 and sps>0.001 then

		for ii=1 to mn

			gosub 900

			cprism_ mulbotmat, multopmat, mulsidemat,
				5, multhick,
				-spb, 0, mulmmask,
				 0, 0, 15,
				 0, b-rab1-rab2, 15,
				-spb, b-rab1-rab2, mulmmask,
				-spb, 0, -1

			gosub 100

			addz sps/2

		next ii

		del mn

		if matglas<>0 then
			pen pg
			lin_ -spb, 0, sps/2-0.005, -spb, b-rab1-rab2, sps/2-0.005
			lin_ 0, 0, sps/2-0.005,     0, b-rab1-rab2, sps/2-0.005
			lin_ -spb, 0, sps/2+0.005, -spb, b-rab1-rab2, sps/2+0.005
			lin_ 0, 0, sps/2+0.005,     0, b-rab1-rab2, sps/2+0.005
			pen gs_sash_pen
		endif

	else

		lin_ -spb/2, 0, sps/2-0.005,  -spb/2,b-rab1-rab2,sps/2-0.005
		lin_ -spb/2, 0, sps/2+0.005,  -spb/2,b-rab1-rab2,sps/2+0.005

	endif

endif


!** horizontal panes
!*****************


for j=1 to sh step 1

	addy ym+spb

	if spb>0.001 and sps>0.001 then

		for ii=1 to mn

			gosub 900

			cprism_ mulbotmat, multopmat, mulsidemat,
				5, multhick,
				-xm-spb,-spb, mulmmask,
				-spb,-spb, 15,
				-spb,0, 15,
				-xm-spb,0, mulmmask,
				-xm-spb,-spb, -1

			gosub 200

			addz sps/2

		next ii

		del mn

		if matglas<>0 then
			pen pg
			lin_ -xm-spb,-spb,sps/2-0.005,-spb,-spb,sps/2-0.005
			lin_ -xm-spb,0,sps/2-0.005,-spb,0,sps/2-0.005
			lin_ -xm-spb,-spb,sps/2+0.005,-spb,-spb,sps/2+0.005
			lin_ -xm-spb,0,sps/2+0.005,-spb,0,sps/2+0.005
			pen gs_sash_pen
		endif

	else

		lin_ -xm-spb,-spb/2,sps/2-0.005,-spb,-spb/2,sps/2-0.005
		lin_ -xm-spb,-spb/2,sps/2+0.005,-spb,-spb/2,sps/2+0.005

	endif

next j
del sh

next i
del sv+3




end

!************** coors for textures ***********
!*********************************************


100:

rotz 90
vert 0, 0, 0
vert 0.1, 0, 0
vert 0, 0.1, 0
vert 0, 0, 0.1
del 1

coor 2, -1, -2, -3, -4

base

body -1

return



200:

vert 0, 0, 0
vert 0.1, 0, 0
vert 0, 0.1, 0
vert 0, 0, 0.1

coor 2, -1, -2, -3, -4

base

body -1

return





500:

!********** Open the sash, hotspot editing **************
!********************************************************

if GLOB_CONTEXT <> 4 & GLOB_CONTEXT <> 6 then

if sash_type="transom" then goto 501
if sash_type="bottom" then goto 502
if sash_type="mainside" then goto 503

!********* main sashes **************

if sashnumber<2 then

	if rightsash=1 then

		!*** base hotspot
		hotspot -a/2,b/2,ras,unID,gs_op,4+128
		unID=unID+1

		!*** moving hotspot
		hotspot -a/2+(a-a*cos(gs_op))+vt*sin(gs_op),b/2,z1+a*sin(gs_op)+vt*cos(gs_op),
		unID,gs_op,5
		unID=unID+1

		!*** center of angle
		hotspot a/2,b/2,ras,unID,gs_op,6
		unID=unID+1

		!*** reference hotspot
		if mirrored then
			hotspot a/2,b,ras,unID,gs_op,7
		else
			hotspot a/2,-b,ras,unID,gs_op,7
		endif
		unID=unID+1

		addx a/2
		addz z1
		roty gs_op
		addx -a/2
		addz -z1

	else

		!*** base hotspot
		hotspot a/2,b/2,ras,unID,gs_op,4+128
		unID=unID+1

		!*** moving hotspot
		hotspot a/2-(a-a*cos(gs_op))-vt*sin(gs_op),b/2,z1+a*sin(gs_op)+vt*cos(gs_op),
		unID,gs_op,5
		unID=unID+1

		!*** center of angle
		hotspot -a/2,b/2,ras,unID,gs_op,6
		unID=unID+1

		!*** reference hotspot
		hotspot -a/2,b,ras,unID,gs_op,7
		unID=unID+1

		addx -a/2
		addz z1
		roty -gs_op
		addx a/2
		addz -z1
	endif

else

	if sashnumber=2 then

	if rightsash=1 then

		!*** base hotspot
		hotspot -a/2,b/2,ras,unID,op2,4+128
		unID=unID+1

		!*** moving hotspot
		hotspot -a/2+(a-a*cos(op2))+vt*sin(op2),b/2,z1+a*sin(op2)+vt*cos(op2),
		unID,op2,5
		unID=unID+1

		!*** center of angle
		hotspot a/2,b/2,ras,unID,op2,6
		unID=unID+1

		!*** reference hotspot
		if mirrored=0 then
			hotspot a/2,b,ras,unID,op2,7
		else
			hotspot a/2,-b,ras,unID,op2,7
		endif
		unID=unID+1

		addx a/2
		addz z1
		roty op2
		addx -a/2
		addz -z1

	else

		!*** base hotspot
		hotspot a/2,b/2,ras,unID,op2,4+128
		unID=unID+1

		!*** moving hotspot
		hotspot a/2-(a-a*cos(op2))-vt*sin(op2),b/2,z1+a*sin(op2)+vt*cos(op2),
		unID,op2,5
		unID=unID+1

		!*** center of angle
		hotspot -a/2,b/2,ras,unID,op2,6
		unID=unID+1

		!*** reference hotspot
		hotspot -a/2,-b,ras,unID,op2,7
		unID=unID+1

		addx -a/2
		addz z1
		roty -op2
		addx a/2
		addz -z1
	endif

	else

		if sashnumber=3 then

			if rightsash=1 then

				!*** base hotspot
				hotspot -a/2,b/2,ras,unID,op3,4+128
				unID=unID+1

				!*** moving hotspot
				hotspot -a/2+(a-a*cos(op3))+vt*sin(op3),b/2,z1+a*sin(op3)+vt*cos(op3),
				unID,op3,5
				unID=unID+1

				!*** center of angle
				hotspot a/2,b/2,ras,unID,op3,6
				unID=unID+1

				!*** reference hotspot
				if mirrored=0 then
					hotspot a/2,b,ras,unID,op3,7
				else
					hotspot a/2,-b,ras,unID,op3,7
				endif
				unID=unID+1

				addx a/2
				addz z1
				roty op3
				addx -a/2
				addz -z1

			else

				!*** base hotspot
				hotspot a/2,b/2,ras,unID,op3,4+128
				unID=unID+1

				!*** moving hotspot
				hotspot a/2-(a-a*cos(op3))-vt*sin(op3),b/2,z1+a*sin(op3)+vt*cos(op3),
				unID,op3,5
				unID=unID+1

				!*** center of angle
				hotspot -a/2,b/2,ras,unID,op3,6
				unID=unID+1

				!*** reference hotspot
				hotspot -a/2,-b,ras,unID,op3,7
				unID=unID+1

				addx -a/2
				addz z1
				roty -op3
				addx a/2
				addz -z1
			endif

		else

			if rightsash=1 then

				!*** base hotspot
				hotspot -a/2,b/2,ras,unID,op4,4+128
				unID=unID+1

				!*** moving hotspot
				hotspot -a/2+(a-a*cos(op4))+vt*sin(op4),b/2,z1+a*sin(op4)+vt*cos(op4),
				unID,op4,5
				unID=unID+1

				!*** center of angle
				hotspot a/2,b/2,ras,unID,op4,6
				unID=unID+1

				!*** reference hotspot
				if mirrored=0 then
					hotspot a/2,b,ras,unID,op4,7
				else
					hotspot a/2,-b,ras,unID,op4,7
				endif
				unID=unID+1

				addx a/2
				addz z1
				roty op4
				addx -a/2
				addz -z1

			else

				!*** base hotspot
				hotspot a/2,b/2,ras,unID,op4,4+128
				unID=unID+1

				!*** moving hotspot
				hotspot a/2-(a-a*cos(op4))-vt*sin(op4),b/2,z1+a*sin(op4)+vt*cos(op4),
				unID,op4,5
				unID=unID+1

				!*** center of angle
				hotspot -a/2,b/2,ras,unID,op4,6
				unID=unID+1

				!*** reference hotspot
				hotspot -a/2,-b,ras,unID,op4,7
				unID=unID+1

				addx -a/2
				addz z1
				roty -op4
				addx a/2
				addz -z1
			endif

		endif

	endif

endif

goto 510



501:

!********* transom sashes **************

if sashnumber<2 then

	if rightsash=1 then

		!*** base hotspot
		hotspot -a/2,b/2,ras,unID,gs_opt,4+128
		unID=unID+1

		!*** moving hotspot
		hotspot -a/2+(a-a*cos(gs_opt))+vt*sin(gs_opt),b/2,z1+a*sin(gs_opt)+vt*cos(gs_opt),
		unID,gs_opt,5
		unID=unID+1

		!*** center of angle
		hotspot a/2,b/2,ras,unID,gs_opt,6
		unID=unID+1
		!*** reference hotspot
		hotspot a/2,-b,ras,unID,gs_opt,7
		unID=unID+1

		addx a/2
		addz z1
		roty gs_opt
		addx -a/2
		addz -z1
	else

		!*** base hotspot
		hotspot a/2,b/2,ras,unID,gs_opt,4+128
		unID=unID+1

		!*** moving hotspot
		hotspot a/2-(a-a*cos(gs_opt))-vt*sin(gs_opt),b/2,z1+a*sin(gs_opt)+vt*cos(gs_opt),
		unID,gs_opt,5
		unID=unID+1

		!*** center of angle
		hotspot -a/2,b/2,ras,unID,gs_opt,6
		unID=unID+1

		!*** reference hotspot
		if mirrored then
			hotspot -a/2,-b,ras,unID,gs_opt,7
		else
			hotspot -a/2,b,ras,unID,gs_opt,7
		endif
		unID=unID+1

		addx -a/2
		addz z1
		roty -gs_opt
		addx a/2
		addz -z1
	endif

else

	if sashnumber=2 then

		if rightsash=1 then

			!*** base hotspot
			hotspot -a/2,b/2,ras,unID,opt2,4+128
			unID=unID+1

			!*** moving hotspot
			hotspot -a/2+(a-a*cos(opt2))+vt*sin(opt2),b/2,z1+a*sin(opt2)+vt*cos(opt2),
			unID,opt2,5
			unID=unID+1

			!*** center of angle
			hotspot a/2,b/2,ras,unID,opt2,6
			unID=unID+1

			!*** reference hotspot
			if mirrored=0 then
				hotspot a/2,b,ras,unID,opt2,7
			else
				hotspot a/2,-b,ras,unID,opt2,7
			endif
			unID=unID+1

			addx a/2
			addz z1
			roty opt2
			addx -a/2
			addz -z1

		else

			!*** base hotspot
			hotspot a/2,b/2,ras,unID,opt2,4+128
			unID=unID+1

			!*** moving hotspot
			hotspot a/2-(a-a*cos(opt2))-vt*sin(opt2),b/2,z1+a*sin(opt2)+vt*cos(opt2),
			unID,opt2,5
			unID=unID+1

			!*** center of angle
			hotspot -a/2,b/2,ras,unID,opt2,6
			unID=unID+1

			!*** reference hotspot
			hotspot -a/2,-b,ras,unID,opt2,7
			unID=unID+1

			addx -a/2
			addz z1
			roty -opt2
			addx a/2
			addz -z1

		endif

	else

		if sashnumber=3 then

			if rightsash=1 then

				!*** base hotspot
				hotspot -a/2,b/2,ras,unID,opt3,4+128
				unID=unID+1

				!*** moving hotspot
				hotspot -a/2+(a-a*cos(opt3))+vt*sin(opt3),b/2,z1+a*sin(opt3)+vt*cos(opt3),
				unID,opt3,5
				unID=unID+1

				!*** center of angle
				hotspot a/2,b/2,ras,unID,opt3,6
				unID=unID+1

				!*** reference hotspot
				if mirrored=0 then
					hotspot a/2,b,ras,unID,opt3,7
				else
					hotspot a/2,-b,ras,unID,opt3,7
				endif
				unID=unID+1

				addx a/2
				addz z1
				roty opt3
				addx -a/2
				addz -z1

			else

				!*** base hotspot
				hotspot a/2,b/2,ras,unID,opt3,4+128
				unID=unID+1

				!*** moving hotspot
				hotspot a/2-(a-a*cos(opt3))-vt*sin(opt3),b/2,z1+a*sin(opt3)+vt*cos(opt3),
				unID,opt3,5
				unID=unID+1

				!*** center of angle
				hotspot -a/2,b/2,ras,unID,opt3,6
				unID=unID+1

				!*** reference hotspot
				hotspot -a/2,-b,ras,unID,opt3,7
				unID=unID+1

				addx -a/2
				addz z1
				roty -opt3
				addx a/2
				addz -z1

			endif

		else

			if rightsash=1 then

				!*** base hotspot
				hotspot -a/2,b/2,ras,unID,opt4,4+128
				unID=unID+1

				!*** moving hotspot
				hotspot -a/2+(a-a*cos(opt4))+vt*sin(opt4),b/2,z1+a*sin(opt4)+vt*cos(opt4),
				unID,opt4,5
				unID=unID+1

				!*** center of angle
				hotspot a/2,b/2,ras,unID,opt4,6
				unID=unID+1

				!*** reference hotspot
				if mirrored=0 then
					hotspot a/2,b,ras,unID,opt4,7
				else
					hotspot a/2,-b,ras,unID,opt4,7
				endif
				unID=unID+1

				addx a/2
				addz z1
				roty opt4
				addx -a/2
				addz -z1

			else

				!*** base hotspot
				hotspot a/2,b/2,ras,unID,opt4,4+128
				unID=unID+1

				!*** moving hotspot
				hotspot a/2-(a-a*cos(opt4))-vt*sin(opt4),b/2,z1+a*sin(opt4)+vt*cos(opt4),
				unID,opt4,5
				unID=unID+1

				!*** center of angle
				hotspot -a/2,b/2,ras,unID,opt4,6
				unID=unID+1

				!*** reference hotspot
				hotspot -a/2,-b,ras,unID,opt4,7
				unID=unID+1

				addx -a/2
				addz z1
				roty -opt4
				addx a/2
				addz -z1

			endif

		endif

	endif

endif


goto 510



502:

!********* bottom sashes **************

if sashnumber<2 then

	if rightsash=1 then

		!*** base hotspot
		hotspot -a/2,b/2,ras,unID,gs_opb,4+128
		unID=unID+1

		!*** moving hotspot
		hotspot -a/2+(a-a*cos(gs_opb))+vt*sin(gs_opb),b/2,z1+a*sin(gs_opb)+vt*cos(gs_opb),
		unID,gs_opb,5
		unID=unID+1

		!*** center of angle
		hotspot a/2,b/2,ras,unID,gs_opb,6
		unID=unID+1

		!*** reference hotspot
		if rightsash=1 then
			hotspot a/2,b,ras,unID,gs_opb,7
		else
			hotspot a/2,-b,ras,unID,gs_opb,7
		endif
		unID=unID+1

		addx a/2
		addz z1
		roty gs_opb
		addx -a/2
		addz -z1
	else

		!*** base hotspot
		hotspot a/2,b/2,ras,unID,gs_opb,4+128
		unID=unID+1

		!*** moving hotspot
		hotspot a/2-(a-a*cos(gs_opb))-vt*sin(gs_opb),b/2,z1+a*sin(gs_opb)+vt*cos(gs_opb),
		unID,gs_opb,5
		unID=unID+1

		!*** center of angle
		hotspot -a/2,b/2,ras,unID,gs_opb,6
		unID=unID+1

		!*** reference hotspot
!		if rightsash=1 then
!			hotspot -a/2,b,ras,unID,gs_opb,7
!		else
			hotspot -a/2,-b,ras,unID,gs_opb,7
!		endif
		unID=unID+1

		addx -a/2
		addz z1
		roty -gs_opb
		addx a/2
		addz -z1
	endif

else

	if sashnumber=2 then

		if rightsash=1 then

			!*** base hotspot
			hotspot -a/2,b/2,ras,unID,opb2,4+128
			unID=unID+1

			!*** moving hotspot
			hotspot -a/2+(a-a*cos(opb2))+vt*sin(opb2),b/2,z1+a*sin(opb2)+vt*cos(opb2),
			unID,opb2,5
			unID=unID+1

			!*** center of angle
			hotspot a/2,b/2,ras,unID,opb2,6
			unID=unID+1

			!*** reference hotspot
			if rightsash=1 then
				hotspot a/2,b,ras,unID,opb2,7
			else
				hotspot a/2,-b,ras,unID,opb2,7
			endif
			unID=unID+1

			addx a/2
			addz z1
			roty opb2
			addx -a/2
			addz -z1
		else

			!*** base hotspot
			hotspot a/2,b/2,ras,unID,opb2,4+128
			unID=unID+1

			!*** moving hotspot
			hotspot a/2-(a-a*cos(opb2))-vt*sin(opb2),b/2,z1+a*sin(opb2)+vt*cos(opb2),
			unID,opb2,5
			unID=unID+1

			!*** center of angle
			hotspot -a/2,b/2,ras,unID,opb2,6
			unID=unID+1

			!*** reference hotspot
			hotspot -a/2,-b,ras,unID,opb2,7
			unID=unID+1

			addx -a/2
			addz z1
			roty -opb2
			addx a/2
			addz -z1
		endif

	else

		if sashnumber=3 then

			if rightsash=1 then

				!*** base hotspot
				hotspot -a/2,b/2,ras,unID,opb3,4+128
				unID=unID+1

				!*** moving hotspot
				hotspot -a/2+(a-a*cos(opb3))+vt*sin(opb3),b/2,z1+a*sin(opb3)+vt*cos(opb3),
				unID,opb3,5
				unID=unID+1

				!*** center of angle
				hotspot a/2,b/2,ras,unID,opb3,6
				unID=unID+1

				!*** reference hotspot
				if rightsash=1 then
					hotspot a/2,b,ras,unID,opb3,7
				else
					hotspot a/2,-b,ras,unID,opb3,7
				endif
				unID=unID+1

				addx a/2
				addz z1
				roty opb3
				addx -a/2
				addz -z1
			else

				!*** base hotspot
				hotspot a/2,b/2,ras,unID,opb3,4+128
				unID=unID+1

				!*** moving hotspot
				hotspot a/2-(a-a*cos(opb3))-vt*sin(opb3),b/2,z1+a*sin(opb3)+vt*cos(opb3),
				unID,opb3,5
				unID=unID+1

				!*** center of angle
				hotspot -a/2,b/2,ras,unID,opb3,6
				unID=unID+1

				!*** reference hotspot
				hotspot -a/2,-b,ras,unID,opb3,7
				unID=unID+1

				addx -a/2
				addz z1
				roty -opb3
				addx a/2
				addz -z1
			endif

		else

			if rightsash=1 then

				!*** base hotspot
				hotspot -a/2,b/2,ras,unID,opb4,4+128
				unID=unID+1

				!*** moving hotspot
				hotspot -a/2+(a-a*cos(opb4))+vt*sin(opb4),b/2,z1+a*sin(opb4)+vt*cos(opb4),
				unID,opb4,5
				unID=unID+1

				!*** center of angle
				hotspot a/2,b/2,ras,unID,opb4,6
				unID=unID+1

				!*** reference hotspot
				if rightsash=1 then
					hotspot a/2,b,ras,unID,opb4,7
				else
					hotspot a/2,-b,ras,unID,opb4,7
				endif
				unID=unID+1

				addx a/2
				addz z1
				roty opb4
				addx -a/2
				addz -z1
			else

				!*** base hotspot
				hotspot a/2,b/2,ras,unID,opb4,4+128
				unID=unID+1

				!*** moving hotspot
				hotspot a/2-(a-a*cos(opb4))-vt*sin(opb4),b/2,z1+a*sin(opb4)+vt*cos(opb4),
				unID,opb4,5
				unID=unID+1

				!*** center of angle
				hotspot -a/2,b/2,ras,unID,opb4,6
				unID=unID+1

				!*** reference hotspot
				hotspot -a/2,-b,ras,unID,opb4,7
				unID=unID+1

				addx -a/2
				addz z1
				roty -opb4
				addx a/2
				addz -z1
			endif

		endif

	endif

endif


goto 510


503:

!********* main side sashes **************

if rightsash=1 then

	!*** base hotspot
	hotspot -a/2,b/2,ras,unID,gs_ops,4+128
	unID=unID+1

	!*** moving hotspot
	hotspot -a/2+(a-a*cos(gs_ops))+vt*sin(gs_ops),b/2,z1+a*sin(gs_ops)+vt*cos(gs_ops),
	unID,gs_ops,5
	unID=unID+1

	!*** center of angle
	hotspot a/2,b/2,ras,unID,gs_ops,6
	unID=unID+1

	!*** reference hotspot
	if rightsash=1 then
		hotspot a/2,b,ras,unID,gs_ops,7
	else
		hotspot a/2,-b,ras,unID,gs_ops,7
	endif
	unID=unID+1


	addx a/2
	addz z1
	roty gs_ops
	addx -a/2
	addz -z1
else
	addx -a/2
	addz z1
	roty -gs_ops
	addx a/2
	addz -z1
endif


goto 510




510:

endif

return






900:

if ii=1 then
	sidemat=botmat
	mulsidemat=multopmat
	if matpanes = gs_grill_matin then mulmmask=15 else mulmmask=11
else
	sidemat=topmat
	mulsidemat=mulbotmat
	mulmmask=14
endif

return


1000:
	if otype = 1 then iOpeningType = 4	!side hung mirrored
	if otype = 2 then iOpeningType = 7	!bottom hung

	addz -0.0001
	call "OpeningLines" parameters a = size_a - vb*not(rightsash),
				b					= size_b,
				frameThickness		= ras+0.0002,
				iOpeningType		= iOpeningType,
				opLineType3dIn		= 4,
				opLineType3dOut		= opLineType3dOut,
				gs_opLinePen		= gs_opLinePen,
				gs_opline_style_m	= gs_opline_style_m

	add vb, vb, 0
	call "OpeningLines" parameters a = size_a - vb - vb*(rightsash),
				b					= size_b - 2*vb,
				frameThickness		= ras+0.0002,
				iOpeningType		= iOpeningType,
				opLineType3dIn		= opLineType3dIn,
				opLineType3dOut		= 4,
				gs_opLinePen		= gs_opLinePen,
				gs_opline_style_m	= gs_opline_style_m
	del 2
return

end


]]>
</Script_3D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_VL SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
GlassHeight	= b - rab1 - rab2
GlassWidth	= a - 2 * rab
PanelGlassArea = GlassWidth * GlassHeight


HorGrillNum		= sh
VertGrillNum	= sv
GrillWidth		= spb

HorGrillArea	= HorGrillNum * GlassWidth * GrillWidth
VertGrillArea	= VertGrillNum * GlassHeight * GrillWidth
SectGrillArea	= HorGrillNum * VertGrillNum * GrillWidth * GrillWidth
SummaGrillArea	= HorGrillArea + VertGrillArea - SectGrillArea


PanelGlassArea = PanelGlassArea - SummaGrillArea

end PanelGlassArea
]]>
</Script_VL>

<Comment SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Comment>

<ParamSection SectVersion="22" SectionFlags="0" SubIdent="0">
	<ParamSectHeader>
		<AutoHotspots>false</AutoHotspots>
		<WDLeftFrame>0</WDLeftFrame>
		<WDRightFrame>0</WDRightFrame>
		<WDTopFrame>0</WDTopFrame>
		<WDBotFrame>0</WDBotFrame>
		<LayFlags>65535</LayFlags>
		<WDMirrorThickness>0</WDMirrorThickness>
		<WDWallInset>0</WDWallInset>
	</ParamSectHeader>
	<Parameters>
		<Length Name="A">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Value>0.9</Value>
		</Length>
		<Length Name="B">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Value>1.5</Value>
		</Length>
		<Length Name="ZZYZX">
			<Description><![CDATA["Height"]]></Description>
			<Fix/>
			<Value>1</Value>
		</Length>
		<Integer Name="AC_WallContours">
			<Description><![CDATA["Wall Contours (0-None,1-Full,2-Side,3-Length)"]]></Description>
			<Fix/>
			<Value>0</Value>
		</Integer>
		<Integer Name="AC_Hole_Hotspot_Control">
			<Description><![CDATA["Hotspots 0-None,1-2D,2-3D,3-All"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>3</Value>
		</Integer>
		<Length Name="rab">
			<Description><![CDATA["Sash side width"]]></Description>
			<Value>0.07</Value>
		</Length>
		<Length Name="rab1">
			<Description><![CDATA["Sash top width"]]></Description>
			<Value>0.07</Value>
		</Length>
		<Length Name="rab2">
			<Description><![CDATA["Sash bottom width"]]></Description>
			<Value>0.07</Value>
		</Length>
		<Length Name="ras">
			<Description><![CDATA["Sash depth"]]></Description>
			<Value>0.07</Value>
		</Length>
		<Length Name="vb">
			<Description><![CDATA["Width of Overlapping"]]></Description>
			<Value>0.03</Value>
		</Length>
		<Integer Name="loc_op">
			<Description><![CDATA["Opening type"]]></Description>
			<Value>2</Value>
		</Integer>
		<Boolean Name="main">
			<Description><![CDATA["Bottom overlap exists"]]></Description>
			<Value>1</Value>
		</Boolean>
		<Material Name="matsash">
			<Description><![CDATA["Sash Surface Outside"]]></Description>
			<Value>14</Value>
		</Material>
		<Material Name="gs_leaf_matin">
			<Description><![CDATA["Sash Surface Inside"]]></Description>
			<Value>15</Value>
		</Material>
		<Material Name="matpanes">
			<Description><![CDATA["Grid Surface Outside"]]></Description>
			<Value>14</Value>
		</Material>
		<Material Name="gs_grill_matin">
			<Description><![CDATA["Grid Surface Inside"]]></Description>
			<Value>15</Value>
		</Material>
		<Material Name="matglas">
			<Description><![CDATA["Glass Surface"]]></Description>
			<Value>24</Value>
		</Material>
		<PenColor Name="pg">
			<Description><![CDATA["Glass Pen 3D"]]></Description>
			<Value>36</Value>
		</PenColor>
		<Length Name="sts">
			<Description><![CDATA["Frame depth"]]></Description>
			<Value>0.07</Value>
		</Length>
		<Length Name="vt">
			<Description><![CDATA["Casing Setback"]]></Description>
			<Value>0.02</Value>
		</Length>
		<Length Name="spb">
			<Description><![CDATA["Panes width"]]></Description>
			<Value>0.025</Value>
		</Length>
		<Length Name="sps">
			<Description><![CDATA["Panes depth"]]></Description>
			<Value>0.025</Value>
		</Length>
		<Integer Name="sh">
			<Description><![CDATA["Number of panes horizontal"]]></Description>
			<Value>2</Value>
		</Integer>
		<Integer Name="sv">
			<Description><![CDATA["Number of panes vertical"]]></Description>
			<Value>3</Value>
		</Integer>
		<Angle Name="gs_op">
			<Description><![CDATA["Main Sash Opening Line"]]></Description>
			<Value>0</Value>
		</Angle>
		<Angle Name="op2">
			<Description><![CDATA["Main Sash 2 Opening Line"]]></Description>
			<Value>0</Value>
		</Angle>
		<Angle Name="op3">
			<Description><![CDATA["Main Sash 3 Opening Line"]]></Description>
			<Value>0</Value>
		</Angle>
		<Angle Name="op4">
			<Description><![CDATA["Main Sash 4 Opening Line"]]></Description>
			<Value>0</Value>
		</Angle>
		<Angle Name="gs_opt">
			<Description><![CDATA["Transom Opening Line"]]></Description>
			<Value>0</Value>
		</Angle>
		<Angle Name="opt2">
			<Description><![CDATA["Transom 2 Opening Line"]]></Description>
			<Value>0</Value>
		</Angle>
		<Angle Name="opt3">
			<Description><![CDATA["Transom 3 Opening Line"]]></Description>
			<Value>0</Value>
		</Angle>
		<Angle Name="opt4">
			<Description><![CDATA["Transom 3 Opening Line"]]></Description>
			<Value>0</Value>
		</Angle>
		<Angle Name="gs_opb">
			<Description><![CDATA["Lower Transom Opening Line"]]></Description>
			<Value>0</Value>
		</Angle>
		<Angle Name="opb2">
			<Description><![CDATA["Lower Transom 2 Opening Line"]]></Description>
			<Value>0</Value>
		</Angle>
		<Angle Name="opb3">
			<Description><![CDATA["Lower Transom 3 Opening Line"]]></Description>
			<Value>0</Value>
		</Angle>
		<Angle Name="opb4">
			<Description><![CDATA["Lower Transom 4 Opening Line"]]></Description>
			<Value>0</Value>
		</Angle>
		<Angle Name="gs_ops">
			<Description><![CDATA["offnungswinkel_Seitenflugel"]]></Description>
			<Value>0</Value>
		</Angle>
		<Boolean Name="rightsash">
			<Description><![CDATA["Right sash"]]></Description>
			<Value>0</Value>
		</Boolean>
		<String Name="sash_type">
			<Description><![CDATA["Sash type"]]></Description>
			<Value><![CDATA[""]]></Value>
		</String>
		<Boolean Name="mirrored">
			<Description><![CDATA["mirrored position"]]></Description>
			<Value>0</Value>
		</Boolean>

		<!-- gs_window_material: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_window_material">
			<Description><![CDATA["Surfaces"]]></Description>
			<Fix/>
		</Title>
		<Material Name="gs_frame_mat">
			<Description><![CDATA["Frame Surface"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>14</Value>
		</Material>
		<Material Name="gs_sash_mat">
			<Description><![CDATA["Sash Surface"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="gs_glass_mat">
			<Description><![CDATA["Glass Surface"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>24</Value>
		</Material>

		<!-- ac_details: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="ac_details">
			<Description><![CDATA["Computed Oversize Values"]]></Description>
			<Fix/>
		</Title>
		<Length Name="ac_left_oversize">
			<Description><![CDATA["AC Left Opening Oversize"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ac_right_oversize">
			<Description><![CDATA["AC Right Opening Oversize"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ac_upper_oversize">
			<Description><![CDATA["AC Upper Opening Oversize"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ac_lower_oversize">
			<Description><![CDATA["AC Lower Opening Oversize"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<String Name="ifc_optypestr">
			<Description><![CDATA["IFC Operation"]]></Description>
			<Fix/>
			<Value><![CDATA["Не определена"]]></Value>
		</String>
		<Integer Name="ifc_optype">
			<Description><![CDATA["IFC Operation"]]></Description>
			<Fix/>
			<Value>0</Value>
		</Integer>
		<Integer Name="sashnumber">
			<Description><![CDATA["Rahmennummer"]]></Description>
			<Value>1</Value>
		</Integer>
		<Boolean Name="AC_show2DHotspotsIn3D">
			<Description><![CDATA["Show 2D Hotspots in 3D"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="AC_Sill_To_Curr_Story">
			<Description><![CDATA["Sill Height to Current Story"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ac_bottomlevel">
			<Description><![CDATA["Bottom Level"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="ac_toplevel">
			<Description><![CDATA["Top Level"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Boolean Name="AC_HoleSideMaterial">
			<Description><![CDATA["Hole has Wall's Side Surface"]]></Description>
			<Fix/>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="AC_HoleMaterialCurved">
			<Description><![CDATA["Hole Surface's Split is Curved in Curved Walls"]]></Description>
			<Fix/>
			<Value>0</Value>
		</Boolean>

		<!-- gs_window_frame: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_window_frame">
			<Description><![CDATA["Window Frame"]]></Description>
			<Fix/>
		</Title>
		<Length Name="gs_frame_thk">
			<Description><![CDATA["Frame Thickness"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_frame_width">
			<Description><![CDATA["Frame Width"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.07</Value>
		</Length>

		<!-- gs_window_sash: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_window_sash">
			<Description><![CDATA["Sash Frame"]]></Description>
			<Fix/>
		</Title>
		<Length Name="gs_sash_thk">
			<Description><![CDATA["Sash Frame Thickness"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_sash_width">
			<Description><![CDATA["Sash Frame Width"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Boolean Name="gs_opening_dir_m">
			<Description><![CDATA["Opening Direction"]]></Description>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_glass_thk">
			<Description><![CDATA["Glass Thickness"]]></Description>
			<Fix/>
			<Value>0</Value>
		</Length>

		<!-- gs_2D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_2D_representation">
			<Description><![CDATA["2D and Section Representation"]]></Description>
			<Fix/>
		</Title>
		<PenColor Name="gs_pen_2D">
			<Description><![CDATA["Symbol Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3</Value>
		</PenColor>
		<PenColor Name="gs_sash_pen">
			<Description><![CDATA["Frame"]]></Description>
			<Fix/>
			<Value>3</Value>
		</PenColor>
		<PenColor Name="gs_glass_pen">
			<Description><![CDATA["Glass Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</PenColor>
		<FillPattern Name="gs_fillSash">
			<Description><![CDATA["Sash Fill Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_penSash_fg">
			<Description><![CDATA["Sash Fill Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_penSash_bg">
			<Description><![CDATA["Sash Fill Background Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<FillPattern Name="gs_glass_fill">
			<Description><![CDATA["glass fill"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_glass_fill_pen">
			<Description><![CDATA["glass fill pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_glass_fill_bpen">
			<Description><![CDATA["glass fill backgroundpen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>

		<!-- gs_3D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_3D_representation">
			<Description><![CDATA["3D Representation"]]></Description>
			<Fix/>
		</Title>
		<Integer Name="lod3D">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Integer>
		<PenColor Name="gs_frame_pen">
			<Description><![CDATA["Frame Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</PenColor>
		<Boolean Name="bOplines3d">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Boolean>
		<Integer Name="opLineType3dIn">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Integer>
		<Integer Name="opLineType3dOut">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Integer>
		<Integer Name="gs_opline_style_m">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Integer>
		<PenColor Name="gs_opLinePen">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</PenColor>
		<Integer Name="sh_unID">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Integer>
	</Parameters>
</ParamSection>

<Ancestry SectVersion="1" SectionFlags="0" SubIdent="0" Template="false">
	<MainGUID>F938E33A-329D-4A36-BE3E-85E126820996</MainGUID>
	<MainGUID>103E8D2C-8230-42E1-9597-46F84CCE28C0</MainGUID>
	<MainGUID>6ACDA889-69B2-4EC5-936C-CB1DA7032A92</MainGUID>
	<MainGUID>F6AE9687-2BC7-4D47-88C9-8F793E1DE2D6</MainGUID>
	<MainGUID>4ABD0A6E-634B-4931-B3AA-9BEE01F35CDF</MainGUID>
</Ancestry>

<CalledMacros SectVersion="2" SectionFlags="0" SubIdent="0">
	<Macro>
		<MName><![CDATA["OpeningLines"]]></MName>
		<MainGUID>5EFCD68D-4776-4487-88E3-48DE50840CC3</MainGUID>
	</Macro>
</CalledMacros>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_2D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_2D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_1D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
EPS = 0.00001
]]>
</Script_1D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_PR SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_PR>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_UI SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_UI>

<Copyright SectVersion="1" SectionFlags="0" SubIdent="0">
	<Author>GRAPHISOFT</Author>
	<License>
		<Type>CC BY-ND</Type>
		<Version>3.0</Version>
	</License>
</Copyright>

</Symbol>
