<?xml version="1.0" encoding="UTF-8"?>
<Symbol IsArchivable="true" IsPlaceable="false" MainGUID="842042EF-1396-4BDE-82C8-BA46B2D57950" MigrationValue="Normal" Owner="1196638531" Signature="1196644685" Version="38">
<Ancestry SectVersion="1" SectionFlags="0" SubIdent="0" Template="false">
	<MainGUID>F938E33A-329D-4A36-BE3E-85E126820996</MainGUID>
	<MainGUID>103E8D2C-8230-42E1-9597-46F84CCE28C0</MainGUID>
	<MainGUID>C76BC373-89AE-4368-A490-BB2485825242</MainGUID>
</Ancestry>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_3D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
if gs_detlevel_3D_m = 0 then end

if NOT(gs_shadow) then shadow off

if ABS(completeTable_unID - 1) < EPS then
	unID = 200
else
	unID = completeTable_unID
endif

! ======================================================================
! TableTop
! ======================================================================

call "tableTops_m" parameters all	tableTopAngle		= tableTopAngle,
									tableTops_unID		= unID,
									returned_parameters tableTops_unID
unID = tableTops_unID



! ======================================================================
! Chair
! ======================================================================

if (bPartOfLayout or bPartOfWsSolo) and bChair then
	add deskChairOrigPosX, deskChairOrigPosY, 0

	if NOT(bCalledAsExtension) then
		add tableChairDistX * (iTableTopType = TTOP_STRAIGHT) + xPosDeskChair * (iTableTopType = TTOP_L_SHAPED), tableChairDistY, 0
	else
		add extraDeskChairDistX, extraDeskChairDistY, 0
	endif
	rotz -chairAngle
	add -chairWidth / 2, -chairDepth / 2, 0
	call "officeChair_m" parameters all	a						= chairWidth,
										b						= chairDepth,
										zzyzx					= chairHeight,
										bPartOfLayout			= 1,
										gs_back_mat2			= gs_frame_mat,
										gs_back_mat				= gs_seat_mat,
										gs_arm_mat				= gs_frame_mat,
										gs_headrest_mat			= gs_seat_mat,
										gs_legCylind_mat		= gs_frame_mat,
										gs_legStar_mat			= gs_frame_mat,
										rollmat					= gs_frame_mat,
										gs_resol				= gs_leg_resol,
										officeChair_unID		= unID,
										returned_parameters officeChair_unID
	unID = officeChair_unID
	del 3

	if bEnableChairHsEditing then
		if NOT(bCalledAsExtension) then
			if iTableTopType = TTOP_L_SHAPED then
				hotspot 0, tableChairDistY, 0, unID, xPosDeskChair, 1 + 128, tableChairDistX:		unID = unID + 1
				hotspot -1, tableChairDistY, 0, unID, xPosDeskChair, 3 + 128, tableChairDistX:		unID = unID + 1
				hotspot xPosDeskChair, tableChairDistY, 0, unID, xPosDeskChair, 2, tableChairDistX:	unID = unID + 1

				hotspot xPosDeskChair, 0, 0, unID, tableChairDistY, 1 + 128:						unID = unID + 1
				hotspot xPosDeskChair, -1, 0, unID, tableChairDistY, 3 + 128:						unID = unID + 1
				hotspot xPosDeskChair, tableChairDistY, 0, unID, tableChairDistY, 2:				unID = unID + 1
			endif
			if iTableTopType = TTOP_STRAIGHT then
				hotspot 0, tableChairDistY, 0, unID, tableChairDistX, 1 + 128:			unID = unID + 1
				hotspot -1, tableChairDistY, 0, unID, tableChairDistX, 3 + 128:			unID = unID + 1
				hotspot tableChairDistX, tableChairDistY, 0, unID, tableChairDistX, 2:	unID = unID + 1

				hotspot tableChairDistX, 0, 0, unID, tableChairDistY, 1 + 128:			unID = unID + 1
				hotspot tableChairDistX, -1, 0, unID, tableChairDistY, 3 + 128:			unID = unID + 1
				hotspot tableChairDistX, tableChairDistY, 0, unID, tableChairDistY, 2:	unID = unID + 1
			endif
		else
			hotspot extraDeskChairDistX, 0, 0, unID, extraDeskChairDistY, 1 + 128:				unID = unID + 1
			hotspot extraDeskChairDistX, -1, 0, unID, extraDeskChairDistY, 3 + 128:				unID = unID + 1
			hotspot extraDeskChairDistX, extraDeskChairDistY, 0, unID, extraDeskChairDistY, 2:	unID = unID + 1
		endif
	endif

	del 1
endif



! ======================================================================
! Computer
! ======================================================================

if (bPartOfLayout or bPartOfWsSolo) and bComputer and NOT(bCalledAsExtension) then
	add computerOrigPosX, computerOrigPosY, zzyzx
	rotz -chairAngle + 180
	mulx 1 - 2 * (SYMB_MIRRORED)
	mulx 1 - 2 * (bMirroredComputer)

	if bShowKeyboard then
		add -0.47 / 2, 0, 0
		call "keyboard_m" parameters all	a					= 0.47,
											b					= 0.17,
											zzyzx				= 0.02,
											gs_detlevel_2D_m	= 1,
											bButtonText			= 0
		del 1
	endif

	if bShowMonitor then
		add -0.4 / 2, 0.17 + 0.05, 0
		call "lcdMonitor_m" parameters all	a					= 0.4,
											b					= 0.13,
											zzyzx				= 0.35,
											gs_resol			= gs_leg_resol,
											bPartOfLayout		= 1,
											iMonitorType		= 1,
											pic					= 0
		del 1
	endif

	del 4
endif



! ======================================================================
! Legs
! ======================================================================

bFullPanel = 0		! Full panel for type 5

if gs_leg_type_m = 1 then
	legDistFromEdge = 0.06
	leg_a = 0.025
	leg_h = zzyzx - topThk - 0.01
endif
if gs_leg_type_m = 2 then
	legDistFromEdge = 0.06
	leg_a = 0.04
	leg_h = zzyzx - topThk - 0.01
endif
if gs_leg_type_m = 3 then
	legDistFromEdge = 0.035 + 0.06
	leg_h = zzyzx - topThk - 0.09
endif
if gs_leg_type_m = 4 then
	legDistFromEdge = 0.06
	leg_h = zzyzx - topThk
endif
if gs_leg_type_m = 5 then
	legDistFromEdge = 0.015
	leg_h = zzyzx - topThk
endif
if gs_leg_type_m = 6 then
	legDistFromEdge = 0.025
	leg_h = zzyzx - topThk
endif

leg_b = 0.04 * (gs_leg_type_m = 2)

if iTableTopType = TTOP_L_SHAPED then gosub "legsForLShapedDesk"
if iTableTopType = TTOP_STRAIGHT then gosub "legsForStraightDesk"



! ======================================================================
! Front Panel
! ======================================================================

frontPanelThk = 0.02
if iTableTopType = TTOP_L_SHAPED then
	frontPanelLengthDiffMod = TAN(tableTopAngle / 2)
else
	frontPanelLengthDiffMod = 1
endif

if gs_leg_type_m = 1 then
	frontPanelLengthDiffLeft = leg_a + legDistFromEdge / frontPanelLengthDiffMod
	frontPanelLengthDiffRight = leg_a + legDistFromEdge
	fronPanelPos = 0.06 - frontPanelThk / 2
endif
if gs_leg_type_m = 2 then
	frontPanelLengthDiffLeft = leg_a / 2 + legDistFromEdge / frontPanelLengthDiffMod
	frontPanelLengthDiffRight = leg_a / 2 + legDistFromEdge
	fronPanelPos = 0.06 - frontPanelThk / 2
endif
if gs_leg_type_m = 3 then
	frontPanelLengthDiffLeft = 0.06 / frontPanelLengthDiffMod
	frontPanelLengthDiffRight = 0.06
	fronPanelPos = 0.05 - frontPanelThk
endif
if gs_leg_type_m = 4 then
	frontPanelLengthDiffLeft = 0.045 / frontPanelLengthDiffMod
	frontPanelLengthDiffRight = 0.045
	fronPanelPos = 0.08
endif
if gs_leg_type_m = 5 then
	frontPanelLengthDiffLeft = 0.03 / frontPanelLengthDiffMod
	frontPanelLengthDiffRight = 0.03
	fronPanelPos = 0.005
endif
if gs_leg_type_m = 6 then
	frontPanelLengthDiffLeft = 0.05 / frontPanelLengthDiffMod
	frontPanelLengthDiffRight = 0.05
	fronPanelPos = 0.005
endif

if gs_bFrontPanel then
	cabinetDiff = (gs_officeCab_width - frontPanelLengthDiffRight) * bOfficeCab1 * NOT(bMirroredCabPos)
	cabinetDiff2 = (gs_officeCab_width_2 - frontPanelLengthDiffLeft) * bOfficeCab2

	material gs_frontPanel_mat
	add -tableLength1 / 2 * bCalledAsExtension, fronPanelPos, gs_frontPanelTop - gs_frontPanelHeight
	prism_ 5, gs_frontPanelHeight,
		frontPanelLengthDiffLeft + cabinetDiff2, 0, 15,
		tableLength1 - frontPanelLengthDiffRight - cabinetDiff, 0, 15,
		tableLength1 - frontPanelLengthDiffRight - cabinetDiff, frontPanelThk, 15,
		frontPanelLengthDiffLeft + cabinetDiff2, frontPanelThk, 15,
		frontPanelLengthDiffLeft + cabinetDiff2, 0, -1
	del 1
endif



! -----------------------------------------------------------------------------
! Office Cabinet
! -----------------------------------------------------------------------------

if (bOfficeCab1 or bOfficeCab2) then gosub "officeCabinet"

! ======================================================================
completeTable_unID = unID
end completeTable_unID
! ======================================================================



"legsForLShapedDesk":
	if gs_leg_type_m = 1 or gs_leg_type_m = 2 then
		rotz tableTopAngle - 90
		add legDistFromEdge, legDistFromEdge / TAN(tableTopAngle / 2), 0
		gosub "leg"
		del 2

		add tableLength1 - legDistFromEdge, legDistFromEdge, 0
		if (NOT(gs_bOfficeCab) and NOT(bMirroredCabPos)) or bMirroredCabPos then gosub "leg"
		addy tableDepth1 - legDistFromEdge * 2
		if (NOT(gs_bOfficeCab) and NOT(bMirroredCabPos)) or bMirroredCabPos then gosub "leg"
		del 2

		rotz tableTopAngle
		add tableLength2 - legDistFromEdge, -legDistFromEdge, 0
		if (NOT(gs_bOfficeCab) and (bMirroredCabPos)) or NOT(bMirroredCabPos) then gosub "leg"
		addy -tableDepth2 + legDistFromEdge * 2
		if (NOT(gs_bOfficeCab) and (bMirroredCabPos)) or NOT(bMirroredCabPos) then gosub "leg"
		del 3
	endif
	if gs_leg_type_m = 3 then
		leg_a = max(0.25, (tableDepth1 - 0.1) / COS(tableTopAngle - 90))
		rotz tableTopAngle - 90
		add legDistFromEdge, tableDepth1 / 2 / COS(tableTopAngle - 90) - legDistFromEdge * TAN(tableTopAngle - 90), 0
		gosub "leg"
		del 2

		leg_a = max(0.25, tableDepth1 - 0.1)
		add tableLength1 - legDistFromEdge, tableDepth1 / 2, 0
		if (NOT(gs_bOfficeCab) and NOT(bMirroredCabPos)) or bMirroredCabPos then gosub "leg"
		del 1

		leg_a = max(0.25, tableDepth2 - 0.1)
		rotz tableTopAngle
		add tableLength2 - legDistFromEdge, -tableDepth2 / 2, 0
		if (NOT(gs_bOfficeCab) and (bMirroredCabPos)) or NOT(bMirroredCabPos) then gosub "leg"
		del 2
	endif
	if gs_leg_type_m = 4 then
		leg_a = (tableDepth1 - 0.2) / COS(tableTopAngle - 90)
		rotz tableTopAngle - 90
		add legDistFromEdge, tableDepth1 / 2 / COS(tableTopAngle - 90) - legDistFromEdge * TAN(tableTopAngle - 90), 0
		gosub "leg"
		del 2

		leg_a = tableDepth1 - 0.2
		add tableLength1 - legDistFromEdge, tableDepth1 / 2, 0
		if (NOT(gs_bOfficeCab) and NOT(bMirroredCabPos)) or bMirroredCabPos then gosub "leg"
		del 1

		leg_a = max(0.05, tableDepth2-0.2)
		rotz tableTopAngle
		add tableLength2 - legDistFromEdge, -tableDepth2 / 2, 0
		if (NOT(gs_bOfficeCab) and (bMirroredCabPos)) or NOT(bMirroredCabPos) then gosub "leg"
		del 2
	endif
	if gs_leg_type_m = 5 then
		leg_a = tableDepth1 / COS(tableTopAngle - 90)
		rotz tableTopAngle - 90
		add legDistFromEdge, leg_a / 2, 0
		gosub "leg"
		del 2

		leg_a = tableDepth1
		add tableLength1 - legDistFromEdge, leg_a / 2, 0
		if (NOT(gs_bOfficeCab) and NOT(bMirroredCabPos)) or bMirroredCabPos then gosub "leg"
		del 1

		leg_a = tableDepth2
		bFullPanel = 1
		rotz tableTopAngle
		add tableLength2 - legDistFromEdge, -leg_a / 2, 0
		if (NOT(gs_bOfficeCab) and (bMirroredCabPos)) or NOT(bMirroredCabPos) then gosub "leg"
		del 2
	endif
	if gs_leg_type_m = 6 then
		leg_a = tableDepth1 / COS(tableTopAngle - 90)
		rotz tableTopAngle - 90
		add legDistFromEdge, leg_a / 2, 0
		gosub "leg"
		del 2

		leg_a = tableDepth1
		add tableLength1 - legDistFromEdge, leg_a / 2, 0
		if (NOT(gs_bOfficeCab) and NOT(bMirroredCabPos)) or bMirroredCabPos then gosub "leg"
		del 1

		leg_a = tableDepth2
		rotz tableTopAngle
		add tableLength2 - legDistFromEdge, -leg_a / 2, 0
		if (NOT(gs_bOfficeCab) and (bMirroredCabPos)) or NOT(bMirroredCabPos) then gosub "leg"
		del 2
	endif

return

"legsForStraightDesk":
	if gs_leg_type_m = 3 then leg_a = max(0.25, tableDepth1 - 0.1)
	if gs_leg_type_m = 4 then leg_a = tableDepth1 - 0.2
	if gs_leg_type_m = 5 then leg_a = tableDepth1
	if gs_leg_type_m = 6 then leg_a = tableDepth1

	if gs_leg_type_m < 3 then
		legYpos = legDistFromEdge
	else
		legYpos = tableDepth1 / 2
	endif
	add legDistFromEdge + (tableLength1 - legDistFromEdge * 2) * bOfficeCab2 - tableLength1 / 2 * bCalledAsExtension, legYpos, 0
	for legHor = 1 to NOT(bOfficeCab2) + NOT(bOfficeCab1)
		for legVer = 1 to 1 + (gs_leg_type_m < 3)
			gosub "leg"
		addy tableDepth1 - legDistFromEdge * 2
		next legVer
		del 1 + (gs_leg_type_m < 3)
	addx tableLength1 - legDistFromEdge * 2
	next legHor
	del NOT(bOfficeCab2) + NOT(bOfficeCab1)
	del 1
return

"officeCabinet":
	if (iTableTopType = TTOP_L_SHAPED and bMirroredCabPos) then
		add tableDepth2 - 0.015, tableLength2 - cabWidth1, 0
		rotz 90
		call "OfficeCabinet01_m" parameters all	a		= cabWidth1,
									b					= tableDepth2 - 0.015,
									gs_resol			= gs_leg_resol,
									bPartOfLayout		= 1,
									bTopCover			= 0,
									drawer2d			= 0,
									iCabIndex			= 1,
									gs_knobHorPos		= gs_knobHorPos,
									bKnobNoneType		= bKnobNoneType,
									officeCab01_unID	= unID,
									returned_parameters officeCab01_unID
		unID = officeCab01_unID
		del 2
	else
		add -tableLength1 / 2 * bCalledAsExtension, 0, 0

		for ii = 1 + NOT(bOfficeCab1) to 1 + bOfficeCab2
			add tableLength1 * (ii = 1) + cabWidth2 * (ii = 2), tableDepth1 - 0.015, 0
			rotz 180
			if NOT(bPartOfLayout or bPartOfWsSolo) then
				call "OfficeCabinet01_m" parameters all	a		= cabWidth1 * (ii = 1) + cabWidth2 * (ii = 2),
											b					= tableDepth1 - 0.015,
											gs_resol			= gs_leg_resol,
											bPartOfLayout		= 0,
											bTopCover			= 0,
											drawer2d			= 0,
											iCabIndex			= ii,
											bKnobNoneType		= bKnobNoneType,
											officeCab01_unID	= unID,
											returned_parameters officeCab01_unID
				unID = officeCab01_unID
			else
				call "OfficeCabinet01_m" parameters all	a		= cabWidth1 * (ii = 1) + cabWidth2 * (ii = 2),
											b					= tableDepth1 - 0.015,
											gs_resol			= gs_leg_resol,
											bPartOfLayout		= 1,
											bTopCover			= 0,
											drawer2d			= 0,
											iCabIndex			= ii,
											gs_knobHorPos		= gs_knobHorPos,
											drawer_num_2		= drawer_num,
											drawerThk2			= drawerThk,
											gs_drawerScheme_2	= gs_drawerScheme,
											gs_drawerScheme_m_2	= gs_drawerScheme_m,
											gs_topDrawerH_2		= gs_topDrawerH,
											gs_bottomDrawerH_2	= gs_bottomDrawerH,
											gs_drawerH_1_2		= gs_drawerH_1,
											gs_drawerH_2_2		= gs_drawerH_1,
											gs_drawerH_3_2		= gs_drawerH_1,
											gs_drawerH_4_2		= gs_drawerH_1,
											gs_drawerH_5_2		= gs_drawerH_1,
											gs_drawerH_6_2		= gs_drawerH_1,
											gs_drawerHeights_2	= gs_drawerHeights,
											gs_knobHorPos_2		= gs_knobHorPos,
											bKnobNoneType		= bKnobNoneType,
											officeCab01_unID	= unID,
											returned_parameters officeCab01_unID
				unID = officeCab01_unID
			endif

			del 2
		next ii

		del 1
	endif
return

"leg":
	call "fa_desklegtyp" parameters	all a			= leg_a,
										b			= leg_b,
										leg_h		= leg_h,
										gs_resol	= gs_leg_resol,
										bFullPanel	= bFullPanel
return

1000:
	roty 90
	gosub 5000
	del 1
return

5000:
	vert 0, 0, 0
	vert 1, 0, 0
	vert 0, 1, 0
	vert 0, 0, 1
	coor 2, -1, -2, -3, -4
	base
	body -1
return

]]>
</Script_3D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_2D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
if ABS(completeTable_unID - 1) < EPS then
	unID = 100
else
	unID = completeTable_unID
endif

! ======================================================================
! SCALE
! ======================================================================

call "2dDetailLevel" parameters gs_detlevel_2D_m = gs_detlevel_2D_m,
				returned_parameters det2D


! ======================================================================
! TableTop
! ======================================================================

drawindex 40
call "tableTops_m" parameters all	tableTopAngle		= tableTopAngle,
									tableTops_unID		= unID,
									returned_parameters tableTops_unID
unID = tableTops_unID



! ======================================================================
! Chair
! ======================================================================

if (bPartOfLayout or bPartOfWsSolo) and bChair then
	add2 deskChairOrigPosX, deskChairOrigPosY

	if NOT(bCalledAsExtension) then
		add2 tableChairDistX * (iTableTopType = TTOP_STRAIGHT) + xPosDeskChair * (iTableTopType = TTOP_L_SHAPED), tableChairDistY
	else
		add2 extraDeskChairDistX, extraDeskChairDistY
	endif
	rot2 -chairAngle
	add2 -chairWidth / 2, -chairDepth / 2

	call "officeChair_m" parameters all	a					= chairWidth,
										b					= chairDepth,
										zzyzx				= chairHeight,
										bPartOfLayout		= 1,
										gs_back_mat2		= gs_frame_mat,
										gs_back_mat			= gs_seat_mat,
										gs_arm_mat			= gs_frame_mat,
										gs_headrest_mat		= gs_seat_mat,
										gs_legCylind_mat	= gs_frame_mat,
										gs_legStar_mat		= gs_frame_mat,
										rollmat				= gs_frame_mat,
										officeChair_unID	= unID,
										returned_parameters officeChair_unID
	unID = officeChair_unID

	del 3

	if bEnableChairHsEditing then
		if NOT(bCalledAsExtension) then
			if iTableTopType = TTOP_L_SHAPED then
				hotspot2 0, tableChairDistY, unID, xPosDeskChair, 1 + 128, tableChairDistX:			unID = unID + 1
				hotspot2 -1, tableChairDistY, unID, xPosDeskChair, 3 + 128, tableChairDistX:		unID = unID + 1
				hotspot2 xPosDeskChair, tableChairDistY, unID, xPosDeskChair, 2, tableChairDistX:	unID = unID + 1

				hotspot2 xPosDeskChair, 0, unID, tableChairDistY, 1 + 128:							unID = unID + 1
				hotspot2 xPosDeskChair, -1, unID, tableChairDistY, 3 + 128:							unID = unID + 1
				hotspot2 xPosDeskChair, tableChairDistY, unID, tableChairDistY, 2:					unID = unID + 1
			endif
			if iTableTopType = TTOP_STRAIGHT then
				hotspot2 0, tableChairDistY, unID, tableChairDistX, 1 + 128:			unID = unID + 1
				hotspot2 -1, tableChairDistY, unID, tableChairDistX, 3 + 128:			unID = unID + 1
				hotspot2 tableChairDistX, tableChairDistY, unID, tableChairDistX, 2:	unID = unID + 1

				hotspot2 tableChairDistX, 0, unID, tableChairDistY, 1 + 128:			unID = unID + 1
				hotspot2 tableChairDistX, -1, unID, tableChairDistY, 3 + 128:			unID = unID + 1
				hotspot2 tableChairDistX, tableChairDistY, unID, tableChairDistY, 2:	unID = unID + 1
			endif
		else
			hotspot2 extraDeskChairDistX, 0, unID, extraDeskChairDistY, 1 + 128:				unID = unID + 1
			hotspot2 extraDeskChairDistX, -1, unID, extraDeskChairDistY, 3 + 128:				unID = unID + 1
			hotspot2 extraDeskChairDistX, extraDeskChairDistY, unID, extraDeskChairDistY, 2:	unID = unID + 1
		endif
	endif

	del 1
endif



! ======================================================================
! Computer
! ======================================================================

if (bPartOfLayout or bPartOfWsSolo) and NOT(bCalledAsExtension) then
	drawindex 50

	if (det2D = 2 or det2D = 3) and bComputer then
		add2 computerOrigPosX, computerOrigPosY
		rot2 -chairAngle + 180
		mul2 1 - 2 * (SYMB_MIRRORED), 1
		mul2 1 - 2 * (bMirroredComputer), 1

		if bShowKeyboard then
			add2 -0.47 / 2, 0
			call "keyboard_m" parameters all	a					= 0.47,
												b					= 0.17,
												zzyzx				= 0.02,
												gs_detlevel_2D_m	= 1,
												bButtonText			= 0
			del 1
		endif

		if bShowMonitor then
			add2 -0.4 / 2, 0.17 + 0.05
			call "lcdMonitor_m" parameters all	a					= 0.4,
												b					= 0.13,
												zzyzx				= 0.35,
												bPartOfLayout		= 1,
												iMonitorType		= 1,
												pic					= 0
			del 1
		endif

		del 4
	endif
endif



! ======================================================================
! Office Cabinet
! ======================================================================

drawindex 50

if (det2D = 3) and (bOfficeCab1 or bOfficeCab2) then
	gosub "officeCabinet"
endif

! ======================================================================
completeTable_unID = unID
end completeTable_unID
! ======================================================================



"officeCabinet":
	if (iTableTopType = TTOP_L_SHAPED and bMirroredCabPos) then
		add2 tableDepth2 - 0.015, tableLength2
		mul2 1, -1
		rot2 90
		call "OfficeCabinet01_m" parameters all	a		= cabWidth1,
									b					= tableDepth2 - 0.015,
									bPartOfLayout		= 1,
									bTopCover			= 0,
									drawer2d			= 0,
									iCabIndex			= 1,
									gs_knobHorPos		= gs_knobHorPos,
									officeCab01_unID	= unID,
									returned_parameters officeCab01_unID
		unID = officeCab01_unID
		del 3
	else
		add2 -tableLength1 / 2 * bCalledAsExtension, 0

		for ii = 1 + NOT(bOfficeCab1) to 1 + bOfficeCab2
			add2 tableLength1 * (ii = 1), tableDepth1 - 0.015
			mul2 1 - 2 * (ii = 2), 1
			rot2 180
			if NOT(bPartOfLayout or bPartOfWsSolo) then
				call "OfficeCabinet01_m" parameters all	a		= cabWidth1 * (ii = 1) + cabWidth2 * (ii = 2),
											b					= tableDepth1 - 0.015,
											bPartOfLayout		= 1,
											bTopCover			= 0,
											drawer2d			= 0,
											iCabIndex			= ii,
											gs_knobHorPos		= gs_knobHorPos,
											officeCab01_unID	= unID,
											returned_parameters officeCab01_unID
				unID = officeCab01_unID
			else
				call "OfficeCabinet01_m" parameters all	a		= cabWidth1 * (ii = 1) + cabWidth2 * (ii = 2),
											b					= tableDepth1 - 0.015,
											bPartOfLayout		= 1,
											bTopCover			= 0,
											drawer2d			= 0,
											iCabIndex			= ii,
											gs_knobHorPos		= gs_knobHorPos,
											drawer_num_2		= drawer_num,
											drawerThk2			= drawerThk,
											gs_drawerScheme_2	= gs_drawerScheme,
											gs_drawerScheme_m_2	= gs_drawerScheme_m,
											gs_topDrawerH_2		= gs_topDrawerH,
											gs_bottomDrawerH_2	= gs_bottomDrawerH,
											gs_drawerH_1_2		= gs_drawerH_1,
											gs_drawerH_2_2		= gs_drawerH_1,
											gs_drawerH_3_2		= gs_drawerH_1,
											gs_drawerH_4_2		= gs_drawerH_1,
											gs_drawerH_5_2		= gs_drawerH_1,
											gs_drawerH_6_2		= gs_drawerH_1,
											gs_drawerHeights_2	= gs_drawerHeights,
											gs_knobHorPos_2		= gs_knobHorPos,
											officeCab01_unID	= unID,
											returned_parameters officeCab01_unID
				unID = officeCab01_unID
			endif

			del 3
		next ii

		del 1
	endif
return



]]>
</Script_2D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_1D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
EPS = 0.0001

CABINET				= 0
SIMPLE_DESK			= 1
LAYOUT_ISLAND		= 2
LAYOUT_LINEAR		= 3
WS_SOLO				= 4

TTOP_L_SHAPED		= 1
TTOP_STRAIGHT		= 2
TTOP_ARCHED_45		= 3
TTOP_ARCHED_60		= 4
TTOP_ARCHED_90		= 5
TTOP_ARCHED_135		= 6
TTOP_ARCHED_180		= 7
TTOP_ARCHED_360		= 8
TTOP_ARCHED_C_TOP	= 9
TTOP_ARCHED_P_TOP	= 10
TTOP_RECT			= 11

dim	stDeskAngle[2]
	stDeskAngle[1] = `90°`
	stDeskAngle[2] = `120°`

dim stOfficeCab[4]
	stOfficeCab[1] = `Нет`
	stOfficeCab[2] = `Cо Стороны 1`
	stOfficeCab[3] = `Cо Стороны 2`
	stOfficeCab[4] = `Обе Стороны`

OFFICECAB_NONE		= 0
OFFICECAB_SIDE1		= 1
OFFICECAB_SIDE2		= 2
OFFICECAB_BOTH		= 3

STRAIGHT			= 1
ROUNDED				= 2

bOfficeCab1				= gs_bOfficeCab * (iTableTopType = TTOP_L_SHAPED) + (gs_officeCab_m = OFFICECAB_SIDE1 or gs_officeCab_m = OFFICECAB_BOTH) * (iTableTopType = TTOP_STRAIGHT)
bOfficeCab2				= (gs_officeCab_m = OFFICECAB_SIDE2 or gs_officeCab_m = OFFICECAB_BOTH) * (iTableTopType = TTOP_STRAIGHT)
bOfficeCabForExtDesk1	= (iExtraDeskCab = OFFICECAB_SIDE1 or iExtraDeskCab = OFFICECAB_BOTH)
bOfficeCabForExtDesk2	= (iExtraDeskCab = OFFICECAB_SIDE2 or iExtraDeskCab = OFFICECAB_BOTH)

if iExtraDeskCab = 3 then
	maxExtDeskCabWidth = MIN(gs_officeCab_width, (extraDeskWidth - 0.2) / 2)
else
	maxExtDeskCabWidth = MIN(gs_officeCab_width, extraDeskWidth - 0.2)
endif

if bCalledAsExtension then
	cabWidth1 = maxExtDeskCabWidth
	cabWidth2 = maxExtDeskCabWidth
else
	if bPartOfLayout or bPartOfWsSolo then
		cabWidth1 = gs_officeCab_width
		cabWidth2 = gs_officeCab_width
	else
		cabWidth1 = gs_officeCab_width
		cabWidth2 = gs_officeCab_width_2
	endif
endif

tableTopAngle		= iDeskAngle

CHAIR_POS_STRAIGHT	= 1
CHAIR_POS_L_CORNER	= 2
CHAIR_POS_L_SIDE	= 3

if iTableTopType = TTOP_STRAIGHT and bCalledAsExtension then
	tableLength1	= extraDeskWidth
	tableDepth1		= extraDeskDepth
endif

bShowKeyboard		= 1
bShowMonitor		= 1
maxComputerOffset	= 0.2
keyboarDistFromEdge	= 0.05
minDeskDepth		= 0.4 + keyboarDistFromEdge

if iTableTopType = TTOP_L_SHAPED then
	innerCornerDist	= SQR(tableDepth1 ** 2 + innerCornerPos ** 2)
	if iDeskAngle = 90 then
		if innerCornerDist < 0.6 + keyboarDistFromEdge then bShowKeyboard	= 0
		if innerCornerDist < 0.35 + keyboarDistFromEdge then bShowMonitor	= 0
	else
		if innerCornerDist < 0.52 + keyboarDistFromEdge then bShowKeyboard	= 0
		if innerCornerDist < 0.27 + keyboarDistFromEdge then bShowMonitor	= 0
	endif
else
	if tableDepth1 < 0.4 then bShowKeyboard	= 0
endif

computerPosModX		= 0
computerPosModY		= 0
computerPosModYY	= 0
computerPosModXX	= 0
computerPosModXX2	= 0
if tableDepth2 < minDeskDepth then
	computerPosModX		= minDeskDepth - tableDepth2
	if bShowMonitor then
		if (tableDepth2 - minDeskDepth) < -COS(iDeskAngle / 2) * maxComputerOffset then
			computerPosModYY	= -COS(iDeskAngle / 2) * maxComputerOffset
			computerPosModXX2	= (tableDepth2 - minDeskDepth) - computerPosModYY * TAN(iDeskAngle / 2)\
								- ((tableDepth2 - minDeskDepth) + COS(iDeskAngle / 2) * maxComputerOffset) / SIN(iDeskAngle / 2)
		else
			computerPosModYY	= (tableDepth2 - minDeskDepth)
			computerPosModXX2	= computerPosModYY - computerPosModYY * TAN(iDeskAngle / 2)
		endif
	endif
endif

if tableDepth1 < minDeskDepth then
	computerPosModY		= minDeskDepth - tableDepth1
	if bShowMonitor then
		if (tableDepth1 - minDeskDepth) < -COS(iDeskAngle / 2) * maxComputerOffset then
			computerPosModXX	= -SIN(iDeskAngle / 2) * maxComputerOffset
			computerPosModXX2	= ((tableDepth1 - minDeskDepth) + COS(iDeskAngle / 2) * maxComputerOffset) / TAN(iDeskAngle / 2)
		else
			computerPosModXX	= (tableDepth1 - minDeskDepth) * TAN(iDeskAngle / 2)
			computerPosModXX2	= 0
		endif
	endif
endif

if chairPos = CHAIR_POS_STRAIGHT then
	if NOT(bCalledAsExtension) then
		deskChairOrigPosX	= tableLength1 / 2
		deskChairOrigPosY	= tableDepth1
		chairAngle			= 0

		computerOrigPosX	= tableLength1 / 2
		computerOrigPosY	= tableDepth1 - keyboarDistFromEdge + computerPosModY
	else
		deskChairOrigPosX	= 0
		deskChairOrigPosY	= tableDepth1
		chairAngle			= 0

		computerOrigPosX	= 0
		computerOrigPosY	= tableDepth1 - keyboarDistFromEdge + computerPosModY
	endif
endif
if chairPos = CHAIR_POS_L_CORNER then
	deskChairOrigPosX	= innerCornerPos
	deskChairOrigPosY	= tableDepth1
	chairAngle			= (90 - iDeskAngle / 2)

	if bShowKeyboard then
		computerOrigPosX	= innerCornerPos - keyboarDistFromEdge * COS(iDeskAngle / 2) + computerPosModX + computerPosModXX + computerPosModXX2 * (iDeskAngle = 120)
		computerOrigPosY	= tableDepth1 - keyboarDistFromEdge * SIN(iDeskAngle / 2) + computerPosModY + computerPosModYY
	else
		computerOrigPosX	= (0.35 + 0.4 / 2 / TAN(iDeskAngle / 2) + 0.03 / TAN(iDeskAngle / 2)) * COS(iDeskAngle / 2)
		computerOrigPosY	= (0.35 + 0.4 / 2 / TAN(iDeskAngle / 2) + 0.03 / TAN(iDeskAngle / 2)) * SIN(iDeskAngle / 2)
	endif
endif
if chairPos = CHAIR_POS_L_SIDE then
	deskChairOrigPosX	= tableLength1 - (tableLength1 - tableDepth2) / 2
	deskChairOrigPosY	= tableDepth1

	computerOrigPosX	= tableLength1 - (tableLength1 - tableDepth2) / 2
	computerOrigPosY	= tableDepth1 - keyboarDistFromEdge + computerPosModY
	chairAngle			= 0
endif

betaForChairPos = 0
if iTableTopType = TTOP_L_SHAPED and ABS(tableChairDistX) > EPS and ABS(tableChairDistY) > EPS then
	alphaForChairPos = ATN(COS(tableTopAngle - 90) / (tableChairDistY / tableChairDistX - SIN(tableTopAngle - 90)))
	betaForChairPos = tableTopAngle - 90 - alphaForChairPos
endif

extraDeskChairDistX	= tableLength1 / 2 - cabWidth1 * bOfficeCabForExtDesk1 - (tableLength1 - cabWidth1 * bOfficeCabForExtDesk1 - cabWidth2 * bOfficeCabForExtDesk2) / 2


]]>
</Script_1D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_UI SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_UI>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_VL SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
! ======================================================================
! 2D Detail Level
! ======================================================================

if bPartOfLayout or bPartOfWsSolo then
	call "2dDetailLevel" parameters	gs_detlevel_2D		= gs_detlevel_2D,
									gs_detlevel_2D_m	= gs_detlevel_2D_m,
									enable2dDetLevels	= 2 + 4 + 8 + 16 + 32
endif



! ======================================================================
! TableTop
! ======================================================================

call "tableTops_m" parameters all	tableTopAngle			= tableTopAngle,
									enableTableTopTypes		= 2 + 4,
									bOfficeCab1 			= bOfficeCab1,
									bOfficeCab2 			= bOfficeCab2

if NOT(bPartOfLayout) and NOT(bPartOfWsSolo) and iTableTopType = TTOP_L_SHAPED then
	values "deskAngle" stDeskAngle
	values "iDeskAngle" 90, 120

	if GLOB_MODPAR_NAME = "deskAngle" then
		if deskAngle = stDeskAngle[1] then iDeskAngle = 90
		if deskAngle = stDeskAngle[2] then iDeskAngle = 120
		parameters iDeskAngle = iDeskAngle
	else
		if iDeskAngle = 90 then deskAngle = stDeskAngle[1]
		if iDeskAngle = 120 then deskAngle = stDeskAngle[2]
		parameters deskAngle = deskAngle
	endif
endif

if bPartOfLayout or bPartOfWsSolo then
	values "tableTopHeight" range[0.1, )
endif

if bCalledAsExtension then
	minExtDeskCabWidth1	= 0.2 * bOfficeCabForExtDesk1 * bShowCabParams
	minExtDeskCabWidth2	= 0.2 * bOfficeCabForExtDesk2 * bShowCabParams
	minExtDeskWidth		= 0.2 + minExtDeskCabWidth1 + minExtDeskCabWidth2
	minExtDeskDepth		= 0.2

	if GLOB_MODPAR_NAME = "halfExtraDeskWidth" then
		parameters extraDeskWidth = halfExtraDeskWidth * 2
	else
		parameters halfExtraDeskWidth = extraDeskWidth / 2
	endif

	values "extraDeskWidth" range[minExtDeskWidth, )
	values "extraDeskDepth" range[minExtDeskDepth, )

	lock			"halfExtraDeskWidth"
	hideparameter	"halfExtraDeskWidth"
endif



! ======================================================================
! Chair
! ======================================================================

if bPartOfLayout or bPartOfWsSolo then
	call "officeChair_m" parameters all	a						= chairWidth,
										b						= chairDepth,
										zzyzx					= chairHeight,
										bPartOfLayout			= 1,
										bEnableFullSurfaceEdit	= 0,
										gs_back_mat2			= gs_frame_mat,
										gs_back_mat				= gs_seat_mat,
										gs_arm_mat				= gs_frame_mat,
										gs_headrest_mat			= gs_seat_mat,
										gs_legCylind_mat		= gs_frame_mat,
										gs_legStar_mat			= gs_frame_mat,
										rollmat					= gs_frame_mat

	if NOT(bCalledAsExtension) then
		if iTableTopType = TTOP_L_SHAPED then
			if GLOB_MODPAR_NAME = "xPosDeskChair" then
				parameters tableChairDistX = tableChairDistY / (COS(tableTopAngle - 90) / TAN(tableTopAngle - 90 + ATN(xPosDeskChair / tableChairDistY)) + SIN(tableTopAngle - 90))
			else
				parameters xPosDeskChair = -tableChairDistY * TAN(betaForChairPos)
			endif

			if chairPos = CHAIR_POS_L_CORNER then values "tableChairDistX" range [0.1, )
			values "tableChairDistY" range [0.1, )
		else
			values "tableChairDistY" range [0, )
		endif
	else
		values "extraDeskChairDistY" range [0, )

		lock			"extraDeskChairDistX"
		hideparameter	"extraDeskChairDistX"
	endif

	values "chairWidth" range [0.3, )
	values "chairDepth" range [0.3, )
endif

if bPartOfLayout then
	lock			"xPosDeskChair"
	hideparameter	"xPosDeskChair"
endif

! ======================================================================
! Leg
! ======================================================================

if NOT(bCalledAsExtension) then call "fa_desklegtyp" parameters all	enableLegTypes			= 2 + 4 + 8 + 16 + 32 + 64,
																	bEnableLegbaseSurface	= 1

if iTableTopType = TTOP_STRAIGHT and NOT(bPartOfLayout) and NOT(bPartOfWsSolo) then
	if bOfficeCab1 and bOfficeCab2 then
		lock			"gs_leg_type",
						"gs_leg_type_m",
						"gs_leg_mat",
						"legbase_mat"

		hideparameter	"gs_leg_type",
						"gs_leg_type_m",
						"gs_leg_mat",
						"legbase_mat"
	endif
endif

if gs_detlevel_3D_m < 2 or ((gs_knob_type_m = 0 or NOT(bShowCommonCabParams)) and (gs_leg_type_m = 2 or gs_leg_type_m = 4)) then
	lock			"gs_leg_resol"
	hideparameter	"gs_leg_resol"
else
	values "gs_leg_resol" range[3,)
endif

if not(bCalledAsExtension) then
	if iTableTopType = TTOP_L_SHAPED and iInnerEdge = ROUNDED and gs_detlevel_3D_m = 2 then
		values "gs_resol" range[3,)
	else
		lock			"gs_resol"
		hideparameter	"gs_resol"
	endif
endif


! ======================================================================
! Computer
! ======================================================================

if bPartOfLayout or bPartOfWsSolo then
	if NOT(bComputer) then
		lock			"box_mat",
						"feetmat",
						"dispmat",
						"cover_mat",
						"keyb_mat"
		hideparameter	"box_mat",
						"feetmat",
						"dispmat",
						"cover_mat",
						"keyb_mat"
	endif
endif



! ======================================================================
! Front panel
! ======================================================================

if NOT(bCalledAsExtension) then
	if gs_bFrontPanel then
		values "gs_frontPanelTop" range(, zzyzx - topThk]
		values "gs_frontPanelHeight" range(, gs_frontPanelTop]
	else
		lock "gs_frontPanelHeight", "gs_frontPanelTop", "gs_frontPanel_mat"
		hideparameter "gs_frontPanelHeight", "gs_frontPanelTop", "gs_frontPanel_mat"
	endif
endif



! ======================================================================
! Office cabinet
! ======================================================================

if NOT(bCalledAsExtension) then
	if iTableTopType = TTOP_STRAIGHT then
		values "gs_officeCab" stOfficeCab
		values "gs_officeCab_m" 0, 1, 2, 3

		if GLOB_MODPAR_NAME = "gs_officeCab" then
			for iOfficeCab = 1 to vardim1(stOfficeCab)
				if gs_officeCab = stOfficeCab[iOfficeCab] then gs_officeCab_m = iOfficeCab - 1
			next iOfficeCab
			parameters gs_officeCab_m = gs_officeCab_m
		else
			gs_officeCab = stOfficeCab[gs_officeCab_m + 1]
			parameters gs_officeCab = gs_officeCab
		endif
	endif


	bShowDrawer1Params			= 0
	bShowDrawer2Params			= 0
	bShowDrawer1WidthParam		= 0
	bShowDrawer2WidthParam		= 0
	bEnable2ndDrawerCabinet		= (iTableTopType = TTOP_STRAIGHT)
	if bPartOfLayout or bPartOfWsSolo then
		if bShowCabParams or bShowExtDeskCabParams then
			bShowDrawer1Params			= 1
			bShowDrawer1WidthParam		= 1
		endif
	else
		if bOfficeCab1 then
			bShowDrawer1Params		= 1
			bShowDrawer1WidthParam	= 1
		endif
		if bOfficeCab2 then
			bShowDrawer2Params		= 1
			bShowDrawer2WidthParam	= 1
		endif
	endif

	call "OfficeCabinet01_m" parameters all a	= gs_officeCab_width,
					b							= b - 0.015,
					bShowDrawer1Params			= bShowDrawer1Params,
					bShowDrawer2Params			= bShowDrawer2Params,
					bShowDrawer1WidthParam		= bShowDrawer1WidthParam,
					bShowDrawer2WidthParam		= bShowDrawer2WidthParam,
					bPartOfLayout				= bPartOfLayout,
					bEnable2ndDrawerCabinet		= bEnable2ndDrawerCabinet,
					bKnobNoneType				= bKnobNoneType,
					enableDrawerSchemes			= 2 + 4 + 8 + 16 + 32 * (NOT(bPartOfLayout) and NOT(bPartOfWsSolo))
endif

if bPartOfLayout and bCalledAsExtension then
	values "extraDeskCab" stOfficeCab
	values "iExtraDeskCab" 0, 1, 2, 3
	if GLOB_MODPAR_NAME = "extraDeskCab" then
		for iOfficeCab = 1 to vardim1(stOfficeCab)
			if extraDeskCab = stOfficeCab[iOfficeCab] then iExtraDeskCab = iOfficeCab - 1
		next iOfficeCab
		parameters iExtraDeskCab = iExtraDeskCab
	else
		extraDeskCab = stOfficeCab[iExtraDeskCab + 1]
		parameters extraDeskCab = extraDeskCab
	endif
endif









]]>
</Script_VL>

<ParamSection SectVersion="26" SectionFlags="0" SubIdent="0">
	<ParamSectHeader>
		<Version>26</Version>
		<AutoHotspots>false</AutoHotspots>
		<StatBits>
			<STBit_FixSize/>
		</StatBits>
		<WDLeftFrame>0</WDLeftFrame>
		<WDRightFrame>0</WDRightFrame>
		<WDTopFrame>0</WDTopFrame>
		<WDBotFrame>0</WDBotFrame>
		<LayFlags>65535</LayFlags>
		<WDMirrorThickness>0</WDMirrorThickness>
		<WDWallInset>0</WDWallInset>
		<SymbolColor>0</SymbolColor>
	</ParamSectHeader>
	<Parameters>
		<Length Name="A">
			<Description><![CDATA["Dimension 1"]]></Description>
			<Fix/>
			<Value>1.5</Value>
		</Length>
		<Length Name="B">
			<Description><![CDATA["Dimension 2"]]></Description>
			<Fix/>
			<Value>1.3</Value>
		</Length>
		<Length Name="zzyzx">
			<Description><![CDATA["Tabletop Height"]]></Description>
			<Fix/>
			<Value>0.75</Value>
		</Length>
		<Boolean Name="AC_show2DHotspotsIn3D">
			<Description><![CDATA["Show 2D Hotspots in 3D"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="ac_bottomlevel">
			<Description><![CDATA["Bottom Level"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="ac_toplevel">
			<Description><![CDATA["Top Level"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Boolean Name="bCalledAsExtension">
			<Description><![CDATA["Called as Extension"]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bPartOfLayout">
			<Description><![CDATA["Called as a Part of Layout"]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bPartOfWsSolo">
			<Description><![CDATA["Called as a Part of Workstation Solo"]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bEnableBasetypes">
			<Description><![CDATA["Enable Base Types"]]></Description>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="bEnableDeskHsCorner">
			<Description><![CDATA["Enable Desk Hotspots at Desk Corners"]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bEnableDeskHsHalfEdge">
			<Description><![CDATA["Enable Desk Hotspots at Desk Half Edges"]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bEnableDeskHsEditingX">
			<Description><![CDATA["Enable Desk Hotspot Editing X"]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bEnableDeskHsEditingY">
			<Description><![CDATA["Enable Desk Hotspot Editing Y"]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bEnableDeskHsEditingC">
			<Description><![CDATA["Enable Desk Hotspot Editing Inner Corner"]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bEnableChairHsEditing">
			<Description><![CDATA["Enable Chair Hotspot Editing"]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bEnableSeatHeightHsEdit">
			<Description><![CDATA["Enable Seat Height Hotspot Editing"]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bMirroredCabPos">
			<Description><![CDATA["Mirrored Cabinet Position by L-Shaped Desk"]]></Description>
			<Value>0</Value>
		</Boolean>
		<Length Name="innerCornerPos">
			<Description><![CDATA["Inner Corner X Position"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.54848275573</Value>
		</Length>
		<Length Name="innerArcStartPos">
			<Description><![CDATA["Inner Arc Start X Position"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.721687836487</Value>
		</Length>
		<Length Name="innerArcEndPos">
			<Description><![CDATA["Inner Arc End Position"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.375277674973</Value>
		</Length>
		<String Name="ttyp">
			<Description><![CDATA["Tabletop Style"]]></Description>
			<Value><![CDATA["L-образная"]]></Value>
		</String>
		<Integer Name="iTableTopType">
			<Description><![CDATA["Tabletop Type"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="tableLength1">
			<Description><![CDATA["Table Length 1"]]></Description>
			<Value>1.45</Value>
		</Length>
		<Length Name="tableLength2">
			<Description><![CDATA["Table Length 2"]]></Description>
			<Value>1.2</Value>
		</Length>
		<Length Name="tableDepth1">
			<Description><![CDATA["Tabletop Width"]]></Description>
			<Value>0.55</Value>
		</Length>
		<Length Name="tableDepth2">
			<Description><![CDATA["Top Width"]]></Description>
			<Value>0.75</Value>
		</Length>
		<Length Name="tableTopHeight">
			<Description><![CDATA["Tabletop Height"]]></Description>
			<Value>0.75</Value>
		</Length>
		<Length Name="topThk">
			<Description><![CDATA["Tabletop Thickness"]]></Description>
			<Value>0.05</Value>
		</Length>
		<Length Name="tableChairDistX">
			<Description><![CDATA["Table-Chair Distance 1"]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="xPosDeskChair">
			<Description><![CDATA["Real Table-Chair Distance 1"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="tableChairDistY">
			<Description><![CDATA["Table-Chair Distance 2"]]></Description>
			<Value>0.2</Value>
		</Length>
		<Length Name="extraDeskWidth">
			<Description><![CDATA["Extra Desk Width"]]></Description>
			<Value>1.2</Value>
		</Length>
		<Length Name="halfExtraDeskWidth">
			<Description><![CDATA["Half Extra Desk Width for Hotspot Editing"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.6</Value>
		</Length>
		<Length Name="extraDeskDepth">
			<Description><![CDATA["Extra Desk Depth"]]></Description>
			<Value>0.5</Value>
		</Length>
		<Length Name="extraDeskChairDistX">
			<Description><![CDATA["Extra Desk Chair X Distance"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="extraDeskChairDistY">
			<Description><![CDATA["Extra Desk Chair Y Distance"]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="extraDeskCabWidth1">
			<Description><![CDATA["Extra Desk Cabinet Width on Side 1"]]></Description>
			<Value>0.2</Value>
		</Length>
		<Length Name="extraDeskCabWidth2">
			<Description><![CDATA["Extra Desk Cabinet Width on Side 2"]]></Description>
			<Value>0.3</Value>
		</Length>
		<String Name="innerEdge">
			<Description><![CDATA["Inner Edge"]]></Description>
			<Value><![CDATA["Прямой"]]></Value>
		</String>
		<Integer Name="iInnerEdge">
			<Description><![CDATA["Inner Edge"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="innerEdgeRad">
			<Description><![CDATA["Inner Edge Radius"]]></Description>
			<Value>0.3</Value>
		</Length>
		<String Name="deskAngle">
			<Description><![CDATA["Desk Angle"]]></Description>
			<Value><![CDATA["120°"]]></Value>
		</String>
		<Integer Name="iDeskAngle">
			<Description><![CDATA["Desk Angle"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>120</Value>
		</Integer>
		<Boolean Name="bComputer">
			<Description><![CDATA["Computer"]]></Description>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="bMirroredComputer">
			<Description><![CDATA["Mirrored Computer"]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bChair">
			<Description><![CDATA["Chair"]]></Description>
			<Value>1</Value>
		</Boolean>
		<Integer Name="chairPos">
			<Description><![CDATA["Chair Position"]]></Description>
			<Value>3</Value>
		</Integer>
		<String Name="gs_presetStyle">
			<Description><![CDATA["Preset Table Styles"]]></Description>
			<Value><![CDATA["Стиль 1"]]></Value>
		</String>
		<Integer Name="gs_presetStyle_m">
			<Description><![CDATA["Preset Table Styles"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="bShowCabParams">
			<Description><![CDATA["Show Cabinet Parameters"]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bShowExtDeskCabParams">
			<Description><![CDATA["Show Desk Extension Cabinet Parameters"]]></Description>
			<Value>0</Value>
		</Boolean>

		<!-- gs_accessories: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_accessories">
			<Description><![CDATA["Accessories"]]></Description>
		</Title>
		<String Name="gs_leg_type">
			<Description><![CDATA["Leg Style"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Стиль 1"]]></Value>
		</String>
		<Integer Name="gs_leg_type_m">
			<Description><![CDATA["Leg Style"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="gs_bFrontPanel">
			<Description><![CDATA["Front Panel"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_frontPanelHeight">
			<Description><![CDATA["Front Panel Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.3</Value>
		</Length>
		<Length Name="gs_frontPanelTop">
			<Description><![CDATA["Front Panel Top Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.55</Value>
		</Length>

		<!-- gs_cabinet: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_cabinet">
			<Description><![CDATA["Office Cabinet"]]></Description>
		</Title>
		<String Name="gs_officeCab">
			<Description><![CDATA["Office Cabinet"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Обе Стороны"]]></Value>
		</String>
		<Boolean Name="gs_bOfficeCab">
			<Description><![CDATA["Office Cabinet"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="gs_officeCab_m">
			<Description><![CDATA["Office Cabinet"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>3</Value>
		</Integer>
		<String Name="extraDeskCab">
			<Description><![CDATA["Extra Desk Cabinet"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value><![CDATA["Нет"]]></Value>
		</String>
		<Integer Name="iExtraDeskCab">
			<Description><![CDATA["Extra Desk Cabinet"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Length Name="gs_officeCab_width">
			<Description><![CDATA["Office Cabinet Width on Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.4</Value>
		</Length>
		<Integer Name="drawer_num">
			<Description><![CDATA["No. of Drawers on Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>4</Value>
		</Integer>
		<Length Name="drawerThk">
			<Description><![CDATA["Drawer Thickness on Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.02</Value>
		</Length>
		<Boolean Name="gs_bevel">
			<Description><![CDATA["Edge Bevel"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<String Name="gs_drawerScheme">
			<Description><![CDATA["Scheme on Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Схема 4"]]></Value>
		</String>
		<Integer Name="gs_drawerScheme_m">
			<Description><![CDATA["Scheme on Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>4</Value>
		</Integer>
		<Length Name="gs_topDrawerH">
			<Description><![CDATA["Top Drawer Height on Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.04</Value>
		</Length>
		<Length Name="gs_bottomDrawerH">
			<Description><![CDATA["Bottom Drawer Height on Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.25</Value>
		</Length>
		<Length Name="gs_drawerH_1">
			<Description><![CDATA["Drawer Height 1 on Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.04</Value>
		</Length>
		<Length Name="gs_drawerH_2">
			<Description><![CDATA["Drawer Height 2 on Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.04</Value>
		</Length>
		<Length Name="gs_drawerH_3">
			<Description><![CDATA["Drawer Height 3 on Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.04</Value>
		</Length>
		<Length Name="gs_drawerH_4">
			<Description><![CDATA["Drawer Height 4 on Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.04</Value>
		</Length>
		<Length Name="gs_drawerH_5">
			<Description><![CDATA["Drawer Height 5 on Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_drawerH_6">
			<Description><![CDATA["Drawer Height 6 on Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_drawerHeights">
			<Description><![CDATA["Drawer Heights on Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="4" SecondDimension="0">
				<AVal Row="1">0.04</AVal>
				<AVal Row="2">0.205</AVal>
				<AVal Row="3">0.205</AVal>
				<AVal Row="4">0.25</AVal>
			</ArrayValues>
		</Length>
		<Length Name="gs_officeCab_width_2">
			<Description><![CDATA["Office Cabinet Width on Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.33</Value>
		</Length>
		<Integer Name="drawer_num_2">
			<Description><![CDATA["No. of Drawers on Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3</Value>
		</Integer>
		<Length Name="drawerThk2">
			<Description><![CDATA["Drawer Thickness on Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.02</Value>
		</Length>
		<String Name="gs_drawerScheme_2">
			<Description><![CDATA["Scheme on Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Схема 1"]]></Value>
		</String>
		<Integer Name="gs_drawerScheme_m_2">
			<Description><![CDATA["Scheme on Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="gs_topDrawerH_2">
			<Description><![CDATA["Top Drawer Height on Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.04</Value>
		</Length>
		<Length Name="gs_bottomDrawerH_2">
			<Description><![CDATA["Bottom Drawer Height on Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.04</Value>
		</Length>
		<Length Name="gs_drawerH_1_2">
			<Description><![CDATA["Drawer Height 1 on Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.04</Value>
		</Length>
		<Length Name="gs_drawerH_2_2">
			<Description><![CDATA["Drawer Height 3 on Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.04</Value>
		</Length>
		<Length Name="gs_drawerH_3_2">
			<Description><![CDATA["Drawer Height 3 on Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.04</Value>
		</Length>
		<Length Name="gs_drawerH_4_2">
			<Description><![CDATA["Drawer Height 4 on Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.04</Value>
		</Length>
		<Length Name="gs_drawerH_5_2">
			<Description><![CDATA["Drawer Height 5 on Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_drawerH_6_2">
			<Description><![CDATA["Drawer Height 6 on Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_drawerHeights_2">
			<Description><![CDATA["Drawer Heights on Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="3" SecondDimension="0">
				<AVal Row="1">0.35</AVal>
				<AVal Row="2">0.35</AVal>
				<AVal Row="3">0.35</AVal>
			</ArrayValues>
		</Length>
		<Boolean Name="bKnob">
			<Description><![CDATA["Knob"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bKnobNoneType">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<String Name="gs_knob_type">
			<Description><![CDATA["Knob"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Стиль 7"]]></Value>
		</String>
		<Integer Name="gs_knob_type_m">
			<Description><![CDATA["Knob Style"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>7</Value>
		</Integer>
		<Length Name="gs_knobHorPos">
			<Description><![CDATA["Knob Position Horizontal on Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_knobHorPos_2">
			<Description><![CDATA["Knob Position Horizontal on Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<String Name="gs_knobVerPos">
			<Description><![CDATA["Knob Position Vertical"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Верх"]]></Value>
		</String>
		<Integer Name="gs_knobVerPos_m">
			<Description><![CDATA["Knob Position Vertical"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="gs_editableKnobs">
			<Description><![CDATA["Hotspots for Editing Knob Position"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="gs_knobPosArray">
			<Description><![CDATA["Knob Position for Hotspot"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="6" SecondDimension="2">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">-0.01125</AVal>
				<AVal Column="1" Row="2">0</AVal>
				<AVal Column="2" Row="2">0</AVal>
				<AVal Column="1" Row="3">0</AVal>
				<AVal Column="2" Row="3">0</AVal>
				<AVal Column="1" Row="4">0</AVal>
				<AVal Column="2" Row="4">0</AVal>
				<AVal Column="1" Row="5">0</AVal>
				<AVal Column="2" Row="5">0</AVal>
				<AVal Column="1" Row="6">0</AVal>
				<AVal Column="2" Row="6">0</AVal>
			</ArrayValues>
		</Length>
		<Length Name="gs_knobPosArray_2">
			<Description><![CDATA["Knob Position for Hotspot"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="6" SecondDimension="2">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0</AVal>
				<AVal Column="1" Row="2">0</AVal>
				<AVal Column="2" Row="2">0</AVal>
				<AVal Column="1" Row="3">0</AVal>
				<AVal Column="2" Row="3">0</AVal>
				<AVal Column="1" Row="4">0</AVal>
				<AVal Column="2" Row="4">0</AVal>
				<AVal Column="1" Row="5">0</AVal>
				<AVal Column="2" Row="5">0</AVal>
				<AVal Column="1" Row="6">0</AVal>
				<AVal Column="2" Row="6">0</AVal>
			</ArrayValues>
		</Length>
		<String Name="gs_baseType">
			<Description><![CDATA["Base Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value><![CDATA["Откл."]]></Value>
		</String>
		<Boolean Name="bCabBase">
			<Description><![CDATA["Base"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="gs_baseType_m">
			<Description><![CDATA["Base Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Length Name="gs_baseHeight">
			<Description><![CDATA["Base Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Boolean Name="bShowCommonCabParams">
			<Description><![CDATA["Show Common Cab Parameters"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- gs_chair: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_chair">
			<Description><![CDATA["Chair"]]></Description>
		</Title>
		<Length Name="chairWidth">
			<Description><![CDATA["Chair Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.62</Value>
		</Length>
		<Length Name="chairDepth">
			<Description><![CDATA["Chair Depth"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.59</Value>
		</Length>
		<Length Name="chairHeight">
			<Description><![CDATA["Chair Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1.2</Value>
		</Length>
		<Length Name="gs_seat_height">
			<Description><![CDATA["Seat Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.7</Value>
		</Length>
		<Boolean Name="gs_armrest">
			<Description><![CDATA["Armrest"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_headrest">
			<Description><![CDATA["Armrest"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<String Name="gs_back_type">
			<Description><![CDATA["Backrest Style"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Низкий"]]></Value>
		</String>
		<Integer Name="gs_back_type_m">
			<Description><![CDATA["Backrest Style"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>

		<!-- gs_2D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_2D_representation">
			<Description><![CDATA["2D Representation"]]></Description>
			<Fix/>
		</Title>
		<String Name="gs_detlevel_2D">
			<Description><![CDATA["2D Detail Level"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Зависит от Масштаба"]]></Value>
		</String>
		<Integer Name="gs_detlevel_2D_m">
			<Description><![CDATA["2D Detail Level"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<String Name="gs_SymbolType">
			<Description><![CDATA["Symbol Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Круг"]]></Value>
		</String>
		<Integer Name="gs_SymbolType_Mask">
			<Description><![CDATA["Symbol Type Enable Mask"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>4019</Value>
		</Integer>
		<Integer Name="gs_SymbolType_m">
			<Description><![CDATA["Symbol Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<PenColor Name="gs_cont_pen">
			<Description><![CDATA["Contour Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>4</Value>
		</PenColor>
		<FillPattern Name="gs_fill_type">
			<Description><![CDATA["Fill Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_fill_pen">
			<Description><![CDATA["Fill Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_back_pen">
			<Description><![CDATA["Fill Background Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>

		<!-- gs_min_space: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_min_space">
			<Description><![CDATA["Minimal Space"]]></Description>
		</Title>
		<Length Name="MSFront">
			<Description><![CDATA["Minimal Space"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1.1</Value>
		</Length>
		<Length Name="MSLength">
			<Description><![CDATA["Minimal Space Length"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1.4</Value>
		</Length>
		<Length Name="MSFront2">
			<Description><![CDATA["Minimal Space in Front"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.6</Value>
		</Length>
		<Length Name="MSRear">
			<Description><![CDATA["Minimal Space Behind"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.6</Value>
		</Length>
		<Length Name="MSSide">
			<Description><![CDATA["Minimal Space on Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1.4</Value>
		</Length>
		<Length Name="MSSide2">
			<Description><![CDATA["Minimal Space on Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1.4</Value>
		</Length>
		<Length Name="MSAllSides">
			<Description><![CDATA["Minimal Space on all Sides"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Length>

		<!-- gs_3D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_3D_representation">
			<Description><![CDATA["3D Representation"]]></Description>
		</Title>
		<String Name="gs_detlevel_3D">
			<Description><![CDATA["3D Detail Level"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Детальный"]]></Value>
		</String>
		<Integer Name="gs_detlevel_3D_m">
			<Description><![CDATA["3D Detail Level"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="gs_resol">
			<Description><![CDATA["Tabletop Resolution"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>16</Value>
		</Integer>
		<Integer Name="gs_leg_resol">
			<Description><![CDATA["Resolution"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>8</Value>
		</Integer>
		<Boolean Name="gs_shadow">
			<Description><![CDATA["Shadow"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>

		<!-- gs_material: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_material">
			<Description><![CDATA["Surfaces"]]></Description>
		</Title>
		<Material Name="gs_top_mat">
			<Description><![CDATA["Tabletop"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>14</Value>
		</Material>
		<Material Name="gs_leg_mat">
			<Description><![CDATA["Leg"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>11</Value>
		</Material>
		<Material Name="legbase_mat">
			<Description><![CDATA["Leg Base"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>49</Value>
		</Material>
		<Material Name="gs_frontPanel_mat">
			<Description><![CDATA["Front Panel"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>11</Value>
		</Material>
		<Material Name="gs_cabinet_mat">
			<Description><![CDATA["Cabinet"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>18</Value>
		</Material>
		<Material Name="gs_door_mat">
			<Description><![CDATA["Drawer"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>18</Value>
		</Material>
		<Material Name="gs_knob_mat">
			<Description><![CDATA["Knob"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>75</Value>
		</Material>
		<Material Name="gs_base_mat">
			<Description><![CDATA["Cabinet Base"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>49</Value>
		</Material>
		<Material Name="gs_frame_mat">
			<Description><![CDATA["Chair Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>49</Value>
		</Material>
		<Material Name="gs_seat_mat">
			<Description><![CDATA["Chair Upholstery"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>48</Value>
		</Material>
		<Material Name="box_mat">
			<Description><![CDATA["Monitor, Keyboard Box"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>18</Value>
		</Material>
		<Material Name="feetmat">
			<Description><![CDATA["Monitor Feet"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>99</Value>
		</Material>
		<Material Name="dispmat">
			<Description><![CDATA["Monitor Display"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>29</Value>
		</Material>
		<Material Name="cover_mat">
			<Description><![CDATA["Keyboard Cover"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>3</Value>
		</Material>
		<Material Name="keyb_mat">
			<Description><![CDATA["Keyboard Button"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>10</Value>
		</Material>
		<String Name="stSymbolTypes">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="16" SecondDimension="0">
				<AVal Row="1"><![CDATA[""]]></AVal>
				<AVal Row="2"><![CDATA[""]]></AVal>
				<AVal Row="3"><![CDATA[""]]></AVal>
				<AVal Row="4"><![CDATA[""]]></AVal>
				<AVal Row="5"><![CDATA[""]]></AVal>
				<AVal Row="6"><![CDATA[""]]></AVal>
				<AVal Row="7"><![CDATA[""]]></AVal>
				<AVal Row="8"><![CDATA[""]]></AVal>
				<AVal Row="9"><![CDATA[""]]></AVal>
				<AVal Row="10"><![CDATA[""]]></AVal>
				<AVal Row="11"><![CDATA[""]]></AVal>
				<AVal Row="12"><![CDATA[""]]></AVal>
				<AVal Row="13"><![CDATA[""]]></AVal>
				<AVal Row="14"><![CDATA[""]]></AVal>
				<AVal Row="15"><![CDATA[""]]></AVal>
				<AVal Row="16"><![CDATA[""]]></AVal>
			</ArrayValues>
		</String>
		<Integer Name="completeTable_unID">
			<Description><![CDATA["unID"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>

		<!-- gs_list: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_list">
			<Description><![CDATA["Parameters for Listing"]]></Description>
			<Fix/>
		</Title>
		<RealNum Name="gs_list_cost">
			<Description><![CDATA["Cost"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="gs_list_manufacturer">
			<Description><![CDATA["Manufacturer"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_note">
			<Description><![CDATA["Note/Remarks"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_location">
			<Description><![CDATA["Location"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_accessories">
			<Description><![CDATA["Accessories"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_Type">
			<Description><![CDATA["Group Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Мебель"]]></Value>
		</String>
		<Integer Name="iFMType">
			<Description><![CDATA["Group Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>16</Value>
		</Integer>
		<String Name="FM_InventoryNumber">
			<Description><![CDATA["Inventory Number"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_SerialNumber">
			<Description><![CDATA["Serial Number"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_ProductionYear">
			<Description><![CDATA["Production Year"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<RealNum Name="FM_ObjectWeight">
			<Description><![CDATA["Object Weight"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="FM_ObjectWeightUnit">
			<Description><![CDATA["Object Weight Unit"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["кг"]]></Value>
		</String>
		<String Name="gs_list_custom1">
			<Description><![CDATA["User Defined 1"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom2">
			<Description><![CDATA["User Defined 2"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom3">
			<Description><![CDATA["User Defined 3"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom4">
			<Description><![CDATA["User Defined 4"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom5">
			<Description><![CDATA["User Defined 5"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
	</Parameters>
</ParamSection>

<CalledMacros SectVersion="2" SectionFlags="0" SubIdent="0">
	<Macro>
		<MName><![CDATA["2dDetailLevel"]]></MName>
		<MainGUID>2FD16305-CA53-4505-BFA7-4E98A8BA9399</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["tableTops_m"]]></MName>
		<MainGUID>36327679-6042-4D59-8591-1418D2031826</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["officeChair_m"]]></MName>
		<MainGUID>38914C07-0D47-4148-A0D6-67A4B0A30B5E</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["keyboard_m"]]></MName>
		<MainGUID>C4F40882-7332-4BDB-A9E4-51F6B2624013</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["lcdMonitor_m"]]></MName>
		<MainGUID>8C189D1B-B9A5-46B4-9445-A15DE6563808</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["OfficeCabinet01_m"]]></MName>
		<MainGUID>57CB5973-AA2E-47CE-8219-56F1A016E6D8</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["fa_desklegtyp"]]></MName>
		<MainGUID>20A333B8-C8E4-494D-80C7-46623F048E19</MainGUID>
	</Macro>
</CalledMacros>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_PR SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_PR>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Comment SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Comment>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_FWM SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_FWM>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_BWM SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_BWM>

<Copyright SectVersion="1" SectionFlags="0" SubIdent="0">
	<Author>GRAPHISOFT</Author>
	<License>
		<Type>CC BY-ND</Type>
		<Version>3.0</Version>
	</License>
</Copyright>

</Symbol>
