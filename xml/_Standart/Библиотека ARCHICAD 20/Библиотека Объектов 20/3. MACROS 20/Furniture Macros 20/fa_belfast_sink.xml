<?xml version="1.0" encoding="UTF-8"?>
<Symbol IsArchivable="true" IsPlaceable="false" MainGUID="7FCA3FEA-6409-49FA-B40A-469F090E58C0" MigrationValue="Normal" Owner="1196638531" Signature="1297307981" Version="43">
<Ancestry SectVersion="1" SectionFlags="0" SubIdent="0" Template="false">
	<MainGUID>F938E33A-329D-4A36-BE3E-85E126820996</MainGUID>
	<MainGUID>103E8D2C-8230-42E1-9597-46F84CCE28C0</MainGUID>
	<MainGUID>9BCE6139-F733-4E13-B439-AAF1AF232B89</MainGUID>
	<MainGUID>30E58E66-1DA9-4D20-9341-700170100E12</MainGUID>
	<MainGUID>D39DF9D9-2191-4C4D-B004-2E8C1B298D7C</MainGUID>
	<MainGUID>0D6515ED-B372-41C6-8291-C527CE94BA43</MainGUID>
</Ancestry>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_3D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
if gs_shadow = 0 then shadow off

material gs_sink_mat
pen gs_cont_pen

if GLOB_CONTEXT > 20 and GLOB_CONTEXT < 40 or gs_detlevel_3D_m = 1 then 		!! for Simple Model and in 3D Windoow
	iResol = 3
else
	iResol = gs_resol
endif

resol iResol

add a / 2, b, 0
	gosub gs_sink_type_m * 10
del 1

end


10:
! ==============================================================================
! Sink Type 1
! ==============================================================================

group "sink1"
	gosub "sinkGeometry"
endgroup

group "bowl1"
	valuesForDrain = 0
	bMirroredBowl = 0
	gosub "nBowl_1"
endgroup

group "drain1"
	valuesForDrain = 1
	gosub "nBowl_1"
endgroup

placegroup subgroup ("sink1", "bowl1")

placegroup "drain1"

gosub "taps"

return



20:
! ==============================================================================
! Sink Type 2
! ==============================================================================

group "sink2"
	gosub "sinkGeometry"
endgroup
group "bowl2"
	valuesForDrain = 0
	bMirroredBowl = 0
	gosub "nBowl_1"
endgroup

group "drain2"
	valuesForDrain = 1
	gosub "nBowl_1"
endgroup

placegroup subgroup ("sink2", "bowl2")

placegroup "drain2"

gosub "taps"

return



30:
! ==============================================================================
! Sink Type 3
! ==============================================================================

group "sink3"
	gosub "sinkGeometry"
endgroup

group "bowl3"
	valuesForDrain = 0
	bMirroredBowl = 0
	gosub "nBowl_1"
endgroup

group "drain3"
	valuesForDrain = 1
	gosub "nBowl_1"
endgroup

group "border3"
	gosub "border"
endgroup

if gs_detlevel_3D_m = 2 then
	placegroup subgroup (subgroup (("sink3"), "bowl3"), "border3")

	placegroup "drain3"
else
	placegroup subgroup ("sink3", "bowl3")
endif

gosub "taps"

return



40:
! ==============================================================================
! Sink Type 4
! ==============================================================================

group "sink4"
	gosub "sinkGeometry"
endgroup

group "bowl4"
	valuesForDrain = 0
	for i = 1 to 2
		if i = 1 then
			bMirroredBowl = 0
			gosub "nBowl_1"
		else
			bMirroredBowl = 1
			gosub "nBowl_2"
		endif
	next i
endgroup

group "drain4"
	valuesForDrain = 1
	gosub "nBowl_1"
	gosub "nBowl_2"
endgroup

group "border4"
	gosub "border"
endgroup

if gs_detlevel_3D_m = 2 then
	placegroup subgroup (subgroup (("sink4"), "bowl4"), "border4")

	placegroup "drain4"
else
	placegroup subgroup ("sink4", "bowl4")
endif

gosub "taps"

return



50:
! ==============================================================================
! Sink Type 5
! ==============================================================================

group "sink5"
	gosub "sinkGeometry"
endgroup

group "bowl5"
	valuesForDrain = 0
	bMirroredBowl = 0
	gosub "nBowl_1"
	gosub "nBowl_2"
	gosub "nBowl_3"
endgroup

group "drain5"
	valuesForDrain = 1
	gosub "nBowl_1"
	gosub "nBowl_2"
	gosub "nBowl_3"
endgroup

group "border5"
	gosub "border"
endgroup

group "bowlCut"
	material gs_sink_mat

	bowlCutWidth1	= 0.06
	bowlCutWidth2	= 0.08
	bowlCutDepth	= 0.02

	add a / 2 - sinkWallThkSide - bowlWidth3 / 2, -drainBoardHeight2 + sinkWallThkSide / 2, zzyzx - bowlCutDepth
	rotx 90
	prism_ 5, sinkWallThkSide * 2,
		-bowlCutWidth1 / 2, 0, 15,
		bowlCutWidth1 / 2, 0, 15,
		bowlCutWidth2 / 2, bowlCutDepth, 15,
		-bowlCutWidth2 / 2, bowlCutDepth, 15,
		-bowlCutWidth1 / 2, 0, -1
	del 2
endgroup

if gs_detlevel_3D_m = 2 then
	placegroup subgroup (subgroup (subgroup (("sink5"), "bowl5"), "border5"), "bowlCut")

	placegroup "drain5"
else
	placegroup subgroup ("sink5", "bowl5")
endif

gosub "drainBoardReed"

gosub "taps"

return



60:
! ==============================================================================
! Sink Type 6
! ==============================================================================

group "sink6"
	gosub "sinkGeometry"
endgroup

group "bowl6"
	valuesForDrain = 0
	for i = 1 to 2
		if i = 1 then
			bMirroredBowl = 0
			gosub "nBowl_1"
		else
			bMirroredBowl = 1
			gosub "nBowl_2"
		endif
	next i
endgroup

group "drain6"
	valuesForDrain = 1
	gosub "nBowl_1"
	gosub "nBowl_2"
endgroup

group "border6"
	gosub "border"
endgroup

if gs_detlevel_3D_m = 2 then
	placegroup subgroup (subgroup (("sink6"), "bowl6"), "border6")

	placegroup "drain6"
else
	placegroup subgroup ("sink6", "bowl6")
endif

for i = 1 to 2
	gosub "drainBoardReed"
mulx -1
next i
del 2

gosub "taps"

return



70:
! ==============================================================================
! Sink Type 7
! ==============================================================================

group "sink7"
	gosub "sinkGeometry"
endgroup

group "bowl7"
	valuesForDrain = 0
	bMirroredBowl = 0
	gosub "nBowl_1"
endgroup

group "drain7"
	valuesForDrain = 1
	gosub "nBowl_1"
endgroup

group "border7"
	gosub "border"
endgroup

if gs_detlevel_3D_m = 2 then
	placegroup subgroup (subgroup (("sink7"), "bowl7"), "border7")

	placegroup "drain7"
else
	placegroup subgroup ("sink7", "bowl7")
endif

gosub "drainBoardReed"

gosub "taps"

return



"sinkGeometry":
! ==============================================================================
! Sink Geometry
! ==============================================================================

material gs_sink_mat

if iSinkGeometry = 1 then
	put	0, 0, 79,
		 a / 2 - sinkCornerRadiusOut, 0, 79,
		 a / 2, -sinkCornerRadiusOut, 1079,
		 a / 2, -b + sinkCornerRadiusOut,	79,
		 a / 2 - sinkCornerRadiusOut,	-b, 1079,
		-a / 2 + sinkCornerRadiusOut,	-b, 79,
		-a / 2, -b + sinkCornerRadiusOut, 1079,
		-a / 2, -sinkCornerRadiusOut, 79,
		-a / 2 + sinkCornerRadiusOut, 0, 1079
else
	put	0, 0, 79,
		a / 2 - sinkCornerRadiusOut, 0, 79,
		a / 2, -sinkCornerRadiusOut, 1079,
		a / 2, -b + sinkCornerRadiusOut + sinkCornerDistY, 79,
		sinkCornerRadiusOut, -arch2Angle, 2079

	for i = 1 to iSinkBigResolOut * 2
		put	 sinkCornerRadiusOut2, -(90 - arch2Angle) / iSinkBigResolOut, 2079
	next i

	put	sinkCornerRadiusOut, -arch2Angle, 2079,
		-a / 2, -sinkCornerRadiusOut, 79,
		-a / 2 + sinkCornerRadiusOut, 0, 1079
endif

if GLOB_CONTEXT = 4 then
	prism_ nsp / 3, zzyzx,
		get (nsp)
else
	hprism_ gs_sink_mat, gs_sink_mat, gs_sink_mat, gs_sink_mat,
			nsp / 3, zzyzx, 0, 0.005, 1,
			get (nsp)
endif

gosub 1000

return



"nBowl_1":
! ==============================================================================
! 1st Bowl, Drain Values
! ==============================================================================

bowlWidth			= bowlWidth1
bowlDepth			= bowlDepth1
drainPosXFromCenter	= drainPosFromBowlCenterX_1
drainPosYFromCenter	= drainPosFromBowlCenterY_1
bowlHeight			= bowlHeight1
add bowlPosX_1, bowlPosY_1, 0
	if valuesForDrain = 1 then
		gosub "drain"
	else
		gosub "bowlGeometry"
	endif
del 1

return



"nBowl_2":
! ==============================================================================
! 2nd Bowl, Drain Values
! ==============================================================================

bowlWidth			= bowlWidth2
bowlDepth			= bowlDepth2
drainPosXFromCenter	= drainPosFromBowlCenterX_2
drainPosYFromCenter	= drainPosFromBowlCenterY_2
bowlHeight			= bowlHeight1
add bowlPosX_2, bowlPosY_2, 0
	if valuesForDrain = 1 then
		gosub "drain"
	else
		gosub "bowlGeometry"
	endif
del 1

return



"nBowl_3":
! ==============================================================================
! 3rd Bowl, Drain Values
! ==============================================================================

bowlWidth			= bowlWidth3
bowlDepth			= bowlDepth3
drainPosXFromCenter	= drainPosFromBowlCenterX_3
drainPosYFromCenter	= drainPosFromBowlCenterY_3
drainDia1			= 0.04
drainDia2			= drainDia1 + 0.02
bowlHeight			= bowlHeight2
add bowlPosX_3, bowlPosY_3, 0
	if valuesForDrain = 1 then
		gosub "drain"
	else
		gosub "bowlGeometry"
	endif
del 1
drainDia1			= 0.07
drainDia2			= drainDia1 + 0.02

return



"bowlGeometry":
! ==============================================================================
! Bowl
! ==============================================================================

if iSinkGeometry = 1 then
	put	0, bowlDepth / 2, 79,
		bowlWidth / 2 - bowlCornerRadius * (gs_sink_type_m <> 4 or bMirroredBowl) - bowlCornerRadius2 * (gs_sink_type_m = 4 and not(bMirroredBowl)), bowlDepth / 2, 79,
		bowlWidth / 2, bowlDepth / 2 - bowlCornerRadius * (gs_sink_type_m <> 4 or bMirroredBowl) - bowlCornerRadius2 * (gs_sink_type_m = 4 and not(bMirroredBowl)), 1079,
		bowlWidth / 2, -bowlDepth / 2 + bowlCornerRadius, 79,
		bowlWidth / 2 - bowlCornerRadius, -bowlDepth / 2, 1079,
		-bowlWidth / 2 + bowlCornerRadius, -bowlDepth / 2, 79,
		-bowlWidth / 2, -bowlDepth / 2 + bowlCornerRadius, 1079,
		-bowlWidth / 2, bowlDepth / 2 - bowlCornerRadius * (gs_sink_type_m <> 4 or not(bMirroredBowl)) - bowlCornerRadius2 * (gs_sink_type_m = 4 and bMirroredBowl), 79,
		-bowlWidth / 2 + bowlCornerRadius * (gs_sink_type_m <> 4 or not(bMirroredBowl)) + bowlCornerRadius2 * (gs_sink_type_m = 4 and bMirroredBowl), bowlDepth / 2, 1079
else
	put	0, bowlDepth / 2, 79,
		bowlWidth / 2 - bowlCornerRadius, bowlDepth / 2, 79,
		bowlWidth / 2, bowlDepth / 2 - bowlCornerRadius, 1079,
		bowlWidth / 2, -bowlDepth / 2 + bowlCornerRadius + sinkCornerDistY, 79,
		bowlCornerRadius, -arch2Angle, 2079

	for i = 1 to iSinkBigResolOut * 2
		put	 sinkCornerRadiusOut2 - sinkWallThkSide, -(90 - arch2Angle) / iSinkBigResolOut, 2079
	next i

	put	bowlCornerRadius, -arch2Angle, 2079,
		-bowlWidth / 2, bowlDepth / 2 - bowlCornerRadius, 79,
		-bowlWidth / 2 + bowlCornerRadius, bowlDepth / 2, 1079
endif

addz zzyzx
mulz -1
if GLOB_CONTEXT = 4 then
	prism_ nsp / 3, bowlHeight,
		get (nsp)
else
	hprism_ gs_sink_mat, gs_sink_mat, gs_sink_mat, gs_sink_mat,
		nsp / 3, bowlHeight, 0, bowlCornerRadius - 0.01, 1,
		get (nsp)
endif
del 2

! ==============================================================================
! Drain Cut
! ==============================================================================

if gs_detlevel_3D_m = 2 then
	material gs_sink_mat

	add drainPosXFromCenter, drainPosYFromCenter, zzyzx - bowlHeight - drainHeight
	roty -90
	revolve 2, 360, 1 + 2,
		0, drainDia1 / 2, 0,
		drainHeight, drainDia2 / 2, 0
	del 2
endif

return



"drainBoardReed":
! ==============================================================================
! Drainboard Reed
! ==============================================================================

if iDrainBoardDir = 1 then
	reedLength	= drainBoardHeight - drainPlateHeight - reedDist_temp
	reedNum		= INT((drainBoardWidth - reedDist_temp * 2) / reedDist_temp)
	reedDist	= (drainBoardWidth - reedDist_temp * 2) / (reedNum - 1)
else
	reedLength	= drainBoardWidth - drainPlateHeight - reedDist_temp
	reedNum		= INT((b - sinkWallThkSide * 2 - reedDist_temp * 2) / reedDist_temp)
	reedDist	= (b - sinkWallThkSide * 2 - reedDist_temp * 2) / (reedNum - 1)
endif

if gs_detlevel_3D_m = 2 then

	resol 8

	put	-reedWidth / 2, reedLength / 2 - reedWidth / 2, 79,
		0, b, 800,
		reedWidth / 2, reedLength / 2 - reedWidth / 2, 1079,
		reedWidth / 2, -reedLength / 2 + reedWidth / 2, 79,
		0, -b, 800,
		-reedWidth / 2, -reedLength / 2 + reedWidth / 2, 1079

	if iDrainBoardDir = 1 then
		add -a / 2 + sinkWallThkSide + reedDist_temp, -sinkWallThkSide - (drainBoardHeight - drainPlateHeight) / 2 - drainPlateHeight, zzyzx - drainPlateHeight
			for re = 1 to reedNum
				if re = reedNum then
					prism_ nsp / 3, reedThk,
						get (nsp)
				else
					prism_ nsp / 3, reedThk,
						use (nsp)
				endif
			addx reedDist
			next re
			del reedNum
		del 1
	else
		add a / 2 - sinkWallThkSide - (drainBoardWidth - drainPlateHeight) / 2 - drainPlateHeight, -b + sinkWallThkSide + reedDist_temp, zzyzx - drainPlateHeight
			for re = 1 to reedNum
				rotz 90
					if re = reedNum then
						prism_ nsp / 3, reedThk,
							get (nsp)
					else
						prism_ nsp / 3, reedThk,
							use (nsp)
					endif
				del 1
			addy reedDist
			next re
			del reedNum
		del 1
	endif

	resol iResol

endif

return



"taps":
! ==============================================================================
! Taps
! ==============================================================================

if gs_tap_type_m <> 0 then
	add -a / 2 + xOrigTapPos, -b + yOrigTapPos, zzyzx + count_th

	call "tapType_m" parameters all	gs_tap_type_m		= tempTapType,
									bEnableTapEdit		= 1,
									bSinkTap			= 1,
									useOldSimpleTaps	= 0

	del 1
endif

return



"drain":
! ==============================================================================
! Drain
! ==============================================================================

if gs_detlevel_3D_m = 2 then
	material gs_tap_mat

	add drainPosXFromCenter, drainPosYFromCenter, zzyzx - bowlHeight - drainHeight
	cylind drainHeight, drainDia1 / 2
	del 1
endif

return



"border":
! ==============================================================================
! Border
! ==============================================================================

if gs_sink_type_m = 3 then
	addz zzyzx
	mulz -1
	hprism_ gs_sink_mat, gs_sink_mat, gs_sink_mat, gs_sink_mat,
		7, drainPlateHeight, 45, drainPlateHeight, 1,

		0, -sinkWallThkSide, 79,
		a / 2 - sinkCornerRadiusOut,	 -sinkWallThkSide,	79,
		a / 2 - sinkWallThkSide, -sinkCornerRadiusOut, 1079,
		a / 2 - sinkWallThkSide, -drainBoardHeight - sinkWallThkSide - bowlCornerRadius,	79,
		-a / 2 + sinkWallThkSide,	-drainBoardHeight - sinkWallThkSide - bowlCornerRadius,	79,
		-a / 2 + sinkWallThkSide, -sinkCornerRadiusOut, 79,
		-a / 2 + sinkCornerRadiusOut,	 -sinkWallThkSide,	1079
	del 2
endif

if gs_sink_type_m = 4 then
	addz zzyzx
	mulz -1
	hprism_ gs_sink_mat, gs_sink_mat, gs_sink_mat, gs_sink_mat,
		13, drainPlateHeight, 45, drainPlateHeight, 1,

		-sinkWallThkMiddle / 2 - bowlCornerRadius2, -sinkWallThkSide, 79,
		-sinkWallThkMiddle / 2 - bowlCornerRadius2, -sinkWallThkSide - bowlCornerRadius2, 900,
		0, -45, 4079,
		sinkWallThkMiddle / 2 + bowlCornerRadius2 - sin(45) * bowlCornerRadius2, -sinkWallThkSide - bowlCornerRadius2 + sin(45) * bowlCornerRadius2, 1079,
		sinkWallThkMiddle / 2 + bowlCornerRadius2, -sinkWallThkSide, 1079,
		 a / 2 - sinkCornerRadiusOut, -sinkWallThkSide, 79,
		 a / 2 - sinkWallThkSide, -sinkCornerRadiusOut, 1079,
		 a / 2 - sinkWallThkSide, -b + sinkCornerRadiusOut, 79,
		 a / 2 - sinkCornerRadiusOut,	-b + sinkWallThkSide, 1079,
		-a / 2 + sinkCornerRadiusOut,	-b + sinkWallThkSide, 79,
		-a / 2 + sinkWallThkSide, -b + sinkCornerRadiusOut, 1079,
		-a / 2 + sinkWallThkSide, -sinkCornerRadiusOut, 79,
		-a / 2 + sinkCornerRadiusOut, -sinkWallThkSide, 1079
	del 2
endif

if gs_sink_type_m = 5 then
	add -a / 2 + drainBoardWidth / 2 + sinkWallThkSide, 0, zzyzx
	mulz -1
	hprism_ gs_sink_mat, gs_sink_mat, gs_sink_mat, gs_sink_mat,
		11, drainPlateHeight, 45, drainPlateHeight, 1,

		0, -sinkWallThkSide, 79,
		drainBoardWidth / 2 - bowlCornerRadius, -sinkWallThkSide,	79,
		drainBoardWidth / 2, -sinkCornerRadiusOut, 1079,

		drainBoardWidth / 2, -drainBoardHeight2 - sinkWallThkSide + bowlCornerRadius,	79,
		drainBoardWidth / 2 + bowlCornerRadius, -drainBoardHeight2 - sinkWallThkSide,	1079,

		drainBoardWidth / 2 + bowlCornerRadius * 2 + sinkWallThkMiddle + bowlCornerRadius, -drainBoardHeight2 - sinkWallThkSide,	79,
		drainBoardWidth / 2 + bowlCornerRadius * 2 + sinkWallThkMiddle + bowlCornerRadius, -b + sinkWallThkSide,	79,
		-drainBoardWidth / 2 + bowlCornerRadius, -b + sinkWallThkSide,	79,
		-drainBoardWidth / 2, -b + sinkCornerRadiusOut,	1079,
		-drainBoardWidth / 2, -sinkCornerRadiusOut, 79,
		-drainBoardWidth / 2 + bowlCornerRadius, -sinkWallThkSide,	1079
	del 2
endif

if gs_sink_type_m = 6 then
	for i = 1 to 2
		add -a / 2 + drainBoardWidth / 2 + sinkWallThkSide, 0, zzyzx
		mulz -1
		hprism_ gs_sink_mat, gs_sink_mat, gs_sink_mat, gs_sink_mat,
			9, drainPlateHeight, 45, drainPlateHeight, 1,

			0, -sinkWallThkSide, 79,
			drainBoardWidth / 2 - bowlCornerRadius, -sinkWallThkSide,	79,
			drainBoardWidth / 2, -sinkCornerRadiusOut, 1079,
			drainBoardWidth / 2, -drainBoardHeight - sinkWallThkSide + bowlCornerRadius,	79,
			drainBoardWidth / 2 + bowlCornerRadius, -drainBoardHeight - sinkWallThkSide,	1079,
			drainBoardWidth / 2 + bowlCornerRadius * 2, -drainBoardHeight - sinkWallThkSide - bowlCornerRadius,	1079,
			-drainBoardWidth / 2, -drainBoardHeight - sinkWallThkSide - bowlCornerRadius,	79,
			-drainBoardWidth / 2, -sinkCornerRadiusOut, 79,
			-drainBoardWidth / 2 + bowlCornerRadius, -sinkWallThkSide,	1079
		del 2
	mulx -1
	next i
	del 2
endif

if gs_sink_type_m = 7 then
	addz zzyzx
	mulz -1
	hprism_ gs_sink_mat, gs_sink_mat, gs_sink_mat, gs_sink_mat,
		6, drainPlateHeight, 45, drainPlateHeight, 1,

		a / 2 - sinkWallThkSide - drainBoardWidth - bowlCornerRadius, -sinkWallThkSide, 79,
		a / 2 - sinkCornerRadiusOut,	 -sinkWallThkSide, 79,
		a / 2 - sinkWallThkSide, -sinkCornerRadiusOut, 1079,
		a / 2 - sinkWallThkSide, -b + sinkCornerRadiusOut, 79,
		a / 2 - sinkCornerRadiusOut,	-b + sinkWallThkSide, 1079,
		a / 2 - sinkWallThkSide - drainBoardWidth - bowlCornerRadius,	-b + sinkWallThkSide, 79
	del 2
endif

return

1000:
roty 90
gosub 5000
del 1
return

2000:
gosub 5000
return

5000:

vert 0, 0, 0
vert 1, 0, 0
vert 0, 1, 0
vert 0, 0, 1

coor 2, -1, -2, -3, -4


base

body -1

return
]]>
</Script_3D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_VL SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
VALUES "SinkSymbol_m" 1,2

if gs_sink_type_m = 1 then
	minWidth = drainDia2 + sinkCornerRadiusOut * 2
	minDepth = drainOffset + sinkCornerRadiusOut * 2

	xTapRangeMin = -a / 2 + sinkWallThkSide
	xTapRangeMax = a / 2 - sinkWallThkSide
	yTapRangeMin = -0.09
	yTapRangeMax = 0.2 - 0.05
endif
if gs_sink_type_m = 2 then
	minWidth = drainDia2 + sinkCornerRadiusOut * 2
	minDepth = drainOffset + sinkCornerRadiusOut * 2

	xTapRangeMin = -a / 2 + sinkWallThkSide
	xTapRangeMax = a / 2 - sinkWallThkSide
	yTapRangeMin = -0.09
	yTapRangeMax = 0.2 - 0.05
endif
if gs_sink_type_m = 3 then
	minWidth = drainDia2 + sinkCornerRadiusOut * 2
	minDepth = drainOffset + drainDia2 / 2 + drainBoardHeight + sinkCornerRadiusOut

	xTapRangeMin = -a / 2 + sinkWallThkSide
	xTapRangeMax = a / 2 - sinkWallThkSide
	yTapRangeMin = -0.04
	yTapRangeMax = drainBoardHeight - sinkWallThkSide
endif
if gs_sink_type_m = 4 then
	minWidth = sinkCornerRadiusOut * 2 + bowlCornerRadius2 * 4
	minDepth = drainOffset + drainDia2  / 2 + sinkCornerRadiusOut * 2

	xTapRangeMin = -a / 2 + sinkWallThkSide
	xTapRangeMax = a / 2 - sinkWallThkSide
	yTapRangeMin = -0.14
	yTapRangeMax = 0.2 - 0.05
endif
if gs_sink_type_m = 5 then
	minWidth = bowlWidth3 * 2 + sinkCornerRadiusOut * 2
	minDepth = drainOffset + drainDia2 / 2 + drainBoardHeight + sinkCornerRadiusOut

	xTapRangeMin = -bowlCornerRadius * 2 - sinkWallThkMiddle / 2
	xTapRangeMax = a / 2 - sinkWallThkSide - bowlWidth3
	yTapRangeMin = -0.04
	yTapRangeMax = drainBoardHeight2 - sinkWallThkSide
endif
if gs_sink_type_m = 6 then
	minWidth = drainOffset * 4 + sinkCornerRadiusOut * 2
	minDepth = drainOffset + drainDia2 / 2 + drainBoardHeight + sinkCornerRadiusOut

	xTapRangeMin = -bowlCornerRadius * 2 - sinkWallThkMiddle / 2
	xTapRangeMax = bowlCornerRadius * 2 + sinkWallThkMiddle / 2
	yTapRangeMin = -0.04
	yTapRangeMax = drainBoardHeight - sinkWallThkSide
endif
if gs_sink_type_m = 7 then
	minWidth = drainDia2 + drainBoardWidth + sinkCornerRadiusOut
	minDepth = drainOffset + sinkCornerRadiusOut * 2

	xTapRangeMin = -bowlWidth1 / 2
	xTapRangeMax = bowlWidth1 / 2
	yTapRangeMin = -0.09
	yTapRangeMax = 0.2 - 0.05
endif

minHeight = sinkWallThkBottom + 0.005 + bowlCornerRadius - 0.01

ConPosX_3 = a / 2 + bowlPosX_1 + drainPosFromBowlCenterX_1
ConPosY_3 = b + bowlPosY_1 + drainPosFromBowlCenterY_1
if bowlNumber > 1 then
	ConPosX_4 = a / 2 + bowlPosX_2 + drainPosFromBowlCenterX_2
	ConPosY_4 = b + bowlPosY_2 + drainPosFromBowlCenterY_2
endif
if bowlNumber > 2 then
	ConPosX_5 = a / 2 + bowlPosX_3 + drainPosFromBowlCenterX_3
	ConPosY_5 = b + bowlPosY_3 + drainPosFromBowlCenterY_3
endif

call "tapType_m" parameters	all	enableTapGroups			= 0,
								enableSingleLevelTaps	= 0,
								enableTwoHandleTaps		= 0,
								enableTraditionalTaps	= 0,
								enableSensorFaucets		= 0,
								enableWallMountedTaps	= 0,
								enableCustomTaps		= 2 + 2**2 + 2**3 + 2**4 + 2**5 + 2**6 + 2**7 + 2**8 + 2**9,
								bEnableTapEdit			= 1,
								bShower 				= 0,
								enableTapSymbols		= 2 + 4 + 8 + 32,
								xTapRangeMin 			= xTapRangeMin,
								xTapRangeMax 			= xTapRangeMax,
								yTapRangeMin 			= yTapRangeMin,
								yTapRangeMax 			= yTapRangeMax

end	minWidth, minDepth, minHeight,
	ConPosX_3, ConPosY_3,
	ConPosX_4, ConPosY_4,
	ConPosX_5, ConPosY_5
]]>
</Script_VL>

<ParamSection SectVersion="22" SectionFlags="0" SubIdent="0">
	<ParamSectHeader>
		<AutoHotspots>false</AutoHotspots>
		<WDLeftFrame>0</WDLeftFrame>
		<WDRightFrame>0</WDRightFrame>
		<WDTopFrame>0</WDTopFrame>
		<WDBotFrame>0</WDBotFrame>
		<LayFlags>65535</LayFlags>
		<WDMirrorThickness>0</WDMirrorThickness>
		<WDWallInset>0</WDWallInset>
	</ParamSectHeader>
	<Parameters>
		<Length Name="A">
			<Description><![CDATA["Dimension 1"]]></Description>
			<Fix/>
			<Value>0.89</Value>
		</Length>
		<Length Name="B">
			<Description><![CDATA["Dimension 2"]]></Description>
			<Fix/>
			<Value>0.5</Value>
		</Length>
		<Length Name="ZZYZX">
			<Description><![CDATA["Sink Height"]]></Description>
			<Fix/>
			<Value>0.22</Value>
		</Length>
		<Boolean Name="AC_show2DHotspotsIn3D">
			<Description><![CDATA["Show 2D Hotspots in 3D"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="ac_bottomlevel">
			<Description><![CDATA["Bottom Level"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="ac_toplevel">
			<Description><![CDATA["Top Level"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>

		<!-- gs_2D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_2D_representation">
			<Description><![CDATA["2D Representation"]]></Description>
			<Fix/>
		</Title>
		<Integer Name="gs_detlevel_3D_m">
			<Description><![CDATA["3D"]]></Description>
			<Value>2</Value>
		</Integer>
		<Integer Name="gs_sink_type_m">
			<Description><![CDATA["Sink Type"]]></Description>
			<Value>1</Value>
		</Integer>
		<Integer Name="SinkSymbol_m">
			<Description><![CDATA["Sink Symbol Type"]]></Description>
			<Value>2</Value>
		</Integer>
		<String Name="gs_tap_type">
			<Description><![CDATA["Tap Styles"]]></Description>
			<Value><![CDATA["Стиль 1"]]></Value>
		</String>
		<Integer Name="gs_tap_type_m">
			<Description><![CDATA["Tap Styles"]]></Description>
			<Value>1</Value>
		</Integer>
		<String Name="TapSymbol">
			<Description><![CDATA["Tap Symbol Type"]]></Description>
			<Value><![CDATA["Детальный"]]></Value>
		</String>
		<Integer Name="TapSymbol_m">
			<Description><![CDATA["Tap Symbol Type"]]></Description>
			<Value>2</Value>
		</Integer>
		<Length Name="count_th">
			<Description><![CDATA["Tap Height (0-None)"]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="xTapPos">
			<Description><![CDATA["Tap X Position"]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="yTapPos">
			<Description><![CDATA["Tap Y Position"]]></Description>
			<Value>0</Value>
		</Length>
		<Integer Name="gs_resol">
			<Description><![CDATA["Resolution"]]></Description>
			<Value>32</Value>
		</Integer>
		<Boolean Name="gs_shadow">
			<Description><![CDATA["Shadow"]]></Description>
			<Value>1</Value>
		</Boolean>
		<Material Name="gs_sink_mat">
			<Description><![CDATA["Sink"]]></Description>
			<Value>11</Value>
		</Material>
		<Material Name="gs_tap_mat">
			<Description><![CDATA["Tap"]]></Description>
			<Value>11</Value>
		</Material>
		<Integer Name="bowlNumber">
			<Description><![CDATA["Number Of Bowls"]]></Description>
			<Value>1</Value>
		</Integer>
		<Length Name="sinkWallThkSide">
			<Description><![CDATA["Sink Wall Thickness Side"]]></Description>
			<Value>0.04</Value>
		</Length>
		<Length Name="sinkWallThkMiddle">
			<Description><![CDATA["Sink Wall Thickness Middle"]]></Description>
			<Value>0.04</Value>
		</Length>
		<Length Name="sinkCornerRadiusOut">
			<Description><![CDATA["Sink Corner Radius Out"]]></Description>
			<Value>0.06</Value>
		</Length>
		<PenColor Name="gs_cont_pen">
			<Description><![CDATA["Contour Pen"]]></Description>
			<Fix/>
			<Value>7</Value>
		</PenColor>
		<FillPattern Name="gs_fill_type">
			<Description><![CDATA["Fill Type"]]></Description>
			<Fix/>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_fill_pen">
			<Description><![CDATA["Fill Pen"]]></Description>
			<Fix/>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_back_pen">
			<Description><![CDATA["Fill Background Pen"]]></Description>
			<Fix/>
			<Value>19</Value>
		</PenColor>

		<!-- gs_3D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_3D_representation">
			<Description><![CDATA["3D Representation"]]></Description>
			<Fix/>
		</Title>
		<String Name="gs_detlevel_3D">
			<Description><![CDATA["3D Detail Level"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="MEP_version">
			<Description><![CDATA["Version"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>4</Value>
		</Integer>
		<String Name="MEP_ConInfo">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="3">
				<AVal Column="1" Row="1"><![CDATA[""]]></AVal>
				<AVal Column="2" Row="1"><![CDATA[""]]></AVal>
				<AVal Column="3" Row="1"><![CDATA[""]]></AVal>
			</ArrayValues>
		</String>
		<Length Name="gs_Connections">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="26">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0</AVal>
				<AVal Column="3" Row="1">0</AVal>
				<AVal Column="4" Row="1">0</AVal>
				<AVal Column="5" Row="1">0</AVal>
				<AVal Column="6" Row="1">0</AVal>
				<AVal Column="7" Row="1">0</AVal>
				<AVal Column="8" Row="1">0</AVal>
				<AVal Column="9" Row="1">0</AVal>
				<AVal Column="10" Row="1">0</AVal>
				<AVal Column="11" Row="1">0</AVal>
				<AVal Column="12" Row="1">0</AVal>
				<AVal Column="13" Row="1">0</AVal>
				<AVal Column="14" Row="1">0</AVal>
				<AVal Column="15" Row="1">0</AVal>
				<AVal Column="16" Row="1">0</AVal>
				<AVal Column="17" Row="1">0</AVal>
				<AVal Column="18" Row="1">0</AVal>
				<AVal Column="19" Row="1">0</AVal>
				<AVal Column="20" Row="1">0</AVal>
				<AVal Column="21" Row="1">0</AVal>
				<AVal Column="22" Row="1">0</AVal>
				<AVal Column="23" Row="1">0</AVal>
				<AVal Column="24" Row="1">0</AVal>
				<AVal Column="25" Row="1">0</AVal>
				<AVal Column="26" Row="1">0</AVal>
			</ArrayValues>
		</Length>
		<Integer Name="MEP_NumberConnections">
			<Description><![CDATA["Number of Connections"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Length Name="MEP_NumConnectionData">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="26">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0</AVal>
				<AVal Column="3" Row="1">0</AVal>
				<AVal Column="4" Row="1">0</AVal>
				<AVal Column="5" Row="1">0</AVal>
				<AVal Column="6" Row="1">0</AVal>
				<AVal Column="7" Row="1">0</AVal>
				<AVal Column="8" Row="1">0</AVal>
				<AVal Column="9" Row="1">0</AVal>
				<AVal Column="10" Row="1">0</AVal>
				<AVal Column="11" Row="1">0</AVal>
				<AVal Column="12" Row="1">0</AVal>
				<AVal Column="13" Row="1">0</AVal>
				<AVal Column="14" Row="1">0</AVal>
				<AVal Column="15" Row="1">0</AVal>
				<AVal Column="16" Row="1">0</AVal>
				<AVal Column="17" Row="1">0</AVal>
				<AVal Column="18" Row="1">0</AVal>
				<AVal Column="19" Row="1">0</AVal>
				<AVal Column="20" Row="1">0</AVal>
				<AVal Column="21" Row="1">0</AVal>
				<AVal Column="22" Row="1">0</AVal>
				<AVal Column="23" Row="1">0</AVal>
				<AVal Column="24" Row="1">0</AVal>
				<AVal Column="25" Row="1">0</AVal>
				<AVal Column="26" Row="1">0</AVal>
			</ArrayValues>
		</Length>
		<String Name="MEP_StrConnectionData">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="3">
				<AVal Column="1" Row="1"><![CDATA[""]]></AVal>
				<AVal Column="2" Row="1"><![CDATA[""]]></AVal>
				<AVal Column="3" Row="1"><![CDATA[""]]></AVal>
			</ArrayValues>
		</String>
		<Length Name="gs_AddConnections">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="2">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0</AVal>
			</ArrayValues>
		</Length>
		<Length Name="MEP_NumConnectedConnectionData">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="26">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0</AVal>
				<AVal Column="3" Row="1">0</AVal>
				<AVal Column="4" Row="1">0</AVal>
				<AVal Column="5" Row="1">0</AVal>
				<AVal Column="6" Row="1">0</AVal>
				<AVal Column="7" Row="1">0</AVal>
				<AVal Column="8" Row="1">0</AVal>
				<AVal Column="9" Row="1">0</AVal>
				<AVal Column="10" Row="1">0</AVal>
				<AVal Column="11" Row="1">0</AVal>
				<AVal Column="12" Row="1">0</AVal>
				<AVal Column="13" Row="1">0</AVal>
				<AVal Column="14" Row="1">0</AVal>
				<AVal Column="15" Row="1">0</AVal>
				<AVal Column="16" Row="1">0</AVal>
				<AVal Column="17" Row="1">0</AVal>
				<AVal Column="18" Row="1">0</AVal>
				<AVal Column="19" Row="1">0</AVal>
				<AVal Column="20" Row="1">0</AVal>
				<AVal Column="21" Row="1">0</AVal>
				<AVal Column="22" Row="1">0</AVal>
				<AVal Column="23" Row="1">0</AVal>
				<AVal Column="24" Row="1">0</AVal>
				<AVal Column="25" Row="1">0</AVal>
				<AVal Column="26" Row="1">0</AVal>
			</ArrayValues>
		</Length>
		<String Name="LibraryLangCode">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value><![CDATA["RUS"]]></Value>
		</String>
		<Length Name="ConPosX_3">
			<Description><![CDATA[" Connection Position X"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ConPosY_3">
			<Description><![CDATA[" Connection Position Y"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ConPosX_4">
			<Description><![CDATA[" Connection Position X"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ConPosY_4">
			<Description><![CDATA[" Connection Position Y"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ConPosX_5">
			<Description><![CDATA[" Connection Position X"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="ConPosY_5">
			<Description><![CDATA[" Connection Position Y"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="sinkCornerDistY">
			<Description><![CDATA["Sink Corner Distance (Sink Type 2)"]]></Description>
			<Value>0.03</Value>
		</Length>

		<!-- gs_list: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_list">
			<Description><![CDATA["Parameters for Listing"]]></Description>
			<Fix/>
		</Title>
		<Integer Name="ifc_subtype">
			<Description><![CDATA["IFC Subtype"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Integer Name="ifc_predefinedtype">
			<Description><![CDATA["IFC Predefined Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<String Name="gs_list_manufacturer">
			<Description><![CDATA["Manufacturer"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_ProductName">
			<Description><![CDATA["Product Name"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_GUID">
			<Description><![CDATA["Product ID"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_material">
			<Description><![CDATA["Material"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_gauge">
			<Description><![CDATA["Gauge Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<RealNum Name="gs_list_area">
			<Description><![CDATA["Area"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<RealNum Name="gs_list_volume">
			<Description><![CDATA["Volume"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<RealNum Name="gs_list_cost">
			<Description><![CDATA["Cost"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="gs_list_note">
			<Description><![CDATA["Note/Remarks"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_location">
			<Description><![CDATA["Location"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_accessories">
			<Description><![CDATA["Accessories"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_Type">
			<Description><![CDATA["Group Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Механическое Оборудование"]]></Value>
		</String>
		<Integer Name="iFMType">
			<Description><![CDATA["Group Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>12</Value>
		</Integer>
		<String Name="FM_InventoryNumber">
			<Description><![CDATA["Inventory Number"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_SerialNumber">
			<Description><![CDATA["Serial Number"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_ProductionYear">
			<Description><![CDATA["Production Year"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<RealNum Name="FM_ObjectWeight">
			<Description><![CDATA["Object Weight"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="FM_ObjectWeightUnit">
			<Description><![CDATA["Object Weight Unit"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["кг"]]></Value>
		</String>
		<String Name="gs_list_custom1">
			<Description><![CDATA["User Defined 1"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom2">
			<Description><![CDATA["User Defined 2"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom3">
			<Description><![CDATA["User Defined 3"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom4">
			<Description><![CDATA["User Defined 4"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom5">
			<Description><![CDATA["User Defined 5"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>

		<!-- gs_onorm_Title: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_onorm_Title">
			<Description><![CDATA["Additional Listing Parameters"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
		</Title>
		<String Name="gs_onorm_dimensions">
			<Description><![CDATA["Dimensions W/D/H"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_manufacturer">
			<Description><![CDATA["Additional Manufacturer"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_baseheight_value">
			<Description><![CDATA["Base Height Value"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_baseheight">
			<Description><![CDATA["Additional Base Height"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_assemblydate">
			<Description><![CDATA["Assembly Date"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_customtext1">
			<Description><![CDATA["Additional Information 1"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_customtext2">
			<Description><![CDATA["Additional Information 2"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_aks">
			<Description><![CDATA["AKS Number"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_product">
			<Description><![CDATA["Product Name"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_leistungbuch">
			<Description><![CDATA["Collection of Specifications ID"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_description">
			<Description><![CDATA["Additional Description"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_number">
			<Description><![CDATA["Additional Number"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_id">
			<Description><![CDATA["ID Number"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_admission">
			<Description><![CDATA["Admission Date"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_modification">
			<Description><![CDATA["Modification Date"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_tozonenumber">
			<Description><![CDATA["To Zone Number"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
	</Parameters>
</ParamSection>

<Picture MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="0" length_in_bytes="1815" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000800000
	00800803000000F4E091F90000003F504C5445FFFFFFB2B2B2A3A3A39B9B9B93
	93938B8B8B7C7C7C393939848484353535515151CACACAD3D3D3EBEBEBE5E5E5
	F3F3F3FBFBFBDBDBDBC5C5C5BABABAABABAB77F1216A000006894944415478DA
	ED58EDB69D2A0CF4B3B5570282BCFFB35E63760C183CEAEA69FB8791EE76ADB3
	DB192793006D2A2A2A2A2A2A2A2A2A2A2A2A1EC039F0D67A706EF917ECD6CC73
	98439811C67B8B42FE9E1230C48C0AF6077F371BACB57F43086C9C0463BC3786
	B46C204B0C3BF2A7F8ED410F0D6271602D0B0981D747087CBB101F887D5D7D23
	5896C539B70B99CDCC852147BEB5348B99096B5CADFA213E8B6347CC4C4AD2D2
	B8DF2C8D3BF8BB76B56589B8C810002E0D479585000019F29A3F1CFC224079C0
	70FB0207208EE03A84580BAF2A03F3076DD72A014A01F13B471F684812D62423
	B37F5A1ACBFC31B61B825DEE1CE087C142C07A4C2BD7262DCDB5210BF3878802
	8A0E2CF88B12400B9F1CE0003FE84FE0ED5E1A9E6BDB32062EF87D60FE2EB6B1
	BDCD002B100DC00F380B08944286EC6E70697C897EF1FC85AEDB1D58EF3340E4
	CC2F1A7011ACDD168AF1F3301EF3AD8552FB73FC91FF91038E1530E04A01228C
	FFAD1F1BC26475FBCD81E3BF0BD8F91F38C08FAA01F3B3041F86480C661D7F80
	DEFD52FE0EF9D981FB2E647E5503A14701813B7C985880DAFD42DB77A8E05917
	88030CC960E6006AF033F38F133BA077BFD8777D1755062E43C00A7406D8027A
	84DF74E30612A0DBAFEB7B7420AA0CE87D2093200A4E19B4A4C1C2F1FEDD2002
	143FD2A380070E48178801B904481D303C05FA5104A8DDA74720FDD71960054E
	3BA02DF8F073C4FA6140052240F8CDBAFD1005481794F7023D0871A91832885F
	28067640E2CFBD41FCAA0B34FF790E1C12207740DE9F40FCE240BEFB21FFE1C0
	5D0670C92454A330AFC0CC251E10EC80E21F1307A2DA0B4A06383D09F5208683
	A2C57F5E049CDA0FE9C501E27F350718401A0E11327E885E4A901C3E433F8EB9
	039281DB0814F9995EF8638FC81DE0F737ED348DA372205E76C1590187406F46
	C72B127F9601E4177BD019B2E085032EAF811EC547FB47B416919660F8615880
	99C3BAB61BE9C6CE7DD07ED58689043D080F07E480B1413B30FC1A029F905003
	CA090195B46D443557212C1F4AF57678B45F44FE4E6560F839B5B3B7DED3795E
	404AD64DCACD66C473A03889BDDC6F76F469174C24606C676B81CF0BD61BB958
	900C75C59110EAF340EE819503562C39C0023CB2033EB868EB4C1C0917571C3D
	07F21379D2FE48AF33200E10881FC1254461288465F01DC7EF42DC425944700D
	A40972FE280E48178803D602AE5402F07B20C0F25D4BAE9FE888C7D2A012447E
	227149FB235207FAB2035C02862311795D0F21811C4141C6988F259244B0C2DF
	6205120706ED00BFBFB5C2CEF4A28136DD86AF9F9FB01228B17E0325486E619F
	76EE508064F0DA015583D483855410E8BF2860E3C466099CD51C384F8E089003
	43A10B889E96D80F429E78403EB006EA06E7E8AD4D98C90E12B4BFBF76409780
	E9893D7180DB2157801FA48155F06820478C31D4B2E0D7561C200BCA0E009520
	0FC16505C8042904529FE0DC3E26CCCA0E745282BE3009CF2170591740568353
	11C4020DE757529094E0D2019004242938E68A38C031600DB42F149138109503
	C5492839B87640D889FF6B0776FEDB36F425F66B7A9170EFC05A0CA138B0F4A7
	2EC075CE8003C5EF5E382021BC7600B804A4401740B04813BE72A0E3512C0E14
	2721F34B0544847AFF170EC41B073802591780909767E1B32ED0A3F8720E900C
	A12F6680E8A50BEFE6C0F56634F50B3B502E8028486BC006BC744077C1344023
	0EF086FCAC11DF664042280E4C9D6B1AB517E82391AEC1230B74179082230353
	8BFCFA4CC8FCB2135E4E221944EFBB601C57FA4BA7BD80F9D51CCA9B8056CABF
	BC9C03E3DC10940319FDD528CEF8EF33202124FE7E1C4CC3C8BA803EB407A033
	F87C37D4211C7BDB304E7B81F033F5FE28FEC77B81DA8CD0820EE42FE47B0191
	670EB842065EEC056A33EAFA2152FC5506F218BAA40F843DED82F7E701E26FE5
	DB853990C6300D009CFB90D6FBF3C0101A8272208BA0BBCE60BA11BC9F843DC5
	5F3970D093078A1E54115843F3741212BF6F047A0E30BD3E97EB2610342F4E44
	D27E3A03B46C49410A6E82A77B412B93B08FD06874BFA6A40BA400BC8A15C8F9
	9F9D0762BFBAE277FAA90D9E15A493A07C1EC0273F143F752010BF06E0254E3C
	C876C3720F9E06E1B30CCCC52FC9AD72BF6983562035501EBCB91774A67982DD
	5970489D56A174227D752F88D1370FB1D007E5DC65EFAF53F0D481D842F31EA2
	441F07DE391055FCDF831D59C482C7E781588CFFEF58F2F254ACE2FF4D429E9E
	074CF32741E4D70E98D537FF128BB7FF941FE351515151515151515151515171
	83FF01589A47EE4615055C0000000049454E44AE426082
	]]>
</Picture>

<CalledMacros SectVersion="2" SectionFlags="0" SubIdent="0">
	<Macro>
		<MName><![CDATA["tapType_m"]]></MName>
		<MainGUID>D8F9E491-FD02-4664-8E12-E1E966386D6A</MainGUID>
	</Macro>
</CalledMacros>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_2D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
pen gs_cont_pen
fill gs_fill_type
drawindex 10

add2 a / 2, b
	gosub gs_sink_type_m * 10
del 1

end



10:
! ==============================================================================
! Sink Type 1
! ==============================================================================

gosub "sinkGeometry"

bMirroredBowl = 0
gosub "nBowl_1"

return



20:
! ==============================================================================
! Sink Type 2
! ==============================================================================

gosub "sinkGeometry"

bMirroredBowl = 0
gosub "nBowl_1"

return



30:
! ==============================================================================
! Sink Type 3
! ==============================================================================

gosub "sinkGeometry"

bMirroredBowl = 0
gosub "nBowl_1"

gosub "border"

return



40:
! ==============================================================================
! Sink Type 4
! ==============================================================================

gosub "sinkGeometry"

for i = 1 to 2
	if i = 1 then
		bMirroredBowl = 0
		gosub "nBowl_1"
	else
		bMirroredBowl = 1
		gosub "nBowl_2"
	endif
next i

gosub "border"

return



50:
! ==============================================================================
! Sink Type 5
! ==============================================================================

gosub "sinkGeometry"

bMirroredBowl = 0
gosub "nBowl_1"
gosub "nBowl_2"
gosub "nBowl_3"

gosub "border"

gosub "drainBoardReed"

return



60:
! ==============================================================================
! Sink Type 6
! ==============================================================================

gosub "sinkGeometry"

for i = 1 to 2
	if i = 1 then
		bMirroredBowl = 0
		gosub "nBowl_1"
	else
		bMirroredBowl = 1
		gosub "nBowl_2"
	endif
next i

gosub "border"

for i = 1 to 2
	gosub "drainBoardReed"
mul2 -1, 1
next i
del 2

return



70:
! ==============================================================================
! Sink Type 7
! ==============================================================================

gosub "sinkGeometry"

bMirroredBowl = 0
gosub "nBowl_1"

gosub "border"

gosub "drainBoardReed"

return



"sinkGeometry":
! ==============================================================================
! Sink Geometry
! ==============================================================================

if SinkSymbol_m = 1 then
	if iSinkGeometry = 1 then
		put	0, 0, 79,
			 a / 2, 0, 1,
			 a / 2, -b,	1,
			-a / 2,	-b, 1,
			-a / 2, 0, 1
	else
		put	0, 0, 79,
			 a / 2, 0, 1,
			 a / 2, -b + sinkCornerRadiusOut,	1,
			 0, -b + radFor2DSimple, 900,
			 0, -b, 3001,

			-a,	0, 800,
			-a / 2,	-b + sinkCornerRadiusOut, 1001,
			-a / 2, 0, 1
	endif
else
if iSinkGeometry = 1 then
	put	0, 0, 79,
		 a / 2 - sinkCornerRadiusOut, 0, 1,
		 a / 2, -sinkCornerRadiusOut, 1001,
		 a / 2, -b + sinkCornerRadiusOut,	1,
		 a / 2 - sinkCornerRadiusOut,	-b, 1001,
		-a / 2 + sinkCornerRadiusOut,	-b, 1,
		-a / 2, -b + sinkCornerRadiusOut, 1001,
		-a / 2, -sinkCornerRadiusOut, 1,
		-a / 2 + sinkCornerRadiusOut, 0, 1001
else
	put	0, 0, 79,
		a / 2 - sinkCornerRadiusOut, 0, 1,
		a / 2, -sinkCornerRadiusOut, 1001,
		a / 2, -b + sinkCornerRadiusOut + sinkCornerDistY, 1,
		sinkCornerRadiusOut, -arch2Angle, 2001

	for i = 1 to iSinkBigResolOut * 2
		put	 sinkCornerRadiusOut2, -(90 - arch2Angle) / iSinkBigResolOut, 2001
	next i

	put	sinkCornerRadiusOut, -arch2Angle, 2001,
		-a / 2, -sinkCornerRadiusOut, 1,
		-a / 2 + sinkCornerRadiusOut, 0, 1001
endif
endif

poly2_b nsp / 3, 1+2+4+64, gs_fill_pen, gs_back_pen,
	get (nsp)

gosub "taps"

return



"nBowl_1":
! ==============================================================================
! 1st Bowl Values
! ==============================================================================

bowlWidth			= bowlWidth1
bowlDepth			= bowlDepth1
drainPosXFromCenter	= drainPosFromBowlCenterX_1
drainPosYFromCenter	= drainPosFromBowlCenterY_1
bowlHeight			= bowlHeight1
add2 bowlPosX_1, bowlPosY_1
	gosub "bowlGeometry"
del 1

return



"nBowl_2":
! ==============================================================================
! 2nd Bowl Values
! ==============================================================================

bowlWidth			= bowlWidth2
bowlDepth			= bowlDepth2
drainPosXFromCenter	= drainPosFromBowlCenterX_2
drainPosYFromCenter	= drainPosFromBowlCenterY_2
bowlHeight			= bowlHeight1
add2 bowlPosX_2, bowlPosY_2
	gosub "bowlGeometry"
del 1

return



"nBowl_3":
! ==============================================================================
! 3rd Bowl Values
! ==============================================================================

bowlWidth			= bowlWidth3
bowlDepth			= bowlDepth3
drainPosXFromCenter	= drainPosFromBowlCenterX_3
drainPosYFromCenter	= drainPosFromBowlCenterY_3
drainDia1			= 0.04
drainDia2			= drainDia1 + 0.02
bowlHeight			= bowlHeight2
add2 bowlPosX_3, bowlPosY_3
	gosub "bowlGeometry"
del 1
drainDia1			= 0.07
drainDia2			= drainDia1 + 0.02

return



"bowlGeometry":
! ==============================================================================
! Bowl
! ==============================================================================

if SinkSymbol_m = 1 then
	if iSinkGeometry = 1 then
		put	0, bowlDepth / 2, 1,
			bowlWidth / 2, bowlDepth / 2, 1,
			bowlWidth / 2, -bowlDepth / 2, 1,
			-bowlWidth / 2, -bowlDepth / 2, 1,
			-bowlWidth / 2, bowlDepth / 2, 1
	else
		put	0, bowlDepth / 2, 1,
			bowlWidth / 2, bowlDepth / 2, 1,
			bowlWidth / 2, -bowlDepth / 2 - sinkWallThkSide + radFor2DSimple - SQR((radFor2DSimple - sinkWallThkSide) ^ 2 - (halfA - sinkWallThkSide) ^ 2), 1,
			0, -b + bowlDepth / 2 + sinkWallThkSide + radFor2DSimple, 900,
			0, -bowlDepth / 2, 3001,
			-a,	0, 800,
			-bowlWidth / 2, -bowlDepth / 2 - sinkWallThkSide + radFor2DSimple - SQR((radFor2DSimple - sinkWallThkSide) ^ 2 - (halfA - sinkWallThkSide) ^ 2), 1001,
			-bowlWidth / 2, bowlDepth / 2, 1
	endif
else
if iSinkGeometry = 1 then
	put	0, bowlDepth / 2, 1,
		bowlWidth / 2 - bowlCornerRadius * (gs_sink_type_m <> 4 or bMirroredBowl) - bowlCornerRadius2 * (gs_sink_type_m = 4 and not(bMirroredBowl)), bowlDepth / 2, 1,
		bowlWidth / 2, bowlDepth / 2 - bowlCornerRadius * (gs_sink_type_m <> 4 or bMirroredBowl) - bowlCornerRadius2 * (gs_sink_type_m = 4 and not(bMirroredBowl)), 1001,
		bowlWidth / 2, -bowlDepth / 2 + bowlCornerRadius, 1,
		bowlWidth / 2 - bowlCornerRadius, -bowlDepth / 2, 1001,
		-bowlWidth / 2 + bowlCornerRadius, -bowlDepth / 2, 1,
		-bowlWidth / 2, -bowlDepth / 2 + bowlCornerRadius, 1001,
		-bowlWidth / 2, bowlDepth / 2 - bowlCornerRadius * (gs_sink_type_m <> 4 or not(bMirroredBowl)) - bowlCornerRadius2 * (gs_sink_type_m = 4 and bMirroredBowl), 1,
		-bowlWidth / 2 + bowlCornerRadius * (gs_sink_type_m <> 4 or not(bMirroredBowl)) + bowlCornerRadius2 * (gs_sink_type_m = 4 and bMirroredBowl), bowlDepth / 2, 1001
else
	put	0, bowlDepth / 2, 1,
		bowlWidth / 2 - bowlCornerRadius * (gs_sink_type_m <> 4) - bowlCornerRadius2 * (gs_sink_type_m = 4), bowlDepth / 2, 1,
		bowlWidth / 2, bowlDepth / 2 - bowlCornerRadius * (gs_sink_type_m <> 4) - bowlCornerRadius2 * (gs_sink_type_m = 4), 1001,
		bowlWidth / 2, -bowlDepth / 2 + bowlCornerRadius + sinkCornerDistY, 1,
		bowlCornerRadius, -arch2Angle, 2001

	for i = 1 to iSinkBigResolOut * 2
		put	 sinkCornerRadiusOut2 - sinkWallThkSide, -(90 - arch2Angle) / iSinkBigResolOut, 2001
	next i

	put	bowlCornerRadius, -arch2Angle, 2001,
		-bowlWidth / 2, bowlDepth / 2 - bowlCornerRadius, 1,
		-bowlWidth / 2 + bowlCornerRadius, bowlDepth / 2, 1001
endif
endif

poly2_b nsp / 3, 1+4, gs_fill_pen, gs_back_pen,
	get (nsp)

! ==============================================================================
! Drain Cut
! ==============================================================================

if SinkSymbol_m = 2 then
	add2 drainPosXFromCenter, drainPosYFromCenter
		circle2 0, 0, drainDia2 / 2
	del 1
endif

return



"drainBoardReed":
! ==============================================================================
! Drainboard Reed
! ==============================================================================

if iDrainBoardDir = 1 then
	reedLength	= drainBoardHeight - reedDist_temp * (SinkSymbol_m = 2) - sinkWallThkSide * (SinkSymbol_m = 1)
	reedNum		= INT((drainBoardWidth - reedDist_temp * 2 * (SinkSymbol_m = 2)) / reedDist_temp)
	reedDist	= (drainBoardWidth - reedDist_temp * 2 * (SinkSymbol_m = 2)) / (reedNum - 1)
else
	reedLength	= drainBoardWidth - reedDist_temp * (SinkSymbol_m = 2) - sinkWallThkSide * (SinkSymbol_m = 1)
	reedNum		= INT((b - sinkWallThkSide * 2 - reedDist_temp * 2 * (SinkSymbol_m = 2)) / reedDist_temp)
	reedDist	= (b - sinkWallThkSide * 2 - reedDist_temp * 2 * (SinkSymbol_m = 2)) / (reedNum - 1)
endif

	put	0, reedLength / 2, 0, -reedLength / 2

	if iDrainBoardDir = 1 then
	add2 -a / 2 + (sinkWallThkSide + reedDist_temp) * (SinkSymbol_m = 2) + sinkWallThkSide * (SinkSymbol_m = 1), -sinkWallThkSide - (drainBoardHeight) / 2 + sinkWallThkSide / 2 * (SinkSymbol_m = 1)
			for re = 1 to reedNum
				if re = reedNum then
					line2 get (nsp)
				else
					line2 use (nsp)
				endif
			add2 reedDist, 0
			next re
			del reedNum
		del 1
	else
	add2 a / 2 - sinkWallThkSide + sinkWallThkSide / 2 * (SinkSymbol_m = 1) - drainBoardWidth / 2, -b + (sinkWallThkSide + reedDist_temp) * (SinkSymbol_m = 2) + sinkWallThkSide * (SinkSymbol_m = 1)
			for re = 1 to reedNum
				rot2 90
					if re = reedNum then
						line2 get (nsp)
					else
						line2 use (nsp)
					endif
				del 1
			add2 0, reedDist
			next re
			del reedNum
		del 1
	endif

return



"taps":
! ==============================================================================
! Taps
! ==============================================================================

if gs_tap_type_m <> 0 & SinkSymbol_m = 2 then
	drawindex 20
	add2 -a / 2 + xOrigTapPos, -b + yOrigTapPos

	call "tapType_m" parameters all	gs_tap_type_m		= tempTapType,
									bEnableTapEdit		= 1,
									bSinkTap			= 1

	del 1
	drawindex 10
endif

return



"border":
! ==============================================================================
! Border
! ==============================================================================

if SinkSymbol_m = 2 then
if gs_sink_type_m = 3 then
	poly2_b 7, 1+4, gs_fill_pen,gs_back_pen,
		0, -sinkWallThkSide, 79,
		a / 2 - sinkCornerRadiusOut,	 -sinkWallThkSide,	1,
		a / 2 - sinkWallThkSide, -sinkCornerRadiusOut, 1001,
		a / 2 - sinkWallThkSide, -drainBoardHeight - sinkWallThkSide - bowlCornerRadius,	0,
		-a / 2 + sinkWallThkSide,	-drainBoardHeight - sinkWallThkSide - bowlCornerRadius,	1,
		-a / 2 + sinkWallThkSide, -sinkCornerRadiusOut, 1,
		-a / 2 + sinkCornerRadiusOut,	 -sinkWallThkSide,	1001
endif

if gs_sink_type_m = 4 then
	poly2_b 13, 1+4, gs_fill_pen,gs_back_pen,
		-sinkWallThkMiddle / 2 - bowlCornerRadius2, -sinkWallThkSide, 0,
		-sinkWallThkMiddle / 2 - bowlCornerRadius2, -sinkWallThkSide - bowlCornerRadius2, 900,
		0, -45, 4001,
		sinkWallThkMiddle / 2 + bowlCornerRadius2 - sin(45) * bowlCornerRadius2, -sinkWallThkSide - bowlCornerRadius2 + sin(45) * bowlCornerRadius2, 1000,
		sinkWallThkMiddle / 2 + bowlCornerRadius2, -sinkWallThkSide, 1000,
		 a / 2 - sinkCornerRadiusOut, -sinkWallThkSide, 0,
		 a / 2 - sinkWallThkSide, -sinkCornerRadiusOut, 1000,
		 a / 2 - sinkWallThkSide, -b + sinkCornerRadiusOut, 0,
		 a / 2 - sinkCornerRadiusOut,	-b + sinkWallThkSide, 1000,
		-a / 2 + sinkCornerRadiusOut,	-b + sinkWallThkSide, 0,
		-a / 2 + sinkWallThkSide, -b + sinkCornerRadiusOut, 1000,
		-a / 2 + sinkWallThkSide, -sinkCornerRadiusOut, 0,
		-a / 2 + sinkCornerRadiusOut, -sinkWallThkSide, 1000
endif

if gs_sink_type_m = 5 then
	add2 -a / 2 + drainBoardWidth / 2 + sinkWallThkSide, 0
	poly2_b 11, 1+4, gs_fill_pen,gs_back_pen,
		0, -sinkWallThkSide, 1,
		drainBoardWidth / 2 - bowlCornerRadius, -sinkWallThkSide,	1,
		drainBoardWidth / 2, -sinkCornerRadiusOut, 1001,

		drainBoardWidth / 2, -drainBoardHeight2 - sinkWallThkSide + bowlCornerRadius,	1,
		drainBoardWidth / 2 + bowlCornerRadius, -drainBoardHeight2 - sinkWallThkSide,	1001,

		drainBoardWidth / 2 + bowlCornerRadius * 2 + sinkWallThkMiddle + bowlCornerRadius, -drainBoardHeight2 - sinkWallThkSide,	0,
		drainBoardWidth / 2 + bowlCornerRadius * 2 + sinkWallThkMiddle + bowlCornerRadius, -b + sinkWallThkSide,	0,
		-drainBoardWidth / 2 + bowlCornerRadius, -b + sinkWallThkSide,	0,
		-drainBoardWidth / 2, -b + sinkCornerRadiusOut,	1001,
		-drainBoardWidth / 2, -sinkCornerRadiusOut, 1,
		-drainBoardWidth / 2 + bowlCornerRadius, -sinkWallThkSide,	1001
	del 1
endif

if gs_sink_type_m = 6 then
	for i = 1 to 2
		add2 -a / 2 + drainBoardWidth / 2 + sinkWallThkSide, 0

		poly2_b 9, 1+4, gs_fill_pen,gs_back_pen,
			0, -sinkWallThkSide, 1,
			drainBoardWidth / 2 - bowlCornerRadius, -sinkWallThkSide,	1,
			drainBoardWidth / 2, -sinkCornerRadiusOut, 1001,
			drainBoardWidth / 2, -drainBoardHeight - sinkWallThkSide + bowlCornerRadius,	1,
			drainBoardWidth / 2 + bowlCornerRadius, -drainBoardHeight - sinkWallThkSide,	1000,
			drainBoardWidth / 2 + bowlCornerRadius * 2, -drainBoardHeight - sinkWallThkSide - bowlCornerRadius,	1000,
			-drainBoardWidth / 2, -drainBoardHeight - sinkWallThkSide - bowlCornerRadius,	1,
			-drainBoardWidth / 2, -sinkCornerRadiusOut, 1,
			-drainBoardWidth / 2 + bowlCornerRadius, -sinkWallThkSide,	1001
		del 1
	mul2 -1, 1
	next i
	del 2
endif

if gs_sink_type_m = 7 then
	poly2_b 6, 1+4, gs_fill_pen,gs_back_pen,
		a / 2 - sinkWallThkSide - drainBoardWidth - bowlCornerRadius, -sinkWallThkSide, 1,
		a / 2 - sinkCornerRadiusOut,	 -sinkWallThkSide, 1,
		a / 2 - sinkWallThkSide, -sinkCornerRadiusOut, 1001,
		a / 2 - sinkWallThkSide, -b + sinkCornerRadiusOut, 1,
		a / 2 - sinkCornerRadiusOut,	-b + sinkWallThkSide, 1001,
		a / 2 - sinkWallThkSide - drainBoardWidth - bowlCornerRadius,	-b + sinkWallThkSide, 0
endif
endif





return
]]>
</Script_2D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_1D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
EPS = 0.0001

! Sink Taps
if gs_tap_type_m = 1 then tempTapType = 7
if gs_tap_type_m = 2 then tempTapType = 2
if gs_tap_type_m = 3 then tempTapType = 3
if gs_tap_type_m = 4 then tempTapType = 4
if gs_tap_type_m = 5 then tempTapType = 5
if gs_tap_type_m = 6 then tempTapType = 9
if gs_tap_type_m = 7 then tempTapType = 12
if gs_tap_type_m = -1 then tempTapType = -1
if gs_tap_type_m = 0 then tempTapType = 0

sinkWallThkBottom	= 0.04				!Sink Wall Thickness Bottom
bowlCornerRadius	= sinkCornerRadiusOut - sinkWallThkSide				!Bowl Radius
bowlCornerRadius2	= 0.11				!Bowl Radius 2 (Sink Type 4)
bowlHeight1			= zzyzx - sinkWallThkBottom
bowlHeight2			= 0.1

drainDia1			= 0.07				!Drain Inner Diameter
drainDia2			= drainDia1 + 0.02	!Drain Outer Diameter
drainHeight			= 0.01				!Drain Height
drainOffset			= 0.11
drainPlateHeight	= 0.01

iSinkGeometry = (gs_sink_type_m <> 2) + (gs_sink_type_m = 2) * 2

if gs_detlevel_3D_m = 2 then			!Sink Type 2
	iSinkBigResolOut = int(gs_resol / 4)
else
	iSinkBigResolOut = int(gs_resol / 16)
endif
iSinkBigResolOut = max(1, iSinkBigResolOut)

! ==============================================================================
! Arched Sink Geometry (Sink Type 2)
! ==============================================================================
halfA = a / 2
sinkCornerDistY = 0.03
sinkCornerDistY2 = sinkCornerRadiusOut + sinkCornerDistY

archCenterDistX = halfA - sinkCornerRadiusOut
arch2Cross = sqr(archCenterDistX ^ 2 + sinkCornerDistY ^ 2) / 2
arch2OrigoDist = ((2 * arch2Cross ^ 2) / sinkCornerDistY) - sinkCornerDistY
sinkCornerRadiusOut2 = arch2OrigoDist + sinkCornerDistY2
arch2Angle = 90 - (2 * asn(arch2Cross / (arch2OrigoDist + sinkCornerDistY)))

radFor2DSimple = (sinkCornerRadiusOut + (halfA ^ 2) / sinkCornerRadiusOut) / 2

bowlPosX_2 = 0
bowlPosY_2 = 0
bowlPosX_3 = 0
bowlPosY_3 = 0

drainPosFromBowlCenterX_2 = 0
drainPosFromBowlCenterY_2 = 0
drainPosFromBowlCenterX_3 = 0
drainPosFromBowlCenterY_3 = 0

if gs_sink_type_m = 1 then
	bowlWidth1	= a - sinkWallThkSide * 2
	bowlDepth1	= b - sinkWallThkSide * 2
	bowlPosX_1	= 0
	bowlPosY_1	= -b / 2
	drainPosFromBowlCenterX_1 = 0
	drainPosFromBowlCenterY_1 = bowlDepth1 / 2 - drainOffset

	xOrigTapPos	= a / 2
	yOrigTapPos	= b + 0.05
endif
if gs_sink_type_m = 2 then
	bowlWidth1	= a - sinkWallThkSide * 2
	bowlDepth1	= b - sinkWallThkSide * 2
	bowlPosX_1	= 0
	bowlPosY_1	= -b / 2
	drainPosFromBowlCenterX_1 = 0
	drainPosFromBowlCenterY_1 = bowlDepth1 / 2 - drainOffset

	xOrigTapPos	= a / 2
	yOrigTapPos	= b + 0.05
endif
if gs_sink_type_m = 3 then
	iDrainBoardDir 		= 1
	drainBoardHeight	= 0.15
	bowlWidth1	= a - sinkWallThkSide * 2
	bowlDepth1	= b - sinkWallThkSide * 2 - drainBoardHeight
	bowlPosX_1	= 0
	bowlPosY_1	= -drainBoardHeight - bowlDepth1 / 2 - sinkWallThkSide
	drainBoardWidth	= bowlWidth1
	drainPosFromBowlCenterX_1 = 0
	drainPosFromBowlCenterY_1 = bowlDepth1 / 2 - drainOffset

	xOrigTapPos	= a / 2
	yOrigTapPos	= b - drainBoardHeight
endif
if gs_sink_type_m = 4 then
	bowlWidth1	= (a - sinkWallThkSide * 2 - sinkWallThkMiddle) / 2
	bowlDepth1	= b - sinkWallThkSide * 2
	bowlPosX_1	= -a / 2 + bowlWidth1 / 2 + sinkWallThkSide
	bowlPosY_1	= -b / 2
	drainPosFromBowlCenterX_1 = bowlWidth1 / 2 - drainOffset
	drainPosFromBowlCenterY_1 = bowlDepth1 / 2 - drainOffset

	bowlWidth2	= (a - sinkWallThkSide * 2 - sinkWallThkMiddle) / 2
	bowlDepth2	= b - sinkWallThkSide * 2
	bowlPosX_2	= a / 2 - bowlWidth2 / 2 - sinkWallThkSide
	bowlPosY_2	= -b / 2
	drainPosFromBowlCenterX_2 = -bowlWidth2 / 2 + drainOffset
	drainPosFromBowlCenterY_2 = bowlDepth2 / 2 - drainOffset

	xOrigTapPos	= a / 2
	yOrigTapPos	= b + 0.05
endif
if gs_sink_type_m = 5 then
	iDrainBoardDir 		= 1
	drainBoardHeight	= 0.23
	bowlWidth1	= (a - sinkWallThkSide * 2 - sinkWallThkMiddle) / 2
	bowlDepth1	= b - sinkWallThkSide * 2 - drainBoardHeight
	bowlPosX_1	= -a / 2 + bowlWidth1 / 2 + sinkWallThkSide
	bowlPosY_1	= -drainBoardHeight - bowlDepth1 / 2 - sinkWallThkSide
	drainBoardWidth	= bowlWidth1
	drainPosFromBowlCenterX_1 = 0
	drainPosFromBowlCenterY_1 = bowlDepth1 / 2 - drainOffset

	drainBoardHeight2	= 0.18
	bowlWidth2	= (a - sinkWallThkSide * 2 - sinkWallThkMiddle) / 2
	bowlDepth2 = b - sinkWallThkSide * 2 - drainBoardHeight2
	bowlPosX_2	= a / 2 - bowlWidth2 / 2 - sinkWallThkSide
	bowlPosY_2	= -drainBoardHeight2 - bowlDepth2 / 2 - sinkWallThkSide
	drainPosFromBowlCenterX_2 = 0
	drainPosFromBowlCenterY_2 = bowlDepth2 / 2 - drainOffset

	drainBoardHeight3	= sinkWallThkSide + drainBoardHeight2
	bowlWidth3	= 0.25
	bowlDepth3 = drainBoardHeight2 - sinkWallThkSide
	bowlPosX_3	= a / 2 - bowlWidth3 / 2 - sinkWallThkSide
	bowlPosY_3	= -bowlDepth3 / 2 - sinkWallThkSide
	drainPosFromBowlCenterX_3 = 0
	drainPosFromBowlCenterY_3 = 0

	xOrigTapPos	= a / 2
	yOrigTapPos	= b - drainBoardHeight2
endif
if gs_sink_type_m = 6 then
	iDrainBoardDir 		= 1
	drainBoardHeight	= 0.18
	bowlWidth1	= (a - sinkWallThkSide * 2 - sinkWallThkMiddle) / 2
	bowlDepth1	= b - sinkWallThkSide * 2 - drainBoardHeight
	bowlPosX_1	= -a / 2 + bowlWidth1 / 2 + sinkWallThkSide
	bowlPosY_1	= -drainBoardHeight - bowlDepth1 / 2 - sinkWallThkSide
	drainBoardWidth	= bowlWidth1 - bowlCornerRadius * 2
	drainPosFromBowlCenterX_1 = bowlWidth1 / 2 - drainOffset
	drainPosFromBowlCenterY_1 = bowlDepth1 / 2 - drainOffset

	bowlWidth2	= (a - sinkWallThkSide * 2 - sinkWallThkMiddle) / 2
	bowlDepth2	= b - sinkWallThkSide * 2 - drainBoardHeight
	bowlPosX_2	= a / 2 - bowlWidth2 / 2 - sinkWallThkSide
	bowlPosY_2	= -drainBoardHeight - bowlDepth2 / 2 - sinkWallThkSide
	drainBoardWidth	= bowlWidth2 - bowlCornerRadius * 2
	drainPosFromBowlCenterX_2 = -bowlWidth2 / 2 + drainOffset
	drainPosFromBowlCenterY_2 = bowlDepth2 / 2 - drainOffset

	xOrigTapPos	= a / 2
	yOrigTapPos	= b - drainBoardHeight
endif
if gs_sink_type_m = 7 then
	iDrainBoardDir 		= 2
	drainBoardWidth	= 0.37
	bowlWidth1	= a - sinkWallThkSide * 2 - drainBoardWidth
	bowlDepth1	= b - sinkWallThkSide * 2
	bowlPosX_1	= -a / 2 + bowlWidth1 / 2 + sinkWallThkSide
	bowlPosY_1	= -b / 2
	drainPosFromBowlCenterX_1 = 0
	drainPosFromBowlCenterY_1 = bowlDepth1 / 2 - drainOffset

	xOrigTapPos	= sinkWallThkSide + bowlWidth1 / 2
	yOrigTapPos	= b + 0.05
endif

bEnableDrainBoard	= (gs_sink_type_m = 3 or gs_sink_type_m = 5 or gs_sink_type_m = 6 or gs_sink_type_m = 7)

if bEnableDrainBoard then
	! ==============================================================================
	! Drainboard Reed
	! ==============================================================================
	reedThk			= 0.003
	reedWidth		= 0.01
	reedDist_temp	= 0.04
endif

]]>
</Script_1D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_PR SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_PR>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_UI SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_UI>

<Comment SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Comment>

<Copyright SectVersion="1" SectionFlags="0" SubIdent="0">
	<Author>GRAPHISOFT</Author>
	<License>
		<Type>CC BY-ND</Type>
		<Version>3.0</Version>
	</License>
</Copyright>

</Symbol>
