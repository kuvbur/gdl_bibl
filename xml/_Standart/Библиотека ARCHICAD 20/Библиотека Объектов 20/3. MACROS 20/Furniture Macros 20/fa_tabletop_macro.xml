<?xml version="1.0" encoding="UTF-8"?>
<Symbol IsArchivable="true" IsPlaceable="false" MainGUID="8075C0E9-C8EF-4E7C-B3FA-B1E25021717A" MigrationValue="Normal" Owner="1196638531" Signature="1196644685" Version="43">
<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_3D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
if gs_detlevel_3D_m = 0 then end
if gs_detlevel_3D_m = 1 then		! Simple
	gs_tabletop_edge_style_m = 1	! Rectangular
endif

pen gs_cont_pen

resEdge		= max(int(gs_resol / 4), 4)
resCorner	= max(int(gs_resol / 1.5), 4)
resTable	= max(gs_resol, 8)

resEdge		= 4 * ceil(resEdge / 4)
resCorner	= 4 * ceil(resCorner / 4)
resTable	= 4 * ceil(resTable / 4)


! =========================================================================
! Middle hotspot
! =========================================================================
hotspot A/2, B/2, 0,	unID : unID = unID + 1


! =========================================================================
! Tabletop edge profile
! =========================================================================

if gs_tabletop_edge_style_m = 1 then	! Rectangular
	put 0,0,0,
		0,gs_table_thickness,0
	numEdgesNodes = 2
endif
if gs_tabletop_edge_style_m = 2 then	! Half-Rounded
	alpha = 0
	da = 360 / resEdge
	for i=1 to resEdge / 4 + 1
		put gs_table_thickness - gs_table_thickness * cos(alpha), gs_table_thickness * sin(alpha), 1
		alpha = alpha + da
	next i
	numEdgesNodes = resEdge / 4 + 1
endif
if gs_tabletop_edge_style_m = 3 then	! Rounded
	da = 360 / resEdge
	alpha = -90
	for i=1 to resEdge / 2 + 1
		put gs_table_thickness/2 - gs_table_thickness/2 * cos(alpha), gs_table_thickness/2 + gs_table_thickness/2 * sin(alpha), 1
		alpha = alpha + da
	next i
	numEdgesNodes = resEdge / 2 + 1
endif


! =========================================================================
! Tabletop contour
! =========================================================================

legOffsetBase = 0.065

if gs_tabletop_style_m = 1 then		! Rectangle
	put 0,0,0,
		A,0,0,
		A,B,0,
		0,B,0

	legOffsetLeftX	= legOffsetBase
	legOffsetRightX	= legOffsetBase
	legOffsetY		= legOffsetBase
endif

bHalfcircleA = (abs(gs_radius_1 - A/2) < EPS)
bHalfcircleB = (abs(gs_radius_1 - B/2) < EPS)

if gs_tabletop_style_m = 2 or gs_tabletop_style_m = 5 then		! Rounded Rectangle, Oval
	da = 360 / resCorner
	alpha = 180
	for i=1 to resCorner / 4 + not(bHalfcircleA)
		put gs_radius_1 + gs_radius_1 * cos(alpha), gs_radius_1 + gs_radius_1 * sin(alpha), 1
		alpha = alpha + da
	next i
	alpha = 270
	for i=1 to resCorner / 4 + not(bHalfcircleB)
		put A - gs_radius_1 + gs_radius_1 * cos(alpha), gs_radius_1 + gs_radius_1 * sin(alpha), 1
		alpha = alpha + da
	next i
	alpha = 0
	for i=1 to resCorner / 4 + not(bHalfcircleA)
		put A - gs_radius_1 + gs_radius_1 * cos(alpha), B - gs_radius_1 + gs_radius_1 * sin(alpha), 1
		alpha = alpha + da
	next i
	alpha = 90
	for i=1 to resCorner / 4 + not(bHalfcircleB)
		put gs_radius_1 + gs_radius_1 * cos(alpha), B - gs_radius_1 + gs_radius_1 * sin(alpha), 1
		alpha = alpha + da
	next i

	if gs_tabletop_style_m = 2 then
		legOffsetLeftX	= legOffsetBase + gs_radius_1/2
		legOffsetRightX	= legOffsetBase + gs_radius_1/2
		legOffsetY		= legOffsetBase + gs_radius_1/2
	else
		if abs(A - B) < EPS then
			legOffsetLeftX	= A/5
			legOffsetRightX	= A/5
			legOffsetY		= A/5
		else
			if A < B then
				legOffsetLeftX	= legOffsetBase
				legOffsetRightX	= legOffsetBase
				legOffsetY		= gs_radius_1
			else
				legOffsetLeftX	= gs_radius_1
				legOffsetRightX	= gs_radius_1
				legOffsetY		= legOffsetBase
			endif
		endif
	endif
endif

if gs_tabletop_style_m = 3 or gs_tabletop_style_m = 6 then		! Rounded Rectangle on One Side, Oval on One Side
	da = 360 / resCorner
	put 0,0,0
	alpha = 270
	for i=1 to resCorner / 4 + not(bHalfcircleB)
		put A - gs_radius_1 + gs_radius_1 * cos(alpha), gs_radius_1 + gs_radius_1 * sin(alpha), 1
		alpha = alpha + da
	next i
	alpha = 0
	for i=1 to resCorner / 4 + 1
		put A - gs_radius_1 + gs_radius_1 * cos(alpha), B - gs_radius_1 + gs_radius_1 * sin(alpha), 1
		alpha = alpha + da
	next i
	put 0,B,0

	if gs_tabletop_style_m = 3 then
		legOffsetLeftX	= legOffsetBase + gs_radius_1/2
		legOffsetRightX	= legOffsetBase + gs_radius_1/2
		legOffsetY		= legOffsetBase + gs_radius_1/2
	else
		legOffsetLeftX	= legOffsetBase
		legOffsetRightX	= gs_radius_1
		legOffsetY		= legOffsetBase
	endif
endif

if gs_tabletop_style_m = 4 or gs_tabletop_style_m = 9 then		! Ellipse, Round
	ratio = B/A
	da = 360 / resTable
	alpha = 0
	for i=1 to resTable
		put A/2 + A/2 * cos(alpha), B/2 + ratio * A/2 * sin(alpha), 1
		alpha = alpha + da
	next i

	legOffsetLeftX	= A/5
	legOffsetRightX	= A/5
	legOffsetY		= B/5
endif

if gs_tabletop_style_m = 7 or gs_tabletop_style_m = 8 then		! Curved Edge, Curved Edge on One Side

	beta = asn(B/2/gs_radius_2)
	da = 4*beta / resCorner

	if gs_tabletop_style_m = 7 then		! Curved Edge

		alpha = -beta
		for i=1 to resCorner / 2 + not(bMinRadius)
			put A - gs_radius_2 + gs_radius_2 * cos(alpha), B/2 + gs_radius_2 * sin(alpha), not(i=1 or i=resCorner / 2 + 1)
			alpha = alpha + da
		next i

		alpha = 180 - beta
		for i=1 to resCorner / 2 + not(bMinRadius)
			put gs_radius_2 + gs_radius_2 * cos(alpha), B/2 + gs_radius_2 * sin(alpha), not(i=1 or i=resCorner / 2 + 1)
			alpha = alpha + da
		next i
	endif

	if gs_tabletop_style_m = 8 then		! Curved Edge on One Side
		put 0,0,0
		alpha = -beta
		for i=1 to resCorner / 2 + 1
			put A - gs_radius_2 + gs_radius_2 * cos(alpha), B/2 + gs_radius_2 * sin(alpha), not(i=1 or i=resCorner / 2 + 1)
			alpha = alpha + da
		next i
		put 0,B,0
	endif

	if gs_tabletop_style_m = 7 then
		legOffsetLeftX	= gs_radius_2 - gs_radius_2 * cos(beta) + legOffsetBase/2
		legOffsetRightX	= gs_radius_2 - gs_radius_2 * cos(beta) + legOffsetBase/2
		legOffsetY		= legOffsetBase
	else
		legOffsetLeftX	= legOffsetBase
		legOffsetRightX	= gs_radius_2 - gs_radius_2 * cos(beta) + legOffsetBase/2
		legOffsetY		= legOffsetBase
	endif
endif

numPathNodes = nsp/3 - numEdgesNodes

! =========================================================================

addz -gs_table_thickness
gosub 100
del 1

! =========================================================================

end legOffsetLeftX, legOffsetRightX, legOffsetY, unID

! =========================================================================

100:

act = 0
actVERT = 0
actEDGE = 0
DIM ContInd[100][4] ! Contour Start Indices:
					!   [i][1] = VERT
					!   [i][2] = EDGE
					!   [i][3] = number of Basenodes
					!   [i][4] = number of Pathnodes

DIM basenode [20][3]  ! Max. Number of Basenodes = 20
DIM pathnode [100][3] ! Max. Number of Pathnodes = 100


BASE

!!!WHILE NSP DO
	act = act+1
	ContInd[act][1] = actVERT
	ContInd[act][2] = actEDGE
	GOSUB 200
!!!ENDWHILE


! Creating Top Surface

MATERIAL gs_top_mat

IF act>1 THEN
	status = 16 + 32 ! concave poligon + poligon with hole(s)
ELSE
	status = 16 ! concave poligon
ENDIF

FOR j=1 TO act
	IF j>1 THEN PUT 0
	FOR i=0 TO ContInd[j][4]-1 ! number of Pathnodes
		PUT (ContInd[j][2] + ContInd[j][3]*(i+1))
	NEXT i
NEXT j

PGON NSP,0,status, GET(NSP)


! Creating Bottom Surface

MATERIAL gs_top_mat

IF act>1 THEN
	status = 16 + 32 ! concave poligon + poligon with hole(s)
ELSE
	status = 16 ! concave poligon
ENDIF

FOR j=1 TO act
	IF j>1 THEN PUT 0
	FOR i=ContInd[j][4]-1 TO 0 STEP -1  ! number of Pathnodes
		PUT -(ContInd[j][2] + ContInd[j][3]*i + 1)
	NEXT i
NEXT j

PGON NSP,0,status, GET(NSP)


BODY -1

RETURN


200:
! Creating Contour

n = numEdgesNodes
m = numPathNodes

ContInd[act][3] = n
ContInd[act][4] = m


FOR i=1 TO n
	basenode [i][1]=GET (1)
	basenode [i][2]=GET (1)
	basenode [i][3]=GET (1)
NEXT i
FOR i=2 TO m+1
	pathnode [i][1]=GET (1)
	pathnode [i][2]=GET (1)
	pathnode [i][3]=GET (1)
NEXT i

IF pathnode [2][1]<>pathnode [m+1][1] OR pathnode [2][2]<>pathnode [m+1][2] THEN
! The polyline is open, so we close it
	m=m+1
	pathnode [m+1][1]=pathnode [2][1]
	pathnode [m+1][2]=pathnode [2][2]
	pathnode [m+1][3]=pathnode [2][3]
ENDIF
! Set the begining and the end normal vectors
pathnode [1][1]=pathnode [m][1]
pathnode [1][2]=pathnode [m][2]
pathnode [1][3]=pathnode [m][3]
pathnode [m+2][1]=pathnode [3][1]
pathnode [m+2][2]=pathnode [3][2]
pathnode [m+2][3]=pathnode [3][3]
m=m+1

! The begining vector [1]->[2]
dx=pathnode [2][1]-pathnode[1][1]
dy=pathnode [2][2]-pathnode[1][2]
GOSUB 10
fok=alfa
alfa_prev=alfa


! Creating Vertices

FOR i=2 TO m-1
	dx=pathnode [i+1][1]-pathnode [i][1]
	dy=pathnode [i+1][2]-pathnode [i][2]
	GOSUB 10

	beta=alfa_prev-alfa-180
	IF beta<0 THEN beta=beta+360
	IF beta>360 THEN beta=beta-360
	fok=alfa+beta/2
	lenghting=1/SIN(beta/2)

	alfa_prev=alfa

	FOR j=1 TO n
		x1=basenode [j][1]
		y1=basenode [j][2]
		VERT lenghting*x1*cos(fok)+pathnode [i][1],
			lenghting*x1*sin(fok)+pathnode [i][2],
			y1
		actVERT = actVERT+1
	NEXT j
NEXT i

! Creating Edges

firstHEdge = actEDGE

! Horizontal lines
FOR i=0 TO m-3
	FOR j=1 TO n

		IF basenode [j][3] THEN
			IF j=1 OR j=n THEN
				status=0    ! Visible Edge
			ELSE
				status=2        ! Edge of a Curved Surface
			ENDIF
		ELSE
			status=0            ! Visible Edge
		ENDIF

		IF i=m-3 THEN
			EDGE ContInd[act][1] + i*n+j, ContInd[act][1] + j, -1,-1,status
		ELSE
			EDGE ContInd[act][1] + i*n+j, ContInd[act][1] + (i+1)*n+j, -1,-1,status
		ENDIF
		actEDGE = actEDGE+1

	NEXT j
NEXT i

firstVEdge = actEDGE

! Vertical lines
FOR i=0 TO m-3
	status=0
	FOR j=1 TO n-1
		IF basenode [j][2] = basenode [j+1][2] THEN
			status=1
		ELSE
			IF pathnode [i+2][3] THEN
				status=2
			ELSE
				status=0
			ENDIF
		ENDIF

		EDGE ContInd[act][1] + i*n+j, ContInd[act][1] + i*n+j+1, -1,-1,status

		actEDGE = actEDGE+1
	NEXt j
NEXT i


! Creating Side Poligons

MATERIAL gs_top_edge_mat
FOR i=0 TO m-3
	FOR j=1 TO n-1
		status=0

		IF basenode [j][3] OR basenode [j+1][3] THEN
			status=2        ! Poligon of a Curved Surface
		ENDIF

		IF ABS (basenode [j][2] - basenode [j+1][2]) > EPS AND (pathnode [i+2][3] OR pathnode [i+3][3]) THEN
			status=2
		ENDIF

		IF i=m-3 THEN
			PGON 4,0,status,
				-(firstVEdge + i*(n-1) + j),
				firstHEdge + i*n + j,
				firstVEdge + j,
				-(firstHEdge + i*n + j+1)
		ELSE
			PGON 4,0,status,
				-(firstVEdge + i*(n-1) + j),
				firstHEdge + i*n + j,
				firstVEdge + (i+1)*(n-1) + j,
				-(firstHEdge + i*n + j+1)
		ENDIF
	NEXT j
NEXT i

RETURN


10:
! Direction Angle

IF ABS (dx) < EPS THEN
	IF dy > 0 THEN
		alfa = 90
		RETURN
	ELSE
		alfa = 270
		RETURN
	ENDIF
ENDIF
IF ABS (dy) < EPS THEN
	IF dx > 0 THEN
		alfa = 0
		RETURN
	ELSE
		alfa = 180
		RETURN
	ENDIF
ENDIF
alfa = ATN (dy / dx)
IF dx > 0 AND dy > 0 THEN RETURN
IF dx > 0 AND dy < 0 THEN
	alfa = 360 + alfa
	RETURN
ENDIF
IF dx < 0 AND dy > 0 THEN
	alfa = 180 + alfa
	RETURN
ENDIF
IF dx < 0 AND dy < 0 THEN
	alfa = 180 + alfa
	RETURN
ENDIF

RETURN
]]>
</Script_3D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_2D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
pen gs_cont_pen

!!!unID = 1
!!!hotspot2 0,b/2,	unID : unID = unID + 1
!!!hotspot2 a,b/2,	unID : unID = unID + 1
!!!hotspot2 a/2,0,	unID : unID = unID + 1
!!!hotspot2 a/2,b,	unID : unID = unID + 1
!!!hotspot2 a/2,b/2,	unID : unID = unID + 1


fill gs_fill_type

if gs_tabletop_style_m = 1 then		! Rectangle
	poly2_b 4, 1+2+4+64, gs_fill_pen, gs_back_pen,
		0,0,1,
		0,b,1,
		a,b,1,
		a,0,1

	hotline2 0,0,A,0
	hotline2 A,0,A,B
	hotline2 A,B,0,B
	hotline2 0,B,0,0
endif

if gs_tabletop_style_m = 2 then		! Rounded Rectangle
	poly2_b 9, 1+2+4+64, gs_fill_pen, gs_back_pen,
		A - gs_radius_1, 0, 1,
		gs_radius_1, 0, 1,
		0, gs_radius_1, 1001,
		0, B - gs_radius_1, 1,
		gs_radius_1, B, 1001,
		A - gs_radius_1, B, 1,
		A, B - gs_radius_1, 1001,
		A, gs_radius_1, 1,
		A - gs_radius_1, 0, 1001

	hotline2 0,0,A,0
	hotline2 A,0,A,B
	hotline2 A,B,0,B
	hotline2 0,B,0,0
endif

if gs_tabletop_style_m = 3 then		! Rounded Rectangle on One Side
	poly2_b 6, 1+2+4+64, gs_fill_pen, gs_back_pen,
		0, 0, 1,
		0, B, 1,
		A - gs_radius_1, B, 1,
		A, B - gs_radius_1, 1001,
		A, gs_radius_1, 1,
		A - gs_radius_1, 0, 1001

	hotline2 0,0,A,0
	hotline2 A,0,A,B
	hotline2 A,B,0,B
	hotline2 0,B,0,0
endif

if gs_tabletop_style_m = 4 or gs_tabletop_style_m = 9 then		! Ellipse, Round
	mul2 1,B/A
	poly2_b 2, 1+2+4+64, gs_fill_pen, gs_back_pen,
		A/2,A/2,901,
		A/2,360,4001
!	hotarc2 A/2, A/2, A/2, 0, 180
!	hotarc2 A/2, A/2, A/2, 180, 0
	del 1
endif

if gs_tabletop_style_m = 5 then		! Oval
	if abs(A - B) < EPS then
		poly2_b 2, 1+2+4+64, gs_fill_pen, gs_back_pen,
			A/2,A/2,901,
			A/2,360,4001
		hotarc2 A/2, A/2, A/2, 0, 180
		hotarc2 A/2, A/2, A/2, 180, 0
	else
		if A < B then
			poly2_b 5, 1+2+4+64, gs_fill_pen, gs_back_pen,
				0, A/2, 1,
				0, B - A/2, 1,
				A, B - A/2, 1001,
				A, A/2, 1,
				0, A/2, 1001
			hotline2 0,A/2, 0,B - A/2
			hotline2 A,A/2,A, B - A/2
			hotarc2 A/2, B - A/2, A/2, 0, 180
			hotarc2 A/2, A/2, A/2, 180, 0
		else
			poly2_b 5, 1+2+4+64, gs_fill_pen, gs_back_pen,
				A - B/2, 0, 1,
				B/2, 0, 1,
				B/2, B, 1001,
				A - B/2, B, 1,
				A - B/2, 0, 1001
			hotline2 B/2,0, A - B/2,0
			hotline2 B/2,B, A - B/2,B
			hotarc2 B/2, B/2, B/2, 90, 270
			hotarc2 A - B/2, B/2, B/2, 270, 90
		endif
	endif
endif

if gs_tabletop_style_m = 6 then		! Oval on One Side
	if abs(gs_radius_1 - A/2) < EPS then
		poly2_b 6, 1+2+4+64, gs_fill_pen, gs_back_pen,
			0,0,1,
			0,B,1,
			A/2,B,1,
			A,B - A/2, 1001,
			A,A/2,1,
			A/2,0,1001
		hotline2 0,0, A/2,0
		hotline2 0,B, A/2,B
		hotline2 A,A/2, A,B-A/2
		hotarc2 A/2, B-A/2, A/2, 0, 90
		hotarc2 A/2, A/2, A/2, 270, 0
	else
		poly2_b 5, 1+2+4+64, gs_fill_pen, gs_back_pen,
			A - B/2, 0, 1,
			0, 0, 1,
			0, B, 1,
			A - B/2, B, 1,
			A - B/2, 0, 1001
		hotline2 0,0, A - B/2,0
		hotline2 0,B, A - B/2,B
		hotarc2 A - B/2, B/2, B/2, 270, 90
	endif
	hotline2 0,0, 0,B
endif

if gs_tabletop_style_m = 7 or gs_tabletop_style_m = 8 then		! Curved Edge, Curved Edge on One Side
	beta = asn(B/2/gs_radius_2)

	cx = gs_radius_2 * cos(beta)
	cy = gs_radius_2 * sin(beta)

	if gs_tabletop_style_m = 7 then		! Curved Edge
		poly2_b 8, 1+2+4+64, gs_fill_pen, gs_back_pen,
			A - gs_radius_2 + cx, 0, 1,
			A - gs_radius_2, B/2, 901,
			A,B/2,3001,
			A - gs_radius_2 + cx, B, 3001,
			gs_radius_2 - cx, B, 1,
			gs_radius_2, B/2, 901,
			0,B/2,3001,
			gs_radius_2 - cx, 0, 3001
		hotline2 gs_radius_2 - cx, 0, A - gs_radius_2 + cx, 0
		hotline2 gs_radius_2 - cx, B, A - gs_radius_2 + cx, B
		hotarc2 gs_radius_2, B/2, gs_radius_2, 180 - beta, 180 + beta
		hotarc2 A - gs_radius_2, B/2, gs_radius_2, -beta, beta
	endif
	if gs_tabletop_style_m = 8 then		! Curved Edge on One Side
		poly2_b 6, 1+2+4+64, gs_fill_pen, gs_back_pen,
			A - gs_radius_2 + cx, 0, 1,
			A - gs_radius_2, B/2, 901,
			A,B/2,3001,
			A - gs_radius_2 + cx, B, 3001,
			0,B,1,
			0,0,1
		hotline2 0, 0, A - gs_radius_2 + cx, 0
		hotline2 0, B, A - gs_radius_2 + cx, B
		hotarc2 A - gs_radius_2, B/2, gs_radius_2, -beta, beta
	endif
	hotline2 0,0, 0,B
endif

]]>
</Script_2D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_1D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
EPS = 0.0001

if gs_tabletop_edge_style_m = 2 or gs_tabletop_edge_style_m = 3 then	! Half-Rounded, Rounded
	gs_radius_1 = max(gs_radius_1, gs_table_thickness)
endif

if gs_tabletop_style_m = 5 or gs_tabletop_style_m = 6 then		! Oval, Oval on One Side
	gs_radius_1 = min(A,B)/2
else
	gs_radius_1 = min(gs_radius_1, min(A,B)/2)
endif

if gs_tabletop_style_m = 7 or gs_tabletop_style_m = 8 then		! Curved Edge, Curved Edge on One Side
	if A < B then
		minRadius = (A^2 + B^2) / (4 *A)
		gs_radius_2 = max(gs_radius_2, minRadius)
		bMinRadius = abs((gs_radius_2 - minRadius) < EPS)
	else
		gs_radius_2 = max(gs_radius_2, B/2)
		bMinRadius = 0
	endif
endif

]]>
</Script_1D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_VL SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
if gs_tabletop_edge_style_m = 1 then
	minRadius = 0.001
else
	minRadius = gs_table_thickness
endif

values "gs_tabletop_edge_style"	gs_tabletop_edge_style_string
values "gs_tabletop_edge_style_m"	1, 2, 3
values "gs_table_thickness"		range(0,min(A,B)/2)
values "gs_radius_1"			range[minRadius, min(A,B)/2]
values "gs_radius_2"			range[B/2,)

dim gs_tabletop_style_s[]
dim iEnabledTableTopStyles[]

j = 1
for i=1 to vardim1(gs_tabletop_style_string)
	if bittest(iTabletopStyleMask, i-1) then
		gs_tabletop_style_s[j] =  gs_tabletop_style_string[i]
		iEnabledTableTopStyles[j] = j
		j = j + 1
	endif
next i

values "gs_tabletop_style" gs_tabletop_style_s
values "gs_tabletop_style_m" iEnabledTableTopStyles

if not(gs_tabletop_style_m = 2 or gs_tabletop_style_m = 3) then
	lock "gs_radius_1"
	hideparameter "gs_radius_1"
endif
if not(gs_tabletop_style_m = 7 or gs_tabletop_style_m = 8) then
	lock "gs_radius_2"
	hideparameter "gs_radius_2"
endif

if GLOB_MODPAR_NAME = "gs_tabletop_style" then
	gs_tabletop_style_m = 1
	if gs_tabletop_style = gs_tabletop_style_string[2] then gs_tabletop_style_m = 2
	if gs_tabletop_style = gs_tabletop_style_string[3] then gs_tabletop_style_m = 3
	if gs_tabletop_style = gs_tabletop_style_string[4] then gs_tabletop_style_m = 4
	if gs_tabletop_style = gs_tabletop_style_string[5] then gs_tabletop_style_m = 5
	if gs_tabletop_style = gs_tabletop_style_string[6] then gs_tabletop_style_m = 6
	if gs_tabletop_style = gs_tabletop_style_string[7] then gs_tabletop_style_m = 7
	if gs_tabletop_style = gs_tabletop_style_string[8] then gs_tabletop_style_m = 8
	if gs_tabletop_style = gs_tabletop_style_string[9] then gs_tabletop_style_m = 9
	parameters gs_tabletop_style_m = gs_tabletop_style_m
else
	gs_tabletop_style = gs_tabletop_style_string[1]
	if gs_tabletop_style_m = 2 then gs_tabletop_style = gs_tabletop_style_string[2]
	if gs_tabletop_style_m = 3 then gs_tabletop_style = gs_tabletop_style_string[3]
	if gs_tabletop_style_m = 4 then gs_tabletop_style = gs_tabletop_style_string[4]
	if gs_tabletop_style_m = 5 then gs_tabletop_style = gs_tabletop_style_string[5]
	if gs_tabletop_style_m = 6 then gs_tabletop_style = gs_tabletop_style_string[6]
	if gs_tabletop_style_m = 7 then gs_tabletop_style = gs_tabletop_style_string[7]
	if gs_tabletop_style_m = 8 then gs_tabletop_style = gs_tabletop_style_string[8]
	if gs_tabletop_style_m = 9 then gs_tabletop_style = gs_tabletop_style_string[9]
	parameters gs_tabletop_style = gs_tabletop_style
endif

if GLOB_MODPAR_NAME = "gs_tabletop_edge_style" then
	gs_tabletop_edge_style_m = 1
	if gs_tabletop_edge_style = gs_tabletop_edge_style_string[2] then gs_tabletop_edge_style_m = 2
	if gs_tabletop_edge_style = gs_tabletop_edge_style_string[3] then gs_tabletop_edge_style_m = 3
	parameters gs_tabletop_edge_style_m = gs_tabletop_edge_style_m
else
	gs_tabletop_edge_style = gs_tabletop_edge_style_string[1]
	if gs_tabletop_edge_style_m = 2 then gs_tabletop_edge_style = gs_tabletop_edge_style_string[2]
	if gs_tabletop_edge_style_m = 3 then gs_tabletop_edge_style = gs_tabletop_edge_style_string[3]
	parameters gs_tabletop_edge_style = gs_tabletop_edge_style
endif

]]>
</Script_VL>

<ParamSection SectVersion="22" SectionFlags="0" SubIdent="0">
	<ParamSectHeader>
		<AutoHotspots>false</AutoHotspots>
		<StatBits>
			<STBit_FixSize/>
			<STBit_UIUseHierarchicalPages/>
		</StatBits>
		<WDLeftFrame>0</WDLeftFrame>
		<WDRightFrame>0</WDRightFrame>
		<WDTopFrame>0</WDTopFrame>
		<WDBotFrame>0</WDBotFrame>
		<LayFlags>65535</LayFlags>
		<WDMirrorThickness>0</WDMirrorThickness>
		<WDWallInset>0</WDWallInset>
	</ParamSectHeader>
	<Parameters>
		<Length Name="A">
			<Description><![CDATA["Width"]]></Description>
			<Fix/>
			<Value>1.2</Value>
		</Length>
		<Length Name="B">
			<Description><![CDATA["Depth"]]></Description>
			<Fix/>
			<Value>0.6</Value>
		</Length>
		<Length Name="zzyzx">
			<Description><![CDATA["Tabletop Height"]]></Description>
			<Fix/>
			<Value>0.75</Value>
		</Length>
		<Boolean Name="AC_show2DHotspotsIn3D">
			<Description><![CDATA["Show 2D Hotspots in 3D"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="ac_bottomlevel">
			<Description><![CDATA["Bottom Level"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="ac_toplevel">
			<Description><![CDATA["Top Level"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Integer Name="gs_detlevel_3D_m">
			<Description><![CDATA["3D Detail Level"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="iTabletopStyleMask">
			<Description><![CDATA["Tabletop Style Mask"]]></Description>
			<Value>511</Value>
		</Integer>
		<String Name="gs_tabletop_style">
			<Description><![CDATA["Tabletop Style"]]></Description>
			<Value><![CDATA["Прямоугольный"]]></Value>
		</String>
		<Integer Name="gs_tabletop_style_m">
			<Description><![CDATA["Tabletop Style"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="gs_tabletop_style_string">
			<Description><![CDATA["Tabletop Styles"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="9" SecondDimension="0">
				<AVal Row="1"><![CDATA["Прямоугольный"]]></AVal>
				<AVal Row="2"><![CDATA["Закругленные Углы"]]></AVal>
				<AVal Row="3"><![CDATA["Закругленные Углы с одной Стороны"]]></AVal>
				<AVal Row="4"><![CDATA["Эллипс"]]></AVal>
				<AVal Row="5"><![CDATA["Овал"]]></AVal>
				<AVal Row="6"><![CDATA["Закругленный с Одной Стороны"]]></AVal>
				<AVal Row="7"><![CDATA["Криволинейный Торец"]]></AVal>
				<AVal Row="8"><![CDATA["Криволинейный Торец с Одной Стороны"]]></AVal>
				<AVal Row="9"><![CDATA["Круглая"]]></AVal>
			</ArrayValues>
		</String>
		<Length Name="gs_radius_1">
			<Description><![CDATA["Radius"]]></Description>
			<Value>0.075</Value>
		</Length>
		<Length Name="gs_radius_2">
			<Description><![CDATA["Radius"]]></Description>
			<Value>0.67</Value>
		</Length>
		<String Name="gs_tabletop_edge_style">
			<Description><![CDATA["Tabletop Edge Style"]]></Description>
			<Value><![CDATA["Закругленный"]]></Value>
		</String>
		<Integer Name="gs_tabletop_edge_style_m">
			<Description><![CDATA["Tabletop Edge Style"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>3</Value>
		</Integer>
		<String Name="gs_tabletop_edge_style_string">
			<Description><![CDATA["Tabletop Edge Styles"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="3" SecondDimension="0">
				<AVal Row="1"><![CDATA["Прямоугольный"]]></AVal>
				<AVal Row="2"><![CDATA["Закругленный"]]></AVal>
				<AVal Row="3"><![CDATA["Закругленный"]]></AVal>
			</ArrayValues>
		</String>
		<Length Name="gs_table_thickness">
			<Description><![CDATA["Table Thickness"]]></Description>
			<Value>0.03</Value>
		</Length>

		<!-- gs_2D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_2D_representation">
			<Description><![CDATA["2D Representation"]]></Description>
			<Fix/>
		</Title>
		<PenColor Name="gs_cont_pen">
			<Description><![CDATA["Contour Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>4</Value>
		</PenColor>
		<FillPattern Name="gs_fill_type">
			<Description><![CDATA["Fill Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_fill_pen">
			<Description><![CDATA["Fill Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_back_pen">
			<Description><![CDATA["Fill Background Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>

		<!-- gs_3D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_3D_representation">
			<Description><![CDATA["3D Representation"]]></Description>
		</Title>
		<Integer Name="gs_resol">
			<Description><![CDATA["Resolution"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>24</Value>
		</Integer>

		<!-- gs_material: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_material">
			<Description><![CDATA["Surfaces"]]></Description>
			<Fix/>
		</Title>
		<Material Name="gs_leg_mat">
			<Description><![CDATA["Leg"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="gs_top_mat">
			<Description><![CDATA["Tabletop"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>14</Value>
		</Material>
		<String Name="uiStrings">
			<Description><![CDATA["UI Strings"]]></Description>
			<ArrayValues FirstDimension="2" SecondDimension="0">
				<AVal Row="1"><![CDATA["Стиль Столешницы"]]></AVal>
				<AVal Row="2"><![CDATA["Торец Столешницы"]]></AVal>
			</ArrayValues>
		</String>
		<Integer Name="unID">
			<Description><![CDATA["Hotspot ID"]]></Description>
			<Value>1</Value>
		</Integer>

		<!-- gs_list: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_list">
			<Description><![CDATA["Parameters for Listing"]]></Description>
			<Fix/>
		</Title>
		<RealNum Name="gs_list_cost">
			<Description><![CDATA["Cost"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="gs_list_manufacturer">
			<Description><![CDATA["Manufacturer"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_note">
			<Description><![CDATA["Note/Remarks"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_location">
			<Description><![CDATA["Location"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_accessories">
			<Description><![CDATA["Accessories"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_Type">
			<Description><![CDATA["Group Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Мебель"]]></Value>
		</String>
		<Integer Name="iFMType">
			<Description><![CDATA["Group Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>16</Value>
		</Integer>
		<String Name="FM_InventoryNumber">
			<Description><![CDATA["Inventory Number"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_SerialNumber">
			<Description><![CDATA["Serial Number"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_ProductionYear">
			<Description><![CDATA["Production Year"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<RealNum Name="FM_ObjectWeight">
			<Description><![CDATA["Object Weight"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="FM_ObjectWeightUnit">
			<Description><![CDATA["Object Weight Unit"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["кг"]]></Value>
		</String>
		<String Name="gs_list_custom1">
			<Description><![CDATA["User Defined 1"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom2">
			<Description><![CDATA["User Defined 2"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom3">
			<Description><![CDATA["User Defined 3"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom4">
			<Description><![CDATA["User Defined 4"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom5">
			<Description><![CDATA["User Defined 5"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Material Name="gs_top_edge_mat">
			<Description><![CDATA["Tabletop Edge"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>78</Value>
		</Material>
	</Parameters>
</ParamSection>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="1" length_in_bytes="323" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000350000
	010002030000006E48D64900000009504C5445FF0000000000FFFFFFCA92C399
	0000000174524E530040E6D866000000DE49444154785EED96B10DC230104549
	113648936932828B98821198C6052398C24C09A7609FF290AC48B1942BF2BBD7
	F9FDE3475C5A66F02582E33B2755F0445667369DCF7182D7A210617422CA4175
	4633AC1F396EB9EF89F1BF3ADB13764AB7AFC0ABF09784A785FA9FDF534085D3
	828FAC3F0975A58D801F3FB0E1AC8078061E090508421FE5A03ACBE9BD64CE06
	F745D709685971D7410FB8EFDE73431FE5B03AFBDFE719077405555031296A39
	8A618DB18E4D3F9BDB3140A12618510EAAB31C9FC30D1E35C93A1E357622ABB3
	FFFF8A1BB43149A28DB10756D7321F37983C65B82FC7D60000000049454E44AE
	426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="2" length_in_bytes="208" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000350000
	00600203000000C0CBD2A700000009504C5445FF0000000000FFFFFFCA92C399
	0000000174524E530040E6D8660000006B49444154785EEDD1B10D8030100340
	966009A6F8115284BD7E88A4B0A744290099E2A588482081BBAB5E7E4F2333AF
	471A17EE41C89FFABAD745F7CD0D67052421AB09E9CAAAA4295D59940849537A
	0F4BCCCFECDB927523A49E51684FFDF9C6218F2A20AA8F7479DDD86C239B9884
	516511CE0000000049454E44AE426082
	]]>
</GDLPict>

<Ancestry SectVersion="1" SectionFlags="0" SubIdent="0" Template="false">
	<MainGUID>F938E33A-329D-4A36-BE3E-85E126820996</MainGUID>
	<MainGUID>103E8D2C-8230-42E1-9597-46F84CCE28C0</MainGUID>
	<MainGUID>C76BC373-89AE-4368-A490-BB2485825242</MainGUID>
	<MainGUID>FC9AA201-5720-4CD0-AA2F-A9E9D5812565</MainGUID>
</Ancestry>

<CalledMacros SectVersion="2" SectionFlags="0" SubIdent="0">
</CalledMacros>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_PR SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_PR>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_UI SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
pageStartY = 5

x1 = 5
x2 = 45
y = pageStartY

numStyles = 0
for i=1 to vardim1(gs_tabletop_style_string)
	if bittest(iTabletopStyleMask, i-1) then
		numStyles = numStyles + 1
	endif
next i

if numStyles > 1 then
	dim tabletopStyleID[]
	j = 1
	for i=1 to vardim1(gs_tabletop_style_string)
		if bittest(iTabletopStyleMask, i-1) then
			tabletopStyleID[i]	=  i
		else
			tabletopStyleID[i] =  0
		endif
	next i

	ui_style 0,1
	ui_outfield uiStrings[1], x1, y, 130,20
	y = y + 25

	ui_style 0,0
	ui_infield{3} "gs_tabletop_style_m",		x2,	y, 65, 40,
		2, 1, 8, 8,			! ui_tabletop_shape.png
		53, 32, 53, 32,
		1, gs_tabletop_style_string[1], tabletopStyleID[1],
		2, gs_tabletop_style_string[2], tabletopStyleID[2],
		3, gs_tabletop_style_string[3], tabletopStyleID[3],
		4, gs_tabletop_style_string[4], tabletopStyleID[4],
		5, gs_tabletop_style_string[5], tabletopStyleID[5],
		6, gs_tabletop_style_string[6], tabletopStyleID[6],
		7, gs_tabletop_style_string[7], tabletopStyleID[7],
		8, gs_tabletop_style_string[8], tabletopStyleID[8]
	y = y + 70
else
	y = y
endif

ui_style 0,1
ui_outfield uiStrings[2], x1, y, 130,20
y = y + 25

ui_style 0,0
ui_infield{3} "gs_tabletop_edge_style_m",		x2,	y, 65, 40,
	2, 2, 3, 3,				! ui_tabletop_edge.png
	53, 32, 53, 32,
	1, gs_tabletop_edge_style_string[1], 1,
	2, gs_tabletop_edge_style_string[2], 2,
	3, gs_tabletop_edge_style_string[3], 3
]]>
</Script_UI>

<Comment SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Comment>

<Copyright SectVersion="1" SectionFlags="0" SubIdent="0">
	<Author>GRAPHISOFT</Author>
	<License>
		<Type>CC BY-ND</Type>
		<Version>3.0</Version>
	</License>
</Copyright>

</Symbol>
