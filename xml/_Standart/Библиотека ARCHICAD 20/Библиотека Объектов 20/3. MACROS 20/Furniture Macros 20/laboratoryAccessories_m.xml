<?xml version="1.0" encoding="UTF-8"?>
<Symbol IsArchivable="false" IsPlaceable="false" MainGUID="670885A9-68AA-4186-93AA-C175B7681750" MigrationValue="Normal" Owner="1196638531" Signature="1196644685" Version="38">
<Ancestry SectVersion="1" SectionFlags="0" SubIdent="0" Template="false">
	<MainGUID>F938E33A-329D-4A36-BE3E-85E126820996</MainGUID>
	<MainGUID>103E8D2C-8230-42E1-9597-46F84CCE28C0</MainGUID>
	<MainGUID>B2970E4C-8680-4061-8670-2F4B638F3953</MainGUID>
</Ancestry>

<CalledMacros SectVersion="2" SectionFlags="0" SubIdent="0">
</CalledMacros>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_3D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
unID = start_unID

if gs_detlevel_3D_m = DET3D_NONE then end
if GLOB_CONTEXT > 20 and GLOB_CONTEXT < 40 then gs_detlevel_3D_m = DET3D_SIMPLE
if NOT(gs_shadow) then SHADOW OFF
pen gs_cont_pen

_resol	= gs_resol * (gs_detlevel_3D_m = DET3D_DETAILED) + 8 * (gs_detlevel_3D_m = DET3D_SIMPLE)
resol _resol

! ======================================================================
! Complete Shelf
! ======================================================================

if bShelves then
	material shelfFrameMat

	add 0, -shelfDepth + shelfDepth / 2 * bDoubleRow, tableHeight
		for shv = 1 to (1 + bDoubleRow)
			for shh = 1 to 2
				hotspot 0,	0,	0,				unID, shelfHeight, 1 + 128:		unID = unID + 1
				hotspot 0,	0,	-1,				unID, shelfHeight, 3:			unID = unID + 1
				hotspot 0,	0,	shelfHeight,	unID, shelfHeight, 2:			unID = unID + 1

				addx shelfWidth
			next shh
			del 2
			addy shelfDepth
		next shv
		del (1 + bDoubleRow)
	del 1

	add 0, 0, tableHeight
		for shv = 1 to (1 + bDoubleRow)
			for shh = 1 to 2
				hotspot 0,	0,					0,	unID, halfShelfDepth, 1 + 128,	shelfDepth:		unID = unID + 1
				hotspot 0,	1,					0,	unID, halfShelfDepth, 3,		shelfDepth:		unID = unID + 1
				hotspot 0,	-halfShelfDepth,	0,	unID, halfShelfDepth, 2,		shelfDepth:		unID = unID + 1

				addx shelfWidth
			next shh
			del 2
			muly -1
		next shv
		del (1 + bDoubleRow)
	del 1

	add shelfWidth / 2, shelfDepth / 2 * bDoubleRow, tableHeight
	
	! ======================================================================
	! Shelf Frame
	! ======================================================================

	rotx 90
	
	mask	= 15
	if bConnectionLeft then
		cutpolya 4, 1, 0,
			-shelfWidth / 2, 0, mask,
			-shelfWidth / 2, shelfHeight * 2, mask,
			-shelfWidth / 2 - bConnectionLeft, shelfHeight * 2, mask,
			-shelfWidth / 2 - bConnectionLeft, 0, mask
	endif
	if bConnectionRight then
		cutpolya 4, 1, 0,
			shelfWidth / 2, 0, mask,
			shelfWidth / 2, shelfHeight * 2, mask,
			shelfWidth / 2 + bConnectionRight, shelfHeight * 2, mask,
			shelfWidth / 2 + bConnectionRight, 0, mask
	endif
	
	prism_ 8, shelfDepth,
		shelfWidth / 2 + bConnectionRight, shelfHeight, 15,
		shelfWidth / 2 + bConnectionRight, 0, 15,
		shelfWidth / 2 - shelfFrameThk + bConnectionRight, 0, 15,
		shelfWidth / 2 - shelfFrameThk + bConnectionRight, shelfHeight - shelfFrameThk, 15,
	
		-shelfWidth / 2 + shelfFrameThk - bConnectionLeft, shelfHeight - shelfFrameThk, 15,
		-shelfWidth / 2 + shelfFrameThk - bConnectionLeft, 0, 15,
		-shelfWidth / 2 - bConnectionLeft, 0, 15,
		-shelfWidth / 2 - bConnectionLeft, shelfHeight, 15
	
	if bConnectionLeft then cutend
	if bConnectionRight then cutend
	
	del 1
	
	
	material shelfMat
	
	! ======================================================================
	! Shelf Reinforcements
	! ======================================================================
	
	if (bConnectionLeft and (iReinforceLeft = REINFORCE_ON)) then
		addx -shelfWidth / 2
		gosub "reinforce"
		del 1
	endif
	
	if (bConnectionRight and (iReinforceRight = REINFORCE_ON)) then
		addx shelfWidth / 2
		gosub "reinforce"
		del 1
	endif
	
	addx -shelfWidth / 2 + shelfStartPosX + reinforceDistHor + shelfReinfThk / 2
	
	for s = 1 to iNumReinforce
		gosub "reinforce"
	
		addx reinforceDistHor + shelfReinfThk
	next s
	del iNumReinforce
	
	del 1
	
	
	! ======================================================================
	! Shelves
	! ======================================================================
	
	add -shelfWidth / 2 + shelfStartPosX, 0, shelfDistVer + powerOutletBackHeight * bPowerOutletShelf
	
	for shHor = 1 to iNumReinforce + 1
	
		for shVer = 1 to iNumShelf
			prism_ 4, shelfThk,
				0, 0, 15,
				0, -shelfDepth, 15,
				reinforceDistHor, -shelfDepth, 15,
				reinforceDistHor, 0, 15

				if bFlasks then gosub "flasks and tubeholders"

			material shelfMat

			addz shelfDistVer + shelfThk
		next shVer
		
		del iNumShelf 
	
		addx reinforceDistHor + shelfReinfThk
	next shHor
	
	del iNumReinforce + 1
	
	del 1
	
	
	! ======================================================================
	! Test Tube Drying Rack
	! ======================================================================
	
	dryingRackLength	= 0.1
	dryingRackDia		= 0.015
	dryingRackAngle		= 60
		
	tempDryingRackYDist	= 0.15
	tempDryingRackZDist	= 0.1
	
	minDryingRackPosY	= 0.1
	minDryingRackPosZ	= 0.2
	
	dryingRackNumHor	= INT((shelfDepth - minDryingRackPosY * 2) / tempDryingRackYDist) + 1
	dryingRackNumVer	= INT((shelfHeight - minDryingRackPosZ * 2) / tempDryingRackZDist) + 1
	
	if dryingRackNumHor > 1 then
		dryingRackYDist	= (shelfDepth - minDryingRackPosY * 2) / (dryingRackNumHor - 1)
	else
		dryingRackYDist		= 0
	endif
	if dryingRackNumVer > 1 then
		dryingRackZDist	= (shelfHeight - minDryingRackPosZ * 2) / (dryingRackNumVer - 1)
	else
		dryingRackZDist	= 0
	endif
	
	material dryingRackMat
	
	add -shelfWidth / 2, ((dryingRackNumHor - 1) * dryingRackYDist) / 2 - shelfDepth / 2, shelfHeight / 2 - ((dryingRackNumVer - 1) * dryingRackZDist) / 2 - dryingRackDia / COS(dryingRackAngle) / 2
	mulx -1
	
	if bEnableDryingRackLeft then gosub "drying rack"
	if bEnableDryingRackRight then
		addx -shelfWidth
		mulx -1
		
		gosub "drying rack"
	
		del 2
	endif
	
	del 2
	
	
	! ======================================================================
	! Power Outlet for shelves
	! ======================================================================
	
	if bPowerOutletShelf then
		material shelfMat
	
		add -shelfWidth / 2 + shelfStartPosX, powerOutletBackThk*0 - shelfDepth / 2 + powerOutletBackFrontOffset*0, shelfDistVer

		for pob = 1 to 1 + bDoubleRow
			add 0, powerOutletBackThk - shelfDepth / 2 + powerOutletBackFrontOffset, 0

			for shHor = 1 to iNumReinforce + 1
				material shelfMat
		
				prism_ 4, powerOutletBackHeight,
					0, 0, 15,
					0, -powerOutletBackThk, 15,
					reinforceDistHor, -powerOutletBackThk, 15,
					reinforceDistHor, 0, 15
		
				add powerOutletStartPosX, -powerOutletBackThk, powerOutletBackHeight / 2 - powerOutletSize / 2
					for p = 1 to iPowerOutletNum
						for po = 1 to 2
							gosub "power outlet"
				
							addx powerOutletSize + (powerOutletBackHeight - powerOutletSize) / 2
						next po
						del 2
						addx powerOutletDist
					next p
					del iPowerOutletNum
				del 1
		
				addx reinforceDistHor + shelfReinfThk
			next shHor
			del iNumReinforce + 1

			del 1

			if iArrangement = ARRANGE_MIRR then
				add 0, 0, 0
				muly 1 - bDoubleRow * 2
			else
				addx (reinforceDistHor + shelfReinfThk) * (iNumReinforce) + reinforceDistHor
				rotz 180
			endif
		next pob	
		del 2 * (1 + bDoubleRow)

		del 1
	endif
	
	del 1
endif


add tableLength / 2, 0, tableHeight

material bsplashMat

! ======================================================================
! Shelf frame cuttings for backsplash
! ======================================================================

if bShelves then
	addy shelfDepth / 2 * bDoubleRow

	if NOT(bConnectionLeft) then
		cutpolya 4, 1, 0,
			-tableLength / 2, 0, 15,
			-tableLength / 2 + shelfFrameThk, 0, 15,
			-tableLength / 2 + shelfFrameThk, -shelfDepth, 15,
			-tableLength / 2, -shelfDepth, 15
	endif

	if NOT(bConnectionRight) then
		cutpolya 4, 1, 0,
			tableLength / 2, 0, 15,
			tableLength / 2 - shelfFrameThk, 0, 15,
			tableLength / 2 - shelfFrameThk, -shelfDepth, 15,
			tableLength / 2, -shelfDepth, 15
	endif


	addx -tableLength / 2 + shelfStartPosX + reinforceDistHor + shelfReinfThk / 2
	
	for s = 1 to iNumReinforce
		cutpolya 4, 1, 0,
			-shelfReinfThk / 2, 0, 15,
			-shelfReinfThk / 2, -shelfDepth, 15,
			shelfReinfThk / 2, -shelfDepth, 15,
			shelfReinfThk / 2, 0, 15
	
		addx reinforceDistHor + shelfReinfThk
	next s
	
	del iNumReinforce
	
	del 1

	del 1	
endif


! ======================================================================
! Backsplash rear
! ======================================================================

if bsplashRear then

	bsplashLength	= tableLength - bsplashThk * bEnableBsplashLeft - bsplashThk * bEnableBsplashRight \
					- (shelfReinfThk / 2 * (bConnectionLeft and bReinforceLeft) + shelfReinfThk / 2 * (bConnectionRight and bReinforceRight)) * bShelves
	mask			= 15 - 1 * (bConnectionLeft and (NOT(bReinforceLeft) | NOT(bShelves))) - 4 * (bConnectionRight and (NOT(bReinforceRight) | NOT(bShelves)))

	addx -tableLength / 2 + bsplashThk * bEnableBsplashLeft + shelfReinfThk / 2 * (bConnectionLeft and bReinforceLeft) * bShelves

	material bsplashMat

	if bDoubleRow then
		rotz 90
		rotx 90
			prism_ 4, bsplashLength,
				-bsplashThk, 0, mask,
				bsplashThk, 0, mask,
				bsplashThkUpper / 2, bsplashHeight, mask,
				-bsplashThkUpper / 2, bsplashHeight, mask
		del 2
	else
		prism_ 4, bsplashHeight,
			0, 0, 15,
			bsplashLength, 0, 15,
			bsplashLength, -bsplashThk, 15,
			0, -bsplashThk, 15
	endif

	del 1
endif


! ======================================================================
! Power Outlet fro backsplash
! ======================================================================

if bsplashRear and bPowerOutletBsplash then
	add -tableLength / 2 + shelfStartPosX, 0, 0

	for pob = 1 to 1 + bDoubleRow
		add 0, -bsplashThk, 0
		rotx (bsplashAngle - 90) * bDoubleRow

		for shHor = 1 to iNumReinforce + 1
			add powerOutletStartPosX, 0, bsplashHeight / 2 - powerOutletSize / 2
				for p = 1 to iPowerOutletNum
					for po = 1 to 2
						gosub "power outlet"
			
						addx powerOutletSize + (bsplashHeight - powerOutletSize) / 2
					next po
					del 2
					addx powerOutletDist
				next p
				del iPowerOutletNum
			del 1
	
			addx reinforceDistHor + shelfReinfThk
		next shHor
		del iNumReinforce + 1

		del 2

		if iArrangement = ARRANGE_MIRR then
			add 0, 0, 0
			muly 1 - bDoubleRow * 2
		else
			addx (reinforceDistHor + shelfReinfThk) * (iNumReinforce) + reinforceDistHor
			rotz 180
		endif
	next pob	
	del 2 * (1 + bDoubleRow)

	del 1
endif


! ======================================================================
! Shelf frame cutends
! ======================================================================

if bShelves then
	if NOT(bConnectionLeft) then
		cutend
	endif
	if NOT(bConnectionRight) then
		cutend
	endif
	
	for s = 1 to iNumReinforce
		cutend
	next s
endif


! ======================================================================
! Backsplash left
! ======================================================================

if bEnableBsplashLeft then
	sideBackSplashPosX	= -tableLength / 2 + bsplashThk / 2

	gosub "side backsplash"
endif


! ======================================================================
! Backsplash right
! ======================================================================

if bEnableBsplashRight then
	sideBackSplashPosX	= tableLength / 2 - bsplashThk / 2

	gosub "side backsplash"
endif

del 1

!================================================================================
end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end
!================================================================================

! ======================================================================
"side backsplash":
! ======================================================================

	material bsplashMat

	add sideBackSplashPosX, 0, 0

		for sb = 1 to 1 + bDoubleRow
			if bDoubleRow then
				addy -shelfDepth / 2 * bShelves
			else
				addy -shelfDepth * bShelves
			endif

			prism_ 4, bsplashHeight,
				-bsplashThk / 2, 0, 15,
				-bsplashThk / 2, -bsplashLengthSide, 15,
				bsplashThk / 2, -bsplashLengthSide, 15,
				bsplashThk / 2, 0, 15

			del 1
	
			muly -1
		next sb
		del 1 + bDoubleRow

	del 1

return



! ======================================================================
"power outlet":
! ======================================================================

	material powerOutletMat

	rotx 90

	add powerOutletSize / 2, powerOutletSize / 2, 0
	cutform 5, 1, 1 + 16,
		0, 0, -1, -powerOutletThk / 2,
		-powerOutletSize / 4, 0, 79,
		0, 1, 800,
		powerOutletSize / 4, 0, 1079,
		0, -1, 800,
		-powerOutletSize / 4, 0, 1079
	del 1

	fprism_ powerOutletMat, powerOutletMat,
		powerOutletMat, powerOutletMat,
		5, powerOutletThk, 20, powerOutletThk / 2,
		0, 0, 15,
		powerOutletSize, 0, 15,
		powerOutletSize, powerOutletSize, 15,
		0, powerOutletSize, 15,
		0, 0, -1

	cutend

	del 1

return



! ======================================================================
"drying rack":
! ======================================================================

	for drHor = 1 to dryingRackNumHor
	
		for drVer = 1 to dryingRackNumVer

			roty -90
			cutplane
			del 1

			addz -dryingRackDia / 2*0
			roty dryingRackAngle*0+90 - dryingRackAngle
			add -dryingRackDia / 2, 0, 0
			
			cylind dryingRackLength, dryingRackDia / 2
			
			del 3

			cutend
			
			addz dryingRackZDist
		next drVer
		
		del dryingRackNumVer
	
		addy -dryingRackYDist
	next drHor
	
	del dryingRackNumHor

return



! ======================================================================
"reinforce":
! ======================================================================

	prism_ 4, shelfHeight - shelfFrameThk,
		-shelfReinfThk / 2, 0, 15,
		-shelfReinfThk / 2, -shelfDepth, 15,
		shelfReinfThk / 2, -shelfDepth, 15,
		shelfReinfThk / 2, 0, 15

return



! ======================================================================
"flasks and tubeholders":
! ======================================================================

	tubeHolderWidth		= 0.25
	tubeHolderHeight	= 0.12
	tubeHolderDepth		= 0.1
	tubeHolderThk		= 0.01
	tubeHolderRad		= 0.04

	dim	tubeHolderPosX[3]
		tubeHolderPosX[1]	= reinforceDistHor * 3 / 16
		tubeHolderPosX[2]	= reinforceDistHor / 2
		tubeHolderPosX[3]	= reinforceDistHor * 13 / 16

	thP	= (INT(RND(shVer + shHor) * 100) MOD 3) + 1		! tube holder position
	tubeHolderPos		= tubeHolderPosX[thp]

	tubeDia				= 0.015
	tubeHeight			= MIN(0.15, shelfDistVer - tubeHolderThk * 2 - 0.02)
	tubeNumX			= 4
	tubeNumY			= 2
	tubeDistX			= (tubeHolderWidth - tubeHolderRad * 2 - tubeDia * 2) / (tubeNumX - 1)
	tubeDistY			= (tubeHolderDepth - tubeDia * 3) / (tubeNumY - 1)


	! ======================================================================
	! Tubeholders
	! ======================================================================

	add tubeHolderPos, tubeHolderDepth / 2 - shelfDepth / 2, shelfThk
		add -tubeDistX * (tubeNumX - 1) / 2, -tubeHolderDepth / 2 - tubeDistY * (tubeNumY - 1) / 2, shelfThk
			for ttY = 1 to tubeNumY
				for ttX = 1 to tubeNumX
					cutform 2, 1, 1 + 16,
						0, 0, -1, 0,
						0, 0, 979,
						tubeDia / 2, 360, 4079

					addx tubeDistX
				next ttX
				del tubeNumX
				addy tubeDistY
			next ttY
			del tubeNumY
		del 1

		rotx 90

		material dryingRackMat
		prism_ 32, tubeHolderDepth,
			tubeHolderWidth / 2 - tubeHolderRad - tubeHolderThk, tubeHolderThk, 15,
			tubeHolderWidth / 2 - tubeHolderRad - tubeHolderThk, 0, 15,
			tubeHolderWidth / 2 - tubeHolderRad, 0, 15,
	
			tubeHolderWidth / 2 - tubeHolderRad, tubeHolderThk, 79,
			1, 0, 800,
			tubeHolderWidth / 2, tubeHolderThk + tubeHolderRad, 1079,
			tubeHolderWidth / 2, tubeHolderHeight - tubeHolderRad, 79,
			0, 1, 800,
			tubeHolderWidth / 2 - tubeHolderRad, tubeHolderHeight, 1079,
			-tubeHolderWidth / 2 + tubeHolderRad, tubeHolderHeight, 79,
			-1, 0, 800,
			-tubeHolderWidth / 2, tubeHolderHeight - tubeHolderRad, 1079,
			-tubeHolderWidth / 2, tubeHolderThk + tubeHolderRad, 79,
			0, -1, 800,
			-tubeHolderWidth / 2 + tubeHolderRad, tubeHolderThk, 1015,
	
			-tubeHolderWidth / 2 + tubeHolderRad, 0, 15,
			-tubeHolderWidth / 2 + tubeHolderRad + tubeHolderThk, 0, 15,
			-tubeHolderWidth / 2 + tubeHolderRad + tubeHolderThk, tubeHolderThk, 15,
	
			tubeHolderWidth / 2 - tubeHolderRad - tubeHolderThk, tubeHolderThk, -1,
	
			tubeHolderWidth / 2 - tubeHolderRad, tubeHolderThk + tubeHolderThk, 79,
			1, 0, 800,
			tubeHolderWidth / 2 - tubeHolderThk, tubeHolderThk + tubeHolderRad, 1079,
			tubeHolderWidth / 2 - tubeHolderThk, tubeHolderHeight - tubeHolderRad, 79,
			0, 1, 800,
			tubeHolderWidth / 2 - tubeHolderRad, tubeHolderHeight - tubeHolderThk, 1079,
			-tubeHolderWidth / 2 + tubeHolderRad, tubeHolderHeight - tubeHolderThk, 79,
			-1, 0, 800,
			-tubeHolderWidth / 2 + tubeHolderThk, tubeHolderHeight - tubeHolderRad, 1079,
			-tubeHolderWidth / 2 + tubeHolderThk, tubeHolderThk + tubeHolderRad, 79,
			0, -1, 800,
			-tubeHolderWidth / 2 + tubeHolderRad, tubeHolderThk + tubeHolderThk, 1079,
			tubeHolderWidth / 2 - tubeHolderRad, tubeHolderThk + tubeHolderThk, -1
	
		del 1

		for ttY = 1 to tubeNumY
			for ttX = 1 to tubeNumX
				cutend
			next ttX
		next ttY

		add -tubeDistX * (tubeNumX - 1) / 2, -tubeHolderDepth / 2 - tubeDistY * (tubeNumY - 1) / 2, shelfThk
			for ttY = 1 to tubeNumY
				for ttX = 1 to tubeNumX

					tma	= (INT(RND(ttY + ttX) * 350) MOD 2) + 1		! for tube material
					te	= (INT(RND(ttY + ttX) * 100) MOD 2) + 1		! for tube existing
		
					if tma = 1 then material flaskMat1 else material flaskMat2

					if te = 1 then
						cylind tubeHeight, tubeDia / 2
					endif
		
					addx tubeDistX
				next ttX
				del tubeNumX
				addy tubeDistY
			next ttY
			del tubeNumY
		del 1

	del 1


	! ======================================================================
	! Flasks
	! ======================================================================

	flaskDia	= 0.02

	dim	flaskData[3][2]		! Diameter, Height
		flaskData[1][1]	= 0.055
		flaskData[2][1]	= 0.07
		flaskData[3][1]	= 0.085

		flaskData[1][2]	= 0.15
		flaskData[2][2]	= 0.12
		flaskData[3][2]	= 0.18

	dim	flaskGroupPosX[3]
		flaskGroupPosX[1]	= reinforceDistHor * 3 / 16
		flaskGroupPosX[2]	= reinforceDistHor / 2
		flaskGroupPosX[3]	= reinforceDistHor * 13 / 16

	fp	= (INT(RND(shVer + shHor) * 250) MOD 3) + 1		! for flask group position
	flaskGroupPos		= flaskGroupPosX[fp]

	if thp = fp then
		if fp = 3 then
			flaskGroupPos = flaskGroupPosX[fp - 1]
		else
			flaskGroupPos = flaskGroupPosX[fp + 1]
		endif
	endif

	add flaskGroupPos, -shelfDepth / 2, shelfThk
		fr	= (INT(RND(shVer + shHor) * 200) MOD 3) + 1		! for flask group rotation
	
		rotz 60 * fr
		for fk = 1 to 3
			fm	= (INT(RND(shVer + shHor + fk) * 150) MOD 3) + 1		! for flask measures
			ft	= (INT(RND(shVer + shHor + fk) * 250) MOD 2) + 1		! for flask type
			fma	= (INT(RND(shVer + shHor + fk) * 350) MOD 2) + 1		! for flask material

			if fma = 1 then material flaskMat1 else material flaskMat2

			add flaskData[fm][1] * 0.7, 0, 0
				if ft = 1 then
					gosub "flask1"
				else
					gosub "flask2"
				endif
			del 1
	
			rotz 120
		next fk
		del 3 + 1
	del 1

return



! ======================================================================
"flask1":
! ======================================================================

	roty -90
		revolve 3, 360, 1 + 2,
			0, flaskData[fm][1] / 2, 2,	
			flaskData[fm][2] / 3, flaskDia / 2, 2,	
			flaskData[fm][2], flaskDia / 2, 2	
	del 1

return



! ======================================================================
"flask2":
! ======================================================================

	roty -90
		revolve 4, 360, 1 + 2,
			0, flaskDia / 2, 1,
			0, 1, 800,
			flaskData[fm][1] - flaskDia / 2, flaskDia / 2, 1002,	
			flaskData[fm][2], flaskDia / 2, 2	
	del 1

return

]]>
</Script_3D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_2D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
unID = start_unID

pen gs_cont_pen
line_type 1
fill gs_fill_type

drawindex 40

! ======================================================================
! Shelf Frame
! ======================================================================

if bShelves then

	for shv = 1 to (1 + bDoubleRow)
		for shh = 1 to 2
			hotspot2 0,	0,					unID, halfShelfDepth, 1 + 128,	shelfDepth:		unID = unID + 1
			hotspot2 0,	1,					unID, halfShelfDepth, 3,		shelfDepth:		unID = unID + 1
			hotspot2 0,	-halfShelfDepth,	unID, halfShelfDepth, 2,		shelfDepth:		unID = unID + 1

			add2 shelfWidth, 0
		next shh
		del 2
		mul2 1, -1
	next shv
	del (1 + bDoubleRow)

	add2 shelfWidth / 2, shelfDepth / 2 * bDoubleRow

	poly2_b 4, 1+2+4+64, gs_fill_pen, gs_back_pen,
		shelfWidth / 2, 0, 1,
		-shelfWidth / 2, 0, bShow2DLeftEdge,
		-shelfWidth / 2, -shelfDepth, 1,
		shelfWidth / 2, -shelfDepth, bShow2DRightEdge	
		
	del 1
endif



add2 tableLength / 2, 0

! ======================================================================
! Backsplash left
! ======================================================================

if bEnableBsplashLeft then
	__sideBackSplashPosX		= -tableLength / 2 + bsplashThk / 2
	__bShow2DLeftBsplashEdge	= 1
	__bShow2DRightBsplashEdge	= bShow2DLeftEdge

	gosub "side backsplash"
endif


! ======================================================================
! Backsplash right
! ======================================================================

if bEnableBsplashRight then
	__sideBackSplashPosX	= tableLength / 2 - bsplashThk / 2
	__bShow2DLeftBsplashEdge	= bShow2DRightEdge
	__bShow2DRightBsplashEdge	= 1

	gosub "side backsplash"
endif


! ======================================================================
! Backsplash rear
! ======================================================================

if bsplashRear and NOT(bShelves) then
	bsplashLength	= tableLength - bsplashThk * bEnableBsplashLeft - bsplashThk * bEnableBsplashRight

	add2 -tableLength / 2 + bsplashThk * bEnableBsplashLeft, 0
		poly2_b 4, 1+4, gs_fill_pen, gs_back_pen,
			0, bsplashThk * bDoubleRow, 1,
			bsplashLength, bsplashThk * bDoubleRow, bShow2DRightEdge,
			bsplashLength, -bsplashThk, 1,
			0, -bsplashThk, bShow2DLeftEdge
	del 1
endif

!================================================================================
end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end
!================================================================================

! ======================================================================
"side backsplash":
! ======================================================================

	add2 __sideBackSplashPosX, 0

		for sb = 1 to 1 + bDoubleRow
			if bDoubleRow then
				add2 0, -shelfDepth / 2 * bShelves
			else
				add2 0, -shelfDepth * bShelves
			endif
		
			poly2_b 4, 1+4, gs_fill_pen, gs_back_pen,
				-bsplashThk / 2, 0, __bShow2DRightBsplashEdge,
				-bsplashThk / 2, -bsplashLengthSide, 1,
				bsplashThk / 2, -bsplashLengthSide, __bShow2DLeftBsplashEdge,
				bsplashThk / 2, 0, 0
			del 1
	
			mul2 1, -1
		next sb
		del 1 + bDoubleRow

	del 1

return

]]>
</Script_2D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_1D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
EPS = 0.0001

DET3D_DETAILED				= 2
DET3D_SIMPLE				= 1
DET3D_NONE					= 0

dim stTestTubeRack[4]
	stTestTubeRack[1] = `Нет`
	stTestTubeRack[2] = `Cо Стороны 1`
	stTestTubeRack[3] = `Cо Стороны 2`
	stTestTubeRack[4] = `Обе Стороны`

DRYINGRACK_NONE				= 0
DRYINGRACK_LEFT				= 1
DRYINGRACK_RIGHT			= 2
DRYINGRACK_BOTH				= 3

ARRANGE_MIRR				= 1
ARRANGE_ROT					= 2

REINFORCE_NONE				= 0
REINFORCE_ON				= 1
REINFORCE_CONN_ELEM			= 2

SIDEVIS_NONE				= 0
SIDEVIS_LEFT				= 1
SIDEVIS_RIGHT				= 2
SIDEVIS_BOTH				= 3

shelfWidth 					= tableLength

shelfReinfThk				= 0.012

powerOutletSize				= 0.08
powerOutletThk				= 0.01

powerOutletBackHeight		= 0.12
powerOutletBackThk			= 0.02
powerOutletBackFrontOffset	= 0.03

maxReinforceDist			= 2
iNumReinforce				= INT(tableLength / maxReinforceDist)

bReinforceLeft				= (iReinforceLeft <> REINFORCE_NONE)
bReinforceRight				= (iReinforceRight <> REINFORCE_NONE)

shelfDistVer				= (shelfHeight - shelfFrameThk - iNumShelf * shelfThk - powerOutletBackHeight * bPowerOutletShelf) / (iNumShelf + 1)

reinforceDistHor			= (shelfWidth - shelfFrameThk * NOT(bConnectionLeft) - shelfFrameThk * NOT(bConnectionRight) \
							- shelfReinfThk / 2 * (bConnectionLeft and bReinforceLeft) - shelfReinfThk / 2 * (bConnectionRight and bReinforceRight) - iNumReinforce * shelfReinfThk) / (iNumReinforce + 1)

maxPowerOutletDist			= 0.6
iPowerOutletNum				= MAX(1, INT(reinforceDistHor / maxPowerOutletDist))
powerOutletDist				= reinforceDistHor / iPowerOutletNum

shelfStartPosX				= shelfFrameThk * NOT(bConnectionLeft) + shelfReinfThk / 2 * (bConnectionLeft and bReinforceLeft)

powerOutletStartPosX		= 0.02

bEnableDryingRackLeft		= (iTestTubeRack = DRYINGRACK_LEFT | iTestTubeRack = DRYINGRACK_BOTH) and NOT(bConnectionLeft)
bEnableDryingRackRight		= (iTestTubeRack = DRYINGRACK_RIGHT | iTestTubeRack = DRYINGRACK_BOTH) and NOT(bConnectionRight)

bShow2DLeftEdge				= (side_vis2D_m = SIDEVIS_LEFT | side_vis2D_m = SIDEVIS_BOTH)
bShow2DRightEdge			= (side_vis2D_m = SIDEVIS_RIGHT | side_vis2D_m = SIDEVIS_BOTH)

! ======================================================================
! Backsplash
! ======================================================================

bsplashThkUpper				= 0.015
shelfReinfThk				= 0.012

powerOutletSize				= 0.08
powerOutletThk				= 0.01

bsplashAngle				= ATN(bsplashHeight / (bsplashThk - bsplashThkUpper / 2))

counterRad					= MIN(topThk * 4 / 5, 0.02)

bsplashOv					= counterRad * (iCounterType = 2)

if bDoubleRow then
	bsplashLengthSide		= tableDepth - counterRad * (iCounterType = 2) - shelfDepth / 2 * bShelves
else
	bsplashLengthSide		= tableDepth - counterRad * (iCounterType = 2) - shelfDepth * bShelves
endif

bEnableBsplashLeft			= bsplashLeft and NOT(bConnectionLeft)
bEnableBsplashRight			= bsplashRight and NOT(bConnectionRight)



]]>
</Script_1D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_PR SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_PR>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_UI SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_UI>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_VL SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
values "testTubeRack" stTestTubeRack
values "iTestTubeRack" DRYINGRACK_NONE, DRYINGRACK_LEFT, DRYINGRACK_RIGHT, DRYINGRACK_BOTH
if GLOB_MODPAR_NAME = "testTubeRack" then
	for i = 1 to vardim1(stTestTubeRack)
		if testTubeRack = stTestTubeRack[i] then iTestTubeRack = i - 1
	next i
	parameters iTestTubeRack = iTestTubeRack
else
	testTubeRack = stTestTubeRack[iTestTubeRack + 1]
	parameters testTubeRack = testTubeRack
endif

if bDoubleRow then
	if GLOB_MODPAR_NAME = "shelfDepth" then
		halfShelfDepth	= shelfDepth / 2
		parameters	halfShelfDepth = halfShelfDepth
	else
		shelfDepth	= halfShelfDepth * 2
		parameters	shelfDepth = shelfDepth
	endif
else
	if GLOB_MODPAR_NAME = "shelfDepth" then
		halfShelfDepth	= shelfDepth
		parameters	halfShelfDepth = halfShelfDepth
	else
		shelfDepth	= halfShelfDepth
		parameters	shelfDepth = shelfDepth
	endif
endif

if NOT(bShelves) then
	lock			"shelfHeight",
					"shelfDepth",
					"iNumShelf",
					"shelfFrameThk",
					"testTubeRack",
					"iTestTubeRack",
					"bPowerOutletShelf",
					"shelfMat",
					"shelfFrameMat"
	hideparameter	"shelfHeight",
					"shelfDepth",
					"iNumShelf",
					"shelfFrameThk",
					"testTubeRack",
					"iTestTubeRack",
					"bPowerOutletShelf",
					"shelfMat",
					"shelfFrameMat"
endif

if NOT(bShelves) | iNumShelf = 0 then
	lock			"shelfThk",
					"bFlasks"
	hideparameter	"shelfThk",
					"bFlasks"
	if NOT(bPowerOutletShelf) then
		lock			"shelfMat"
		hideparameter	"shelfMat"
	endif
endif

if NOT(bShelves) | (iTestTubeRack = DRYINGRACK_NONE and NOT(bFlasks)) then
	lock			"dryingRackMat"
	hideparameter	"dryingRackMat"
endif

if (NOT(bShelves) | NOT(bPowerOutletShelf)) and (NOT(bsplashRear) | NOT(bPowerOutletBsplash)) then
	lock			"powerOutletMat"
	hideparameter	"powerOutletMat"
endif

if iNumShelf = 0 | NOT(bShelves) | NOT(bFlasks) | NOT(bEnableFlasks) then
	lock			"flaskMat1",
					"flaskMat2"
	hideparameter	"flaskMat1",
					"flaskMat2"
endif

if NOT(bsplashRear) and NOT(bsplashLeft) and NOT(bsplashRight) then
	lock			"bsplashHeight",
					"bsplashThk",
					"bsplashMat"
	hideparameter	"bsplashHeight",
					"bsplashThk",
					"bsplashMat"
endif

if NOT(bsplashRear) then
	lock			"bPowerOutletBsplash"
	hideparameter	"bPowerOutletBsplash"
endif

values "shelfHeight" range[0.3, ]
values "shelfDepth" range[0.08, ]
values "halfShelfDepth" range[0.04, ]
values "shelfThk" range(0, ]
values "shelfFrameThk" range(0, ]
values "iNumShelf" 0, 1, 2, 3, 4, 5, 6

values "bsplashThk" range(0, ]
values "bsplashHeight" range(0, ]


]]>
</Script_VL>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_FWM SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_FWM>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_BWM SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_BWM>

<ParamSection SectVersion="26" SectionFlags="0" SubIdent="0">
	<ParamSectHeader>
		<Version>26</Version>
		<AutoHotspots>false</AutoHotspots>
		<StatBits>
			<STBit_FixSize/>
		</StatBits>
		<WDLeftFrame>0</WDLeftFrame>
		<WDRightFrame>0</WDRightFrame>
		<WDTopFrame>0</WDTopFrame>
		<WDBotFrame>0</WDBotFrame>
		<LayFlags>65535</LayFlags>
		<WDMirrorThickness>0</WDMirrorThickness>
		<WDWallInset>0</WDWallInset>
		<SymbolColor>0</SymbolColor>
	</ParamSectHeader>
	<Parameters>
		<Length Name="A">
			<Description><![CDATA["Dimension 1"]]></Description>
			<Fix/>
			<Value>0</Value>
		</Length>
		<Length Name="B">
			<Description><![CDATA["Dimension 2"]]></Description>
			<Fix/>
			<Value>1</Value>
		</Length>
		<Length Name="ZZYZX">
			<Description><![CDATA["Height"]]></Description>
			<Fix/>
			<Value>1</Value>
		</Length>
		<Boolean Name="AC_show2DHotspotsIn3D">
			<Description><![CDATA["Show 2D Hotspots in 3D"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="ac_bottomlevel">
			<Description><![CDATA["Bottom Level"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="ac_toplevel">
			<Description><![CDATA["Top Level"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Boolean Name="gs_shadow">
			<Description><![CDATA["Shadow"]]></Description>
			<Value>1</Value>
		</Boolean>
		<Integer Name="gs_resol">
			<Description><![CDATA["Resolution"]]></Description>
			<Value>12</Value>
		</Integer>
		<Integer Name="gs_detlevel_3D_m">
			<Description><![CDATA["3D Detail Level"]]></Description>
			<Value>2</Value>
		</Integer>
		<Length Name="tableDepth">
			<Description><![CDATA["Table Depth"]]></Description>
			<Value>1</Value>
		</Length>
		<Length Name="tableLength">
			<Description><![CDATA["Table Length"]]></Description>
			<Value>4</Value>
		</Length>
		<Length Name="tableHeight">
			<Description><![CDATA["Table Height"]]></Description>
			<Value>0.9</Value>
		</Length>
		<Boolean Name="bDoubleRow">
			<Description><![CDATA["Double Row"]]></Description>
			<Value>1</Value>
		</Boolean>
		<Integer Name="iArrangement">
			<Description><![CDATA["Arrangement"]]></Description>
			<Value>2</Value>
		</Integer>
		<Length Name="TopThk">
			<Description><![CDATA["Counter Thickness"]]></Description>
			<Value>0.05</Value>
		</Length>
		<Integer Name="iCounterType">
			<Description><![CDATA["Counter Type"]]></Description>
			<Value>1</Value>
		</Integer>
		<Length Name="bsplashHeight">
			<Description><![CDATA["Backsplash Height"]]></Description>
			<Value>0.12</Value>
		</Length>
		<Length Name="bsplashThk">
			<Description><![CDATA["Backsplash Thickness"]]></Description>
			<Value>0.04</Value>
		</Length>
		<Boolean Name="bsplashRear">
			<Description><![CDATA["Backsplash on Rear Side"]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bsplashLeft">
			<Description><![CDATA["Backsplash on Side 1"]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bsplashRight">
			<Description><![CDATA["Backsplash on Side 2"]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bShelves">
			<Description><![CDATA["Shelves"]]></Description>
			<Value>1</Value>
		</Boolean>
		<Length Name="shelfHeight">
			<Description><![CDATA["Shelves Height"]]></Description>
			<Value>1.1</Value>
		</Length>
		<Length Name="shelfDepth">
			<Description><![CDATA["Shelves Depth"]]></Description>
			<Value>0.3</Value>
		</Length>
		<Length Name="halfShelfDepth">
			<Description><![CDATA["Shelves Depth"]]></Description>
			<Value>0.15</Value>
		</Length>
		<Length Name="shelfFrameThk">
			<Description><![CDATA["Frame Thickness"]]></Description>
			<Value>0.04</Value>
		</Length>
		<Length Name="shelfThk">
			<Description><![CDATA["Contour Pen"]]></Description>
			<Value>0.02</Value>
		</Length>
		<Integer Name="iNumShelf">
			<Description><![CDATA["No. of Shelves"]]></Description>
			<Value>3</Value>
		</Integer>
		<PenColor Name="gs_cont_pen">
			<Description><![CDATA["Contour Pen"]]></Description>
			<Value>4</Value>
		</PenColor>
		<FillPattern Name="gs_fill_type">
			<Description><![CDATA["Fill Type"]]></Description>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_fill_pen">
			<Description><![CDATA["Fill Pen"]]></Description>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_back_pen">
			<Description><![CDATA["Fill Background Pen"]]></Description>
			<Value>19</Value>
		</PenColor>
		<Material Name="shelfMat">
			<Description><![CDATA["Shelf"]]></Description>
			<Value>74</Value>
		</Material>
		<Material Name="shelfFrameMat">
			<Description><![CDATA["Shelf Frame"]]></Description>
			<Value>18</Value>
		</Material>
		<Material Name="dryingRackMat">
			<Description><![CDATA["Test Tube Drying Rack"]]></Description>
			<Value>11</Value>
		</Material>
		<Material Name="powerOutletMat">
			<Description><![CDATA["Power Outlet"]]></Description>
			<Value>60</Value>
		</Material>
		<Material Name="flaskMat1">
			<Description><![CDATA["Flasks 1"]]></Description>
			<Value>29</Value>
		</Material>
		<Material Name="flaskMat2">
			<Description><![CDATA["Flasks 2"]]></Description>
			<Value>24</Value>
		</Material>
		<Material Name="bsplashMat">
			<Description><![CDATA["Backsplash"]]></Description>
			<Value>100</Value>
		</Material>
		<String Name="testTubeRack">
			<Description><![CDATA["Test Tube Drying Rack"]]></Description>
			<Value><![CDATA["Нет"]]></Value>
		</String>
		<Integer Name="iTestTubeRack">
			<Description><![CDATA["Test Tube Drying Rack"]]></Description>
			<Value>0</Value>
		</Integer>
		<Boolean Name="bEnableFlasks">
			<Description><![CDATA["Enable Flasks"]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bFlasks">
			<Description><![CDATA["Flasks"]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bPowerOutletShelf">
			<Description><![CDATA["Power Outlets for Shelves"]]></Description>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="bPowerOutletBsplash">
			<Description><![CDATA["Power Outlets for Backsplash"]]></Description>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="bConnectionLeft">
			<Description><![CDATA["Connection on Side 1"]]></Description>
			<Value>0</Value>
		</Boolean>
		<Integer Name="iReinforceLeft">
			<Description><![CDATA["Reinforcement on Side 1"]]></Description>
			<Value>1</Value>
		</Integer>
		<Boolean Name="bConnectionRight">
			<Description><![CDATA["Connection on Side 2"]]></Description>
			<Value>0</Value>
		</Boolean>
		<Integer Name="iReinforceRight">
			<Description><![CDATA["Reinforcement on Side 2"]]></Description>
			<Value>1</Value>
		</Integer>
		<Integer Name="side_vis2D_m">
			<Description><![CDATA["Edge Visibility in 2D"]]></Description>
			<Value>0</Value>
		</Integer>
		<Integer Name="start_unID">
			<Description><![CDATA["unID"]]></Description>
			<Value>1</Value>
		</Integer>
	</Parameters>
</ParamSection>

<Copyright SectVersion="1" SectionFlags="0" SubIdent="0">
	<Author>GRAPHISOFT</Author>
	<License>
		<Type>CC BY-ND</Type>
		<Version>3.0</Version>
	</License>
</Copyright>

<Keywords SectVersion="1" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Keywords>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Comment SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Comment>

</Symbol>
