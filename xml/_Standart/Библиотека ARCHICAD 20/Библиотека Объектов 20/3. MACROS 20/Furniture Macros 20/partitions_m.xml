<?xml version="1.0" encoding="UTF-8"?>
<Symbol IsArchivable="true" IsPlaceable="false" MainGUID="49602ABA-5C58-4C22-8093-5C37A17B8852" MigrationValue="Normal" Owner="1196638531" Signature="1196644685" Version="43">
<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_3D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
unID = partitions_unID

if gs_detlevel_3D_m = 0 then end

if NOT(gs_shadow) then shadow off

if GLOB_CONTEXT > 20 and GLOB_CONTEXT < 40 or gs_detlevel_3D_m = 1 then 		!! for Simple Model and in 3D Windoow
	if GLOB_CONTEXT > 20 and GLOB_CONTEXT < 40 then
		iResol = 3
	else
		iResol = 8
	endif
else
	iResol = gs_resol
endif

resol iResol

pen gs_cont_pen
material gs_partitionFrame_mat

! ======================================================================
! Partition
! ======================================================================

if bOnlyPartitionColumn then
	material gs_partitionFrame_mat * NOT(bOnlyPartitionCover) + gs_top_mat * bOnlyPartitionCover

	add 0, 0, partitionElevation + (tableTopHeight - topThk - partitionElevation) * bOnlyPartitionCover
	if iDeskAngle = 90 then
		prism_ 4, gs_partitionHeight * NOT(bOnlyPartitionCover) + topThk * bOnlyPartitionCover,
			-partitionFrameThk / 2, -partitionFrameThk / 2, 15,
			partitionFrameThk / 2, -partitionFrameThk / 2, 15,
			partitionFrameThk / 2, partitionFrameThk / 2, 15,
			-partitionFrameThk / 2, partitionFrameThk / 2, 15
	endif
	if iDeskAngle = 120 then
		if bPartOfWsSolo then
			add -partitionFrameThk / TAN(iDeskAngle / 2) / 2, -partitionFrameThk / 2, 0
			prism_ 4, gs_partitionHeight * NOT(bOnlyPartitionCover) + topThk * bOnlyPartitionCover,
				0, 0, 15,
				partitionFrameThk / TAN(iDeskAngle / 2), 0, 15,
				partitionFrameThk / TAN(iDeskAngle / 2), partitionFrameThk, 15,
				-partitionFrameThk / TAN(iDeskAngle / 2) * COS(60), partitionFrameThk / TAN(iDeskAngle / 2) * SIN(60), 15
			del 1
		else
			add 0, partitionFrameThk / 2 * TAN(30), 0
			prism_ 3, gs_partitionHeight * NOT(bOnlyPartitionCover) + topThk * bOnlyPartitionCover,
				-partitionFrameThk / 2, 0, 15,
				partitionFrameThk / 2, 0, 15,
				0, -partitionFrameThk / 2 * TAN(60), 15
			del 1
		endif
	endif
	del 1
else
	add xPartOrigPos, yPartOrigPos, 0
	rotz anglePartititon

	if NOT(bCalledAsExtension) and NOT(bPartOfLayout) and NOT(bPartOfWsSolo) then
		add		gs_partitionPos_front[1][1] * (iPartitionLoc = 1) + gs_partitionPos_side1[1][1] * (iPartitionLoc = 2) +\
				gs_partitionPos_side2[1][1] * (iPartitionLoc = 3) + gs_partitionPos_end[1][1] * (iPartitionLoc = 4),\
				gs_partitionPos_front[1][2] * (iPartitionLoc = 1) + gs_partitionPos_side1[1][2] * (iPartitionLoc = 2) +\
				gs_partitionPos_side2[1][2] * (iPartitionLoc = 3) + gs_partitionPos_end[1][2] * (iPartitionLoc = 4), 0
	endif

	addz partitionElevation + (tableTopHeight - topThk - partitionElevation) * bOnlyPartitionCover

	if NOT(bCalledAsExtension) then			!!! Not Called as Extension
		if NOT(bOnlyPartitionCover) then
			pLength	= realPartitionLength
			gosub "partition"
		else
			material gs_top_mat
			pLength	= realPartitionLength
			prism_ 4, topThk,
				pLength / 2, -partitionFrameThk / 2, 15,
				pLength / 2, partitionFrameThk / 2, 15,
				-pLength / 2, partitionFrameThk / 2, 15,
				-pLength / 2, -partitionFrameThk / 2, 15
			fill 4
		endif
	else									!!! Called as Extension
		!!! Left Partition Length from Desk Corner
		material gs_partitionFrame_mat
		pLength	= extPartLengthStart - partitionFrameThk / 2
		add -pLength / 2 - partitionFrameThk / 2, 0, 0
			gosub "partition"
		del 1

		!!! Column on Desk Corner
		material gs_partitionFrame_mat
		prism_ 4, gs_partitionHeight,
			-partitionFrameThk / 2, -partitionFrameThk / 2, 15,
			partitionFrameThk / 2, -partitionFrameThk / 2, 15,
			partitionFrameThk / 2, partitionFrameThk / 2, 15,
			-partitionFrameThk / 2, partitionFrameThk / 2, 15

		!!! Right Partition Length from Desk Corner
		pLength	= extPartLengthEnd - partitionFrameThk / 2
		add pLength / 2 + partitionFrameThk / 2, 0, 0
			gosub "partition"
		del 1
	endif

	del 1

	if NOT(bCalledAsExtension) and NOT(bPartOfLayout) and NOT(bPartOfWsSolo) then del 1



	! ======================================================================
	! 3D Hostspot Editing
	! ======================================================================

	if NOT(bCalledAsExtension) and NOT(bPartOfLayout) and NOT(bPartOfWsSolo) then gosub "3DHotspots"

	del 2
endif

! ======================================================================
partitions_unID = unID
end partitions_unID
! ======================================================================



"partition":
	! ======================================================================
	! Partition Frame
	! ======================================================================

	material gs_partitionFrame_mat

	if iPartitionPos = PARPOS_BETW_D then
		put	-pLength / 2, 0, 15,
			-pLength / 2, gs_partitionHeight, 15,
			pLength / 2, gs_partitionHeight, 15,
			pLength / 2, 0, 15,
			-pLength / 2, 0, -1

		for cDiv = 1 to iPartitionDiv
			put	-pLength / 2 + partitionFrameWidth, fillDist * (cDiv -1) + partitionFrameWidth, 15,
				-pLength / 2 + partitionFrameWidth, fillHeight + fillDist * (cDiv -1) + partitionFrameWidth, 15,
				 pLength / 2 - partitionFrameWidth, fillHeight + fillDist * (cDiv -1) + partitionFrameWidth, 15,
				 pLength / 2 - partitionFrameWidth, fillDist * (cDiv -1) + partitionFrameWidth, 15,
				-pLength / 2 + partitionFrameWidth, fillDist * (cDiv -1) + partitionFrameWidth, -1
		next cDiv
	else
		put	-pLength / 2 - ABS(partCutModLeft), 0, 15,
			-pLength / 2 + partitionFrameWidth, 0, 15,
			-pLength / 2 + partitionFrameWidth, (gs_partitionHeight - partitionFrameWidth), 15,
			 pLength / 2 - partitionFrameWidth, (gs_partitionHeight - partitionFrameWidth), 15,
			 pLength / 2 - partitionFrameWidth, 0, 15,
			 pLength / 2 + ABS(partCutModRight), 0, 15,
			 pLength / 2 + ABS(partCutModRight), gs_partitionHeight, 15,
			-pLength / 2 - ABS(partCutModLeft), gs_partitionHeight, 15,
			-pLength / 2 - ABS(partCutModLeft), 0, -1
	endif

	rotx 90

	if ABS(partCornerCutTypeLeft) = 1 then
		addx -pLength / 2
		roty -ideskAngle / 2 * (partCornerCutTypeLeft = -1) + (180 + ideskAngle / 2) * (partCornerCutTypeLeft = 1)
		cutplane
		del 2
	endif
	if ABS(partCornerCutTypeRight) = 1 then
		addx pLength / 2
		roty 90 / 2 * (partCornerCutTypeRight = -1) + (180 - 90 / 2) * (partCornerCutTypeRight = 1)
		cutplane
		del 2
	endif

	addz -partitionFrameThk / 2
	prism_ NSP / 3, partitionFrameThk,
			get(NSP)
	del 1

	if ABS(partCornerCutTypeLeft) = 1 then cutend
	if ABS(partCornerCutTypeRight) = 1 then cutend


	! ======================================================================
	! Partition Fill
	! ======================================================================

	material gs_partition_mat

	add 0, partitionFrameWidth * (iPartitionPos = PARPOS_BETW_D), -partitionFillThk/2
	for pDiv = 1 to iPartitionDiv * (iPartitionPos = PARPOS_BETW_D) + (iPartitionPos = PARPOS_ABOVE_D)
		prism_ 4, partitionFillThk,
			-pLength / 2 + partitionFrameWidth, 0, 15,
			-pLength / 2 + partitionFrameWidth, fillHeight * (iPartitionPos = PARPOS_BETW_D) + (gs_partitionHeight - partitionFrameWidth) * (iPartitionPos = PARPOS_ABOVE_D), 15,
			 pLength / 2 - partitionFrameWidth, fillHeight * (iPartitionPos = PARPOS_BETW_D) + (gs_partitionHeight - partitionFrameWidth) * (iPartitionPos = PARPOS_ABOVE_D), 15,
			 pLength / 2 - partitionFrameWidth, 0, 15

		addy fillHeight + partitionFrameWidth
	next pDiv
	del iPartitionDiv * (iPartitionPos = PARPOS_BETW_D) + (iPartitionPos = PARPOS_ABOVE_D)
	del 1

	del 1
return



"3DHotspots":
	addz partitionElevation

	if iPartitionLoc = 1 then
		if bEnableHotspotEditingX then
			hotspot 0, gs_partitionPos_front[1][2], 0, unID, gs_partitionPos_front[1][1], 1 + 128:						unID = unID + 1
			hotspot -1, gs_partitionPos_front[1][2], 0, unID, gs_partitionPos_front[1][1], 3 + 128:						unID = unID + 1
			hotspot gs_partitionPos_front[1][1], gs_partitionPos_front[1][2], 0, unID, gs_partitionPos_front[1][1], 2:	unID = unID + 1
		endif
		if bEnableHotspotEditingY then
			hotspot gs_partitionPos_front[1][1], 0, 0, unID, gs_partitionPos_front[1][2], 1 + 128:						unID = unID + 1
			hotspot gs_partitionPos_front[1][1], -1, 0, unID, gs_partitionPos_front[1][2], 3 + 128:						unID = unID + 1
			hotspot gs_partitionPos_front[1][1], gs_partitionPos_front[1][2], 0, unID, gs_partitionPos_front[1][2], 2:	unID = unID + 1
		endif
	endif
	if iPartitionLoc = 2 then
		if bEnableHotspotEditingX then
			hotspot 0, gs_partitionPos_side1[1][2], 0, unID, gs_partitionPos_side1[1][1], 1 + 128:						unID = unID + 1
			hotspot -1, gs_partitionPos_side1[1][2], 0, unID, gs_partitionPos_side1[1][1], 3 + 128:						unID = unID + 1
			hotspot gs_partitionPos_side1[1][1], gs_partitionPos_side1[1][2], 0, unID, gs_partitionPos_side1[1][1], 2:	unID = unID + 1
		endif
		if bEnableHotspotEditingY then
			hotspot gs_partitionPos_side1[1][1], 0, 0, unID, gs_partitionPos_side1[1][2], 1 + 128:						unID = unID + 1
			hotspot gs_partitionPos_side1[1][1], -1, 0, unID, gs_partitionPos_side1[1][2], 3 + 128:						unID = unID + 1
			hotspot gs_partitionPos_side1[1][1], gs_partitionPos_side1[1][2], 0, unID, gs_partitionPos_side1[1][2], 2:	unID = unID + 1
		endif
	endif
	if iPartitionLoc = 3 then
		if bEnableHotspotEditingX then
			hotspot 0, gs_partitionPos_side2[1][2], 0, unID, gs_partitionPos_side2[1][1], 1 + 128:						unID = unID + 1
			hotspot -1, gs_partitionPos_side2[1][2], 0, unID, gs_partitionPos_side2[1][1], 3 + 128:						unID = unID + 1
			hotspot gs_partitionPos_side2[1][1], gs_partitionPos_side2[1][2], 0, unID, gs_partitionPos_side2[1][1], 2:	unID = unID + 1
		endif
		if bEnableHotspotEditingY then
			hotspot gs_partitionPos_side2[1][1], 0, 0, unID, gs_partitionPos_side2[1][2], 1 + 128:						unID = unID + 1
			hotspot gs_partitionPos_side2[1][1], -1, 0, unID, gs_partitionPos_side2[1][2], 3 + 128:						unID = unID + 1
			hotspot gs_partitionPos_side2[1][1], gs_partitionPos_side2[1][2], 0, unID, gs_partitionPos_side2[1][2], 2:	unID = unID + 1
		endif
	endif
	if iPartitionLoc = 4 then
		if bEnableHotspotEditingX then
			hotspot 0, gs_partitionPos_end[1][2], 0, unID, gs_partitionPos_end[1][1], 1 + 128:							unID = unID + 1
			hotspot -1, gs_partitionPos_end[1][2], 0, unID, gs_partitionPos_end[1][1], 3 + 128:							unID = unID + 1
			hotspot gs_partitionPos_end[1][1], gs_partitionPos_end[1][2], 0, unID, gs_partitionPos_end[1][1], 2:		unID = unID + 1
		endif
		if bEnableHotspotEditingY then
			hotspot gs_partitionPos_end[1][1], 0, 0, unID, gs_partitionPos_end[1][2], 1 + 128:							unID = unID + 1
			hotspot gs_partitionPos_end[1][1], -1, 0, unID, gs_partitionPos_end[1][2], 3 + 128:							unID = unID + 1
			hotspot gs_partitionPos_end[1][1], gs_partitionPos_end[1][2], 0, unID, gs_partitionPos_end[1][2], 2:		unID = unID + 1
		endif
	endif

	del 1
return


]]>
</Script_3D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_2D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
unID = partitions_unID

pen gs_cont_pen
line_type 1
fill gs_fill_type

drawindex 50

! ======================================================================
! SCALE
! ======================================================================

call "2dDetailLevel" parameters gs_detlevel_2D_m = gs_detlevel_2D_m,
				returned_parameters det2D



if (NOT(bPartOfLayout) and NOT(bPartOfWsSolo)) or ((det2D <> 3) and (iPartitionPos = PARPOS_ABOVE_D)) then
	! ======================================================================
	partitions_unID = unID
	end partitions_unID
	! ======================================================================
endif

! ======================================================================
! Partition
! ======================================================================

if bOnlyPartitionColumn then
	if iDeskAngle = 90 then
		poly2_b 4, 1+2+4+64, gs_fill_pen, gs_back_pen,
			-partitionFrameThk / 2, -partitionFrameThk / 2, bShowPartEdgeBottom,
			partitionFrameThk / 2, -partitionFrameThk / 2, bShowPartEdgeRight,
			partitionFrameThk / 2, partitionFrameThk / 2, bShowPartEdgeTop,
			-partitionFrameThk / 2, partitionFrameThk / 2, bShowPartEdgeLeft
	endif
	if iDeskAngle = 120 then
		if bPartOfWsSolo then
			add2 -partitionFrameThk / TAN(iDeskAngle / 2) / 2, -partitionFrameThk / 2
			poly2_b 4, 1+2+4+64, gs_fill_pen, gs_back_pen,
				0, 0, bShowPartEdgeBottom,
				partitionFrameThk / TAN(iDeskAngle / 2), 0, bShowPartEdgeRight,
				partitionFrameThk / TAN(iDeskAngle / 2), partitionFrameThk, bShowPartEdgeTop,
				-partitionFrameThk / TAN(iDeskAngle / 2) * COS(60), partitionFrameThk / TAN(iDeskAngle / 2) * SIN(60), bShowPartEdgeLeft
			del 1
		else
			add2 0, partitionFrameThk / 2 * TAN(30)
			poly2_b 3, 1+2+4+64, gs_fill_pen, gs_back_pen,
				-partitionFrameThk / 2, 0, bShowPartEdgeTop,
				partitionFrameThk / 2, 0, bShowPartEdgeRight,
				0, -partitionFrameThk / 2 * TAN(60), bShowPartEdgeLeft
			del 1
		endif
	endif
else
	add2 xPartOrigPos, yPartOrigPos
	rot2 anglePartititon

	if NOT(bCalledAsExtension) and NOT(bPartOfLayout) and NOT(bPartOfWsSolo) then
		add2	gs_partitionPos_front[1][1] * (iPartitionLoc = 1) + gs_partitionPos_side1[1][1] * (iPartitionLoc = 2) +\
				gs_partitionPos_side2[1][1] * (iPartitionLoc = 3) + gs_partitionPos_end[1][1] * (iPartitionLoc = 4),\
				gs_partitionPos_front[1][2] * (iPartitionLoc = 1) + gs_partitionPos_side1[1][2] * (iPartitionLoc = 2) +\
				gs_partitionPos_side2[1][2] * (iPartitionLoc = 3) + gs_partitionPos_end[1][2] * (iPartitionLoc = 4)
	endif

	if NOT(bCalledAsExtension) then			!!! Not Called as Extension
		if NOT(bOnlyPartitionCover) then
			pLength	= realPartitionLength
			poly2_b 4, 1+2+4+64, gs_fill_pen, gs_back_pen,
				-pLength / 2 - partCutModLeft, -partitionFrameThk / 2, bShowPartEdgeLeft,
				-pLength / 2 + partCutModLeft, partitionFrameThk / 2, 1,
				pLength / 2 - partCutModRight, partitionFrameThk / 2, bShowPartEdgeRight,
				pLength / 2 + partCutModRight, -partitionFrameThk / 2, 1
		else
			pLength	= realPartitionLength
			poly2_b 4, 1+2+4+64, gs_fill_pen, gs_back_pen,
				-pLength / 2, -partitionFrameThk / 2, bShowPartEdgeLeft,
				-pLength / 2, partitionFrameThk / 2, 1,
				pLength / 2, partitionFrameThk / 2, bShowPartEdgeRight,
				pLength / 2, -partitionFrameThk / 2, 1
		endif
	else									!!! Called as Extension
		poly2_b 6, 1+2+4+64, gs_fill_pen, gs_back_pen,
			-extPartLengthStart, -partitionFrameThk / 2, 1,
			-extPartLengthStart, partitionFrameThk / 2, 1,

			extPartLengthEnd, partitionFrameThk / 2, 1,
			extPartLengthEnd, -partitionFrameThk / 2, 1,

			partitionFrameThk / 2, -partitionFrameThk / 2, bShowExtPartConnEdge,
			-partitionFrameThk / 2, -partitionFrameThk / 2, 1
	endif

	if NOT(bCalledAsExtension) and NOT(bPartOfLayout) and NOT(bPartOfWsSolo) then del 1



	! ======================================================================
	! 2D Hostspot Editing
	! ======================================================================

	if NOT(bCalledAsExtension) and NOT(bPartOfLayout) and NOT(bPartOfWsSolo) then gosub "2DHotspots"

	del 2
endif

! ======================================================================
partitions_unID = unID
end partitions_unID
! ======================================================================



"partition":
	! ======================================================================
	! Partition Frame
	! ======================================================================

	poly2_b 4, 1+2+4+64, gs_fill_pen, gs_back_pen,
		-pLength / 2, -partitionFrameThk / 2, 1,
		-pLength / 2, partitionFrameThk / 2, 1,
		-pLength / 2 + partitionFrameWidth, partitionFrameThk / 2, 1,
		-pLength / 2 + partitionFrameWidth, -partitionFrameThk / 2, 1

	poly2_b 4, 1+2+4+64, gs_fill_pen, gs_back_pen,
		pLength / 2, -partitionFrameThk / 2, 1,
		pLength / 2, partitionFrameThk / 2, 1,
		pLength / 2 - partitionFrameWidth, partitionFrameThk / 2, 1,
		pLength / 2 - partitionFrameWidth, -partitionFrameThk / 2, 1

	! ======================================================================
	! Partition Fill
	! ======================================================================

	poly2_b 4, 1+2+4+64, gs_fill_pen, gs_back_pen,
		-pLength / 2 + partitionFrameWidth, -partitionFillThk / 2, 1,
		-pLength / 2 + partitionFrameWidth, partitionFillThk / 2, 1,
		pLength / 2 - partitionFrameWidth, partitionFillThk / 2, 1,
		pLength / 2 - partitionFrameWidth, -partitionFillThk / 2, 1
return



"2DHotspots":
	if iPartitionLoc = 1 then
		if bEnableHotspotEditingX then
			hotspot2 0, gs_partitionPos_front[1][2], unID, gs_partitionPos_front[1][1], 1 + 128:						unID = unID + 1
			hotspot2 -1, gs_partitionPos_front[1][2], unID, gs_partitionPos_front[1][1], 3 + 128:						unID = unID + 1
			hotspot2 gs_partitionPos_front[1][1], gs_partitionPos_front[1][2], unID, gs_partitionPos_front[1][1], 2:	unID = unID + 1
		endif
		if bEnableHotspotEditingY then
			hotspot2 gs_partitionPos_front[1][1], 0, unID, gs_partitionPos_front[1][2], 1 + 128:						unID = unID + 1
			hotspot2 gs_partitionPos_front[1][1], -1, unID, gs_partitionPos_front[1][2], 3 + 128:						unID = unID + 1
			hotspot2 gs_partitionPos_front[1][1], gs_partitionPos_front[1][2], unID, gs_partitionPos_front[1][2], 2:	unID = unID + 1
		endif
	endif
	if iPartitionLoc = 2 then
		if bEnableHotspotEditingX then
			hotspot2 0, gs_partitionPos_side1[1][2], unID, gs_partitionPos_side1[1][1], 1 + 128:						unID = unID + 1
			hotspot2 -1, gs_partitionPos_side1[1][2], unID, gs_partitionPos_side1[1][1], 3 + 128:						unID = unID + 1
			hotspot2 gs_partitionPos_side1[1][1], gs_partitionPos_side1[1][2], unID, gs_partitionPos_side1[1][1], 2:	unID = unID + 1
		endif
		if bEnableHotspotEditingY then
			hotspot2 gs_partitionPos_side1[1][1], 0, unID, gs_partitionPos_side1[1][2], 1 + 128:						unID = unID + 1
			hotspot2 gs_partitionPos_side1[1][1], -1, unID, gs_partitionPos_side1[1][2], 3 + 128:						unID = unID + 1
			hotspot2 gs_partitionPos_side1[1][1], gs_partitionPos_side1[1][2], unID, gs_partitionPos_side1[1][2], 2:	unID = unID + 1
		endif
	endif
	if iPartitionLoc = 3 then
		if bEnableHotspotEditingX then
			hotspot2 0, gs_partitionPos_side2[1][2], unID, gs_partitionPos_side2[1][1], 1 + 128:						unID = unID + 1
			hotspot2 -1, gs_partitionPos_side2[1][2], unID, gs_partitionPos_side2[1][1], 3 + 128:						unID = unID + 1
			hotspot2 gs_partitionPos_side2[1][1], gs_partitionPos_side2[1][2], unID, gs_partitionPos_side2[1][1], 2:	unID = unID + 1
		endif
		if bEnableHotspotEditingY then
			hotspot2 gs_partitionPos_side2[1][1], 0, unID, gs_partitionPos_side2[1][2], 1 + 128:						unID = unID + 1
			hotspot2 gs_partitionPos_side2[1][1], -1, unID, gs_partitionPos_side2[1][2], 3 + 128:						unID = unID + 1
			hotspot2 gs_partitionPos_side2[1][1], gs_partitionPos_side2[1][2], unID, gs_partitionPos_side2[1][2], 2:	unID = unID + 1
		endif
	endif
	if iPartitionLoc = 4 then
		if bEnableHotspotEditingX then
			hotspot2 0, gs_partitionPos_end[1][2], unID, gs_partitionPos_end[1][1], 1 + 128:							unID = unID + 1
			hotspot2 -1, gs_partitionPos_end[1][2], unID, gs_partitionPos_end[1][1], 3 + 128:							unID = unID + 1
			hotspot2 gs_partitionPos_end[1][1], gs_partitionPos_end[1][2], unID, gs_partitionPos_end[1][1], 2:			unID = unID + 1
		endif
		if bEnableHotspotEditingY then
			hotspot2 gs_partitionPos_end[1][1], 0, unID, gs_partitionPos_end[1][2], 1 + 128:							unID = unID + 1
			hotspot2 gs_partitionPos_end[1][1], -1, unID, gs_partitionPos_end[1][2], 3 + 128:							unID = unID + 1
			hotspot2 gs_partitionPos_end[1][1], gs_partitionPos_end[1][2], unID, gs_partitionPos_end[1][2], 2:			unID = unID + 1
		endif
	endif
return
]]>
</Script_2D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_1D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
EPS=0.0001

dim	stPartitionPos[2]
	stPartitionPos[1] = `Над Столами`
	if bPartOfWsSolo then
		stPartitionPos[2] = `Отдельностоящая`
	else
		stPartitionPos[2] = `Между Столами`
	endif

dim	stPartitionLength[2]
	stPartitionLength[1] = `Как Стол`
	stPartitionLength[2] = `Специальная`

TABLETOP_L_SHAPED	= 1
TABLETOP_STRAIGHT	= 2

PARPOS_ABOVE_D		= 1
PARPOS_BETW_D		= 2

PARLENGTH_DESK		= 1
PARLENGTH_CUSTOM	= 2

dim	stPartitionType[8]
	stPartitionType[1] = `Нет`
	stPartitionType[2] = `Спереди`
	if iTableTopType = TABLETOP_L_SHAPED then
		stPartitionType[3] = `Сбоку`
		stPartitionType[4] = `Обе`
	else
		stPartitionType[3] = `Cо Стороны 1`
		stPartitionType[4] = `Cо Стороны 2`
	endif
	stPartitionType[5] = `Со Стороны 1 и Спереди`
	stPartitionType[6] = `Со Стороны 2 и Спереди`
	stPartitionType[7] = `Обе Стороны`
	stPartitionType[8] = `Спереди и По Бокам`

partitionFillThk	= 0.015

fillHeight			= (gs_partitionHeight - partitionFrameWidth - partitionFrameWidth * (iPartitionPos = PARPOS_BETW_D) - (partitionFrameWidth * (iPartitionDiv - 1))) / iPartitionDiv
fillDist			= fillHeight + partitionFrameWidth

if iPartitionLength = PARLENGTH_DESK then
	realPartitionLength	= lengthPartition
else
	realPartitionLength	= partitionLengthCustom * (iPartitionPos = PARPOS_ABOVE_D) + lengthPartition * (iPartitionPos = PARPOS_BETW_D)
endif

if bPartOfLayout or bPartOfWsSolo then
	partitionElevation	= tableTopHeight * (iPartitionPos = PARPOS_ABOVE_D) + partitionBaseHeight * (iPartitionPos = PARPOS_BETW_D)
else
	partitionElevation	= zzyzx
endif

partCutModLeft	= (partitionFrameThk / 2 / TAN(ideskAngle / 2)) * partCornerCutTypeLeft
partCutModRight	= (partitionFrameThk / 2 / TAN(45)) * partCornerCutTypeRight




]]>
</Script_1D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_VL SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
! ======================================================================
! 2D Detail Level
! ======================================================================

if bPartOfLayout or bPartOfWsSolo then
	call "2dDetailLevel" parameters	gs_detlevel_2D		= gs_detlevel_2D,
									gs_detlevel_2D_m	= gs_detlevel_2D_m,
									enable2dDetLevels	= 2 + 4 + 8 + 16 + 32
endif



! ======================================================================
! Partitions
! ======================================================================

if bPartOfLayout or bPartOfWsSolo then
	values "partitionPos" stPartitionPos
	values "iPartitionPos" 1, 2
	if GLOB_MODPAR_NAME = "partitionPos" then
		for iParPos = 1 to vardim1(stPartitionPos)
			if partitionPos = stPartitionPos[iParPos] then iPartitionPos = iParPos
		next iParPos
		parameters iPartitionPos = iPartitionPos
	else
		partitionPos = stPartitionPos[max(iPartitionPos, 1)]
		parameters partitionPos = partitionPos
	endif

	if bEnableCustPartLength then
		values "partitionLength" stPartitionLength
		values "iPartitionLength" 1, 2
		if GLOB_MODPAR_NAME = "partitionLength" then
			for iParLen = 1 to vardim1(stPartitionLength)
				if partitionLength = stPartitionLength[iParLen] then iPartitionLength = iParLen
			next iParLen
			parameters iPartitionLength = iPartitionLength
		else
			partitionLength = stPartitionLength[max(iPartitionLength, 1)]
			parameters partitionLength = partitionLength
		endif
	endif

	if iPartitionPos = PARPOS_BETW_D then
		defaultPartitionHeight = 1.15
	else
		defaultPartitionHeight = 0.4
	endif

	if GLOB_MODPAR_NAME = "partitionPos" or GLOB_MODPAR_NAME = "iPartitionPos" then
		parameters gs_partitionHeight = defaultPartitionHeight
	endif

	values "gs_partitionHeight" range[0, ]


	values "partitionBaseHeight" range[, tableTopHeight]

	if bShowPartitionParams then
		if iPartitionPos = PARPOS_BETW_D then
			values "iPartitionDiv" range [1, )

			if bEnableCustPartLength then parameters iPartitionLength = 1

			lock			"partitionLength",
							"iPartitionLength",
							"partitionLengthCustom",
							"partitionOffsetCustom"
			hideparameter 	"partitionLength",
							"iPartitionLength",
							"partitionLengthCustom",
							"partitionOffsetCustom"
		else
			lock			"iPartitionDiv",
							"partitionBaseHeight"
			hideparameter 	"iPartitionDiv",
							"partitionBaseHeight"
		endif

		if bEnableCustPartLength & iPartitionLength = PARLENGTH_DESK then
			lock			"partitionLengthCustom",
							"partitionOffsetCustom"
		else
			if bEnableCustPartLength then values "partitionLengthCustom" range (partitionFrameThk * 2, )
		endif
	else
		lock			"partitionPos",
						"iPartitionPos",
						"gs_partitionHeight",
						"partitionLength",
						"iPartitionLength",
						"partitionLengthCustom",
						"partitionOffsetCustom",
						"partitionBaseHeight",
						"iPartitionDiv",
						"gs_partition_mat",
						"gs_partitionFrame_mat"

		hideparameter 	"partitionPos",
						"iPartitionPos",
						"gs_partitionHeight",
						"partitionLength",
						"iPartitionLength",
						"partitionLengthCustom",
						"partitionOffsetCustom",
						"partitionBaseHeight",
						"iPartitionDiv",
						"gs_partition_mat",
						"gs_partitionFrame_mat"
	endif
else
	if iTableTopType = TABLETOP_L_SHAPED then
		enablePartitionTypes = 2 + 4 + 8 + 16
	else
		enablePartitionTypes = 2 + 4 + 8 + 16 + 32 + 64 + 128 + 256
	endif

	! enableTableTopTypes - possible values
	!	2		- enable None
	!	4		- enable in Front
	!	8		- enable on the Side	/ on Side 1
	!	16		- enable Both			/ on Side 2
	!	32		- enable on Side 1 & Front
	!	64		- enable on Side 2 & Front
	!	128		- enable Both Sides
	!	256		- enable in Front & both Sides

	dim partitionTypeValueList[]
	j = 1
	for i = 1 to vardim1(stPartitionType)
		if bittest(enablePartitionTypes, i) then
			put i - 1
			partitionTypeValueList[j] = stPartitionType[i]
			j = j + 1
		endif
	next i

	values "gs_partitionType" partitionTypeValueList
	values "gs_partitionType_m" get(NSP)

	if GLOB_MODPAR_NAME = "gs_partitionType" then
		for iPart = 1 to vardim1(stPartitionType)
			if gs_partitionType = stPartitionType[iPart] then gs_partitionType_m = iPart - 1
		next iPart
		parameters gs_partitionType_m = gs_partitionType_m
	else
		gs_partitionType = stPartitionType[gs_partitionType_m + 1]
		parameters gs_partitionType = gs_partitionType
	endif

	if NOT(bShowPartitionParams) then
		lock			"gs_partitionHeight",
						"gs_partitionLength_front",
						"gs_partitionLength_side1",
						"gs_partition_mat",
						"gs_partitionFrame_mat"

		hideparameter	"gs_partitionHeight",
						"gs_partitionLength_front",
						"gs_partitionLength_side1",
						"gs_partition_mat",
						"gs_partitionFrame_mat"

		if not(iTableTopType = TABLETOP_L_SHAPED) then
			lock			"gs_partitionLength_side2"
			hideparameter	"gs_partitionLength_side2"
		endif
	endif

	if iTableTopType = TABLETOP_L_SHAPED then
		if gs_partitionType_m <> 2 and gs_partitionType_m <> 3 then
			lock			"gs_partitionLength_side1"

			hideparameter	"gs_partitionLength_side1"
		endif
		if gs_partitionType_m <> 1 and gs_partitionType_m <> 3 then
			lock			"gs_partitionLength_front"

			hideparameter	"gs_partitionLength_front"
		endif
	else
		if gs_partitionType_m <> 2 and gs_partitionType_m <> 4 and gs_partitionType_m <> 6 and gs_partitionType_m <> 7 then
			lock			"gs_partitionLength_side1"

			hideparameter	"gs_partitionLength_side1"
		endif
		if gs_partitionType_m <> 1 and gs_partitionType_m <> 4 and gs_partitionType_m <> 5 and gs_partitionType_m <> 7 then
			lock			"gs_partitionLength_front"

			hideparameter	"gs_partitionLength_front"
		endif
		if gs_partitionType_m <> 3 and gs_partitionType_m <> 5 and gs_partitionType_m <> 6 and gs_partitionType_m <> 7 then
			lock			"gs_partitionLength_side2"

			hideparameter	"gs_partitionLength_side2"
		endif
	endif
endif

]]>
</Script_VL>

<ParamSection SectVersion="22" SectionFlags="0" SubIdent="0">
	<ParamSectHeader>
		<AutoHotspots>false</AutoHotspots>
		<StatBits>
			<STBit_UIDefault/>
			<STBit_FixSize/>
		</StatBits>
		<WDLeftFrame>0</WDLeftFrame>
		<WDRightFrame>0</WDRightFrame>
		<WDTopFrame>0</WDTopFrame>
		<WDBotFrame>0</WDBotFrame>
		<LayFlags>65535</LayFlags>
		<WDMirrorThickness>0</WDMirrorThickness>
		<WDWallInset>0</WDWallInset>
	</ParamSectHeader>
	<Parameters>
		<Length Name="A">
			<Description><![CDATA["Width"]]></Description>
			<Fix/>
			<Value>1.4</Value>
		</Length>
		<Length Name="B">
			<Description><![CDATA["Depth"]]></Description>
			<Fix/>
			<Value>0.6</Value>
		</Length>
		<Length Name="zzyzx">
			<Description><![CDATA["Height"]]></Description>
			<Fix/>
			<Value>0</Value>
		</Length>
		<Boolean Name="AC_show2DHotspotsIn3D">
			<Description><![CDATA["Show 2D Hotspots in 3D"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="ac_bottomlevel">
			<Description><![CDATA["Bottom Level"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="ac_toplevel">
			<Description><![CDATA["Top Level"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Boolean Name="bPartOfLayout">
			<Description><![CDATA["Called as a Part of Layout"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bPartOfWsSolo">
			<Description><![CDATA["Called as a Part of Workstation Solo"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bCalledAsExtension">
			<Description><![CDATA["Called as Extension"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Integer Name="iTableTopType">
			<Description><![CDATA["Tabletop Type"]]></Description>
			<Value>1</Value>
		</Integer>
		<Length Name="tableTopHeight">
			<Description><![CDATA["Tabletop Height"]]></Description>
			<Value>0.75</Value>
		</Length>
		<Length Name="topThk">
			<Description><![CDATA["Tabletop Thickness"]]></Description>
			<Value>0.04</Value>
		</Length>

		<!-- gs_partition: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_partition">
			<Description><![CDATA["Partition"]]></Description>
		</Title>
		<Length Name="partitionFrameThk">
			<Description><![CDATA["Partition Frame Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.03</Value>
		</Length>
		<Length Name="partitionFrameWidth">
			<Description><![CDATA["Partition Frame Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.03</Value>
		</Length>
		<Length Name="lengthPartition">
			<Description><![CDATA["Partition Length"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.4</Value>
		</Length>
		<String Name="partitionLength">
			<Description><![CDATA["Partition Length"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Как Стол"]]></Value>
		</String>
		<Integer Name="iPartitionLength">
			<Description><![CDATA["Partition Length"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="partitionLengthCustom">
			<Description><![CDATA["Custom Length"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.77</Value>
		</Length>
		<Length Name="extPartLengthStart">
			<Description><![CDATA["Extension Partition Length Left from Desk Corner"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.97</Value>
		</Length>
		<Length Name="extPartLengthEnd">
			<Description><![CDATA["Extension Partition Length Right from Desk Corner"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.42</Value>
		</Length>
		<String Name="partitionPos">
			<Description><![CDATA["Partition Position"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Над Столами"]]></Value>
		</String>
		<Integer Name="iPartitionPos">
			<Description><![CDATA["Partition Position"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="iPartitionLoc">
			<Description><![CDATA["Partition Location"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="ideskAngle">
			<Description><![CDATA["Desk Angle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>120</Value>
		</Integer>
		<Length Name="gs_partitionHeight">
			<Description><![CDATA["Partition Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.6</Value>
		</Length>
		<Length Name="partitionBaseHeight">
			<Description><![CDATA["Base Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_partitionLength_front">
			<Description><![CDATA["Partition Length in Front"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1.4</Value>
		</Length>
		<Length Name="gs_partitionPos_front">
			<Description><![CDATA["Partition Position"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="2">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0</AVal>
			</ArrayValues>
		</Length>
		<Length Name="gs_partitionLength_side1">
			<Description><![CDATA["Partition Length on Side 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.6</Value>
		</Length>
		<Length Name="gs_partitionPos_side1">
			<Description><![CDATA["Partition Position"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="2">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0</AVal>
			</ArrayValues>
		</Length>
		<Length Name="gs_partitionLength_side2">
			<Description><![CDATA["Partition Length on Side 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.6</Value>
		</Length>
		<Length Name="gs_partitionPos_side2">
			<Description><![CDATA["Partition Position"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="2">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0</AVal>
			</ArrayValues>
		</Length>
		<Length Name="gs_partitionLength_end">
			<Description><![CDATA["Partition Length in End"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_partitionPos_end">
			<Description><![CDATA["Partition Position"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<ArrayValues FirstDimension="1" SecondDimension="2">
				<AVal Column="1" Row="1">0</AVal>
				<AVal Column="2" Row="1">0</AVal>
			</ArrayValues>
		</Length>
		<Integer Name="iPartitionDiv">
			<Description><![CDATA["Divisions"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>4</Value>
		</Integer>
		<Boolean Name="bEnableHotspotEditingX">
			<Description><![CDATA["Enable Hotspot editing X Direction"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="bEnableHotspotEditingY">
			<Description><![CDATA["Enable Hotspot editing Y Direction"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<String Name="gs_partitionType">
			<Description><![CDATA["Partition Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Нет"]]></Value>
		</String>
		<Integer Name="gs_partitionType_m">
			<Description><![CDATA["Partition Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Boolean Name="bShowPartEdgeTop">
			<Description><![CDATA["Show Partition Edge Top"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="bShowPartEdgeRight">
			<Description><![CDATA["Show Partition Edge Right"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="bShowPartEdgeBottom">
			<Description><![CDATA["Show Partition Edge Bottom"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="bShowPartEdgeLeft">
			<Description><![CDATA["Show Partition Edge Left"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="bShowExtPartConnEdge">
			<Description><![CDATA["Show Extension Partition Connection Edge"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="bOnlyPartitionColumn">
			<Description><![CDATA["Only Partition Center Column"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bOnlyPartitionCover">
			<Description><![CDATA["Only Partition Cover"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bEnableCustPartLength">
			<Description><![CDATA["Enable Custom Partititon Length"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bShowPartitionParams">
			<Description><![CDATA["Show Partition Parameters"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Angle Name="anglePartititon">
			<Description><![CDATA["Partition Angle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Length Name="xPartOrigPos">
			<Description><![CDATA["Partition Original Position X"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="yPartOrigPos">
			<Description><![CDATA["Partition Original Position Y"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Integer Name="partCornerCutTypeLeft">
			<Description><![CDATA["Partition Corner Cut Type Left"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>-1</Value>
		</Integer>
		<Integer Name="partCornerCutTypeRight">
			<Description><![CDATA["Partition Corner Cut Type Right"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>-1</Value>
		</Integer>

		<!-- gs_2D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_2D_representation">
			<Description><![CDATA["2D Representation"]]></Description>
			<Fix/>
		</Title>
		<String Name="gs_detlevel_2D">
			<Description><![CDATA["2D Detail Level"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Зависит от Масштаба"]]></Value>
		</String>
		<Integer Name="gs_detlevel_2D_m">
			<Description><![CDATA["2D Detail Level"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<PenColor Name="gs_cont_pen">
			<Description><![CDATA["Contour Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>7</Value>
		</PenColor>
		<FillPattern Name="gs_fill_type">
			<Description><![CDATA["Fill Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_fill_pen">
			<Description><![CDATA["Fill Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_back_pen">
			<Description><![CDATA["Fill Background Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>

		<!-- gs_3D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_3D_representation">
			<Description><![CDATA["3D Representation"]]></Description>
		</Title>
		<Integer Name="gs_detlevel_3D_m">
			<Description><![CDATA["3D Detail Level"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="gs_resol">
			<Description><![CDATA["Resolution"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>8</Value>
		</Integer>
		<Boolean Name="gs_shadow">
			<Description><![CDATA["Shadow"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Material Name="gs_partitionFrame_mat">
			<Description><![CDATA["Partition Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>14</Value>
		</Material>
		<Material Name="gs_partition_mat">
			<Description><![CDATA["Partition"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>67</Value>
		</Material>
		<Material Name="partColumnMat">
			<Description><![CDATA["Partition Column"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>39</Value>
		</Material>
		<Material Name="gs_top_mat">
			<Description><![CDATA["Tabletop"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>20</Value>
		</Material>
		<Integer Name="partitions_unID">
			<Description><![CDATA["unID"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>

		<!-- gs_list: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_list">
			<Description><![CDATA["Parameters for Listing"]]></Description>
			<Fix/>
		</Title>
		<RealNum Name="gs_list_cost">
			<Description><![CDATA["Cost"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="gs_list_manufacturer">
			<Description><![CDATA["Manufacturer"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_note">
			<Description><![CDATA["Note/Remarks"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_location">
			<Description><![CDATA["Location"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_accessories">
			<Description><![CDATA["Accessories"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_Type">
			<Description><![CDATA["Group Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Мебель"]]></Value>
		</String>
		<Integer Name="iFMType">
			<Description><![CDATA["Group Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>16</Value>
		</Integer>
		<String Name="FM_InventoryNumber">
			<Description><![CDATA["Inventory Number"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_SerialNumber">
			<Description><![CDATA["Serial Number"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_ProductionYear">
			<Description><![CDATA["Production Year"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<RealNum Name="FM_ObjectWeight">
			<Description><![CDATA["Object Weight"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="FM_ObjectWeightUnit">
			<Description><![CDATA["Object Weight Unit"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["кг"]]></Value>
		</String>
		<String Name="gs_list_custom1">
			<Description><![CDATA["User Defined 1"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom2">
			<Description><![CDATA["User Defined 2"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom3">
			<Description><![CDATA["User Defined 3"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom4">
			<Description><![CDATA["User Defined 4"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom5">
			<Description><![CDATA["User Defined 5"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
	</Parameters>
</ParamSection>

<Ancestry SectVersion="1" SectionFlags="0" SubIdent="0" Template="false">
	<MainGUID>F938E33A-329D-4A36-BE3E-85E126820996</MainGUID>
	<MainGUID>103E8D2C-8230-42E1-9597-46F84CCE28C0</MainGUID>
	<MainGUID>C76BC373-89AE-4368-A490-BB2485825242</MainGUID>
</Ancestry>

<CalledMacros SectVersion="2" SectionFlags="0" SubIdent="0">
	<Macro>
		<MName><![CDATA["2dDetailLevel"]]></MName>
		<MainGUID>2FD16305-CA53-4505-BFA7-4E98A8BA9399</MainGUID>
	</Macro>
</CalledMacros>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_PR SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_PR>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_UI SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_UI>

<Comment SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Comment>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_FWM SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_FWM>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_BWM SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_BWM>

<Copyright SectVersion="1" SectionFlags="0" SubIdent="0">
	<Author>GRAPHISOFT</Author>
	<License>
		<Type>CC BY-ND</Type>
		<Version>3.0</Version>
	</License>
</Copyright>

</Symbol>
