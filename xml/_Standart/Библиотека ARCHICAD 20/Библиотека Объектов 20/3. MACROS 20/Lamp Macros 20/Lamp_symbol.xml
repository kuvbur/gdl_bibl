<?xml version="1.0" encoding="UTF-8"?>
<Symbol IsArchivable="true" IsPlaceable="false" MainGUID="34B6FAE5-E675-4CB3-BFAD-54DFF0A317C9" MigrationValue="Normal" Owner="1196638531" Signature="1280530765" Version="43">
<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_3D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_3D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_2D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
if Symbol_unID < 1 then
	unID = 100
else
	unID = Symbol_unID
endif
r = ss/2
pen gs_cont_pen
nTrans = 0

if iEnableLampSymbolTypes > 0 then
	bWallLamp			= 0
	bSpotSingle			= 0
	bCeilingLamp		= 0
	bDirect				= 0
	bRectSymbol			= 0
	if gs_symbtype_2D_m = SYMBOL_ELECTRIC then
		if	iSymbolType = 2 then	bWallLamp		= 1
		if	iSymbolType = 3 then	bRectSymbol		= 1
	endif
	if gs_symbtype_2D_m = SYMBOL_RCP then
		if	iSymbolType = 2 |\
			iSymbolType = 5 |\
			iSymbolType = 6 then	bWallLamp		= 1
		if	iSymbolType = 3 then	bCeilingLamp	= 1
		if	iSymbolType = 6 then	bSpotSingle		= 1
		if	iSymbolType = 4 |\
			iSymbolType = 5 |\
			iSymbolType = 6 then	bDirect			= 1
		if	iSymbolType = 7 |\
			iSymbolType = 8 then	bRectSymbol		= 1
	endif
endif

symbolLength	= ss / 2
if bRectSymbol then symbolLength	= a / 2

if LibraryLangCode <> "JPN" then

	if show_txt then
		rot2 angleSymbolRotation * bRotateIndependently

		pen gs_cont_pen

		hotspot2 txt_pos_x, 0,         unID, txt_pos_y, 1+128	: unID=unID+1
		hotspot2 txt_pos_x, -1,        unID, txt_pos_y, 3		: unID=unID+1
		hotspot2 txt_pos_x, txt_pos_y, unID, txt_pos_y, 2		: unID=unID+1

		hotspot2 0,        txt_pos_y, unID, txt_pos_x, 1+128	: unID=unID+1
		hotspot2 -1,       txt_pos_y, unID, txt_pos_x, 3		: unID=unID+1
		hotspot2 txt_pos_x,txt_pos_y, unID, txt_pos_x, 2		: unID=unID+1

		define style textStyle fontType, 10/GLOB_SCALE*fsz, 5,
								gs_text_style_bold + 2 * gs_text_style_italic + 4 * gs_text_style_underline + 128 * gs_text_style_strike
		style textStyle

		add2 txt_pos_x,txt_pos_y
		nTrans = nTrans + 1

		! --- Oriented View ----------------------------------------------------

		angleViewRot = 0
		rrr = REQUEST ("View_Rotangle", "", angleViewRot)
		totalRotate = (SYMB_ROTANGLE + angleViewRot + angleSymbolRotation * bRotateIndependently) MOD 360

		! Text Rotation - Readable / Always Horizontal / Align with Symbol
		! ----------------------------------------------------------------------
		if typeTextRotation_m = 2 then								! Readable
			if (totalRotate > (gs_readable_angle + eps) & totalRotate < (gs_readable_angle + 180 + eps)) then
				rot2 180
				nTrans = nTrans + 1
			endif
		else
			if typeTextRotation_m = 1 then							! Horizontal
				rot2 totalRotate * (SYMB_MIRRORED - not(SYMB_MIRRORED)) ! 1/-1
				nTrans = nTrans + 1
			endif
		endif
		! ----------------------------------------------------------------------

		text2 0,0,txt
		del nTrans

		del 1
	endif

	if gs_symbtype_2D_m <> SYMBOL_REALISTIC then				! Not Realistic Symbol
		rot2 angleSymbolRotation * bRotateIndependently

		if bMigrationRotZ then
			rot2 90
		endif

		if bWallLamp then
			if bSpotSingle then
				gosub "wallspotold"
			else
				gosub "wall"
			endif
		endif

		if NOT(bRectSymbol) then
			hotspot2 0, 0
			hotspot2 0, r
			hotspot2 0, -r
			hotspot2 r, 0
			hotspot2 -r, 0
		else
			hotspot2 0, 0,				unID	: unID = unID + 1
			hotspot2 -a / 2, -b / 2,	unID	: unID = unID + 1
			hotspot2 a / 2, -b / 2,		unID	: unID = unID + 1
			hotspot2 a / 2, b / 2,		unID	: unID = unID + 1
			hotspot2 -a / 2, b / 2,		unID	: unID = unID + 1
		endif

		fill gs_fill_type
		if NOT(bRectSymbol) then
			poly2_b 2, 1 + 2 + 4, gs_fill_pen, gs_back_pen,
					0, 0, 901,
					r, 360, 4001
		else
			poly2_b 4, 1 + 2 + 4, gs_fill_pen, gs_back_pen,
					-a / 2, -b / 2, 1,
					a / 2, -b / 2, 1,
					a / 2, b / 2, 1,
					-a / 2, b / 2, 1
		endif

		if gs_symbtype_2D_m = SYMBOL_ELECTRIC then				! Electrical Symbol
			if NOT(bRectSymbol) then
				line2    -(r/2)*sqr(2), (r/2)*sqr(2), (r/2)*sqr(2), -(r/2)*sqr(2)
				line2    -(r/2)*sqr(2), -(r/2)*sqr(2), (r/2)*sqr(2), (r/2)*sqr(2)
			else
				line2 -a / 2, 0, a / 2, 0
			endif
		endif

		if gs_symbtype_2D_m = SYMBOL_RCP then				! RCP Symbol
			if bDirect and rx > -89.99 then
				gosub "arrow"
			else
				if bCeilingLamp then
					line2     0, r*sqr(2), 0, -(r)*sqr(2)
					line2    -(r)*sqr(2), 0, r*sqr(2), 0
				else
					if NOT(bRectSymbol) then
						gosub "sun"
					else
						if iSymbolType = 8 then	line2 -a / 2, 0, a / 2, 0
					endif
				endif
			endif
		endif

		if bWallLamp then del 1
		if bMigrationRotZ then del 1

		del 1

		if bRotateIndependently then
			if bSpotSingle then
				hotspot2 0, 0,				unID,	angleSymbolRotation, 6: unID = unID + 1
				hotspot2 0, symbolLength,	unID,	angleSymbolRotation, 4 + 128 : unID = unID + 1
				hotspot2 -symbolLength * SIN(angleSymbolRotation), symbolLength * COS(angleSymbolRotation), unID, angleSymbolRotation, 5 : unID = unID + 1
			else
				hotspot2 0, 0,				unID,	angleSymbolRotation, 6: unID = unID + 1
				hotspot2 symbolLength, 0,	unID,	angleSymbolRotation, 4 + 128 : unID = unID + 1
				hotspot2 symbolLength * COS(angleSymbolRotation), symbolLength * SIN(angleSymbolRotation), unID, angleSymbolRotation, 5 : unID = unID + 1
			endif
		endif
	endif

else			!!! Japanese Symbol
		rot2 -specSymbolRotation

		define style textStyleJPN fontType, 10/GLOB_SCALE*fsz, 5,
								gs_text_style_bold + 2 * gs_text_style_italic + 4 * gs_text_style_underline + 128 * gs_text_style_strike
		style textStyleJPN

	if gs_symbtype_2D_m = SYMBOL_REALISTIC then
		if _bEnableJPNText & show_txt then
			rot2 -SYMB_ROTANGLE + specSymbolRotation
			text2 0,0,txt
			del 1
		endif
	else
		SymbSizeHalf = ss/2
		alf = acs(1/2)

		if	iSpecSymbolType = SPEC_INCADESCENT_WALL  | \
			iSpecSymbolType = SPEC_FLUORESCENT_1_WALL | \
			iSpecSymbolType = SPEC_FLUORESCENT_2_WALL | \
			iSpecSymbolType = SPEC_FLUORESCENT_VERT_WALL | \
			iSpecSymbolType = SPEC_WALL_WASHER | \
			iSpecSymbolType = SPEC_EMERGENCY_FLOURESCENT_WALL | \
			iSpecSymbolType = SPEC_EMERGENCY_VERT_WALL | \
			iSpecSymbolType = SPEC_EMERGENCY_VERT_WALL_CIRC then
				add2 0, ss/2
		endif

		CircleFill = 1
		if	iSpecSymbolType = SPEC_INCADESCENT then
			gosub 2200
		endif

		if	_bEnableJPNText then
			gosub	2200

			if show_txt then
				rot2 -SYMB_ROTANGLE + specSymbolRotation
				text2 0,0,txt
				del 1
			endif
		endif

		if iSpecSymbolType = SPEC_PENDANT_CORD then
			gosub	2200
			line2	-ss/2, 0,	ss/2, 0

		endif

		if iSpecSymbolType = SPEC_INCADESCENT_WALL then
			CircleFill = 2
			gosub	2200
			gosub	2300
		endif

		if iSpecSymbolType = SPEC_INCADESCENT_LONGLAST then
			gosub	2200

			line2	(ss/2)*SIN(45),   (ss/2)*COS(45),		(ss/2)*SIN(225),   (ss/2)*COS(225)
			line2	(ss/2)*SIN(315),   (ss/2)*COS(315),		(ss/2)*SIN(135),   (ss/2)*COS(135)
		endif

		if iSpecSymbolType = SPEC_INCADESCENT_EMERGENCY then
			gosub	2200
			gosub	2400
		endif

		if iSpecSymbolType = SPEC_FLUORESCENT_1_CEILING then

			gosub	2200

			hotspot2     -specSymbolWidth/2,   -SymbSizeHalf/2
			hotspot2     -specSymbolWidth/2,   SymbSizeHalf/2
			hotspot2     specSymbolWidth/2,   -SymbSizeHalf/2
			hotspot2     specSymbolWidth/2,   SymbSizeHalf/2

			fill gs_fill_type
			poly2_b 5,1+2+4,gs_fill_pen,gs_back_pen,
				-specSymbolWidth/2,   -SymbSizeHalf/2, 1,
				-specSymbolWidth/2,    SymbSizeHalf/2, 1,
				-(ss/2)*SIN(alf),     SymbSizeHalf/2, 1,
				0, 0, 900,
				-(ss/2)*SIN(alf),     -SymbSizeHalf/2, 3001
			poly2_b 5,1+2+4,gs_fill_pen,gs_back_pen,
				specSymbolWidth/2,   -SymbSizeHalf/2, 1,
				specSymbolWidth/2,    SymbSizeHalf/2, 1,
				(ss/2)*SIN(alf),     SymbSizeHalf/2, 1,
				0, 0, 900,
				(ss/2)*SIN(alf),     -SymbSizeHalf/2, 3001
		endif

		if iSpecSymbolType = SPEC_FLUORESCENT_2_CEILING then
			CircleFill = 0
			gosub	2200

			hotspot2     -specSymbolWidth/2,   -SymbSizeHalf
			hotspot2     -specSymbolWidth/2,   SymbSizeHalf
			hotspot2     specSymbolWidth/2,   -SymbSizeHalf
			hotspot2     specSymbolWidth/2,   SymbSizeHalf

			fill gs_fill_type
			poly2_b 4,1+2+4,gs_fill_pen,gs_back_pen,
				-specSymbolWidth/2,   -SymbSizeHalf, 1,
				specSymbolWidth/2,   -SymbSizeHalf, 1,
				specSymbolWidth/2,   SymbSizeHalf, 1,
				-specSymbolWidth/2,   SymbSizeHalf, 1

			line2    -specSymbolWidth/2,   0,    -ss/2,	0
			line2    specSymbolWidth/2,   0,    ss/2,	0
		endif

		if iSpecSymbolType = SPEC_FLUORESCENT_3_CEILING then
			CircleFill = 0
			gosub	2200

			hotspot2     -specSymbolWidth/2,   -SymbSizeHalf*1.5
			hotspot2     -specSymbolWidth/2,   SymbSizeHalf*1.5
			hotspot2     specSymbolWidth/2,   -SymbSizeHalf*1.5
			hotspot2     specSymbolWidth/2,   SymbSizeHalf*1.5

			fill gs_fill_type
			poly2_b 4,1+2+4,gs_fill_pen,gs_back_pen,
				-specSymbolWidth/2,   -SymbSizeHalf*1.5, 1,
				specSymbolWidth/2,   -SymbSizeHalf*1.5, 1,
				specSymbolWidth/2,   SymbSizeHalf*1.5, 1,
				-specSymbolWidth/2,   SymbSizeHalf*1.5, 1

			line2    -specSymbolWidth/2,   -SymbSizeHalf/2,    -(ss/2)*SIN(alf),    -SymbSizeHalf/2
			line2    -specSymbolWidth/2,    SymbSizeHalf/2,    -(ss/2)*SIN(alf),     SymbSizeHalf/2
			line2     specSymbolWidth/2,   -SymbSizeHalf/2,     (ss/2)*SIN(alf),    -SymbSizeHalf/2
			line2     specSymbolWidth/2,    SymbSizeHalf/2,     (ss/2)*SIN(alf),     SymbSizeHalf/2

		endif

		if iSpecSymbolType = SPEC_FLUORESCENT_4_CEILING then
			CircleFill = 0
			gosub	2200

			hotspot2     -specSymbolWidth/2,   -SymbSizeHalf*2
			hotspot2     -specSymbolWidth/2,   SymbSizeHalf*2
			hotspot2     specSymbolWidth/2,   -SymbSizeHalf*2
			hotspot2     specSymbolWidth/2,   SymbSizeHalf*2

			fill gs_fill_type
			poly2_b 4,1+2+4,gs_fill_pen,gs_back_pen,
				-specSymbolWidth/2,   -SymbSizeHalf*2, 1,
				specSymbolWidth/2,   -SymbSizeHalf*2, 1,
				specSymbolWidth/2,   SymbSizeHalf*2, 1,
				-specSymbolWidth/2,   SymbSizeHalf*2, 1

			line2    -specSymbolWidth/2,   0,    -ss/2,	0
			line2    specSymbolWidth/2,   0,    ss/2,	0
			line2    -specSymbolWidth/2,    -SymbSizeHalf,    specSymbolWidth/2,	 -SymbSizeHalf
			line2    -specSymbolWidth/2,    SymbSizeHalf,    specSymbolWidth/2,	 SymbSizeHalf
		endif

		if iSpecSymbolType = SPEC_FLUORESCENT_1_WALL then
			CircleFill = 2
			gosub	2200
			gosub	2300

			hotspot2     -specSymbolWidth/2,   -SymbSizeHalf/2
			hotspot2     -specSymbolWidth/2,   SymbSizeHalf/2
			hotspot2     specSymbolWidth/2,   -SymbSizeHalf/2
			hotspot2     specSymbolWidth/2,   SymbSizeHalf/2

			fill gs_fill_type
			poly2_b 5,1+2+4,gs_fill_pen,gs_back_pen,
				-specSymbolWidth/2,   -SymbSizeHalf/2, 1,
				-specSymbolWidth/2,    SymbSizeHalf/2, 1,
				-(ss/2)*SIN(alf),     SymbSizeHalf/2, 1,
				0, 0, 900,
				-(ss/2)*SIN(alf),     -SymbSizeHalf/2, 3001
			poly2_b 5,1+2+4,gs_fill_pen,gs_back_pen,
				specSymbolWidth/2,   -SymbSizeHalf/2, 1,
				specSymbolWidth/2,    SymbSizeHalf/2, 1,
				(ss/2)*SIN(alf),     SymbSizeHalf/2, 1,
				0, 0, 900,
				(ss/2)*SIN(alf),     -SymbSizeHalf/2, 3001

			line2    -specSymbolWidth/2,   -SymbSizeHalf/2,    -(ss/2)*SIN(alf),    -SymbSizeHalf/2
			line2    -specSymbolWidth/2,    SymbSizeHalf/2,    -(ss/2)*SIN(alf),     SymbSizeHalf/2
			line2     specSymbolWidth/2,   -SymbSizeHalf/2,     (ss/2)*SIN(alf),    -SymbSizeHalf/2
			line2     specSymbolWidth/2,    SymbSizeHalf/2,     (ss/2)*SIN(alf),     SymbSizeHalf/2
			line2   -specSymbolWidth/2,   -SymbSizeHalf/2,   -specSymbolWidth/2,   SymbSizeHalf/2
			line2    specSymbolWidth/2,   -SymbSizeHalf/2,    specSymbolWidth/2,   SymbSizeHalf/2
		endif

		if iSpecSymbolType = SPEC_FLUORESCENT_2_WALL then
			CircleFill = 0
			gosub	2200
			gosub	2300

			hotspot2     -specSymbolWidth/2,   -SymbSizeHalf
			hotspot2     -specSymbolWidth/2,   SymbSizeHalf
			hotspot2     specSymbolWidth/2,   -SymbSizeHalf
			hotspot2     specSymbolWidth/2,   SymbSizeHalf

			fill gs_fill_type
			poly2_b 9,1+2+4,gs_fill_pen,gs_back_pen,
				-specSymbolWidth/2,   -SymbSizeHalf, 1,
				specSymbolWidth/2,   -SymbSizeHalf, 1,
				specSymbolWidth/2,   SymbSizeHalf, 1,
				-specSymbolWidth/2,   SymbSizeHalf, 1,
				-specSymbolWidth/2,   -SymbSizeHalf, -1,

				(ss/2)*SIN(120),   (ss/2)*COS(120), 1,
				0, 0, 901,
				0, -120, 4001,
				(ss/2)*SIN(120),   (ss/2)*COS(120), -1

			line2    -specSymbolWidth/2,   0,    -ss/2,	0
			line2    specSymbolWidth/2,   0,    ss/2,	0

		endif

		if iSpecSymbolType = SPEC_FLUORESCENT_VERT_WALL then
			CircleFill = 2
			gosub	2200
			gosub	2300

			hotspot2     -SymbSizeHalf/2,    specSymbolDepth-ss/2
			hotspot2     SymbSizeHalf/2,    specSymbolDepth-ss/2


			fill gs_fill_type
			poly2_b 5,1+2+4,gs_fill_pen,gs_back_pen,
				-SymbSizeHalf/2,	specSymbolDepth-ss/2,	1,
				-SymbSizeHalf/2,	(ss/2)*sin(alf),	1,
				0, 0, 901,
				SymbSizeHalf/2,	(ss/2)*sin(alf), 3001,
				SymbSizeHalf/2,	specSymbolDepth-ss/2, 1

		endif

		if iSpecSymbolType = SPEC_FLUORESCENT_EMERGENCY_CEIL then
			gosub	2200

			hotspot2     -specSymbolWidth/2,   -SymbSizeHalf/2
			hotspot2     -specSymbolWidth/2,   SymbSizeHalf/2
			hotspot2     specSymbolWidth/2,   -SymbSizeHalf/2
			hotspot2     specSymbolWidth/2,   SymbSizeHalf/2

			line2    -specSymbolWidth/2,   -SymbSizeHalf/2,    -(ss/2)*SIN(alf),    -SymbSizeHalf/2
			line2    -specSymbolWidth/2,    SymbSizeHalf/2,    -(ss/2)*SIN(alf),     SymbSizeHalf/2
			line2     specSymbolWidth/2,   -SymbSizeHalf/2,     (ss/2)*SIN(alf),    -SymbSizeHalf/2
			line2     specSymbolWidth/2,    SymbSizeHalf/2,     (ss/2)*SIN(alf),     SymbSizeHalf/2
			line2   -specSymbolWidth/2,   -SymbSizeHalf/2,   -specSymbolWidth/2,   SymbSizeHalf/2
			line2    specSymbolWidth/2,   -SymbSizeHalf/2,    specSymbolWidth/2,   SymbSizeHalf/2

			fill    specSymbolSolidFill
			poly2_b    5,1+2+4, gs_cont_pen, gs_back_pen,
				-specSymbolWidth/2,   -SymbSizeHalf/2,	1,
				-(ss/2)*SIN(alf),    -SymbSizeHalf/2,	1,
				0, 0, 901,
				-(ss/2)*SIN(alf),    SymbSizeHalf/2,	3001,
				-specSymbolWidth/2,   SymbSizeHalf/2,	1

			poly2_b    5,1+2+4, gs_cont_pen, gs_cont_pen,
				specSymbolWidth/2,   -SymbSizeHalf/2,	1,
				(ss/2)*SIN(alf),    -SymbSizeHalf/2,	1,
				0, 0, 901,
				(ss/2)*SIN(alf),    SymbSizeHalf/2,	3001,
				specSymbolWidth/2,   SymbSizeHalf/2,	1
		endif

		if iSpecSymbolType = SPEC_FLUORESCENT_LONGLAST_1_CEIL then
			gosub	2200

			hotspot2     -specSymbolWidth/2,   -SymbSizeHalf/2
			hotspot2     -specSymbolWidth/2,   SymbSizeHalf/2
			hotspot2     specSymbolWidth/2,   -SymbSizeHalf/2
			hotspot2     specSymbolWidth/2,   SymbSizeHalf/2

			line2    -specSymbolWidth/2,   -SymbSizeHalf/2,    -(ss/2)*SIN(alf),    -SymbSizeHalf/2
			line2    -specSymbolWidth/2,    SymbSizeHalf/2,    -(ss/2)*SIN(alf),     SymbSizeHalf/2
			line2     specSymbolWidth/2,   -SymbSizeHalf/2,     (ss/2)*SIN(alf),    -SymbSizeHalf/2
			line2     specSymbolWidth/2,    SymbSizeHalf/2,     (ss/2)*SIN(alf),     SymbSizeHalf/2
			line2   -specSymbolWidth/2,   -SymbSizeHalf/2,   -specSymbolWidth/2,   SymbSizeHalf/2
			line2    specSymbolWidth/2,   -SymbSizeHalf/2,    specSymbolWidth/2,   SymbSizeHalf/2

			line2	(ss/2)*SIN(45),   (ss/2)*COS(45),		(ss/2)*SIN(225),   (ss/2)*COS(225)
			line2	(ss/2)*SIN(315),   (ss/2)*COS(315),		(ss/2)*SIN(135),   (ss/2)*COS(135)

			fill gs_fill_type
			poly2_b 5,1+2+4,gs_fill_pen,gs_back_pen,
				-specSymbolWidth/2,   -SymbSizeHalf/2,	1,
				-(ss/2)*SIN(alf),    -SymbSizeHalf/2,	1,
				0, 0, 901,
				-(ss/2)*SIN(alf),    SymbSizeHalf/2,	3001,
				-specSymbolWidth/2,   SymbSizeHalf/2,	1

			poly2_b 5,1+2+4,gs_fill_pen,gs_back_pen,
				specSymbolWidth/2,   -SymbSizeHalf/2,	1,
				(ss/2)*SIN(alf),    -SymbSizeHalf/2,	1,
				0, 0, 901,
				(ss/2)*SIN(alf),    SymbSizeHalf/2,	3001,
				specSymbolWidth/2,   SymbSizeHalf/2,	1
		endif

		if iSpecSymbolType = SPEC_FLUORESCENT_LONGLAST_2_CEIL then
			CircleFill = 0
			gosub	2200

			hotspot2     -specSymbolWidth/2,   -SymbSizeHalf
			hotspot2     -specSymbolWidth/2,   SymbSizeHalf
			hotspot2     specSymbolWidth/2,   -SymbSizeHalf
			hotspot2     specSymbolWidth/2,   SymbSizeHalf

			fill gs_fill_type
			poly2_b 4,1+2+4,gs_fill_pen,gs_back_pen,
				-specSymbolWidth/2,	-SymbSizeHalf,	1,
				-specSymbolWidth/2,	SymbSizeHalf,	1,
				specSymbolWidth/2,	SymbSizeHalf,	1,
				specSymbolWidth/2,	-SymbSizeHalf,	1

			line2    -specSymbolWidth/2,   0,    -ss/2,	0
			line2    specSymbolWidth/2,   0,    ss/2,	0

			line2	(ss/2)*SIN(45),   (ss/2)*COS(45),		(ss/2)*SIN(225),   (ss/2)*COS(225)
			line2	(ss/2)*SIN(315),   (ss/2)*COS(315),		(ss/2)*SIN(135),   (ss/2)*COS(135)
		endif

		if iSpecSymbolType = SPEC_WALL_WASHER then
			gosub	2200

			add2	0,	-ss/2+(ss/3)/2
			hotspot2     0, (ss/3)/2
			hotspot2    -(ss/3)/2, 0
			hotspot2     (ss/3)/2, 0
			circle2	0,	0,	(ss/3)/2
			del	1

		endif

		if iSpecSymbolType = SPEC_SPOT then


			ss1= specSymbolDepth/3
			add2	0,	-specSymbolDepth/2+ss1/2
			hotspot2     0, -ss1/2
			hotspot2     0, ss1/2
			hotspot2    -ss1/2, 0
			hotspot2     ss1/2, 0

			hotspot2     -ss/2, 	specSymbolDepth-ss1/2
			hotspot2     ss/2, 	specSymbolDepth-ss1/2

			fill gs_fill_type
			poly2_b 2,1+2+4,gs_fill_pen,gs_back_pen,
				0,0, 901,
				ss1/2, 360, 4001

			poly2_b 3,1+2+4,gs_fill_pen,gs_back_pen,
				0,	ss1/2, 1,
				ss/2, 	specSymbolDepth-ss1/2, 1,
				-ss/2, 	specSymbolDepth-ss1/2, 1
			del	1

		endif

		if iSpecSymbolType = SPEC_OUTDOOR_HID then
			gosub	2200

			ss1= ss*2/3

			hotspot2     ss/2,	ss/2
			hotspot2     ss/2,	-ss/2
			hotspot2     -ss/2,	ss/2
			hotspot2     -ss/2,	-ss/2

			circle2	0,	0,	ss1/2
			line2	ss/2,		ss/2,		(ss1/2)*SIN(45),   (ss1/2)*COS(45)
			line2	ss/2,		-ss/2,	(ss1/2)*SIN(135),   (ss1/2)*COS(135)
			line2	-ss/2,	-ss/2,	(ss1/2)*SIN(225),   (ss1/2)*COS(225)
			line2	-ss/2,	ss/2,		(ss1/2)*SIN(315),   (ss1/2)*COS(315)
		endif

		if	iSpecSymbolType = SPEC_EMERGENCY_FLOURESCENT_CEIL then
			hotspot2     -specSymbolWidth/2,   -SymbSizeHalf/2
			hotspot2     -specSymbolWidth/2,   SymbSizeHalf/2
			hotspot2     specSymbolWidth/2,   -SymbSizeHalf/2
			hotspot2     specSymbolWidth/2,   SymbSizeHalf/2


			fill gs_fill_type
			poly2_b 5,1+2+4,gs_fill_pen,gs_back_pen,
				-specSymbolWidth/2,				-SymbSizeHalf/2, 1,
				-specSymbolWidth/2,    			SymbSizeHalf/2, 1,
				-(ss/2)*SIN(alf),		SymbSizeHalf/2, 1,
				0,0, 901,
				-(ss/2)*SIN(alf),		-SymbSizeHalf/2, 3001
			poly2_b 5,1+2+4,gs_fill_pen,gs_back_pen,
				specSymbolWidth/2,				-SymbSizeHalf/2, 1,
				specSymbolWidth/2,    			SymbSizeHalf/2, 1,
				(ss/2)*SIN(alf),		SymbSizeHalf/2, 1,
				0,0, 901,
				(ss/2)*SIN(alf),		-SymbSizeHalf/2, 3001
			gosub	2200
			add2	-ss,	0
			gosub	2200
			gosub	2400
			del	1
		endif


		if iSpecSymbolType = SPEC_EMERGENCY_FLOURESCENT_WALL then
			hotspot2     -specSymbolWidth/2,   -SymbSizeHalf/2
			hotspot2     -specSymbolWidth/2,   SymbSizeHalf/2
			hotspot2     specSymbolWidth/2,   -SymbSizeHalf/2
			hotspot2     specSymbolWidth/2,   SymbSizeHalf/2

			fill gs_fill_type
			poly2_b 5,1+2+4,gs_fill_pen,gs_back_pen,
				-specSymbolWidth/2,				-SymbSizeHalf/2, 1,
				-specSymbolWidth/2,    			SymbSizeHalf/2, 1,
				-(ss/2)*SIN(alf),		SymbSizeHalf/2, 1,
				0,0, 901,
				-(ss/2)*SIN(alf),		-SymbSizeHalf/2, 3001
			poly2_b 5,1+2+4,gs_fill_pen,gs_back_pen,
				specSymbolWidth/2,				-SymbSizeHalf/2, 1,
				specSymbolWidth/2,    			SymbSizeHalf/2, 1,
				(ss/2)*SIN(alf),		SymbSizeHalf/2, 1,
				0,0, 901,
				(ss/2)*SIN(alf),		-SymbSizeHalf/2, 3001

			CircleFill = 2
			gosub	2200
			gosub	2300
			add2	-ss,	0
			gosub	2200
			gosub	2400
			del	1
		endif

		if iSpecSymbolType = SPEC_EMERGENCY_VERT_WALL then
			add2	0,	-ss
			gosub	2200
			gosub	2300

			hotspot2     -SymbSizeHalf/2,    specSymbolDepth-ss/2
			hotspot2     SymbSizeHalf/2,    specSymbolDepth-ss/2

			fill gs_fill_type
			poly2_b 5,1+2+4,gs_fill_pen,gs_back_pen,
				-SymbSizeHalf/2,	(ss/2)*sin(alf),	1,
				0,		0,					901,
				SymbSizeHalf/2,	(ss/2)*sin(alf),	3001,
				SymbSizeHalf/2,	specSymbolDepth-ss/2,			1,
				-SymbSizeHalf/2,	specSymbolDepth-ss/2,			1
			del	1

			gosub	2200
			gosub	2400
		endif

		if iSpecSymbolType = SPEC_EMERGENCY_VERT_WALL_CIRC then
			add2	0,	-ss
			gosub	2200
			gosub	2300

			hotspot2     -SymbSizeHalf/2,    specSymbolDepth-ss/2
			hotspot2     SymbSizeHalf/2,    specSymbolDepth-ss/2

			fill gs_fill_type
			poly2_b 5,1+2+4,gs_fill_pen,gs_back_pen,
				-SymbSizeHalf/2,	(ss/2)*sin(alf),	1,
				0,		0,					901,
				SymbSizeHalf/2,	(ss/2)*sin(alf),	3001,
				SymbSizeHalf/2,	specSymbolDepth-ss/2,			1,
				-SymbSizeHalf/2,	specSymbolDepth-ss/2,			1
			del	1

			gosub	2200
			line2	(ss/2)*SIN(45),   (ss/2)*COS(45),		(ss/2)*SIN(225),   (ss/2)*COS(225)
			line2	(ss/2)*SIN(315),   (ss/2)*COS(315),		(ss/2)*SIN(135),   (ss/2)*COS(135)
		endif
	endif
endif


end

! ==============================================================================

"wall":
	add2 0, -r

	line2 -r, r, r, r
	hotspot2 -r, r
	hotspot2 r, r
	hotspot2 0, r
return

"wallspotold":
	add2 r, 0

	line2 -r, -r, -r, r
	hotspot2 -r, -r
	hotspot2 -r, r
	hotspot2 -r, r
return

"arrow":
	rot2 rz
	line2     0, -r,  0,    -4*r
	line2     0, -4*r,  0.8*r, -2.8*r
	line2     0, -4*r, -0.8*r, -2.8*r
	del 1
return

"sun":
	rot2 45
	for ii = 1 to 4
		line2 r, 0, r*1.4, 0
		rot2 90
	next ii
	del 4+1
return



! ==============================================================================
! Japanese subroutines
! ==============================================================================

2200:
hotspot2     0,-ss/2
hotspot2     0, ss/2
hotspot2    -ss/2, 0
hotspot2     ss/2, 0

fill gs_fill_type
if CircleFill then
	if CircleFill = 1 then	! full circle fill
		poly2_b 2, 1 + 2 + 4,gs_fill_pen,gs_back_pen,
			0,0, 901,
			ss/2, 360, 4001
	else
		poly2_b 3, 1 + 2 + 4,gs_fill_pen,gs_back_pen,
			0, 0, 901,
			(ss/2)*SIN(120),   (ss/2)*COS(120), 1,
			0, 240, 4001
	endif
else
	circle2 0,0, ss/2
endif

return


2300:
fill    specSymbolSolidFill
poly2_b    3,1+2+4, gs_cont_pen, gs_back_pen,
		0, 0, 901,
		(ss/2)*SIN(120),   (ss/2)*COS(120), 1,
		0, -120, 4001
return


2400:
fill    specSymbolSolidFill
poly2    24,1+2+4,
	(ss/2)*SIN(0),   (ss/2)*COS(0),
	(ss/2)*SIN(15),   (ss/2)*COS(15),
	(ss/2)*SIN(30),   (ss/2)*COS(30),
	(ss/2)*SIN(45),   (ss/2)*COS(45),
	(ss/2)*SIN(60),   (ss/2)*COS(60),
	(ss/2)*SIN(75),   (ss/2)*COS(75),
	(ss/2)*SIN(90),   (ss/2)*COS(90),
	(ss/2)*SIN(105),   (ss/2)*COS(105),
	(ss/2)*SIN(120),   (ss/2)*COS(120),
	(ss/2)*SIN(135),   (ss/2)*COS(135),
	(ss/2)*SIN(150),   (ss/2)*COS(150),
	(ss/2)*SIN(165),   (ss/2)*COS(165),
	(ss/2)*SIN(180),   (ss/2)*COS(180),
	(ss/2)*SIN(195),   (ss/2)*COS(195),
	(ss/2)*SIN(210),   (ss/2)*COS(210),
	(ss/2)*SIN(225),   (ss/2)*COS(225),
	(ss/2)*SIN(240),   (ss/2)*COS(240),
	(ss/2)*SIN(255),   (ss/2)*COS(255),
	(ss/2)*SIN(270),   (ss/2)*COS(270),
	(ss/2)*SIN(285),   (ss/2)*COS(285),
	(ss/2)*SIN(300),   (ss/2)*COS(300),
	(ss/2)*SIN(315),   (ss/2)*COS(315),
	(ss/2)*SIN(330),   (ss/2)*COS(330),
	(ss/2)*SIN(345),   (ss/2)*COS(345)
return


]]>
</Script_2D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_1D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
EPS = 0.0001

dim textOrientation[3]
	textOrientation[1] = `Читаемый`
	textOrientation[2] = `Всегда Горизонтально`
	textOrientation[3] = `Выровнять по Символу`

dim stSpecLampTypes[]
	stSpecLampTypes[ 1]	= `Лампа Накаливания`
	stSpecLampTypes[ 2]	= `Точечный Потолочный Светильник`
	stSpecLampTypes[ 3]	= `Потолочное Освещение`
	stSpecLampTypes[ 4]	= `Люстра`
	stSpecLampTypes[ 5]	= `Подвес Цепной`
	stSpecLampTypes[ 6]	= `Подвес Штоковый`
	stSpecLampTypes[ 7]	= `Подвес Кабельный`
	stSpecLampTypes[ 8]	= `Стена с Лампой Накаливания`
	stSpecLampTypes[ 9]	= `Долговечная Лампа Накаливания`
	stSpecLampTypes[10]	= `Светильник Аварийного Освещения с Лампой Накаливания`
	stSpecLampTypes[11]	= `Потолочный Светильник Аварийного Освещения с Флуоресцентной Лампой`
	stSpecLampTypes[12]	= `Потолочный Светильник с Двумя Флуоресцентными Лампами`
	stSpecLampTypes[13]	= `Потолочный Светильник с Тремя Флуоресцентными Лампами`
	stSpecLampTypes[14]	= `Потолочный Светильник с Четырьмя Флуоресцентными Лампами`
	stSpecLampTypes[15]	= `Настенный Светильник с Флуоресцентной Лампой `
	stSpecLampTypes[16]	= `Настенный Светильник с Двумя Флуоресцентными Лампами`
	stSpecLampTypes[17]	= `Вертикальный Настенный Светильник с Флуоресцентной Лампой`
	stSpecLampTypes[18]	= `Потолочный Светильник Аварийного Освещения с Флуоресцентной Лампой`
	stSpecLampTypes[19]	= `Потолочный Светильник с Долговечной Флуоресцентной Лампой `
	stSpecLampTypes[20]	= `Потолочный Светильник с Двумя Долговечными Флуоресцентными Лампами`
	stSpecLampTypes[21]	= `Линейный Прожектор Освещения Стены`
	stSpecLampTypes[22]	= `Точечный Светильник`
	stSpecLampTypes[23]	= `Наружные Газоразрядные Лампы`
	stSpecLampTypes[24]	= `Потолочный Светильник Аварийного Освещения с Флуоресцентной Лампой`
	stSpecLampTypes[25]	= `Настенный Светильник Аварийного Освещения с Флуоресцентной Лампой`
	stSpecLampTypes[26]	= `Вертикальный Настенный Светильник Аварийного Освещения`
	stSpecLampTypes[27]	= `Вертикальный Настенный Автономный Светильник Аварийного Освещения`

! const values for parameter : iSpecSymbolType
SPEC_SYMBOL_HAS_NO_2D				= 0
SPEC_INCADESCENT					= 1
SPEC_DOWNLIGHT						= 2
SPEC_CEILING						= 3
SPEC_CHANDELIER						= 4
SPEC_PENDANT_CHAIN					= 5
SPEC_PENDANT_PIPE					= 6
SPEC_PENDANT_CORD					= 7
SPEC_INCADESCENT_WALL				= 8
SPEC_INCADESCENT_LONGLAST			= 9
SPEC_INCADESCENT_EMERGENCY			= 10
SPEC_FLUORESCENT_1_CEILING			= 11
SPEC_FLUORESCENT_2_CEILING			= 12
SPEC_FLUORESCENT_3_CEILING			= 13
SPEC_FLUORESCENT_4_CEILING			= 14
SPEC_FLUORESCENT_1_WALL				= 15
SPEC_FLUORESCENT_2_WALL				= 16
SPEC_FLUORESCENT_VERT_WALL			= 17
SPEC_FLUORESCENT_EMERGENCY_CEIL		= 18
SPEC_FLUORESCENT_LONGLAST_1_CEIL	= 19
SPEC_FLUORESCENT_LONGLAST_2_CEIL	= 20
SPEC_WALL_WASHER					= 21
SPEC_SPOT							= 22
SPEC_OUTDOOR_HID					= 23
SPEC_EMERGENCY_FLOURESCENT_CEIL		= 24
SPEC_EMERGENCY_FLOURESCENT_WALL		= 25
SPEC_EMERGENCY_VERT_WALL			= 26
SPEC_EMERGENCY_VERT_WALL_CIRC		= 27


dim iSpecLampTypes[]
	for i = 1 to vardim1(stSpecLampTypes)
		iSpecLampTypes[i] = i
	next i

dim stSymbolType[8]
	stSymbolType[1] = `Тип 1`
	stSymbolType[2] = `Тип 2`
	stSymbolType[3] = `Тип 3`
	stSymbolType[4] = `Тип 4`
	stSymbolType[5] = `Тип 5`
	stSymbolType[6] = `Тип 6`
	stSymbolType[7] = `Тип 7`
	stSymbolType[8] = `Тип 8`

SYMBOL_REALISTIC	= 1
SYMBOL_ELECTRIC		= 2
SYMBOL_RCP			= 3
SYMBOL_BYMVO		= 4

disflag = 0
if (gs_symbtype_2D_m = SYMBOL_REALISTIC) | NOT(show_txt) then			! Realistic Symbol
	disflag = 4
endif

_bEnableJPNText =	(bEnableTextOnRealisticSymbol | \
					(LibraryLangCode = "JPN" & \
					(iSpecSymbolType = SPEC_SYMBOL_HAS_NO_2D | \
					iSpecSymbolType = SPEC_DOWNLIGHT | \
	                iSpecSymbolType = SPEC_CEILING | \
	                iSpecSymbolType = SPEC_CHANDELIER | \
	                iSpecSymbolType = SPEC_PENDANT_CHAIN | \
					iSpecSymbolType = SPEC_PENDANT_PIPE)))







]]>
</Script_1D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_VL SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
! ==============================================================================
! 2D Symbol
! ==============================================================================

! iEnableLampSymbolTypes - possible values
!	2		- enable Type 1
!	4		- enable Type 2
!	8		- enable Type 3
!	16		- enable Type 4
!	32		- enable Type 5
!	64		- enable Type 6
!	128		- enable Type 7
!	256		- enable Type 8

if bEnableSymbolTypes & iEnableLampSymbolTypes > EPS then
	dim symbolTypeValueList[]
	j = 1
	for i = 1 to vardim1(stSymbolType)
		if bittest(iEnableLampSymbolTypes, i) then
			put i
			symbolTypeValueList[j] = stSymbolType[i]
			j = j + 1
		endif
	next i
	values "iSymbolType" get(NSP)
	values "symbolType" symbolTypeValueList
	if GLOB_MODPAR_NAME = "symbolType" then
		for i = 1 to vardim1(stSymbolType)
			if symbolType = stSymbolType[i] then iSymbolType = i
		next i
		parameters iSymbolType = iSymbolType
	else
		symbolType = stSymbolType[max(iSymbolType, 1)]
		parameters symbolType = symbolType
	endif
endif

values "typeTextRotation" textOrientation
values "typeTextRotation_m" 2, 1, 0

if GLOB_MODPAR_NAME = "typeTextRotation" then
	if typeTextRotation = textOrientation[1]	then typeTextRotation_m = 2
	if typeTextRotation = textOrientation[2]	then typeTextRotation_m = 1
	if typeTextRotation = textOrientation[3]	then typeTextRotation_m = 0
	parameters typeTextRotation_m = typeTextRotation_m
else
	if typeTextRotation_m = 2					then typeTextRotation = textOrientation[1]
	if typeTextRotation_m = 1					then typeTextRotation = textOrientation[2]
	if typeTextRotation_m = 0					then typeTextRotation = textOrientation[3]
	parameters typeTextRotation = typeTextRotation
endif

if gs_symbtype_2D_m = 1 then					! Realistic Symbol
	lock			"ss"
	hideparameter	"ss"
endif

values "ss" range(0,]

if	(NOT(bEnableFillOnRealisticSymbol) and (iEnableLampSymbolTypes < 1 | gs_symbtype_2D_m = SYMBOL_REALISTIC)) then
	lock			"gs_fill_type",
					"gs_fill_pen",
					"gs_back_pen"
	hideparameter	"gs_fill_type",
					"gs_fill_pen",
					"gs_back_pen"
endif

if NOT(bEnableTextOnRealisticSymbol) and gs_symbtype_2D_m = 1 then
	lock			"show_txt"
	hideparameter	"show_txt"
endif

if NOT(show_txt) | (NOT(bEnableTextOnRealisticSymbol) and gs_symbtype_2D_m = 1) | (not(_bEnableJPNText) & LibraryLangCode = "JPN") then
	lock			"txt",
					"fontType",
					"fsz",
					"fsz_point",
					"gs_text_style_bold",
					"gs_text_style_italic",
					"gs_text_style_underline",
					"gs_text_style_strike",
					"typeTextRotation",
					"typeTextRotation_m",
					"txt_pos_x",
					"txt_pos_y"
	hideparameter	"txt",
					"fontType",
					"fsz",
					"fsz_point",
					"gs_text_style_bold",
					"gs_text_style_italic",
					"gs_text_style_underline",
					"gs_text_style_strike",
					"typeTextRotation",
					"typeTextRotation_m",
					"txt_pos_x",
					"txt_pos_y"
endif

Dot_in_mm = 25.4 / 72

! Synhronized mm and point in marker width
if GLOB_MODPAR_NAME = "fsz" then
	parameters fsz_point = fsz / Dot_in_mm
	fsz_point = fsz / Dot_in_mm
endif
if GLOB_MODPAR_NAME = "fsz_point" then
	parameters fsz = fsz_point * Dot_in_mm
	fsz = fsz_point * Dot_in_mm
endif

parameters fsz = abs(fsz)
values "fsz" range (0,]
values "fsz_point" range (0,]

hideparameter	"fsz_point"

! ==============================================================================
!	Japanese parameters logic
! ==============================================================================

if LibraryLangCode <> "JPN" then
	if bEnableSymbolTypes then
		lock	"iSpecSymbolType",
				"specSymbolWidth",
				"specSymbolDepth"
		hideparameter	"iSpecSymbolType",
						"specSymbolWidth",
						"specSymbolDepth"
	endif
else
	values{2} "iSpecSymbolType"	iSpecLampTypes,			stSpecLampTypes,
								SPEC_SYMBOL_HAS_NO_2D,	"No 2D Special Symbol"

	if gs_symbtype_2D_m = 1 then
		lock			"iSpecSymbolType"
		hideparameter	"iSpecSymbolType"
	endif

	if not(_bEnableJPNText) then
		show_txt = 0
		parameters show_txt = show_txt

		lock			"show_txt"
		hideparameter	"show_txt"
	endif

	if bEnableSymbolTypes then
		if	(iSpecSymbolType <> SPEC_FLUORESCENT_1_CEILING & \
			iSpecSymbolType <> SPEC_FLUORESCENT_2_CEILING & \
			iSpecSymbolType <> SPEC_FLUORESCENT_3_CEILING & \
			iSpecSymbolType <> SPEC_FLUORESCENT_4_CEILING & \
			iSpecSymbolType <> SPEC_FLUORESCENT_1_WALL & \
			iSpecSymbolType <> SPEC_FLUORESCENT_2_WALL & \
			iSpecSymbolType <> SPEC_FLUORESCENT_EMERGENCY_CEIL & \
			iSpecSymbolType <> SPEC_FLUORESCENT_LONGLAST_1_CEIL & \
			iSpecSymbolType <> SPEC_FLUORESCENT_LONGLAST_2_CEIL & \
			iSpecSymbolType <> SPEC_EMERGENCY_FLOURESCENT_CEIL & \
			iSpecSymbolType <> SPEC_EMERGENCY_FLOURESCENT_WALL) |\
			gs_symbtype_2D_m = 1 	then

			lock			"specSymbolWidth"
			hideparameter	"specSymbolWidth"
		endif

		if	(iSpecSymbolType <> SPEC_FLUORESCENT_VERT_WALL & \
			iSpecSymbolType <> SPEC_SPOT & \
			iSpecSymbolType <> SPEC_EMERGENCY_VERT_WALL & \
			iSpecSymbolType <> SPEC_EMERGENCY_VERT_WALL_CIRC) |\
			gs_symbtype_2D_m = 1 	then

			lock			"specSymbolDepth"
			hideparameter	"specSymbolDepth"
		endif
	endif

	if GLOB_MODPAR_NAME = "iSpecSymbolType" then
		if iSpecSymbolType = SPEC_DOWNLIGHT then txt="DL"
		if iSpecSymbolType = SPEC_CEILING then txt="CL"
		if iSpecSymbolType = SPEC_CHANDELIER then txt="CH"
		if iSpecSymbolType = SPEC_PENDANT_CHAIN then txt="CP"
		if iSpecSymbolType = SPEC_PENDANT_PIPE then txt="P"
		parameters txt = txt
	endif
endif



]]>
</Script_VL>

<ParamSection SectVersion="22" SectionFlags="0" SubIdent="0">
	<ParamSectHeader>
		<AutoHotspots>false</AutoHotspots>
		<StatBits>
			<STBit_UIDefault/>
			<STBit_FixSize/>
		</StatBits>
		<WDLeftFrame>0</WDLeftFrame>
		<WDRightFrame>0</WDRightFrame>
		<WDTopFrame>0</WDTopFrame>
		<WDBotFrame>0</WDBotFrame>
		<LayFlags>65535</LayFlags>
		<WDMirrorThickness>0</WDMirrorThickness>
		<WDWallInset>0</WDWallInset>
	</ParamSectHeader>
	<Parameters>
		<Length Name="A">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Value>0.265</Value>
		</Length>
		<Length Name="B">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Value>0.24</Value>
		</Length>
		<LightSwitch Name="gs_light_switch">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Value>1</Value>
		</LightSwitch>
		<ColorRGB Name="gs_color_red">
			<Description><![CDATA["Red"]]></Description>
			<Fix/>
			<Value>1</Value>
		</ColorRGB>
		<ColorRGB Name="gs_color_green">
			<Description><![CDATA["Green"]]></Description>
			<Fix/>
			<Value>1</Value>
		</ColorRGB>
		<ColorRGB Name="gs_color_blue">
			<Description><![CDATA["Blue"]]></Description>
			<Fix/>
			<Value>1</Value>
		</ColorRGB>
		<Intensity Name="gs_light_intensity">
			<Description><![CDATA["Intensity"]]></Description>
			<Fix/>
			<Value>100</Value>
		</Intensity>
		<Length Name="ZZYZX">
			<Description><![CDATA["Height"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Boolean Name="AC_show2DHotspotsIn3D">
			<Description><![CDATA["Show 2D Hotspots in 3D"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="ac_bottomlevel">
			<Description><![CDATA["Bottom Level"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="ac_toplevel">
			<Description><![CDATA["Top Level"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Integer Name="gs_resol">
			<Description><![CDATA["Resolution"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>16</Value>
		</Integer>

		<!-- gs_2D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_2D_representation">
			<Description><![CDATA["2D Representation"]]></Description>
			<Fix/>
		</Title>
		<Integer Name="gs_symbtype_2D_m">
			<Description><![CDATA["2D Symbol Type (Electrical(2) or RCP(3))"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="ss">
			<Description><![CDATA["Symbol Size"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Boolean Name="bWallLamp">
			<Description><![CDATA["Lamp Type (Wall(1) or Usual(0))"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="bCeilingLamp">
			<Description><![CDATA["Lamp Type Ceiling"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bSpotSingle">
			<Description><![CDATA["Called by Single Spotlight"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bDirect">
			<Description><![CDATA["Lamp Type (Directed(1) or Usual(0))"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="bRectSymbol">
			<Description><![CDATA["Rectangular Symbol"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Angle Name="rx">
			<Description><![CDATA["Rotation 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>90</Value>
		</Angle>
		<Angle Name="rz">
			<Description><![CDATA["Rotation 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>10</Value>
		</Angle>
		<Boolean Name="bEnableSymbolTypes">
			<Description><![CDATA["Enable Symbol Types"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Integer Name="iEnableLampSymbolTypes">
			<Description><![CDATA["Lamp Symbols Enabled"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Boolean Name="bEnableTextOnRealisticSymbol">
			<Description><![CDATA["Enable Text on Realistic Symbol"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bEnableFillOnRealisticSymbol">
			<Description><![CDATA["Enable Fill on Realistic Symbol"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<String Name="symbolType">
			<Description><![CDATA["Symbol"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Тип 1"]]></Value>
		</String>
		<Integer Name="iSymbolType">
			<Description><![CDATA["Symbol"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<PenColor Name="gs_cont_pen">
			<Description><![CDATA["Contour Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>77</Value>
		</PenColor>
		<FillPattern Name="gs_fill_type">
			<Description><![CDATA["Fill Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_fill_pen">
			<Description><![CDATA["Fill Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>137</Value>
		</PenColor>
		<PenColor Name="gs_back_pen">
			<Description><![CDATA["Fill Background Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>137</Value>
		</PenColor>
		<Boolean Name="bRotateIndependently">
			<Description><![CDATA["Rotate Independently"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Angle Name="angleSymbolRotation">
			<Description><![CDATA["Symbol Rotation Angle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>

		<!-- show_txt: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Boolean Name="show_txt">
			<Description><![CDATA["Show Text"]]></Description>
			<Flags>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<String Name="txt">
			<Description><![CDATA["Text"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["С"]]></Value>
		</String>
		<String Name="fontType">
			<Description><![CDATA["Font Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Arial"]]></Value>
		</String>
		<RealNum Name="fsz">
			<Description><![CDATA["Font Size (mm)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>10</Value>
		</RealNum>
		<RealNum Name="fsz_point">
			<Description><![CDATA["Font Size (point)"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>28.3464566929</Value>
		</RealNum>
		<Boolean Name="gs_text_style_bold">
			<Description><![CDATA["Font Style Bold"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_text_style_italic">
			<Description><![CDATA["Font Style Italic"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_text_style_underline">
			<Description><![CDATA["Font Style Underline"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="gs_text_style_strike">
			<Description><![CDATA["Font Style Strikethrough"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<String Name="typeTextRotation">
			<Description><![CDATA["Text Orientation on Symbol"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Читаемый"]]></Value>
		</String>
		<Integer Name="typeTextRotation_m">
			<Description><![CDATA["Text Orientation on Symbol"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="sLibpartName">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="LibraryLangCode">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value><![CDATA["RUS"]]></Value>
		</String>
		<Length Name="txt_pos_x">
			<Description><![CDATA["Text"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.2</Value>
		</Length>
		<Length Name="txt_pos_y">
			<Description><![CDATA["Text"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>-0.1</Value>
		</Length>
		<Angle Name="gs_readable_angle">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>90</Value>
		</Angle>
		<Integer Name="Symbol_unID">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Integer>
		<Boolean Name="bMigrationRotZ">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- specialSymbParams: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="specialSymbParams">
			<Description><![CDATA["Japanese Symbol Parameters"]]></Description>
		</Title>
		<Integer Name="iSpecSymbolType">
			<Description><![CDATA["Symbol Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>10</Value>
		</Integer>
		<Length Name="specSymbolWidth">
			<Description><![CDATA["Symbol Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.7</Value>
		</Length>
		<Length Name="specSymbolDepth">
			<Description><![CDATA["Sign Depth"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.25</Value>
		</Length>
		<Angle Name="specSymbolRotation">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<FillPattern Name="specSymbolSolidFill">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>64</Value>
		</FillPattern>

		<!-- gs_list: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_list">
			<Description><![CDATA["Parameters for Listing"]]></Description>
			<Fix/>
		</Title>
		<String Name="gs_list_lampGroup">
			<Description><![CDATA["Lamp Group"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<RealNum Name="gs_list_cost">
			<Description><![CDATA["Cost"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="gs_list_manufacturer">
			<Description><![CDATA["Manufacturer"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_note">
			<Description><![CDATA["Note/Remarks"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_location">
			<Description><![CDATA["Location"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_accessories">
			<Description><![CDATA["Accessories"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<RealNum Name="gs_list_volts">
			<Description><![CDATA["Volts"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="FM_Type">
			<Description><![CDATA["Group Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Электрические Устройства"]]></Value>
		</String>
		<Integer Name="iFMType">
			<Description><![CDATA["Group Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>8</Value>
		</Integer>
		<String Name="FM_InventoryNumber">
			<Description><![CDATA["Inventory Number"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_SerialNumber">
			<Description><![CDATA["Serial Number"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_ProductionYear">
			<Description><![CDATA["Production Year"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<RealNum Name="FM_ObjectWeight">
			<Description><![CDATA["Object Weight"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="FM_ObjectWeightUnit">
			<Description><![CDATA["Object Weight Unit"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["кг"]]></Value>
		</String>
		<RealNum Name="FM_PowerConsumption">
			<Description><![CDATA["Wattage"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<RealNum Name="FM_Egress">
			<Description><![CDATA["Egress"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="gs_list_custom1">
			<Description><![CDATA["User Defined 1"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom2">
			<Description><![CDATA["User Defined 2"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom3">
			<Description><![CDATA["User Defined 3"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom4">
			<Description><![CDATA["User Defined 4"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom5">
			<Description><![CDATA["User Defined 5"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_lamptype">
			<Description><![CDATA["Lamps Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_lens">
			<Description><![CDATA["Lens"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_mounting">
			<Description><![CDATA["Mounting Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<RealNum Name="FM_NumberOfLights">
			<Description><![CDATA["Number of Lights"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<RealNum Name="FM_WattPerLight">
			<Description><![CDATA["Watt per Light"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<Boolean Name="FM_Mobile">
			<Description><![CDATA["Mobil Lamp"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- gs_onorm_Title: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_onorm_Title">
			<Description><![CDATA["Additional Listing Parameters"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
		</Title>
		<String Name="gs_onorm_name_value">
			<Description><![CDATA["Description Value"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_name">
			<Description><![CDATA["Additional Description"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_height">
			<Description><![CDATA["Additional Height"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<RealNum Name="gs_onorm_powercons">
			<Description><![CDATA["Additional Power Consumption"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="gs_onorm_aks">
			<Description><![CDATA["AKS Number"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_product">
			<Description><![CDATA["Product Name"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_leistungbuch">
			<Description><![CDATA["Collection of Specifications ID"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_description">
			<Description><![CDATA["Additional Description"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_id">
			<Description><![CDATA["ID Number"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_admission">
			<Description><![CDATA["Admission Date"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_onorm_modification">
			<Description><![CDATA["Modification Date"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Boolean Name="bSymbolType">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="bText">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="bSize">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="bStyleTab">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Unique/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Boolean>
	</Parameters>
</ParamSection>

<Ancestry SectVersion="1" SectionFlags="0" SubIdent="0" Template="false">
	<MainGUID>F938E33A-329D-4A36-BE3E-85E126820996</MainGUID>
	<MainGUID>103E8D2C-8230-42E1-9597-46F84CCE28C0</MainGUID>
	<MainGUID>0DF8E541-68EB-4102-8886-C144F74770E0</MainGUID>
	<MainGUID>51A838E5-0F40-4F6D-A658-CF2845581749</MainGUID>
</Ancestry>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_PR SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_PR>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_UI SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_UI>

<Comment SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[	call "Lamp_symbol" parameters all \
									bWallLamp = 0/1,
									bDirect = 0/1


bWallLamp
			0 - Usual Lamp
			1 - Wall Lamp (draw wall symbol as well)
bDirect
			0 - Usual Lamp
			1 - Diercted Lamp (draw arrow on symbol)]]>
</Comment>

<CalledMacros SectVersion="2" SectionFlags="0" SubIdent="0">
</CalledMacros>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_FWM SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_FWM>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_BWM SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_BWM>

<Copyright SectVersion="1" SectionFlags="0" SubIdent="0">
	<Author>GRAPHISOFT</Author>
	<License>
		<Type>CC BY-ND</Type>
		<Version>3.0</Version>
	</License>
</Copyright>

</Symbol>
