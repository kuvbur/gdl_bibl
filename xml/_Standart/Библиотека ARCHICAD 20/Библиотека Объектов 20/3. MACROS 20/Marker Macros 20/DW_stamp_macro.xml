<?xml version="1.0" encoding="UTF-8"?>
<Symbol IsArchivable="false" IsPlaceable="false" MainGUID="9F27F6D3-5C80-4D27-9A19-9561B9A86A13" MigrationValue="Normal" Owner="1196638531" Signature="1196644685" Version="38">
<Ancestry SectVersion="1" SectionFlags="0" SubIdent="0" Template="false">
	<MainGUID>F938E33A-329D-4A36-BE3E-85E126820996</MainGUID>
	<MainGUID>B176ABF1-5813-478F-926B-28EE7C5DC1F7</MainGUID>
	<MainGUID>4FD10D67-2F29-4844-A65A-6597589B0CB5</MainGUID>
	<MainGUID>B3A106BF-6277-456E-8657-65B5C2D1C315</MainGUID>
	<MainGUID>9C0F3C78-D2CB-4528-ADA2-703C8A09FC1A</MainGUID>
</Ancestry>

<CalledMacros SectVersion="2" SectionFlags="0" SubIdent="0">
	<Macro>
		<MName><![CDATA["TnCParamRequest"]]></MName>
		<MainGUID>B0E0B0AA-204C-48E0-8BAC-6B7A1CBAE218</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["quantity_text_writer"]]></MName>
		<MainGUID>61AA9A1B-4B04-4056-BE1E-A87F7E4CEC66</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["ui_tab_popup"]]></MName>
		<MainGUID>A0E69B6A-A2E3-4BA9-BFE2-EEB20935B708</MainGUID>
	</Macro>
</CalledMacros>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_3D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_3D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_2D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
unID = 1

nTrans = 0
! -------------------------------------------------------------------------------
! Detail level setting
! -------------------------------------------------------------------------------
bDetailed	= 0
if iDetLevel = DETLEV_DETAILED | (iDetLevel = DETLEV_SCALESENS & GLOB_SCALE < 51) then bDetailed = 1

if bDetailed then
	bShowID				= bShowID_detailed
	bShowWallholeDim	= bShowWallholeDim_detailed
	bShowUnitDim		= bShowUnitDim_detailed
	bShowFire			= bShowFire_detailed
	bShowAcoustic		= bShowAcoustic_detailed
	bShowUValue			= bShowUValue_detailed
	bShowMaterial		= bShowMaterial_detailed
	bShowHardware		= bShowHardware_detailed
	bShowAdditionalTags	= bShowAdditionalTags_detailed
	
	if bWindow then
		bShowEgressDim	= 0
		bShowRevealDim	= bShowRevealDim_detailed
		bShowSill		= bShowSill_detailed
		bShowCust1		= bShowCust1_detailed
		bShowCust2		= bShowCust2_detailed
		bShowThreshold	= 0
		bShowHandle		= 0
		bShowCust		= 0
	else
		bShowEgressDim	= bShowEgressDim_detailed
		bShowRevealDim	= 0
		bShowSill		= 0
		bShowCust1		= 0
		bShowCust2		= 0
		bShowThreshold	= bShowThreshold_detailed
		bShowHandle		= bShowHandle_detailed
		bShowCust		= bShowCust_detailed
	endif
else
	bShowID				= bShowID_simple
	bShowWallholeDim	= bShowWallholeDim_simple
	bShowUnitDim		= bShowUnitDim_simple
	bShowFire			= bShowFire_simple
	bShowAcoustic		= bShowAcoustic_simple
	bShowUValue			= bShowUValue_simple
	bShowMaterial		= bShowMaterial_simple
	bShowHardware		= bShowHardware_simple
	bShowAdditionalTags	= bShowAdditionalTags_simple

	if bWindow then
		bShowEgressDim	= 0
		bShowRevealDim	= bShowRevealDim_simple
		bShowSill		= bShowSill_simple
		bShowCust1		= bShowCust1_simple
		bShowCust2		= bShowCust2_simple
		bShowThreshold	= 0
		bShowHandle		= 0
		bShowCust		= 0
	else
		bShowEgressDim	= bShowEgressDim_simple
		bShowRevealDim	= 0
		bShowSill		= 0
		bShowCust1		= 0
		bShowCust2		= 0
		bShowThreshold	= bShowThreshold_simple
		bShowHandle		= bShowHandle_simple
		bShowCust		= bShowCust_simple
	endif
endif


! -------------------------------------------------------------------------------
! Get value strings
! -------------------------------------------------------------------------------

if iWorkUnitLinear = DIMUNIT_PROJECT then
	widthHeightForm = ""
	rrr = request("Window_Door_Dimension", "", whForm)
	if rrr then widthHeightForm = whForm
else
	if iWorkUnitLinear = DIMUNIT_MM 	then widthHeightForm = "%~0." + str(iWorkUnitLinearDecimal,1,0) + "mm"		!mm
	if iWorkUnitLinear = DIMUNIT_CM 	then widthHeightForm = "%~0." + str(iWorkUnitLinearDecimal,1,0) + "cm"		!cm
	if iWorkUnitLinear = DIMUNIT_DM | iWorkUnitLinear = DIMUNIT_METER	then
		widthHeightForm = "%~0." + str(iWorkUnitLinearDecimal,1,0) + "m"		!m
	endif
	if iWorkUnitLinear = DIMUNIT_INCH 	then widthHeightForm = "%0.64fi"
endif

if iWorkUnitSillHgt = DIMUNIT_PROJECT then
	sillHeightForm = ""
	rrr = request("Sill_height_dimension", "", sillForm)
	if rrr then sillHeightForm = sillForm
else
	if iWorkUnitSillHgt = DIMUNIT_MM 	then sillHeightForm = "%~0." + str(iWorkUnitSillHgtDecimal,1,0) + "mm"		!mm
	if iWorkUnitSillHgt = DIMUNIT_CM 	then sillHeightForm = "%~0." + str(iWorkUnitSillHgtDecimal,1,0) + "cm"		!cm
	if iWorkUnitSillHgt = DIMUNIT_DM | iWorkUnitSillHgt = DIMUNIT_METER then
		sillHeightForm = "%~0." + str(iWorkUnitSillHgtDecimal,1,0) + "m"		!m
	endif
	if iWorkUnitSillHgt = DIMUNIT_INCH 	then sillHeightForm = "%0.64fi"
endif


if iIDText <> IDVALUE_CUSTOMTEXT then
	dim _MasterID[]
	result = REQUEST("Full_ID_of_parent", "", _MasterID)
	strIDValue = ""
	if result then
		if iIDText = IDVALUE_IDNUMBER then
			strIDValue = _MasterID[vardim1(_MasterID)]
		else
			for i = 1 to vardim1 (_MasterID)
				strIDValue = strIDValue + _MasterID[i]
			next i
		endif
	endif
endif


if iFireText = VALUE_AUTOMATIC then
	fireRating = ""
	rrr = request ("ASSOCLP_PARVALUE", "gs_list_firerating",
			index_ww, type_ww, flags_ww, dim1_ww, dim2_ww, fRat)
	if rrr then fireRating = fRat

	strFireValue = fireRating
endif

if iAcousticText = VALUE_AUTOMATIC then
	acousticRating = ""
	rrr = request ("ASSOCLP_PARVALUE", "gs_list_acousticrating",
			index_ww, type_ww, flags_ww, dim1_ww, dim2_ww, aRat)
	if rrr then acousticRating = aRat

	strAcousticValue = acousticRating
endif

if iUValueText = VALUE_AUTOMATIC then
	UValue = ""
	rrr = request ("ASSOCLP_PARVALUE", "gs_list_heattransfer",
			index_ww, type_ww, flags_ww, dim1_ww, dim2_ww, uVal)
	if rrr then UValue = uVal

	strUValueValue = UValue
endif

if iHardwareText = VALUE_AUTOMATIC then
	hardwareSet = ""
	rrr = request ("ASSOCLP_PARVALUE", "gs_list_hwsetno",
			index_ww, type_ww, flags_ww, dim1_ww, dim2_ww, hwset)
	if rrr then hardwareSet = hwset

	strHardwareValue = hardwareSet
endif

! --- wallhole sizes ---
if iWHDimText = DIM_MEASURED then
	_bContentSillSizes = 0

	wallholeWidth = 0
	rrr = request ("ASSOCLP_PARVALUE", "ac_wallhole_width",
			index_ww, type_ww, flags_ww, dim1_ww, dim2_ww, width_wh)
	if rrr then wallholeWidth = width_wh

	wallholeHeight = 0
	rrr = request ("ASSOCLP_PARVALUE", "ac_wallhole_height",
			index_ww, type_ww, flags_ww, dim1_ww, dim2_ww, height_wh)
	if rrr then wallholeHeight = height_wh

	wallholeWidth_main = "" : wallholeWidth_frac = "" : wallholeHeight_main = "" : wallholeHeight_frac = ""

	lengthValue = wallholeHeight
	szFormat = widthHeightForm

	gosub "format_length_2_main_n_frac"

	wallholeHeight_main = main
	wallholeHeight_frac = frac

	lengthValue = wallholeWidth
	szFormat = widthHeightForm

	gosub "format_length_2_main_n_frac"

	wallholeWidth_main = main
	wallholeWidth_frac = frac

	strWHDimValue = wallholeWidth_main + wallholeWidth_frac + GS_Separator + wallholeHeight_main + wallholeHeight_frac
endif

! --- unit sizes ---
if iUnitDimText = DIM_MEASURED then
	_bContentSillSizes = 0

	unitWidth = 0
	rrr = request ("ASSOCLP_PARVALUE", "ac_unit_width",
			index_ww, type_ww, flags_ww, dim1_ww, dim2_ww, width_unit)
	if rrr then unitWidth = width_unit

	unitHeight = 0
	rrr = request ("ASSOCLP_PARVALUE", "ac_unit_height",
			index_ww, type_ww, flags_ww, dim1_ww, dim2_ww, height_unit)
	if rrr then unitHeight = height_unit

	unitWidth_main = "" : unitWidth_frac = "" : unitHeight_main = "" : unitHeight_frac = ""

	lengthValue = unitHeight
	szFormat = widthHeightForm

	gosub "format_length_2_main_n_frac"

	unitHeight_main = main
	unitHeight_frac = frac

	lengthValue = unitWidth
	szFormat = widthHeightForm

	gosub "format_length_2_main_n_frac"

	unitWidth_main = main
	unitWidth_frac = frac

	strUnitDimValue = unitWidth_main + unitWidth_frac + GS_Separator + unitHeight_main + unitHeight_frac
endif

! --- egress sizes ---
if iEgressDimText = DIM_MEASURED then
	_bContentSillSizes = 0

	egressWidth = 0
	rrr = request ("ASSOCLP_PARVALUE", "ac_egress_width",
			index_ww, type_ww, flags_ww, dim1_ww, dim2_ww, width_egress)
	if rrr then egressWidth = width_egress

	egressHeight = 0
	rrr = request ("ASSOCLP_PARVALUE", "ac_egress_height",
			index_ww, type_ww, flags_ww, dim1_ww, dim2_ww, height_egress)
	if rrr then egressHeight = height_egress

	egressWidth_main = "" : egressWidth_frac = "" : egressHeight_main = "" : egressHeight_frac = ""

	lengthValue = egressHeight
	szFormat = widthHeightForm

	gosub "format_length_2_main_n_frac"

	egressHeight_main = main
	egressHeight_frac = frac

	lengthValue = egressWidth
	szFormat = widthHeightForm

	gosub "format_length_2_main_n_frac"

	egressWidth_main = main
	egressWidth_frac = frac

	strEgressDimValue = egressWidth_main + egressWidth_frac + GS_Separator + egressHeight_main + egressHeight_frac
endif

! --- reveal sizes ---
if iRevealDimText = DIM_MEASURED then
	_bContentSillSizes = 0

	revealWidth = 0
	rrr = request ("ASSOCLP_PARVALUE", "ac_reveal_width",
			index_ww, type_ww, flags_ww, dim1_ww, dim2_ww, width_reveal)
	if rrr then revealWidth = width_reveal

	revealHeight = 0
	rrr = request ("ASSOCLP_PARVALUE", "ac_reveal_height",
			index_ww, type_ww, flags_ww, dim1_ww, dim2_ww, height_reveal)
	if rrr then revealHeight = height_reveal

	revealWidth_main = "" : revealWidth_frac = "" : revealHeight_main = "" : revealHeight_frac = ""

	lengthValue = revealHeight
	szFormat = widthHeightForm

	gosub "format_length_2_main_n_frac"

	revealHeight_main = main
	revealHeight_frac = frac

	lengthValue = revealWidth
	szFormat = widthHeightForm

	gosub "format_length_2_main_n_frac"

	revealWidth_main = main
	revealWidth_frac = frac

	strRevealDimValue = revealWidth_main + revealWidth_frac + GS_Separator + revealHeight_main + revealHeight_frac
endif

! --- threshold size ---
if iThresholdText =  DIM_MEASURED then
	_bContentSillSizes = 1

	_bThresholdOn = 0
	_bHasThresholdBool = request ("ASSOCLP_PARVALUE", "bThreshold",
			index_ww, type_ww, flags_ww, dim1_ww, dim2_ww, _bThresholdOn)

	thresholdHeight = 0
	thresholdH	= 0
	_bHas3DThresholdHeight = request ("ASSOCLP_PARVALUE", "thresholdHeight3D",
			index_ww, type_ww, flags_ww, dim1_ww, dim2_ww, thresholdH)

	if _bHasThresholdBool and _bThresholdOn then
		if _bHas3DThresholdHeight then
			! DACH
			thresholdHeight = thresholdH
		else
			doorTreshold = 0
			_bHasThresholdType = request ("ASSOCLP_PARVALUE", "iThresholdType",
				index_ww, type_ww, flags_ww, dim1_ww, dim2_ww, doorTreshold)

			if _bHasThresholdType then
				if doorTreshold > 0 then
					_bHasThresholdThk = request ("ASSOCLP_PARVALUE", "gs_treshold_thk",
						index_ww, type_ww, flags_ww, dim1_ww, dim2_ww, thresholdH)

					if _bHasThresholdThk then
						thresholdHeight = thresholdH
					endif
				endif
			endif
		endif
	endif

	thresholdHeight_main = "" : thresholdHeight_frac = ""

	lengthValue = thresholdHeight
	szFormat = sillHeightForm

	gosub "format_length_2_main_n_frac"

	thresholdHeight_main = main
	thresholdHeight_frac = frac

	strThresholdValue = thresholdHeight_main + thresholdHeight_frac
endif

! --- sill size ---
if iSillText = DIM_MEASURED then
	_bContentSillSizes = 1

	sillHeight_main = ""
	sillHeight_frac = ""

	if iShowSillTo = SILL_TO_CURRSTORY then
		sillHeight = AC_SILL_TO_CURR_STORY
	else
		if iShowSillTo = SILL_TO_WALLBASE then
			sillHeight = AC_GLOB_ELEVATION
		else	! anchor - default
			sillHeight = AC_SILL_TO_ANCHOR_LEVEL
		endif
	endif
	if not(bSillNominal) then
		sillHeight = sillHeight - AC_WIDO_OVERSIZE_B - AC_WIDO_SUBFL_THICKNESS
	endif

	lengthValue = sillHeight
	szFormat = sillHeightForm

	gosub "format_length_2_main_n_frac"

	sillHeight_main = main
	sillHeight_frac = frac

	strSillValue = sillHeight_main + sillHeight_frac
endif

! -------------------------------------------------------------------------------
! Define styles
! -------------------------------------------------------------------------------

if iBoxAlignment = BOXALIGN_LEFT then
	leftAlign	= 1
	rightAlign	= 1
else
	if iBoxAlignment = BOXALIGN_CENTER then
		leftAlign	= 3
		rightAlign	= 1
	else
		if iBoxAlignment = BOXALIGN_SIDE then
			leftAlign	= 1
			rightAlign	= 3
		else
			leftAlign	= 3
			rightAlign	= 3
		endif
	endif
endif

define style "headerStyle" AC_TextFont_1, AC_TextSize_1, 6 + iIDAlignment, AC_TextStyle_1
define style "boxStyleLeft" AC_TextFont_2, AC_TextSize_2, leftAlign, AC_TextStyle_2
define style "boxStyleRight" AC_TextFont_2, AC_TextSize_2, rightAlign, AC_TextStyle_2


! ======================================================================
! set dimensions
! ======================================================================


numLinesInBox	=  bShowWallholeDim + bShowUnitDim + bShowFire + bShowAcoustic + \
					bShowUValue + bShowMaterial + bShowHardware
if bWindow then
	numLinesInBox = numLinesInBox + bShowRevealDim + bShowSill + bShowCust1 + bShowCust2
else
	numLinesInBox = numLinesInBox + bShowEgressDim + bShowThreshold + bShowHandle + bShowCust
endif

if bShowAdditionalTags then
	numLinesInBox = numLinesInBox + _numTnCRow
endif

if numLinesInBox > 0 then
	strings2d[numLinesInBox][2] = ""
	lengthValues2d[numLinesInBox][2] = -9999
	dimensionType[numLinesInBox] = 0
endif

style "boxStyleLeft"

PAPER_TO_MODEL = GLOB_SCALE / 1000

boxSpaceWidth = stw(" ") * PAPER_TO_MODEL

actLine = 1
columnWidth_mm_1 = 0
columnWidth_mm_2 = 0
if bShowWallholeDim then
	if iWHDimText = DIM_MEASURED then
		strings2d[actLine][1] = strWHPrefix
		strings2d[actLine][2] = ""
		lengthValues2d[actLine][1] = wallholeWidth
		lengthValues2d[actLine][2] = wallholeHeight
		dimensionType[actLine] = UNITTYPE_WIDO_DIM
	else
		strings2d[actLine][1] = strWHPrefix
		strings2d[actLine][2] = strWHDimValue
		lengthValues2d[actLine][1] = 0
		lengthValues2d[actLine][2] = 0
		dimensionType[actLine] = 0
	endif

	columnWidth_mm_1 = max(columnWidth_mm_1, stw(" " + strWHPrefix + " "))
	columnWidth_mm_2 = max(columnWidth_mm_2, stw(" " + strWHDimValue + " "))
	actLine = actLine + 1
endif

if bShowUnitDim then
	if iUnitDimText = DIM_MEASURED then
		strings2d[actLine][1] = strUnitPrefix
		strings2d[actLine][2] = ""
		lengthValues2d[actLine][1] = unitWidth
		lengthValues2d[actLine][2] = unitHeight
		dimensionType[actLine] = UNITTYPE_WIDO_DIM
	else
		strings2d[actLine][1] = strUnitPrefix
		strings2d[actLine][2] = strUnitDimValue
		lengthValues2d[actLine][1] = 0
		lengthValues2d[actLine][2] = 0
		dimensionType[actLine] = 0
	endif

	columnWidth_mm_1 = max(columnWidth_mm_1, stw(" " + strUnitPrefix + " "))
	columnWidth_mm_2 = max(columnWidth_mm_2, stw(" " + strUnitDimValue + " "))
	actLine = actLine + 1
endif

if bWindow and bShowRevealDim then
	if iRevealDimText = DIM_MEASURED then
		strings2d[actLine][1] = strRevealPrefix
		strings2d[actLine][2] = ""
		lengthValues2d[actLine][1] = revealWidth
		lengthValues2d[actLine][2] = revealHeight
		dimensionType[actLine] = UNITTYPE_WIDO_DIM
	else
		strings2d[actLine][1] = strRevealPrefix
		strings2d[actLine][2] = strRevealDimValue
		lengthValues2d[actLine][1] = 0
		lengthValues2d[actLine][2] = 0
		dimensionType[actLine] = 0
	endif

	columnWidth_mm_1 = max(columnWidth_mm_1, stw(" " + strRevealPrefix + " "))
	columnWidth_mm_2 = max(columnWidth_mm_2, stw(" " + strRevealDimValue + " "))
	actLine = actLine + 1
endif

if not(bWindow) and bShowEgressDim then
	if iEgressDimText = DIM_MEASURED then
		strings2d[actLine][1] = strEgressPrefix
		strings2d[actLine][2] = ""
		lengthValues2d[actLine][1] = egressWidth
		lengthValues2d[actLine][2] = egressHeight
		dimensionType[actLine] = UNITTYPE_WIDO_DIM
	else
		strings2d[actLine][1] = strEgressPrefix
		strings2d[actLine][2] = strEgressDimValue
		lengthValues2d[actLine][1] = 0
		lengthValues2d[actLine][2] = 0
		dimensionType[actLine] = 0
	endif

	columnWidth_mm_1 = max(columnWidth_mm_1, stw(" " + strEgressPrefix + " "))
	columnWidth_mm_2 = max(columnWidth_mm_2, stw(" " + strEgressDimValue + " "))
	actLine = actLine + 1
endif

if bWindow and bShowSill then
	if iSillText = DIM_MEASURED then
		strings2d[actLine][1] = strSillPrefix
		strings2d[actLine][2] = ""
		lengthValues2d[actLine][1] = sillHeight
		lengthValues2d[actLine][2] = 0
		dimensionType[actLine] = UNITTYPE_SILL_DIM
	else
		strings2d[actLine][1] = strSillPrefix
		strings2d[actLine][2] = strSillValue
		lengthValues2d[actLine][1] = 0
		lengthValues2d[actLine][2] = 0
		dimensionType[actLine] = 0
	endif

	columnWidth_mm_1 = max(columnWidth_mm_1, stw(" " + strSillPrefix + " "))
	columnWidth_mm_2 = max(columnWidth_mm_2, stw(" " + strSillValue + " "))
	actLine = actLine + 1
endif

if not(bWindow) and bShowThreshold then
	if iThresholdText = DIM_MEASURED then
		strings2d[actLine][1] = strThresholdPrefix
		strings2d[actLine][2] = ""
		lengthValues2d[actLine][1] = thresholdHeight
		lengthValues2d[actLine][2] = 0
		dimensionType[actLine] = UNITTYPE_SILL_DIM
	else
		strings2d[actLine][1] = strThresholdPrefix
		strings2d[actLine][2] = strThresholdValue
		lengthValues2d[actLine][1] = 0
		lengthValues2d[actLine][2] = 0
		dimensionType[actLine] = 0
	endif

	columnWidth_mm_1 = max(columnWidth_mm_1, stw(" " + strThresholdPrefix + " "))
	columnWidth_mm_2 = max(columnWidth_mm_2, stw(" " + strThresholdValue + " "))
	actLine = actLine + 1
endif

if bShowFire then
	strings2d[actLine][1] = strFirePrefix
	strings2d[actLine][2] = strFireValue
	lengthValues2d[actLine][1] = 0
	lengthValues2d[actLine][2] = 0
	dimensionType[actLine] = 0

	columnWidth_mm_1 = max(columnWidth_mm_1, stw(" " + strFirePrefix + " "))
	columnWidth_mm_2 = max(columnWidth_mm_2, stw(" " + strFireValue + " "))
	actLine = actLine + 1
endif

if bShowAcoustic then
	strings2d[actLine][1] = strAcousticPrefix
	strings2d[actLine][2] = strAcousticValue
	lengthValues2d[actLine][1] = 0
	lengthValues2d[actLine][2] = 0
	dimensionType[actLine] = 0

	columnWidth_mm_1 = max(columnWidth_mm_1, stw(" " + strAcousticPrefix + " "))
	columnWidth_mm_2 = max(columnWidth_mm_2, stw(" " + strAcousticValue + " "))
	actLine = actLine + 1
endif

if bShowUValue then
	strings2d[actLine][1] = strUValuePrefix
	strings2d[actLine][2] = strUValueValue
	lengthValues2d[actLine][1] = 0
	lengthValues2d[actLine][2] = 0
	dimensionType[actLine] = 0

	columnWidth_mm_1 = max(columnWidth_mm_1, stw(" " + strUValuePrefix + " "))
	columnWidth_mm_2 = max(columnWidth_mm_2, stw(" " + strUValueValue + " "))
	actLine = actLine + 1
endif

if bShowMaterial then
	strings2d[actLine][1] = strMaterialPrefix
	strings2d[actLine][2] = strMaterialValue
	lengthValues2d[actLine][1] = 0
	lengthValues2d[actLine][2] = 0
	dimensionType[actLine] = 0

	columnWidth_mm_1 = max(columnWidth_mm_1, stw(" " + strMaterialPrefix + " "))
	columnWidth_mm_2 = max(columnWidth_mm_2, stw(" " + strMaterialValue + " "))
	actLine = actLine + 1
endif

if bShowHardware then
	strings2d[actLine][1] = strHardwarePrefix
	strings2d[actLine][2] = strHardwareValue
	lengthValues2d[actLine][1] = 0
	lengthValues2d[actLine][2] = 0
	dimensionType[actLine] = 0

	columnWidth_mm_1 = max(columnWidth_mm_1, stw(" " + strHardwarePrefix + " "))
	columnWidth_mm_2 = max(columnWidth_mm_2, stw(" " + strHardwareValue + " "))
	actLine = actLine + 1
endif

if bWindow and bShowCust1 then
	strings2d[actLine][1] = strCust1Prefix
	strings2d[actLine][2] = strCust1Value
	lengthValues2d[actLine][1] = 0
	lengthValues2d[actLine][2] = 0
	dimensionType[actLine] = 0

	columnWidth_mm_1 = max(columnWidth_mm_1, stw(" " + strCust1Prefix + " "))
	columnWidth_mm_2 = max(columnWidth_mm_2, stw(" " + strCust1Value + " "))
	actLine = actLine + 1
endif

if bWindow and bShowCust2 then
	strings2d[actLine][1] = strCust2Prefix
	strings2d[actLine][2] = strCust2Value
	lengthValues2d[actLine][1] = 0
	lengthValues2d[actLine][2] = 0
	dimensionType[actLine] = 0

	columnWidth_mm_1 = max(columnWidth_mm_1, stw(" " + strCust2Prefix + " "))
	columnWidth_mm_2 = max(columnWidth_mm_2, stw(" " + strCust2Value + " "))
	actLine = actLine + 1
endif

if not(bWindow) and bShowHandle then
	strings2d[actLine][1] = strHandlePrefix
	strings2d[actLine][2] = strHandleValue
	lengthValues2d[actLine][1] = 0
	lengthValues2d[actLine][2] = 0
	dimensionType[actLine] = 0

	columnWidth_mm_1 = max(columnWidth_mm_1, stw(" " + strHandlePrefix + " "))
	columnWidth_mm_2 = max(columnWidth_mm_2, stw(" " + strHandleValue + " "))
	actLine = actLine + 1
endif

if not(bWindow) and bShowCust then
	strings2d[actLine][1] = strCustPrefix
	strings2d[actLine][2] = strCustValue
	lengthValues2d[actLine][1] = 0
	lengthValues2d[actLine][2] = 0
	dimensionType[actLine] = 0

	columnWidth_mm_1 = max(columnWidth_mm_1, stw(" " + strCustPrefix + " "))		! mm, paper size
	columnWidth_mm_2 = max(columnWidth_mm_2, stw(" " + strCustValue + " "))
	actLine = actLine + 1
endif

if bShowAdditionalTags then
	for i = 1 to _numTnCRow
		strings2d[actLine][1]		= prefixTnC[i]
		strings2d[actLine][2]		= contentTnC[i]
		lengthValues2d[actLine][1]	= 0
		lengthValues2d[actLine][2]	= 0
		dimensionType[actLine]		= 0

		columnWidth_mm_1 = max(columnWidth_mm_1, stw(" " + prefixTnC[i] + " "))		! mm, paper size
		columnWidth_mm_2 = max(columnWidth_mm_2, stw(" " + contentTnC[i] + " "))
		actLine = actLine + 1
	next i	
endif

style "headerStyle"

IDWidth = stw(" " + strIDValue + " ")			! mm, paper size
IDSpaceWidth = stw(" ") * PAPER_TO_MODEL

minStampWidth = max(IDWidth, columnWidth_mm_1 + columnWidth_mm_2)			! mm, paper size

n = request("Height_of_style", "headerStyle", sh)
minIDLineSpacing = sh			! mm, paper size

n = request("Height_of_style", "boxStyleLeft", sh)
minDetailLineSpacing = sh			! mm, paper size


if iStampWidth = VALUE_AUTOMATIC then
	stampWidth = minStampWidth * PAPER_TO_MODEL

	if (columnWidth_mm_1 + columnWidth_mm_2 - IDWidth) > EPS then		! Minimal Stamp Width is the width of Columns
		columnWidth_1 = columnWidth_mm_1 * PAPER_TO_MODEL
		columnWidth_2 = columnWidth_mm_2 * PAPER_TO_MODEL
	else
		columnWidth_1 = (IDWidth + columnWidth_mm_1 - columnWidth_mm_2)/2 * PAPER_TO_MODEL
		columnWidth_2 = (IDWidth - columnWidth_mm_1 + columnWidth_mm_2)/2 * PAPER_TO_MODEL
	endif
else
	stampWidth = stampWidth_mm * PAPER_TO_MODEL

	columnWidth_1 = (stampWidth_mm + columnWidth_mm_1 - columnWidth_mm_2)/2 * PAPER_TO_MODEL
	columnWidth_2 = (stampWidth_mm - columnWidth_mm_1 + columnWidth_mm_2)/2 * PAPER_TO_MODEL
endif

if iIDLineSpacing = VALUE_AUTOMATIC then
	IDLineSpacing_mm = minIDLineSpacing
	IDLineSpacing_pt = IDLineSpacing_mm * DOT_IN_MM
	headerHeight = minIDLineSpacing * PAPER_TO_MODEL
else
	headerHeight = IDLineSpacing_mm * PAPER_TO_MODEL
endif

if iDetailLineSpacing = VALUE_AUTOMATIC then
	detailLineSpacing_mm = minDetailLineSpacing
	detailLineSpacing_pt = detailLineSpacing_mm * DOT_IN_MM
	lineHeight = minDetailLineSpacing * PAPER_TO_MODEL
else
	lineHeight = detailLineSpacing_mm * PAPER_TO_MODEL
endif

stampHeight = headerHeight + numLinesInBox * lineHeight

! ======================================================================
! set position variables
! ======================================================================

bFlip 			= 0
bMirrorX 		= 0
bMirrorY 		= 0
bReverse 		= 0
angleViewRot 	= 0
_bRotateForReadibility = 0
if AC_Readable then
	rrr = REQUEST ("View_Rotangle", "", angleViewRot)
endif

if AC_WIDO_REVEAL_SIDE_2 then bFlip = 1
if abs(AC_WIDO_MIRRORED - 1) < EPS then	bMirrorX = 1
if abs(AC_SYMB_ROTANGLE - 180) < EPS then bMirrorY = 1
if (not(AC_WIDO_REVEAL_SIDE_2) & abs(AC_SYMB_ROTANGLE-180) < EPS) | \
	(AC_WIDO_REVEAL_SIDE_2 & abs(AC_SYMB_ROTANGLE-180) > EPS) then
	bReverse = 1
endif
if bFlip then
	_heightFirstline = lineHeight
else
	_heightFirstline = headerHeight
endif

! for angle hotspot when mirrored
_markerAngle = markerAngle
if bMirrorX then _markerAngle = -markerAngle

totalRotate = (360 + (SYMB_ROTANGLE + angleViewRot + _markerAngle)) MOD 360
if (bMirrorY & (totalRotate < (gs_readable_angle + eps) | totalRotate > (gs_readable_angle + 180 + eps))) |\
	(not(bMirrorY) & (totalRotate > (gs_readable_angle + eps) & totalRotate < (gs_readable_angle + 180 + eps))) then
	_bRotateForReadibility = 1
endif


! ======================================================================
! Default position by Design and user request
! ======================================================================

if bMirrorX then
	mul2 -1, 1
	nTrans = nTrans + 1
endif
if bMirrorY then
	mul2 -1,-1
	add2 0,-_heightFirstline
	nTrans = nTrans + 2
else
	add2 0, - _heightFirstline - AC_WALL_THICKNESS
	nTrans = nTrans + 1
endif


! -------------------------------------------------------------------------------
! Hotspot editing
! -------------------------------------------------------------------------------

hotspot2  0,                 markerPositionVert, unID, markerPositionHor, 1+128 : unID = unID + 1
hotspot2  markerPositionHor, markerPositionVert, unID, markerPositionHor, 2     : unID = unID + 1
hotspot2 -1,                 markerPositionVert, unID, markerPositionHor, 3     : unID = unID + 1

hotspot2 markerPositionHor,  0,                  unID, markerPositionVert, 1+128 : unID = unID + 1
hotspot2 markerPositionHor,  markerPositionVert, unID, markerPositionVert, 2     : unID = unID + 1
hotspot2 markerPositionHor, -1,                  unID, markerPositionVert, 3     : unID = unID + 1

add2 markerPositionHor, markerPositionVert

hotspot2 0, 			0, unID, markerAngle, 6+512*bMirrorX : unID = unID + 1
hotspot2 stampWidth/2, 0, unID, markerAngle, 4+128 : unID = unID + 1
hotspot2 (stampWidth/2) * cos(markerAngle), (stampWidth/2) * sin(markerAngle), unID, markerAngle, 5 : unID = unID + 1

rot2 markerAngle


! -------------------------------------------------------------------------------
! Frame and fill
! -------------------------------------------------------------------------------

pen ac_textpen_1
fill AC_MarkerFill
line_type gs_line_type
pen SYMB_VIEW_PEN

bHeaderContour		= 0
bDetBoxContour		= 0
bHeaderSeparator	= 0
bLineSeparator		= 0
bColumnSeparator	= 0


if bMirrorX then
	mul2 -1,1
	nTrans = nTrans + 1
endif
if _bRotateForReadibility then
	mul2 -1,-1
	add2 0, stampHeight - (headerHeight + lineHeight)
	nTrans = nTrans + 2
endif


if iFrameStyle <> FRAME_NONE then
	bHeaderContour = 1

	if iFrameStyle <> FRAME_STYLE3 then bDetBoxContour = 1

	if iFrameStyle <> FRAME_STYLE1 then bHeaderSeparator = 1

	if iFrameStyle = FRAME_STYLE5 | iFrameStyle = FRAME_STYLE6 then bColumnSeparator = 1

	if iFrameStyle = FRAME_STYLE4 | iFrameStyle = FRAME_STYLE6 then bLineSeparator = 1
endif

poly2_b 6, 1+2+4, gs_fill_pen, gs_back_pen,
	-stampWidth/2, 0, bHeaderContour,
	-stampWidth/2, headerHeight, bHeaderContour,
	 stampWidth/2, headerHeight, bHeaderContour,
	 stampWidth/2, 0, bDetBoxContour,
	 stampWidth/2, headerHeight - stampHeight, bDetBoxContour,
	-stampWidth/2, headerHeight - stampHeight, bDetBoxContour

if bHeaderSeparator then line2 -stampWidth/2, 0, stampWidth/2, 0

if bColumnSeparator then line2 -stampWidth/2 + columnWidth_1, 0, stampWidth/2 - columnWidth_2, headerHeight - stampHeight

if bLineSeparator and numLinesInBox > 1 then
	for i = 1 to numLinesInBox - 1
		add2 0, -lineHeight
		line2 -stampWidth/2, 0, stampWidth/2, 0
	next i
	del numLinesInBox - 1
endif


! -------------------------------------------------------------------------------
! Header text
! -------------------------------------------------------------------------------

if bShowID then
	pen AC_TextPen_1
	style "headerStyle"

	if iIDAlignment = IDALIGN_LEFT then add2 -stampWidth/2 + IDSpaceWidth, 0
	if iIDAlignment = IDALIGN_RIGHT then add2 stampWidth/2 - IDSpaceWidth, 0

	text2 0, (IDLineSpacing_mm - minIDLineSpacing)/2 * PAPER_TO_MODEL, strIDValue

	if iIDAlignment = IDALIGN_LEFT then del 1
	if iIDAlignment = IDALIGN_RIGHT then del 1
endif

! -------------------------------------------------------------------------------
! Details
! -------------------------------------------------------------------------------

pen AC_TextPen_2
add2 0, -(detailLineSpacing_mm - minDetailLineSpacing)/2 * PAPER_TO_MODEL		! move to the center of line

for i = 1 to vardim1(strings2d)
	if dimensionType[i] < EPS then
		leftText = strings2d[i][1]
		rightText = strings2d[i][2]

		gosub "Line_text_left"

		gosub "Line_text_right"
	else
		leftText = strings2d[i][1]

		gosub "Line_text_left"

		if dimensionType[i] = UNITTYPE_SILL_DIM then
			_bContentSillSizes = 1
			szPrefix = ""
			actLengthValue = lengthValues2d[i][1]
			horizontalAlignment = rightAlign

			if rightAlign = 3 then
				add2 stampWidth/2 - boxSpaceWidth, 0
			else
				add2 stampWidth/2 - columnWidth_2 + boxSpaceWidth, 0
			endif

			gosub "Format_and_write"

			del 1
		else
			_bContentSillSizes = 0
			horizontalAlignment = rightAlign

			if rightAlign = 1 then		! left first
				add2 stampWidth/2 - columnWidth_2 + boxSpaceWidth, 0

				szPrefix = ""
				actLengthValue = lengthValues2d[i][1]

				gosub "Format_and_write"

				add2 totalLength * PAPER_TO_MODEL, 0

				szPrefix = GS_Separator
				actLengthValue = lengthValues2d[i][2]

				gosub "Format_and_write"

				del 2
			else
				add2 stampWidth/2 - boxSpaceWidth, 0

				szPrefix = GS_Separator
				actLengthValue = lengthValues2d[i][2]

				gosub "Format_and_write"

				add2 -totalLength * PAPER_TO_MODEL, 0

				szPrefix = ""
				actLengthValue = lengthValues2d[i][1]

				gosub "Format_and_write"

				del 2
			endif
		endif
	endif

	add2 0, -lineHeight
next i

del nTrans
end


! -------------------------------------------------------------------------------
! Get texts in line
! -------------------------------------------------------------------------------

"Format_and_write":

	_sContentForFormatter = actLengthValue
	_custom_form = ""
	_iUnitType = dimensionType[i]

	if _bContentSillSizes then
		_custom_form		= sillHeightForm
		_iWorkUnit			= iWorkUnitSillHgt
	else
		_custom_form		= widthHeightForm
		_iWorkUnit			= iWorkUnitLinear
	endif

	if _iWorkUnit <> DIMUNIT_PROJECT then
		_iUnitType = 0		! Custom

		if _iWorkUnit = DIMUNIT_DM then
			_sContentForFormatter = actLengthValue * 10
		endif
	endif

	call "quantity_text_writer" parameters 	lengthValue				= _sContentForFormatter,
											custom_form				= _custom_form,
											iUnitType				= _iUnitType,
											GS_iMarkerDir			= 1,
											horizontalAlignment		= horizontalAlignment,
											AC_TextFont				= AC_TextFont_2,
											AC_TextSize				= AC_TextSize_2,
											AC_TextStyle			= AC_TextStyle_2,
											szPrefix				= szPrefix,
											AC_Readable				= 0,
											gs_readable_angle		= 90,
											useLeadingAndDescent	= 1,
											bShowText				= 1,
											verticalAlignment		= 2,		! top
											bFeedbackMode			= 0,
					returned_parameters		totalLength,
											totalHeight,
											extraPrecision
return

"Line_text_left":
	style "boxStyleLeft"

	if leftAlign = 1 then
		add2 -stampWidth/2 + boxSpaceWidth, 0
	else
		add2 -stampWidth/2 + columnWidth_1 - boxSpaceWidth, 0
	endif

	text2 0, 0, leftText

	del 1
return

"Line_text_right":
	style "boxStyleRight"

	if rightAlign = 3 then
		add2 stampWidth/2 - boxSpaceWidth, 0
	else
		add2 stampWidth/2 - columnWidth_2 + boxSpaceWidth, 0
	endif

	text2 0, 0, rightText

	del 1
return


! ==============================================================================
! Format length value into main and frac strings
! Input:
!	szFormat:    formatted string
!	lengthValue: length value
! Output:
!	main: the main part of the length which should be written in normal type
!	frac: the fractal part which should be written smaller
! ==============================================================================

"format_length_2_main_n_frac":
	szFormattedLength = ""
	szExtraPrecision = ""

	if _bContentSillSizes then
		_iWorkUnit	= iWorkUnitSillHgt
	else
		_iWorkUnit	= iWorkUnitLinear
	endif

	if _iWorkUnit = DIMUNIT_DM then
		lengthValue = lengthValue * 10
	endif

	szFormattedLength = str{2}(szFormat, lengthValue, szExtraPrecision)

	if strstr(szFormat, "*10") <= 0 then
		main = szFormattedLength
		frac = szExtraPrecision
	else
		slash = strstr(szFormattedLength, "/")

		main = ""
		frac = ""

		if not(slash) then	! No Fractions
			main = szFormattedLength
		else				! Fractions
			if slash > 2 then
				slen  = strlen(szFormattedLength)
				main = strsub(szFormattedLength, 1, slash - 3)
				frac = strsub(szFormattedLength, slash - 2, slen)

				if strstr(frac," ") | strstr(frac,"-") then
					temp = frac
					frac = ""
					frac = strsub(temp, 2, strlen(temp))
				endif

				fine = strsub(main, strlen(main), strlen(main))

				if fine = " " | fine = "-" then
					temp = main
					main = ""
					main = strsub(temp, 1, strlen(temp) - 1)
				endif
			else
				frac = szFormattedLength
			endif
		endif
	endif

return








]]>
</Script_2D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_1D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
EPS = 0.0001

main = ""
frac = ""

DOT_IN_MM = 72 / 25.4

DETLEV_SCALESENS	= 1
DETLEV_DETAILED		= 2
DETLEV_SIMPLE		= 3

VALUE_AUTOMATIC		= 1
VALUE_CUSTOM		= 2

IDVALUE_IDNUMBER	= 1
IDVALUE_CUSTOMTEXT	= 2
IDVALUE_FULLIDNUM	= 3

DIM_MEASURED		= 1
DIM_CUSTOM			= 2

FRAME_NONE			= 0
FRAME_STYLE1		= 1
FRAME_STYLE2		= 2
FRAME_STYLE3		= 3
FRAME_STYLE4		= 4
FRAME_STYLE5		= 5
FRAME_STYLE6		= 6

DIMUNIT_MM		= 11  
DIMUNIT_CM		= 12
DIMUNIT_METER	= 13
DIMUNIT_INCH	= 14
DIMUNIT_DM		= 15
DIMUNIT_PROJECT	= 10

SILL_TO_ANCHOR		= 1
SILL_TO_WALLBASE	= 2
SILL_TO_CURRSTORY	= 3

IDALIGN_LEFT		= 1
IDALIGN_CENTER		= 2
IDALIGN_RIGHT		= 3

BOXALIGN_LEFT		= 1
BOXALIGN_CENTER		= 2
BOXALIGN_SIDE		= 3
BOXALIGN_RIGHT		= 4

UNITTYPE_WIDO_DIM	= 7
UNITTYPE_SILL_DIM	= 8


! -------------------------------------------------------------------------------
! String resources
! -------------------------------------------------------------------------------

if GLOB_SCRIPT_TYPE = 4 | \		! parameter script
	GLOB_SCRIPT_TYPE = 5 then	! interface script

	w_units_form = ""
	rrr = request("Working_length_unit", "", w_units_form)
	bMetricDimensionNeeded = strstr(w_units_form, "m")		! m, cm, mm

	dim stDetLevels[3]
	if bMetricDimensionNeeded then
		stDetLevels[1] = `Зависит от Масштаба`
		stDetLevels[2] = `До 1:50`
		stDetLevels[3] = `От 1:50`
	else
		stDetLevels[1] = `Зависит от Масштаба`
		stDetLevels[2] = `Детальный`
		stDetLevels[3] = `Средний и Простой`
	endif
endif

dim stAutoCustom[2]
	stAutoCustom[1] = `Автоматически`
	stAutoCustom[2] = `Специальный Текст`

dim sIDTextValues[3]
	sIDTextValues[1] = `Компактный ID Элемента`
	sIDTextValues[2] = `Специальный Текст`
	sIDTextValues[3] = `Полный ID Элемента`

dim stAutoFixed[2]
	stAutoFixed[1] = `Автоматически`
	stAutoFixed[2] = `Зафиксирован`

dim stMeasuredCustom[2]
	stMeasuredCustom[1] = `Измеряемое Значение`
	stMeasuredCustom[2] = `Специальный Текст`

dim stMaterials[4]
	stMaterials[1] = `Дерево`
	stMaterials[2] = `Алюминий`
	stMaterials[3] = `Пластик`
	stMaterials[4] = `Специальный`

dim stFrameStyles[7]
	stFrameStyles[1] = `Нет`
	stFrameStyles[2] = `Стиль 1`
	stFrameStyles[3] = `Стиль 2`
	stFrameStyles[4] = `Стиль 3`
	stFrameStyles[5] = `Стиль 4`
	stFrameStyles[6] = `Стиль 5`
	stFrameStyles[7] = `Стиль 6`

dim stUnitFormats[6]
	stUnitFormats[1] = `мм`
	stUnitFormats[2] = `см`
	stUnitFormats[3] = `дм`
	stUnitFormats[4] = `м`
	stUnitFormats[5] = `дюймы`
	stUnitFormats[6] = `по Параметрам Проекта`

dim stSillToOptions[3]
	stSillToOptions[1] = `Привязка`
	stSillToOptions[2] = `Основание Стены`
	stSillToOptions[3] = `Этаж Вставки`

dim stIDAligns[3]
	stIDAligns[1] = `По Левому Краю`
	stIDAligns[2] = `По Центру`
	stIDAligns[3] = `По Правому Краю`

dim stBoxAligns[4]
	stBoxAligns[1] = `По Левому Краю`
	stBoxAligns[2] = `По Центру`
	stBoxAligns[3] = `По Ширине`
	stBoxAligns[4] = `По Правому Краю`


_bLockLinearUnitDecimal		= (iWorkUnitLinear = DIMUNIT_INCH	| iWorkUnitLinear = DIMUNIT_PROJECT)
_bLockSillHgtUnitDecimal	= (iWorkUnitSillHgt = DIMUNIT_INCH	| iWorkUnitSillHgt = DIMUNIT_PROJECT)


! -------------------------------------------------------------------------------
! Fill box array, get stamp width
! -------------------------------------------------------------------------------

dim strings2d[][2]
dim lengthValues2d[][2]
dim dimensionType[]

dim prefixTnC[]
	prefixTnC[1] = ""
dim contentTnC[]
	contentTnC[1] = ""
gosub "analyze_TnC_params"	! output >> _numTnCRow


! -------------------------------------------------------------------------------
goto "MasterEnd"
! -------------------------------------------------------------------------------


! ==============================================================================
"analyze_TnC_params" :
! Additional Tags`re sorted from the Tags and Categories
! - subroutine function: setting number of Additional Tags rows and content
! "None" displaying is by design:
! if a user sets the create sortings row type to none, then empty rows 
! (epmty instead "none") would be displayed only between two non-empty rows,
! At the begin and at the end the empty rows are not displyed. 
! For analyzing use TnCParamRequest macro with _sContentTnC array as returned variable
! for help:
! 	call "TnCParamRequest" parameters all bDebug = 1
! ==============================================================================

! Initialization for returned parameters
nRowProperty = 0
nColuProperty = 0
dim listProperty[]
	listProperty[1] = ""

! Request results in multiple rows: 
!  group = 2; name = 3; value = 5
DIM _columns[5]	! [iTncDisplayData]
	_columns[1] =     3 * 5	! DISPLAYDATABY_NAMEVALUE
	_columns[2] =     3   	! DISPLAYDATABY_NAME
	_columns[3] =         5	! DISPLAYDATABY_VALUE
	_columns[4] = 2 * 3    	! DISPLAYDATABY_GROUPNAME
	_columns[5] = 2 * 3 * 5	! DISPLAYDATABY_GROUPNAMEVALUE

call "TnCParamRequest" parameters all 	bShowAdditionalTags	= (bShowAdditionalTags_detailed | bShowAdditionalTags_simple),

										! settings for parameter script
										bEnableHideTnCParameters 	= 1,

										! displayed datas of properties
										bUsePropertyFolder			= not(_columns[iTncDisplayData] mod 2),
										bUsePropertyID				= 0,
										bUsePropertyName			= not(_columns[iTncDisplayData] mod 3),
										bUsePropertyValue 			= not(_columns[iTncDisplayData] mod 5),
										bUsePropertyType			= 0,

					returned_parameters nRowProperty, nColuProperty, listProperty
					! listProperty is became to a single dimension array (a type of linear array)
					! it has to be sepparated by each columns
	

! Converting rows of the result
for i = 1 to nRowProperty
	! initializaton
	prefixTnC[i] = ""
	contentTnC[i] = ""

	! Set first column
	contentTnC[i] = listProperty[nColuProperty * i]

	! Set second column 
	if nColuProperty > 1 then
		prefixTnC[i] = listProperty[nColuProperty * (i-1) + 1]

		if nColuProperty > 2 then
			! Hack: if more columns, concatenate to the first column
			for j = 2 to nColuProperty - 1
				cellValue = listProperty[nColuProperty * (i-1) + j]
				_separator1 = ""
				_separator2 = ""
				if prefixTnC[i] # "" and cellValue # "" then
					_separator1 = " ("
					_separator2 = ")"
				endif
				prefixTnC[i] = cellValue + _separator1 + prefixTnC[i] + _separator2
			next j
		endif
	else
		if (_columns[iTncDisplayData] mod 5) > 0 then	! Property Value not displayed
			prefixTnC[i] = contentTnC[i]
			contentTnC[i] = ""
		endif
	endif
next i

_numTnCRow = nRowProperty

return


! -------------------------------------------------------------------------------
"MasterEnd":
! -------------------------------------------------------------------------------

]]>
</Script_1D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_PR SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_PR>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_UI SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
if bWindow then
	ui_dialog `Параметры Паспорта Окна`
else
	ui_dialog `Параметры Паспорта Двери`
endif


! ==============================================================================
! Tabpage IDs, Titles and Icons
! ==============================================================================

PAGE_ID_CONTENT_SC		= 1
PAGE_ID_CONTENT_1		= 2
PAGE_ID_CONTENT_2		= 3
PAGE_ID_CONTENT_3		= 4
PAGE_ID_ADD_TAGS		= 5
PAGE_ID_TEXT_SETT		= 6
PAGE_ID_FRAME_DIM		= 7
PAGE_ID_SIZE_POS		= 8

dim tabTitles[8]
	tabTitles[1] = `Данные согласно Масштабу`
	tabTitles[2] = `Раздел Данных 1`
	tabTitles[3] = `Раздел Данных 2`
	tabTitles[4] = `Раздел Данных 3`
	tabTitles[5] = `Дополнительные Метки`
	tabTitles[6] = `Текст`
	tabTitles[7] = `Рамка и Единицы Измерения`
	tabTitles[8] = `Размеры и Расположение Паспорта`

dim tabIcons[8]
	tabIcons[1] = "uiTab_MarkerLabelContent_flat(1)"
	tabIcons[2] = "uiTab_MarkerLabelContent_flat(1)"
	tabIcons[3] = "uiTab_MarkerLabelContent_flat(1)"
	tabIcons[4] = "uiTab_MarkerLabelContent_flat(1)"
	tabIcons[5] = "uiTab_additionalTags_flat(1)"
	tabIcons[6] = "uiTab_TextMarkerLabelZone_flat(1)"
	tabIcons[7] = "uiTab_Attributes_flat(1)"
	tabIcons[8] = "uiTab_MarkerGeom_flat(1)"

file_dependence "uiTab_MarkerLabelContent_flat(1)"
file_dependence "uiTab_additionalTags_flat(1)"
file_dependence "uiTab_TextMarkerLabelZone_flat(1)"
file_dependence "uiTab_Attributes_flat(1)"
file_dependence "uiTab_MarkerGeom_flat(1)"

ui_current_page gs_ui_current_page
ui_page gs_ui_current_page

! ==============================================================================
! Call tabpage selector
! ==============================================================================
call "ui_tab_popup" parameters 	nTabs 				= vardim1(tabTitles),
								gs_ui_current_page 	= gs_ui_current_page,
								tabTitles			= tabTitles,
								tabIcons			= tabIcons


! ==============================================================================
! Tabpages
! ==============================================================================

px		= 30
py		= 20
cx		= px
cy		= py
itemID	= 1
UIGroup	= 1

y0 = 35


ui_page PAGE_ID_CONTENT_SC
	gosub "ContentByScalePage"

ui_page PAGE_ID_CONTENT_1
	gosub "Content1Page"

ui_page PAGE_ID_CONTENT_2
	gosub "Content2Page"

ui_page PAGE_ID_CONTENT_3
	gosub "Content3Page"

ui_page PAGE_ID_ADD_TAGS
	gosub "AdditionalTagsPage"

ui_page PAGE_ID_TEXT_SETT
	gosub "TextSettingsPage"

ui_page PAGE_ID_FRAME_DIM
	gosub "FrameAndDimensionsPage"

ui_page PAGE_ID_SIZE_POS
	gosub "SizeAndPositionPage"


! ==============================================================================
end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! end ! en
! ==============================================================================


! ==============================================================================
"ContentByScalePage":
! ------------------------------------------------------------------------------

	y = y0
	y2 = y0 + 130
	dy = 20
	x0 = 1
	x1 = 215
	xsep = 222
	x2 = 230
	x3 = 443
	xwidth = 136

	ui_style 0, 1
	ui_outfield `Детализация`, x0, y, 168, 16
	ui_infield{3}  "iDetLevel", x0+169, y, 150, 16,
		8, "",
		0, 0,
		0, 0, 0, 0,
		"",	stDetLevels[1],	DETLEV_SCALESENS,
		"",	stDetLevels[2],	DETLEV_DETAILED,
		"",	stDetLevels[3],	DETLEV_SIMPLE

	y = y + dy + 1

	ui_separator 0, y, 444, y
	ui_separator 0, y2 - 4, 444, y2 - 4

	y = y + 4

	if bMetricDimensionNeeded then
		ui_outfield `Показ до 1:50`, x0, y, x1-x0-1, 16
		ui_outfield `Показ от 1:50`, x0, y2, x3-x2-1, 16
	else
		ui_outfield `Показ в Детализированном`, x0, y, x1-x0-1, 16
		ui_outfield `Показ в Среднем и Простом`, x0, y2, x3-x2-1, 16
	endif

	ui_style 1, 0

	dim paramNames[13]
		paramNames[1] = "bShowID"				! "bShowID_detailed" "bShowID_simple"
		paramNames[2] = "bShowWallholeDim"		! "bShowWallholeDim_detailed" "bShowWallholeDim_simple"
		paramNames[3] = "bShowUnitDim"			! "bShowUnitDim_detailed" "bShowUnitDim_simple"
		if bWindow then
			paramNames[4] = "bShowRevealDim"	! "bShowRevealDim_detailed" "bShowRevealDim_simple"
			paramNames[5] = "bShowSill"			! "bShowSill_detailed" "bShowSill_simple"
		else
			paramNames[4] = "bShowEgressDim"	! "bShowEgressDim_detailed" "bShowEgressDim_simple"
			paramNames[5] = "bShowThreshold"	! "bShowThreshold_detailed" "bShowThreshold_simple"
		endif

		paramNames[6] = "bShowFire"				! "bShowFire_detailed" "bShowFire_simple"
		paramNames[7] = "bShowAcoustic"			! "bShowAcoustic_detailed" "bShowAcoustic_simple"
		paramNames[8] = "bShowUValue"			! "bShowUValue_detailed" "bShowUValue_simple"

		paramNames[9] = "bShowMaterial"			! "bShowMaterial_detailed" "bShowMaterial_simple"
		paramNames[10] = "bShowHardware"		! "bShowHardware_detailed" "bShowHardware_simple"
		if bWindow then
			paramNames[11] = "bShowCust1"		! "bShowCust1_detailed" "bShowCust1_simple"
			paramNames[12] = "bShowCust2"		! "bShowCust2_detailed" "bShowCust2_simple"
		else
			paramNames[11] = "bShowHandle"		! "bShowHandle_detailed" "bShowHandle_simple"
			paramNames[12] = "bShowCust"		! "bShowCust_detailed" "bShowCust_simple"
		endif
		paramNames[13] = "bShowAdditionalTags"		! "bShowAdditionalTags_detailed" "bShowAdditionalTags_simple"

	dim paramDesc[13]
		paramDesc[1] = `ID`
		paramDesc[2] = `Размеры Проема`
		paramDesc[3] = `Размеры Блока`
		if bWindow then
			paramDesc[4] = `Размеры Четверти`
			paramDesc[5] = `Высота Отлива`
		else
			paramDesc[4] = `Размеры Прохода`
			paramDesc[5] = `Высота Порога`
		endif

		paramDesc[6] = `Огнестойкость`
		paramDesc[7] = `Шумозащита`
		paramDesc[8] = `U-значение`

		paramDesc[9] = `Материал`
		paramDesc[10] = `Фурнитура`
		if bWindow then
			paramDesc[11] = `Специальный Текст 1`
			paramDesc[12] = `Специальный Текст 2`
		else
			paramDesc[11] = `Ручка`
			paramDesc[12] = `Специальный Текст`
		endif
		paramDesc[13] = `Дополнительные Метки`

	y = y + dy - 1
	y2 = y2 + dy - 1

	ui_listfield UIGroup, 0, y, 444, 84, 0 : UIGroup = UIGroup + 1
	ui_listfield UIGroup, 0, y2, 444, 84, 0 : UIGroup = UIGroup + 1

	for i = 1 to 13
		NameSuffix	= "_detailed"
		UIGroup		= 1
		for k =1 to 2
			ui_listitem itemID, UIGroup, paramNames[i]+NameSuffix, 0, "", paramDesc[i]
			itemID		= itemID + 1
			UIGroup		= 2
			NameSuffix	= "_simple"
		next k
	next i

return


! =============================================================================
"Content1Page":
! ------------------------------------------------------------------------------

	y = 40
	dy = 27

	x1 = 1
	x2 = 15
	x3 = 180
	x4 = 310
	x5 = 325
	x6 = 440

	ui_style 0, 1
	ui_outfield `ID`, x1, y, x3-x1-1, 18
	ui_style 0, 0

	ui_infield{3} "iIDText", x3, y-3, x4-x3, 20,
		8, "",
		0, 0,
		0, 0, 0, 0,
		"",	sIDTextValues[1], IDVALUE_IDNUMBER,
		"",	sIDTextValues[3], IDVALUE_FULLIDNUM,
		"",	sIDTextValues[2], IDVALUE_CUSTOMTEXT

	if iIDText = IDVALUE_CUSTOMTEXT then
		ui_infield "strIDValue", x5, y-3, x6-x5, 20
	endif

	y = y + dy
	ui_separator 0, y, 444, y
	y = y + dy/2

	ui_style 0, 1
	ui_outfield `Размеры Проема`, x1, y, x3-x1-1, 18
	ui_style 0, 0

	ui_infield{3} "iWHDimText", x3, y-3, x4-x3, 20,
		8, "",
		0, 0,
		0, 0, 0, 0,
		"",	stMeasuredCustom[1], DIM_MEASURED,
		"",	stMeasuredCustom[2], DIM_CUSTOM

	if iWHDimText = DIM_CUSTOM then
		ui_infield "strWHDimValue", x5, y-3, x6-x5, 20
	endif

	y = y + dy

	ui_outfield `Отображаемое Имя`, x2, y, x3-x2-1, 18
	ui_infield "strWHPrefix", x3, y-3, x4-x3, 18
	y = y + dy

	ui_style 0, 1
	ui_outfield `Размеры Блока`, x1, y, x3-x1-1, 18
	ui_style 0, 0

	ui_infield{3} "iUnitDimText", x3, y-3, x4-x3, 20,
		8, "",
		0, 0,
		0, 0, 0, 0,
		"",	stMeasuredCustom[1], DIM_MEASURED,
		"",	stMeasuredCustom[2], DIM_CUSTOM

	if iUnitDimText = DIM_CUSTOM then
		ui_infield "strUnitDimValue", x5, y-3, x6-x5, 20
	endif

	y = y + dy

	ui_outfield `Отображаемое Имя`, x2, y, x3-x2-1, 18
	ui_infield "strUnitPrefix", x3, y-3, x4-x3, 18
	y = y + dy

	if bWindow then
		ui_style 0, 1
		ui_outfield `Размеры Четверти`, x1, y, x3-x1-1, 18
		ui_style 0, 0

		ui_infield{3} "iRevealDimText", x3, y-3, x4-x3, 20,
			8, "",
			0, 0,
			0, 0, 0, 0,
			"",	stMeasuredCustom[1], DIM_MEASURED,
			"",	stMeasuredCustom[2], DIM_CUSTOM

		if iRevealDimText = DIM_CUSTOM then
			ui_infield "strRevealDimValue", x5, y-3, x6-x5, 20
		endif
		y = y + dy

		ui_outfield `Отображаемое Имя`, x2, y, x3-x2-1, 18
		ui_infield "strRevealPrefix", x3, y-3, x4-x3, 18
		y = y + dy
	else
		ui_style 0, 1
		ui_outfield `Размеры Прохода`, x1, y, x3-x1-1, 18
		ui_style 0, 0

		ui_infield{3} "iEgressDimText", x3, y-3, x4-x3, 20,
			8, "",
			0, 0,
			0, 0, 0, 0,
			"",	stMeasuredCustom[1], DIM_MEASURED,
			"",	stMeasuredCustom[2], DIM_CUSTOM

		if iEgressDimText = DIM_CUSTOM then
			ui_infield "strEgressDimValue", x5, y-3, x6-x5, 20
		endif
		y = y + dy

		ui_outfield `Отображаемое Имя`, x2, y, x3-x2-1, 18
		ui_infield "strEgressPrefix", x3, y-3, x4-x3, 18
		y = y + dy
	endif


	ui_style 0, 1
	ui_outfield `Разделитель Значений`, x1, y, x3-x1-1, 18
	ui_style 0, 0

	ui_infield "GS_Separator", x3, y-3, x4-x3, 18

return


! =============================================================================
"Content2Page":
! ------------------------------------------------------------------------------

	y = 40
	dy = 22

	x1 = 1
	x2 = 15
	x3 = 180
	x4 = 310
	x5 = 325
	x6 = 440

	if bWindow then
		ui_style 0, 1
		ui_outfield `Высота Отлива`, x1, y, x3-x1-1, 18
		ui_style 0, 0

		ui_infield{3} "iSillText", x3, y-3, x4-x3, 20,
			8, "",
			0, 0,
			0, 0, 0, 0,
			"",	stMeasuredCustom[1], DIM_MEASURED,
			"",	stMeasuredCustom[2], DIM_CUSTOM

		if iSillText = DIM_CUSTOM then
			ui_infield "strSillValue", x5, y-3, x6-x5, 20
		endif
		y = y + dy

		ui_outfield `Высота Измеряется от`, x2, y, x3-x2-1, 18
		ui_infield{3} "iShowSillTo", x3, y-3, x4-x3, 20,
			8, "",
			0, 0,
			0, 0, 0, 0,
			"",	stSillToOptions[1], SILL_TO_ANCHOR,
			"",	stSillToOptions[2], SILL_TO_WALLBASE,
			"",	stSillToOptions[3], SILL_TO_CURRSTORY

		y = y + dy

		ui_outfield `Отображаемое Имя`, x2, y, x3-x2-1, 18
		ui_infield "strSillPrefix", x3, y-3, x4-x3, 20

		y = y + dy

		ui_infield{3} "bSillNominal", x2, y, x4-x2, 18,
			7, "",
			0, 0,
			0, 0, 0, 0,
			"",	`Номинальная Высота Отлива`, 0,
			"",	`Номинальная Высота Отлива`, 1

		y = y + dy
	else
		ui_style 0, 1
		ui_outfield `Высота Порога`, x1, y, x3-x1-1, 18
		ui_style 0, 0

		ui_infield{3} "iThresholdText", x3, y-3, x4-x3, 20,
			8, "",
			0, 0,
			0, 0, 0, 0,
			"",	stMeasuredCustom[1], DIM_MEASURED,
			"",	stMeasuredCustom[2], DIM_CUSTOM

		if iThresholdText = DIM_CUSTOM then
			ui_infield "strThresholdValue", x5, y-3, x6-x5, 20
		endif
		y = y + dy

		ui_outfield `Отображаемое Имя`, x2, y, x3-x2-1, 18
		ui_infield "strThresholdPrefix", x3, y-3, x4-x3, 20

		y = y + dy
		y = y + dy
		y = y + dy
	endif

	ui_separator 0, y, 444, y

	y = y + 9
	ui_style 0, 1
	ui_outfield `Огнестойкость`, x1, y, x3-x1-1, 18
	ui_style 0, 0

	ui_infield{3} "iFireText", x3, y-3, x4-x3, 20,
		8, "",
		0, 0,
		0, 0, 0, 0,
		"",	stAutoCustom[1], VALUE_AUTOMATIC,
		"",	stAutoCustom[2], VALUE_CUSTOM

	if iFireText = VALUE_CUSTOM then
		ui_infield "strFireValue", x5, y-3, x6-x5, 20
	endif
	y = y + dy

	ui_outfield `Отображаемое Имя`, x2, y, x3-x2-1, 18
	ui_infield "strFirePrefix", x3, y-3, x4-x3, 20

	y = y + dy
	ui_style 0, 1
	ui_outfield `Шумозащита`, x1, y, x3-x1-1, 18
	ui_style 0, 0

	ui_infield{3} "iAcousticText", x3, y-3, x4-x3, 20,
		8, "",
		0, 0,
		0, 0, 0, 0,
		"",	stAutoCustom[1], VALUE_AUTOMATIC,
		"",	stAutoCustom[2], VALUE_CUSTOM

	if iAcousticText = VALUE_CUSTOM then
		ui_infield "strAcousticValue", x5, y-3, x6-x5, 20
	endif
	y = y + dy

	ui_outfield `Отображаемое Имя`, x2, y, x3-x2-1, 18
	ui_infield "strAcousticPrefix", x3, y-3, x4-x3, 20

	y = y + dy
	ui_style 0, 1
	ui_outfield `U-значение`, x1, y, x3-x1-1, 18
	ui_style 0, 0

	ui_infield{3} "iUValueText", x3, y-3, x4-x3, 20,
		8, "",
		0, 0,
		0, 0, 0, 0,
		"",	stAutoCustom[1], VALUE_AUTOMATIC,
		"",	stAutoCustom[2], VALUE_CUSTOM

	if iUValueText = VALUE_CUSTOM then
		ui_infield "strUValueValue", x5, y-3, x6-x5, 20
	endif
	y = y + dy

	ui_outfield `Отображаемое Имя`, x2, y, x3-x2-1, 18
	ui_infield "strUValuePrefix", x3, y-3, x4-x3, 20

return


! =============================================================================
"Content3Page":
! ------------------------------------------------------------------------------

	y = 40
	dy = 27

	x1 = 1
	x2 = 15
	x3 = 180
	x4 = 310
	x5 = 325
	x6 = 440

	ui_style 0, 1
	ui_outfield `Материал`, x1, y, x3-x1-1, 18
	ui_style 0, 0

	ui_infield{3} "iMaterialText", x3, y-3, x4-x3, 20,
		8, "",
		0, 0,
		0, 0, 0, 0,
		"",	stMaterials[1], 1,
		"",	stMaterials[2], 2,
		"",	stMaterials[3], 3,
		"",	stMaterials[4], 4

	if iMaterialText = 4 then
		ui_infield "strMaterialValue", x5, y-3, x6-x5, 20
	endif
	y = y + dy

	ui_outfield `Отображаемое Имя`, x2, y, x3-x2-1, 18
	ui_infield "strMaterialPrefix", x3, y-3, x4-x3, 20

	y = y + dy
	ui_style 0, 1
	ui_outfield `Фурнитура`, x1, y, x3-x1-1, 18
	ui_style 0, 0

	ui_infield{3} "iHardwareText", x3, y-3, x4-x3, 20,
		8, "",
		0, 0,
		0, 0, 0, 0,
		"",	stAutoCustom[1], VALUE_AUTOMATIC,
		"",	stAutoCustom[2], VALUE_CUSTOM

	if iHardwareText = VALUE_CUSTOM then
		ui_infield "strHardwareValue", x5, y-3, x6-x5, 20
	endif
	y = y + dy

	ui_outfield `Отображаемое Имя`, x2, y, x3-x2-1, 18
	ui_infield "strHardwarePrefix", x3, y-3, x4-x3, 20

	y = y + dy

	if bWindow then
		ui_style 0, 1
		ui_outfield `Специальный Текст 1`, x1, y, x3-x1-1, 18
		ui_style 0, 0

		ui_outfield `Отображаемое Имя 1`, x3, y, x4-x3, 20
		ui_infield "strCust1Prefix", x5, y-3, x6-x5, 20
		y = y + dy

		ui_outfield `Текст 1`, x3, y, x4-x3, 20
		ui_infield "strCust1Value", x5, y-3, x6-x5, 20
		y = y + dy

		ui_style 0, 1
		ui_outfield `Специальный Текст 2`, x1, y, x3-x1-1, 18
		ui_style 0, 0

		ui_outfield `Отображаемое Имя 2`, x3, y, x4-x3, 20
		ui_infield "strCust2Prefix", x5, y-3, x6-x5, 20
		y = y + dy

		ui_outfield `Текст 2`, x3, y, x4-x3, 20
		ui_infield "strCust2Value", x5, y-3, x6-x5, 20
		y = y + dy
	else
		ui_style 0, 1
		ui_outfield `Ручка`, x1, y, x3-x1-1, 18
		ui_style 0, 0

		ui_outfield `Отображаемое Имя`, x3, y, x4-x3, 20
		ui_infield "strHandlePrefix", x5, y-3, x6-x5, 20
		y = y + dy

		ui_outfield `Текст`, x3, y, x4-x3, 20
		ui_infield "strHandleValue", x5, y-3, x6-x5, 20
		y = y + dy

		ui_style 0, 1
		ui_outfield `Специальный Текст`, x1, y, x3-x1-1, 18
		ui_style 0, 0

		ui_outfield `Отображаемое Имя`, x3, y, x4-x3, 20
		ui_infield "strCustPrefix", x5, y-3, x6-x5, 20
		y = y + dy

		ui_outfield `Текст`, x3, y, x4-x3, 20
		ui_infield "strCustValue", x5, y-3, x6-x5, 20
		y = y + dy
	endif

return


! =============================================================================
"AdditionalTagsPage":
! ------------------------------------------------------------------------------
	call "TnCParamRequest" parameters all	bShowAdditionalTags	= 1,
											bDrawUiPage			= 1,
											UISubPageTop		= 42,
											UISubPageBot		= 266,
											UIGroup				= 3,
											iUIElemType			= 3 + bWindow,	! 3: Door, 4: Window
											itemID				= itemID

return


! =============================================================================
"TextSettingsPage":
! ------------------------------------------------------------------------------

	y = 40
	dy = 28

	ui_style 0, 1
	ui_infield{3} "GS_UniTextFormat", 5, y, 250, 18,
		7, "",
		0, 0,
		0, 0, 0, 0,
		"",	`Единые Параметры Текста`, 0,
		"",	`Единые Параметры Текста`, 1
	ui_style 0, 0

	y = y + dy

	ui_separator 0, y, 444, y

	y = y + dy /2 - 2


	if GS_UniTextFormat then

		ui_outfield `Тексты`, 5, y, 250, 18

		y = y + dy

		ui_infield{3} "iAlignment", 64, y, 74, 52,
			2, 1,		! ui_IDAlign
			3, 1,
			59, 38, 59, 38,
			1, stIDAligns[1], IDALIGN_LEFT,
			2, stIDAligns[2], IDALIGN_CENTER,
			3, stIDAligns[3], IDALIGN_RIGHT

		x1 = 205
		x2 = 320

		x3 = 340
		x4 = 380
		x5 = 420

		ui_infield "fontType2", x1, y, x2-x1-1, 18

		ui_pict "ui_pen_flat(1)", x4+8, y, 13, 19, 1
		ui_infield "TextPen_U", x5+24-35, y, 35, 22

		y = y + 52-24

		ui_pict "ui_FontSize_flat(1)", x1, y+3, 27, 14, 1
		if bMetricDimensionNeeded then
			ui_infield "AC_TextSize_1", x1+30, y+4, x2-x1-31, 18
		else
			ui_infield "TextSize_U_pt", x1+30, y+4, x2-x1-31, 18
		endif

		ui_infield{3} "bBoldText", x3, y, 24, 24,
			6, "",
			2,
			1, 16, 16, 16, 16,
			"ui_bold_flat(1)", "", 0,
			"ui_bold_flat(1)", "", 1\
			ui_tooltip `Жирный`

		ui_infield{3} "bItalicText", x4, y, 24, 24,
			6, "",
			2,
			1, 16, 16, 16, 16,
			"ui_italic_flat(1)", "", 0,
			"ui_italic_flat(1)", "", 1\
			ui_tooltip `Курсив`

		ui_infield{3} "bUnderText", x5, y, 24, 24,
			6, "",
			2,
			1, 16, 16, 16, 16,
			"ui_underline_flat(1)", "", 0,
			"ui_underline_flat(1)", "", 1\
			ui_tooltip `Подчеркнутый`

	else

		ui_outfield `Текст ID`, 5, y, 250, 18

		y = y + dy

		ui_infield{3} "iIDAlignment", 64, y, 74, 52,
			2, 1,		! ui_IDAlign
			3, 1,
			59, 38, 59, 38,
			1, stIDAligns[1], IDALIGN_LEFT,
			2, stIDAligns[2], IDALIGN_CENTER,
			3, stIDAligns[3], IDALIGN_RIGHT

		x1 = 205
		x2 = 320

		x3 = 340
		x4 = 380
		x5 = 420

		ui_infield "AC_TextFont_1", x1, y, x2-x1-1, 18

		ui_pict "ui_pen_flat(1)", x4+8, y, 13, 19, 1
		ui_infield "AC_TextPen_1", x5+24-35, y, 35, 22

		y = y + 52-24

		ui_pict "ui_FontSize_flat(1)", x1, y+3, 27, 14, 1
		if bMetricDimensionNeeded then
			ui_infield "AC_TextSize_1", x1+30, y+4, x2-x1-31, 18
		else
			ui_infield "TextSize_1_pt", x1+30, y+4, x2-x1-31, 18
		endif

		ui_infield{3} "bBoldIDText", x3, y, 24, 24,
			6, "",
			2,
			1, 16, 16, 16, 16,
			"ui_bold_flat(1)", "", 0,
			"ui_bold_flat(1)", "", 1\
			ui_tooltip `Жирный`

		ui_infield{3} "bItalicIDText", x4, y, 24, 24,
			6, "",
			2,
			1, 16, 16, 16, 16,
			"ui_italic_flat(1)", "", 0,
			"ui_italic_flat(1)", "", 1\
			ui_tooltip `Курсив`

		ui_infield{3} "bUnderIDText", x5, y, 24, 24,
			6, "",
			2,
			1, 16, 16, 16, 16,
			"ui_underline_flat(1)", "", 0,
			"ui_underline_flat(1)", "", 1\
			ui_tooltip `Подчеркнутый`

		y = y + 35

		!ui_separator 0, y, 444, y

		y = y + dy /2 - 2

		ui_outfield `Формат Текста Данных`, 5, y, 250, 18, 4-4*not(GS_UniTextFormat)

		y = y + dy

		ui_infield{3} "iBoxAlignment", 64, y, 74, 52,
			2, 2,		! ui_boxAlign
			4, 1,
			59, 38, 59, 38,
			1, stBoxAligns[1], BOXALIGN_LEFT,
			2, stBoxAligns[2], BOXALIGN_CENTER,
			3, stBoxAligns[3], BOXALIGN_SIDE,
			4, stBoxAligns[4], BOXALIGN_RIGHT


		x1 = 205
		x2 = 320

		x3 = 340
		x4 = 380
		x5 = 420

		ui_infield "AC_TextFont_2", x1, y, x2-x1-1, 18

		if GS_UniTextFormat then
			ui_pict "ui_pen_lock_flat(1)", x4+8, y, 13, 19, 1
		else
			ui_pict "ui_pen_flat(1)", x4+8, y, 13, 19, 1
		endif
		ui_infield "AC_TextPen_2", x5+24-35, y, 35, 22

		y = y + 52-24

		if GS_UniTextFormat then
			ui_pict "ui_FontSize_hide_flat(1)", x1, y+3, 27, 14, 1
		else
			ui_pict "ui_FontSize_flat(1)", x1, y+3, 27, 14, 1
		endif

		if bMetricDimensionNeeded then
			ui_infield "AC_TextSize_2", x1+30, y+4, x2-x1-31, 18
		else
			ui_infield "TextSize_2_pt", x1+30, y+4, x2-x1-31, 18
		endif

		ui_infield{3} "bBoldDetailText", x3, y, 24, 24,
			6, "",
			2,
			1, 16, 16, 16, 16,
			"ui_bold_flat(1)", "", 0,
			"ui_bold_flat(1)", "", 1\
			ui_tooltip `Жирный`

		ui_infield{3} "bItalicDetailText", x4, y, 24, 24,
			6, "",
			2,
			1, 16, 16, 16, 16,
			"ui_italic_flat(1)", "", 0,
			"ui_italic_flat(1)", "", 1\
			ui_tooltip `Курсив`

		ui_infield{3} "bUnderDetailText", x5, y, 24, 24,
			6, "",
			2,
			1, 16, 16, 16, 16,
			"ui_underline_flat(1)", "", 0,
			"ui_underline_flat(1)", "", 1\
			ui_tooltip `Подчеркнутый`

	endif

return


! =============================================================================
"FrameAndDimensionsPage":
! ------------------------------------------------------------------------------

	y = 40
	dy = 28

	x1 = 1
	x2 = 93
	x3 = x2 + 98
	x4 = 310
	x5 = 360
	x6 = 440

	ui_outfield `Стиль Рамки`, x1, y, x2-x1-1, 18

	ui_infield{3} "iFrameStyle", x2, y, 78, 94,
		2, 3,			! ui_frameTypes
		7, 1,
		64, 78, 64, 78,
		1, stFrameStyles[1], FRAME_NONE,
		2, stFrameStyles[2], FRAME_STYLE1,
		3, stFrameStyles[3], FRAME_STYLE2,
		4, stFrameStyles[4], FRAME_STYLE3,
		5, stFrameStyles[5], FRAME_STYLE4,
		6, stFrameStyles[6], FRAME_STYLE5,
		7, stFrameStyles[7], FRAME_STYLE6

	ui_outfield `Тип Линии`, x3, y, x4-x3-1, 18
	ui_infield "gs_line_type", x4, y-2, x6-x4, 26

	y = y + dy

	ui_outfield `Тип Штриховки`, x3, y, x4-x3-1, 18
	ui_infield "AC_MarkerFill", x4, y-1, x6-x4, 24

	y = y + dy

	ui_outfield `Перо Штриховки`, x3, y, x4-x3-1, 18
	ui_infield "gs_fill_pen", x6-35, y-1, 35, 22

	y = y + dy

	ui_outfield `Перо Фона Штриховки`, x3, y, x4-x3-1, 18
	ui_infield "gs_back_pen", x6-35, y-3, 35, 22

	y = y + dy

	ui_separator 0, y, 444, y

	y = y + 19

	ui_outfield `Единицы Размеров`,  x1, y,	x4-x1-142, 15
	ui_infield{3} "iWorkUnitLinear", x4-141, y-4, 140, 19,
			8, "", 3, 1, 0, 0, 0, 0,
			"", stUnitFormats[1],	DIMUNIT_MM,
			"", stUnitFormats[2],	DIMUNIT_CM,
			"", stUnitFormats[3],	DIMUNIT_DM,
			"", stUnitFormats[4],	DIMUNIT_METER,
			"", stUnitFormats[5],	DIMUNIT_INCH,
			"", stUnitFormats[6],	DIMUNIT_PROJECT

	ui_outfield `Десятичные`,  x4, y,	x6-x4-41, 15, 4 * _bLockLinearUnitDecimal
	ui_infield{3} "iWorkUnitLinearDecimal", x6-40, y-4,	40, 19,
			8, "", 3, 1, 0, 0, 0, 0,
			"", '0', 0,
			"", '1', 1,
			"", '2', 2,
			"", '3', 3,
			"", '4', 4

	y = y + dy

	if bWindow then
		ui_outfield `Единицы Высоты Отлива`,  x1, y,	x4-x1-142, 15
	else
		ui_outfield `Единицы Высоты Порога`,  x1, y,	x4-x1-142, 15
	endif

	ui_infield{3} "iWorkUnitSillHgt", x4-141, y-4, 140, 19,
			8, "", 3, 1, 0, 0, 0, 0,
			"", stUnitFormats[1],	DIMUNIT_MM,
			"", stUnitFormats[2],	DIMUNIT_CM,
			"", stUnitFormats[3],	DIMUNIT_DM,
			"", stUnitFormats[4],	DIMUNIT_METER,
			"", stUnitFormats[5],	DIMUNIT_INCH,
			"", stUnitFormats[6],	DIMUNIT_PROJECT

	ui_outfield `Десятичные`,  x4, y,	x6-x4-41, 15, 4 * _bLockSillHgtUnitDecimal
	ui_infield{3} "iWorkUnitSillHgtDecimal", x6-40 , y-4,	40, 19,
			8, "", 3, 1, 0, 0, 0, 0,
			"", '0', 0,
			"", '1', 1,
			"", '2', 2,
			"", '3', 3,
			"", '4', 4

return


! =============================================================================
"SizeAndPositionPage":
! ------------------------------------------------------------------------------

	y = 40
	dy = 28

	x1 = 1
	x2 = 93
	x3 = x2 + 98
	x4 = 310
	x5 = 360
	x6 = 440


	if bWindow then
		ui_outfield `Ширина Паспорта Окна`, x1, y, x3-x1-1, 15
	else
		ui_outfield `Ширина Паспорта Двери`, x1, y, x3-x1-1, 15
	endif

	ui_infield{3} "iStampWidth", x3, y-4, x5-x3-10, 19,
		8, "",
		0, 0,
		0, 0, 0, 0,
		"", stAutoFixed[1], VALUE_AUTOMATIC,
		"", stAutoFixed[2], VALUE_CUSTOM

	if bMetricDimensionNeeded then
		ui_infield "stampWidth_mm", x5, y-4, x6-x5, 19
	else
		ui_infield "stampWidth_pt", x5, y-4, x6-x5, 19
	endif

	y = y + dy

	ui_outfield `Межстрочное Расстояние ID`, x1, y, x3-x1-1, 15

	ui_infield{3} "iIDLineSpacing", x3, y-4, x5-x3-10, 19,
		8, "",
		0, 0,
		0, 0, 0, 0,
		"", stAutoFixed[1], VALUE_AUTOMATIC,
		"", stAutoFixed[2], VALUE_CUSTOM

	if bMetricDimensionNeeded then
		ui_infield "IDLineSpacing_mm", x5, y-4, x6-x5, 19
	else
		ui_infield "IDLineSpacing_pt", x5, y-4, x6-x5, 19
	endif

	y = y + dy

	ui_outfield `Межстрочное Расстояние Данных`, x1, y, x3-x1-1, 15

	ui_infield{3} "iDetailLineSpacing", x3, y-4, x5-x3-10, 19,
		8, "",
		0, 0,
		0, 0, 0, 0,
		"", stAutoFixed[1], VALUE_AUTOMATIC,
		"", stAutoFixed[2], VALUE_CUSTOM

	if bMetricDimensionNeeded then
		ui_infield "detailLineSpacing_mm", x5, y-4, x6-x5, 19
	else
		ui_infield "detailLineSpacing_pt", x5, y-4, x6-x5, 19
	endif

	y = y + dy

	ui_separator 0, y, 444, y

	y = y + 19

	ui_outfield	`По Горизонтали`,	x1, y, x3-x1-1, 15
	ui_infield	"markerPositionHor",	x5-90, y-4, x6-x5, 19

	y = y + dy


	ui_outfield	`По Вертикали`,	x1, y, x3-x1-1, 15
	ui_infield	"markerPositionVert",	x5-90, y-4, x6-x5, 19

return

]]>
</Script_UI>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_VL SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[

values "gs_ui_current_page" 1, 2, 3, 4, 5, 6, 7, 8

values "strDetLevel" stDetLevels
values "iDetLevel" DETLEV_SCALESENS, DETLEV_DETAILED, DETLEV_SIMPLE

if GLOB_MODPAR_NAME = "strDetLevel" then
	iDetLevel = DETLEV_SCALESENS
	if strDetLevel = stDetLevels[2] then iDetLevel = DETLEV_DETAILED
	if strDetLevel = stDetLevels[3] then iDetLevel = DETLEV_SIMPLE
	parameters iDetLevel = iDetLevel
else
	strDetLevel = stDetLevels[1]
	if iDetLevel = DETLEV_DETAILED	then strDetLevel = stDetLevels[2]
	if iDetLevel = DETLEV_SIMPLE	then strDetLevel = stDetLevels[3]
	parameters strDetLevel = strDetLevel
endif


! =============================================================================
! ID
! =============================================================================

values "iIDText" IDVALUE_IDNUMBER, IDVALUE_FULLIDNUM, IDVALUE_CUSTOMTEXT
values "strIDText" sIDTextValues[1], sIDTextValues[3],  sIDTextValues[2]

if GLOB_MODPAR_NAME = "strIDText" then
	for i = 1 to vardim1(sIDTextValues)
		if strIDText = sIDTextValues [i] then iIDText = i
	next i
	parameters iIDText = iIDText
else
	strIDText = sIDTextValues[ min(max(iIDText , 1) , (vardim1(sIDTextValues))) ]
	parameters strIDText = strIDText
endif

if	iIDText = IDVALUE_IDNUMBER | \
	iIDText = IDVALUE_FULLIDNUM then
	! strIDValue got value in master script
	parameters strIDValue = strIDValue
	lock "strIDValue"
	hideparameter "strIDValue"
endif


! =============================================================================
! Dimension parameters
! =============================================================================

values "strWHDimText" stMeasuredCustom
values "iWHDimText" DIM_MEASURED, DIM_CUSTOM

if GLOB_MODPAR_NAME = "strWHDimText" then
	iWHDimText = DIM_MEASURED
	if strWHDimText = stMeasuredCustom[2] then iWHDimText = DIM_CUSTOM
	parameters iWHDimText = iWHDimText
else
	strWHDimText = stMeasuredCustom[1]
	if iWHDimText = DIM_CUSTOM then strWHDimText = stMeasuredCustom[2]
	parameters strWHDimText = strWHDimText
endif

if iWHDimText = DIM_MEASURED then
	! strWHDimValue got value in master script
	parameters strWHDimValue = strWHDimValue
	lock "strWHDimValue"
	hideparameter "strWHDimValue"
endif

values "strUnitDimText" stMeasuredCustom
values "iUnitDimText" DIM_MEASURED, DIM_CUSTOM

if GLOB_MODPAR_NAME = "strUnitDimText" then
	iUnitDimText = DIM_MEASURED
	if strUnitDimText = stMeasuredCustom[2] then iUnitDimText = DIM_CUSTOM
	parameters iUnitDimText = iUnitDimText
else
	strUnitDimText = stMeasuredCustom[1]
	if iUnitDimText = DIM_CUSTOM then strUnitDimText = stMeasuredCustom[2]
	parameters strUnitDimText = strUnitDimText
endif

if iUnitDimText = DIM_MEASURED then
	! strUnitDimValue got value in master script
	parameters strUnitDimValue = strUnitDimValue
	lock "strUnitDimValue"
	hideparameter "strUnitDimValue"
endif

values "strEgressDimText" stMeasuredCustom
values "iEgressDimText" DIM_MEASURED, DIM_CUSTOM

if GLOB_MODPAR_NAME = "strEgressDimText" then
	iEgressDimText = DIM_MEASURED
	if strEgressDimText = stMeasuredCustom[2] then iEgressDimText = DIM_CUSTOM
	parameters iEgressDimText = iEgressDimText
else
	strEgressDimText = stMeasuredCustom[1]
	if iEgressDimText = DIM_CUSTOM then strEgressDimText = stMeasuredCustom[2]
	parameters strEgressDimText = strEgressDimText
endif

if iEgressDimText = DIM_MEASURED then
	! strEgressDimValue got value in master script
	parameters strEgressDimValue = strEgressDimValue
	lock "strEgressDimValue"
	hideparameter "strEgressDimValue"
endif

if bWindow then
	values "strRevealDimText" stMeasuredCustom
	values "iRevealDimText" DIM_MEASURED, DIM_CUSTOM

	if GLOB_MODPAR_NAME = "strRevealDimText" then
		iRevealDimText = DIM_MEASURED
		if strRevealDimText = stMeasuredCustom[2] then iRevealDimText = DIM_CUSTOM
		parameters iRevealDimText = iRevealDimText
	else
		strRevealDimText = stMeasuredCustom[1]
		if iRevealDimText = DIM_CUSTOM then strRevealDimText = stMeasuredCustom[2]
		parameters strRevealDimText = strRevealDimText
	endif

	if iRevealDimText = DIM_MEASURED then
		! strRevealDimValue got value in master script
		parameters strRevealDimValue = strRevealDimValue
		lock "strRevealDimValue"
		hideparameter "strRevealDimValue"
	endif
endif

! =============================================================================
! Sill - Threshold parameters
! =============================================================================

if bWindow then
	values "strSillText" stMeasuredCustom
	values "iSillText" DIM_MEASURED, DIM_CUSTOM

	if GLOB_MODPAR_NAME = "strSillText" then
		iSillText = DIM_MEASURED
		if strSillText = stMeasuredCustom[2] then iSillText = DIM_CUSTOM
		parameters iSillText = iSillText
	else
		strSillText = stMeasuredCustom[1]
		if iSillText = DIM_CUSTOM then strSillText = stMeasuredCustom[2]
		parameters strSillText = strSillText
	endif

	if iSillText = DIM_MEASURED then
		lock "strSillValue"
		hideparameter "strSillValue"
	endif

	values "strShowSillTo" stSillToOptions
	values "iShowSillTo" SILL_TO_ANCHOR, SILL_TO_WALLBASE, SILL_TO_CURRSTORY

	if GLOB_MODPAR_NAME = "strShowSillTo" then
		iShowSillTo = SILL_TO_ANCHOR
		if strShowSillTo = stSillToOptions[2] then iShowSillTo = SILL_TO_WALLBASE
		if strShowSillTo = stSillToOptions[3] then iShowSillTo = SILL_TO_CURRSTORY
		parameters iShowSillTo = iShowSillTo
	else
		strShowSillTo = stSillToOptions[1]
		if iShowSillTo = SILL_TO_WALLBASE then strShowSillTo = stSillToOptions[2]
		if iShowSillTo = SILL_TO_CURRSTORY then strShowSillTo = stSillToOptions[3]
		parameters strShowSillTo = strShowSillTo
	endif

	hideparameter "strThresholdText", "strThresholdValue", "strThresholdPrefix"
	lock "strThresholdText", "iThresholdText", "strThresholdValue", "strThresholdPrefix"
else
	values "strThresholdText" stMeasuredCustom
	values "iThresholdText" DIM_MEASURED, DIM_CUSTOM

	if GLOB_MODPAR_NAME = "strThresholdText" then
		iThresholdText = DIM_MEASURED
		if strThresholdText = stMeasuredCustom[2] then iThresholdText = DIM_CUSTOM
		parameters iThresholdText = iThresholdText
	else
		strThresholdText = stMeasuredCustom[1]
		if iThresholdText = DIM_CUSTOM then strThresholdText = stMeasuredCustom[2]
		parameters strThresholdText = strThresholdText
	endif

	if iThresholdText = DIM_MEASURED then
		parameters strThresholdValue = strThresholdValue
		lock "strThresholdValue"
		hideparameter "strThresholdValue"
	endif

	hideparameter "strSillText", "strShowSillTo", "strSillValue", "strSillPrefix"
	lock "strSillText", "iSillText", "strShowSillTo",
			"iShowSillTo", "strSillValue", "strSillPrefix"
endif


! =============================================================================
! Listing parameters
! =============================================================================

values "strFireText" stAutoCustom
values "iFireText" VALUE_AUTOMATIC, VALUE_CUSTOM

if GLOB_MODPAR_NAME = "strFireText" then
	iFireText = VALUE_AUTOMATIC
	if strFireText = stAutoCustom[2] then iFireText = VALUE_CUSTOM
	parameters iFireText = iFireText
else
	strFireText = stAutoCustom[1]
	if iFireText = VALUE_CUSTOM then strFireText = stAutoCustom[2]
	parameters strFireText = strFireText
endif

if iFireText = VALUE_AUTOMATIC then
	lock "strFireValue"
	hideparameter "strFireValue"
endif

values "strAcousticText" stAutoCustom
values "iAcousticText" VALUE_AUTOMATIC, VALUE_CUSTOM

if GLOB_MODPAR_NAME = "strAcousticText" then
	iAcousticText = VALUE_AUTOMATIC
	if strAcousticText = stAutoCustom[2] then iAcousticText = VALUE_CUSTOM
	parameters iAcousticText = iAcousticText
else
	strAcousticText = stAutoCustom[1]
	if iAcousticText = VALUE_CUSTOM then strAcousticText = stAutoCustom[2]
	parameters strAcousticText = strAcousticText
endif

if iAcousticText = VALUE_AUTOMATIC then
	lock "strAcousticValue"
	hideparameter "strAcousticValue"
endif

values "strUValueText" stAutoCustom
values "iUValueText" VALUE_AUTOMATIC, VALUE_CUSTOM

if GLOB_MODPAR_NAME = "strUValueText" then
	iUValueText = VALUE_AUTOMATIC
	if strUValueText = stAutoCustom[2] then iUValueText = VALUE_CUSTOM
	parameters iUValueText = iUValueText
else
	strUValueText = stAutoCustom[1]
	if iUValueText = VALUE_CUSTOM then strUValueText = stAutoCustom[2]
	parameters strUValueText = strUValueText
endif

if iUValueText = VALUE_AUTOMATIC then
	lock "strUValueValue"
	hideparameter "strUValueValue"
endif

values "strMaterialText" stMaterials
values "iMaterialText" 1, 2, 3, 4

if GLOB_MODPAR_NAME = "strMaterialText" then
	iMaterialText = 1
	for i = 2 to 4
		if strMaterialText = stMaterials[i] then iMaterialText = i
	next i
	parameters iMaterialText = iMaterialText
else
	strMaterialText = stMaterials[max(1, min(vardim1(stMaterials), iMaterialText))]
	parameters strMaterialText = strMaterialText
endif

if iMaterialText <> 4 then
	! strMaterialValue is drawen in 2D, and locked if not custom
	strMaterialValue = stMaterials[iMaterialText]
	parameters strMaterialValue = strMaterialValue

	lock "strMaterialValue"
	hideparameter "strMaterialValue"
endif

values "strHardwareText" stAutoCustom
values "iHardwareText" VALUE_AUTOMATIC, VALUE_CUSTOM

if GLOB_MODPAR_NAME = "strHardwareText" then
	iHardwareText = VALUE_AUTOMATIC
	if strHardwareText = stAutoCustom[2] then iHardwareText = VALUE_CUSTOM
	parameters iHardwareText = iHardwareText
else
	strHardwareText = stAutoCustom[1]
	if iHardwareText = VALUE_CUSTOM then strHardwareText = stAutoCustom[2]
	parameters strHardwareText = strHardwareText
endif

if iHardwareText = VALUE_AUTOMATIC then
	lock "strHardwareValue"
	hideparameter "strHardwareValue"
endif


! =============================================================================
! Appearance
! =============================================================================

values "strFrameStyle" stFrameStyles
values "iFrameStyle" 0, 1, 2, 3, 4, 5, 6

if GLOB_MODPAR_NAME = "strFrameStyle" then
	iFrameStyle = 0
	for i = 2 to vardim1(stFrameStyles)
		if strFrameStyle = stFrameStyles[i] then
			iFrameStyle = i-1
			i = vardim1(stFrameStyles)
		endif
	next i
	parameters iFrameStyle = iFrameStyle
else
	strFrameStyle = stFrameStyles[max(1, min(vardim1(stFrameStyles), iFrameStyle + 1))]
	parameters strFrameStyle = strFrameStyle
endif

values{2} "iWorkUnitLinear"	DIMUNIT_MM,			stUnitFormats[1],
							DIMUNIT_CM,			stUnitFormats[2],
							DIMUNIT_DM,			stUnitFormats[3],
							DIMUNIT_METER,		stUnitFormats[4],
							DIMUNIT_INCH,		stUnitFormats[5],
							DIMUNIT_PROJECT,	stUnitFormats[6]

put 0, 1
if iWorkUnitLinear = DIMUNIT_CM		then put 2
if iWorkUnitLinear = DIMUNIT_DM		then put 2, 3
if iWorkUnitLinear = DIMUNIT_METER	then put 2, 3, 4

values "iWorkUnitLinearDecimal" get(NSP)

if _bLockLinearUnitDecimal then
	lock "iWorkUnitLinearDecimal"
	hideparameter "iWorkUnitLinearDecimal"
endif

values{2} "iWorkUnitSillHgt"	DIMUNIT_MM,			stUnitFormats[1],
								DIMUNIT_CM,			stUnitFormats[2],
								DIMUNIT_DM,			stUnitFormats[3],
								DIMUNIT_METER,		stUnitFormats[4],
								DIMUNIT_INCH,		stUnitFormats[5],
								DIMUNIT_PROJECT,	stUnitFormats[6]

put 0, 1
if iWorkUnitSillHgt = DIMUNIT_CM	then put 2
if iWorkUnitSillHgt = DIMUNIT_DM	then put 2, 3
if iWorkUnitSillHgt = DIMUNIT_METER	then put 2, 3, 4

values "iWorkUnitSillHgtDecimal" get(NSP)

if _bLockSillHgtUnitDecimal then
	lock "iWorkUnitSillHgtDecimal"
	hideparameter "iWorkUnitSillHgtDecimal"
endif


values "strStampWidth" stAutoFixed
values "iStampWidth" VALUE_AUTOMATIC, VALUE_CUSTOM

if GLOB_MODPAR_NAME = "strStampWidth" then
	iStampWidth = VALUE_AUTOMATIC
	if strStampWidth = stAutoFixed[2] then iStampWidth = VALUE_CUSTOM
	parameters iStampWidth = iStampWidth
else
	strStampWidth = stAutoFixed[1]
	if iStampWidth = VALUE_CUSTOM then strStampWidth = stAutoFixed[2]
	parameters strStampWidth = strStampWidth
endif

if iStampWidth = VALUE_AUTOMATIC then
	lock "stampWidth_mm", "stampWidth_pt"
else
	values "stampWidth_mm" range [0, )
	values "stampWidth_pt" range [0, )

	if GLOB_MODPAR_NAME = "stampWidth_pt" then
		stampWidth_mm = stampWidth_pt / DOT_IN_MM
		parameters stampWidth_mm = stampWidth_mm
	else
		stampWidth_pt = stampWidth_mm * DOT_IN_MM
		parameters stampWidth_pt = stampWidth_pt
	endif
endif
if bMetricDimensionNeeded then
	hideparameter "stampWidth_pt"
else
	hideparameter "stampWidth_mm"
endif

values "strIDLineSpacing" stAutoFixed
values "iIDLineSpacing" VALUE_AUTOMATIC, VALUE_CUSTOM

if GLOB_MODPAR_NAME = "strIDLineSpacing" then
	iIDLineSpacing = VALUE_AUTOMATIC
	if strIDLineSpacing = stAutoFixed[2] then iIDLineSpacing = VALUE_CUSTOM
	parameters iIDLineSpacing = iIDLineSpacing
else
	strIDLineSpacing = stAutoFixed[1]
	if iIDLineSpacing = VALUE_CUSTOM then strIDLineSpacing = stAutoFixed[2]
	parameters strIDLineSpacing = strIDLineSpacing
endif

if iIDLineSpacing = VALUE_AUTOMATIC then
	lock "IDLineSpacing_mm", "IDLineSpacing_pt"
else
	values "IDLineSpacing_mm" range [minIDLineSpacing, )
	values "IDLineSpacing_pt" range [minIDLineSpacing * DOT_IN_MM, )

	if GLOB_MODPAR_NAME = "IDLineSpacing_pt" then
		IDLineSpacing_mm = IDLineSpacing_pt / DOT_IN_MM
		parameters IDLineSpacing_mm = IDLineSpacing_mm
	else
		IDLineSpacing_pt = IDLineSpacing_mm * DOT_IN_MM
		parameters IDLineSpacing_pt = IDLineSpacing_pt
	endif
endif
if bMetricDimensionNeeded then
	hideparameter "IDLineSpacing_pt"
else
	hideparameter "IDLineSpacing_mm"
endif

values "strDetailLineSpacing" stAutoFixed
values "iDetailLineSpacing" VALUE_AUTOMATIC, VALUE_CUSTOM

if GLOB_MODPAR_NAME = "strDetailLineSpacing" then
	iDetailLineSpacing = VALUE_AUTOMATIC
	if strDetailLineSpacing = stAutoFixed[2] then iDetailLineSpacing = VALUE_CUSTOM
	parameters iDetailLineSpacing = iDetailLineSpacing
else
	strDetailLineSpacing = stAutoFixed[1]
	if iDetailLineSpacing = VALUE_CUSTOM then strDetailLineSpacing = stAutoFixed[2]
	parameters strDetailLineSpacing = strDetailLineSpacing
endif

if iDetailLineSpacing = VALUE_AUTOMATIC then
	lock "detailLineSpacing_mm", "detailLineSpacing_pt"
else
	values "detailLineSpacing_mm" range [0, )
	values "detailLineSpacing_pt" range [0, )

	if GLOB_MODPAR_NAME = "detailLineSpacing_pt" then
		detailLineSpacing_mm = detailLineSpacing_pt / DOT_IN_MM
		parameters detailLineSpacing_mm = detailLineSpacing_mm
	else
		detailLineSpacing_pt = detailLineSpacing_mm * DOT_IN_MM
		parameters detailLineSpacing_pt = detailLineSpacing_pt
	endif
endif
if bMetricDimensionNeeded then
	hideparameter "detailLineSpacing_pt"
else
	hideparameter "detailLineSpacing_mm"
endif

! =============================================================================
! Text Parameters
! =============================================================================

! --- Alignment ---------------------------------------------------------------

if GS_UniTextFormat then
	values "strAlignment" stIDAligns
	values "iAlignment" IDALIGN_LEFT, IDALIGN_CENTER, IDALIGN_RIGHT

	if GLOB_MODPAR_NAME = "strAlignment" then
		iAlignment = IDALIGN_LEFT
		if strAlignment = stIDAligns[2] then iAlignment = IDALIGN_CENTER
		if strAlignment = stIDAligns[3] then iAlignment = IDALIGN_RIGHT
		parameters iAlignment = iAlignment
	else
		strAlignment = stIDAligns[1]
		if iAlignment = IDALIGN_CENTER then strAlignment = stIDAligns[2]
		if iAlignment = IDALIGN_RIGHT then strAlignment = stIDAligns[3]
		parameters strAlignment = strAlignment
	endif

	iIDAlignment = iAlignment
	strIDAlignment = stIDAligns[iIDAlignment]
	parameters	strIDAlignment	= strIDAlignment,
				iIDAlignment	= iIDAlignment

	lock "iIDAlignment", "strIDAlignment"
	hideparameter "iIDAlignment", "strIDAlignment"

	if iAlignment = IDALIGN_LEFT then
		iBoxAlignment = BOXALIGN_LEFT
	else
		if iAlignment = IDALIGN_CENTER then
			iBoxAlignment = BOXALIGN_CENTER
		else
			iBoxAlignment = BOXALIGN_RIGHT
		endif
	endif
	strBoxAlignment = stBoxAligns[iBoxAlignment]
	parameters	strBoxAlignment	= strBoxAlignment,
				iBoxAlignment	= iBoxAlignment

	lock "iBoxAlignment", "strBoxAlignment"
	hideparameter "iBoxAlignment", "strBoxAlignment"
else
	values "strIDAlignment" stIDAligns
	values "iIDAlignment" IDALIGN_LEFT, IDALIGN_CENTER, IDALIGN_RIGHT
	values "strBoxAlignment" stBoxAligns
	values "iBoxAlignment" BOXALIGN_LEFT, BOXALIGN_CENTER, BOXALIGN_SIDE, BOXALIGN_RIGHT

	if GLOB_MODPAR_NAME = "strIDAlignment" then
		iIDAlignment = IDALIGN_LEFT
		if strIDAlignment = stIDAligns[2] then iIDAlignment = IDALIGN_CENTER
		if strIDAlignment = stIDAligns[3] then iIDAlignment = IDALIGN_RIGHT
		parameters iIDAlignment = iIDAlignment
	else
		strIDAlignment = stIDAligns[1]
		if iIDAlignment = IDALIGN_CENTER	then strIDAlignment = stIDAligns[2]
		if iIDAlignment = IDALIGN_RIGHT	then strIDAlignment = stIDAligns[3]
		parameters strIDAlignment = strIDAlignment
	endif

	if GLOB_MODPAR_NAME = "strBoxAlignment" then
		iBoxAlignment = BOXALIGN_LEFT
		if strBoxAlignment = stBoxAligns[2] then iBoxAlignment = BOXALIGN_CENTER
		if strBoxAlignment = stBoxAligns[3] then iBoxAlignment = BOXALIGN_SIDE
		if strBoxAlignment = stBoxAligns[4] then iBoxAlignment = BOXALIGN_RIGHT
		parameters iBoxAlignment = iBoxAlignment
	else
		strBoxAlignment = stBoxAligns[1]
		if iBoxAlignment = BOXALIGN_CENTER	then strBoxAlignment = stBoxAligns[2]
		if iBoxAlignment = BOXALIGN_SIDE	then strBoxAlignment = stBoxAligns[3]
		if iBoxAlignment = BOXALIGN_RIGHT	then strBoxAlignment = stBoxAligns[4]
		parameters strBoxAlignment = strBoxAlignment
	endif

	iAlignment = iIDAlignment
	strAlignment = stIDAligns[iIDAlignment]
	parameters	strAlignment	= strAlignment,
				iAlignment		= iAlignment

	lock "iAlignment", "strAlignment"
	hideparameter "iAlignment", "strAlignment"
endif


if GS_UniTextFormat then
	if GLOB_MODPAR_NAME = "fontType2" then
		AC_TextFont_1 = fontType2
		parameters AC_TextFont_1 = AC_TextFont_1
	else
		fontType2 = AC_TextFont_1
		parameters fontType2 = fontType2
	endif

	AC_TextFont_1 = fontType2
	parameters AC_TextFont_1 = AC_TextFont_1
	lock "AC_TextFont_1"
	hideparameter "AC_TextFont_1"

	fontType = fontType2
	parameters fontType = fontType
	lock "fontType"
	hideparameter "fontType"

	AC_TextFont_2 = fontType2
	parameters AC_TextFont_2 = AC_TextFont_2
	lock "AC_TextFont_2"
	hideparameter "AC_TextFont_2"
else
	if GLOB_MODPAR_NAME = "fontType" then
		AC_TextFont_1 = fontType
		parameters AC_TextFont_1 = AC_TextFont_1
	else
		fontType = AC_TextFont_1
		parameters fontType = fontType
	endif

	fontType2 = AC_TextFont_1
	parameters fontType2 = fontType2
	lock "fontType2"
	hideparameter "fontType2"
endif


! --- Text Size & Pen ---------------------------------------------------------

if GS_UniTextFormat then
	TextSize_1_mm = AC_TextSize_1
	AC_TextPen_1 = TextPen_U
	parameters	TextSize_1_mm	= TextSize_1_mm,
				AC_TextPen_1	= AC_TextPen_1

	lock "TextSize_1_mm", "AC_TextPen_1"
	hideparameter "TextSize_1_mm", "AC_TextPen_1"

	AC_TextSize_2 = AC_TextSize_1
	AC_TextPen_2 = TextPen_U
	parameters	AC_TextSize_2	= AC_TextSize_2,
				AC_TextPen_2	= AC_TextPen_2

	lock "AC_TextSize_2", "AC_TextPen_2"
	hideparameter "AC_TextSize_2", "AC_TextPen_2"

	if GLOB_MODPAR_NAME = "TextSize_U_pt" then
		AC_TextSize_1 = TextSize_U_pt / DOT_IN_MM
		TextSize_U_mm = AC_TextSize_1
		parameters AC_TextSize_1 = AC_TextSize_1, TextSize_U_mm = TextSize_U_mm
	else
		if GLOB_MODPAR_NAME = "TextSize_U_mm" then
			AC_TextSize_1 = TextSize_U_mm
			TextSize_U_pt = TextSize_U_mm * DOT_IN_MM
			parameters AC_TextSize_1 = AC_TextSize_1, TextSize_U_pt = TextSize_U_pt
		else
			TextSize_U_pt = AC_TextSize_1 * DOT_IN_MM
			TextSize_U_mm = AC_TextSize_1
			parameters TextSize_U_pt = TextSize_U_pt, TextSize_U_mm = TextSize_U_mm
		endif
	endif
else
	TextSize_U_mm = AC_TextSize_1
	TextPen_U = AC_TextPen_1
	parameters	TextSize_U_mm	= TextSize_U_mm,
				TextPen_U	= TextPen_U

	lock "TextSize_U_mm", "TextPen_U"
	hideparameter "TextSize_U_mm", "TextPen_U"

	if GLOB_MODPAR_NAME = "TextSize_2_pt" then
		AC_TextSize_2 = TextSize_2_pt / DOT_IN_MM
		parameters AC_TextSize_2 = AC_TextSize_2
	else
		TextSize_2_pt = AC_TextSize_2 * DOT_IN_MM
		parameters TextSize_2_pt = TextSize_2_pt
	endif

	if GLOB_MODPAR_NAME = "TextSize_1_pt" then
		AC_TextSize_1 = TextSize_1_pt / DOT_IN_MM
		TextSize_1_mm = AC_TextSize_1
		parameters AC_TextSize_1 = AC_TextSize_1, TextSize_1_mm = TextSize_1_mm
	else
		if GLOB_MODPAR_NAME = "TextSize_1_mm" then
			AC_TextSize_1 = TextSize_1_mm
			TextSize_1_pt = TextSize_1_mm * DOT_IN_MM
			parameters AC_TextSize_1 = AC_TextSize_1, TextSize_1_pt = TextSize_1_pt
		else
			TextSize_1_pt = AC_TextSize_1 * DOT_IN_MM
			TextSize_1_mm = AC_TextSize_1
			parameters TextSize_1_pt = TextSize_1_pt, TextSize_1_mm = TextSize_1_mm
		endif
	endif
endif

if bMetricDimensionNeeded then
	lock "TextSize_2_pt", "TextSize_1_pt", "TextSize_U_pt"
	hideparameter "TextSize_2_pt", "TextSize_1_pt", "TextSize_U_pt"
else
	lock "AC_TextSize_2", "TextSize_1_mm", "TextSize_U_mm"
	hideparameter "AC_TextSize_2", "TextSize_1_mm", "TextSize_U_mm"
endif


! --- Text Style --------------------------------------------------------------

if GS_UniTextFormat then
	if GLOB_MODPAR_NAME = "TextStyle_U" then
		bBoldText   = bittest(TextStyle_U, 0)
		bItalicText = bittest(TextStyle_U, 1)
		bUnderText  = bittest(TextStyle_U, 2)
		parameters	bBoldText	= bBoldText,
					bItalicText	= bItalicText,
					bUnderText	= bUnderText
	else
		TextStyle_U = bBoldText + 2 * bItalicText + 4 * bUnderText
		parameters TextStyle_U = TextStyle_U
	endif

	AC_TextStyle_1 = TextStyle_U
	bBoldIDText   = bBoldText
	bItalicIDText = bItalicText
	bUnderIDText  = bUnderText
	parameters	AC_TextStyle_1	= AC_TextStyle_1,
				bBoldIDText		= bBoldIDText,
				bItalicIDText	= bItalicIDText,
				bUnderIDText	= bUnderIDText

	lock "AC_TextStyle_1", "bBoldIDText", "bItalicIDText", "bUnderIDText"
	hideparameter "AC_TextStyle_1", "bBoldIDText", "bItalicIDText", "bUnderIDText"

	AC_TextStyle_2 = TextStyle_U
	bBoldDetailText   = bBoldText
	bItalicDetailText = bItalicText
	bUnderDetailText  = bUnderText
	parameters	AC_TextStyle_2		= AC_TextStyle_2,
				bBoldDetailText		= bBoldDetailText,
				bItalicDetailText	= bItalicDetailText,
				bUnderDetailText	= bUnderDetailText

	lock "AC_TextStyle_2", "bBoldDetailText", "bItalicDetailText", "bUnderDetailText"
	hideparameter "AC_TextStyle_2", "bBoldDetailText", "bItalicDetailText", "bUnderDetailText"
else
	if GLOB_MODPAR_NAME = "AC_TextStyle_1" then
		bBoldIDText   = bittest(AC_TextStyle_1, 0)
		bItalicIDText = bittest(AC_TextStyle_1, 1)
		bUnderIDText  = bittest(AC_TextStyle_1, 2)
		parameters	bBoldIDText		= bBoldIDText,
					bItalicIDText	= bItalicIDText,
					bUnderIDText	= bUnderIDText
	else
		AC_TextStyle_1 = bBoldIDText + 2 * bItalicIDText + 4 * bUnderIDText
		parameters AC_TextStyle_1 = AC_TextStyle_1
	endif

	if GLOB_MODPAR_NAME = "AC_TextStyle_2" then
		bBoldDetailText   = bittest(AC_TextStyle_2, 0)
		bItalicDetailText = bittest(AC_TextStyle_2, 1)
		bUnderDetailText  = bittest(AC_TextStyle_2, 2)
		parameters	bBoldDetailText		= bBoldDetailText,
					bItalicDetailText	= bItalicDetailText,
					bUnderDetailText	= bUnderDetailText
	else
		AC_TextStyle_2 = bBoldDetailText + 2 * bItalicDetailText + 4 * bUnderDetailText
		parameters AC_TextStyle_2 = AC_TextStyle_2
	endif

	TextStyle_U = AC_TextStyle_1
	bBoldText   =  bBoldIDText
	bItalicText = bItalicIDText
	bUnderText  = bUnderIDText
	parameters	TextStyle_U	= TextStyle_U,
				bBoldText	= bBoldText,
				bItalicText	= bItalicText,
				bUnderText	= bUnderText

	lock "TextStyle_U", "bBoldText", "bItalicText", "bUnderText"
	hideparameter "TextStyle_U", "bBoldText", "bItalicText", "bUnderText"
endif


! =============================================================================
! Door-Window parameter control
! =============================================================================

if bWindow then
	lock	"bShowEgressDim_detailed",
			"bShowThreshold_detailed",
			"bShowHandle_detailed",
			"bShowCust_detailed",
			"bShowEgressDim_simple",
			"bShowThreshold_simple",
			"bShowHandle_simple",
			"bShowCust_simple",

			"strHandlePrefix",
			"strHandleValue",
			"strCustPrefix",
			"strCustValue"

	hideparameter "bShowEgressDim_detailed",
			"bShowThreshold_detailed",
			"bShowHandle_detailed",
			"bShowCust_detailed",
			"bShowEgressDim_simple",
			"bShowThreshold_simple",
			"bShowHandle_simple",
			"bShowCust_simple",

			"strHandlePrefix",
			"strHandleValue",
			"strCustPrefix",
			"strCustValue"
else
	lock	"bShowSill_detailed",
			"bShowCust1_detailed",
			"bShowCust2_detailed",
			"bShowSill_simple",
			"bShowCust1_simple",
			"bShowCust2_simple",

			"strCust1Prefix",
			"strCust1Value",
			"strCust2Prefix",
			"strCust2Value"

	hideparameter	"bShowSill_detailed",
			"bShowCust1_detailed",
			"bShowCust2_detailed",
			"bShowSill_simple",
			"bShowCust1_simple",
			"bShowCust2_simple",

			"strCust1Prefix",
			"strCust1Value",
			"strCust2Prefix",
			"strCust2Value"
endif

! ==============================================================================
! DWG-Export Type for GER
! ==============================================================================

if	LibraryLangCode <> "GER" then
	lock	"ac_dwg_block_name"
	hideparameter	"ac_dwg_block_name"

	! if the folder is empty
	lock	"gs_dwg_export_title"
	hideparameter	"gs_dwg_export_title"
endif

]]>
</Script_VL>

<ParamSection SectVersion="26" SectionFlags="0" SubIdent="0">
	<ParamSectHeader>
		<Version>26</Version>
		<AutoHotspots>false</AutoHotspots>
		<StatBits>
			<STBit_FixSize/>
		</StatBits>
		<WDLeftFrame>0</WDLeftFrame>
		<WDRightFrame>0</WDRightFrame>
		<WDTopFrame>0</WDTopFrame>
		<WDBotFrame>0</WDBotFrame>
		<LayFlags>65535</LayFlags>
		<WDMirrorThickness>0</WDMirrorThickness>
		<WDWallInset>0</WDWallInset>
		<SymbolColor>0</SymbolColor>
	</ParamSectHeader>
	<Parameters>
		<Length Name="A">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="B">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<RealNum Name="AC_MarkerSize">
			<Description><![CDATA["Marker Size"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>3.14285714286</Value>
		</RealNum>
		<String Name="AC_MarkerText_1">
			<Description><![CDATA["Marker Text 1"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="AC_MarkerText_2">
			<Description><![CDATA["Marker Text 2"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="AC_MarkerText_3">
			<Description><![CDATA["Marker Text 3"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="AC_MarkerText_4">
			<Description><![CDATA["Marker Text 4"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="AC_TextFont_4">
			<Description><![CDATA["Marker Text 4 Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value><![CDATA["Arial"]]></Value>
		</String>
		<String Name="AC_TextFont_3">
			<Description><![CDATA["Marker Text 3 Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value><![CDATA["Arial"]]></Value>
		</String>
		<RealNum Name="AC_TextSize_4">
			<Description><![CDATA["Marker Text 4 Size"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>2</Value>
		</RealNum>
		<RealNum Name="AC_TextSize_3">
			<Description><![CDATA["Marker Text 3 Size"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>2</Value>
		</RealNum>
		<Integer Name="AC_TextStyle_3">
			<Description><![CDATA["Marker Text 3 Style"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<PenColor Name="AC_TextPen_4">
			<Description><![CDATA["Marker Text 4 Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>7</Value>
		</PenColor>
		<Integer Name="AC_TextStyle_4">
			<Description><![CDATA["Marker Text 4 Style"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<String Name="AC_WIDO_ID">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value><![CDATA["о-34"]]></Value>
		</String>
		<PenColor Name="AC_TextPen_3">
			<Description><![CDATA["Marker Text 3 Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>7</Value>
		</PenColor>
		<Boolean Name="AC_Readable">
			<Description><![CDATA["Readable Text"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="AC_WIDO_A_SIZE">
			<Description><![CDATA["Window Width"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1.45</Value>
		</Length>
		<Length Name="AC_WIDO_B_SIZE">
			<Description><![CDATA["Window Height"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1.8</Value>
		</Length>
		<Length Name="AC_WALL_THICKNESS">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.3</Value>
		</Length>
		<Boolean Name="AC_WIDO_REVEAL_SIDE">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="AC_WIDO_REVEAL_SIDE_2">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Angle Name="AC_SYMB_ROTANGLE">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Boolean Name="AC_WIDO_MIRRORED">
			<Description><![CDATA[""]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bWindow">
			<Description><![CDATA[""]]></Description>
			<Value>1</Value>
		</Boolean>
		<String Name="strDetLevel">
			<Description><![CDATA["Detail Level"]]></Description>
			<Value><![CDATA["От 1:50"]]></Value>
		</String>
		<Integer Name="iDetlevel">
			<Description><![CDATA["Detail Level"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>3</Value>
		</Integer>
		<Integer Name="gs_ui_current_page">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>

		<!-- dwstamp_showInDetailed: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="dwstamp_showInDetailed">
			<Description><![CDATA["Show in Detailed"]]></Description>
		</Title>
		<Boolean Name="bShowID_detailed">
			<Description><![CDATA["ID"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="bShowWallholeDim_detailed">
			<Description><![CDATA["Wallhole Dimensions"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="bShowUnitDim_detailed">
			<Description><![CDATA["Unit Dimensions"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bShowEgressDim_detailed">
			<Description><![CDATA["Egress Dimensions"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bShowRevealDim_detailed">
			<Description><![CDATA["Reveal Dimensions"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bShowSill_detailed">
			<Description><![CDATA["Sill Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="bShowThreshold_detailed">
			<Description><![CDATA["Threshold Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="bShowFire_detailed">
			<Description><![CDATA["Fire Rating"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="bShowAcoustic_detailed">
			<Description><![CDATA["Acoustic Rating"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bShowUValue_detailed">
			<Description><![CDATA["U-value"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bShowMaterial_detailed">
			<Description><![CDATA["Material"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bShowHardware_detailed">
			<Description><![CDATA["Hardware Set"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bShowCust1_detailed">
			<Description><![CDATA["Custom Text 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bShowCust2_detailed">
			<Description><![CDATA["Custom Text 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bShowHandle_detailed">
			<Description><![CDATA["Handle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bShowCust_detailed">
			<Description><![CDATA["Custom Text"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bShowAdditionalTags_detailed">
			<Description><![CDATA["Additional Tags"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- dwstamp_showInSimple: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="dwstamp_showInSimple">
			<Description><![CDATA["Show in Simple"]]></Description>
		</Title>
		<Boolean Name="bShowID_simple">
			<Description><![CDATA["ID"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="bShowWallholeDim_simple">
			<Description><![CDATA["Wallhole Dimensions"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="bShowUnitDim_simple">
			<Description><![CDATA["Unit Dimensions"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bShowEgressDim_simple">
			<Description><![CDATA["Egress Dimensions"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bShowRevealDim_simple">
			<Description><![CDATA["Reveal Dimensions"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bShowSill_simple">
			<Description><![CDATA["Sill Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bShowThreshold_simple">
			<Description><![CDATA["Threshold Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bShowFire_simple">
			<Description><![CDATA["Fire Rating"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bShowAcoustic_simple">
			<Description><![CDATA["Acoustic Rating"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bShowUValue_simple">
			<Description><![CDATA["U-value"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bShowMaterial_simple">
			<Description><![CDATA["Material"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bShowHardware_simple">
			<Description><![CDATA["Hardware Set"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bShowCust1_simple">
			<Description><![CDATA["Custom Text 1"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bShowCust2_simple">
			<Description><![CDATA["Custom Text 2"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bShowHandle_simple">
			<Description><![CDATA["Handle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bShowCust_simple">
			<Description><![CDATA["Custom Text"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bShowAdditionalTags_simple">
			<Description><![CDATA["Additional Tags"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- dwstamp_content: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="dwstamp_content">
			<Description><![CDATA["Content"]]></Description>
		</Title>
		<String Name="strIDText">
			<Description><![CDATA["ID Text"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Компактный ID Элемента"]]></Value>
		</String>
		<Integer Name="iIDText">
			<Description><![CDATA["ID Text"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="strIDValue">
			<Description><![CDATA["ID Value"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["о-34"]]></Value>
		</String>
		<String Name="strWHDimText">
			<Description><![CDATA["Wallhole Dimensions Text"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Измеряемое Значение"]]></Value>
		</String>
		<Integer Name="iWHDimText">
			<Description><![CDATA["Wallhole Dimensions Text"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="strWHDimValue">
			<Description><![CDATA["Wallhole Dimensions Value"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["0.000x0.000"]]></Value>
		</String>
		<String Name="strWHPrefix">
			<Description><![CDATA["Wallhole Dimensions Name"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Размеры Проема"]]></Value>
		</String>
		<String Name="strUnitDimText">
			<Description><![CDATA["Unit Dimensions Text"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Измеряемое Значение"]]></Value>
		</String>
		<Integer Name="iUnitDimText">
			<Description><![CDATA["Unit Dimensions Text"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="strUnitDimValue">
			<Description><![CDATA["Unit Dimensions Value"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["0.000x0.000"]]></Value>
		</String>
		<String Name="strUnitPrefix">
			<Description><![CDATA["Unit Dimensions Name"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Размеры Блока"]]></Value>
		</String>
		<String Name="strEgressDimText">
			<Description><![CDATA["Egress Dimensions Text"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Измеряемое Значение"]]></Value>
		</String>
		<Integer Name="iEgressDimText">
			<Description><![CDATA["Egress Dimensions Text"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="strEgressDimValue">
			<Description><![CDATA["Egress Dimensions Value"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["0.000x0.000"]]></Value>
		</String>
		<String Name="strEgressPrefix">
			<Description><![CDATA["Egress Dimensions Name"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Размеры Прохода"]]></Value>
		</String>
		<String Name="strRevealDimText">
			<Description><![CDATA["Reveal Dimensions Text"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Измеряемое Значение"]]></Value>
		</String>
		<Integer Name="iRevealDimText">
			<Description><![CDATA["Reveal Dimensions Text"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="strRevealDimValue">
			<Description><![CDATA["Reveal Dimension Value"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["0.000x0.000"]]></Value>
		</String>
		<String Name="strRevealPrefix">
			<Description><![CDATA["Reveal Dimensions Name"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Разм. Четверти"]]></Value>
		</String>
		<String Name="GS_Separator">
			<Description><![CDATA["Value Separator"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value><![CDATA["x"]]></Value>
		</String>
		<String Name="strSillText">
			<Description><![CDATA["Sill Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Измеряемое Значение"]]></Value>
		</String>
		<Integer Name="iSillText">
			<Description><![CDATA["Sill Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="strSillValue">
			<Description><![CDATA["Sill Height Value"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="strShowSillTo">
			<Description><![CDATA["Sill Height Measured to"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Привязка"]]></Value>
		</String>
		<Integer Name="iShowSillTo">
			<Description><![CDATA["Sill Height Measured to"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="strSillPrefix">
			<Description><![CDATA["Sill Height Name"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["H отлива"]]></Value>
		</String>
		<Boolean Name="bSillNominal">
			<Description><![CDATA["Nominal Sill Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<String Name="strThresholdText">
			<Description><![CDATA["Threshold Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Измеряемое Значение"]]></Value>
		</String>
		<Integer Name="iThresholdText">
			<Description><![CDATA["Threshold Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="strThresholdValue">
			<Description><![CDATA["Threshold Height Value"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["0"]]></Value>
		</String>
		<String Name="strThresholdPrefix">
			<Description><![CDATA["Threshold Height Name"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["H порога"]]></Value>
		</String>
		<String Name="strFireText">
			<Description><![CDATA["Fire Rating"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Автоматически"]]></Value>
		</String>
		<Integer Name="iFireText">
			<Description><![CDATA["Fire Rating"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="strFireValue">
			<Description><![CDATA["Fire Rating Value"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="strFirePrefix">
			<Description><![CDATA["Fire Rating Name"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["ОС"]]></Value>
		</String>
		<String Name="strAcousticText">
			<Description><![CDATA["Acoustic Rating"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Автоматически"]]></Value>
		</String>
		<Integer Name="iAcousticText">
			<Description><![CDATA["Acoustic Rating"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="strAcousticValue">
			<Description><![CDATA["Acoustic Rating Value"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="strAcousticPrefix">
			<Description><![CDATA["Acoustic Rating Names"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["ШЗ"]]></Value>
		</String>
		<String Name="strUValueText">
			<Description><![CDATA["U-value Text"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Автоматически"]]></Value>
		</String>
		<Integer Name="iUValueText">
			<Description><![CDATA["U-value Text"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="strUValueValue">
			<Description><![CDATA["U-value"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="strUValuePrefix">
			<Description><![CDATA["U-value Names"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["U "]]></Value>
		</String>
		<String Name="strMaterialText">
			<Description><![CDATA["Material"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Дерево"]]></Value>
		</String>
		<Integer Name="iMaterialText">
			<Description><![CDATA["Material"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="strMaterialValue">
			<Description><![CDATA["Material Value"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Дерево"]]></Value>
		</String>
		<String Name="strMaterialPrefix">
			<Description><![CDATA["Material Name"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Материал"]]></Value>
		</String>
		<String Name="strHardwareText">
			<Description><![CDATA["Hardware Set"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Автоматически"]]></Value>
		</String>
		<Integer Name="iHardwareText">
			<Description><![CDATA["Hardware Set"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="strHardwareValue">
			<Description><![CDATA["Hardware Set Value"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="strHardwarePrefix">
			<Description><![CDATA["Hardware Set Name"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Фурнитура"]]></Value>
		</String>
		<String Name="strCust1Prefix">
			<Description><![CDATA["Custom Text 1 Name"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="strCust1Value">
			<Description><![CDATA["Custom Text 1 Value"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="strCust2Prefix">
			<Description><![CDATA["Custom Text 2 Name"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="strCust2Value">
			<Description><![CDATA["Custom Text 2 Value"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="strHandlePrefix">
			<Description><![CDATA["Handle Name"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Ручка"]]></Value>
		</String>
		<String Name="strHandleValue">
			<Description><![CDATA["Handle Value"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="strCustPrefix">
			<Description><![CDATA["Custom Text Name"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="strCustValue">
			<Description><![CDATA["Custom Text Value"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>

		<!-- dwstamp_text: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="dwstamp_text">
			<Description><![CDATA["Text"]]></Description>
		</Title>
		<Boolean Name="GS_UniTextFormat">
			<Description><![CDATA["Uniform Texts"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<String Name="strIDAlignment">
			<Description><![CDATA["ID Text Alignment"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["По Левому Краю"]]></Value>
		</String>
		<Integer Name="iIDAlignment">
			<Description><![CDATA["ID Text Alignment"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="AC_TextFont_1">
			<Description><![CDATA["ID Font Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="fontType">
			<Description><![CDATA["ID Font Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<RealNum Name="AC_TextSize_1">
			<Description><![CDATA["ID Font Height"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<RealNum Name="TextSize_1_mm">
			<Description><![CDATA["ID Font Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<RealNum Name="TextSize_1_pt">
			<Description><![CDATA["ID Font Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<PenColor Name="AC_TextPen_1">
			<Description><![CDATA["ID Text Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>7</Value>
		</PenColor>
		<Integer Name="AC_TextStyle_1">
			<Description><![CDATA["ID Text Style"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="bBoldIDText">
			<Description><![CDATA["ID Text Bold"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="bItalicIDText">
			<Description><![CDATA["ID Text Italic"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bUnderIDText">
			<Description><![CDATA["ID Text Underline"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<String Name="strBoxAlignment">
			<Description><![CDATA["Detail Box Text Alignment"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["По Левому Краю"]]></Value>
		</String>
		<Integer Name="iBoxAlignment">
			<Description><![CDATA["Detail Box Text Alignment"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="AC_TextFont_2">
			<Description><![CDATA["Detail Box Font Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Arial"]]></Value>
		</String>
		<RealNum Name="AC_TextSize_2">
			<Description><![CDATA["Detail Box Font Height"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</RealNum>
		<RealNum Name="TextSize_2_pt">
			<Description><![CDATA["Detail Box Font Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>5.66929133858</Value>
		</RealNum>
		<PenColor Name="AC_TextPen_2">
			<Description><![CDATA["Detail Box Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>7</Value>
		</PenColor>
		<Integer Name="AC_TextStyle_2">
			<Description><![CDATA["Detail Box Text Style"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Boolean Name="bBoldDetailText">
			<Description><![CDATA["Detail Box Bold"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bItalicDetailText">
			<Description><![CDATA["Detail Box Italic"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bUnderDetailText">
			<Description><![CDATA["Detail Box Underline"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<String Name="strAlignment">
			<Description><![CDATA["Text Alignment"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["По Левому Краю"]]></Value>
		</String>
		<Integer Name="iAlignment">
			<Description><![CDATA["Text Alignment"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="fontType2">
			<Description><![CDATA["Font Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Arial"]]></Value>
		</String>
		<RealNum Name="TextSize_U_mm">
			<Description><![CDATA["Font Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</RealNum>
		<RealNum Name="TextSize_U_pt">
			<Description><![CDATA["Font Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>5.66929133858</Value>
		</RealNum>
		<PenColor Name="TextPen_U">
			<Description><![CDATA["Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</PenColor>
		<Integer Name="TextStyle_U">
			<Description><![CDATA["Text Style"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Boolean Name="bBoldText">
			<Description><![CDATA["Bold"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bItalicText">
			<Description><![CDATA["Italic"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bUnderText">
			<Description><![CDATA["Underline"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- dwstamp_appearance: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="dwstamp_appearance">
			<Description><![CDATA["Appearance"]]></Description>
		</Title>
		<String Name="strFrameStyle">
			<Description><![CDATA["Frame Style"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Стиль 4"]]></Value>
		</String>
		<Integer Name="iFrameStyle">
			<Description><![CDATA["Frame Style"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>4</Value>
		</Integer>
		<Integer Name="iWorkUnitLinear">
			<Description><![CDATA["Unit of Size Values"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>10</Value>
		</Integer>
		<Integer Name="iWorkUnitLinearDecimal">
			<Description><![CDATA["Decimal Options"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="iWorkUnitSillHgt">
			<Description><![CDATA["Unit of Sill Height Value"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>10</Value>
		</Integer>
		<Integer Name="iWorkUnitSillHgtDecimal">
			<Description><![CDATA["Decimal Options"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="strStampWidth">
			<Description><![CDATA["Stamp Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Автоматически"]]></Value>
		</String>
		<Integer Name="iStampWidth">
			<Description><![CDATA["Stamp Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<RealNum Name="stampWidth_mm">
			<Description><![CDATA["Stamp Width Value"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>33.2464849447</Value>
		</RealNum>
		<RealNum Name="stampWidth_pt">
			<Description><![CDATA["Stamp Width Value"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>94.2420045678</Value>
		</RealNum>
		<String Name="strIDLineSpacing">
			<Description><![CDATA["ID Line Spacing"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Автоматически"]]></Value>
		</String>
		<Integer Name="iIDLineSpacing">
			<Description><![CDATA["ID Line Spacing"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<RealNum Name="IDLineSpacing_mm">
			<Description><![CDATA["ID Line Spacing Value"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<RealNum Name="IDLineSpacing_pt">
			<Description><![CDATA["ID Line Spacing Value"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="strDetailLineSpacing">
			<Description><![CDATA["Detail Box Line Spacing"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Автоматически"]]></Value>
		</String>
		<Integer Name="iDetailLineSpacing">
			<Description><![CDATA["Detail Box Line Spacing"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<RealNum Name="detailLineSpacing_mm">
			<Description><![CDATA["Detail Box Line Spacing Value"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3.14285714286</Value>
		</RealNum>
		<RealNum Name="detailLineSpacing_pt">
			<Description><![CDATA["Detail Box Line Spacing Value"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>8.9088863892</Value>
		</RealNum>
		<Length Name="markerPositionHor">
			<Description><![CDATA["Horizontal Position"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="markerPositionVert">
			<Description><![CDATA["Vertical Position"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Angle Name="markerAngle">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Angle>

		<!-- dwstamp_2drep: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="dwstamp_2drep">
			<Description><![CDATA["2D Representation"]]></Description>
		</Title>
		<LineType Name="gs_line_type">
			<Description><![CDATA["Line Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</LineType>
		<FillPattern Name="AC_MarkerFill">
			<Description><![CDATA["Fill Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_fill_pen">
			<Description><![CDATA["Fill Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>19</Value>
		</PenColor>
		<PenColor Name="gs_back_pen">
			<Description><![CDATA["Fill Background Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</PenColor>

		<!-- gs_dwg_export_title: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_dwg_export_title">
			<Description><![CDATA["DWG Export"]]></Description>
		</Title>
		<String Name="ac_dwg_block_name">
			<Description><![CDATA["DWG-Export Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Length Name="AC_SILL_TO_ANCHOR_LEVEL">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="AC_SILL_TO_CURR_STORY">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="AC_WIDO_SUBFL_THICKNESS">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="AC_GLOB_ELEVATION">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="AC_WIDO_OVERSIZE_B">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Angle Name="gs_readable_angle">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>90</Value>
		</Angle>
		<String Name="LibraryLangCode">
			<Description><![CDATA[""]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value><![CDATA["RUS"]]></Value>
		</String>

		<!-- TitleAdditionalTags: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="TitleAdditionalTags">
			<Description><![CDATA["Additional Tags"]]></Description>
		</Title>
		<Integer Name="iTnCSelectParams">
			<Description><![CDATA["Select Parameters"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="iTncDisplayData">
			<Description><![CDATA["Display Data by"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="sIDRow1">
			<Description><![CDATA["1. Row"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
				<ParFlg_Hidden/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="iRow1CustomName">
			<Description><![CDATA["1. Row Display Parameter Name as"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="sRow1CustomNameValue">
			<Description><![CDATA["1. Row Custom Name"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="sIDRow2">
			<Description><![CDATA["2. Row"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
				<ParFlg_Hidden/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="iRow2CustomName">
			<Description><![CDATA["2. Row Display Parameter Name as"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="sRow2CustomNameValue">
			<Description><![CDATA["2. Row Custom Name"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="sIDRow3">
			<Description><![CDATA["3. Row"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
				<ParFlg_Hidden/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="iRow3CustomName">
			<Description><![CDATA["3. Row Display Parameter Name as"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="sRow3CustomNameValue">
			<Description><![CDATA["3. Row Custom Name"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="sIDRow4">
			<Description><![CDATA["4. Row"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
				<ParFlg_Hidden/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="iRow4CustomName">
			<Description><![CDATA["4. Row Display Parameter Name as"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="sRow4CustomNameValue">
			<Description><![CDATA["4. Row Custom Name"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="sIDRow5">
			<Description><![CDATA["5. Row"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
				<ParFlg_Hidden/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="iRow5CustomName">
			<Description><![CDATA["5. Row Display Parameter Name as"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="sRow5CustomNameValue">
			<Description><![CDATA["5. Row Custom Name"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="sIDRow6">
			<Description><![CDATA["6. Row"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
				<ParFlg_Hidden/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="iRow6CustomName">
			<Description><![CDATA["6. Row Display Parameter Name as"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="sRow6CustomNameValue">
			<Description><![CDATA["6. Row Custom Name"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="sIDRow7">
			<Description><![CDATA["7. Row"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
				<ParFlg_Hidden/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="iRow7CustomName">
			<Description><![CDATA["7. Row Display Parameter Name as"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="sRow7CustomNameValue">
			<Description><![CDATA["7. Row Custom Name"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="sIDRow8">
			<Description><![CDATA["8. Row"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
				<ParFlg_Hidden/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="iRow8CustomName">
			<Description><![CDATA["8. Row Display Parameter Name as"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="sRow8CustomNameValue">
			<Description><![CDATA["8. Row Custom Name"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="sIDRow9">
			<Description><![CDATA["9. Row"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
				<ParFlg_Hidden/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="iRow9CustomName">
			<Description><![CDATA["9. Row Display Parameter Name as"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="sRow9CustomNameValue">
			<Description><![CDATA["9. Row Custom Name"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="sIDRow10">
			<Description><![CDATA["10. Row"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
				<ParFlg_Hidden/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="iRow10CustomName">
			<Description><![CDATA["10. Row Display Parameter Name as"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="sRow10CustomNameValue">
			<Description><![CDATA["10. Row Custom Name"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="sIDRow11">
			<Description><![CDATA["11. Row"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
				<ParFlg_Hidden/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="iRow11CustomName">
			<Description><![CDATA["11. Row Display Parameter Name as"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="sRow11CustomNameValue">
			<Description><![CDATA["11. Row Custom Name"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="sIDRow12">
			<Description><![CDATA["12. Row"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
				<ParFlg_Hidden/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="iRow12CustomName">
			<Description><![CDATA["12. Row Display Parameter Name as"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="sRow12CustomNameValue">
			<Description><![CDATA["12. Row Custom Name"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="sIDRow13">
			<Description><![CDATA["13. Row"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
				<ParFlg_Hidden/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="iRow13CustomName">
			<Description><![CDATA["13. Row Display Parameter Name as"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="sRow13CustomNameValue">
			<Description><![CDATA["13. Row Custom Name"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="sIDRow14">
			<Description><![CDATA["14. Row"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
				<ParFlg_Hidden/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="iRow14CustomName">
			<Description><![CDATA["14. Row Display Parameter Name as"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="sRow14CustomNameValue">
			<Description><![CDATA["14. Row Custom Name"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="sIDRow15">
			<Description><![CDATA["15. Row"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
				<ParFlg_Hidden/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="iRow15CustomName">
			<Description><![CDATA["15. Row Display Parameter Name as"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="sRow15CustomNameValue">
			<Description><![CDATA["15. Row Custom Name"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="sIDRow16">
			<Description><![CDATA["16. Row"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
				<ParFlg_Hidden/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="iRow16CustomName">
			<Description><![CDATA["16. Row Display Parameter Name as"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="sRow16CustomNameValue">
			<Description><![CDATA["16. Row Custom Name"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="sIDRow17">
			<Description><![CDATA["17. Row"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
				<ParFlg_Hidden/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="iRow17CustomName">
			<Description><![CDATA["17. Row Display Parameter Name as"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="sRow17CustomNameValue">
			<Description><![CDATA["17. Row Custom Name"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="sIDRow18">
			<Description><![CDATA["18. Row"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
				<ParFlg_Hidden/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="iRow18CustomName">
			<Description><![CDATA["18. Row Display Parameter Name as"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="sRow18CustomNameValue">
			<Description><![CDATA["18. Row Custom Name"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="sIDRow19">
			<Description><![CDATA["19. Row"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
				<ParFlg_Hidden/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="iRow19CustomName">
			<Description><![CDATA["19. Row Display Parameter Name as"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="sRow19CustomNameValue">
			<Description><![CDATA["19. Row Custom Name"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="sIDRow20">
			<Description><![CDATA["20. Row"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
				<ParFlg_Hidden/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<Integer Name="iRow20CustomName">
			<Description><![CDATA["20. Row Display Parameter Name as"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<String Name="sRow20CustomNameValue">
			<Description><![CDATA["20. Row Custom Name"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
	</Parameters>
</ParamSection>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="1" length_in_bytes="384" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000B10000
	002608060000008B4A7A3E0000013D4944415478DAEDD9C10D83300C4661EFBF
	1D8803023101B043E515ECA83F76DEE1CB31E815AB29C5DEF7054A9BFE03407D
	F63C4F8899DD0A7EED205A9BB6A662CFF3B47F4AC6D2FAD15686981B3B7D2B47
	2CAD2D7E4E00720C3118E2880647A7A3BF41BFDDF71D31F401C0F7F23D05E8AF
	DFCF10D33FF9108F22BC89F437E8F705906388C1100B8E13C5B1436BF156FD83
	9DFE0180D6A6AD765D57842CD6AF1D446BD3D654AC402696D6A6ADBE00A5F9D7
	39509A1DC71131FCD8F13D05E86FD06FFBBE470C7FEDE87B0AD05FBF9F21A67F
	F2211E457813E96FD06FDBB6019531C4987788657F8A2762696DDA9A8815BC9E
	CCC5D2DAB4D5D6758D90C5FAB583686DDA9A8A15C8C4D2DAB4D517408E210643
	1CD1E0E874F437E84F45147F8871F47FA09F21E6264EDF6FCBB2440C3F4E7C4F
	01FA1BF4FB02C831C498DA0FB702FCE4D5710FAE0000000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="2" length_in_bytes="394" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000000EC0000
	00260803000000F07E87F400000021504C5445000000DBDBDBEBEBEBD2D2D2EC
	ECECD1D1D1D4D4D4EDEDEDD8D8D8DDDDDDDADADA4AE5C2790000000B74524E53
	D1000000000000000000005FC99184000001034944415478DAE593C18AC5300C
	03D5A4ED36FDFF0F5E7249210F0FF86834E4369640D0EACF08AFB1E7A9909365
	B9E87C47804E96B5A26E63CD3E631BFCC66AE7B328F10CA289E274074BB5A6FD
	4F6E0B947806D14471BA83A5DDD89DB6408967104D14A73B58AAD9E03756218D
	65B9E87C47801ACB72518D11EBC1B25C74BE90C1B25C54C3081D46E87DB5F32E
	50E2194413C5E90E967A1EEDFB9F054A3C8368A238DDC1D26EECCE1740896710
	4D14A73B58EA36C26DAC426E96E5A2F31D01BA59968BAAF7587796E5A2F38574
	96E5A2EA36F88DD5CE6751E2194413C5E90E96F3FDFCC90B947806D14471B683
	A4DDD8EBD2CEB5408967104D14A73B58EAB2C16CEC3FD7225F193416734B0000
	000049454E44AE426082
	]]>
</GDLPict>

<GDLPict MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="3" length_in_bytes="602" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D49484452000001C00000
	004E08030000008036365D00000033504C5445F2F2F2D1D1D1EDEDEDEFEFEFDB
	DBDBDADADAEBEBEBECECECD2D2D2DDDDDDF0F0F0D4D4D4D8D8D8F1F1F1DBDBDB
	000000FFFFFF003730900000000E74524E530000000000000000000000000000
	AAE86E57000001BE4944415478DAEDDDC14E83401485E10A21AC88BEFF5BEA8E
	1044BB302E34A59D5B7A19FA9D2DF907E2C9B9438F93B63951D56AFC09AA37F0
	2DA0F312AF01E1A3BC04D69EC06188E0C370E65F0A858FF312587B02E73982CF
	333E9797401F23681F067EDEA4BF2BE1537809344229D5C0718CE0E388CFE525
	D0082506D21D0C6C6ED23F2BE1337809344229D5C06589E0CB720F7E29147E59
	24D0088DABFC1F9A113ABEC215CFBF7231CE4BE0511278B131BFA24EC7E7F012
	680F240652B9815D17C1BB0E9FCB3717AAB88B3DDD15551EFE01BC116A0FAC5F
	E555D6E6F75FB9C840093C82A255DA86F757A51D3E813F93BCACCAF9DD09F039
	BC04DA038981C4C0A7375095A54AA38C04B66D046FDB23F0E555DAE6F75FB9D8
	B612E8254695A64AA378029D0A732A8D3212384D117C9AF0B9BC047A0B25551A
	5E9566843EB19C4AA3BC04C60AA168A1B40FBEBC4ADBFCFEAB172550958657A5
	91B75006120329C1C0BE8F54397D8FCFE525D00855A5A556697BF8B23B7C392F
	8127A7D24895862FAED2FC7A58DDBC11EA63043190E2063A15E6541AD53A42A3
	55D48EABACE8F3AF5661E12ACDCFBFD5CD7F27F03DA0F3221F01DD83AFFDF963
	BC3DB0727D015EB0DF11E8B0906B0000000049454E44AE426082
	]]>
</GDLPict>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Comment SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Comment>

<Copyright SectVersion="1" SectionFlags="0" SubIdent="0">
	<Author>GRAPHISOFT</Author>
	<License>
		<Type>CC BY-ND</Type>
		<Version>3.0</Version>
	</License>
</Copyright>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_FWM SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_FWM>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_BWM SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_BWM>

<Keywords SectVersion="1" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Keywords>

</Symbol>
