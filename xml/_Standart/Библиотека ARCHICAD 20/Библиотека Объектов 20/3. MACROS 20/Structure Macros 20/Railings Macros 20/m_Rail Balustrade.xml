<?xml version="1.0" encoding="UTF-8"?>
<Symbol IsArchivable="true" IsPlaceable="false" MainGUID="38718C0A-9208-4838-8EBD-E7BFA3109673" MigrationValue="Normal" Owner="1196638531" Signature="1196644685" Version="43">
<Ancestry SectVersion="1" SectionFlags="0" SubIdent="0" Template="false">
	<MainGUID>F938E33A-329D-4A36-BE3E-85E126820996</MainGUID>
	<MainGUID>103E8D2C-8230-42E1-9597-46F84CCE28C0</MainGUID>
	<MainGUID>784EAEA1-5041-4AA6-B6F4-EF263A891EE7</MainGUID>
	<MainGUID>09BEB35E-7BF8-448C-B408-AC04D159B0D1</MainGUID>
</Ancestry>

<ParamSection SectVersion="22" SectionFlags="0" SubIdent="0">
	<ParamSectHeader>
		<AutoHotspots>false</AutoHotspots>
		<StatBits>
			<STBit_FixSize/>
		</StatBits>
		<WDLeftFrame>0</WDLeftFrame>
		<WDRightFrame>0</WDRightFrame>
		<WDTopFrame>0</WDTopFrame>
		<WDBotFrame>0</WDBotFrame>
		<LayFlags>65535</LayFlags>
		<WDMirrorThickness>0</WDMirrorThickness>
		<WDWallInset>0</WDWallInset>
	</ParamSectHeader>
	<Parameters>
		<Length Name="A">
			<Description><![CDATA["Dimension 1"]]></Description>
			<Fix/>
			<Value>1.5</Value>
		</Length>
		<Length Name="B">
			<Description><![CDATA["Dimension 2"]]></Description>
			<Fix/>
			<Value>0.05</Value>
		</Length>
		<Length Name="ZZYZX">
			<Description><![CDATA["Height"]]></Description>
			<Fix/>
			<Value>0.9</Value>
		</Length>
		<Integer Name="gs_detlevel_3D_m">
			<Description><![CDATA["3D"]]></Description>
			<Value>2</Value>
		</Integer>
		<Boolean Name="cfs">
			<Description><![CDATA["Called as Macro from Stair"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- RailBalust_sp0: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="RailBalust_sp0">
			<Description><![CDATA["General Dimensions"]]></Description>
		</Title>
		<Integer Name="ptyp_m">
			<Description><![CDATA["Rail and Parameter Input Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Angle Name="ani">
			<Description><![CDATA["Inclination Angle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Integer Name="rom_m">
			<Description><![CDATA["Rail Orientation Method"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="rmm_m">
			<Description><![CDATA["Rail Measurement Method"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="lra">
			<Description><![CDATA["Horizontal Length of Railing"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1.5</Value>
		</Length>
		<Length Name="lrah">
			<Description><![CDATA["Length of Railing"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1.5</Value>
		</Length>
		<Length Name="hr">
			<Description><![CDATA["Height of Railing"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.75</Value>
		</Length>
		<Length Name="hrPerp">
			<Description><![CDATA["Height of Railing"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.75</Value>
		</Length>
		<Angle Name="ab">
			<Description><![CDATA["Angle of Bending"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>90</Value>
		</Angle>
		<Length Name="rb">
			<Description><![CDATA["Radius of Bending"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="ds">
			<Description><![CDATA["Distance from Slab/Stair"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.15</Value>
		</Length>
		<Length Name="dsPerp">
			<Description><![CDATA["Distance from Slab/Stair"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.15</Value>
		</Length>
		<Angle Name="gs_AngleL">
			<Description><![CDATA["Left End Cutting Angle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>90</Value>
		</Angle>
		<Angle Name="gs_AngleR">
			<Description><![CDATA["Right End Cutting Angle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>90</Value>
		</Angle>

		<!-- structural_dims: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="structural_dims">
			<Description><![CDATA["Structural Dimensions"]]></Description>
		</Title>
		<Integer Name="gs_frameStyle_m">
			<Description><![CDATA["Frame Style"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="gs_frameDiameter">
			<Description><![CDATA["Frame Diameter"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.06</Value>
		</Length>
		<Length Name="fth">
			<Description><![CDATA["Frame Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="fsw">
			<Description><![CDATA["Frame Width Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Length Name="fswPerp">
			<Description><![CDATA["Frame Width Side"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.1</Value>
		</Length>
		<Length Name="ftw">
			<Description><![CDATA["Frame Width Top"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="ftwPerp">
			<Description><![CDATA["Frame Width Top"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="fbw">
			<Description><![CDATA["Frame Width Bottom"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="fbwPerp">
			<Description><![CDATA["Frame Width Bottom"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Integer Name="gs_balusterStyle_m">
			<Description><![CDATA["Baluster Style"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="gs_balusterDiameter">
			<Description><![CDATA["Baluster Diameter"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.015</Value>
		</Length>
		<Length Name="bw">
			<Description><![CDATA["Baluster Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.025</Value>
		</Length>
		<Length Name="bth">
			<Description><![CDATA["Baluster Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.025</Value>
		</Length>
		<Length Name="abdist">
			<Description><![CDATA["Approx. Dist. between Balusters"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.15</Value>
		</Length>

		<!-- gs_3D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_3D_representation">
			<Description><![CDATA["3D Representation"]]></Description>
		</Title>
		<Integer Name="res">
			<Description><![CDATA["Rail Arc Resolution"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>32</Value>
		</Integer>
		<Integer Name="rescs">
			<Description><![CDATA["Cross Section Resolution"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>12</Value>
		</Integer>
		<Boolean Name="gs_shadow">
			<Description><![CDATA["Shadow"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="AC_show2DHotspotsIn3D">
			<Description><![CDATA["Show 2D Hotspots in 3D"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="ac_bottomlevel">
			<Description><![CDATA["Bottom Level"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="ac_toplevel">
			<Description><![CDATA["Top Level"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>

		<!-- gs_2D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_2D_representation">
			<Description><![CDATA["2D Representation"]]></Description>
			<Fix/>
		</Title>
		<PenColor Name="gs_cont_pen">
			<Description><![CDATA["Contour Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</PenColor>
		<FillPattern Name="gs_fill_type">
			<Description><![CDATA["Fill Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_fill_pen">
			<Description><![CDATA["Fill Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>91</Value>
		</PenColor>
		<PenColor Name="gs_back_pen">
			<Description><![CDATA["Fill Background Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>91</Value>
		</PenColor>
		<Boolean Name="sa">
			<Description><![CDATA["Show Axis"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<LineType Name="al">
			<Description><![CDATA["Axis Line Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>6</Value>
		</LineType>
		<PenColor Name="gs_RailAxisPen">
			<Description><![CDATA["Axis Line Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>16</Value>
		</PenColor>

		<!-- RailBalust_sp2: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="RailBalust_sp2">
			<Description><![CDATA["Surfaces"]]></Description>
		</Title>
		<Material Name="fmat">
			<Description><![CDATA["Frame"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="bmat">
			<Description><![CDATA["Baluster"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>

		<!-- gs_list: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_list">
			<Description><![CDATA["Parameters for Listing"]]></Description>
			<Fix/>
		</Title>
		<RealNum Name="gs_list_cost">
			<Description><![CDATA["Cost"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="gs_list_manufacturer">
			<Description><![CDATA["Manufacturer"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_note">
			<Description><![CDATA["Note/Remarks"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_location">
			<Description><![CDATA["Location"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_accessories">
			<Description><![CDATA["Accessories"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_Type">
			<Description><![CDATA["Group Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Другой"]]></Value>
		</String>
		<Integer Name="iFMType">
			<Description><![CDATA["Group Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>25</Value>
		</Integer>
		<String Name="FM_InventoryNumber">
			<Description><![CDATA["Inventory No."]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_SerialNumber">
			<Description><![CDATA["Serial No."]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_ProductionYear">
			<Description><![CDATA["Production Year"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<RealNum Name="FM_ObjectWeight">
			<Description><![CDATA["Object Weight"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="FM_ObjectWeightUnit">
			<Description><![CDATA["Object Weight Unit"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["кг"]]></Value>
		</String>
		<String Name="gs_list_custom1">
			<Description><![CDATA["User Defined 1"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom2">
			<Description><![CDATA["User Defined 2"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom3">
			<Description><![CDATA["User Defined 3"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom4">
			<Description><![CDATA["User Defined 4"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom5">
			<Description><![CDATA["User Defined 5"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
	</Parameters>
</ParamSection>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_VL SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
! GENERAL PARAMETERS
values "gs_detlevel_3D_m" 2,1,0		! Detailed, Simple, Off

! GENERAL RAIL GEOMETRY PARAMETERS
values "ptyp_m" 1,2,3				! Straight, Curve Length and Radius, Angle and Radius


IF ptyp_m<>1 OR ABS(ani)<EPS  THEN
	VALUES "rom_m" 1
	VALUES "rmm_m" 1
ELSE
	VALUES "rom_m"  1,2
	IF rom_m=2 then
		VALUES "rmm_m" 2
	ELSE
		VALUES "rmm_m" 1,2
	ENDIF
ENDIF


VALUES "a" lra
VALUES "zzyzx" ds+hr

IF ptyp_m<>1 then
	VALUES "b" fth
	lock "a","b","zzyzx"
ELSE
	IF GLOB_MODPAR_NAME = "B" THEN PARAMETERS fth=B
	IF GLOB_MODPAR_NAME = "fth" THEN PARAMETERS B=fth
	lock "a","zzyzx"
ENDIF

IF ptyp_m<>1 OR rom_m<>1 THEN
	LOCK "gs_AngleL"
	LOCK "gs_AngleR"
ENDIF

if ptyp_m=1 then	!ptyp=Straight
	hideparameter "ab"
	hideparameter "rb"
	hideparameter "res"
endif

if ptyp_m=2 then	!ptyp=Curve Length and Radius
	if abs(rb)>EPS then
		parameters ab=(lra*180)/(rb*pi)
		lock "ab"
	endif
endif

if ptyp_m=3 then	!ptyp=Angle and Radius
	parameters lra=(rb*pi*ab)/180
	lock "lra"
endif

if gs_cont_pen=0 then parameters gs_cont_pen=2
if gs_fill_pen=0 then parameters gs_fill_pen=91

VALUES "lra" range(2*fsw,)
VALUES "lrah" range(2*fsw,)
VALUES "hr" range(ftw+fbw,)
VALUES "B" range(0,)
VALUES "ani" range(-90, 0), range (0, 90)
VALUES "fth" range(0,)
VALUES "fsw" range(0,lra/2-0.01]
VALUES "fswPerp" range(0,(lra/2-0.01)/cos(ani)]
VALUES "ftw" range(0,hr-fbw-0.01]
VALUES "ftwPerp" range(0,(hr-fbw-0.01)/cos(ani)]
VALUES "fbw" range(0,hr-ftw-0.01]
VALUES "fbwPerp" range(0,(hr-ftw-0.01)/cos(ani)]
VALUES "bw" range(0,)
VALUES "bth" range(0,)
VALUES "abdist" range[0,)
!VALUES "gs_AngleL" 	range[1,179]
!VALUES "gs_AngleR" 	range[1,179]
VALUES "gs_AngleL" 	range(0,180)
VALUES "gs_AngleR" 	range(0,180)
VALUES "res" range[3,)
VALUES "rescs" RANGE[3,)

if gs_frameStyle_m = 1 and gs_balusterStyle_m = 1 then
	lock			"rescs"
	hideparameter	"rescs"
endif

IF ABS(ani)<EPS THEN
	VALUES "ab" RANGE ((2*fsw*180)/(rb*pi),360]
	LOCK "rom_m","rmm_m"
ELSE
	VALUES "ab" RANGE ((2*fsw*180)/(rb*pi),)
ENDIF

! Distance from Slab/Stair
if GLOB_MODPAR_NAME = "dsPerp" then
	ds = dsPerp * cos(ani)
	parameters ds = ds
else
	dsPerp = ds / cos(ani)
	parameters dsPerp = dsPerp
endif

! Height of Railing
if GLOB_MODPAR_NAME = "hrPerp" then
	hr = hrPerp * cos(ani)
	parameters hr = hr
else
	hrPerp = hr / cos(ani)
	parameters hrPerp = hrPerp
endif

! Frame Width Bottom
if GLOB_MODPAR_NAME = "fbwPerp" then
	fbw = fbwPerp * cos(ani)
	parameters fbw = fbw
else
	fbwPerp = fbw / cos(ani)
	parameters fbwPerp = fbwPerp
endif

! Frame Width Top
if GLOB_MODPAR_NAME = "ftwPerp" then
	ftw = ftwPerp * cos(ani)
	parameters ftw = ftw
else
	ftwPerp = ftw / cos(ani)
	parameters ftwPerp = ftwPerp
endif

! Frame Width Side
if GLOB_MODPAR_NAME = "fswPerp" then
	fsw = fswPerp * cos(ani)
	parameters fsw = fsw
else
	fswPerp = fsw / cos(ani)
	parameters fswPerp = fswPerp
endif
]]>
</Script_VL>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_3D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
if gs_detlevel_3D_m=0 then end
if not(gs_shadow) then SHADOW OFF

IF ABS(lra)<EPS THEN END

pen gs_cont_pen
unID=1

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** SIMPLE 3D *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

!!!CALCULATION FOR CONNECTING ANGLE

XPosL0=(fth/2)/tan(gs_AngleL)
XPosR0=(fth/2)/tan(gs_AngleR)

if gs_frameStyle_m = 2 then
	if abs (gs_AngleL - 90) > EPS then
		XPosL = gs_frameDiameter / 2
	else
		XPosL = 0
	endif
	if abs (gs_AngleR - 90) > EPS then
		XPosR = gs_frameDiameter / 2
	else
		XPosR = 0
	endif
else
XPosL=ABS((fth/2)/tan(gs_AngleL))
XPosR=ABS((fth/2)/tan(gs_AngleR))
endif

YPosL=(XPosL*tan(ani))
YPosR=(XPosR*tan(ani))

IF gs_detlevel_3D_m=1 THEN		!!Simple

	resol res

	MATERIAL fmat

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** STRAIGHT *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

	IF ABS(ani)<EPS and ptyp_m=1 THEN		!!ptyp=Straight

		ADDz ds

			PRISM_ 5,hr,
				XPosL0,fth/2,15,
				-XPosL0,-fth/2,15,
				lra+XPosR0,-fth/2,15,
				lra-XPosR0,fth/2,15,
				XPosL0,fth/2,-1

			gosub 1000
		DEL 1
	ENDIF

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** STRAIGHT CURVED *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

	IF ABS(ani)<EPS and ptyp_m<>1 THEN

		!FRAME
		MATERIAL fmat

		IF ab<360 THEN
				ADDz ds
				PRISM_ 10,hr,
					0,fth/2,15,
					0,-fth/2+0.00005,15,
					0,-fth/2,79,
					1,0,800,
					(rb+(fth/2))*sin(ab),rb-(rb+(fth/2))*cos(ab),1015,
					(rb-(fth/2)+0.00005)*sin(ab),rb-(rb-(fth/2)+0.00005)*cos(ab),15,
					(rb-(fth/2))*sin(ab),rb-(rb-(fth/2))*cos(ab),79,
					-cos(ab),-sin(ab),800,
					0,fth/2,1015,
					0,fth/2,-1

				gosub 1000

				DEL 1

		ELSE	!!!ANGLE=360

			ADDz ds

				PRISM_ 12,hr,
					0,-fth/2,79,
					1,0,800,
					0,2*rb+fth/2,1079,
					-1,0,800,
					0,-fth/2,1079,
					0,-fth/2,-1,

					0,fth/2,79,
					1,0,800,
					0,2*rb-fth/2,1079,
					-1,0,800,
					0,fth/2,1079,
					0,fth/2,-1

				gosub 1000

			DEL 1

		ENDIF
	ENDIF

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** STRAIGHT INCLINED *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

	IF ABS(ani)>EPS and ptyp_m=1 THEN	!ptyp=Straight
		IF rom_m=1 THEN					!Vertical Orientation

				IF rmm_m=1 THEN			!Vertical Measurement
					temp_ds=ds
					temp_hr=hr
				ELSE					!Perpendicular Measurement
					temp_ds=dsPerp
					temp_hr=hrPerp
				ENDIF

				ROTz -90+gs_AngleL		! CONNECTING ANGLE
				ROTy -90
					CUTPLANE
				DEL 2

				ADDx lra
				ROTz 90-gs_AngleR
				ROTy 90
					CUTPLANE
				DEL 3


					ROTx 90
					ADDz -fth/2

						PRISM_ 5,fth,
							-XPosL,temp_ds-YPosL,15,
							lra+XPosR,temp_ds+lra*tan(ani)+YPosR,15,
							lra+XPosR,temp_ds+temp_hr+lra*tan(ani)+YPosR,15,
							-XPosL,temp_ds+temp_hr-YPosL,15,
							-XPosL,temp_ds-YPosL,-1

						gosub 1000

					DEL 2

				CUTEND
				CUTEND

		ELSE						!Perpendicular Orientation
									!Measurement is always perpendicular to inclination in this case

			ROTy -ani

				ROTx 90
				ADDz -fth/2
				!FRAME
				MATERIAL fmat
				PRISM_ 5,fth,
					0,ds,15,
					lrah,ds,15,
					lrah,ds+hr,15,
					0,ds+hr,15,
					0,ds,-1

					gosub 1000

				DEL 2

			DEL 1

		ENDIF
	ENDIF


!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** INCLINED AND CURVED *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!

	IF ABS(ani)>EPS and ptyp_m<>1 THEN

		!FRAME
		MATERIAL fmat

		alphai=-alphaincl
		DELtazi=-DELtazincl
		for i=1 to nalphaincl+3
			put rb*sin(alphai),rb-rb*cos(alphai),ds+DELtazi
			alphai=alphai+alphaincl
			DELtazi=DELtazi+DELtazincl
		next i

		TUBEA 5,nalphaincl+3,1+2+16+32,
				-fth/2,0,0,
				fth/2,0,0,
				fth/2,hr,0,
				-fth/2,hr,0,
				-fth/2,0,-1,
				get (nsp)

		gosub 1000

	ENDIF
ENDIF		!!END of SIMPLE 3D!!


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** DETAILED 3D *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

if gs_detlevel_3D_m=2 then

	if cfs then resol res else resol rescs

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** STRAIGHT *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

	if ABS(ani)<EPS and ptyp_m=1 then			!ptyp=Straight

		!3D FEEDBACK AT HOTSPOT EDITING
		IF GLOB_CONTEXT>20 and GLOB_CONTEXT<40 THEN

			ADDz ds
			MATERIAL fmat
			PRISM_ 5,hr,
					XPosL0,fth/2,15,
					-XPosL0,-fth/2,15,
					lra+XPosR0,-fth/2,15,
					lra-XPosR0,fth/2,15,
					XPosL0,fth/2,-1
			DEL 1

		ELSE	! 3D DETAILED MODEL

			MATERIAL fmat

			ROTz -90+gs_AngleL		!! CONNECTING ANGLE
			ROTy -90
				CUTPLANE
			DEL 2

			ADDx lra
			ROTz 90-gs_AngleR
			ROTy 90
				CUTPLANE
			DEL 3

				rotx 90
			! FRAME

			if gs_frameStyle_m = 2 then
				tube 2, 7, 1+2,
					0, 0, 900,
					gs_frameDiameter/2, 360, 4001,

					-XPosL + gs_frameDiameter/2,		ds + hr - gs_frameDiameter/2,	0, 0,
					-XPosL + gs_frameDiameter/2,		ds + gs_frameDiameter/2,		0, 0,
					lra + XPosR - gs_frameDiameter/2,	ds + gs_frameDiameter/2,		0, 0,
					lra + XPosR - gs_frameDiameter/2,	ds + hr - gs_frameDiameter/2,	0, 0,
					-XPosL + gs_frameDiameter/2,		ds + hr - gs_frameDiameter/2,	0, 0,
					-XPosL + gs_frameDiameter/2,		ds + gs_frameDiameter/2,		0, 0,
					lra + XPosR - gs_frameDiameter/2,	ds + gs_frameDiameter/2,		0, 0
			else
				addz -fth/2
				MATERIAL fmat
				prism_ 10,fth,
						-XPosL,ds,15,
						lra+XPosR,ds,15,
						lra+XPosR,ds+hr,15,
						-XPosL,ds+hr,15,
						-XPosL,ds,-1,
						fsw,ds+fbw,15,
						lra-fsw,ds+fbw,15,
						lra-fsw,ds+hr-ftw,15,
						fsw,ds+hr-ftw,15,
						fsw,ds+fbw,-1

				gosub 1000
				del 1
			endif
			del 1

			CUTEND
			CUTEND

			MATERIAL bmat

			ROTz -90+gs_AngleL		!! CONNECTING ANGLE
			ROTy -90
				CUTPLANE
			DEL 2

			ADDx lra
			ROTz 90-gs_AngleR
			ROTy 90
				CUTPLANE
			DEL 3

				rotx 90
				addz -fth/2

					!!! *** BALUSTERS
					MATERIAL bmat
					add fsw+bdist,ds+fbw,(fth-bth)/2
					for i=1 to bn step 1
				if gs_balusterStyle_m = 2 then
					rotx -90
					addy -gs_balusterDiameter/2
					cylind hr-ftw-fbw, gs_balusterDiameter/2
					del 2
				else
						block bw,hr-ftw-fbw,bth
				endif
						gosub 1000
						addx bdist+bw
					next i
					DEL bn+1
				del 2

			CUTEND
			CUTEND
		ENDIF
	ENDIF


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** STRAIGHT CURVED *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

	if ABS(ani)<EPS and ptyp_m<>1 then		!ptyp=Straight

		!!3D FEEDBACK AT HOTSPOT EDITING
		IF GLOB_CONTEXT>20 and GLOB_CONTEXT<40 THEN
			resol res

			!!!!FRAME
			MATERIAL fmat

				IF ab<360 THEN
						ADDz ds
						PRISM_ 10,hr,
							0,fth/2,15,
							0,-fth/2+0.00005,15,
							0,-fth/2,79,
							1,0,800,
							(rb+(fth/2))*sin(ab),rb-(rb+(fth/2))*cos(ab),1015,
							(rb-(fth/2)+0.00005)*sin(ab),rb-(rb-(fth/2)+0.00005)*cos(ab),15,
							(rb-(fth/2))*sin(ab),rb-(rb-(fth/2))*cos(ab),79,
							-cos(ab),-sin(ab),800,
							0,fth/2,1015,
							0,fth/2,-1

						gosub 1000
						DEL 1

				ELSE	!!!ANGLE=360

					ADDz ds
					PRISM_ 12,hr,
							0,-fth/2,79,
							1,0,800,
							0,2*rb+fth/2,1079,
							-1,0,800,
							0,-fth/2,1079,
							0,-fth/2,-1,

							0,fth/2,79,
							1,0,800,
							0,2*rb-fth/2,1079,
							-1,0,800,
							0,fth/2,1079,
							0,fth/2,-1

						gosub 1000

					DEL 1

				ENDIF

		ELSE

			!FRAME
			material fmat

			if ab<360 then

				if gs_frameStyle_m = 2 then		! Rounded Frame

					startAngle = asn ((gs_frameDiameter/2) / rb)
					add 0, rb, ds + gs_frameDiameter/2
					betaincl = (ab - 2 * startAngle) / nalphaincl

					actAngle = startAngle
					put rb * sin (actAngle), -rb * cos (actAngle), hr - gs_frameDiameter, 0

					for i = 1 to nalphaincl + 1
						put rb * sin (actAngle), -rb * cos (actAngle), 0, 0
						actAngle = actAngle + betaincl
					next i
					actAngle = actAngle - betaincl

					for i = 1 to nalphaincl + 1
						put rb * sin (actAngle), -rb * cos (actAngle), hr - gs_frameDiameter, 0
						actAngle = actAngle - betaincl
					next i
					actAngle = actAngle + betaincl

					for i = 1 to 2
						put rb * sin (actAngle), -rb * cos (actAngle), 0, 0
						actAngle = actAngle + betaincl
					next i

					tube 2, nsp/4, 1+2,
						0, 0, 900,
						gs_frameDiameter/2, 360, 4000,
						get (nsp)

					del 1
				else
					resol res

					temp_rb=((rb-fth/2)*pi*ab)/180

					ADDz ds
					ADDy fth/2
					ROTx 90
					BPRISM_ fmat,fmat,fmat,
						10, fth, rb-fth/2,
						0,0,15,
						temp_rb,0,15,
						temp_rb,hr,15,
						0,hr,15,
						0,0,-1,
						fsw, fbw,15,
						temp_rb-fsw,fbw,15,
						temp_rb-fsw,hr-ftw,15,
						fsw, hr-ftw,15,
						fsw, fbw,-1

						gosub 1000

					DEL 3
				endif

					!BALUSTERS
					MATERIAL bmat
					ADD 0,rb,ds+fbw
					ROTz alphafsw+alphabdist
						for i=1 to bn-1 step 1
					if gs_balusterStyle_m = 2 then
						if cfs then resol res else resol rescs

						add 0, -rb, 0
						cylind hr-ftw-fbw, gs_balusterDiameter/2
						del 1
					else
							PRISM_ 5,hr-ftw-fbw,
								-bw/2,-bth/2-rb,15,
								 bw/2,-bth/2-rb,15,
								 bw/2,bth/2-rb,15,
								-bw/2,bth/2-rb,15,
								-bw/2,-bth/2-rb,-1
					endif
							gosub 1000

						ROTz alphabdist
				next i
					DEL bn+1

			ELSE	!!! ANGLE=360
				if gs_frameStyle_m = 2 then		! Rounded Frame

					addz ds + gs_frameDiameter/2
					alphai = -alphaincl
					for i = 1 to nalphaincl+3
						put rb*sin(alphai), rb-rb*cos(alphai), 0
						alphai = alphai + alphaincl
					next i

					tubea 2, nsp/3, 1+2,
						0, 0, 900,
						gs_frameDiameter/2, 360, 4001,
						use (nsp)

					addz hr - gs_frameDiameter

					tubea 2, nsp/3, 1+2,
						0, 0, 900,
						gs_frameDiameter/2, 360, 4001,
						get (nsp)

					del 2

				else

					resol res

					addz ds
						prism_ 12,fbw,
							0,-fth/2,79,
							1,0,800,
							0,2*rb+fth/2,1079,
							-1,0,800,
							0,-fth/2,1079,
							0,-fth/2,-1,

							0,fth/2,79,
							1,0,800,
							0,2*rb-fth/2,1079,
							-1,0,800,
							0,fth/2,1079,
							0,fth/2,-1

						gosub 1000

					addz hr-ftw
						prism_ 12,ftw,
							0,-fth/2,79,
							1,0,800,
							0,2*rb+fth/2,1079,
							-1,0,800,
							0,-fth/2,1079,
							0,-fth/2,-1,

							0,fth/2,79,
							1,0,800,
							0,2*rb-fth/2,1079,
							-1,0,800,
							0,fth/2,1079,
							0,fth/2,-1

						gosub 1000

					del 2
				endif

					!BALUSTERS

					MATERIAL bmat
					ADD 0,rb,ds+fbw
					for i=1 to bn step 1
					if gs_balusterStyle_m = 2 then
						if cfs then resol res else resol rescs

						add 0, -rb, 0
						cylind hr-ftw-fbw, gs_balusterDiameter/2
						del 1
					else
						PRISM_ 5,hr-ftw-fbw,
							-bw/2,-bth/2-rb,15,
							 bw/2,-bth/2-rb,15,
							 bw/2,bth/2-rb,15,
							-bw/2,bth/2-rb,15,
							-bw/2,-bth/2-rb,-1
					endif

					ROTz 360/bn
					NEXT i
					DEL bn+1

			endif
		endif
	endif


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** STRAIGHT INCLINED *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


	if ABS(ani)>EPS and ptyp_m=1 then				!ptyp=Straight
		if rom_m=1 then						!Vertical Orientation
			if rmm_m=2 then					!Perpendicular Measurement Extra Values
				ftw=ftw/cos(ani)
				fbw=fbw/cos(ani)
			endif

			IF rmm_m=1 THEN			!!Vertical Measurement
				temp_ds=ds
				temp_hr=hr
			ELSE					!!Perpendicular Measurement
				temp_ds=dsPerp
				temp_hr=hrPerp
			ENDIF


			MATERIAL fmat

			ROTz -90+gs_AngleL		!!! CONNECTING ANGLE
			ROTy -90
			CUTPLANE
			DEL 2

			ADDx lra
			ROTz 90-gs_AngleR
			ROTy 90
				CUTPLANE
			DEL 3

			!!3D FEEDBACK AT HOTSPOT EDITING
			IF GLOB_CONTEXT>20 and GLOB_CONTEXT<40 THEN

				ROTx 90
				ADDz -fth/2
				!FRAME
				MATERIAL fmat
				PRISM_ 5,fth,
						-XPosL,temp_ds-YPosL,15,
						lra+XPosR,temp_ds+lra*tan(ani)+YPosR,15,
						lra+XPosR,temp_ds+temp_hr+lra*tan(ani)+YPosR,15,
						-XPosL,temp_ds+temp_hr-YPosL,15,
						-XPosL,temp_ds-YPosL,-1

				DEL 2

			ELSE	! 3D DETAILED MODEL

				MATERIAL fmat
				rotx 90
				if gs_frameStyle_m = 2 then		! Rounded Frame

					length			= lra + XPosR + XPosL - gs_frameDiameter
					bottomHeight	= temp_ds
					topHeight		= temp_ds + temp_hr
					yCorrBottom 	= (gs_frameDiameter/2) / cos(ani) + (gs_frameDiameter/2) * tan(ani)
					yCorrTop		= (gs_frameDiameter/2) / cos(ani) - (gs_frameDiameter/2) * tan(ani)

					tube 2, 7, 1+2,
						0, 0, 900,
						gs_frameDiameter/2, 360, 4000,

						-XPosL + gs_frameDiameter/2,		-YPosL + topHeight - yCorrTop,								0, 0,
						-XPosL + gs_frameDiameter/2,		-YPosL + bottomHeight + yCorrBottom,						0, 0,
						 lra + XPosR - gs_frameDiameter/2,	-YPosL + bottomHeight + yCorrBottom + length * tan(ani),	0, 0,
						 lra + XPosR - gs_frameDiameter/2,	-YPosL + topHeight - yCorrTop + length * tan(ani),			0, 0,
						-XPosL + gs_frameDiameter/2,		-YPosL + topHeight - yCorrTop,								0, 0,
						-XPosL + gs_frameDiameter/2,		-YPosL + bottomHeight + yCorrBottom,						0, 0,
						 lra + XPosR - gs_frameDiameter/2,	-YPosL + bottomHeight + yCorrBottom + length * tan(ani),	0, 0

				else
				addz -fth/2
				!FRAME
				PRISM_ 10,fth,
						-XPosL,temp_ds-YPosL,15,
						lra+XPosR,temp_ds+lra*tan(ani)+YPosR,15,
						lra+XPosR,temp_ds+temp_hr+lra*tan(ani)+YPosR,15,
						-XPosL,temp_ds+temp_hr-YPosL,15,
						-XPosL,temp_ds-YPosL,-1,

						fsw,temp_ds+fbw+fsw*tan(ani),15,
						lra-fsw,temp_ds+fbw+(lra-fsw)*tan(ani),15,
						lra-fsw,temp_ds+temp_hr-ftw+(lra-fsw)*tan(ani),15,
						fsw,temp_ds+temp_hr-ftw+fsw*tan(ani),15,
						fsw,temp_ds+fbw+fsw*tan(ani),-1
					del 1
				endif

				del 1

			CUTEND
			CUTEND


			MATERIAL bmat

			ROTz -90+gs_AngleL		!!! CONNECTING ANGLE
			ROTy -90
				CUTPLANE
			DEL 2

			ADDx lra
			ROTz 90-gs_AngleR
			ROTy 90
				CUTPLANE
			DEL 3


				!!3D FEEDBACK AT HOTSPOT EDITING
				IF GLOB_CONTEXT>20 and GLOB_CONTEXT<40 THEN

				ELSE	!!! 3D DETAILED MODEL

					rotx 90
					addz -fth/2

						!BALUSTERS
						MATERIAL bmat
						add fsw+bdist,temp_ds+fbw+(fsw+bdist)*tan(ani),(fth-bth)/2
							for i=1 to bn step 1
						if gs_balusterStyle_m = 2 then
							rotx -90
							addy -gs_balusterDiameter/2
							cylind hr-ftw-fbw, gs_balusterDiameter/2
							del 2
						else
								PRISM_ 5,bth,
								0,0,15,
								bw,bw*tan(ani),15,
								bw,temp_hr-ftw-fbw+bw*tan(ani),15,
								0,temp_hr-ftw-fbw,15,
								0,0,-1
						endif

							add bdist+bw,(bdist+bw)*tan(ani),0
							next i
						DEL bn+1
					del 2

				ENDIF
			endif

			CUTEND
			CUTEND

	ELSE						!Perpendicular Orientation
								!Measurement is always perpendicular to inclination in this case
		roty -ani

			!!3D FEEDBACK AT HOTSPOT EDITING
			IF GLOB_CONTEXT>20 and GLOB_CONTEXT<40 THEN

				ROTx 90
				ADDz -fth/2
					!!FRAME
					MATERIAL fmat
					PRISM_ 5,fth,
						0,ds,15,
						lrah,ds,15,
						lrah,ds+hr,15,
						0,ds+hr,15,
						0,ds,-1
				DEL 2

			ELSE		!! 3D DETAILED MODEL

				rotx 90

					material fmat
				if gs_frameStyle_m = 2 then		! Rounded Frame
					tube 2, 7, 1+2,
						0, 0, 900,
						gs_frameDiameter/2, 360, 4000,

						gs_frameDiameter/2,			ds + hr - gs_frameDiameter/2,	0, 0,
						gs_frameDiameter/2,			ds + gs_frameDiameter/2,		0, 0,
						lrah - gs_frameDiameter/2,	ds + gs_frameDiameter/2,		0, 0,
						lrah - gs_frameDiameter/2,	ds + hr - gs_frameDiameter/2,	0, 0,
						gs_frameDiameter/2,			ds + hr - gs_frameDiameter/2,	0, 0,
						gs_frameDiameter/2,			ds + gs_frameDiameter/2,		0, 0,
						lrah - gs_frameDiameter/2,	ds + gs_frameDiameter/2,		0, 0
					addz -fth/2
				else
				addz -fth/2
					prism_ 10,fth,
						0,ds,15,
						lrah,ds,15,
						lrah,ds+hr,15,
						0,ds+hr,15,
						0,ds,-1,

						fsw,ds+fbw,15,
						lrah-fsw,ds+fbw,15,
						lrah-fsw,ds+hr-ftw,15,
						fsw,ds+hr-ftw,15,
						fsw,ds+fbw,-1

				endif

					!BALUSTERS
					material bmat
					add fsw+bdist,ds+fbw,(fth-bth)/2
					for i=1 to bn step 1
						if gs_balusterStyle_m = 2 then
							rotx -90
							addy -gs_balusterDiameter/2
							cylind hr-ftw-fbw, gs_balusterDiameter/2
							del 2
						else
						block bw,hr-ftw-fbw,bth
						endif
						addx bdist+bw
					next i
					DEL bn+1
		del 1

		del 1
	endif
			del 1
	endif
endif


!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** INCLINED AND CURVED *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!


	if ABS(ani)>EPS and ptyp_m<>1 then		!ptyp=Straight

		!FRAME
		material fmat

		!!3D FEEDBACK AT HOTSPOT EDITING
		IF GLOB_CONTEXT>20 and GLOB_CONTEXT<40 THEN

			!FRAME
			alphai=-alphaincl
			deltazi=-deltazincl
			for i=1 to nalphaincl+3 step 1
			put rb*sin(alphai),rb-rb*cos(alphai),ds+deltazi
			alphai=alphai+alphaincl
			deltazi=deltazi+deltazincl
			NEXT i

			TUBEA 5,nalphaincl+3,1+2+16+32,
				-fth/2,0,0,
				fth/2,0,0,
				fth/2,hr,0,
				-fth/2,hr,0,
				-fth/2,0,-1,
				get (nsp)

		ELSE
			if gs_frameStyle_m = 2 then		! Rounded Frame
				group "frameCurved"
					startAngle = asn ((gs_frameDiameter/2) / rb)
					betaincl = (ab - 2 * startAngle) / nalphaincl
					startZ = (gs_frameDiameter/2) * sin(ani)
					dZ = betaincl / ab * deltaz		!!! / nalphaincl

					add 0, rb, ds + gs_frameDiameter/2

					actAngle = startAngle
					actZ = startZ
					put rb * sin (actAngle), -rb * cos (actAngle), actZ + hr - gs_frameDiameter, 0

					for i = 1 to nalphaincl + 1
						put rb * sin (actAngle), -rb * cos (actAngle), actZ, 0
						actAngle = actAngle + betaincl
						actZ = actZ + dZ
					next i
					actAngle = actAngle - betaincl
					actZ = actZ - dZ

					for i = 1 to nalphaincl + 1
						put rb * sin (actAngle), -rb * cos (actAngle), actZ + hr - gs_frameDiameter, 0
						actAngle = actAngle - betaincl
						actZ = actZ - dZ
					next i
					actAngle = actAngle + betaincl
					actZ = actZ + dZ

					for i = 1 to 2
						put rb * sin (actAngle), -rb * cos (actAngle), actZ, 0
						actAngle = actAngle + betaincl
						actZ = actZ + dZ
					next i

					tube 2, nsp/4, 1+2,
						0, 0, 900,
						gs_frameDiameter/2, 360, 4000,
						get (nsp)

					del 1
				endgroup

				group "contourFrame"
					alphai=-alphaincl
					deltazi=-deltazincl
					for i=1 to nalphaincl+3 step 1
					put rb*sin(alphai),rb-rb*cos(alphai),ds+deltazi + gs_frameDiameter / 2
					alphai=alphai+alphaincl
					deltazi=deltazi+deltazincl
					NEXT i

					tubea 5 + 2, nsp/3, 1+2,
						-gs_frameDiameter/2, 0, 0,
						-gs_frameDiameter/2, hr - gs_frameDiameter, 0,
						0, -1, 800,
						 gs_frameDiameter/2, hr - gs_frameDiameter, 1000,
						 gs_frameDiameter/2, 0, 0,
						0, 1, 800,
						-gs_frameDiameter/2, 0, 1000,

						get (nsp)
				endgroup

				placegroup "frameCurved"
			else

			alphai=-alphaincl
			DELtazi=-DELtazincl
			for i=1 to nalphaincl+3 step 1
			put rb*sin(alphai),rb-rb*cos(alphai),ds+DELtazi
			alphai=alphai+alphaincl
			DELtazi=DELtazi+DELtazincl
			next i

			group "ciframe"
				TUBEA 5,nalphaincl+3,1+2+16+32,
				-fth/2,0,0,
				fth/2,0,0,
				fth/2,hr,0,
				-fth/2,hr,0,
				-fth/2,0,-1,
				get (nsp)
			endgroup

			alphai=m*alphaincl
			DELtazi=m*DELtazincl
			if nalphaincl - 2 * m > 0 then
				nFillPoints = nalphaincl - 2 * m
			else
				nFillPoints = 1
			endif
			for i=1 to nFillPoints
			put rb*sin(alphai),rb-rb*cos(alphai),ds+DELtazi
			alphai=alphai+alphaincl
			DELtazi=DELtazi+DELtazincl
			next i

			group "cifill"
				TUBEA 5, nFillPoints + 4, 1+2+16+32,
				-2*fth,fbw,0,
				 fth,fbw,0,
				 fth,hr-ftw,0,
				-2*fth,hr-ftw,0,
				-2*fth,fbw,-1,

				rb*sin((m-1)*alphaincl),rb-rb*cos((m-1)*alphaincl),ds+(m-1)*DELtazincl,
				rb*sin(alphafsw),rb-rb*cos(alphafsw),ds+fsw*sin(ani),
				get (nsp),
				rb*sin(ab-alphafsw),rb-rb*cos(ab-alphafsw),ds+(lra-fsw)*sin(ani),
				rb*sin(ab-(m-1)*alphaincl),rb-rb*cos(ab-(m-1)*alphaincl),ds+DELtaz-(m-1)*DELtazincl
			endgroup

			placegroup subgroup("ciframe","cifill")
			endif

			!BALUSTERS
			MATERIAL bmat
			group "cibalusters"
				add 0,rb,ds-(bw/2)*tan(ani)+((alphafsw+alphabdist)/ab)*DELtaz
				ROTz alphafsw+alphabdist
				for i=1 to bn-1 step 1
					if gs_balusterStyle_m = 2 then
						add 0, -rb, -gs_balusterDiameter/2
						cylind hr+bw*tan(ani), gs_balusterDiameter/2
						del 1
					else
				PRISM_ 5,hr+bw*tan(ani),
					-bw/2,-bth/2-rb,15,
					 bw/2,-bth/2-rb,15,
					 bw/2,bth/2-rb,15,
					-bw/2,bth/2-rb,15,
					-bw/2,-bth/2-rb,-1
					endif
				ROTz alphabdist
				ADDz (alphabdist/ab)*DELtaz
				next i
				DEL 2*(bn-1)+2
			endgroup


			if gs_frameStyle_m = 2 then
				placegroup subgroup (isectgroup("contourFrame", "cibalusters"), "frameCurved")

				killgroup "frameCurved"
				killgroup "contourFrame"
			else
			placegroup subgroup (isectgroup("ciframe","cibalusters"),subgroup("ciframe","cifill"))

			killgroup "ciframe"
			killgroup "cifill"
			endif
			killgroup "cibalusters"

		endif
	endif
endif


!!DETAILED 3D END!!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! ** HOTSPOTS ** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

	!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** STRAIGHT *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

	IF cfs=0 THEN
			IF ABS(ani)<EPS and ptyp_m=1 THEN

					!!!LENGHT
					HOTSPOT 0,0,0,unID,lra,1+256 : unID=unID+1
					HOTSPOT lra,0,0,unID,lra,2 : unID=unID+1
					HOTSPOT -1,0,0,unID,lra,3 : unID=unID+1

					HOTSPOT 0,0,ds,unID,lra,1+256 : unID=unID+1
					HOTSPOT lra,0,ds,unID,lra,2 : unID=unID+1
					HOTSPOT -1,0,ds,unID,lra,3 : unID=unID+1

					HOTSPOT 0,0,ds+hr,unID,lra,1+256 : unID=unID+1
					HOTSPOT lra,0,ds+hr,unID,lra,2 : unID=unID+1
					HOTSPOT -1,0,ds+hr,unID,lra,3 : unID=unID+1

					!!!DISTANCE FROM FLOOR
					HOTSPOT lra/2,0,0,unID,ds,1+128 : unID=unID+1
					HOTSPOT lra/2,0,ds,unID,ds,2 : unID=unID+1
					HOTSPOT lra/2,0,-1,unID,ds,3 : unID=unID+1

					!!!HEIGHT OF RAILING
					HOTSPOT lra/2,0,ds,unID,hr,1 : unID=unID+1
					HOTSPOT lra/2,0,ds+hr,unID,hr,2 : unID=unID+1
					HOTSPOT lra/2,0,-1,unID,hr,3 : unID=unID+1


		IF gs_detlevel_3D_m = 2 and gs_frameStyle_m < 2 THEN

						!!!Frame Width Bottom
						HOTSPOT lra/2,0,ds,unID,fbw,1+128 : unID=unID+1
						HOTSPOT lra/2,0,ds+fbw,unID,fbw,2 : unID=unID+1
						HOTSPOT lra/2,0,ds-1,unID,fbw,3 : unID=unID+1

						!!!Frame Width Top
						HOTSPOT lra/2,0,ds+hr,unID,ftw,1+128 : unID=unID+1
						HOTSPOT lra/2,0,ds+hr-ftw,unID,ftw,2 : unID=unID+1
						HOTSPOT lra/2,0,ds+hr+1,unID,ftw,3 : unID=unID+1

						!!!Frame Width Side
						HOTSPOT 0,0,ds+fbw+(hr-ftw-fbw)/2,unID,fsw,1+128 : unID=unID+1
						HOTSPOT fsw,0,ds+fbw+(hr-ftw-fbw)/2,unID,fsw,2 : unID=unID+1
						HOTSPOT -1,0,ds+fbw+(hr-ftw-fbw)/2,unID,fsw,3 : unID=unID+1

						HOTSPOT lra,0,ds+fbw+(hr-ftw-fbw)/2,unID,fsw,1+128 : unID=unID+1
						HOTSPOT lra-fsw,0,ds+fbw+(hr-ftw-fbw)/2,unID,fsw,2 : unID=unID+1
						HOTSPOT lra+1,0,ds+fbw+(hr-ftw-fbw)/2,unID,fsw,3 : unID=unID+1

					ENDIF
			ENDIF

	!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** STRAIGHT CURVED *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

		IF ABS(ani)<EPS and ptyp_m<>1 THEN
			IF ab<360 THEN

				!!!HEIGHT OF RAILING
					HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),ds,unID,hr,1+128 : unID=unID+1
					HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),ds+hr,unID,hr,2 : unID=unID+1
					HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),-1,unID,ds,3 : unID=unID+1

				!!! DISTANCE FROM FLOOR
					HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),0,unID,ds,1 : unID=unID+1
					HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),ds,unID,ds,2 : unID=unID+1
					HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),-1,unID,ds,3 : unID=unID+1

				IF ptyp_m=3 THEN
				!!!ROTATE
					HOTSPOT 0,rb,ds,unID,ab,6 : unID=unID+1
					HOTSPOT 0,0,ds,unID,ab,4+256 : unID=unID+1
					HOTSPOT rb*sin(ab),rb-rb*cos(ab),ds,unID,ab,5 : unID=unID+1

					HOTSPOT 0,rb,ds+hr,unID,ab,6 : unID=unID+1
					HOTSPOT 0,0,ds+hr,unID,ab,4+256 : unID=unID+1
					HOTSPOT rb*sin(ab),rb-rb*cos(ab),ds+hr,unID,ab,5 : unID=unID+1

				!!!FIX HOTSPOT AT FLOOR
					HOTSPOT 0,0,0,unID : unID=unID+1
					HOTSPOT rb*sin(ab),rb-rb*cos(ab),0,unID : unID=unID+1
				ENDIF

				IF ptyp_m=2 THEN
				!!!HEIGHT OF RAILING
					HOTSPOT 0,0,ds,unID,hr,1+128 : unID=unID+1
					HOTSPOT 0,0,ds+hr,unID,hr,2 : unID=unID+1
					HOTSPOT 0,0,-1,unID,hr,3 : unID=unID+1

					HOTSPOT rb*sin(ab),rb-rb*cos(ab),ds,unID,hr,1+128 : unID=unID+1
					HOTSPOT rb*sin(ab),rb-rb*cos(ab),ds+hr,unID,hr,2 : unID=unID+1
					HOTSPOT rb*sin(ab),rb-rb*cos(ab),-1,unID,hr,3 : unID=unID+1

				!!! DISTANCE FROM FLOOR
					HOTSPOT 0,0,0,unID,ds,1 : unID=unID+1
					HOTSPOT 0,0,ds,unID,ds,2 : unID=unID+1
					HOTSPOT 0,0,-1,unID,ds,3 : unID=unID+1

					HOTSPOT rb*sin(ab),rb-rb*cos(ab),0,unID,ds,1 : unID=unID+1
					HOTSPOT rb*sin(ab),rb-rb*cos(ab),ds,unID,ds,2 : unID=unID+1
					HOTSPOT rb*sin(ab),rb-rb*cos(ab),-1,unID,ds,3 : unID=unID+1
				ENDIF

			IF gs_detlevel_3D_m = 2 and gs_frameStyle_m < 2 THEN
					!!!Frame Width Bottom
					HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),ds,unID,fbw,1+128 : unID=unID+1
					HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),ds+fbw,unID,fbw,2 : unID=unID+1
					HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),ds-1,unID,fbw,3 : unID=unID+1

					!!!Frame Width Top
					HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),ds+hr,unID,ftw,1+128 : unID=unID+1
					HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),ds+hr-ftw,unID,ftw,2 : unID=unID+1
					HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),ds+hr+1,unID,ftw,3 : unID=unID+1
				ENDIF

			ELSE	!!!ANGLE=360

				!!!HOTSPOTS FOR GRAPHICAL EDITING
				!!!HEIGHT OF RAILING
					HOTSPOT 0,0,ds,unID,hr,1 : unID=unID+1
					HOTSPOT 0,0,ds+hr,unID,hr,2 : unID=unID+1
					HOTSPOT 0,0,-1,unID,hr,3 : unID=unID+1

					HOTSPOT rb,rb,ds,unID,hr,1 : unID=unID+1
					HOTSPOT rb,rb,ds+hr,unID,hr,2 : unID=unID+1
					HOTSPOT rb,rb,-1,unID,hr,3 : unID=unID+1

					HOTSPOT 0,2*rb,ds,unID,hr,1 : unID=unID+1
					HOTSPOT 0,2*rb,ds+hr,unID,hr,2 : unID=unID+1
					HOTSPOT 0,2*rb,-1,unID,hr,3 : unID=unID+1

					HOTSPOT -rb,rb,ds,unID,hr,1 : unID=unID+1
					HOTSPOT -rb,rb,ds+hr,unID,hr,2 : unID=unID+1
					HOTSPOT -rb,rb,-1,unID,hr,3 : unID=unID+1

				!!! DISTANCE FROM FLOOR
					HOTSPOT 0,0,0,unID,ds,1 : unID=unID+1
					HOTSPOT 0,0,ds,unID,ds,2 : unID=unID+1
					HOTSPOT 0,0,-1,unID,ds,3 : unID=unID+1

					HOTSPOT rb,rb,0,unID,ds,1 : unID=unID+1
					HOTSPOT rb,rb,ds,unID,ds,2 : unID=unID+1
					HOTSPOT rb,rb,-1,unID,ds,3 : unID=unID+1

					HOTSPOT 0,2*rb,0,unID,ds,1 : unID=unID+1
					HOTSPOT 0,2*rb,ds,unID,ds,2 : unID=unID+1
					HOTSPOT 0,2*rb,-1,unID,ds,3 : unID=unID+1

					HOTSPOT -rb,rb,0,unID,ds,1 : unID=unID+1
					HOTSPOT -rb,rb,ds,unID,ds,2 : unID=unID+1
					HOTSPOT -rb,rb,-1,unID,ds,3 : unID=unID+1

			ENDIF
		ENDIF

	!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** STRAIGHT INCLINED *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

		IF ABS(ani)>EPS and ptyp_m=1 THEN	!ptyp=Straight
			IF rom_m=1 THEN					!Vertical Orientation

					IF rmm_m=1 THEN			!Vertical Measurement
						temp_ds=ds
						temp_hr=hr
						temp_fbw=fbw
						temp_ftw=ftw
					ELSE					!Perpendicular Measurement
						temp_ds=dsPerp
						temp_hr=hrPerp
						temp_fbw=fbwPerp
						temp_ftw=ftwPerp
					ENDIF


					!!!	HOTSPOTS FOR GRAPHICAL EDITING
					!!! LENGTH OF RAILING

						HOTSPOT 0,	0,	0,				unID, lrah, 1+256 : unID=unID+1
						HOTSPOT -1, 0,	0-tan(ani),		unID, lrah, 3 : unID=unID+1
						HOTSPOT lra,0, 	0+lra*tan(ani),	unID, lrah, 2 : unID=unID+1

						HOTSPOT 0,	0,	temp_ds,				unID, lrah, 1+256 : unID=unID+1
						HOTSPOT -1, 0,	temp_ds-tan(ani),		unID, lrah, 3 : unID=unID+1
						HOTSPOT lra,0, 	temp_ds+lra*tan(ani),	unID, lrah, 2 : unID=unID+1

						HOTSPOT 0,	0,	temp_ds+temp_hr,				unID, lrah, 1+256 : unID=unID+1
						HOTSPOT -1, 0,	temp_ds+temp_hr-tan(ani),		unID, lrah, 3 : unID=unID+1
						HOTSPOT lra,0, 	temp_ds+temp_hr+lra*tan(ani),	unID, lrah, 2 : unID=unID+1


					IF rmm_m=1 THEN
						!!! DISTANCE FROM FLOOR
						HOTSPOT lra/2,	0,	lra/2*tan(ani),	unID, ds, 1+128 : unID=unID+1
						HOTSPOT lra/2,	0,	lra/2*tan(ani)-1,	unID, ds, 3 : unID=unID+1
						HOTSPOT lra/2,	0, 	lra/2*tan(ani)+temp_ds,	unID, ds, 2 : unID=unID+1

						!!! HEIGHT of RAILING
						HOTSPOT lra/2,	0,	temp_ds+lra/2*tan(ani),	unID, hr, 1+128 : unID=unID+1
						HOTSPOT lra/2,	0,	temp_ds+lra/2*tan(ani)-1,	unID, hr, 3 : unID=unID+1
						HOTSPOT lra/2,	0, 	temp_ds+lra/2*tan(ani)+temp_hr,unID, hr, 2 : unID=unID+1

				IF gs_detlevel_3D_m = 2 and gs_frameStyle_m < 2 THEN
							!!!Frame Width Bottom
							HOTSPOT lra/2,	0,	lra/2*tan(ani)+temp_ds,		unID, fbw, 1+128 : unID=unID+1
							HOTSPOT lra/2,	0,	lra/2*tan(ani)+temp_ds-1,	unID, fbw, 3 : unID=unID+1
							HOTSPOT lra/2,	0, 	lra/2*tan(ani)+temp_ds+temp_fbw,unID, fbw, 2 : unID=unID+1

							!!!Frame Width Top
							HOTSPOT lra/2,	0,	lra/2*tan(ani)+temp_ds+temp_hr,		unID, ftw, 1+128 : unID=unID+1
							HOTSPOT lra/2,	0,	lra/2*tan(ani)+temp_ds+temp_hr+1,	unID, ftw, 3 : unID=unID+1
							HOTSPOT lra/2,	0, 	lra/2*tan(ani)+temp_ds+temp_hr-temp_ftw,unID, ftw, 2 : unID=unID+1
						ENDIF

					ELSE
						!!! DISTANCE FROM FLOOR
						HOTSPOT lra/2,	0,	lra/2*tan(ani),	unID, dsPerp, 1+128, ds : unID=unID+1
						HOTSPOT lra/2,	0,	lra/2*tan(ani)-1,	unID, dsPerp, 3, ds : unID=unID+1
						HOTSPOT lra/2,	0, 	lra/2*tan(ani)+temp_ds,	unID, dsPerp, 2, ds : unID=unID+1

						!!! HEIGHT of RAILING
						HOTSPOT lra/2,	0,	temp_ds+lra/2*tan(ani),	unID, hrPerp, 1+128, hr : unID=unID+1
						HOTSPOT lra/2,	0,	temp_ds+lra/2*tan(ani)-1,	unID, hrPerp, 3, hr  : unID=unID+1
						HOTSPOT lra/2,	0, 	temp_ds+lra/2*tan(ani)+temp_hr,unID, hrPerp, 2, hr  : unID=unID+1

				IF gs_detlevel_3D_m = 2 and gs_frameStyle_m < 2 THEN
							!!!Frame Width Bottom
							HOTSPOT lra/2,	0,	lra/2*tan(ani)+temp_ds,		unID, fbwPerp, 1+128, fbw : unID=unID+1
							HOTSPOT lra/2,	0,	lra/2*tan(ani)+temp_ds-1,	unID, fbwPerp, 3, fbw : unID=unID+1
							HOTSPOT lra/2,	0, 	lra/2*tan(ani)+temp_ds+temp_fbw,unID, fbwPerp, 2, fbw : unID=unID+1

							!!!Frame Width Top
							HOTSPOT lra/2,	0,	lra/2*tan(ani)+temp_ds+temp_hr,		unID, ftwPerp, 1+128, ftw : unID=unID+1
							HOTSPOT lra/2,	0,	lra/2*tan(ani)+temp_ds+temp_hr+1,	unID, ftwPerp, 3, ftw : unID=unID+1
							HOTSPOT lra/2,	0, 	lra/2*tan(ani)+temp_ds+temp_hr-temp_ftw,unID, ftwPerp, 2, ftw : unID=unID+1
						ENDIF
					ENDIF

			IF gs_detlevel_3D_m = 2 and gs_frameStyle_m < 2 THEN
							!!!Frame Width Side
							HOTSPOT 0,	0,	temp_ds+temp_fbw+(temp_hr-temp_ftw-temp_fbw)/2,				unID, fswPerp, 1+128, fsw : unID=unID+1
							HOTSPOT -1, 0,	temp_ds+temp_fbw+(temp_hr-temp_ftw-temp_fbw)/2-tan(ani),		unID, fswPerp, 3, fsw : unID=unID+1
							HOTSPOT fsw,0, 	temp_ds+temp_fbw+(temp_hr-temp_ftw-temp_fbw)/2+fsw*tan(ani),	unID, fswPerp, 2, fsw : unID=unID+1

							HOTSPOT lra,	0,	temp_ds+temp_fbw+(temp_hr-temp_ftw-temp_fbw)/2+lra*tan(ani),				unID, fswPerp, 1+128, fsw : unID=unID+1
							HOTSPOT lra+1, 0,	temp_ds+temp_fbw+(temp_hr-temp_ftw-temp_fbw)/2+lra*tan(ani)+tan(ani),		unID, fswPerp, 3, fsw : unID=unID+1
							HOTSPOT lra-fsw,0, 	temp_ds+temp_fbw+(temp_hr-temp_ftw-temp_fbw)/2+lra*tan(ani)-fsw*tan(ani),	unID, fswPerp, 2, fsw : unID=unID+1
					ENDIF

			ELSE			!Perpendicular Orientation
							!Measurement is always perpendicular to inclination in this case
				ROTy -ani

						!!! LENGTH OF RAILING
						HOTSPOT 0,0,0,unID,lrah,1+256 : unID=unID+1
						HOTSPOT lrah,0,0,unID,lrah,2 	: unID=unID+1
						HOTSPOT -1,0,0,unID,lrah,3 	: unID=unID+1

						HOTSPOT 0,0,ds,unID,lrah,1+256 : unID=unID+1
						HOTSPOT lrah,0,ds,unID,lrah,2 	: unID=unID+1
						HOTSPOT -1,0,ds,unID,lrah,3 	: unID=unID+1

						HOTSPOT 0,0,ds+hr,unID,lrah,1+256 : unID=unID+1
						HOTSPOT lrah,0,ds+hr,unID,lrah,2 	: unID=unID+1
						HOTSPOT -1,0,ds+hr,unID,lrah,3 	: unID=unID+1

						!!!DISTANCE FROM FLOOR
						HOTSPOT lrah/2,0,0,unID,ds,1+128 : unID=unID+1
						HOTSPOT lrah/2,0,ds,unID,ds,2 : unID=unID+1
						HOTSPOT lrah/2,0,-1,unID,ds,3 : unID=unID+1

						!!! HEIGHT of RAILING
						HOTSPOT lrah/2,0,ds,unID,hr,1 : unID=unID+1
						HOTSPOT lrah/2,0,ds+hr,unID,hr,2 : unID=unID+1
						HOTSPOT lrah/2,0,-1,unID,hr,3 : unID=unID+1

			IF gs_detlevel_3D_m = 2 and gs_frameStyle_m < 2 THEN
							!!!Frame Width Bottom
							HOTSPOT lrah/2,0,ds,unID,fbw,1+128 : unID=unID+1
							HOTSPOT lrah/2,0,ds+fbw,unID,fbw,2 : unID=unID+1
							HOTSPOT lrah/2,0,ds-1,unID,fbw,3 : unID=unID+1

							!!!Frame Width Top
							HOTSPOT lrah/2,0,ds+hr,unID,ftw,1+128 : unID=unID+1
							HOTSPOT lrah/2,0,ds+hr-ftw,unID,ftw,2 : unID=unID+1
							HOTSPOT lrah/2,0,ds+hr+1,unID,ftw,3 : unID=unID+1

							!!!Frame Width Side
							HOTSPOT 0,0,ds+fbw+(hr-ftw-fbw)/2,unID,fsw,1+128 : unID=unID+1
							HOTSPOT fsw,0,ds+fbw+(hr-ftw-fbw)/2,unID,fsw,2 : unID=unID+1
							HOTSPOT -1,0,ds+fbw+(hr-ftw-fbw)/2,unID,fsw,3 : unID=unID+1

							HOTSPOT lrah,0,ds+fbw+(hr-ftw-fbw)/2,unID,fsw,1+128 : unID=unID+1
							HOTSPOT lrah-fsw,0,ds+fbw+(hr-ftw-fbw)/2,unID,fsw,2 : unID=unID+1
							HOTSPOT lrah+1,0,ds+fbw+(hr-ftw-fbw)/2,unID,fsw,3 : unID=unID+1
						ENDIF

				DEL 1
			ENDIF
		ENDIF

!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** INCLINED AND CURVED *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!

		IF ABS(ani)>EPS and ptyp_m<>1 THEN
				!!!HOTSPOTS FOR GRAPHICAL EDITING
				IF ptyp_m=3 THEN
					!!!ROTATE
					HOTSPOT 0,rb,ds+lra*sin(ani),unID,ab,6 : unID=unID+1
					HOTSPOT 0,0,ds+lra*sin(ani),unID,ab,4+128 : unID=unID+1
					HOTSPOT rb*sin(ab),rb-rb*cos(ab),ds+lra*sin(ani),unID,ab,5 : unID=unID+1

					HOTSPOT 0,rb,ds+hr+lra*sin(ani),unID,ab,6 : unID=unID+1
					HOTSPOT 0,0,ds+hr+lra*sin(ani),unID,ab,4+128 : unID=unID+1
					HOTSPOT rb*sin(ab),rb-rb*cos(ab),ds+hr+lra*sin(ani),unID,ab,5 : unID=unID+1
				ENDIF

					!!!HEIGHT OF RAILING
					HOTSPOT 0,0,ds,unID,hr,1 : unID=unID+1
					HOTSPOT 0,0,ds+hr,unID,hr,2 : unID=unID+1
					HOTSPOT 0,0,-1,unID,hr,3 : unID=unID+1

					HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),ds+(lra/2)*sin(ani),unID,hr,1 : unID=unID+1
					HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),ds+hr+(lra/2)*sin(ani),unID,hr,2 : unID=unID+1
					HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),-1,unID,hr,3 : unID=unID+1

					!!!DISTANCE FROM FLOOR
					HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),(lra/2)*sin(ani),unID,ds,1 : unID=unID+1
					HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),ds+(lra/2)*sin(ani),unID,ds,2 : unID=unID+1
					HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),-1,unID,ds,3 : unID=unID+1

					HOTSPOT 0,0,0,unID,ds,1 : unID=unID+1
					HOTSPOT 0,0,ds,unID,ds,2 : unID=unID+1
					HOTSPOT 0,0,-1,unID,ds,3 : unID=unID+1

					!!!FIX HOTSPOT AT FLOOR
					HOTSPOT rb*sin(ab),rb-rb*cos(ab),0+lra*sin(ani), unID : unID=unID+1

				IF ptyp_m=2 THEN
					!!!HEIGHT OF RAILING
					HOTSPOT rb*sin(ab),rb-rb*cos(ab),ds+lra*sin(ani),unID,hr,1 : unID=unID+1
					HOTSPOT rb*sin(ab),rb-rb*cos(ab),ds+hr+lra*sin(ani),unID,hr,2 : unID=unID+1
					HOTSPOT rb*sin(ab),rb-rb*cos(ab),-1,unID,hr,3 : unID=unID+1

					!!!DISTANCE FROM FLOOR
					HOTSPOT rb*sin(ab),rb-rb*cos(ab),lra*sin(ani),unID,ds,1+128 : unID=unID+1
					HOTSPOT rb*sin(ab),rb-rb*cos(ab),ds+lra*sin(ani),unID,ds,2 : unID=unID+1
					HOTSPOT rb*sin(ab),rb-rb*cos(ab),-1,unID,ds,3 : unID=unID+1
				ENDIF
		ENDIF
	ENDIF

end

1000:
	roty 90
	gosub 5000
	del 1
return

2000:
	gosub 5000
return

3000:
	rotz 90
	gosub 5000
	del 1
return

4000:
	rotx 90
	gosub 5000
	del 1
return


5000:
	vert 0, 0, 0
	vert 1, 0, 0
	vert 0, 1, 0
	vert 0, 0, 1

	coor 2, -1, -2, -3, -4
	base
	body -1

return
]]>
</Script_3D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_2D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
call "railSymbol2D_m" parameters all	bEnable2DPosts		= 0,
										iHandRailStyle		= gs_frameStyle_m,
										handRailDiameter	= gs_frameDiameter,
										handRailWidth		= fth,
										bBreakRailLine		= 0,
										bPostNoCalculation	= 0

]]>
</Script_2D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_1D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
!!Rail Balustrade

EPS=0.0001

!!PARAMETER INPUT CALCULATION!!

if gs_frameStyle_m = 2 then
	fth = gs_frameDiameter
	ftw = gs_frameDiameter
	fbw = gs_frameDiameter
	fsw = gs_frameDiameter
	bth = gs_balusterDiameter
	bw  = gs_balusterDiameter
endif

!!BALUSTER SPACING CALCULATION!!

IF ABS(lra)>EPS THEN
	IF rom_m=2 AND rmm_m=2 THEN
		!Number of balusters
		bn=int((lrah-2*fsw+bw)/(abdist+bw))
		!Calculated distance between balusters
		bdist=(lrah-2*fsw-bn*bw)/(bn+1)
	ELSE
		!Number of balusters
		bn=max(0, int((lra-2*fsw+bw)/(abdist+bw)))
		!Calculated distance between balusters
		bdist=(lra-2*fsw-bn*bw)/(bn+1)
	ENDIF
ENDIF


!!ADDITIONAL ANGLE CALCULATION FOR CURVED RAILS!!
IF ptyp_m<>1 THEN		!!ptyp=Straight
	IF rb<360 THEN
		alphafsw=(fsw*180)/(rb*pi)
		if bn > 0 then
			alphabdist = (ab - 2 * alphafsw) / bn
		else
			alphabdist = (ab - 2 * alphafsw) / (bn + 1)
		endif
	else
		!Number of balusters
		bn=int((lra+bw)/(abdist+bw))
		!Calculated distance between balusters
		bdist=(lra-bn*bw)/(bn+1)
	ENDIF

!!For curved and inclined rail
alphafsw=(fsw*180)/(rb*pi)
!alphabdist=(ab-2*alphafsw)/bn
if bn > 0 then
	alphabdist = (ab - 2 * alphafsw) / bn
else
	alphabdist = (ab - 2 * alphafsw) / (bn + 1)
endif

nalphaincl=int(ab/(360/res))+1 !number of segment points
alphaincl=ab/nalphaincl  !angle between segment points
deltaz=lra*sin(ani)
deltazincl=deltaz/nalphaincl !vertical step between segment points

m=int(alphafsw/alphaincl)+1

ENDIF

]]>
</Script_1D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_PR SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_PR>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_UI SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_UI>

<Comment SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Comment>

<Picture MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="0" length_in_bytes="3626" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D494844520000007F0000
	007F0803000000F163ED21000000F0504C5445FFFFFFCAA45ACCAB62B29353C3
	9C53C59A4CCDB26AD0A95DD1B36B74633ABAA26BB49C62725D33D2B572766843
	D0AB62AE92538A734271562DE8D5B1AD8C4BCEB471B3924EC6A24EAC8E51896E
	3CBCA15DB18D4CD0B05FD4C4A4EADCC2E4CBA4DAC59296896AF0EEEADBC28BD9
	BC84EDE8D4F0F0EE89713DBDA672EEEDE99B7B43C4AC7C9F8851D19F59C5B184
	EBE2CEA39161C48C43C09E656E5A31DBD6CBE6D2AC896F408C7B519D834AD2BF
	9AE0CB9DDDCEB4C6893F988D71E8CFB6947F536E542CE0C38CDCD9D0BD8136DD
	D0B5C6AD80B9B09CCEBB94A77A3AD2AD7AC07F3D9F9275B8AE99BAB3A0AE904D
	B97F3694267A0000000CEB49444154785EC59BD7725BBB0E860DB07355F5EADE
	7B4B2FBBF77DCAFBBFCD0197251273A2643BB6A430379ADC7CF3F30740006BBC
	F10DCEDED1C6B73C9B22EB7C3BFA96A0935D9D7E1BFAE1C924E033D8FE16F4A3
	8361807B50F2E5B7303EAB837821256267FD57EF85B8F1B5EF4B63C1ACFBFEF7
	CE85F037632F886E8CBC5D2FFF6827182F886EEDD4C0ED870F6BE57F97D544CF
	B2A01D407DF8F9036CAFD3F82EB1332F2C020CD4CF93BF1498976B33FEAA3BCC
	E8A0B6004A9DFDF7AFDBCBE9143A6B327EB34BE2C589D78884FF2377DDDBCA1A
	3B5D8FFEADACA9B61E3582BC956F7397F72D1830B00EFEE1F990D8C283065093
	DBF71B2F9C73122C805983FF7BBF8B50703C4EE17242DA4324E6CE896AA00CAC
	9EBF9909919D9C7840A514ECEC05C08B3C27FD03006B3BAB373ECB28EC00A042
	DC2240E097CEF5C1585B142BE51FFE5A37E251026AADBD3C7C00FC54964E58AD
	8BD5F2C978A2670822D0AF46C726F25F9563AD7BD6EAD5F1DFD775ED035E54D6
	DA9DA317AE0B497F99D95E4F9B696775AF6C4DBEFB3B0944DF3F24E8FD10E7FC
	DC95594F6BD02B8ABF53323E23F122186F1F4C7EE1DE20F33FD374C0BE5C057D
	938CF7FE06FBA45DEB974733D1F1FE5FB8D279A20F0056C0EF6441BC17A08CB5
	41FC3CE9CE30F29D1B237A00E82CBFB325FC49E6A5046DB4AE23FFA772D89BF1
	B7DACED5881A48FFB28D1F36392700ACADEC956B41E25FF44E673F9D6B0BC22F
	9D1F8CCFE848AC7465DE9D6EB916BE8CFC9B1EBBFF1A755F0D96CA7F2F1ABC97
	A6B2151421E7129FA035E70BEC0FD4C0BC5B9EF19910B5F7A1B9C30A2AB2BDE1
	43D27F81A7C97F0184576A59FDDFDEAF424C48BBC00241CA777B33A14C3FF93F
	CF7FD7767D20BC51EF96677C68ACA1A810948A9A59FCBD701731FFDAAEDD57CD
	D95ED22B3B09C6231D296597C5FC596F2BF2DF8C23BFED264A7D580EFFF0BC4B
	743A0DFC6E3B7F25B723FFF54127F121F2476DE22B652E9F1DFF476F87A1B53D
	69E877D5DBBD8DFC55D549FC2BC61F5CCF7F927E298DB934DBCFCEB92EF5F53E
	D0FB77784061477CEC24FFE30BB7E58EA3FEDCE535549752AA97CFCCB92E39EF
	B3310A25ABE2C16AD762FA5B45D2DF1DA4F8735D5097A09E357FEF9D0C87CD4B
	07B22FB147A6CFF81899E56BBDC0FF2D8ABFFF80941271FB1923CD70D8AD333F
	1E0F1400C2F946E27F17992D1BF3BF1DF5FF5452FE4909E8E593F9BF0CBBC3BA
	F663803EA0F6ADFEC19CCF639EE7FFE858B2FADB05F0A89E3AFF5F6713C2DF10
	BEAF60ACAFDB0ECE13BF97F8C7B693F4737EDF6B10F269FAF7AE262274970083
	3EC0B873B4E19C2C22BFC53CE7BF8F91F16B8D5A03749E62BC08C7FBA01DF4FE
	51F0DC41BC7FCEE4FAF3AEE07CED119EC2EFDC3DE061A00071F6A4109FF9CFF9
	557A7FCF80F1C93AF184FEE3F09CD89879500A00F52F73CD39D75F303EA4F8E7
	7CD7A504905F5DFFAFBAFDB0BF920AE868BF1F35333E7B73B7DA8CEFCEE43CFF
	5DDB09A12E4943E7AB5F592FC620035CB4C657915F169B737ECE722E1FA9779C
	1FFB3F379174BE6AFFB0E5EBD0E108294D85A8AF779D2818FF5DD2CF348F4CBC
	0B77A153FD77428204B49DAF5B1CFA666D69A022DF761D44FDAE2C76229F799E
	8FD25B40F537EACF892FA1B2C523F9A73BCDCD93F8A905033F869CDBBD57078B
	F8ED6395F82D99FC7FD39FFB5F966E08A88BE291FADF8B3A88175059336D3ADB
	C07792F9CFF50FD8FD332FBA92CDBFA217F0D87964679B7921C6600140CE2D23
	FF937EC7F59B947323E0B118EFBF2CBD2DC206A2F3A8621BD696DE4E2D0CD487
	DB39E7A383FDC467F93782EDA45F73FD29FFCBB1D5F888FD0B2D0E452688AEED
	1494FA63A4AAC82F75D2CCF2BFCD629EE5C2568ABFC3D239A175B8817FE07732
	310C74B40072526DEDDE5710F9DC7387914FF71CFB4FCA85F83B4FFACB92F45B
	AD015EFEE3FEA816630D0852DD7E479EE70623DF15FB8BF915ABBF32F2FFAFFE
	F7E2FCF985C52125BC470450B7B754DF021FA3FEDD12233F6FB358E035B765D8
	FC1DE6AFF9FECF03EA2FBE7F9B59E33B1A92AEE4C1E92CE64DE4FFCDEE9FC7DF
	0F67FCCD83CDA87FB788FA69FED210F57F617188085256B837D79C1B13F53B9B
	E28FE5423E9229FE59FE95F5D551EA7F859946FEE28D31E11100D122CA74E7A0
	E79C0BA793FF6D2852FEB19E83E23FF1EDF53C159C1B07FA74B0BD28E7C878C2
	9FE39D44AB7B276E2259CEE9A8FF07B39FF42BF6FE263EDF7FB88B82E9EF1B80
	419854176F8C092F2558AB778E7ECB8549FC5E2FF21D30FD9FEB3F748ABFBAB8
	66FE0F064629B3BD60711856B6275262F5B038FCCD892A317B3AF1A7C97367F6
	19FF3AF2BF7AFEDE3DA3A8233A583DAB8EC4C7A41F133F37C973FEFB7531F7FC
	B06CF5522CCCEBDF667DD6761F1AFCE5A7FC1FF2A16FF6D5F3C985F826C51FD3
	CF62AEEDE4C1A2FC2F5F177CFE3A9A5FB0783369F0AAF3093FCF9DAA7441EA37
	221F92E71A133F69CEDB15E35BC667FABB78BD71DA0B9DBBF092E8C6D8844F04
	7786DADA22F2FFEDF03CDD3944FE45AE22DF39F927EBFF16CF1F6770BD53D799
	C86E101A3C6D8916F15B535DD0D1737E99D9C8BF474CFEABC8743CFFF8CE8BF3
	DF5851378FA921B8323F52942EE41F37EA21F13DCBB9CFF1AB548B99FEF202D9
	FC074D2321410198CFBDFC7F93FEF030C314A2FF5E33FDE3C4BF64F7AF59FE25
	66FABDB74BF1EFC97A25895E6D1F2DC6932ACA5F6BA75515F965AD99FF92FDFE
	31F1931765AB883BAFFBD95D1C6DF6BBAE2B430709840F7B9A2FF081E01620C6
	9F67359FF365C1FA9F7D36FF47FE2C163A61372AEAB1043A5578063FCF7779CB
	5616A698EE7F8CA93A4895F24F32FDACFEF2FD03F582D4C6CCBE7F063C22377E
	71FCA145AC601EF4FFA25D0D8BB9C47736799EEBA49FF99F8F60A779CDBC0F6C
	A8E4DB48FABCFF1A35D8547FDA3530CD6A51FDCDB97E5E738E95AC853F39F17D
	C21B283E6B3CCF7FD4581C1407F1FEB97EC96AE16D458C2FCEFFD40B8BF0196C
	3C30A41DBF607C7A6128FFECC1416F5F27FE20F191F17F3E4F7CDCFFB4FE1DEE
	E6C700643D8413BAA2C7F0A966EF17450F31FADF8785F9C773AEB46CFE9AF9FF
	7B3D3C1B6186D2103D18FF587E41F85E4FCFF9EDC4FF3E0760FEA7F82F7B919F
	3FD4DCF775F80299111EA0827D5E6FBEEC3FD58F42F70A9BEE3FF13FDE4BC5FB
	9F85F377E01F9E346D4C7617BA578C19FF38FF7B013F85A49F3125ABFFECCD75
	9AF98F3B57CD27408F44AFE4CC8E47EBA7FBB7D6A08DF937619EA34FBF4DC1EE
	9FF35108A267844780EDD3478179FDD730D516937EA61979FF95F4974CFF0824
	89170041FCC123AF9EE73F00E753FFC3F47B5CE87FDCC51C5EE4C712C32B0B06
	A14A6FFCE3F51F83B556E3C2FAEB502C9CBF1D14B3EF9FF5C5999805FD638C5F
	DC7F58B436C55F97E59C80C40F39C7F78F7B0FDF3F6F888E08B043C67F3DBF4D
	FA75650DC4F72F1782C57FFACDF53BEA05DFDF057C48B940A79C7BCAB920FD68
	D08051F1FE997EC7EBBFE6F3EF7943F7BED1FEF89CFBB4FF77C7C618181895E2
	8FC5BF64B32072FFA13F21FA5822A27CC66795EF5DFB1848BC31C0F80BEB3FF7
	BF0D10FAFA877A13DBAB27F94FFB33A52E01AAC8EFF6A3665EFFE2CE69EB7BF2
	1F4E9A8CBF93A1FB7A06DFB5479797A602098BEA3F9FBF727D35FBFED91D9EDD
	7911E818773F4FD69F8F0C180926E5DFA49FEEDC16898F3BF3EF9F4DB94314E1
	7F9EC9CF1DF101F9FD4FF8CE0579FD6BBE7F763DE11B7A2AB64F8FBF3C6F4138
	9ADF7F626ACBFCC76C3811C28F8378817F46E39F77FF2D50602C40CC7FEEBF65
	7C296A4178203C79BF195B8CE7C69FAAD0825289CFE6FF38969EBECEA524E3C7
	200C2CC1785EFF2B038ACD3F3CFFE7B6FC7296E74A7A014212BDF77CE379FF8F
	C6A8147FA52F923B80F1FB27BD73C43612B0B304309FFF0D980A549CBF4F12DF
	6115BEC54CC2249F49199CC7CDD38DE5F2ADB52059FE79CD633E7CFFEC0BE185
	BA4514F0766F09545EFFCB9605051540E233FD609A774E8C959228D32BBB3CFF
	EF67F96FA3FFE3C8BFC861200466029402B34CE379FF6521FC83C88FF17FFA2A
	57CA8B0C1ABC8A23CD92FD370D3ECE3F71FFB65997C417D8ACEE06C5528DE7F9
	874683EEA5F9FB41FF9617B5180A29896E64D8B1AE869FB7AA0A7B4591E62F31
	9D7DFFCCB28CE8D25C56CB369ECF9F2D2C8AC26A7EFFE1FB6786371910DE18F3
	6E25683EFF169AF36D93723788521965E22BBB12FF03BF67096F93FFD0AC2D89
	2E8D09CBB555F2EF69FF10E81A673977910BD3CC73128C89C6AF4EBF6BE96601
	8A0D7DB3FB2A17F244403855EC6C57E77FB37FB016D0CCBE7FD2D567413BD858
	6C57A93F27FF094F873ADB4CD009F40AAAD55E3DCF7F340066A0DE0A31F4CDE2
	D04015B6576BE21F07A0328694137E10B42315DBF59C8BFBB20500838132E29C
	C40F002BC0D51B9F365C796B1AA64FA3CEB326E6417EB7B1BEF3BACC5F056CD0
	0FE188F895663DFE937EA21A694C833F58139DCF7F8455524A5321CFF8B5C5FF
	C83CD04177D686E5F3DF481A232B131687EB3F1F837E0090FBF1EAD77DFFAF48
	7B6CAFD67D4E3F86F8EF7CC33F0D7F71B1B37EE8FF00207C3C3005776FDA0000
	000049454E44AE426082
	]]>
</Picture>

<CalledMacros SectVersion="2" SectionFlags="0" SubIdent="0">
	<Macro>
		<MName><![CDATA["railSymbol2D_m"]]></MName>
		<MainGUID>C5C904E6-1706-4CD1-BC8D-6C294B5B40F7</MainGUID>
	</Macro>
</CalledMacros>

<Copyright SectVersion="1" SectionFlags="0" SubIdent="0">
	<Author>GRAPHISOFT</Author>
	<License>
		<Type>CC BY-ND</Type>
		<Version>3.0</Version>
	</License>
</Copyright>

</Symbol>
