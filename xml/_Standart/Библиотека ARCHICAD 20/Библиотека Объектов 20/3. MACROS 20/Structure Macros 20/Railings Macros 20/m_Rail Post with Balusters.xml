<?xml version="1.0" encoding="UTF-8"?>
<Symbol IsArchivable="true" IsPlaceable="false" MainGUID="25FF9DA9-05FB-488B-B694-9CABDECA9659" MigrationValue="Normal" Owner="1196638531" Signature="1196644685" Version="38">
<Ancestry SectVersion="1" SectionFlags="0" SubIdent="0" Template="false">
	<MainGUID>F938E33A-329D-4A36-BE3E-85E126820996</MainGUID>
	<MainGUID>103E8D2C-8230-42E1-9597-46F84CCE28C0</MainGUID>
	<MainGUID>784EAEA1-5041-4AA6-B6F4-EF263A891EE7</MainGUID>
	<MainGUID>09BEB35E-7BF8-448C-B408-AC04D159B0D1</MainGUID>
</Ancestry>

<ParamSection SectVersion="26" SectionFlags="0" SubIdent="0">
	<ParamSectHeader>
		<Version>26</Version>
		<AutoHotspots>false</AutoHotspots>
		<StatBits>
			<STBit_FixSize/>
		</StatBits>
		<WDLeftFrame>0</WDLeftFrame>
		<WDRightFrame>0</WDRightFrame>
		<WDTopFrame>0</WDTopFrame>
		<WDBotFrame>0</WDBotFrame>
		<LayFlags>65535</LayFlags>
		<WDMirrorThickness>0</WDMirrorThickness>
		<WDWallInset>0</WDWallInset>
		<SymbolColor>0</SymbolColor>
	</ParamSectHeader>
	<Parameters>
		<Length Name="A">
			<Description><![CDATA["Dimension 1"]]></Description>
			<Fix/>
			<Value>1.8</Value>
		</Length>
		<Length Name="B">
			<Description><![CDATA["Dimension 2"]]></Description>
			<Fix/>
			<Value>0.05</Value>
		</Length>
		<Length Name="ZZYZX">
			<Description><![CDATA["Height"]]></Description>
			<Fix/>
			<Value>0.9</Value>
		</Length>
		<Integer Name="gs_detlevel_3D_m">
			<Description><![CDATA["3D"]]></Description>
			<Value>2</Value>
		</Integer>
		<Boolean Name="cfs">
			<Description><![CDATA["Called as Macro from Stair"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- RailBalust_sp0: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="RailBalust_sp0">
			<Description><![CDATA["General Dimensions"]]></Description>
		</Title>
		<Integer Name="ptyp_m">
			<Description><![CDATA["Rail and Parameter Input Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Angle Name="ani">
			<Description><![CDATA["Inclination Angle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Integer Name="rom_m">
			<Description><![CDATA["Rail Orientation Method"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="rmm_m">
			<Description><![CDATA["Rail Measurement Method"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="LengthSize">
			<Description><![CDATA["'A' Size=Handrail Length"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="lra">
			<Description><![CDATA["Horizontal Length of Railing"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1.5</Value>
		</Length>
		<Length Name="lrah">
			<Description><![CDATA["Length of Railing"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1.5</Value>
		</Length>
		<Length Name="hr">
			<Description><![CDATA["Height of Railing"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.75</Value>
		</Length>
		<Length Name="hrPerp">
			<Description><![CDATA["Height of Railing"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.75</Value>
		</Length>
		<Angle Name="ab">
			<Description><![CDATA["Angle of Bending"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>85.9436692696</Value>
		</Angle>
		<Length Name="rb">
			<Description><![CDATA["Radius of Bending"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="ds">
			<Description><![CDATA["Distance from Slab/Stair"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.15</Value>
		</Length>
		<Length Name="dsPerp">
			<Description><![CDATA["Distance from Slab/Stair"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.15</Value>
		</Length>
		<Angle Name="gs_AngleL">
			<Description><![CDATA["Left End Cutting Angle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>90</Value>
		</Angle>
		<Angle Name="gs_AngleR">
			<Description><![CDATA["Right End Cutting Angle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>90</Value>
		</Angle>

		<!-- RailBalust_sp1: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="RailBalust_sp1">
			<Description><![CDATA["Structural Dimensions"]]></Description>
		</Title>
		<Integer Name="hrt_m">
			<Description><![CDATA["Handrail Style"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="hrd">
			<Description><![CDATA["Handrail Diameter"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="hrw">
			<Description><![CDATA["Handrail Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="hrh">
			<Description><![CDATA["Handrail Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.025</Value>
		</Length>
		<Length Name="hro">
			<Description><![CDATA["Handrail Overhang"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="hroL">
			<Description><![CDATA["Handrail Overhang - Left"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.15</Value>
		</Length>
		<Length Name="hroR">
			<Description><![CDATA["Handrail Overhang - Right"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.15</Value>
		</Length>
		<Length Name="hroLDiagonal">
			<Description><![CDATA["Handrail Overhang - Left"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.15</Value>
		</Length>
		<Length Name="hroRDiagonal">
			<Description><![CDATA["Handrail Overhang - Right"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.15</Value>
		</Length>
		<Integer Name="pt_m">
			<Description><![CDATA["Post Style"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="np">
			<Description><![CDATA["No. of Posts"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3</Value>
		</Integer>
		<Length Name="pd">
			<Description><![CDATA["Post Diameter"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.04</Value>
		</Length>
		<Length Name="pw">
			<Description><![CDATA["Post Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.04</Value>
		</Length>
		<Length Name="pth">
			<Description><![CDATA["Post Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.04</Value>
		</Length>
		<Length Name="gs_PostBaseOverhang">
			<Description><![CDATA["Post Base Overhang"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_PostBaseOverhangPerp">
			<Description><![CDATA["Post Base Overhang"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Integer Name="bt_m">
			<Description><![CDATA["Baluster Style"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nb">
			<Description><![CDATA["No. of Balusters between Posts"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3</Value>
		</Integer>
		<Length Name="bd">
			<Description><![CDATA["Baluster Diameter"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.02</Value>
		</Length>
		<Length Name="bth">
			<Description><![CDATA["Baluster Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.02</Value>
		</Length>
		<Length Name="bw">
			<Description><![CDATA["Baluster Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.02</Value>
		</Length>
		<Integer Name="gs_horRailStyle_m">
			<Description><![CDATA["Horizontal Rail Style"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<Length Name="gs_railWidth">
			<Description><![CDATA["Rail Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.02</Value>
		</Length>
		<Length Name="gs_railHeight">
			<Description><![CDATA["Rail Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.02</Value>
		</Length>
		<Length Name="gs_railDiameter">
			<Description><![CDATA["Rail Diameter"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.02</Value>
		</Length>
		<Length Name="gs_railDist">
			<Description><![CDATA["Distance from Handrail"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="gs_railDistPerp">
			<Description><![CDATA["Distance from Handrail"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.05</Value>
		</Length>

		<!-- gs_3D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_3D_representation">
			<Description><![CDATA["3D Representation"]]></Description>
		</Title>
		<Integer Name="res">
			<Description><![CDATA["Rail Arc Resolution"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>42</Value>
		</Integer>
		<Integer Name="rescs">
			<Description><![CDATA["Cross Section Resolution"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>12</Value>
		</Integer>
		<Boolean Name="gs_shadow">
			<Description><![CDATA["Shadow"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="AC_show2DHotspotsIn3D">
			<Description><![CDATA["Show 2D Hotspots in 3D"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="ac_bottomlevel">
			<Description><![CDATA["Bottom Level"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="ac_toplevel">
			<Description><![CDATA["Top Level"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>

		<!-- gs_2D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_2D_representation">
			<Description><![CDATA["2D Representation"]]></Description>
			<Fix/>
		</Title>
		<PenColor Name="gs_cont_pen">
			<Description><![CDATA["Contour Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</PenColor>
		<FillPattern Name="gs_fill_type">
			<Description><![CDATA["Fill Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_fill_pen">
			<Description><![CDATA["Fill Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>91</Value>
		</PenColor>
		<PenColor Name="gs_back_pen">
			<Description><![CDATA["Fill Background Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>91</Value>
		</PenColor>
		<Boolean Name="bPostSymbol">
			<Description><![CDATA["Post Symbol"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="sa">
			<Description><![CDATA["Show Axis"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<LineType Name="al">
			<Description><![CDATA["Axis Line Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</LineType>
		<PenColor Name="gs_RailAxisPen">
			<Description><![CDATA["Axis Line Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>16</Value>
		</PenColor>
		<Integer Name="iPostSymbolType">
			<Description><![CDATA["Post Symbol Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<LineType Name="postLineType">
			<Description><![CDATA["Post Line Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</LineType>
		<PenColor Name="postPen">
			<Description><![CDATA["Post Line Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>16</Value>
		</PenColor>

		<!-- RailBalust_sp2: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="RailBalust_sp2">
			<Description><![CDATA["Surfaces"]]></Description>
		</Title>
		<Material Name="fmat">
			<Description><![CDATA["Handrail"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="pmat">
			<Description><![CDATA["Post"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="bmat">
			<Description><![CDATA["Baluster"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="gs_railMat">
			<Description><![CDATA["Horizontal Rail"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>

		<!-- gs_list: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_list">
			<Description><![CDATA["Parameters for Listing"]]></Description>
			<Fix/>
		</Title>
		<RealNum Name="gs_list_cost">
			<Description><![CDATA["Cost"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="gs_list_manufacturer">
			<Description><![CDATA["Manufacturer"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_note">
			<Description><![CDATA["Note/Remarks"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_location">
			<Description><![CDATA["Location"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_accessories">
			<Description><![CDATA["Accessories"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_Type">
			<Description><![CDATA["Group Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Другой"]]></Value>
		</String>
		<Integer Name="iFMType">
			<Description><![CDATA["Group Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>25</Value>
		</Integer>
		<String Name="FM_InventoryNumber">
			<Description><![CDATA["Inventory No."]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_SerialNumber">
			<Description><![CDATA["Serial No."]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_ProductionYear">
			<Description><![CDATA["Production Year"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<RealNum Name="FM_ObjectWeight">
			<Description><![CDATA["Object Weight"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="FM_ObjectWeightUnit">
			<Description><![CDATA["Object Weight Unit"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["кг"]]></Value>
		</String>
		<String Name="gs_list_custom1">
			<Description><![CDATA["User Defined 1"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom2">
			<Description><![CDATA["User Defined 2"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom3">
			<Description><![CDATA["User Defined 3"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom4">
			<Description><![CDATA["User Defined 4"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom5">
			<Description><![CDATA["User Defined 5"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
	</Parameters>
</ParamSection>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_VL SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
! GENERAL PARAMETERS
VALUES "gs_detlevel_3D_m" 2,1,0	! Detailed, Simple, Off


! GENERAL RAIL GEOMETRY PARAMETERS
VALUES "ptyp_m" 1,2,3			! Straight, Curve Length and Radius, Angle and Radius


IF ptyp_m<>1 OR ABS(ani)<EPS  THEN
	VALUES "rom_m" 1
	VALUES "rmm_m" 1
	HIDEPARAMETER "lrah"
ELSE
	VALUES "rom_m"  1,2
	IF rom_m=2 then
		VALUES "rmm_m" 2
	ELSE
		VALUES "rmm_m" 1,2
	ENDIF
ENDIF


IF ptyp_m<>1 THEN	HIDEPARAMETER "LengthSize"

IF LengthSize = 0 OR ptyp_m<>1 THEN
	VALUES "a" lra+hroL+hroR
ELSE
	VALUES "a" lra
ENDIF
VALUES "zzyzx" ds+hr

! STRUCTURAL DIMENSION PARAMETERS
VALUES "hrt_m" 1,2		! Rectangular, Round
IF hrt_m=2 then
	HIDEPARAMETER "hrw","hrh"
ELSE
	HIDEPARAMETER "hrd"
ENDIF


IF ptyp_m<>1 then
	IF hrt_m=1 then VALUES "b" hrw
	IF hrt_m=2 then VALUES "b" hrd
	lock "a","b","zzyzx"
ELSE
	IF hrt_m=1 then
		IF GLOB_MODPAR_NAME = "B" THEN PARAMETERS hrw=B
		IF GLOB_MODPAR_NAME = "hrw" THEN PARAMETERS B=hrw
		IF GLOB_MODPAR_NAME = "hrt_m" THEN PARAMETERS hrw=B
	ELSE
		IF GLOB_MODPAR_NAME = "B" THEN PARAMETERS hrd=B
		IF GLOB_MODPAR_NAME = "hrd" THEN PARAMETERS B=hrd
		IF GLOB_MODPAR_NAME = "hrt_m" THEN PARAMETERS hrd=B
	ENDIF
	lock "a","zzyzx"
ENDIF


VALUES "pt_m" 1,2	! Rectangular, Round
IF pt_m=2 then
	HIDEPARAMETER "pw","pth"
ELSE
	HIDEPARAMETER "pd"
ENDIF


VALUES "bt_m" 1,2	! Rectangular, Round
IF bt_m=2 then
	HIDEPARAMETER "bw","bth"
ELSE
	HIDEPARAMETER "bd"
ENDIF

IF ptyp_m<>1 OR rom_m<>1 THEN
	LOCK "gs_AngleL"
	LOCK "gs_AngleR"
ENDIF

IF gs_cont_pen<=0 then PARAMETERS gs_cont_pen=2
IF gs_fill_pen<=0 then PARAMETERS gs_fill_pen=91


!PARAMETER RANGE DEFINITION!

VALUES "ani" range(-90, 0), range (0, 90)
if LengthSize then
	VALUES "lra" 	RANGE(hroL+hroR,)
	VALUES "lrah" 	RANGE((hroL+hroR)/cos(ani),)
else
	VALUES "lra" 	RANGE(0,)
	VALUES "lrah" 	RANGE(0,)
endif
VALUES "hr" RANGE(hrh+bw,)

VALUES "res" RANGE[3,)
VALUES "rescs" RANGE[3,)

if hrt_m = 1 and pt_m = 1 and bt_m = 1 and gs_horRailStyle_m <> 2 then
	lock			"rescs"
	hideparameter	"rescs"
endif

VALUES "gs_AngleL" 	range(0,180)
VALUES "gs_AngleR" 	range(0,180)

VALUES "hro"	RANGE [0,)

IF LengthSize=1 OR ABS(gs_AngleL-90)<EPS THEN		!! gs_AngleL=90
	VALUES "hroL"	RANGE [dpost,)
ELSE
	VALUES "hroL"	RANGE [0,)
ENDIF

IF LengthSize=1 OR ABS(gs_AngleR-90)<EPS THEN		!! gs_AngleR=90
	VALUES "hroR"	RANGE [dpost,)
ELSE
	VALUES "hroR"	RANGE [0,)
ENDIF

VALUES "hroLDiagonal"	RANGE [dpost,)
VALUES "hroRDiagonal"	RANGE [dpost,)

VALUES "hrd" RANGE(0,)
VALUES "hrw" RANGE(0,)
VALUES "hrh" RANGE(0,)
VALUES "np"	RANGE [2,)

VALUES "pd" RANGE(0,)
VALUES "pw" RANGE(0,)
VALUES "pth" RANGE(0,)
VALUES "gs_PostBaseOverhang" RANGE [0,)
VALUES "gs_PostBaseOverhangPerp" RANGE [0,)

VALUES "nb"	RANGE [0,)
VALUES "bd" RANGE(0,)
VALUES "bth" RANGE(0,)
VALUES "bw" RANGE(0,)

VALUES "B" RANGE(0,)


IF ABS(ani)<EPS THEN
	VALUES "ab" RANGE (0,360]
	LOCK "rom_m","rmm_m"
ELSE
	VALUES "ab" RANGE (0,)
ENDIF


! Distance from Slab/Stair
if GLOB_MODPAR_NAME = "dsPerp" then
	ds = dsPerp * cos(ani)
	parameters ds = ds
else
	dsPerp = ds / cos(ani)
	parameters dsPerp = dsPerp
endif

! Height of Railing
if GLOB_MODPAR_NAME = "hrPerp" then
	hr = hrPerp * cos(ani)
	parameters hr = hr
else
	hrPerp = hr / cos(ani)
	parameters hrPerp = hrPerp
endif

! Post Base Overhang
if GLOB_MODPAR_NAME = "gs_PostBaseOverhangPerp" then
	gs_PostBaseOverhang = gs_PostBaseOverhangPerp * cos(ani)
	parameters gs_PostBaseOverhang = gs_PostBaseOverhang
else
	gs_PostBaseOverhangPerp = gs_PostBaseOverhang / cos(ani)
	parameters gs_PostBaseOverhangPerp = gs_PostBaseOverhangPerp
endif

! Horizontal rail distance from railing
if GLOB_MODPAR_NAME = "gs_railDistPerp" then
	gs_railDist = gs_railDistPerp * cos(ani)
	parameters gs_railDist = gs_railDist
else
	gs_railDistPerp = gs_railDist / cos(ani)
	parameters gs_railDistPerp = gs_railDistPerp
endif

! Left Overhang of Railing
if GLOB_MODPAR_NAME = "hroLDiagonal" then
	hroL = hroLDiagonal * cos(ani)
	parameters hroL = hroL
else
	hroLDiagonal = hroL / cos(ani)
	parameters hroLDiagonal = hroLDiagonal
endif

! Right Overhang of Railing
if GLOB_MODPAR_NAME = "hroRDiagonal" then
	hroR = hroRDiagonal * cos(ani)
	parameters hroR = hroR
else
	hroRDiagonal = hroR / cos(ani)
	parameters hroRDiagonal = hroRDiagonal
endif

! COMPABILITY OF OVERHANG OF RAILING
EPS=0.00001
IF GLOB_MODPAR_NAME = "hroL" OR GLOB_MODPAR_NAME = "hroR" then
	parameters hro = 0
ELSE
	if abs(hro) > EPS then
		parameters 	hroL = hro,
					hroR = hro,
					hroLDiagonal=hro/cos(ani),
					hroRDiagonal=hro/cos(ani)
	endif
ENDIF
]]>
</Script_VL>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_3D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
!!Rail Post with Balusters


IF gs_detlevel_3D_m=0 THEN end
IF gs_shadow=0 THEN SHADOW OFF

templra = max(templra, EPS)
PEN gs_cont_pen
unID=1


	IF hrt_m=1 THEN		!!! HANDRAIL WIDTH
		fth=pth
		HandrailWidth=hrw
		ELSE
		fth=pd
		HandrailWidth=hrd
	ENDIF



!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** SIMPLE 3D *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


!!!CALCULATION FOR CONNECTING ANGLE

XPosL0=(HandrailWidth/2)/tan(gs_AngleL)
XPosR0=(HandrailWidth/2)/tan(gs_AngleR)

XPosL=ABS((HandrailWidth/2)/tan(gs_AngleL))
XPosR=ABS((HandrailWidth/2)/tan(gs_AngleR))
YPosL=(XPosL*tan(ani))
YPosR=(XPosR*tan(ani))


IF gs_detlevel_3D_m=1 THEN		!!Simple

	MATERIAL pmat
	RESOL res


	!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** STRAIGHT *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

		IF ABS(ani)<EPS and ptyp_m=1 THEN		!!ptyp=Straight

			ADDx XStartPoslra
			ADDz ds
				PRISM_ 5,hr,
					XPosL0,fth/2,15,
					-XPosL0,-fth/2,15,
					templra+XPosR0,-fth/2,15,
					templra-XPosR0,fth/2,15,
					XPosL0,fth/2,-1
			DEL 2

		ENDIF

	!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** STRAIGHT CURVED *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

		IF ABS(ani)<EPS and ptyp_m<>1 THEN

		!!!!FRAME

			IF ab<360 THEN
					ADDz ds
					PRISM_ 10,hr,
						0,fth/2,15,
						0,-fth/2+0.00005,15,
						0,-fth/2,79,
						1,0,800,
						(rb+(fth/2))*sin(ab),rb-(rb+(fth/2))*cos(ab),1015,
						(rb-(fth/2)+0.00005)*sin(ab),rb-(rb-(fth/2)+0.00005)*cos(ab),15,
						(rb-(fth/2))*sin(ab),rb-(rb-(fth/2))*cos(ab),79,
						-cos(ab),-sin(ab),800,
						0,fth/2,1015,
						0,fth/2,-1
					DEL 1

			ELSE	!!!ANGLE=360

				ADDz ds
					PRISM_ 12,hr,
						0,-fth/2,79,
						1,0,800,
						0,2*rb+fth/2,1079,
						-1,0,800,
						0,-fth/2,1079,
						0,-fth/2,-1,

						0,fth/2,79,
						1,0,800,
						0,2*rb-fth/2,1079,
						-1,0,800,
						0,fth/2,1079,
						0,fth/2,-1
				DEL 1

			ENDIF
		ENDIF

	!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** STRAIGHT INCLINED *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

		IF ABS(ani)>EPS and ptyp_m=1 THEN			!!ptyp=Straight

			IF rom_m=1 THEN					!!Vertical Orientation

				ADD XStartPoslra,0,ZStartPoslra

					IF rmm_m=1 THEN			!!Vertical Measurement
						temp_ds=ds
						temp_hr=hr
					ELSE					!!Perpendicular Measurement
						temp_ds=dsPerp
						temp_hr=hrPerp
					ENDIF

						ROTz -90+gs_AngleL		!! CONNECTING ANGLE
						ROTy -90
							CUTPLANE
						DEL 2

						ADDx templra
						ROTz 90-gs_AngleR
						ROTy 90
							CUTPLANE
						DEL 3


							ROTx 90
							ADDz -fth/2

								PRISM_ 5,fth,
									-XPosL,temp_ds-YPosL,15,
									templra+XPosR,temp_ds+templra*tan(ani)+YPosR,15,
									templra+XPosR,temp_ds+temp_hr+templra*tan(ani)+YPosR,15,
									-XPosL,temp_ds+temp_hr-YPosL,15,
									-XPosL,temp_ds-YPosL,-1

							DEL 2

						CUTEND
						CUTEND
				DEL 1

			ELSE						!Perpendicular Orientation
										!Measurement is always perpendicular to inclination in this case

				ROTy -ani
				ADDx XStartPoslra

					ROTx 90
					ADDz -fth/2
						!!FRAME

						PRISM_ 5,fth,
						0,ds,15,
						templrah,ds,15,
						templrah,ds+hr,15,
						0,ds+hr,15,
						0,ds,-1
					DEL 2

				DEL 2

			ENDIF


		ENDIF


	!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** INCLINED AND CURVED *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!

		IF ABS(ani)>EPS and ptyp_m<>1 THEN

			!!!!FRAME

			alphai=-alphaincl
			deltazi=-deltazincl
			for i=1 to nalphaincl+3 step 1
			put rb*sin(alphai),rb-rb*cos(alphai),ds+deltazi
			alphai=alphai+alphaincl
			deltazi=deltazi+deltazincl
			NEXT i

			TUBEA 5,nalphaincl+3,1+2+16+32,
				-fth/2,0,0,
				fth/2,0,0,
				fth/2,hr,0,
				-fth/2,hr,0,
				-fth/2,0,-1,
				get (nsp)

		ENDIF


ENDIF		!!END of SIMPLE 3D!!



!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** DETAILED 3D *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


IF gs_detlevel_3D_m=2 THEN

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** STRAIGHT *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

IF ABS(ani)<EPS and ptyp_m=1 THEN

	ADDX XStartPoslra

		!!3D FEEDBACK AT HOTSPOT EDITING
		IF GLOB_CONTEXT>20 and GLOB_CONTEXT<40 THEN

				ADDz ds
				MATERIAL fmat
				PRISM_ 5,hr,
					(fth/2)/tan(gs_AngleL),fth/2,15,
					-(fth/2)/tan(gs_AngleL),-fth/2,15,
					templra+(fth/2)/tan(gs_AngleR),-fth/2,15,
					templra-(fth/2)/tan(gs_AngleR),fth/2,15,
					(fth/2)/tan(gs_AngleL),fth/2,-1
				DEL 1

		ELSE	!!! DETAILED MODEL

			!! *** HANDRAIL *** !! *****************************************************

			MATERIAL fmat

			ADDx -(hroL)
			ROTz -90+gs_AngleL		!! CONNECTING ANGLE
			ROTy -90
				CUTPLANE
			DEL 3

			ADDx templra+(hroR)
			ROTz 90-gs_AngleR
			ROTy 90
				CUTPLANE
			DEL 3

			RESOL rescs

					MATERIAL fmat

					GROUP "handrail round straight"			!Groups
						ADD  -hroL-XPosL,0,ds+hr-hrd/2
						ROTy 90
						CYLIND templra+(hroL)+XPosL+(hroR)+XPosR,hrd/2
						DEL 2
					ENDGROUP

					IF hrt_m=1 THEN
						ADDz ds+hr-hrh
							PRISM_ 5,hrh,
								-(hroL)-XPosL,hrw/2,15,
								-(hroL)-XPosL,-hrw/2,15,
								templra+(hroR)+XPosR,-hrw/2,15,
								templra+(hroR)+XPosR,hrw/2,15,
								-(hroL)-XPosL,hrw/2,-1
						DEL 1

						ELSE
						PLACEGROUP "handrail round straight"
					ENDIF

			CUTEND
			CUTEND

			!! *** POST *** !! *****************************************************

			MATERIAL pmat

			ADDx -(hroL)-LengthSize*dpost
			ROTz -90+gs_AngleL		!! CONNECTING ANGLE
			ROTy -90
				CUTPLANE
			DEL 3

			ADDx templra+(hroR)+LengthSize*dpost
			ROTz 90-gs_AngleR
			ROTy 90
				CUTPLANE
			DEL 3

					MATERIAL pmat

					IF hrt_m=1 THEN			!Post height calculation
					ph=hr+ds-hrh+gs_PostBaseOverhang
					ELSE
						IF pt_m=1 THEN
						ph=hr+ds-hrd+gs_PostBaseOverhang
						ELSE
						ph=hr+ds-hrd/2+gs_PostBaseOverhang
						ENDIF
					ENDIF

					GROUP "post round straight"			!Groups
						addz -gs_PostBaseOverhang
						for i=1 to np step 1
						CYLIND ph,pd/2
						ADDx distpost
						NEXT i
						DEL np+1
					ENDGROUP

					GROUP "post rect straight"
						addz -gs_PostBaseOverhang
						for i=1 to np step 1
						PRISM_ 5,ph,
							-pw/2,-pth/2,15,
							 pw/2,-pth/2,15,
							 pw/2,pth/2,15,
							-pw/2,pth/2,15,
							-pw/2,-pth/2,-1
						ADDx distpost
						NEXT i
						DEL np+1
					ENDGROUP

						IF pt_m=1 THEN
							PLACEGROUP "post rect straight"
						ELSE
							IF hrt_m=1 THEN
							PLACEGROUP "post round straight"
							ELSE
							PLACEGROUP subgroup ("post round straight","handrail round straight")
							ENDIF
						ENDIF

			CUTEND
			CUTEND

			!! *** Balusters *** !! *****************************************************

			MATERIAL bmat

			ADDx -(hroL)-LengthSize*dpost
			ROTz -90+gs_AngleL		!! CONNECTING ANGLE
			ROTy -90
				CUTPLANE
			DEL 3

			ADDx templra+(hroR)+LengthSize*dpost
			ROTz 90-gs_AngleR
			ROTy 90
				CUTPLANE
			DEL 3

				!Horizontal

					GROUP "board rect straight H"			!Groups
					ADDz  ds
						PRISM_ 5,bw,
							0,-bth/2,15,
							templra,-bth/2,15,
							templra,bth/2,15,
							0,bth/2,15,
							0,-bth/2,-1
						DEL 1
					ENDGROUP

					GROUP "board round straight H"
						ADDz  ds+bd/2
						ROTy 90
						CYLIND templra,bd/2
						DEL 2
					ENDGROUP

					IF bt_m= 1 THEN
						IF pt_m=1 THEN
						PLACEGROUP subgroup ("board rect straight H","post rect straight")
						ELSE
						PLACEGROUP subgroup ("board rect straight H","post round straight")
						ENDIF
					ELSE
						IF pt_m=1 THEN
						PLACEGROUP subgroup ("board round straight H","post rect straight")
						ELSE
						PLACEGROUP subgroup ("board round straight H","post round straight")
						ENDIF
					ENDIF


			!Horizontal rail under handrail

			if 	gs_horRailStyle_m > 0 then
				material gs_railMat

				if gs_horRailStyle_m = 1 then
					group "horizontalRailRect straight"
						if hrt_m = 1 then
							addz  ds + hr - hrh - gs_railDist - gs_railHeight
						else
							addz  ds + hr - hrd - gs_railDist - gs_railHeight
						endif

						prism_ 5, gs_railHeight,
							0,			-gs_railWidth/2,	15,
							templra,	-gs_railWidth/2,	15,
							templra,	 gs_railWidth/2,	15,
							0,			 gs_railWidth/2,	15,
							0,			-gs_railWidth/2,	-1
						del 1
					endgroup
				endif

				if gs_horRailStyle_m = 2 then
					group "horizontalRailRound straight"
						if hrt_m = 1 then
							addz  ds + hr - hrh - gs_railDist - gs_railDiameter/2
						else
							addz  ds + hr - hrd - gs_railDist - gs_railDiameter/2
						endif
						ROTy 90
						CYLIND templra, gs_railDiameter/2
						DEL 2
					endgroup
				endif

				IF gs_horRailStyle_m = 1 THEN
					IF pt_m = 1 THEN
						PLACEGROUP subgroup ("horizontalRailRect straight","post rect straight")
						ELSE
						PLACEGROUP subgroup ("horizontalRailRect straight","post round straight")
						ENDIF
				ELSE
					IF pt_m = 1 THEN
						PLACEGROUP subgroup ("horizontalRailRound straight","post rect straight")
						ELSE
						PLACEGROUP subgroup ("horizontalRailRound straight","post round straight")
						ENDIF
					ENDIF
				endif

			!Vertical balusters
			MATERIAL bmat

			bh = hr
			if bt_m = 1	then	! rectangular ballusters
				bh = bh - bw
			else
				bh = bh - bd / 2
			endif
			if hrt_m = 1 then	!rectangular handrail
				bh = bh - hrh
				if gs_horRailStyle_m = 1 then bh = bh - gs_railDist - gs_railHeight
				if gs_horRailStyle_m = 2 then bh = bh - gs_railDist - gs_railDiameter/2
			else
				bh = bh - hrd/2
				if gs_horRailStyle_m = 1 then bh = bh - hrd/2 - gs_railDist - gs_railHeight
				if gs_horRailStyle_m = 2 then bh = bh - hrd/2 - gs_railDist - gs_railDiameter/2
			endif


					GROUP "board round straight V"			!Groups
						for k=1 to np-1 step 1
							ADD dpost+distboard+bd/2,0,ds+bd/2
							for i=1 to nb step 1
							CYLIND bh,bd/2
							ADDx distboard+bd
							NEXT i
							DEL nb+1
						ADDx distpost
						NEXT k
						DEL np-1
					ENDGROUP

					GROUP "board rect straight V"
						for l=1 to np-1 step 1
							ADD dpost+distboard+bw/2,0,ds+bw
							for i=1 to nb step 1
							PRISM_ 5,bh,
							-bw/2,-bth/2,15,
							 bw/2,-bth/2,15,
							 bw/2,bth/2,15,
							-bw/2,bth/2,15,
							-bw/2,-bth/2,-1
							ADDx distboard+bw
							NEXT i
							DEL nb+1
						ADDx distpost
						NEXT l
						DEL np-1
					ENDGROUP

			IF bt_m = 1 THEN			! rect balusters
				IF hrt_m = 1 THEN		! rect handrail
					if gs_horRailStyle_m = 2 then		! round horizontal rail
						PLACEGROUP subgroup ("board rect straight V", "horizontalRailRound straight")
					else
						PLACEGROUP "board rect straight V"
					endif
				ELSE					! round handrail
					if gs_horRailStyle_m = 0 then PLACEGROUP subgroup ("board rect straight V", "handrail round straight")
					if gs_horRailStyle_m = 1 then PLACEGROUP "board rect straight V"
					if gs_horRailStyle_m = 2 then PLACEGROUP subgroup ("board rect straight V", "horizontalRailRound straight")
				ENDIF
			ELSE						! round balusters
				IF hrt_m = 1 THEN		! rect handrail
					if gs_horRailStyle_m = 0 then PLACEGROUP subgroup ("board round straight V", "board round straight H")
					if gs_horRailStyle_m = 1 then PLACEGROUP subgroup ("board round straight V", "board round straight H")
					if gs_horRailStyle_m = 2 then PLACEGROUP subgroup (subgroup("board round straight V", "board round straight H"), "horizontalRailRound straight")
				ELSE					! round handrail
					if gs_horRailStyle_m = 0 then PLACEGROUP subgroup (subgroup ("board round straight V", "handrail round straight"),"board round straight H")
					if gs_horRailStyle_m = 1 then PLACEGROUP subgroup ("board round straight V","board round straight H")
					if gs_horRailStyle_m = 2 then PLACEGROUP subgroup (subgroup ("board round straight V", "board round straight H"), "horizontalRailRound straight")
				ENDIF
			ENDIF


			CUTEND
			CUTEND

				KILLGROUP "handrail round straight"
				KILLGROUP "post round straight"
				KILLGROUP "post rect straight"
				KILLGROUP "board rect straight H"
				KILLGROUP "board round straight H"
				KILLGROUP "board rect straight V"
				KILLGROUP "board round straight V"
			if gs_horRailStyle_m = 1 then KILLGROUP "horizontalRailRect straight"
			if gs_horRailStyle_m = 2 then KILLGROUP "horizontalRailRound straight"

		ENDIF
	DEL 1
ENDIF


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** STRAIGHT CURVED *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

IF ABS(ani)<EPS and ptyp_m<>1 THEN

		!!3D FEEDBACK AT HOTSPOT EDITING
		IF GLOB_CONTEXT>20 and GLOB_CONTEXT<40 THEN

			!!!!FRAME
			MATERIAL fmat

				IF ab<360 THEN
						ADDz ds
						PRISM_ 10,hr,
							0,fth/2,15,
							0,-fth/2+0.00005,15,
							0,-fth/2,79,
							1,0,800,
							(rb+(fth/2))*sin(ab),rb-(rb+(fth/2))*cos(ab),1015,
							(rb-(fth/2)+0.00005)*sin(ab),rb-(rb-(fth/2)+0.00005)*cos(ab),15,
							(rb-(fth/2))*sin(ab),rb-(rb-(fth/2))*cos(ab),79,
							-cos(ab),-sin(ab),800,
							0,fth/2,1015,
							0,fth/2,-1
						DEL 1
				ELSE	!!!ANGLE=360

					ADDz ds
						PRISM_ 12,hr,
							0,-fth/2,79,
							1,0,800,
							0,2*rb+fth/2,1079,
							-1,0,800,
							0,-fth/2,1079,
							0,-fth/2,-1,

							0,fth/2,79,
							1,0,800,
							0,2*rb-fth/2,1079,
							-1,0,800,
							0,fth/2,1079,
							0,fth/2,-1
					DEL 1

				ENDIF
		ELSE

			!!! *** handrail *** !!! *****************************************

			MATERIAL fmat
			resol res

			if (ab + alphahroL + alphahroR) < 360 then

					GROUP "handrail round curved"				!Groups
							gamma0=360/rescs
							gamma=0
							for i=1 to rescs step 1
							put hrd/2*cos(gamma),rb+hrd/2*sin(gamma),1
							gamma=gamma+gamma0
					next i
						ADD  0,rb,ds+hr-hrd/2
						ROTy 90
						ROTx 180-ab-alphahroR
							REVOLVE rescs+1,ab+alphahroL+alphahroR,1+2+4+8+16+32,
							get (nsp),
							hrd/2,rb,-1
						DEL 3
					ENDGROUP
				handrailgroupname = "handrail round curved"

					IF hrt_m=1 THEN
							ADDz ds+hr-hrh
							PRISM_ 9,hrh,
							(rb-(hrw/2))*sin(-alphahroL),rb-(rb-(hrw/2))*cos(alphahroL),15,
							(rb+(hrw/2)-0.00005)*sin(-alphahroL),rb-(rb+(hrw/2)-0.000005)*cos(alphahroL),15,
							(rb+(hrw/2))*sin(-alphahroL),rb-(rb+(hrw/2))*cos(alphahroL),79,
							cos(alphahroL),sin(-alphahroL),800,
							(rb+(hrw/2))*sin(ab+alphahroR),rb-(rb+(hrw/2))*cos(ab+alphahroR),1015,
							(rb-(hrw/2)+0.00005)*sin(ab+alphahroR),rb-(rb-(hrw/2)+0.00005)*cos(ab+alphahroR),15,
							(rb-(hrw/2))*sin(ab+alphahroR),rb-(rb-(hrw/2))*cos(ab+alphahroR),79,
							-cos(ab+alphahroR),-sin(ab+alphahroR),800,
							(rb-(hrw/2))*sin(-alphahroL),rb-(rb-(hrw/2))*cos(alphahroL),1015
							DEL 1
					ELSE
							PLACEGROUP "handrail round curved"
					ENDIF

			else

				group "handrail round curved 360"
					gamma0 = 360 / rescs
					gamma = 0
					for i = 1 to rescs step 1
						put hrd/2 * cos(gamma), rb + hrd/2 * sin(gamma), 1
						gamma = gamma + gamma0
					next i
					add 0, rb, ds + hr - hrd/2
					roty 90
					rotx 180 - ab
						revolve rescs+1, 360, 0,
							get (nsp),
							hrd/2, rb, -1
					del 3
				endgroup
				handrailgroupname = "handrail round curved 360"

				if hrt_m = 1 then
					addz ds + hr - hrh
						prism_ 12, hrh,
							0, -hrw/2, 79,
							1, 0, 800,
							0, 2*rb+hrw/2, 1079,
							-1, 0, 800,
							0, -hrw/2, 1079,
							0, -hrw/2, -1,
	
							0, hrw/2, 79,
							1, 0, 800,
							0, 2*rb-hrw/2, 1079,
							-1, 0, 800,
							0, hrw/2, 1079,
							0, hrw/2, -1
					del 1
				else
					placegroup "handrail round curved 360"
				endif
	
			endif

			!!other parts are shorter, circularity checked differently
			if ab < 360 then


					!!! *** Posts *** !!! *********************************

					MATERIAL pmat
					resol rescs

					IF hrt_m=1 THEN			!Post height calculation
					ph=hr+ds-hrh+gs_PostBaseOverhang
					ELSE
						IF pt_m=1 THEN
						ph=hr+ds-hrd+gs_PostBaseOverhang
						ELSE
						ph=hr+ds-hrd/2+gs_PostBaseOverhang
						ENDIF
					ENDIF

					GROUP "post round curved"			!Groups
						for i=1 to np step 1
						CYLIND ph,pd/2
						ADDy rb
						ROTz anglepost
						ADDy -rb
					next i
						DEL 3*np
					ENDGROUP

					GROUP "post rect curved"
						for i=1 to np step 1
						PRISM_ 5,ph,
							-pw/2,-pth/2,15,
							 pw/2,-pth/2,15,
							 pw/2,pth/2,15,
							-pw/2,pth/2,15,
							-pw/2,-pth/2,-1
						ADDy rb
						ROTz anglepost
						ADDy -rb
					next i
						DEL 3*np
					ENDGROUP

					ADDz -gs_PostBaseOverhang
						IF pt_m=1 THEN
							PLACEGROUP "post rect curved"
						ELSE
							IF hrt_m=1 THEN
								PLACEGROUP "post round curved"
							ELSE
								PLACEGROUP subgroup ("post round curved", handrailgroupname )
							ENDIF
						ENDIF
					DEL 1


					!!! *** Balusters *** !!! ********************************

					MATERIAL bmat

					!!! *** Horizontal *** !!! *******************************
					resol res

					GROUP "board rect curved H"			!Groups
					ADDz  ds
					PRISM_ 10,bw,
						0,bth/2,15,
						0,-bth/2+0.00005,15,
						0,-bth/2,79,
						1,0,800,
						(rb+(bth/2))*sin(ab),rb-(rb+(bth/2))*cos(ab),1015,
						(rb-(bth/2)+0.00005)*sin(ab),rb-(rb-(bth/2)+0.00005)*cos(ab),15,
						(rb-(bth/2))*sin(ab),rb-(rb-(bth/2))*cos(ab),79,
						-cos(ab),-sin(ab),800,
						0,bth/2,1015,
						0,bth/2,-1
					DEL 1
					ENDGROUP

					GROUP "board round curved H"
							gamma0=360/rescs
							gamma=0
							for i=1 to rescs step 1
							put bd/2*cos(gamma),rb+bd/2*sin(gamma),1
							gamma=gamma+gamma0
					next i
						ADD  0,rb,ds+bd/2
						ROTy 90
						ROTx 180-ab
						REVOLVE rescs+1,ab,1+2+4+8+16+32,
						get (nsp),
						bd/2,rb,-1
						DEL 3
					ENDGROUP

					IF bt_m= 1 THEN
						IF pt_m=1 THEN
						PLACEGROUP subgroup ("board rect curved H","post rect curved")
						ELSE
						PLACEGROUP subgroup ("board rect curved H","post round curved")
						ENDIF
					ELSE
						IF pt_m=1 THEN
						PLACEGROUP subgroup ("board round curved H","post rect curved")
						ELSE
						PLACEGROUP subgroup ("board round curved H","post round curved")
						ENDIF
					ENDIF

				!Horizontal rail under handrail
	
				if 	gs_horRailStyle_m > 0 then
					material gs_railMat
	
					if gs_horRailStyle_m = 1 then
						GROUP "horizontalRailRect curved"			!Groups
							if hrt_m = 1 then		! rect handrail
								addz  ds + hr - hrh - gs_railDist - gs_railHeight
							else
								addz  ds + hr - hrd - gs_railDist - gs_railHeight
							endif
							PRISM_ 10, gs_railHeight,
								0,												 gs_railWidth/2,									15,
								0,												-gs_railWidth/2 + 0.00005,							15,
								0,												-gs_railWidth/2,									79,
								1,												 0,													800,
								(rb + (gs_railWidth/2)) * sin(ab),				 rb - (rb + (gs_railWidth/2)) * cos(ab),			1015,
								(rb - (gs_railWidth/2) + 0.00005) * sin(ab),	 rb - (rb - (gs_railWidth/2) + 0.00005) * cos(ab),	15,
								(rb - (gs_railWidth/2)) * sin(ab),				 rb - (rb - (gs_railWidth/2)) * cos(ab),			79,
								-cos(ab),										-sin(ab),											800,
								0,												 gs_railWidth/2,									1015,
								0,												 gs_railWidth/2,									-1
							DEL 1
						ENDGROUP
					endif
	
					if gs_horRailStyle_m = 2 then
						GROUP "horizontalRailRound curved"
							gamma0 = 360/rescs
							gamma = 0
							for i=1 to rescs
								put gs_railDiameter/2 * cos(gamma),rb + gs_railDiameter/2 * sin(gamma),1
								gamma = gamma + gamma0
							next i
							if hrt_m = 1 then
								add	0, rb,  ds + hr - hrh - gs_railDist - gs_railDiameter/2
							else
								add 0, rb,  ds + hr - hrd - gs_railDist - gs_railDiameter/2
							endif
							ROTy 90
							ROTx 180 - ab
							REVOLVE rescs+1, ab, 1+2+4+8+16+32,
								get (nsp),
								gs_railDiameter/2, rb, -1
							DEL 3
						ENDGROUP
					endif
	
					IF gs_horRailStyle_m = 1 THEN
						IF pt_m = 1 THEN
							PLACEGROUP subgroup ("horizontalRailRect curved", "post rect curved")
						ELSE
							PLACEGROUP subgroup ("horizontalRailRect curved", "post round curved")
						ENDIF
					ELSE
						IF pt_m = 1 THEN
							PLACEGROUP subgroup ("horizontalRailRound curved", "post rect curved")
						ELSE
							PLACEGROUP subgroup ("horizontalRailRound curved", "post round curved")
						ENDIF
					ENDIF
				endif


				!!! *** Vertical *** !!! **********************************
	
				resol rescs
	
				bh = hr
				if bt_m = 1	then	! rectangular ballusters
					bh = bh - bw
				else
					bh = bh - bd / 2
				endif
				if hrt_m = 1 then	!rectangular handrail
					bh = bh - hrh
					if gs_horRailStyle_m = 1 then bh = bh - gs_railDist - gs_railHeight
					if gs_horRailStyle_m = 2 then bh = bh - gs_railDist - gs_railDiameter/2
				else
					bh = bh - hrd/2
					if gs_horRailStyle_m = 1 then bh = bh - hrd/2 - gs_railDist - gs_railHeight
					if gs_horRailStyle_m = 2 then bh = bh - hrd/2 - gs_railDist - gs_railDiameter/2
				endif
	
	
					GROUP "board round curved V"			!Groups
						for k=1 to np-1 step 1
							ADD 0,rb,ds+bd/2
							ROTz dpostangle+distboardangle+dboardangle/2
							ADDy -rb
							for i=1 to nb step 1
							CYLIND bh,bd/2
							ADDy rb
							ROTz distboardangle+dboardangle
							ADDy -rb
						next i
							DEL 3*nb+3
						ADDy rb
						ROTz anglepost
						ADDy -rb
					next k
						DEL 3*(np-1)
					ENDGROUP
	
					GROUP "board rect curved V"
						for l=1 to np-1 step 1
							ADD 0,rb,ds+bw
							ROTz dpostangle+distboardangle+dboardangle/2
							ADDy -rb
							for i=1 to nb step 1
							PRISM_ 5,bh,
							-bw/2,-bth/2,15,
							 bw/2,-bth/2,15,
							 bw/2,bth/2,15,
							-bw/2,bth/2,15,
							-bw/2,-bth/2,-1
							ADDy rb
							ROTz distboardangle+dboardangle
							ADDy -rb
							NEXT i
							DEL 3*nb+3
						ADDy rb
						ROTz anglepost
						ADDy -rb
						NEXT l
						DEL 3*(np-1)
					ENDGROUP
	
				IF bt_m = 1 THEN			! rect balusters
					IF hrt_m = 1 THEN		! rect handrail
						if gs_horRailStyle_m = 2 then		! round horizontal rail
							PLACEGROUP subgroup ("board rect curved V", "horizontalRailRound curved")
						else
						PLACEGROUP "board rect curved V"
						endif
					ELSE					! round handrail
						if gs_horRailStyle_m = 0 then PLACEGROUP subgroup ("board rect curved V", handrailgroupname)
						if gs_horRailStyle_m = 1 then PLACEGROUP "board rect curved V"
						if gs_horRailStyle_m = 2 then PLACEGROUP subgroup ("board rect curved V", "horizontalRailRound curved")
					ENDIF
				ELSE						! round balusters
					IF hrt_m = 1 THEN		! rect handrail
						if gs_horRailStyle_m = 0 then PLACEGROUP subgroup ("board round curved V", "board round curved H")
						if gs_horRailStyle_m = 1 then PLACEGROUP subgroup ("board round curved V", "board round curved H")
						if gs_horRailStyle_m = 2 then PLACEGROUP subgroup (subgroup("board round curved V", "board round curved H"), "horizontalRailRound curved")
					ELSE					! round handrail
						if gs_horRailStyle_m = 0 then PLACEGROUP subgroup (subgroup ("board round curved V", handrailgroupname),"board round curved H")
						if gs_horRailStyle_m = 1 then PLACEGROUP subgroup ("board round curved V","board round curved H")
						if gs_horRailStyle_m = 2 then PLACEGROUP subgroup (subgroup ("board round curved V", "board round curved H"), "horizontalRailRound curved")
					ENDIF
				ENDIF
	
					KILLGROUP "post round curved"
					KILLGROUP "post rect curved"
					KILLGROUP "board rect curved H"
					KILLGROUP "board round curved H"
					KILLGROUP "board rect curved V"
					KILLGROUP "board round curved V"
				if gs_horRailStyle_m = 1 then KILLGROUP "horizontalRailRect curved"
				if gs_horRailStyle_m = 2 then KILLGROUP "horizontalRailRound curved"

		ELSE	!!!ANGLE=360

			!!! *** Posts *** !!! *********************************************
	
			MATERIAL pmat
			resol rescs
	
			IF hrt_m=1 THEN			!Post height calculation
			ph=hr+ds-hrh+gs_PostBaseOverhang
			ELSE
				IF pt_m=1 THEN
				ph=hr+ds-hrd+gs_PostBaseOverhang
				ELSE
				ph=hr+ds-hrd/2+gs_PostBaseOverhang
				ENDIF
			ENDIF
	
			GROUP "post round curved 360"			!Groups
				for i=1 to np step 1
				CYLIND ph,pd/2
				ADDy rb
				ROTz anglepost
				ADDy -rb
				NEXT i
				DEL 3*np
			ENDGROUP
	
			GROUP "post rect curved 360"
				for i=1 to np step 1
				PRISM_ 5,ph,
				-pw/2,-pth/2,15,
				 pw/2,-pth/2,15,
				 pw/2,pth/2,15,
				-pw/2,pth/2,15,
				-pw/2,-pth/2,-1
				ADDy rb
				ROTz anglepost
				ADDy -rb
				NEXT i
				DEL 3*np
			ENDGROUP
	
			ADDz -gs_PostBaseOverhang
				IF pt_m=1 THEN
					PLACEGROUP "post rect curved 360"
				ELSE
					IF hrt_m=1 THEN
					PLACEGROUP "post round curved 360"
					ELSE
							PLACEGROUP subgroup ("post round curved 360", handrailgroupname)
					ENDIF
				ENDIF
			DEL 1
	
	
			!!! *** Balusters *** !!! ****************************************
	
			MATERIAL bmat
			resol res
	
			!Horizontal
	
			GROUP "board rect curved H 360"			!Groups
			ADDz  ds
			PRISM_ 12,bw,
					0,-bth/2,79,
					1,0,800,
					0,2*rb+bth/2,1079,
					-1,0,800,
					0,-bth/2,1079,
					0,-bth/2,-1,
	
					0,bth/2,79,
					1,0,800,
					0,2*rb-bth/2,1079,
					-1,0,800,
					0,bth/2,1079,
					0,bth/2,-1
			DEL 1
			ENDGROUP
	
			GROUP "board round curved H 360"
					gamma0=360/rescs
					gamma=0
					for i=1 to rescs step 1
					put bd/2*cos(gamma),rb+bd/2*sin(gamma),1
					gamma=gamma+gamma0
					NEXT i
				ADD  0,rb,ds+bd/2
				ROTy 90
				ROTx 180-ab
				REVOLVE rescs+1,ab,1+2+4+8+16+32,
				get (nsp),
				bd/2,rb,-1
				DEL 3
			ENDGROUP
	
			IF bt_m= 1 THEN
					IF pt_m=1 THEN
				PLACEGROUP subgroup ("board rect curved H 360","post rect curved 360")
				ELSE
				PLACEGROUP subgroup ("board rect curved H 360","post round curved 360")
				ENDIF
			ELSE
					IF pt_m=1 THEN
				PLACEGROUP subgroup ("board round curved H 360","post rect curved 360")
				ELSE
				PLACEGROUP subgroup ("board round curved H 360","post round curved 360")
				ENDIF
			ENDIF
	
				!Horizontal rail under handrail
	
				if 	gs_horRailStyle_m > 0 then
					material gs_railMat
	
					if 	gs_horRailStyle_m = 1 then
						GROUP "horizontalRailRect curved 360"			!Groups
							if hrt_m = 1 then		! rect handrail
								addz  ds + hr - hrh - gs_railDist - gs_railHeight
							else
								addz  ds + hr - hrd - gs_railDist - gs_railHeight
							endif
	
							PRISM_ 12, gs_railHeight,
								 0,	-gs_railWidth/2,			79,
								 1,	 0,							800,
								 0,	 2 * rb + gs_railWidth/2,	1079,
								-1,	 0,							800,
								 0,	-gs_railWidth/2,			1079,
								 0,	-gs_railWidth/2,			-1,
	
								 0,	 gs_railWidth/2,			79,
								 1,	 0,							800,
								 0,	 2*rb - gs_railWidth/2,		1079,
								-1,	 0,							800,
								 0,	 gs_railWidth/2,			1079,
								 0,	 gs_railWidth/2,			-1
							DEL 1
						ENDGROUP
					endif
	
					if 	gs_horRailStyle_m = 2 then
						GROUP "horizontalRailRound curved 360"
							gamma0=360/rescs
							gamma=0
							for i=1 to rescs step 1
								put gs_railDiameter/2 * cos(gamma), rb + gs_railDiameter/2 * sin(gamma), 1
								gamma = gamma + gamma0
							next i
							if hrt_m = 1 then
								add	0, rb,  ds + hr - hrh - gs_railDist - gs_railDiameter/2
							else
								add	0,	rb,  ds + hr - hrd - gs_railDist - gs_railDiameter/2
							endif
							ROTy 90
							ROTx 180 - ab
							REVOLVE rescs+1, ab, 1+2+4+8+16+32,
								get (nsp),
								gs_railDiameter/2, rb, -1
							DEL 3
						ENDGROUP
					endif
	
					IF gs_horRailStyle_m = 1 THEN
						IF pt = 1 THEN
							PLACEGROUP subgroup ("horizontalRailRect curved 360", "post rect curved 360")
				ELSE
							PLACEGROUP subgroup ("horizontalRailRect curved 360", "post round curved 360")
				ENDIF
			ELSE
						IF pt = 1 THEN
							PLACEGROUP subgroup ("horizontalRailRound curved 360", "post rect curved 360")
				ELSE
							PLACEGROUP subgroup ("horizontalRailRound curved 360", "post round curved 360")
				ENDIF
			ENDIF
				endif

				!Vertical

				resol rescs

				bh = hr
				if bt_m = 1	then	! rectangular ballusters
					bh = bh - bw
				else
					bh = bh - bd / 2
				endif
				if hrt_m = 1 then	!rectangular handrail
					bh = bh - hrh
					if gs_horRailStyle_m = 1 then bh = bh - gs_railDist - gs_railHeight
					if gs_horRailStyle_m = 2 then bh = bh - gs_railDist - gs_railDiameter/2
				else
					bh = bh - hrd/2
					if gs_horRailStyle_m = 1 then bh = bh - hrd/2 - gs_railDist - gs_railHeight
					if gs_horRailStyle_m = 2 then bh = bh - hrd/2 - gs_railDist - gs_railDiameter/2
				endif


			GROUP "board round curved V 360"			!Groups
				for k=1 to np step 1
					ADD 0,rb,ds+bd/2
					ROTz dpostangle+distboardangle+dboardangle/2
					ADDy -rb
					for i=1 to nb step 1
					CYLIND bh,bd/2
					ADDy rb
					ROTz distboardangle+dboardangle
					ADDy -rb
					NEXT i
					DEL 3*nb+3
				ADDy rb
				ROTz anglepost
				ADDy -rb
				NEXT k
				DEL 3*np
			ENDGROUP
	
			GROUP "board rect curved V 360"
				for l=1 to np step 1
					ADD 0,rb,ds+bw
					ROTz dpostangle+distboardangle+dboardangle/2
					ADDy -rb
					for i=1 to nb step 1
					PRISM_ 5,bh,
					-bw/2,-bth/2,15,
					 bw/2,-bth/2,15,
					 bw/2,bth/2,15,
					-bw/2,bth/2,15,
					-bw/2,-bth/2,-1
					ADDy rb
					ROTz distboardangle+dboardangle
					ADDy -rb
					NEXT i
					DEL 3*nb+3
				ADDy rb
				ROTz anglepost
				ADDy -rb
				NEXT l
				DEL 3*np
			ENDGROUP

				IF bt_m = 1 THEN			! rect balusters
					IF hrt_m = 1 THEN		! rect handrail
						if gs_horRailStyle_m = 2 then		! round horizontal rail
							PLACEGROUP subgroup ("board rect curved V 360", "horizontalRailRound curved 360")
						else
				PLACEGROUP "board rect curved V 360"
						endif
					ELSE					! round handrail
						if gs_horRailStyle_m = 0 then PLACEGROUP subgroup ("board rect curved V 360", handrailgroupname )
						if gs_horRailStyle_m = 1 then PLACEGROUP "board rect curved V 360"
						if gs_horRailStyle_m = 2 then PLACEGROUP subgroup ("board rect curved V 360", "horizontalRailRound curved 360")
				ENDIF
				ELSE						! round balusters
					IF hrt_m = 1 THEN		! rect handrail
						if gs_horRailStyle_m = 0 then PLACEGROUP subgroup ("board round curved V 360", "board round curved H 360")
						if gs_horRailStyle_m = 1 then PLACEGROUP subgroup ("board round curved V 360", "board round curved H 360")
						if gs_horRailStyle_m = 2 then PLACEGROUP subgroup (subgroup("board round curved V 360", "board round curved H 360"), "horizontalRailRound curved 360")
					ELSE					! round handrail
						if gs_horRailStyle_m = 0 then PLACEGROUP subgroup (subgroup ("board round curved V 360", handrailgroupname),"board round curved H 360")
						if gs_horRailStyle_m = 1 then PLACEGROUP subgroup ("board round curved V 360", "board round curved H 360")
						if gs_horRailStyle_m = 2 then PLACEGROUP subgroup (subgroup ("board round curved V 360", "board round curved H 360"), "horizontalRailRound curved 360")
				ENDIF
			ENDIF

			KILLGROUP "post round curved 360"
			KILLGROUP "post rect curved 360"
			KILLGROUP "board rect curved H 360"
			KILLGROUP "board round curved H 360"
			KILLGROUP "board rect curved V 360"
			KILLGROUP "board round curved V 360"
				if gs_horRailStyle_m = 1 then KILLGROUP "horizontalRailRect curved 360"
				if gs_horRailStyle_m = 2 then KILLGROUP "horizontalRailRound curved 360"
		ENDIF
		KILLGROUP handrailgroupname
	ENDIF
ENDIF


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** STRAIGHT INCLINED *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


	IF ABS(ani)>EPS and ptyp_m=1 THEN

		RESOL rescs

		IF rom_m=1 THEN									!Vertical Orientation

				IF rmm_m=2 THEN		!Perpendicular Measurement Extra Values
					hrh=hrh/cos(ani)
					hrd=hrd/cos(ani)
				ENDIF

				IF rmm_m=1 THEN			!!Vertical Measurement
					temp_ds=ds
					temp_hr=hr
					temp_PostBaseOverhang=gs_PostBaseOverhang
				temp_railDist = gs_railDist
				ELSE					!!Perpendicular Measurement
					temp_ds=dsPerp
					temp_hr=hrPerp
					temp_PostBaseOverhang=gs_PostBaseOverhangPerp
				temp_railDist = gs_railDistPerp
				ENDIF


				!!3D FEEDBACK AT HOTSPOT EDITING
				IF GLOB_CONTEXT>20 and GLOB_CONTEXT<40 THEN

				ADD XStartPoslra,0,ZStartPoslra

					MATERIAL fmat

					ROTz -90+gs_AngleL		!!! CONNECTING ANGLE
					ROTy -90
						CUTPLANE
					DEL 2

					ADDx templra
					ROTz 90-gs_AngleR
					ROTy 90
						CUTPLANE
					DEL 3

							ROTx 90
							ADDz -fth/2

								PRISM_ 5,fth,
									-XPosL,temp_ds-YPosL,15,
									templra+XPosR,temp_ds+templra*tan(ani)+YPosR,15,
									templra+XPosR,temp_ds+temp_hr+templra*tan(ani)+YPosR,15,
									-XPosL,temp_ds+temp_hr-YPosL,15,
									-XPosL,temp_ds-YPosL,-1
							DEL 2

					CUTEND
					CUTEND

				DEL 1

				ELSE

				ADD XStartPoslra,0,ZStartPoslra

				!!! *** Handrail *** !!! *****************************************

				MATERIAL fmat

				ADDx -(hroL)
				ROTz -90+gs_AngleL		!! CONNECTING ANGLE
				ROTy -90
					CUTPLANE
				DEL 3

				ADDx templra+(hroR)
				ROTz 90-gs_AngleR
				ROTy 90
					CUTPLANE
				DEL 3

						GROUP "handrail round straight inclined"
							ADD -(hroL)-XPosL, 0, temp_ds+temp_hr-hrd/2-(hroL)*tan(ani)-YPosL + temp_PostBaseOverhang
							ROTy 90-ani
							CONE (templra+hroL+hroR)/cos(ani)+XPosL+XPosR,hrd/2,hrd/2,90+ani,90+ani
							del 2
						ENDGROUP

						IF hrt_m=1 THEN
							ROTx 90
							ADDz -hrw/2
							PRISM_ 5,hrw,
								-(hroL)-XPosL,temp_ds+temp_hr-hrh-(hroL)*tan(ani)-YPosL,15,
								templra+(hroR)+XPosR,temp_ds+temp_hr-hrh+(templra+(hroR))*tan(ani)+YPosR,15,
								templra+(hroR)+XPosR,temp_ds+temp_hr+(templra+(hroR))*tan(ani)+YPosR,15,
								-(hroL)-XPosL,temp_ds+temp_hr-(hroL)*tan(ani)-YPosL,15,
								-(hroL)-XPosL,temp_ds+temp_hr-hrh-(hroL)*tan(ani)-YPosL,-1
							DEL 2
						ELSE
							addz -temp_PostBaseOverhang
							PLACEGROUP "handrail round straight inclined"
							del 1
						ENDIF

				CUTEND
				CUTEND


				!!! *** Posts *** !!! **********************************************


				MATERIAL pmat

				ADDx -(hroL)-LengthSize*dpost
				ROTz -90+gs_AngleL		!! CONNECTING ANGLE
				ROTy -90
					CUTPLANE
				DEL 3

				ADDx templra+(hroR)+LengthSize*dpost
				ROTz 90-gs_AngleR
				ROTy 90
					CUTPLANE
				DEL 3

						MATERIAL pmat

						IF hrt_m=1 THEN			!Post height calculation
						ph=temp_hr+temp_ds-hrh+temp_PostBaseOverhang
						ELSE
							IF pt_m=1 THEN
								ph=temp_hr+temp_ds-hrd+temp_PostBaseOverhang
							ELSE
								ph=temp_hr+temp_ds-hrd/2+temp_PostBaseOverhang
							ENDIF
						ENDIF

						GROUP "post round straight inclined"			!Groups
							for i=1 to np step 1
								cone ph,pd/2,pd/2,90,90-ani
								ADD distpost,0,distpost*tan(ani)
							NEXT i
							DEL np
						ENDGROUP

						GROUP "post rect straight inclined"
							ROTx 90
							ADDz -pth/2
							for i=1 to np step 1
								PRISM_ 5,pth,
									-pw/2,0,15,
									 pw/2, 0,15,
									 pw/2, pw/2*tan(ani)+ph,15,
									-pw/2,-pw/2*tan(ani)+ph,15,
									-pw/2,0,-1

								ADD distpost,distpost*tan(ani),0
							next i
							DEL np+2
						ENDGROUP

						if pt_m = 1 then
							postgroupname = "post rect straight inclined"
						else
							postgroupname = "post round straight inclined"
						endif

						addz -temp_PostBaseOverhang
						if hrt_m = 1 then
							placegroup postgroupname
						else
							placegroup subgroup (postgroupname, "handrail round straight inclined")
						endif
						del 1

				CUTEND
				CUTEND


				!!! *** Boards *** !!! *****************************************

				MATERIAL bmat

				ADDx -(hroL)-LengthSize*dpost
				ROTz -90+gs_AngleL		!! CONNECTING ANGLE
				ROTy -90
					CUTPLANE
				DEL 3

				ADDx templra+(hroR)+LengthSize*dpost
				ROTz 90-gs_AngleR
				ROTy 90
					CUTPLANE
				DEL 3

						MATERIAL bmat

						!Horizontal

						GROUP "board rect straight H inclined"			!Groups
						ROTx 90
						ADDz -bth/2
						PRISM_ 5,bth,
							0,temp_ds,15,
							templra,temp_ds+templra*tan(ani),15,
							templra,temp_ds+bw+templra*tan(ani),15,
							0,temp_ds+bw,15,
							0,temp_ds,-1
						DEL 2
						ENDGROUP

						GROUP "board round straight H inclined"
							ADDz temp_ds+bd/2
							ROTy 90-ani
							cone templra/cos(ani),bd/2,bd/2,90+ani,90+ani
							DEL 2
						ENDGROUP

						IF bt_m= 1 THEN
							IF pt_m=1 THEN
								PLACEGROUP subgroup ("board rect straight H inclined","post rect straight inclined")
							ELSE
								PLACEGROUP subgroup ("board rect straight H inclined","post round straight inclined")
							ENDIF
						ELSE
							IF pt_m=1 THEN
								PLACEGROUP subgroup ("board round straight H inclined","post rect straight inclined")
							ELSE
								PLACEGROUP subgroup ("board round straight H inclined","post round straight inclined")
							ENDIF
						ENDIF


				!Horizontal rail under handrail

				if gs_horRailStyle_m > 0 then
					material gs_railMat

					if gs_horRailStyle_m = 1 then
						if hrt_m = 1 then
							railPosY = temp_ds + temp_hr - hrh - temp_railDist - gs_railHeight
						else
							railPosY = temp_ds + temp_hr - hrd - temp_railDist - gs_railHeight
						endif

						GROUP "horizontalRailRect inclined"			!Groups
							ROTx 90
							ADDz -gs_railWidth/2
							PRISM_ 5, gs_railWidth,
								0,			railPosY,										15,
								templra,	railPosY + templra * tan(ani),					15,
								templra,	railPosY + gs_railHeight + templra * tan(ani),	15,
								0,			railPosY + gs_railHeight,						15,
								0,			railPosY,										-1
							DEL 2
						ENDGROUP
					endif

					if gs_horRailStyle_m = 2 then
						GROUP "horizontalRailRound inclined"
							if hrt_m = 1 then
								addz temp_ds + temp_hr - hrh - gs_railDist - gs_railDiameter/2
							else
								addz temp_ds + temp_hr - hrd - gs_railDist - gs_railDiameter/2
							endif
							ROTy 90-ani
							cone templra/cos(ani), gs_railDiameter/2, gs_railDiameter/2, 90+ani, 90+ani
							DEL 2
						ENDGROUP
					endif

					IF gs_horRailStyle_m= 1 THEN
						IF pt_m=1 THEN
								PLACEGROUP subgroup ("horizontalRailRect inclined", "post rect straight inclined")
							ELSE
								PLACEGROUP subgroup ("horizontalRailRect inclined", "post round straight inclined")
							ENDIF
						ELSE
						IF pt_m=1 THEN
								PLACEGROUP subgroup ("horizontalRailRound inclined", "post rect straight inclined")
							ELSE
								PLACEGROUP subgroup ("horizontalRailRound inclined", "post round straight inclined")
							ENDIF
						ENDIF
				endif


				!Vertical

				bh = temp_hr
				if bt_m = 1	then	! rectangular ballusters
					bh = bh - bw
				else
					bh = bh - bd / 2
				endif
				if hrt_m = 1 then	!rectangular handrail
					bh = bh - hrh
					if gs_horRailStyle_m = 1 then bh = bh - temp_railDist - gs_railHeight
					if gs_horRailStyle_m = 2 then bh = bh - temp_railDist - gs_railDiameter/2
				else
					bh = bh - hrd/2
					if gs_horRailStyle_m = 1 then bh = bh - hrd/2 - temp_railDist - gs_railHeight
					if gs_horRailStyle_m = 2 then bh = bh - hrd/2 - temp_railDist - gs_railDiameter/2
				endif


						GROUP "board round straight V inclined"			!Groups
							for k=1 to np-1 step 1
								ADD dpost+distboard+bd/2,0,temp_ds+bd/2+(dpost+distboard+bd/2)*tan(ani)
								for i=1 to nb step 1
								cone bh,bd/2,bd/2,90-ani,90-ani
								ADD distboard+bd,0,(distboard+bd)*tan(ani)
								NEXT i
								DEL nb+1
							ADD distpost,0,distpost*tan(ani)
							NEXT k
							DEL np-1
						ENDGROUP

						GROUP "board rect straight V inclined"
							for l=1 to np-1 step 1
								ROTx 90
								ADD dpost+distboard+bw/2,temp_ds+bw+(dpost+distboard+bw/2)*tan(ani),-bth/2
								for i=1 to nb step 1
								PRISM_ 5,bth,
								-bw/2,-bw/2*tan(ani),15,
								 bw/2, bw/2*tan(ani),15,
								 bw/2, bw/2*tan(ani)+bh,15,
								-bw/2,-bw/2*tan(ani)+bh,15,
								-bw/2,-bw/2*tan(ani),-1
								ADD distboard+bw,(distboard+bw)*tan(ani),0
								NEXT i
								DEL nb+2
							ADD distpost,0,distpost*tan(ani)
							NEXT l
							DEL np-1
						ENDGROUP

				IF bt_m = 1 THEN			! rect balusters
					IF hrt_m = 1 THEN		! rect handrail
						if gs_horRailStyle_m = 2 then		! round horizontal rail
							PLACEGROUP subgroup ("board rect straight V inclined", "horizontalRailRound inclined")
						else
							PLACEGROUP "board rect straight V inclined"
						endif
					ELSE					! round handrail
						if gs_horRailStyle_m = 0 then PLACEGROUP subgroup ("board rect straight V inclined", "handrail round straight inclined")
						if gs_horRailStyle_m = 1 then PLACEGROUP "board rect straight V inclined"
						if gs_horRailStyle_m = 2 then PLACEGROUP subgroup ("board rect straight V inclined", "horizontalRailRound inclined")
							ENDIF
				ELSE						! round balusters
					IF hrt_m = 1 THEN		! rect handrail
						if gs_horRailStyle_m = 0 then PLACEGROUP subgroup ("board round straight V inclined", "board round straight H inclined")
						if gs_horRailStyle_m = 1 then PLACEGROUP subgroup ("board round straight V inclined", "board round straight H inclined")
						if gs_horRailStyle_m = 2 then PLACEGROUP subgroup (subgroup("board round straight V inclined", "board round straight H inclined"), "horizontalRailRound inclined")
					ELSE					! round handrail
						if gs_horRailStyle_m = 0 then PLACEGROUP subgroup (subgroup ("board round straight V inclined", "handrail round straight inclined"),"board round straight H inclined")
						if gs_horRailStyle_m = 1 then PLACEGROUP subgroup ("board round straight V inclined", "board round straight H inclined")
						if gs_horRailStyle_m = 2 then PLACEGROUP subgroup (subgroup ("board round straight V inclined", "board round straight H inclined"), "horizontalRailRound inclined")
							ENDIF
						ENDIF

				CUTEND
				CUTEND

					KILLGROUP "handrail round straight inclined"
					KILLGROUP "post round straight inclined"
					KILLGROUP "post rect straight inclined"
					KILLGROUP "board rect straight H inclined"
					KILLGROUP "board round straight H inclined"
					KILLGROUP "board rect straight V inclined"
					KILLGROUP "board round straight V inclined"
				if gs_horRailStyle_m = 1 then KILLGROUP "horizontalRailRect inclined"
				if gs_horRailStyle_m = 2 then KILLGROUP "horizontalRailRound inclined"

			DEL 1
			ENDIF

		ELSE						!Perpendicular Orientation
									!Measurement is always perpendicular to inclination in this case
			ROTy -ani
			ADDX XStartPoslrah

				!!3D FEEDBACK AT HOTSPOT EDITING
				IF GLOB_CONTEXT>20 and GLOB_CONTEXT<40 THEN

					ROTx 90
					ADDz -fth/2
						!!FRAME
						MATERIAL fmat
						PRISM_ 5,fth,
							0,ds,15,
							templrah,ds,15,
							templrah,ds+hr,15,
							0,ds+hr,15,
							0,ds,-1
					DEL 2

				ELSE		!! 3D DETAILED MODEL

					!!! *** Handrail *** !!! ******************************************
					MATERIAL fmat

					GROUP "handrail round straight perp"			!Groups
					ADD  -hroLDiagonal,0,ds+hr-hrd/2
					ROTy 90
					CYLIND templrah+hroLDiagonal+hroRDiagonal,hrd/2
					DEL 2
					ENDGROUP

					IF hrt_m=1 THEN
						ROTx 90
						ADDz -hrw/2
							PRISM_ 5,hrw,
								-hroLDiagonal,ds+hr-hrh,15,
								templrah+hroRDiagonal,ds+hr-hrh,15,
								templrah+hroRDiagonal,ds+hr,15,
								-hroLDiagonal,ds+hr,15,
								-hroLDiagonal,ds+hr-hrh,-1
						DEL 2
					ELSE
						PLACEGROUP "handrail round straight perp"
					ENDIF


					!!! *** Post *** !!! **********************************************
					MATERIAL pmat

					IF hrt_m=1 THEN			!Post height calculation
					ph=hr+ds-hrh+gs_PostBaseOverhang
					ELSE
						IF pt_m=1 THEN
						ph=hr+ds-hrd+gs_PostBaseOverhang
						ELSE
						ph=hr+ds-hrd/2+gs_PostBaseOverhang
						ENDIF
					ENDIF

					GROUP "post round straight perp"			!Groups
					for i=1 to np step 1
					CYLIND ph,pd/2
					ADDx distpost
					NEXT i
					DEL np
					ENDGROUP

					GROUP "post rect straight perp"
						for i=1 to np step 1
							PRISM_ 5,ph,
							-pw/2,-pth/2,15,
							 pw/2,-pth/2,15,
							 pw/2,pth/2,15,
							-pw/2,pth/2,15,
							-pw/2,-pth/2,-1
						ADDx distpost
						NEXT i
						DEL np
					ENDGROUP

					ADDz -gs_PostBaseOverhang
						IF pt_m=1 THEN
							PLACEGROUP "post rect straight perp"
						ELSE
							IF hrt_m=1 THEN
							PLACEGROUP "post round straight perp"
							ELSE
							PLACEGROUP subgroup ("post round straight perp","handrail round straight perp")
							ENDIF
						ENDIF

					DEL 1

					!!! *** Boards *** !!! ********************************************

					MATERIAL bmat

					!!! Horizontal

					GROUP "board rect straight H perp"			!Groups
					ADDz  ds
						PRISM_ 5,bw,
							0,-bth/2,15,
							templrah,-bth/2,15,
							templrah,bth/2,15,
							0,bth/2,15,
							0,-bth/2,-1
					DEL 1
					ENDGROUP

					GROUP "board round straight H perp"
						ADDz  ds+bd/2
						ROTy 90
							CYLIND templrah,bd/2
						DEL 2
					ENDGROUP

					IF bt_m= 1 THEN
						IF pt_m=1 THEN
						PLACEGROUP subgroup ("board rect straight H perp","post rect straight perp")
						ELSE
						PLACEGROUP subgroup ("board rect straight H perp","post round straight perp")
						ENDIF
					ELSE
						IF pt_m=1 THEN
						PLACEGROUP subgroup ("board round straight H perp","post rect straight perp")
						ELSE
						PLACEGROUP subgroup ("board round straight H perp","post round straight perp")
						ENDIF
					ENDIF


				!Horizontal rail under handrail

				if gs_horRailStyle_m > 0 then
					material gs_railMat

					if gs_horRailStyle_m = 1 then
						GROUP "horizontalRailRect perp"			!Groups
							if hrt_m = 1 then
								addz  ds + hr - hrh - gs_railDist - gs_railHeight
							else
								addz  ds + hr - hrd - gs_railDist - gs_railHeight
							endif
							PRISM_ 5, gs_railHeight,
								0,			-gs_railWidth/2,	15,
								templrah,	-gs_railWidth/2,	15,
								templrah,	 gs_railWidth/2,	15,
								0,			 gs_railWidth/2,	15,
								0,			-gs_railWidth/2,	-1
							DEL 1
						ENDGROUP
					endif

					if gs_horRailStyle_m = 2 then
						GROUP "horizontalRailRound perp"
							if hrt_m = 1 then
								addz  ds + hr - hrh - gs_railDist - gs_railDiameter/2
							else
								addz  ds + hr - hrd - gs_railDist - gs_railDiameter/2
							endif
							ROTy 90
							CYLIND templrah, gs_railDiameter/2
							DEL 2
						ENDGROUP
					endif

					IF gs_horRailStyle_m = 1 THEN
						IF pt_m = 1 THEN
							PLACEGROUP subgroup ("horizontalRailRect perp","post rect straight perp")
						ELSE
							PLACEGROUP subgroup ("horizontalRailRect perp","post round straight perp")
						ENDIF
					ELSE
						IF pt_m = 1 THEN
							PLACEGROUP subgroup ("horizontalRailRound perp","post rect straight perp")
						ELSE
							PLACEGROUP subgroup ("horizontalRailRound perp","post round straight perp")
						ENDIF
					ENDIF
				endif


				!!! Vertical

				bh = hr
				if bt_m = 1	then	! rectangular ballusters
					bh = bh - bw
				else
					bh = bh - bd / 2
				endif
				if hrt_m = 1 then	!rectangular handrail
					bh = bh - hrh
					if gs_horRailStyle_m = 1 then bh = bh - gs_railDist - gs_railHeight
					if gs_horRailStyle_m = 2 then bh = bh - gs_railDist - gs_railDiameter/2
				else
					bh = bh - hrd/2
					if gs_horRailStyle_m = 1 then bh = bh - hrd/2 - gs_railDist - gs_railHeight
					if gs_horRailStyle_m = 2 then bh = bh - hrd/2 - gs_railDist - gs_railDiameter/2
				endif


					GROUP "board round straight V perp"			!Groups
						for k=1 to np-1 step 1
							ADD dpost+distboard+bd/2,0,ds+bd/2
							for i=1 to nb step 1
							CYLIND bh,bd/2
							ADDx distboard+bd
							NEXT i
							DEL nb+1
						ADDx distpost
						NEXT k
						DEL np-1
					ENDGROUP

					GROUP "board rect straight V perp"
						for l=1 to np-1 step 1
							ADD dpost+distboard+bw/2,0,ds+bw
							for i=1 to nb step 1
							PRISM_ 5,bh,
								-bw/2,-bth/2,15,
								 bw/2,-bth/2,15,
								 bw/2,bth/2,15,
								-bw/2,bth/2,15,
								-bw/2,-bth/2,-1
							ADDx distboard+bw
							NEXT i
							DEL nb+1
						ADDx distpost
						NEXT l
						DEL np-1
					ENDGROUP

				IF bt_m = 1 THEN			! rect balusters
					IF hrt_m = 1 THEN		! rect handrail
						if gs_horRailStyle_m = 2 then		! round horizontal rail
							PLACEGROUP subgroup ("board rect straight V perp", "horizontalRailRound perp")
						else
						PLACEGROUP "board rect straight V perp"
						endif
					ELSE					! round handrail
						if gs_horRailStyle_m = 0 then PLACEGROUP subgroup ("board rect straight V perp", "handrail round straight perp")
						if gs_horRailStyle_m = 1 then PLACEGROUP "board rect straight V perp"
						if gs_horRailStyle_m = 2 then PLACEGROUP subgroup ("board rect straight V perp", "horizontalRailRound perp")
						ENDIF
				ELSE						! round balusters
					IF hrt_m = 1 THEN		! rect handrail
						if gs_horRailStyle_m = 0 then PLACEGROUP subgroup ("board round straight V perp", "board round straight H perp")
						if gs_horRailStyle_m = 1 then PLACEGROUP subgroup ("board round straight V perp", "board round straight H perp")
						if gs_horRailStyle_m = 2 then PLACEGROUP subgroup (subgroup("board round straight V perp", "board round straight H perp"), "horizontalRailRound perp")
					ELSE					! round handrail
						if gs_horRailStyle_m = 0 then PLACEGROUP subgroup (subgroup ("board round straight V perp", "handrail round straight perp"),"board round straight H perp")
						if gs_horRailStyle_m = 1 then PLACEGROUP subgroup ("board round straight V perp", "board round straight H perp")
						if gs_horRailStyle_m = 2 then PLACEGROUP subgroup (subgroup ("board round straight V perp", "board round straight H perp"), "horizontalRailRound perp")
						ENDIF
					ENDIF

					KILLGROUP "handrail round straight perp"
					KILLGROUP "post round straight perp"
					KILLGROUP "post rect straight perp"
					KILLGROUP "board rect straight H perp"
					KILLGROUP "board round straight H perp"
					KILLGROUP "board rect straight V perp"
					KILLGROUP "board round straight V perp"
				if gs_horRailStyle_m = 1 then KILLGROUP "horizontalRailRect perp"
				if gs_horRailStyle_m = 2 then KILLGROUP "horizontalRailRound perp"

				ENDIF	!! END OF 3D MODEL
			DEL 1		!! END OF DRAG
			DEL 1		!! END OF ROTATION
		ENDIF
	ENDIF




!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** INCLINED AND CURVED *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!


	IF ABS(ani)>EPS and ptyp_m<>1 THEN

			RESOL rescs

			MATERIAL fmat



			!!3D FEEDBACK AT HOTSPOT EDITING
			IF GLOB_CONTEXT>20 and GLOB_CONTEXT<40 THEN

				!!!!FRAME
				MATERIAL fmat

				alphai=-alphaincl
				deltazi=-deltazincl

				for i=1 to nalphaincl+3 step 1
					put rb*sin(alphai),rb-rb*cos(alphai),ds+deltazi
					alphai=alphai+alphaincl
					deltazi=deltazi+deltazincl
			next i

				TUBEA 5,nalphaincl+3,1+2+16+32,
					-fth/2,0,0,
					fth/2,0,0,
					fth/2,hr,0,
					-fth/2,hr,0,
					-fth/2,0,-1,
					get (nsp)

			ELSE

				RestAngleL=alphahroL-nalphahroL*alphaincl		!!Rest Angle= Overhang Angle- Segments Points Angle
				LOHkerul=(rb*pi*alphahroL)/180					!!Perimeter of Handrail
				deltazLOH=LOHkerul*sin(ani)						!!vertical distance of Handrail
				deltara=deltazLOH-(deltazincl*nalphahroL)		!!vertical step of Rest Angle

				RestAngleR=alphahroR-nalphahroR*alphaincl
				ROHkerul=(rb*pi*alphahroR)/180
				deltazROH=ROHkerul*sin(ani)
				deltaraR=deltazROH-(deltazincl*nalphahroR)


				alphai=-(nalphahroL+1)*alphaincl
				deltazi=-(nalphahroL+1)*deltazincl

				if ABS(hroR)<EPS THEN
				tempStep=1
				ELSE
				tempStep=0
				ENDIF

					PUT rb*sin(-alphahroL-restangleL),rb-rb*cos(-alphahroL-restangleL),ds-deltazLOH-deltara
					PUT rb*sin(-alphahroL),rb-rb*cos(-alphahroL),ds-deltazLOH
					PUT rb*sin(-alphahroL+restangleL),rb-rb*cos(-alphahroL+restangleL),ds-deltazLOH+deltara

				if abs(nalphahroL)>EPS then		!! Left Handrail
				for i=1 to nalphahroL step 1
					PUT rb*sin(-alphahroL+restangleL+i*alphaincl),rb-rb*cos(-alphahroL+restangleL+i*alphaincl),ds-deltazLOH+deltara+i*deltazincl
				next i
				endif

				FOR i=0 to nalphaincl+tempStep step 1		!! Handrail between Posts
					PUT rb*sin(i*alphaincl),rb-rb*cos(i*alphaincl),ds+i*deltazincl
				NEXT i

			IF ABS(hroR)>EPS THEN				!! Right Handrail

				if abs(nalphahroR)>EPS then
					for i=1 to nalphahroR step 1
					PUT rb*sin((nalphaincl+i)*alphaincl),rb-rb*cos((nalphaincl+i)*alphaincl),ds+(nalphaincl+i)*deltazincl
					next i
				endif

					PUT rb*sin((nalphaincl+nalphahroR)*alphaincl+restangleR),rb-rb*cos((nalphaincl+nalphahroR)*alphaincl+restangleR),ds+(nalphaincl+nalphahroR)*deltazincl+deltaraR
					PUT rb*sin((nalphaincl+nalphahroR)*alphaincl+2*restangleR),rb-rb*cos((nalphaincl+nalphahroR)*alphaincl+2*restangleR),ds+(nalphaincl+nalphahroR)*deltazincl+2*deltaraR
			ENDIF

				GROUP "handrail round inclined curved"
					ADDz hr-hrd/2
					tubea 6,nsp/3,1+2+16+32,
						-hrd/2,0,1,
						 0,-1,801,
						 hrd/2,0,1001,
						 0,1,801,
						-hrd/2,0,1001,
						-hrd/2,0,-1,
						use (nsp)
					DEL 1
				ENDGROUP

				GROUP "handrail rect inclined curved"
					ADDz hr-hrh
					tubea 5,nsp/3,1+2+16+32,
						-hrw/2,0,0,
						 hrw/2,0,0,
						 hrw/2,hrh,0,
						-hrw/2,hrh,0,
						-hrw/2,0,-1,
						get (nsp)
					DEL 1
				ENDGROUP

				IF hrt_m=1 THEN
				PLACEGROUP "handrail rect inclined curved"
				ELSE
				PLACEGROUP "handrail round inclined curved"
				ENDIF


				!! *** POST *** !! *****************************************************

				MATERIAL pmat

				IF hrt_m=1 THEN			!Post height calculation
				ph=hr+ds-hrh/2+gs_PostBaseOverhang
				ELSE
					IF pt_m=1 THEN
					ph=hr+ds-hrd/2+gs_PostBaseOverhang
					ELSE
					ph=hr+ds-hrd/2+gs_PostBaseOverhang
					ENDIF
				ENDIF

				GROUP "post round inclined curved"
				ADDz -gs_PostBaseOverhang
					for i=1 to np step 1
					CYLIND ph,pd/2
					ADDy rb
					ROTz anglepost
					ADDy -rb
					ADDz deltazpost
					NEXT i
					DEL 4*np
				DEL 1
				ENDGROUP

				GROUP "post rect inclined curved"
				ADDz -gs_PostBaseOverhang
					for i=1 to np step 1
					PRISM_ 5,ph,
					-pw/2,-pth/2,15,
					 pw/2,-pth/2,15,
					 pw/2,pth/2,15,
					-pw/2,pth/2,15,
					-pw/2,-pth/2,-1
					ADDy rb
					ROTz anglepost
					ADDy -rb
					ADDz deltazpost
					NEXT i
					DEL 4*np
				DEL 1
				ENDGROUP

					IF pt_m=1 THEN
						IF hrt_m=1 THEN
						PLACEGROUP subgroup ("post rect inclined curved","handrail rect inclined curved")
						ELSE
						PLACEGROUP subgroup ("post rect inclined curved","handrail round inclined curved")
						ENDIF
					ELSE
						IF hrt_m=1 THEN
						PLACEGROUP subgroup ("post round inclined curved","handrail rect inclined curved")
						ELSE
						PLACEGROUP subgroup ("post round inclined curved","handrail round inclined curved")
						ENDIF
					ENDIF


				!!! *** Balusters *** !!! *********************************************

				MATERIAL bmat

				!!!Horizontal

				alphai=-alphaincl
				deltazi=-deltazincl
				for i=1 to nalphaincl+3 step 1
				put rb*sin(alphai),rb-rb*cos(alphai),deltazi
				alphai=alphai+alphaincl
				deltazi=deltazi+deltazincl
			next i

				GROUP "board round inclined curved H"
					ADDz ds+bd/2
					tubea 6,nalphaincl+3,1+2+16+32,
					-bd/2,0,1,
					 0,-1,801,
					 bd/2,0,1001,
					 0,1,801,
					-bd/2,0,1001,
					-bd/2,0,-1,
					use (nsp)
					DEL 1
				ENDGROUP

				GROUP "board rect inclined curved H"
					ADDz ds
					tubea 5,nalphaincl+3,1+2+16+32,
					-bth/2,0,0,
					 bth/2,0,0,
					 bth/2,bw,0,
					-bth/2,bw,0,
					-bth/2,0,-1,
					get (nsp)
					DEL 1
				ENDGROUP

				IF bt_m= 1 THEN
					IF pt_m=1 THEN
					PLACEGROUP subgroup ("board rect inclined curved H","post rect inclined curved")
					ELSE
					PLACEGROUP subgroup ("board rect inclined curved H","post round inclined curved")
					ENDIF
				ELSE
					IF pt_m=1 THEN
					PLACEGROUP subgroup ("board round inclined curved H","post rect inclined curved")
					ELSE
					PLACEGROUP subgroup ("board round inclined curved H","post round inclined curved")
					ENDIF
				ENDIF


			!Horizontal rail under handrail


			if gs_horRailStyle_m > 0 then
				material gs_railMat

				alphai=-alphaincl
				deltazi=-deltazincl
				for i=1 to nalphaincl+3 step 1
					put rb*sin(alphai),rb-rb*cos(alphai),deltazi
					alphai=alphai+alphaincl
					deltazi=deltazi+deltazincl
				next i

				if gs_horRailStyle_m = 1 then
					GROUP "horizontalRailRect inclined curved"
						if hrt_m = 1 then
							addz  ds + hr - hrh - gs_railDist - gs_railHeight
						else
							addz  ds + hr - hrd - gs_railDist - gs_railHeight
						endif

						tubea 5,nalphaincl+3,1+2+16+32,
							-gs_railWidth/2,0,0,
							 gs_railWidth/2,0,0,
							 gs_railWidth/2,gs_railHeight,0,
							-gs_railWidth/2,gs_railHeight,0,
							-gs_railWidth/2,0,-1,
							get (nsp)

						DEL 1
					ENDGROUP
				endif

				if gs_horRailStyle_m = 2 then
					GROUP "horizontalRailRound inclined curved"
						if hrt_m = 1 then
							addz  ds + hr - hrh - gs_railDist - gs_railDiameter/2
						else
							addz  ds + hr - hrd - gs_railDist - gs_railDiameter/2
						endif
						tubea 6,nalphaincl+3,1+2+16+32,
							-gs_railDiameter/2,	 0,	1,
							 0,					-1,	801,
							 gs_railDiameter/2,	 0,	1001,
							 0,					 1,	801,
							-gs_railDiameter/2,	 0,	1001,
							-gs_railDiameter/2,	 0,	-1,
							get (nsp)
						DEL 1
					ENDGROUP
				endif

				IF gs_horRailStyle_m= 1 THEN
					IF pt_m=1 THEN
						PLACEGROUP subgroup ("horizontalRailRect inclined curved","post rect inclined curved")
					ELSE
						PLACEGROUP subgroup ("horizontalRailRect inclined curved","post round inclined curved")
					ENDIF
				ELSE
					IF pt_m=1 THEN
						PLACEGROUP subgroup ("horizontalRailRound inclined curved","post rect inclined curved")
					ELSE
						PLACEGROUP subgroup ("horizontalRailRound inclined curved","post round inclined curved")
					ENDIF
				ENDIF
			endif


			!Vertical

			bh = hr
			if bt_m = 1	then	! rectangular ballusters
				bh = bh - bw
			else
				bh = bh - bd / 2
			endif
			if hrt_m = 1 then	!rectangular handrail
				bh = bh - hrh
				if gs_horRailStyle_m = 1 then bh = bh - gs_railDist - gs_railHeight
				if gs_horRailStyle_m = 2 then bh = bh - gs_railDist - gs_railDiameter/2
			else
				bh = bh - hrd/2
				if gs_horRailStyle_m = 1 then bh = bh - hrd/2 - gs_railDist - gs_railHeight
				if gs_horRailStyle_m = 2 then bh = bh - hrd/2 - gs_railDist - gs_railDiameter/2
			endif


				GROUP "board round inclined curved V"			!Groups
					for k=1 to np-1 step 1
						ADD 0,rb,ds+bd/2
						ROTz dpostangle+distboardangle+dboardangle/2
						ADDy -rb
						ADDz deltazboard0
						for i=1 to nb step 1
						CYLIND bh,bd/2
						ADDy rb
						ROTz distboardangle+dboardangle
						ADDy -rb
						ADDz deltazboard
						NEXT i
						DEL 4*nb+4
					ADDy rb
					ROTz anglepost
					ADDy -rb
					ADDz deltazpost
					NEXT k
					DEL 4*(np-1)
				ENDGROUP

				GROUP "board rect inclined curved V"
					for l=1 to np-1 step 1
						ADD 0,rb,ds+bw/2
						ROTz dpostangle+distboardangle+dboardangle/2
						ADDy -rb
						ADDz deltazboard0
						for i=1 to nb step 1
						PRISM_ 5,bh,
						-bw/2,-bth/2,15,
						 bw/2,-bth/2,15,
						 bw/2,bth/2,15,
						-bw/2,bth/2,15,
						-bw/2,-bth/2,-1
						ADDy rb
						ROTz distboardangle+dboardangle
						ADDy -rb
						ADDz deltazboard
						NEXT i
						DEL 4*nb+4
					ADDy rb
					ROTz anglepost
					ADDy -rb
					ADDz deltazpost
					NEXT l
					DEL 4*(np-1)
				ENDGROUP

			IF bt_m = 1 THEN			! rect balusters
				IF hrt_m = 1 THEN		! rect handrail
					if gs_horRailStyle_m = 2 then		! round horizontal rail
						PLACEGROUP subgroup ("board rect inclined curved V", "horizontalRailRound inclined curved")
					else
						PLACEGROUP "board rect inclined curved V"
					endif
				ELSE					! round handrail
					if gs_horRailStyle_m = 0 then PLACEGROUP subgroup ("board rect inclined curved V", "handrail round inclined curved")
					if gs_horRailStyle_m = 1 then PLACEGROUP "board rect inclined curved V"
					if gs_horRailStyle_m = 2 then PLACEGROUP subgroup ("board rect inclined curved V", "horizontalRailRound inclined curved")
					ENDIF
			ELSE						! round balusters
				IF hrt_m = 1 THEN		! rect handrail
					if gs_horRailStyle_m = 0 then PLACEGROUP subgroup ("board round inclined curved V", "board round inclined curved H")
					if gs_horRailStyle_m = 1 then PLACEGROUP subgroup ("board round inclined curved V", "board round inclined curved H")
					if gs_horRailStyle_m = 2 then PLACEGROUP subgroup (subgroup("board round inclined curved V", "board round inclined curved H"), "horizontalRailRound inclined curved")
				ELSE					! round handrail
					if gs_horRailStyle_m = 0 then PLACEGROUP subgroup (subgroup ("board round inclined curved V", "handrail round inclined curved"),"board round inclined curved H")
					if gs_horRailStyle_m = 1 then PLACEGROUP subgroup ("board round inclined curved V", "board round inclined curved H")
					if gs_horRailStyle_m = 2 then PLACEGROUP subgroup (subgroup ("board round inclined curved V", "board round inclined curved H"), "horizontalRailRound inclined curved")
					ENDIF
				ENDIF


				KILLGROUP "handrail round inclined curved"
				KILLGROUP "handrail rect inclined curved"
				KILLGROUP "post round inclined curved"
				KILLGROUP "post rect inclined curved"
				KILLGROUP "board rect inclined curved H"
				KILLGROUP "board round inclined curved H"
				KILLGROUP "board rect inclined curved V"
				KILLGROUP "board round inclined curved V"
			if gs_horRailStyle_m = 1 then KILLGROUP "horizontalRailRect inclined curved"
			if gs_horRailStyle_m = 2 then KILLGROUP "horizontalRailRound inclined curved"

		ENDIF
	ENDIF
ENDIF


!!DETAILED 3D END!!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! ** HOTSPOTS ** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

	IF LengthSize = 0 THEN			!!!OVERHANG OF HANDRAIL
		temphroL = -hroL
		temphroR = hroR
		RefPoint1 = 1
		RefPoint2 = -1

		InclRefPoint = -tan(ani)

		temphroLDiag = -hroLDiagonal
		temphroRDiag = hroRDiagonal
	ELSE
		temphroL = hroL
		temphroR = -hroR
		RefPoint1 = -1
		RefPoint2 = 1

		InclRefPoint = tan(ani)

		temphroLDiag = hroLDiagonal
		temphroRDiag = -hroRDiagonal
	ENDIF

	!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** STRAIGHT *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

	IF cfs=0 THEN
		IF ABS(ani)<EPS and ptyp_m=1 THEN

				!!!LENGHT
				HOTSPOT 0,0,ds+hr,unID,lra,1+256 : unID=unID+1
				HOTSPOT lra,0,ds+hr,unID,lra,2 : unID=unID+1
				HOTSPOT -1,0,ds+hr,unID,lra,3 : unID=unID+1

				IF LengthSize = 0 THEN
					HOTSPOT 0,0,0,unID,lra,1+256 : unID=unID+1
					HOTSPOT lra,0,0,unID,lra,2 : unID=unID+1
					HOTSPOT -1,0,0,unID,lra,3 : unID=unID+1

					HOTSPOT 0,0,ds,unID,lra,1+256 : unID=unID+1
					HOTSPOT lra,0,ds,unID,lra,2 : unID=unID+1
					HOTSPOT -1,0,ds,unID,lra,3 : unID=unID+1
				ENDIF

				!!!DISTANCE FROM FLOOR
				HOTSPOT templra/2+LengthSize*hroL,0,0,unID,ds,1+128 : unID=unID+1
				HOTSPOT templra/2+LengthSize*hroL,0,ds,unID,ds,2 : unID=unID+1
				HOTSPOT templra/2+LengthSize*hroL,0,-1,unID,ds,3 : unID=unID+1

				!!!HEIGHT OF RAILING
				HOTSPOT templra/2+LengthSize*hroL,0,ds,unID,hr,1 : unID=unID+1
				HOTSPOT templra/2+LengthSize*hroL,0,ds+hr,unID,hr,2 : unID=unID+1
				HOTSPOT templra/2+LengthSize*hroL,0,-1,unID,hr,3 : unID=unID+1

				!!!POST BASE OVERHANG
				HOTSPOT LengthSize*hroL,0,0,unID,gs_PostBaseOverhang,1 : unID=unID+1
				HOTSPOT LengthSize*hroL,0,-gs_PostBaseOverhang,unID,gs_PostBaseOverhang,2 : unID=unID+1
				HOTSPOT LengthSize*hroL,0,1,unID,gs_PostBaseOverhang,3 : unID=unID+1

				HOTSPOT lra-LengthSize*hroR,0,0,unID,gs_PostBaseOverhang,1 : unID=unID+1
				HOTSPOT lra-LengthSize*hroR,0,-gs_PostBaseOverhang,unID,gs_PostBaseOverhang,2 : unID=unID+1
				HOTSPOT lra-LengthSize*hroR,0,1,unID,gs_PostBaseOverhang,3 : unID=unID+1

				!!!OVERHANG OF RAILING
				HOTSPOT 0,0,ds+hr,unID,hroL,1+128 : unID=unID+1
				HOTSPOT temphroL,0,ds+hr,unID,hroL,2 : unID=unID+1
				HOTSPOT RefPoint1,0,ds+hr,unID,hroL,3 : unID=unID+1

				HOTSPOT lra,0,ds+hr,unID,hroR,1+128 : unID=unID+1
				HOTSPOT lra+temphroR,0,ds+hr,unID,hroR,2 : unID=unID+1
				HOTSPOT lra+RefPoint2,0,ds+hr,unID,hroR,3 : unID=unID+1

		ENDIF

	!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** STRAIGHT CURVED *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

		IF ABS(ani)<EPS and ptyp_m<>1 THEN
			IF ab<360 THEN

					IF ptyp_m=3 THEN
					!!!ROTATE
						HOTSPOT 0,rb,ds,unID,ab,6 : unID=unID+1
						HOTSPOT 0,0,ds,unID,ab,4+256 : unID=unID+1
						HOTSPOT rb*sin(ab),rb-rb*cos(ab),ds,unID,ab,5 : unID=unID+1

						HOTSPOT 0,rb,ds+hr,unID,ab,6 : unID=unID+1
						HOTSPOT 0,0,ds+hr,unID,ab,4+256 : unID=unID+1
						HOTSPOT rb*sin(ab),rb-rb*cos(ab),ds+hr,unID,ab,5 : unID=unID+1

					!!!FIX HOTSPOT AT FLOOR
						HOTSPOT 0,0,0,unID : unID=unID+1
						HOTSPOT rb*sin(ab),rb-rb*cos(ab),0,unID : unID=unID+1
					ENDIF

					!!!HEIGHT OF RAILING
						HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),ds,unID,hr,1+128 : unID=unID+1
						HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),ds+hr,unID,hr,2 : unID=unID+1
						HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),-1,unID,ds,3 : unID=unID+1

					!!! DISTANCE FROM FLOOR
						HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),0,unID,ds,1 : unID=unID+1
						HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),ds,unID,ds,2 : unID=unID+1
						HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),-1,unID,ds,3 : unID=unID+1

					!!!POST BASE OVERHANG
						HOTSPOT 0,0,0,unID,gs_PostBaseOverhang,1+128 : unID=unID+1
						HOTSPOT 0,0,-gs_PostBaseOverhang,unID,gs_PostBaseOverhang,2 : unID=unID+1
						HOTSPOT 0,0,1,unID,gs_PostBaseOverhang,3 : unID=unID+1

						HOTSPOT rb*sin(ab),rb-rb*cos(ab),0,unID,gs_PostBaseOverhang,1+128 : unID=unID+1
						HOTSPOT rb*sin(ab),rb-rb*cos(ab),-gs_PostBaseOverhang,unID,gs_PostBaseOverhang,2 : unID=unID+1
						HOTSPOT rb*sin(ab),rb-rb*cos(ab),1,unID,gs_PostBaseOverhang,3 : unID=unID+1

					IF ptyp_m=2 THEN

					!!!HEIGHT OF RAILING
						HOTSPOT 0,0,ds,unID,hr,1+128 : unID=unID+1
						HOTSPOT 0,0,ds+hr,unID,hr,2 : unID=unID+1
						HOTSPOT 0,0,-1,unID,hr,3 : unID=unID+1

						HOTSPOT rb*sin(ab),rb-rb*cos(ab),ds,unID,hr,1+128 : unID=unID+1
						HOTSPOT rb*sin(ab),rb-rb*cos(ab),ds+hr,unID,hr,2 : unID=unID+1
						HOTSPOT rb*sin(ab),rb-rb*cos(ab),-1,unID,hr,3 : unID=unID+1

					!!! DISTANCE FROM FLOOR
						HOTSPOT 0,0,0,unID,ds,1 : unID=unID+1
						HOTSPOT 0,0,ds,unID,ds,2 : unID=unID+1
						HOTSPOT 0,0,-1,unID,ds,3 : unID=unID+1

						HOTSPOT rb*sin(ab),rb-rb*cos(ab),0,unID,ds,1 : unID=unID+1
						HOTSPOT rb*sin(ab),rb-rb*cos(ab),ds,unID,ds,2 : unID=unID+1
						HOTSPOT rb*sin(ab),rb-rb*cos(ab),-1,unID,ds,3 : unID=unID+1
					ENDIF


			ELSE	!!!ANGLE=360


				!!!HOTSPOTS FOR GRAPHICAL EDITING
				!!!HEIGHT

					HOTSPOT 0,0,ds,unID,hr,1 : unID=unID+1
					HOTSPOT 0,0,ds+hr,unID,hr,2 : unID=unID+1
					HOTSPOT 0,0,-1,unID,hr,3 : unID=unID+1

					HOTSPOT rb,rb,ds,unID,hr,1 : unID=unID+1
					HOTSPOT rb,rb,ds+hr,unID,hr,2 : unID=unID+1
					HOTSPOT rb,rb,-1,unID,hr,3 : unID=unID+1

					HOTSPOT 0,2*rb,ds,unID,hr,1 : unID=unID+1
					HOTSPOT 0,2*rb,ds+hr,unID,hr,2 : unID=unID+1
					HOTSPOT 0,2*rb,-1,unID,hr,3 : unID=unID+1

					HOTSPOT -rb,rb,ds,unID,hr,1 : unID=unID+1
					HOTSPOT -rb,rb,ds+hr,unID,hr,2 : unID=unID+1
					HOTSPOT -rb,rb,-1,unID,hr,3 : unID=unID+1

					HOTSPOT 0,0,0,unID,ds,1 : unID=unID+1
					HOTSPOT 0,0,ds,unID,ds,2 : unID=unID+1
					HOTSPOT 0,0,-1,unID,ds,3 : unID=unID+1

					HOTSPOT rb,rb,0,unID,ds,1 : unID=unID+1
					HOTSPOT rb,rb,ds,unID,ds,2 : unID=unID+1
					HOTSPOT rb,rb,-1,unID,ds,3 : unID=unID+1

					HOTSPOT 0,2*rb,0,unID,ds,1 : unID=unID+1
					HOTSPOT 0,2*rb,ds,unID,ds,2 : unID=unID+1
					HOTSPOT 0,2*rb,-1,unID,ds,3 : unID=unID+1

					HOTSPOT -rb,rb,0,unID,ds,1 : unID=unID+1
					HOTSPOT -rb,rb,ds,unID,ds,2 : unID=unID+1
					HOTSPOT -rb,rb,-1,unID,ds,3 : unID=unID+1

					!!!POST BASE OVERHANG
					HOTSPOT 0,0,0,unID,gs_PostBaseOverhang,1+128 : unID=unID+1
					HOTSPOT 0,0,-gs_PostBaseOverhang,unID,gs_PostBaseOverhang,2 : unID=unID+1
					HOTSPOT 0,0,1,unID,gs_PostBaseOverhang,3 : unID=unID+1

					HOTSPOT rb,rb,0,unID,gs_PostBaseOverhang,1+128 : unID=unID+1
					HOTSPOT rb,rb,-gs_PostBaseOverhang,unID,gs_PostBaseOverhang,2 : unID=unID+1
					HOTSPOT rb,rb,1,unID,gs_PostBaseOverhang,3 : unID=unID+1

					HOTSPOT 0,2*rb,0,unID,gs_PostBaseOverhang,1+128 : unID=unID+1
					HOTSPOT 0,2*rb,-gs_PostBaseOverhang,unID,gs_PostBaseOverhang,2 : unID=unID+1
					HOTSPOT 0,2*rb,1,unID,gs_PostBaseOverhang,3 : unID=unID+1

					HOTSPOT -rb,rb,0,unID,gs_PostBaseOverhang,1+128 : unID=unID+1
					HOTSPOT -rb,rb,-gs_PostBaseOverhang,unID,gs_PostBaseOverhang,2 : unID=unID+1
					HOTSPOT -rb,rb,1,unID,gs_PostBaseOverhang,3 : unID=unID+1
			ENDIF
		ENDIF

	!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** STRAIGHT INCLINED *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

		IF ABS(ani)>EPS and ptyp_m=1 THEN	!!ptyp=Straight
			IF rom_m=1 THEN					!!Vertical Orientation

					IF rmm_m=2 THEN			!!Perpendicular Measurement
						ftw=ftw/cos(ani)
						fbw=fbw/cos(ani)
					ENDIF

					IF rmm_m=1 THEN			!!Vertical Measurement
						temp_ds=ds
						temp_hr=hr
					ELSE					!!Perpendicular Measurement
						temp_ds=dsPerp
						temp_hr=hrPerp
					ENDIF

						!!!	HOTSPOTS FOR GRAPHICAL EDITING
						!!! LENGTH OF RAILING

							HOTSPOT 0,	0,	temp_ds+temp_hr,				unID, lrah, 1+256 : unID=unID+1
							HOTSPOT -1, 0,	temp_ds+temp_hr-tan(ani),		unID, lrah, 3 : unID=unID+1
							HOTSPOT lra,0, 	temp_ds+temp_hr+lra*tan(ani),	unID, lrah, 2 : unID=unID+1

						IF LengthSize = 0 THEN
							HOTSPOT 0,	0,	0,				unID, lrah, 1+256 : unID=unID+1
							HOTSPOT -1, 0,	0-tan(ani),		unID, lrah, 3 : unID=unID+1
							HOTSPOT lra,0, 	0+lra*tan(ani),	unID, lrah, 2 : unID=unID+1

							HOTSPOT 0,	0,	temp_ds,				unID, lrah, 1+256 : unID=unID+1
							HOTSPOT -1, 0,	temp_ds-tan(ani),		unID, lrah, 3 : unID=unID+1
							HOTSPOT lra,0, 	temp_ds+lra*tan(ani),	unID, lrah, 2 : unID=unID+1
						ENDIF

						IF rmm_m=1 THEN
							!!! DISTANCE FROM FLOOR
							HOTSPOT templra/2+LengthSize*hroL,	0,	(templra/2+LengthSize*hroL)*tan(ani),	unID, ds, 1+128 : unID=unID+1
							HOTSPOT templra/2+LengthSize*hroL,	0,	(templra/2+LengthSize*hroL)*tan(ani)-1,	unID, ds, 3 : unID=unID+1
							HOTSPOT templra/2+LengthSize*hroL,	0, 	(templra/2+LengthSize*hroL)*tan(ani)+temp_ds,	unID, ds, 2 : unID=unID+1

							!!! HEIGHT of RAILING
							HOTSPOT templra/2+LengthSize*hroL,	0,	temp_ds+(templra/2+LengthSize*hroL)*tan(ani),	unID, hr, 1+128 : unID=unID+1
							HOTSPOT templra/2+LengthSize*hroL,	0,	temp_ds+(templra/2+LengthSize*hroL)*tan(ani)-1,	unID, hr, 3 : unID=unID+1
							HOTSPOT templra/2+LengthSize*hroL,	0, 	temp_ds+(templra/2+LengthSize*hroL)*tan(ani)+temp_hr,unID, hr, 2 : unID=unID+1

							!!!POST BASE OVERHANG
							HOTSPOT LengthSize*hroL,0,LengthSize*hroL*tan(ani),unID,gs_PostBaseOverhang,1 : unID=unID+1
							HOTSPOT LengthSize*hroL,0,LengthSize*hroL*tan(ani)-gs_PostBaseOverhang,unID,gs_PostBaseOverhang,2 : unID=unID+1
							HOTSPOT LengthSize*hroL,0,LengthSize*hroL*tan(ani)+1,unID,gs_PostBaseOverhang,3 : unID=unID+1

							HOTSPOT lra-LengthSize*hroR,0,LengthSize*hroL*tan(ani)+templra*tan(ani),unID,gs_PostBaseOverhang,1 : unID=unID+1
							HOTSPOT lra-LengthSize*hroR,0,LengthSize*hroL*tan(ani)+templra*tan(ani)-gs_PostBaseOverhang,unID,gs_PostBaseOverhang,2 : unID=unID+1
							HOTSPOT lra-LengthSize*hroR,0,LengthSize*hroL*tan(ani)+templra*tan(ani)+1,unID,gs_PostBaseOverhang,3 : unID=unID+1

						ELSE
							!!! DISTANCE FROM FLOOR
							HOTSPOT templra/2+LengthSize*hroL,	0,	(templra/2+LengthSize*hroL)*tan(ani),	unID, dsPerp, 1+128, ds : unID=unID+1
							HOTSPOT templra/2+LengthSize*hroL,	0,	(templra/2+LengthSize*hroL)*tan(ani)-1,	unID, dsPerp, 3, ds : unID=unID+1
							HOTSPOT templra/2+LengthSize*hroL,	0, 	(templra/2+LengthSize*hroL)*tan(ani)+temp_ds,	unID, dsPerp, 2, ds : unID=unID+1

							!!! HEIGHT of RAILING
							HOTSPOT templra/2+LengthSize*hroL,	0,	temp_ds+(templra/2+LengthSize*hroL)*tan(ani),	unID, hrPerp, 1+128, hr : unID=unID+1
							HOTSPOT templra/2+LengthSize*hroL,	0,	temp_ds+(templra/2+LengthSize*hroL)*tan(ani)-1,	unID, hrPerp, 3, hr  : unID=unID+1
							HOTSPOT templra/2+LengthSize*hroL,	0, 	temp_ds+(templra/2+LengthSize*hroL)*tan(ani)+temp_hr,unID, hrPerp, 2, hr  : unID=unID+1

							!!!POST BASE OVERHANG
							HOTSPOT LengthSize*hroL,0,LengthSize*hroL*tan(ani),unID,gs_PostBaseOverhangPerp,1,gs_PostBaseOverhang : unID=unID+1
							HOTSPOT LengthSize*hroL,0,LengthSize*hroL*tan(ani)-temp_PostBaseOverhang,unID,gs_PostBaseOverhangPerp,2,gs_PostBaseOverhang : unID=unID+1
							HOTSPOT LengthSize*hroL,0,LengthSize*hroL*tan(ani)+1,unID,gs_PostBaseOverhangPerp,3,gs_PostBaseOverhang : unID=unID+1

							HOTSPOT lra-LengthSize*hroR,0,LengthSize*hroL*tan(ani)+templra*tan(ani),unID,gs_PostBaseOverhangPerp,1,gs_PostBaseOverhang : unID=unID+1
							HOTSPOT lra-LengthSize*hroR,0,LengthSize*hroL*tan(ani)+templra*tan(ani)-temp_PostBaseOverhang,unID,gs_PostBaseOverhangPerp,2,gs_PostBaseOverhang : unID=unID+1
							HOTSPOT lra-LengthSize*hroR,0,LengthSize*hroL*tan(ani)+templra*tan(ani)+1,unID,gs_PostBaseOverhangPerp,3,gs_PostBaseOverhang : unID=unID+1

						ENDIF

							!!!OVERHANG OF RAILING
							HOTSPOT 0,0,	temp_ds+temp_hr,				unID,hroLDiagonal,1+128,hroL : unID=unID+1
							HOTSPOT temphroL,0,	temp_ds+temp_hr+temphroL*tan(ani),	unID,hroLDiagonal,2	,hroL	: unID=unID+1
							HOTSPOT RefPoint1,0,temp_ds+temp_hr-InclRefPoint,		unID,hroLDiagonal,3	,hroL	: unID=unID+1

							HOTSPOT lra,0,		temp_ds+temp_hr+lra*tan(ani),				unID,hroRDiagonal,1+128,hroR : unID=unID+1
							HOTSPOT lra+temphroR,0,	temp_ds+temp_hr+lra*tan(ani)+temphroR*tan(ani),	unID,hroRDiagonal,2	,hroR	: unID=unID+1
							HOTSPOT lra+RefPoint2,0,	temp_ds+temp_hr+lra*tan(ani)+InclRefPoint,		unID,hroRDiagonal,3	,hroR	: unID=unID+1


			ELSE			!Perpendicular Orientation
							!Measurement is always perpendicular to inclination in this case

				ROTy -ani

						!!! LENGTH OF RAILING

							HOTSPOT 0,0,ds+hr,unID,lrah,1+256 : unID=unID+1
							HOTSPOT lrah,0,ds+hr,unID,lrah,2 	: unID=unID+1
							HOTSPOT -1,0,ds+hr,unID,lrah,3 	: unID=unID+1

						IF LengthSize = 0 THEN
							HOTSPOT 0,0,0,unID,lrah,1+256 : unID=unID+1
							HOTSPOT lrah,0,0,unID,lrah,2 	: unID=unID+1
							HOTSPOT -1,0,0,unID,lrah,3 	: unID=unID+1

							HOTSPOT 0,0,ds,unID,lrah,1+256 : unID=unID+1
							HOTSPOT lrah,0,ds,unID,lrah,2 	: unID=unID+1
							HOTSPOT -1,0,ds,unID,lrah,3 	: unID=unID+1
						ENDIF


						!!!DISTANCE FROM FLOOR
						HOTSPOT templrah/2+LengthSize*hroLDiagonal,0,0,unID,ds,1+128 : unID=unID+1
						HOTSPOT templrah/2+LengthSize*hroLDiagonal,0,ds,unID,ds,2 : unID=unID+1
						HOTSPOT templrah/2+LengthSize*hroLDiagonal,0,-1,unID,ds,3 : unID=unID+1

						!!! HEIGHT of RAILING
						HOTSPOT templrah/2+LengthSize*hroLDiagonal,0,ds,unID,hr,1 : unID=unID+1
						HOTSPOT templrah/2+LengthSize*hroLDiagonal,0,ds+hr,unID,hr,2 : unID=unID+1
						HOTSPOT templrah/2+LengthSize*hroLDiagonal,0,-1,unID,hr,3 : unID=unID+1

						!!!POST BASE OVERHANG
						HOTSPOT LengthSize*hroLDiagonal,0,0,unID,gs_PostBaseOverhang,1 : unID=unID+1
						HOTSPOT LengthSize*hroLDiagonal,0,-gs_PostBaseOverhang,unID,gs_PostBaseOverhang,2 : unID=unID+1
						HOTSPOT LengthSize*hroLDiagonal,0,1,unID,gs_PostBaseOverhang,3 : unID=unID+1

						HOTSPOT LengthSize*hroLDiagonal+templrah,0,0,unID,gs_PostBaseOverhang,1 : unID=unID+1
						HOTSPOT LengthSize*hroLDiagonal+templrah,0,-gs_PostBaseOverhang,unID,gs_PostBaseOverhang,2 : unID=unID+1
						HOTSPOT LengthSize*hroLDiagonal+templrah,0,1,unID,gs_PostBaseOverhang,3 : unID=unID+1

						!!!OVERHANG OF RAILING
						HOTSPOT lrah,0,ds+hr,unID,hroRDiagonal,1+128 , hroR : unID=unID+1
						HOTSPOT lrah+temphroRDiag,0,ds+hr,unID,hroRDiagonal,2 , hroR 	: unID=unID+1
						HOTSPOT lrah+RefPoint2,0,ds+hr,unID,hroRDiagonal,3 , hroR 	: unID=unID+1

						HOTSPOT 0,0,ds+hr,unID,hroLDiagonal,1+128 , hroL: unID=unID+1
						HOTSPOT temphroLDiag,0,ds+hr,unID,hroLDiagonal,2, hroL 	: unID=unID+1
						HOTSPOT RefPoint1,0,ds+hr,unID,hroLDiagonal,3, hroL 	: unID=unID+1

				DEL 1

			ENDIF

		ENDIF

!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** INCLINED AND CURVED *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!

		IF ABS(ani)>EPS and ptyp_m<>1 THEN

			!!!HOTSPOTS FOR GRAPHICAL EDITING

			IF ptyp_m=3 THEN
				!!!ROTATE
				HOTSPOT 0,rb,ds+lra*sin(ani),unID,ab,6 : unID=unID+1
				HOTSPOT 0,0,ds+lra*sin(ani),unID,ab,4+128 : unID=unID+1
				HOTSPOT rb*sin(ab),rb-rb*cos(ab),ds+lra*sin(ani),unID,ab,5 : unID=unID+1

				HOTSPOT 0,rb,ds+hr+lra*sin(ani),unID,ab,6 : unID=unID+1
				HOTSPOT 0,0,ds+hr+lra*sin(ani),unID,ab,4+128 : unID=unID+1
				HOTSPOT rb*sin(ab),rb-rb*cos(ab),ds+hr+lra*sin(ani),unID,ab,5 : unID=unID+1
			ENDIF

				!!!HEIGHT OF RAILING
				HOTSPOT 0,0,ds,unID,hr,1 : unID=unID+1
				HOTSPOT 0,0,ds+hr,unID,hr,2 : unID=unID+1
				HOTSPOT 0,0,-1,unID,hr,3 : unID=unID+1

				HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),ds+(lra/2)*sin(ani),unID,hr,1 : unID=unID+1
				HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),ds+hr+(lra/2)*sin(ani),unID,hr,2 : unID=unID+1
				HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),-1,unID,hr,3 : unID=unID+1

				!!!DISTANCE FROM FLOOR
				HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),(lra/2)*sin(ani),unID,ds,1 : unID=unID+1
				HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),ds+(lra/2)*sin(ani),unID,ds,2 : unID=unID+1
				HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),-1,unID,ds,3 : unID=unID+1

				HOTSPOT 0,0,0,unID,ds,1 : unID=unID+1
				HOTSPOT 0,0,ds,unID,ds,2 : unID=unID+1
				HOTSPOT 0,0,-1,unID,ds,3 : unID=unID+1

				!!!FIX HOTSPOT AT FLOOR
				HOTSPOT rb*sin(ab),rb-rb*cos(ab),0+lra*sin(ani), unID : unID=unID+1

			IF ptyp_m=2 THEN
				!!!HEIGHT OF RAILING
				HOTSPOT rb*sin(ab),rb-rb*cos(ab),ds+lra*sin(ani),unID,hr,1 : unID=unID+1
				HOTSPOT rb*sin(ab),rb-rb*cos(ab),ds+hr+lra*sin(ani),unID,hr,2 : unID=unID+1
				HOTSPOT rb*sin(ab),rb-rb*cos(ab),-1,unID,hr,3 : unID=unID+1

				!!!DISTANCE FROM FLOOR
				HOTSPOT rb*sin(ab),rb-rb*cos(ab),lra*sin(ani),unID,ds,1+128 : unID=unID+1
				HOTSPOT rb*sin(ab),rb-rb*cos(ab),ds+lra*sin(ani),unID,ds,2 : unID=unID+1
				HOTSPOT rb*sin(ab),rb-rb*cos(ab),-1,unID,ds,3 : unID=unID+1
			ENDIF

				!!!POST BASE OVERHANG
				HOTSPOT 0,0,0,unID,gs_PostBaseOverhang,1+128 : unID=unID+1
				HOTSPOT 0,0,-gs_PostBaseOverhang,unID,gs_PostBaseOverhang,2 : unID=unID+1
				HOTSPOT 0,0,1,unID,gs_PostBaseOverhang,3 : unID=unID+1

				HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),(lra/2)*sin(ani),unID,gs_PostBaseOverhang,1+128 : unID=unID+1
				HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),(lra/2)*sin(ani)-gs_PostBaseOverhang,unID,gs_PostBaseOverhang,2 : unID=unID+1
				HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),(lra/2)*sin(ani)+1,unID,gs_PostBaseOverhang,3 : unID=unID+1

				HOTSPOT rb*sin(ab),rb-rb*cos(ab),lra*sin(ani),unID,gs_PostBaseOverhang,1+128 : unID=unID+1
				HOTSPOT rb*sin(ab),rb-rb*cos(ab),lra*sin(ani)-gs_PostBaseOverhang,unID,gs_PostBaseOverhang,2 : unID=unID+1
				HOTSPOT rb*sin(ab),rb-rb*cos(ab),lra*sin(ani)+1,unID,gs_PostBaseOverhang,3 : unID=unID+1
		ENDIF

	ENDIF
end
]]>
</Script_3D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_2D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
call "railSymbol2D_m" parameters all	bEnable2DPosts		= 1,
										iHandRailStyle		= hrt_m,
										handRailDiameter	= hrd,
										handRailWidth		= hrw,
										bBreakRailLine		= 0,
										bPostNoCalculation	= 0

]]>
</Script_2D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_1D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
!!Rail Post with Balusters

EPS=0.0001


IF pt_m=1 THEN
	dpost=pw/2
ELSE
	dpost=pd/2
ENDIF


!!!!!! Railing Length

IF LengthSize = 1 THEN
	lra2=(lra - (hroL + hroR))
	lrah2=(lrah - (hroLDiagonal + hroRDiagonal))
	templra=lra2
	templrah=lrah2
	XStartPoslra=hrol
	ZStartPoslra=hrol*tan(ani)
	XStartPoslrah=hroLDiagonal
ELSE
	templra=lra
	templrah=lrah
	XStartPoslra=0
	ZStartPoslra=0
	XStartPoslrah=0
ENDIF



!!PARAMETER INPUT CALCULATION!!

IF ptyp_m=1 THEN
	HIDEPARAMETER "ab"
	HIDEPARAMETER "rb"
	HIDEPARAMETER "res"
ENDIF

IF ptyp_m=2 THEN
	IF ABS(rb)>EPS THEN
		PARAMETERS ab=(lra*180)/(rb*pi)
		LOCK "ab"
	ENDIF
ENDIF

IF ptyp_m=3 THEN
	PARAMETERS lra=(rb*pi*ab)/180
	LOCK "lra"
ENDIF


!!POST AND BOARD CALCULATION!!
!!POST SPACING CALCULATION FOR STRAIGHT AND CURVED RAILS

IF rom_m=2 AND rmm_m=2 THEN
	distpost=templrah/(np-1)
ELSE
	distpost=templra/(np-1)
ENDIF

IF ABS(ab-360)<EPS and ABS(ani)<EPS THEN
	anglepost=ab/np
ELSE
	anglepost=ab/(np-1)
ENDIF


!!BOARD SPACING CALCULATION FOR STRAIGHT AND CURVED RAILS

IF pt_m=1 THEN
	IF ABS(rb)>EPS THEN		!!rb<>0
		dpostangle=180*(pw/2)/(rb*pi)
	ELSE
		dpostangle=0
	ENDIF
ELSE
	IF ABS(rb)>EPS THEN		!!rb<>0
		dpostangle=180*(pd/2)/(rb*pi)
	else
		dpostangle=0
	ENDIF
ENDIF

IF bt_m=1 THEN
	dboard=bw
	IF ABS(rb)>EPS THEN		!!rb<>0
		dboardangle=180*bw/(rb*pi)
	else
		dboardangle=0
	ENDIF
ELSE
	dboard=bd
	IF ABS(rb)>EPS THEN		!!rb<>0
		dboardangle=180*bd/(rb*pi)
	ELSE
		dboardangle=0
	ENDIF
ENDIF

distboard=(distpost-2*dpost-nb*dboard)/(nb+1)
distboardangle=(anglepost-2*dpostangle-nb*dboardangle)/(nb+1)



!!ADDITIONAL CALCULATION FOR CURVED AND INCLINED RAILS!!

IF ptyp_m<>1 and ABS(ab)>EPS or ABS(rb)>EPS THEN
	!!! *** General data

		alphahroL=(hroL*180)/(rb*pi) 			!Overhung angle
		alphahroR=(hroR*180)/(rb*pi) 			!Overhung angle
	deltaz=templra*sin(ani)					!Total height to rise

	!!! *** For segment points
	nalphaincl=int(ab/(360/res))+1		!number of segment points without overhung
	alphaincl=ab/nalphaincl  			!angle between segment points

		nalphahroL=int(alphahroL/alphaincl)	!number of segment points at handrail overhung
		nalphahroR=int(alphahroR/alphaincl)	!number of segment points at handrail overhung
	deltazincl=deltaz/nalphaincl 		!vertical step between segment points

	!!! *** For posts
	deltazpost=deltaz/(np-1)			!vertical step between posts

	!!! *** For Boards
	deltazboard0=((dpostangle+distboardangle+dboardangle/2)*deltaz)/ab 	!vertical first step between boards
	deltazboard=((distboardangle+dboardangle)*deltaz)/ab				!vertical step between boards
ENDIF
]]>
</Script_1D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_PR SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_PR>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_UI SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_UI>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Comment SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Comment>

<Picture MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="0" length_in_bytes="2817" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D494844520000007F0000
	007F0803000000F163ED21000000DE504C5445FFFFFFCAA45BB3945374633ACC
	AB63C49C53B8A26C725D33F0F0EFD2B473D1B36CB49C62AD9253766843D0AA5D
	71592EC4994CCDB26BB3914DD1AC63BDA974EAE2CDD5BA83DAC28B896D3B8970
	3EE9DABBAD8B4BBAB3A0EDE8D58A7342EEEDEADAC392E5DBC4BDA05CC6A14EA2
	8A53C9B98CD5C9AA9C7C42CBBA94968565DCD9D0B8AE99DBD6CC8C7C50E5D2AD
	F0EEEAB9B19C9D834AE3CDA9CEB473C1AC7BC48C42DED5BCD9CEB2BBAB839A7A
	3FB28C4A988D716E542BE0CB9C6F5B30A07F45C9BFA3A87837CFC4A8C2853FB0
	8F52D3BF939E9075CAC3B4A89B81CFC09D7CF2FD5F000009D449444154785EE5
	9BD596DC4812863B2241CC2A666C66340E2FBCFF0BADA4CAC81AA7D67683BAEA
	62EACA373EDFF9FF60497DB09FDFE4609FBFD1CA3BBADC1BDD3EF23CCFC7D69E
	F0EBDCF77C1FC5C57EACCFBD028F227346FB48BB959488E94791F5F711F83516
	D21145F8C5DE03BE2F510E528CC3CE682F35E74B7F8010BBFBB07E72247D7F30
	582CE2F61E0ADF7EC0B95FF021C6B0BD7BFC2CF74BFC1CD271EF3EDB7DE06581
	1FCC617E731474EF77AC7FB2F66411F801E0F4F2E0D41AC36EF98FB987FE2085
	392F2B7EC87AD0D9A5F57752E2A0B03EDDD4DCF0EBA1EBECB0D916D62F5384F4
	FA8F5905386563D815DFFEAFF4103105689F597F6C3ADE151BEFAAFE1EA4441F
	1160353A3863F71BFE3018879DDD4C5994259D67ADB2FE2D4EFCC364BA8BC0A3
	4444CCF826ED4E98E69FDFBE3BDF5E7B5E5ED21D4C368033E25F05E3E4BDFD9F
	C92AF2C0A74F6387F8A18EBFDB79FF8A4744485A07C3B150FC20A3FCBF76A7EF
	3B6525A22720EBDB056D1C6E0027C1DD48D7FFFBE9B71FF3022F318669412FF9
	5C991238A4BFF77EFD7FB6F272DF2FE8BC4CBB8A0F147FE792F8EFA57F541E15
	E809C1734ABB53E29F04C9E89DF94779414714FCE272487CEDFFD936FEBD77E9
	FF0F5E5E6847019DC9DFB0C3B1ABF896ABF447BDB0797E2BCF4BBC00A7F54DD8
	87E754FFD47F9FAC6EEC34BF5E496FF927179C6CEFB9A4DF31FADF11F19B6CB6
	E8FBC8B9F07ED16107E29BFDF7B469FE43EE4B44E4D09E1C0FDAC4E7E43F273E
	68BE683768FD93F4E400C12DE7DCF1B1A3B0F5FC8F88CF3E84ED066F59F47C1F
	92ECA6EC2E9F7E23FDC7DA0830F5478DE9B71FA5EF793EBA1CEC0A727CDD21AC
	4E44E24731E9EF36A47F26CB7697823B079564C7CB8E4E3B533FF9FFAB35E64E
	330F314AED98F16B96C48A3F6853DA69FD21F98F7AFEDD674D3C3FAA8A0EDC8B
	33C652E21F4F49B66BFACF60CB6FBF3DF0A57484AC6317CA1828FEBFFCA961FB
	696F61E6BF75F8D6FC9BE573898869588DF452BFA27D22BEEE7F4F5D65CD8CFC
	1F5ADDACF3D6CDD64F5188EC8B72360A81FCEF18FE9F7645DDFFACFD96665B6D
	F522065F5C283E0350FE0F88DFE3CA882E273ED7FC37F8FF28E7BE8F6918772E
	99DF37F9C7DAFF438AFF5898FBF71BEABF95CBF2925EC46E316519AE378558F0
	B9F69F6C07E31F3396AAFA67AFBDBF2E5773F4CB9A83CA7836B8519B4DE0B4A9
	FE1DC2C646FF3FB128FEC1B93B7D55E0E7E5E32B1FE2B65D31D8F242F31DC5BF
	6E13BFEE3FEAFBCB7905BF2FA59FFAC861A0FAF801FB48F10F9C5BE26BFD596D
	FE843AFF78E7E5CDB67A8233077E64DDCF145FC5FF24609A3F681BB2AFBA31F1
	E1D5F7D7E5912CE8690AE9747212DC937EBC20FDB7DCD4DF03D26FD6FF55E17F
	E745F407293D1CA4732803AFF7D88300B7F547FC0FDF8F7F70ABFBEF8BEA6F56
	D2FF4C01F848C591F892F891AEFFC3B6D9FF7AFAFE73F4FC87CE0B365B75CBA6
	1F47E463CD7FE612FF17E26BFF7BDAFF44E7DFB39F7F4DA6E59C4B11E08E01F1
	E31FE81F10FF432DFF02C756FE3FF7FEB2D7D293D5946DDB27ECBE457544FA41
	F12316EAFCD3FE87DA087DFFB6E8FE7A9EFED9DD5C561B863322DBAB38BAC447
	AD7F1152FCCDFA1B1EDE9AFE47BDD8795EE037EF88FA343E288F8CF8CFA2ADFF
	B5F9373CBFADEFBF3FE7DB5359DDB2C06F6D3DBEE88EB78DFC8BAC30AECD7F30
	F77F0B9E7FFF3CC80A2F12A08362EB3F4B5A8A2F2EEAF9F785B0B5FB97B95B7E
	FBA7CDB6A473A735ECB906FF2C4894FF51AAF8160B43BDFF51FCB979FF4650F9
	36E3CB5FC48FF893232F978842B87DF2B192EDD4EA9FF8CC12A0FD37645F6DEF
	4F689559850883EC07FEFF2E65BEC4B980F525E511A59DC18FD22F4A5994417D
	FF272340EB6FD9531F39F47EE0FF435E55BC10D032C667704B7CEDFFC71BB5D9
	30119BF57F9E98F9C7161DE9CF61FDC47A59E7BBAFC4ABB4039EB92DF3BF27C4
	5FE8F94FFB2F8BB9597FE3A4AE3F0528CE852BF6BDF72FBFE6151E60C9427764
	AC4F5A7F14B7B47EE267BAFF69FF75FC412DED872954165EB1EFBDFF3A3E5F7A
	82C3D4662C716DC5776AFA89CF623D7FB850F787AEFF434EF38F6F96F6A5E0EA
	FD4BC1FFFFFAFF1D0428CA3463CCA5F8D7EA7F162D74FC353FCE14DFA83FB588
	F42562214B4544FB5FFFFD076795320BB4FF1DB3FE2DD2AFFBBF650128BEB7A6
	B1077A111EE51E42F9C695F83F9D7F8C117F3806D3FF48EF9F42E77FA2F77F3D
	FF351F3C44D5BBD5FDF7E167F3CF622ED8063FD2FA43D23FF842FD0FA8FF0DC8
	FFDEA622EDA74340FD9DC173EF2FC642B765EAD77C20FDBFFD65DE5FD4FF48FF
	2CF751DC4C08F0DCF75F81E53AB6BDF191DAE767EDBF20BEAABF13C6B86BEEDF
	DD78D36C797B524BF3C39BCB9FF003C719D11C37F3DF22BE252E546B089C84EA
	BFA3F993B587C279D50736ACE0DBBA8E74DA29B5407CECD7EEAFA5E68B1C05EF
	93D017F2995BEBBF96DE3FF976FF21FF1353FF5337444136BFF817B0C4B14DFF
	458D9FEAFB53F149FF64E52D858AE0EBFC27FDA73D20FD5CEF3FC457F19FB120
	E17FBBBF276B8990BDE5CBAACF2C01DB567944F94FFABF52FE055EADFF1D1F3A
	C50847CE2FDEF46D0F630BA5FFA9179BF5CF44EDFEFBBAE5F33B89BC7C03F236
	7E08AAFEBB407C69F29924FD0C52CD4778FB475D91D24FEB83317F4DFD165B54
	FA278F4B0F9206BE2C62911B129F133F6D99FD577E1BFF7EEE71B869E2A3AE28
	5AD0C3922E37F7FF809BF76FC400AADD2DA366FB667EB830F54729EDFF74FF58
	3EF12D11AF2405BE819F1585A47F2C8CC74723E6B60CFD96250041AD578DF02D
	A168575D51AB3F97F4E336FE5CFCD5E02765CCCA88AFF55B82FC37F48F56C8B8
	68C87AAABFADFFA1E2079CF427B6BDBDFF264728C3AE400234147F2128FF63F3
	FE8A487F34B8B1D712B9F86071688C4DFB2FE98F49BF7E10008A6F7D5C710FB2
	F623B352D1AC7EE612BF0BF5FB8BF26F293CEE8CAAFD2F69563F7343DBBC3F9D
	6FF5DB47D708D94CED7FD0349FF65F7DFF51D99F45556BEECBB908F5FE19A78D
	F223E6D2FC3BDFDE5FB6ADEFCF91C4EA96D5FB77DCB07ED0FA894FFA6751DC5F
	A1E06539103F4A9BF5DFB2DC50E9D78F4F22D26FC5829AADD61F8A86F58721E9
	770DFD6B16024C0940FE37AC9F71BA3FB7F15F94FA47773E000D40CDB71AE607
	CC758CE71F55DA4F3AE8036F9980B3E386BF672E5FE8D86AFFD67C68AD1181EF
	E22F0602D6716AF74FCC11F974277F33C2184FEC6FF7CF470B10DAA37747D3FD
	43FA37FE5FFEEE0DA8E676C2775CBA7FA0149F238AFE2EACA7FB0B8A6C277EEB
	CE4B05057E37FA23005BF1172BC467DCB24DCF1F97F473C46CB63B34ED3F9B6E
	FFE05D03D02DBB4BFD55FF1FDD21427BA774DA3F216CD92B4981DFB97E2B84A9
	F4E27DFC8112DD3F2804DDB27BE087001D9A69FBE067E17EACA7FC0768ED916F
	7D8E61D7896FEEFF7BE54759F88FD6CFC0B5F7AB7FBFF95FEAB7F7EBFF3EF533
	8BDE7FFD33F54F3E75768AFF1F2759FF14E70597DC0000000049454E44AE4260
	82
	]]>
</Picture>

<CalledMacros SectVersion="2" SectionFlags="0" SubIdent="0">
	<Macro>
		<MName><![CDATA["railSymbol2D_m"]]></MName>
		<MainGUID>C5C904E6-1706-4CD1-BC8D-6C294B5B40F7</MainGUID>
	</Macro>
</CalledMacros>

<Copyright SectVersion="1" SectionFlags="0" SubIdent="0">
	<Author>GRAPHISOFT</Author>
	<License>
		<Type>CC BY-ND</Type>
		<Version>3.0</Version>
	</License>
</Copyright>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_FWM SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_FWM>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_BWM SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_BWM>

<Keywords SectVersion="1" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Keywords>

</Symbol>
