<?xml version="1.0" encoding="UTF-8"?>
<Symbol IsArchivable="true" IsPlaceable="false" MainGUID="B8221B77-5B8C-480C-BCCB-48839B78C747" MigrationValue="Normal" Owner="1196638531" Signature="1196644685" Version="43">
<Ancestry SectVersion="1" SectionFlags="0" SubIdent="0" Template="false">
	<MainGUID>F938E33A-329D-4A36-BE3E-85E126820996</MainGUID>
	<MainGUID>103E8D2C-8230-42E1-9597-46F84CCE28C0</MainGUID>
	<MainGUID>784EAEA1-5041-4AA6-B6F4-EF263A891EE7</MainGUID>
	<MainGUID>09BEB35E-7BF8-448C-B408-AC04D159B0D1</MainGUID>
</Ancestry>

<ParamSection SectVersion="22" SectionFlags="0" SubIdent="0">
	<ParamSectHeader>
		<AutoHotspots>false</AutoHotspots>
		<StatBits>
			<STBit_FixSize/>
		</StatBits>
		<WDLeftFrame>0</WDLeftFrame>
		<WDRightFrame>0</WDRightFrame>
		<WDTopFrame>0</WDTopFrame>
		<WDBotFrame>0</WDBotFrame>
		<LayFlags>65535</LayFlags>
		<WDMirrorThickness>0</WDMirrorThickness>
		<WDWallInset>0</WDWallInset>
	</ParamSectHeader>
	<Parameters>
		<Length Name="A">
			<Description><![CDATA["Dimension 1"]]></Description>
			<Fix/>
			<Value>1.8</Value>
		</Length>
		<Length Name="B">
			<Description><![CDATA["Dimension 2"]]></Description>
			<Fix/>
			<Value>0.05</Value>
		</Length>
		<Length Name="ZZYZX">
			<Description><![CDATA["Height"]]></Description>
			<Fix/>
			<Value>0.9</Value>
		</Length>
		<Integer Name="gs_detlevel_3D_m">
			<Description><![CDATA["3D"]]></Description>
			<Value>2</Value>
		</Integer>
		<Boolean Name="cfs">
			<Description><![CDATA["Called as Macro from Stair"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- RailBalust_sp0: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="RailBalust_sp0">
			<Description><![CDATA["General Dimensions"]]></Description>
		</Title>
		<Integer Name="ptyp_m">
			<Description><![CDATA["Rail and Parameter Input Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Angle Name="ani">
			<Description><![CDATA["Inclination Angle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Integer Name="rom_m">
			<Description><![CDATA["Rail Orientation Method"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="rmm_m">
			<Description><![CDATA["Rail Measurement Method"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="LengthSize">
			<Description><![CDATA["'A' Size=Handrail Length"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="lra">
			<Description><![CDATA["Horizontal Length of Railing"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1.5</Value>
		</Length>
		<Length Name="lrah">
			<Description><![CDATA["Length of Railing"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1.5</Value>
		</Length>
		<Length Name="hr">
			<Description><![CDATA["Height of Railing"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.75</Value>
		</Length>
		<Length Name="hrPerp">
			<Description><![CDATA["Height of Railing"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.75</Value>
		</Length>
		<Angle Name="ab">
			<Description><![CDATA["Angle of Bending"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>85.9436692696</Value>
		</Angle>
		<Length Name="rb">
			<Description><![CDATA["Radius of Bending"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="ds">
			<Description><![CDATA["Distance from Slab/Stair"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.15</Value>
		</Length>
		<Length Name="dsPerp">
			<Description><![CDATA["Distance from Slab/Stair"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.15</Value>
		</Length>
		<Angle Name="gs_AngleL">
			<Description><![CDATA["Left End Cutting Angle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>90</Value>
		</Angle>
		<Angle Name="gs_AngleR">
			<Description><![CDATA["Right End Cutting Angle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>90</Value>
		</Angle>

		<!-- RailBalust_sp1: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="RailBalust_sp1">
			<Description><![CDATA["Structural Dimensions"]]></Description>
		</Title>
		<Integer Name="hrt_m">
			<Description><![CDATA["Handrail Style"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="hrd">
			<Description><![CDATA["Handrail Diameter"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="hrw">
			<Description><![CDATA["Handrail Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="hrh">
			<Description><![CDATA["Handrail Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.025</Value>
		</Length>
		<Length Name="hro">
			<Description><![CDATA["Handrail Overhang"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="hroL">
			<Description><![CDATA["Handrail Overhang - Left"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.15</Value>
		</Length>
		<Length Name="hroR">
			<Description><![CDATA["Handrail Overhang - Right"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.15</Value>
		</Length>
		<Length Name="hroLDiagonal">
			<Description><![CDATA["Handrail Overhang - Left"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.15</Value>
		</Length>
		<Length Name="hroRDiagonal">
			<Description><![CDATA["Handrail Overhang - Right"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.15</Value>
		</Length>
		<Integer Name="pt_m">
			<Description><![CDATA["Post Style"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="np">
			<Description><![CDATA["No. of Posts"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>3</Value>
		</Integer>
		<Length Name="pd">
			<Description><![CDATA["Post Diameter"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.035</Value>
		</Length>
		<Length Name="pw">
			<Description><![CDATA["Post Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.035</Value>
		</Length>
		<Length Name="pth">
			<Description><![CDATA["Post Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.035</Value>
		</Length>
		<Length Name="gs_PostBaseOverhang">
			<Description><![CDATA["Post Base Overhang"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_PostBaseOverhangPerp">
			<Description><![CDATA["Post Base Overhang"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Integer Name="bt_m">
			<Description><![CDATA["Board Style"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="nb">
			<Description><![CDATA["No. of Balusters between Posts"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Length Name="bd">
			<Description><![CDATA["Baluster Diameter"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.02</Value>
		</Length>
		<Length Name="bw">
			<Description><![CDATA["Baluster Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.02</Value>
		</Length>
		<Length Name="bth">
			<Description><![CDATA["Baluster Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.02</Value>
		</Length>
		<Length Name="sbh">
			<Description><![CDATA["Sub-board Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.15</Value>
		</Length>

		<!-- gs_3D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_3D_representation">
			<Description><![CDATA["3D Representation"]]></Description>
		</Title>
		<Integer Name="res">
			<Description><![CDATA["Rail Arc Resolution"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>42</Value>
		</Integer>
		<Integer Name="rescs">
			<Description><![CDATA["Cross Section Resolution"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>12</Value>
		</Integer>
		<Boolean Name="gs_shadow">
			<Description><![CDATA["Shadow"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="AC_show2DHotspotsIn3D">
			<Description><![CDATA["Show 2D Hotspots in 3D"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="ac_bottomlevel">
			<Description><![CDATA["Bottom Level"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="ac_toplevel">
			<Description><![CDATA["Top Level"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>

		<!-- gs_2D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_2D_representation">
			<Description><![CDATA["2D Representation"]]></Description>
			<Fix/>
		</Title>
		<PenColor Name="gs_cont_pen">
			<Description><![CDATA["Contour Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</PenColor>
		<FillPattern Name="gs_fill_type">
			<Description><![CDATA["Fill Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_fill_pen">
			<Description><![CDATA["Fill Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>91</Value>
		</PenColor>
		<PenColor Name="gs_back_pen">
			<Description><![CDATA["Fill Background Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>91</Value>
		</PenColor>
		<Boolean Name="bPostSymbol">
			<Description><![CDATA["Post Symbol"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="sa">
			<Description><![CDATA["Show Axis"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<LineType Name="al">
			<Description><![CDATA["Axis Line Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>6</Value>
		</LineType>
		<PenColor Name="gs_RailAxisPen">
			<Description><![CDATA["Axis Line Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>16</Value>
		</PenColor>
		<Integer Name="iPostSymbolType">
			<Description><![CDATA["Post Symbol Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<LineType Name="postLineType">
			<Description><![CDATA["Post Line Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</LineType>
		<PenColor Name="postPen">
			<Description><![CDATA["Post Line Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>16</Value>
		</PenColor>

		<!-- RailBalust_sp2: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="RailBalust_sp2">
			<Description><![CDATA["Surfaces"]]></Description>
		</Title>
		<Material Name="fmat">
			<Description><![CDATA["Handrail"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="pmat">
			<Description><![CDATA["Post"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="bmat">
			<Description><![CDATA["Baluster"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>

		<!-- gs_list: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_list">
			<Description><![CDATA["Parameters for Listing"]]></Description>
			<Fix/>
		</Title>
		<RealNum Name="gs_list_cost">
			<Description><![CDATA["Cost"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="gs_list_manufacturer">
			<Description><![CDATA["Manufacturer"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_note">
			<Description><![CDATA["Note/Remarks"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_location">
			<Description><![CDATA["Location"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_accessories">
			<Description><![CDATA["Accessories"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_Type">
			<Description><![CDATA["Group Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Другой"]]></Value>
		</String>
		<Integer Name="iFMType">
			<Description><![CDATA["Group Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>25</Value>
		</Integer>
		<String Name="FM_InventoryNumber">
			<Description><![CDATA["Inventory No."]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_SerialNumber">
			<Description><![CDATA["Serial No."]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_ProductionYear">
			<Description><![CDATA["Production Year"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<RealNum Name="FM_ObjectWeight">
			<Description><![CDATA["Object Weight"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="FM_ObjectWeightUnit">
			<Description><![CDATA["Object Weight Unit"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["кг"]]></Value>
		</String>
		<String Name="gs_list_custom1">
			<Description><![CDATA["User Defined 1"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom2">
			<Description><![CDATA["User Defined 2"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom3">
			<Description><![CDATA["User Defined 3"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom4">
			<Description><![CDATA["User Defined 4"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom5">
			<Description><![CDATA["User Defined 5"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
	</Parameters>
</ParamSection>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_VL SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
! GENERAL PARAMETERS
values "gs_detlevel_3D_m" 2,1,0	! Detailed, Simple, Off


! GENERAL RAIL GEOMETRY PARAMETERS
values "ptyp_m" 1,2,3			! Straight, Curve Length and Radius, Angle and Radius


IF ptyp_m<>1 OR ABS(ani)<EPS  THEN
	VALUES "rom_m" 1
	VALUES "rmm_m" 1
	HIDEPARAMETER "lrah"
ELSE
	VALUES "rom_m"  1,2
	IF rom_m=2 then
		VALUES "rmm_m" 2
	ELSE
		VALUES "rmm_m" 1,2
	ENDIF
ENDIF

IF ptyp_m<>1 THEN	HIDEPARAMETER "LengthSize"

IF LengthSize = 0 OR ptyp_m<>1 THEN
	VALUES "a" lra+hroL+hroR
ELSE
	VALUES "a" lra
ENDIF
VALUES "zzyzx" ds+hr


! STRUCTURAL DIMENSION PARAMETERS
VALUES "hrt_m" 1,2		! Rectangular, Round
IF hrt_m=2 then
	HIDEPARAMETER "hrw","hrh"
ELSE
	HIDEPARAMETER "hrd"
ENDIF


IF ptyp_m<>1 then
	IF hrt_m=1 then VALUES "b" hrw
	IF hrt_m=2 then VALUES "b" hrd
	lock "a","b","zzyzx"
ELSE
	IF hrt_m=1 then
		IF GLOB_MODPAR_NAME = "B" THEN PARAMETERS hrw=B
		IF GLOB_MODPAR_NAME = "hrw" THEN PARAMETERS B=hrw
		IF GLOB_MODPAR_NAME = "hrt_m" THEN PARAMETERS hrw=B
	ELSE
		IF GLOB_MODPAR_NAME = "B" THEN PARAMETERS hrd=B
		IF GLOB_MODPAR_NAME = "hrd" THEN PARAMETERS B=hrd
		IF GLOB_MODPAR_NAME = "hrt_m" THEN PARAMETERS hrd=B
	ENDIF
	lock "a","zzyzx"
ENDIF


VALUES "pt_m" 1,2		! Rectangular, Round
IF pt_m=2 then
	HIDEPARAMETER "pw","pth"
ELSE
	HIDEPARAMETER "pd"
ENDIF


VALUES "bt_m" 1,2		! Rectangular, Round
IF bt_m=2 then
	HIDEPARAMETER "bw","bth"
ELSE
	HIDEPARAMETER "bd"
ENDIF


IF ptyp_m<>1 OR rom_m<>1 THEN
	LOCK "gs_AngleL"
	LOCK "gs_AngleR"
ENDIF


if gs_cont_pen<=0 then parameters gs_cont_pen=2
if gs_fill_pen<=0 then parameters gs_fill_pen=91

!PARAMETER RANGE DEFINITION

if LengthSize then
	VALUES "lra" 	RANGE(hroL+hroR,)
	VALUES "lrah" 	RANGE((hroL+hroR)/cos(ani),)
else
	VALUES "lra" 	RANGE(0,)
	VALUES "lrah" 	RANGE(0,)
endif
values "hr" RANGE(hrh+bw,)

values "res" range[3,)
values "rescs" range[3,)

if hrt_m = 1 and pt_m = 1 and bt_m = 1 then
	lock			"rescs"
	hideparameter	"rescs"
endif

VALUES "B" RANGE(0,)

VALUES "gs_AngleL" 	range(0,180)
VALUES "gs_AngleR" 	range(0,180)

VALUES "hro"	RANGE [0,)

IF LengthSize=1 OR ABS(gs_AngleL-90)<EPS THEN		!! gs_AngleL=90
	VALUES "hroL"	RANGE [dpost,)
ELSE
	VALUES "hroL"	RANGE [0,)
ENDIF

IF LengthSize=1 OR ABS(gs_AngleR-90)<EPS THEN		!! gs_AngleR=90
	VALUES "hroR"	RANGE [dpost,)
ELSE
	VALUES "hroR"	RANGE [0,)
ENDIF

VALUES "hroLDiagonal"	RANGE [dpost,)
VALUES "hroRDiagonal"	RANGE [dpost,)

VALUES "ani" range(-90, 0), range (0, 90)

VALUES "hrd" RANGE(0,)
VALUES "hrw" RANGE(0,)
VALUES "hrh" RANGE(0,)
VALUES "np"	RANGE [2,)

VALUES "pd" RANGE(0,)
VALUES "pw" RANGE(0,)
VALUES "pth" RANGE(0,)
VALUES "gs_PostBaseOverhang" RANGE [0,)
VALUES "gs_PostBaseOverhangPerp" RANGE [0,)

VALUES "nb"	RANGE [0,)
VALUES "bd" RANGE[0,)
VALUES "bth" RANGE(0,)
VALUES "bw" RANGE(0,)
values "sbh" range[0,)


IF ABS(ani)<EPS THEN
	VALUES "ab" RANGE (0,360]
	LOCK "rom_m","rmm_m"
ELSE
	VALUES "ab" RANGE (0,)
ENDIF


! Distance from Slab/Stair
if GLOB_MODPAR_NAME = "dsPerp" then
	ds = dsPerp * cos(ani)
	parameters ds = ds
else
	dsPerp = ds / cos(ani)
	parameters dsPerp = dsPerp
endif

! Height of Railing
if GLOB_MODPAR_NAME = "hrPerp" then
	hr = hrPerp * cos(ani)
	parameters hr = hr
else
	hrPerp = hr / cos(ani)
	parameters hrPerp = hrPerp
endif

! Post Base Overhang
if GLOB_MODPAR_NAME = "gs_PostBaseOverhangPerp" then
	gs_PostBaseOverhang = gs_PostBaseOverhangPerp * cos(ani)
	parameters gs_PostBaseOverhang = gs_PostBaseOverhang
else
	gs_PostBaseOverhangPerp = gs_PostBaseOverhang / cos(ani)
	parameters gs_PostBaseOverhangPerp = gs_PostBaseOverhangPerp
endif

! Left Overhang of Railing
if GLOB_MODPAR_NAME = "hroLDiagonal" then
	hroL = hroLDiagonal * cos(ani)
	parameters hroL = hroL
else
	hroLDiagonal = hroL / cos(ani)
	parameters hroLDiagonal = hroLDiagonal
endif

! Right Overhang of Railing
if GLOB_MODPAR_NAME = "hroRDiagonal" then
	hroR = hroRDiagonal * cos(ani)
	parameters hroR = hroR
else
	hroRDiagonal = hroR / cos(ani)
	parameters hroRDiagonal = hroRDiagonal
endif

! COMPABILITY OF OVERHANG OF RAILING
EPS=0.00001
IF GLOB_MODPAR_NAME = "hroL" OR GLOB_MODPAR_NAME = "hroR" then
	parameters hro = 0
ELSE
	if abs(hro) > EPS then
		parameters 	hroL = hro,
					hroR = hro,
					hroLDiagonal=hro/cos(ani),
					hroRDiagonal=hro/cos(ani)
	endif
ENDIF
]]>
</Script_VL>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_3D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
IF gs_detlevel_3D_m=0 THEN end

IF gs_shadow=0 THEN SHADOW OFF

templra = max(templra, EPS)
PEN gs_cont_pen
unID=1

	IF hrt_m=1 THEN		!!! HANDRAIL WIDTH
		fth=pth
		HandrailWidth=hrw
		ELSE
		fth=pd
		HandrailWidth=hrd
	ENDIF

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** SIMPLE 3D *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


!!!CALCULATION FOR CONNECTING ANGLE

XPosL0=(HandrailWidth/2)/tan(gs_AngleL)
XPosR0=(HandrailWidth/2)/tan(gs_AngleR)

XPosL=ABS((HandrailWidth/2)/tan(gs_AngleL))
XPosR=ABS((HandrailWidth/2)/tan(gs_AngleR))
YPosL=(XPosL*tan(ani))
YPosR=(XPosR*tan(ani))


IF gs_detlevel_3D_m=1 THEN		!!Simple

	MATERIAL pmat
	RESOL res


	!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** STRAIGHT *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

		IF ABS(ani)<EPS and ptyp_m=1 THEN		!!ptyp=Straight

			ADDx XStartPoslra
			ADDz ds
				PRISM_ 5,hr,
					XPosL0,fth/2,15,
					-XPosL0,-fth/2,15,
					templra+XPosR0,-fth/2,15,
					templra-XPosR0,fth/2,15,
					XPosL0,fth/2,-1
			DEL 2

		ENDIF

	!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** STRAIGHT CURVED *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

		IF ABS(ani)<EPS and ptyp_m<>1 THEN

		!!!!FRAME

			IF ab<360 THEN
					ADDz ds
					PRISM_ 10,hr,
						0,fth/2,15,
						0,-fth/2+0.00005,15,
						0,-fth/2,79,
						1,0,800,
						(rb+(fth/2))*sin(ab),rb-(rb+(fth/2))*cos(ab),1015,
						(rb-(fth/2)+0.00005)*sin(ab),rb-(rb-(fth/2)+0.00005)*cos(ab),15,
						(rb-(fth/2))*sin(ab),rb-(rb-(fth/2))*cos(ab),79,
						-cos(ab),-sin(ab),800,
						0,fth/2,1015,
						0,fth/2,-1
					DEL 1

			ELSE	!!!ANGLE=360

				ADDz ds
					PRISM_ 12,hr,
						0,-fth/2,79,
						1,0,800,
						0,2*rb+fth/2,1079,
						-1,0,800,
						0,-fth/2,1079,
						0,-fth/2,-1,

						0,fth/2,79,
						1,0,800,
						0,2*rb-fth/2,1079,
						-1,0,800,
						0,fth/2,1079,
						0,fth/2,-1
				DEL 1

			ENDIF
		ENDIF

	!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** STRAIGHT INCLINED *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

		IF ABS(ani)>EPS and ptyp_m=1 THEN			!!ptyp=Straight

			IF rom_m=1 THEN					!!!!VERTICAL Orientation

				ADD XStartPoslra,0,ZStartPoslra

					IF rmm_m=1 THEN			!!!!VERTICAL Measurement
						temp_ds=ds
						temp_hr=hr
					ELSE					!!Perpendicular Measurement
						temp_ds=dsPerp
						temp_hr=hrPerp
					ENDIF



						ROTz -90+gs_AngleL		!! CONNECTING ANGLE
						ROTy -90
							CUTPLANE
						DEL 2

						ADDx templra
						ROTz 90-gs_AngleR
						ROTy 90
							CUTPLANE
						DEL 3


							ROTx 90
							ADDz -fth/2

								PRISM_ 5,fth,
									-XPosL,temp_ds-YPosL,15,
									templra+XPosR,temp_ds+templra*tan(ani)+YPosR,15,
									templra+XPosR,temp_ds+temp_hr+templra*tan(ani)+YPosR,15,
									-XPosL,temp_ds+temp_hr-YPosL,15,
									-XPosL,temp_ds-YPosL,-1

							DEL 2

						CUTEND
						CUTEND

				DEL 1

			ELSE						!Perpendicular Orientation
										!Measurement is always perpendicular to inclination in this case

				ROTy -ani
				ADDx XStartPoslra

					ROTx 90
					ADDz -fth/2
						!!FRAME

						PRISM_ 5,fth,
						0,ds,15,
						templrah,ds,15,
						templrah,ds+hr,15,
						0,ds+hr,15,
						0,ds,-1
					DEL 2

				DEL 2

			ENDIF


		ENDIF


	!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** INCLINED AND CURVED *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!

		IF ABS(ani)>EPS and ptyp_m<>1 THEN

			!!!!FRAME

			alphai=-alphaincl
			deltazi=-deltazincl
			FOR i=1 to nalphaincl+3 step 1
			put rb*sin(alphai),rb-rb*cos(alphai),ds+deltazi
			alphai=alphai+alphaincl
			deltazi=deltazi+deltazincl
			NEXT i

			TUBEA 5,nalphaincl+3,1+2+16+32,
				-fth/2,0,0,
				fth/2,0,0,
				fth/2,hr,0,
				-fth/2,hr,0,
				-fth/2,0,-1,
				get (nsp)

		ENDIF


ENDIF		!!END of SIMPLE 3D!!







!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** DETAILED 3D *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


IF gs_detlevel_3D_m=2 THEN


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** STRAIGHT *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


IF ABS(ani)<EPS and ptyp_m=1 THEN

	ADDX XStartPoslra

	!!3D FEEDBACK AT HOTSPOT EDITING
	IF GLOB_CONTEXT>20 and GLOB_CONTEXT<40 THEN

			ADDz ds
			MATERIAL fmat
			PRISM_ 5,hr,
				(fth/2)/tan(gs_AngleL),fth/2,15,
				-(fth/2)/tan(gs_AngleL),-fth/2,15,
				templra+(fth/2)/tan(gs_AngleR),-fth/2,15,
				templra-(fth/2)/tan(gs_AngleR),fth/2,15,
				(fth/2)/tan(gs_AngleL),fth/2,-1
			DEL 1

	ELSE	!!! DETAILED MODEL



		!! *** HANDRAIL *** !! *****************************************************

		MATERIAL fmat

		ADDx -(hroL)
		ROTz -90+gs_AngleL		!! CONNECTING ANGLE
		ROTy -90
			CUTPLANE
		DEL 3

		ADDx templra+(hroR)
		ROTz 90-gs_AngleR
		ROTy 90
			CUTPLANE
		DEL 3


		RESOL rescs

				MATERIAL fmat

				GROUP "handrail round straight"			!Groups
					ADD  -hroL-XPosL,0,ds+hr-hrd/2
					ROTy 90
					CYLIND templra+(hroL)+XPosL+(hroR)+XPosR,hrd/2
					DEL 2
				ENDGROUP


				IF hrt_m=1 THEN

					ADDz ds+hr-hrh
						PRISM_ 5,hrh,
							-(hroL)-XPosL,hrw/2,15,
							-(hroL)-XPosL,-hrw/2,15,
							templra+(hroR)+XPosR,-hrw/2,15,
							templra+(hroR)+XPosR,hrw/2,15,
							-(hroL)-XPosL,hrw/2,-1
					DEL 1

					ELSE
					PLACEGROUP "handrail round straight"
				ENDIF

		CUTEND
		CUTEND


		!! *** POST *** !! *****************************************************

		MATERIAL pmat

		ADDx -(hroL)-LengthSize*dpost
		ROTz -90+gs_AngleL		!! CONNECTING ANGLE
		ROTy -90
			CUTPLANE
		DEL 3

		ADDx templra+(hroR)+LengthSize*dpost
		ROTz 90-gs_AngleR
		ROTy 90
			CUTPLANE
		DEL 3

				MATERIAL pmat

				IF hrt_m=1 THEN			!Post height calculation
				ph=hr+ds-hrh+gs_PostBaseOverhang
				ELSE
					IF pt_m=1 THEN
					ph=hr+ds-hrd+gs_PostBaseOverhang
					ELSE
					ph=hr+ds-hrd/2+gs_PostBaseOverhang
					ENDIF
				ENDIF


				GROUP "post round straight"			!Groups
				ADDz -gs_PostBaseOverhang
					FOR i=1 to np step 1
					CYLIND ph,pd/2
					addx distpost
					NEXT i
					DEL np
				DEL 1
				ENDGROUP

				GROUP "post rect straight"
				ADDZ -gs_PostBaseOverhang
					FOR i=1 to np step 1
					PRISM_ 5,ph,
						-pw/2,-pth/2,15,
						 pw/2,-pth/2,15,
						 pw/2,pth/2,15,
						-pw/2,pth/2,15,
						-pw/2,-pth/2,-1
					addx distpost
					NEXT i
					DEL np
				DEL 1
				ENDGROUP

				IF pt_m=1 THEN
					PLACEGROUP "post rect straight"
				ELSE
					IF hrt_m=1 THEN
					PLACEGROUP "post round straight"
					ELSE
					PLACEGROUP subgroup ("post round straight","handrail round straight")
					ENDIF
				ENDIF

		CUTEND
		CUTEND



		!! *** Boards *** !! *****************************************************

		MATERIAL bmat

		ADDx -(hroL)-LengthSize*dpost
		ROTz -90+gs_AngleL		!! CONNECTING ANGLE
		ROTy -90
			CUTPLANE
		DEL 3

		ADDx templra+(hroR)+LengthSize*dpost
		ROTz 90-gs_AngleR
		ROTy 90
			CUTPLANE
		DEL 3

				!!!!!HORIZONTAL

				GROUP "board rect straight H"			!Groups
					ADDz  ds
					PRISM_ 5,bw,
						0,-bth/2,15,
						templra,-bth/2,15,
						templra,bth/2,15,
						0,bth/2,15,
						0,-bth/2,-1
					DEL 1
				ENDGROUP

				GROUP "board round straight H"
					ADDz  ds+bd/2
					ROTy 90
					CYLIND templra,bd/2
					DEL 2
				ENDGROUP

				GROUP "subboard rect straight H"
					ADDz  sbhh1
					PRISM_ 5,bw,
						0,-bth/2,15,
						templra,-bth/2,15,
						templra,bth/2,15,
						0,bth/2,15,
						0,-bth/2,-1
					DEL 1

					ADDz sbhh2
					PRISM_ 5,bw,
						0,-bth/2,15,
						templra,-bth/2,15,
						templra,bth/2,15,
						0,bth/2,15,
						0,-bth/2,-1
					DEL 1
				ENDGROUP

				GROUP "subboard round straight H"
					ADDz  sbhh1
					ROTy 90
						CYLIND templra,bd/2
					DEL 2

					ADDz  sbhh2
					ROTy 90
						CYLIND templra,bd/2
					DEL 2
				ENDGROUP


				IF bt_m= 1 THEN
					IF pt_m=1 THEN
					PLACEGROUP subgroup ("board rect straight H","post rect straight")
					ELSE
					PLACEGROUP subgroup ("board rect straight H","post round straight")
					ENDIF
				ELSE
					IF pt_m=1 THEN
					PLACEGROUP subgroup ("board round straight H","post rect straight")
					ELSE
					PLACEGROUP subgroup ("board round straight H","post round straight")
					ENDIF
				ENDIF


				!!!VERTICAL

				IF hrt_m=1 THEN			!Board height calculation
					IF bt_m=1 THEN
					bh=hr-bw-hrh
					ELSE
					bh=hr-bd/2-hrh
					ENDIF
				ELSE
					IF bt_m=1 THEN
					bh=hr-bw-hrd
					ELSE
					bh=hr-bd/2-hrd/2
					ENDIF
				ENDIF


				GROUP "board round straight V"			!Groups
					FOR k=1 to np-1 step 1
						ADD dpost+distboard+bd/2,0,ds+bd/2
						FOR i=1 to nb step 1

							CYLIND bh,bd/2

						addx distboard+bd
						NEXT i
						DEL nb+1
					addx distpost
					NEXT k
					DEL np-1
				ENDGROUP

				GROUP "board rect straight V"
					FOR l=1 to np-1 step 1
						ADD dpost+distboard+bw/2,0,ds+bw
						FOR i=1 to nb step 1

						PRISM_ 5,bh,
							-bw/2,-bth/2,15,
							 bw/2,-bth/2,15,
							 bw/2,bth/2,15,
							-bw/2,bth/2,15,
							-bw/2,-bth/2,-1

						addx distboard+bw
						NEXT i
						DEL nb+1
					addx distpost
					NEXT l
					DEL np-1
				ENDGROUP


				GROUP "subboard round straight V"
					FOR k=1 to np-1 step 1
						ADD dpost+distboard+bd/2,0,ds+bd/2
						addx -(distboard+bd)/2
						FOR i=1 to nb+1 step 1

							CYLIND sbh1,bd/2

						addx distboard+bd
						NEXT i
						DEL nb+3
					addx distpost
					NEXT k
					DEL np-1
					FOR k=1 to np-1 step 1
						ADD dpost+distboard+bd/2,0,sbhh2
						addx -(distboard+bd)/2
						FOR i=1 to nb+1 step 1

							CYLIND sbh2,bd/2

						addx distboard+bd
						NEXT i
						DEL nb+3
					addx distpost
					NEXT k
					DEL np-1
				ENDGROUP

				GROUP "subboard rect straight V"
					FOR l=1 to np-1 step 1
						ADD dpost+distboard+bw/2,0,ds+bw
						addx -(distboard+bw)/2
						FOR i=1 to nb+1 step 1

						PRISM_ 5,sbh1,
							-bw/2,-bth/2,15,
							 bw/2,-bth/2,15,
							 bw/2,bth/2,15,
							-bw/2,bth/2,15,
							-bw/2,-bth/2,-1

						addx distboard+bw
						NEXT i
						DEL nb+3
					addx distpost
					NEXT l
					DEL np-1
					FOR l=1 to np-1 step 1
						ADD dpost+distboard+bw/2,0,sbhh2+bw
						addx -(distboard+bw)/2
						FOR i=1 to nb+1 step 1

						PRISM_ 5,sbh2,
							-bw/2,-bth/2,15,
							 bw/2,-bth/2,15,
							 bw/2,bth/2,15,
							-bw/2,bth/2,15,
							-bw/2,-bth/2,-1

						addx distboard+bw
						NEXT i
						DEL nb+3
					addx distpost
					NEXT l
					DEL np-1
				ENDGROUP


				IF bt_m=1 THEN
					IF hrt_m=1 THEN
						PLACEGROUP "board rect straight V"
						PLACEGROUP "subboard rect straight V"
						ELSE
						PLACEGROUP subgroup ("board rect straight V","handrail round straight")
						PLACEGROUP subgroup ("subboard rect straight V","handrail round straight")
					ENDIF
					IF pt_m=1 THEN
						PLACEGROUP subgroup (subgroup ("subboard rect straight H","post rect straight"),"board rect straight V")
						ELSE
						PLACEGROUP subgroup (subgroup ("subboard rect straight H","post round straight"),"board rect straight V")
					ENDIF
				ELSE
					IF hrt_m=1 THEN
						PLACEGROUP subgroup ("board round straight V","board round straight H")
						PLACEGROUP subgroup (subgroup ("subboard round straight V","subboard round straight H"),"board round straight H")
						ELSE
						PLACEGROUP subgroup (subgroup ("board round straight V","handrail round straight"),"board round straight H")
						PLACEGROUP subgroup (subgroup (subgroup ("subboard round straight V","subboard round straight H"),"board round straight H"),"handrail round straight")
					ENDIF
					IF pt_m=1 THEN
						PLACEGROUP subgroup (subgroup ("subboard round straight H","post rect straight"),"board round straight V")
						ELSE
						PLACEGROUP subgroup (subgroup ("subboard round straight H","post round straight"),"board round straight V")
					ENDIF
				ENDIF

		CUTEND
		CUTEND

			KILLGROUP "handrail round straight"
			KILLGROUP "post round straight"
			KILLGROUP "post rect straight"
			KILLGROUP "board rect straight H"
			KILLGROUP "board round straight H"
			KILLGROUP "subboard rect straight H"
			KILLGROUP "subboard round straight H"
			KILLGROUP "board rect straight V"
			KILLGROUP "board round straight V"
			KILLGROUP "subboard rect straight V"
			KILLGROUP "subboard round straight V"

	ENDIF

	DEL 1

ENDIF


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** STRAIGHT CURVED *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


	IF ABS(ani)<EPS and ptyp_m<>1 THEN


		!!3D FEEDBACK AT HOTSPOT EDITING
		IF GLOB_CONTEXT>20 and GLOB_CONTEXT<40 THEN

			!!!!FRAME
			MATERIAL fmat

				IF ab<360 THEN
						ADDz ds
						PRISM_ 10,hr,
							0,fth/2,15,
							0,-fth/2+0.00005,15,
							0,-fth/2,79,
							1,0,800,
							(rb+(fth/2))*sin(ab),rb-(rb+(fth/2))*cos(ab),1015,
							(rb-(fth/2)+0.00005)*sin(ab),rb-(rb-(fth/2)+0.00005)*cos(ab),15,
							(rb-(fth/2))*sin(ab),rb-(rb-(fth/2))*cos(ab),79,
							-cos(ab),-sin(ab),800,
							0,fth/2,1015,
							0,fth/2,-1
						DEL 1

				ELSE	!!!ANGLE=360

					ADDz ds
						PRISM_ 12,hr,
							0,-fth/2,79,
							1,0,800,
							0,2*rb+fth/2,1079,
							-1,0,800,
							0,-fth/2,1079,
							0,-fth/2,-1,

							0,fth/2,79,
							1,0,800,
							0,2*rb-fth/2,1079,
							-1,0,800,
							0,fth/2,1079,
							0,fth/2,-1
					DEL 1

				ENDIF

		ELSE
			!!! *** HANDRAIL *** !!! *************************************

			MATERIAL fmat
			RESOL res

			if (ab + alphahroL + alphahroR) < 360 then

					group "handrail round curved"				!Groups
							gamma0 = 360 / rescs
							gamma = 0
							for i = 1 to rescs step 1
								put hrd/2 * cos(gamma), rb + hrd/2 * sin(gamma), 1
								gamma = gamma + gamma0
							next i
						add  0, rb, ds + hr - hrd/2
						roty 90
						rotx 180 - ab - alphahroR
							revolve rescs+1, ab + alphahroL + alphahroR, 1+2+4+8+16+32,
							get (nsp),
								hrd/2, rb, -1
						del 3
					endgroup
					handrailgroupname = "handrail round curved"

					IF hrt_m=1 THEN
							ADDz ds+hr-hrh
							PRISM_ 9,hrh,
							(rb-(hrw/2))*sin(-alphahroL),rb-(rb-(hrw/2))*cos(alphahroL),15,
							(rb+(hrw/2)-0.00005)*sin(-alphahroL),rb-(rb+(hrw/2)-0.000005)*cos(alphahroL),15,
							(rb+(hrw/2))*sin(-alphahroL),rb-(rb+(hrw/2))*cos(alphahroL),79,
							cos(alphahroL),sin(-alphahroL),800,
							(rb+(hrw/2))*sin(ab+alphahroR),rb-(rb+(hrw/2))*cos(ab+alphahroR),1015,
							(rb-(hrw/2)+0.00005)*sin(ab+alphahroR),rb-(rb-(hrw/2)+0.00005)*cos(ab+alphahroR),15,
							(rb-(hrw/2))*sin(ab+alphahroR),rb-(rb-(hrw/2))*cos(ab+alphahroR),79,
							-cos(ab+alphahroR),-sin(ab+alphahroR),800,
							(rb-(hrw/2))*sin(-alphahroL),rb-(rb-(hrw/2))*cos(alphahroL),1015
							DEL 1
					ELSE
							PLACEGROUP "handrail round curved"
					ENDIF

			else

					group "handrail round curved 360"
							gamma0 = 360 / rescs
							gamma = 0
							for i=1 to rescs step 1
								put hrd/2 * cos(gamma), rb + hrd/2 * sin(gamma), 1
								gamma = gamma + gamma0
							next i
							add  0,rb,ds+hr-hrd/2
							roty 90
							rotx 180 - ab
							revolve rescs + 1, 360, 0,
								get (nsp),
								hrd/2, rb, -1
							del 3
					endgroup
					handrailgroupname = "handrail round curved 360"

					if hrt_m = 1 then
						addz ds + hr - hrh
							prism_ 12, hrh,
								0, -hrw/2, 79,
								1, 0, 800,
								0, 2*rb + hrw/2, 1079,
								-1, 0, 800,
								0, -hrw/2, 1079,
								0, -hrw/2, -1,

								0, hrw/2, 79,
								1, 0, 800,
								0, 2*rb - hrw/2, 1079,
								-1, 0, 800,
								0, hrw/2, 1079,
								0, hrw/2, -1
						del 1
					else
						placegroup "handrail round curved 360"
					endif

			endif

			!!other parts are shorter, circularity checked differently
			if ab < 360 then

					!!! *** POSTS *** !!! *******************************

					MATERIAL pmat
					RESOL rescs

					IF hrt_m=1 THEN			!Post height calculation
					ph=hr+ds-hrh+gs_PostBaseOverhang
					ELSE
						IF pt_m=1 THEN
						ph=hr+ds-hrd+gs_PostBaseOverhang
						ELSE
						ph=hr+ds-hrd/2+gs_PostBaseOverhang
						ENDIF
					ENDIF

					GROUP "post round curved"
					ADDZ -gs_PostBaseOverhang
						FOR i=1 to np step 1
						CYLIND ph,pd/2
						ADDy rb
						ROTz anglepost
						ADDy -rb
						NEXT i
						DEL 3*np
					DEL 1
					ENDGROUP

					GROUP "post rect curved"
					ADDZ -gs_PostBaseOverhang
						FOR i=1 to np step 1

						PRISM_ 5,ph,
							-pw/2,-pth/2,15,
							 pw/2,-pth/2,15,
							 pw/2,pth/2,15,
							-pw/2,pth/2,15,
							-pw/2,-pth/2,-1

						ADDy rb
						ROTz anglepost
						ADDy -rb
						NEXT i
						DEL 3*np
					DEL 1
					ENDGROUP

					IF pt_m=1 THEN
						PLACEGROUP "post rect curved"
					ELSE
						IF hrt_m=1 THEN
							PLACEGROUP "post round curved"
						ELSE
							PLACEGROUP subgroup ("post round curved", handrailgroupname)
						ENDIF
					ENDIF



					!!! *** BOARDS *** !!! ********************************

					MATERIAL bmat

					!!!HORIZONTAL
					RESOL res

					GROUP "board rect curved H"			!Groups
					ADDz  ds
					PRISM_ 10,bw,
						0,bth/2,15,
						0,-bth/2+0.00005,15,
						0,-bth/2,79,
						1,0,800,
						(rb+(bth/2))*sin(ab),rb-(rb+(bth/2))*cos(ab),1015,
						(rb-(bth/2)+0.00005)*sin(ab),rb-(rb-(bth/2)+0.00005)*cos(ab),15,
						(rb-(bth/2))*sin(ab),rb-(rb-(bth/2))*cos(ab),79,
						-cos(ab),-sin(ab),800,
						0,bth/2,1015,
						0,bth/2,-1
					DEL 1
					ENDGROUP

					GROUP "board round curved H"
							gamma0=360/rescs
							gamma=0
							FOR i=1 to rescs step 1
							put bd/2*cos(gamma),rb+bd/2*sin(gamma),1
							gamma=gamma+gamma0
							NEXT i
						ADD  0,rb,ds+bd/2
						ROTy 90
						ROTx 180-ab
						REVOLVE rescs+1,ab,1+2+4+8+16+32,
						get (nsp),
						bd/2,rb,-1
						DEL 3
					ENDGROUP

					GROUP "subboard rect curved H"
						ADDz  sbhh1
						PRISM_ 10,bw,
							0,bth/2,15,
							0,-bth/2+0.00005,15,
							0,-bth/2,79,
							1,0,800,
							(rb+(bth/2))*sin(ab),rb-(rb+(bth/2))*cos(ab),1015,
							(rb-(bth/2)+0.00005)*sin(ab),rb-(rb-(bth/2)+0.00005)*cos(ab),15,
							(rb-(bth/2))*sin(ab),rb-(rb-(bth/2))*cos(ab),79,
							-cos(ab),-sin(ab),800,
							0,bth/2,1015,
							0,bth/2,-1
						DEL 1
						ADDz  sbhh2
						PRISM_ 10,bw,
							0,bth/2,15,
							0,-bth/2+0.00005,15,
							0,-bth/2,79,
							1,0,800,
							(rb+(bth/2))*sin(ab),rb-(rb+(bth/2))*cos(ab),1015,
							(rb-(bth/2)+0.00005)*sin(ab),rb-(rb-(bth/2)+0.00005)*cos(ab),15,
							(rb-(bth/2))*sin(ab),rb-(rb-(bth/2))*cos(ab),79,
							-cos(ab),-sin(ab),800,
							0,bth/2,1015,
							0,bth/2,-1
						DEL 1
					ENDGROUP

					GROUP "subboard round curved H"
							gamma0=360/rescs
							gamma=0
							FOR i=1 to rescs step 1
							put bd/2*cos(gamma),rb+bd/2*sin(gamma),1
							gamma=gamma+gamma0
							NEXT i
						ADD  0,rb,sbhh1
						ROTy 90
						ROTx 180-ab
						REVOLVE rescs+1,ab,1+2+4+8+16+32,
						use (nsp),
						bd/2,rb,-1
						DEL 3
						ADD  0,rb,sbhh2
						ROTy 90
						ROTx 180-ab
						REVOLVE rescs+1,ab,1+2+4+8+16+32,
						get (nsp),
						bd/2,rb,-1
						DEL 3
					ENDGROUP


					IF bt_m= 1 THEN
						IF pt_m=1 THEN
						PLACEGROUP subgroup ("board rect curved H","post rect curved")
						ELSE
						PLACEGROUP subgroup ("board rect curved H","post round curved")
						ENDIF
					ELSE
						IF pt_m=1 THEN
						PLACEGROUP subgroup ("board round curved H","post rect curved")
						ELSE
						PLACEGROUP subgroup ("board round curved H","post round curved")
						ENDIF
					ENDIF



					!!!VERTICAL

					RESOL rescs

					IF hrt_m=1 THEN			!Board height calculation
						IF bt_m=1 THEN
						bh=hr-bw-hrh
						ELSE
						bh=hr-bd/2-hrh
						ENDIF
					ELSE
						IF bt_m=1 THEN
						bh=hr-bw-hrd
						ELSE
						bh=hr-bd/2-hrd/2
						ENDIF
					ENDIF


					GROUP "board round curved V"			!Groups
						FOR k=1 to np-1 step 1
							ADD 0,rb,ds+bd/2
							ROTz dpostangle+distboardangle+dboardangle/2
							ADDy -rb
							FOR i=1 to nb step 1
							CYLIND bh,bd/2
							ADDy rb
							ROTz distboardangle+dboardangle
							ADDy -rb
							NEXT i
							DEL 3*nb+3
						ADDy rb
						ROTz anglepost
						ADDy -rb
						NEXT k
						DEL 3*(np-1)
					ENDGROUP

					GROUP "board rect curved V"
						FOR l=1 to np-1 step 1
							ADD 0,rb,ds+bw
							ROTz dpostangle+distboardangle+dboardangle/2
							ADDy -rb
							FOR i=1 to nb step 1
							PRISM_ 5,bh,
							-bw/2,-bth/2,15,
							 bw/2,-bth/2,15,
							 bw/2,bth/2,15,
							-bw/2,bth/2,15,
							-bw/2,-bth/2,-1
							ADDy rb
							ROTz distboardangle+dboardangle
							ADDy -rb
							NEXT i
							DEL 3*nb+3
						ADDy rb
						ROTz anglepost
						ADDy -rb
						NEXT l
						DEL 3*(np-1)
					ENDGROUP

					GROUP "subboard round curved V"
						FOR k=1 to np-1 step 1
							ADD 0,rb,ds+bd/2
							ROTz dpostangle+distboardangle+dboardangle/2-(distboardangle+dboardangle/2)/2
							ADDy -rb
							FOR i=1 to nb+1 step 1
							CYLIND sbh1,bd/2
							ADDy rb
							ROTz distboardangle+dboardangle
							ADDy -rb
							NEXT i
							DEL 3*(nb+1)+3
						ADDy rb
						ROTz anglepost
						ADDy -rb
						NEXT k
						DEL 3*(np-1)
						FOR k=1 to np-1 step 1
							ADD 0,rb,sbhh2
							ROTz dpostangle+distboardangle+dboardangle/2-(distboardangle+dboardangle/2)/2
							ADDy -rb
							FOR i=1 to nb+1 step 1
							CYLIND sbh2,bd/2
							ADDy rb
							ROTz distboardangle+dboardangle
							ADDy -rb
							NEXT i
							DEL 3*(nb+1)+3
						ADDy rb
						ROTz anglepost
						ADDy -rb
						NEXT k
						DEL 3*(np-1)
					ENDGROUP

					GROUP "subboard rect curved V"
						FOR l=1 to np-1 step 1
							ADD 0,rb,ds+bw
							ROTz dpostangle+distboardangle+dboardangle/2-(distboardangle+dboardangle/2)/2
							ADDy -rb
							FOR i=1 to nb+1 step 1
							PRISM_ 5,sbh1,
							-bw/2,-bth/2,15,
							 bw/2,-bth/2,15,
							 bw/2,bth/2,15,
							-bw/2,bth/2,15,
							-bw/2,-bth/2,-1
							ADDy rb
							ROTz distboardangle+dboardangle
							ADDy -rb
							NEXT i
							DEL 3*(nb+1)+3
						ADDy rb
						ROTz anglepost
						ADDy -rb
						NEXT l
						DEL 3*(np-1)
						FOR l=1 to np-1 step 1
							ADD 0,rb,sbhh2+bw
							ROTz dpostangle+distboardangle+dboardangle/2-(distboardangle+dboardangle/2)/2
							ADDy -rb
							FOR i=1 to nb+1 step 1
							PRISM_ 5,sbh2,
							-bw/2,-bth/2,15,
							 bw/2,-bth/2,15,
							 bw/2,bth/2,15,
							-bw/2,bth/2,15,
							-bw/2,-bth/2,-1
							ADDy rb
							ROTz distboardangle+dboardangle
							ADDy -rb
							NEXT i
							DEL 3*(nb+1)+3
						ADDy rb
						ROTz anglepost
						ADDy -rb
						NEXT l
						DEL 3*(np-1)
					ENDGROUP


					IF bt_m=1 THEN
						IF hrt_m=1 THEN
							PLACEGROUP "board rect curved V"
							PLACEGROUP "subboard rect curved V"
						ELSE
							PLACEGROUP subgroup ("board rect curved V", handrailgroupname)
							PLACEGROUP subgroup ("subboard rect curved V", handrailgroupname)
						ENDIF
						IF pt_m=1 THEN
							PLACEGROUP subgroup (subgroup ("subboard rect curved H","post rect curved"),"board rect curved V")
							ELSE
							PLACEGROUP subgroup (subgroup ("subboard rect curved H","post round curved"),"board rect curved V")
						ENDIF
					ELSE
						IF hrt_m=1 THEN
							PLACEGROUP subgroup ("board round curved V","board round curved H")
							PLACEGROUP subgroup (subgroup ("subboard round curved V","subboard round curved H"),"board round curved H")
						ELSE
							PLACEGROUP subgroup (subgroup ("board round curved V", handrailgroupname),"board round curved H")
							PLACEGROUP subgroup (subgroup (subgroup ("subboard round curved V","subboard round curved H"),"board round curved H"), handrailgroupname)
						ENDIF
						IF pt_m=1 THEN
							PLACEGROUP subgroup (subgroup ("subboard round curved H","post rect curved"),"board round curved V")
							ELSE
							PLACEGROUP subgroup (subgroup ("subboard round curved H","post round curved"),"board round curved V")
						ENDIF
					ENDIF


					KILLGROUP "post round curved"
					KILLGROUP "post rect curved"
					KILLGROUP "board rect curved H"
					KILLGROUP "board round curved H"
					KILLGROUP "subboard rect curved H"
					KILLGROUP "subboard round curved H"
					KILLGROUP "board rect curved V"
					KILLGROUP "board round curved V"
					KILLGROUP "subboard rect curved V"
					KILLGROUP "subboard round curved V"


			ELSE	!!! angle=360

					!!! *** POSTS *** !!! *******************************

					MATERIAL pmat
					RESOL rescs

					IF hrt_m=1 THEN			!Post height calculation
					ph=hr+ds-hrh+gs_PostBaseOverhang
					ELSE
						IF pt_m=1 THEN
						ph=hr+ds-hrd+gs_PostBaseOverhang
						ELSE
						ph=hr+ds-hrd/2+gs_PostBaseOverhang
						ENDIF
					ENDIF

					GROUP "post round curved 360"
					ADDZ -gs_PostBaseOverhang
						FOR i=1 to np step 1
						CYLIND ph,pd/2
						ADDy rb
						ROTz anglepost
						ADDy -rb
						NEXT i
						DEL 3*np
					DEL 1
					ENDGROUP

					GROUP "post rect curved 360"
					ADDz -gs_PostBaseOverhang
						FOR i=1 to np step 1
						PRISM_ 5,ph,
						-pw/2,-pth/2,15,
						 pw/2,-pth/2,15,
						 pw/2,pth/2,15,
						-pw/2,pth/2,15,
						-pw/2,-pth/2,-1
						ADDy rb
						ROTz anglepost
						ADDy -rb
						NEXT i
						DEL 3*np
					DEL 1
					ENDGROUP

					IF pt_m=1 THEN
						PLACEGROUP "post rect curved 360"
					ELSE
						IF hrt_m=1 THEN
							PLACEGROUP "post round curved 360"
						ELSE
							PLACEGROUP subgroup ("post round curved 360", handrailgroupname)
						ENDIF
					ENDIF


					!!! *** BOARDS *** !!! ******************************

					MATERIAL bmat
					RESOL res

					!!!HORIZONTAL

					GROUP "board rect curved H 360"			!Groups
					ADDz  ds
					PRISM_ 12,bw,
							0,-bth/2,79,
							1,0,800,
							0,2*rb+bth/2,1079,
							-1,0,800,
							0,-bth/2,1079,
							0,-bth/2,-1,

							0,bth/2,79,
							1,0,800,
							0,2*rb-bth/2,1079,
							-1,0,800,
							0,bth/2,1079,
							0,bth/2,-1
					DEL 1
					ENDGROUP

					GROUP "board round curved H 360"
							gamma0=360/rescs
							gamma=0
							FOR i=1 to rescs step 1
							put bd/2*cos(gamma),rb+bd/2*sin(gamma),1
							gamma=gamma+gamma0
							NEXT i
						ADD  0,rb,ds+bd/2
						ROTy 90
						ROTx 180-ab
						REVOLVE rescs+1,ab,1+2+4+8+16+32,
						get (nsp),
						bd/2,rb,-1
						DEL 3
					ENDGROUP


					GROUP "subboard rect curved H 360"
					ADDz  sbhh1
					PRISM_ 12,bw,
							0,-bth/2,79,
							1,0,800,
							0,2*rb+bth/2,1079,
							-1,0,800,
							0,-bth/2,1079,
							0,-bth/2,-1,

							0,bth/2,79,
							1,0,800,
							0,2*rb-bth/2,1079,
							-1,0,800,
							0,bth/2,1079,
							0,bth/2,-1
					DEL 1
					ADDz  sbhh2
					PRISM_ 12,bw,
							0,-bth/2,79,
							1,0,800,
							0,2*rb+bth/2,1079,
							-1,0,800,
							0,-bth/2,1079,
							0,-bth/2,-1,

							0,bth/2,79,
							1,0,800,
							0,2*rb-bth/2,1079,
							-1,0,800,
							0,bth/2,1079,
							0,bth/2,-1
					DEL 1
					ENDGROUP

					GROUP "subboard round curved H 360"
							gamma0=360/rescs
							gamma=0
							FOR i=1 to rescs step 1
							put bd/2*cos(gamma),rb+bd/2*sin(gamma),1
							gamma=gamma+gamma0
							NEXT i
						ADD  0,rb,sbhh1
						ROTy 90
						ROTx 180-ab
						REVOLVE rescs+1,ab,1+2+4+8+16+32,
						use (nsp),
						bd/2,rb,-1
						DEL 3
						ADD  0,rb,sbhh2
						ROTy 90
						ROTx 180-ab
						REVOLVE rescs+1,ab,1+2+4+8+16+32,
						get (nsp),
						bd/2,rb,-1
						DEL 3
					ENDGROUP


					IF bt_m= 1 THEN
						IF pt_m=1 THEN
						PLACEGROUP subgroup ("board rect curved H 360","post rect curved 360")
						ELSE
						PLACEGROUP subgroup ("board rect curved H 360","post round curved 360")
						ENDIF
					ELSE
						IF pt_m=1 THEN
						PLACEGROUP subgroup ("board round curved H 360","post rect curved 360")
						ELSE
						PLACEGROUP subgroup ("board round curved H 360","post round curved 360")
						ENDIF
					ENDIF



					!!!VERTICAL

					RESOL rescs

					IF hrt_m=1 THEN			!Board height calculation
						IF bt_m=1 THEN
						bh=hr-bw-hrh
						ELSE
						bh=hr-bd/2-hrh
						ENDIF
					ELSE
						IF bt_m=1 THEN
						bh=hr-bw-hrd
						ELSE
						bh=hr-bd/2-hrd/2
						ENDIF
					ENDIF


					GROUP "board round curved V 360"			!Groups
						FOR k=1 to np step 1
							ADD 0,rb,ds+bd/2
							ROTz dpostangle+distboardangle+dboardangle/2
							ADDy -rb
							FOR i=1 to nb step 1
							CYLIND bh,bd/2
							ADDy rb
							ROTz distboardangle+dboardangle
							ADDy -rb
							NEXT i
							DEL 3*nb+3
						ADDy rb
						ROTz anglepost
						ADDy -rb
						NEXT k
						DEL 3*np
					ENDGROUP

					GROUP "board rect curved V 360"
						FOR l=1 to np step 1
							ADD 0,rb,ds+bw
							ROTz dpostangle+distboardangle+dboardangle/2
							ADDy -rb
							FOR i=1 to nb step 1
							PRISM_ 5,bh,
							-bw/2,-bth/2,15,
							 bw/2,-bth/2,15,
							 bw/2,bth/2,15,
							-bw/2,bth/2,15,
							-bw/2,-bth/2,-1
							ADDy rb
							ROTz distboardangle+dboardangle
							ADDy -rb
							NEXT i
							DEL 3*nb+3
						ADDy rb
						ROTz anglepost
						ADDy -rb
						NEXT l
						DEL 3*np
					ENDGROUP

					GROUP "subboard round curved V 360"
						FOR k=1 to np step 1
							ADD 0,rb,ds+bd/2
							ROTz dpostangle+distboardangle+dboardangle/2-(distboardangle+dboardangle/2)/2
							ADDy -rb
							FOR i=1 to nb+1 step 1
							CYLIND sbh1,bd/2
							ADDy rb
							ROTz distboardangle+dboardangle
							ADDy -rb
							NEXT i
							DEL 3*(nb+1)+3
						ADDy rb
						ROTz anglepost
						ADDy -rb
						NEXT k
						DEL 3*np
						FOR k=1 to np step 1
							ADD 0,rb,sbhh2
							ROTz dpostangle+distboardangle+dboardangle/2-(distboardangle+dboardangle/2)/2
							ADDy -rb
							FOR i=1 to nb+1 step 1
							CYLIND sbh2,bd/2
							ADDy rb
							ROTz distboardangle+dboardangle
							ADDy -rb
							NEXT i
							DEL 3*(nb+1)+3
						ADDy rb
						ROTz anglepost
						ADDy -rb
						NEXT k
						DEL 3*np
					ENDGROUP

					GROUP "subboard rect curved V 360"
						FOR l=1 to np step 1
							ADD 0,rb,ds+bw
							ROTz dpostangle+distboardangle+dboardangle/2-(distboardangle+dboardangle/2)/2
							ADDy -rb
							FOR i=1 to nb+1 step 1
							PRISM_ 5,sbh1,
							-bw/2,-bth/2,15,
							 bw/2,-bth/2,15,
							 bw/2,bth/2,15,
							-bw/2,bth/2,15,
							-bw/2,-bth/2,-1
							ADDy rb
							ROTz distboardangle+dboardangle
							ADDy -rb
							NEXT i
							DEL 3*(nb+1)+3
						ADDy rb
						ROTz anglepost
						ADDy -rb
						NEXT l
						DEL 3*np
						FOR l=1 to np step 1
							ADD 0,rb,sbhh2+bw
							ROTz dpostangle+distboardangle+dboardangle/2-(distboardangle+dboardangle/2)/2
							ADDy -rb
							FOR i=1 to nb+1 step 1
							PRISM_ 5,sbh2,
							-bw/2,-bth/2,15,
							 bw/2,-bth/2,15,
							 bw/2,bth/2,15,
							-bw/2,bth/2,15,
							-bw/2,-bth/2,-1
							ADDy rb
							ROTz distboardangle+dboardangle
							ADDy -rb
							NEXT i
							DEL 3*(nb+1)+3
						ADDy rb
						ROTz anglepost
						ADDy -rb
						NEXT l
						DEL 3*np
					ENDGROUP


					IF bt_m=1 THEN
						IF hrt_m=1 THEN
							PLACEGROUP "board rect curved V 360"
							PLACEGROUP "subboard rect curved V 360"
						ELSE
							PLACEGROUP subgroup ("board rect curved V 360", handrailgroupname)
							PLACEGROUP subgroup ("subboard rect curved V 360", handrailgroupname)
						ENDIF
						IF pt_m=1 THEN
							PLACEGROUP subgroup (subgroup ("subboard rect curved H 360","post rect curved 360"),"board rect curved V 360")
							ELSE
							PLACEGROUP subgroup (subgroup ("subboard rect curved H 360","post round curved 360"),"board rect curved V 360")
						ENDIF
					ELSE
						IF hrt_m=1 THEN
							PLACEGROUP subgroup ("board round curved V 360","board round curved H 360")
							PLACEGROUP subgroup (subgroup ("subboard round curved V 360","subboard round curved H 360"),"board round curved H 360")
						ELSE
							PLACEGROUP subgroup (subgroup ("board round curved V 360", handrailgroupname),"board round curved H 360")
							PLACEGROUP subgroup (subgroup (subgroup ("subboard round curved V 360","subboard round curved H 360"),"board round curved H 360"), handrailgroupname)
						ENDIF
						IF pt_m=1 THEN
							PLACEGROUP subgroup (subgroup ("subboard round curved H 360","post rect curved 360"),"board round curved V 360")
							ELSE
							PLACEGROUP subgroup (subgroup ("subboard round curved H 360","post round curved 360"),"board round curved V 360")
						ENDIF
					ENDIF


					KILLGROUP "post round curved 360"
					KILLGROUP "post rect curved 360"
					KILLGROUP "board rect curved H 360"
					KILLGROUP "board round curved H 360"
					KILLGROUP "subboard rect curved H 360"
					KILLGROUP "subboard round curved H 360"
					KILLGROUP "board rect curved V 360"
					KILLGROUP "board round curved V 360"
					KILLGROUP "subboard rect curved V 360"
					KILLGROUP "subboard round curved V 360"


			ENDIF
			KILLGROUP  handrailgroupname
		ENDIF	!! END OF 3D FEEDBACK MODE
	ENDIF



!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** STRAIGHT INCLINED *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


	IF ABS(ani)>EPS and ptyp_m=1 THEN

		RESOL rescs

		IF rom_m=1 THEN									!!!VERTICAL Orientation

				IF rmm_m=2 THEN		!Perpendicular Measurement Extra Values
					hrh=hrh/cos(ani)
					hrd=hrd/cos(ani)
					sbh1=sbh1/cos(ani)
					sbh2=sbh2/cos(ani)
					sbhh1=sbhh1/cos(ani)

					if bt_m=1 then
						if hrt_m=1 then
							sbhh2 = (ds + hr - hrh * cos(ani) - sbh - bw * cos(ani)) / cos(ani)
						else
							sbhh2 = (ds + hr - hrd * cos(ani) - sbh - bw * cos(ani)) / cos(ani)
						endif
					else
						if hrt_m=1 then
							sbhh2 = (ds + hr - hrh * cos(ani) - sbh - bd/2 * cos(ani)) / cos(ani)
						else
							sbhh2 = (ds + hr - hrd * cos(ani) - sbh - bd/2 * cos(ani)) / cos(ani)
						endif
					endif
				ENDIF

				IF rmm_m=1 THEN			!!Vertical Measurement
					temp_ds=ds
					temp_hr=hr
					temp_PostBaseOverhang=gs_PostBaseOverhang
				ELSE					!!Perpendicular Measurement
					temp_ds=dsPerp
					temp_hr=hrPerp
					temp_PostBaseOverhang=gs_PostBaseOverhangPerp
				ENDIF


				!!3D FEEDBACK AT HOTSPOT EDITING
				IF GLOB_CONTEXT>20 and GLOB_CONTEXT<40 THEN

				ADD XStartPoslra,0,ZStartPoslra

						MATERIAL fmat

						ROTz -90+gs_AngleL		!!! CONNECTING ANGLE
						ROTy -90
							CUTPLANE
						DEL 2

						ADDx templra
						ROTz 90-gs_AngleR
						ROTy 90
							CUTPLANE
						DEL 3

								ROTx 90
								ADDz -fth/2

									MATERIAL fmat
									PRISM_ 5,fth,
										-XPosL,temp_ds-YPosL,15,
										templra+XPosR,temp_ds+templra*tan(ani)+YPosR,15,
										templra+XPosR,temp_ds+temp_hr+templra*tan(ani)+YPosR,15,
										-XPosL,temp_ds+temp_hr-YPosL,15,
										-XPosL,temp_ds-YPosL,-1
								DEL 2

						CUTEND
						CUTEND

				DEL 1

				ELSE

				ADD XStartPoslra,0,ZStartPoslra

				!!! *** Handrail *** !!! *****************************************

				MATERIAL fmat

				ADDx -(hroL)
				ROTz -90+gs_AngleL		!! CONNECTING ANGLE
				ROTy -90
					CUTPLANE
				DEL 3

				ADDx templra+(hroR)
				ROTz 90-gs_AngleR
				ROTy 90
					CUTPLANE
				DEL 3

						GROUP "handrail round straight inclined"
							ADD -(hroL)-XPosL,0,temp_ds+temp_hr-hrd/2-(hroL)*tan(ani)-YPosL
							ROTy 90-ani
							CONE (templra+hroL+hroR)/cos(ani)+XPosL+XPosR,hrd/2,hrd/2,90+ani,90+ani
							DEL 1
						ENDGROUP

						IF hrt_m=1 THEN
							ROTx 90
							ADDz -hrw/2
								PRISM_ 5,hrw,
								-(hroL)-XPosL,temp_ds+temp_hr-hrh-(hroL)*tan(ani)-YPosL,15,
								templra+(hroR)+XPosR,temp_ds+temp_hr-hrh+(templra+(hroR))*tan(ani)+YPosR,15,
								templra+(hroR)+XPosR,temp_ds+temp_hr+(templra+(hroR))*tan(ani)+YPosR,15,
								-(hroL)-XPosL,temp_ds+temp_hr-(hroL)*tan(ani)-YPosL,15,
								-(hroL)-XPosL,temp_ds+temp_hr-hrh-(hroL)*tan(ani)-YPosL,-1
							DEL 2
						ELSE
						PLACEGROUP "handrail round straight inclined"
						ENDIF

				CUTEND
				CUTEND


				!!! *** Posts *** !!! **********************************************

				MATERIAL pmat

				ADDx -(hroL)-LengthSize*dpost
				ROTz -90+gs_AngleL		!! CONNECTING ANGLE
				ROTy -90
					CUTPLANE
				DEL 3

				ADDx templra+(hroR)+LengthSize*dpost
				ROTz 90-gs_AngleR
				ROTy 90
					CUTPLANE
				DEL 3

						MATERIAL pmat

						IF hrt_m=1 THEN			!Post height calculation
						ph=temp_hr+temp_ds-hrh+temp_PostBaseOverhang
						ELSE
							IF pt_m=1 THEN
							ph=temp_hr+temp_ds-hrd+temp_PostBaseOverhang
							ELSE
							ph=temp_hr+temp_ds-hrd/2+temp_PostBaseOverhang
							ENDIF
						ENDIF

						GROUP "post round straight inclined"
						ADDZ -temp_PostBaseOverhang
							FOR i=1 to np step 1
							cone ph,pd/2,pd/2,90,90-ani
							ADD distpost,0,distpost*tan(ani)
							NEXT i
							DEL np
						DEL 1
						ENDGROUP

						GROUP "post rect straight inclined"
						ADDz -temp_PostBaseOverhang
							ROTx 90
							ADDz -pth/2
							FOR i=1 to np step 1

							PRISM_ 5,pth,
								-pw/2,0,15,
								 pw/2, 0,15,
								 pw/2, pw/2*tan(ani)+ph,15,
								-pw/2,-pw/2*tan(ani)+ph,15,
								-pw/2,0,-1

							ADD distpost,distpost*tan(ani),0
							NEXT i
							DEL np+2
						DEL 1
						ENDGROUP

						IF pt_m=1 THEN
							IF hrt_m=1 THEN
							PLACEGROUP "post rect straight inclined"
							ELSE
							PLACEGROUP subgroup ("post rect straight inclined","handrail round straight inclined")
							ENDIF
						ELSE
							IF hrt_m=1 THEN
							PLACEGROUP "post round straight inclined"
							ELSE
							PLACEGROUP subgroup ("post round straight inclined","handrail round straight inclined")
							ENDIF
						ENDIF

				CUTEND
				CUTEND


				!!! *** Boards *** !!! *****************************************

				MATERIAL bmat

				ADDx -(hroL)-LengthSize*dpost
				ROTz -90+gs_AngleL		!! CONNECTING ANGLE
				ROTy -90
					CUTPLANE
				DEL 3

				ADDx templra+(hroR)+LengthSize*dpost
				ROTz 90-gs_AngleR
				ROTy 90
					CUTPLANE
				DEL 3

						MATERIAL bmat

						!!!HORIZONTAL

						GROUP "board rect straight H inclined"			!Groups
						ROTx 90
						ADDz -bth/2
						PRISM_ 5,bth,
							0,temp_ds,15,
							templra,temp_ds+templra*tan(ani),15,
							templra,temp_ds+bw+templra*tan(ani),15,
							0,temp_ds+bw,15,
							0,temp_ds,-1
						DEL 2
						ENDGROUP

						GROUP "board round straight H inclined"
							ADDz temp_ds+bd/2
							ROTy 90-ani
							cone templra/cos(ani),bd/2,bd/2,90+ani,90+ani
							DEL 2
						ENDGROUP

						GROUP "subboard rect straight H inclined"
						ROTx 90
						ADDz -bth/2
						PRISM_ 5,bth,
							0,temp_ds+sbh1+bw,15,
							templra,temp_ds+sbh1+bw+templra*tan(ani),15,
							templra,temp_ds+sbh1+2*bw+templra*tan(ani),15,
							0,temp_ds+sbh1+2*bw,15,
							0,temp_ds+sbh1+bw,-1
						PRISM_ 5,bth,
							0,sbhh2,15,
							templra,sbhh2+templra*tan(ani),15,
							templra,sbhh2+bw+templra*tan(ani),15,
							0,sbhh2+bw,15,
							0,sbhh2,-1
						DEL 2
						ENDGROUP

						GROUP "subboard round straight H inclined"
							ADDz sbhh1
							ROTy 90-ani
							cone templra/cos(ani),bd/2,bd/2,90+ani,90+ani
							DEL 2
							ADDz sbhh2
							ROTy 90-ani
							cone templra/cos(ani),bd/2,bd/2,90+ani,90+ani
							DEL 2
						ENDGROUP



						IF bt_m= 1 THEN
							IF pt_m=1 THEN
							PLACEGROUP subgroup ("board rect straight H inclined","post rect straight inclined")
							ELSE
							PLACEGROUP subgroup ("board rect straight H inclined","post round straight inclined")
							ENDIF
						ELSE
							IF pt_m=1 THEN
							PLACEGROUP subgroup ("board round straight H inclined","post rect straight inclined")
							ELSE
							PLACEGROUP subgroup ("board round straight H inclined","post round straight inclined")
							ENDIF
						ENDIF


						!!!VERTICAL

						IF hrt_m=1 THEN			!Board height calculation
							IF bt_m=1 THEN
							bh=temp_hr-bw-hrh
							ELSE
							bh=temp_hr-bd/2-hrh
							ENDIF
						ELSE
							IF bt_m=1 THEN
							bh=temp_hr-bw-hrd
							ELSE
							bh=temp_hr-bd/2-hrd/2
							ENDIF
						ENDIF


						GROUP "board round straight V inclined"			!Groups
							FOR k=1 to np-1 step 1
								ADD dpost+distboard+bd/2,0,temp_ds+bd/2+(dpost+distboard+bd/2)*tan(ani)
								FOR i=1 to nb step 1
								cone bh,bd/2,bd/2,90-ani,90-ani
								ADD distboard+bd,0,(distboard+bd)*tan(ani)
								NEXT i
								DEL nb+1
							ADD distpost,0,distpost*tan(ani)
							NEXT k
							DEL np-1
						ENDGROUP

						GROUP "board rect straight V inclined"
							FOR l=1 to np-1 step 1
								ROTx 90
								ADD dpost+distboard+bw/2,temp_ds+bw+(dpost+distboard+bw/2)*tan(ani),-bth/2
								FOR i=1 to nb step 1
								PRISM_ 5,bth,
								-bw/2,-bw/2*tan(ani),15,
								 bw/2, bw/2*tan(ani),15,
								 bw/2, bw/2*tan(ani)+bh,15,
								-bw/2,-bw/2*tan(ani)+bh,15,
								-bw/2,-bw/2*tan(ani),-1
								ADD distboard+bw,(distboard+bw)*tan(ani),0
								NEXT i
								DEL nb+2
							ADD distpost,0,distpost*tan(ani)
							NEXT l
							DEL np-1
						ENDGROUP


						GROUP "subboard round straight V inclined"
							FOR k=1 to np-1 step 1
								ADD dpost+distboard/2,0,temp_ds+bd/2+(dpost+distboard/2)*tan(ani)
								FOR i=1 to nb+1 step 1
								cone sbh1,bd/2,bd/2,90-ani,90-ani
								ADD distboard+bd,0,(distboard+bd)*tan(ani)
								NEXT i
								DEL nb+2
							ADD distpost,0,distpost*tan(ani)
							NEXT k
							DEL np-1
							FOR k=1 to np-1 step 1
								ADD dpost+distboard/2,0,sbhh2+(dpost+distboard/2)*tan(ani)
								FOR i=1 to nb+1 step 1
								cone sbh2,bd/2,bd/2,90-ani,90-ani
								ADD distboard+bd,0,(distboard+bd)*tan(ani)
								NEXT i
								DEL nb+2
							ADD distpost,0,distpost*tan(ani)
							NEXT k
							DEL np-1
						ENDGROUP

						GROUP "subboard rect straight V inclined"
							FOR l=1 to np-1 step 1
								ROTx 90
								ADD dpost+distboard/2,temp_ds+bw+(dpost+distboard/2)*tan(ani),-bth/2
								FOR i=1 to nb+1 step 1
								PRISM_ 5,bth,
								-bw/2,-bw/2*tan(ani),15,
								 bw/2, bw/2*tan(ani),15,
								 bw/2, bw/2*tan(ani)+sbh1,15,
								-bw/2,-bw/2*tan(ani)+sbh1,15,
								-bw/2,-bw/2*tan(ani),-1
								ADD distboard+bw,(distboard+bw)*tan(ani),0
								NEXT i
								DEL nb+3
							ADD distpost,0,distpost*tan(ani)
							NEXT l
							DEL np-1
							FOR l=1 to np-1 step 1
								ROTx 90
								ADD dpost+distboard/2,sbhh2+bw+(dpost+distboard/2)*tan(ani),-bth/2
								FOR i=1 to nb+1 step 1
								PRISM_ 5,bth,
								-bw/2,-bw/2*tan(ani),15,
								 bw/2, bw/2*tan(ani),15,
								 bw/2, bw/2*tan(ani)+sbh2,15,
								-bw/2,-bw/2*tan(ani)+sbh2,15,
								-bw/2,-bw/2*tan(ani),-1
								ADD distboard+bw,(distboard+bw)*tan(ani),0
								NEXT i
								DEL nb+3
							ADD distpost,0,distpost*tan(ani)
							NEXT l
							DEL np-1
						ENDGROUP


						IF bt_m=1 THEN
							IF hrt_m=1 THEN
								PLACEGROUP "board rect straight V inclined"
								PLACEGROUP "subboard rect straight V inclined"
							ELSE
								PLACEGROUP subgroup ("board rect straight V inclined","handrail round straight inclined")
								PLACEGROUP subgroup ("subboard rect straight V inclined","handrail round straight inclined")
							ENDIF
							IF pt_m=1 THEN
								PLACEGROUP subgroup (subgroup ("subboard rect straight H inclined","post rect straight inclined"),"board rect straight V inclined")
							ELSE
								PLACEGROUP subgroup (subgroup ("subboard rect straight H inclined","post round straight inclined"),"board rect straight V inclined")
							ENDIF
						ELSE
							IF hrt_m=1 THEN
								PLACEGROUP subgroup ("board round straight V inclined","board round straight H inclined")
								PLACEGROUP subgroup (subgroup ("subboard round straight V inclined","subboard round straight H inclined"),"board round straight H inclined")
								ELSE
								PLACEGROUP subgroup (subgroup ("board round straight V inclined","handrail round straight inclined"),"board round straight H inclined")
								PLACEGROUP subgroup (subgroup (subgroup ("subboard round straight V inclined","subboard round straight H inclined"),"board round straight H inclined"),"handrail round straight inclined")
							ENDIF
							IF pt_m=1 THEN
								PLACEGROUP subgroup (subgroup ("subboard round straight H inclined","post rect straight inclined"),"board round straight V inclined")
								ELSE
								PLACEGROUP subgroup (subgroup ("subboard round straight H inclined","post round straight inclined"),"board round straight V inclined")
							ENDIF
						ENDIF

				CUTEND
				CUTEND
						KILLGROUP "handrail round straight inclined"
						KILLGROUP "post round straight inclined"
						KILLGROUP "post rect straight inclined"
						KILLGROUP "board rect straight H inclined"
						KILLGROUP "board round straight H inclined"
						KILLGROUP "subboard rect straight H inclined"
						KILLGROUP "subboard round straight H inclined"
						KILLGROUP "board rect straight V inclined"
						KILLGROUP "board round straight V inclined"
						KILLGROUP "subboard rect straight V inclined"
						KILLGROUP "subboard round straight V inclined"

				ENDIF 	!!! END OF 3D FEEDBACK MODE

			DEL 1

		ELSE			!Perpendicular Orientation
						!Measurement is always perpendicular to inclination in this case

				ROTy -ani
				ADDX XStartPoslrah

					!!3D FEEDBACK AT HOTSPOT EDITING
					IF GLOB_CONTEXT>20 and GLOB_CONTEXT<40 THEN

						ROTx 90
						ADDz -fth/2
							!!FRAME
							MATERIAL fmat
							PRISM_ 5,fth,
								0,ds,15,
								templrah,ds,15,
								templrah,ds+hr,15,
								0,ds+hr,15,
								0,ds,-1
						DEL 2


					ELSE		!! 3D DETAILED MODEL


						RESOL rescs
						!!! *** Handrail *** !!! *******************************************
						MATERIAL fmat

						GROUP "handrail round straight perp"			!Groups
						ADD  -hroLDiagonal,0,ds+hr-hrd/2
						ROTy 90
						CYLIND templrah+hroLDiagonal+hroRDiagonal,hrd/2
						DEL 2
						ENDGROUP


						IF hrt_m=1 THEN
							ROTx 90
							ADDz -hrw/2
								PRISM_ 5,hrw,
									-hroLDiagonal,ds+hr-hrh,15,
									templrah+hroRDiagonal,ds+hr-hrh,15,
									templrah+hroRDiagonal,ds+hr,15,
									-hroLDiagonal,ds+hr,15,
									-hroLDiagonal,ds+hr-hrh,-1
							DEL 2
						ELSE
							PLACEGROUP "handrail round straight perp"
						ENDIF


						!!! *** Post *** !!! *************************************************
						MATERIAL pmat

						IF hrt_m=1 THEN			!Post height calculation
						ph=hr+ds-hrh+gs_PostBaseOverhang
						ELSE
							IF pt_m=1 THEN
							ph=hr+ds-hrd+gs_PostBaseOverhang
							ELSE
							ph=hr+ds-hrd/2+gs_PostBaseOverhang
							ENDIF
						ENDIF

						GROUP "post round straight perp"			!Groups
						ADDZ -gs_PostBaseOverhang
							FOR i=1 to np step 1
							CYLIND ph,pd/2
							addx distpost
							NEXT i
							DEL np
						DEL 1
						ENDGROUP

						GROUP "post rect straight perp"
						ADDZ -gs_PostBaseOverhang
							FOR i=1 to np step 1
							PRISM_ 5,ph,
								-pw/2,-pth/2,15,
								 pw/2,-pth/2,15,
								 pw/2,pth/2,15,
								-pw/2,pth/2,15,
								-pw/2,-pth/2,-1
							addx distpost
							NEXT i
							DEL np
						DEL 1
						ENDGROUP

						IF pt_m=1 THEN
							PLACEGROUP "post rect straight perp"
						ELSE
							IF hrt_m=1 THEN
							PLACEGROUP "post round straight perp"
							ELSE
							PLACEGROUP subgroup ("post round straight perp","handrail round straight perp")
							ENDIF
						ENDIF


						!!! *** BOARDS *** !!! ***********************************************

						MATERIAL bmat

						!!!HORIZONTAL

						GROUP "board rect straight H perp"			!Groups
						ADDz  ds

						PRISM_ 5,bw,
							0,-bth/2,15,
							templrah,-bth/2,15,
							templrah,bth/2,15,
							0,bth/2,15,
							0,-bth/2,-1

						DEL 1
						ENDGROUP

						GROUP "board round straight H perp"
						ADDz  ds+bd/2
						ROTy 90
							CYLIND templrah,bd/2
						DEL 2
						ENDGROUP

						GROUP "subboard rect straight H perp"
							ADDz  sbhh1

							PRISM_ 5,bw,
								0,-bth/2,15,
								templrah,-bth/2,15,
								templrah,bth/2,15,
								0,bth/2,15,
								0,-bth/2,-1

							DEL 1

							ADDz sbhh2

							PRISM_ 5,bw,
								0,-bth/2,15,
								templrah,-bth/2,15,
								templrah,bth/2,15,
								0,bth/2,15,
								0,-bth/2,-1
							DEL 1

						ENDGROUP

						GROUP "subboard round straight H perp"
							ADDz  sbhh1
							ROTy 90
								CYLIND templrah,bd/2
							DEL 2
							ADDz  sbhh2
							ROTy 90
								CYLIND templrah,bd/2
							DEL 2
						ENDGROUP


						IF bt_m= 1 THEN
							IF pt_m=1 THEN
							PLACEGROUP subgroup ("board rect straight H perp","post rect straight perp")
							ELSE
							PLACEGROUP subgroup ("board rect straight H perp","post round straight perp")
							ENDIF
						ELSE
							IF pt_m=1 THEN
							PLACEGROUP subgroup ("board round straight H perp","post rect straight perp")
							ELSE
							PLACEGROUP subgroup ("board round straight H perp","post round straight perp")
							ENDIF
						ENDIF


						!!!VERTICAL

						IF hrt_m=1 THEN			!Board height calculation
							IF bt_m=1 THEN
							bh=hr-bw-hrh
							ELSE
							bh=hr-bd/2-hrh
							ENDIF
						ELSE
							IF bt_m=1 THEN
							bh=hr-bw-hrd
							ELSE
							bh=hr-bd/2-hrd/2
							ENDIF
						ENDIF


						GROUP "board round straight V perp"			!Groups
							FOR k=1 to np-1 step 1
								ADD dpost+distboard+bd/2,0,ds+bd/2
								FOR i=1 to nb step 1
									CYLIND bh,bd/2
								addx distboard+bd
								NEXT i
								DEL nb+1
							addx distpost
							NEXT k
							DEL np-1
						ENDGROUP

						GROUP "board rect straight V perp"
							FOR l=1 to np-1 step 1
								ADD dpost+distboard+bw/2,0,ds+bw
								FOR i=1 to nb step 1

								PRISM_ 5,bh,
									-bw/2,-bth/2,15,
									 bw/2,-bth/2,15,
									 bw/2,bth/2,15,
									-bw/2,bth/2,15,
									-bw/2,-bth/2,-1

								addx distboard+bw
								NEXT i
								DEL nb+1
							addx distpost
							NEXT l
							DEL np-1
						ENDGROUP


						GROUP "subboard round straight V perp"
							FOR k=1 to np-1 step 1
								ADD dpost+distboard+bd/2,0,ds+bd/2
								addx -(distboard+bd)/2
								FOR i=1 to nb+1 step 1
									CYLIND sbh1,bd/2
								addx distboard+bd
								NEXT i
								DEL nb+3
							addx distpost
							NEXT k
							DEL np-1
							FOR k=1 to np-1 step 1
								ADD dpost+distboard+bd/2,0,sbhh2
								addx -(distboard+bd)/2
								FOR i=1 to nb+1 step 1
									CYLIND sbh2,bd/2
								addx distboard+bd
								NEXT i
								DEL nb+3
							addx distpost
							NEXT k
							DEL np-1
						ENDGROUP

						GROUP "subboard rect straight V perp"
							FOR l=1 to np-1 step 1
								ADD dpost+distboard+bw/2,0,ds+bw
								addx -(distboard+bw)/2
								FOR i=1 to nb+1 step 1

								PRISM_ 5,sbh1,
									-bw/2,-bth/2,15,
									 bw/2,-bth/2,15,
									 bw/2,bth/2,15,
									-bw/2,bth/2,15,
									-bw/2,-bth/2,-1

								addx distboard+bw
								NEXT i
								DEL nb+3
							addx distpost
							NEXT l
							DEL np-1
							FOR l=1 to np-1 step 1
								ADD dpost+distboard+bw/2,0,sbhh2+bw
								addx -(distboard+bw)/2
								FOR i=1 to nb+1 step 1

								PRISM_ 5,sbh2,
									-bw/2,-bth/2,15,
									 bw/2,-bth/2,15,
									 bw/2,bth/2,15,
									-bw/2,bth/2,15,
									-bw/2,-bth/2,-1

								addx distboard+bw
								NEXT i
								DEL nb+3
							addx distpost
							NEXT l
							DEL np-1
						ENDGROUP


						IF bt_m=1 THEN
							IF hrt_m=1 THEN
								PLACEGROUP "board rect straight V perp"
								PLACEGROUP "subboard rect straight V perp"
								ELSE
								PLACEGROUP subgroup ("board rect straight V perp","handrail round straight perp")
								PLACEGROUP subgroup ("subboard rect straight V perp","handrail round straight perp")
							ENDIF
							IF pt_m=1 THEN
								PLACEGROUP subgroup (subgroup ("subboard rect straight H perp","post rect straight perp"),"board rect straight V perp")
								ELSE
								PLACEGROUP subgroup (subgroup ("subboard rect straight H perp","post round straight perp"),"board rect straight V perp")
							ENDIF
						ELSE
							IF hrt_m=1 THEN
								PLACEGROUP subgroup ("board round straight V perp","board round straight H perp")
								PLACEGROUP subgroup (subgroup ("subboard round straight V perp","subboard round straight H perp"),"board round straight H perp")
								ELSE
								PLACEGROUP subgroup (subgroup ("board round straight V perp","handrail round straight perp"),"board round straight H perp")
								PLACEGROUP subgroup (subgroup (subgroup ("subboard round straight V perp","subboard round straight H perp"),"board round straight H perp"),"handrail round straight perp")
							ENDIF
							IF pt_m=1 THEN
								PLACEGROUP subgroup (subgroup ("subboard round straight H perp","post rect straight perp"),"board round straight V perp")
								ELSE
								PLACEGROUP subgroup (subgroup ("subboard round straight H perp","post round straight perp"),"board round straight V perp")
							ENDIF
						ENDIF


						KILLGROUP "handrail round straight perp"
						KILLGROUP "post round straight perp"
						KILLGROUP "post rect straight perp"
						KILLGROUP "board rect straight H perp"
						KILLGROUP "board round straight H perp"
						KILLGROUP "subboard rect straight H perp"
						KILLGROUP "subboard round straight H perp"
						KILLGROUP "board rect straight V perp"
						KILLGROUP "board round straight V perp"
						KILLGROUP "subboard rect straight V perp"
						KILLGROUP "subboard round straight V perp"

					ENDIF	!! END OF 3D MODEL
			DEL 1		!! END OF DRAG
			DEL 1		!! END OF ROTATION
		ENDIF
	ENDIF


!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** INCLINED AND CURVED *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!


	IF ABS(ani)>EPS and ptyp_m<>1 THEN

			RESOL rescs

			!!!HANDRAIL

			MATERIAL fmat


			!!3D FEEDBACK AT HOTSPOT EDITING
			IF GLOB_CONTEXT>20 and GLOB_CONTEXT<40 THEN

				!!!!FRAME
				MATERIAL fmat

				alphai=-alphaincl
				deltazi=-deltazincl
				for i=1 to nalphaincl+3 step 1
				put rb*sin(alphai),rb-rb*cos(alphai),ds+deltazi
				alphai=alphai+alphaincl
				deltazi=deltazi+deltazincl
				NEXT i

				TUBEA 5,nalphaincl+3,1+2+16+32,
					-fth/2,0,0,
					fth/2,0,0,
					fth/2,hr,0,
					-fth/2,hr,0,
					-fth/2,0,-1,
					get (nsp)

			ELSE


				RestAngleL=alphahroL-nalphahroL*alphaincl		!!Rest Angle= Overhang Angle- Segments Points Angle
				LOHkerul=(rb*pi*alphahroL)/180					!!Perimeter of Handrail
				deltazLOH=LOHkerul*sin(ani)						!!vertical distance of Handrail
				deltara=deltazLOH-(deltazincl*nalphahroL)		!!vertical step of Rest Angle

				RestAngleR=alphahroR-nalphahroR*alphaincl
				ROHkerul=(rb*pi*alphahroR)/180
				deltazROH=ROHkerul*sin(ani)
				deltaraR=deltazROH-(deltazincl*nalphahroR)


				alphai=-(nalphahroL+1)*alphaincl
				deltazi=-(nalphahroL+1)*deltazincl

				if ABS(hroR)<EPS THEN
				tempStep=1
				ELSE
				tempStep=0
				ENDIF

					PUT rb*sin(-alphahroL-restangleL),rb-rb*cos(-alphahroL-restangleL),ds-deltazLOH-deltara
					PUT rb*sin(-alphahroL),rb-rb*cos(-alphahroL),ds-deltazLOH
					PUT rb*sin(-alphahroL+restangleL),rb-rb*cos(-alphahroL+restangleL),ds-deltazLOH+deltara

				if abs(nalphahroL)>EPS then		!! Left Handrail
				FOR i=1 to nalphahroL step 1
					PUT rb*sin(-alphahroL+restangleL+i*alphaincl),rb-rb*cos(-alphahroL+restangleL+i*alphaincl),ds-deltazLOH+deltara+i*deltazincl
				Next i
				endif

				FOR i=0 to nalphaincl+tempStep step 1		!! Handrail between Posts
					PUT rb*sin(i*alphaincl),rb-rb*cos(i*alphaincl),ds+i*deltazincl
				NEXT i

			IF ABS(hroR)>EPS THEN				!! Right Handrail

				if abs(nalphahroR)>EPS then
				FOR i=1 to nalphahroR step 1
					PUT rb*sin((nalphaincl+i)*alphaincl),rb-rb*cos((nalphaincl+i)*alphaincl),ds+(nalphaincl+i)*deltazincl
				Next i
				endif

					PUT rb*sin((nalphaincl+nalphahroR)*alphaincl+restangleR),rb-rb*cos((nalphaincl+nalphahroR)*alphaincl+restangleR),ds+(nalphaincl+nalphahroR)*deltazincl+deltaraR
					PUT rb*sin((nalphaincl+nalphahroR)*alphaincl+2*restangleR),rb-rb*cos((nalphaincl+nalphahroR)*alphaincl+2*restangleR),ds+(nalphaincl+nalphahroR)*deltazincl+2*deltaraR
			ENDIF


				GROUP "handrail round inclined curved"
					ADDz hr-hrd/2
					tubea 6,nsp/3,1+2+16+32,
						-hrd/2,0,1,
						 0,-1,801,
						 hrd/2,0,1001,
						 0,1,801,
						-hrd/2,0,1001,
						-hrd/2,0,-1,
						use (nsp)
					DEL 1
				ENDGROUP

				GROUP "handrail rect inclined curved"
					ADDz hr-hrh
					tubea 5,nsp/3,1+2+16+32,
						-hrw/2,0,0,
						 hrw/2,0,0,
						 hrw/2,hrh,0,
						-hrw/2,hrh,0,
						-hrw/2,0,-1,
						get (nsp)
					DEL 1
				ENDGROUP


				IF hrt_m=1 THEN
				PLACEGROUP "handrail rect inclined curved"
				ELSE
				PLACEGROUP "handrail round inclined curved"
				ENDIF


				!!! *** POSTS *** !!! *******************************************************

				MATERIAL pmat

				IF hrt_m=1 THEN			!Post height calculation
				ph=hr+ds-hrh/2+gs_PostBaseOverhang
				ELSE
					IF pt_m=1 THEN
					ph=hr+ds-hrd/2+gs_PostBaseOverhang
					ELSE
					ph=hr+ds-hrd/2+gs_PostBaseOverhang
					ENDIF
				ENDIF

				GROUP "post round inclined curved"			!Groups
				ADDZ -gs_PostBaseOverhang
					FOR i=1 to np step 1
					CYLIND ph,pd/2
					ADDy rb
					ROTz anglepost
					ADDy -rb
					ADDz deltazpost
					NEXT i
					DEL 4*np
				DEL 1
				ENDGROUP

				GROUP "post rect inclined curved"
				ADDz -gs_PostBaseOverhang
					FOR i=1 to np step 1
					PRISM_ 5,ph,
						-pw/2,-pth/2,15,
						 pw/2,-pth/2,15,
						 pw/2,pth/2,15,
						-pw/2,pth/2,15,
						-pw/2,-pth/2,-1
					ADDy rb
					ROTz anglepost
					ADDy -rb
					ADDz deltazpost
					NEXT i
					DEL 4*np
				DEL 1
				ENDGROUP

				IF pt_m=1 THEN
					IF hrt_m=1 THEN
					PLACEGROUP subgroup ("post rect inclined curved","handrail rect inclined curved")
					ELSE
					PLACEGROUP subgroup ("post rect inclined curved","handrail round inclined curved")
					ENDIF
				ELSE
					IF hrt_m=1 THEN
					PLACEGROUP subgroup ("post round inclined curved","handrail rect inclined curved")
					ELSE
					PLACEGROUP subgroup ("post round inclined curved","handrail round inclined curved")
					ENDIF
				ENDIF





				!!! *** BOARDS *** !!! ******************************************************

				MATERIAL bmat

				!!!HORIZONTAL

				alphai=-alphaincl
				deltazi=-deltazincl
				FOR i=1 to nalphaincl+3 step 1
				put rb*sin(alphai),rb-rb*cos(alphai),deltazi
				alphai=alphai+alphaincl
				deltazi=deltazi+deltazincl
				NEXT i

				GROUP "board round inclined curved H"
					ADDz ds+bd/2
					tubea 6,nalphaincl+3,1+2+16+32,
					-bd/2,0,1,
					 0,-1,801,
					 bd/2,0,1001,
					 0,1,801,
					-bd/2,0,1001,
					-bd/2,0,-1,
					use (nsp)
					DEL 1
				ENDGROUP

				GROUP "board rect inclined curved H"
					ADDz ds
					tubea 5,nalphaincl+3,1+2+16+32,
					-bth/2,0,0,
					 bth/2,0,0,
					 bth/2,bw,0,
					-bth/2,bw,0,
					-bth/2,0,-1,
					use (nsp)
					DEL 1
				ENDGROUP


				GROUP "subboard round inclined curved H"
					ADDz sbhh1
					tubea 6,nalphaincl+3,1+2+16+32,
					-bd/2,0,1,
					 0,-1,801,
					 bd/2,0,1001,
					 0,1,801,
					-bd/2,0,1001,
					-bd/2,0,-1,
					use (nsp)
					DEL 1
					ADDz sbhh2
					tubea 6,nalphaincl+3,1+2+16+32,
					-bd/2,0,1,
					 0,-1,801,
					 bd/2,0,1001,
					 0,1,801,
					-bd/2,0,1001,
					-bd/2,0,-1,
					use (nsp)
					DEL 1
				ENDGROUP

				GROUP "subboard rect inclined curved H"
					ADDz sbhh1
					tubea 5,nalphaincl+3,1+2+16+32,
					-bth/2,0,0,
					 bth/2,0,0,
					 bth/2,bw,0,
					-bth/2,bw,0,
					-bth/2,0,-1,
					use (nsp)
					DEL 1
					ADDz sbhh2
					tubea 5,nalphaincl+3,1+2+16+32,
					-bth/2,0,0,
					 bth/2,0,0,
					 bth/2,bw,0,
					-bth/2,bw,0,
					-bth/2,0,-1,
					get (nsp)
					DEL 1
				ENDGROUP

				IF bt_m= 1 THEN
					IF pt_m=1 THEN
					PLACEGROUP subgroup ("board rect inclined curved H","post rect inclined curved")
					ELSE
					PLACEGROUP subgroup ("board rect inclined curved H","post round inclined curved")
					ENDIF
				ELSE
					IF pt_m=1 THEN
					PLACEGROUP subgroup ("board round inclined curved H","post rect inclined curved")
					ELSE
					PLACEGROUP subgroup ("board round inclined curved H","post round inclined curved")
					ENDIF
				ENDIF




				!!!VERTICAL

				IF hrt_m=1 THEN			!Board height calculation
					IF bt_m=1 THEN
					bh=hr-bw/2-hrh/2
					ELSE
					bh=hr-bd/2-hrh/2
					ENDIF
				ELSE
					IF bt_m=1 THEN
					bh=hr-bw/2-hrd/2
					ELSE
					bh=hr-bd/2-hrd/2
					ENDIF
				ENDIF


				GROUP "board round inclined curved V"			!Groups
					FOR k=1 to np-1 step 1
						ADD 0,rb,ds+bd/2
						ROTz dpostangle+distboardangle+dboardangle/2
						ADDy -rb
						ADDz deltazboard0
						FOR i=1 to nb step 1
						CYLIND bh,bd/2
						ADDy rb
						ROTz distboardangle+dboardangle
						ADDy -rb
						ADDz deltazboard
						NEXT i
						DEL 4*nb+4
					ADDy rb
					ROTz anglepost
					ADDy -rb
					ADDz deltazpost
					NEXT k
					DEL 4*(np-1)
				ENDGROUP

				GROUP "board rect inclined curved V"
					FOR l=1 to np-1 step 1
						ADD 0,rb,ds+bw/2
						ROTz dpostangle+distboardangle+dboardangle/2
						ADDy -rb
						ADDz deltazboard0
						FOR i=1 to nb step 1
						PRISM_ 5,bh,
						-bw/2,-bth/2,15,
						 bw/2,-bth/2,15,
						 bw/2,bth/2,15,
						-bw/2,bth/2,15,
						-bw/2,-bth/2,-1
						ADDy rb
						ROTz distboardangle+dboardangle
						ADDy -rb
						ADDz deltazboard
						NEXT i
						DEL 4*nb+4
					ADDy rb
					ROTz anglepost
					ADDy -rb
					ADDz deltazpost
					NEXT l
					DEL 4*(np-1)
				ENDGROUP

				GROUP "subboard round inclined curved V"
					FOR k=1 to np-1 step 1
						ADD 0,rb,ds+bd/2
						ROTz dpostangle+distboardangle/2
						ADDy -rb
						ADDz deltazboard0sub
						FOR i=1 to nb+1 step 1
						CYLIND sbh1,bd/2
						ADDy rb
						ROTz distboardangle+dboardangle
						ADDy -rb
						ADDz deltazboard
						NEXT i
						DEL 4*(nb+1)+4
					ADDy rb
					ROTz anglepost
					ADDy -rb
					ADDz deltazpost
					NEXT k
					DEL 4*(np-1)
					FOR k=1 to np-1 step 1
						ADD 0,rb,sbhh2
						ROTz dpostangle+distboardangle/2
						ADDy -rb
						ADDz deltazboard0sub
						FOR i=1 to nb+1 step 1
						CYLIND sbh1,bd/2
						ADDy rb
						ROTz distboardangle+dboardangle
						ADDy -rb
						ADDz deltazboard
						NEXT i
						DEL 4*(nb+1)+4
					ADDy rb
					ROTz anglepost
					ADDy -rb
					ADDz deltazpost
					NEXT k
					DEL 4*(np-1)
				ENDGROUP

				GROUP "subboard rect inclined curved V"
					FOR l=1 to np-1 step 1
						ADD 0,rb,ds+bw/2
						ROTz dpostangle+distboardangle/2
						ADDy -rb
						ADDz deltazboard0sub
						FOR i=1 to nb+1 step 1
						PRISM_ 5,sbh1+bw,
						-bw/2,-bth/2,15,
						 bw/2,-bth/2,15,
						 bw/2,bth/2,15,
						-bw/2,bth/2,15,
						-bw/2,-bth/2,-1
						ADDy rb
						ROTz distboardangle+dboardangle
						ADDy -rb
						ADDz deltazboard
						NEXT i
						DEL 4*(nb+1)+4
					ADDy rb
					ROTz anglepost
					ADDy -rb
					ADDz deltazpost
					NEXT l
					DEL 4*(np-1)
					FOR l=1 to np-1 step 1
						ADD 0,rb,sbhh2+bw/2
						ROTz dpostangle+distboardangle/2
						ADDy -rb
						ADDz deltazboard0sub
						FOR i=1 to nb+1 step 1
						PRISM_ 5,sbh2+bw/2,
						-bw/2,-bth/2,15,
						 bw/2,-bth/2,15,
						 bw/2,bth/2,15,
						-bw/2,bth/2,15,
						-bw/2,-bth/2,-1
						ADDy rb
						ROTz distboardangle+dboardangle
						ADDy -rb
						ADDz deltazboard
						NEXT i
						DEL 4*(nb+1)+4
					ADDy rb
					ROTz anglepost
					ADDy -rb
					ADDz deltazpost
					NEXT l
					DEL 4*(np-1)
				ENDGROUP



				IF bt_m=1 THEN
					IF hrt_m=1 THEN
						PLACEGROUP subgroup (subgroup("board rect inclined curved V","handrail rect inclined curved"),"board rect inclined curved H")
						PLACEGROUP subgroup (subgroup ("subboard rect inclined curved V","subboard rect inclined curved H"),"board rect inclined curved H")
						ELSE
						PLACEGROUP subgroup ("board rect inclined curved V","handrail round inclined curved")
						PLACEGROUP subgroup ("subboard rect inclined curved V","handrail round inclined curved")
					ENDIF
					IF pt_m=1 THEN
						PLACEGROUP subgroup (subgroup ("subboard rect inclined curved H","post rect inclined curved"),"board rect inclined curved V")
						ELSE
						PLACEGROUP subgroup (subgroup ("subboard rect inclined curved H","post round inclined curved"),"board rect inclined curved V")
					ENDIF
				ELSE
					IF hrt_m=1 THEN
						PLACEGROUP subgroup ("board round inclined curved V","board round inclined curved H")
						PLACEGROUP subgroup (subgroup ("subboard round inclined curved V","subboard round inclined curved H"),"board round inclined curved H")
						ELSE
						PLACEGROUP subgroup (subgroup ("board round inclined curved V","handrail round inclined curved"),"board round inclined curved H")
						PLACEGROUP subgroup (subgroup (subgroup ("subboard round inclined curved V","subboard round inclined curved H"),"board round inclined curved H"),"handrail round inclined curved")
					ENDIF
					IF pt_m=1 THEN
						PLACEGROUP subgroup (subgroup ("subboard round inclined curved H","post rect inclined curved"),"board round inclined curved V")
						ELSE
						PLACEGROUP subgroup (subgroup ("subboard round inclined curved H","post round inclined curved"),"board round inclined curved V")
					ENDIF
				ENDIF


				KILLGROUP "handrail round inclined curved"
				KILLGROUP "handrail rect inclined curved"
				KILLGROUP "post round inclined curved"
				KILLGROUP "post rect inclined curved"
				KILLGROUP "board rect inclined curved H"
				KILLGROUP "board round inclined curved H"
				KILLGROUP "subboard rect inclined curved H"
				KILLGROUP "subboard round inclined curved H"
				KILLGROUP "board rect inclined curved V"
				KILLGROUP "board round inclined curved V"
				KILLGROUP "subboard rect inclined curved V"
				KILLGROUP "subboard round inclined curved V"


		ENDIF

	ENDIF


ENDIF


!!DETAILED 3D END!!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! ** HOTSPOTS ** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

	IF LengthSize = 0 THEN			!!!OVERHANG OF HANDRAIL
		temphroL = -hroL
		temphroR = hroR
		RefPoint1 = 1
		RefPoint2 = -1

		InclRefPoint = -tan(ani)

		temphroLDiag = -hroLDiagonal
		temphroRDiag = hroRDiagonal
	ELSE
		temphroL = hroL
		temphroR = -hroR
		RefPoint1 = -1
		RefPoint2 = 1

		InclRefPoint = tan(ani)

		temphroLDiag = hroLDiagonal
		temphroRDiag = -hroRDiagonal
	ENDIF

	!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** STRAIGHT *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

	IF cfs=0 THEN
		IF ABS(ani)<EPS and ptyp_m=1 THEN

				!!!LENGHT
				HOTSPOT 0,0,ds+hr,unID,lra,1+256 : unID=unID+1
				HOTSPOT lra,0,ds+hr,unID,lra,2 : unID=unID+1
				HOTSPOT -1,0,ds+hr,unID,lra,3 : unID=unID+1

				IF LengthSize = 0 THEN
					HOTSPOT 0,0,0,unID,lra,1+256 : unID=unID+1
					HOTSPOT lra,0,0,unID,lra,2 : unID=unID+1
					HOTSPOT -1,0,0,unID,lra,3 : unID=unID+1

					HOTSPOT 0,0,ds,unID,lra,1+256 : unID=unID+1
					HOTSPOT lra,0,ds,unID,lra,2 : unID=unID+1
					HOTSPOT -1,0,ds,unID,lra,3 : unID=unID+1
				ENDIF

				!!!DISTANCE FROM FLOOR
				HOTSPOT templra/2+LengthSize*hroL,0,0,unID,ds,1+128 : unID=unID+1
				HOTSPOT templra/2+LengthSize*hroL,0,ds,unID,ds,2 : unID=unID+1
				HOTSPOT templra/2+LengthSize*hroL,0,-1,unID,ds,3 : unID=unID+1

				!!!HEIGHT OF RAILING
				HOTSPOT templra/2+LengthSize*hroL,0,ds,unID,hr,1 : unID=unID+1
				HOTSPOT templra/2+LengthSize*hroL,0,ds+hr,unID,hr,2 : unID=unID+1
				HOTSPOT templra/2+LengthSize*hroL,0,-1,unID,hr,3 : unID=unID+1

				!!!POST BASE OVERHANG
				HOTSPOT LengthSize*hroL,0,0,unID,gs_PostBaseOverhang,1 : unID=unID+1
				HOTSPOT LengthSize*hroL,0,-gs_PostBaseOverhang,unID,gs_PostBaseOverhang,2 : unID=unID+1
				HOTSPOT LengthSize*hroL,0,1,unID,gs_PostBaseOverhang,3 : unID=unID+1

				HOTSPOT lra-LengthSize*hroR,0,0,unID,gs_PostBaseOverhang,1 : unID=unID+1
				HOTSPOT lra-LengthSize*hroR,0,-gs_PostBaseOverhang,unID,gs_PostBaseOverhang,2 : unID=unID+1
				HOTSPOT lra-LengthSize*hroR,0,1,unID,gs_PostBaseOverhang,3 : unID=unID+1

				IF gs_detlevel_3D_m=2 THEN		!!DETAILED
					!!!OVERHANG OF RAILING
					HOTSPOT 0,0,ds+hr,unID,hroL,1+128 : unID=unID+1
					HOTSPOT temphroL,0,ds+hr,unID,hroL,2 : unID=unID+1
					HOTSPOT RefPoint1,0,ds+hr,unID,hroL,3 : unID=unID+1

					HOTSPOT lra,0,ds+hr,unID,hroR,1+128 : unID=unID+1
					HOTSPOT lra+temphroR,0,ds+hr,unID,hroR,2 : unID=unID+1
					HOTSPOT lra+RefPoint2,0,ds+hr,unID,hroR,3 : unID=unID+1
				ENDIF

		ENDIF

	!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** STRAIGHT CURVED *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

		IF ABS(ani)<EPS and ptyp_m<>1 THEN
			IF ab<360 THEN

					IF ptyp_m=3 THEN
					!!!ROTATE
						HOTSPOT 0,rb,ds,unID,ab,6 : unID=unID+1
						HOTSPOT 0,0,ds,unID,ab,4+256 : unID=unID+1
						HOTSPOT rb*sin(ab),rb-rb*cos(ab),ds,unID,ab,5 : unID=unID+1

						HOTSPOT 0,rb,ds+hr,unID,ab,6 : unID=unID+1
						HOTSPOT 0,0,ds+hr,unID,ab,4+256 : unID=unID+1
						HOTSPOT rb*sin(ab),rb-rb*cos(ab),ds+hr,unID,ab,5 : unID=unID+1

					!!!FIX HOTSPOT AT FLOOR
						HOTSPOT 0,0,0,unID : unID=unID+1
						HOTSPOT rb*sin(ab),rb-rb*cos(ab),0,unID : unID=unID+1
					ENDIF

					!!!HEIGHT OF RAILING
						HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),ds,unID,hr,1+128 : unID=unID+1
						HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),ds+hr,unID,hr,2 : unID=unID+1
						HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),-1,unID,ds,3 : unID=unID+1

					!!! DISTANCE FROM FLOOR
						HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),0,unID,ds,1 : unID=unID+1
						HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),ds,unID,ds,2 : unID=unID+1
						HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),-1,unID,ds,3 : unID=unID+1

					!!!POST BASE OVERHANG
						HOTSPOT 0,0,0,unID,gs_PostBaseOverhang,1+128 : unID=unID+1
						HOTSPOT 0,0,-gs_PostBaseOverhang,unID,gs_PostBaseOverhang,2 : unID=unID+1
						HOTSPOT 0,0,1,unID,gs_PostBaseOverhang,3 : unID=unID+1

						HOTSPOT rb*sin(ab),rb-rb*cos(ab),0,unID,gs_PostBaseOverhang,1+128 : unID=unID+1
						HOTSPOT rb*sin(ab),rb-rb*cos(ab),-gs_PostBaseOverhang,unID,gs_PostBaseOverhang,2 : unID=unID+1
						HOTSPOT rb*sin(ab),rb-rb*cos(ab),1,unID,gs_PostBaseOverhang,3 : unID=unID+1

					IF ptyp_m=2 THEN
						!!!HEIGHT OF RAILING
							HOTSPOT 0,0,ds,unID,hr,1+128 : unID=unID+1
							HOTSPOT 0,0,ds+hr,unID,hr,2 : unID=unID+1
							HOTSPOT 0,0,-1,unID,hr,3 : unID=unID+1

							HOTSPOT rb*sin(ab),rb-rb*cos(ab),ds,unID,hr,1+128 : unID=unID+1
							HOTSPOT rb*sin(ab),rb-rb*cos(ab),ds+hr,unID,hr,2 : unID=unID+1
							HOTSPOT rb*sin(ab),rb-rb*cos(ab),-1,unID,hr,3 : unID=unID+1

						!!! DISTANCE FROM FLOOR
							HOTSPOT 0,0,0,unID,ds,1 : unID=unID+1
							HOTSPOT 0,0,ds,unID,ds,2 : unID=unID+1
							HOTSPOT 0,0,-1,unID,ds,3 : unID=unID+1

							HOTSPOT rb*sin(ab),rb-rb*cos(ab),0,unID,ds,1 : unID=unID+1
							HOTSPOT rb*sin(ab),rb-rb*cos(ab),ds,unID,ds,2 : unID=unID+1
							HOTSPOT rb*sin(ab),rb-rb*cos(ab),-1,unID,ds,3 : unID=unID+1
					ENDIF


			ELSE	!!!ANGLE=360


				!!!HOTSPOTS FOR GRAPHICAL EDITING
				!!!HEIGHT

					HOTSPOT 0,0,ds,unID,hr,1 : unID=unID+1
					HOTSPOT 0,0,ds+hr,unID,hr,2 : unID=unID+1
					HOTSPOT 0,0,-1,unID,hr,3 : unID=unID+1

					HOTSPOT rb,rb,ds,unID,hr,1 : unID=unID+1
					HOTSPOT rb,rb,ds+hr,unID,hr,2 : unID=unID+1
					HOTSPOT rb,rb,-1,unID,hr,3 : unID=unID+1

					HOTSPOT 0,2*rb,ds,unID,hr,1 : unID=unID+1
					HOTSPOT 0,2*rb,ds+hr,unID,hr,2 : unID=unID+1
					HOTSPOT 0,2*rb,-1,unID,hr,3 : unID=unID+1

					HOTSPOT -rb,rb,ds,unID,hr,1 : unID=unID+1
					HOTSPOT -rb,rb,ds+hr,unID,hr,2 : unID=unID+1
					HOTSPOT -rb,rb,-1,unID,hr,3 : unID=unID+1

					HOTSPOT 0,0,0,unID,ds,1 : unID=unID+1
					HOTSPOT 0,0,ds,unID,ds,2 : unID=unID+1
					HOTSPOT 0,0,-1,unID,ds,3 : unID=unID+1

					HOTSPOT rb,rb,0,unID,ds,1 : unID=unID+1
					HOTSPOT rb,rb,ds,unID,ds,2 : unID=unID+1
					HOTSPOT rb,rb,-1,unID,ds,3 : unID=unID+1

					HOTSPOT 0,2*rb,0,unID,ds,1 : unID=unID+1
					HOTSPOT 0,2*rb,ds,unID,ds,2 : unID=unID+1
					HOTSPOT 0,2*rb,-1,unID,ds,3 : unID=unID+1

					HOTSPOT -rb,rb,0,unID,ds,1 : unID=unID+1
					HOTSPOT -rb,rb,ds,unID,ds,2 : unID=unID+1
					HOTSPOT -rb,rb,-1,unID,ds,3 : unID=unID+1

					!!!POST BASE OVERHANG
					HOTSPOT 0,0,0,unID,gs_PostBaseOverhang,1+128 : unID=unID+1
					HOTSPOT 0,0,-gs_PostBaseOverhang,unID,gs_PostBaseOverhang,2 : unID=unID+1
					HOTSPOT 0,0,1,unID,gs_PostBaseOverhang,3 : unID=unID+1

					HOTSPOT rb,rb,0,unID,gs_PostBaseOverhang,1+128 : unID=unID+1
					HOTSPOT rb,rb,-gs_PostBaseOverhang,unID,gs_PostBaseOverhang,2 : unID=unID+1
					HOTSPOT rb,rb,1,unID,gs_PostBaseOverhang,3 : unID=unID+1

					HOTSPOT 0,2*rb,0,unID,gs_PostBaseOverhang,1+128 : unID=unID+1
					HOTSPOT 0,2*rb,-gs_PostBaseOverhang,unID,gs_PostBaseOverhang,2 : unID=unID+1
					HOTSPOT 0,2*rb,1,unID,gs_PostBaseOverhang,3 : unID=unID+1

					HOTSPOT -rb,rb,0,unID,gs_PostBaseOverhang,1+128 : unID=unID+1
					HOTSPOT -rb,rb,-gs_PostBaseOverhang,unID,gs_PostBaseOverhang,2 : unID=unID+1
					HOTSPOT -rb,rb,1,unID,gs_PostBaseOverhang,3 : unID=unID+1

			ENDIF
		ENDIF

	!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** STRAIGHT INCLINED *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

		IF ABS(ani)>EPS and ptyp_m=1 THEN			!!ptyp=Straight
			IF rom_m=1 THEN					!!!!VERTICAL Orientation

					IF rmm_m=2 THEN			!!Perpendicular Measurement
						ftw=ftw/cos(ani)
						fbw=fbw/cos(ani)
					ENDIF

					IF rmm_m=1 THEN			!!!!VERTICAL Measurement
						temp_ds=ds
						temp_hr=hr
					ELSE					!!Perpendicular Measurement
						temp_ds=dsPerp
						temp_hr=hrPerp
					ENDIF


					!!!	HOTSPOTS FOR GRAPHICAL EDITING
					!!! LENGTH OF RAILING

						HOTSPOT 0,	0,	temp_ds+temp_hr,				unID, lrah, 1+256 : unID=unID+1
						HOTSPOT -1, 0,	temp_ds+temp_hr-tan(ani),		unID, lrah, 3 : unID=unID+1
						HOTSPOT lra,0, 	temp_ds+temp_hr+lra*tan(ani),	unID, lrah, 2 : unID=unID+1

					IF LengthSize = 0 THEN
						HOTSPOT 0,	0,	0,				unID, lrah, 1+256 : unID=unID+1
						HOTSPOT -1, 0,	0-tan(ani),		unID, lrah, 3 : unID=unID+1
						HOTSPOT lra,0, 	0+lra*tan(ani),	unID, lrah, 2 : unID=unID+1

						HOTSPOT 0,	0,	temp_ds,				unID, lrah, 1+256 : unID=unID+1
						HOTSPOT -1, 0,	temp_ds-tan(ani),		unID, lrah, 3 : unID=unID+1
						HOTSPOT lra,0, 	temp_ds+lra*tan(ani),	unID, lrah, 2 : unID=unID+1
					ENDIF

					IF rmm_m=1 THEN
						!!! DISTANCE FROM FLOOR
						HOTSPOT templra/2+LengthSize*hroL,	0,	(templra/2+LengthSize*hroL)*tan(ani),	unID, ds, 1+128 : unID=unID+1
						HOTSPOT templra/2+LengthSize*hroL,	0,	(templra/2+LengthSize*hroL)*tan(ani)-1,	unID, ds, 3 : unID=unID+1
						HOTSPOT templra/2+LengthSize*hroL,	0, 	(templra/2+LengthSize*hroL)*tan(ani)+temp_ds,	unID, ds, 2 : unID=unID+1

						!!! HEIGHT of RAILING
						HOTSPOT templra/2+LengthSize*hroL,	0,	temp_ds+(templra/2+LengthSize*hroL)*tan(ani),	unID, hr, 1+128 : unID=unID+1
						HOTSPOT templra/2+LengthSize*hroL,	0,	temp_ds+(templra/2+LengthSize*hroL)*tan(ani)-1,	unID, hr, 3 : unID=unID+1
						HOTSPOT templra/2+LengthSize*hroL,	0, 	temp_ds+(templra/2+LengthSize*hroL)*tan(ani)+temp_hr,unID, hr, 2 : unID=unID+1

						!!!POST BASE OVERHANG
						HOTSPOT LengthSize*hroL,0,LengthSize*hroL*tan(ani),unID,gs_PostBaseOverhang,1 : unID=unID+1
						HOTSPOT LengthSize*hroL,0,LengthSize*hroL*tan(ani)-gs_PostBaseOverhang,unID,gs_PostBaseOverhang,2 : unID=unID+1
						HOTSPOT LengthSize*hroL,0,LengthSize*hroL*tan(ani)+1,unID,gs_PostBaseOverhang,3 : unID=unID+1

						HOTSPOT lra-LengthSize*hroR,0,LengthSize*hroL*tan(ani)+templra*tan(ani),unID,gs_PostBaseOverhang,1 : unID=unID+1
						HOTSPOT lra-LengthSize*hroR,0,LengthSize*hroL*tan(ani)+templra*tan(ani)-gs_PostBaseOverhang,unID,gs_PostBaseOverhang,2 : unID=unID+1
						HOTSPOT lra-LengthSize*hroR,0,LengthSize*hroL*tan(ani)+templra*tan(ani)+1,unID,gs_PostBaseOverhang,3 : unID=unID+1

					ELSE
						!!! DISTANCE FROM FLOOR
						HOTSPOT templra/2+LengthSize*hroL,	0,	(templra/2+LengthSize*hroL)*tan(ani),	unID, dsPerp, 1+128, ds : unID=unID+1
						HOTSPOT templra/2+LengthSize*hroL,	0,	(templra/2+LengthSize*hroL)*tan(ani)-1,	unID, dsPerp, 3, ds : unID=unID+1
						HOTSPOT templra/2+LengthSize*hroL,	0, 	(templra/2+LengthSize*hroL)*tan(ani)+temp_ds,	unID, dsPerp, 2, ds : unID=unID+1

						!!! HEIGHT of RAILING
						HOTSPOT templra/2+LengthSize*hroL,	0,	temp_ds+(templra/2+LengthSize*hroL)*tan(ani),	unID, hrPerp, 1+128, hr : unID=unID+1
						HOTSPOT templra/2+LengthSize*hroL,	0,	temp_ds+(templra/2+LengthSize*hroL)*tan(ani)-1,	unID, hrPerp, 3, hr  : unID=unID+1
						HOTSPOT templra/2+LengthSize*hroL,	0, 	temp_ds+(templra/2+LengthSize*hroL)*tan(ani)+temp_hr,unID, hrPerp, 2, hr  : unID=unID+1

						!!!POST BASE OVERHANG
						HOTSPOT LengthSize*hroL,0,LengthSize*hroL*tan(ani),unID,gs_PostBaseOverhangPerp,1,gs_PostBaseOverhang : unID=unID+1
						HOTSPOT LengthSize*hroL,0,LengthSize*hroL*tan(ani)-temp_PostBaseOverhang,unID,gs_PostBaseOverhangPerp,2,gs_PostBaseOverhang : unID=unID+1
						HOTSPOT LengthSize*hroL,0,LengthSize*hroL*tan(ani)+1,unID,gs_PostBaseOverhangPerp,3,gs_PostBaseOverhang : unID=unID+1

						HOTSPOT lra-LengthSize*hroR,0,LengthSize*hroL*tan(ani)+templra*tan(ani),unID,gs_PostBaseOverhangPerp,1,gs_PostBaseOverhang : unID=unID+1
						HOTSPOT lra-LengthSize*hroR,0,LengthSize*hroL*tan(ani)+templra*tan(ani)-temp_PostBaseOverhang,unID,gs_PostBaseOverhangPerp,2,gs_PostBaseOverhang : unID=unID+1
						HOTSPOT lra-LengthSize*hroR,0,LengthSize*hroL*tan(ani)+templra*tan(ani)+1,unID,gs_PostBaseOverhangPerp,3,gs_PostBaseOverhang : unID=unID+1

					ENDIF

					IF gs_detlevel_3D_m=2 THEN		!!DETAILED

					!!!OVERHANG OF RAILING
						HOTSPOT 0,0,	temp_ds+temp_hr,				unID,hroLDiagonal,1+128,hroL : unID=unID+1
						HOTSPOT temphroL,0,	temp_ds+temp_hr+temphroL*tan(ani),	unID,hroLDiagonal,2	,hroL	: unID=unID+1
						HOTSPOT RefPoint1,0,temp_ds+temp_hr-InclRefPoint,		unID,hroLDiagonal,3	,hroL	: unID=unID+1

						HOTSPOT lra,0,		temp_ds+temp_hr+lra*tan(ani),				unID,hroRDiagonal,1+128,hroR : unID=unID+1
						HOTSPOT lra+temphroR,0,	temp_ds+temp_hr+lra*tan(ani)+temphroR*tan(ani),	unID,hroRDiagonal,2	,hroR	: unID=unID+1
						HOTSPOT lra+RefPoint2,0,	temp_ds+temp_hr+lra*tan(ani)+InclRefPoint,		unID,hroRDiagonal,3	,hroR	: unID=unID+1

					ENDIF

			ELSE			!Perpendicular Orientation
							!Measurement is always perpendicular to inclination in this case

				ROTy -ani

						!!! LENGTH OF RAILING

							HOTSPOT 0,0,ds+hr,unID,lrah,1+256 : unID=unID+1
							HOTSPOT lrah,0,ds+hr,unID,lrah,2 	: unID=unID+1
							HOTSPOT -1,0,ds+hr,unID,lrah,3 	: unID=unID+1

						IF LengthSize = 0 THEN
							HOTSPOT 0,0,0,unID,lrah,1+256 : unID=unID+1
							HOTSPOT lrah,0,0,unID,lrah,2 	: unID=unID+1
							HOTSPOT -1,0,0,unID,lrah,3 	: unID=unID+1

							HOTSPOT 0,0,ds,unID,lrah,1+256 : unID=unID+1
							HOTSPOT lrah,0,ds,unID,lrah,2 	: unID=unID+1
							HOTSPOT -1,0,ds,unID,lrah,3 	: unID=unID+1
						ENDIF


						!!!DISTANCE FROM FLOOR
						HOTSPOT templrah/2+LengthSize*hroLDiagonal,0,0,unID,ds,1+128 : unID=unID+1
						HOTSPOT templrah/2+LengthSize*hroLDiagonal,0,ds,unID,ds,2 : unID=unID+1
						HOTSPOT templrah/2+LengthSize*hroLDiagonal,0,-1,unID,ds,3 : unID=unID+1

						!!! HEIGHT of RAILING
						HOTSPOT templrah/2+LengthSize*hroLDiagonal,0,ds,unID,hr,1 : unID=unID+1
						HOTSPOT templrah/2+LengthSize*hroLDiagonal,0,ds+hr,unID,hr,2 : unID=unID+1
						HOTSPOT templrah/2+LengthSize*hroLDiagonal,0,-1,unID,hr,3 : unID=unID+1

						!!!POST BASE OVERHANG
						HOTSPOT LengthSize*hroLDiagonal,0,0,unID,gs_PostBaseOverhang,1 : unID=unID+1
						HOTSPOT LengthSize*hroLDiagonal,0,-gs_PostBaseOverhang,unID,gs_PostBaseOverhang,2 : unID=unID+1
						HOTSPOT LengthSize*hroLDiagonal,0,1,unID,gs_PostBaseOverhang,3 : unID=unID+1

						HOTSPOT LengthSize*hroLDiagonal+templrah,0,0,unID,gs_PostBaseOverhang,1 : unID=unID+1
						HOTSPOT LengthSize*hroLDiagonal+templrah,0,-gs_PostBaseOverhang,unID,gs_PostBaseOverhang,2 : unID=unID+1
						HOTSPOT LengthSize*hroLDiagonal+templrah,0,1,unID,gs_PostBaseOverhang,3 : unID=unID+1

					IF gs_detlevel_3D_m=2 THEN		!!DETAILED
						!!!OVERHANG OF RAILING
						!!! OVERHANG
						HOTSPOT lrah,0,ds+hr,unID,hroRDiagonal,1+128 , hroR : unID=unID+1
						HOTSPOT lrah+temphroRDiag,0,ds+hr,unID,hroRDiagonal,2 , hroR 	: unID=unID+1
						HOTSPOT lrah+RefPoint2,0,ds+hr,unID,hroRDiagonal,3 , hroR 	: unID=unID+1

						HOTSPOT 0,0,ds+hr,unID,hroLDiagonal,1+128 , hroL: unID=unID+1
						HOTSPOT temphroLDiag,0,ds+hr,unID,hroLDiagonal,2, hroL 	: unID=unID+1
						HOTSPOT RefPoint1,0,ds+hr,unID,hroLDiagonal,3, hroL 	: unID=unID+1
					ENDIF

				DEL 1

			ENDIF

		ENDIF

!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** INCLINED AND CURVED *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!

		IF ABS(ani)>EPS and ptyp_m<>1 THEN

			!!!HOTSPOTS FOR GRAPHICAL EDITING

			IF ptyp_m=3 THEN
				!!!ROTATE
				HOTSPOT 0,rb,ds+lra*sin(ani),unID,ab,6 : unID=unID+1
				HOTSPOT 0,0,ds+lra*sin(ani),unID,ab,4+128 : unID=unID+1
				HOTSPOT rb*sin(ab),rb-rb*cos(ab),ds+lra*sin(ani),unID,ab,5 : unID=unID+1

				HOTSPOT 0,rb,ds+hr+lra*sin(ani),unID,ab,6 : unID=unID+1
				HOTSPOT 0,0,ds+hr+lra*sin(ani),unID,ab,4+128 : unID=unID+1
				HOTSPOT rb*sin(ab),rb-rb*cos(ab),ds+hr+lra*sin(ani),unID,ab,5 : unID=unID+1
			ENDIF

				!!!HEIGHT OF RAILING
				HOTSPOT 0,0,ds,unID,hr,1 : unID=unID+1
				HOTSPOT 0,0,ds+hr,unID,hr,2 : unID=unID+1
				HOTSPOT 0,0,-1,unID,hr,3 : unID=unID+1

				HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),ds+(lra/2)*sin(ani),unID,hr,1 : unID=unID+1
				HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),ds+hr+(lra/2)*sin(ani),unID,hr,2 : unID=unID+1
				HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),-1,unID,hr,3 : unID=unID+1

				!!!DISTANCE FROM FLOOR
				HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),(lra/2)*sin(ani),unID,ds,1 : unID=unID+1
				HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),ds+(lra/2)*sin(ani),unID,ds,2 : unID=unID+1
				HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),-1,unID,ds,3 : unID=unID+1

				HOTSPOT 0,0,0,unID,ds,1 : unID=unID+1
				HOTSPOT 0,0,ds,unID,ds,2 : unID=unID+1
				HOTSPOT 0,0,-1,unID,ds,3 : unID=unID+1

				!!!FIX HOTSPOT AT FLOOR
				HOTSPOT rb*sin(ab),rb-rb*cos(ab),0+lra*sin(ani), unID : unID=unID+1

			IF ptyp_m=2 THEN
				!!!HEIGHT OF RAILING
				HOTSPOT rb*sin(ab),rb-rb*cos(ab),ds+lra*sin(ani),unID,hr,1 : unID=unID+1
				HOTSPOT rb*sin(ab),rb-rb*cos(ab),ds+hr+lra*sin(ani),unID,hr,2 : unID=unID+1
				HOTSPOT rb*sin(ab),rb-rb*cos(ab),-1,unID,hr,3 : unID=unID+1

				!!!DISTANCE FROM FLOOR
				HOTSPOT rb*sin(ab),rb-rb*cos(ab),lra*sin(ani),unID,ds,1+128 : unID=unID+1
				HOTSPOT rb*sin(ab),rb-rb*cos(ab),ds+lra*sin(ani),unID,ds,2 : unID=unID+1
				HOTSPOT rb*sin(ab),rb-rb*cos(ab),-1,unID,ds,3 : unID=unID+1
			ENDIF

				!!!POST BASE OVERHANG
				HOTSPOT 0,0,0,unID,gs_PostBaseOverhang,1+128 : unID=unID+1
				HOTSPOT 0,0,-gs_PostBaseOverhang,unID,gs_PostBaseOverhang,2 : unID=unID+1
				HOTSPOT 0,0,1,unID,gs_PostBaseOverhang,3 : unID=unID+1

				HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),(lra/2)*sin(ani),unID,gs_PostBaseOverhang,1+128 : unID=unID+1
				HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),(lra/2)*sin(ani)-gs_PostBaseOverhang,unID,gs_PostBaseOverhang,2 : unID=unID+1
				HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),(lra/2)*sin(ani)+1,unID,gs_PostBaseOverhang,3 : unID=unID+1

				HOTSPOT rb*sin(ab),rb-rb*cos(ab),lra*sin(ani),unID,gs_PostBaseOverhang,1+128 : unID=unID+1
				HOTSPOT rb*sin(ab),rb-rb*cos(ab),lra*sin(ani)-gs_PostBaseOverhang,unID,gs_PostBaseOverhang,2 : unID=unID+1
				HOTSPOT rb*sin(ab),rb-rb*cos(ab),lra*sin(ani)+1,unID,gs_PostBaseOverhang,3 : unID=unID+1

		ENDIF

	ENDIF
end
]]>
</Script_3D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_2D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
call "railSymbol2D_m" parameters all	bEnable2DPosts		= 1,
										iHandRailStyle		= hrt_m,
										handRailDiameter	= hrd,
										handRailWidth		= hrw,
										bBreakRailLine		= 0,
										bPostNoCalculation	= 0
]]>
</Script_2D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_1D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
!Rail Post with Balusters

EPS=0.0001

!!! *** Post Width *** !!! ***********************************

IF pt_m=1 THEN
	dpost=pw/2
	ELSE
	dpost=pd/2
ENDIF


!!! *** Railing Length *** !!! *******************************

IF LengthSize = 1 THEN
	lra2=(lra - (hroL + hroR))
	lrah2=(lrah - (hroLDiagonal + hroRDiagonal))
	templra=lra2
	templrah=lrah2
	XStartPoslra=hrol
	ZStartPoslra=hrol*tan(ani)
	XStartPoslrah=hroLDiagonal
ELSE
	templra=lra
	templrah=lrah
	XStartPoslra=0
	ZStartPoslra=0
	XStartPoslrah=0
ENDIF


!!! *** PARAMETER INPUT CALCULATION *** !!! *******************

IF ptyp_m=1 THEN
	HIDEPARAMETER "ab"
	HIDEPARAMETER "rb"
	HIDEPARAMETER "res"
ENDIF

IF ptyp_m=2 THEN
	IF ABS(rb)>EPS THEN
		PARAMETERS ab=(lra*180)/(rb*pi)
		LOCK "ab"
	ENDIF
ENDIF

IF ptyp_m=3 THEN
	PARAMETERS lra=(rb*pi*ab)/180
	LOCK "lra"
ENDIF


!!! *** POST AND BOARD CALCULATION *** !!! *******************
!!! *** POST SPACING CALCULATION FOR STRAIGHT AND CURVED RAILS

IF rom_m=2 AND rmm_m=2 THEN
	distpost=templrah/(np-1)
ELSE
	distpost=templra/(np-1)
ENDIF

IF ABS(ab-360)<EPS and ABS(ani)<EPS THEN
	anglepost=ab/np
else
	anglepost=ab/(np-1)
endif


!!! *** BOARD SPACING CALCULATION FOR STRAIGHT AND CURVED RAILS

dpostangle = 0
if pt_m=1 then
	IF ABS(rb)>EPS THEN
		dpostangle=180*(pw/2)/(rb*pi)
	endif
else
	IF ABS(rb)>EPS THEN
		dpostangle=180*(pd/2)/(rb*pi)
	endif
endif

dboardangle = 0
if bt_m=1 then
	dboard=bw
	IF ABS(rb)>EPS THEN
		dboardangle=180*bw/(rb*pi)
	endif
else
	dboard=bd
	IF ABS(rb)>EPS THEN
		dboardangle=180*bd/(rb*pi)
	endif
endif

distboard=(distpost-2*dpost-nb*dboard)/(nb+1)
distboardangle=(anglepost-2*dpostangle-nb*dboardangle)/(nb+1)

!Sub-board height calculation

!sbhh1 	Lower Sub-board Elevation (horizontal)
!sbhh2 	Upper Sub-board Elevation (horizontal)
!sbh1	Lower Sub-board Height (vertical)
!sbh1	Upper Sub-board Height (vertical)

if bt_m=1 then
	sbhh1=ds+bw+sbh
	sbh1=sbh

	if hrt_m=1 then
		sbhh2=ds+hr-hrh-sbh-bw
		sbh2=sbh
	else
		sbhh2=ds+hr-hrd-sbh-bw
		sbh2=sbh+hrd/2
	endif
else
	sbhh1=ds+bd+sbh+bd/2
	sbh1=sbh+bd

	if hrt_m=1 then
		sbhh2=ds+hr-hrh-sbh-bd/2
		sbh2=sbh+bd/2
	else
		sbhh2=ds+hr-hrd-sbh-bd/2
		sbh2=sbh+bd/2+hrd/2
	endif
endif


!!! *** ADDITIONAL CALCULATION FOR CURVED AND INCLINED RAILS!!

if ptyp_m<>1 and ABS(ab)>EPS then

	!!! *** General data
		alphahroL=(hroL*180)/(rb*pi) 		!Overhung angle
		alphahroR=(hroR*180)/(rb*pi) 		!Overhung angle
	deltaz=lra*sin(ani)						!Total height to rise

	!!! *** For segment points
	nalphaincl=int(ab/(360/res))+1 				!number of segment points without overhung
	alphaincl=ab/nalphaincl  					!angle between segment points
		nalphahroL=int(alphahroL/alphaincl)		!number of segment points at handrail overhung
		nalphahroR=int(alphahroR/alphaincl)	!number of segment points at handrail overhung
	deltazincl=deltaz/nalphaincl 				!vertical step between segment points

	!!! *** For posts
	deltazpost=deltaz/(np-1)					!vertical step between posts

	!!! *** For Boards
	deltazboard0=((dpostangle+distboardangle+dboardangle/2)*deltaz)/ab 		!vertical first step between boards
	deltazboard0sub=((dpostangle+distboardangle/2)*deltaz)/ab 				!vertical first step between subboards
	deltazboard=((distboardangle+dboardangle)*deltaz)/ab					!vertical step between boards

endif
]]>
</Script_1D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_PR SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_PR>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_UI SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_UI>

<Comment SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Comment>

<Picture MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="0" length_in_bytes="3167" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D494844520000007F0000
	007F0803000000F163ED21000000ED504C5445FFFFFFCAA55BB39A5BCBAB63B9
	A26BB49C62C49B5374623AD1B472EDE9D5D1B36CF0F0EEB3914EC2954DD0A95D
	E9DBBBCDB16BAD9253CCB372C3AC7CDBC592D1AD63F0EEEA756641D9BC839585
	65DAC28BA1854B8A7342E5D2ACEAE2CCA28A52EEEDE9725D3371592FBDA974B2
	8D4AE5DAC4BDA05CA49161896D3AD3C4A3CCBB93C9B88CDACEB2B8AE999D7C42
	89703DE3CCA5DBD0B4E0CB9C9A855199743CBAB19C9D834ABAB3A1B6A98ADCD9
	D08B7C50DBD6CB826E44A67D3F988D73D2AE7A9E9075C48C41907E516F5B3096
	6E36B29F72A07E44CAC3B4B07F3BDDBE93A89B817E704EDFD0AAC9BFA36E542B
	9D241CE100000B2349444154785EE59AD562DB5A1686BDD606318399198250EE
	611A7CFFC7196D682CB94D72D228F6C5E8B271FAF95F0851E334CFA871CAC7DA
	B24D7E32BAB3614B86383F117E47598433E4FDD3987EBA44449783699D22ECB6
	9421CE663C0B4EE1F8358D105D8FC3B57302FC155D2076B9E7754E617A2BA118
	755DDFB30727A0E71BC622B7EB01982730BD7345A345D4458099DF3A3E7E2E1D
	1F81375BDDFE9C1DBFD8D2A870FC0216FD8DB1FAF9C8FA4729A3D8755DC0D469
	9C193D382E7F37A54B19765CF49B33E3E2A87C6B4A6911F500EE67220077C685
	DD3A62B165D368E8A28FD7EDDB1F15BFC7CDE3399EB119BA002DA7F1C33DFF58
	F97755385E7459D88A62DBEE7604E0AD710EE9511C4F996835009C580DC96F49
	7EF343981EC3F14831420FCC563354FCA1D03F27C39B387DFD2ECB28C31992EC
	327F6F70C9FFA1B07F9E20358761E7D58B2D15E2B9DF2A66DC8F86AFF5B7D288
	86E4A667A7AFDD652922BA105E361A820F92FFD3305C92B07FD67C63BFA6FED1
	46D23D9E7549A0F832FEAC7614C7AAFE92D7CBBF7C379D3281876BC7A09A0F96
	0CC7B865C9FC5FC1ABE99F2753B62CE89E986C0D5C6BFE608D2C368386AEBFAF
	C5B736523BD793ED18FBF25F9B26D244E4DC2BF337BF33657AADCF70A5E23F9B
	661C771C09D0FDCF7C8D2ECB9478AFD31E6A3E5E8A7014A62F8D9B7793955F3F
	7F309D8AA586F3C2F1ED28D5FC205F332449689500EF8C9567D63F5E513AE4DA
	F1ED372DCD6F314ACC6DAFC2DF4C7EF3CCDA579A284220A00BDD8DB27F932449
	D8B13E1A15FED978E5B56AEEB2882E02213D2E41BAD16E6EA66618C8FCABF26F
	EB9C3FAC7774B988107C327F6FF8FB46B78E589C048ECEFF32DFB8C86AD3EF6C
	970BC42121591172EFC78AFFC3B065519698694117FCFF56F54F56BC26BEB3A3
	02CF33021234E69A1F23895B1AFAB5FE15D4C39F53C6649B434204E0FD58095D
	2ECDD89C6BC057FEBFABA9FF5853264B3D90370668FDA2D1ED9099B128BC0FF3
	7FFEB186C976C92221DEEE7F340CCF95A02658D6949198A415334DBC2AFFE2C5
	7C6737158E9FF1AC93370A3E78CAFE59C248622E9715FEC771992FFABFDF79A1
	E345C6E36CE6DB8530C17741353A3B21715FE6DF23F67FE9FE35DA22A2EB7A9E
	EF9286E2FB201BD0D026A9ACBF077C7EC0B7CD9714DB0546E872CFEF9FF5BEF0
	8137AC64494847D7BF03FEA25AFFCE5F507F77944642BC5FA0EE7AA8F9E0B786
	248E75CE1DF22707F65F7DB7FF07C972E17667A0EE47772B2EDD5EF03396C462
	D8D5FC8A7DE7865BE6BF357AF07DFC7CBB58E09BC8050FFA0DC90795764DB315
	EA01E79BF6B72BFCE6073BFDBE2EBB88A2EE02BC8EF1D7B50028FB5BC9B0D732
	3541F35B8FC4FFA6F9C1FC0E7E30554DDE2D50C6EC52F1A1488621357B71C5E0
	EDCF6695EF0E4A776FC42EE97C47B1A56ED74580400E96CAFE9F6087688751D3
	8C2BFC3F1ED4BF4324F68DFD4C7EBEA13412F7238F8CD46025F96FCF43246667
	67346352E10F0FF89EE65B0C09A19FCEE3E7F1AF2865D87501BA7F288EE109BE
	B3BC31C39625F3AFCAAFC6DF5CEB1F6D23424C4BEE5FCFA5CF660064D0FE2C1A
	87B2BFB389686C0652DF18A0CA37BFB6BFB316E20785D7C6CFA9BF963AD62BC7
	B7CF351F2F838892F0DAD1F5C7AEF2CFBFF67FC018C962DD7FA0F38CC3618433
	1720158EDF2F1610158EB7BEE89B1CE81FA6557E16FC8ED4469A4AFEDFAEFFA3
	1D914D1E320C2549F3F366A1BD33D8EB33FC87FDAFF7BFD0B4C4D77ACEFD719E
	2045449E99EFCEC93EB0F3352289FBE5FA6E1CE88FCAFCD15D2FB6EDE07E2D39
	9B5C80FDF7561A3614F4A02834EE3D3FA08CD81054FACBC4ABF07F2AF3AFA648
	C2BE23CDA2F9B74FEF3F4E4A974AFC655E986C95A9FFF84D6B8A244E7BB45FE1
	1BBEB7076AA15A45C2903073DF96D5FE633E9D7382EEF9B6147AD603C56F134A
	5A8386B128EB9F57E34FCF1FBAD85262AE9B44F187A6E2FFF644FFB7124699A0
	9BE73450855EEA5F2FA3380E1C59FF2AF39DE1FBDFAA7F6BC6881D38F33194EE
	8F73323CE78FF1471BB9C8732F0B1ACDC55EFF9C6212A78EAE3F55FBF38A7E7D
	6814F43457F727D516CC22AA10E14DF688FDD753368DE4FDA840FD1AF5957E62
	258CC43AE30FF9E3C9D7FAC5E789B87F95EE7FE7661A21F0DB47F6DFABE9EFEA
	88E10F4A179CB7BD98D138D6195FB1BFAEBF5E25FE87E98651120F99E683E673
	44F8F73BA3473A0FE5DC74C970C639C9D45736661274F68B19C7577BC0C4ADF2
	8D6AFEFDB08C59A13D57DF5EAF458DC14D97436B24F69F07EACF7FA64C389EC3
	D0B06D4BE92F14581463EDF8C6B7EC3F378CCC2EAB88966198E6F2B7E5CFC7BE
	BCFF21312DBDFF24DFE4B73F0C053DCD9B06D88E6E3479826893B0F2C1C9ECBA
	C47B6F18212F0D8948425359CFD5FABDC19ACDD00FD4FC57F0BF1D7F6F3F8C91
	8BB5796CD8E140F15B486373FAE1907FF990FDD74849A2F7BF89B6FFC447447E
	9DDFEF1FFE03F137FAA7B29831065FEA6F2624B1FBCE5DEF71FE1874FC071123
	61DABE49CB6EDA8D81F3565EBA7F3CD57F8D896D0FE4B4AF72EE6C05D59F57F8
	7335FFC84029A4E7B2D0E83095E504796295ACFCEBF953FDD7307CDB72B648E2
	ED409AEC02AAFAF941FCDB20864424E447ABD47FC76E3FBF6288B0B796B4FF27
	78924F488B11596C15DF3DB0FF011FB8703C20B1CAF5773C6B4D1145B1ADF27F
	7BEAEF5F4DC336A789B956F4AA7E5D7FAAF14F6C4442929EE677351F394AC757
	9F3F7FB96C3CC16F9AA61CAF1EE45F96F9C5C763926DADF9B8CC1FAD879C9B83
	07104FF03B76505E990FF995FC9FFFAB699A02F4BEC4CFAFA6C849903F17ADFD
	1FDA9593F18557E5FF55D2BF46D60B43A7516E74ADF93BA232FEF98FF67FB9DE
	56F34F17162D9E2121BD3854852ECB159F30F45EF06E8FD1B46DE9B8A7E26F94
	C8B06B86A47C686C7701B297BC59353142709C47FCEF09BE9A8493B9C83F50FA
	C19217128097BD57651850D17FB6C20A7F3CEBEB5D96F41DB17F2C34DFB3AC84
	C965E565FC895DD6AF0F1DD5FE6B31A42119E9FAE32A3E4F1887E4C5EFF64C0E
	F5F7BCC3FC4F9012328C2BFB5791FF04D4CCF552FDBE5FE61FF6BF265D2C4818
	9CF54879FFB99A0E896A0C35E807E7E1F80F3E61285ABCE46BFD7251CE8AF1AA
	16FE04FCA0C277CB373804D211A07BFD13CFDB2E162032BE26BEEF5B95FAEB95
	C6AB05A1A11A4B3F69FE980302A9C5F4DAFF7AFE3E8CFFD19A0AC71B34D89745
	657FF8C7A85123DFD6FAABFE9F5384307544FE29FE420EEDD10AB02ED3EBF8F3
	FD6AFE8104310AA22BEFF9AE1CAFB215F046ADFC890707FAE5E110F4E1CE40CD
	E73B8600B7BF12A80FAEEB6F85DF33AF18127B19ED075BC56790B57663C3C59A
	F976F5647C632EA89D3AED9B4E89EF2CCF81989698BFA07EFD25FF8F966D3314
	8EDF0FD6D7CA1FD95CDEBF8D106AD7EFECEFDE11814EB03F6CC8FDE38A2E7876
	F965FEF4DCBAF9F0457F011205A751E57304E8E4FBF9DBAB37FE0DD0FA07C982
	869D773D281F567363C67D556C75FD716BB6FF04EC40BFC32522ECECA2C477D6
	E8FA1054F60FBF56BE53D8DF770448DC8F64FE93FBC37E4011FCEBC657FB4FCD
	F50F9C3E45929140F59F4CF16FB36D84EAEDE12ADFAF39FEC2903092A53D1A94
	EB7FFB3374A567AACFFB5FEAE8FBD5FD270CC976705F682F40256217C865E3F5
	1FA319C761E0880D3AB8E7CFA78824CD8F8097FBD7400F9ABAD15B5B9CC9DBCC
	51F84DDBB40E1ACD8C27C21647E29BB6555AF4DEDD02C2E5F1DE991709A5F842
	FF20C1083AA323B175FD0D257FEC5EE65B74B9F2C611F5DB5ABF9720A2DA658F
	AB1F94FE19A02AB6C7D53FC904DF4A86F27078DC47EF3F56BE61281D7F02FE38
	E329E398058D933CE331F719E7C2F127E2FB2032FE647C2393FBEFE9F4030C4E
	C4D6FB17AF21F0EBDA7F4E517FECFF6BFD62FF38AD7E189C58FF89F97062FB9F
	5AFF49E3DFFAE9B87DFF7FAC720B46BBE57AAC0000000049454E44AE426082
	]]>
</Picture>

<CalledMacros SectVersion="2" SectionFlags="0" SubIdent="0">
	<Macro>
		<MName><![CDATA["railSymbol2D_m"]]></MName>
		<MainGUID>C5C904E6-1706-4CD1-BC8D-6C294B5B40F7</MainGUID>
	</Macro>
</CalledMacros>

<Copyright SectVersion="1" SectionFlags="0" SubIdent="0">
	<Author>GRAPHISOFT</Author>
	<License>
		<Type>CC BY-ND</Type>
		<Version>3.0</Version>
	</License>
</Copyright>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_FWM SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_FWM>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_BWM SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_BWM>

<Keywords SectVersion="1" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Keywords>

</Symbol>
