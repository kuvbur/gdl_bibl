<?xml version="1.0" encoding="UTF-8"?>
<Symbol IsArchivable="true" IsPlaceable="false" MainGUID="9DF801A8-9A6B-46B9-9074-07FD2D3BC207" MigrationValue="Normal" Owner="1196638531" Signature="1196644685" Version="38">
<Ancestry SectVersion="1" SectionFlags="0" SubIdent="0" Template="false">
	<MainGUID>F938E33A-329D-4A36-BE3E-85E126820996</MainGUID>
	<MainGUID>103E8D2C-8230-42E1-9597-46F84CCE28C0</MainGUID>
	<MainGUID>784EAEA1-5041-4AA6-B6F4-EF263A891EE7</MainGUID>
	<MainGUID>09BEB35E-7BF8-448C-B408-AC04D159B0D1</MainGUID>
</Ancestry>

<ParamSection SectVersion="26" SectionFlags="0" SubIdent="0">
	<ParamSectHeader>
		<Version>26</Version>
		<AutoHotspots>false</AutoHotspots>
		<StatBits>
			<STBit_FixSize/>
		</StatBits>
		<WDLeftFrame>0</WDLeftFrame>
		<WDRightFrame>0</WDRightFrame>
		<WDTopFrame>0</WDTopFrame>
		<WDBotFrame>0</WDBotFrame>
		<LayFlags>65535</LayFlags>
		<WDMirrorThickness>0</WDMirrorThickness>
		<WDWallInset>0</WDWallInset>
		<SymbolColor>0</SymbolColor>
	</ParamSectHeader>
	<Parameters>
		<Length Name="A">
			<Description><![CDATA["Dimension 1"]]></Description>
			<Fix/>
			<Value>1.8</Value>
		</Length>
		<Length Name="B">
			<Description><![CDATA["Dimension 2"]]></Description>
			<Fix/>
			<Value>0.05</Value>
		</Length>
		<Length Name="ZZYZX">
			<Description><![CDATA["Height"]]></Description>
			<Fix/>
			<Value>0.9</Value>
		</Length>
		<Integer Name="gs_detlevel_3D_m">
			<Description><![CDATA["3D"]]></Description>
			<Value>2</Value>
		</Integer>
		<Boolean Name="cfs">
			<Description><![CDATA["Called as Macro from Stair"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="LengthSize">
			<Description><![CDATA["'A' Size=Handrail Length"]]></Description>
			<Value>0</Value>
		</Boolean>

		<!-- RailBalust_sp0: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="RailBalust_sp0">
			<Description><![CDATA["General Dimensions"]]></Description>
		</Title>
		<Integer Name="ptyp_m">
			<Description><![CDATA["Rail and Parameter Input Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Angle Name="ani">
			<Description><![CDATA["Inclination Angle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Integer Name="rom_m">
			<Description><![CDATA["Rail Orientation Method"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="rmm_m">
			<Description><![CDATA["Rail Measurement Method"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="lra">
			<Description><![CDATA["Horizontal Length of Railing"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1.5</Value>
		</Length>
		<Length Name="lrah">
			<Description><![CDATA["Length of Railing"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1.5</Value>
		</Length>
		<Length Name="hr">
			<Description><![CDATA["Height of Railing"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.75</Value>
		</Length>
		<Length Name="hrPerp">
			<Description><![CDATA["Height of Railing"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.75</Value>
		</Length>
		<Angle Name="ab">
			<Description><![CDATA["Angle of Bending"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>85.9436692696</Value>
		</Angle>
		<Length Name="rb">
			<Description><![CDATA["Radius of Bending"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="ds">
			<Description><![CDATA["Distance from Slab/Stair"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.15</Value>
		</Length>
		<Length Name="dsPerp">
			<Description><![CDATA["Distance from Slab/Stair"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.15</Value>
		</Length>
		<Angle Name="gs_AngleL">
			<Description><![CDATA["Left End Cutting Angle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>90</Value>
		</Angle>
		<Angle Name="gs_AngleR">
			<Description><![CDATA["Right End Cutting Angle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>90</Value>
		</Angle>

		<!-- RailBalust_sp1: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="RailBalust_sp1">
			<Description><![CDATA["Structural Dimensions"]]></Description>
		</Title>
		<Integer Name="hrt_m">
			<Description><![CDATA["Handrail Style"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="hrw">
			<Description><![CDATA["Handrail Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="hrh">
			<Description><![CDATA["Handrail Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.025</Value>
		</Length>
		<Length Name="hrd">
			<Description><![CDATA["Handrail Diameter"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="hro">
			<Description><![CDATA["Handrail Overhang"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="hroL">
			<Description><![CDATA["Handrail Overhang - Left"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.15</Value>
		</Length>
		<Length Name="hroR">
			<Description><![CDATA["Handrail Overhang - Right"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.15</Value>
		</Length>
		<Length Name="hroLDiagonal">
			<Description><![CDATA["Handrail Overhang - Left"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.15</Value>
		</Length>
		<Length Name="hroRDiagonal">
			<Description><![CDATA["Handrail Overhang - Right"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.15</Value>
		</Length>
		<Integer Name="np">
			<Description><![CDATA["No. of Posts"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>3</Value>
		</Integer>
		<Length Name="pw">
			<Description><![CDATA["Post Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.04</Value>
		</Length>
		<Length Name="pth">
			<Description><![CDATA["Post Thickness"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.04</Value>
		</Length>
		<Integer Name="gs_PostBaseType_m">
			<Description><![CDATA["Post Base Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="gs_PostBaseOverhang">
			<Description><![CDATA["Post Base Overhang"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="gs_PostBaseOverhangPerp">
			<Description><![CDATA["Post Base Overhang"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Integer Name="bt_m">
			<Description><![CDATA["Wire Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="sbh">
			<Description><![CDATA["Distance from Handrail"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.15</Value>
		</Length>
		<Length Name="sbhPerp">
			<Description><![CDATA["Distance from Handrail"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.15</Value>
		</Length>
		<Integer Name="nb">
			<Description><![CDATA["No. of Wires"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>7</Value>
		</Integer>
		<Length Name="bd">
			<Description><![CDATA["Wire Diameter"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.005</Value>
		</Length>
		<Length Name="bth">
			<Description><![CDATA["Wire Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.005</Value>
		</Length>
		<Length Name="bw">
			<Description><![CDATA["Wire Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.005</Value>
		</Length>

		<!-- gs_3D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_3D_representation">
			<Description><![CDATA["3D Representation"]]></Description>
		</Title>
		<Integer Name="res">
			<Description><![CDATA["Rail Arc Resolution"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>60</Value>
		</Integer>
		<Integer Name="rescs">
			<Description><![CDATA["Cross Section Resolution"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>12</Value>
		</Integer>
		<Boolean Name="gs_shadow">
			<Description><![CDATA["Shadow"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="AC_show2DHotspotsIn3D">
			<Description><![CDATA["Show 2D Hotspots in 3D"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="ac_bottomlevel">
			<Description><![CDATA["Bottom Level"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="ac_toplevel">
			<Description><![CDATA["Top Level"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>

		<!-- gs_2D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_2D_representation">
			<Description><![CDATA["2D Representation"]]></Description>
			<Fix/>
		</Title>
		<PenColor Name="gs_cont_pen">
			<Description><![CDATA["Contour Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</PenColor>
		<FillPattern Name="gs_fill_type">
			<Description><![CDATA["Fill Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_fill_pen">
			<Description><![CDATA["Fill Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>91</Value>
		</PenColor>
		<PenColor Name="gs_back_pen">
			<Description><![CDATA["Fill Background Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>91</Value>
		</PenColor>
		<Boolean Name="bPostSymbol">
			<Description><![CDATA["Post Symbol"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="sa">
			<Description><![CDATA["Show Axis"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<LineType Name="al">
			<Description><![CDATA["Axis Line Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>6</Value>
		</LineType>
		<PenColor Name="gs_RailAxisPen">
			<Description><![CDATA["Axis Line Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>16</Value>
		</PenColor>
		<Integer Name="iPostSymbolType">
			<Description><![CDATA["Post Symbol Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<LineType Name="postLineType">
			<Description><![CDATA["Post Line Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</LineType>
		<PenColor Name="postPen">
			<Description><![CDATA["Post Line Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>16</Value>
		</PenColor>

		<!-- RailBalust_sp2: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="RailBalust_sp2">
			<Description><![CDATA["Surfaces"]]></Description>
		</Title>
		<Material Name="fmat">
			<Description><![CDATA["Handrail"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="pmat">
			<Description><![CDATA["Post"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>11</Value>
		</Material>
		<Material Name="bmat">
			<Description><![CDATA["Wire"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>78</Value>
		</Material>

		<!-- gs_list: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_list">
			<Description><![CDATA["Parameters for Listing"]]></Description>
			<Fix/>
		</Title>
		<RealNum Name="gs_list_cost">
			<Description><![CDATA["Cost"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="gs_list_manufacturer">
			<Description><![CDATA["Manufacturer"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_note">
			<Description><![CDATA["Note/Remarks"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_location">
			<Description><![CDATA["Location"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_accessories">
			<Description><![CDATA["Accessories"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_Type">
			<Description><![CDATA["Group Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Другой"]]></Value>
		</String>
		<Integer Name="iFMType">
			<Description><![CDATA["Group Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>25</Value>
		</Integer>
		<String Name="FM_InventoryNumber">
			<Description><![CDATA["Inventory No."]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_SerialNumber">
			<Description><![CDATA["Serial No."]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_ProductionYear">
			<Description><![CDATA["Production Year"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<RealNum Name="FM_ObjectWeight">
			<Description><![CDATA["Object Weight"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="FM_ObjectWeightUnit">
			<Description><![CDATA["Object Weight Unit"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["кг"]]></Value>
		</String>
		<String Name="gs_list_custom1">
			<Description><![CDATA["User Defined 1"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom2">
			<Description><![CDATA["User Defined 2"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom3">
			<Description><![CDATA["User Defined 3"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom4">
			<Description><![CDATA["User Defined 4"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom5">
			<Description><![CDATA["User Defined 5"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
	</Parameters>
</ParamSection>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_VL SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
! GENERAL PARAMETERS
values "gs_detlevel_3D_m" 2,1,0		! Detailed, Simple, Off


! GENERAL RAIL GEOMETRY PARAMETERS
values "ptyp_m" 1,2,3				! Straight, Curve Length and Radius, Angle and Radius


IF ptyp_m<>1 OR ABS(ani)<EPS  THEN
	VALUES "rom_m" 1
	VALUES "rmm_m" 1
	HIDEPARAMETER "lrah"
ELSE
	VALUES "rom_m"  1,2
	IF rom_m=2 then
		VALUES "rmm_m" 2
	ELSE
		VALUES "rmm_m" 1,2
	ENDIF
ENDIF


IF ptyp_m<>1 THEN	HIDEPARAMETER "LengthSize"

IF LengthSize = 0 OR ptyp_m<>1 THEN
	VALUES "a" lra+hroL+hroR
ELSE
	VALUES "a" lra
ENDIF
VALUES "zzyzx" ds+hr


! STRUCTURAL DIMENSION PARAMETERS
VALUES "hrt_m" 1,2		! Rectangular, Round
IF hrt_m=2 then
	HIDEPARAMETER "hrw","hrh"
ELSE
	HIDEPARAMETER "hrd"
ENDIF


IF ptyp_m<>1 then
	IF hrt_m=1 then VALUES "b" hrw
	IF hrt_m=2 then VALUES "b" hrd
	lock "a","b","zzyzx"
ELSE
	IF hrt_m=1 then
		IF GLOB_MODPAR_NAME = "B" THEN PARAMETERS hrw=B
		IF GLOB_MODPAR_NAME = "hrw" THEN PARAMETERS B=hrw
		IF GLOB_MODPAR_NAME = "hrt_m" THEN PARAMETERS hrw=B
	ELSE
		IF GLOB_MODPAR_NAME = "B" THEN PARAMETERS hrd=B
		IF GLOB_MODPAR_NAME = "hrd" THEN PARAMETERS B=hrd
		IF GLOB_MODPAR_NAME = "hrt_m" THEN PARAMETERS hrd=B
	ENDIF
	lock "a","zzyzx"
ENDIF


VALUES "gs_PostBaseType_m" 1,2

VALUES "bt_m" 1,2		! Rectangular, Round
IF bt_m=2 then
	HIDEPARAMETER "bw","bth"
ELSE
	HIDEPARAMETER "bd"
ENDIF

IF ptyp_m<>1 OR rom_m<>1 THEN
	LOCK "gs_AngleL"
	LOCK "gs_AngleR"
ENDIF

if gs_cont_pen=0 then parameters gs_cont_pen=2
if gs_fill_pen=0 then parameters gs_fill_pen=91


!PARAMETER RANGE DEFINITION

VALUES "ani" range(-90, 0), range (0, 90)
if LengthSize then
	VALUES "lra" 	RANGE(hroL+hroR,)
	VALUES "lrah" 	RANGE((hroL+hroR)/cos(ani),)
else
	VALUES "lra" 	RANGE(0,)
	VALUES "lrah" 	RANGE(0,)
endif
VALUES "hr" 	RANGE(0,)

VALUES "res" RANGE[3,)
VALUES "rescs" RANGE[6,)

if hrt_m = 1 and bt_m = 1 then
	lock			"rescs"
	hideparameter	"rescs"
endif

VALUES "gs_AngleL" 	RANGE(0,180)
VALUES "gs_AngleR" 	RANGE(0,180)

VALUES "hro"	RANGE [0,)

IF LengthSize=1 OR ABS(gs_AngleL-90)<EPS THEN		!! gs_AngleL=90
	VALUES "hroL"	RANGE [dpost,)
	ELSE
	VALUES "hroL"	RANGE [0,)
ENDIF

IF LengthSize=1 OR ABS(gs_AngleR-90)<EPS THEN		!! gs_AngleR=90
	VALUES "hroR"	RANGE [dpost,)
	ELSE
	VALUES "hroR"	RANGE [0,)
ENDIF

VALUES "hroLDiagonal"	RANGE [dpost,)
VALUES "hroRDiagonal"	RANGE [dpost,)

VALUES "hrd" RANGE(0,)
VALUES "hrw" RANGE(0,)
VALUES "hrh" RANGE(0,)
VALUES "np"	RANGE [2,)
VALUES "pw" RANGE(0,)
VALUES "pth" RANGE(0,)
VALUES "gs_PostBaseOverhang" RANGE [0,)
VALUES "gs_PostBaseOverhangPerp" RANGE [0,)

VALUES "nb"	RANGE [2,)
VALUES "sbh" RANGE [0.01+(pth-PostThk),)
VALUES "sbhPerp" RANGE [0.01+(pth-PostThk)/cos(ani),)

VALUES "bd" RANGE(0,)
VALUES "bth" RANGE(0,)
VALUES "bw" RANGE(0,)

VALUES "B" RANGE(0,)


IF ABS(ani)<EPS THEN
	VALUES "ab" RANGE (0,360]
	LOCK "rom_m","rmm_m"
ELSE
	VALUES "ab" RANGE (0,)
ENDIF

! Distance from Slab/Stair
if GLOB_MODPAR_NAME = "dsPerp" then
	ds = dsPerp * cos(ani)
	parameters ds = ds
else
	dsPerp = ds / cos(ani)
	parameters dsPerp = dsPerp
endif

! Height of Railing
if GLOB_MODPAR_NAME = "hrPerp" then
	hr = hrPerp * cos(ani)
	parameters hr = hr
else
	hrPerp = hr / cos(ani)
	parameters hrPerp = hrPerp
endif

! Post Base Overhang
if GLOB_MODPAR_NAME = "gs_PostBaseOverhangPerp" then
	gs_PostBaseOverhang = gs_PostBaseOverhangPerp * cos(ani)
	parameters gs_PostBaseOverhang = gs_PostBaseOverhang
else
	gs_PostBaseOverhangPerp = gs_PostBaseOverhang / cos(ani)
	parameters gs_PostBaseOverhangPerp = gs_PostBaseOverhangPerp
endif

! Distance under Handrail
if GLOB_MODPAR_NAME = "sbhPerp" then
	sbh = sbhPerp * cos(ani)
	parameters sbh = sbh
else
	sbhPerp = sbh / cos(ani)
	parameters sbhPerp = sbhPerp
endif

! Left Overhang of Railing
if GLOB_MODPAR_NAME = "hroLDiagonal" then
	hroL = hroLDiagonal * cos(ani)
	parameters hroL = hroL
else
	hroLDiagonal = hroL / cos(ani)
	parameters hroLDiagonal = hroLDiagonal
endif

! Right Overhang of Railing
if GLOB_MODPAR_NAME = "hroRDiagonal" then
	hroR = hroRDiagonal * cos(ani)
	parameters hroR = hroR
else
	hroRDiagonal = hroR / cos(ani)
	parameters hroRDiagonal = hroRDiagonal
endif

! COMPABILITY OF OVERHANG OF RAILING
EPS=0.00001
IF GLOB_MODPAR_NAME = "hroL" OR GLOB_MODPAR_NAME = "hroR" then
	parameters hro = 0
ELSE
	if abs(hro) > EPS then
		parameters 	hroL = hro,
					hroR = hro,
					hroLDiagonal=hro/cos(ani),
					hroRDiagonal=hro/cos(ani)
	endif
ENDIF
]]>
</Script_VL>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_3D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
IF gs_detlevel_3D_m=0 THEN end
IF gs_shadow=0 THEN SHADOW OFF


templra = max(templra, EPS)
PEN gs_cont_pen
unID=1

IF hrt_m=1 THEN		!!! HANDRAIL WIDTH
	fth=pth
	HandrailWidth=hrw
	HandrailHgt=hrh
ELSE
	fth=pth
	HandrailWidth=hrd
	HandrailHgt=hrd
ENDIF

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** SIMPLE 3D *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


!!!CALCULATION FOR CONNECTING ANGLE

XPosL0=(HandrailWidth/2)/tan(gs_AngleL)
XPosR0=(HandrailWidth/2)/tan(gs_AngleR)

XPosL=ABS((HandrailWidth/2)/tan(gs_AngleL))
XPosR=ABS((HandrailWidth/2)/tan(gs_AngleR))
YPosL=(XPosL*tan(ani))
YPosR=(XPosR*tan(ani))


IF gs_detlevel_3D_m=1 THEN		!!Simple

	MATERIAL pmat
	RESOL res

	!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** STRAIGHT *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

		IF ABS(ani)<EPS and ptyp_m=1 THEN		!!ptyp=Straight

			ADDx XStartPoslra
			ADDz ds
				PRISM_ 5,hr,
					XPosL0,fth/2,15,
					-XPosL0,-fth/2,15,
					templra+XPosR0,-fth/2,15,
					templra-XPosR0,fth/2,15,
					XPosL0,fth/2,-1
			DEL 2

		ENDIF

	!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** STRAIGHT CURVED *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

		IF ABS(ani)<EPS and ptyp_m<>1 THEN

		!!!!FRAME

			IF ab<360 THEN
					ADDz ds
					PRISM_ 10,hr,
						0,fth/2,15,
						0,-fth/2+0.00005,15,
						0,-fth/2,79,
						1,0,800,
						(rb+(fth/2))*sin(ab),rb-(rb+(fth/2))*cos(ab),1015,
						(rb-(fth/2)+0.00005)*sin(ab),rb-(rb-(fth/2)+0.00005)*cos(ab),15,
						(rb-(fth/2))*sin(ab),rb-(rb-(fth/2))*cos(ab),79,
						-cos(ab),-sin(ab),800,
						0,fth/2,1015,
						0,fth/2,-1
					DEL 1

			ELSE	!!!ANGLE=360

				ADDz ds
					PRISM_ 12,hr,
						0,-fth/2,79,
						1,0,800,
						0,2*rb+fth/2,1079,
						-1,0,800,
						0,-fth/2,1079,
						0,-fth/2,-1,

						0,fth/2,79,
						1,0,800,
						0,2*rb-fth/2,1079,
						-1,0,800,
						0,fth/2,1079,
						0,fth/2,-1
				DEL 1

			ENDIF
		ENDIF

	!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** STRAIGHT INCLINED *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

		IF ABS(ani)>EPS and ptyp_m=1 THEN			!!ptyp=Straight

			IF rom_m=1 THEN					!!Vertical Orientation

				ADD XStartPoslra,0,ZStartPoslra

					IF rmm_m=1 THEN			!!Vertical Measurement
						temp_ds=ds
						temp_hr=hr
					ELSE					!!Perpendicular Measurement
						temp_ds=dsPerp
						temp_hr=hrPerp
					ENDIF


					ROTz -90+gs_AngleL		!! CONNECTING ANGLE
					ROTy -90
						CUTPLANE
					DEL 2

					ADDx templra
					ROTz 90-gs_AngleR
					ROTy 90
						CUTPLANE
					DEL 3


						ROTx 90
						ADDz -fth/2

							PRISM_ 5,fth,
								-XPosL,temp_ds-YPosL,15,
								templra+XPosR,temp_ds+templra*tan(ani)+YPosR,15,
								templra+XPosR,temp_ds+temp_hr+templra*tan(ani)+YPosR,15,
								-XPosL,temp_ds+temp_hr-YPosL,15,
								-XPosL,temp_ds-YPosL,-1

						DEL 2

					CUTEND
					CUTEND

				DEL 1

			ELSE						!Perpendicular Orientation
										!Measurement is always perpendicular to inclination in this case

				ROTy -ani
				ADDx XStartPoslra

					ROTx 90
					ADDz -fth/2
						!!FRAME

						PRISM_ 5,fth,
						0,ds,15,
						templrah,ds,15,
						templrah,ds+hr,15,
						0,ds+hr,15,
						0,ds,-1
					DEL 2

				DEL 2

			ENDIF


		ENDIF


	!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** INCLINED AND CURVED *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!

		IF ABS(ani)>EPS and ptyp_m<>1 THEN

			!!!!FRAME

			alphai=-alphaincl
			deltazi=-deltazincl
			for i=1 to nalphaincl+3 step 1
			put rb*sin(alphai),rb-rb*cos(alphai),ds+deltazi
			alphai=alphai+alphaincl
			deltazi=deltazi+deltazincl
			NEXT i

			TUBEA 5,nalphaincl+3,1+2+16+32,
				-fth/2,0,0,
				fth/2,0,0,
				fth/2,hr,0,
				-fth/2,hr,0,
				-fth/2,0,-1,
				get (nsp)

		ENDIF


ENDIF		!!END of SIMPLE 3D!!




!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** DETAILED 3D *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


IF gs_detlevel_3D_m=2 THEN


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** STRAIGHT *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


	IF ABS(ani)<EPS and ptyp_m=1 THEN

	ADDX XStartPoslra

		!!3D FEEDBACK AT HOTSPOT EDITING
		IF GLOB_CONTEXT>20 and GLOB_CONTEXT<40 THEN

				ADDz ds
				MATERIAL fmat
				PRISM_ 5,hr,
					(fth/2)/tan(gs_AngleL),fth/2,15,
					-(fth/2)/tan(gs_AngleL),-fth/2,15,
					templra+(fth/2)/tan(gs_AngleR),-fth/2,15,
					templra-(fth/2)/tan(gs_AngleR),fth/2,15,
					(fth/2)/tan(gs_AngleL),fth/2,-1
				DEL 1

		ELSE	!!! DETAILED MODEL


		RESOL rescs

		!! *** HANDRAIL *** !! *****************************************************


		MATERIAL fmat

		ADDx -(hroL)
		ROTz -90+gs_AngleL		!! CONNECTING ANGLE
		ROTy -90
			CUTPLANE
		DEL 3

		ADDx templra+(hroR)
		ROTz 90-gs_AngleR
		ROTy 90
			CUTPLANE
		DEL 3


		RESOL rescs

				MATERIAL fmat

				GROUP "handrail round straight"			!Groups
					ADD  -hroL-XPosL,0,ds+hr-hrd/2
					ROTy 90
					CYLIND templra+(hroL)+XPosL+(hroR)+XPosR,hrd/2
					DEL 2
				ENDGROUP


				IF hrt_m=1 THEN

					ADDz ds+hr-hrh
						PRISM_ 5,hrh,
							-(hroL)-XPosL,hrw/2,15,
							-(hroL)-XPosL,-hrw/2,15,
							templra+(hroR)+XPosR,-hrw/2,15,
							templra+(hroR)+XPosR,hrw/2,15,
							-(hroL)-XPosL,hrw/2,-1
					DEL 1

					ELSE
					PLACEGROUP "handrail round straight"
				ENDIF

		CUTEND
		CUTEND



		!! *** POST *** !! *****************************************************


		MATERIAL pmat

		ADDx -(hroL)-LengthSize*dpost
		ROTz -90+gs_AngleL		!! CONNECTING ANGLE
		ROTy -90
			CUTPLANE
		DEL 3

		ADDx templra+(hroR)+LengthSize*dpost
		ROTz 90-gs_AngleR
		ROTy 90
			CUTPLANE
		DEL 3



				MATERIAL pmat

				IF hrt_m=1 THEN			!Post height calculation
					ph=hr+ds-hrh-PostThk+gs_PostBaseOverhang
					ELSE
					ph=hr+ds-hrd-PostThk+gs_PostBaseOverhang
				ENDIF


				GROUP "post rect straight"
				ADD 0, -pth/2+PostThk/2, -gs_PostBaseOverhang
					for i=1 to np step 1

						IF gs_PostBaseType_m=1 THEN
							PRISM_ 5,ph,
								-pw/2,pth/2-PostThk,15,
								 pw/2,pth/2-PostThk,15,
								 pw/2,pth/2,15,
								-pw/2,pth/2,15,
								-pw/2,pth/2-PostThk,-1

							ADD 0.002,-pth/2,0
							ROTy -90

								PRISM_ 5,PostThk,
									 pth-PostThk,0,15,
									 ph-sbh+0.01,0,15,
									 ph-sbh+0.01+(pth-PostThk),pth-PostThk,15,
									 0,pth-PostThk,15,
									 pth-PostThk,0,-1
							DEL 2
						ELSE
							ADDz PostThk
								PRISM_ 5,ph-PostThk,
									-pw/2,pth/2-PostThk,15,
									 pw/2,pth/2-PostThk,15,
									 pw/2,pth/2,15,
									-pw/2,pth/2,15,
									-pw/2,pth/2-PostThk,-1
							DEL 1

								PRISM_ 5,PostThk,
									-pw/2,-pth/2,15,
									 pw/2,-pth/2,15,
									 pw/2,pth/2,15,
									-pw/2,pth/2,15,
									-pw/2,-pth/2,-1

							ADD 0.002,-pth/2,PostThk
							ROTy -90
								PRISM_ 5,PostThk,
									 0,0,15,
									 ph-sbh+0.01,0,15,
									 ph-sbh+0.01+(pth-PostThk),pth-PostThk,15,
									 0,pth-PostThk,15,
									 0,0,-1
							DEL 2
						ENDIF

					ADDx distpost
					next i
					DEL np
				DEL 1
				ENDGROUP


				GROUP "plate rect"
				ADDz ph-gs_PostBaseOverhang
					for i=1 to np step 1

						PRISM_ 5,PostThk,
							-pw/2-0.01,-HandrailWidth/2+0.01,15,
							 pw/2+0.01,-HandrailWidth/2+0.01,15,
							 pw/2+0.01,HandrailWidth/2-0.01,15,
							-pw/2-0.01,HandrailWidth/2-0.01,15,
							-pw/2-0.01,-HandrailWidth/2+0.01,-1

					ADDx distpost
					next i
					DEL np
				DEL 1
				ENDGROUP

				GROUP "plate round"
				ADD -pw/2-0.01,0,ph+hrd/2+PostThk-gs_PostBaseOverhang

					for i=1 to np step 1

						ROTy 90
						ROTz 180+45

						shell_angle=90
						prism_	9, pw+0.02,
							-(hrd/2+PostThk), 0, 15,
							-hrd/2, 0, 15,
							-hrd/2, 0.0001, 79,
							0, 0, 979,
							hrd/2,-shell_angle+0.0001, 4015,
							hrd/2*cos(180-shell_angle),hrd/2*sin(shell_angle), 15,
							(hrd/2+PostThk)*cos(180-shell_angle),(hrd/2+PostThk)*sin(shell_angle), 79,
							0, 0, 979,
							-(hrd/2+PostThk), shell_angle, 4015
						DEL 2

					ADDx distpost
					next i
					DEL np
				DEL 1
				ENDGROUP


				PLACEGROUP "post rect straight"
				IF hrt_m=1 THEN
					PLACEGROUP "plate rect"
				ELSE
					PLACEGROUP "plate round"
				ENDIF

		CUTEND
		CUTEND



		!! *** WIRES *** !! *****************************************************

		MATERIAL bmat

		ADDx -(hroL)-LengthSize*dpost
		ROTz -90+gs_AngleL		!! CONNECTING ANGLE
		ROTy -90
			CUTPLANE
		DEL 3

		ADDx templra+(hroR)+LengthSize*dpost
		ROTz 90-gs_AngleR
		ROTy 90
			CUTPLANE
		DEL 3


		ADDy -pth/2

				MATERIAL bmat

				!!! Horizontal

				GROUP "board rect straight H"			!Groups
				ADDz  ds
				PRISM_ 5,bw,
					0,-bth/2,15,
					templra,-bth/2,15,
					templra,bth/2,15,
					0,bth/2,15,
					0,-bth/2,-1
				DEL 1
				ENDGROUP

				GROUP "board round straight H"
				ADDz  ds+bd/2
				ROTy 90
				RESOL rescs/2
				CYLIND templra,bd/2
				DEL 2
				ENDGROUP

				for i=1 to nb step 1
					IF bt_m= 1 THEN
						PLACEGROUP subgroup ("board rect straight H","post rect straight")
					ELSE
						PLACEGROUP subgroup ("board round straight H","post rect straight")
					ENDIF
					ADDz dw
				next i
				DEL nb

		DEL 1

		CUTEND
		CUTEND


			KILLGROUP "handrail round straight"
			KILLGROUP "post rect straight"
			KILLGROUP "plate rect"
			KILLGROUP "plate round"
			KILLGROUP "board rect straight H"
			KILLGROUP "board round straight H"

		ENDIF

	DEL 1

	ENDIF




!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** STRAIGHT CURVED *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


IF ABS(ani)<EPS and ptyp_m<>1 THEN

		!!3D FEEDBACK AT HOTSPOT EDITING
		IF GLOB_CONTEXT>20 and GLOB_CONTEXT<40 THEN

			!!!!FRAME
			MATERIAL fmat

				IF ab<360 THEN
						ADDz ds
						PRISM_ 10,hr,
							0,fth/2,15,
							0,-fth/2+0.00005,15,
							0,-fth/2,79,
							1,0,800,
							(rb+(fth/2))*sin(ab),rb-(rb+(fth/2))*cos(ab),1015,
							(rb-(fth/2)+0.00005)*sin(ab),rb-(rb-(fth/2)+0.00005)*cos(ab),15,
							(rb-(fth/2))*sin(ab),rb-(rb-(fth/2))*cos(ab),79,
							-cos(ab),-sin(ab),800,
							0,fth/2,1015,
							0,fth/2,-1
						DEL 1

				ELSE	!!!ANGLE=360

					ADDz ds
						PRISM_ 12,hr,
							0,-fth/2,79,
							1,0,800,
							0,2*rb+fth/2,1079,
							-1,0,800,
							0,-fth/2,1079,
							0,-fth/2,-1,

							0,fth/2,79,
							1,0,800,
							0,2*rb-fth/2,1079,
							-1,0,800,
							0,fth/2,1079,
							0,fth/2,-1
					DEL 1

				ENDIF

		ELSE

			!!! HANDRAIL

			MATERIAL fmat
			RESOL res

			if (ab + alphahroL + alphahroR) < 360 then

				group "handrail round curved"				!Groups
					gamma0 = 360 / rescs
					gamma = 0
					for i = 1 to rescs step 1
						put hrd/2 * cos(gamma), rb + hrd/2 * sin(gamma), 1
						gamma = gamma + gamma0
					next i
					add  0, rb, ds + hr - hrd/2
					roty 90
					rotx 180 - ab - alphahroR
						revolve rescs+1, ab + alphahroL + alphahroR, 1+2+4+8+16+32,
							get (nsp),
							hrd/2, rb, -1
					del 3
				endgroup
				handrailgroupname = "handrail round curved"

				IF hrt_m=1 THEN
					ADDz ds+hr-hrh
						PRISM_ 9,hrh,
							(rb-(hrw/2))*sin(-alphahroL),rb-(rb-(hrw/2))*cos(alphahroL),15,
							(rb+(hrw/2)-0.00005)*sin(-alphahroL),rb-(rb+(hrw/2)-0.000005)*cos(alphahroL),15,
							(rb+(hrw/2))*sin(-alphahroL),rb-(rb+(hrw/2))*cos(alphahroL),79,
							cos(alphahroL),sin(-alphahroL),800,
							(rb+(hrw/2))*sin(ab+alphahroR),rb-(rb+(hrw/2))*cos(ab+alphahroR),1015,
							(rb-(hrw/2)+0.00005)*sin(ab+alphahroR),rb-(rb-(hrw/2)+0.00005)*cos(ab+alphahroR),15,
							(rb-(hrw/2))*sin(ab+alphahroR),rb-(rb-(hrw/2))*cos(ab+alphahroR),79,
							-cos(ab+alphahroR),-sin(ab+alphahroR),800,
							(rb-(hrw/2))*sin(-alphahroL),rb-(rb-(hrw/2))*cos(alphahroL),1015
					DEL 1
				ELSE
					PLACEGROUP "handrail round curved"
				ENDIF
			else

				group "handrail round curved 360"
					gamma0 = 360 / rescs
					gamma = 0
					for i = 1 to rescs step 1
						put hrd/2 * cos(gamma), rb + hrd/2 * sin(gamma), 1
						gamma = gamma + gamma0
						next i
					add 0, rb, ds + hr - hrd/2
					roty 90
					rotx 180 - ab
						revolve rescs+1, 360, 0,
							get (nsp),
							hrd/2, rb, -1
					del 3
				endgroup
				handrailgroupname = "handrail round curved 360"

				if hrt_m = 1 then
					addz ds + hr - hrh
						PRISM_ 12, hrh,
							0, -hrw/2, 79,
							1, 0, 800,
							0, 2*rb + hrw/2, 1079,
							-1, 0, 800,
							0, -hrw/2, 1079,
							0, -hrw/2, -1,

							0, hrw/2, 79,
							1, 0, 800,
							0, 2*rb - hrw/2, 1079,
							-1, 0, 800,
							0, hrw/2, 1079,
							0, hrw/2, -1
					del 1
				else
					placegroup "handrail round curved 360"
				endif


			endif

			!!other parts are shorter, circularity checked differently
			if ab < 360 then



					!! *** POST *** !! *****************************************************

					MATERIAL pmat
					RESOL rescs

					IF hrt_m=1 THEN			!Post height calculation
						ph=hr+ds-hrh-PostThk+gs_PostBaseOverhang
						ELSE
						ph=hr+ds-hrd-PostThk+gs_PostBaseOverhang
					ENDIF


					GROUP "post rect curved"

						for i=1 to np step 1

						ADD	0, -pth/2+PostThk/2,-gs_PostBaseOverhang

							IF gs_PostBaseType_m=1 THEN
								PRISM_ 5,ph,
									-pw/2,pth/2-PostThk,15,
									 pw/2,pth/2-PostThk,15,
									 pw/2,pth/2,15,
									-pw/2,pth/2,15,
									-pw/2,pth/2-PostThk,-1

								ADD 0.002,-pth/2,0
								ROTy -90

									PRISM_ 5,PostThk,
										 pth-PostThk,0,15,
										 ph-sbh+0.01,0,15,
										 ph-sbh+0.01+(pth-PostThk),pth-PostThk,15,
										 0,pth-PostThk,15,
										 pth-PostThk,0,-1
								DEL 2
							ELSE
								ADDz PostThk
									PRISM_ 5,ph-PostThk,
										-pw/2,pth/2-PostThk,15,
										 pw/2,pth/2-PostThk,15,
										 pw/2,pth/2,15,
										-pw/2,pth/2,15,
										-pw/2,pth/2-PostThk,-1
								DEL 1

									PRISM_ 5,PostThk,
										-pw/2,-pth/2,15,
										 pw/2,-pth/2,15,
										 pw/2,pth/2,15,
										-pw/2,pth/2,15,
										-pw/2,-pth/2,-1

									ADD 0.002,-pth/2,PostThk
									ROTy -90
										PRISM_ 5,PostThk,
											 0,0,15,
											 ph-sbh+0.01,0,15,
											 ph-sbh+0.01+(pth-PostThk),pth-PostThk,15,
											 0,pth-PostThk,15,
											 0,0,-1
									DEL 2
							ENDIF

						DEL 1
						addy rb
						rotz anglepost
						addy -rb
						next i
						DEL 3*np

					ENDGROUP


					GROUP "plate rect curved"
					ADDz ph-gs_PostBaseOverhang
						for i=1 to np step 1

							PRISM_ 5,PostThk,
								-pw/2-0.01,-HandrailWidth/2+0.01,15,
								 pw/2+0.01,-HandrailWidth/2+0.01,15,
								 pw/2+0.01,HandrailWidth/2-0.01,15,
								-pw/2-0.01,HandrailWidth/2-0.01,15,
								-pw/2-0.01,-HandrailWidth/2+0.01,-1

						addy rb
						rotz anglepost
						addy -rb
						next i
						DEL 3*np
					DEL 1
					ENDGROUP


					GROUP "plate round curved"
					ADDz ph+hrd/2+PostThk-gs_PostBaseOverhang
						for i=1 to np step 1

							ADDx -pw/2-0.01
							ROTy 90
							ROTz 180+45

							shell_angle=90
							prism_	9, pw+0.02,
								-(hrd/2+PostThk), 0, 15,
								-hrd/2, 0, 15,
								-hrd/2, 0.0001, 79,
								0, 0, 979,
								hrd/2,-shell_angle+0.0001, 4015,
								hrd/2*cos(180-shell_angle),hrd/2*sin(shell_angle), 15,
								(hrd/2+PostThk)*cos(180-shell_angle),(hrd/2+PostThk)*sin(shell_angle), 79,
								0, 0, 979,
								-(hrd/2+PostThk), shell_angle, 4015
							DEL 3

						addy rb
						rotz anglepost
						addy -rb
						next i
						DEL 3*np
					DEL 1
					ENDGROUP

					PLACEGROUP "post rect curved"
					IF hrt_m=1 THEN
						PLACEGROUP "plate rect curved"
					ELSE
						PLACEGROUP "plate round curved"
					ENDIF


					!! *** WIRES *** !! *****************************************************

					MATERIAL bmat

					!!! Horizontal
					RESOL res


					GROUP "board rect curved H"			!Groups
					ADDz  ds

						PRISM_ 10,bw,
							0,bth/2,15,
							0,-bth/2+0.00005,15,
							0,-bth/2,79,
							1,0,800,
							((rb+pth/2)+(bth/2))*sin(ab),(rb+pth/2)-((rb+pth/2)+(bth/2))*cos(ab),1015,
							((rb+pth/2)-(bth/2)+0.00005)*sin(ab),(rb+pth/2)-((rb+pth/2)-(bth/2)+0.00005)*cos(ab),15,
							((rb+pth/2)-(bth/2))*sin(ab),(rb+pth/2)-((rb+pth/2)-(bth/2))*cos(ab),79,
							-cos(ab),-sin(ab),800,
							0,bth/2,1015,
							0,bth/2,-1

					DEL 1
					ENDGROUP

					GROUP "board round curved H"

							gamma0=360/rescs
							gamma=0
							for i=1 to (rescs/2) step 1
							put bd/2*cos(gamma),(rb+pth/2)+bd/2*sin(gamma),1
							gamma=gamma+gamma0
							next i
						add  0,(rb+pth/2),ds+bd/2
						ROTy 90
						ROTx 180-ab
						revolve (rescs/2)+1,ab,1+2+4+8+16+32,
						get (nsp),
						bd/2,(rb+pth/2),-1
						DEL 3

					ENDGROUP


					for i=1 to nb step 1
						ADDy -pth/2
							IF bt_m= 1 THEN
								PLACEGROUP subgroup ("board rect curved H","post rect curved")
							ELSE
								PLACEGROUP subgroup ("board round curved H","post rect curved")
							ENDIF
						DEL 1
					ADDz dw
					next i
					DEL nb

					KILLGROUP "post rect curved"
					KILLGROUP "plate rect curved"
					KILLGROUP "plate round curved"
					KILLGROUP "board rect curved H"
					KILLGROUP "board round curved H"

		ELSE

				!! *** POST *** !! *****************************************************

				MATERIAL pmat
				RESOL rescs

				IF hrt_m=1 THEN			!Post height calculation
				ph=hr+ds-hrh-PostThk+gs_PostBaseOverhang
				ELSE
				ph=hr+ds-hrd-PostThk+gs_PostBaseOverhang

				ENDIF


				GROUP "post rect curved 360"
					for i=1 to np step 1

						ADD 0, -pth/2+PostThk/2, -gs_PostBaseOverhang

							IF gs_PostBaseType_m=1 THEN
								PRISM_ 5,ph,
									-pw/2,pth/2-PostThk,15,
									 pw/2,pth/2-PostThk,15,
									 pw/2,pth/2,15,
									-pw/2,pth/2,15,
									-pw/2,pth/2-PostThk,-1

								ADD 0.002,-pth/2,0
								ROTy -90

									PRISM_ 5,PostThk,
										 pth-PostThk,0,15,
										 ph-sbh+0.01,0,15,
										 ph-sbh+0.01+(pth-PostThk),pth-PostThk,15,
										 0,pth-PostThk,15,
										 pth-PostThk,0,-1
								DEL 2
							ELSE
								ADDz PostThk
									PRISM_ 5,ph-PostThk,
										-pw/2,pth/2-PostThk,15,
										 pw/2,pth/2-PostThk,15,
										 pw/2,pth/2,15,
										-pw/2,pth/2,15,
										-pw/2,pth/2-PostThk,-1
								DEL 1

									PRISM_ 5,PostThk,
										-pw/2,-pth/2,15,
										 pw/2,-pth/2,15,
										 pw/2,pth/2,15,
										-pw/2,pth/2,15,
										-pw/2,-pth/2,-1

									ADD 0.002,-pth/2,PostThk
									ROTy -90
										PRISM_ 5,PostThk,
											 0,0,15,
											 ph-sbh+0.01,0,15,
											 ph-sbh+0.01+(pth-PostThk),pth-PostThk,15,
											 0,pth-PostThk,15,
											 0,0,-1
									DEL 2
							ENDIF

						DEL 1

					addy rb
					rotz anglepost
					addy -rb
					next i
					DEL 3*np
				ENDGROUP


				GROUP "plate rect curved 360"
				ADDz ph-gs_PostBaseOverhang
					for i=1 to np step 1

						PRISM_ 5,PostThk,
							-pw/2-0.01,-HandrailWidth/2+0.01,15,
							 pw/2+0.01,-HandrailWidth/2+0.01,15,
							 pw/2+0.01,HandrailWidth/2-0.01,15,
							-pw/2-0.01,HandrailWidth/2-0.01,15,
							-pw/2-0.01,-HandrailWidth/2+0.01,-1

					addy rb
					rotz anglepost
					addy -rb
					next i
					DEL 3*np
				DEL 1
				ENDGROUP

				GROUP "plate round curved 360"
				ADDz ph+hrd/2+PostThk-gs_PostBaseOverhang
					for i=1 to np step 1

						ADDx -pw/2-0.01
						ROTy 90
						ROTz 180+45

						shell_angle=90
						prism_	9, pw+0.02,
							-(hrd/2+PostThk), 0, 15,
							-hrd/2, 0, 15,
							-hrd/2, 0.0001, 79,
							0, 0, 979,
							hrd/2,-shell_angle+0.0001, 4015,
							hrd/2*cos(180-shell_angle),hrd/2*sin(shell_angle), 15,
							(hrd/2+PostThk)*cos(180-shell_angle),(hrd/2+PostThk)*sin(shell_angle), 79,
							0, 0, 979,
							-(hrd/2+PostThk), shell_angle, 4015
						DEL 3
					addy rb
					rotz anglepost
					addy -rb
					next i
					DEL 3*np
				DEL 1
				ENDGROUP

				PLACEGROUP "post rect curved 360"
				IF hrt_m=1 THEN
					PLACEGROUP "plate rect curved 360"
				ELSE
					PLACEGROUP "plate round curved 360"
				ENDIF



				!! *** WIRES *** !! *****************************************************

				MATERIAL bmat
				RESOL res

				!!! Horizontal

				GROUP "board rect curved H 360"			!Groups
				ADDz  ds
				PRISM_ 12,bw,
						0,-bth/2,79,
						1,0,800,
						0,2*(rb+pth/2)+bth/2,1079,
						-1,0,800,
						0,-bth/2,1079,
						0,-bth/2,-1,

						0,bth/2,79,
						1,0,800,
						0,2*(rb+pth/2)-bth/2,1079,
						-1,0,800,
						0,bth/2,1079,
						0,bth/2,-1
				DEL 1
				ENDGROUP

				GROUP "board round curved H 360"

						gamma0=360/rescs
						gamma=0
						for i=1 to (rescs/2) step 1
						put bd/2*cos(gamma),(rb+pth/2)+bd/2*sin(gamma),1
						gamma=gamma+gamma0
						next i
					add  0,(rb+pth/2),ds+bd/2
					ROTy 90
					ROTx 180-ab
					revolve (rescs/2)+1,360,1+2+4+8+16+32,
					get (nsp),
					bd/2,(rb+pth/2),-1
					DEL 3

				ENDGROUP


				for i=1 to nb step 1
				ADDy -pth/2
					IF bt_m= 1 THEN
						PLACEGROUP subgroup ("board rect curved H 360","post rect curved 360")
					ELSE
						PLACEGROUP subgroup ("board round curved H 360","post rect curved 360")
					ENDIF
				DEL 1
				ADDz dw
				next i

				DEL nb


				KILLGROUP "post rect curved 360"
				KILLGROUP "plate rect curved 360"
				KILLGROUP "plate round curved 360"
				KILLGROUP "board rect curved H 360"
				KILLGROUP "board round curved H 360"

			ENDIF

			KILLGROUP handrailgroupname		!!group wasn't used

		ENDIF

	ENDIF



!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** STRAIGHT INCLINED *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


	IF ABS(ani)>EPS and ptyp_m=1 THEN

			RESOL rescs

			IF rom_m=1 THEN									!Vertical Orientation

				IF rmm_m=2 THEN		!Perpendicular Measurement Extra Values
					hrh=hrh/cos(ani)
					hrd=hrd/cos(ani)
					dw=dw/cos(ani)
				ENDIF


				IF rmm_m=1 THEN			!!Vertical Measurement
					temp_ds=ds
					temp_hr=hr
					temp_PostBaseOverhang=gs_PostBaseOverhang
				ELSE					!!Perpendicular Measurement
					temp_ds=dsPerp
					temp_hr=hrPerp
					temp_PostBaseOverhang=gs_PostBaseOverhangPerp
				ENDIF


				!!3D FEEDBACK AT HOTSPOT EDITING
				IF GLOB_CONTEXT>20 and GLOB_CONTEXT<40 THEN
				ADD XStartPoslra,0,ZStartPoslra

						MATERIAL fmat

						ROTz -90+gs_AngleL		!!! CONNECTING ANGLE
						ROTy -90
							CUTPLANE
						DEL 2

						ADDx templra
						ROTz 90-gs_AngleR
						ROTy 90
							CUTPLANE
						DEL 3

								ROTx 90
								ADDz -fth/2

									MATERIAL fmat
									PRISM_ 5,fth,
										-XPosL,temp_ds-YPosL,15,
										templra+XPosR,temp_ds+templra*tan(ani)+YPosR,15,
										templra+XPosR,temp_ds+temp_hr+templra*tan(ani)+YPosR,15,
										-XPosL,temp_ds+temp_hr-YPosL,15,
										-XPosL,temp_ds-YPosL,-1
								DEL 2

						CUTEND
						CUTEND

				DEL 1

				ELSE

				ADD XStartPoslra,0,ZStartPoslra


				!!! *** Handrail *** !!! *****************************************

				MATERIAL fmat

				ADDx -(hroL)
				ROTz -90+gs_AngleL		!! CONNECTING ANGLE
				ROTy -90
					CUTPLANE
				DEL 3

				ADDx templra+(hroR)
				ROTz 90-gs_AngleR
				ROTy 90
					CUTPLANE
				DEL 3

						GROUP "handrail round straight inclined"
							ADD -(hroL)-XPosL,0,temp_ds+temp_hr-hrd/2-(hroL)*tan(ani)-YPosL
							ROTy 90-ani
							CONE (templra+hroL+hroR)/cos(ani)+XPosL+XPosR,hrd/2,hrd/2,90+ani,90+ani
							DEL 1
						ENDGROUP


						GROUP "handrail straight straight inclined"
							ROTx 90
							ADDz -hrw/2
								PRISM_ 5,hrw,
								-(hroL)-XPosL,temp_ds+temp_hr-hrh-(hroL)*tan(ani)-YPosL,15,
								templra+(hroR)+XPosR,temp_ds+temp_hr-hrh+(templra+(hroR))*tan(ani)+YPosR,15,
								templra+(hroR)+XPosR,temp_ds+temp_hr+(templra+(hroR))*tan(ani)+YPosR,15,
								-(hroL)-XPosL,temp_ds+temp_hr-(hroL)*tan(ani)-YPosL,15,
								-(hroL)-XPosL,temp_ds+temp_hr-hrh-(hroL)*tan(ani)-YPosL,-1
							DEL 2
						ENDGROUP

				CUTEND
				CUTEND


				!!! *** Posts *** !!! **********************************************

				MATERIAL pmat

				ADDx -(hroL)-LengthSize*dpost
				ROTz -90+gs_AngleL		!! CONNECTING ANGLE
				ROTy -90
					CUTPLANE
				DEL 3

				ADDx templra+(hroR)+LengthSize*dpost
				ROTz 90-gs_AngleR
				ROTy 90
					CUTPLANE
				DEL 3


						MATERIAL pmat

						IF hrt_m=1 THEN			!Post height calculation
							ph=temp_hr+temp_ds-hrh+temp_PostBaseOverhang
							ELSE
							ph=temp_hr+temp_ds-hrd+temp_PostBaseOverhang
						ENDIF

!!!						GROUP "post round straight inclined"			!Groups
!!!						for i=1 to np step 1
!!!							cone ph,pd/2,pd/2,90,90-ani
!!!						add distpost,0,distpost*tan(ani)
!!!						next i
!!!						DEL np
!!!						ENDGROUP


						GROUP "post rect straight inclined"
						ADD 0,-pth/2+PostThk/2,-temp_PostBaseOverhang

							for i=1 to np step 1


								IF gs_PostBaseType_m=1 THEN
									PRISM_ 5,ph+HandrailHgt/2,
										-pw/2,pth/2-PostThk,15,
										 pw/2,pth/2-PostThk,15,
										 pw/2,pth/2,15,
										-pw/2,pth/2,15,
										-pw/2,pth/2-PostThk,-1

									ADD 0.002,-pth/2,0
									ROTy -90

										PRISM_ 5,PostThk,
											 pth-PostThk,0,15,
											 ph-sbh+0.01,0,15,
											 ph-sbh+0.01+(pth-PostThk),pth-PostThk,15,
											 0,pth-PostThk,15,
											 pth-PostThk,0,-1
									DEL 2
								ELSE
									ADDz PostThk
										PRISM_ 5,ph+HandrailHgt/2-PostThk,
											-pw/2,pth/2-PostThk,15,
											 pw/2,pth/2-PostThk,15,
											 pw/2,pth/2,15,
											-pw/2,pth/2,15,
											-pw/2,pth/2-PostThk,-1
									DEL 1

										PRISM_ 5,PostThk,
											-pw/2,-pth/2,15,
											 pw/2,-pth/2,15,
											 pw/2,pth/2,15,
											-pw/2,pth/2,15,
											-pw/2,-pth/2,-1

									ADD 0.002,-pth/2,PostThk
									ROTy -90
										PRISM_ 5,PostThk,
											 0,0,15,
											 ph-sbh+0.01,0,15,
											 ph-sbh+0.01+(pth-PostThk),pth-PostThk,15,
											 0,pth-PostThk,15,
											 0,0,-1
									DEL 2
								ENDIF

							add distpost,0,distpost*tan(ani)
							next i
							DEL np

						DEL 1
						ENDGROUP


						GROUP "plate rect inclined"
						ADDz ph-PostThk/(cos(ani))-temp_PostBaseOverhang
							for i=1 to np step 1
							Roty -ani
								PRISM_ 5,PostThk,
									-pw/2/(cos(ani))-0.01,-HandrailWidth/2+0.01,15,
									 pw/2/(cos(ani))+0.01,-HandrailWidth/2+0.01,15,
									 pw/2/(cos(ani))+0.01,HandrailWidth/2-0.01,15,
									-pw/2/(cos(ani))-0.01,HandrailWidth/2-0.01,15,
									-pw/2/(cos(ani))-0.01,-HandrailWidth/2+0.01,-1
							DEL 1
							ADD distpost,0,distpost*tan(ani)
							next i
							DEL np
						DEL 1
						ENDGROUP

						GROUP "plate round inclined"
						ADDz ph-PostThk/(cos(ani))-temp_PostBaseOverhang
							for i=1 to np step 1

								ROTy -ani
								ADDz hrd/2+PostThk
								ROTy 90
								ROTz 180+45
								ADDz -(pw/(cos(ani))+0.02)/2


								shell_angle=90
								prism_	9, pw/(cos(ani))+0.02,
									-(hrd/2+PostThk), 0, 15,
									-hrd/2, 0, 15,
									-hrd/2, 0.0001, 79,
									0, 0, 979,
									hrd/2,-shell_angle+0.0001, 4015,
									hrd/2*cos(180-shell_angle),hrd/2*sin(shell_angle), 15,
									(hrd/2+PostThk)*cos(180-shell_angle),(hrd/2+PostThk)*sin(shell_angle), 79,
									0, 0, 979,
									-(hrd/2+PostThk), shell_angle, 4015
								DEL 5

							ADD distpost,0,distpost*tan(ani)
							next i
							DEL np
						DEL 1
						ENDGROUP


						ResultStraight1=ADDGROUP ("handrail straight straight inclined","plate rect inclined")
						ResultRound1=ADDGROUP ("handrail round straight inclined","plate round inclined")


						ResultStraight2=ADDGROUP (ResultStraight1,"post rect straight inclined")
						ResultRound2=ADDGROUP (ResultRound1,"post rect straight inclined")

						ResultStraight3=ADDGROUP (ResultStraight1,ResultStraight2)
						ResultRound3=ADDGROUP (ResultRound1,ResultRound2)

						IF hrt_m=1 THEN
							PLACEGROUP ResultStraight3
							ELSE
							PLACEGROUP ResultRound3
						ENDIF

				CUTEND
				CUTEND



				!!! *** Wires *** !!! *****************************************

				MATERIAL bmat

				ADDx -(hroL)-LengthSize*dpost
				ROTz -90+gs_AngleL		!! CONNECTING ANGLE
				ROTy -90
					CUTPLANE
				DEL 3

				ADDx templra+(hroR)+LengthSize*dpost
				ROTz 90-gs_AngleR
				ROTy 90
					CUTPLANE
				DEL 3


				ADDy -(pth-PostThk)/2-PostThk/2

					MATERIAL bmat

					!!!Horizontal

					GROUP "board rect straight H inclined"			!Groups
					ROTx 90
					ADDz -bth/2
					PRISM_ 5,bth,
						0,temp_ds,15,
						templra,temp_ds+templra*tan(ani),15,
						templra,temp_ds+bw+templra*tan(ani),15,
						0,temp_ds+bw,15,
						0,temp_ds,-1
					DEL 2
					ENDGROUP

					GROUP "board round straight H inclined"
						ADDz temp_ds+bd/2
						ROTy 90-ani
						RESOL rescs/2
						cone templra/cos(ani),bd/2,bd/2,90+ani,90+ani
						DEL 2
					ENDGROUP


					for i=1 to nb step 1
					IF bt_m= 1 THEN
						PLACEGROUP subgroup ("board rect straight H inclined","post rect straight inclined")
					ELSE
						PLACEGROUP subgroup ("board round straight H inclined","post rect straight inclined")
					ENDIF
					ADDz dw
					next i
					DEL nb

				DEL 1

				CUTEND
				CUTEND


					KILLGROUP "handrail round straight inclined"
					KILLGROUP "handrail straight straight inclined"
!!!					KILLGROUP "post round straight inclined"
					KILLGROUP "post rect straight inclined"
					KILLGROUP "plate rect inclined"
					KILLGROUP "plate round inclined"
					KILLGROUP "board rect straight H inclined"
					KILLGROUP "board round straight H inclined"

				DEL 1
				ENDIF


			!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
			ELSE						!Perpendicular Orientation
										!Measurement is always perpendicular to inclination in this case
			!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

				ROTy -ani
				ADDX XStartPoslrah

					!!3D FEEDBACK AT HOTSPOT EDITING
					IF GLOB_CONTEXT>20 and GLOB_CONTEXT<40 THEN

						ROTx 90
						ADDz -fth/2
							!!FRAME
							MATERIAL fmat
							PRISM_ 5,fth,
								0,ds,15,
								templrah,ds,15,
								templrah,ds+hr,15,
								0,ds+hr,15,
								0,ds,-1
						DEL 2


					ELSE		!! 3D DETAILED MODEL


						!!! Handrail
						MATERIAL fmat

						GROUP "handrail round straight perp"			!Groups
						ADD  -hroLDiagonal,0,ds+hr-hrd/2
						ROTy 90
						CYLIND templrah+hroLDiagonal+hroRDiagonal,hrd/2
						DEL 2
						ENDGROUP


						IF hrt_m=1 THEN
							ROTx 90
							ADDz -hrw/2
								PRISM_ 5,hrw,
									-hroLDiagonal,ds+hr-hrh,15,
									templrah+hroRDiagonal,ds+hr-hrh,15,
									templrah+hroRDiagonal,ds+hr,15,
									-hroLDiagonal,ds+hr,15,
									-hroLDiagonal,ds+hr-hrh,-1
							DEL 2
						ELSE
							PLACEGROUP "handrail round straight perp"
						ENDIF



						!! *** POSTS *** !! *****************************************************
						MATERIAL pmat

						IF hrt_m=1 THEN			!Post height calculation
							ph=hr+ds-hrh-PostThk+gs_PostBaseOverhang
							ELSE
							ph=hr+ds-hrd-PostThk+gs_PostBaseOverhang
						ENDIF

						GROUP "post rect straight perp"
						ADD	0, -pth/2+PostThk/2,-gs_PostBaseOverhang

							for i=1 to np step 1

								IF gs_PostBaseType_m=1 THEN
									PRISM_ 5,ph,
										-pw/2,pth/2-PostThk,15,
										 pw/2,pth/2-PostThk,15,
										 pw/2,pth/2,15,
										-pw/2,pth/2,15,
										-pw/2,pth/2-PostThk,-1

									ADD 0.002,-pth/2,0
									ROTy -90

										PRISM_ 5,PostThk,
											 pth-PostThk,0,15,
											 ph-sbh+0.01,0,15,
											 ph-sbh+0.01+(pth-PostThk),pth-PostThk,15,
											 0,pth-PostThk,15,
											 pth-PostThk,0,-1
									DEL 2
								ELSE
									ADDz PostThk
										PRISM_ 5,ph-PostThk,
											-pw/2,pth/2-PostThk,15,
											 pw/2,pth/2-PostThk,15,
											 pw/2,pth/2,15,
											-pw/2,pth/2,15,
											-pw/2,pth/2-PostThk,-1
									DEL 1

										PRISM_ 5,PostThk,
											-pw/2,-pth/2,15,
											 pw/2,-pth/2,15,
											 pw/2,pth/2,15,
											-pw/2,pth/2,15,
											-pw/2,-pth/2,-1

									ADD 0.002,-pth/2,PostThk
									ROTy -90
										PRISM_ 5,PostThk,
											 0,0,15,
											 ph-sbh+0.01,0,15,
											 ph-sbh+0.01+(pth-PostThk),pth-PostThk,15,
											 0,pth-PostThk,15,
											 0,0,-1
									DEL 2
								ENDIF

							ADDx distpost
							next i
							DEL np
						DEL 1
						ENDGROUP


						GROUP "plate rect straight perp"
						ADDz ph-gs_PostBaseOverhang
							for i=1 to np step 1

								PRISM_ 5,PostThk,
									-pw/2-0.01,-HandrailWidth/2+0.01,15,
									 pw/2+0.01,-HandrailWidth/2+0.01,15,
									 pw/2+0.01,HandrailWidth/2-0.01,15,
									-pw/2-0.01,HandrailWidth/2-0.01,15,
									-pw/2-0.01,-HandrailWidth/2+0.01,-1

							ADDx distpost
							next i
							DEL np
						DEL 1
						ENDGROUP


						GROUP "plate round straight perp"
						ADD -pw/2-0.01,0,ph+hrd/2+PostThk-gs_PostBaseOverhang

							for i=1 to np step 1

								ROTy 90
								ROTz 180+45

								shell_angle=90
								prism_	9, pw+0.02,
									-(hrd/2+PostThk), 0, 15,
									-hrd/2, 0, 15,
									-hrd/2, 0.0001, 79,
									0, 0, 979,
									hrd/2,-shell_angle+0.0001, 4015,
									hrd/2*cos(180-shell_angle),hrd/2*sin(shell_angle), 15,
									(hrd/2+PostThk)*cos(180-shell_angle),(hrd/2+PostThk)*sin(shell_angle), 79,
									0, 0, 979,
									-(hrd/2+PostThk), shell_angle, 4015
								DEL 2

							ADDx distpost
							next i
							DEL np
						DEL 1
						ENDGROUP


						PLACEGROUP "post rect straight perp"

						IF hrt_m=1 THEN
							PLACEGROUP "plate rect straight perp"
						ELSE
							PLACEGROUP "plate round straight perp"
						ENDIF



						!! *** WIRES *** !! *****************************************************

						MATERIAL bmat

						!!!Horizontal

						ADDy -(pth-PostThk)/2-PostThk/2

							GROUP "board rect straight H perp"			!Groups
							ADDz  ds
							PRISM_ 5,bw,
								0,-bth/2,15,
								templrah,-bth/2,15,
								templrah,bth/2,15,
								0,bth/2,15,
								0,-bth/2,-1
							DEL 1
							ENDGROUP

							GROUP "board round straight H perp"
								ADDz  ds+bd/2
								ROTy 90
									RESOL rescs/2
									CYLIND templrah,bd/2
								DEL 2
							ENDGROUP

							for i=1 to nb step 1
								IF bt_m= 1 THEN
									PLACEGROUP subgroup ("board rect straight H perp","post rect straight perp")
								ELSE
									PLACEGROUP subgroup ("board round straight H perp","post rect straight perp")
								ENDIF
							ADDz dw
							next i
							DEL nb


							KILLGROUP "handrail round straight perp"
							KILLGROUP "post rect straight perp"
							KILLGROUP "plate rect straight perp"
							KILLGROUP "plate round straight perp"
							KILLGROUP "board rect straight H perp"
							KILLGROUP "board round straight H perp"
						DEL 1
				ENDIF

			DEL 1		!! END OF DRAG
			DEL 1		!! END OF ROTATION

		ENDIF


	ENDIF


!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** INCLINED AND CURVED *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!


	IF ABS(ani)>EPS and ptyp_m<>1 THEN

			RESOL rescs

			!!! HANDRAIL

			MATERIAL fmat

			!!3D FEEDBACK AT HOTSPOT EDITING
			IF GLOB_CONTEXT>20 and GLOB_CONTEXT<40 THEN

				!!!!FRAME
				MATERIAL fmat

				alphai=-alphaincl
				deltazi=-deltazincl
				for i=1 to nalphaincl+3 step 1
				put rb*sin(alphai),rb-rb*cos(alphai),ds+deltazi
				alphai=alphai+alphaincl
				deltazi=deltazi+deltazincl
				NEXT i

				TUBEA 5,nalphaincl+3,1+2+16+32,
					-fth/2,0,0,
					fth/2,0,0,
					fth/2,hr,0,
					-fth/2,hr,0,
					-fth/2,0,-1,
					get (nsp)

			ELSE


				RestAngleL=alphahroL-nalphahroL*alphaincl		!!Rest Angle= Overhang Angle- Segments Points Angle
				LOHkerul=(rb*pi*alphahroL)/180					!!Perimeter of Handrail
				deltazLOH=LOHkerul*sin(ani)						!!vertical distance of Handrail
				deltara=deltazLOH-(deltazincl*nalphahroL)		!!vertical step of Rest Angle

				RestAngleR=alphahroR-nalphahroR*alphaincl
				ROHkerul=(rb*pi*alphahroR)/180
				deltazROH=ROHkerul*sin(ani)
				deltaraR=deltazROH-(deltazincl*nalphahroR)


				alphai=-(nalphahroL+1)*alphaincl
				deltazi=-(nalphahroL+1)*deltazincl

				if ABS(hroR)<EPS THEN
				tempStep=1
				ELSE
				tempStep=0
				ENDIF

					PUT rb*sin(-alphahroL-restangleL),rb-rb*cos(-alphahroL-restangleL),ds-deltazLOH-deltara
					PUT rb*sin(-alphahroL),rb-rb*cos(-alphahroL),ds-deltazLOH
					PUT rb*sin(-alphahroL+restangleL),rb-rb*cos(-alphahroL+restangleL),ds-deltazLOH+deltara

				if abs(nalphahroL)>EPS then		!! Left Handrail
				FOR i=1 to nalphahroL step 1
					PUT rb*sin(-alphahroL+restangleL+i*alphaincl),rb-rb*cos(-alphahroL+restangleL+i*alphaincl),ds-deltazLOH+deltara+i*deltazincl
				Next i
				endif

				FOR i=0 to nalphaincl+tempStep step 1		!! Handrail between Posts
					PUT rb*sin(i*alphaincl),rb-rb*cos(i*alphaincl),ds+i*deltazincl
				NEXT i

			IF ABS(hroR)>EPS THEN				!! Right Handrail

				if abs(nalphahroR)>EPS then
				FOR i=1 to nalphahroR step 1
					PUT rb*sin((nalphaincl+i)*alphaincl),rb-rb*cos((nalphaincl+i)*alphaincl),ds+(nalphaincl+i)*deltazincl
				Next i
				endif

					PUT rb*sin((nalphaincl+nalphahroR)*alphaincl+restangleR),rb-rb*cos((nalphaincl+nalphahroR)*alphaincl+restangleR),ds+(nalphaincl+nalphahroR)*deltazincl+deltaraR
					PUT rb*sin((nalphaincl+nalphahroR)*alphaincl+2*restangleR),rb-rb*cos((nalphaincl+nalphahroR)*alphaincl+2*restangleR),ds+(nalphaincl+nalphahroR)*deltazincl+2*deltaraR
			ENDIF


				GROUP "handrail round inclined curved"
					ADDz hr-hrd/2
					tubea 6,nsp/3,1+2+16+32,
						-hrd/2,0,1,
						 0,-1,801,
						 hrd/2,0,1001,
						 0,1,801,
						-hrd/2,0,1001,
						-hrd/2,0,-1,
						use (nsp)
					DEL 1
				ENDGROUP

				GROUP "handrail rect inclined curved"
					ADDz hr-hrh
					tubea 5,nsp/3,1+2+16+32,
						-hrw/2,0,0,
						 hrw/2,0,0,
						 hrw/2,hrh,0,
						-hrw/2,hrh,0,
						-hrw/2,0,-1,
						get (nsp)
					DEL 1
				ENDGROUP



				!! *** POST *** !! *****************************************************

				MATERIAL pmat

				IF hrt_m=1 THEN			!Post height calculation
					ph=hr+ds-hrh+gs_PostBaseOverhang
					ELSE
					ph=hr+ds-hrd+gs_PostBaseOverhang
				endif

				GROUP "post rect inclined curved"
					for i=1 to np step 1

						ADD 0,-pth/2+PostThk/2,-gs_PostBaseOverhang

							IF gs_PostBaseType_m=1 THEN
								PRISM_ 5,ph+HandrailHgt/2,
									-pw/2,pth/2-PostThk,15,
									 pw/2,pth/2-PostThk,15,
									 pw/2,pth/2,15,
									-pw/2,pth/2,15,
									-pw/2,pth/2-PostThk,-1

								ADD 0.002,-pth/2,0
								ROTy -90

									PRISM_ 5,PostThk,
										 pth-PostThk,0,15,
										 ph-sbh+0.01,0,15,
										 ph-sbh+0.01+(pth-PostThk),pth-PostThk,15,
										 0,pth-PostThk,15,
										 pth-PostThk,0,-1
								DEL 2
							ELSE
								ADDz PostThk
									PRISM_ 5,ph+HandrailHgt/2-PostThk,
										-pw/2,pth/2-PostThk,15,
										 pw/2,pth/2-PostThk,15,
										 pw/2,pth/2,15,
										-pw/2,pth/2,15,
										-pw/2,pth/2-PostThk,-1
								DEL 1

									PRISM_ 5,PostThk,
										-pw/2,-pth/2,15,
										 pw/2,-pth/2,15,
										 pw/2,pth/2,15,
										-pw/2,pth/2,15,
										-pw/2,-pth/2,-1

									ADD 0.002,-pth/2,PostThk
									ROTy -90
										PRISM_ 5,PostThk,
											 0,0,15,
											 ph-sbh+0.01,0,15,
											 ph-sbh+0.01+(pth-PostThk),pth-PostThk,15,
											 0,pth-PostThk,15,
											 0,0,-1
									DEL 2
							ENDIF

						DEL 1

					addy rb
					rotz anglepost
					addy -rb
					ADDz deltazpost
					next i
					DEL 4*np
				ENDGROUP


				GROUP "plate rect inclined curved"
				ADDz ph-PostThk/(cos(ani))-gs_PostBaseOverhang
					for i=1 to np step 1
						Roty -ani
							PRISM_ 5,PostThk,
								-pw/2-0.01,-HandrailWidth/2+0.01,15,
								 pw/2+0.01,-HandrailWidth/2+0.01,15,
								 pw/2+0.01,HandrailWidth/2-0.01,15,
								-pw/2-0.01,HandrailWidth/2-0.01,15,
								-pw/2-0.01,-HandrailWidth/2+0.01,-1
						DEL 1

					addy rb
					rotz anglepost
					addy -rb
					ADDz deltazpost
					next i
					DEL 4*np
				DEL 1
				ENDGROUP

				GROUP "plate round inclined curved"
				ADDz ph-PostThk/(cos(ani))-gs_PostBaseOverhang
					for i=1 to np step 1

								ROTy -ani
								ADDz hrd/2+PostThk
								ROTy 90
								ROTz 180+45
								ADDz -(pw/(cos(ani))+0.02)/2


								shell_angle=90
								prism_	9, pw/(cos(ani))+0.02,
									-(hrd/2+PostThk), 0, 15,
									-hrd/2, 0, 15,
									-hrd/2, 0.0001, 79,
									0, 0, 979,
									hrd/2,-shell_angle+0.0001, 4015,
									hrd/2*cos(180-shell_angle),hrd/2*sin(shell_angle), 15,
									(hrd/2+PostThk)*cos(180-shell_angle),(hrd/2+PostThk)*sin(shell_angle), 79,
									0, 0, 979,
									-(hrd/2+PostThk), shell_angle, 4015
								DEL 5

					addy rb
					rotz anglepost
					addy -rb
					ADDz deltazpost
					next i
					DEL 4*np
				DEL 1
				ENDGROUP

				CurvedStraight1=ADDGROUP ("handrail rect inclined curved","plate rect inclined curved")
				CurvedRound1=ADDGROUP ("handrail round inclined curved","plate round inclined curved")


				CurvedStraight2=ADDGROUP (CurvedStraight1,"post rect inclined curved")
				CurvedRound2=ADDGROUP (CurvedRound1,"post rect inclined curved")

				CurvedStraight3=ADDGROUP (CurvedStraight1,CurvedStraight2)
				CurvedRound3=ADDGROUP (CurvedRound1,CurvedRound2)

				IF hrt_m=1 THEN
					PLACEGROUP CurvedStraight3
					ELSE
					PLACEGROUP CurvedRound3
				ENDIF


				!! *** WIRES *** !! *****************************************************

				MATERIAL bmat

				!!! Horizontal

				alphai=-alphaincl
				deltazi=-deltazincl
				for i=1 to nalphaincl+3 step 1
				put rb*sin(alphai),rb-rb*cos(alphai),deltazi
				alphai=alphai+alphaincl
				deltazi=deltazi+deltazincl
				next i

				GROUP "board round inclined curved H"
					ADDz ds+bd/2
					RESOL rescs/2
					TUBEA 6,nalphaincl+3,1+2+16+32,
						-bd/2,0,1,
						 0,-1,801,
						 bd/2,0,1001,
						 0,1,801,
						-bd/2,0,1001,
						-bd/2,0,-1,
					use (nsp)
					DEL 1
				ENDGROUP

				GROUP "board rect inclined curved H"
					ADDz ds
					TUBEA 5,nalphaincl+3,1+2+16+32,
						-bth/2,0,0,
						 bth/2,0,0,
						 bth/2,bw,0,
						-bth/2,bw,0,
						-bth/2,0,-1,
					get (nsp)
					DEL 1
				ENDGROUP

				for i=1 to nb step 1
				ADDy -pth/2
					IF bt_m= 1 THEN
						PLACEGROUP subgroup ("board rect inclined curved H","post rect inclined curved")
					ELSE
						PLACEGROUP subgroup ("board round inclined curved H","post rect inclined curved")
					ENDIF
				DEL 1
				ADDz dw
				next i
				DEL nb


				KILLGROUP "handrail round inclined curved"
				KILLGROUP "handrail rect inclined curved"
				KILLGROUP "post rect inclined curved"
				KILLGROUP "plate rect inclined curved"
				KILLGROUP "plate round inclined curved"
				KILLGROUP "board rect inclined curved H"
				KILLGROUP "board round inclined curved H"

		ENDIF

	ENDIF


ENDIF


!!DETAILED 3D END!!
DEL top
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! ** HOTSPOTS ** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

	IF LengthSize = 0 THEN			!!!OVERHANG OF HANDRAIL
		temphroL = -hroL
		temphroR = hroR
		RefPoint1 = 1
		RefPoint2 = -1

		InclRefPoint = -tan(ani)

		temphroLDiag = -hroLDiagonal
		temphroRDiag = hroRDiagonal
	ELSE
		temphroL = hroL
		temphroR = -hroR
		RefPoint1 = -1
		RefPoint2 = 1

		InclRefPoint = tan(ani)

		temphroLDiag = hroLDiagonal
		temphroRDiag = -hroRDiagonal
	ENDIF

	!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** STRAIGHT *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

	IF cfs=0 THEN
		IF ABS(ani)<EPS and ptyp_m=1 THEN


				!!!LENGHT
				HOTSPOT 0,0,ds+hr,unID,lra,1+256 : unID=unID+1
				HOTSPOT lra,0,ds+hr,unID,lra,2 : unID=unID+1
				HOTSPOT -1,0,ds+hr,unID,lra,3 : unID=unID+1

				IF LengthSize = 0 THEN
					HOTSPOT 0,0,0,unID,lra,1+256 : unID=unID+1
					HOTSPOT lra,0,0,unID,lra,2 : unID=unID+1
					HOTSPOT -1,0,0,unID,lra,3 : unID=unID+1

					HOTSPOT 0,0,ds,unID,lra,1+256 : unID=unID+1
					HOTSPOT lra,0,ds,unID,lra,2 : unID=unID+1
					HOTSPOT -1,0,ds,unID,lra,3 : unID=unID+1
				ENDIF

				!!!DISTANCE FROM FLOOR
				HOTSPOT templra/2+LengthSize*hroL,0,0,unID,ds,1+128 : unID=unID+1
				HOTSPOT templra/2+LengthSize*hroL,0,ds,unID,ds,2 : unID=unID+1
				HOTSPOT templra/2+LengthSize*hroL,0,-1,unID,ds,3 : unID=unID+1

				!!!HEIGHT OF RAILING
				HOTSPOT templra/2+LengthSize*hroL,0,ds,unID,hr,1 : unID=unID+1
				HOTSPOT templra/2+LengthSize*hroL,0,ds+hr,unID,hr,2 : unID=unID+1
				HOTSPOT templra/2+LengthSize*hroL,0,-1,unID,hr,3 : unID=unID+1

				!!!POST BASE OVERHANG
				HOTSPOT LengthSize*hroL,0,0,unID,gs_PostBaseOverhang,1 : unID=unID+1
				HOTSPOT LengthSize*hroL,0,-gs_PostBaseOverhang,unID,gs_PostBaseOverhang,2 : unID=unID+1
				HOTSPOT LengthSize*hroL,0,1,unID,gs_PostBaseOverhang,3 : unID=unID+1

				HOTSPOT lra-LengthSize*hroR,0,0,unID,gs_PostBaseOverhang,1 : unID=unID+1
				HOTSPOT lra-LengthSize*hroR,0,-gs_PostBaseOverhang,unID,gs_PostBaseOverhang,2 : unID=unID+1
				HOTSPOT lra-LengthSize*hroR,0,1,unID,gs_PostBaseOverhang,3 : unID=unID+1

				!!!OVERHANG OF RAILING
				HOTSPOT 0,0,ds+hr,unID,hroL,1+128 : unID=unID+1
				HOTSPOT temphroL,0,ds+hr,unID,hroL,2 : unID=unID+1
				HOTSPOT RefPoint1,0,ds+hr,unID,hroL,3 : unID=unID+1

				HOTSPOT lra,0,ds+hr,unID,hroR,1+128 : unID=unID+1
				HOTSPOT lra+temphroR,0,ds+hr,unID,hroR,2 : unID=unID+1
				HOTSPOT lra+RefPoint2,0,ds+hr,unID,hroR,3 : unID=unID+1

				IF gs_detlevel_3D_m=2 THEN		!!DETAILED

					!!!TOP WIRE DISTANCE FROM HANDRAIL
					HOTSPOT LengthSize*hroL,0,hr+ds-HandrailHgt,unID,sbh,1+128 : unID=unID+1
					HOTSPOT LengthSize*hroL,0,hr+ds-HandrailHgt-sbh,unID,sbh,2 : unID=unID+1
					HOTSPOT LengthSize*hroL,0,hr+ds-HandrailHgt+1,unID,sbh,3 : unID=unID+1

					HOTSPOT lra-LengthSize*hroR,0,hr+ds-HandrailHgt,unID,sbh,1+128 : unID=unID+1
					HOTSPOT lra-LengthSize*hroR,0,hr+ds-HandrailHgt-sbh,unID,sbh,2 : unID=unID+1
					HOTSPOT lra-LengthSize*hroR,0,hr+ds-HandrailHgt+1,unID,sbh,3 : unID=unID+1

				ENDIF

		ENDIF

	!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** STRAIGHT CURVED *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

		IF ABS(ani)<EPS and ptyp_m<>1 THEN
			IF ab<360 THEN

					IF ptyp_m=3 THEN
					!!!ROTATE
						HOTSPOT 0,rb,ds,unID,ab,6 : unID=unID+1
						HOTSPOT 0,0,ds,unID,ab,4+256 : unID=unID+1
						HOTSPOT rb*sin(ab),rb-rb*cos(ab),ds,unID,ab,5 : unID=unID+1

						HOTSPOT 0,rb,ds+hr,unID,ab,6 : unID=unID+1
						HOTSPOT 0,0,ds+hr,unID,ab,4+256 : unID=unID+1
						HOTSPOT rb*sin(ab),rb-rb*cos(ab),ds+hr,unID,ab,5 : unID=unID+1

					!!!FIX HOTSPOT AT FLOOR
						HOTSPOT 0,0,0,unID : unID=unID+1
						HOTSPOT rb*sin(ab),rb-rb*cos(ab),0,unID : unID=unID+1
					ENDIF

					!!!HEIGHT OF RAILING
						HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),ds,unID,hr,1+128 : unID=unID+1
						HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),ds+hr,unID,hr,2 : unID=unID+1
						HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),-1,unID,ds,3 : unID=unID+1

					!!! DISTANCE FROM FLOOR
						HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),0,unID,ds,1 : unID=unID+1
						HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),ds,unID,ds,2 : unID=unID+1
						HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),-1,unID,ds,3 : unID=unID+1

					IF ptyp_m=2 THEN

					!!!HEIGHT OF RAILING
						HOTSPOT 0,0,ds,unID,hr,1+128 : unID=unID+1
						HOTSPOT 0,0,ds+hr,unID,hr,2 : unID=unID+1
						HOTSPOT 0,0,-1,unID,hr,3 : unID=unID+1

						HOTSPOT rb*sin(ab),rb-rb*cos(ab),ds,unID,hr,1+128 : unID=unID+1
						HOTSPOT rb*sin(ab),rb-rb*cos(ab),ds+hr,unID,hr,2 : unID=unID+1
						HOTSPOT rb*sin(ab),rb-rb*cos(ab),-1,unID,hr,3 : unID=unID+1

					!!! DISTANCE FROM FLOOR
						HOTSPOT 0,0,0,unID,ds,1 : unID=unID+1
						HOTSPOT 0,0,ds,unID,ds,2 : unID=unID+1
						HOTSPOT 0,0,-1,unID,ds,3 : unID=unID+1

						HOTSPOT rb*sin(ab),rb-rb*cos(ab),0,unID,ds,1 : unID=unID+1
						HOTSPOT rb*sin(ab),rb-rb*cos(ab),ds,unID,ds,2 : unID=unID+1
						HOTSPOT rb*sin(ab),rb-rb*cos(ab),-1,unID,ds,3 : unID=unID+1
					ENDIF

						!!!POST BASE OVERHANG
						HOTSPOT 0,0,0,unID,gs_PostBaseOverhang,1+128 : unID=unID+1
						HOTSPOT 0,0,-gs_PostBaseOverhang,unID,gs_PostBaseOverhang,2 : unID=unID+1
						HOTSPOT 0,0,1,unID,gs_PostBaseOverhang,3 : unID=unID+1

						HOTSPOT rb*sin(ab),rb-rb*cos(ab),0,unID,gs_PostBaseOverhang,1+128 : unID=unID+1
						HOTSPOT rb*sin(ab),rb-rb*cos(ab),-gs_PostBaseOverhang,unID,gs_PostBaseOverhang,2 : unID=unID+1
						HOTSPOT rb*sin(ab),rb-rb*cos(ab),1,unID,gs_PostBaseOverhang,3 : unID=unID+1

					IF gs_detlevel_3D_m=2 THEN		!!DETAILED
						!!!TOP WIRE DISTANCE FROM HANDRAIL
						HOTSPOT 0,0,hr+ds-HandrailHgt,unID,sbh,1+128 : unID=unID+1
						HOTSPOT 0,0,hr+ds-HandrailHgt-sbh,unID,sbh,2 : unID=unID+1
						HOTSPOT 0,0,hr+ds-HandrailHgt+1,unID,sbh,3 : unID=unID+1

						HOTSPOT rb*sin(ab),rb-rb*cos(ab),hr+ds-HandrailHgt,unID,sbh,1+128 : unID=unID+1
						HOTSPOT rb*sin(ab),rb-rb*cos(ab),hr+ds-HandrailHgt-sbh,unID,sbh,2 : unID=unID+1
						HOTSPOT rb*sin(ab),rb-rb*cos(ab),hr+ds-HandrailHgt+1,unID,sbh,3 : unID=unID+1
					ENDIF

			ELSE	!!!ANGLE=360


				!!!HOTSPOTS FOR GRAPHICAL EDITING
				!!!HEIGHT

					HOTSPOT 0,0,ds,unID,hr,1 : unID=unID+1
					HOTSPOT 0,0,ds+hr,unID,hr,2 : unID=unID+1
					HOTSPOT 0,0,-1,unID,hr,3 : unID=unID+1

					HOTSPOT rb,rb,ds,unID,hr,1 : unID=unID+1
					HOTSPOT rb,rb,ds+hr,unID,hr,2 : unID=unID+1
					HOTSPOT rb,rb,-1,unID,hr,3 : unID=unID+1

					HOTSPOT 0,2*rb,ds,unID,hr,1 : unID=unID+1
					HOTSPOT 0,2*rb,ds+hr,unID,hr,2 : unID=unID+1
					HOTSPOT 0,2*rb,-1,unID,hr,3 : unID=unID+1

					HOTSPOT -rb,rb,ds,unID,hr,1 : unID=unID+1
					HOTSPOT -rb,rb,ds+hr,unID,hr,2 : unID=unID+1
					HOTSPOT -rb,rb,-1,unID,hr,3 : unID=unID+1

					HOTSPOT 0,0,0,unID,ds,1 : unID=unID+1
					HOTSPOT 0,0,ds,unID,ds,2 : unID=unID+1
					HOTSPOT 0,0,-1,unID,ds,3 : unID=unID+1

					HOTSPOT rb,rb,0,unID,ds,1 : unID=unID+1
					HOTSPOT rb,rb,ds,unID,ds,2 : unID=unID+1
					HOTSPOT rb,rb,-1,unID,ds,3 : unID=unID+1

					HOTSPOT 0,2*rb,0,unID,ds,1 : unID=unID+1
					HOTSPOT 0,2*rb,ds,unID,ds,2 : unID=unID+1
					HOTSPOT 0,2*rb,-1,unID,ds,3 : unID=unID+1

					HOTSPOT -rb,rb,0,unID,ds,1 : unID=unID+1
					HOTSPOT -rb,rb,ds,unID,ds,2 : unID=unID+1
					HOTSPOT -rb,rb,-1,unID,ds,3 : unID=unID+1

					!!!TOP WIRE DISTANCE FROM HANDRAIL
					HOTSPOT 0,0,hr+ds-HandrailHgt,unID,sbh,1+128 : unID=unID+1
					HOTSPOT 0,0,hr+ds-HandrailHgt-sbh,unID,sbh,2 : unID=unID+1
					HOTSPOT 0,0,hr+ds-HandrailHgt+1,unID,sbh,3 : unID=unID+1

					HOTSPOT rb,rb,hr+ds-HandrailHgt,unID,sbh,1+128 : unID=unID+1
					HOTSPOT rb,rb,hr+ds-HandrailHgt-sbh,unID,sbh,2 : unID=unID+1
					HOTSPOT rb,rb,hr+ds-HandrailHgt+1,unID,sbh,3 : unID=unID+1

					HOTSPOT 0,2*rb,hr+ds-HandrailHgt,unID,sbh,1+128 : unID=unID+1
					HOTSPOT 0,2*rb,hr+ds-HandrailHgt-sbh,unID,sbh,2 : unID=unID+1
					HOTSPOT 0,2*rb,hr+ds-HandrailHgt+1,unID,sbh,3 : unID=unID+1

					HOTSPOT -rb,rb,hr+ds-HandrailHgt,unID,sbh,1+128 : unID=unID+1
					HOTSPOT -rb,rb,hr+ds-HandrailHgt-sbh,unID,sbh,2 : unID=unID+1
					HOTSPOT -rb,rb,hr+ds-HandrailHgt+1,unID,sbh,3 : unID=unID+1

					!!!POST BASE OVERHANG
					HOTSPOT 0,0,0,unID,gs_PostBaseOverhang,1+128 : unID=unID+1
					HOTSPOT 0,0,-gs_PostBaseOverhang,unID,gs_PostBaseOverhang,2 : unID=unID+1
					HOTSPOT 0,0,1,unID,gs_PostBaseOverhang,3 : unID=unID+1

					HOTSPOT rb,rb,0,unID,gs_PostBaseOverhang,1+128 : unID=unID+1
					HOTSPOT rb,rb,-gs_PostBaseOverhang,unID,gs_PostBaseOverhang,2 : unID=unID+1
					HOTSPOT rb,rb,1,unID,gs_PostBaseOverhang,3 : unID=unID+1

					HOTSPOT 0,2*rb,0,unID,gs_PostBaseOverhang,1+128 : unID=unID+1
					HOTSPOT 0,2*rb,-gs_PostBaseOverhang,unID,gs_PostBaseOverhang,2 : unID=unID+1
					HOTSPOT 0,2*rb,1,unID,gs_PostBaseOverhang,3 : unID=unID+1

					HOTSPOT -rb,rb,0,unID,gs_PostBaseOverhang,1+128 : unID=unID+1
					HOTSPOT -rb,rb,-gs_PostBaseOverhang,unID,gs_PostBaseOverhang,2 : unID=unID+1
					HOTSPOT -rb,rb,1,unID,gs_PostBaseOverhang,3 : unID=unID+1

			ENDIF
		ENDIF

	!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** STRAIGHT INCLINED *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

		IF ABS(ani)>EPS and ptyp_m=1 THEN			!!ptyp=Straight
			IF rom_m=1 THEN					!!Vertical Orientation

					IF rmm_m=2 THEN			!!Perpendicular Measurement
						ftw=ftw/cos(ani)
						fbw=fbw/cos(ani)
					ENDIF

					IF rmm_m=1 THEN			!!Vertical Measurement
						temp_ds=ds
						temp_hr=hr
						temp_sbh=sbh
					ELSE					!!Perpendicular Measurement
						temp_ds=dsPerp
						temp_hr=hrPerp
						temp_sbh=sbhPerp
					ENDIF

						!!!	HOTSPOTS FOR GRAPHICAL EDITING
						!!! LENGTH OF RAILING

							HOTSPOT 0,	0,	temp_ds+temp_hr,				unID, lrah, 1+256 : unID=unID+1
							HOTSPOT -1, 0,	temp_ds+temp_hr-tan(ani),		unID, lrah, 3 : unID=unID+1
							HOTSPOT lra,0, 	temp_ds+temp_hr+lra*tan(ani),	unID, lrah, 2 : unID=unID+1

						IF LengthSize = 0 THEN
							HOTSPOT 0,	0,	0,				unID, lrah, 1+256 : unID=unID+1
							HOTSPOT -1, 0,	0-tan(ani),		unID, lrah, 3 : unID=unID+1
							HOTSPOT lra,0, 	0+lra*tan(ani),	unID, lrah, 2 : unID=unID+1

							HOTSPOT 0,	0,	temp_ds,				unID, lrah, 1+256 : unID=unID+1
							HOTSPOT -1, 0,	temp_ds-tan(ani),		unID, lrah, 3 : unID=unID+1
							HOTSPOT lra,0, 	temp_ds+lra*tan(ani),	unID, lrah, 2 : unID=unID+1
						ENDIF


					IF rmm_m=1 THEN

						!!! DISTANCE FROM FLOOR
						HOTSPOT templra/2+LengthSize*hroL,	0,	(templra/2+LengthSize*hroL)*tan(ani),	unID, ds, 1+128 : unID=unID+1
						HOTSPOT templra/2+LengthSize*hroL,	0,	(templra/2+LengthSize*hroL)*tan(ani)-1,	unID, ds, 3 : unID=unID+1
						HOTSPOT templra/2+LengthSize*hroL,	0, 	(templra/2+LengthSize*hroL)*tan(ani)+temp_ds,	unID, ds, 2 : unID=unID+1

						!!! HEIGHT of RAILING
						HOTSPOT templra/2+LengthSize*hroL,	0,	temp_ds+(templra/2+LengthSize*hroL)*tan(ani),	unID, hr, 1+128 : unID=unID+1
						HOTSPOT templra/2+LengthSize*hroL,	0,	temp_ds+(templra/2+LengthSize*hroL)*tan(ani)-1,	unID, hr, 3 : unID=unID+1
						HOTSPOT templra/2+LengthSize*hroL,	0, 	temp_ds+(templra/2+LengthSize*hroL)*tan(ani)+temp_hr,unID, hr, 2 : unID=unID+1

						!!!POST BASE OVERHANG
						HOTSPOT LengthSize*hroL,0,LengthSize*hroL*tan(ani),unID,gs_PostBaseOverhang,1 : unID=unID+1
						HOTSPOT LengthSize*hroL,0,LengthSize*hroL*tan(ani)-gs_PostBaseOverhang,unID,gs_PostBaseOverhang,2 : unID=unID+1
						HOTSPOT LengthSize*hroL,0,LengthSize*hroL*tan(ani)+1,unID,gs_PostBaseOverhang,3 : unID=unID+1

						HOTSPOT lra-LengthSize*hroR,0,LengthSize*hroL*tan(ani)+templra*tan(ani),unID,gs_PostBaseOverhang,1 : unID=unID+1
						HOTSPOT lra-LengthSize*hroR,0,LengthSize*hroL*tan(ani)+templra*tan(ani)-gs_PostBaseOverhang,unID,gs_PostBaseOverhang,2 : unID=unID+1
						HOTSPOT lra-LengthSize*hroR,0,LengthSize*hroL*tan(ani)+templra*tan(ani)+1,unID,gs_PostBaseOverhang,3 : unID=unID+1

						IF gs_detlevel_3D_m=2 THEN		!!DETAILED
							!!!TOP WIRE DISTANCE FROM HANDRAIL
							HOTSPOT LengthSize*hroL,0,LengthSize*hroL*tan(ani)+hr+ds-HandrailHgt,unID,sbh,1+128 : unID=unID+1
							HOTSPOT LengthSize*hroL,0,LengthSize*hroL*tan(ani)+hr+ds-HandrailHgt-sbh,unID,sbh,2 : unID=unID+1
							HOTSPOT LengthSize*hroL,0,LengthSize*hroL*tan(ani)+hr+ds-HandrailHgt+1,unID,sbh,3 : unID=unID+1

							HOTSPOT lra-LengthSize*hroR,0,LengthSize*hroL*tan(ani)+templra*tan(ani)+hr+ds-HandrailHgt,unID,sbh,1+128 : unID=unID+1
							HOTSPOT lra-LengthSize*hroR,0,LengthSize*hroL*tan(ani)+templra*tan(ani)+hr+ds-HandrailHgt-sbh,unID,sbh,2 : unID=unID+1
							HOTSPOT lra-LengthSize*hroR,0,LengthSize*hroL*tan(ani)+templra*tan(ani)+hr+ds-HandrailHgt+1,unID,sbh,3 : unID=unID+1
						ENDIF
					ELSE

						!!! DISTANCE FROM FLOOR
						HOTSPOT templra/2+LengthSize*hroL,	0,	(templra/2+LengthSize*hroL)*tan(ani),	unID, dsPerp, 1+128, ds : unID=unID+1
						HOTSPOT templra/2+LengthSize*hroL,	0,	(templra/2+LengthSize*hroL)*tan(ani)-1,	unID, dsPerp, 3, ds : unID=unID+1
						HOTSPOT templra/2+LengthSize*hroL,	0, 	(templra/2+LengthSize*hroL)*tan(ani)+temp_ds,	unID, dsPerp, 2, ds : unID=unID+1

						!!! HEIGHT of RAILING
						HOTSPOT templra/2+LengthSize*hroL,	0,	temp_ds+(templra/2+LengthSize*hroL)*tan(ani),	unID, hrPerp, 1+128, hr : unID=unID+1
						HOTSPOT templra/2+LengthSize*hroL,	0,	temp_ds+(templra/2+LengthSize*hroL)*tan(ani)-1,	unID, hrPerp, 3, hr  : unID=unID+1
						HOTSPOT templra/2+LengthSize*hroL,	0, 	temp_ds+(templra/2+LengthSize*hroL)*tan(ani)+temp_hr,unID, hrPerp, 2, hr  : unID=unID+1

						!!!POST BASE OVERHANG
						HOTSPOT LengthSize*hroL,0,LengthSize*hroL*tan(ani),unID,gs_PostBaseOverhangPerp,1,gs_PostBaseOverhang : unID=unID+1
						HOTSPOT LengthSize*hroL,0,LengthSize*hroL*tan(ani)-temp_PostBaseOverhang,unID,gs_PostBaseOverhangPerp,2,gs_PostBaseOverhang : unID=unID+1
						HOTSPOT LengthSize*hroL,0,LengthSize*hroL*tan(ani)+1,unID,gs_PostBaseOverhangPerp,3,gs_PostBaseOverhang : unID=unID+1

						HOTSPOT lra-LengthSize*hroR,0,LengthSize*hroL*tan(ani)+templra*tan(ani),unID,gs_PostBaseOverhangPerp,1,gs_PostBaseOverhang : unID=unID+1
						HOTSPOT lra-LengthSize*hroR,0,LengthSize*hroL*tan(ani)+templra*tan(ani)-temp_PostBaseOverhang,unID,gs_PostBaseOverhangPerp,2,gs_PostBaseOverhang : unID=unID+1
						HOTSPOT lra-LengthSize*hroR,0,LengthSize*hroL*tan(ani)+templra*tan(ani)+1,unID,gs_PostBaseOverhangPerp,3,gs_PostBaseOverhang : unID=unID+1

						IF gs_detlevel_3D_m=2 THEN		!!DETAILED

							!!!TOP WIRE DISTANCE FROM HANDRAIL
							HOTSPOT LengthSize*hroL,0,LengthSize*hroL*tan(ani)+temp_hr+temp_ds-HandrailHgt/cos(ani),			unID,sbhPerp,1+128,sbh : unID=unID+1
							HOTSPOT LengthSize*hroL,0,LengthSize*hroL*tan(ani)+temp_hr+temp_ds-HandrailHgt/cos(ani)-temp_sbh,	unID,sbhPerp,2,sbh : unID=unID+1
							HOTSPOT LengthSize*hroL,0,LengthSize*hroL*tan(ani)+temp_hr+temp_ds-HandrailHgt/cos(ani)+1,			unID,sbhPerp,3,sbh : unID=unID+1

							HOTSPOT lra-LengthSize*hroR,0,LengthSize*hroL*tan(ani)+templra*tan(ani)+temp_hr+temp_ds-HandrailHgt/cos(ani),			unID,sbhPerp,1+128,sbh : unID=unID+1
							HOTSPOT lra-LengthSize*hroR,0,LengthSize*hroL*tan(ani)+templra*tan(ani)+temp_hr+temp_ds-HandrailHgt/cos(ani)-temp_sbh,	unID,sbhPerp,2,sbh : unID=unID+1
							HOTSPOT lra-LengthSize*hroR,0,LengthSize*hroL*tan(ani)+templra*tan(ani)+temp_hr+temp_ds-HandrailHgt/cos(ani)+1,			unID,sbhPerp,3,sbh : unID=unID+1

						ENDIF

					ENDIF


						!!!OVERHANG OF RAILING
						HOTSPOT 0,0,	temp_ds+temp_hr,				unID,hroLDiagonal,1+128,hroL : unID=unID+1
						HOTSPOT temphroL,0,	temp_ds+temp_hr+temphroL*tan(ani),	unID,hroLDiagonal,2	,hroL	: unID=unID+1
						HOTSPOT RefPoint1,0,temp_ds+temp_hr-InclRefPoint,		unID,hroLDiagonal,3	,hroL	: unID=unID+1

						HOTSPOT lra,0,		temp_ds+temp_hr+lra*tan(ani),				unID,hroRDiagonal,1+128,hroR : unID=unID+1
						HOTSPOT lra+temphroR,0,	temp_ds+temp_hr+lra*tan(ani)+temphroR*tan(ani),	unID,hroRDiagonal,2	,hroR	: unID=unID+1
						HOTSPOT lra+RefPoint2,0,	temp_ds+temp_hr+lra*tan(ani)+InclRefPoint,		unID,hroRDiagonal,3	,hroR	: unID=unID+1

			ELSE			!Perpendicular Orientation
							!Measurement is always perpendicular to inclination in this case

				ROTy -ani

						!!! LENGTH OF RAILING

							HOTSPOT 0,0,ds+hr,unID,lrah,1+256 : unID=unID+1
							HOTSPOT lrah,0,ds+hr,unID,lrah,2 	: unID=unID+1
							HOTSPOT -1,0,ds+hr,unID,lrah,3 	: unID=unID+1

						IF LengthSize = 0 THEN
							HOTSPOT 0,0,0,unID,lrah,1+256 : unID=unID+1
							HOTSPOT lrah,0,0,unID,lrah,2 	: unID=unID+1
							HOTSPOT -1,0,0,unID,lrah,3 	: unID=unID+1

							HOTSPOT 0,0,ds,unID,lrah,1+256 : unID=unID+1
							HOTSPOT lrah,0,ds,unID,lrah,2 	: unID=unID+1
							HOTSPOT -1,0,ds,unID,lrah,3 	: unID=unID+1
						ENDIF


						!!!DISTANCE FROM FLOOR
						HOTSPOT templrah/2+LengthSize*hroLDiagonal,0,0,unID,ds,1+128 : unID=unID+1
						HOTSPOT templrah/2+LengthSize*hroLDiagonal,0,ds,unID,ds,2 : unID=unID+1
						HOTSPOT templrah/2+LengthSize*hroLDiagonal,0,-1,unID,ds,3 : unID=unID+1

						!!! HEIGHT of RAILING
						HOTSPOT templrah/2+LengthSize*hroLDiagonal,0,ds,unID,hr,1 : unID=unID+1
						HOTSPOT templrah/2+LengthSize*hroLDiagonal,0,ds+hr,unID,hr,2 : unID=unID+1
						HOTSPOT templrah/2+LengthSize*hroLDiagonal,0,-1,unID,hr,3 : unID=unID+1

						!!!POST BASE OVERHANG
						HOTSPOT LengthSize*hroLDiagonal,0,0,unID,gs_PostBaseOverhang,1 : unID=unID+1
						HOTSPOT LengthSize*hroLDiagonal,0,-gs_PostBaseOverhang,unID,gs_PostBaseOverhang,2 : unID=unID+1
						HOTSPOT LengthSize*hroLDiagonal,0,1,unID,gs_PostBaseOverhang,3 : unID=unID+1

						HOTSPOT LengthSize*hroLDiagonal+templrah,0,0,unID,gs_PostBaseOverhang,1 : unID=unID+1
						HOTSPOT LengthSize*hroLDiagonal+templrah,0,-gs_PostBaseOverhang,unID,gs_PostBaseOverhang,2 : unID=unID+1
						HOTSPOT LengthSize*hroLDiagonal+templrah,0,1,unID,gs_PostBaseOverhang,3 : unID=unID+1

						!!!OVERHANG OF RAILING
						HOTSPOT lrah,0,ds+hr,unID,hroRDiagonal,1+128 , hroR : unID=unID+1
						HOTSPOT lrah+temphroRDiag,0,ds+hr,unID,hroRDiagonal,2 , hroR 	: unID=unID+1
						HOTSPOT lrah+RefPoint2,0,ds+hr,unID,hroRDiagonal,3 , hroR 	: unID=unID+1

						HOTSPOT 0,0,ds+hr,unID,hroLDiagonal,1+128 , hroL: unID=unID+1
						HOTSPOT temphroLDiag,0,ds+hr,unID,hroLDiagonal,2, hroL 	: unID=unID+1
						HOTSPOT RefPoint1,0,ds+hr,unID,hroLDiagonal,3, hroL 	: unID=unID+1

					IF gs_detlevel_3D_m=2 THEN		!!DETAILED
						!!!TOP WIRE DISTANCE FROM HANDRAIL
						HOTSPOT LengthSize*hroLDiagonal,0,hr+ds-HandrailHgt,unID,sbh,1+128 : unID=unID+1
						HOTSPOT LengthSize*hroLDiagonal,0,hr+ds-HandrailHgt-sbh,unID,sbh,2 : unID=unID+1
						HOTSPOT LengthSize*hroLDiagonal,0,hr+ds-HandrailHgt+1,unID,sbh,3 : unID=unID+1

						HOTSPOT LengthSize*hroLDiagonal+templrah,0,hr+ds-HandrailHgt,unID,sbh,1+128 : unID=unID+1
						HOTSPOT LengthSize*hroLDiagonal+templrah,0,hr+ds-HandrailHgt-sbh,unID,sbh,2 : unID=unID+1
						HOTSPOT LengthSize*hroLDiagonal+templrah,0,hr+ds-HandrailHgt+1,unID,sbh,3 : unID=unID+1
					ENDIF

				DEL 1

			ENDIF

		ENDIF

!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** INCLINED AND CURVED *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!

		IF ABS(ani)>EPS and ptyp_m<>1 THEN

			!!!HOTSPOTS FOR GRAPHICAL EDITING

			IF ptyp_m=3 THEN
				!!!ROTATE
				HOTSPOT 0,rb,ds+lra*sin(ani),unID,ab,6 : unID=unID+1
				HOTSPOT 0,0,ds+lra*sin(ani),unID,ab,4+128 : unID=unID+1
				HOTSPOT rb*sin(ab),rb-rb*cos(ab),ds+lra*sin(ani),unID,ab,5 : unID=unID+1

				HOTSPOT 0,rb,ds+hr+lra*sin(ani),unID,ab,6 : unID=unID+1
				HOTSPOT 0,0,ds+hr+lra*sin(ani),unID,ab,4+128 : unID=unID+1
				HOTSPOT rb*sin(ab),rb-rb*cos(ab),ds+hr+lra*sin(ani),unID,ab,5 : unID=unID+1
			ENDIF

				!!!HEIGHT OF RAILING
				HOTSPOT 0,0,ds,unID,hr,1 : unID=unID+1
				HOTSPOT 0,0,ds+hr,unID,hr,2 : unID=unID+1
				HOTSPOT 0,0,-1,unID,hr,3 : unID=unID+1

				HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),ds+(lra/2)*sin(ani),unID,hr,1 : unID=unID+1
				HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),ds+hr+(lra/2)*sin(ani),unID,hr,2 : unID=unID+1
				HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),-1,unID,hr,3 : unID=unID+1

				!!!DISTANCE FROM FLOOR
				HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),(lra/2)*sin(ani),unID,ds,1 : unID=unID+1
				HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),ds+(lra/2)*sin(ani),unID,ds,2 : unID=unID+1
				HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),-1,unID,ds,3 : unID=unID+1

				HOTSPOT 0,0,0,unID,ds,1 : unID=unID+1
				HOTSPOT 0,0,ds,unID,ds,2 : unID=unID+1
				HOTSPOT 0,0,-1,unID,ds,3 : unID=unID+1

				!!!FIX HOTSPOT AT FLOOR
				HOTSPOT rb*sin(ab),rb-rb*cos(ab),0+lra*sin(ani), unID : unID=unID+1

			IF ptyp_m=2 THEN
				!!!HEIGHT OF RAILING
				HOTSPOT rb*sin(ab),rb-rb*cos(ab),ds+lra*sin(ani),unID,hr,1 : unID=unID+1
				HOTSPOT rb*sin(ab),rb-rb*cos(ab),ds+hr+lra*sin(ani),unID,hr,2 : unID=unID+1
				HOTSPOT rb*sin(ab),rb-rb*cos(ab),-1,unID,hr,3 : unID=unID+1

				!!!DISTANCE FROM FLOOR
				HOTSPOT rb*sin(ab),rb-rb*cos(ab),lra*sin(ani),unID,ds,1+128 : unID=unID+1
				HOTSPOT rb*sin(ab),rb-rb*cos(ab),ds+lra*sin(ani),unID,ds,2 : unID=unID+1
				HOTSPOT rb*sin(ab),rb-rb*cos(ab),-1,unID,ds,3 : unID=unID+1
			ENDIF

			IF gs_detlevel_3D_m=2 THEN		!!DETAILED
				!!!TOP WIRE DISTANCE FROM HANDRAIL
				HOTSPOT 0,0,hr+ds-HandrailHgt,unID,sbh,1+128 : unID=unID+1
				HOTSPOT 0,0,hr+ds-HandrailHgt-sbh,unID,sbh,2 : unID=unID+1
				HOTSPOT 0,0,hr+ds-HandrailHgt+1,unID,sbh,3 : unID=unID+1

				HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),hr+ds-HandrailHgt+(lra/2)*sin(ani),unID,sbh,1+128 : unID=unID+1
				HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),hr+ds-HandrailHgt+(lra/2)*sin(ani)-sbh,unID,sbh,2 : unID=unID+1
				HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),hr+ds-HandrailHgt+(lra/2)*sin(ani)+1,unID,sbh,3 : unID=unID+1

				HOTSPOT rb*sin(ab),rb-rb*cos(ab),hr+ds-HandrailHgt+lra*sin(ani),unID,sbh,1+128 : unID=unID+1
				HOTSPOT rb*sin(ab),rb-rb*cos(ab),hr+ds-HandrailHgt+lra*sin(ani)-sbh,unID,sbh,2 : unID=unID+1
				HOTSPOT rb*sin(ab),rb-rb*cos(ab),hr+ds-HandrailHgt+lra*sin(ani)+1,unID,sbh,3 : unID=unID+1
			ENDIF

				!!!POST BASE OVERHANG
				HOTSPOT 0,0,0,unID,gs_PostBaseOverhang,1+128 : unID=unID+1
				HOTSPOT 0,0,-gs_PostBaseOverhang,unID,gs_PostBaseOverhang,2 : unID=unID+1
				HOTSPOT 0,0,1,unID,gs_PostBaseOverhang,3 : unID=unID+1

				HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),(lra/2)*sin(ani),unID,gs_PostBaseOverhang,1+128 : unID=unID+1
				HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),(lra/2)*sin(ani)-gs_PostBaseOverhang,unID,gs_PostBaseOverhang,2 : unID=unID+1
				HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),(lra/2)*sin(ani)+1,unID,gs_PostBaseOverhang,3 : unID=unID+1

				HOTSPOT rb*sin(ab),rb-rb*cos(ab),lra*sin(ani),unID,gs_PostBaseOverhang,1+128 : unID=unID+1
				HOTSPOT rb*sin(ab),rb-rb*cos(ab),lra*sin(ani)-gs_PostBaseOverhang,unID,gs_PostBaseOverhang,2 : unID=unID+1
				HOTSPOT rb*sin(ab),rb-rb*cos(ab),lra*sin(ani)+1,unID,gs_PostBaseOverhang,3 : unID=unID+1


		ENDIF

	ENDIF
end
]]>
</Script_3D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_2D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
call "railSymbol2D_m" parameters all	bEnable2DPosts		= 1,
										iHandRailStyle		= hrt_m,
										handRailDiameter	= hrd,
										handRailWidth		= hrw,
										bBreakRailLine		= 0,
										bPostNoCalculation	= 0
]]>
</Script_2D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_1D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
!Rail Wired

EPS=0.0001
PostThk=0.004 		!!Post Element Thickness


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

dpost=pw/2


!!!!!! Railing Length

IF LengthSize = 1 THEN
	lra2=(lra - (hroL + hroR))
	lrah2=(lrah - (hroLDiagonal + hroRDiagonal))
	templra=lra2
	templrah=lrah2
	XStartPoslra=hrol
	ZStartPoslra=hrol*tan(ani)
	XStartPoslrah=hroLDiagonal
ELSE
	templra=lra
	templrah=lrah
	XStartPoslra=0
	ZStartPoslra=0
	XStartPoslrah=0
ENDIF

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!PARAMETER INPUT CALCULATION!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

IF ptyp_m=1 THEN
	HIDEPARAMETER "ab"
	HIDEPARAMETER "rb"
	HIDEPARAMETER "res"
ENDIF

IF ptyp_m=2 THEN
	IF ABS(rb)>EPS THEN
		PARAMETERS ab=(lra*180)/(rb*pi)
		LOCK "ab"
	ENDIF
ENDIF

IF ptyp_m=3 THEN
	PARAMETERS lra=(rb*pi*ab)/180
	LOCK "lra"
ENDIF



!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!! *** POST SPACING CALCULATION FOR STRAIGHT AND CURVED RAILS

	IF rom_m=2 AND rmm_m=2 THEN
		distpost=templrah/(np-1)
		ELSE
		distpost=templra/(np-1)
	ENDIF

	IF ABS(ab-360)<EPS and ABS(ani)<EPS THEN
		anglepost=ab/np
		else
		anglepost=ab/(np-1)
	endif

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!! *** POST SPACING CALCULATION FOR STRAIGHT AND CURVED RAILS

!!if pt_m=1 then
!!	dpost=pw/2
!!	IF ABS(rb)>EPS THEN		!!rb<>0
!!		dpostangle=180*(pw/2)/(rb*pi)
!!		endif
!!		else
!!		dpost=pd/2
!!		IF ABS(rb)>EPS THEN		!!rb<>0
!!		dpostangle=180*(pd/2)/(rb*pi)
!!	endif
!!endif

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!! *** WIRE SPACING CALCULATION


if hrt_m=1 then
	if bt_m=1 then
	dw=bw+(hr-hrh-sbh-(nb*bw))/(nb-1)
	else
	dw=bd+(hr-hrh-sbh-(nb*bd))/(nb-1)
	endif
else
	if bt_m=1 then
	dw=bw+(hr-hrd-sbh-(nb*bw))/(nb-1)
	else
	dw=bd+(hr-hrd-sbh-(nb*bd))/(nb-1)
	endif
endif


!ADDITIONAL CALCULATION FOR CURVED AND INCLINED RAILS!!

IF ptyp_m<>1 and ABS(ab)>EPS or ABS(rb)>EPS THEN

!General data
	alphahroL=(hroL*180)/(rb*pi) 			!Overhung angle
	alphahroR=(hroR*180)/(rb*pi) 			!Overhung angle
	deltaz=lra*sin(ani)						!Total height to rise

!For segment points
nalphaincl=int(ab/(360/res))+1 		!number of segment points without overhung
alphaincl=ab/nalphaincl  			!angle between segment points


nalphahroL=int(alphahroL/alphaincl)	!number of segment points at handrail overhung
nalphahroR=int(alphahroR/alphaincl)	!number of segment points at handrail overhung
deltazincl=deltaz/nalphaincl 		!vertical step between segment points



!For posts
deltazpost=deltaz/(np-1)			!vertical step between posts

endif
]]>
</Script_1D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_PR SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_PR>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_UI SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_UI>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Comment SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Comment>

<Picture MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="0" length_in_bytes="2253" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D494844520000007F0000
	007F0803000000F163ED21000000CF504C5445FFFFFF919093ECECECABAAACB2
	9A5CB2B1B3D4D4D4918F92B49C62A09EA1C5A35BC49B528F8D909E9DA0F0F0EF
	B9A36CC4984CCBCACB8C8A8DAE9253F0EEEB616062B3914EAD8B4BDFDFE0C8B8
	8BECE9D8BDA974CCAB63B28D4BD0AC63BCA05BD2B26CB0AEB17B7A7DAFADB0E8
	D3B1C0BFC0D1C39DD3B373BFBEC0E5DAC4D5C9A5E0DFE0D9CEB1CBBB94DED5BC
	D9C289E8D3ABB48B54D4D2CDD4B983EAE2CEE4CBA7E0CB9DC1AC7CA89B819893
	8CCFCFD0AC8E52988965897C617E704EC2B07F6E6D707F7E80807E8187764DC9
	BFA3D55270D6000007AF49444154785EED59C59AF33810B4C88C418661C69F71
	F1FD9F6925C74A4B769CE4CB180E3BB9E9546A575577A963B4F3C3469BBFC9D8
	7EE8B5861E3ED836EDD29B96E06FA75DBBFB837AE7ED7CFAA9CDE169EC5EB541
	001E4736A5F379BC7A6E83F85BBBCBD1BDD8FD1CB600FF182D6977E8C5F153AF
	15CF518E4EDD78F5B10DE21FA26E773874E378DC42F1E12315C577DD987E23CD
	C3DF4429FAD29BFFEA5BA479E2233A180C97AE7B7ED23F6D1ABF776947DDE180
	EBEEB267B07ED3F5DF4F85EE06CBF80F213B5E7F873449FC98173F9853D74D3D
	27EA47A4D1666B0F39BAF7690D6012D41CFFE12515AD7EE0BA1FC2F5750842CD
	F1FF1845D17030776759BFC18C104C9AD2FF24A25197F3BEB8CA52C62B2289D1
	94FEF19872CB53EAAECE0DF9E9132CF4D744FDE125971DA59EBBFA2C3F3D2202
	BD99FA6F38F1F485C633396539BA9901B0DAFD3FF9C38E28A5037795116F72E2
	4309403AE0FF9AA6AC408FBDD5F3C6738CA383FDEBACBF773F9DDA1C3D7633E2
	C38C78A90286A0FFD5D46C45F132D926A9E724F50E31EBD4FFE4C14E55EF2DA4
	E750EA395041ADFA7F98DA76AAFA4FD2F196241EEC5F5BFDF736275E58FE035E
	03261D20DE608899468DFEFF38E5BA7BA19E77F551128F5E37004947DA1FEAAF
	385E45F60F3A13C44B9BB10DC09DAA8284A0FE3752F593860E69D79B799278A6
	A063A21F50FFD4AF14FF51F03EA0B3D995245E75FC85A5AAC027B8E2FC339946
	B6DDA5AEBBD8345B2701E29163E65440AAECFF786CA7E88BC56769338741F128
	903C402FA8B0FEF03E4A1FF28B99DD93F412AC128F157456B5FE6FC4971763CE
	FE6A659E039BE104390AF1A082AAEA9F4CD7CDD69DFDEAFB28231E03F1485181
	454005A45305FFF8B66B5351FCECFC951764417F05CFC1C8BD56793885FADF40
	BCE07DE02D9E42C3E4F88895124F14341C205681FE6FBEA4F966EEAE84EC043E
	D84C5781C108D2EDFF76FEF15880D33816C956E24B88BCFD8972E804A6F166FF
	8797027DE0C5AE8C570CFD89FC6D9E337387A4F776FDDF47111D0C39FA534F4E
	59212824AF02807080C600FE3FDA73CBE17000FBA3842053F0EF4B9B95A8C00A
	B03C90D363E77F4F103FEC0E5CF759F9A6927FD3D1B25650A60274ACFF6F9702
	9EBADE8750FBC023E17F7CA27BEE42235E3D1C997F1F45B0E54B8CCDCE961162
	82FE25BDFB54C08E7BFF4CA61C7E385F7AB37323CCC22C330CC04F0AC4C301A2
	80838FD27F4F3C6952DDDDF620CC82AF393E108F4C9CEB0520557120A0FFC33D
	670BF44DB265E86CA2D80CF04B83170442C8BF87136FD3B99873936DDF34204C
	F63F9CF83B54705CFE9DAC97F594132F0718D1E49C6CFAAF79980A083ABC7E7C
	6947EBFDD1A554704797B3D4DFFA2A07A8209DBF2707E66A4E3CEFF5EE22737C
	C820D3C04663EBFC354A7B01D71F22874DD92547A7DE4279CB9ADA5B16FCA725
	EED228C0D009E6FA87FAF73C69287DE1E8E7F93E062AD83A7F8332FBAF0F50FF
	FEFD11FFF49FB6C518D251B35600F8B92140F403E4CF031C4F29E553760D13EA
	3146ADEACC22A27EC9F5997AAFE24438A8FEC9173B4AD1AFC2306B5D440DB38E
	1AAF8829FD871951D4A95F52107FE0FEAB3716C543BC2AC698CDE12E55819CBF
	EA94FDAEAAE05AD72DDAF9FD6F6DB1C5F062EF59EE8F8A615677568A5FB099A1
	AB00048976F5BF57012E3638B39B6D9E03FBC3A1387FCFE0507C16843BFAFF44
	BC26E94BECCDBEFA58DEBD2CCC0A7A01DFDC6E7FA6DF8BE15DFDFFDFB478CF75
	7FF67D7F24AE4B0AF955DACC2A99BF891398BB7B4179FD3FFFF9413DDB7D0A53
	4245B732CB630C1CACBF36F8A63E72AD9C0AF6E89FFDFEEDA58B43810FFED9FD
	B0458C6DFCCF149BE1134D050E3BE0FD8BBF52E1B9143FC8B72E1860B98D86F4
	3F43E46E3BF150CB61F35F1354DE59170ABD42DB19BE764938E83B18E07F2F7E
	0609B97A4BBCBA86F9AB856CEDE0402F00FEF7E2FBB8483C1C60AF25F19959EE
	397900FEF7E35B02DF0C48A90AE0609EF6BF213D1748F46BE52AC0C729505886
	6F59A3C200D3BFA9BAD1E823BF483C04C2C37F808FCCC4574363B90A7C65FEEA
	2A38021DF80F50798CC15A2F80F98BC848CF5A47E35B50624E0541A117087C2B
	7F49B8CA71F83E2E7C7AC834B0D792FAEF60E4A89784D7F7B1F5E32D6622B9FE
	0AFEB34ADE5DC7F33FCAE45CAA0247C9BF56273772DF8C8F30F4B12D31C6519E
	340CF1FAF54B56803FCA0DB0E0A26CBBE9F0854E862F555001BE16A2E4688330
	0B5C93A49FD58F1DC4F8F4AE045FDB1FED8E02827F8EDF831D7715F8407C4105
	3AD719FE77E8BC95E0DFC9AFAD0F816BB88ACC3402DF874B56593FBE508837F2
	510083FFB444518DFE05D7C429BEBB4005307F2DDFA81A1FE7B2164165F18A40
	FEAE0EDF37B530CB766C3789D05FE5F5ABB334B1766D3745FFAF1EFF1AB80E76
	ECB5EEA4FF2AE77F3BF1415105B5D4DF81F9AB0CD62DBDA0AEFA47697E0DB491
	7B769753417DF83E8618035BC42D2AA88D7F4C4083A57F6ED4C5BFEF93DCFC35
	F26FD97AEBB7C877402704E7936DEDF563B03F61AA0A8AF1CAFC9BE13AF49765
	1A7D085488B43FFFC2EB1B361ACDE023ACBF6561BBD958FD58CB5AF0EE6AA67E
	93F890B5B083E0D00C3E3ADBD8AC072A680E3FD176DC8D4183FF60CA5E3489AD
	CF7F5C747C93FE87B76C1BF52B1BA016F81FA5DBCDD6F003707C2BF8407C5BFC
	B78B3F32FED7F55B6DD4FFCEFF7BFDEFF5BFD78F1B8E1DFF0184A68ED9F997B5
	560000000049454E44AE426082
	]]>
</Picture>

<CalledMacros SectVersion="2" SectionFlags="0" SubIdent="0">
	<Macro>
		<MName><![CDATA["railSymbol2D_m"]]></MName>
		<MainGUID>C5C904E6-1706-4CD1-BC8D-6C294B5B40F7</MainGUID>
	</Macro>
</CalledMacros>

<Copyright SectVersion="1" SectionFlags="0" SubIdent="0">
	<Author>GRAPHISOFT</Author>
	<License>
		<Type>CC BY-ND</Type>
		<Version>3.0</Version>
	</License>
</Copyright>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_FWM SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_FWM>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_BWM SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_BWM>

<Keywords SectVersion="1" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Keywords>

</Symbol>
