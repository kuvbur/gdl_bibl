<?xml version="1.0" encoding="UTF-8"?>
<Symbol IsArchivable="true" IsPlaceable="false" MainGUID="61BB99B7-1F59-442A-855F-77BAED09FAD2" MigrationValue="Normal" Owner="1196638531" Signature="1196644685" Version="43">
<Ancestry SectVersion="1" SectionFlags="0" SubIdent="0" Template="false">
	<MainGUID>F938E33A-329D-4A36-BE3E-85E126820996</MainGUID>
	<MainGUID>103E8D2C-8230-42E1-9597-46F84CCE28C0</MainGUID>
	<MainGUID>784EAEA1-5041-4AA6-B6F4-EF263A891EE7</MainGUID>
	<MainGUID>09BEB35E-7BF8-448C-B408-AC04D159B0D1</MainGUID>
</Ancestry>

<ParamSection SectVersion="22" SectionFlags="0" SubIdent="0">
	<ParamSectHeader>
		<AutoHotspots>false</AutoHotspots>
		<StatBits>
			<STBit_FixSize/>
		</StatBits>
		<WDLeftFrame>0</WDLeftFrame>
		<WDRightFrame>0</WDRightFrame>
		<WDTopFrame>0</WDTopFrame>
		<WDBotFrame>0</WDBotFrame>
		<LayFlags>65535</LayFlags>
		<WDMirrorThickness>0</WDMirrorThickness>
		<WDWallInset>0</WDWallInset>
	</ParamSectHeader>
	<Parameters>
		<Length Name="A">
			<Description><![CDATA["Dimension 1"]]></Description>
			<Fix/>
			<Value>1.8</Value>
		</Length>
		<Length Name="B">
			<Description><![CDATA["Dimension 2"]]></Description>
			<Fix/>
			<Value>0.05</Value>
		</Length>
		<Length Name="ZZYZX">
			<Description><![CDATA["Height"]]></Description>
			<Fix/>
			<Value>0.9</Value>
		</Length>
		<Integer Name="gs_detlevel_3D_m">
			<Description><![CDATA["3D"]]></Description>
			<Value>2</Value>
		</Integer>
		<Boolean Name="cfs">
			<Description><![CDATA["Called as Macro from Stair"]]></Description>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>

		<!-- RailBalust_sp0: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="RailBalust_sp0">
			<Description><![CDATA["General Dimensions"]]></Description>
		</Title>
		<Integer Name="ptyp_m">
			<Description><![CDATA["Rail and Parameter Input Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Angle Name="ani">
			<Description><![CDATA["Inclination Angle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Angle>
		<Integer Name="rom_m">
			<Description><![CDATA["Rail Orientation Method"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="rmm_m">
			<Description><![CDATA["Rail Measurement Method"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Boolean Name="LengthSize">
			<Description><![CDATA["'A' Size=Handrail Length"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="lra">
			<Description><![CDATA["Horizontal Length of Railing"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1.5</Value>
		</Length>
		<Length Name="lrah">
			<Description><![CDATA["Length of Railing"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1.5</Value>
		</Length>
		<Length Name="hr">
			<Description><![CDATA["Height of Railing"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.75</Value>
		</Length>
		<Length Name="hrPerp">
			<Description><![CDATA["Height of Railing"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.75</Value>
		</Length>
		<Angle Name="ab">
			<Description><![CDATA["Angle of Bending"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>85.9436692696</Value>
		</Angle>
		<Length Name="rb">
			<Description><![CDATA["Radius of Bending"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="ds">
			<Description><![CDATA["Distance from Slab/Stair"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.15</Value>
		</Length>
		<Length Name="dsPerp">
			<Description><![CDATA["Distance from Slab/Stair"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.15</Value>
		</Length>
		<Angle Name="gs_AngleL">
			<Description><![CDATA["Left End Cutting Angle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>90</Value>
		</Angle>
		<Angle Name="gs_AngleR">
			<Description><![CDATA["Right End Cutting Angle"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>90</Value>
		</Angle>

		<!-- RailBalust_sp1: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="RailBalust_sp1">
			<Description><![CDATA["Structural Dimensions"]]></Description>
		</Title>
		<Integer Name="hrt_m">
			<Description><![CDATA["Handrail Style"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Length Name="hrd">
			<Description><![CDATA["Handrail Diameter"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="hrw">
			<Description><![CDATA["Handrail Width"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.05</Value>
		</Length>
		<Length Name="hrh">
			<Description><![CDATA["Handrail Height"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.025</Value>
		</Length>
		<Length Name="hro">
			<Description><![CDATA["Handrail Overhang"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Length Name="hroL">
			<Description><![CDATA["Handrail Overhang - Left"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.15</Value>
		</Length>
		<Length Name="hroR">
			<Description><![CDATA["Handrail Overhang - Right"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.15</Value>
		</Length>
		<Length Name="hroLDiagonal">
			<Description><![CDATA["Handrail Overhang - Left"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.15</Value>
		</Length>
		<Length Name="hroRDiagonal">
			<Description><![CDATA["Handrail Overhang - Right"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0.15</Value>
		</Length>
		<Integer Name="pt_m">
			<Description><![CDATA["Balustrade Style"]]></Description>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_BoldName/>
			</Flags>
			<Value>1</Value>
		</Integer>
		<Integer Name="pit_m">
			<Description><![CDATA["Parameter Input Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Integer Name="nbt">
			<Description><![CDATA["No. of Balusters"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</Integer>
		<Length Name="dp">
			<Description><![CDATA["Preferred Distance"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0.2</Value>
		</Length>

		<!-- RailWooden_sp0: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="RailWooden_sp0">
			<Description><![CDATA["3D Representation"]]></Description>
		</Title>
		<Integer Name="res">
			<Description><![CDATA["Rail Arc Resolution"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>42</Value>
		</Integer>
		<Integer Name="rescs">
			<Description><![CDATA["Cross Section Resolution"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>12</Value>
		</Integer>
		<Boolean Name="gs_shadow">
			<Description><![CDATA["Shadow"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Boolean Name="AC_show2DHotspotsIn3D">
			<Description><![CDATA["Show 2D Hotspots in 3D"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Length Name="ac_bottomlevel">
			<Description><![CDATA["Bottom Level"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="ac_toplevel">
			<Description><![CDATA["Top Level"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>

		<!-- gs_2D_representation: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_2D_representation">
			<Description><![CDATA["2D Representation"]]></Description>
			<Fix/>
		</Title>
		<PenColor Name="gs_cont_pen">
			<Description><![CDATA["Contour Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>2</Value>
		</PenColor>
		<FillPattern Name="gs_fill_type">
			<Description><![CDATA["Fill Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>65</Value>
		</FillPattern>
		<PenColor Name="gs_fill_pen">
			<Description><![CDATA["Fill Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>91</Value>
		</PenColor>
		<PenColor Name="gs_back_pen">
			<Description><![CDATA["Fill Background Pen"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>91</Value>
		</PenColor>
		<Boolean Name="bPostSymbol">
			<Description><![CDATA["Post Symbol"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="sa">
			<Description><![CDATA["Show Axis"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<LineType Name="al">
			<Description><![CDATA["Axis Line Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>6</Value>
		</LineType>
		<PenColor Name="gs_RailAxisPen">
			<Description><![CDATA["Axis Line Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>16</Value>
		</PenColor>
		<Integer Name="iPostSymbolType">
			<Description><![CDATA["Post Symbol Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</Integer>
		<LineType Name="postLineType">
			<Description><![CDATA["Post Line Type"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>1</Value>
		</LineType>
		<PenColor Name="postPen">
			<Description><![CDATA["Post Line Pen"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>16</Value>
		</PenColor>

		<!-- RailBalust_sp2: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="RailBalust_sp2">
			<Description><![CDATA["Surfaces"]]></Description>
		</Title>
		<Material Name="fmat">
			<Description><![CDATA["Handrail"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>
		<Material Name="pmat">
			<Description><![CDATA["Baluster"]]></Description>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>15</Value>
		</Material>

		<!-- gs_list: PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK ===== PARAMETER BLOCK -->

		<Title Name="gs_list">
			<Description><![CDATA["Parameters for Listing"]]></Description>
			<Fix/>
		</Title>
		<RealNum Name="gs_list_cost">
			<Description><![CDATA["Cost"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="gs_list_manufacturer">
			<Description><![CDATA["Manufacturer"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_note">
			<Description><![CDATA["Note/Remarks"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_location">
			<Description><![CDATA["Location"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_accessories">
			<Description><![CDATA["Accessories"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_Type">
			<Description><![CDATA["Group Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["Другой"]]></Value>
		</String>
		<Integer Name="iFMType">
			<Description><![CDATA["Group Type"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
				<ParFlg_Hidden/>
			</Flags>
			<Value>25</Value>
		</Integer>
		<String Name="FM_InventoryNumber">
			<Description><![CDATA["Inventory No."]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_SerialNumber">
			<Description><![CDATA["Serial No."]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="FM_ProductionYear">
			<Description><![CDATA["Production Year"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<RealNum Name="FM_ObjectWeight">
			<Description><![CDATA["Object Weight"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value>0</Value>
		</RealNum>
		<String Name="FM_ObjectWeightUnit">
			<Description><![CDATA["Object Weight Unit"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA["кг"]]></Value>
		</String>
		<String Name="gs_list_custom1">
			<Description><![CDATA["User Defined 1"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom2">
			<Description><![CDATA["User Defined 2"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom3">
			<Description><![CDATA["User Defined 3"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom4">
			<Description><![CDATA["User Defined 4"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
		<String Name="gs_list_custom5">
			<Description><![CDATA["User Defined 5"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Child/>
			</Flags>
			<Value><![CDATA[""]]></Value>
		</String>
	</Parameters>
</ParamSection>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_VL SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
! GENERAL PARAMETERS
values "gs_detlevel_3D_m" 2,1,0


! GENERAL RAIL GEOMETRY PARAMETERS
values "ptyp_m" 1,2,3			! Straight, Curve Length and Radius, Angle and Radius


IF ptyp_m<>1 OR ABS(ani)<EPS  THEN
	VALUES "rom_m" 1
	VALUES "rmm_m" 1
	HIDEPARAMETER "lrah"
ELSE
	VALUES "rom_m"  1,2
	IF rom_m=2 then
		VALUES "rmm_m" 2
	ELSE
		VALUES "rmm_m" 1,2
	ENDIF
ENDIF


IF ptyp_m<>1 THEN	HIDEPARAMETER "LengthSize"

IF LengthSize = 0 OR ptyp_m<>1 THEN
	VALUES "a" lra+hroL+hroR
ELSE
	VALUES "a" lra
ENDIF
VALUES "zzyzx" ds+hr


! STRUCTURAL DIMENSION PARAMETERS
VALUES "hrt_m" 1,2	! Rectangular, Round
IF hrt_m=2 then
	HIDEPARAMETER "hrw","hrh"
ELSE
	HIDEPARAMETER "hrd"
ENDIF


IF ptyp_m<>1 then
	IF hrt_m=1 then VALUES "b" hrw
	IF hrt_m=2 then VALUES "b" hrd
	lock "a","b","zzyzx"
ELSE
	IF hrt_m=1 then
		IF GLOB_MODPAR_NAME = "B" THEN PARAMETERS hrw=B
		IF GLOB_MODPAR_NAME = "hrw" THEN PARAMETERS B=hrw
		IF GLOB_MODPAR_NAME = "hrt_m" THEN PARAMETERS hrw=B
	ELSE
		IF GLOB_MODPAR_NAME = "B" THEN PARAMETERS hrd=B
		IF GLOB_MODPAR_NAME = "hrd" THEN PARAMETERS B=hrd
		IF GLOB_MODPAR_NAME = "hrt_m" THEN PARAMETERS hrd=B
	ENDIF
	lock "a","zzyzx"
ENDIF


VALUES "pt_m" 1,2,3
VALUES "pit_m" 1,2	! No. of Bars, Distance between Bars
IF pit_m=1 THEN
	HIDEPARAMETER "dp"
ELSE
	HIDEPARAMETER "nbt"
ENDIF


IF ptyp_m<>1 OR rom_m<>1 THEN
	LOCK "gs_AngleL"
	LOCK "gs_AngleR"
ENDIF


if gs_cont_pen=0 then parameters gs_cont_pen=2
if gs_fill_pen=0 then parameters gs_fill_pen=91


!PARAMETER RANGE DEFINITION
VALUES "res" RANGE[3,)
VALUES "rescs" RANGE[3,)

VALUES "ani" range(-90, 0), range (0, 90)
if LengthSize then
	VALUES "lra" 	RANGE(dp+hroL+hroR,)
	VALUES "lrah" 	RANGE((dp+hroL+hroR)/cos(ani),)
else
	VALUES "lra" 	RANGE(dp,)
	VALUES "lrah" 	RANGE(dp/cos(ani),)
endif
VALUES "hr" RANGE(0,)

VALUES "gs_AngleL" 	RANGE(0,180)
VALUES "gs_AngleR" 	RANGE(0,180)

VALUES "hro"	RANGE [0,)

IF LengthSize=1 OR ABS(gs_AngleL-90)<EPS THEN		!! gs_AngleL=90
	VALUES "hroL"	RANGE [dpost,)
ELSE
	VALUES "hroL"	RANGE [0,)
ENDIF

IF LengthSize=1 OR ABS(gs_AngleR-90)<EPS THEN		!! gs_AngleR=90
	VALUES "hroR"	RANGE [dpost,)
ELSE
	VALUES "hroR"	RANGE [0,)
ENDIF

VALUES "hrd" RANGE(0,)
VALUES "hrw" RANGE(0,)
VALUES "hrh" RANGE(0,)
VALUES "dp" RANGE[0.05,lra]
VALUES "nbt" RANGE[2,lra/0.05]

VALUES "B" RANGE(0,)


IF ABS(ani)<EPS THEN
	VALUES "ab" RANGE (0,360]
	LOCK "rom_m","rmm_m"
ELSE
	VALUES "ab" RANGE (0,)
ENDIF

! Distance from Slab/Stair
if GLOB_MODPAR_NAME = "dsPerp" then
	ds = dsPerp * cos(ani)
	parameters ds = ds
else
	dsPerp = ds / cos(ani)
	parameters dsPerp = dsPerp
endif

! Height of Railing
if GLOB_MODPAR_NAME = "hrPerp" then
	hr = hrPerp * cos(ani)
	parameters hr = hr
else
	hrPerp = hr / cos(ani)
	parameters hrPerp = hrPerp
endif

! Left Overhang of Railing
if GLOB_MODPAR_NAME = "hroLDiagonal" then
	hroL = hroLDiagonal * cos(ani)
	parameters hroL = hroL
else
	hroLDiagonal = hroL / cos(ani)
	parameters hroLDiagonal = hroLDiagonal
endif

! Right Overhang of Railing
if GLOB_MODPAR_NAME = "hroRDiagonal" then
	hroR = hroRDiagonal * cos(ani)
	parameters hroR = hroR
else
	hroRDiagonal = hroR / cos(ani)
	parameters hroRDiagonal = hroRDiagonal
endif

! COMPABILITY OF OVERHANG OF RAILING
EPS=0.00001
IF GLOB_MODPAR_NAME = "hroL" OR GLOB_MODPAR_NAME = "hroR" then
	parameters hro = 0
ELSE
	if abs(hro) > EPS then
		parameters 	hroL = hro,
					hroR = hro,
					hroLDiagonal=hro/cos(ani),
					hroRDiagonal=hro/cos(ani)
	endif
ENDIF
]]>
</Script_VL>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_3D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
IF gs_detlevel_3D_m=0 THEN end

IF gs_shadow=0 THEN SHADOW OFF

templra = max(templra, EPS)
PEN gs_cont_pen
unID=1

IF hrt_m=1 THEN		!!! HANDRAIL WIDTH
!!	fth=0.05		!!!=Balusters Width
	HandrailWidth=hrw
ELSE
!!	fth=0.05
	HandrailWidth=hrd
ENDIF

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** SIMPLE 3D *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


!!!CALCULATION FOR CONNECTING ANGLE

XPosL0=(HandrailWidth/2)/tan(gs_AngleL)
XPosR0=(HandrailWidth/2)/tan(gs_AngleR)

XPosL=ABS((HandrailWidth/2)/tan(gs_AngleL))
XPosR=ABS((HandrailWidth/2)/tan(gs_AngleR))
YPosL=(XPosL*tan(ani))
YPosR=(XPosR*tan(ani))


IF gs_detlevel_3D_m=1 THEN		!!Simple

	MATERIAL pmat
	RESOL res


	!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** STRAIGHT *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

		IF ABS(ani)<EPS and ptyp_m=1 THEN		!!ptyp=Straight

			ADDx XStartPoslra
			ADDz ds
				PRISM_ 5,hr,
					XPosL0,fth/2,15,
					-XPosL0,-fth/2,15,
					templra+XPosR0,-fth/2,15,
					templra-XPosR0,fth/2,15,
					XPosL0,fth/2,-1
			DEL 2

		ENDIF

	!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** STRAIGHT CURVED *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

		IF ABS(ani)<EPS and ptyp_m<>1 THEN

		!!!!FRAME

			IF ab<360 THEN
					ADDz ds
					PRISM_ 10,hr,
						0,fth/2,15,
						0,-fth/2+0.00005,15,
						0,-fth/2,79,
						1,0,800,
						(rb+(fth/2))*sin(ab),rb-(rb+(fth/2))*cos(ab),1015,
						(rb-(fth/2)+0.00005)*sin(ab),rb-(rb-(fth/2)+0.00005)*cos(ab),15,
						(rb-(fth/2))*sin(ab),rb-(rb-(fth/2))*cos(ab),79,
						-cos(ab),-sin(ab),800,
						0,fth/2,1015,
						0,fth/2,-1
					DEL 1

			ELSE	!!!ANGLE=360

				ADDz ds
					PRISM_ 12,hr,
						0,-fth/2,79,
						1,0,800,
						0,2*rb+fth/2,1079,
						-1,0,800,
						0,-fth/2,1079,
						0,-fth/2,-1,

						0,fth/2,79,
						1,0,800,
						0,2*rb-fth/2,1079,
						-1,0,800,
						0,fth/2,1079,
						0,fth/2,-1
				DEL 1

			ENDIF
		ENDIF

	!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** STRAIGHT INCLINED *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

		IF ABS(ani)>EPS and ptyp_m=1 THEN			!!ptyp=Straight

			IF rom_m=1 THEN					!!Vertical Orientation

				ADD XStartPoslra,0,ZStartPoslra

					IF rmm_m=1 THEN			!!Vertical Measurement
						temp_ds=ds
						temp_hr=hr
					ELSE					!!Perpendicular Measurement
						temp_ds=dsPerp
						temp_hr=hrPerp
					ENDIF


					ROTz -90+gs_AngleL		!! CONNECTING ANGLE
					ROTy -90
						CUTPLANE
					DEL 2

					ADDx templra
					ROTz 90-gs_AngleR
					ROTy 90
						CUTPLANE
					DEL 3


						ROTx 90
						ADDz -fth/2

							PRISM_ 5,fth,
								-XPosL,temp_ds-YPosL,15,
								templra+XPosR,temp_ds+templra*tan(ani)+YPosR,15,
								templra+XPosR,temp_ds+temp_hr+templra*tan(ani)+YPosR,15,
								-XPosL,temp_ds+temp_hr-YPosL,15,
								-XPosL,temp_ds-YPosL,-1

						DEL 2

					CUTEND
					CUTEND
				DEL 1

			ELSE						!Perpendicular Orientation
										!Measurement is always perpendicular to inclination in this case

				ROTy -ani
				ADDx XStartPoslra

					ROTx 90
					ADDz -fth/2
						!!FRAME

						PRISM_ 5,fth,
						0,ds,15,
						templrah,ds,15,
						templrah,ds+hr,15,
						0,ds+hr,15,
						0,ds,-1
					DEL 2

				DEL 2

			ENDIF


		ENDIF


	!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** INCLINED AND CURVED *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!

		IF ABS(ani)>EPS and ptyp_m<>1 THEN

			!!!!FRAME

			alphai=-alphaincl
			deltazi=-deltazincl
			for i=1 to nalphaincl+3 step 1
			put rb*sin(alphai),rb-rb*cos(alphai),ds+deltazi
			alphai=alphai+alphaincl
			deltazi=deltazi+deltazincl
			NEXT i

			TUBEA 5,nalphaincl+3,1+2+16+32,
				-fth/2,0,0,
				fth/2,0,0,
				fth/2,hr,0,
				-fth/2,hr,0,
				-fth/2,0,-1,
				get (nsp)

		ENDIF


ENDIF		!!END of SIMPLE 3D!!



!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** DETAILED 3D *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


IF gs_detlevel_3D_m=2 THEN


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** STRAIGHT *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

	IF ABS(ani)<EPS and ptyp_m=1 THEN

	ADDX XStartPoslra

		!!3D FEEDBACK AT HOTSPOT EDITING
		IF GLOB_CONTEXT>20 and GLOB_CONTEXT<40 THEN

				ADDz ds
				MATERIAL fmat
				PRISM_ 5,hr,
					(fth/2)/tan(gs_AngleL),fth/2,15,
					-(fth/2)/tan(gs_AngleL),-fth/2,15,
					templra+(fth/2)/tan(gs_AngleR),-fth/2,15,
					templra-(fth/2)/tan(gs_AngleR),fth/2,15,
					(fth/2)/tan(gs_AngleL),fth/2,-1
				DEL 1

		ELSE



		RESOL rescs
		!! *** HANDRAIL *** !! *****************************************************


		MATERIAL fmat

		ADDx -(hroL)
		ROTz -90+gs_AngleL		!! CONNECTING ANGLE
		ROTy -90
			CUTPLANE
		DEL 3

		ADDx templra+(hroR)
		ROTz 90-gs_AngleR
		ROTy 90
			CUTPLANE
		DEL 3


		RESOL rescs

				MATERIAL fmat

				GROUP "handrail round straight"			!Groups
					ADD  -hroL-XPosL,0,ds+hr-hrd/2
					ROTy 90
					CYLIND templra+(hroL)+XPosL+(hroR)+XPosR,hrd/2
					DEL 2
				ENDGROUP


				IF hrt_m=1 THEN

					ADDz ds+hr-hrh
						PRISM_ 5,hrh,
							-(hroL)-XPosL,hrw/2,15,
							-(hroL)-XPosL,-hrw/2,15,
							templra+(hroR)+XPosR,-hrw/2,15,
							templra+(hroR)+XPosR,hrw/2,15,
							-(hroL)-XPosL,hrw/2,-1
					DEL 1

					ELSE
					PLACEGROUP "handrail round straight"
				ENDIF

		CUTEND
		CUTEND


		!! *** BALUSTERS *** !! *****************************************************

		MATERIAL pmat

		ADDx -(hroL)
		ROTz -90+gs_AngleL		!! CONNECTING ANGLE
		ROTy -90
			CUTPLANE
		DEL 3

		ADDx templra+(hroR)
		ROTz 90-gs_AngleR
		ROTy 90
			CUTPLANE
		DEL 3

				MATERIAL pmat

				IF hrt_m=1 THEN			!Post height calculation
					ph=hr+ds-hrh
					ELSE
					ph=hr+ds-hrd/2
				ENDIF

				GROUP "post round straight"			!Groups
					for i=1 to np step 1
					GOSUB 1000
					ADDx distpost
					NEXT i
					DEL np
				ENDGROUP

				IF hrt_m=1 THEN
					PLACEGROUP "post round straight"
					ELSE
					PLACEGROUP "post round straight"
				ENDIF

				KILLGROUP "handrail round straight"
				KILLGROUP "post round straight"

		CUTEND
		CUTEND

		ENDIF

	DEL 1
	ENDIF




!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** STRAIGHT CURVED *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

	IF ABS(ani)<EPS and ptyp_m<>1 THEN

		!!3D FEEDBACK AT HOTSPOT EDITING
		IF GLOB_CONTEXT>20 and GLOB_CONTEXT<40 THEN

			!!!!FRAME
			MATERIAL fmat

				IF ab<360 THEN
						ADDz ds
						PRISM_ 10,hr,
							0,fth/2,15,
							0,-fth/2+0.00005,15,
							0,-fth/2,79,
							1,0,800,
							(rb+(fth/2))*sin(ab),rb-(rb+(fth/2))*cos(ab),1015,
							(rb-(fth/2)+0.00005)*sin(ab),rb-(rb-(fth/2)+0.00005)*cos(ab),15,
							(rb-(fth/2))*sin(ab),rb-(rb-(fth/2))*cos(ab),79,
							-cos(ab),-sin(ab),800,
							0,fth/2,1015,
							0,fth/2,-1
						DEL 1

				ELSE	!!!ANGLE=360

					ADDz ds
						PRISM_ 12,hr,
							0,-fth/2,79,
							1,0,800,
							0,2*rb+fth/2,1079,
							-1,0,800,
							0,-fth/2,1079,
							0,-fth/2,-1,

							0,fth/2,79,
							1,0,800,
							0,2*rb-fth/2,1079,
							-1,0,800,
							0,fth/2,1079,
							0,fth/2,-1
					DEL 1

				ENDIF

		ELSE


			!! *** HANDRAIL *** !! *****************************************************

			MATERIAL fmat
			RESOL res

			if (ab + alphahroL + alphahroR) < 360 then

				group "handrail round curved"				!Groups
					gamma0 = 360 / rescs
					gamma = 0
					for i = 1 to rescs step 1
						put hrd/2 * cos(gamma), rb + hrd/2 * sin(gamma), 1
						gamma = gamma + gamma0
					next i
					add  0, rb, ds + hr - hrd/2
					roty 90
					rotx 180 - ab - alphahroR
						revolve rescs+1, ab + alphahroL + alphahroR, 1+2+4+8+16+32,
							get (nsp),
							hrd/2, rb, -1
					del 3
				endgroup
				handrailgroupname = "handrail round curved"

				if hrt_m=1 then
					addz ds + hr - hrh
						prism_ 9, hrh,
							(rb - (hrw/2)) * sin(-alphahroL), rb - (rb - (hrw/2)) * cos(alphahroL), 15,
							(rb + (hrw/2) - 0.00005) * sin(-alphahroL), rb - (rb + (hrw/2) - 0.000005) * cos(alphahroL), 15,
							(rb + (hrw/2)) * sin(-alphahroL), rb - (rb + (hrw/2)) * cos(alphahroL), 79,
							cos(alphahroL), sin(-alphahroL), 800,
							(rb + (hrw/2)) * sin(ab + alphahroR), rb - (rb + (hrw/2)) * cos(ab + alphahroR), 1015,
							(rb - (hrw/2) + 0.00005) * sin(ab + alphahroR), rb - (rb - (hrw/2) + 0.00005) * cos(ab + alphahroR), 15,
							(rb - (hrw/2)) * sin(ab + alphahroR), rb - (rb - (hrw/2)) * cos(ab + alphahroR), 79,
							-cos(ab + alphahroR), -sin(ab + alphahroR), 800,
							(rb - (hrw/2)) * sin(-alphahroL), rb - (rb - (hrw/2)) * cos(alphahroL), 1015
					del 1
				else
					placegroup "handrail round curved"
				endif

			else

				group "handrail round curved 360"
					gamma0 = 360 / rescs
					gamma = 0
					for i = 1 to rescs step 1
						put hrd/2 * cos(gamma), rb + hrd/2 * sin(gamma), 1
						gamma = gamma + gamma0
					next i
					add 0, rb, ds + hr - hrd/2
					roty 90
					rotx 180 - ab
						revolve rescs+1, 360, 0,
							get (nsp),
							hrd/2, rb, -1
					del 3
				endgroup
				handrailgroupname = "handrail round curved 360"


				if hrt_m = 1 then
					addz ds+hr-hrh
						prism_ 12, hrh,
							0, -hrw/2, 79,
							1, 0, 800,
							0, 2*rb + hrw/2, 1079,
							-1, 0, 800,
							0, -hrw/2, 1079,
							0, -hrw/2, -1,

							0, hrw/2, 79,
							1, 0, 800,
							0, 2*rb - hrw/2, 1079,
							-1, 0, 800,
							0, hrw/2, 1079,
							0, hrw/2, -1
						del 1
				else
					placegroup "handrail round curved 360"
				endif

			endif

			!!other parts are shorter, circularity checked differently
			if ab < 360 then

					!!! *** Posts *** !!!

					MATERIAL pmat

					IF hrt_m=1 THEN			!Post height calculation
					ph=hr+ds-hrh
					ELSE
						IF pt_m=1 THEN
						ph=hr+ds-hrd
						ELSE
						ph=hr+ds-hrd/2
						ENDIF
					ENDIF

					GROUP "post round curved"			!Groups
						for i=1 to np step 1
						GOSUB 1000
						addy rb
						rotz anglepost
						addy -rb
						NEXT i
						DEL 3*np
					ENDGROUP

					IF hrt_m=1 THEN
					PLACEGROUP "post round curved"
					ELSE
					PLACEGROUP "post round curved"
					ENDIF

					KILLGROUP "post round curved"


			ELSE

					!!! *** Posts *** !!!

					MATERIAL pmat

					IF hrt_m=1 THEN			!Post height calculation
					ph=hr+ds-hrh
					ELSE
						IF pt_m=1 THEN
						ph=hr+ds-hrd
						ELSE
						ph=hr+ds-hrd/2
						ENDIF
					ENDIF

					GROUP "post round curved 360"			!Groups
						for i=1 to np step 1
						GOSUB 1000
						addy rb
						rotz anglepost
						addy -rb
						NEXT i
						DEL 3*np
					ENDGROUP


					IF hrt_m=1 THEN
						PLACEGROUP "post round curved 360"
						ELSE
						PLACEGROUP "post round curved 360"
						ENDIF

						KILLGROUP "post round curved 360"

					ENDIF

			ENDIF
			KILLGROUP handrailgroupname		!!group wasn't used

	ENDIF



!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** STRAIGHT INCLINED *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

IF ABS(ani)>EPS and ptyp_m=1 THEN

	RESOL rescs

		IF rom_m=1 THEN									!Vertical Orientation

			IF rmm_m=2 THEN		!Perpendicular Measurement Extra Values
				hrh=hrh/cos(ani)
				hrd=hrd/cos(ani)
			ENDIF


			IF rmm_m=1 THEN			!!Vertical Measurement
				temp_ds=ds
				temp_hr=hr
			ELSE					!!Perpendicular Measurement
				temp_ds=dsPerp
				temp_hr=hrPerp
			ENDIF


			!!3D FEEDBACK AT HOTSPOT EDITING
			IF GLOB_CONTEXT>20 and GLOB_CONTEXT<40 THEN

				ADD XStartPoslra,0,ZStartPoslra

					MATERIAL fmat

					ROTz -90+gs_AngleL		!!! CONNECTING ANGLE
					ROTy -90
						CUTPLANE
					DEL 2

					ADDx templra
					ROTz 90-gs_AngleR
					ROTy 90
						CUTPLANE
					DEL 3

							ROTx 90
							ADDz -fth/2

								MATERIAL fmat
								PRISM_ 5,fth,
									-XPosL,temp_ds-YPosL,15,
									templra+XPosR,temp_ds+templra*tan(ani)+YPosR,15,
									templra+XPosR,temp_ds+temp_hr+templra*tan(ani)+YPosR,15,
									-XPosL,temp_ds+temp_hr-YPosL,15,
									-XPosL,temp_ds-YPosL,-1
							DEL 2

					CUTEND
					CUTEND

				DEL 1

			ELSE

				ADD XStartPoslra,0,ZStartPoslra

				!! *** HANDRAIL *** !! *****************************************************

				MATERIAL fmat

				ADDx -(hroL)-LengthSize*dpost
				ROTz -90+gs_AngleL		!! CONNECTING ANGLE
				ROTy -90
					CUTPLANE
				DEL 3

				ADDx templra+(hroR)+LengthSize*dpost
				ROTz 90-gs_AngleR
				ROTy 90
					CUTPLANE
				DEL 3

						GROUP "handrail round straight inclined"
							ADD -(hroL)-XPosL,0,temp_ds+temp_hr-hrd/2-(hroL)*tan(ani)-YPosL
							ROTy 90-ani
							CONE (templra+hroL+hroR)/cos(ani)+XPosL+XPosR,hrd/2,hrd/2,90+ani,90+ani
							DEL 1
						ENDGROUP

						IF hrt_m=1 THEN
							ROTx 90
							ADDz -hrw/2
								PRISM_ 5,hrw,
								-(hroL)-XPosL,temp_ds+temp_hr-hrh-(hroL)*tan(ani)-YPosL,15,
								templra+(hroR)+XPosR,temp_ds+temp_hr-hrh+(templra+(hroR))*tan(ani)+YPosR,15,
								templra+(hroR)+XPosR,temp_ds+temp_hr+(templra+(hroR))*tan(ani)+YPosR,15,
								-(hroL)-XPosL,temp_ds+temp_hr-(hroL)*tan(ani)-YPosL,15,
								-(hroL)-XPosL,temp_ds+temp_hr-hrh-(hroL)*tan(ani)-YPosL,-1
							DEL 2
						ELSE
						PLACEGROUP "handrail round straight inclined"
						ENDIF

				CUTEND
				CUTEND


				!!! *** BALUSTERS *** !!! **********************************************

				MATERIAL pmat

				ADDx -(hroL)-LengthSize*dpost
				ROTz -90+gs_AngleL		!! CONNECTING ANGLE
				ROTy -90
					CUTPLANE
				DEL 3

				ADDx templra+(hroR)+LengthSize*dpost
				ROTz 90-gs_AngleR
				ROTy 90
					CUTPLANE
				DEL 3

						MATERIAL pmat

						IF hrt_m=1 THEN			!Post height calculation
						ph=temp_hr+temp_ds-hrh
						ELSE
							IF pt_m=1 THEN
							ph=temp_hr+temp_ds-hrd
							ELSE
							ph=temp_hr+ds-hrd/2
							ENDIF
						ENDIF

						GROUP "post round straight inclined"			!Groups
						for i=1 to np step 1
						GOSUB 1000
						ADD distpost,0,distpost*tan(ani)
						NEXT i
						DEL np
						ENDGROUP


						IF hrt_m=1 THEN
						PLACEGROUP "post round straight inclined"
						ELSE
						PLACEGROUP "post round straight inclined"
						ENDIF

				CUTEND
				CUTEND

				KILLGROUP "handrail round straight inclined"
				KILLGROUP "post round straight inclined"

			DEL 1
		ENDIF

	ELSE						!Perpendicular Orientation
							!Measurement is always perpendicular to inclination in this case

		ROTy -ani
		ADDX XStartPoslrah

			!!3D FEEDBACK AT HOTSPOT EDITING
			IF GLOB_CONTEXT>20 and GLOB_CONTEXT<40 THEN

				ROTx 90
				ADDz -fth/2
					!!FRAME
					MATERIAL fmat
					PRISM_ 5,fth,
						0,ds,15,
						templrah,ds,15,
						templrah,ds+hr,15,
						0,ds+hr,15,
						0,ds,-1
				DEL 2


			ELSE		!! 3D DETAILED MODEL

					!!! Handrail
					MATERIAL fmat

					GROUP "handrail round straight perp"			!Groups
					ADD  -hroLDiagonal,0,ds+hr-hrd/2
					ROTy 90
					CYLIND templrah+hroLDiagonal+hroRDiagonal,hrd/2
					DEL 2
					ENDGROUP


					IF hrt_m=1 THEN
						ROTx 90
						ADDz -hrw/2
							PRISM_ 5,hrw,
								-hroLDiagonal,ds+hr-hrh,15,
								templrah+hroRDiagonal,ds+hr-hrh,15,
								templrah+hroRDiagonal,ds+hr,15,
								-hroLDiagonal,ds+hr,15,
								-hroLDiagonal,ds+hr-hrh,-1
						DEL 2
					ELSE
						PLACEGROUP "handrail round straight perp"
					ENDIF



				!Post
				MATERIAL pmat

				IF hrt_m=1 THEN			!Post height calculation
				ph=hr+ds-hrh
				ELSE
					IF pt_m=1 THEN
					ph=hr+ds-hrd
					ELSE
					ph=hr+ds-hrd/2
					ENDIF
				ENDIF

				GROUP "post round straight perp"			!Groups
				for i=1 to np step 1
				GOSUB 1000
				ADDx distpost
				NEXT i
				DEL np
				ENDGROUP


				IF hrt_m=1 THEN
				PLACEGROUP "post round straight perp"
				ELSE
				PLACEGROUP "post round straight perp"
				ENDIF


				KILLGROUP "handrail round straight perp"
				KILLGROUP "post round straight perp"


			ENDIF
		DEL 1		!! END OF DRAG
		DEL 1		!! END OF ROTATION
	ENDIF

ENDIF



!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** INCLINED AND CURVED *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!

	IF ABS(ani)>EPS and ptyp_m<>1 THEN

			RESOL rescs

			!handrail

			MATERIAL fmat


			!!3D FEEDBACK AT HOTSPOT EDITING
			IF GLOB_CONTEXT>20 and GLOB_CONTEXT<40 THEN

				!!!!FRAME
				MATERIAL fmat

				alphai=-alphaincl
				deltazi=-deltazincl
				for i=1 to nalphaincl+3 step 1
				put rb*sin(alphai),rb-rb*cos(alphai),ds+deltazi
				alphai=alphai+alphaincl
				deltazi=deltazi+deltazincl
				NEXT i

				TUBEA 5,nalphaincl+3,1+2+16+32,
					-fth/2,0,0,
					fth/2,0,0,
					fth/2,hr,0,
					-fth/2,hr,0,
					-fth/2,0,-1,
					get (nsp)

			ELSE

				RestAngleL=alphahroL-nalphahroL*alphaincl		!!Rest Angle= Overhang Angle- Segments Points Angle
				LOHkerul=(rb*pi*alphahroL)/180					!!Perimeter of Handrail
				deltazLOH=LOHkerul*sin(ani)						!!vertical distance of Handrail
				deltara=deltazLOH-(deltazincl*nalphahroL)		!!vertical step of Rest Angle

				RestAngleR=alphahroR-nalphahroR*alphaincl
				ROHkerul=(rb*pi*alphahroR)/180
				deltazROH=ROHkerul*sin(ani)
				deltaraR=deltazROH-(deltazincl*nalphahroR)


				alphai=-(nalphahroL+1)*alphaincl
				deltazi=-(nalphahroL+1)*deltazincl

				if ABS(hroR)<EPS THEN
				tempStep=1
				ELSE
				tempStep=0
				ENDIF

					PUT rb*sin(-alphahroL-restangleL),rb-rb*cos(-alphahroL-restangleL),ds-deltazLOH-deltara
					PUT rb*sin(-alphahroL),rb-rb*cos(-alphahroL),ds-deltazLOH
					PUT rb*sin(-alphahroL+restangleL),rb-rb*cos(-alphahroL+restangleL),ds-deltazLOH+deltara

				if abs(nalphahroL)>EPS then		!! Left Handrail
				FOR i=1 to nalphahroL step 1
					PUT rb*sin(-alphahroL+restangleL+i*alphaincl),rb-rb*cos(-alphahroL+restangleL+i*alphaincl),ds-deltazLOH+deltara+i*deltazincl
				Next i
				endif

				FOR i=0 to nalphaincl+tempStep step 1		!! Handrail between Posts
					PUT rb*sin(i*alphaincl),rb-rb*cos(i*alphaincl),ds+i*deltazincl
				NEXT i

			IF ABS(hroR)>EPS THEN				!! Right Handrail

				if abs(nalphahroR)>EPS then
				FOR i=1 to nalphahroR step 1
					PUT rb*sin((nalphaincl+i)*alphaincl),rb-rb*cos((nalphaincl+i)*alphaincl),ds+(nalphaincl+i)*deltazincl
				Next i
				endif

					PUT rb*sin((nalphaincl+nalphahroR)*alphaincl+restangleR),rb-rb*cos((nalphaincl+nalphahroR)*alphaincl+restangleR),ds+(nalphaincl+nalphahroR)*deltazincl+deltaraR
					PUT rb*sin((nalphaincl+nalphahroR)*alphaincl+2*restangleR),rb-rb*cos((nalphaincl+nalphahroR)*alphaincl+2*restangleR),ds+(nalphaincl+nalphahroR)*deltazincl+2*deltaraR
			ENDIF


				GROUP "handrail round inclined curved"
					ADDz hr-hrd/2
					tubea 6,nsp/3,1+2+16+32,
						-hrd/2,0,1,
						 0,-1,801,
						 hrd/2,0,1001,
						 0,1,801,
						-hrd/2,0,1001,
						-hrd/2,0,-1,
						use (nsp)
					DEL 1
				ENDGROUP

				GROUP "handrail rect inclined curved"
					ADDz hr-hrh
					tubea 5,nsp/3,1+2+16+32,
						-hrw/2,0,0,
						 hrw/2,0,0,
						 hrw/2,hrh,0,
						-hrw/2,hrh,0,
						-hrw/2,0,-1,
						get (nsp)
					DEL 1
				ENDGROUP

				IF hrt_m=1 THEN
				PLACEGROUP "handrail rect inclined curved"
				ELSE
				PLACEGROUP "handrail round inclined curved"
				ENDIF


				!Posts

				MATERIAL pmat

				IF hrt_m=1 THEN			!Post height calculation
				ph=hr+ds-hrh/2
				ELSE
					IF pt_m=1 THEN
					ph=hr+ds-hrd/2
					ELSE
					ph=hr+ds-hrd/2
					ENDIF
				ENDIF

				GROUP "post round inclined curved"			!Groups
					for i=1 to np step 1
					GOSUB 1000
					addy rb
					rotz anglepost
					addy -rb
					ADDz deltazpost
					NEXT i
					DEL 4*np
				ENDGROUP


				IF hrt_m=1 THEN
					PLACEGROUP "post round inclined curved"
					ELSE
					PLACEGROUP "post round inclined curved"
					ENDIF

					KILLGROUP "handrail round inclined curved"
					KILLGROUP "handrail rect inclined curved"
					KILLGROUP "post round inclined curved"

				ENDIF
		ENDIF
	ENDIF


!!DETAILED 3D END!!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! ** HOTSPOTS ** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

	IF LengthSize = 0 THEN			!!!OVERHANG OF HANDRAIL
		temphroL = -hroL
		temphroR = hroR
		RefPoint1 = 1
		RefPoint2 = -1

		InclRefPoint = -tan(ani)

		temphroLDiag = -hroLDiagonal
		temphroRDiag = hroRDiagonal
	ELSE
		temphroL = hroL
		temphroR = -hroR
		RefPoint1 = -1
		RefPoint2 = 1

		InclRefPoint = tan(ani)

		temphroLDiag = hroLDiagonal
		temphroRDiag = -hroRDiagonal
	ENDIF

	!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** STRAIGHT *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

	IF cfs=0 THEN
		IF ABS(ani)<EPS and ptyp_m=1 THEN

				!!!LENGHT
				HOTSPOT 0,0,ds+hr,unID,lra,1+256 : unID=unID+1
				HOTSPOT lra,0,ds+hr,unID,lra,2 : unID=unID+1
				HOTSPOT -1,0,ds+hr,unID,lra,3 : unID=unID+1

				IF LengthSize = 0 THEN
					HOTSPOT 0,0,0,unID,lra,1+256 : unID=unID+1
					HOTSPOT lra,0,0,unID,lra,2 : unID=unID+1
					HOTSPOT -1,0,0,unID,lra,3 : unID=unID+1

					HOTSPOT 0,0,ds,unID,lra,1+256 : unID=unID+1
					HOTSPOT lra,0,ds,unID,lra,2 : unID=unID+1
					HOTSPOT -1,0,ds,unID,lra,3 : unID=unID+1
				ENDIF

				!!!DISTANCE FROM FLOOR
				HOTSPOT templra/2+LengthSize*hroL,0,0,unID,ds,1+128 : unID=unID+1
				HOTSPOT templra/2+LengthSize*hroL,0,ds,unID,ds,2 : unID=unID+1
				HOTSPOT templra/2+LengthSize*hroL,0,-1,unID,ds,3 : unID=unID+1

				!!!HEIGHT OF RAILING
				HOTSPOT templra/2+LengthSize*hroL,0,ds,unID,hr,1 : unID=unID+1
				HOTSPOT templra/2+LengthSize*hroL,0,ds+hr,unID,hr,2 : unID=unID+1
				HOTSPOT templra/2+LengthSize*hroL,0,-1,unID,hr,3 : unID=unID+1


				!OVERHANG OF RAILING
				HOTSPOT 0,0,ds+hr,unID,hroL,1+128 : unID=unID+1
				HOTSPOT temphroL,0,ds+hr,unID,hroL,2 : unID=unID+1
				HOTSPOT RefPoint1,0,ds+hr,unID,hroL,3 : unID=unID+1

				HOTSPOT lra,0,ds+hr,unID,hroR,1+128 : unID=unID+1
				HOTSPOT lra+temphroR,0,ds+hr,unID,hroR,2 : unID=unID+1
				HOTSPOT lra+RefPoint2,0,ds+hr,unID,hroR,3 : unID=unID+1


				IF LengthSize = 1 THEN		! detailed
					! overhang of railing
					HOTSPOT 0,        0, 0, unID, hroL, 1+128 : unID=unID+1
					HOTSPOT temphroL, 0, 0, unID, hroL, 2     : unID=unID+1
					HOTSPOT RefPoint1,0, 0, unID, hroL, 3     : unID=unID+1

					HOTSPOT lra,          0, 0, unID, hroR,1+128 : unID=unID+1
					HOTSPOT lra+temphroR, 0, 0, unID, hroR,2     : unID=unID+1
					HOTSPOT lra+RefPoint2,0, 0, unID, hroR,3     : unID=unID+1
				ENDIF

		ENDIF

	!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** STRAIGHT CURVED *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

		IF ABS(ani)<EPS and ptyp_m<>1 THEN
			IF ab<360 THEN

					IF ptyp_m=3 THEN
					!!!ROTATE
						HOTSPOT 0,rb,ds,unID,ab,6 : unID=unID+1
						HOTSPOT 0,0,ds,unID,ab,4+256 : unID=unID+1
						HOTSPOT rb*sin(ab),rb-rb*cos(ab),ds,unID,ab,5 : unID=unID+1

						HOTSPOT 0,rb,ds+hr,unID,ab,6 : unID=unID+1
						HOTSPOT 0,0,ds+hr,unID,ab,4+256 : unID=unID+1
						HOTSPOT rb*sin(ab),rb-rb*cos(ab),ds+hr,unID,ab,5 : unID=unID+1

					!!!FIX HOTSPOT AT FLOOR
						HOTSPOT 0,0,0,unID : unID=unID+1
						HOTSPOT rb*sin(ab),rb-rb*cos(ab),0,unID : unID=unID+1
					ENDIF

					!!!HEIGHT OF RAILING
						HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),ds,unID,hr,1+128 : unID=unID+1
						HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),ds+hr,unID,hr,2 : unID=unID+1
						HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),-1,unID,ds,3 : unID=unID+1

					!!! DISTANCE FROM FLOOR
						HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),0,unID,ds,1 : unID=unID+1
						HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),ds,unID,ds,2 : unID=unID+1
						HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),-1,unID,ds,3 : unID=unID+1

					IF ptyp_m=2 THEN

					!!!HEIGHT OF RAILING
						HOTSPOT 0,0,ds,unID,hr,1+128 : unID=unID+1
						HOTSPOT 0,0,ds+hr,unID,hr,2 : unID=unID+1
						HOTSPOT 0,0,-1,unID,hr,3 : unID=unID+1

						HOTSPOT rb*sin(ab),rb-rb*cos(ab),ds,unID,hr,1+128 : unID=unID+1
						HOTSPOT rb*sin(ab),rb-rb*cos(ab),ds+hr,unID,hr,2 : unID=unID+1
						HOTSPOT rb*sin(ab),rb-rb*cos(ab),-1,unID,hr,3 : unID=unID+1

					!!! DISTANCE FROM FLOOR
						HOTSPOT 0,0,0,unID,ds,1 : unID=unID+1
						HOTSPOT 0,0,ds,unID,ds,2 : unID=unID+1
						HOTSPOT 0,0,-1,unID,ds,3 : unID=unID+1

						HOTSPOT rb*sin(ab),rb-rb*cos(ab),0,unID,ds,1 : unID=unID+1
						HOTSPOT rb*sin(ab),rb-rb*cos(ab),ds,unID,ds,2 : unID=unID+1
						HOTSPOT rb*sin(ab),rb-rb*cos(ab),-1,unID,ds,3 : unID=unID+1
					ENDIF


			ELSE	!!!ANGLE=360


				!!!HOTSPOTS FOR GRAPHICAL EDITING
				!!!HEIGHT

					HOTSPOT 0,0,ds,unID,hr,1 : unID=unID+1
					HOTSPOT 0,0,ds+hr,unID,hr,2 : unID=unID+1
					HOTSPOT 0,0,-1,unID,hr,3 : unID=unID+1

					HOTSPOT rb,rb,ds,unID,hr,1 : unID=unID+1
					HOTSPOT rb,rb,ds+hr,unID,hr,2 : unID=unID+1
					HOTSPOT rb,rb,-1,unID,hr,3 : unID=unID+1

					HOTSPOT 0,2*rb,ds,unID,hr,1 : unID=unID+1
					HOTSPOT 0,2*rb,ds+hr,unID,hr,2 : unID=unID+1
					HOTSPOT 0,2*rb,-1,unID,hr,3 : unID=unID+1

					HOTSPOT -rb,rb,ds,unID,hr,1 : unID=unID+1
					HOTSPOT -rb,rb,ds+hr,unID,hr,2 : unID=unID+1
					HOTSPOT -rb,rb,-1,unID,hr,3 : unID=unID+1

					HOTSPOT 0,0,0,unID,ds,1 : unID=unID+1
					HOTSPOT 0,0,ds,unID,ds,2 : unID=unID+1
					HOTSPOT 0,0,-1,unID,ds,3 : unID=unID+1

					HOTSPOT rb,rb,0,unID,ds,1 : unID=unID+1
					HOTSPOT rb,rb,ds,unID,ds,2 : unID=unID+1
					HOTSPOT rb,rb,-1,unID,ds,3 : unID=unID+1

					HOTSPOT 0,2*rb,0,unID,ds,1 : unID=unID+1
					HOTSPOT 0,2*rb,ds,unID,ds,2 : unID=unID+1
					HOTSPOT 0,2*rb,-1,unID,ds,3 : unID=unID+1

					HOTSPOT -rb,rb,0,unID,ds,1 : unID=unID+1
					HOTSPOT -rb,rb,ds,unID,ds,2 : unID=unID+1
					HOTSPOT -rb,rb,-1,unID,ds,3 : unID=unID+1

			ENDIF
		ENDIF

	!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** STRAIGHT INCLINED *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

		IF ABS(ani)>EPS and ptyp_m=1 THEN			!!ptyp=Straight
			IF rom_m=1 THEN					!!Vertical Orientation

					IF rmm_m=2 THEN			!!Perpendicular Measurement
						ftw=ftw/cos(ani)
						fbw=fbw/cos(ani)
					ENDIF

					IF rmm_m=1 THEN			!!Vertical Measurement
						temp_ds=ds
						temp_hr=hr
					ELSE					!!Perpendicular Measurement
						temp_ds=dsPerp
						temp_hr=hrPerp
					ENDIF


					!!!	HOTSPOTS FOR GRAPHICAL EDITING
					!!! LENGTH OF RAILING

						HOTSPOT 0,	0,	temp_ds+temp_hr,				unID, lrah, 1+256 : unID=unID+1
						HOTSPOT -1, 0,	temp_ds+temp_hr-tan(ani),		unID, lrah, 3 : unID=unID+1
						HOTSPOT lra,0, 	temp_ds+temp_hr+lra*tan(ani),	unID, lrah, 2 : unID=unID+1

					IF LengthSize = 0 THEN
						HOTSPOT 0,	0,	0,				unID, lrah, 1+256 : unID=unID+1
						HOTSPOT -1, 0,	0-tan(ani),		unID, lrah, 3 : unID=unID+1
						HOTSPOT lra,0, 	0+lra*tan(ani),	unID, lrah, 2 : unID=unID+1

						HOTSPOT 0,	0,	temp_ds,				unID, lrah, 1+256 : unID=unID+1
						HOTSPOT -1, 0,	temp_ds-tan(ani),		unID, lrah, 3 : unID=unID+1
						HOTSPOT lra,0, 	temp_ds+lra*tan(ani),	unID, lrah, 2 : unID=unID+1
					ENDIF

					IF rmm_m=1 THEN
						!!! DISTANCE FROM FLOOR
						HOTSPOT templra/2+LengthSize*hroL,	0,	(templra/2+LengthSize*hroL)*tan(ani),	unID, ds, 1+128 : unID=unID+1
						HOTSPOT templra/2+LengthSize*hroL,	0,	(templra/2+LengthSize*hroL)*tan(ani)-1,	unID, ds, 3 : unID=unID+1
						HOTSPOT templra/2+LengthSize*hroL,	0, 	(templra/2+LengthSize*hroL)*tan(ani)+temp_ds,	unID, ds, 2 : unID=unID+1

						!!! HEIGHT of RAILING
						HOTSPOT templra/2+LengthSize*hroL,	0,	temp_ds+(templra/2+LengthSize*hroL)*tan(ani),	unID, hr, 1+128 : unID=unID+1
						HOTSPOT templra/2+LengthSize*hroL,	0,	temp_ds+(templra/2+LengthSize*hroL)*tan(ani)-1,	unID, hr, 3 : unID=unID+1
						HOTSPOT templra/2+LengthSize*hroL,	0, 	temp_ds+(templra/2+LengthSize*hroL)*tan(ani)+temp_hr,unID, hr, 2 : unID=unID+1

					ELSE
						!!! DISTANCE FROM FLOOR
						HOTSPOT templra/2+LengthSize*hroL,	0,	(templra/2+LengthSize*hroL)*tan(ani),	unID, dsPerp, 1+128, ds : unID=unID+1
						HOTSPOT templra/2+LengthSize*hroL,	0,	(templra/2+LengthSize*hroL)*tan(ani)-1,	unID, dsPerp, 3, ds : unID=unID+1
						HOTSPOT templra/2+LengthSize*hroL,	0, 	(templra/2+LengthSize*hroL)*tan(ani)+temp_ds,	unID, dsPerp, 2, ds : unID=unID+1

						!!! HEIGHT of RAILING
						HOTSPOT templra/2+LengthSize*hroL,	0,	temp_ds+(templra/2+LengthSize*hroL)*tan(ani),	unID, hrPerp, 1+128, hr : unID=unID+1
						HOTSPOT templra/2+LengthSize*hroL,	0,	temp_ds+(templra/2+LengthSize*hroL)*tan(ani)-1,	unID, hrPerp, 3, hr  : unID=unID+1
						HOTSPOT templra/2+LengthSize*hroL,	0, 	temp_ds+(templra/2+LengthSize*hroL)*tan(ani)+temp_hr,unID, hrPerp, 2, hr  : unID=unID+1

					ENDIF

					!!!OVERHANG OF RAILING
						HOTSPOT 0,0,	temp_ds+temp_hr,				unID,hroLDiagonal,1+128,hroL : unID=unID+1
						HOTSPOT temphroL,0,	temp_ds+temp_hr+temphroL*tan(ani),	unID,hroLDiagonal,2	,hroL	: unID=unID+1
						HOTSPOT RefPoint1,0,temp_ds+temp_hr-InclRefPoint,		unID,hroLDiagonal,3	,hroL	: unID=unID+1

						HOTSPOT lra,0,		temp_ds+temp_hr+lra*tan(ani),				unID,hroRDiagonal,1+128,hroR : unID=unID+1
						HOTSPOT lra+temphroR,0,	temp_ds+temp_hr+lra*tan(ani)+temphroR*tan(ani),	unID,hroRDiagonal,2	,hroR	: unID=unID+1
						HOTSPOT lra+RefPoint2,0,	temp_ds+temp_hr+lra*tan(ani)+InclRefPoint,		unID,hroRDiagonal,3	,hroR	: unID=unID+1

					IF LengthSize = 1 THEN
					!!!OVERHANG OF RAILING
						HOTSPOT 0,0,	0,				unID,hroLDiagonal,1+128,hroL : unID=unID+1
						HOTSPOT temphroL,0,	0+temphroL*tan(ani),	unID,hroLDiagonal,2	,hroL	: unID=unID+1
						HOTSPOT RefPoint1,0,0-InclRefPoint,		unID,hroLDiagonal,3	,hroL	: unID=unID+1

						HOTSPOT lra,0,		0+lra*tan(ani),				unID,hroRDiagonal,1+128,hroR : unID=unID+1
						HOTSPOT lra+temphroR,0,	0+lra*tan(ani)+temphroR*tan(ani),	unID,hroRDiagonal,2	,hroR	: unID=unID+1
						HOTSPOT lra+RefPoint2,0,	0+lra*tan(ani)+InclRefPoint,		unID,hroRDiagonal,3	,hroR	: unID=unID+1

					ENDIF


			ELSE			!Perpendicular Orientation
							!Measurement is always perpendicular to inclination in this case

				ROTy -ani

						!!! LENGTH OF RAILING

							HOTSPOT 0,0,ds+hr,unID,lrah,1+256 : unID=unID+1
							HOTSPOT lrah,0,ds+hr,unID,lrah,2 	: unID=unID+1
							HOTSPOT -1,0,ds+hr,unID,lrah,3 	: unID=unID+1

						IF LengthSize = 0 THEN
							HOTSPOT 0,0,0,unID,lrah,1+256 : unID=unID+1
							HOTSPOT lrah,0,0,unID,lrah,2 	: unID=unID+1
							HOTSPOT -1,0,0,unID,lrah,3 	: unID=unID+1

							HOTSPOT 0,0,ds,unID,lrah,1+256 : unID=unID+1
							HOTSPOT lrah,0,ds,unID,lrah,2 	: unID=unID+1
							HOTSPOT -1,0,ds,unID,lrah,3 	: unID=unID+1
						ENDIF

						!!!DISTANCE FROM FLOOR
						HOTSPOT templrah/2+LengthSize*hroLDiagonal,0,0,unID,ds,1+128 : unID=unID+1
						HOTSPOT templrah/2+LengthSize*hroLDiagonal,0,ds,unID,ds,2 : unID=unID+1
						HOTSPOT templrah/2+LengthSize*hroLDiagonal,0,-1,unID,ds,3 : unID=unID+1

						!!! HEIGHT of RAILING
						HOTSPOT templrah/2+LengthSize*hroLDiagonal,0,ds,unID,hr,1 : unID=unID+1
						HOTSPOT templrah/2+LengthSize*hroLDiagonal,0,ds+hr,unID,hr,2 : unID=unID+1
						HOTSPOT templrah/2+LengthSize*hroLDiagonal,0,-1,unID,hr,3 : unID=unID+1


						!!!OVERHANG OF RAILING
						HOTSPOT lrah,0,ds+hr,unID,hroRDiagonal,1+128 , hroR : unID=unID+1
						HOTSPOT lrah+temphroRDiag,0,ds+hr,unID,hroRDiagonal,2 , hroR 	: unID=unID+1
						HOTSPOT lrah+RefPoint2,0,ds+hr,unID,hroRDiagonal,3 , hroR 	: unID=unID+1

						HOTSPOT 0,0,ds+hr,unID,hroLDiagonal,1+128 , hroL: unID=unID+1
						HOTSPOT temphroLDiag,0,ds+hr,unID,hroLDiagonal,2, hroL 	: unID=unID+1
						HOTSPOT RefPoint1,0,ds+hr,unID,hroLDiagonal,3, hroL 	: unID=unID+1

						IF LengthSize = 1 THEN
						!!!OVERHANG OF RAILING
							HOTSPOT lrah,0,0,unID,hroRDiagonal,1+128 , hroR : unID=unID+1
							HOTSPOT lrah+temphroRDiag,0,0,unID,hroRDiagonal,2 , hroR 	: unID=unID+1
							HOTSPOT lrah+RefPoint2,0,0,unID,hroRDiagonal,3 , hroR 	: unID=unID+1

							HOTSPOT 0,0,0,unID,hroLDiagonal,1+128 , hroL: unID=unID+1
							HOTSPOT temphroLDiag,0,0,unID,hroLDiagonal,2, hroL 	: unID=unID+1
							HOTSPOT RefPoint1,0,0,unID,hroLDiagonal,3, hroL 	: unID=unID+1
						ENDIF


				DEL 1

			ENDIF

		ENDIF

!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** INCLINED AND CURVED *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!

		IF ABS(ani)>EPS and ptyp_m<>1 THEN

			!!!HOTSPOTS FOR GRAPHICAL EDITING

			IF ptyp_m=3 THEN
				!!!ROTATE
				HOTSPOT 0,rb,ds+lra*sin(ani),unID,ab,6 : unID=unID+1
				HOTSPOT 0,0,ds+lra*sin(ani),unID,ab,4+128 : unID=unID+1
				HOTSPOT rb*sin(ab),rb-rb*cos(ab),ds+lra*sin(ani),unID,ab,5 : unID=unID+1

				HOTSPOT 0,rb,ds+hr+lra*sin(ani),unID,ab,6 : unID=unID+1
				HOTSPOT 0,0,ds+hr+lra*sin(ani),unID,ab,4+128 : unID=unID+1
				HOTSPOT rb*sin(ab),rb-rb*cos(ab),ds+hr+lra*sin(ani),unID,ab,5 : unID=unID+1
			ENDIF

				!!!HEIGHT OF RAILING
				HOTSPOT 0,0,ds,unID,hr,1 : unID=unID+1
				HOTSPOT 0,0,ds+hr,unID,hr,2 : unID=unID+1
				HOTSPOT 0,0,-1,unID,hr,3 : unID=unID+1

				HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),ds+(lra/2)*sin(ani),unID,hr,1 : unID=unID+1
				HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),ds+hr+(lra/2)*sin(ani),unID,hr,2 : unID=unID+1
				HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),-1,unID,hr,3 : unID=unID+1

				!!!DISTANCE FROM FLOOR
				HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),(lra/2)*sin(ani),unID,ds,1 : unID=unID+1
				HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),ds+(lra/2)*sin(ani),unID,ds,2 : unID=unID+1
				HOTSPOT rb*sin(ab/2),rb-rb*cos(ab/2),-1,unID,ds,3 : unID=unID+1

				HOTSPOT 0,0,0,unID,ds,1 : unID=unID+1
				HOTSPOT 0,0,ds,unID,ds,2 : unID=unID+1
				HOTSPOT 0,0,-1,unID,ds,3 : unID=unID+1

				!!!FIX HOTSPOT AT FLOOR
				HOTSPOT rb*sin(ab),rb-rb*cos(ab),0+lra*sin(ani), unID : unID=unID+1

			IF ptyp_m=2 THEN
				!!!HEIGHT OF RAILING
				HOTSPOT rb*sin(ab),rb-rb*cos(ab),ds+lra*sin(ani),unID,hr,1 : unID=unID+1
				HOTSPOT rb*sin(ab),rb-rb*cos(ab),ds+hr+lra*sin(ani),unID,hr,2 : unID=unID+1
				HOTSPOT rb*sin(ab),rb-rb*cos(ab),-1,unID,hr,3 : unID=unID+1

				!!!DISTANCE FROM FLOOR
				HOTSPOT rb*sin(ab),rb-rb*cos(ab),lra*sin(ani),unID,ds,1+128 : unID=unID+1
				HOTSPOT rb*sin(ab),rb-rb*cos(ab),ds+lra*sin(ani),unID,ds,2 : unID=unID+1
				HOTSPOT rb*sin(ab),rb-rb*cos(ab),-1,unID,ds,3 : unID=unID+1
			ENDIF
		ENDIF

	ENDIF

end


!!SUBROUTINES!!

1000:

!!!!!!!!!!!!!!!!!!!!!!!!!!!! *** MODEL OF BALUSTERS *** !!!!!!!!!!!!!!!!!!!!!!!!!!!!

RESOL rescs
MATERIAL pmat

ROTy -90

IF pt_m = 1 THEN
ADDz 1"
cutplane
DEL 1

ROTx 180
ADDz 1"
cutplane
DEL 2

ROTx 90
ADDz 1"
cutplane
DEL 2

ROTx -90
ADDz 1"
cutplane
DEL 2

	revolve 20, 360, 1+2+4+8+16+32,
		0,              0,    0,
		0,  2*sqr(2)*1",    0,
		3.871",  2*sqr(2)*1",    0,
		3.875", sqr(2)*1",  1,
		1"*tan(15),  -1",   800,
		5/8"/sin(75), 75, 2001,
		3/8"/sin(75), -90, 2000,
		4.9996",  1"*sqr(2)-(5/8"/sin(75)-5/8"/tan(75))-3/8"/sin(75), 0,
		5",  1"*sqr(2)-(5/8"/sin(75)-5/8"/tan(75))-3/8"/sin(75), 1,
		1",  1"*tan(30),   800,
		2",  -50,         2001,
		2",   40,         2000,
		0.0004", 0, 201,
		1",   0,      800,
		1/4",  -90,   2000,
		1/8", 0, 200,
		0.0004", 0, 201,
		1",  1"*tan(20),   800,
		3.5",  -20,         2001,
		ph,  4/8", 0

cutend
cutend
cutend
cutend
else
	revolve 17, 360, 1+2,			!!! 1+2+4+8+16+32,
		0,				0,						1,
		0,				(1/18) *  ph,			1,
		(15/180) * ph,  (1/18) *  ph,			1,
		(20/180) * ph,  (1/36) *  ph,			1001,
		(30/180) * ph,  (1/36) *  ph,			1,
		(81/180) * ph,  (13/180) *  ph,			1,
		(89/180) * ph,  (1/36) *  ph,			1001,
		(92/180) * ph,  (1/36) *  ph,			1,
		(92/180) * ph,  (7.5/180) *  ph,		1,
		(92/180) * ph,	(7.5/180) *  ph + 1,	801,
		(108/180) * ph,	(7.5/180) *  ph,		1001,
		(108/180) * ph,	(1/36) *  ph,			1001,
		(111/180) * ph,	(1/36) *  ph,			1,
		(111/180) * ph,	(1/36) *  ph + 1000,	801,
		(119/180) * ph,	(13/180) *  ph,			1001,
		(170/180) * ph,	(1/36) *  ph,			1,
		ph,				(1/36) *  ph,			1
endif

DEL 1

return
]]>
</Script_3D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_2D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
call "railSymbol2D_m" parameters all	bEnable2DPosts		= 1,
										iHandRailStyle		= hrt_m,
										handRailDiameter	= hrd,
										handRailWidth		= hrw,
										bBreakRailLine		= 0,
										bPostNoCalculation	= 1
]]>
</Script_2D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_1D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
!Rail Wooden Balustrade

EPS=0.0001

np=nbt
fth=0.05		!!!=Balusters Width
dpost=fth/2


!!!!!! Railing Length

IF LengthSize = 1 THEN
	lra2=(lra - (hroL + hroR))
	lrah2=(lrah - (hroLDiagonal + hroRDiagonal))
	templra=lra2
	templrah=lrah2
	XStartPoslra=hrol
	ZStartPoslra=hrol*tan(ani)
	XStartPoslrah=hroLDiagonal
ELSE
	templra=lra
	templrah=lrah
	XStartPoslra=0
	ZStartPoslra=0
	XStartPoslrah=0
ENDIF


!!PARAMETER INPUT CALCULATION!!

IF ptyp_m=1 THEN
	HIDEPARAMETER "ab"
	HIDEPARAMETER "rb"
	HIDEPARAMETER "res"
ENDIF

IF ptyp_m=2 THEN
	IF ABS(rb)>EPS THEN		!!rb<>0
		PARAMETERS ab=(lra*180)/(rb*pi)
		LOCK "ab"
	ENDIF
ENDIF

IF ptyp_m=3 THEN
	PARAMETERS lra=(rb*pi*ab)/180
	LOCK "lra"
ENDIF


!!POST CALCULATION!!

!POST SPACING CALCULATION FOR STRAIGHT AND CURVED RAILS

	if pit_m=2 then
		IF rom_m=2 AND rmm_m=2 THEN
			np=MAX(2, int(lra/dp)+1)
		ELSE
			np=MAX(2, int(lra/dp)+1)
		ENDIF
	endif

	IF rom_m=2 AND rmm_m=2 THEN
		distpost=templrah/(np-1)
	ELSE
		distpost=templra/(np-1)
	ENDIF

	IF ABS(ab-360)<EPS and ABS(ani)<EPS THEN
		anglepost=ab/np
	else
		anglepost=ab/(np-1)
	endif


!ADDITIONAL CALCULATION FOR CURVED AND INCLINED RAILS!!

if ptyp_m<>1 and ABS(ab)>EPS then

!General data
!		alphahro=(hro*180)/(rb*pi) 				!Overhung angle
		alphahroL=(hroL*180)/(rb*pi) 			!Overhung angle
		alphahroR=(hroR*180)/(rb*pi) 			!Overhung angle
deltaz=lra*sin(ani)					!Total height to rise

!For segment points
nalphaincl=int(ab/(360/res))+1 		!number of segment points without overhung
alphaincl=ab/nalphaincl  			!angle between segment points
!		nalphahro=int(alphahro/alphaincl)	!number of segment points at handrail overhung
		nalphahroL=int(alphahroL/alphaincl)	!number of segment points at handrail overhung
		nalphahroR=int(alphahroR/alphaincl)	!number of segment points at handrail overhung
deltazincl=deltaz/nalphaincl 		!vertical step between segment points

!For posts
deltazpost=deltaz/(np-1)			!vertical step between posts


endif
]]>
</Script_1D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_PR SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_PR>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_UI SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_UI>

<Comment SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Comment>

<Picture MIME="image/png" SectVersion="19" SectionFlags="0" SubIdent="0" length_in_bytes="2655" platform="Win">
	<![CDATA[
	696D6167652F706E670089504E470D0A1A0A0000000D494844520000007F0000
	007F0803000000F163ED21000000FC504C5445FFFFFFB29453C3A25BC39C53B6
	A16AD2A95D836B3C7C6234CCAA63B49D62725D34AD9152AC8B4BC59A4EEEEDEA
	BC934CBDA15C756641D2AB62D3B37CEDE8D59283649C824BA38B52DDCCAAB28D
	4B8571439C7C42DAC392E0CDAAF0F0EEE3D4B3D3B36D9C8952BCA974E5DAC3AC
	9864826D4194733C8B7A52B28F51EAE3CCC1AC79B9AE9AB9B09C6F5B33F0EEEA
	86703F71592EDAC38DBAB3A1C3B2839A8D72E2D0ACD6BB84DCD1B3CDB26BE1CB
	9DA17E44E8B665D4AE7AD9D5CBEAC473CBA04FCAC3B39E9478CBBB92DBD8D0CD
	B2728F7F61E4DED7D9CEB0A28E60907F60D2CDC0A69B82DDC376ADA18AC1B9A8
	B0A48DDED0ADD3BC91AF9A709C906F0434B43B0000091449444154785EC59AD7
	92DBB81286D508CC99CA3987C9398F738EBB7BDEFF5D0E257BC4EEB2618F3422
	C5BB295D7CF5A3017CDDB00B5BF83C0CC89FFEDEEC0FB6871F08D30638DD12BD
	782A4C00F0F97696BE3984F9E7CAEB2DD0DB9742000077E5F1C1360ABF63826D
	0373A3D916E807A7A669DBBEEBCAD63696BE3914603BC09EB36D84BF14C3C076
	9CC08DC7BC98FF99DB1109DD0E18EB14B4206F7EFB5408701C606EAB5D288C8C
	7CF9EDAA9817DE672CF6E600DDCF953FE89BF3F00C8C9FDB4ECBB3FEC5E4CC0D
	6B0E67BCF300D0F2CBEFBD324D136A3E63FFA680DCF2B7DF0B614EA7C00CB840
	008DE5C3EF0853D83E70231EDE607EDDF0F2B32C74A34EE1A4728CF96F8A3958
	D65CE0A3B89900761D94FFFE5064CE7F2F1674D63D5EA0761B985F3732E6CFFA
	62BEEDB98C070960913F4E01AFEBD9E6F74ECD1FE1E3F376E1277F4CF25F65C8
	F7AA667FD1E1C8EBB4C1A1F5AF67E89F7B2104CC979EE322EF55C8FE63C5EC2C
	2B4C00CEA399564390936113F1B58CF807AFFA6642071E7512C95EE1FC36E61F
	F24126854FE8E69473D69C175EC792FBDA3BC6F9836A16964DF05330785CFC55
	7225925FE3CD8D9FF83D21866072163D585603CCFF1FE1D7AA9B2E7CE00B1B0C
	6EB452C9B998EF90F57737CB5FB4573693ECEE004B9EF04F117F0C9BE4DFF787
	004360127C2CD99141EA4FF2FBD54D5AD6162630265B7B65A5E44B8E81FDC336
	C56F5787024C9B5DC9EB76618F4A5E90FA03CE0FD54D597668028061CC2D4B25
	57080DC267C4BFD50DF5D5A6690374E3CEAF92F388E44A659FF23762D9C5652B
	BB0F96A59223929F382EF27F4F549F5E783B896E03EB5EB79792BD89896494F5
	AFC3F913F19DBE2D006A3CEA760A0AC9EBC60CF339E28FF8D3F217FB02846FFB
	BCEBD4DA58F24DCC874B5C7FC27F527EEF15081B7C983F62E87C86F843C2C79B
	AC5461C85475DE7ACAFB1108073897C749748D363944F25055D4FFF5085AEB5B
	D60E6CC775DD78115C77089F488621FE994DEFBFD6DAB32C0C1D873D673F2DAB
	FBB4C9515DF2A56180FB6FE372ADA57F2582C53382DB6CFF6E92FE4C9B1C40D5
	7839E4F8FCF73B6B153EB093CF08EE5226C95FAAEC603EEFA8EA5F17ABF3073B
	42D80E04CC8FB1644079C96B40F63FC77C5895EFFD783F0A18377B4D32C962C9
	9603D2E4123EF16FB01ADFAB2EE83EE317DE89DDA492555D321AE653FF1EC24A
	FBEF72D1D5FB01DB49CE1C6D3274D1C690008754ACBFFAFE57171EA600C68F33
	47F975FC92FA966C3222D9337CFFBD50D45F59780060AC7550F80D5FB453017C
	6CB8C4BF2DC4370DE42994FFEF8537E7F4F4B17E97F203649286E3A3FC13927F
	28D6D87FF3AB1E00A2284E554EF8EFF40043CA8C0C19287F09DFBF7434515B36
	C96E02F0C8209229377112506F72B2FE1594BFAAC9F34758560831A7C7E775CC
	3FF940242B8864497E3857F4DF2F1C79FD889146800FCC480A5FEFE3FC7492A3
	F9C921A3F70F90F9EB2FFE1B98F3EC26978BC2EB40D61F4B466714420FB96269
	761BE6F5DF5E8C0500777FF6D51A237CB5E46C0479DDC0FC331BD01F236EFCF9
	FDC8348173E3A1AFD668FE00E7AF29253FD941929954029C1FFE558F347DB30F
	002E6B2EA123CA67944FF253C92A7EFA3C825815FEBFC52306671142D2F56F04
	CA26A701AA2167B7FC26BD341A10DF0E14B374D8AB0070C3504E922F7B18A23B
	F4FCA9247F58634B51E99673DBFDE2FD967F70668D386B7D27929F1844F2C6A3
	244725FFC14D7FB28E6A522A5F403F8D2E8A85930A917C5F2D79C29F82CABF13
	7435E8D691CBB982FF50642C993098298B0C2DB2FE2AC987906E28CBB2B8947F
	E453C99176A534F68964FFC19247A519E0FC03ABC207E9FA1F496EFC393FE1EB
	01824CCA78922E8B732CD91DD5FE1B39D046F95D69AC941FF14B0D1F437CD590
	E31DB20E9A382BE95FBA6EB9DC58A1FE44F22572FEC229A9BF407C6C8D9213DD
	C60F0B10CEF3B3833FF1E9FE27927FDBE0AAFD77D643F9BF39729961F748E3CF
	BA4BE77CD6A3B8AD64FFFA5C1E06CA4BEE904A5E50C9227E4D76536FBD4B8BAF
	E0F74E9592EF710C51F63FD543C4D78F6E5C372E3CFADB23979C0EE78F3BFF3D
	227903ADBF7523E5F12A7C81F90EA93F2AF23B2A398748DEE44BBE95E46717AB
	F0A9649B387F0DE59F607E094BF69B06FFA67CAB2157E28FD54D4683ABF27F47
	922D4C1A91E12DEBAF8F57CC4FF8D052F0EF8964FF43A539D120BA6D3E38CDB2
	6E78D459815F01C2AF3E8ADF73E552D447562D7AB61C5BBC3327B1EADAF5C710
	EA3F0DF33FDEF848F21A97DD94F9183A863065935176553F85C0D2FCDA11E7EE
	6A5422199C7FDA7ACC4BAEA74FA3599ADF92325A973F2192B79C4B72C9D3FC88
	5F313AA96493FCC6DAF9099F4EB258F234FFA4323D204D0E5B9B5F0625BFCCC8
	243D4BA5D18074AED413C9BAD1FAF557F04993457F7A1736F86D77F6E0D879FE
	E3C2DA7CAECC6F0B342C39EE3595FCD2DBC552BC6A7AD2E428F93D45FE447235
	97D1C859E4EF05055472BE04EE6AD698F38B0DF14DCCF7FF519CFFAF23BE93E6
	3F7278B499FC1F47443244B20DD264C01D92EC58B20DE51FBB2AFE4B7C344F42
	3846FC1B576E86FFD1012A391C1921EAD3289A2D259FD47F53F9359AFF1C21C1
	5D5E7223CD91B75FBC07C75A8EBC286E68FDF1733D9DA46BCC439374D47DB344
	BE462F2E4FE43BBE6AFD4B63564092A9494E236770FEC924ADFBB2983639568D
	CB2CF815F22F1928BFB75F6158B2C0A30CF8671F88646CD4E48C2AAC48D6DFC8
	22BFDD4F899E86F327961B20C9D718CB82DFC392D761801EF2BACFEE0E50FE6C
	D61F4BAEDA486F956F7A4F3CEB3EFCF9AE64F1BBD9E6F154F29FD0247D12D6AF
	9EB1386D00AA1BA42A24FF093D72EE85E1E40D917C36FC0A60C9A556DFD5F543
	F63CCE9C5F46A7EA651DF892BFAF6B92E5C0076F0978D1481FF9F7F4FD3A9399
	F3BF970DFC920006CA5FBF7233E77F1DEFA4F1EBCFCF6F1FB47EA2EB49FECCF7
	DF076495B09E5C39CB4BEEF5DB7A7790319DFE77A530B4BB576892BD6F6745C5
	8F4C6C49D1C3503024D93C3EBD962EB2BEAFFBCCCD95EFE93D77A9BC7D7DDF96
	2CDFFC13877B283F3039CB13FF22ACB00BC4B7D9F33CF37B9344F2CBE7B2D27E
	0851F72047FE4938B94A255FB80FD1FC930F5F175FB064720A9F4A36E93290E4
	F3FEF6F6F543D78DB7C8DFAF7765FE7CD2E4B0BBDCB958F26C8BF98B6FF7EBE9
	5CBF8DEF45A3D3CE93F77F030BFD49473CD1D20000000049454E44AE426082
	]]>
</Picture>

<CalledMacros SectVersion="2" SectionFlags="0" SubIdent="0">
	<Macro>
		<MName><![CDATA["railSymbol2D_m"]]></MName>
		<MainGUID>C5C904E6-1706-4CD1-BC8D-6C294B5B40F7</MainGUID>
	</Macro>
</CalledMacros>

<Copyright SectVersion="1" SectionFlags="0" SubIdent="0">
	<Author>GRAPHISOFT</Author>
	<License>
		<Type>CC BY-ND</Type>
		<Version>3.0</Version>
	</License>
</Copyright>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_FWM SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_FWM>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_BWM SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_BWM>

<Keywords SectVersion="1" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Keywords>

</Symbol>
