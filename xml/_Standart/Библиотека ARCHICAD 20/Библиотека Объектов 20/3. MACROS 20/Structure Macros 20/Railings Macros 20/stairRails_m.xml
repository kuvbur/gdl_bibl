<?xml version="1.0" encoding="UTF-8"?>
<Symbol IsArchivable="false" IsPlaceable="false" MainGUID="4A3DDA4A-B43E-4039-B45A-463905CF42AD" MigrationValue="Normal" Owner="1196638531" Signature="1196644685" Version="43">
<Ancestry SectVersion="1" SectionFlags="0" SubIdent="0" Template="false">
	<MainGUID>F938E33A-329D-4A36-BE3E-85E126820996</MainGUID>
	<MainGUID>103E8D2C-8230-42E1-9597-46F84CCE28C0</MainGUID>
</Ancestry>

<CalledMacros SectVersion="2" SectionFlags="0" SubIdent="0">
	<Macro>
		<MName><![CDATA["m_Rail Balustrade"]]></MName>
		<MainGUID>38718C0A-9208-4838-8EBD-E7BFA3109673</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["m_Rail Parallel Bars"]]></MName>
		<MainGUID>D49ED831-3D94-4657-8DAA-7324583CCEF8</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["m_Rail Simple Bar"]]></MName>
		<MainGUID>6F594F19-2447-492C-B7A1-DAA68E580829</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["m_Rail Solid Frame Filled"]]></MName>
		<MainGUID>15DF11F8-C219-48A7-987E-EBF299D4661E</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["m_Rail Solid Frame"]]></MName>
		<MainGUID>901AF9AD-7660-4FFA-B696-44B48357EF6F</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["m_Rail Solid"]]></MName>
		<MainGUID>5A62C50D-A72F-40C5-9223-CDD929C5E91C</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["m_Rail Post with Balusters"]]></MName>
		<MainGUID>25FF9DA9-05FB-488B-B694-9CABDECA9659</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["m_Rail Wired"]]></MName>
		<MainGUID>A487D5F2-3DA5-460B-A650-F87BD918E1C4</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["m_Rail Wooden Balustrade"]]></MName>
		<MainGUID>61BB99B7-1F59-442A-855F-77BAED09FAD2</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["m_Rail Post with Bars"]]></MName>
		<MainGUID>B8221B77-5B8C-480C-BCCB-48839B78C747</MainGUID>
	</Macro>
	<Macro>
		<MName><![CDATA["m_Rail Wired 02"]]></MName>
		<MainGUID>9DF801A8-9A6B-46B9-9074-07FD2D3BC207</MainGUID>
	</Macro>
</CalledMacros>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_3D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
SECT_FILL SYMB_FILL, SYMB_FBGD_PEN, SYMB_FILL_PEN, SYMB_SECT_PEN

if iStairType = RAILS_FOR_COMPLETE_STAIRS then
	IF railType_m = RAIL_BALUSTRADE THEN
		CALL "m_Rail Balustrade" PARAMETERS				cfs					= 1,
														ptyp_m				= ptyp_m,
														ani					= ani,
														rom_m				= NOT(bEnableNonVerticalRail) + rom_m * bEnableNonVerticalRail,
														rmm_m				= NOT(bEnableNonVerticalRail) + rmm_m * bEnableNonVerticalRail,
														lra					= lraSimple,
														lrah				= lraSimple,
														hr					= railHeight,
														hrPerp				= railHeight,
														ds					= railDist,
														dsPerp				= railDist,
														res					= res,
														gs_detlevel_3D_m	= gs_detlevel_3D_m,
														gs_cont_pen			= gs_cont_pen,
														ab					= ab,
														rb					= rb,

														fth					= railFrameThk,
														fsw					= 0.05,
														ftw					= 0.05,
														fbw					= 0.05,
														bw					= railBarDepth,
														bth					= railBarFillThk,
														abdist				= 0.15,
														fmat				= railFrameMat,
														bmat				= railBaluFillMat,
														gs_shadow			= gs_shadow
	ENDIF
	IF railType_m = RAIL_PARALLEL_BARS THEN
		CALL "m_Rail Parallel Bars" PARAMETERS			cfs					= 1,
														ptyp_m				= ptyp_m,
														ani					= ani,
														rom_m				= NOT(bEnableNonVerticalRail) + rom_m * bEnableNonVerticalRail,
														rmm_m				= NOT(bEnableNonVerticalRail) + rmm_m * bEnableNonVerticalRail,
														lra					= lraSimple,
														lrah				= lraSimple,
														hr					= railHeight,
														hrPerp				= railHeight,
														ds					= railDist,
														dsPerp				= railDist,
														res					= res,
														gs_detlevel_3D_m	= gs_detlevel_3D_m,
														gs_cont_pen			= gs_cont_pen,
														ab					= ab,
														rb					= rb,

														nb					= barNumber,
														fth					= railFrameThk,
														bh					= railBarDepth,
														fmat				= railFrameMat,
														gs_shadow			= gs_shadow
	ENDIF
	IF railType_m = RAIL_SIMPLE_BAR THEN
		CALL "m_Rail Simple Bar" PARAMETERS				cfs					= 1,
														ptyp_m				= ptyp_m,
														ani					= ani,
														rom_m				= NOT(bEnableNonVerticalRail) + rom_m * bEnableNonVerticalRail,
														rmm_m				= NOT(bEnableNonVerticalRail) + rmm_m * bEnableNonVerticalRail,
														lra					= lraSimple,
														lrah				= lraSimple,
														hr					= railHeight,
														hrPerp				= railHeight,
														ds					= railDist,
														dsPerp				= railDist,
														res					= res,
														gs_detlevel_3D_m	= gs_detlevel_3D_m,
														gs_cont_pen			= gs_cont_pen,
														ab					= ab,
														rb					= rb,

														fth					= railFrameThk,
														bh					= railBarDepth,
														bd					= railBarDiam,
														btyp_m				= 1,
														fmat				= railFrameMat,

														rescs				= res,
														gs_shadow			= gs_shadow
	ENDIF
	IF railType_m = RAIL_SOLID_FRAME_FILLED THEN
		CALL "m_Rail Solid Frame Filled" PARAMETERS		cfs					= 1,
														ptyp_m				= ptyp_m,
														ani					= ani,
														rom_m				= NOT(bEnableNonVerticalRail) + rom_m * bEnableNonVerticalRail,
														rmm_m				= NOT(bEnableNonVerticalRail) + rmm_m * bEnableNonVerticalRail,
														lra					= lraSimple,
														lrah				= lraSimple,
														hr					= railHeight,
														hrPerp				= railHeight,
														ds					= railDist,
														dsPerp				= railDist,
														res					= res,
														gs_detlevel_3D_m	= gs_detlevel_3D_m,
														gs_cont_pen			= gs_cont_pen,
														ab					= ab,
														rb					= rb,

														gs_frameStyle_m		= 1,
														fth					= railFrameThk,
														fsw					= 0.05,
														ftw					= 0.05,
														fbw					= 0.05,
														fdf					= 0.05,
														bth					= railBarFillThk,
														fmat				= railFrameMat,
														bmat				= railBaluFillMat,
														gs_shadow			= gs_shadow
	ENDIF
	IF railType_m = RAIL_SOLID_FRAME THEN
		CALL "m_Rail Solid Frame" PARAMETERS			cfs					= 1,
														ptyp_m				= ptyp_m,
														ani					= ani,
														rom_m				= NOT(bEnableNonVerticalRail) + rom_m * bEnableNonVerticalRail,
														rmm_m				= NOT(bEnableNonVerticalRail) + rmm_m * bEnableNonVerticalRail,
														lra					= lraSimple,
														lrah				= lraSimple,
														hr					= railHeight,
														hrPerp				= railHeight,
														ds					= railDist,
														dsPerp				= railDist,
														res					= res,
														gs_detlevel_3D_m	= gs_detlevel_3D_m,
														gs_cont_pen			= gs_cont_pen,
														ab					= ab,
														rb					= rb,

														gs_frameStyle_m		= 1,
														fth					= railFrameThk,
														fsw					= 0.05,
														ftw					= 0.05,
														fbw					= 0.05,
														fmat				= railFrameMat,
														gs_shadow			= gs_shadow
	ENDIF
	IF railType_m = RAIL_SOLID THEN
		CALL "m_Rail Solid" PARAMETERS					cfs					= 1,
														ptyp_m				= ptyp_m,
														ani					= ani,
														rom_m				= NOT(bEnableNonVerticalRail) + rom_m * bEnableNonVerticalRail,
														rmm_m				= NOT(bEnableNonVerticalRail) + rmm_m * bEnableNonVerticalRail,
														lra					= lraSimple,
														lrah				= lraSimple,
														hr					= railHeight,
														hrPerp				= railHeight,
														ds					= railDist,
														dsPerp				= railDist,
														res					= res,
														gs_detlevel_3D_m	= gs_detlevel_3D_m,
														gs_cont_pen			= gs_cont_pen,
														ab					= ab,
														rb					= rb,

														fth					= railFrameThk,
														fmat				= railFrameMat,
														gs_shadow			= gs_shadow
	ENDIF

	add additionXComplex, 0, additionZComplex
	IF railType_m = RAIL_POST_WITH_BALUSTERS THEN
		CALL "m_Rail Post with Balusters" PARAMETERS	cfs					= 1,
														ptyp_m				= ptyp_m,
														ani					= ani,
														rom_m				= NOT(bEnableNonVerticalRail) + rom_m * bEnableNonVerticalRail,
														rmm_m				= NOT(bEnableNonVerticalRail) + rmm_m * bEnableNonVerticalRail,
														lra					= lraComplex,
														lrah				= lraComplex,
														hr					= railHeight,
														hrPerp				= railHeight,
														ds					= railHeightComplex,
														dsPerp				= railHeightComplex,
														res					= res,
														gs_detlevel_3D_m	= gs_detlevel_3D_m,
														gs_cont_pen			= gs_cont_pen,
														ab					= ab,
														rb					= rb,

														hrt_m				= 1,
														hrd					= railFrameThk,
														hrw					= railFrameThk,
														hrh					= railFrameThk,
														hroL				= hrovL,
														hroR				= hrovR,

														bt_m				= 1,
														nb					= barNumber,
														bth					= railBarFillThk,
														bw					= railBarDepth,
														pd					= railPostDiam,
														pw					= railPostWidth,
														pth					= railFrameThk,
														pt_m				= 1,
														np					= postNumber,
!!!														gs_PostBaseOverhang	= railPostBaseOv,
														fmat				= railHandrailMat,
														bmat				= railBaluFillMat,
														pmat				= railPostMat,
														rescs				= rescs,
														gs_shadow			= gs_shadow
	ENDIF
	IF railType_m = RAIL_WIRED THEN
		CALL "m_Rail Wired" PARAMETERS					cfs					= 1,
														ptyp_m				= ptyp_m,
														ani					= ani,
														rom_m				= NOT(bEnableNonVerticalRail) + rom_m * bEnableNonVerticalRail,
														rmm_m				= NOT(bEnableNonVerticalRail) + rmm_m * bEnableNonVerticalRail,
														lra					= lraComplex,
														lrah				= lraComplex,
														hr					= railHeight,
														hrPerp				= railHeight,
														ds					= railHeightComplex,
														dsPerp				= railHeightComplex,
														res					= res,
														gs_detlevel_3D_m	= gs_detlevel_3D_m,
														gs_cont_pen			= gs_cont_pen,
														ab					= ab,
														rb					= rb,

														hrt_m				= 1,
														hrd					= railFrameThk,
														hrw					= railFrameThk,
														hrh					= railFrameThk,
														hroL				= hrovL,
														hroR				= hrovR,

														pd					= railPostDiam,
														pw					= railPostWidth,
														pth					= railPostThk,
														pt_m				= 1,
														bt_m				= iBalusterStyle,
														np					= postNumber,
														nb					= barNumber,
														bd					= railBarDiam,
														bth					= railBarFillThk,
														bw					= railBarDepth,
!!!														gs_PostBaseOverhang	= railPostBaseOv,
														fmat				= railHandrailMat,
														bmat				= railBaluFillMat,
														pmat				= railPostMat,
														rescs				= rescs,
														gs_shadow			= gs_shadow
	ENDIF
	IF railType_m = RAIL_WOODEN_BALUSTRADE THEN
		CALL "m_Rail Wooden Balustrade" PARAMETERS		cfs					= 1,
														ptyp_m				= ptyp_m,
														ani					= ani,
														rom_m				= NOT(bEnableNonVerticalRail) + rom_m * bEnableNonVerticalRail,
														rmm_m				= NOT(bEnableNonVerticalRail) + rmm_m * bEnableNonVerticalRail,
														lra					= lraComplex,
														lrah				= lraComplex,
														hr					= railHeight,
														hrPerp				= railHeight,
														ds					= railHeightComplex,
														dsPerp				= railHeightComplex,
														res					= res,
														gs_detlevel_3D_m	= gs_detlevel_3D_m,
														gs_cont_pen			= gs_cont_pen,
														ab					= ab,
														rb					= rb,

														hrt_m				= 1,
														hrd					= railFrameThk,
														hrw					= railFrameThk,
														hrh					= railFrameThk,
														hroL				= hrovL,
														hroR				= hrovR,

														pt_m				= 1,
														dp					= balusterDist,

														pit_m				= 2,
														nbt					= balusterNumber,
														fmat				= railHandrailMat,
														pmat				= railPostMat,
														rescs				= rescs,
														gs_shadow			= gs_shadow
	ENDIF
	IF railType_m = RAIL_POST_WITH_BARS THEN
		CALL "m_Rail Post with Bars" PARAMETERS			cfs					= 1,
														ptyp_m				= ptyp_m,
														ani					= ani,
														rom_m				= NOT(bEnableNonVerticalRail) + rom_m * bEnableNonVerticalRail,
														rmm_m				= NOT(bEnableNonVerticalRail) + rmm_m * bEnableNonVerticalRail,
														lra					= lraComplex,
														lrah				= lraComplex,
														hr					= railHeight,
														hrPerp				= railHeight,
														ds					= railHeightComplex,
														dsPerp				= railHeightComplex,
														res					= res,
														gs_detlevel_3D_m	= gs_detlevel_3D_m,
														gs_cont_pen			= gs_cont_pen,
														ab					= ab,
														rb					= rb,

														hrt_m				= 1,
														hrd					= railFrameThk,
														hrw					= railFrameThk,
														hrh					= railFrameThk,
														hroL				= hrovL,
														hroR				= hrovR,

														bt_m				= 1,
														bth					= railBarFillThk,
														bw					= railBarDepth,
														nb					= barNumber,
														pd					= railPostDiam,
														pw					= railPostWidth,
														pth					= railPostThk,
														pt_m				= 1,
														np					= postNumber,
!!!														sbh					= railDistFromHr,
!!!														gs_PostBaseOverhang	= railPostBaseOv,
														fmat				= railHandrailMat,
														bmat				= railBaluFillMat,
														pmat				= railPostMat,
														rescs				= rescs,
														gs_shadow			= gs_shadow
	ENDIF
	del 1
endif

if iStairType = RAILS_FOR_STAIR_ELEMENTS then
	IF railType_m = RAIL_BALUSTRADE THEN
		CALL "m_Rail Balustrade" PARAMETERS				cfs					= 1,
														ptyp_m				= ptyp_m,
														ani					= ani,
														rom_m				= NOT(bEnableNonVerticalRail) + rom_m * bEnableNonVerticalRail,
														rmm_m				= NOT(bEnableNonVerticalRail) + rmm_m * bEnableNonVerticalRail,
														lra					= lraSimple,
														lrah				= lraSimple,
														hr					= railHeight,
														hrPerp				= railHeight,
														ds					= railDist,
														dsPerp				= railDist,
														res					= res,
														gs_detlevel_3D_m	= gs_detlevel_3D_m,
														gs_cont_pen			= gs_cont_pen,
														ab					= ab,
														rb					= rb,

														fth					= railFrameThk,
														fsw					= railFramesWSide,
														ftw					= railFramesWTop,
														fbw					= railFramesWBot,
														bw					= railBarDepth,
														bth					= railBarFillThk,
														abdist				= balusterDist,
														fmat				= railFrameMat,
														bmat				= railBaluFillMat,
														gs_shadow			= gs_shadow
	ENDIF
	IF railType_m = RAIL_PARALLEL_BARS THEN
		CALL "m_Rail Parallel Bars" PARAMETERS			cfs					= 1,
														ptyp_m				= ptyp_m,
														ani					= ani,
														rom_m				= NOT(bEnableNonVerticalRail) + rom_m * bEnableNonVerticalRail,
														rmm_m				= NOT(bEnableNonVerticalRail) + rmm_m * bEnableNonVerticalRail,
														lra					= lraSimple,
														lrah				= lraSimple,
														hr					= railHeight,
														hrPerp				= railHeight,
														ds					= railDist,
														dsPerp				= railDist,
														res					= res,
														gs_detlevel_3D_m	= gs_detlevel_3D_m,
														gs_cont_pen			= gs_cont_pen,
														ab					= ab,
														rb					= rb,

														nb					= barNumber,
														fth					= railFrameThk,
														bh					= railBarHeight,
														fmat				= railFrameMat,
														gs_shadow			= gs_shadow
	ENDIF
	IF railType_m = RAIL_SIMPLE_BAR THEN
		CALL "m_Rail Simple Bar" PARAMETERS				cfs					= 1,
														ptyp_m				= ptyp_m,
														ani					= ani,
														rom_m				= NOT(bEnableNonVerticalRail) + rom_m * bEnableNonVerticalRail,
														rmm_m				= NOT(bEnableNonVerticalRail) + rmm_m * bEnableNonVerticalRail,
														lra					= lraSimple,
														lrah				= lraSimple,
														hr					= railHeight,
														hrPerp				= railHeight,
														ds					= railDist,
														dsPerp				= railDist,
														res					= res,
														gs_detlevel_3D_m	= gs_detlevel_3D_m,
														gs_cont_pen			= gs_cont_pen,
														ab					= ab,
														rb					= rb,

														fth					= railFrameThk,
														bh					= railBarHeight,
														bd					= railBarDiam,
														btyp_m				= railBarType,
														fmat				= railFrameMat,

														rescs				= res,
														gs_shadow			= gs_shadow
	ENDIF
	IF railType_m = RAIL_SOLID_FRAME_FILLED THEN
		CALL "m_Rail Solid Frame Filled" PARAMETERS		cfs					= 1,
														ptyp_m				= ptyp_m,
														ani					= ani,
														rom_m				= NOT(bEnableNonVerticalRail) + rom_m * bEnableNonVerticalRail,
														rmm_m				= NOT(bEnableNonVerticalRail) + rmm_m * bEnableNonVerticalRail,
														lra					= lraSimple,
														lrah				= lraSimple,
														hr					= railHeight,
														hrPerp				= railHeight,
														ds					= railDist,
														dsPerp				= railDist,
														res					= res,
														gs_detlevel_3D_m	= gs_detlevel_3D_m,
														gs_cont_pen			= gs_cont_pen,
														ab					= ab,
														rb					= rb,

														gs_frameStyle_m		= 1,
														fth					= railFrameThk,
														fsw					= railFramesWSide,
														ftw					= railFramesWTop,
														fbw					= railFramesWBot,
														fdf					= railFillDist,
														bth					= railBarFillThk,
														fmat				= railFrameMat,
														bmat				= railBaluFillMat,
														gs_shadow			= gs_shadow
	ENDIF
	IF railType_m = RAIL_SOLID_FRAME THEN
		CALL "m_Rail Solid Frame" PARAMETERS			cfs					= 1,
														ptyp_m				= ptyp_m,
														ani					= ani,
														rom_m				= NOT(bEnableNonVerticalRail) + rom_m * bEnableNonVerticalRail,
														rmm_m				= NOT(bEnableNonVerticalRail) + rmm_m * bEnableNonVerticalRail,
														lra					= lraSimple,
														lrah				= lraSimple,
														hr					= railHeight,
														hrPerp				= railHeight,
														ds					= railDist,
														dsPerp				= railDist,
														res					= res,
														gs_detlevel_3D_m	= gs_detlevel_3D_m,
														gs_cont_pen			= gs_cont_pen,
														ab					= ab,
														rb					= rb,

														gs_frameStyle_m		= 1,
														fth					= railFrameThk,

														fsw					= railFramesWSide,
														ftw					= railFramesWTop,
														fbw					= railFramesWBot,
														fmat				= railFrameMat,
														gs_shadow			= gs_shadow
	ENDIF
	IF railType_m = RAIL_SOLID THEN
		CALL "m_Rail Solid" PARAMETERS					cfs					= 1,
														ptyp_m				= ptyp_m,
														ani					= ani,
														rom_m				= NOT(bEnableNonVerticalRail) + rom_m * bEnableNonVerticalRail,
														rmm_m				= NOT(bEnableNonVerticalRail) + rmm_m * bEnableNonVerticalRail,
														lra					= lraSimple,
														lrah				= lraSimple,
														hr					= railHeight,
														hrPerp				= railHeight,
														ds					= railDist,
														dsPerp				= railDist,
														res					= res,
														gs_detlevel_3D_m	= gs_detlevel_3D_m,
														gs_cont_pen			= gs_cont_pen,
														ab					= ab,
														rb					= rb,

														fth					= railFrameThk,
														fmat				= railFrameMat,
														gs_shadow			= gs_shadow
	ENDIF

	add additionXComplex, 0, additionZComplex
	IF railType_m = RAIL_POST_WITH_BALUSTERS THEN
		CALL "m_Rail Post with Balusters" PARAMETERS	cfs					= 1,
														ptyp_m				= ptyp_m,
														ani					= ani,
														rom_m				= NOT(bEnableNonVerticalRail) + rom_m * bEnableNonVerticalRail,
														rmm_m				= NOT(bEnableNonVerticalRail) + rmm_m * bEnableNonVerticalRail,
														lra					= lraComplex,
														lrah				= lraComplex,
														hr					= railHeight,
														hrPerp				= railHeight,
														ds					= railDist,
														dsPerp				= railDist,
														res					= res,
														gs_detlevel_3D_m	= gs_detlevel_3D_m,
														gs_cont_pen			= gs_cont_pen,
														ab					= ab,
														rb					= rb,

														hrt_m				= handRailType,
														hrd					= handRailDiam,
														hrw					= handRailWidth,
														hrh					= handRailHeight,
														hroL				= hrovL,
														hroR				= hrovR,

														bt_m				= iBalusterStyle,
														nb					= barNumber,
														bd					= railBarDiam,
														bth					= railBarFillThk,
														bw					= railBarDepth,
														pd					= railPostDiam,
														pw					= railPostWidth,
														pth					= railPostThk,
														pt_m				= railPostType,
														np					= postNumber,
														gs_PostBaseOverhang	= railPostBaseOv,
														fmat				= railFrameMat,
														bmat				= railBaluFillMat,
														pmat				= railPostMat,
														rescs				= rescs,
														gs_shadow			= gs_shadow
	ENDIF
	IF railType_m = RAIL_WIRED THEN
		CALL "m_Rail Wired" PARAMETERS					cfs					= 1,
														ptyp_m				= ptyp_m,
														ani					= ani,
														rom_m				= NOT(bEnableNonVerticalRail) + rom_m * bEnableNonVerticalRail,
														rmm_m				= NOT(bEnableNonVerticalRail) + rmm_m * bEnableNonVerticalRail,
														lra					= lraComplex,
														lrah				= lraComplex,
														hr					= railHeight,
														hrPerp				= railHeight,
														ds					= railDist,
														dsPerp				= railDist,
														res					= res,
														gs_detlevel_3D_m	= gs_detlevel_3D_m,
														gs_cont_pen			= gs_cont_pen,
														ab					= ab,
														rb					= rb,

														hrt_m				= handRailType,
														hrd					= handRailDiam,
														hrw					= handRailWidth,
														hrh					= handRailHeight,
														hroL				= hrovL,
														hroR				= hrovR,

														pd					= railPostDiam,
														pw					= railPostWidth,
														pth					= railPostThk,
														pt_m				= railPostType,
														bt_m				= iBalusterStyle,
														np					= postNumber,
														nb					= barNumber,
														bd					= railBarDiam,
														bth					= railBarFillThk,
														bw					= railBarDepth,
														gs_PostBaseOverhang	= railPostBaseOv,
														fmat				= railFrameMat,
														bmat				= railBaluFillMat,
														pmat				= railPostMat,
														rescs				= rescs,
														gs_shadow			= gs_shadow
	ENDIF

	if bEnableWired02Rail then
		IF railType_m = RAIL_WIRED02 THEN
			CALL "m_Rail Wired 02" PARAMETERS			cfs					= 1,
														ptyp_m				= ptyp_m,
														ani					= ani,
														rom_m				= NOT(bEnableNonVerticalRail) + rom_m * bEnableNonVerticalRail,
														rmm_m				= NOT(bEnableNonVerticalRail) + rmm_m * bEnableNonVerticalRail,
														lra					= lraComplex,
														lrah				= lraComplex,
														hr					= railHeight,
														hrPerp				= railHeight,
														ds					= railDist,
														dsPerp				= railDist,
														res					= res,
														gs_detlevel_3D_m	= gs_detlevel_3D_m,
														gs_cont_pen			= gs_cont_pen,
														ab					= ab,
														rb					= rb,

														hrt_m				= handRailType,
														hrd					= handRailDiam,
														hrw					= handRailWidth,
														hrh					= handRailHeight,
														hroL				= hrovL,
														hroR				= hrovR,

														pw					= railPostWidth,
														pth					= railPostThk,
														bt_m				= iBalusterStyle,
														np					= postNumber,
														nb					= barNumber,
														bd					= railBarDiam,
														bth					= railBarFillThk,
														bw					= railBarDepth,
														sbh					= railDistFromHr,
														gs_PostBaseType_m	= railPostBaseType,
														gs_PostBaseOverhang	= railPostBaseOv,
														fmat				= railFrameMat,
														bmat				= railBaluFillMat,
														pmat				= railPostMat,
														rescs				= rescs,
														gs_shadow			= gs_shadow
		ENDIF
	endif
	IF railType_m = RAIL_WOODEN_BALUSTRADE THEN
		CALL "m_Rail Wooden Balustrade" PARAMETERS		cfs					= 1,
														ptyp_m				= ptyp_m,
														ani					= ani,
														rom_m				= NOT(bEnableNonVerticalRail) + rom_m * bEnableNonVerticalRail,
														rmm_m				= NOT(bEnableNonVerticalRail) + rmm_m * bEnableNonVerticalRail,
														lra					= lraComplex,
														lrah				= lraComplex,
														hr					= railHeight,
														hrPerp				= railHeight,
														ds					= railDist,
														dsPerp				= railDist,
														res					= res,
														gs_detlevel_3D_m	= gs_detlevel_3D_m,
														gs_cont_pen			= gs_cont_pen,
														ab					= ab,
														rb					= rb,

														hrt_m				= handRailType,
														hrd					= handRailDiam,
														hrw					= handRailWidth,
														hrh					= handRailHeight,
														hroL				= hrovL,
														hroR				= hrovR,

														pt_m				= railPostType,
														dp					= balusterDist,
														pit_m				= iParamInputType,
														nbt					= balusterNumber,
														fmat				= railFrameMat,
														pmat				= railPostMat,
														rescs				= rescs,
														gs_shadow			= gs_shadow
	ENDIF
	IF railType_m = RAIL_POST_WITH_BARS THEN
		CALL "m_Rail Post with Bars" PARAMETERS			cfs					= 1,
														ptyp_m				= ptyp_m,
														ani					= ani,
														rom_m				= NOT(bEnableNonVerticalRail) + rom_m * bEnableNonVerticalRail,
														rmm_m				= NOT(bEnableNonVerticalRail) + rmm_m * bEnableNonVerticalRail,
														lra					= lraComplex,
														lrah				= lraComplex,
														hr					= railHeight,
														hrPerp				= railHeight,
														ds					= railDist,
														dsPerp				= railDist,
														res					= res,
														gs_detlevel_3D_m	= gs_detlevel_3D_m,
														gs_cont_pen			= gs_cont_pen,
														ab					= ab,
														rb					= rb,

														hrt_m				= handRailType,
														hrd					= handRailDiam,
														hrw					= handRailWidth,
														hrh					= handRailHeight,
														hroL				= hrovL,
														hroR				= hrovR,

														bt_m				= iBalusterStyle,
														bd					= railBarDiam,
														bth					= railBarFillThk,
														bw					= railBarDepth,
														nb					= barNumber,
														pd					= railPostDiam,
														pw					= railPostWidth,
														pth					= railPostThk,
														pt_m				= railPostType,
														np					= postNumber,
														sbh					= railDistFromHr,
														gs_PostBaseOverhang	= railPostBaseOv,
														fmat				= railFrameMat,
														bmat				= railBaluFillMat,
														pmat				= railPostMat,
														rescs				= rescs,
														gs_shadow			= gs_shadow
	ENDIF
	del 1
endif
]]>
</Script_3D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_2D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_2D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_1D SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[
RAILS_FOR_COMPLETE_STAIRS		= 1
RAILS_FOR_STAIR_ELEMENTS		= 2

if bEnableWired02Rail then
	RAIL_BALUSTRADE				= 1
	RAIL_PARALLEL_BARS			= 2
	RAIL_SIMPLE_BAR				= 3
	RAIL_SOLID_FRAME_FILLED		= 4
	RAIL_SOLID_FRAME			= 5
	RAIL_SOLID					= 6
	RAIL_POST_WITH_BALUSTERS	= 7
	RAIL_WIRED					= 8
	RAIL_WIRED02				= 9
	RAIL_WOODEN_BALUSTRADE		= 10
	RAIL_POST_WITH_BARS			= 11
else
	RAIL_BALUSTRADE				= 1
	RAIL_PARALLEL_BARS			= 2
	RAIL_SIMPLE_BAR				= 3
	RAIL_SOLID_FRAME_FILLED		= 4
	RAIL_SOLID_FRAME			= 5
	RAIL_SOLID					= 6
	RAIL_POST_WITH_BALUSTERS	= 7
	RAIL_WIRED					= 8
	RAIL_WOODEN_BALUSTRADE		= 9
	RAIL_POST_WITH_BARS			= 10
	RAIL_SAMERAILS				= 11
endif

postNumber = max(2, postNumber)
]]>
</Script_1D>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_PR SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_PR>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_UI SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_UI>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_VL SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_VL>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_FWM SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_FWM>

<!-- GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT ===== GDL SCRIPT -->

<Script_BWM SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Script_BWM>

<ParamSection SectVersion="22" SectionFlags="0" SubIdent="0">
	<ParamSectHeader>
		<AutoHotspots>false</AutoHotspots>
		<StatBits>
			<STBit_FixSize/>
		</StatBits>
		<WDLeftFrame>0</WDLeftFrame>
		<WDRightFrame>0</WDRightFrame>
		<WDTopFrame>0</WDTopFrame>
		<WDBotFrame>0</WDBotFrame>
		<LayFlags>65535</LayFlags>
		<WDMirrorThickness>0</WDMirrorThickness>
		<WDWallInset>0</WDWallInset>
	</ParamSectHeader>
	<Parameters>
		<Length Name="A">
			<Description><![CDATA["Dimension 1"]]></Description>
			<Fix/>
			<Value>1</Value>
		</Length>
		<Length Name="B">
			<Description><![CDATA["Dimension 2"]]></Description>
			<Fix/>
			<Value>1</Value>
		</Length>
		<Length Name="ZZYZX">
			<Description><![CDATA["Height"]]></Description>
			<Fix/>
			<Value>1</Value>
		</Length>
		<Boolean Name="AC_show2DHotspotsIn3D">
			<Description><![CDATA["Show 2D Hotspots in 3D"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Boolean>
		<Length Name="ac_bottomlevel">
			<Description><![CDATA["Bottom Level"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>1</Value>
		</Length>
		<Length Name="ac_toplevel">
			<Description><![CDATA["Top Level"]]></Description>
			<Fix/>
			<Flags>
				<ParFlg_Hidden/>
			</Flags>
			<Value>0</Value>
		</Length>
		<Integer Name="railType_m">
			<Description><![CDATA[""]]></Description>
			<Value>1</Value>
		</Integer>
		<Integer Name="iStairType">
			<Description><![CDATA[""]]></Description>
			<Value>1</Value>
		</Integer>
		<Boolean Name="bEnableWired02Rail">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Boolean>
		<Boolean Name="bEnableNonVerticalRail">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Boolean>
		<Length Name="additionXComplex">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="additionZComplex">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<Integer Name="ptyp_m">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Integer>
		<Angle Name="ani">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Angle>
		<Integer Name="rom_m">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Integer>
		<Integer Name="rmm_m">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Integer>
		<Length Name="lraSimple">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="lraComplex">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="railHeight">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="railHeightComplex">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="railDist">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<Angle Name="ab">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Angle>
		<Length Name="rb">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<Integer Name="gs_detlevel_3D_m">
			<Description><![CDATA[""]]></Description>
			<Value>2</Value>
		</Integer>
		<PenColor Name="gs_cont_pen">
			<Description><![CDATA[""]]></Description>
			<Value>10</Value>
		</PenColor>
		<Integer Name="res">
			<Description><![CDATA[""]]></Description>
			<Value>10</Value>
		</Integer>
		<Integer Name="rescs">
			<Description><![CDATA[""]]></Description>
			<Value>10</Value>
		</Integer>
		<Boolean Name="gs_shadow">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Boolean>
		<Separator Name="stairRails_sp0">
			<Description><![CDATA[""]]></Description>
		</Separator>
		<Length Name="railFrameThk">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="railFramesWSide">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="railFramesWTop">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="railFramesWBot">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<Integer Name="railBarType">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Integer>
		<Length Name="railBarDepth">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="railBarHeight">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="railBarFillThk">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="railBarDiam">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="balusterDist">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<Material Name="railFrameMat">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Material>
		<Material Name="railBaluFillMat">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Material>
		<Integer Name="barNumber">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Integer>
		<Length Name="railFillDist">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<Separator Name="stairRails_sp1">
			<Description><![CDATA[""]]></Description>
		</Separator>
		<Integer Name="handRailType">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Integer>
		<Length Name="handRailDiam">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="handRailWidth">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="handRailHeight">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="hrovL">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="hrovR">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<Material Name="railHandrailMat">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Material>
		<Separator Name="stairRails_sp2">
			<Description><![CDATA[""]]></Description>
		</Separator>
		<Integer Name="iBalusterStyle">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Integer>
		<Length Name="railPostDiam">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="railPostWidth">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="railPostThk">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<Integer Name="railPostType">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Integer>
		<Integer Name="postNumber">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Integer>
		<Material Name="railPostMat">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Material>
		<Integer Name="iParamInputType">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Integer>
		<Integer Name="balusterNumber">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Integer>
		<Integer Name="railPostBaseType">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Integer>
		<Length Name="railPostBaseOv">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
		<Length Name="railDistFromHr">
			<Description><![CDATA[""]]></Description>
			<Value>0</Value>
		</Length>
	</Parameters>
</ParamSection>

<Copyright SectVersion="1" SectionFlags="0" SubIdent="0">
	<Author>GRAPHISOFT</Author>
	<License>
		<Type>CC BY-ND</Type>
		<Version>3.0</Version>
	</License>
</Copyright>

<Keywords SectVersion="1" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Keywords>

<Comment SectVersion="20" SectionFlags="0" SubIdent="0">
<![CDATA[]]>
</Comment>

</Symbol>
